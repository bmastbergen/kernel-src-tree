KVM: x86: remove unnecessary rmap walk of read-only memslots

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Anthony Yznaga <anthony.yznaga@oracle.com>
commit 5688fed649f15a232e75148afb0a28864046f44c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5688fed6.failed

There's no write access to remove.  An existing memslot cannot be updated
to set or clear KVM_MEM_READONLY, and any mappings established in a newly
created or moved read-only memslot will already be read-only.

	Signed-off-by: Anthony Yznaga <anthony.yznaga@oracle.com>
Message-Id: <1591128450-11977-2-git-send-email-anthony.yznaga@oracle.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5688fed649f15a232e75148afb0a28864046f44c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 68dd04e4e6c5,e11e0494f833..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -9908,11 -10142,9 +9908,15 @@@ int kvm_arch_prepare_memory_region(stru
  static void kvm_mmu_slot_apply_flags(struct kvm *kvm,
  				     struct kvm_memory_slot *new)
  {
++<<<<<<< HEAD
 +	/* Still write protect RO slot */
 +	if (new->flags & KVM_MEM_READONLY) {
 +		kvm_mmu_slot_remove_write_access(kvm, new, PT_PAGE_TABLE_LEVEL);
++=======
+ 	/* Nothing to do for RO slots */
+ 	if (new->flags & KVM_MEM_READONLY)
++>>>>>>> 5688fed649f1 (KVM: x86: remove unnecessary rmap walk of read-only memslots)
  		return;
- 	}
  
  	/*
  	 * Call kvm_x86_ops dirty logging hooks when they are valid.
* Unmerged path arch/x86/kvm/x86.c
