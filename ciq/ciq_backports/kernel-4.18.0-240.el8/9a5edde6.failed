libperf: Add perf_evlist__add() function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 9a5edde6d3a6fb26101406534f7a5d09a9fcd362
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9a5edde6.failed

Add the perf_evlist__add() function to add a perf_evsel in a perf_evlist
struct.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-40-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 9a5edde6d3a6fb26101406534f7a5d09a9fcd362)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/evlist.c
#	tools/perf/lib/include/perf/evlist.h
#	tools/perf/lib/libperf.map
#	tools/perf/util/evlist.c
diff --cc tools/perf/lib/libperf.map
index 3536242c545c,06ccf31eb24d..000000000000
--- a/tools/perf/lib/libperf.map
+++ b/tools/perf/lib/libperf.map
@@@ -1,6 -1,17 +1,20 @@@
  LIBPERF_0.0.1 {
  	global:
  		libperf_set_print;
++<<<<<<< HEAD
++=======
+ 		perf_cpu_map__dummy_new;
+ 		perf_cpu_map__get;
+ 		perf_cpu_map__put;
+ 		perf_thread_map__new_dummy;
+ 		perf_thread_map__set_pid;
+ 		perf_thread_map__comm;
+ 		perf_thread_map__get;
+ 		perf_thread_map__put;
+ 		perf_evsel__init;
+ 		perf_evlist__init;
+ 		perf_evlist__add;
++>>>>>>> 9a5edde6d3a6 (libperf: Add perf_evlist__add() function)
  	local:
  		*;
  };
diff --cc tools/perf/util/evlist.c
index 4739b7914374,f2b86f49ab8d..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -178,10 -178,10 +178,14 @@@ static void perf_evlist__propagate_maps
  		__perf_evlist__propagate_maps(evlist, evsel);
  }
  
 -void evlist__add(struct evlist *evlist, struct evsel *entry)
 +void perf_evlist__add(struct perf_evlist *evlist, struct perf_evsel *entry)
  {
+ 	perf_evlist__add(&evlist->core, &entry->core);
  	entry->evlist = evlist;
++<<<<<<< HEAD
 +	list_add_tail(&entry->node, &evlist->entries);
++=======
++>>>>>>> 9a5edde6d3a6 (libperf: Add perf_evlist__add() function)
  	entry->idx = evlist->nr_entries;
  	entry->tracking = !entry->idx;
  
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/include/perf/evlist.h
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/include/perf/evlist.h
* Unmerged path tools/perf/lib/libperf.map
* Unmerged path tools/perf/util/evlist.c
