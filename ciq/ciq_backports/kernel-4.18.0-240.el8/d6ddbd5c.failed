drm/ast: Don't check new mode if CRTC is being disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Thomas Zimmermann <tzimmermann@suse.de>
commit d6ddbd5c97d1b9156646ac5c42b8851edd664ee2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d6ddbd5c.failed

Suspending failed because there's no mode if the CRTC is being
disabled. Early-out in this case. This fixes runtime PM for ast.

v3:
	* fixed commit message
v2:
	* added Tested-by/Reported-by tags
	* added Fixes tags and CC (Sam)
	* improved comment

	Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
	Reported-by: Cary Garrett <cogarre@gmail.com>
	Tested-by: Cary Garrett <cogarre@gmail.com>
	Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Fixes: b48e1b6ffd28 ("drm/ast: Add CRTC helpers for atomic modesetting")
	Cc: Thomas Zimmermann <tzimmermann@suse.de>
	Cc: Gerd Hoffmann <kraxel@redhat.com>
	Cc: Dave Airlie <airlied@redhat.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Sam Ravnborg <sam@ravnborg.org>
	Cc: <stable@vger.kernel.org> # v5.6+
Link: https://patchwork.freedesktop.org/patch/msgid/20200507090640.21561-1-tzimmermann@suse.de
(cherry picked from commit d6ddbd5c97d1b9156646ac5c42b8851edd664ee2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/ast/ast_mode.c
diff --cc drivers/gpu/drm/ast/ast_mode.c
index a1cb020e07e5,7d39b858c9f1..000000000000
--- a/drivers/gpu/drm/ast/ast_mode.c
+++ b/drivers/gpu/drm/ast/ast_mode.c
@@@ -599,22 -802,20 +599,38 @@@ static int ast_crtc_mode_set(struct drm
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	ret = ast_get_vbios_mode_info(crtc, mode, adjusted_mode, &vbios_mode);
 +	if (ret == false)
++=======
+ 	if (!state->enable)
+ 		return 0; /* no mode checks if CRTC is being disabled */
+ 
+ 	ast_state = to_ast_crtc_state(state);
+ 
+ 	format = ast_state->format;
+ 	if (!format)
+ 		return 0;
+ 
+ 	succ = ast_get_vbios_mode_info(format, &state->mode,
+ 				       &state->adjusted_mode,
+ 				       &ast_state->vbios_mode_info);
+ 	if (!succ)
++>>>>>>> d6ddbd5c97d1 (drm/ast: Don't check new mode if CRTC is being disabled)
  		return -EINVAL;
 +	ast_open_key(ast);
 +
 +	ast_set_index_reg(ast, AST_IO_CRTC_PORT, 0xa1, 0x06);
 +
 +	ast_set_std_reg(crtc, adjusted_mode, &vbios_mode);
 +	ast_set_crtc_reg(crtc, adjusted_mode, &vbios_mode);
 +	ast_set_offset_reg(crtc);
 +	ast_set_dclk_reg(dev, adjusted_mode, &vbios_mode);
 +	ast_set_ext_reg(crtc, adjusted_mode, &vbios_mode);
 +	ast_set_sync_reg(dev, adjusted_mode, &vbios_mode);
 +	ast_set_dac_reg(crtc, adjusted_mode, &vbios_mode);
 +
 +	ast_crtc_mode_set_base(crtc, x, y, old_fb);
  
  	return 0;
  }
* Unmerged path drivers/gpu/drm/ast/ast_mode.c
