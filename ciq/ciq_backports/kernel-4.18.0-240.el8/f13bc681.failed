r8169: re-enable MSI on RTL8168c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit f13bc68131b0c0d67a77fb43444e109828a983bf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/f13bc681.failed

The original change fixed an issue on RTL8168b by mimicking the vendor
driver behavior to disable MSI on chip versions before RTL8168d.
This however now caused an issue on a system with RTL8168c, see [0].
Therefore leave MSI disabled on RTL8168b, but re-enable it on RTL8168c.

[0] https://bugzilla.redhat.com/show_bug.cgi?id=1792839

Fixes: 003bd5b4a7b4 ("r8169: don't use MSI before RTL8168d")
	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f13bc68131b0c0d67a77fb43444e109828a983bf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169_main.c
diff --cc drivers/net/ethernet/realtek/r8169_main.c
index 95af9a61f708,a9bdafd15a35..000000000000
--- a/drivers/net/ethernet/realtek/r8169_main.c
+++ b/drivers/net/ethernet/realtek/r8169_main.c
@@@ -5089,9 -5193,13 +5089,14 @@@ static int rtl_alloc_irq(struct rtl8169
  		rtl_unlock_config_regs(tp);
  		RTL_W8(tp, Config2, RTL_R8(tp, Config2) & ~MSIEnable);
  		rtl_lock_config_regs(tp);
++<<<<<<< HEAD
++=======
+ 		/* fall through */
+ 	case RTL_GIGA_MAC_VER_07 ... RTL_GIGA_MAC_VER_17:
++>>>>>>> f13bc68131b0 (r8169: re-enable MSI on RTL8168c)
  		flags = PCI_IRQ_LEGACY;
 -		break;
 -	default:
 +	} else {
  		flags = PCI_IRQ_ALL_TYPES;
 -		break;
  	}
  
  	return pci_alloc_irq_vectors(tp->pci_dev, 1, 1, flags);
* Unmerged path drivers/net/ethernet/realtek/r8169_main.c
