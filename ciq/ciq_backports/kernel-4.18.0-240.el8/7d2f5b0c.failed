crypto: sha256 - Add sha224 support to sha256 library code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Hans de Goede <hdegoede@redhat.com>
commit 7d2f5b0c43e0bb346fbf78daefd68cd0bfc56ca3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7d2f5b0c.failed

Add sha224 support to the lib/crypto/sha256 library code. This will allow
us to replace both the sha256 and sha224 parts of crypto/sha256_generic.c
when we remove the code duplication in further patches in this series.

	Suggested-by: Eric Biggers <ebiggers@kernel.org>
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 7d2f5b0c43e0bb346fbf78daefd68cd0bfc56ca3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/crypto/sha256.c
diff --cc lib/crypto/sha256.c
index 75cf3499a1c2,45ad87520769..000000000000
--- a/lib/crypto/sha256.c
+++ b/lib/crypto/sha256.c
@@@ -222,7 -219,24 +222,23 @@@ int sha256_init(struct sha256_state *sc
  
  	return 0;
  }
 -EXPORT_SYMBOL(sha256_init);
  
+ int sha224_init(struct sha256_state *sctx)
+ {
+ 	sctx->state[0] = SHA224_H0;
+ 	sctx->state[1] = SHA224_H1;
+ 	sctx->state[2] = SHA224_H2;
+ 	sctx->state[3] = SHA224_H3;
+ 	sctx->state[4] = SHA224_H4;
+ 	sctx->state[5] = SHA224_H5;
+ 	sctx->state[6] = SHA224_H6;
+ 	sctx->state[7] = SHA224_H7;
+ 	sctx->count = 0;
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL(sha224_init);
+ 
  int sha256_update(struct sha256_state *sctx, const u8 *data, unsigned int len)
  {
  	unsigned int partial, done;
@@@ -252,8 -266,15 +268,14 @@@
  
  	return 0;
  }
 -EXPORT_SYMBOL(sha256_update);
  
- int sha256_final(struct sha256_state *sctx, u8 *out)
+ int sha224_update(struct sha256_state *sctx, const u8 *data, unsigned int len)
+ {
+ 	return sha256_update(sctx, data, len);
+ }
+ EXPORT_SYMBOL(sha224_update);
+ 
+ static int __sha256_final(struct sha256_state *sctx, u8 *out, int digest_words)
  {
  	__be32 *dst = (__be32 *)out;
  	__be64 bits;
@@@ -281,3 -302,15 +303,18 @@@
  
  	return 0;
  }
++<<<<<<< HEAD
++=======
+ 
+ int sha256_final(struct sha256_state *sctx, u8 *out)
+ {
+ 	return __sha256_final(sctx, out, 8);
+ }
+ EXPORT_SYMBOL(sha256_final);
+ 
+ int sha224_final(struct sha256_state *sctx, u8 *out)
+ {
+ 	return __sha256_final(sctx, out, 7);
+ }
+ EXPORT_SYMBOL(sha224_final);
++>>>>>>> 7d2f5b0c43e0 (crypto: sha256 - Add sha224 support to sha256 library code)
diff --git a/include/crypto/sha256.h b/include/crypto/sha256.h
index 6791d21adc71..4021eda8472b 100644
--- a/include/crypto/sha256.h
+++ b/include/crypto/sha256.h
@@ -27,4 +27,9 @@ extern int sha256_update(struct sha256_state *sctx, const u8 *input,
 			 unsigned int length);
 extern int sha256_final(struct sha256_state *sctx, u8 *hash);
 
+extern int sha224_init(struct sha256_state *sctx);
+extern int sha224_update(struct sha256_state *sctx, const u8 *input,
+			 unsigned int length);
+extern int sha224_final(struct sha256_state *sctx, u8 *hash);
+
 #endif /* SHA256_H */
* Unmerged path lib/crypto/sha256.c
