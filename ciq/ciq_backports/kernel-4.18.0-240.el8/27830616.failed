perf event: Move perf_event__synthesize* to event.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 278306163882a3557fb2c69fd2cc632a2f9ef601
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/27830616.failed

Where is the perf_event__handler_t typedef they need, which was the only
reason for header.h to be including event.h, untangle that.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-outjyzh1o29ndcv9lsqyzt87@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 278306163882a3557fb2c69fd2cc632a2f9ef601)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/header.h
diff --cc tools/perf/util/header.h
index 5b3abe4172e2,999dac41871e..000000000000
--- a/tools/perf/util/header.h
+++ b/tools/perf/util/header.h
@@@ -92,8 -92,10 +92,10 @@@ struct perf_header 
  	struct perf_env 	env;
  };
  
 -struct evlist;
 +struct perf_evlist;
  struct perf_session;
+ struct perf_tool;
+ union perf_event;
  
  int perf_session__read_header(struct perf_session *session);
  int perf_session__write_header(struct perf_session *session,
@@@ -115,54 -117,16 +117,57 @@@ int perf_header__process_sections(struc
  
  int perf_header__fprintf_info(struct perf_session *s, FILE *fp, bool full);
  
++<<<<<<< HEAD
 +int perf_event__synthesize_features(struct perf_tool *tool,
 +				    struct perf_session *session,
 +				    struct perf_evlist *evlist,
 +				    perf_event__handler_t process);
 +
 +int perf_event__synthesize_extra_attr(struct perf_tool *tool,
 +				      struct perf_evlist *evsel_list,
 +				      perf_event__handler_t process,
 +				      bool is_pipe);
 +
 +int perf_event__process_feature(struct perf_session *session,
 +				union perf_event *event);
 +
 +int perf_event__synthesize_attr(struct perf_tool *tool,
 +				struct perf_event_attr *attr, u32 ids, u64 *id,
 +				perf_event__handler_t process);
 +int perf_event__synthesize_attrs(struct perf_tool *tool,
 +				 struct perf_evlist *evlist,
 +				 perf_event__handler_t process);
 +int perf_event__synthesize_event_update_unit(struct perf_tool *tool,
 +					     struct perf_evsel *evsel,
 +					     perf_event__handler_t process);
 +int perf_event__synthesize_event_update_scale(struct perf_tool *tool,
 +					      struct perf_evsel *evsel,
 +					      perf_event__handler_t process);
 +int perf_event__synthesize_event_update_name(struct perf_tool *tool,
 +					     struct perf_evsel *evsel,
 +					     perf_event__handler_t process);
 +int perf_event__synthesize_event_update_cpus(struct perf_tool *tool,
 +					     struct perf_evsel *evsel,
 +					     perf_event__handler_t process);
++=======
+ int perf_event__process_feature(struct perf_session *session,
+ 				union perf_event *event);
++>>>>>>> 278306163882 (perf event: Move perf_event__synthesize* to event.h)
  int perf_event__process_attr(struct perf_tool *tool, union perf_event *event,
 -			     struct evlist **pevlist);
 +			     struct perf_evlist **pevlist);
  int perf_event__process_event_update(struct perf_tool *tool,
  				     union perf_event *event,
 -				     struct evlist **pevlist);
 +				     struct perf_evlist **pevlist);
  size_t perf_event__fprintf_event_update(union perf_event *event, FILE *fp);
++<<<<<<< HEAD
 +
 +int perf_event__synthesize_tracing_data(struct perf_tool *tool,
 +					int fd, struct perf_evlist *evlist,
 +					perf_event__handler_t process);
++=======
++>>>>>>> 278306163882 (perf event: Move perf_event__synthesize* to event.h)
  int perf_event__process_tracing_data(struct perf_session *session,
  				     union perf_event *event);
- 
- int perf_event__synthesize_build_id(struct perf_tool *tool,
- 				    struct dso *pos, u16 misc,
- 				    perf_event__handler_t process,
- 				    struct machine *machine);
  int perf_event__process_build_id(struct perf_session *session,
  				 union perf_event *event);
  bool is_perf_magic(u64 magic);
diff --git a/tools/perf/util/event.h b/tools/perf/util/event.h
index ba0ec1b6aad3..3a4589fed11d 100644
--- a/tools/perf/util/event.h
+++ b/tools/perf/util/event.h
@@ -591,6 +591,9 @@ union perf_event {
 
 void perf_event__print_totals(void);
 
+struct evlist;
+struct evsel;
+struct perf_session;
 struct perf_tool;
 struct thread_map;
 struct cpu_map;
@@ -602,6 +605,39 @@ typedef int (*perf_event__handler_t)(struct perf_tool *tool,
 				     struct perf_sample *sample,
 				     struct machine *machine);
 
+int perf_event__synthesize_attr(struct perf_tool *tool,
+				struct perf_event_attr *attr, u32 ids, u64 *id,
+				perf_event__handler_t process);
+int perf_event__synthesize_attrs(struct perf_tool *tool,
+				 struct evlist *evlist,
+				 perf_event__handler_t process);
+int perf_event__synthesize_build_id(struct perf_tool *tool,
+				    struct dso *pos, u16 misc,
+				    perf_event__handler_t process,
+				    struct machine *machine);
+int perf_event__synthesize_extra_attr(struct perf_tool *tool,
+				      struct evlist *evsel_list,
+				      perf_event__handler_t process,
+				      bool is_pipe);
+int perf_event__synthesize_event_update_cpus(struct perf_tool *tool,
+					     struct evsel *evsel,
+					     perf_event__handler_t process);
+int perf_event__synthesize_event_update_name(struct perf_tool *tool,
+					     struct evsel *evsel,
+					     perf_event__handler_t process);
+int perf_event__synthesize_event_update_scale(struct perf_tool *tool,
+					      struct evsel *evsel,
+					      perf_event__handler_t process);
+int perf_event__synthesize_event_update_unit(struct perf_tool *tool,
+					     struct evsel *evsel,
+					     perf_event__handler_t process);
+int perf_event__synthesize_features(struct perf_tool *tool,
+				    struct perf_session *session,
+				    struct evlist *evlist,
+				    perf_event__handler_t process);
+int perf_event__synthesize_tracing_data(struct perf_tool *tool,
+					int fd, struct evlist *evlist,
+					perf_event__handler_t process);
 int perf_event__synthesize_thread_map(struct perf_tool *tool,
 				      struct thread_map *threads,
 				      perf_event__handler_t process,
* Unmerged path tools/perf/util/header.h
