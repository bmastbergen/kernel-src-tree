perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 2975489458c59ce2e348b1b3aef5d8d2acb5cc8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/29754894.failed

We are already passing things like:

  symbol__annotate(ms->sym, ms->map, ...)

So shorten the signature of such functions to receive the 'map_symbol'
pointer.

This also paves the way to having the 'struct map_groups' pointer in the
'struct map_symbol' so that we can get rid of 'struct map'->groups.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-23yx8v1t41nzpkpi7rdrozww@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 2975489458c59ce2e348b1b3aef5d8d2acb5cc8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/annotate.c
#	tools/perf/ui/gtk/annotate.c
#	tools/perf/util/annotate.c
#	tools/perf/util/annotate.h
diff --cc tools/perf/ui/browsers/annotate.c
index e67880bf1efe,ad1fe5b6d0cd..000000000000
--- a/tools/perf/ui/browsers/annotate.c
+++ b/tools/perf/ui/browsers/annotate.c
@@@ -406,10 -407,10 +406,10 @@@ static int sym_title(struct symbol *sym
   * to the calling function.
   */
  static bool annotate_browser__callq(struct annotate_browser *browser,
 -				    struct evsel *evsel,
 +				    struct perf_evsel *evsel,
  				    struct hist_browser_timer *hbt)
  {
- 	struct map_symbol *ms = browser->b.priv;
+ 	struct map_symbol *ms = browser->b.priv, target_ms;
  	struct disasm_line *dl = disasm_line(browser->selection);
  	struct annotation *notes;
  	char title[SYM_TITLE_MAX_SIZE];
@@@ -873,10 -876,10 +875,10 @@@ int map_symbol__tui_annotate(struct map
  			     struct hist_browser_timer *hbt,
  			     struct annotation_options *opts)
  {
- 	return symbol__tui_annotate(ms->sym, ms->map, evsel, hbt, opts);
+ 	return symbol__tui_annotate(ms, evsel, hbt, opts);
  }
  
 -int hist_entry__tui_annotate(struct hist_entry *he, struct evsel *evsel,
 +int hist_entry__tui_annotate(struct hist_entry *he, struct perf_evsel *evsel,
  			     struct hist_browser_timer *hbt,
  			     struct annotation_options *opts)
  {
@@@ -887,8 -890,7 +889,12 @@@
  	return map_symbol__tui_annotate(&he->ms, evsel, hbt, opts);
  }
  
++<<<<<<< HEAD
 +int symbol__tui_annotate(struct symbol *sym, struct map *map,
 +			 struct perf_evsel *evsel,
++=======
+ int symbol__tui_annotate(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  			 struct hist_browser_timer *hbt,
  			 struct annotation_options *opts)
  {
diff --cc tools/perf/ui/gtk/annotate.c
index 4177df198d2e,22cc240f7371..000000000000
--- a/tools/perf/ui/gtk/annotate.c
+++ b/tools/perf/ui/gtk/annotate.c
@@@ -91,10 -91,11 +91,16 @@@ static int perf_gtk__get_line(char *buf
  	return ret;
  }
  
++<<<<<<< HEAD
 +static int perf_gtk__annotate_symbol(GtkWidget *window, struct symbol *sym,
 +				struct map *map, struct perf_evsel *evsel,
++=======
+ static int perf_gtk__annotate_symbol(GtkWidget *window, struct map_symbol *ms,
+ 				struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  				struct hist_browser_timer *hbt __maybe_unused)
  {
+ 	struct symbol *sym = ms->sym;
  	struct disasm_line *pos, *n;
  	struct annotation *notes;
  	GType col_types[MAX_ANN_COLS];
@@@ -160,10 -161,10 +166,15 @@@
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int symbol__gtk_annotate(struct symbol *sym, struct map *map,
 +				struct perf_evsel *evsel,
++=======
+ static int symbol__gtk_annotate(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  				struct hist_browser_timer *hbt)
  {
+ 	struct symbol *sym = ms->sym;
  	GtkWidget *window;
  	GtkWidget *notebook;
  	GtkWidget *scrolled_window;
@@@ -239,10 -240,10 +250,10 @@@
  }
  
  int hist_entry__gtk_annotate(struct hist_entry *he,
 -			     struct evsel *evsel,
 +			     struct perf_evsel *evsel,
  			     struct hist_browser_timer *hbt)
  {
- 	return symbol__gtk_annotate(he->ms.sym, he->ms.map, evsel, hbt);
+ 	return symbol__gtk_annotate(&he->ms, evsel, hbt);
  }
  
  void perf_gtk__show_annotations(void)
diff --cc tools/perf/util/annotate.c
index e5850bb6616c,78ef3cc2eb66..000000000000
--- a/tools/perf/util/annotate.c
+++ b/tools/perf/util/annotate.c
@@@ -2141,11 -2142,10 +2140,17 @@@ void symbol__calc_percent(struct symbo
  	annotation__calc_percent(notes, evsel, symbol__size(sym));
  }
  
++<<<<<<< HEAD
 +int symbol__annotate(struct symbol *sym, struct map *map,
 +		     struct perf_evsel *evsel, size_t privsize,
 +		     struct annotation_options *options,
 +		     struct arch **parch)
++=======
+ int symbol__annotate(struct map_symbol *ms, struct evsel *evsel, size_t privsize,
+ 		     struct annotation_options *options, struct arch **parch)
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  {
+ 	struct symbol *sym = ms->sym;
  	struct annotation *notes = symbol__annotation(sym);
  	struct annotate_args args = {
  		.privsize	= privsize,
@@@ -2333,10 -2332,11 +2337,16 @@@ static int annotated_source__addr_fmt_w
  	return 0;
  }
  
++<<<<<<< HEAD
 +int symbol__annotate_printf(struct symbol *sym, struct map *map,
 +			    struct perf_evsel *evsel,
++=======
+ int symbol__annotate_printf(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  			    struct annotation_options *opts)
  {
+ 	struct map *map = ms->map;
+ 	struct symbol *sym = ms->sym;
  	struct dso *dso = map->dso;
  	char *filename;
  	const char *d_filename;
@@@ -2740,20 -2740,19 +2750,24 @@@ static void annotation__calc_lines(stru
  	resort_source_line(root, &tmp_root);
  }
  
- static void symbol__calc_lines(struct symbol *sym, struct map *map,
- 			       struct rb_root *root,
+ static void symbol__calc_lines(struct map_symbol *ms, struct rb_root *root,
  			       struct annotation_options *opts)
  {
- 	struct annotation *notes = symbol__annotation(sym);
+ 	struct annotation *notes = symbol__annotation(ms->sym);
  
- 	annotation__calc_lines(notes, map, root, opts);
+ 	annotation__calc_lines(notes, ms->map, root, opts);
  }
  
++<<<<<<< HEAD
 +int symbol__tty_annotate2(struct symbol *sym, struct map *map,
 +			  struct perf_evsel *evsel,
++=======
+ int symbol__tty_annotate2(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  			  struct annotation_options *opts)
  {
- 	struct dso *dso = map->dso;
+ 	struct dso *dso = ms->map->dso;
+ 	struct symbol *sym = ms->sym;
  	struct rb_root source_line = RB_ROOT;
  	struct hists *hists = evsel__hists(evsel);
  	char buf[1024];
@@@ -2777,14 -2776,14 +2791,19 @@@
  	return 0;
  }
  
++<<<<<<< HEAD
 +int symbol__tty_annotate(struct symbol *sym, struct map *map,
 +			 struct perf_evsel *evsel,
++=======
+ int symbol__tty_annotate(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  			 struct annotation_options *opts)
  {
- 	struct dso *dso = map->dso;
+ 	struct dso *dso = ms->map->dso;
+ 	struct symbol *sym = ms->sym;
  	struct rb_root source_line = RB_ROOT;
  
- 	if (symbol__annotate(sym, map, evsel, 0, opts, NULL) < 0)
+ 	if (symbol__annotate(ms, evsel, 0, opts, NULL) < 0)
  		return -1;
  
  	symbol__calc_percent(sym, evsel);
@@@ -3049,9 -3048,10 +3068,14 @@@ void annotation_line__write(struct anno
  				 wops->write_graph);
  }
  
++<<<<<<< HEAD
 +int symbol__annotate2(struct symbol *sym, struct map *map, struct perf_evsel *evsel,
++=======
+ int symbol__annotate2(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  		      struct annotation_options *options, struct arch **parch)
  {
+ 	struct symbol *sym = ms->sym;
  	struct annotation *notes = symbol__annotation(sym);
  	size_t size = symbol__size(sym);
  	int nr_pcnt = 1, err;
@@@ -3061,9 -3061,9 +3085,9 @@@
  		return ENOMEM;
  
  	if (perf_evsel__is_group_event(evsel))
 -		nr_pcnt = evsel->core.nr_members;
 +		nr_pcnt = evsel->nr_members;
  
- 	err = symbol__annotate(sym, map, evsel, 0, options, parch);
+ 	err = symbol__annotate(ms, evsel, 0, options, parch);
  	if (err)
  		goto out_free_offsets;
  
diff --cc tools/perf/util/annotate.h
index 516794b60b91,7075d98f69d9..000000000000
--- a/tools/perf/util/annotate.h
+++ b/tools/perf/util/annotate.h
@@@ -349,12 -349,12 +349,21 @@@ int hist_entry__inc_addr_samples(struc
  struct annotated_source *symbol__hists(struct symbol *sym, int nr_hists);
  void symbol__annotate_zero_histograms(struct symbol *sym);
  
++<<<<<<< HEAD
 +int symbol__annotate(struct symbol *sym, struct map *map,
 +		     struct perf_evsel *evsel, size_t privsize,
 +		     struct annotation_options *options,
 +		     struct arch **parch);
 +int symbol__annotate2(struct symbol *sym, struct map *map,
 +		      struct perf_evsel *evsel,
++=======
+ int symbol__annotate(struct map_symbol *ms,
+ 		     struct evsel *evsel, size_t privsize,
+ 		     struct annotation_options *options,
+ 		     struct arch **parch);
+ int symbol__annotate2(struct map_symbol *ms,
+ 		      struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  		      struct annotation_options *options,
  		      struct arch **parch);
  
@@@ -380,11 -380,9 +389,14 @@@ enum symbol_disassemble_errno 
  	__SYMBOL_ANNOTATE_ERRNO__END,
  };
  
- int symbol__strerror_disassemble(struct symbol *sym, struct map *map,
- 				 int errnum, char *buf, size_t buflen);
+ int symbol__strerror_disassemble(struct map_symbol *ms, int errnum, char *buf, size_t buflen);
  
++<<<<<<< HEAD
 +int symbol__annotate_printf(struct symbol *sym, struct map *map,
 +			    struct perf_evsel *evsel,
++=======
+ int symbol__annotate_printf(struct map_symbol *ms, struct evsel *evsel,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  			    struct annotation_options *options);
  void symbol__annotate_zero_histogram(struct symbol *sym, int evidx);
  void symbol__annotate_decay_histogram(struct symbol *sym, int evidx);
@@@ -395,21 -393,17 +407,35 @@@ int map_symbol__annotation_dump(struct 
  
  bool ui__has_annotation(void);
  
++<<<<<<< HEAD
 +int symbol__tty_annotate(struct symbol *sym, struct map *map,
 +			 struct perf_evsel *evsel, struct annotation_options *opts);
 +
 +int symbol__tty_annotate2(struct symbol *sym, struct map *map,
 +			  struct perf_evsel *evsel, struct annotation_options *opts);
 +
 +#ifdef HAVE_SLANG_SUPPORT
 +int symbol__tui_annotate(struct symbol *sym, struct map *map,
 +			 struct perf_evsel *evsel,
 +			 struct hist_browser_timer *hbt,
 +			 struct annotation_options *opts);
 +#else
 +static inline int symbol__tui_annotate(struct symbol *sym __maybe_unused,
 +				struct map *map __maybe_unused,
 +				struct perf_evsel *evsel  __maybe_unused,
++=======
+ int symbol__tty_annotate(struct map_symbol *ms, struct evsel *evsel, struct annotation_options *opts);
+ 
+ int symbol__tty_annotate2(struct map_symbol *ms, struct evsel *evsel, struct annotation_options *opts);
+ 
+ #ifdef HAVE_SLANG_SUPPORT
+ int symbol__tui_annotate(struct map_symbol *ms, struct evsel *evsel,
+ 			 struct hist_browser_timer *hbt,
+ 			 struct annotation_options *opts);
+ #else
+ static inline int symbol__tui_annotate(struct map_symbol *ms __maybe_unused,
+ 				struct evsel *evsel  __maybe_unused,
++>>>>>>> 2975489458c5 (perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers)
  				struct hist_browser_timer *hbt __maybe_unused,
  				struct annotation_options *opts __maybe_unused)
  {
diff --git a/tools/perf/builtin-annotate.c b/tools/perf/builtin-annotate.c
index c7658be142f8..853bba742cbb 100644
--- a/tools/perf/builtin-annotate.c
+++ b/tools/perf/builtin-annotate.c
@@ -298,9 +298,9 @@ static int hist_entry__tty_annotate(struct hist_entry *he,
 				    struct perf_annotate *ann)
 {
 	if (!ann->use_stdio2)
-		return symbol__tty_annotate(he->ms.sym, he->ms.map, evsel, &ann->opts);
+		return symbol__tty_annotate(&he->ms, evsel, &ann->opts);
 
-	return symbol__tty_annotate2(he->ms.sym, he->ms.map, evsel, &ann->opts);
+	return symbol__tty_annotate2(&he->ms, evsel, &ann->opts);
 }
 
 static void hists__find_annotations(struct hists *hists,
diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c
index 12af252337fc..73c965f21daf 100644
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@ -638,7 +638,7 @@ static int hists__resort_cb(struct hist_entry *he, void *arg)
 	if (rep->symbol_ipc && sym && !sym->annotate2) {
 		struct perf_evsel *evsel = hists_to_evsel(he->hists);
 
-		symbol__annotate2(sym, he->ms.map, evsel,
+		symbol__annotate2(&he->ms, evsel,
 				  &annotation__default_options, NULL);
 	}
 
diff --git a/tools/perf/builtin-top.c b/tools/perf/builtin-top.c
index ef8a3e8f3f7c..f7771cf1d7a8 100644
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@ -139,12 +139,12 @@ static int perf_top__parse_source(struct perf_top *top, struct hist_entry *he)
 		return err;
 	}
 
-	err = symbol__annotate(sym, map, evsel, 0, &top->annotation_opts, NULL);
+	err = symbol__annotate(&he->ms, evsel, 0, &top->annotation_opts, NULL);
 	if (err == 0) {
 		top->sym_filter_entry = he;
 	} else {
 		char msg[BUFSIZ];
-		symbol__strerror_disassemble(sym, map, err, msg, sizeof(msg));
+		symbol__strerror_disassemble(&he->ms, err, msg, sizeof(msg));
 		pr_err("Couldn't annotate %s: %s\n", sym->name, msg);
 	}
 
@@ -253,7 +253,7 @@ static void perf_top__show_details(struct perf_top *top)
 	printf("Showing %s for %s\n", perf_evsel__name(top->sym_evsel), symbol->name);
 	printf("  Events  Pcnt (>=%d%%)\n", top->annotation_opts.min_pcnt);
 
-	more = symbol__annotate_printf(symbol, he->ms.map, top->sym_evsel, &top->annotation_opts);
+	more = symbol__annotate_printf(&he->ms, top->sym_evsel, &top->annotation_opts);
 
 	if (top->evlist->enabled) {
 		if (top->zero)
* Unmerged path tools/perf/ui/browsers/annotate.c
* Unmerged path tools/perf/ui/gtk/annotate.c
* Unmerged path tools/perf/util/annotate.c
* Unmerged path tools/perf/util/annotate.h
