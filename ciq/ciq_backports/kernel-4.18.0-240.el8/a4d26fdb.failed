net/tls: add TlsDeviceRxResync statistic

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] tls: add TlsDeviceRxResync statistic (Sabrina Dubroca) [1819627]
Rebuild_FUZZ: 94.74%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit a4d26fdbc2a5414bb1b67198656cc7e24a4a3c3a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a4d26fdb.failed

Add a statistic for number of RX resyncs sent down to the NIC.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a4d26fdbc2a5414bb1b67198656cc7e24a4a3c3a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/tls.rst
#	include/uapi/linux/snmp.h
#	net/tls/tls_proc.c
diff --cc Documentation/networking/tls.rst
index 5bcbf75e2025,8cb2cd4e2a80..000000000000
--- a/Documentation/networking/tls.rst
+++ b/Documentation/networking/tls.rst
@@@ -213,3 -213,29 +213,32 @@@ A patchset to OpenSSL to use ktls as th
  of calling send directly after a handshake using gnutls.
  Since it doesn't implement a full record layer, control
  messages are not supported.
++<<<<<<< HEAD
++=======
+ 
+ Statistics
+ ==========
+ 
+ TLS implementation exposes the following per-namespace statistics
+ (``/proc/net/tls_stat``):
+ 
+ - ``TlsCurrTxSw``, ``TlsCurrRxSw`` -
+   number of TX and RX sessions currently installed where host handles
+   cryptography
+ 
+ - ``TlsCurrTxDevice``, ``TlsCurrRxDevice`` -
+   number of TX and RX sessions currently installed where NIC handles
+   cryptography
+ 
+ - ``TlsTxSw``, ``TlsRxSw`` -
+   number of TX and RX sessions opened with host cryptography
+ 
+ - ``TlsTxDevice``, ``TlsRxDevice`` -
+   number of TX and RX sessions opened with NIC cryptography
+ 
+ - ``TlsDecryptError`` -
+   record decryption failed (e.g. due to incorrect authentication tag)
+ 
+ - ``TlsDeviceRxResync`` -
+   number of RX resyncs sent to NICs handling cryptography
++>>>>>>> a4d26fdbc2a5 (net/tls: add TlsDeviceRxResync statistic)
diff --cc include/uapi/linux/snmp.h
index 0b7605eafbdb,7eee233e78d2..000000000000
--- a/include/uapi/linux/snmp.h
+++ b/include/uapi/linux/snmp.h
@@@ -322,4 -323,21 +322,24 @@@ enu
  	__LINUX_MIB_XFRMMAX
  };
  
++<<<<<<< HEAD
++=======
+ /* linux TLS mib definitions */
+ enum
+ {
+ 	LINUX_MIB_TLSNUM = 0,
+ 	LINUX_MIB_TLSCURRTXSW,			/* TlsCurrTxSw */
+ 	LINUX_MIB_TLSCURRRXSW,			/* TlsCurrRxSw */
+ 	LINUX_MIB_TLSCURRTXDEVICE,		/* TlsCurrTxDevice */
+ 	LINUX_MIB_TLSCURRRXDEVICE,		/* TlsCurrRxDevice */
+ 	LINUX_MIB_TLSTXSW,			/* TlsTxSw */
+ 	LINUX_MIB_TLSRXSW,			/* TlsRxSw */
+ 	LINUX_MIB_TLSTXDEVICE,			/* TlsTxDevice */
+ 	LINUX_MIB_TLSRXDEVICE,			/* TlsRxDevice */
+ 	LINUX_MIB_TLSDECRYPTERROR,		/* TlsDecryptError */
+ 	LINUX_MIB_TLSRXDEVICERESYNC,		/* TlsRxDeviceResync */
+ 	__LINUX_MIB_TLSMAX
+ };
+ 
++>>>>>>> a4d26fdbc2a5 (net/tls: add TlsDeviceRxResync statistic)
  #endif	/* _LINUX_SNMP_H */
* Unmerged path net/tls/tls_proc.c
* Unmerged path Documentation/networking/tls.rst
* Unmerged path include/uapi/linux/snmp.h
diff --git a/net/tls/tls_device.c b/net/tls/tls_device.c
index 5e668ed9bea9..816885300f36 100644
--- a/net/tls/tls_device.c
+++ b/net/tls/tls_device.c
@@ -654,6 +654,7 @@ static void tls_device_resync_rx(struct tls_context *tls_ctx,
 		netdev->tlsdev_ops->tls_dev_resync(netdev, sk, seq, rcd_sn,
 						   TLS_OFFLOAD_CTX_DIR_RX);
 	clear_bit_unlock(TLS_RX_SYNC_RUNNING, &tls_ctx->flags);
+	TLS_INC_STATS(sock_net(sk), LINUX_MIB_TLSRXDEVICERESYNC);
 }
 
 void tls_device_rx_resync_new_rec(struct sock *sk, u32 rcd_len, u32 seq)
* Unmerged path net/tls/tls_proc.c
