libbpf: Fix error handling bug in btf_dump__new

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit bc0eb9a333918d2cc4f42f7f4cf09eaf029ac9de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/bc0eb9a3.failed

Fix missing jump to error handling in btf_dump__new, found by Coverity static
code analysis.

Fixes: 9f81654eebe8 ("libbpf: Expose BTF-to-C type declaration emitting API")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200117060801.1311525-2-andriin@fb.com
(cherry picked from commit bc0eb9a333918d2cc4f42f7f4cf09eaf029ac9de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/btf_dump.c
diff --cc tools/lib/bpf/btf_dump.c
index 613a4208127f,bd09ed1710f1..000000000000
--- a/tools/lib/bpf/btf_dump.c
+++ b/tools/lib/bpf/btf_dump.c
@@@ -135,8 -142,7 +135,12 @@@ struct btf_dump *btf_dump__new(const st
  	if (IS_ERR(d->type_names)) {
  		err = PTR_ERR(d->type_names);
  		d->type_names = NULL;
++<<<<<<< HEAD
 +		btf_dump__free(d);
 +		return ERR_PTR(err);
++=======
+ 		goto err;
++>>>>>>> bc0eb9a33391 (libbpf: Fix error handling bug in btf_dump__new)
  	}
  	d->ident_names = hashmap__new(str_hash_fn, str_equal_fn, NULL);
  	if (IS_ERR(d->ident_names)) {
* Unmerged path tools/lib/bpf/btf_dump.c
