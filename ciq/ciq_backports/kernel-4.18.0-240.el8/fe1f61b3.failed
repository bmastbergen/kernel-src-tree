libperf: Add own_cpus to struct perf_evsel

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit fe1f61b37ffada9fc7ec2c9d4ca5376b5a797dbc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/fe1f61b3.failed

Move own_cpus from tools/perf's evsel to libbpf's perf_evsel.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-52-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit fe1f61b37ffada9fc7ec2c9d4ca5376b5a797dbc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/include/internal/evsel.h
#	tools/perf/tests/event_update.c
#	tools/perf/util/evlist.c
#	tools/perf/util/evsel.c
#	tools/perf/util/evsel.h
#	tools/perf/util/parse-events.c
diff --cc tools/perf/tests/event_update.c
index f14dcd613438,c37ff49c07c7..000000000000
--- a/tools/perf/tests/event_update.c
+++ b/tools/perf/tests/event_update.c
@@@ -108,11 -109,11 +108,19 @@@ int test__event_update(struct test *tes
  	TEST_ASSERT_VAL("failed to synthesize attr update name",
  			!perf_event__synthesize_event_update_name(&tmp.tool, evsel, process_event_name));
  
++<<<<<<< HEAD
 +	evsel->own_cpus = cpu_map__new("1,2,3");
++=======
+ 	evsel->core.own_cpus = perf_cpu_map__new("1,2,3");
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  
  	TEST_ASSERT_VAL("failed to synthesize attr update cpus",
  			!perf_event__synthesize_event_update_cpus(&tmp.tool, evsel, process_event_cpus));
  
++<<<<<<< HEAD
 +	cpu_map__put(evsel->own_cpus);
++=======
+ 	perf_cpu_map__put(evsel->core.own_cpus);
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  	return 0;
  }
diff --cc tools/perf/util/evlist.c
index 4739b7914374,d203305ac187..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -158,21 -159,21 +158,30 @@@ static void __perf_evlist__propagate_ma
  	 * We already have cpus for evsel (via PMU sysfs) so
  	 * keep it, if there's no target cpu list defined.
  	 */
++<<<<<<< HEAD
 +	if (!evsel->own_cpus || evlist->has_user_cpus) {
 +		cpu_map__put(evsel->cpus);
 +		evsel->cpus = cpu_map__get(evlist->cpus);
 +	} else if (evsel->cpus != evsel->own_cpus) {
 +		cpu_map__put(evsel->cpus);
 +		evsel->cpus = cpu_map__get(evsel->own_cpus);
++=======
+ 	if (!evsel->core.own_cpus || evlist->has_user_cpus) {
+ 		perf_cpu_map__put(evsel->core.cpus);
+ 		evsel->core.cpus = perf_cpu_map__get(evlist->cpus);
+ 	} else if (evsel->core.cpus != evsel->core.own_cpus) {
+ 		perf_cpu_map__put(evsel->core.cpus);
+ 		evsel->core.cpus = perf_cpu_map__get(evsel->core.own_cpus);
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  	}
  
 -	perf_thread_map__put(evsel->threads);
 -	evsel->threads = perf_thread_map__get(evlist->threads);
 +	thread_map__put(evsel->threads);
 +	evsel->threads = thread_map__get(evlist->threads);
  }
  
 -static void perf_evlist__propagate_maps(struct evlist *evlist)
 +static void perf_evlist__propagate_maps(struct perf_evlist *evlist)
  {
 -	struct evsel *evsel;
 +	struct perf_evsel *evsel;
  
  	evlist__for_each_entry(evlist, evsel)
  		__perf_evlist__propagate_maps(evlist, evsel);
diff --cc tools/perf/util/evsel.c
index e99257f738ba,c5f6ee6d5f3b..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1126,8 -1125,8 +1126,13 @@@ void perf_evsel__config(struct perf_evs
  		attr->exclude_user   = 1;
  	}
  
++<<<<<<< HEAD
 +	if (evsel->own_cpus || evsel->unit)
 +		evsel->attr.read_format |= PERF_FORMAT_ID;
++=======
+ 	if (evsel->core.own_cpus || evsel->unit)
+ 		evsel->core.attr.read_format |= PERF_FORMAT_ID;
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  
  	/*
  	 * Apply event specific term settings,
@@@ -1326,9 -1325,9 +1331,15 @@@ void perf_evsel__exit(struct perf_evse
  	perf_evsel__free_id(evsel);
  	perf_evsel__free_config_terms(evsel);
  	cgroup__put(evsel->cgrp);
++<<<<<<< HEAD
 +	cpu_map__put(evsel->cpus);
 +	cpu_map__put(evsel->own_cpus);
 +	thread_map__put(evsel->threads);
++=======
+ 	perf_cpu_map__put(evsel->core.cpus);
+ 	perf_cpu_map__put(evsel->core.own_cpus);
+ 	perf_thread_map__put(evsel->threads);
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  	zfree(&evsel->group_name);
  	zfree(&evsel->name);
  	perf_evsel__object.fini(evsel);
diff --cc tools/perf/util/evsel.h
index b27935a6d36c,2eff837f10bd..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -124,9 -123,7 +124,13 @@@ struct perf_evsel 
  	u64			db_id;
  	struct cgroup		*cgrp;
  	void			*handler;
++<<<<<<< HEAD
 +	struct cpu_map		*cpus;
 +	struct cpu_map		*own_cpus;
 +	struct thread_map	*threads;
++=======
+ 	struct perf_thread_map *threads;
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  	unsigned int		sample_size;
  	int			id_pos;
  	int			is_pos;
diff --cc tools/perf/util/parse-events.c
index 0540303e5e97,8182b1e66ec6..000000000000
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@@ -332,8 -333,8 +332,13 @@@ __add_event(struct list_head *list, in
  		return NULL;
  
  	(*idx)++;
++<<<<<<< HEAD
 +	evsel->cpus        = cpu_map__get(cpus);
 +	evsel->own_cpus    = cpu_map__get(cpus);
++=======
+ 	evsel->core.cpus   = perf_cpu_map__get(cpus);
+ 	evsel->core.own_cpus = perf_cpu_map__get(cpus);
++>>>>>>> fe1f61b37ffa (libperf: Add own_cpus to struct perf_evsel)
  	evsel->system_wide = pmu ? pmu->is_uncore : false;
  	evsel->auto_merge_stats = auto_merge_stats;
  
* Unmerged path tools/perf/lib/include/internal/evsel.h
* Unmerged path tools/perf/lib/include/internal/evsel.h
* Unmerged path tools/perf/tests/event_update.c
* Unmerged path tools/perf/util/evlist.c
* Unmerged path tools/perf/util/evsel.c
* Unmerged path tools/perf/util/evsel.h
diff --git a/tools/perf/util/header.c b/tools/perf/util/header.c
index c3fbdc63c78a..04c220458ab8 100644
--- a/tools/perf/util/header.c
+++ b/tools/perf/util/header.c
@@ -3852,10 +3852,10 @@ perf_event__synthesize_event_update_cpus(struct perf_tool *tool,
 	int max, err;
 	u16 type;
 
-	if (!evsel->own_cpus)
+	if (!evsel->core.own_cpus)
 		return 0;
 
-	ev = cpu_map_data__alloc(evsel->own_cpus, &size, &type, &max);
+	ev = cpu_map_data__alloc(evsel->core.own_cpus, &size, &type, &max);
 	if (!ev)
 		return -ENOMEM;
 
@@ -3865,7 +3865,7 @@ perf_event__synthesize_event_update_cpus(struct perf_tool *tool,
 	ev->id   = evsel->id[0];
 
 	cpu_map_data__synthesize((struct cpu_map_data *) ev->data,
-				 evsel->own_cpus,
+				 evsel->core.own_cpus,
 				 type, max);
 
 	err = process(tool, (union perf_event*) ev, NULL, NULL);
@@ -3976,7 +3976,7 @@ int perf_event__synthesize_extra_attr(struct perf_tool *tool,
 			}
 		}
 
-		if (counter->own_cpus) {
+		if (counter->core.own_cpus) {
 			err = perf_event__synthesize_event_update_cpus(tool, counter, process);
 			if (err < 0) {
 				pr_err("Couldn't synthesize evsel cpus.\n");
@@ -4073,7 +4073,7 @@ int perf_event__process_event_update(struct perf_tool *tool __maybe_unused,
 
 		map = cpu_map__new_data(&ev_cpus->cpus);
 		if (map)
-			evsel->own_cpus = map;
+			evsel->core.own_cpus = map;
 		else
 			pr_err("failed to get event_update cpus\n");
 	default:
* Unmerged path tools/perf/util/parse-events.c
