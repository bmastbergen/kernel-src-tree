mm: simplify MEMORY_ISOLATION && COMPACTION || CMA into CONTIG_ALLOC

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Alexandre Ghiti <alex@ghiti.fr>
commit 8df995f6bde01de96ce93373785f41c3bd13ad1c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8df995f6.failed

This condition allows to define alloc_contig_range, so simplify it into a
more accurate naming.

Link: http://lkml.kernel.org/r/20190327063626.18421-4-alex@ghiti.fr
	Signed-off-by: Alexandre Ghiti <alex@ghiti.fr>
	Suggested-by: Vlastimil Babka <vbabka@suse.cz>
	Acked-by: Vlastimil Babka <vbabka@suse.cz>
	Cc: Andy Lutomirsky <luto@kernel.org>
	Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: David S. Miller <davem@davemloft.net>
	Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
	Cc: "H . Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Mike Kravetz <mike.kravetz@oracle.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Rich Felker <dalias@libc.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8df995f6bde01de96ce93373785f41c3bd13ad1c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/Kconfig.cputype
#	arch/sh/Kconfig
#	arch/sparc/Kconfig
diff --cc arch/powerpc/platforms/Kconfig.cputype
index 42fa065292ba,3a31d4289ea4..000000000000
--- a/arch/powerpc/platforms/Kconfig.cputype
+++ b/arch/powerpc/platforms/Kconfig.cputype
@@@ -299,8 -330,10 +299,15 @@@ config ARCH_ENABLE_SPLIT_PMD_PTLOC
  
  config PPC_RADIX_MMU
  	bool "Radix MMU Support"
++<<<<<<< HEAD
 +	depends on PPC_BOOK3S_64
 +	select ARCH_HAS_GIGANTIC_PAGE if (MEMORY_ISOLATION && COMPACTION) || CMA
++=======
+ 	depends on PPC_BOOK3S_64 && HUGETLB_PAGE
+ 	select ARCH_HAS_GIGANTIC_PAGE if CONTIG_ALLOC
+ 	select PPC_HAVE_KUEP
+ 	select PPC_HAVE_KUAP
++>>>>>>> 8df995f6bde0 (mm: simplify MEMORY_ISOLATION && COMPACTION || CMA into CONTIG_ALLOC)
  	default y
  	help
  	  Enable support for the Power ISA 3.0 Radix style MMU. Currently this
diff --cc arch/sh/Kconfig
index b58249fed0f7,2a5ec643fec0..000000000000
--- a/arch/sh/Kconfig
+++ b/arch/sh/Kconfig
@@@ -51,8 -51,9 +51,12 @@@ config SUPER
  	select HAVE_ARCH_AUDITSYSCALL
  	select HAVE_FUTEX_CMPXCHG if FUTEX
  	select HAVE_NMI
 +	select NEED_DMA_MAP_STATE
  	select NEED_SG_DMA_LENGTH
++<<<<<<< HEAD
++=======
+ 	select ARCH_HAS_GIGANTIC_PAGE if CONTIG_ALLOC
++>>>>>>> 8df995f6bde0 (mm: simplify MEMORY_ISOLATION && COMPACTION || CMA into CONTIG_ALLOC)
  
  	help
  	  The SuperH is a RISC processor targeted for use in embedded systems
diff --cc arch/sparc/Kconfig
index 4fe7ee737238,566de738e487..000000000000
--- a/arch/sparc/Kconfig
+++ b/arch/sparc/Kconfig
@@@ -89,6 -91,8 +89,11 @@@ config SPARC6
  	select GENERIC_TIME_VSYSCALL
  	select ARCH_CLOCKSOURCE_DATA
  	select ARCH_HAS_PTE_SPECIAL
++<<<<<<< HEAD
++=======
+ 	select PCI_DOMAINS if PCI
+ 	select ARCH_HAS_GIGANTIC_PAGE if CONTIG_ALLOC
++>>>>>>> 8df995f6bde0 (mm: simplify MEMORY_ISOLATION && COMPACTION || CMA into CONTIG_ALLOC)
  
  config ARCH_DEFCONFIG
  	string
diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index d9a7ce52dbae..845891149f9d 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -19,7 +19,7 @@ config ARM64
 	select ARCH_HAS_FAST_MULTIPLIER
 	select ARCH_HAS_FORTIFY_SOURCE
 	select ARCH_HAS_GCOV_PROFILE_ALL
-	select ARCH_HAS_GIGANTIC_PAGE if (MEMORY_ISOLATION && COMPACTION) || CMA
+	select ARCH_HAS_GIGANTIC_PAGE if CONTIG_ALLOC
 	select ARCH_HAS_KCOV
 	select ARCH_HAS_MEMBARRIER_SYNC_CORE
 	select ARCH_HAS_PTE_SPECIAL
* Unmerged path arch/powerpc/platforms/Kconfig.cputype
diff --git a/arch/s390/Kconfig b/arch/s390/Kconfig
index 5ff871046e68..dc2d0d918e6e 100644
--- a/arch/s390/Kconfig
+++ b/arch/s390/Kconfig
@@ -63,7 +63,7 @@ config S390
 	select ARCH_HAS_ELF_RANDOMIZE
 	select ARCH_HAS_FORTIFY_SOURCE
 	select ARCH_HAS_GCOV_PROFILE_ALL
-	select ARCH_HAS_GIGANTIC_PAGE if (MEMORY_ISOLATION && COMPACTION) || CMA
+	select ARCH_HAS_GIGANTIC_PAGE if CONTIG_ALLOC
 	select ARCH_HAS_KCOV
 	select ARCH_HAS_MEM_ENCRYPT
 	select ARCH_HAS_PTE_SPECIAL
* Unmerged path arch/sh/Kconfig
* Unmerged path arch/sparc/Kconfig
diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index e4d5b7411273..fa2b857066a3 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -23,7 +23,7 @@ config X86_64
 	def_bool y
 	depends on 64BIT
 	# Options that are inherently 64-bit kernel only:
-	select ARCH_HAS_GIGANTIC_PAGE if (MEMORY_ISOLATION && COMPACTION) || CMA
+	select ARCH_HAS_GIGANTIC_PAGE if CONTIG_ALLOC
 	select ARCH_SUPPORTS_INT128
 	select ARCH_USE_CMPXCHG_LOCKREF
 	select HAVE_ARCH_SOFT_DIRTY
diff --git a/arch/x86/mm/hugetlbpage.c b/arch/x86/mm/hugetlbpage.c
index 00b296617ca4..d8df20ac207c 100644
--- a/arch/x86/mm/hugetlbpage.c
+++ b/arch/x86/mm/hugetlbpage.c
@@ -203,7 +203,7 @@ static __init int setup_hugepagesz(char *opt)
 }
 __setup("hugepagesz=", setup_hugepagesz);
 
-#if (defined(CONFIG_MEMORY_ISOLATION) && defined(CONFIG_COMPACTION)) || defined(CONFIG_CMA)
+#ifdef CONFIG_CONTIG_ALLOC
 static __init int gigantic_pages_init(void)
 {
 	/* With compaction or CMA we can allocate gigantic pages at runtime */
diff --git a/include/linux/gfp.h b/include/linux/gfp.h
index 2521d2944de3..862ee312e795 100644
--- a/include/linux/gfp.h
+++ b/include/linux/gfp.h
@@ -574,7 +574,7 @@ static inline bool pm_suspended_storage(void)
 }
 #endif /* CONFIG_PM_SLEEP */
 
-#if (defined(CONFIG_MEMORY_ISOLATION) && defined(CONFIG_COMPACTION)) || defined(CONFIG_CMA)
+#ifdef CONFIG_CONTIG_ALLOC
 /* The below functions must be run on a range from a single zone. */
 extern int alloc_contig_range(unsigned long start, unsigned long end,
 			      unsigned migratetype, gfp_t gfp_mask);
diff --git a/mm/Kconfig b/mm/Kconfig
index f5cd8d5575a1..1913a5addce6 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -261,6 +261,9 @@ config ARCH_ENABLE_HUGEPAGE_MIGRATION
 config ARCH_ENABLE_THP_MIGRATION
 	bool
 
+config CONTIG_ALLOC
+       def_bool (MEMORY_ISOLATION && COMPACTION) || CMA
+
 config PHYS_ADDR_T_64BIT
 	def_bool 64BIT
 
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index da754b26a5b4..6ad96b1e0740 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -7939,8 +7939,7 @@ bool has_unmovable_pages(struct zone *zone, struct page *page, int count,
 	return true;
 }
 
-#if (defined(CONFIG_MEMORY_ISOLATION) && defined(CONFIG_COMPACTION)) || defined(CONFIG_CMA)
-
+#ifdef CONFIG_CONTIG_ALLOC
 static unsigned long pfn_max_align_down(unsigned long pfn)
 {
 	return pfn & ~(max_t(unsigned long, MAX_ORDER_NR_PAGES,
