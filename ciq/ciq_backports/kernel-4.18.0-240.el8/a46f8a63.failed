selftests: kvm: Introduce the TEST_FAIL macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Wainer dos Santos Moschetta <wainersm@redhat.com>
commit a46f8a63cde8d4fee05693bc5c566c1374d0baaa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a46f8a63.failed

Some tests/utilities use the TEST_ASSERT(false, ...) pattern to
indicate a failure and stop execution.

This change introduces the TEST_FAIL macro which is a wrap around
TEST_ASSERT(false, ...) and so provides a direct alternative for
failing a test.

	Signed-off-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a46f8a63cde8d4fee05693bc5c566c1374d0baaa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/include/test_util.h
diff --cc tools/testing/selftests/kvm/include/test_util.h
index c7dafe8bd02c,f588ad1403f1..000000000000
--- a/tools/testing/selftests/kvm/include/test_util.h
+++ b/tools/testing/selftests/kvm/include/test_util.h
@@@ -41,4 -55,13 +41,16 @@@ void test_assert(bool exp, const char *
  		    #a, #b, #a, (unsigned long) __a, #b, (unsigned long) __b); \
  } while (0)
  
++<<<<<<< HEAD
++=======
+ #define TEST_FAIL(fmt, ...) \
+ 	TEST_ASSERT(false, fmt, ##__VA_ARGS__)
+ 
+ size_t parse_size(const char *size);
+ 
+ int64_t timespec_to_ns(struct timespec ts);
+ struct timespec timespec_diff(struct timespec start, struct timespec end);
+ struct timespec timespec_add_ns(struct timespec ts, int64_t ns);
+ 
++>>>>>>> a46f8a63cde8 (selftests: kvm: Introduce the TEST_FAIL macro)
  #endif /* SELFTEST_KVM_TEST_UTIL_H */
* Unmerged path tools/testing/selftests/kvm/include/test_util.h
