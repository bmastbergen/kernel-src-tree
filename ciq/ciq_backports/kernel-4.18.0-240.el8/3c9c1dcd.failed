arm64: Kconfig: Remove CONFIG_ prefix from ARM64_PSEUDO_NMI section

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Joe Perches <joe@perches.com>
commit 3c9c1dcde7c3a6c6203686ccd620620ae5b2a905
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3c9c1dcd.failed

Remove the CONFIG_ prefix from the select statement for ARM_GIC_V3.

	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 3c9c1dcde7c3a6c6203686ccd620620ae5b2a905)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/Kconfig
diff --cc arch/arm64/Kconfig
index df530ef3b952,e9b1fc22f72e..000000000000
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@@ -1395,8 -1523,49 +1395,51 @@@ config ARM64_SV
  	  KVM in the same kernel image.
  
  config ARM64_MODULE_PLTS
 -	bool "Use PLTs to allow module memory to spill over into vmalloc area"
 -	depends on MODULES
 +	bool
  	select HAVE_MOD_ARCH_SPECIFIC
++<<<<<<< HEAD
++=======
+ 	help
+ 	  Allocate PLTs when loading modules so that jumps and calls whose
+ 	  targets are too far away for their relative offsets to be encoded
+ 	  in the instructions themselves can be bounced via veneers in the
+ 	  module's PLT. This allows modules to be allocated in the generic
+ 	  vmalloc area after the dedicated module memory area has been
+ 	  exhausted.
+ 
+ 	  When running with address space randomization (KASLR), the module
+ 	  region itself may be too far away for ordinary relative jumps and
+ 	  calls, and so in that case, module PLTs are required and cannot be
+ 	  disabled.
+ 
+ 	  Specific errata workaround(s) might also force module PLTs to be
+ 	  enabled (ARM64_ERRATUM_843419).
+ 
+ config ARM64_PSEUDO_NMI
+ 	bool "Support for NMI-like interrupts"
+ 	select ARM_GIC_V3
+ 	help
+ 	  Adds support for mimicking Non-Maskable Interrupts through the use of
+ 	  GIC interrupt priority. This support requires version 3 or later of
+ 	  ARM GIC.
+ 
+ 	  This high priority configuration for interrupts needs to be
+ 	  explicitly enabled by setting the kernel parameter
+ 	  "irqchip.gicv3_pseudo_nmi" to 1.
+ 
+ 	  If unsure, say N
+ 
+ if ARM64_PSEUDO_NMI
+ config ARM64_DEBUG_PRIORITY_MASKING
+ 	bool "Debug interrupt priority masking"
+ 	help
+ 	  This adds runtime checks to functions enabling/disabling
+ 	  interrupts when using priority masking. The additional checks verify
+ 	  the validity of ICC_PMR_EL1 when calling concerned functions.
+ 
+ 	  If unsure, say N
+ endif
++>>>>>>> 3c9c1dcde7c3 (arm64: Kconfig: Remove CONFIG_ prefix from ARM64_PSEUDO_NMI section)
  
  config RELOCATABLE
  	bool
* Unmerged path arch/arm64/Kconfig
