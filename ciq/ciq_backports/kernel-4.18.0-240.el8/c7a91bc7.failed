mm/mempolicy.c: fix out of bounds write in mpol_parse_str()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit c7a91bc7c2e17e0a9c8b9745a2cb118891218fd1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c7a91bc7.failed

What we are trying to do is change the '=' character to a NUL terminator
and then at the end of the function we restore it back to an '='.  The
problem is there are two error paths where we jump to the end of the
function before we have replaced the '=' with NUL.

We end up putting the '=' in the wrong place (possibly one element
before the start of the buffer).

Link: http://lkml.kernel.org/r/20200115055426.vdjwvry44nfug7yy@kili.mountain
	Reported-by: syzbot+e64a13c5369a194d67df@syzkaller.appspotmail.com
Fixes: 095f1fc4ebf3 ("mempolicy: rework shmem mpol parsing and display")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Acked-by: Vlastimil Babka <vbabka@suse.cz>
Dmitry Vyukov <dvyukov@google.com>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Dan Carpenter <dan.carpenter@oracle.com>
	Cc: Lee Schermerhorn <lee.schermerhorn@hp.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit c7a91bc7c2e17e0a9c8b9745a2cb118891218fd1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/mempolicy.c
diff --cc mm/mempolicy.c
index 5d97b56909f1,977c641f78cf..000000000000
--- a/mm/mempolicy.c
+++ b/mm/mempolicy.c
@@@ -2772,8 -2819,11 +2772,11 @@@ int mpol_parse_str(char *str, struct me
  	nodemask_t nodes;
  	char *nodelist = strchr(str, ':');
  	char *flags = strchr(str, '=');
 -	int err = 1, mode;
 +	int err = 1;
  
+ 	if (flags)
+ 		*flags++ = '\0';	/* terminate mode string */
+ 
  	if (nodelist) {
  		/* NUL-terminate mode or flags string */
  		*nodelist++ = '\0';
@@@ -2784,15 -2834,8 +2787,20 @@@
  	} else
  		nodes_clear(nodes);
  
++<<<<<<< HEAD
 +	if (flags)
 +		*flags++ = '\0';	/* terminate mode string */
 +
 +	for (mode = 0; mode < MPOL_MAX; mode++) {
 +		if (!strcmp(str, policy_modes[mode])) {
 +			break;
 +		}
 +	}
 +	if (mode >= MPOL_MAX)
++=======
+ 	mode = match_string(policy_modes, MPOL_MAX, str);
+ 	if (mode < 0)
++>>>>>>> c7a91bc7c2e1 (mm/mempolicy.c: fix out of bounds write in mpol_parse_str())
  		goto out;
  
  	switch (mode) {
* Unmerged path mm/mempolicy.c
