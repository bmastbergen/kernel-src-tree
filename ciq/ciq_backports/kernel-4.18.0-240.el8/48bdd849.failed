io_uring: fix ctx refcounting in io_submit_sqes()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Pavel Begunkov <asml.silence@gmail.com>
commit 48bdd849e967f1c573d2b2bc24308e24a83f39c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/48bdd849.failed

If io_get_req() fails, it drops a ref. Then, awhile keeping @submitted
unmodified, io_submit_sqes() breaks the loop and puts @nr - @submitted
refs. For each submitted req a ref is dropped in io_put_req() and
friends. So, for @nr taken refs there will be
(@nr - @submitted + @submitted + 1) dropped.

Remove ctx refcounting from io_get_req(), that at the same time makes
it clearer.

Fixes: 2b85edfc0c90 ("io_uring: batch getting pcpu references")
	Cc: stable@vger.kernel.org # v5.6
	Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 48bdd849e967f1c573d2b2bc24308e24a83f39c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/io_uring.c
diff --cc fs/io_uring.c
index 2afa3b27779e,79bd22289d73..000000000000
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@@ -605,10 -1334,14 +605,17 @@@ static struct io_kiocb *io_get_req(stru
  	req->flags = 0;
  	/* one is dropped after submission, the other at completion */
  	refcount_set(&req->refs, 2);
 -	req->task = NULL;
  	req->result = 0;
 -	INIT_IO_WORK(&req->work, io_wq_submit_work);
  	return req;
++<<<<<<< HEAD
 +out:
 +	percpu_ref_put(&ctx->refs);
++=======
+ fallback:
+ 	req = io_get_fallback_req(ctx);
+ 	if (req)
+ 		goto got_it;
++>>>>>>> 48bdd849e967 (io_uring: fix ctx refcounting in io_submit_sqes())
  	return NULL;
  }
  
* Unmerged path fs/io_uring.c
