drm/i915/tgl: Move and restrict Wa_1408615072

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author José Roberto de Souza <jose.souza@intel.com>
commit 50148a25f841dc1e2cffe1669d4782dfa75d85d6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/50148a25.failed

Following the changes in the previous patch
"drm/i915/gen11: Moving WAs to rcs_engine_wa_init()" also moving TGL
Wa_1408615072 to rcs_engine_wa_init() this way after a engine
reset it will be reapplied also restricting it to A0 as it is fixed in
B0 stepping.

BSpec: 52890
	Cc: Matt Roper <matthew.d.roper@intel.com>
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
	Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200302231421.224322-2-jose.souza@intel.com
(cherry picked from commit 50148a25f841dc1e2cffe1669d4782dfa75d85d6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/intel_workarounds.c
#	drivers/gpu/drm/i915/intel_pm.c
diff --cc drivers/gpu/drm/i915/gt/intel_workarounds.c
index 8f75882ded3f,cb7d85c42f13..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_workarounds.c
+++ b/drivers/gpu/drm/i915/gt/intel_workarounds.c
@@@ -1231,6 -1336,65 +1231,68 @@@ rcs_engine_wa_init(struct intel_engine_
  {
  	struct drm_i915_private *i915 = engine->i915;
  
++<<<<<<< HEAD
++=======
+ 	if (IS_TGL_REVID(i915, TGL_REVID_A0, TGL_REVID_A0)) {
+ 		/* Wa_1606700617:tgl */
+ 		wa_masked_en(wal,
+ 			     GEN9_CS_DEBUG_MODE1,
+ 			     FF_DOP_CLOCK_GATE_DISABLE);
+ 
+ 		/*
+ 		 * Wa_1607138336:tgl
+ 		 * Wa_1607063988:tgl
+ 		 */
+ 		wa_write_or(wal,
+ 			    GEN9_CTX_PREEMPT_REG,
+ 			    GEN12_DISABLE_POSH_BUSY_FF_DOP_CG);
+ 
+ 		/*
+ 		 * Wa_1607030317:tgl
+ 		 * Wa_1607186500:tgl
+ 		 * Wa_1607297627:tgl there is 3 entries for this WA on BSpec, 2
+ 		 * of then says it is fixed on B0 the other one says it is
+ 		 * permanent
+ 		 */
+ 		wa_masked_en(wal,
+ 			     GEN6_RC_SLEEP_PSMI_CONTROL,
+ 			     GEN12_WAIT_FOR_EVENT_POWER_DOWN_DISABLE |
+ 			     GEN8_RC_SEMA_IDLE_MSG_DISABLE);
+ 
+ 		/*
+ 		 * Wa_1606679103:tgl
+ 		 * (see also Wa_1606682166:icl)
+ 		 */
+ 		wa_write_or(wal,
+ 			    GEN7_SARCHKMD,
+ 			    GEN7_DISABLE_SAMPLER_PREFETCH);
+ 
+ 		/* Wa_1407928979:tgl */
+ 		wa_write_or(wal,
+ 			    GEN7_FF_THREAD_MODE,
+ 			    GEN12_FF_TESSELATION_DOP_GATE_DISABLE);
+ 
+ 		/*
+ 		 * Wa_1409085225:tgl
+ 		 * Wa_14010229206:tgl
+ 		 */
+ 		wa_masked_en(wal, GEN9_ROW_CHICKEN4, GEN12_DISABLE_TDL_PUSH);
+ 
+ 		/* Wa_1408615072:tgl */
+ 		wa_masked_en(wal, UNSLICE_UNIT_LEVEL_CLKGATE2,
+ 			     VSUNIT_CLKGATE_DIS_TGL);
+ 	}
+ 
+ 	if (IS_TIGERLAKE(i915)) {
+ 		/* Wa_1606931601:tgl */
+ 		wa_masked_en(wal, GEN7_ROW_CHICKEN2, GEN12_DISABLE_EARLY_READ);
+ 
+ 		/* Wa_1409804808:tgl */
+ 		wa_masked_en(wal, GEN7_ROW_CHICKEN2,
+ 			     GEN12_PUSH_CONST_DEREF_HOLD_DIS);
+ 	}
+ 
++>>>>>>> 50148a25f841 (drm/i915/tgl: Move and restrict Wa_1408615072)
  	if (IS_GEN(i915, 11)) {
  		/* This is not an Wa. Enable for better image quality */
  		wa_masked_en(wal,
diff --cc drivers/gpu/drm/i915/intel_pm.c
index a63d278b5173,26572364f893..000000000000
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@@ -9216,6 -6811,27 +9216,30 @@@ static void icl_init_clock_gating(struc
  			 0, CNL_DELAY_PMRSP);
  }
  
++<<<<<<< HEAD
++=======
+ static void tgl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	u32 vd_pg_enable = 0;
+ 	unsigned int i;
+ 
+ 	/* This is not a WA. Enable VD HCP & MFX_ENC powergate */
+ 	for (i = 0; i < I915_MAX_VCS; i++) {
+ 		if (HAS_ENGINE(dev_priv, _VCS(i)))
+ 			vd_pg_enable |= VDN_HCP_POWERGATE_ENABLE(i) |
+ 					VDN_MFX_POWERGATE_ENABLE(i);
+ 	}
+ 
+ 	I915_WRITE(POWERGATE_ENABLE,
+ 		   I915_READ(POWERGATE_ENABLE) | vd_pg_enable);
+ 
+ 	/* Wa_1409825376:tgl (pre-prod)*/
+ 	if (IS_TGL_REVID(dev_priv, TGL_REVID_A0, TGL_REVID_A0))
+ 		I915_WRITE(GEN9_CLKGATE_DIS_3, I915_READ(GEN9_CLKGATE_DIS_3) |
+ 			   TGL_VRH_GATING_DIS);
+ }
+ 
++>>>>>>> 50148a25f841 (drm/i915/tgl: Move and restrict Wa_1408615072)
  static void cnp_init_clock_gating(struct drm_i915_private *dev_priv)
  {
  	if (!HAS_PCH_CNP(dev_priv))
* Unmerged path drivers/gpu/drm/i915/gt/intel_workarounds.c
* Unmerged path drivers/gpu/drm/i915/intel_pm.c
