Bluetooth: hci_bcm: enable IRQ capability from devicetree

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Guillaume La Roque <glaroque@baylibre.com>
commit f25a96c8eb46b86744540ade61c2dbc844c23dbd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/f25a96c8.failed

Add support for getting IRQ directly from DT instead of relying on
converting a GPIO to IRQ. This is needed for platforms with GPIO
controllers that that do not support gpiod_to_irq().

	Reviewed-by: Kevin Hilman <khilman@baylibre.com>
	Signed-off-by: Guillaume La Roque <glaroque@baylibre.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit f25a96c8eb46b86744540ade61c2dbc844c23dbd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/hci_bcm.c
diff --cc drivers/bluetooth/hci_bcm.c
index 70da7a5e5d81,b236cb11c0dc..000000000000
--- a/drivers/bluetooth/hci_bcm.c
+++ b/drivers/bluetooth/hci_bcm.c
@@@ -1012,6 -1150,10 +1013,13 @@@ static int bcm_acpi_probe(struct bcm_de
  static int bcm_of_probe(struct bcm_device *bdev)
  {
  	device_property_read_u32(bdev->dev, "max-speed", &bdev->oper_speed);
++<<<<<<< HEAD
++=======
+ 	device_property_read_u8_array(bdev->dev, "brcm,bt-pcm-int-params",
+ 				      bdev->pcm_int_params, 5);
+ 	bdev->irq = of_irq_get_byname(bdev->dev->of_node, "host-wakeup");
+ 
++>>>>>>> f25a96c8eb46 (Bluetooth: hci_bcm: enable IRQ capability from devicetree)
  	return 0;
  }
  
* Unmerged path drivers/bluetooth/hci_bcm.c
