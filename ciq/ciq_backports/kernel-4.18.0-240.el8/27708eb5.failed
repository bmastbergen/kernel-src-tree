net: phy: dp83867: IO impedance is not dependent on RGMII delay

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Trent Piepho <tpiepho@impinj.com>
commit 27708eb5481b7b00540028d0ac2b56dfa95a2df7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/27708eb5.failed

The driver would only set the IO impedance value when RGMII internal
delays were enabled.  There is no reason for this.  Move the IO
impedance block out of the RGMII delay block.

	Cc: Andrew Lunn <andrew@lunn.ch>
	Cc: Florian Fainelli <f.fainelli@gmail.com>
	Cc: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: Trent Piepho <tpiepho@impinj.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 27708eb5481b7b00540028d0ac2b56dfa95a2df7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/dp83867.c
diff --cc drivers/net/phy/dp83867.c
index 1ec21ff6f639,5ece153aa9c3..000000000000
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@@ -69,11 -69,13 +69,10 @@@
  #define DP83867_PHYCR_RESERVED_MASK		BIT(11)
  
  /* RGMIIDCTL bits */
 -#define DP83867_RGMII_TX_CLK_DELAY_MAX		0xf
  #define DP83867_RGMII_TX_CLK_DELAY_SHIFT	4
 -#define DP83867_RGMII_RX_CLK_DELAY_MAX		0xf
 -#define DP83867_RGMII_RX_CLK_DELAY_SHIFT	0
  
  /* IO_MUX_CFG bits */
- #define DP83867_IO_MUX_CFG_IO_IMPEDANCE_CTRL	0x1f
- 
+ #define DP83867_IO_MUX_CFG_IO_IMPEDANCE_MASK	0x1f
  #define DP83867_IO_MUX_CFG_IO_IMPEDANCE_MAX	0x0
  #define DP83867_IO_MUX_CFG_IO_IMPEDANCE_MIN	0x1f
  #define DP83867_IO_MUX_CFG_CLK_O_DISABLE	BIT(6)
@@@ -285,40 -332,13 +284,42 @@@ static int dp83867_config_init(struct p
  
  		phy_write_mmd(phydev, DP83867_DEVADDR, DP83867_RGMIIDCTL,
  			      delay);
- 
- 		if (dp83867->io_impedance >= 0)
- 			phy_modify_mmd(phydev, DP83867_DEVADDR, DP83867_IO_MUX_CFG,
- 				       DP83867_IO_MUX_CFG_IO_IMPEDANCE_CTRL,
- 				       dp83867->io_impedance &
- 				       DP83867_IO_MUX_CFG_IO_IMPEDANCE_CTRL);
  	}
  
++<<<<<<< HEAD
 +	if (phydev->interface == PHY_INTERFACE_MODE_SGMII) {
 +		/* For support SPEED_10 in SGMII mode
 +		 * DP83867_10M_SGMII_RATE_ADAPT bit
 +		 * has to be cleared by software. That
 +		 * does not affect SPEED_100 and
 +		 * SPEED_1000.
 +		 */
 +		ret = phy_modify_mmd(phydev, DP83867_DEVADDR,
 +				     DP83867_10M_SGMII_CFG,
 +				     DP83867_10M_SGMII_RATE_ADAPT_MASK,
 +				     0);
 +		if (ret)
 +			return ret;
 +
 +		/* After reset SGMII Autoneg timer is set to 2us (bits 6 and 5
 +		 * are 01). That is not enough to finalize autoneg on some
 +		 * devices. Increase this timer duration to maximum 16ms.
 +		 */
 +		ret = phy_modify_mmd(phydev, DP83867_DEVADDR,
 +				     DP83867_CFG4,
 +				     DP83867_CFG4_SGMII_ANEG_MASK,
 +				     DP83867_CFG4_SGMII_ANEG_TIMER_16MS);
 +
 +		if (ret)
 +			return ret;
 +	}
++=======
+ 	/* If specified, set io impedance */
+ 	if (dp83867->io_impedance >= 0)
+ 		phy_modify_mmd(phydev, DP83867_DEVADDR, DP83867_IO_MUX_CFG,
+ 			       DP83867_IO_MUX_CFG_IO_IMPEDANCE_MASK,
+ 			       dp83867->io_impedance);
++>>>>>>> 27708eb5481b (net: phy: dp83867: IO impedance is not dependent on RGMII delay)
  
  	/* Enable Interrupt output INT_OE in CFG3 register */
  	if (phy_interrupt_is_valid(phydev)) {
* Unmerged path drivers/net/phy/dp83867.c
