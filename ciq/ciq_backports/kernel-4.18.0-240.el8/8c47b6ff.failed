KVM: PPC: Book3S HV: Check caller of H_SVM_* Hcalls

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Laurent Dufour <ldufour@linux.ibm.com>
commit 8c47b6ff29e3d88484fe59d02f9db6de7e44e310
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8c47b6ff.failed

The Hcall named H_SVM_* are reserved to the Ultravisor. However, nothing
prevent a malicious VM or SVM to call them. This could lead to weird result
and should be filtered out.

Checking the Secure bit of the calling MSR ensure that the call is coming
from either the Ultravisor or a SVM. But any system call made from a SVM
are going through the Ultravisor, and the Ultravisor should filter out
these malicious call. This way, only the Ultravisor is able to make such a
Hcall.

	Cc: Bharata B Rao <bharata@linux.ibm.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Signed-off-by: Laurent Dufour <ldufour@linux.ibm.com>
	Reviewed-by: Ram Pai <linuxram@us.ibnm.com>
	Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
(cherry picked from commit 8c47b6ff29e3d88484fe59d02f9db6de7e44e310)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv.c
diff --cc arch/powerpc/kvm/book3s_hv.c
index 8227db8cf4b7,a308de610cdf..000000000000
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@@ -1070,6 -1072,38 +1070,41 @@@ int kvmppc_pseries_do_hcall(struct kvm_
  					 kvmppc_get_gpr(vcpu, 5),
  					 kvmppc_get_gpr(vcpu, 6));
  		break;
++<<<<<<< HEAD
++=======
+ 	case H_SVM_PAGE_IN:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_page_in(vcpu->kvm,
+ 						   kvmppc_get_gpr(vcpu, 4),
+ 						   kvmppc_get_gpr(vcpu, 5),
+ 						   kvmppc_get_gpr(vcpu, 6));
+ 		break;
+ 	case H_SVM_PAGE_OUT:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_page_out(vcpu->kvm,
+ 						    kvmppc_get_gpr(vcpu, 4),
+ 						    kvmppc_get_gpr(vcpu, 5),
+ 						    kvmppc_get_gpr(vcpu, 6));
+ 		break;
+ 	case H_SVM_INIT_START:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_init_start(vcpu->kvm);
+ 		break;
+ 	case H_SVM_INIT_DONE:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_init_done(vcpu->kvm);
+ 		break;
+ 	case H_SVM_INIT_ABORT:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_init_abort(vcpu->kvm);
+ 		break;
+ 
++>>>>>>> 8c47b6ff29e3 (KVM: PPC: Book3S HV: Check caller of H_SVM_* Hcalls)
  	default:
  		return RESUME_HOST;
  	}
* Unmerged path arch/powerpc/kvm/book3s_hv.c
