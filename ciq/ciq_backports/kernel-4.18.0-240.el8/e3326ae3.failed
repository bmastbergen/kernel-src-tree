KVM: PPC: Book3S HV: Relax check on H_SVM_INIT_ABORT

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Laurent Dufour <ldufour@linux.ibm.com>
commit e3326ae3d59e443a379367c6936941d6ab55d316
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/e3326ae3.failed

The commit 8c47b6ff29e3 ("KVM: PPC: Book3S HV: Check caller of H_SVM_*
Hcalls") added checks of secure bit of SRR1 to filter out the Hcall
reserved to the Ultravisor.

However, the Hcall H_SVM_INIT_ABORT is made by the Ultravisor passing the
context of the VM calling UV_ESM. This allows the Hypervisor to return to
the guest without going through the Ultravisor. Thus the Secure bit of SRR1
is not set in that particular case.

In the case a regular VM is calling H_SVM_INIT_ABORT, this hcall will be
filtered out in kvmppc_h_svm_init_abort() because kvm->arch.secure_guest is
not set in that case.

Fixes: 8c47b6ff29e3 ("KVM: PPC: Book3S HV: Check caller of H_SVM_* Hcalls")
	Signed-off-by: Laurent Dufour <ldufour@linux.ibm.com>
	Reviewed-by: Greg Kurz <groug@kaod.org>
	Reviewed-by: Ram Pai <linuxram@us.ibm.com>
	Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
(cherry picked from commit e3326ae3d59e443a379367c6936941d6ab55d316)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv.c
diff --cc arch/powerpc/kvm/book3s_hv.c
index 8227db8cf4b7,1b84806abef6..000000000000
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@@ -1070,6 -1070,43 +1070,46 @@@ int kvmppc_pseries_do_hcall(struct kvm_
  					 kvmppc_get_gpr(vcpu, 5),
  					 kvmppc_get_gpr(vcpu, 6));
  		break;
++<<<<<<< HEAD
++=======
+ 	case H_SVM_PAGE_IN:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_page_in(vcpu->kvm,
+ 						   kvmppc_get_gpr(vcpu, 4),
+ 						   kvmppc_get_gpr(vcpu, 5),
+ 						   kvmppc_get_gpr(vcpu, 6));
+ 		break;
+ 	case H_SVM_PAGE_OUT:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_page_out(vcpu->kvm,
+ 						    kvmppc_get_gpr(vcpu, 4),
+ 						    kvmppc_get_gpr(vcpu, 5),
+ 						    kvmppc_get_gpr(vcpu, 6));
+ 		break;
+ 	case H_SVM_INIT_START:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_init_start(vcpu->kvm);
+ 		break;
+ 	case H_SVM_INIT_DONE:
+ 		ret = H_UNSUPPORTED;
+ 		if (kvmppc_get_srr1(vcpu) & MSR_S)
+ 			ret = kvmppc_h_svm_init_done(vcpu->kvm);
+ 		break;
+ 	case H_SVM_INIT_ABORT:
+ 		/*
+ 		 * Even if that call is made by the Ultravisor, the SSR1 value
+ 		 * is the guest context one, with the secure bit clear as it has
+ 		 * not yet been secured. So we can't check it here.
+ 		 * Instead the kvm->arch.secure_guest flag is checked inside
+ 		 * kvmppc_h_svm_init_abort().
+ 		 */
+ 		ret = kvmppc_h_svm_init_abort(vcpu->kvm);
+ 		break;
+ 
++>>>>>>> e3326ae3d59e (KVM: PPC: Book3S HV: Relax check on H_SVM_INIT_ABORT)
  	default:
  		return RESUME_HOST;
  	}
* Unmerged path arch/powerpc/kvm/book3s_hv.c
