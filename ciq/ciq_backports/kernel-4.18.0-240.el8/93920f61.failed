x86/cpu: Add 'table' argument to cpu_matches()

jira LE-1907
cve CVE-2020-0543
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Mark Gross <mgross@linux.intel.com>
commit 93920f61c2ad7edb01e63323832585796af75fc9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/93920f61.failed

To make cpu_matches() reusable for other matching tables, have it take a
pointer to a x86_cpu_id table as an argument.

 [ bp: Flip arguments order. ]

	Signed-off-by: Mark Gross <mgross@linux.intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
(cherry picked from commit 93920f61c2ad7edb01e63323832585796af75fc9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/common.c
diff --cc arch/x86/kernel/cpu/common.c
index 44de275dfa51,1131ae032bf2..000000000000
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@@ -1054,9 -1105,12 +1055,16 @@@ static void __init cpu_set_bug_bits(str
  		return;
  
  	setup_force_cpu_bug(X86_BUG_SPECTRE_V1);
++<<<<<<< HEAD
 +	setup_force_cpu_bug(X86_BUG_SPECTRE_V2);
++=======
  
- 	if (!cpu_matches(NO_SSB) && !(ia32_cap & ARCH_CAP_SSB_NO) &&
+ 	if (!cpu_matches(cpu_vuln_whitelist, NO_SPECTRE_V2))
+ 		setup_force_cpu_bug(X86_BUG_SPECTRE_V2);
++>>>>>>> 93920f61c2ad (x86/cpu: Add 'table' argument to cpu_matches())
+ 
+ 	if (!cpu_matches(cpu_vuln_whitelist, NO_SSB) &&
+ 	    !(ia32_cap & ARCH_CAP_SSB_NO) &&
  	   !cpu_has(c, X86_FEATURE_AMD_SSB_NO))
  		setup_force_cpu_bug(X86_BUG_SPEC_STORE_BYPASS);
  
* Unmerged path arch/x86/kernel/cpu/common.c
