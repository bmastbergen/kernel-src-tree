treewide: surround Kconfig file paths with double quotes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Masahiro Yamada <yamada.masahiro@socionext.com>
commit 8636a1f9677db4f883f29a072f401303acfc2edd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8636a1f9.failed

The Kconfig lexer supports special characters such as '.' and '/' in
the parameter context. In my understanding, the reason is just to
support bare file paths in the source statement.

I do not see a good reason to complicate Kconfig for the room of
ambiguity.

The majority of code already surrounds file paths with double quotes,
and it makes sense since file paths are constant string literals.

Make it treewide consistent now.

	Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
	Acked-by: Wolfram Sang <wsa@the-dreams.de>
	Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
	Acked-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 8636a1f9677db4f883f29a072f401303acfc2edd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/Kconfig
#	arch/openrisc/Kconfig
#	arch/powerpc/Kconfig
#	arch/riscv/Kconfig
#	arch/s390/Kconfig
#	drivers/gpu/drm/i915/Kconfig
#	security/Kconfig
diff --cc arch/arm64/Kconfig
index df530ef3b952,04e525fc5a0f..000000000000
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@@ -927,10 -781,8 +927,14 @@@ config NEED_PER_CPU_EMBED_FIRST_CHUN
  
  config HOLES_IN_ZONE
  	def_bool y
 +	depends on NUMA
  
++<<<<<<< HEAD
 +source kernel/Kconfig.preempt
 +source kernel/Kconfig.hz
++=======
+ source "kernel/Kconfig.hz"
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
  
  config ARCH_SUPPORTS_DEBUG_PAGEALLOC
  	def_bool y
diff --cc arch/openrisc/Kconfig
index 7eeff90f2a0d,d765b4a5e05f..000000000000
--- a/arch/openrisc/Kconfig
+++ b/arch/openrisc/Kconfig
@@@ -140,9 -139,7 +140,13 @@@ config SM
  
  	  If you don't know what to do here, say N.
  
++<<<<<<< HEAD
 +source kernel/Kconfig.hz
 +source kernel/Kconfig.preempt
 +source "mm/Kconfig"
++=======
+ source "kernel/Kconfig.hz"
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
  
  config OPENRISC_NO_SPR_SR_DSX
  	bool "use SPR_SR_DSX software emulation" if OR1K_1200
diff --cc arch/powerpc/Kconfig
index e53a4f79ab92,e1307d66c76b..000000000000
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@@ -409,9 -393,7 +409,13 @@@ config HIGHME
  	bool "High memory support"
  	depends on PPC32
  
++<<<<<<< HEAD
 +source kernel/Kconfig.hz
 +source kernel/Kconfig.preempt
 +source "fs/Kconfig.binfmt"
++=======
+ source "kernel/Kconfig.hz"
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
  
  config HUGETLB_PAGE_SIZE_VARIABLE
  	bool
diff --cc arch/riscv/Kconfig
index b87622866158,4f428ab4429f..000000000000
--- a/arch/riscv/Kconfig
+++ b/arch/riscv/Kconfig
@@@ -298,17 -261,32 +298,37 @@@ config CMDLINE_FORC
  
  	  If you don't know what to do here, say N.
  
 +config EARLY_PRINTK
 +	def_bool y
 +
 +source "lib/Kconfig.debug"
 +
 +config CMDLINE_BOOL
 +	bool
  endmenu
  
 -menu "Bus support"
 +source "security/Kconfig"
  
 -config PCI
 -	bool "PCI support"
 -	select PCI_MSI
 -	help
 -	  This feature enables support for PCI bus system. If you say Y
 -	  here, the kernel will include drivers and infrastructure code
 -	  to support PCI bus devices.
 +source "crypto/Kconfig"
  
++<<<<<<< HEAD
 +source "lib/Kconfig"
++=======
+ 	  If you don't know what to do here, say Y.
+ 
+ config PCI_DOMAINS
+ 	def_bool PCI
+ 
+ config PCI_DOMAINS_GENERIC
+ 	def_bool PCI
+ 
+ source "drivers/pci/Kconfig"
+ 
+ endmenu
+ 
+ menu "Power management options"
+ 
+ source "kernel/power/Kconfig"
+ 
+ endmenu
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
diff --cc arch/s390/Kconfig
index 03371828326b,48de9d32b833..000000000000
--- a/arch/s390/Kconfig
+++ b/arch/s390/Kconfig
@@@ -540,9 -520,7 +540,13 @@@ config SCHED_TOPOLOG
  	  making when dealing with machines that have multi-threading,
  	  multiple cores or multiple books.
  
++<<<<<<< HEAD
 +source kernel/Kconfig.preempt
 +
 +source kernel/Kconfig.hz
++=======
+ source "kernel/Kconfig.hz"
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
  
  config KEXEC
  	def_bool y
diff --cc drivers/gpu/drm/i915/Kconfig
index 0d21402945ab,148be8e1a090..000000000000
--- a/drivers/gpu/drm/i915/Kconfig
+++ b/drivers/gpu/drm/i915/Kconfig
@@@ -141,10 -132,4 +141,13 @@@ menu "drm/i915 Debugging
  depends on DRM_I915
  depends on EXPERT
  source "drivers/gpu/drm/i915/Kconfig.debug"
++<<<<<<< HEAD
 +endmenu
 +
 +menu "drm/i915 Profile Guided Optimisation"
 +	visible if EXPERT
 +	depends on DRM_I915
 +	source "drivers/gpu/drm/i915/Kconfig.profile"
++=======
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
  endmenu
diff --cc security/Kconfig
index bef0294d34b3,e4fe2f3c2c65..000000000000
--- a/security/Kconfig
+++ b/security/Kconfig
@@@ -231,50 -230,14 +231,59 @@@ config STATIC_USERMODEHELPER_PAT
  	  If you wish for all usermode helper programs to be disabled,
  	  specify an empty string here (i.e. "").
  
++<<<<<<< HEAD
 +config LOCK_DOWN_KERNEL
 +	bool "Allow the kernel to be 'locked down'"
 +	help
 +	  Allow the kernel to be locked down.  Locking down the kernel turns
 +	  off various features that might otherwise allow access to the kernel
 +	  image (eg. setting MSR registers).
 +
 +	  Note, however, that locking down your kernel will prevent some
 +	  drivers from functioning because allowing manual configuration of
 +	  hardware parameters is forbidden, lest a device be used to access the
 +	  kernel by DMA.  This mostly applies to ISA devices.
 +
 +	  The kernel lockdown can be triggered by adding lockdown=1 to the
 +	  kernel command line.
 +
 +config LOCK_DOWN_MANDATORY
 +	bool "Make kernel lockdown mandatory"
 +	depends on LOCK_DOWN_KERNEL
 +	help
 +	  Makes the lockdown non-negotiable.  It is always on and cannot be
 +	  disabled.
 +
 +config LOCK_DOWN_IN_EFI_SECURE_BOOT
 +	bool "Lock down the kernel in EFI Secure Boot mode"
 +	default n
 +	select LOCK_DOWN_KERNEL
 +	depends on EFI
 +	help
 +	  UEFI Secure Boot provides a mechanism for ensuring that the firmware
 +	  will only load signed bootloaders and kernels.  Secure boot mode may
 +	  be determined from EFI variables provided by the system firmware if
 +	  not indicated by the boot parameters.
 +
 +	  Enabling this option turns on results in kernel lockdown being
 +	  triggered if EFI Secure Boot is set.
 +
 +source security/selinux/Kconfig
 +source security/smack/Kconfig
 +source security/tomoyo/Kconfig
 +source security/apparmor/Kconfig
 +source security/loadpin/Kconfig
 +source security/yama/Kconfig
- 
- source security/integrity/Kconfig
++=======
+ source "security/selinux/Kconfig"
+ source "security/smack/Kconfig"
+ source "security/tomoyo/Kconfig"
+ source "security/apparmor/Kconfig"
+ source "security/loadpin/Kconfig"
+ source "security/yama/Kconfig"
++>>>>>>> 8636a1f9677d (treewide: surround Kconfig file paths with double quotes)
+ 
+ source "security/integrity/Kconfig"
  
  choice
  	prompt "Default security module"
diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index c23576a9a9d8..fcc5946addcd 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -907,7 +907,7 @@ config PLAT_VERSATILE
 
 source "arch/arm/firmware/Kconfig"
 
-source arch/arm/mm/Kconfig
+source "arch/arm/mm/Kconfig"
 
 config IWMMXT
 	bool "Enable iWMMXt support"
diff --git a/arch/arm/kvm/Kconfig b/arch/arm/kvm/Kconfig
index e2bd35b6780c..3f5320f46de2 100644
--- a/arch/arm/kvm/Kconfig
+++ b/arch/arm/kvm/Kconfig
@@ -55,6 +55,6 @@ config KVM_ARM_HOST
 	---help---
 	  Provides host support for ARM processors.
 
-source drivers/vhost/Kconfig
+source "drivers/vhost/Kconfig"
 
 endif # VIRTUALIZATION
* Unmerged path arch/arm64/Kconfig
diff --git a/arch/arm64/kvm/Kconfig b/arch/arm64/kvm/Kconfig
index 47b23bf617c7..a3f85624313e 100644
--- a/arch/arm64/kvm/Kconfig
+++ b/arch/arm64/kvm/Kconfig
@@ -61,6 +61,6 @@ config KVM_ARM_PMU
 config KVM_INDIRECT_VECTORS
        def_bool KVM && (HARDEN_BRANCH_PREDICTOR || HARDEN_EL2_VECTORS)
 
-source drivers/vhost/Kconfig
+source "drivers/vhost/Kconfig"
 
 endif # VIRTUALIZATION
diff --git a/arch/ia64/Kconfig b/arch/ia64/Kconfig
index d45b2b4bf85b..956086fa9cd1 100644
--- a/arch/ia64/Kconfig
+++ b/arch/ia64/Kconfig
@@ -262,7 +262,7 @@ config HZ
 endif
 
 if !IA64_HP_SIM
-source kernel/Kconfig.hz
+source "kernel/Kconfig.hz"
 endif
 
 config IA64_BRL_EMU
diff --git a/arch/m68k/Kconfig b/arch/m68k/Kconfig
index afadda00401e..908889759b5e 100644
--- a/arch/m68k/Kconfig
+++ b/arch/m68k/Kconfig
@@ -116,11 +116,11 @@ config BOOTINFO_PROC
 
 menu "Platform setup"
 
-source arch/m68k/Kconfig.cpu
+source "arch/m68k/Kconfig.cpu"
 
-source arch/m68k/Kconfig.machine
+source "arch/m68k/Kconfig.machine"
 
-source arch/m68k/Kconfig.bus
+source "arch/m68k/Kconfig.bus"
 
 endmenu
 
diff --git a/arch/mips/kvm/Kconfig b/arch/mips/kvm/Kconfig
index 76b93a9c8c9b..c36930226b7b 100644
--- a/arch/mips/kvm/Kconfig
+++ b/arch/mips/kvm/Kconfig
@@ -72,6 +72,6 @@ config KVM_MIPS_DEBUG_COP0_COUNTERS
 
 	  If unsure, say N.
 
-source drivers/vhost/Kconfig
+source "drivers/vhost/Kconfig"
 
 endif # VIRTUALIZATION
* Unmerged path arch/openrisc/Kconfig
* Unmerged path arch/powerpc/Kconfig
diff --git a/arch/powerpc/kvm/Kconfig b/arch/powerpc/kvm/Kconfig
index 68a0e9d5b440..bfdde04e4905 100644
--- a/arch/powerpc/kvm/Kconfig
+++ b/arch/powerpc/kvm/Kconfig
@@ -204,6 +204,6 @@ config KVM_XIVE
 	default y
 	depends on KVM_XICS && PPC_XIVE_NATIVE && KVM_BOOK3S_HV_POSSIBLE
 
-source drivers/vhost/Kconfig
+source "drivers/vhost/Kconfig"
 
 endif # VIRTUALIZATION
* Unmerged path arch/riscv/Kconfig
* Unmerged path arch/s390/Kconfig
diff --git a/arch/s390/kvm/Kconfig b/arch/s390/kvm/Kconfig
index d7b8d80976f1..e987e73738b5 100644
--- a/arch/s390/kvm/Kconfig
+++ b/arch/s390/kvm/Kconfig
@@ -58,6 +58,6 @@ config KVM_S390_UCONTROL
 
 # OK, it's a little counter-intuitive to do this, but it puts it neatly under
 # the virtualization menu.
-source drivers/vhost/Kconfig
+source "drivers/vhost/Kconfig"
 
 endif # VIRTUALIZATION
diff --git a/arch/sh/Kconfig b/arch/sh/Kconfig
index b58249fed0f7..c6be086d3df7 100644
--- a/arch/sh/Kconfig
+++ b/arch/sh/Kconfig
@@ -596,7 +596,7 @@ endmenu
 
 menu "Kernel features"
 
-source kernel/Kconfig.hz
+source "kernel/Kconfig.hz"
 
 config KEXEC
 	bool "kexec system call (EXPERIMENTAL)"
diff --git a/arch/sparc/Kconfig b/arch/sparc/Kconfig
index 4fe7ee737238..7c860bea6da9 100644
--- a/arch/sparc/Kconfig
+++ b/arch/sparc/Kconfig
@@ -191,7 +191,7 @@ config NR_CPUS
 	default 32 if SPARC32
 	default 4096 if SPARC64
 
-source kernel/Kconfig.hz
+source "kernel/Kconfig.hz"
 
 config GENERIC_HWEIGHT
 	bool
diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index 70c5effebd49..7584d69cea81 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -2024,7 +2024,7 @@ config SECCOMP
 
 	  If unsure, say Y. Only embedded should say N here.
 
-source kernel/Kconfig.hz
+source "kernel/Kconfig.hz"
 
 config KEXEC
 	bool "kexec system call"
diff --git a/arch/x86/kvm/Kconfig b/arch/x86/kvm/Kconfig
index 80abc68b3e90..1dc6e2874069 100644
--- a/arch/x86/kvm/Kconfig
+++ b/arch/x86/kvm/Kconfig
@@ -99,6 +99,6 @@ config KVM_MMU_AUDIT
 
 # OK, it's a little counter-intuitive to do this, but it puts it neatly under
 # the virtualization menu.
-source drivers/vhost/Kconfig
+source "drivers/vhost/Kconfig"
 
 endif # VIRTUALIZATION
diff --git a/block/Kconfig b/block/Kconfig
index 60140d8cf438..44d956dc66bb 100644
--- a/block/Kconfig
+++ b/block/Kconfig
@@ -204,4 +204,4 @@ config BLK_MQ_RDMA
 config BLK_PM
 	def_bool BLOCK && PM
 
-source block/Kconfig.iosched
+source "block/Kconfig.iosched"
diff --git a/crypto/Kconfig b/crypto/Kconfig
index d88f96c33ea5..855e419a59ed 100644
--- a/crypto/Kconfig
+++ b/crypto/Kconfig
@@ -1884,7 +1884,7 @@ config CRYPTO_HASH_INFO
 	bool
 
 source "drivers/crypto/Kconfig"
-source crypto/asymmetric_keys/Kconfig
-source certs/Kconfig
+source "crypto/asymmetric_keys/Kconfig"
+source "certs/Kconfig"
 
 endif	# if CRYPTO
diff --git a/drivers/crypto/Kconfig b/drivers/crypto/Kconfig
index 0f3d33beb795..2f5111f562d4 100644
--- a/drivers/crypto/Kconfig
+++ b/drivers/crypto/Kconfig
@@ -278,7 +278,7 @@ config CRYPTO_DEV_HIFN_795X_RNG
 	  Select this option if you want to enable the random number generator
 	  on the HIFN 795x crypto adapters.
 
-source drivers/crypto/caam/Kconfig
+source "drivers/crypto/caam/Kconfig"
 
 config CRYPTO_DEV_TALITOS
 	tristate "Talitos Freescale Security Engine (SEC)"
* Unmerged path drivers/gpu/drm/i915/Kconfig
diff --git a/drivers/hwmon/Kconfig b/drivers/hwmon/Kconfig
index fd7fb6c041c2..1dfc770b5a44 100644
--- a/drivers/hwmon/Kconfig
+++ b/drivers/hwmon/Kconfig
@@ -1296,7 +1296,7 @@ config SENSORS_PCF8591
 	  These devices are hard to detect and rarely found on mainstream
 	  hardware.  If unsure, say N.
 
-source drivers/hwmon/pmbus/Kconfig
+source "drivers/hwmon/pmbus/Kconfig"
 
 config SENSORS_PWM_FAN
 	tristate "PWM fan"
diff --git a/drivers/i2c/Kconfig b/drivers/i2c/Kconfig
index efc3354d60ae..c6b7fc7b67d6 100644
--- a/drivers/i2c/Kconfig
+++ b/drivers/i2c/Kconfig
@@ -68,7 +68,7 @@ config I2C_MUX
 	  This support is also available as a module.  If so, the module
 	  will be called i2c-mux.
 
-source drivers/i2c/muxes/Kconfig
+source "drivers/i2c/muxes/Kconfig"
 
 config I2C_HELPER_AUTO
 	bool "Autoselect pertinent helper modules"
@@ -94,8 +94,8 @@ config I2C_SMBUS
 	  This support is also available as a module.  If so, the module
 	  will be called i2c-smbus.
 
-source drivers/i2c/algos/Kconfig
-source drivers/i2c/busses/Kconfig
+source "drivers/i2c/algos/Kconfig"
+source "drivers/i2c/busses/Kconfig"
 
 config I2C_STUB
 	tristate "I2C/SMBus Test Stub"
diff --git a/drivers/pps/Kconfig b/drivers/pps/Kconfig
index c6008f296605..965aa086a1e0 100644
--- a/drivers/pps/Kconfig
+++ b/drivers/pps/Kconfig
@@ -37,8 +37,8 @@ config NTP_PPS
 
 	  It doesn't work on tickless systems at the moment.
 
-source drivers/pps/clients/Kconfig
+source "drivers/pps/clients/Kconfig"
 
-source drivers/pps/generators/Kconfig
+source "drivers/pps/generators/Kconfig"
 
 endif # PPS
diff --git a/drivers/ras/Kconfig b/drivers/ras/Kconfig
index 4c3c67d13254..b834ff555188 100644
--- a/drivers/ras/Kconfig
+++ b/drivers/ras/Kconfig
@@ -30,6 +30,6 @@ menuconfig RAS
 
 if RAS
 
-source arch/x86/ras/Kconfig
+source "arch/x86/ras/Kconfig"
 
 endif
diff --git a/drivers/thermal/Kconfig b/drivers/thermal/Kconfig
index 8590dccd524a..aedfc3d64595 100644
--- a/drivers/thermal/Kconfig
+++ b/drivers/thermal/Kconfig
@@ -384,7 +384,7 @@ config INTEL_QUARK_DTS_THERMAL
 	  underlying BIOS/Firmware.
 
 menu "ACPI INT340X thermal drivers"
-source drivers/thermal/int340x_thermal/Kconfig
+source "drivers/thermal/int340x_thermal/Kconfig"
 endmenu
 
 config INTEL_BXT_PMIC_THERMAL
diff --git a/drivers/w1/Kconfig b/drivers/w1/Kconfig
index 6743bde038cc..dbb41f45af8a 100644
--- a/drivers/w1/Kconfig
+++ b/drivers/w1/Kconfig
@@ -25,7 +25,7 @@ config W1_CON
 	  2. Userspace commands. Includes read/write and search/alarm search commands.
 	  3. Replies to userspace commands.
 
-source drivers/w1/masters/Kconfig
-source drivers/w1/slaves/Kconfig
+source "drivers/w1/masters/Kconfig"
+source "drivers/w1/slaves/Kconfig"
 
 endif # W1
diff --git a/lib/Kconfig.debug b/lib/Kconfig.debug
index bdfb152416e9..ffb9c839750b 100644
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@ -471,7 +471,7 @@ config DEBUG_KERNEL
 
 menu "Memory Debugging"
 
-source mm/Kconfig.debug
+source "mm/Kconfig.debug"
 
 config DEBUG_OBJECTS
 	bool "Debug object operations"
@@ -1641,7 +1641,7 @@ config LATENCYTOP
 	  Enable this option if you want to use the LatencyTOP tool
 	  to find out which userspace is blocking on what kernel operations.
 
-source kernel/trace/Kconfig
+source "kernel/trace/Kconfig"
 
 config PROVIDE_OHCI1394_DMA_INIT
 	bool "Remote debugging over FireWire early on boot"
* Unmerged path security/Kconfig
diff --git a/security/integrity/Kconfig b/security/integrity/Kconfig
index a6c0193c252d..3ba1168b1756 100644
--- a/security/integrity/Kconfig
+++ b/security/integrity/Kconfig
@@ -86,7 +86,7 @@ config INTEGRITY_AUDIT
 	  be enabled by specifying 'integrity_audit=1' on the kernel
 	  command line.
 
-source security/integrity/ima/Kconfig
-source security/integrity/evm/Kconfig
+source "security/integrity/ima/Kconfig"
+source "security/integrity/evm/Kconfig"
 
 endif   # if INTEGRITY
