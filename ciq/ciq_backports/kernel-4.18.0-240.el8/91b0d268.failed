KVM: x86: inline memslot_valid_for_gpte

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 91b0d268a59dd9c18221ea750b80f9a317b29ed2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/91b0d268.failed

The function now has a single caller, so there is no point
in keeping it separate.

	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 91b0d268a59dd9c18221ea750b80f9a317b29ed2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/mmu.c
diff --cc arch/x86/kvm/mmu/mmu.c
index f41b4d90aa8d,84eeb61d06aa..000000000000
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@@ -1267,56 -1264,6 +1267,59 @@@ static void unaccount_huge_nx_page(stru
  	list_del(&sp->lpage_disallowed_link);
  }
  
++<<<<<<< HEAD
 +static bool __mmu_gfn_lpage_is_disallowed(gfn_t gfn, int level,
 +					  struct kvm_memory_slot *slot)
 +{
 +	struct kvm_lpage_info *linfo;
 +
 +	if (slot) {
 +		linfo = lpage_info_slot(gfn, slot, level);
 +		return !!linfo->disallow_lpage;
 +	}
 +
 +	return true;
 +}
 +
 +static bool mmu_gfn_lpage_is_disallowed(struct kvm_vcpu *vcpu, gfn_t gfn,
 +					int level)
 +{
 +	struct kvm_memory_slot *slot;
 +
 +	slot = kvm_vcpu_gfn_to_memslot(vcpu, gfn);
 +	return __mmu_gfn_lpage_is_disallowed(gfn, level, slot);
 +}
 +
 +static int host_mapping_level(struct kvm_vcpu *vcpu, gfn_t gfn)
 +{
 +	unsigned long page_size;
 +	int i, ret = 0;
 +
 +	page_size = kvm_host_page_size(vcpu, gfn);
 +
 +	for (i = PT_PAGE_TABLE_LEVEL; i <= PT_MAX_HUGEPAGE_LEVEL; ++i) {
 +		if (page_size >= KVM_HPAGE_SIZE(i))
 +			ret = i;
 +		else
 +			break;
 +	}
 +
 +	return ret;
 +}
 +
 +static inline bool memslot_valid_for_gpte(struct kvm_memory_slot *slot,
 +					  bool no_dirty_log)
 +{
 +	if (!slot || slot->flags & KVM_MEMSLOT_INVALID)
 +		return false;
 +	if (no_dirty_log && slot->dirty_bitmap)
 +		return false;
 +
 +	return true;
 +}
 +
++=======
++>>>>>>> 91b0d268a59d (KVM: x86: inline memslot_valid_for_gpte)
  static struct kvm_memory_slot *
  gfn_to_memslot_dirty_bitmap(struct kvm_vcpu *vcpu, gfn_t gfn,
  			    bool no_dirty_log)
* Unmerged path arch/x86/kvm/mmu/mmu.c
