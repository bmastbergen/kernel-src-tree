io_uring: fix up O_NONBLOCK handling for sockets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jens Axboe <axboe@kernel.dk>
commit 491381ce07ca57f68c49c79a8a43da5b60749e32
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/491381ce.failed

We've got two issues with the non-regular file handling for non-blocking
IO:

1) We don't want to re-do a short read in full for a non-regular file,
   as we can't just read the data again.
2) For non-regular files that don't support non-blocking IO attempts,
   we need to punt to async context even if the file is opened as
   non-blocking. Otherwise the caller always gets -EAGAIN.

Add two new request flags to handle these cases. One is just a cache
of the inode S_ISREG() status, the other tells io_uring that we always
need to punt this request to async context, even if REQ_F_NOWAIT is set.

	Cc: stable@vger.kernel.org
	Reported-by: Hrvoje Zeba <zeba.hrvoje@gmail.com>
	Tested-by: Hrvoje Zeba <zeba.hrvoje@gmail.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 491381ce07ca57f68c49c79a8a43da5b60749e32)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/io_uring.c
diff --cc fs/io_uring.c
index e831d5a8df98,b7d4085d6ffd..000000000000
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@@ -337,6 -321,9 +337,12 @@@ struct io_kiocb 
  #define REQ_F_LINK_DONE		128	/* linked sqes done */
  #define REQ_F_FAIL_LINK		256	/* fail rest of links */
  #define REQ_F_SHADOW_DRAIN	512	/* link-drain shadow req */
++<<<<<<< HEAD
++=======
+ #define REQ_F_TIMEOUT		1024	/* timeout request */
+ #define REQ_F_ISREG		2048	/* regular file */
+ #define REQ_F_MUST_PUNT		4096	/* must be punted even for NONBLOCK */
++>>>>>>> 491381ce07ca (io_uring: fix up O_NONBLOCK handling for sockets)
  	u64			user_data;
  	u32			result;
  	u32			sequence;
* Unmerged path fs/io_uring.c
