PCI/ATS: Consolidate ATS declarations in linux/pci-ats.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Krzysztof Wilczynski <kw@linux.com>
commit b24d5c2098596a41cf187af41287777a2e0dd753
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b24d5c20.failed

Move ATS function prototypes from include/linux/pci.h to
include/linux/pci-ats.h as the ATS, PRI, and PASID interfaces are related
and are used only by the IOMMU drivers.  This effectively reverts
ff9bee895c4d ("PCI: Move ATS declarations to linux/pci.h so they're all
together").

Also, remove surplus forward declaration of struct pci_ats from
include/linux/pci.h, as it is no longer needed, since struct pci_ats was
embedded directly into struct pci_dev by d544d75ac96a ("PCI: Embed ATS info
directly into struct pci_dev").

No functional changes intended.

Link: https://lore.kernel.org/r/20190914213032.22314-1-kw@linux.com
	Signed-off-by: Krzysztof Wilczynski <kw@linux.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit b24d5c2098596a41cf187af41287777a2e0dd753)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index 5034e52e2cc8,9fc22f48055e..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -283,12 -284,8 +283,11 @@@ struct irq_affinity
  struct pcie_link_state;
  struct pci_vpd;
  struct pci_sriov;
- struct pci_ats;
  struct pci_p2pdma;
  
 +struct pci_dev_extended_rh {
 +};
 +
  /* The pci_dev structure describes PCI devices */
  struct pci_dev {
  	struct list_head bus_list;	/* Node in per-bus list */
@@@ -1777,8 -1749,34 +1776,19 @@@ static inline int pci_irqd_intx_xlate(s
  				      unsigned long *out_hwirq,
  				      unsigned int *out_type)
  { return -EINVAL; }
 -
 -static inline const struct pci_device_id *pci_match_id(const struct pci_device_id *ids,
 -							 struct pci_dev *dev)
 -{ return NULL; }
 -static inline bool pci_ats_disabled(void) { return true; }
 -
 -static inline int pci_irq_vector(struct pci_dev *dev, unsigned int nr)
 -{
 -	return -EINVAL;
 -}
 -
 -static inline int
 -pci_alloc_irq_vectors_affinity(struct pci_dev *dev, unsigned int min_vecs,
 -			       unsigned int max_vecs, unsigned int flags,
 -			       struct irq_affinity *aff_desc)
 -{
 -	return -ENOSPC;
 -}
  #endif /* CONFIG_PCI */
  
++<<<<<<< HEAD
++=======
+ static inline int
+ pci_alloc_irq_vectors(struct pci_dev *dev, unsigned int min_vecs,
+ 		      unsigned int max_vecs, unsigned int flags)
+ {
+ 	return pci_alloc_irq_vectors_affinity(dev, min_vecs, max_vecs, flags,
+ 					      NULL);
+ }
+ 
++>>>>>>> b24d5c209859 (PCI/ATS: Consolidate ATS declarations in linux/pci-ats.h)
  /* Include architecture-dependent settings and functions */
  
  #include <asm/pci.h>
diff --git a/include/linux/pci-ats.h b/include/linux/pci-ats.h
index a7a2b3d94fcc..67de3a9499bb 100644
--- a/include/linux/pci-ats.h
+++ b/include/linux/pci-ats.h
@@ -4,73 +4,54 @@
 
 #include <linux/pci.h>
 
-#ifdef CONFIG_PCI_PRI
+#ifdef CONFIG_PCI_ATS
+/* Address Translation Service */
+int pci_enable_ats(struct pci_dev *dev, int ps);
+void pci_disable_ats(struct pci_dev *dev);
+int pci_ats_queue_depth(struct pci_dev *dev);
+int pci_ats_page_aligned(struct pci_dev *dev);
+#else /* CONFIG_PCI_ATS */
+static inline int pci_enable_ats(struct pci_dev *d, int ps)
+{ return -ENODEV; }
+static inline void pci_disable_ats(struct pci_dev *d) { }
+static inline int pci_ats_queue_depth(struct pci_dev *d)
+{ return -ENODEV; }
+static inline int pci_ats_page_aligned(struct pci_dev *dev)
+{ return 0; }
+#endif /* CONFIG_PCI_ATS */
 
+#ifdef CONFIG_PCI_PRI
 int pci_enable_pri(struct pci_dev *pdev, u32 reqs);
 void pci_disable_pri(struct pci_dev *pdev);
 void pci_restore_pri_state(struct pci_dev *pdev);
 int pci_reset_pri(struct pci_dev *pdev);
 int pci_prg_resp_pasid_required(struct pci_dev *pdev);
-
 #else /* CONFIG_PCI_PRI */
-
 static inline int pci_enable_pri(struct pci_dev *pdev, u32 reqs)
-{
-	return -ENODEV;
-}
-
-static inline void pci_disable_pri(struct pci_dev *pdev)
-{
-}
-
-static inline void pci_restore_pri_state(struct pci_dev *pdev)
-{
-}
-
+{ return -ENODEV; }
+static inline void pci_disable_pri(struct pci_dev *pdev) { }
+static inline void pci_restore_pri_state(struct pci_dev *pdev) { }
 static inline int pci_reset_pri(struct pci_dev *pdev)
-{
-	return -ENODEV;
-}
-
+{ return -ENODEV; }
 static inline int pci_prg_resp_pasid_required(struct pci_dev *pdev)
-{
-	return 0;
-}
+{ return 0; }
 #endif /* CONFIG_PCI_PRI */
 
 #ifdef CONFIG_PCI_PASID
-
 int pci_enable_pasid(struct pci_dev *pdev, int features);
 void pci_disable_pasid(struct pci_dev *pdev);
 void pci_restore_pasid_state(struct pci_dev *pdev);
 int pci_pasid_features(struct pci_dev *pdev);
 int pci_max_pasids(struct pci_dev *pdev);
-
-#else  /* CONFIG_PCI_PASID */
-
+#else /* CONFIG_PCI_PASID */
 static inline int pci_enable_pasid(struct pci_dev *pdev, int features)
-{
-	return -EINVAL;
-}
-
-static inline void pci_disable_pasid(struct pci_dev *pdev)
-{
-}
-
-static inline void pci_restore_pasid_state(struct pci_dev *pdev)
-{
-}
-
+{ return -EINVAL; }
+static inline void pci_disable_pasid(struct pci_dev *pdev) { }
+static inline void pci_restore_pasid_state(struct pci_dev *pdev) { }
 static inline int pci_pasid_features(struct pci_dev *pdev)
-{
-	return -EINVAL;
-}
-
+{ return -EINVAL; }
 static inline int pci_max_pasids(struct pci_dev *pdev)
-{
-	return -EINVAL;
-}
+{ return -EINVAL; }
 #endif /* CONFIG_PCI_PASID */
 
-
-#endif /* LINUX_PCI_ATS_H*/
+#endif /* LINUX_PCI_ATS_H */
* Unmerged path include/linux/pci.h
