drm/i915: Prefer intel_connector over drm_connector in hotplug code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ville Syrj채l채 <ville.syrjala@linux.intel.com>
commit 70a221b2428804e0883aec2dde25147c247cc46f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/70a221b2.failed

Replace the drm_connector loops with intel_connector loops to
streamline the code.

	Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200121171100.4370-2-ville.syrjala@linux.intel.com
	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
(cherry picked from commit 70a221b2428804e0883aec2dde25147c247cc46f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_hotplug.c
diff --cc drivers/gpu/drm/i915/display/intel_hotplug.c
index ea3de4acc850,042d98bae1ea..000000000000
--- a/drivers/gpu/drm/i915/display/intel_hotplug.c
+++ b/drivers/gpu/drm/i915/display/intel_hotplug.c
@@@ -188,16 -192,18 +185,24 @@@ intel_hpd_irq_storm_switch_to_polling(s
  	lockdep_assert_held(&dev_priv->irq_lock);
  
  	drm_connector_list_iter_begin(dev, &conn_iter);
- 	drm_for_each_connector_iter(connector, &conn_iter) {
- 		if (connector->polled != DRM_CONNECTOR_POLL_HPD)
+ 	for_each_intel_connector_iter(connector, &conn_iter) {
+ 		struct intel_encoder *encoder;
+ 		enum hpd_pin pin;
+ 
+ 		if (connector->base.polled != DRM_CONNECTOR_POLL_HPD)
  			continue;
  
++<<<<<<< HEAD
 +		intel_connector = to_intel_connector(connector);
 +		intel_encoder = intel_connector->encoder;
 +		if (!intel_encoder)
++=======
+ 		encoder = intel_attached_encoder(connector);
+ 		if (!encoder)
++>>>>>>> 70a221b24288 (drm/i915: Prefer intel_connector over drm_connector in hotplug code)
  			continue;
  
- 		pin = intel_encoder->hpd_pin;
+ 		pin = encoder->hpd_pin;
  		if (pin == HPD_NONE ||
  		    dev_priv->hotplug.stats[pin].state != HPD_MARK_DISABLED)
  			continue;
@@@ -243,18 -249,16 +248,22 @@@ static void intel_hpd_irq_storm_reenabl
  		dev_priv->hotplug.stats[pin].state = HPD_ENABLED;
  
  		drm_connector_list_iter_begin(dev, &conn_iter);
- 		drm_for_each_connector_iter(connector, &conn_iter) {
- 			struct intel_connector *intel_connector = to_intel_connector(connector);
- 
+ 		for_each_intel_connector_iter(connector, &conn_iter) {
  			/* Don't check MST ports, they don't have pins */
++<<<<<<< HEAD
 +			if (!intel_connector->mst_port &&
 +			    intel_connector->encoder->hpd_pin == pin) {
 +				if (connector->polled != intel_connector->polled)
++=======
+ 			if (!connector->mst_port &&
+ 			    intel_attached_encoder(connector)->hpd_pin == pin) {
+ 				if (connector->base.polled != connector->polled)
++>>>>>>> 70a221b24288 (drm/i915: Prefer intel_connector over drm_connector in hotplug code)
  					DRM_DEBUG_DRIVER("Reenabling HPD on connector %s\n",
- 							 connector->name);
- 				connector->polled = intel_connector->polled;
- 				if (!connector->polled)
- 					connector->polled = DRM_CONNECTOR_POLL_HPD;
+ 							 connector->base.name);
+ 				connector->base.polled = connector->polled;
+ 				if (!connector->base.polled)
+ 					connector->base.polled = DRM_CONNECTOR_POLL_HPD;
  			}
  		}
  		drm_connector_list_iter_end(&conn_iter);
@@@ -349,14 -355,14 +358,16 @@@ static void i915_digport_work_func(stru
  static void i915_hotplug_work_func(struct work_struct *work)
  {
  	struct drm_i915_private *dev_priv =
 -		container_of(work, struct drm_i915_private,
 -			     hotplug.hotplug_work.work);
 +		container_of(work, struct drm_i915_private, hotplug.hotplug_work);
  	struct drm_device *dev = &dev_priv->drm;
- 	struct intel_connector *intel_connector;
- 	struct intel_encoder *intel_encoder;
- 	struct drm_connector *connector;
  	struct drm_connector_list_iter conn_iter;
++<<<<<<< HEAD
 +	bool changed = false;
++=======
+ 	struct intel_connector *connector;
+ 	u32 changed = 0, retry = 0;
++>>>>>>> 70a221b24288 (drm/i915: Prefer intel_connector over drm_connector in hotplug code)
  	u32 hpd_event_bits;
 -	u32 hpd_retry_bits;
  
  	mutex_lock(&dev->mode_config.mutex);
  	DRM_DEBUG_KMS("running encoder hotplug functions\n");
@@@ -372,17 -380,30 +383,44 @@@
  	spin_unlock_irq(&dev_priv->irq_lock);
  
  	drm_connector_list_iter_begin(dev, &conn_iter);
++<<<<<<< HEAD
 +	drm_for_each_connector_iter(connector, &conn_iter) {
 +		intel_connector = to_intel_connector(connector);
 +		if (!intel_connector->encoder)
 +			continue;
 +		intel_encoder = intel_connector->encoder;
 +		if (hpd_event_bits & (1 << intel_encoder->hpd_pin)) {
++=======
+ 	for_each_intel_connector_iter(connector, &conn_iter) {
+ 		struct intel_encoder *encoder =
+ 			intel_attached_encoder(connector);
+ 		u32 hpd_bit;
+ 
+ 		if (!encoder)
+ 			continue;
+ 
+ 		hpd_bit = BIT(encoder->hpd_pin);
+ 		if ((hpd_event_bits | hpd_retry_bits) & hpd_bit) {
++>>>>>>> 70a221b24288 (drm/i915: Prefer intel_connector over drm_connector in hotplug code)
  			DRM_DEBUG_KMS("Connector %s (pin %i) received hotplug event.\n",
- 				      connector->name, intel_encoder->hpd_pin);
+ 				      connector->base.name, encoder->hpd_pin);
  
++<<<<<<< HEAD
 +			changed |= intel_encoder->hotplug(intel_encoder,
 +							  intel_connector);
++=======
+ 			switch (encoder->hotplug(encoder, connector,
+ 						 hpd_event_bits & hpd_bit)) {
+ 			case INTEL_HOTPLUG_UNCHANGED:
+ 				break;
+ 			case INTEL_HOTPLUG_CHANGED:
+ 				changed |= hpd_bit;
+ 				break;
+ 			case INTEL_HOTPLUG_RETRY:
+ 				retry |= hpd_bit;
+ 				break;
+ 			}
++>>>>>>> 70a221b24288 (drm/i915: Prefer intel_connector over drm_connector in hotplug code)
  		}
  	}
  	drm_connector_list_iter_end(&conn_iter);
@@@ -579,12 -610,12 +615,18 @@@ static void i915_hpd_poll_init_work(str
  
  		/* MST has a dynamic intel_connector->encoder and it's reprobing
  		 * is all handled by the MST helpers. */
- 		if (intel_connector->mst_port)
+ 		if (connector->mst_port)
  			continue;
  
++<<<<<<< HEAD
 +		if (!connector->polled && I915_HAS_HOTPLUG(dev_priv) &&
 +		    intel_connector->encoder->hpd_pin > HPD_NONE) {
 +			connector->polled = enabled ?
++=======
+ 		if (!connector->base.polled && I915_HAS_HOTPLUG(dev_priv) &&
+ 		    intel_attached_encoder(connector)->hpd_pin > HPD_NONE) {
+ 			connector->base.polled = enabled ?
++>>>>>>> 70a221b24288 (drm/i915: Prefer intel_connector over drm_connector in hotplug code)
  				DRM_CONNECTOR_POLL_CONNECT |
  				DRM_CONNECTOR_POLL_DISCONNECT :
  				DRM_CONNECTOR_POLL_HPD;
* Unmerged path drivers/gpu/drm/i915/display/intel_hotplug.c
