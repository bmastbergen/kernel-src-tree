kvm: add capability for halt polling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author David Matlack <dmatlack@google.com>
commit acd05785e48c01edb2c4f4d014d28478b5f19fb5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/acd05785.failed

KVM_CAP_HALT_POLL is a per-VM capability that lets userspace
control the halt-polling time, allowing halt-polling to be tuned or
disabled on particular VMs.

With dynamic halt-polling, a VM's VCPUs can poll from anywhere from
[0, halt_poll_ns] on each halt. KVM_CAP_HALT_POLL sets the
upper limit on the poll time.

	Signed-off-by: David Matlack <dmatlack@google.com>
	Signed-off-by: Jon Cargille <jcargill@google.com>
	Reviewed-by: Jim Mattson <jmattson@google.com>
Message-Id: <20200417221446.108733-1-jcargill@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit acd05785e48c01edb2c4f4d014d28478b5f19fb5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/virt/kvm/api.txt
#	include/uapi/linux/kvm.h
#	virt/kvm/kvm_main.c
diff --cc Documentation/virt/kvm/api.txt
index 0fa33ec7673f,d871dacb984e..000000000000
--- a/Documentation/virt/kvm/api.txt
+++ b/Documentation/virt/kvm/api.txt
@@@ -5127,8 -5785,42 +5127,45 @@@ it hard or impossible to use it correct
  KVM_CAP_MANUAL_DIRTY_LOG_PROTECT2 signals that those bugs are fixed.
  Userspace should not try to use KVM_CAP_MANUAL_DIRTY_LOG_PROTECT.
  
++<<<<<<< HEAD:Documentation/virt/kvm/api.txt
++=======
+ 7.19 KVM_CAP_PPC_SECURE_GUEST
+ ------------------------------
+ 
+ :Architectures: ppc
+ 
+ This capability indicates that KVM is running on a host that has
+ ultravisor firmware and thus can support a secure guest.  On such a
+ system, a guest can ask the ultravisor to make it a secure guest,
+ one whose memory is inaccessible to the host except for pages which
+ are explicitly requested to be shared with the host.  The ultravisor
+ notifies KVM when a guest requests to become a secure guest, and KVM
+ has the opportunity to veto the transition.
+ 
+ If present, this capability can be enabled for a VM, meaning that KVM
+ will allow the transition to secure guest mode.  Otherwise KVM will
+ veto the transition.
+ 
+ 7.20 KVM_CAP_HALT_POLL
+ ----------------------
+ 
+ :Architectures: all
+ :Target: VM
+ :Parameters: args[0] is the maximum poll time in nanoseconds
+ :Returns: 0 on success; -1 on error
+ 
+ This capability overrides the kvm module parameter halt_poll_ns for the
+ target VM.
+ 
+ VCPU polling allows a VCPU to poll for wakeup events instead of immediately
+ scheduling during guest halts. The maximum time a VCPU can spend polling is
+ controlled by the kvm module parameter halt_poll_ns. This capability allows
+ the maximum halt time to specified on a per-VM basis, effectively overriding
+ the module parameter for the target VM.
+ 
++>>>>>>> acd05785e48c (kvm: add capability for halt polling):Documentation/virt/kvm/api.rst
  8. Other capabilities.
 -======================
 +----------------------
  
  This section lists capabilities that give information about other
  features of the KVM implementation.
diff --cc include/uapi/linux/kvm.h
index 8e4c64ff9f98,ac9eba0289d1..000000000000
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@@ -1004,8 -1009,15 +1004,18 @@@ struct kvm_ppc_resize_hpt 
  #define KVM_CAP_PMU_EVENT_FILTER 173
  #define KVM_CAP_ARM_IRQ_LINE_LAYOUT_2 174
  #define KVM_CAP_HYPERV_DIRECT_TLBFLUSH 175
++<<<<<<< HEAD
 +#define KVM_CAP_ARM_NISV_TO_USER 176
 +#define KVM_CAP_ARM_INJECT_EXT_DABT 177
++=======
+ #define KVM_CAP_PPC_GUEST_DEBUG_SSTEP 176
+ #define KVM_CAP_ARM_NISV_TO_USER 177
+ #define KVM_CAP_ARM_INJECT_EXT_DABT 178
+ #define KVM_CAP_S390_VCPU_RESETS 179
+ #define KVM_CAP_S390_PROTECTED 180
+ #define KVM_CAP_PPC_SECURE_GUEST 181
+ #define KVM_CAP_HALT_POLL 182
++>>>>>>> acd05785e48c (kvm: add capability for halt polling)
  
  #ifdef KVM_CAP_IRQ_ROUTING
  
diff --cc virt/kvm/kvm_main.c
index 76b1b47d8bb4,33e1eee96f75..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -714,7 -710,8 +714,12 @@@ static struct kvm *kvm_create_vm(unsign
  			goto out_err_no_arch_destroy_vm;
  	}
  
++<<<<<<< HEAD
 +	refcount_set(&kvm->users_count, 1);
++=======
+ 	kvm->max_halt_poll_ns = halt_poll_ns;
+ 
++>>>>>>> acd05785e48c (kvm: add capability for halt polling)
  	r = kvm_arch_init_vm(kvm, type);
  	if (r)
  		goto out_err_no_arch_destroy_vm;
* Unmerged path Documentation/virt/kvm/api.txt
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
index 31f506e1802d..a8ddaf30d707 100644
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -508,6 +508,7 @@ struct kvm {
 	struct srcu_struct srcu;
 	struct srcu_struct irq_srcu;
 	pid_t userspace_pid;
+	unsigned int max_halt_poll_ns;
 };
 
 #define kvm_err(fmt, ...) \
* Unmerged path include/uapi/linux/kvm.h
* Unmerged path virt/kvm/kvm_main.c
