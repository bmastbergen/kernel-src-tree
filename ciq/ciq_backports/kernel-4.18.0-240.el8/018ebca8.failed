x86/cpufeatures: Enable a new AVX512 CPU feature

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Gayatri Kammela <gayatri.kammela@intel.com>
commit 018ebca8bd704f18d56f8fff38e2c3d76d7d39fb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/018ebca8.failed

Add a new AVX512 instruction group/feature for enumeration in
/proc/cpuinfo: AVX512_VP2INTERSECT.

CPUID.(EAX=7,ECX=0):EDX[bit 8]  AVX512_VP2INTERSECT

Detailed information of CPUID bits for this feature can be found in
the Intel Architecture Intsruction Set Extensions Programming Reference
document (refer to Table 1-2). A copy of this document is available at
https://bugzilla.kernel.org/show_bug.cgi?id=204215.

	Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20190717234632.32673-3-gayatri.kammela@intel.com

(cherry picked from commit 018ebca8bd704f18d56f8fff38e2c3d76d7d39fb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/cpuid-deps.c
diff --cc arch/x86/kernel/cpu/cpuid-deps.c
index a444028d8145,3cbe24ca80ab..000000000000
--- a/arch/x86/kernel/cpu/cpuid-deps.c
+++ b/arch/x86/kernel/cpu/cpuid-deps.c
@@@ -20,49 -20,55 +20,101 @@@ struct cpuid_dep 
   * but it's difficult to tell that to the init reference checker.
   */
  static const struct cpuid_dep cpuid_deps[] = {
++<<<<<<< HEAD
 +	{ X86_FEATURE_XSAVEOPT,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_XSAVEC,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_XSAVES,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_AVX,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_PKU,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_MPX,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_XGETBV1,		X86_FEATURE_XSAVE     },
 +	{ X86_FEATURE_FXSR_OPT,		X86_FEATURE_FXSR      },
 +	{ X86_FEATURE_XMM,		X86_FEATURE_FXSR      },
 +	{ X86_FEATURE_XMM2,		X86_FEATURE_XMM       },
 +	{ X86_FEATURE_XMM3,		X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_XMM4_1,		X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_XMM4_2,		X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_XMM3,		X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_PCLMULQDQ,	X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_SSSE3,		X86_FEATURE_XMM2,     },
 +	{ X86_FEATURE_F16C,		X86_FEATURE_XMM2,     },
 +	{ X86_FEATURE_AES,		X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_SHA_NI,		X86_FEATURE_XMM2      },
 +	{ X86_FEATURE_FMA,		X86_FEATURE_AVX       },
 +	{ X86_FEATURE_AVX2,		X86_FEATURE_AVX,      },
 +	{ X86_FEATURE_AVX512F,		X86_FEATURE_AVX,      },
 +	{ X86_FEATURE_AVX512IFMA,	X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512PF,		X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512ER,		X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512CD,		X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512DQ,		X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512BW,		X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512VL,		X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512VBMI,	X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512_VBMI2,	X86_FEATURE_AVX512VL  },
 +	{ X86_FEATURE_GFNI,		X86_FEATURE_AVX512VL  },
 +	{ X86_FEATURE_VAES,		X86_FEATURE_AVX512VL  },
 +	{ X86_FEATURE_VPCLMULQDQ,	X86_FEATURE_AVX512VL  },
 +	{ X86_FEATURE_AVX512_VNNI,	X86_FEATURE_AVX512VL  },
 +	{ X86_FEATURE_AVX512_BITALG,	X86_FEATURE_AVX512VL  },
 +	{ X86_FEATURE_AVX512_4VNNIW,	X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512_4FMAPS,	X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_AVX512_VPOPCNTDQ, X86_FEATURE_AVX512F   },
 +	{ X86_FEATURE_CQM_OCCUP_LLC,	X86_FEATURE_CQM_LLC   },
 +	{ X86_FEATURE_CQM_MBM_TOTAL,	X86_FEATURE_CQM_LLC   },
 +	{ X86_FEATURE_CQM_MBM_LOCAL,	X86_FEATURE_CQM_LLC   },
 +	{ X86_FEATURE_AVX512_BF16,	X86_FEATURE_AVX512VL  },
++=======
+ 	{ X86_FEATURE_FXSR,			X86_FEATURE_FPU	      },
+ 	{ X86_FEATURE_XSAVEOPT,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_XSAVEC,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_XSAVES,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_AVX,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_PKU,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_MPX,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_XGETBV1,			X86_FEATURE_XSAVE     },
+ 	{ X86_FEATURE_CMOV,			X86_FEATURE_FXSR      },
+ 	{ X86_FEATURE_MMX,			X86_FEATURE_FXSR      },
+ 	{ X86_FEATURE_MMXEXT,			X86_FEATURE_MMX       },
+ 	{ X86_FEATURE_FXSR_OPT,			X86_FEATURE_FXSR      },
+ 	{ X86_FEATURE_XSAVE,			X86_FEATURE_FXSR      },
+ 	{ X86_FEATURE_XMM,			X86_FEATURE_FXSR      },
+ 	{ X86_FEATURE_XMM2,			X86_FEATURE_XMM       },
+ 	{ X86_FEATURE_XMM3,			X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_XMM4_1,			X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_XMM4_2,			X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_XMM3,			X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_PCLMULQDQ,		X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_SSSE3,			X86_FEATURE_XMM2,     },
+ 	{ X86_FEATURE_F16C,			X86_FEATURE_XMM2,     },
+ 	{ X86_FEATURE_AES,			X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_SHA_NI,			X86_FEATURE_XMM2      },
+ 	{ X86_FEATURE_FMA,			X86_FEATURE_AVX       },
+ 	{ X86_FEATURE_AVX2,			X86_FEATURE_AVX,      },
+ 	{ X86_FEATURE_AVX512F,			X86_FEATURE_AVX,      },
+ 	{ X86_FEATURE_AVX512IFMA,		X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512PF,			X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512ER,			X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512CD,			X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512DQ,			X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512BW,			X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512VL,			X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512VBMI,		X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512_VBMI2,		X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_GFNI,			X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_VAES,			X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_VPCLMULQDQ,		X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_AVX512_VNNI,		X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_AVX512_BITALG,		X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_AVX512_4VNNIW,		X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512_4FMAPS,		X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512_VPOPCNTDQ,		X86_FEATURE_AVX512F   },
+ 	{ X86_FEATURE_AVX512_VP2INTERSECT,	X86_FEATURE_AVX512VL  },
+ 	{ X86_FEATURE_CQM_OCCUP_LLC,		X86_FEATURE_CQM_LLC   },
+ 	{ X86_FEATURE_CQM_MBM_TOTAL,		X86_FEATURE_CQM_LLC   },
+ 	{ X86_FEATURE_CQM_MBM_LOCAL,		X86_FEATURE_CQM_LLC   },
+ 	{ X86_FEATURE_AVX512_BF16,		X86_FEATURE_AVX512VL  },
++>>>>>>> 018ebca8bd70 (x86/cpufeatures: Enable a new AVX512 CPU feature)
  	{}
  };
  
diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index 0e124487d70d..25abf1410af3 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -353,6 +353,7 @@
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (EDX), word 18 */
 #define X86_FEATURE_AVX512_4VNNIW	(18*32+ 2) /* AVX-512 Neural Network Instructions */
 #define X86_FEATURE_AVX512_4FMAPS	(18*32+ 3) /* AVX-512 Multiply Accumulation Single precision */
+#define X86_FEATURE_AVX512_VP2INTERSECT (18*32+ 8) /* AVX-512 Intersect for D/Q */
 #define X86_FEATURE_MD_CLEAR		(18*32+10) /* VERW clears CPU buffers */
 #define X86_FEATURE_TSX_FORCE_ABORT	(18*32+13) /* "" TSX_FORCE_ABORT */
 #define X86_FEATURE_PCONFIG		(18*32+18) /* Intel PCONFIG */
* Unmerged path arch/x86/kernel/cpu/cpuid-deps.c
