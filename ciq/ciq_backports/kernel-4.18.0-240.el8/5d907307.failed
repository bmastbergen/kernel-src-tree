iomap: move internal declarations into fs/iomap/

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 5d907307adc14cd5148b07629c2b4535acd06062
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5d907307.failed

Move internal function declarations out of fs/internal.h into
include/linux/iomap.h so that our transition is complete.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 5d907307adc14cd5148b07629c2b4535acd06062)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/apply.c
#	fs/iomap/fiemap.c
#	fs/iomap/seek.c
#	fs/iomap/swapfile.c
* Unmerged path fs/iomap/apply.c
* Unmerged path fs/iomap/fiemap.c
* Unmerged path fs/iomap/seek.c
* Unmerged path fs/iomap/swapfile.c
diff --git a/fs/dax.c b/fs/dax.c
index b0d01bff87fd..340c2cfa14f8 100644
--- a/fs/dax.c
+++ b/fs/dax.c
@@ -34,7 +34,6 @@
 #include <linux/mmu_notifier.h>
 #include <linux/iomap.h>
 #include <asm/pgalloc.h>
-#include "internal.h"
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/fs_dax.h>
diff --git a/fs/internal.h b/fs/internal.h
index c82f14cac9e6..a42005e11572 100644
--- a/fs/internal.h
+++ b/fs/internal.h
@@ -176,16 +176,6 @@ extern const struct dentry_operations ns_dentry_operations;
 extern int do_vfs_ioctl(struct file *file, unsigned int fd, unsigned int cmd,
 		    unsigned long arg);
 
-/*
- * iomap support:
- */
-typedef loff_t (*iomap_actor_t)(struct inode *inode, loff_t pos, loff_t len,
-		void *data, struct iomap *iomap);
-
-loff_t iomap_apply(struct inode *inode, loff_t pos, loff_t length,
-		unsigned flags, const struct iomap_ops *ops, void *data,
-		iomap_actor_t actor);
-
 /* direct-io.c: */
 int sb_init_dio_done_wq(struct super_block *sb);
 
* Unmerged path fs/iomap/apply.c
* Unmerged path fs/iomap/fiemap.c
* Unmerged path fs/iomap/seek.c
* Unmerged path fs/iomap/swapfile.c
diff --git a/include/linux/iomap.h b/include/linux/iomap.h
index 960967bb5048..a889bb8b1bb4 100644
--- a/include/linux/iomap.h
+++ b/include/linux/iomap.h
@@ -123,6 +123,16 @@ struct iomap_ops {
 	RH_KABI_RESERVE(4)
 };
 
+/*
+ * Main iomap iterator function.
+ */
+typedef loff_t (*iomap_actor_t)(struct inode *inode, loff_t pos, loff_t len,
+		void *data, struct iomap *iomap);
+
+loff_t iomap_apply(struct inode *inode, loff_t pos, loff_t length,
+		unsigned flags, const struct iomap_ops *ops, void *data,
+		iomap_actor_t actor);
+
 /*
  * Structure allocate for each page when block size < PAGE_SIZE to track
  * sub-page uptodate status and I/O completions.
