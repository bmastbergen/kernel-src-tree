tools/libbpf: Add support for BPF_MODIFY_RETURN

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author KP Singh <kpsingh@google.com>
commit aca228cd3387447d99d3ebaee3ebcc2b015a3e46
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/aca228cd.failed

	Signed-off-by: KP Singh <kpsingh@google.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Andrii Nakryiko <andriin@fb.com>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20200304191853.1529-6-kpsingh@chromium.org
(cherry picked from commit aca228cd3387447d99d3ebaee3ebcc2b015a3e46)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 6ed9ef84b398,223be01dc466..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -5060,11 -6272,33 +5060,41 @@@ static const struct 
  	BPF_PROG_SEC("uretprobe/",		BPF_PROG_TYPE_KPROBE),
  	BPF_PROG_SEC("classifier",		BPF_PROG_TYPE_SCHED_CLS),
  	BPF_PROG_SEC("action",			BPF_PROG_TYPE_SCHED_ACT),
++<<<<<<< HEAD
 +	BPF_PROG_SEC("tracepoint/",		BPF_PROG_TYPE_TRACEPOINT),
 +	BPF_PROG_SEC("tp/",			BPF_PROG_TYPE_TRACEPOINT),
 +	BPF_PROG_SEC("raw_tracepoint/",		BPF_PROG_TYPE_RAW_TRACEPOINT),
 +	BPF_PROG_SEC("raw_tp/",			BPF_PROG_TYPE_RAW_TRACEPOINT),
 +	BPF_PROG_BTF("tp_btf/",			BPF_PROG_TYPE_RAW_TRACEPOINT),
++=======
+ 	SEC_DEF("tracepoint/", TRACEPOINT,
+ 		.attach_fn = attach_tp),
+ 	SEC_DEF("tp/", TRACEPOINT,
+ 		.attach_fn = attach_tp),
+ 	SEC_DEF("raw_tracepoint/", RAW_TRACEPOINT,
+ 		.attach_fn = attach_raw_tp),
+ 	SEC_DEF("raw_tp/", RAW_TRACEPOINT,
+ 		.attach_fn = attach_raw_tp),
+ 	SEC_DEF("tp_btf/", TRACING,
+ 		.expected_attach_type = BPF_TRACE_RAW_TP,
+ 		.is_attach_btf = true,
+ 		.attach_fn = attach_trace),
+ 	SEC_DEF("fentry/", TRACING,
+ 		.expected_attach_type = BPF_TRACE_FENTRY,
+ 		.is_attach_btf = true,
+ 		.attach_fn = attach_trace),
+ 	SEC_DEF("fmod_ret/", TRACING,
+ 		.expected_attach_type = BPF_MODIFY_RETURN,
+ 		.is_attach_btf = true,
+ 		.attach_fn = attach_trace),
+ 	SEC_DEF("fexit/", TRACING,
+ 		.expected_attach_type = BPF_TRACE_FEXIT,
+ 		.is_attach_btf = true,
+ 		.attach_fn = attach_trace),
+ 	SEC_DEF("freplace/", EXT,
+ 		.is_attach_btf = true,
+ 		.attach_fn = attach_trace),
++>>>>>>> aca228cd3387 (tools/libbpf: Add support for BPF_MODIFY_RETURN)
  	BPF_PROG_SEC("xdp",			BPF_PROG_TYPE_XDP),
  	BPF_PROG_SEC("perf_event",		BPF_PROG_TYPE_PERF_EVENT),
  	BPF_PROG_SEC("lwt_in",			BPF_PROG_TYPE_LWT_IN),
* Unmerged path tools/lib/bpf/libbpf.c
