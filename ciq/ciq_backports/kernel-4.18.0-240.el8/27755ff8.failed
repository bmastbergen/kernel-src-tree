net: phylink: Add phylink_mac_link_{up, down} wrapper functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ioana Ciornei <ioana.ciornei@nxp.com>
commit 27755ff88c0ecbca46bbba1202766c0ce54a3af2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/27755ff8.failed

This is a cosmetic patch that reduces the clutter in phylink_resolve
around calling the .mac_link_up/.mac_link_down driver callbacks.  In a
further patch this logic will be extended to emit notifications in case
a net device does not exist.

	Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 27755ff88c0ecbca46bbba1202766c0ce54a3af2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index f51febdb1dc6,83ab83c3edba..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -448,24 -471,10 +476,31 @@@ static void phylink_resolve(struct work
  	}
  
  	if (link_state.link != netif_carrier_ok(ndev)) {
++<<<<<<< HEAD
 +		if (!link_state.link) {
 +			netif_carrier_off(ndev);
 +			pl->ops->mac_link_down(ndev, pl->link_an_mode,
 +					       pl->cur_interface);
 +			netdev_info(ndev, "Link is Down\n");
 +		} else {
 +			pl->cur_interface = link_state.interface;
 +			pl->ops->mac_link_up(ndev, pl->link_an_mode,
 +					     pl->cur_interface, pl->phydev);
 +
 +			netif_carrier_on(ndev);
 +
 +			netdev_info(ndev,
 +				    "Link is Up - %s/%s - flow control %s\n",
 +				    phy_speed_to_str(link_state.speed),
 +				    phy_duplex_to_str(link_state.duplex),
 +				    phylink_pause_to_str(link_state.pause));
 +		}
++=======
+ 		if (!link_state.link)
+ 			phylink_mac_link_down(pl);
+ 		else
+ 			phylink_mac_link_up(pl, link_state);
++>>>>>>> 27755ff88c0e (net: phylink: Add phylink_mac_link_{up, down} wrapper functions)
  	}
  	if (!link_state.link && pl->mac_link_dropped) {
  		pl->mac_link_dropped = false;
* Unmerged path drivers/net/phy/phylink.c
