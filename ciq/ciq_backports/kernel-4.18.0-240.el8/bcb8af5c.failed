perf maps: Purge the entries from maps->names in __maps__purge()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit bcb8af5c46e452018de9b58db1fd0ffd94b5d96c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/bcb8af5c.failed

No need to iterate via the ->names rbtree, as all the entries there
as in maps->entries as well, reuse __maps__purge() for that.

Doing it this way we can kill maps__for_each_entry_by_name(),
maps__for_each_entry_by_name_safe(), maps__{first,next}_by_name().

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-ps0nrio8pydyo23rr2s696ue@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit bcb8af5c46e452018de9b58db1fd0ffd94b5d96c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/map.c
diff --cc tools/perf/util/map.c
index 09fd25d1d0fd,69b9e9b3d915..000000000000
--- a/tools/perf/util/map.c
+++ b/tools/perf/util/map.c
@@@ -581,28 -584,12 +581,32 @@@ void map_groups__insert(struct map_grou
  
  static void __maps__purge(struct maps *maps)
  {
 -	struct map *pos, *next;
 +	struct rb_root *root = &maps->entries;
 +	struct rb_node *next = rb_first(root);
  
 -	maps__for_each_entry_safe(maps, pos, next) {
 -		rb_erase_init(&pos->rb_node,  &maps->entries);
 +	while (next) {
 +		struct map *pos = rb_entry(next, struct map, rb_node);
 +
 +		next = rb_next(&pos->rb_node);
 +		rb_erase_init(&pos->rb_node, root);
  		map__put(pos);
++<<<<<<< HEAD
 +	}
 +}
 +
 +static void __maps__purge_names(struct maps *maps)
 +{
 +	struct rb_root *root = &maps->names;
 +	struct rb_node *next = rb_first(root);
 +
 +	while (next) {
 +		struct map *pos = rb_entry(next, struct map, rb_node_name);
 +
 +		next = rb_next(&pos->rb_node_name);
 +		rb_erase_init(&pos->rb_node_name, root);
++=======
+ 		rb_erase_init(&pos->rb_node_name, &maps->names);
++>>>>>>> bcb8af5c46e4 (perf maps: Purge the entries from maps->names in __maps__purge())
  		map__put(pos);
  	}
  }
* Unmerged path tools/perf/util/map.c
