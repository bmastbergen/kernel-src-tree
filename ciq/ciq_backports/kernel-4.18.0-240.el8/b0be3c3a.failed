drm/amd/amdgpu: add raven1 part to the gfxoff quirk list

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Tom St Denis <tom.stdenis@amd.com>
commit b0be3c3a2500b46682b3eb7ac5024b8982ed0364
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b0be3c3a.failed

On my raven1 system (rev c6) with VBIOS 113-RAVEN-114 GFXOFF is
not stable (resulting in large block tiling noise in some applications).

Disabling GFXOFF via the quirk list fixes the problems for me.

	Signed-off-by: Tom St Denis <tom.stdenis@amd.com>
	Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit b0be3c3a2500b46682b3eb7ac5024b8982ed0364)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
index d9abaab67c88,a0988634aeaf..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
@@@ -597,8 -1220,54 +597,54 @@@ static void gfx_v9_0_check_fw_write_wai
  	}
  }
  
++<<<<<<< HEAD
++=======
+ struct amdgpu_gfxoff_quirk {
+ 	u16 chip_vendor;
+ 	u16 chip_device;
+ 	u16 subsys_vendor;
+ 	u16 subsys_device;
+ 	u8 revision;
+ };
+ 
+ static const struct amdgpu_gfxoff_quirk amdgpu_gfxoff_quirk_list[] = {
+ 	/* https://bugzilla.kernel.org/show_bug.cgi?id=204689 */
+ 	{ 0x1002, 0x15dd, 0x1002, 0x15dd, 0xc8 },
+ 	/* https://bugzilla.kernel.org/show_bug.cgi?id=207171 */
+ 	{ 0x1002, 0x15dd, 0x103c, 0x83e7, 0xd3 },
+ 	/* GFXOFF is unstable on C6 parts with a VBIOS 113-RAVEN-114 */
+ 	{ 0x1002, 0x15dd, 0x1002, 0x15dd, 0xc6 },
+ 	{ 0, 0, 0, 0, 0 },
+ };
+ 
+ static bool gfx_v9_0_should_disable_gfxoff(struct pci_dev *pdev)
+ {
+ 	const struct amdgpu_gfxoff_quirk *p = amdgpu_gfxoff_quirk_list;
+ 
+ 	while (p && p->chip_device != 0) {
+ 		if (pdev->vendor == p->chip_vendor &&
+ 		    pdev->device == p->chip_device &&
+ 		    pdev->subsystem_vendor == p->subsys_vendor &&
+ 		    pdev->subsystem_device == p->subsys_device &&
+ 		    pdev->revision == p->revision) {
+ 			return true;
+ 		}
+ 		++p;
+ 	}
+ 	return false;
+ }
+ 
+ static bool is_raven_kicker(struct amdgpu_device *adev)
+ {
+ 	if (adev->pm.fw_version >= 0x41e2b)
+ 		return true;
+ 	else
+ 		return false;
+ }
+ 
++>>>>>>> b0be3c3a2500 (drm/amd/amdgpu: add raven1 part to the gfxoff quirk list)
  static void gfx_v9_0_check_if_need_gfxoff(struct amdgpu_device *adev)
  {
 -	if (gfx_v9_0_should_disable_gfxoff(adev->pdev))
 -		adev->pm.pp_feature &= ~PP_GFXOFF_MASK;
 -
  	switch (adev->asic_type) {
  	case CHIP_VEGA10:
  	case CHIP_VEGA12:
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
