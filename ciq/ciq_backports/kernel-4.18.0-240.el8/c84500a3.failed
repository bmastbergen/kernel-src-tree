iommu/arm-smmu: Use accessor functions for iommu private data

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Joerg Roedel <jroedel@suse.de>
commit c84500a365b4b4b29b7ec31b8e29a3f97b68cb3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c84500a3.failed

Make use of dev_iommu_priv_set/get() functions and simplify the code
where possible with this change.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Tested-by: Will Deacon <will@kernel.org> # arm-smmu
Link: https://lore.kernel.org/r/20200326150841.10083-12-joro@8bytes.org
(cherry picked from commit c84500a365b4b4b29b7ec31b8e29a3f97b68cb3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu.c
diff --cc drivers/iommu/arm-smmu.c
index 34ba163e6fcc,a6a5796e9c41..000000000000
--- a/drivers/iommu/arm-smmu.c
+++ b/drivers/iommu/arm-smmu.c
@@@ -1295,10 -1159,11 +1295,18 @@@ static int arm_smmu_domain_add_master(s
  
  static int arm_smmu_attach_dev(struct iommu_domain *domain, struct device *dev)
  {
++<<<<<<< HEAD
 +	int ret;
 +	struct iommu_fwspec *fwspec = dev_iommu_fwspec_get(dev);
 +	struct arm_smmu_device *smmu;
 +	struct arm_smmu_domain *smmu_domain = to_smmu_domain(domain);
++=======
+ 	struct arm_smmu_domain *smmu_domain = to_smmu_domain(domain);
+ 	struct iommu_fwspec *fwspec = dev_iommu_fwspec_get(dev);
+ 	struct arm_smmu_master_cfg *cfg;
+ 	struct arm_smmu_device *smmu;
+ 	int ret;
++>>>>>>> c84500a365b4 (iommu/arm-smmu: Use accessor functions for iommu private data)
  
  	if (!fwspec || fwspec->ops != &arm_smmu_ops) {
  		dev_err(dev, "cannot attach to SMMU, is it on the same bus?\n");
@@@ -1312,10 -1177,11 +1320,15 @@@
  	 * domains, just say no (but more politely than by dereferencing NULL).
  	 * This should be at least a WARN_ON once that's sorted.
  	 */
++<<<<<<< HEAD
 +	if (!fwspec->iommu_priv)
++=======
+ 	cfg = dev_iommu_priv_get(dev);
+ 	if (!cfg)
++>>>>>>> c84500a365b4 (iommu/arm-smmu: Use accessor functions for iommu private data)
  		return -ENODEV;
  
 -	smmu = cfg->smmu;
 +	smmu = fwspec_smmu(fwspec);
  
  	ret = arm_smmu_rpm_get(smmu);
  	if (ret < 0)
@@@ -1609,8 -1488,9 +1623,13 @@@ static void arm_smmu_remove_device(stru
  
  static struct iommu_group *arm_smmu_device_group(struct device *dev)
  {
+ 	struct arm_smmu_master_cfg *cfg = dev_iommu_priv_get(dev);
  	struct iommu_fwspec *fwspec = dev_iommu_fwspec_get(dev);
++<<<<<<< HEAD
 +	struct arm_smmu_device *smmu = fwspec_smmu(fwspec);
++=======
+ 	struct arm_smmu_device *smmu = cfg->smmu;
++>>>>>>> c84500a365b4 (iommu/arm-smmu: Use accessor functions for iommu private data)
  	struct iommu_group *group = NULL;
  	int i, idx;
  
* Unmerged path drivers/iommu/arm-smmu.c
