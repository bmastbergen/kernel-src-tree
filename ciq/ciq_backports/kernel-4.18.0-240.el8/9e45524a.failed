Bluetooth: btusb: Fix suspend issue for Realtek devices

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Alex Lu <alex_lu@realsil.com.cn>
commit 9e45524a011107a73bc2cdde8370c61e82e93a4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9e45524a.failed

From the perspective of controller, global suspend means there is no
SET_FEATURE (DEVICE_REMOTE_WAKEUP) and controller would drop the
firmware. It would consume less power. So we should not send this kind
of SET_FEATURE when host goes to suspend state.
Otherwise, when making device enter selective suspend, host should send
SET_FEATURE to make sure the firmware remains.

	Signed-off-by: Alex Lu <alex_lu@realsil.com.cn>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 9e45524a011107a73bc2cdde8370c61e82e93a4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/btusb.c
diff --cc drivers/bluetooth/btusb.c
index 559321547f03,31d3febed187..000000000000
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@@ -440,6 -433,9 +440,12 @@@ static const struct dmi_system_id btusb
  #define BTUSB_BOOTING		9
  #define BTUSB_DIAG_RUNNING	10
  #define BTUSB_OOB_WAKE_ENABLED	11
++<<<<<<< HEAD
++=======
+ #define BTUSB_HW_RESET_ACTIVE	12
+ #define BTUSB_TX_WAIT_VND_EVT	13
+ #define BTUSB_WAKEUP_DISABLE	14
++>>>>>>> 9e45524a0111 (Bluetooth: btusb: Fix suspend issue for Realtek devices)
  
  struct btusb_data {
  	struct hci_dev       *hdev;
@@@ -3113,12 -3782,13 +3131,12 @@@ static int btusb_probe(struct usb_inter
  #ifdef CONFIG_BT_HCIBTUSB_RTL
  	if (id->driver_info & BTUSB_REALTEK) {
  		hdev->setup = btrtl_setup_realtek;
 -		hdev->shutdown = btrtl_shutdown_realtek;
  
- 		/* Realtek devices lose their updated firmware over suspend,
- 		 * but the USB hub doesn't notice any status change.
- 		 * Explicitly request a device reset on resume.
+ 		/* Realtek devices lose their updated firmware over global
+ 		 * suspend that means host doesn't send SET_FEATURE
+ 		 * (DEVICE_REMOTE_WAKEUP)
  		 */
- 		interface_to_usbdev(intf)->quirks |= USB_QUIRK_RESET_RESUME;
+ 		set_bit(BTUSB_WAKEUP_DISABLE, &data->flags);
  	}
  #endif
  
* Unmerged path drivers/bluetooth/btusb.c
