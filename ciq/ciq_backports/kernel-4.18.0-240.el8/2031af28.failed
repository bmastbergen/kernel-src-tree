libbpf,selftests/bpf: Fix clean targets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 2031af28a42f18cc65ec3aa85b4e5cfdf5ee0fe8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2031af28.failed

Libbpf's clean target should clean out generated files in $(OUTPUT) directory
and not make assumption that $(OUTPUT) directory is current working directory.

Selftest's Makefile should delegate cleaning of libbpf-generated files to
libbpf's Makefile. This ensures more robust clean up.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200110051716.1591485-2-andriin@fb.com
(cherry picked from commit 2031af28a42f18cc65ec3aa85b4e5cfdf5ee0fe8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/Makefile
#	tools/testing/selftests/bpf/Makefile
diff --cc tools/lib/bpf/Makefile
index cd5792b9bece,db2afccde757..000000000000
--- a/tools/lib/bpf/Makefile
+++ b/tools/lib/bpf/Makefile
@@@ -259,9 -273,11 +259,17 @@@ config-clean
  	$(Q)$(MAKE) -C $(srctree)/tools/build/feature/ clean >/dev/null
  
  clean:
++<<<<<<< HEAD
 +	$(call QUIET_CLEAN, libbpf) $(RM) $(CMD_TARGETS) \
 +		*.o *~ *.a *.so *.so.$(LIBBPF_MAJOR_VERSION) .*.d .*.cmd \
 +		*.pc LIBBPF-CFLAGS bpf_helper_defs.h
++=======
+ 	$(call QUIET_CLEAN, libbpf) $(RM) -rf $(CMD_TARGETS)		     \
+ 		*~ .*.d .*.cmd LIBBPF-CFLAGS $(BPF_HELPER_DEFS)		     \
+ 		$(SHARED_OBJDIR) $(STATIC_OBJDIR)			     \
+ 		$(addprefix $(OUTPUT),					     \
+ 			    *.o *.a *.so *.so.$(LIBBPF_MAJOR_VERSION) *.pc)
++>>>>>>> 2031af28a42f (libbpf,selftests/bpf: Fix clean targets)
  	$(call QUIET_CLEAN, core-gen) $(RM) $(OUTPUT)FEATURE-DUMP.libbpf
  
  
diff --cc tools/testing/selftests/bpf/Makefile
index 1739bffedc44,cb9f18e4b98b..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -80,7 -73,28 +80,32 @@@ TEST_PROGS_EXTENDED := with_addr.sh 
  # Compile but not part of 'make run_tests'
  TEST_GEN_PROGS_EXTENDED = test_sock_addr test_skb_cgroup_id_user \
  	flow_dissector_load test_flow_dissector test_tcp_check_syncookie_user \
++<<<<<<< HEAD
 +	test_lirc_mode2_user xdping
++=======
+ 	test_lirc_mode2_user xdping test_cpp
+ 
+ TEST_CUSTOM_PROGS = urandom_read
+ 
+ # Emit succinct information message describing current building step
+ # $1 - generic step name (e.g., CC, LINK, etc);
+ # $2 - optional "flavor" specifier; if provided, will be emitted as [flavor];
+ # $3 - target (assumed to be file); only file name will be emitted;
+ # $4 - optional extra arg, emitted as-is, if provided.
+ ifeq ($(V),1)
+ msg =
+ else
+ msg = @$(info $(1)$(if $(2), [$(2)]) $(notdir $(3)))$(if $(4), $(4))
+ endif
+ 
+ # override lib.mk's default rules
+ OVERRIDE_TARGETS := 1
+ override define CLEAN
+ 	$(call msg,    CLEAN)
+ 	$(RM) -r $(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED) $(TEST_GEN_FILES) $(EXTRA_CLEAN)
+ 	$(MAKE) -C $(BPFDIR) OUTPUT=$(OUTPUT)/ clean
+ endef
++>>>>>>> 2031af28a42f (libbpf,selftests/bpf: Fix clean targets)
  
  include ../lib.mk
  
@@@ -276,11 -364,19 +301,23 @@@ $(VERIFIER_TESTS_H): $(VERIFIER_TEST_FI
  	$(shell ( cd verifier/; \
  		  echo '/* Generated header, do not edit */'; \
  		  echo '#ifdef FILL_ARRAY'; \
 -		  ls *.c 2> /dev/null | sed -e 's@\(.*\)@#include \"\1\"@'; \
 +		  ls *.c 2> /dev/null | \
 +			sed -e 's@\(.*\)@#include \"\1\"@'; \
  		  echo '#endif' \
 -		) > verifier/tests.h)
 -$(OUTPUT)/test_verifier: test_verifier.c verifier/tests.h $(BPFOBJ) | $(OUTPUT)
 -	$(call msg,     BINARY,,$@)
 -	$(CC) $(CFLAGS) $(filter %.a %.o %.c,$^) $(LDLIBS) -o $@
 +		 ) > $(VERIFIER_TESTS_H))
  
++<<<<<<< HEAD
 +EXTRA_CLEAN := $(TEST_CUSTOM_PROGS) $(ALU32_BUILD_DIR) $(BPF_GCC_BUILD_DIR) \
 +	$(VERIFIER_TESTS_H) $(PROG_TESTS_H) $(MAP_TESTS_H) \
 +	feature
++=======
+ # Make sure we are able to include and link libbpf against c++.
+ $(OUTPUT)/test_cpp: test_cpp.cpp $(OUTPUT)/test_core_extern.skel.h $(BPFOBJ)
+ 	$(call msg,        CXX,,$@)
+ 	$(CXX) $(CFLAGS) $^ $(LDLIBS) -o $@
+ 
+ EXTRA_CLEAN := $(TEST_CUSTOM_PROGS)					\
+ 	prog_tests/tests.h map_tests/tests.h verifier/tests.h		\
+ 	feature								\
+ 	$(addprefix $(OUTPUT)/,*.o *.skel.h no_alu32 bpf_gcc tools)
++>>>>>>> 2031af28a42f (libbpf,selftests/bpf: Fix clean targets)
* Unmerged path tools/lib/bpf/Makefile
* Unmerged path tools/testing/selftests/bpf/Makefile
