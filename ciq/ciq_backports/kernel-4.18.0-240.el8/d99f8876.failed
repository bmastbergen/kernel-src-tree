Revert "gpiolib: Remove duplicated function gpio_do_set_config()"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Bartosz Golaszewski <bgolaszewski@baylibre.com>
commit d99f88761ba0d135677afe546ffdd26c58e5644d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d99f8876.failed

This reverts commit d18fddff061d2796525e6d4a958cb3d30aed8efd.

This patch came on top of another patch that introduced a regression.
Revert it before addressing the culprit.

	Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
	Tested-by: Guenter Roeck <linux@roeck-us.net>
(cherry picked from commit d99f88761ba0d135677afe546ffdd26c58e5644d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpio/gpiolib.c
diff --cc drivers/gpio/gpiolib.c
index c379e797988c,a3e4f5f5871f..000000000000
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@@ -2611,20 -3046,41 +2611,41 @@@ static int gpio_do_set_config(struct gp
  
  static int gpio_set_config(struct gpio_chip *gc, unsigned int offset,
  			   enum pin_config_param mode)
++<<<<<<< HEAD
++=======
+ {
+ 	unsigned arg;
+ 
+ 	switch (mode) {
+ 	case PIN_CONFIG_BIAS_DISABLE:
+ 	case PIN_CONFIG_BIAS_PULL_DOWN:
+ 	case PIN_CONFIG_BIAS_PULL_UP:
+ 		arg = 1;
+ 		break;
+ 
+ 	default:
+ 		arg = 0;
+ 	}
+ 
+ 	return gpio_do_set_config(gc, offset, mode);
+ }
+ 
+ static int gpio_set_bias(struct gpio_chip *chip, struct gpio_desc *desc)
++>>>>>>> d99f88761ba0 (Revert "gpiolib: Remove duplicated function gpio_do_set_config()")
  {
 -	int bias = 0;
 -	int ret = 0;
 +	unsigned arg;
  
 -	if (test_bit(FLAG_BIAS_DISABLE, &desc->flags))
 -		bias = PIN_CONFIG_BIAS_DISABLE;
 -	else if (test_bit(FLAG_PULL_UP, &desc->flags))
 -		bias = PIN_CONFIG_BIAS_PULL_UP;
 -	else if (test_bit(FLAG_PULL_DOWN, &desc->flags))
 -		bias = PIN_CONFIG_BIAS_PULL_DOWN;
 +	switch (mode) {
 +	case PIN_CONFIG_BIAS_PULL_DOWN:
 +	case PIN_CONFIG_BIAS_PULL_UP:
 +		arg = 1;
 +		break;
  
 -	if (bias) {
 -		ret = gpio_set_config(chip, gpio_chip_hwgpio(desc), bias);
 -		if (ret != -ENOTSUPP)
 -			return ret;
 +	default:
 +		arg = 0;
  	}
 -	return 0;
 +
 +	return gpio_do_set_config(gc, offset, mode);
  }
  
  /**
* Unmerged path drivers/gpio/gpiolib.c
