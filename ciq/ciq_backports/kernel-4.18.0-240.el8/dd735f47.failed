x86/vmware: Remove vmware_sched_clock_setup()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [x86] vmware: Remove vmware_sched_clock_setup() (Vitaly Kuznetsov) [1807448]
Rebuild_FUZZ: 95.35%
commit-author Alexey Makhalov <amakhalov@vmware.com>
commit dd735f4707e603ac5b541b5f30de87c3c7bd60dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/dd735f47.failed

Move cyc2ns setup logic to separate function.
This separation will allow to use cyc2ns mult/shift pair
not only for the sched_clock but also for other clocks
such as steal_clock.

	Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20200323195707.31242-3-amakhalov@vmware.com
(cherry picked from commit dd735f4707e603ac5b541b5f30de87c3c7bd60dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/vmware.c
diff --cc arch/x86/kernel/cpu/vmware.c
index 8ff3b6f9b52a,efb22fa76ba4..000000000000
--- a/arch/x86/kernel/cpu/vmware.c
+++ b/arch/x86/kernel/cpu/vmware.c
@@@ -132,17 -132,22 +132,27 @@@ static void __init vmware_cyc2ns_setup(
  	d->cyc2ns_offset = mul_u64_u32_shr(tsc_now, d->cyc2ns_mul,
  					   d->cyc2ns_shift);
  
++<<<<<<< HEAD
 +	pv_time_ops.sched_clock = vmware_sched_clock;
 +	pr_info("using sched offset of %llu ns\n", d->cyc2ns_offset);
++=======
+ 	pr_info("using clock offset of %llu ns\n", d->cyc2ns_offset);
++>>>>>>> dd735f4707e6 (x86/vmware: Remove vmware_sched_clock_setup())
  }
  
  static void __init vmware_paravirt_ops_setup(void)
  {
  	pv_info.name = "VMware hypervisor";
 -	pv_ops.cpu.io_delay = paravirt_nop;
 +	pv_cpu_ops.io_delay = paravirt_nop;
  
- 	if (vmware_tsc_khz && vmw_sched_clock)
- 		vmware_sched_clock_setup();
+ 	if (vmware_tsc_khz == 0)
+ 		return;
+ 
+ 	vmware_cyc2ns_setup();
+ 
+ 	if (vmw_sched_clock)
+ 		pv_ops.time.sched_clock = vmware_sched_clock;
+ 
  }
  #else
  #define vmware_paravirt_ops_setup() do {} while (0)
* Unmerged path arch/x86/kernel/cpu/vmware.c
