libbpf: Fix build by renaming variables

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Prashant Bhole <prashantbhole.linux@gmail.com>
commit a79ac2d1036a824abba982c33e938b717d1b659f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a79ac2d1.failed

In btf__align_of() variable name 't' is shadowed by inner block
declaration of another variable with same name. Patch renames
variables in order to fix it.

  CC       sharedobjs/btf.o
btf.c: In function ‘btf__align_of’:
btf.c:303:21: error: declaration of ‘t’ shadows a previous local [-Werror=shadow]
  303 |   int i, align = 1, t;
      |                     ^
btf.c:283:25: note: shadowed declaration is here
  283 |  const struct btf_type *t = btf__type_by_id(btf, id);
      |

Fixes: 3d208f4ca111 ("libbpf: Expose btf__align_of() API")
	Signed-off-by: Prashant Bhole <prashantbhole.linux@gmail.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Tested-by: Toke Høiland-Jørgensen <toke@redhat.com>
Link: https://lore.kernel.org/bpf/20191216082738.28421-1-prashantbhole.linux@gmail.com
(cherry picked from commit a79ac2d1036a824abba982c33e938b717d1b659f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/btf.c
diff --cc tools/lib/bpf/btf.c
index 86a1847e4a9f,5f04f56e1eb6..000000000000
--- a/tools/lib/bpf/btf.c
+++ b/tools/lib/bpf/btf.c
@@@ -278,6 -278,45 +278,48 @@@ done
  	return nelems * size;
  }
  
++<<<<<<< HEAD
++=======
+ int btf__align_of(const struct btf *btf, __u32 id)
+ {
+ 	const struct btf_type *t = btf__type_by_id(btf, id);
+ 	__u16 kind = btf_kind(t);
+ 
+ 	switch (kind) {
+ 	case BTF_KIND_INT:
+ 	case BTF_KIND_ENUM:
+ 		return min(sizeof(void *), t->size);
+ 	case BTF_KIND_PTR:
+ 		return sizeof(void *);
+ 	case BTF_KIND_TYPEDEF:
+ 	case BTF_KIND_VOLATILE:
+ 	case BTF_KIND_CONST:
+ 	case BTF_KIND_RESTRICT:
+ 		return btf__align_of(btf, t->type);
+ 	case BTF_KIND_ARRAY:
+ 		return btf__align_of(btf, btf_array(t)->type);
+ 	case BTF_KIND_STRUCT:
+ 	case BTF_KIND_UNION: {
+ 		const struct btf_member *m = btf_members(t);
+ 		__u16 vlen = btf_vlen(t);
+ 		int i, max_align = 1, align;
+ 
+ 		for (i = 0; i < vlen; i++, m++) {
+ 			align = btf__align_of(btf, m->type);
+ 			if (align <= 0)
+ 				return align;
+ 			max_align = max(max_align, align);
+ 		}
+ 
+ 		return max_align;
+ 	}
+ 	default:
+ 		pr_warn("unsupported BTF_KIND:%u\n", btf_kind(t));
+ 		return 0;
+ 	}
+ }
+ 
++>>>>>>> a79ac2d1036a (libbpf: Fix build by renaming variables)
  int btf__resolve_type(const struct btf *btf, __u32 type_id)
  {
  	const struct btf_type *t;
* Unmerged path tools/lib/bpf/btf.c
