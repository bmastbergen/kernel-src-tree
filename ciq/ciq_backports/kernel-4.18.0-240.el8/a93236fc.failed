KVM: s390: rstify new ioctls in api.rst

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christian Borntraeger <borntraeger@de.ibm.com>
commit a93236fcbe1d0248461b29c0f87cb0b510c94e6f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a93236fc.failed

We also need to rstify the new ioctls that we added in parallel to the
rstification of the kvm docs.

	Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
	Reviewed-by: David Hildenbrand <david@redhat.com>
	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a93236fcbe1d0248461b29c0f87cb0b510c94e6f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/virt/kvm/api.txt
diff --cc Documentation/virt/kvm/api.txt
index 0fa33ec7673f,ebd383fba939..000000000000
--- a/Documentation/virt/kvm/api.txt
+++ b/Documentation/virt/kvm/api.txt
@@@ -4143,9 -4581,72 +4143,78 @@@ counters are controlled by the fixed_co
  
  No flags are defined yet, the field must be zero.
  
++<<<<<<< HEAD:Documentation/virt/kvm/api.txt
 +Valid values for 'action':
 +#define KVM_PMU_EVENT_ALLOW 0
 +#define KVM_PMU_EVENT_DENY 1
++=======
+ Valid values for 'action'::
+ 
+   #define KVM_PMU_EVENT_ALLOW 0
+   #define KVM_PMU_EVENT_DENY 1
+ 
+ 4.121 KVM_PPC_SVM_OFF
+ ---------------------
+ 
+ :Capability: basic
+ :Architectures: powerpc
+ :Type: vm ioctl
+ :Parameters: none
+ :Returns: 0 on successful completion,
+ 
+ Errors:
+ 
+   ======     ================================================================
+   EINVAL     if ultravisor failed to terminate the secure guest
+   ENOMEM     if hypervisor failed to allocate new radix page tables for guest
+   ======     ================================================================
+ 
+ This ioctl is used to turn off the secure mode of the guest or transition
+ the guest from secure mode to normal mode. This is invoked when the guest
+ is reset. This has no effect if called for a normal guest.
+ 
+ This ioctl issues an ultravisor call to terminate the secure guest,
+ unpins the VPA pages and releases all the device pages that are used to
+ track the secure pages by hypervisor.
+ 
+ 4.122 KVM_S390_NORMAL_RESET
+ ---------------------------
+ 
+ :Capability: KVM_CAP_S390_VCPU_RESETS
+ :Architectures: s390
+ :Type: vcpu ioctl
+ :Parameters: none
+ :Returns: 0
+ 
+ This ioctl resets VCPU registers and control structures according to
+ the cpu reset definition in the POP (Principles Of Operation).
+ 
+ 4.123 KVM_S390_INITIAL_RESET
+ ----------------------------
+ 
+ :Capability: none
+ :Architectures: s390
+ :Type: vcpu ioctl
+ :Parameters: none
+ :Returns: 0
+ 
+ This ioctl resets VCPU registers and control structures according to
+ the initial cpu reset definition in the POP. However, the cpu is not
+ put into ESA mode. This reset is a superset of the normal reset.
+ 
+ 4.124 KVM_S390_CLEAR_RESET
+ --------------------------
+ 
+ :Capability: KVM_CAP_S390_VCPU_RESETS
+ :Architectures: s390
+ :Type: vcpu ioctl
+ :Parameters: none
+ :Returns: 0
+ 
+ This ioctl resets VCPU registers and control structures according to
+ the clear cpu reset definition in the POP. However, the cpu is not put
+ into ESA mode. This reset is a superset of the initial reset.
++>>>>>>> a93236fcbe1d (KVM: s390: rstify new ioctls in api.rst):Documentation/virt/kvm/api.rst
  
  
  5. The kvm_run structure
* Unmerged path Documentation/virt/kvm/api.txt
