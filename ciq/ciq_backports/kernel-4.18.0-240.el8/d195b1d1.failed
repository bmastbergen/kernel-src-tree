powerpc/bpf: Enable bpf_probe_read{, str}() on powerpc again

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Petr Mladek <pmladek@suse.com>
commit d195b1d1d1196681ac4775e0361e9cca70f740c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d195b1d1.failed

The commit 0ebeea8ca8a4d1d453a ("bpf: Restrict bpf_probe_read{, str}() only
to archs where they work") caused that bpf_probe_read{, str}() functions
were not longer available on architectures where the same logical address
might have different content in kernel and user memory mapping. These
architectures should use probe_read_{user,kernel}_str helpers.

For backward compatibility, the problematic functions are still available
on architectures where the user and kernel address spaces are not
overlapping. This is defined CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE.

At the moment, these backward compatible functions are enabled only on x86_64,
arm, and arm64. Let's do it also on powerpc that has the non overlapping
address space as well.

Fixes: 0ebeea8ca8a4 ("bpf: Restrict bpf_probe_read{, str}() only to archs where they work")
	Signed-off-by: Petr Mladek <pmladek@suse.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/lkml/20200527122844.19524-1-pmladek@suse.com
(cherry picked from commit d195b1d1d1196681ac4775e0361e9cca70f740c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/Kconfig
diff --cc arch/powerpc/Kconfig
index 8992a5e46059,cb042a4ff19a..000000000000
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@@ -122,20 -120,24 +122,26 @@@ config PP
  	select ARCH_HAS_ELF_RANDOMIZE
  	select ARCH_HAS_FORTIFY_SOURCE
  	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_HAS_KCOV
 -	select ARCH_HAS_HUGEPD			if HUGETLB_PAGE
 -	select ARCH_HAS_MEMREMAP_COMPAT_ALIGN
  	select ARCH_HAS_MMIOWB			if PPC64
  	select ARCH_HAS_PHYS_TO_DMA
++<<<<<<< HEAD
 +	select ARCH_HAS_PMEM_API                if PPC64
++=======
+ 	select ARCH_HAS_PMEM_API
+ 	select ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE
+ 	select ARCH_HAS_PTE_DEVMAP		if PPC_BOOK3S_64
++>>>>>>> d195b1d1d119 (powerpc/bpf: Enable bpf_probe_read{, str}() on powerpc again)
  	select ARCH_HAS_PTE_SPECIAL
  	select ARCH_HAS_MEMBARRIER_CALLBACKS
 -	select ARCH_HAS_SCALED_CPUTIME		if VIRT_CPU_ACCOUNTING_NATIVE && PPC_BOOK3S_64
 -	select ARCH_HAS_STRICT_KERNEL_RWX	if ((PPC_BOOK3S_64 || PPC32) && !HIBERNATION)
 +	select ARCH_HAS_SCALED_CPUTIME		if VIRT_CPU_ACCOUNTING_NATIVE
 +	select ARCH_HAS_SG_CHAIN
 +	select ARCH_HAS_STRICT_KERNEL_RWX	if ((PPC_BOOK3S_64 || PPC32) && !RELOCATABLE && !HIBERNATION)
  	select ARCH_HAS_TICK_BROADCAST		if GENERIC_CLOCKEVENTS_BROADCAST
 -	select ARCH_HAS_UACCESS_FLUSHCACHE
 +	select ARCH_HAS_UACCESS_FLUSHCACHE	if PPC64
  	select ARCH_HAS_UACCESS_MCSAFE		if PPC64
  	select ARCH_HAS_UBSAN_SANITIZE_ALL
 +	select ARCH_HAS_ZONE_DEVICE		if PPC_BOOK3S_64
  	select ARCH_HAVE_NMI_SAFE_CMPXCHG
 -	select ARCH_KEEP_MEMBLOCK
  	select ARCH_MIGHT_HAVE_PC_PARPORT
  	select ARCH_MIGHT_HAVE_PC_SERIO
  	select ARCH_OPTIONAL_KERNEL_RWX		if ARCH_HAS_STRICT_KERNEL_RWX
* Unmerged path arch/powerpc/Kconfig
