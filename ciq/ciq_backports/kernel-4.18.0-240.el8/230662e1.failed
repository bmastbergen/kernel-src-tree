libperf: Move the pollfd allocation from tools/perf to libperf

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 230662e15ed6cc63ecf72ed1bffa3cadef486850
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/230662e1.failed

It's needed in libperf only, so move it to the perf_evlist__mmap_ops()
function.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lore.kernel.org/lkml/20191007125344.14268-24-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 230662e15ed6cc63ecf72ed1bffa3cadef486850)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/evlist.c
#	tools/perf/util/evlist.c
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,5192c6583c96..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -42,19 -50,14 +42,24 @@@
  int sigqueue(pid_t pid, int sig, const union sigval value);
  #endif
  
 -#define FD(e, x, y) (*(int *)xyarray__entry(e->core.fd, x, y))
 -#define SID(e, x, y) xyarray__entry(e->core.sample_id, x, y)
 +#define FD(e, x, y) (*(int *)xyarray__entry(e->fd, x, y))
 +#define SID(e, x, y) xyarray__entry(e->sample_id, x, y)
  
 -void evlist__init(struct evlist *evlist, struct perf_cpu_map *cpus,
 -		  struct perf_thread_map *threads)
 +void perf_evlist__init(struct perf_evlist *evlist, struct cpu_map *cpus,
 +		       struct thread_map *threads)
  {
++<<<<<<< HEAD
 +	int i;
 +
 +	for (i = 0; i < PERF_EVLIST__HLIST_SIZE; ++i)
 +		INIT_HLIST_HEAD(&evlist->heads[i]);
 +	INIT_LIST_HEAD(&evlist->entries);
 +	perf_evlist__set_maps(evlist, cpus, threads);
 +	fdarray__init(&evlist->pollfd, 64);
++=======
+ 	perf_evlist__init(&evlist->core);
+ 	perf_evlist__set_maps(&evlist->core, cpus, threads);
++>>>>>>> 230662e15ed6 (libperf: Move the pollfd allocation from tools/perf to libperf)
  	evlist->workload.pid = -1;
  	evlist->bkw_mmap_state = BKW_MMAP_NOTREADY;
  }
@@@ -1031,39 -828,26 +1036,45 @@@ int perf_evlist__mmap_ex(struct perf_ev
  	if (!evlist->mmap)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	if (evlist->pollfd.entries == NULL && perf_evlist__alloc_pollfd(evlist) < 0)
 +		return -ENOMEM;
 +
 +	evlist->mmap_len = perf_evlist__mmap_size(pages);
 +	pr_debug("mmap size %zuB\n", evlist->mmap_len);
 +	mp.mask = evlist->mmap_len - page_size - 1;
++=======
+ 	evlist->core.mmap_len = evlist__mmap_size(pages);
+ 	pr_debug("mmap size %zuB\n", evlist->core.mmap_len);
+ 	mp.core.mask = evlist->core.mmap_len - page_size - 1;
++>>>>>>> 230662e15ed6 (libperf: Move the pollfd allocation from tools/perf to libperf)
  
 -	auxtrace_mmap_params__init(&mp.auxtrace_mp, evlist->core.mmap_len,
 +	auxtrace_mmap_params__init(&mp.auxtrace_mp, evlist->mmap_len,
  				   auxtrace_pages, auxtrace_overwrite);
  
 -	return perf_evlist__mmap_ops(&evlist->core, &ops, &mp.core);
 +	evlist__for_each_entry(evlist, evsel) {
 +		if ((evsel->attr.read_format & PERF_FORMAT_ID) &&
 +		    evsel->sample_id == NULL &&
 +		    perf_evsel__alloc_id(evsel, cpu_map__nr(cpus), threads->nr) < 0)
 +			return -ENOMEM;
 +	}
 +
 +	if (cpu_map__empty(cpus))
 +		return perf_evlist__mmap_per_thread(evlist, &mp);
 +
 +	return perf_evlist__mmap_per_cpu(evlist, &mp);
  }
  
 -int evlist__mmap(struct evlist *evlist, unsigned int pages)
 +int perf_evlist__mmap(struct perf_evlist *evlist, unsigned int pages)
  {
 -	return evlist__mmap_ex(evlist, pages, 0, false, 0, PERF_AFFINITY_SYS, 1, 0);
 +	return perf_evlist__mmap_ex(evlist, pages, 0, false, 0, PERF_AFFINITY_SYS, 1, 0);
  }
  
 -int perf_evlist__create_maps(struct evlist *evlist, struct target *target)
 +int perf_evlist__create_maps(struct perf_evlist *evlist, struct target *target)
  {
  	bool all_threads = (target->per_thread && target->system_wide);
 -	struct perf_cpu_map *cpus;
 -	struct perf_thread_map *threads;
 +	struct cpu_map *cpus;
 +	struct thread_map *threads;
  
  	/*
  	 * If specify '-a' and '--per-thread' to perf record, perf record
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/util/evlist.c
