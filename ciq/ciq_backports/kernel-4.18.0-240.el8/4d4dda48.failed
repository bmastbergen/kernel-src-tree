drm: i915: Call cpu_latency_qos_*() instead of pm_qos_*()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 4d4dda487a364e601a926443adf731b6fe64ae21
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/4d4dda48.failed

Call cpu_latency_qos_add/update/remove_request() instead of
pm_qos_add/update/remove_request(), respectively, because the
latter are going to be dropped.

No intentional functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
	Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org>
	Tested-by: Amit Kucheria <amit.kucheria@linaro.org>
	Acked-by: Jani Nikula <jani.nikula@intel.com>
(cherry picked from commit 4d4dda487a364e601a926443adf731b6fe64ae21)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_drv.c
diff --cc drivers/gpu/drm/i915/i915_drv.c
index 1aa474313525,74481a189cfc..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@@ -968,12 -562,12 +967,12 @@@ static void i915_driver_cleanup_early(s
  {
  	intel_irq_fini(dev_priv);
  	intel_power_domains_cleanup(dev_priv);
 +	intel_uc_cleanup_early(dev_priv);
  	i915_gem_cleanup_early(dev_priv);
 -	intel_gt_driver_late_release(&dev_priv->gt);
 -	vlv_free_s0ix_state(dev_priv);
  	i915_workqueues_cleanup(dev_priv);
 +	i915_engines_cleanup(dev_priv);
  
- 	pm_qos_remove_request(&dev_priv->sb_qos);
+ 	cpu_latency_qos_remove_request(&dev_priv->sb_qos);
  	mutex_destroy(&dev_priv->sb_lock);
  }
  
@@@ -1635,11 -1225,8 +1634,10 @@@ static int i915_driver_init_hw(struct d
  		}
  	}
  
- 	pm_qos_add_request(&dev_priv->pm_qos, PM_QOS_CPU_DMA_LATENCY,
- 			   PM_QOS_DEFAULT_VALUE);
+ 	cpu_latency_qos_add_request(&dev_priv->pm_qos, PM_QOS_DEFAULT_VALUE);
  
 +	intel_uncore_sanitize(dev_priv);
 +
  	intel_gt_init_workarounds(dev_priv);
  
  	/* On the 945G/GM, the chipset reports the MSI capability on the
@@@ -1684,9 -1271,11 +1682,15 @@@
  err_msi:
  	if (pdev->msi_enabled)
  		pci_disable_msi(pdev);
++<<<<<<< HEAD
 +	pm_qos_remove_request(&dev_priv->pm_qos);
++=======
+ 	cpu_latency_qos_remove_request(&dev_priv->pm_qos);
+ err_mem_regions:
+ 	intel_memory_regions_driver_release(dev_priv);
++>>>>>>> 4d4dda487a36 (drm: i915: Call cpu_latency_qos_*() instead of pm_qos_*())
  err_ggtt:
 -	i915_ggtt_driver_release(dev_priv);
 +	i915_ggtt_cleanup_hw(dev_priv);
  err_perf:
  	i915_perf_fini(dev_priv);
  	return ret;
diff --git a/drivers/gpu/drm/i915/display/intel_dp.c b/drivers/gpu/drm/i915/display/intel_dp.c
index 9ec0808f141e..d3697b5ef1ae 100644
--- a/drivers/gpu/drm/i915/display/intel_dp.c
+++ b/drivers/gpu/drm/i915/display/intel_dp.c
@@ -1346,7 +1346,7 @@ intel_dp_aux_xfer(struct intel_dp *intel_dp,
 	 * lowest possible wakeup latency and so prevent the cpu from going into
 	 * deep sleep states.
 	 */
-	pm_qos_update_request(&i915->pm_qos, 0);
+	cpu_latency_qos_update_request(&i915->pm_qos, 0);
 
 	intel_dp_check_edp(intel_dp);
 
@@ -1475,7 +1475,7 @@ intel_dp_aux_xfer(struct intel_dp *intel_dp,
 
 	ret = recv_bytes;
 out:
-	pm_qos_update_request(&i915->pm_qos, PM_QOS_DEFAULT_VALUE);
+	cpu_latency_qos_update_request(&i915->pm_qos, PM_QOS_DEFAULT_VALUE);
 
 	if (vdd)
 		edp_panel_vdd_off(intel_dp, false);
* Unmerged path drivers/gpu/drm/i915/i915_drv.c
diff --git a/drivers/gpu/drm/i915/intel_sideband.c b/drivers/gpu/drm/i915/intel_sideband.c
index a115625e980c..733f7e3922a9 100644
--- a/drivers/gpu/drm/i915/intel_sideband.c
+++ b/drivers/gpu/drm/i915/intel_sideband.c
@@ -62,7 +62,7 @@ static void __vlv_punit_get(struct drm_i915_private *i915)
 	 * to the Valleyview P-unit and not all sideband communications.
 	 */
 	if (IS_VALLEYVIEW(i915)) {
-		pm_qos_update_request(&i915->sb_qos, 0);
+		cpu_latency_qos_update_request(&i915->sb_qos, 0);
 		on_each_cpu(ping, NULL, 1);
 	}
 }
@@ -70,7 +70,8 @@ static void __vlv_punit_get(struct drm_i915_private *i915)
 static void __vlv_punit_put(struct drm_i915_private *i915)
 {
 	if (IS_VALLEYVIEW(i915))
-		pm_qos_update_request(&i915->sb_qos, PM_QOS_DEFAULT_VALUE);
+		cpu_latency_qos_update_request(&i915->sb_qos,
+					       PM_QOS_DEFAULT_VALUE);
 
 	iosf_mbi_punit_release();
 }
