net/mlx5: E-Switch, Increase number of chains and priorities

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Paul Blakey <paulb@mellanox.com>
commit 278d51f24330718aefd7fe86996a6da66fd345e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/278d51f2.failed

Increase the number of chains and priorities to support
the whole range available in tc.

We use unmanaged tables and ignore flow level to create more
tables than what we declared to fs_core steering, and we manage
the connections between the tables themselves.

To support that we need FW with ignore_flow_level capability.
Otherwise the old behaviour will be used, where we are limited
by the number of levels we declared (4 chains, 16 prios).

	Signed-off-by: Paul Blakey <paulb@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Reviewed-by: Oz Shlomo <ozsh@mellanox.com>
	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 278d51f24330718aefd7fe86996a6da66fd345e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_chains.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_chains.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index a042a52084fa,a6d0b62ef234..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -172,10 -146,17 +172,22 @@@ mlx5_eswitch_add_offloaded_rule(struct 
  	}
  
  	if (flow_act.action & MLX5_FLOW_CONTEXT_ACTION_FWD_DEST) {
 -		struct mlx5_flow_table *ft;
 +		if (attr->dest_chain) {
 +			struct mlx5_flow_table *ft;
  
++<<<<<<< HEAD
 +			ft = esw_get_prio_table(esw, attr->dest_chain, 1, 0);
++=======
+ 		if (attr->flags & MLX5_ESW_ATTR_FLAG_SLOW_PATH) {
+ 			flow_act.flags |= FLOW_ACT_IGNORE_FLOW_LEVEL;
+ 			dest[i].type = MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE;
+ 			dest[i].ft = mlx5_esw_chains_get_tc_end_ft(esw);
+ 			i++;
+ 		} else if (attr->dest_chain) {
+ 			flow_act.flags |= FLOW_ACT_IGNORE_FLOW_LEVEL;
+ 			ft = mlx5_esw_chains_get_table(esw, attr->dest_chain,
+ 						       1, 0);
++>>>>>>> 278d51f24330 (net/mlx5: E-Switch, Increase number of chains and priorities)
  			if (IS_ERR(ft)) {
  				rule = ERR_CAST(ft);
  				goto err_create_goto_table;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_chains.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_chains.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_chains.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_chains.h
