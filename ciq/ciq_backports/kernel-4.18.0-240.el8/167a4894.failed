x86/cpu: Set synthetic VMX cpufeatures during init_ia32_feat_ctl()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [x86] cpu: Set synthetic VMX cpufeatures during init_ia32_feat_ctl() (Vitaly Kuznetsov) [1813987]
Rebuild_FUZZ: 96.88%
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 167a4894c113ebe6a1f8b24fa6f9fca849c77f8a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/167a4894.failed

Set the synthetic VMX cpufeatures, which need to be kept to preserve
/proc/cpuinfo's ABI, in the common IA32_FEAT_CTL initialization code.
Remove the vendor code that manually sets the synthetic flags.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20191221044513.21680-13-sean.j.christopherson@intel.com
(cherry picked from commit 167a4894c113ebe6a1f8b24fa6f9fca849c77f8a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/centaur.c
#	arch/x86/kernel/cpu/feat_ctl.c
#	arch/x86/kernel/cpu/intel.c
#	arch/x86/kernel/cpu/zhaoxin.c
diff --cc arch/x86/kernel/cpu/centaur.c
index 14433ff5b828,02d99feb333e..000000000000
--- a/arch/x86/kernel/cpu/centaur.c
+++ b/arch/x86/kernel/cpu/centaur.c
@@@ -250,8 -218,7 +218,12 @@@ static void init_centaur(struct cpuinfo
  	set_cpu_cap(c, X86_FEATURE_LFENCE_RDTSC);
  #endif
  
++<<<<<<< HEAD
 +	if (cpu_has(c, X86_FEATURE_VMX))
 +		centaur_detect_vmx_virtcap(c);
++=======
+ 	init_ia32_feat_ctl(c);
++>>>>>>> 167a4894c113 (x86/cpu: Set synthetic VMX cpufeatures during init_ia32_feat_ctl())
  }
  
  #ifdef CONFIG_X86_32
diff --cc arch/x86/kernel/cpu/intel.c
index ae064a2ca368,57473e2c0869..000000000000
--- a/arch/x86/kernel/cpu/intel.c
+++ b/arch/x86/kernel/cpu/intel.c
@@@ -757,8 -709,7 +711,12 @@@ static void init_intel(struct cpuinfo_x
  	/* Work around errata */
  	srat_detect_node(c);
  
++<<<<<<< HEAD
 +	if (cpu_has(c, X86_FEATURE_VMX))
 +		detect_vmx_virtcap(c);
++=======
+ 	init_ia32_feat_ctl(c);
++>>>>>>> 167a4894c113 (x86/cpu: Set synthetic VMX cpufeatures during init_ia32_feat_ctl())
  
  	if (cpu_has(c, X86_FEATURE_TME))
  		detect_tme(c);
* Unmerged path arch/x86/kernel/cpu/feat_ctl.c
* Unmerged path arch/x86/kernel/cpu/zhaoxin.c
* Unmerged path arch/x86/kernel/cpu/centaur.c
* Unmerged path arch/x86/kernel/cpu/feat_ctl.c
* Unmerged path arch/x86/kernel/cpu/intel.c
* Unmerged path arch/x86/kernel/cpu/zhaoxin.c
