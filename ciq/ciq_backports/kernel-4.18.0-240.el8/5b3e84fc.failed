powerpc: change CONFIG_PPC_STD_MMU to CONFIG_PPC_BOOK3S

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [powerpc] change CONFIG_PPC_STD_MMU to CONFIG_PPC_BOOK3S (Greg Kurz) [1748772]
Rebuild_FUZZ: 91.09%
commit-author Christophe Leroy <christophe.leroy@c-s.fr>
commit 5b3e84fc10ddb77193d6ac1d2be991d47264c716
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5b3e84fc.failed

Today we have:

config PPC_BOOK3S
        def_bool y
        depends on PPC_BOOK3S_32 || PPC_BOOK3S_64

config PPC_STD_MMU
        def_bool y
        depends on PPC_BOOK3S

PPC_STD_MMU is therefore redundant with PPC_BOOK3S. Lets remove it.

	Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 5b3e84fc10ddb77193d6ac1d2be991d47264c716)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/mm/Makefile
diff --cc arch/powerpc/mm/Makefile
index fef83b595772,1adc3d8a89cc..000000000000
--- a/arch/powerpc/mm/Makefile
+++ b/arch/powerpc/mm/Makefile
@@@ -13,11 -13,16 +13,22 @@@ obj-y				:= fault.o mem.o pgtable.o mma
  obj-$(CONFIG_PPC_MMU_NOHASH)	+= mmu_context_nohash.o tlb_nohash.o \
  				   tlb_nohash_low.o
  obj-$(CONFIG_PPC_BOOK3E)	+= tlb_low_$(BITS)e.o
 -hash64-$(CONFIG_PPC_NATIVE)	:= hash_native_64.o
  obj-$(CONFIG_PPC_BOOK3E_64)   += pgtable-book3e.o
++<<<<<<< HEAD
 +obj-$(CONFIG_PPC_BOOK3S_64)	+= book3s64/
 +obj-$(CONFIG_PPC_BOOK3S_64)	+= slb_low.o
 +obj-$(CONFIG_PPC_STD_MMU_32)	+= ppc_mmu_32.o hash_low_32.o mmu_context_hash32.o
 +obj-$(CONFIG_PPC_BOOK3S_32)	+= tlb_hash32.o
++=======
+ obj-$(CONFIG_PPC_BOOK3S_64)	+= pgtable-hash64.o hash_utils_64.o slb.o $(hash64-y) mmu_context_book3s64.o pgtable-book3s64.o
+ obj-$(CONFIG_PPC_RADIX_MMU)	+= pgtable-radix.o tlb-radix.o
+ obj-$(CONFIG_PPC_BOOK3S_32)	+= ppc_mmu_32.o hash_low_32.o mmu_context_hash32.o
+ obj-$(CONFIG_PPC_BOOK3S)	+= tlb_hash$(BITS).o
+ ifdef CONFIG_PPC_BOOK3S_64
+ obj-$(CONFIG_PPC_4K_PAGES)	+= hash64_4k.o
+ obj-$(CONFIG_PPC_64K_PAGES)	+= hash64_64k.o
+ endif
++>>>>>>> 5b3e84fc10dd (powerpc: change CONFIG_PPC_STD_MMU to CONFIG_PPC_BOOK3S)
  obj-$(CONFIG_40x)		+= 40x_mmu.o
  obj-$(CONFIG_44x)		+= 44x_mmu.o
  obj-$(CONFIG_PPC_8xx)		+= 8xx_mmu.o
* Unmerged path arch/powerpc/mm/Makefile
diff --git a/arch/powerpc/mm/fault.c b/arch/powerpc/mm/fault.c
index b6a74f046235..82cb22ccea9f 100644
--- a/arch/powerpc/mm/fault.c
+++ b/arch/powerpc/mm/fault.c
@@ -342,7 +342,7 @@ static inline void cmo_account_page_fault(void)
 static inline void cmo_account_page_fault(void) { }
 #endif /* CONFIG_PPC_SMLPAR */
 
-#ifdef CONFIG_PPC_STD_MMU
+#ifdef CONFIG_PPC_BOOK3S
 static void sanity_check_fault(bool is_write, unsigned long error_code)
 {
 	/*
@@ -379,7 +379,7 @@ static void sanity_check_fault(bool is_write, unsigned long error_code)
 }
 #else
 static void sanity_check_fault(bool is_write, unsigned long error_code) { }
-#endif /* CONFIG_PPC_STD_MMU */
+#endif /* CONFIG_PPC_BOOK3S */
 
 /*
  * Define the correct "is_write" bit in error_code based
diff --git a/arch/powerpc/mm/mem.c b/arch/powerpc/mm/mem.c
index 54211ad167a4..77e894853f41 100644
--- a/arch/powerpc/mm/mem.c
+++ b/arch/powerpc/mm/mem.c
@@ -476,7 +476,7 @@ EXPORT_SYMBOL(flush_icache_user_range);
 void update_mmu_cache(struct vm_area_struct *vma, unsigned long address,
 		      pte_t *ptep)
 {
-#ifdef CONFIG_PPC_STD_MMU
+#ifdef CONFIG_PPC_BOOK3S
 	/*
 	 * We don't need to worry about _PAGE_PRESENT here because we are
 	 * called with either mm->page_table_lock held or ptl lock held
@@ -514,7 +514,7 @@ void update_mmu_cache(struct vm_area_struct *vma, unsigned long address,
 	}
 
 	hash_preload(vma->vm_mm, address, is_exec, trap);
-#endif /* CONFIG_PPC_STD_MMU */
+#endif /* CONFIG_PPC_BOOK3S */
 #if (defined(CONFIG_PPC_BOOK3E_64) || defined(CONFIG_PPC_FSL_BOOK3E)) \
 	&& defined(CONFIG_HUGETLB_PAGE)
 	if (is_vm_hugetlb_page(vma))
diff --git a/arch/powerpc/xmon/xmon.c b/arch/powerpc/xmon/xmon.c
index f0166ec16ca2..0669363d30eb 100644
--- a/arch/powerpc/xmon/xmon.c
+++ b/arch/powerpc/xmon/xmon.c
@@ -1056,7 +1056,7 @@ cmds(struct pt_regs *excp)
 		case 'P':
 			show_tasks();
 			break;
-#ifdef CONFIG_PPC_STD_MMU
+#ifdef CONFIG_PPC_BOOK3S
 		case 'u':
 			dump_segments();
 			break;
