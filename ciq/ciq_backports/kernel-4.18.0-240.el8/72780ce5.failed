gpio: Drop the chained IRQ handler assign function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Linus Walleij <linus.walleij@linaro.org>
commit 72780ce5f1a4189f3c8dcfb1c596c65146452668
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/72780ce5.failed

gpiochip_set_chained_irqchip() would assign a chained handler
to a GPIO chip. We now populate struct gpio_irq_chip for all
chained GPIO irqchips so drop this function.

	Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
Link: https://lore.kernel.org/r/20200113220800.77817-1-linus.walleij@linaro.org
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 72780ce5f1a4189f3c8dcfb1c596c65146452668)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/driver-api/gpio/driver.rst
#	drivers/gpio/gpio-mt7621.c
#	drivers/gpio/gpio-xgs-iproc.c
diff --cc Documentation/driver-api/gpio/driver.rst
index 78d1022babc8,871922529332..000000000000
--- a/Documentation/driver-api/gpio/driver.rst
+++ b/Documentation/driver-api/gpio/driver.rst
@@@ -406,11 -507,6 +406,14 @@@ symbol
    cascaded irq has to be handled by a threaded interrupt handler.
    Apart from that it works exactly like the chained irqchip.
  
++<<<<<<< HEAD
 +- gpiochip_set_chained_irqchip(): sets up a chained cascaded irq handler for a
 +  gpio_chip from a parent IRQ and passes the struct gpio_chip* as handler
 +  data. Notice that we pass is as the handler data, since the irqchip data is
 +  likely used by the parent irqchip.
 +
++=======
++>>>>>>> 72780ce5f1a4 (gpio: Drop the chained IRQ handler assign function)
  - gpiochip_set_nested_irqchip(): sets up a nested cascaded irq handler for a
    gpio_chip from a parent IRQ. As the parent IRQ has usually been
    explicitly requested by the driver, this does very little more than
* Unmerged path drivers/gpio/gpio-mt7621.c
* Unmerged path drivers/gpio/gpio-xgs-iproc.c
* Unmerged path Documentation/driver-api/gpio/driver.rst
* Unmerged path drivers/gpio/gpio-mt7621.c
* Unmerged path drivers/gpio/gpio-xgs-iproc.c
diff --git a/drivers/gpio/gpiolib.c b/drivers/gpio/gpiolib.c
index 72d23519e4c9..fdd97de64564 100644
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@ -1679,7 +1679,7 @@ EXPORT_SYMBOL_GPL(gpiochip_irqchip_irq_valid);
  * gpiochip_set_cascaded_irqchip() - connects a cascaded irqchip to a gpiochip
  * @gc: the gpiochip to set the irqchip chain to
  * @parent_irq: the irq number corresponding to the parent IRQ for this
- * chained irqchip
+ * cascaded irqchip
  * @parent_handler: the parent interrupt handler for the accumulated IRQ
  * coming out of the gpiochip. If the interrupt is nested rather than
  * cascaded, pass NULL in this handler argument
@@ -1721,29 +1721,6 @@ static void gpiochip_set_cascaded_irqchip(struct gpio_chip *gc,
 	}
 }
 
-/**
- * gpiochip_set_chained_irqchip() - connects a chained irqchip to a gpiochip
- * @gpiochip: the gpiochip to set the irqchip chain to
- * @irqchip: the irqchip to chain to the gpiochip
- * @parent_irq: the irq number corresponding to the parent IRQ for this
- * chained irqchip
- * @parent_handler: the parent interrupt handler for the accumulated IRQ
- * coming out of the gpiochip.
- */
-void gpiochip_set_chained_irqchip(struct gpio_chip *gpiochip,
-				  struct irq_chip *irqchip,
-				  unsigned int parent_irq,
-				  irq_flow_handler_t parent_handler)
-{
-	if (gpiochip->irq.threaded) {
-		chip_err(gpiochip, "tried to chain a threaded gpiochip\n");
-		return;
-	}
-
-	gpiochip_set_cascaded_irqchip(gpiochip, parent_irq, parent_handler);
-}
-EXPORT_SYMBOL_GPL(gpiochip_set_chained_irqchip);
-
 /**
  * gpiochip_set_nested_irqchip() - connects a nested irqchip to a gpiochip
  * @gpiochip: the gpiochip to set the irqchip nested handler to
diff --git a/include/linux/gpio/driver.h b/include/linux/gpio/driver.h
index f4ee51450abd..58d0f6d9bc63 100644
--- a/include/linux/gpio/driver.h
+++ b/include/linux/gpio/driver.h
@@ -465,11 +465,6 @@ int gpiochip_irq_domain_activate(struct irq_domain *domain,
 void gpiochip_irq_domain_deactivate(struct irq_domain *domain,
 				    struct irq_data *data);
 
-void gpiochip_set_chained_irqchip(struct gpio_chip *gpiochip,
-		struct irq_chip *irqchip,
-		unsigned int parent_irq,
-		irq_flow_handler_t parent_handler);
-
 void gpiochip_set_nested_irqchip(struct gpio_chip *gpiochip,
 		struct irq_chip *irqchip,
 		unsigned int parent_irq);
