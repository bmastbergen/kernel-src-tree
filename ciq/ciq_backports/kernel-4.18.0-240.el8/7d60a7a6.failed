compat_ioctl: move rfcomm handlers into driver

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnd Bergmann <arnd@arndb.de>
commit 7d60a7a6cd04c34014e763b5d7ed35d6366e42aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7d60a7a6.failed

All these ioctl commands are compatible, so we can handle
them with a trivial wrapper in rfcomm/sock.c and remove
the listing in fs/compat_ioctl.c.

	Acked-by: Marcel Holtmann <marcel@holtmann.org>
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
(cherry picked from commit 7d60a7a6cd04c34014e763b5d7ed35d6366e42aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/compat_ioctl.c
diff --cc fs/compat_ioctl.c
index 52e8324e4cf7,8dbef92b10fd..000000000000
--- a/fs/compat_ioctl.c
+++ b/fs/compat_ioctl.c
@@@ -60,11 -42,7 +60,10 @@@
  
  #include <net/bluetooth/bluetooth.h>
  #include <net/bluetooth/hci_sock.h>
- #include <net/bluetooth/rfcomm.h>
  
 +#include <linux/capi.h>
 +#include <linux/gigaset_dev.h>
 +
  #ifdef CONFIG_BLOCK
  #include <linux/cdrom.h>
  #include <linux/fd.h>
@@@ -1094,46 -672,7 +1093,49 @@@ COMPATIBLE_IOCTL(HCIUARTGETPROTO
  COMPATIBLE_IOCTL(HCIUARTGETDEVICE)
  COMPATIBLE_IOCTL(HCIUARTSETFLAGS)
  COMPATIBLE_IOCTL(HCIUARTGETFLAGS)
++<<<<<<< HEAD
 +COMPATIBLE_IOCTL(RFCOMMCREATEDEV)
 +COMPATIBLE_IOCTL(RFCOMMRELEASEDEV)
 +COMPATIBLE_IOCTL(RFCOMMGETDEVLIST)
 +COMPATIBLE_IOCTL(RFCOMMGETDEVINFO)
 +COMPATIBLE_IOCTL(RFCOMMSTEALDLC)
 +COMPATIBLE_IOCTL(BNEPCONNADD)
 +COMPATIBLE_IOCTL(BNEPCONNDEL)
 +COMPATIBLE_IOCTL(BNEPGETCONNLIST)
 +COMPATIBLE_IOCTL(BNEPGETCONNINFO)
 +COMPATIBLE_IOCTL(BNEPGETSUPPFEAT)
 +COMPATIBLE_IOCTL(CMTPCONNADD)
 +COMPATIBLE_IOCTL(CMTPCONNDEL)
 +COMPATIBLE_IOCTL(CMTPGETCONNLIST)
 +COMPATIBLE_IOCTL(CMTPGETCONNINFO)
 +COMPATIBLE_IOCTL(HIDPCONNADD)
 +COMPATIBLE_IOCTL(HIDPCONNDEL)
 +COMPATIBLE_IOCTL(HIDPGETCONNLIST)
 +COMPATIBLE_IOCTL(HIDPGETCONNINFO)
 +/* CAPI */
 +COMPATIBLE_IOCTL(CAPI_REGISTER)
 +COMPATIBLE_IOCTL(CAPI_GET_MANUFACTURER)
 +COMPATIBLE_IOCTL(CAPI_GET_VERSION)
 +COMPATIBLE_IOCTL(CAPI_GET_SERIAL)
 +COMPATIBLE_IOCTL(CAPI_GET_PROFILE)
 +COMPATIBLE_IOCTL(CAPI_MANUFACTURER_CMD)
 +COMPATIBLE_IOCTL(CAPI_GET_ERRCODE)
 +COMPATIBLE_IOCTL(CAPI_INSTALLED)
 +COMPATIBLE_IOCTL(CAPI_GET_FLAGS)
 +COMPATIBLE_IOCTL(CAPI_SET_FLAGS)
 +COMPATIBLE_IOCTL(CAPI_CLR_FLAGS)
 +COMPATIBLE_IOCTL(CAPI_NCCI_OPENCOUNT)
 +COMPATIBLE_IOCTL(CAPI_NCCI_GETUNIT)
 +/* Siemens Gigaset */
 +COMPATIBLE_IOCTL(GIGASET_REDIR)
 +COMPATIBLE_IOCTL(GIGASET_CONFIG)
 +COMPATIBLE_IOCTL(GIGASET_BRKCHARS)
 +COMPATIBLE_IOCTL(GIGASET_VERSION)
++=======
++>>>>>>> 7d60a7a6cd04 (compat_ioctl: move rfcomm handlers into driver)
  /* Misc. */
 +COMPATIBLE_IOCTL(0x41545900)		/* ATYIO_CLKR */
 +COMPATIBLE_IOCTL(0x41545901)		/* ATYIO_CLKW */
  COMPATIBLE_IOCTL(PCIIOC_CONTROLLER)
  COMPATIBLE_IOCTL(PCIIOC_MMAP_IS_IO)
  COMPATIBLE_IOCTL(PCIIOC_MMAP_IS_MEM)
* Unmerged path fs/compat_ioctl.c
diff --git a/net/bluetooth/rfcomm/sock.c b/net/bluetooth/rfcomm/sock.c
index d606e9212291..d7d8f98ccffd 100644
--- a/net/bluetooth/rfcomm/sock.c
+++ b/net/bluetooth/rfcomm/sock.c
@@ -24,7 +24,7 @@
 /*
  * RFCOMM sockets.
  */
-
+#include <linux/compat.h>
 #include <linux/export.h>
 #include <linux/debugfs.h>
 #include <linux/sched/signal.h>
@@ -909,6 +909,13 @@ static int rfcomm_sock_ioctl(struct socket *sock, unsigned int cmd, unsigned lon
 	return err;
 }
 
+#ifdef CONFIG_COMPAT
+static int rfcomm_sock_compat_ioctl(struct socket *sock, unsigned int cmd, unsigned long arg)
+{
+	return rfcomm_sock_ioctl(sock, cmd, (unsigned long)compat_ptr(arg));
+}
+#endif
+
 static int rfcomm_sock_shutdown(struct socket *sock, int how)
 {
 	struct sock *sk = sock->sk;
@@ -1051,7 +1058,10 @@ static const struct proto_ops rfcomm_sock_ops = {
 	.ioctl		= rfcomm_sock_ioctl,
 	.poll		= bt_sock_poll,
 	.socketpair	= sock_no_socketpair,
-	.mmap		= sock_no_mmap
+	.mmap		= sock_no_mmap,
+#ifdef CONFIG_COMPAT
+	.compat_ioctl	= rfcomm_sock_compat_ioctl,
+#endif
 };
 
 static const struct net_proto_family rfcomm_sock_family_ops = {
