selftests/bpf: Build runqslower from selftests

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 3a0d3092a4edbbcd62360c44a931c8feaf4b4ff1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3a0d3092.failed

Ensure runqslower tool is built as part of selftests to prevent it from bit
rotting.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200113073143.1779940-7-andriin@fb.com
(cherry picked from commit 3a0d3092a4edbbcd62360c44a931c8feaf4b4ff1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/Makefile
diff --cc tools/testing/selftests/bpf/Makefile
index 1739bffedc44,246d09ffb296..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -80,7 -73,32 +80,36 @@@ TEST_PROGS_EXTENDED := with_addr.sh 
  # Compile but not part of 'make run_tests'
  TEST_GEN_PROGS_EXTENDED = test_sock_addr test_skb_cgroup_id_user \
  	flow_dissector_load test_flow_dissector test_tcp_check_syncookie_user \
++<<<<<<< HEAD
 +	test_lirc_mode2_user xdping
++=======
+ 	test_lirc_mode2_user xdping test_cpp runqslower
+ 
+ TEST_CUSTOM_PROGS = urandom_read
+ 
+ # Emit succinct information message describing current building step
+ # $1 - generic step name (e.g., CC, LINK, etc);
+ # $2 - optional "flavor" specifier; if provided, will be emitted as [flavor];
+ # $3 - target (assumed to be file); only file name will be emitted;
+ # $4 - optional extra arg, emitted as-is, if provided.
+ ifeq ($(V),1)
+ Q =
+ msg =
+ else
+ Q = @
+ msg = @printf '  %-8s%s %s%s\n' "$(1)" "$(if $(2), [$(2)])" "$(notdir $(3))" "$(if $(4), $(4))";
+ MAKEFLAGS += --no-print-directory
+ submake_extras := feature_display=0
+ endif
+ 
+ # override lib.mk's default rules
+ OVERRIDE_TARGETS := 1
+ override define CLEAN
+ 	$(call msg,CLEAN)
+ 	$(RM) -r $(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED) $(TEST_GEN_FILES) $(EXTRA_CLEAN)
+ 	$(MAKE) -C $(BPFDIR) OUTPUT=$(OUTPUT)/ clean
+ endef
++>>>>>>> 3a0d3092a4ed (selftests/bpf: Build runqslower from selftests)
  
  include ../lib.mk
  
@@@ -102,13 -121,17 +131,18 @@@ $(OUTPUT)/urandom_read: $(OUTPUT)/%: %.
  	$(CC) -o $@ $< -Wl,--build-id
  
  $(OUTPUT)/test_stub.o: test_stub.c
 -	$(call msg,CC,,$@)
 -	$(CC) -c $(CFLAGS) -o $@ $<
 +	$(CC) $(TEST_PROGS_CFLAGS) $(CFLAGS) -c -o $@ $<
  
+ .PHONY: $(OUTPUT)/runqslower
+ $(OUTPUT)/runqslower: force
+ 	$(Q)$(MAKE) $(submake_extras) -C $(TOOLSDIR)/bpf/runqslower	      \
+ 		    OUTPUT=$(CURDIR)/tools/
+ 
  BPFOBJ := $(OUTPUT)/libbpf.a
  
 -$(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(BPFOBJ)
 +$(TEST_GEN_PROGS): $(OUTPUT)/test_stub.o $(BPFOBJ)
 +
 +$(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(OUTPUT)/libbpf.a
  
  $(OUTPUT)/test_dev_cgroup: cgroup_helpers.c
  $(OUTPUT)/test_skb_cgroup_id_user: cgroup_helpers.c
diff --git a/tools/bpf/runqslower/Makefile b/tools/bpf/runqslower/Makefile
index f1363ae8e473..cff2fbcd29a8 100644
--- a/tools/bpf/runqslower/Makefile
+++ b/tools/bpf/runqslower/Makefile
@@ -10,7 +10,7 @@ CFLAGS := -g -Wall
 
 # Try to detect best kernel BTF source
 KERNEL_REL := $(shell uname -r)
-ifneq ("$(wildcard /sys/kenerl/btf/vmlinux)","")
+ifneq ("$(wildcard /sys/kernel/btf/vmlinux)","")
 VMLINUX_BTF := /sys/kernel/btf/vmlinux
 else ifneq ("$(wildcard /boot/vmlinux-$(KERNEL_REL))","")
 VMLINUX_BTF := /boot/vmlinux-$(KERNEL_REL)
* Unmerged path tools/testing/selftests/bpf/Makefile
