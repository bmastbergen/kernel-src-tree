blk-mq: remove a pointless queue enter pair in blk_mq_alloc_request_hctx

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 35b371ff01410ec7c73312f1c1c320de35fcfd0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/35b371ff.failed

No need for two queue references.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 35b371ff01410ec7c73312f1c1c320de35fcfd0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index f3fc03aa9f37,b1c12de8926e..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -445,13 -454,14 +445,15 @@@ struct request *blk_mq_alloc_request_hc
  	cpu = cpumask_first_and(alloc_data.hctx->cpumask, cpu_online_mask);
  	alloc_data.ctx = __blk_mq_get_ctx(q, cpu);
  
++<<<<<<< HEAD
++=======
+ 	ret = -EWOULDBLOCK;
++>>>>>>> 35b371ff0141 (blk-mq: remove a pointless queue enter pair in blk_mq_alloc_request_hctx)
  	rq = blk_mq_get_request(q, NULL, &alloc_data);
- 	blk_queue_exit(q);
- 
  	if (!rq)
 -		goto out_queue_exit;
 +		return ERR_PTR(-EWOULDBLOCK);
 +
  	return rq;
 -out_queue_exit:
 -	blk_queue_exit(q);
 -	return ERR_PTR(ret);
  }
  EXPORT_SYMBOL_GPL(blk_mq_alloc_request_hctx);
  
* Unmerged path block/blk-mq.c
