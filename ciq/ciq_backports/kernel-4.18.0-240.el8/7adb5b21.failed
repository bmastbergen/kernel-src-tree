net: phylink: make Broadcom BCM84881 based SFPs work

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit 7adb5b2126bc013f0964ddaefad6ad1b132e86c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7adb5b21.failed

The Broadcom BCM84881 does not appear to send the SGMII control word
when operating in SGMII mode, which causes network adapters to fail
to link with the PHY, or decide to operate at fixed 1G speed, even if
the PHY negotiated 100M.

Work around this by detecting the Broadcom BCM84881 and switch to phy
mode rather than inband mode.

	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7adb5b2126bc013f0964ddaefad6ad1b132e86c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index d2ef72edac49,47614f975344..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -1743,10 -1849,31 +1752,38 @@@ static bool phylink_phy_no_inband(struc
  static int phylink_sfp_connect_phy(void *upstream, struct phy_device *phy)
  {
  	struct phylink *pl = upstream;
++<<<<<<< HEAD
 +	phy_interface_t interface = pl->link_config.interface;
 +	int ret;
 +
 +	ret = phylink_attach_phy(pl, phy, pl->link_config.interface);
++=======
+ 	phy_interface_t interface;
+ 	u8 mode;
+ 	int ret;
+ 
+ 	/*
+ 	 * This is the new way of dealing with flow control for PHYs,
+ 	 * as described by Timur Tabi in commit 529ed1275263 ("net: phy:
+ 	 * phy drivers should not set SUPPORTED_[Asym_]Pause") except
+ 	 * using our validate call to the MAC, we rely upon the MAC
+ 	 * clearing the bits from both supported and advertising fields.
+ 	 */
+ 	phy_support_asym_pause(phy);
+ 
+ 	if (phylink_phy_no_inband(phy))
+ 		mode = MLO_AN_PHY;
+ 	else
+ 		mode = MLO_AN_INBAND;
+ 
+ 	/* Do the initial configuration */
+ 	ret = phylink_sfp_config(pl, mode, phy->supported, phy->advertising);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	interface = pl->link_config.interface;
+ 	ret = phylink_attach_phy(pl, phy, interface);
++>>>>>>> 7adb5b2126bc (net: phylink: make Broadcom BCM84881 based SFPs work)
  	if (ret < 0)
  		return ret;
  
* Unmerged path drivers/net/phy/phylink.c
