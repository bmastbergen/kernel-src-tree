net: phylink: improve clause 45 PHY ksettings_set implementation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Russell King <rmk+kernel@armlinux.org.uk>
commit 5d57c327584ae0f88eba61ec8faa9c621f40cffd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5d57c327.failed

While testing ethtool with the Methode DM7052 module, it was noticed
that attempting to set the advertising mask results in the mask being
truncated to the support offered by the currently chosen PHY interface
mode.

When a PHY dynamically changes the PHY interface mode, limiting the
advertising mask in this way is not correct - if the PHY happened to
negotiate 10GBASE-T, and selected 10GBASE-R as the host interface, we
don't want to restrict the advertisement to just 10GBASE-* modes.

Rework setting the advertisement to take account of this; do not pass
the requested advertisement through phylink_validate(), but rely on
the advertisement restriction (supported mask) set when the PHY was
initially setup.

	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5d57c327584ae0f88eba61ec8faa9c621f40cffd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/phylink.c
diff --cc drivers/net/phy/phylink.c
index d8784f9215a8,8f3dc27db95d..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -1178,21 -1245,51 +1176,57 @@@ int phylink_ethtool_ksettings_set(struc
  		ret = phy_ethtool_ksettings_set(pl->phydev, &our_kset);
  		if (ret)
  			return ret;
- 	}
  
- 	mutex_lock(&pl->state_mutex);
- 	/* Configure the MAC to match the new settings */
- 	linkmode_copy(pl->link_config.advertising, our_kset.link_modes.advertising);
- 	pl->link_config.interface = config.interface;
- 	pl->link_config.speed = our_kset.base.speed;
- 	pl->link_config.duplex = our_kset.base.duplex;
- 	pl->link_config.an_enabled = our_kset.base.autoneg != AUTONEG_DISABLE;
+ 		mutex_lock(&pl->state_mutex);
+ 		/* Save the new configuration */
+ 		linkmode_copy(pl->link_config.advertising,
+ 			      our_kset.link_modes.advertising);
+ 		pl->link_config.interface = config.interface;
+ 		pl->link_config.speed = our_kset.base.speed;
+ 		pl->link_config.duplex = our_kset.base.duplex;
+ 		pl->link_config.an_enabled = our_kset.base.autoneg !=
+ 					     AUTONEG_DISABLE;
+ 		mutex_unlock(&pl->state_mutex);
+ 	} else {
+ 		/* For a fixed link, this isn't able to change any parameters,
+ 		 * which just leaves inband mode.
+ 		 */
+ 		if (phylink_validate(pl, support, &config))
+ 			return -EINVAL;
  
++<<<<<<< HEAD
 +	if (!test_bit(PHYLINK_DISABLE_STOPPED, &pl->phylink_disable_state)) {
 +		phylink_mac_config(pl, &pl->link_config);
 +		phylink_mac_an_restart(pl);
++=======
+ 		/* If autonegotiation is enabled, we must have an advertisement */
+ 		if (config.an_enabled &&
+ 		    phylink_is_empty_linkmode(config.advertising))
+ 			return -EINVAL;
+ 
+ 		mutex_lock(&pl->state_mutex);
+ 		linkmode_copy(pl->link_config.advertising, config.advertising);
+ 		pl->link_config.interface = config.interface;
+ 		pl->link_config.speed = config.speed;
+ 		pl->link_config.duplex = config.duplex;
+ 		pl->link_config.an_enabled = kset->base.autoneg !=
+ 					     AUTONEG_DISABLE;
+ 
+ 		if (pl->cur_link_an_mode == MLO_AN_INBAND &&
+ 		    !test_bit(PHYLINK_DISABLE_STOPPED,
+ 			      &pl->phylink_disable_state)) {
+ 			/* If in 802.3z mode, this updates the advertisement.
+ 			 *
+ 			 * If we are in SGMII mode without a PHY, there is no
+ 			 * advertisement; the only thing we have is the pause
+ 			 * modes which can only come from a PHY.
+ 			 */
+ 			phylink_mac_config(pl, &pl->link_config);
+ 			phylink_mac_an_restart(pl);
+ 		}
+ 		mutex_unlock(&pl->state_mutex);
++>>>>>>> 5d57c327584a (net: phylink: improve clause 45 PHY ksettings_set implementation)
  	}
- 	mutex_unlock(&pl->state_mutex);
  
  	return 0;
  }
* Unmerged path drivers/net/phy/phylink.c
