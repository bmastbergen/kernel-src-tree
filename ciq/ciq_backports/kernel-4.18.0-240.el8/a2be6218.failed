iommu/arm-smmu-v3: Improve add_device() error handling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jean-Philippe Brucker <jean-philippe@linaro.org>
commit a2be6218e649fb6e444e468dae5d177eea64d328
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a2be6218.failed

Let add_device() clean up after itself. The iommu_bus_init() function
does call remove_device() on error, but other sites (e.g. of_iommu) do
not.

Don't free level-2 stream tables because we'd have to track if we
allocated each of them or if they are used by other endpoints. It's not
worth the hassle since they are managed resources.

	Reviewed-by: Eric Auger <eric.auger@redhat.com>
	Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
	Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit a2be6218e649fb6e444e468dae5d177eea64d328)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu-v3.c
diff --cc drivers/iommu/arm-smmu-v3.c
index 1b61de0d69f6,59dbd63a2aae..000000000000
--- a/drivers/iommu/arm-smmu-v3.c
+++ b/drivers/iommu/arm-smmu-v3.c
@@@ -2572,13 -2834,31 +2574,34 @@@ static int arm_smmu_add_device(struct d
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	master->ssid_bits = min(smmu->ssid_bits, fwspec->num_pasid_bits);
+ 
+ 	if (!(smmu->features & ARM_SMMU_FEAT_2_LVL_CDTAB))
+ 		master->ssid_bits = min_t(u8, master->ssid_bits,
+ 					  CTXDESC_LINEAR_CDMAX);
+ 
+ 	ret = iommu_device_link(&smmu->iommu, dev);
+ 	if (ret)
+ 		goto err_free_master;
+ 
++>>>>>>> a2be6218e649 (iommu/arm-smmu-v3: Improve add_device() error handling)
  	group = iommu_group_get_for_dev(dev);
- 	if (!IS_ERR(group)) {
- 		iommu_group_put(group);
- 		iommu_device_link(&smmu->iommu, dev);
+ 	if (IS_ERR(group)) {
+ 		ret = PTR_ERR(group);
+ 		goto err_unlink;
  	}
  
- 	return PTR_ERR_OR_ZERO(group);
+ 	iommu_group_put(group);
+ 	return 0;
+ 
+ err_unlink:
+ 	iommu_device_unlink(&smmu->iommu, dev);
+ err_free_master:
+ 	kfree(master);
+ 	fwspec->iommu_priv = NULL;
+ 	return ret;
  }
  
  static void arm_smmu_remove_device(struct device *dev)
* Unmerged path drivers/iommu/arm-smmu-v3.c
