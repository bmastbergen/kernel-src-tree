powerpc/pkeys: Fix handling of pkey state across fork()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ram Pai <linuxram@us.ibm.com>
commit 2cd4bd192ee94848695c1c052d87913260e10f36
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2cd4bd19.failed

Protection key tracking information is not copied over to the
mm_struct of the child during fork(). This can cause the child to
erroneously allocate keys that were already allocated. Any allocated
execute-only key is lost aswell.

Add code; called by dup_mmap(), to copy the pkey state from parent to
child explicitly.

This problem was originally found by Dave Hansen on x86, which turns
out to be a problem on powerpc aswell.

Fixes: cf43d3b26452 ("powerpc: Enable pkey subsystem")
	Cc: stable@vger.kernel.org # v4.16+
	Reviewed-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
	Signed-off-by: Ram Pai <linuxram@us.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 2cd4bd192ee94848695c1c052d87913260e10f36)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/mmu_context.h
diff --cc arch/powerpc/include/asm/mmu_context.h
index f5585d947f20,e687ed31d85a..000000000000
--- a/arch/powerpc/include/asm/mmu_context.h
+++ b/arch/powerpc/include/asm/mmu_context.h
@@@ -228,13 -217,7 +228,17 @@@ static inline void enter_lazy_tlb(struc
  #endif
  }
  
++<<<<<<< HEAD
 +static inline int arch_dup_mmap(struct mm_struct *oldmm,
 +				struct mm_struct *mm)
 +{
 +	return 0;
 +}
 +
 +#ifndef CONFIG_PPC_BOOK3S_64
++=======
+ #ifdef CONFIG_PPC_BOOK3E_64
++>>>>>>> 2cd4bd192ee9 (powerpc/pkeys: Fix handling of pkey state across fork())
  static inline void arch_exit_mmap(struct mm_struct *mm)
  {
  }
* Unmerged path arch/powerpc/include/asm/mmu_context.h
diff --git a/arch/powerpc/mm/book3s64/pkeys.c b/arch/powerpc/mm/book3s64/pkeys.c
index b271b283c785..25a8dd9cd71d 100644
--- a/arch/powerpc/mm/book3s64/pkeys.c
+++ b/arch/powerpc/mm/book3s64/pkeys.c
@@ -414,3 +414,13 @@ bool arch_vma_access_permitted(struct vm_area_struct *vma, bool write,
 
 	return pkey_access_permitted(vma_pkey(vma), write, execute);
 }
+
+void arch_dup_pkeys(struct mm_struct *oldmm, struct mm_struct *mm)
+{
+	if (static_branch_likely(&pkey_disabled))
+		return;
+
+	/* Duplicate the oldmm pkey state in mm: */
+	mm_pkey_allocation_map(mm) = mm_pkey_allocation_map(oldmm);
+	mm->context.execute_only_pkey = oldmm->context.execute_only_pkey;
+}
