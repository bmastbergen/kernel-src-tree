selftests/bpf: Support out-of-tree vmlinux builds for VMLINUX_BTF

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit cc6fa771024ffdb428bdf25a94309cf21e8ef1b9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/cc6fa771.failed

Add detection of out-of-tree built vmlinux image for the purpose of
VMLINUX_BTF detection. According to Documentation/kbuild/kbuild.rst, O takes
precedence over KBUILD_OUTPUT.

Also ensure ~/path/to/build/dir also works by relying on wildcard's resolution
first, but then applying $(abspath) at the end to also handle
O=../../whatever cases.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200304184336.165766-1-andriin@fb.com
(cherry picked from commit cc6fa771024ffdb428bdf25a94309cf21e8ef1b9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/Makefile
diff --cc tools/testing/selftests/bpf/Makefile
index a1d9b7ae56bd,ee4ad34adb4a..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -95,21 -117,31 +95,35 @@@ $(notdir $(TEST_GEN_PROGS)						
  	 $(TEST_GEN_PROGS_EXTENDED)					\
  	 $(TEST_CUSTOM_PROGS)): %: $(OUTPUT)/% ;
  
 -$(OUTPUT)/%:%.c
 -	$(call msg,BINARY,,$@)
 -	$(LINK.c) $^ $(LDLIBS) -o $@
 +# NOTE: $(OUTPUT) won't get default value if used before lib.mk
 +TEST_CUSTOM_PROGS = $(OUTPUT)/urandom_read
 +all: $(TEST_CUSTOM_PROGS)
  
 -$(OUTPUT)/urandom_read: urandom_read.c
 -	$(call msg,BINARY,,$@)
 -	$(CC) $(LDFLAGS) -o $@ $< $(LDLIBS) -Wl,--build-id
 +$(OUTPUT)/urandom_read: $(OUTPUT)/%: %.c
 +	$(CC) -o $@ $< -Wl,--build-id
  
 -$(OUTPUT)/test_stub.o: test_stub.c $(BPFOBJ)
 -	$(call msg,CC,,$@)
 -	$(CC) -c $(CFLAGS) -o $@ $<
 +$(OUTPUT)/test_stub.o: test_stub.c
 +	$(CC) $(TEST_PROGS_CFLAGS) $(CFLAGS) -c -o $@ $<
  
++<<<<<<< HEAD
 +BPFOBJ := $(OUTPUT)/libbpf.a
++=======
+ VMLINUX_BTF_PATHS := $(if $(O),$(O)/vmlinux)				\
+ 		     $(if $(KBUILD_OUTPUT),$(KBUILD_OUTPUT)/vmlinux)	\
+ 		     ../../../../vmlinux				\
+ 		     /sys/kernel/btf/vmlinux				\
+ 		     /boot/vmlinux-$(shell uname -r)
+ VMLINUX_BTF:= $(abspath $(firstword $(wildcard $(VMLINUX_BTF_PATHS))))
+ 
+ $(OUTPUT)/runqslower: $(BPFOBJ)
+ 	$(Q)$(MAKE) $(submake_extras) -C $(TOOLSDIR)/bpf/runqslower	\
+ 		    OUTPUT=$(SCRATCH_DIR)/ VMLINUX_BTF=$(VMLINUX_BTF)   \
+ 		    BPFOBJ=$(BPFOBJ) BPF_INCLUDE=$(INCLUDE_DIR)
++>>>>>>> cc6fa771024f (selftests/bpf: Support out-of-tree vmlinux builds for VMLINUX_BTF)
 +
 +$(TEST_GEN_PROGS): $(OUTPUT)/test_stub.o $(BPFOBJ)
  
 -$(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(BPFOBJ)
 +$(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(OUTPUT)/libbpf.a
  
  $(OUTPUT)/test_dev_cgroup: cgroup_helpers.c
  $(OUTPUT)/test_skb_cgroup_id_user: cgroup_helpers.c
* Unmerged path tools/testing/selftests/bpf/Makefile
