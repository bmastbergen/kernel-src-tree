dma-mapping: remove CONFIG_ARCH_NO_COHERENT_DMA_MMAP

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 62fcee9a3bd73e279d3052245a652a918d0c51da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/62fcee9a.failed

CONFIG_ARCH_NO_COHERENT_DMA_MMAP is now functionally identical to
!CONFIG_MMU, so remove the separate symbol.  The only difference is that
arm did not set it for !CONFIG_MMU, but arm uses a separate dma mapping
implementation including its own mmap method, which is handled by moving
the CONFIG_MMU check in dma_can_mmap so that is only applies to the
dma-direct case, just as the other ifdefs for it.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>	# m68k
(cherry picked from commit 62fcee9a3bd73e279d3052245a652a918d0c51da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/Kconfig
#	arch/c6x/Kconfig
#	arch/m68k/Kconfig
#	arch/xtensa/Kconfig
diff --cc arch/Kconfig
index c43c3b9517d7,ec2834206d08..000000000000
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@@ -893,7 -790,10 +893,14 @@@ config COMPAT_32BIT_TIM
  	  This is relevant on all 32-bit architectures, and 64-bit architectures
  	  as part of compat syscall handling.
  
++<<<<<<< HEAD
 +config ARCH_NO_COHERENT_DMA_MMAP
++=======
+ config ARCH_NO_PREEMPT
+ 	bool
+ 
+ config ARCH_SUPPORTS_RT
++>>>>>>> 62fcee9a3bd7 (dma-mapping: remove CONFIG_ARCH_NO_COHERENT_DMA_MMAP)
  	bool
  
  config CPU_NO_EFFICIENT_FFS
diff --cc arch/c6x/Kconfig
index ad53996d0bd1,e65e8d82442a..000000000000
--- a/arch/c6x/Kconfig
+++ b/arch/c6x/Kconfig
@@@ -20,7 -20,7 +20,11 @@@ config C6
  	select OF_EARLY_FLATTREE
  	select GENERIC_CLOCKEVENTS
  	select MODULES_USE_ELF_RELA
++<<<<<<< HEAD
 +	select ARCH_NO_COHERENT_DMA_MMAP
++=======
+ 	select MMU_GATHER_NO_RANGE if MMU
++>>>>>>> 62fcee9a3bd7 (dma-mapping: remove CONFIG_ARCH_NO_COHERENT_DMA_MMAP)
  
  config MMU
  	def_bool n
diff --cc arch/m68k/Kconfig
index afadda00401e,935599893d3e..000000000000
--- a/arch/m68k/Kconfig
+++ b/arch/m68k/Kconfig
@@@ -2,8 -2,14 +2,14 @@@
  config M68K
  	bool
  	default y
 -	select ARCH_32BIT_OFF_T
 -	select ARCH_HAS_BINFMT_FLAT
 -	select ARCH_HAS_DMA_PREP_COHERENT if HAS_DMA && MMU && !COLDFIRE
 -	select ARCH_HAS_SYNC_DMA_FOR_DEVICE if HAS_DMA
  	select ARCH_MIGHT_HAVE_PC_PARPORT if ISA
++<<<<<<< HEAD
 +	select ARCH_NO_COHERENT_DMA_MMAP if !MMU
++=======
+ 	select ARCH_NO_PREEMPT if !COLDFIRE
+ 	select BINFMT_FLAT_ARGVP_ENVP_ON_STACK
+ 	select DMA_DIRECT_REMAP if HAS_DMA && MMU && !COLDFIRE
++>>>>>>> 62fcee9a3bd7 (dma-mapping: remove CONFIG_ARCH_NO_COHERENT_DMA_MMAP)
  	select HAVE_IDE
  	select HAVE_AOUT if MMU
  	select HAVE_DEBUG_BUGVERBOSE
diff --cc arch/xtensa/Kconfig
index bc963501b763,70653aed3005..000000000000
--- a/arch/xtensa/Kconfig
+++ b/arch/xtensa/Kconfig
@@@ -1,10 -1,12 +1,19 @@@
  # SPDX-License-Identifier: GPL-2.0
 +config ZONE_DMA
 +	def_bool y
 +
  config XTENSA
  	def_bool y
++<<<<<<< HEAD
 +	select ARCH_NO_COHERENT_DMA_MMAP if !MMU
++=======
+ 	select ARCH_32BIT_OFF_T
+ 	select ARCH_HAS_BINFMT_FLAT if !MMU
+ 	select ARCH_HAS_SYNC_DMA_FOR_CPU
+ 	select ARCH_HAS_SYNC_DMA_FOR_DEVICE
+ 	select ARCH_USE_QUEUED_RWLOCKS
+ 	select ARCH_USE_QUEUED_SPINLOCKS
++>>>>>>> 62fcee9a3bd7 (dma-mapping: remove CONFIG_ARCH_NO_COHERENT_DMA_MMAP)
  	select ARCH_WANT_FRAME_POINTERS
  	select ARCH_WANT_IPC_PARSE_VERSION
  	select BUILDTIME_EXTABLE_SORT
* Unmerged path arch/Kconfig
* Unmerged path arch/c6x/Kconfig
* Unmerged path arch/m68k/Kconfig
diff --git a/arch/microblaze/Kconfig b/arch/microblaze/Kconfig
index 3218a8b35f9c..017726f40ab0 100644
--- a/arch/microblaze/Kconfig
+++ b/arch/microblaze/Kconfig
@@ -2,7 +2,6 @@ config MICROBLAZE
 	def_bool y
 	select ARCH_HAS_GCOV_PROFILE_ALL
 	select ARCH_MIGHT_HAVE_PC_PARPORT
-	select ARCH_NO_COHERENT_DMA_MMAP if !MMU
 	select ARCH_WANT_IPC_PARSE_VERSION
 	select BUILDTIME_EXTABLE_SORT
 	select TIMER_OF
diff --git a/arch/sh/Kconfig b/arch/sh/Kconfig
index b58249fed0f7..ae271b9d187e 100644
--- a/arch/sh/Kconfig
+++ b/arch/sh/Kconfig
@@ -4,7 +4,6 @@ config SUPERH
 	select ARCH_HAS_PTE_SPECIAL
 	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
 	select ARCH_MIGHT_HAVE_PC_PARPORT
-	select ARCH_NO_COHERENT_DMA_MMAP if !MMU
 	select HAVE_PATA_PLATFORM
 	select CLKDEV_LOOKUP
 	select HAVE_IDE if HAS_IOPORT_MAP
* Unmerged path arch/xtensa/Kconfig
diff --git a/kernel/dma/mapping.c b/kernel/dma/mapping.c
index 1d7e11d51c2f..fb7464d4fc82 100644
--- a/kernel/dma/mapping.c
+++ b/kernel/dma/mapping.c
@@ -185,7 +185,7 @@ int dma_common_mmap(struct device *dev, struct vm_area_struct *vma,
 		void *cpu_addr, dma_addr_t dma_addr, size_t size,
 		unsigned long attrs)
 {
-#ifndef CONFIG_ARCH_NO_COHERENT_DMA_MMAP
+#ifdef CONFIG_MMU
 	unsigned long user_count = vma_pages(vma);
 	unsigned long count = PAGE_ALIGN(size) >> PAGE_SHIFT;
 	unsigned long off = vma->vm_pgoff;
@@ -216,7 +216,7 @@ int dma_common_mmap(struct device *dev, struct vm_area_struct *vma,
 			user_count << PAGE_SHIFT, vma->vm_page_prot);
 #else
 	return -ENXIO;
-#endif /* !CONFIG_ARCH_NO_COHERENT_DMA_MMAP */
+#endif /* CONFIG_MMU */
 }
 
 /**
@@ -230,12 +230,10 @@ bool dma_can_mmap(struct device *dev)
 {
 	const struct dma_map_ops *ops = get_dma_ops(dev);
 
-	if (IS_ENABLED(CONFIG_ARCH_NO_COHERENT_DMA_MMAP))
-		return false;
-
 	if (dma_is_direct(ops)) {
-		return dev_is_dma_coherent(dev) ||
-			IS_ENABLED(CONFIG_ARCH_HAS_DMA_COHERENT_TO_PFN);
+		return IS_ENABLED(CONFIG_MMU) &&
+		       (dev_is_dma_coherent(dev) ||
+			IS_ENABLED(CONFIG_ARCH_HAS_DMA_COHERENT_TO_PFN));
 	}
 
 	return ops->mmap != NULL;
