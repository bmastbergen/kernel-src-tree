perf stat: Factor out open error handling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andi Kleen <ak@linux.intel.com>
commit e0e6a6ca3ac211cc07486330a2b89f41ea31b4dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/e0e6a6ca.failed

Factor out the open error handling into a separate function.  This is
useful for followon patches who need to duplicate this.

No behavior change intended.

	Signed-off-by: Andi Kleen <ak@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: http://lore.kernel.org/lkml/20191121001522.180827-9-andi@firstfloor.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit e0e6a6ca3ac211cc07486330a2b89f41ea31b4dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-stat.c
diff --cc tools/perf/builtin-stat.c
index 13e7c7e6714e,1d9d7161815e..000000000000
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@@ -467,47 -520,16 +518,50 @@@ try_again
  				goto try_again;
  			}
  
++<<<<<<< HEAD
 +			/*
 +			 * PPC returns ENXIO for HW counters until 2.6.37
 +			 * (behavior changed with commit b0a873e).
 +			 */
 +			if (errno == EINVAL || errno == ENOSYS ||
 +			    errno == ENOENT || errno == EOPNOTSUPP ||
 +			    errno == ENXIO) {
 +				if (verbose > 0)
 +					ui__warning("%s event is not supported by the kernel.\n",
 +						    perf_evsel__name(counter));
 +				counter->supported = false;
 +
 +				if ((counter->leader != counter) ||
 +				    !(counter->leader->nr_members > 1))
 +					continue;
 +			} else if (perf_evsel__fallback(counter, errno, msg, sizeof(msg))) {
 +                                if (verbose > 0)
 +                                        ui__warning("%s\n", msg);
 +                                goto try_again;
 +			} else if (target__has_per_thread(&target) &&
 +				   evsel_list->threads &&
 +				   evsel_list->threads->err_thread != -1) {
 +				/*
 +				 * For global --per-thread case, skip current
 +				 * error thread.
 +				 */
 +				if (!thread_map__remove(evsel_list->threads,
 +							evsel_list->threads->err_thread)) {
 +					evsel_list->threads->err_thread = -1;
 +					goto try_again;
 +				}
++=======
+ 			switch (stat_handle_error(counter)) {
+ 			case COUNTER_FATAL:
+ 				return -1;
+ 			case COUNTER_RETRY:
+ 				goto try_again;
+ 			case COUNTER_SKIP:
+ 				continue;
+ 			default:
+ 				break;
++>>>>>>> e0e6a6ca3ac2 (perf stat: Factor out open error handling)
  			}
- 
- 			perf_evsel__open_strerror(counter, &target,
- 						  errno, msg, sizeof(msg));
- 			ui__error("%s\n", msg);
- 
- 			if (child_pid != -1)
- 				kill(child_pid, SIGTERM);
- 
- 			return -1;
  		}
  		counter->supported = true;
  
* Unmerged path tools/perf/builtin-stat.c
