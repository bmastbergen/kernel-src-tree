libperf: Add perf_evsel__cpus()/threads() functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 0ff1a0fdf52cffa998eee4303e02780d39b2b09c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0ff1a0fd.failed

Add the following functions:

  perf_evsel__cpus()
  perf_evsel__threads()

to access the evsel's cpus and threads objects.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-68-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 0ff1a0fdf52cffa998eee4303e02780d39b2b09c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/evsel.c
#	tools/perf/lib/include/perf/evsel.h
#	tools/perf/lib/libperf.map
#	tools/perf/util/evsel.h
diff --cc tools/perf/lib/libperf.map
index 3536242c545c,9f43b5cda031..000000000000
--- a/tools/perf/lib/libperf.map
+++ b/tools/perf/lib/libperf.map
@@@ -1,6 -1,35 +1,38 @@@
  LIBPERF_0.0.1 {
  	global:
  		libperf_set_print;
++<<<<<<< HEAD
++=======
+ 		perf_cpu_map__dummy_new;
+ 		perf_cpu_map__get;
+ 		perf_cpu_map__put;
+ 		perf_cpu_map__new;
+ 		perf_cpu_map__read;
+ 		perf_cpu_map__nr;
+ 		perf_cpu_map__cpu;
+ 		perf_thread_map__new_dummy;
+ 		perf_thread_map__set_pid;
+ 		perf_thread_map__comm;
+ 		perf_thread_map__get;
+ 		perf_thread_map__put;
+ 		perf_evsel__new;
+ 		perf_evsel__delete;
+ 		perf_evsel__enable;
+ 		perf_evsel__disable;
+ 		perf_evsel__init;
+ 		perf_evsel__open;
+ 		perf_evsel__close;
+ 		perf_evsel__read;
+ 		perf_evsel__cpus;
+ 		perf_evsel__threads;
+ 		perf_evlist__new;
+ 		perf_evlist__delete;
+ 		perf_evlist__init;
+ 		perf_evlist__add;
+ 		perf_evlist__remove;
+ 		perf_evlist__next;
+ 		perf_evlist__set_maps;
++>>>>>>> 0ff1a0fdf52c (libperf: Add perf_evsel__cpus()/threads() functions)
  	local:
  		*;
  };
diff --cc tools/perf/util/evsel.h
index b27935a6d36c,3cf35aa782b9..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -197,14 -191,14 +197,18 @@@ struct target
  struct thread_map;
  struct record_opts;
  
 -static inline struct perf_cpu_map *evsel__cpus(struct evsel *evsel)
 +static inline struct cpu_map *perf_evsel__cpus(struct perf_evsel *evsel)
  {
++<<<<<<< HEAD
 +	return evsel->cpus;
++=======
+ 	return perf_evsel__cpus(&evsel->core);
++>>>>>>> 0ff1a0fdf52c (libperf: Add perf_evsel__cpus()/threads() functions)
  }
  
 -static inline int perf_evsel__nr_cpus(struct evsel *evsel)
 +static inline int perf_evsel__nr_cpus(struct perf_evsel *evsel)
  {
 -	return evsel__cpus(evsel)->nr;
 +	return perf_evsel__cpus(evsel)->nr;
  }
  
  void perf_counts_values__scale(struct perf_counts_values *count,
* Unmerged path tools/perf/lib/evsel.c
* Unmerged path tools/perf/lib/include/perf/evsel.h
* Unmerged path tools/perf/lib/evsel.c
* Unmerged path tools/perf/lib/include/perf/evsel.h
* Unmerged path tools/perf/lib/libperf.map
* Unmerged path tools/perf/util/evsel.h
