bpf: Allow bpf_perf_event_read_value in all BPF programs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Song Liu <songliubraving@fb.com>
commit b80b033bedae68dae8fc703ab8a69811ce678f2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b80b033b.failed

bpf_perf_event_read_value() is NMI safe. Enable it for all BPF programs.
This can be used in fentry/fexit to profile BPF program and individual
kernel function with hardware counters.

	Signed-off-by: Song Liu <songliubraving@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20200214234146.2910011-1-songliubraving@fb.com
(cherry picked from commit b80b033bedae68dae8fc703ab8a69811ce678f2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/bpf_trace.c
diff --cc kernel/trace/bpf_trace.c
index 9935c6facc56,4ddd5ac46094..000000000000
--- a/kernel/trace/bpf_trace.c
+++ b/kernel/trace/bpf_trace.c
@@@ -756,6 -841,10 +756,13 @@@ tracing_func_proto(enum bpf_func_id fun
  #endif
  	case BPF_FUNC_send_signal:
  		return &bpf_send_signal_proto;
++<<<<<<< HEAD
++=======
+ 	case BPF_FUNC_send_signal_thread:
+ 		return &bpf_send_signal_thread_proto;
+ 	case BPF_FUNC_perf_event_read_value:
+ 		return &bpf_perf_event_read_value_proto;
++>>>>>>> b80b033bedae (bpf: Allow bpf_perf_event_read_value in all BPF programs)
  	default:
  		return NULL;
  	}
* Unmerged path kernel/trace/bpf_trace.c
