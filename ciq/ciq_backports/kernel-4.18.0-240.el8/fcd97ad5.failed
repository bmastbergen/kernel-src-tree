KVM: Add build-time error check on kvm_run size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Peter Xu <peterx@redhat.com>
commit fcd97ad58f76efcd58808941e4dd2bc6c544b9de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/fcd97ad5.failed

It's already going to reach 2400 Bytes (which is over half of page
size on 4K page archs), so maybe it's good to have this build-time
check in case it overflows when adding new fields.

	Signed-off-by: Peter Xu <peterx@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit fcd97ad58f76efcd58808941e4dd2bc6c544b9de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index 34d20843a8c0,4f3ac8b753b6..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -2725,11 -2710,19 +2725,21 @@@ static int kvm_vm_ioctl_create_vcpu(str
  		goto vcpu_decrement;
  	}
  
++<<<<<<< HEAD
 +	preempt_notifier_init(&vcpu->preempt_notifier, &kvm_preempt_ops);
++=======
+ 	BUILD_BUG_ON(sizeof(struct kvm_run) > PAGE_SIZE);
+ 	page = alloc_page(GFP_KERNEL | __GFP_ZERO);
+ 	if (!page) {
+ 		r = -ENOMEM;
+ 		goto vcpu_free;
+ 	}
+ 	vcpu->run = page_address(page);
++>>>>>>> fcd97ad58f76 (KVM: Add build-time error check on kvm_run size)
  
 -	kvm_vcpu_init(vcpu, kvm, id);
 -
 -	r = kvm_arch_vcpu_create(vcpu);
 +	r = kvm_arch_vcpu_setup(vcpu);
  	if (r)
 -		goto vcpu_free_run_page;
 +		goto vcpu_destroy;
  
  	kvm_create_vcpu_debugfs(vcpu);
  
* Unmerged path virt/kvm/kvm_main.c
