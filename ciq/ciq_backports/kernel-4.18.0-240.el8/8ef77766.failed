io_uring: fix req->work corruption

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Pavel Begunkov <asml.silence@gmail.com>
commit 8ef77766ba8694968ed4ba24311b4bacee14f235
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8ef77766.failed

req->work and req->task_work are in a union, so io_req_task_queue() screws
everything that was in work. De-union them for now.

[  704.367253] BUG: unable to handle page fault for address:
	ffffffffaf7330d0
[  704.367256] #PF: supervisor write access in kernel mode
[  704.367256] #PF: error_code(0x0003) - permissions violation
[  704.367261] CPU: 6 PID: 1654 Comm: io_wqe_worker-0 Tainted: G
I       5.8.0-rc2-00038-ge28d0bdc4863-dirty #498
[  704.367265] RIP: 0010:_raw_spin_lock+0x1e/0x36
...
[  704.367276]  __alloc_fd+0x35/0x150
[  704.367279]  __get_unused_fd_flags+0x25/0x30
[  704.367280]  io_openat2+0xcb/0x1b0
[  704.367283]  io_issue_sqe+0x36a/0x1320
[  704.367294]  io_wq_submit_work+0x58/0x160
[  704.367295]  io_worker_handle_work+0x2a3/0x430
[  704.367296]  io_wqe_worker+0x2a0/0x350
[  704.367301]  kthread+0x136/0x180
[  704.367304]  ret_from_fork+0x22/0x30

	Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 8ef77766ba8694968ed4ba24311b4bacee14f235)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/io_uring.c
diff --cc fs/io_uring.c
index 0b681a205810,dcf3ffb5ecf3..000000000000
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@@ -341,12 -654,36 +341,35 @@@ struct io_kiocb 
  	u32			result;
  	u32			sequence;
  
++<<<<<<< HEAD
 +	struct work_struct	work;
++=======
+ 	struct list_head	link_list;
+ 
+ 	struct list_head	inflight_entry;
+ 
+ 	struct percpu_ref	*fixed_file_refs;
+ 
+ 	union {
+ 		/*
+ 		 * Only commands that never go async can use the below fields,
+ 		 * obviously. Right now only IORING_OP_POLL_ADD uses them, and
+ 		 * async armed poll handlers for regular commands. The latter
+ 		 * restore the work, if needed.
+ 		 */
+ 		struct {
+ 			struct hlist_node	hash_node;
+ 			struct async_poll	*apoll;
+ 		};
+ 		struct io_wq_work	work;
+ 	};
+ 	struct callback_head	task_work;
++>>>>>>> 8ef77766ba86 (io_uring: fix req->work corruption)
  };
  
 +#define IO_PLUG_THRESHOLD		2
  #define IO_IOPOLL_BATCH			8
  
 -struct io_comp_state {
 -	unsigned int		nr;
 -	struct list_head	list;
 -	struct io_ring_ctx	*ctx;
 -};
 -
  struct io_submit_state {
  	struct blk_plug		plug;
  
* Unmerged path fs/io_uring.c
