iomap: split size and error for iomap_dio_rw ->end_io

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Matthew Bobrowski <mbobrowski@mbobrowski.org>
commit 6fe7b9901400152238e1b76198747f6716c78aad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6fe7b990.failed

Modify the calling convention for the iomap_dio_rw ->end_io() callback.
Rather than passing either dio->error or dio->size as the 'size' argument,
instead pass both the dio->error and the dio->size value separately.

In the instance that an error occurred during a write, we currently cannot
determine whether any blocks have been allocated beyond the current EOF and
data has subsequently been written to these blocks within the ->end_io()
callback. As a result, we cannot judge whether we should take the truncate
failed write path. Having both dio->error and dio->size will allow us to
perform such checks within this callback.

	Signed-off-by: Matthew Bobrowski <mbobrowski@mbobrowski.org>
[hch: minor cleanups]
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
(cherry picked from commit 6fe7b9901400152238e1b76198747f6716c78aad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/direct-io.c
#	fs/xfs/xfs_file.c
diff --cc fs/xfs/xfs_file.c
index c9c7bcb69ae3,74411296f6b5..000000000000
--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@@ -382,7 -375,7 +383,11 @@@ xfs_dio_write_end_io
  	struct inode		*inode = file_inode(iocb->ki_filp);
  	struct xfs_inode	*ip = XFS_I(inode);
  	loff_t			offset = iocb->ki_pos;
++<<<<<<< HEAD
 +	int			error = 0;
++=======
+ 	unsigned int		nofs_flag;
++>>>>>>> 6fe7b9901400 (iomap: split size and error for iomap_dio_rw ->end_io)
  
  	trace_xfs_end_io_direct_write(ip, offset, size);
  
* Unmerged path fs/iomap/direct-io.c
* Unmerged path fs/iomap/direct-io.c
* Unmerged path fs/xfs/xfs_file.c
diff --git a/include/linux/iomap.h b/include/linux/iomap.h
index 960967bb5048..a6477eb1e94a 100644
--- a/include/linux/iomap.h
+++ b/include/linux/iomap.h
@@ -179,8 +179,8 @@ sector_t iomap_bmap(struct address_space *mapping, sector_t bno,
  */
 #define IOMAP_DIO_UNWRITTEN	(1 << 0)	/* covers unwritten extent(s) */
 #define IOMAP_DIO_COW		(1 << 1)	/* covers COW extent(s) */
-typedef int (iomap_dio_end_io_t)(struct kiocb *iocb, ssize_t ret,
-		unsigned flags);
+typedef int (iomap_dio_end_io_t)(struct kiocb *iocb, ssize_t size, int error,
+				 unsigned int flags);
 ssize_t iomap_dio_rw(struct kiocb *iocb, struct iov_iter *iter,
 		const struct iomap_ops *ops, iomap_dio_end_io_t end_io);
 int iomap_dio_iopoll(struct kiocb *kiocb, bool spin);
