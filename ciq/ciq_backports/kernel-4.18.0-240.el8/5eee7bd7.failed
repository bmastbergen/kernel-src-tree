net: skbuff: disambiguate argument and member for skb_list_walk_safe helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jason A. Donenfeld <Jason@zx2c4.com>
commit 5eee7bd7e245914e4e050c413dfe864e31805207
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5eee7bd7.failed

This worked before, because we made all callers name their next pointer
"next". But in trying to be more "drop-in" ready, the silliness here is
revealed. This commit fixes the problem by making the macro argument and
the member use different names.

	Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5eee7bd7e245914e4e050c413dfe864e31805207)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
diff --cc include/linux/skbuff.h
index ed7aa7b1857e,aaf73b34f72f..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -1535,6 -1478,17 +1535,20 @@@ static inline void skb_mark_not_on_list
  	skb->next = NULL;
  }
  
++<<<<<<< HEAD
++=======
+ /* Iterate through singly-linked GSO fragments of an skb. */
+ #define skb_list_walk_safe(first, skb, next_skb)                               \
+ 	for ((skb) = (first), (next_skb) = (skb) ? (skb)->next : NULL; (skb);  \
+ 	     (skb) = (next_skb), (next_skb) = (skb) ? (skb)->next : NULL)
+ 
+ static inline void skb_list_del_init(struct sk_buff *skb)
+ {
+ 	__list_del_entry(&skb->list);
+ 	skb_mark_not_on_list(skb);
+ }
+ 
++>>>>>>> 5eee7bd7e245 (net: skbuff: disambiguate argument and member for skb_list_walk_safe helper)
  /**
   *	skb_queue_empty - check if a queue is empty
   *	@list: queue head
* Unmerged path include/linux/skbuff.h
