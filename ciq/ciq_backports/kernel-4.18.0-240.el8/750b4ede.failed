perf evlist: Rename perf_evlist__close() to evlist__close()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 750b4edeb0527414fb17b0ee2a76d2dbbd9a199d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/750b4ede.failed

Rename perf_evlist__close() to evlist__close(), so we don't have a name
clash when we add perf_evlist__close() in libperf.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-21-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 750b4edeb0527414fb17b0ee2a76d2dbbd9a199d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
#	tools/perf/util/evlist.h
diff --cc tools/perf/util/evlist.c
index 4739b7914374,67c288f467f6..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -1349,9 -1348,9 +1349,13 @@@ void perf_evlist__set_selected(struct p
  	evlist->selected = evsel;
  }
  
++<<<<<<< HEAD
 +void perf_evlist__close(struct perf_evlist *evlist)
++=======
+ void evlist__close(struct evlist *evlist)
++>>>>>>> 750b4edeb052 (perf evlist: Rename perf_evlist__close() to evlist__close())
  {
 -	struct evsel *evsel;
 +	struct perf_evsel *evsel;
  
  	evlist__for_each_entry_reverse(evlist, evsel)
  		perf_evsel__close(evsel);
diff --cc tools/perf/util/evlist.h
index 49354fe24d5f,47e9d26b6774..000000000000
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@@ -113,41 -113,41 +113,46 @@@ void __perf_evlist__reset_sample_bit(st
  #define perf_evlist__reset_sample_bit(evlist, bit) \
  	__perf_evlist__reset_sample_bit(evlist, PERF_SAMPLE_##bit)
  
 -int perf_evlist__set_tp_filter(struct evlist *evlist, const char *filter);
 -int perf_evlist__set_tp_filter_pid(struct evlist *evlist, pid_t pid);
 -int perf_evlist__set_tp_filter_pids(struct evlist *evlist, size_t npids, pid_t *pids);
 +int perf_evlist__set_tp_filter(struct perf_evlist *evlist, const char *filter);
 +int perf_evlist__set_tp_filter_pid(struct perf_evlist *evlist, pid_t pid);
 +int perf_evlist__set_tp_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t *pids);
  
 -struct evsel *
 -perf_evlist__find_tracepoint_by_id(struct evlist *evlist, int id);
 +struct perf_evsel *
 +perf_evlist__find_tracepoint_by_id(struct perf_evlist *evlist, int id);
  
 -struct evsel *
 -perf_evlist__find_tracepoint_by_name(struct evlist *evlist,
 +struct perf_evsel *
 +perf_evlist__find_tracepoint_by_name(struct perf_evlist *evlist,
  				     const char *name);
  
 -void perf_evlist__id_add(struct evlist *evlist, struct evsel *evsel,
 +void perf_evlist__id_add(struct perf_evlist *evlist, struct perf_evsel *evsel,
  			 int cpu, int thread, u64 id);
 -int perf_evlist__id_add_fd(struct evlist *evlist,
 -			   struct evsel *evsel,
 +int perf_evlist__id_add_fd(struct perf_evlist *evlist,
 +			   struct perf_evsel *evsel,
  			   int cpu, int thread, int fd);
  
 -int perf_evlist__add_pollfd(struct evlist *evlist, int fd);
 -int perf_evlist__alloc_pollfd(struct evlist *evlist);
 -int perf_evlist__filter_pollfd(struct evlist *evlist, short revents_and_mask);
 +int perf_evlist__add_pollfd(struct perf_evlist *evlist, int fd);
 +int perf_evlist__alloc_pollfd(struct perf_evlist *evlist);
 +int perf_evlist__filter_pollfd(struct perf_evlist *evlist, short revents_and_mask);
  
 -int perf_evlist__poll(struct evlist *evlist, int timeout);
 +int perf_evlist__poll(struct perf_evlist *evlist, int timeout);
  
 -struct evsel *perf_evlist__id2evsel(struct evlist *evlist, u64 id);
 -struct evsel *perf_evlist__id2evsel_strict(struct evlist *evlist,
 +struct perf_evsel *perf_evlist__id2evsel(struct perf_evlist *evlist, u64 id);
 +struct perf_evsel *perf_evlist__id2evsel_strict(struct perf_evlist *evlist,
  						u64 id);
  
 -struct perf_sample_id *perf_evlist__id2sid(struct evlist *evlist, u64 id);
 +struct perf_sample_id *perf_evlist__id2sid(struct perf_evlist *evlist, u64 id);
  
 -void perf_evlist__toggle_bkw_mmap(struct evlist *evlist, enum bkw_mmap_state state);
 +void perf_evlist__toggle_bkw_mmap(struct perf_evlist *evlist, enum bkw_mmap_state state);
  
 -void perf_evlist__mmap_consume(struct evlist *evlist, int idx);
 +void perf_evlist__mmap_consume(struct perf_evlist *evlist, int idx);
  
++<<<<<<< HEAD
 +int perf_evlist__open(struct perf_evlist *evlist);
 +void perf_evlist__close(struct perf_evlist *evlist);
++=======
+ int evlist__open(struct evlist *evlist);
+ void evlist__close(struct evlist *evlist);
++>>>>>>> 750b4edeb052 (perf evlist: Rename perf_evlist__close() to evlist__close())
  
  struct callchain_param;
  
diff --git a/tools/perf/builtin-kvm.c b/tools/perf/builtin-kvm.c
index 02e719faa488..083e60311ca1 100644
--- a/tools/perf/builtin-kvm.c
+++ b/tools/perf/builtin-kvm.c
@@ -1059,7 +1059,7 @@ static int kvm_live_open_events(struct perf_kvm_stat *kvm)
 	if (perf_evlist__mmap(evlist, kvm->opts.mmap_pages) < 0) {
 		ui__error("Failed to mmap the events: %s\n",
 			  str_error_r(errno, sbuf, sizeof(sbuf)));
-		perf_evlist__close(evlist);
+		evlist__close(evlist);
 		goto out;
 	}
 
diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index b71c4390d333..acd725d9a614 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -615,7 +615,7 @@ static int __run_perf_stat(int argc, const char **argv, int run_idx)
 	 * later the evsel_list will be closed after.
 	 */
 	if (!STAT_RECORD)
-		perf_evlist__close(evsel_list);
+		evlist__close(evsel_list);
 
 	return WEXITSTATUS(status);
 }
@@ -2005,7 +2005,7 @@ int cmd_stat(int argc, const char **argv)
 			perf_session__write_header(perf_stat.session, evsel_list, fd, true);
 		}
 
-		perf_evlist__close(evsel_list);
+		evlist__close(evsel_list);
 		perf_session__delete(perf_stat.session);
 	}
 
* Unmerged path tools/perf/util/evlist.c
* Unmerged path tools/perf/util/evlist.h
