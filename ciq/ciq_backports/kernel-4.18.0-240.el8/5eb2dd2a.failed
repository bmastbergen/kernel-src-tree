perf evsel: Rename perf_evsel__delete() to evsel__delete()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 5eb2dd2ade8354dcbe4cef54cd1719622af8f2dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5eb2dd2a.failed

Remame perf_evsel__delete() to evsel__delete(), so we don't have a name
clash when we add perf_evsel__delete() in libperf.

Also renaming perf_evsel__delete_priv() to evsel__delete_priv().

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-11-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 5eb2dd2ade8354dcbe4cef54cd1719622af8f2dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
#	tools/perf/util/evsel.c
#	tools/perf/util/evsel.h
diff --cc tools/perf/builtin-trace.c
index 9f9c869e0f26,0f7d1859a2d1..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -276,13 -274,13 +276,17 @@@ static int perf_evsel__init_tp_ptr_fiel
  	({ struct syscall_tp *sc = evsel->priv;\
  	   perf_evsel__init_tp_ptr_field(evsel, &sc->name, #name); })
  
++<<<<<<< HEAD
 +static void perf_evsel__delete_priv(struct perf_evsel *evsel)
++=======
+ static void evsel__delete_priv(struct evsel *evsel)
++>>>>>>> 5eb2dd2ade83 (perf evsel: Rename perf_evsel__delete() to evsel__delete())
  {
  	zfree(&evsel->priv);
- 	perf_evsel__delete(evsel);
+ 	evsel__delete(evsel);
  }
  
 -static int perf_evsel__init_syscall_tp(struct evsel *evsel)
 +static int perf_evsel__init_syscall_tp(struct perf_evsel *evsel)
  {
  	struct syscall_tp *sc = evsel->priv = malloc(sizeof(struct syscall_tp));
  
diff --cc tools/perf/util/evsel.c
index e99257f738ba,de379b63f1ce..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1334,7 -1333,7 +1334,11 @@@ void perf_evsel__exit(struct perf_evse
  	perf_evsel__object.fini(evsel);
  }
  
++<<<<<<< HEAD
 +void perf_evsel__delete(struct perf_evsel *evsel)
++=======
+ void evsel__delete(struct evsel *evsel)
++>>>>>>> 5eb2dd2ade83 (perf evsel: Rename perf_evsel__delete() to evsel__delete())
  {
  	perf_evsel__exit(evsel);
  	free(evsel);
diff --cc tools/perf/util/evsel.h
index b27935a6d36c,20b4e31b63a9..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -238,10 -238,9 +238,16 @@@ struct perf_evsel *perf_evsel__new_cycl
  
  struct tep_event *event_format__new(const char *sys, const char *name);
  
++<<<<<<< HEAD
 +void perf_evsel__init(struct perf_evsel *evsel,
 +		      struct perf_event_attr *attr, int idx);
 +void perf_evsel__exit(struct perf_evsel *evsel);
 +void perf_evsel__delete(struct perf_evsel *evsel);
++=======
+ void evsel__init(struct evsel *evsel, struct perf_event_attr *attr, int idx);
+ void perf_evsel__exit(struct evsel *evsel);
+ void evsel__delete(struct evsel *evsel);
++>>>>>>> 5eb2dd2ade83 (perf evsel: Rename perf_evsel__delete() to evsel__delete())
  
  struct callchain_param;
  
diff --git a/tools/perf/builtin-inject.c b/tools/perf/builtin-inject.c
index b82ad14f3fd0..d8cd80e4a919 100644
--- a/tools/perf/builtin-inject.c
+++ b/tools/perf/builtin-inject.c
@@ -624,7 +624,7 @@ static void strip_fini(struct perf_inject *inject)
 		    ok_to_remove(evlist, evsel)) {
 			pr_debug("Deleting %s\n", perf_evsel__name(evsel));
 			perf_evlist__remove(evlist, evsel);
-			perf_evsel__delete(evsel);
+			evsel__delete(evsel);
 		}
 	}
 }
@@ -726,7 +726,7 @@ static int __cmd_inject(struct perf_inject *inject)
 				pr_debug("Deleting %s\n",
 					 perf_evsel__name(evsel));
 				perf_evlist__remove(session->evlist, evsel);
-				perf_evsel__delete(evsel);
+				evsel__delete(evsel);
 			}
 			if (inject->strip)
 				strip_fini(inject);
* Unmerged path tools/perf/builtin-trace.c
diff --git a/tools/perf/tests/evsel-tp-sched.c b/tools/perf/tests/evsel-tp-sched.c
index 71f60c0f9faa..5309e75a0486 100644
--- a/tools/perf/tests/evsel-tp-sched.c
+++ b/tools/perf/tests/evsel-tp-sched.c
@@ -64,7 +64,7 @@ int test__perf_evsel__tp_sched_test(struct test *test __maybe_unused, int subtes
 	if (perf_evsel__test_field(evsel, "next_prio", 4, true))
 		ret = -1;
 
-	perf_evsel__delete(evsel);
+	evsel__delete(evsel);
 
 	evsel = perf_evsel__newtp("sched", "sched_wakeup");
 
@@ -85,6 +85,6 @@ int test__perf_evsel__tp_sched_test(struct test *test __maybe_unused, int subtes
 	if (perf_evsel__test_field(evsel, "target_cpu", 4, true))
 		ret = -1;
 
-	perf_evsel__delete(evsel);
+	evsel__delete(evsel);
 	return ret;
 }
diff --git a/tools/perf/tests/openat-syscall-all-cpus.c b/tools/perf/tests/openat-syscall-all-cpus.c
index 493ecb611540..402be68ad60c 100644
--- a/tools/perf/tests/openat-syscall-all-cpus.c
+++ b/tools/perf/tests/openat-syscall-all-cpus.c
@@ -118,7 +118,7 @@ int test__openat_syscall_event_on_all_cpus(struct test *test __maybe_unused, int
 out_close_fd:
 	perf_evsel__close_fd(evsel);
 out_evsel_delete:
-	perf_evsel__delete(evsel);
+	evsel__delete(evsel);
 out_cpu_map_delete:
 	cpu_map__put(cpus);
 out_thread_map_delete:
diff --git a/tools/perf/tests/openat-syscall.c b/tools/perf/tests/openat-syscall.c
index 00cd63f90b92..1ec4a2ffa6cc 100644
--- a/tools/perf/tests/openat-syscall.c
+++ b/tools/perf/tests/openat-syscall.c
@@ -59,7 +59,7 @@ int test__openat_syscall_event(struct test *test __maybe_unused, int subtest __m
 out_close_fd:
 	perf_evsel__close_fd(evsel);
 out_evsel_delete:
-	perf_evsel__delete(evsel);
+	evsel__delete(evsel);
 out_thread_map_delete:
 	thread_map__put(threads);
 	return err;
diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 4739b7914374..a5de6c730f32 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -122,7 +122,7 @@ static void perf_evlist__purge(struct perf_evlist *evlist)
 	evlist__for_each_entry_safe(evlist, n, pos) {
 		list_del_init(&pos->node);
 		pos->evlist = NULL;
-		perf_evsel__delete(pos);
+		evsel__delete(pos);
 	}
 
 	evlist->nr_entries = 0;
@@ -278,7 +278,7 @@ static int perf_evlist__add_attrs(struct perf_evlist *evlist,
 
 out_delete_partial_list:
 	__evlist__for_each_entry_safe(&head, n, evsel)
-		perf_evsel__delete(evsel);
+		evsel__delete(evsel);
 	return -1;
 }
 
* Unmerged path tools/perf/util/evsel.c
* Unmerged path tools/perf/util/evsel.h
diff --git a/tools/perf/util/parse-events.c b/tools/perf/util/parse-events.c
index 0540303e5e97..cb511a5d45ce 100644
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@ -662,7 +662,7 @@ static int add_bpf_event(const char *group, const char *event, int fd, struct bp
 			 group, event);
 		list_for_each_entry_safe(evsel, tmp, &new_evsels, node) {
 			list_del_init(&evsel->node);
-			perf_evsel__delete(evsel);
+			evsel__delete(evsel);
 		}
 		return err;
 	}
@@ -2334,7 +2334,7 @@ static bool is_event_supported(u8 type, unsigned config)
 			evsel->attr.exclude_kernel = 1;
 			ret = perf_evsel__open(evsel, NULL, tmap) >= 0;
 		}
-		perf_evsel__delete(evsel);
+		evsel__delete(evsel);
 	}
 
 	thread_map__put(tmap);
