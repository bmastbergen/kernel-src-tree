virtio_ring: fix unmap of indirect descriptors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Matthias Lange <matthias.lange@kernkonzept.com>
commit cf8f1696709ad5bb3138ed8c771c2eb98950cd8a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/cf8f1696.failed

The function virtqueue_add_split() DMA-maps the scatterlist buffers. In
case a mapping error occurs the already mapped buffers must be unmapped.
This happens by jumping to the 'unmap_release' label.

In case of indirect descriptors the release is wrong and may leak kernel
memory. Because the implementation assumes that the head descriptor is
already mapped it starts iterating over the descriptor list starting
from the head descriptor. However for indirect descriptors the head
descriptor is never mapped in case of an error.

The fix is to initialize the start index with zero in case of indirect
descriptors and use the 'desc' pointer directly for iterating over the
descriptor chain.

	Signed-off-by: Matthias Lange <matthias.lange@kernkonzept.com>
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit cf8f1696709ad5bb3138ed8c771c2eb98950cd8a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio_ring.c
diff --cc drivers/virtio/virtio_ring.c
index c503baeff4ee,bdc08244a648..000000000000
--- a/drivers/virtio/virtio_ring.c
+++ b/drivers/virtio/virtio_ring.c
@@@ -434,8 -575,8 +438,13 @@@ unmap_release
  	for (n = 0; n < total_sg; n++) {
  		if (i == err_idx)
  			break;
++<<<<<<< HEAD
 +		vring_unmap_one(vq, &desc[i]);
 +		i = virtio16_to_cpu(_vq->vdev, vq->vring.desc[i].next);
++=======
+ 		vring_unmap_one_split(vq, &desc[i]);
+ 		i = virtio16_to_cpu(_vq->vdev, desc[i].next);
++>>>>>>> cf8f1696709a (virtio_ring: fix unmap of indirect descriptors)
  	}
  
  	if (indirect)
* Unmerged path drivers/virtio/virtio_ring.c
