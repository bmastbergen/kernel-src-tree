sched/rt, Kconfig: Introduce CONFIG_PREEMPT_RT

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit a50a3f4b6a313dc76912bd4ad3b8b4f4b479c801
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a50a3f4b.failed

Add a new entry to the preemption menu which enables the real-time support
for the kernel. The choice is only enabled when an architecture supports
it.

It selects PREEMPT as the RT features depend on it. To achieve that the
existing PREEMPT choice is renamed to PREEMPT_LL which select PREEMPT as
well.

No functional change.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Paul E. McKenney <paulmck@linux.ibm.com>
	Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
	Acked-by: Clark Williams <williams@redhat.com>
	Acked-by: Daniel Bristot de Oliveira <bristot@redhat.com>
	Acked-by: Frederic Weisbecker <frederic@kernel.org>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Marc Zyngier <marc.zyngier@arm.com>
	Acked-by: Daniel Wagner <wagi@monom.org>
	Acked-by: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
	Acked-by: Julia Cartwright <julia@ni.com>
	Acked-by: Tom Zanussi <tom.zanussi@linux.intel.com>
	Acked-by: Gratian Crisan <gratian.crisan@ni.com>
	Acked-by: Sebastian Siewior <bigeasy@linutronix.de>
	Cc: Andrew Morton <akpm@linuxfoundation.org>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Lukas Bulwahn <lukas.bulwahn@gmail.com>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Tejun Heo <tj@kernel.org>
Link: http://lkml.kernel.org/r/alpine.DEB.2.21.1907172200190.1778@nanos.tec.linutronix.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit a50a3f4b6a313dc76912bd4ad3b8b4f4b479c801)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/Kconfig
#	kernel/Kconfig.preempt
diff --cc arch/Kconfig
index ed2a96a672b4,ada51f36bd5d..000000000000
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@@ -896,6 -798,12 +896,15 @@@ config COMPAT_32BIT_TIM
  config ARCH_NO_COHERENT_DMA_MMAP
  	bool
  
++<<<<<<< HEAD
++=======
+ config ARCH_NO_PREEMPT
+ 	bool
+ 
+ config ARCH_SUPPORTS_RT
+ 	bool
+ 
++>>>>>>> a50a3f4b6a31 (sched/rt, Kconfig: Introduce CONFIG_PREEMPT_RT)
  config CPU_NO_EFFICIENT_FFS
  	def_bool n
  
diff --cc kernel/Kconfig.preempt
index 3f9c97419f02,fc020c09b7e8..000000000000
--- a/kernel/Kconfig.preempt
+++ b/kernel/Kconfig.preempt
@@@ -33,9 -35,10 +33,14 @@@ config PREEMPT_VOLUNTAR
  
  	  Select this if you are building a kernel for a desktop system.
  
- config PREEMPT
+ config PREEMPT_LL
  	bool "Preemptible Kernel (Low-Latency Desktop)"
++<<<<<<< HEAD
 +	select PREEMPT_COUNT
++=======
+ 	depends on !ARCH_NO_PREEMPT
+ 	select PREEMPT
++>>>>>>> a50a3f4b6a31 (sched/rt, Kconfig: Introduce CONFIG_PREEMPT_RT)
  	select UNINLINE_SPIN_UNLOCK if !ARCH_INLINE_SPIN_UNLOCK
  	help
  	  This option reduces the latency of the kernel by making
@@@ -55,4 -75,8 +77,12 @@@ config PREEMPT_R
  endchoice
  
  config PREEMPT_COUNT
-        bool
++<<<<<<< HEAD
++       bool
++=======
+        bool
+ 
+ config PREEMPT
+        bool
+        select PREEMPT_COUNT
++>>>>>>> a50a3f4b6a31 (sched/rt, Kconfig: Introduce CONFIG_PREEMPT_RT)
* Unmerged path arch/Kconfig
* Unmerged path kernel/Kconfig.preempt
