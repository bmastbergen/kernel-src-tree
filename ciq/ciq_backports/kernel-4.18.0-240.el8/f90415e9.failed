selftests/bpf: Make a copy of subtest name

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit f90415e9600c5227131531c0ed11514a2d3bbe62
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/f90415e9.failed

test_progs never created a copy of subtest name, rather just stored
pointer to whatever string test provided. This is bad as that string
might be freed or modified by the end of subtest. Fix this by creating
a copy of given subtest name when subtest starts.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20191021033902.3856966-6-andriin@fb.com
(cherry picked from commit f90415e9600c5227131531c0ed11514a2d3bbe62)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/test_progs.c
diff --cc tools/testing/selftests/bpf/test_progs.c
index c4ab72554583,a05a807840c0..000000000000
--- a/tools/testing/selftests/bpf/test_progs.c
+++ b/tools/testing/selftests/bpf/test_progs.c
@@@ -22,8 -18,9 +22,8 @@@ struct prog_test_def 
  	int error_cnt;
  	int skip_cnt;
  	bool tested;
 -	bool need_cgroup_cleanup;
  
- 	const char *subtest_name;
+ 	char *subtest_name;
  	int subtest_num;
  
  	/* store counts before subtest started */
@@@ -108,9 -105,14 +109,20 @@@ bool test__start_subtest(const char *na
  	if (!should_run(&env.subtest_selector, test->subtest_num, name))
  		return false;
  
++<<<<<<< HEAD
 +	test->subtest_name = name;
 +	env.test->old_pass_cnt = pass_cnt;
 +	env.test->old_error_cnt = error_cnt;
++=======
+ 	test->subtest_name = strdup(name);
+ 	if (!test->subtest_name) {
+ 		fprintf(env.stderr,
+ 			"Subtest #%d: failed to copy subtest name!\n",
+ 			test->subtest_num);
+ 		return false;
+ 	}
+ 	env.test->old_error_cnt = env.test->error_cnt;
++>>>>>>> f90415e9600c (selftests/bpf: Make a copy of subtest name)
  
  	return true;
  }
* Unmerged path tools/testing/selftests/bpf/test_progs.c
