ASoC: SOF: (cosmetic) use for_each_pcm_streams() in sof_dai_load()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: (cosmetic) use for_each_pcm_streams() in sof_dai_load() (Jaroslav Kysela) [1797509]
Rebuild_FUZZ: 95.65%
commit-author Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
commit c688cf1d3a2cc1bca5737e7849325b3ac8e69a41
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c688cf1d.failed

Use for_each_pcm_streams() to enumerate streams in sof_dai_load()
instead of doing that manually.

	Signed-off-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/20200325211233.27394-3-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit c688cf1d3a2cc1bca5737e7849325b3ac8e69a41)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/topology.c
diff --cc sound/soc/sof/topology.c
index 2d18c9e96d0f,54437caf9488..000000000000
--- a/sound/soc/sof/topology.c
+++ b/sound/soc/sof/topology.c
@@@ -2429,12 -2459,13 +2429,19 @@@ static int sof_dai_load(struct snd_soc_
  	if (!spcm)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	spcm->sdev = sdev;
 +	spcm->stream[SNDRV_PCM_STREAM_PLAYBACK].comp_id = COMP_ID_UNASSIGNED;
 +	spcm->stream[SNDRV_PCM_STREAM_CAPTURE].comp_id = COMP_ID_UNASSIGNED;
++=======
+ 	spcm->scomp = scomp;
+ 
+ 	for_each_pcm_streams(stream)
+ 		spcm->stream[stream].comp_id = COMP_ID_UNASSIGNED;
++>>>>>>> c688cf1d3a2c (ASoC: SOF: (cosmetic) use for_each_pcm_streams() in sof_dai_load())
  
  	spcm->pcm = *pcm;
 -	dev_dbg(scomp->dev, "tplg: load pcm %s\n", pcm->dai_name);
 +	dev_dbg(sdev->dev, "tplg: load pcm %s\n", pcm->dai_name);
  
  	dai_drv->dobj.private = spcm;
  	list_add(&spcm->list, &sdev->pcm_list);
@@@ -2452,8 -2483,10 +2459,15 @@@
  	if (!spcm->pcm.playback)
  		goto capture;
  
++<<<<<<< HEAD
 +	dev_vdbg(sdev->dev, "tplg: pcm %s stream tokens: playback d0i3:%d\n",
 +		 spcm->pcm.pcm_name, spcm->stream[0].d0i3_compatible);
++=======
+ 	stream = SNDRV_PCM_STREAM_PLAYBACK;
+ 
+ 	dev_vdbg(scomp->dev, "tplg: pcm %s stream tokens: playback d0i3:%d\n",
+ 		 spcm->pcm.pcm_name, spcm->stream[stream].d0i3_compatible);
++>>>>>>> c688cf1d3a2c (ASoC: SOF: (cosmetic) use for_each_pcm_streams() in sof_dai_load())
  
  	caps = &spcm->pcm.caps[stream];
  
@@@ -2482,8 -2515,8 +2496,13 @@@ capture
  	if (!spcm->pcm.capture)
  		return ret;
  
++<<<<<<< HEAD
 +	dev_vdbg(sdev->dev, "tplg: pcm %s stream tokens: capture d0i3:%d\n",
 +		 spcm->pcm.pcm_name, spcm->stream[1].d0i3_compatible);
++=======
+ 	dev_vdbg(scomp->dev, "tplg: pcm %s stream tokens: capture d0i3:%d\n",
+ 		 spcm->pcm.pcm_name, spcm->stream[stream].d0i3_compatible);
++>>>>>>> c688cf1d3a2c (ASoC: SOF: (cosmetic) use for_each_pcm_streams() in sof_dai_load())
  
  	caps = &spcm->pcm.caps[stream];
  
* Unmerged path sound/soc/sof/topology.c
