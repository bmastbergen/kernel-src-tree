null_blk: clean up report zones

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 7fc8fb51a143a7efc9b199179e43a6d28f69b1f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7fc8fb51.failed

Make the instance name match the method name and define the name to NULL
instead of providing an inline stub, which is rather pointless for a
method call.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 7fc8fb51a143a7efc9b199179e43a6d28f69b1f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/null_blk.h
#	drivers/block/null_blk_zoned.c
diff --cc drivers/block/null_blk.h
index 0a5e75e1db62,9bf56fbab091..000000000000
--- a/drivers/block/null_blk.h
+++ b/drivers/block/null_blk.h
@@@ -91,12 -91,13 +91,22 @@@ struct nullb 
  #ifdef CONFIG_BLK_DEV_ZONED
  int null_zone_init(struct nullb_device *dev);
  void null_zone_exit(struct nullb_device *dev);
++<<<<<<< HEAD
 +int null_zone_report(struct gendisk *disk, sector_t sector,
 +		     struct blk_zone *zones, unsigned int *nr_zones,
 +		     gfp_t gfp_mask);
 +void null_zone_write(struct nullb_cmd *cmd, sector_t sector,
 +			unsigned int nr_sectors);
 +void null_zone_reset(struct nullb_cmd *cmd, sector_t sector);
++=======
+ int null_report_zones(struct gendisk *disk, sector_t sector,
+ 		      struct blk_zone *zones, unsigned int *nr_zones);
+ blk_status_t null_handle_zoned(struct nullb_cmd *cmd,
+ 				enum req_opf op, sector_t sector,
+ 				sector_t nr_sectors);
+ size_t null_zone_valid_read_len(struct nullb *nullb,
+ 				sector_t sector, unsigned int len);
++>>>>>>> 7fc8fb51a143 (null_blk: clean up report zones)
  #else
  static inline int null_zone_init(struct nullb_device *dev)
  {
@@@ -104,16 -105,18 +114,26 @@@
  	return -EINVAL;
  }
  static inline void null_zone_exit(struct nullb_device *dev) {}
++<<<<<<< HEAD
 +static inline int null_zone_report(struct gendisk *disk, sector_t sector,
 +				   struct blk_zone *zones,
 +				   unsigned int *nr_zones, gfp_t gfp_mask)
 +{
 +	return -EOPNOTSUPP;
 +}
 +static inline void null_zone_write(struct nullb_cmd *cmd, sector_t sector,
 +				   unsigned int nr_sectors)
++=======
+ static inline blk_status_t null_handle_zoned(struct nullb_cmd *cmd,
+ 					     enum req_opf op, sector_t sector,
+ 					     sector_t nr_sectors)
++>>>>>>> 7fc8fb51a143 (null_blk: clean up report zones)
  {
 -	return BLK_STS_NOTSUPP;
 -}
 -static inline size_t null_zone_valid_read_len(struct nullb *nullb,
 -					      sector_t sector,
 -					      unsigned int len)
 -{
 -	return len;
  }
++<<<<<<< HEAD
 +static inline void null_zone_reset(struct nullb_cmd *cmd, sector_t sector) {}
++=======
+ #define null_report_zones	NULL
++>>>>>>> 7fc8fb51a143 (null_blk: clean up report zones)
  #endif /* CONFIG_BLK_DEV_ZONED */
  #endif /* __NULL_BLK_H */
diff --cc drivers/block/null_blk_zoned.c
index 176ae5c83b71,00696f16664b..000000000000
--- a/drivers/block/null_blk_zoned.c
+++ b/drivers/block/null_blk_zoned.c
@@@ -66,9 -66,8 +66,14 @@@ void null_zone_exit(struct nullb_devic
  	kvfree(dev->zones);
  }
  
++<<<<<<< HEAD
 +int null_zone_report(struct gendisk *disk, sector_t sector,
 +		     struct blk_zone *zones, unsigned int *nr_zones,
 +		     gfp_t gfp_mask)
++=======
+ int null_report_zones(struct gendisk *disk, sector_t sector,
+ 		      struct blk_zone *zones, unsigned int *nr_zones)
++>>>>>>> 7fc8fb51a143 (null_blk: clean up report zones)
  {
  	struct nullb *nullb = disk->private_data;
  	struct nullb_device *dev = nullb->dev;
* Unmerged path drivers/block/null_blk.h
diff --git a/drivers/block/null_blk_main.c b/drivers/block/null_blk_main.c
index 37a5b5fa8452..60a6cbc9a332 100644
--- a/drivers/block/null_blk_main.c
+++ b/drivers/block/null_blk_main.c
@@ -1450,7 +1450,7 @@ static void null_config_discard(struct nullb *nullb)
 
 static const struct block_device_operations null_ops = {
 	.owner		= THIS_MODULE,
-	.report_zones	= null_zone_report,
+	.report_zones	= null_report_zones,
 };
 
 static void null_init_queue(struct nullb *nullb, struct nullb_queue *nq)
* Unmerged path drivers/block/null_blk_zoned.c
