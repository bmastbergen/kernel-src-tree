nvme-tcp: Set SO_PRIORITY for all host sockets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Wunderlich, Mark <mark.wunderlich@intel.com>
commit 9912ade355902adb9dacbec640fac23c4e73019d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9912ade3.failed

Enable ability to associate all sockets related to NVMf TCP traffic
to a priority group that will perform optimized network processing for
this traffic class. Maintain initial default behavior of using priority
of zero.

	Signed-off-by: Kiran Patil <kiran.patil@intel.com>
	Signed-off-by: Mark Wunderlich <mark.wunderlich@intel.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Keith Busch <kbusch@kernel.org>
(cherry picked from commit 9912ade355902adb9dacbec640fac23c4e73019d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/tcp.c
diff --cc drivers/nvme/host/tcp.c
index ce12015d2939,e384239af880..000000000000
--- a/drivers/nvme/host/tcp.c
+++ b/drivers/nvme/host/tcp.c
@@@ -1306,6 -1319,29 +1316,32 @@@ static int nvme_tcp_alloc_queue(struct 
  		goto err_sock;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (so_priority > 0) {
+ 		ret = kernel_setsockopt(queue->sock, SOL_SOCKET, SO_PRIORITY,
+ 				(char *)&so_priority, sizeof(so_priority));
+ 		if (ret) {
+ 			dev_err(ctrl->ctrl.device,
+ 				"failed to set SO_PRIORITY sock opt, ret %d\n",
+ 				ret);
+ 			goto err_sock;
+ 		}
+ 	}
+ 
+ 	/* Set socket type of service */
+ 	if (nctrl->opts->tos >= 0) {
+ 		opt = nctrl->opts->tos;
+ 		ret = kernel_setsockopt(queue->sock, SOL_IP, IP_TOS,
+ 				(char *)&opt, sizeof(opt));
+ 		if (ret) {
+ 			dev_err(nctrl->device,
+ 				"failed to set IP_TOS sock opt %d\n", ret);
+ 			goto err_sock;
+ 		}
+ 	}
+ 
++>>>>>>> 9912ade35590 (nvme-tcp: Set SO_PRIORITY for all host sockets)
  	queue->sock->sk->sk_allocation = GFP_ATOMIC;
  	if (!qid)
  		n = 0;
* Unmerged path drivers/nvme/host/tcp.c
