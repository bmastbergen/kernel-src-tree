tcp: repair: fix TCP_QUEUE_SEQ implementation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 6cd6cbf593bfa3ae6fc3ed34ac21da4d35045425
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6cd6cbf5.failed

When application uses TCP_QUEUE_SEQ socket option to
change tp->rcv_next, we must also update tp->copied_seq.

Otherwise, stuff relying on tcp_inq() being precise can
eventually be confused.

For example, tcp_zerocopy_receive() might crash because
it does not expect tcp_recv_skb() to return NULL.

We could add tests in various places to fix the issue,
or simply make sure tcp_inq() wont return a random value,
and leave fast path as it is.

Note that this fixes ioctl(fd, SIOCINQ, &val) at the same
time.

Fixes: ee9952831cfd ("tcp: Initial repair mode")
Fixes: 05255b823a61 ("tcp: add TCP_ZEROCOPY_RECEIVE support for zerocopy receive")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reported-by: syzbot <syzkaller@googlegroups.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6cd6cbf593bfa3ae6fc3ed34ac21da4d35045425)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index 12379abe1951,dc77c303e6f7..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -2880,9 -2947,11 +2880,17 @@@ static int do_tcp_setsockopt(struct soc
  		if (sk->sk_state != TCP_CLOSE)
  			err = -EPERM;
  		else if (tp->repair_queue == TCP_SEND_QUEUE)
++<<<<<<< HEAD
 +			tp->write_seq = val;
 +		else if (tp->repair_queue == TCP_RECV_QUEUE)
 +			tp->rcv_nxt = val;
++=======
+ 			WRITE_ONCE(tp->write_seq, val);
+ 		else if (tp->repair_queue == TCP_RECV_QUEUE) {
+ 			WRITE_ONCE(tp->rcv_nxt, val);
+ 			WRITE_ONCE(tp->copied_seq, val);
+ 		}
++>>>>>>> 6cd6cbf593bf (tcp: repair: fix TCP_QUEUE_SEQ implementation)
  		else
  			err = -EINVAL;
  		break;
* Unmerged path net/ipv4/tcp.c
