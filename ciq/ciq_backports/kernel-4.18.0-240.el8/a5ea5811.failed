blk-mq: move the call to blk_queue_enter_live out of blk_mq_get_request

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit a5ea5811058ddb91da604afe77acd5ff29babe29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a5ea5811.failed

Move the blk_queue_enter_live calls into the callers, where they can
successively be cleaned up.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit a5ea5811058ddb91da604afe77acd5ff29babe29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 33ede79f5eb3,b7e06673a30b..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -335,8 -340,12 +335,15 @@@ static struct request *blk_mq_get_reque
  	struct request *rq;
  	unsigned int tag;
  	bool clear_ctx_on_error = false;
 -	u64 alloc_time_ns = 0;
  
++<<<<<<< HEAD
 +	blk_queue_enter_live(q);
++=======
+ 	/* alloc_time includes depth and tag waits */
+ 	if (blk_queue_rq_alloc_time(q))
+ 		alloc_time_ns = ktime_get_ns();
+ 
++>>>>>>> a5ea5811058d (blk-mq: move the call to blk_queue_enter_live out of blk_mq_get_request)
  	data->q = q;
  	if (likely(!data->ctx)) {
  		data->ctx = blk_mq_get_ctx(q);
* Unmerged path block/blk-mq.c
