EDAC/amd64: Save max number of controllers to family type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Yazen Ghannam <yazen.ghannam@amd.com>
commit 5e4c55276ae8758f5789722b384bb2ab3de3a24f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5e4c5527.failed

The maximum number of memory controllers is fixed within a family/model
group. In most cases, this has been fixed at 2, but some systems may
have up to 8.

The struct amd64_family_type already contains family/model-specific
information, and this can be used rather than adding model checks to
various functions.

Create a new field in struct amd64_family_type for max_mcs.
Set this when setting other family type information, and use this when
needing the maximum number of memory controllers possible for a system.

	Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: "linux-edac@vger.kernel.org" <linux-edac@vger.kernel.org>
	Cc: James Morse <james.morse@arm.com>
	Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
	Cc: Robert Richter <rrichter@marvell.com>
	Cc: Tony Luck <tony.luck@intel.com>
Link: https://lkml.kernel.org/r/20191106012448.243970-4-Yazen.Ghannam@amd.com
(cherry picked from commit 5e4c55276ae8758f5789722b384bb2ab3de3a24f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/amd64_edac.c
diff --cc drivers/edac/amd64_edac.c
index 2ddde0ed0a89,110ed0d27998..000000000000
--- a/drivers/edac/amd64_edac.c
+++ b/drivers/edac/amd64_edac.c
@@@ -2298,6 -2306,16 +2303,19 @@@ static struct amd64_family_type family_
  			.dbam_to_cs		= f17_addr_mask_to_cs_size,
  		}
  	},
++<<<<<<< HEAD
++=======
+ 	[F17_M10H_CPUS] = {
+ 		.ctl_name = "F17h_M10h",
+ 		.f0_id = PCI_DEVICE_ID_AMD_17H_M10H_DF_F0,
+ 		.f6_id = PCI_DEVICE_ID_AMD_17H_M10H_DF_F6,
+ 		.max_mcs = 2,
+ 		.ops = {
+ 			.early_channel_count	= f17_early_channel_count,
+ 			.dbam_to_cs		= f17_addr_mask_to_cs_size,
+ 		}
+ 	},
++>>>>>>> 5e4c55276ae8 (EDAC/amd64: Save max number of controllers to family type)
  	[F17_M30H_CPUS] = {
  		.ctl_name = "F17h_M30h",
  		.f0_id = PCI_DEVICE_ID_AMD_17H_M30H_DF_F0,
@@@ -2307,10 -2326,11 +2326,18 @@@
  			.dbam_to_cs		= f17_addr_mask_to_cs_size,
  		}
  	},
++<<<<<<< HEAD
 +	[F17_M10H_CPUS] = {
 +		.ctl_name = "F17h_M10h",
 +		.f0_id = PCI_DEVICE_ID_AMD_17H_M10H_DF_F0,
 +		.f6_id = PCI_DEVICE_ID_AMD_17H_M10H_DF_F6,
++=======
+ 	[F17_M70H_CPUS] = {
+ 		.ctl_name = "F17h_M70h",
+ 		.f0_id = PCI_DEVICE_ID_AMD_17H_M70H_DF_F0,
+ 		.f6_id = PCI_DEVICE_ID_AMD_17H_M70H_DF_F6,
+ 		.max_mcs = 2,
++>>>>>>> 5e4c55276ae8 (EDAC/amd64: Save max number of controllers to family type)
  		.ops = {
  			.early_channel_count	= f17_early_channel_count,
  			.dbam_to_cs		= f17_addr_mask_to_cs_size,
* Unmerged path drivers/edac/amd64_edac.c
diff --git a/drivers/edac/amd64_edac.h b/drivers/edac/amd64_edac.h
index 8addc4d95577..fad49681e4b9 100644
--- a/drivers/edac/amd64_edac.h
+++ b/drivers/edac/amd64_edac.h
@@ -476,6 +476,8 @@ struct low_ops {
 struct amd64_family_type {
 	const char *ctl_name;
 	u16 f0_id, f1_id, f2_id, f6_id;
+	/* Maximum number of memory controllers per die/node. */
+	u8 max_mcs;
 	struct low_ops ops;
 };
 
