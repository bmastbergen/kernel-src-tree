drivers/scsi: Replace rcu_swap_protected() with rcu_replace_pointer()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit c0eaf15cd5d39e79feb81a122975df0bb5a1c106
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c0eaf15c.failed

This commit replaces the use of rcu_swap_protected() with the more
intuitively appealing rcu_replace_pointer() as a step towards removing
rcu_swap_protected().

Link: https://lore.kernel.org/lkml/CAHk-=wiAsJLw1egFEE=Z7-GGtM6wcvtyytXZA1+BHqta4gg6Hw@mail.gmail.com/
	Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
[ paulmck: From rcu_replace() to rcu_replace_pointer() per Ingo Molnar. ]
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
	Acked-by: "Martin K. Petersen" <martin.petersen@oracle.com>
	Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
	Cc: <linux-scsi@vger.kernel.org>
	Cc: <linux-kernel@vger.kernel.org>
(cherry picked from commit c0eaf15cd5d39e79feb81a122975df0bb5a1c106)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_sysfs.c
diff --cc drivers/scsi/scsi_sysfs.c
index c57fcde929c8,5adfcaba7a4e..000000000000
--- a/drivers/scsi/scsi_sysfs.c
+++ b/drivers/scsi/scsi_sysfs.c
@@@ -467,18 -466,12 +467,25 @@@ static void scsi_device_dev_release_use
  	sdev->request_queue = NULL;
  
  	mutex_lock(&sdev->inquiry_mutex);
++<<<<<<< HEAD
 +	rcu_swap_protected(sdev->vpd_pg0, vpd_pg0,
 +			   lockdep_is_held(&sdev->inquiry_mutex));
 +	rcu_swap_protected(sdev->vpd_pg80, vpd_pg80,
 +			   lockdep_is_held(&sdev->inquiry_mutex));
 +	rcu_swap_protected(sdev->vpd_pg83, vpd_pg83,
 +			   lockdep_is_held(&sdev->inquiry_mutex));
 +	rcu_swap_protected(sdev->vpd_pg89, vpd_pg89,
 +			   lockdep_is_held(&sdev->inquiry_mutex));
++=======
+ 	vpd_pg80 = rcu_replace_pointer(sdev->vpd_pg80, vpd_pg80,
+ 				       lockdep_is_held(&sdev->inquiry_mutex));
+ 	vpd_pg83 = rcu_replace_pointer(sdev->vpd_pg83, vpd_pg83,
+ 				       lockdep_is_held(&sdev->inquiry_mutex));
++>>>>>>> c0eaf15cd5d3 (drivers/scsi: Replace rcu_swap_protected() with rcu_replace_pointer())
  	mutex_unlock(&sdev->inquiry_mutex);
  
 +	if (vpd_pg0)
 +		kfree_rcu(vpd_pg0, rcu);
  	if (vpd_pg83)
  		kfree_rcu(vpd_pg83, rcu);
  	if (vpd_pg80)
diff --git a/drivers/scsi/scsi.c b/drivers/scsi/scsi.c
index f84e7b053c0a..4ccfdec79bad 100644
--- a/drivers/scsi/scsi.c
+++ b/drivers/scsi/scsi.c
@@ -455,8 +455,8 @@ static void scsi_update_vpd_page(struct scsi_device *sdev, u8 page,
 		return;
 
 	mutex_lock(&sdev->inquiry_mutex);
-	rcu_swap_protected(*sdev_vpd_buf, vpd_buf,
-			   lockdep_is_held(&sdev->inquiry_mutex));
+	vpd_buf = rcu_replace_pointer(*sdev_vpd_buf, vpd_buf,
+				      lockdep_is_held(&sdev->inquiry_mutex));
 	mutex_unlock(&sdev->inquiry_mutex);
 
 	if (vpd_buf)
* Unmerged path drivers/scsi/scsi_sysfs.c
