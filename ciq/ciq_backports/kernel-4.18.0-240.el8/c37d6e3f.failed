ionic: restrict received packets to mtu size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Shannon Nelson <snelson@pensando.io>
commit c37d6e3f25cf95cdefaa51eaad699382f34cdd0c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c37d6e3f.failed

Make sure the NIC drops packets that are larger than the
specified MTU.

The front end of the NIC will accept packets larger than MTU and
will copy all the data it can to fill up the driver's posted
buffers - if the buffers are not long enough the packet will
then get dropped.  With the Rx SG buffers allocagted as full
pages, we are currently setting up more space than MTU size
available and end up receiving some packets that are larger
than MTU, up to the size of buffers posted.  To be sure the
NIC doesn't waste our time with oversized packets we need to
lie a little in the SG descriptor about how long is the last
SG element.

At dealloc time, we know the allocation was a page, so the
deallocation doesn't care about what length we put in the
descriptor.

	Signed-off-by: Shannon Nelson <snelson@pensando.io>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c37d6e3f25cf95cdefaa51eaad699382f34cdd0c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/pensando/ionic/ionic_txrx.c
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
