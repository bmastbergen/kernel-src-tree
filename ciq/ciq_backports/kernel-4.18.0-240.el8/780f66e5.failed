jbd2: improve comments about freeing data buffers whose page mapping is NULL

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author zhangyi (F) <yi.zhang@huawei.com>
commit 780f66e59231fcf882f36c63f287252ee47cc75a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/780f66e5.failed

Improve comments in jbd2_journal_commit_transaction() to describe why
we don't need to clear the buffer_mapped bit for freeing file mapping
buffers whose page mapping is NULL.

Link: https://lore.kernel.org/r/20200217112706.20085-1-yi.zhang@huawei.com
Fixes: c96dceeabf76 ("jbd2: do not clear the BH_Mapped flag when forgetting a metadata buffer")
	Suggested-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Signed-off-by: zhangyi (F) <yi.zhang@huawei.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit 780f66e59231fcf882f36c63f287252ee47cc75a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/jbd2/commit.c
diff --cc fs/jbd2/commit.c
index 132fb92098c7,e855d8260433..000000000000
--- a/fs/jbd2/commit.c
+++ b/fs/jbd2/commit.c
@@@ -972,29 -976,34 +972,42 @@@ restart_loop
  		 * it. */
  
  		/*
 -		 * A buffer which has been freed while still being journaled
 -		 * by a previous transaction, refile the buffer to BJ_Forget of
 -		 * the running transaction. If the just committed transaction
 -		 * contains "add to orphan" operation, we can completely
 -		 * invalidate the buffer now. We are rather through in that
 -		 * since the buffer may be still accessible when blocksize <
 -		 * pagesize and it is attached to the last partial page.
 -		 */
 -		if (buffer_freed(bh) && !jh->b_next_transaction) {
 -			struct address_space *mapping;
 -
 -			clear_buffer_freed(bh);
 -			clear_buffer_jbddirty(bh);
 -
 +		* A buffer which has been freed while still being journaled by
 +		* a previous transaction.
 +		*/
 +		if (buffer_freed(bh)) {
  			/*
++<<<<<<< HEAD
 +			 * If the running transaction is the one containing
 +			 * "add to orphan" operation (b_next_transaction !=
 +			 * NULL), we have to wait for that transaction to
 +			 * commit before we can really get rid of the buffer.
 +			 * So just clear b_modified to not confuse transaction
 +			 * credit accounting and refile the buffer to
 +			 * BJ_Forget of the running transaction. If the just
 +			 * committed transaction contains "add to orphan"
 +			 * operation, we can completely invalidate the buffer
 +			 * now. We are rather through in that since the
 +			 * buffer may be still accessible when blocksize <
 +			 * pagesize and it is attached to the last partial
 +			 * page.
++=======
+ 			 * Block device buffers need to stay mapped all the
+ 			 * time, so it is enough to clear buffer_jbddirty and
+ 			 * buffer_freed bits. For the file mapping buffers (i.e.
+ 			 * journalled data) we need to unmap buffer and clear
+ 			 * more bits. We also need to be careful about the check
+ 			 * because the data page mapping can get cleared under
+ 			 * our hands. Note that if mapping == NULL, we don't
+ 			 * need to make buffer unmapped because the page is
+ 			 * already detached from the mapping and buffers cannot
+ 			 * get reused.
++>>>>>>> 780f66e59231 (jbd2: improve comments about freeing data buffers whose page mapping is NULL)
  			 */
 -			mapping = READ_ONCE(bh->b_page->mapping);
 -			if (mapping && !sb_is_blkdev_sb(mapping->host->i_sb)) {
 +			jh->b_modified = 0;
 +			if (!jh->b_next_transaction) {
 +				clear_buffer_freed(bh);
 +				clear_buffer_jbddirty(bh);
  				clear_buffer_mapped(bh);
  				clear_buffer_new(bh);
  				clear_buffer_req(bh);
* Unmerged path fs/jbd2/commit.c
