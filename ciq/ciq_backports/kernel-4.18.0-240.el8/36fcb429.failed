cpuidle: use first valid target residency as poll time

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Marcelo Tosatti <mtosatti@redhat.com>
commit 36fcb4292473cb9c9ce7706d038bcf0eda5cabeb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/36fcb429.failed

Commit 259231a04561 ("cpuidle: add poll_limit_ns to cpuidle_device
structure") changed, by mistake, the target residency from the first
available sleep state to the last available sleep state (which should
be longer).

This might cause excessive polling.

Fixes: 259231a04561 ("cpuidle: add poll_limit_ns to cpuidle_device structure")
	Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
	Cc: 5.4+ <stable@vger.kernel.org> # 5.4+
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 36fcb4292473cb9c9ce7706d038bcf0eda5cabeb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/cpuidle.c
diff --cc drivers/cpuidle/cpuidle.c
index 08b37025da09,15877b431143..000000000000
--- a/drivers/cpuidle/cpuidle.c
+++ b/drivers/cpuidle/cpuidle.c
@@@ -382,15 -378,16 +382,20 @@@ u64 cpuidle_poll_time(struct cpuidle_dr
  
  	limit_ns = TICK_NSEC;
  	for (i = 1; i < drv->state_count; i++) {
 -		if (dev->states_usage[i].disable)
 +		if (drv->states[i].disabled || dev->states_usage[i].disable)
  			continue;
  
++<<<<<<< HEAD
 +		limit_ns = (u64)drv->states[i].target_residency * NSEC_PER_USEC;
++=======
+ 		limit_ns = (u64)drv->states[i].target_residency_ns;
+ 		break;
++>>>>>>> 36fcb4292473 (cpuidle: use first valid target residency as poll time)
  	}
  
 -	dev->poll_limit_ns = limit_ns;
 +	dev->rh_cpuidle_dev.poll_limit_ns = limit_ns;
  
 -	return dev->poll_limit_ns;
 +	return dev->rh_cpuidle_dev.poll_limit_ns;
  }
  
  /**
* Unmerged path drivers/cpuidle/cpuidle.c
