dm writecache: implement the "cleaner" policy

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit 93de44eb3fc8c3566f5315b0210630cc361526a7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/93de44eb.failed

The "flush" or "flush_on_suspend" messages flush the whole cache. However,
these flushing methods can take some time and the process is left in
an interruptible state during the flush.

Implement a "cleaner" option that offers an alternate flushing method.
When this option is activated (either by a message or in the constructor
arguments), the cache will not promote new writes (however, writes to
already cached blocks are promoted, to avoid data corruption due to
misordered writes) and it will gradually writeback any cached data. The
userspace can then monitor the cleaning process with "dmsetup status".
When the number of cached bloks drops to zero, the userspace can unload
the dm-writecache target and replace it with dm-linear or other targets.

	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 93de44eb3fc8c3566f5315b0210630cc361526a7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-writecache.c
diff --cc drivers/md/dm-writecache.c
index adfec9d8e315,3f17dcc6b73e..000000000000
--- a/drivers/md/dm-writecache.c
+++ b/drivers/md/dm-writecache.c
@@@ -1194,10 -1231,14 +1219,14 @@@ read_next_block
  					goto bio_copy;
  				}
  				found_entry = true;
+ 			} else {
+ 				if (unlikely(wc->cleaner))
+ 					goto direct_write;
  			}
 -			e = writecache_pop_from_freelist(wc, (sector_t)-1);
 +			e = writecache_pop_from_freelist(wc);
  			if (unlikely(!e)) {
  				if (!found_entry) {
+ direct_write:
  					e = writecache_find_entry(wc, bio->bi_iter.bi_sector, WFE_RETURN_FOLLOWING);
  					if (e) {
  						sector_t next_boundary = read_original_sector(wc, e) - bio->bi_iter.bi_sector;
@@@ -2304,7 -2371,7 +2342,11 @@@ static void writecache_status(struct dm
  
  static struct target_type writecache_target = {
  	.name			= "writecache",
++<<<<<<< HEAD
 +	.version		= {1, 1, 1},
++=======
+ 	.version		= {1, 3, 0},
++>>>>>>> 93de44eb3fc8 (dm writecache: implement the "cleaner" policy)
  	.module			= THIS_MODULE,
  	.ctr			= writecache_ctr,
  	.dtr			= writecache_dtr,
* Unmerged path drivers/md/dm-writecache.c
