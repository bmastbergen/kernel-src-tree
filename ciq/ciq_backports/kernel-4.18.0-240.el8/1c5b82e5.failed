veth: introduce more specialized counters in veth_stats

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 1c5b82e55f152988778bebeea52fae7f6cea9a60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/1c5b82e5.failed

Introduce xdp_tx, xdp_redirect and rx_drops counters in veth_stats data
structure. Move stats accounting in veth_poll. Remove xdp_xmit variable
in veth_xdp_rcv_one/veth_xdp_rcv_skb and rely on veth_stats counters.
This is a preliminary patch to align veth xdp statistics to mlx, intel
and marvell xdp implementation

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1c5b82e55f152988778bebeea52fae7f6cea9a60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/veth.c
diff --cc drivers/net/veth.c
index 013947869d96,bad8fd432067..000000000000
--- a/drivers/net/veth.c
+++ b/drivers/net/veth.c
@@@ -33,16 -34,20 +33,25 @@@
  #define VETH_RING_SIZE		256
  #define VETH_XDP_HEADROOM	(XDP_PACKET_HEADROOM + NET_IP_ALIGN)
  
- /* Separating two types of XDP xmit */
- #define VETH_XDP_TX		BIT(0)
- #define VETH_XDP_REDIR		BIT(1)
- 
  #define VETH_XDP_TX_BULK_SIZE	16
  
++<<<<<<< HEAD
++=======
+ struct veth_stats {
+ 	u64	rx_drops;
+ 	/* xdp */
+ 	u64	xdp_packets;
+ 	u64	xdp_bytes;
+ 	u64	xdp_redirect;
+ 	u64	xdp_drops;
+ 	u64	xdp_tx;
+ };
+ 
++>>>>>>> 1c5b82e55f15 (veth: introduce more specialized counters in veth_stats)
  struct veth_rq_stats {
 -	struct veth_stats	vs;
 +	u64			xdp_packets;
 +	u64			xdp_bytes;
 +	u64			xdp_drops;
  	struct u64_stats_sync	syncp;
  };
  
@@@ -756,9 -752,9 +773,15 @@@ static int veth_xdp_rcv(struct veth_rq 
  	}
  
  	u64_stats_update_begin(&rq->stats.syncp);
++<<<<<<< HEAD
 +	rq->stats.xdp_packets += done;
 +	rq->stats.xdp_bytes += bytes;
 +	rq->stats.xdp_drops += drops;
++=======
+ 	rq->stats.vs.xdp_bytes += stats->xdp_bytes;
+ 	rq->stats.vs.xdp_drops += stats->xdp_drops + stats->rx_drops;
+ 	rq->stats.vs.xdp_packets += done;
++>>>>>>> 1c5b82e55f15 (veth: introduce more specialized counters in veth_stats)
  	u64_stats_update_end(&rq->stats.syncp);
  
  	return done;
@@@ -786,10 -782,10 +809,15 @@@ static int veth_poll(struct napi_struc
  		}
  	}
  
- 	if (xdp_xmit & VETH_XDP_TX)
+ 	if (stats.xdp_tx > 0)
  		veth_xdp_flush(rq->dev, &bq);
++<<<<<<< HEAD
 +	if (xdp_xmit & VETH_XDP_REDIR)
 +		xdp_do_flush_map();
++=======
+ 	if (stats.xdp_redirect > 0)
+ 		xdp_do_flush();
++>>>>>>> 1c5b82e55f15 (veth: introduce more specialized counters in veth_stats)
  	xdp_clear_return_frame_no_direct();
  
  	return done;
* Unmerged path drivers/net/veth.c
