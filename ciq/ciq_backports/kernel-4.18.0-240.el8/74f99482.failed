netfilter: nf_conntrack: add IPS_HW_OFFLOAD status bit

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Bodong Wang <bodong@mellanox.com>
commit 74f99482eae03195ced512b440b31d62bdb6e943
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/74f99482.failed

This bit indicates that the conntrack entry is offloaded to hardware
flow table. nf_conntrack entry will be tagged with [HW_OFFLOAD] if
it's offload to hardware.

cat /proc/net/nf_conntrack
	ipv4 2 tcp 6 \
	src=1.1.1.17 dst=1.1.1.16 sport=56394 dport=5001 \
	src=1.1.1.16 dst=1.1.1.17 sport=5001 dport=56394 [HW_OFFLOAD] \
	mark=0 zone=0 use=3

Note that HW_OFFLOAD/OFFLOAD/ASSURED are mutually exclusive.

Changelog:

* V1->V2:
- Remove check of lastused from stats. It was meant for cases such
  as removing driver module while traffic still running. Better to
  handle such cases from garbage collector.

	Signed-off-by: Bodong Wang <bodong@mellanox.com>
	Reviewed-by: Oz Shlomo <ozsh@mellanox.com>
	Reviewed-by: Paul Blakey <paulb@mellanox.com>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 74f99482eae03195ced512b440b31d62bdb6e943)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/netfilter/nf_conntrack_common.h
#	net/netfilter/nf_flow_table_offload.c
diff --cc include/uapi/linux/netfilter/nf_conntrack_common.h
index 336014bf8868,4b3395082d15..000000000000
--- a/include/uapi/linux/netfilter/nf_conntrack_common.h
+++ b/include/uapi/linux/netfilter/nf_conntrack_common.h
@@@ -110,9 -123,10 +114,14 @@@ enum ip_conntrack_status 
  	 */
  	IPS_UNCHANGEABLE_MASK = (IPS_NAT_DONE_MASK | IPS_NAT_MASK |
  				 IPS_EXPECTED | IPS_CONFIRMED | IPS_DYING |
++<<<<<<< HEAD
 +				 IPS_SEQ_ADJUST | IPS_TEMPLATE | IPS_OFFLOAD),
++=======
+ 				 IPS_SEQ_ADJUST | IPS_TEMPLATE | IPS_UNTRACKED |
+ 				 IPS_OFFLOAD | IPS_HW_OFFLOAD),
++>>>>>>> 74f99482eae0 (netfilter: nf_conntrack: add IPS_HW_OFFLOAD status bit)
  
- 	__IPS_MAX_BIT = 15,
+ 	__IPS_MAX_BIT = 16,
  };
  
  /* Connection tracking event types */
* Unmerged path net/netfilter/nf_flow_table_offload.c
* Unmerged path include/uapi/linux/netfilter/nf_conntrack_common.h
diff --git a/net/netfilter/nf_conntrack_standalone.c b/net/netfilter/nf_conntrack_standalone.c
index b4cbf755e0e6..0858bd337e3d 100644
--- a/net/netfilter/nf_conntrack_standalone.c
+++ b/net/netfilter/nf_conntrack_standalone.c
@@ -341,7 +341,9 @@ static int ct_seq_show(struct seq_file *s, void *v)
 	if (seq_print_acct(s, ct, IP_CT_DIR_REPLY))
 		goto release;
 
-	if (test_bit(IPS_OFFLOAD_BIT, &ct->status))
+	if (test_bit(IPS_HW_OFFLOAD_BIT, &ct->status))
+		seq_puts(s, "[HW_OFFLOAD] ");
+	else if (test_bit(IPS_OFFLOAD_BIT, &ct->status))
 		seq_puts(s, "[OFFLOAD] ");
 	else if (test_bit(IPS_ASSURED_BIT, &ct->status))
 		seq_puts(s, "[ASSURED] ");
* Unmerged path net/netfilter/nf_flow_table_offload.c
