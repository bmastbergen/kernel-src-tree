selftests/bpf: add loop test 4

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Alexei Starovoitov <ast@kernel.org>
commit a78d0dbec712999ecd2f800eea0f62dc93867a78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a78d0dbe.failed

Add a test that returns a 'random' number between [0, 2^20)
If state pruning is not working correctly for loop body the number of
processed insns will be 2^20 * num_of_insns_in_loop_body and the program
will be rejected.

	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Andrii Nakryiko <andriin@fb.com>
	Acked-by: Yonghong Song <yhs@fb.com>
(cherry picked from commit a78d0dbec712999ecd2f800eea0f62dc93867a78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/prog_tests/bpf_verif_scale.c
diff --cc tools/testing/selftests/bpf/prog_tests/bpf_verif_scale.c
index db0c774864c8,e9e72d8d7aae..000000000000
--- a/tools/testing/selftests/bpf/prog_tests/bpf_verif_scale.c
+++ b/tools/testing/selftests/bpf/prog_tests/bpf_verif_scale.c
@@@ -56,9 -67,11 +56,15 @@@ void test_bpf_verif_scale(void
  		 * ~110 insns in loop body.
  		 * Total of 5 such loops. Total program size ~1500 insns.
  		 */
 -		{ "pyperf600_nounroll.o", BPF_PROG_TYPE_RAW_TRACEPOINT },
 +		"./pyperf600_nounroll.o",
  
++<<<<<<< HEAD
 +		"./loop1.o", "./loop2.o",
++=======
+ 		{ "loop1.o", BPF_PROG_TYPE_RAW_TRACEPOINT },
+ 		{ "loop2.o", BPF_PROG_TYPE_RAW_TRACEPOINT },
+ 		{ "loop4.o", BPF_PROG_TYPE_SCHED_CLS },
++>>>>>>> a78d0dbec712 (selftests/bpf: add loop test 4)
  
  		/* partial unroll. 19k insn in a loop.
  		 * Total program size 20.8k insn.
* Unmerged path tools/testing/selftests/bpf/prog_tests/bpf_verif_scale.c
diff --git a/tools/testing/selftests/bpf/progs/loop4.c b/tools/testing/selftests/bpf/progs/loop4.c
new file mode 100644
index 000000000000..650859022771
--- /dev/null
+++ b/tools/testing/selftests/bpf/progs/loop4.c
@@ -0,0 +1,18 @@
+// SPDX-License-Identifier: GPL-2.0
+// Copyright (c) 2019 Facebook
+#include <linux/bpf.h>
+#include "bpf_helpers.h"
+
+char _license[] SEC("license") = "GPL";
+
+SEC("socket")
+int combinations(volatile struct __sk_buff* skb)
+{
+	int ret = 0, i;
+
+#pragma nounroll
+	for (i = 0; i < 20; i++)
+		if (skb->len)
+			ret |= 1 << i;
+	return ret;
+}
