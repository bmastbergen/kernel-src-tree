espintcp: restore IP CB before handing the packet to xfrm

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sabrina Dubroca <sd@queasysnail.net>
commit 4eb2e13415757a2bce5bb0d580d22bbeef1f5346
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/4eb2e134.failed

Xiumei reported a bug with espintcp over IPv6 in transport mode,
because xfrm6_transport_finish expects to find IP6CB data (struct
inet6_skb_cb). Currently, espintcp zeroes the CB, but the relevant
part is actually preserved by previous layers (first set up by tcp,
then strparser only zeroes a small part of tcp_skb_tb), so we can just
relocate it to the start of skb->cb.

Fixes: e27cca96cd68 ("xfrm: add espintcp (RFC 8229)")
	Reported-by: Xiumei Mu <xmu@redhat.com>
	Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit 4eb2e13415757a2bce5bb0d580d22bbeef1f5346)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/xfrm/espintcp.c
* Unmerged path net/xfrm/espintcp.c
* Unmerged path net/xfrm/espintcp.c
