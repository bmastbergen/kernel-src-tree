espintcp: handle short messages instead of breaking the encap socket

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sabrina Dubroca <sd@queasysnail.net>
commit fadd1a63a7b4df295a01fa50b2f4e447542bee59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/fadd1a63.failed

Currently, short messages (less than 4 bytes after the length header)
will break the stream of messages. This is unnecessary, since we can
still parse messages even if they're too short to contain any usable
data. This is also bogus, as keepalive messages (a single 0xff byte),
though not needed with TCP encapsulation, should be allowed.

This patch changes the stream parser so that short messages are
accepted and dropped in the kernel. Messages that contain a valid SPI
or non-ESP header are processed as before.

Fixes: e27cca96cd68 ("xfrm: add espintcp (RFC 8229)")
	Reported-by: Andrew Cagney <cagney@libreswan.org>
	Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit fadd1a63a7b4df295a01fa50b2f4e447542bee59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/xfrm/espintcp.c
* Unmerged path net/xfrm/espintcp.c
* Unmerged path net/xfrm/espintcp.c
