drm/udl: Allocate GEM object via struct drm_driver.gem_create_object

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Thomas Zimmermann <tzimmermann@suse.de>
commit 1d48b9e988a8874225e38fc1ac9967666e7eafd7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/1d48b9e9.failed

In preparation of a switch to SHMEM, udl now allocates its GEM
objects via struct drm_driver.gem_create_object. No functional
changes are made.

For SHMEM GEM objects, udl will require the use of a special mmap
function, which we set though the create-object function.

	Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
	Acked-by: Gerd Hoffmann <kraxel@redhat.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20191107094307.19870-3-tzimmermann@suse.de
(cherry picked from commit 1d48b9e988a8874225e38fc1ac9967666e7eafd7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/udl/udl_gem.c
diff --cc drivers/gpu/drm/udl/udl_gem.c
index 9e71f3272ed1,628749cc1143..000000000000
--- a/drivers/gpu/drm/udl/udl_gem.c
+++ b/drivers/gpu/drm/udl/udl_gem.c
@@@ -3,13 -3,21 +3,27 @@@
   * Copyright (C) 2012 Red Hat
   */
  
++<<<<<<< HEAD
 +#include <drm/drmP.h>
++=======
+ #include <linux/dma-buf.h>
+ #include <linux/vmalloc.h>
+ 
+ #include <drm/drm_drv.h>
+ #include <drm/drm_mode.h>
+ #include <drm/drm_prime.h>
+ 
++>>>>>>> 1d48b9e988a8 (drm/udl: Allocate GEM object via struct drm_driver.gem_create_object)
  #include "udl_drv.h"
 +#include <linux/shmem_fs.h>
 +#include <linux/dma-buf.h>
  
- struct udl_gem_object *udl_gem_alloc_object(struct drm_device *dev,
- 					    size_t size)
+ /*
+  * Helpers for struct drm_driver
+  */
+ 
+ struct drm_gem_object *udl_driver_gem_create_object(struct drm_device *dev,
+ 						    size_t size)
  {
  	struct udl_gem_object *obj;
  
diff --git a/drivers/gpu/drm/udl/udl_drv.c b/drivers/gpu/drm/udl/udl_drv.c
index 4a49facb608d..a737f2d46a45 100644
--- a/drivers/gpu/drm/udl/udl_drv.c
+++ b/drivers/gpu/drm/udl/udl_drv.c
@@ -59,6 +59,7 @@ static struct drm_driver driver = {
 
 	/* gem hooks */
 	.gem_free_object_unlocked = udl_gem_free_object,
+	.gem_create_object = udl_driver_gem_create_object,
 	.gem_vm_ops = &udl_gem_vm_ops,
 
 	.dumb_create = udl_dumb_create,
diff --git a/drivers/gpu/drm/udl/udl_drv.h b/drivers/gpu/drm/udl/udl_drv.h
index 0fa4d8595d1a..5b77ff03ec1c 100644
--- a/drivers/gpu/drm/udl/udl_drv.h
+++ b/drivers/gpu/drm/udl/udl_drv.h
@@ -119,6 +119,8 @@ int udl_dumb_create(struct drm_file *file_priv,
 int udl_gem_mmap(struct drm_file *file_priv, struct drm_device *dev,
 		 uint32_t handle, uint64_t *offset);
 
+struct drm_gem_object *udl_driver_gem_create_object(struct drm_device *dev,
+						    size_t size);
 void udl_gem_free_object(struct drm_gem_object *gem_obj);
 struct udl_gem_object *udl_gem_alloc_object(struct drm_device *dev,
 					    size_t size);
* Unmerged path drivers/gpu/drm/udl/udl_gem.c
