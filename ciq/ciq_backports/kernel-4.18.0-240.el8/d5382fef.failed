ipv6: Stop sending in-kernel notifications for each nexthop

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ido Schimmel <idosch@mellanox.com>
commit d5382fef70ce273608d6fc652c24f075de3737ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d5382fef.failed

Both listeners - mlxsw and netdevsim - of IPv6 FIB notifications are now
ready to handle IPv6 multipath notifications.

Therefore, stop ignoring such notifications in both drivers and stop
sending notification for each added / deleted nexthop.

v2:
* Remove 'multipath_rt' from 'struct fib6_entry_notifier_info'

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d5382fef70ce273608d6fc652c24f075de3737ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
#	drivers/net/netdevsim/fib.c
#	include/net/ip6_fib.h
#	net/ipv6/ip6_fib.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index 3901f160291a,e618be7ce6c6..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -6267,6 -6273,28 +6267,31 @@@ static int mlxsw_sp_router_fib_event(st
  			NL_SET_ERR_MSG_MOD(info->extack, "FIB offload was aborted. Not configuring route");
  			return notifier_from_errno(-EINVAL);
  		}
++<<<<<<< HEAD
++=======
+ 		if (info->family == AF_INET) {
+ 			struct fib_entry_notifier_info *fen_info = ptr;
+ 
+ 			if (fen_info->fi->fib_nh_is_v6) {
+ 				NL_SET_ERR_MSG_MOD(info->extack, "IPv6 gateway with IPv4 route is not supported");
+ 				return notifier_from_errno(-EINVAL);
+ 			}
+ 			if (fen_info->fi->nh) {
+ 				NL_SET_ERR_MSG_MOD(info->extack, "IPv4 route with nexthop objects is not supported");
+ 				return notifier_from_errno(-EINVAL);
+ 			}
+ 		} else if (info->family == AF_INET6) {
+ 			struct fib6_entry_notifier_info *fen6_info;
+ 
+ 			fen6_info = container_of(info,
+ 						 struct fib6_entry_notifier_info,
+ 						 info);
+ 			if (fen6_info->rt->nh) {
+ 				NL_SET_ERR_MSG_MOD(info->extack, "IPv6 route with nexthop objects is not supported");
+ 				return notifier_from_errno(-EINVAL);
+ 			}
+ 		}
++>>>>>>> d5382fef70ce (ipv6: Stop sending in-kernel notifications for each nexthop)
  		break;
  	}
  
diff --cc drivers/net/netdevsim/fib.c
index 1a251f76d09b,8c57ba747772..000000000000
--- a/drivers/net/netdevsim/fib.c
+++ b/drivers/net/netdevsim/fib.c
@@@ -189,7 -190,8 +189,12 @@@ static int nsim_fib_event_nb(struct not
  
  	case FIB_EVENT_ENTRY_ADD:  /* fall through */
  	case FIB_EVENT_ENTRY_DEL:
++<<<<<<< HEAD
 +		err = nsim_fib_event(info, event == FIB_EVENT_ENTRY_ADD);
++=======
+ 		err = nsim_fib_event(data, info,
+ 				     event == FIB_EVENT_ENTRY_ADD);
++>>>>>>> d5382fef70ce (ipv6: Stop sending in-kernel notifications for each nexthop)
  		break;
  	}
  
diff --cc include/net/ip6_fib.h
index 390067ba9e95,87331f2c4af0..000000000000
--- a/include/net/ip6_fib.h
+++ b/include/net/ip6_fib.h
@@@ -379,6 -377,7 +379,10 @@@ typedef struct rt6_info *(*pol_lookup_t
  struct fib6_entry_notifier_info {
  	struct fib_notifier_info info; /* must be first */
  	struct fib6_info *rt;
++<<<<<<< HEAD
++=======
+ 	unsigned int nsiblings;
++>>>>>>> d5382fef70ce (ipv6: Stop sending in-kernel notifications for each nexthop)
  };
  
  /*
diff --cc net/ipv6/ip6_fib.c
index f7014e41a454,1d16a01eccf5..000000000000
--- a/net/ipv6/ip6_fib.c
+++ b/net/ipv6/ip6_fib.c
@@@ -415,6 -381,22 +415,25 @@@ static int call_fib6_entry_notifiers(st
  	return call_fib6_notifiers(net, event_type, &info.info);
  }
  
++<<<<<<< HEAD
++=======
+ int call_fib6_multipath_entry_notifiers(struct net *net,
+ 					enum fib_event_type event_type,
+ 					struct fib6_info *rt,
+ 					unsigned int nsiblings,
+ 					struct netlink_ext_ack *extack)
+ {
+ 	struct fib6_entry_notifier_info info = {
+ 		.info.extack = extack,
+ 		.rt = rt,
+ 		.nsiblings = nsiblings,
+ 	};
+ 
+ 	rt->fib6_table->fib_seq++;
+ 	return call_fib6_notifiers(net, event_type, &info.info);
+ }
+ 
++>>>>>>> d5382fef70ce (ipv6: Stop sending in-kernel notifications for each nexthop)
  struct fib6_dump_arg {
  	struct net *net;
  	struct notifier_block *nb;
@@@ -1120,26 -1139,12 +1139,35 @@@ next_iter
  add:
  		nlflags |= NLM_F_CREATE;
  
++<<<<<<< HEAD
 +		err = call_fib6_entry_notifiers(info->nl_net,
 +						FIB_EVENT_ENTRY_ADD,
 +						rt, extack);
 +		if (err) {
 +			struct fib6_info *sibling, *next_sibling;
 +
 +			/* If the route has siblings, then it first
 +			 * needs to be unlinked from them.
 +			 */
 +			if (!rt->fib6_nsiblings)
 +				return err;
 +
 +			list_for_each_entry_safe(sibling, next_sibling,
 +						 &rt->fib6_siblings,
 +						 fib6_siblings)
 +				sibling->fib6_nsiblings--;
 +			rt->fib6_nsiblings = 0;
 +			list_del_init(&rt->fib6_siblings);
 +			rt6_multipath_rebalance(next_sibling);
 +			return err;
++=======
+ 		if (!info->skip_notify_kernel) {
+ 			err = call_fib6_entry_notifiers(info->nl_net,
+ 							FIB_EVENT_ENTRY_ADD,
+ 							rt, extack);
+ 			if (err)
+ 				return err;
++>>>>>>> d5382fef70ce (ipv6: Stop sending in-kernel notifications for each nexthop)
  		}
  
  		rcu_assign_pointer(rt->fib6_next, iter);
@@@ -1165,13 -1170,15 +1193,15 @@@
  			return -ENOENT;
  		}
  
- 		err = call_fib6_entry_notifiers(info->nl_net,
- 						FIB_EVENT_ENTRY_REPLACE,
- 						rt, extack);
- 		if (err)
- 			return err;
+ 		if (!info->skip_notify_kernel) {
+ 			err = call_fib6_entry_notifiers(info->nl_net,
+ 							FIB_EVENT_ENTRY_REPLACE,
+ 							rt, extack);
+ 			if (err)
+ 				return err;
+ 		}
  
 -		fib6_info_hold(rt);
 +		atomic_inc(&rt->fib6_ref);
  		rcu_assign_pointer(rt->fib6_node, fn);
  		rt->fib6_next = iter->fib6_next;
  		rcu_assign_pointer(*ins, rt);
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
* Unmerged path drivers/net/netdevsim/fib.c
* Unmerged path include/net/ip6_fib.h
* Unmerged path net/ipv6/ip6_fib.c
