flow_dissector: skip the ICMP dissector for non ICMP packets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Matteo Croce <mcroce@redhat.com>
commit 3b336d6f4ec690b0082bcffe55bac22f234a41ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3b336d6f.failed

FLOW_DISSECTOR_KEY_ICMP is checked for every packet, not only ICMP ones.
Even if the test overhead is probably negligible, move the
ICMP dissector code under the big 'switch(ip_proto)' so it gets called
only for ICMP packets.

	Signed-off-by: Matteo Croce <mcroce@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3b336d6f4ec690b0082bcffe55bac22f234a41ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/flow_dissector.c
diff --cc net/core/flow_dissector.c
index 7abf2e67e8a1,0fb721976f3d..000000000000
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@@ -870,7 -902,7 +889,11 @@@ bool __skb_flow_dissect(const struct ne
  	struct flow_dissector_key_control *key_control;
  	struct flow_dissector_key_basic *key_basic;
  	struct flow_dissector_key_addrs *key_addrs;
++<<<<<<< HEAD
 +	struct flow_dissector_key_icmp *key_icmp;
++=======
+ 	struct flow_dissector_key_ports *key_ports;
++>>>>>>> 3b336d6f4ec6 (flow_dissector: skip the ICMP dissector for non ICMP packets)
  	struct flow_dissector_key_tags *key_tags;
  	struct flow_dissector_key_vlan *key_vlan;
  	struct bpf_prog *attached = NULL;
@@@ -1316,18 -1357,15 +1345,10 @@@ ip_proto_again
  		break;
  	}
  
 -	if (dissector_uses_key(flow_dissector, FLOW_DISSECTOR_KEY_PORTS) &&
 -	    !(key_control->flags & FLOW_DIS_IS_FRAGMENT)) {
 -		key_ports = skb_flow_dissector_target(flow_dissector,
 -						      FLOW_DISSECTOR_KEY_PORTS,
 -						      target_container);
 -		key_ports->ports = __skb_flow_get_ports(skb, nhoff, ip_proto,
 -							data, hlen);
 -	}
 +	if (!(key_control->flags & FLOW_DIS_IS_FRAGMENT))
 +		__skb_flow_dissect_ports(skb, flow_dissector, target_container,
 +					 data, nhoff, ip_proto, hlen);
  
- 	if (dissector_uses_key(flow_dissector,
- 			       FLOW_DISSECTOR_KEY_ICMP)) {
- 		key_icmp = skb_flow_dissector_target(flow_dissector,
- 						     FLOW_DISSECTOR_KEY_ICMP,
- 						     target_container);
- 		key_icmp->icmp = skb_flow_get_be16(skb, nhoff, data, hlen);
- 	}
- 
  	/* Process result of IP proto processing */
  	switch (fdret) {
  	case FLOW_DISSECT_RET_PROTO_AGAIN:
* Unmerged path net/core/flow_dissector.c
