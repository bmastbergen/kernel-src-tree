s390/protvirt: add ultravisor initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Vasily Gorbik <gor@linux.ibm.com>
commit 29d37e5b82f3e96dd648167657d5a0e0111ce877
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/29d37e5b.failed

Before being able to host protected virtual machines, donate some of
the memory to the ultravisor. Besides that the ultravisor might impose
addressing limitations for memory used to back protected VM storage. Treat
that limit as protected virtualization host's virtual memory limit.

	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
	Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
	Reviewed-by: Thomas Huth <thuth@redhat.com>
	Reviewed-by: David Hildenbrand <david@redhat.com>
[borntraeger@de.ibm.com: patch merging, splitting, fixing]
	Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
(cherry picked from commit 29d37e5b82f3e96dd648167657d5a0e0111ce877)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/uv.h
#	arch/s390/kernel/uv.c
diff --cc arch/s390/include/asm/uv.h
index 4093a2856929,1af6ce8023cc..000000000000
--- a/arch/s390/include/asm/uv.h
+++ b/arch/s390/include/asm/uv.h
@@@ -44,9 -46,29 +46,17 @@@ struct uv_cb_qui 
  	struct uv_cb_header header;
  	u64 reserved08;
  	u64 inst_calls_list[4];
 -	u64 reserved30[2];
 -	u64 uv_base_stor_len;
 -	u64 reserved48;
 -	u64 conf_base_phys_stor_len;
 -	u64 conf_base_virt_stor_len;
 -	u64 conf_virt_var_stor_len;
 -	u64 cpu_stor_len;
 -	u32 reserved70[3];
 -	u32 max_num_sec_conf;
 -	u64 max_guest_stor_addr;
 -	u8  reserved88[158 - 136];
 -	u16 max_guest_cpus;
 -	u8  reserveda0[200 - 160];
 +	u64 reserved30[15];
  } __packed __aligned(8);
  
+ struct uv_cb_init {
+ 	struct uv_cb_header header;
+ 	u64 reserved08[2];
+ 	u64 stor_origin;
+ 	u64 stor_len;
+ 	u64 reserved28[4];
+ } __packed __aligned(8);
+ 
  struct uv_cb_share {
  	struct uv_cb_header header;
  	u64 reserved08[3];
@@@ -126,6 -161,27 +136,30 @@@ void uv_query_info(void)
  #define is_prot_virt_guest() 0
  static inline int uv_set_shared(unsigned long addr) { return 0; }
  static inline int uv_remove_shared(unsigned long addr) { return 0; }
++<<<<<<< HEAD
++=======
+ #endif
+ 
+ #if IS_ENABLED(CONFIG_KVM)
+ extern int prot_virt_host;
+ 
+ static inline int is_prot_virt_host(void)
+ {
+ 	return prot_virt_host;
+ }
+ 
+ void setup_uv(void);
+ void adjust_to_uv_max(unsigned long *vmax);
+ #else
+ #define is_prot_virt_host() 0
+ static inline void setup_uv(void) {}
+ static inline void adjust_to_uv_max(unsigned long *vmax) {}
+ #endif
+ 
+ #if defined(CONFIG_PROTECTED_VIRTUALIZATION_GUEST) || IS_ENABLED(CONFIG_KVM)
+ void uv_query_info(void);
+ #else
++>>>>>>> 29d37e5b82f3 (s390/protvirt: add ultravisor initialization)
  static inline void uv_query_info(void) {}
  #endif
  
* Unmerged path arch/s390/kernel/uv.c
* Unmerged path arch/s390/include/asm/uv.h
diff --git a/arch/s390/kernel/setup.c b/arch/s390/kernel/setup.c
index d5516ab24db2..cbcc15d0eb11 100644
--- a/arch/s390/kernel/setup.c
+++ b/arch/s390/kernel/setup.c
@@ -500,6 +500,9 @@ static void __init setup_memory_end(void)
 			vmax = _REGION1_SIZE; /* 4-level kernel page table */
 	}
 
+	if (is_prot_virt_host())
+		adjust_to_uv_max(&vmax);
+
 	/* module area is at the end of the kernel address space. */
 	MODULES_END = vmax;
 	MODULES_VADDR = MODULES_END - MODULES_LEN;
@@ -1076,6 +1079,8 @@ void __init setup_arch(char **cmdline_p)
 	 */
 	memblock_trim_memory(1UL << (MAX_ORDER - 1 + PAGE_SHIFT));
 
+	if (is_prot_virt_host())
+		setup_uv();
 	setup_memory_end();
 	setup_memory();
 	dma_contiguous_reserve(memory_end);
* Unmerged path arch/s390/kernel/uv.c
