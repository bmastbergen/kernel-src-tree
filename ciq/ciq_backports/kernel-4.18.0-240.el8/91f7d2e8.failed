USB: leds: fix regression in usbport led trigger

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christian Lamparter <chunkeey@gmail.com>
commit 91f7d2e89868fcac0e750a28230fdb1ad4512137
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/91f7d2e8.failed

The patch "usb: simplify usbport trigger" together with "leds: triggers:
add device attribute support" caused an regression for the usbport
trigger. it will no longer enumerate any active usb hub ports under the
"ports" directory in the sysfs class directory, if the usb host drivers
are fully initialized before the usbport trigger was loaded.

The reason is that the usbport driver tries to register the sysfs
entries during the activate() callback. And this will fail with -2 /
ENOENT because the patch "leds: triggers: add device attribute support"
made it so that the sysfs "ports" group was only being added after the
activate() callback succeeded.

This version of the patch reverts parts of the "usb: simplify usbport
trigger" patch and restores usbport trigger's functionality.

Fixes: 6f7b0bad8839 ("usb: simplify usbport trigger")
	Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
	Cc: stable <stable@vger.kernel.org>
	Acked-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 91f7d2e89868fcac0e750a28230fdb1ad4512137)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/core/ledtrig-usbport.c
diff --cc drivers/usb/core/ledtrig-usbport.c
index d775ffea20c3,c12ac56606c3..000000000000
--- a/drivers/usb/core/ledtrig-usbport.c
+++ b/drivers/usb/core/ledtrig-usbport.c
@@@ -317,15 -318,14 +317,23 @@@ static void usbport_trig_activate(struc
  	usbport_trig_update_count(usbport_data);
  
  	/* Notifications */
 -	usbport_data->nb.notifier_call = usbport_trig_notify;
 -	led_set_trigger_data(led_cdev, usbport_data);
 +	usbport_data->nb.notifier_call = usbport_trig_notify,
 +	led_cdev->trigger_data = usbport_data;
  	usb_register_notify(&usbport_data->nb);
++<<<<<<< HEAD
 +
 +	led_cdev->activated = true;
 +	return;
 +
 +err_free:
 +	kfree(usbport_data);
++=======
+ 	return 0;
+ 
+ err_free:
+ 	kfree(usbport_data);
+ 	return err;
++>>>>>>> 91f7d2e89868 (USB: leds: fix regression in usbport led trigger)
  }
  
  static void usbport_trig_deactivate(struct led_classdev *led_cdev)
@@@ -340,13 -337,11 +348,15 @@@
  		usbport_trig_remove_port(usbport_data, port);
  	}
  
+ 	sysfs_remove_group(&led_cdev->dev->kobj, &ports_group);
+ 
  	usb_unregister_notify(&usbport_data->nb);
  
 +	sysfs_remove_group(&led_cdev->dev->kobj, &ports_group);
 +
  	kfree(usbport_data);
 +
 +	led_cdev->activated = false;
  }
  
  static struct led_trigger usbport_led_trigger = {
* Unmerged path drivers/usb/core/ledtrig-usbport.c
