perf cpumap: Remove needless includes from cpumap.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 5e51b0bb245d963f5ce750256c504be95201e38c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5e51b0bb.failed

The util/cpumap.h file doesn't use anything in refcount.h not in
debug.h, it needs just a forward reference to 'struct cpu_map_data',
that is defined in util/event.h and cpumap.h was getting indirectly via,
of all things, debug.h

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-mtjww98yptt4ppo6g2blavg5@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 5e51b0bb245d963f5ce750256c504be95201e38c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/cpumap.h
#	tools/perf/util/pmu.c
diff --cc tools/perf/util/cpumap.h
index 1265f0e33920,d0c5bbfd91af..000000000000
--- a/tools/perf/util/cpumap.h
+++ b/tools/perf/util/cpumap.h
@@@ -4,40 -4,30 +4,46 @@@
  
  #include <stdio.h>
  #include <stdbool.h>
++<<<<<<< HEAD
 +#include <linux/refcount.h>
++=======
+ #include <internal/cpumap.h>
+ #include <perf/cpumap.h>
++>>>>>>> 5e51b0bb245d (perf cpumap: Remove needless includes from cpumap.h)
  
  #include "perf.h"
- #include "util/debug.h"
+ 
+ struct cpu_map_data;
  
 -struct perf_cpu_map *perf_cpu_map__empty_new(int nr);
 -struct perf_cpu_map *cpu_map__new_data(struct cpu_map_data *data);
 -size_t cpu_map__snprint(struct perf_cpu_map *map, char *buf, size_t size);
 -size_t cpu_map__snprint_mask(struct perf_cpu_map *map, char *buf, size_t size);
 -size_t cpu_map__fprintf(struct perf_cpu_map *map, FILE *fp);
 +struct cpu_map {
 +	refcount_t refcnt;
 +	int nr;
 +	int map[];
 +};
 +
 +struct cpu_map *cpu_map__new(const char *cpu_list);
 +struct cpu_map *cpu_map__empty_new(int nr);
 +struct cpu_map *cpu_map__dummy_new(void);
 +struct cpu_map *cpu_map__new_data(struct cpu_map_data *data);
 +struct cpu_map *cpu_map__read(FILE *file);
 +size_t cpu_map__snprint(struct cpu_map *map, char *buf, size_t size);
 +size_t cpu_map__snprint_mask(struct cpu_map *map, char *buf, size_t size);
 +size_t cpu_map__fprintf(struct cpu_map *map, FILE *fp);
  int cpu_map__get_socket_id(int cpu);
 -int cpu_map__get_socket(struct perf_cpu_map *map, int idx, void *data);
 +int cpu_map__get_socket(struct cpu_map *map, int idx, void *data);
  int cpu_map__get_die_id(int cpu);
 -int cpu_map__get_die(struct perf_cpu_map *map, int idx, void *data);
 +int cpu_map__get_die(struct cpu_map *map, int idx, void *data);
  int cpu_map__get_core_id(int cpu);
 -int cpu_map__get_core(struct perf_cpu_map *map, int idx, void *data);
 -int cpu_map__build_socket_map(struct perf_cpu_map *cpus, struct perf_cpu_map **sockp);
 -int cpu_map__build_die_map(struct perf_cpu_map *cpus, struct perf_cpu_map **diep);
 -int cpu_map__build_core_map(struct perf_cpu_map *cpus, struct perf_cpu_map **corep);
 -const struct perf_cpu_map *cpu_map__online(void); /* thread unsafe */
 +int cpu_map__get_core(struct cpu_map *map, int idx, void *data);
 +int cpu_map__build_socket_map(struct cpu_map *cpus, struct cpu_map **sockp);
 +int cpu_map__build_die_map(struct cpu_map *cpus, struct cpu_map **diep);
 +int cpu_map__build_core_map(struct cpu_map *cpus, struct cpu_map **corep);
 +const struct cpu_map *cpu_map__online(void); /* thread unsafe */
 +
 +struct cpu_map *cpu_map__get(struct cpu_map *map);
 +void cpu_map__put(struct cpu_map *map);
  
 -static inline int cpu_map__socket(struct perf_cpu_map *sock, int s)
 +static inline int cpu_map__socket(struct cpu_map *sock, int s)
  {
  	if (!sock || s > sock->nr || s < 0)
  		return 0;
diff --cc tools/perf/util/pmu.c
index f32b710347db,9807be6f09bb..000000000000
--- a/tools/perf/util/pmu.c
+++ b/tools/perf/util/pmu.c
@@@ -15,6 -15,8 +15,11 @@@
  #include <api/fs/fs.h>
  #include <locale.h>
  #include <regex.h>
++<<<<<<< HEAD
++=======
+ #include <perf/cpumap.h>
+ #include "debug.h"
++>>>>>>> 5e51b0bb245d (perf cpumap: Remove needless includes from cpumap.h)
  #include "pmu.h"
  #include "parse-events.h"
  #include "cpumap.h"
diff --git a/tools/perf/arch/x86/util/header.c b/tools/perf/arch/x86/util/header.c
index af9a9f2600be..662ecf84a421 100644
--- a/tools/perf/arch/x86/util/header.c
+++ b/tools/perf/arch/x86/util/header.c
@@ -6,6 +6,7 @@
 #include <string.h>
 #include <regex.h>
 
+#include "../../util/debug.h"
 #include "../../util/header.h"
 
 static inline void
diff --git a/tools/perf/tests/mem2node.c b/tools/perf/tests/mem2node.c
index 520cc91af256..f72301892038 100644
--- a/tools/perf/tests/mem2node.c
+++ b/tools/perf/tests/mem2node.c
@@ -3,6 +3,7 @@
 #include <linux/bitmap.h>
 #include <linux/zalloc.h>
 #include "cpumap.h"
+#include "debug.h"
 #include "mem2node.h"
 #include "tests.h"
 
diff --git a/tools/perf/util/cpumap.c b/tools/perf/util/cpumap.c
index 77925b3c8d91..f0da3e39caeb 100644
--- a/tools/perf/util/cpumap.c
+++ b/tools/perf/util/cpumap.c
@@ -2,6 +2,8 @@
 #include <api/fs/fs.h>
 #include "../perf.h"
 #include "cpumap.h"
+#include "debug.h"
+#include "event.h"
 #include <assert.h>
 #include <dirent.h>
 #include <stdio.h>
* Unmerged path tools/perf/util/cpumap.h
diff --git a/tools/perf/util/cputopo.c b/tools/perf/util/cputopo.c
index 64336a280967..0cab91341fc5 100644
--- a/tools/perf/util/cputopo.c
+++ b/tools/perf/util/cputopo.c
@@ -3,11 +3,13 @@
 #include <sys/utsname.h>
 #include <inttypes.h>
 #include <stdlib.h>
+#include <string.h>
 #include <api/fs/fs.h>
 #include <linux/zalloc.h>
 
 #include "cputopo.h"
 #include "cpumap.h"
+#include "debug.h"
 #include "env.h"
 
 #define CORE_SIB_FMT \
diff --git a/tools/perf/util/env.c b/tools/perf/util/env.c
index 9909ec40c6d2..eb3507fe1809 100644
--- a/tools/perf/util/env.c
+++ b/tools/perf/util/env.c
@@ -1,5 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 #include "cpumap.h"
+#include "debug.h"
 #include "env.h"
 #include <linux/ctype.h>
 #include <linux/zalloc.h>
diff --git a/tools/perf/util/mem2node.c b/tools/perf/util/mem2node.c
index cacc2fc4dcbd..14fb9e72aeeb 100644
--- a/tools/perf/util/mem2node.c
+++ b/tools/perf/util/mem2node.c
@@ -2,6 +2,7 @@
 #include <inttypes.h>
 #include <linux/bitmap.h>
 #include <linux/zalloc.h>
+#include "debug.h"
 #include "mem2node.h"
 
 struct phys_entry {
* Unmerged path tools/perf/util/pmu.c
diff --git a/tools/perf/util/svghelper.c b/tools/perf/util/svghelper.c
index 4d2e6c811b98..e73a8748cb19 100644
--- a/tools/perf/util/svghelper.c
+++ b/tools/perf/util/svghelper.c
@@ -18,6 +18,7 @@
 #include <unistd.h>
 #include <string.h>
 #include <linux/bitmap.h>
+#include <linux/string.h>
 #include <linux/time64.h>
 #include <linux/zalloc.h>
 
