dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 82c5de0ab8dbd6035223ad69e76bd8a88a0a9399
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/82c5de0a.failed

All users of dma_declare_coherent want their allocations to be
exclusive, so default to exclusive allocations.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 82c5de0ab8dbd6035223ad69e76bd8a88a0a9399)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/sh/boards/mach-ap325rxa/setup.c
#	arch/sh/boards/mach-kfr2r09/setup.c
#	arch/sh/boards/mach-se/7724/setup.c
#	include/linux/dma-mapping.h
#	kernel/dma/coherent.c
diff --cc arch/sh/boards/mach-ap325rxa/setup.c
index de8393cb7313,7899b4f51fdd..000000000000
--- a/arch/sh/boards/mach-ap325rxa/setup.c
+++ b/arch/sh/boards/mach-ap325rxa/setup.c
@@@ -673,6 -519,21 +673,18 @@@ static int __init ap325rxa_devices_setu
  	i2c_register_board_info(0, ap325rxa_i2c_devices,
  				ARRAY_SIZE(ap325rxa_i2c_devices));
  
++<<<<<<< HEAD
++=======
+ 	/* Initialize CEU platform device separately to map memory first */
+ 	device_initialize(&ap325rxa_ceu_device.dev);
+ 	arch_setup_pdev_archdata(&ap325rxa_ceu_device);
+ 	dma_declare_coherent_memory(&ap325rxa_ceu_device.dev,
+ 			ceu_dma_membase, ceu_dma_membase,
+ 			ceu_dma_membase + CEU_BUFFER_MEMORY_SIZE - 1);
+ 
+ 	platform_device_add(&ap325rxa_ceu_device);
+ 
++>>>>>>> 82c5de0ab8db (dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag)
  	return platform_add_devices(ap325rxa_devices,
  				ARRAY_SIZE(ap325rxa_devices));
  }
diff --cc arch/sh/boards/mach-kfr2r09/setup.c
index 6af7777332fc,b8bf67c86eab..000000000000
--- a/arch/sh/boards/mach-kfr2r09/setup.c
+++ b/arch/sh/boards/mach-kfr2r09/setup.c
@@@ -635,6 -579,35 +635,38 @@@ static int __init kfr2r09_devices_setup
  
  	i2c_register_board_info(0, &kfr2r09_backlight_board_info, 1);
  
++<<<<<<< HEAD
++=======
+ 	/* Set camera clock frequency and register and alias for rj54n1. */
+ 	camera_clk = clk_get(NULL, "video_clk");
+ 	if (!IS_ERR(camera_clk)) {
+ 		clk_set_rate(camera_clk,
+ 			     clk_round_rate(camera_clk, CEU_MCLK_FREQ));
+ 		clk_put(camera_clk);
+ 	}
+ 	clk_add_alias(NULL, "1-0050", "video_clk", NULL);
+ 
+ 	/* set DRVCRB
+ 	 *
+ 	 * use 1.8 V for VccQ_VIO
+ 	 * use 2.85V for VccQ_SR
+ 	 */
+ 	__raw_writew((__raw_readw(DRVCRB) & ~0x0003) | 0x0001, DRVCRB);
+ 
+ 	gpiod_add_lookup_table(&rj54n1_gpios);
+ 
+ 	i2c_register_board_info(1, &kfr2r09_i2c_camera, 1);
+ 
+ 	/* Initialize CEU platform device separately to map memory first */
+ 	device_initialize(&kfr2r09_ceu_device.dev);
+ 	arch_setup_pdev_archdata(&kfr2r09_ceu_device);
+ 	dma_declare_coherent_memory(&kfr2r09_ceu_device.dev,
+ 			ceu_dma_membase, ceu_dma_membase,
+ 			ceu_dma_membase + CEU_BUFFER_MEMORY_SIZE - 1);
+ 
+ 	platform_device_add(&kfr2r09_ceu_device);
+ 
++>>>>>>> 82c5de0ab8db (dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag)
  	return platform_add_devices(kfr2r09_devices,
  				    ARRAY_SIZE(kfr2r09_devices));
  }
diff --cc arch/sh/boards/mach-se/7724/setup.c
index 255952555656,13c2d3ce78f4..000000000000
--- a/arch/sh/boards/mach-se/7724/setup.c
+++ b/arch/sh/boards/mach-se/7724/setup.c
@@@ -934,6 -935,23 +934,26 @@@ static int __init devices_setup(void
  	gpio_request(GPIO_FN_DV_VSYNC, NULL);
  	gpio_request(GPIO_FN_DV_HSYNC, NULL);
  
++<<<<<<< HEAD
++=======
+ 	/* Initialize CEU platform devices separately to map memory first */
+ 	device_initialize(&ms7724se_ceu_devices[0]->dev);
+ 	arch_setup_pdev_archdata(ms7724se_ceu_devices[0]);
+ 	dma_declare_coherent_memory(&ms7724se_ceu_devices[0]->dev,
+ 				    ceu0_dma_membase, ceu0_dma_membase,
+ 				    ceu0_dma_membase +
+ 				    CEU_BUFFER_MEMORY_SIZE - 1);
+ 	platform_device_add(ms7724se_ceu_devices[0]);
+ 
+ 	device_initialize(&ms7724se_ceu_devices[1]->dev);
+ 	arch_setup_pdev_archdata(ms7724se_ceu_devices[1]);
+ 	dma_declare_coherent_memory(&ms7724se_ceu_devices[1]->dev,
+ 				    ceu1_dma_membase, ceu1_dma_membase,
+ 				    ceu1_dma_membase +
+ 				    CEU_BUFFER_MEMORY_SIZE - 1);
+ 	platform_device_add(ms7724se_ceu_devices[1]);
+ 
++>>>>>>> 82c5de0ab8db (dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag)
  	return platform_add_devices(ms7724se_devices,
  				    ARRAY_SIZE(ms7724se_devices));
  }
diff --cc include/linux/dma-mapping.h
index f08f222fef10,70ad15758a70..000000000000
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@@ -759,15 -736,10 +759,19 @@@ static inline int dma_get_cache_alignme
  	return 1;
  }
  
++<<<<<<< HEAD
 +/* flags for the coherent memory api */
 +#define DMA_MEMORY_EXCLUSIVE		0x01
 +
 +#ifdef CONFIG_HAVE_GENERIC_DMA_COHERENT
++=======
+ #ifdef CONFIG_DMA_DECLARE_COHERENT
++>>>>>>> 82c5de0ab8db (dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag)
  int dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,
- 				dma_addr_t device_addr, size_t size, int flags);
+ 				dma_addr_t device_addr, size_t size);
  void dma_release_declared_memory(struct device *dev);
 +void *dma_mark_declared_memory_occupied(struct device *dev,
 +					dma_addr_t device_addr, size_t size);
  #else
  static inline int
  dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,
diff --cc kernel/dma/coherent.c
index bf0430f352ad,29fd6590dc1e..000000000000
--- a/kernel/dma/coherent.c
+++ b/kernel/dma/coherent.c
@@@ -38,12 -37,12 +37,12 @@@ static inline dma_addr_t dma_get_device
  		return mem->device_base;
  }
  
- static int dma_init_coherent_memory(
- 	phys_addr_t phys_addr, dma_addr_t device_addr, size_t size, int flags,
- 	struct dma_coherent_mem **mem)
+ static int dma_init_coherent_memory(phys_addr_t phys_addr,
+ 		dma_addr_t device_addr, size_t size,
+ 		struct dma_coherent_mem **mem)
  {
  	struct dma_coherent_mem *dma_mem = NULL;
 -	void *mem_base = NULL;
 +	void __iomem *mem_base = NULL;
  	int pages = size >> PAGE_SHIFT;
  	int bitmap_size = BITS_TO_LONGS(pages) * sizeof(long);
  	int ret;
@@@ -213,20 -187,11 +211,25 @@@ int dma_alloc_from_dev_coherent(struct 
  	if (!mem)
  		return 0;
  
++<<<<<<< HEAD
 +	*ret = __dma_alloc_from_coherent(dev, mem, size, dma_handle);
 +	if (*ret)
 +		return 1;
 +
 +	/*
 +	 * In the case where the allocation can not be satisfied from the
 +	 * per-device area, try to fall back to generic memory if the
 +	 * constraints allow it.
 +	 */
 +	return mem->flags & DMA_MEMORY_EXCLUSIVE;
++=======
+ 	*ret = __dma_alloc_from_coherent(mem, size, dma_handle);
+ 	return 1;
++>>>>>>> 82c5de0ab8db (dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag)
  }
  
 -void *dma_alloc_from_global_coherent(ssize_t size, dma_addr_t *dma_handle)
 +void *dma_alloc_from_global_coherent(struct device *dev, ssize_t size,
 +				     dma_addr_t *dma_handle)
  {
  	if (!dma_coherent_default_memory)
  		return NULL;
diff --git a/Documentation/DMA-API.txt b/Documentation/DMA-API.txt
index 4f0f1a98c320..74fdbeb18c79 100644
--- a/Documentation/DMA-API.txt
+++ b/Documentation/DMA-API.txt
@@ -574,8 +574,7 @@ boundaries when doing this.
 
 	int
 	dma_declare_coherent_memory(struct device *dev, phys_addr_t phys_addr,
-				    dma_addr_t device_addr, size_t size, int
-				    flags)
+				    dma_addr_t device_addr, size_t size);
 
 Declare region of memory to be handed out by dma_alloc_coherent() when
 it's asked for coherent memory for this device.
@@ -589,12 +588,6 @@ dma_addr_t in dma_alloc_coherent()).
 
 size is the size of the area (must be multiples of PAGE_SIZE).
 
-flags can be ORed together and are:
-
-- DMA_MEMORY_EXCLUSIVE - only allocate memory from the declared regions.
-  Do not allow dma_alloc_coherent() to fall back to system memory when
-  it's out of memory in the declared region.
-
 As a simplification for the platforms, only *one* such region of
 memory may be declared per device.
 
diff --git a/arch/arm/mach-imx/mach-imx27_visstrim_m10.c b/arch/arm/mach-imx/mach-imx27_visstrim_m10.c
index 5169dfba9718..07d4fcfe5c2e 100644
--- a/arch/arm/mach-imx/mach-imx27_visstrim_m10.c
+++ b/arch/arm/mach-imx/mach-imx27_visstrim_m10.c
@@ -258,8 +258,7 @@ static void __init visstrim_analog_camera_init(void)
 		return;
 
 	dma_declare_coherent_memory(&pdev->dev, mx2_camera_base,
-				    mx2_camera_base, MX2_CAMERA_BUF_SIZE,
-				    DMA_MEMORY_EXCLUSIVE);
+				    mx2_camera_base, MX2_CAMERA_BUF_SIZE);
 }
 
 static void __init visstrim_reserve(void)
@@ -445,8 +444,7 @@ static void __init visstrim_coda_init(void)
 	dma_declare_coherent_memory(&pdev->dev,
 				    mx2_camera_base + MX2_CAMERA_BUF_SIZE,
 				    mx2_camera_base + MX2_CAMERA_BUF_SIZE,
-				    MX2_CAMERA_BUF_SIZE,
-				    DMA_MEMORY_EXCLUSIVE);
+				    MX2_CAMERA_BUF_SIZE);
 }
 
 /* DMA deinterlace */
@@ -465,8 +463,7 @@ static void __init visstrim_deinterlace_init(void)
 	dma_declare_coherent_memory(&pdev->dev,
 				    mx2_camera_base + 2 * MX2_CAMERA_BUF_SIZE,
 				    mx2_camera_base + 2 * MX2_CAMERA_BUF_SIZE,
-				    MX2_CAMERA_BUF_SIZE,
-				    DMA_MEMORY_EXCLUSIVE);
+				    MX2_CAMERA_BUF_SIZE);
 }
 
 /* Emma-PrP for format conversion */
@@ -485,8 +482,7 @@ static void __init visstrim_emmaprp_init(void)
 	 */
 	ret = dma_declare_coherent_memory(&pdev->dev,
 				mx2_camera_base, mx2_camera_base,
-				MX2_CAMERA_BUF_SIZE,
-				DMA_MEMORY_EXCLUSIVE);
+				MX2_CAMERA_BUF_SIZE);
 	if (ret)
 		pr_err("Failed to declare memory for emmaprp\n");
 }
diff --git a/arch/arm/mach-imx/mach-mx31moboard.c b/arch/arm/mach-imx/mach-mx31moboard.c
index 643a3d749703..fe50f4cf00a7 100644
--- a/arch/arm/mach-imx/mach-mx31moboard.c
+++ b/arch/arm/mach-imx/mach-mx31moboard.c
@@ -475,8 +475,7 @@ static int __init mx31moboard_init_cam(void)
 
 	ret = dma_declare_coherent_memory(&pdev->dev,
 					  mx3_camera_base, mx3_camera_base,
-					  MX3_CAMERA_BUF_SIZE,
-					  DMA_MEMORY_EXCLUSIVE);
+					  MX3_CAMERA_BUF_SIZE);
 	if (ret)
 		goto err;
 
* Unmerged path arch/sh/boards/mach-ap325rxa/setup.c
diff --git a/arch/sh/boards/mach-ecovec24/setup.c b/arch/sh/boards/mach-ecovec24/setup.c
index ffddec161292..e914c56a2d21 100644
--- a/arch/sh/boards/mach-ecovec24/setup.c
+++ b/arch/sh/boards/mach-ecovec24/setup.c
@@ -1416,8 +1416,7 @@ static int __init arch_setup(void)
 	dma_declare_coherent_memory(&ecovec_ceu_devices[0]->dev,
 				    ceu0_dma_membase, ceu0_dma_membase,
 				    ceu0_dma_membase +
-				    CEU_BUFFER_MEMORY_SIZE - 1,
-				    DMA_MEMORY_EXCLUSIVE);
+				    CEU_BUFFER_MEMORY_SIZE - 1);
 	platform_device_add(ecovec_ceu_devices[0]);
 
 	device_initialize(&ecovec_ceu_devices[1]->dev);
@@ -1425,8 +1424,7 @@ static int __init arch_setup(void)
 	dma_declare_coherent_memory(&ecovec_ceu_devices[1]->dev,
 				    ceu1_dma_membase, ceu1_dma_membase,
 				    ceu1_dma_membase +
-				    CEU_BUFFER_MEMORY_SIZE - 1,
-				    DMA_MEMORY_EXCLUSIVE);
+				    CEU_BUFFER_MEMORY_SIZE - 1);
 	platform_device_add(ecovec_ceu_devices[1]);
 
 	gpiod_add_lookup_table(&cn12_power_gpiod_table);
* Unmerged path arch/sh/boards/mach-kfr2r09/setup.c
diff --git a/arch/sh/boards/mach-migor/setup.c b/arch/sh/boards/mach-migor/setup.c
index 3d7d0046cf49..0c6b2d7c4fc8 100644
--- a/arch/sh/boards/mach-migor/setup.c
+++ b/arch/sh/boards/mach-migor/setup.c
@@ -605,9 +605,8 @@ static int __init migor_devices_setup(void)
 	device_initialize(&migor_ceu_device.dev);
 	arch_setup_pdev_archdata(&migor_ceu_device);
 	dma_declare_coherent_memory(&migor_ceu_device.dev,
-				    ceu_dma_membase, ceu_dma_membase,
-				    ceu_dma_membase + CEU_BUFFER_MEMORY_SIZE - 1,
-				    DMA_MEMORY_EXCLUSIVE);
+			ceu_dma_membase, ceu_dma_membase,
+			ceu_dma_membase + CEU_BUFFER_MEMORY_SIZE - 1);
 
 	platform_device_add(&migor_ceu_device);
 
* Unmerged path arch/sh/boards/mach-se/7724/setup.c
diff --git a/arch/sh/drivers/pci/fixups-dreamcast.c b/arch/sh/drivers/pci/fixups-dreamcast.c
index 48aaefd8f5d6..bf75274d8135 100644
--- a/arch/sh/drivers/pci/fixups-dreamcast.c
+++ b/arch/sh/drivers/pci/fixups-dreamcast.c
@@ -66,8 +66,7 @@ static void gapspci_fixup_resources(struct pci_dev *dev)
 		BUG_ON(dma_declare_coherent_memory(&dev->dev,
 						res.start,
 						region.start,
-						resource_size(&res),
-						DMA_MEMORY_EXCLUSIVE));
+						resource_size(&res)));
 		break;
 	default:
 		printk("PCI: Failed resource fixup\n");
diff --git a/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c b/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c
index 9897213f2618..91fddcad519c 100644
--- a/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c
+++ b/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c
@@ -1712,8 +1712,7 @@ static int sh_mobile_ceu_probe(struct platform_device *pdev)
 	if (res) {
 		err = dma_declare_coherent_memory(&pdev->dev, res->start,
 						  res->start,
-						  resource_size(res),
-						  DMA_MEMORY_EXCLUSIVE);
+						  resource_size(res));
 		if (err) {
 			dev_err(&pdev->dev, "Unable to declare CEU memory.\n");
 			return err;
diff --git a/drivers/usb/host/ohci-sm501.c b/drivers/usb/host/ohci-sm501.c
index c9233cddf9a2..c26228c25f99 100644
--- a/drivers/usb/host/ohci-sm501.c
+++ b/drivers/usb/host/ohci-sm501.c
@@ -126,8 +126,7 @@ static int ohci_hcd_sm501_drv_probe(struct platform_device *pdev)
 
 	retval = dma_declare_coherent_memory(dev, mem->start,
 					 mem->start - mem->parent->start,
-					 resource_size(mem),
-					 DMA_MEMORY_EXCLUSIVE);
+					 resource_size(mem));
 	if (retval) {
 		dev_err(dev, "cannot declare coherent memory\n");
 		goto err1;
diff --git a/drivers/usb/host/ohci-tmio.c b/drivers/usb/host/ohci-tmio.c
index a631dbb369d7..f88a0370659f 100644
--- a/drivers/usb/host/ohci-tmio.c
+++ b/drivers/usb/host/ohci-tmio.c
@@ -225,7 +225,7 @@ static int ohci_hcd_tmio_drv_probe(struct platform_device *dev)
 	}
 
 	ret = dma_declare_coherent_memory(&dev->dev, sram->start, sram->start,
-				resource_size(sram), DMA_MEMORY_EXCLUSIVE);
+				resource_size(sram));
 	if (ret)
 		goto err_dma_declare;
 
* Unmerged path include/linux/dma-mapping.h
* Unmerged path kernel/dma/coherent.c
