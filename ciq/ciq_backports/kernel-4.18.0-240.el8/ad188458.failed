netdevsim: Add devlink-trap policer support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ido Schimmel <idosch@mellanox.com>
commit ad188458d0123d4e116f14f7eab73d644aed149f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ad188458.failed

Register three dummy packet trap policers with devlink and implement
callbacks to change their parameters and read their counters.

This will be used later on in the series to test the devlink-trap
policer infrastructure.

v2:
* Remove check about burst size being a power of 2 and instead add a
  debugfs knob to fail the operation
* Provide max/min rate/burst size when registering policers and remove
  the validity checks from nsim_dev_devlink_trap_policer_set()

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Reviewed-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: Jakub Kicinski <kuba@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ad188458d0123d4e116f14f7eab73d644aed149f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/netdevsim/dev.c
#	drivers/net/netdevsim/netdevsim.h
diff --cc drivers/net/netdevsim/dev.c
index 2865d9b5336b,21341e592467..000000000000
--- a/drivers/net/netdevsim/dev.c
+++ b/drivers/net/netdevsim/dev.c
@@@ -88,8 -204,23 +88,28 @@@ static int nsim_dev_debugfs_init(struc
  			   &nsim_dev->max_macs);
  	debugfs_create_bool("test1", 0600, nsim_dev->ddir,
  			    &nsim_dev->test1);
++<<<<<<< HEAD
 +	debugfs_create_file("take_snapshot", 0200, nsim_dev->ddir, nsim_dev,
 +			    &nsim_dev_take_snapshot_fops);
++=======
+ 	nsim_dev->take_snapshot = debugfs_create_file("take_snapshot",
+ 						      0200,
+ 						      nsim_dev->ddir,
+ 						      nsim_dev,
+ 						&nsim_dev_take_snapshot_fops);
+ 	debugfs_create_bool("dont_allow_reload", 0600, nsim_dev->ddir,
+ 			    &nsim_dev->dont_allow_reload);
+ 	debugfs_create_bool("fail_reload", 0600, nsim_dev->ddir,
+ 			    &nsim_dev->fail_reload);
+ 	debugfs_create_file("trap_flow_action_cookie", 0600, nsim_dev->ddir,
+ 			    nsim_dev, &nsim_dev_trap_fa_cookie_fops);
+ 	debugfs_create_bool("fail_trap_policer_set", 0600,
+ 			    nsim_dev->ddir,
+ 			    &nsim_dev->fail_trap_policer_set);
+ 	debugfs_create_bool("fail_trap_policer_counter_get", 0600,
+ 			    nsim_dev->ddir,
+ 			    &nsim_dev->fail_trap_policer_counter_get);
++>>>>>>> ad188458d012 (netdevsim: Add devlink-trap policer support)
  	return 0;
  }
  
@@@ -340,9 -430,27 +361,27 @@@ enum 
  #define NSIM_TRAP_DRIVER_EXCEPTION(_id, _group_id)			      \
  	DEVLINK_TRAP_DRIVER(EXCEPTION, TRAP, NSIM_TRAP_ID_##_id,	      \
  			    NSIM_TRAP_NAME_##_id,			      \
 -			    DEVLINK_TRAP_GROUP_GENERIC_ID_##_group_id,	      \
 +			    DEVLINK_TRAP_GROUP_GENERIC(_group_id),	      \
  			    NSIM_TRAP_METADATA)
  
+ #define NSIM_DEV_TRAP_POLICER_MIN_RATE	1
+ #define NSIM_DEV_TRAP_POLICER_MAX_RATE	8000
+ #define NSIM_DEV_TRAP_POLICER_MIN_BURST	8
+ #define NSIM_DEV_TRAP_POLICER_MAX_BURST	65536
+ 
+ #define NSIM_TRAP_POLICER(_id, _rate, _burst)				      \
+ 	DEVLINK_TRAP_POLICER(_id, _rate, _burst,			      \
+ 			     NSIM_DEV_TRAP_POLICER_MAX_RATE,		      \
+ 			     NSIM_DEV_TRAP_POLICER_MIN_RATE,		      \
+ 			     NSIM_DEV_TRAP_POLICER_MAX_BURST,		      \
+ 			     NSIM_DEV_TRAP_POLICER_MIN_BURST)
+ 
+ static const struct devlink_trap_policer nsim_trap_policers_arr[] = {
+ 	NSIM_TRAP_POLICER(1, 1000, 128),
+ 	NSIM_TRAP_POLICER(2, 2000, 256),
+ 	NSIM_TRAP_POLICER(3, 3000, 512),
+ };
+ 
  static const struct devlink_trap_group nsim_trap_groups_arr[] = {
  	DEVLINK_TRAP_GROUP_GENERIC(L2_DROPS),
  	DEVLINK_TRAP_GROUP_GENERIC(L3_DROPS),
diff --cc drivers/net/netdevsim/netdevsim.h
index 4035af41eca9,3d37df5057e8..000000000000
--- a/drivers/net/netdevsim/netdevsim.h
+++ b/drivers/net/netdevsim/netdevsim.h
@@@ -161,7 -174,14 +161,15 @@@ struct nsim_dev 
  	bool fw_update_status;
  	u32 max_macs;
  	bool test1;
 -	bool dont_allow_reload;
 -	bool fail_reload;
  	struct devlink_region *dummy_region;
++<<<<<<< HEAD
++=======
+ 	struct nsim_dev_health health;
+ 	struct flow_action_cookie *fa_cookie;
+ 	spinlock_t fa_cookie_lock; /* protects fa_cookie */
+ 	bool fail_trap_policer_set;
+ 	bool fail_trap_policer_counter_get;
++>>>>>>> ad188458d012 (netdevsim: Add devlink-trap policer support)
  };
  
  static inline struct net *nsim_dev_net(struct nsim_dev *nsim_dev)
* Unmerged path drivers/net/netdevsim/dev.c
* Unmerged path drivers/net/netdevsim/netdevsim.h
