PM: QoS: Adjust pm_qos_request() signature and reorder pm_qos.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit e033b6c175a32870a2f7cd3741c0d48c858c2d04
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/e033b6c1.failed

Change the return type of pm_qos_request() to be the same as the
one of pm_qos_read_value() called by it internally and stop exporting
it to modules (because its only caller, cpuidle, is not modular).

Also move the pm_qos_read_value() header away from the CPU latency
QoS API function headers in pm_qos.h (because it technically does
not belong to that API).

No intentional functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
	Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org>
	Tested-by: Amit Kucheria <amit.kucheria@linaro.org>
(cherry picked from commit e033b6c175a32870a2f7cd3741c0d48c858c2d04)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pm_qos.h
diff --cc include/linux/pm_qos.h
index 7df56233f298,3c4bee29ecda..000000000000
--- a/include/linux/pm_qos.h
+++ b/include/linux/pm_qos.h
@@@ -118,12 -149,8 +120,15 @@@ void pm_qos_add_request(struct pm_qos_r
  void pm_qos_update_request(struct pm_qos_request *req,
  			   s32 new_value);
  void pm_qos_remove_request(struct pm_qos_request *req);
++<<<<<<< HEAD
 +
 +int pm_qos_request(int pm_qos_class);
 +int pm_qos_add_notifier(int pm_qos_class, struct notifier_block *notifier);
 +int pm_qos_remove_notifier(int pm_qos_class, struct notifier_block *notifier);
++=======
+ s32 pm_qos_request(int pm_qos_class);
++>>>>>>> e033b6c175a3 (PM: QoS: Adjust pm_qos_request() signature and reorder pm_qos.h)
  int pm_qos_request_active(struct pm_qos_request *req);
- s32 pm_qos_read_value(struct pm_qos_constraints *c);
  
  #ifdef CONFIG_PM
  enum pm_qos_flags_status __dev_pm_qos_flags(struct device *dev, s32 mask);
* Unmerged path include/linux/pm_qos.h
diff --git a/kernel/power/qos.c b/kernel/power/qos.c
index 61dc8358d615..0b141106e48e 100644
--- a/kernel/power/qos.c
+++ b/kernel/power/qos.c
@@ -251,11 +251,10 @@ bool pm_qos_update_flags(struct pm_qos_flags *pqf,
  *
  * This function returns the current target value.
  */
-int pm_qos_request(int pm_qos_class)
+s32 pm_qos_request(int pm_qos_class)
 {
 	return pm_qos_read_value(pm_qos_array[pm_qos_class]->constraints);
 }
-EXPORT_SYMBOL_GPL(pm_qos_request);
 
 int pm_qos_request_active(struct pm_qos_request *req)
 {
