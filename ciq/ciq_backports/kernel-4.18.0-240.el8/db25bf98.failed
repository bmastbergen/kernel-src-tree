perf trace: Honour --max-events in processing syscalls:sys_enter_*

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit db25bf98a3861225bc0b2138cf665097141c72ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/db25bf98.failed

We were doing this only at the sys_exit syscall tracepoint, as for
strace-like we count the pair of sys_enter and sys_exit as one event,
but when asking specifically for a the syscalls:sys_enter_NAME
tracepoint we need to count each of those as an event.

I.e. things like:

  # perf trace --max-events=4 -e syscalls:sys_enter_lseek
     0.000 pool/2242 syscalls:sys_enter_lseek(fd: 14<anon_inode:[timerfd]>, offset: 0, whence: CUR)
     0.034 pool/2242 syscalls:sys_enter_lseek(fd: 15<anon_inode:[timerfd]>, offset: 0, whence: CUR)
     0.051 pool/2242 syscalls:sys_enter_lseek(fd: 16<anon_inode:[timerfd]>, offset: 0, whence: CUR)
  2307.900 sshd/30800 syscalls:sys_enter_lseek(fd: 3</usr/lib64/libsystemd.so.0.25.0>, offset: 9032, whence: SET)
  #

Were going on forever, since we only had sys_enter events.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Luis Cláudio Gonçalves <lclaudio@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-0ob1dky1a9ijlfrfhxyl40wr@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit db25bf98a3861225bc0b2138cf665097141c72ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index d11441fd591b,1aaf7b28eec4..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -2559,14 -2720,12 +2559,23 @@@ static int trace__event_handler(struct 
  	} else if (evsel->tp_format) {
  		if (strncmp(evsel->tp_format->name, "sys_enter_", 10) ||
  		    trace__fprintf_sys_enter(trace, evsel, sample)) {
++<<<<<<< HEAD
 +			event_format__fprintf(evsel->tp_format, sample->cpu,
 +					      sample->raw_data, sample->raw_size,
 +					      trace->output);
 +			++trace->nr_events_printed;
 +
 +			if (evsel->max_events != ULONG_MAX && ++evsel->nr_events_printed == evsel->max_events) {
 +				perf_evsel__disable(evsel);
 +				perf_evsel__close(evsel);
++=======
+ 			if (trace->libtraceevent_print) {
+ 				event_format__fprintf(evsel->tp_format, sample->cpu,
+ 						      sample->raw_data, sample->raw_size,
+ 						      trace->output);
+ 			} else {
+ 				trace__fprintf_tp_fields(trace, evsel, sample, thread, NULL, 0);
++>>>>>>> db25bf98a386 (perf trace: Honour --max-events in processing syscalls:sys_enter_*)
  			}
  		}
  	}
* Unmerged path tools/perf/builtin-trace.c
