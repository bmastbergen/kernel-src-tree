tipc: fix use-after-free in tipc_disc_rcv()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Tuong Lien <tuong.t.lien@dektech.com.au>
commit 31e4ccc99eda8a5a7e6902c98bee6e78ffd3edb9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/31e4ccc9.failed

In the function 'tipc_disc_rcv()', the 'msg_peer_net_hash()' is called
to read the header data field but after the message skb has been freed,
that might result in a garbage value...

This commit fixes it by defining a new local variable to store the data
first, just like the other header fields' handling.

Fixes: f73b12812a3d ("tipc: improve throughput between nodes in netns")
	Acked-by: Jon Maloy <jon.maloy@ericsson.com>
	Signed-off-by: Tuong Lien <tuong.t.lien@dektech.com.au>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 31e4ccc99eda8a5a7e6902c98bee6e78ffd3edb9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tipc/discover.c
diff --cc net/tipc/discover.c
index c138d68e8a69,bfe43da127c0..000000000000
--- a/net/tipc/discover.c
+++ b/net/tipc/discover.c
@@@ -241,7 -243,7 +242,11 @@@ void tipc_disc_rcv(struct net *net, str
  		return;
  	if (!tipc_in_scope(legacy, b->domain, src))
  		return;
++<<<<<<< HEAD
 +	tipc_node_check_dest(net, src, peer_id, b, caps, signature,
++=======
+ 	tipc_node_check_dest(net, src, peer_id, b, caps, signature, pnet_hash,
++>>>>>>> 31e4ccc99eda (tipc: fix use-after-free in tipc_disc_rcv())
  			     &maddr, &respond, &dupl_addr);
  	if (dupl_addr)
  		disc_dupl_alert(b, src, &maddr);
* Unmerged path net/tipc/discover.c
