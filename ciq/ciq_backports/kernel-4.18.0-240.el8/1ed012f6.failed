netfilter: nf_tables: bogus EOPNOTSUPP on basechain update

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 1ed012f6fd83e7ee7efd22e2c32f23efff015b30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/1ed012f6.failed

Userspace never includes the NFT_BASE_CHAIN flag, this flag is inferred
from the NFTA_CHAIN_HOOK atribute. The chain update path does not allow
to update flags at this stage, the existing sanity check bogusly hits
EOPNOTSUPP in the basechain case if the offload flag is set on.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 1ed012f6fd83e7ee7efd22e2c32f23efff015b30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index 3949c819cc35,712a428509ad..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -1980,10 -1922,11 +1980,15 @@@ static int nf_tables_newchain(struct ne
  		if (nlh->nlmsg_flags & NLM_F_REPLACE)
  			return -EOPNOTSUPP;
  
++<<<<<<< HEAD
 +		return nf_tables_updchain(&ctx, genmask, policy, create);
++=======
+ 		flags |= chain->flags & NFT_BASE_CHAIN;
+ 		return nf_tables_updchain(&ctx, genmask, policy, flags);
++>>>>>>> 1ed012f6fd83 (netfilter: nf_tables: bogus EOPNOTSUPP on basechain update)
  	}
  
 -	return nf_tables_addchain(&ctx, family, genmask, policy, flags);
 +	return nf_tables_addchain(&ctx, family, genmask, policy, create);
  }
  
  static int nf_tables_delchain(struct net *net, struct sock *nlsk,
* Unmerged path net/netfilter/nf_tables_api.c
