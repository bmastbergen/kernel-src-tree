drm/amdgpu/display: Fix Pollock Variant Detection

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Aly-Tawfik <altawfik@amd.com>
commit 6cc47f3f96345fb21eaff8996d31939ffbda0f58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6cc47f3f.failed

Problem Description:
Currently we are checking internal fused rev id with pci rev id. However, fused
internal rev id is the same on all raven2 parts (in which Dali and Pollock were
based on too), thus Pollock detection fails

Fix:
use the pci rev to preform the detection for bandwidth calculations.

	Reviewed-by: Feifei Xu <Feifei.Xu@amd.com>
	Signed-off-by: Aly-Tawfik <altawfik@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 6cc47f3f96345fb21eaff8996d31939ffbda0f58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
#	drivers/gpu/drm/amd/display/include/dal_asic_id.h
diff --cc drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
index 38365dd911a3,3960a8db94cb..000000000000
--- a/drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
+++ b/drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
@@@ -705,6 -702,30 +705,33 @@@ static void hack_bounding_box(struct dc
  		hack_force_pipe_split(v, context->streams[0]->timing.pix_clk_100hz);
  }
  
++<<<<<<< HEAD
++=======
+ 
+ unsigned int get_highest_allowed_voltage_level(uint32_t hw_internal_rev, uint32_t pci_revision_id)
+ {
+ 	/* for low power RV2 variants, the highest voltage level we want is 0 */
+ 	if (ASICREV_IS_RAVEN2(hw_internal_rev))
+ 		switch (pci_revision_id) {
+ 		case PRID_DALI_DE:
+ 		case PRID_DALI_DF:
+ 		case PRID_DALI_E3:
+ 		case PRID_DALI_E4:
+ 		case PRID_POLLOCK_94:
+ 		case PRID_POLLOCK_95:
+ 		case PRID_POLLOCK_E9:
+ 		case PRID_POLLOCK_EA:
+ 		case PRID_POLLOCK_EB:
+ 			return 0;
+ 		default:
+ 			break;
+ 		}
+ 
+ 	/* we are ok with all levels */
+ 	return 4;
+ }
+ 
++>>>>>>> 6cc47f3f9634 (drm/amdgpu/display: Fix Pollock Variant Detection)
  bool dcn_validate_bandwidth(
  		struct dc *dc,
  		struct dc_state *context,
diff --cc drivers/gpu/drm/amd/display/include/dal_asic_id.h
index 887e6a8597c4,8a87d0ed90ae..000000000000
--- a/drivers/gpu/drm/amd/display/include/dal_asic_id.h
+++ b/drivers/gpu/drm/amd/display/include/dal_asic_id.h
@@@ -136,14 -136,25 +136,26 @@@
  #define RAVEN2_A0 0x81
  #define RAVEN1_F0 0xF0
  #define RAVEN_UNKNOWN 0xFF
 -#ifndef ASICREV_IS_RAVEN
 -#define ASICREV_IS_RAVEN(eChipRev) ((eChipRev >= RAVEN_A0) && eChipRev < RAVEN_UNKNOWN)
 -#endif
 -#define PRID_DALI_DE 0xDE
 -#define PRID_DALI_DF 0xDF
 -#define PRID_DALI_E3 0xE3
 -#define PRID_DALI_E4 0xE4
  
++<<<<<<< HEAD
 +#define ASICREV_IS_RAVEN(eChipRev) ((eChipRev >= RAVEN_A0) && eChipRev < RAVEN_UNKNOWN)
++=======
+ #define PRID_POLLOCK_94 0x94
+ #define PRID_POLLOCK_95 0x95
+ #define PRID_POLLOCK_E9 0xE9
+ #define PRID_POLLOCK_EA 0xEA
+ #define PRID_POLLOCK_EB 0xEB
+ 
++>>>>>>> 6cc47f3f9634 (drm/amdgpu/display: Fix Pollock Variant Detection)
  #define ASICREV_IS_PICASSO(eChipRev) ((eChipRev >= PICASSO_A0) && (eChipRev < RAVEN2_A0))
 -#ifndef ASICREV_IS_RAVEN2
 -#define ASICREV_IS_RAVEN2(eChipRev) ((eChipRev >= RAVEN2_A0) && (eChipRev < RENOIR_A0))
 -#endif
 +#define ASICREV_IS_RAVEN2(eChipRev) ((eChipRev >= RAVEN2_A0) && (eChipRev < 0xF0))
 +
 +
  #define ASICREV_IS_RV1_F0(eChipRev) ((eChipRev >= RAVEN1_F0) && (eChipRev < RAVEN_UNKNOWN))
++<<<<<<< HEAD
 +
++=======
++>>>>>>> 6cc47f3f9634 (drm/amdgpu/display: Fix Pollock Variant Detection)
  
  #define FAMILY_RV 142 /* DCN 1*/
  
* Unmerged path drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
* Unmerged path drivers/gpu/drm/amd/display/include/dal_asic_id.h
