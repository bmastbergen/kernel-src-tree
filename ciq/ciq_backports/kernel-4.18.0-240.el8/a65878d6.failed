net: openvswitch: fixes potential deadlock in dp cleanup code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] openvswitch: fixes potential deadlock in dp cleanup code (Eelco Chaudron) [1845662]
Rebuild_FUZZ: 95.73%
commit-author Eelco Chaudron <echaudro@redhat.com>
commit a65878d6f00bb2d791348ae90dcc2ede1dbe2b91
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a65878d6.failed

The previous patch introduced a deadlock, this patch fixes it by making
sure the work is canceled without holding the global ovs lock. This is
done by moving the reorder processing one layer up to the netns level.

Fixes: eac87c413bf9 ("net: openvswitch: reorder masks array based on usage")
	Reported-by: syzbot+2c4ff3614695f75ce26c@syzkaller.appspotmail.com
	Reported-by: syzbot+bad6507e5db05017b008@syzkaller.appspotmail.com
	Reviewed-by: Paolo <pabeni@redhat.com>
	Signed-off-by: Eelco Chaudron <echaudro@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a65878d6f00bb2d791348ae90dcc2ede1dbe2b91)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/datapath.c
#	net/openvswitch/datapath.h
diff --cc net/openvswitch/datapath.c
index 3529e9085411,6b6822f82f70..000000000000
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@@ -2333,6 -2340,23 +2333,26 @@@ out
  	return skb->len;
  }
  
++<<<<<<< HEAD
++=======
+ static void ovs_dp_masks_rebalance(struct work_struct *work)
+ {
+ 	struct ovs_net *ovs_net = container_of(work, struct ovs_net,
+ 					       masks_rebalance.work);
+ 	struct datapath *dp;
+ 
+ 	ovs_lock();
+ 
+ 	list_for_each_entry(dp, &ovs_net->dps, list_node)
+ 		ovs_flow_masks_rebalance(&dp->table);
+ 
+ 	ovs_unlock();
+ 
+ 	schedule_delayed_work(&ovs_net->masks_rebalance,
+ 			      msecs_to_jiffies(DP_MASKS_REBALANCE_INTERVAL));
+ }
+ 
++>>>>>>> a65878d6f00b (net: openvswitch: fixes potential deadlock in dp cleanup code)
  static const struct nla_policy vport_policy[OVS_VPORT_ATTR_MAX + 1] = {
  	[OVS_VPORT_ATTR_NAME] = { .type = NLA_NUL_STRING, .len = IFNAMSIZ - 1 },
  	[OVS_VPORT_ATTR_STATS] = { .len = sizeof(struct ovs_vport_stats) },
diff --cc net/openvswitch/datapath.h
index c1208376e870,24fcec22fde2..000000000000
--- a/net/openvswitch/datapath.h
+++ b/net/openvswitch/datapath.h
@@@ -95,7 -83,7 +95,11 @@@ struct datapath 
  	u32 max_headroom;
  
  	/* Switch meters. */
++<<<<<<< HEAD
 +	struct hlist_head *meters;
++=======
+ 	struct dp_meter_table meter_tbl;
++>>>>>>> a65878d6f00b (net: openvswitch: fixes potential deadlock in dp cleanup code)
  };
  
  /**
* Unmerged path net/openvswitch/datapath.c
* Unmerged path net/openvswitch/datapath.h
