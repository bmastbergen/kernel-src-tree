Bluetooth: fix off by one in err_data_reporting cmd masks.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] Bluetooth: fix off by one in err_data_reporting cmd masks (Gopal Tiwari) [1838924]
Rebuild_FUZZ: 99.13%
commit-author Alain Michaud <alainm@chromium.org>
commit 8a5956197d7eb7a0cbb5b4271111d1bf6e17f25c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8a595619.failed

This change fixes the off by one error in the erroneous command bit
masks which can lead to the erroneous data commands being sent to a
controller that doesn't support them.

	Signed-off-by: Alain Michaud <alainm@chromium.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 8a5956197d7eb7a0cbb5b4271111d1bf6e17f25c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_core.c
diff --cc net/bluetooth/hci_core.c
index 2d71e1f91ae8,196edc039b8e..000000000000
--- a/net/bluetooth/hci_core.c
+++ b/net/bluetooth/hci_core.c
@@@ -602,6 -603,9 +602,12 @@@ static int hci_init3_req(struct hci_req
  	if (hdev->commands[8] & 0x01)
  		hci_req_add(req, HCI_OP_READ_PAGE_SCAN_ACTIVITY, 0, NULL);
  
++<<<<<<< HEAD
++=======
+ 	if (hdev->commands[18] & 0x04)
+ 		hci_req_add(req, HCI_OP_READ_DEF_ERR_DATA_REPORTING, 0, NULL);
+ 
++>>>>>>> 8a5956197d7e (Bluetooth: fix off by one in err_data_reporting cmd masks.)
  	/* Some older Broadcom based Bluetooth 1.2 controllers do not
  	 * support the Read Page Scan Type command. Check support for
  	 * this command in the bit mask of supported commands.
@@@ -789,6 -841,26 +795,29 @@@ static int hci_init4_req(struct hci_req
  			    sizeof(support), &support);
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* Set erroneous data reporting if supported to the wideband speech
+ 	 * setting value
+ 	 */
+ 	if (hdev->commands[18] & 0x08) {
+ 		bool enabled = hci_dev_test_flag(hdev,
+ 						 HCI_WIDEBAND_SPEECH_ENABLED);
+ 
+ 		if (enabled !=
+ 		    (hdev->err_data_reporting == ERR_DATA_REPORTING_ENABLED)) {
+ 			struct hci_cp_write_def_err_data_reporting cp;
+ 
+ 			cp.err_data_reporting = enabled ?
+ 						ERR_DATA_REPORTING_ENABLED :
+ 						ERR_DATA_REPORTING_DISABLED;
+ 
+ 			hci_req_add(req, HCI_OP_WRITE_DEF_ERR_DATA_REPORTING,
+ 				    sizeof(cp), &cp);
+ 		}
+ 	}
+ 
++>>>>>>> 8a5956197d7e (Bluetooth: fix off by one in err_data_reporting cmd masks.)
  	/* Set Suggested Default Data Length to maximum if supported */
  	if (hdev->le_features[0] & HCI_LE_DATA_LEN_EXT) {
  		struct hci_cp_le_write_def_data_len cp;
* Unmerged path net/bluetooth/hci_core.c
