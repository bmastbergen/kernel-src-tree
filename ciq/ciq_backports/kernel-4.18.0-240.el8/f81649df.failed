s390/qeth: use page pointers to manage RX buffer pool

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit f81649dfa5343eef7e579eb6f8dd8bd6d300ec31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/f81649df.failed

The RX buffer elements are always backed with full pages, reflect this
in the pointer type.

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f81649dfa5343eef7e579eb6f8dd8bd6d300ec31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_main.c
diff --cc drivers/s390/net/qeth_core_main.c
index bd154899d429,8f682fc178a9..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -2650,7 -2639,8 +2649,12 @@@ static int qeth_init_input_buffer(struc
  	buf->pool_entry = pool_entry;
  	for (i = 0; i < QETH_MAX_BUFFER_ELEMENTS(card); ++i) {
  		buf->buffer->element[i].length = PAGE_SIZE;
++<<<<<<< HEAD
 +		buf->buffer->element[i].addr =  pool_entry->elements[i];
++=======
+ 		buf->buffer->element[i].addr =
+ 			page_to_phys(pool_entry->elements[i]);
++>>>>>>> f81649dfa534 (s390/qeth: use page pointers to manage RX buffer pool)
  		if (i == QETH_MAX_BUFFER_ELEMENTS(card) - 1)
  			buf->buffer->element[i].eflags = SBAL_EFLAGS_LAST_ENTRY;
  		else
diff --git a/drivers/s390/net/qeth_core.h b/drivers/s390/net/qeth_core.h
index 871d44746f5c..ab3c2baabff6 100644
--- a/drivers/s390/net/qeth_core.h
+++ b/drivers/s390/net/qeth_core.h
@@ -411,7 +411,7 @@ enum qeth_qdio_info_states {
 struct qeth_buffer_pool_entry {
 	struct list_head list;
 	struct list_head init_list;
-	void *elements[QDIO_MAX_ELEMENTS_PER_BUFFER];
+	struct page *elements[QDIO_MAX_ELEMENTS_PER_BUFFER];
 };
 
 struct qeth_qdio_buffer_pool {
* Unmerged path drivers/s390/net/qeth_core_main.c
