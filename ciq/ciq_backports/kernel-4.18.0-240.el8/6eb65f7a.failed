libperf: Introduce perf_evlist__for_each_mmap()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 6eb65f7a5cc553f5dffb5cea3a874f1087524d99
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6eb65f7a.failed

Add the perf_evlist__for_each_mmap() function and export it in the
perf/evlist.h header, so that the user can iterate through 'struct
perf_mmap' objects.

Add a internal perf_mmap__link() function to do the actual linking.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Jin Yao <yao.jin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lore.kernel.org/lkml/20191017105918.20873-2-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 6eb65f7a5cc553f5dffb5cea3a874f1087524d99)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/evlist.c
#	tools/perf/lib/include/internal/evlist.h
#	tools/perf/lib/include/internal/mmap.h
#	tools/perf/lib/include/perf/evlist.h
#	tools/perf/lib/libperf.map
#	tools/perf/lib/mmap.c
#	tools/perf/util/evlist.c
diff --cc tools/perf/lib/libperf.map
index 3536242c545c,8be02afc324b..000000000000
--- a/tools/perf/lib/libperf.map
+++ b/tools/perf/lib/libperf.map
@@@ -1,6 -1,53 +1,57 @@@
  LIBPERF_0.0.1 {
  	global:
++<<<<<<< HEAD
 +		libperf_set_print;
++=======
+ 		libperf_init;
+ 		perf_cpu_map__dummy_new;
+ 		perf_cpu_map__get;
+ 		perf_cpu_map__put;
+ 		perf_cpu_map__new;
+ 		perf_cpu_map__read;
+ 		perf_cpu_map__nr;
+ 		perf_cpu_map__cpu;
+ 		perf_cpu_map__empty;
+ 		perf_cpu_map__max;
+ 		perf_thread_map__new_dummy;
+ 		perf_thread_map__set_pid;
+ 		perf_thread_map__comm;
+ 		perf_thread_map__nr;
+ 		perf_thread_map__pid;
+ 		perf_thread_map__get;
+ 		perf_thread_map__put;
+ 		perf_evsel__new;
+ 		perf_evsel__delete;
+ 		perf_evsel__enable;
+ 		perf_evsel__disable;
+ 		perf_evsel__init;
+ 		perf_evsel__open;
+ 		perf_evsel__close;
+ 		perf_evsel__read;
+ 		perf_evsel__cpus;
+ 		perf_evsel__threads;
+ 		perf_evsel__attr;
+ 		perf_evlist__new;
+ 		perf_evlist__delete;
+ 		perf_evlist__open;
+ 		perf_evlist__close;
+ 		perf_evlist__enable;
+ 		perf_evlist__disable;
+ 		perf_evlist__init;
+ 		perf_evlist__add;
+ 		perf_evlist__remove;
+ 		perf_evlist__next;
+ 		perf_evlist__set_maps;
+ 		perf_evlist__poll;
+ 		perf_evlist__mmap;
+ 		perf_evlist__munmap;
+ 		perf_evlist__filter_pollfd;
+ 		perf_evlist__next_mmap;
+ 		perf_mmap__consume;
+ 		perf_mmap__read_init;
+ 		perf_mmap__read_done;
+ 		perf_mmap__read_event;
++>>>>>>> 6eb65f7a5cc5 (libperf: Introduce perf_evlist__for_each_mmap())
  	local:
  		*;
  };
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,6cda5a311ba5..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -729,9 -606,9 +729,15 @@@ static struct perf_mmap *perf_evlist__a
  	if (!map)
  		return NULL;
  
++<<<<<<< HEAD
 +	for (i = 0; i < evlist->nr_mmaps; i++) {
 +		map[i].fd = -1;
 +		map[i].overwrite = overwrite;
++=======
+ 	for (i = 0; i < evlist->core.nr_mmaps; i++) {
+ 		struct perf_mmap *prev = i ? &map[i - 1].core : NULL;
+ 
++>>>>>>> 6eb65f7a5cc5 (libperf: Introduce perf_evlist__for_each_mmap())
  		/*
  		 * When the perf_mmap() call is made we grab one refcount, plus
  		 * one extra to let perf_mmap__consume() get the last
@@@ -741,8 -618,9 +747,12 @@@
  		 * Each PERF_EVENT_IOC_SET_OUTPUT points to this mmap and
  		 * thus does perf_mmap__get() on it.
  		 */
++<<<<<<< HEAD
 +		refcount_set(&map[i].refcnt, 0);
++=======
+ 		perf_mmap__init(&map[i].core, prev, overwrite, perf_mmap__unmap_cb);
++>>>>>>> 6eb65f7a5cc5 (libperf: Introduce perf_evlist__for_each_mmap())
  	}
 -
  	return map;
  }
  
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/include/internal/evlist.h
* Unmerged path tools/perf/lib/include/internal/mmap.h
* Unmerged path tools/perf/lib/include/perf/evlist.h
* Unmerged path tools/perf/lib/mmap.c
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/include/internal/evlist.h
* Unmerged path tools/perf/lib/include/internal/mmap.h
* Unmerged path tools/perf/lib/include/perf/evlist.h
* Unmerged path tools/perf/lib/libperf.map
* Unmerged path tools/perf/lib/mmap.c
* Unmerged path tools/perf/util/evlist.c
