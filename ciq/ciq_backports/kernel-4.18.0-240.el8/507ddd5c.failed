net: phy: dp83867: Add SGMII mode type switching

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Vitaly Gaiduk <vitaly.gaiduk@cloudbear.ru>
commit 507ddd5c0d47ad869f361c71d700ffe7f12d1dd6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/507ddd5c.failed

This patch adds ability to switch beetween two PHY SGMII modes.
Some hardware, for example, FPGA IP designs may use 6-wire mode
which enables differential SGMII clock to MAC.

	Signed-off-by: Vitaly Gaiduk <vitaly.gaiduk@cloudbear.ru>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 507ddd5c0d47ad869f361c71d700ffe7f12d1dd6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/dp83867.c
diff --cc drivers/net/phy/dp83867.c
index 71fdacbc1dc5,37fceaf9fa10..000000000000
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@@ -34,8 -34,10 +34,9 @@@
  
  #define DP83867_RGMIICTL	0x0032
  #define DP83867_STRAP_STS1	0x006E
 -#define DP83867_STRAP_STS2	0x006f
  #define DP83867_RGMIIDCTL	0x0086
  #define DP83867_IO_MUX_CFG	0x0170
+ #define DP83867_SGMIICTL	0x00D3
  #define DP83867_10M_SGMII_CFG   0x016F
  #define DP83867_10M_SGMII_RATE_ADAPT_MASK BIT(7)
  
@@@ -187,19 -202,59 +192,34 @@@ static int dp83867_of_init(struct phy_d
  	dp83867->rxctrl_strap_quirk = of_property_read_bool(of_node,
  					"ti,dp83867-rxctrl-strap-quirk");
  
++<<<<<<< HEAD
 +	ret = of_property_read_u32(of_node, "ti,rx-internal-delay",
 +				   &dp83867->rx_id_delay);
 +	if (ret &&
 +	    (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 +	     phydev->interface == PHY_INTERFACE_MODE_RGMII_RXID))
 +		return ret;
++=======
+ 	dp83867->sgmii_ref_clk_en = of_property_read_bool(of_node,
+ 					"ti,sgmii-ref-clock-output-enable");
+ 
+ 	/* Existing behavior was to use default pin strapping delay in rgmii
+ 	 * mode, but rgmii should have meant no delay.  Warn existing users.
+ 	 */
+ 	if (phydev->interface == PHY_INTERFACE_MODE_RGMII) {
+ 		const u16 val = phy_read_mmd(phydev, DP83867_DEVADDR, DP83867_STRAP_STS2);
+ 		const u16 txskew = (val & DP83867_STRAP_STS2_CLK_SKEW_TX_MASK) >>
+ 				   DP83867_STRAP_STS2_CLK_SKEW_TX_SHIFT;
+ 		const u16 rxskew = (val & DP83867_STRAP_STS2_CLK_SKEW_RX_MASK) >>
+ 				   DP83867_STRAP_STS2_CLK_SKEW_RX_SHIFT;
++>>>>>>> 507ddd5c0d47 (net: phy: dp83867: Add SGMII mode type switching)
  
 -		if (txskew != DP83867_STRAP_STS2_CLK_SKEW_NONE ||
 -		    rxskew != DP83867_STRAP_STS2_CLK_SKEW_NONE)
 -			phydev_warn(phydev,
 -				    "PHY has delays via pin strapping, but phy-mode = 'rgmii'\n"
 -				    "Should be 'rgmii-id' to use internal delays\n");
 -	}
 -
 -	/* RX delay *must* be specified if internal delay of RX is used. */
 -	if (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 -	    phydev->interface == PHY_INTERFACE_MODE_RGMII_RXID) {
 -		ret = of_property_read_u32(of_node, "ti,rx-internal-delay",
 -					   &dp83867->rx_id_delay);
 -		if (ret) {
 -			phydev_err(phydev, "ti,rx-internal-delay must be specified\n");
 -			return ret;
 -		}
 -		if (dp83867->rx_id_delay > DP83867_RGMII_RX_CLK_DELAY_MAX) {
 -			phydev_err(phydev,
 -				   "ti,rx-internal-delay value of %u out of range\n",
 -				   dp83867->rx_id_delay);
 -			return -EINVAL;
 -		}
 -	}
 -
 -	/* TX delay *must* be specified if internal delay of RX is used. */
 -	if (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 -	    phydev->interface == PHY_INTERFACE_MODE_RGMII_TXID) {
 -		ret = of_property_read_u32(of_node, "ti,tx-internal-delay",
 -					   &dp83867->tx_id_delay);
 -		if (ret) {
 -			phydev_err(phydev, "ti,tx-internal-delay must be specified\n");
 -			return ret;
 -		}
 -		if (dp83867->tx_id_delay > DP83867_RGMII_TX_CLK_DELAY_MAX) {
 -			phydev_err(phydev,
 -				   "ti,tx-internal-delay value of %u out of range\n",
 -				   dp83867->tx_id_delay);
 -			return -EINVAL;
 -		}
 -	}
 +	ret = of_property_read_u32(of_node, "ti,tx-internal-delay",
 +				   &dp83867->tx_id_delay);
 +	if (ret &&
 +	    (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 +	     phydev->interface == PHY_INTERFACE_MODE_RGMII_TXID))
 +		return ret;
  
  	if (of_property_read_bool(of_node, "enet-phy-lane-swap"))
  		dp83867->port_mirroring = DP83867_PORT_MIRROING_EN;
* Unmerged path drivers/net/phy/dp83867.c
