powerpc: fix off by one in max_zone_pfn initialization for ZONE_DMA

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrea Arcangeli <aarcange@redhat.com>
commit 03800e0526ee25ed7c843ca1e57b69ac2a5af642
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/03800e05.failed

25078dc1f74be16b858e914f52cc8f4d03c2271a first introduced an off by
one error in the ZONE_DMA initialization of PPC_BOOK3E_64=y and since
9739ab7eda459f0669ec9807e0d9be5020bab88c the off by one applies to
PPC32=y too. This simply corrects the off by one and should resolve
crashes like below:

[   65.179101] page 0x7fff outside node 0 zone DMA [ 0x0 - 0x7fff ]

Unfortunately in various MM places "max" means a non inclusive end of
range. free_area_init_nodes max_zone_pfn parameter is one case and
MAX_ORDER is another one (unrelated) that comes by memory.

	Reported-by: Zorro Lang <zlang@redhat.com>
Fixes: 25078dc1f74b ("powerpc: use mm zones more sensibly")
Fixes: 9739ab7eda45 ("powerpc: enable a 30-bit ZONE_DMA for 32-bit pmac")
	Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20190625141727.2883-1-aarcange@redhat.com

(cherry picked from commit 03800e0526ee25ed7c843ca1e57b69ac2a5af642)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/mm/mem.c
diff --cc arch/powerpc/mm/mem.c
index 2c991fdfac6a,b6beb86e5300..000000000000
--- a/arch/powerpc/mm/mem.c
+++ b/arch/powerpc/mm/mem.c
@@@ -275,15 -247,9 +275,21 @@@ void __init paging_init(void
  	printk(KERN_DEBUG "Memory hole size: %ldMB\n",
  	       (long int)((top_of_ram - total_ram) >> 20));
  
++<<<<<<< HEAD
 +#if defined(CONFIG_ZONE_DMA) && defined(CONFIG_PPC_BOOK3E_64)
 +	max_zone_pfns[ZONE_DMA]	= min(max_low_pfn, 0x7fffffffUL >> PAGE_SHIFT);
 +#endif
 +#if defined(CONFIG_ZONE_DMA) && !defined(CONFIG_PPC_BOOK3E_64)
 +	/*
 +	 * Reduce the window where gfp_allowed_mask isn't out of control of
 +	 * powerpc in between kernel_init_freeable() and free_initmem().
 +	 */
 +	gfp_allowed_mask &= ~(__GFP_DMA|__GFP_DMA32);
++=======
+ #ifdef CONFIG_ZONE_DMA
+ 	max_zone_pfns[ZONE_DMA]	= min(max_low_pfn,
+ 				      1UL << (ARCH_ZONE_DMA_BITS - PAGE_SHIFT));
++>>>>>>> 03800e0526ee (powerpc: fix off by one in max_zone_pfn initialization for ZONE_DMA)
  #endif
  	max_zone_pfns[ZONE_NORMAL] = max_low_pfn;
  #ifdef CONFIG_HIGHMEM
* Unmerged path arch/powerpc/mm/mem.c
