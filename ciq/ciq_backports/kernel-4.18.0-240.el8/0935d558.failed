netfilter: nf_tables: asynchronous release

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Florian Westphal <fw@strlen.de>
commit 0935d558840099b3679c67bb7468dc78fcbad940
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0935d558.failed

Release the committed transaction log from a work queue, moving
expensive synchronize_rcu out of the locked section and providing
opportunity to batch this.

On my test machine this cuts runtime of nft-test.py in half.
Based on earlier patch from Pablo Neira Ayuso.

	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 0935d558840099b3679c67bb7468dc78fcbad940)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index 77d60c23b985,72dbdb1faa3c..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -6751,8 -6571,8 +6795,11 @@@ static int nf_tables_commit(struct net 
  		}
  	}
  
- 	nf_tables_commit_release(net);
  	nf_tables_gen_notify(net, skb, NFT_MSG_NEWGEN);
++<<<<<<< HEAD
++=======
+ 	nf_tables_commit_release(net);
++>>>>>>> 0935d5588400 (netfilter: nf_tables: asynchronous release)
  
  	return 0;
  }
@@@ -7568,10 -7386,9 +7616,11 @@@ static void __exit nf_tables_module_exi
  	unregister_netdevice_notifier(&nf_tables_flowtable_notifier);
  	nft_chain_filter_fini();
  	unregister_pernet_subsys(&nf_tables_net_ops);
+ 	cancel_work_sync(&trans_destroy_work);
  	rcu_barrier();
 +	rhltable_destroy(&nft_objname_ht);
  	nf_tables_core_module_exit();
 +	kfree(info);
  }
  
  module_init(nf_tables_module_init);
diff --git a/include/net/netfilter/nf_tables.h b/include/net/netfilter/nf_tables.h
index dcc39a973ece..d4cff85b9846 100644
--- a/include/net/netfilter/nf_tables.h
+++ b/include/net/netfilter/nf_tables.h
@@ -1330,12 +1330,14 @@ static inline void nft_set_elem_clear_busy(struct nft_set_ext *ext)
  *
  *	@list: used internally
  *	@msg_type: message type
+ *	@put_net: ctx->net needs to be put
  *	@ctx: transaction context
  *	@data: internal information related to the transaction
  */
 struct nft_trans {
 	struct list_head		list;
 	int				msg_type;
+	bool				put_net;
 	struct nft_ctx			ctx;
 	char				data[0];
 };
* Unmerged path net/netfilter/nf_tables_api.c
