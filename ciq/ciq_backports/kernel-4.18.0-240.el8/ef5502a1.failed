perf inject: Make --strip keep evsels

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit ef5502a1d9bd042dcf457378a6ac96701e498b1b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ef5502a1.failed

create_gcov (refer to the autofdo example in tools/perf/Documentation/intel-pt.txt)
now needs the evsels to read the perf.data file. So don't strip them.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
Link: http://lore.kernel.org/lkml/20191105100057.21465-1-adrian.hunter@intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit ef5502a1d9bd042dcf457378a6ac96701e498b1b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-inject.c
diff --cc tools/perf/builtin-inject.c
index 6d015423b15d,1e5d28311e14..000000000000
--- a/tools/perf/builtin-inject.c
+++ b/tools/perf/builtin-inject.c
@@@ -576,58 -578,6 +576,61 @@@ static void strip_init(struct perf_inje
  		evsel->handler = drop_sample;
  }
  
++<<<<<<< HEAD
 +static bool has_tracking(struct perf_evsel *evsel)
 +{
 +	return evsel->attr.mmap || evsel->attr.mmap2 || evsel->attr.comm ||
 +	       evsel->attr.task;
 +}
 +
 +#define COMPAT_MASK (PERF_SAMPLE_ID | PERF_SAMPLE_TID | PERF_SAMPLE_TIME | \
 +		     PERF_SAMPLE_ID | PERF_SAMPLE_CPU | PERF_SAMPLE_IDENTIFIER)
 +
 +/*
 + * In order that the perf.data file is parsable, tracking events like MMAP need
 + * their selected event to exist, except if there is only 1 selected event left
 + * and it has a compatible sample type.
 + */
 +static bool ok_to_remove(struct perf_evlist *evlist,
 +			 struct perf_evsel *evsel_to_remove)
 +{
 +	struct perf_evsel *evsel;
 +	int cnt = 0;
 +	bool ok = false;
 +
 +	if (!has_tracking(evsel_to_remove))
 +		return true;
 +
 +	evlist__for_each_entry(evlist, evsel) {
 +		if (evsel->handler != drop_sample) {
 +			cnt += 1;
 +			if ((evsel->attr.sample_type & COMPAT_MASK) ==
 +			    (evsel_to_remove->attr.sample_type & COMPAT_MASK))
 +				ok = true;
 +		}
 +	}
 +
 +	return ok && cnt == 1;
 +}
 +
 +static void strip_fini(struct perf_inject *inject)
 +{
 +	struct perf_evlist *evlist = inject->session->evlist;
 +	struct perf_evsel *evsel, *tmp;
 +
 +	/* Remove non-synthesized evsels if possible */
 +	evlist__for_each_entry_safe(evlist, tmp, evsel) {
 +		if (evsel->handler == drop_sample &&
 +		    ok_to_remove(evlist, evsel)) {
 +			pr_debug("Deleting %s\n", perf_evsel__name(evsel));
 +			perf_evlist__remove(evlist, evsel);
 +			perf_evsel__delete(evsel);
 +		}
 +	}
 +}
 +
++=======
++>>>>>>> ef5502a1d9bd (perf inject: Make --strip keep evsels)
  static int __cmd_inject(struct perf_inject *inject)
  {
  	int ret = -EINVAL;
@@@ -724,11 -674,9 +727,9 @@@
  			if (evsel) {
  				pr_debug("Deleting %s\n",
  					 perf_evsel__name(evsel));
 -				evlist__remove(session->evlist, evsel);
 -				evsel__delete(evsel);
 +				perf_evlist__remove(session->evlist, evsel);
 +				perf_evsel__delete(evsel);
  			}
- 			if (inject->strip)
- 				strip_fini(inject);
  		}
  		session->header.data_offset = output_data_offset;
  		session->header.data_size = inject->bytes_written;
* Unmerged path tools/perf/builtin-inject.c
