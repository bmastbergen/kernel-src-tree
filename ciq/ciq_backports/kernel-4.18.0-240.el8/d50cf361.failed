perf tools: Rename perf_evlist__alloc_mmap() to evlist__alloc_mmap()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit d50cf36115a08e668b4a0919a6807c3f9a9e8db8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d50cf361.failed

Rename perf_evlist__alloc_mmap() to evlist__alloc_mmap(), so we don't
have a name clash when we add perf_evlist__alloc_mmap() to libperf.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-7-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d50cf36115a08e668b4a0919a6807c3f9a9e8db8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,5bde2e5bf0e3..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -716,16 -693,16 +716,21 @@@ void perf_evlist__munmap(struct perf_ev
  	zfree(&evlist->overwrite_mmap);
  }
  
++<<<<<<< HEAD
 +static struct perf_mmap *perf_evlist__alloc_mmap(struct perf_evlist *evlist,
 +						 bool overwrite)
++=======
+ static struct mmap *evlist__alloc_mmap(struct evlist *evlist,
+ 				       bool overwrite)
++>>>>>>> d50cf36115a0 (perf tools: Rename perf_evlist__alloc_mmap() to evlist__alloc_mmap())
  {
  	int i;
 -	struct mmap *map;
 +	struct perf_mmap *map;
  
 -	evlist->nr_mmaps = perf_cpu_map__nr(evlist->core.cpus);
 -	if (perf_cpu_map__empty(evlist->core.cpus))
 -		evlist->nr_mmaps = perf_thread_map__nr(evlist->core.threads);
 -	map = zalloc(evlist->nr_mmaps * sizeof(struct mmap));
 +	evlist->nr_mmaps = cpu_map__nr(evlist->cpus);
 +	if (cpu_map__empty(evlist->cpus))
 +		evlist->nr_mmaps = thread_map__nr(evlist->threads);
 +	map = zalloc(evlist->nr_mmaps * sizeof(struct perf_mmap));
  	if (!map)
  		return NULL;
  
* Unmerged path tools/perf/util/evlist.c
