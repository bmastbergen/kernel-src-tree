PCI: Make pci_ats_init() private

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Kelsey Skunberg <skunberg.kelsey@gmail.com>
commit b92b512a435da01b52de07e3dcc2f07a4ad404de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b92b512a.failed

This interface:

  void pci_ats_init(struct pci_dev *dev);

is only used in drivers/pci/ and does not need to be seen by the rest of
the kernel.  Move it to drivers/pci/pci.h so it's private to the PCI
subsystem.

Link: https://lore.kernel.org/r/20190724233848.73327-9-skunberg.kelsey@gmail.com
	Signed-off-by: Kelsey Skunberg <skunberg.kelsey@gmail.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit b92b512a435da01b52de07e3dcc2f07a4ad404de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index 011d38ff94c8,9b8d0c2a1c9a..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -1786,8 -1752,26 +1786,24 @@@ static inline int pci_irqd_intx_xlate(s
  				      unsigned long *out_hwirq,
  				      unsigned int *out_type)
  { return -EINVAL; }
 -
 -static inline const struct pci_device_id *pci_match_id(const struct pci_device_id *ids,
 -							 struct pci_dev *dev)
 -{ return NULL; }
 -static inline bool pci_ats_disabled(void) { return true; }
  #endif /* CONFIG_PCI */
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_PCI_ATS
+ /* Address Translation Service */
+ int pci_enable_ats(struct pci_dev *dev, int ps);
+ void pci_disable_ats(struct pci_dev *dev);
+ int pci_ats_queue_depth(struct pci_dev *dev);
+ int pci_ats_page_aligned(struct pci_dev *dev);
+ #else
+ static inline int pci_enable_ats(struct pci_dev *d, int ps) { return -ENODEV; }
+ static inline void pci_disable_ats(struct pci_dev *d) { }
+ static inline int pci_ats_queue_depth(struct pci_dev *d) { return -ENODEV; }
+ static inline int pci_ats_page_aligned(struct pci_dev *dev) { return 0; }
+ #endif
+ 
++>>>>>>> b92b512a435d (PCI: Make pci_ats_init() private)
  /* Include architecture-dependent settings and functions */
  
  #include <asm/pci.h>
diff --git a/drivers/pci/pci.h b/drivers/pci/pci.h
index 3cf61f71ce17..9c0c7ec640db 100644
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@ -458,11 +458,12 @@ static inline void pci_restore_dpc_state(struct pci_dev *dev) {}
 #endif
 
 #ifdef CONFIG_PCI_ATS
+/* Address Translation Service */
+void pci_ats_init(struct pci_dev *dev);
 void pci_restore_ats_state(struct pci_dev *dev);
 #else
-static inline void pci_restore_ats_state(struct pci_dev *dev)
-{
-}
+static inline void pci_ats_init(struct pci_dev *d) { }
+static inline void pci_restore_ats_state(struct pci_dev *dev) { }
 #endif /* CONFIG_PCI_ATS */
 
 #ifdef CONFIG_PCI_IOV
* Unmerged path include/linux/pci.h
