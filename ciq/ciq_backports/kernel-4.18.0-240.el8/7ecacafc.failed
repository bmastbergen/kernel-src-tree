Bluetooth: btusb: Disable runtime suspend on Realtek devices

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Kai-Heng Feng <kai.heng.feng@canonical.com>
commit 7ecacafc240638148567742cca41aa7144b4fe1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7ecacafc.failed

After commit 9e45524a0111 ("Bluetooth: btusb: Fix suspend issue for
Realtek devices") both WiFi and Bluetooth stop working after reboot:
[   34.322617] usb 1-8: reset full-speed USB device number 3 using xhci_hcd
[   34.450401] usb 1-8: device descriptor read/64, error -71
[   34.694375] usb 1-8: device descriptor read/64, error -71
...
[   44.599111] rtw_pci 0000:02:00.0: failed to poll offset=0x5 mask=0x3 value=0x0
[   44.599113] rtw_pci 0000:02:00.0: mac power on failed
[   44.599114] rtw_pci 0000:02:00.0: failed to power on mac
[   44.599114] rtw_pci 0000:02:00.0: leave idle state failed
[   44.599492] rtw_pci 0000:02:00.0: failed to leave ips state
[   44.599493] rtw_pci 0000:02:00.0: failed to leave idle state

That commit removed USB_QUIRK_RESET_RESUME, which not only resets the USB
device after resume, it also prevents the device from being runtime
suspended by USB core. My experiment shows if the Realtek btusb device
ever runtime suspends once, the entire wireless module becomes useless
after reboot.

So let's explicitly disable runtime suspend on Realtek btusb device for
now.

Fixes: 9e45524a0111 ("Bluetooth: btusb: Fix suspend issue for Realtek devices")
	Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 7ecacafc240638148567742cca41aa7144b4fe1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/btusb.c
diff --cc drivers/bluetooth/btusb.c
index 5171f004a6a7,0eaeca0a64fb..000000000000
--- a/drivers/bluetooth/btusb.c
+++ b/drivers/bluetooth/btusb.c
@@@ -3133,12 -3824,18 +3133,20 @@@ static int btusb_probe(struct usb_inter
  	if (IS_ENABLED(CONFIG_BT_HCIBTUSB_RTL) &&
  	    (id->driver_info & BTUSB_REALTEK)) {
  		hdev->setup = btrtl_setup_realtek;
 -		hdev->shutdown = btrtl_shutdown_realtek;
 -		hdev->cmd_timeout = btusb_rtl_cmd_timeout;
  
 -		/* Realtek devices lose their updated firmware over global
 -		 * suspend that means host doesn't send SET_FEATURE
 -		 * (DEVICE_REMOTE_WAKEUP)
 +		/* Realtek devices lose their updated firmware over suspend,
 +		 * but the USB hub doesn't notice any status change.
 +		 * Explicitly request a device reset on resume.
  		 */
++<<<<<<< HEAD
 +		interface_to_usbdev(intf)->quirks |= USB_QUIRK_RESET_RESUME;
++=======
+ 		set_bit(BTUSB_WAKEUP_DISABLE, &data->flags);
+ 
+ 		err = usb_autopm_get_interface(intf);
+ 		if (err < 0)
+ 			goto out_free_dev;
++>>>>>>> 7ecacafc2406 (Bluetooth: btusb: Disable runtime suspend on Realtek devices)
  	}
  
  	if (id->driver_info & BTUSB_AMP) {
* Unmerged path drivers/bluetooth/btusb.c
