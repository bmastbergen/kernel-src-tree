selftests/harness: Limit step counter reporting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Kees Cook <keescook@chromium.org>
commit 850d0cc64c8e2e0895acf735ac0a53c78b80dbe5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/850d0cc6.failed

When the selftest "step" counter grew beyond 255, non-fatal warnings
were being emitted, which is noisy and pointless. There are selftests
with more than 255 steps (especially those in loops, etc). Instead,
just cap "steps" to 254 and do not report the saturation.

	Reported-by: Ralph Campbell <rcampbell@nvidia.com>
	Tested-by: Ralph Campbell <rcampbell@nvidia.com>
Fixes: 9847d24af95c ("selftests/harness: Refactor XFAIL into SKIP")
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit 850d0cc64c8e2e0895acf735ac0a53c78b80dbe5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kselftest_harness.h
diff --cc tools/testing/selftests/kselftest_harness.h
index d89e31f84821,4f78e4805633..000000000000
--- a/tools/testing/selftests/kselftest_harness.h
+++ b/tools/testing/selftests/kselftest_harness.h
@@@ -951,8 -977,13 +952,18 @@@ void __run_test(struct __fixture_metada
  		t->passed = 0;
  	} else if (t->pid == 0) {
  		t->fn(t, variant);
++<<<<<<< HEAD
 +		/* return the step that failed or 0 */
 +		_exit(t->passed ? 0 : t->step);
++=======
+ 		if (t->skip)
+ 			_exit(255);
+ 		/* Pass is exit 0 */
+ 		if (t->passed)
+ 			_exit(0);
+ 		/* Something else happened, report the step. */
+ 		_exit(t->step);
++>>>>>>> 850d0cc64c8e (selftests/harness: Limit step counter reporting)
  	} else {
  		__wait_for_test(t);
  	}
* Unmerged path tools/testing/selftests/kselftest_harness.h
