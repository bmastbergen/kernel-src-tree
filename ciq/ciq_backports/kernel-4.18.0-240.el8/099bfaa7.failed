bpf/stackmap: Dont trylock mmap_sem with PREEMPT_RT and interrupts disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author David Miller <davem@davemloft.net>
commit 099bfaa731ec347d3f16a463ae53b88a1700c0af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/099bfaa7.failed

In a RT kernel down_read_trylock() cannot be used from NMI context and
up_read_non_owner() is another problematic issue.

So in such a configuration, simply elide the annotated stackmap and
just report the raw IPs.

In the longer term, it might be possible to provide a atomic friendly
versions of the page cache traversal which will at least provide the info
if the pages are resident and don't need to be paged in.

[ tglx: Use IS_ENABLED() to avoid the #ifdeffery, fixup the irq work
  	callback and add a comment ]

	Signed-off-by: David S. Miller <davem@davemloft.net>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200224145644.708960317@linutronix.de
(cherry picked from commit 099bfaa731ec347d3f16a463ae53b88a1700c0af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/stackmap.c
diff --cc kernel/bpf/stackmap.c
index 8d7de6a8c8de,db76339fe358..000000000000
--- a/kernel/bpf/stackmap.c
+++ b/kernel/bpf/stackmap.c
@@@ -291,10 -291,19 +294,25 @@@ static void stack_map_get_build_id_offs
  	struct stack_map_irq_work *work = NULL;
  
  	if (irqs_disabled()) {
++<<<<<<< HEAD
 +		work = this_cpu_ptr(&up_read_work);
 +		if (work->irq_work.flags & IRQ_WORK_BUSY)
 +			/* cannot queue more up_read, fallback */
++=======
+ 		if (!IS_ENABLED(CONFIG_PREEMPT_RT)) {
+ 			work = this_cpu_ptr(&up_read_work);
+ 			if (atomic_read(&work->irq_work.flags) & IRQ_WORK_BUSY) {
+ 				/* cannot queue more up_read, fallback */
+ 				irq_work_busy = true;
+ 			}
+ 		} else {
+ 			/*
+ 			 * PREEMPT_RT does not allow to trylock mmap sem in
+ 			 * interrupt disabled context. Force the fallback code.
+ 			 */
++>>>>>>> 099bfaa731ec (bpf/stackmap: Dont trylock mmap_sem with PREEMPT_RT and interrupts disabled)
  			irq_work_busy = true;
+ 		}
  	}
  
  	/*
* Unmerged path kernel/bpf/stackmap.c
