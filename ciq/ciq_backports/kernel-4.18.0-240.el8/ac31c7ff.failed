futex: Provide distinct return value when owner is exiting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit ac31c7ff8624409ba3c4901df9237a616c187a5d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ac31c7ff.failed

attach_to_pi_owner() returns -EAGAIN for various cases:

 - Owner task is exiting
 - Futex value has changed

The caller drops the held locks (hash bucket, mmap_sem) and retries the
operation. In case of the owner task exiting this can result in a live
lock.

As a preparatory step for seperating those cases, provide a distinct return
value (EBUSY) for the owner exiting case.

No functional change.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20191106224556.935606117@linutronix.de


(cherry picked from commit ac31c7ff8624409ba3c4901df9237a616c187a5d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/futex.c
diff --cc kernel/futex.c
index ec3cc9521f31,4f9d7a4b6dbf..000000000000
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@@ -1156,10 -1182,11 +1156,18 @@@ static int handle_exit_race(u32 __user 
  	u32 uval2;
  
  	/*
++<<<<<<< HEAD
 +	 * If PF_EXITPIDONE is not yet set, then try again.
 +	 */
 +	if (tsk && !(tsk->flags & PF_EXITPIDONE))
 +		return -EAGAIN;
++=======
+ 	 * If the futex exit state is not yet FUTEX_STATE_DEAD, tell the
+ 	 * caller that the alleged owner is busy.
+ 	 */
+ 	if (tsk && tsk->futex_state != FUTEX_STATE_DEAD)
+ 		return -EBUSY;
++>>>>>>> ac31c7ff8624 (futex: Provide distinct return value when owner is exiting)
  
  	/*
  	 * Reread the user space value to handle the following situation:
* Unmerged path kernel/futex.c
