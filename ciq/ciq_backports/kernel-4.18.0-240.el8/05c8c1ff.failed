efi/tpm: Don't traverse an event log with no events

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Peter Jones <pjones@redhat.com>
commit 05c8c1ff81ed2eb9bad7c27cf92e55c864c16df8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/05c8c1ff.failed

When there are no entries to put into the final event log, some machines
will return the template they would have populated anyway.  In this case
the nr_events field is 0, but the rest of the log is just garbage.

This patch stops us from trying to iterate the table with
__calc_tpm2_event_size() when the number of events in the table is 0.

	Tested-by: Lyude Paul <lyude@redhat.com>
	Signed-off-by: Peter Jones <pjones@redhat.com>
	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Acked-by: Matthew Garrett <mjg59@google.com>
	Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Ben Dooks <ben.dooks@codethink.co.uk>
	Cc: Dave Young <dyoung@redhat.com>
	Cc: Jerry Snitselaar <jsnitsel@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Lukas Wunner <lukas@wunner.de>
	Cc: Octavian Purdila <octavian.purdila@intel.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Scott Talbert <swt@techie.net>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-efi@vger.kernel.org
	Cc: linux-integrity@vger.kernel.org
	Cc: stable@vger.kernel.org
Fixes: c46f3405692d ("tpm: Reserve the TPM final events table")
Link: https://lkml.kernel.org/r/20191002165904.8819-5-ard.biesheuvel@linaro.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 05c8c1ff81ed2eb9bad7c27cf92e55c864c16df8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/efi/tpm.c
diff --cc drivers/firmware/efi/tpm.c
index 0cbeb3d46b18,b9ae5c6f9b9c..000000000000
--- a/drivers/firmware/efi/tpm.c
+++ b/drivers/firmware/efi/tpm.c
@@@ -34,7 -61,37 +34,40 @@@ int __init efi_tpm_eventlog_init(void
  
  	tbl_size = sizeof(*log_tbl) + log_tbl->size;
  	memblock_reserve(efi.tpm_log, tbl_size);
++<<<<<<< HEAD
++=======
+ 
+ 	if (efi.tpm_final_log == EFI_INVALID_TABLE_ADDR)
+ 		goto out;
+ 
+ 	final_tbl = early_memremap(efi.tpm_final_log, sizeof(*final_tbl));
+ 
+ 	if (!final_tbl) {
+ 		pr_err("Failed to map TPM Final Event Log table @ 0x%lx\n",
+ 		       efi.tpm_final_log);
+ 		efi.tpm_final_log = EFI_INVALID_TABLE_ADDR;
+ 		ret = -ENOMEM;
+ 		goto out;
+ 	}
+ 
+ 	tbl_size = 0;
+ 	if (final_tbl->nr_events != 0) {
+ 		void *events = (void *)efi.tpm_final_log
+ 				+ sizeof(final_tbl->version)
+ 				+ sizeof(final_tbl->nr_events);
+ 
+ 		tbl_size = tpm2_calc_event_log_size(events,
+ 						    final_tbl->nr_events,
+ 						    log_tbl->log);
+ 	}
+ 	memblock_reserve((unsigned long)final_tbl,
+ 			 tbl_size + sizeof(*final_tbl));
+ 	early_memunmap(final_tbl, sizeof(*final_tbl));
+ 	efi_tpm_final_log_size = tbl_size;
+ 
+ out:
++>>>>>>> 05c8c1ff81ed (efi/tpm: Don't traverse an event log with no events)
  	early_memunmap(log_tbl, sizeof(*log_tbl));
 -	return ret;
 +	return 0;
  }
  
* Unmerged path drivers/firmware/efi/tpm.c
