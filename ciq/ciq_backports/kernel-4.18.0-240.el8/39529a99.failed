libbpf: Teach btf_dumper to emit stand-alone anonymous enum definitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 39529a9948d8f67f39cb72bec914c1adab38562d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/39529a99.failed

BTF-to-C converter previously skipped anonymous enums in an assumption
that those are embedded in struct's field definitions. This is not
always the case and a lot of kernel constants are defined as part of
anonymous enums. This change fixes the logic by eagerly marking all
types as either referenced by any other type or not. This is enough to
distinguish two classes of anonymous enums and emit previously omitted
enum definitions.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20190925203745.3173184-1-andriin@fb.com
(cherry picked from commit 39529a9948d8f67f39cb72bec914c1adab38562d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/btf_dump.c
diff --cc tools/lib/bpf/btf_dump.c
index 55f7591b67aa,ede55fec3618..000000000000
--- a/tools/lib/bpf/btf_dump.c
+++ b/tools/lib/bpf/btf_dump.c
@@@ -536,11 -622,6 +622,14 @@@ static void btf_dump_emit_type(struct b
  	t = btf__type_by_id(d->btf, id);
  	kind = btf_kind(t);
  
++<<<<<<< HEAD
 +	if (top_level_def && t->name_off == 0) {
 +		pr_warn("unexpected nameless definition, id:[%u]\n", id);
 +		return;
 +	}
 +
++=======
++>>>>>>> 39529a9948d8 (libbpf: Teach btf_dumper to emit stand-alone anonymous enum definitions)
  	if (tstate->emit_state == EMITTING) {
  		if (tstate->fwd_emitted)
  			return;
* Unmerged path tools/lib/bpf/btf_dump.c
