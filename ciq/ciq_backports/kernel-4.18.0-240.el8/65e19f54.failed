io_uring: support for larger fixed file sets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jens Axboe <axboe@kernel.dk>
commit 65e19f54d29cd8559ce60cfd0d751bef7afbdc5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/65e19f54.failed

There's been a few requests for supporting more fixed files than 1024.
This isn't really tricky to do, we just need to split up the file table
into multiple tables and index appropriately. As we do so, reduce the
max single file table to 512. This enables us to do single page allocs
always for the tables, which is an improvement over the situation prior.

This patch adds support for up to 64K files, which should be enough for
everyone.

	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 65e19f54d29cd8559ce60cfd0d751bef7afbdc5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/io_uring.c
diff --cc fs/io_uring.c
index eebc29709945,281d0b7597cf..000000000000
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@@ -196,14 -172,8 +203,19 @@@ struct io_mapped_ubuf 
  	unsigned int	nr_bvecs;
  };
  
++<<<<<<< HEAD
 +struct async_list {
 +	spinlock_t		lock;
 +	atomic_t		cnt;
 +	struct list_head	list;
 +
 +	struct file		*file;
 +	off_t			io_start;
 +	size_t			io_len;
++=======
+ struct fixed_file_table {
+ 	struct file		**files;
++>>>>>>> 65e19f54d29c (io_uring: support for larger fixed file sets)
  };
  
  struct io_ring_ctx {
* Unmerged path fs/io_uring.c
