net: phy: dp83867: fix hfs boot in rgmii mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Grygorii Strashko <grygorii.strashko@ti.com>
commit fafc5db28a2ff39092bafe8ac9b8b19c4904f633
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/fafc5db2.failed

The commit ef87f7da6b28 ("net: phy: dp83867: move dt parsing to probe")
causes regression on TI dra71x-evm and dra72x-evm, where DP83867 PHY is
used in "rgmii-id" mode - the networking stops working.
Unfortunately, it's not enough to just move DT parsing code to .probe() as
it depends on phydev->interface value, which is set to correct value abter
the .probe() is completed and before calling .config_init(). So, RGMII
configuration can't be loaded from DT.

To fix and issue
- move RGMII validation code to .config_init()
- parse RGMII parameters in dp83867_of_init(), but consider them as
optional.

Fixes: ef87f7da6b28 ("net: phy: dp83867: move dt parsing to probe")
	Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fafc5db28a2ff39092bafe8ac9b8b19c4904f633)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/dp83867.c
diff --cc drivers/net/phy/dp83867.c
index a6abb4cd911c,9cd9dcee4eb2..000000000000
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@@ -70,11 -99,16 +70,19 @@@
  #define DP83867_PHYCR_RESERVED_MASK		BIT(11)
  
  /* RGMIIDCTL bits */
 -#define DP83867_RGMII_TX_CLK_DELAY_MAX		0xf
  #define DP83867_RGMII_TX_CLK_DELAY_SHIFT	4
++<<<<<<< HEAD
++=======
+ #define DP83867_RGMII_TX_CLK_DELAY_INV	(DP83867_RGMII_TX_CLK_DELAY_MAX + 1)
+ #define DP83867_RGMII_RX_CLK_DELAY_MAX		0xf
+ #define DP83867_RGMII_RX_CLK_DELAY_SHIFT	0
+ #define DP83867_RGMII_RX_CLK_DELAY_INV	(DP83867_RGMII_RX_CLK_DELAY_MAX + 1)
+ 
++>>>>>>> fafc5db28a2f (net: phy: dp83867: fix hfs boot in rgmii mode)
  
  /* IO_MUX_CFG bits */
 -#define DP83867_IO_MUX_CFG_IO_IMPEDANCE_MASK	0x1f
 +#define DP83867_IO_MUX_CFG_IO_IMPEDANCE_CTRL	0x1f
 +
  #define DP83867_IO_MUX_CFG_IO_IMPEDANCE_MAX	0x0
  #define DP83867_IO_MUX_CFG_IO_IMPEDANCE_MIN	0x1f
  #define DP83867_IO_MUX_CFG_CLK_O_DISABLE	BIT(6)
@@@ -191,19 -377,29 +241,42 @@@ static int dp83867_of_init(struct phy_d
  	dp83867->rxctrl_strap_quirk = of_property_read_bool(of_node,
  					"ti,dp83867-rxctrl-strap-quirk");
  
 -	dp83867->sgmii_ref_clk_en = of_property_read_bool(of_node,
 -					"ti,sgmii-ref-clock-output-enable");
 +	ret = of_property_read_u32(of_node, "ti,rx-internal-delay",
 +				   &dp83867->rx_id_delay);
 +	if (ret &&
 +	    (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 +	     phydev->interface == PHY_INTERFACE_MODE_RGMII_RXID))
 +		return ret;
  
++<<<<<<< HEAD
 +	ret = of_property_read_u32(of_node, "ti,tx-internal-delay",
 +				   &dp83867->tx_id_delay);
 +	if (ret &&
 +	    (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID ||
 +	     phydev->interface == PHY_INTERFACE_MODE_RGMII_TXID))
 +		return ret;
++=======
+ 
+ 	dp83867->rx_id_delay = DP83867_RGMII_RX_CLK_DELAY_INV;
+ 	ret = of_property_read_u32(of_node, "ti,rx-internal-delay",
+ 				   &dp83867->rx_id_delay);
+ 	if (!ret && dp83867->rx_id_delay > DP83867_RGMII_RX_CLK_DELAY_MAX) {
+ 		phydev_err(phydev,
+ 			   "ti,rx-internal-delay value of %u out of range\n",
+ 			   dp83867->rx_id_delay);
+ 		return -EINVAL;
+ 	}
+ 
+ 	dp83867->tx_id_delay = DP83867_RGMII_TX_CLK_DELAY_INV;
+ 	ret = of_property_read_u32(of_node, "ti,tx-internal-delay",
+ 				   &dp83867->tx_id_delay);
+ 	if (!ret && dp83867->tx_id_delay > DP83867_RGMII_TX_CLK_DELAY_MAX) {
+ 		phydev_err(phydev,
+ 			   "ti,tx-internal-delay value of %u out of range\n",
+ 			   dp83867->tx_id_delay);
+ 		return -EINVAL;
+ 	}
++>>>>>>> fafc5db28a2f (net: phy: dp83867: fix hfs boot in rgmii mode)
  
  	if (of_property_read_bool(of_node, "enet-phy-lane-swap"))
  		dp83867->port_mirroring = DP83867_PORT_MIRROING_EN;
* Unmerged path drivers/net/phy/dp83867.c
