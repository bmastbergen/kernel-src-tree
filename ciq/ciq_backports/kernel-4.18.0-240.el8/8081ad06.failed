KVM: x86: Set KVM_REQ_EVENT if run is canceled with req_immediate_exit set

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 8081ad06b68a728e676d3b08e9ab70ce4039747b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8081ad06.failed

Re-request KVM_REQ_EVENT if vcpu_enter_guest() bails after processing
pending requests and an immediate exit was requested.  This fixes a bug
where a pending event, e.g. VMX preemption timer, is delayed and/or lost
if the exit was deferred due to something other than a higher priority
_injected_ event, e.g. due to a pending nested VM-Enter.  This bug only
affects the !injected case as kvm_x86_ops.cancel_injection() sets
KVM_REQ_EVENT to redo the injection, but that's purely serendipitous
behavior with respect to the deferred event.

Note, emulated preemption timer isn't the only event that can be
affected, it simply happens to be the only event where not re-requesting
KVM_REQ_EVENT is blatantly visible to the guest.

Fixes: f4124500c2c13 ("KVM: nVMX: Fully emulate preemption timer")
	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Message-Id: <20200423022550.15113-4-sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 8081ad06b68a728e676d3b08e9ab70ce4039747b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 2a5f5d2bc771,bdcb4e7c579d..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -8375,7 -8519,9 +8375,13 @@@ static int vcpu_enter_guest(struct kvm_
  	return r;
  
  cancel_injection:
++<<<<<<< HEAD
 +	kvm_x86_ops->cancel_injection(vcpu);
++=======
+ 	if (req_immediate_exit)
+ 		kvm_make_request(KVM_REQ_EVENT, vcpu);
+ 	kvm_x86_ops.cancel_injection(vcpu);
++>>>>>>> 8081ad06b68a (KVM: x86: Set KVM_REQ_EVENT if run is canceled with req_immediate_exit set)
  	if (unlikely(vcpu->arch.apic_attention))
  		kvm_lapic_sync_from_vapic(vcpu);
  out:
* Unmerged path arch/x86/kvm/x86.c
