devlink: Add layer 3 generic packet exception traps

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Amit Cohen <amitc@mellanox.com>
commit 3b063ae57bdfec5e574ace440e6c3f34c4115a92
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3b063ae5.failed

Add layer 3 generic packet exception traps that can report trapped
packets and documentation of the traps.

Unlike drop traps, these exception traps also need to inject the packet
to the kernel's receive path. For example, a packet that was trapped due
to unreachable neighbour need to be injected into the kernel so that it
will trigger an ARP request or a neighbour solicitation message.

	Signed-off-by: Amit Cohen <amitc@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3b063ae57bdfec5e574ace440e6c3f34c4115a92)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/devlink-trap.rst
#	include/net/devlink.h
#	net/core/devlink.c
diff --cc include/net/devlink.h
index 5cd0a720a8c2,8d6b5846822c..000000000000
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@@ -571,6 -569,21 +571,24 @@@ enum devlink_trap_generic_id 
  	DEVLINK_TRAP_GENERIC_ID_BLACKHOLE_ROUTE,
  	DEVLINK_TRAP_GENERIC_ID_TTL_ERROR,
  	DEVLINK_TRAP_GENERIC_ID_TAIL_DROP,
++<<<<<<< HEAD
++=======
+ 	DEVLINK_TRAP_GENERIC_ID_NON_IP_PACKET,
+ 	DEVLINK_TRAP_GENERIC_ID_UC_DIP_MC_DMAC,
+ 	DEVLINK_TRAP_GENERIC_ID_DIP_LB,
+ 	DEVLINK_TRAP_GENERIC_ID_SIP_MC,
+ 	DEVLINK_TRAP_GENERIC_ID_SIP_LB,
+ 	DEVLINK_TRAP_GENERIC_ID_CORRUPTED_IP_HDR,
+ 	DEVLINK_TRAP_GENERIC_ID_IPV4_SIP_BC,
+ 	DEVLINK_TRAP_GENERIC_ID_IPV6_MC_DIP_RESERVED_SCOPE,
+ 	DEVLINK_TRAP_GENERIC_ID_IPV6_MC_DIP_INTERFACE_LOCAL_SCOPE,
+ 	DEVLINK_TRAP_GENERIC_ID_MTU_ERROR,
+ 	DEVLINK_TRAP_GENERIC_ID_UNRESOLVED_NEIGH,
+ 	DEVLINK_TRAP_GENERIC_ID_RPF,
+ 	DEVLINK_TRAP_GENERIC_ID_REJECT_ROUTE,
+ 	DEVLINK_TRAP_GENERIC_ID_IPV4_LPM_UNICAST_MISS,
+ 	DEVLINK_TRAP_GENERIC_ID_IPV6_LPM_UNICAST_MISS,
++>>>>>>> 3b063ae57bdf (devlink: Add layer 3 generic packet exception traps)
  
  	/* Add new generic trap IDs above */
  	__DEVLINK_TRAP_GENERIC_ID_MAX,
@@@ -606,6 -622,36 +624,39 @@@ enum devlink_trap_group_generic_id 
  	"ttl_value_is_too_small"
  #define DEVLINK_TRAP_GENERIC_NAME_TAIL_DROP \
  	"tail_drop"
++<<<<<<< HEAD
++=======
+ #define DEVLINK_TRAP_GENERIC_NAME_NON_IP_PACKET \
+ 	"non_ip"
+ #define DEVLINK_TRAP_GENERIC_NAME_UC_DIP_MC_DMAC \
+ 	"uc_dip_over_mc_dmac"
+ #define DEVLINK_TRAP_GENERIC_NAME_DIP_LB \
+ 	"dip_is_loopback_address"
+ #define DEVLINK_TRAP_GENERIC_NAME_SIP_MC \
+ 	"sip_is_mc"
+ #define DEVLINK_TRAP_GENERIC_NAME_SIP_LB \
+ 	"sip_is_loopback_address"
+ #define DEVLINK_TRAP_GENERIC_NAME_CORRUPTED_IP_HDR \
+ 	"ip_header_corrupted"
+ #define DEVLINK_TRAP_GENERIC_NAME_IPV4_SIP_BC \
+ 	"ipv4_sip_is_limited_bc"
+ #define DEVLINK_TRAP_GENERIC_NAME_IPV6_MC_DIP_RESERVED_SCOPE \
+ 	"ipv6_mc_dip_reserved_scope"
+ #define DEVLINK_TRAP_GENERIC_NAME_IPV6_MC_DIP_INTERFACE_LOCAL_SCOPE \
+ 	"ipv6_mc_dip_interface_local_scope"
+ #define DEVLINK_TRAP_GENERIC_NAME_MTU_ERROR \
+ 	"mtu_value_is_too_small"
+ #define DEVLINK_TRAP_GENERIC_NAME_UNRESOLVED_NEIGH \
+ 	"unresolved_neigh"
+ #define DEVLINK_TRAP_GENERIC_NAME_RPF \
+ 	"mc_reverse_path_forwarding"
+ #define DEVLINK_TRAP_GENERIC_NAME_REJECT_ROUTE \
+ 	"reject_route"
+ #define DEVLINK_TRAP_GENERIC_NAME_IPV4_LPM_UNICAST_MISS \
+ 	"ipv4_lpm_miss"
+ #define DEVLINK_TRAP_GENERIC_NAME_IPV6_LPM_UNICAST_MISS \
+ 	"ipv6_lpm_miss"
++>>>>>>> 3b063ae57bdf (devlink: Add layer 3 generic packet exception traps)
  
  #define DEVLINK_TRAP_GROUP_GENERIC_NAME_L2_DROPS \
  	"l2_drops"
diff --cc net/core/devlink.c
index bd08745ef569,ff53f7d29dea..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -7566,6 -7602,21 +7566,24 @@@ static const struct devlink_trap devlin
  	DEVLINK_TRAP(BLACKHOLE_ROUTE, DROP),
  	DEVLINK_TRAP(TTL_ERROR, EXCEPTION),
  	DEVLINK_TRAP(TAIL_DROP, DROP),
++<<<<<<< HEAD
++=======
+ 	DEVLINK_TRAP(NON_IP_PACKET, DROP),
+ 	DEVLINK_TRAP(UC_DIP_MC_DMAC, DROP),
+ 	DEVLINK_TRAP(DIP_LB, DROP),
+ 	DEVLINK_TRAP(SIP_MC, DROP),
+ 	DEVLINK_TRAP(SIP_LB, DROP),
+ 	DEVLINK_TRAP(CORRUPTED_IP_HDR, DROP),
+ 	DEVLINK_TRAP(IPV4_SIP_BC, DROP),
+ 	DEVLINK_TRAP(IPV6_MC_DIP_RESERVED_SCOPE, DROP),
+ 	DEVLINK_TRAP(IPV6_MC_DIP_INTERFACE_LOCAL_SCOPE, DROP),
+ 	DEVLINK_TRAP(MTU_ERROR, EXCEPTION),
+ 	DEVLINK_TRAP(UNRESOLVED_NEIGH, EXCEPTION),
+ 	DEVLINK_TRAP(RPF, EXCEPTION),
+ 	DEVLINK_TRAP(REJECT_ROUTE, EXCEPTION),
+ 	DEVLINK_TRAP(IPV4_LPM_UNICAST_MISS, EXCEPTION),
+ 	DEVLINK_TRAP(IPV6_LPM_UNICAST_MISS, EXCEPTION),
++>>>>>>> 3b063ae57bdf (devlink: Add layer 3 generic packet exception traps)
  };
  
  #define DEVLINK_TRAP_GROUP(_id)						      \
* Unmerged path Documentation/networking/devlink-trap.rst
* Unmerged path Documentation/networking/devlink-trap.rst
* Unmerged path include/net/devlink.h
* Unmerged path net/core/devlink.c
