powerpc/kexec_file: Fix kexec load failure with lack of memory hole

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [powerpc] ppc64/kexec_file: fix kexec load failure with lack of memory hole (Diego Domingos) [1829715]
Rebuild_FUZZ: 95.45%
commit-author Hari Bathini <hbathini@linux.ibm.com>
commit b5667d13be8d0928a02b46e0c6f7ab891d32f697
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b5667d13.failed

The kexec purgatory has to run in real mode. Only the first memory
block maybe accessible in real mode. And, unlike the case with panic
kernel, no memory is set aside for regular kexec load. Another thing
to note is, the memory for crashkernel is reserved at an offset of
128MB. So, when crashkernel memory is reserved, the memory ranges to
load kexec segments shrink further as the generic code only looks for
memblock free memory ranges and in all likelihood only a tiny bit of
memory from 0 to 128MB would be available to load kexec segments.

With kdump being used by default in general, kexec file load is likely
to fail almost always. This can be fixed by changing the memory hole
lookup logic for regular kexec to use the same method as kdump. This
would mean that most kexec segments will overlap with crashkernel
memory region. That should still be ok as the pages, whose destination
address isn't available while loading, are placed in an intermediate
location till a flush to the actual destination address happens during
kexec boot sequence.

	Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
	Tested-by: Pingfan Liu <piliu@redhat.com>
	Reviewed-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/159602302326.575379.14038896654942043093.stgit@hbathini
(cherry picked from commit b5667d13be8d0928a02b46e0c6f7ab891d32f697)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kexec/file_load_64.c
* Unmerged path arch/powerpc/kexec/file_load_64.c
* Unmerged path arch/powerpc/kexec/file_load_64.c
