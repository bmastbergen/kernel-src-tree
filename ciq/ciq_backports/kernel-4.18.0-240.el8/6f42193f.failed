memremap: don't use a separate devm action for devmap_managed_enable_get

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 6f42193fd86eb5eb518984032c85e9b5582b7625
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6f42193f.failed

Just clean up for early failures and then piggy back on
devm_memremap_pages_release.  This helps with a pending not device managed
version of devm_memremap_pages.

Link: https://lore.kernel.org/r/20190818090557.17853-4-hch@lst.de
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Reviewed-by: Dan Williams <dan.j.williams@intel.com>
	Tested-by: Bharata B Rao <bharata@linux.ibm.com>
	Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 6f42193fd86eb5eb518984032c85e9b5582b7625)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memremap.c
diff --cc mm/memremap.c
index 2b401bc84cda,09a087ca30ff..000000000000
--- a/mm/memremap.c
+++ b/mm/memremap.c
@@@ -132,8 -125,8 +135,13 @@@ static void devm_memremap_pages_release
  
  	untrack_pfn(NULL, PHYS_PFN(res->start), resource_size(res));
  	pgmap_array_delete(res);
++<<<<<<< HEAD:mm/memremap.c
 +	dev_WARN_ONCE(dev, pgmap->altmap.alloc,
 +		      "%s: failed to free all reserved pages\n", __func__);
++=======
+ 	WARN_ONCE(pgmap->altmap.alloc, "failed to free all reserved pages\n");
+ 	devmap_managed_enable_put();
++>>>>>>> 6f42193fd86e (memremap: don't use a separate devm action for devmap_managed_enable_get):kernel/memremap.c
  }
  
  static void dev_pagemap_percpu_release(struct percpu_ref *ref)
* Unmerged path mm/memremap.c
