ipv6: Notify route if replacing currently offloaded one

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ido Schimmel <idosch@mellanox.com>
commit 51bf7f387fdfe5ec8c33734b3124ccec83c8d0c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/51bf7f38.failed

Similar to the corresponding IPv4 patch, only notify the new route if it
is replacing the currently offloaded one. Meaning, the one pointed to by
'fn->leaf'.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Reviewed-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 51bf7f387fdfe5ec8c33734b3124ccec83c8d0c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_fib.c
diff --cc net/ipv6/ip6_fib.c
index 246c67f714a3,7cf9554888b0..000000000000
--- a/net/ipv6/ip6_fib.c
+++ b/net/ipv6/ip6_fib.c
@@@ -1166,13 -1230,22 +1166,30 @@@ add
  			return -ENOENT;
  		}
  
++<<<<<<< HEAD
 +		err = call_fib6_entry_notifiers(info->nl_net,
 +						FIB_EVENT_ENTRY_REPLACE,
 +						rt, extack);
 +		if (err)
 +			return err;
++=======
+ 		if (!info->skip_notify_kernel) {
+ 			enum fib_event_type fib_event;
+ 
+ 			fib_event = FIB_EVENT_ENTRY_REPLACE_TMP;
+ 			if (ins == &fn->leaf)
+ 				err = call_fib6_entry_notifiers(info->nl_net,
+ 								fib_event, rt,
+ 								extack);
+ 			err = call_fib6_entry_notifiers(info->nl_net,
+ 							FIB_EVENT_ENTRY_REPLACE,
+ 							rt, extack);
+ 			if (err)
+ 				return err;
+ 		}
++>>>>>>> 51bf7f387fdf (ipv6: Notify route if replacing currently offloaded one)
  
 -		fib6_info_hold(rt);
 +		atomic_inc(&rt->fib6_ref);
  		rcu_assign_pointer(rt->fib6_node, fn);
  		rt->fib6_next = iter->fib6_next;
  		rcu_assign_pointer(*ins, rt);
* Unmerged path net/ipv6/ip6_fib.c
