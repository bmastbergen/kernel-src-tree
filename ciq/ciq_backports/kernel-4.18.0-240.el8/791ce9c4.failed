perf test: Avoid infinite loop for task exit case

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Leo Yan <leo.yan@linaro.org>
commit 791ce9c48c79210d2ffcdbe69421e7783b32921f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/791ce9c4.failed

When executing the task exit testing case, perf gets stuck in an endless
loop this case and doesn't return back on Arm64 Juno board.

After digging into this issue, since Juno board has Arm's big.LITTLE
CPUs, thus the PMUs are not compatible between the big CPUs and little
CPUs.  This leads to a PMU event that cannot be enabled properly when
the traced task is migrated from one variant's CPU to another variant.
Finally, the test case runs into infinite loop for cannot read out any
event data after return from polling.

Eventually, we need to work out formal solution to allow PMU events can
be freely migrated from one CPU variant to another, but this is a
difficult task and a different topic.  This patch tries to fix the Perf
test case to avoid infinite loop, when the testing detects 1000 times
retrying for reading empty events, it will directly bail out and return
failure.  This allows the Perf tool can continue its other test cases.

	Signed-off-by: Leo Yan <leo.yan@linaro.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: http://lore.kernel.org/lkml/20191011091942.29841-2-leo.yan@linaro.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 791ce9c48c79210d2ffcdbe69421e7783b32921f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/tests/task-exit.c
diff --cc tools/perf/tests/task-exit.c
index 788b0805d2f1,adaff9044331..000000000000
--- a/tools/perf/tests/task-exit.c
+++ b/tools/perf/tests/task-exit.c
@@@ -45,9 -51,10 +45,16 @@@ int test__task_exit(struct test *test _
  	};
  	const char *argv[] = { "true", NULL };
  	char sbuf[STRERR_BUFSIZE];
++<<<<<<< HEAD
 +	struct cpu_map *cpus;
 +	struct thread_map *threads;
 +	struct perf_mmap *md;
++=======
+ 	struct perf_cpu_map *cpus;
+ 	struct perf_thread_map *threads;
+ 	struct mmap *md;
+ 	int retry_count = 0;
++>>>>>>> 791ce9c48c79 (perf test: Avoid infinite loop for task exit case)
  
  	signal(SIGCHLD, sig_handler);
  
@@@ -126,7 -133,14 +133,18 @@@ retry
  
  out_init:
  	if (!exited || !nr_exit) {
++<<<<<<< HEAD
 +		perf_evlist__poll(evlist, -1);
++=======
+ 		evlist__poll(evlist, -1);
+ 
+ 		if (retry_count++ > 1000) {
+ 			pr_debug("Failed after retrying 1000 times\n");
+ 			err = -1;
+ 			goto out_free_maps;
+ 		}
+ 
++>>>>>>> 791ce9c48c79 (perf test: Avoid infinite loop for task exit case)
  		goto retry;
  	}
  
* Unmerged path tools/perf/tests/task-exit.c
