Bluetooth: Fix not using LE_ADV_NONCONN_IND for instance 0

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
commit 492ad783a150cd352abba8723e5942521d938c8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/492ad783.failed

Instance 0 is controlled by stack itself and always set the local name
in the scan response.

	Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 492ad783a150cd352abba8723e5942521d938c8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_request.c
diff --cc net/bluetooth/hci_request.c
index 9ceb26407637,ba99c292cf04..000000000000
--- a/net/bluetooth/hci_request.c
+++ b/net/bluetooth/hci_request.c
@@@ -804,20 -896,26 +804,39 @@@ void hci_req_add_le_passive_scan(struc
  	    (hdev->le_features[0] & HCI_LE_EXT_SCAN_POLICY))
  		filter_policy |= 0x02;
  
 -	hci_req_start_scan(req, LE_SCAN_PASSIVE, hdev->le_scan_interval,
 -			   hdev->le_scan_window, own_addr_type, filter_policy);
 -}
 -
 +	memset(&param_cp, 0, sizeof(param_cp));
 +	param_cp.type = LE_SCAN_PASSIVE;
 +	param_cp.interval = cpu_to_le16(hdev->le_scan_interval);
 +	param_cp.window = cpu_to_le16(hdev->le_scan_window);
 +	param_cp.own_address_type = own_addr_type;
 +	param_cp.filter_policy = filter_policy;
 +	hci_req_add(req, HCI_OP_LE_SET_SCAN_PARAM, sizeof(param_cp),
 +		    &param_cp);
 +
++<<<<<<< HEAD
 +	memset(&enable_cp, 0, sizeof(enable_cp));
 +	enable_cp.enable = LE_SCAN_ENABLE;
 +	enable_cp.filter_dup = LE_SCAN_FILTER_DUP_ENABLE;
 +	hci_req_add(req, HCI_OP_LE_SET_SCAN_ENABLE, sizeof(enable_cp),
 +		    &enable_cp);
++=======
+ static u8 get_adv_instance_scan_rsp_len(struct hci_dev *hdev, u8 instance)
+ {
+ 	struct adv_info *adv_instance;
+ 
+ 	/* Instance 0x00 always set local name */
+ 	if (instance == 0x00)
+ 		return 1;
+ 
+ 	adv_instance = hci_find_adv_instance(hdev, instance);
+ 	if (!adv_instance)
+ 		return 0;
+ 
+ 	/* TODO: Take into account the "appearance" and "local-name" flags here.
+ 	 * These are currently being ignored as they are not supported.
+ 	 */
+ 	return adv_instance->scan_rsp_len;
++>>>>>>> 492ad783a150 (Bluetooth: Fix not using LE_ADV_NONCONN_IND for instance 0)
  }
  
  static u8 get_cur_adv_instance_scan_rsp_len(struct hci_dev *hdev)
* Unmerged path net/bluetooth/hci_request.c
