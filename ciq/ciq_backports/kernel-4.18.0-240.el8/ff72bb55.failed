KVM: s390: Manually invoke vcpu setup during kvm_arch_vcpu_create()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit ff72bb55cbfd060172cfbafafe4838ce92ab080f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ff72bb55.failed

Rename kvm_arch_vcpu_setup() to kvm_s390_vcpu_setup() and manually call
the new function during kvm_arch_vcpu_create().  Define an empty
kvm_arch_vcpu_setup() as it's still required for compilation.  This
is effectively a nop as kvm_arch_vcpu_create() and kvm_arch_vcpu_setup()
are called back-to-back by common KVM code.  Obsoleting
kvm_arch_vcpu_setup() paves the way for its removal.

Note, gmap_remove() is now called if setup fails, as s390 was previously
freeing it via kvm_arch_vcpu_destroy(), which is called by common KVM
code if kvm_arch_vcpu_setup() fails.

No functional change intended.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit ff72bb55cbfd060172cfbafafe4838ce92ab080f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kvm/kvm-s390.c
diff --cc arch/s390/kvm/kvm-s390.c
index d6b727e2f0a2,dca3d6aac2bb..000000000000
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@@ -3082,19 -3071,21 +3087,34 @@@ struct kvm_vcpu *kvm_arch_vcpu_create(s
  			goto out_free_sie_block;
  	}
  
++<<<<<<< HEAD
 +	VM_EVENT(kvm, 3, "create cpu %d at 0x%pK, sie block at 0x%pK", id, vcpu,
 +		 vcpu->arch.sie_block);
 +	trace_kvm_s390_create_vcpu(id, vcpu, vcpu->arch.sie_block);
 +
 +	return vcpu;
++=======
+ 	VM_EVENT(vcpu->kvm, 3, "create cpu %d at 0x%pK, sie block at 0x%pK",
+ 		 vcpu->vcpu_id, vcpu, vcpu->arch.sie_block);
+ 	trace_kvm_s390_create_vcpu(vcpu->vcpu_id, vcpu, vcpu->arch.sie_block);
+ 
+ 	rc = kvm_s390_vcpu_setup(vcpu);
+ 	if (rc)
+ 		goto out_ucontrol_uninit;
+ 	return 0;
+ 
+ out_ucontrol_uninit:
+ 	if (kvm_is_ucontrol(vcpu->kvm))
+ 		gmap_remove(vcpu->arch.gmap);
++>>>>>>> ff72bb55cbfd (KVM: s390: Manually invoke vcpu setup during kvm_arch_vcpu_create())
  out_free_sie_block:
  	free_page((unsigned long)(vcpu->arch.sie_block));
 -	return rc;
 +out_uninit_vcpu:
 +	kvm_vcpu_uninit(vcpu);
 +out_free_cpu:
 +	kmem_cache_free(kvm_vcpu_cache, vcpu);
 +out:
 +	return ERR_PTR(rc);
  }
  
  int kvm_arch_vcpu_runnable(struct kvm_vcpu *vcpu)
* Unmerged path arch/s390/kvm/kvm-s390.c
