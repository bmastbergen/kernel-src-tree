selftests/bpf: Build urandom_read with LDFLAGS and LDLIBS

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Daniel Díaz <daniel.diaz@linaro.org>
commit 1222653cc0489fa9304a36f7d9593ecaeb51efe1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/1222653c.failed

During cross-compilation, it was discovered that LDFLAGS and
LDLIBS were not being used while building binaries, leading
to defaults which were not necessarily correct.

OpenEmbedded reported this kind of problem:

  ERROR: QA Issue: No GNU_HASH in the ELF binary [...], didn't pass LDFLAGS?

	Signed-off-by: Daniel Díaz <daniel.diaz@linaro.org>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Andrii Nakryiko <andriin@fb.com>
	Acked-by: John Fastabend <john.fastabend@gmail.com>
(cherry picked from commit 1222653cc0489fa9304a36f7d9593ecaeb51efe1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/Makefile
diff --cc tools/testing/selftests/bpf/Makefile
index 1739bffedc44,5f41f5bd8033..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -94,21 -116,28 +94,27 @@@ $(notdir $(TEST_GEN_PROGS)						
  	 $(TEST_GEN_PROGS_EXTENDED)					\
  	 $(TEST_CUSTOM_PROGS)): %: $(OUTPUT)/% ;
  
 -$(OUTPUT)/%:%.c
 -	$(call msg,BINARY,,$@)
 -	$(LINK.c) $^ $(LDLIBS) -o $@
 +# NOTE: $(OUTPUT) won't get default value if used before lib.mk
 +TEST_CUSTOM_PROGS = $(OUTPUT)/urandom_read
 +all: $(TEST_CUSTOM_PROGS)
  
++<<<<<<< HEAD
 +$(OUTPUT)/urandom_read: $(OUTPUT)/%: %.c
 +	$(CC) -o $@ $< -Wl,--build-id
++=======
+ $(OUTPUT)/urandom_read: urandom_read.c
+ 	$(call msg,BINARY,,$@)
+ 	$(CC) $(LDFLAGS) -o $@ $< $(LDLIBS) -Wl,--build-id
++>>>>>>> 1222653cc048 (selftests/bpf: Build urandom_read with LDFLAGS and LDLIBS)
 +
 +$(OUTPUT)/test_stub.o: test_stub.c
 +	$(CC) $(TEST_PROGS_CFLAGS) $(CFLAGS) -c -o $@ $<
  
 -$(OUTPUT)/test_stub.o: test_stub.c $(BPFOBJ)
 -	$(call msg,CC,,$@)
 -	$(CC) -c $(CFLAGS) -o $@ $<
 +BPFOBJ := $(OUTPUT)/libbpf.a
  
 -VMLINUX_BTF_PATHS := $(abspath ../../../../vmlinux)			\
 -			       /sys/kernel/btf/vmlinux			\
 -			       /boot/vmlinux-$(shell uname -r)
 -VMLINUX_BTF:= $(firstword $(wildcard $(VMLINUX_BTF_PATHS)))
 -$(OUTPUT)/runqslower: $(BPFOBJ)
 -	$(Q)$(MAKE) $(submake_extras) -C $(TOOLSDIR)/bpf/runqslower	\
 -		    OUTPUT=$(SCRATCH_DIR)/ VMLINUX_BTF=$(VMLINUX_BTF)   \
 -		    BPFOBJ=$(BPFOBJ) BPF_INCLUDE=$(INCLUDE_DIR)
 +$(TEST_GEN_PROGS): $(OUTPUT)/test_stub.o $(BPFOBJ)
  
 -$(TEST_GEN_PROGS) $(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(BPFOBJ)
 +$(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(OUTPUT)/libbpf.a
  
  $(OUTPUT)/test_dev_cgroup: cgroup_helpers.c
  $(OUTPUT)/test_skb_cgroup_id_user: cgroup_helpers.c
* Unmerged path tools/testing/selftests/bpf/Makefile
