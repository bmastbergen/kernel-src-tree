sunrpc: no need to check return value of debugfs_create functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 0a0762c6c604bb0ce8afe4ee052514e0208152a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0a0762c6.failed

When calling debugfs functions, there is no need to ever check the
return value.  The function can work or not, but the code logic should
never do something different based on this.

	Cc: "J. Bruce Fields" <bfields@fieldses.org>
	Cc: Jeff Layton <jlayton@kernel.org>
	Cc: Trond Myklebust <trond.myklebust@hammerspace.com>
	Cc: Anna Schumaker <anna.schumaker@netapp.com>
	Cc: linux-nfs@vger.kernel.org
	Cc: netdev@vger.kernel.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Link: https://lore.kernel.org/r/20190612145622.GA18839@kroah.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 0a0762c6c604bb0ce8afe4ee052514e0208152a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/debugfs.c
diff --cc net/sunrpc/debugfs.c
index 228bc7e8bca0,707d7aab1546..000000000000
--- a/net/sunrpc/debugfs.c
+++ b/net/sunrpc/debugfs.c
@@@ -148,29 -121,35 +147,40 @@@ voi
  rpc_clnt_debugfs_register(struct rpc_clnt *clnt)
  {
  	int len;
 -	char name[24]; /* enough for "../../rpc_xprt/ + 8 hex digits + NULL */
 -	struct rpc_xprt *xprt;
 +	char name[9]; /* enough for 8 hex digits + NULL */
 +	int xprtnum = 0;
  
- 	/* Already registered? */
- 	if (clnt->cl_debugfs || !rpc_clnt_dir)
- 		return;
- 
  	len = snprintf(name, sizeof(name), "%x", clnt->cl_clid);
  	if (len >= sizeof(name))
  		return;
  
  	/* make the per-client dir */
  	clnt->cl_debugfs = debugfs_create_dir(name, rpc_clnt_dir);
- 	if (!clnt->cl_debugfs)
- 		return;
  
  	/* make tasks file */
- 	if (!debugfs_create_file("tasks", S_IFREG | 0400, clnt->cl_debugfs,
- 				 clnt, &tasks_fops))
- 		goto out_err;
+ 	debugfs_create_file("tasks", S_IFREG | 0400, clnt->cl_debugfs, clnt,
+ 			    &tasks_fops);
  
++<<<<<<< HEAD
 +	if (rpc_clnt_iterate_for_each_xprt(clnt, do_xprt_debugfs, &xprtnum) < 0)
 +		goto out_err;
++=======
+ 	rcu_read_lock();
+ 	xprt = rcu_dereference(clnt->cl_xprt);
+ 	/* no "debugfs" dentry? Don't bother with the symlink. */
+ 	if (IS_ERR_OR_NULL(xprt->debugfs)) {
+ 		rcu_read_unlock();
+ 		return;
+ 	}
+ 	len = snprintf(name, sizeof(name), "../../rpc_xprt/%s",
+ 			xprt->debugfs->d_name.name);
+ 	rcu_read_unlock();
+ 
+ 	if (len >= sizeof(name))
+ 		goto out_err;
+ 
+ 	debugfs_create_symlink("xprt", clnt->cl_debugfs, name);
++>>>>>>> 0a0762c6c604 (sunrpc: no need to check return value of debugfs_create functions)
  
  	return;
  out_err:
* Unmerged path net/sunrpc/debugfs.c
