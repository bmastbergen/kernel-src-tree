libperf: Add 'mask' to struct perf_mmap

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 4fd0cef2c7b6469abfeef1f9bd056265ce369b13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/4fd0cef2.failed

Move 'mask' from tools/perf's mmap to libperf's perf_mmap struct.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-12-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 4fd0cef2c7b6469abfeef1f9bd056265ce369b13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/include/internal/mmap.h
#	tools/perf/util/mmap.c
#	tools/perf/util/mmap.h
diff --cc tools/perf/util/mmap.c
index 850493205040,702e8e0b90ea..000000000000
--- a/tools/perf/util/mmap.c
+++ b/tools/perf/util/mmap.c
@@@ -17,11 -18,13 +17,11 @@@
  #include "debug.h"
  #include "event.h"
  #include "mmap.h"
 -#include "../perf.h"
  #include "util.h" /* page_size */
  
 -size_t perf_mmap__mmap_len(struct mmap *map)
 +size_t perf_mmap__mmap_len(struct perf_mmap *map)
  {
- 	return map->mask + 1 + page_size;
+ 	return map->core.mask + 1 + page_size;
  }
  
  /* When check_messup is true, 'end' must points to a good entry */
@@@ -366,13 -369,13 +366,18 @@@ int perf_mmap__mmap(struct perf_mmap *m
  	 */
  	refcount_set(&map->refcnt, 2);
  	map->prev = 0;
++<<<<<<< HEAD
 +	map->mask = mp->mask;
 +	map->base = mmap(NULL, perf_mmap__mmap_len(map), mp->prot,
++=======
+ 	map->core.mask = mp->mask;
+ 	map->core.base = mmap(NULL, perf_mmap__mmap_len(map), mp->prot,
++>>>>>>> 4fd0cef2c7b6 (libperf: Add 'mask' to struct perf_mmap)
  			 MAP_SHARED, fd, 0);
 -	if (map->core.base == MAP_FAILED) {
 +	if (map->base == MAP_FAILED) {
  		pr_debug2("failed to mmap perf event ring buffer, error %d\n",
  			  errno);
 -		map->core.base = NULL;
 +		map->base = NULL;
  		return -1;
  	}
  	map->fd = fd;
diff --cc tools/perf/util/mmap.h
index 274ce389cd84,370138e395fc..000000000000
--- a/tools/perf/util/mmap.h
+++ b/tools/perf/util/mmap.h
@@@ -18,9 -20,8 +18,14 @@@ struct aiocb
   *
   * @refcnt - e.g. code using PERF_EVENT_IOC_SET_OUTPUT to share this
   */
++<<<<<<< HEAD
 +struct perf_mmap {
 +	void		 *base;
 +	int		 mask;
++=======
+ struct mmap {
+ 	struct perf_mmap	core;
++>>>>>>> 4fd0cef2c7b6 (libperf: Add 'mask' to struct perf_mmap)
  	int		 fd;
  	int		 cpu;
  	refcount_t	 refcnt;
* Unmerged path tools/perf/lib/include/internal/mmap.h
* Unmerged path tools/perf/lib/include/internal/mmap.h
* Unmerged path tools/perf/util/mmap.c
* Unmerged path tools/perf/util/mmap.h
