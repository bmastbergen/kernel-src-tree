drm/amd/display: Indicate dsc updates explicitly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Anthony Koo <Anthony.Koo@amd.com>
commit acdac228c4d1b9ff8ac778835719d3381c198aad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/acdac228.failed

[Why]
DSC updates only set type to FULL UPDATE, but doesn't
flag the change

[How]
Add DSC flag update flag

	Signed-off-by: Anthony Koo <Anthony.Koo@amd.com>
	Reviewed-by: Aric Cyr <Aric.Cyr@amd.com>
	Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit acdac228c4d1b9ff8ac778835719d3381c198aad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/dc/core/dc.c
#	drivers/gpu/drm/amd/display/dc/dc_stream.h
diff --cc drivers/gpu/drm/amd/display/dc/core/dc.c
index d8c0d01bb191,c9c7cf00976f..000000000000
--- a/drivers/gpu/drm/amd/display/dc/core/dc.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc.c
@@@ -1489,27 -1717,36 +1489,40 @@@ static enum surface_update_type check_u
  
  	/* some stream updates require passive update */
  	if (stream_update) {
 -		union stream_update_flags *su_flags = &stream_update->stream->update_flags;
 +		if ((stream_update->src.height != 0) &&
 +				(stream_update->src.width != 0))
 +			return UPDATE_TYPE_FULL;
  
 -		if ((stream_update->src.height != 0 && stream_update->src.width != 0) ||
 -			(stream_update->dst.height != 0 && stream_update->dst.width != 0) ||
 -			stream_update->integer_scaling_update)
 -			su_flags->bits.scaling = 1;
 +		if ((stream_update->dst.height != 0) &&
 +				(stream_update->dst.width != 0))
 +			return UPDATE_TYPE_FULL;
  
  		if (stream_update->out_transfer_func)
 -			su_flags->bits.out_tf = 1;
 +			return UPDATE_TYPE_FULL;
  
  		if (stream_update->abm_level)
 -			su_flags->bits.abm_level = 1;
 +			return UPDATE_TYPE_FULL;
  
  		if (stream_update->dpms_off)
 -			su_flags->bits.dpms_off = 1;
 -
 -		if (stream_update->gamut_remap)
 -			su_flags->bits.gamut_remap = 1;
 +			return UPDATE_TYPE_FULL;
  
 +#if defined(CONFIG_DRM_AMD_DC_DCN2_0)
  		if (stream_update->wb_update)
++<<<<<<< HEAD
 +			return UPDATE_TYPE_FULL;
 +#endif
++=======
+ 			su_flags->bits.wb_update = 1;
+ 
+ 		if (stream_update->dsc_config)
+ 			su_flags->bits.dsc_changed = 1;
+ 
+ 		if (su_flags->raw != 0)
+ 			overall_type = UPDATE_TYPE_FULL;
+ 
+ 		if (stream_update->output_csc_transform || stream_update->output_color_space)
+ 			su_flags->bits.out_csc = 1;
++>>>>>>> acdac228c4d1 (drm/amd/display: Indicate dsc updates explicitly)
  	}
  
  	for (i = 0 ; i < surface_count; i++) {
@@@ -1544,9 -1780,26 +1557,18 @@@ enum surface_update_type dc_check_updat
  		updates[i].surface->update_flags.raw = 0;
  
  	type = check_update_surfaces_for_stream(dc, updates, surface_count, stream_update, stream_status);
++<<<<<<< HEAD
 +	if (type == UPDATE_TYPE_FULL)
++=======
+ 	if (type == UPDATE_TYPE_FULL) {
+ 		if (stream_update) {
+ 			uint32_t dsc_changed = stream_update->stream->update_flags.bits.dsc_changed;
+ 			stream_update->stream->update_flags.raw = 0xFFFFFFFF;
+ 			stream_update->stream->update_flags.bits.dsc_changed = dsc_changed;
+ 		}
++>>>>>>> acdac228c4d1 (drm/amd/display: Indicate dsc updates explicitly)
  		for (i = 0; i < surface_count; i++)
  			updates[i].surface->update_flags.raw = 0xFFFFFFFF;
 -	}
 -
 -	if (type == UPDATE_TYPE_FAST) {
 -		// If there's an available clock comparator, we use that.
 -		if (dc->clk_mgr->funcs->are_clock_states_equal) {
 -			if (!dc->clk_mgr->funcs->are_clock_states_equal(&dc->clk_mgr->clks, &dc->current_state->bw_ctx.bw.dcn.clk))
 -				dc->optimized_required = true;
 -		// Else we fallback to mem compare.
 -		} else if (memcmp(&dc->current_state->bw_ctx.bw.dcn.clk, &dc->clk_mgr->clks, offsetof(struct dc_clocks, prev_p_state_change_support)) != 0) {
 -			dc->optimized_required = true;
 -		}
 -	}
  
  	return type;
  }
@@@ -1830,19 -2097,19 +1852,29 @@@ static void commit_planes_do_stream_upd
  					odm_pipe->stream_res.opp->funcs->opp_program_fmt(odm_pipe->stream_res.opp,
  							&stream->bit_depth_params,
  							&stream->clamping);
 -					odm_pipe = odm_pipe->next_odm_pipe;
 -				}
 +#endif
  			}
  
++<<<<<<< HEAD
 +#if defined(CONFIG_DRM_AMD_DC_DSC_SUPPORT)
++=======
+ 			/* Full fe update*/
+ 			if (update_type == UPDATE_TYPE_FAST)
+ 				continue;
+ 
++>>>>>>> acdac228c4d1 (drm/amd/display: Indicate dsc updates explicitly)
  			if (stream_update->dsc_config && dc->hwss.pipe_control_lock_global) {
  				dc->hwss.pipe_control_lock_global(dc, pipe_ctx, true);
  				dp_update_dsc_config(pipe_ctx);
  				dc->hwss.pipe_control_lock_global(dc, pipe_ctx, false);
  			}
++<<<<<<< HEAD
 +#endif
 +			/* Full fe update*/
 +			if (update_type == UPDATE_TYPE_FAST)
 +				continue;
++=======
++>>>>>>> acdac228c4d1 (drm/amd/display: Indicate dsc updates explicitly)
  
  			if (stream_update->dpms_off) {
  				dc->hwss.pipe_control_lock(dc, pipe_ctx, true);
diff --cc drivers/gpu/drm/amd/display/dc/dc_stream.h
index 0fa1c26bc20d,a5c7ef47b8d3..000000000000
--- a/drivers/gpu/drm/amd/display/dc/dc_stream.h
+++ b/drivers/gpu/drm/amd/display/dc/dc_stream.h
@@@ -113,6 -109,20 +113,23 @@@ struct periodic_interrupt_config 
  	int lines_offset;
  };
  
++<<<<<<< HEAD
++=======
+ union stream_update_flags {
+ 	struct {
+ 		uint32_t scaling:1;
+ 		uint32_t out_tf:1;
+ 		uint32_t out_csc:1;
+ 		uint32_t abm_level:1;
+ 		uint32_t dpms_off:1;
+ 		uint32_t gamut_remap:1;
+ 		uint32_t wb_update:1;
+ 		uint32_t dsc_changed : 1;
+ 	} bits;
+ 
+ 	uint32_t raw;
+ };
++>>>>>>> acdac228c4d1 (drm/amd/display: Indicate dsc updates explicitly)
  
  struct dc_stream_state {
  	// sink is deprecated, new code should not reference
* Unmerged path drivers/gpu/drm/amd/display/dc/core/dc.c
* Unmerged path drivers/gpu/drm/amd/display/dc/dc_stream.h
