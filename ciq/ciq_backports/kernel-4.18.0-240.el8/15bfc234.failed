modpost: check for static EXPORT_SYMBOL* functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Denis Efremov <efremov@linux.com>
commit 15bfc2348d549b44bdca266747f71c0d54bc0e5f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/15bfc234.failed

This patch adds a check to warn about static EXPORT_SYMBOL* functions
during the modpost. In most of the cases, a static symbol marked for
exporting is an odd combination that should be fixed either by deleting
the exporting mark or by removing the static attribute and adding the
appropriate declaration to headers.

This check could help to detect the following problems:
1. 550113d4e9f5 ("i2c: add newly exported functions to the header, too")
2. 54638c6eaf44 ("net: phy: make exported variables non-static")
3. 98ef2046f28b ("mm: remove the exporting of totalram_pages")
4. 73df167c819e ("s390/zcrypt: remove the exporting of ap_query_configuration")
5. a57caf8c527f ("sunrpc/cache: remove the exporting of cache_seq_next")
6. e4e4730698c9 ("crypto: skcipher - remove the exporting of skcipher_walk_next")
7. 14b4c48bb1ce ("gve: Remove the exporting of gve_probe")
8. 9b79ee9773a8 ("scsi: libsas: remove the exporting of sas_wait_eh")
9. ...

The build time impact is very limited and is almost at the unnoticeable
level (< 1 sec).

	Acked-by: Emil Velikov <emil.l.velikov@gmail.com>
	Signed-off-by: Denis Efremov <efremov@linux.com>
	Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
(cherry picked from commit 15bfc2348d549b44bdca266747f71c0d54bc0e5f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	scripts/mod/modpost.c
diff --cc scripts/mod/modpost.c
index 668b67778301,2773f9f9bae2..000000000000
--- a/scripts/mod/modpost.c
+++ b/scripts/mod/modpost.c
@@@ -2518,18 -2536,22 +2537,37 @@@ int main(int argc, char **argv
  	}
  	if (dump_write)
  		write_dump(dump_write);
++<<<<<<< HEAD
 +	if (sec_mismatch_count) {
 +		if (!sec_mismatch_verbose) {
 +			warn("modpost: Found %d section mismatch(es).\n"
 +			     "To see full details build your kernel with:\n"
 +			     "'make CONFIG_DEBUG_SECTION_MISMATCH=y'\n",
 +			     sec_mismatch_count);
 +		}
 +		if (sec_mismatch_fatal) {
 +			fatal("modpost: Section mismatches detected.\n"
 +			      "Set CONFIG_SECTION_MISMATCH_WARN_ONLY=y to allow them.\n");
 +		}
 +	}
++=======
+ 	if (sec_mismatch_count && sec_mismatch_fatal)
+ 		fatal("modpost: Section mismatches detected.\n"
+ 		      "Set CONFIG_SECTION_MISMATCH_WARN_ONLY=y to allow them.\n");
+ 	for (n = 0; n < SYMBOL_HASH_SIZE; n++) {
+ 		struct symbol *s = symbolhash[n];
+ 
+ 		while (s) {
+ 			if (s->is_static)
+ 				warn("\"%s\" [%s] is a static %s\n",
+ 				     s->name, s->module->name,
+ 				     export_str(s->export));
+ 
+ 			s = s->next;
+ 		}
+ 	}
+ 
++>>>>>>> 15bfc2348d54 (modpost: check for static EXPORT_SYMBOL* functions)
  	free(buf.p);
  
  	return err;
* Unmerged path scripts/mod/modpost.c
