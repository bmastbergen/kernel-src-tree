drm/amdgpu: invalidate L2 before SDMA IBs (v2)

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Marek Olšák <marek.olsak@amd.com>
commit 652a6a858fcfe2ee053856b52c4736f61b3982be
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/652a6a85.failed

This fixes GPU hangs due to cache coherency issues.

v2: Split the version bump to a separate patch

	Signed-off-by: Marek Olšák <marek.olsak@amd.com>
	Reviewed-by: Christian König <christian.koenig@amd.com>
	Tested-by: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 652a6a858fcfe2ee053856b52c4736f61b3982be)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
index 2d8d12c3eee0,f9e92e85813a..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
@@@ -339,8 -410,27 +339,32 @@@ static void sdma_v5_0_ring_emit_ib(stru
  	unsigned vmid = AMDGPU_JOB_GET_VMID(job);
  	uint64_t csa_mc_addr = amdgpu_sdma_get_csa_mc_addr(ring, vmid);
  
++<<<<<<< HEAD
 +	/* IB packet must end on a 8 DW boundary */
 +	sdma_v5_0_ring_insert_nop(ring, (10 - (lower_32_bits(ring->wptr) & 7)) % 8);
++=======
+ 	/* Invalidate L2, because if we don't do it, we might get stale cache
+ 	 * lines from previous IBs.
+ 	 */
+ 	amdgpu_ring_write(ring, SDMA_PKT_HEADER_OP(SDMA_OP_GCR_REQ));
+ 	amdgpu_ring_write(ring, 0);
+ 	amdgpu_ring_write(ring, (SDMA_GCR_GL2_INV |
+ 				 SDMA_GCR_GL2_WB |
+ 				 SDMA_GCR_GLM_INV |
+ 				 SDMA_GCR_GLM_WB) << 16);
+ 	amdgpu_ring_write(ring, 0xffffff80);
+ 	amdgpu_ring_write(ring, 0xffff);
+ 
+ 	/* An IB packet must end on a 8 DW boundary--the next dword
+ 	 * must be on a 8-dword boundary. Our IB packet below is 6
+ 	 * dwords long, thus add x number of NOPs, such that, in
+ 	 * modular arithmetic,
+ 	 * wptr + 6 + x = 8k, k >= 0, which in C is,
+ 	 * (wptr + 6 + x) % 8 = 0.
+ 	 * The expression below, is a solution of x.
+ 	 */
+ 	sdma_v5_0_ring_insert_nop(ring, (2 - lower_32_bits(ring->wptr)) & 7);
++>>>>>>> 652a6a858fcf (drm/amdgpu: invalidate L2 before SDMA IBs (v2))
  
  	amdgpu_ring_write(ring, SDMA_PKT_HEADER_OP(SDMA_OP_INDIRECT) |
  			  SDMA_PKT_INDIRECT_HEADER_VMID(vmid & 0xf));
@@@ -1543,9 -1644,9 +1567,9 @@@ static const struct amdgpu_ring_funcs s
  		6 + /* sdma_v5_0_ring_emit_pipeline_sync */
  		/* sdma_v5_0_ring_emit_vm_flush */
  		SOC15_FLUSH_GPU_TLB_NUM_WREG * 3 +
 -		SOC15_FLUSH_GPU_TLB_NUM_REG_WAIT * 6 * 2 +
 +		SOC15_FLUSH_GPU_TLB_NUM_REG_WAIT * 6 +
  		10 + 10 + 10, /* sdma_v5_0_ring_emit_fence x3 for user fence, vm fence */
- 	.emit_ib_size = 7 + 6, /* sdma_v5_0_ring_emit_ib */
+ 	.emit_ib_size = 5 + 7 + 6, /* sdma_v5_0_ring_emit_ib */
  	.emit_ib = sdma_v5_0_ring_emit_ib,
  	.emit_fence = sdma_v5_0_ring_emit_fence,
  	.emit_pipeline_sync = sdma_v5_0_ring_emit_pipeline_sync,
diff --git a/drivers/gpu/drm/amd/amdgpu/navi10_sdma_pkt_open.h b/drivers/gpu/drm/amd/amdgpu/navi10_sdma_pkt_open.h
index 074a9a09c0a7..a5b60c9a2418 100644
--- a/drivers/gpu/drm/amd/amdgpu/navi10_sdma_pkt_open.h
+++ b/drivers/gpu/drm/amd/amdgpu/navi10_sdma_pkt_open.h
@@ -73,6 +73,22 @@
 #define SDMA_OP_AQL_COPY  0
 #define SDMA_OP_AQL_BARRIER_OR  0
 
+#define SDMA_GCR_RANGE_IS_PA		(1 << 18)
+#define SDMA_GCR_SEQ(x)			(((x) & 0x3) << 16)
+#define SDMA_GCR_GL2_WB			(1 << 15)
+#define SDMA_GCR_GL2_INV		(1 << 14)
+#define SDMA_GCR_GL2_DISCARD		(1 << 13)
+#define SDMA_GCR_GL2_RANGE(x)		(((x) & 0x3) << 11)
+#define SDMA_GCR_GL2_US			(1 << 10)
+#define SDMA_GCR_GL1_INV		(1 << 9)
+#define SDMA_GCR_GLV_INV		(1 << 8)
+#define SDMA_GCR_GLK_INV		(1 << 7)
+#define SDMA_GCR_GLK_WB			(1 << 6)
+#define SDMA_GCR_GLM_INV		(1 << 5)
+#define SDMA_GCR_GLM_WB			(1 << 4)
+#define SDMA_GCR_GL1_RANGE(x)		(((x) & 0x3) << 2)
+#define SDMA_GCR_GLI_INV(x)		(((x) & 0x3) << 0)
+
 /*define for op field*/
 #define SDMA_PKT_HEADER_op_offset 0
 #define SDMA_PKT_HEADER_op_mask   0x000000FF
* Unmerged path drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
