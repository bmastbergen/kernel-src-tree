ASoC: SOF: Intel: hda: Amend the DSP state transition diagram

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: Intel: hda: Amend the DSP state transition diagram (Jaroslav Kysela) [1797509]
Rebuild_FUZZ: 95.31%
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit 207bf12f642f39e749ca65d3efca9d48311e629f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/207bf12f.failed

Amend the DSP state transition diagram in preparation
for introducing the feature to support opportunistic
DSP D0I3 state when the system is in S0.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20200129220726.31792-8-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 207bf12f642f39e749ca65d3efca9d48311e629f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-dsp.c
diff --cc sound/soc/sof/intel/hda-dsp.c
index fddf2c48904f,7b8425330ae0..000000000000
--- a/sound/soc/sof/intel/hda-dsp.c
+++ b/sound/soc/sof/intel/hda-dsp.c
@@@ -381,6 -436,85 +381,88 @@@ int hda_dsp_set_power_state(struct snd_
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * All DSP power state transitions are initiated by the driver.
+  * If the requested state change fails, the error is simply returned.
+  * Further state transitions are attempted only when the set_power_save() op
+  * is called again either because of a new IPC sent to the DSP or
+  * during system suspend/resume.
+  */
+ int hda_dsp_set_power_state(struct snd_sof_dev *sdev,
+ 			    const struct sof_dsp_power_state *target_state)
+ {
+ 	int ret = 0;
+ 
+ 	/* Nothing to do if the DSP is already in the requested state */
+ 	if (target_state->state == sdev->dsp_power_state.state &&
+ 	    target_state->substate == sdev->dsp_power_state.substate)
+ 		return 0;
+ 
+ 	switch (target_state->state) {
+ 	case SOF_DSP_PM_D0:
+ 		ret = hda_dsp_set_D0_state(sdev, target_state);
+ 		break;
+ 	case SOF_DSP_PM_D3:
+ 		/* The only allowed transition is: D0I0 -> D3 */
+ 		if (sdev->dsp_power_state.state == SOF_DSP_PM_D0 &&
+ 		    sdev->dsp_power_state.substate == SOF_HDA_DSP_PM_D0I0)
+ 			break;
+ 
+ 		dev_err(sdev->dev,
+ 			"error: transition from %d to %d not allowed\n",
+ 			sdev->dsp_power_state.state, target_state->state);
+ 		return -EINVAL;
+ 	default:
+ 		dev_err(sdev->dev, "error: target state unsupported %d\n",
+ 			target_state->state);
+ 		return -EINVAL;
+ 	}
+ 	if (ret < 0) {
+ 		dev_err(sdev->dev,
+ 			"failed to set requested target DSP state %d substate %d\n",
+ 			target_state->state, target_state->substate);
+ 		return ret;
+ 	}
+ 
+ 	sdev->dsp_power_state = *target_state;
+ 	dev_dbg(sdev->dev, "New DSP state %d substate %d\n",
+ 		target_state->state, target_state->substate);
+ 	return ret;
+ }
+ 
+ /*
+  * Audio DSP states may transform as below:-
+  *
+  *                                         Opportunistic D0I3 in S0
+  *     Runtime    +---------------------+  Delayed D0i3 work timeout
+  *     suspend    |                     +--------------------+
+  *   +------------+       D0I0(active)  |                    |
+  *   |            |                     <---------------+    |
+  *   |   +-------->                     |    New IPC	|    |
+  *   |   |Runtime +--^--+---------^--+--+ (via mailbox)	|    |
+  *   |   |resume     |  |         |  |			|    |
+  *   |   |           |  |         |  |			|    |
+  *   |   |     System|  |         |  |			|    |
+  *   |   |     resume|  | S3/S0IX |  |                  |    |
+  *   |   |	     |  | suspend |  | S0IX             |    |
+  *   |   |           |  |         |  |suspend           |    |
+  *   |   |           |  |         |  |                  |    |
+  *   |   |           |  |         |  |                  |    |
+  * +-v---+-----------+--v-------+ |  |           +------+----v----+
+  * |                            | |  +----------->                |
+  * |       D3 (suspended)       | |              |      D0I3      |
+  * |                            | +--------------+                |
+  * |                            |  System resume |                |
+  * +----------------------------+		 +----------------+
+  *
+  * S0IX suspend: The DSP is in D0I3 if any D0I3-compatible streams
+  *		 ignored the suspend trigger. Otherwise the DSP
+  *		 is in D3.
+  */
+ 
++>>>>>>> 207bf12f642f (ASoC: SOF: Intel: hda: Amend the DSP state transition diagram)
  static int hda_suspend(struct snd_sof_dev *sdev, bool runtime_suspend)
  {
  	struct sof_intel_hda_dev *hda = sdev->pdata->hw_pdata;
* Unmerged path sound/soc/sof/intel/hda-dsp.c
