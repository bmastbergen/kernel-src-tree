perf trace: Make evlist__set_evsel_handler() affect just entries without a handler

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 206d635aa594a5246cd181b3be39d1e3b2126f68
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/206d635a.failed

Renaming it to evlist__set_default_evsel_handler(), to better reflect
what we want to do, which is to set a default handler for events we
still haven't set a custom handler, like the ones for "msr:write_msr",
etc that are coming soon.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-e1bit7upnpmtsayh8039kfuw@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 206d635aa594a5246cd181b3be39d1e3b2126f68)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-trace.c
diff --cc tools/perf/builtin-trace.c
index 7d4226fa0dcb,ee330f50b450..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -3848,17 -3858,19 +3848,23 @@@ static int parse_pagefaults(const struc
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void evlist__set_evsel_handler(struct perf_evlist *evlist, void *handler)
++=======
+ static void evlist__set_default_evsel_handler(struct evlist *evlist, void *handler)
++>>>>>>> 206d635aa594 (perf trace: Make evlist__set_evsel_handler() affect just entries without a handler)
  {
 -	struct evsel *evsel;
 +	struct perf_evsel *evsel;
  
- 	evlist__for_each_entry(evlist, evsel)
- 		evsel->handler = handler;
+ 	evlist__for_each_entry(evlist, evsel) {
+ 		if (evsel->handler == NULL)
+ 			evsel->handler = handler;
+ 	}
  }
  
 -static int evlist__set_syscall_tp_fields(struct evlist *evlist)
 +static int evlist__set_syscall_tp_fields(struct perf_evlist *evlist)
  {
 -	struct evsel *evsel;
 +	struct perf_evsel *evsel;
  
  	evlist__for_each_entry(evlist, evsel) {
  		if (evsel->priv || !evsel->tp_format)
@@@ -4276,8 -4288,8 +4282,13 @@@ int cmd_trace(int argc, const char **ar
  		symbol_conf.use_callchain = true;
  	}
  
++<<<<<<< HEAD
 +	if (trace.evlist->nr_entries > 0) {
 +		evlist__set_evsel_handler(trace.evlist, trace__event_handler);
++=======
+ 	if (trace.evlist->core.nr_entries > 0) {
+ 		evlist__set_default_evsel_handler(trace.evlist, trace__event_handler);
++>>>>>>> 206d635aa594 (perf trace: Make evlist__set_evsel_handler() affect just entries without a handler)
  		if (evlist__set_syscall_tp_fields(trace.evlist)) {
  			perror("failed to set syscalls:* tracepoint fields");
  			goto out;
* Unmerged path tools/perf/builtin-trace.c
