iwlwifi: implement a new device configuration table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit 2a612a60ab440e6480c77b73403dfee061f74e4b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2a612a60.failed

Add a new device table that contains information that can be checked
at runtime in order to decide which configuration to use.  This allows
us to map the full cfg independently from the tran-specific
configuration.

This is the first step in creating the new table.  Subsequent patches
will add the possibility of checking different values at runtime in
order to make the decision.

	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit 2a612a60ab440e6480c77b73403dfee061f74e4b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 0fe5698f957c,c2cb6283bc5a..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -996,17 -1008,39 +1007,40 @@@ static int iwl_pci_probe(struct pci_de
  	struct iwl_trans *iwl_trans;
  	struct iwl_trans_pcie *trans_pcie;
  	unsigned long flags;
++<<<<<<< HEAD
 +	int ret;
++=======
+ 	int i, ret;
+ 	/*
+ 	 * This is needed for backwards compatibility with the old
+ 	 * tables, so we don't need to change all the config structs
+ 	 * at the same time.  The cfg is used to compare with the old
+ 	 * full cfg structs.
+ 	 */
+ 	const struct iwl_cfg *cfg = (struct iwl_cfg *)(ent->driver_data);
++>>>>>>> 2a612a60ab44 (iwlwifi: implement a new device configuration table)
  
 -	/* make sure trans is the first element in iwl_cfg */
 -	BUILD_BUG_ON(offsetof(struct iwl_cfg, trans));
 -
 -	iwl_trans = iwl_trans_pcie_alloc(pdev, ent, trans);
 +	iwl_trans = iwl_trans_pcie_alloc(pdev, ent, &cfg->trans);
  	if (IS_ERR(iwl_trans))
  		return PTR_ERR(iwl_trans);
  
  	trans_pcie = IWL_TRANS_GET_PCIE_TRANS(iwl_trans);
  
  	/* the trans_cfg should never change, so set it now */
 -	iwl_trans->trans_cfg = trans;
 +	iwl_trans->trans_cfg = &cfg->trans;
  
+ 	for (i = 0; i < ARRAY_SIZE(iwl_dev_info_table); i++) {
+ 		const struct iwl_dev_info *dev_info = &iwl_dev_info_table[i];
+ 
+ 		if ((dev_info->device == IWL_CFG_ANY ||
+ 		     dev_info->device == pdev->device) &&
+ 		    (dev_info->subdevice == IWL_CFG_ANY ||
+ 		     dev_info->subdevice == pdev->subsystem_device)) {
+ 			iwl_trans->cfg = dev_info->cfg;
+ 			goto found;
+ 		}
+ 	}
+ 
  #if IS_ENABLED(CONFIG_IWLMVM)
  	/*
  	 * special-case 7265D, it has the same PCI IDs.
@@@ -1117,11 -1156,16 +1151,17 @@@
  	}
  
  #endif
 -	/*
 -	 * If we didn't set the cfg yet, assume the trans is actually
 -	 * a full cfg from the old tables.
 -	 */
 -	if (!iwl_trans->cfg)
 -		iwl_trans->cfg = cfg;
 +	/* now set the real cfg we decided to use */
 +	iwl_trans->cfg = cfg;
  
++<<<<<<< HEAD
 +	if (cfg->trans.mq_rx_supported) {
 +		if (WARN_ON(!cfg->num_rbds)) {
++=======
+ found:
+ 	if (iwl_trans->trans_cfg->mq_rx_supported) {
+ 		if (WARN_ON(!iwl_trans->cfg->num_rbds)) {
++>>>>>>> 2a612a60ab44 (iwlwifi: implement a new device configuration table)
  			ret = -EINVAL;
  			goto out_free_trans;
  		}
diff --git a/drivers/net/wireless/intel/iwlwifi/cfg/9000.c b/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
index 79390f880efb..e7b95842bb60 100644
--- a/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
@@ -171,6 +171,12 @@ static const struct iwl_tt_params iwl9000_tt_params = {
 		},							\
 	}
 
+const struct iwl_cfg_trans_params iwl9000_trans_cfg = {
+	.device_family = IWL_DEVICE_FAMILY_9000,
+	.base_params = &iwl9000_base_params,
+	.mq_rx_supported = true,
+	.rf_id = true,
+};
 
 const struct iwl_cfg iwl9160_2ac_cfg = {
 	.name = "Intel(R) Dual Band Wireless AC 9160",
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-config.h b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
index bbeb5fc3caad..0af1a5184d82 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@ -452,9 +452,19 @@ struct iwl_cfg {
 	const struct iwl_fw_mon_regs mon_smem_regs;
 };
 
+#define IWL_CFG_ANY (~0)
+
+struct iwl_dev_info {
+	u16 device;
+	u16 subdevice;
+	const struct iwl_cfg *cfg;
+};
+
 /*
  * This list declares the config structures for all devices.
  */
+extern const struct iwl_cfg_trans_params iwl9000_trans_cfg;
+
 #if IS_ENABLED(CONFIG_IWLDVM)
 extern const struct iwl_cfg iwl5300_agn_cfg;
 extern const struct iwl_cfg iwl5100_agn_cfg;
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
