scsi: core: avoid repetitive logging of device offline messages

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ewan D. Milne <emilne@redhat.com>
commit b0962c53bde9a485c8ebc401fa1dbe821a76bc3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b0962c53.failed

Large queues of I/O to offline devices that are eventually submitted when
devices are unblocked result in a many repeated "rejecting I/O to offline
device" messages.  These messages can fill up the dmesg buffer in crash
dumps so no useful prior messages remain.  In addition, if a serial console
is used, the flood of messages can cause a hard lockup in the console code.

Introduce a flag indicating the message has already been logged for the
device, and reset the flag when scsi_device_set_state() changes the device
state.

Link: https://lore.kernel.org/r/20200311143930.20674-1-emilne@redhat.com
	Reviewed-by: Bart van Assche <bvanassche@acm.org>
	Signed-off-by: Ewan D. Milne <emilne@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b0962c53bde9a485c8ebc401fa1dbe821a76bc3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/scsi/scsi_device.h
diff --cc include/scsi/scsi_device.h
index fc2e8df75bd3,c3cba2aaf934..000000000000
--- a/include/scsi/scsi_device.h
+++ b/include/scsi/scsi_device.h
@@@ -202,6 -201,10 +202,13 @@@ struct scsi_device 
  	unsigned broken_fua:1;		/* Don't set FUA bit */
  	unsigned lun_in_cdb:1;		/* Store LUN bits in CDB[1] */
  	unsigned unmap_limit_for_ws:1;	/* Use the UNMAP limit for WRITE SAME */
++<<<<<<< HEAD
++=======
+ 	unsigned rpm_autosuspend:1;	/* Enable runtime autosuspend at device
+ 					 * creation time */
+ 
+ 	bool offline_already;		/* Device offline message logged */
++>>>>>>> b0962c53bde9 (scsi: core: avoid repetitive logging of device offline messages)
  
  	atomic_t disk_events_disable_depth; /* disable depth for disk events */
  
diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index cc813d1a763b..82a48e248df5 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -1283,8 +1283,11 @@ scsi_prep_state_check(struct scsi_device *sdev, struct request *req)
 		 * commands.  The device must be brought online
 		 * before trying any recovery commands.
 		 */
-		sdev_printk(KERN_ERR, sdev,
-			    "rejecting I/O to offline device\n");
+		if (!sdev->offline_already) {
+			sdev->offline_already = true;
+			sdev_printk(KERN_ERR, sdev,
+				    "rejecting I/O to offline device\n");
+		}
 		return BLK_STS_IOERR;
 	case SDEV_DEL:
 		/*
@@ -2396,6 +2399,7 @@ scsi_device_set_state(struct scsi_device *sdev, enum scsi_device_state state)
 		break;
 
 	}
+	sdev->offline_already = false;
 	sdev->sdev_state = state;
 	return 0;
 
* Unmerged path include/scsi/scsi_device.h
