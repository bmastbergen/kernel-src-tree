samples/bpf: Add missing -lz to TPROGS_LDLIBS

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Toke Høiland-Jørgensen <toke@redhat.com>
commit 5615ed472dc04e38a1affca69059f17c1178f770
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5615ed47.failed

Since libbpf now links against zlib, this needs to be included in the
linker invocation for the userspace programs in samples/bpf that link
statically against libbpf.

Fixes: 166750bc1dd2 ("libbpf: Support libbpf-provided extern variables")
	Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Tested-by: Björn Töpel <bjorn.topel@intel.com>
Link: https://lore.kernel.org/bpf/20191216102405.353834-1-toke@redhat.com
(cherry picked from commit 5615ed472dc04e38a1affca69059f17c1178f770)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	samples/bpf/Makefile
diff --cc samples/bpf/Makefile
index 6878112928ab,227077ae66ed..000000000000
--- a/samples/bpf/Makefile
+++ b/samples/bpf/Makefile
@@@ -189,9 -176,35 +189,38 @@@ ifeq ($(ARCH), arm
  # headers when arm instruction set identification is requested.
  ARM_ARCH_SELECTOR := $(filter -D__LINUX_ARM_ARCH__%, $(KBUILD_CFLAGS))
  BPF_EXTRA_CFLAGS := $(ARM_ARCH_SELECTOR)
 -TPROGS_CFLAGS += $(ARM_ARCH_SELECTOR)
 +KBUILD_HOSTCFLAGS += $(ARM_ARCH_SELECTOR)
  endif
  
++<<<<<<< HEAD
++=======
+ TPROGS_CFLAGS += -Wall -O2
+ TPROGS_CFLAGS += -Wmissing-prototypes
+ TPROGS_CFLAGS += -Wstrict-prototypes
+ 
+ TPROGS_CFLAGS += -I$(objtree)/usr/include
+ TPROGS_CFLAGS += -I$(srctree)/tools/lib/bpf/
+ TPROGS_CFLAGS += -I$(srctree)/tools/testing/selftests/bpf/
+ TPROGS_CFLAGS += -I$(srctree)/tools/lib/
+ TPROGS_CFLAGS += -I$(srctree)/tools/include
+ TPROGS_CFLAGS += -I$(srctree)/tools/perf
+ TPROGS_CFLAGS += -DHAVE_ATTR_TEST=0
+ 
+ ifdef SYSROOT
+ TPROGS_CFLAGS += --sysroot=$(SYSROOT)
+ TPROGS_LDFLAGS := -L$(SYSROOT)/usr/lib
+ endif
+ 
+ TPROGCFLAGS_bpf_load.o += -Wno-unused-variable
+ 
+ TPROGS_LDLIBS			+= $(LIBBPF) -lelf -lz
+ TPROGLDLIBS_tracex4		+= -lrt
+ TPROGLDLIBS_trace_output	+= -lrt
+ TPROGLDLIBS_map_perf_test	+= -lrt
+ TPROGLDLIBS_test_overhead	+= -lrt
+ TPROGLDLIBS_xdpsock		+= -pthread
+ 
++>>>>>>> 5615ed472dc0 (samples/bpf: Add missing -lz to TPROGS_LDLIBS)
  # Allows pointing LLC/CLANG to a LLVM backend with bpf support, redefine on cmdline:
  #  make M=samples/bpf/ LLC=~/git/llvm/build/bin/llc CLANG=~/git/llvm/build/bin/clang
  LLC ?= llc
* Unmerged path samples/bpf/Makefile
