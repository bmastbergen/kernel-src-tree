net/tls: add TlsDecryptError stat

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] tls: add TlsDecryptError stat (Sabrina Dubroca) [1819627]
Rebuild_FUZZ: 93.55%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 5c5ec66858062a857cf51f57cbe52b36330f7ae6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5c5ec668.failed

Add a statistic for TLS record decryption errors.

Since devices are supposed to pass records as-is when they
encounter errors this statistic will count bad records in
both pure software and inline crypto configurations.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5c5ec66858062a857cf51f57cbe52b36330f7ae6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/tls.rst
#	include/uapi/linux/snmp.h
#	net/tls/tls_proc.c
diff --cc Documentation/networking/tls.rst
index 5bcbf75e2025,ab82362dd819..000000000000
--- a/Documentation/networking/tls.rst
+++ b/Documentation/networking/tls.rst
@@@ -213,3 -213,26 +213,29 @@@ A patchset to OpenSSL to use ktls as th
  of calling send directly after a handshake using gnutls.
  Since it doesn't implement a full record layer, control
  messages are not supported.
++<<<<<<< HEAD
++=======
+ 
+ Statistics
+ ==========
+ 
+ TLS implementation exposes the following per-namespace statistics
+ (``/proc/net/tls_stat``):
+ 
+ - ``TlsCurrTxSw``, ``TlsCurrRxSw`` -
+   number of TX and RX sessions currently installed where host handles
+   cryptography
+ 
+ - ``TlsCurrTxDevice``, ``TlsCurrRxDevice`` -
+   number of TX and RX sessions currently installed where NIC handles
+   cryptography
+ 
+ - ``TlsTxSw``, ``TlsRxSw`` -
+   number of TX and RX sessions opened with host cryptography
+ 
+ - ``TlsTxDevice``, ``TlsRxDevice`` -
+   number of TX and RX sessions opened with NIC cryptography
+ 
+ - ``TlsDecryptError`` -
+   record decryption failed (e.g. due to incorrect authentication tag)
++>>>>>>> 5c5ec6685806 (net/tls: add TlsDecryptError stat)
diff --cc include/uapi/linux/snmp.h
index 0b7605eafbdb,c9e4963e26f0..000000000000
--- a/include/uapi/linux/snmp.h
+++ b/include/uapi/linux/snmp.h
@@@ -322,4 -323,20 +322,23 @@@ enu
  	__LINUX_MIB_XFRMMAX
  };
  
++<<<<<<< HEAD
++=======
+ /* linux TLS mib definitions */
+ enum
+ {
+ 	LINUX_MIB_TLSNUM = 0,
+ 	LINUX_MIB_TLSCURRTXSW,			/* TlsCurrTxSw */
+ 	LINUX_MIB_TLSCURRRXSW,			/* TlsCurrRxSw */
+ 	LINUX_MIB_TLSCURRTXDEVICE,		/* TlsCurrTxDevice */
+ 	LINUX_MIB_TLSCURRRXDEVICE,		/* TlsCurrRxDevice */
+ 	LINUX_MIB_TLSTXSW,			/* TlsTxSw */
+ 	LINUX_MIB_TLSRXSW,			/* TlsRxSw */
+ 	LINUX_MIB_TLSTXDEVICE,			/* TlsTxDevice */
+ 	LINUX_MIB_TLSRXDEVICE,			/* TlsRxDevice */
+ 	LINUX_MIB_TLSDECRYPTERROR,		/* TlsDecryptError */
+ 	__LINUX_MIB_TLSMAX
+ };
+ 
++>>>>>>> 5c5ec6685806 (net/tls: add TlsDecryptError stat)
  #endif	/* _LINUX_SNMP_H */
* Unmerged path net/tls/tls_proc.c
* Unmerged path Documentation/networking/tls.rst
* Unmerged path include/uapi/linux/snmp.h
* Unmerged path net/tls/tls_proc.c
diff --git a/net/tls/tls_sw.c b/net/tls/tls_sw.c
index d77021334239..0522ea39ab0c 100644
--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@ -168,6 +168,9 @@ static void tls_decrypt_done(struct crypto_async_request *req, int err)
 
 	/* Propagate if there was an err */
 	if (err) {
+		if (err == -EBADMSG)
+			TLS_INC_STATS(sock_net(skb->sk),
+				      LINUX_MIB_TLSDECRYPTERROR);
 		ctx->async_wait.err = err;
 		tls_err_abort(skb->sk, err);
 	} else {
@@ -253,6 +256,8 @@ static int tls_do_decryption(struct sock *sk,
 			return ret;
 
 		ret = crypto_wait_req(ret, &ctx->async_wait);
+	} else if (ret == -EBADMSG) {
+		TLS_INC_STATS(sock_net(sk), LINUX_MIB_TLSDECRYPTERROR);
 	}
 
 	if (async)
