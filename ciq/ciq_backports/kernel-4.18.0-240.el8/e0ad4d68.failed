perf annotate: Remove privsize from symbol__annotate() args

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ravi Bangoria <ravi.bangoria@linux.ibm.com>
commit e0ad4d68548005adb54cc7c35fd9abf760a2a050
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/e0ad4d68.failed

privsize is passed as 0 from all the symbol__annotate() callers.
Remove it from argument list.

	Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
	Acked-by: Jiri Olsa <jolsa@redhat.com>
	Cc: Ian Rogers <irogers@google.com>
	Cc: Jin Yao <yao.jin@linux.intel.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Song Liu <songliubraving@fb.com>
Link: http://lore.kernel.org/lkml/20200204045233.474937-2-ravi.bangoria@linux.ibm.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit e0ad4d68548005adb54cc7c35fd9abf760a2a050)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-top.c
#	tools/perf/ui/gtk/annotate.c
#	tools/perf/util/annotate.c
#	tools/perf/util/annotate.h
diff --cc tools/perf/builtin-top.c
index edbe6e6bc801,f6dd1a63f159..000000000000
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@@ -139,7 -143,7 +139,11 @@@ static int perf_top__parse_source(struc
  		return err;
  	}
  
++<<<<<<< HEAD
 +	err = symbol__annotate(sym, map, evsel, 0, &top->annotation_opts, NULL);
++=======
+ 	err = symbol__annotate(&he->ms, evsel, &top->annotation_opts, NULL);
++>>>>>>> e0ad4d685480 (perf annotate: Remove privsize from symbol__annotate() args)
  	if (err == 0) {
  		top->sym_filter_entry = he;
  	} else {
diff --cc tools/perf/ui/gtk/annotate.c
index 4177df198d2e,35f9641bf670..000000000000
--- a/tools/perf/ui/gtk/annotate.c
+++ b/tools/perf/ui/gtk/annotate.c
@@@ -170,13 -171,13 +170,17 @@@ static int symbol__gtk_annotate(struct 
  	GtkWidget *tab_label;
  	int err;
  
 -	if (ms->map->dso->annotate_warned)
 +	if (map->dso->annotate_warned)
  		return -1;
  
++<<<<<<< HEAD
 +	err = symbol__annotate(sym, map, evsel, 0, &annotation__default_options, NULL);
++=======
+ 	err = symbol__annotate(ms, evsel, &annotation__default_options, NULL);
++>>>>>>> e0ad4d685480 (perf annotate: Remove privsize from symbol__annotate() args)
  	if (err) {
  		char msg[BUFSIZ];
 -		symbol__strerror_disassemble(ms, err, msg, sizeof(msg));
 +		symbol__strerror_disassemble(sym, map, err, msg, sizeof(msg));
  		ui__error("Couldn't annotate %s: %s\n", sym->name, msg);
  		return -1;
  	}
diff --cc tools/perf/util/annotate.c
index b06815227267,a76309fcf381..000000000000
--- a/tools/perf/util/annotate.c
+++ b/tools/perf/util/annotate.c
@@@ -2141,11 -2149,11 +2141,19 @@@ void symbol__calc_percent(struct symbo
  	annotation__calc_percent(notes, evsel, symbol__size(sym));
  }
  
++<<<<<<< HEAD
 +int symbol__annotate(struct symbol *sym, struct map *map,
 +		     struct perf_evsel *evsel, size_t privsize,
 +		     struct annotation_options *options,
 +		     struct arch **parch)
 +{
++=======
+ int symbol__annotate(struct map_symbol *ms, struct evsel *evsel,
+ 		     struct annotation_options *options, struct arch **parch)
+ {
+ 	size_t privsize = 0;
+ 	struct symbol *sym = ms->sym;
++>>>>>>> e0ad4d685480 (perf annotate: Remove privsize from symbol__annotate() args)
  	struct annotation *notes = symbol__annotation(sym);
  	struct annotate_args args = {
  		.privsize	= privsize,
@@@ -2777,14 -2784,14 +2785,18 @@@ int symbol__tty_annotate2(struct symbo
  	return 0;
  }
  
 -int symbol__tty_annotate(struct map_symbol *ms, struct evsel *evsel,
 +int symbol__tty_annotate(struct symbol *sym, struct map *map,
 +			 struct perf_evsel *evsel,
  			 struct annotation_options *opts)
  {
 -	struct dso *dso = ms->map->dso;
 -	struct symbol *sym = ms->sym;
 +	struct dso *dso = map->dso;
  	struct rb_root source_line = RB_ROOT;
  
++<<<<<<< HEAD
 +	if (symbol__annotate(sym, map, evsel, 0, opts, NULL) < 0)
++=======
+ 	if (symbol__annotate(ms, evsel, opts, NULL) < 0)
++>>>>>>> e0ad4d685480 (perf annotate: Remove privsize from symbol__annotate() args)
  		return -1;
  
  	symbol__calc_percent(sym, evsel);
@@@ -3061,9 -3069,9 +3073,13 @@@ int symbol__annotate2(struct symbol *sy
  		return ENOMEM;
  
  	if (perf_evsel__is_group_event(evsel))
 -		nr_pcnt = evsel->core.nr_members;
 +		nr_pcnt = evsel->nr_members;
  
++<<<<<<< HEAD
 +	err = symbol__annotate(sym, map, evsel, 0, options, parch);
++=======
+ 	err = symbol__annotate(ms, evsel, options, parch);
++>>>>>>> e0ad4d685480 (perf annotate: Remove privsize from symbol__annotate() args)
  	if (err)
  		goto out_free_offsets;
  
diff --cc tools/perf/util/annotate.h
index db50eb66a9f3,7bc60988e478..000000000000
--- a/tools/perf/util/annotate.h
+++ b/tools/perf/util/annotate.h
@@@ -347,12 -349,12 +347,17 @@@ int hist_entry__inc_addr_samples(struc
  struct annotated_source *symbol__hists(struct symbol *sym, int nr_hists);
  void symbol__annotate_zero_histograms(struct symbol *sym);
  
++<<<<<<< HEAD
 +int symbol__annotate(struct symbol *sym, struct map *map,
 +		     struct perf_evsel *evsel, size_t privsize,
++=======
+ int symbol__annotate(struct map_symbol *ms,
+ 		     struct evsel *evsel,
++>>>>>>> e0ad4d685480 (perf annotate: Remove privsize from symbol__annotate() args)
  		     struct annotation_options *options,
  		     struct arch **parch);
 -int symbol__annotate2(struct map_symbol *ms,
 -		      struct evsel *evsel,
 +int symbol__annotate2(struct symbol *sym, struct map *map,
 +		      struct perf_evsel *evsel,
  		      struct annotation_options *options,
  		      struct arch **parch);
  
* Unmerged path tools/perf/builtin-top.c
* Unmerged path tools/perf/ui/gtk/annotate.c
* Unmerged path tools/perf/util/annotate.c
* Unmerged path tools/perf/util/annotate.h
