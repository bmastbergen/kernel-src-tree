Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 16962
Number of commits matched with upstream: 16844 (99.30%)
Number of commits in upstream but not in rpm: 471386
Number of commits NOT found in upstream: 118 (0.70%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-240.el8 for kernel-4.18.0-240.el8
Clean Cherry Picks: 12610 (74.86%)
Empty Cherry Picks: 4049 (24.04%)
_______________________________

__EMPTY COMMITS__________________________
bba340c79bfe3644829db5c852fdfa9e33837d6d scsi: iscsi: Avoid potential deadlock in iscsi_if_rx func
79e29cb8fbc5c568358989327a164257b05cc608 platform/mellanox: Add bootctl driver for Mellanox BlueField Soc
77dcc95e2048765b616b5308863ab1d4d5a8f720 platform/mellanox: fix the mlx-bootctl sysfs
518a2f1925c3165befbf06b75e07636549d92c1c dma-mapping: zero memory returned from dma_alloc_*
f7728002c1c7bfa787b276a31c3ef458739b8e7c virtio_ring: fix return code on DMA mapping fails
cf8f1696709ad5bb3138ed8c771c2eb98950cd8a virtio_ring: fix unmap of indirect descriptors
05668e1d74b84c53fbe0f28565e4c9502a6b8a67 s390/cio: fix virtio-ccw DMA without PV
1bd231538c21d1cd691e71cbeeb4100fabc58068 pinctrl: intel: Allow to request locked pads
59bb47985c1db229ccff8c5deebecd54fc77d2a9 mm, sl[aou]b: guarantee natural alignment for kmalloc(power-of-two)
43cf75d96409a20ef06b756877a2e72b10a026fc exit: panic before exit_mm() on global init exit
aaa52e340073b7f4593b3c4ddafcafa70cf838b5 mm/khugepaged: fix crashes due to misaccounted holes
7b358c6f12dc82364f6d317f8c8f1d794adbc3f5 mm/migrate.c: initialize pud_entry in migrate_vma()
a94b525241c0fff3598809131d7cfcfe1d572d8c mm/compaction.c: clear total_{migrate,free}_scanned before scanning a new zone
169226f7e0d275c1879551f37484ef6683579a5c mm: thp: handle page cache THP correctly in PageTransCompoundMap
bf1a12a8095615c9486f5463ca473d2d69ff6952 mm: move the backup x_devmap() functions to asm-generic/pgtable.h
625110b5e9dae9074d8a7e67dd07f821a053eed7 mm/memory.c: fix a huge pud insertion race during faulting
c7a91bc7c2e17e0a9c8b9745a2cb118891218fd1 mm/mempolicy.c: fix out of bounds write in mpol_parse_str()
87a4c375995ed8eaa721b08825cf73d0b02b3145 kconfig: include kernel/Kconfig.preempt from init/Kconfig
a50a3f4b6a313dc76912bd4ad3b8b4f4b479c801 sched/rt, Kconfig: Introduce CONFIG_PREEMPT_RT
b8d3349803ba34afda429e87a837fd95a99b2349 sched/rt, Kconfig: Unbreak def/oldconfig with CONFIG_PREEMPT=y
d35927a144641700c8328d707d1c89d305b4ecb8 sched/fair: Move init_numa_balancing() below task_numa_work()
b34920d4ce6e6fc9424c20a4be98676eb543122f sched/fair: Move task_numa_work() init to init_numa_balancing()
f9a25f776d780bfa3279f0b6e5f5cf3224997976 cpusets: Rebuild root domain deadline accounting information
1243dc518c9da467da6635313a2dbb41b8ffc275 cgroup/cpuset: Convert cpuset_mutex to percpu_rwsem
d74b27d63a8bebe2fe634944e4ebdc7b10db7a39 cgroup/cpuset: Change cpuset_rwsem and hotplug lock order
710da3c8ea7dfbd327920afd3831d8c82c42789d sched/core: Prevent race condition between cpuset and __sched_setscheduler()
c1a280b68d4e6b6db4a65aa7865c22d8789ddf09 sched/preempt: Use CONFIG_PREEMPTION where appropriate
01b1d88b09824bea1a75b0bac04dcf50d9893875 rcu: Use CONFIG_PREEMPTION
30c937043b2db09ae3408f5534824f9ececdb581 tracing: Use CONFIG_PREEMPTION
48593975aeee548f25e256c515fd1d1e3fb2cc20 x86: Use CONFIG_PREEMPTION
67692435c411e5c53a1c588ecca2037aebd81f2e sched: Rework pick_next_task() slow-path
227a4aadc75ba22fcb6c4e1c078817b8cbaae4ce sched/membarrier: Fix p->mm->membarrier_state racy load
c172e0a3e8e65a4c6fffec5bc4d6de08d6f894f7 sched/membarrier: Return -ENOMEM to userspace on memory allocation failure
6e2df0581f569038719cf2bc2b3baa3fcc83cab4 sched: Fix pick_next_task() vs 'change' pattern race
f488e1057bb97b881ed317557dc5e62ff8747393 sched/core: Make pick_next_task_idle() more consistent
5d7d605642b28a5911198a405a6072f091bfbee6 sched/core: Optimize pick_next_task()
98c2f700edb413e4baa4a0368c5861d96211a775 sched/core: Simplify sched_class::pick_next_task()
a0e813f26ebcb25c0b5e504498fbd796cca1a4ba sched/core: Further clarify sched_class::set_next_task()
a509a7cd79747074a2c018a45bbbc52d1f4aed44 sched/uclamp: Extend sched_setattr() to support utilization clamping
75b46c437f6b0f8e37032a407c7373f85f5c26a8 gfs2: Fix oversight in gfs2_ail1_flush
e71237d3ff1abf9f3388337cfebf53b96df2020d KVM: nVMX: Refactor IO bitmap checks into helper function
35a571346a94fb93b5b3b6a599675ef3384bc75c KVM: nVMX: Check IO instruction VM-exit conditions
86f7e90ce840aa1db407d3ea6e9b3a52b2ce923c KVM: VMX: check descriptor table exits on instruction emulation
cd734d54e67990eebfc3106dc39047c1141d4197 ptp: Validate requests to enable time stamping of external signals.
7f9048f1df6f0c1c7a74a15c8b4ce033a753f274 net: reject PTP periodic output requests with unsupported flags
6138e687c7b679da08c0feb55a88f448f7890c07 ptp: Introduce strict checking of external time stamp options.
ca12cf5ac9c8fcbf64bc18e0dc2974dc3217f97d mlx5: Reject requests to enable time stamping on both edges.
9c03b282badb7600058321c80e367f93b4013bd0 trace: events: add a few neigh tracepoints
a75d1d01477d5235aac613c167b0653441281ad7 trace: events: neigh_update: print new state in string format
14c03ac4c100e4b81ec4747f5ec861701ff52de2 net: devlink: remove unused devlink_port_get_phys_port_name() function
98298e6ca6d5908f96e529e70a254a4d5bf754e7 flow_dissector: add meaningful comments
3b336d6f4ec690b0082bcffe55bac22f234a41ff flow_dissector: skip the ICMP dissector for non ICMP packets
5dec597e5cd0f4c3000d120508efa64157d5bd7a flow_dissector: extract more ICMP information
ab92d68fc22f9afab480153bd82a20f6e2533769 net: core: add generic lockdep keys
369f61bee0f584aee09f0736431eb9b330c98571 team: fix nested locking lockdep warning
0ce1822c2a08f6e05e22239bcb1778dcc916c7bc vxlan: add adjacent link to limit depth level
f3b0a18bb6cb07a9abb75e21b1f08eeaefa78e81 net: remove unnecessary variables and callback
1f26c0d3d24125992ab0026b0dab16c08df947c7 net: fix kernel-doc warning in <linux/netdevice.h>
53d374979ef147ab51f5d632dfe20b14aebeccd0 net: avoid updating qdisc_xmit_lock_key in netdev_update_lockdep_key()
ad9bd8daf2f9938572b0604e1280fefa8f338581 bonding: fix using uninitialized mode_lock
b3e80d44f5b1b470dd9e2dbc6816e63a5c519709 bonding: fix lockdep warning in bond_get_stats()
c6761cf521f9bffbdcbb619dba665ebf3bcefb1e vxlan: fix unexpected failure of vxlan_changelink()
6eeff06db999bf9b17aaa52fddda4fd449726a64 IB/iser: remove redundant macro definitions
30e0f6cf5acb39cd04316d1eecbf4c6087c7ee02 RDMA/iw_cxgb3: Remove the iw_cxgb3 module from kernel
45b268543a8d720e929c71dff7302eed5f7dfed4 RDMA/uapi: Fix and re-organize the usage of rdma_driver_id
eea63ca7ffa1f3a4a0b02b902ec51eab2d4e9df4 xprtrdma: Initialize rb_credits in one place
c3700780a096fc66467c81076ddf7f3f11d639b5 xprtrdma: Fix MR list handling
9d2da4ff00f37de17fc25c23e50463b58b9e8fec xprtrdma: Manage MRs in context of a single connection
15d9b015d3d1c997893472cb42d9f225a60a9219 xprtrdma: Ensure ri_id is stable during MR recycling
f995879ec4aa8b50c3924fda3014b0ab9acad7bd xprtrdma: Remove rpcrdma_sendctx::sc_xprt
b5cde6aa882dfb40a2b29c1c7371fdc3655c51ce xprtrdma: Remove rpcrdma_sendctx::sc_device
d6764bbd7763fa9d669bba7fc5a50a4bdd8f591b xprtrdma: Refactor rpcrdma_prepare_msg_sges()
614f3c96d7e5efd1c4dc699524857130a52c6a7f xprtrdma: Pull up sometimes
7b020f17bbd34c219419b634d9efb9e93a3af4c2 xprtrdma: Report the computed connect delay
f54c870d326aa02b73b68d2e0a503ec81dd3a4e4 xprtrdma: Replace dprintk() in rpcrdma_update_connect_private()
a52c23b8b207d676d6cdf531af482a79fa622b9d xprtrdma: Replace dprintk in xprt_rdma_set_port
79d81ef42c9a8feee2f1df5dffa6ac628b71141d RDMA/srpt: Fix TPG creation
46870b2391d5163e84180e051fdabadd502d8b44 RDMA/odp: Remove broken debugging call to invalidate_range
b86deba977a91aaa5a4b725d7b42970e6de28d2c RDMA/core: Move core content from ib_uverbs to ib_core
3411f9f01b76bd88aa6e0e013847ab6479cb4f24 RDMA/core: Create mmap database and cookie helper functions
c043ff2cfb7f6fdd9a1cb1a7ba3800f19b70bf65 RDMA: Connect between the mmap entry and the umap_priv structure
e84d3c184e7967559d511e4569c111a02d64031e RDMA/efa: Use the common mmap_xa helpers
72b894b09a96b741c92562709f6629310f2b34a1 IB/umem: remove the dmasync argument to ib_umem_get
bcf7cc534cd40f8098850274e8459fb0d088fcda RDMA/efa: Store network attributes in device attributes
666e8ff535d401eb286fa20446e55ae984d91049 RDMA/efa: Expose RDMA read related attributes
7a763d18ff2a75cfd1014800327f4120840bef09 IB/core: Introduce rdma_user_mmap_entry_insert_range() API
b32b9ed493f938e191f790a0991d20b18b38c35b xprtrdma: Fix create_qp crash on device unload
671c450b6fe0680ea1cb1cf1526d764fdd5a3d3f xprtrdma: Fix oops in Receive handler after device removal
969183bc68bc27d637d6d29e81d71cf854d0ca61 gfs2: Switch to list_{first,last}_entry
d580712a37272182cb63002878f3bb7bcebbb8bd gfs2: eliminate gfs2_rsqa_alloc in favor of gfs2_qa_alloc
2fba46a04c383f91e7fe837d43bf1ab33ce32b6a gfs2: Change inode qa_data to allow multiple users
1595548fe72ca834abe75fb3df47e300a087d563 gfs2: Split gfs2_rsqa_delete into gfs2_rs_delete and gfs2_qa_put
4bd684bc0143b46eea6dcf4dd3a73dfd6dc7247c gfs2: Remove unnecessary gfs2_qa_{get,put} pairs
b92b512a435da01b52de07e3dcc2f07a4ad404de PCI: Make pci_ats_init() private
ac6c26da29c12fa511c877c273ed5c939dc9e96c PCI: Make pci_enable_ptm() private
8bdfa145f58220796abddc93b5038efa6e7e90fc PCI: sysfs: Define device attributes with DEVICE_ATTR*()
4e2b79436e4f22b225ee445832705bb7c4675807 PCI: sysfs: Change DEVICE_ATTR() to DEVICE_ATTR_WO()
bd641fd8303a371e789e924291086268256766b0 PCI: sysfs: Revert "rescan" file renames
e2154044dd4168bc25c70170dfa6179b57f63914 PCI: sysfs: Change permissions from symbolic to octal
aaee0c1ffd6399d291b030b49d622b81dd5071c5 PCI/IOV: Move sysfs SR-IOV functions to iov.c
244c06c3b6d86513066426c9707ee460cd845349 PCI/IOV: Remove group write permission from sriov_numvfs, sriov_drivers_autoprobe
0d8006ddbe89cbaedef06a8789ddefa1164a3a77 PCI: Add pci_irq_vector() and other stubs when !CONFIG_PCI
b8074aa2460b535915e8f65bf83c4bcb4220f804 PCI: Convert pci_resource_to_user() to a weak function
54d50897d544c874562253e2a8f70dfcad22afe8 linux/kernel.h: split *_MAX and *_MIN macros into <linux/limits.h>
26ed19adbab16410460bd8b90ccc7430229a0b4a libfdt: reduce the number of headers included from libfdt_env.h
3751e728cef2908c15974a5ae44627fd41ef3362 arm64: kexec_file: add crash dump support
e950cca3f3c40902a052a78a36b3fac1f8a62d19 lib/smp_processor_id: Don't use cpumask_equal()
b4a991ec584b3ce333342c431c3cc4fef8a690d7 mm: remove CONFIG_NO_BOOTMEM
aca52c39838910605b1063a2243f553aa2a02d5c mm: remove CONFIG_HAVE_MEMBLOCK
355c45affca7114ab510e296a5b7012943aeea17 mm: remove bootmem allocator implementation.
b146ada221c178a384fee2a8e2e5b2e8a04476b1 mm: nobootmem: remove dead code
eb31d559f1e8390195372cd51cfb198da8bc84b9 memblock: remove _virt from APIs returning virtual address
3913c8f9f96bb75a062ad16ea10a1cdad48bb716 memblock: add align parameter to memblock_alloc_node()
4fc4a09e4cc1126c4e8a86c293425cffa2a2eb3c memblock: replace __alloc_bootmem with memblock_alloc_from
6c7835f8d0d1839ca93bd3cf6faa15706f03d604 mm: nobootmem: remove bootmem allocation APIs
2013288f723887837d2f1cebef5fcf663b2319de memblock: replace free_bootmem{_node} with memblock_free
53ab85ebfd27cdf16c8ddc72781c072a63bef3cb memblock: replace free_bootmem_late with memblock_free_late
c6ffc5ca8fb311a89cb6de5c31b6511308ddac8d memblock: rename free_all_bootmem to memblock_free_all
bda49a81164ab3e62f5348447345711586fd42e9 mm: remove nobootmem
97ad1087efffed26cb00e310a927f9603332dfcb memblock: replace BOOTMEM_ALLOC_* with MEMBLOCK variants
7e1c4e27928e5f87b9b1eaf06dc31773b2f1e7f1 memblock: stop using implicit alignment to SMP_CACHE_BYTES
2f770806fd2c3db9616965e57ba60d80f43c827d mm/memblock.c: warn if zero alignment was requested
52cff04a81e9571735976e4d70984e89a7ee3885 EDAC/mce_amd: Print !SMCA processor warning only once
051d769f0a36b4642897d909cef980f944ae20ab i2c: i801: Add support for Intel Tiger Lake
522e4ee6e5263ac324279b164762b0bccca3de87 Documentation/ABI: Correct mlxreg-io KernelVersion for 5.0
9f03161a1bd8cd9ccf11533e52326718c656036e platform_data/mlxreg: additions for Mellanox watchdog driver.
cc2a2d19f896d174cad16c2348100bec49c00958 docs: watchdog: convert docs to ReST and rename to *.rst
4056e79faa2dc8352634b594991b4b210d724e6f ABI: sysfs-driver-mlxreg-io: fix the what fields
e5caebdddc0572cd3aed9f859f4f7d1dcd808fbb platform/mellanox: Fix Kconfig indentation
eea97b258fca302f0d68c8313f4f63407be57179 Documentation/ABI: Fix documentation inconsistency for mlxreg-io sysfs interfaces
74e56f5fde62c637e484d45ac1835ddf476ccee1 Documentation/ABI: Add missed attribute for mlxreg-io sysfs interfaces
5358c1114d1d22777c72bdcceee204b586c6e8e1 Documentation/ABI: Style changes
3fd53533a8bcc5a7f1fa275e28dfb6b05f28a941 dm crypt: use crypt_integrity_aead() helper
93de44eb3fc8c3566f5315b0210630cc361526a7 dm writecache: implement the "cleaner" policy
3923d4854e189d84c6ec22e66d536d3498f2747c dm writecache: implement gradual cleanup
dc8a01ae1dbd7bac98368da4d8f81632512429f5 dm writecache: optimize superblock write
7649194a1636ab5876e7c18337d7ddd63e1d4376 dm integrity: remove sector type casts
1ac2c15a7bf859b92de269ba58597c94ce10811f dm integrity: allow resize of the integrity device
84597a44a9d86ac949900441cea7da0af0f2f473 dm integrity: add optional discard support
31843edab7cb3924006544b901c9cab33941b684 dm integrity: improve discard in journal mode
e7fc1e57d9abd008b020bb92f1750f8e6c68a956 dm integrity: fix ppc64le warning
8267d8fb4819afa76b2a54dca48efdda6f0b1910 dm integrity: fix logic bug in integrity tag testing
01d3aee86625bd798a5e69afb92517d5530c7ed1 crypto: sha256 - Make lib/crypto/sha256.c suitable for generic use
7d2f5b0c43e0bb346fbf78daefd68cd0bfc56ca3 crypto: sha256 - Add sha224 support to sha256 library code
34d6245fbc81e764806a65fceaeb3ab3274a1e63 crypto: sha256 - Merge crypto/sha256.h into crypto/sha.h
c75c66bbaa56f130e2be095402422e56f608aa62 crypto: sha256 - Remove sha256/224_init code duplication
5fbe5b5883f847363ff1b7280e8b1d2980526b8e gpio: Initialize the irqchip valid_mask with a callback
9411e3aaa6342eb730daa55cf3377463a37d2aa7 gpiolib: Initialize the hardware with a callback
b056ca1c2f01b2d261c2dd6d167c17ac27977034 gpiolib: Introduce ->add_pin_ranges() callback
ca8a958e2acb418846e6506f3ff2cdf161a3c806 pinctrl: baytrail: Pass irqchip when adding gpiochip
539d8bde72c22d760013bf81436d6bb94eb67aed pinctrl: baytrail: Allocate IRQ chip dynamic
ab68b220e81fd03383c0d9e1a87b51f9bbe4db77 pinctrl: baytrail: Group GPIO IRQ chip initialization
e70982b3abec4fb6e2ce9489f071080ca84e4bc7 pinctrl: baytrail: Move IRQ valid mask initialization to a dedicated callback
990ec243cb77c682e12bb84c98906880536132aa pinctrl: baytrail: Keep pointer to struct device instead of its container
2c02af709bff42e7a85e25c7ba8af7c55f034f27 pinctrl: baytrail: Use local variable to keep device pointer
5d33e0eb7ffa2a4f4c431af1deca49f433faba8a pinctrl: baytrail: Reuse struct intel_pinctrl in the driver
9ff1b6466a291a33389c4a9c7f3f9b64d62df40a IB/core: Fix ODP with IB_ACCESS_HUGETLB handling
3e5901cbfcc15da54f6ad148add754e7a2b2a558 RDMA/core: Trace points for diagnosing completion queue issues
622db5b6439ab4d28a44d2d49d58050e59cac781 RDMA/core: Add trace points to follow MR allocation
74f75cda754eb69a77f910ceb5bc85f8e9ba56a5 IB/core: Fix build failure without hugepages
3e032c0e92aa0c4c0b46c5e2d6d41706c8fce488 RDMA/core: Make ib_uverbs_async_event_file into a uobject
5c55cfd6a553d008fcd54e4a4e3fed1340ee5090 RDMA/core: Use READ_ONCE for ib_ufile.async_file
cb586decbb88fcd068116af2d4e1e3e2e86978d6 xprtrdma: Make sendctx queue lifetime the same as connection lifetime
7581d90109cad7d7322fd90cea023c706912f4bd xprtrdma: Refactor initialization of ep->rep_max_requests
18d065a5d4f16eeefb690c298671c3f9131121fe xprtrdma: Eliminate per-transport "max pages"
b78de1dca00376aaba7a58bb5fe21c1606524abe xprtrdma: Allocate and map transport header buffers at connect time
85810388a9ddcc8e82738a3df6d3d7b32a79e0ea xprtrdma: Destroy rpcrdma_rep when Receive is flushed
b7ff0185e92a68e77da7edff38e124dfb25b079c xprtrdma: Destroy reps from previous connection instance
e515dd9d76d22446b67f1568e3fc39ec84635360 xprtrdma: DMA map rr_rdma_buf as each rpcrdma_rep is created
f5f5ddbe73dc4d781d367bc5e2c8e79fc418d233 RDMA/efa: Remove {} brackets from single statement if
0428c6ef8a3c167b852804756357425902766120 RDMA/efa: Remove unused ucontext parameter from efa_qp_user_mmap_entries_remove
d680e88e2013186e696665cbf2056fb32b781e41 RDMA/core: Add UVERBS_METHOD_ASYNC_EVENT_ALLOC
86dd738cf20cee4ac316274743e5707c4ccb6039 RDMA/efa: Allow passing of optional access flags for MR registration
6b3712c0246ca7b2b8fa05eab2362cf267410f7e RDMA/core: Ensure that rdma_user_mmap_entry_remove() is a fence
ba19e16651a5c67fa8b53ce4fb5bfbab8d326b6c RDMA/efa: Mask access flags with the correct optional range
a70ed0f2e6262e723ae8d70accb984ba309eacc2 IB/hfi1: Acquire lock to release TID entries when user file is closed
ca1c671302825182629d3c1a60363cee6f5455bb xprtrdma: Fix DMA scatter-gather list mapping imbalance
6f7b0bad88397ad5d7901ce63696163ac8b481ce usb: simplify usbport trigger
91f7d2e89868fcac0e750a28230fdb1ad4512137 USB: leds: fix regression in usbport led trigger
cd238effefa28fac177e51dcf5e9d1a8b59c3c6b docs: kbuild: convert docs to ReST and rename to *.rst
a7e7a3156300a7e1982b03cc9cb8fb0c86434c49 leds: triggers: add device attribute support
b4dd4f6e3648dfd66576515f2222d885a9a765c0 x86/vmware: Add a header file for hypercall definitions
db633a4e0e6eda69b6065e3e106f9ea13a0676c3 x86/cpu/vmware: Use the full form of INL in VMWARE_HYPERCALL, for clang/llvm
6fee2a0be0ecae939d4b6cd8297d88b5cbb61654 x86/cpu/vmware: Fix platform detection VMWARE_PORT macro
dd735f4707e603ac5b541b5f30de87c3c7bd60dd x86/vmware: Remove vmware_sched_clock_setup()
ab02bb3f55f58e7608a88188000c3353398ebe3b x86/vmware: Add steal time clock support for VMware guests
e73a8f38f82dd1c41b70a06556bea7dc250cc384 x86/vmware: Enable steal time accounting
8fefe9dacdb0a1347d3dac871bb1bba3cbc32945 x86/vmware: Use bool type for vmw_sched_clock
34e51a5e1a6e939ed7d99c38173821ab86d577f4 blkcg, writeback: Rename wbc_account_io() to wbc_account_cgroup_owner()
653c45c6b90c9659facbef10546d1f3a8e37d0cf blkcg, writeback: Implement wbc_blkcg_css()
bd976e52725965ddcceb9abecbcc7ca46863665c block: Kill gfp_t argument of blkdev_report_zones()
b091ac616846a1da75b1f2566b41255ce7f0e0a6 sd_zbc: Fix report zones buffer allocation
26202928fafad8bda8b478edb7e62c885be623d7 block: Limit zone array allocation size
81ba6abd2bcd2812974bd3a4c43d1d032acfa751 block: loop: mark bvec as ITER_BVEC_FLAG_NO_REF
e84e8f0663956f45c747df5629046794cff93893 block: add req op to reset all zones and flag
6444f47eb8678a43d5260c67b89c18b1ea09e79e writeback, cgroup: inode_switch_wbs() shouldn't give up on wb_switch_rwsem trylock fail
fceb5d1b19cbe6263f09dbe8e8138edf02eb6e6b null_blk: create a helper for zoned devices
38b4e09fbccab6457536563823222921c49601bb null_blk: fix inline misuse
d3e65ffff61c329fb2d0bf15736c440c2d0cfc97 block/rq_qos: add rq_qos_merge()
9677a3e01f838622d2efc9a3ccb97090a2c3156a block/rq_qos: implement rq_qos_ops->queue_depth_changed()
6f816b4b746c2241540e537682d30d8e9997d674 blk-mq: add optional request->alloc_time_ns
68c43f133a754c7bf5cb1018bb16dc0821cc43a1 block: Introduce elevator features
cf1b2326b734896734c6e167e41766f9cee7686a nbd: verify socket is supported during setup
dff10bbea4be47bdb615b036c834a275b7c68133 nbd:fix memory leak in nbd_get_socket()
7a18312c739aeace7c8ea448d39a0313d5ad5d5d block: Document all members of blk_mq_tag_set and bkl_mq_queue_map
6c1b1da58f8c7a697a88ae35afeba196fc7b701e block: add zone open, close and finish operations
e876df1fe0ad1b191284ee6ed2db7960bd322d00 block: add zone open, close and finish ioctl support
dd85b4922de1b70f0729d2a7856db619e210a8ec null_blk: return fixed zoned reads > write pointer
da644b2cc1a4664ff7f75d3ae50e3fcf638580d9 null_blk: add zone open, close, and finish support
d9dd73087a8b6d78d3bf8411620306f2313cdbae block: Enhance blk_revalidate_disk_zones()
c98c3d09fca41323765af0dc7926b150cf29ebff block: cleanup the !zoned case in blk_revalidate_disk_zones
ceeb373aa6b9eb75ed3278d4b3ff2318c304e70c block: Simplify report zones execution
5eac3eb30c9ab9ee7fe2bd9aa9db6373cabb77f8 block: Remove partition support for zoned block devices
7fc8fb51a143a7efc9b199179e43a6d28f69b1f9 null_blk: clean up report zones
23a50861adda26a3f3b3ec5fbca0583133d89538 scsi: sd_zbc: Cleanup sd_zbc_alloc_report_buffer()
d41003513e61dd9d4974cb441d30b63650b85654 block: rework zone reporting
a468168130ec1a3245812f2c713be97081149ca2 scsi: sd_zbc: Remove set but not used variable 'buflen'
f902b02600028dfc0c9df811eb711ac7d7fca09f block: refactor rescan_partitions
6917d0689993f46d97d40dd66c601d0fd5b1dbdd block: merge invalidate_partitions into rescan_partitions
a1548b674403c0de70cc29a1575689917ba60157 block: move rescan_partitions to fs/block_dev.c
142fe8f4bb169e8632024d51c64653a8bf140561 block: fix bdev_disk_changed for non-partitioned devices
f0b870df80bc70dad432fd0c142bb709a49964f5 block: remove (__)blkdev_reread_part as an exported API
979c690d9a017db14b7759a099478e3faad991ac block: move clearing bd_invalidated into check_disk_size_change
490547ca2df66b8413bce97cb651630f2c531487 block: don't send uevent for empty disk when not invalidating
9b38bb4b1e6de47b379afaad2c707df639bb4dc7 block: simplify blkdev_nr_zones
f216fdd77b5654f8c4f6fac6020d6aabc58878ef block: replace seq_zones_bitmap with conv_zones_bitmap
e94f5819448c5b75829662eaa9c25c17868846cf block: allocate the zone bitmaps lazily
ae58954d8734c44298f55ed71e683ea944994fab block: don't handle bio based drivers in blk_revalidate_disk_zones
6c6b3549142255c3fe4bab5560efdf8391c8d858 block: set the zone size in blk_revalidate_disk_zones atomically
bca1c43cb2dbe4212aea0793bfd91aeb4c2d184d null_blk: remove unused variable warning on !CONFIG_BLK_DEV_ZONED
85a8ce62c2eabe28b9d76ca4eecf37922402df93 block: add bio_truncate to fix guard_bio_eod
c7d776f85dfe5159ebf621ee1e50e555237b1a25 null_blk: Fix REQ_OP_ZONE_CLOSE handling
83c9c547168e8b914ea6398430473a4de68c52cc fs: move guard_bio_eod() after bio_set_op_attrs
b72053072c0bbe9f1cdfe2ffa3c201c185da2201 block: allow partitions on host aware zone devices
51fdaa0490241e8cd41b40cbf43a336d1a014460 scsi: sd_sbc: Fix sd_zbc_report_zones()
1e0c08e3034de0659367393bfa825188462f22e6 cpu/cpuid-deps: Add a tab to cpuid dependent features
018ebca8bd704f18d56f8fff38e2c3d76d7d39fb x86/cpufeatures: Enable a new AVX512 CPU feature
3e8c4d31f8eddc957ee293b3556586ee698d9a21 drivers: thermal: Move various drivers for intel platforms into a subdir
188d20bcd1ebd8277d9b8a79525bd66b66d40a2a vfs: Add file timestamp range support
2976908e4198aa02fc3f76802358f69396267189 x86/mce: Do not log spurious corrected mce errors
60588bfa223ff675b95f866249f90616613fbe31 sched/fair: Optimize select_idle_cpu
17346452b25b98acfb395d2a82ec2e4ad0cb7a01 sched/fair: Make sched-idle CPU selection consistent throughout
289de35984815576793f579ec27248609e75976e sched/fair: Fix statistics for find_idlest_group()
4d86dfd38285c83a6df01093b8547f742e3b2470 mei: me: add comet point (lake) LP device ids
559e575a8946a6561dfe8880de341d4ef78d5994 mei: me: add comet point (lake) H device ids
0d6eeb1fd625272bd60d25f2d5e116cf582fc7dc nvme: change nvme_passthru_cmd64 to explicitly mark rsvd
151f4e2bdc7a04020ae5c533896fb91a16e1f501 docs: power: convert docs to ReST and rename to *.rst
5130802ddbb10a73cf17d1117e2044c8d5ba7d65 thermal: cpu_cooling: Switch to QoS requests for freq limits
341afbc9ea3983a2261c9e495e0b66b36b5dda20 ARM: dts: omap36xx: using OPP1G needs to control the abb_ldo
3000ce3c52f8b8db093e4dc649cd172390f71137 cpufreq: Use per-policy frequency QoS
ff44f672d74178b3be19d41a169b98b3e391d4ce thermal/drivers/cpufreq_cooling: Fix return of cpufreq_set_cur_state
a1bb46c36ce389d4a24a42e5b6047b0626caa3ea ACPI: processor: Add QoS requests for all CPUs
84e0dacd0c347e9ee2531052013babd84683245f context_tracking: Rename context_tracking_is_cpu_enabled() to context_tracking_enabled_this_cpu()
097f2541c6e51e0c1cdb1e6d46ef08a624336518 context_tracking: Introduce context_tracking_enabled_cpu()
e44fcb4b7a299602fb300b82a546c0b8a50d9d90 sched/vtime: Rename vtime_accounting_cpu_enabled() to vtime_accounting_enabled_this_cpu()
9adbb9dd4c4eb45e1129fc73d8de69ca72350f81 sched/vtime: Introduce vtime_accounting_enabled_cpu()
1992b66d2f55cf36a14072cfd977fdf4f0d2f2c2 PM: Wrap documentation to fit in 80 columns
74722bb223d0f236303b60c9509ff924a9713780 sched/vtime: Bring up complete kcpustat accessor
342035f66c866f4ad750477b21b210e98d1f6818 PM / QoS: Reorder pm_qos/freq_qos/dev_pm_qos structs
36a8015f89e40f7c9c91cc7e6d028fa288dad27b PM / QoS: Restore DEV_PM_QOS_MIN/MAX_FREQUENCY
1e4f63aecb53e48468661e922fc2fa3b83e55722 cpufreq: Avoid creating excessively large stack frames
02c92a378940ba1a46b6b7ad277f1b07f8093dbc PM: QoS: Redefine struct pm_qos_request and drop struct pm_qos_object
3a4a0042228a854d9b1073050620820b4a977e6e PM: QoS: Drop PM_QOS_CPU_DMA_LATENCY notifier chain
2552d3520132a22834e0be85c51168a7a798608c PM: QoS: Rename things related to the CPU latency QoS
333eed7d20069e2d80446f5fdf9ac3868b55e7b9 PM: QoS: Simplify definitions of CPU latency QoS trace events
e033b6c175a32870a2f7cd3741c0d48c858c2d04 PM: QoS: Adjust pm_qos_request() signature and reorder pm_qos.h
67b06ba01857ed077e1a66bfa139156e7c68bab2 PM: QoS: Drop PM_QOS_CPU_DMA_LATENCY and rename related functions
4d4dda487a364e601a926443adf731b6fe64ae21 drm: i915: Call cpu_latency_qos_*() instead of pm_qos_*()
7d423af9bfb172c3802cc1ca6591ac608c26a311 drm/i915: Implement a better i945gm vblank irq vs. C-states workaround
81e95ad74154232f0cda38e03e135cf1a0984888 drivers: net: Call cpu_latency_qos_*() instead of pm_qos_*()
7c51a06b2560b2ecd6cd01251dc478fce4bd6938 drivers: media: Call cpu_latency_qos_*() instead of pm_qos_*()
b8e6e27c626e60bb5708ce8c974b58c485c32ac7 Documentation: PM: QoS: Update to reflect previous code changes
814d51f8889bc4afa75f647eeffd5ff0a5620e8d PM: QoS: Make CPU latency QoS depend on CONFIG_CPU_IDLE
3c87402771f2bc38ee92eb506bb58e4fc4a5b8b9 Documentation: power: fix pm_qos_interface.rst format warning
f5739cb0b56590d68d8df8a44659893b6d0084c3 cpufreq: Fix policy initialization for internal governor drivers
f1dfdab694eb3838ac26f4b73695929c07d92a33 sched/vtime: Prevent unstable evaluation of WARN(vtime->state)
d5a2a6bb27f390f36c899907490d25ce1e83eec5 cpufreq: intel_pstate: Consolidate policy verification
46b2c32df7a462d0e64b68c513e5c4c1b2a399a7 PCI: Add ACS quirk for iProc PAXB
bbdb2f5ecdf1e66b2f09710134db3c2e5c43a958 PCI: Add #defines for Enter Compliance, Transmit Margin
c9c13ba428ef90a9b408a6cdf874e14ab5754516 PCI: Add PCI_STD_NUM_BARS for the number of standard BARs
b24d5c2098596a41cf187af41287777a2e0dd753 PCI/ATS: Consolidate ATS declarations in linux/pci-ats.h
c6e9aefbf9db818d60818aa5540d78c1da289aae PCI/ATS: Remove unused PRI and PASID stubs
fef2dd8b3966517172514ea5a89104ba7745678b PCI/ATS: Make pci_restore_pri_state(), pci_restore_pasid_state() private
35ff867b76576e32f34c698ccd11343f7d616204 PCI/IOV: Serialize sysfs sriov_numvfs reads vs writes
7cf2cba43f15c74bac46dc5f0326805d25ef514d PCI: Unify ACS quirk desired vs provided checking
5a4549fd790500d7db94b7d2af6d60cee42110c3 PCI/ATS: Add PASID stubs
9d8b738bb9f8008848b62f58671de3537a6d0734 PCI: Remove useless comments and tidy others
b90d2b22afdc7ce150a9ee7a8d82378bcfc395a5 arm64: cpufeature: Add cpufeature for IRQ priority masking
85738e05dc38a80921e1e1944e5b835f6668fc30 arm64: kvm: Unmask PMR before entering guest
bd82d4bd21880b7c4d5f5756be435095d6ae07b5 arm64: Fix incorrect irqflag restore for priority masking
bc3c03ccb4641fb940b27a0d369431876923a8fe arm64: Enable the support of pseudo-NMIs
48ce8f80f5901f1f031b00be66d659d39f33b0a1 arm64: irqflags: Introduce explicit debugging for IRQ priorities
e1d22385ea6686ff3dcd7092d84465c193849829 arm64: fix kernel stack overflow in kdump capture kernel
677379bc9139ac24b310a281fcb21a2f04288353 arm64: Lower priority mask for GIC_PRIO_IRQON
7f2481b39b4c776fb9c03081ffcfe81f4961601c irqchip/gic-v3: Add quirks for HIP06/07 invalid GICD_TYPER erratum 161010803
f226650494c6aa87526d12135b7de8b8c074f3de arm64: Relax ICC_PMR_EL1 accesses when ICC_CTLR_EL1.PMHE is clear
3c9c1dcde7c3a6c6203686ccd620620ae5b2a905 arm64: Kconfig: Remove CONFIG_ prefix from ARM64_PSEUDO_NMI section
5186a6cc3ef5a3fa327c258924ef098b0de77006 irqchip/gic-v3-its: Rename VPENDBASER/VPROPBASER accessors
d01fd161e85904064290435f67f4ed59af5daf74 irqchip/gic-v3: Workaround Cavium erratum 38539 when reading GICD_TYPER2
2cd4bd192ee94848695c1c052d87913260e10f36 powerpc/pkeys: Fix handling of pkey state across fork()
5facae4f3549b5cf7c0e10ec312a65ffd43b5726 locking/lockdep: Remove unused @nested argument from lock_release()
1751060e2527462714359573a39dca10451ffbf8 locking/percpu-rwsem, lockdep: Make percpu-rwsem use its own lockdep_map
206c98ffbeda588dbbd9d272505c42acbc364a30 locking/percpu-rwsem: Convert to bool
75ff64572e497578e238fefbdff221c96f29067a locking/percpu-rwsem: Extract __percpu_down_read_trylock()
7f26482a872c36b2ee87ea95b9dcd96e3d5805df locking/percpu-rwsem: Remove the embedded rwsem
ac8dec420970f5cbaf2f6eda39153a60ec5b257b locking/percpu-rwsem: Fold __percpu_up_read()
41f0e29190ac9e38099a37abd1a8a4cb1dc21233 locking/percpu-rwsem: Add might_sleep() for writer locking
d22cc7f67d55ebf2d5be865453971c783e9fb21a locking/percpu-rwsem: Fix a task_struct refcount
f1857a2467755e5faa3c727d7146b6db960abee1 perf/x86/cstate: Update C-state counters for Ice Lake
52e92f409dede388b7dc3ee13491fbf7a80db935 perf/x86/cstate: Add Tiger Lake CPU support
f854839ba2a546a888159667c5ade96793e5cd10 perf cpu_map: Rename struct cpu_map to struct perf_cpu_map
9749b90e566ca1a235fc8e2118f99c5690969342 perf tools: Rename struct thread_map to struct perf_thread_map
32dcd021d004038ca12ac17319da5aa4756e9312 perf evsel: Rename struct perf_evsel to struct evsel
63503dba87acfab49280d3b05df6705a6f327e8a perf evlist: Rename struct perf_evlist to struct evlist
b4b62ee688eb39151c9d8182c3e2f12c9d34602d perf evsel: Rename perf_evsel__init() to evsel__init()
52c86bca94b42239563b1510d5fc6329b0ec1a86 perf evlist: Rename perf_evlist__init() to evlist__init()
0f98b11c616f240b54ee85629ff4d3650c7ccc7d perf evlist: Rename perf_evlist__new() to evlist__new()
c12995a55474e1cefac52da38c7fc47c024de067 perf evlist: Rename perf_evlist__delete() to evlist__delete()
5eb2dd2ade8354dcbe4cef54cd1719622af8f2dc perf evsel: Rename perf_evsel__delete() to evsel__delete()
365c3ae7452ca95e0a8f1e4716dd806550ade706 perf evsel: Rename perf_evsel__new() to evsel__new()
a1cf3a75d3317ed893d453c222d220ca4d5f4c4e perf evlist: Rename perf_evlist__add() to evlist__add()
1625102764a578b11fb407b8194cb0521129d919 perf evlist: Rename perf_evlist__remove() to evlist__remove()
5972d1e07bd95c7458e2d7f484391d69008affc7 perf evsel: Rename perf_evsel__open() to evsel__open()
ec7f24ef44fc5a4eb5cb71658c33db538ed66003 perf evsel: Rename perf_evsel__enable() to evsel__enable()
9a10bb22897ae9c2aa0ac9c2071f539f406ef942 perf evsel: Rename perf_evsel__disable() to evsel__disable()
24e376b24582648d363df4e0a6bcc2ffcecd211e perf evsel: Rename perf_evsel__apply_filter() to evsel__apply_filter()
b49aca3e9ce60d00e5bf0694b2ff4c2cd40809e5 perf evsel: Rename perf_evsel__cpus() to evsel__cpus()
474ddc4c46025a615d0ea791d37ce9038fa20229 perf evlist: Rename perf_evlist__open() to evlist__open()
750b4edeb0527414fb17b0ee2a76d2dbbd9a199d perf evlist: Rename perf_evlist__close() to evlist__close()
1c87f1654cc315fbeae0238a8dbf5bf3c498f3af perf evlist: Rename perf_evlist__enable() to evlist__enable()
e74676debaae7dcce20a34817ef145478887ba95 perf evlist: Rename perf_evlist__disable() to evlist__disable()
959b83c769389b24d64759f60e64c4c62620ff02 libperf: Add perf_cpu_map struct
397721e06e52d017cfdd403f63284ed0995d4caf libperf: Add perf_cpu_map__dummy_new() function
38f01d8da1d8d28678ea16a0a484f4d3eded34b2 libperf: Add perf_cpu_map__get()/perf_cpu_map__put()
07acd22677ac6bb2db404d1d258e8c7d06ca7706 libperf: Add perf_thread_map struct
4b49cce25e719587e934b745fe9bbb5bc8c4ba29 libperf: Add perf_thread_map__new_dummy() function
7836e52e518b5e3fd695850f1d4081f756f58406 libperf: Add perf_thread_map__get()/perf_thread_map__put()
285a30c36d1e18e7e2afa24dae50ba5596be45e7 libperf: Add perf_evlist and perf_evsel structs
b27c4ece725a7f2225f76ad05dc6f3f5463fe893 libperf: Include perf_evsel in evsel object
ce9036a6e3bdfac6c7ccf8221aec9bcf9c2d355e libperf: Include perf_evlist in evlist object
b04c597af761ccfd32f40ee3629843b6f3674fce libperf: Add perf_evsel__init function
4562a7393996bb28bf629277903a561bfefea177 libperf: Add perf_evlist__init() function
9a5edde6d3a6fb26101406534f7a5d09a9fcd362 libperf: Add perf_evlist__add() function
52e22fb8af779e1a26b1cbde1db2f82f78b3ae68 libperf: Add perf_evlist__remove() function
6484d2f9dc3ecbf13f07100f7f771d1d779eda04 libperf: Add nr_entries to struct perf_evlist
1fc632cef4ea137bc45fd0fc4cb902e374064163 libperf: Move perf_event_attr field from perf's evsel to libperf's perf_evsel
9c3516d1b850ea938b074df33e4c86d721c77720 libperf: Add perf_cpu_map__new()/perf_cpu_map__read() functions
93bce7e5bfcd570e9250c974b5c2c91d6b8332ef libperf: Move zalloc.o into libperf
634912d61ccc6bfeebb87716c276fbea20f63bdc libperf: Add perf_evlist__new() function
63bd5dfa69658c459d08a6ee6bfebbd4a91cf24d libperf: Add perf_evsel__new() function
651bf38ce10a65ef8efb901fc33187127c023e97 libperf: Add perf_evlist__for_each_evsel() iterator
57f0c3b6e13ae822ba02dd37563c8e6956a47141 libperf: Add perf_evlist__delete() function
b9358ee95ec65fe7e2c4dc12e4d3da4aeee0d8fc libperf: Add perf_evsel__delete() function
d400bd3abf2cc68df2df32047d3533faf690f404 libperf: Add cpus to struct perf_evsel
fe1f61b37ffada9fc7ec2c9d4ca5376b5a797dbc libperf: Add own_cpus to struct perf_evsel
af663bd01beaff8d9514199fcc1b239902a77de5 libperf: Add threads to struct perf_evsel
ec903f264f0184a0aba62b42d7717c61f1893450 libperf: Add has_user_cpus to struct perf_evlist
f72f901d90b00aaf2a6c1335b41311687b3f2dec libperf: Add cpus to struct perf_evlist
03617c22e31f32cbf0e4797e216db898fb898d90 libperf: Add threads to struct perf_evlist
453fa03090a64c0e0a561f10dfd5e8747796949c libperf: Add perf_evlist__set_maps() function
4b247fa7314ce48282f3da400a9ffb7f3fd3f863 libperf: Adopt xyarray class from perf
9dfcb7599084382884fec6d0fd9ca33945fa7578 libperf: Move fd array from perf's evsel to lobperf's perf_evsel class
5643b1a59e581ac3f66d36caba8124313cc446c0 libperf: Move nr_members from perf's evsel to libperf's perf_evsel
c03538b1f1a7e0e996a8d6feb20cf001d4b14939 libperf: Adopt the readn()/writen() functions from tools/perf
b8eca4d761c57fcf691a8063cd562f205645d11f libperf: Adopt perf_evsel__alloc_fd() function from tools/perf
50a4e6fa450c4e5b688814a7ec8236d0de6e38bf libperf: Adopt simplified perf_evsel__open() function from tools/perf
88761fa1f1e3fb2df86727ac99f88abf2ac7e00b libperf: Adopt simplified perf_evsel__close() function from tools/perf
5c30af92f2b1e9d844e1ae3243e4adcd7753d4c1 libperf: Adopt perf_evsel__read() function from tools/perf
a00571fda6091b5268d05e87d0797efe2db1920a libperf: Adopt perf_evsel__enable()/disable()/apply_filter() functions
09145d26b608e886415396e9277ae08f0617d21b libperf: Add perf_cpu_map__for_each_cpu() macro
0ff1a0fdf52cffa998eee4303e02780d39b2b09c libperf: Add perf_evsel__cpus()/threads() functions
80dc2b3e257cbd62e1cd5b18a6581f231c828c81 libperf: Adopt simplified perf_evlist__open()/close() functions from tools/perf
fcc97c3e7a9d6fd3fda7674f52fb005f4e8453e7 libperf: Adopt perf_evlist__enable()/disable() functions from perf
384c4ad192a01fe235c7ac9e9fd8605d12a807e8 libperf: Add perf_evsel__attr() function
6a94b52a71b7d3ca3ec47c194f7916b306cb26ef libperf: Add tests support
c0e730456ae8a864701f5ca4f6c2e23010e4b04a libperf: Add perf_cpu_map test
43d6976365d5f90de487e8f9f49ab21775ae84f4 libperf: Add perf_thread_map test
8ded5425fa71e2f7f60eb59d64ecdba80582b641 libperf: Add perf_evlist test
bb5133ae4d404a8a08d8a94dfdea1c477c93e842 libperf: Add perf_evsel tests
6bda376ff416cf713773d38b743953a1a9bc0603 libperf: Add perf_evlist__enable/disable test
02266a2d9cf7e04bf3d4b4457654839dc253f605 libperf: Add perf_evsel__enable/disable test
9e64cefe4335b0f2799956d3f3cca8bb652d950f perf intel-pt: Process options for PEBS event synthesis
acb9f2d4755a70e31343f99791aa43b05401b996 perf evsel: Provide meaningful warning when trying to use 'aux_output' on older kernels
f90a24171a8179a29e5e1532fd5bb94e59b5380e perf script: Allow specifying event to switch on processing of other events
6469eb6dffeb44edfa3d4ca496b044b4a9c643b9 perf script: Allow showing the --switch-on event
dd41f660c03a6d8f2c2f3b2cccf50d8c4e06dd42 perf script: Allow specifying event to switch off processing of other events
8829e56fa050998164e496d380cd69186ae9b8d0 perf evswitch: Move switch logic to use in other tools
0b495b121585a1b6ca120fe13f950e2f86ca8197 perf evswitch: Add the names of on/off events
add3a719c95f0443d563889b4af255b78ba54521 perf evswitch: Introduce OPTS_EVSWITCH() for cmd line processing
124e02be72fdff05ab5d7f004a3c0d4061569380 perf evswitch: Introduce init() method to set the on/off evsels from the command line
c9a4269930dada68971a4a97f3abf079af8cde4e perf evswitch: Move enoent error message printing to separate function
8b3c9ea7bf8f50ead6787c084cfc6d3a0b1e38aa perf evswitch: Add hint when not finding specified on/off events
3c84e65a533dbaa1a29bfd847deca73704b675eb perf evsel: Add comment for 'idx' member in 'struct perf_sample_id
42fc2e9ef9603a7948aaa4ffd8dfb94b30294ad8 tools headers: Fixup bitsperlong per arch includes
6549cd8f2cc2cdf7e107fbbc3a68ecefb774bb2f perf tools: Use perf_cpu_map__nr instead of cpu_map__nr
315c0a1f0ccdd44c65f80ccbc62202fed8a23050 libperf: Move perf's cpu_map__empty() to perf_cpu_map__empty()
b4df75de3b3930703415aa053a269ae07c78d9b2 libperf: Move perf's cpu_map__idx() to perf_cpu_map__idx()
7646602401e6f45e4013ddb7c41f6bc211032d02 perf evsel: Move xyarray.h from evsel.c to evsel.h to reduce include dep tree
2d64ae9b85614dc0fcca68aad5da305dec44a9b1 perf counts: Add missing headers needed for types used
69714a4e3959eb051e685c6dce06c6d5a8f27c3c perf evsel: Add missing perf/evsel.h header in util/evsel.h
ddee688a83073a9beebc5c86b67c712de5861411 perf evsel: Remove needless counts.h header from util/evsel.h
f7004f5990e230710112b89f2f11777e5e64e258 perf evsel: Switch to libperf's cpumap.h
5e51b0bb245d963f5ce750256c504be95201e38c perf cpumap: Remove needless includes from cpumap.h
a2f354e3abb853f9a40048829e1f839e8f7fada5 libperf: Add perf_thread_map__nr/perf_thread_map__pid functions
29e331176da121db22daa5dd9d72533b6a1efb33 perf cpumap: No need to include perf.h, ditch it
38b7b678fe989f9c403c001d96887939aaa1b68a perf stat: Remove needless headers from stat.h
aeb00b1aeab6dadd72c24f93bea51a46e109c2ba perf record: Move record_opts and other record decls out of perf.h
b1fcd190bb3fc1234dca60390d171a4cc75b21b2 libperf: Add PERF_RECORD_SAMPLE 'struct sample_event' to perf/event.h
69d81f09e1607b577346c0579bf938c1194bff3a libperf: Rename the PERF_RECORD_ structs to have a "perf" suffix
ebdba16e95f728e94dba07fe0f1221b0e8efdb9d perf tools: Rename perf_event::ksymbol_event to perf_event::ksymbol
6a1b359821eb8d929c4dd9f53178da84888d79ec perf tools: Rename perf_event::bpf_event to perf_event::bpf
3f604b5f61dbff80725392c99827d6617f7bb180 perf tool: Rename perf_tool::bpf_event to bpf
74a1e863eb73dcc9f069b671dfb40650f3832116 perf evsel: Rename perf_missing_features::bpf_event to ::bpf
dda1bf8ea78add78739d128a20b555c4a1a19c27 perf tools: Use CAP_SYS_ADMIN with perf_event_paranoid checks
aa97293ff129f504e7c8589e56007ecfe3e3e835 perf evsel: Kernel profiling is disallowed only when perf_event_paranoid > 1
2da39f1cc36bff4cc53dc32a4afb3def488cc766 perf evlist: Remove needless util.h from evlist.h
ea4385f804eadce3f4fd8698d4ffd9e85fb6d5e0 perf top: Decay all events in the evlist
be5863b7d9281bbb932542d16b7d758357fde267 perf top: Fix event group with more than two events
c78ad994ad99a4e03ecefe446d39dced48ba254f libperf: Add PERF_RECORD_HEADER_ATTR 'struct attr_event' to perf/event.h
78e5ea1620964c4e34e9bf43e98a3def77e6bcde libperf: Add PERF_RECORD_CPU_MAP 'struct cpu_map_event' to perf/event.h
5ded068e923837068e39c0fd4ab40c0dacaa08e8 libperf: Add PERF_RECORD_EVENT_UPDATE 'struct event_update_event' to perf/event.h
0f5b1a28c03d416f7a66d47a9b2f18942e334fc6 libperf: Add PERF_RECORD_HEADER_EVENT_TYPE 'struct event_type_event' to perf/event.h
4fd7a4d220421bc6b63a6f693e45d4397d4da055 libperf: Add PERF_RECORD_HEADER_TRACING_DATA 'struct tracing_data_event' to perf/event.h
ffd337b45b1aedc86b1de3cf8de9a79c10fd3810 libperf: Add PERF_RECORD_HEADER_BUILD_ID 'struct build_id_event' to perf/event.h
fecb410030628d70401e06a98a585d735f61d7e2 libperf: Add PERF_RECORD_ID_INDEX 'struct id_index_event' to perf/event.h
9a8dad0419552934573ddf94d11146faeda465b5 libperf: Add PERF_RECORD_AUXTRACE_INFO 'struct auxtrace_info_event' to perf/event.h
306c9d24c09d84d80ae54b36f7f907c8b8fa537a libperf: Add PERF_RECORD_AUXTRACE 'struct auxtrace_event' to perf/event.h
3460efb2e842cccc4566756f194a1be0547f7098 libperf: Add PERF_RECORD_AUXTRACE_ERROR 'struct auxtrace_error_event' to perf/event.h
aedebdca09ca6efa7efbc0bf26d94cb235120ee4 libperf: Add PERF_RECORD_AUX 'struct aux_event' to perf/event.h
f279ad63a09da65766dfeaf03cfd659f95414936 libperf: Add PERF_RECORD_ITRACE_START 'struct itrace_start_event' to perf/event.h
6b49aaebd05fdbb29a4ab6e28b4fa91539c64877 libperf: Add PERF_RECORD_SWITCH 'struct context_switch_event' to perf/event.h
3e4c453f5cbac75afec37eedd0ffcd8dac82e23e libperf: Add PERF_RECORD_THREAD_MAP 'struct thread_map_event' to perf/event.h
c5f416e6c69e333207666a1ddab0b41c6f12e588 libperf: Add PERF_RECORD_STAT_CONFIG 'struct stat_config_event' to perf/event.h
18a13a60f6f50f2fb1f7354f6d0b2ded01995443 libperf: Add PERF_RECORD_STAT 'struct stat_event' to perf/event.h
782adbe2964953803ea1a38b80f6255c336cdd7b libperf: Add PERF_RECORD_STAT_ROUND 'struct stat_round_event' to perf/event.h
bfd922d8f09a692f2a952a67451bc3eeaad3fb73 libperf: Add PERF_RECORD_TIME_CONV 'struct time_conv_event' to perf/event.h
1b8896fb296f4087c45c997c4b212544c639e272 libperf: Add PERF_RECORD_HEADER_FEATURE 'struct feature_event' to perf/event.h
f5f684321791eb5ebb8c56d7d223e71fe08b5dd9 libperf: Add PERF_RECORD_COMPRESSED 'struct compressed_event' to perf/event.h
7510410a38c71eb5d45217a4934e60eef88c04e1 libperf: Add 'union perf_event' to perf/event.h
72932371e78012cea96edb9e833d81f1c32dd892 libperf: Rename the PERF_RECORD_ structs to have a "perf" prefix
653dd8e6e8e46591f864b7ad98e10819079d5a88 libperf: Move 'enum perf_user_event_type' to perf/event.h
91854f9a077e18e43ed30ebe9c61f8089bec9166 perf tools: Move everything related to sys_perf_event_open() to perf-sys.h
f37110205c3065546d6995b1463751c7bbb50e89 perf time-utils: Adopt rdclock() from perf.h
c1a604dff486399ae0be95e6396e0158df95ad5d perf tools: Remove needless perf.h include directive from headers
b42090256fba05dce1a0482a4ccd9bb6464cc499 perf tools: Remove debug.h from header files not needing it
8520a98dbab61e9e340cdfb72dd17ccc8a98961e perf debug: Remove needless include directives from debug.h
b6b5574b80d6ce6ca87ae3ea1e97cff1bf730f2e perf env: Remove env.h from other headers where just a fwd decl is needed
4cb3c6d546aa5493a960d05eb73bad8e69a58574 perf event: Remove needless include directives from event.h
4a3cec84949d14dc3ef7fb8a51b8949af93cac13 perf dsos: Move the dsos struct and its methods to separate source files
171f7474b6bb6c7074431f76c28ea87d625c68fd perf hist: Remove needless ui/progress.h from hist.h
4772925885dac93aa5f00d1c1da93277778099cd perf tools: Move 'struct events_stats' and prototypes to separate header
5c9dbe6da13398d09efc9ec479194afa6d9ec9e6 perf tools: Remove needless sort.h include directives
4becb2395f9166b11d68817ed4af8fc06b840908 perf tools: Remove needless thread.h include directives
ef7d95661d046eddf2cf33847278781404679a2f perf tools: Remove needless thread_map.h include directives
f2a39fe84901df2b3d1bec3459b65cee3e8db57c perf auxtrace: Uninline functions that touch perf_session
d3300a3c4e76ccecf4daa889327e340a870c550b perf symbols: Move mem_info and branch_info out of symbol.h
287f2649f791819dd2d8f32f0213c8c521d6dfa0 perf metricgroup: Scale the metric result
f01642e4912bb80a01d693f4cc6fb0897207a090 perf metricgroup: Support multiple events for metricgroup
00a263902ac3da886cf275663a938f503a853f68 perf intel-pt: Use shared x86 insn decoder
87a682a7c4e719d238d1839098375470b55e2097 perf build: Ignore intentional differences for the x86 insn decoder
4256d434935e9c85a731823be562785494ca364b libperf: Adopt perf_cpu_map__max() function
b22bb139dcb370cd3a7f3c5ae29d55bb69235ace perf debug: No need to include ui/util.h
4a903c2e151423be9af19c7eb35d4667be21c4c1 perf tools: Remove debug.h from places where it is not needed
fb71c86cc804b8f490fce1b9140014043ec41858 perf tools: Remove util.h from where it is not needed
87ffb6c6407023419ae6b2770142b0754d9cbaa1 perf env: Remove needless cpumap.h header
278306163882a3557fb2c69fd2cc632a2f9ef601 perf event: Move perf_event__synthesize* to event.h
b251892d6ceafa3c8f8e6835a664e248766b1b3e perf stat: Move perf_stat_synthesize_config() to event.h
9c9e754fb804828473c5131bb3e7df78bde396e6 perf callchain: Remove needless event.h include
5939cacc60d22161adba3d6c8b3fe88b76e0f6c0 perf python: Remove debug.h
3f79132a47035dd4609cc5f47715331dfafaa1fa perf annotate: Add missing machine.h include directive
ea49e01cfabd73c94a61649cd04fa524a2beff3c perf tools: Move event synthesizing routines to separate header
055c67ed39887c5563e9540470a4617c1b772aec perf tools: Move event synthesizing routines to separate .c file
b63fd11cced17fcb8e133def29001b0f6aaa5e06 perf stat: Reset previous counts on repeat with interval
8067b3da970baa12e6045400fdf009673b8dd3c2 perf kvm: Move kvm-stat header file from conditional inclusion to common include section
4ec8d984895fef43abfc896c8a3346aca7a66649 perf record: Fix priv level with branch sampling for paranoid=2
a583053299c1e66e6202b494cbc3acd93cedc4cc perf tools: Rename 'struct perf_mmap' to 'struct mmap'
9521b5f2d9d3e3fd6092fb9d7b00c914e7fa7d33 perf tools: Rename perf_evlist__mmap() to evlist__mmap()
db6b7b138506ad537edd12d98f674722a643c150 perf tools: Rename perf_evlist__munmap() to evlist__munmap()
d50cf36115a08e668b4a0919a6807c3f9a9e8db8 perf tools: Rename perf_evlist__alloc_mmap() to evlist__alloc_mmap()
470579b0211d370fd3bd7c2f2b2b098f1ca1ae65 perf tools: Rename perf_evlist__exit() to evlist__exit()
e6b1878d4eea85ab453e4b198cbb26a34614fdc0 perf tools: Rename perf_evlist__purge() to evlist__purge()
e0fcfb086fbbb6233de1062d4b2f05e9afedab3b perf evlist: Adopt backwards ring buffer state enum
547740f7b357cd91cca1fab5d7bf3a37469f7587 libperf: Add perf_mmap struct
4fd0cef2c7b6469abfeef1f9bd056265ce369b13 libperf: Add 'mask' to struct perf_mmap
2cf07b294a604aecd6b583e60724eaa1607f0fbc libperf: Add 'fd' to struct perf_mmap
56a94706cd7233b158ab13e5ac93f5a97ca88941 libperf: Add 'cpu' to struct perf_mmap
e03edfeac0330eaa2b19b82fc942611c1abf2120 libperf: Add 'refcnt' to struct perf_mmap
ebe4d72bba86a499ea0935c58ba1c2aea5aafb43 libperf: Add prev/start/end to struct perf_mmap
8df7a869818ec278969d34e4792985f12b24f23d libperf: Add 'overwrite' to 'struct perf_mmap'
4443e6d7704ee85412e5cb0a0181d7ceee7e984f libperf: Add 'event_copy' to 'struct perf_mmap'
65aa2e6bae3658cbc84c2e628a5c0ca163686204 libperf: Add 'flush' to 'struct perf_mmap'
648b5af3f3ae7f4fad7395c8dc84cb79eafe2ba9 libperf: Move 'system_wide' from 'struct evsel' to 'struct perf_evsel'
c976ee11a0e1b3ba5e63e734dbf4b19154e39fab libperf: Move 'nr_mmaps' from 'struct evlist' to 'struct perf_evlist'
f6fa437577937265dacd4637608f4cf0a1a928dc libperf: Move 'mmap_len' from 'struct evlist' to 'struct perf_evlist'
40cb2d5141bdd52b3c00bb78799118c4606947ac libperf: Move 'pollfd' from 'struct evlist' to 'struct perf_evlist'
fee92b4442f135495d4fc59a0b9418490d4ac0ba libperf: Add missing 'struct xyarray' forward declaration
8cd36f3ef4926165bc5e5af6f7d7b45f0e14a1f4 libperf: Move 'sample_id' from 'struct evsel' to 'struct perf_evsel'
deaf321913a7b1d440c5cd5c7766d47381c9b21b libperf: Move 'id' from 'struct evsel' to 'struct perf_evsel'
e7eb9002d4513ac4a26c756b72e6c25bf063baf2 libperf: Move 'ids' from 'struct evsel' to 'struct perf_evsel'
1d5af02d7a92acaa877ab0fbec0756114852720a libperf: Move 'heads' from 'struct evlist' to 'struct perf_evlist'
70c20369ee95ef8b6887944194cfb74a5a8d1fe3 libperf: Add perf_evsel__alloc_id/perf_evsel__free_id functions
515dbe48f6202147fb7c88aac48c43f49db1c793 libperf: Add perf_evlist__first()/last() functions
ff47d86a0d9bf618b185b49cb4bb9c6f957bb445 libperf: Add perf_evlist__read_format() function
b0031c22819ab606a0cb648c0f0a7d80db3c3a89 libperf: Add perf_evlist__id_add() function
d5a99483dece17dbde01968a7ffc03b7f575dc11 libperf: Add perf_evlist__id_add_fd() function
20f2be1d48ec293b5a935595bd0c2e2915ffa77c libperf: Move 'page_size' global variable to libperf
7634d5336a6e66cba5befd8190b3994916424e08 libperf: Use sys/types.h to get ssize_t, not unistd.h
fb4bf51fcc153f74c86e08ce1d17e9f1a1a71ba0 libperf: Add libperf dependency for tests targets
428dab813a56ce9402f359dc35a3ccdfcaea9429 libperf: Merge libperf_set_print() into libperf_init()
379dd98c3d77de920f09f1933592982d200e076a libperf: Add libperf_init() call to the tests
31f67fc462a9e5df3b900924c2bf649c7bc63af8 libperf: Add perf_evlist__alloc_pollfd() function
f4009e7bf7ba3375cb00e33ca901d61a5acd6c2b libperf: Add perf_evlist__add_pollfd() function
80ab2987a016f774201d4f3509118047f9d58175 libperf: Add perf_evlist__poll() function
32ff3fec07b6d8e6c5cc2342f6cbbdcb224d484c perf copyfile: Move copyfile routines to separate files
ca1252779f48ece225c6003e01c675abb91cf1b4 perf evsel: Introduce evsel_fprintf.h
bd70462062f36bec9d93d3900addfca4f8ec718f perf evlist: Remove unused perf_evlist__fprintf() method
95be9d197da6f9006f6a70a0d141498ea2488858 perf evsel: Move config terms to a separate header
252a2fdc742bc34b94da203282773952d3b54279 perf tools: Replace needless mmap.h with what is needed, event.h
6f6473c37d34b00676a152ec7e60770c78ed7c2f perf stat: Fix free memory access / memory leaks in metrics
7834fa948bebe648e8ce03393fb6b213c33f0a3a perf evlist: Fix access of freed id arrays
4b0b2b096da9d296e0e5668cdfba8613bd6f5bc8 libsubcmd: Make _FORTIFY_SOURCE defines dependent on the feature
9db0e3635fb35b6695275774ab909c51221b66ad perf evsel: Fall back to global 'perf_env' in perf_evsel__env()
5a40e1994815ab09c59614c6a13d94eef55d1a7f perf evlist: Fix fix for freed id arrays
5a0baf5123236362fda4e9772cc63b7faa16a0df perf tools: Fix mode setting in copyfile_mode_ns()
06f84d1989b7e58d56fa2e448664585749d41221 perf tools: Make usage of test_attr__* optional for perf-sys.h
eb573e746b9d4f0921dcb2449be3df41dae3caea perf metricgroup: Fix printing event names of metric group with multiple events
af9ca6f9bb16e446a44393a797d0ae74d356a5c7 drivers: hv: vmbus: Introduce latency testing
41cfe2a2a7f4fad5647031ad3a1da166452b5437 x86/hyperv: Hide pv_ops access for CONFIG_PARAVIRT=n
63ecc6d22ce46643165c391a9c90ba67e22e1c0f Drivers: hv: vmbus: Suspend/resume the synic for hibernation
4df4cb9e99f83b70d54bc0e25081ac23cceafcbc x86/hyperv: Initialize clockevents earlier in CPU onlining
04e7712f4460585e5eed5b853fd8b82a9943958f y2038: futex: Move compat implementation into futex.c
ca16d5bee59807bf04deaab0a8eccecd5061528c futex: Prevent robust futex exit race
ba31c1a48538992316cc71ce94fa9cd3e7b427c0 futex: Move futex exit handling into futex code
3d4775df0a89240f671861c6ab6e8d59af8e9e41 futex: Replace PF_EXITPIDONE with a state
150d71584b12809144b8145b817e83b81158ae5f futex: Split futex_mm_release() for exit/exec
f24f22435dcc11389acc87e5586239c1819d217c futex: Set task::futex_state to DEAD right after handling futex exit
18f694385c4fd77a09851fd301236746ca83f3cb futex: Mark the begin of futex exit explicitly
4a8e991b91aca9e20705d434677ac013974e0e30 futex: Sanitize exit state handling
af8cbda2cfcaa5515d61ec500498d46e9a8247e2 futex: Provide state handling for exec() as well
3f186d974826847a07bc7964d79ec4eded475ad9 futex: Add mutex around futex exit
ac31c7ff8624409ba3c4901df9237a616c187a5d futex: Provide distinct return value when owner is exiting
8019ad13ef7f64be44d4f892af9c840179009254 futex: Fix inode life-time issue
222993395ed38f3751287f4bd82ef46b3eb3a66d futex: Remove pointless mmgrap() + mmdrop()
4b39f99c222a2aff6a52fddfa6d8d4aef1771737 futex: Remove {get,drop}_futex_key_refs()
ae173a915785e55574c1fc54edf58b9b87b28c22 selftests/bpf: support BPF_FLOW_DISSECTOR_F_PARSE_1ST_FRAG
71c99e32b926159ea628352751f66383d7d04d17 bpf/flow_dissector: support ipv6 flow_label and BPF_FLOW_DISSECTOR_F_STOP_AT_FLOW_LABEL
51436ed78d59d0a0b7e64a2a2b997ac66a6c050e selftests/bpf: convert bpf_verif_scale.c to sub-tests API
6f9d451ab1a33728adb72d7ff66a7b374d665176 xdp: Add devmap_hash map type for looking up devices by hashed index
a78d0dbec712999ecd2f800eea0f62dc93867a78 selftests/bpf: add loop test 4
8c30396074c131765b19eb3cb7ff764a4f2f2913 selftests/bpf: add loop test 5
c3bbf176fbad5d7470f8a4f311f7c11126ad36c2 selftests/bpf: add sockopt clone/inheritance test
d38835b75f67df16cef65c14aa64796a1832e6b4 selftests/bpf: test_progs: remove global fail/success counts
62d69f24fe5eca23410b6a21334a7267b0c8838b selftests/bpf: test_progs: remove asserts from subtests
ac915762ea3977af49383bd914d506da0905c72e selftests/bpf: test_progs: add missing \\n to CHECK_FAIL
88dadc632763bdccddf99d8454aa3a7932605f00 selftests/bpf: test_progs: add test__join_cgroup helper
4a64742168ce9e9972dab3f684629845c6e6dc67 selftests/bpf: test_progs: convert test_sockopt
9a365e67d8bbcfff47063a4eeaa98fd3668e223a selftests/bpf: test_progs: convert test_sockopt_sk
3886bd7c9b01317a5721161f8314f6c25f4f6229 selftests/bpf: test_progs: convert test_sockopt_multi
e3e02e1d9c24b0c3a36f9c854ae80e61fd62b2a9 selftests/bpf: test_progs: convert test_sockopt_inherit
1f4f80fed217e8186a7e1067ae71260e133012ce selftests/bpf: test_progs: convert test_tcp_rtt
af58e7ee6a8d83726ad8a2696e98d86400a7639c xdp: Fix race in dev_map_hash_update_elem() when replacing element
063e688133914505ddb396cc33231f22f12e0685 libbpf: Fix false uninitialized variable warning
39529a9948d8f67f39cb72bec914c1adab38562d libbpf: Teach btf_dumper to emit stand-alone anonymous enum definitions
a2d074e4c6e81ec9ab359d54f0b88273c738de37 selftests/bpf: test_progs: Don't leak server_fd in test_sockopt_inherit
05679ca6feebc1ef3bf743563315d9975adcf6fb xdp: Prevent overflow in devmap_hash cost calculation for 32-bit builds
28875945ba98d1b47a8a706812b6494d165bb0a0 rcu: Add support for consolidated-RCU reader checking
fbab8d6735e2643365040bd9e1057addc0d9b4cf rcu/sync: Remove custom check for RCU readers
ce197d83a9fc42795c248c90983bf05faf0f013b xdp: Handle device unregister for devmap_hash map type
071cdecec57fb5d5df78e6a12114ad7bccea5b0e xdp: Fix cleanup on map free for devmap_hash map type
b568405856906ee4d9ba6284fd36f2928653a623 libbpf: Fix Makefile' libbpf symbol mismatch diagnostic
485ec2ea9cf556e9c120e07961b7b459d776a115 bpf, devmap: Pass lockdep expression to RCU lists
1bd63524593b964934a33afd442df16b8f90e2b5 libbpf: handle symbol versioning properly for libbpf.a
2d3eb67f64ec317bbfe340cfcc8325d40a6ff317 libbpf: Sanitize global functions
9173cac3b64e6785dd604f5075e6035b045a0026 libbpf: Support .text sub-calls relocations
f60858f9d327c4dd0c432abe9ec943a83929c229 hugetlbfs: don't retry when pool page allocations start to fail
5b84609532d6e48a769a735d214e2cd705ed395e gfs2: changes to gfs2_log_XXX_bio
f4686c26ecc34e8e458b8235f0af5198c9b13bfd gfs2: read journal in large chunks
eed0f953b90e86e765197a1dad06bb48aedc27fe gfs2: Another gfs2_find_jhead fix
7582026f6f3588ecebd281965c8a71aff6fb6158 gfs2: fix gfs2_find_jhead that returns uninitialized jhead with seq 0
99e98d3fb1008ef7416e16a1fd355cb73a253502 cpuidle: Consolidate disabled state checks
c1d51f684c72b5eb2aecbbd47be3a2977a2dc903 cpuidle: Use nanoseconds as the unit of time
82e430a6df7f0b5972c7fe717faffea823c6b84a cpuidle: play_idle: Increase the resolution to usec
c55b51a06b01d67a99457bb82a8c31081c7faa23 cpuidle: Allow idle injection to apply exit latency limit
5aa9ba6312e36c18626e73506b92d1513d815435 cpuidle: Pass exit latency limit to cpuidle_use_deepest_state()
ba1e78a1dc0ca3e92f0be82279e6ba24177af7d6 cpuidle: Drop disabled field from struct cpuidle_state
36fcb4292473cb9c9ce7706d038bcf0eda5cabeb cpuidle: use first valid target residency as poll time
b0142d66f4edb8578b7772d6d7ad731836b82ddb cpuidle: Fix cpuidle_driver_state_disabled()
d4d8140176972fdb3f00bffc88e63af781de8d67 cpuidle: Drop unnecessary type cast in cpuidle_poll_time()
75a80267410e38ab76c4ceb39753f96d72113781 cpuidle: Allow idle states to be disabled by default
b9f8c26afc405a4a616e765e949bdd551151e41d of: base: Add of_get_cpu_state_node() to get idle states for a CPU node
358be656406dce296fafeac7a913ba33e9a66971 selftests/net: add txring_overwrite
8c03557c3f25271e62e39154af66ebdd1b59c9ca selftests/net: correct the return value for run_afpackettests
af5136f95045b6c4bb8a53d2f288a905c3bd6f25 selftests/net: SO_TXTIME with ETF and FQ
3fb321fde22ddc3adc83e1f690b1fad9dfbd24ef selftests/net: ipv6 flowlabel
ff95bf28c23490584b9d75913a520bb7bb1f2ecb selftests/net: skip psock_tpacket test if KALLSYMS was not enabled
cecaa76b2919aac2aa584ce476e9fcd5b084add5 selftests: txring_overwrite: fix incorrect test of mmap() return value
53db1cced401e4c65d49edf198e00daa9fc837e6 selftests/net: add missing gitignores (ipv6_flowlabel)
acda655fefae352a48eec87c8f8487de1608a48b selftests: Add nettest
6f9d5cacfe07308fd4007ebdcb76861752d0a1ad selftests: Setup for functional tests for fib and socket lookups
c032dd8cc7e23bbcc53e00b262594657ff1b7532 selftests: Add ipv4 ping tests to fcnal-test
c0644e71df3302ce44ef4572d3df9fb4758bcb8b selftests: Add ipv6 ping tests to fcnal-test
bbd7c764086b4e6bea8c37e94914f6e5fee34f7d selftests: Add ipv4 tcp tests to fcnal-test
a071bbf20539fa9166820c34c71cf2167dc23833 selftests: Add ipv6 tcp tests to fcnal-test
a4368be9ad23d2a8e13c2b98409f9df166a4c9c5 selftests: Add ipv4 udp tests to fcnal-test
6abdb651255784f1907d8c8fcbf7e4ba4196b1da selftests: Add ipv6 udp tests to fcnal-test
75b2b2b3db4ce660541709c52e826e2ac5c602ad selftests: Add ipv4 address bind tests to fcnal-test
34d0302ab86172b373e38ef02ea10519ab1c2388 selftests: Add ipv6 address bind tests to fcnal-test
0113f726856e389461fb0fc8d519fc2e8fe52d46 selftests: Add ipv4 runtime tests to fcnal-test
4cd12f61b55bc6a670900d75806a2f0122fc6658 selftests: Add ipv6 runtime tests to fcnal-test
88f2b36053b97d3299976dd3af1c768a7f5d9c55 selftests: Add ipv4 netfilter tests to fcnal-test
db6641ee6e9e728efb71bda93740559dc55f696c selftests: Add ipv6 netfilter tests to fcnal-test
56eba15d1c601d7e8a40b2997c9aff72bdae9b0f selftests: Add use case section to fcnal-test
a9e21bea1f815c2ec917ecc0efe0a7049c825d5b ][next] selftests: nettest: fix spelling mistake: "potocol" -> "protocol"
e858ef1cd4bc1bdfcd18114a8195236e336cee42 selftests: Add l2tp tests
f887427b2cecfb57165f0207b33aed89dd29ab61 selftests: Fix detection of nettest command in fcnal-test
87caaaf2d19d4656924241aadb612782c296928f selftests: Fix get_ifidx and callers in nettest.c
ef129d34149ea23d0d442844fc25ae26a85589fc selftests/net: add nettest to .gitignore
b5b9181c2403025b2c7ae7ea44333fd8fe6dbb54 selftests: Make l2tp.sh executable
670cd6849ea36ea4df2f2941cf4717dff8755abe selftests: net: Fix printf format warnings on arm
3c28d99fc62d64a2a9a2d99971bbe9ba17d187cb selftest: net: add some traceroute tests
ea6a547669b37453f2b1a5d85188d75b3613dfaa selftests/net: make so_txtime more robust to timer variance
17aa23ee72342efdc3b214f582399dd22478887f fcnal-test: Fix vrf argument in local tcp tests
d4546c2509b1e9cd082e3682dcec98472e37ee5a net: Convert GRO SKB handling to list_head.
68d2f84a1368cc5d4ccbbbfc6821f159d27681c9 net: gro: properly remove skb from list
7c4ec749a3bd89237d7195ccd621bf5d4124d6b5 net: Init backlog NAPI's gro_hash.
992cba7e276d438ac8b0a8c17b147b37c8c286f7 net: Add and use skb_list_del_init().
ece23711dd956cd5053c9cb03e9fe0668f9c8894 net: Properly unlink GRO packets on overflow.
010c8f01aa7fe18ea97d302e1c7e9ca83bc27433 net: Get rid of switchdev_port_attr_get()
3d705f07d16b1d872c556b4ebf44deabeca0e9c1 net: Remove switchdev_ops
19a3b7eea42402accf52bcb9ddb51bfdb4d7a13b ipv6: export function to send route updates
d4b96c7b51e8fe9bcf94c8ab8cd5717d2f005b04 ipv6: Extend notifier info for multipath routes
f6c3bb75165cb4d0a0beb2ea6df5b392b7131645 mlxsw: spectrum_router: Ignore IPv6 multipath notifications
d133e4f1fa12bff58e1203c7d6c75f993fb5dead netdevsim: Ignore IPv6 multipath notifications
d5382fef70ce273608d6fc652c24f075de3737ef ipv6: Stop sending in-kernel notifications for each nexthop
29f3490ba9d2399d3d1b20c4aa74592d92bd4e11 net: use indirect call wrappers for skb_copy_datagram_iter()
a08e7fd9123d85dfdf8d1dc61dbe321c8359d25f net: Fix typo of SKB_SGO_CB_OFFSET
b06d072ccc4b1acd0147b17914b7ad1caa1818bb macsec: restrict to ethernet devices
3d1e0b406de16508de96f4a07fc3f94cfc678372 netfilter: conntrack: remove two args from resolve_clash
b1b32552c1d81f0cf6a8e79043a2a47e769ff071 netfilter: conntrack: place confirm-bit setting in a helper
bb89abe52bf426f1f40850c441efc77426cc31e1 netfilter: conntrack: split resolve_clash function
6a757c07e51f80ac34325fcd558490d2d1439e1b netfilter: conntrack: allow insertion of clashing entries
99e25d071fca91eb90ffa2f51240547a69137bde netfilter: cttimeout: ctnl_timeout_find_get() returns incorrect pointer to type
717700d183d65bd2e6511566aa6d32395419d158 netfilter: Export nf_ct_{set,destroy}_timeout()
06bd2bdf19d2f3d22731625e1a47fa1dff5ac407 openvswitch: Add timeout support to ct action
6d670497e01803b486aa72cc1a718401ab986896 openvswitch: use after free in __ovs_ct_free_action()
12c6bc38f99bb168b7f16bdb5e855a51a23ee9ec openvswitch: Fix log message in ovs conntrack
7177895154e6a35179d332f4a584d396c50d0612 openvswitch: Fix conntrack cache with timeout
6cd6cbf593bfa3ae6fc3ed34ac21da4d35045425 tcp: repair: fix TCP_QUEUE_SEQ implementation
7b571c19d4c0b78d27dd3bf1f3c42e4032390af6 scsi: storvsc: Correctly set number of hardware queues for IDE disk
2b8bd423614c595540eaadcfbc702afe8e155e50 block/diskstats: more accurate approximation of io_ticks for slow disks
8636a1f9677db4f883f29a072f401303acfc2edd treewide: surround Kconfig file paths with double quotes
76cc9f0efd952d376e93e79b1f19fd6fdb8291bc i2c: headers: reformat header comment and update copyright
c807da539e8276cc1bd2fb08df5ed160e329b40a i2c: remove unneeded 'extern' from function declatations
8daee952b4389729358665fb91949460641659d4 i2c: acpi: put device when verifying client fails
348dd93e40c112afda3cd07daa6f470e474d29dc PCI: hv: Add a Hyper-V PCI interface driver for software backchannel interface
8d0ea29db5aefd0d94fa4b6ca6124c68998f3c6a powerpc/xive: Define xive_native_alloc_irq_on_chip()
c420644c0a8f8839ca7269acbb8a3fc7fe1ec97d powerpc: Use mm_context vas_windows counter to issue CP_ABORT
45f25a79fe50f330b563d012fc856a1103cb00d8 powerpc/vas: Define VAS_TX_WIN_OPEN ioctl API
656ecc16e8fc2ab44b3d70e3fcc197a7020d0ca5 crypto/nx: Initialize 842 high and normal RxFIFO control registers
4aebf3ce26ca2128433b615cd2535c22b03c8fa3 crypto/nx: Make enable code generic to add new GZIP compression type
1af11ae225350a92a1e13a4c27c215befced20af crypto/nx: Enable and setup GZIP compression type
c12e38b1d52e995a0efe6d011873f57e04b80b89 Documentation/powerpc: VAS API
45591da765885f7320a111d290b3a28a23eed359 powerpc/vas: Include linux/types.h in uapi/asm/vas-api.h
5666d896e838c974c535b3949353c83d68ce4384 mei: no need to check return value of debugfs_create functions
82b29b9f72afdccb40ea5f3c13c6a3cb65a597bc mei: me: add comet point V device id
99397d33b763dc554d118aaa38cc5abc6ce985de mei: me: add cedar fork device ids
a17c78460093aad8fb97fc6905c22355b7d1c923 scsi: zfcp: report FC Endpoint Security in sysfs
f0d26ae847489850509b793ef3f74be62f69ab0f scsi: zfcp: log FC Endpoint Security of connections
616da39e0060f3b8bbc0f36f7d911bb5abb31746 scsi: zfcp: trace FC Endpoint Security of FCP devices and connections
6f3196b74d64fe4b0a51cefa6f2f80f7f55bcf49 s390/crypto: Rework on paes implementation
7f820d053948ca82bd8221b1df3d676b9c93a494 s390/crypto: enable clear key values for paes ciphers
55d0a513a0e202c68af2c8f4b1e923a345227bbb s390/pkey/zcrypt: Support EP11 AES secure keys
34515df25d7e5ae19f66eadfb1351a3178344f36 s390/zcrypt: use kvmalloc instead of kmalloc for 256k alloc
66bb7fa81e28514ffd2cee9d07526fbb7484c029 scsi: ibmvfc: Don't send implicit logouts prior to NPIV login
c65e6815db1c2e28d5554bd99d3a6e522ab599d1 s390/boot: add dfltcc= kernel command line parameter
803521b149c8c71a712445a32bd9316e074df76a lib/zlib: add zlib_deflate_dfltcc_enabled() function
e53d92856e9f1cfa0be284fa1dc3367130ce433a scsi: zfcp: enhance handling of FC Endpoint Security errors
42cabdaf103be174adb6f1ca61383eb2b35a013a scsi: zfcp: log FC Endpoint Security errors
9897d583b01525c6fb5dcaaa87263e7f395c905c s390/qeth: consolidate some duplicated HW cmd code
a71e4228e6f2a4fe6519d8ed081d0a164967fa31 xfs: fix xfs_rmap_has_other_keys usage of ECANCELED
b3dc0695fa40c3b280230fb6fb7fb7a94ce28bf4 x86: xen: kvm: Gather the definition of emulate prefixes
41cd02c6f7f6e66e7abf02a4379e355a7db89f78 kvm: x86: Expose RDPID in KVM_GET_SUPPORTED_CPUID
9de25d182b806d63412f6827e3066c031d4be500 selftests: kvm: synchronize .gitignore to Makefile
4be5341026246870818e28b53202b001426a5aec KVM: VMX: Initialize vmx->guest_msrs[] right after allocation
864e2ab2b46db1ac266c46a7c9cefe6cc893029d kvm: x86: Move IA32_XSS to kvm_{get,set}_msr_common
8a44119a98bee4381d28f3ed1e41dfacf5c3aa6d KVM: Fix NULL-ptr deref after kvm_create_vm fails
e2d3fcaf939dded3da604a25ebbea9fb954c2280 KVM: fix placement of refcount initialization
7a5ee6edb42e0bb487954806d34877995b6b8d59 KVM: X86: Fix initialization of MSR lists
6cbee2b9eccfc1c93a03aaa286ec93331f7c95e7 KVM: X86: Reset the three MSR list number variables to 0 in kvm_init_msr_list()
6b546e1c9ad2a25f874f8bc6077d0f55f9446414 x86/tss: Fix and move VMX BUILD_BUG_ON()
cc877670975be9082138e34f9e55d9d79c527b5c KVM: nVMX: Use semi-colon instead of comma for exit-handlers initialization
9dadc2f918df26e64aa04794cdb4d8667c934f47 KVM: VMX: Rename INTERRUPT_PENDING to INTERRUPT_WINDOW
4e2a0bc56ad197e5ccfab8395649b681067fe8cb KVM: VMX: Rename NMI_PENDING to NMI_WINDOW
5e3d394fdd9e6b49cd8b28d85adff100a5bddc66 KVM: VMX: Fix the spelling of CPU_BASED_USE_TSC_OFFSETTING
444e2ff34df8f631cd83ae73bb56ef13cfb84b34 tools arch x86: Grab a copy of the file containing the MSR numbers
32ad73db7fc5fe7eebafdab3b528f99ab8498e3f x86/msr-index: Clean up bit defines for IA32_FEATURE_CONTROL MSR
f6505c88bff01e41b21a1f125edd1ace5330f164 tools/x86: Sync msr-index.h from kernel sources
1db2a6e1e29ff994443a9eef7cf3d26104c777a7 x86/intel: Initialize IA32_FEAT_CTL MSR at boot
6d527cebfa04ba4792be9e79e0d7cab22ab6c377 x86/mce: WARN once if IA32_FEAT_CTL MSR is left unlocked
501444905fcb4166589fda99497c273ac5efc65e x86/centaur: Use common IA32_FEAT_CTL MSR initialization
ef4d3bf19855641fc8a1f621eaf06e2a2bb872bb x86/cpu: Clear VMX feature flag if VMX is not fully enabled
159348784ff0654291f4c7607fc55e73da8e87e8 x86/vmx: Introduce VMX_FEATURES_*
b47ce1fed42eeb9ac8c07fcda6c795884826723d x86/cpu: Detect VMX features on Intel, Centaur and Zhaoxin CPUs
167a4894c113ebe6a1f8b24fa6f9fca849c77f8a x86/cpu: Set synthetic VMX cpufeatures during init_ia32_feat_ctl()
85c17291e2eb4903bf73e5d3f588f41dbcc6f115 x86/cpufeatures: Add flag to track whether MSR IA32_FEAT_CTL is configured
21bd3467a58ea51ccc0b1d9bcb86dadf1640a002 KVM: VMX: Drop initialization of IA32_FEAT_CTL MSR
a4d0b2fdbcf75ef6654713c83c316ea3a661ddc3 KVM: VMX: Use VMX feature flag to query BIOS enabling
34109c0476f10c033945b630a58c087e9d0ef8a0 KVM: VMX: Use direct vcpu pointer during vCPU create/free
7f27179a88a693f2d357860fddef65704578edf5 KVM: SVM: Use direct vcpu pointer during vCPU create/free
a9dd6f09d7e54d3f58be32d7d051196f7a00e69e KVM: x86: Allocate vcpu struct in common x86 code
fc6e2a1845abfcfa335aef5ffaac664e104d72ca KVM: x86: Move FPU allocation to common x86 code
d813a8ba54f94fd6a0276230bdf53c97b36c2101 KVM: x86: Move allocation of pio_data page down a few lines
987b2594ed5d128c95c5255a9c7755f7480bf407 KVM: x86: Move kvm_vcpu_init() invocation to common code
50b143e1b3cfb71c38bdd20dd64c98aa3528117f KVM: x86: Drop kvm_arch_vcpu_free()
897cc38eaab96d006ab17edd0f50a2f432f584cf KVM: Add kvm_arch_vcpu_precreate() to handle pre-allocation issues
d2423b347de46657c306d4c58f2e08feba4a19c4 KVM: x86: Invoke kvm_vcpu_uninit() immediately prior to freeing vcpu
4543bdc08857e8026475a477e7ba88e461f38271 KVM: Introduce kvm_vcpu_destroy()
e529ef66e6b53b34f9b8caac55950c8a55c79dac KVM: Move vcpu alloc and init invocation to common code
aaba298c6bca8d8625880a8016e5b80adc8a11af KVM: Unexport kvm_vcpu_cache and kvm_vcpu_{un}init()
d5c48debcc4fbdd09e3e0871980b7ebf06ec6e07 KVM: Move initialization of preempt notifier to kvm_vcpu_init()
5f73db112e597b30efb7f81ab5fee87a9febad3e KVM: x86: Move guts of kvm_arch_vcpu_setup() into kvm_arch_vcpu_create()
ff72bb55cbfd060172cfbafafe4838ce92ab080f KVM: s390: Manually invoke vcpu setup during kvm_arch_vcpu_create()
afede96df55e9cba948c8cc8a682e962244285b4 KVM: Drop kvm_arch_vcpu_setup()
95a0d01eef7a1b97358c25d335c4a28f91345cf9 KVM: x86: Move all vcpu init code into kvm_arch_vcpu_create()
39a93a8794719a37a37140460865c4edaff795a6 KVM: ARM: Move all vcpu init code into kvm_arch_vcpu_create()
74ce2e60d4874fc2464e321af1397c6fae984ec9 KVM: PPC: Move all vcpu init code into kvm_arch_vcpu_create()
19bcc89eb8a9fa1d4be4bff5b5e7917cb8bbc1f7 KVM: arm64: Free sve_state via arm specific hook
ddd259c9aaba08244dba8877687ee856f79c4f45 KVM: Drop kvm_arch_vcpu_init() and kvm_arch_vcpu_uninit()
9941d224fb7c765bc20f3cb6c747786adc5cd002 KVM: Move putting of vcpu->pid to kvm_vcpu_destroy()
8bd826d629d6ff4a4e647079db15d64d06346004 KVM: Move vcpu->run page allocation out of kvm_vcpu_init()
c926f2f7230b1a29e31914b51db680f8cbf3103f KVM: x86: Protect exit_reason from being used in Spectre-v1/L1TF attacks
fcd97ad58f76efcd58808941e4dd2bc6c544b9de KVM: Add build-time error check on kvm_run size
005ba37cb89bcc0cf63c2029a41f8db165aeb615 mm: thp: KVM: Explicitly check for THP when populating secondary MMU
17eff01904f5f2fa12f4a56666637ce69ce5c645 KVM: x86/mmu: Refactor THP adjust to prep for changing query
db5432165e9b51d2a36572be38d078e79f8df0d8 KVM: x86/mmu: Walk host page tables to find THP mappings
83f06fa7a6fd9d5758e5f8438e2137f25f6f2e6b KVM: x86/mmu: Rely on host page tables to find HugeTLB mappings
09c4453ee8e63a710774ae10da7909289aa6a58e KVM: x86/mmu: Remove obsolete gfn restoration in FNAME(fetch)
d32ec81bab670e599e645e1d1d5231d62de7d0d6 KVM: x86/mmu: Zap any compound page when collapsing sptes
293e306e7faac4eafaefb9518a1cd6eaecad88e9 KVM: x86/mmu: Fold max_mapping_level() into kvm_mmu_hugepage_adjust()
2c0629f4b95cf5adf5b6f78f7d318df894b5f9a1 KVM: x86/mmu: Remove lpage_is_disallowed() check from set_spte()
e851265a816f96a86c5a0316d2fc4d45be76d1d4 KVM: x86/mmu: Use huge pages for DAX-backed files
91b0d268a59dd9c18221ea750b80f9a317b29ed2 KVM: x86: inline memslot_valid_for_gpte
4e19c36f2df8f84da22c7287de86729aaf3e352b kvm: x86: Introduce APICv inhibit reason bits
8df14af42f00a434c492c9964a8095bf59831a45 kvm: x86: Add support for dynamic APICv activation
24bbf74c0c36bfbaa276c9921b55b844018b241e kvm: x86: Add APICv (de)activate request trace points
ef8efd7a15bb7147a4ffb09758a6bd25d744a14e kvm: x86: Introduce APICv x86 ops for checking APIC inhibit reasons
2de9d0ccd0fea32fc6a684f3f22496967ed608bc kvm: x86: Introduce x86 ops hook for pre-update APICv
f4fdc0a2edf48f16f7b10cceaf4781fc56ab7fd9 kvm: x86: hyperv: Use APICv update request interface
9a0bf05430699dc94b7ced940f6270c7cf1d77ef svm: Deactivate AVIC when launching guest with nested SVM support
f3515dc3bef81e96bdb2ac93ef8fd20b1c2aaae5 svm: Temporarily deactivate AVIC during ExtINT handling
e2ed4078a6ef3ddf4063329298852e24c36d46c8 kvm: i8254: Deactivate APICv when using in-kernel PIT re-injection mode.
e8ef2a19a051b755b0b9973ef1b3f81e895e2bce KVM: SVM: allow AVIC without split irqchip
8171cd68806bd2fc28ef688e32fb2a3b3deb04e5 KVM: x86: use raw clock values consistently
30978346372e5c43a652cfbd4533c6bd5427c33b x86: Add "nopv" parameter to disable PV extensions
9446e6fce0ab9dfd44b96f630b4e3a0a0ab879fd KVM: x86: fix WARN_ON check of an unsigned less than zero
518b7d55f80eb548595c7940b6975ba350e5255d docs: virtual: add it to the documentation body
7bd460fc1dfa7d82d99493fc5d7b5f9c7b679af4 docs: kvm: add arm/pvtime.rst to index.rst
2756df60d09748b1ccdc568690f9c4112353c920 docs: virt: convert halt-polling.txt to ReST format
263a19ff21c4a10f0a2d77c21feb3a641e5127f0 docs: virt: Convert msr.txt to ReST format
d371c011fc5e16bc50985bab94b7141204c52153 docs: kvm: devices/arm-vgic-its.txt to ReST format
c0d1c8a0af591c139fe7339bf6cdf0e766037cd4 docs: kvm: devices/arm-vgit-v3.txt to ReST
bf6154dba0a7d4defd3e8c9c85d1933f442ef01b docs: kvm: convert devices/arm-vgit.txt to ReST
05c47036c62ea65a8f8aeaef5021c7220488a664 docs: kvm: convert devices/mpic.txt to ReST
e944743003617aeaebebc33adef5de093e701766 docs: kvm: convert devices/s390_flic.txt to ReST
e777a5bd98c689f1ee15ebdbce739497e7d92f70 docs: kvm: convert devices/vcpu.txt to ReST
aff7aeea548312cacd146e80efb944bd8f2c0faa docs: kvm: convert devices/vfio.txt to ReST
6c972ba685d5849009e0747cf8799adc3b8d5f11 docs: kvm: convert devices/vm.txt to ReST
5cccf3797435008b7cd8d9d98d37db3962368710 docs: kvm: convert devices/xics.txt to ReST
d3b52e4976cec9c830bc14bd38f043e8ca00ba68 docs: kvm: convert devices/xive.txt to ReST
106ee47dc633a930bb61290713217803aee194e7 docs: kvm: Convert api.txt to ReST format
69bf758bc8a4875a361d7c703995248d808fa24d docs: kvm: convert arm/hyp-abi.txt to ReST
cec0e48be339f06879d971702f206e9683956ef1 docs: kvm: arm/psci.txt: convert to ReST
5a0af4806c25aff4b2f8d2e24d635840ec58a87b docs: kvm: Convert hypercalls.txt to ReST format
75e7fcdb4a6f394a6644ee1cfe193284945003b5 docs: kvm: Convert locking.txt to ReST format
037d1f92eff908f794644d49435d8849a3c10461 docs: kvm: Convert mmu.txt to ReST format
320f3f74d9a1a4a193d515de0549eafc82369f47 docs: kvm: Convert nested-vmx.txt to ReST format
c849d8613991292d5f945956780bb8134cbce7ed docs: kvm: Convert ppc-pv.txt to ReST format
a9700af64e1bb28fc18fd362307bc787e10e340b docs: kvm: Convert s390-diag.txt to ReST format
6012d9a9fa693e608f4de3c5a13741794dc4b2c7 docs: kvm: Convert timekeeping.txt to ReST format
033741c6c997e60f9c2de280925519d3ccff5366 docs: kvm: review-checklist.txt: rename to ReST
a4443267800af240072280c44521caab61924e55 KVM: nVMX: clear PIN_BASED_POSTED_INTR from nested pinbased_ctls only when apicv is globally disabled
a262bca3aba03f0696995beb223c610e47533db3 KVM: Introduce pv check helpers
8a9442f49c72bde43f982e53b74526ac37d3565b KVM: Pre-allocate 1 cpumask variable per cpu for both pv tlb and pv ipis
025eed7b3519be30cc2310711137ab4ff827fbe3 KVM: selftests: Create a demand paging test
4f72180eb4da9ce0bad2f284e81875bb15ecfbb7 KVM: selftests: Add demand paging content to the demand paging test
0119cb365c93621535187c7527486c3b378a622d KVM: selftests: Add configurable demand paging delay
af99e1ad7e708d1a1a4e4c1bb10a2b851974fc04 KVM: selftests: Add memory size parameter to the demand paging test
56a4210f4e4ed9c8ebec87d212453be8f6f8750f KVM: selftests: Pass args to vCPU in global vCPU args struct
018494e6d8234c420e4f7236f502993df5584812 KVM: selftests: Support multiple vCPUs in demand paging test
f09205b99832f353088b7c82778b3f8175627620 KVM: selftests: Time guest demand paging
3439d886e4d9b79b6b226e70c08d312bd31acbd4 KVM: selftests: Rework debug message printing
244c6b6df99b7a7ce3c9997858c3c8fd3c800421 KVM: selftests: Convert some printf's to pr_info's
562b6b089d64724278de61114da658fb0a516250 KVM: x86: Consolidate VM allocation and free for VMX and SVM
4d395762599dbab1eb29d9011d5b75ca3cc4f70a KVM: Remove unnecessary asm/kvm_host.h includes
cc7f5577adfc766de8613b71e9ae52c053fcca01 KVM: SVM: Inhibit APIC virtualization for X2APIC guest
21f1b8f29ea5b2301af7f2cc41a20b7b87a22bec KVM: x86: Explicitly pass an exception struct to check_intercept
c9b8b07cded58c55ad2bf67e68b9bfae96092293 KVM: x86: Dynamically allocate per-vCPU emulation context
06add254c7f3b7f6fdfe04eb028aaabe5b27a734 KVM: x86: Shrink the usercopy region of the emulation context
cfc481810c903a5f74e5c7bf50ca8e28318dbc44 KVM: x86: Calculate the supported xcr0 mask at load time
7f5581f592984901620d34aa86a730092ae65092 KVM: x86: Use supported_xcr0 to detect MPX support
615a4ae1c74c2997f19189412fae0326baaf1bff KVM: x86: Make kvm_mpx_supported() an inline function
160b486f65ff89be7f90ff9297bb4bb0da446d91 KVM: x86: Drop explicit @func param from ->set_supported_cpuid()
b32666b13a72a1fd9f5078d8142bd7325022520f KVM: x86: Introduce cpuid_entry_{change,set,clear}() mutators
e745e37d49771b8a06955f18c7a435830c0a4a5c KVM: x86: Refactor cpuid_mask() to auto-retrieve the register
6c7ea4b56bfe7a11ecbaef9c521a7974fc1171cf KVM: x86: Handle MPX CPUID adjustment in VMX code
5ffec6f910dc8998c9da9320550ffddebe2e7afc KVM: x86: Handle INVPCID CPUID adjustment in VMX code
e574768f841ba600009da06b3027d9413dba868f KVM: x86: Handle UMIP emulation CPUID adjustment in VMX code
d64d83d1e026f9fea9c8f18bf97b9529f7e4189c KVM: x86: Handle PKU CPUID adjustment in VMX code
733deafc00df1dda5130fc14f87a1d3993913243 KVM: x86: Handle RDTSCP CPUID adjustment in VMX code
dbd068040c64162fbbfa278eb63ef64704190612 KVM: x86: Handle Intel PT CPUID adjustment in VMX code
fb7d4377d513145303c1d0a192cb4b33d72be2d9 KVM: x86: handle GBPAGE CPUID adjustment for EPT with generic code
9e6d01c2d9088efb8326997cafa8580295a49435 KVM: x86: Refactor handling of XSAVES CPUID adjustment
66a6950f99950c77e2898e48d668eca1dac10a1e KVM: x86: Introduce kvm_cpu_caps to replace runtime CPUID masking
9b58b9857f221e4f7149a22727ef61d0c141f56b KVM: SVM: Convert feature updates from CPUID to KVM cpu caps
3ec6fd8cf0ba6bb3ded5cdee88319c9af90e14c8 KVM: VMX: Convert feature updates from CPUID to KVM cpu caps
b3d895d5c4154156894fd1df2158d82f94fb5527 KVM: x86: Move XSAVES CPUID adjust to VMX's KVM cpu cap update
8721f5b061eb18c4bb3b77be3ec1c2811ca574ba KVM: x86: Add a helper to check kernel support when setting cpu cap
c10398b6d0ddb9c8234890828ab83341e11f9840 KVM: x86: Use KVM cpu caps to mark CR4.LA57 as not-reserved
90d2f60f41f73b90768554e5a30b1cfedd167731 KVM: x86: Use KVM cpu caps to track UMIP emulation
09f628a0b49cf489faada00254569813a2143894 KVM: x86: Fold CPUID 0x7 masking back into __do_cpuid_func()
bcf600ca8d21e49af21fec5d2cf3927d6f62d048 KVM: x86: Remove the unnecessary loop on CPUID 0x7 sub-leafs
7ff6c0350315248bb58b074c90c4683f0e415669 KVM: x86: Remove stateful CPUID handling
d8577a4c238f8bd3089bfb428fece97f14eaabad KVM: x86: Do host CPUID at load time to mask KVM cpu caps
bd79199990477bf0c316b32bfcbd9862dc0f08ec KVM: x86: Override host CPUID results with kvm_cpu_caps
93c380e7b528882396ca463971012222bad7d82e KVM: x86: Set emulated/transmuted feature bits via kvm_cpu_caps
dd69cc2542f728179d5a0ae1c972813f88ab14aa KVM: x86: Use kvm_cpu_caps to detect Intel PT support
139085101f8500b09c681b1e52c3839df681a0d2 KVM: x86: Use KVM cpu caps to detect MSR_TSC_AUX virt support
a7a200eb4c698b70f60a1b8e4e2c6e1c3fcb982e KVM: VMX: Directly use VMX capabilities helper to detect RDTSCP support
7b874c26a62487acaf2e7e179715991c70db25db KVM: x86: Check for Intel PT MSR virtualization using KVM cpu caps
a1bead2abaa162e5e67ad258a06c9d71dddad00d KVM: VMX: Directly query Intel PT mode when refreshing PMUs
703c335d06934401763863cf24fee61a13de055b KVM: x86/mmu: Configure max page level during hardware setup
91661989d17ccec17bca199e7cb1f463ba4e5b78 KVM: x86: Move VMX's host_efer to common x86 code
a50718cc3f43f12e6e33b098b5e2a9eb19f13158 KVM: nSVM: Expose SVM features to L1 iff nested is enabled
4eb87460c4740030086411c3b7a7e167fb7e57bd KVM: nSVM: Advertise and enable NRIPS for L1 iff nrips is enabled
257038745cae1fdaa3948013a22eba3b1d610174 KVM: x86: Move nSVM CPUID 0x8000000A handling into common x86 code
408e9a318f57ba8be82ba01e98cc271b97392187 KVM: CPUID: add support for supervisor states
15608ed03f10a1414188612b0ee9653e3c78bbd9 KVM: x86: Add helpers to perform CPUID-based guest vendor check
8d8923115f1bc8f10b3309b9245cc3a7f39b5aa7 KVM: x86: Fix CPUID range checks for Hypervisor and Centaur classes
09c7431ed31f3cc71aba2c35a6d11a742db47b2a KVM: x86: Refactor out-of-range logic to contain the madness
f91af5176cce77bb0d3292e46665c30af0792dcd KVM: x86: Refactor kvm_cpuid() param that controls out-of-range logic
689f3bf2162895cf0b847f36584309064887c966 KVM: x86: unify callbacks to load paging root
727a7e27cf88a261c5a0f14f4f9ee4d767352766 KVM: x86: rename set_cr3 callback and related flags to load_mmu_pgd
b518ba9fa691a3066ee935f6f317f827295453f0 KVM: nSVM: implement check_nested_events for interrupts
3ac40c404c60f20dd07920810b1195125f193e1e KVM: Documentation: Update fast page fault for indirect sp
ab56f8e62dafe4c9bec9fc236937c9884bd9966d kvm: svm: Introduce GA Log tracepoint for AVIC
8e205a6b2a06764a4c2bfc9e1a6a8a8e7920faf8 KVM: X86: correct meaningless kvm_apicv_activated() check
1914f624f5e3adc0493c60b25a861d3c9235fc87 selftests: KVM: SVM: Add vmcall test to gitignore
425936246fbe11728ebd787e9199734f3edc2df4 KVM: selftests: Share common API documentation
d9eaf19ecc12668caf280f3d8e24b22ff5ba716b KVM: selftests: Enable printf format warnings for TEST_ASSERT
d0aac3320d1f15ae2113ddf210945c3686951330 KVM: selftests: Use consistent message for test skipping
beca54702dc694970dd9727dde59cf5f56c4dbd8 KVM: selftests: virt_map should take npages, not size
94c4b76b88d40f9062dc32ff2fff551ae1791c1e KVM: selftests: Introduce steal-time test
a46f8a63cde8d4fee05693bc5c566c1374d0baaa selftests: kvm: Introduce the TEST_FAIL macro
352be2c539d01ae050b5fa3cbd90978ff19f1fc6 selftests: kvm: Uses TEST_FAIL in tests/utilities
96b100cd1464ce41d5d6b083b1fe5ceace8eef8a KVM: nVMX: remove side effects from nested_vmx_exit_reflected
e7adda281063becab7631c6ac60f8b19684ba042 KVM: x86: Add requested index to the CPUID tracepoint
2b110b61644a34e97c92ae20788cbcb42d474fa9 KVM: x86: Add blurb to CPUID tracepoint when using max basic leaf values
bfcaa84975fa0c75deca3e997533aaa35ffed12b KVM: selftests: Rework timespec functions and usage
31603d4fc2bb4f0815245d496cb970b27b4f636a KVM: VMX: Always VMCLEAR in-use VMCSes during crash with kexec support
4f6ea0a87608e1b26ed26123ae7c42aaecdd2c6c KVM: VMX: Gracefully handle faults on VMXON
4b547a869db980cd32936bd4ad8f6a33371419ac KVM: selftests: Fix cosmetic copy-paste error in vm_mem_region_move()
d008dfdb0e7012ddff5bd6c0d2abd3b8ec6e77f5 KVM: x86: Move init-only kvm_x86_ops to separate struct
484014faf89eb0f3585d7323e4aef34a3cd92ac6 KVM: VMX: Move hardware_setup() definition below vmx_x86_ops
72b0eaa946076cba3bc315c88199db7704b5538c KVM: VMX: Configure runtime hooks using vmx_x86_ops
69c6f69aa3064ab6cc8426661f125ea75ffe899c KVM: x86: Set kvm_x86_ops only after ->hardware_setup() completes
afaf0b2f9b801c6eb2278b52d49e6a7d7b659cf1 KVM: x86: Copy kvm_x86_ops by value to eliminate layer of indirection
6e4fd06f3ee1b12ca42fc70522f371bf10977745 KVM: x86: Drop __exit from kvm_x86_ops' hardware_unsetup()
e286ac0e38cbe187fbbc72d7e9da503f5ed26cc8 KVM: VMX: Annotate vmx_x86_ops as __initdata
9c14ee21fcf74ac1f31e11180bf0dfd928c912cc KVM: SVM: Annotate svm_x86_ops as __initdata
842f4be95899df22b5843ba1a7c8cf37e831a6e8 KVM: VMX: Add a trampoline to fix VMREAD error handling
855c7e9b9c2c39fb8d108ac70d0eed530f80a2aa KVM: x86: Fix BUILD_BUG() in __cpuid_entry_get_reg() w/ CONFIG_UBSAN=y
514ccc194971d0649e4e7ec8a9b3a6e33561d7bf x86/kvm: fix a missing-prototypes "vmread_error"
883b0a91f41ab705daa04c24e59d708e457a0bed KVM: SVM: Move Nested SVM Implementation to nested.c
ef0f64960d012cbab8f55f305ef36bb6de4e1a9b KVM: SVM: Move AVIC code to separate file
eaf78265a4ab33935d3a0f1407ce4a91aac4d4d5 KVM: SVM: Move SEV code to separate file
199cd1d7b5348de4b58208420687676c658efed3 KVM: SVM: Split svm_vcpu_run inline assembly to separate file
dbef2808af6c594922fe32833b30f55f35e9da6d KVM: VMX: fix crash cleanup when KVM wasn't used
bb02e2cb715a3f3552dbe765ea4a07799e4dff43 x86/cpu: Print "VMX disabled" error message iff KVM is enabled
1d0c32ec3b860a32df593a22bad0d1dbc5546a59 KVM: PPC: Fix kernel crash with PR KVM
9bbf24744e12bb6b9b32e30917b07f9242cc0341 KVM: selftests: Add support for vcpu_args_set to aarch64 and s390x
a243c16d18be130b17cf1064e9115de73bfdff5a KVM: arm64: Add capability to advertise ptrauth for guest
55009c6ed2d24fc0f5521ab2482f145d269389ea KVM: arm/arm64: Factor out hypercall handling from PSCI code
b48c1a45a190898103cec28771efc399fd65a05a KVM: arm64: Implement PV_TIME_FEATURES call
8564d6372a7d8a6d440441b8ed8020f97f744450 KVM: arm64: Support stolen time reporting via shared structure
58772e9a3db72d032eeb12bc011bc5184a3925f4 KVM: arm64: Provide VCPU attributes for stolen time
541625ac47ce9d0835efaee0fcbaa251b0000a37 arm/arm64: Provide a wrapper for SMCCC 1.1 calls
ce4d5ca2b9dd5d85944eb93c1bbf9eb11b7a907d arm/arm64: Make use of the SMCCC 1.1 wrapper
e0685fa228fdaf386f82ac0d64b2d6f3e0ddd588 arm64: Retrieve stolen time as paravirtualized guest
c7892db5dd6afe921ead502aff7440a1e450d947 KVM: arm64: Select TASK_DELAY_ACCT+TASKSTATS rather than SCHEDSTATS
f75e2294a4415621b223150065c8d1e823896da5 arm64: Add ARM64_WORKAROUND_1319367 for all A57 and A72 versions
e85d68faed4e79fd0b481c72de8245d4290369db arm64: Rename WORKAROUND_1165522 to SPECULATIVE_AT_VHE
c2cc62d831863151fd0cb7da7ac9a0c324aab871 arm64: Enable and document ARM errata 1319367 and 1319537
db0d46a58d34c7cd9d5ece98daf4b8afe3d770f8 arm64: Rename WORKAROUND_1319367 to SPECULATIVE_AT_NVHE
275fa0ea2cf7a84450f9c0ec0d9e7ec168ed2e2d arm64: Workaround for Cortex-A55 erratum 1530923
0e20f5e25556c00ee813469d373b00abcf298708 KVM: arm/arm64: Cleanup MMIO handling
b3f15ec3d809ccf2e171ca4e272a220d3c1a3e05 kvm: arm/arm64: Fold VHE entry/exit work into kvm_vcpu_run_vhe()
5c37f1ae1c335800d16b207cb578009c695dcd39 KVM: arm64: Ask the compiler to __always_inline functions used at HYP
d6ce98fe11a052af081612029dc351d20fd8e6f8 docs: networking: devlink-trap: Fix reference to other document
617940123e0140521f3080d2befc2bf55bcda094 net/ipv6: need update peer route when modify metric
a30c7b429f2dd980202c912fcb76442364937b4d net: introduce per-netns netdevice notifiers
1f637703d8b63f1ba411b4c798e998e3f828b6cb net: push code from net notifier reg/unreg into helpers
93642e14bd50e59b11cf6389ce3fc243e932777a net: introduce dev_net notifier register/unregister variants
384d91c267e621e0926062cfb3f20cb72dc16928 vxlan: check return value of gro_cells_init()
6c9081a3915dc0782a8f1424343b794f2cf53d9c tipc: add loopback device tracking
f73b12812a3d1d798b7517547ccdcf864844d2cd tipc: improve throughput between nodes in netns
d408bef4bfa60bac665b6e7239269570039a968b tipc: eliminate checking netns if node established
4cbf8ac2fe5a0846508fe02b95a5de1a90fa73f4 tipc: enable creating a "preliminary" node
fc1b6d6de2208774efd2a20bf0daddb02d18b1e0 tipc: introduce TIPC encryption & authentication
e1f32190cf7ddd55778b460e7d44af3f76529698 tipc: add support for AEAD key setting via netlink
c33fdc3453313137f8740a227525ed518bc68e28 tipc: fix update of the uninitialized variable err
16ad3f4022bb53c7541a0bf0410b32d0231ebef9 tipc: introduce variable window congestion control
31e4ccc99eda8a5a7e6902c98bee6e78ffd3edb9 tipc: fix use-after-free in tipc_disc_rcv()
b7ffa045e7000d5410bf206454e0cb8de0428ed5 tipc: don't send gap blocks in ACK messages
e1b5e598e5a51b453328879682b178b4acc15105 tipc: make legacy address flag readable over netlink
2437fd7baf299c7b8a39fa3e727755e84ee7c4ea tipc: make three functions static
8b1e5b0a99f04bda2d6c85ecfe5e68a356c10914 tipc: Add a missing case of TIPC_DIRECT_MSG type
edadedf1c5b4e4404192a0a4c3c0c05e3b7672ab tipc: fix incorrect increasing of link window
a5facc4cac4dc504397428c936ef1492ce4edd19 netdevsim: change fib accounting and limitations to be per-device
7c550daffe22a97282effa75fe7c1f6b83563ecb net: fib_notifier: make FIB notifier per-netns
55c894f762a1a99fca80ee55d593083d78e7e4fb net: fib_notifier: propagate possible error during fib notifier registration
b7a595577ef3dc9add2b3e6d00869d017306bfbe net: fib_notifier: propagate extack down to the notifier block callback
7f36a77ade6eefc243c64c64b8f8252fa43ea55e netdevsim: add all ports in nsim_dev_create() and del them in destroy()
75ba029f3c07f4755b88ee3a9c441e9ffb468e6a netdevsim: implement proper devlink reload
4f174bbcc96c80720722e25f198580a184803c3a netdevsim: take devlink net instead of init_net
070c63f20f6c739a3c534555f56c7327536bfcc2 net: devlink: allow to change namespaces during reload
bfcccfe78b361f5f6ef48554aed5bcd30c72f67f netdevsim: drop code duplicated by a merge
dcfea72e79b0aa7a057c8f6024169d86a1bbc84b net: introduce skb_list_walk_safe for skb segment walking
5eee7bd7e245914e4e050c413dfe864e31805207 net: skbuff: disambiguate argument and member for skb_list_walk_safe helper
7b60027bbc6738b067bb9ed732a8c56b0ac430b2 netdevsim: create devlink and netdev instances in namespace
155ddfc5e54a68f0e8d20f31f2b4b6b25e1071b5 netdevsim: add couple of debugfs bools to debug devlink reload
f9867b51d268d6fabcc4477d877f04aaad9299ae netdevsim: fix spelling mistake "forbidded" -> "forbid"
8273fd845447820c26b38821c8ac297f40a65260 net: devlink: export devlink net setter
a0c76345e3d3dbc40c39de2e00d15a3b7eef7885 devlink: disallow reload operation during device cleanup
95cddcb5cc202d3f2499596b9af5b77536c5f86a ethtool: add infrastructure for centralized checking of coalescing parameters
9116e5e2b1fff71dce501d971e86a3695acc3dba xsk: replace ndo_xsk_async_xmit with ndo_xsk_wakeup
5c129241e2de79f09cb4e50bbca09e1c14ad787d ixgbe: add support for AF_XDP need_wakeup feature
0843aa8f12edbd60e64e71f854eab2f452010eaa ixgbe: need_wakeup flag might not be set for Tx
10d30e301732636d93d7dcd2e0e6cd34d0454509 libbpf: add flags to umem config
a50b854e073cd3335bbbada8dcff83a857297dd7 mm: introduce page_size()
94ff9ebb49a546b7f009ed840bafa235c96d4c4b libbpf: Fix compatibility for kernels without need_wakeup
a566e35f1e8b4b3be1e96a804d1cca38b578167c libbpf: Don't use kernel-side u32 type in xsk.c
06870682087b58398671e8cdc896cd62314c4399 xsk: Add rcu_read_lock around the XSK wakeup
e7a981050a7fb9a14b652365c00d9c5a025704ce devlink: propagate extack down to health reporter ops
82c93a87bf8bc0cdb5ec2ab99da7d87715ff889f netdevsim: implement couple of testing devlink health reporters
9b88fc54965e84666923999920ca1567f933c491 selftests: add netdevsim devlink health tests
83cf4213bafc4e3c747f0a25ad22cfbf55af7e84 netdevsim: use __GFP_NOWARN to avoid memalloc warning
6ec8b6cd79a4360e375da99d848d63f8d4fb08b3 devlink: Add health recover notifications on devlink flows
d7cb1e3ba12e004e92e9ad2e8d272220db0a541c flow_offload: introduce "disabled" HW stats type and allow it in mlxsw
a393daa8993fd7d6c9c33110d5dac08bc0dc2696 flow_offload: fix allowed types check
972248e9111ee6fe9fb56c24ecfd7434f3d713ac scsi: bsg-lib: handle bidi requests without block layer help
80f2121380caa14895638b24b81800158c0844f2 scsi: fs: remove exofs
19fcae3d4f2dd513d472055fb694d802e9a21b91 scsi: remove the SCSI OSD library
ae3d56d81507c33024ba7c1eae2ef433aa9bc0d5 scsi: remove bidirectional command support
46c7dd56d54133e3fb9414844d90e563627f3feb modpost: always show verbose warning for section mismatch
15bfc2348d549b44bdca266747f71c0d54bc0e5f modpost: check for static EXPORT_SYMBOL* functions
bcb3244ccdc4cebb6ed3d47d973da7b1a03837c0 igc: Add PHY power management control
82faa9b799500f9e002067c6d8cb027ab12acca4 igc: Add support for ETF offloading
e4f91936993ce4d0954688ec3cb80b3471b9eda5 net: sfp: Add more extended compliance codes
df69ba43217d3cf4215c83c0627ce98a26e56e7c ionic: Add basic framework for IONIC Network device driver
fbfb8031533c924c2f3fef73759b4cf75a0e6aa7 ionic: Add hardware init and device commands
04436595c435060a1735759645b1417513124c1f ionic: Add port management commands
1a58e196467f842a40ff3ecfe818ebf7604e04a6 ionic: Add basic lif support
6461b446f2a0f40c038f1d09c69d1e5565a84a43 ionic: Add interrupts and doorbells
1d062b7b6f6408fd43f447f90338cfade4168170 ionic: Add basic adminq support
938962d552296a85551ddb1a9996526b330c4b72 ionic: Add adminq action
77ceb68e29ccd25d923b6af59e74ecaf736cc4b7 ionic: Add notifyq support
beead698b1736dfa4061dd2e3fe3efef6d0c49b4 ionic: Add the basic NDO callbacks for netdev support
c1e329ebec8d0895942e292b64e432b33c93a173 ionic: Add management of rx filters
2a654540be106a728ddbb706c70f7c82c271b886 ionic: Add Rx filter and rx_mode ndo support
8d61aad4e8dc6afea2f7afa951c82f03598af262 ionic: Add async link status check and basic stats
4d03e00a21409f63668349ae4123f5707d9a28cf ionic: Add initial ethtool support
0f3154e6bcb354968cc04f7cd86ce466f7b9a814 ionic: Add Tx and Rx handling
1a371ea1b7b6666f66cac42c655f26ad89348354 ionic: Add netdev-event handling
e470355bd96ad50c634e0e31d27be41f93440f60 ionic: Add driver stats
aa3198819bea60f65f22cd771baf2ff038f59df1 ionic: Add RSS support
8c15440bce31afd5eea8c696f31a774bef4e5208 ionic: Add coalesce and other features
52d565404647ca5924c49d87c46cb2bd66f5562b ionic: Remove unused including <linux/version.h>
b47bea2b5c3bf17270defe8529774dad114bcee5 ionic: Remove unnecessary ternary operator in ionic_debugfs_add_ident
73a63ee9955494e18a6f7d9ba396f5e78e3ce307 ionic: Fix an error code in ionic_lif_alloc()
6de6d18591b5781b7fdfb9d0ade0a4b5afacf882 ionic: select CONFIG_NET_DEVLINK
da0729e8d2ae3f2e725b4fa8c3bf99eeb12debec ionic: simplify returns in devlink info
d229be4b27a8b76d897f73dede9c25e6a6d3a6ad ionic: use wait_on_bit_lock() rather than open code
780eded34cccca642c241dad54d54de70f6c43ac ionic: report users coalesce request
e95f922f4c2f27bd7b7479a8fd6bdc689e2062be ionic: implement ethtool set-fec
e982ae6aa4e1505d7567a54ef3f259a9647dfd35 ionic: add lif_quiesce to wait for queue activity to stop
4b5149365faa8fddf7dc58e47cfed51b19db051e ionic: fix stats memory dereference
011c7289de619d76f82b0d9e9fec3f59d2fe57f7 dynamic_debug: provide dynamic_hex_dump stub
5c28f213ef7937832e0666605edff09ea214ac65 ionic: fix up struct name comments
ff7ebed94551bcb37bc344bba294ba58ead55db0 ionic: reverse an interrupt coalesce calculation
97ca486592c0e940a85a06b3ca37dcb6962b2a04 ionic: add heartbeat check
089406bc5ad639e4fcc9419f70f4d3d91d7370cb ionic: add a watchdog timer to monitor heartbeat
08f2e4b2b2008ce461dd6958caa616a2e3a30ac8 ionic: implement support for rx sgl
63ad1cd68071d56d9ed99ed35f622513005f71dc ionic: update driver version
199f3ac319554f1ffddcc8e832448843f073d4c7 ionic: Remove set but not used variable 'sg_desc'
ffac2027e18f006f42630f2e01a8a9bd8dc664b5 ionic: keep users rss hash across lif reset
3d462ce2a11784e278d4f425bf5c4cadeab2af3a ionic: ionic_if bits for sr-iov support
fbb39807e9ae0f60e2f6a0a628aadab73554fbbe ionic: support sr-iov operations
3daca28f15f5e70ae54859abd66dcdb6be31ba91 ionic: drop use of subdevice tags
24cfa8c76278d48fe521a363b74e36861b4462d6 ionic: add Rx dropped packet counter
c37d6e3f25cf95cdefaa51eaad699382f34cdd0c ionic: restrict received packets to mtu size
6be1a5ce1b39b43294a8eda9ba5254792decb15e ionic: clear compiler warning on hb use before set
b5ce31b5e11b768b7d685b2bab7db09ad5549493 ionic: fix rxq comp packet type mask
fa6b84295225b96bed9321301f218eda6ca73edc ionic: use new helper tcp_v6_gso_csum_prep
68b759a75d6257759d1e37ff13f2d0659baf1112 ionic: fix fw_status read
987b191c16f9b7568a756b0745ee4a93611879ae ionic: let core reject the unsupported coalescing parameters
e396ce5f4229388db5143fec0ec36af504bff12e ionic: fix vf op lock usage
30a1e6d0f8e26069b45a16d92dc739764cd857bc ionic: keep ionic dev on lif init fail
5dca69c425bcd9b6a9295156e2ba716e42a78557 ionic: remove pragma packed
b7f55b81f2ac40e52c5a56e22c80488eac531c91 ionic: improve irq numa locality
c6d3d73a405555be8d64b3174a4b7b0f6b0b5a51 ionic: clean up bitflag usage
75fcb75b93aa23ca5b7c74e9b49f8a9df32233c2 ionic: support ethtool rxhash disable
c220e52396772eac5b26de4540c87be8b632e20a ionic: print pci bus lane info
b3f064e9746dbc569fef58975ae435b89737ad59 ionic: add support for device id 0x1004
1fcbebf115d9ce077c2ba5ecfb521cc1eedcb467 ionic: drop ethtool driver version
0290bd291cc0e0488e35e66bf39efcd7d9d9122b netdev: pass the stuck queue to the timeout handler
38e0f746c456b2f7d64b37aef3b6bd9ad73508c0 net: ionic: Use scnprintf() for avoiding potential buffer overflow
ecd2d8b0fb18d9b8e31ca577258e0282cb63fc91 ionic: stop devlink warn on mgmt device
ad6fd4d3114afc0fe9211f8dd3e58a72acb0e867 ionic: deinit rss only if selected
ba8fb6c844553950b6e646a4e2f711a7b2ec20ad ionic: remove adminq napi instance
840eef598653d7e076b5c138cace687b18538605 ionic: print data for unknown xcvr type
b2133d8d1a7ce697e5587338c9b037d6255b62a0 ionic: add decode for IONIC_RC_ENOSUPP
06e9bfc1e57daeead541c9f02968412cd284b189 ionic: make spdxcheck.py happy
4ee7bda4ecc6bf57a391b9bb46249bf119558f32 ionic: add timeout error checking for queue disable
2530ba5af6040b24ad94818a188df1083a9aac0f ionic: leave dev cmd request contents alone on FW timeout
0e1825f48ca7d38b7957b231148c7bd8c55fefed ionic: only save good lif dentry
53faea3d9a77cb429a2b167a1cb22aab400b3780 ionic: ignore eexist on rx filter add
b9c17d39d5d19b321414a1737c754a819878424a ionic: clean irq affinity on queue deinit
a4674f34711b96b65bdc4d54eca88d2fd123bbc6 ionic: check for NULL structs on teardown
aa47b540b79cb35d6e10baf8b401c316e84199c0 ionic: decouple link message from netdev state
987c0871e8ae8991f7f0f08489d883fa19e13f82 ionic: check for linkup in watchdog
2a8c2c1a0264ebf80787f53d7aa8c661b336a07f ionic: move debugfs add/delete to match alloc/free
0b0641009b8918c8d5f6e7ed300d569c9d811de5 ionic: move irq request to qcq alloc
f9c00e2cf258d215a1ed2a7b2ae5b91ac2f29582 ionic: clean tx queue of unfinished requests
d5eddde5ec526ccdd567c5842063c9aa89ab931e ionic: check for queues before deleting
49d3b493673a000b5e9fd8bf1b286e847f104fa9 ionic: disable the queues on link down
c672412f6172d66e34f2c6583cd65d2383a75b4e ionic: remove lifs on fw reset
7e4d47596b686bb2714d05f8774ada884ec8983d ionic: replay filters after fw upgrade
216902ae770e21e739cd3b530b0b3ab3c28641d3 ionic: set station addr only if needed
555cd19d0c6a23b3faef949bccca4822cccc2eb7 ionic: add dynamic_debug header
2c0df9f9eddbc87fa2ef8da86264995404d816b9 ionic: fix unused assignment
0ea7e88d3f3d38bc79874cd1054915233ed85f52 fm10k: use a local variable for the frag pointer
d0cb50185ae942b03c4327be322055d622dc79f6 do_last(): fetch directory ->i_mode and ->i_uid before it's too late
6404674acd596de41fd3ad5f267b4525494a891a vfs: fix do_last() regression
feee96440c9c5fdf47f8c8079c104fc8082924a0 swiotlb: remove swiotlb_dma_supported
68005b67d15a1ee5b5ddff965175728e65fa73e7 powerpc/dma: use the generic direct mapping bypass
0617fc0ca412b535c0ab0e5e7b03180067f0f7fd powerpc/dma: remove set_dma_offset
4a605e2d1a69f5aea06da10d81e22802a90812a3 powerpc/dma: trim the fat from <asm/dma-mapping.h>
b4fc36e60f25cf22bf8b7b015a701015740c3743 powerpc/dma: Fix invalid DMA mmap behavior
b4d37a7b6934c0c16930c73f43c08e9a6af22f1a powerpc/powernv: Remove unused pnv_npu_try_dma_set_bypass() function
79cb6879135b7441f0955ca3f86be8c8d21c7199 powerpc/powernv: Fix build with IOMMU_API=n
1a047cc7e53cb10e4706c09f6e92b2fa911a2bf2 powerpc/pseries/dma: Enable SWIOTLB
7d10001e20e46ad6ad95622164686bc2cbfc9802 ptp: add VMware virtual PTP clock driver
7165ef890a4c44cf16db66b82fd78448f4bde6ba ath10k: Fix HOST capability QMI incompatibility
80ce8ca7a6473730a6847046651aab81cdb96898 ath: fix various spelling mistakes
4ee2f342669991b733cceec53300407da555924d rtw88: use a for loop in rtw_power_mode_change(), not goto
52d4261862ec140cda09ec9cf4d6dc388fd83f59 wireless: Remove call to memset after dma_alloc_coherent
65b9425ce9aa107f758ad0a491af5ef635567315 iwlwifi: rx: use new api to get band from rx mpdu
19ff9b2c6e3cdf1363ef0ec58e2089d750594d60 iwlwifi: scan: adapt the code to use api ver 11
687db6ff5b7075326a8a1fcd8b7c4037208663fc iwlwifi: scan: make new scan req versioning flow
5167ff45a503ee49ae314c0cff410efa1eb9a1b8 iwlwifi: scan: support scan req cmd ver 12
559897363ca84cf1e445aa237b56b1e531047c1b iwlwifi: mvm: scan: enable adaptive dwell in p2p
17ffa21af93ad1558c12108701f6216ff1cc68c2 iwlwifi: scan: support scan req FW API ver 13
5421cf84af69a94ebb179fec252f3772c4681cca drivers: net: Fix Kconfig indentation, continued
5b5b9d35e05a01afacda745a0877105d33f7a768 iwlwifi: scan: remove support for fw scan api v11
b3bd6416fc77b5056d2dda7a4d5814ec81af7ecd iwlwifi: assume the driver_data is a trans_cfg, but allow full cfg
2a612a60ab440e6480c77b73403dfee061f74e4b iwlwifi: implement a new device configuration table
0b295a1eb81f37dc7d4f4f2ee9ef375fb36ab5d8 iwlwifi: add device name to device_info
57a3b60ddbfa87e8707c453c69915a3c5d2c9e50 ath10k: Add optional qdss clk
6b6c150b8464e91af26be805f88d5e58c6d626ae rtw88: use shorter delay time to poll PS state
cf52c8a776d1b31493a987a0fb3c4dbaa0f7f2cc iwlwifi: pcie: add 0x2526/0x401* devices back to cfg detection
06293ae4fa0a1b62bf3bb8add8f9bbe8815b0aba net/mlx5e: Change naming convention for reporter's functions
c50de4af1d635fab3a5c8bd358f55623c01f7ee5 net/mlx5e: Generalize tx reporter's functionality
2d708887a4b1cb142c3179b3b1030dab047467b6 net/mlx5e: Extend tx reporter diagnostics output
2bf09e60ae5ef68c2282f97baf37b7dbd9cc1d48 net/mlx5e: Add cq info to tx reporter diagnose
11af6a6d09e9a90e05f4a21564232b30c6c25d69 net/mlx5e: Add helper functions for reporter's basics
9032e7192eac8e657b52cf1c89fe730308b72c2a net/mlx5e: Add support to rx reporter diagnose
be5323c8379f488f1de53206edeaf80fc20d7686 net/mlx5e: Report and recover from CQE error on ICOSQ
32c57fb26863b48982e33aa95f3b5b23f24b1feb net/mlx5e: Report and recover from rx timeout
0a35ab3e138296cfe192628520e4d5f3ff23e730 net/mlx5e: RX, Handle CQE with error at the earliest stage
8276ea1353a4968a212f04ddf16659223e5408d9 net/mlx5e: Report and recover from CQE with error on RQ
f66ad830b11406cdff84e7d8656a0a9e34b0b606 net/mlx5: Add per-namespace flow table default miss action support
e6806e9a63a759e445383915bb9d2ec85a90aebf net/mlx5: Create bypass and loopback flow steering namespaces for RDMA RX
7a978759b4e0e7a2ad3f10cbf9077915a85ec956 net/mlx5e: Add tc flower tracepoints
c786fe596bede275f887f212eebee74490043b84 net/mlx5e: Add trace point for neigh used value update
5970882a2510e8bffaef518a82ea207798187a93 net/mlx5e: Add trace point for neigh update
cef35af34d6dc3792333075115c7deb7062b6e18 net/mlx5e: Add mlx5e HV VHCA stats agent
394cf13c24978ae2744d3bc22d6fd67b35247ef8 net/mlx5e: Fix static checker warning of potential pointer math issue
02bc5eb990597796d8e8383d1b98e540af963bf1 drivers: net: Fix Kconfig indentation
9dc775e7f5508f848661bbfb2e15683affb85f24 RDMA/odp: Lift umem_mutex out of ib_umem_odp_unmap_dma_pages()
aa603815c7f8a8f368d6d8ea6ebf601429883439 RDMA/mlx5: Put live in the correct place for ODP MRs
5dfb6335cbecbd59040275c8396c2d0af0bbd549 net/mlx5e: Replace kfree with kvfree when free vhca stats
fb985e278a30224183fdf3d56e2f69cfdef88d4e RDMA/mlx5: Use SRCU properly in ODP prefetch
806b101b2bfa800a9c779336b750bee39c7fb3b4 RDMA/mlx5: Use a dedicated mkey xarray for ODP
3d5f3c54e7bc82a279c80c18087462c0ce00ba44 RDMA/mlx5: Rework implicit_mr_get_data
c2edcd69351f681594a30b17b7fbc5259a038fb0 RDMA/mlx5: Lift implicit_mr_alloc() into the two routines that call it
9162420dde49c9a8f4819f28bf2d5c675fb12552 RDMA/mlx5: Set the HW IOVA of the child MRs to their place in the tree
54375e7382952daded7002d1618eadaae859cecb RDMA/mlx5: Split implicit handling from pagefault_mr
423f52d65005e8f5067d94bd4f41d8a7d8388135 RDMA/mlx5: Use an xarray for the children of an implicit ODP
3389baa831b6a09e3c96e2a6283a1b952be2f0cd RDMA/mlx5: Reduce locking in implicit_mr_get_data()
b70d785d237c0d3e4235c511f38f8ce64620f945 RDMA/mlx5: Avoid double lookups on the pagefault path
5256edcb98a14b11409a2d323f56a70a8b366363 RDMA/mlx5: Rework implicit ODP destroy
d561987f34f263dd176ccd8fb782cb153d72f441 RDMA/mlx5: Do not store implicit children in the odp_mkeys xarray
09689703d29a3b75c510c198c3aca85d7d8b50c7 RDMA/mlx5: Do not race with mlx5_ib_invalidate_range during create and destroy
c199ce4f9dd896c716aece33e6750be34aea1151 net: Fix misspellings of "configure" and "configuration"
ea2300e02a71207b11111a44cbe7185a94f78a72 net/mlx5: Introduce and use mlx5_esw_is_manager_vport()
853b53520c9d11db7652e3603665b0ad475741a5 net/mlx5: Move legacy drop counter and rule under legacy structure
925a6acc77a70f8b5bfd0df75e36557aa400b0a0 net/mlx5: E-switch, Prepare code to handle vport enable error
f5d0c01d65adba2b898836894d200e85c8a8def3 net/mlx5: E-switch, Legacy introduce and use per vport acl tables APIs
b7752f8341c4fecc4720fbd58f868e114a57fdea net/mlx5: Move ACL drop counters life cycle close to ACL lifecycle
89a0f1fb16adca959ea1485a856fbcfcd1d24208 net/mlx5: E-switch, Offloads introduce and use per vport acl tables APIs
748da30b376e034ae54b53e7e38e15cfa2bf4dda net/mlx5: E-switch, Offloads shift ACL programming during enable/disable vport
a962d7a61e2404cda6a89bfa5cc193c62223bb5e net/mlx5: Restrict metadata disablement to offloads mode
10652f39943ec19d32a6fa44a8523b0d40abcbcf net/mlx5: Refactor ingress acl configuration
769619ee39dfa8297a1fe2bc2865eb1e73a9f824 net/mlx5: WQ, Move short getters into header file
84d2dbb0aaaf1098aa2c2ca07003bf3f973732ac net/mlx5: LAG, Use port enumerators
8b3f2eb038d3098b37715afced1e62bbc72da90f net/mlx5: fix kvfree of uninitialized pointer spec
9ea7f01f470a25bb795224cc0ecc57c91a1519c6 net/mlx5: fix spelling mistake "metdata" -> "metadata"
208d70f562e563226df178ff8f969364972e9e99 IB/mlx5: Support flow counters offset for bulk counters
2cf2954bd7ffd8250ae257b45b96915003c26d7d net/mlx5: Rename FDB_* tc related defines to FDB_TC_* defines
4db7b98e943225dc2a7435811767e44f63640462 net/mlx5: Define fdb tc levels per prio
34b13cb3eaa5ad205f4497da6420262da4940b9e net/mlx5: Accumulate levels for chains prio namespaces
439e843f1f43640fd52530433d803db8585cd028 net/mlx5: Refactor creating fast path prio chains
975b992fdd4b38028d7c1dcf38286d6e7991c1b2 net/mlx5: Add new chain for netfilter flow table offload
5f9fc3325ef95398c363b9b7813a7e99d4d85d7d net/mlx5e: Fix build error without IPV6
b7826076d7ae5928fdd2972a6c3e180148fb74c1 net/mlx5e: E-switch, Fix Ingress ACL groups in switchdev mode for prio tag
dc2316eba73ff03da6dde082a372c6b5209304c5 IB/mlx5: Fix device memory flows
554fe75c1b3f679b1eebf193a4e56492837d3f5a net/mlx5e: Avoid duplicating rule destinations
99cda45426c9a2c59bb2f7cb886a405440282455 net/mlx5e: Always print health reporter message to dmesg
53c326307156249253be36b33cd6c32f4a24f9b2 NFS: Allow multiple connections to a NFSv2 or NFSv3 server
5a0c257f8e0f4c4b3c33dff545317c21a921303e NFS: send state management on a single connection.
a101b043c44dfcb63bed7f29a675e9fa0259005e SUNRPC: Fix transport accounting when caller specifies an rpc_xprt
9912ade355902adb9dacbec640fac23c4e73019d nvme-tcp: Set SO_PRIORITY for all host sockets
f86e5bf817a57c7e6538dafee2fc65a525bb9935 nvme-tcp: don't poll a non-live queue
43cc66892e81bb05283159e489a19cec177e6f9d nvmet-tcp: set SO_PRIORITY for accepted sockets
cc9defcbb8fae52810f7795b039223edae51ef95 net/mlx5: Handle "enable_roce" devlink param
71c6eaebf06aa8353b0dcd57786b801b96fe2c08 net/mlx5e: Set netdev name space on creation
cbe4b8f0a5766a40563876932cba6c9bf28eb98a IB/mlx5: Unify ODP MR code paths to allow extra flexibility
7be76bef320b1f1d1b8dc87d3d5a03f3a2421a43 IB/mlx5: Introduce VAR object and its alloc/destroy methods
3f59b6c3e600f9665dcf5b8e566cd7b778f03045 IB/mlx5: Add mmap support for VAR
8ffc32485158528f870b62707077ab494ba31deb RDMA/mlx5: Fix handling of IOVA != user_va in ODP paths
5281a0c909194c477656e89401ac11dd7b29ad2d net/mlx5: fs_core: Introduce unmanaged flow tables
8889f6fa35884d09f24734e10fea0c9ddcbc6429 RDMA/core: Make the entire API tree static
b57e66ad42d051ed31319c28ed1b62b191299a29 net/mlx5e: TX, Error completion is for last WQE in batch
9b6d3bbc1335404b331f4f11dc896066bdf1c752 RDMA/mlx5: Prevent overflow in mmap offset calculations
5ee090ed0da649b1febae2b7c285ac77d1e55a0c net/mlx5e: Reset RQ doorbell counter before moving RQ state from RST to RDY
1ad6c43c6a7b8627240c6cc19c69e31fedc596a7 net/mlx5e: Fix crash in recovery flow without devlink reporter
de5ed007a03d71daaa505f5daa4d3666530c7090 IB/mlx5: Fix implicit ODP race
1de0306c3a05d305e45b1f1fabe2f4e94222eb6b net/mlx5e: Enhance ICOSQ WQE info fields
39369fd536d485a99a59d8e357c0d4d3ce19a3b8 net/mlx5e: Fix missing reset of SW metadata in Striding RQ reset
e239c6d686e1c37fb2ab143162dfb57471a8643f net/mlx5e: Fix ICOSQ recovery flow with Striding RQ
187a9830c921d92c4a9a8e2921ecc4b35a97532c net/mlx5e: Do not recover from a non-fatal syndrome
4229e0ea2c9936b3093990353b211bcd7802a2d5 net/mlx5e: Define one flow for TXQ selection when TCs are configured
3909a12e79135a66a797041ab337a8c7cb387bdf net/mlx5e: Fix configuration of XPS cpumasks and netdev queues in corner cases
b9ab5d0ecf426a1bf16d706e7c284e00998d00be net/mlx5e: Add context to the preactivate hook
6e0504c69811ae9df7e7e1284950befbe3e6f496 net/mlx5e: Change inline mode correctly when changing trust state
14c844cbf3503076de6e2e48d575216f1600b19f net/mlx5: E-Switch, Hold mutex when querying drop counter in legacy mode
319a1d19471ec49b8a91a7f6a3fe2c4535e5c279 flow_offload: check for basic action hw stats type
70f478ca085deec4d6c1f187f773f5827ddce7e8 net/mlx5e: Fix nest_level for vlan pop action
aa83da7f47b26c9587bade6c4bc4736ffa308f0a gfs2: More gfs2_find_jhead fixes
52aeda7accb6d2e511a1b89142cbbf6fd2c12565 s390/topology: remove offline CPUs from CPU topology masks
4b094b7851bf4bf551ad456195d3f26e1c03bd74 mm/page_alloc.c: initialize memmap of unavailable memory directly
ac9155842829a811c12d3e1868a133fdb8300df0 gfs2: fix withdraw sequence deadlock
a8b7528b69d4dc7e94d0338851ff8c929231fc4b gfs2: Fix error exit in do_xmote
53af80ce0eaeb0fc4ce4b565c30e3a16e8e05de0 gfs2: Fix BUG during unmount after file system withdraw
d22f69a08dcb0f469170cda1976d5938cb0e5dcf gfs2: Fix use-after-free in gfs2_logd after withdraw
cf9af0d5786c008971148f4e06567a98f6a7f9d0 gpio: Propagate errors from gpiod_set_array_value_complex()
21abf103818a4735e80fb0ab03934bed8ae9a028 gpio: Pass a flag to gpiochip_request_own_desc()
4489f161b739f01ab60a58784f6ef7de9d7a1352 docs: driver-model: convert docs to ReST and rename to *.rst
e3e4767bd550b3f19278e42bcce143e0d2316ba2 mmc: core: don\'t override the CD GPIO level when "cd-inverted" is set
2d6c06f5a4094ab4ea15b63af72d2dab74e9415a gpiolib: Introduce GPIO_LOOKUP_FLAGS_DEFAULT
5923ea6c2ce626f0aa8a547d5b7e5fce705dd3dc gpio: pass lookup and descriptor flags to request_own
025bf37725f1929542361eef2245df30badf242e gpio: Fix return value mismatch of function gpiod_get_from_of_node()
ffe0bbabb0cffceceae07484fde1ec2a63b1537c gpio: don't WARN() on NULL descs if gpiolib is disabled
f626d6dfb709852595e6fb24710819f9d21bc5ae gpio: of: Break out OF-only code
ec6516bfbaf72e7c81811162b6de96322e32a027 pinctrl: remove unneeded #ifdef around declarations
77cb907abe6c4b399ad77f9b6c1d77d44a435de3 gpiolib: acpi: Split ACPI stuff to gpiolib-acpi.h
49281a222ac42724b94f6c874f43a284ec58d37e gpio: of: Fix hard-assigned valid_mask for OF case
fdd61a013a24f2699aec1a446f0168682b6f9ec4 gpio: Add support for hierarchical IRQ domains
f52a0c7b5eb907a12bc08a33cc998ed02dad3507 gpio: stubs in headers should be inline
4c0efbfb2669aa99e43e5deee30f39afd69cad65 pinctrl: msm: Add ability for drivers to supply a reserved GPIO list
c9fc5aff217267a9ef3a76450760534488870c69 gpio: Pass mask and size with the init_valid_mask()
eb1e8bd6e3900e3a3b9776cd1b09ecfc05573619 gpio: Use callback presence to determine need of valid_mask
c7663fa2a6631e5dddc1b7b2ba2e905ddffaff90 gpio: Move gpiochip_lock/unlock_as_irq to gpio/driver.h
d377f56f34f5bc549c3aabfe27320f3c31235c05 gpio: gpiolib: Normalize return code variable name
4f78d91c722345de94a3c72da49b9d0d49cb76b8 gpiolib: acpi: make acpi_can_fallback_to_crs() static
c83d3c77332e264ec77ceced614fe9630c7bfaad gpio: of: Make of_get_named_gpiod_flags() private
6d6624554da4a623fd047d15790157a0572ab091 gpio: of: Switch to EXPORT_SYMBOL_GPL()
e735244e2cf068f98b6384681a38993e0517a838 gpiolib: don't clear FLAG_IS_OUT when emulating open-drain/open-source
be7ae45cfea97e787234e00e1a9eb341acacd84e gpio: fix getting nonexclusive gpiods from DT
14e8c535ff684876d1be9dae475fe666b97c04a9 gpio: fix kernel-doc for of_gpio_need_valid_mask()
504369cd6d2ce34c1225063071ac7e0a5a4d5e30 gpiolib: Switch order of valid mask and hw init
2148ad7790ea4f1f0081e6404fbb776bdbc793bb gpiolib: add support for disabling line bias
2821ae5f3033fb4140855ffd728c28fb42ba2bb9 gpiolib: add support for biasing output lines
b043ed7ef0b358d7f32dc57c218f925fd2802aba gpiolib: move validation of line handle flags into helper function
e588bb1eae31be73fbec2b731be986a7c09635a4 gpio: add new SET_CONFIG ioctl() to gpio chardev
808b9931d5a06760315c0dd02519da78cb944d8e gpio: of: Fix bogus reference to gpiod_get_count()
71b8f600b034c7f5780f6fb311dabfe331c64feb gpio: Handle counting of Freescale chipselects
a1f4c96b799b80118b50bd47320deb9013b7ff40 gpiolib: of: Make of_gpio_spi_cs_get_count static
ddd8891e01ecd87c81c04f6eb169be193868b884 gpiolib: Add GPIOCHIP_NAME definition
4fc5bfeb4b7d8306be6ed828df2cb5bdd14e3ed1 gpiolib: Make use of assign_bit() API
9073d10b098973519044f5fcdc25586810b435da mmc: core: Rework wp-gpio handling
0f7c815d83a20dbae8b736331eb1ffd0bc0497d7 mmc: core: Rework cd-gpio handling
06863620edfeadbe9e0ea5eb01dd94ce07f37549 gpiolib: convert the type of hwnum to unsigned int in gpiochip_get_desc()
242587616710576808dc8d7cdf18cfe0d7bf9831 gpiolib: Add support for the irqdomain which doesn't use irq_fwspec as arg
880b7cf22e8ca08abd969b0f1c65a79121e025c5 gpiolib: Add the support for the msi parent domain
c34f6dc8c9e6bbe9fba1d53acd6d9a3889599da3 gpiolib: Set lockdep class for hierarchical irq domains
9c6722d85e92233082da2b3623685bba54d6093e gpio: Fix the no return statement warning
d18fddff061d2796525e6d4a958cb3d30aed8efd gpiolib: Remove duplicated function gpio_do_set_config()
366950eeb6ee7ba6693129899452e0ba890cbe4d gpiolib: Lower verbosity when allocating hierarchy irq
48659227e0a1d7897a4942c7b2cf925b581b6bf7 pinctrl: iproc: allow for error from platform_get_irq()
c7e66e48c05ac2de729999148daa56b563c30b2f gpio: xlp: Pass irqchip when adding gpiochip
72780ce5f1a4189f3c8dcfb1c596c65146452668 gpio: Drop the chained IRQ handler assign function
d99f88761ba0d135677afe546ffdd26c58e5644d Revert "gpiolib: Remove duplicated function gpio_do_set_config()"
c44e4ccadaca5884ac82b6dfffbd693bec3b583e powerpc/eeh: Refactor around eeh_probe_devices()
2297ab6144c2e85c418d0fd47b2f24e294b55dca gfs2: Fix problems regarding gfs2_qa_get and _put
f9615fe3113f1067093f7f68d46d281b4c9a5978 gfs2: Change BUG_ON to an assert_withdraw in gfs2_quota_change
7de3f1423ff9431f3bd5023bb78d1e062314e7f0 KVM: s390: Add new reset vcpu API
a93236fcbe1d0248461b29c0f87cb0b510c94e6f KVM: s390: rstify new ioctls in api.rst
ecdc5d842bb3c166c3d549e52ba91a3955b257f2 s390/protvirt: introduce host side setup
29d37e5b82f3e96dd648167657d5a0e0111ce877 s390/protvirt: add ultravisor initialization
214d9bbcd3a67230b932f6cea83c078ab34d9e70 s390/mm: provide memory management functions for protected KVM guests
a0f60f8431999bf57cf53c3b27c47ef156b4fa17 s390/protvirt: Add sysfs firmware interface for Ultravisor information
f65470661f3648fe6d3d13475d01a744bb14f8b4 KVM: s390/interrupt: do not pin adapter interrupt pages
6933316fe011d5875b360ea8b7404a6612846740 KVM: s390: add new variants of UV CALL
29b40f105ec8d555984c1f72dc9133b122e51903 KVM: s390: protvirt: Add initial vm and cpu lifecycle handling
fa0c5eabbdd33012b369cf75d6a39389cc9ae707 KVM: s390: protvirt: Secure memory is not mergeable
1274800792dced8e5b6d54c71ec049c4d1e34189 KVM: s390/mm: Make pages accessible before destroying the guest
0890ddea1a90e57114b5704cd560192c743f3d2e KVM: s390: protvirt: Add SCLP interrupt handling
19e1227768863a1469797c13ef8fea1af7beac2c KVM: S390: protvirt: Introduce instruction data area bounce buffer
d274995ec273b82dbbccc5521ab2132217f64952 KVM: s390: protvirt: handle secure guest prefix pages
5322781008a9dce894146ef71a09f1770062389a KVM: s390/mm: handle guest unpin events
68cf7b1f137e61cea71925e48bc0c6d7bcfc637c KVM: s390: protvirt: disallow one_reg
0f3035047140b3dc18fc5a028ed5f273f24b5539 KVM: s390: protvirt: Do only reset registers that are accessible
e0d2773d487c2a41c99d9e256d51cc0a859aa9ab KVM: s390: protvirt: UV calls in support of diag308 0, 1
fe28c7868f68b82e4517efb1dc3c22e2297df340 KVM: s390: protvirt: Report CPU state to Ultravisor
7c36a3fcf444ced8efc3da106cc7215227d60fde KVM: s390: protvirt: Support cmd 5 operation state
8a8378fa61571eb308428780dee063c4580edb2a KVM: s390: protvirt: Add UV cpu reset calls
a421027987ed794d0e54cc7820e685ad276a502d DOCUMENTATION: Protected virtual machine introduction and IPL
13da9ae1cdbf1ec4ea36b7612e606681c27cca13 KVM: s390: protvirt: introduce and enable KVM_CAP_S390_PROTECTED
04ed89dc4aeba57ab99df16edbd9d06e43d0a2c4 KVM: s390: protvirt: Add KVM api documentation
e93fc7b4544a5475cfdbc22f87e89f9829bf801c KVM: s390: Also reset registers in sync regs for initial cpu reset
7a2653612bb6f18fb236c5b0c4d28f7b459bf7c2 s390/gmap: return proper error code on ksm unsharing
673deb0beba5d39c2e0bc6536e00b03b6ef59cc0 s390/protvirt: fix compilation issue
331b4de9a7e780f9648ced959c08f4d593aa2e7b KVM: selftests: s390x: Provide additional num-guest-pages adjustment
513c98d08682957cc9eba20e7e4bb349970711f3 workqueue: unconfine alloc/apply/free_workqueue_attrs()
3c2214b6027ff37945799de717c417212e1a8c54 padata: add separate cpuhp node for CPUHP_PADATA_DEAD
e4a884cc28fa3f5d8b81de46998ffe29b4ad169e powerpc: Move idle_loop_prolog()/epilog() functions to header file
c4019198cfa81224d32846915cd401e981f81b81 powerpc/idle: Store PURR snapshot in a per-cpu global variable
dc8afce5f45b099e3ea52a16b2f90e92f90f3af0 powerpc/pseries: Account for SPURR ticks on idle CPUs
6909f179ca7a73f243dca7c829facca1cc1d4ff5 powerpc/sysfs: Show idle_purr and idle_spurr for every CPU
bde752c3d6dbe9f6ca346560198e66bc3d7d7238 Documentation: Document sysfs interfaces purr, spurr, idle_purr, idle_spurr
405b45376de90b3027aaf8c4de035c6bb721fa7e perf/x86: Implement immediate enforcement of /sys/devices/cpu/rdpmc value of 0
c0e53476ab5087353547cbcd37f001d98941326c perf evlist: Adopt __set_tracepoint_handlers method from perf_session
206d635aa594a5246cd181b3be39d1e3b2126f68 perf trace: Make evlist__set_evsel_handler() affect just entries without a handler
8bd436b006d4493964c310606f2eb8e56680126c perf trace augmented_syscalls: Do not show syscalls when none was asked for
f11b2803bb88655d90b88c787710b53100913bff perf trace: Allow choosing how to augment the tracepoint arguments
646b3e2cfbf2d9207b4dbfaade7a28351aa7edeb perf trace beauty: Add the glue for the autogenerated MSR arrays
05cea4492c9dd28439cc73de1047ab3b26033736 perf evlist: Factor out asprintf routine to build a tracepoint pid filter
53c92f73389d049d72b2e1d1cbc81c007241d422 perf evlist: Introduce append_tp_filter() method
1827ab5ba8e1d0354cc36b3692444306ced01471 perf evlist: Introduce append_tp_filter_pid() and append_tp_filter_pids()
728db198868c7b46db5e65717d4518aeb6523ccc perf beauty: Introduce strtoul() for x86 MSRs
42466b9f29b415c254dc4c2f4618e2a96951a406 perf tools: Avoid 'sample_reg_masks' being const + weak
353120b48d4f61288e4745b0c8a191784b11c0f4 libperf: Add perf_mmap__init() function
e440979faf6ac8048e1792af383df6af78dd1cb0 libperf: Add 'struct perf_mmap_param'
bf59b3053e63783520c2810fc3f676553bc7eedd libperf: Adopt perf_mmap__mmap_len() function from tools/perf
32c261c070c222858148c2171698d2954242ddd9 libperf: Adopt perf_mmap__mmap() function from tools/perf
e75710f063e29ae7715c57b45eb27c2d504b32ca libperf: Adopt perf_mmap__get() function from tools/perf
59d7ea620b58fa7d107834a81528e3098f1c27b0 libperf: Adopt perf_mmap__unmap() function from tools/perf
80e53d1148231d7d4fdc4cd89e5393616b33bf82 libperf: Adopt perf_mmap__put() function from tools/perf
1d40ae4e1784bfa1646fd153ca022db21511284f perf tools: Use perf_mmap way to detect aux mmap
7728fa0cfaeb7d25b12c8865c733359cc8e5fb13 libperf: Adopt perf_mmap__consume() function from tools/perf
7c4d41824f9afc659ba425a41018546531cffd72 libperf: Adopt perf_mmap__read_init() from tools/perf
32fdc2ca7e2ae8ae5d0ff660ca7783acd8ee6396 libperf: Adopt perf_mmap__read_done() from tools/perf
151ed5d70da87720022e4171227733a008b3c719 libperf: Adopt perf_mmap__read_event() from tools/perf
d1a177595b3a824c72dacb0f9d1a4e5906eaef0e libperf: Adopt perf_evlist__mmap()/munmap() from tools/perf
0b5ea10d4c312f5b17af9d09187efb9418517bec libperf: Introduce perf_evlist__mmap_ops()
1fcbb75cc574072ab457dbbaa74fc7064b691e86 libperf: Introduce perf_evlist_mmap_ops::idx callback
3a8bb58121987a8405d6f96cd8815025e564605d libperf: Add perf_evlist_mmap_ops::get callback
b5911e7ac28cb34f21b7380915ce98518078f114 libperf: Introduce perf_evlist_mmap_ops::mmap callback
9abd2ab2377613425e1c362694f85b110f5bace2 perf tools: Introduce perf_evlist__mmap_cb_idx()
bb1b1885e2f22afb8bc7981cd865fe4b0e3d975b perf evlist: Introduce perf_evlist__mmap_cb_get()
b80132b12a78ec71de2b3320cc49d4a0b2cd7c46 perf evlist: Introduce perf_evlist__mmap_cb_mmap()
923d0f1868cb331d660fb569ecd00c39889905f6 perf evlist: Switch to libperf's mmap interface
285aaeac8c5d537b56b70169e21ac29ae5caa8e1 libperf: Centralize map refcnt setting
230662e15ed6cc63ecf72ed1bffa3cadef486850 libperf: Move the pollfd allocation from tools/perf to libperf
93dd6e2831ff399f7685aa2157b997b6392efac8 libperf: Introduce perf_evlist__exit()
696f27c994ed056fd176ce9dc51c7988e148e4b0 libperf: Introduce perf_evlist__purge()
84227cb11ff4d9815b9b1daf0c1a2bd7e9274c58 libperf: Adopt perf_evlist__filter_pollfd() from tools/perf
55542113c690a567e728e40d4181d7d037fc21b0 perf tools: Propagate CFLAGS to libperf
bb91a073ed124d3f6224d8ac37ecb536c01970c1 perf tools: Allow to build with -ltcmalloc
791ce9c48c79210d2ffcdbe69421e7783b32921f perf test: Avoid infinite loop for task exit case
da949f507a73df5b5ad5031cb23b82a4d81846eb perf string: Export asprintf__tp_filter_pids()
c5e006cdbd278a8a5185a3a56acdba161cf159ea perf trace: Support tracepoint dynamic char arrays
d2b72b7280370aaddcbe93d00939bc7ec21dda48 tools arch x86: Grab a copy of the file containing the IRQ vector defines
573ed8985d290214440e6d9866e5330b5ef064ca perf trace beauty: Add the glue for the autogenerated x86 IRQ vector array
df604bfda6f550f088e1cffcd098bfec0eee9cdf perf trace: Hook the 'vec' tracepoint argument with the x86 IRQ vectors scnprintf/strtoul
fecd990720306f93151747771f16bca71bb29c33 perf trace: Introduce accessors to trace specific evsel->priv
8b913df50f56a26b9e336becdd0af9d5ce3831cd perf trace: Hide evsel->access further, simplify code
2b00bb627f62ed1c6180f49f7883789bc5e1b33f perf trace: Introduce 'struct evsel__trace' for evsel->priv needs
362222f877f1369c0a8017c58b075abf30b16ab7 perf trace: Initialize evsel_trace->fmt for syscalls:sys_enter_* tracepoints
d066da978f89ef035c823367a97650f0c4cfa464 libbeauty: Introduce syscall_arg__strtoul_strarray()
db25bf98a3861225bc0b2138cf665097141c72ee perf trace: Honour --max-events in processing syscalls:sys_enter_*
6eb65f7a5cc553f5dffb5cea3a874f1087524d99 libperf: Introduce perf_evlist__for_each_mmap()
3805e4f303314c2b53fb217dd8549a5b9eb06b11 libperf: Move mmap allocation to perf_evlist__mmap_ops::get
b6cd35e4e09c12f9478ed98cb015d4352fa98056 libperf: Move mask setup to perf_evlist__mmap_ops()
395e62cde10df64122d708c68baee64b1d1622fc libperf: Link static tests with libapi.a
bd6b7736c1ed109f4d86f725e96a48fb81ce71f6 libperf: Add tests_mmap_thread test
37ac1bbdc31a2007f398b7caf0cbe522f1af9c6c libperf: Add tests_mmap_cpus test
301a89f8cf628316eea6c768787a836b63a83439 libperf: Keep count of failed tests
c27feefea10aed40e82cd5c6b06a154e141dc038 libperf: Do not export perf_evsel__init()/perf_evlist__init()
1a8a90b823f5e7279f84b39bbcd6c59e266e7dc2 libbeauty: Introduce syscall_arg__strtoul_strarrays()
e0712baa00322881ee74e28031f12a1cc032f0d4 perf trace: Wire up strarray__strtoul_flags()
eeb399b531a1576e36016f8a7f0c50d10194e190 perf record: Put a copy of kcore into the perf.data directory
2ccfb8bc2143ca347609d1d4434176d73a78d805 perf evsel: Avoid close(-1)
8efc4f05685dae2da1d21973eba5e59e7863c77f perf maps: Add for_each_entry()/_safe() iterators
d894967fcaa469cb4c43544855f6fcc18045d526 libsubcmd: Move EXTRA_FLAGS to the end to allow overriding existing flags
86895b480a2f10c7c6659fc5312f84b93011ce2d perf stat: Add --per-node agregation support
ef5502a1d9bd042dcf457378a6ac96701e498b1b perf inject: Make --strip keep evsels
6d57581659f7229903d141455c7308e309056e89 perf record: Add support for limit perf output file size
6041441870ab521a2652f1d558a770c586b790be perf block: Cleanup and refactor block info functions
b65a7d372b1a55db6fb48a5b3c48941eb68716cb perf hist: Support block formats with compare/sort/display
6f7164fa231a5f360e576593c547bea7dc56ddbc perf report: Sort by sampled cycles percent per block for stdio
0b49f83657d5fb9a35c592faab7c5ea16e387539 perf report: Support --percent-limit for --total-cycles
7fa46cbf20d327d78114b1c8c7e69fabe7c57794 perf report: Sort by sampled cycles percent per block for tui
2975489458c59ce2e348b1b3aef5d8d2acb5cc8d perf annotate: Pass a 'map_symbol' in places receiving a pair of 'map' and 'symbol' pointers
d46a4cdf49937b0b3abeb2cd7fa5dc65795e7ea7 pref tools: Make 'struct addr_map_symbol' contain 'struct map_symbol'
08f6680e627edf913c6d6adb9bb9ecc9d57a408d perf tools: Add a 'struct map_groups' pointer to 'struct map_symbol'
94e44b9ca52a72cddd07111a8beb12a2f217c6a2 perf annotate: Stop using map->groups, use map_symbol->mg instead
ccd26741f5e6bdf2c18ea38b32e6a347c5648a97 perf tool: Provide an option to print perf_event_open args and return value
bcb8af5c46e452018de9b58db1fd0ffd94b5d96c perf maps: Purge the entries from maps->names in __maps__purge()
c5c584d2dbb0883f1e6f61872964a4a3a35a2017 perf maps: Do not use an rbtree to sort by map name
1ae14516cba032a83b561144d3d48fd381584c0c perf map_groups: Add a front end cache for map lookups by name
a7c2b572e217418ad34441202ad3addd8f94d2ea perf map_groups: Auto sort maps by name, if needed
a910e4666d61712840c78de33cc7f89de8affa78 perf parse: Report initial event parsing error
7b59a82493b49b715224bfe3b35fae52e48e5fa1 perf map: Move comparision of map's dso_id to a separate function
1f74b100c9d9406fa12b22675c6b2111e5f60e9c perf dsos: Remove unused dsos__find() method
0e3149f86b99ddabde8c5029eea0a9267e34f1a0 perf dso: Move dso_id from 'struct map' to 'struct dso'
5cb456af99f58378fe90649d6faaab25e379be06 perf util: Move block TUI function to ui browsers
848a5e507e26176902e328bd8ae4a5e9c7d2bafe perf report: Jump to symbol source view from total cycles view
98dcf14d7f9c9482144b9015d481bf6b63bce965 perf tools: Add kernel AUX area sampling definitions
9bca1a4ef5034f0a82861ac0375eb0272c5ce04e perf record: Add a function to test for kernel support for AUX area sampling
f306de275b7c18da9ab060acb3dfa91c09e9ae89 perf auxtrace: Move perf_evsel__find_pmu()
f0bb7ee8530a07d3c23bd2e06984796e66cfbcf1 perf auxtrace: Add support for AUX area sample recording
eb7a52d46c6ac95df563f867d526b3d46616b10b perf record: Add aux-sample-size config term
b04b8dd1e4265525dbd74647f747e63e85540189 perf auxtrace: Add support for dumping AUX area samples
ac2f445fc8989e152dc35eb7af368fd34b92e48a perf auxtrace: Add support for queuing AUX area samples
a1ac7de6902c1ea6def7a743f1d2e6ba429684b3 perf pmu: When using default config, record which bits of config were changed by the user
c4ab2f0f763da64d88cec6f20fd664f2347eca60 perf intel-pt: Add support for recording AUX area samples
dbd134322e74f19dbabf174b2cbf7fca9bbc34d3 perf intel-pt: Add support for decoding AUX area samples
805fcbc4fb669036e0137c9a655c8bf0dd08cb5b perf map: Remove needless struct forward declarations
a82f15e39a4b75482d48d0910f6abe5e4f869b76 perf map: Remove unused functions
79b6bb73f888933cbcd20b0ef3976cde67951b72 perf maps: Merge 'struct maps' with 'struct map_groups'
fe87797dea79b59e97a4ea67441bf91f2905bf23 perf thread: Rename thread->mg to thread->maps
694520dfeb474619402620b68edf08e60ca36a17 perf addr_location: Rename al->mg to al->maps
f2eaea09d684177f57db55a9ce2b67d048083fd5 perf map_symbol: Rename ms->mg to ms->maps
9a29ceee6bb14aeb58ab2222c8e792576fe90fb8 perf maps: Rename 'mg' variables to 'maps'
c54d241b35c57d19e798e0381dc4838d7447214b perf maps: Rename map_groups.h to maps.h
6d38267cf996bafdbc99eda6ad8c406fc3dcec93 perf tests: Rename thread-mg-share to thread-maps-share
d96645821e940bddff3fc5290656f83bf70d4c92 perf pmu: Use file system cache to optimize sysfs access
7074674e7338863e6404909c9761d4d3a610a379 perf cpumap: Maintain cpumaps ordered and without dups
a2408a70368ade9c99de27da78d49416313b8833 perf evlist: Maintain evlist->all_cpus
a8cbe40fe9f4ba499cc60b8b6a6851c2c1963797 perf evsel: Add iterator to iterate over events ordered by CPU
99d6141d677a8cd0b35390a29527c8def42538b1 perf evsel: Add functions to close evsel on a CPU
7736627b865defff2430e95df235b4aa2450bc37 perf stat: Use affinity for closing file descriptors
e0e6a6ca3ac211cc07486330a2b89f41ea31b4dd perf stat: Factor out open error handling
4804e0111662d7d89edf4e767a64c6f7e4778bb1 perf stat: Use affinity for opening events
4b49ab708d1804bc8b2fcdde79844b8bc98f7ef6 perf stat: Use affinity for reading
363fb12189d58ebc60456561b8540d68013782a6 perf evsel: Add functions to enable/disable for a specific CPU
704e2f5b700da4c912635cf161c3e982737eb89e perf stat: Use affinity for enabling/disabling events
cb71f7d43ece3d5a4f400f510c61b2ec7c9ce9a1 libperf: Setup initial evlist::all_cpus value
3e152aa984ff4f639f7d2daf1ad10d408c0a3332 perf block-info: Fix wrong block address comparison in block_info__cmp()
0d33b34352531ff7029c58eda2321340c0ea3f5f perf dso: Fix dso comparison
85fc95d75970ee7dd8e01904e7fb1197c275ba6b perf maps: Add missing unlock to maps__insert() error case
b6cf1a42f916af0b056079c37fc5fa7bf8e4b2e2 PCI/ERR: Remove service dependency in pcie_do_recovery()
e8e5ff2aeec19ade42f0535f4b554a3f6e1a58f7 PCI/ERR: Return status of pcie_do_recovery()
27005618178ef9e9bf9c42fd91101771c92e9308 PCI/DPC: Cache DPC capabilities in pci_init_capabilities()
aea47413e7ceec6024f5a2b743cb1a4b2176bf3f PCI/DPC: Expose dpc_process_error(), dpc_reset_link() for use by EDR
894020fdd88c1e9a74c60b67c0f19f1c7696ba2f PCI/AER: Rationalize error status register clearing
2a43ecf96ba6a6eed70dbcd99d0888fc0ad3b82b netfilter: nf_tables: avoid global info storage
f102d66b335a417d4848da9441f585695a838934 netfilter: nf_tables: use dedicated mutex to guard transactions
9e619d87b277bbcc4e0b64cc5963520c1cd99f18 netfilter: nf_tables: flow event notifier must use transaction mutex
0935d558840099b3679c67bb7468dc78fcbad940 netfilter: nf_tables: asynchronous release
4c05ec47384ab3627b62814e8f886e90cc38ce15 netfilter: nf_tables: fix suspicious RCU usage in nft_chain_stats_replace()
ec7470b834fe7b5d7eff11b6677f5d7fdf5e9a91 netfilter: nf_tables: store transaction list locally while requesting module
9332d27d7918182add34e8043f6a754530fdd022 netfilter: nf_tables: remove WARN and add NLA_STRING upper limits
eb014de4fd418de1a277913cba244e47274fe392 netfilter: nf_tables: autoload modules from the abort path
1d305ba40eb8081ff21eeb8ca6ba5c70fd920934 netfilter: nf_tables: fix infinite loop when expr is not available
6896cc4d8fe6fe6163d6f0baa02a270da68896e8 devlink: Add layer 3 generic packet traps
3b063ae57bdfec5e574ace440e6c3f34c4115a92 devlink: Add layer 3 generic packet exception traps
445509eb9b00278b31c92f16b05260176a41c27f netfilter: nf_tables: simplify NLM_F_CREATE handling
e728fdf0628971d43cb4e48860defc6e8a553761 net: phy: improve definition of __ETHTOOL_LINK_MODE_MASK_NBITS
f4bdd7103652fab5ac8b0ed75fa5cbc515b50b8b devlink: move devlink documentation to subfolder
f7555fd19903cb64ad9887875a47094bdb0ab0c2 devlink: convert devlink-health.txt to rst format
2dfaaae521d0af16da287b0c22683fd2a31ace81 devlink: rename devlink-info-versions.rst and add a header
8559dc33a31df343315a3deffda066886a097da5 devlink: convert devlink-params.txt to reStructuredText
d56a0c47a9555c35933c4f7a1f94e55bc809de41 devlink: add documentation for generic devlink parameters
5948f85bbcb3874746702ad8e9ca1bf787005d47 devlink: mention reloading in devlink-params.rst
6c39e015f87fb46f68532d063d4fd337d094fdeb devlink: convert driver-specific files to reStructuredText
d4255d75856fc14faaa2760b687bc998af1cd8e9 devlink: document info versions for each driver
ee7a711f32a786819f2240290b88c8f5fc0cca96 devlink: add parameter documentation for the mlx4 driver
0f261c3ca09e112ac629588c926ec22091b17c42 devlink: add a driver-specific file for the qed driver
0b0f945f54584621f4f91da701909f8e78c9eb69 devlink: add a file documenting devlink regions
cf4cb322d75253e38a41ec77d493a56c7a6648ab devlink: add documentation for ionic device driver
04e4272cb3ae2bbb7a5d672918092366f48c9f52 devlink: rename and expand devlink-trap-netdevsim.rst
a1af8e9a8029969632ff9f6b5ddc326c59d8c06d devlink: add a devlink-resource.rst documentation file
b7ec1eca71efe21d08fb1d05caa8ab06b22fe2f7 devlink: introduce devlink-dpipe.rst documentation file
9cd3e2c64f889a48b0d14bda22e867722b55497e devlink: document region snapshot triggering from userspace
1ccf6c13d9c7282466f46189e9a1a2ed7f19816a devlink: fix typos in qed documentation
41c0d917d11edf9a34461f56e14f067aadb36101 devlink: add macro for "fw.roce"
92439915e0e37495389bdaec5bda877293dd68b4 devlink: document devlink info versions reported by bnxt_en driver
c90977a3c22735dc974f513f624703d9bcbc2a1d devlink: promote "fw.bundle_id" to a generic info version
707518348ae7337db34bdeb544edf254f66e20f2 devlink: remove trigger command from devlink-region.rst
20d1565203e68cd32d5db3e293e7323173ad7a0d ipv4: Only Replay routes of interest to new listeners
446f739104f4da6207230363848ec2c89dfd858d ipv4: Remove old route notifications and convert listeners
c10c4279c778df03f404a4d6906d7d4b840eb95f ipv6: Notify newly added route if should be offloaded
51bf7f387fdfe5ec8c33734b3124ccec83c8d0c3 ipv6: Notify route if replacing currently offloaded one
9c6ecd3cf62d0eb57539f966d7ad617ad3a59f4b ipv6: Only Replay routes of interest to new listeners
d2f0c9b11410f9c6a07c126f8a215b0b81cdcf6c ipv6: Handle route deletion notification
dacad7b34b59fb06a242ef2cf64205f04f7c5339 mlxsw: spectrum_router: Start using new IPv6 route notifications
caafb2509fac1432849650826953dd88b7cbe374 ipv6: Remove old route notifications and convert listeners
b04720aee9a61b0b2f03a81d575fdcfb84c43c34 mlxsw: spectrum_router: Consolidate identical functions
7c4a7ec8558dfc770c27931b43f01aede613faac mlxsw: spectrum_router: Remove FIB entry list from FIB node
0508ff8934f40b52a78313049b96eec29a46ba49 mlxsw: spectrum_router: Prevent incorrect replacement of local table routes
95f0ead8f04bec18e474594ef585f3734bd85b4c devlink: Add non-routable packet trap
13c056ec7d006b11557cebd9f1803edd646d2876 devlink: Add tunnel generic packet traps
c3cae4916e57d2f0364d5e7769218547fb1b7c60 devlink: Add overlay source MAC is multicast trap
ecd942a0ef3a30f6037870bfc0a294d7e9fe9d4f devlink: add ACL generic packet traps
5a2e106c746d2740f425cce3ac039321c924dc85 devlink: extend devlink_trap_report() to accept cookie and pass
d3cbb907ae57fe5da314b51d949b617b538bdeae netdevsim: add ACL trap reporting cookie as a metadata
1e301fd04eaaa5b1e3c202450d86864e6714d783 ipv4: Encapsulate function arguments in a struct
90b93f1b31f86dcde2fa3c57f1ae33d28d87a1f8 ipv4: Add "offload" and "trap" indications to routes
bb3c4ab93e44784c1e958bdbba7824bba40f23cd ipv6: Add "offload" and "trap" indications to routes
48bb9eb47b2708bd3ded16684ddd258e53bd402c netdevsim: fib: Add dummy implementation for FIB offload
41cdc741048b0d04604c02aad9ec19f7d9130b70 netdevsim: fix nsim_fib6_rt_create() error path
1f399fc797b5f78df8a993effdc0ef04304fdcea drivers/net: netdevsim depends on INET
f5cd21605ecd249e5fc715411df22cc1bc877b32 netdevsim: fix using uninitialized resources
6ab63366e1ec4ec1900f253aa64727b4b5f4ee73 netdevsim: disable devlink reload when resources are being used
ea64d8d6c675c0bb712689b13810301de9d8f77a netfilter: nat: never update the UDP checksum when it's 0
05bd330a7fd8875c423fc07d8ddcad73c10e556e x86/hyperv: Suspend/resume the hypercall page for hibernation
1a06d017fb3f388734ffbe5dedee6f8c3af5f2db Drivers: hv: vmbus: Fix Suspend-to-Idle for Generation-2 VM
421f090c819d695942a470051cd624dc43deaf95 x86/hyperv: Suspend/resume the VP assist page for hibernation
38dce4195f0daefb566279fd9fd51e1fbd62ae1b x86/hyperv: Properly suspend/resume reenlightenment notifications
8d4ba9c931bc384bcc6889a43915aaaf19d3e499 KVM: PPC: Book3S HV: Don't push XIVE context when not using XIVE device
01b7d128b5a7f0d09626c090093ff44155f347c9 KVM: PPC: Book3S: Invalidate multiple TCEs at once
1a9167a214f560a23c5050ce6dfebae489528f0d KVM: PPC: Report single stepping capability
6a9c930bd7751bf0630d8b9b73b07af5c6842da6 powerpc/prom_init: Add the ESM call to prom_init
f7777e008cad17bf757ca256709070c07efd8283 powerpc/pseries/svm: Add helpers for UV_SHARE_PAGE and UV_UNSHARE_PAGE
256ba2c1689efd4f5383cf7ebe2f9970c198b79d powerpc/pseries/svm: Unshare all pages before kexecing a new kernel
ca9f4942670c37407bb109090eaf776ce2ccc54c KVM: PPC: Book3S HV: Support for running secure guests
60f0a643aa44e4bed3a74ea671110707dd64d892 KVM: PPC: Book3S HV: Shared pages support for secure guests
008e359c76d85facb10d10fa21fd5bc8c3a4e5d6 KVM: PPC: Book3S HV: Radix changes for secure guest
c32622575dd0ecb6fd0b41e3a451bd58152971ba KVM: PPC: Book3S HV: Handle memory plug/unplug to secure VM
22945688acd4d0ec2620b0670a53110401ed9c59 KVM: PPC: Book3S HV: Support reset of secure guest
d89c69f42bf0fe42d1f52ea9b3dca15b1ade7601 KVM: PPC: Book3S HV: Don't do ultravisor calls on systems without ultravisor
79eb597cba06c435b72f220e9d426ae413fc2579 mm: add account_locked_vm utility function
8a9c8925149f195d0bbd6b42aa3130ced0a075fb KVM: PPC: Book3S: Replace current->mm by kvm->mm
ce477a7a1cdfc9aaafcfd03b45bde131a88d51de KVM: PPC: Add skip_page_out parameter to uvmem functions
3a43970d55e9fd5475d3c4e5fe398ab831ec6c3a KVM: PPC: Book3S HV: Implement H_SVM_INIT_ABORT hcall
e032e3b55b6f487e48c163c5dca74086f147a169 KVM: PPC: Book3S HV: Release lock on page-out failure path
9bee484b280a059c1faa10ae174af4f4af02c805 KVM: PPC: Book3S HV: Skip kvmppc_uvmem_free if Ultravisor is not supported
8c47b6ff29e3d88484fe59d02f9db6de7e44e310 KVM: PPC: Book3S HV: Check caller of H_SVM_* Hcalls
377f02d487b5f74a2411fa01316ba4aff1819629 KVM: PPC: Book3S HV: H_SVM_INIT_START must call UV_RETURN
9a5788c615f52f6d7bf0b61986a632d4ec86791d KVM: PPC: Book3S HV: Add a capability for enabling secure guests
21f86d2d63f9b0c10a3bd369ce8c97f1f786be53 NFS4: Trace lock reclaims
cf749f3cc734c459e835bb1cbfcadbce3c03291c nfsd: Add tracepoints for exp_find_key() and exp_get_by_name()
6a30e47fa0c358cc84002e6a429f5f229e0b7b07 nfsd: Add tracepoints for update of the expkey and export cache entries
5e4c55276ae8758f5789722b384bb2ab3de3a24f EDAC/amd64: Save max number of controllers to family type
9f6aef86315ac31481a288ba1b3f43b2aac93757 EDAC/mce_amd: Always load on SMCA systems
b3f79ae45904ae987a7c06a9e8d6084d7b73e67f x86/amd_nb: Add Family 19h PCI IDs
2eb61c91c3e2738218e55f2eaf7e78a4435c233d EDAC/amd64: Add family ops for Family 19h Models 00h-0Fh
dcd01394ce7cd7d25bb15c81ad2e804d8090611f EDAC/amd64: Drop some family checks for newer systems
dff58530c4ca8ce7ee5a74db431c6e35362cf682 NFSv4.1: fix handling of backchannel binding in BIND_CONN_TO_SESSION
ba95206042099ad2d3a08c2b484431736c921904 net/smc: remove unused parameter of smc_lgr_terminate()
5f78fe968d76902944534db85c4fb244dedc87f4 net/smc: simplify normal link termination
d854fcbfaeda9748c85de296fbe07b7763a1939c net/smc: add new link state and related helpers
2140ac26f8f501d3cc8f1575e6419f1a50779496 net/smc: simplify link deactivation
6c8968c421e0e6bea8a78ee4fdd043d850cd5b26 net/smc: use worker to process incoming llc messages
ef79d439cd124d9fb7258bb35d44c71aec11b829 net/smc: process llc responses in tasklet context
00a049cfde95931c6832edad19d9a4be441cacf5 net/smc: move llc layer related init and clear into smc_llc.c
555da9af827d95134656fa459c8f3ece04dd867a net/smc: add event-based llc_flow framework
a6688d919b220bd714948e03bb3caa8a66895005 net/smc: enqueue all received LLC messages
81e6e5e70df46bb5b205e53f2b7885e49a9d4974 net/smc: introduce link group type
92334cfcb3a2a102dc1b23513bbe2fca4347e2d6 net/smc: add logic to evaluate CONFIRM_LINK messages to LLC layer
4667bb4aaabf87d6b97be1b4671b9db340a58cdc net/smc: adapt SMC server code to use the LLC flow
0fb0b02bd6fd26cba38002be4a6bbcae2228fd44 net/smc: adapt SMC client code to use the LLC flow
3d88a21b0cb6a2661a567e57a431e5aa12ecb203 net/smc: multiple link support and LLC flow for smc_llc_do_confirm_rkey
6d74c3a8a3e7a488a7d9d8c4a59091ccae72fc4c net/smc: multiple link support and LLC flow for smc_llc_do_delete_rkey
56e8091c7a098ef2257f85f16665d79cf3049da9 net/smc: move the TEST_LINK response processing into event handler
3bc67e098c3e215f6e09ba3c0e1f569e7ae020d0 net/smc: adapt SMC remote CONFIRM_RKEY processing to use the LLC flow
218b24fe381238941a06496eaf221a22c5935267 net/smc: adapt SMC remote DELETE_RKEY processing to use the LLC flow
42d18acce9e29b61f5dbfc5118d7c72093e703a1 net/smc: remove handling of CONFIRM_RKEY_CONTINUE
41a211d862242439c9cdb2481946bb0928760541 net/smc: remove obsolete link state DELETING
7562a13d5a8ce9bc5020705da5f50221021f5a2c net/smc: multiple link support for rmb buffer registration
4a3641c160873fe6b6bcff00a6ea15e7430d8d42 net/smc: unmapping of buffers to support multiple links
fb33d27727254618aaf6bc2fedcb0fda1d5c0239 net/smc: map and register buffers for a new link
fbed3b37c89633eb602f4ec8e30186e601b793e5 net/smc: extend smc_llc_send_add_link() and smc_llc_send_delete_link()
d550066776aae3bb31e0240cab24f62e33c47fd3 net/smc: mutex to protect the lgr against parallel reconfigurations
35dcf7ec02dcff16504bc52a368822254f889f00 net/smc: remember PNETID of IB device for later device matching
541afa10c126b6c22c2a805a559c70cc41fd156e net/smc: add smcr_port_err() and smcr_link_down() processing
87523930a16eb57ebb20318e92b5df4b64fe8b20 net/smc: take link down instead of terminating the link group
33d203302d1cc744a13349d2576c985feb469220 net/smc: remove DELETE LINK processing from smc_core.c
8574cf4055ab44724ee9a4c30921d3ed853d787c net/smc: allocate index for a new link
b45e7f98ab7c2d7035d92100ee011584693eccce net/smc: llc_add_link_work to handle ADD_LINK LLC requests
40b94224c339e44f689e713875c6c27c9c1270a7 smc: Remove unused function.
336ba09f2ef71b82f07c1200be0ddf4eb923d69f net/smc: first part of add link processing as SMC client
87f88cda2128a72d79d4cc700729488af1081a06 net/smc: rkey processing for a new link as SMC client
b1570a87f57e94e9f74b8942840f9bd16bd1aba5 net/smc: final part of add link processing as SMC client
2d2209f2018943d4152a21eff5b76f1952e0b435 net/smc: first part of add link processing as SMC server
57b499242cb888a32815f8663b60338bcb0b5747 net/smc: rkey processing for a new link as SMC server
1551c95b61242b1a20565bae8d711f35a601c4f3 net/smc: final part of add link processing as SMC server
c9a5d243035161f06175a7c6d487c9860e0f179a net/smc: delete an asymmetric link as SMC server
9ec6bf19ec8bb19f4211f6a2bf62c079d46b54ea net/smc: llc_del_link_work and use the LLC flow for delete link
9c4168789cc635e1f0d265157b7617259d56bfee net/smc: delete link processing as SMC client
08ae27ddfb6514a8316b17256cd4262bb6931c1f net/smc: delete link processing as SMC server
4dadd151b26589fd0520feb97c93ee981b393a99 net/smc: enqueue local LLC messages
c6f02ebeea3a0ff4bddddf0fd82303190ebb3dd1 net/smc: switch connections to alternate link
29bd73dba4f72970895a2459f7190d388f5204f7 net/smc: send failover validation message
f3811fd7bc97587b142fed9edf8c726694220cb2 net/smc: send DELETE_LINK, ALL message and wait for send to complete
ad6c111b8ae760114df6765d5a5ed1b09020d45d net/smc: asymmetric link tagging
3e0c40afce4ea5b08bb7e3f65c55157817116640 net/smc: add termination reason and handle LLC protocol violation
a52bcc919b14c9d78f03b2b4ff604e5ca69c7e6d net/smc: improve termination processing
45fa8da0bf5cb447fcf835d184e2d3b745376e69 net/smc: create improved SMC-R link_uid
649758fff327eeb184713db8b0b0ebfa28693077 net/smc: save SMC-R peer link_uid
0a99be434d145079d0509473b19e840629d851c2 net/smc: log important pnetid and state change events
ca7e3edc221d5cf750ae04cac29cf9fe9db38e84 net/smc: remove set but not used variables 'del_llc, del_llc_resp'
1edc8eb2e93130e36ac74ac9c80913815a57d413 fs: call fsnotify_sb_delete after evict_inodes
499e7246d6daa7c2655958e81febfbd76af1bc75 scsi: megaraid_sas: Reset adapter if FW is not in READY state after device resume
a7faf81d7858b504279713d6cb98053f0ff00082 scsi: megaraid_sas: Set no_write_same only for Virtual Disk
b9d5e3e7f370a817c742fb089ac1a86dfe8947dc scsi: megaraid_sas: Replace undefined MFI_BIG_ENDIAN macro with __BIG_ENDIAN_BITFIELD macro
220ee02a0b38726a90430e94714c87550dc3d476 docs: stop suggesting strlcpy
c1d084759c95ecd0ef08274654a1f6c4f343cdcd i2c: replace i2c_new_probed_device with an ERR_PTR variant
c4a89279086e9c98eba659d7665b1732e0d5e3e3 crypto: ccp - Add a module parameter to specify a queue count
90773bc1ab407bc2198d7e9fc1c6d6b5ef27a24f crypto: ccp - module parameter to limit the number of enabled CCPs
674f368a952c48ede71784935a799a5205b92b6c crypto: remove CRYPTO_TFM_RES_BAD_KEY_LEN
e3d8f8ae5b1ef0d470b70f65174bbf670bc74130 ASoC: Intel: boards: make common HDMI driver the default for SOF
4bdc0d676a643140bdf17dbf7eafedee3d496a3c remove ioremap_nocache and devm_ioremap_nocache
4d024fe8f806e20e577cc934204c5784c7063293 ALSA: hda: Apply aligned MMIO access only conditionally
9508ef5a980f5d847cad9b932b6ada8f2a3466c1 ASoC: SOF: topology: Fix bytes control size checks
36da67630d3159e48e37a9f9b2d26ceece426482 ASoC: Add DA7213 audio codec as selectable option
1b4efdaf6d6053c8944cee0edba0969dc1be7d4b ASoC: SOF: topology: free kcontrol memory on error
ee1e79b72e3cf5eac42ba9de827536f91d4c04e2 ASoC: SOF: partition audio-related parts from SOF core
285880a23d105e5d34b311b0c44061dffb07e405 ASoC: SOF: Make creation of machine device from SOF core optional
d612b455f120d05a42c95ccd7469fa13efb8d307 ASoC: SOF: nocodec: Amend arguments for sof_nocodec_setup()
0c04800424c42ec3fbe87422d3e04b5c978fc177 ASoC: soc-core: rename snd_soc_add_dai_link() to snd_soc_add_pcm_runtime()
50cd9b5317d5593d0a33f4227f56ddcc1bf66604 ASoC: soc-core: rename snd_soc_remove_dai_link() to snd_soc_remove_pcm_runtime()
2aae447a4c100d2a7b7cae26b1df8b329e730d8b ASoC: SOF: Intel: byt: fixup topology filename for BYT-CR
57e960f0020ec46db277426762ba5ffe77e03e3c ASoC: SOF: Use managed buffer allocation
6ca5cecbd1c1758666ab79446f19e0e61ed11444 ASoC: SOF: Introduce state machine for FW boot
aa2b4a59871a0528bccb91ad94768c9dc2b7bb3d ASoC: Intel: boards: fix incorrect HDMI Kconfig dependency
72b46612d06b83851e2e4f7b538a0bbeb69c10de ASoC: topology: Prevent use-after-free in snd_soc_get_pcm_runtime()
cfe8191b1bbf2b41581b63eb97e56cd6bc3c34a1 ASoC: SOF: fix PCM playback through ALSA OSS emulation
23ee09032d44736c5e8c7becbe03170dbc6f2e8d ASoC: SOF: Intel: refactor i915_get/put functions
0c75419a94a20b2bf791825a665d8b64cf7c560d ASoC: SOF: Intel: do not disable i915 power during probe
4f7f9564a8937f38f97e8624cb7d6a28ee35f7cb ASoC: SOF: fix an Oops, caused by invalid topology
37e97e6faeabda405d0c4319f8419dcc3da14b2b ASoC: SOF: core: free trace on errors
410e5e55c9c1c9c0d452ac5b9adb37b933a7747e ASoC: SOF: core: release resources on errors in probe_continue
45586c7078d42b932c5399953d21746800083691 treewide: remove redundant IS_ERR() before error code check
fe9912ac58e4fa205faabcccc980eb834cc5f1aa ASoC: au1x: Use managed buffer allocation
03081cc370b9d0d91addbb163e2f5347a7f51571 ASoC: samsung: arndale: Add support for WM1811 CODEC
dca6408d6f7e76045b5aaec44825cb87d9d1d6ce ASoC: samsung: Rename Arndale card driver
b315997d7c2295b2b32cb661a584208ab05ffaea ALSA: usb-audio: Convert to the common vmalloc memalloc
6dd9486ca9b8dde3a91e4c5231b8c83df27ba753 ALSA: usb-audio: Use managed buffer allocation
dc5eafe7787c6c4ffab6c6b8a5f78859a249880e ALSA: usb-audio: Support PCM sync_stop
b81cbf7abfc94878a3c6f0789f2185ee55b1cc21 ALSA: usb-audio: add quirks for Line6 Helix devices fw>=2.82
74f73476c3755664504b7d266b5e8f91050ffed9 ALSA: usb-audio: Apply 48kHz fixed rate playback for Jabra Evolve 65 headset
5e625dd5792ea7ea0bf462f4f13a2dc6d8183058 media: tw686x: Use managed buffer allocation
a98e2e229da776bbc8fa90b7311aab0ba05686bb media: solo6x10: Use managed buffer allocation
6e1276a5e613d25af71e3494b2dcb331d24f06ce ASoC: Return error if the function does not support multi-cpu
5c82813ce43e3a2017c43b32a57dc7a8802d9ad4 ASoC: Intel: boards: drop reverse deps for SND_HDA_CODEC_HDMI
a79ae0f6c95652752774e66fd4fa5191d868df9f ASoC: Intel: sof_rt5682: Add rt1015 speaker amp support
e2e404a6164e526193f78717de060cd9b27b3b90 ASoC: Intel: sof_rt5682: Add support for tgl-max98373-rt5682
f3b433e4699fa358ce5b7bd7688bebe36068c199 ASoC: SOF: Implement Probe IPC API
e145e9af231adff081e0e16e1dacfb6e3c4e968f ASoC: SOF: Generic probe compress operations
70368106467cd8c420176bf3ab0acc797f6584bf ASoC: SOF: Intel: Add Probe compress CPU DAIs
fb9a81192d44ae9f334b1d88651dec427fa751d8 ASoC: SOF: pm: Unify suspend/resume routines
700d167739a099cdf12ed15c25fec7f4cb563d42 ASoC: SOF: pm: Introduce DSP power states
61e285caf40fef18e8bd7cea5237ee6723609a1c ASoC: SOF: Move DSP power state transitions to platform-specific ops
828c2f7871d8f8051c7f412c74115ef2c583b1ce ASoC: SOF: Intel: remove unnecessary waitq before loading firmware
63e51fd33fef04b634a0c32ae491ab16a19cb17c ASoC: SOF: Intel: cnl: Implement feature to support DSP D0i3 in S0
207bf12f642f39e749ca65d3efca9d48311e629f ASoC: SOF: Intel: hda: Amend the DSP state transition diagram
851fd87324430dfe56cd55dfd05a8114ac82d168 ASoC: SOF: Intel: hda: Allow trace DMA in S0 when DSP is in D0I3 for debug
787c5214ea6f6e9b7c75ae670d6b6a7deecb2d45 ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op
66de6beb933d373224f350834fbab68093d24627 ASoC: SOF: Intel: hda: Improve DSP state logging
c688cf1d3a2cc1bca5737e7849325b3ac8e69a41 ASoC: SOF: (cosmetic) use for_each_pcm_streams() in sof_dai_load()
9ef91cad92ba75d17d5a5203230746c9d9009705 ASoC: SOF: fix uninitialised "work" with VirtIO
de23a838d8d61767c6232f229f019eb46401cb93 ASoC: SOF: audio: Add helper to check if only D0i3 streams are active
3f06501ea4d2d8add203e66d225274f106cb4029 ASoC: SOF: Do not reset hw_params for streams that ignored suspend
525c4107da8c0a86aa3548dc6e1d0014749e95f7 ASoC: sof: sof-audio: use for_each_pcm_streams() macro
904f353d0e508fb4b3a3f902a02b0a028cda33a6 ASoC: SOF: Turn "firmware boot complete" message into a dbg message
e582f4832a9ee27d92502b58f3a1b3331457e8bb ASoC: SOF: pcm: skip DMA buffer pre-allocation
a3b7343e3f8c4c74516df41827b6d81905e346a1 ASoC: SOF: Fix probe point getter
51dfed1e178a38202960b98f6e29df009a06050f ASoC: SOF: Intel: add SoundWire configuration interface
722ba5f1f530a919d28a0dd9e8e0ec63af18270d ASoC: SOF: Intel: hda: merge IPC, stream and SoundWire interrupt handlers
bbd19cdca8279cf244a301c6a13ae5ec9e4ef976 ASoC: SOF: Intel: hda: add WAKEEN interrupt support for SoundWire
90de3281c86ae5378e951e84c76c4759390ff34d Asoc: SOF: Intel: hda: check SoundWire wakeen interrupt in irq thread
d2c383aa49dce9c5b59930c999099ecc580857fe ASoC: SOF: Intel: hda: add SoundWire stream config/free callbacks
b9ddd81bad19ef7b0955156e7590130127cfdaae ASoC: SOF: Intel: hda: initial SoundWire machine driver autodetect
02df8f4364b070428af0e5b6c8739c884c8ad4e7 ASoC: SOF: Intel: hda: add parameter to control SoundWire clock stop quirks
816938b272b0ac0203e25ce50483bd284ea4a2db ASoC: SOF: Intel: hda: fix ordering bug in resume flow
71cc8abb6ec705ce4efbb54e401004687d40a641 ASoC: SOF: Intel: hda: allow operation without i915 gfx
ccfc531695f3a4aada042f6bdb33ac6be24e1aec ASoC: cs4270: pull reset GPIO low then high
b5cb8558e53d28db571f4ae79b9e9590ed30b280 ASoC: codecs: use asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for DAI pointer
ea00d95200d02ece71f5814d41b14f2eb16d598b ASoC: Use imply for SND_SOC_ALL_CODECS
03f6fc6de9192f4e4209ceee0e92f5947d44fc0a ASoC: rt5682: Add the soundwire support
a252d78cf772f86c2dcc40df8117d9461eed88d6 ASoC: rt5682: Fine tune the HP performance in soundwire mode
914f674bec6efe42f9d6b036850a618fd1698290 ASoC: rt5682: move DAI clock registry to I2S mode
a3c2e894cdafbfa376a28a89a60df415b6ab6ee6 ASoC: rt5682: Make rt5682_clock_config static
724cc62f7a71e3a04112126806c62d9c639ab92c ASoC: rt5682-sdw: fix 'defined but not used' pm functions
fef66ae73a611e84c8b4b74ff6f805ec5f113477 ALSA: usb-audio: Add connector notifier delegation
ab985be95da1d68a0cdba1ed702961aae047bf89 ASoC: amd: Adding TDM support in hw_params.
82dabf599b221a712e951b9061c56669565552a9 ASoC: sh: fsi: Restore devm_ioremap() alignment
7de6b6bc1a58ec3118ca825d8b48faac3a956a85 ASoC: samsung: use asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for DAI pointer
1b93a88431470ea0b943157999084d9c7e6e3bd3 ASoC: qcom: sdm845: handle soundwire stream
6e3a98bcc8678545ad69b200f6f35740bfc70d3a ASoC: qcom: use asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for DAI pointer
8676b3ca4673517650fd509d7fa586aff87b3c28 soundwire: fix regmap dependencies and align with other serial links
52eb063d153ac310058fbaa91577a72c0e7a7169 soundwire: depend on ACPI
0f8c0f8a7782178c40157b2feb6a532493cbadd3 soundwire: depend on ACPI || OF
2948d192169356b9361331a62e09bae5219a37f4 soundwire: intel: remove X86 dependency
b0f18eee6fc1ee21c07abb55e9ccabc9ed9c09f0 scsi: qla2xxx: Update BPM enablement semantics.
4cbca7ea9edaab268f344c2bcd22afcb7370569f scsi: qla2xxx: Update driver version to 10.01.00.25-k
2d870c5bd0acd42eced3860c3911ed6005654a2d RDMA/core: Remove the duplicate header file
c485b19d52c4ba269dfd027945dee81755fdd530 RDMA/uverbs: Do not discard the IB_EVENT_DEVICE_FATAL event
ccfdbaa5cf4601b9b71601893029dcc9245c002b RDMA/uverbs: Move IB_EVENT_DEVICE_FATAL to destroy_uobj
9f3d6daf61e5156139cd05643f7f1c2a9b7b49b0 intel_idle: Refactor intel_idle_cpuidle_driver_init()
18734958e9bfbc055805d110a38dc76307eba742 intel_idle: Use ACPI _CST for processor models without C-state tables
bff8e60a86f4960133f90ad9add9adeb082b8154 intel_idle: Allow ACPI _CST to be used for selected known processors
4ec32d9e8e5b6d6eb491eeee3938665d8a2388fa intel_idle: Add module parameter to prevent ACPI _CST from being used
e6d4f08a677654385869ba0c39d7c9ceec47e5c5 intel_idle: Use ACPI _CST on server systems
2a5bcfdd41d68559567cec3c124a75e093506cc1 nvme-pci: align io queue count with allocted nvme_queue in nvme_probe
28d160de5194c68ff534443d2a8b6f1d10d57c58 irqchip/gic-v4.1: Skip absent CPUs while iterating over redistributors
d9c3872cd2f86b7295446e35b4801270669d2960 KVM: arm64: GICv4.1: Reload VLPI configuration on distributor enable/disable
96806229ca033f85310bc5c203410189f8a1d2ee irqchip/gic-v4.1: Add support for VPENDBASER's Dirty+Valid signaling
471af006a747f1c535c8a8c6c0973c320fe01b22 perf/x86/amd: Constrain Large Increment per Cycle events
5738891229a25e9e678122a843cbf0466a456d0c perf/x86/amd: Add support for Large Increment per Cycle Events
ecf71fbccb9ac5cb964eb7de59bb9da3755b7885 perf/x86/cstate: Add Tremont support
9c080c0279a80057cad3dfc05d09fb283ddf72f4 perf mmap: Declare type for cpu mask of arbitrary length
8384a2600c7ddfc875f64e160d8b423aca4e203a perf record: Adapt affinity to machines with #CPUs > 1K
3ce311afb5583cf3d3b7f54ab088949da28aea05 libperf: Move to tools/lib/perf
81de3bf37a8bf58ecdbef608d16ddb0f4bbb71ca libperf: Add man pages
d10ec006dcd7b20b2eb7e9ef32fc6f83b0112893 perf hists browser: Allow passing an initial hotkey
4c8b9c0f4281c8517542c26425aade3a31988575 perf report/top: Allow pressing hotkeys in the options popup menu
ea537f22f6e5b3e2026fc58419cc937d833b1a61 perf report/top: Do not offer annotation for symbols without samples
e6d6abfc447a65e949c1e883e66e1450903d2fbd perf report/top: Make 'e' visible in the help and make it toggle showing callchains
3b0b16bf8cb92ae67968c1abb7b335032b899b33 perf tools: Support --prefix/--prefix-strip
e884602b57c07fae54ff357e4b996b2053b47c1e perf parse: Refactor 'struct perf_evsel_config_term'
3220fb8d5e59d7a9b59d02965d4209aef7691e9f perf parse: Copy string to perf_evsel_config_term
0dd1979f7f9981dcc5c497e68390f208580032ae perf test: Fix test case Merge cpu map
4a4eb6154d67f7766cc7eb74e9f1db424073e832 perf maps: Mark ksymbol DSOs with kernel type
484214f49bd0948d716832a94e4737ca4dd02c16 perf maps: Move kmap::kmaps setup to maps__insert()
df5a5f3cf24608457bb5e57297dd9f0d528be58f perf tools: Add arm64 version of get_cpuid()
2da4dd3d6973ffdfba4fa07f53240fda7ab22929 perf intel-pt: Fix endless record after being terminated
783fed2f35e2a6771c8dc6ee29b8c4b9930783ce perf intel-bts: Fix endless record after being terminated
c9f2833cb472cf9e0a49b7bcdc210a96017a7bfd perf cs-etm: Fix endless record after being terminated
d6bc34c5ec18c3544c4b0d85963768dfbcd24184 perf arm-spe: Fix endless record after being terminated
ad60ba0c2e6da6ff573c5ac57708fbc443bbb473 perf auxtrace: Add auxtrace_record__read_finish()
b0aaf4c8f31feb21de59df723231c286df2d6be3 perf config: Document missing config options
e0ad4d68548005adb54cc7c35fd9abf760a2a050 perf annotate: Remove privsize from symbol__annotate() args
2316f861ae9ca640708f9529ae40a6f0bd7ae048 perf annotate: Simplify disasm_line allocation and freeing code
d3c03147bf8019bda821334428e0ba31ce4fb425 perf annotate: Align struct annotate_args
cfd3bc752a3f5529506d279deb42e3bc8055695b perf diff: Fix undefined string comparision spotted by clang's -Wstring-compare
441b62acd9c809e87bab45ad1d82b1b3b77cb4f0 tools: Fix off-by 1 relative directory includes
05e54e2386733dfdb62b6784b3d6e1b0bd9bb559 perf parse-events: Fix reading of invalid memory in event parsing
376c3c22e2ba69d7509aa070f1a7dd88efdb0a9c perf report/top TUI: Fix title line formatting
d8ae7242718738ee1bf9bfdd632d2a4b150fdd26 vt: preserve unicode values corresponding to screen characters
8a52bbab39c9791480cbae86c69ad0d47f62972e qed: Debug feature: ilt and mdump
2d22bc8354b15abe413dff76cfe0f7aeb88ef9aa qed: FW 8.42.2.0 debug features
c46f3405692de1ac82240d927b9c7a0f9d6a4a36 tpm: Reserve the TPM final events table
82d736ac56d7cd78696c5234853684bad05efadf Abstract out support for locating an EFI config table
05c8c1ff81ed2eb9bad7c27cf92e55c864c16df8 efi/tpm: Don't traverse an event log with no events
e658c82be5561412c5e83b5e74e9da4830593f3e efi/tpm: Only set 'efi_tpm_final_log_size' after successful event log parsing
be59d57f98065af0b8472f66a0a969207b168680 efi/tpm: Fix sanity check of unsigned tbl_size being less than zero
2bb6a81633cb47dcba4c9f75605cbe49e6b73d60 efi/tpm: Return -EINVAL when determining tpm final events log size fails
047d50aee341d940350897c85799e56ae57c3849 efi/tpm: Don't access event->count when it isn't mapped
74edff2d74c64ca5977a57efb5c238c8f5318ba9 tpm: Move tpm_buf code to include/linux/
c6f61e59760df04a245ef48c8805b4eb3d958230 KEYS: Use common tpm_buf for trusted and asymmetric keys
47f9c279689107f306fff506753971a39a8a7ffc KEYS: trusted: Create trusted keys subsystem
2e19e10131a08dc65079c755fb6e8af936bfedbd KEYS: trusted: Move TPM2 trusted keys code
45477b3fe3d10376b649b1b85fce72b2f9f1da84 security: keys: trusted: fix lost handle flush
ea4cdc548e5e74a529cdd1aea885d74b4aa8f1b3 ceph: new mount option to disable usage of copy-from op
6f9718fe41c3a47e4362bddf145e2db6ad7d8e87 ceph: make 'nocopyfrom' a default mount option
6fd4e634835208ddb331234bfa51d75396a5c42c ceph: allow object copies across different filesystems in the same cluster
a3a0819388b2bf15e7eafe38ff6aacfc27b12df0 ceph: don't allow copy_file_range when stripe_count != 1
4fbc0c711b2464ee1551850b85002faae0b775d5 ceph: remove the extra slashes in the server path
78beb0ff2feceb1d7568333f93195e1a4d95a49a ceph: use copy-from2 op in copy_file_range
b27a939e8376a3f1ed09b9c33ef44d20f18ec3d0 ceph: canonicalize server path in place
1b0c3b9f91f0df03088d293fc9e62743fd789ad2 ceph: re-org copy_file_range and fix some error paths
2ccb45462aeaf0831397b90d31d3d50a7704fa1f ceph: perform asynchronous unlink if we have sufficient caps
785892fe88f693028a996d1cb363d60609848e5e ceph: cache layout in parent dir on first sync create
a0d93e327fc424b94e78a1b25287bb4e632ee054 ceph: remove delay check logic from ceph_check_caps()
2a575f138d003fff0f4930b5cfae4a1c46343b8f ceph: fix potential bad pointer deref in async dirops cb's
6d4d22468dae3d8757af9f8b81b848a76ef4409d sched/fair: Reorder enqueue/dequeue_task_fair path
5ab297bab984310267734dfbcc8104566658ebef sched/fair: Fix reordering of enqueue/dequeue_task_fair()
b34cb07dde7c2346dec73d053ce926aeaa087303 sched/fair: Fix enqueue_task_fair() warning some more
7d148be69e3a0eaa9d029a3c51b545e322116a99 sched/fair: Optimize enqueue_task_fair()
bb8865f435d81223596f1abd6dec0b12ed122af0 RDMA/providers: Fix return value when QP type isn't supported
8213f6c9a275da084dc9363f36f93138547f46f1 net: be2net: reject unsupported coalescing params
cee0c7bba4869170fd471758053406784eba35a5 RDMA/bnxt_re: Refactor command queue management code
9555352bacfdfc68a972d5bf8a08849183b9e607 RDMA/bnxt_re: Refactor notification queue management code
6f53196bc5e7fd3c05337f24977cacb08e0f9753 RDMA/bnxt_re: Refactor doorbell management functions
b1d56fdcb66ebe6604166d71a26744d3cd03fecb RDMA/bnxt_re: Wait for all the CQ events before freeing CQ data structures
1fb143634a38095b641a3a21220774799772dc4c x86/entry/64: Fix unwind hints in kernel exit path
96c64806b4bf35f5edb465cafa6cec490e424a30 x86/entry/64: Fix unwind hints in __switch_to_asm()
81b67439d147677d844d492fcbd03712ea438f42 x86/unwind/orc: Fix premature unwind stoppage due to IRET frames
9ffc1d19fc4a6dfcfe06c91c2861ad6d44fdd92d mm/memremap_pages: Introduce memremap_compat_align()
6acd7d5ef264d8e9a8988cebf6eeb3567eaf60c6 libnvdimm/namespace: Enforce memremap_compat_align()
2522afb86a8cceba0f67dbf05772d21b76d79f06 libnvdimm/region: Introduce an 'align' attribute
04ff4863e1261187ef6152d2cf1f9a20e9b4cc04 libnvdimm/region: Fix build error
5153faac18d293fc7abb19ff7034683fbcd82dc7 cgroup: remove cgroup_enable_task_cg_lists() optimization
0cd9d33ace336bc424fc30944aa3defd6786e4fe cgroup: init_tasks shouldn't be linked to the root cgroup
a97e7904c0806309fd77103005bb7820c3f1c5e4 mm: Convert workingset to XArray
fa40d1ee9f156624658ca409a04a78882ca5b3c5 mm: vmscan: memcontrol: remove mem_cgroup_select_victim_node()
ec9f02384f6053f2a5417e82b65078edc5364a8d mm: workingset: fix vmstat counters for shadow nodes
9783aa9917f8ae24759e67bf882f1aba32fe4ea1 mm, memcg: proportional memory.{low,min} reclaim
9de7ca46ad2688bd51e80f7119fefa301ad7f3fa mm, memcg: make memory.emin the baseline for utilisation determination
1bc63fb1272be0773e925f78c0fbd06c89701d55 mm, memcg: make scan aggression always exclude protection
867e5e1de14b2b2bde324cdfeec3f3f83eb21424 mm: clean up and clarify lruvec lookup procedure
8380ce479010f2f779587b462a9b4681934297c3 mm: fork: fix kernel_stack memcg stats for various stack implementations
4f103c6363c3fe88182037acf4a50f295bde19da mm: memcg/slab: use mem_cgroup_from_obj()
9c315e4d7d8c3bddad3893777bbab4164b298818 mm: memcg/slab: cache page number in memcg_(un)charge_slab()
4b13f64de25686583db3e359b1b8e59049278b50 mm: kmem: rename (__)memcg_kmem_(un)charge_memcg() to __memcg_kmem_(un)charge()
cc1e6315e83db0e517dd9279050b88adc83a7eba media: replace strcpy() by strscpy()
c1a37dd5e87dc6a4c37e5fc68d7b26fb4a3ef097 media: v4l2: taint pads with the signal types for consumer devices
db7da96ba861e0bd51e0fc206bb59e0051b6b427 media: mxl111sf: declare its own pads
aaef6a9dd0ea7f824a53cfc556bb621e207cefe7 media: usb: dvb-usb: remove old friio driver
0654cbcc8dfbf3bc5e6f93916b67fa57ed826a4b media: uvcvideo: Use usb_make_path to fill in usb_info
26b190053ec0db030697e2e19a8f8f13550b9ff7 media: a few more typos at staging, pci, platform, radio and usb
85709cbf152465c77a9c2de48a6f4ef23c8c3d83 media: replace strncpy() by strscpy()
2f39cce963637eee1c58740859c7c63356c29099 media: remove redundant 'default n' from Kconfig-s
5d2e73a5f80a5b5aff3caf1ec6d39b5b3f54b26e media: usb:zr364xx:Fix KASAN:null-ptr-deref Read in zr364xx_vidioc_querycap
8c3854d03bd7b86e8f36e6d9b07b4a6bc20deccd media: media/usb: set device_caps in struct video_device
50acfb2b76e19f73270fef9a32726c7e18d08ec3 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 286
82c5de0ab8dbd6035223ad69e76bd8a88a0a9399 dma-mapping: remove the DMA_MEMORY_EXCLUSIVE flag
7d99532955d4649ba1417fb5a80252e0ce40f1e2 usb: host: ohci-tmio: init genalloc for local memory
2d7a3dc3e24f43504b1f25eae8195e600f4cce8b USB: drop HCD_LOCAL_MEM flag
dd3ecf17ba70a70d2c9ef9ba725281b84f8eef12 usb: don't create dma pools for HCDs with a localmem_pool
edfbcb321faf07ca970e4191abe061deeb7d3788 usb: add a hcd_uses_dma helper
7b81cb6bddd2c4f2489506771070924bd0ae9902 usb: add a HCD_DMA flag instead of guestimating DMA capabilities
8838d9224f84cbe04979edb005365af236d39410 usb/ohci-tmio: remove the HCD_DMA flag
1fa0682448acd5198f79c1d28ee1292a27ae406d dma-mapping: remove dma_release_declared_memory
e48667b865480d8bf0f1171a8b474ffc785b9ace perf/amd/uncore: Add support for Family 19h L3 PMU
45383fb0f42db3945ac6cc658704706cdae19528 virtio: support VIRTIO_F_ORDER_PLATFORM
20c384f1ea1a0bc7320bc445c72dd02d2970d594 vhost: refine vhost and vringh kconfig
792a4f2ed24fcdf0a1956e84fe2a71ada318ba7c vhost: allow per device message handler
0bbe30668d89ec8a309f28ced6d092c90fb23e8c vhost: factor out IOTLB
9ad9c49cfe970b053bb0ef323b682dd1b4d4f8a0 vringh: IOTLB support
c043b4a8cf3b16fbdcaec1126841431c33b16e98 virtio: introduce a vDPA based transport
4c8cf31885f69e86be0b5b9e6677a26797365e1d vhost: introduce vDPA-based backend
c9b9f5f8c0f3cdb893cb86c168cdaa3aa5ed7278 vdpa: move to drivers/vdpa
58ad13729a8a3e0a354de46eaf9969f9116d4763 vdpa: make vhost, virtio depend on menu
d085eb8ce727e581abf8145244eaa3339021be2f vhost: disable for OABI
691f4077d5604af4067ebbea4a27f05e760557b7 gve: Replace zero-length array with flexible-array member
bedc61a922f9dbbe3bfb26ec2745f8cd63b57637 Drivers: hv: vmbus: Introduce table of VMBus protocol versions
2d4f49b3e1e3a24ce16dfeeb2235688c8aba57ef Drivers: hv: vmbus: Enable VMBus protocol versions 4.1, 5.1 and 5.2
931cccc967730d43bb6325506baf51c8f83a9a58 Drivers: hv: vmbus: Add module parameter to cap the VMBus version
7a1323b5dfe44a9013a2cc56ef2973034a00bf88 Drivers: hv: vmbus: Fix crash handler reset of Hyper-V synic
3e0d3776501a215358e3d91045b74f35a7eeaad9 hv_debugfs: Make hv_debug_root static
74347a99e73ae00b8385f1209aaea193c670f901 x86/Hyper-V: Unload vmbus channel in hv panic callback
73f26e526f19afb3a06b76b970a76bcac2cafd05 x86/Hyper-V: Trigger crash enlightenment only once during system crash.
040026df7088c56ccbad28f7042308f67bde63df x86/Hyper-V: Report crash register data when sysctl_record_panic_msg is not set
f3a99e761efa616028b255b4de58e9b5b87c5545 x86/Hyper-V: Report crash data in die() when panic_on_oops is set
f314dfea16a085a58d2ff227ea9fa9e490ee5d18 modsign: log module name in the event of an error
c8424e776b093280d3fdd104d850706b3b229ac8 MODSIGN: Export module signature definitions
39b07096364a42c516415d5f841069e885234e61 ima: Implement support for module-style appended signatures
15588227e086ec662d59df144e48af82e3e592f1 ima: Collect modsig
3878d505aa718bcc7b1eb4089ab9b9fb27dee957 ima: Define ima-modsig template
e5092255bb3967bcc473dc86492dbbd5f7714023 ima: Store the measurement again when appraising a modsig
556d971bdae643de4cd7e2976e14f70ca2a3061d ima: Fix use after free in ima_read_modsig()
1a8916ee3ac29054322cdac687d36e1b5894d272 powerpc: Detect the secure boot mode of the system
4238fad366a660cbc6499ca1ea4be42bd4d1ac5b powerpc/ima: Add support to initialize ima policy rules
2702809a4a1ab414d75c00936cda70ea77c8234e powerpc: Detect the trusted boot state of the system
1917855f4e0658c313e280671ad87774dbfb7b24 powerpc/ima: Define trusted boot policy
273df864cf7466fb170b8dcc1abd672cd08ad8d3 ima: Check against blacklisted hashes for files with modsig
dc87f18615db9dc74a75cfb4a57ed33b07a3903a powerpc/ima: Update ima arch policy to check for blacklist
d72ea4915c7e6fa5e7b9022a34df66e375bfe46c powerpc/ima: Indicate kernel modules appended signatures are enforced
fa4f3f56ccd28ac031ab275e673ed4098855fed4 powerpc/ima: Fix secure boot rules in ima arch policy
9155e2341aa8b5df057dc1c77633b33d1a4f17d2 powerpc/powernv: Add OPAL API interface to access secure variable
bd5d9c743d38f67d64ea1b512a461f6b5a5f6bec powerpc: expose secure variables to userspace via sysfs
8220e22d11a05049aab9693839ab82e5e177ccde powerpc: Load firmware trusted keys/hashes into kernel keyring
70433f67ec3a54710744902d782f8954325e25b8 MODSIGN: make new include file self contained
1cfb725fb1899dc6fdc88f8b5354a65e8ad260c6 powerpc/64: flush_inval_dcache_range() becomes flush_dcache_range()
c0eaf15cd5d39e79feb81a122975df0bb5a1c106 drivers/scsi: Replace rcu_swap_protected() with rcu_replace_pointer()
b0962c53bde9a485c8ebc401fa1dbe821a76bc3e scsi: core: avoid repetitive logging of device offline messages
0bd735df7681e41647a69b1fad0eb5594c60a727 scsi: sd: Signal drive managed SMR disks
17e5888e4e180b45af7bafe7f3a86440d42717f3 x86: Select HARDIRQS_SW_RESEND on x86
16f3fd3dccaa167525018a2b9f8140f0fe5903d5 ionic: no link check until after probe
1d53aedcf98485d9911a524d1f66c66f4d53f4cf ionic: refresh devinfo after fw-upgrade
6bc977faa0af88dfdb278f16b171d49d51f43733 ionic: add device reset to fw upgrade down
f20a4d404122b183b7d66cadea917fcd1340c05b ionic: leave netdev mac alone after fw-upgrade
ddc5911b9bd228dd69de976a4545292420f45e73 ionic: call ionic_port_init after fw-upgrade
91abab83839aa2eba073e4a63c729832fdb27ea1 XArray: Fix xas_next() with a single entry at 0
82a22311b7a68a78709699dc8c098953b70e4fd2 XArray: Fix xas_pause at ULONG_MAX
c36d451ad386b34f452fc3c8621ff14b9eaa31a6 XArray: Fix xas_pause for large multi-index entries
03bd4773d898783fe3bc321287e4838e515fea92 libbpf: Bump current version to v0.0.6
928ca75e59d7cf10ad2c4b446c7b5d046e244027 selftests/bpf: switch tests to new bpf_object__open_{file, mem}() APIs
a9eb048d5615152dc4b8aedb7e704a4e59bc2205 libbpf: Add cscope and tags targets to Makefile
6e05abc9abd5dc4dc9e6b98e01564f4a2659f0fe selftests/bpf: Convert test_btf_dump into test_progs test
1d97c6c2511f10e19f683a4431e8ee887c1daab6 samples/bpf: Base target programs rules on Makefile.target
10cb3d8706dbaa0521e761b96b3be5b7a497ae3f samples/bpf: Use own flags but not HOSTCFLAGS
b2327c107d6255e4ea591042120514bedcdc616a samples/bpf: Add sysroot support
ccfe29eb29c2edcea6552072ef00ff4117f53e83 bpf: Add attach_btf_id attribute to program load
ac4414b5ca47d16c8de3134cc1b868056c4a68ea bpf: Attach raw_tp program with BTF via type name
a7658e1a4164ce2b9eb4a11aadbba38586e93bd6 bpf: Check types of arguments passed into helpers
74b5a5968fe8742205a86234bb99d493bcd5ecee selftests/bpf: Replace test_progs and test_maps w/ general rule
1f5343c0ae9673543055e9794362766e1f0ed163 bpf: Fix build error without CONFIG_NET
f90415e9600c5227131531c0ed11514a2d3bbe62 selftests/bpf: Make a copy of subtest name
1678e33c21b705e9e5d26385aa1611aabe5482dc selftest/bpf: Get rid of a bunch of explicit BPF program type setting
e13a2fe642bd4a42c2b468cdb25ad3aab933d572 tools/bpf: Turn on llvm alu32 attribute by default
45e587b5e8e5f24dd2393f96546b604a38612249 selftests/bpf: Fix LDLIBS order
3820729160440158a014add69cc0d371061a96b2 bpf: Prepare btf_ctx_access for non raw_tp use case
027cbaaf61983351622c29f5a2adc7340340cb7f selftests/bpf: Fix .gitignore to ignore no_alu32/
313e7f6fb1d9a8814424c2c6878848648c9c090f selftest/bpf: Use -m{little, big}-endian for clang
e93d99180abdaaa362bb02427a84266cd61bfd30 selftests/bpf: Restore $(OUTPUT)/test_stub.o rule
f1b9509c2fb0ef4db8d22dac9aef8e856a5d81f6 bpf: Replace prog_raw_tp+btf_id with prog_tracing
12a8654b2e5aab37b22c9608d008f9f0565862c0 libbpf: Add support for prog_tracing
6ae08ae3dea2cfa03dd3665a3c8475c2d429ef47 bpf: Add probe_read_{user, kernel} and probe_read_{user, kernel}_str helpers
e47a179997ceee6864fbae620eee09ea9c345a4d bpf, testing: Add missing object file to TEST_FILES
fec56f5890d93fc2ed74166c397dc186b1c25951 bpf: Introduce BPF trampoline
1442e2871b7679271fc9fcbf043ba1be511a7428 libbpf: Introduce btf__find_by_name_kind()
b8c54ea455dc2e0bda7ea9b0370279c224e21045 libbpf: Add support to attach to fentry/fexit tracing progs
9cc31b3a092d9bf2a18f09ad77e727ddb42a5b1e bpf: Fix race in btf_resolve_helper_id()
91cc1a99740e2ed1d903b5906afb470cc5a07379 bpf: Annotate context types
8c1b6e69dcc1e11bd24111e3734dd740aaf3fda1 bpf: Compare BTF types of functions arguments with actual types
5b92a28aae4dd0f88778d540ecfdcdaec5a41723 bpf: Support attaching tracing BPF program to other BPF programs
e7bf94dbb882b7d679a6a18e40e4f28076eb249f libbpf: Add support for attaching BPF programs to other BPF programs
bfc18e389c7a09fbbbed6bf4032396685b14246e atomics/treewide: Rename __atomic_add_unless() => atomic_fetch_add_unless()
bef828204a1bc7a0fd3a24551c4265e9c2ab95ed atomics/treewide: Make atomic64_inc_not_zero() optional
eccc2da8c03f316bba202e15af2be4615f461900 atomics/treewide: Make atomic_fetch_add_unless() optional
0ae1d994020d75ac065fd42ac4cbf5ac6ce9b255 atomics: Prepare for atomic64_fetch_add_unless()
4f44b4b2b337e100ae655d03c42d140816c8caf9 atomics/powerpc: Define atomic64_fetch_add_unless()
356701329fb391184618eda7b7fb68cb35271506 atomics/treewide: Make atomic64_fetch_add_unless() optional
18cc1814d4e7560412c9c8c6d28f9d6782c8b402 atomics/treewide: Make test ops optional
9837559d8eb01ce834e56fc9a567c1d94ebd3698 atomics/treewide: Make unconditional inc/dec ops optional
b3a2a05f9111de0b79312e577608a27b0318c0a1 atomics/treewide: Make conditional inc/dec ops optional
9255813d5841e158f033e0d83d455bffdae009a4 locking/atomic: Use s64 for atomic64
1e0bd5a091e5d9e0f1d5b0e6329b87bb1792f784 bpf: Switch bpf_map ref counter to atomic64_t so bpf_map_inc() never fails
85192dbf4de08795afe2b88e52a36fc6abfc3dba bpf: Convert bpf_prog refcnt to atomic64_t
fc9702273e2edb90400a34b3be76f7b08fa3344b bpf: Add mmap() support for BPF_MAP_TYPE_ARRAY
24f65050276a4f82d5832e974dabfb5be5c07c39 selftests/bpf: Enforce no-ALU32 for test_progs-no_alu32
b2e2f0e6a6f910c906c083584b6e0afd12266f22 bpf: Make array_map_mmap static
196e8ca74886c433dcfc64a809707074b936aaf5 bpf: Switch bpf_map_{area_alloc,area_mmapable_alloc}() to u64 size
ffc88174cdcf5f51fb7f6298fe9203a36c904f1f selftests/bpf: Ensure no DWARF relocations for BPF object files
a8fdaad5cfd250b9effcec942b3bf7bc5a6c8b17 selftests/bpf: Integrate verbose verifier log into test_progs
4b3da77b72ad6b3c48c6fe4a395ace7db39a12c5 bpf, x86: Generalize and extend bpf_arch_text_poke for direct jumps
6332be04c039a72fca32ed0a4265bac58d606bb6 bpf: Move bpf_free_used_maps into sleepable section
a66886fe6c24ebeeb6dc10fbd9b75158029eacf7 bpf: Add initial poke descriptor table for jit images
da765a2f599304a81a25e77908d1790414ecdbb6 bpf: Add poke dependency tracking for prog array maps
428d5df1fa4f28daf622c48dd19da35585c9053c bpf, x86: Emit patchable direct jump as tail call
b553a6ec570044fc1ae300c6fb24f9ce204c5894 bpf: Simplify __bpf_arch_text_poke poke type handling
b615e5a1e067dcb327482d1af7463268b89b1629 libbpf: Fix usage of u32 in userspace code
d0f010434124598988ba1c97fbb0e4e820ff5d8c bpf: Fix static checker warning
ce27709b8162e5c501bc54292b8bf6bdecc4bbd4 bpf: Fix build in minimal configurations
3464afdf11f9a1e031e7858a05351ceca1792fea libbpf: Fix readelf output parsing on powerpc with recent binutils
aa915931ac3e53ccf371308e6750da510e3591dd libbpf: Fix readelf output parsing for Fedora
6bf6affe18dafea6ef12036001162ac7f2dbf738 selftests/bpf: Bring back c++ include/link test
e9eeec58c992c47b394e4f829e4f81b923b0a322 bpf: Fix a bug when getting subprog 0 jited image in check_attach_btf_id
4c80c7bc583a87ded5f61906f81256b57c795806 bpf: Fix build in minimal configurations, again
763e34e74bb7d5c316015e2e39fcc8520bfd071c ftrace: Add register_ftrace_direct()
013bf0da0474816f57739daa006c8564ad7396a3 ftrace: Add ftrace_find_direct_func()
406acdd32d3e7d5a6dcb7f67798e89068fbe0d77 ftrace: Add another check for match in register_ftrace_direct()
562955fe6a558b9ef98ad87c470314946338cb2f ftrace/x86: Add register_ftrace_direct() for custom trampolines
a3ad1a7e39689005cb04a4f2adb82f9d55b4724f ftrace/x86: Add a counter to test function_graph with direct
0567d6809182df53da03636fad36c507c5cf07a5 ftrace: Add modify_ftrace_direct()
b91e014f078e2e4f24778680e28dbbdecc7f0eb9 bpf: Make BPF trampoline use register_ftrace_direct() API
a2ea07465c8d7984cc6b8b1f0b3324f9b138094a bpf: Fix missing prog untrack in release_maps
fa633a0f89192379828103957874682d389eae83 libbpf: Fix build on read-only filesystems
353da87921a5ec654e7e9024e083f099f1b33c97 ftrace: Fix memory leak caused by not freeing entry in unregister_ftrace_direct()
309b81f0fdc4209d998bc63f0da52c2e96340d4e selftests/bpf: Install generated test progs
55983299b7ea94d714c19cdfd8d969ba86e0d7e9 libbpf: Use .so dynamic symbols for abi check
0a6c33e894a50e5483ca1f53d053985feabebbf3 doc: add phylink documentation to the networking book
25fe02d00a1e9468e0ae995beedb99867ec6701b Documentation: net: phy: switch documentation to rst format
c11669a2757e285958e3d7647bad48807ae8e283 net: phy: dp83867: Rework delay rgmii delay handling
27708eb5481b7b00540028d0ac2b56dfa95a2df7 net: phy: dp83867: IO impedance is not dependent on RGMII delay
27755ff88c0ecbca46bbba1202766c0ce54a3af2 net: phylink: Add phylink_mac_link_{up, down} wrapper functions
44cc27e43fa3b8977373915a8e7f515a9d263343 net: phylink: Add struct phylink_config to PHYLINK API
43de61959b999279bafb031c0c9bdf0f6cd1c501 net: phylink: Add PHYLINK_DEV operation type
17091180b1521ee9b4455d75ab61b35bc0b216ff net: phylink: Add phylink_{printk, err, warn, info, dbg} macros
8c25c0cb5bb4e63170bb7760179ec294a3827694 doc: phy: document some PHY_INTERFACE_MODE_xxx settings
65b27995a4ab8fc51b4adc6b4dcdca20f7a595bb net: phy: let phy_speed_down/up support speeds >1Gbps
9c1029818c713eccdce945e45cd8fb927d6a3d6e net: phy: adin: add support for Analog Devices PHYs
49cc4c7db453af90010758b564c554562b1dc90a net: phy: adin: hook genphy_{suspend, resume} into the driver
fb44b8d62cc3f133bb30e8d47d151c306af9fe8f net: phy: adin: add support for interrupts
3e32d020d8641bfd75ef6dae04f0569119879486 net: phy: adin: add {write,read}_mmd hooks
d6200c8fd5b385af8640e5213532092014d53152 net: phy: adin: configure RGMII/RMII/MII modes on config
c83e6163d852148e352181efab7e82f4cf0aa483 net: phy: adin: make RGMII internal delays configurable
f1012fb476082c8983251a1991183964502ea855 net: phy: adin: make RMII fifo depth configurable
b422d1b6f761bf336e0219fee6901481d33453a0 net: phy: adin: add support MDI/MDIX/Auto-MDI selection
c6aa697c41fd3bbd0d8697a7462109ffe605a867 net: phy: adin: add EEE translation layer from Clause 45 to Clause 22
fa5bd9c5f1cdb0fa90530113056f45d699009ede net: phy: adin: implement PHY subsystem software reset
2d99b58461e111f1fd662f275f9711027bab4913 net: phy: adin: implement downshift configuration via phy-tunable
9fe0b8d6ba9fea0018dc3ac93f4677c8d44bb9a0 net: phy: adin: add ethtool get_stats support
767078132ff9625396f1387f487ce9389f405b2f dt-bindings: net: add bindings for ADIN PHY driver
c227ce4423855bddb41a05ad25a93f13b96c89bd net: phy: remove calls to genphy_config_init
507ddd5c0d47ad869f361c71d700ffe7f12d1dd6 net: phy: dp83867: Add SGMII mode type switching
65d7be094f04fc8dc20e85dd8f10efcd70ccc525 net: phy: adin: implement Energy Detect Powerdown mode via phy-tunable
ea882f75766c1831720078151c9ca2fdff557e89 docs: networking: phy: Improve phrasing
2203cbf2c8b58a1e3bef98c47531d431d11639a0 net: sfp: move fwnode parsing into sfp-bus layer
caabee5b53f5eaa086170e4594f603965bd7d88c net: phy: dp83867: support Wake on LAN
9d68db5092c5fac99fccfdeab3f04df0b27d1762 net: phylink: Fix phylink_dbg() macro
2c63221cd9e5c0dad0424029aeb1c40faada8330 dt-bindings: net: phy: Add support for AT803X
727b3668b730634228fc65c336c2a7a080e02885 net: sfp: rework upstream interface
6c0867022352027409f5a9fee1d3c6923f9e083e net: sfp: fix sfp_bus_add_upstream() warning
2fca4ac914a16c85721a83fa30cc586faf46ca18 net: sfp: fix sfp_bus_put() kernel documentation
d9922c0e9171129aada1911489dc9e021fcfcb96 net: phylink: fix link mode modification in PHY mode
e3cf8b3668a808c1d252269ffc34a5723cfb9a7b net: phy: remove phy_ethtool_sset()
fafc5db28a2ff39092bafe8ac9b8b19c4904f633 net: phy: dp83867: fix hfs boot in rgmii mode
24cf0e693bb50a61e3281009a329f7553a4fbd96 net: phylink: split link_an_mode configured and current settings
c0de2f47202941d936f0482ccd5b010b642a0008 net: phylink: split phylink_sfp_module_insert()
52c956003a9d5bcae1f445f9dfd42b624adb6e87 net: phylink: delay MAC configuration for copper SFP modules
7adb5b2126bc013f0964ddaefad6ad1b132e86c3 net: phylink: make Broadcom BCM84881 based SFPs work
9b2079c046a9d6c9c73a4ec33816678565ee01f3 net: phylink: fix interface passed to mac_link_up
5d57c327584ae0f88eba61ec8faa9c621f40cffd net: phylink: improve clause 45 PHY ksettings_set implementation
eed70fd9452fe0fcd1a221731a4333b51a8081f2 net: phylink: fix failure to register on x86 systems
1511ed0a0167f523a84b4e727372a5d2ce1b6c2f net: phylink: add support for polling MAC PCS
e27f178793de16ca1b421f2c3f4bc3497b2ce723 net: phy: Added IRQ print to phylink_bringup_phy()
aa63b9471bcaca7392df461caafd570a565d17f0 net: phy: adin: const-ify static data
0c58ac1e0155fdbefb976ff2d321d1093b92fe50 net: phy: adin: fix a warning about msleep
52df1e564eb0470b2ecd1481e457932f09f49f5d docs: networking: phy: Rephrase paragraph for clarity
6497ca07f5e91131c6c05e4564d7f98a780aa02b net: phy: sfp-bus.c: get rid of docs warnings
749f6f6843115b424680f1aada3c0dd613ad807c net: phy: dp83867: w/a for fld detect threshold bootstrapping issue
432264e9dfd10537e3cb66a11739f76754fc89e6 dt-bindings: net: remove un-implemented property
d6e055e8733da5ce53fc69c77e379915400068c5 PCI: Add constant PCI_STATUS_ERROR_BITS
ec5d9e87842a43be3a10ada0d5f560bbd3f31d5d PCI: Add pci_status_get_and_clear_errors
4ee656bba8013929bcc050bcebc39a47fe763ee9 ice: Trivial fixes
2309ae385a42c927be537b25ea89be9a0e64fc4a ice: Handle LAN overflow event for VF queues
c54d209c78b8a3d0a75e710993833ebe1eb3273b ice: Wait for VF to be reset/ready before configuration
9d5c5a5290d4d7ae65dcd05e7b986fde4c679ff0 ice: update malicious driver detection event handling
e36aeec0f4e551a7fe01758e652d135638b4865b ice: add support for E823 devices
2fbfa9668bbf4c87ede7b47e15428268cd13c0a2 ice: fix define for E822 backplane device
0ca469fbc3ca8df98921fbf451621b3510dc0a9d ice: allow bigger VFs
46c276cebfb47ec43e17bb0e147f18d0f3e57a28 ice: Improve clarity of prints and variables
f844d5212cb0207334e75bdb94a2add6fb9c8c0b ice: Fix removing driver while bare-metal VFs pass traffic
81f07491e2bf264a871c319c70679c55230baebd ice: discover and store size of available flash
1adf7ead8204094516994d18e5aa02e34e4765f2 ice: enable initial devlink support
ff2e5c700e085f4f9357e128c3fe9eb61e9df752 ice: add basic handler for devlink .info_get
e961b679fb0b25004f5a57db0ccb34256391646b ice: add board identifier info to devlink .info_get
5050471d35d1316ba32dfcbb409978337eb9e75e virtio_net: Differentiate sk_buff and xdp_frame on freeing
5febf6d6ae4d488a5dc388c46d96c17f9556238f scsi: Replace zero-length array with flexible-array member
d87f055b94ea9270c491b5e650dd776ecc30d7c9 mm/mmu_notifier: contextual information for event enums
9ffbe8ac05dbb4ab4a4836a55a47fc6be945a38f locking/lockdep: Rename lockdep_assert_held_exclusive() -> lockdep_assert_held_write()
56c57103db17db9ecdad0507a3f0e3eea747fabe mm/mmu_notifiers: hoist do_mmu_notifier_register down_write to the caller
70df291bf81ffda47ff84e6e2da4fbe21f95a861 mm/mmu_notifiers: do not speculatively allocate a mmu_notifier_mm
2c7933f53f6bff7656e3324ca1a04e478bdc57c1 mm/mmu_notifiers: add a get/put scheme for the registration
23b68395c7c78a764e8963fc15a7cfd318bf187f mm/mmu_notifiers: add a lockdep map for invalidate_range_start/end
56f434f40f059eb3769d50b9c244a850096c3d6f mm/mmu_notifier: define the header pre-processor parts even if disabled
99cb252f5e68d72afa3245a4e73d216d295cd335 mm/mmu_notifier: add an interval tree notifier
0cbe3e26abe0cfe7effb67f620a77d46cce628b2 mm: update ptep_modify_prot_start/commit to take vm_area_struct as arg
04a8645304500be88b3345b65fef7efe58016166 mm: update ptep_modify_prot_commit to take old pte value as arg
a520110e4a15ceb385304d9cab22bb51438f6080 mm: split out a new pagewalk.h header from mm.h
7b86ac3371b70c3fd8fd95501719beb1faab719f pagewalk: separate function pointers from iterator data
ecaad8aca20432fa60821282d8ff479629c9f7b9 mm: Add a walk_page_mapping() function to the pagewalk code
4fe51e9e7902b5724b618dadd9527b1bbf2b55cc mm: Add write-protect and clean utilities for address space ranges
c220a1fae6c5df52ed3a02f88b86a27830ea0210 docs: fpga: convert docs to ReST and rename to *.rst
77a0ef488de9ac6054204c5bf61cf2095fff25d8 Documentation: fpga: dfl: add descriptions for virtualization and new interfaces.
214be7470e5fb0f3b1e228df376397c3da17638c Documentation: fpga: dfl: add descriptions for thermal/power management interfaces
fad9fab975cb9fae651854c811cb07a30bc2b98a EDAC/altera, firmware/intel: Add Stratix10 ECC DBE SMC call
b5dc75c915cdaebab9b9875022e45638d6b14a7e firmware: stratix10-svc: extend svc to support new RSU features
f286d627ef026a4d04b41ae5917d58ddf243c3c5 gfs2: Keep track of deleted inode generations in LVBs
a0e3cc65fa29f497cc97a069c318532c2a48d148 gfs2: Turn gl_delete into a delayed work
8c7b9262a8607636ecd7250f29c7aac17f08901c gfs2: Give up the iopen glock on contention
6bdcadea75768bbd1cd8f6f13011978e1e19a53b gfs2: Minor gfs2_lookup_by_inum cleanup
b66648ad6dcfefd9f02b5408c1381987c090cb13 gfs2: Move inode generation number check into gfs2_inode_lookup
b0dcffd8da3339ad0300587ce7030efdf2e914a9 gfs2: Check inode generation number in delete_work_func
9e8990dea9266af68a668b1503dc6f55c56f1bb6 gfs2: Smarter iopen glock waiting
20be493b787cd581c9fffad7fcd6bfbe6af1050c gfs2: Even more gfs2_find_jhead fixes
f13bc68131b0c0d67a77fb43444e109828a983bf r8169: re-enable MSI on RTL8168c
f957be9d349a3800940f823b16e12b0405cc305b netfilter: conntrack: remove ctnetlink callbacks from l3 protocol trackers
6816d931cab009024b68c11c4cf752f8bf9a1e32 netfilter: conntrack: remove get_l4proto indirection from l3 protocol trackers
c779e849608a875448f6ffc2a5c2a15523bdcd00 netfilter: conntrack: remove get_timeout() indirection
a0ae2562c6c4b2721d9fddba63b7286c13517d9f netfilter: conntrack: remove l3proto abstraction
020f6cc5f75511c5974cfd454f224365bc0c2df4 netfilter: conntrack: avoid use-after free on rmmod
93e66024b0249cec81e91328c55a754efd3192e0 netfilter: conntrack: pass nf_hook_state to packet and error handlers
9976fc6e6edbb0372f084a2ae8c1b8103b3bff1d netfilter: conntrack: remove the l4proto->new() function
83d213fd9d1a56108584cd812333462caa39a747 netfilter: conntrack: deconstify packet callback skb pointer
0150ffbac78318549bf4818ddee3481d87100928 netfilter: conntrack: avoid using ->error callback if possible
6fe78fa484a5dad030b24e33e0cedc5d5bbd0fde netfilter: conntrack: remove error callback and handle icmp from core
dd2934a95701576203b2f61e8ded4e4a2f9183ea netfilter: conntrack: remove l3->l4 mapping information
93185c80a5f748620f5652e492f2a1c8d89db593 netfilter: conntrack: clamp l4proto array size at largers supported protocol
a95a7774d51e13f9cf4b7285666829b68852f07a netfilter: conntrack: add nf_{tcp,udp,sctp,icmp,dccp,icmpv6,generic}_pernet()
8866df9264a34e675b4ee8a151db819b87cce2d3 netfilter: nfnetlink_cttimeout: pass default timeout policy to obj_to_nlattr
89259088c1b7fecb43e8e245dc931909132a4e03 netfilter: nfnetlink_cttimeout: fetch timeouts for udplite and gre, too
202e651cd43c69a43f75b445e90f55b59f9af0ad netfilter: conntrack: gre: convert rwlock to rcu
df7043bed47e0f525224c55c2e005c97f958d80d netfilter: remove unused parameters in nf_ct_l4proto_[un]register_sysctl()
22fc4c4c9fd60427bcda00878cee94e7622cfa7a netfilter: conntrack: gre: switch module to be built-in
751fc301ecbd0fc08d4d6c388f170e2081df26e6 netfilter: conntrack: remove net_id
a47c5404816254d6cc4787f335c4720066a538e6 netfilter: conntrack: handle builtin l4proto packet functions via direct calls
e2e48b471634faa6958718c27208d366b13fe878 netfilter: conntrack: handle icmp pkt_to_tuple helper via direct calls
ea9cf2a55a7bb84ba862a0fc13044a4311c9bbfe netfilter: cttimeout: remove set but not used variable 'l3num'
65fd2c2afac31a4b46a80150347a1748fa9101cb xfrm: gso partial offload support
303c5fab1272888b22088fbdd08cb770205ccb7a xfrm: remove xmit indirection from xfrm_mode
7613b92b1ae37141704948b77e8762c5de896510 xfrm: remove gso_segment indirection from xfrm_mode
b3284df1c86f7ac078dcb8fb250fe3d6437e740c xfrm: remove input2 indirection from xfrm_mode
1de70830066b72b6a8e259e5363f6c0bc4ba7bbc xfrm: remove output2 indirection from xfrm_mode
733a5fac2f15b55b9059230d098ed04341d2d884 xfrm: remove afinfo pointer from xfrm_mode
4c145dce26013763490df88f2473714f5bc7857d xfrm: make xfrm modes builtin
384a46ea7bdc77e1e070b728d427b763e364613c esp4: add gso_segment for esp4 beet mode
7f9e40eb18a99979f194aa1bdc9bf1c358d3111a esp6: add gso_segment for esp6 beet mode
308491755f36c461ee67290af159fdba6be0169d xfrm: add prep for esp beet mode offload
06a0afcfe2f551ff755849ea2549b0d8409fd9a0 xfrm: do pskb_pull properly in __xfrm_transport_prep
25a44ae93d1a490f36d88a180f11aa2650bef074 esp6: support ipv6 nexthdrs process for beet gso segment
6f297068a0696eafecef13852408b05a81edb560 esp4: support ipv6 nexthdrs process for beet gso segment
56b1b7c667fbb9ee395f7506dfef3c04571e024a esp6: calculate transport_header correctly when sel.family != AF_INET6
107f1678941151ccccec67d230a48069aa27527e devlink: Only pass packet trap group identifier in trap structure
c7f0d4c898cb2a3b39a33813739fe4f12ac325d8 netdevsim: Change dummy reporter auto recover default
ba7d16c7794213b591a0ea415d975858d6a7dfd8 devlink: Implicitly set auto recover flag when registering health reporter
48bb52c80be0e462328f58ca3a34ecfef3584320 devlink: Add auto dump flag to health reporter
1e8c66198926e4391c7fe67401126776c5e9de3b devlink: Add packet trap policers support
ad188458d0123d4e116f14f7eab73d644aed149f netdevsim: Add devlink-trap policer support
f9f54392d2c88b34a2aaa6e51b202b3fd9c984b4 devlink: Add packet trap group parameters support
c064875a63528e8ebcefc0ae450ed0fd904d08c4 devlink: Allow setting of packet trap group parameters
0dc8249a2e7ce38d9b307d1277b64f8189f53dfc netdevsim: Add support for setting of packet trap group parameters
5fbff58e27a16abd8213671ff73ec866629c5fdf selftests: netdevsim: Add test cases for devlink-trap policers
8fdcd8fb21c054217b5ca5cb627a9a726dba630f netdevsim: Update dummy reporter's devlink binary interface
ff18176ad806ea1a7f5f9b404182f97dbb6f9691 selftests: Add a test of large binary to devlink health test
cd556e40fdf3b09e229097021a9148ecb6e7725e devlink: expand the devlink-info documentation
12102436acf949b5e6eb087846b47488db2aa440 devlink: track snapshot id usage count using an xarray
b9a17abfde842bb09f894ba96a5cd9f5944f6bfa devlink: implement DEVLINK_CMD_REGION_NEW
3fe0fd531a35c229f8309c8b74ef0226de2626ab netdevsim: support taking immediate snapshot via devlink
2d9eade8f29e8d3296752d1922b14a13d524e0f6 devlink: Add macro for "fw.mgmt.api" to info_get cb.
054eae82537efb9f111b5ebc2db001d7ef07dc2e net: devlink: use NL_SET_ERR_MSG_MOD instead of NL_SET_ERR_MSG
043b3e22768d5d909cb1474fc21ae2fbaf026c0c devlink: let kernel allocate region snapshot id
aebbd7dfab2584acfb1c5d9abf911024109bc5ee docs: devlink: clarify the scope of snapshot id
bea0c5c942d3b4e9fb6ed45f6a7de74c6b112437 devlink: Fix reporter's recovery condition
81e01647fd2c6dcd592c4a005f47ba9ed5a52847 netfilter: conntrack: fix IPV6=n builds
c9626a2cbdb20e26587b3fad99960520a023432b netfilter: nf_tables: add hardware offload support
b717273ddb66a0c576d8c9884a6cfa70a5f49f6b netfilter: nf_tables: don't fail when updating base chain policy
43dd16efc7f235f153804500a4363769bd2276fc netfilter: nf_tables: store data in offload context registers
9a32669fecfb484a1f78fe48d0e42a5efccb0675 netfilter: nf_tables_offload: support indr block call
3bc158f8d0330f0ac58597c023acca2234c14616 netfilter: nf_tables: map basechain priority to hardware priority
3474a2c62ff9694ee627bdb51cf9a60021d9e814 netfilter: nf_tables_offload: move indirect flow_block callback logic to core
b44492afd2b123f605c3aa2cbeee3398d9ebbcc5 netfilter: nf_tables_offload: avoid excessive stack usage
be2861dc36d77ff3778979b9c3c79ada4affa131 netfilter: nft_{fwd,dup}_netdev: add offload support
504882db833b570ea55b25fc194b09e950f2c84f netfilter: nf_tables_offload: add __nft_offload_get_chain function
8fc618c52d163baa7ae020e4c92474159b6006b7 netfilter: nf_tables_offload: refactor the nft_flow_offload_chain function
e211aab73d4c804fe426960c8c9a7a26ec45f190 netfilter: nf_tables_offload: refactor the nft_flow_offload_rule function
06d392cbe3db52c2ce01a2f486afd03eda75743b netfilter: nf_tables_offload: remove rules when the device unregisters
ff175d0b0eab99f512b9afdb571f0ed18b63f533 netfilter: nf_tables_offload: fix always true policy is unset check
a69a85da458f79088c38a38db034a4d64d9c32c3 netfilter: nft_payload: fix missing check for matching length in offloads
ead3952ea743c9ac52661aed363b1475bca66c06 netfilter: nf_tables_offload: add nft_flow_block_chain()
b58288804a3ba0b06e2b34c92cdbfdece8413cff netfilter: nf_tables_offload: Pass callback list to nft_setup_cb_call()
c5d275276ff4becb53c01a716c1f4325c2fb1197 netfilter: nf_tables_offload: add nft_flow_cls_offload_setup()
bbaef955af6efa6a9090b86430e452086d8fce02 netfilter: nf_tables_offload: remove rules on unregistered device only
edbd82c5fba009f68d20b5db585be1e667c605f6 netfilter: nf_tables: fix base chain stat rcu_dereference usage
d54725cd11a57c30f650260cfb0a92c268bdc3e0 netfilter: nf_tables: support for multiple devices per netdev hook
085461c8976e6cb4d5b608a7b7062f394c51a253 netfilter: nf_tables_offload: restore basechain deletion
6df5490fbb9c2d48e9f27a7f128032ac38ae5c59 netfilter: nf_tables_offload: add nft_chain_offload_cmd()
75ceaf862d2c7eb38ba41ddc857618aa4b28b0a2 netfilter: nf_tables_offload: add nft_flow_block_offload_init()
671312e1a05c579714bc08eb2ac3ad5a2c86a10e netfilter: nf_tables_offload: unbind if multi-device binding fails
de2a60522343a6cab998f61fd906eae445b19963 netfilter: nf_tables_offload: check for register data length mismatches
25da5eb32cd51383f6dca7aad252376f1979c075 netfilter: nft_meta: offload support for interface index
be193f5e21d0ec674badef9fde8eca71fb2d8546 netfilter: nf_tables_offload: pass extack to nft_flow_cls_offload_setup()
1ed012f6fd83e7ee7efd22e2c32f23efff015b30 netfilter: nf_tables: bogus EOPNOTSUPP on basechain update
88c749840dff58e7a40e18bf9bdace15f27ef259 netfilter: nf_tables_offload: skip EBUSY on chain update
8bb69f3b2918788435cbd5834c66682642c09fba netfilter: nf_tables: add flowtable offload control plane
c29f74e0df7a02b8303bcdce93a7c0132d62577a netfilter: nf_flow_table: hardware offload support
d1f4c966475c6dd2545c6625022cb24e878bee11 netfilter: nf_tables_offload: Check for the NETDEV_UNREGISTER event
ea13ca305177bd02de62087228a9f1e6793ccf2b netfilter: nf_flow_table_offload: Fix check ndo_setup_tc when setup_block
4a766d490d205fbb07712527d0b6956ecbdec5d4 netfilter: nf_flow_table_offload: add flow_action_entry_next() and use it
5c27d8d76ce810c6254cf5917a6019d824f34bd2 netfilter: nf_flow_table_offload: add IPv6 support
6ca61c7a8bac2768359f67003ac696260fd0985e netfilter: nf_tables_offload: remove reference to flow rule from deletion path
23403cd8898dbc9808d3eb2f63bc1db8a340b751 netfilter: nf_tables_offload: release flow_rule on error from commit path
63b48c73ff567bbab1f940d6e8f3f48607077a13 netfilter: nf_tables_offload: undo updates if transaction fails
ff4bf2f42a40e7dff28379f085b64df322c70b45 netfilter: nf_tables: add nft_unregister_flowtable_hook()
d7c03a9f5c2577b29a7699bbaa1c1cbcfb56afd3 netfilter: nf_tables: check if bind callback fails and unbind if hook registration fails
ee1bcfe01251e8958b53de45d2b0c85e09dd2719 netfilter: nf_flow_table_offload: Fix block setup as TC_SETUP_FT cmd
e052901991ae21e15851bfc89c682bfcb39a4dcf netfilter: nf_flow_table_offload: Fix block_cb tc_setup_type as TC_SETUP_CLSFLOWER
dc4d3f2e12a6e8a22d13b0d648a6529e403b65a6 netfilter: nf_flow_table_offload: Don't use offset uninitialized in flow_offload_port_{d,s}nat
d50264f1fef92967e2d2c9d91bdb05de214ddacf netfilter: nf_flow_table_offload: add IPv6 match description
81ec61074bcf68acfcb2820cda3ff9d9984419c7 netfilter: nf_tables_offload: return EOPNOTSUPP if rule specifies no actions
7acd9378dc65296b2531758aa62ee9bcf55b371c netfilter: nf_flow_table_offload: Correct memcpy size for flow_overload_mangle()
c9b3b8207bc487de02cbca968927ba2c2cb46aaf netfilter: nf_flow_table: fix big-endian integer overflow
1b67e50601fabc9589022e6b5e79fd8596c2338e netfilter: nf_flow_table_offload: fix incorrect ethernet dst address
f31ad71c44c17e55d9a6fa24f8249a15365cf8b2 netfilter: nf_flow_table_offload: check the status of dst_neigh
73327d47d2c04214f23217b982a004c22a493c78 netfilter: nf_flow_table_offload: fix the nat port mangle.
5acab91458ceae0e4b15205fda5437631089f7ee netfilter: nf_tables: unbind callbacks from flowtable destroy path
fb46f1b7806977e9135a83eb347e5d82e68233a2 netfilter: flowtable: add nf_flowtable_time_stamp
79b9b685dde1d1bf43cf84163c76953dc3781c85 netfilter: flowtable: fetch stats only if flow is still alive
a7521a60a5f3e1f58a015fedb6e69aed40455feb netfilter: flowtable: restrict flow dissector match on meta ingress device
87265d842c59d93798b380afe3288a2bdc19bcd9 netfilter: flowtable: add nf_flow_offload_work_alloc()
445db8d09659eb27bcd5920cb91d91686f0197d0 netfilter: flowtable: remove dying bit, use teardown bit instead
355a8b13f87a8964ebe785b065f1388a1bd00c7e netfilter: flowtable: use atomic bitwise operations for flow flags
a5449cdcaac5c78d62b8bea8f79158071f23da01 netfilter: flowtable: add nf_flowtable_hw_offload() helper function
f698fe40829b21088d323c8b0a7c626571528fc6 netfilter: flowtable: refresh flow if hardware offload fails
ae29045018c83495f8c5033afabbedc09f24d7c2 netfilter: flowtable: add nf_flow_offload_tuple() helper
a7965d58ddab0253ddfae58bd5c7d2de46ef0f76 netfilter: flowtable: add nf_flow_table_offload_cmd()
c83de17dd6308fb74696923e5245de0e3c427206 netfilter: nf_tables_offload: fix check the chain offload flag
c22208b7ce3ef0c2c184ff0d9f6423614b1799d9 netfilter: flowtable: Fix setting forgotten NF_FLOW_HW_DEAD flag
978703f42549ac7d1a354bafbfc346a3ccf15f0d netfilter: flowtable: Add API for registering to flow table events
c3c831b0a241c6003c82bc1f2d55460d3f4c0ee5 netfilter: flowtable: Use nf_flow_offload_tuple for stats as well
a7da92c2c8a1faf253a3b3e292fda6910deba540 netfilter: flowtable: skip offload setup if disabled
cfab6dbd0ecf342fc904952d8565c8d80c741a63 netfilter: flowtable: add tunnel match offload support
4679877921cd6fb2545ffecbaa3cdbbb74245aab netfilter: flowtable: add nf_flow_table_block_offload_init()
b5140a36da7876bc084a2c680c8dbc7438db2051 netfilter: flowtable: add indr block setup support
88bf6e4114d5af685c11c02ce95efa7c7494e940 netfilter: flowtable: add tunnel encap/decap action offload support
61abaf02d2ec3d4575c66fa1b4a863877736b932 netfilter: flowtable: reload ip{v6}h in nf_flow_nat_ip{v6}
dc264f1f7ece2ed11cc9e01039cf4168eb3eb66b netfilter: flowtable: fix NULL pointer dereference in tunnel offload support
15ff197237e76c4dab06b7b518afaa4ebb1c43e0 netfilter: flowtable: populate addr_type mask
133a2fe594dc0eb15a77477a5a05176495190139 netfilter: flowtable: Fix incorrect tc_setup_type type
cfbd1125fc8778913d0956a757438bbb2c35f031 netfilter: nf_tables: add enum nft_flowtable_flags to uapi
53c2b2899af7e6a29c0cf8bfa8a554721398a4b0 netfilter: flowtable: add counter support
422c032afcf57d5e8109a54912e22ffc53d99068 netfilter: flowtable: Use rw sem as flow block lock
7da182a998d6cf81191f0b0798eae451015a770f netfilter: flowtable: Use work entry per offload command
8ac2bd357775b3abf838110833279ea1a3b035e4 netfilter: conntrack: export nf_ct_acct_update()
9312eabab4a68348af5b4482cc7cc6f151ff1c3f netfilter: conntrack: add nf_ct_acct_add()
ef803b3cf96a26e2a601755b237585a23e6bc30c netfilter: flowtable: add counter support in HW offload
bc8e71314e8444c6315c482441f3204c032ab327 netfilter: flowtable: Free block_cb when being deleted
74f99482eae03195ced512b440b31d62bdb6e943 netfilter: nf_conntrack: add IPS_HW_OFFLOAD status bit
1d10da0eb09484ae087836da28258316ef4a02be netfilter: flowtable: Remove WQ_MEM_RECLAIM from workqueue
9ed81c8e0deb7bd2aa0d69371e4a0f9a7b31205d netfilter: flowtable: set NF_FLOW_TEARDOWN flag on entry expiration
2de03b45236f3af1800755614fd434d347adf046 selftests: netfilter: add flowtable test script
0ca1bbb7f4212aeef83a67a8aed9da1d84567fcc selftests: netfilter: extend flowtable test script for ipsec
d05d5db815d56a0ce203ed297153d9794dfdcb68 selftests: netfilter: extend flowtable test script with dnat rule
340eaff651160234bdbce07ef34b92a8e45cd540 netfilter: nft_set_rbtree: Add missing expired checks
df9d4a1780223c3ddd4bf0810079b5a75251554e net/tls: sleeping function from invalid context
25a3cd8189c8832c04225e6f1d41228fd6cc64cc net/tls: move TOE-related structures to a separate header
f21912edd1570818cbcb16bd1da7d7a2b122d66b net/tls: rename tls_device to tls_toe_device
be7bbea114d6ab2688b9e59cd24a306d21e51c27 net/tls: use the full sk_proto pointer
16bed0e6ac07b1a0b3e9c33ec5e892bc7074a627 net/tls: move tls_build_proto() on init path
08700dab816847d5e600ef263155fb04ea4b312d net/tls: move TOE-related code to a separate file
0eb8745e03c9ed2a7412c7a844ebc4f0e4f80de4 net/tls: rename tls_hw_* functions tls_toe_*
53b4414a7003099f41ab61ef9a452804c025e2c1 net/tls: allow compiling TLS TOE out
8538d29cea9530f114159e06bfa31b2358161493 net/tls: add tracing for device/offload events
9ec1c6ac27640f6a65378f11e433baa4ece12a28 net/tls: add device decrypted trace point
d26b698dd3cd52f5a3277446a87e5e0198c99cd0 net/tls: add skeleton of MIB statistics
b32fd3cc31d723bf2ab859667be3612c0086ec72 net/tls: add statistics for installed sessions
5c5ec66858062a857cf51f57cbe52b36330f7ae6 net/tls: add TlsDecryptError stat
a4d26fdbc2a5414bb1b67198656cc7e24a4a3c3a net/tls: add TlsDeviceRxResync statistic
163ab96b52ae2bb2d8f188cd29f0b570610f9007 net: sockmap: use bitmap for copy info
4de30a8d58c90e18140342cdcb74903d2e4fbb62 net/tls: pass context to tls_device_decrypted()
d6649d788e1a40b9bf2064bee4d7960fe85bd81e net/tls: Fix unused function warning
8d5a49e9e31ba1ddd34a54b2351d068a90c78707 net/tls: add helper for testing if socket is RX offloaded
d5bee7374b68de3c44586d46e9e61ffc97a1e886 net/tls: Annotate access to sk_prot with READ_ONCE/WRITE_ONCE
40d102cde0a2aabb5e542ab1ab1aa4aaa1fd4372 netfilter: update include directives.
48872c11b77271ef9b070bdc50afe6655c4eb9aa net_sched: sch_fq: add dctcp-like marking
6b015a523fa3ba57ccd9c72697163b560fcdedb4 net_sched: sch_fq: avoid calling ktime_get_ns() if not needed
f3bed7f8f93d60df11f94be14542682c905b5c3e net: remove the unnecessary strict_start_type in some policies
c593642c8be046915ca3a4a300243a68077cd207 treewide: Use sizeof_field() macro
d35eb52bd2ac7557b62bda52668f2e64dde2cf90 net: sch_ets: Make the ETS qdisc offloadable
ef6aadcc76c97e25f62adc4e9d19684d3e5d0b87 net: sched: Make TBF Qdisc offloadable
c34b961a249211bdb08d03bdecfb31ff22eb002f net/sched: act_ct: Create nf flow table per zone
64ff70b80fd403110b67dd9f7184a604fdb0da43 net/sched: act_ct: Offload established connections to flow table
46475bb20f4ba019abf22b0db10bf55a4158852e net/sched: act_ct: Software offload of established flows
07ac9d16b4a5d1cf303215ad7e9829824246be55 net/sched: act_ct: Fix ipv6 lookup of offloaded connections
4cc5fdec6dfe92f50ef2c6a565dfce694161c769 net/sched: act_ct: Use pskb_network_may_pull()
aaca9408078914380fbfd8aef3c38a34b515a654 net: sched: Make FIFO Qdisc offloadable
138470a9b2cc2e26e6018300394afc3858a54e6a net/sched: act_ct: fix lockdep splat in tcf_ct_flow_table_get
62751b6808ec6bdc7622849815943cbc7377262a flow_offload: use flow_action_for_each in flow_action_mixed_hw_stats_types_check()
42d5fe5f9c19a3c6a74186190936df91dcab4aa4 flow_offload: turn hw_stats_type into dedicated enum
48855479510be1f8769cb13174f29dd8a44b4256 flow_offload: introduce "delayed" HW stats type and allow it in mlx5
a16fa289843d5d4dd7c4d8eb3b2deb15a9d2180e flow_offload: restrict driver to pass one allowed bit to flow_action_hw_stats_types_check()
9c26ba9b1f453a0c86b26e9ab5e8efedcb4470d8 net/sched: act_ct: Instantiate flow table entry actions
30b0cf90c6dd82e7ebb3fcb5ba8447f1baeb80be net/sched: act_ct: Support restoring conntrack info on skbs
8b3646d6e0c4ca4ba5615facaef1312d6d40d123 net/sched: act_ct: Support refreshing the flow table entries
edd5861e597b7ec2fae2fa3bc8180164045b5075 net/sched: act_ct: Enable hardware offload of flow table entires
9d0e0cd9a529ba68b2acda68b5075d4a5ea7118a tc-testing: add ETS scheduler to tdc build configuration
53eca1f3479f355ec17b2e86a6b0680510292833 net: rename flow_action_hw_stats_types* -> flow_action_hw_stats*
583396f4ca4d6ee5ad314ba0f4cb5b89deb75e76 net_sched: sch_fq: enable use of hrtimer slack
0dfb2d82af4cd70808de9720d37f8273c1237e52 net: sched: rename more stats_types
2c64605b590edadb3fb46d1ec6badb49e940b479 net: Fix CONFIG_NET_CLS_ACT=n and CONFIG_NFT_FWD_NETDEV={y, m} build
8953b0770ff4e3038a6d4df3cc021f9bfb47548a net: introduce nla_put_bitfield32() helper and use it
16f8036086a929694c3c62f577bb5925fe4fd607 net: flow_offload: skip hw stats check for FLOW_ACTION_HW_STATS_DONT_CARE
beb97d3a3192c00575580af9073921c6283cf93d net/sched: act_ct: update nf_conn_acct for act_ct SW offload in flowtable
d29bdd69ecdd70e8e3c2268fc8e188d6ab55e54a net: schedule: add action gate offloading
39ac237ce00968545e7298faa9e07ecb7e440fb5 net/mlx5: E-Switch, Refactor chains and priorities
278d51f24330718aefd7fe86996a6da66fd345e7 net/mlx5: E-Switch, Increase number of chains and priorities
e15cf98ee8a76472144a19a24ca73d26fefa5237 net/mlx5: make the symbol 'ESW_POOLS' static
96e326878fa5e2727d14e9a23644119374619010 net/mlx5e: Eswitch, Use per vport tables for mirroring
297eaf5b952bcda4678ebc55177074d79263847f net/mlx5: E-Switch, Allow goto earlier chain if FW supports it
61644c3de8a30245c1d4aae7f164175a0498ca76 net/mlx5e: Use NL_SET_ERR_MSG_MOD() extack for errors
178f69b4776ea5e6c1dc1240d447d9c76e32c839 net/mlx5e: Reduce number of arguments in slow path handling
bc1d75fa79860ec9d065cd3de041f86811d48563 net/mlx5e: Remove redundant comment about goto slow path
2fbbc30da05d9bd32d7fefeef445db3edd28d0bd net/mlx5: Verify goto chain offload support
d9fb932fde217b15eab2111605b05a05b47ea593 net/mlx5e: Fix an IS_ERR() vs NULL check
87dac697a05a730d878f703a3c3dd78ac6c5bff4 net/mlx5e: Add devlink fdb_large_groups parameter
7f30db1ed80db6053a818a2722f92d6c5d1073ee net/mlx5: Introduce mapping infra for mapping unique ids to data
11b717d6152699623fb1133759f9b8f235935a51 net/mlx5: E-Switch, Get reg_c0 value on CQE
8f1e0b97cc708aa6a4d84b0431afc410feba00b6 net/mlx5: E-Switch, Mark miss packets with new chain id mapping
0a7fcb78cc21d339c4eba2827df846e69cec1d07 net/mlx5e: Support inner header rewrite with goto action
6724e66b90eebb19d146b7623b3e2af15616782b net/mlx5: E-Switch, Get reg_c1 value on miss
5b7cb7451585f83d414512a70b79b2086b8c6ed1 net/mlx5: E-Switch, Enable reg c1 loopback when possible
d18296ffd9ccde82c82c220263fca2e76d5258be net/mlx5: E-Switch, Introduce global tables
6fb0701a9cfa248f1c1e5dfde15c4d79bb1bdc69 net/mlx5: E-Switch, Add support for offloading rules with no in_port
43435e91396fd156a31f0e3977f60f564a66a328 net/mlx5: E-Switch, Support getting chain mapping
4c3844d9e97e10f0cf024fe7f24dcefa133fe9e2 net/mlx5e: CT: Introduce connection tracking
ac991b48d43ce52ce1a43602068d641d232b03dd net/mlx5e: CT: Offload established flows
5c6b9460474464c37c2d56df9e4c7044a042888b net/mlx5e: CT: Handle misses after executing CT action
1ef3018f5af3da6376fae546e4dfc3f05f063815 net/mlx5e: CT: Support clear action
aded104d397c22a18b9040f5641309f426d6df27 net/mlx5e: CT: Fix stack usage compiler warning
9808dd0a2aeebcb72239a3b082159b0186d9ac3d net/mlx5e: CT: Use rhashtable's ct entries instead of a separate list
70840b66da4d3b9a8962905d9111a53ee628beb3 net/mlx5: CT: Change idr to xarray to protect parallel tuple id allocation
f8d1eddaf94abdc459ccfb881aa7233cb9f7f39a net/mlx5: E-switch, Fix mutex init order
c8508713c71c21f5a16469dcc75ffb4381fbfeb4 net/mlx5: E-Switch, free flow_group_in after creating the restore table
60acc105cbc23c525ddb6fed595cac4796c0040b net/mlx5: E-Switch, Enable restore table only if reg_c1 is supported
9d3faa51bef05d21e908f2c1bd932a5cfac59b63 net/mlx5: Add missing inline to stub esw_add_restore_rule
0b3a8b6b53406f2d890cda369aa9d61e30bc4162 net/mlx5: E-Switch: Fix using fwd and modify when firmware doesn't support it
d0645b3780954b7133d9a908009d166ae686bd2a net/mlx5e: Fix rejecting all egress rules not on vlan
e9864539053ae15c2d6475833f62d7383f9271ce net/mlx5: E-switch, Fix printing wrong error value
d528d4970503edafc23bd43d322a818d74954f7a net/mlx5: E-Switch, Use correct type for chain, prio and level values
70a5698a5683cd504b03c6030ee622b1bec3f702 net/mlx5e: CT: Avoid false warning about rule may be used uninitialized
49397b801261160fb5f5d3f28536c792e72ecbb3 net/mlx5e: Fix actions_match_supported() return
3cfc4332edbc0e96af99be9c1cadf10c8b7113fb net/mlx5e: CT: Fix insert rules when TC_CT config isn't enabled
35e725e1b9d645cc412e06bbc204d63dddb1512b net/mlx5e: CT: remove set but not used variable 'unnew'
9102d836d296fbc94517736d2dd1131ad6b01740 net/mlx5e: CT: Fix offload with CT action after CT NAT action
ebf77bb83f635377ad7946b73490b18ecf50dc29 net/mlx5: E-switch, Extend eswitch enable to handle num_vfs change
8e0aa4bc959c98c14ed0aaee522d77ca52690189 net/mlx5: E-switch, Protect eswitch mode changes
e4e38237d7e39e84d4db4a5cf0aa1ce7fbfaa5d6 bnxt_en: Report health status update after reset is done
737d7a6c55964955604b9de398dac3791bab5a64 bnxt_en: Call recovery done after reset is successfully done
9599e036b161243d7c62399a1b6c250573e08a43 bnxt_en: Add support for devlink info command
b7a444f078592921fa6f83f44b42dd88c08955ee bnxt_en: Add fw.mgmt.api version to devlink info_get cb.
56d69c784d36bee693e950de37fe1751e99fda57 bnxt_en: Add partno to devlink info_get cb
2013d03827dbc2d4b3110ea96f805c5ab035ab15 bnxt_en: Fix "fw.mgmt" and "fw.nsci" info via devlink info_get cb
ef37219ab828c9ead544589ed33cd94f9273d7c7 x86/perf/events: Convert to new CPU match macros
adefe55e725821e8ae23207992ded5994f1650a9 x86/kernel: Convert to new CPU match macros
298426211c4b36e1e2475deb941f8fa59d6686c6 EDAC: Convert to new X86 CPU match macros
4a9f45a0533f47bcff27761821ee568875c5aee4 intel_idle: Convert to new X86 CPU match macros
a69b3b1d4cf061d9197d835dcf539d2dd7b9e46f platform/x86: Convert to new CPU match macros
f07225128865b30093c9ccf946564673c77d0233 powercap/intel_rapl: Convert to new X86 CPU match macros
b84a64fad40637b1c9fa4f4dbf847a23e29e672b x86/efi: Allocate e820 buffer before calling efi_exit_boot_service
3d060856adfc59afb9d029c233141334cfaba418 mm: initialize deferred pages with interrupts enabled
bfcdcef8c8e3469f4d6c082a1da27a6ef77e5715 padata: update documentation
4611ce22468895acd61fee9ac1da810d60617d9a padata: allocate work structures for parallel jobs from a pool
004ed42638f4428e70ead59d170f3d17ff761a0f padata: add basic support for multithreaded jobs
0e012b4e4b5ec8e064be3502382579dd0bb43269 nl80211: fix NL80211_ATTR_FTM_RESPONDER policy
f92f26f2ed2c9f92c9270c705bca96310c3cdf5a iwlwifi: pcie: handle QuZ configs with killer NICs as well
580da465a0328d597df0087800717814a62da638 nfsd4: add filename to states output
c6acd629eec754a9679f922d51f90e44c769b80c net/mlx5e: Add support for devlink-port in non-representors mode
162add8cbae4635cf0598c640a24d5ed2849774f net/mlx5e: Use devlink virtual flavour for VF devlink port
31e87b39ba9d47cf31f5a91dd3cc9680f5987d12 net/mlx5e: Fix devlink port register sequence
189277f3814c36133f4ff0352f4b5194a38486b6 RDMA/mlx5: Fix NULL pointer dereference in destroy_prefetch_work
f7936ddd35d8b849daf0372770c7c9dbe7910fca net/mlx5: Avoid processing commands before cmdif is ready
d37bd5e81ed0d58f0ebe2e01658c26722e0c033e net/mlx5e: CT: Correctly get flow rule
d7a42ad062cc6b20b2c2a8c09dc61df2d4f5751f net/mlx5e: Allow partial data mask for tunnel options
c51323ee7ab4132c80db198b7d0956fef957e6ab net/mlx5e: en_tc: Fix incorrect type in initializer warnings
58ff18e12c9b3bb860b32e9cac4dc8e12aec2695 net/mlx5e: en_tc: Fix cast to restricted __be32 warning
93a129eb8c520b032e1823447b2e1badcc650666 net: sched: expose HW stats types per action used by drivers
0a2a6f498fa060cc0d592d56148da856e9d77bd8 net/mlx5e: Fix stats update for matchall classifier
ebeaf084ad5c0eeaf8ea3314f62cc28cb79d529f net/mlx5e: Properly set default values when disabling adaptive moderation
cb9a0641b531ac11cd7e3076de23ceada19b892e net/mlx5e: Fix MLX5_TC_CT dependencies
046826c878bd9c6d0db2de2787ac5dc354b467a2 net/mlx5e: remove duplicated check chain_index in mlx5e_rep_setup_ft_cb
49964352ca279acd2ae01321e86a55e50d48bf1d net/mlx5: E-Switch: Move eswitch chains to a new directory
3f3ab178c71b12295b5950792b72d2198f0e77c7 net/mlx5e: Take DCBNL-related definitions into dedicated files
768c3667e6f36bc9db0dac854aa198651b27412f net/mlx5e: Extract TC-specific code from en_rep.c to rep/tc.c
549c243e4e010067a075e248f4d72e8dda844e12 net/mlx5e: Extract neigh-specific code from en_rep.c to rep/neigh.c
e2394a61d243d74ec7d0bfd4c6e25171fba54caa net/mlx5e: Move TC-specific code from en_main.c to en_tc.c
d956873f908cff46dd55976dbd9442a027e9d9d1 net/mlx5e: Introduce kconfig var for TC support
2950d1d64fd035726b4b060313f931ed52e3615f net/mlx5: Kconfig: Fix spelling typo
eee3ae41b153e55e25d6cf7bd5b5098ba0afe705 mm: remove hmm_devmem_add
8a164fef9c4ccf6ff7757170397222860e40d192 mm: simplify ZONE_DEVICE page private data
fdc029b19dfd190840d23e5c70bd231140b0e4a4 memremap: remove the dev field in struct dev_pagemap
6f42193fd86eb5eb518984032c85e9b5582b7625 memremap: don't use a separate devm action for devmap_managed_enable_get
6869b7b206595ae0e326f59719090351eb8f4f5d memremap: provide a not device managed memremap_pages
136bc0397ae21dbf63ca02e5775ad353a479cd2f powerpc/pseries: Introduce option to build secure virtual machines
74bb84e5117146fa73eb9d01305975c53022b3c3 powerpc/prom_init: Pass the "os-term" message to hypervisor
d5394c059da9786043934bed474562cde124e7d3 powerpc/pseries/svm: Use shared memory for Debug Trace Log (DTL)
2efbc58f157a39ad9e9199b92d9c47736023a2fe powerpc/pseries/svm: Force SWIOTLB for secure guests
05d9a952832cb206a32e3705eff6edebdb2207e7 powerpc/prom_init: Undo relocation before entering secure mode
17a0364cb07c173f64cefe973a93b8dbd9c61795 powerpc/pseries/iommu: Separate FW_FEATURE_MULTITCE to put/stuff features
c5d6c45e90c49150670346967971e14576afd7f1 mm/swap: fix release_pages() when releasing devmap pages
07d8026995287c2a2f03e28c69cdd8152fa69107 mm: devmap: refactor 1-based refcounting for ZONE_DEVICE pages
f894ddd5ff01d3bb48faf4dc533536bf5269c17a memremap: add an owner field to struct dev_pagemap
fdb64822443ec9fb8c3a74b598a74790ae8d2e22 perf/x86: Add Intel Tiger Lake uncore support
96aaab686505c449e24d76e76507290dcc30e008 perf/core: Add PERF_RECORD_CGROUP event
2b3b76b5ec67568da4bb475d3ce8a92ef494b5de perf/x86/intel/uncore: Add Ice Lake server uncore support
5b16ef2e43ffa1be596652d992235b1cbb244935 perf/x86/cstate: Add Jasper Lake CPU support
7982a898515064ba180d958bfc89ed22d13905ee tools lib api fs: Move cgroupsfs_find_mountpoint()
42bbabed09ce6208026648a71a45b4394c74585a perf tools: Add hw_idx in struct branch_stack
d3f85437ad6a55113882d730beaa75759452da8f perf evsel: Support PERF_SAMPLE_BRANCH_HW_INDEX
277ce1efa7b504873cd32a4106654836c2f80e1b perf header: Add check for unexpected use of reserved membrs in event attr
0f9b1e124bb29719eb1572db74b7893bd616f938 perf expr: Straighten expr__parse()/expr__find_other() interface
d942815a76463fa53b81d3d1c064f76bb3f80ead perf expr: Make expr__parse() return -1 on error
a8a9f6dc0dbfc0f4f225987abec7eb688f4b2d7e perf diff: Use __block_info__cmp() to replace block_pair_cmp()
cca0cc76f5f56dff2c8461b551a3e1fdabcd3fba perf block-info: Allow selecting which columns to report and its order
f787feff69c466dfc6f261c9632627e383b49187 perf block-info: Support color ops to print block percents in color
97256d1a2a62390077bc72009628af5be44fd8a9 perf intel-pt: Rename intel-pt.txt and put it in man page format
ec2eab9deb8009fd8c69d61d04c66b77d438f17d perf intel-pt: Update intel-pt.txt file with new location of the documentation
44d462acc0bf3eabe1522471fd1f683d8ce612cb perf record: Fix binding of AIO user space buffers to nodes
3b7a15b0643d42e4dca78c5aed8f1ad209a3d1ab perf tools: Give synthetic mmap events an inode generation
7eec00a74720d35b6d89505350e5b08ecef376c0 perf symbols: Consolidate symbol fixup issue
443bc639e518c6c4e8fc2e0456cccf3a04f6e77f perf report: Print al_addr when symbol is not found
7b0a0dcb64705d1dbed46d33c9810251667469b9 perf report: Support interactive annotation of code without symbols
ec0479a63b7657e57665a9fc81d11a99131cfc62 perf report/top TUI: Support hotkey 'a' for annotation of unresolved addresses
429a5f9d89fc52256b2a59cd1277afbfafb739b3 perf report: Allow specifying event to be used as sort key in --group output
d13e9e413e5b470c4364bbbce559383081201811 perf stat: Align the output for interval aggregation mode
58fc90fda0cc983c11c5290c7a9e992b08ac4a5c perf metricgroup: Fix printing event names of metric group with multiple events incase of overlapping events
7cd053d4cf8a3dc1a06bdb4be0ed9b0ecbaa21f5 perf tools: Unify a bit the build directory output
e45ad701e784e0eed8a07b537b47afb302c59dab perf pmu: Refactor pmu_add_cpu_aliases()
ba78c1c5461c2fc2f57b777e971b3a9ec0df5666 perf tools: Basic support for CGROUP event
d1277aa36bff4bfc1a187a469fc6a6a1d17cf59c perf cgroup: Maintain cgroup hierarchy
ab64069f1a6604a43daec5fc4a4294b0b77a8b93 perf record: Support synthesizing cgroup events
8fb4b67939e169fca68174e9ac7be79fe9a04498 perf record: Add --all-cgroups option
78886f3ed37e89a06c76b95be873573e27900979 perf symbols: Fix arm64 gap between kernel start and module end
8358f698ec9d8467ad00c045e4d83c3e4acc7db4 perf stat: Fix no metric header if --per-socket and --metric-only set
e79f15a4598c1f3f3f7f3319ca308c63c91fdaf2 x86/resctrl: Add task resctrl information display
9255782f70614c89b1a15ec6997c4b72ce9e630a sysfs: Wrap __compat_only_sysfs_link_entry_to_kobj function to change the symlink name
8852c07a881b0acfd3d75cf3927adaab815c4ee5 powerpc/powernv: Move core and fadump_release_opalcore under new kobject
3f5f1f22ef10ee0278cef1243944c93aca01b236 Documentation/ABI: Mark /sys/kernel/fadump_* sysfs files deprecated
6cc7c266e5b47d3cd2b5bb7fd3aac4e6bb2dd1d2 ima: Call ima_calc_boot_aggregate() in ima_eventdigest_init()
45e6aa9f5592cd127367074f4822039cd8a825c3 libceph: crush_location infrastructure
117d96a04f007ce8fc2e292369056c3bd09f6f63 libceph: support for balanced and localized reads
8ad44d5e0d1eda7e4a0ed382174888476dc81789 libceph: read_from_replica option
dc1dad8e1a612650b1e786e992cb0c6e101e226a rbd: compression_hint option
328728630d9f2bf14b82ca30b5e47489beefe361 scsi: core: avoid host-wide host_busy counter for scsi_mq
9ef1530c0c1bb182d7f60165946bd027ff49282e KVM: SVM: fix compilation with modular PSP and non-modular KVM
f14eec0a32038f2d6c05b8ea91c7701f65ce7418 KVM: SVM: move more vmentry code to assembly
b61f62d408959a37bb6b19f9521b682aec3a5601 KVM: SVM: Do not setup frame pointer in __svm_vcpu_run
56a87e5d997b722acf2a5dd5c938d574d8c95da6 KVM: SVM: Fix __svm_vcpu_run declaration.
4d9bba9007167074504187d27fd80352eb3a04e7 KVM: selftests: Use kernel's list instead of homebrewed replacement
8c996e4dae177e6921fe61d20b1f30fc06a3d275 KVM: selftests: Add util to delete memory region
8a0639fe9201ed7af73dd40fc4b6f9a4f7b16a42 KVM: sefltests: Add explicit synchronization to move mem region test
8fb38f05ca9ffcca895d545a68a02f9a312c30d5 KVM: selftests: Add "delete" testcase to set_memory_region_test
8cc2dd637b890d75613387daf57af7e8f3a32e33 KVM: selftests: Add "zero" testcase to set_memory_region_test
5b4f758f454b6e3d9c7182031631c745105ec24b KVM: selftests: Make set_memory_region_test common to all architectures
909e0abaac0f3331e2016d4b9b19001a390d6019 selftests: kvm: Add testcase for creating max number of memslots
5efac0741ce238e0844d3f7af00198f81e84926a KVM: x86: introduce kvm_mmu_invalidate_gva
0baedd792713063213f1e2060dc6a5d536638f0a KVM: x86: make Hyper-V PV TLB flush use tlb_flush_guest()
f55ac304ca47039368a5971fa61ebc8160c90659 KVM: x86: Drop @invalidate_gpa param from kvm_x86_ops' tlb_flush()
72b38320872666f7fb6ff9564bf91139c685c234 KVM: SVM: Wire up ->tlb_flush_guest() directly to svm_flush_tlb()
5058b692c69997f9736b94df786509366c32f34d KVM: VMX: Move vmx_flush_tlb() to vmx.c
33d19ec9b14c0e304f5d44a0dd1403539360968b KVM: VMX: Introduce vmx_flush_tlb_current()
7780938cc70b848650722762fa4c7496fa68f9ec KVM: x86: Rename ->tlb_flush() to ->tlb_flush_all()
50b265a4eee0d9fb9581f1a300742515b80dffda KVM: nVMX: Add helper to handle TLB flushes on nested VM-Enter/VM-Exit
eeeb4f67a6cd437da1f5d1a20596cdc2d7b50551 KVM: x86: Introduce KVM_REQ_TLB_FLUSH_CURRENT to flush current ASID
8c8560b833909cbf2e3a73d4dc8e65a60ba66f07 KVM: x86/mmu: Use KVM_REQ_TLB_FLUSH_CURRENT for MMU specific flushes
c51e1ffee50121a2b2e00208f517a695493ee85d KVM: nVMX: Selectively use TLB_FLUSH_CURRENT for nested VM-Enter/VM-Exit
1196cb970b996be69a2fcd9756117b394f8e7526 KVM: nVMX: Reload APIC access page on nested VM-Exit only if necessary
a4148b7ca2a5afe1295a41b5e30048cabcb74f8d KVM: VMX: Retrieve APIC access page HPA only when necessary
4de1f9d469f4515464c2c4958a59479f641970ef KVM: VMX: Don't reload APIC access page if its control is disabled
b869855badd1387bd12415e4d5571e931825b546 KVM: x86/mmu: Move fast_cr3_switch() side effects to __kvm_mmu_new_cr3()
4a632ac6ca66fb29b94a16495624c58f4d313f2f KVM: x86/mmu: Add separate override for MMU sync during fast CR3 switch
71fe70130d88729abc0e658d3202618c340d2e71 KVM: x86/mmu: Add module param to force TLB flush on root reuse
41fab65e7c44ab1c3aa4b962e6f95649354db419 KVM: nVMX: Skip MMU sync on nested VMX transition when possible
9805c5f74b8a65da397ec6b70734e44f1f191c0b KVM: nVMX: Don't flush TLB on nested VMX transition
be01e8e2c632c41c69bb30e7196661ec6e8fdc10 KVM: x86: Replace "cr3" with "pgd" in "new cr3/pgd" related code
be100ef136254ab4a3ff223e2288aae6c5809ac6 KVM: VMX: Clean cr3/pgd handling in vmx_load_mmu_pgd()
789afc5ccd4ef1374669f788c90a870d4e41074c KVM: nVMX: Move reflection check into nested_vmx_reflect_vmexit()
7b7bd87dbd6aa8c09d5e8a8028bda69c3ab13969 KVM: nVMX: Uninline nested_vmx_reflect_vmexit(), i.e. move it to nested.c
fbdd50250396d55bf9986b2b9f271a7e91c111ea KVM: nVMX: Move VM-Fail check out of nested_vmx_exit_reflected()
236871b6744a6b3c8f9653a429cc041bba8908d5 KVM: nVMX: Move nested VM-Exit tracepoint into nested_vmx_reflect_vmexit()
2c1f3323802e4c4495bc8cc55d4867ded6014274 KVM: nVMX: Split VM-Exit reflection logic into L0 vs. L1 wants
1d283062c949f16fcc01d8a508b680e50c7d5ea0 KVM: nVMX: Drop a superfluous WARN on reflecting EXTERNAL_INTERRUPT
f47baaed4fef3e31baa750cf337fe62bfcaca31f KVM: nVMX: Pull exit_reason from vcpu_vmx in nested_vmx_reflect_vmexit()
4dcefa312a6c1cc2aa2dd8a9ba76d97d63b3bd17 KVM: nVMX: Rename exit_reason to vm_exit_reason for nested VM-Exit
ec0241f3bbe155a58455ce4a6057be5db6529b0f KVM: nVMX: Drop manual clearing of segment cache on nested VMCS switch
5addc235199f15ae964e7ac6b20cf43f4a661573 KVM: VMX: Cache vmcs.EXIT_QUALIFICATION using arch avail_reg flags
8791585837f659943936b8e1cce9d039436ad1ca KVM: VMX: Cache vmcs.EXIT_INTR_INFO using arch avail_reg flags
a9ab13ff6e844ad5b3ed39339e6db9a76bb539ad KVM: X86: Improve latency for single target IPI fastpath
4f233371f6bb1578340b6c7034ddf7b76606d4ae KVM: nSVM: Check for CR0.CD and CR0.NW on VMRUN of nested guests
1d2c6c9bd4b768bb665eeeb793dd50c2cebcbf0c selftests: kvm/set_memory_region_test: do not check RIP if the guest shuts down
56083bdf67c78030f11cdaed5b2b54959a329b02 KVM: x86: check_nested_events is never NULL
33b22172452f05c351fd2fa24c28d2e76c7b0692 KVM: x86: move nested-related kvm_x86_ops to a separate struct
9bd4af240f4db39e754081d135e6ef7a54bb6828 KVM: nVMX: Drop a redundant call to vmx_get_intr_info()
87796555d48ca1cc681515e065b824ecab9c4282 KVM: nVMX: Store vmcs.EXIT_QUALIFICATION as an unsigned long, not u32
acd05785e48c01edb2c4f4d014d28478b5f19fb5 kvm: add capability for halt polling
7c67f54661fcc8d141fb11abbab1739f32e13b03 KVM: SVM: do not allow VMRUN inside SMM
139f7425fdf54f054463e7524b9f54c41af8407f kvm: x86: Use KVM CPU capabilities to determine CR4 reserved bits
495907ec36def1d28a44e2d1b5a51affe716aacf KVM: X86: Declare KVM_CAP_SET_GUEST_DEBUG properly
449aa906e67e57636086967bf0edc1328fd0ca9f KVM: selftests: Add KVM_SET_GUEST_DEBUG test
2c19dba6803bfeb694da0b0b50e788b77a37fe75 KVM: nSVM: trap #DB and #BP to userspace if guest debugging is on
5679b803e44ed8947e8c2a7f44cdef1d93ea24d5 KVM: SVM: keep DR6 synchronized with vcpu->arch.dr6
d67668e9dd76d98136048935723947156737932b KVM: x86, SVM: isolate vcpu->arch.dr6 from vmcb->save.dr6
45981dedf555bd66d86ccb51e4049d9f7ec45bd5 KVM: VMX: pass correct DR6 for GD userspace exit
7d611233b01613c866259d6e6f44c67f7f7eb2a3 KVM: SVM: Disable AVIC before setting V_IRQ
f74f94140fa50f768e61d626de4c146502b9102d KVM: SVM: introduce nested_run_pending
38c0b192bd6df089cdffd9828d19e764385f96e6 KVM: SVM: leave halted state on vmexit
6e085cbfb0f0c7de4ca0f370adb572b0e07a818c KVM: SVM: immediately inject INTR vmexit
9c3d370a8efaac49b0520617c9ab4e552aefbf1e KVM: SVM: Implement check_nested_events for NMI
d2060bd42e4482b15c35f961a294ee57f369027d KVM: nVMX: Open a window for pending nested VMX preemption timer
8081ad06b68a728e676d3b08e9ab70ce4039747b KVM: x86: Set KVM_REQ_EVENT if run is canceled with req_immediate_exit set
88c604b66eb6a74841cd40f5bdf639112ad69115 KVM: x86: Make return for {interrupt_nmi,smi}_allowed() a bool instead of int
a9fa7cb6aa997ba58294f1a07d402ce5855bafe1 KVM: x86: replace is_smm checks with kvm_x86_ops.smi_allowed
bbdad0b5a708ddb37a9f051504c2133fa92df97a KVM: nSVM: Report NMIs as allowed when in L2 and Exit-on-NMI is set
55714cddbf1028bbfa19fd7d69182de3f135ce99 KVM: nSVM: Move SMI vmexit handling to svm_check_nested_events()
1b660b6baaafd8b9056740b83decd7fc74023627 KVM: VMX: Split out architectural interrupt/NMI blocking checks
cae96af18452336aff85c95c6892aab1ed955eed KVM: SVM: Split out architectural interrupt/NMI/SMI blocking checks
fc6f7c03ad80693c953d5cdacfad41f174289531 KVM: nSVM: Report interrupts as allowed when in L2 and exit-on-interrupt is set
221e761090b4ffadf41acaca1e1f6dd97d84ef4f KVM: nSVM: Preserve IRQ/NMI/SMI priority irrespective of exiting behavior
7ab0abdb553e62704be5b7879a0971acf9f36a06 KVM: VMX: Use vmx_get_rflags() to query RFLAGS in vmx_interrupt_blocked()
c300ab9f08df9e4b9f39d53a0691e234330df124 KVM: x86: Replace late check_nested_events() hack with more precise fix
56ba77a459a72a7d95be74355a40a91e1f6dd7f7 KVM: x86: Save L1 TSC offset in 'struct kvm_vcpu_arch'
f98c1e77127de7d9ff558570c25d02ef077df50f KVM: VMX: Add proper cache tracking for CR4
bd31fe495d0d1a67fe6f44f06dfef637f202241d KVM: VMX: Add proper cache tracking for CR0
0047fcade4cb1204cafdf62150081a39356f4dbd KVM: VMX: Move nested EPT out of kvm_x86_ops.get_tdp_level() hook
e93fd3b3e89e9664039281fe7e56e6f764f2a909 KVM: x86/mmu: Capture TDP level when updating CPUID
a71936ab46f1da1539d97a98dfb2f94ee383d687 kvm: x86: Cleanup vcpu->arch.guest_xstate_size
3bae0459bcd559506a2ca5807040ff722de5b136 KVM: x86/mmu: Drop KVM's hugepage enums in favor of the kernel's enums
8123f265248c85603d55f4e97c68576f45eb1e4d KVM: x86/mmu: Add a helper to consolidate root sp allocation
dcf068da7eb29362adf13f20e5c44a18d98ed9a3 KVM: VMX: Introduce generic fastpath handler
404d5d7bff0d419fe11c7eaebca9ec8f25258f95 KVM: X86: Introduce more exit_fastpath_completion enum values
379a3c8ee44440d5afa505230ed8cb5b0d0e314b KVM: VMX: Optimize posted-interrupt delivery for timer fastpath
199a8b84c455cfeb81bc060c6824dea473e54dc3 KVM: x86: introduce kvm_can_use_hv_timer
ae95f566b3d22ade75c67827f1171594dacc9a03 KVM: X86: TSCDEADLINE MSR emulation fastpath
26efe2fd92e50822674acce1dbc4f2ac6fc1788f KVM: VMX: Handle preemption timer fastpath
de182481629c2dc248adbb4ec5df83cd9d633dd4 KVM: SVM: Remove unnecessary V_IRQ unsetting
6c1c6e58356b87017839f71120d1c250b4e0f7ff KVM: nVMX: Remove unused 'ops' param from nested_vmx_hardware_setup()
93dff2fed2fb4a513196b7df05742c6fcdfd5178 KVM: nVMX: Migrate the VMX-preemption timer
0abcc8f65cc23b65bc8d1614cc64b02b1641ed7c KVM: VMX: enable X86_FEATURE_WAITPKG in KVM capabilities
7cb85fc465fdb91e88eff02b496150b1270952cf KVM: x86: Remove superfluous brackets from case statement
80bc97f2d84dbec6df6b36d6bbc0715c14f80c61 KVM: Fix the indentation to match coding style
a3535be731c2a343912578465021f50937f7b099 KVM: nSVM: fix condition for filtering async PF
6c0238c4a62b3a0b1201aeb7e33a4636d552a436 KVM: nSVM: leave ASID aside in copy_vmcb_control_area
7d2e8748af62b0de7c7bbcb0d62f937e88fd7027 KVM: x86: Initialize tdp_level during vCPU creation
b6162e82aef19fee9c32cb3fe9ac30d9116a8c73 KVM: nSVM: Preserve registers modifications done before nested_svm_vmexit()
c6b22f59d694d0caf61aefb262d9639b3d9661d5 KVM: x86: track manually whether an event has been injected
c9d40913ac5a21eb2b976bb221a4677540e84eba KVM: x86: enable event window in inject_pending_event
7c86663b68bab393633d8312a0d25a3d004de182 KVM: nSVM: inject exceptions via svm_check_nested_events
bd279629f73f27f0931d09cd3da904b923fb6f35 KVM: nSVM: remove exit_required
5b672408660e309ce7d54462eea050d5e5d0fc3d KVM: nSVM: correctly inject INIT vmexits
978ce5837c7ed50e4ea30cc0fa20f2f820edf8ea KVM: SVM: always update CR3 in VMCB
69c9dfa24bb7bac5c9e2bd4d3f631e35b91e3733 KVM: nSVM: move map argument out of enter_svm_guest_mode
3e06f0163f7f75364290bf338f4e279f6e3e404f KVM: nSVM: extract load_nested_vmcb_control
f241d711b2d17f79ae5fad78c5644c674fce42ba KVM: nSVM: extract preparation of VMCB for nested run
69cb877487de3662e08081cf036f8fe0e4a3b806 KVM: nSVM: move MMU setup to nested_prepare_vmcb_control
18fc6c55d1f449ff57778a4003c838a79d62b5a8 KVM: nSVM: clean up tsc_offset update
2f675917efc8a4d469f8be95e6ea55b2310bfd0d KVM: nSVM: pass vmcb_control_area to copy_vmcb_control_area
e670bf68f4b701506d51f007917ab633894294d0 KVM: nSVM: save all control fields in svm->nested
2d8a42be0e2b15a4e0b20349f27bb8288db5ebe6 KVM: nSVM: synchronize VMCB controls updated by the processor on every vmexit
ffdf7f9e80ac1b6fea3bc6a65ea1f264bc226eab KVM: nSVM: extract svm_set_gif
91b7130cb6606d8c6b3b77e54426b3f3a83f48b1 KVM: SVM: preserve VGIF across VMCB switch
36e2e98363e6c13288de6824b51866292dbc151d KVM: nSVM: synthesize correct EXITINTINFO on vmexit
e9fd761a46b8655aa5ff84b4adc0c8cf43952145 KVM: nSVM: remove HF_VINTR_MASK
08245e6d2e589f2b6e9e275ddb343e2ec9ce94ec KVM: nSVM: remove HF_HIF_MASK
ca46d739e3caf44dcd3db9eb8da30d0ff3aa9180 KVM: nSVM: split nested_vmcb_check_controls
c513f484c5582a8efadf3d72298e2285b041536e KVM: nSVM: leave guest mode when clearing EFER.SVME
929d1cfaa6926ccee28d8d4220e0b4e2defd9cd1 KVM: MMU: pass arbitrary CR0/CR4/EFER to kvm_init_shadow_mmu
cc440cdad5b7a4c1de12dace725209eb3e0cf663 KVM: nSVM: implement KVM_GET_NESTED_STATE and KVM_SET_NESTED_STATE
850448f35aaf45215276468d63c91ab1e230cf06 KVM: nVMX: Fix VMX preemption timer migration
827758129a0f84fbd0b2dda15e14a77a7604803d tools headers: Sync the various kvm.h header copies
e0d99c4d24fd8861da724b88ebd18a9fae8a2260 tools headers UAPI: Update tools's copy of kvm.h headers
c499d1f483a99e86a5f712277de7c8fa33a9ec0a tools arch kvm: Sync kvm headers with the kernel sources
8d7fbf01f9afc9ea1381de705013aa3ca453009f KVM: selftests: VMX preemption timer migration test
13ffbd8db1dd43d63d086517872a4e702a6bf309 KVM: selftests: fix rdtsc() for vmx_tsc_adjust_test
fd69c399c7d6262086b6b820757c6aeaa71feeba datagram: remove rendundant 'peeked' argument
3f926af3f4d688e2e11e7f8ed04e277a14d4d4a4 net: use skb_queue_empty_lockless() in busy poll contexts
b50b0580d27bc45a0637aefc8bac4d31aa85771a net: add queue argument to __skb_wait_for_more_packets and __skb_{,try_}recv_datagram
e27cca96cd68fa2c6814c90f9a1cfd36bb68c593 xfrm: add espintcp (RFC 8229)
9f0cadc32d738f0f0c8e30be83be7087c7b85ee5 xfrm: espintcp: save and call old ->sk_destruct
0146dca70b877b73c5fd9c67912b8a0ca8a7bac7 xfrm: add support for UDPv6 encapsulation of ESP
26333c37fc285e7372f1b9461f3ae0ba3dc699c9 xfrm: add IPv6 support for espintcp
dc24f8b4ecd3d6c4153a1ec1bc2006ab32a41b8d mptcp: add dummy icsk_sync_mss()
ab4e846a82d0ae00176de19f2db3c5c64f8eb5f2 tcp: annotate sk->sk_wmem_queued lockless reads
fc518953bc9c8d7d33c6ab261995f5038f3c87f9 mptcp: add and use MIB counter infrastructure
01cacb00b35cb62b139f07d5f84bcf0eeda8eff6 mptcp: add netlink-based PM
59832e246515ab6a4f5aa878073e6f415aa35166 mptcp: subflow: check parent mptcp socket on subflow state change
c85adced953af8eb443852c12e8ea1142de91b7c mptcp: add some missing pr_fmt defines
b4e0f9a926ec557cc0b91216957afd1b711bd45f mptcp/pm_netlink.c : add check for nla_put_in/6_addr
071c8ed6e88d2ac0a5f26948fb9c288fd4dd6e40 tcp: mptcp: use mptcp receive buffer space to select rcv window
263e1201a2c324b60b15ecda5de9ebf1e7293e31 mptcp: consolidate synack processing.
cfde141ea3faa30e362bbdb5c28001bbbdb0b8e0 mptcp: move option parsing into mptcp_incoming_options()
90bf45134d55d626ae2713cac50cda10c6c8b0c2 mptcp: add new sock flag to deal with join subflows
729cd6436f359b6e618c2f14836d419f40444503 mptcp: cope better with MP_JOIN failure
bd6972226f50910a5b97e6b9d443c5d0433bf054 mptcp: use untruncated hash in ADD_ADDR HMAC
fc25996e6f46ac05378f45691d9c6ea08c2037b9 mlxsw: spectrum_router: Increase scale of IPv6 nexthop groups
053e92aa3c20d37ab40692a851d63b4a40d1ff79 mlxsw: spectrum: Take devlink net instead of init_net
5bcfb6a45a614253a65ad45904fba4d93bde372d mlxsw: Propagate extack down to register_fib_notifier()
0d31441e87930dcf063ce9662194ebe1936747ed mlxsw: reg: Add Port Module Type Mapping register
73a533ecf0af5f73ff72dd7c96d1c8598ca93649 mlxsw: core: Enable devlink reload only on probe
ee5a0448e72b0857260e04f68126b2bfa27c154e mlxsw: spectrum_router: Set hardware flags for routes
5b051621609d535fac6bdcd232530cc5248e791d mlxsw: Add irif and erif disabled traps
196442ec5f13751ed0c66d5c4bc9b58288dea430 mlxsw: Add NON_ROUTABLE trap
a318bf621a6eabc45e51ed9297b4c01991bfd7e4 mlxsw: Add tunnel devlink-trap support
3aed0722f7d75240ab7ea0ee2813f6a82f53c60e mlxsw: Add OVERLAY_SMAC_MC trap
c43ef22843db4a415d43854eaae4b08b9dcae394 mlxsw: spectrum_router: Do not assume RTNL is taken during nexthop init
20bf5d82bbec128c3ead91c6f98cfcd45df21013 mlxsw: spectrum_router: Introduce router lock
50c173c3a1810d3441aaa074c3ba452238cad60a mlxsw: spectrum_router: Take router lock from exported helpers
3cbc37e6e96b1bbc174dd691a0aa79978ef4b1b6 mlxsw: spectrum_trap: Move policer initialization to mlxsw_sp_trap_init()
e612523041aba518dbe30975a09786ce62da70aa mlxsw: spectrum_trap: Introduce dummy group with thin policer
45dbee09058484165e5546e5463df5d6df346f9f mlxsw: spectrum_trap: Add ACL devlink-trap support
6de9fceeaa654a5470627817f7800aa849dd4489 mlxsw: spectrum_trap: Lookup and pass cookie down to devlink_trap_report()
ec4a514a6870ee3a83fb8788635cf871ee32e665 mlxsw: reg: Update module_type values in PMTM register and map them to width
03484e49e7ccc407f4d27c3233956c364591961f mlxsw: spectrum: Track used packet trap policer IDs
4561705b174314876c5fa9a8696f26dcdd9542f7 mlxsw: spectrum_trap: Prepare policers for registration with devlink
13f2e64b94eaf9131472a1102e1ee25b32e86fed mlxsw: spectrum_trap: Add devlink-trap policer support
bc82521e3b8e8cfa7e0136080c75a3af3a1b448a mlxsw: spectrum_trap: Do not initialize dedicated discard policer
d12d8468214ae940f4f42d198b3756f68a6d661e mlxsw: spectrum_trap: Switch to use correct packet trap group
39defcbba0cd24ef4d5547370c4d689d4a7863af mlxsw: spectrum_trap: Add support for setting of packet trap group parameters
9f3e63c5d69814a9df85f7f0fc77eac0765d4fba selftests: mlxsw: Add test cases for devlink-trap policers
468c2a100208461c1821315f6fd81b32b9d12561 mlxsw: spectrum_trap: fix unintention integer overflow on left shift
4c3f48380fedbd714fc95958f503c1b5adf3ee6b dm mpath: enhance queue_if_no_path debugging
f4e2f5e1a527ce58fc9f85145b03704779a3123e gfs2: Grab glock reference sooner in gfs2_add_revoke
405ecbf72f2eb4fc796c4c99ca4881e2cb2ab158 vfio/mdev: Avoid inline get and put parent helpers
522ecce08ab20b57342d65b05601818e0f95fb2c vfio/mdev: Improve the create/remove sequence
26c9e3988eec6b858c08b0fc352d8eb13832d828 vfio/mdev: Avoid creating sysfs remove file on stale device removal
5715c4dd66a315515eedef3fc4cbe1bf4620f009 vfio/mdev: Synchronize device create/remove with parent removal
db2cb969e8aed2395620fe2cb0bffd194c02b4b1 vfio: re-arrange vfio region definitions
35009c807488ccd5a01cbf102033695e52794b68 ACPI / utils: Introduce acpi_dev_hid_uid_match() helper
cfced786969c2a3e1bca45d7055a00311d93ae6c dma-mapping: remove the default map_resource implementation
4268ac6ae5870af10a7417b22990d615f72f77e2 dma-direct: don't check swiotlb=force in dma_direct_map_resource
9cc0c2af8d0387f3f99572bd7fe15ab41eb89bb9 iommu/vt-d: Use dma_direct for bypass devices
4e32348ba5269aac1165f496b78189201568dd8c iommu: Introduce device fault data
0c830e6b32826311fc2b9ea1f4679be0f4ef0933 iommu: Introduce device fault report API
bf3255b3cfe2d06280340dbac3f44b65d3ee6da3 iommu: Add recoverable fault reporting
58b55c859ac00c6845b6aed8852c541bc204c935 iommu: Add padding to struct iommu_fault
3fc1ca00653db6371585e3c21c4b873b2f20e60a swiotlb: Split size parameter to map/unmap APIs
cfb94a372f2d4ee226247447c863f8709863d170 iommu/vt-d: Use bounce buffer for untrusted devices
d127bc9be856098cc2410c1266ed64e258bc5377 iommu: Remove wrong default domain comments
9c24eaf81cc44d4bb38081c99eafd72ed85cf7f3 iommu/vt-d: Return the correct dma mask when we are bypassing the IOMMU
781ca2de89bae1b1d2c96df9ef33e9a324415995 iommu: Add gfp parameter to iommu_ops::map
be62dbf554c5b50718a54a359372c148cd9975c7 iommu/amd: Convert AMD iommu driver to the dma-iommu api
a7ba5c3d008dd78d881a1658eae5a2275ebd5087 drivers/iommu: Export core IOMMU API symbols to permit modular drivers
098accf2da940189f4d62d3514d17f8bb05dc6e1 iommu: Use C99 flexible array in fwspec
984d03adc9bdfb1bea408f9cc41a67214ccdffd3 iommu/vt-d: trace: Extend map_sg trace event
55c2564a6852d27d34938ec748a5f3903b335a0b iommu: amd: Use generic_iommu_put_resv_regions()
da72a379b2ec0bad3eb265787f7008bead0b040c iommu/vt-d: Ignore devices with out-of-spec domain number
25f003de987aed630db265ceae9cd978537a3f80 drivers/iommu: Take a ref to the IOMMU driver prior to ->add_device()
045a70426067d6a22e3e5745b55efc18fa75aabf iommu: Rename struct iommu_param to dev_iommu
72acd9df18f12420001f901493c54b7364f34d60 iommu: Move iommu_fwspec to struct dev_iommu
5375e874c7634f0e1795ec4b37260b724d481e86 iommu: Fix the memory leak in dev_iommu_free()
eb791aa70b90c559eeb371d807c8813d569393f0 iommu/amd: Fix race in increase_address_space()/fetch_pte()
5b8a9a047b6cad361405c7900c1e1cdd378c4589 iommu/amd: Do not loop forever when trying to increase address space
19c6978fba68a2cdedee7d55fb8c3063d47982d9 iommu/amd: Update Device Table in increase_address_space()
119b2b2c3e256f4bcff7439acc25ac1e9f1aaa4e iommu/amd: Do not flush Device Table in iommu_map_page()
0008d0c3b1ab03b046b04b7bd9d70df1e2fffbfc iommu: Define dev_iommu_fwspec_get() for !CONFIG_IOMMU_API
a2be6218e649fb6e444e468dae5d177eea64d328 iommu/arm-smmu-v3: Improve add_device() error handling
b7a9662f2c809e9778437aaf0e339279f4c8f3a1 iommu/arm-smmu-v3: Use accessor functions for iommu private data
2465170f98de5fef0d35bafc4dc29490d925ab36 iommu/arm-smmu: Refactor master_cfg/fwspec usage
c84500a365b4b4b29b7ec31b8e29a3f97b68cb3e iommu/arm-smmu: Use accessor functions for iommu private data
986d5ecc56999800a5d112a70e88522d9212aefd iommu: Move fwspec->iommu_priv to struct dev_iommu
8038bdb8553313ad53bfcffcf8294dd0ab44618f iommu/vt-d: Only clear real DMA device's context entries
4cbf38511a007867def958872203ae8adb8e2351 iommu: Add def_domain_type() callback in iommu_ops
a6a4c7e2c5b8b981d1c546a393ff21f2112468c3 iommu: Add probe_device() and release_device() call-backs
6e1aa2049154d7462968c968b20f985859308267 iommu: Move default domain allocation to iommu_probe_device()
41df6dcc0a3ff4fb654c3d969ab96ba9c4f0e796 iommu: Keep a list of allocated groups in __iommu_probe_device()
cf193888bfbd3d57e03a511e49d26f7d9c6f76df iommu: Move new probe_device path to separate function
deac0b3bed26bb5d04486696b1071d8ec3851100 iommu: Split off default domain allocation from group assignment
ce574c27ae275bc51b6437883fc9cd1c46b498e5 iommu: Move iommu_group_create_direct_mappings() out of iommu_group_add_device()
5012c3968537e2ffecbdb2eba3479bf9fb9e5597 iommu: Export bus_iommu_probe() and make is safe for re-probing
57f9842e48840684f596db1de936d7c6d44cd087 iommu/amd: Remove dev_data->passthrough
dce8d6964ebdb333383bacf5e7ab8c27df151218 iommu/amd: Convert to probe/release_device() call-backs
e5d1841f18b2401c8b449c024817cd243e363934 iommu/vt-d: Convert to probe/release_device() call-backs
cefa0d55da3753e969764fb4b161052a1cb4ddfb iommu/arm-smmu: Convert to probe/release_device() call-backs
3eeeb45c6d0444b368cdeba9bdafa8bbcf5370d1 iommu: Remove add_device()/remove_device() code-paths
4e8906f0d84d1a7d3cf82a30a701b0fb5d48977c iommu: Move more initialization to __iommu_probe_device()
1b032ec1ecbce6047af7d11c9db432e237cb17d8 iommu: Unexport iommu_group_get_for_dev()
f38338cf0691b5fae5f9a46d188eef92ab9e6296 iommu: Do not probe devices on IOMMU-less busses
327d5b2fee91c404a3956c324193892cf2cc9528 iommu/vt-d: Allow 32bit devices to uses DMA domain
6fc7020cf298aaec343df423746b44d99c6efaa5 iommu/vt-d: Apply per-device dma_ops
70b8170e55d3ca9503a53211967faee6b5f18b19 iommu: Don't call .probe_finalize() under group->mutex
79659190ee972c05498c338e48d80cb45490c533 iommu: Don't take group reference in iommu_alloc_default_domain()
e85bb99b79ca5ad2681612a7bb22f94cc2c71866 iommu/vt-d: Add get_domain_info() helper
431275afdc7155415254aef4bd3816a1b8a2ead0 iommu: Check for deferred attach in iommu_group_do_dma_attach()
b7d6c30333239f77f8e51423064a623acc7fd127 block: fix use-after-free on cached last_lookup partition
fbdcdd78da7c95f1b970d371e1b23cbd3aa990f3 Change in Openvswitch to support MPLS label depth of 3 in ingress direction
f66b53fdbb22ced1a323b22b9de84a61aacd8d18 openvswitch: New MPLS actions for layer 2 tunnelling
8526ad9646b17c59b6d430d8baa8f152a14fe177 netdevsim: fix panic in nsim_dev_take_snapshot_write()
6556ff32f12d0a5380dd2fa6bbaa01373925a7d1 netdevsim: use IS_ERR instead of IS_ERR_OR_NULL for debugfs
34611e6996f331399ee26382fdbc2bd009f9cdd6 netdevsim: fix ptr_ret.cocci warnings
e68bc75691cc3de608c2c7505057c948d13ae587 net: page_pool: add the possibility to sync DMA memory for device
0536b85239b8440735cdd910aae0eb076ebbb439 xdp: Simplify devmap cleanup
96360004b8628541f5d05a845ea213267db0b1a2 xdp: Make devmap flush_list common for all map instances
332f22a60e4c3492d4953cd6f7aaa4e8bd0bba97 xdp: Remove map_to_flush and map swap detection
1170beaa3fa3c3381fd820e9d05b84d168fe1dab xdp: Simplify __bpf_tx_xdp_map()
6b3acfc3cc3d54a99cc5148960edfc38c94a93f2 flow_dissector: fix document for skb_flow_get_icmp_tci
533420a4151e28e6a38a830cb876afddb5587d7d tools: Sync uapi/linux/if_link.h
75ccae62cb8d42a619323a85c577107b8b37d797 xdp: Move devmap bulk queue into struct net_device
1d233886dd904edbf239eeffe435c3308ae97625 xdp: Use bulking for non-map XDP_REDIRECT and consolidate code paths
58aa94f922c1b44e0919d1814d2eab5b9e8bf945 devmap: Adjust tracepoint for map-less queue flush
b23bfa5633b19bf1db87b36a76b2225c734f794c bpf, xdp: Remove no longer required rcu_read_{un}lock()
e25d5dbcffae62c9a7fa03517dfa4b8e67670e3d veth: ignore peer tx_dropped when counting local rx_dropped
5984dc6cb5aa6cce342a44f01f984fde09ed05b1 samples/bpf: Reintroduce missed build targets
05d57f1793fb250c85028c9952c3720010baa853 bpf: Fix trampoline usage in preempt
4331f4d5ada5684fc77fa16e3f6177f077c9e6ec x86: Fix kernel-doc atomic.h warnings
1c7f9b673dc0a15753274c4e7f5ebfd4468fc69f ftrace: Fix accounting bug with direct->count in register_ftrace_direct()
d195b1d1d1196681ac4775e0361e9cca70f740c2 powerpc/bpf: Enable bpf_probe_read{, str}() on powerpc again
1f6cb19be2e231fe092f40decb71f066eba090d7 bpf: Prevent re-mmap()'ing BPF map as writable for initially r/o mapping
bdebd6a2831b6fab69eb85cee74a8ba77f1a1cc2 vmalloc: fix remap_vmalloc_range() bounds checks
09c4708d3cf42b2b2211b1aee82e7baf446a24e8 libbpf: Bump libpf current version to v0.0.7
81c22041d9f19df07b9cba95e3cd02e0f41bc1e1 bpf, x86, arm64: Enable jit by default when not built as always-on
98e8627efcada18ac043a77b9101b4b4c768090b bpf: Move trampoline JIT image allocation to a function
75ccbef6369e94ecac696a152a998a978d41376b bpf: Introduce BPF dispatcher
7e6897f95935973c3253fd756135b5ea58043dc8 bpf, xdp: Start using the BPF dispatcher for XDP
116eb788f57c9c35c40b29cfaa2607020de99a84 bpf, x86: Align dispatcher branch targets to 16B
0d13bfce023ac7cef4d0a50b83750254ce31c479 libbpf: Don't require root for bpf_object__open()
d7a18ea7e8b612669acd0131fd075e5c735c1ce5 libbpf: Add generic bpf_program__attach()
917f6b7b07a46e53fa73e112d23c97d1b201a877 libbpf: Add BPF_EMBED_OBJ macro for embedding BPF .o files
3d208f4ca111a614903f49d5a77b93ddc6de294e libbpf: Expose btf__align_of() API
9f81654eebe8de7e0db15534816d8f6c84b2e1e5 libbpf: Expose BTF-to-C type declaration emitting API
01af3bf06755dc5cda7050fe5d898998e5775e63 libbpf: Expose BPF program's function name
13acb508ae203075134327551a6705e6e8f23d48 libbpf: Postpone BTF ID finding for TRACING programs to load phase
d66562fba1ce66975bd61b0786fb8b1810f33caa libbpf: Add BPF object skeleton support
f3c926a4df2cddf6230c3f56b1f43e439552cdad selftests/bpf: Add BPF skeletons selftests and convert attach_probe.c
dde53c1b763b5038545efa5d812758ce589654e1 selftests/bpf: Convert few more selftest to skeletons
166750bc1dd256b2184b22588fb9fe6d3fbb93ae libbpf: Support libbpf-provided extern variables
2ad97d473db57ab866f0756806bb94515f7f2551 bpftool: Generate externs datasec in BPF skeleton
a79ac2d1036a824abba982c33e938b717d1b659f libbpf: Fix build by renaming variables
5615ed472dc04e38a1affca69059f17c1178f770 samples/bpf: Add missing -lz to TPROGS_LDLIBS
92f7440ecc9331aa1e274273d4a3cb5c58b69706 selftests/bpf: More succinct Makefile output
4a3d6c6a6e4d652808729e7a2a8c3774a5a5c814 libbpf: Reduce log level for custom section names
5dc7a8b2114479fd945956ece9875f747a996a8e bpftool, selftests/bpf: Embed object file inside skeleton
3bf3c79b772f4155312c000310abab700aba2200 libbpf: Remove BPF_EMBED_OBJ macro from libbpf.h
7c43e0d6a526e7734eb854fe242886f52ccd06ac bpftool: Simplify format string to not use positional args
d69587062c347314a019cf6ee27f2e4b494868e1 libbpf: Add bpf_link__disconnect() API to preserve underlying BPF resource
81bfdd087bf31a87c5ff25cc7004d5308954a35c libbpf: Put Kconfig externs into .kconfig section
8601fd422148a8f7ff5f7eaf75b6703d5166332c libbpf: Allow to augment system Kconfig through extra optional config
7745ff9842617323adbe24e71c495d5ebd9aa352 libbpf: Fix another __u64 printf warning
7dd68b3279f1792103d12e69933db3128c6d416e bpf: Support replacing cgroup-bpf program in MULTI mode
cdbee3839cd91a4577425c43cf064b9523926159 libbpf: Introduce bpf_prog_attach_xattr
257c88559f360ef40d251942f1f9f0c55f5f91ca selftests/bpf: Convert test_cgroup_attach to prog_tests
06ac0186bd242d44f5703ce64ee0077b317c86bb selftests/bpf: Test BPF_F_REPLACE in cgroup_attach_multi
478bee0df0ec9067c12e7d058d78721a7e7a1b29 selftests/bpf: Preserve errno in test_progs CHECK macros
7c8dce4b166113743adad131b5a24c4acc12f92c bpftool: Make skeleton C code compilable with C++ compiler
5ff051200308ab6f4c64c0fe52187bf4a1234dac libbpf: Add probe for large INSN limit
275517ff452a535da5eef25b1c22e53fc50b0a12 bpf: Avoid storing modifier to info->btf_id
218b3f65f9081f5e1bffe6de5f0f4b22c935410b bpf: Add enum support to btf_ctx_access()
27ae7997a66174cb8afd6a75b3989f5e0c1b9e5a bpf: Introduce BPF_PROG_TYPE_STRUCT_OPS
85d33df357b634649ddbe0a20fd2d0fc5732c3cb bpf: Introduce BPF_MAP_TYPE_STRUCT_OPS
0baf26b0fcd74bbfcef53c5d5e8bad2b99c8d0d2 bpf: tcp: Support tcp_congestion_ops in bpf
206057fe020ac5c037d5e2dd6562a9bd216ec765 bpf: Add BPF_FUNC_tcp_send_ack helper
17328d618c17e0c8deab892ac227efcd55957e4d bpf: Synch uapi bpf.h to tools/
590a0088825016ca7ec53f1aef7e84e1211778d8 bpf: libbpf: Add STRUCT_OPS support
f5bfcd953d811dbb8913de36b96b38da6bb62135 bpf: Document BPF_F_QUERY_EFFECTIVE flag
2031af28a42f18cc65ec3aa85b4e5cfdf5ee0fe8 libbpf,selftests/bpf: Fix clean targets
6910d7d3867a8e65eaecb18a9527ecc9eb2e5edf selftests/bpf: Ensure bpf_helper_defs.h are taken from selftests dir
965b9fee28d062c79a5fdaa3dfbe04c5129ee63d selftests/bpf: Further clean up Makefile output
51c39bb1d5d105a02e29aa7960f0a395086e6342 bpf: Introduce function-by-function verification
6db2d81a46f99edb5690cf0b03bbe3b7f29dfd7b selftests/bpf: Add a test for a large global function
1d1a3bcffe360a56fd8cc287ed74d4c3066daf42 libbpf: Poison kernel-only integer types
292e1d73b125d7a3fd7ff382557e003ece3c0d65 libbpf: Clean up bpf_helper_defs.h generation output
2cc51d34d93c9cf76128da6535a2a0a38c9faddb selftests/bpf: Conform selftests/bpf Makefile output to libbpf and bpftool
3a0d3092a4edbbcd62360c44a931c8feaf4b4ff1 selftests/bpf: Build runqslower from selftests
3b4130418f62b0e7a4685cc2c03bb41c6cb8922d bpf: Fix seq_show for BPF_MAP_TYPE_STRUCT_OPS
8482941f09067da42f9c3362e15bfb3f3c19d610 bpf: Add bpf_send_signal_thread() helper
15c14a3dca421f086c187155afba3222b879472d bpf: Add bpf_map_{value_size, update_value, map_copy_value} functions
cb4d03ab499d4c040f4ab6fd4389d2b49f42b5a5 bpf: Add generic support for lookup batch op
aa2e93b8e58e18442edfb2427446732415bc215e bpf: Add generic support for update and delete batch ops
057996380a42bb64ccc04383cfa9c0ace4ea11f0 bpf: Add batch ops to all htab bpf map
2ab3d86ea1859d1a4b830ce3551cba725620593a libbpf: Add libbpf support to batch ops
fb2426ad00b136c88d57457504d1e843159a367a libbpf: Expose bpf_find_kernel_btf as a LIBBPF_API
b65053cd94f46619b4aae746b98f2d8d9274540e selftests/bpf: Add whitelist/blacklist of test names to test_progs
858e284f0ec18bff2620d9a6afe764dc683f8ba1 libbpf: Fix unneeded extra initialization in bpf_map_batch_common
81f2b572cf4fd5c4178fe0e2b5bb1ab096385fd8 bpf: Remove set but not used variable 'first_key'
bc0eb9a333918d2cc4f42f7f4cf09eaf029ac9de libbpf: Fix error handling bug in btf_dump__new
b7d7f3e185b6e643dcd49d1486b11cade8519008 libbpf: Simplify BTF initialization logic
a6ed02cac690b635dbb938690e795812ce1e14ca libbpf: Load btf_vmlinux only once per object.
2e3a94aa2bfc6de95a0700f0a868c6f5db3a9592 bpf: Fix memory leaks in generic update/delete batch ops
a835d38d41ca4f8eab5f97512446212f42f094a1 tools/bpf/runqslower: Fix override option for VMLINUX_BTF
bfe42797bc7e962f01028436e106769ca9338b65 selftests: Pass VMLINUX_BTF to runqslower Makefile
3e689141e64df91b009a289c0559adedfe62f511 selftests: Use consistent include paths for libbpf
7cf245a37ef013b2c1c5ca7ae25061de2ba7ad01 samples/bpf: Use consistent include paths for libbpf
a2c9652f751e3ab39738e2b30bc45293d53604fd selftests: Refactor build to remove tools/lib/bpf from include path
f59bbfc2f6099e8655f9e8f585e10ffde17176d0 bpf: Fix error path under memory pressure
1222653cc0489fa9304a36f7d9593ecaeb51efe1 selftests/bpf: Build urandom_read with LDFLAGS and LDLIBS
be8704ff07d2374bcc5c675526f95e70c6459683 bpf: Introduce dynamic program extensions
2db6eab18b9778d55f48c804f8efebd7097e7958 libbpf: Add support for program extensions
7805fe843964f81f98592bf580b9cd736ac4ad4c selftests/bpf: Add tests for program extensions
5576b991e9c1a11d2cc21c4b94fc75ec27603896 bpf: Add BPF_FUNC_jiffies64
6de4a9c430b57c6ebbccd2a1725f42e9be75f592 bpf: tcp: Add bpf_cubic example
1a6fa10640d97e16d4184fa1c24aa8c3337d4653 selftests/bpf: Initialize duration variable before using
03506297d205e5fa25b5ead0f6338b5a4a996a93 selftests/bpf: Improve bpftool changes detection
d7a252708dbc950ca2064310217e8b9f85846e2f libbpf: Improve handling of failed CO-RE relocations
e9b4e606c2289d6610113253922bb8c9ac7f68b0 bpf: Allow to resolve bpf trampoline and dispatcher in unwind
d3e42bb0a329fadff98fcb927714d0a486840e3b bpf: Reuse log from btf_prase_vmlinux() in btf_struct_ops_init()
2bf0eb9b3b0d099b20b2c4736436b666d78b94d5 bpf: Make btf_check_func_type_match() static
113e6b7e15e23dc45d5c66eb66bb91a627812e36 libbpf: Sanitise internal map names so they are not rejected by the kernel
492e0d0d6f2eb4badfd2868addf9da0f651eba0e bpf: Do not grab the bucket spinlock by default on htab batch ops
b9aff38de2cb166476988020428985c5f7412ffc bpf: Fix a potential deadlock with bpf_map_do_batch
8e5290e710f4ffe8e9f8813e2ed0397a94d7b2f1 bpf: Return better error value in delete_elem for struct_ops map
849b4d94582a966ecb533448415462846da1f0fa bpf: Do not allow map_freeze in struct_ops map
8e7ae2518f5265f0ef09d561748098fde5a87ccd bpf: Sanitize the bpf_struct_ops tcp-cc name
03f87c0b45b177ba5f6b4a9bbe9f95e4aba31026 bpf: Propagate expected_attach_type when verifying freplace programs
396f544ed5e5a9c40de5663b774f643644cba059 selftests/bpf: Fix BPF_KRETPROBE macro and use it in attach_probe test
775a2be52da1c55fc810a5d151049f86f0fd5362 selftests/bpf: Declare bpf_log_buf variables as static
320a36063e1441210106aa33997ad3770d4c86b4 libbpf: Fix handling of optional field_name in btf_dump__emit_type_decl
e0360423d0204eb22f97ed89ba56da496bb9a094 selftests/bpf: Run SYN cookies with reuseport BPF test only for TCP
8ff3571f7e1bf3f293cc5e3dc14f2943f4fa7fcf bpf: Fix handling of XADD on BTF memory
642c1654702731ab42a3be771bebbd6ef938f0dc selftests/bpf: Validate frozen map contents stays frozen
333291ce5055f2039afc907badaf5b66bc1adfdc bpf: Fix bug in mmap() implementation for BPF array map
bb2359f4dbe98e8863b4e885fc09269ef4682ec3 bpf: Change kvfree to kfree in generic_map_lookup_batch()
e4e8f4d047fdcf7ac7d944e266e85d8041f16cd6 selftests/bpf: Add runqslower binary to .gitignore
3521ffa2ee9a48c3236c93f54ae11c074490ebce libbpf: Fix huge memory leak in libbpf_find_vmlinux_btf_id()
f25d5416d64c796aa639136eb0b076c8bd579b54 selftests/bpf: Fix memory leak in test selector
b26d1e2b60284dc9f66ffad9ccd5c5da1100bb4b selftests/bpf: Copy runqslower to OUTPUT directory
1d8a0af5ee1ad219a9ebd9b43559b165bcb3ff40 selftests/bpf: Add test for freplace program with expected_attach_type
68f23b89067fdf187763e75a56087550624fdbee memcg: fix a crash in wb_workfn when a device disappears
eb7ae5e06bb6e6ac6bb86872d27c43ebab92f6b2 bdi: move bdi_dev_name out of line
6bd87eec23cbc9ed222bed0f5b5b02bf300e9a8d bdi: add a ->dev_name field to struct backing_dev_info
fb73974172ffaaf57a7c42f35424d9aece1a5af6 selinux: properly handle multiple messages in selinux_netlink_send()
ae94da898133947c2d1f005da10838478e4548db hugetlbfs: add arch_hugetlb_valid_size
8df995f6bde01de96ce93373785f41c3bd13ad1c mm: simplify MEMORY_ISOLATION && COMPACTION || CMA into CONTIG_ALLOC
359f25443a8dada0fb709dd044a422017031790f hugetlbfs: move hugepagesz= parsing to arch independent code
38237830882ba8d425a397066982d5e32b4ced21 hugetlbfs: remove hugetlb_add_hstate() warning for existing hstate
282f4214384ee2e2ca39b2532a5296fddf762518 hugetlbfs: clean up command line processing
c2833a5bf75b3657c4dd20b3709c8c702754cb1f hugetlbfs: fix changes to command line processing
db38d5c106dfdd7cb7207c83267d82fdf4950b61 kernel: add panic_on_taint
e77132e75845470065768e2205727e6be52cb7f4 kernel/sysctl.c: ignore out-of-range taint bits introduced via kernel.tainted
92ce7e83b4e5c86687d748ba53cb755acdce1256 driver_find_device: Unify the match function with class_find_device()
00500147cbd3fc51353d0d003eaa9d31c72c0d50 drivers: Introduce device lookup variants by ACPI_COMPANION device
644bf60088955421051e716ab9c8fe7fb7997fd7 i2c: Revert incorrect conversion to use generic helper
1770093c5bed404ac69b04dc8b9e62a2c4db944a ACPICA: make acpi_load_table() return table index
33dd70752cd76f4d883a165a674f13121a4155ed lib: Uplevel the pmem "region" ida to a global allocator
a6c7f4c6aea5f4ca6056b06cec7ebd79f8c23e33 device-dax: Add a driver for "hmem" devices
b617c5266eedbef2ccbb90931bb9175faa4ae0bc efi: Common enable/disable infrastructure for EFI soft reservation
262b45ae3ab4bf8e2caf1fcfd0d8307897519630 x86/efi: EFI soft reservation to E820 enumeration
c710fcc5d95a5e0d1648c40c0b101e198bfc3459 ACPI: NUMA: Establish a new drivers/acpi/numa/ directory
8c53b318b222eff55d2900b554094a099b1a30f6 ACPI/sleep: Convert acpi_wakeup_address into a function
d19e470b6605c900db21fc7b34c66b6891a79983 ACPI: fan: Expose fan performance state information
89535821c04256964e266bf585cf224f65e08983 iommu/arm-smmu-v3: Parse PASID devicetree property of platform devices
dce730f17825f4814649c1ba7970af5737415c78 ice: add a devlink region for dumping NVM contents
540f76d12c662d3da2ebdf0086ee289123fcd120 arm64: cpufeature: Add CPU capability for AArch32 EL1 support
02ab1f5018c3ad0b8677e797b5d3333d2e3b7f20 arm64: Unify WORKAROUND_SPECULATIVE_AT_{NVHE,VHE}
9ed24f4b712b855dcf7be3025b75b051cb73a2b7 KVM: arm64: Move virt/kvm/arm to arch/arm64
d82755b2e781c8989614c82df7582f5649e265b8 KVM: arm64: Kill off CONFIG_KVM_ARM_HOST
f26133624d602b0d984815168a2d3a1f630b02e2 KVM: arm64: Change CONFIG_KVM to a menuconfig entry
25357de01b95140ecacd4d9347d74df2dda789f2 KVM: arm64: Clean up kvm makefiles
656012c731fcfd0f770007366e2b952a613745f2 KVM: Fix spelling in code comments
0529c9021252a58b6d3808da86986a614b900b1b KVM: arm64: Unify handling THP backed host memory
f73531f0257f6bac44a8c9d5c2f3a3ccaea3d1e9 arm64/cpufeature: Drop open encodings while extracting parange
71b3ec5f221b8b3ff545639be83ddfcd5d7c9800 KVM: arm64: Clean up cpu_init_hyp_mode()
438f711ce1d889632467be80779c8f5762b107d7 KVM: arm64: Fix incorrect comment on kvm_get_hyp_vector()
fe677be989146b8a8c0f26fe626c6567c4cd3837 KVM: arm64: Move __load_guest_stage2 to kvm_mmu.h
72ef5e52b3f74c0be47b20f5c434b7ecc830cf40 docs: fix broken references to text files
6954a9e4192b86d778fb52b525fd7b62d51b1147 ibmvnic: Flush existing work items before device removal
64f5e9cdd711b030b05062c17b2ecfbce890cf4c nvmet: fix memory leak when removing namespaces and controllers concurrently
1cdf9f7670a7d74e27177d5c390c2f8b3b9ba338 nvmet: cleanups the loop in nvmet_async_events_process
696ece751366e7a02a81fa0228125fe25a47969d nvmet: add async event tracing support
819f7b88b48fd2bce932cfe3a38bf8fcefbcabe7 nvmet: fail outstanding host posted AEN req
960bf87a4fbe46bec1e69fcb6868f43c3c3c9456 scsi: libiscsi: Use scsi_[gs]et_resid() where appropriate
0a0762c6c604bb0ce8afe4ee052514e0208152a0 sunrpc: no need to check return value of debugfs_create functions
b5e924191f87239e555f3ef3b8d8e697bb95e7dc SUNRPC: Remove the bh-safe lock requirement on xprt->transport_lock
419e2f1838819e954071dfa1d1f820ab3386ada1 dma-mapping: remove arch_dma_mmap_pgprot
8e3a68fb55e00e0760bd8023883e064f1f93c62d dma-mapping: make dma_atomic_pool_init self-contained
6ba99411b858bd70bae966633561e698cd6de38c dma-mapping: introduce dma_get_merge_boundary()
f9f3232a7d0ab73a33d11f4056c5823010f03d55 dma-mapping: explicitly wire up ->mmap and ->get_sgtable
62fcee9a3bd73e279d3052245a652a918d0c51da dma-mapping: remove CONFIG_ARCH_NO_COHERENT_DMA_MMAP
512317401f6a337e617ec284d20dec5fa3a951ec dma-mapping: always use VM_DMA_COHERENT for generic DMA remap
5cf4537975bbd5691b9ddd015d540bb92f61e322 dma-mapping: introduce a dma_common_find_pages helper
2cf2aa6a69db0b17b3979144287af8775c1c1534 dma-mapping: fix false positivse warnings in dma_common_free_remap()
a573cdd7973dedd87e62196c400332896bb236c8 arm64: rename variables used to calculate ZONE_DMA32's size
9739ab7eda459f0669ec9807e0d9be5020bab88c powerpc: enable a 30-bit ZONE_DMA for 32-bit pmac
03800e0526ee25ed7c843ca1e57b69ac2a5af642 powerpc: fix off by one in max_zone_pfn initialization for ZONE_DMA
8b5369ea580964dbc982781bfb9fb93459fc5e8d dma/direct: turn ARCH_ZONE_DMA_BITS into a variable
34dc0ea6bc960f1f57b2148f01a3f4da23f87013 dma-direct: provide mmap and get_sgtable method overrides
3acac065508f6cc60ac9d3e4b7c6cc37fd91d531 dma-mapping: merge the generic remapping helpers into dma-direct
b4dca1512941aa8fec33c28939abc2bba4a2c78c swiotlb-xen: simplify cache maintainance
56e35f9c5b87ec1ae93e483284e189c84388de16 dma-mapping: drop the dev argument to arch_sync_dma_for_*
68a33b1794665ba8a1d1ef1d3bfcc7c587d380a6 dma-direct: exclude dma_direct_map_resource from the min_low_pfn check
130c1ccbf55330b55e82612a6e54eebb82c9d746 dma-direct: unify the dma_capable definitions
a7ba70f1787f977f970cd116076c6fce4b9e01cc dma-mapping: treat dev->bus_dma_mask as a DMA limit
91ef26f914171cf753330f13724fd9142b5b1640 dma-direct: relax addressability checks in dma_direct_supported
4a47cbae04844f0c5e2365aa6c217b61850bb832 dma-direct: improve swiotlb error reporting
75467ee48a5e04cf3ae3cb39aea6adee73aeff91 dma-direct: improve DMA mask overflow reporting
b80b033bedae68dae8fc703ab8a69811ce678f2e bpf: Allow bpf_perf_event_read_value in all BPF programs
fff7b64355eac6e29b50229ad1512315bc04b44e bpf: Add bpf_read_branch_records() helper
67306f84ca78c2ca5136f21791710c126a55a19b selftests/bpf: Add bpf_read_branch_records() selftest
83250f2b6940654a73a2cfab7ac112b804a5f648 selftests/bpf: Change llvm flag -mcpu=probe to -mcpu=v3
5327644614a18f5d0ff845844a4e9976210b3d8d libbpf: Relax check whether BTF is mandatory
dd88aed92d017bed2a2c0023f22f0eef7cd29702 libbpf: Bump libpf current version to v0.0.8
ff26ce5cd7680ebc9c5446cda013e2087decc60f libbpf: Add support for dynamic program attach target
dbca151cad736c99f4817076daf9fd02ed0c2daa bpf: Update locking comment in hashtab code
3c58482a382bae89410439247152eb342e9872f7 bpf: Provide bpf_prog_run_pin_on_cpu() helper
37e1d9202225635772b32e340294208367279c2b bpf: Replace cant_sleep() with cant_migrate()
02ad05965491ca72034327d47da6cb25f3a92603 bpf: Use migrate_disable/enabe() in trampoline code.
085fee1a72a9fba101a4a68a2c02fa8bd2b6f913 bpf: Use recursion prevention helpers in hashtab code
b6e5dae15a61b0cc9219799926813baad0b58967 bpf: Replace open coded recursion prevention in sys_bpf()
d01f9b198ca985b49717d8cd0b1f57806cb1319a bpf: Factor out hashtab bucket lock operations
7f805d17f1523c7b2c0da319ddb427d6c5d94ff1 bpf: Prepare hashtab locking for PREEMPT_RT
099bfaa731ec347d3f16a463ae53b88a1700c0af bpf/stackmap: Dont trylock mmap_sem with PREEMPT_RT and interrupts disabled
9fb156bb82a33f01708fbbb8828836a4219efc3d selftests/bpf: Print backtrace on SIGSEGV in test_progs
3494bec0f6ac8ac06e0ad7c35933db345b2c5a83 bpftool: Support struct_ops, tracing, ext prog types
df8ff35311c8d10d90b4604c02b32c361dc997aa libbpf: Merge selftests' bpf_trace_helpers.h into libbpf's bpf_tracing.h
70ed506c3bbcfa846d4636b23051ca79fa4781f7 bpf: Introduce pinnable bpf_link abstraction
c016b68edc7a2adf3db0f11fb649797c1f9216ea libbpf: Add bpf_link pinning/unpinning
0a49c1a8e26266ad505704f54f9fdaf2ae14cbdb bpf: Sync uapi bpf.h to tools/
1aae4bdd787998ea331a56f3db9d8595790fe2f9 bpf: Switch BPF UAPI #define constants used from BPF program side to enums
cc6fa771024ffdb428bdf25a94309cf21e8ef1b9 selftests/bpf: Support out-of-tree vmlinux builds for VMLINUX_BTF
88fd9e5352fe05f7fe57778293aebd4cd106960b bpf: Refactor trampoline update code
7e639208e88d60abf83d48dfda4c0ad325a77b58 bpf: JIT helpers for fmod_ret progs
ae24082331d9bbaae283aafbe930a8f0eb85605a bpf: Introduce BPF_MODIFY_RETURN
6ba43b761c41349140662e223401bec0e48950e7 bpf: Attachment verification for BPF_MODIFY_RETURN
aca228cd3387447d99d3ebaee3ebcc2b015a3e46 tools/libbpf: Add support for BPF_MODIFY_RETURN
da00d2f117a08fbca262db5ea422c80a568b112b bpf: Add test ops for BPF_PROG_TYPE_TRACING
3d08b6f29cf33aeaf301553d8d3805f0aa609df7 bpf: Add selftests for BPF_MODIFY_RETURN
69191754ff299a64575003d9e2a79db190d27115 bpf: Remove unnecessary CAP_MAC_ADMIN check
7b70973d7edb2f005511102d5a2e0116464a46a1 bpf: sockmap: Only check ULP for TCP sockets
edc6741cc66059532ba621928e3f1b02a53a2f39 bpf: Add sockmap hooks for UDP sockets
babf3164095b0670435910340c2a1eec37757b57 bpf: Add bpf_link_new_file that doesn't install FD
13fac1d851e09109096b5862bf37c3da6908fb48 bpf: Fix trampoline generation for fmod_ret programs
14e5728ff8176d4d5924b0bf5ab9b1c94d6b3381 bpftool: Only build bpftool-prog-profile if supported by clang
b35f14f410416f06ec54d187dedc372405757290 libbpf: Split BTF presence checks into libbpf- and kernel-specific parts
b4490c5c4e023f09b7d27c9a9d3e7ad7d09ea6bf bpf: Added new helper bpf_get_ns_current_pid_tgid
1c1052e0140af8f211c283c0a333ecff2a6edfc9 tools/testing/selftests/bpf: Add self-tests for new helper bpf_get_ns_current_pid_tgid.
d831ee84bfc9173eecf30dbbc2553ae81b996c60 bpf: Add bpf_xdp_output() helper
6a64037d4bf252bb8cf13917320c8e001da8997a bpf: Add bpf_trampoline_ name prefix for DECLARE_BPF_DISPATCHER
535911c80ad4f5801700e9d827a1985bbff41519 bpf: Add struct bpf_ksym
bfea9a8574f34597581f74f792d044d38497b775 bpf: Add name to struct bpf_ksym
ecb60d1c670e9b205197d8e4381b19e77bc2d834 bpf: Move lnode list node to struct bpf_ksym
ca4424c920f574b7246ff1b6d83cfdfd709e42c8 bpf: Move ksym_tnode to bpf_ksym
4cd729fa022cb5142e5b65f25589af61c8148cf6 selftests/bpf: Make tcp_rtt test more robust to failures
eda0c92902b57bbde674c27882554b074e9180a6 bpf: Add bpf_ksym_find function
98868668367b24487c0b0b3298d7ca98409baf07 bpf: Abstract away entire bpf_link clean up procedure
cbd76f8d5ac9c4e99c4ffe5e39a1e907cdf5a76f bpf: Add prog flag to struct bpf_ksym object
dba122fb5e122e8e07e2f11cdebc10ba4f425cf7 bpf: Add bpf_ksym_add/del functions
a108f7dcfa010e3da825af90d77ac0a6a0240992 bpf: Add trampolines to kallsyms
517b75e44c7be9c776aa5f7beaa85baff3868f80 bpf: Add dispatchers to kallsyms
7ac88eba185b4d0e06a71678e54bc092edcd3af3 bpf: Remove bpf_image tree
dcce11d545cc5d04c3fb529a8e2a0da987389139 bpf: Add missing annotations for __bpf_prog_enter() and __bpf_prog_exit()
bcd66b10b5e956b3e81f76a61abfed2501ff4038 tools/bpf: Move linux/types.h for selftests and bpftool
3e2671fb9a95d2b46990832466383ec8384d88a3 selftests/bpf: Ensure consistent test failure output
acbd06206bbbe59ffd2415c0b902dd244910e42e selftests/bpf: Add vmlinux.h selftest exercising tracing of syscalls
41078907eef0dd508d0999996d10683ae114c21a selftests/bpf: Fix nanosleep for real this time
94c2f50b61258381abcd3a33fd5f2bc87e26df11 selftests/bpf: Fix race in tcp_rtt test
fd27b1835e7079d26809cd4d33ba98f84e593766 selftests/bpf: Reset process and thread affinity after each test/sub-test
483d7a30f538e2f8addd32aa9a3d2e94ae55fa65 bpf, libbpf: Fix ___bpf_kretprobe_args1(x) macro definition
1440e7929392297f1578a54f372e9821bb1b0658 selftests/bpf: Fix mix of tabs and spaces
ab14fd4ee82ead4b058034509971b8bd749862ff bpf: Add bpf_sk_storage support to bpf_tcp_ca
c9b24312040edaa89acb6fb91a9a53fb4775309e bpf: Add tests for bpf_sk_storage to bpf_tcp_ca
aa5e2af660fc6e35b9518d68dd7e1bb736e9f7e7 samples, bpf: Refactor perf_event user program with libbpf bpf_link
00c4eddf7ee5cb4941d669d605815454dc9a5419 bpf: Factor out cgroup storages operations
e28784e3781e19f546bd2c2cd7c1c4e7c54e7f73 bpf: Factor out attach_type to prog_type mapping for attach/detach
f54a5bba120398e4d404e9553e6b92e6822eade0 bpf: Remove unused vairable 'bpf_xdp_link_lops'
f318903c0bf42448b4c884732df2bbb0ef7a2284 bpf: Add netns cookie and enable it for bpf cgroup hooks
0f09abd105da6c37713d2b253730a86cb45e127a bpf: Enable bpf cgroup hooks to retrieve cgroup v2 and ancestor id
834ebca8456c5f7a03d3351227b7c59318ccab62 bpf: Enable retrival of pid/tgid/comm from bpf cgroup hooks
e9ff9d52540a53ce8c9eff5bf8b66467fe81eb2b bpf: Fix build warning regarding missing prototypes
e2842be53d4f31962a9992eab39391cdf637fa2e libbpf: Add setter for initial value for internal maps
fc611f47f2188ade2b48ff6902d5cce8baac0c58 bpf: Introduce BPF_PROG_TYPE_LSM
9d3fdea789c8fab51381c2d609932fabe94c0517 bpf: lsm: Provide attachment points for BPF LSM programs
9e4e01dfd3254c7f04f24b7c6b29596bc12332f3 bpf: lsm: Implement attach, detach and execution
1e092a0318292637cde832868016f37e942eed24 tools/libbpf: Add support for BPF_PROG_TYPE_LSM
f50b49a0bfcaf53e6394a873b588bc4cca2aab78 bpf: btf: Fix arg verification in btf_ctx_access()
cf7fbe660f2dbd738ab58aea8e9b0ca6ad232449 bpf: Add socket assign support
71489e21d720a09388b565d60ef87ae993c10528 net: Track socket refcounts in skb_steal_sock()
7ae215d23c12a939005f35d1848ca55b6109b9c0 bpf: Don't refcount LISTEN sockets in sk_assign()
4edf16b72c57bb0faad5da143f812384df0c43f6 bpf, lsm: Make BPF_LSM depend on BPF_EVENTS
3f50f132d8400e129fc9eb68b5020167ef80a244 bpf: Verifier, do explicit ALU32 bounds tracking
af6eea57437a830293eab56246b6025cc7d46ee7 bpf: Implement bpf_link-based cgroup BPF program attachment
0c991ebc8c69d29b7fc44db17075c5aa5253e2ab bpf: Implement bpf_prog replacement for an active bpf_cgroup_link
cc4f864bb118e0ae7bf9f4e3418eaeb083aa34f2 libbpf: Add support for bpf_link-based cgroup attachment
8e368dc72e86ad1e1a612416f32d5ad22dca88bc bpf: Fix use of sk->sk_reuseport from sk_assign
25498a1969bf3687c29c29bbac92821d7a0f8b4a libbpf: Always specify expected_attach_type on program load if supported
4adb7a4a151c65ac7e9c3a1aa462c84190d48385 bpf: Fix leak in LINK_UPDATE and enforce empty old_prog_fd
6f302bfb221470e712ce3e5911fb83cdca174387 bpf: Make bpf_link_fops static
dfeb376dd4cb2c5004aeb625e2475f58a5ff2ea7 bpf: Prevent mmap()'ing read-only maps as writable
18644cec714aabbab173729192c7594ee57a406b bpf: Fix use-after-free in fmod_ret check
3a71dc366d4aa51a22f385445f2862231d3fda3b bpf: Fix a verifier issue when assigning 32bit reg states to 64bit ones
f9d041271cf44ca02eed0cc82e1a6d8c814c53ed bpf: Refactor bpf_link update handling
0c047ecbb7bab4c1d2136f5f04bb47a66a9a12b8 bpf, cgroup: Return ENOLINK for auto-detached links on update
8d30e80a049ad699264e4a12911e349f93c7279a selftests/bpf: Fix bpf_link leak in ns_current_pid_tgid selftest
248e00ac47d64e153b9c50f45aad73cd61894a73 bpf: cgroup: Allow multi-attach program to replace itself
fe537393b5795ecbe5746eec0e16124bc998a594 bpf: Fix returned error sign when link doesn't support updates
d7f10df86202273155a9d8f8553bc2ad28e0dd46 bpf: Replace zero-length array with flexible-array member
556d687a4ccd54ab50a721ddde42c820545effd9 compat: ARM64: always include asm-generic/compat.h
80cd795630d6526ba729a089a435bf74a57af927 binder: fix use-after-free due to ksys_close() during fdget()
75b28affdd6aed1c68073ef53907c7bd822aff84 io_uring: allocate the two rings together
ac90f249e15cd2a850daa9e36e15f81ce1ff6550 io_uring: expose single mmap capability
5262f567987d3c30052b22e78c35c2313d07b230 io_uring: IORING_OP_TIMEOUT support
daa5de5415849b9a53056ec1e1e88fe4c5c9aa2b io_uring: compare cached_cq_tail with cq.head in_io_uring_poll
bda521624e75c665c407b3d9cece6e7a28178cd8 io_uring: make CQ ring wakeups be more efficient
bdf200731145f07a6127cb16753e2e8fdc159cf4 io_uring: use __kernel_timespec in timeout ABI
7adf4eaf60f3d8c3584bed51fe7066d4dfc2cbe1 io_uring: fix sequence logic for timeout requests
5da0fb1ab34ccfe6d49210b4f5a739c59fcbf25e io_uring: consider the overflow of sequence for timeout req
491381ce07ca57f68c49c79a8a43da5b60749e32 io_uring: fix up O_NONBLOCK handling for sockets
8b07a65ad30e5612d9590fb50468ff4fa314cfc7 io_uring: fix logic error in io_timeout
bc808bced39f4e4b626c5ea8c63d5e41fce7205a io_uring: revert "io_uring: optimize submit_and_wait API"
ef03681ae8df770745978148a7fb84796ae99cba io_uring : correct timeout req sequence when waiting timeout
a1f58ba46f794b1168d1107befcf3d4b9f9fd453 io_uring: correct timeout req sequence when inserting a new entry
fb5ccc98782f654778cb8d96ba8a998304f9a51f io_uring: Fix broken links with offloading
498ccd9eda49117c34e0041563d0da6ac40e52b8 io_uring: used cached copies of sq->dropped and cq->overflow
044c1ab399afbe9f2ebef49a3204ef1509826dc7 io_uring: don't touch ctx in setup after ring fd install
ba816ad61fdf31f59f423a773b00bfa2ed38243a io_uring: run dependent links inline if possible
ba5290ccb6b57fc5e274ae46d051fba1f0ece262 io_uring: replace s->needs_lock with s->in_async
a41525ab2e75987e809926352ebc6f1397da900e io_uring: add support for absolute timeouts
11365043e5271fea4c92189a976833da477a3a44 io_uring: add support for canceling timeout requests
c826bd7a743f275e2b68c16d595534063b400deb io_uring: add set of tracing events
95a1b3ff9a3e4ea2f26c4e802067d58831f415db io_uring: Fix mm_fault with READ/WRITE_FIXED
771b53d033e8663abdf59704806aa856b236dcdb io-wq: small threadpool implementation for io_uring
561fb04a6a2257716738dac2ed812f377c2634c2 io_uring: replace workqueue usage with io-wq
fcb323cc53e29d9cc696d606bb42736b32dd9825 io_uring: io_uring: add support for async work inheriting files
17f2fe35d080d8f64e86a60cdcd3a97edcbc213b io_uring: add support for IORING_OP_ACCEPT
65e19f54d29cd8559ce60cfd0d751bef7afbdc5c io_uring: support for larger fixed file sets
842f96124c5617b060cc0f071dcfb6ab24bdd042 io_uring: fix race with canceling timeouts
975c99a570967dd48e917dd7853867fee3febabd io_uring: io_wq_create() returns an error pointer, not NULL
62755e35dfb2b113c52b81cd96d01c20971c8e02 io_uring: support for generic async request cancel
e9ffa5c2b77edf2689f876b640318b16fc3ea2a7 io_uring: set -EINTR directly when a signal wakes up in io_cqring_wait
364b05fd06e87e53dc03396f73afeac48d8e0998 io-wq: use kfree_rcu() to simplify the code
51c3ff62cac635ae9d75f875ce5b7bdafc97abd5 io_uring: add completion trace event
6f72653e76a511db47addad6ab690390233fc250 io-wq: use proper nesting IRQ disabling spinlocks for cancel
89723d0bd6c77540c01ce7db2cd6f8c3be2fd958 io_uring: enable optimized link handling for IORING_OP_POLL_ADD
f1f40853c01b5ccd0a1a29ce0b515c6f5405a798 io_uring: fixup a few spots where link failure isn't flagged
3aa5fa030558e2b0da284fd069aeb7178543c987 io_uring: kill dead REQ_F_LINK_DONE flag
ae9428ca61271b6b7f52ebbc359676c9fdfde523 io_uring: Merge io_submit_sqes and io_ring_submit
e5eb6366ac2d1df8ad5b010718ac1997ceae45be io_uring: io_queue_link*() right after submit
196be95cd5572078be9deb81cbea145fab246029 io_uring: allocate io_kiocb upfront
50585b9a07367b92382c1e975265344daeba78cd io_uring: Use submit info inlined into req
267bc90442aa47002e2991f7d9dd141e168b466b io_uring: use inlined struct sqe_submit
e977d6d34f0c08e3c3b132c9e73b98d0db50abc1 io_uring: abstract out io_async_cancel_one() helper
2665abfd757fb35a241c6f0b1ebf620e3ffb36fb io_uring: add support for linked SQE timeouts
84f97dc2333c626979bb547fce343a1003544dcc io_uring: make io_cqring_events() take 'ctx' as argument
78e19bbef38362cebff38aa1ca12e2c82bb72eb8 io_uring: pass in io_kiocb to fill/add CQ handlers
1d7bb1d50fb4dc141c7431cc21fdd24ffcc83c76 io_uring: add support for backlogged CQ ring
91d666ea43adef57a6cd50c81b9603c545654981 io-wq: io_wqe_run_queue() doesn't need to use list_empty_careful()
c5def4ab849494d3c97f6c9fc84b2ddb868fe78c io-wq: add support for bounded vs unbunded work
5f8fd2d3e0a7aa7fc9d97226be24286edd289835 io_uring: properly mark async work as bounded vs unbounded
206aefde4f886fdeb3b6339aacab3a85fb74cb7e io_uring: reduce/pack size of io_ring_ctx
a197f664a0db8a6219d9ce949f5f29b89f60fb2b io_uring: remove passed in 'ctx' function parameter ctx if possible
ec9c02ad4c3808d6d9ed28ad1d0485d6e2a33ac5 io_uring: keep io_put_req only responsible for release and put req
c69f8dbe2426cbf6150407b7e86ce85bb463c1dc io_uring: separate the io_free_req and io_free_req_find_next interface
46568e9be70ff8211d986685f08d919376c32998 io_uring: fix error clear of ->file_table in io_sqe_files_register()
8e3cca12706231daf8daf90dbde59f1665135e48 io_uring: convert accept4() -ERESTARTSYS into -EINTR
0ddf92e848ab7abf216f218ee363eb9b9650e98f io_uring: provide fallback request for OOM situations
47f467686ec02fc07fd5c6bb34b6f6736e2884b0 io_uring: make ASYNC_CANCEL work with poll and timeout
c1edbf5f081be9fbbea68c1d564b773e59c1acf3 io_uring: flag SQPOLL busy condition to userspace
768134d4f48109b90f4248feecbeeb7d684e410c io_uring: don't do flush cancel under inflight_lock
76a46e066e2d93bd333599d1c84c605c2c4cc909 io_uring: fix -ENOENT issue with linked timer with short timeout
93bd25bb69f46367ba8f82c578e0c05702ceb482 io_uring: make timeout sequence == 0 mean no sequence
960e432dfa5927892a9b170d14de874597b84849 io_uring: use correct "is IO worker" helper
7c9e7f0fe0d8abf856a957c150c48778e75154c1 io_uring: fix potential deadlock in io_poll_wake()
15dff286d0e0087d4dcd7049911f179e4e4cfd94 io_uring: check for validity of ->rings in teardown
7d7230652e7c788ef908536fd79f4cca077f269f io_wq: add get/put_work handlers to io_wq_create()
36c2f9223e84c1aa84bfba90cb2e74b517c92a54 io-wq: ensure we have a stable view of ->cur_work for cancellations
5e559561a8d7e6d4adfce6aa8fbf3daa3dec1577 io_uring: ensure registered buffer import returns the IO length
e61df66c69b11bc050d233dc95714a6339192c28 io-wq: ensure free/busy list browsing see all items
2f6d9b9d6357ede64a29437676884ee263039910 io_uring: clean up io_uring_cancel_files()
9d858b21483981db9c0cb4b184d4cdeb4bc525c2 io_uring: introduce req_need_defer()
a320e9fa1e2680116d165b9369dfa41d7cc1e1d1 io_uring: Fix getting file for non-fd opcodes
021d1cdda3875bf35edac9133335f622d7910abc io-wq: remove now redundant struct io_wq_nulls_list
eac406c61cd0ec8fe7970ca46ddf23e40a86b579 io_uring: make POLL_ADD/POLL_REMOVE scale better
95a5bbae05ef1ec1cceb8c1b04a482aa0b7c177c io_uring: io_async_cancel() should pass in 'nxt' request pointer
0e0702dac26b282603261f04a62711a2d9aac17b io_uring: cleanup return values from the queueing functions
978db57e2c329fc612ff669cab9bf0007efd3ca3 io_uring: make io_double_put_req() use normal completion path
ad8a48acc23cb13cbf4332ebabb867b1baa81842 io_uring: make req->timeout be dynamically allocated
94ae5e77a9150a8c6c57432e2db290c6868ddfad io_uring: fix sequencing issues with linked timeouts
b0dd8a412699afe3420a08f841333f3474ad45c5 io_uring: correct poll cancel and linked timeout expiration completion
fba38c272a0385148935d6443cb9dc68cf1f37a7 io_uring: request cancellations should break links
b60fda6000a99a7ccac36005ab78b14b47c06de3 io-wq: wait for io_wq_create() to setup necessary workers
b2e9c7d64b7ecacc1d0f15a6af88a73cab7d8db9 io-wq: remove extra space characters
d3b35796b1e3f118017491d621f624e0de7ff9fb io_uring: break links for failed defer
09fbb0a83ec6ab5a4037766261c031151985fff6 io_uring: Fix leaking linked timeouts
5d960724b0cb0d12469d1c62912e4a8c09c9fd92 io_uring: io_fail_links() should only consider first linked timeout
bbad27b2f622fa26d107f8a72c0cd5cc102dc56e io_uring: Always REQ_F_FREE_SQE for allocated sqe
4d7dd462971405c65bfb3821dbb6b9ce13b5e8d6 io_uring: allow finding next link independent of req reference count
b76da70fc3759df13e0991706451f1a2e06ba19e io_uring: close lookup gap for dependent next work
1b4a51b6d03d21f55effbcf609ba5526d87d9e9d io_uring: drain next sqe instead of shadowing
915967f69c591b34c5a18d6618af021a81ffd700 io_uring: improve trace_io_uring_defer() trace point
d732447fed7d6b4c22907f630cd25d574bae5276 io_uring: rename __io_submit_sqe()
9835d6fafba58e6d9386a6d5af800789bdb52e5b io_uring: add likely/unlikely in io_get_sqring()
70cf9f3270a5c5148e93a526dc1e51965259e70c io_uring: remove io_free_req_find_next()
944e58bfeda0e9b97cd611adafc823c78e0bc464 io_uring: pass only !null to io_req_find_next()
b18fdf71e01fba29a804d63f8c1e2ed61011170d io_uring: simplify io_req_link_next()
f9bd67f69af56d712bfd498f5ad9cf7bb177d600 io_uring: only !null ptr to io_issue_sqe()
c4a2ed72c9a61594b6afc23e1fbc78878d32b5a3 io_uring: only return -EBUSY for submit on non-flushed backlog
f8e85cf255ad57d65eeb9a9d0e59e3dec55bdd9e io_uring: add support for IORING_OP_CONNECT
576a347b7af8abfbddc80783fb6629c2894d036e io-wq: have io_wq_create() take a 'data' argument
181e448d8709e517c9c7b523fcd209f24eb38ca7 io_uring: async workers should inherit the user creds
8042d6ce8c40df0abb0d91662a754d074a3d3f16 io_uring: remove superfluous check for sqe->off in io_accept()
cc42e0ac17d3664a70e020dfe7897f14e7aa7453 io_uring: store timeout's sqe->off in proper place
cf6fd4bd559ee61a4454b161863c8de6f30f8dca io_uring: inline struct sqe_submit
7d009165550adc64e3561c65ecce564125052e00 io_uring: cleanup io_import_fixed()
ad6e005ca68de7af76f9ed3e4c9b6f0aa2f842e3 io_uring: use kzalloc instead of kcalloc for single-element allocations
3fc50ab559f5ae400aa33bd0836b3602da7fa51b io-wq: fix handling of NUMA node IDs
6206f0e180d4eddc0a178f57120ab1b913701f6e io-wq: shrink io_wq_work a bit
e944475e69849273ca8f1fe04a3ce81b5901d165 io_uring: make poll->wait dynamically allocated
6c5c240e412682f97aecd233c1e706822704aa28 io_uring: add mapping support for NOMMU archs
0b8c0ec7eedcd8f9f1a1f238d87f9b512b09e71a io_uring: use current task creds instead of allocating a new one
1a6b74fc87024db59d41cd7346bd437f20fb3e2d io_uring: add general async offload context
f67676d160c6ee2ed82917fadfed6d29cab8237c io_uring: ensure async punted read/write requests copy iovec
03b1230ca12a12e045d83b0357792075bf94a1e0 io_uring: ensure async punted sendmsg/recvmsg requests copy data
f499a021ea8c9f70321fce3d674d8eca5bbeee2c io_uring: ensure async punted connect requests copy data
da8c96906990f1108cb626ee7865e69267a3263b io_uring: mark us with IORING_FEAT_SUBMIT_STABLE
8cdda87a4414092cd210e766189cf0353a844861 io_uring: remove io_wq_current_is_worker
87f80d623c6c93c721b2aaead8a45e848bc8ffbf io_uring: handle connect -EINPROGRESS like -EAGAIN
901e59bba9ddad4bc6994ecb8598ea60a993da4c io_uring: allow IO_SQE_* flags on IORING_OP_TIMEOUT
2d28390aff879238f00e209e38c2a0b78717360e io_uring: ensure deferred timeouts copy necessary data
08bdcc35f00c91b325195723cceaba0937a89ddf io-wq: clear node->next on list deletion
78076bb64aa8ba5b7207c38b2660a9e10ffa8cc7 io_uring: use hash table for poll command lookups
2e6e1fde32d7d41cf076c21060c329d3fdbce25c io_uring: fix error handling in io_queue_link_head
4493233edcfc0ad0a7f76f1c83f95b1bcf280547 io_uring: hook all linked requests via link_list
4e88d6e7793f2f445f43bd608828541d7f43b608 io_uring: allow unbreakable links
506d95ff5d6aa0a099a116c49d3884e29801d843 io-wq: remove worker->wait waitqueue
e995d5123ed433e37a8d63ac528737c912592e3d io-wq: briefly spin for new work after finishing work
8a4955ff1cca7d4da480774034a16e7c28bafec8 io_uring: sqthread should grab ctx->uring_lock for submissions
d96885658d9971fc2c752b8699f17a42ef745db6 io_uring: deferred send/recvmsg should assign iov
392edb45b24337eaa0bc1ecd4e3cf897e662ec61 io_uring: don't dynamically allocate poll data
4a0a7a187453e65bdd24b9ede045b4c36b958868 io_uring: run next sqe inline if possible
53108d476a105ab2597d7a4e6040b127829391b5 io_uring: only hash regular files for async work execution
10d59345578a116042c1a5d737a18234aaf3e0e6 io_uring: add sockets to list of files that support non-blocking issue
9e3aa61ae3e01ce1ce6361a41ef725e1f4d1d2bf io_uring: ensure we return -EINVAL on unknown opcode
d195a66e367b3d24fdd3c3565f37ab7c6882b9d2 io_uring: fix stale comment and a few typos
0b416c3e1345fd696db4c422643468d844410877 io_uring: fix sporadic -EFAULT from IORING_OP_RECVMSG
525b305d61ede489ce2118b000a5dabd6d869dac io-wq: re-add io_wq_current_is_worker()
b7bb4f7da0a1a92f142697f1c9ce335e7a44f4b1 io_uring: fix pre-prepped issue with force_nonblock == true
fc4df999e24fc3006441acd4ce6250e6a76ac851 io_uring: remove 'sqe' parameter to the OP helpers that take it
8ed8d3c3bc32bf5b442c9f54013b4a47d5cae740 io_uring: any deferred command must have stable sqe data
ffbb8d6b76910d4f3a2bafeaf68c419011e98d05 io_uring: make HARDLINK imply LINK
0969e783e3a8913f79df27286501a6c21e961524 io_uring: make IORING_POLL_ADD and IORING_POLL_REMOVE deferrable
fbf23849b1724d3ea362e346d0877a8d87978fe6 io_uring: make IORING_OP_CANCEL_ASYNC deferrable
b29472ee7b53784f44011069fad15e539fd25bcf io_uring: make IORING_OP_TIMEOUT_REMOVE deferrable
d625c6ee4975000140c57da7e1ff244efefde274 io_uring: read opcode and user_data from SQE exactly once
e781573e2fb1b75acdba61dcb9bcbfc16f288442 io_uring: warn about unhandled opcode
fd6c2e4c063d64511657ad0031a1677b6a914859 io_uring: io_wq_submit_work() should not touch req->rw
d55e5f5b70dd6214ef81fb2313121b72a7dd2200 io_uring: use u64_to_user_ptr() consistently
9adbd45d6d32ffc1a03f3c51d72cfc69ebfc2ddb io_uring: add and use struct io_rw for read/writes
3fbb51c18f5c15a23db74c4da79d3d035176c480 io_uring: move all prep state for IORING_OP_CONNECT to prep handler
e47293fdf98998292a89d516c8f7b8b9eb5c5213 io_uring: move all prep state for IORING_OP_{SEND,RECV}_MGS to prep handler
26a61679f10c6f041726411964b172565021c2eb io_uring: read 'count' for IORING_OP_TIMEOUT in prep handler
06b76d44ba25e52711dc7cc4fc75b50907bc6b8e io_uring: standardize the prep methods
3529d8c2b353e6e446277ae96a36e7471cb070fc io_uring: pass in 'sqe' to the prep handlers
1f424e8bd18754d27b15f49359004b0cea344fb5 io-wq: remove unused busy list from io_sqe
fd1c4bc6e9b34a5e4fe7a3130a49380ef9d7037c io-wq: add cond_resched() to worker thread
eacc6dfaea963ef61540abb31ad7829be5eff284 io_uring: remove punt of short reads to async context
74566df3a71c1b92da608868cca787557d8be7b2 io_uring: don't setup async context for read/write fixed
e0bbb3461ae000baec13e8ec5b5063202df228df io-wq: cancel work if we fail getting a mm reference
78912934f4f7dd7a424159c69bf9bdd46e823781 io_uring: be consistent in assigning next work from handler
797f3f535d59f05ad12c629338beef6cb801d19e io_uring: clear req->result always before issuing a read/write request
11ba820bf163e224bf5dd44e545a66a44a5b1d7a io_uring: ensure workqueue offload grabs ring mutex for poll list
d63d1b5edb7b832210bfde587ba9e7549fa064eb io_uring: add support for fallocate()
35cb6d54c1d5daf1d1ed585ef5ce4557e7ab284c fs: make build_open_flags() available internally
15b71abe7b52df214785dde0de9f581cc0216d17 io_uring: add support for IORING_OP_OPENAT
0c9d5ccd26a004f59333c06fbbb98f9cb1eed93d io-wq: add support for uncancellable work
b5dba59e0cf7e2cc4d3b3b1ac5fe81ddf21959eb io_uring: add support for IORING_OP_CLOSE
05f3fb3c5397524feae2e73ee8e150a9090a7da2 io_uring: avoid ring quiesce for fixed file set unregister and update
eddc7ef52a6b37b7ba3d1c8a8fbb63d5d9914f8a io_uring: add support for IORING_OP_STATX
895e2ca0f693c672902191747b548bdc56f0c7de io-wq: support concurrent non-blocking work
ce35a47a3a0208a77b4d31b7f2e8ed57d624093d io_uring: add IOSQE_ASYNC
9d76377f7e13c19441fdd066033345289f89b5fe io_uring: rename prev to head
32fe525b6d10fec956cfe68f0db76839cd7f0ea5 io_uring: move *queue_link_head() from common path
add7b6b85a4dfa89283834d181e87ea2144b9028 io_uring: remove two unnecessary function declarations
d3656344fea0339fb0365c8df4d2beba4e0089cd io_uring: add lookup table for various opcode needs
ad3eb2c89fb24d14ac81f43eff8e85fece2c934d io_uring: split overflow state into SQ and CQ side
e94f141bd248ebdadcb7351f1e70b31cee5add53 io_uring: improve poll completion performance
3a6820f2bb8a079975109c25a5d1f29f46bce5d2 io_uring: add non-vectored read/write commands
ba04291eb66ed895f194ae5abd3748d72bf8aaea io_uring: allow use of offset == -1 to mean file position
4840e418c2fc533d55ff6caa5b9313eed1d26cfd io_uring: add IORING_OP_FADVISE
c1ca757bd6f4632c510714631ddcc2d13030fe1e io_uring: add IORING_OP_MADVISE
2b85edfc0c90efc68dea3d665bb4111bf0694e05 io_uring: batch getting pcpu references
8237e045983d82ba78eaab5f60b9300927fc6796 io_uring: wrap multi-req freeing in struct req_batch
c6ca97b30c47c7ad36107d3764bb4dc37026d171 io_uring: extend batch freeing to cover more cases
9ef4f124894b7b9241a3cf5f9b40db0812783d66 io_uring: clamp to_submit in io_submit_sqes()
ee7d46d9db19ded7b7222af95add63606318a480 io_uring: optimise head checks in io_get_sqring()
caf582c652feccd42c50923f0467c4f2dcef279e io_uring: optimise commit_sqring() for common case
2550878f8421f7912fdd56b38c630b797f95c749 io_uring: remove extra io_wq_current_is_worker()
fddafacee287b3140212c92464077e971401f860 io_uring: add support for send(2) and recv(2)
96fd84d83a778450ffae737d9efa546ac3983b1f io_uring: Remove unnecessary null check
c150368b496837cb207712e78f903ccfd7633b93 io_uring: file set registration should use interruptible waits
69b3e546139a21b3046b6bf0cb79d5e8c9a3fa75 io_uring: change io_ring_ctx bool fields into bit fields
f2842ab5b72d7ee5f7f8385c2d4f32c133f5837b io_uring: enable option to only trigger eventfd for async completions
354420f705ccd0aa2d41249f3bb55b4afbed1873 io_uring: add opcode to issue trace event
10fef4bebf979bb705feed087611293d5864adfe io_uring: account fixed file references correctly in batch
66f4af93da5761d2fa05c0dc673a47003cdb9cfe io_uring: add support for probing opcodes
711be0312df4d350fb5bf1671c132cccae5aaf9a io_uring: optimise use of ctx->drain_next
0791015837f1520dd72918355dcb1f1e79175255 io_uring: remove extra check in __io_commit_cqring
b14cca0c84c760fbd39ad6bb7e1181e2df103d25 io_uring: hide uring_fd in ctx
e46a7950d362231a4d0b078af5f4c109b8e5ac9e io_uring: file switch work needs to get flushed on exit
87987898a1dbc69b1138f7c10eb9abd655c03396 io_uring: remove REQ_F_IO_DRAINED
6b47ee6ecab142f938a40bf3b297abac74218ee2 io_uring: optimise sqe-to-req flags translation
0463b6c58e557118d602b2f225fa3bbe9b6f3560 io_uring: use labeled array init in io_op_defs
1118591ab883f46df4ab614cc976bc4c8e04a464 io_uring: prep req when do IOSQE_ASYNC
86a761f81ec87a96572214f5db606f60d36aaf08 io_uring: honor IOSQE_ASYNC for linked reqs
ebe10026210f9ea740b9a050ee84a166690fddde io_uring: don't cancel all work on process exit
980ad26304abf11e78caaa68023411b9c088b848 io_uring: don't attempt to copy iovec for READ/WRITE
8cdf2193a3335b4cfb6e023b41ac293d0843d287 io_uring: add comment for drain_next
9466f43741bc08edd7b1bee642dd6f5561091634 io_uring: fix refcounting with batched allocations at OOM
848f7e1887c46f21679c2c12b9e8022f17750721 io-wq: make the io_wq ref counted
cccf0ee834559ae0b327b40290e14f6a2a017177 io_uring/io-wq: don't use static creds/mm assignments
eba6f5a330cf042bb0001f0b5e8cbf21be1b25d6 io-wq: allow grabbing existing io-wq
24369c2e3bb06d8c4e71fd6ceaf4f8a01ae79b7c io_uring: add io-wq workqueue sharing
071698e13ac6ba786dfa22349a7b62deb5a9464d io_uring: allow registering credentials
75c6a03904e0dd414a4d99a3072075cb5117e5bc io_uring: support using a registered personality for commands
f86cd20c9454847a524ddbdcdec32c0380ed7c9b io_uring: fix linked command file table usage
3e4827b05d2ac2d377ed136a52829ec46787bf4b io_uring: add support for epoll_ctl(2)
d7f62e825fd19202a0749d10fb439714c51f67d2 io_uring: add BUILD_BUG_ON() to assert the layout of struct io_uring_sqe
b5e683d5cab8cd433b06ae178621f083cabd4f63 eventfd: track eventfd_signal() recursion depth
f0b493e6b9a8959356983f57112229e69c2f7b8c io_uring: prevent potential eventfd recursion on poll
0b7b21e42ba2d6ac9595a4358a9354249605a3af io_uring: use the proper helpers for io_send/recv
5d204bcfa09330972ad3428a8f81c23f371d3e6d io_uring: don't map read/write iovec potentially twice
9250f9ee194dc3dcee28a42a1533fa2cc0edd215 io_uring: remove extra ->file check
1a417f4e618e05fba29ba222f1e8555c302376ce io_uring: fix sporadic double CQE entry for close
3e69426da2599677ebbe76e2d97a606c4797bd74 io_uring: punt even fadvise() WILLNEED to async context
3e577dcd73a1fdc641bf45e5ea4a37869de221b5 io_uring: put the flag changing code in the same spot
df069d80c8e38c19531c392322e9a16617475c44 io_uring: spin for sq thread to idle on shutdown
2faf852d1be8a4960d328492298da6448cca0279 io_uring: cleanup fixed file data table references
1cb1edb2f5ba8a3e8d47ded391007c6fe3ac0ad7 io_uring: get rid of delayed mm check
e1d85334d62386e9503e4a0d5d022e2d8e0011a0 io_uring: fix 1-bit bitfields to be unsigned
1e95081cb5b4cf77065d37866f57cf3c90a3df78 io_uring: fix deferred req iovec leak
cf3040ca55f2085b0a372a620ee2cb93ae19b686 io_uring: statx/openat/openat2 don't support fixed files
63e5d81f72af1bf370bf8a6745b0a8d71a7bb37d io_uring: flush overflowed CQ events in the io_uring_poll()
e96e977992d0ea40b6e70cb63dede85c9078e744 io_uring: remove unused struct io_async_open
99bc4c38537d774e667d043c520914082da19abf io_uring: fix iovec leaks
8fef80bf56a49c60b457dedb99fd6c5279a5dbe1 io_uring: add cleanup for openat()/statx()
faac996ccd5da95bc56b91aa80f2643c2d0a1c56 io_uring: retry raw bdev writes if we hit -EOPNOTSUPP
9392a27d88b9707145d713654eb26f0c29789e50 io-wq: add support for inheriting ->fs
ff002b30181d30cdfbca316dadd099c3ca0d739c io_uring: grab ->fs as part of async preparation
0b5faf6ba7fb78bb1fe7336d23ea1978386a6c3a io_uring: allow AT_FDCWD for non-file openat/openat2/statx
a93b33312f63ef6d5997f45d6fdf4de84c5396cc io_uring: fix async close() with f_op->flush()
5f798beaf35d79355cbf18019c1993a84475a2c3 io_uring: fix double prep iovec leak
0bdbdd08a8f991bdaee54465a168c0795ea5d28b io_uring: fix openat/statx's filename leak
00bcda13dcbf6bf7fa6f2a5886dd555362de8cfa io-wq: make io_wqe_cancel_work() take a match handler
36282881a795cbf717aca79392ae9cdf0fef59c9 io-wq: add io_wq_cancel_pid() to cancel based on a specific pid
6ab231448fdc5e37c15a94a4700fca11e80007f7 io_uring: cancel pending async work if task exits
b537916ca5107c3a8714b8ab3099c0ec205aec12 io_uring: retain sockaddr_storage across send/recvmsg async punt
7563439adfae153b20331f1567c8b5d0e5cbd8a7 io-wq: don't call kXalloc_node() with non-online node
2ca10259b4189a433c309054496dd6af1415f992 io_uring: prune request from overflow list on flush
7fbeb95d0f68e21e6ca61284f1ac681630976947 io_uring: add missing io_req_cancelled()
297a31e3e8318f533cff4fe33ffaefb74f72c6e2 io_uring: remove unnecessary NULL checks
929a3af90f0f4bd7132d83552c1a98c83f60ef7e io_uring: fix use-after-free by io_cleanup_req()
193155c8c9429f57400daf1f2ef0075016767112 io_uring: handle multiple personalities in link chains
bdcd3eab2a9ae0ac93f27275b6895dd95e5bf360 io_uring: fix poll_list race for SETUP_IOPOLL|SETUP_SQPOLL
3030fd4cb783377eca0e2a3eee63724a5c66ee15 io-wq: remove spin-for-work optimization
2d141dd2caa78fbaf87b57c27769bdc14975ab3d io-wq: ensure work->task_pid is cleared on init
2a44f46781617c5040372b59da33553a02b1f46d io_uring: pick up link work on submit reference drop
dd3db2a34cff14e152da7c8e320297719a35abf9 io_uring: drop file set ref put/get on switch
d876836204897b6d7d911f942084f69a1e9d5c4d io_uring: fix 32-bit compatability with sendmsg/recvmsg
fc04c39bae01a607454f7619665309870c60937a io-wq: fix IO_WQ_WORK_NO_CANCEL cancellation
80ad894382bf1d73eb688c29714fa10c0afcf2e7 io-wq: remove io_wq_flush and IO_WQ_WORK_INTERNAL
29de5f6a350778a621a748cecc7efbb8f0cfa5a7 io_uring: consider any io_read/write -EAGAIN as final
e441d1cf20e1b9fc443e6130488d41e1941aae82 io_uring: io_accept() should hold on to submit reference on retry
5ea62161167eb8297249d3f4dc63741016f01413 io_uring: don't call work.func from sync ctx
deb6dc0544884067b93bbf9a4716be323103b911 io_uring: don't do full *prep_worker() from io-wq
bcaec089c5b64953f96a59089598643911765a43 io_uring: remove req->in_async
8da11c19940ddbc22fc835bce3f361f4d2417fb0 io_uring: add interface for getting files
7d67af2c013402537385dae343a2d0f6a4cb3bfd io_uring: add splice(2) support
b0a20349f212dc725f5ddfd060e426fe6181d9c5 io_uring: clean io_poll_complete
02d27d895323c4baa3234e4bed015eb3a196e1dd io_uring: extract kmsg copy helper
e85530ddda4f08d4f9ed6506d4a1f42e086e3b21 io-wq: remove unused IO_WQ_WORK_HAS_MM
5eae8619907a1389dbd1b4a1049caf52782c0916 io_uring: remove IO_WQ_WORK_CB
3684f24653534c71c7dc9f44d7281a838f4e4979 io-wq: use BIT for ulong hash
c2f2eb7d2c1cdc37fa9633bae96f381d33ee7a14 io_uring: store io_kiocb in wait->private
b41e98524e424d104aa7851d54fd65820759875a io_uring: add per-task callback handler
8a72758c51f8a5501a0e01ea95069630edb9ca07 io_uring: mark requests that we can do poll async in io_op_defs
d7718a9d25a61442da8ee8aeeff6a0097f0ccfd6 io_uring: use poll driven retry for files that support it
4bc4494ec7c97ee38e2aa3d1cd76e289c49ac083 io_uring: remove extra nxt check after punt
3b17cf5a58f2a38e23ee980b5dece717d0464fb7 io_uring: remove io_prep_next_work()
8755d97a09fed0de206772bcad1838301293c4d8 io_uring: Ensure mask is initialized in io_arm_poll_handler
a2100672f3b2afdd55ccc2e640d1a8bd99ff6338 io_uring: clean up io_close
594506fec5faec2b1ec82ad6fb0c8132512fc459 io_uring: make submission ref putting consistent
014db0073cc6a12e1f421b9231d6f3aa35735823 io_uring: remove @nxt from handlers
7a743e225b2a9da772b28a50031e1ccd8a8ce404 io_uring: get next work with submission ref drop
dc026a73c7221b4d9d146ed0bde69ff578ebe8dc io-wq: shuffle io_worker_handle_work() code
58e3931987377d3f4ec7bbc13e4ea0aab52dc6b0 io-wq: optimise locking in io_worker_handle_work()
f462fd36fc43662eeb42c95a9b8da8659af6d75e io-wq: optimise out *next_work() double lock
e9fd939654f17651ff65e7e55aa6934d29eb4335 io_uring/io-wq: forward submission ref to async
5a2e745d4d430c4dbeeeb448c3d5c0c3109e511e io_uring: buffer registration infrastructure
c1e2148f8ecb26863b899d402a823dab8e26efd1 io_uring: free fixed_file_data after RCU grace period
f0e20b8943509d81200cef5e30af2adfddba0f5c io_uring: fix lockup with timeouts
805b13adde3964c78cba125a15527e88c19f87b3 io_uring: ensure RCU callback ordering with rcu_barrier()
ddf0322db79c5984dc1a1db890f946dd19b7d6d9 io_uring: add IORING_OP_PROVIDE_BUFFERS
bcda7baaa3f15c7a95db3c024bb046d6e298f76b io_uring: support buffer selection for OP_READ and OP_RECV
4d954c258a0c365a85a2d1b1cccf63aec38fca4c io_uring: add IOSQE_BUFFER_SELECT support for IORING_OP_READV
0a384abfae66651b28e4bbe16883b1ff046ba3b3 net: abstract out normal and compat msghdr import
52de1fe122408d7a62b6cff9ed3895ebb882d71f io_uring: add IOSQE_BUFFER_SELECT support for IORING_OP_RECVMSG
067524e914cb23e20d59480b318fe2625eaee7c8 io_uring: provide means of removing buffers
84557871f2ff332edd445d70349c8724c313c683 io_uring: add end-of-bits marker and build time verify it
469956e853ccdba72bb82ad2eea6e8ab6b15791f io_uring: Fix unused function warnings
32b2244a840a90ea94ba42392de5c48d53f521f5 io_uring: io_uring_enter(2) don't poll while SETUP_IOPOLL|SETUP_SQPOLL enabled
3f9d64415fdaa73017fcb168930006648617b488 io_uring: fix truncated async read/readv and write/writev retry
2293b4195800f88de2c454a24b25874be56d87f3 io-wq: remove duplicated cancel code
f1d96a8fcbbbb22d4fbc1d69eaaa678bbb0ff6e2 io_uring: NULL-deref for IOSQE_{ASYNC,DRAIN}
d78298e73a3443a3c1766fa89f5370f52a4efd94 io-wq: don't resched if there is no work
8766dd516c535abf04491dca674d0ef6c95d814f io-wq: split hashing and enqueueing
60cf46ae605446feb0c43c472c0fd1af4cd96231 io-wq: hash dependent work
4022e7af86be2dd62975dedb6b7ea551d108695e io_uring: make sure openat/openat2 honor rlimit nofile
09952e3e7826119ddd4357c453d54bcc7ef25156 io_uring: make sure accept honor rlimit nofile
4ed734b0d0913e566a9d871e15d24eb240f269f7 io_uring: honor original task RLIMIT_FSIZE
f2cf11492b8b30d89b2fbf525c9ea5e8c4ccc842 io-wq: close cancel gap for hashed linked work
18a542ff19ad149fac9e5a36a4012e3cac7b3b3b io_uring: Fix ->data corruption on re-enqueue
4afdb733b1606c6cb86e7833f9335f4870cf7ddd io-uring: drop completion when removing file
a5318d3cdffbecf075928363d7e4becfeddabfcb io-uring: drop 'free_pfile' in struct io_file_put
86f3cd1b589a10dbdca98c52cc0cd0f56523c9b3 io-wq: handle hashed writes in chains
bff6035d0c40fa1dd195aa41f61814d622883420 io_uring: fix missing 'return' in comment
3d9932a8b240c9019f48358e8a6928c53c2c7f6b io_uring: cleanup io_alloc_async_ctx()
0558955373023b08f638c9ede36741b0e4200f58 io_uring: refactor file register/unregister/update handling
10bea96dcc13ad841d53bdcc9d8e731e9e0ad58f io_uring: add missing finish_wait() in io_sq_thread()
a6ba632d2c249a4390289727c07b8b55eb02a41d io_uring: retry poll if we got woken with non-matching mask
3537b6a7c65434d0d2cc0c9862e69be11c367fdc io_uring: grab task reference for poll requests
aa96bf8a9ee33457b7e3ea43e97dfa1e3a15ab20 io_uring: use io-wq manager as backup task if task is exiting
48bdd849e967f1c573d2b2bc24308e24a83f39c2 io_uring: fix ctx refcounting in io_submit_sqes()
211fea18a7bb9b8d51cb5d2b9cbe5583af256609 io_uring: remove redundant variable pointer nxt and io_wq_assign_next call
f7fe9346869a12efe3af3cc9be2e45a1b6ff8761 io_uring: initialize fixed_file_data lock
08a1d26eb894a9dcf79f674558a284ad1ffef517 io_uring: ensure openat sets O_LARGEFILE if needed
45097daea2f4e89bdb1c98359f78d0d6feb8e5c8 io_uring: do not always copy iovec in io_req_map_rw()
709b302faddfac757d87df2080f900eccb1dc9e2 io_uring: simplify io_get_sqring
b1e50e549b1372d9742509230dc4af7dd521d984 io_uring: alloc req only after getting sqe
0553b8bda8709c47863eab3fff7ac32ad04ca52b io_uring: remove req init from io_get_req()
9c280f9087118099f50566e906b9d9d5a0fb4529 io_uring: don't read user-shared sqe flags twice
c398ecb3d611925e4a5411afdf7489914a5c0460 io_uring: fix fs cleanup on cqe overflow
85faa7b8346ebef0606d2d0df6d3f8c76acb3654 io_uring: punt final io_ring_ctx wait-and-free to workqueue
dccc587f6c07ccc734588226fdf62f685558e89f io_uring: remove obsolete @mm_fault
bf9c2f1cdcc718b6d2d41172f6ca005fe22cc7ff io_uring: track mm through current->mm
1d4240cc9e7bb101dac58f30283fa24a809f5606 io_uring: early submission req fail code
dea3b49c7fb09b4f6b6a574c0485ffeb9df7b69c io_uring: keep all sqe->flags in req->flags
ef4ff581102a917a69877feca2e5347e2f3e458c io_uring: move all request init code in one place
b1f573bd15fda2e19ea66a4d26fae8be1b12791d io_uring: restore req->work when canceling poll request
88357580854aab29d27e1a443575caaedd081612 io_uring: correct O_NONBLOCK check for splice punt
74ce6ce43d4fc6ce15efb21378d9ef26125c298b io_uring: check for need to re-wait in polled async handling
2bae047ec9576da72d5003487de0bb93e747fff7 io_uring: io_async_task_func() should check and honor cancelation
8e2e1faf28b3e66430f55f0b0ee83370ecc150af io_uring: only post events in io_poll_remove_all() if we completed some
22cad1585c6bc6caf2688701004cf2af6865cbe0 io_uring: fix cached_sq_head in io_timeout()
b55ce732004989c85bf9d858c03e6d477cf9023b io_uring: kill already cached timeout.seq_offset
31af27c7cc9f675d93a135dca99e6413f9096f1d io_uring: don't count rqs failed after current one
44575a67314b3768d4415252271e8f60c5c70118 io_uring: only restore req->work for req that needs do completion
5b0bbee4732cbd58aa98213d4c11a366356bba3d io_uring: statx must grab the file table for valid fd
af197f50ac53fff1241598c73ca606754a3bb808 io_uring: enable poll retry for any file with ->read_iter / ->write_iter
490e89676a523c688343d6cb8ca5f5dc476414df io_uring: only force async punt if poll based retry can't handle it
dd461af65946de060bff2dab08a63676d2731afe io_uring: use proper references for fallback_req locking
3fd44c86711f71156b586c22b0495c58f69358bb io_uring: use cond_resched() in io_ring_ctx_wait_and_kill()
7759a0bfadceef3910d0e50f86d63b6ed58b4e70 io_uring: fix extra put in sync_file_range()
4ee3631451c9a62e6b6bc7ee51fb9a5b34e33509 io_uring: check non-sync defer_list carefully
2fb3e82284fca40afbde5351907f0a5b3be717f9 io_uring: punt splice async because of inode mutex
d8f1b9716cfd1a1f74c0fedad40c5f65a25aa208 io_uring: fix mismatched finish_wait() calls in io_uring_cancel_files()
7f13657d141346125f4d0bb93eab4777f40c406e io_uring: handle -EFAULT properly in io_uring_setup()
63ff822358b276137059520cf16e587e8073e80f io_uring: don't use 'fd' for openat/openat2/statx
c96874265cd04b4bd4a8e114ac9af039a6d83cfe io_uring: fix zero len do_splice()
9d9e88a24c1f20ebfc2f28b1762ce78c0b9e1cb3 io_uring: polled fixed file must go through free iteration
650b548129b60b0d23508351800108196f4aa89f io_uring: don't prepare DRAIN reqs twice
bd2ab18a1d6267446eae1b47dd839050452bdf7f io_uring: fix FORCE_ASYNC req preparation
948a7749454b1712f1b2f2429f9493eb3e4a89b0 io_uring: remove dead check in io_splice()
e3aabf9554fd04eb14cd44ae7583fc9d40edd250 io_uring: cancel work if task_work_add() fails
4f4eeba87cc731b200bff9372d14a80f5996b277 io_uring: don't use kiocb.private to store buf_index
b532576ed39efe3b351ae8320b2ab67a4c4c3719 io_uring: don't add non-IO requests to iopoll pending list
d4ae271dfaae2a5f41c015f2f20d62a1deeec734 io_uring: reset -EBUSY error when io sq thread is waken up
5e309c6c5ea12515616a4835b7fa2141c8016c94 vt/fbcon: deinitialize resources in visual_init() after failed memory allocation
1f4ed2fb01f80faa722f71efd3791e1d1f337010 fbcon: Remove fbcon_has_exited
97b67986f1451c772b488d597310f95c14547cce fbcon: call fbcon_fb_(un)registered directly
cf4a3ae4ef3399179166a464af1d6b172225bef4 fbdev: lock_fb_info cannot fail
54b8ae66ae1a3454a7645d159a482c31cd89ab33 kbuild: change *FLAGS_<basetarget>.o to take the path relative to $(obj)
6cda08a20dbde45b021091230c8a359fa08c5103 drivers: Introduce device lookup variants by name
cfba5de9b99f8bbb8b4ea11b3049784e78b8759b drivers: Introduce device lookup variants by of_node
37ecf8b20abd05cdcb6391e842802e3b4ca97876 compat_sys_ioctl(): make parallel to do_vfs_ioctl()
076ff658628678f73d2349a699c3431877c1a075 compat_ioctl: move rtc handling into drivers/rtc/dev.c
1832f2d8ff69138aa70d3cb3b4ea3c2058e73aea compat_ioctl: move more drivers to compat_ptr_ioctl
e6c8320648a27d2f43bf56c6215fa48d85bf47c6 media: cec: move compat_ioctl handling to cec-api.c
c0decac19da3906d9b66291e57b7759489e1170f media: use strscpy() instead of strlcpy()
b60a5b8dcf49af9f2c60ae82e0383ee8e62a9a52 media: Kconfig files: use the right help coding style
32a847f9fa40ec1b03ead2c514862764983ff9ca media: cec: add struct cec_connector_info support
8f4b5b0af7e451a4c6698ad3441dde8d1286c80d media: cec-adap: return from cec_s_conn_info() if adap is invalid
9098c1c251ff0e6a4cea3a60486d9f40e7fdcea2 media: cec: expose the new connector info API
10d8f308ba3e4d2c8753dd7a143af6f4a96cc29b cec: add cec_adapter to cec_notifier_cec_adap_unregister()
0a8459693238a339de9705da4e26f6ffbb6a4ebc fbdev: drop res_id parameter from remove_conflicting_pci_framebuffers
c72bed23b9e45accdeab626cf2cb2bd08d846f3e pinctrl: Allow modules to use pinctrl_[un]register_mappings
64147c092e4f1ce8f72b0586078f251e4f9d84ec drm/i915: Remove dma_buf_kmap selftest
0d1da1fe305b9b9229786c598e7dfd8942e7c92b drm/omapdrm: Drop dma_buf->k(un)map
42aa7c6eb3ebfc280cc116978a3c003bcadb3440 drm/tee_shm: Drop dma_buf_k(unmap) support
1d48b9e988a8874225e38fc1ac9967666e7eafd7 drm/udl: Allocate GEM object via struct drm_driver.gem_create_object
08b22f65b309649057edfbae1d8772b04210b486 drm/udl: Switch to SHMEM
d56cbce7be1a310651bc293f0c2ccc1dfce994e5 drm/udl: Remove struct udl_gem_object and functions
d0c4fc5a4814e431c15272935c8dc973c18073aa drm/udl: Replace fbdev code with generic emulation
6c44e30ae130b740441ac0c65d5fa12dd6586942 drm/udl: Unmap buffer object after damage update
f3f8630a9a7c8f8ab1b16e09b254417478df5182 drm/udl: Remove udl implementation of GEM's free_object()
5379e4dd3220e23f68ce70b76b3a52a9a68cee05 mm, drm/ttm: Fix vm page protection handling
12281c8dda5a3b47008bd6a6db6645995234b4e1 video: fb_defio: preserve user fb_ops
8204f235a64e175b624893f91531a9ba76dcc8e5 drm/fb-helper: Remove drm_fb_helper_fbdev_{setup, teardown}()
d75a92a81467933404547edf47ec63d58d7e2b2f drm/i915: Allow for different modes of interruptible i915_active_wait
6726ca1a2d531f5a6efc1f785b15606ce837c4dc drm/bridge: analogix-anx6345: Avoid duplicate -supply suffix
d5e56705927e00f703b2eb5a98299dd6622d16e5 drm/i915/display: Fix mode private_flags comparison at atomic_check
07bcfd1291de77ffa9b627b4442783aba1335229 drm/i915/gen12: Disable preemption timeout
3e138a63d6674a4567a018a31e467567c40b14d5 drm/bridge: analogix-anx78xx: Fix drm_dp_link helper removal
575b0a6e6a2f35babc7991d8e63e701d2fec9d00 drm/amdgpu/powerplay: using the FCLK DPM table to set the MCLK
567c8fc4a0d28b63f81549af2f77ee9b5c260b80 drm/amd/powerplay: implement the is_dpm_running()
72f5b5a308c744573fdbc6c78202c52196d2c162 drm/amd/display: Check for null fclk voltage when parsing clock table
f77a2db27f26c3ccba0681f7e89fef083718f07f drm/i915/icl+: Don't enable DDI IO power on a TypeC port in TBT mode
21abf0bf168dffff1192e0f072af1dc74ae1ff0e drm/i915/gt: Treat idling as a RPS downclock event
a86675968e2300fb567994459da3dbc4cd1b322a Revert "drm/dp_mst: Remove VCPI while disabling topology mgr"
487eca11a321ef33bcf4ca5adb3c0c4954db1b58 drm/amdgpu: fix gfx hang during suspend with video playback (v2)
69edc390a54268d41e45089cb972bf71510f5f07 drm/i915/ggtt: do not set bits 1-11 in gen12 ptes
4d6c18590870fbac1e65dde5e01e621c8e0ca096 drm/i915/gt: Fill all the unused space in the GGTT
974229db7e6c1f2ff83ceaf3022d5128bf62caca drm/amdgpu/gfx9: add gfxoff quirk
92f673a12d14b5393138d2b1cfeb41d72b47362d drm/nouveau/sec2/gv100-: add missing MODULE_FIRMWARE()
6352219c39c04ed3f9a8d1cf93f87c21753a213e drm/i915/perf: Do not clear pollin for small user read buffers
1bbcf69e42fe7fd49b6f4339c970729d0e343753 drm/ttm: flush the fence on the bo after we individualize the reservation object
c2850c125d919efbb3a9ab46410d23912934f585 drm/amd/display: Don't try hdcp1.4 when content_type is set to type1
d3d19d6fc5736a798b118971935ce274f7deaa82 fbdev: potential information leak in do_fb_ioctl()
3bae20137cae6c03f58f96c0bc9f3d46f0bc17d4 drm/amd/display: Calculate scaling ratios on every medium/full update
dadce777e0947b9b6839f06f360882e54ba2a154 drm/amdgpu: fix wrong vram lost counter increment V2
8623b5255ae7ccaf276aac3920787bf575fa6b37 drm/scheduler: fix drm_sched_get_cleanup_job
652a6a858fcfe2ee053856b52c4736f61b3982be drm/amdgpu: invalidate L2 before SDMA IBs (v2)
af031f078aeae3c6179a4618ce1aa8eda861ee10 drm/amd/display: Fix green screen issue after suspend
cb593e5d2b6d3ad489669914d9fd1c64c7a4a6af drm/i915/gem: Hold obj->vma.lock over for_each_ggtt_vma()
2759e395358b2b909577928894f856ab75bea41a drm/i915/gt: Check cacheline is valid before acquiring
1e8a6ce9186dbf342eebc07cf14cae5e82164e03 drm/bridge: anx6345: set correct BPC for display_info of connector
45a5e639548c459a5accebad340078e4e6e0e512 drm/amd/powerplay: fix resume failed as smu table initialize early exit
94fa56605866282512a7589e22f47195cdcc5cf8 drm/amdgpu: move kfd suspend after ip_suspend_phase1
fde812b32c1e3f24da305aa5e761840c2460974b drm/amdgpu: drop redundant cg/pg ungate on runpm enter
8b91fd8bb1920a73b2c3a990a12d886fc62e1eef drm/amd/display: work around fp code being emitted outside of DC_FP_START/END
dbff5a8db9c630f61a892ab41a283445e01270f5 drm/i915/tgl: Add Wa_14010477008:tgl
3cbdb97564a39020262e62b655e788b63cf426cb drm/i915/tgl: TBT AUX should use TC power well ops
edcb9028d66b44d74ba4f8b9daa379b004dc1f85 drm/i915/display: Load DP_TP_CTL/STATUS offset before use it
422d9091f7be46b0d38c562a5750195af832370a drm/amd/display: blank dp stream before re-train the link
3ebd17f53556fff2809793b5d2c2259a1f2714dd drm/amd/display: check if REFCLK_CNTL register is present
1ab864a006690d7a387498589464f9ec8509ff9e drm/amd/display: Defer cursor update around VUPDATE for all ASIC
77ef333e48ba21181b4b7b812ef623305b0b0c10 drm/amd/display: Update downspread percent to match spreadsheet for DCN2.1
a211da9c771bf97395a3ced83a3aa383372b13a7 drm/i915/gt: Make timeslicing an explicit engine property
a95f3ac21d64d62c746f836598d1467d5837fa28 drm/i915/gem: Remove object_is_locked assertion from unpin_from_display_plane
1cba0987610a1508358d1a3704fdb9c98b3be0ba drm/amdgpu: force fbdev into vram
6b6cd2ebd8d071e55998e32b648bb8081f7f02bb drm/i915: Mark concurrent submissions with a weak-dependency
6b7fc6a3e6af4ff5773949d0fed70d8e7f68d5ce Make the "Reducing compressed framebufer size" message be DRM_INFO_ONCE()
b0be3c3a2500b46682b3eb7ac5024b8982ed0364 drm/amd/amdgpu: add raven1 part to the gfxoff quirk list
a639b0c15065df930467695b76ef38d5edaed049 drm/i915/perf: Invalidate OA TLB on when closing perf stream
3882581753d1cca0d32b5a8ad81791b79fb35d67 drm/i915/tgl: Add new PCI IDs to TGL
106d4ffd6cb8f15f3b66c0f64c16dfeda4f395e2 drm/i915/tgl: Add definitions for VRR registers and bits
bd3cf6f7ce209a48e55670cc4b95f16fa057a0bc drm/i915/dp/tgl+: Update combo phy vswing tables
70988115ac69ecc249aa0f8e8265e8daf87bc28c drm/i915/dp: Return the right vswing tables
bd46aa22a86a1d500c429c2f2e28d5b2d4db0777 drm/i915/selftests: Also wait for the scratch buffer to be bound
eeec73f8a4a4d27a1e7be3dedc4b9c81e42ccc0b drm/i915/gt: Skip rmw for masked registers
380f0423180768f4a2f368c3ee3d417e255de176 drm/i915: Move ringbuffer WAs to engine workaround list
561db8296d8b88ac21e76f99ba95f8de2c830359 drm/i915: Disable tesselation clock gating on tgl A0
0db1a5f8706a8cfb905b9cf3607c2ad626e7bff1 drm/i915: Implement Wa_1607090982
3873fd1a43c70bab5049a1fc7f128a65779d1575 drm/i915: Use engine wa list for Wa_1607090982
ac204c1b34a2f0443265198a5e53795431794bd2 drm/i915/tgl: Add Wa_1808121037 to tgl.
ec1e12645ff3987f660ef9dc21c9db548b43ee9b drm/i915/tgl: Implement Wa_1409804808
072d069a045971c589269fb44f64082447a8ca79 drm/i915/tgl: Implement Wa_1806527549
52c2e4e6f12cb2261e6d430596d9884fd85c53df drm/i915/tgl: Add Wa_1409085225, Wa_14010229206
f2097beed59e8811c218222b17d2b3bfd5ce2110 drm/i915/tgl: Extend Wa_1606931601 for all steppings
e2049b4c0c2ae90529f84c2ce540b1cde0539f63 drm/i915/tgl: Add note to Wa_1607297627
d55204d3f829fbc357e4dca6800270295372e703 drm/i915/tgl: Add note about Wa_1607063988
0bd06a59df2179151d4a3ef4dec1e7f22f7c4ef1 drm/i915/tgl: Fix the Wa number of a fix
7028b08109f31e92925419c2a54b264a495d9822 drm/i915/tgl: Add note about Wa_1409142259
f5e5a33037a8272d545f022f4f28d20948fd4cb8 drm/i915/tgl: Add Wa number to WaAllowPMDepthAndInvocationCountAccessFromUMD
3551ff92874405674b58ac0f5742069a5ddfc462 drm/i915/gen11: Moving WAs to rcs_engine_wa_init()
50148a25f841dc1e2cffe1669d4782dfa75d85d6 drm/i915/tgl: Move and restrict Wa_1408615072
9b11bbf0c4008fa0b715ed68db0d5669175413c5 drm/i915/tgl: WaDisableGPGPUMidThreadPreemption
b592322f50929a7bbdc542f85a803edf7cfc4d74 drm/i915/tgl: Make Wa_1606700617 permanent
dbe748cd3af4a7c264a94e3e7c56a084dbd0164d drm/i915/tgl: Don't treat unslice registers as masked
14f49be483b57911f1b9733d1ea2f4d920968418 drm/i915: Add Wa_1406306137:icl,ehl
fb899dd8ea9c4ac5928b86946e6536790981adae drm/i915: Apply Wa_1406680159:icl,ehl as an engine workaround
34a77b0b7b867d24945be7722ce1543c48161450 drm/i915: Add Wa_1605460711 / Wa_1408767742 to ICL and EHL
63d0f3ea8ebb67160eca281320d255c72b0cb51a drm/i915/tgl: Make Wa_14010229206 permanent
2a040f0d08c3811f33b9880f5c0d84cb66e8fd74 drm/i915/tgl: Initialize multicast register steering for workarounds
61b088c5374a9f886efa1edbb49ce552bd1f9cba drm/i915/ehl: Restrict w/a 1607087056 for EHL/JSL
fa7edcd25cd0ffd0321d89c2cf0257ce043c8e60 drm/i915: Use intel_attached_encoder()
70a221b2428804e0883aec2dde25147c247cc46f drm/i915: Prefer intel_connector over drm_connector in hotplug code
012ee690372ccc370d4c13cb137dd2e17e2cfc6b drm/i915: Introduce intel_connector_hpd_pin()
8c8919c7c99f097c9e6a441486c1c263277288b0 drm/i915: Add a retry counter for hotplug detect retries
b4df5405f3e67e408554c9fd837faa3789b2ac32 drm/i915: Extend hotplug detect retry on TypeC connectors to 5 seconds
f26f1db5d2be446324140ec096cc9a31e7e7c891 drm/i915: do AUD_FREQ_CNTRL state save on all gen9+ platforms
442e7ee834e8528ec85ea0df3c76bfe6c6742f5a drm/i915: Add intel_atomic_get_bw_*_state helpers
a389c49fac556cba82edee7a5724269ec2d28981 drm/i915: Prepare to extract gen specific functions from intel_can_enable_sagv
680e1af713d92940e39a313a8592b13a6885a14c drm/i915: Add pre/post plane updates for SAGV
aac978718bb480fee1b4a577727c0c06e7ae65db drm/i915: Introduce intel_calc_active_pipes()
9728889f42b9ba078f86cd11535a89df29e93b33 drm/i915: Use bw state for per crtc SAGV evaluation
ecab0f3d055d333640bbe2aa5a5141574a65c534 drm/i915: Track active_pipes in bw_state
1d0a6c8486aa53f7545e80f5f0293ed99e48ffc0 drm/i915: Extract skl SAGV checking
93a0ed6cc164bad2bc9afcf1d06186f8425020af drm/i915: split intel_modeset_driver_remove() to pre/post irq uninstall
f20a60fb7aef3f5aecee4a9c30e36ee3e518fa16 drm/i915: split i915_driver_modeset_remove() to pre/post irq uninstall
b664259f3fe2c7a967e9fa4ba6d3af6a2addaa99 drm/i915: split i915_driver_modeset_probe() to pre/post irq install
80f286a552c6cc554199a7d14b76836cffabd451 drm/i915: split intel_modeset_init() to pre/post irq install
c0ff9e5e69f33ce5051f33cc4cb35afa754de01c drm/i915: Add missing deinitialization cases of load failure
34a3f0b273a7196b98668324556bce9f6dc091d7 drm/i915/display: Move out code to return the digital_port of the aux ch
dba6b0b4eab362a886db616ee38c1d624914d98b drm/i915/display: Add intel_legacy_aux_to_power_domain()
f8bb28e63a1e9f46fe15f63e924fab643ff8abe0 drm/i915/display: Split hsw_power_well_enable() into two
feb7e0ef5ff820ee7242bb46cfe3d0dd3e234c38 drm/i915/tc/icl: Implement TC cold sequences
7ce40a671538c225ea8eb170830cad90b16ec211 drm/i915/tc: Skip ref held check for TC legacy aux power wells
3c02934b24e37344b8c1c6f9df55efc8891e6251 drm/i915/tc/tgl: Implement TC cold sequences
3ed347d1a73ea485ea9f68df64e95cc164e1a790 drm/i915/tc: Catch TC users accessing FIA registers without enable aux
0f8925090ac7ad451ed9e803662ebe3214dc8072 drm/i915/tc: Do not warn when aux power well of static TC ports timeout
3c0ec2c2d5948356a22c8f1c08a8087b12a303e7 drm/i915: Flatten intel_dp_check_mst_status() a bit
f0617ff0b89416d5e15e14c22489ae3013d343fa drm/i915: Push MST link retraining to the hotplug work
f02ac414ba9497d1887b1de7fe69954284f157ac Revert "drm/i915/tgl: Include ro parts of l3 to invalidate"
32d7171ee2ae6e19c63b826904cf62d3d5a7f6fa drm/i915/gen12: Fix HDC pipeline flush
0c7c0c8e6f09e0301e02266a0c83611d721adebb drm/i915/gen12: Flush L3
d248b371f7479a99caccf91da2ec6adee85e5e70 drm/i915/gen12: Invalidate aux table entries forcibly
972282c4cf2454af7dca3fec16b8f2cc72d4238c drm/i915/gen12: Add aux table invalidate for all engines
fa1232ea84515533a8c52f9b88151d2bef4c913d drm/nouveau/kms/nv50-: Initialize core channel in nouveau_display_create()
4a2cb4181b077cf028c955d1f61d9244b2e93263 drm/nouveau/kms/nv50-: Probe SOR and PIOR caps for DP interlacing support
bbdf6a5891fc46b23a91c16941cc8b18ff37ac43 drm/nouveau/kms/nv50-: Move 8BPC limit for MST into nv50_mstc_get_modes()
d6a9efece7248d3cbd7bf65d3a8325e8e5dceec0 drm/nouveau/kms/nv50-: Share DP SST mode_valid() handling with MST
41ef3dcd86443fab3f0ba50902d13935bc12d24f drm/amd/display: Fix RV2 Variant Detection
6cc47f3f96345fb21eaff8996d31939ffbda0f58 drm/amdgpu/display: Fix Pollock Variant Detection
1e461c37d1fb6712561ad682b2d67ed4f5cbd3ff drm/amd/display: Use cursor locking to prevent flip delays
31ecebee9c36d5e5e113a357a655d993fa916174 drm/amd/display: Defer cursor lock until after VUPDATE
11bde986002c0af67eb92d73321d06baefae7128 block, zoned: fix integer overflow with BLKRESETZONE et al
c7b1bf5cca76a31845a7d9e58cec7ff8f1cb0d4d blk-mq: Document the functions that iterate over requests
ab11fe5af1049598d1ff73014f3ea65663246a6e blk-mq-tag: document tag iteration helper return value
3382a567efd4015697f087f2e91ac08b90577876 nvme: force complete cancelled requests
a5ea5811058ddb91da604afe77acd5ff29babe29 blk-mq: move the call to blk_queue_enter_live out of blk_mq_get_request
35b371ff01410ec7c73312f1c1c320de35fcfd0f blk-mq: remove a pointless queue enter pair in blk_mq_alloc_request_hctx
e6e7abffe386b614a194ec32457a00c304c980f4 blk-mq: simplify the blk_mq_get_request calling convention
7ea4d8a4d683298abd346abf89567774de2fa34a blk-mq: move more request initialization to blk_mq_rq_ctx_init
600c3b0cea784aaba77df3ed4a6b4f2ebfa935ce blk-mq: open code __blk_mq_alloc_request in blk_mq_alloc_request_hctx
602380d28e28b454683efac41dc4b2862d055d91 blk-mq: add blk_mq_all_tag_iter
bf0beec0607db3c6f6fb7bd2c6d503792b05cf3f blk-mq: drain I/O when all CPUs in a hctx are offline
22f614bc0f376e7a1bcf1a2cd912885f4a933045 blk-mq: fix blk_mq_all_tag_iter
50493364e784b6e4077e41ab10eba4f798d13d9a NFS: Have _nfs4_proc_secinfo() call nfs4_call_sync_custom()
4c952e3d1b0dc1835fda7f191b6f92e28b2fa435 NFS: Have nfs41_proc_reclaim_complete() call nfs4_call_sync_custom()
cc15e24a3af249455158bdb2ad02b9685eb4d6e9 NFS: Have nfs41_proc_secinfo_no_name() call nfs4_call_sync_custom()
714fbc73888f59321854e7f6c2f224213923bcad SUNRPC: RPC level errors should always set task->tk_rpc_status
1c79031f8a75c132bbd42e3ef20267af97b67466 drivers: Remove inclusion of vermagic header
0735ccc9d9a4ce09154395feb70b804de7cc6ebf ionic: Use debugfs_create_bool() to export bool
5b3f3f2a71ed1cecf6fcf9e8c858a89589415449 ionic: support longer tx sg lists
c4e7a75a096c02035a102686e2569e7b0341a122 ionic: updates to ionic FW api description
a836c352291d4ad4031743a97a61f7916fe519b7 ionic: protect vf calls from fw reset
cba155d591aa28689332bc568632d2f868690be1 ionic: add support for more xcvr types
62ba8766f775e5e26c21731c695f68541d504ea6 ionic: shorter dev cmd wait time
5c7843112543c7726e7fe31ecc76476f296b7960 ionic: reset device at probe
36ac2c50924892a28e17ff463e354fec7650ee19 ionic: ionic_intr_free parameter change
c06107cabea356db62f45bf8049a260c238fadf2 ionic: more ionic name tweaks
f64e0c5698b7b1abb08b3d5bc07f95db45e87d76 ionic: add more ethtool stats
976ee3b21119dcf5c6d96233d688a1453f29fa83 ionic: wait on queue start until after IFF_UP
77f972a7077d06d565243ecc192f45e1e5813cf1 ionic: remove support for mgmt device
ef7232da6bcd4294cbb2d424bc35885721570f01 ionic: export features for vlans to use
3103b6feb4454646558eedc50ece728bc469f341 ionic: no link check while resetting queues
c25cba3689c7ab5ae6ee7228d1d49a5652429229 ionic: add pcie_print_link_status
2f58967979409ea3ec799343aa35e9007f735a3b cifs: multichannel: try to rebind when reconnecting a channel
e755799aefa9385469bec49b2c2ccf1aaa33829a libnvdimm: Move nvdimm_bus_attribute_group to device_type
9b2ed9cb975c63f5534daaebeb225ab52b589372 mm: remove CONFIG_MIGRATE_VMA_HELPER
d7670879c5c4aa443d518fb234a9e5f30931efa3 mm, slab: fix sign conversion problem in memcg_uncharge_slab()
e6237b6feb37582fbd6bd7a8336d1256a6b4b4f9 NFSv4.1: Don't rebind to the same source port when reconnecting to the server
93920f61c2ad7edb01e63323832585796af75fc9 x86/cpu: Add 'table' argument to cpu_matches()
7e5b3c267d256822407a22fdce6afdf9cd13f9fb x86/speculation: Add Special Register Buffer Data Sampling (SRBDS) mitigation
f56bf76f79f3dc15f17433dda1b567d34f18e699 nvme-fc: Ensure private pointers are NULL if no data
b5bd357cf8b65d31e32b1668293cbeedb6c06334 block: add docs for gendisk / request_queue refcount helpers
763b58923aeb0a06c5a5f7e5fbb4c654c644d91d block: clarify context for refcount increment helpers
e8c7d14ac6c37c173ec606907d38802b00302988 block: revert back to synchronous request_queue removal
9cc7680149b238223bbb8bcf3272f6bd47f1fbfb nfsd: make 'boot_time' 64-bit wide
20b7d86f29d39e8ae19bb29c24ffee70dc385ddf nfsd: use boottime for lease expiry calculation
abf8af78a61523c15d366228b4a598141208a264 SUNRPC: Capture signalled RPC tasks
a1147b8281bda99bda99892233e1900329a9cbf1 NFS: Fix up directory verifier races
1c230208f53de479352cdb7fa2f851005df7cdc9 iomap: start moving code to fs/iomap/
a45c0eccc564649541305c71539350c7a890226e iomap: move the swapfile code into a separate file
5157fb8f5ae123badeeb5effd0716712066e20d8 iomap: move the file mapping reporting code into a separate file
56a178981d47075f6fe5e1c4de77036c821d2877 iomap: move the SEEK_HOLE code into a separate file
db074436f421967f4f30cfbb6fbc2a728f3e62b3 iomap: move the direct IO code into a separate file
afc51aaa22f26cb2894083c4f25097e0950f1609 iomap: move the buffered IO code into a separate file
cb7181ff4b1ca1e4a9dbea8a3982142ce4ed73fd iomap: move the main iteration code into a separate file
5d907307adc14cd5148b07629c2b4535acd06062 iomap: move internal declarations into fs/iomap/
0ce38c5f929c83dff8ea805f6c6ef2eb97b66431 iomap: fix Invalid License ID
6fe7b9901400152238e1b76198747f6716c78aad iomap: split size and error for iomap_dio_rw ->end_io
838c4f3d7515efe9d0e32c846fb5d102b6d8a29d iomap: move the iomap_dio_rw ->end_io callback into a structure
13ef954445df4fd1d7c003a500ec5ce49573e14b iomap: Allow forcing of waiting for running DIO in iomap_dio_rw()
906753befc4d2610194cd4d3d2ed15dff1ed1ca0 xfs: Use iomap_dio_rw to wait for unaligned direct IO
4e087a3b313cc664057279b1e40372fc97e3e212 xfs: use a struct iomap in xfs_writepage_ctx
433dad94ec5d6b90385b56a8bc8718dd9542b289 xfs: refactor the ioend merging code
5653017bc44e54baa299f3523f160c23ac0628fd xfs: turn io_append_trans into an io_private void pointer
760fea8bfb7f6095df3c4d37987b86b818f78c88 xfs: remove the fork fields in the writepage_ctx and ioend
009d8d849d3ff59b1a23d2df2c55f2130b2ec7f2 iomap: zero newly allocated mapped blocks
9e91c5728cab3d0aa3197d009c3d63e147914e77 iomap: lift common tracing code from xfs to iomap
598ecfbaa742aca0dcdbbea25681406f95cc0b63 iomap: lift the xfs writeback code to iomap
3e19e6f3eeea26490a84cdd18c7220e640f4837e iomap: warn on inline maps in iomap_writepage_map
ab08b01ec0a205d9c98e712eb504c850a51e6fdb iomap: move struct iomap_page out of iomap.h
b3d423ec898ae27007a9c49915ac06a2f50b404f iomap: cleanup iomap_ioend_compare
48d64cd18b33791d4efb2b9dd10104f84dde7d3c iomap: pass a struct page to iomap_finish_page_writeback
9cd0ed63ca51411af2c8323cbbeaa33d16c62688 iomap: enhance writeback error message
c12d6fa88d09044df8bc91efa0e1a6fd2c5c0e1c iomap: remove the unused iomap argument to __iomap_write_end
dcd6158d15c7a57d448103e1d51dac5e1a19a406 iomap: always use AOP_FLAG_NOFS in iomap_write_begin
3590c4d8979bcc364e2ded95ab3966b4e436b7bf iomap: ignore non-shared or non-data blocks in xfs_file_dirty
d3b404396977fde1daca3fb4fd4d3b01a3749093 iomap: move the zeroing case out of iomap_read_page_sync
32a38a4991043976fc2d8840a55ce5dde41fdbd0 iomap: use write_begin to read pages to unshare
c039b99792726346ad46ff17c5a5bcb77a5edac4 iomap: use a srcmap for a read-modify-write I/O
a901004214994f12523b47521cddfa4426f284c1 fs/iomap: remove redundant check in iomap_dio_rw()
6334b91e502ca1ec10157f2a3a2c74eea6b5e279 iomap: trace iomap_appply results
f550ee9b85fd47f85e31965b908a7c1044c531aa iomap: Do not create fake iter in iomap_dio_bio_actor()
88cfd30e188fcf6fd8304586c936a6f22fb665e5 iomap: remove unneeded variable in iomap_dio_rw()
1cea335d1db1ce6ab71b3d2f94a807112b738a0f iomap: fix sub-page uptodate handling
c275779ff2dd51c96eaae04fac5d766421d6c596 iomap: stop using ioend after it's been freed in iomap_finish_ioend()
243145bc4336684c69f95de0a303b31f2e5bf264 fs: Fix page_mkwrite off-by-one errors
1ac994525b9d3b6245c1a61632156f19ab73fccb iomap: Remove pgoff from tracepoints
d9973ce2fe5bcdc5e01bb3f49833d152b8e166ca iomap: fix comments in iomap_dio_rw
457df33e035a2cffc6561992f3f25a6c61605c46 iomap: Handle memory allocation failure in readahead
0fdcf78d59737939ea449b512d02c3733a22c8e1 net: use flow_indr_dev_setup_offload()
9eabd188716b2c53d8b9d23e969c6c17049f0fcc mlx5: update indirect block support
709ffbe19b777e8fc952e2fdcfd8e6f50c8ef08c net: remove indirect block netdev event registration
2c8897953f3b2ff5498f3f275708a742bfcdbc24 netfilter: flowtable: Add pending bit for offload work
762f926d6f19b9ab4dee0f98d55fc67e276cd094 net/sched: act_ct: Make tcf_ct_flow_table_restore_skb inline
505ee3a1cab96785fbc2c7cdb41ab677ec270c3c netfilter: flowtable: Make nf_flow_table_offload_add/del_cb inline
0a454bdd501ad1aa30bb72e9581efa338ad6ce5c ceph: reorganize __send_cap for less spinlock abuse
6f05b30ea063a2a05dda47a4105a69267ae5270f ceph: reset i_requested_max_size if file write is not wanted
d67c72e6cce99eab5ab9d62c599e33e5141ff8b4 ceph: request expedited service on session's last cap flush
e64f44a884657358812e6c057957be546db03cbe ceph: skip checking caps when session reconnecting and releasing reqs
22d2cfdffa5bff3566e16cb7320e13ceb814674b libceph: move away from global osd_req_flags
75da98586af75eb80664714a67a9895bf0a5517e NFS: finish_automount() requires us to hold 2 refs to the mount record
99d5cadfde2b1acb7650021df5abaa5ec447dd10 kexec_file: split KEXEC_VERIFY_SIG into KEXEC_SIG and KEXEC_SIG_FORCE
45893a0abee6b5fd52994a3a1095735aeaec472b kexec: Fix file verification on S390
779df6a5480f1307d51b66ea72352be592265cad NFS: Ensure security label is set for root inode
b59eabd23ee53e8c3492602722e1697f9a2f63ad ionic: tame the watchdog timer on reconfig
77ce1a47ebca88bf1eb3018855fc1709c7a1ed86 docs: filesystems: add overlayfs to index.rst
ee5340abab3babb91c1807cea47de4468b2dfc91 EDAC, {skx,i10nm}: Make some configurations CPU model specific
ce20670828c1228ecd37befbdda87a1f87a803b9 EDAC/i10nm: Update driver to support different bus number config register offsets
e3326ae3d59e443a379367c6936941d6ab55d316 KVM: PPC: Book3S HV: Relax check on H_SVM_INIT_ABORT
512721d2fcdb1bcfd87a0ffa7822c0ea37e3c65f KVM: PPC: Book3S HV: Read ibm,secure-memory nodes
63d04348371b7ea4a134bcf47c79763d969e9168 KVM: x86: move kvm_create_vcpu_debugfs after last failure point
66d69e081b526b6a6031f0d3ca8ddff71e5707a5 selftests: fix kvm relocatable native/cross builds and installs
996ed22c7a5251d76dcdfe5026ef8230e90066d9 arch/x86/kvm/svm/sev.c: change flag passed to GUP fast in sev_pin_memory()
fa44b82eb8318facc56356afa897f3f3105172e1 KVM: x86: Move MPK feature detection to common code
5688fed649f15a232e75148afb0a28864046f44c KVM: x86: remove unnecessary rmap walk of read-only memslots
3741679ba4b4b207e52587cfbee1a9bba947b15b KVM: x86: minor code refactor and comments fixup around dirty logging
b80db73dc8be7022adae1b4414a1bebce50fe915 KVM: selftests: Fix build with "make ARCH=x86_64"
75ad6e800217220b8ee63904fb472fd5c3819259 KVM: selftests: fix vmx_preemption_timer_test build with GCC10
fb7333dfd812062d3d51f377e70c1d3a3788472b KVM: SVM: fix calls to is_intercept
e649b3f0188f8fd34dd0dde8d43fd3312b902fb2 KVM: x86: Fix APIC page invalidation race
2067028512b60c78961c3e075bb72cc44310355c KVM: selftests: Ignore KVM 5-level paging support for VM_MODE_PXXV48_4K
80fbd280beea1bcc298660f9024cbc4bf392c7f7 KVM: x86: Unexport x86_fpu_cache and make it static
41a23ab336fbf4d01036e1aa6369d7364aa29b4c KVM: selftests: do not substitute SVM/VMX check with KVM_CAP_NESTED_STATE check
7e464770a434f7e29bad4b2da7894d32775d6d6f KVM: selftests: Don't probe KVM_CAP_HYPERV_ENLIGHTENED_VMCS when nested VMX is unsupported
2a18b7e7cd8882f626316c340c6f2fca49b5fa12 KVM: async_pf: Inject 'page ready' event only if 'page not present' was previously injected
cbd717585b8038d93c309176bb563a5c6de60ac7 KVM: x86/pmu: Tweak kvm_pmu_get_msr to pass 'struct msr_data' in
912da924a29fc6bd466b98a8791d6f7cf74caf61 netfilter: remove NF_NAT_RANGE_PROTO_RANDOM support
716b23c19edd47134104d39e3537d21c0b68d7d1 netfilter: nat: un-export nf_nat_l4proto_unique_tuple
203f2e78200c27e42e9f7d063091f950bf5fe4a0 netfilter: nat: remove l4proto->unique_tuple
40e786bd296d5517b1f6c4bcc9ed13e502606ced netfilter: nat: fold in_range indirection into caller
fe2d0020994cd9d4f451e3024109319af287413b netfilter: nat: remove l4proto->in_range
76b90019e03d866eab85cb57c2a6416ab94284dc netfilter: nat: remove l4proto->nlattr_to_range
faec18dbb0405c7d4dda025054511dc3a6696918 netfilter: nat: remove l4proto->manip_pkt
5cbabeec1eb758233b35683123de446a57852932 netfilter: nat: remove nf_nat_l4proto struct
5bdac418f33f60b07a34e01e722889140ee8fac9 netfilter: nat: fix icmp id randomization
61177e911dad660df86a4553eb01c95ece2f6a82 netfilter: nat: fix ICMP header corruption on ICMP errors
d535c8a69c1924e70186d80be0a9cecaf475f166 netfilter: conntrack: udp: only extend timeout to stream mode after 2s
df5e1629087a45ca915fa0f69ea662175261855e netfilter: conntrack: remove pkt_to_tuple callback
197c4300aec09b7cd2df124cea92f9f5a82efe42 netfilter: conntrack: remove invert_tuple callback
b184356d0a003ac5e82b4adf37f2d334df1d213c netfilter: conntrack: remove module owner field
44fb87f6351d04fafae2b17df5f46f1ce22c6f93 netfilter: conntrack: remove remaining l4proto indirect packet calls
edf0338dabf0f330873f7a9f84ea9f9ac431c0a8 netfilter: conntrack: remove pernet l4 proto register interface
303e0c5589592e4f623bfcaf4292a1ed816328ad netfilter: conntrack: avoid unneeded nf_conntrack_l4proto lookups
e2f7cc72cbf42e037229d8bd998966569662442f netfilter: conntrack: fix bogus port values for other l4 protocols
d1aca8ab3104aa7131f5ab144c6f586b54df084b netfilter: nat: merge ipv4 and ipv6 masquerade functionality
096d09067a67702f9802e5b3a0fc2ea9c22f1cf6 netfilter: nat: move nlattr parse and xfrm session decode to core
8303b7e8f018724a2cd7752eb29c2801fa8c4067 netfilter: nat: fix spurious connection timeouts
3bf195ae6037e310d693ff3313401cfaf1261b71 netfilter: nat: merge nf_nat_ipv4,6 into nat core
14cb1a6e29675b3d4ab5f59e50e1c101ae3349e4 netfilter: nat: remove nf_nat_l4proto.h
2e666b229d97a9cdbc9fe571737eb297e7232098 netfilter: nat: remove l3 manip_pkt hook
03fe5efc4c9c8c7157092d0cbb5d1bbea629ce48 netfilter: nat: remove csum_update hook
dac3fe72596f91011afc649a9d181b18466dd895 netfilter: nat: remove csum_recalc hook
d6c4c8ffb5e54b0516742f3386ea9e329e019455 netfilter: nat: remove l3proto struct
d2c5c103b1337f590b7edf1509a6e294bdf22402 netfilter: nat: remove nf_nat_l3proto.h and nf_nat_core.h
c78efc99c75089efd3df2ebd3bd279b52b4ab125 netfilter: nf_tables: nat: merge nft_redir protocol specific modules
a9ce849e786787af4b7dffd48d49b97b04671f8c netfilter: nf_tables: nat: merge nft_masq protocol specific modules
db8ab38880e06dedbfc879e75f5b0ddc495f4eb6 netfilter: nf_tables: merge ipv4 and ipv6 nat chain types
46f7487e161b195a1bd7ddbd9c6aba9c93ec881a netfilter: nat: don't register device notifier twice
d164385ec572cbe3335a635ac308760e126d4ec0 netfilter: nat: add inet family nat support
c1deb065cf3b5bcd483e3f03479f930edb151b99 netfilter: nf_tables: merge route type into core
071657d2c38c54bf047cf2280fc96e4a3e8a91f2 netfilter: nft_masq: add inet support
63ce3940f3ab1d81e7c6d310dba52aed85db6aa1 netfilter: nft_redir: add inet support
6bac76db1da3cb162c425d58ae421486f8e43955 netfilter: nat: fix udp checksum corruption
74710e05906c37da6b436386dc13c44dbe5d8308 netfilter: nft_redir: fix module autoload with ip4
b4f1483cbfa5fafca4874e90063f75603edbc210 netfilter: nf_tables: Support auto-loading for inet nat
6a42cefb25d8bdc1b391f4a53c78c32164eea2dd netfilter: nft_chain_nat: inet family is missing module ownership
5142967ab524eb8e5c1f6122e46e2df81bae178b netfilter: nf_tables: fix module autoload with inet family
f41828ee10b36644bb2b2bfa9dd1d02f55aa0516 netfilter: nf_tables: fix module autoload for redir
b4faef1739dd1f3b3981b8bf173a2266ea86b1eb netfilter: nat: fix error handling upon registering inet hook
458de8a97f107e1b6120d608b93ae9e3de019a2e net: page_pool: API cleanup and comments
1ed4d92458a969e71e7914550b6f0c730c14d84e bpf: INET_DIAG support in bpf_sk_storage
085c20cacf2b72991ce1c9d99a5e2f1d9e73bb68 bpf: inet_diag: Dump bpf_sk_storages in inet_diag_dump()
65780c5627a26d788f10e2b1a37125779a556a58 veth: move xdp stats in a dedicated structure
1c5b82e55f152988778bebeea52fae7f6cea9a60 veth: introduce more specialized counters in veth_stats
66fe4a078879d1f7655363e7a7216703b72c68ad veth: distinguish between rx_drops and xdp_drops
9152cff0dd3df6613091ab8c8bf1c419a5f01047 veth: introduce more xdp counters
d99a7c2f3d0e65d3906bd7cf719223b0f8b5b481 veth: remove atomic64_add from veth_xdp_xmit hotpath
bd5ca3ef93cd8fb7e913f15eeb78e67a0d802274 libbpf: Add function to set link XDP fd while specifying old program
bd32aa1f5d2c0edab09c2d80af30cb829337ddef veth: rely on veth_rq in veth_xdp_flush_bq signature
5fe6e56776ba6979844f9ef5361f43852a7b16a2 veth: rely on peer veth_rq for ndo_xdp_xmit accounting
49b452c382da2c2d1ccee1265cbb92da905c82f7 libbpf: Fix type of old_fd in bpf_xdp_set_link_opts
be43224fc0e4697ad0d03107cbaf1ecf26e7ee72 netdevsim: Ensure policer drop counter always increases
4d59e59cf45046fe1263a935f8abc418bb61215c selftests: netdevsim: Always initialize 'RET' variable
3a5be9b8f43346a24f31c0017cb2566a6b2c72c5 intel_idle: Introduce 'use_acpi' module parameter
f10e80a19b07b58fc2adad7945f8313b01503bae efi/x86: Add TPM related EFI tables to unencrypted mapping checks
0b38b5e1d0e2f361e418e05c179db05bb688bbd6 s390: prevent leaking kernel address in BEAR
d4d5ca0baac3de82c00ebc7677ee84537c31ba3c perf stat: Increase perf metric output resolution
fa48494cce5f6360b0f8683cdf258fb45c666287 ionic: update the queue count on open
b4f1874c62168159fdb419ced4afc77c1b51c475 tpm: check event log version before reading final events
1c502e2e2d79b6a4c800c3806c70b58ad6ae784d crypto: chelsio - This fixes the libkcapi's cbc(aes) aio fail test cases
bed44d0c05d8efdda1ae98b1c7aa7b116abeadb2 crypto: chelsio - Recalculate iv only if it is needed
567be3a5d2270fb1971212f704240d6235a2c060 crypto: chelsio - Use multiple txq/rxq per tfm to process the requests
47a357de2b6b706af3c9471d5042f9ba8907031e net/mlx5: DR, Fix freeing in dr_create_rc_qp()
5f1572e6178e47c3ace55ced187d93240952c9cd net/mlx5e: Fix ethtool hfunc configuration change
0d156f2deda8675c29fa2b8b5ed9b374370e47f2 net/mlx5e: CT: Fix ipv6 nat header rewrite actions
e0cb8afdbba909085514f02a3df2d17e7eac1ae6 net/mlx5: E-Switch, Skip restore modify header between prios of same chain
636bb96852398548bfc797dc29a2a6d4f95fc693 net/mlx5e: en_tc: Rely just on register loopback for tunnel restoration
7983a675ba65c5f8dae7532dcd91a40adc237da8 net/mlx5: E-Switch, Enable chains only if regs loopback is enabled
799499850ae956c3ec3aceb84223bfb33b2bdcfc net/mlx5: E-switch, Fix error unwinding flow for steering init failure
34aba2c45024a0899776c2146d4ab105912d728d cxgb4/chcr : Register to tls add and del callback
8a30923e1598c050f2670b88d51e3752b52b49ae cxgb4/chcr: Save tx keys and handle HW response
5a4b9fe7fece62ecab6fb28fe92362f83b41c33e cxgb4/chcr: complete record tx handling
429765a149f18d4c26027a8e9ce12aeae5cd646e chcr: handle partial end part of a record
dc05f3df8faca14b7cebf0b2bbdeef75225d80f7 chcr: Handle first or middle part of record
62370a4f346dda9a7026445016db5f8eddd533a5 cxgb4/chcr: Add ipv6 support and statistics
21f6f946938693628721d68f13b8ea2afa789b4a crypto/chcr: Add missing include file <linux/highmem.h>
e14394e656855c218c0c6cf918c550d5fdc1401d crypto/chcr: fix incorrect ipv6 packet length
876aa9f527cd0ddc857337aba3683298b3abe6ab Crypto: chelsio - Fixes a deadlock between rtnl_lock and uld_mutex
93a09e74574b2b75319938ef4155fe841335e436 cxgb4: add adapter hotplug support for ULDs
a3ac249a1ab57552cb2a63e70556ee87610a591d cxgb4/chcr: Enable ktls settings at run time
071a43e660996d1517d02ea7724491cc5b93bb03 cxgb4/chcr: avoid -Wreturn-local-addr warning
ef1c75593e770aff8749e902aa0deb6855a3f485 crypto/chcr: error seen if CONFIG_CHELSIO_TLS_DEVICE isn't set
68289ae935da5a8488c0268111631f644d27b683 powerpc: change CONFIG_PPC_STD_MMU_32 to CONFIG_PPC_BOOK3S_32
5b3e84fc10ddb77193d6ac1d2be991d47264c716 powerpc: change CONFIG_PPC_STD_MMU to CONFIG_PPC_BOOK3S
d9642117914c9d3f800b3bacc19d7e388b04edb4 powerpc/mm: define empty update_mmu_cache() as static inline
4c1616ef036ffaaea95a29d7b6abf9d3e8eb9d92 powerpc/mm: move FSL_BOOK3 version of update_mmu_cache()
17312f258cf6eb584f276ad592972ade7e16e318 powerpc/mm: Move book3s32 specifics in subdirectory mm/book3s64
e5a1edb9fe4cfa07e37a59475f8f7d0a8939c73e powerpc/mm: move update_mmu_cache() into book3s hash utils.
fe4a6856cb4f4353a6cb8d3629bcfe9204e3d57d powerpc/pkeys: Avoid using lockless page table walk
c46241a370a61f0f264791abb9fc869016e749ce powerpc/pkeys: Check vma before returning key fault error to the user
ec4abf1e70cf6a3fe6e571d640260005c997c6e1 powerpc/mm/hash64: use _PAGE_PTE when checking for pte_present
2f92447f9f96583112420aa3cfb400ded55f667e powerpc/book3s64/hash: Use the pte_t address from the caller
15759cb054efdd45e6db8433a829a5734e6d50f6 powerpc/perf/callchain: Use __get_user_pages_fast in read_user_stack_slow
4b99412ed6972cc77c1f16009e1d00323fcef9ab powerpc/kvm/book3s: Add helper to walk partition scoped linux page table.
6cdf30375f82fbc1d30252096440265426c0993c powerpc/kvm/book3s: Use kvm helpers to walk shadow or secondary table
e881bfaf5a5f409390973e076333281465f2b0d9 KVM: PPC: Fix nested guest RC bits update
35528876a92917b60c20077121e5c6805936cd7d powerpc/kvm/book3s: Add helper for host page table walk
e3d8ed5518c7f50e24d2530b36d14b6c4284769f powerpc/kvm/book3s: Use find_kvm_host_pte in h_enter
8d19f1c8e1937baf74e1962aae9f90fa3aeab463 prctl: PR_{G,S}ET_IO_FLUSHER to support controlling memory reclaim
6650cdd9a8ccf00555dbbe743d58541ad8feb6a7 x86/split_lock: Enable split lock detection by kernel
dbaba47085b0c2aa793ce849750164bd3765e163 x86/split_lock: Rework the initialization flow of split lock detection
a6a60741035bb48ca8d9f92a138958818148064c x86/split_lock: Avoid runtime reads of the TEST_CTRL MSR
8122b047dd18ef6e7e1c564e28f3c7067c5a2d71 tools arch x86: Sync the msr-index.h copy with the kernel sources
48fd5b5ee714714f4cf9f9e1cba3b49b1fd40ed6 x86/split_lock: Bits in IA32_CORE_CAPABILITIES are not architectural
8b9a18a9f2494144fe23fe630d0734310fa65301 x86/split_lock: Add Tremont family CPU models
d7e94dbdac1a40924626b0efc7ff530c8baf5e4a x86/split_lock: Provide handle_guest_split_lock()
3ab0762d1edfda6ccbc08f636acab42c103c299f x86/split_lock: Update to use X86_MATCH_INTEL_FAM6_MODEL()
f45a645fa6af37abb5484a8d8be779283a38fb53 ice: report netlist version in .info_get
01b5e89aab498dad5a38d04a71beca2b562d9449 ice: Add VF promiscuous support
0fee35774d8f2277cfb101dd1d9d0d5e39015b93 ice: Provide more meaningful error message
88865fc4bbd61e48d04e2747d59b85d2014cca82 ice: Fix casting issues
53bb66983f34d4ff0af179fe228e2c55e1e45921 ice: cleanup vf_id signedness
1b8f15b64a006b5fbbfbc898c612a48a86fff6de ice: refactor filter functions
757976ab16be0d07e316998182d82ea7fcf561e2 ice: Fix check for removing/adding mac filters
86a2e00d20bd4f7fd0efd1cccd8d5a5d7270b640 ice: remove unnecessary check
148beb612031255156d68b342170140524afb36e ice: Initialize Flow Director resources
4ab956462f67763be4049b03a414aa7c9b2d4c96 ice: Support displaying ntuple rules
cac2a27cd9ab1638e21df11ec583d2bc919a3ae3 ice: Support IPv4 Flow Director filters
165d80d6adab51b6a2f9c40ad0c8d3dec18d7bef ice: Support IPv6 Flow Director filters
2c57ffcb199004825184f96081fbf036d3b2426a ice: Enable flex-bytes support
83af00395190bc2db05a67a417a2ea0d5967b74d ice: Restore filters following reset
28bf26724fdb0e02267d19e280d6717ee810a10d ice: Implement aRFS
4244910568ed2fed3532d86aa7fc910d2583fa41 ice: Call ice_aq_set_mac_cfg
7438a3b0947a2ef43c16bfb7b5b19048d6d92b14 ice: print Rx MDD auto reset message before VF reset
47ebc7b02485aa0c0e18f96368e6f6958735fcea ice: Check if unicast MAC exists before setting VF MAC
b82729195892f5fc1dd69a8cfb23731d3ef55578 ice: check for compatibility between DDP package and firmware
9d68a79c3b8fe88c1444c401aaf3496f7ed2a05d ice: fix usage of incorrect variable
c1e0883012a75a04180a6ebf23a869172187c506 ice: cleanup unsigned loops
fd7af71be54271a9f03b2e6f63e4b3ac1ecd113d kexec: do not verify the signature without the lockdown or mandatory signature
b791abf3201d724ac372c2ba1fa6e90d192e1dbf powerpc/papr_scm: Fetch nvdimm health information from PHYP
f517f7925b7b453cb83be06c268ba057b78e4792 ndctl/papr_scm,uapi: Add support for PAPR nvdimm specific methods
d35f18b554be015b6fa89fad6447c6fce8e6ad66 powerpc/papr_scm: Implement support for PAPR_PDSM_HEALTH
9e45524a011107a73bc2cdde8370c61e82e93a4d Bluetooth: btusb: Fix suspend issue for Realtek devices
010376ab7fd788a0eddb86b6de5869b3045b97e3 Bluetooth: hci_qca: wait for Pre shutdown complete event before sending the Power off pulse
16946de5905fff243c1e4415c4565803945e8c47 bluetooth: hci_bcm: Give more time to come out of reset
240b64a83165dde816664b50900aa12f1db92359 Bluetooth: btrtl: Add firmware version print
52c8c7a766ecc49ff2e4c1db30b0a24a019e31d4 bluetooth: bcm: Add support for loading firmware for BCM4345C5
65251e2e0ad379d89f5784626b8c40ff62220d8b Bluetooth: btrtl: Set HCI_QUIRK_SIMULTANEOUS_DISCOVERY
d182215d2fb9e58a7637efc937fa11dc15cf7a84 Bluetooth: btrtl: Remove redundant prefix from calls to rtl_dev macros
e14c167a58b80803f35edf575a33562411f9170d Bluetooth: hci_qca: Set HCI_QUIRK_SIMULTANEOUS_DISCOVERY for QCA UART Radio
f1300c0340872d7d02617f439433d70c6f47700f Bluetooth: btrtl: Remove trailing newline from calls to rtl_dev macros
d7ef0d1e39685b38c97b30daa6de0d50df004839 Bluetooth: btusb: Use cmd_timeout to reset Realtek device
c0a21a5294a5a220e7f9d6d1256f83d2fbfc4500 Bluetooth: btusb: Use IS_ENABLED instead of #ifdef
d171dfb621240ee6c77cb354c0767b6dd41f83fe Bluetooth: btrtl: Fix an issue for the incorrect error return code.
54976bc700ce8bf945b4d9bb587fd9a2aa607b93 Bluetooth: btwilink: drop superseded driver
cde9dde6e11a5ab54b6462cd46d82878926783bc Bluetooth: hci_qca: Add delay for wcn3990 stability
c29ff107e0bdf2911813dbae3e5808c5912cdff6 Bluetooth: hci_qca: Update regulator_set_load() usage
f2edd66e515b9944a7e516510a54959e5004181b Bluetooth: hci_qca: Don't vote for specific voltage
163d42fa83c6090071698533d33babd7bbf97147 Bluetooth: hci_qca: Use regulator bulk enable/disable
a9314e76da966da8101eb0f9f6a8ee10675e3aee Bluetooth: hci_qca: Split qca_power_setup()
bba79fee7a54ff5351fa36cb324d16b108a7ca06 Revert "Bluetooth: hci_qca: Add delay for wcn3990 stability"
515d6798fec9632fffb79261c511eb166f773273 Bluetooth: btrtl: remove unneeded semicolon
41d5b25fed0a010cedbdd25e56fdb92d59c233fa Bluetooth: hci_qca: add PM support
53121a7cc33b16f9f3dc4bed6d1df1a93a4f41de Bluetooth: btmtksdio: add MODULE_DEVICE_TABLE()
e303d124b70920ef86b26d792d8b959166a28f6e Bluetooth: btqca: Rename ROME specific variables to generic variables
b8dc647657d523ea6d6f169992c99fc3680a5f81 Bluetooth: btbcm: Add entry for BCM4334B0 UART Bluetooth
1199ab4c9e1d4cdfbabd70b4aadbc8e72c691f65 Bluetooth: btbcm: Add entry for BCM4335A0 UART bluetooth
34682110abc50ffea7e002b0c2fd7ea9e0000ccc Bluetooth: btusb: Edit the logical value for Realtek Bluetooth reset
5d6f391073d5c1c903ac12be72c66b96b2ae93f4 Bluetooth: hci_bcm: Disallow set_baudrate for BCM4354
eb762b94111b646b4f116ebfdbfcadbad14e12b3 Bluetooth: hci_bcm: Support pcm params in dts
22cc6b7a1dbb58da4afc539d9b7d470b23a25eea Bluetooth: btusb: fix non-atomic allocation in completion handler
3168c19d7eb17a0108a3b60ad8e8c1b18ea05c63 Bluetooth: btusb: fix memory leak on fw
7ecacafc240638148567742cca41aa7144b4fe1e Bluetooth: btusb: Disable runtime suspend on Realtek devices
9f3565b89c43d2a0082bccbc3918f2ebae739533 Bluetooth: hci_qca: Replace of_device_get_match_data with device_get_match_data
e601daed271e9eb1b923972a0a1af65f8c7bb77b Bluetooth: hci_bcm: Drive RTS only for BCM43438
d841502c79e3fda2ba0e8d64f9eb00e9dd884af0 Bluetooth: hci_qca: Collect controller memory dump during SSR
19220f35b3708dc069135046061fbe7366d5cb6e Bluetooth: btusb: Add support for 04ca:3021 QCA_ROME device
87c2a2a7d7631d0caa956b73f9f20010b5f55681 Bluetooth: hci_qca: Use vfree() instead of kfree()
56b084ed6eaa0a6353395deffb601dbd6570a1a5 Bluetooth: hci_qca: Remove set but not used variable 'opcode'
5e6d8401ade984296ae9629cb06458c2784e1882 Bluetooth: hci_qca: Add qca_power_on() API to support both wcn399x and Rome power up
f25a96c8eb46b86744540ade61c2dbc844c23dbd Bluetooth: hci_bcm: enable IRQ capability from devicetree
5559904ccc0867a0ce796761681e40defe4a5f44 Bluetooth: hci_qca: Add QCA Rome power off support to the qca_power_shutdown()
bb2500ab0270aa0d1d39614f08f4f9a2dc0df8c1 Bluetooth: hci_qca: Retry btsoc initialize when it fails
ae563183b647b3bdb47e8a78a5de879adf733735 Bluetooth: hci_qca: Enable power off/on support during hci down/up for QCA Rome
268d3636dfb22254324774de1f8875174b3be064 Bluetooth: btrtl: Use kvmalloc for FW allocations
66cb7051356434062108b5cd74744b6473150147 Bluetooth: hci_qca: Enable clocks required for BT SOC
f3d63f50c17af70b4aa7d25a9c359ca318365173 Bluetooth: hci_qca: Optimized code while enabling clocks for BT SOC
e22998f53a1e5a2e8c98d0f42506be985773b50c Bluetooth: Fix a typo in Kconfig
848fc6164158d697b70b390a2db5019663713f47 Bluetooth: hci_h5: btrtl: Add support for RTL8822C
7c2c3e63e1e97cf8547c5818544312fb916dd0b9 Bluetooth: hci_qca: Bug fixes while collecting controller memory dump
0830c0a4891f9de009dfaa585dfecefa4c67795b Bluetooth: hci_h5: Move variable into local scope
3e4e3f73b9f4944ebd8100dbe107f2325aa79c6d Bluetooth: btusb: Add flag to define wideband speech capability
4b127bd5f2cc1b2da041f472dab6dc729cdd4711 Bluetooth: Support querying for WBS support through MGMT
4f9ed5bd63dc16d061cdeb00eeff9d56e86a6beb Bluetooth: hci_qca: Not send vendor pre-shutdown command for QCA Rome
b63882549b2bf2979cb1506bdf783edf8b45c613 Bluetooth: btqca: Fix the NVM baudrate tag offcet for wcn3991
8a208b24d770c3db0099090a1ad62c848c363123 Bluetooth: hci_qca: Make bt_en and susclk not mandatory for QCA Rome
77131dfec6af114efd32610b4a6bbecd934e37d5 Bluetooth: hci_qca: Replace devm_gpiod_get() with devm_gpiod_get_optional()
00bce3fb0642b38fa2e5db3217526c3e0d5952ca Bluetooth: Enable erroneous data reporting if WBS is supported
4c371bb95cf06ded80df0e6139fdd77cee1d9a94 Bluetooth: Workaround directed advertising bug in Broadcom controllers
7d60a7a6cd04c34014e763b5d7ed35d6366e42aa compat_ioctl: move rfcomm handlers into driver
7a6038b30017c45e1110388083849689356a23ae compat_ioctl: move hci_sock handlers into driver
10bbffa3e88e3aae870c734b234c0718d26f97ab Bluetooth: Fix using advertising instance duration as timeout
492ad783a150cd352abba8723e5942521d938c8d Bluetooth: Fix not using LE_ADV_NONCONN_IND for instance 0
7fdf6c6a0d0e032aac2aa4537a23af1e04a397ce Bluetooth: Allow combination of BDADDR_PROPERTY and INVALID_BDADDR quirks
657cc646475b721f5c5bab82e7fd43302c7c8358 Bluetooth: Remove usage of BT_ERR_RATELIMITED macro
4b6e228e297b73451f3a4b12fb7d0b24d9d32e6f Bluetooth: Auto tune if input MTU is set to 0
600a87490ff9823d065fc15e86c709e707033ecc Bluetooth: Implementation of MGMT_OP_SET_BLOCKED_KEYS.
18f81241b74fb49d576c83fbbab9a0b6e3bb20d4 Bluetooth: Move {min,max}_key_size debugfs into hci_debugfs_create_le
11eb85ec42dc8c7a7ec519b90ccf2eeae9409de8 Bluetooth: Fix race condition in hci_release_sock()
6c08fc896b60893c5d673764b0668015d76df462 Bluetooth: Fix refcount use-after-free issue
2a154903cec20fb64ff4d7d617ca53c16f8fd53a Bluetooth: prefetch channel before killing sock
a7e454542bf8d57c75f59e7e7326c21db3d0bb3f Bluetooth: Replace zero-length array with flexible-array member
0c2ac7d4f08d330dc5b092b4beba9ef88602d369 Bluetooth: Use list_for_each_entry_rcu() to traverse RCU list in RCU read-side CS
d7d41682efc25d58b5bd8b80e85e3c9ce586635c Bluetooth: Fix Suspicious RCU usage warnings
a9e45698b37d4235ec98b5c0327de59759cb2ef2 Bluetooth: Remove adv set for directed advertising
15f02b91056253e8cdc592888f431da0731337b8 Bluetooth: L2CAP: Add initial code for Enhanced Credit Based Mode
4be5ca67d59d707a4b1c8608ca230ad65aa4f232 Bluetooth: L2CAP: Add module option to enable ECRED mode
00b383b8abd1207b2c86e09834ad1617f1dd0388 Bluetooth: Use bt_dev_err for RPA generation failure message
8a5956197d7eb7a0cbb5b4271111d1bf6e17f25c Bluetooth: fix off by one in err_data_reporting cmd masks.
9952d90ea2885d7cbf80cd233f694f09a9c0eaec Bluetooth: Handle PM_SUSPEND_PREPARE and PM_POST_SUSPEND
4f40afc6c76451daff7d0dcfc8a3d113ccf65bfc Bluetooth: Handle BR/EDR devices during suspend
dd522a7429b07e4441871ae75ebbfcf53635bdd4 Bluetooth: Handle LE devices during suspend
4867bd007d25a8dfd4ffc558534f7aec8b361789 Bluetooth: Pause discovery and advertising during suspend
b354e6c10eaf97a1f5aff4839795bd32ad32f0f9 Bluetooth: L2CAP: Fix a condition in l2cap_sock_recvmsg()
965995b7d7bef00c7952460fcf835ab8feb747ff Bluetooth: L2CAP: remove set but not used variable 'credits'
2d186fcd6d8d3a493894de48611e4925ddf7b951 Bluetooth: Fix incorrect branch in connection complete
8731840a345fb7ebfd0174ecc29aa21623bc2899 Bluetooth: Restore running state if suspend fails
da49b602f7f75ccc91386e1274b3ef71676cd092 Bluetooth: L2CAP: Use DEFER_SETUP to group ECRED connections
aaebf8e6088270e45d30314031b5d9a88a589cb9 Bluetooth: Fix incorrect type for window and interval
91779665c129d361c032d2a590b37a077b6cb9d7 Bluetooth: Modify LE window and interval for suspend
0ebeea8ca8a4d1d453ad299aef0507dab04f6e8d bpf: Restrict bpf_probe_read{, str}() only to archs where they work
111688ca1c4a43a7e482f5401f82c46326b8ed49 sched/fair: Fix negative imbalance in imbalance calculation
fd844ba9ae59b51e34e77105d79f8eca780b3bd6 sched/core: Check cpus_mask, not cpus_ptr in __set_cpus_allowed_ptr(), to fix mask corruption
e98fa02c4f2ea4991dae422ac7e34d102d2f0599 sched/fair: Eliminate bandwidth race between throttling and distribution
681370f4b00af0fcc65bbfb9f82de526ab7ceb0a nfsd4: fix nfsdfs reference count loop
467a3bb974320a23c0c000559cc54b64e06e9787 PCI: hv: Allocate a named fwnode instead of an address-based one
3a6fb6c4255c3893ab61e2bd4e9ae01ca6bbcd94 video: hyperv: hyperv_fb: Use physical memory for fb on HyperV Gen 1 VMs.
83d31e5271ac74aad14b5a1a2ed26923e1446329 KVM: nVMX: fixes for preemption timer migration
cb51a371d08e813b0be4253ad9efbc8488b69149 EDAC/ghes: Setup DIMM label from DMI and use it in error reports
60cf7c5ed5f7087c4de87a7676b8c82d96fd166c lockdown: Allow unprivileged users to see lockdown status
fcdb524d440d6326c286006e16f252b40ba4fd6a powerpc/kernel/sysfs: Refactor current sysfs.c
22697da36d0cee57c2a5750ef7d84e4d88da17e7 powerpc/kernel/sysfs: Add new config option PMU_SYSFS to enable PMU SPRs sysfs file creation
fbbbbd2f28aec991f3fbc248df211550fbdfd58c ext4: unsigned int compared against zero
6a66a7ded12baa6ebbb2e3e82f8cb91382814839 jbd2: move the clearing of b_modified flag to the journal_unmap_buffer()
c96dceeabf765d0b1b1f29c3bf50a5c01315b820 jbd2: do not clear the BH_Mapped flag when forgetting a metadata buffer
780f66e59231fcf882f36c63f287252ee47cc75a jbd2: improve comments about freeing data buffers whose page mapping is NULL
f0b594dfa47555d8d69e6865c882d65a9054cb81 net/mlx5e: Do not include rwlock.h directly
88b3d5c90e9685be54dd5bc441970044020eca76 net/mlx5e: Fix port buffers cell size value
eb32b3f53d283e8d68b6d86c3a6ed859b24dacae net/mlx5e: CT: Fix memory leak in cleanup
d39c9885b65740e737db8303ed3d344f2f6ceb35 net/mlx5e: Remove unused mlx5e_xsk_first_unused_channel
04dfa7057bd189780576d73ce360c874ed507e08 net/mlx5: Avoid eswitch header inclusion in fs core layer
d2658b4a1d06e8458f2c88ee600afa1b1acd2627 net/mlx5: CT: Remove unused variables
bc562be9674bce9c42dd6d057558d498698a801a net/mlx5e: CT: Save ct entries tuples in hashtables
a7c119bd82a1d937db5b86fcfe1d5f991469c52d net/mlx5e: CT: Allow header rewrite of 5-tuple and ct clear action
7e36feeb04676c7eed0b3fe9196543608bc7ecae net/mlx5e: CT: Don't offload tuple rewrites for established tuples
a8eb919ba659adcbed8fd782b3e9a949c3a65b9c net/mlx5e: CT: Restore ct state from lookup in zone instead of tupleid
5c2aa8ae3a2ccb383647e3ade369b32e0710ef0b net/mlx5: Accept flow rules without match
d65dbedfd298344747033f17c1efd2afc8082bc7 net/mlx5: Add support for COPY steering action
b2fdf3d04714d4eea2f8a5c011cdd84b428c7df5 net/mlx5e: Export sharing of mod headers to a new file
6702d393557406e986bd6cfe250472b46a76e804 net/mlx5e: CT: Re-use tuple modify headers for identical modify actions
8f5b3c3ec10cb896c4949b5c26060bd610025dd8 net/mlx5e: CT: Use mapping for zone restore register
d12f4521d3eff83206a0bb4a9135252ffbf1c3b5 net/mlx5e: CT: Expand tunnel register mappings
2acc4551d412607d23fd392d819f3b5bd320de48 net/mlx5e: CT: Return err_ptr from internal functions
de96d5732a0832b1f69ff7bc573d63ccae999934 net/mlx5e: CT: Remove unused function param
bbe1124944de2f78eaf3141d05f957f8391e7899 net/mlx5e: CT: Fix releasing ft entries
708b2000362476c9c7a3571c0cc774dffb91836a PCI/AER: Remove HEST/FIRMWARE_FIRST parsing for AER ownership
af10cce7ad515aa819ee8a4ef6777c28b19ddfb7 PCI/AER: Remove redundant dev->aer_cap checks
07b2fbb565e2df7ccc41e5c977b19f5f1f9fe013 PCI/AER: Use "aer" variable for capability offset
29d3c1c8dfe752c01b7115ecd5a3142b232a38e1 kexec: Allow kexec_file() with appropriate IMA policy when locked down
20c3a2c33e9fdc82e9e8e8d2a6445b3256d20191 x86/speculation: Add support for STIBP always-on preferred mode
21998a351512eba4ed5969006f0c55882d995ada x86/speculation: Avoid force-disabling IBPB based on STIBP and enhanced IBRS.
4d8df8cbb9156b0a0ab3f802b80cb5db57acc0bf x86/speculation: PR_SPEC_FORCE_DISABLE enforcement for indirect branches.
11c4cd07ba111a09f49625f9e4c851d83daf0a22 vfio-pci: Fault mmaps to enable vma tracking
abafbc551fddede3e0a08dee1dcde08fc0eb8476 vfio-pci: Invalidate mmaps and block MMIO access on disabled memory
ebfa440ce38b7e2e04c3124aa89c8a9f4094cf21 vfio/pci: Fix SR-IOV VF handling with MMIO blocking
324282c0252a44a97d628813e30ea7258940d469 fibmap: Reject negative block numbers
af133ade9a40794a37104ecbcc2827c0ea373a3c ext4: add cond_resched() to ext4_protect_reserved_inode
7727ae52975d4f4ef7ff69ed8e6e25f6a4168158 ext4: fix potential use after free after remounting with noblock_validity
69000d82eee1b41d88afc75861153b7e514bb777 ext4: use RCU API in debug_print_tree
fb4f79264c0fc6fd5a68ffe3e31bfff97311e1f1 net/smc: tolerate future SMCD versions
aa3ad3920301f2cf6d406209b14acde0c50f2323 s390/qeth: consolidate QDIO queue setup
2db01da8d25f0420c411e788a9e1ba39269ae37b s390/qdio: fill SBALEs with absolute addresses
0e635c2a8713e3e013b4adcb7cb7e28a048b7c42 s390/qeth: cancel RX reclaim work earlier
f81649dfa5343eef7e579eb6f8dd8bd6d300ec31 s390/qeth: use page pointers to manage RX buffer pool
0f75e149298bedc48db03259a38a303611d247b1 s390/qeth: refactor buffer pool code
5d4f78564c9ca38146102c4f8998edcad5afbc22 s390/qeth: implement smarter resizing of the RX buffer pool
086c18f2452d0028f81e319f098bcb8e53133dbf ionic: centralize queue reset code
6068e1a4427e88f5cc62f238d1baf94a8b824ef4 powerpc/vas: Report proper error code for address translation failure
1abdfe706a579a702799fce465bceb9fb01d407c lib: Restrict cpumask_local_spread to houskeeping CPUs
fd9eef1a132d1974405c3ebf9d5688ec5c51da94 libbpf: Fix probe code to return EPERM if encountered
85067747cf9888249fa11fa49ef75af5192d3988 dm: do not use waitqueue for request-based DM
c90b448023582200c54595232e7c004c93d52ae1 scsi: lpfc: Fix scsi host template for SLI3 vports
9cc5b8656892a72438ee7deb5e80f5be47643b8b isolcpus: Affine unbound kernel threads to housekeeping cpus
d454a27384f6eb05904a59d1607461b7ad312aa9 ext4: fix prefetchw of NULL page
1d0c3924a92e69bfa91163bda83c12a994b4d106 ext4: fix potential race between online resizing and write operations
7c990728b99ed6fbe9c75fc202fce1172d9916da ext4: fix potential race between s_flex_groups online resizing and access
37b0b6b8b99c0e1c1f11abbe7cf49b6d03795b3f ext4: potential crash on allocation error in ext4_alloc_flex_bg_array()
3bbd0ef26098d241dc59ee77ba14b7dab0df0786 ext4: fix buffer_head refcnt leak when ext4_iget() fails
878520ac45f9f698432d4276db3d9144b83931b6 ext4: save the error code which triggered an ext4_error() in the superblock
54d3adbc29f0c7c53890da1683e629cd220d7201 ext4: save all error info in save_error_info() and drop ext4_set_errno()
05ca87c149ae8078fb2a23adc6329eed5bb078fb ext4: remove set but not used variable 'es'
648814111af26485762a22da0f4b3159f3f9632c ext4: remove set but not used variable 'es' in ext4_jbd2.c
7b97d868b7ab2448859668de9222b8af43f76e78 ext4, jbd2: ensure panic by fix a race between jbd2 abort and ext4 error handlers
54b154ecfb8c66dfeba6578a64e79c2104da4ced net/mlx5e: CT: Map 128 bits labels to 32 bit map ID
ef3e40a7ea8dbe2abd0a345032cd7d5023b9684f KVM: arm64: Save the host's PtrAuth keys in non-preemptible context
29eb5a3c57f7e06d803bb44a0ce2f9ed79f39cd9 KVM: arm64: Handle PtrAuth traps early
304e2989c93e941fa55b38c59c975d4acfb6e4a2 KVM: arm64: Move hyp_symbol_addr() to kvm_asm.h
07da1ffaa1373f99331712faa67a00b5b807dfe8 KVM: arm64: Remove host_cpu_context member from vcpu structure
7733306bd593c737c63110175da6c35b4b8bb32c KVM: arm64: Annotate hyp NMI-related functions as __always_inline
66b7e05dc0239c5817859f261098ba9cc2efbd2b KVM: arm64: Fix kvm_reset_vcpu() return code being incorrect with SVE
146f76cc84b787c4eec6ed73ebeec708a06e4ae4 KVM: arm64: PMU: Fix per-CPU access in preemptible context
3dc167ba5729ddd2d8e3fa1841653792c295d3f1 sched/cputime: Improve cputime_adjust()
da3287111ab43b32cec54d7ca6b48640f210a196 net: qed: fix buffer overflow on ethtool -d
4a03a058d1fe7558faffab1a831dde508501e85c arm64/mm: enable HugeTLB migration
f649fc2eefdef7a67698a3c584222c5c8c5a6785 perf/x86/rapl: Add Ice Lake RAPL support
39884604b11692158ce0c559fc603510b96f8c2e mptcp: fix NULL ptr dereference in MP_JOIN error path
9e365ff576b7c1623bbc5ef31ec652c533e2f65e mptcp: drop MP_JOIN request sock on syn cookies
5969856ae8ce29c9d523a1a6145cbd9e87f7046c mptcp: fix races between shutdown and recvmsg
8fd4de1275580a1befa1456d1070eaf6489fb48f mptcp: cache msk on MP_JOIN init_req
e1ff9e82e2ea53d01540692a85c16a77e1089537 net: mptcp: improve fallback to TCP
8fd738049ac3d67a937d36577763b47180aae1ad mptcp: fallback in case of simultaneous connect
a6b118febbab3f6454057612b355d0b667c1fafa mptcp: add receive buffer auto-tuning
3ffb93ba326f40b47b17a4e8b3399c0fa2e8cee6 esp4: improve xfrm4_beet_gso_segment() to be more readable
17175d1a27c618e214555b91eca8a0be4cf07f45 xfrm: esp6: fix encapsulation header offset computation
95a35b42bc6e5d8ce7baff8aefed10e9829e7ae5 xfrm: policy: fix IPv6-only espintcp compilation
eac87c413bf9794c14d488998a5265ea5b32f04e net: openvswitch: reorder masks array based on usage
a65878d6f00bb2d791348ae90dcc2ede1dbe2b91 net: openvswitch: fixes potential deadlock in dp cleanup code
5f6dbd54c05f38d30da9c1d310219808a69afd35 drm/amd/display: fix counter in wait_for_no_pipes_pending
47891bf1da31ccba95974b58a853a346924ed341 drm/amdgpu: drop unnecessary cancel_delayed_work_sync on PG ungate
3528cae940d75f3d6f9ce905acb3c3332e2d5067 drm/amd/amdgpu: Update update_config() logic
bbf5f6c3f83bedd71006473849138a446ad4d9a3 drm/amd/display: Split program front end part that occur outside lock
acdac228c4d1b9ff8ac778835719d3381c198aad drm/amd/display: Indicate dsc updates explicitly
009114f6df84150a567b05537aa29b9d660e419b drm/amd/display: Added locking for atomic update stream and update planes
4e5183200d9b66695c754ef214933402056e7b95 drm/amd/display: Fix potential integer wraparound resulting in a hang
b6ef55ccba7ed00fc10e3e6f619c8f886162427f drm/amd/display: DP training to set properly SCRAMBLING_DISABLE
868149c9a072cbdc22a73ce25a487f9fbfa171ef drm/amd/display: Force watermark value propagation
d5bef51f084fccafa984b114ff74a01a64a0e2e3 drm/amd/display: fix virtual signal dsc setup
9c9a8468de21895abc43f45fc86346467217c986 drm/hisilicon: Enforce 128-byte stride alignment to fix the hardware limitation
f0adbc382b8bb46a2467c4e5e1027763a197c8e1 drm/ast: Allocate initial CRTC state of the correct size
2a28fe92220a116735ef45939b7edcfee83cc6b0 drm/amd/display: Correct updating logic of dcn21's pipe VM flags
7fc5c319efceaed1a23b7ef35c333553ce39fecf drm/amd/display: dmcu wait loop calculation is incorrect in RV
1dfedb39d38f813357885e19badd1971c17f79a7 drm/amd/display: Do not disable pipe split if mode is not supported
90ca78deb004abe75b5024968a199acb96bb70f9 drm/amdgpu: Sync with VM root BO when switching VM to CPU update mode
21454fe697fde188ad6fb541f94b9838fa73ab38 drm/nouveau: gr/gk20a: Use firmware version 0
291ddeb621e4a9f1ced8302a777fbd7fbda058c6 drm/ast: fix missing break in switch statement for format->cpp[0] case 4
b7f839d292948142eaab77cedd031aad0bfec872 drm/amdgpu/display: use blanked rather than plane state for sync groups
d6ddbd5c97d1b9156646ac5c42b8851edd664ee2 drm/ast: Don't check new mode if CRTC is being disabled
873a95e0d59ac06901ae261dda0b7165ffd002b8 drm/dp_mst: Increase ACT retry timeout to 3s
ae9b6cfe1352da25931bce3ea4acfd4dc1ac8a85 drm/i915: Fix AUX power domain toggling across TypeC mode resets
968d81a64a883af2d16dd3f8a6ad6b67db2fde58 drm/connector: notify userspace on hotplug after register complete
99c7b309472787026ce52fd2bc5d00630567a872 drm/amdkfd: Use correct major in devcgroup check
81921a828b94ce2816932c19a5ec74d302972833 drm/amd/display: Use kvfree() to free coeff in build_regamma()
4f72a8ee819d57d7329d88f487a2fc9b45153177 drm/i915/tc: fix the reset of ln0
e36ba817fa966f81fb1c8d16f3721b5a644b2fa9 drm/i915/gt: Incrementally check for rewinding
f93ec5fb563779bda4501890b1854526de58e0f1 drm/i915/gt: Move hsw GT workarounds from init_clock_gating to workarounds
19f1f627b33385a2f0855cbc7d33d86d7f4a1e78 drm/i915/gt: Move ivb GT workarounds from init_clock_gating to workarounds
c3b93a943f2c9ee4a106db100a2fc3b2f126bfc5 drm/i915/gt: Move snb GT workarounds from init_clock_gating to workarounds
806a45c0838d253e306a6384057e851b65d11099 drm/i915/gt: Move ilk GT workarounds from init_clock_gating to workarounds
7331c356b6d2d8a01422cacab27478a1dba9fa2a drm/i915/gt: Move vlv GT workarounds from init_clock_gating to workarounds
2bcefd0d263ab4a72f0d61921ae6b0dc81606551 drm/i915/gt: Move gen4 GT workarounds from init_clock_gating to workarounds
2a12c4e9f1674432fa06f73026158a7b4698a0b4 Revert "drm/amd/display: disable dcn20 abm feature for bring up"
5ae9c378c3d88b40af72f8e8f961808e29f3e70b drm/amd/display: Enable output_bpc property on all outputs
cbd14ae7ea934fd9d9f95103a0601a7fea243573 drm/amd/display: Fix incorrectly pruned modes with deep color
fa7041d9d2fc7401cece43f305eb5b87b7017fc4 drm/amd/display: Fix ineffective setting of max bpc property
8e87e0139aff59c5961347ab1ef06814f092c439 drm/i915/gt: Mark timeline->cacheline as destroyed after rcu grace period
d7a6634a4cfba073ff6a526cb4265d6e58ece234 drm/amdgpu/atomfirmware: fix vram_info fetching for renoir
37cc4b95d13f311c04aa8e9daacca3905ad45ca7 drm/ttm: Fix dma_fence refcnt leak in ttm_bo_vm_fault_reserved
67e8a5b18d41af9298db5c17193f671f235cce01 iommu/vt-d: Don't apply gfx quirks to untrusted devices
8567774e87e23a57155e5102f81208729b992ae6 drm/i915/gt: Pin the rings before marking active
c1b9fd3d310177b31621d5e661f06885869cae12 drm/i915: Skip stale object handle for debugfs per-file-stats
90937420c44f7535fd3ac4341a48c4c4dd1fe190 drm/amdgpu: add TMR destory function for psp
3a4024b58b3f40121de6c8ad535c5f38ce19cc83 drm/amdgpu/powerplay: Modify SMC message name for setting power profile mode
87d6883b327eef30b56e0a6bca9d5c9800ab6462 drm/amdgpu/sdma5: fix wptr overwritten in ->get_wptr()
4462282a7253e3663790f8ab092a4107d905bd76 drm/amd/display: handle failed allocation during stream construction
f74367e492ba24be43ba0f440c6bac98a6f3b277 drm/amdgpu/display: create fake mst encoders ahead of time (v4)
90a987205c6cf74116a102ed446d22d92cdaf915 drm/i915/gt: Only swap to a random sibling once upon creation
e43ff99c8deda85234e6233e0f4af6cb09566a37 drm/i915/perf: Use GTT when saving/restoring engine GPR
ed710a6ed797430026aa5116dd0ab22378798b69 drm/nouveau/nouveau: fix page fault on device private memory
5a090f7c363fdc09b99222eae679506a58e7cc68 powerpc/pseries: PCIE PHB reset
fb314eb0cbb2e11540d1ae1a7b28346397f621ef nvme: refactor nvme_identify_ns_descs error handling
59c7c3caaaf8750df4ec3255082f15eb4e371514 nvme: fix possible hang when ns scanning fails during error recovery
ea43d9709f727e728e933a8157a7a7ca1a868281 nvme: fix identify error status silent ignore
5bedd3afee8eb01ccd256f0cd2cc0fa6f841417a nvme: add a Identify Namespace Identification Descriptor list quirk
1fc654cf6e04b402ba9c4327b2919ea864037e7a x86/paravirt: Standardize 'insn_buff' variable names
c3d6324f841bab2403be6419986e2b1d1068d423 x86/alternatives: Teach text_poke_bp() to emulate instructions
e2ac07c06058ae2d58b45bbf2a2a352771d76fcb x86/purgatory: Disable various profiling and sanitizing options
4ce97317f41d38584fb93578e922fcd19e535f5b x86/purgatory: Do not use __builtin_memcpy and __builtin_memset
e4160b2e4b02377c67f8ecd05786811598f39acd x86/purgatory: Fail the build if purgatory.ro has missing symbols
ff58155ca4fa7e931f34d948fa09fe14c6a66116 x86/purgatory: Add -fno-stack-protector
0e2e7aa57b8060ee357839dc4f1731a724ba387b net/mlx5e: Fix missing cleanup of ethtool steering during rep rx cleanup
6db3d8dc5d73b269987fae60745bb20eae97af61 vhost/vsock: switch to a mutex for vhost_vsock_hash
c50a42b8f61f3492a0d3a1c7fb4932e19cf3e626 kselftests: netfilter: fix leftover net/net-next merge conflict
5a2e6af81807d4616f9839ad0ae7d1313b45c64d selftests: netfilter: use randomized netns names
3f251d741150265cfa7c84d30d105612449601ab selftests: Add tests for vrf and xfrms
ca8826095e4d4afc0ccaead27bba6e4b623a12ae selftests/net: report etf errors correctly
d5dba1376e2bafec0f4408dc65706c5908964083 xfrm: esp6: fix the location of the transport header with encapsulation
0925e9db4dc86daf666d9a3d53c7db14ac6d5d00 ionic: use mutex to protect queue operations
59929fbb45e06da7d501d3a97f10a91912181f7c ionic: unlock queue mutex in error path
01cefbbe2c51fa94d4221ca63d236907c5e19fe3 net/mlx5e: CT: Support restore ipv6 tunnel
f891f19736bdf404845f97d8038054be37160ea8 kexec_file: Allow archs to handle special regions while locating memory hole
19031275a5881233b4fc31b7dee68bf0b0758bbc powerpc/kexec_file: Mark PPC64 specific code
180adfc532a83c1d74146449f7385f767d4b8059 powerpc/kexec_file: Add helper functions for getting memory ranges
b8e55a3e5c208862eacded5aad822184f89f85d9 powerpc/kexec_file: Avoid stomping memory used by special regions
7c64e21a1c5a5bcd651d895b8faa68e9cdcc433d powerpc/kexec_file: Restrict memory usage of kdump kernel
1a1cf93c200581c72a3cd521e1e0a1a3b5d0077d powerpc/kexec_file: Setup backup region for kdump kernel
cb350c1f1f867db16725f1bb06be033ece19e998 powerpc/kexec_file: Prepare elfcore header for crashing kernel
6ecd0163d36049b5f2435a8658f1320c9f3f2924 powerpc/kexec_file: Add appropriate regions for memory reserve map
b5667d13be8d0928a02b46e0c6f7ab891d32f697 powerpc/kexec_file: Fix kexec load failure with lack of memory hole
2e6bd221d96fcfd9bd1eed5cd9c008e7959daed7 powerpc/kexec_file: Enable early kernel OPAL calls
b8ded9de8db34dd209a3dece94cf54fc414e78f7 net/smc: pre-fetch send buffer outside of send_lock
6778a6bed09b58beca936a675e9dd195c0986580 net/smc: separate LLC wait queues for flow and messages
b7eede757883a9892dcb7bf0280f4890fc74bcf6 net/smc: fix work request handling
92f3cb0e11dda530d1daa42d7a11af5a92ed89e4 net/smc: fix sleep bug in smc_pnet_find_roce_resource()
82087c0330534d18e6db25869871e589d214b7fa net/smc: switch smcd_dev_list spinlock to mutex
a35fffbf98189ba8359f19073286b2ea816255c5 net/smc: handle unexpected response types for confirm link
68fd8942038f30dbb64a594dc15d9948289de42a net/smc: clear link during SMC client link down processing
7df8bcb56053173e5e5c0e566391fa601e3e4778 net/smc: fix link lookup for new rdma connections
63673597cca93ef6fa12414933da01d5806547af net/smc: protect smc ib device initialization
2ff0867851a21ea1ccb0c275ae1df2fe7787e1b9 net/smc: drop out-of-flow llc response messages
c48254fa48e5bad589fbbf1578dae960cedcafcf net/smc: move add link processing for new device into llc layer
b9979c2e837926c87358024a95c67988477909b1 net/smc: fix handling of delete link requests
741a49a4dc5fd7e61b37b259dde915083c2c5327 net/smc: do not call dma sync for unmapped memory
72b7f6c48708e4524765a2f1316063207d8e0cd5 net/smc: unique reason code for exceeded max dmb count
013b2deba9a6b80ca02f4fafd7dedf875e9b4450 uprobes: ensure that uprobe->offset and ->ref_ctr_offset are properly aligned
99c51064fb06146b3d494b745c947e438a10aaa7 devmap: Use bpf_map_area_alloc() for allocating hash buckets
5df96f2b9f58a5d2dc1f30fe7de75e197f2c25f2 dm integrity: fix integrity recalculation that is improperly skipped
d7626b5acff9227e2a65da636a53e09bdafdc0aa tipc: introduce Gap ACK blocks for broadcast link
c6ed7a5cc2d68c36287c09260dc211173e0447d7 tipc: add back link trace events
a91d55d162b86fb983b88f44296149752db7efbd tipc: enable broadcast retrans via unicast
03b6fefd9bb4844c75faeb10df8496794e2fd5da tipc: add support for broadcast rcv stats dumping
a34f829164f3c70d7f53bb532ddcc39fa890b722 tipc: fix retransmission on unicast links
6ef9dcb78046b346b5508ca1659848b136a343c2 tipc: allow to build NACK message in link timeout function
3c005110d4083c52ff6c99018127adf92f3f23aa net/sched: cls_api: fix nooffloaddevcnt warning dmesg log
8c5c51f5cac676e9065cb6de9feaa3a16a462675 net/sched: The error lable position is corrected in ct_init_module
d47a72152097d7be7cfc453d205196c0aa976c33 mptcp: fix race in subflow_data_ready()
8c728940487945e25cdfe020d58da42143aa98c1 mptcp: silence warning in subflow_data_ready()
b7514694ed2952684a1e4fc44d83682140fd8cef subflow: explicitly check for plain tcp rsk
ac1321efb14284f5572dcba57aa9da362faba751 espintcp: support non-blocking sends
e229c877cde141a4c46cb603a341ce8c909e9a98 espintcp: recv() should return 0 when the peer socket is closed
fadd1a63a7b4df295a01fa50b2f4e447542bee59 espintcp: handle short messages instead of breaking the encap socket
71b59bf482b2dd662774f34108c5b904efa9e02b espintcp: count packets dropped in espintcp_rcv
87fa7f3e98a1310ef1ac1900e7ee7f9610a038bc x86/kvm: Move context tracking where it belongs
841c2be09fe4f495fe5224952a419bd8c7e5b455 kvm: x86: replace kvm_spec_ctrl_test_value with runtime test on the host
30c66fc30ee7a98c4f3adf5fb7e213b61884474f timer: Prevent base->clk from moving backward
1f32cab0db4bdf6491eb4a60838f278e01c31698 timers: Use only bucket expiry for base->next_expiry value
9a2b764b06c880678416d803d027f575ae40ec99 timers: Move trigger_dyntick_cpu() to enqueue_timer()
dc2a0f1fb2a06df09f5094f29aea56b763aa7cca timers: Always keep track of next expiry
1f8a4212dc83f8353843fabf6465fd918372fbbf timers: Expand clk forward logic beyond nohz
0975fb565b8b8f9e0c96d0de39fcb954833ea5e0 timers: Remove must_forward_clk
36cd28a4cdd05d47ccb62a2d86e8f37839cc879a timers: Lower base clock forwarding threshold
6914dd53eb7af7cbc66edf7992d600b1e952c40d crypto: ecc - SP800-56A rev 3 local public key validation
8ce72dc32578f16942997f041f62759b4c693b6f selftests: fix headers_install circular dependency
d917fb876f6eaeeea8a2b620d2a266ce26372f4d selftests: build and run gpio when output directory is the src dir
27d79a2b2bf0dbec1cc3d8ea269db4d5a0dac2f3 selftests: fix bpf build/test workflow regression when KBUILD_OUTPUT is set
61c2018c0743fe0c9ca68e308b5727b8a7c3d544 selftests: avoid KBUILD_OUTPUT dir cluttering with selftest objects
0ac33e4e9b5e4ccdd43c9d4e77882a1af0e41dec selftests: use "$(MAKE)" instead of "make"
17eac6c2db8b2cdfe33d40229bdda2acd86b304a selftests: Add kselftest-all and kselftest-install targets
ea1bf0bb18c0bd627d7b551196453ff2fff44225 selftests: gen_kselftest_tar.sh: Do not clobber kselftest/
c78fd76f2b673d1fb5306612c87df812c0a9ad0c selftests: Move kselftest_module.sh into kselftest/
5f70bde26a48769012006e22f16cb768f9681020 selftests: fix build behaviour on targets' failures
9d235a558c689b0ecdd23bbd8beb2e0584f619ed selftests: allow detection of build failures
29e911ef7b706215caf02a82b0d3076611d6abe8 selftests: Fix kselftest O=objdir build from cluttering top level objdir
93a4388b765d6588d145a2e94e350cc77fd44756 selftests: add build/cross-build dependency check script
a5f304670b80973dfce5bc86cacff20244926cf6 selftests: introduce gen_tar Makefile target
9847d24af95c7fa146c9a0e82505a78e29161c10 selftests/harness: Refactor XFAIL into SKIP
0ef67a888375b0d11930a9811e1152b6ebc385a8 selftests/harness: Report skip reason
99aacebecb75c61e6a6a1bc29f5d87c9453f3b73 selftests: do not use .ONESHELL
c9f75047eb9b38b2461819398e8a30a172ca3d46 selftests: fix condition in run_tests
850d0cc64c8e2e0895acf735ac0a53c78b80dbe5 selftests/harness: Limit step counter reporting
0f04a2ac4fe96bbf05b7ac7d3e94598db550d6b8 KVM: nSVM: split kvm_init_shadow_npt_mmu() from kvm_init_shadow_mmu()
8c008659aa43be97c60c1633074b8f52f9f4445c KVM: MMU: stop dereferencing vcpu->arch.mmu to get the context for MMU init
ebdb3dba7b900a6b280d70f08befa0b96e0f806e KVM: nSVM: reset nested_run_pending upon nested_svm_vmrun_msrpm() failure
59cd9bc5b03f0bacce9506b068fec538aa9969a7 KVM: nSVM: prepare to handle errors from enter_svm_guest_mode()
62156f6cd15ab27cf19a97161b5f1820951a36b1 KVM: nSVM: introduce nested_svm_load_cr3()/nested_npt_enabled()
bf7dea425327c5da12f540a1595f22770597e496 KVM: nSVM: move kvm_set_cr3() after nested_svm_uninit_mmu_context()
a506fdd22342606d22645a6bf90a2d848e92e5d7 KVM: nSVM: implement nested_svm_load_cr3() and use it for host->guest switch
d82aaef9c88aa27bce63751d6d6329920b1fe8da KVM: nSVM: use nested_svm_load_cr3() on guest->host switch
fe9304d31831c9ee3943f9a6f72b7cea16d4bc11 KVM: x86: drop superfluous mmu_check_root() from fast_pgd_switch()
096586fda522957881379cfe7870a373ab783c87 KVM: nSVM: Correctly set the shadow NPT root level in its MMU role
608a973bd52ef1705941b18f55e39655fcfe9cdb Drivers: hv: vmbus: Only notify Hyper-V for die events that are oops
d6af2ed29c7c1c311b96dac989dcb991e90ee195 PCI: hv: Fix a timing issue which causes kdump to fail occasionally
0390c429dbed4068bd2cd8dded937d9a5ec24cd2 selftests/bpf: Fix segmentation fault in test_progs
76a109fac206e158eb3c967af98c178cff738e6a netfilter: nft_fwd_netdev: validate family and chain type
4c559f15efcc43b996f4da528cd7f9483aaca36d netfilter: nf_conntrack_pptp: prevent buffer overflows in debug code
4946ea5c1237036155c3b3a24f049fd5f849f8f6 netfilter: nf_conntrack_pptp: fix compilation warning with W=1 build
ee04805ff54a63ffd90bc6749ebfe73473734ddb netfilter: conntrack: make conntrack userspace helpers work again
46c1e0621a72e0469ec4edfdb6ed4d387ec34f8a netfilter: conntrack: Pass value of ctinfo to __nf_conntrack_update
d005fbb855d3b5660d62ee5a6bd2d99c13ff8cf3 netfilter: conntrack: refetch conntrack after nf_conntrack_update()
94945ad2b330207cded0fd8d4abebde43a776dfb netfilter: conntrack: comparison of unsigned in cthelper confirmation
c4e8fa9074ad94f80e5c0dcaa16b313e50e958c5 netfilter: ipset: call ip_set_free() instead of kfree()
1e9451cbda456a170518b2bfd643e2cb980880bf netfilter: nf_tables: fix nat hook table deletion
e47110e90584a22e9980510b00d0dfad3a83354e mm/vunmap: add cond_resched() in vunmap_pmd_range
dbc4fec6b6dd2d23e161b250d51cbd28bd9c8497 NFSv4.0 allow nconnect for v4.0
7e40781cc8b767dd6530910ae12d75978d7d68e1 bpf: verifier: Use target program's type for access verifications
6dc03dc71387e1dc65cf14efb49e5cf7062a2d46 selftests/bpf: Add test for freplace program with write access
50d19736aff497a4c25ec7e36375195bfd8570cd selftests/bpf: Test for checking return code for the extended prog
1410620cf20e7e23cce17983e9a81af659b28583 selftests/bpf: Test for map update access from within EXT programs
0faddfe6b7953e224a1283f89f671ef6a9ba73de net/mlx5e: E-Switch, Add misc bit when misc fields changed for mirroring
6f7bbad18e8343da6318654f408dea0ccd6efb00 net/mlx5e: E-Switch, Specify flow_source for rule with no in_port
897d68eb816bfae5ad9e870f68350dbb599d6e0e scsi: qla2xxx: Fix WARN_ON in qla_nvme_register_hba
cc5453a5b7e90c39f713091a7ebc53c1f87d1700 netfilter: conntrack: allow sctp hearbeat after connection re-use
eda814b97dfb8d9f4808eb2f65af9bd3705c4cae net/sched: act_ct: Fix skb double-free in tcf_ct_handle_fragments() error flow
41663430588c737dd735bad5a0d1ba325dcabd59 mm, THP, swap: fix allocating cluster for swapfile by mistake
764e9332098c0e60251386a507fe46ac91276120 nvme-multipath: do not reset on unknown status
5ddaabe8ed713f148e3d67e99b86d99427aceb5c nvme: refactor command completion
1e41f3bd26f79463c07aebf062a0a77f1fd39b2b nvme: just check the status code type in nvme_is_path_error
5eac5f3342b20825260d3800e7f5f74f12bac931 nvme: redirect commands on dying queue
904fbcb115c85090484dfdffaf7f461d96fe8e53 io_uring: remove 'fd is io_uring' from close path
18bceab101adde8f38de76016bc77f3f25cf22f4 io_uring: allow POLL_ADD with double poll_wait() users
310672552f4aea2ad50704711aa3cdd45f5441e9 io_uring: async task poll trigger cleanup
4518a3cc273cf82efdd36522fb1f13baad173c70 io_uring: fix flush req->refs underflow
7b53d59859bc932b37895d2d37388e7fa29af7a5 io_uring: fix overflowed reqs cancellation
fd2206e4e97b5bae422d9f2f9ebbc79bc97e44a5 io_uring: disallow close of ring itself
3232dd02af65f2d01be641120d2a710176b0c7a7 io_uring: fix {SQ,IO}POLL with unsupported opcodes
dddb3e26f6d88c5344d28cb5ff9d3d6fa05c4f7a io_uring: re-set iov base/len for buffer select retry
efe68c1ca8f49e8c06afd74b699411bfbb8ba1ff io_uring: validate the full range of provided buffers for access
c5b856255cbc3b664d686a83fa9397a835e063de io_uring: allow O_NONBLOCK async retry
65a6543da386838f935d2f03f452c5c0acff2a68 io_uring: fix io_kiocb.flags modification race in IOPOLL mode
2d7d67920e5c8e0854df23ca77da2dd5880ce5dd io_uring: don't fail links for EAGAIN error in IOPOLL mode
bbde017a32b32d2fa8d5fddca25fade20132abf8 io_uring: add memory barrier to synchronize io_kiocb's result and iopoll_completed
9d8426a09195e2dcf2aa249de2aaadd792d491c7 io_uring: acquire 'mm' for task_work for SQPOLL
56952e91acc93ed624fe9da840900defb75f1323 io_uring: reap poll completions while waiting for refs to drop on exit
6f2cc1664db20676069cff27a461ccc97dbfd114 io_uring: fix possible race condition against REQ_F_NEED_CLEANUP
b772f07add1c0b22e02c0f1e96f647560679d3a9 io_uring: fix io_sq_thread no schedule when busy
cd664b0e35cb1202f40c259a1a5ea791d18c879d io_uring: fix hanging iopoll in case of -EAGAIN
d60b5fbc1ce8210759b568da49d149b868e7c6d3 io_uring: fix current->mm NULL dereference on exit
d3cac64c498c4fb2df46b97ee6f4c7d6d75f5e3d io_uring: fix NULL-mm for linked reqs
8ef77766ba8694968ed4ba24311b4bacee14f235 io_uring: fix req->work corruption
ecfc51777487da4da530710e0b13de4c8cb4a6d2 io_uring: fix potential use after free on fallback request free
8eb06d7e8dd853d70668617dda57de4f6cebe651 io_uring: fix missing ->mm on exit
ce593a6c480a22acba08795be313c0c6d49dd35d io_uring: use signal based task_work running
b7db41c9e03b5189bc94993bd50e4506ac9e34c1 io_uring: fix regression with always ignoring signals in io_cqring_wait()
309fc03a3284af62eb6082fb60327045a1dabf57 io_uring: account user memory freed when exit has been queued
667e57da358f61b6966e12e925a69e42d912e8bb io_uring: fix memleak in io_sqe_files_register()
dd821e0c95a64b5923a0c57f07d3f7563553e756 io_uring: fix missing msg_name assignment
681fda8d27a66f7e65ff7f2d200d7635e64a8d05 io_uring: fix recvmsg memory leak with buffer selection
807abcb0883439af5ead73f3308310453b97b624 io_uring: ensure double poll additions work with both request types
61710e437f2807e26a3402543bdbb7217a9c8620 io_uring: always allow drain/link/hardlink/async sqe flags
cbcf72148da4af55ea81cfb351ea7c026ff1014f io_uring: return locked and pinned page accounting
2dd2111d0d383df104b144e0d1f6b5a00cb7cd88 io_uring: Fix NULL pointer dereference in loop_rw_iter()
943b40c832beb71115e38a1c4d99b640b5342738 block: respect queue limit of max discard segment
c9938a9dac95be7650218cdd8e9d1f882e7b5691 selftests/powerpc: Add test of stack expansion logic
9ee571d84bf8cfdd587a1acbf3490ca90fc40c9d selftests/powerpc: Update the stack expansion test
92953c6e0aa77d4febcca6dd691e8192910c8a28 scsi: zfcp: signal incomplete or error for sync exchange config/port data
7e418833e68948cb9ed15262889173b7db2960cb scsi: zfcp: diagnostics buffer caching and use for exchange port data
088210233e6fc039fd2c0bfe44b06bb94328d09e scsi: zfcp: add diagnostics buffer for exchange config data
7e0e4e0958ef794ee868838249880d5c521ff761 scsi: zfcp: fix fc_host attributes that should be unknown on local link down
978857c7e367d6841f71c4ded5a8c244520f5e22 scsi: zfcp: Move shost modification after QDIO (re-)open into fenced function
bd1684817d7d8d1a3b95a4347166246ad1f7670b scsi: zfcp: Move shost updates during xconfig data handling into fenced function
52e61fde5ec95cb4011784fb0bc6b436e16fcaa8 scsi: zfcp: Move fc_host updates during xport data handling into fenced function
990486f3a8508494dab2a7ff0fcc3eb977557d89 scsi: zfcp: Fence fc_host updates during link-down handling
ac007adc4d2d9258fdf27abd25cc77a4e0e8d19f scsi: zfcp: Move p-t-p port allocation to after xport data
d0dff2ac98dd41d7d451127d9eae2f6478fc40b0 scsi: zfcp: Move allocation of the shost object to after xconf- and xport-data
ebce3eb2f7ef9f6ef01a60874ebd232450107c9a ceph: fix inode number handling on arches with 32-bit ino_t
06d462beb470d361ffa8bd7b3d865509a8606987 mm: remove the unused MIGRATE_PFN_DEVICE flag
800bb1c8dc80bb4121446b56813067f3ea44edee mm: handle multiple owners of device private pages in migrate_vma
48908a3833cc76c56e626e8e80ba8f808c8d03a5 KVM: PPC: Book3S HV: Fix function definition in book3s_hv_uvmem.c
2027a24a75ce32cf48a22cc25a9d87b8c5b19328 KVM: PPC: Book3S HV: Disable page merging in H_SVM_INIT_START
651a6310111ef8e09394e77d6d959ab3d066930d KVM: PPC: Book3S HV: Track the state GFNs associated with secure VMs
dfaa973ae9605e1731eaef9f30c2b056346a4efc KVM: PPC: Book3S HV: In H_SVM_INIT_DONE, migrate remaining normal-GFNs to secure-GFNs
a2ce72003863d0dcf680f0c49de4678ab2c6812b KVM: PPC: Book3S HV: Migrate hot plugged memory
f1b87ea8784b8c79d9bffad60fe0720c2cb21ec7 KVM: PPC: Book3S HV: Move kvmppc_svm_page_out up
81ab595ddd3c3036806b460526e1fbc5b271ff33 KVM: PPC: Book3S HV: Rework secure mem slot dropping
801980f6497946048709b9b09771a1729551d705 powerpc/pseries/hotplug-cpu: wait indefinitely for vCPU death
58c909022a5a56cd1d9e89c8c5461fd1f6a27bb5 efi: Support for MOK variable config table
ff205766dbbee024a4a716638868d98ffb17748a ftrace: Fix function_graph tracer interaction with BPF trampoline
d2ccbccb5444e9141b33cf5399927737e9ff1c3d tracing: Define MCOUNT_INSN_SIZE when not defined without direct calls
d826e5b827641ae1bebb33d23a774f4e9bb8e94f NFSv4.x recover from pre-mature loss of openstateid
4eb2e13415757a2bce5bb0d580d22bbeef1f5346 espintcp: restore IP CB before handing the packet to xfrm
df60446cd1fb487becd1f36f4c0da9e0e523c0cf nfsd: avoid a NULL dereference in __cld_pipe_upcall()
ab6f762f0f53162d41497708b33c9a3236d3609e printk: queue wake_up_klogd irq_work only if per-CPU areas are ready
285008501c65a3fcee05d2c2c26cbf629ceff2f0 blk-mq: always allow reserved allocation in hctx_may_queue
ce4cc3133dc72c31bd49ddcf22d0f9eeff47a761 nvme-pci: disable the write zeros command for Intel 600P/P3100

__CHANGES NOT IN UPSTREAM________________
init/Kconfig: disable io_uring
efi: don't reserve MOK config table memory region
pefile: Support multiple signatures in verify_pefile_signature
Move to dual-signing to split signing keys up better
rhel: powerpc: kvm: Increase HDEC threshold to enter guest
nvme: allow retry for requests with REQ_FAILFAST_TRANSPORT set
nvme: decouple basic ANA log page re-read support from native multipathing
nvme: update failover handling to work with REQ_FAILFAST_TRANSPORT
nvme: Return BLK_STS_TARGET if the DNR bit is set
Revert "nvme: allow ANA support to be independent of native multipathing"
selinux: compute genfs symlink context in case of CephFS
selftests: bpf: define SO_RCVTIMEO and SO_SNDTIMEO properly for ppc64le
bpf: Sync RHEL version of asm-generic/socket.h to tools/
selftests: bpf: skip tests not working on RHEL
Revert "selftests: bpf: disable test_lwt_seg6local"
Revert "bpf: selftests: remove test_bpftool_build.sh from TEST_PROGS"
selftests: add option to skip specific tests in RHEL
kvm: Set KVM_SOFT_MAX_VCPUS to 1024
drm/nouveau/kms: Handle -EINPROGRESS in nouveau_display_acpi_ntfy()
drm/nouveau/kms: Fix runtime PM leak in nouveau_display_acpi_ntfy()
drm/nouveau/kms: Invert conditionals in nouveau_display_acpi_ntfy()
drm/nouveau/kms: Use pm_runtime_put_autosuspend() in hpd_work
drm/nouveau/kms/fbcon: Use pm_runtime_put_autosuspend() in suspend work
drm/nouveau/kms/fbcon: Fix pm_runtime calls in nouveau_fbcon_output_poll_changed()
drm/nouveau/kms/fbcon: Correct pm_runtime calls in nouveau_fbcon_release()
drm/nouveau/kms: Fix rpm leak in nouveau_connector_hotplug()
drm/nouveau/kms: Handle -EINPROGRESS in nouveau_connector_hotplug()
net/mlx5e: Disable devlink port support for non-switchdev mode
tools selftests/bpf: Fix vmlinux test for kprobe and trampoline probes
selftests: bpf: use __u32 for sock::sk_pacing_rate
Bluetooth: L2CAP: Add definitions
Bluetooth: Add definitions
Bluetooth: Add support for
kernel: rh_features: fix reading empty feature list from /proc
x86/intel_split_lock: Disable split lock detector by default in RHEL8
kernel: fork: avoid utilizing a non-initialized task_struct_rh pointer in the error exit path
RDMA/hfi1: Fix null-pointer dereference when calling mmu_notifier_register
Revert "intel-speed-select: Firmware workarounds for Icelake"
vfs: add vfs_iocb_iter_helper functions
Bump DRM backport version to 5.6.14
DRM Backport 5.5 -> 5.6
DRM Backport 5.4 -> 5.5
DRM Backport 5.3 -> 5.4
RHEL-only: Add IORING_OP_OPENAT2 opcode
RHEL-only: Enable io_uring for x86 builds
selftests/bpf: use struct timespec instead of __kernel_timespec
rhel: constify some function arguments when searching for devices
libbpf: provide backported RHEL symbols as upstream aliases 2
bpf: include/linux/bpf.h: fix spaces
Sync if_link.h
iommu: KABI cleanup
signal: Fix wrong PIDTYPE_TGID check in send_sigio() & send_sigurg()
Increase KVM_MAX_VCPUS to 1024, KVM_MAX_VCPU_ID to 2048
mm: revert remove MEMORY_DEVICE_PUBLIC support in swap.c
core: properly remove skb from list
sched: act_ct: fix build failure in RHEL8
mptcp: mark tech preview and disable by default
add and use MPTCP_PROTO_KERN
devlink: fix broken link warning
Add description of packet trap policers
fpga: mark the intel fpga drivers as tech preview
drm/backport: add mmu notifier get/put support to drm backport
libbpf: provide backported RHEL symbols as upstream aliases
libbpf: bump up version, 0.0.5
powerpc/pci: unmap legacy INTx interrupts of passthrough IO adapters
arch/x86: Remove vendor specific CPU ID checks
intel-speed-select: Firmware workarounds for Icelake
intel_speed_select: internal-only-debug-patch
RDMA/bnxt_re: remove ioremap_nocache and devm_ioremap_nocache
redhat: update kvm/{arm, arm64} headers in tools
gic-v4.1: Eagerly vmap vPEs
crash_core: Increase crashkernel=auto size for x86_64 & S390
ALSA: ALSA - update sound configuration
ALSA: Revert "ALSA: Use the legacy HDA driver as default for Intel DSP platforms"
ALSA: ASoC: fix regwmask
Introduce the MSR_S bit
64s: Set reserved PCR bits
hyper-v: Suspend/resume Hyper-V clocksource for hibernation
Fix typo in devlink documentation
sched: Fix missing bracket in membarrier_switch_mm from mismerge
mlx5: Remove the unsupported mark from ConnectX-6 Dx device
mlx5: Update list of unsupported devices
wireles: Use sizeof_field() macro
KABI: re-use deprecated field for iommu_bypass_supported function pointer
KABI: add fake includes for headers used in arch/powerpc/kernel/dma.c
fm10k: Use sizeof_field() macro
block: avoid to check null profile pointer to see if it is in 3rd party module
RHEL-only: Revert "igc: add additional delay during phy hw reset"
sfc: phase out dma_zalloc_coherent()
Add description of netdevsim traps
kvm: selftests: drop vcpu_setup from s390x
redhat: update kvm/x86 headers in tools
redhat: selftests: kvm: add SPDX-License-Identifier
redhat: kvm: x86: add SPDX-License-Identifier
s390/kasan: Fix crash when attaching PCI device
arm64: tlb: skip tlbi broadcast, fix speculative tlb lookups
bpf: selftests: remove test_bpftool_build.sh from TEST_PROGS
hyper-v: Make sched clock return nanoseconds correctly
hyper-v: Set TSC clocksource as default w/ InvariantTSC
hyper-v: Untangle stimers and timesync from clocksources
hyper-v: Reserve PAGE_SIZE space for tsc page
hyperv: Enable TSC page clocksource on 32bit
hyperv: Add Hyper-V specific sched clock function
hyperv: Allocate Hyper-V TSC page statically
Continue making Hyper-V clocksource ISA agnostic
Make Hyper-V clocksource ISA agnostic
Reserve at most 64M of SWIOTLB memory for crashkernel
redhat: Replace hardware.redhat.com link in Unsupported message
cramfs: Deprecate cramfs in RHEL
crypto: rng - Override drivers/char/random in FIPS mode
random: Add hook to override device reads and getrandom(2)
block: extend 'struct request' via 'request_aux'
macsec: Fix multiple coding style issues
Clarify trap's description
Add a section for devlink-trap testing
Add devlink-trap documentation
Revert "s390/dasd: Disable Thin Provisioning to prevent data loss"
redhat: fix modpost.c prerequisites
