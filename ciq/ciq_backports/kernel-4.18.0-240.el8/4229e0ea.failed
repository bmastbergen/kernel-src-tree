net/mlx5e: Define one flow for TXQ selection when TCs are configured

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Eran Ben Elisha <eranbe@mellanox.com>
commit 4229e0ea2c9936b3093990353b211bcd7802a2d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/4229e0ea.failed

We shall always extract channel index out of the txq, regardless
of the relation between txq_ix and num channels. The extraction is
always valid, as if txq is smaller than number of channels,
txq_ix == priv->txq2sq[txq_ix]->ch_ix.

By doing so, we can remove an if clause from the select queue method,
and have one flow for all packets.

	Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 4229e0ea2c9936b3093990353b211bcd7802a2d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
index 0423069b5965,fd6b2a1898c5..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
@@@ -68,13 -68,12 +68,17 @@@ static inline int mlx5e_get_dscp_up(str
  #endif
  
  u16 mlx5e_select_queue(struct net_device *dev, struct sk_buff *skb,
 -		       struct net_device *sb_dev)
 +		       struct net_device *sb_dev,
 +		       select_queue_fallback_t fallback)
  {
 -	int txq_ix = netdev_pick_tx(dev, skb, NULL);
  	struct mlx5e_priv *priv = netdev_priv(dev);
++<<<<<<< HEAD
 +	int txq_ix = fallback(dev, skb, NULL);
 +	u16 num_channels;
++=======
++>>>>>>> 4229e0ea2c99 (net/mlx5e: Define one flow for TXQ selection when TCs are configured)
  	int up = 0;
+ 	int ch_ix;
  
  	if (!netdev_get_num_tc(dev))
  		return txq_ix;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
