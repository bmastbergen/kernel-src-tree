net/mlx5: E-switch, Offloads introduce and use per vport acl tables APIs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Parav Pandit <parav@mellanox.com>
commit 89a0f1fb16adca959ea1485a856fbcfcd1d24208
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/89a0f1fb.failed

Introduce and use per vport ACL tables creation and destroy APIs, so that
subsequently patch can use them during enabling/disabling a vport.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 89a0f1fb16adca959ea1485a856fbcfcd1d24208)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 00d126fa6e02,94eb18ae33a4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -1952,16 -1950,30 +1952,43 @@@ esw_check_vport_match_metadata_supporte
  	return true;
  }
  
++<<<<<<< HEAD
 +static bool
 +esw_check_vport_match_metadata_mandatory(const struct mlx5_eswitch *esw)
 +{
 +	return mlx5_core_mp_enabled(esw->dev);
 +}
 +
 +static bool esw_use_vport_metadata(const struct mlx5_eswitch *esw)
 +{
 +	return esw_check_vport_match_metadata_mandatory(esw) &&
 +	       esw_check_vport_match_metadata_supported(esw);
++=======
+ static int
+ esw_vport_create_offloads_acl_tables(struct mlx5_eswitch *esw,
+ 				     struct mlx5_vport *vport)
+ {
+ 	int err;
+ 
+ 	err = esw_vport_ingress_config(esw, vport);
+ 	if (err)
+ 		return err;
+ 
+ 	if (mlx5_eswitch_is_vf_vport(esw, vport->vport)) {
+ 		err = esw_vport_egress_config(esw, vport);
+ 		if (err)
+ 			esw_vport_disable_ingress_acl(esw, vport);
+ 	}
+ 	return err;
+ }
+ 
+ static void
+ esw_vport_destroy_offloads_acl_tables(struct mlx5_eswitch *esw,
+ 				      struct mlx5_vport *vport)
+ {
+ 	esw_vport_disable_egress_acl(esw, vport);
+ 	esw_vport_disable_ingress_acl(esw, vport);
++>>>>>>> 89a0f1fb16ad (net/mlx5: E-switch, Offloads introduce and use per vport acl tables APIs)
  }
  
  static int esw_create_offloads_acl_tables(struct mlx5_eswitch *esw)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
