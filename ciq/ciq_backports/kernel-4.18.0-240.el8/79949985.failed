net/mlx5: E-switch, Fix error unwinding flow for steering init failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Parav Pandit <parav@mellanox.com>
commit 799499850ae956c3ec3aceb84223bfb33b2bdcfc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/79949985.failed

Error unwinding is done incorrectly in the cited commit.
When steering init fails, there is no need to perform steering cleanup.
When vport error exists, error cleanup should be mirror of the setup
routine, i.e. to perform steering cleanup before metadata cleanup.

This avoids the call trace in accessing uninitialized objects which are
skipped during steering_init() due to failure in steering_init().

Call trace:
mlx5_cmd_modify_header_alloc:805:(pid 21128): too many modify header
actions 1, max supported 0
E-Switch: Failed to create restore mod header

BUG: kernel NULL pointer dereference, address: 00000000000000d0
[  677.263079]  mlx5_destroy_flow_group+0x13/0x80 [mlx5_core]
[  677.268921]  esw_offloads_steering_cleanup+0x51/0xf0 [mlx5_core]
[  677.275281]  esw_offloads_enable+0x1a5/0x800 [mlx5_core]
[  677.280949]  mlx5_eswitch_enable_locked+0x155/0x860 [mlx5_core]
[  677.287227]  mlx5_devlink_eswitch_mode_set+0x1af/0x320
[  677.293741]  devlink_nl_cmd_eswitch_set_doit+0x41/0xb0
[  677.299217]  genl_rcv_msg+0x1eb/0x430

Fixes: 7983a675ba65 ("net/mlx5: E-Switch, Enable chains only if regs loopback is enabled")
	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 799499850ae956c3ec3aceb84223bfb33b2bdcfc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 98ef84b15725,94d6c91a8612..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -2187,12 -2374,13 +2187,20 @@@ int esw_offloads_enable(struct mlx5_esw
  
  	return 0;
  
++<<<<<<< HEAD
 +err_reps:
 +	mlx5_eswitch_disable_pf_vf_vports(esw);
++=======
+ err_vports:
+ 	esw_offloads_unload_rep(esw, MLX5_VPORT_UPLINK);
+ err_uplink:
+ 	esw_offloads_steering_cleanup(esw);
+ err_steering_init:
++>>>>>>> 799499850ae9 (net/mlx5: E-switch, Fix error unwinding flow for steering init failure)
  	esw_set_passing_vport_metadata(esw, false);
  err_vport_metadata:
 +	esw_offloads_steering_cleanup(esw);
 +err_steering_init:
  	mlx5_rdma_disable_roce(esw->dev);
  	mutex_destroy(&esw->offloads.termtbl_mutex);
  	return err;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
