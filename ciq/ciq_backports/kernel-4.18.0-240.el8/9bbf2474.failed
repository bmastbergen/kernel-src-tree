KVM: selftests: Add support for vcpu_args_set to aarch64 and s390x

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ben Gardon <bgardon@google.com>
commit 9bbf24744e12bb6b9b32e30917b07f9242cc0341
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9bbf2474.failed

Currently vcpu_args_set is only implemented for x86. This makes writing
tests with multiple vCPUs difficult as each guest vCPU must either a.)
do the same thing or b.) derive some kind of unique token from it's
registers or the architecture. To simplify the process of writing tests
with multiple vCPUs for s390 and aarch64, add set args functions for
those architectures.

	Signed-off-by: Ben Gardon <bgardon@google.com>
[Fixed array index (num => i) and made some style changes.]
	Signed-off-by: Andrew Jones <drjones@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 9bbf24744e12bb6b9b32e30917b07f9242cc0341)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/s390x/processor.c
diff --cc tools/testing/selftests/kvm/lib/s390x/processor.c
index 8eb8fd4d3140,a0b84235c848..000000000000
--- a/tools/testing/selftests/kvm/lib/s390x/processor.c
+++ b/tools/testing/selftests/kvm/lib/s390x/processor.c
@@@ -268,13 -269,40 +268,50 @@@ void vm_vcpu_add_default(struct kvm_vm 
  	run->psw_addr = (uintptr_t)guest_code;
  }
  
++<<<<<<< HEAD
 +void vcpu_setup(struct kvm_vm *vm, int vcpuid, int pgd_memslot, int gdt_memslot)
 +{
 +	struct kvm_sregs sregs;
 +
 +	vcpu_sregs_get(vm, vcpuid, &sregs);
 +	sregs.crs[0] |= 0x00040000;		/* Enable floating point regs */
 +	vcpu_sregs_set(vm, vcpuid, &sregs);
++=======
+ /* VM VCPU Args Set
+  *
+  * Input Args:
+  *   vm - Virtual Machine
+  *   vcpuid - VCPU ID
+  *   num - number of arguments
+  *   ... - arguments, each of type uint64_t
+  *
+  * Output Args: None
+  *
+  * Return: None
+  *
+  * Sets the first num function input arguments to the values
+  * given as variable args.  Each of the variable args is expected to
+  * be of type uint64_t. The registers set by this function are r2-r6.
+  */
+ void vcpu_args_set(struct kvm_vm *vm, uint32_t vcpuid, unsigned int num, ...)
+ {
+ 	va_list ap;
+ 	struct kvm_regs regs;
+ 	int i;
+ 
+ 	TEST_ASSERT(num >= 1 && num <= 5, "Unsupported number of args,\n"
+ 		    "  num: %u\n",
+ 		    num);
+ 
+ 	va_start(ap, num);
+ 	vcpu_regs_get(vm, vcpuid, &regs);
+ 
+ 	for (i = 0; i < num; i++)
+ 		regs.gprs[i + 2] = va_arg(ap, uint64_t);
+ 
+ 	vcpu_regs_set(vm, vcpuid, &regs);
+ 	va_end(ap);
++>>>>>>> 9bbf24744e12 (KVM: selftests: Add support for vcpu_args_set to aarch64 and s390x)
  }
  
  void vcpu_dump(FILE *stream, struct kvm_vm *vm, uint32_t vcpuid, uint8_t indent)
diff --git a/tools/testing/selftests/kvm/lib/aarch64/processor.c b/tools/testing/selftests/kvm/lib/aarch64/processor.c
index 86036a59a668..e535a5905dae 100644
--- a/tools/testing/selftests/kvm/lib/aarch64/processor.c
+++ b/tools/testing/selftests/kvm/lib/aarch64/processor.c
@@ -333,3 +333,38 @@ void vm_vcpu_add_default(struct kvm_vm *vm, uint32_t vcpuid, void *guest_code)
 {
 	aarch64_vcpu_add_default(vm, vcpuid, NULL, guest_code);
 }
+
+
+/* VM VCPU Args Set
+ *
+ * Input Args:
+ *   vm - Virtual Machine
+ *   vcpuid - VCPU ID
+ *   num - number of arguments
+ *   ... - arguments, each of type uint64_t
+ *
+ * Output Args: None
+ *
+ * Return: None
+ *
+ * Sets the first num function input arguments to the values
+ * given as variable args.  Each of the variable args is expected to
+ * be of type uint64_t. The registers set by this function are r0-r7.
+ */
+void vcpu_args_set(struct kvm_vm *vm, uint32_t vcpuid, unsigned int num, ...)
+{
+	va_list ap;
+	int i;
+
+	TEST_ASSERT(num >= 1 && num <= 8, "Unsupported number of args,\n"
+		    "  num: %u\n", num);
+
+	va_start(ap, num);
+
+	for (i = 0; i < num; i++) {
+		set_reg(vm, vcpuid, ARM64_CORE_REG(regs.regs[i]),
+			va_arg(ap, uint64_t));
+	}
+
+	va_end(ap);
+}
* Unmerged path tools/testing/selftests/kvm/lib/s390x/processor.c
