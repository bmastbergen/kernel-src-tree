drm/i915/gt: Only swap to a random sibling once upon creation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit 90a987205c6cf74116a102ed446d22d92cdaf915
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/90a98720.failed

The danger in switching at random upon intel_context_pin is that the
context may still actually be inflight, as it will not be scheduled out
until a context switch after it is complete -- that may be a long time
after we do a final intel_context_unpin.

Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/2118
Fixes: 6d06779e8672 ("drm/i915: Load balancing across a virtual engine")
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	Cc: <stable@vger.kernel.org> # v5.3+
	Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200713160549.17344-1-chris@chris-wilson.co.uk
(cherry picked from commit 90a987205c6cf74116a102ed446d22d92cdaf915)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/intel_lrc.c
diff --cc drivers/gpu/drm/i915/gt/intel_lrc.c
index dbc9d5b42161,e0280a672f1d..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_lrc.c
+++ b/drivers/gpu/drm/i915/gt/intel_lrc.c
@@@ -3070,12 -5432,15 +3070,24 @@@ static void virtual_engine_initial_hint
  	 * typically be the first we inspect for submission.
  	 */
  	swp = prandom_u32_max(ve->num_siblings);
++<<<<<<< HEAD
 +	if (!swp)
 +		return;
 +
 +	swap(ve->siblings[swp], ve->siblings[0]);
 +	virtual_update_register_offsets(ve->context.lrc_reg_state,
 +					ve->siblings[0]);
++=======
+ 	if (swp)
+ 		swap(ve->siblings[swp], ve->siblings[0]);
+ }
+ 
+ static int virtual_context_alloc(struct intel_context *ce)
+ {
+ 	struct virtual_engine *ve = container_of(ce, typeof(*ve), context);
+ 
+ 	return __execlists_context_alloc(ce, ve->siblings[0]);
++>>>>>>> 90a987205c6c (drm/i915/gt: Only swap to a random sibling once upon creation)
  }
  
  static int virtual_context_pin(struct intel_context *ce)
@@@ -3401,8 -5789,13 +3407,14 @@@ intel_execlists_create_virtual(struct i
  		ve->base.emit_fini_breadcrumb = sibling->emit_fini_breadcrumb;
  		ve->base.emit_fini_breadcrumb_dw =
  			sibling->emit_fini_breadcrumb_dw;
 -
 -		ve->base.flags = sibling->flags;
  	}
  
++<<<<<<< HEAD
++=======
+ 	ve->base.flags |= I915_ENGINE_IS_VIRTUAL;
+ 
+ 	virtual_engine_initial_hint(ve);
++>>>>>>> 90a987205c6c (drm/i915/gt: Only swap to a random sibling once upon creation)
  	return &ve->context;
  
  err_put:
* Unmerged path drivers/gpu/drm/i915/gt/intel_lrc.c
