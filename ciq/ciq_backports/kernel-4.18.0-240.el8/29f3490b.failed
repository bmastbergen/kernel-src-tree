net: use indirect call wrappers for skb_copy_datagram_iter()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] use indirect call wrappers for skb_copy_datagram_iter() (Guillaume Nault) [1822148]
Rebuild_FUZZ: 95.65%
commit-author Eric Dumazet <edumazet@google.com>
commit 29f3490ba9d2399d3d1b20c4aa74592d92bd4e11
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/29f3490b.failed

TCP recvmsg() calls skb_copy_datagram_iter(), which
calls an indirect function (cb pointing to simple_copy_to_iter())
for every MSS (fragment) present in the skb.

CONFIG_RETPOLINE=y forces a very expensive operation
that we can avoid thanks to indirect call wrappers.

This patch gives a 13% increase of performance on
a single flow, if the bottleneck is the thread reading
the TCP socket.

Fixes: 950fcaecd5cc ("datagram: consolidate datagram copy to iter helpers")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Acked-by: Paolo Abeni <pabeni@redhat.com>
	Acked-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 29f3490ba9d2399d3d1b20c4aa74592d92bd4e11)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/datagram.c
diff --cc net/core/datagram.c
index df1d96d17c98,639745d4f3b9..000000000000
--- a/net/core/datagram.c
+++ b/net/core/datagram.c
@@@ -443,8 -445,9 +450,14 @@@ static int __skb_datagram_iter(const st
  
  			if (copy > len)
  				copy = len;
++<<<<<<< HEAD
 +			n = cb(vaddr + frag->page_offset +
 +				offset - start, copy, data, to);
++=======
+ 			n = INDIRECT_CALL_1(cb, simple_copy_to_iter,
+ 					vaddr + skb_frag_off(frag) + offset - start,
+ 					copy, data, to);
++>>>>>>> 29f3490ba9d2 (net: use indirect call wrappers for skb_copy_datagram_iter())
  			kunmap(page);
  			offset += n;
  			if (n != copy)
* Unmerged path net/core/datagram.c
