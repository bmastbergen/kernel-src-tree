iwlwifi: add device name to device_info

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Luca Coelho <luciano.coelho@intel.com>
commit 0b295a1eb81f37dc7d4f4f2ee9ef375fb36ab5d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0b295a1e.failed

We have a lot of mostly duplicated data structures that are repeated
only because the device name string is different.  To avoid this, move
the string from the cfg to the trans structure and add it
independently from the rest of the configuration to the PCI mapping
tables.

	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit 0b295a1eb81f37dc7d4f4f2ee9ef375fb36ab5d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/iwl-config.h
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/iwl-config.h
index bbeb5fc3caad,be6a2bf9ce74..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@@ -452,9 -452,22 +452,28 @@@ struct iwl_cfg 
  	const struct iwl_fw_mon_regs mon_smem_regs;
  };
  
++<<<<<<< HEAD
 +/*
 + * This list declares the config structures for all devices.
 + */
++=======
+ #define IWL_CFG_ANY (~0)
+ 
+ struct iwl_dev_info {
+ 	u16 device;
+ 	u16 subdevice;
+ 	const struct iwl_cfg *cfg;
+ 	const char *name;
+ };
+ 
+ /*
+  * This list declares the config structures for all devices.
+  */
+ extern const struct iwl_cfg_trans_params iwl9000_trans_cfg;
+ extern const char iwl9260_160_name[];
+ extern const char iwl9560_160_name[];
+ 
++>>>>>>> 0b295a1eb81f (iwlwifi: add device name to device_info)
  #if IS_ENABLED(CONFIG_IWLDVM)
  extern const struct iwl_cfg iwl5300_agn_cfg;
  extern const struct iwl_cfg iwl5100_agn_cfg;
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 0fe5698f957c,9d8ffbecf5be..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -598,21 -592,12 +598,29 @@@ static const struct pci_device_id iwl_h
  	{IWL_PCI_DEVICE(0x2526, 0x1610, iwl9270_2ac_cfg)},
  	{IWL_PCI_DEVICE(0x2526, 0x2030, iwl9560_2ac_160_cfg_soc)},
  	{IWL_PCI_DEVICE(0x2526, 0x2034, iwl9560_2ac_160_cfg_soc)},
++<<<<<<< HEAD
 +	{IWL_PCI_DEVICE(0x2526, 0x4010, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0x4018, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0x401C, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0x4030, iwl9560_2ac_160_cfg)},
++=======
++>>>>>>> 0b295a1eb81f (iwlwifi: add device name to device_info)
  	{IWL_PCI_DEVICE(0x2526, 0x4034, iwl9560_2ac_160_cfg_soc)},
  	{IWL_PCI_DEVICE(0x2526, 0x40A4, iwl9462_2ac_cfg_soc)},
  	{IWL_PCI_DEVICE(0x2526, 0x4234, iwl9560_2ac_cfg_soc)},
  	{IWL_PCI_DEVICE(0x2526, 0x42A4, iwl9462_2ac_cfg_soc)},
++<<<<<<< HEAD
 +	{IWL_PCI_DEVICE(0x2526, 0x6010, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0x6014, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0x8014, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0x8010, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0xA014, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0xE010, iwl9260_2ac_160_cfg)},
 +	{IWL_PCI_DEVICE(0x2526, 0xE014, iwl9260_2ac_160_cfg)},
++=======
+ 	{IWL_PCI_DEVICE(0x2526, PCI_ANY_ID, iwl9000_trans_cfg)},
+ 
++>>>>>>> 0b295a1eb81f (iwlwifi: add device name to device_info)
  	{IWL_PCI_DEVICE(0x271B, 0x0010, iwl9160_2ac_cfg)},
  	{IWL_PCI_DEVICE(0x271B, 0x0014, iwl9160_2ac_cfg)},
  	{IWL_PCI_DEVICE(0x271B, 0x0210, iwl9160_2ac_cfg)},
@@@ -986,6 -971,31 +994,34 @@@
  };
  MODULE_DEVICE_TABLE(pci, iwl_hw_card_ids);
  
++<<<<<<< HEAD
++=======
+ #define IWL_DEV_INFO(_device, _subdevice, _cfg, _name)			 \
+ 	{ .device = (_device), .subdevice = (_subdevice), .cfg = &(_cfg), \
+ 	  .name = _name }
+ 
+ static const struct iwl_dev_info iwl_dev_info_table[] = {
+ #if IS_ENABLED(CONFIG_IWLMVM)
+ 	IWL_DEV_INFO(0x2526, 0x0010, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x0014, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x0018, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x001C, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x6010, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x6014, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x8014, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x8010, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0xA014, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0xE010, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 	IWL_DEV_INFO(0x2526, 0xE014, iwl9260_2ac_160_cfg, iwl9260_160_name),
+ 
+ 	IWL_DEV_INFO(0x2526, 0x0030, iwl9560_2ac_160_cfg, iwl9560_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x0038, iwl9560_2ac_160_cfg, iwl9560_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x003C, iwl9560_2ac_160_cfg, iwl9560_160_name),
+ 	IWL_DEV_INFO(0x2526, 0x4030, iwl9560_2ac_160_cfg, iwl9560_160_name),
+ #endif /* CONFIG_IWLMVM */
+ };
+ 
++>>>>>>> 0b295a1eb81f (iwlwifi: add device name to device_info)
  /* PCI registers */
  #define PCI_CFG_RETRY_TIMEOUT	0x041
  
@@@ -1005,7 -1026,20 +1041,24 @@@ static int iwl_pci_probe(struct pci_de
  	trans_pcie = IWL_TRANS_GET_PCIE_TRANS(iwl_trans);
  
  	/* the trans_cfg should never change, so set it now */
++<<<<<<< HEAD
 +	iwl_trans->trans_cfg = &cfg->trans;
++=======
+ 	iwl_trans->trans_cfg = trans;
+ 
+ 	for (i = 0; i < ARRAY_SIZE(iwl_dev_info_table); i++) {
+ 		const struct iwl_dev_info *dev_info = &iwl_dev_info_table[i];
+ 
+ 		if ((dev_info->device == IWL_CFG_ANY ||
+ 		     dev_info->device == pdev->device) &&
+ 		    (dev_info->subdevice == IWL_CFG_ANY ||
+ 		     dev_info->subdevice == pdev->subsystem_device)) {
+ 			iwl_trans->cfg = dev_info->cfg;
+ 			iwl_trans->name = dev_info->name;
+ 			goto found;
+ 		}
+ 	}
++>>>>>>> 0b295a1eb81f (iwlwifi: add device name to device_info)
  
  #if IS_ENABLED(CONFIG_IWLMVM)
  	/*
@@@ -1117,11 -1156,20 +1170,21 @@@
  	}
  
  #endif
 -	/*
 -	 * If we didn't set the cfg yet, assume the trans is actually
 -	 * a full cfg from the old tables.
 -	 */
 -	if (!iwl_trans->cfg)
 -		iwl_trans->cfg = cfg;
 +	/* now set the real cfg we decided to use */
 +	iwl_trans->cfg = cfg;
  
++<<<<<<< HEAD
 +	if (cfg->trans.mq_rx_supported) {
 +		if (WARN_ON(!cfg->num_rbds)) {
++=======
+ found:
+ 	/* if we don't have a name yet, copy name from the old cfg */
+ 	if (!iwl_trans->name)
+ 		iwl_trans->name = iwl_trans->cfg->name;
+ 
+ 	if (iwl_trans->trans_cfg->mq_rx_supported) {
+ 		if (WARN_ON(!iwl_trans->cfg->num_rbds)) {
++>>>>>>> 0b295a1eb81f (iwlwifi: add device name to device_info)
  			ret = -EINVAL;
  			goto out_free_trans;
  		}
diff --git a/drivers/net/wireless/intel/iwlwifi/cfg/9000.c b/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
index 79390f880efb..f0a28cefc73b 100644
--- a/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
+++ b/drivers/net/wireless/intel/iwlwifi/cfg/9000.c
@@ -184,8 +184,10 @@ const struct iwl_cfg iwl9260_2ac_cfg = {
 	IWL_DEVICE_9000,
 };
 
+const char iwl9260_160_name[] = "Intel(R) Wireless-AC 9260 160MHz";
+const char iwl9560_160_name[] = "Intel(R) Wireless-AC 9560 160MHz";
+
 const struct iwl_cfg iwl9260_2ac_160_cfg = {
-	.name = "Intel(R) Wireless-AC 9260 160MHz",
 	.fw_name_pre = IWL9260_FW_PRE,
 	IWL_DEVICE_9000,
 };
diff --git a/drivers/net/wireless/intel/iwlwifi/dvm/main.c b/drivers/net/wireless/intel/iwlwifi/dvm/main.c
index 4f2789bb3b5b..598ee7315558 100644
--- a/drivers/net/wireless/intel/iwlwifi/dvm/main.c
+++ b/drivers/net/wireless/intel/iwlwifi/dvm/main.c
@@ -1255,7 +1255,7 @@ static struct iwl_op_mode *iwl_op_mode_dvm_start(struct iwl_trans *trans,
 	 ************************/
 	hw = iwl_alloc_all();
 	if (!hw) {
-		pr_err("%s: Cannot allocate network device\n", cfg->name);
+		pr_err("%s: Cannot allocate network device\n", trans->name);
 		goto out;
 	}
 
@@ -1390,7 +1390,7 @@ static struct iwl_op_mode *iwl_op_mode_dvm_start(struct iwl_trans *trans,
 	 * 2. Read REV register
 	 ***********************/
 	IWL_INFO(priv, "Detected %s, REV=0x%X\n",
-		priv->cfg->name, priv->trans->hw_rev);
+		priv->trans->name, priv->trans->hw_rev);
 
 	if (iwl_trans_start_hw(priv->trans))
 		goto out_free_hw;
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/dbg.c b/drivers/net/wireless/intel/iwlwifi/fw/dbg.c
index 113cef599be2..91df1ee25dd0 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/dbg.c
+++ b/drivers/net/wireless/intel/iwlwifi/fw/dbg.c
@@ -929,7 +929,7 @@ iwl_fw_error_dump_file(struct iwl_fw_runtime *fwrt,
 			cpu_to_le32(CSR_HW_REV_STEP(fwrt->trans->hw_rev));
 		memcpy(dump_info->fw_human_readable, fwrt->fw->human_readable,
 		       sizeof(dump_info->fw_human_readable));
-		strncpy(dump_info->dev_human_readable, fwrt->trans->cfg->name,
+		strncpy(dump_info->dev_human_readable, fwrt->trans->name,
 			sizeof(dump_info->dev_human_readable) - 1);
 		strncpy(dump_info->bus_human_readable, fwrt->dev->bus->name,
 			sizeof(dump_info->bus_human_readable) - 1);
* Unmerged path drivers/net/wireless/intel/iwlwifi/iwl-config.h
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-trans.h b/drivers/net/wireless/intel/iwlwifi/iwl-trans.h
index eae83e22403d..7b3b1f4c99b4 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-trans.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-trans.h
@@ -871,6 +871,8 @@ struct iwl_trans {
 
 	enum iwl_plat_pm_mode system_pm_mode;
 
+	const char *name;
+
 	/* pointer to trans specific struct */
 	/*Ensure that this pointer will always be aligned to sizeof pointer */
 	char trans_specific[0] __aligned(sizeof(void *));
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c b/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c
index aa659162a7c2..190cf15b825c 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c
@@ -752,7 +752,7 @@ static ssize_t iwl_dbgfs_fw_ver_read(struct file *file, char __user *user_buf,
 	pos += scnprintf(pos, endpos - pos, "FW: %s\n",
 			 mvm->fwrt.fw->human_readable);
 	pos += scnprintf(pos, endpos - pos, "Device: %s\n",
-			 mvm->fwrt.trans->cfg->name);
+			 mvm->fwrt.trans->name);
 	pos += scnprintf(pos, endpos - pos, "Bus: %s\n",
 			 mvm->fwrt.dev->bus->name);
 
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c b/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c
index 46128a2a9c6e..70b29bf16bb9 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c
@@ -178,7 +178,7 @@ static int iwl_nvm_read_chunk(struct iwl_mvm *mvm, u16 section,
 		} else {
 			IWL_DEBUG_EEPROM(mvm->trans->dev,
 					 "NVM access command failed with status %d (device: %s)\n",
-					 ret, mvm->cfg->name);
+					 ret, mvm->trans->name);
 			ret = -ENODATA;
 		}
 		goto exit;
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
index 1b07a8e8f069..dfe02440d474 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
@@ -830,7 +830,7 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,
 	}
 
 	IWL_INFO(mvm, "Detected %s, REV=0x%X\n",
-		 mvm->cfg->name, mvm->trans->hw_rev);
+		 mvm->trans->name, mvm->trans->hw_rev);
 
 	if (iwlwifi_mod_params.nvm_file)
 		mvm->nvm_file_name = iwlwifi_mod_params.nvm_file;
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
