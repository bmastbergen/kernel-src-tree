dma-mapping: introduce dma_get_merge_boundary()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
commit 6ba99411b858bd70bae966633561e698cd6de38c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6ba99411.failed

This patch adds a new DMA API "dma_get_merge_boundary". This function
returns the DMA merge boundary if the DMA layer can merge the segments.
This patch also adds the implementation for a new dma_map_ops pointer.

	Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
	Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 6ba99411b858bd70bae966633561e698cd6de38c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/dma-mapping.h
diff --cc include/linux/dma-mapping.h
index f08f222fef10,de41a4f0b9f6..000000000000
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@@ -136,7 -130,8 +136,12 @@@ struct dma_map_ops 
  			enum dma_data_direction direction);
  	int (*dma_supported)(struct device *dev, u64 mask);
  	u64 (*get_required_mask)(struct device *dev);
++<<<<<<< HEAD
 +	RH_KABI_SIZE_AND_EXTEND(dma_map_ops_extended)
++=======
+ 	size_t (*max_mapping_size)(struct device *dev);
+ 	unsigned long (*get_merge_boundary)(struct device *dev);
++>>>>>>> 6ba99411b858 (dma-mapping: introduce dma_get_merge_boundary())
  };
  
  #define DMA_MAPPING_ERROR		(~(dma_addr_t)0)
diff --git a/Documentation/DMA-API.txt b/Documentation/DMA-API.txt
index 4f0f1a98c320..5ae4aba335e0 100644
--- a/Documentation/DMA-API.txt
+++ b/Documentation/DMA-API.txt
@@ -204,6 +204,14 @@ Returns the maximum size of a mapping for the device. The size parameter
 of the mapping functions like dma_map_single(), dma_map_page() and
 others should not be larger than the returned value.
 
+::
+
+	unsigned long
+	dma_get_merge_boundary(struct device *dev);
+
+Returns the DMA merge boundary. If the device cannot merge any the DMA address
+segments, the function returns 0.
+
 Part Id - Streaming DMA mappings
 --------------------------------
 
* Unmerged path include/linux/dma-mapping.h
diff --git a/kernel/dma/mapping.c b/kernel/dma/mapping.c
index 339979f81f1c..c072c14c9525 100644
--- a/kernel/dma/mapping.c
+++ b/kernel/dma/mapping.c
@@ -397,3 +397,14 @@ size_t dma_max_mapping_size(struct device *dev)
 	return size;
 }
 EXPORT_SYMBOL_GPL(dma_max_mapping_size);
+
+unsigned long dma_get_merge_boundary(struct device *dev)
+{
+	const struct dma_map_ops *ops = get_dma_ops(dev);
+
+	if (!ops || !ops->get_merge_boundary)
+		return 0;	/* can't merge */
+
+	return ops->get_merge_boundary(dev);
+}
+EXPORT_SYMBOL_GPL(dma_get_merge_boundary);
