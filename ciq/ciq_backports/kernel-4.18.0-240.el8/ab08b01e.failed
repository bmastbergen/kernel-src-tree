iomap: move struct iomap_page out of iomap.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit ab08b01ec0a205d9c98e712eb504c850a51e6fdb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ab08b01e.failed

Now that all the writepage code is in the iomap code there is no
need to keep this structure public.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit ab08b01ec0a205d9c98e712eb504c850a51e6fdb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/buffered-io.c
#	include/linux/iomap.h
diff --cc include/linux/iomap.h
index 960967bb5048,0f741eebf3a7..000000000000
--- a/include/linux/iomap.h
+++ b/include/linux/iomap.h
@@@ -124,21 -127,14 +124,32 @@@ struct iomap_ops 
  };
  
  /*
++<<<<<<< HEAD
 + * Structure allocate for each page when block size < PAGE_SIZE to track
 + * sub-page uptodate status and I/O completions.
 + */
 +struct iomap_page {
 +	atomic_t		read_count;
 +	atomic_t		write_count;
 +	DECLARE_BITMAP(uptodate, PAGE_SIZE / 512);
 +};
 +
 +static inline struct iomap_page *to_iomap_page(struct page *page)
 +{
 +	if (page_has_private(page))
 +		return (struct iomap_page *)page_private(page);
 +	return NULL;
 +}
++=======
+  * Main iomap iterator function.
+  */
+ typedef loff_t (*iomap_actor_t)(struct inode *inode, loff_t pos, loff_t len,
+ 		void *data, struct iomap *iomap);
+ 
+ loff_t iomap_apply(struct inode *inode, loff_t pos, loff_t length,
+ 		unsigned flags, const struct iomap_ops *ops, void *data,
+ 		iomap_actor_t actor);
++>>>>>>> ab08b01ec0a2 (iomap: move struct iomap_page out of iomap.h)
  
  ssize_t iomap_file_buffered_write(struct kiocb *iocb, struct iov_iter *from,
  		const struct iomap_ops *ops);
* Unmerged path fs/iomap/buffered-io.c
* Unmerged path fs/iomap/buffered-io.c
* Unmerged path include/linux/iomap.h
