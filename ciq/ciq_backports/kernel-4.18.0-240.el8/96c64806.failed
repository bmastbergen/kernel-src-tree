x86/entry/64: Fix unwind hints in __switch_to_asm()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit 96c64806b4bf35f5edb465cafa6cec490e424a30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/96c64806.failed

UNWIND_HINT_FUNC has some limitations: specifically, it doesn't reset
all the registers to undefined.  This causes objtool to get confused
about the RBP push in __switch_to_asm(), resulting in bad ORC data.

While __switch_to_asm() does do some stack magic, it's otherwise a
normal callable-from-C function, so just annotate it as a function,
which makes objtool happy and allows it to produces the correct hints
automatically.

Fixes: 8c1f75587a18 ("x86/entry/64: Add unwind hint annotations")
	Reviewed-by: Miroslav Benes <mbenes@suse.cz>
	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Dave Jones <dsj@fb.com>
	Cc: Jann Horn <jannh@google.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
Link: https://lore.kernel.org/r/03d0411920d10f7418f2e909210d8e9a3b2ab081.1587808742.git.jpoimboe@redhat.com
(cherry picked from commit 96c64806b4bf35f5edb465cafa6cec490e424a30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/entry/entry_64.S
diff --cc arch/x86/entry/entry_64.S
index 630adb2c6a1a,34a588950fe1..000000000000
--- a/arch/x86/entry/entry_64.S
+++ b/arch/x86/entry/entry_64.S
@@@ -280,8 -279,7 +280,12 @@@ END(entry_SYSCALL_64
   * %rdi: prev task
   * %rsi: next task
   */
++<<<<<<< HEAD
 +ENTRY(__switch_to_asm)
 +	UNWIND_HINT_FUNC
++=======
+ SYM_FUNC_START(__switch_to_asm)
++>>>>>>> 96c64806b4bf (x86/entry/64: Fix unwind hints in __switch_to_asm())
  	/*
  	 * Save callee-saved registers
  	 * This must match the order in inactive_task_frame
@@@ -324,7 -320,7 +328,11 @@@
  	popq	%rbp
  
  	jmp	__switch_to
++<<<<<<< HEAD
 +END(__switch_to_asm)
++=======
+ SYM_FUNC_END(__switch_to_asm)
++>>>>>>> 96c64806b4bf (x86/entry/64: Fix unwind hints in __switch_to_asm())
  
  /*
   * A newly forked process directly context switches into this address.
* Unmerged path arch/x86/entry/entry_64.S
