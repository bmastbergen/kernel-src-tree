perf record: Add support for limit perf output file size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiwei Sun <jiwei.sun@windriver.com>
commit 6d57581659f7229903d141455c7308e309056e89
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6d575816.failed

The patch adds a new option to limit the output file size, then based on
it, we can create a wrapper of the perf command that uses the option to
avoid exhausting the disk space by the unconscious user.

In order to make the perf.data parsable, we just limit the sample data
size, since the perf.data consists of many headers and sample data and
other data, the actual size of the recorded file will bigger than the
setting value.

Testing it:

  # ./perf record -a -g --max-size=10M
  Couldn't synthesize bpf events.
  [ perf record: perf size limit reached (10249 KB), stopping session ]
  [ perf record: Woken up 32 times to write data ]
  [ perf record: Captured and wrote 10.133 MB perf.data (71964 samples) ]

  # ls -lh perf.data
  -rw------- 1 root root 11M Oct 22 14:32 perf.data

  # ./perf record -a -g --max-size=10K
  [ perf record: perf size limit reached (10 KB), stopping session ]
  Couldn't synthesize bpf events.
  [ perf record: Woken up 0 times to write data ]
  [ perf record: Captured and wrote 1.546 MB perf.data (69 samples) ]

  # ls -l perf.data
  -rw------- 1 root root 1626952 Oct 22 14:36 perf.data

Committer notes:

Fixed the build in multiple distros by using PRIu64 to print u64 struct
members, fixing this:

  builtin-record.c: In function 'record__write':
  builtin-record.c:150:5: error: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'u64' [-Werror=format=]
       rec->bytes_written >> 10);
       ^
    CC       /tmp/build/pe

	Signed-off-by: Jiwei Sun <jiwei.sun@windriver.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Richard Danter <richard.danter@windriver.com>
Link: http://lore.kernel.org/lkml/20191022080901.3841-1-jiwei.sun@windriver.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 6d57581659f7229903d141455c7308e309056e89)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-record.txt
#	tools/perf/builtin-record.c
diff --cc tools/perf/Documentation/perf-record.txt
index c6f9f31b6039,ebcba1f95513..000000000000
--- a/tools/perf/Documentation/perf-record.txt
+++ b/tools/perf/Documentation/perf-record.txt
@@@ -571,6 -571,13 +571,16 @@@ config terms. For example: 'cycles/over
  
  Implies --tail-synthesize.
  
++<<<<<<< HEAD
++=======
+ --kcore::
+ Make a copy of /proc/kcore and place it into a directory with the perf data file.
+ 
+ --max-size=<size>::
+ Limit the sample data max size, <size> is expected to be a number with
+ appended unit character - B/K/M/G
+ 
++>>>>>>> 6d57581659f7 (perf record: Add support for limit perf output file size)
  SEE ALSO
  --------
  linkperf:perf-stat[1], linkperf:perf-list[1]
diff --cc tools/perf/builtin-record.c
index 170d59bcf675,b95c000c1ed9..000000000000
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@@ -116,7 -126,13 +119,17 @@@ static bool switch_output_time(struct r
  	       trigger_is_ready(&switch_output_trigger);
  }
  
++<<<<<<< HEAD
 +static int record__write(struct record *rec, struct perf_mmap *map __maybe_unused,
++=======
+ static bool record__output_max_size_exceeded(struct record *rec)
+ {
+ 	return rec->output_max_size &&
+ 	       (rec->bytes_written >= rec->output_max_size);
+ }
+ 
+ static int record__write(struct record *rec, struct mmap *map __maybe_unused,
++>>>>>>> 6d57581659f7 (perf record: Add support for limit perf output file size)
  			 void *bf, size_t size)
  {
  	struct perf_data_file *file = &rec->session->data->file;
* Unmerged path tools/perf/Documentation/perf-record.txt
* Unmerged path tools/perf/builtin-record.c
