KVM: Move initialization of preempt notifier to kvm_vcpu_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit d5c48debcc4fbdd09e3e0871980b7ebf06ec6e07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d5c48deb.failed

Initialize the preempt notifier immediately in kvm_vcpu_init() to pave
the way for removing kvm_arch_vcpu_setup(), i.e. to allow arch specific
code to call vcpu_load() during kvm_arch_vcpu_create().

Back when preemption support was added, the location of the call to init
the preempt notifier was perfectly sane.  The overall vCPU creation flow
featured a single arch specific hook and the preempt notifer was used
immediately after its initialization (by vcpu_load()).  E.g.:

        vcpu = kvm_arch_ops->vcpu_create(kvm, n);
        if (IS_ERR(vcpu))
                return PTR_ERR(vcpu);

        preempt_notifier_init(&vcpu->preempt_notifier, &kvm_preempt_ops);

        vcpu_load(vcpu);
        r = kvm_mmu_setup(vcpu);
        vcpu_put(vcpu);
        if (r < 0)
                goto free_vcpu;

Today, the call to preempt_notifier_init() is sandwiched between two
arch specific calls, kvm_arch_vcpu_create() and kvm_arch_vcpu_setup(),
which needlessly forces x86 (and possibly others?) to split its vCPU
creation flow.  Init the preempt notifier prior to any arch specific
call so that each arch can independently decide how best to organize
its creation flow.

	Acked-by: Christoffer Dall <christoffer.dall@arm.com>
	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit d5c48debcc4fbdd09e3e0871980b7ebf06ec6e07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index c6256c9afce6,1ddb6d4cfbfd..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -2736,7 -2745,13 +2737,17 @@@ static int kvm_vm_ioctl_create_vcpu(str
  		goto vcpu_decrement;
  	}
  
++<<<<<<< HEAD
 +	preempt_notifier_init(&vcpu->preempt_notifier, &kvm_preempt_ops);
++=======
+ 	r = kvm_vcpu_init(vcpu, kvm, id);
+ 	if (r)
+ 		goto vcpu_free;
+ 
+ 	r = kvm_arch_vcpu_create(vcpu);
+ 	if (r)
+ 		goto vcpu_uninit;
++>>>>>>> d5c48debcc4f (KVM: Move initialization of preempt notifier to kvm_vcpu_init())
  
  	r = kvm_arch_vcpu_setup(vcpu);
  	if (r)
* Unmerged path virt/kvm/kvm_main.c
