mlxsw: spectrum_trap: Move policer initialization to mlxsw_sp_trap_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Pirko <jiri@mellanox.com>
commit 3cbc37e6e96b1bbc174dd691a0aa79978ef4b1b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3cbc37e6.failed

No need to initialize a single policer multiple times for each group.
So move the initialization to be done from mlxsw_sp_trap_init(), making
the function much simpler. Also, rename it so it is with sync with
spectrum.c policers initialization.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3cbc37e6e96b1bbc174dd691a0aa79978ef4b1b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
index 7fa9a0347f25,871bd609b0c9..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
@@@ -194,8 -228,26 +194,19 @@@ static u16 mlxsw_sp_listener_devlink_ma
  	DEVLINK_TRAP_GENERIC_ID_UNRESOLVED_NEIGH,
  	DEVLINK_TRAP_GENERIC_ID_IPV4_LPM_UNICAST_MISS,
  	DEVLINK_TRAP_GENERIC_ID_IPV6_LPM_UNICAST_MISS,
 -	DEVLINK_MLXSW_TRAP_ID_IRIF_DISABLED,
 -	DEVLINK_MLXSW_TRAP_ID_ERIF_DISABLED,
 -	DEVLINK_TRAP_GENERIC_ID_NON_ROUTABLE,
 -	DEVLINK_TRAP_GENERIC_ID_DECAP_ERROR,
 -	DEVLINK_TRAP_GENERIC_ID_DECAP_ERROR,
 -	DEVLINK_TRAP_GENERIC_ID_DECAP_ERROR,
 -	DEVLINK_TRAP_GENERIC_ID_OVERLAY_SMAC_MC,
  };
  
+ #define MLXSW_SP_DISCARD_POLICER_ID	(MLXSW_REG_HTGT_TRAP_GROUP_MAX + 1)
+ 
+ static int mlxsw_sp_trap_cpu_policers_set(struct mlxsw_sp *mlxsw_sp)
+ {
+ 	char qpcr_pl[MLXSW_REG_QPCR_LEN];
+ 
+ 	mlxsw_reg_qpcr_pack(qpcr_pl, MLXSW_SP_DISCARD_POLICER_ID,
+ 			    MLXSW_REG_QPCR_IR_UNITS_M, false, 10 * 1024, 7);
+ 	return mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(qpcr), qpcr_pl);
+ }
+ 
  int mlxsw_sp_devlink_traps_init(struct mlxsw_sp *mlxsw_sp)
  {
  	struct devlink *devlink = priv_to_devlink(mlxsw_sp->core);
@@@ -289,40 -346,8 +305,45 @@@ int mlxsw_sp_trap_action_set(struct mlx
  	return 0;
  }
  
++<<<<<<< HEAD
 +#define MLXSW_SP_DISCARD_POLICER_ID	(MLXSW_REG_HTGT_TRAP_GROUP_MAX + 1)
 +
 +static int
 +mlxsw_sp_trap_group_policer_init(struct mlxsw_sp *mlxsw_sp,
 +				 const struct devlink_trap_group *group)
 +{
 +	enum mlxsw_reg_qpcr_ir_units ir_units;
 +	char qpcr_pl[MLXSW_REG_QPCR_LEN];
 +	u16 policer_id;
 +	u8 burst_size;
 +	bool is_bytes;
 +	u32 rate;
 +
 +	switch (group->id) {
 +	case DEVLINK_TRAP_GROUP_GENERIC_ID_L2_DROPS: /* fall through */
 +	case DEVLINK_TRAP_GROUP_GENERIC_ID_L3_DROPS:
 +		policer_id = MLXSW_SP_DISCARD_POLICER_ID;
 +		ir_units = MLXSW_REG_QPCR_IR_UNITS_M;
 +		is_bytes = false;
 +		rate = 10 * 1024; /* 10Kpps */
 +		burst_size = 7;
 +		break;
 +	default:
 +		return -EINVAL;
 +	}
 +
 +	mlxsw_reg_qpcr_pack(qpcr_pl, policer_id, ir_units, is_bytes, rate,
 +			    burst_size);
 +	return mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(qpcr), qpcr_pl);
 +}
 +
 +static int
 +__mlxsw_sp_trap_group_init(struct mlxsw_sp *mlxsw_sp,
 +			   const struct devlink_trap_group *group)
++=======
+ int mlxsw_sp_trap_group_init(struct mlxsw_core *mlxsw_core,
+ 			     const struct devlink_trap_group *group)
++>>>>>>> 3cbc37e6e96b (mlxsw: spectrum_trap: Move policer initialization to mlxsw_sp_trap_init())
  {
  	char htgt_pl[MLXSW_REG_HTGT_LEN];
  	u8 priority, tc, group_id;
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
