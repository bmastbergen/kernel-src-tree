arm64: Enable the support of pseudo-NMIs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Julien Thierry <julien.thierry@arm.com>
commit bc3c03ccb4641fb940b27a0d369431876923a8fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/bc3c03cc.failed

Add a build option and a command line parameter to build and enable the
support of pseudo-NMIs.

	Signed-off-by: Julien Thierry <julien.thierry@arm.com>
	Suggested-by: Daniel Thompson <daniel.thompson@linaro.org>
	Cc: Will Deacon <will.deacon@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit bc3c03ccb4641fb940b27a0d369431876923a8fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/cpufeature.c
diff --cc arch/arm64/kernel/cpufeature.c
index dcbb2ac420b2,e24e94d28767..000000000000
--- a/arch/arm64/kernel/cpufeature.c
+++ b/arch/arm64/kernel/cpufeature.c
@@@ -1233,6 -1206,22 +1233,25 @@@ static void cpu_enable_address_auth(str
  }
  #endif /* CONFIG_ARM64_PTR_AUTH */
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_ARM64_PSEUDO_NMI
+ static bool enable_pseudo_nmi;
+ 
+ static int __init early_enable_pseudo_nmi(char *p)
+ {
+ 	return strtobool(p, &enable_pseudo_nmi);
+ }
+ early_param("irqchip.gicv3_pseudo_nmi", early_enable_pseudo_nmi);
+ 
+ static bool can_use_gic_priorities(const struct arm64_cpu_capabilities *entry,
+ 				   int scope)
+ {
+ 	return enable_pseudo_nmi && has_useable_gicv3_cpuif(entry, scope);
+ }
+ #endif
+ 
++>>>>>>> bc3c03ccb464 (arm64: Enable the support of pseudo-NMIs)
  static const struct arm64_cpu_capabilities arm64_features[] = {
  	{
  		.desc = "GIC system register CPU interface",
diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index 1585dbf3e53c..024b43c916f0 100644
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@ -1826,6 +1826,11 @@
 			to let secondary kernels in charge of setting up
 			LPIs.
 
+	irqchip.gicv3_pseudo_nmi= [ARM64]
+			Enables support for pseudo-NMIs in the kernel. This
+			requires the kernel to be built with
+			CONFIG_ARM64_PSEUDO_NMI.
+
 	irqfixup	[HW]
 			When an interrupt is not handled search all handlers
 			for it. Intended to get systems with badly broken
diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index df530ef3b952..e19396f93363 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -1398,6 +1398,20 @@ config ARM64_MODULE_PLTS
 	bool
 	select HAVE_MOD_ARCH_SPECIFIC
 
+config ARM64_PSEUDO_NMI
+	bool "Support for NMI-like interrupts"
+	select CONFIG_ARM_GIC_V3
+	help
+	  Adds support for mimicking Non-Maskable Interrupts through the use of
+	  GIC interrupt priority. This support requires version 3 or later of
+	  Arm GIC.
+
+	  This high priority configuration for interrupts needs to be
+	  explicitly enabled by setting the kernel parameter
+	  "irqchip.gicv3_pseudo_nmi" to 1.
+
+	  If unsure, say N
+
 config RELOCATABLE
 	bool
 	help
* Unmerged path arch/arm64/kernel/cpufeature.c
