ibmvnic: Flush existing work items before device removal

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Thomas Falcon <tlfalcon@linux.ibm.com>
commit 6954a9e4192b86d778fb52b525fd7b62d51b1147
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6954a9e4.failed

Ensure that all scheduled work items have completed before continuing
with device removal and after further event scheduling has been
halted. This patch fixes a bug where a scheduled driver reset event
is processed following device removal.

	Signed-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6954a9e4192b86d778fb52b525fd7b62d51b1147)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 57f8a7443eb1,1b4d04e4474b..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -5180,8 -5173,20 +5180,16 @@@ static int ibmvnic_remove(struct vio_de
  {
  	struct net_device *netdev = dev_get_drvdata(&dev->dev);
  	struct ibmvnic_adapter *adapter = netdev_priv(netdev);
 -	unsigned long flags;
 -
 -	spin_lock_irqsave(&adapter->state_lock, flags);
 -	if (adapter->state == VNIC_RESETTING) {
 -		spin_unlock_irqrestore(&adapter->state_lock, flags);
 -		return -EBUSY;
 -	}
  
  	adapter->state = VNIC_REMOVING;
++<<<<<<< HEAD
++=======
+ 	spin_unlock_irqrestore(&adapter->state_lock, flags);
+ 
+ 	flush_work(&adapter->ibmvnic_reset);
+ 	flush_delayed_work(&adapter->ibmvnic_delayed_reset);
+ 
++>>>>>>> 6954a9e4192b (ibmvnic: Flush existing work items before device removal)
  	rtnl_lock();
  	unregister_netdevice(netdev);
  
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
