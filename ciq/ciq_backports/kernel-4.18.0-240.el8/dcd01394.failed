EDAC/amd64: Drop some family checks for newer systems

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Yazen Ghannam <yazen.ghannam@amd.com>
commit dcd01394ce7cd7d25bb15c81ad2e804d8090611f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/dcd01394.failed

In general, "pvt->umc != NULL" is used to check if the system is Family
17h+. However, there are a few places that are using direct family
checks.

Replace the remaining family checks with a check for "pvt->umc != NULL".

	Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20200110015651.14887-6-Yazen.Ghannam@amd.com
(cherry picked from commit dcd01394ce7cd7d25bb15c81ad2e804d8090611f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/amd64_edac.c
diff --cc drivers/edac/amd64_edac.c
index 2ddde0ed0a89,4fc9f0b06ed7..000000000000
--- a/drivers/edac/amd64_edac.c
+++ b/drivers/edac/amd64_edac.c
@@@ -216,7 -214,7 +216,11 @@@ static int __set_scrub_rate(struct amd6
  
  	scrubval = scrubrates[i].scrubval;
  
++<<<<<<< HEAD
 +	if (pvt->fam == 0x17) {
++=======
+ 	if (pvt->umc) {
++>>>>>>> dcd01394ce7c (EDAC/amd64: Drop some family checks for newer systems)
  		__f17h_set_scrubval(pvt, scrubval);
  	} else if (pvt->fam == 0x15 && pvt->model == 0x60) {
  		f15h_select_dct(pvt, 0);
@@@ -258,17 -256,7 +262,21 @@@ static int get_scrub_rate(struct mem_ct
  	int i, retval = -EINVAL;
  	u32 scrubval = 0;
  
++<<<<<<< HEAD
 +	switch (pvt->fam) {
 +	case 0x15:
 +		/* Erratum #505 */
 +		if (pvt->model < 0x10)
 +			f15h_select_dct(pvt, 0);
 +
 +		if (pvt->model == 0x60)
 +			amd64_read_pci_cfg(pvt->F2, F15H_M60H_SCRCTRL, &scrubval);
 +		break;
 +
 +	case 0x17:
++=======
+ 	if (pvt->umc) {
++>>>>>>> dcd01394ce7c (EDAC/amd64: Drop some family checks for newer systems)
  		amd64_read_pci_cfg(pvt->F6, F17H_SCR_BASE_ADDR, &scrubval);
  		if (scrubval & BIT(0)) {
  			amd64_read_pci_cfg(pvt->F6, F17H_SCR_LIMIT_ADDR, &scrubval);
@@@ -1101,15 -1103,6 +1123,18 @@@ static void determine_memory_type(struc
  	case 0x16:
  		goto ddr3;
  
++<<<<<<< HEAD
 +	case 0x17:
 +		if ((pvt->umc[0].dimm_cfg | pvt->umc[1].dimm_cfg) & BIT(5))
 +			pvt->dram_type = MEM_LRDDR4;
 +		else if ((pvt->umc[0].dimm_cfg | pvt->umc[1].dimm_cfg) & BIT(4))
 +			pvt->dram_type = MEM_RDDR4;
 +		else
 +			pvt->dram_type = MEM_DDR4;
 +		return;
 +
++=======
++>>>>>>> dcd01394ce7c (EDAC/amd64: Drop some family checks for newer systems)
  	default:
  		WARN(1, KERN_ERR "%s: Family??? 0x%x\n", __func__, pvt->fam);
  		pvt->dram_type = MEM_EMPTY;
* Unmerged path drivers/edac/amd64_edac.c
