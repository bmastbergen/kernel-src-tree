ASoC: SOF: pm: Unify suspend/resume routines

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: pm: Unify suspend/resume routines (Jaroslav Kysela) [1797509]
Rebuild_FUZZ: 93.62%
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit fb9a81192d44ae9f334b1d88651dec427fa751d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/fb9a8119.failed

Unify the suspend/resume routines for both the D0I3/D3
DSP targets in sof_suspend()/sof_resume().

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20200129220726.31792-3-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit fb9a81192d44ae9f334b1d88651dec427fa751d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/pm.c
diff --cc sound/soc/sof/pm.c
index 349af485a3a0,5b186bceedb9..000000000000
--- a/sound/soc/sof/pm.c
+++ b/sound/soc/sof/pm.c
@@@ -269,6 -57,21 +270,24 @@@ static int sof_resume(struct device *de
  	if (!sof_ops(sdev)->resume || !sof_ops(sdev)->runtime_resume)
  		return 0;
  
++<<<<<<< HEAD
++=======
+ 	/* DSP was never successfully started, nothing to resume */
+ 	if (sdev->first_boot)
+ 		return 0;
+ 
+ 	/* resume from D0I3 */
+ 	if (!runtime_resume && old_d0_substate == SOF_DSP_D0I3) {
+ 		ret = snd_sof_set_d0_substate(sdev, SOF_DSP_D0I0);
+ 		if (ret < 0 && ret != -ENOTSUPP) {
+ 			dev_err(sdev->dev,
+ 				"error: failed to resume from D0I3 %d\n",
+ 				ret);
+ 			return ret;
+ 		}
+ 	}
+ 
++>>>>>>> fb9a81192d44 (ASoC: SOF: pm: Unify suspend/resume routines)
  	/*
  	 * if the runtime_resume flag is set, call the runtime_resume routine
  	 * or else call the system resume routine
@@@ -283,6 -86,12 +302,15 @@@
  		return ret;
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* Nothing further to do if resuming from D0I3 */
+ 	if (!runtime_resume && old_d0_substate == SOF_DSP_D0I3)
+ 		return 0;
+ 
+ 	sdev->fw_state = SOF_FW_BOOT_PREPARE;
+ 
++>>>>>>> fb9a81192d44 (ASoC: SOF: pm: Unify suspend/resume routines)
  	/* load the firmware */
  	ret = snd_sof_load_firmware(sdev);
  	if (ret < 0) {
@@@ -341,8 -155,8 +369,13 @@@ static int sof_suspend(struct device *d
  	if (!sof_ops(sdev)->suspend)
  		return 0;
  
++<<<<<<< HEAD
 +	/* release trace */
 +	snd_sof_release_trace(sdev);
++=======
+ 	if (sdev->fw_state != SOF_FW_BOOT_COMPLETE)
+ 		goto suspend;
++>>>>>>> fb9a81192d44 (ASoC: SOF: pm: Unify suspend/resume routines)
  
  	/* set restore_stream for all streams during system suspend */
  	if (!runtime_suspend) {
@@@ -378,7 -208,13 +427,17 @@@
  			 ret);
  	}
  
++<<<<<<< HEAD
 +	/* power down all DSP cores */
++=======
+ suspend:
+ 
+ 	/* return if the DSP was not probed successfully */
+ 	if (sdev->fw_state == SOF_FW_BOOT_NOT_STARTED)
+ 		return 0;
+ 
+ 	/* platform-specific suspend */
++>>>>>>> fb9a81192d44 (ASoC: SOF: pm: Unify suspend/resume routines)
  	if (runtime_suspend)
  		ret = snd_sof_dsp_runtime_suspend(sdev);
  	else
@@@ -388,6 -224,13 +447,16 @@@
  			"error: failed to power down DSP during suspend %d\n",
  			ret);
  
++<<<<<<< HEAD
++=======
+ 	/* Do not reset FW state if DSP is in D0I3 */
+ 	if (sdev->d0_substate == SOF_DSP_D0I3)
+ 		return ret;
+ 
+ 	/* reset FW state */
+ 	sdev->fw_state = SOF_FW_BOOT_NOT_STARTED;
+ 
++>>>>>>> fb9a81192d44 (ASoC: SOF: pm: Unify suspend/resume routines)
  	return ret;
  }
  
* Unmerged path sound/soc/sof/pm.c
