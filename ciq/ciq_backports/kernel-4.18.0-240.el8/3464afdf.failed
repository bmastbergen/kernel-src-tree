libbpf: Fix readelf output parsing on powerpc with recent binutils

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Aurelien Jarno <aurelien@aurel32.net>
commit 3464afdf11f9a1e031e7858a05351ceca1792fea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3464afdf.failed

On powerpc with recent versions of binutils, readelf outputs an extra
field when dumping the symbols of an object file. For example:

    35: 0000000000000838    96 FUNC    LOCAL  DEFAULT [<localentry>: 8]     1 btf_is_struct

The extra "[<localentry>: 8]" prevents the GLOBAL_SYM_COUNT variable to
be computed correctly and causes the check_abi target to fail.

Fix that by looking for the symbol name in the last field instead of the
8th one. This way it should also cope with future extra fields.

	Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Tested-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/bpf/20191201195728.4161537-1-aurelien@aurel32.net
(cherry picked from commit 3464afdf11f9a1e031e7858a05351ceca1792fea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/Makefile
diff --cc tools/lib/bpf/Makefile
index e6fcbcad3199,3d3d024f7b94..000000000000
--- a/tools/lib/bpf/Makefile
+++ b/tools/lib/bpf/Makefile
@@@ -137,8 -143,12 +137,17 @@@ LIB_TARGET	:= $(addprefix $(OUTPUT),$(L
  LIB_FILE	:= $(addprefix $(OUTPUT),$(LIB_FILE))
  PC_FILE		:= $(addprefix $(OUTPUT),$(PC_FILE))
  
++<<<<<<< HEAD
 +GLOBAL_SYM_COUNT = $(shell readelf -s --wide $(BPF_IN) | \
 +			   awk '/GLOBAL/ && /DEFAULT/ && !/UND/ {s++} END{print s}')
++=======
+ TAGS_PROG := $(if $(shell which etags 2>/dev/null),etags,ctags)
+ 
+ GLOBAL_SYM_COUNT = $(shell readelf -s --wide $(BPF_IN_SHARED) | \
+ 			   cut -d "@" -f1 | sed 's/_v[0-9]_[0-9]_[0-9].*//' | \
+ 			   awk '/GLOBAL/ && /DEFAULT/ && !/UND/ {print $$NF}' | \
+ 			   sort -u | wc -l)
++>>>>>>> 3464afdf11f9 (libbpf: Fix readelf output parsing on powerpc with recent binutils)
  VERSIONED_SYM_COUNT = $(shell readelf -s --wide $(OUTPUT)libbpf.so | \
  			      grep -Eo '[^ ]+@LIBBPF_' | cut -d@ -f1 | sort -u | wc -l)
  
@@@ -201,8 -214,9 +210,14 @@@ check_abi: $(OUTPUT)libbpf.s
  		     "versioned symbols in $^ ($(VERSIONED_SYM_COUNT))." \
  		     "Please make sure all LIBBPF_API symbols are"	 \
  		     "versioned in $(VERSION_SCRIPT)." >&2;		 \
++<<<<<<< HEAD
 +		readelf -s --wide $(OUTPUT)libbpf-in.o |		 \
 +		    awk '/GLOBAL/ && /DEFAULT/ && !/UND/ {print $$8}'|   \
++=======
+ 		readelf -s --wide $(BPF_IN_SHARED) |			 \
+ 		    cut -d "@" -f1 | sed 's/_v[0-9]_[0-9]_[0-9].*//' |	 \
+ 		    awk '/GLOBAL/ && /DEFAULT/ && !/UND/ {print $$NF}'|  \
++>>>>>>> 3464afdf11f9 (libbpf: Fix readelf output parsing on powerpc with recent binutils)
  		    sort -u > $(OUTPUT)libbpf_global_syms.tmp;		 \
  		readelf -s --wide $(OUTPUT)libbpf.so |			 \
  		    grep -Eo '[^ ]+@LIBBPF_' | cut -d@ -f1 |		 \
* Unmerged path tools/lib/bpf/Makefile
