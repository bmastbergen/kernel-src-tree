KVM: selftests: Add util to delete memory region

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 8c996e4dae177e6921fe61d20b1f30fc06a3d275
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8c996e4d.failed

Add a utility to delete a memory region, it will be used by x86's
set_memory_region_test.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Reviewed-by: Wainer dos Santos Moschetta <wainersm@redhat.com>
	Reviewed-by: Andrew Jones <drjones@redhat.com>
Message-Id: <20200410231707.7128-4-sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 8c996e4dae177e6921fe61d20b1f30fc06a3d275)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/kvm_util.c
diff --cc tools/testing/selftests/kvm/lib/kvm_util.c
index f90b20990ff5,ab5b7ea60f4b..000000000000
--- a/tools/testing/selftests/kvm/lib/kvm_util.c
+++ b/tools/testing/selftests/kvm/lib/kvm_util.c
@@@ -443,30 -457,14 +462,39 @@@ static void __vm_mem_region_delete(stru
   */
  void kvm_vm_free(struct kvm_vm *vmp)
  {
++<<<<<<< HEAD
 +	int ret;
++=======
+ 	struct userspace_mem_region *region, *tmp;
++>>>>>>> 8c996e4dae17 (KVM: selftests: Add util to delete memory region)
  
  	if (vmp == NULL)
  		return;
  
  	/* Free userspace_mem_regions. */
++<<<<<<< HEAD
 +	while (vmp->userspace_mem_region_head) {
 +		struct userspace_mem_region *region
 +			= vmp->userspace_mem_region_head;
 +
 +		region->region.memory_size = 0;
 +		ret = ioctl(vmp->fd, KVM_SET_USER_MEMORY_REGION,
 +			&region->region);
 +		TEST_ASSERT(ret == 0, "KVM_SET_USER_MEMORY_REGION IOCTL failed, "
 +			"rc: %i errno: %i", ret, errno);
 +
 +		vmp->userspace_mem_region_head = region->next;
 +		sparsebit_free(&region->unused_phy_pages);
 +		ret = munmap(region->mmap_start, region->mmap_size);
 +		TEST_ASSERT(ret == 0, "munmap failed, rc: %i errno: %i",
 +			    ret, errno);
 +
 +		free(region);
 +	}
++=======
+ 	list_for_each_entry_safe(region, tmp, &vmp->userspace_mem_regions, list)
+ 		__vm_mem_region_delete(vmp, region);
++>>>>>>> 8c996e4dae17 (KVM: selftests: Add util to delete memory region)
  
  	/* Free sparsebit arrays. */
  	sparsebit_free(&vmp->vpages_valid);
diff --git a/tools/testing/selftests/kvm/include/kvm_util.h b/tools/testing/selftests/kvm/include/kvm_util.h
index 34d395c8a16f..079570a2ee32 100644
--- a/tools/testing/selftests/kvm/include/kvm_util.h
+++ b/tools/testing/selftests/kvm/include/kvm_util.h
@@ -103,6 +103,7 @@ int _vcpu_ioctl(struct kvm_vm *vm, uint32_t vcpuid, unsigned long ioctl,
 void vm_ioctl(struct kvm_vm *vm, unsigned long ioctl, void *arg);
 void vm_mem_region_set_flags(struct kvm_vm *vm, uint32_t slot, uint32_t flags);
 void vm_mem_region_move(struct kvm_vm *vm, uint32_t slot, uint64_t new_gpa);
+void vm_mem_region_delete(struct kvm_vm *vm, uint32_t slot);
 void vm_vcpu_add(struct kvm_vm *vm, uint32_t vcpuid);
 vm_vaddr_t vm_vaddr_alloc(struct kvm_vm *vm, size_t sz, vm_vaddr_t vaddr_min,
 			  uint32_t data_memslot, uint32_t pgd_memslot);
* Unmerged path tools/testing/selftests/kvm/lib/kvm_util.c
