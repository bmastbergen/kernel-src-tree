ath: fix various spelling mistakes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Colin Ian King <colin.king@canonical.com>
commit 80ce8ca7a6473730a6847046651aab81cdb96898
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/80ce8ca7.failed

There are a bunch of spelling mistakes in two ath drivers, fix
these.

	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit 80ce8ca7a6473730a6847046651aab81cdb96898)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/ath/wil6210/wmi.c
diff --cc drivers/net/wireless/ath/wil6210/wmi.c
index 5d991243cdb5,daf16bc01bb3..000000000000
--- a/drivers/net/wireless/ath/wil6210/wmi.c
+++ b/drivers/net/wireless/ath/wil6210/wmi.c
@@@ -2004,8 -2685,46 +2004,51 @@@ int wmi_get_temperature(struct wil6210_
  	return 0;
  }
  
++<<<<<<< HEAD
 +int wmi_disconnect_sta(struct wil6210_vif *vif, const u8 *mac,
 +		       u16 reason, bool full_disconnect, bool del_sta)
++=======
+ int wmi_get_all_temperatures(struct wil6210_priv *wil,
+ 			     struct wmi_temp_sense_all_done_event
+ 			     *sense_all_evt)
+ {
+ 	struct wil6210_vif *vif = ndev_to_vif(wil->main_ndev);
+ 	int rc;
+ 	struct wmi_temp_sense_all_cmd cmd = {
+ 		.measure_baseband_en = true,
+ 		.measure_rf_en = true,
+ 		.measure_mode = TEMPERATURE_MEASURE_NOW,
+ 	};
+ 	struct {
+ 		struct wmi_cmd_hdr wmi;
+ 		struct wmi_temp_sense_all_done_event evt;
+ 	} __packed reply;
+ 
+ 	if (!sense_all_evt) {
+ 		wil_err(wil, "Invalid sense_all_evt value\n");
+ 		return -EINVAL;
+ 	}
+ 
+ 	memset(&reply, 0, sizeof(reply));
+ 	reply.evt.status = WMI_FW_STATUS_FAILURE;
+ 	rc = wmi_call(wil, WMI_TEMP_SENSE_ALL_CMDID, vif->mid, &cmd,
+ 		      sizeof(cmd), WMI_TEMP_SENSE_ALL_DONE_EVENTID,
+ 		      &reply, sizeof(reply), WIL_WMI_CALL_GENERAL_TO_MS);
+ 	if (rc)
+ 		return rc;
+ 
+ 	if (reply.evt.status == WMI_FW_STATUS_FAILURE) {
+ 		wil_err(wil, "Failed getting TEMP_SENSE_ALL\n");
+ 		return -EINVAL;
+ 	}
+ 
+ 	memcpy(sense_all_evt, &reply.evt, sizeof(reply.evt));
+ 	return 0;
+ }
+ 
+ int wmi_disconnect_sta(struct wil6210_vif *vif, const u8 *mac, u16 reason,
+ 		       bool del_sta)
++>>>>>>> 80ce8ca7a647 (ath: fix various spelling mistakes)
  {
  	struct wil6210_priv *wil = vif_to_wil(vif);
  	int rc;
diff --git a/drivers/net/wireless/ath/ath10k/core.c b/drivers/net/wireless/ath/ath10k/core.c
index 3d91a4025cfc..36c62d66c19e 100644
--- a/drivers/net/wireless/ath/ath10k/core.c
+++ b/drivers/net/wireless/ath/ath10k/core.c
@@ -2810,7 +2810,7 @@ int ath10k_core_start(struct ath10k *ar, enum ath10k_firmware_mode mode,
 
 	status = ath10k_hif_set_target_log_mode(ar, fw_diag_log);
 	if (status && status != -EOPNOTSUPP) {
-		ath10k_warn(ar, "set traget log mode faileds: %d\n", status);
+		ath10k_warn(ar, "set target log mode failed: %d\n", status);
 		goto err_hif_stop;
 	}
 
diff --git a/drivers/net/wireless/ath/ath10k/qmi.c b/drivers/net/wireless/ath/ath10k/qmi.c
index 84fca2886c09..65d54c6c51ed 100644
--- a/drivers/net/wireless/ath/ath10k/qmi.c
+++ b/drivers/net/wireless/ath/ath10k/qmi.c
@@ -664,7 +664,7 @@ int ath10k_qmi_set_fw_log_mode(struct ath10k *ar, u8 fw_log_mode)
 			       wlfw_ini_req_msg_v01_ei, &req);
 	if (ret < 0) {
 		qmi_txn_cancel(&txn);
-		ath10k_err(ar, "fail to send fw log reqest: %d\n", ret);
+		ath10k_err(ar, "failed to send fw log request: %d\n", ret);
 		goto out;
 	}
 
@@ -673,7 +673,7 @@ int ath10k_qmi_set_fw_log_mode(struct ath10k *ar, u8 fw_log_mode)
 		goto out;
 
 	if (resp.resp.result != QMI_RESULT_SUCCESS_V01) {
-		ath10k_err(ar, "fw log request rejectedr: %d\n",
+		ath10k_err(ar, "fw log request rejected: %d\n",
 			   resp.resp.error);
 		ret = -EINVAL;
 		goto out;
* Unmerged path drivers/net/wireless/ath/wil6210/wmi.c
