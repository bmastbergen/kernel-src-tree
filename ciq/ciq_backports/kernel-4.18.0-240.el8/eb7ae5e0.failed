bdi: move bdi_dev_name out of line

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit eb7ae5e06bb6e6ac6bb86872d27c43ebab92f6b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/eb7ae5e0.failed

bdi_dev_name is not a fast path function, move it out of line.  This
prepares for using it from modular callers without having to export
an implementation detail like bdi_unknown_name.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit eb7ae5e06bb6e6ac6bb86872d27c43ebab92f6b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/backing-dev.h
#	mm/backing-dev.c
diff --cc include/linux/backing-dev.h
index 02650b1253a2,c9ad5c3b7b4b..000000000000
--- a/include/linux/backing-dev.h
+++ b/include/linux/backing-dev.h
@@@ -501,4 -505,6 +501,9 @@@ static inline int bdi_rw_congested(stru
  				  (1 << WB_async_congested));
  }
  
++<<<<<<< HEAD
++=======
+ const char *bdi_dev_name(struct backing_dev_info *bdi);
+ 
++>>>>>>> eb7ae5e06bb6 (bdi: move bdi_dev_name out of line)
  #endif	/* _LINUX_BACKING_DEV_H */
diff --cc mm/backing-dev.c
index 00277c8855c6,c2c44c89ee5d..000000000000
--- a/mm/backing-dev.c
+++ b/mm/backing-dev.c
@@@ -19,12 -21,15 +19,16 @@@ struct backing_dev_info noop_backing_de
  EXPORT_SYMBOL_GPL(noop_backing_dev_info);
  
  static struct class *bdi_class;
++<<<<<<< HEAD
++=======
+ static const char *bdi_unknown_name = "(unknown)";
++>>>>>>> eb7ae5e06bb6 (bdi: move bdi_dev_name out of line)
  
  /*
 - * bdi_lock protects bdi_tree and updates to bdi_list. bdi_list has RCU
 - * reader side locking.
 + * bdi_lock protects updates to bdi_list. bdi_list has RCU reader side
 + * locking.
   */
  DEFINE_SPINLOCK(bdi_lock);
 -static u64 bdi_id_cursor;
 -static struct rb_root bdi_tree = RB_ROOT;
  LIST_HEAD(bdi_list);
  
  /* bdi_wq serves all asynchronous writeback tasks */
* Unmerged path include/linux/backing-dev.h
* Unmerged path mm/backing-dev.c
