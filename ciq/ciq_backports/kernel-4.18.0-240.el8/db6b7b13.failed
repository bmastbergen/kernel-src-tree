perf tools: Rename perf_evlist__munmap() to evlist__munmap()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit db6b7b138506ad537edd12d98f674722a643c150
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/db6b7b13.failed

Rename perf_evlist__munmap() to evlist__munmap(), so we don't have a
name clash when we add perf_evlist__munmap() in libperf.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-6-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit db6b7b138506ad537edd12d98f674722a643c150)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
#	tools/perf/util/evlist.h
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,888472c7bf9c..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -143,12 -149,12 +143,21 @@@ void perf_evlist__delete(struct perf_ev
  	if (evlist == NULL)
  		return;
  
++<<<<<<< HEAD
 +	perf_evlist__munmap(evlist);
 +	perf_evlist__close(evlist);
 +	cpu_map__put(evlist->cpus);
 +	thread_map__put(evlist->threads);
 +	evlist->cpus = NULL;
 +	evlist->threads = NULL;
++=======
+ 	evlist__munmap(evlist);
+ 	evlist__close(evlist);
+ 	perf_cpu_map__put(evlist->core.cpus);
+ 	perf_thread_map__put(evlist->core.threads);
+ 	evlist->core.cpus = NULL;
+ 	evlist->core.threads = NULL;
++>>>>>>> db6b7b138506 (perf tools: Rename perf_evlist__munmap() to evlist__munmap())
  	perf_evlist__purge(evlist);
  	perf_evlist__exit(evlist);
  	free(evlist);
@@@ -696,7 -673,7 +705,11 @@@ static int perf_evlist__resume(struct p
  	return perf_evlist__set_paused(evlist, false);
  }
  
++<<<<<<< HEAD
 +static void perf_evlist__munmap_nofree(struct perf_evlist *evlist)
++=======
+ static void evlist__munmap_nofree(struct evlist *evlist)
++>>>>>>> db6b7b138506 (perf tools: Rename perf_evlist__munmap() to evlist__munmap())
  {
  	int i;
  
@@@ -709,9 -686,9 +722,13 @@@
  			perf_mmap__munmap(&evlist->overwrite_mmap[i]);
  }
  
++<<<<<<< HEAD
 +void perf_evlist__munmap(struct perf_evlist *evlist)
++=======
+ void evlist__munmap(struct evlist *evlist)
++>>>>>>> db6b7b138506 (perf tools: Rename perf_evlist__munmap() to evlist__munmap())
  {
- 	perf_evlist__munmap_nofree(evlist);
+ 	evlist__munmap_nofree(evlist);
  	zfree(&evlist->mmap);
  	zfree(&evlist->overwrite_mmap);
  }
diff --cc tools/perf/util/evlist.h
index 49354fe24d5f,f07501602353..000000000000
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@@ -179,40 -174,38 +179,45 @@@ int perf_evlist__mmap_ex(struct perf_ev
  			 unsigned int auxtrace_pages,
  			 bool auxtrace_overwrite, int nr_cblocks,
  			 int affinity, int flush, int comp_level);
++<<<<<<< HEAD
 +int perf_evlist__mmap(struct perf_evlist *evlist, unsigned int pages);
 +void perf_evlist__munmap(struct perf_evlist *evlist);
++=======
+ int evlist__mmap(struct evlist *evlist, unsigned int pages);
+ void evlist__munmap(struct evlist *evlist);
++>>>>>>> db6b7b138506 (perf tools: Rename perf_evlist__munmap() to evlist__munmap())
  
 -size_t evlist__mmap_size(unsigned long pages);
 +size_t perf_evlist__mmap_size(unsigned long pages);
  
 -void evlist__disable(struct evlist *evlist);
 -void evlist__enable(struct evlist *evlist);
 -void perf_evlist__toggle_enable(struct evlist *evlist);
 +void perf_evlist__disable(struct perf_evlist *evlist);
 +void perf_evlist__enable(struct perf_evlist *evlist);
 +void perf_evlist__toggle_enable(struct perf_evlist *evlist);
  
 -int perf_evlist__enable_event_idx(struct evlist *evlist,
 -				  struct evsel *evsel, int idx);
 +int perf_evlist__enable_event_idx(struct perf_evlist *evlist,
 +				  struct perf_evsel *evsel, int idx);
  
 -void perf_evlist__set_selected(struct evlist *evlist,
 -			       struct evsel *evsel);
 +void perf_evlist__set_selected(struct perf_evlist *evlist,
 +			       struct perf_evsel *evsel);
  
 -int perf_evlist__create_maps(struct evlist *evlist, struct target *target);
 -int perf_evlist__apply_filters(struct evlist *evlist, struct evsel **err_evsel);
 +void perf_evlist__set_maps(struct perf_evlist *evlist, struct cpu_map *cpus,
 +			   struct thread_map *threads);
 +int perf_evlist__create_maps(struct perf_evlist *evlist, struct target *target);
 +int perf_evlist__apply_filters(struct perf_evlist *evlist, struct perf_evsel **err_evsel);
  
  void __perf_evlist__set_leader(struct list_head *list);
 -void perf_evlist__set_leader(struct evlist *evlist);
 +void perf_evlist__set_leader(struct perf_evlist *evlist);
  
 -u64 perf_evlist__read_format(struct evlist *evlist);
 -u64 __perf_evlist__combined_sample_type(struct evlist *evlist);
 -u64 perf_evlist__combined_sample_type(struct evlist *evlist);
 -u64 perf_evlist__combined_branch_type(struct evlist *evlist);
 -bool perf_evlist__sample_id_all(struct evlist *evlist);
 -u16 perf_evlist__id_hdr_size(struct evlist *evlist);
 +u64 perf_evlist__read_format(struct perf_evlist *evlist);
 +u64 __perf_evlist__combined_sample_type(struct perf_evlist *evlist);
 +u64 perf_evlist__combined_sample_type(struct perf_evlist *evlist);
 +u64 perf_evlist__combined_branch_type(struct perf_evlist *evlist);
 +bool perf_evlist__sample_id_all(struct perf_evlist *evlist);
 +u16 perf_evlist__id_hdr_size(struct perf_evlist *evlist);
  
 -int perf_evlist__parse_sample(struct evlist *evlist, union perf_event *event,
 +int perf_evlist__parse_sample(struct perf_evlist *evlist, union perf_event *event,
  			      struct perf_sample *sample);
  
 -int perf_evlist__parse_sample_timestamp(struct evlist *evlist,
 +int perf_evlist__parse_sample_timestamp(struct perf_evlist *evlist,
  					union perf_event *event,
  					u64 *timestamp);
  
diff --git a/tools/perf/tests/backward-ring-buffer.c b/tools/perf/tests/backward-ring-buffer.c
index 1a9c3becf5ff..447c7ebc8c6b 100644
--- a/tools/perf/tests/backward-ring-buffer.c
+++ b/tools/perf/tests/backward-ring-buffer.c
@@ -73,7 +73,7 @@ static int do_test(struct perf_evlist *evlist, int mmap_pages,
 	perf_evlist__disable(evlist);
 
 	err = count_samples(evlist, sample_count, comm_count);
-	perf_evlist__munmap(evlist);
+	evlist__munmap(evlist);
 	return err;
 }
 
* Unmerged path tools/perf/util/evlist.c
* Unmerged path tools/perf/util/evlist.h
