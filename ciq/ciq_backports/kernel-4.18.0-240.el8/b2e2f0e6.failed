bpf: Make array_map_mmap static

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author YueHaibing <yuehaibing@huawei.com>
commit b2e2f0e6a6f910c906c083584b6e0afd12266f22
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b2e2f0e6.failed

Fix sparse warning:

kernel/bpf/arraymap.c:481:5: warning:
 symbol 'array_map_mmap' was not declared. Should it be static?

	Reported-by: Hulk Robot <hulkci@huawei.com>
	Signed-off-by: YueHaibing <yuehaibing@huawei.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Andrii Nakryiko <andriin@fb.com>
Link: https://lore.kernel.org/bpf/20191119142113.15388-1-yuehaibing@huawei.com
(cherry picked from commit b2e2f0e6a6f910c906c083584b6e0afd12266f22)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/arraymap.c
diff --cc kernel/bpf/arraymap.c
index 0349cbf23cdb,633c8c701ff6..000000000000
--- a/kernel/bpf/arraymap.c
+++ b/kernel/bpf/arraymap.c
@@@ -452,6 -478,17 +452,20 @@@ static int array_map_check_btf(const st
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static int array_map_mmap(struct bpf_map *map, struct vm_area_struct *vma)
+ {
+ 	struct bpf_array *array = container_of(map, struct bpf_array, map);
+ 	pgoff_t pgoff = PAGE_ALIGN(sizeof(*array)) >> PAGE_SHIFT;
+ 
+ 	if (!(map->map_flags & BPF_F_MMAPABLE))
+ 		return -EINVAL;
+ 
+ 	return remap_vmalloc_range(vma, array_map_vmalloc_addr(array), pgoff);
+ }
+ 
++>>>>>>> b2e2f0e6a6f9 (bpf: Make array_map_mmap static)
  const struct bpf_map_ops array_map_ops = {
  	.map_alloc_check = array_map_alloc_check,
  	.map_alloc = array_map_alloc,
* Unmerged path kernel/bpf/arraymap.c
