perf evsel: Rename perf_evsel__apply_filter() to evsel__apply_filter()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 24e376b24582648d363df4e0a6bcc2ffcecd211e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/24e376b2.failed

Rename perf_evsel__apply_filter() to evsel__apply_filter(), so we don't
have a name clash when we add perf_evsel__apply_filter() in libperf.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-18-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 24e376b24582648d363df4e0a6bcc2ffcecd211e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
#	tools/perf/util/evsel.h
diff --cc tools/perf/util/evsel.c
index e99257f738ba,5aeb7260c8e1..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1188,7 -1187,7 +1188,11 @@@ static int perf_evsel__run_ioctl(struc
  	return 0;
  }
  
++<<<<<<< HEAD
 +int perf_evsel__apply_filter(struct perf_evsel *evsel, const char *filter)
++=======
+ int evsel__apply_filter(struct evsel *evsel, const char *filter)
++>>>>>>> 24e376b24582 (perf evsel: Rename perf_evsel__apply_filter() to evsel__apply_filter())
  {
  	return perf_evsel__run_ioctl(evsel,
  				     PERF_EVENT_IOC_SET_FILTER,
diff --cc tools/perf/util/evsel.h
index b27935a6d36c,35f7e7ff3c5e..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -288,24 -287,24 +288,30 @@@ void __perf_evsel__reset_sample_bit(str
  #define perf_evsel__reset_sample_bit(evsel, bit) \
  	__perf_evsel__reset_sample_bit(evsel, PERF_SAMPLE_##bit)
  
 -void perf_evsel__set_sample_id(struct evsel *evsel,
 +void perf_evsel__set_sample_id(struct perf_evsel *evsel,
  			       bool use_sample_identifier);
  
 -int perf_evsel__set_filter(struct evsel *evsel, const char *filter);
 -int perf_evsel__append_tp_filter(struct evsel *evsel, const char *filter);
 -int perf_evsel__append_addr_filter(struct evsel *evsel,
 +int perf_evsel__set_filter(struct perf_evsel *evsel, const char *filter);
 +int perf_evsel__append_tp_filter(struct perf_evsel *evsel, const char *filter);
 +int perf_evsel__append_addr_filter(struct perf_evsel *evsel,
  				   const char *filter);
++<<<<<<< HEAD
 +int perf_evsel__apply_filter(struct perf_evsel *evsel, const char *filter);
 +int perf_evsel__enable(struct perf_evsel *evsel);
 +int perf_evsel__disable(struct perf_evsel *evsel);
++=======
+ int evsel__apply_filter(struct evsel *evsel, const char *filter);
+ int evsel__enable(struct evsel *evsel);
+ int evsel__disable(struct evsel *evsel);
++>>>>>>> 24e376b24582 (perf evsel: Rename perf_evsel__apply_filter() to evsel__apply_filter())
  
 -int perf_evsel__open_per_cpu(struct evsel *evsel,
 -			     struct perf_cpu_map *cpus);
 -int perf_evsel__open_per_thread(struct evsel *evsel,
 -				struct perf_thread_map *threads);
 -int evsel__open(struct evsel *evsel, struct perf_cpu_map *cpus,
 -		struct perf_thread_map *threads);
 -void perf_evsel__close(struct evsel *evsel);
 +int perf_evsel__open_per_cpu(struct perf_evsel *evsel,
 +			     struct cpu_map *cpus);
 +int perf_evsel__open_per_thread(struct perf_evsel *evsel,
 +				struct thread_map *threads);
 +int perf_evsel__open(struct perf_evsel *evsel, struct cpu_map *cpus,
 +		     struct thread_map *threads);
 +void perf_evsel__close(struct perf_evsel *evsel);
  
  struct perf_sample;
  
diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index 4739b7914374..4aa615983455 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -1159,7 +1159,7 @@ int perf_evlist__apply_filters(struct perf_evlist *evlist, struct perf_evsel **e
 		 * filters only work for tracepoint event, which doesn't have cpu limit.
 		 * So evlist and evsel should always be same.
 		 */
-		err = perf_evsel__apply_filter(evsel, evsel->filter);
+		err = evsel__apply_filter(evsel, evsel->filter);
 		if (err) {
 			*err_evsel = evsel;
 			break;
* Unmerged path tools/perf/util/evsel.c
* Unmerged path tools/perf/util/evsel.h
