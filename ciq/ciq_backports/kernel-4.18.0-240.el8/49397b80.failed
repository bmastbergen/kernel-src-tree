net/mlx5e: Fix actions_match_supported() return

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 49397b801261160fb5f5d3f28536c792e72ecbb3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/49397b80.failed

The actions_match_supported() function returns a bool, true for success
and false for failure.  This error path is returning a negative which
is cast to true but it should return false.

Fixes: 4c3844d9e97e ("net/mlx5e: CT: Introduce connection tracking")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 49397b801261160fb5f5d3f28536c792e72ecbb3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 2e22a8de6513,c7ed468db3e0..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -2662,27 -3044,23 +2662,40 @@@ static bool actions_match_supported(str
  				    struct mlx5e_tc_flow *flow,
  				    struct netlink_ext_ack *extack)
  {
 -	bool ct_flow;
 +	struct net_device *filter_dev = parse_attr->filter_dev;
 +	bool drop_action, decap_action, pop_action;
  	u32 actions;
  
 -	ct_flow = flow_flag_test(flow, CT);
 -	if (mlx5e_is_eswitch_flow(flow)) {
 +	if (mlx5e_is_eswitch_flow(flow))
  		actions = flow->esw_attr->action;
++<<<<<<< HEAD
 +	else
++=======
+ 
+ 		if (flow->esw_attr->split_count && ct_flow) {
+ 			/* All registers used by ct are cleared when using
+ 			 * split rules.
+ 			 */
+ 			NL_SET_ERR_MSG_MOD(extack,
+ 					   "Can't offload mirroring with action ct");
+ 			return false;
+ 		}
+ 	} else {
++>>>>>>> 49397b801261 (net/mlx5e: Fix actions_match_supported() return)
  		actions = flow->nic_attr->action;
 +
 +	drop_action = actions & MLX5_FLOW_CONTEXT_ACTION_DROP;
 +	decap_action = actions & MLX5_FLOW_CONTEXT_ACTION_DECAP;
 +	pop_action = actions & MLX5_FLOW_CONTEXT_ACTION_VLAN_POP;
 +
 +	if (flow_flag_test(flow, EGRESS) && !drop_action) {
 +		/* If no drop, we must decap (vxlan) or pop (vlan) */
 +		if (mlx5e_get_tc_tun(filter_dev) && !decap_action)
 +			return false;
 +		else if (is_vlan_dev(filter_dev) && !pop_action)
 +			return false;
 +		else
 +			return false; /* Sanity */
  	}
  
  	if (actions & MLX5_FLOW_CONTEXT_ACTION_MOD_HDR)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
