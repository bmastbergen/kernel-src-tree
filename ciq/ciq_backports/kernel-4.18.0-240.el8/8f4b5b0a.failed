media: cec-adap: return from cec_s_conn_info() if adap is invalid

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Hans Verkuil <hverkuil-cisco@xs4all.nl>
commit 8f4b5b0af7e451a4c6698ad3441dde8d1286c80d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8f4b5b0a.failed

Check if cec_s_conn_info is called with a valid cec adapter,
do nothing if it is invalid.

This makes it possible to call this function even if CEC support is
disabled in the kernel config.

	Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
	Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
(cherry picked from commit 8f4b5b0af7e451a4c6698ad3441dde8d1286c80d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/cec/cec-adap.c
diff --cc drivers/media/cec/cec-adap.c
index ac3683a7b2ab,5ef7daeb8cbd..000000000000
--- a/drivers/media/cec/cec-adap.c
+++ b/drivers/media/cec/cec-adap.c
@@@ -1598,6 -1611,25 +1598,28 @@@ void cec_s_phys_addr_from_edid(struct c
  }
  EXPORT_SYMBOL_GPL(cec_s_phys_addr_from_edid);
  
++<<<<<<< HEAD
++=======
+ void cec_s_conn_info(struct cec_adapter *adap,
+ 		     const struct cec_connector_info *conn_info)
+ {
+ 	if (IS_ERR_OR_NULL(adap))
+ 		return;
+ 
+ 	if (!(adap->capabilities & CEC_CAP_CONNECTOR_INFO))
+ 		return;
+ 
+ 	mutex_lock(&adap->lock);
+ 	if (conn_info)
+ 		adap->conn_info = *conn_info;
+ 	else
+ 		memset(&adap->conn_info, 0, sizeof(adap->conn_info));
+ 	cec_post_state_event(adap);
+ 	mutex_unlock(&adap->lock);
+ }
+ EXPORT_SYMBOL_GPL(cec_s_conn_info);
+ 
++>>>>>>> 8f4b5b0af7e4 (media: cec-adap: return from cec_s_conn_info() if adap is invalid)
  /*
   * Called from either the ioctl or a driver to set the logical addresses.
   *
* Unmerged path drivers/media/cec/cec-adap.c
