netfilter: flowtable: remove dying bit, use teardown bit instead

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 445db8d09659eb27bcd5920cb91d91686f0197d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/445db8d0.failed

The dying bit removes the conntrack entry if the netdev that owns this
flow is going down. Instead, use the teardown mechanism to push back the
flow to conntrack to let the classic software path decide what to do
with it.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 445db8d09659eb27bcd5920cb91d91686f0197d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_flow_table_core.c
diff --cc net/netfilter/nf_flow_table_core.c
index 4ccaaabe1a6c,a9ed93a9e007..000000000000
--- a/net/netfilter/nf_flow_table_core.c
+++ b/net/netfilter/nf_flow_table_core.c
@@@ -349,8 -347,18 +347,23 @@@ static void nf_flow_offload_gc_step(str
  	struct nf_flowtable *flow_table = data;
  
  	if (nf_flow_has_expired(flow) || nf_ct_is_dying(flow->ct) ||
++<<<<<<< HEAD
 +	    (flow->flags & (FLOW_OFFLOAD_DYING | FLOW_OFFLOAD_TEARDOWN)))
 +		flow_offload_del(flow_table, flow);
++=======
+ 	    (flow->flags & FLOW_OFFLOAD_TEARDOWN)) {
+ 		if (flow->flags & FLOW_OFFLOAD_HW) {
+ 			if (!(flow->flags & FLOW_OFFLOAD_HW_DYING))
+ 				nf_flow_offload_del(flow_table, flow);
+ 			else if (flow->flags & FLOW_OFFLOAD_HW_DEAD)
+ 				flow_offload_del(flow_table, flow);
+ 		} else {
+ 			flow_offload_del(flow_table, flow);
+ 		}
+ 	} else if (flow->flags & FLOW_OFFLOAD_HW) {
+ 		nf_flow_offload_stats(flow_table, flow);
+ 	}
++>>>>>>> 445db8d09659 (netfilter: flowtable: remove dying bit, use teardown bit instead)
  }
  
  static void nf_flow_offload_work_gc(struct work_struct *work)
diff --git a/include/net/netfilter/nf_flow_table.h b/include/net/netfilter/nf_flow_table.h
index ebceddb778ea..b1764382c04a 100644
--- a/include/net/netfilter/nf_flow_table.h
+++ b/include/net/netfilter/nf_flow_table.h
@@ -66,7 +66,6 @@ struct flow_offload_tuple_rhash {
 
 #define FLOW_OFFLOAD_SNAT	0x1
 #define FLOW_OFFLOAD_DNAT	0x2
-#define FLOW_OFFLOAD_DYING	0x4
 #define FLOW_OFFLOAD_TEARDOWN	0x8
 
 enum flow_offload_type {
@@ -106,10 +105,6 @@ int nf_flow_table_init(struct nf_flowtable *flow_table);
 void nf_flow_table_free(struct nf_flowtable *flow_table);
 
 void flow_offload_teardown(struct flow_offload *flow);
-static inline void flow_offload_dead(struct flow_offload *flow)
-{
-	flow->flags |= FLOW_OFFLOAD_DYING;
-}
 
 int nf_flow_snat_port(const struct flow_offload *flow,
 		      struct sk_buff *skb, unsigned int thoff,
* Unmerged path net/netfilter/nf_flow_table_core.c
