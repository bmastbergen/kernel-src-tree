mlxsw: Add NON_ROUTABLE trap

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Amit Cohen <amitc@mellanox.com>
commit 196442ec5f13751ed0c66d5c4bc9b58288dea430
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/196442ec.failed

Add a trap for packets that the device decided to drop because they are
not supposed to be routed. For example, IGMP queries can be flooded by
the device in layer 2 and reach the router. Such packets should not be
routed and instead dropped.

	Signed-off-by: Amit Cohen <amitc@mellanox.com>
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 196442ec5f13751ed0c66d5c4bc9b58288dea430)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
index e0d7c49ffae0,8706821f5851..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
@@@ -58,6 -78,9 +58,12 @@@ static struct devlink_trap mlxsw_sp_tra
  	MLXSW_SP_TRAP_EXCEPTION(UNRESOLVED_NEIGH, L3_DROPS),
  	MLXSW_SP_TRAP_EXCEPTION(IPV4_LPM_UNICAST_MISS, L3_DROPS),
  	MLXSW_SP_TRAP_EXCEPTION(IPV6_LPM_UNICAST_MISS, L3_DROPS),
++<<<<<<< HEAD
++=======
+ 	MLXSW_SP_TRAP_DRIVER_DROP(IRIF_DISABLED, L3_DROPS),
+ 	MLXSW_SP_TRAP_DRIVER_DROP(ERIF_DISABLED, L3_DROPS),
+ 	MLXSW_SP_TRAP_DROP(NON_ROUTABLE, L3_DROPS),
++>>>>>>> 196442ec5f13 (mlxsw: Add NON_ROUTABLE trap)
  };
  
  static struct mlxsw_listener mlxsw_sp_listeners_arr[] = {
@@@ -90,6 -113,9 +96,12 @@@
  			       TRAP_EXCEPTION_TO_CPU),
  	MLXSW_SP_RXL_EXCEPTION(DISCARD_ROUTER_LPM6, ROUTER_EXP,
  			       TRAP_EXCEPTION_TO_CPU),
++<<<<<<< HEAD
++=======
+ 	MLXSW_SP_RXL_DISCARD(ROUTER_IRIF_EN, L3_DISCARDS),
+ 	MLXSW_SP_RXL_DISCARD(ROUTER_ERIF_EN, L3_DISCARDS),
+ 	MLXSW_SP_RXL_DISCARD(NON_ROUTABLE, L3_DISCARDS),
++>>>>>>> 196442ec5f13 (mlxsw: Add NON_ROUTABLE trap)
  };
  
  /* Mapping between hardware trap and devlink trap. Multiple hardware traps can
@@@ -123,6 -149,9 +135,12 @@@ static u16 mlxsw_sp_listener_devlink_ma
  	DEVLINK_TRAP_GENERIC_ID_UNRESOLVED_NEIGH,
  	DEVLINK_TRAP_GENERIC_ID_IPV4_LPM_UNICAST_MISS,
  	DEVLINK_TRAP_GENERIC_ID_IPV6_LPM_UNICAST_MISS,
++<<<<<<< HEAD
++=======
+ 	DEVLINK_MLXSW_TRAP_ID_IRIF_DISABLED,
+ 	DEVLINK_MLXSW_TRAP_ID_ERIF_DISABLED,
+ 	DEVLINK_TRAP_GENERIC_ID_NON_ROUTABLE,
++>>>>>>> 196442ec5f13 (mlxsw: Add NON_ROUTABLE trap)
  };
  
  static int mlxsw_sp_rx_listener(struct mlxsw_sp *mlxsw_sp, struct sk_buff *skb,
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.c
diff --git a/drivers/net/ethernet/mellanox/mlxsw/trap.h b/drivers/net/ethernet/mellanox/mlxsw/trap.h
index 3d2331be05d8..a98710f9675d 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/trap.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/trap.h
@@ -67,6 +67,7 @@ enum {
 	MLXSW_TRAP_ID_NVE_ENCAP_ARP = 0xBD,
 	MLXSW_TRAP_ID_ROUTER_ALERT_IPV4 = 0xD6,
 	MLXSW_TRAP_ID_ROUTER_ALERT_IPV6 = 0xD7,
+	MLXSW_TRAP_ID_DISCARD_NON_ROUTABLE = 0x11A,
 	MLXSW_TRAP_ID_DISCARD_ROUTER2 = 0x130,
 	MLXSW_TRAP_ID_DISCARD_ROUTER3 = 0x131,
 	MLXSW_TRAP_ID_DISCARD_ING_PACKET_SMAC_MC = 0x140,
