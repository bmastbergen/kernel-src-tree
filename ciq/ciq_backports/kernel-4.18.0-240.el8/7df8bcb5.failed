net/smc: fix link lookup for new rdma connections

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Karsten Graul <kgraul@linux.ibm.com>
commit 7df8bcb56053173e5e5c0e566391fa601e3e4778
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7df8bcb5.failed

For new rdma connections the SMC server assigns the link and sends the
link data in the clc accept message. To match the correct link use not
only the qp_num but also the gid and the mac of the links. If there are
equal qp_nums for different links the wrong link would be chosen.

	Reviewed-by: Ursula Braun <ubraun@linux.ibm.com>
Fixes: 0fb0b02bd6fd ("net/smc: adapt SMC client code to use the LLC flow")
	Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7df8bcb56053173e5e5c0e566391fa601e3e4778)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/smc/af_smc.c
diff --cc net/smc/af_smc.c
index 61adbee56cf2,f80591567a3d..000000000000
--- a/net/smc/af_smc.c
+++ b/net/smc/af_smc.c
@@@ -630,6 -624,27 +630,30 @@@ static int smc_connect_rdma(struct smc_
  
  	smc_conn_save_peer_info(smc, aclc);
  
++<<<<<<< HEAD
++=======
+ 	if (ini->cln_first_contact == SMC_FIRST_CONTACT) {
+ 		link = smc->conn.lnk;
+ 	} else {
+ 		/* set link that was assigned by server */
+ 		link = NULL;
+ 		for (i = 0; i < SMC_LINKS_PER_LGR_MAX; i++) {
+ 			struct smc_link *l = &smc->conn.lgr->lnk[i];
+ 
+ 			if (l->peer_qpn == ntoh24(aclc->qpn) &&
+ 			    !memcmp(l->peer_gid, &aclc->lcl.gid, SMC_GID_SIZE) &&
+ 			    !memcmp(l->peer_mac, &aclc->lcl.mac, sizeof(l->peer_mac))) {
+ 				link = l;
+ 				break;
+ 			}
+ 		}
+ 		if (!link)
+ 			return smc_connect_abort(smc, SMC_CLC_DECL_NOSRVLINK,
+ 						 ini->cln_first_contact);
+ 		smc->conn.lnk = link;
+ 	}
+ 
++>>>>>>> 7df8bcb56053 (net/smc: fix link lookup for new rdma connections)
  	/* create send buffer and rmb */
  	if (smc_buf_create(smc, false))
  		return smc_connect_abort(smc, SMC_CLC_DECL_MEM,
* Unmerged path net/smc/af_smc.c
