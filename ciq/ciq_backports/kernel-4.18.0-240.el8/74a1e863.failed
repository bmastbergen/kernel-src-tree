perf evsel: Rename perf_missing_features::bpf_event to ::bpf

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 74a1e863eb73dcc9f069b671dfb40650f3832116
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/74a1e863.failed

No need for that _event suffix, do just like all the other meta events
and do away with that.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Song Liu <songliubraving@fb.com>
Link: https://lkml.kernel.org/n/tip-bvc83f380dva83wlg52yd10t@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 74a1e863eb73dcc9f069b671dfb40650f3832116)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
#	tools/perf/util/evsel.h
diff --cc tools/perf/util/evsel.c
index 90bfc2303a40,fa676355559e..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1889,23 -1792,23 +1888,29 @@@ fallback_missing_features
  	if (perf_missing_features.cloexec)
  		flags &= ~(unsigned long)PERF_FLAG_FD_CLOEXEC;
  	if (perf_missing_features.mmap2)
 -		evsel->core.attr.mmap2 = 0;
 +		evsel->attr.mmap2 = 0;
  	if (perf_missing_features.exclude_guest)
 -		evsel->core.attr.exclude_guest = evsel->core.attr.exclude_host = 0;
 +		evsel->attr.exclude_guest = evsel->attr.exclude_host = 0;
  	if (perf_missing_features.lbr_flags)
 -		evsel->core.attr.branch_sample_type &= ~(PERF_SAMPLE_BRANCH_NO_FLAGS |
 +		evsel->attr.branch_sample_type &= ~(PERF_SAMPLE_BRANCH_NO_FLAGS |
  				     PERF_SAMPLE_BRANCH_NO_CYCLES);
 -	if (perf_missing_features.group_read && evsel->core.attr.inherit)
 -		evsel->core.attr.read_format &= ~(PERF_FORMAT_GROUP|PERF_FORMAT_ID);
 +	if (perf_missing_features.group_read && evsel->attr.inherit)
 +		evsel->attr.read_format &= ~(PERF_FORMAT_GROUP|PERF_FORMAT_ID);
  	if (perf_missing_features.ksymbol)
++<<<<<<< HEAD
 +		evsel->attr.ksymbol = 0;
 +	if (perf_missing_features.bpf_event)
 +		evsel->attr.bpf_event = 0;
++=======
+ 		evsel->core.attr.ksymbol = 0;
+ 	if (perf_missing_features.bpf)
+ 		evsel->core.attr.bpf_event = 0;
++>>>>>>> 74a1e863eb73 (perf evsel: Rename perf_missing_features::bpf_event to ::bpf)
  retry_sample_id:
  	if (perf_missing_features.sample_id_all)
 -		evsel->core.attr.sample_id_all = 0;
 +		evsel->attr.sample_id_all = 0;
  
 -	display_attr(&evsel->core.attr);
 +	display_attr(&evsel->attr);
  
  	for (cpu = 0; cpu < cpus->nr; cpu++) {
  
@@@ -2012,11 -1915,15 +2017,20 @@@ try_fallback
  	 * Must probe features in the order they were added to the
  	 * perf_event_attr interface.
  	 */
++<<<<<<< HEAD
 +	if (!perf_missing_features.bpf_event && evsel->attr.bpf_event) {
 +		perf_missing_features.bpf_event = true;
++=======
+ 	if (!perf_missing_features.aux_output && evsel->core.attr.aux_output) {
+ 		perf_missing_features.aux_output = true;
+ 		pr_debug2("Kernel has no attr.aux_output support, bailing out\n");
+ 		goto out_close;
+ 	} else if (!perf_missing_features.bpf && evsel->core.attr.bpf_event) {
+ 		perf_missing_features.bpf = true;
++>>>>>>> 74a1e863eb73 (perf evsel: Rename perf_missing_features::bpf_event to ::bpf)
  		pr_debug2("switching off bpf_event\n");
  		goto fallback_missing_features;
 -	} else if (!perf_missing_features.ksymbol && evsel->core.attr.ksymbol) {
 +	} else if (!perf_missing_features.ksymbol && evsel->attr.ksymbol) {
  		perf_missing_features.ksymbol = true;
  		pr_debug2("switching off ksymbol\n");
  		goto fallback_missing_features;
diff --cc tools/perf/util/evsel.h
index 139ed11fb6f6,fd60caced4fc..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -189,7 -194,8 +189,12 @@@ struct perf_missing_features 
  	bool write_backward;
  	bool group_read;
  	bool ksymbol;
++<<<<<<< HEAD
 +	bool bpf_event;
++=======
+ 	bool bpf;
+ 	bool aux_output;
++>>>>>>> 74a1e863eb73 (perf evsel: Rename perf_missing_features::bpf_event to ::bpf)
  };
  
  extern struct perf_missing_features perf_missing_features;
* Unmerged path tools/perf/util/evsel.c
* Unmerged path tools/perf/util/evsel.h
