svm: Deactivate AVIC when launching guest with nested SVM support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
commit 9a0bf05430699dc94b7ced940f6270c7cf1d77ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9a0bf054.failed

Since AVIC does not currently work w/ nested virtualization,
deactivate AVIC for the guest if setting CPUID Fn80000001_ECX[SVM]
(i.e. indicate support for SVM, which is needed for nested virtualization).
Also, introduce a new APICV_INHIBIT_REASON_NESTED bit to be used for
this reason.

	Suggested-by: Alexander Graf <graf@amazon.com>
	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 9a0bf05430699dc94b7ced940f6270c7cf1d77ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/kvm_host.h
#	arch/x86/kvm/svm.c
diff --cc arch/x86/include/asm/kvm_host.h
index 5bd73b4f5d32,ce19dea5f2dd..000000000000
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@@ -876,6 -875,10 +876,13 @@@ enum kvm_irqchip_mode 
  	KVM_IRQCHIP_SPLIT,        /* created with KVM_CAP_SPLIT_IRQCHIP */
  };
  
++<<<<<<< HEAD
++=======
+ #define APICV_INHIBIT_REASON_DISABLE    0
+ #define APICV_INHIBIT_REASON_HYPERV     1
+ #define APICV_INHIBIT_REASON_NESTED     2
+ 
++>>>>>>> 9a0bf0543069 (svm: Deactivate AVIC when launching guest with nested SVM support)
  struct kvm_arch {
  	unsigned long n_used_mmu_pages;
  	unsigned long n_requested_mmu_pages;
diff --cc arch/x86/kvm/svm.c
index 0b5d8983224a,af90f83d7123..000000000000
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@@ -7361,6 -7324,20 +7369,23 @@@ static bool svm_apic_init_signal_blocke
  		   (svm->vmcb->control.intercept & (1ULL << INTERCEPT_INIT));
  }
  
++<<<<<<< HEAD
++=======
+ static bool svm_check_apicv_inhibit_reasons(ulong bit)
+ {
+ 	ulong supported = BIT(APICV_INHIBIT_REASON_DISABLE) |
+ 			  BIT(APICV_INHIBIT_REASON_HYPERV) |
+ 			  BIT(APICV_INHIBIT_REASON_NESTED);
+ 
+ 	return supported & BIT(bit);
+ }
+ 
+ static void svm_pre_update_apicv_exec_ctrl(struct kvm *kvm, bool activate)
+ {
+ 	avic_update_access_page(kvm, activate);
+ }
+ 
++>>>>>>> 9a0bf0543069 (svm: Deactivate AVIC when launching guest with nested SVM support)
  static struct kvm_x86_ops svm_x86_ops __ro_after_init = {
  	.cpu_has_kvm_support = has_svm,
  	.disabled_by_bios = is_disabled,
* Unmerged path arch/x86/include/asm/kvm_host.h
* Unmerged path arch/x86/kvm/svm.c
