netfilter: conntrack: add nf_ct_acct_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author wenxu <wenxu@ucloud.cn>
commit 9312eabab4a68348af5b4482cc7cc6f151ff1c3f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9312eaba.failed

Add nf_ct_acct_add function to update the conntrack counter
with packets and bytes.

	Signed-off-by: wenxu <wenxu@ucloud.cn>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 9312eabab4a68348af5b4482cc7cc6f151ff1c3f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/netfilter/nf_conntrack_acct.h
#	net/netfilter/nf_conntrack_core.c
diff --cc include/net/netfilter/nf_conntrack_acct.h
index 79d8d16732b4,7f44a771530e..000000000000
--- a/include/net/netfilter/nf_conntrack_acct.h
+++ b/include/net/netfilter/nf_conntrack_acct.h
@@@ -58,11 -60,23 +58,26 @@@ static inline bool nf_ct_acct_enabled(s
  /* Enable/disable connection tracking accounting */
  static inline void nf_ct_set_acct(struct net *net, bool enable)
  {
 -#if IS_ENABLED(CONFIG_NF_CONNTRACK)
  	net->ct.sysctl_acct = enable;
 -#endif
  }
  
++<<<<<<< HEAD
 +int nf_conntrack_acct_pernet_init(struct net *net);
 +void nf_conntrack_acct_pernet_fini(struct net *net);
++=======
+ void nf_ct_acct_add(struct nf_conn *ct, u32 dir, unsigned int packets,
+ 		    unsigned int bytes);
+ 
+ static inline void nf_ct_acct_update(struct nf_conn *ct, u32 dir,
+ 				     unsigned int bytes)
+ {
+ #if IS_ENABLED(CONFIG_NF_CONNTRACK)
+ 	nf_ct_acct_add(ct, dir, 1, bytes);
+ #endif
+ }
+ 
+ void nf_conntrack_acct_pernet_init(struct net *net);
++>>>>>>> 9312eabab4a6 (netfilter: conntrack: add nf_ct_acct_add())
  
  int nf_conntrack_acct_init(void);
  void nf_conntrack_acct_fini(void);
diff --cc net/netfilter/nf_conntrack_core.c
index 680e0b0d92a5,c4582eb71766..000000000000
--- a/net/netfilter/nf_conntrack_core.c
+++ b/net/netfilter/nf_conntrack_core.c
@@@ -760,9 -865,8 +760,14 @@@ out
  }
  EXPORT_SYMBOL_GPL(nf_conntrack_hash_check_insert);
  
++<<<<<<< HEAD
 +static inline void nf_ct_acct_update(struct nf_conn *ct,
 +				     enum ip_conntrack_info ctinfo,
 +				     unsigned int len)
++=======
+ void nf_ct_acct_add(struct nf_conn *ct, u32 dir, unsigned int packets,
+ 		    unsigned int bytes)
++>>>>>>> 9312eabab4a6 (netfilter: conntrack: add nf_ct_acct_add())
  {
  	struct nf_conn_acct *acct;
  
@@@ -770,10 -874,11 +775,18 @@@
  	if (acct) {
  		struct nf_conn_counter *counter = acct->counter;
  
++<<<<<<< HEAD
 +		atomic64_inc(&counter[CTINFO2DIR(ctinfo)].packets);
 +		atomic64_add(len, &counter[CTINFO2DIR(ctinfo)].bytes);
 +	}
 +}
++=======
+ 		atomic64_add(packets, &counter[dir].packets);
+ 		atomic64_add(bytes, &counter[dir].bytes);
+ 	}
+ }
+ EXPORT_SYMBOL_GPL(nf_ct_acct_add);
++>>>>>>> 9312eabab4a6 (netfilter: conntrack: add nf_ct_acct_add())
  
  static void nf_ct_acct_merge(struct nf_conn *ct, enum ip_conntrack_info ctinfo,
  			     const struct nf_conn *loser_ct)
* Unmerged path include/net/netfilter/nf_conntrack_acct.h
* Unmerged path net/netfilter/nf_conntrack_core.c
