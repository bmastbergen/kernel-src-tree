irqchip/gic-v4.1: Skip absent CPUs while iterating over redistributors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [irqchip] gic-v4.1: Skip absent CPUs while iterating over redistributors (Gavin Shan) [1833572]
Rebuild_FUZZ: 93.94%
commit-author Marc Zyngier <maz@kernel.org>
commit 28d160de5194c68ff534443d2a8b6f1d10d57c58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/28d160de.failed

In a system that is only sparsly populated with CPUs, we can end-up with
redistributors structures that are not initialized. Let's make sure we
don't try and access those when iterating over them (in this case when
checking we have a L2 VPE table).

Fixes: 4e6437f12d6e ("irqchip/gic-v4.1: Ensure L2 vPE table is allocated at RD level")
	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Reviewed-by: Zenghui Yu <yuzenghui@huawei.com>
	Reviewed-by: Eric Auger <eric.auger@redhat.com>
Link: https://lore.kernel.org/r/20200304203330.4967-3-maz@kernel.org
(cherry picked from commit 28d160de5194c68ff534443d2a8b6f1d10d57c58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/irqchip/irq-gic-v3-its.c
diff --cc drivers/irqchip/irq-gic-v3-its.c
index d6b09d916ab8,da883a691028..000000000000
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@@ -2495,7 -2452,11 +2495,15 @@@ static bool allocate_vpe_l2_table(int c
  	if (!gic_rdists->has_rvpeid)
  		return true;
  
++<<<<<<< HEAD
 +	val  = gits_read_vpropbaser(base + SZ_128K + GICR_VPROPBASER);
++=======
+ 	/* Skip non-present CPUs */
+ 	if (!base)
+ 		return true;
+ 
+ 	val  = gicr_read_vpropbaser(base + SZ_128K + GICR_VPROPBASER);
++>>>>>>> 28d160de5194 (irqchip/gic-v4.1: Skip absent CPUs while iterating over redistributors)
  
  	esz  = FIELD_GET(GICR_VPROPBASER_4_1_ENTRY_SIZE, val) + 1;
  	gpsz = FIELD_GET(GICR_VPROPBASER_4_1_PAGE_SIZE, val);
* Unmerged path drivers/irqchip/irq-gic-v3-its.c
