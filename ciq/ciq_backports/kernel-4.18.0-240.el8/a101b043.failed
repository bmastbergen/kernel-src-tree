SUNRPC: Fix transport accounting when caller specifies an rpc_xprt

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit a101b043c44dfcb63bed7f29a675e9fa0259005e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a101b043.failed

Ensure that we do the required accounting for the round robin queue
when the caller to rpc_init_task() has passed in a transport to be
used.

	Reported-by: Olga Kornievskaia <aglo@umich.edu>
	Reported-by: Neil Brown <neilb@suse.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit a101b043c44dfcb63bed7f29a675e9fa0259005e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/clnt.c
diff --cc net/sunrpc/clnt.c
index 62858663658c,383555d2b522..000000000000
--- a/net/sunrpc/clnt.c
+++ b/net/sunrpc/clnt.c
@@@ -1037,8 -1058,12 +1053,17 @@@ rpc_task_get_next_xprt(struct rpc_clnt 
  static
  void rpc_task_set_transport(struct rpc_task *task, struct rpc_clnt *clnt)
  {
++<<<<<<< HEAD
 +	if (!task->tk_xprt)
 +		task->tk_xprt = rpc_task_get_xprt(clnt);
++=======
+ 	if (task->tk_xprt)
+ 		return;
+ 	if (task->tk_flags & RPC_TASK_NO_ROUND_ROBIN)
+ 		task->tk_xprt = rpc_task_get_first_xprt(clnt);
+ 	else
+ 		task->tk_xprt = rpc_task_get_next_xprt(clnt);
++>>>>>>> a101b043c44d (SUNRPC: Fix transport accounting when caller specifies an rpc_xprt)
  }
  
  static
diff --git a/include/linux/sunrpc/clnt.h b/include/linux/sunrpc/clnt.h
index 47d4debc6d94..570cc21130b1 100644
--- a/include/linux/sunrpc/clnt.h
+++ b/include/linux/sunrpc/clnt.h
@@ -160,6 +160,8 @@ void		rpc_shutdown_client(struct rpc_clnt *);
 void		rpc_release_client(struct rpc_clnt *);
 void		rpc_task_release_transport(struct rpc_task *);
 void		rpc_task_release_client(struct rpc_task *);
+struct rpc_xprt	*rpc_task_get_xprt(struct rpc_clnt *clnt,
+		struct rpc_xprt *xprt);
 
 int		rpcb_create_local(struct net *);
 void		rpcb_put_local(struct net *);
* Unmerged path net/sunrpc/clnt.c
diff --git a/net/sunrpc/sched.c b/net/sunrpc/sched.c
index 03c5d2eea775..3479607ee616 100644
--- a/net/sunrpc/sched.c
+++ b/net/sunrpc/sched.c
@@ -1001,7 +1001,8 @@ static void rpc_init_task(struct rpc_task *task, const struct rpc_task_setup *ta
 	/* Initialize workqueue for async tasks */
 	task->tk_workqueue = task_setup_data->workqueue;
 
-	task->tk_xprt = xprt_get(task_setup_data->rpc_xprt);
+	task->tk_xprt = rpc_task_get_xprt(task_setup_data->rpc_client,
+			xprt_get(task_setup_data->rpc_xprt));
 
 	task->tk_op_cred = get_rpccred(task_setup_data->rpc_op_cred);
 
