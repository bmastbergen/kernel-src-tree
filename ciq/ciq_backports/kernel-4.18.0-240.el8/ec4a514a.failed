mlxsw: reg: Update module_type values in PMTM register and map them to width

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Pirko <jiri@mellanox.com>
commit ec4a514a6870ee3a83fb8788635cf871ee32e665
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ec4a514a.failed

There are couple new values that PMTM register can return
in module_type field. Add them and map them to module width in
mlxsw_core_module_max_width(). Fix the existing names on the way.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ec4a514a6870ee3a83fb8788635cf871ee32e665)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/reg.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/reg.h
index f0d2cae0e8c2,1bc65e597de0..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/reg.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/reg.h
@@@ -5389,6 -5421,69 +5389,72 @@@ static inline void mlxsw_reg_pplr_pack(
  				 MLXSW_REG_PPLR_LB_TYPE_BIT_PHY_LOCAL : 0);
  }
  
++<<<<<<< HEAD
++=======
+ /* PMTM - Port Module Type Mapping Register
+  * ----------------------------------------
+  * The PMTM allows query or configuration of module types.
+  */
+ #define MLXSW_REG_PMTM_ID 0x5067
+ #define MLXSW_REG_PMTM_LEN 0x10
+ 
+ MLXSW_REG_DEFINE(pmtm, MLXSW_REG_PMTM_ID, MLXSW_REG_PMTM_LEN);
+ 
+ /* reg_pmtm_module
+  * Module number.
+  * Access: Index
+  */
+ MLXSW_ITEM32(reg, pmtm, module, 0x00, 16, 8);
+ 
+ enum mlxsw_reg_pmtm_module_type {
+ 	/* Backplane with 4 lanes */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_BP_4X,
+ 	/* QSFP */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_QSFP,
+ 	/* SFP */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_SFP,
+ 	/* Backplane with single lane */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_BP_1X = 4,
+ 	/* Backplane with two lane */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_BP_2X = 8,
+ 	/* Chip2Chip4x */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_C2C4X = 10,
+ 	/* Chip2Chip2x */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_C2C2X,
+ 	/* Chip2Chip1x */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_C2C1X,
+ 	/* QSFP-DD */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_QSFP_DD = 14,
+ 	/* OSFP */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_OSFP,
+ 	/* SFP-DD */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_SFP_DD,
+ 	/* DSFP */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_DSFP,
+ 	/* Chip2Chip8x */
+ 	MLXSW_REG_PMTM_MODULE_TYPE_C2C8X,
+ };
+ 
+ /* reg_pmtm_module_type
+  * Module type.
+  * Access: RW
+  */
+ MLXSW_ITEM32(reg, pmtm, module_type, 0x04, 0, 4);
+ 
+ static inline void mlxsw_reg_pmtm_pack(char *payload, u8 module)
+ {
+ 	MLXSW_REG_ZERO(pmtm, payload);
+ 	mlxsw_reg_pmtm_module_set(payload, module);
+ }
+ 
+ static inline void
+ mlxsw_reg_pmtm_unpack(char *payload,
+ 		      enum mlxsw_reg_pmtm_module_type *module_type)
+ {
+ 	*module_type = mlxsw_reg_pmtm_module_type_get(payload);
+ }
+ 
++>>>>>>> ec4a514a6870 (mlxsw: reg: Update module_type values in PMTM register and map them to width)
  /* HTGT - Host Trap Group Table
   * ----------------------------
   * Configures the properties for forwarding to CPU.
diff --git a/drivers/net/ethernet/mellanox/mlxsw/core.c b/drivers/net/ethernet/mellanox/mlxsw/core.c
index 885b75062085..5f3d0b43f50a 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/core.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core.c
@@ -2192,13 +2192,22 @@ int mlxsw_core_module_max_width(struct mlxsw_core *mlxsw_core, u8 module)
 	/* Here we need to get the module width according to the module type. */
 
 	switch (module_type) {
+	case MLXSW_REG_PMTM_MODULE_TYPE_C2C8X: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_QSFP_DD: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_OSFP:
+		return 8;
+	case MLXSW_REG_PMTM_MODULE_TYPE_C2C4X: /* fall through */
 	case MLXSW_REG_PMTM_MODULE_TYPE_BP_4X: /* fall through */
-	case MLXSW_REG_PMTM_MODULE_TYPE_BP_QSFP:
+	case MLXSW_REG_PMTM_MODULE_TYPE_QSFP:
 		return 4;
-	case MLXSW_REG_PMTM_MODULE_TYPE_BP_2X:
+	case MLXSW_REG_PMTM_MODULE_TYPE_C2C2X: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_BP_2X: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_SFP_DD: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_DSFP:
 		return 2;
-	case MLXSW_REG_PMTM_MODULE_TYPE_BP_SFP: /* fall through */
-	case MLXSW_REG_PMTM_MODULE_TYPE_BP_1X:
+	case MLXSW_REG_PMTM_MODULE_TYPE_C2C1X: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_BP_1X: /* fall through */
+	case MLXSW_REG_PMTM_MODULE_TYPE_SFP:
 		return 1;
 	default:
 		return -EINVAL;
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/reg.h
