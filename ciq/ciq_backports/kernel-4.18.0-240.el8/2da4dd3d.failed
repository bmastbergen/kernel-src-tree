perf intel-pt: Fix endless record after being terminated

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Wei Li <liwei391@huawei.com>
commit 2da4dd3d6973ffdfba4fa07f53240fda7ab22929
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2da4dd3d.failed

In __cmd_record(), when receiving SIGINT(ctrl + c), a 'done' flag will
be set and the event list will be disabled by evlist__disable() once.

While in auxtrace_record.read_finish(), the related events will be
enabled again, if they are continuous, the recording seems to be endless.

If the intel_pt event is disabled, we don't enable it again here.

Before the patch:

  huawei@huawei-2288H-V5:~/linux-5.5-rc4/tools/perf$ ./perf record -e \
  intel_pt//u -p 46803
  ^C^C^C^C^C^C

After the patch:

  huawei@huawei-2288H-V5:~/linux-5.5-rc4/tools/perf$ ./perf record -e \
  intel_pt//u -p 48591
  ^C[ perf record: Woken up 0 times to write data ]
  Warning:
  AUX data lost 504 times out of 4816!

  [ perf record: Captured and wrote 2024.405 MB perf.data ]

	Signed-off-by: Wei Li <liwei391@huawei.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Tan Xiaojun <tanxiaojun@huawei.com>
	Cc: stable@vger.kernel.org # 5.4+
Link: http://lore.kernel.org/lkml/20200214132654.20395-2-adrian.hunter@intel.com
[ ahunter: removed redundant 'else' after 'return' ]
	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 2da4dd3d6973ffdfba4fa07f53240fda7ab22929)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/arch/x86/util/intel-pt.c
diff --cc tools/perf/arch/x86/util/intel-pt.c
index 3a851647e6f4,be07d6886256..000000000000
--- a/tools/perf/arch/x86/util/intel-pt.c
+++ b/tools/perf/arch/x86/util/intel-pt.c
@@@ -1079,12 -1170,15 +1079,19 @@@ static int intel_pt_read_finish(struct 
  {
  	struct intel_pt_recording *ptr =
  			container_of(itr, struct intel_pt_recording, itr);
 -	struct evsel *evsel;
 +	struct perf_evsel *evsel;
  
  	evlist__for_each_entry(ptr->evlist, evsel) {
++<<<<<<< HEAD
 +		if (evsel->attr.type == ptr->intel_pt_pmu->type)
++=======
+ 		if (evsel->core.attr.type == ptr->intel_pt_pmu->type) {
+ 			if (evsel->disabled)
+ 				return 0;
++>>>>>>> 2da4dd3d6973 (perf intel-pt: Fix endless record after being terminated)
  			return perf_evlist__enable_event_idx(ptr->evlist, evsel,
  							     idx);
+ 		}
  	}
  	return -EINVAL;
  }
* Unmerged path tools/perf/arch/x86/util/intel-pt.c
