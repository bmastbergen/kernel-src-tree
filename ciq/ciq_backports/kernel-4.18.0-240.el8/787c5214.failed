ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op (Jaroslav Kysela) [1797509]
Rebuild_FUZZ: 95.16%
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit 787c5214ea6f6e9b7c75ae670d6b6a7deecb2d45
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/787c5214.failed

Replace the calls to hda_dsp_set_power_state() with the
top-level SOF op snd_sof_set_power_state().
Along with this, modify the hda_dsp_resume() function to return
the value of snd_sof_set_power_state() directly.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: Jaska Uimonen <jaska.uimonen@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20200228234225.6963-1-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 787c5214ea6f6e9b7c75ae670d6b6a7deecb2d45)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-dsp.c
diff --cc sound/soc/sof/intel/hda-dsp.c
index fddf2c48904f,79ce52c32ef1..000000000000
--- a/sound/soc/sof/intel/hda-dsp.c
+++ b/sound/soc/sof/intel/hda-dsp.c
@@@ -480,8 -651,24 +480,28 @@@ int hda_dsp_resume(struct snd_sof_dev *
  {
  	struct sof_intel_hda_dev *hda = sdev->pdata->hw_pdata;
  	struct pci_dev *pci = to_pci_dev(sdev->dev);
++<<<<<<< HEAD
++=======
+ 	const struct sof_dsp_power_state target_state = {
+ 		.state = SOF_DSP_PM_D0,
+ 		.substate = SOF_HDA_DSP_PM_D0I0,
+ 	};
+ 	int ret;
+ 
+ 	/* resume from D0I3 */
+ 	if (sdev->dsp_power_state.state == SOF_DSP_PM_D0) {
+ 		hda_codec_i915_display_power(sdev, true);
+ 
+ 		/* Set DSP power state */
+ 		ret = snd_sof_dsp_set_power_state(sdev, &target_state);
+ 		if (ret < 0) {
+ 			dev_err(sdev->dev, "error: setting dsp state %d substate %d\n",
+ 				target_state.state, target_state.substate);
+ 			return ret;
+ 		}
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
  
 +	if (sdev->system_suspend_target == SOF_SUSPEND_S0IX) {
  		/* restore L1SEN bit */
  		if (hda->l1_support_changed)
  			snd_sof_dsp_update_bits(sdev, HDA_DSP_HDA_BAR,
@@@ -495,13 -682,26 +515,29 @@@
  	}
  
  	/* init hda controller. DSP cores will be powered up during fw boot */
++<<<<<<< HEAD
 +	return hda_resume(sdev, false);
++=======
+ 	ret = hda_resume(sdev, false);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	return snd_sof_dsp_set_power_state(sdev, &target_state);
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
  }
  
  int hda_dsp_runtime_resume(struct snd_sof_dev *sdev)
  {
 -	const struct sof_dsp_power_state target_state = {
 -		.state = SOF_DSP_PM_D0,
 -	};
 -	int ret;
 -
  	/* init hda controller. DSP cores will be powered up during fw boot */
++<<<<<<< HEAD
 +	return hda_resume(sdev, true);
++=======
+ 	ret = hda_resume(sdev, true);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	return snd_sof_dsp_set_power_state(sdev, &target_state);
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
  }
  
  int hda_dsp_runtime_idle(struct snd_sof_dev *sdev)
@@@ -519,18 -719,47 +555,45 @@@
  
  int hda_dsp_runtime_suspend(struct snd_sof_dev *sdev)
  {
 -	const struct sof_dsp_power_state target_state = {
 -		.state = SOF_DSP_PM_D3,
 -	};
 -	int ret;
 -
  	/* stop hda controller and power dsp off */
++<<<<<<< HEAD
 +	return hda_suspend(sdev, true);
++=======
+ 	ret = hda_suspend(sdev, true);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	return snd_sof_dsp_set_power_state(sdev, &target_state);
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
  }
  
 -int hda_dsp_suspend(struct snd_sof_dev *sdev, u32 target_state)
 +int hda_dsp_suspend(struct snd_sof_dev *sdev)
  {
  	struct sof_intel_hda_dev *hda = sdev->pdata->hw_pdata;
  	struct hdac_bus *bus = sof_to_bus(sdev);
  	struct pci_dev *pci = to_pci_dev(sdev->dev);
 -	const struct sof_dsp_power_state target_dsp_state = {
 -		.state = target_state,
 -		.substate = target_state == SOF_DSP_PM_D0 ?
 -				SOF_HDA_DSP_PM_D0I3 : 0,
 -	};
  	int ret;
  
++<<<<<<< HEAD
 +	if (sdev->system_suspend_target == SOF_SUSPEND_S0IX) {
++=======
+ 	/* cancel any attempt for DSP D0I3 */
+ 	cancel_delayed_work_sync(&hda->d0i3_work);
+ 
+ 	if (target_state == SOF_DSP_PM_D0) {
+ 		/* we can't keep a wakeref to display driver at suspend */
+ 		hda_codec_i915_display_power(sdev, false);
+ 
+ 		/* Set DSP power state */
+ 		ret = snd_sof_dsp_set_power_state(sdev, &target_dsp_state);
+ 		if (ret < 0) {
+ 			dev_err(sdev->dev, "error: setting dsp state %d substate %d\n",
+ 				target_dsp_state.state,
+ 				target_dsp_state.substate);
+ 			return ret;
+ 		}
+ 
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
  		/* enable L1SEN to make sure the system can enter S0Ix */
  		hda->l1_support_changed =
  			snd_sof_dsp_update_bits(sdev, HDA_DSP_HDA_BAR,
@@@ -551,7 -780,7 +614,11 @@@
  		return ret;
  	}
  
++<<<<<<< HEAD
 +	return 0;
++=======
+ 	return snd_sof_dsp_set_power_state(sdev, &target_dsp_state);
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
  }
  
  int hda_dsp_set_hw_params_upon_resume(struct snd_sof_dev *sdev)
@@@ -595,3 -824,33 +662,36 @@@
  #endif
  	return 0;
  }
++<<<<<<< HEAD
++=======
+ 
+ void hda_dsp_d0i3_work(struct work_struct *work)
+ {
+ 	struct sof_intel_hda_dev *hdev = container_of(work,
+ 						      struct sof_intel_hda_dev,
+ 						      d0i3_work.work);
+ 	struct hdac_bus *bus = &hdev->hbus.core;
+ 	struct snd_sof_dev *sdev = dev_get_drvdata(bus->dev);
+ 	struct sof_dsp_power_state target_state;
+ 	int ret;
+ 
+ 	target_state.state = SOF_DSP_PM_D0;
+ 
+ 	/* DSP can enter D0I3 iff only D0I3-compatible streams are active */
+ 	if (snd_sof_dsp_only_d0i3_compatible_stream_active(sdev))
+ 		target_state.substate = SOF_HDA_DSP_PM_D0I3;
+ 	else
+ 		target_state.substate = SOF_HDA_DSP_PM_D0I0;
+ 
+ 	/* remain in D0I0 */
+ 	if (target_state.substate == SOF_HDA_DSP_PM_D0I0)
+ 		return;
+ 
+ 	/* This can fail but error cannot be propagated */
+ 	ret = snd_sof_dsp_set_power_state(sdev, &target_state);
+ 	if (ret < 0)
+ 		dev_err_ratelimited(sdev->dev,
+ 				    "error: failed to set DSP state %d substate %d\n",
+ 				    target_state.state, target_state.substate);
+ }
++>>>>>>> 787c5214ea6f (ASoC: SOF: Intel: hda: use snd_sof_dsp_set_power_state() op)
* Unmerged path sound/soc/sof/intel/hda-dsp.c
