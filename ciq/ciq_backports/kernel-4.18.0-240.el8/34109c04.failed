KVM: VMX: Use direct vcpu pointer during vCPU create/free

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 34109c0476f10c033945b630a58c087e9d0ef8a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/34109c04.failed

Capture the vcpu pointer in a local varaible and replace '&vmx->vcpu'
references with a direct reference to the pointer in anticipation of
moving bits of the code to common x86 and passing the vcpu pointer into
vmx_create_vcpu(), i.e. eliminate unnecessary noise from future patches.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 34109c0476f10c033945b630a58c087e9d0ef8a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/vmx/vmx.c
index aace07a1fbd9,e2da9082df89..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -6760,10 -6689,10 +6760,14 @@@ static void vmx_free_vcpu(struct kvm_vc
  
  static struct kvm_vcpu *vmx_create_vcpu(struct kvm *kvm, unsigned int id)
  {
- 	int err;
+ 	struct kvm_vcpu *vcpu;
  	struct vcpu_vmx *vmx;
  	unsigned long *msr_bitmap;
++<<<<<<< HEAD
 +	int cpu;
++=======
+ 	int i, cpu, err;
++>>>>>>> 34109c0476f1 (KVM: VMX: Use direct vcpu pointer during vCPU create/free)
  
  	BUILD_BUG_ON_MSG(offsetof(struct vcpu_vmx, vcpu) != 0,
  		"struct kvm_vcpu must be at offset 0 for arch usercopy region");
* Unmerged path arch/x86/kvm/vmx/vmx.c
