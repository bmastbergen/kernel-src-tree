libperf: Adopt perf_evsel__alloc_fd() function from tools/perf

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit b8eca4d761c57fcf691a8063cd562f205645d11f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b8eca4d7.failed

Move the perf_evsel__alloc_fd() function from perf to libperf.

It's not exported.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20190721112506.12306-62-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit b8eca4d761c57fcf691a8063cd562f205645d11f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/evsel.c
#	tools/perf/lib/include/internal/evsel.h
#	tools/perf/util/evsel.c
diff --cc tools/perf/util/evsel.c
index e99257f738ba,d3c8488f7069..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1154,23 -1153,7 +1154,27 @@@ void perf_evsel__config(struct perf_evs
  		perf_evsel__reset_sample_bit(evsel, BRANCH_STACK);
  }
  
++<<<<<<< HEAD
 +static int perf_evsel__alloc_fd(struct perf_evsel *evsel, int ncpus, int nthreads)
 +{
 +	evsel->fd = xyarray__new(ncpus, nthreads, sizeof(int));
 +
 +	if (evsel->fd) {
 +		int cpu, thread;
 +		for (cpu = 0; cpu < ncpus; cpu++) {
 +			for (thread = 0; thread < nthreads; thread++) {
 +				FD(evsel, cpu, thread) = -1;
 +			}
 +		}
 +	}
 +
 +	return evsel->fd != NULL ? 0 : -ENOMEM;
 +}
 +
 +static int perf_evsel__run_ioctl(struct perf_evsel *evsel,
++=======
+ static int perf_evsel__run_ioctl(struct evsel *evsel,
++>>>>>>> b8eca4d761c5 (libperf: Adopt perf_evsel__alloc_fd() function from tools/perf)
  			  int ioc,  void *arg)
  {
  	int cpu, thread;
@@@ -1866,8 -1849,8 +1870,13 @@@ int perf_evsel__open(struct perf_evsel 
  	else
  		nthreads = threads->nr;
  
++<<<<<<< HEAD
 +	if (evsel->fd == NULL &&
 +	    perf_evsel__alloc_fd(evsel, cpus->nr, nthreads) < 0)
++=======
+ 	if (evsel->core.fd == NULL &&
+ 	    perf_evsel__alloc_fd(&evsel->core, cpus->nr, nthreads) < 0)
++>>>>>>> b8eca4d761c5 (libperf: Adopt perf_evsel__alloc_fd() function from tools/perf)
  		return -ENOMEM;
  
  	if (evsel->cgrp) {
* Unmerged path tools/perf/lib/evsel.c
* Unmerged path tools/perf/lib/include/internal/evsel.h
* Unmerged path tools/perf/lib/evsel.c
* Unmerged path tools/perf/lib/include/internal/evsel.h
* Unmerged path tools/perf/util/evsel.c
