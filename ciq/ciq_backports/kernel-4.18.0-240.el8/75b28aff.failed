io_uring: allocate the two rings together

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Hristo Venev <hristo@venev.name>
commit 75b28affdd6aed1c68073ef53907c7bd822aff84
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/75b28aff.failed

Both the sq and the cq rings have sizes just over a power of two, and
the sq ring is significantly smaller. By bundling them in a single
alllocation, we get the sq ring for free.

This also means that IORING_OFF_SQ_RING and IORING_OFF_CQ_RING now mean
the same thing. If we indicate this to userspace, we can save a mmap
call.

	Signed-off-by: Hristo Venev <hristo@venev.name>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 75b28affdd6aed1c68073ef53907c7bd822aff84)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/io_uring.c
diff --cc fs/io_uring.c
index 56d0d5127584,17dfe57c57f8..000000000000
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@@ -2478,11 -2454,10 +2455,15 @@@ static int io_ring_submit(struct io_rin
  static int io_cqring_wait(struct io_ring_ctx *ctx, int min_events,
  			  const sigset_t __user *sig, size_t sigsz)
  {
++<<<<<<< HEAD
 +	struct io_cq_ring *ring = ctx->cq_ring;
 +	sigset_t ksigmask, sigsaved;
++=======
+ 	struct io_rings *rings = ctx->rings;
++>>>>>>> 75b28affdd6a (io_uring: allocate the two rings together)
  	int ret;
  
- 	if (io_cqring_events(ring) >= min_events)
+ 	if (io_cqring_events(rings) >= min_events)
  		return 0;
  
  	if (sig) {
@@@ -2499,11 -2473,8 +2480,16 @@@
  			return ret;
  	}
  
++<<<<<<< HEAD
 +	ret = wait_event_interruptible(ctx->wait, io_cqring_events(ring) >= min_events);
 +
 +	if (sig)
 +		restore_user_sigmask(sig, &sigsaved, ret == -ERESTARTSYS);
 +
++=======
+ 	ret = wait_event_interruptible(ctx->wait, io_cqring_events(rings) >= min_events);
+ 	restore_saved_sigmask_unless(ret == -ERESTARTSYS);
++>>>>>>> 75b28affdd6a (io_uring: allocate the two rings together)
  	if (ret == -ERESTARTSYS)
  		ret = -EINTR;
  
* Unmerged path fs/io_uring.c
