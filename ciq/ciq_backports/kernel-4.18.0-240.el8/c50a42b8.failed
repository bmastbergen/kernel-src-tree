kselftests: netfilter: fix leftover net/net-next merge conflict

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Florian Westphal <fw@strlen.de>
commit c50a42b8f61f3492a0d3a1c7fb4932e19cf3e626
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c50a42b8.failed

In nf-next, I had extended this script to also cover NAT support for the
inet family.

In nf, I extended it to cover a regression with 'fully-random' masquerade.

Make this script work again by resolving the conflicts as needed.

Fixes: 8b4483658364f0 ("Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net")
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c50a42b8f61f3492a0d3a1c7fb4932e19cf3e626)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/netfilter/nft_nat.sh
diff --cc tools/testing/selftests/netfilter/nft_nat.sh
index 356b1ba221a4,14fcf3104c77..000000000000
--- a/tools/testing/selftests/netfilter/nft_nat.sh
+++ b/tools/testing/selftests/netfilter/nft_nat.sh
@@@ -351,6 -359,7 +363,10 @@@ EO
  test_masquerade6()
  {
  	local family=$1
++<<<<<<< HEAD
++=======
+ 	local natflags=$2
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  	local lret=0
  
  	ip netns exec ns0 sysctl net.ipv6.conf.all.forwarding=1 > /dev/null
@@@ -395,7 -404,7 +411,11 @@@ EO
  
  	ip netns exec ns2 ping -q -c 1 dead:1::99 > /dev/null # ping ns2->ns1
  	if [ $? -ne 0 ] ; then
++<<<<<<< HEAD
 +		echo "ERROR: cannot ping ns1 from ns2 with active $family masquerading"
++=======
+ 		echo "ERROR: cannot ping ns1 from ns2 with active $family masquerade $natflags"
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  		lret=1
  	fi
  
@@@ -432,13 -440,19 +451,26 @@@
  		fi
  	done
  
++<<<<<<< HEAD
++=======
+ 	ip netns exec ns2 ping -q -c 1 dead:1::99 > /dev/null # ping ns2->ns1
+ 	if [ $? -ne 0 ] ; then
+ 		echo "ERROR: cannot ping ns1 from ns2 with active ipv6 masquerade $natflags (attempt 2)"
+ 		lret=1
+ 	fi
+ 
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  	ip netns exec ns0 nft flush chain $family nat postrouting
  	if [ $? -ne 0 ]; then
  		echo "ERROR: Could not flush $family nat postrouting" 1>&2
  		lret=1
  	fi
  
++<<<<<<< HEAD
 +	test $lret -eq 0 && echo "PASS: $family IPv6 masquerade for ns2"
++=======
+ 	test $lret -eq 0 && echo "PASS: $family IPv6 masquerade $natflags for ns2"
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  
  	return $lret
  }
@@@ -446,6 -460,7 +478,10 @@@
  test_masquerade()
  {
  	local family=$1
++<<<<<<< HEAD
++=======
+ 	local natflags=$2
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  	local lret=0
  
  	ip netns exec ns0 sysctl net.ipv4.conf.veth0.forwarding=1 > /dev/null
@@@ -490,7 -505,7 +526,11 @@@ EO
  
  	ip netns exec ns2 ping -q -c 1 10.0.1.99 > /dev/null # ping ns2->ns1
  	if [ $? -ne 0 ] ; then
++<<<<<<< HEAD
 +		echo "ERROR: cannot ping ns1 from ns2 with active $family masquerading"
++=======
+ 		echo "ERROR: cannot ping ns1 from ns2 with active $family masquerade $natflags"
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  		lret=1
  	fi
  
@@@ -526,13 -541,19 +566,26 @@@
  		fi
  	done
  
++<<<<<<< HEAD
++=======
+ 	ip netns exec ns2 ping -q -c 1 10.0.1.99 > /dev/null # ping ns2->ns1
+ 	if [ $? -ne 0 ] ; then
+ 		echo "ERROR: cannot ping ns1 from ns2 with active ip masquerade $natflags (attempt 2)"
+ 		lret=1
+ 	fi
+ 
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  	ip netns exec ns0 nft flush chain $family nat postrouting
  	if [ $? -ne 0 ]; then
  		echo "ERROR: Could not flush $family nat postrouting" 1>&2
  		lret=1
  	fi
  
++<<<<<<< HEAD
 +	test $lret -eq 0 && echo "PASS: $family IP masquerade for ns2"
++=======
+ 	test $lret -eq 0 && echo "PASS: $family IP masquerade $natflags for ns2"
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  
  	return $lret
  }
@@@ -805,12 -826,14 +858,22 @@@ reset_counter
  $test_inet_nat && test_local_dnat inet
  $test_inet_nat && test_local_dnat6 inet
  
+ for flags in "" "fully-random"; do
  reset_counters
++<<<<<<< HEAD
 +test_masquerade ip
 +test_masquerade6 ip6
 +reset_counters
 +$test_inet_nat && test_masquerade inet
 +$test_inet_nat && test_masquerade6 inet
++=======
+ test_masquerade ip $flags
+ test_masquerade6 ip6 $flags
+ reset_counters
+ $test_inet_nat && test_masquerade inet $flags
+ $test_inet_nat && test_masquerade6 inet $flags
+ done
++>>>>>>> c50a42b8f61f (kselftests: netfilter: fix leftover net/net-next merge conflict)
  
  reset_counters
  test_redirect ip
* Unmerged path tools/testing/selftests/netfilter/nft_nat.sh
