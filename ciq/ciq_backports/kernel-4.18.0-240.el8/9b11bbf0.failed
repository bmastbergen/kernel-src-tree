drm/i915/tgl: WaDisableGPGPUMidThreadPreemption

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Tvrtko Ursulin <tvrtko.ursulin@intel.com>
commit 9b11bbf0c4008fa0b715ed68db0d5669175413c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9b11bbf0.failed

Enable FtrPerCtxtPreemptionGranularityControl bit and select thread-
group as the default preemption level.

v2:
 * Remove register whitelisting (Rafael, Tony).

	Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	Cc: Micha≈Ç Winiarski <michal.winiarski@intel.com>
	Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
	Cc: piotr.zdunowski@intel.com
	Cc: michal.mrozek@intel.com
	Cc: Tony Ye <tony.ye@intel.com>
	Cc: Rafael Antognolli <rafael.antognolli@intel.com>
	Acked-by: Rafael Antognolli <rafael.antognolli@intel.com>
	Acked-by: Jason Ekstrand <jason@jlekstrand.net>
	Acked-by: Chris Wilson <chris@chris-wilson.co.uk>
	Acked-by: Tony Ye <tony.ye@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200304153144.10675-1-tvrtko.ursulin@linux.intel.com
(cherry picked from commit 9b11bbf0c4008fa0b715ed68db0d5669175413c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/intel_workarounds.c
diff --cc drivers/gpu/drm/i915/gt/intel_workarounds.c
index 8f75882ded3f,7be71a1a5719..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_workarounds.c
+++ b/drivers/gpu/drm/i915/gt/intel_workarounds.c
@@@ -581,6 -577,37 +581,40 @@@ static void icl_ctx_workarounds_init(st
  			  GEN11_SAMPLER_ENABLE_HEADLESS_MSG);
  }
  
++<<<<<<< HEAD
++=======
+ static void tgl_ctx_workarounds_init(struct intel_engine_cs *engine,
+ 				     struct i915_wa_list *wal)
+ {
+ 	/*
+ 	 * Wa_1409142259:tgl
+ 	 * Wa_1409347922:tgl
+ 	 * Wa_1409252684:tgl
+ 	 * Wa_1409217633:tgl
+ 	 * Wa_1409207793:tgl
+ 	 * Wa_1409178076:tgl
+ 	 * Wa_1408979724:tgl
+ 	 */
+ 	WA_SET_BIT_MASKED(GEN11_COMMON_SLICE_CHICKEN3,
+ 			  GEN12_DISABLE_CPS_AWARE_COLOR_PIPE);
+ 
+ 	/*
+ 	 * Wa_1604555607:gen12 and Wa_1608008084:gen12
+ 	 * FF_MODE2 register will return the wrong value when read. The default
+ 	 * value for this register is zero for all fields and there are no bit
+ 	 * masks. So instead of doing a RMW we should just write the TDS timer
+ 	 * value for Wa_1604555607.
+ 	 */
+ 	wa_add(wal, FF_MODE2, FF_MODE2_TDS_TIMER_MASK,
+ 	       FF_MODE2_TDS_TIMER_128, 0);
+ 
+ 	/* WaDisableGPGPUMidThreadPreemption:tgl */
+ 	WA_SET_FIELD_MASKED(GEN8_CS_CHICKEN1,
+ 			    GEN9_PREEMPT_GPGPU_LEVEL_MASK,
+ 			    GEN9_PREEMPT_GPGPU_THREAD_GROUP_LEVEL);
+ }
+ 
++>>>>>>> 9b11bbf0c400 (drm/i915/tgl: WaDisableGPGPUMidThreadPreemption)
  static void
  __intel_engine_init_ctx_wa(struct intel_engine_cs *engine,
  			   struct i915_wa_list *wal,
@@@ -1290,10 -1457,31 +1324,10 @@@ rcs_engine_wa_init(struct intel_engine_
  		wa_write_or(wal,
  			    GEN7_SARCHKMD,
  			    GEN7_DISABLE_SAMPLER_PREFETCH);
 -
 -		/* Wa_1409178092:icl */
 -		wa_write_masked_or(wal,
 -				   GEN11_SCRATCH2,
 -				   GEN11_COHERENT_PARTIAL_WRITE_MERGE_ENABLE,
 -				   0);
 -
 -		/* WaEnable32PlaneMode:icl */
 -		wa_masked_en(wal, GEN9_CSFE_CHICKEN1_RCS,
 -			     GEN11_ENABLE_32_PLANE_MODE);
 -
 -		/*
 -		 * Wa_1408615072:icl,ehl  (vsunit)
 -		 * Wa_1407596294:icl,ehl  (hsunit)
 -		 */
 -		wa_masked_en(wal, UNSLICE_UNIT_LEVEL_CLKGATE,
 -			     VSUNIT_CLKGATE_DIS | HSUNIT_CLKGATE_DIS);
 -
 -		/* Wa_1407352427:icl,ehl */
 -		wa_masked_en(wal, UNSLICE_UNIT_LEVEL_CLKGATE2,
 -			     PSDUNIT_CLKGATE_DIS);
  	}
  
- 	if (IS_GEN_RANGE(i915, 9, 11)) {
- 		/* FtrPerCtxtPreemptionGranularityControl:skl,bxt,kbl,cfl,cnl,icl */
+ 	if (IS_GEN_RANGE(i915, 9, 12)) {
+ 		/* FtrPerCtxtPreemptionGranularityControl:skl,bxt,kbl,cfl,cnl,icl,tgl */
  		wa_masked_en(wal,
  			     GEN7_FF_SLICE_CS_CHICKEN1,
  			     GEN9_FFSC_PERCTX_PREEMPT_CTRL);
* Unmerged path drivers/gpu/drm/i915/gt/intel_workarounds.c
