KVM: PPC: Book3S HV: Implement H_SVM_INIT_ABORT hcall

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
commit 3a43970d55e9fd5475d3c4e5fe398ab831ec6c3a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/3a43970d.failed

Implement the H_SVM_INIT_ABORT hcall which the Ultravisor can use to
abort an SVM after it has issued the H_SVM_INIT_START and before the
H_SVM_INIT_DONE hcalls. This hcall could be used when Ultravisor
encounters security violations or other errors when starting an SVM.

Note that this hcall is different from UV_SVM_TERMINATE ucall which
is used by HV to terminate/cleanup an VM that has becore secure.

The H_SVM_INIT_ABORT basically undoes operations that were done
since the H_SVM_INIT_START hcall - i.e page-out all the VM pages back
to normal memory, and terminate the SVM.

(If we do not bring the pages back to normal memory, the text/data
of the VM would be stuck in secure memory and since the SVM did not
go secure, its MSR_S bit will be clear and the VM wont be able to
access its pages even to do a clean exit).

Based on patches and discussion with Paul Mackerras, Ram Pai and
Bharata Rao.

	Signed-off-by: Ram Pai <linuxram@linux.ibm.com>
	Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
	Signed-off-by: Bharata B Rao <bharata@linux.ibm.com>
	Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
(cherry picked from commit 3a43970d55e9fd5475d3c4e5fe398ab831ec6c3a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/powerpc/ultravisor.rst
#	arch/powerpc/include/asm/hvcall.h
#	arch/powerpc/include/asm/kvm_book3s_uvmem.h
#	arch/powerpc/include/asm/kvm_host.h
#	arch/powerpc/kvm/book3s_hv.c
#	arch/powerpc/kvm/book3s_hv_uvmem.c
diff --cc arch/powerpc/include/asm/hvcall.h
index 11112023e327,e90c073e437e..000000000000
--- a/arch/powerpc/include/asm/hvcall.h
+++ b/arch/powerpc/include/asm/hvcall.h
@@@ -342,6 -342,16 +342,19 @@@
  #define H_TLB_INVALIDATE	0xF808
  #define H_COPY_TOFROM_GUEST	0xF80C
  
++<<<<<<< HEAD
++=======
+ /* Flags for H_SVM_PAGE_IN */
+ #define H_PAGE_IN_SHARED        0x1
+ 
+ /* Platform-specific hcalls used by the Ultravisor */
+ #define H_SVM_PAGE_IN		0xEF00
+ #define H_SVM_PAGE_OUT		0xEF04
+ #define H_SVM_INIT_START	0xEF08
+ #define H_SVM_INIT_DONE		0xEF0C
+ #define H_SVM_INIT_ABORT	0xEF14
+ 
++>>>>>>> 3a43970d55e9 (KVM: PPC: Book3S HV: Implement H_SVM_INIT_ABORT hcall)
  /* Values for 2nd argument to H_SET_MODE */
  #define H_SET_MODE_RESOURCE_SET_CIABR		1
  #define H_SET_MODE_RESOURCE_SET_DAWR		2
diff --cc arch/powerpc/include/asm/kvm_host.h
index e3c1a20f542d,6e8b8ffd06ad..000000000000
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@@ -286,6 -275,11 +286,14 @@@ struct kvm_hpt_info 
  
  struct kvm_resize_hpt;
  
++<<<<<<< HEAD
++=======
+ /* Flag values for kvm_arch.secure_guest */
+ #define KVMPPC_SECURE_INIT_START 0x1 /* H_SVM_INIT_START has been called */
+ #define KVMPPC_SECURE_INIT_DONE  0x2 /* H_SVM_INIT_DONE completed */
+ #define KVMPPC_SECURE_INIT_ABORT 0x4 /* H_SVM_INIT_ABORT issued */
+ 
++>>>>>>> 3a43970d55e9 (KVM: PPC: Book3S HV: Implement H_SVM_INIT_ABORT hcall)
  struct kvm_arch {
  	unsigned int lpid;
  	unsigned int smt_mode;		/* # vcpus per virtual core */
diff --cc arch/powerpc/kvm/book3s_hv.c
index 46a62698fcb1,1118cff7f7ef..000000000000
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@@ -1070,6 -1073,28 +1070,31 @@@ int kvmppc_pseries_do_hcall(struct kvm_
  					 kvmppc_get_gpr(vcpu, 5),
  					 kvmppc_get_gpr(vcpu, 6));
  		break;
++<<<<<<< HEAD
++=======
+ 	case H_SVM_PAGE_IN:
+ 		ret = kvmppc_h_svm_page_in(vcpu->kvm,
+ 					   kvmppc_get_gpr(vcpu, 4),
+ 					   kvmppc_get_gpr(vcpu, 5),
+ 					   kvmppc_get_gpr(vcpu, 6));
+ 		break;
+ 	case H_SVM_PAGE_OUT:
+ 		ret = kvmppc_h_svm_page_out(vcpu->kvm,
+ 					    kvmppc_get_gpr(vcpu, 4),
+ 					    kvmppc_get_gpr(vcpu, 5),
+ 					    kvmppc_get_gpr(vcpu, 6));
+ 		break;
+ 	case H_SVM_INIT_START:
+ 		ret = kvmppc_h_svm_init_start(vcpu->kvm);
+ 		break;
+ 	case H_SVM_INIT_DONE:
+ 		ret = kvmppc_h_svm_init_done(vcpu->kvm);
+ 		break;
+ 	case H_SVM_INIT_ABORT:
+ 		ret = kvmppc_h_svm_init_abort(vcpu->kvm);
+ 		break;
+ 
++>>>>>>> 3a43970d55e9 (KVM: PPC: Book3S HV: Implement H_SVM_INIT_ABORT hcall)
  	default:
  		return RESUME_HOST;
  	}
* Unmerged path Documentation/powerpc/ultravisor.rst
* Unmerged path arch/powerpc/include/asm/kvm_book3s_uvmem.h
* Unmerged path arch/powerpc/kvm/book3s_hv_uvmem.c
* Unmerged path Documentation/powerpc/ultravisor.rst
* Unmerged path arch/powerpc/include/asm/hvcall.h
* Unmerged path arch/powerpc/include/asm/kvm_book3s_uvmem.h
* Unmerged path arch/powerpc/include/asm/kvm_host.h
* Unmerged path arch/powerpc/kvm/book3s_hv.c
* Unmerged path arch/powerpc/kvm/book3s_hv_uvmem.c
