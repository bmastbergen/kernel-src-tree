selftests/harness: Report skip reason

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Kees Cook <keescook@chromium.org>
commit 0ef67a888375b0d11930a9811e1152b6ebc385a8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0ef67a88.failed

Use a share memory segment to pass string information between forked
test and the test runner for the skip reason.

	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit 0ef67a888375b0d11930a9811e1152b6ebc385a8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kselftest_harness.h
diff --cc tools/testing/selftests/kselftest_harness.h
index f358cc8fddd6,438c19740838..000000000000
--- a/tools/testing/selftests/kselftest_harness.h
+++ b/tools/testing/selftests/kselftest_harness.h
@@@ -118,16 -119,18 +119,25 @@@
   * @fmt: format string
   * @...: optional arguments
   *
 - * This forces a "pass" after reporting why something is being skipped
 + * This forces a "pass" after reporting a failure with an XFAIL prefix,
   * and runs "statement", which is usually "return" or "goto skip".
   */
++<<<<<<< HEAD
 +#define XFAIL(statement, fmt, ...) do { \
 +	if (TH_LOG_ENABLED) { \
 +		fprintf(TH_LOG_STREAM, "#      XFAIL     " fmt "\n", \
 +			##__VA_ARGS__); \
++=======
+ #define SKIP(statement, fmt, ...) do { \
+ 	snprintf(_metadata->results->reason, \
+ 		 sizeof(_metadata->results->reason), fmt, ##__VA_ARGS__); \
+ 	if (TH_LOG_ENABLED) { \
+ 		fprintf(TH_LOG_STREAM, "#      SKIP     %s\n", \
+ 			_metadata->results->reason); \
++>>>>>>> 0ef67a888375 (selftests/harness: Report skip reason)
  	} \
 +	/* TODO: find a way to pass xfail to test runner process. */ \
  	_metadata->passed = 1; \
 -	_metadata->skip = 1; \
  	_metadata->trigger = 0; \
  	statement; \
  } while (0)
@@@ -957,8 -993,13 +973,18 @@@ void __run_test(struct __fixture_metada
  	}
  	ksft_print_msg("         %4s  %s%s%s.%s\n", t->passed ? "OK" : "FAIL",
  	       f->name, variant->name[0] ? "." : "", variant->name, t->name);
++<<<<<<< HEAD
 +	ksft_test_result(t->passed, "%s%s%s.%s\n",
 +	       f->name, variant->name[0] ? "." : "", variant->name, t->name);
++=======
+ 
+ 	if (t->skip)
+ 		ksft_test_result_skip("%s\n", t->results->reason[0] ?
+ 					t->results->reason : "unknown");
+ 	else
+ 		ksft_test_result(t->passed, "%s%s%s.%s\n",
+ 			f->name, variant->name[0] ? "." : "", variant->name, t->name);
++>>>>>>> 0ef67a888375 (selftests/harness: Report skip reason)
  }
  
  static int test_harness_run(int __attribute__((unused)) argc,
* Unmerged path tools/testing/selftests/kselftest_harness.h
