drm/amd/display: Fix RV2 Variant Detection

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Michael Strauss <michael.strauss@amd.com>
commit 41ef3dcd86443fab3f0ba50902d13935bc12d24f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/41ef3dcd.failed

[WHY]
RV2 and variants are indistinguishable by hw internal rev alone, need to
be distinguishable in order to correctly set max vlevel.  Previous
detection change incorrectly checked for hw internal rev.

[HOW]
Use pci revision to check if RV2 or low power variant Correct a few
overlapping ASICREV range checks

	Signed-off-by: Michael Strauss <michael.strauss@amd.com>
	Reviewed-by: Michael Strauss <Michael.Strauss@amd.com>
	Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
	Acked-by: Harry Wentland <harry.wentland@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 41ef3dcd86443fab3f0ba50902d13935bc12d24f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
#	drivers/gpu/drm/amd/display/dc/clk_mgr/clk_mgr.c
#	drivers/gpu/drm/amd/display/include/dal_asic_id.h
diff --cc drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
index 38365dd911a3,f0f07b160152..000000000000
--- a/drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
+++ b/drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
@@@ -705,6 -702,25 +705,28 @@@ static void hack_bounding_box(struct dc
  		hack_force_pipe_split(v, context->streams[0]->timing.pix_clk_100hz);
  }
  
++<<<<<<< HEAD
++=======
+ 
+ unsigned int get_highest_allowed_voltage_level(uint32_t hw_internal_rev, uint32_t pci_revision_id)
+ {
+ 	/* for low power RV2 variants, the highest voltage level we want is 0 */
+ 	if (ASICREV_IS_RAVEN2(hw_internal_rev))
+ 		switch (pci_revision_id) {
+ 		case PRID_DALI_DE:
+ 		case PRID_DALI_DF:
+ 		case PRID_DALI_E3:
+ 		case PRID_DALI_E4:
+ 			return 0;
+ 		default:
+ 			break;
+ 		}
+ 
+ 	/* we are ok with all levels */
+ 	return 4;
+ }
+ 
++>>>>>>> 41ef3dcd8644 (drm/amd/display: Fix RV2 Variant Detection)
  bool dcn_validate_bandwidth(
  		struct dc *dc,
  		struct dc_state *context,
@@@ -1268,7 -1285,9 +1290,13 @@@
  	PERFORMANCE_TRACE_END();
  	BW_VAL_TRACE_FINISH();
  
++<<<<<<< HEAD
 +	if (bw_limit_pass && v->voltage_level != 5)
++=======
+ 	if (bw_limit_pass && v->voltage_level <= get_highest_allowed_voltage_level(
+ 							dc->ctx->asic_id.hw_internal_rev,
+ 							dc->ctx->asic_id.pci_revision_id))
++>>>>>>> 41ef3dcd8644 (drm/amd/display: Fix RV2 Variant Detection)
  		return true;
  	else
  		return false;
diff --cc drivers/gpu/drm/amd/display/dc/clk_mgr/clk_mgr.c
index 6b8fc5cbabb8,8ec2dfe45d40..000000000000
--- a/drivers/gpu/drm/amd/display/dc/clk_mgr/clk_mgr.c
+++ b/drivers/gpu/drm/amd/display/dc/clk_mgr/clk_mgr.c
@@@ -106,8 -151,12 +106,15 @@@ struct clk_mgr *dc_clk_mgr_create(struc
  			dce120_clk_mgr_construct(ctx, clk_mgr);
  		break;
  
 -#if defined(CONFIG_DRM_AMD_DC_DCN)
 +#if defined(CONFIG_DRM_AMD_DC_DCN1_0)
  	case FAMILY_RV:
++<<<<<<< HEAD
++=======
+ 		if (ASICREV_IS_RENOIR(asic_id.hw_internal_rev)) {
+ 			rn_clk_mgr_construct(ctx, clk_mgr, pp_smu, dccg);
+ 			break;
+ 		}
++>>>>>>> 41ef3dcd8644 (drm/amd/display: Fix RV2 Variant Detection)
  		if (ASICREV_IS_RAVEN2(asic_id.hw_internal_rev)) {
  			rv2_clk_mgr_construct(ctx, clk_mgr, pp_smu);
  			break;
diff --cc drivers/gpu/drm/amd/display/include/dal_asic_id.h
index 887e6a8597c4,ea7015f869c9..000000000000
--- a/drivers/gpu/drm/amd/display/include/dal_asic_id.h
+++ b/drivers/gpu/drm/amd/display/include/dal_asic_id.h
@@@ -134,16 -134,31 +134,45 @@@
  #define PICASSO_A0 0x41
  /* DCN1_01 */
  #define RAVEN2_A0 0x81
++<<<<<<< HEAD
 +#define RAVEN1_F0 0xF0
 +#define RAVEN_UNKNOWN 0xFF
++=======
+ #define RAVEN2_15D8_REV_94 0x94
+ #define RAVEN2_15D8_REV_95 0x95
+ #define RAVEN2_15D8_REV_E9 0xE9
+ #define RAVEN2_15D8_REV_EA 0xEA
+ #define RAVEN2_15D8_REV_EB 0xEB
+ #define RAVEN1_F0 0xF0
+ #define RAVEN_UNKNOWN 0xFF
+ #ifndef ASICREV_IS_RAVEN
+ #define ASICREV_IS_RAVEN(eChipRev) ((eChipRev >= RAVEN_A0) && eChipRev < RAVEN_UNKNOWN)
+ #endif
+ #define PRID_DALI_DE 0xDE
+ #define PRID_DALI_DF 0xDF
+ #define PRID_DALI_E3 0xE3
+ #define PRID_DALI_E4 0xE4
++>>>>>>> 41ef3dcd8644 (drm/amd/display: Fix RV2 Variant Detection)
  
 +#define ASICREV_IS_RAVEN(eChipRev) ((eChipRev >= RAVEN_A0) && eChipRev < RAVEN_UNKNOWN)
  #define ASICREV_IS_PICASSO(eChipRev) ((eChipRev >= PICASSO_A0) && (eChipRev < RAVEN2_A0))
++<<<<<<< HEAD
 +#define ASICREV_IS_RAVEN2(eChipRev) ((eChipRev >= RAVEN2_A0) && (eChipRev < 0xF0))
 +
 +
 +#define ASICREV_IS_RV1_F0(eChipRev) ((eChipRev >= RAVEN1_F0) && (eChipRev < RAVEN_UNKNOWN))
 +
++=======
+ #ifndef ASICREV_IS_RAVEN2
+ #define ASICREV_IS_RAVEN2(eChipRev) ((eChipRev >= RAVEN2_A0) && (eChipRev < RENOIR_A0))
+ #endif
+ #define ASICREV_IS_RV1_F0(eChipRev) ((eChipRev >= RAVEN1_F0) && (eChipRev < RAVEN_UNKNOWN))
+ #define ASICREV_IS_POLLOCK(eChipRev) (eChipRev == RAVEN2_15D8_REV_94 \
+ 		|| eChipRev == RAVEN2_15D8_REV_95 \
+ 			|| eChipRev == RAVEN2_15D8_REV_E9 \
+ 				|| eChipRev == RAVEN2_15D8_REV_EA \
+ 					|| eChipRev == RAVEN2_15D8_REV_EB)
++>>>>>>> 41ef3dcd8644 (drm/amd/display: Fix RV2 Variant Detection)
  
  #define FAMILY_RV 142 /* DCN 1*/
  
@@@ -151,7 -165,19 +180,23 @@@
  
  #define FAMILY_NV 143 /* DCN 2*/
  
++<<<<<<< HEAD
 +#endif
++=======
+ enum {
+ 	NV_NAVI10_P_A0      = 1,
+ 	NV_NAVI12_P_A0      = 10,
+ 	NV_NAVI14_M_A0      = 20,
+ 	NV_UNKNOWN          = 0xFF
+ };
+ 
+ #define ASICREV_IS_NAVI10_P(eChipRev)        (eChipRev < NV_NAVI12_P_A0)
+ #define ASICREV_IS_NAVI12_P(eChipRev)        ((eChipRev >= NV_NAVI12_P_A0) && (eChipRev < NV_NAVI14_M_A0))
+ #define ASICREV_IS_NAVI14_M(eChipRev)        ((eChipRev >= NV_NAVI14_M_A0) && (eChipRev < NV_UNKNOWN))
+ #define RENOIR_A0 0x91
+ #define DEVICE_ID_RENOIR_1636 0x1636   // Renoir
+ #define ASICREV_IS_RENOIR(eChipRev) ((eChipRev >= RENOIR_A0) && (eChipRev < RAVEN1_F0))
++>>>>>>> 41ef3dcd8644 (drm/amd/display: Fix RV2 Variant Detection)
  
  /*
   * ASIC chip ID
* Unmerged path drivers/gpu/drm/amd/display/dc/calcs/dcn_calcs.c
* Unmerged path drivers/gpu/drm/amd/display/dc/clk_mgr/clk_mgr.c
* Unmerged path drivers/gpu/drm/amd/display/include/dal_asic_id.h
