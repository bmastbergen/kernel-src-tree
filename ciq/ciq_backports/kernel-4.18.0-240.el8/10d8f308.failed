cec: add cec_adapter to cec_notifier_cec_adap_unregister()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Hans Verkuil <hverkuil-cisco@xs4all.nl>
commit 10d8f308ba3e4d2c8753dd7a143af6f4a96cc29b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/10d8f308.failed

It is possible for one HDMI connector to have multiple CEC adapters. The
typical real-world scenario is that where one adapter is used when the
device is in standby, and one that's better/smarter when the device is
powered up.

The cec-notifier changes were made with that in mind, but I missed that in
order to support this you need to tell cec_notifier_cec_adap_unregister()
which adapter you are unregistering from the notifier.

Add this additional argument. It is currently unused, but once all drivers
use this, the CEC core will be adapted for these use-cases.

	Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
	Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Acked-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Link: https://patchwork.freedesktop.org/patch/msgid/e9fc8740-6be6-43a7-beee-ce2d7b54936e@xs4all.nl
(cherry picked from commit 10d8f308ba3e4d2c8753dd7a143af6f4a96cc29b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/bridge/synopsys/dw-hdmi-cec.c
#	drivers/gpu/drm/i2c/tda9950.c
#	drivers/media/platform/cros-ec-cec/cros-ec-cec.c
#	drivers/media/platform/meson/ao-cec-g12a.c
#	drivers/media/platform/meson/ao-cec.c
#	drivers/media/platform/s5p-cec/s5p_cec.c
#	drivers/media/platform/seco-cec/seco-cec.c
#	drivers/media/platform/sti/cec/stih-cec.c
#	drivers/media/platform/tegra-cec/tegra_cec.c
diff --cc drivers/gpu/drm/bridge/synopsys/dw-hdmi-cec.c
index 0f949978d3fc,70ab4fbdc23e..000000000000
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-cec.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-cec.c
@@@ -284,7 -285,7 +284,11 @@@ static int dw_hdmi_cec_probe(struct pla
  
  	ret = cec_register_adapter(cec->adap, pdev->dev.parent);
  	if (ret < 0) {
++<<<<<<< HEAD
 +		cec_notifier_put(cec->notify);
++=======
+ 		cec_notifier_cec_adap_unregister(cec->notify, cec->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  		return ret;
  	}
  
@@@ -303,8 -302,8 +307,12 @@@ static int dw_hdmi_cec_remove(struct pl
  {
  	struct dw_hdmi_cec *cec = platform_get_drvdata(pdev);
  
++<<<<<<< HEAD
++=======
+ 	cec_notifier_cec_adap_unregister(cec->notify, cec->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_unregister_adapter(cec->adap);
 +	cec_notifier_put(cec->notify);
  
  	return 0;
  }
diff --cc drivers/gpu/drm/i2c/tda9950.c
index 8039fc0d83db,5b03fdd1eaa4..000000000000
--- a/drivers/gpu/drm/i2c/tda9950.c
+++ b/drivers/gpu/drm/i2c/tda9950.c
@@@ -463,7 -465,7 +463,11 @@@ static int tda9950_probe(struct i2c_cli
  
  	ret = cec_register_adapter(priv->adap, priv->hdmi);
  	if (ret < 0) {
++<<<<<<< HEAD
 +		cec_notifier_put(priv->notify);
++=======
+ 		cec_notifier_cec_adap_unregister(priv->notify, priv->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  		return ret;
  	}
  
@@@ -482,8 -482,8 +486,12 @@@ static int tda9950_remove(struct i2c_cl
  {
  	struct tda9950_priv *priv = i2c_get_clientdata(client);
  
++<<<<<<< HEAD
++=======
+ 	cec_notifier_cec_adap_unregister(priv->notify, priv->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_unregister_adapter(priv->adap);
 +	cec_notifier_put(priv->notify);
  
  	return 0;
  }
diff --cc drivers/media/platform/meson/ao-cec.c
index 8040a6285c3f,92859a6d006f..000000000000
--- a/drivers/media/platform/meson/ao-cec.c
+++ b/drivers/media/platform/meson/ao-cec.c
@@@ -698,6 -687,9 +698,12 @@@ static int meson_ao_cec_probe(struct pl
  out_probe_clk:
  	clk_disable_unprepare(ao_cec->core);
  
++<<<<<<< HEAD
++=======
+ out_probe_notify:
+ 	cec_notifier_cec_adap_unregister(ao_cec->notify, ao_cec->adap);
+ 
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  out_probe_adapter:
  	cec_delete_adapter(ao_cec->adap);
  
@@@ -715,10 -704,9 +721,14 @@@ static int meson_ao_cec_remove(struct p
  
  	clk_disable_unprepare(ao_cec->core);
  
++<<<<<<< HEAD
++=======
+ 	cec_notifier_cec_adap_unregister(ao_cec->notify, ao_cec->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_unregister_adapter(ao_cec->adap);
  
 +	cec_notifier_put(ao_cec->notify);
 +
  	return 0;
  }
  
diff --cc drivers/media/platform/s5p-cec/s5p_cec.c
index 8837e2678bde,2a3e7ffefe0a..000000000000
--- a/drivers/media/platform/s5p-cec/s5p_cec.c
+++ b/drivers/media/platform/s5p-cec/s5p_cec.c
@@@ -246,6 -238,9 +246,12 @@@ static int s5p_cec_probe(struct platfor
  	dev_dbg(dev, "successfully probed\n");
  	return 0;
  
++<<<<<<< HEAD
++=======
+ err_notifier:
+ 	cec_notifier_cec_adap_unregister(cec->notifier, cec->adap);
+ 
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  err_delete_adapter:
  	cec_delete_adapter(cec->adap);
  	return ret;
@@@ -255,8 -250,8 +261,12 @@@ static int s5p_cec_remove(struct platfo
  {
  	struct s5p_cec_dev *cec = platform_get_drvdata(pdev);
  
++<<<<<<< HEAD
++=======
+ 	cec_notifier_cec_adap_unregister(cec->notifier, cec->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_unregister_adapter(cec->adap);
 +	cec_notifier_put(cec->notifier);
  	pm_runtime_disable(&pdev->dev);
  	return 0;
  }
diff --cc drivers/media/platform/sti/cec/stih-cec.c
index d34099f75990,f0c73e64b586..000000000000
--- a/drivers/media/platform/sti/cec/stih-cec.c
+++ b/drivers/media/platform/sti/cec/stih-cec.c
@@@ -363,14 -357,21 +363,28 @@@ static int stih_cec_probe(struct platfo
  
  	platform_set_drvdata(pdev, cec);
  	return 0;
++<<<<<<< HEAD
++=======
+ 
+ err_notifier:
+ 	cec_notifier_cec_adap_unregister(cec->notifier, cec->adap);
+ 
+ err_delete_adapter:
+ 	cec_delete_adapter(cec->adap);
+ 	return ret;
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  }
  
  static int stih_cec_remove(struct platform_device *pdev)
  {
  	struct stih_cec *cec = platform_get_drvdata(pdev);
  
++<<<<<<< HEAD
++=======
+ 	cec_notifier_cec_adap_unregister(cec->notifier, cec->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_unregister_adapter(cec->adap);
 +	cec_notifier_put(cec->notifier);
  
  	return 0;
  }
diff --cc drivers/media/platform/tegra-cec/tegra_cec.c
index aba488cd0e64,a99caac59f44..000000000000
--- a/drivers/media/platform/tegra-cec/tegra_cec.c
+++ b/drivers/media/platform/tegra-cec/tegra_cec.c
@@@ -417,18 -395,24 +417,24 @@@ static int tegra_cec_probe(struct platf
  	ret = cec_register_adapter(cec->adap, &pdev->dev);
  	if (ret) {
  		dev_err(&pdev->dev, "Couldn't register device\n");
 -		goto err_notifier;
 +		goto cec_error;
  	}
  
 +	cec_register_cec_notifier(cec->adap, cec->notifier);
 +
  	return 0;
  
++<<<<<<< HEAD
 +cec_error:
 +	if (cec->notifier)
 +		cec_notifier_put(cec->notifier);
++=======
+ err_notifier:
+ 	cec_notifier_cec_adap_unregister(cec->notifier, cec->adap);
+ err_adapter:
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_delete_adapter(cec->adap);
 -err_clk:
 +clk_error:
  	clk_disable_unprepare(cec->clk);
  	return ret;
  }
@@@ -439,8 -423,8 +445,12 @@@ static int tegra_cec_remove(struct plat
  
  	clk_disable_unprepare(cec->clk);
  
++<<<<<<< HEAD
++=======
+ 	cec_notifier_cec_adap_unregister(cec->notifier, cec->adap);
++>>>>>>> 10d8f308ba3e (cec: add cec_adapter to cec_notifier_cec_adap_unregister())
  	cec_unregister_adapter(cec->adap);
 +	cec_notifier_put(cec->notifier);
  
  	return 0;
  }
* Unmerged path drivers/media/platform/cros-ec-cec/cros-ec-cec.c
* Unmerged path drivers/media/platform/meson/ao-cec-g12a.c
* Unmerged path drivers/media/platform/seco-cec/seco-cec.c
* Unmerged path drivers/gpu/drm/bridge/synopsys/dw-hdmi-cec.c
* Unmerged path drivers/gpu/drm/i2c/tda9950.c
diff --git a/drivers/media/cec/cec-notifier.c b/drivers/media/cec/cec-notifier.c
index 4d82a5522072..7cf42b133dbc 100644
--- a/drivers/media/cec/cec-notifier.c
+++ b/drivers/media/cec/cec-notifier.c
@@ -153,13 +153,14 @@ cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
 }
 EXPORT_SYMBOL_GPL(cec_notifier_cec_adap_register);
 
-void cec_notifier_cec_adap_unregister(struct cec_notifier *n)
+void cec_notifier_cec_adap_unregister(struct cec_notifier *n,
+				      struct cec_adapter *adap)
 {
 	if (!n)
 		return;
 
 	mutex_lock(&n->lock);
-	n->cec_adap->notifier = NULL;
+	adap->notifier = NULL;
 	n->cec_adap = NULL;
 	n->callback = NULL;
 	mutex_unlock(&n->lock);
* Unmerged path drivers/media/platform/cros-ec-cec/cros-ec-cec.c
* Unmerged path drivers/media/platform/meson/ao-cec-g12a.c
* Unmerged path drivers/media/platform/meson/ao-cec.c
* Unmerged path drivers/media/platform/s5p-cec/s5p_cec.c
* Unmerged path drivers/media/platform/seco-cec/seco-cec.c
* Unmerged path drivers/media/platform/sti/cec/stih-cec.c
* Unmerged path drivers/media/platform/tegra-cec/tegra_cec.c
diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 07af4a38b980..e16837662790 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -93,8 +93,10 @@ cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
  * cec_notifier_cec_adap_unregister - decrease refcount and delete when the
  * refcount reaches 0.
  * @n: notifier. If NULL, then this function does nothing.
+ * @adap: the cec adapter that registered this notifier.
  */
-void cec_notifier_cec_adap_unregister(struct cec_notifier *n);
+void cec_notifier_cec_adap_unregister(struct cec_notifier *n,
+				      struct cec_adapter *adap);
 
 /**
  * cec_notifier_set_phys_addr - set a new physical address.
@@ -184,7 +186,8 @@ cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
 	return (struct cec_notifier *)0xdeadfeed;
 }
 
-static inline void cec_notifier_cec_adap_unregister(struct cec_notifier *n)
+static inline void cec_notifier_cec_adap_unregister(struct cec_notifier *n,
+						    struct cec_adapter *adap)
 {
 }
 
