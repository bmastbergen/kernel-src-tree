drm/i915/dp/tgl+: Update combo phy vswing tables

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author José Roberto de Souza <jose.souza@intel.com>
commit bd3cf6f7ce209a48e55670cc4b95f16fa057a0bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/bd3cf6f7.failed

TGL has now a table for RBR and HBR and another table for HBR2 over
combo phys. The HBR2 one has some small changes comparing to the ICL
one, so adding two new tables and adding a function to return TGL
combo phy tables.

v2:
- reordered the tgl_combo_phy_ddi_translations_dp_hbr2 to reduce diff
(Matt)
- removed definition of rates, kept using raw number(Jani and Ville)
- changed code to use icl_get_combo_buf_trans() for non-DP as those
are equal between TGL and ICL(Matt)

BSpec: 49291
	Cc: Lucas De Marchi <lucas.demarchi@intel.com>
	Cc: Matt Roper <matthew.d.roper@intel.com>
	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Cc: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
	Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200110233902.154960-1-jose.souza@intel.com
(cherry picked from commit bd3cf6f7ce209a48e55670cc4b95f16fa057a0bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/display/intel_ddi.c
diff --cc drivers/gpu/drm/i915/display/intel_ddi.c
index fd58aa20d02e,32ea3c7e8b62..000000000000
--- a/drivers/gpu/drm/i915/display/intel_ddi.c
+++ b/drivers/gpu/drm/i915/display/intel_ddi.c
@@@ -585,6 -588,68 +585,71 @@@ static const struct icl_mg_phy_ddi_buf_
  	{ 0x0, 0x00, 0x00 },	/* 3              0   */
  };
  
++<<<<<<< HEAD
++=======
+ struct tgl_dkl_phy_ddi_buf_trans {
+ 	u32 dkl_vswing_control;
+ 	u32 dkl_preshoot_control;
+ 	u32 dkl_de_emphasis_control;
+ };
+ 
+ static const struct tgl_dkl_phy_ddi_buf_trans tgl_dkl_phy_dp_ddi_trans[] = {
+ 				/* VS	pre-emp	Non-trans mV	Pre-emph dB */
+ 	{ 0x7, 0x0, 0x00 },	/* 0	0	400mV		0 dB */
+ 	{ 0x5, 0x0, 0x03 },	/* 0	1	400mV		3.5 dB */
+ 	{ 0x2, 0x0, 0x0b },	/* 0	2	400mV		6 dB */
+ 	{ 0x0, 0x0, 0x19 },	/* 0	3	400mV		9.5 dB */
+ 	{ 0x5, 0x0, 0x00 },	/* 1	0	600mV		0 dB */
+ 	{ 0x2, 0x0, 0x03 },	/* 1	1	600mV		3.5 dB */
+ 	{ 0x0, 0x0, 0x14 },	/* 1	2	600mV		6 dB */
+ 	{ 0x2, 0x0, 0x00 },	/* 2	0	800mV		0 dB */
+ 	{ 0x0, 0x0, 0x0B },	/* 2	1	800mV		3.5 dB */
+ 	{ 0x0, 0x0, 0x00 },	/* 3	0	1200mV		0 dB HDMI default */
+ };
+ 
+ static const struct tgl_dkl_phy_ddi_buf_trans tgl_dkl_phy_hdmi_ddi_trans[] = {
+ 				/* HDMI Preset	VS	Pre-emph */
+ 	{ 0x7, 0x0, 0x0 },	/* 1		400mV	0dB */
+ 	{ 0x6, 0x0, 0x0 },	/* 2		500mV	0dB */
+ 	{ 0x4, 0x0, 0x0 },	/* 3		650mV	0dB */
+ 	{ 0x2, 0x0, 0x0 },	/* 4		800mV	0dB */
+ 	{ 0x0, 0x0, 0x0 },	/* 5		1000mV	0dB */
+ 	{ 0x0, 0x0, 0x5 },	/* 6		Full	-1.5 dB */
+ 	{ 0x0, 0x0, 0x6 },	/* 7		Full	-1.8 dB */
+ 	{ 0x0, 0x0, 0x7 },	/* 8		Full	-2 dB */
+ 	{ 0x0, 0x0, 0x8 },	/* 9		Full	-2.5 dB */
+ 	{ 0x0, 0x0, 0xA },	/* 10		Full	-3 dB */
+ };
+ 
+ static const struct cnl_ddi_buf_trans tgl_combo_phy_ddi_translations_dp_hbr[] = {
+ 						/* NT mV Trans mV db    */
+ 	{ 0xA, 0x32, 0x3F, 0x00, 0x00 },	/* 350   350      0.0   */
+ 	{ 0xA, 0x4F, 0x37, 0x00, 0x08 },	/* 350   500      3.1   */
+ 	{ 0xC, 0x71, 0x2F, 0x00, 0x10 },	/* 350   700      6.0   */
+ 	{ 0x6, 0x7D, 0x2B, 0x00, 0x14 },	/* 350   900      8.2   */
+ 	{ 0xA, 0x4C, 0x3F, 0x00, 0x00 },	/* 500   500      0.0   */
+ 	{ 0xC, 0x73, 0x34, 0x00, 0x0B },	/* 500   700      2.9   */
+ 	{ 0x6, 0x7F, 0x2F, 0x00, 0x10 },	/* 500   900      5.1   */
+ 	{ 0xC, 0x6C, 0x3C, 0x00, 0x03 },	/* 650   700      0.6   */
+ 	{ 0x6, 0x7F, 0x35, 0x00, 0x0A },	/* 600   900      3.5   */
+ 	{ 0x6, 0x7F, 0x3F, 0x00, 0x00 },	/* 900   900      0.0   */
+ };
+ 
+ static const struct cnl_ddi_buf_trans tgl_combo_phy_ddi_translations_dp_hbr2[] = {
+ 						/* NT mV Trans mV db    */
+ 	{ 0xA, 0x35, 0x3F, 0x00, 0x00 },	/* 350   350      0.0   */
+ 	{ 0xA, 0x4F, 0x37, 0x00, 0x08 },	/* 350   500      3.1   */
+ 	{ 0xC, 0x63, 0x2F, 0x00, 0x10 },	/* 350   700      6.0   */
+ 	{ 0x6, 0x7F, 0x2B, 0x00, 0x14 },	/* 350   900      8.2   */
+ 	{ 0xA, 0x47, 0x3F, 0x00, 0x00 },	/* 500   500      0.0   */
+ 	{ 0xC, 0x63, 0x34, 0x00, 0x0B },	/* 500   700      2.9   */
+ 	{ 0x6, 0x7F, 0x2F, 0x00, 0x10 },	/* 500   900      5.1   */
+ 	{ 0xC, 0x61, 0x3C, 0x00, 0x03 },	/* 650   700      0.6   */
+ 	{ 0x6, 0x7B, 0x35, 0x00, 0x0A },	/* 600   900      3.5   */
+ 	{ 0x6, 0x7F, 0x3F, 0x00, 0x00 },	/* 900   900      0.0   */
+ };
+ 
++>>>>>>> bd3cf6f7ce20 (drm/i915/dp/tgl+: Update combo phy vswing tables)
  static const struct ddi_buf_trans *
  bdw_get_buf_trans_edp(struct drm_i915_private *dev_priv, int *n_entries)
  {
@@@ -864,15 -929,37 +929,43 @@@ icl_get_combo_buf_trans(struct drm_i915
  	return icl_combo_phy_ddi_translations_dp_hbr2;
  }
  
+ static const struct cnl_ddi_buf_trans *
+ tgl_get_combo_buf_trans(struct drm_i915_private *dev_priv, int type, int rate,
+ 			int *n_entries)
+ {
+ 	if (type != INTEL_OUTPUT_DP) {
+ 		return icl_get_combo_buf_trans(dev_priv, type, rate, n_entries);
+ 	} else if (rate > 270000) {
+ 		*n_entries = ARRAY_SIZE(tgl_combo_phy_ddi_translations_dp_hbr2);
+ 		return tgl_combo_phy_ddi_translations_dp_hbr2;
+ 	}
+ 
+ 	*n_entries = ARRAY_SIZE(tgl_combo_phy_ddi_translations_dp_hbr);
+ 	return tgl_combo_phy_ddi_translations_dp_hbr;
+ }
+ 
  static int intel_ddi_hdmi_level(struct drm_i915_private *dev_priv, enum port port)
  {
 -	struct ddi_vbt_port_info *port_info = &dev_priv->vbt.ddi_port_info[port];
  	int n_entries, level, default_entry;
 -	enum phy phy = intel_port_to_phy(dev_priv, port);
  
++<<<<<<< HEAD
 +	level = dev_priv->vbt.ddi_port_info[port].hdmi_level_shift;
 +
 +	if (INTEL_GEN(dev_priv) >= 11) {
 +		if (intel_port_is_combophy(dev_priv, port))
 +			icl_get_combo_buf_trans(dev_priv, port, INTEL_OUTPUT_HDMI,
++=======
+ 	if (INTEL_GEN(dev_priv) >= 12) {
+ 		if (intel_phy_is_combo(dev_priv, phy))
+ 			tgl_get_combo_buf_trans(dev_priv, INTEL_OUTPUT_HDMI,
+ 						0, &n_entries);
+ 		else
+ 			n_entries = ARRAY_SIZE(tgl_dkl_phy_hdmi_ddi_trans);
+ 		default_entry = n_entries - 1;
+ 	} else if (INTEL_GEN(dev_priv) == 11) {
+ 		if (intel_phy_is_combo(dev_priv, phy))
+ 			icl_get_combo_buf_trans(dev_priv, INTEL_OUTPUT_HDMI,
++>>>>>>> bd3cf6f7ce20 (drm/i915/dp/tgl+: Update combo phy vswing tables)
  						0, &n_entries);
  		else
  			n_entries = ARRAY_SIZE(icl_mg_phy_ddi_translations);
@@@ -2225,13 -2408,20 +2318,25 @@@ static void bxt_ddi_vswing_sequence(str
  u8 intel_ddi_dp_voltage_max(struct intel_encoder *encoder)
  {
  	struct drm_i915_private *dev_priv = to_i915(encoder->base.dev);
 -	struct intel_dp *intel_dp = enc_to_intel_dp(encoder);
 +	struct intel_dp *intel_dp = enc_to_intel_dp(&encoder->base);
  	enum port port = encoder->port;
 -	enum phy phy = intel_port_to_phy(dev_priv, port);
  	int n_entries;
  
++<<<<<<< HEAD
 +	if (INTEL_GEN(dev_priv) >= 11) {
 +		if (intel_port_is_combophy(dev_priv, port))
 +			icl_get_combo_buf_trans(dev_priv, port, encoder->type,
++=======
+ 	if (INTEL_GEN(dev_priv) >= 12) {
+ 		if (intel_phy_is_combo(dev_priv, phy))
+ 			tgl_get_combo_buf_trans(dev_priv, encoder->type,
+ 						intel_dp->link_rate, &n_entries);
+ 		else
+ 			n_entries = ARRAY_SIZE(tgl_dkl_phy_dp_ddi_trans);
+ 	} else if (INTEL_GEN(dev_priv) == 11) {
+ 		if (intel_phy_is_combo(dev_priv, phy))
+ 			icl_get_combo_buf_trans(dev_priv, encoder->type,
++>>>>>>> bd3cf6f7ce20 (drm/i915/dp/tgl+: Update combo phy vswing tables)
  						intel_dp->link_rate, &n_entries);
  		else
  			n_entries = ARRAY_SIZE(icl_mg_phy_ddi_translations);
@@@ -2420,8 -2610,12 +2525,17 @@@ static void icl_ddi_combo_vswing_progra
  	u32 n_entries, val;
  	int ln;
  
++<<<<<<< HEAD
 +	ddi_translations = icl_get_combo_buf_trans(dev_priv, port, type,
 +						   rate, &n_entries);
++=======
+ 	if (INTEL_GEN(dev_priv) >= 12)
+ 		ddi_translations = tgl_get_combo_buf_trans(dev_priv, type, rate,
+ 							   &n_entries);
+ 	else
+ 		ddi_translations = icl_get_combo_buf_trans(dev_priv, type, rate,
+ 							   &n_entries);
++>>>>>>> bd3cf6f7ce20 (drm/i915/dp/tgl+: Update combo phy vswing tables)
  	if (!ddi_translations)
  		return;
  
* Unmerged path drivers/gpu/drm/i915/display/intel_ddi.c
