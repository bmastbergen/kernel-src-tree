libperf: Move 'sample_id' from 'struct evsel' to 'struct perf_evsel'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 8cd36f3ef4926165bc5e5af6f7d7b45f0e14a1f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8cd36f3e.failed

Move 'sample_id' array from 'struct evsel' to libperf's 'struct perf_evsel'.

Committer notes:

Removed the 'struct xyarray' from util/evsel.h, not needed anymore
there.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-24-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 8cd36f3ef4926165bc5e5af6f7d7b45f0e14a1f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/include/internal/evsel.h
#	tools/perf/util/evlist.c
#	tools/perf/util/evsel.h
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,84b409802298..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -42,11 -49,11 +42,16 @@@
  int sigqueue(pid_t pid, int sig, const union sigval value);
  #endif
  
++<<<<<<< HEAD
 +#define FD(e, x, y) (*(int *)xyarray__entry(e->fd, x, y))
 +#define SID(e, x, y) xyarray__entry(e->sample_id, x, y)
++=======
+ #define FD(e, x, y) (*(int *)xyarray__entry(e->core.fd, x, y))
+ #define SID(e, x, y) xyarray__entry(e->core.sample_id, x, y)
++>>>>>>> 8cd36f3ef492 (libperf: Move 'sample_id' from 'struct evsel' to 'struct perf_evsel')
  
 -void evlist__init(struct evlist *evlist, struct perf_cpu_map *cpus,
 -		  struct perf_thread_map *threads)
 +void perf_evlist__init(struct perf_evlist *evlist, struct cpu_map *cpus,
 +		       struct thread_map *threads)
  {
  	int i;
  
@@@ -1042,9 -1020,9 +1047,15 @@@ int perf_evlist__mmap_ex(struct perf_ev
  				   auxtrace_pages, auxtrace_overwrite);
  
  	evlist__for_each_entry(evlist, evsel) {
++<<<<<<< HEAD
 +		if ((evsel->attr.read_format & PERF_FORMAT_ID) &&
 +		    evsel->sample_id == NULL &&
 +		    perf_evsel__alloc_id(evsel, cpu_map__nr(cpus), threads->nr) < 0)
++=======
+ 		if ((evsel->core.attr.read_format & PERF_FORMAT_ID) &&
+ 		    evsel->core.sample_id == NULL &&
+ 		    perf_evsel__alloc_id(evsel, perf_cpu_map__nr(cpus), threads->nr) < 0)
++>>>>>>> 8cd36f3ef492 (libperf: Move 'sample_id' from 'struct evsel' to 'struct perf_evsel')
  			return -ENOMEM;
  	}
  
diff --cc tools/perf/util/evsel.h
index fe84f1536094,2d2c6cad81f8..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -85,12 -95,12 +85,16 @@@ enum perf_tool_event 
  };
  
  struct bpf_object;
++<<<<<<< HEAD
++=======
+ struct perf_counts;
++>>>>>>> 8cd36f3ef492 (libperf: Move 'sample_id' from 'struct evsel' to 'struct perf_evsel')
  
 -/** struct evsel - event selector
 +/** struct perf_evsel - event selector
   *
   * @evlist - evlist this evsel is in, if it is in one.
 - * @core - libperf evsel object
 + * @node - To insert it into evlist->entries or in other list_heads, say in
 + *         the event parsing routines.
   * @name - Can be set to retain the original event name passed by the user,
   *         so that when showing results in tools such as 'perf stat', we
   *         show the name used, not some alias.
@@@ -102,13 -112,10 +106,16 @@@
   *          is used there is an id sample appended to non-sample events
   * @priv:   And what is in its containing unnamed union are tool specific
   */
 -struct evsel {
 -	struct perf_evsel	core;
 -	struct evlist	*evlist;
 +struct perf_evsel {
 +	struct list_head	node;
 +	struct perf_evlist	*evlist;
 +	struct perf_event_attr	attr;
  	char			*filter;
++<<<<<<< HEAD
 +	struct xyarray		*fd;
 +	struct xyarray		*sample_id;
++=======
++>>>>>>> 8cd36f3ef492 (libperf: Move 'sample_id' from 'struct evsel' to 'struct perf_evsel')
  	u64			*id;
  	struct perf_counts	*counts;
  	struct perf_counts	*prev_raw_counts;
* Unmerged path tools/perf/lib/include/internal/evsel.h
diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index 2d9bd49f24d6..1a18d678dd29 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -233,7 +233,7 @@ static int write_stat_round_event(u64 tm, u64 type)
 #define WRITE_STAT_ROUND_EVENT(time, interval) \
 	write_stat_round_event(time, PERF_STAT_ROUND_TYPE__ ## interval)
 
-#define SID(e, x, y) xyarray__entry(e->sample_id, x, y)
+#define SID(e, x, y) xyarray__entry(e->core.sample_id, x, y)
 
 static int
 perf_evsel__write_stat_event(struct perf_evsel *counter, u32 cpu, u32 thread,
* Unmerged path tools/perf/lib/include/internal/evsel.h
* Unmerged path tools/perf/util/evlist.c
diff --git a/tools/perf/util/evsel.c b/tools/perf/util/evsel.c
index 90bfc2303a40..b79905bde07b 100644
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@ -1271,14 +1271,14 @@ int perf_evsel__alloc_id(struct perf_evsel *evsel, int ncpus, int nthreads)
 	if (evsel->system_wide)
 		nthreads = 1;
 
-	evsel->sample_id = xyarray__new(ncpus, nthreads, sizeof(struct perf_sample_id));
-	if (evsel->sample_id == NULL)
+	evsel->core.sample_id = xyarray__new(ncpus, nthreads, sizeof(struct perf_sample_id));
+	if (evsel->core.sample_id == NULL)
 		return -ENOMEM;
 
 	evsel->id = zalloc(ncpus * nthreads * sizeof(u64));
 	if (evsel->id == NULL) {
-		xyarray__delete(evsel->sample_id);
-		evsel->sample_id = NULL;
+		xyarray__delete(evsel->core.sample_id);
+		evsel->core.sample_id = NULL;
 		return -ENOMEM;
 	}
 
@@ -1293,8 +1293,8 @@ static void perf_evsel__free_fd(struct perf_evsel *evsel)
 
 static void perf_evsel__free_id(struct perf_evsel *evsel)
 {
-	xyarray__delete(evsel->sample_id);
-	evsel->sample_id = NULL;
+	xyarray__delete(evsel->core.sample_id);
+	evsel->core.sample_id = NULL;
 	zfree(&evsel->id);
 	evsel->ids = 0;
 }
* Unmerged path tools/perf/util/evsel.h
