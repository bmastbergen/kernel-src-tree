perf/amd/uncore: Add support for Family 19h L3 PMU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Kim Phillips <kim.phillips@amd.com>
commit e48667b865480d8bf0f1171a8b474ffc785b9ace
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/e48667b8.failed

Family 19h introduces change in slice, core and thread specification in
its L3 Performance Event Select (ChL3PmcCfg) h/w register. The change is
incompatible with Family 17h's version of the register.

Introduce a new path in l3_thread_slice_mask() to do things differently
for Family 19h vs. Family 17h, otherwise the new hardware doesn't get
programmed correctly.

Instead of a linear core--thread bitmask, Family 19h takes an encoded
core number, and a separate thread mask. There are new bits that are set
for all cores and all slices, of which only the latter is used, since
the driver counts events for all slices on behalf of the specified CPU.

Also update amd_uncore_init() to base its L2/NB vs. L3/Data Fabric mode
decision based on Family 17h or above, not just 17h and 18h: the Family
19h Data Fabric PMC is compatible with the Family 17h DF PMC.

 [ bp: Touchups. ]

	Signed-off-by: Kim Phillips <kim.phillips@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Acked-by: Peter Zijlstra <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20200313231024.17601-3-kim.phillips@amd.com
(cherry picked from commit e48667b865480d8bf0f1171a8b474ffc785b9ace)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/amd/uncore.c
diff --cc arch/x86/events/amd/uncore.c
index e2a9aeb16372,46018e515fe2..000000000000
--- a/arch/x86/events/amd/uncore.c
+++ b/arch/x86/events/amd/uncore.c
@@@ -532,11 -541,12 +540,20 @@@ static int __init amd_uncore_init(void
  	if (!boot_cpu_has(X86_FEATURE_TOPOEXT))
  		return -ENODEV;
  
++<<<<<<< HEAD
 +	if (boot_cpu_data.x86 == 0x17) {
 +		/*
 +		 * For F17h, the Northbridge counters are repurposed as Data
 +		 * Fabric counters. Also, L3 counters are supported too. The PMUs
 +		 * are exported based on  family as either L2 or L3 and NB or DF.
++=======
+ 	if (boot_cpu_data.x86 >= 0x17) {
+ 		/*
+ 		 * For F17h and above, the Northbridge counters are
+ 		 * repurposed as Data Fabric counters. Also, L3
+ 		 * counters are supported too. The PMUs are exported
+ 		 * based on family as either L2 or L3 and NB or DF.
++>>>>>>> e48667b86548 (perf/amd/uncore: Add support for Family 19h L3 PMU)
  		 */
  		num_counters_nb		  = NUM_COUNTERS_NB;
  		num_counters_llc	  = NUM_COUNTERS_L3;
* Unmerged path arch/x86/events/amd/uncore.c
diff --git a/arch/x86/include/asm/perf_event.h b/arch/x86/include/asm/perf_event.h
index ee26e9215f18..c5b3c137ca8c 100644
--- a/arch/x86/include/asm/perf_event.h
+++ b/arch/x86/include/asm/perf_event.h
@@ -50,11 +50,22 @@
 
 #define AMD64_L3_SLICE_SHIFT				48
 #define AMD64_L3_SLICE_MASK				\
-	((0xFULL) << AMD64_L3_SLICE_SHIFT)
+	(0xFULL << AMD64_L3_SLICE_SHIFT)
+#define AMD64_L3_SLICEID_MASK				\
+	(0x7ULL << AMD64_L3_SLICE_SHIFT)
 
 #define AMD64_L3_THREAD_SHIFT				56
 #define AMD64_L3_THREAD_MASK				\
-	((0xFFULL) << AMD64_L3_THREAD_SHIFT)
+	(0xFFULL << AMD64_L3_THREAD_SHIFT)
+#define AMD64_L3_F19H_THREAD_MASK			\
+	(0x3ULL << AMD64_L3_THREAD_SHIFT)
+
+#define AMD64_L3_EN_ALL_CORES				BIT_ULL(47)
+#define AMD64_L3_EN_ALL_SLICES				BIT_ULL(46)
+
+#define AMD64_L3_COREID_SHIFT				42
+#define AMD64_L3_COREID_MASK				\
+	(0x7ULL << AMD64_L3_COREID_SHIFT)
 
 #define X86_RAW_EVENT_MASK		\
 	(ARCH_PERFMON_EVENTSEL_EVENT |	\
