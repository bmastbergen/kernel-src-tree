powerpc/kexec_file: Mark PPC64 specific code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Hari Bathini <hbathini@linux.ibm.com>
commit 19031275a5881233b4fc31b7dee68bf0b0758bbc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/19031275.failed

Some of the kexec_file_load code isn't PPC64 specific. Move PPC64
specific code from kexec/file_load.c to kexec/file_load_64.c. Also,
rename purgatory/trampoline.S to purgatory/trampoline_64.S in the same
spirit. No functional changes.

	Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
	Tested-by: Pingfan Liu <piliu@redhat.com>
	Reviewed-by: Laurent Dufour <ldufour@linux.ibm.com>
	Reviewed-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/159602276920.575379.10390965946438306388.stgit@hbathini
(cherry picked from commit 19031275a5881233b4fc31b7dee68bf0b0758bbc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/file_load_64.c
#	arch/powerpc/kexec/Makefile
#	arch/powerpc/kexec/elf_64.c
#	arch/powerpc/purgatory/Makefile
diff --cc arch/powerpc/purgatory/Makefile
index 30e05decbb4c,348f59581052..000000000000
--- a/arch/powerpc/purgatory/Makefile
+++ b/arch/powerpc/purgatory/Makefile
@@@ -1,14 -1,16 +1,21 @@@
  # SPDX-License-Identifier: GPL-2.0
++<<<<<<< HEAD
 +targets += trampoline.o purgatory.ro kexec-purgatory.c
++=======
+ 
+ KASAN_SANITIZE := n
+ 
+ targets += trampoline_$(BITS).o purgatory.ro kexec-purgatory.c
++>>>>>>> 19031275a588 (powerpc/kexec_file: Mark PPC64 specific code)
  
  LDFLAGS_purgatory.ro := -e purgatory_start -r --no-undefined
  
- $(obj)/purgatory.ro: $(obj)/trampoline.o FORCE
+ $(obj)/purgatory.ro: $(obj)/trampoline_$(BITS).o FORCE
  		$(call if_changed,ld)
  
 +CMD_BIN2C = $(objtree)/scripts/basic/bin2c
  quiet_cmd_bin2c = BIN2C   $@
 -      cmd_bin2c = $(objtree)/scripts/bin2c kexec_purgatory < $< > $@
 +      cmd_bin2c = $(CMD_BIN2C) kexec_purgatory < $< > $@
  
  $(obj)/kexec-purgatory.c: $(obj)/purgatory.ro FORCE
  	$(call if_changed,bin2c)
* Unmerged path arch/powerpc/kernel/file_load_64.c
* Unmerged path arch/powerpc/kexec/Makefile
* Unmerged path arch/powerpc/kexec/elf_64.c
diff --git a/arch/powerpc/include/asm/kexec.h b/arch/powerpc/include/asm/kexec.h
index 4a585cba1787..3eb692af1ba9 100644
--- a/arch/powerpc/include/asm/kexec.h
+++ b/arch/powerpc/include/asm/kexec.h
@@ -113,6 +113,15 @@ int setup_new_fdt(const struct kimage *image, void *fdt,
 		  unsigned long initrd_load_addr, unsigned long initrd_len,
 		  const char *cmdline);
 int delete_fdt_mem_rsv(void *fdt, unsigned long start, unsigned long size);
+
+#ifdef CONFIG_PPC64
+int setup_purgatory_ppc64(struct kimage *image, const void *slave_code,
+			  const void *fdt, unsigned long kernel_load_addr,
+			  unsigned long fdt_load_addr);
+int setup_new_fdt_ppc64(const struct kimage *image, void *fdt,
+			unsigned long initrd_load_addr,
+			unsigned long initrd_len, const char *cmdline);
+#endif /* CONFIG_PPC64 */
 #endif /* CONFIG_KEXEC_FILE */
 
 #else /* !CONFIG_KEXEC_CORE */
* Unmerged path arch/powerpc/kernel/file_load_64.c
diff --git a/arch/powerpc/kernel/machine_kexec_file_64.c b/arch/powerpc/kernel/machine_kexec_file_64.c
index 5357b09902c5..2d5cbfe2db61 100644
--- a/arch/powerpc/kernel/machine_kexec_file_64.c
+++ b/arch/powerpc/kernel/machine_kexec_file_64.c
@@ -1,5 +1,5 @@
 /*
- * ppc64 code to implement the kexec_file_load syscall
+ * powerpc code to implement the kexec_file_load syscall
  *
  * Copyright (C) 2004  Adam Litke (agl@us.ibm.com)
  * Copyright (C) 2004  IBM Corp.
@@ -28,22 +28,7 @@
 #include <linux/libfdt.h>
 #include <asm/ima.h>
 
-#define SLAVE_CODE_SIZE		256
-
-const struct kexec_file_ops * const kexec_file_loaders[] = {
-	&kexec_elf64_ops,
-	NULL
-};
-
-int arch_kexec_kernel_image_probe(struct kimage *image, void *buf,
-				  unsigned long buf_len)
-{
-	/* We don't support crash kernels yet. */
-	if (image->type == KEXEC_TYPE_CRASH)
-		return -EOPNOTSUPP;
-
-	return kexec_image_probe_default(image, buf, buf_len);
-}
+#define SLAVE_CODE_SIZE		256	/* First 0x100 bytes */
 
 /**
  * setup_purgatory - initialize the purgatory's global variables
* Unmerged path arch/powerpc/kexec/Makefile
* Unmerged path arch/powerpc/kexec/elf_64.c
* Unmerged path arch/powerpc/purgatory/Makefile
diff --git a/arch/powerpc/purgatory/trampoline.S b/arch/powerpc/purgatory/trampoline_64.S
similarity index 100%
rename from arch/powerpc/purgatory/trampoline.S
rename to arch/powerpc/purgatory/trampoline_64.S
