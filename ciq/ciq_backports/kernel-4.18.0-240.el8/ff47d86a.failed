libperf: Add perf_evlist__read_format() function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit ff47d86a0d9bf618b185b49cb4bb9c6f957bb445
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ff47d86a.failed

Add the perf_evlist__read_format() function to libperf as internal
function.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-30-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit ff47d86a0d9bf618b185b49cb4bb9c6f957bb445)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/evlist.c
#	tools/perf/lib/include/internal/evlist.h
#	tools/perf/util/evlist.c
#	tools/perf/util/evlist.h
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,bc788192493f..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -529,10 -503,10 +529,10 @@@ int perf_evlist__id_add_fd(struct perf_
  	 * This way does not work with group format read, so bail
  	 * out in that case.
  	 */
- 	if (perf_evlist__read_format(evlist) & PERF_FORMAT_GROUP)
+ 	if (perf_evlist__read_format(&evlist->core) & PERF_FORMAT_GROUP)
  		return -1;
  
 -	if (!(evsel->core.attr.read_format & PERF_FORMAT_ID) ||
 +	if (!(evsel->attr.read_format & PERF_FORMAT_ID) ||
  	    read(fd, &read_data, sizeof(read_data)) == -1)
  		return -1;
  
@@@ -1289,15 -1240,9 +1289,19 @@@ bool perf_evlist__valid_read_format(str
  	return true;
  }
  
++<<<<<<< HEAD
 +u64 perf_evlist__read_format(struct perf_evlist *evlist)
 +{
 +	struct perf_evsel *first = perf_evlist__first(evlist);
 +	return first->attr.read_format;
 +}
 +
 +u16 perf_evlist__id_hdr_size(struct perf_evlist *evlist)
++=======
+ u16 perf_evlist__id_hdr_size(struct evlist *evlist)
++>>>>>>> ff47d86a0d9b (libperf: Add perf_evlist__read_format() function)
  {
 -	struct evsel *first = evlist__first(evlist);
 +	struct perf_evsel *first = perf_evlist__first(evlist);
  	struct perf_sample *data;
  	u64 sample_type;
  	u16 size = 0;
diff --cc tools/perf/util/evlist.h
index 49354fe24d5f,3f89d9913a30..000000000000
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@@ -179,40 -196,37 +179,48 @@@ int perf_evlist__mmap_ex(struct perf_ev
  			 unsigned int auxtrace_pages,
  			 bool auxtrace_overwrite, int nr_cblocks,
  			 int affinity, int flush, int comp_level);
 -int evlist__mmap(struct evlist *evlist, unsigned int pages);
 -void evlist__munmap(struct evlist *evlist);
 +int perf_evlist__mmap(struct perf_evlist *evlist, unsigned int pages);
 +void perf_evlist__munmap(struct perf_evlist *evlist);
  
 -size_t evlist__mmap_size(unsigned long pages);
 +size_t perf_evlist__mmap_size(unsigned long pages);
  
 -void evlist__disable(struct evlist *evlist);
 -void evlist__enable(struct evlist *evlist);
 -void perf_evlist__toggle_enable(struct evlist *evlist);
 +void perf_evlist__disable(struct perf_evlist *evlist);
 +void perf_evlist__enable(struct perf_evlist *evlist);
 +void perf_evlist__toggle_enable(struct perf_evlist *evlist);
  
 -int perf_evlist__enable_event_idx(struct evlist *evlist,
 -				  struct evsel *evsel, int idx);
 +int perf_evlist__enable_event_idx(struct perf_evlist *evlist,
 +				  struct perf_evsel *evsel, int idx);
  
 -void perf_evlist__set_selected(struct evlist *evlist,
 -			       struct evsel *evsel);
 +void perf_evlist__set_selected(struct perf_evlist *evlist,
 +			       struct perf_evsel *evsel);
  
 -int perf_evlist__create_maps(struct evlist *evlist, struct target *target);
 -int perf_evlist__apply_filters(struct evlist *evlist, struct evsel **err_evsel);
 +void perf_evlist__set_maps(struct perf_evlist *evlist, struct cpu_map *cpus,
 +			   struct thread_map *threads);
 +int perf_evlist__create_maps(struct perf_evlist *evlist, struct target *target);
 +int perf_evlist__apply_filters(struct perf_evlist *evlist, struct perf_evsel **err_evsel);
  
  void __perf_evlist__set_leader(struct list_head *list);
 -void perf_evlist__set_leader(struct evlist *evlist);
 -
 +void perf_evlist__set_leader(struct perf_evlist *evlist);
 +
++<<<<<<< HEAD
 +u64 perf_evlist__read_format(struct perf_evlist *evlist);
 +u64 __perf_evlist__combined_sample_type(struct perf_evlist *evlist);
 +u64 perf_evlist__combined_sample_type(struct perf_evlist *evlist);
 +u64 perf_evlist__combined_branch_type(struct perf_evlist *evlist);
 +bool perf_evlist__sample_id_all(struct perf_evlist *evlist);
 +u16 perf_evlist__id_hdr_size(struct perf_evlist *evlist);
++=======
+ u64 __perf_evlist__combined_sample_type(struct evlist *evlist);
+ u64 perf_evlist__combined_sample_type(struct evlist *evlist);
+ u64 perf_evlist__combined_branch_type(struct evlist *evlist);
+ bool perf_evlist__sample_id_all(struct evlist *evlist);
+ u16 perf_evlist__id_hdr_size(struct evlist *evlist);
++>>>>>>> ff47d86a0d9b (libperf: Add perf_evlist__read_format() function)
  
 -int perf_evlist__parse_sample(struct evlist *evlist, union perf_event *event,
 +int perf_evlist__parse_sample(struct perf_evlist *evlist, union perf_event *event,
  			      struct perf_sample *sample);
  
 -int perf_evlist__parse_sample_timestamp(struct evlist *evlist,
 +int perf_evlist__parse_sample_timestamp(struct perf_evlist *evlist,
  					union perf_event *event,
  					u64 *timestamp);
  
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/include/internal/evlist.h
* Unmerged path tools/perf/lib/evlist.c
* Unmerged path tools/perf/lib/include/internal/evlist.h
* Unmerged path tools/perf/util/evlist.c
* Unmerged path tools/perf/util/evlist.h
