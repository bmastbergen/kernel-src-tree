KVM: arm64: Kill off CONFIG_KVM_ARM_HOST

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Will Deacon <will@kernel.org>
commit d82755b2e781c8989614c82df7582f5649e265b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d82755b2.failed

CONFIG_KVM_ARM_HOST is just a proxy for CONFIG_KVM, so remove it in favour
of the latter.

	Signed-off-by: Will Deacon <will@kernel.org>
	Signed-off-by: Fuad Tabba <tabba@google.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20200505154520.194120-2-tabba@google.com
(cherry picked from commit d82755b2e781c8989614c82df7582f5649e265b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/cpu_errata.c
#	arch/arm64/kvm/Makefile
#	arch/arm64/kvm/hyp/Makefile
diff --cc arch/arm64/kernel/cpu_errata.c
index 9de4d99cff30,a102321fc8a2..000000000000
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@@ -229,41 -213,35 +229,45 @@@ static int detect_harden_bp_fw(void
  	struct arm_smccc_res res;
  	u32 midr = read_cpuid_id();
  
 -	arm_smccc_1_1_invoke(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,
 -			     ARM_SMCCC_ARCH_WORKAROUND_1, &res);
 -
 -	switch ((int)res.a0) {
 -	case 1:
 -		/* Firmware says we're just fine */
 -		return 0;
 -	case 0:
 -		break;
 -	default:
 -		return -1;
 -	}
 -
  	switch (arm_smccc_1_1_get_conduit()) {
  	case SMCCC_CONDUIT_HVC:
 -		cb = call_hvc_arch_workaround_1;
 -		/* This is a guest, no need to patch KVM vectors */
 -		smccc_start = NULL;
 -		smccc_end = NULL;
 +		arm_smccc_1_1_hvc(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,
 +				  ARM_SMCCC_ARCH_WORKAROUND_1, &res);
 +		switch ((int)res.a0) {
 +		case 1:
 +			/* Firmware says we're just fine */
 +			return 0;
 +		case 0:
 +			cb = call_hvc_arch_workaround_1;
 +			/* This is a guest, no need to patch KVM vectors */
 +			smccc_start = NULL;
 +			smccc_end = NULL;
 +			break;
 +		default:
 +			return -1;
 +		}
  		break;
  
++<<<<<<< HEAD
++=======
+ #if IS_ENABLED(CONFIG_KVM)
++>>>>>>> d82755b2e781 (KVM: arm64: Kill off CONFIG_KVM_ARM_HOST)
  	case SMCCC_CONDUIT_SMC:
 -		cb = call_smc_arch_workaround_1;
 -		smccc_start = __smccc_workaround_1_smc;
 -		smccc_end = __smccc_workaround_1_smc +
 -			__SMCCC_WORKAROUND_1_SMC_SZ;
 +		arm_smccc_1_1_smc(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,
 +				  ARM_SMCCC_ARCH_WORKAROUND_1, &res);
 +		switch ((int)res.a0) {
 +		case 1:
 +			/* Firmware says we're just fine */
 +			return 0;
 +		case 0:
 +			cb = call_smc_arch_workaround_1;
 +			smccc_start = __smccc_workaround_1_smc_start;
 +			smccc_end = __smccc_workaround_1_smc_end;
 +			break;
 +		default:
 +			return -1;
 +		}
  		break;
 -#endif
  
  	default:
  		return -1;
diff --cc arch/arm64/kvm/Makefile
index 3ac1a64d2fb9,419696e615b3..000000000000
--- a/arch/arm64/kvm/Makefile
+++ b/arch/arm64/kvm/Makefile
@@@ -7,31 -7,33 +7,61 @@@ ccflags-y += -I $(srctree)/$(src) -I $(
  
  KVM=../../../virt/kvm
  
- obj-$(CONFIG_KVM_ARM_HOST) += kvm.o
- obj-$(CONFIG_KVM_ARM_HOST) += hyp/
+ obj-$(CONFIG_KVM) += kvm.o
+ obj-$(CONFIG_KVM) += hyp/
  
++<<<<<<< HEAD
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/kvm_main.o $(KVM)/coalesced_mmio.o $(KVM)/eventfd.o $(KVM)/vfio.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/arm.o $(KVM)/arm/mmu.o $(KVM)/arm/mmio.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/psci.o $(KVM)/arm/perf.o
 +
 +kvm-$(CONFIG_KVM_ARM_HOST) += inject_fault.o regmap.o va_layout.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += hyp.o hyp-init.o handle_exit.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += guest.o debug.o reset.o sys_regs.o sys_regs_generic_v8.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += vgic-sys-reg-v3.o fpsimd.o pmu.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/aarch32.o
 +
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-init.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-irqfd.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-v2.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-v3.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-v4.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-mmio.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-mmio-v2.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-mmio-v3.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-kvm-device.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-its.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/vgic/vgic-debug.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/irqchip.o
 +kvm-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/arch_timer.o
 +kvm-$(CONFIG_KVM_ARM_PMU) += $(KVM)/arm/pmu.o
++=======
+ kvm-$(CONFIG_KVM) += $(KVM)/kvm_main.o $(KVM)/coalesced_mmio.o
+ kvm-$(CONFIG_KVM) += $(KVM)/eventfd.o $(KVM)/vfio.o $(KVM)/irqchip.o
+ kvm-$(CONFIG_KVM) += arm.o mmu.o mmio.o
+ kvm-$(CONFIG_KVM) += psci.o perf.o
+ kvm-$(CONFIG_KVM) += hypercalls.o
+ kvm-$(CONFIG_KVM) += pvtime.o
+ 
+ kvm-$(CONFIG_KVM) += inject_fault.o regmap.o va_layout.o
+ kvm-$(CONFIG_KVM) += hyp.o hyp-init.o handle_exit.o
+ kvm-$(CONFIG_KVM) += guest.o debug.o reset.o sys_regs.o sys_regs_generic_v8.o
+ kvm-$(CONFIG_KVM) += vgic-sys-reg-v3.o fpsimd.o pmu.o
+ kvm-$(CONFIG_KVM) += aarch32.o
+ kvm-$(CONFIG_KVM) += arch_timer.o
+ kvm-$(CONFIG_KVM_ARM_PMU)  += pmu-emul.o
+ 
+ kvm-$(CONFIG_KVM) += vgic/vgic.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-init.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-irqfd.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-v2.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-v3.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-v4.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-mmio.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-mmio-v2.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-mmio-v3.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-kvm-device.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-its.o
+ kvm-$(CONFIG_KVM) += vgic/vgic-debug.o
++>>>>>>> d82755b2e781 (KVM: arm64: Kill off CONFIG_KVM_ARM_HOST)
diff --cc arch/arm64/kvm/hyp/Makefile
index c49551d048ae,8229e47ba870..000000000000
--- a/arch/arm64/kvm/hyp/Makefile
+++ b/arch/arm64/kvm/hyp/Makefile
@@@ -3,22 -3,20 +3,36 @@@
  # Makefile for Kernel-based Virtual Machine module, HYP part
  #
  
 -ccflags-y += -fno-stack-protector -DDISABLE_BRANCH_PROFILING \
 -		$(DISABLE_STACKLEAK_PLUGIN)
 +ccflags-y += -fno-stack-protector -DDISABLE_BRANCH_PROFILING
  
 +KVM=../../../../virt/kvm
 +
 +obj-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/hyp/vgic-v3-sr.o
 +obj-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/hyp/timer-sr.o
 +obj-$(CONFIG_KVM_ARM_HOST) += $(KVM)/arm/hyp/aarch32.o
 +
++<<<<<<< HEAD
 +obj-$(CONFIG_KVM_ARM_HOST) += vgic-v2-cpuif-proxy.o
 +obj-$(CONFIG_KVM_ARM_HOST) += sysreg-sr.o
 +obj-$(CONFIG_KVM_ARM_HOST) += debug-sr.o
 +obj-$(CONFIG_KVM_ARM_HOST) += entry.o
 +obj-$(CONFIG_KVM_ARM_HOST) += switch.o
 +obj-$(CONFIG_KVM_ARM_HOST) += fpsimd.o
 +obj-$(CONFIG_KVM_ARM_HOST) += tlb.o
 +obj-$(CONFIG_KVM_ARM_HOST) += hyp-entry.o
++=======
+ obj-$(CONFIG_KVM) += vgic-v3-sr.o
+ obj-$(CONFIG_KVM) += timer-sr.o
+ obj-$(CONFIG_KVM) += aarch32.o
+ obj-$(CONFIG_KVM) += vgic-v2-cpuif-proxy.o
+ obj-$(CONFIG_KVM) += sysreg-sr.o
+ obj-$(CONFIG_KVM) += debug-sr.o
+ obj-$(CONFIG_KVM) += entry.o
+ obj-$(CONFIG_KVM) += switch.o
+ obj-$(CONFIG_KVM) += fpsimd.o
+ obj-$(CONFIG_KVM) += tlb.o
+ obj-$(CONFIG_KVM) += hyp-entry.o
++>>>>>>> d82755b2e781 (KVM: arm64: Kill off CONFIG_KVM_ARM_HOST)
  
  # KVM code is run at a different exception code with a different map, so
  # compiler instrumentation that inserts callbacks or checks into the code may
diff --git a/arch/arm64/kernel/asm-offsets.c b/arch/arm64/kernel/asm-offsets.c
index 5ff62f1f5e8f..78340ca2cc18 100644
--- a/arch/arm64/kernel/asm-offsets.c
+++ b/arch/arm64/kernel/asm-offsets.c
@@ -137,7 +137,7 @@ int main(void)
   DEFINE(CPU_BOOT_STACK,	offsetof(struct secondary_data, stack));
   DEFINE(CPU_BOOT_TASK,		offsetof(struct secondary_data, task));
   BLANK();
-#ifdef CONFIG_KVM_ARM_HOST
+#ifdef CONFIG_KVM
   DEFINE(VCPU_CONTEXT,		offsetof(struct kvm_vcpu, arch.ctxt));
   DEFINE(VCPU_FAULT_DISR,	offsetof(struct kvm_vcpu, arch.fault.disr_el1));
   DEFINE(VCPU_WORKAROUND_FLAGS,	offsetof(struct kvm_vcpu, arch.workaround_flags));
* Unmerged path arch/arm64/kernel/cpu_errata.c
diff --git a/arch/arm64/kernel/smp.c b/arch/arm64/kernel/smp.c
index b2fe4d879950..423d9d011e4a 100644
--- a/arch/arm64/kernel/smp.c
+++ b/arch/arm64/kernel/smp.c
@@ -423,7 +423,7 @@ static void __init hyp_mode_check(void)
 			   "CPU: CPUs started in inconsistent modes");
 	else
 		pr_info("CPU: All CPU(s) started at EL1\n");
-	if (IS_ENABLED(CONFIG_KVM_ARM_HOST))
+	if (IS_ENABLED(CONFIG_KVM))
 		kvm_compute_layout();
 }
 
diff --git a/arch/arm64/kvm/Kconfig b/arch/arm64/kvm/Kconfig
index 47b23bf617c7..6d1e3994219b 100644
--- a/arch/arm64/kvm/Kconfig
+++ b/arch/arm64/kvm/Kconfig
@@ -27,7 +27,6 @@ config KVM
 	select HAVE_KVM_CPU_RELAX_INTERCEPT
 	select HAVE_KVM_ARCH_TLB_FLUSH_ALL
 	select KVM_MMIO
-	select KVM_ARM_HOST
 	select KVM_GENERIC_DIRTYLOG_READ_PROTECT
 	select SRCU
 	select KVM_VFIO
@@ -47,11 +46,6 @@ config KVM
 
 	  If unsure, say N.
 
-config KVM_ARM_HOST
-	bool
-	---help---
-	  Provides host support for ARM processors.
-
 config KVM_ARM_PMU
 	bool
 	---help---
* Unmerged path arch/arm64/kvm/Makefile
* Unmerged path arch/arm64/kvm/hyp/Makefile
