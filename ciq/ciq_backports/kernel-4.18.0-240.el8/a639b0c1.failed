drm/i915/perf: Invalidate OA TLB on when closing perf stream

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
commit a639b0c15065df930467695b76ef38d5edaed049
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a639b0c1.failed

On running several back to back perf capture sessions involving closing
and opening the perf stream, invalid OA reports are seen in the
beginning of the OA buffer in some sessions. Fix this by invalidating OA
TLB when the perf stream is closed or disabled on gen12.

	Signed-off-by: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
	Reviewed-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Fixes: 00a7f0d7155c ("drm/i915/tgl: Add perf support on TGL")
	Signed-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200309211057.38575-1-umesh.nerlige.ramappa@intel.com
(cherry picked from commit a639b0c15065df930467695b76ef38d5edaed049)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_perf.c
#	drivers/gpu/drm/i915/i915_reg.h
diff --cc drivers/gpu/drm/i915/i915_perf.c
index 5140017f9a39,3222f6cd8255..000000000000
--- a/drivers/gpu/drm/i915/i915_perf.c
+++ b/drivers/gpu/drm/i915/i915_perf.c
@@@ -1964,7 -2671,29 +1964,33 @@@ static void gen8_oa_disable(struct i915
  	if (intel_wait_for_register(uncore,
  				    GEN8_OACONTROL, GEN8_OA_COUNTER_ENABLE, 0,
  				    50))
++<<<<<<< HEAD
 +		DRM_ERROR("wait for OA to be disabled timed out\n");
++=======
+ 		drm_err(&stream->perf->i915->drm,
+ 			"wait for OA to be disabled timed out\n");
+ }
+ 
+ static void gen12_oa_disable(struct i915_perf_stream *stream)
+ {
+ 	struct intel_uncore *uncore = stream->uncore;
+ 
+ 	intel_uncore_write(uncore, GEN12_OAG_OACONTROL, 0);
+ 	if (intel_wait_for_register(uncore,
+ 				    GEN12_OAG_OACONTROL,
+ 				    GEN12_OAG_OACONTROL_OA_COUNTER_ENABLE, 0,
+ 				    50))
+ 		drm_err(&stream->perf->i915->drm,
+ 			"wait for OA to be disabled timed out\n");
+ 
+ 	intel_uncore_write(uncore, GEN12_OA_TLB_INV_CR, 1);
+ 	if (intel_wait_for_register(uncore,
+ 				    GEN12_OA_TLB_INV_CR,
+ 				    1, 0,
+ 				    50))
+ 		drm_err(&stream->perf->i915->drm,
+ 			"wait for OA tlb invalidate timed out\n");
++>>>>>>> a639b0c15065 (drm/i915/perf: Invalidate OA TLB on when closing perf stream)
  }
  
  /**
diff --cc drivers/gpu/drm/i915/i915_reg.h
index 849d8b8f5673,59e64acc2c56..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -710,6 -693,47 +710,50 @@@ static inline bool i915_mmio_reg_valid(
  #define OABUFFER_SIZE_8M    (6 << 3)
  #define OABUFFER_SIZE_16M   (7 << 3)
  
++<<<<<<< HEAD
++=======
+ #define GEN12_OA_TLB_INV_CR _MMIO(0xceec)
+ 
+ /* Gen12 OAR unit */
+ #define GEN12_OAR_OACONTROL _MMIO(0x2960)
+ #define  GEN12_OAR_OACONTROL_COUNTER_FORMAT_SHIFT 1
+ #define  GEN12_OAR_OACONTROL_COUNTER_ENABLE       (1 << 0)
+ 
+ #define GEN12_OACTXCONTROL _MMIO(0x2360)
+ #define GEN12_OAR_OASTATUS _MMIO(0x2968)
+ 
+ /* Gen12 OAG unit */
+ #define GEN12_OAG_OAHEADPTR _MMIO(0xdb00)
+ #define  GEN12_OAG_OAHEADPTR_MASK 0xffffffc0
+ #define GEN12_OAG_OATAILPTR _MMIO(0xdb04)
+ #define  GEN12_OAG_OATAILPTR_MASK 0xffffffc0
+ 
+ #define GEN12_OAG_OABUFFER  _MMIO(0xdb08)
+ #define  GEN12_OAG_OABUFFER_BUFFER_SIZE_MASK  (0x7)
+ #define  GEN12_OAG_OABUFFER_BUFFER_SIZE_SHIFT (3)
+ #define  GEN12_OAG_OABUFFER_MEMORY_SELECT     (1 << 0) /* 0: PPGTT, 1: GGTT */
+ 
+ #define GEN12_OAG_OAGLBCTXCTRL _MMIO(0x2b28)
+ #define  GEN12_OAG_OAGLBCTXCTRL_TIMER_PERIOD_SHIFT 2
+ #define  GEN12_OAG_OAGLBCTXCTRL_TIMER_ENABLE       (1 << 1)
+ #define  GEN12_OAG_OAGLBCTXCTRL_COUNTER_RESUME     (1 << 0)
+ 
+ #define GEN12_OAG_OACONTROL _MMIO(0xdaf4)
+ #define  GEN12_OAG_OACONTROL_OA_COUNTER_FORMAT_SHIFT 2
+ #define  GEN12_OAG_OACONTROL_OA_COUNTER_ENABLE       (1 << 0)
+ 
+ #define GEN12_OAG_OA_DEBUG _MMIO(0xdaf8)
+ #define  GEN12_OAG_OA_DEBUG_INCLUDE_CLK_RATIO          (1 << 6)
+ #define  GEN12_OAG_OA_DEBUG_DISABLE_CLK_RATIO_REPORTS  (1 << 5)
+ #define  GEN12_OAG_OA_DEBUG_DISABLE_GO_1_0_REPORTS     (1 << 2)
+ #define  GEN12_OAG_OA_DEBUG_DISABLE_CTX_SWITCH_REPORTS (1 << 1)
+ 
+ #define GEN12_OAG_OASTATUS _MMIO(0xdafc)
+ #define  GEN12_OAG_OASTATUS_COUNTER_OVERFLOW (1 << 2)
+ #define  GEN12_OAG_OASTATUS_BUFFER_OVERFLOW  (1 << 1)
+ #define  GEN12_OAG_OASTATUS_REPORT_LOST      (1 << 0)
+ 
++>>>>>>> a639b0c15065 (drm/i915/perf: Invalidate OA TLB on when closing perf stream)
  /*
   * Flexible, Aggregate EU Counter Registers.
   * Note: these aren't contiguous
* Unmerged path drivers/gpu/drm/i915/i915_perf.c
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
