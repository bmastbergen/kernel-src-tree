netfilter: nf_conntrack_pptp: fix compilation warning with W=1 build

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 4946ea5c1237036155c3b3a24f049fd5f849f8f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/4946ea5c.failed

>> include/linux/netfilter/nf_conntrack_pptp.h:13:20: warning: 'const' type qualifier on return type has no effect [-Wignored-qualifiers]
extern const char *const pptp_msg_name(u_int16_t msg);
^~~~~~

	Reported-by: kbuild test robot <lkp@intel.com>
Fixes: 4c559f15efcc ("netfilter: nf_conntrack_pptp: prevent buffer overflows in debug code")
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 4946ea5c1237036155c3b3a24f049fd5f849f8f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netfilter/nf_conntrack_pptp.h
#	net/netfilter/nf_conntrack_pptp.c
diff --cc include/linux/netfilter/nf_conntrack_pptp.h
index 833a5b2255ea,a28aa289afdc..000000000000
--- a/include/linux/netfilter/nf_conntrack_pptp.h
+++ b/include/linux/netfilter/nf_conntrack_pptp.h
@@@ -3,9 -3,14 +3,13 @@@
  #ifndef _NF_CONNTRACK_PPTP_H
  #define _NF_CONNTRACK_PPTP_H
  
 -#include <linux/netfilter.h>
 -#include <linux/skbuff.h>
 -#include <linux/types.h>
  #include <linux/netfilter/nf_conntrack_common.h>
 -#include <net/netfilter/nf_conntrack_expect.h>
 -#include <uapi/linux/netfilter/nf_conntrack_tuple_common.h>
  
++<<<<<<< HEAD
 +extern const char *const pptp_msg_name[];
++=======
+ const char *pptp_msg_name(u_int16_t msg);
++>>>>>>> 4946ea5c1237 (netfilter: nf_conntrack_pptp: fix compilation warning with W=1 build)
  
  /* state of the control session */
  enum pptp_ctrlsess_state {
diff --cc net/netfilter/nf_conntrack_pptp.c
index 11562f2a08bb,1f44d523b512..000000000000
--- a/net/netfilter/nf_conntrack_pptp.c
+++ b/net/netfilter/nf_conntrack_pptp.c
@@@ -71,24 -72,32 +71,35 @@@ EXPORT_SYMBOL_GPL(nf_nat_pptp_hook_expe
  
  #if defined(DEBUG) || defined(CONFIG_DYNAMIC_DEBUG)
  /* PptpControlMessageType names */
 -static const char *const pptp_msg_name_array[PPTP_MSG_MAX + 1] = {
 -	[0]				= "UNKNOWN_MESSAGE",
 -	[PPTP_START_SESSION_REQUEST]	= "START_SESSION_REQUEST",
 -	[PPTP_START_SESSION_REPLY]	= "START_SESSION_REPLY",
 -	[PPTP_STOP_SESSION_REQUEST]	= "STOP_SESSION_REQUEST",
 -	[PPTP_STOP_SESSION_REPLY]	= "STOP_SESSION_REPLY",
 -	[PPTP_ECHO_REQUEST]		= "ECHO_REQUEST",
 -	[PPTP_ECHO_REPLY]		= "ECHO_REPLY",
 -	[PPTP_OUT_CALL_REQUEST]		= "OUT_CALL_REQUEST",
 -	[PPTP_OUT_CALL_REPLY]		= "OUT_CALL_REPLY",
 -	[PPTP_IN_CALL_REQUEST]		= "IN_CALL_REQUEST",
 -	[PPTP_IN_CALL_REPLY]		= "IN_CALL_REPLY",
 -	[PPTP_IN_CALL_CONNECT]		= "IN_CALL_CONNECT",
 -	[PPTP_CALL_CLEAR_REQUEST]	= "CALL_CLEAR_REQUEST",
 -	[PPTP_CALL_DISCONNECT_NOTIFY]	= "CALL_DISCONNECT_NOTIFY",
 -	[PPTP_WAN_ERROR_NOTIFY]		= "WAN_ERROR_NOTIFY",
 -	[PPTP_SET_LINK_INFO]		= "SET_LINK_INFO"
 +const char *const pptp_msg_name[] = {
 +	"UNKNOWN_MESSAGE",
 +	"START_SESSION_REQUEST",
 +	"START_SESSION_REPLY",
 +	"STOP_SESSION_REQUEST",
 +	"STOP_SESSION_REPLY",
 +	"ECHO_REQUEST",
 +	"ECHO_REPLY",
 +	"OUT_CALL_REQUEST",
 +	"OUT_CALL_REPLY",
 +	"IN_CALL_REQUEST",
 +	"IN_CALL_REPLY",
 +	"IN_CALL_CONNECT",
 +	"CALL_CLEAR_REQUEST",
 +	"CALL_DISCONNECT_NOTIFY",
 +	"WAN_ERROR_NOTIFY",
 +	"SET_LINK_INFO"
  };
++<<<<<<< HEAD
++=======
+ 
+ const char *pptp_msg_name(u_int16_t msg)
+ {
+ 	if (msg > PPTP_MSG_MAX)
+ 		return pptp_msg_name_array[0];
+ 
+ 	return pptp_msg_name_array[msg];
+ }
++>>>>>>> 4946ea5c1237 (netfilter: nf_conntrack_pptp: fix compilation warning with W=1 build)
  EXPORT_SYMBOL(pptp_msg_name);
  #endif
  
* Unmerged path include/linux/netfilter/nf_conntrack_pptp.h
* Unmerged path net/netfilter/nf_conntrack_pptp.c
