x86/mce: Do not log spurious corrected mce errors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Prarit Bhargava <prarit@redhat.com>
commit 2976908e4198aa02fc3f76802358f69396267189
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2976908e.failed

A user has reported that they are seeing spurious corrected errors on
their hardware.

Intel Errata HSD131, HSM142, HSW131, and BDM48 report that "spurious
corrected errors may be logged in the IA32_MC0_STATUS register with
the valid field (bit 63) set, the uncorrected error field (bit 61) not
set, a Model Specific Error Code (bits [31:16]) of 0x000F, and an MCA
Error Code (bits [15:0]) of 0x0005." The Errata PDFs are linked in the
bugzilla below.

Block these spurious errors from the console and logs.

 [ bp: Move the intel_filter_mce() header declarations into the already
   existing CONFIG_X86_MCE_INTEL ifdeffery. ]

Co-developed-by: Alexander Krupp <centos@akr.yagii.de>
	Signed-off-by: Alexander Krupp <centos@akr.yagii.de>
	Signed-off-by: Prarit Bhargava <prarit@redhat.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://bugzilla.kernel.org/show_bug.cgi?id=206587
Link: https://lkml.kernel.org/r/20200219131611.36816-1-prarit@redhat.com
(cherry picked from commit 2976908e4198aa02fc3f76802358f69396267189)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mce/core.c
#	arch/x86/kernel/cpu/mce/internal.h
diff --cc arch/x86/kernel/cpu/mce/core.c
index 8bad2ba2c633,fe3983d551cc..000000000000
--- a/arch/x86/kernel/cpu/mce/core.c
+++ b/arch/x86/kernel/cpu/mce/core.c
@@@ -1787,6 -1875,11 +1787,14 @@@ static void __mcheck_cpu_init_timer(voi
  
  bool filter_mce(struct mce *m)
  {
++<<<<<<< HEAD
++=======
+ 	if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD)
+ 		return amd_filter_mce(m);
+ 	if (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL)
+ 		return intel_filter_mce(m);
+ 
++>>>>>>> 2976908e4198 (x86/mce: Do not log spurious corrected mce errors)
  	return false;
  }
  
diff --cc arch/x86/kernel/cpu/mce/internal.h
index e48fefda6c68,97db18441d2c..000000000000
--- a/arch/x86/kernel/cpu/mce/internal.h
+++ b/arch/x86/kernel/cpu/mce/internal.h
@@@ -52,11 -45,19 +52,25 @@@ unsigned long cmci_intel_adjust_timer(u
  bool mce_intel_cmci_poll(void);
  void mce_intel_hcpu_update(unsigned long cpu);
  void cmci_disable_bank(int bank);
++<<<<<<< HEAD
++=======
+ void intel_init_cmci(void);
+ void intel_init_lmce(void);
+ void intel_clear_lmce(void);
+ bool intel_filter_mce(struct mce *m);
++>>>>>>> 2976908e4198 (x86/mce: Do not log spurious corrected mce errors)
  #else
  # define cmci_intel_adjust_timer mce_adjust_timer_default
  static inline bool mce_intel_cmci_poll(void) { return false; }
  static inline void mce_intel_hcpu_update(unsigned long cpu) { }
  static inline void cmci_disable_bank(int bank) { }
++<<<<<<< HEAD
++=======
+ static inline void intel_init_cmci(void) { }
+ static inline void intel_init_lmce(void) { }
+ static inline void intel_clear_lmce(void) { }
+ static inline bool intel_filter_mce(struct mce *m) { return false; };
++>>>>>>> 2976908e4198 (x86/mce: Do not log spurious corrected mce errors)
  #endif
  
  void mce_timer_kick(unsigned long interval);
* Unmerged path arch/x86/kernel/cpu/mce/core.c
diff --git a/arch/x86/kernel/cpu/mce/intel.c b/arch/x86/kernel/cpu/mce/intel.c
index 88cd9598fa57..d318770a1f8d 100644
--- a/arch/x86/kernel/cpu/mce/intel.c
+++ b/arch/x86/kernel/cpu/mce/intel.c
@@ -516,3 +516,20 @@ void mce_intel_feature_clear(struct cpuinfo_x86 *c)
 {
 	intel_clear_lmce();
 }
+
+bool intel_filter_mce(struct mce *m)
+{
+	struct cpuinfo_x86 *c = &boot_cpu_data;
+
+	/* MCE errata HSD131, HSM142, HSW131, BDM48, and HSM142 */
+	if ((c->x86 == 6) &&
+	    ((c->x86_model == INTEL_FAM6_HASWELL) ||
+	     (c->x86_model == INTEL_FAM6_HASWELL_L) ||
+	     (c->x86_model == INTEL_FAM6_BROADWELL) ||
+	     (c->x86_model == INTEL_FAM6_HASWELL_G)) &&
+	    (m->bank == 0) &&
+	    ((m->status & 0xa0000000ffffffff) == 0x80000000000f0005))
+		return true;
+
+	return false;
+}
* Unmerged path arch/x86/kernel/cpu/mce/internal.h
