KVM: selftests: fix rdtsc() for vmx_tsc_adjust_test

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 13ffbd8db1dd43d63d086517872a4e702a6bf309
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/13ffbd8d.failed

vmx_tsc_adjust_test fails with:

IA32_TSC_ADJUST is -4294969448 (-1 * TSC_ADJUST_VALUE + -2152).
IA32_TSC_ADJUST is -4294969448 (-1 * TSC_ADJUST_VALUE + -2152).
IA32_TSC_ADJUST is 281470681738540 (65534 * TSC_ADJUST_VALUE + 4294962476).
==== Test Assertion Failure ====
  x86_64/vmx_tsc_adjust_test.c:153: false
  pid=19738 tid=19738 - Interrupted system call
     1	0x0000000000401192: main at vmx_tsc_adjust_test.c:153
     2	0x00007fe1ef8583d4: ?? ??:0
     3	0x0000000000401201: _start at ??:?
  Failed guest assert: (adjust <= max)

The problem is that is 'tsc_val' should be u64, not u32 or the reading
gets truncated.

Fixes: 8d7fbf01f9afc ("KVM: selftests: VMX preemption timer migration test")
	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Message-Id: <20200601154726.261868-1-vkuznets@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 13ffbd8db1dd43d63d086517872a4e702a6bf309)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/include/x86_64/processor.h
diff --cc tools/testing/selftests/kvm/include/x86_64/processor.h
index 349c5f4d4dcf,82b7fe16a824..000000000000
--- a/tools/testing/selftests/kvm/include/x86_64/processor.h
+++ b/tools/testing/selftests/kvm/include/x86_64/processor.h
@@@ -81,13 -79,16 +81,17 @@@ static inline uint64_t get_desc64_base(
  static inline uint64_t rdtsc(void)
  {
  	uint32_t eax, edx;
++<<<<<<< HEAD
 +
++=======
+ 	uint64_t tsc_val;
++>>>>>>> 13ffbd8db1dd (KVM: selftests: fix rdtsc() for vmx_tsc_adjust_test)
  	/*
  	 * The lfence is to wait (on Intel CPUs) until all previous
 -	 * instructions have been executed. If software requires RDTSC to be
 -	 * executed prior to execution of any subsequent instruction, it can
 -	 * execute LFENCE immediately after RDTSC
 +	 * instructions have been executed.
  	 */
 -	__asm__ __volatile__("lfence; rdtsc; lfence" : "=a"(eax), "=d"(edx));
 -	tsc_val = ((uint64_t)edx) << 32 | eax;
 -	return tsc_val;
 +	__asm__ __volatile__("lfence; rdtsc" : "=a"(eax), "=d"(edx));
 +	return ((uint64_t)edx) << 32 | eax;
  }
  
  static inline uint64_t rdtscp(uint32_t *aux)
* Unmerged path tools/testing/selftests/kvm/include/x86_64/processor.h
