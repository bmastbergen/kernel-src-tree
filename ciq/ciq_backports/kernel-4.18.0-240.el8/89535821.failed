iommu/arm-smmu-v3: Parse PASID devicetree property of platform devices

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jean-Philippe Brucker <jean-philippe@linaro.org>
commit 89535821c04256964e266bf585cf224f65e08983
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/89535821.failed

For platform devices that support SubstreamID (SSID), firmware provides
the number of supported SSID bits. Restrict it to what the SMMU supports
and cache it into master->ssid_bits, which will also be used for PCI
PASID.

	Reviewed-by: Eric Auger <eric.auger@redhat.com>
	Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
	Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 89535821c04256964e266bf585cf224f65e08983)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu-v3.c
#	include/linux/iommu.h
diff --cc drivers/iommu/arm-smmu-v3.c
index 1b61de0d69f6,2717c2b211d2..000000000000
--- a/drivers/iommu/arm-smmu-v3.c
+++ b/drivers/iommu/arm-smmu-v3.c
@@@ -292,9 -289,11 +292,17 @@@
  
  #define CTXDESC_CD_1_TTB0_MASK		GENMASK_ULL(51, 4)
  
++<<<<<<< HEAD
 +/* Convert between AArch64 (CPU) TCR format and SMMU CD format */
 +#define ARM_SMMU_TCR2CD(tcr, fld)	FIELD_PREP(CTXDESC_CD_0_TCR_##fld, \
 +					FIELD_GET(ARM64_TCR_##fld, tcr))
++=======
+ /*
+  * When the SMMU only supports linear context descriptor tables, pick a
+  * reasonable size limit (64kB).
+  */
+ #define CTXDESC_LINEAR_CDMAX		ilog2(SZ_64K / (CTXDESC_CD_DWORDS << 3))
++>>>>>>> 89535821c042 (iommu/arm-smmu-v3: Parse PASID devicetree property of platform devices)
  
  /* Command queue */
  #define CMDQ_ENT_SZ_SHIFT		4
diff --cc include/linux/iommu.h
index c0752afea934,c1ad15228447..000000000000
--- a/include/linux/iommu.h
+++ b/include/linux/iommu.h
@@@ -521,9 -587,10 +522,14 @@@ struct iommu_fwspec 
  	const struct iommu_ops	*ops;
  	struct fwnode_handle	*iommu_fwnode;
  	void			*iommu_priv;
++<<<<<<< HEAD
++=======
+ 	u32			flags;
+ 	u32			num_pasid_bits;
++>>>>>>> 89535821c042 (iommu/arm-smmu-v3: Parse PASID devicetree property of platform devices)
  	unsigned int		num_ids;
  	u32			ids[1];
 +	RH_KABI_EXTEND(u32	flags)
  };
  
  /* ATS is supported */
* Unmerged path drivers/iommu/arm-smmu-v3.c
diff --git a/drivers/iommu/of_iommu.c b/drivers/iommu/of_iommu.c
index cb79f15df14d..5366bd4e5078 100644
--- a/drivers/iommu/of_iommu.c
+++ b/drivers/iommu/of_iommu.c
@@ -212,8 +212,12 @@ const struct iommu_ops *of_iommu_configure(struct device *dev,
 			if (err)
 				break;
 		}
-	}
 
+		fwspec = dev_iommu_fwspec_get(dev);
+		if (!err && fwspec)
+			of_property_read_u32(master_np, "pasid-num-bits",
+					     &fwspec->num_pasid_bits);
+	}
 
 	/*
 	 * Two success conditions can be represented by non-negative err here:
* Unmerged path include/linux/iommu.h
