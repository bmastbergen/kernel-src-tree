libbpf: Relax check whether BTF is mandatory

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 5327644614a18f5d0ff845844a4e9976210b3d8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/53276446.failed

If BPF program is using BTF-defined maps, BTF is required only for
libbpf itself to process map definitions. If after that BTF fails to
be loaded into kernel (e.g., if it doesn't support BTF at all), this
shouldn't prevent valid BPF program from loading. Existing
retry-without-BTF logic for creating maps will succeed to create such
maps without any problems. So, presence of .maps section shouldn't make
BTF required for kernel. Update the check accordingly.

Validated by ensuring simple BPF program with BTF-defined maps is still
loaded on old kernel without BTF support and map is correctly parsed and
created.

Fixes: abd29c931459 ("libbpf: allow specifying map definitions using BTF")
	Reported-by: Julia Kartseva <hex@fb.com>
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200220062635.1497872-1-andriin@fb.com
(cherry picked from commit 5327644614a18f5d0ff845844a4e9976210b3d8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 6ed9ef84b398,0eb10b681413..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -1536,8 -2280,7 +1536,12 @@@ static void bpf_object__sanitize_btf_ex
  
  static bool bpf_object__is_btf_mandatory(const struct bpf_object *obj)
  {
++<<<<<<< HEAD
 +	return obj->efile.btf_maps_shndx >= 0 ||
 +	       obj->nr_extern > 0;
++=======
+ 	return obj->efile.st_ops_shndx >= 0 || obj->nr_extern > 0;
++>>>>>>> 5327644614a1 (libbpf: Relax check whether BTF is mandatory)
  }
  
  static int bpf_object__init_btf(struct bpf_object *obj,
* Unmerged path tools/lib/bpf/libbpf.c
