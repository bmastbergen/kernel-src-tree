drm/amdkfd: Use correct major in devcgroup check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Lorenz Brun <lorenz@brun.one>
commit 99c7b309472787026ce52fd2bc5d00630567a872
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/99c7b309.failed

The existing code used the major version number of the DRM driver
instead of the device major number of the DRM subsystem for
validating access for a devices cgroup.

This meant that accesses allowed by the devices cgroup weren't
permitted and certain accesses denied by the devices cgroup were
permitted (if they matched the wrong major device number).

	Signed-off-by: Lorenz Brun <lorenz@brun.one>
Fixes: 6b855f7b83d2f ("drm/amdkfd: Check against device cgroup")
Reviewed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
	Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 99c7b309472787026ce52fd2bc5d00630567a872)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdkfd/kfd_priv.h
diff --cc drivers/gpu/drm/amd/amdkfd/kfd_priv.h
index 3933fb6a371e,06c5fdb1e818..000000000000
--- a/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_priv.h
@@@ -36,7 -36,13 +36,15 @@@
  #include <linux/seq_file.h>
  #include <linux/kref.h>
  #include <linux/sysfs.h>
++<<<<<<< HEAD
++=======
+ #include <linux/device_cgroup.h>
+ #include <drm/drm_file.h>
+ #include <drm/drm_drv.h>
+ #include <drm/drm_device.h>
+ #include <drm/drm_ioctl.h>
++>>>>>>> 99c7b3094727 (drm/amdkfd: Use correct major in devcgroup check)
  #include <kgd_kfd_interface.h>
 -#include <linux/swap.h>
  
  #include "amd_shared.h"
  
@@@ -1042,6 -1070,21 +1050,24 @@@ bool kfd_is_locked(void)
  void kfd_inc_compute_active(struct kfd_dev *dev);
  void kfd_dec_compute_active(struct kfd_dev *dev);
  
++<<<<<<< HEAD
++=======
+ /* Cgroup Support */
+ /* Check with device cgroup if @kfd device is accessible */
+ static inline int kfd_devcgroup_check_permission(struct kfd_dev *kfd)
+ {
+ #if defined(CONFIG_CGROUP_DEVICE)
+ 	struct drm_device *ddev = kfd->ddev;
+ 
+ 	return devcgroup_check_permission(DEVCG_DEV_CHAR, DRM_MAJOR,
+ 					  ddev->render->index,
+ 					  DEVCG_ACC_WRITE | DEVCG_ACC_READ);
+ #else
+ 	return 0;
+ #endif
+ }
+ 
++>>>>>>> 99c7b3094727 (drm/amdkfd: Use correct major in devcgroup check)
  /* Debugfs */
  #if defined(CONFIG_DEBUG_FS)
  
* Unmerged path drivers/gpu/drm/amd/amdkfd/kfd_priv.h
