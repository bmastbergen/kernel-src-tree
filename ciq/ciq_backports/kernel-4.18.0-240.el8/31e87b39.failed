net/mlx5e: Fix devlink port register sequence

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Vladyslav Tarasiuk <vladyslavt@mellanox.com>
commit 31e87b39ba9d47cf31f5a91dd3cc9680f5987d12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/31e87b39.failed

If udevd is configured to rename interfaces according to persistent
naming rules and if a network interface has phys_port_name in sysfs,
its contents will be appended to the interface name.
However, register_netdev creates device in sysfs and if
devlink_port_register is called after that, there is a timeframe in
which udevd may read an empty phys_port_name value. The consequence is
that the interface will lose this suffix and its name will not be
really persistent.

The solution is to register the port before registering a netdev.

Fixes: c6acd629eec7 ("net/mlx5e: Add support for devlink-port in non-representors mode")
	Signed-off-by: Vladyslav Tarasiuk <vladyslavt@mellanox.com>
	Reviewed-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Reviewed-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 31e87b39ba9d47cf31f5a91dd3cc9680f5987d12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
#	drivers/net/ethernet/mellanox/mlx5/core/en/devlink.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index ea998980a21e,be20d2247594..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -5447,17 -5467,27 +5447,33 @@@ static void *mlx5e_add(struct mlx5_core
  		goto err_destroy_netdev;
  	}
  
+ 	err = mlx5e_devlink_port_register(priv);
+ 	if (err) {
+ 		mlx5_core_err(mdev, "mlx5e_devlink_port_register failed, %d\n", err);
+ 		goto err_detach;
+ 	}
+ 
++<<<<<<< HEAD
++=======
  	err = register_netdev(netdev);
  	if (err) {
  		mlx5_core_err(mdev, "register_netdev failed, %d\n", err);
- 		goto err_detach;
+ 		goto err_devlink_port_unregister;
  	}
  
+ 	mlx5e_devlink_port_type_eth_set(priv);
+ 
++>>>>>>> 31e87b39ba9d (net/mlx5e: Fix devlink port register sequence)
  #ifdef CONFIG_MLX5_CORE_EN_DCB
  	mlx5e_dcbnl_init_app(priv);
  #endif
  	return priv;
  
++<<<<<<< HEAD
++=======
+ err_devlink_port_unregister:
+ 	mlx5e_devlink_port_unregister(priv);
++>>>>>>> 31e87b39ba9d (net/mlx5e: Fix devlink port register sequence)
  err_detach:
  	mlx5e_detach(mdev, priv);
  err_destroy_netdev:
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/devlink.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/devlink.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
