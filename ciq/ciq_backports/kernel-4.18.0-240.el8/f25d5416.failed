selftests/bpf: Fix memory leak in test selector

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit f25d5416d64c796aa639136eb0b076c8bd579b54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/f25d5416.failed

Free test selector substrings, which were strdup()'ed.

Fixes: b65053cd94f4 ("selftests/bpf: Add whitelist/blacklist of test names to test_progs")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200429012111.277390-6-andriin@fb.com
(cherry picked from commit f25d5416d64c796aa639136eb0b076c8bd579b54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/test_progs.c
diff --cc tools/testing/selftests/bpf/test_progs.c
index c4ab72554583,86d0020c9eec..000000000000
--- a/tools/testing/selftests/bpf/test_progs.c
+++ b/tools/testing/selftests/bpf/test_progs.c
@@@ -319,9 -420,56 +319,59 @@@ static int libbpf_print_fn(enum libbpf_
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static void free_str_set(const struct str_set *set)
+ {
+ 	int i;
+ 
+ 	if (!set)
+ 		return;
+ 
+ 	for (i = 0; i < set->cnt; i++)
+ 		free((void *)set->strs[i]);
+ 	free(set->strs);
+ }
+ 
+ static int parse_str_list(const char *s, struct str_set *set)
+ {
+ 	char *input, *state = NULL, *next, **tmp, **strs = NULL;
+ 	int cnt = 0;
+ 
+ 	input = strdup(s);
+ 	if (!input)
+ 		return -ENOMEM;
+ 
+ 	set->cnt = 0;
+ 	set->strs = NULL;
+ 
+ 	while ((next = strtok_r(state ? NULL : input, ",", &state))) {
+ 		tmp = realloc(strs, sizeof(*strs) * (cnt + 1));
+ 		if (!tmp)
+ 			goto err;
+ 		strs = tmp;
+ 
+ 		strs[cnt] = strdup(next);
+ 		if (!strs[cnt])
+ 			goto err;
+ 
+ 		cnt++;
+ 	}
+ 
+ 	set->cnt = cnt;
+ 	set->strs = (const char **)strs;
+ 	free(input);
+ 	return 0;
+ err:
+ 	free(strs);
+ 	free(input);
+ 	return -ENOMEM;
+ }
+ 
++>>>>>>> f25d5416d64c (selftests/bpf: Fix memory leak in test selector)
  int parse_num_list(const char *s, struct test_selector *sel)
  {
 -	int i, set_len = 0, new_len, num, start = 0, end = -1;
 +	int i, set_len = 0, num, start = 0, end = -1;
  	bool *set = NULL, *tmp, parsing_end = false;
  	char *next;
  
@@@ -567,13 -759,21 +617,21 @@@ int main(int argc, char **argv
  		fprintf(env.stdout, "#%d %s:%s\n",
  			test->test_num, test->test_name,
  			test->error_cnt ? "FAIL" : "OK");
 -
 -		reset_affinity();
 -		if (test->need_cgroup_cleanup)
 -			cleanup_cgroup_environment();
  	}
  	stdio_restore();
 -	fprintf(stdout, "Summary: %d/%d PASSED, %d SKIPPED, %d FAILED\n",
 -		env.succ_cnt, env.sub_succ_cnt, env.skip_cnt, env.fail_cnt);
 +	printf("Summary: %d/%d PASSED, %d SKIPPED, %d FAILED\n",
 +	       env.succ_cnt, env.sub_succ_cnt, env.skip_cnt, env.fail_cnt);
  
++<<<<<<< HEAD
++	free(env.test_selector.num_set);
++=======
+ 	free_str_set(&env.test_selector.blacklist);
+ 	free_str_set(&env.test_selector.whitelist);
  	free(env.test_selector.num_set);
+ 	free_str_set(&env.subtest_selector.blacklist);
+ 	free_str_set(&env.subtest_selector.whitelist);
++>>>>>>> f25d5416d64c (selftests/bpf: Fix memory leak in test selector)
  	free(env.subtest_selector.num_set);
  
 -	return env.fail_cnt ? EXIT_FAILURE : EXIT_SUCCESS;
 +	return error_cnt ? EXIT_FAILURE : EXIT_SUCCESS;
  }
* Unmerged path tools/testing/selftests/bpf/test_progs.c
