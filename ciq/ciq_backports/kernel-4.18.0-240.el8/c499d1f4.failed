tools arch kvm: Sync kvm headers with the kernel sources

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit c499d1f483a99e86a5f712277de7c8fa33a9ec0a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/c499d1f4.failed

To pick up the changes from:

  41040cf7c5f0 ("arm64/sve: Fix missing SVE/FPSIMD endianness conversions")
  6ca00dfafda7 ("KVM: x86: Modify struct kvm_nested_state to have explicit fields for data")

None entail changes in tooling.

This silences these tools/perf build warnings:

  Warning: Kernel ABI header at 'tools/arch/x86/include/uapi/asm/kvm.h' differs from latest version at 'arch/x86/include/uapi/asm/kvm.h'
  diff -u tools/arch/x86/include/uapi/asm/kvm.h arch/x86/include/uapi/asm/kvm.h
  Warning: Kernel ABI header at 'tools/arch/arm64/include/uapi/asm/kvm.h' differs from latest version at 'arch/arm64/include/uapi/asm/kvm.h'
  diff -u tools/arch/arm64/include/uapi/asm/kvm.h arch/arm64/include/uapi/asm/kvm.h

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Dave Martin <Dave.Martin@arm.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Liran Alon <liran.alon@oracle.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Will Deacon <will.deacon@arm.com>
Link: https://lkml.kernel.org/n/tip-1cdbq5ulr4d6cx3iv2ye5wdv@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit c499d1f483a99e86a5f712277de7c8fa33a9ec0a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/arch/arm64/include/uapi/asm/kvm.h
diff --cc tools/arch/arm64/include/uapi/asm/kvm.h
index 97c3478ee6e7,d819a3e8b552..000000000000
--- a/tools/arch/arm64/include/uapi/asm/kvm.h
+++ b/tools/arch/arm64/include/uapi/asm/kvm.h
@@@ -226,6 -230,52 +226,55 @@@ struct kvm_vcpu_events 
  					 KVM_REG_ARM_FW | ((r) & 0xffff))
  #define KVM_REG_ARM_PSCI_VERSION	KVM_REG_ARM_FW_REG(0)
  
++<<<<<<< HEAD
++=======
+ /* SVE registers */
+ #define KVM_REG_ARM64_SVE		(0x15 << KVM_REG_ARM_COPROC_SHIFT)
+ 
+ /* Z- and P-regs occupy blocks at the following offsets within this range: */
+ #define KVM_REG_ARM64_SVE_ZREG_BASE	0
+ #define KVM_REG_ARM64_SVE_PREG_BASE	0x400
+ #define KVM_REG_ARM64_SVE_FFR_BASE	0x600
+ 
+ #define KVM_ARM64_SVE_NUM_ZREGS		__SVE_NUM_ZREGS
+ #define KVM_ARM64_SVE_NUM_PREGS		__SVE_NUM_PREGS
+ 
+ #define KVM_ARM64_SVE_MAX_SLICES	32
+ 
+ #define KVM_REG_ARM64_SVE_ZREG(n, i)					\
+ 	(KVM_REG_ARM64 | KVM_REG_ARM64_SVE | KVM_REG_ARM64_SVE_ZREG_BASE | \
+ 	 KVM_REG_SIZE_U2048 |						\
+ 	 (((n) & (KVM_ARM64_SVE_NUM_ZREGS - 1)) << 5) |			\
+ 	 ((i) & (KVM_ARM64_SVE_MAX_SLICES - 1)))
+ 
+ #define KVM_REG_ARM64_SVE_PREG(n, i)					\
+ 	(KVM_REG_ARM64 | KVM_REG_ARM64_SVE | KVM_REG_ARM64_SVE_PREG_BASE | \
+ 	 KVM_REG_SIZE_U256 |						\
+ 	 (((n) & (KVM_ARM64_SVE_NUM_PREGS - 1)) << 5) |			\
+ 	 ((i) & (KVM_ARM64_SVE_MAX_SLICES - 1)))
+ 
+ #define KVM_REG_ARM64_SVE_FFR(i)					\
+ 	(KVM_REG_ARM64 | KVM_REG_ARM64_SVE | KVM_REG_ARM64_SVE_FFR_BASE | \
+ 	 KVM_REG_SIZE_U256 |						\
+ 	 ((i) & (KVM_ARM64_SVE_MAX_SLICES - 1)))
+ 
+ /*
+  * Register values for KVM_REG_ARM64_SVE_ZREG(), KVM_REG_ARM64_SVE_PREG() and
+  * KVM_REG_ARM64_SVE_FFR() are represented in memory in an endianness-
+  * invariant layout which differs from the layout used for the FPSIMD
+  * V-registers on big-endian systems: see sigcontext.h for more explanation.
+  */
+ 
+ #define KVM_ARM64_SVE_VQ_MIN __SVE_VQ_MIN
+ #define KVM_ARM64_SVE_VQ_MAX __SVE_VQ_MAX
+ 
+ /* Vector lengths pseudo-register: */
+ #define KVM_REG_ARM64_SVE_VLS		(KVM_REG_ARM64 | KVM_REG_ARM64_SVE | \
+ 					 KVM_REG_SIZE_U512 | 0xffff)
+ #define KVM_ARM64_SVE_VLS_WORDS	\
+ 	((KVM_ARM64_SVE_VQ_MAX - KVM_ARM64_SVE_VQ_MIN) / 64 + 1)
+ 
++>>>>>>> c499d1f483a9 (tools arch kvm: Sync kvm headers with the kernel sources)
  /* Device Control API: ARM VGIC */
  #define KVM_DEV_ARM_VGIC_GRP_ADDR	0
  #define KVM_DEV_ARM_VGIC_GRP_DIST_REGS	1
* Unmerged path tools/arch/arm64/include/uapi/asm/kvm.h
diff --git a/tools/arch/x86/include/uapi/asm/kvm.h b/tools/arch/x86/include/uapi/asm/kvm.h
index 7b6afbcd5b61..4768c64d132f 100644
--- a/tools/arch/x86/include/uapi/asm/kvm.h
+++ b/tools/arch/x86/include/uapi/asm/kvm.h
@@ -384,13 +384,23 @@ struct kvm_sync_regs {
 #define KVM_X86_QUIRK_LINT0_REENABLED	(1 << 0)
 #define KVM_X86_QUIRK_CD_NW_CLEARED	(1 << 1)
 
+#define KVM_STATE_NESTED_FORMAT_VMX	0
+#define KVM_STATE_NESTED_FORMAT_SVM	1	/* unused */
+
 #define KVM_STATE_NESTED_GUEST_MODE	0x00000001
 #define KVM_STATE_NESTED_RUN_PENDING	0x00000002
 
 #define KVM_STATE_NESTED_SMM_GUEST_MODE	0x00000001
 #define KVM_STATE_NESTED_SMM_VMXON	0x00000002
 
-struct kvm_vmx_nested_state {
+#define KVM_STATE_NESTED_VMX_VMCS_SIZE	0x1000
+
+struct kvm_vmx_nested_state_data {
+	__u8 vmcs12[KVM_STATE_NESTED_VMX_VMCS_SIZE];
+	__u8 shadow_vmcs12[KVM_STATE_NESTED_VMX_VMCS_SIZE];
+};
+
+struct kvm_vmx_nested_state_hdr {
 	__u64 vmxon_pa;
 	__u64 vmcs12_pa;
 
@@ -401,24 +411,25 @@ struct kvm_vmx_nested_state {
 
 /* for KVM_CAP_NESTED_STATE */
 struct kvm_nested_state {
-	/* KVM_STATE_* flags */
 	__u16 flags;
-
-	/* 0 for VMX, 1 for SVM.  */
 	__u16 format;
-
-	/* 128 for SVM, 128 + VMCS size for VMX.  */
 	__u32 size;
 
 	union {
-		/* VMXON, VMCS */
-		struct kvm_vmx_nested_state vmx;
+		struct kvm_vmx_nested_state_hdr vmx;
 
 		/* Pad the header to 128 bytes.  */
 		__u8 pad[120];
-	};
+	} hdr;
 
-	__u8 data[0];
+	/*
+	 * Define data region as 0 bytes to preserve backwards-compatability
+	 * to old definition of kvm_nested_state in order to avoid changing
+	 * KVM_{GET,PUT}_NESTED_STATE ioctl values.
+	 */
+	union {
+		struct kvm_vmx_nested_state_data vmx[0];
+	} data;
 };
 
 #endif /* _ASM_X86_KVM_H */
