mptcp: silence warning in subflow_data_ready()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Davide Caratti <dcaratti@redhat.com>
commit 8c728940487945e25cdfe020d58da42143aa98c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8c728940.failed

since commit d47a72152097 ("mptcp: fix race in subflow_data_ready()"), it
is possible to observe a regression in MP_JOIN kselftests. For sockets in
TCP_CLOSE state, it's not sufficient to just wake up the main socket: we
also need to ensure that received data are made available to the reader.
Silence the WARN_ON_ONCE() in these cases: it preserves the syzkaller fix
and restores kselftests	when they are ran as follows:

  # while true; do
  > make KBUILD_OUTPUT=/tmp/kselftest TARGETS=net/mptcp kselftest
  > done

	Reported-by: Florian Westphal <fw@strlen.de>
Fixes: d47a72152097 ("mptcp: fix race in subflow_data_ready()")
Closes: https://github.com/multipath-tcp/mptcp_net-next/issues/47
	Signed-off-by: Davide Caratti <dcaratti@redhat.com>
	Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8c728940487945e25cdfe020d58da42143aa98c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/subflow.c
diff --cc net/mptcp/subflow.c
index 98a512655df1,519122e66f17..000000000000
--- a/net/mptcp/subflow.c
+++ b/net/mptcp/subflow.c
@@@ -804,15 -851,38 +804,28 @@@ bool mptcp_subflow_data_available(struc
  static void subflow_data_ready(struct sock *sk)
  {
  	struct mptcp_subflow_context *subflow = mptcp_subflow_ctx(sk);
+ 	u16 state = 1 << inet_sk_state_load(sk);
  	struct sock *parent = subflow->conn;
 -	struct mptcp_sock *msk;
  
++<<<<<<< HEAD
 +	if (!subflow->mp_capable && !subflow->mp_join) {
 +		subflow->tcp_data_ready(sk);
 +
++=======
+ 	msk = mptcp_sk(parent);
+ 	if (state & TCPF_LISTEN) {
+ 		set_bit(MPTCP_DATA_READY, &msk->flags);
++>>>>>>> 8c7289404879 (mptcp: silence warning in subflow_data_ready())
  		parent->sk_data_ready(parent);
  		return;
  	}
  
++<<<<<<< HEAD
++=======
+ 	WARN_ON_ONCE(!__mptcp_check_fallback(msk) && !subflow->mp_capable &&
+ 		     !subflow->mp_join && !(state & TCPF_CLOSE));
+ 
++>>>>>>> 8c7289404879 (mptcp: silence warning in subflow_data_ready())
  	if (mptcp_subflow_data_available(sk))
  		mptcp_data_ready(parent, sk);
  }
* Unmerged path net/mptcp/subflow.c
