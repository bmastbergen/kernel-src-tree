powerpc/pseries: Introduce option to build secure virtual machines

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [powerpc] pseries: Introduce option to build secure virtual machines (Michael Roth) [1730194]
Rebuild_FUZZ: 93.55%
commit-author Thiago Jung Bauermann <bauerman@linux.ibm.com>
commit 136bc0397ae21dbf63ca02e5775ad353a479cd2f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/136bc039.failed

Introduce CONFIG_PPC_SVM to control support for secure guests and include
Ultravisor-related helpers when it is selected

	Signed-off-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20190820021326.6884-3-bauerman@linux.ibm.com
(cherry picked from commit 136bc0397ae21dbf63ca02e5775ad353a479cd2f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/asm-prototypes.h
#	arch/powerpc/kernel/Makefile
diff --cc arch/powerpc/include/asm/asm-prototypes.h
index ccbb48e495ff,49196d35e3bb..000000000000
--- a/arch/powerpc/include/asm/asm-prototypes.h
+++ b/arch/powerpc/include/asm/asm-prototypes.h
@@@ -38,6 -35,16 +38,19 @@@ extern struct static_key hcall_tracepoi
  void __trace_hcall_entry(unsigned long opcode, unsigned long *args);
  void __trace_hcall_exit(long opcode, long retval, unsigned long *retbuf);
  
++<<<<<<< HEAD
++=======
+ /* Ultravisor */
+ #if defined(CONFIG_PPC_POWERNV) || defined(CONFIG_PPC_SVM)
+ long ucall_norets(unsigned long opcode, ...);
+ #else
+ static inline long ucall_norets(unsigned long opcode, ...)
+ {
+ 	return U_NOT_AVAILABLE;
+ }
+ #endif
+ 
++>>>>>>> 136bc0397ae2 (powerpc/pseries: Introduce option to build secure virtual machines)
  /* OPAL */
  int64_t __opal_call(int64_t a0, int64_t a1, int64_t a2, int64_t a3,
  		    int64_t a4, int64_t a5, int64_t a6, int64_t a7,
diff --cc arch/powerpc/kernel/Makefile
index ee9c85467e0d,c6ae0e7914bc..000000000000
--- a/arch/powerpc/kernel/Makefile
+++ b/arch/powerpc/kernel/Makefile
@@@ -143,17 -156,25 +143,23 @@@ endi
  
  obj-$(CONFIG_EPAPR_PARAVIRT)	+= epapr_paravirt.o epapr_hcalls.o
  obj-$(CONFIG_KVM_GUEST)		+= kvm.o kvm_emul.o
++<<<<<<< HEAD
++=======
+ ifneq ($(CONFIG_PPC_POWERNV)$(CONFIG_PPC_SVM),)
+ obj-y				+= ucall.o
+ endif
++>>>>>>> 136bc0397ae2 (powerpc/pseries: Introduce option to build secure virtual machines)
  
 -# Disable GCOV, KCOV & sanitizers in odd or sensitive code
 +# Disable GCOV & sanitizers in odd or sensitive code
  GCOV_PROFILE_prom_init.o := n
 -KCOV_INSTRUMENT_prom_init.o := n
  UBSAN_SANITIZE_prom_init.o := n
  GCOV_PROFILE_machine_kexec_64.o := n
 -KCOV_INSTRUMENT_machine_kexec_64.o := n
  UBSAN_SANITIZE_machine_kexec_64.o := n
  GCOV_PROFILE_machine_kexec_32.o := n
 -KCOV_INSTRUMENT_machine_kexec_32.o := n
  UBSAN_SANITIZE_machine_kexec_32.o := n
  GCOV_PROFILE_kprobes.o := n
 -KCOV_INSTRUMENT_kprobes.o := n
  UBSAN_SANITIZE_kprobes.o := n
  GCOV_PROFILE_kprobes-ftrace.o := n
 -KCOV_INSTRUMENT_kprobes-ftrace.o := n
  UBSAN_SANITIZE_kprobes-ftrace.o := n
  UBSAN_SANITIZE_vdso.o := n
  
* Unmerged path arch/powerpc/include/asm/asm-prototypes.h
* Unmerged path arch/powerpc/kernel/Makefile
diff --git a/arch/powerpc/platforms/pseries/Kconfig b/arch/powerpc/platforms/pseries/Kconfig
index ee7adb042f22..baed737cbe24 100644
--- a/arch/powerpc/platforms/pseries/Kconfig
+++ b/arch/powerpc/platforms/pseries/Kconfig
@@ -147,3 +147,14 @@ config PAPR_SCM
 	tristate "Support for the PAPR Storage Class Memory interface"
 	help
 	  Enable access to hypervisor provided storage class memory.
+
+config PPC_SVM
+	bool "Secure virtual machine (SVM) support for POWER"
+	depends on PPC_PSERIES
+	help
+	 There are certain POWER platforms which support secure guests using
+	 the Protected Execution Facility, with the help of an Ultravisor
+	 executing below the hypervisor layer. This enables support for
+	 those guests.
+
+	 If unsure, say "N".
