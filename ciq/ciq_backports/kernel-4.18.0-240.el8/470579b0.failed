perf tools: Rename perf_evlist__exit() to evlist__exit()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 470579b0211d370fd3bd7c2f2b2b098f1ca1ae65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/470579b0.failed

Rename perf_evlist__exit() to evlist__exit(), so we don't have a name
clash when we add perf_evlist__exit() to libperf.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-8-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 470579b0211d370fd3bd7c2f2b2b098f1ca1ae65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
#	tools/perf/util/evlist.h
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,4c5b7040c02b..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -118,20 -124,20 +118,24 @@@ static void perf_evlist__update_id_pos(
  	perf_evlist__set_id_pos(evlist);
  }
  
 -static void perf_evlist__purge(struct evlist *evlist)
 +static void perf_evlist__purge(struct perf_evlist *evlist)
  {
 -	struct evsel *pos, *n;
 +	struct perf_evsel *pos, *n;
  
  	evlist__for_each_entry_safe(evlist, n, pos) {
 -		list_del_init(&pos->core.node);
 +		list_del_init(&pos->node);
  		pos->evlist = NULL;
 -		evsel__delete(pos);
 +		perf_evsel__delete(pos);
  	}
  
 -	evlist->core.nr_entries = 0;
 +	evlist->nr_entries = 0;
  }
  
++<<<<<<< HEAD
 +void perf_evlist__exit(struct perf_evlist *evlist)
++=======
+ void evlist__exit(struct evlist *evlist)
++>>>>>>> 470579b0211d (perf tools: Rename perf_evlist__exit() to evlist__exit())
  {
  	zfree(&evlist->mmap);
  	zfree(&evlist->overwrite_mmap);
@@@ -143,14 -149,14 +147,14 @@@ void perf_evlist__delete(struct perf_ev
  	if (evlist == NULL)
  		return;
  
 -	evlist__munmap(evlist);
 -	evlist__close(evlist);
 -	perf_cpu_map__put(evlist->core.cpus);
 -	perf_thread_map__put(evlist->core.threads);
 -	evlist->core.cpus = NULL;
 -	evlist->core.threads = NULL;
 +	perf_evlist__munmap(evlist);
 +	perf_evlist__close(evlist);
 +	cpu_map__put(evlist->cpus);
 +	thread_map__put(evlist->threads);
 +	evlist->cpus = NULL;
 +	evlist->threads = NULL;
  	perf_evlist__purge(evlist);
- 	perf_evlist__exit(evlist);
+ 	evlist__exit(evlist);
  	free(evlist);
  }
  
diff --cc tools/perf/util/evlist.h
index 49354fe24d5f,b33c5d67410a..000000000000
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@@ -65,20 -60,20 +65,30 @@@ struct perf_evsel_str_handler 
  	void	   *handler;
  };
  
++<<<<<<< HEAD
 +struct perf_evlist *perf_evlist__new(void);
 +struct perf_evlist *perf_evlist__new_default(void);
 +struct perf_evlist *perf_evlist__new_dummy(void);
 +void perf_evlist__init(struct perf_evlist *evlist, struct cpu_map *cpus,
 +		       struct thread_map *threads);
 +void perf_evlist__exit(struct perf_evlist *evlist);
 +void perf_evlist__delete(struct perf_evlist *evlist);
++=======
+ struct evlist *evlist__new(void);
+ struct evlist *perf_evlist__new_default(void);
+ struct evlist *perf_evlist__new_dummy(void);
+ void evlist__init(struct evlist *evlist, struct perf_cpu_map *cpus,
+ 		  struct perf_thread_map *threads);
+ void evlist__exit(struct evlist *evlist);
+ void evlist__delete(struct evlist *evlist);
++>>>>>>> 470579b0211d (perf tools: Rename perf_evlist__exit() to evlist__exit())
  
 -void evlist__add(struct evlist *evlist, struct evsel *entry);
 -void evlist__remove(struct evlist *evlist, struct evsel *evsel);
 +void perf_evlist__add(struct perf_evlist *evlist, struct perf_evsel *entry);
 +void perf_evlist__remove(struct perf_evlist *evlist, struct perf_evsel *evsel);
  
 -int __perf_evlist__add_default(struct evlist *evlist, bool precise);
 +int __perf_evlist__add_default(struct perf_evlist *evlist, bool precise);
  
 -static inline int perf_evlist__add_default(struct evlist *evlist)
 +static inline int perf_evlist__add_default(struct perf_evlist *evlist)
  {
  	return __perf_evlist__add_default(evlist, true);
  }
* Unmerged path tools/perf/util/evlist.c
* Unmerged path tools/perf/util/evlist.h
diff --git a/tools/perf/util/python.c b/tools/perf/util/python.c
index 9c3b43665909..e770e480ffd9 100644
--- a/tools/perf/util/python.c
+++ b/tools/perf/util/python.c
@@ -879,7 +879,7 @@ static int pyrf_evlist__init(struct pyrf_evlist *pevlist,
 
 static void pyrf_evlist__delete(struct pyrf_evlist *pevlist)
 {
-	perf_evlist__exit(&pevlist->evlist);
+	evlist__exit(&pevlist->evlist);
 	Py_TYPE(pevlist)->tp_free((PyObject*)pevlist);
 }
 
