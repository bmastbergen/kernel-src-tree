efi/tpm: Return -EINVAL when determining tpm final events log size fails

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jerry Snitselaar <jsnitsel@redhat.com>
commit 2bb6a81633cb47dcba4c9f75605cbe49e6b73d60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2bb6a816.failed

Currently nothing checks the return value of efi_tpm_eventlog_init(),
but in case that changes in the future make sure an error is
returned when it fails to determine the tpm final events log
size.

	Suggested-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Jerry Snitselaar <jsnitsel@redhat.com>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-efi@vger.kernel.org
Fixes: e658c82be556 ("efi/tpm: Only set 'efi_tpm_final_log_size' after ...")
Link: https://lkml.kernel.org/r/20191029173755.27149-3-ardb@kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 2bb6a81633cb47dcba4c9f75605cbe49e6b73d60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/efi/tpm.c
diff --cc drivers/firmware/efi/tpm.c
index 0cbeb3d46b18,31f9f0e369b9..000000000000
--- a/drivers/firmware/efi/tpm.c
+++ b/drivers/firmware/efi/tpm.c
@@@ -34,7 -61,45 +34,48 @@@ int __init efi_tpm_eventlog_init(void
  
  	tbl_size = sizeof(*log_tbl) + log_tbl->size;
  	memblock_reserve(efi.tpm_log, tbl_size);
++<<<<<<< HEAD
++=======
+ 
+ 	if (efi.tpm_final_log == EFI_INVALID_TABLE_ADDR)
+ 		goto out;
+ 
+ 	final_tbl = early_memremap(efi.tpm_final_log, sizeof(*final_tbl));
+ 
+ 	if (!final_tbl) {
+ 		pr_err("Failed to map TPM Final Event Log table @ 0x%lx\n",
+ 		       efi.tpm_final_log);
+ 		efi.tpm_final_log = EFI_INVALID_TABLE_ADDR;
+ 		ret = -ENOMEM;
+ 		goto out;
+ 	}
+ 
+ 	tbl_size = 0;
+ 	if (final_tbl->nr_events != 0) {
+ 		void *events = (void *)efi.tpm_final_log
+ 				+ sizeof(final_tbl->version)
+ 				+ sizeof(final_tbl->nr_events);
+ 
+ 		tbl_size = tpm2_calc_event_log_size(events,
+ 						    final_tbl->nr_events,
+ 						    log_tbl->log);
+ 	}
+ 
+ 	if (tbl_size < 0) {
+ 		pr_err(FW_BUG "Failed to parse event in TPM Final Events Log\n");
+ 		ret = -EINVAL;
+ 		goto out_calc;
+ 	}
+ 
+ 	memblock_reserve((unsigned long)final_tbl,
+ 			 tbl_size + sizeof(*final_tbl));
+ 	efi_tpm_final_log_size = tbl_size;
+ 
+ out_calc:
+ 	early_memunmap(final_tbl, sizeof(*final_tbl));
+ out:
++>>>>>>> 2bb6a81633cb (efi/tpm: Return -EINVAL when determining tpm final events log size fails)
  	early_memunmap(log_tbl, sizeof(*log_tbl));
 -	return ret;
 +	return 0;
  }
  
* Unmerged path drivers/firmware/efi/tpm.c
