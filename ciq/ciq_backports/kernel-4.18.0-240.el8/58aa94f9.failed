devmap: Adjust tracepoint for map-less queue flush

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jesper Dangaard Brouer <brouer@redhat.com>
commit 58aa94f922c1b44e0919d1814d2eab5b9e8bf945
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/58aa94f9.failed

Now that we don't have a reference to a devmap when flushing the device
bulk queue, let's change the the devmap_xmit tracepoint to remote the
map_id and map_index fields entirely. Rearrange the fields so 'drops' and
'sent' stay in the same position in the tracepoint struct, to make it
possible for the xdp_monitor utility to read both the old and the new
format.

	Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/157918768613.1458396.9165902403373826572.stgit@toke.dk
(cherry picked from commit 58aa94f922c1b44e0919d1814d2eab5b9e8bf945)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/trace/events/xdp.h
#	kernel/bpf/devmap.c
diff --cc include/trace/events/xdp.h
index 42362fb56f08,b95d65e8c628..000000000000
--- a/include/trace/events/xdp.h
+++ b/include/trace/events/xdp.h
@@@ -277,13 -262,11 +274,15 @@@ TRACE_EVENT(xdp_devmap_xmit
  	),
  
  	TP_fast_assign(
++<<<<<<< HEAD
 +		__entry->map_id		= map->id;
++=======
+ 		__entry->from_ifindex	= from_dev->ifindex;
++>>>>>>> 58aa94f922c1 (devmap: Adjust tracepoint for map-less queue flush)
  		__entry->act		= XDP_REDIRECT;
- 		__entry->map_index	= map_index;
+ 		__entry->to_ifindex	= to_dev->ifindex;
  		__entry->drops		= drops;
  		__entry->sent		= sent;
- 		__entry->from_ifindex	= from_dev->ifindex;
- 		__entry->to_ifindex	= to_dev->ifindex;
  		__entry->err		= err;
  	),
  
diff --cc kernel/bpf/devmap.c
index cfc445b29247,de630f980282..000000000000
--- a/kernel/bpf/devmap.c
+++ b/kernel/bpf/devmap.c
@@@ -253,8 -340,7 +253,12 @@@ static int bq_xmit_all(struct xdp_bulk_
  out:
  	bq->count = 0;
  
++<<<<<<< HEAD
 +	trace_xdp_devmap_xmit(&obj->dtab->map, obj->idx,
 +			      sent, drops, bq->dev_rx, dev, err);
++=======
+ 	trace_xdp_devmap_xmit(bq->dev_rx, dev, sent, drops, err);
++>>>>>>> 58aa94f922c1 (devmap: Adjust tracepoint for map-less queue flush)
  	bq->dev_rx = NULL;
  	__list_del_clearprev(&bq->flush_node);
  	return 0;
* Unmerged path include/trace/events/xdp.h
* Unmerged path kernel/bpf/devmap.c
diff --git a/samples/bpf/xdp_monitor_kern.c b/samples/bpf/xdp_monitor_kern.c
index ad10fe700d7d..39458a44472e 100644
--- a/samples/bpf/xdp_monitor_kern.c
+++ b/samples/bpf/xdp_monitor_kern.c
@@ -222,14 +222,12 @@ struct bpf_map_def SEC("maps") devmap_xmit_cnt = {
  */
 struct devmap_xmit_ctx {
 	u64 __pad;		// First 8 bytes are not accessible by bpf code
-	int map_id;		//	offset:8;  size:4; signed:1;
+	int from_ifindex;	//	offset:8;  size:4; signed:1;
 	u32 act;		//	offset:12; size:4; signed:0;
-	u32 map_index;		//	offset:16; size:4; signed:0;
+	int to_ifindex; 	//	offset:16; size:4; signed:1;
 	int drops;		//	offset:20; size:4; signed:1;
 	int sent;		//	offset:24; size:4; signed:1;
-	int from_ifindex;	//	offset:28; size:4; signed:1;
-	int to_ifindex;		//	offset:32; size:4; signed:1;
-	int err;		//	offset:36; size:4; signed:1;
+	int err;		//	offset:28; size:4; signed:1;
 };
 
 SEC("tracepoint/xdp/xdp_devmap_xmit")
