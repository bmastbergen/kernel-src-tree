drivers: net: Fix Kconfig indentation, continued

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Krzysztof Kozlowski <krzk@kernel.org>
commit 5421cf84af69a94ebb179fec252f3772c4681cca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5421cf84.failed

Adjust indentation from spaces to tab (+optional two spaces) as in
coding style.  This fixes various indentation mixups (seven spaces,
tab+one space, etc).

	Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5421cf84af69a94ebb179fec252f3772c4681cca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/Kconfig
#	drivers/net/caif/Kconfig
#	drivers/net/wireless/atmel/Kconfig
diff --cc drivers/net/Kconfig
index bf934011c068,d02f12a5254e..000000000000
--- a/drivers/net/Kconfig
+++ b/drivers/net/Kconfig
@@@ -145,26 -146,29 +145,37 @@@ config MACVTA
  	  To compile this driver as a module, choose M here: the module
  	  will be called macvtap.
  
 -config IPVLAN_L3S
 -	depends on NETFILTER
 -	depends on IPVLAN
 -	def_bool y
 -	select NET_L3_MASTER_DEV
  
  config IPVLAN
++<<<<<<< HEAD
 +    tristate "IP-VLAN support"
 +    depends on INET
 +    depends on IPV6 || !IPV6
 +    depends on NETFILTER
 +    select NET_L3_MASTER_DEV
 +    ---help---
 +      This allows one to create virtual devices off of a main interface
 +      and packets will be delivered based on the dest L3 (IPv6/IPv4 addr)
 +      on packets. All interfaces (including the main interface) share L2
 +      making it transparent to the connected L2 switch.
++=======
+ 	tristate "IP-VLAN support"
+ 	depends on INET
+ 	depends on IPV6 || !IPV6
+ 	---help---
+ 	  This allows one to create virtual devices off of a main interface
+ 	  and packets will be delivered based on the dest L3 (IPv6/IPv4 addr)
+ 	  on packets. All interfaces (including the main interface) share L2
+ 	  making it transparent to the connected L2 switch.
++>>>>>>> 5421cf84af69 (drivers: net: Fix Kconfig indentation, continued)
  
-       Ipvlan devices can be added using the "ip" command from the
-       iproute2 package starting with the iproute2-3.19 release:
+ 	  Ipvlan devices can be added using the "ip" command from the
+ 	  iproute2 package starting with the iproute2-3.19 release:
  
-       "ip link add link <main-dev> [ NAME ] type ipvlan"
+ 	  "ip link add link <main-dev> [ NAME ] type ipvlan"
  
-       To compile this driver as a module, choose M here: the module
-       will be called ipvlan.
+ 	  To compile this driver as a module, choose M here: the module
+ 	  will be called ipvlan.
  
  config IPVTAP
  	tristate "IP-VLAN based tap driver"
@@@ -196,12 -200,12 +207,21 @@@ config VXLA
  	  will be called vxlan.
  
  config GENEVE
++<<<<<<< HEAD
 +       tristate "Generic Network Virtualization Encapsulation"
 +       depends on INET && NET_UDP_TUNNEL
 +       depends on IPV6 || !IPV6
 +       select NET_IP_TUNNEL
 +       select GRO_CELLS
 +       ---help---
++=======
+ 	tristate "Generic Network Virtualization Encapsulation"
+ 	depends on INET
+ 	depends on IPV6 || !IPV6
+ 	select NET_UDP_TUNNEL
+ 	select GRO_CELLS
+ 	---help---
++>>>>>>> 5421cf84af69 (drivers: net: Fix Kconfig indentation, continued)
  	  This allows one to create geneve virtual interfaces that provide
  	  Layer 2 Networks over Layer 3 Networks. GENEVE is often used
  	  to tunnel virtual network infrastructure in virtualized environments.
diff --cc drivers/net/caif/Kconfig
index f81df91a9ce1,e74e2bb61236..000000000000
--- a/drivers/net/caif/Kconfig
+++ b/drivers/net/caif/Kconfig
@@@ -18,28 -25,28 +18,45 @@@ config CAIF_SPI_SLAV
  	depends on CAIF && HAS_DMA
  	default n
  	---help---
++<<<<<<< HEAD
 +	The CAIF Link layer SPI Protocol driver for Slave SPI interface.
 +	This driver implements a platform driver to accommodate for a
 +	platform specific SPI device. A sample CAIF SPI Platform device is
 +	provided in Documentation/networking/caif/spi_porting.txt
++=======
+ 	  The CAIF Link layer SPI Protocol driver for Slave SPI interface.
+ 	  This driver implements a platform driver to accommodate for a
+ 	  platform specific SPI device. A sample CAIF SPI Platform device is
+ 	  provided in <file:Documentation/networking/caif/spi_porting.txt>.
++>>>>>>> 5421cf84af69 (drivers: net: Fix Kconfig indentation, continued)
  
  config CAIF_SPI_SYNC
  	bool "Next command and length in start of frame"
  	depends on CAIF_SPI_SLAVE
  	default n
  	---help---
- 	Putting the next command and length in the start of the frame can
- 	help to synchronize to the next transfer in case of over or under-runs.
- 	This option also needs to be enabled on the modem.
+ 	  Putting the next command and length in the start of the frame can
+ 	  help to synchronize to the next transfer in case of over or under-runs.
+ 	  This option also needs to be enabled on the modem.
  
  config CAIF_HSI
++<<<<<<< HEAD
 +       tristate "CAIF HSI transport driver"
 +       depends on CAIF
 +       default n
 +       ---help---
 +       The caif low level driver for CAIF over HSI.
 +       Be aware that if you enable this then you also need to
 +       enable a low-level HSI driver.
++=======
+ 	tristate "CAIF HSI transport driver"
+ 	depends on CAIF
+ 	default n
+ 	---help---
+ 	  The CAIF low level driver for CAIF over HSI.
+ 	  Be aware that if you enable this then you also need to
+ 	  enable a low-level HSI driver.
++>>>>>>> 5421cf84af69 (drivers: net: Fix Kconfig indentation, continued)
  
  config CAIF_VIRTIO
  	tristate "CAIF virtio transport driver"
@@@ -49,7 -56,7 +66,11 @@@
  	select GENERIC_ALLOCATOR
  	default n
  	---help---
++<<<<<<< HEAD
 +	The caif driver for CAIF over Virtio.
++=======
+ 	  The CAIF driver for CAIF over Virtio.
++>>>>>>> 5421cf84af69 (drivers: net: Fix Kconfig indentation, continued)
  
  if CAIF_VIRTIO
  source "drivers/vhost/Kconfig.vringh"
diff --cc drivers/net/wireless/atmel/Kconfig
index 3e684f8c1f93,c2142c70f25d..000000000000
--- a/drivers/net/wireless/atmel/Kconfig
+++ b/drivers/net/wireless/atmel/Kconfig
@@@ -12,29 -13,29 +12,55 @@@ config WLAN_VENDOR_ATME
  if WLAN_VENDOR_ATMEL
  
  config ATMEL
++<<<<<<< HEAD
 +      tristate "Atmel at76c50x chipset  802.11b support"
 +      depends on CFG80211 && (PCI || PCMCIA)
 +      select WIRELESS_EXT
 +      select WEXT_PRIV
 +      select FW_LOADER
 +      select CRC32
 +       ---help---
 +        A driver 802.11b wireless cards based on the Atmel fast-vnet
 +        chips. This driver supports standard Linux wireless extensions.
 +
 +        Many  cards based on this chipset do not have flash memory
 +        and need their firmware loaded at start-up. If yours is
 +        one of these, you will need to provide a firmware image
 +        to be loaded into the card by the driver. The Atmel
 +        firmware package can be downloaded from
 +        <http://www.thekelleys.org.uk/atmel>
 +
 +config PCI_ATMEL
 +      tristate "Atmel at76c506 PCI cards"
 +      depends on ATMEL && PCI
 +       ---help---
 +        Enable support for PCI and mini-PCI cards containing the
 +        Atmel at76c506 chip.
++=======
+ 	tristate "Atmel at76c50x chipset  802.11b support"
+ 	depends on CFG80211 && (PCI || PCMCIA)
+ 	select WIRELESS_EXT
+ 	select WEXT_PRIV
+ 	select FW_LOADER
+ 	select CRC32
+ 	---help---
+ 	  A driver 802.11b wireless cards based on the Atmel fast-vnet
+ 	  chips. This driver supports standard Linux wireless extensions.
+ 
+ 	  Many  cards based on this chipset do not have flash memory
+ 	  and need their firmware loaded at start-up. If yours is
+ 	  one of these, you will need to provide a firmware image
+ 	  to be loaded into the card by the driver. The Atmel
+ 	  firmware package can be downloaded from
+ 	  <http://www.thekelleys.org.uk/atmel>
+ 
+ config PCI_ATMEL
+ 	tristate "Atmel at76c506 PCI cards"
+ 	depends on ATMEL && PCI
+ 	---help---
+ 	  Enable support for PCI and mini-PCI cards containing the
+ 	  Atmel at76c506 chip.
++>>>>>>> 5421cf84af69 (drivers: net: Fix Kconfig indentation, continued)
  
  config PCMCIA_ATMEL
  	tristate "Atmel at76c502/at76c504 PCMCIA cards"
* Unmerged path drivers/net/Kconfig
* Unmerged path drivers/net/caif/Kconfig
diff --git a/drivers/net/ethernet/freescale/fs_enet/Kconfig b/drivers/net/ethernet/freescale/fs_enet/Kconfig
index be92229f2c2a..d0cef27cd548 100644
--- a/drivers/net/ethernet/freescale/fs_enet/Kconfig
+++ b/drivers/net/ethernet/freescale/fs_enet/Kconfig
@@ -1,8 +1,8 @@
 config FS_ENET
-       tristate "Freescale Ethernet Driver"
-       depends on NET_VENDOR_FREESCALE && (CPM1 || CPM2 || PPC_MPC512x)
-       select MII
-       select PHYLIB
+	tristate "Freescale Ethernet Driver"
+	depends on NET_VENDOR_FREESCALE && (CPM1 || CPM2 || PPC_MPC512x)
+	select MII
+	select PHYLIB
 
 config FS_ENET_MPC5121_FEC
 	def_bool y if (FS_ENET && PPC_MPC512x)
diff --git a/drivers/net/ieee802154/Kconfig b/drivers/net/ieee802154/Kconfig
index 8782f5655e3f..c000f7f6e646 100644
--- a/drivers/net/ieee802154/Kconfig
+++ b/drivers/net/ieee802154/Kconfig
@@ -73,9 +73,9 @@ config IEEE802154_ATUSB
 	  The module will be called 'atusb'.
 
 config IEEE802154_ADF7242
-       tristate "ADF7242 transceiver driver"
-       depends on IEEE802154_DRIVERS && MAC802154
-       depends on SPI
+	tristate "ADF7242 transceiver driver"
+	depends on IEEE802154_DRIVERS && MAC802154
+	depends on SPI
 	---help---
 	  Say Y here to enable the ADF7242 SPI 802.15.4 wireless
 	  controller.
@@ -106,9 +106,9 @@ config IEEE802154_CA8210_DEBUGFS
 	  management entities.
 
 config IEEE802154_MCR20A
-       tristate "MCR20A transceiver driver"
-       depends on IEEE802154_DRIVERS && MAC802154
-       depends on SPI
+	tristate "MCR20A transceiver driver"
+	depends on IEEE802154_DRIVERS && MAC802154
+	depends on SPI
 	---help---
 	  Say Y here to enable the MCR20A SPI 802.15.4 wireless
 	  controller.
diff --git a/drivers/net/wireless/ath/Kconfig b/drivers/net/wireless/ath/Kconfig
index 56616d988c96..7b90b8546162 100644
--- a/drivers/net/wireless/ath/Kconfig
+++ b/drivers/net/wireless/ath/Kconfig
@@ -30,12 +30,12 @@ config ATH_DEBUG
 	  Right now only ath9k makes use of this.
 
 config ATH_TRACEPOINTS
-       bool "Atheros wireless tracing"
-       depends on ATH_DEBUG
-       depends on EVENT_TRACING
-       ---help---
-	 This option enables tracepoints for atheros wireless drivers.
-	 Currently, ath9k makes use of this facility.
+	bool "Atheros wireless tracing"
+	depends on ATH_DEBUG
+	depends on EVENT_TRACING
+	---help---
+	  This option enables tracepoints for atheros wireless drivers.
+	  Currently, ath9k makes use of this facility.
 
 config ATH_REG_DYNAMIC_USER_REG_HINTS
 	bool "Atheros dynamic user regulatory hints"
diff --git a/drivers/net/wireless/ath/ar5523/Kconfig b/drivers/net/wireless/ath/ar5523/Kconfig
index 65b39c7d035d..e82df5f1ea67 100644
--- a/drivers/net/wireless/ath/ar5523/Kconfig
+++ b/drivers/net/wireless/ath/ar5523/Kconfig
@@ -1,9 +1,9 @@
 # SPDX-License-Identifier: ISC
 config AR5523
-       tristate "Atheros AR5523 wireless driver support"
-       depends on MAC80211 && USB
-       select ATH_COMMON
-       select FW_LOADER
-       ---help---
-	 This module add support for AR5523 based USB dongles such as D-Link
-	 DWL-G132, Netgear WPN111 and many more.
+	tristate "Atheros AR5523 wireless driver support"
+	depends on MAC80211 && USB
+	select ATH_COMMON
+	select FW_LOADER
+	---help---
+	  This module add support for AR5523 based USB dongles such as D-Link
+	  DWL-G132, Netgear WPN111 and many more.
diff --git a/drivers/net/wireless/ath/ath9k/Kconfig b/drivers/net/wireless/ath/ath9k/Kconfig
index c99f42284465..78620c6b64a2 100644
--- a/drivers/net/wireless/ath/ath9k/Kconfig
+++ b/drivers/net/wireless/ath/ath9k/Kconfig
@@ -144,13 +144,13 @@ config ATH9K_RFKILL
 	  a platform that can toggle the RF-Kill GPIO.
 
 config ATH9K_CHANNEL_CONTEXT
-       bool "Channel Context support"
-       depends on ATH9K
-       default n
-       ---help---
-	 This option enables channel context support in ath9k, which is needed
-	 for multi-channel concurrency. Enable this if P2P PowerSave support
-	 is required.
+	bool "Channel Context support"
+	depends on ATH9K
+	default n
+	---help---
+	  This option enables channel context support in ath9k, which is needed
+	  for multi-channel concurrency. Enable this if P2P PowerSave support
+	  is required.
 
 config ATH9K_PCOEM
 	bool "Atheros ath9k support for PC OEM cards" if EXPERT
@@ -162,32 +162,32 @@ config ATH9K_PCI_NO_EEPROM
 	depends on ATH9K_PCI
 	default n
 	help
-	 This separate driver provides a loader in order to support the
-	 AR500X to AR92XX-generation of ath9k PCI(e) WiFi chips, which have
-	 their initialization data (which contains the real PCI Device ID
-	 that ath9k will need) stored together with the calibration data out
-	 of reach for the ath9k chip.
+	  This separate driver provides a loader in order to support the
+	  AR500X to AR92XX-generation of ath9k PCI(e) WiFi chips, which have
+	  their initialization data (which contains the real PCI Device ID
+	  that ath9k will need) stored together with the calibration data out
+	  of reach for the ath9k chip.
 
-	 These devices are usually various network appliances, routers or
-	 access Points and such.
+	  These devices are usually various network appliances, routers or
+	  access Points and such.
 
-	 If unsure say N.
+	  If unsure say N.
 
 config ATH9K_HTC
-       tristate "Atheros HTC based wireless cards support"
-       depends on USB && MAC80211
-       select ATH9K_HW
-       select MAC80211_LEDS
-       select LEDS_CLASS
-       select NEW_LEDS
-       select ATH9K_COMMON
-       ---help---
-	 Support for Atheros HTC based cards.
-	 Chipsets supported: AR9271
-
-	 For more information: http://wireless.kernel.org/en/users/Drivers/ath9k_htc
-
-	 The built module will be ath9k_htc.
+	tristate "Atheros HTC based wireless cards support"
+	depends on USB && MAC80211
+	select ATH9K_HW
+	select MAC80211_LEDS
+	select LEDS_CLASS
+	select NEW_LEDS
+	select ATH9K_COMMON
+	---help---
+	  Support for Atheros HTC based cards.
+	  Chipsets supported: AR9271
+
+	  For more information: http://wireless.kernel.org/en/users/Drivers/ath9k_htc
+
+	  The built module will be ath9k_htc.
 
 config ATH9K_HTC_DEBUGFS
 	bool "Atheros ath9k_htc debugging"
* Unmerged path drivers/net/wireless/atmel/Kconfig
diff --git a/drivers/net/wireless/ralink/rt2x00/Kconfig b/drivers/net/wireless/ralink/rt2x00/Kconfig
index 9470850deac2..7aec9f81bbfb 100644
--- a/drivers/net/wireless/ralink/rt2x00/Kconfig
+++ b/drivers/net/wireless/ralink/rt2x00/Kconfig
@@ -94,20 +94,20 @@ config RT2800PCI_RT35XX
 
 
 config RT2800PCI_RT53XX
-       bool "rt2800pci - Include support for rt53xx devices (EXPERIMENTAL)"
-       default y
-       ---help---
-	 This adds support for rt53xx wireless chipset family to the
-	 rt2800pci driver.
-	 Supported chips: RT5390
+	bool "rt2800pci - Include support for rt53xx devices (EXPERIMENTAL)"
+	default y
+	---help---
+	  This adds support for rt53xx wireless chipset family to the
+	  rt2800pci driver.
+	  Supported chips: RT5390
 
 config RT2800PCI_RT3290
-       bool "rt2800pci - Include support for rt3290 devices (EXPERIMENTAL)"
-       default y
-       ---help---
-	 This adds support for rt3290 wireless chipset family to the
-	 rt2800pci driver.
-	 Supported chips: RT3290
+	bool "rt2800pci - Include support for rt3290 devices (EXPERIMENTAL)"
+	default y
+	---help---
+	  This adds support for rt3290 wireless chipset family to the
+	  rt2800pci driver.
+	  Supported chips: RT3290
 endif
 
 config RT2500USB
@@ -173,18 +173,18 @@ config RT2800USB_RT3573
 	  in the rt2800usb driver.
 
 config RT2800USB_RT53XX
-       bool "rt2800usb - Include support for rt53xx devices (EXPERIMENTAL)"
-       ---help---
-	 This adds support for rt53xx wireless chipset family to the
-	 rt2800usb driver.
-	 Supported chips: RT5370
+	bool "rt2800usb - Include support for rt53xx devices (EXPERIMENTAL)"
+	---help---
+	  This adds support for rt53xx wireless chipset family to the
+	  rt2800usb driver.
+	  Supported chips: RT5370
 
 config RT2800USB_RT55XX
-       bool "rt2800usb - Include support for rt55xx devices (EXPERIMENTAL)"
-       ---help---
-	 This adds support for rt55xx wireless chipset family to the
-	 rt2800usb driver.
-	 Supported chips: RT5572
+	bool "rt2800usb - Include support for rt55xx devices (EXPERIMENTAL)"
+	---help---
+	  This adds support for rt55xx wireless chipset family to the
+	  rt2800usb driver.
+	  Supported chips: RT5572
 
 config RT2800USB_UNKNOWN
 	bool "rt2800usb - Include support for unknown (USB) devices"
diff --git a/drivers/net/wireless/ti/wl12xx/Kconfig b/drivers/net/wireless/ti/wl12xx/Kconfig
index c2183594655a..b7b79a7e50ee 100644
--- a/drivers/net/wireless/ti/wl12xx/Kconfig
+++ b/drivers/net/wireless/ti/wl12xx/Kconfig
@@ -1,9 +1,9 @@
 config WL12XX
-       tristate "TI wl12xx support"
+	tristate "TI wl12xx support"
 	depends on MAC80211
-       select WLCORE
-       ---help---
+	select WLCORE
+	---help---
 	  This module adds support for wireless adapters based on TI wl1271,
 	  wl1273, wl1281 and wl1283 chipsets. This module does *not* include
 	  support for wl1251.  For wl1251 support, use the separate homonymous
-	   driver instead.
+	  driver instead.
