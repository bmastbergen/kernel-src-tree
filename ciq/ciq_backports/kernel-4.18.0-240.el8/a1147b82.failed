NFS: Fix up directory verifier races

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Trond Myklebust <trondmy@gmail.com>
commit a1147b8281bda99bda99892233e1900329a9cbf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a1147b82.failed

In order to avoid having our dentry revalidation race with an update
of the directory on the server, we need to store the verifier before
the RPC calls to LOOKUP and READDIR.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
	Reviewed-by: Benjamin Coddington <bcodding@gmail.com>
	Tested-by: Benjamin Coddington <bcodding@gmail.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit a1147b8281bda99bda99892233e1900329a9cbf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/dir.c
diff --cc fs/nfs/dir.c
index 331356761f53,b4e7558e42ab..000000000000
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@@ -1167,10 -1172,18 +1171,15 @@@ nfs_lookup_revalidate_dentry(struct ino
  	if (fhandle == NULL || fattr == NULL || IS_ERR(label))
  		goto out;
  
++<<<<<<< HEAD
 +	ret = NFS_PROTO(dir)->lookup(dir, &dentry->d_name, fhandle, fattr, label);
++=======
+ 	dir_verifier = nfs_save_change_attribute(dir);
+ 	ret = NFS_PROTO(dir)->lookup(dir, dentry, fhandle, fattr, label);
++>>>>>>> a1147b8281bd (NFS: Fix up directory verifier races)
  	if (ret < 0) {
 -		switch (ret) {
 -		case -ESTALE:
 -		case -ENOENT:
 +		if (ret == -ESTALE || ret == -ENOENT)
  			ret = 0;
 -			break;
 -		case -ETIMEDOUT:
 -			if (NFS_SERVER(inode)->flags & NFS_MOUNT_SOFTREVAL)
 -				ret = 1;
 -		}
  		goto out;
  	}
  	ret = 0;
@@@ -1432,8 -1446,9 +1442,9 @@@ struct dentry *nfs_lookup(struct inode 
  	if (IS_ERR(label))
  		goto out;
  
+ 	dir_verifier = nfs_save_change_attribute(dir);
  	trace_nfs_lookup_enter(dir, dentry, flags);
 -	error = NFS_PROTO(dir)->lookup(dir, dentry, fhandle, fattr, label);
 +	error = NFS_PROTO(dir)->lookup(dir, &dentry->d_name, fhandle, fattr, label);
  	if (error == -ENOENT)
  		goto no_entry;
  	if (error < 0) {
* Unmerged path fs/nfs/dir.c
