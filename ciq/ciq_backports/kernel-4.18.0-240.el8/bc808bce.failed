io_uring: revert "io_uring: optimize submit_and_wait API"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jens Axboe <axboe@kernel.dk>
commit bc808bced39f4e4b626c5ea8c63d5e41fce7205a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/bc808bce.failed

There are cases where it isn't always safe to block for submission,
even if the caller asked to wait for events as well. Revert the
previous optimization of doing that.

This reverts two commits:

bf7ec93c644cb
c576666863b78

Fixes: c576666863b78 ("io_uring: optimize submit_and_wait API")
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit bc808bced39f4e4b626c5ea8c63d5e41fce7205a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/io_uring.c
diff --cc fs/io_uring.c
index e831d5a8df98,08c2c428e212..000000000000
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@@ -2159,8 -2296,14 +2159,19 @@@ static int __io_queue_sqe(struct io_rin
  {
  	int ret;
  
++<<<<<<< HEAD
 +	ret = __io_submit_sqe(ctx, req, s, force_nonblock);
 +	if (ret == -EAGAIN && !(req->flags & REQ_F_NOWAIT)) {
++=======
+ 	ret = __io_submit_sqe(ctx, req, s, true);
+ 
+ 	/*
+ 	 * We async punt it if the file wasn't marked NOWAIT, or if the file
+ 	 * doesn't support non-blocking read/write attempts
+ 	 */
+ 	if (ret == -EAGAIN && (!(req->flags & REQ_F_NOWAIT) ||
+ 	    (req->flags & REQ_F_MUST_PUNT))) {
++>>>>>>> bc808bced39f (io_uring: revert "io_uring: optimize submit_and_wait API")
  		struct io_uring_sqe *sqe_copy;
  
  		sqe_copy = kmemdup(s->sqe, sizeof(*sqe_copy), GFP_KERNEL);
* Unmerged path fs/io_uring.c
