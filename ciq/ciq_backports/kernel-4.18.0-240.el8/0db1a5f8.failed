drm/i915: Implement Wa_1607090982

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Mika Kuoppala <mika.kuoppala@linux.intel.com>
commit 0db1a5f8706a8cfb905b9cf3607c2ad626e7bff1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0db1a5f8.failed

SIMD16 with Src0 scalar might conflict between Src1/Src2 and cause
GRF read issue. Workaround this issue by setting bit 14 in 0xe4f4
which will disable early read/src swap of Src0.

	Signed-off-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
	Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
Link: https://patchwork.freedesktop.org/patch/msgid/20200207155138.30978-2-mika.kuoppala@linux.intel.com
(cherry picked from commit 0db1a5f8706a8cfb905b9cf3607c2ad626e7bff1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/intel_workarounds.c
diff --cc drivers/gpu/drm/i915/gt/intel_workarounds.c
index 8f75882ded3f,62b43f538a56..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_workarounds.c
+++ b/drivers/gpu/drm/i915/gt/intel_workarounds.c
@@@ -581,6 -577,32 +581,35 @@@ static void icl_ctx_workarounds_init(st
  			  GEN11_SAMPLER_ENABLE_HEADLESS_MSG);
  }
  
++<<<<<<< HEAD
++=======
+ static void tgl_ctx_workarounds_init(struct intel_engine_cs *engine,
+ 				     struct i915_wa_list *wal)
+ {
+ 	u32 val;
+ 
+ 	/* Wa_1409142259:tgl */
+ 	WA_SET_BIT_MASKED(GEN11_COMMON_SLICE_CHICKEN3,
+ 			  GEN12_DISABLE_CPS_AWARE_COLOR_PIPE);
+ 
+ 	/* Wa_1604555607:tgl */
+ 	val = intel_uncore_read(engine->uncore, FF_MODE2);
+ 	val &= ~FF_MODE2_TDS_TIMER_MASK;
+ 	val |= FF_MODE2_TDS_TIMER_128;
+ 	/*
+ 	 * FIXME: FF_MODE2 register is not readable till TGL B0. We can
+ 	 * enable verification of WA from the later steppings, which enables
+ 	 * the read of FF_MODE2.
+ 	 */
+ 	wa_add(wal, FF_MODE2, FF_MODE2_TDS_TIMER_MASK, val,
+ 	       IS_TGL_REVID(engine->i915, TGL_REVID_A0, TGL_REVID_A0) ? 0 :
+ 			    FF_MODE2_TDS_TIMER_MASK);
+ 
+ 	/* Wa_1606931601:tgl */
+ 	WA_SET_BIT_MASKED(GEN7_ROW_CHICKEN2, GEN12_DISABLE_EARLY_READ);
+ }
+ 
++>>>>>>> 0db1a5f8706a (drm/i915: Implement Wa_1607090982)
  static void
  __intel_engine_init_ctx_wa(struct intel_engine_cs *engine,
  			   struct i915_wa_list *wal,
* Unmerged path drivers/gpu/drm/i915/gt/intel_workarounds.c
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index 849d8b8f5673..8e98fc36cbdb 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -8947,6 +8947,8 @@ enum {
 #define   DISABLE_EARLY_EOT			(1 << 1)
 
 #define GEN7_ROW_CHICKEN2		_MMIO(0xe4f4)
+#define GEN12_DISABLE_EARLY_READ	BIT(14)
+
 #define GEN7_ROW_CHICKEN2_GT2		_MMIO(0xf4f4)
 #define   DOP_CLOCK_GATING_DISABLE	(1 << 0)
 #define   PUSH_CONSTANT_DEREF_DISABLE	(1 << 8)
