iommu/amd: Convert to probe/release_device() call-backs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Joerg Roedel <jroedel@suse.de>
commit dce8d6964ebdb333383bacf5e7ab8c27df151218
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/dce8d696.failed

Convert the AMD IOMMU Driver to use the probe_device() and
release_device() call-backs of iommu_ops, so that the iommu core code
does the group and sysfs setup.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
Link: https://lore.kernel.org/r/20200429133712.31431-16-joro@8bytes.org
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit dce8d6964ebdb333383bacf5e7ab8c27df151218)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index f0fbc2eb0ed2,c30367413683..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -2294,18 -2168,11 +2271,23 @@@ static void amd_iommu_probe_finalize(st
  
  	/* Domains are initialized for this device - have a look what we ended up with */
  	domain = iommu_get_domain_for_dev(dev);
++<<<<<<< HEAD
 +	if (domain->type == IOMMU_DOMAIN_IDENTITY)
 +		dev_data->passthrough = true;
 +	else
 +		dev->dma_ops = &amd_iommu_dma_ops;
 +
 +out:
 +	iommu_completion_wait(iommu);
 +
 +	return 0;
++=======
+ 	if (domain->type == IOMMU_DOMAIN_DMA)
+ 		iommu_setup_dma_ops(dev, IOVA_START_PFN << PAGE_SHIFT, 0);
++>>>>>>> dce8d6964ebd (iommu/amd: Convert to probe/release_device() call-backs)
  }
  
- static void amd_iommu_remove_device(struct device *dev)
+ static void amd_iommu_release_device(struct device *dev)
  {
  	struct amd_iommu *iommu;
  	int devid;
@@@ -3282,12 -2659,13 +3264,13 @@@ const struct iommu_ops amd_iommu_ops = 
  	.map = amd_iommu_map,
  	.unmap = amd_iommu_unmap,
  	.iova_to_phys = amd_iommu_iova_to_phys,
- 	.add_device = amd_iommu_add_device,
- 	.remove_device = amd_iommu_remove_device,
+ 	.probe_device = amd_iommu_probe_device,
+ 	.release_device = amd_iommu_release_device,
+ 	.probe_finalize = amd_iommu_probe_finalize,
  	.device_group = amd_iommu_device_group,
 -	.domain_get_attr = amd_iommu_domain_get_attr,
  	.get_resv_regions = amd_iommu_get_resv_regions,
 -	.put_resv_regions = generic_iommu_put_resv_regions,
 +	.put_resv_regions = amd_iommu_put_resv_regions,
 +	.apply_resv_region = amd_iommu_apply_resv_region,
  	.is_attach_deferred = amd_iommu_is_attach_deferred,
  	.pgsize_bitmap	= AMD_IOMMU_PGSIZES,
  	.flush_iotlb_all = amd_iommu_flush_iotlb_all,
* Unmerged path drivers/iommu/amd_iommu.c
