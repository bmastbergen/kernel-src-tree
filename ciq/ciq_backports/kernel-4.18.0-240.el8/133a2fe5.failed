netfilter: flowtable: Fix incorrect tc_setup_type type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author wenxu <wenxu@ucloud.cn>
commit 133a2fe594dc0eb15a77477a5a05176495190139
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/133a2fe5.failed

The indirect block setup should use TC_SETUP_FT as the type instead of
TC_SETUP_BLOCK. Adjust existing users of the indirect flow block
infrastructure.

Fixes: b5140a36da78 ("netfilter: flowtable: add indr block setup support")
	Signed-off-by: wenxu <wenxu@ucloud.cn>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 133a2fe594dc0eb15a77477a5a05176495190139)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_flow_table_offload.c
#	net/netfilter/nf_tables_offload.c
* Unmerged path net/netfilter/nf_flow_table_offload.c
* Unmerged path net/netfilter/nf_tables_offload.c
diff --git a/include/net/flow_offload.h b/include/net/flow_offload.h
index e7b8e5851ac9..2203c85fc1a8 100644
--- a/include/net/flow_offload.h
+++ b/include/net/flow_offload.h
@@ -435,6 +435,7 @@ void flow_indr_block_cb_unregister(struct net_device *dev,
 
 void flow_indr_block_call(struct net_device *dev,
 			  struct flow_block_offload *bo,
-			  enum flow_block_command command);
+			  enum flow_block_command command,
+			  enum tc_setup_type type);
 
 #endif /* _NET_FLOW_OFFLOAD_H */
diff --git a/net/core/flow_offload.c b/net/core/flow_offload.c
index 7440e6117c81..e951b743bed3 100644
--- a/net/core/flow_offload.c
+++ b/net/core/flow_offload.c
@@ -511,7 +511,8 @@ EXPORT_SYMBOL_GPL(flow_indr_block_cb_unregister);
 
 void flow_indr_block_call(struct net_device *dev,
 			  struct flow_block_offload *bo,
-			  enum flow_block_command command)
+			  enum flow_block_command command,
+			  enum tc_setup_type type)
 {
 	struct flow_indr_block_cb *indr_block_cb;
 	struct flow_indr_block_dev *indr_dev;
@@ -521,8 +522,7 @@ void flow_indr_block_call(struct net_device *dev,
 		return;
 
 	list_for_each_entry(indr_block_cb, &indr_dev->cb_list, list)
-		indr_block_cb->cb(dev, indr_block_cb->cb_priv, TC_SETUP_BLOCK,
-				  bo);
+		indr_block_cb->cb(dev, indr_block_cb->cb_priv, type, bo);
 }
 EXPORT_SYMBOL_GPL(flow_indr_block_call);
 
* Unmerged path net/netfilter/nf_flow_table_offload.c
* Unmerged path net/netfilter/nf_tables_offload.c
diff --git a/net/sched/cls_api.c b/net/sched/cls_api.c
index dc5390f18b48..c2cef6f874d3 100644
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@ -698,7 +698,7 @@ static void tc_indr_block_call(struct tcf_block *block,
 	};
 	INIT_LIST_HEAD(&bo.cb_list);
 
-	flow_indr_block_call(dev, &bo, command);
+	flow_indr_block_call(dev, &bo, command, TC_SETUP_BLOCK);
 	tcf_block_setup(block, &bo);
 }
 
