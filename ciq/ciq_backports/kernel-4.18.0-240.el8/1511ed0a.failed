net: phylink: add support for polling MAC PCS

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Vladimir Oltean <vladimir.oltean@nxp.com>
commit 1511ed0a0167f523a84b4e727372a5d2ce1b6c2f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/1511ed0a.failed

Some MAC PCS blocks are unable to provide interrupts when their status
changes. As we already have support in phylink for polling status, use
this to provide a hook for MACs to enable polling mode.

The patch idea was picked up from Russell King's suggestion on the macb
phylink patch thread here [0] but the implementation was changed.
Instead of introducing a new phylink_start_poll() function, which would
make the implementation cumbersome for common PHYLINK implementations
for multiple types of devices, like DSA, just add a boolean property to
the phylink_config structure, which is just as backwards-compatible.

https://lkml.org/lkml/2019/12/16/603

	Suggested-by: Russell King <rmk+kernel@armlinux.org.uk>
	Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1511ed0a0167f523a84b4e727372a5d2ce1b6c2f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/sfp-phylink.rst
#	drivers/net/phy/phylink.c
#	include/linux/phylink.h
diff --cc drivers/net/phy/phylink.c
index 74553188de14,af914a8842bd..000000000000
--- a/drivers/net/phy/phylink.c
+++ b/drivers/net/phy/phylink.c
@@@ -953,7 -1022,8 +953,12 @@@ void phylink_start(struct phylink *pl
  		if (irq <= 0)
  			mod_timer(&pl->link_poll, jiffies + HZ);
  	}
++<<<<<<< HEAD
 +	if (pl->link_an_mode == MLO_AN_FIXED && pl->get_fixed_state)
++=======
+ 	if ((pl->cfg_link_an_mode == MLO_AN_FIXED && pl->get_fixed_state) ||
+ 	    pl->config->pcs_poll)
++>>>>>>> 1511ed0a0167 (net: phylink: add support for polling MAC PCS)
  		mod_timer(&pl->link_poll, jiffies + HZ);
  	if (pl->phydev)
  		phy_start(pl->phydev);
diff --cc include/linux/phylink.h
index 6411c624f63a,523209e70947..000000000000
--- a/include/linux/phylink.h
+++ b/include/linux/phylink.h
@@@ -54,6 -54,23 +54,26 @@@ struct phylink_link_state 
  	unsigned int an_complete:1;
  };
  
++<<<<<<< HEAD
++=======
+ enum phylink_op_type {
+ 	PHYLINK_NETDEV = 0,
+ 	PHYLINK_DEV,
+ };
+ 
+ /**
+  * struct phylink_config - PHYLINK configuration structure
+  * @dev: a pointer to a struct device associated with the MAC
+  * @type: operation type of PHYLINK instance
+  * @pcs_poll: MAC PCS cannot provide link change interrupt
+  */
+ struct phylink_config {
+ 	struct device *dev;
+ 	enum phylink_op_type type;
+ 	bool pcs_poll;
+ };
+ 
++>>>>>>> 1511ed0a0167 (net: phylink: add support for polling MAC PCS)
  /**
   * struct phylink_mac_ops - MAC operations structure.
   * @validate: Validate and update the link configuration.
* Unmerged path Documentation/networking/sfp-phylink.rst
* Unmerged path Documentation/networking/sfp-phylink.rst
* Unmerged path drivers/net/phy/phylink.c
* Unmerged path include/linux/phylink.h
