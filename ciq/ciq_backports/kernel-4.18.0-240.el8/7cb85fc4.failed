KVM: x86: Remove superfluous brackets from case statement

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 7cb85fc465fdb91e88eff02b496150b1270952cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7cb85fc4.failed

Remove unnecessary brackets from a case statement that unintentionally
encapsulates unrelated case statements in the same switch statement.
While technically legal and functionally correct syntax, the brackets
are visually confusing and potentially dangerous, e.g. the last of the
encapsulated case statements has an undocumented fall-through that isn't
flagged by compilers due the encapsulation.

	Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Message-Id: <20200218234012.7110-2-sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 7cb85fc465fdb91e88eff02b496150b1270952cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index c6d2c69f3cd9,43f9b63399f0..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -5239,9 -5303,9 +5239,15 @@@ static void kvm_init_msr_list(void
  				 !intel_pt_validate_hw_cap(PT_CAP_single_range_output)))
  				continue;
  			break;
++<<<<<<< HEAD
 +		case MSR_IA32_RTIT_ADDR0_A ... MSR_IA32_RTIT_ADDR3_B: {
 +			if (!kvm_x86_ops->pt_supported() ||
 +				msrs_to_save[i] - MSR_IA32_RTIT_ADDR0_A >=
++=======
+ 		case MSR_IA32_RTIT_ADDR0_A ... MSR_IA32_RTIT_ADDR3_B:
+ 			if (!kvm_cpu_cap_has(X86_FEATURE_INTEL_PT) ||
+ 				msrs_to_save_all[i] - MSR_IA32_RTIT_ADDR0_A >=
++>>>>>>> 7cb85fc465fd (KVM: x86: Remove superfluous brackets from case statement)
  				intel_pt_validate_hw_cap(PT_CAP_num_address_ranges) * 2)
  				continue;
  			break;
@@@ -5251,10 -5315,10 +5257,10 @@@
  				continue;
  			break;
  		case MSR_ARCH_PERFMON_EVENTSEL0 ... MSR_ARCH_PERFMON_EVENTSEL0 + 17:
 -			if (msrs_to_save_all[i] - MSR_ARCH_PERFMON_EVENTSEL0 >=
 +			if (msrs_to_save[i] - MSR_ARCH_PERFMON_EVENTSEL0 >=
  			    min(INTEL_PMC_MAX_GENERIC, x86_pmu.num_counters_gp))
  				continue;
- 		}
+ 			break;
  		default:
  			break;
  		}
* Unmerged path arch/x86/kvm/x86.c
