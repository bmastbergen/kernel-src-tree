selftests: avoid KBUILD_OUTPUT dir cluttering with selftest objects

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Shuah Khan <skhan@linuxfoundation.org>
commit 61c2018c0743fe0c9ca68e308b5727b8a7c3d544
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/61c2018c.failed

Running "make kselftest" or building selftests when KBUILD_OUTPUT
is set, will create selftest objects in the KBUILD_OUTPUT directory.
This could be undesirable especially when user didn't intend to
relocate selftest objects.

Use KBUILD_OUTPUT/kselftest to create selftest objects instead of
cluttering the main directory.

	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit 61c2018c0743fe0c9ca68e308b5727b8a7c3d544)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/Makefile
diff --cc tools/testing/selftests/Makefile
index b432f0c3e7aa,9781ca79794a..000000000000
--- a/tools/testing/selftests/Makefile
+++ b/tools/testing/selftests/Makefile
@@@ -71,16 -78,61 +74,28 @@@ ifneq ($(KBUILD_SRC),
  override LDFLAGS =
  endif
  
++<<<<<<< HEAD
 +BUILD := $(O)
 +ifndef BUILD
 +  BUILD := $(KBUILD_OUTPUT)
 +endif
 +ifndef BUILD
 +  BUILD := $(shell pwd)
++=======
+ ifneq ($(O),)
+ 	BUILD := $(O)
+ else
+ 	ifneq ($(KBUILD_OUTPUT),)
+ 		BUILD := $(KBUILD_OUTPUT)/kselftest
+ 	else
+ 		BUILD := $(shell pwd)
+ 		DEFAULT_INSTALL_HDR_PATH := 1
+ 	endif
++>>>>>>> 61c2018c0743 (selftests: avoid KBUILD_OUTPUT dir cluttering with selftest objects)
  endif
  
 -# Prepare for headers install
 -top_srcdir ?= ../../..
 -include $(top_srcdir)/scripts/subarch.include
 -ARCH           ?= $(SUBARCH)
 -export KSFT_KHDR_INSTALL_DONE := 1
  export BUILD
 -
 -# build and run gpio when output directory is the src dir.
 -# gpio has dependency on tools/gpio and builds tools/gpio
 -# objects in the src directory in all cases making the src
 -# repo dirty even when objects are relocated.
 -ifneq (1,$(DEFAULT_INSTALL_HDR_PATH))
 -	TMP := $(filter-out gpio, $(TARGETS))
 -	TARGETS := $(TMP)
 -endif
 -
 -# set default goal to all, so make without a target runs all, even when
 -# all isn't the first target in the file.
 -.DEFAULT_GOAL := all
 -
 -# Install headers here once for all tests. KSFT_KHDR_INSTALL_DONE
 -# is used to avoid running headers_install from lib.mk.
 -# Invoke headers install with --no-builtin-rules to avoid circular
 -# dependency in "make kselftest" case. In this case, second level
 -# make inherits builtin-rules which will use the rule generate
 -# Makefile.o and runs into
 -# "Circular Makefile.o <- prepare dependency dropped."
 -# and headers_install fails and test compile fails.
 -#
 -# O= KBUILD_OUTPUT cases don't run into this error, since main Makefile
 -# invokes them as sub-makes and --no-builtin-rules is not necessary,
 -# but doesn't cause any failures. Keep it simple and use the same
 -# flags in both cases.
 -# Local build cases: "make kselftest", "make -C" - headers are installed
 -# in the default INSTALL_HDR_PATH usr/include.
 -khdr:
 -ifeq (1,$(DEFAULT_INSTALL_HDR_PATH))
 -	make --no-builtin-rules ARCH=$(ARCH) -C $(top_srcdir) headers_install
 -else
 -	make --no-builtin-rules INSTALL_HDR_PATH=$$BUILD/usr \
 -		ARCH=$(ARCH) -C $(top_srcdir) headers_install
 -endif
 -
 -all: khdr
 +all:
  	@for TARGET in $(TARGETS); do		\
  		BUILD_TARGET=$$BUILD/$$TARGET;	\
  		mkdir $$BUILD_TARGET  -p;	\
* Unmerged path tools/testing/selftests/Makefile
