net/mlx5: fs_core: Introduce unmanaged flow tables

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Paul Blakey <paulb@mellanox.com>
commit 5281a0c909194c477656e89401ac11dd7b29ad2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5281a0c9.failed

Currently, Most of the steering tree is statically declared ahead of time,
with steering prios instances allocated for each fdb chain to assign max
number of levels for each of them. This allows fs_core to manage the
connections and  levels of the flow tables hierarcy to prevent loops, but
restricts us with the number of supported chains and priorities.

Introduce unmananged flow tables, allowing the user to manage the flow
table connections. A unamanged table is detached from the fs_core flow
table hierarcy, and is only connected back to the hierarchy by explicit
FTEs forward actions.

This will be used together with firmware that supports ignoring the flow
table levels to increase the number of supported chains and prios.

	Signed-off-by: Paul Blakey <paulb@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Reviewed-by: Oz Shlomo <ozsh@mellanox.com>
	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 5281a0c909194c477656e89401ac11dd7b29ad2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
index cb1d494e3962,456d3739b166..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
@@@ -1013,7 -1051,9 +1021,13 @@@ static struct mlx5_flow_table *__mlx5_c
  
  	tree_init_node(&ft->node, del_hw_flow_table, del_sw_flow_table);
  	log_table_sz = ft->max_fte ? ilog2(ft->max_fte) : 0;
++<<<<<<< HEAD
 +	next_ft = find_next_chained_ft(fs_prio);
++=======
+ 	next_ft = unmanaged ? ft_attr->next_ft :
+ 			      find_next_chained_ft(fs_prio);
+ 	ft->def_miss_action = ns->def_miss_action;
++>>>>>>> 5281a0c90919 (net/mlx5: fs_core: Introduce unmanaged flow tables)
  	err = root->cmds->create_flow_table(root, ft, log_table_sz, next_ft);
  	if (err)
  		goto free_ft;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
diff --git a/include/linux/mlx5/fs.h b/include/linux/mlx5/fs.h
index 10796ac8c018..58c3ae01b0a8 100644
--- a/include/linux/mlx5/fs.h
+++ b/include/linux/mlx5/fs.h
@@ -48,6 +48,7 @@ enum {
 	MLX5_FLOW_TABLE_TUNNEL_EN_REFORMAT = BIT(0),
 	MLX5_FLOW_TABLE_TUNNEL_EN_DECAP = BIT(1),
 	MLX5_FLOW_TABLE_TERMINATION = BIT(2),
+	MLX5_FLOW_TABLE_UNMANAGED = BIT(3),
 };
 
 #define LEFTOVERS_RULE_NUM	 2
@@ -148,6 +149,7 @@ struct mlx5_flow_table_attr {
 	int max_fte;
 	u32 level;
 	u32 flags;
+	struct mlx5_flow_table *next_ft;
 
 	struct {
 		int max_num_groups;
