iommu/vt-d: Use dma_direct for bypass devices

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 9cc0c2af8d0387f3f99572bd7fe15ab41eb89bb9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9cc0c2af.failed

The intel-iommu driver currently has a partial reimplementation
of the direct mapping code for devices that use pass through
mode.  Replace that code with calls to the relevant dma_direct
routines at the highest level.  This means we have exactly the
same behvior as the dma direct code itself, and can prepare for
eventually only attaching the intel_iommu ops to devices that
actually need dynamic iommu mappings.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 9cc0c2af8d0387f3f99572bd7fe15ab41eb89bb9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index ad8f770c82f8,1b7dd11e5581..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -3505,10 -3657,7 +3505,14 @@@ static dma_addr_t __intel_map_single(st
  
  	BUG_ON(dir == DMA_NONE);
  
++<<<<<<< HEAD
 +	if (!iommu_need_mapping(dev))
 +		return paddr;
 +
 +	domain = find_domain(dev);
++=======
+ 	domain = get_valid_domain_for_dev(dev);
++>>>>>>> 9cc0c2af8d03 (iommu/vt-d: Use dma_direct for bypass devices)
  	if (!domain)
  		return DMA_MAPPING_ERROR;
  
@@@ -3575,11 -3729,7 +3584,8 @@@ static void intel_unmap(struct device *
  	unsigned long iova_pfn;
  	struct intel_iommu *iommu;
  	struct page *freelist;
 +	struct pci_dev *pdev = NULL;
  
- 	if (!iommu_need_mapping(dev))
- 		return;
- 
  	domain = find_domain(dev);
  	BUG_ON(!domain);
  
@@@ -3729,9 -3867,9 +3727,9 @@@ static int intel_map_sg(struct device *
  
  	BUG_ON(dir == DMA_NONE);
  	if (!iommu_need_mapping(dev))
- 		return intel_nontranslate_map_sg(dev, sglist, nelems, dir);
+ 		return dma_direct_map_sg(dev, sglist, nelems, dir, attrs);
  
 -	domain = get_valid_domain_for_dev(dev);
 +	domain = find_domain(dev);
  	if (!domain)
  		return 0;
  
* Unmerged path drivers/iommu/intel-iommu.c
