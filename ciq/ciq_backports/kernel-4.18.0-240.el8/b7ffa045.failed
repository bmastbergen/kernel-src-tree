tipc: don't send gap blocks in ACK messages

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jon Maloy <jon.maloy@ericsson.com>
commit b7ffa045e7000d5410bf206454e0cb8de0428ed5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b7ffa045.failed

In the commit referred to below we eliminated sending of the 'gap'
indicator in regular ACK messages, reserving this to explicit NACK
ditto.

Unfortunately we missed to also eliminate building of the 'gap block'
area in ACK messages. This area is meant to report gaps in the
received packet sequence following the initial gap, so that lost
packets can be retransmitted earlier and received out-of-sequence
packets can be released earlier. However, the interpretation of those
blocks is dependent on a complete and correct sequence of gaps and
acks. Hence, when the initial gap indicator is missing a single gap
block will be interpreted as an acknowledgment of all preceding
packets. This may lead to packets being released prematurely from the
sender's transmit queue, with easily predicatble consequences.

We now fix this by not building any gap block area if there is no
initial gap to report.

Fixes: commit 02288248b051 ("tipc: eliminate gap indicator from ACK messages")
	Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b7ffa045e7000d5410bf206454e0cb8de0428ed5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tipc/link.c
diff --cc net/tipc/link.c
index 91be69d1779e,467c53a1fb5c..000000000000
--- a/net/tipc/link.c
+++ b/net/tipc/link.c
@@@ -243,8 -249,8 +243,13 @@@ static int tipc_link_build_nack_msg(str
  				    struct sk_buff_head *xmitq);
  static void tipc_link_build_bc_init_msg(struct tipc_link *l,
  					struct sk_buff_head *xmitq);
++<<<<<<< HEAD
 +static bool tipc_link_release_pkts(struct tipc_link *l, u16 to);
 +static u16 tipc_build_gap_ack_blks(struct tipc_link *l, void *data);
++=======
+ static int tipc_link_release_pkts(struct tipc_link *l, u16 to);
+ static u16 tipc_build_gap_ack_blks(struct tipc_link *l, void *data, u16 gap);
++>>>>>>> b7ffa045e700 (tipc: don't send gap blocks in ACK messages)
  static int tipc_link_advance_transmq(struct tipc_link *l, u16 acked, u16 gap,
  				     struct tipc_gap_ack_blks *ga,
  				     struct sk_buff_head *xmitq);
* Unmerged path net/tipc/link.c
