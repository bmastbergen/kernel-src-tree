pinctrl: baytrail: Allocate IRQ chip dynamic

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 539d8bde72c22d760013bf81436d6bb94eb67aed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/539d8bde.failed

Keeping the IRQ chip definition static shares it with multiple instances
of the GPIO chip in the system. This is bad and now we get this warning
from GPIO library:

"detected irqchip that is shared with multiple gpiochips: please fix the driver."

Hence, move the IRQ chip definition from being driver static into the struct
intel_pinctrl. So a unique IRQ chip is used for each GPIO chip instance.

Fixes: 9f573b98ca50 ("pinctrl: baytrail: Update irq chip operations")
Depends-on: ca8a958e2acb ("pinctrl: baytrail: Pass irqchip when adding gpiochip")
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
(cherry picked from commit 539d8bde72c22d760013bf81436d6bb94eb67aed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/intel/pinctrl-baytrail.c
diff --cc drivers/pinctrl/intel/pinctrl-baytrail.c
index e4fb0870066b,72ffd19448e5..000000000000
--- a/drivers/pinctrl/intel/pinctrl-baytrail.c
+++ b/drivers/pinctrl/intel/pinctrl-baytrail.c
@@@ -1535,6 -1537,33 +1527,36 @@@ static int byt_gpio_probe(struct byt_gp
  	if (!vg->saved_context)
  		return -ENOMEM;
  #endif
++<<<<<<< HEAD
++=======
+ 
+ 	/* set up interrupts  */
+ 	irq_rc = platform_get_resource(vg->pdev, IORESOURCE_IRQ, 0);
+ 	if (irq_rc && irq_rc->start) {
+ 		struct gpio_irq_chip *girq;
+ 
+ 		vg->irqchip.name = "BYT-GPIO",
+ 		vg->irqchip.irq_ack = byt_irq_ack,
+ 		vg->irqchip.irq_mask = byt_irq_mask,
+ 		vg->irqchip.irq_unmask = byt_irq_unmask,
+ 		vg->irqchip.irq_set_type = byt_irq_type,
+ 		vg->irqchip.flags = IRQCHIP_SKIP_SET_WAKE,
+ 
+ 		girq = &gc->irq;
+ 		girq->chip = &vg->irqchip;
+ 		girq->init_hw = byt_gpio_irq_init_hw;
+ 		girq->parent_handler = byt_gpio_irq_handler;
+ 		girq->num_parents = 1;
+ 		girq->parents = devm_kcalloc(&vg->pdev->dev, girq->num_parents,
+ 					     sizeof(*girq->parents), GFP_KERNEL);
+ 		if (!girq->parents)
+ 			return -ENOMEM;
+ 		girq->parents[0] = (unsigned int)irq_rc->start;
+ 		girq->default_type = IRQ_TYPE_NONE;
+ 		girq->handler = handle_bad_irq;
+ 	}
+ 
++>>>>>>> 539d8bde72c2 (pinctrl: baytrail: Allocate IRQ chip dynamic)
  	ret = devm_gpiochip_add_data(&vg->pdev->dev, gc, vg);
  	if (ret) {
  		dev_err(&vg->pdev->dev, "failed adding byt-gpio chip\n");
* Unmerged path drivers/pinctrl/intel/pinctrl-baytrail.c
