x86/cpu/vmware: Fix platform detection VMWARE_PORT macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [x86] cpu/vmware: Fix platform detection VMWARE_PORT macro (Vitaly Kuznetsov) [1807448]
Rebuild_FUZZ: 96.30%
commit-author Thomas Hellstrom <thellstrom@vmware.com>
commit 6fee2a0be0ecae939d4b6cd8297d88b5cbb61654
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/6fee2a0b.failed

The platform detection VMWARE_PORT macro uses the VMWARE_HYPERVISOR_PORT
definition, but expects it to be an integer. However, when it was moved
to the new vmware.h include file, it was changed to be a string to better
fit into the VMWARE_HYPERCALL set of macros. This obviously breaks the
platform detection VMWARE_PORT functionality.

Change the VMWARE_HYPERVISOR_PORT and VMWARE_HYPERVISOR_PORT_HB
definitions to be integers, and use __stringify() for their stringified
form when needed.

	Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Sean Christopherson <sean.j.christopherson@intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Fixes: b4dd4f6e3648 ("Add a header file for hypercall definitions")
Link: https://lkml.kernel.org/r/20191021172403.3085-3-thomas_os@shipmail.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 6fee2a0be0ecae939d4b6cd8297d88b5cbb61654)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/vmware.h
* Unmerged path arch/x86/include/asm/vmware.h
* Unmerged path arch/x86/include/asm/vmware.h
