iommu: Move fwspec->iommu_priv to struct dev_iommu

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Joerg Roedel <jroedel@suse.de>
commit 986d5ecc56999800a5d112a70e88522d9212aefd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/986d5ecc.failed

Move the pointer for iommu private data from struct iommu_fwspec to
struct dev_iommu.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Tested-by: Will Deacon <will@kernel.org> # arm-smmu
	Reviewed-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
Link: https://lore.kernel.org/r/20200326150841.10083-17-joro@8bytes.org
(cherry picked from commit 986d5ecc56999800a5d112a70e88522d9212aefd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/iommu.h
diff --cc include/linux/iommu.h
index c0752afea934,7ef8b0bda695..000000000000
--- a/include/linux/iommu.h
+++ b/include/linux/iommu.h
@@@ -343,6 -336,51 +343,54 @@@ struct iommu_device 
  	struct device *dev;
  };
  
++<<<<<<< HEAD
++=======
+ /**
+  * struct iommu_fault_event - Generic fault event
+  *
+  * Can represent recoverable faults such as a page requests or
+  * unrecoverable faults such as DMA or IRQ remapping faults.
+  *
+  * @fault: fault descriptor
+  * @list: pending fault event list, used for tracking responses
+  */
+ struct iommu_fault_event {
+ 	struct iommu_fault fault;
+ 	struct list_head list;
+ };
+ 
+ /**
+  * struct iommu_fault_param - per-device IOMMU fault data
+  * @handler: Callback function to handle IOMMU faults at device level
+  * @data: handler private data
+  * @faults: holds the pending faults which needs response
+  * @lock: protect pending faults list
+  */
+ struct iommu_fault_param {
+ 	iommu_dev_fault_handler_t handler;
+ 	void *data;
+ 	struct list_head faults;
+ 	struct mutex lock;
+ };
+ 
+ /**
+  * struct dev_iommu - Collection of per-device IOMMU data
+  *
+  * @fault_param: IOMMU detected device fault reporting data
+  * @fwspec:	 IOMMU fwspec data
+  * @priv:	 IOMMU Driver private data
+  *
+  * TODO: migrate other per device data pointers under iommu_dev_data, e.g.
+  *	struct iommu_group	*iommu_group;
+  */
+ struct dev_iommu {
+ 	struct mutex lock;
+ 	struct iommu_fault_param	*fault_param;
+ 	struct iommu_fwspec		*fwspec;
+ 	void				*priv;
+ };
+ 
++>>>>>>> 986d5ecc5699 (iommu: Move fwspec->iommu_priv to struct dev_iommu)
  int  iommu_device_register(struct iommu_device *iommu);
  void iommu_device_unregister(struct iommu_device *iommu);
  int  iommu_device_sysfs_add(struct iommu_device *iommu,
@@@ -520,10 -591,10 +568,15 @@@ extern struct iommu_group *generic_devi
  struct iommu_fwspec {
  	const struct iommu_ops	*ops;
  	struct fwnode_handle	*iommu_fwnode;
++<<<<<<< HEAD
 +	void			*iommu_priv;
++=======
+ 	u32			flags;
+ 	u32			num_pasid_bits;
++>>>>>>> 986d5ecc5699 (iommu: Move fwspec->iommu_priv to struct dev_iommu)
  	unsigned int		num_ids;
 -	u32			ids[];
 +	u32			ids[1];
 +	RH_KABI_EXTEND(u32	flags)
  };
  
  /* ATS is supported */
* Unmerged path include/linux/iommu.h
