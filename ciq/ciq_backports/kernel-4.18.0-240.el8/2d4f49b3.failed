Drivers: hv: vmbus: Enable VMBus protocol versions 4.1, 5.1 and 5.2

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [hv] hv: vmbus: Enable VMBus protocol versions 4.1, 5.1 and 5.2 (Mohammed Gamal) [1828451 1815498]
Rebuild_FUZZ: 92.80%
commit-author Andrea Parri <parri.andrea@gmail.com>
commit 2d4f49b3e1e3a24ce16dfeeb2235688c8aba57ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2d4f49b3.failed

Hyper-V has added VMBus protocol versions 5.1 and 5.2 in recent release
versions.  Allow Linux guests to negotiate these new protocol versions
on versions of Hyper-V that support them.  While on this, also allow
guests to negotiate the VMBus protocol version 4.1 (which was missing).

	Signed-off-by: Andrea Parri <parri.andrea@gmail.com>
	Reviewed-by: Wei Liu <wei.liu@kernel.org>
	Reviewed-by: Michael Kelley <mikelley@microsoft.com>
	Signed-off-by: Sasha Levin <sashal@kernel.org>
(cherry picked from commit 2d4f49b3e1e3a24ce16dfeeb2235688c8aba57ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/connection.c
diff --cc drivers/hv/connection.c
index 4fe117b761ce,cadfb34b38d8..000000000000
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@@ -48,32 -40,22 +48,49 @@@ EXPORT_SYMBOL_GPL(vmbus_connection)
  __u32 vmbus_proto_version;
  EXPORT_SYMBOL_GPL(vmbus_proto_version);
  
++<<<<<<< HEAD
 +static __u32 vmbus_get_next_version(__u32 current_version)
 +{
 +	switch (current_version) {
 +	case (VERSION_WIN7):
 +		return VERSION_WS2008;
++=======
+ /*
+  * Table of VMBus versions listed from newest to oldest.
+  */
+ static __u32 vmbus_versions[] = {
+ 	VERSION_WIN10_V5_2,
+ 	VERSION_WIN10_V5_1,
+ 	VERSION_WIN10_V5,
+ 	VERSION_WIN10_V4_1,
+ 	VERSION_WIN10,
+ 	VERSION_WIN8_1,
+ 	VERSION_WIN8,
+ 	VERSION_WIN7,
+ 	VERSION_WS2008
+ };
++>>>>>>> 2d4f49b3e1e3 (Drivers: hv: vmbus: Enable VMBus protocol versions 4.1, 5.1 and 5.2)
 +
 +	case (VERSION_WIN8):
 +		return VERSION_WIN7;
 +
 +	case (VERSION_WIN8_1):
 +		return VERSION_WIN8;
 +
 +	case (VERSION_WIN10):
 +		return VERSION_WIN8_1;
 +
 +	case (VERSION_WIN10_V5):
 +		return VERSION_WIN10;
  
 -int vmbus_negotiate_version(struct vmbus_channel_msginfo *msginfo, u32 version)
 +	case (VERSION_WS2008):
 +	default:
 +		return VERSION_INVAL;
 +	}
 +}
 +
 +static int vmbus_negotiate_version(struct vmbus_channel_msginfo *msginfo,
 +					__u32 version)
  {
  	int ret = 0;
  	unsigned int cur_cpu;
* Unmerged path drivers/hv/connection.c
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index 203cb53db2a6..b95daa73a0c9 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -195,15 +195,21 @@ static inline u32 hv_get_avail_to_write_percent(
  * 2 . 4  (Windows 8)
  * 3 . 0  (Windows 8 R2)
  * 4 . 0  (Windows 10)
+ * 4 . 1  (Windows 10 RS3)
  * 5 . 0  (Newer Windows 10)
+ * 5 . 1  (Windows 10 RS4)
+ * 5 . 2  (Windows Server 2019, RS5)
  */
 
 #define VERSION_WS2008  ((0 << 16) | (13))
 #define VERSION_WIN7    ((1 << 16) | (1))
 #define VERSION_WIN8    ((2 << 16) | (4))
 #define VERSION_WIN8_1    ((3 << 16) | (0))
-#define VERSION_WIN10	((4 << 16) | (0))
+#define VERSION_WIN10 ((4 << 16) | (0))
+#define VERSION_WIN10_V4_1 ((4 << 16) | (1))
 #define VERSION_WIN10_V5 ((5 << 16) | (0))
+#define VERSION_WIN10_V5_1 ((5 << 16) | (1))
+#define VERSION_WIN10_V5_2 ((5 << 16) | (2))
 
 #define VERSION_INVAL -1
 
