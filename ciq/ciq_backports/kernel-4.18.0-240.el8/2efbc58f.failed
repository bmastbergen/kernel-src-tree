powerpc/pseries/svm: Force SWIOTLB for secure guests

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [powerpc] pseries/svm: Force SWIOTLB for secure guests (Michael Roth) [1730194]
Rebuild_FUZZ: 91.67%
commit-author Anshuman Khandual <khandual@linux.vnet.ibm.com>
commit 2efbc58f157a39ad9e9199b92d9c47736023a2fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2efbc58f.failed

SWIOTLB checks range of incoming CPU addresses to be bounced and sees if
the device can access it through its DMA window without requiring bouncing.
In such cases it just chooses to skip bouncing. But for cases like secure
guests on powerpc platform all addresses need to be bounced into the shared
pool of memory because the host cannot access it otherwise. Hence the need
to do the bouncing is not related to device's DMA window and use of bounce
buffers is forced by setting swiotlb_force.

Also, connect the shared memory conversion functions into the
ARCH_HAS_MEM_ENCRYPT hooks and call swiotlb_update_mem_attributes() to
convert SWIOTLB's memory pool to shared memory.

	Signed-off-by: Anshuman Khandual <khandual@linux.vnet.ibm.com>
[ bauerman: Use ARCH_HAS_MEM_ENCRYPT hooks to share swiotlb memory pool. ]
	Signed-off-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20190820021326.6884-15-bauerman@linux.ibm.com
(cherry picked from commit 2efbc58f157a39ad9e9199b92d9c47736023a2fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/pseries/Kconfig
#	arch/powerpc/platforms/pseries/svm.c
diff --cc arch/powerpc/platforms/pseries/Kconfig
index ee7adb042f22,9e35cddddf73..000000000000
--- a/arch/powerpc/platforms/pseries/Kconfig
+++ b/arch/powerpc/platforms/pseries/Kconfig
@@@ -147,3 -145,17 +147,20 @@@ config PAPR_SC
  	tristate "Support for the PAPR Storage Class Memory interface"
  	help
  	  Enable access to hypervisor provided storage class memory.
++<<<<<<< HEAD
++=======
+ 
+ config PPC_SVM
+ 	bool "Secure virtual machine (SVM) support for POWER"
+ 	depends on PPC_PSERIES
+ 	select SWIOTLB
+ 	select ARCH_HAS_MEM_ENCRYPT
+ 	select ARCH_HAS_FORCE_DMA_UNENCRYPTED
+ 	help
+ 	 There are certain POWER platforms which support secure guests using
+ 	 the Protected Execution Facility, with the help of an Ultravisor
+ 	 executing below the hypervisor layer. This enables support for
+ 	 those guests.
+ 
+ 	 If unsure, say "N".
++>>>>>>> 2efbc58f157a (powerpc/pseries/svm: Force SWIOTLB for secure guests)
* Unmerged path arch/powerpc/platforms/pseries/svm.c
diff --git a/arch/powerpc/include/asm/mem_encrypt.h b/arch/powerpc/include/asm/mem_encrypt.h
new file mode 100644
index 000000000000..ba9dab07c1be
--- /dev/null
+++ b/arch/powerpc/include/asm/mem_encrypt.h
@@ -0,0 +1,26 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * SVM helper functions
+ *
+ * Copyright 2018 IBM Corporation
+ */
+
+#ifndef _ASM_POWERPC_MEM_ENCRYPT_H
+#define _ASM_POWERPC_MEM_ENCRYPT_H
+
+#include <asm/svm.h>
+
+static inline bool mem_encrypt_active(void)
+{
+	return is_secure_guest();
+}
+
+static inline bool force_dma_unencrypted(struct device *dev)
+{
+	return is_secure_guest();
+}
+
+int set_memory_encrypted(unsigned long addr, int numpages);
+int set_memory_decrypted(unsigned long addr, int numpages);
+
+#endif /* _ASM_POWERPC_MEM_ENCRYPT_H */
* Unmerged path arch/powerpc/platforms/pseries/Kconfig
* Unmerged path arch/powerpc/platforms/pseries/svm.c
