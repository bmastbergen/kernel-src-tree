KVM: arm64: Fix kvm_reset_vcpu() return code being incorrect with SVE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Steven Price <steven.price@arm.com>
commit 66b7e05dc0239c5817859f261098ba9cc2efbd2b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/66b7e05d.failed

If SVE is enabled then 'ret' can be assigned the return value of
kvm_vcpu_enable_sve() which may be 0 causing future "goto out" sites to
erroneously return 0 on failure rather than -EINVAL as expected.

Remove the initialisation of 'ret' and make setting the return value
explicit to avoid this situation in the future.

Fixes: 9a3cdf26e336 ("KVM: arm64/sve: Allow userspace to enable SVE for vcpus")
	Cc: stable@vger.kernel.org
	Reported-by: James Morse <james.morse@arm.com>
	Signed-off-by: Steven Price <steven.price@arm.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20200617105456.28245-1-steven.price@arm.com
(cherry picked from commit 66b7e05dc0239c5817859f261098ba9cc2efbd2b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/reset.c
diff --cc arch/arm64/kvm/reset.c
index 8535907d8840,6ed36be51b4b..000000000000
--- a/arch/arm64/kvm/reset.c
+++ b/arch/arm64/kvm/reset.c
@@@ -290,8 -278,10 +292,14 @@@ int kvm_reset_vcpu(struct kvm_vcpu *vcp
  	switch (vcpu->arch.target) {
  	default:
  		if (test_bit(KVM_ARM_VCPU_EL1_32BIT, vcpu->arch.features)) {
++<<<<<<< HEAD
 +			if (!cpu_has_32bit_el1())
++=======
+ 			if (!cpus_have_const_cap(ARM64_HAS_32BIT_EL1)) {
+ 				ret = -EINVAL;
++>>>>>>> 66b7e05dc023 (KVM: arm64: Fix kvm_reset_vcpu() return code being incorrect with SVE)
  				goto out;
+ 			}
  			pstate = VCPU_RESET_PSTATE_SVC;
  		} else {
  			pstate = VCPU_RESET_PSTATE_EL1;
* Unmerged path arch/arm64/kvm/reset.c
