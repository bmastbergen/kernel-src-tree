drm/i915/tgl: Implement Wa_1409804808

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author José Roberto de Souza <jose.souza@intel.com>
commit ec1e12645ff3987f660ef9dc21c9db548b43ee9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/ec1e1264.failed

This workaround the CS not done issue on PIPE_CONTROL.

v2:
- replaced BIT() by REG_BIT() in all GEN7_ROW_CHICKEN2() bits
- shortened the name of the new bit

BSpec: 52890
BSpec: 46218
	Cc: Matt Roper <matthew.d.roper@intel.com>
	Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
	Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200227220101.321671-1-jose.souza@intel.com
(cherry picked from commit ec1e12645ff3987f660ef9dc21c9db548b43ee9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/intel_workarounds.c
#	drivers/gpu/drm/i915/i915_reg.h
diff --cc drivers/gpu/drm/i915/gt/intel_workarounds.c
index 8f75882ded3f,d402b8ebc780..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_workarounds.c
+++ b/drivers/gpu/drm/i915/gt/intel_workarounds.c
@@@ -1231,6 -1324,50 +1231,53 @@@ rcs_engine_wa_init(struct intel_engine_
  {
  	struct drm_i915_private *i915 = engine->i915;
  
++<<<<<<< HEAD
++=======
+ 	if (IS_TGL_REVID(i915, TGL_REVID_A0, TGL_REVID_A0)) {
+ 		/* Wa_1606700617:tgl */
+ 		wa_masked_en(wal,
+ 			     GEN9_CS_DEBUG_MODE1,
+ 			     FF_DOP_CLOCK_GATE_DISABLE);
+ 
+ 		/* Wa_1607138336:tgl */
+ 		wa_write_or(wal,
+ 			    GEN9_CTX_PREEMPT_REG,
+ 			    GEN12_DISABLE_POSH_BUSY_FF_DOP_CG);
+ 
+ 		/* Wa_1607030317:tgl */
+ 		/* Wa_1607186500:tgl */
+ 		/* Wa_1607297627:tgl */
+ 		wa_masked_en(wal,
+ 			     GEN6_RC_SLEEP_PSMI_CONTROL,
+ 			     GEN12_WAIT_FOR_EVENT_POWER_DOWN_DISABLE |
+ 			     GEN8_RC_SEMA_IDLE_MSG_DISABLE);
+ 
+ 		/*
+ 		 * Wa_1606679103:tgl
+ 		 * (see also Wa_1606682166:icl)
+ 		 */
+ 		wa_write_or(wal,
+ 			    GEN7_SARCHKMD,
+ 			    GEN7_DISABLE_SAMPLER_PREFETCH);
+ 
+ 		/* Wa_1407928979:tgl */
+ 		wa_write_or(wal,
+ 			    GEN7_FF_THREAD_MODE,
+ 			    GEN12_FF_TESSELATION_DOP_GATE_DISABLE);
+ 
+ 		/* Wa_1606931601:tgl */
+ 		wa_masked_en(wal,
+ 			     GEN7_ROW_CHICKEN2,
+ 			     GEN12_DISABLE_EARLY_READ);
+ 	}
+ 
+ 	if (IS_TIGERLAKE(i915)) {
+ 		/* Wa_1409804808:tgl */
+ 		wa_masked_en(wal, GEN7_ROW_CHICKEN2,
+ 			     GEN12_PUSH_CONST_DEREF_HOLD_DIS);
+ 	}
+ 
++>>>>>>> ec1e12645ff3 (drm/i915/tgl: Implement Wa_1409804808)
  	if (IS_GEN(i915, 11)) {
  		/* This is not an Wa. Enable for better image quality */
  		wa_masked_en(wal,
diff --cc drivers/gpu/drm/i915/i915_reg.h
index 849d8b8f5673,acace016d46c..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -8946,7 -9140,10 +8946,14 @@@ enum 
  #define   THROTTLE_12_5				(7 << 2)
  #define   DISABLE_EARLY_EOT			(1 << 1)
  
++<<<<<<< HEAD
 +#define GEN7_ROW_CHICKEN2		_MMIO(0xe4f4)
++=======
+ #define GEN7_ROW_CHICKEN2			_MMIO(0xe4f4)
+ #define   GEN12_DISABLE_EARLY_READ		REG_BIT(14)
+ #define   GEN12_PUSH_CONST_DEREF_HOLD_DIS	REG_BIT(8)
+ 
++>>>>>>> ec1e12645ff3 (drm/i915/tgl: Implement Wa_1409804808)
  #define GEN7_ROW_CHICKEN2_GT2		_MMIO(0xf4f4)
  #define   DOP_CLOCK_GATING_DISABLE	(1 << 0)
  #define   PUSH_CONSTANT_DEREF_DISABLE	(1 << 8)
* Unmerged path drivers/gpu/drm/i915/gt/intel_workarounds.c
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
