xdp: Remove map_to_flush and map swap detection

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Björn Töpel <bjorn.topel@intel.com>
commit 332f22a60e4c3492d4953cd6f7aaa4e8bd0bba97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/332f22a6.failed

Now that all XDP maps that can be used with bpf_redirect_map() tracks
entries to be flushed in a global fashion, there is not need to track
that the map has changed and flush from xdp_do_generic_map()
anymore. All entries will be flushed in xdp_do_flush_map().

This means that the map_to_flush can be removed, and the corresponding
checks. Moving the flush logic to one place, xdp_do_flush_map(), give
a bulking behavior and performance boost.

	Signed-off-by: Björn Töpel <bjorn.topel@intel.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
Link: https://lore.kernel.org/bpf/20191219061006.21980-8-bjorn.topel@gmail.com
(cherry picked from commit 332f22a60e4c3492d4953cd6f7aaa4e8bd0bba97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/filter.c
diff --cc net/core/filter.c
index 100e9b841116,d9caa3e57ea1..000000000000
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@@ -3560,25 -3547,9 +3560,31 @@@ static int __bpf_tx_xdp_map(struct net_
  
  void xdp_do_flush_map(void)
  {
++<<<<<<< HEAD
 +	struct bpf_redirect_info *ri = this_cpu_ptr(&bpf_redirect_info);
 +	struct bpf_map *map = ri->map_to_flush;
 +
 +	ri->map_to_flush = NULL;
 +	if (map) {
 +		switch (map->map_type) {
 +		case BPF_MAP_TYPE_DEVMAP:
 +			__dev_map_flush(map);
 +			break;
 +		case BPF_MAP_TYPE_CPUMAP:
 +			__cpu_map_flush();
 +			break;
 +		case BPF_MAP_TYPE_XSKMAP:
 +			__xsk_map_flush();
 +			break;
 +		default:
 +			break;
 +		}
 +	}
++=======
+ 	__dev_map_flush();
+ 	__cpu_map_flush();
+ 	__xsk_map_flush();
++>>>>>>> 332f22a60e4c (xdp: Remove map_to_flush and map swap detection)
  }
  EXPORT_SYMBOL_GPL(xdp_do_flush_map);
  
diff --git a/include/linux/filter.h b/include/linux/filter.h
index a07ba7ea0d4d..a211bf4d5fd3 100644
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -596,7 +596,6 @@ struct bpf_redirect_info {
 	u32 tgt_index;
 	void *tgt_value;
 	struct bpf_map *map;
-	struct bpf_map *map_to_flush;
 	u32 kern_flags;
 };
 
* Unmerged path net/core/filter.c
