drm/i915/gt: Pin the rings before marking active

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit 8567774e87e23a57155e5102f81208729b992ae6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8567774e.failed

On eviction, we acquire the vm->mutex and then wait on the vma->active.
Therefore when binding and pinning the vma, we must follow the same
sequence, lock/pin the vma then mark it active. Otherwise, we mark the
vma as active, then wait for the vm->mutex, and meanwhile the evictor
holding the mutex waits upon us to complete our activity.

Fixes: 8ccfc20a7d56 ("drm/i915/gt: Mark ring->vma as active while pinned")
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	Cc: <stable@vger.kernel.org> # v5.6+
	Reviewed-by: Matthew Auld <matthew.auld@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20200706170138.8993-1-chris@chris-wilson.co.uk
(cherry picked from commit 8567774e87e23a57155e5102f81208729b992ae6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gt/intel_context.c
diff --cc drivers/gpu/drm/i915/gt/intel_context.c
index 23120901c55f,52db2bde44a3..000000000000
--- a/drivers/gpu/drm/i915/gt/intel_context.c
+++ b/drivers/gpu/drm/i915/gt/intel_context.c
@@@ -119,7 -200,33 +119,37 @@@ static void __context_unpin_state(struc
  	__i915_vma_unpin(vma);
  }
  
++<<<<<<< HEAD
 +static void intel_context_retire(struct i915_active *active)
++=======
+ static int __ring_active(struct intel_ring *ring)
+ {
+ 	int err;
+ 
+ 	err = intel_ring_pin(ring);
+ 	if (err)
+ 		return err;
+ 
+ 	err = i915_active_acquire(&ring->vma->active);
+ 	if (err)
+ 		goto err_pin;
+ 
+ 	return 0;
+ 
+ err_pin:
+ 	intel_ring_unpin(ring);
+ 	return err;
+ }
+ 
+ static void __ring_retire(struct intel_ring *ring)
+ {
+ 	i915_active_release(&ring->vma->active);
+ 	intel_ring_unpin(ring);
+ }
+ 
+ __i915_active_call
+ static void __intel_context_retire(struct i915_active *active)
++>>>>>>> 8567774e87e2 (drm/i915/gt: Pin the rings before marking active)
  {
  	struct intel_context *ce = container_of(active, typeof(*ce), active);
  
* Unmerged path drivers/gpu/drm/i915/gt/intel_context.c
