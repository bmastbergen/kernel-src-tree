net: introduce nla_put_bitfield32() helper and use it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] introduce nla_put_bitfield32() helper and use it (Ivan Vecera) [1824071]
Rebuild_FUZZ: 95.05%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 8953b0770ff4e3038a6d4df3cc021f9bfb47548a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/8953b077.failed

Introduce a helper to pass value and selector to. The helper packs them
into struct and puts them into netlink message.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8953b0770ff4e3038a6d4df3cc021f9bfb47548a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_api.c
diff --cc net/sched/act_api.c
index dcc177a4e783,33cc77e6e56c..000000000000
--- a/net/sched/act_api.c
+++ b/net/sched/act_api.c
@@@ -795,24 -789,15 +795,36 @@@ tcf_action_dump_1(struct sk_buff *skb, 
  	}
  	rcu_read_unlock();
  
++<<<<<<< HEAD
 +	if (a->hw_stats_type != TCA_ACT_HW_STATS_TYPE_ANY) {
 +		struct nla_bitfield32 hw_stats_type = {
 +			a->hw_stats_type,
 +			TCA_ACT_HW_STATS_TYPE_ANY,
 +		};
 +
 +		if (nla_put(skb, TCA_ACT_HW_STATS_TYPE, sizeof(hw_stats_type),
 +			    &hw_stats_type))
 +			goto nla_put_failure;
 +	}
 +
 +	if (a->tcfa_flags) {
 +		struct nla_bitfield32 flags = { a->tcfa_flags,
 +						a->tcfa_flags, };
 +
 +		if (nla_put(skb, TCA_ACT_FLAGS, sizeof(flags), &flags))
 +			goto nla_put_failure;
 +	}
++=======
+ 	if (a->hw_stats != TCA_ACT_HW_STATS_ANY &&
+ 	    nla_put_bitfield32(skb, TCA_ACT_HW_STATS,
+ 			       a->hw_stats, TCA_ACT_HW_STATS_ANY))
+ 		goto nla_put_failure;
+ 
+ 	if (a->tcfa_flags &&
+ 	    nla_put_bitfield32(skb, TCA_ACT_FLAGS,
+ 			       a->tcfa_flags, a->tcfa_flags))
+ 		goto nla_put_failure;
++>>>>>>> 8953b0770ff4 (net: introduce nla_put_bitfield32() helper and use it)
  
  	nest = nla_nest_start_noflag(skb, TCA_OPTIONS);
  	if (nest == NULL)
diff --git a/include/net/netlink.h b/include/net/netlink.h
index 05b397e5fd7f..78b14865a235 100644
--- a/include/net/netlink.h
+++ b/include/net/netlink.h
@@ -1479,6 +1479,21 @@ static inline int nla_put_in6_addr(struct sk_buff *skb, int attrtype,
 	return nla_put(skb, attrtype, sizeof(*addr), addr);
 }
 
+/**
+ * nla_put_bitfield32 - Add a bitfield32 netlink attribute to a socket buffer
+ * @skb: socket buffer to add attribute to
+ * @attrtype: attribute type
+ * @value: value carrying bits
+ * @selector: selector of valid bits
+ */
+static inline int nla_put_bitfield32(struct sk_buff *skb, int attrtype,
+				     __u32 value, __u32 selector)
+{
+	struct nla_bitfield32 tmp = { value, selector, };
+
+	return nla_put(skb, attrtype, sizeof(tmp), &tmp);
+}
+
 /**
  * nla_get_u32 - return payload of u32 attribute
  * @nla: u32 netlink attribute
* Unmerged path net/sched/act_api.c
diff --git a/net/sched/sch_red.c b/net/sched/sch_red.c
index 00c6f06f983e..b08d39b67156 100644
--- a/net/sched/sch_red.c
+++ b/net/sched/sch_red.c
@@ -353,10 +353,6 @@ static int red_dump_offload_stats(struct Qdisc *sch)
 static int red_dump(struct Qdisc *sch, struct sk_buff *skb)
 {
 	struct red_sched_data *q = qdisc_priv(sch);
-	struct nla_bitfield32 flags_bf = {
-		.selector = red_supported_flags,
-		.value = q->flags,
-	};
 	struct nlattr *opts = NULL;
 	struct tc_red_qopt opt = {
 		.limit		= q->limit,
@@ -379,7 +375,8 @@ static int red_dump(struct Qdisc *sch, struct sk_buff *skb)
 		goto nla_put_failure;
 	if (nla_put(skb, TCA_RED_PARMS, sizeof(opt), &opt) ||
 	    nla_put_u32(skb, TCA_RED_MAX_P, q->parms.max_P) ||
-	    nla_put(skb, TCA_RED_FLAGS, sizeof(flags_bf), &flags_bf))
+	    nla_put_bitfield32(skb, TCA_RED_FLAGS,
+			       q->flags, red_supported_flags))
 		goto nla_put_failure;
 	return nla_nest_end(skb, opts);
 
