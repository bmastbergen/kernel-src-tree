Crypto: chelsio - Fixes a deadlock between rtnl_lock and uld_mutex

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ayush Sawal <ayush.sawal@chelsio.com>
commit 876aa9f527cd0ddc857337aba3683298b3abe6ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/876aa9f5.failed

The locks are taken in this order during driver registration
(uld_mutex), at: cxgb4_register_uld.part.14+0x49/0xd60 [cxgb4]
(rtnl_mutex), at: rtnetlink_rcv_msg+0x2db/0x400
(uld_mutex), at: cxgb_up+0x3a/0x7b0 [cxgb4]
(rtnl_mutex), at: chcr_add_xfrmops+0x83/0xa0 [chcr](stucked here)

To avoid this now the netdev features are updated after the
cxgb4_register_uld function is completed.

Fixes: 6dad4e8ab3ec6 ("chcr: Add support for Inline IPSec").

	Signed-off-by: Ayush Sawal <ayush.sawal@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 876aa9f527cd0ddc857337aba3683298b3abe6ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/chelsio/chcr_core.c
diff --cc drivers/crypto/chelsio/chcr_core.c
index 850a3f4e837b,dfb53e746e51..000000000000
--- a/drivers/crypto/chelsio/chcr_core.c
+++ b/drivers/crypto/chelsio/chcr_core.c
@@@ -33,8 -33,16 +33,12 @@@ static int cpl_fw6_pld_handler(struct c
  static void *chcr_uld_add(const struct cxgb4_lld_info *lld);
  static int chcr_uld_state_change(void *handle, enum cxgb4_state state);
  
+ #ifdef CONFIG_CHELSIO_IPSEC_INLINE
+ static void update_netdev_features(void);
+ #endif /* CONFIG_CHELSIO_IPSEC_INLINE */
+ 
  static chcr_handler_func work_handlers[NUM_CPL_CMDS] = {
  	[CPL_FW6_PLD] = cpl_fw6_pld_handler,
 -#ifdef CONFIG_CHELSIO_TLS_DEVICE
 -	[CPL_ACT_OPEN_RPL] = chcr_ktls_cpl_act_open_rpl,
 -	[CPL_SET_TCB_RPL] = chcr_ktls_cpl_set_tcb_rpl,
 -#endif
  };
  
  static struct cxgb4_uld_info chcr_uld_info = {
@@@ -200,10 -206,11 +204,18 @@@ static void *chcr_uld_add(const struct 
  	}
  	u_ctx->lldi = *lld;
  	chcr_dev_init(u_ctx);
++<<<<<<< HEAD
 +#ifdef CONFIG_CHELSIO_IPSEC_INLINE
 +	if (lld->crypto & ULP_CRYPTO_IPSEC_INLINE)
 +		chcr_add_xfrmops(lld);
 +#endif /* CONFIG_CHELSIO_IPSEC_INLINE */
++=======
+ 
+ #ifdef CONFIG_CHELSIO_TLS_DEVICE
+ 	if (lld->ulp_crypto & ULP_CRYPTO_KTLS_INLINE)
+ 		chcr_enable_ktls(padap(&u_ctx->dev));
+ #endif
++>>>>>>> 876aa9f527cd (Crypto: chelsio - Fixes a deadlock between rtnl_lock and uld_mutex)
  out:
  	return u_ctx;
  }
* Unmerged path drivers/crypto/chelsio/chcr_core.c
diff --git a/drivers/crypto/chelsio/chcr_ipsec.c b/drivers/crypto/chelsio/chcr_ipsec.c
index bc32fb9eb68b..1b52af8b54e6 100644
--- a/drivers/crypto/chelsio/chcr_ipsec.c
+++ b/drivers/crypto/chelsio/chcr_ipsec.c
@@ -99,9 +99,7 @@ void chcr_add_xfrmops(const struct cxgb4_lld_info *lld)
 		netdev->xfrmdev_ops = &chcr_xfrmdev_ops;
 		netdev->hw_enc_features |= NETIF_F_HW_ESP;
 		netdev->features |= NETIF_F_HW_ESP;
-		rtnl_lock();
 		netdev_change_features(netdev);
-		rtnl_unlock();
 	}
 }
 
