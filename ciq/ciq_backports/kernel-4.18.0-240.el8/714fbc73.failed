SUNRPC: RPC level errors should always set task->tk_rpc_status

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Trond Myklebust <trondmy@gmail.com>
commit 714fbc73888f59321854e7f6c2f224213923bcad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/714fbc73.failed

Ensure that we set task->tk_rpc_status for all RPC level errors so that
the caller can distinguish between those and server reply status errors.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 714fbc73888f59321854e7f6c2f224213923bcad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/sched.c
diff --cc net/sunrpc/sched.c
index 35f2601e2507,360afe153193..000000000000
--- a/net/sunrpc/sched.c
+++ b/net/sunrpc/sched.c
@@@ -896,6 -907,15 +896,18 @@@ static void __rpc_execute(struct rpc_ta
  		 */
  		if (!RPC_IS_QUEUED(task))
  			continue;
++<<<<<<< HEAD
++=======
+ 
+ 		/*
+ 		 * Signalled tasks should exit rather than sleep.
+ 		 */
+ 		if (RPC_SIGNALLED(task)) {
+ 			task->tk_rpc_status = -ERESTARTSYS;
+ 			rpc_exit(task, -ERESTARTSYS);
+ 		}
+ 
++>>>>>>> 714fbc73888f (SUNRPC: RPC level errors should always set task->tk_rpc_status)
  		/*
  		 * The queue->lock protects against races with
  		 * rpc_make_runnable().
@@@ -929,7 -949,8 +941,12 @@@
  			 * break the loop here, but go around once more.
  			 */
  			dprintk("RPC: %5u got signal\n", task->tk_pid);
++<<<<<<< HEAD
 +			task->tk_flags |= RPC_TASK_KILLED;
++=======
+ 			set_bit(RPC_TASK_SIGNALLED, &task->tk_runstate);
+ 			task->tk_rpc_status = -ERESTARTSYS;
++>>>>>>> 714fbc73888f (SUNRPC: RPC level errors should always set task->tk_rpc_status)
  			rpc_exit(task, -ERESTARTSYS);
  		}
  		dprintk("RPC: %5u sync task resuming\n", task->tk_pid);
diff --git a/net/sunrpc/clnt.c b/net/sunrpc/clnt.c
index 627972494b8d..0e1fc5d161fa 100644
--- a/net/sunrpc/clnt.c
+++ b/net/sunrpc/clnt.c
@@ -1824,7 +1824,7 @@ call_allocate(struct rpc_task *task)
 		return;
 	}
 
-	rpc_exit(task, -ERESTARTSYS);
+	rpc_call_rpcerror(task, -ERESTARTSYS);
 }
 
 static int
@@ -2561,7 +2561,7 @@ rpc_encode_header(struct rpc_task *task, struct xdr_stream *xdr)
 	return 0;
 out_fail:
 	trace_rpc_bad_callhdr(task);
-	rpc_exit(task, error);
+	rpc_call_rpcerror(task, error);
 	return error;
 }
 
@@ -2628,7 +2628,7 @@ rpc_decode_header(struct rpc_task *task, struct xdr_stream *xdr)
 		return -EAGAIN;
 	}
 out_err:
-	rpc_exit(task, error);
+	rpc_call_rpcerror(task, error);
 	return error;
 
 out_unparsable:
* Unmerged path net/sunrpc/sched.c
