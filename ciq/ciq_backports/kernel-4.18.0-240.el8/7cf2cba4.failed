PCI: Unify ACS quirk desired vs provided checking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 7cf2cba43f15c74bac46dc5f0326805d25ef514d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7cf2cba4.failed

Most of the ACS quirks have a similar pattern of:

  acs_flags &= ~( <controls provided by this device> );
  return acs_flags ? 0 : 1;

Pull this out into a helper function to simplify the quirks slightly.  The
helper function is also a convenient place for comments about what the list
of ACS controls means.  No functional change intended.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
	Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
(cherry picked from commit 7cf2cba43f15c74bac46dc5f0326805d25ef514d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/quirks.c
diff --cc drivers/pci/quirks.c
index 955e7055af22,9a1051071a81..000000000000
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@@ -4420,12 -4599,23 +4434,26 @@@ static int pci_quirk_mf_endpoint_acs(st
  	 * perform peer-to-peer with other functions, allowing us to mask out
  	 * these bits as if they were unimplemented in the ACS capability.
  	 */
- 	acs_flags &= ~(PCI_ACS_SV | PCI_ACS_TB | PCI_ACS_RR |
- 		       PCI_ACS_CR | PCI_ACS_UF | PCI_ACS_DT);
+ 	return pci_acs_ctrl_enabled(acs_flags,
+ 		PCI_ACS_SV | PCI_ACS_TB | PCI_ACS_RR |
+ 		PCI_ACS_CR | PCI_ACS_UF | PCI_ACS_DT);
+ }
  
- 	return acs_flags ? 0 : 1;
++<<<<<<< HEAD
++=======
+ static int pci_quirk_brcm_acs(struct pci_dev *dev, u16 acs_flags)
+ {
+ 	/*
+ 	 * iProc PAXB Root Ports don't advertise an ACS capability, but
+ 	 * they do not allow peer-to-peer transactions between Root Ports.
+ 	 * Allow each Root Port to be in a separate IOMMU group by masking
+ 	 * SV/RR/CR/UF bits.
+ 	 */
+ 	return pci_acs_ctrl_enabled(acs_flags,
+ 		PCI_ACS_SV | PCI_ACS_RR | PCI_ACS_CR | PCI_ACS_UF);
  }
  
++>>>>>>> 7cf2cba43f15 (PCI: Unify ACS quirk desired vs provided checking)
  static const struct pci_dev_acs_enabled {
  	u16 vendor;
  	u16 device;
* Unmerged path drivers/pci/quirks.c
