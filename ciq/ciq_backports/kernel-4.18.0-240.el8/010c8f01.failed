net: Get rid of switchdev_port_attr_get()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
Rebuild_CHGLOG: - [net] Get rid of switchdev_port_attr_get() (Ivan Vecera) [1821402]
Rebuild_FUZZ: 93.51%
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit 010c8f01aa7fe18ea97d302e1c7e9ca83bc27433
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/010c8f01.failed

With the bridge no longer calling switchdev_port_attr_get() to obtain
the supported bridge port flags from a driver but instead trying to set
the bridge port flags directly and relying on driver to reject
unsupported configurations, we can effectively get rid of
switchdev_port_attr_get() entirely since this was the only place where
it was called.

	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 010c8f01aa7fe18ea97d302e1c7e9ca83bc27433)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/switchdev.txt
#	drivers/net/ethernet/rocker/rocker_main.c
#	drivers/staging/fsl-dpaa2/ethsw/ethsw.c
#	net/dsa/slave.c
diff --cc Documentation/networking/switchdev.txt
index ea90243340a9,413abbae952f..000000000000
--- a/Documentation/networking/switchdev.txt
+++ b/Documentation/networking/switchdev.txt
@@@ -232,10 -232,8 +232,15 @@@ Learning_sync attribute enables syncin
  the bridge's FDB.  It's possible, but not optimal, to enable learning on the
  device port and on the bridge port, and disable learning_sync.
  
++<<<<<<< HEAD
 +To support learning and learning_sync port attributes, the driver implements
 +switchdev op switchdev_port_attr_get/set for
 +SWITCHDEV_ATTR_PORT_ID_BRIDGE_FLAGS. The driver should initialize the attributes
 +to the hardware defaults.
++=======
+ To support learning, the driver implements switchdev op
+ switchdev_port_attr_set for SWITCHDEV_ATTR_PORT_ID_{PRE}_BRIDGE_FLAGS.
++>>>>>>> 010c8f01aa7f (net: Get rid of switchdev_port_attr_get())
  
  FDB Ageing
  ^^^^^^^^^^
diff --cc drivers/net/ethernet/rocker/rocker_main.c
index c06a7a50400c,8200fbf91306..000000000000
--- a/drivers/net/ethernet/rocker/rocker_main.c
+++ b/drivers/net/ethernet/rocker/rocker_main.c
@@@ -2066,24 -2066,6 +2066,27 @@@ static const struct net_device_ops rock
   * swdev interface
   ********************/
  
++<<<<<<< HEAD
 +static int rocker_port_attr_get(struct net_device *dev,
 +				struct switchdev_attr *attr)
 +{
 +	const struct rocker_port *rocker_port = netdev_priv(dev);
 +	int err = 0;
 +
 +	switch (attr->id) {
 +	case SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS_SUPPORT:
 +		err = rocker_world_port_attr_bridge_flags_support_get(rocker_port,
 +								      &attr->u.brport_flags_support);
 +		break;
 +	default:
 +		return -EOPNOTSUPP;
 +	}
 +
 +	return err;
 +}
 +
++=======
++>>>>>>> 010c8f01aa7f (net: Get rid of switchdev_port_attr_get())
  static int rocker_port_attr_set(struct net_device *dev,
  				const struct switchdev_attr *attr,
  				struct switchdev_trans *trans)
diff --cc drivers/staging/fsl-dpaa2/ethsw/ethsw.c
index 1f9a4c8ef2da,018399ee8731..000000000000
--- a/drivers/staging/fsl-dpaa2/ethsw/ethsw.c
+++ b/drivers/staging/fsl-dpaa2/ethsw/ethsw.c
@@@ -640,27 -640,6 +640,30 @@@ static void ethsw_teardown_irqs(struct 
  	fsl_mc_free_irqs(sw_dev);
  }
  
++<<<<<<< HEAD
 +static int swdev_port_attr_get(struct net_device *netdev,
 +			       struct switchdev_attr *attr)
 +{
 +	struct ethsw_port_priv *port_priv = netdev_priv(netdev);
 +
 +	switch (attr->id) {
 +	case SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS:
 +		attr->u.brport_flags =
 +			(port_priv->ethsw_data->learning ? BR_LEARNING : 0) |
 +			(port_priv->flood ? BR_FLOOD : 0);
 +		break;
 +	case SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS_SUPPORT:
 +		attr->u.brport_flags_support = BR_LEARNING | BR_FLOOD;
 +		break;
 +	default:
 +		return -EOPNOTSUPP;
 +	}
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> 010c8f01aa7f (net: Get rid of switchdev_port_attr_get())
  static int port_attr_stp_state_set(struct net_device *netdev,
  				   struct switchdev_trans *trans,
  				   u8 state)
diff --cc net/dsa/slave.c
index fb4f949cd420,a78b2bba0332..000000000000
--- a/net/dsa/slave.c
+++ b/net/dsa/slave.c
@@@ -375,20 -385,6 +375,23 @@@ static int dsa_slave_get_port_parent_id
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int dsa_slave_port_attr_get(struct net_device *dev,
 +				   struct switchdev_attr *attr)
 +{
 +	switch (attr->id) {
 +	case SWITCHDEV_ATTR_ID_PORT_BRIDGE_FLAGS_SUPPORT:
 +		attr->u.brport_flags_support = 0;
 +		break;
 +	default:
 +		return -EOPNOTSUPP;
 +	}
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> 010c8f01aa7f (net: Get rid of switchdev_port_attr_get())
  static inline netdev_tx_t dsa_slave_netpoll_send_skb(struct net_device *dev,
  						     struct sk_buff *skb)
  {
* Unmerged path Documentation/networking/switchdev.txt
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
index c39ddad2daee..ca1b9de79e50 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
@@ -431,12 +431,6 @@ static void mlxsw_sp_bridge_vlan_put(struct mlxsw_sp_bridge_vlan *bridge_vlan)
 		mlxsw_sp_bridge_vlan_destroy(bridge_vlan);
 }
 
-static int mlxsw_sp_port_attr_get(struct net_device *dev,
-				  struct switchdev_attr *attr)
-{
-	return -EOPNOTSUPP;
-}
-
 static int
 mlxsw_sp_port_bridge_vlan_stp_set(struct mlxsw_sp_port *mlxsw_sp_port,
 				  struct mlxsw_sp_bridge_vlan *bridge_vlan,
@@ -1945,7 +1939,6 @@ static struct mlxsw_sp_port *mlxsw_sp_lag_rep_port(struct mlxsw_sp *mlxsw_sp,
 }
 
 static const struct switchdev_ops mlxsw_sp_port_switchdev_ops = {
-	.switchdev_port_attr_get	= mlxsw_sp_port_attr_get,
 	.switchdev_port_attr_set	= mlxsw_sp_port_attr_set,
 };
 
* Unmerged path drivers/net/ethernet/rocker/rocker_main.c
* Unmerged path drivers/staging/fsl-dpaa2/ethsw/ethsw.c
diff --git a/include/net/switchdev.h b/include/net/switchdev.h
index 63de5fcf7f80..38ed48e4ec39 100644
--- a/include/net/switchdev.h
+++ b/include/net/switchdev.h
@@ -218,8 +218,6 @@ switchdev_notifier_info_to_extack(const struct switchdev_notifier_info *info)
 #ifdef CONFIG_NET_SWITCHDEV
 
 void switchdev_deferred_process(void);
-int switchdev_port_attr_get(struct net_device *dev,
-			    struct switchdev_attr *attr);
 int switchdev_port_attr_set(struct net_device *dev,
 			    const struct switchdev_attr *attr);
 int switchdev_port_obj_add(struct net_device *dev,
@@ -272,12 +270,6 @@ static inline void switchdev_deferred_process(void)
 {
 }
 
-static inline int switchdev_port_attr_get(struct net_device *dev,
-					  struct switchdev_attr *attr)
-{
-	return -EOPNOTSUPP;
-}
-
 static inline int switchdev_port_attr_set(struct net_device *dev,
 					  const struct switchdev_attr *attr)
 {
* Unmerged path net/dsa/slave.c
