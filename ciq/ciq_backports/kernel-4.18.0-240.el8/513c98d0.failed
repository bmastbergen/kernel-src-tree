workqueue: unconfine alloc/apply/free_workqueue_attrs()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Daniel Jordan <daniel.m.jordan@oracle.com>
commit 513c98d08682957cc9eba20e7e4bb349970711f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/513c98d0.failed

padata will use these these interfaces in a later patch, so unconfine them.

	Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
	Acked-by: Tejun Heo <tj@kernel.org>
	Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
	Cc: Herbert Xu <herbert@gondor.apana.org.au>
	Cc: Lai Jiangshan <jiangshanlai@gmail.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: linux-crypto@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 513c98d08682957cc9eba20e7e4bb349970711f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/workqueue.h
#	kernel/workqueue.c
diff --cc include/linux/workqueue.h
index 98f4d2edebcf,4261d1c6e87b..000000000000
--- a/include/linux/workqueue.h
+++ b/include/linux/workqueue.h
@@@ -444,7 -435,7 +444,11 @@@ struct workqueue_struct *alloc_workqueu
  
  extern void destroy_workqueue(struct workqueue_struct *wq);
  
++<<<<<<< HEAD
 +struct workqueue_attrs *alloc_workqueue_attrs(gfp_t gfp_mask);
++=======
+ struct workqueue_attrs *alloc_workqueue_attrs(void);
++>>>>>>> 513c98d08682 (workqueue: unconfine alloc/apply/free_workqueue_attrs())
  void free_workqueue_attrs(struct workqueue_attrs *attrs);
  int apply_workqueue_attrs(struct workqueue_struct *wq,
  			  const struct workqueue_attrs *attrs);
diff --cc kernel/workqueue.c
index 1e0eba3fb535,f53705ff3ff1..000000000000
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@@ -3317,7 -3345,7 +3317,11 @@@ void free_workqueue_attrs(struct workqu
   *
   * Return: The allocated new workqueue_attr on success. %NULL on failure.
   */
++<<<<<<< HEAD
 +struct workqueue_attrs *alloc_workqueue_attrs(gfp_t gfp_mask)
++=======
+ struct workqueue_attrs *alloc_workqueue_attrs(void)
++>>>>>>> 513c98d08682 (workqueue: unconfine alloc/apply/free_workqueue_attrs())
  {
  	struct workqueue_attrs *attrs;
  
* Unmerged path include/linux/workqueue.h
* Unmerged path kernel/workqueue.c
