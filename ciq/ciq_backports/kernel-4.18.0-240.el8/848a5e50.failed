perf report: Jump to symbol source view from total cycles view

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jin Yao <yao.jin@linux.intel.com>
commit 848a5e507e26176902e328bd8ae4a5e9c7d2bafe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/848a5e50.failed

This patch supports jumping from tui total cycles view to symbol source
view.

For example,

  perf record -b ./div
  perf report --total-cycles

In total cycles view, we can select one entry and press 'a' or press
ENTER key to jump to symbol source view.

This patch also sets sort_order to NULL in cmd_report() which will use
the default branch sort order. The percent value in new annotate view
will be consistent with the percent in annotate view switched from perf
report (we observed the original percent gap with previous patches).

 v2:
 ---
 Fix the 'make NO_SLANG=1' error. (set __maybe_unused to
 annotation_opts in block_hists_tui_browse()).

	Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Jin Yao <yao.jin@intel.com>
	Cc: Kan Liang <kan.liang@linux.intel.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lore.kernel.org/lkml/20191118140849.20714-2-yao.jin@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 848a5e507e26176902e328bd8ae4a5e9c7d2bafe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-report.c
#	tools/perf/ui/browsers/hists.c
#	tools/perf/util/block-info.c
#	tools/perf/util/block-info.h
#	tools/perf/util/hist.h
diff --cc tools/perf/builtin-report.c
index 914e3c341a48,ab0f6e516b03..000000000000
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@@ -472,7 -485,25 +472,29 @@@ static size_t hists__fprintf_nr_sample_
  	return ret + fprintf(fp, "\n#\n");
  }
  
++<<<<<<< HEAD
 +static int perf_evlist__tty_browse_hists(struct perf_evlist *evlist,
++=======
+ static int perf_evlist__tui_block_hists_browse(struct evlist *evlist,
+ 					       struct report *rep)
+ {
+ 	struct evsel *pos;
+ 	int i = 0, ret;
+ 
+ 	evlist__for_each_entry(evlist, pos) {
+ 		ret = report__browse_block_hists(&rep->block_reports[i++].hist,
+ 						 rep->min_percent, pos,
+ 						 &rep->session->header.env,
+ 						 &rep->annotation_opts);
+ 		if (ret != 0)
+ 			return ret;
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ static int perf_evlist__tty_browse_hists(struct evlist *evlist,
++>>>>>>> 848a5e507e26 (perf report: Jump to symbol source view from total cycles view)
  					 struct report *rep,
  					 const char *help)
  {
@@@ -492,6 -524,14 +514,17 @@@
  			continue;
  
  		hists__fprintf_nr_sample_events(hists, rep, evname, stdout);
++<<<<<<< HEAD
++=======
+ 
+ 		if (rep->total_cycles_mode) {
+ 			report__browse_block_hists(&rep->block_reports[i++].hist,
+ 						   rep->min_percent, pos,
+ 						   NULL, NULL);
+ 			continue;
+ 		}
+ 
++>>>>>>> 848a5e507e26 (perf report: Jump to symbol source view from total cycles view)
  		hists__fprintf(hists, !quiet, 0, 0, rep->min_percent, stdout,
  			       !(symbol_conf.use_callchain ||
  			         symbol_conf.show_branchflag_count));
@@@ -1365,6 -1417,13 +1398,16 @@@ repeat
  		goto error;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (report.total_cycles_mode) {
+ 		if (sort__mode != SORT_MODE__BRANCH)
+ 			report.total_cycles_mode = false;
+ 		else
+ 			sort_order = NULL;
+ 	}
+ 
++>>>>>>> 848a5e507e26 (perf report: Jump to symbol source view from total cycles view)
  	if (strcmp(input_name, "-") != 0)
  		setup_browser(true);
  	else
diff --cc tools/perf/ui/browsers/hists.c
index bef534a58839,d4d3558fdef4..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -3437,3 -3448,75 +3441,78 @@@ single_entry
  					       warn_lost_event,
  					       annotation_opts);
  }
++<<<<<<< HEAD
++=======
+ 
+ static int block_hists_browser__title(struct hist_browser *browser, char *bf,
+ 				      size_t size)
+ {
+ 	struct hists *hists = evsel__hists(browser->block_evsel);
+ 	const char *evname = perf_evsel__name(browser->block_evsel);
+ 	unsigned long nr_samples = hists->stats.nr_events[PERF_RECORD_SAMPLE];
+ 	int ret;
+ 
+ 	ret = scnprintf(bf, size, "# Samples: %lu", nr_samples);
+ 	if (evname)
+ 		scnprintf(bf + ret, size -  ret, " of event '%s'", evname);
+ 
+ 	return 0;
+ }
+ 
+ int block_hists_tui_browse(struct block_hist *bh, struct evsel *evsel,
+ 			   float min_percent, struct perf_env *env,
+ 			   struct annotation_options *annotation_opts)
+ {
+ 	struct hists *hists = &bh->block_hists;
+ 	struct hist_browser *browser;
+ 	int key = -1;
+ 	struct popup_action action;
+ 	static const char help[] =
+ 	" q             Quit \n";
+ 
+ 	browser = hist_browser__new(hists);
+ 	if (!browser)
+ 		return -1;
+ 
+ 	browser->block_evsel = evsel;
+ 	browser->title = block_hists_browser__title;
+ 	browser->min_pcnt = min_percent;
+ 	browser->env = env;
+ 	browser->annotation_opts = annotation_opts;
+ 
+ 	/* reset abort key so that it can get Ctrl-C as a key */
+ 	SLang_reset_tty();
+ 	SLang_init_tty(0, 0, 0);
+ 
+ 	memset(&action, 0, sizeof(action));
+ 
+ 	while (1) {
+ 		key = hist_browser__run(browser, "? - help", true);
+ 
+ 		switch (key) {
+ 		case 'q':
+ 			goto out;
+ 		case '?':
+ 			ui_browser__help_window(&browser->b, help);
+ 			break;
+ 		case 'a':
+ 		case K_ENTER:
+ 			if (!browser->selection ||
+ 			    !browser->selection->sym) {
+ 				continue;
+ 			}
+ 
+ 			action.ms.map = browser->selection->map;
+ 			action.ms.sym = browser->selection->sym;
+ 			do_annotate(browser, &action);
+ 			continue;
+ 		default:
+ 			break;
+ 		}
+ 	}
+ 
+ out:
+ 	hist_browser__delete(browser);
+ 	return 0;
+ }
++>>>>>>> 848a5e507e26 (perf report: Jump to symbol source view from total cycles view)
diff --cc tools/perf/util/hist.h
index c6e62d63dc1c,45286900aacb..000000000000
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@@ -473,11 -474,15 +473,18 @@@ int script_browse(const char *script_op
  
  void run_script(char *cmd);
  int res_sample_browse(struct res_sample *res_samples, int num_res,
 -		      struct evsel *evsel, enum rstype rstype);
 +		      struct perf_evsel *evsel, enum rstype rstype);
  void res_sample_init(void);
++<<<<<<< HEAD
++=======
+ 
+ int block_hists_tui_browse(struct block_hist *bh, struct evsel *evsel,
+ 			   float min_percent, struct perf_env *env,
+ 			   struct annotation_options *annotation_opts);
++>>>>>>> 848a5e507e26 (perf report: Jump to symbol source view from total cycles view)
  #else
  static inline
 -int perf_evlist__tui_browse_hists(struct evlist *evlist __maybe_unused,
 +int perf_evlist__tui_browse_hists(struct perf_evlist *evlist __maybe_unused,
  				  const char *help __maybe_unused,
  				  struct hist_browser_timer *hbt __maybe_unused,
  				  float min_pcnt __maybe_unused,
@@@ -519,6 -524,15 +526,18 @@@ static inline int res_sample_browse(str
  
  static inline void res_sample_init(void) {}
  
++<<<<<<< HEAD
++=======
+ static inline int block_hists_tui_browse(struct block_hist *bh __maybe_unused,
+ 					 struct evsel *evsel __maybe_unused,
+ 					 float min_percent __maybe_unused,
+ 					 struct perf_env *env __maybe_unused,
+ 					 struct annotation_options *annotation_opts __maybe_unused)
+ {
+ 	return 0;
+ }
+ 
++>>>>>>> 848a5e507e26 (perf report: Jump to symbol source view from total cycles view)
  #define K_LEFT  -1000
  #define K_RIGHT -2000
  #define K_SWITCH_INPUT_DATA -3000
* Unmerged path tools/perf/util/block-info.c
* Unmerged path tools/perf/util/block-info.h
* Unmerged path tools/perf/builtin-report.c
* Unmerged path tools/perf/ui/browsers/hists.c
* Unmerged path tools/perf/util/block-info.c
* Unmerged path tools/perf/util/block-info.h
* Unmerged path tools/perf/util/hist.h
