scsi: sd_zbc: Remove set but not used variable 'buflen'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author YueHaibing <yuehaibing@huawei.com>
commit a468168130ec1a3245812f2c713be97081149ca2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/a4681681.failed

Fixes gcc '-Wunused-but-set-variable' warning:

drivers/scsi/sd_zbc.c: In function 'sd_zbc_check_zones':
drivers/scsi/sd_zbc.c:341:9: warning:
 variable 'buflen' set but not used [-Wunused-but-set-variable]

It is not used since commit d9dd73087a8b ("block: Enhance
blk_revalidate_disk_zones()")

	Reported-by: Hulk Robot <hulkci@huawei.com>
	Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
	Signed-off-by: YueHaibing <yuehaibing@huawei.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit a468168130ec1a3245812f2c713be97081149ca2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/sd_zbc.c
diff --cc drivers/scsi/sd_zbc.c
index 3707ee36b4d8,0e5ede48f045..000000000000
--- a/drivers/scsi/sd_zbc.c
+++ b/drivers/scsi/sd_zbc.c
@@@ -336,62 -361,10 +336,69 @@@ static int sd_zbc_check_zones(struct sc
  		}
  	}
  
++<<<<<<< HEAD
 +	/*
 +	 * Check same field: for any value other than 0, we know that all zones
 +	 * have the same size.
 +	 */
 +	same = buf[4] & 0x0f;
 +	if (same > 0) {
 +		rec = &buf[64];
 +		zone_blocks = get_unaligned_be64(&rec[8]);
 +		goto out;
 +	}
 +
 +	/*
 +	 * Check the size of all zones: all zones must be of
 +	 * equal size, except the last zone which can be smaller
 +	 * than other zones.
 +	 */
 +	do {
 +
 +		/* Parse REPORT ZONES header */
 +		list_length = get_unaligned_be32(&buf[0]) + 64;
 +		rec = buf + 64;
 +		buf_len = min(list_length, SD_ZBC_BUF_SIZE);
 +
 +		/* Parse zone descriptors */
 +		while (rec < buf + buf_len) {
 +			u64 this_zone_blocks = get_unaligned_be64(&rec[8]);
 +
 +			if (zone_blocks == 0) {
 +				zone_blocks = this_zone_blocks;
 +			} else if (this_zone_blocks != zone_blocks &&
 +				   (block + this_zone_blocks < sdkp->capacity
 +				    || this_zone_blocks > zone_blocks)) {
 +				zone_blocks = 0;
 +				goto out;
 +			}
 +			block += this_zone_blocks;
 +			rec += 64;
 +		}
 +
 +		if (block < sdkp->capacity) {
 +			ret = sd_zbc_do_report_zones(sdkp, buf, SD_ZBC_BUF_SIZE,
 +						     block, true);
 +			if (ret)
 +				goto out_free;
 +		}
 +
 +	} while (block < sdkp->capacity);
 +
 +out:
 +	if (!zone_blocks) {
 +		if (sdkp->first_scan)
 +			sd_printk(KERN_NOTICE, sdkp,
 +				  "Devices with non constant zone "
 +				  "size are not supported\n");
 +		ret = -ENODEV;
 +	} else if (!is_power_of_2(zone_blocks)) {
++=======
+ 	/* Parse REPORT ZONES header */
+ 	rec = buf + 64;
+ 	zone_blocks = get_unaligned_be64(&rec[8]);
+ 	if (!zone_blocks || !is_power_of_2(zone_blocks)) {
++>>>>>>> a468168130ec (scsi: sd_zbc: Remove set but not used variable 'buflen')
  		if (sdkp->first_scan)
  			sd_printk(KERN_NOTICE, sdkp,
  				  "Devices with non power of 2 zone "
* Unmerged path drivers/scsi/sd_zbc.c
