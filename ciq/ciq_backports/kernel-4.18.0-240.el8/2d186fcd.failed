Bluetooth: Fix incorrect branch in connection complete

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
commit 2d186fcd6d8d3a493894de48611e4925ddf7b951
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2d186fcd.failed

When handling auto-connected devices, we should execute the rest of the
connection complete when it was previously discovered and it is an ACL
connection.

	Signed-off-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 2d186fcd6d8d3a493894de48611e4925ddf7b951)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_event.c
diff --cc net/bluetooth/hci_event.c
index fe432ccce190,cd3d7d90029b..000000000000
--- a/net/bluetooth/hci_event.c
+++ b/net/bluetooth/hci_event.c
@@@ -2148,14 -2526,30 +2148,41 @@@ static void hci_conn_complete_evt(struc
  
  	conn = hci_conn_hash_lookup_ba(hdev, ev->link_type, &ev->bdaddr);
  	if (!conn) {
++<<<<<<< HEAD
 +		if (ev->link_type != SCO_LINK)
 +			goto unlock;
 +
 +		conn = hci_conn_hash_lookup_ba(hdev, ESCO_LINK, &ev->bdaddr);
 +		if (!conn)
 +			goto unlock;
 +
 +		conn->type = SCO_LINK;
++=======
+ 		/* Connection may not exist if auto-connected. Check the inquiry
+ 		 * cache to see if we've already discovered this bdaddr before.
+ 		 * If found and link is an ACL type, create a connection class
+ 		 * automatically.
+ 		 */
+ 		ie = hci_inquiry_cache_lookup(hdev, &ev->bdaddr);
+ 		if (ie && ev->link_type == ACL_LINK) {
+ 			conn = hci_conn_add(hdev, ev->link_type, &ev->bdaddr,
+ 					    HCI_ROLE_SLAVE);
+ 			if (!conn) {
+ 				bt_dev_err(hdev, "no memory for new conn");
+ 				goto unlock;
+ 			}
+ 		} else {
+ 			if (ev->link_type != SCO_LINK)
+ 				goto unlock;
+ 
+ 			conn = hci_conn_hash_lookup_ba(hdev, ESCO_LINK,
+ 						       &ev->bdaddr);
+ 			if (!conn)
+ 				goto unlock;
+ 
+ 			conn->type = SCO_LINK;
+ 		}
++>>>>>>> 2d186fcd6d8d (Bluetooth: Fix incorrect branch in connection complete)
  	}
  
  	if (!ev->status) {
* Unmerged path net/bluetooth/hci_event.c
