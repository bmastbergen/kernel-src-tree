KVM: VMX: Use vmx_get_rflags() to query RFLAGS in vmx_interrupt_blocked()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Sean Christopherson <sean.j.christopherson@intel.com>
commit 7ab0abdb553e62704be5b7879a0971acf9f36a06
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7ab0abdb.failed

Use vmx_get_rflags() instead of manually reading vmcs.GUEST_RFLAGS when
querying RFLAGS.IF so that multiple checks against interrupt blocking in
a single run loop only require a single VMREAD.

	Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Message-Id: <20200423022550.15113-14-sean.j.christopherson@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 7ab0abdb553e62704be5b7879a0971acf9f36a06)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/vmx/vmx.c
index 937b351f9365,71cd210ec368..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -4606,12 -4528,25 +4606,26 @@@ static int vmx_interrupt_allowed(struc
  	if (to_vmx(vcpu)->nested.nested_run_pending)
  		return false;
  
 -	return !vmx_nmi_blocked(vcpu);
 -}
 -
 -bool vmx_interrupt_blocked(struct kvm_vcpu *vcpu)
 -{
  	if (is_guest_mode(vcpu) && nested_exit_on_intr(vcpu))
 -		return false;
 +		return true;
  
++<<<<<<< HEAD
 +	return (vmcs_readl(GUEST_RFLAGS) & X86_EFLAGS_IF) &&
 +		!(vmcs_read32(GUEST_INTERRUPTIBILITY_INFO) &
 +			(GUEST_INTR_STATE_STI | GUEST_INTR_STATE_MOV_SS));
++=======
+ 	return !(vmx_get_rflags(vcpu) & X86_EFLAGS_IF) ||
+ 	       (vmcs_read32(GUEST_INTERRUPTIBILITY_INFO) &
+ 		(GUEST_INTR_STATE_STI | GUEST_INTR_STATE_MOV_SS));
+ }
+ 
+ static bool vmx_interrupt_allowed(struct kvm_vcpu *vcpu)
+ {
+ 	if (to_vmx(vcpu)->nested.nested_run_pending)
+ 		return false;
+ 
+ 	return !vmx_interrupt_blocked(vcpu);
++>>>>>>> 7ab0abdb553e (KVM: VMX: Use vmx_get_rflags() to query RFLAGS in vmx_interrupt_blocked())
  }
  
  static int vmx_set_tss_addr(struct kvm *kvm, unsigned int addr)
* Unmerged path arch/x86/kvm/vmx/vmx.c
