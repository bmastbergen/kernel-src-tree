drm/nouveau/sec2/gv100-: add missing MODULE_FIRMWARE()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 92f673a12d14b5393138d2b1cfeb41d72b47362d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/92f673a1.failed

ASB was failing to load on Turing GPUs when firmware is being loaded
from initramfs, leaving the GPU in an odd state and causing suspend/
resume to fail.

Add missing MODULE_FIRMWARE() lines for initramfs generators.

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
	Cc: <stable@vger.kernel.org> # 5.6
(cherry picked from commit 92f673a12d14b5393138d2b1cfeb41d72b47362d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/ce/tu104.c
#	drivers/gpu/drm/nouveau/nvkm/engine/sec2/tu102.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/ce/tu104.c
index 3c25043bbb33,e770c9497871..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/ce/tu104.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/ce/tu104.c
@@@ -20,16 -20,19 +20,25 @@@
   * OTHER DEALINGS IN THE SOFTWARE.
   */
  #include "priv.h"
 -#include <subdev/acr.h>
  
++<<<<<<< HEAD:drivers/gpu/drm/nouveau/nvkm/engine/ce/tu104.c
 +#include <nvif/class.h>
++=======
+ MODULE_FIRMWARE("nvidia/gp108/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/gp108/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/gp108/sec2/sig.bin");
+ MODULE_FIRMWARE("nvidia/gv100/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/gv100/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/gv100/sec2/sig.bin");
++>>>>>>> 92f673a12d14 (drm/nouveau/sec2/gv100-: add missing MODULE_FIRMWARE()):drivers/gpu/drm/nouveau/nvkm/engine/sec2/gp108.c
  
 -static const struct nvkm_sec2_fwif
 -gp108_sec2_fwif[] = {
 -	{ 0, gp102_sec2_load, &gp102_sec2, &gp102_sec2_acr_1 },
 -	{}
 +static const struct nvkm_engine_func
 +tu104_ce = {
 +	.intr = gp100_ce_intr,
 +	.sclass = {
 +		{ -1, -1, TURING_DMA_COPY_A },
 +		{}
 +	}
  };
  
  int
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/sec2/tu102.c
index d655576164b1,a8295653ceab..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/sec2/tu102.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/sec2/tu102.c
@@@ -19,12 -19,67 +19,72 @@@
   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
   * OTHER DEALINGS IN THE SOFTWARE.
   */
 +
  #include "priv.h"
++<<<<<<< HEAD
++=======
+ #include <subdev/acr.h>
+ 
+ static const struct nvkm_falcon_func
+ tu102_sec2_flcn = {
+ 	.debug = 0x408,
+ 	.fbif = 0x600,
+ 	.load_imem = nvkm_falcon_v1_load_imem,
+ 	.load_dmem = nvkm_falcon_v1_load_dmem,
+ 	.read_dmem = nvkm_falcon_v1_read_dmem,
+ 	.emem_addr = 0x01000000,
+ 	.bind_context = gp102_sec2_flcn_bind_context,
+ 	.wait_for_halt = nvkm_falcon_v1_wait_for_halt,
+ 	.clear_interrupt = nvkm_falcon_v1_clear_interrupt,
+ 	.set_start_addr = nvkm_falcon_v1_set_start_addr,
+ 	.start = nvkm_falcon_v1_start,
+ 	.enable = nvkm_falcon_v1_enable,
+ 	.disable = nvkm_falcon_v1_disable,
+ 	.cmdq = { 0xc00, 0xc04, 8 },
+ 	.msgq = { 0xc80, 0xc84, 8 },
+ };
+ 
+ static const struct nvkm_sec2_func
+ tu102_sec2 = {
+ 	.flcn = &tu102_sec2_flcn,
+ 	.unit_acr = 0x07,
+ 	.intr = gp102_sec2_intr,
+ 	.initmsg = gp102_sec2_initmsg,
+ };
+ 
+ static int
+ tu102_sec2_nofw(struct nvkm_sec2 *sec2, int ver,
+ 		const struct nvkm_sec2_fwif *fwif)
+ {
+ 	return 0;
+ }
+ 
+ MODULE_FIRMWARE("nvidia/tu102/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/tu102/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/tu102/sec2/sig.bin");
+ MODULE_FIRMWARE("nvidia/tu104/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/tu104/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/tu104/sec2/sig.bin");
+ MODULE_FIRMWARE("nvidia/tu106/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/tu106/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/tu106/sec2/sig.bin");
+ MODULE_FIRMWARE("nvidia/tu116/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/tu116/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/tu116/sec2/sig.bin");
+ MODULE_FIRMWARE("nvidia/tu117/sec2/desc.bin");
+ MODULE_FIRMWARE("nvidia/tu117/sec2/image.bin");
+ MODULE_FIRMWARE("nvidia/tu117/sec2/sig.bin");
+ 
+ static const struct nvkm_sec2_fwif
+ tu102_sec2_fwif[] = {
+ 	{  0, gp102_sec2_load, &tu102_sec2, &gp102_sec2_acr_1 },
+ 	{ -1, tu102_sec2_nofw, &tu102_sec2 }
+ };
++>>>>>>> 92f673a12d14 (drm/nouveau/sec2/gv100-: add missing MODULE_FIRMWARE())
  
  int
 -tu102_sec2_new(struct nvkm_device *device, int index, struct nvkm_sec2 **psec2)
 +tu102_sec2_new(struct nvkm_device *device, int index,
 +	       struct nvkm_sec2 **psec2)
  {
  	/* TOP info wasn't updated on Turing to reflect the PRI
  	 * address change for some reason.  We override it here.
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/ce/tu104.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/sec2/tu102.c
