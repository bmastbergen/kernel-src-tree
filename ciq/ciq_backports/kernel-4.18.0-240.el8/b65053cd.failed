selftests/bpf: Add whitelist/blacklist of test names to test_progs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit b65053cd94f46619b4aae746b98f2d8d9274540e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b65053cd.failed

Add ability to specify a list of test name substrings for selecting which
tests to run. So now -t is accepting a comma-separated list of strings,
similarly to how -n accepts a comma-separated list of test numbers.

Additionally, add ability to blacklist tests by name. Blacklist takes
precedence over whitelist. Blacklisting is important for cases where it's
known that some tests can't pass (e.g., due to perf hardware events that are
not available within VM). This is going to be used for libbpf testing in
Travis CI in its Github repo.

Example runs with just whitelist and whitelist + blacklist:

  $ sudo ./test_progs -tattach,core/existence
  #1 attach_probe:OK
  #6 cgroup_attach_autodetach:OK
  #7 cgroup_attach_multi:OK
  #8 cgroup_attach_override:OK
  #9 core_extern:OK
  #10/44 existence:OK
  #10/45 existence___minimal:OK
  #10/46 existence__err_int_sz:OK
  #10/47 existence__err_int_type:OK
  #10/48 existence__err_int_kind:OK
  #10/49 existence__err_arr_kind:OK
  #10/50 existence__err_arr_value_type:OK
  #10/51 existence__err_struct_type:OK
  #10 core_reloc:OK
  #19 flow_dissector_reattach:OK
  #60 tp_attach_query:OK
  Summary: 8/8 PASSED, 0 SKIPPED, 0 FAILED

  $ sudo ./test_progs -tattach,core/existence -bcgroup,flow/arr
  #1 attach_probe:OK
  #9 core_extern:OK
  #10/44 existence:OK
  #10/45 existence___minimal:OK
  #10/46 existence__err_int_sz:OK
  #10/47 existence__err_int_type:OK
  #10/48 existence__err_int_kind:OK
  #10/51 existence__err_struct_type:OK
  #10 core_reloc:OK
  #60 tp_attach_query:OK
  Summary: 4/6 PASSED, 0 SKIPPED, 0 FAILED

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Cc: Julia Kartseva <hex@fb.com>
Link: https://lore.kernel.org/bpf/20200116005549.3644118-1-andriin@fb.com
(cherry picked from commit b65053cd94f46619b4aae746b98f2d8d9274540e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/test_progs.c
diff --cc tools/testing/selftests/bpf/test_progs.c
index c4ab72554583,bab1e6f1d8f1..000000000000
--- a/tools/testing/selftests/bpf/test_progs.c
+++ b/tools/testing/selftests/bpf/test_progs.c
@@@ -10,8 -8,7 +10,12 @@@
  #include <string.h>
  
  /* defined in test_progs.h */
++<<<<<<< HEAD
 +struct test_env env;
 +int error_cnt, pass_cnt;
++=======
+ struct test_env env = {};
++>>>>>>> b65053cd94f4 (selftests/bpf: Add whitelist/blacklist of test names to test_progs)
  
  struct prog_test_def {
  	const char *test_name;
@@@ -572,8 -676,12 +635,12 @@@ int main(int argc, char **argv
  	printf("Summary: %d/%d PASSED, %d SKIPPED, %d FAILED\n",
  	       env.succ_cnt, env.sub_succ_cnt, env.skip_cnt, env.fail_cnt);
  
+ 	free(env.test_selector.blacklist.strs);
+ 	free(env.test_selector.whitelist.strs);
  	free(env.test_selector.num_set);
+ 	free(env.subtest_selector.blacklist.strs);
+ 	free(env.subtest_selector.whitelist.strs);
  	free(env.subtest_selector.num_set);
  
 -	return env.fail_cnt ? EXIT_FAILURE : EXIT_SUCCESS;
 +	return error_cnt ? EXIT_FAILURE : EXIT_SUCCESS;
  }
* Unmerged path tools/testing/selftests/bpf/test_progs.c
diff --git a/tools/testing/selftests/bpf/test_progs.h b/tools/testing/selftests/bpf/test_progs.h
index 9defd35cb6c0..77b56917e9a0 100644
--- a/tools/testing/selftests/bpf/test_progs.h
+++ b/tools/testing/selftests/bpf/test_progs.h
@@ -40,8 +40,14 @@ typedef __u16 __sum16;
 
 struct prog_test_def;
 
+struct str_set {
+	const char **strs;
+	int cnt;
+};
+
 struct test_selector {
-	const char *name;
+	struct str_set whitelist;
+	struct str_set blacklist;
 	bool *num_set;
 	int num_set_len;
 };
