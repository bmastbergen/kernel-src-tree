libbpf: Support .text sub-calls relocations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 9173cac3b64e6785dd604f5075e6035b045a0026
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/9173cac3.failed

The LLVM patch https://reviews.llvm.org/D72197 makes LLVM emit function call
relocations within the same section. This includes a default .text section,
which contains any BPF sub-programs. This wasn't the case before and so libbpf
was able to get a way with slightly simpler handling of subprogram call
relocations.

This patch adds support for .text section relocations. It needs to ensure
correct order of relocations, so does two passes:
- first, relocate .text instructions, if there are any relocations in it;
- then process all the other programs and copy over patched .text instructions
for all sub-program calls.

v1->v2:
- break early once .text program is processed.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Yonghong Song <yhs@fb.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20200115190856.2391325-1-andriin@fb.com
(cherry picked from commit 9173cac3b64e6785dd604f5075e6035b045a0026)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index e39f1837896b,23868883477f..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -3401,16 -4692,7 +3401,20 @@@ bpf_program__reloc_text(struct bpf_prog
  	size_t new_cnt;
  	int err;
  
++<<<<<<< HEAD
 +	if (relo->type != RELO_CALL)
 +		return -LIBBPF_ERRNO__RELOC;
 +
 +	if (prog->idx == obj->efile.text_shndx) {
 +		pr_warn("relo in .text insn %d into off %d\n",
 +			relo->insn_idx, relo->text_off);
 +		return -LIBBPF_ERRNO__RELOC;
 +	}
 +
 +	if (prog->main_prog_cnt == 0) {
++=======
+ 	if (prog->idx != obj->efile.text_shndx && prog->main_prog_cnt == 0) {
++>>>>>>> 9173cac3b64e (libbpf: Support .text sub-calls relocations)
  		text = bpf_object__find_prog_by_idx(obj, obj->efile.text_shndx);
  		if (!text) {
  			pr_warn("no .text section found yet relo into text exist\n");
@@@ -3440,8 -4722,9 +3444,9 @@@
  			 text->insns_cnt, text->section_name,
  			 prog->section_name);
  	}
+ 
  	insn = &prog->insns[relo->insn_idx];
 -	insn->imm += relo->sym_off / 8 + prog->main_prog_cnt - relo->insn_idx;
 +	insn->imm += relo->text_off + prog->main_prog_cnt - relo->insn_idx;
  	return 0;
  }
  
* Unmerged path tools/lib/bpf/libbpf.c
