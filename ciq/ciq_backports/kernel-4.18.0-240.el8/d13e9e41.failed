perf stat: Align the output for interval aggregation mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jin Yao <yao.jin@linux.intel.com>
commit d13e9e413e5b470c4364bbbce559383081201811
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/d13e9e41.failed

There is a slight misalignment in -A -I output.

For example:

 # perf stat -e cpu/event=cpu-cycles/ -a -A -I 1000

 #           time CPU                    counts unit events
      1.000440863 CPU0               1,068,388      cpu/event=cpu-cycles/
      1.000440863 CPU1                 875,954      cpu/event=cpu-cycles/
      1.000440863 CPU2               3,072,538      cpu/event=cpu-cycles/
      1.000440863 CPU3               4,026,870      cpu/event=cpu-cycles/
      1.000440863 CPU4               5,919,630      cpu/event=cpu-cycles/
      1.000440863 CPU5               2,714,260      cpu/event=cpu-cycles/
      1.000440863 CPU6               2,219,240      cpu/event=cpu-cycles/
      1.000440863 CPU7               1,299,232      cpu/event=cpu-cycles/

The value of counts is not aligned with the column "counts" and
the event name is not aligned with the column "events".

With this patch, the output is,

 # perf stat -e cpu/event=cpu-cycles/ -a -A -I 1000

 #           time CPU                    counts unit events
      1.000423009 CPU0                  997,421      cpu/event=cpu-cycles/
      1.000423009 CPU1                1,422,042      cpu/event=cpu-cycles/
      1.000423009 CPU2                  484,651      cpu/event=cpu-cycles/
      1.000423009 CPU3                  525,791      cpu/event=cpu-cycles/
      1.000423009 CPU4                1,370,100      cpu/event=cpu-cycles/
      1.000423009 CPU5                  442,072      cpu/event=cpu-cycles/
      1.000423009 CPU6                  205,643      cpu/event=cpu-cycles/
      1.000423009 CPU7                1,302,250      cpu/event=cpu-cycles/

Now output is aligned.

	Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Kan Liang <kan.liang@linux.intel.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lore.kernel.org/lkml/20200218071614.25736-1-yao.jin@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d13e9e413e5b470c4364bbbce559383081201811)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/stat-display.c
diff --cc tools/perf/util/stat-display.c
index ee5c9646216e,9e757d18d713..000000000000
--- a/tools/perf/util/stat-display.c
+++ b/tools/perf/util/stat-display.c
@@@ -106,12 -115,12 +106,18 @@@ static void aggr_printout(struct perf_s
  			fprintf(config->output, "S%d-D%d-C%*d%s",
  				cpu_map__id_to_socket(id),
  				cpu_map__id_to_die(id),
- 				config->csv_output ? 0 : -5,
+ 				config->csv_output ? 0 : -3,
  				cpu_map__id_to_cpu(id), config->csv_sep);
  		} else {
++<<<<<<< HEAD
 +			fprintf(config->output, "CPU%*d%s ",
 +				config->csv_output ? 0 : -5,
 +				perf_evsel__cpus(evsel)->map[id],
++=======
+ 			fprintf(config->output, "CPU%*d%s",
+ 				config->csv_output ? 0 : -7,
+ 				evsel__cpus(evsel)->map[id],
++>>>>>>> d13e9e413e5b (perf stat: Align the output for interval aggregation mode)
  				config->csv_sep);
  		}
  		break;
* Unmerged path tools/perf/util/stat-display.c
