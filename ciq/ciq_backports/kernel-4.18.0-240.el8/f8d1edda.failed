net/mlx5: E-switch, Fix mutex init order

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Parav Pandit <parav@mellanox.com>
commit f8d1eddaf94abdc459ccfb881aa7233cb9f7f39a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/f8d1edda.failed

In cited patch mutex is initialized after its used.
Below call trace is observed.
Fix the order to initialize the mutex early enough.
Similarly follow mirror sequence during cleanup.

kernel: DEBUG_LOCKS_WARN_ON(lock->magic != lock)
kernel: WARNING: CPU: 5 PID: 45916 at kernel/locking/mutex.c:938
__mutex_lock+0x7d6/0x8a0
kernel: Call Trace:
kernel: ? esw_vport_tbl_get+0x3b/0x250 [mlx5_core]
kernel: ? mark_held_locks+0x55/0x70
kernel: ? __slab_free+0x274/0x400
kernel: ? lockdep_hardirqs_on+0x140/0x1d0
kernel: esw_vport_tbl_get+0x3b/0x250 [mlx5_core]
kernel: ? mlx5_esw_chains_create_fdb_prio+0xa57/0xc20 [mlx5_core]
kernel: mlx5_esw_vport_tbl_get+0x88/0xf0 [mlx5_core]
kernel: mlx5_esw_chains_create+0x2f3/0x3e0 [mlx5_core]
kernel: esw_create_offloads_fdb_tables+0x11d/0x580 [mlx5_core]
kernel: esw_offloads_enable+0x26d/0x540 [mlx5_core]
kernel: mlx5_eswitch_enable_locked+0x155/0x860 [mlx5_core]
kernel: mlx5_devlink_eswitch_mode_set+0x1af/0x320 [mlx5_core]
kernel: devlink_nl_cmd_eswitch_set_doit+0x41/0xb0

Fixes: 96e326878fa5 ("net/mlx5e: Eswitch, Use per vport tables for mirroring")
	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Reviewed-by: Eli Cohen <eli@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit f8d1eddaf94abdc459ccfb881aa7233cb9f7f39a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 1f7d3f1673cb,5d9def18ae3a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -2045,12 -2219,21 +2045,17 @@@ static int esw_offloads_steering_init(s
  		total_vports = num_vfs + MLX5_SPECIAL_VPORTS(esw->dev);
  
  	memset(&esw->fdb_table.offloads, 0, sizeof(struct offloads_fdb));
++<<<<<<< HEAD
 +	mutex_init(&esw->fdb_table.offloads.fdb_prio_lock);
++=======
+ 	mutex_init(&esw->fdb_table.offloads.vports.lock);
+ 	hash_init(esw->fdb_table.offloads.vports.table);
++>>>>>>> f8d1eddaf94a (net/mlx5: E-switch, Fix mutex init order)
  
 -	err = esw_create_uplink_offloads_acl_tables(esw);
 +	err = esw_create_offloads_acl_tables(esw);
  	if (err)
- 		return err;
+ 		goto create_acl_err;
  
 -	err = esw_create_offloads_table(esw, total_vports);
 -	if (err)
 -		goto create_offloads_err;
 -
 -	err = esw_create_restore_table(esw);
 -	if (err)
 -		goto create_restore_err;
 -
  	err = esw_create_offloads_fdb_tables(esw, total_vports);
  	if (err)
  		goto create_fdb_err;
@@@ -2066,23 -2245,26 +2071,35 @@@
  	return 0;
  
  create_fg_err:
 +	esw_destroy_offloads_table(esw);
++<<<<<<< HEAD
 +
 +create_ft_err:
  	esw_destroy_offloads_fdb_tables(esw);
 +
  create_fdb_err:
 -	esw_destroy_restore_table(esw);
 -create_restore_err:
 -	esw_destroy_offloads_table(esw);
 +	esw_destroy_offloads_acl_tables(esw);
 +
++=======
+ create_offloads_err:
+ 	esw_destroy_uplink_offloads_acl_tables(esw);
+ create_acl_err:
+ 	mutex_destroy(&esw->fdb_table.offloads.vports.lock);
++>>>>>>> f8d1eddaf94a (net/mlx5: E-switch, Fix mutex init order)
  	return err;
  }
  
  static void esw_offloads_steering_cleanup(struct mlx5_eswitch *esw)
  {
  	esw_destroy_vport_rx_group(esw);
 -	esw_destroy_offloads_fdb_tables(esw);
 -	esw_destroy_restore_table(esw);
  	esw_destroy_offloads_table(esw);
++<<<<<<< HEAD
 +	esw_destroy_offloads_fdb_tables(esw);
 +	esw_destroy_offloads_acl_tables(esw);
++=======
+ 	esw_destroy_uplink_offloads_acl_tables(esw);
+ 	mutex_destroy(&esw->fdb_table.offloads.vports.lock);
++>>>>>>> f8d1eddaf94a (net/mlx5: E-switch, Fix mutex init order)
  }
  
  static void
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
