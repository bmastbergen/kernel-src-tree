bpf: Fix build error without CONFIG_NET

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author YueHaibing <yuehaibing@huawei.com>
commit 1f5343c0ae9673543055e9794362766e1f0ed163
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/1f5343c0.failed

If CONFIG_NET is n, building fails:

kernel/trace/bpf_trace.o: In function `raw_tp_prog_func_proto':
bpf_trace.c:(.text+0x1a34): undefined reference to `bpf_skb_output_proto'

Wrap it into a #ifdef to fix this.

Fixes: a7658e1a4164 ("bpf: Check types of arguments passed into helpers")
	Reported-by: Hulk Robot <hulkci@huawei.com>
	Signed-off-by: YueHaibing <yuehaibing@huawei.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Yonghong Song <yhs@fb.com>
Link: https://lore.kernel.org/bpf/20191018090344.26936-1-yuehaibing@huawei.com
(cherry picked from commit 1f5343c0ae9673543055e9794362766e1f0ed163)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/bpf_trace.c
diff --cc kernel/trace/bpf_trace.c
index 5d5f0d4ffd27,c3240898cc44..000000000000
--- a/kernel/trace/bpf_trace.c
+++ b/kernel/trace/bpf_trace.c
@@@ -1046,6 -1055,10 +1046,13 @@@ raw_tp_prog_func_proto(enum bpf_func_i
  	switch (func_id) {
  	case BPF_FUNC_perf_event_output:
  		return &bpf_perf_event_output_proto_raw_tp;
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NET
+ 	case BPF_FUNC_skb_output:
+ 		return &bpf_skb_output_proto;
+ #endif
++>>>>>>> 1f5343c0ae96 (bpf: Fix build error without CONFIG_NET)
  	case BPF_FUNC_get_stackid:
  		return &bpf_get_stackid_proto_raw_tp;
  	case BPF_FUNC_get_stack:
* Unmerged path kernel/trace/bpf_trace.c
