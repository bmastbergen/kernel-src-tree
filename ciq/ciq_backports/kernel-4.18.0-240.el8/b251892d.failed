perf stat: Move perf_stat_synthesize_config() to event.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit b251892d6ceafa3c8f8e6835a664e248766b1b3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/b251892d.failed

Together with the other synthsizers, and rename it to
perf_event__synthesize_stat_events().

This allows us to stop including event.h in util/stat.h.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-q5ebhrp44txboobs86htu5r9@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit b251892d6ceafa3c8f8e6835a664e248766b1b3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/event.h
#	tools/perf/util/stat.c
#	tools/perf/util/stat.h
diff --cc tools/perf/util/event.h
index ba0ec1b6aad3,89a2404170a0..000000000000
--- a/tools/perf/util/event.h
+++ b/tools/perf/util/event.h
@@@ -602,8 -293,46 +602,49 @@@ typedef int (*perf_event__handler_t)(st
  				     struct perf_sample *sample,
  				     struct machine *machine);
  
++<<<<<<< HEAD
++=======
+ int perf_event__synthesize_stat_events(struct perf_stat_config *config,
+ 				       struct perf_tool *tool,
+ 				       struct evlist *evlist,
+ 				       perf_event__handler_t process,
+ 				       bool attrs);
+ int perf_event__synthesize_attr(struct perf_tool *tool,
+ 				struct perf_event_attr *attr, u32 ids, u64 *id,
+ 				perf_event__handler_t process);
+ int perf_event__synthesize_attrs(struct perf_tool *tool,
+ 				 struct evlist *evlist,
+ 				 perf_event__handler_t process);
+ int perf_event__synthesize_build_id(struct perf_tool *tool,
+ 				    struct dso *pos, u16 misc,
+ 				    perf_event__handler_t process,
+ 				    struct machine *machine);
+ int perf_event__synthesize_extra_attr(struct perf_tool *tool,
+ 				      struct evlist *evsel_list,
+ 				      perf_event__handler_t process,
+ 				      bool is_pipe);
+ int perf_event__synthesize_event_update_cpus(struct perf_tool *tool,
+ 					     struct evsel *evsel,
+ 					     perf_event__handler_t process);
+ int perf_event__synthesize_event_update_name(struct perf_tool *tool,
+ 					     struct evsel *evsel,
+ 					     perf_event__handler_t process);
+ int perf_event__synthesize_event_update_scale(struct perf_tool *tool,
+ 					      struct evsel *evsel,
+ 					      perf_event__handler_t process);
+ int perf_event__synthesize_event_update_unit(struct perf_tool *tool,
+ 					     struct evsel *evsel,
+ 					     perf_event__handler_t process);
+ int perf_event__synthesize_features(struct perf_tool *tool,
+ 				    struct perf_session *session,
+ 				    struct evlist *evlist,
+ 				    perf_event__handler_t process);
+ int perf_event__synthesize_tracing_data(struct perf_tool *tool,
+ 					int fd, struct evlist *evlist,
+ 					perf_event__handler_t process);
++>>>>>>> b251892d6cea (perf stat: Move perf_stat_synthesize_config() to event.h)
  int perf_event__synthesize_thread_map(struct perf_tool *tool,
 -				      struct perf_thread_map *threads,
 +				      struct thread_map *threads,
  				      perf_event__handler_t process,
  				      struct machine *machine, bool mmap_data);
  int perf_event__synthesize_thread_map2(struct perf_tool *tool,
diff --cc tools/perf/util/stat.c
index 9b8d699cb791,2e318d95c528..000000000000
--- a/tools/perf/util/stat.c
+++ b/tools/perf/util/stat.c
@@@ -484,16 -490,16 +484,24 @@@ int create_perf_stat_counter(struct per
  	}
  
  	if (target__has_cpu(target) && !target__has_per_thread(target))
 -		return perf_evsel__open_per_cpu(evsel, evsel__cpus(evsel));
 +		return perf_evsel__open_per_cpu(evsel, perf_evsel__cpus(evsel));
  
 -	return perf_evsel__open_per_thread(evsel, evsel->core.threads);
 +	return perf_evsel__open_per_thread(evsel, evsel->threads);
  }
  
++<<<<<<< HEAD
 +int perf_stat_synthesize_config(struct perf_stat_config *config,
 +				struct perf_tool *tool,
 +				struct perf_evlist *evlist,
 +				perf_event__handler_t process,
 +				bool attrs)
++=======
+ int perf_event__synthesize_stat_events(struct perf_stat_config *config,
+ 				       struct perf_tool *tool,
+ 				       struct evlist *evlist,
+ 				       perf_event__handler_t process,
+ 				       bool attrs)
++>>>>>>> b251892d6cea (perf stat: Move perf_stat_synthesize_config() to event.h)
  {
  	int err;
  
diff --cc tools/perf/util/stat.h
index 7032dd1eeac2,0f9c9f6e2041..000000000000
--- a/tools/perf/util/stat.h
+++ b/tools/perf/util/stat.h
@@@ -5,14 -5,13 +5,22 @@@
  #include <linux/types.h>
  #include <stdio.h>
  #include <sys/types.h>
 +#include <sys/time.h>
  #include <sys/resource.h>
 +#include <sys/wait.h>
 +#include "xyarray.h"
  #include "rblist.h"
++<<<<<<< HEAD
 +#include "perf.h"
 +#include "event.h"
 +
++=======
+ 
+ struct perf_cpu_map;
+ struct perf_stat_config;
+ struct timespec;
+ 
++>>>>>>> b251892d6cea (perf stat: Move perf_stat_synthesize_config() to event.h)
  struct stats {
  	double n, mean, M2;
  	u64 max, min;
@@@ -207,16 -208,11 +215,19 @@@ size_t perf_event__fprintf_stat(union p
  size_t perf_event__fprintf_stat_round(union perf_event *event, FILE *fp);
  size_t perf_event__fprintf_stat_config(union perf_event *event, FILE *fp);
  
 -int create_perf_stat_counter(struct evsel *evsel,
 +int create_perf_stat_counter(struct perf_evsel *evsel,
  			     struct perf_stat_config *config,
  			     struct target *target);
++<<<<<<< HEAD
 +int perf_stat_synthesize_config(struct perf_stat_config *config,
 +				struct perf_tool *tool,
 +				struct perf_evlist *evlist,
 +				perf_event__handler_t process,
 +				bool attrs);
++=======
++>>>>>>> b251892d6cea (perf stat: Move perf_stat_synthesize_config() to event.h)
  void
 -perf_evlist__print_counters(struct evlist *evlist,
 +perf_evlist__print_counters(struct perf_evlist *evlist,
  			    struct perf_stat_config *config,
  			    struct target *_target,
  			    struct timespec *ts,
diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c
index b71c4390d333..f59180a93ae3 100644
--- a/tools/perf/builtin-stat.c
+++ b/tools/perf/builtin-stat.c
@@ -540,8 +540,8 @@ static int __run_perf_stat(int argc, const char **argv, int run_idx)
 		if (err < 0)
 			return err;
 
-		err = perf_stat_synthesize_config(&stat_config, NULL, evsel_list,
-						  process_synthesized_event, is_pipe);
+		err = perf_event__synthesize_stat_events(&stat_config, NULL, evsel_list,
+							 process_synthesized_event, is_pipe);
 		if (err < 0)
 			return err;
 	}
* Unmerged path tools/perf/util/event.h
* Unmerged path tools/perf/util/stat.c
* Unmerged path tools/perf/util/stat.h
