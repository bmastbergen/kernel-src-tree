PCI/AER: Use "aer" variable for capability offset

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 07b2fbb565e2df7ccc41e5c977b19f5f1f9fe013
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/07b2fbb5.failed

Previously we used "pos" or "aer_pos" for the offset of the AER Capability.
Use "aer" consistently and initialize it the same way everywhere.  No
functional change intended.

Link: https://lore.kernel.org/r/20200529230915.GA479883@bjorn-Precision-5520
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
(cherry picked from commit 07b2fbb565e2df7ccc41e5c977b19f5f1f9fe013)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pcie/aer.c
diff --cc drivers/pci/pcie/aer.c
index 4bb737c9a96d,3acf56683915..000000000000
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@@ -346,16 -249,12 +344,20 @@@ void pci_aer_clear_device_status(struc
  	pcie_capability_write_word(dev, PCI_EXP_DEVSTA, sta);
  }
  
 -int pci_aer_clear_nonfatal_status(struct pci_dev *dev)
 +int pci_cleanup_aer_uncorrect_error_status(struct pci_dev *dev)
  {
++<<<<<<< HEAD
 +	int pos;
++=======
+ 	int aer = dev->aer_cap;
++>>>>>>> 07b2fbb565e2 (PCI/AER: Use "aer" variable for capability offset)
  	u32 status, sev;
  
 -	if (!pcie_aer_is_native(dev))
 +	pos = dev->aer_cap;
 +	if (!pos)
 +		return -EIO;
 +
 +	if (pcie_aer_get_firmware_first(dev))
  		return -EIO;
  
  	/* Clear status bits for ERR_NONFATAL errors only */
@@@ -371,14 -270,10 +373,18 @@@ EXPORT_SYMBOL_GPL(pci_cleanup_aer_uncor
  
  void pci_aer_clear_fatal_status(struct pci_dev *dev)
  {
++<<<<<<< HEAD
 +	int pos;
++=======
+ 	int aer = dev->aer_cap;
++>>>>>>> 07b2fbb565e2 (PCI/AER: Use "aer" variable for capability offset)
  	u32 status, sev;
  
 -	if (!pcie_aer_is_native(dev))
 +	pos = dev->aer_cap;
 +	if (!pos)
 +		return;
 +
 +	if (pcie_aer_get_firmware_first(dev))
  		return;
  
  	/* Clear status bits for ERR_FATAL errors only */
* Unmerged path drivers/pci/pcie/aer.c
