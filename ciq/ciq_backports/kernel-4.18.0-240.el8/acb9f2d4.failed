perf evsel: Provide meaningful warning when trying to use 'aux_output' on older kernels

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit acb9f2d4755a70e31343f99791aa43b05401b996
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/acb9f2d4.failed

Just like we do with the 'write_backwards' feature:

Before:

  # perf record -e {intel_pt/branch=0/,cycles/aux-output/ppp} uname
  Error:
  The sys_perf_event_open() syscall returned with 22 (Invalid argument) for event (cycles/aux-output/ppp).
  /bin/dmesg | grep -i perf may provide additional information.

  #

After:

  # perf record -e {intel_pt/branch=0/,cycles/aux-output/ppp} uname
  Error:
  The 'aux_output' feature is not supported, update the kernel.
  #

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Kan Liang <kan.liang@linux.intel.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: https://lkml.kernel.org/n/tip-wgjsjroe1e150c0metgwmqwd@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit acb9f2d4755a70e31343f99791aa43b05401b996)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
diff --cc tools/perf/util/evsel.c
index 90bfc2303a40,0a33f7322ecc..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -1838,7 -1738,8 +1838,12 @@@ int perf_evsel__open(struct perf_evsel 
  	int pid = -1, err;
  	enum { NO_CHANGE, SET_TO_MAX, INCREASED_MAX } set_rlimit = NO_CHANGE;
  
++<<<<<<< HEAD
 +	if (perf_missing_features.write_backward && evsel->attr.write_backward)
++=======
+ 	if ((perf_missing_features.write_backward && evsel->core.attr.write_backward) ||
+ 	    (perf_missing_features.aux_output     && evsel->core.attr.aux_output))
++>>>>>>> acb9f2d4755a (perf evsel: Provide meaningful warning when trying to use 'aux_output' on older kernels)
  		return -EINVAL;
  
  	if (cpus == NULL) {
@@@ -2012,7 -1913,11 +2017,15 @@@ try_fallback
  	 * Must probe features in the order they were added to the
  	 * perf_event_attr interface.
  	 */
++<<<<<<< HEAD
 +	if (!perf_missing_features.bpf_event && evsel->attr.bpf_event) {
++=======
+ 	if (!perf_missing_features.aux_output && evsel->core.attr.aux_output) {
+ 		perf_missing_features.aux_output = true;
+ 		pr_debug2("Kernel has no attr.aux_output support, bailing out\n");
+ 		goto out_close;
+ 	} else if (!perf_missing_features.bpf_event && evsel->core.attr.bpf_event) {
++>>>>>>> acb9f2d4755a (perf evsel: Provide meaningful warning when trying to use 'aux_output' on older kernels)
  		perf_missing_features.bpf_event = true;
  		pr_debug2("switching off bpf_event\n");
  		goto fallback_missing_features;
* Unmerged path tools/perf/util/evsel.c
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h
index 682786474012..0cb58704b929 100644
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@ -190,6 +190,7 @@ struct perf_missing_features {
 	bool group_read;
 	bool ksymbol;
 	bool bpf_event;
+	bool aux_output;
 };
 
 extern struct perf_missing_features perf_missing_features;
