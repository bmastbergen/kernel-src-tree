gpiolib: add support for disabling line bias

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Kent Gibson <warthog618@gmail.com>
commit 2148ad7790ea4f1f0081e6404fbb776bdbc793bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/2148ad77.failed

Allow pull up/down bias to be disabled, allowing the line to float
or to be biased only by external circuitry.
Use case is for where the bias has been applied previously, either
by default or by the user, but that setting may conflict with the
current use of the line.

	Signed-off-by: Kent Gibson <warthog618@gmail.com>
	Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
(cherry picked from commit 2148ad7790ea4f1f0081e6404fbb776bdbc793bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpio/gpiolib.c
#	include/uapi/linux/gpio.h
diff --cc drivers/gpio/gpiolib.c
index 07b822ae02a4,996911660306..000000000000
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@@ -427,8 -422,9 +427,14 @@@ struct linehandle_state 
  	(GPIOHANDLE_REQUEST_INPUT | \
  	GPIOHANDLE_REQUEST_OUTPUT | \
  	GPIOHANDLE_REQUEST_ACTIVE_LOW | \
++<<<<<<< HEAD
 +	GPIOHANDLE_REQUEST_PULL_UP | \
 +	GPIOHANDLE_REQUEST_PULL_DOWN | \
++=======
+ 	GPIOHANDLE_REQUEST_BIAS_PULL_UP | \
+ 	GPIOHANDLE_REQUEST_BIAS_PULL_DOWN | \
+ 	GPIOHANDLE_REQUEST_BIAS_DISABLE | \
++>>>>>>> 2148ad7790ea (gpiolib: add support for disabling line bias)
  	GPIOHANDLE_REQUEST_OPEN_DRAIN | \
  	GPIOHANDLE_REQUEST_OPEN_SOURCE)
  
@@@ -560,6 -556,21 +566,24 @@@ static int linehandle_create(struct gpi
  	     (lflags & GPIOHANDLE_REQUEST_OPEN_SOURCE)))
  		return -EINVAL;
  
++<<<<<<< HEAD
++=======
+ 	/* Bias flags only allowed for input mode. */
+ 	if (!(lflags & GPIOHANDLE_REQUEST_INPUT) &&
+ 	    ((lflags & GPIOHANDLE_REQUEST_BIAS_DISABLE) ||
+ 	     (lflags & GPIOHANDLE_REQUEST_BIAS_PULL_UP) ||
+ 	     (lflags & GPIOHANDLE_REQUEST_BIAS_PULL_DOWN)))
+ 		return -EINVAL;
+ 
+ 	/* Only one bias flag can be set. */
+ 	if (((lflags & GPIOHANDLE_REQUEST_BIAS_DISABLE) &&
+ 	     (lflags & (GPIOHANDLE_REQUEST_BIAS_PULL_DOWN |
+ 			GPIOHANDLE_REQUEST_BIAS_PULL_UP))) ||
+ 	    ((lflags & GPIOHANDLE_REQUEST_BIAS_PULL_DOWN) &&
+ 	     (lflags & GPIOHANDLE_REQUEST_BIAS_PULL_UP)))
+ 		return -EINVAL;
+ 
++>>>>>>> 2148ad7790ea (gpiolib: add support for disabling line bias)
  	lh = kzalloc(sizeof(*lh), GFP_KERNEL);
  	if (!lh)
  		return -ENOMEM;
@@@ -600,9 -611,11 +624,15 @@@
  			set_bit(FLAG_OPEN_DRAIN, &desc->flags);
  		if (lflags & GPIOHANDLE_REQUEST_OPEN_SOURCE)
  			set_bit(FLAG_OPEN_SOURCE, &desc->flags);
++<<<<<<< HEAD
 +		if (lflags & GPIOHANDLE_REQUEST_PULL_DOWN)
++=======
+ 		if (lflags & GPIOHANDLE_REQUEST_BIAS_DISABLE)
+ 			set_bit(FLAG_BIAS_DISABLE, &desc->flags);
+ 		if (lflags & GPIOHANDLE_REQUEST_BIAS_PULL_DOWN)
++>>>>>>> 2148ad7790ea (gpiolib: add support for disabling line bias)
  			set_bit(FLAG_PULL_DOWN, &desc->flags);
 -		if (lflags & GPIOHANDLE_REQUEST_BIAS_PULL_UP)
 +		if (lflags & GPIOHANDLE_REQUEST_PULL_UP)
  			set_bit(FLAG_PULL_UP, &desc->flags);
  
  		ret = gpiod_set_transitory(desc, false);
@@@ -1107,10 -1130,12 +1147,12 @@@ static long gpio_ioctl(struct file *fil
  		if (test_bit(FLAG_OPEN_SOURCE, &desc->flags))
  			lineinfo.flags |= (GPIOLINE_FLAG_OPEN_SOURCE |
  					   GPIOLINE_FLAG_IS_OUT);
+ 		if (test_bit(FLAG_BIAS_DISABLE, &desc->flags))
+ 			lineinfo.flags |= GPIOLINE_FLAG_BIAS_DISABLE;
  		if (test_bit(FLAG_PULL_DOWN, &desc->flags))
 -			lineinfo.flags |= GPIOLINE_FLAG_BIAS_PULL_DOWN;
 +			lineinfo.flags |= GPIOLINE_FLAG_PULL_DOWN;
  		if (test_bit(FLAG_PULL_UP, &desc->flags))
 -			lineinfo.flags |= GPIOLINE_FLAG_BIAS_PULL_UP;
 +			lineinfo.flags |= GPIOLINE_FLAG_PULL_UP;
  
  		if (copy_to_user(ip, &lineinfo, sizeof(lineinfo)))
  			return -EFAULT;
@@@ -2656,19 -3036,14 +2720,18 @@@ int gpiod_direction_input(struct gpio_d
  			   __func__);
  		return -EIO;
  	}
++<<<<<<< HEAD
 +	if (status == 0)
++=======
+ 	if (ret == 0) {
++>>>>>>> 2148ad7790ea (gpiolib: add support for disabling line bias)
  		clear_bit(FLAG_IS_OUT, &desc->flags);
- 
- 	if (test_bit(FLAG_PULL_UP, &desc->flags))
- 		gpio_set_config(chip, gpio_chip_hwgpio(desc),
- 				PIN_CONFIG_BIAS_PULL_UP);
- 	else if (test_bit(FLAG_PULL_DOWN, &desc->flags))
- 		gpio_set_config(chip, gpio_chip_hwgpio(desc),
- 				PIN_CONFIG_BIAS_PULL_DOWN);
+ 		ret = gpio_set_bias(chip, desc);
+ 	}
  
 -	trace_gpio_direction(desc_to_gpio(desc), 1, ret);
 +	trace_gpio_direction(desc_to_gpio(desc), 1, status);
  
 -	return ret;
 +	return status;
  }
  EXPORT_SYMBOL_GPL(gpiod_direction_input);
  
diff --cc include/uapi/linux/gpio.h
index 4f8135d375f5,7cc21c3b0839..000000000000
--- a/include/uapi/linux/gpio.h
+++ b/include/uapi/linux/gpio.h
@@@ -33,8 -33,9 +33,14 @@@ struct gpiochip_info 
  #define GPIOLINE_FLAG_ACTIVE_LOW	(1UL << 2)
  #define GPIOLINE_FLAG_OPEN_DRAIN	(1UL << 3)
  #define GPIOLINE_FLAG_OPEN_SOURCE	(1UL << 4)
++<<<<<<< HEAD
 +#define GPIOLINE_FLAG_PULL_UP	(1UL << 5)
 +#define GPIOLINE_FLAG_PULL_DOWN	(1UL << 6)
++=======
+ #define GPIOLINE_FLAG_BIAS_PULL_UP	(1UL << 5)
+ #define GPIOLINE_FLAG_BIAS_PULL_DOWN	(1UL << 6)
+ #define GPIOLINE_FLAG_BIAS_DISABLE	(1UL << 7)
++>>>>>>> 2148ad7790ea (gpiolib: add support for disabling line bias)
  
  /**
   * struct gpioline_info - Information about a certain GPIO line
@@@ -64,8 -65,9 +70,14 @@@ struct gpioline_info 
  #define GPIOHANDLE_REQUEST_ACTIVE_LOW	(1UL << 2)
  #define GPIOHANDLE_REQUEST_OPEN_DRAIN	(1UL << 3)
  #define GPIOHANDLE_REQUEST_OPEN_SOURCE	(1UL << 4)
++<<<<<<< HEAD
 +#define GPIOHANDLE_REQUEST_PULL_UP	(1UL << 5)
 +#define GPIOHANDLE_REQUEST_PULL_DOWN	(1UL << 6)
++=======
+ #define GPIOHANDLE_REQUEST_BIAS_PULL_UP	(1UL << 5)
+ #define GPIOHANDLE_REQUEST_BIAS_PULL_DOWN	(1UL << 6)
+ #define GPIOHANDLE_REQUEST_BIAS_DISABLE	(1UL << 7)
++>>>>>>> 2148ad7790ea (gpiolib: add support for disabling line bias)
  
  /**
   * struct gpiohandle_request - Information about a GPIO handle request
* Unmerged path drivers/gpio/gpiolib.c
diff --git a/drivers/gpio/gpiolib.h b/drivers/gpio/gpiolib.h
index 7c52c2442173..27e2f70612c1 100644
--- a/drivers/gpio/gpiolib.h
+++ b/drivers/gpio/gpiolib.h
@@ -230,6 +230,7 @@ struct gpio_desc {
 #define FLAG_TRANSITORY 12	/* GPIO may lose value in sleep or reset */
 #define FLAG_PULL_UP    13	/* GPIO has pull up enabled */
 #define FLAG_PULL_DOWN  14	/* GPIO has pull down enabled */
+#define FLAG_BIAS_DISABLE    15	/* GPIO has pull disabled */
 
 	/* Connection label */
 	const char		*label;
* Unmerged path include/uapi/linux/gpio.h
