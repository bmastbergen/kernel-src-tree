ionic: use mutex to protect queue operations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Shannon Nelson <snelson@pensando.io>
commit 0925e9db4dc86daf666d9a3d53c7db14ac6d5d00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0925e9db.failed

The ionic_wait_on_bit_lock() was a open-coded mutex knock-off
used only for protecting the queue reset operations, and there
was no reason not to use the real thing.  We can use the lock
more correctly and to better protect the queue stop and start
operations from cross threading.  We can also remove a useless
and expensive bit operation from the Rx path.

This fixes a case found where the link_status_check from a link
flap could run into an MTU change and cause a crash.

Fixes: beead698b173 ("ionic: Add the basic NDO callbacks for netdev support")
	Signed-off-by: Shannon Nelson <snelson@pensando.io>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0925e9db4dc86daf666d9a3d53c7db14ac6d5d00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/pensando/ionic/ionic_lif.c
#	drivers/net/ethernet/pensando/ionic/ionic_lif.h
#	drivers/net/ethernet/pensando/ionic/ionic_txrx.c
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_lif.c
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_lif.h
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_lif.c
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_lif.h
* Unmerged path drivers/net/ethernet/pensando/ionic/ionic_txrx.c
