net/mlx5e: Fix missing reset of SW metadata in Striding RQ reset

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Aya Levin <ayal@mellanox.com>
commit 39369fd536d485a99a59d8e357c0d4d3ce19a3b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/39369fd5.failed

When resetting the RQ (moving RQ state from RST to RDY), the driver
resets the WQ's SW metadata.
In striding RQ mode, we maintain a field that reflects the actual
expected WQ head (including in progress WQEs posted to the ICOSQ).
It was mistakenly not reset together with the WQ. Fix this here.

Fixes: 8276ea1353a4 ("net/mlx5e: Report and recover from CQE with error on RQ")
	Signed-off-by: Aya Levin <ayal@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 39369fd536d485a99a59d8e357c0d4d3ce19a3b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
index 7c8796d9743f,f07b1399744e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
@@@ -179,6 -179,16 +179,19 @@@ mlx5e_tx_dma_unmap(struct device *pdev
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static inline void mlx5e_rqwq_reset(struct mlx5e_rq *rq)
+ {
+ 	if (rq->wq_type == MLX5_WQ_TYPE_LINKED_LIST_STRIDING_RQ) {
+ 		mlx5_wq_ll_reset(&rq->mpwqe.wq);
+ 		rq->mpwqe.actual_wq_head = 0;
+ 	} else {
+ 		mlx5_wq_cyc_reset(&rq->wqe.wq);
+ 	}
+ }
+ 
++>>>>>>> 39369fd536d4 (net/mlx5e: Fix missing reset of SW metadata in Striding RQ reset)
  /* SW parser related functions */
  
  struct mlx5e_swp_spec {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/txrx.h
