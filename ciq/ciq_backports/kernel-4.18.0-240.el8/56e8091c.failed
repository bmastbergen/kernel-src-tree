net/smc: move the TEST_LINK response processing into event handler

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Karsten Graul <kgraul@linux.ibm.com>
commit 56e8091c7a098ef2257f85f16665d79cf3049da9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/56e8091c.failed

Get rid of the extra function and move the two-liner for the TEST_LINK
response processing into the event handler function.

	Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
	Reviewed-by: Ursula Braun <ubraun@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 56e8091c7a098ef2257f85f16665d79cf3049da9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/smc/smc_llc.c
diff --cc net/smc/smc_llc.c
index 4119cdb6b6bf,4945abbad111..000000000000
--- a/net/smc/smc_llc.c
+++ b/net/smc/smc_llc.c
@@@ -461,36 -550,19 +461,39 @@@ static void smc_llc_rx_delete_link(stru
  {
  	struct smc_link_group *lgr = smc_get_lgr(link);
  
 -	smc_lgr_forget(lgr);
 -	smc_llc_link_deleting(link);
 -	if (lgr->role == SMC_SERV) {
 -		/* client asks to delete this link, send request */
 -		smc_llc_prep_delete_link(llc, link, SMC_LLC_REQ, true);
 +	if (llc->hd.flags & SMC_LLC_FLAG_RESP) {
 +		if (lgr->role == SMC_SERV)
 +			smc_lgr_schedule_free_work_fast(lgr);
  	} else {
 -		/* server requests to delete this link, send response */
 -		smc_llc_prep_delete_link(llc, link, SMC_LLC_RESP, true);
 +		smc_lgr_forget(lgr);
 +		smc_llc_link_deleting(link);
 +		if (lgr->role == SMC_SERV) {
 +			/* client asks to delete this link, send request */
 +			smc_llc_prep_delete_link(llc, link, SMC_LLC_REQ, true);
 +		} else {
 +			/* server requests to delete this link, send response */
 +			smc_llc_prep_delete_link(llc, link, SMC_LLC_RESP, true);
 +		}
 +		smc_llc_send_message(link, llc, sizeof(*llc));
 +		smc_lgr_terminate_sched(lgr);
  	}
 -	smc_llc_send_message(link, llc);
 -	smc_lgr_terminate_sched(lgr);
  }
  
++<<<<<<< HEAD
 +static void smc_llc_rx_test_link(struct smc_link *link,
 +				 struct smc_llc_msg_test_link *llc)
 +{
 +	if (llc->hd.flags & SMC_LLC_FLAG_RESP) {
 +		if (link->state == SMC_LNK_ACTIVE)
 +			complete(&link->llc_testlink_resp);
 +	} else {
 +		llc->hd.flags |= SMC_LLC_FLAG_RESP;
 +		smc_llc_send_message(link, llc, sizeof(*llc));
 +	}
 +}
 +
++=======
++>>>>>>> 56e8091c7a09 (net/smc: move the TEST_LINK response processing into event handler)
  static void smc_llc_rx_confirm_rkey(struct smc_link *link,
  				    struct smc_llc_msg_confirm_rkey *llc)
  {
@@@ -567,13 -633,34 +570,14 @@@ static void smc_llc_rx_handler(struct i
  
  	switch (llc->raw.hdr.common.type) {
  	case SMC_LLC_TEST_LINK:
- 		smc_llc_rx_test_link(link, &llc->test_link);
+ 		llc->test_link.hd.flags |= SMC_LLC_FLAG_RESP;
+ 		smc_llc_send_message(link, llc);
  		break;
 -	case SMC_LLC_ADD_LINK:
 -		if (list_empty(&lgr->list))
 -			goto out;	/* lgr is terminating */
 -		if (lgr->role == SMC_CLNT) {
 -			if (lgr->llc_flow_lcl.type == SMC_LLC_FLOW_ADD_LINK) {
 -				/* a flow is waiting for this message */
 -				smc_llc_flow_qentry_set(&lgr->llc_flow_lcl,
 -							qentry);
 -				wake_up_interruptible(&lgr->llc_waiter);
 -			} else if (smc_llc_flow_start(&lgr->llc_flow_lcl,
 -						      qentry)) {
 -				/* tbd: schedule_work(&lgr->llc_add_link_work); */
 -			}
 -		} else if (smc_llc_flow_start(&lgr->llc_flow_lcl, qentry)) {
 -			/* as smc server, handle client suggestion */
 -			/* tbd: schedule_work(&lgr->llc_add_link_work); */
 -		}
 -		return;
  	case SMC_LLC_CONFIRM_LINK:
 -		if (lgr->llc_flow_lcl.type != SMC_LLC_FLOW_NONE) {
 -			/* a flow is waiting for this message */
 -			smc_llc_flow_qentry_set(&lgr->llc_flow_lcl, qentry);
 -			wake_up_interruptible(&lgr->llc_waiter);
 -			return;
 -		}
 +		smc_llc_rx_confirm_link(link, &llc->confirm_link);
 +		break;
 +	case SMC_LLC_ADD_LINK:
 +		smc_llc_rx_add_link(link, &llc->add_link);
  		break;
  	case SMC_LLC_DELETE_LINK:
  		smc_llc_rx_delete_link(link, &llc->delete_link);
* Unmerged path net/smc/smc_llc.c
