perf evlist: Fix fix for freed id arrays

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Andi Kleen <ak@linux.intel.com>
commit 5a40e1994815ab09c59614c6a13d94eef55d1a7f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/5a40e199.failed

In the earlier fix for the memory overrun of id arrays I managed to typo
the wrong event in the fix.

Of course we need to close the current event in the loop, not the
original failing event.

The same test case as in the original patch still passes.

Fixes: 7834fa948beb ("perf evlist: Fix access of freed id arrays")
	Signed-off-by: Andi Kleen <ak@linux.intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
Link: http://lore.kernel.org/lkml/20191011182140.8353-2-andi@firstfloor.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 5a40e1994815ab09c59614c6a13d94eef55d1a7f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,8793b4e322b0..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -1826,9 -1599,9 +1826,13 @@@ struct perf_evsel *perf_evlist__reset_w
  			is_open = false;
  		if (c2->leader == leader) {
  			if (is_open)
++<<<<<<< HEAD
 +				perf_evsel__close(c2);
++=======
+ 				perf_evsel__close(&c2->core);
++>>>>>>> 5a40e1994815 (perf evlist: Fix fix for freed id arrays)
  			c2->leader = c2;
 -			c2->core.nr_members = 0;
 +			c2->nr_members = 0;
  		}
  	}
  	return leader;
* Unmerged path tools/perf/util/evlist.c
