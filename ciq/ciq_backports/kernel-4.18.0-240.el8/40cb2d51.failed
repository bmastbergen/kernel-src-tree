libperf: Move 'pollfd' from 'struct evlist' to 'struct perf_evlist'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Jiri Olsa <jolsa@kernel.org>
commit 40cb2d5141bdd52b3c00bb78799118c4606947ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/40cb2d51.failed

Moving 'pollfd' from 'struct evlist' to 'struct perf_evlist' it will be
used in following patches.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Michael Petlan <mpetlan@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lore.kernel.org/lkml/20190913132355.21634-23-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 40cb2d5141bdd52b3c00bb78799118c4606947ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/lib/include/internal/evlist.h
#	tools/perf/util/evlist.c
#	tools/perf/util/evlist.h
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,13595e8e6b4b..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -52,9 -59,9 +52,15 @@@ void perf_evlist__init(struct perf_evli
  
  	for (i = 0; i < PERF_EVLIST__HLIST_SIZE; ++i)
  		INIT_HLIST_HEAD(&evlist->heads[i]);
++<<<<<<< HEAD
 +	INIT_LIST_HEAD(&evlist->entries);
 +	perf_evlist__set_maps(evlist, cpus, threads);
 +	fdarray__init(&evlist->pollfd, 64);
++=======
+ 	perf_evlist__init(&evlist->core);
+ 	perf_evlist__set_maps(&evlist->core, cpus, threads);
+ 	fdarray__init(&evlist->core.pollfd, 64);
++>>>>>>> 40cb2d5141bd (libperf: Move 'pollfd' from 'struct evlist' to 'struct perf_evlist')
  	evlist->workload.pid = -1;
  	evlist->bkw_mmap_state = BKW_MMAP_NOTREADY;
  }
@@@ -135,10 -142,10 +141,10 @@@ void perf_evlist__exit(struct perf_evli
  {
  	zfree(&evlist->mmap);
  	zfree(&evlist->overwrite_mmap);
- 	fdarray__exit(&evlist->pollfd);
+ 	fdarray__exit(&evlist->core.pollfd);
  }
  
 -void evlist__delete(struct evlist *evlist)
 +void perf_evlist__delete(struct perf_evlist *evlist)
  {
  	if (evlist == NULL)
  		return;
@@@ -445,10 -423,10 +451,10 @@@ int perf_evlist__alloc_pollfd(struct pe
  	return 0;
  }
  
 -static int __perf_evlist__add_pollfd(struct evlist *evlist, int fd,
 -				     struct mmap *map, short revent)
 +static int __perf_evlist__add_pollfd(struct perf_evlist *evlist, int fd,
 +				     struct perf_mmap *map, short revent)
  {
- 	int pos = fdarray__add(&evlist->pollfd, fd, revent | POLLERR | POLLHUP);
+ 	int pos = fdarray__add(&evlist->core.pollfd, fd, revent | POLLERR | POLLHUP);
  	/*
  	 * Save the idx so that when we filter out fds POLLHUP'ed we can
  	 * close the associated evlist->mmap[] entry.
@@@ -476,19 -454,19 +482,19 @@@ static void perf_evlist__munmap_filtere
  		perf_mmap__put(map);
  }
  
 -int perf_evlist__filter_pollfd(struct evlist *evlist, short revents_and_mask)
 +int perf_evlist__filter_pollfd(struct perf_evlist *evlist, short revents_and_mask)
  {
- 	return fdarray__filter(&evlist->pollfd, revents_and_mask,
+ 	return fdarray__filter(&evlist->core.pollfd, revents_and_mask,
  			       perf_evlist__munmap_filtered, NULL);
  }
  
 -int perf_evlist__poll(struct evlist *evlist, int timeout)
 +int perf_evlist__poll(struct perf_evlist *evlist, int timeout)
  {
- 	return fdarray__poll(&evlist->pollfd, timeout);
+ 	return fdarray__poll(&evlist->core.pollfd, timeout);
  }
  
 -static void perf_evlist__id_hash(struct evlist *evlist,
 -				 struct evsel *evsel,
 +static void perf_evlist__id_hash(struct perf_evlist *evlist,
 +				 struct perf_evsel *evsel,
  				 int cpu, int thread, u64 id)
  {
  	int hash;
@@@ -1031,14 -1009,14 +1037,14 @@@ int perf_evlist__mmap_ex(struct perf_ev
  	if (!evlist->mmap)
  		return -ENOMEM;
  
- 	if (evlist->pollfd.entries == NULL && perf_evlist__alloc_pollfd(evlist) < 0)
+ 	if (evlist->core.pollfd.entries == NULL && perf_evlist__alloc_pollfd(evlist) < 0)
  		return -ENOMEM;
  
 -	evlist->core.mmap_len = evlist__mmap_size(pages);
 -	pr_debug("mmap size %zuB\n", evlist->core.mmap_len);
 -	mp.mask = evlist->core.mmap_len - page_size - 1;
 +	evlist->mmap_len = perf_evlist__mmap_size(pages);
 +	pr_debug("mmap size %zuB\n", evlist->mmap_len);
 +	mp.mask = evlist->mmap_len - page_size - 1;
  
 -	auxtrace_mmap_params__init(&mp.auxtrace_mp, evlist->core.mmap_len,
 +	auxtrace_mmap_params__init(&mp.auxtrace_mp, evlist->mmap_len,
  				   auxtrace_pages, auxtrace_overwrite);
  
  	evlist__for_each_entry(evlist, evsel) {
diff --cc tools/perf/util/evlist.h
index 49354fe24d5f,4fcdf93eb19c..000000000000
--- a/tools/perf/util/evlist.h
+++ b/tools/perf/util/evlist.h
@@@ -41,15 -64,12 +41,21 @@@ struct perf_evlist 
  		int	cork_fd;
  		pid_t	pid;
  	} workload;
++<<<<<<< HEAD
 +	struct fdarray	 pollfd;
 +	struct perf_mmap *mmap;
 +	struct perf_mmap *overwrite_mmap;
 +	struct thread_map *threads;
 +	struct cpu_map	  *cpus;
 +	struct perf_evsel *selected;
++=======
+ 	struct mmap *mmap;
+ 	struct mmap *overwrite_mmap;
+ 	struct evsel *selected;
++>>>>>>> 40cb2d5141bd (libperf: Move 'pollfd' from 'struct evlist' to 'struct perf_evlist')
  	struct events_stats stats;
  	struct perf_env	*env;
 -	void (*trace_event_sample_raw)(struct evlist *evlist,
 +	void (*trace_event_sample_raw)(struct perf_evlist *evlist,
  				       union perf_event *event,
  				       struct perf_sample *sample);
  	u64		first_sample_time;
* Unmerged path tools/perf/lib/include/internal/evlist.h
diff --git a/tools/perf/builtin-kvm.c b/tools/perf/builtin-kvm.c
index d30bd54b42ac..0821540f8075 100644
--- a/tools/perf/builtin-kvm.c
+++ b/tools/perf/builtin-kvm.c
@@ -976,7 +976,7 @@ static int kvm_events_live_report(struct perf_kvm_stat *kvm)
 	perf_evlist__enable(kvm->evlist);
 
 	while (!done) {
-		struct fdarray *fda = &kvm->evlist->pollfd;
+		struct fdarray *fda = &kvm->evlist->core.pollfd;
 		int rc;
 
 		rc = perf_kvm__mmap_read(kvm);
* Unmerged path tools/perf/lib/include/internal/evlist.h
* Unmerged path tools/perf/util/evlist.c
* Unmerged path tools/perf/util/evlist.h
diff --git a/tools/perf/util/python.c b/tools/perf/util/python.c
index 9c3b43665909..6779c25a315f 100644
--- a/tools/perf/util/python.c
+++ b/tools/perf/util/python.c
@@ -930,17 +930,17 @@ static PyObject *pyrf_evlist__get_pollfd(struct pyrf_evlist *pevlist,
         PyObject *list = PyList_New(0);
 	int i;
 
-	for (i = 0; i < evlist->pollfd.nr; ++i) {
+	for (i = 0; i < evlist->core.pollfd.nr; ++i) {
 		PyObject *file;
 #if PY_MAJOR_VERSION < 3
-		FILE *fp = fdopen(evlist->pollfd.entries[i].fd, "r");
+		FILE *fp = fdopen(evlist->core.pollfd.entries[i].fd, "r");
 
 		if (fp == NULL)
 			goto free_list;
 
 		file = PyFile_FromFile(fp, "perf", "r", NULL);
 #else
-		file = PyFile_FromFd(evlist->pollfd.entries[i].fd, "perf", "r", -1,
+		file = PyFile_FromFd(evlist->core.pollfd.entries[i].fd, "perf", "r", -1,
 				     NULL, NULL, NULL, 0);
 #endif
 		if (file == NULL)
