perf string: Export asprintf__tp_filter_pids()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit da949f507a73df5b5ad5031cb23b82a4d81846eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/da949f50.failed

Will be used directly in 'perf trace' for setting up the command line
argv array to pass to cmd_record, as this was how 'perf trace record'
was implemented, following the model used in 'perf kvm record', 'perf
sched record', etc.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Luis Cláudio Gonçalves <lclaudio@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: https://lkml.kernel.org/n/tip-w3cuwjs63lxf5zpryy3145uv@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit da949f507a73df5b5ad5031cb23b82a4d81846eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evlist.c
diff --cc tools/perf/util/evlist.c
index 29a998d183ce,0f9cd703e725..000000000000
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@@ -17,8 -17,11 +17,9 @@@
  #include "evsel.h"
  #include "debug.h"
  #include "units.h"
 -#include <internal/lib.h> // page_size
 -#include "../perf.h"
  #include "asm/bug.h"
  #include "bpf-event.h"
+ #include "util/string2.h"
  #include <signal.h>
  #include <unistd.h>
  #include <sched.h>
@@@ -1189,10 -940,29 +1190,34 @@@ int perf_evlist__set_tp_filter(struct p
  	return err;
  }
  
++<<<<<<< HEAD
 +int perf_evlist__set_tp_filter_pids(struct perf_evlist *evlist, size_t npids, pid_t *pids)
++=======
+ int perf_evlist__append_tp_filter(struct evlist *evlist, const char *filter)
+ {
+ 	struct evsel *evsel;
+ 	int err = 0;
+ 
+ 	if (filter == NULL)
+ 		return -1;
+ 
+ 	evlist__for_each_entry(evlist, evsel) {
+ 		if (evsel->core.attr.type != PERF_TYPE_TRACEPOINT)
+ 			continue;
+ 
+ 		err = perf_evsel__append_tp_filter(evsel, filter);
+ 		if (err)
+ 			break;
+ 	}
+ 
+ 	return err;
+ }
+ 
+ char *asprintf__tp_filter_pids(size_t npids, pid_t *pids)
++>>>>>>> da949f507a73 (perf string: Export asprintf__tp_filter_pids())
  {
  	char *filter;
 +	int ret = -1;
  	size_t i;
  
  	for (i = 0; i < npids; ++i) {
* Unmerged path tools/perf/util/evlist.c
diff --git a/tools/perf/util/string2.h b/tools/perf/util/string2.h
index 708805f5573e..73df616ced43 100644
--- a/tools/perf/util/string2.h
+++ b/tools/perf/util/string2.h
@@ -4,6 +4,7 @@
 
 #include <linux/string.h>
 #include <linux/types.h>
+#include <sys/types.h> // pid_t
 #include <stddef.h>
 #include <string.h>
 
@@ -32,6 +33,8 @@ static inline char *asprintf_expr_not_in_ints(const char *var, size_t nints, int
 	return asprintf_expr_inout_ints(var, false, nints, ints);
 }
 
+char *asprintf__tp_filter_pids(size_t npids, pid_t *pids);
+
 char *strpbrk_esc(char *str, const char *stopset);
 char *strdup_esc(const char *str);
 
