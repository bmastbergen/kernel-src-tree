drm/i915: Remove dma_buf_kmap selftest

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 64147c092e4f1ce8f72b0586078f251e4f9d84ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/64147c09.failed

It's the only user left in the entire kernel for dma_buf_kmap/_kunmap.
Delete it, before we start garbage-collecting the various
implementations.

	Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
	Acked-by: Sumit Semwal <sumit.semwal@linaro.org>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Cc: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Matthew Auld <matthew.auld@intel.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
	Cc: Dave Airlie <airlied@gmail.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20191118103536.17675-4-daniel.vetter@ffwll.ch
(cherry picked from commit 64147c092e4f1ce8f72b0586078f251e4f9d84ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gem/selftests/i915_gem_dmabuf.c
diff --cc drivers/gpu/drm/i915/gem/selftests/i915_gem_dmabuf.c
index e3a64edef918,2a52b92586b9..000000000000
--- a/drivers/gpu/drm/i915/gem/selftests/i915_gem_dmabuf.c
+++ b/drivers/gpu/drm/i915/gem/selftests/i915_gem_dmabuf.c
@@@ -254,106 -254,6 +254,109 @@@ err_obj
  	return err;
  }
  
++<<<<<<< HEAD
 +static int igt_dmabuf_export_kmap(void *arg)
 +{
 +	struct drm_i915_private *i915 = arg;
 +	struct drm_i915_gem_object *obj;
 +	struct dma_buf *dmabuf;
 +	void *ptr;
 +	int err;
 +
 +	obj = i915_gem_object_create_shmem(i915, 2 * PAGE_SIZE);
 +	if (IS_ERR(obj))
 +		return PTR_ERR(obj);
 +
 +	dmabuf = i915_gem_prime_export(&i915->drm, &obj->base, 0);
 +	i915_gem_object_put(obj);
 +	if (IS_ERR(dmabuf)) {
 +		err = PTR_ERR(dmabuf);
 +		pr_err("i915_gem_prime_export failed with err=%d\n", err);
 +		return err;
 +	}
 +
 +	ptr = dma_buf_kmap(dmabuf, 0);
 +	if (!ptr) {
 +		pr_err("dma_buf_kmap failed\n");
 +		err = -ENOMEM;
 +		goto err;
 +	}
 +
 +	if (memchr_inv(ptr, 0, PAGE_SIZE)) {
 +		dma_buf_kunmap(dmabuf, 0, ptr);
 +		pr_err("Exported page[0] not initialiased to zero!\n");
 +		err = -EINVAL;
 +		goto err;
 +	}
 +
 +	memset(ptr, 0xc5, PAGE_SIZE);
 +	dma_buf_kunmap(dmabuf, 0, ptr);
 +
 +	ptr = i915_gem_object_pin_map(obj, I915_MAP_WB);
 +	if (IS_ERR(ptr)) {
 +		err = PTR_ERR(ptr);
 +		pr_err("i915_gem_object_pin_map failed with err=%d\n", err);
 +		goto err;
 +	}
 +	memset(ptr + PAGE_SIZE, 0xaa, PAGE_SIZE);
 +	i915_gem_object_flush_map(obj);
 +	i915_gem_object_unpin_map(obj);
 +
 +	ptr = dma_buf_kmap(dmabuf, 1);
 +	if (!ptr) {
 +		pr_err("dma_buf_kmap failed\n");
 +		err = -ENOMEM;
 +		goto err;
 +	}
 +
 +	if (memchr_inv(ptr, 0xaa, PAGE_SIZE)) {
 +		dma_buf_kunmap(dmabuf, 1, ptr);
 +		pr_err("Exported page[1] not set to 0xaa!\n");
 +		err = -EINVAL;
 +		goto err;
 +	}
 +
 +	memset(ptr, 0xc5, PAGE_SIZE);
 +	dma_buf_kunmap(dmabuf, 1, ptr);
 +
 +	ptr = dma_buf_kmap(dmabuf, 0);
 +	if (!ptr) {
 +		pr_err("dma_buf_kmap failed\n");
 +		err = -ENOMEM;
 +		goto err;
 +	}
 +	if (memchr_inv(ptr, 0xc5, PAGE_SIZE)) {
 +		dma_buf_kunmap(dmabuf, 0, ptr);
 +		pr_err("Exported page[0] did not retain 0xc5!\n");
 +		err = -EINVAL;
 +		goto err;
 +	}
 +	dma_buf_kunmap(dmabuf, 0, ptr);
 +
 +	ptr = dma_buf_kmap(dmabuf, 2);
 +	if (ptr) {
 +		pr_err("Erroneously kmapped beyond the end of the object!\n");
 +		dma_buf_kunmap(dmabuf, 2, ptr);
 +		err = -EINVAL;
 +		goto err;
 +	}
 +
 +	ptr = dma_buf_kmap(dmabuf, -1);
 +	if (ptr) {
 +		pr_err("Erroneously kmapped before the start of the object!\n");
 +		dma_buf_kunmap(dmabuf, -1, ptr);
 +		err = -EINVAL;
 +		goto err;
 +	}
 +
 +	err = 0;
 +err:
 +	dma_buf_put(dmabuf);
 +	return err;
 +}
 +
++=======
++>>>>>>> 64147c092e4f (drm/i915: Remove dma_buf_kmap selftest)
  int i915_gem_dmabuf_mock_selftests(void)
  {
  	static const struct i915_subtest tests[] = {
* Unmerged path drivers/gpu/drm/i915/gem/selftests/i915_gem_dmabuf.c
