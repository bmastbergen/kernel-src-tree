mm/migrate.c: initialize pud_entry in migrate_vma()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Ralph Campbell <rcampbell@nvidia.com>
commit 7b358c6f12dc82364f6d317f8c8f1d794adbc3f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/7b358c6f.failed

When CONFIG_MIGRATE_VMA_HELPER is enabled, migrate_vma() calls
migrate_vma_collect() which initializes a struct mm_walk but didn't
initialize mm_walk.pud_entry.  (Found by code inspection) Use a C
structure initialization to make sure it is set to NULL.

Link: http://lkml.kernel.org/r/20190719233225.12243-1-rcampbell@nvidia.com
Fixes: 8763cb45ab967 ("mm/migrate: new memory migration helper for use with device memory")
	Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
	Reviewed-by: John Hubbard <jhubbard@nvidia.com>
	Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: "Jérôme Glisse" <jglisse@redhat.com>
	Cc: Mel Gorman <mgorman@techsingularity.net>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7b358c6f12dc82364f6d317f8c8f1d794adbc3f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/migrate.c
diff --cc mm/migrate.c
index 2db77bdb3355,a42858d8e00b..000000000000
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@@ -2327,24 -2339,21 +2327,35 @@@ next
   */
  static void migrate_vma_collect(struct migrate_vma *migrate)
  {
++<<<<<<< HEAD
 +	struct mm_walk mm_walk;
 +
 +	mm_walk.pmd_entry = migrate_vma_collect_pmd;
 +	mm_walk.pte_entry = NULL;
 +	mm_walk.pte_hole = migrate_vma_collect_hole;
 +	mm_walk.hugetlb_entry = NULL;
 +	mm_walk.test_walk = NULL;
 +	mm_walk.vma = migrate->vma;
 +	mm_walk.mm = migrate->vma->vm_mm;
 +	mm_walk.private = migrate;
++=======
+ 	struct mmu_notifier_range range;
+ 	struct mm_walk mm_walk = {
+ 		.pmd_entry = migrate_vma_collect_pmd,
+ 		.pte_hole = migrate_vma_collect_hole,
+ 		.vma = migrate->vma,
+ 		.mm = migrate->vma->vm_mm,
+ 		.private = migrate,
+ 	};
++>>>>>>> 7b358c6f12dc (mm/migrate.c: initialize pud_entry in migrate_vma())
  
 -	mmu_notifier_range_init(&range, MMU_NOTIFY_CLEAR, 0, NULL, mm_walk.mm,
 -				migrate->start,
 -				migrate->end);
 -	mmu_notifier_invalidate_range_start(&range);
 +	mmu_notifier_invalidate_range_start(mm_walk.mm,
 +					    migrate->start,
 +					    migrate->end);
  	walk_page_range(migrate->start, migrate->end, &mm_walk);
 -	mmu_notifier_invalidate_range_end(&range);
 +	mmu_notifier_invalidate_range_end(mm_walk.mm,
 +					  migrate->start,
 +					  migrate->end);
  
  	migrate->end = migrate->start + (migrate->npages << PAGE_SHIFT);
  }
* Unmerged path mm/migrate.c
