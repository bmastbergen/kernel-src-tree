drm/omapdrm: Drop dma_buf->k(un)map

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-240.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 0d1da1fe305b9b9229786c598e7dfd8942e7c92b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-240.el8/0d1da1fe.failed

No in-tree users left.

Note that this is one of the few (if only) implementations of dma-buf
that provided a kmap, but not a vmap implemenation. Given that the
only real user (in-tree at least) of kmap was tegra, and it's
impossible to buy a chip with tegra host1x and ompadrm on the same
SoC, there's no problem here.

	Acked-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
	Acked-by: Sumit Semwal <sumit.semwal@linaro.org>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20191118103536.17675-8-daniel.vetter@ffwll.ch
(cherry picked from commit 0d1da1fe305b9b9229786c598e7dfd8942e7c92b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
diff --cc drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
index 1a073f9b2834,b319fe7f2371..000000000000
--- a/drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
+++ b/drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
@@@ -93,42 -85,6 +93,45 @@@ static int omap_gem_dmabuf_end_cpu_acce
  	return 0;
  }
  
++<<<<<<< HEAD
 +
 +static void *omap_gem_dmabuf_kmap_atomic(struct dma_buf *buffer,
 +		unsigned long page_num)
 +{
 +	struct drm_gem_object *obj = buffer->priv;
 +	struct page **pages;
 +	omap_gem_get_pages(obj, &pages, false);
 +	omap_gem_cpu_sync_page(obj, page_num);
 +	return kmap_atomic(pages[page_num]);
 +}
 +
 +static void omap_gem_dmabuf_kunmap_atomic(struct dma_buf *buffer,
 +		unsigned long page_num, void *addr)
 +{
 +	kunmap_atomic(addr);
 +}
 +
 +static void *omap_gem_dmabuf_kmap(struct dma_buf *buffer,
 +		unsigned long page_num)
 +{
 +	struct drm_gem_object *obj = buffer->priv;
 +	struct page **pages;
 +	omap_gem_get_pages(obj, &pages, false);
 +	omap_gem_cpu_sync_page(obj, page_num);
 +	return kmap(pages[page_num]);
 +}
 +
 +static void omap_gem_dmabuf_kunmap(struct dma_buf *buffer,
 +		unsigned long page_num, void *addr)
 +{
 +	struct drm_gem_object *obj = buffer->priv;
 +	struct page **pages;
 +	omap_gem_get_pages(obj, &pages, false);
 +	kunmap(pages[page_num]);
 +}
 +
++=======
++>>>>>>> 0d1da1fe305b (drm/omapdrm: Drop dma_buf->k(un)map)
  static int omap_gem_dmabuf_mmap(struct dma_buf *buffer,
  		struct vm_area_struct *vma)
  {
* Unmerged path drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
