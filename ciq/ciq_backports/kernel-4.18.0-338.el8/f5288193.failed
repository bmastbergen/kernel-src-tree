bpf: Move sanitize_val_alu out of op switch

jira LE-1907
cve CVE-2021-29155
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit f528819334881fd622fdadeddb3f7edaed8b7c9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/f5288193.failed

Add a small sanitize_needed() helper function and move sanitize_val_alu()
out of the main opcode switch. In upcoming work, we'll move sanitize_ptr_alu()
as well out of its opcode switch so this helps to streamline both.

	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Reviewed-by: John Fastabend <john.fastabend@gmail.com>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit f528819334881fd622fdadeddb3f7edaed8b7c9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
diff --cc kernel/bpf/verifier.c
index 4bfae8a52d70,e41b6326e3e6..000000000000
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@@ -6858,21 -6995,11 +6869,27 @@@ static int adjust_scalar_min_max_vals(s
  	 */
  	switch (opcode) {
  	case BPF_ADD:
++<<<<<<< HEAD
 +		ret = sanitize_val_alu(env, insn);
 +		if (ret < 0) {
 +			verbose(env, "R%d tried to add from different pointers or scalars\n", dst);
 +			return ret;
 +		}
++=======
++>>>>>>> f52881933488 (bpf: Move sanitize_val_alu out of op switch)
  		scalar32_min_max_add(dst_reg, &src_reg);
  		scalar_min_max_add(dst_reg, &src_reg);
  		dst_reg->var_off = tnum_add(dst_reg->var_off, src_reg.var_off);
  		break;
  	case BPF_SUB:
++<<<<<<< HEAD
 +		ret = sanitize_val_alu(env, insn);
 +		if (ret < 0) {
 +			verbose(env, "R%d tried to sub from different pointers or scalars\n", dst);
 +			return ret;
 +		}
++=======
++>>>>>>> f52881933488 (bpf: Move sanitize_val_alu out of op switch)
  		scalar32_min_max_sub(dst_reg, &src_reg);
  		scalar_min_max_sub(dst_reg, &src_reg);
  		dst_reg->var_off = tnum_sub(dst_reg->var_off, src_reg.var_off);
* Unmerged path kernel/bpf/verifier.c
