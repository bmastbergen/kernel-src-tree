s390/ap: Fix hanging ioctl caused by wrong msg counter

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Harald Freudenberger <freude@linux.ibm.com>
commit e73a99f3287a740a07d6618e9470f4d6cb217da8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/e73a99f3.failed

When a AP queue is switched to soft offline, all pending
requests are purged out of the pending requests list and
'received' by the upper layer like zcrypt device drivers.
This is also done for requests which are already enqueued
into the firmware queue. A request in a firmware queue
may eventually produce an response message, but there is
no waiting process any more. However, the response was
counted with the queue_counter and as this counter was
reset to 0 with the offline switch, the pending response
caused the queue_counter to get negative. The next request
increased this counter to 0 (instead of 1) which caused
the ap code to assume there is nothing to receive and so
the response for this valid request was never tried to
fetch from the firmware queue.

This all caused a queue to not work properly after a
switch offline/online and in the end processes to hang
forever when trying to send a crypto request after an
queue offline/online switch cicle.

Fixed by a) making sure the counter does not drop below 0
and b) on a successful enqueue of a message has at least
a value of 1.

Additionally a warning is emitted, when a reply can't get
assigned to a waiting process. This may be normal operation
(process had timeout or has been killed) but may give a
hint that something unexpected happened (like this odd
behavior described above).

	Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit e73a99f3287a740a07d6618e9470f4d6cb217da8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/ap_queue.c
diff --cc drivers/s390/crypto/ap_queue.c
index 4f728a6e0606,337353c9655e..000000000000
--- a/drivers/s390/crypto/ap_queue.c
+++ b/drivers/s390/crypto/ap_queue.c
@@@ -150,9 -151,15 +151,19 @@@ static struct ap_queue_status ap_sm_rec
  			list_del_init(&ap_msg->list);
  			aq->pendingq_count--;
  			ap_msg->receive(aq, ap_msg, aq->reply);
+ 			found = true;
  			break;
  		}
++<<<<<<< HEAD
 +		/* fall through */
++=======
+ 		if (!found) {
+ 			AP_DBF_WARN("%s unassociated reply psmid=0x%016llx on 0x%02x.%04x\n",
+ 				    __func__, aq->reply->psmid,
+ 				    AP_QID_CARD(aq->qid), AP_QID_QUEUE(aq->qid));
+ 		}
+ 		fallthrough;
++>>>>>>> e73a99f3287a (s390/ap: Fix hanging ioctl caused by wrong msg counter)
  	case AP_RESPONSE_NO_PENDING_REPLY:
  		if (!status.queue_empty || aq->queue_count <= 0)
  			break;
* Unmerged path drivers/s390/crypto/ap_queue.c
