fs: dlm: remove lock dependency warning

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Alexander Aring <aahringo@redhat.com>
commit 0461e0db941f8f49dcfd0576c4449f2e5beda2f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/0461e0db.failed

During my experiments to make dlm robust against tcpkill application I
was able to run sometimes in a circular lock dependency warning between
clusters_root.subsys.su_mutex and con->sock_mutex. We don't need to
held the sock_mutex when getting the mark value which held the
clusters_root.subsys.su_mutex. This patch moves the specific handling
just before the sock_mutex will be held.

	Signed-off-by: Alexander Aring <aahringo@redhat.com>
	Signed-off-by: David Teigland <teigland@redhat.com>
(cherry picked from commit 0461e0db941f8f49dcfd0576c4449f2e5beda2f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/dlm/lowcomms.c
diff --cc fs/dlm/lowcomms.c
index 2ece988dabc6,24f5e55313d8..000000000000
--- a/fs/dlm/lowcomms.c
+++ b/fs/dlm/lowcomms.c
@@@ -1068,6 -999,8 +1072,11 @@@ static void sctp_connect_to_sock(struc
  	if (result < 0)
  		goto socket_err;
  
++<<<<<<< HEAD
++=======
+ 	sock_set_mark(sock->sk, mark);
+ 
++>>>>>>> 0461e0db941f (fs: dlm: remove lock dependency warning)
  	con->rx_action = receive_from_sock;
  	con->connect_action = sctp_connect_to_sock;
  	add_sock(sock, con);
@@@ -1155,6 -1089,8 +1168,11 @@@ static void tcp_connect_to_sock(struct 
  	if (result < 0)
  		goto out_err;
  
++<<<<<<< HEAD
++=======
+ 	sock_set_mark(sock->sk, mark);
+ 
++>>>>>>> 0461e0db941f (fs: dlm: remove lock dependency warning)
  	memset(&saddr, 0, sizeof(saddr));
  	result = nodeid_to_addr(con->nodeid, &saddr, NULL, false);
  	if (result < 0) {
* Unmerged path fs/dlm/lowcomms.c
