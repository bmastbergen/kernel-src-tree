ice: Prevent probing virtual functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
commit 50ac7479846053ca8054be833c1594e64de496bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/50ac7479.failed

The userspace utility "driverctl" can be used to change/override the
system's default driver choices. This is useful in some situations
(buggy driver, old driver missing a device ID, trying a workaround,
etc.) where the user needs to load a different driver.

However, this is also prone to user error, where a driver is mapped
to a device it's not designed to drive. For example, if the ice driver
is mapped to driver iavf devices, the ice driver crashes.

Add a check to return an error if the ice driver is being used to
probe a virtual function.

Fixes: 837f08fdecbe ("ice: Add basic driver framework for Intel(R) E800 Series")
	Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
	Tested-by: Gurucharan G <gurucharanx.g@intel.com>
	Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 50ac7479846053ca8054be833c1594e64de496bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_main.c
diff --cc drivers/net/ethernet/intel/ice/ice_main.c
index 12599093bce0,a9506041eb42..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_main.c
+++ b/drivers/net/ethernet/intel/ice/ice_main.c
@@@ -4004,9 -4192,16 +4004,20 @@@ ice_probe(struct pci_dev *pdev, const s
  	struct device *dev = &pdev->dev;
  	struct ice_pf *pf;
  	struct ice_hw *hw;
 -	int i, err;
 +	int err;
  
++<<<<<<< HEAD
 +	/* this driver uses devres, see Documentation/driver-model/devres.txt */
++=======
+ 	if (pdev->is_virtfn) {
+ 		dev_err(dev, "can't probe a virtual function\n");
+ 		return -EINVAL;
+ 	}
+ 
+ 	/* this driver uses devres, see
+ 	 * Documentation/driver-api/driver-model/devres.rst
+ 	 */
++>>>>>>> 50ac74798460 (ice: Prevent probing virtual functions)
  	err = pcim_enable_device(pdev);
  	if (err)
  		return err;
* Unmerged path drivers/net/ethernet/intel/ice/ice_main.c
