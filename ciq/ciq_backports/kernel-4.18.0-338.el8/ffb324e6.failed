tty: vt: always invoke vc->vc_sw->con_resize callback

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
commit ffb324e6f874121f7dce5bdae5e05d02baae7269
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/ffb324e6.failed

syzbot is reporting OOB write at vga16fb_imageblit() [1], for
resize_screen() from ioctl(VT_RESIZE) returns 0 without checking whether
requested rows/columns fit the amount of memory reserved for the graphical
screen if current mode is KD_GRAPHICS.

----------
  #include <sys/types.h>
  #include <sys/stat.h>
  #include <fcntl.h>
  #include <sys/ioctl.h>
  #include <linux/kd.h>
  #include <linux/vt.h>

  int main(int argc, char *argv[])
  {
        const int fd = open("/dev/char/4:1", O_RDWR);
        struct vt_sizes vt = { 0x4100, 2 };

        ioctl(fd, KDSETMODE, KD_GRAPHICS);
        ioctl(fd, VT_RESIZE, &vt);
        ioctl(fd, KDSETMODE, KD_TEXT);
        return 0;
  }
----------

Allow framebuffer drivers to return -EINVAL, by moving vc->vc_mode !=
KD_GRAPHICS check from resize_screen() to fbcon_resize().

Link: https://syzkaller.appspot.com/bug?extid=1f29e126cf461c4de3b3 [1]
	Reported-by: syzbot <syzbot+1f29e126cf461c4de3b3@syzkaller.appspotmail.com>
	Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Tested-by: syzbot <syzbot+1f29e126cf461c4de3b3@syzkaller.appspotmail.com>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit ffb324e6f874121f7dce5bdae5e05d02baae7269)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
diff --cc drivers/video/fbdev/core/fbcon.c
index 4b1af1e46020,22bb3892f6bd..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -2188,8 -2018,8 +2188,13 @@@ static int fbcon_resize(struct vc_data 
  		if (virt_w > var.xres/virt_fw || virt_h > var.yres/virt_fh)
  			return -EINVAL;
  
++<<<<<<< HEAD
 +		DPRINTK("resize now %ix%i\n", var.xres, var.yres);
 +		if (con_is_visible(vc)) {
++=======
+ 		pr_debug("resize now %ix%i\n", var.xres, var.yres);
+ 		if (con_is_visible(vc) && vc->vc_mode == KD_TEXT) {
++>>>>>>> ffb324e6f874 (tty: vt: always invoke vc->vc_sw->con_resize callback)
  			var.activate = FB_ACTIVATE_NOW |
  				FB_ACTIVATE_FORCE;
  			fb_set_var(info, &var);
diff --git a/drivers/tty/vt/vt.c b/drivers/tty/vt/vt.c
index d9932c20da29..e02f07c2ed9b 100644
--- a/drivers/tty/vt/vt.c
+++ b/drivers/tty/vt/vt.c
@@ -996,7 +996,7 @@ static inline int resize_screen(struct vc_data *vc, int width, int height,
 	/* Resizes the resolution of the display adapater */
 	int err = 0;
 
-	if (vc->vc_mode != KD_GRAPHICS && vc->vc_sw->con_resize)
+	if (vc->vc_sw->con_resize)
 		err = vc->vc_sw->con_resize(vc, width, height, user);
 
 	return err;
* Unmerged path drivers/video/fbdev/core/fbcon.c
