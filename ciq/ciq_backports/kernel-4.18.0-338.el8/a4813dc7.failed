net: ethernet: chelsio: inline_crypto: Mundane typos fixed throughout the file chcr_ktls.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Bhaskar Chowdhury <unixbhaskar@gmail.com>
commit a4813dc7baa4898f66c84ef68274bbbd1a0ae224
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/a4813dc7.failed

Mundane typos fixes throughout the file.

s/establised/established/
s/availbale/available/
s/vaues/values/
s/Incase/In case/

	Signed-off-by: Bhaskar Chowdhury <unixbhaskar@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a4813dc7baa4898f66c84ef68274bbbd1a0ae224)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/chelsio/chcr_ktls.c
diff --cc drivers/crypto/chelsio/chcr_ktls.c
index 887ecc2060e8,169e10c91378..000000000000
--- a/drivers/crypto/chelsio/chcr_ktls.c
+++ b/drivers/crypto/chelsio/chcr_ktls.c
@@@ -622,6 -664,25 +622,28 @@@ int chcr_ktls_cpl_act_open_rpl(struct a
  		return -1;
  	}
  
++<<<<<<< HEAD:drivers/crypto/chelsio/chcr_ktls.c
++=======
+ 	cxgb4_free_atid(t, atid);
+ 	tx_info->atid = -1;
+ 
+ 	spin_lock(&tx_info->lock);
+ 	/* HW response is very close, finish pending cleanup */
+ 	if (tx_info->pending_close) {
+ 		spin_unlock(&tx_info->lock);
+ 		if (!status) {
+ 			/* it's a late success, tcb status is established,
+ 			 * mark it close.
+ 			 */
+ 			chcr_ktls_mark_tcb_close(tx_info);
+ 			cxgb4_remove_tid(&tx_info->adap->tids, tx_info->tx_chan,
+ 					 tid, tx_info->ip_family);
+ 		}
+ 		kvfree(tx_info);
+ 		return 0;
+ 	}
+ 
++>>>>>>> a4813dc7baa4 (net: ethernet: chelsio: inline_crypto: Mundane typos fixed throughout the file chcr_ktls.c):drivers/net/ethernet/chelsio/inline_crypto/ch_ktls/chcr_ktls.c
  	if (!status) {
  		tx_info->tid = tid;
  		cxgb4_insert_tid(t, tx_info, tx_info->tid, tx_info->ip_family);
@@@ -1897,23 -2003,10 +1919,23 @@@ int chcr_ktls_xmit(struct sk_buff *skb
  		if (ret)
  			return NETDEV_TX_BUSY;
  	}
 +	/* update tcb */
 +	ret = chcr_ktls_xmit_tcb_cpls(tx_info, q, ntohl(th->seq),
 +				      ntohl(th->ack_seq),
 +				      ntohs(th->window));
 +	if (ret) {
 +		dev_kfree_skb_any(local_skb);
 +		return NETDEV_TX_BUSY;
 +	}
  
 +	/* copy skb contents into local skb */
 +	chcr_ktls_skb_copy(skb, local_skb);
 +
 +	/* go through the skb and send only one record at a time. */
 +	data_len = skb->data_len;
  	/* TCP segments can be in received either complete or partial.
  	 * chcr_end_part_handler will handle cases if complete record or end
- 	 * part of the record is received. Incase of partial end part of record,
+ 	 * part of the record is received. In case of partial end part of record,
  	 * we will send the complete record again.
  	 */
  
* Unmerged path drivers/crypto/chelsio/chcr_ktls.c
