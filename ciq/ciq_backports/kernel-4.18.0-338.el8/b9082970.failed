bpf: Use NOP_ATOMIC5 instead of emit_nops(&prog, 5) for BPF_TRAMP_F_CALL_ORIG

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Stanislav Fomichev <sdf@google.com>
commit b9082970478009b778aa9b22d5561eef35b53b63
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/b9082970.failed

__bpf_arch_text_poke does rewrite only for atomic nop5, emit_nops(xxx, 5)
emits non-atomic one which breaks fentry/fexit with k8 atomics:

P6_NOP5 == P6_NOP5_ATOMIC (0f1f440000 == 0f1f440000)
K8_NOP5 != K8_NOP5_ATOMIC (6666906690 != 6666666690)

Can be reproduced by doing "ideal_nops = k8_nops" in "arch_init_ideal_nops()
and running fexit_bpf2bpf selftest.

Fixes: e21aa341785c ("bpf: Fix fexit trampoline.")
	Signed-off-by: Stanislav Fomichev <sdf@google.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20210320000001.915366-1-sdf@google.com
(cherry picked from commit b9082970478009b778aa9b22d5561eef35b53b63)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/net/bpf_jit_comp.c
diff --cc arch/x86/net/bpf_jit_comp.c
index 34b24912f3d9,b35fc8023884..000000000000
--- a/arch/x86/net/bpf_jit_comp.c
+++ b/arch/x86/net/bpf_jit_comp.c
@@@ -1903,6 -2011,9 +1903,12 @@@ int arch_prepare_bpf_trampoline(void *i
  		}
  		/* remember return value in a stack for bpf prog to access */
  		emit_stx(&prog, BPF_DW, BPF_REG_FP, BPF_REG_0, -8);
++<<<<<<< HEAD
++=======
+ 		im->ip_after_call = prog;
+ 		memcpy(prog, ideal_nops[NOP_ATOMIC5], X86_PATCH_SIZE);
+ 		prog += X86_PATCH_SIZE;
++>>>>>>> b90829704780 (bpf: Use NOP_ATOMIC5 instead of emit_nops(&prog, 5) for BPF_TRAMP_F_CALL_ORIG)
  	}
  
  	if (fmod_ret->nr_progs) {
* Unmerged path arch/x86/net/bpf_jit_comp.c
