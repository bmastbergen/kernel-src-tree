ice: Add more FDIR filter type for AVF

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Qi Zhang <qi.z.zhang@intel.com>
commit 213528fed2f609a0d67f59337145057f63c5bb0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/213528fe.failed

FDIR for AVF can forward
- L2TPV3 packets by matching session id.
- IPSEC ESP packets by matching security parameter index.
- IPSEC AH packets by matching security parameter index.
- NAT_T ESP packets by matching security parameter index.
- Any PFCP session packets(s field is 1).

	Signed-off-by: Yahui Cao <yahui.cao@intel.com>
	Signed-off-by: Qi Zhang <qi.z.zhang@intel.com>
	Tested-by: Chen Bo <BoX.C.Chen@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 213528fed2f609a0d67f59337145057f63c5bb0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_fdir.c
#	drivers/net/ethernet/intel/ice/ice_fdir.h
#	drivers/net/ethernet/intel/ice/ice_type.h
#	drivers/net/ethernet/intel/ice/ice_virtchnl_fdir.c
diff --cc drivers/net/ethernet/intel/ice/ice_fdir.c
index 0c2066c0ab1f,e8155c7954a0..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_fdir.c
+++ b/drivers/net/ethernet/intel/ice/ice_fdir.c
@@@ -40,6 -40,204 +40,207 @@@ static const u8 ice_fdir_ipv4_pkt[] = 
  	0x00, 0x00
  };
  
++<<<<<<< HEAD
++=======
+ static const u8 ice_fdir_udp4_gtpu4_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x4c, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x08, 0x68, 0x08, 0x68, 0x00, 0x00,
+ 	0x00, 0x00, 0x34, 0xff, 0x00, 0x28, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00,
+ 	0x00, 0x1c, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_tcp4_gtpu4_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x58, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x08, 0x68, 0x08, 0x68, 0x00, 0x00,
+ 	0x00, 0x00, 0x34, 0xff, 0x00, 0x28, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00,
+ 	0x00, 0x28, 0x00, 0x00, 0x40, 0x00, 0x40, 0x06,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_icmp4_gtpu4_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x4c, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x08, 0x68, 0x08, 0x68, 0x00, 0x00,
+ 	0x00, 0x00, 0x34, 0xff, 0x00, 0x28, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00,
+ 	0x00, 0x1c, 0x00, 0x00, 0x40, 0x00, 0x40, 0x01,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv4_gtpu4_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x44, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x08, 0x68, 0x08, 0x68, 0x00, 0x00,
+ 	0x00, 0x00, 0x34, 0xff, 0x00, 0x28, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0x02, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00,
+ 	0x00, 0x14, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv4_l2tpv3_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x14, 0x00, 0x00, 0x40, 0x00, 0x40, 0x73,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv6_l2tpv3_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x73, 0x40, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv4_esp_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x14, 0x00, 0x00, 0x40, 0x00, 0x40, 0x32,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00
+ };
+ 
+ static const u8 ice_fdir_ipv6_esp_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x32, 0x40, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv4_ah_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x14, 0x00, 0x00, 0x40, 0x00, 0x40, 0x33,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00
+ };
+ 
+ static const u8 ice_fdir_ipv6_ah_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x33, 0x40, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv4_nat_t_esp_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x1C, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x11, 0x94, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv6_nat_t_esp_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
+ 	0x00, 0x00, 0x00, 0x08, 0x11, 0x40, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x11, 0x94, 0x00, 0x00, 0x00, 0x08,
+ };
+ 
+ static const u8 ice_fdir_ipv4_pfcp_node_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x2C, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x22, 0x65, 0x22, 0x65, 0x00, 0x00,
+ 	0x00, 0x00, 0x20, 0x00, 0x00, 0x10, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv4_pfcp_session_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00,
+ 	0x00, 0x2C, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x22, 0x65, 0x22, 0x65, 0x00, 0x00,
+ 	0x00, 0x00, 0x21, 0x00, 0x00, 0x10, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv6_pfcp_node_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
+ 	0x00, 0x00, 0x00, 0x18, 0x11, 0x40, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x65,
+ 	0x22, 0x65, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
+ 	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_ipv6_pfcp_session_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
+ 	0x00, 0x00, 0x00, 0x18, 0x11, 0x40, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x65,
+ 	0x22, 0x65, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00,
+ 	0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
+ static const u8 ice_fdir_non_ip_l2_pkt[] = {
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+ };
+ 
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  static const u8 ice_fdir_tcpv6_pkt[] = {
  	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  	0x00, 0x00, 0x00, 0x00, 0x86, 0xDD, 0x60, 0x00,
@@@ -239,6 -437,111 +440,114 @@@ static const struct ice_fdir_base_pkt i
  		sizeof(ice_fdir_ip4_tun_pkt), ice_fdir_ip4_tun_pkt,
  	},
  	{
++<<<<<<< HEAD
++=======
+ 		ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_UDP,
+ 		sizeof(ice_fdir_udp4_gtpu4_pkt),
+ 		ice_fdir_udp4_gtpu4_pkt,
+ 		sizeof(ice_fdir_udp4_gtpu4_pkt),
+ 		ice_fdir_udp4_gtpu4_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_TCP,
+ 		sizeof(ice_fdir_tcp4_gtpu4_pkt),
+ 		ice_fdir_tcp4_gtpu4_pkt,
+ 		sizeof(ice_fdir_tcp4_gtpu4_pkt),
+ 		ice_fdir_tcp4_gtpu4_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_ICMP,
+ 		sizeof(ice_fdir_icmp4_gtpu4_pkt),
+ 		ice_fdir_icmp4_gtpu4_pkt,
+ 		sizeof(ice_fdir_icmp4_gtpu4_pkt),
+ 		ice_fdir_icmp4_gtpu4_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_OTHER,
+ 		sizeof(ice_fdir_ipv4_gtpu4_pkt),
+ 		ice_fdir_ipv4_gtpu4_pkt,
+ 		sizeof(ice_fdir_ipv4_gtpu4_pkt),
+ 		ice_fdir_ipv4_gtpu4_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_L2TPV3,
+ 		sizeof(ice_fdir_ipv4_l2tpv3_pkt), ice_fdir_ipv4_l2tpv3_pkt,
+ 		sizeof(ice_fdir_ipv4_l2tpv3_pkt), ice_fdir_ipv4_l2tpv3_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV6_L2TPV3,
+ 		sizeof(ice_fdir_ipv6_l2tpv3_pkt), ice_fdir_ipv6_l2tpv3_pkt,
+ 		sizeof(ice_fdir_ipv6_l2tpv3_pkt), ice_fdir_ipv6_l2tpv3_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_ESP,
+ 		sizeof(ice_fdir_ipv4_esp_pkt), ice_fdir_ipv4_esp_pkt,
+ 		sizeof(ice_fdir_ipv4_esp_pkt), ice_fdir_ipv4_esp_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV6_ESP,
+ 		sizeof(ice_fdir_ipv6_esp_pkt), ice_fdir_ipv6_esp_pkt,
+ 		sizeof(ice_fdir_ipv6_esp_pkt), ice_fdir_ipv6_esp_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_AH,
+ 		sizeof(ice_fdir_ipv4_ah_pkt), ice_fdir_ipv4_ah_pkt,
+ 		sizeof(ice_fdir_ipv4_ah_pkt), ice_fdir_ipv4_ah_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV6_AH,
+ 		sizeof(ice_fdir_ipv6_ah_pkt), ice_fdir_ipv6_ah_pkt,
+ 		sizeof(ice_fdir_ipv6_ah_pkt), ice_fdir_ipv6_ah_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_NAT_T_ESP,
+ 		sizeof(ice_fdir_ipv4_nat_t_esp_pkt),
+ 		ice_fdir_ipv4_nat_t_esp_pkt,
+ 		sizeof(ice_fdir_ipv4_nat_t_esp_pkt),
+ 		ice_fdir_ipv4_nat_t_esp_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV6_NAT_T_ESP,
+ 		sizeof(ice_fdir_ipv6_nat_t_esp_pkt),
+ 		ice_fdir_ipv6_nat_t_esp_pkt,
+ 		sizeof(ice_fdir_ipv6_nat_t_esp_pkt),
+ 		ice_fdir_ipv6_nat_t_esp_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_PFCP_NODE,
+ 		sizeof(ice_fdir_ipv4_pfcp_node_pkt),
+ 		ice_fdir_ipv4_pfcp_node_pkt,
+ 		sizeof(ice_fdir_ipv4_pfcp_node_pkt),
+ 		ice_fdir_ipv4_pfcp_node_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV4_PFCP_SESSION,
+ 		sizeof(ice_fdir_ipv4_pfcp_session_pkt),
+ 		ice_fdir_ipv4_pfcp_session_pkt,
+ 		sizeof(ice_fdir_ipv4_pfcp_session_pkt),
+ 		ice_fdir_ipv4_pfcp_session_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV6_PFCP_NODE,
+ 		sizeof(ice_fdir_ipv6_pfcp_node_pkt),
+ 		ice_fdir_ipv6_pfcp_node_pkt,
+ 		sizeof(ice_fdir_ipv6_pfcp_node_pkt),
+ 		ice_fdir_ipv6_pfcp_node_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NONF_IPV6_PFCP_SESSION,
+ 		sizeof(ice_fdir_ipv6_pfcp_session_pkt),
+ 		ice_fdir_ipv6_pfcp_session_pkt,
+ 		sizeof(ice_fdir_ipv6_pfcp_session_pkt),
+ 		ice_fdir_ipv6_pfcp_session_pkt,
+ 	},
+ 	{
+ 		ICE_FLTR_PTYPE_NON_IP_L2,
+ 		sizeof(ice_fdir_non_ip_l2_pkt), ice_fdir_non_ip_l2_pkt,
+ 		sizeof(ice_fdir_non_ip_l2_pkt), ice_fdir_non_ip_l2_pkt,
+ 	},
+ 	{
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  		ICE_FLTR_PTYPE_NONF_IPV6_TCP,
  		sizeof(ice_fdir_tcpv6_pkt), ice_fdir_tcpv6_pkt,
  		sizeof(ice_fdir_tcp6_tun_pkt), ice_fdir_tcp6_tun_pkt,
@@@ -664,6 -993,73 +973,76 @@@ ice_fdir_get_gen_prgm_pkt(struct ice_h
  				  input->ip.v4.proto);
  		ice_pkt_insert_mac_addr(loc, input->ext_data.dst_mac);
  		break;
++<<<<<<< HEAD
++=======
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_UDP:
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_TCP:
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_ICMP:
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_OTHER:
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_DST_ADDR_OFFSET,
+ 				   input->ip.v4.src_ip);
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_SRC_ADDR_OFFSET,
+ 				   input->ip.v4.dst_ip);
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_GTPU_TEID_OFFSET,
+ 				   input->gtpu_data.teid);
+ 		ice_pkt_insert_u6_qfi(loc, ICE_IPV4_GTPU_QFI_OFFSET,
+ 				      input->gtpu_data.qfi);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_L2TPV3:
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_L2TPV3_SESS_ID_OFFSET,
+ 				   input->l2tpv3_data.session_id);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV6_L2TPV3:
+ 		ice_pkt_insert_u32(loc, ICE_IPV6_L2TPV3_SESS_ID_OFFSET,
+ 				   input->l2tpv3_data.session_id);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_ESP:
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_ESP_SPI_OFFSET,
+ 				   input->ip.v4.sec_parm_idx);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV6_ESP:
+ 		ice_pkt_insert_u32(loc, ICE_IPV6_ESP_SPI_OFFSET,
+ 				   input->ip.v6.sec_parm_idx);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_AH:
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_AH_SPI_OFFSET,
+ 				   input->ip.v4.sec_parm_idx);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV6_AH:
+ 		ice_pkt_insert_u32(loc, ICE_IPV6_AH_SPI_OFFSET,
+ 				   input->ip.v6.sec_parm_idx);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_NAT_T_ESP:
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_DST_ADDR_OFFSET,
+ 				   input->ip.v4.src_ip);
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_SRC_ADDR_OFFSET,
+ 				   input->ip.v4.dst_ip);
+ 		ice_pkt_insert_u32(loc, ICE_IPV4_NAT_T_ESP_SPI_OFFSET,
+ 				   input->ip.v4.sec_parm_idx);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV6_NAT_T_ESP:
+ 		ice_pkt_insert_ipv6_addr(loc, ICE_IPV6_DST_ADDR_OFFSET,
+ 					 input->ip.v6.src_ip);
+ 		ice_pkt_insert_ipv6_addr(loc, ICE_IPV6_SRC_ADDR_OFFSET,
+ 					 input->ip.v6.dst_ip);
+ 		ice_pkt_insert_u32(loc, ICE_IPV6_NAT_T_ESP_SPI_OFFSET,
+ 				   input->ip.v6.sec_parm_idx);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_PFCP_NODE:
+ 	case ICE_FLTR_PTYPE_NONF_IPV4_PFCP_SESSION:
+ 		ice_pkt_insert_u16(loc, ICE_IPV4_UDP_SRC_PORT_OFFSET,
+ 				   input->ip.v4.dst_port);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NONF_IPV6_PFCP_NODE:
+ 	case ICE_FLTR_PTYPE_NONF_IPV6_PFCP_SESSION:
+ 		ice_pkt_insert_u16(loc, ICE_IPV6_UDP_SRC_PORT_OFFSET,
+ 				   input->ip.v6.dst_port);
+ 		break;
+ 	case ICE_FLTR_PTYPE_NON_IP_L2:
+ 		ice_pkt_insert_u16(loc, ICE_MAC_ETHTYPE_OFFSET,
+ 				   input->ext_data.ether_type);
+ 		break;
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  	case ICE_FLTR_PTYPE_NONF_IPV6_TCP:
  		ice_pkt_insert_ipv6_addr(loc, ICE_IPV6_DST_ADDR_OFFSET,
  					 input->ip.v6.src_ip);
diff --cc drivers/net/ethernet/intel/ice/ice_fdir.h
index 84b40298a513,d2d40e18ae8a..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_fdir.h
+++ b/drivers/net/ethernet/intel/ice/ice_fdir.h
@@@ -30,6 -31,18 +30,21 @@@
  #define ICE_IPV6_TC_OFFSET		14
  #define ICE_IPV6_HLIM_OFFSET		21
  #define ICE_IPV6_PROTO_OFFSET		20
++<<<<<<< HEAD
++=======
+ #define ICE_IPV4_GTPU_TEID_OFFSET	46
+ #define ICE_IPV4_GTPU_QFI_OFFSET	56
+ #define ICE_IPV4_L2TPV3_SESS_ID_OFFSET	34
+ #define ICE_IPV6_L2TPV3_SESS_ID_OFFSET	54
+ #define ICE_IPV4_ESP_SPI_OFFSET		34
+ #define ICE_IPV6_ESP_SPI_OFFSET		54
+ #define ICE_IPV4_AH_SPI_OFFSET		38
+ #define ICE_IPV6_AH_SPI_OFFSET		58
+ #define ICE_IPV4_NAT_T_ESP_SPI_OFFSET	42
+ #define ICE_IPV6_NAT_T_ESP_SPI_OFFSET	62
+ 
+ #define ICE_FDIR_MAX_FLTRS		16384
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  
  /* IP v4 has 2 flag bits that enable fragment processing: DF and MF. DF
   * requests that the packet not be fragmented. MF indicates that a packet has
@@@ -109,6 -124,28 +124,31 @@@ struct ice_fdir_v6 
  	u8 hlim;
  };
  
++<<<<<<< HEAD
++=======
+ struct ice_fdir_udp_gtp {
+ 	u8 flags;
+ 	u8 msg_type;
+ 	__be16 rsrvd_len;
+ 	__be32 teid;
+ 	__be16 rsrvd_seq_nbr;
+ 	u8 rsrvd_n_pdu_nbr;
+ 	u8 rsrvd_next_ext_type;
+ 	u8 rsvrd_ext_len;
+ 	u8	pdu_type:4,
+ 		spare:4;
+ 	u8	ppp:1,
+ 		rqi:1,
+ 		qfi:6;
+ 	u32 rsvrd;
+ 	u8 next_ext;
+ };
+ 
+ struct ice_fdir_l2tpv3 {
+ 	__be32 session_id;
+ };
+ 
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  struct ice_fdir_extra {
  	u8 dst_mac[ETH_ALEN];	/* dest MAC address */
  	u8 src_mac[ETH_ALEN];	/* src MAC address */
@@@ -126,6 -164,12 +166,15 @@@ struct ice_fdir_fltr 
  		struct ice_fdir_v6 v6;
  	} ip, mask;
  
++<<<<<<< HEAD
++=======
+ 	struct ice_fdir_udp_gtp gtpu_data;
+ 	struct ice_fdir_udp_gtp gtpu_mask;
+ 
+ 	struct ice_fdir_l2tpv3 l2tpv3_data;
+ 	struct ice_fdir_l2tpv3 l2tpv3_mask;
+ 
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  	struct ice_fdir_extra ext_data;
  	struct ice_fdir_extra ext_mask;
  
diff --cc drivers/net/ethernet/intel/ice/ice_type.h
index 8b9e015be7d6,2893143d9e62..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_type.h
+++ b/drivers/net/ethernet/intel/ice/ice_type.h
@@@ -192,6 -192,24 +192,27 @@@ enum ice_fltr_ptype 
  	ICE_FLTR_PTYPE_NONF_IPV4_TCP,
  	ICE_FLTR_PTYPE_NONF_IPV4_SCTP,
  	ICE_FLTR_PTYPE_NONF_IPV4_OTHER,
++<<<<<<< HEAD
++=======
+ 	ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_UDP,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_TCP,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_ICMP,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_GTPU_IPV4_OTHER,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_GTPU_IPV6_OTHER,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_L2TPV3,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_L2TPV3,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_ESP,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_ESP,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_AH,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_AH,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_NAT_T_ESP,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_NAT_T_ESP,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_PFCP_NODE,
+ 	ICE_FLTR_PTYPE_NONF_IPV4_PFCP_SESSION,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_PFCP_NODE,
+ 	ICE_FLTR_PTYPE_NONF_IPV6_PFCP_SESSION,
+ 	ICE_FLTR_PTYPE_NON_IP_L2,
++>>>>>>> 213528fed2f6 (ice: Add more FDIR filter type for AVF)
  	ICE_FLTR_PTYPE_FRAG_IPV4,
  	ICE_FLTR_PTYPE_NONF_IPV6_UDP,
  	ICE_FLTR_PTYPE_NONF_IPV6_TCP,
* Unmerged path drivers/net/ethernet/intel/ice/ice_virtchnl_fdir.c
* Unmerged path drivers/net/ethernet/intel/ice/ice_fdir.c
* Unmerged path drivers/net/ethernet/intel/ice/ice_fdir.h
* Unmerged path drivers/net/ethernet/intel/ice/ice_type.h
* Unmerged path drivers/net/ethernet/intel/ice/ice_virtchnl_fdir.c
