i40e: convert to new udp_tunnel infrastructure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Jakub Kicinski <kuba@kernel.org>
commit 40a98cb6f01f013b8ab0ce7b28f705423ee16836
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/40a98cb6.failed

Make use of the "shared port table" to convert i40e to the new
infra.

i40e did not have any reference tracking, locking is also dodgy
because rtnl gets released while talking to FW, so port may get
removed from the table while it's getting added etc.

On the good side i40e does not seem to be using the ports for
TX so we can remove the table from the driver state completely.

	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 40a98cb6f01f013b8ab0ce7b28f705423ee16836)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 61c51a26f0c5,70bd3f47e43a..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -15193,13 -14967,13 +15011,23 @@@ static int i40e_probe(struct pci_dev *p
  	if (err)
  		goto err_switch_setup;
  
++<<<<<<< HEAD
 +	/* Reduce Tx and Rx pairs for kdump
 +	 * When MSI-X is enabled, it's not allowed to use more TC queue
 +	 * pairs than MSI-X vectors (pf->num_lan_msix) exist. Thus
 +	 * vsi->num_queue_pairs will be equal to pf->num_lan_msix, i.e., 1.
 +	 */
 +	if (is_kdump_kernel())
 +		pf->num_lan_msix = 1;
++=======
+ 	pf->udp_tunnel_nic.set_port = i40e_udp_tunnel_set_port;
+ 	pf->udp_tunnel_nic.unset_port = i40e_udp_tunnel_unset_port;
+ 	pf->udp_tunnel_nic.flags = UDP_TUNNEL_NIC_INFO_MAY_SLEEP;
+ 	pf->udp_tunnel_nic.shared = &pf->udp_tunnel_shared;
+ 	pf->udp_tunnel_nic.tables[0].n_entries = I40E_MAX_PF_UDP_OFFLOAD_PORTS;
+ 	pf->udp_tunnel_nic.tables[0].tunnel_types = UDP_TUNNEL_TYPE_VXLAN |
+ 						    UDP_TUNNEL_TYPE_GENEVE;
++>>>>>>> 40a98cb6f01f (i40e: convert to new udp_tunnel infrastructure)
  
  	/* The number of VSIs reported by the FW is the minimum guaranteed
  	 * to us; HW supports far more and we share the remaining pool with
diff --git a/drivers/net/ethernet/intel/i40e/i40e.h b/drivers/net/ethernet/intel/i40e/i40e.h
index b3f4f68ee252..e106c33ff958 100644
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@ -35,6 +35,7 @@
 #include <net/pkt_cls.h>
 #include <net/tc_act/tc_gact.h>
 #include <net/tc_act/tc_mirred.h>
+#include <net/udp_tunnel.h>
 #include <net/xdp_sock.h>
 #include "i40e_type.h"
 #include "i40e_prototype.h"
@@ -136,7 +137,6 @@ enum i40e_state_t {
 	__I40E_PORT_SUSPENDED,
 	__I40E_VF_DISABLE,
 	__I40E_MACVLAN_SYNC_PENDING,
-	__I40E_UDP_FILTER_SYNC_PENDING,
 	__I40E_TEMP_LINK_POLLING,
 	__I40E_CLIENT_SERVICE_REQUESTED,
 	__I40E_CLIENT_L2_CHANGE,
@@ -484,8 +484,8 @@ struct i40e_pf {
 	struct list_head l3_flex_pit_list;
 	struct list_head l4_flex_pit_list;
 
-	struct i40e_udp_port_config udp_ports[I40E_MAX_PF_UDP_OFFLOAD_PORTS];
-	u16 pending_udp_bitmap;
+	struct udp_tunnel_nic_shared udp_tunnel_shared;
+	struct udp_tunnel_nic_info udp_tunnel_nic;
 
 	struct hlist_head cloud_filter_list;
 	u16 num_cloud_filters;
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
