ch_ipsec: Remove initialization of rxq related data

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Ayush Sawal <ayush.sawal@chelsio.com>
commit e3a7670737ecd7eb55b5c5e1900678e2a2e51ef9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/e3a76707.failed

Removing initialization of nrxq and rxq_size in uld_info. As
ipsec uses nic queues only, there is no need to create uld
rx queues for ipsec.

	Signed-off-by: Ayush Sawal <ayush.sawal@chelsio.com>
Link: https://lore.kernel.org/r/20210113044302.25522-1-ayush.sawal@chelsio.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit e3a7670737ecd7eb55b5c5e1900678e2a2e51ef9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/chelsio/chcr_ipsec.c
diff --cc drivers/crypto/chelsio/chcr_ipsec.c
index 057e74c82fcd,585590520076..000000000000
--- a/drivers/crypto/chelsio/chcr_ipsec.c
+++ b/drivers/crypto/chelsio/chcr_ipsec.c
@@@ -72,39 -70,77 +72,51 @@@
  #define MAX_IMM_TX_PKT_LEN 256
  #define GCM_ESP_IV_SIZE     8
  
 -static LIST_HEAD(uld_ctx_list);
 -static DEFINE_MUTEX(dev_mutex);
 -
 -static bool ch_ipsec_offload_ok(struct sk_buff *skb, struct xfrm_state *x);
 -static int ch_ipsec_uld_state_change(void *handle, enum cxgb4_state new_state);
 -static int ch_ipsec_xmit(struct sk_buff *skb, struct net_device *dev);
 -static void *ch_ipsec_uld_add(const struct cxgb4_lld_info *infop);
 -static void ch_ipsec_advance_esn_state(struct xfrm_state *x);
 -static void ch_ipsec_xfrm_free_state(struct xfrm_state *x);
 -static void ch_ipsec_xfrm_del_state(struct xfrm_state *x);
 -static int ch_ipsec_xfrm_add_state(struct xfrm_state *x);
 -
 -static const struct xfrmdev_ops ch_ipsec_xfrmdev_ops = {
 -	.xdo_dev_state_add      = ch_ipsec_xfrm_add_state,
 -	.xdo_dev_state_delete   = ch_ipsec_xfrm_del_state,
 -	.xdo_dev_state_free     = ch_ipsec_xfrm_free_state,
 -	.xdo_dev_offload_ok     = ch_ipsec_offload_ok,
 -	.xdo_dev_state_advance_esn = ch_ipsec_advance_esn_state,
 +static int chcr_xfrm_add_state(struct xfrm_state *x);
 +static void chcr_xfrm_del_state(struct xfrm_state *x);
 +static void chcr_xfrm_free_state(struct xfrm_state *x);
 +static bool chcr_ipsec_offload_ok(struct sk_buff *skb, struct xfrm_state *x);
 +static void chcr_advance_esn_state(struct xfrm_state *x);
 +
 +static const struct xfrmdev_ops chcr_xfrmdev_ops = {
 +	.xdo_dev_state_add      = chcr_xfrm_add_state,
 +	.xdo_dev_state_delete   = chcr_xfrm_del_state,
 +	.xdo_dev_state_free     = chcr_xfrm_free_state,
 +	.xdo_dev_offload_ok     = chcr_ipsec_offload_ok,
 +	.xdo_dev_state_advance_esn = chcr_advance_esn_state,
  };
  
++<<<<<<< HEAD:drivers/crypto/chelsio/chcr_ipsec.c
 +/* Add offload xfrms to Chelsio Interface */
 +void chcr_add_xfrmops(const struct cxgb4_lld_info *lld)
++=======
+ static struct cxgb4_uld_info ch_ipsec_uld_info = {
+ 	.name = CHIPSEC_DRV_MODULE_NAME,
+ 	.add = ch_ipsec_uld_add,
+ 	.state_change = ch_ipsec_uld_state_change,
+ 	.tx_handler = ch_ipsec_xmit,
+ 	.xfrmdev_ops = &ch_ipsec_xfrmdev_ops,
+ };
+ 
+ static void *ch_ipsec_uld_add(const struct cxgb4_lld_info *infop)
++>>>>>>> e3a7670737ec (ch_ipsec: Remove initialization of rxq related data):drivers/net/ethernet/chelsio/inline_crypto/ch_ipsec/chcr_ipsec.c
  {
 -	struct ipsec_uld_ctx *u_ctx;
 -
 -	pr_info_once("%s - version %s\n", CHIPSEC_DRV_DESC,
 -		     CHIPSEC_DRV_VERSION);
 -	u_ctx = kzalloc(sizeof(*u_ctx), GFP_KERNEL);
 -	if (!u_ctx) {
 -		u_ctx = ERR_PTR(-ENOMEM);
 -		goto out;
 -	}
 -	u_ctx->lldi = *infop;
 -out:
 -	return u_ctx;
 -}
 -
 -static int ch_ipsec_uld_state_change(void *handle, enum cxgb4_state new_state)
 -{
 -	struct ipsec_uld_ctx *u_ctx = handle;
 -
 -	pr_debug("new_state %u\n", new_state);
 -	switch (new_state) {
 -	case CXGB4_STATE_UP:
 -		pr_info("%s: Up\n", pci_name(u_ctx->lldi.pdev));
 -		mutex_lock(&dev_mutex);
 -		list_add_tail(&u_ctx->entry, &uld_ctx_list);
 -		mutex_unlock(&dev_mutex);
 -		break;
 -	case CXGB4_STATE_START_RECOVERY:
 -	case CXGB4_STATE_DOWN:
 -	case CXGB4_STATE_DETACH:
 -		pr_info("%s: Down\n", pci_name(u_ctx->lldi.pdev));
 -		list_del(&u_ctx->entry);
 -		break;
 -	default:
 -		break;
 +	struct net_device *netdev = NULL;
 +	int i;
 +
 +	for (i = 0; i < lld->nports; i++) {
 +		netdev = lld->ports[i];
 +		if (!netdev)
 +			continue;
 +		netdev->xfrmdev_ops = &chcr_xfrmdev_ops;
 +		netdev->hw_enc_features |= NETIF_F_HW_ESP;
 +		netdev->features |= NETIF_F_HW_ESP;
 +		netdev_change_features(netdev);
  	}
 -
 -	return 0;
  }
  
 -static int ch_ipsec_setauthsize(struct xfrm_state *x,
 -				struct ipsec_sa_entry *sa_entry)
 +static inline int chcr_ipsec_setauthsize(struct xfrm_state *x,
 +					 struct ipsec_sa_entry *sa_entry)
  {
  	int hmac_ctrl;
  	int authsize = x->aead->alg_icv_len / 8;
* Unmerged path drivers/crypto/chelsio/chcr_ipsec.c
