cxgb4: fix check for running offline ethtool selftest

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-338.el8
commit-author Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
commit fd4ec07631b13438c148af973ecd461cf440ee2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-338.el8/fd4ec076.failed

The flag indicating the selftest to run is a bitmask. So, fix the
check. Also, the selftests will fail if adapter initialization has
not been completed yet. So, add appropriate check and bail sooner.

Fixes: 7235ffae3d2c ("cxgb4: add loopback ethtool self-test")
	Signed-off-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fd4ec07631b13438c148af973ecd461cf440ee2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
index 60c7efff8408,9f3173f86eed..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
@@@ -37,6 -25,15 +37,18 @@@ static void set_msglevel(struct net_dev
  	netdev2adap(dev)->msg_enable = val;
  }
  
++<<<<<<< HEAD
++=======
+ enum cxgb4_ethtool_tests {
+ 	CXGB4_ETHTOOL_LB_TEST,
+ 	CXGB4_ETHTOOL_MAX_TEST,
+ };
+ 
+ static const char cxgb4_selftest_strings[CXGB4_ETHTOOL_MAX_TEST][ETH_GSTRING_LEN] = {
+ 	"Loop back test (offline)",
+ };
+ 
++>>>>>>> fd4ec07631b1 (cxgb4: fix check for running offline ethtool selftest)
  static const char * const flash_region_strings[] = {
  	"All",
  	"Firmware",
@@@ -2070,6 -2070,44 +2082,47 @@@ static int cxgb4_set_priv_flags(struct 
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static void cxgb4_lb_test(struct net_device *netdev, u64 *lb_status)
+ {
+ 	int dev_state = netif_running(netdev);
+ 
+ 	if (dev_state) {
+ 		netif_tx_stop_all_queues(netdev);
+ 		netif_carrier_off(netdev);
+ 	}
+ 
+ 	*lb_status = cxgb4_selftest_lb_pkt(netdev);
+ 
+ 	if (dev_state) {
+ 		netif_tx_start_all_queues(netdev);
+ 		netif_carrier_on(netdev);
+ 	}
+ }
+ 
+ static void cxgb4_self_test(struct net_device *netdev,
+ 			    struct ethtool_test *eth_test, u64 *data)
+ {
+ 	struct port_info *pi = netdev_priv(netdev);
+ 	struct adapter *adap = pi->adapter;
+ 
+ 	memset(data, 0, sizeof(u64) * CXGB4_ETHTOOL_MAX_TEST);
+ 
+ 	if (!(adap->flags & CXGB4_FULL_INIT_DONE) ||
+ 	    !(adap->flags & CXGB4_FW_OK)) {
+ 		eth_test->flags |= ETH_TEST_FL_FAILED;
+ 		return;
+ 	}
+ 
+ 	if (eth_test->flags & ETH_TEST_FL_OFFLINE)
+ 		cxgb4_lb_test(netdev, &data[CXGB4_ETHTOOL_LB_TEST]);
+ 
+ 	if (data[CXGB4_ETHTOOL_LB_TEST])
+ 		eth_test->flags |= ETH_TEST_FL_FAILED;
+ }
+ 
++>>>>>>> fd4ec07631b1 (cxgb4: fix check for running offline ethtool selftest)
  static const struct ethtool_ops cxgb_ethtool_ops = {
  	.supported_coalesce_params = ETHTOOL_COALESCE_USECS |
  				     ETHTOOL_COALESCE_RX_MAX_FRAMES |
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
