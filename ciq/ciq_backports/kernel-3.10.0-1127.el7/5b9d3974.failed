scsi: sg: clean up gfp_mask in sg_build_indirect

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Jeff Moyer <jmoyer@redhat.com>
commit 5b9d397447f8c03843198b573d7cecf8893523fb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/5b9d3974.failed

commit a45b599ad808c ("scsi: sg: allocate with __GFP_ZERO in
sg_build_indirect()") changed the call to alloc_pages to always use
__GFP_ZERO.  Just above that, though, there was this:

       if (!capable(CAP_SYS_ADMIN) || !capable(CAP_SYS_RAWIO))
               gfp_mask |= __GFP_ZERO;

And there's only one user of the gfp_mask.  Just or in the __GFP_ZERO
flag at the top of the function and be done with it.

	Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
	Acked-by: Douglas Gilbert <dgilbert@interlog.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 5b9d397447f8c03843198b573d7cecf8893523fb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/sg.c
diff --cc drivers/scsi/sg.c
index f6cb5f5d9f4f,c926e07aabda..000000000000
--- a/drivers/scsi/sg.c
+++ b/drivers/scsi/sg.c
@@@ -1861,7 -1850,8 +1861,12 @@@ sg_build_indirect(Sg_scatter_hold * sch
  	int ret_sz = 0, i, k, rem_sz, num, mx_sc_elems;
  	int sg_tablesize = sfp->parentdp->sg_tablesize;
  	int blk_size = buff_size, order;
++<<<<<<< HEAD
 +	gfp_t gfp_mask = GFP_ATOMIC | __GFP_COMP | __GFP_NOWARN;
++=======
+ 	gfp_t gfp_mask = GFP_ATOMIC | __GFP_COMP | __GFP_NOWARN | __GFP_ZERO;
+ 	struct sg_device *sdp = sfp->parentdp;
++>>>>>>> 5b9d397447f8 (scsi: sg: clean up gfp_mask in sg_build_indirect)
  
  	if (blk_size < 0)
  		return -EFAULT;
@@@ -1887,12 -1877,9 +1892,9 @@@
  			scatter_elem_sz_prev = num;
  	}
  
 -	if (sdp->device->host->unchecked_isa_dma)
 +	if (sfp->low_dma)
  		gfp_mask |= GFP_DMA;
  
- 	if (!capable(CAP_SYS_ADMIN) || !capable(CAP_SYS_RAWIO))
- 		gfp_mask |= __GFP_ZERO;
- 
  	order = get_order(num);
  retry:
  	ret_sz = 1 << (PAGE_SHIFT + order);
* Unmerged path drivers/scsi/sg.c
