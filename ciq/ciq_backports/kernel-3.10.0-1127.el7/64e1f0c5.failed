s390/mm: force swiotlb for protected virtualization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Halil Pasic <pasic@linux.ibm.com>
commit 64e1f0c531d1072cd97939bf0d8df42b26713543
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/64e1f0c5.failed

On s390, protected virtualization guests have to use bounced I/O
buffers.  That requires some plumbing.

Let us make sure, any device that uses DMA API with direct ops correctly
is spared from the problems, that a hypervisor attempting I/O to a
non-shared page would bring.

	Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
	Reviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
	Reviewed-by: Michael Mueller <mimu@linux.ibm.com>
	Tested-by: Michael Mueller <mimu@linux.ibm.com>
	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
(cherry picked from commit 64e1f0c531d1072cd97939bf0d8df42b26713543)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/Kconfig
#	arch/s390/mm/init.c
diff --cc arch/s390/Kconfig
index ebaf45ac4e5d,35bb76491600..000000000000
--- a/arch/s390/Kconfig
+++ b/arch/s390/Kconfig
@@@ -1,3 -1,7 +1,10 @@@
++<<<<<<< HEAD
++=======
+ # SPDX-License-Identifier: GPL-2.0
+ config ARCH_HAS_MEM_ENCRYPT
+         def_bool y
+ 
++>>>>>>> 64e1f0c531d1 (s390/mm: force swiotlb for protected virtualization)
  config MMU
  	def_bool y
  
@@@ -134,25 -155,42 +141,32 @@@ config S39
  	select HAVE_KERNEL_XZ
  	select HAVE_KPROBES
  	select HAVE_KRETPROBES
 -	select HAVE_KVM
 +	select HAVE_KVM if 64BIT
  	select HAVE_LIVEPATCH
 -	select HAVE_PERF_REGS
 -	select HAVE_PERF_USER_STACK_DUMP
 +	select HAVE_MEMBLOCK
  	select HAVE_MEMBLOCK_NODE_MAP
 -	select HAVE_MEMBLOCK_PHYS_MAP
 -	select HAVE_MMU_GATHER_NO_GATHER
  	select HAVE_MOD_ARCH_SPECIFIC
 -	select HAVE_NOP_MCOUNT
  	select HAVE_OPROFILE
 -	select HAVE_PCI
  	select HAVE_PERF_EVENTS
 -	select HAVE_RCU_TABLE_FREE
  	select HAVE_REGS_AND_STACK_ACCESS_API
 -	select HAVE_RSEQ
  	select HAVE_SYSCALL_TRACEPOINTS
 +	select HAVE_UID16 if 32BIT
  	select HAVE_VIRT_CPU_ACCOUNTING
 -	select IOMMU_HELPER		if PCI
 -	select IOMMU_SUPPORT		if PCI
 +	select VIRT_TO_BUS
 +	select KTIME_SCALAR if 32BIT
  	select MODULES_USE_ELF_RELA
 -	select NEED_DMA_MAP_STATE	if PCI
 -	select NEED_SG_DMA_LENGTH	if PCI
 -	select OLD_SIGACTION
  	select OLD_SIGSUSPEND3
 -	select PCI_DOMAINS		if PCI
 -	select PCI_MSI			if PCI
 -	select SPARSE_IRQ
 +	select OLD_SIGACTION
  	select SYSCTL_EXCEPTION_TRACE
 -	select THREAD_INFO_IN_TASK
 -	select TTY
 +	select USE_GENERIC_SMP_HELPERS if SMP
  	select VIRT_CPU_ACCOUNTING
++<<<<<<< HEAD
++=======
+ 	select ARCH_HAS_SCALED_CPUTIME
+ 	select HAVE_NMI
+ 	select SWIOTLB
+ 
++>>>>>>> 64e1f0c531d1 (s390/mm: force swiotlb for protected virtualization)
  
  config SCHED_OMIT_FRAME_POINTER
  	def_bool y
diff --cc arch/s390/mm/init.c
index f01c5dae7a69,f0bee6af3960..000000000000
--- a/arch/s390/mm/init.c
+++ b/arch/s390/mm/init.c
@@@ -26,9 -28,11 +27,10 @@@
  #include <linux/poison.h>
  #include <linux/initrd.h>
  #include <linux/export.h>
 -#include <linux/cma.h>
  #include <linux/gfp.h>
+ #include <linux/dma-mapping.h>
  #include <asm/processor.h>
 -#include <linux/uaccess.h>
 +#include <asm/uaccess.h>
  #include <asm/pgtable.h>
  #include <asm/pgalloc.h>
  #include <asm/dma.h>
@@@ -38,6 -42,10 +40,13 @@@
  #include <asm/sections.h>
  #include <asm/ctl_reg.h>
  #include <asm/sclp.h>
++<<<<<<< HEAD
++=======
+ #include <asm/set_memory.h>
+ #include <asm/kasan.h>
+ #include <asm/dma-mapping.h>
+ #include <asm/uv.h>
++>>>>>>> 64e1f0c531d1 (s390/mm: force swiotlb for protected virtualization)
  
  pgd_t swapper_pg_dir[PTRS_PER_PGD] __section(.bss..swapper_pg_dir);
  
@@@ -139,13 -124,65 +148,67 @@@ void __init paging_init(void
  	free_area_init_nodes(max_zone_pfns);
  }
  
++<<<<<<< HEAD
++=======
+ void mark_rodata_ro(void)
+ {
+ 	unsigned long size = __end_ro_after_init - __start_ro_after_init;
+ 
+ 	set_memory_ro((unsigned long)__start_ro_after_init, size >> PAGE_SHIFT);
+ 	pr_info("Write protected read-only-after-init data: %luk\n", size >> 10);
+ }
+ 
+ int set_memory_encrypted(unsigned long addr, int numpages)
+ {
+ 	int i;
+ 
+ 	/* make specified pages unshared, (swiotlb, dma_free) */
+ 	for (i = 0; i < numpages; ++i) {
+ 		uv_remove_shared(addr);
+ 		addr += PAGE_SIZE;
+ 	}
+ 	return 0;
+ }
+ 
+ int set_memory_decrypted(unsigned long addr, int numpages)
+ {
+ 	int i;
+ 	/* make specified pages shared (swiotlb, dma_alloca) */
+ 	for (i = 0; i < numpages; ++i) {
+ 		uv_set_shared(addr);
+ 		addr += PAGE_SIZE;
+ 	}
+ 	return 0;
+ }
+ 
+ /* are we a protected virtualization guest? */
+ bool sev_active(void)
+ {
+ 	return is_prot_virt_guest();
+ }
+ 
+ /* protected virtualization */
+ static void pv_init(void)
+ {
+ 	if (!is_prot_virt_guest())
+ 		return;
+ 
+ 	/* make sure bounce buffers are shared */
+ 	swiotlb_init(1);
+ 	swiotlb_update_mem_attributes();
+ 	swiotlb_force = SWIOTLB_FORCE;
+ }
+ 
++>>>>>>> 64e1f0c531d1 (s390/mm: force swiotlb for protected virtualization)
  void __init mem_init(void)
  {
 -	cpumask_set_cpu(0, &init_mm.context.cpu_attach_mask);
 -	cpumask_set_cpu(0, mm_cpumask(&init_mm));
 +	unsigned long codesize, reservedpages, datasize, initsize;
  
 -	set_max_mapnr(max_low_pfn);
 +        max_mapnr = num_physpages = max_low_pfn;
          high_memory = (void *) __va(max_low_pfn * PAGE_SIZE);
  
+ 	pv_init();
+ 
  	/* Setup guest page hinting */
  	cmma_init();
  
* Unmerged path arch/s390/Kconfig
diff --git a/arch/s390/include/asm/mem_encrypt.h b/arch/s390/include/asm/mem_encrypt.h
new file mode 100644
index 000000000000..3eb018508190
--- /dev/null
+++ b/arch/s390/include/asm/mem_encrypt.h
@@ -0,0 +1,17 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef S390_MEM_ENCRYPT_H__
+#define S390_MEM_ENCRYPT_H__
+
+#ifndef __ASSEMBLY__
+
+#define sme_me_mask	0ULL
+
+static inline bool sme_active(void) { return false; }
+extern bool sev_active(void);
+
+int set_memory_encrypted(unsigned long addr, int numpages);
+int set_memory_decrypted(unsigned long addr, int numpages);
+
+#endif	/* __ASSEMBLY__ */
+
+#endif	/* S390_MEM_ENCRYPT_H__ */
* Unmerged path arch/s390/mm/init.c
