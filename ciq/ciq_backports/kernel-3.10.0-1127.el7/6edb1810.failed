xfs: refactor inode buffer verifier error logging

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 6edb181053f067cee64d4239830062cb40ddab00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/6edb1810.failed

When the inode buffer verifier encounters an error, it's much more
helpful to print a buffer from the offending inode instead of just the
start of the inode chunk buffer.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
(cherry picked from commit 6edb181053f067cee64d4239830062cb40ddab00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_inode_buf.c
#	fs/xfs/xfs_error.c
#	fs/xfs/xfs_error.h
diff --cc fs/xfs/libxfs/xfs_inode_buf.c
index 3aebe5129937,51019e5dc16d..000000000000
--- a/fs/xfs/libxfs/xfs_inode_buf.c
+++ b/fs/xfs/libxfs/xfs_inode_buf.c
@@@ -113,8 -115,6 +113,11 @@@ xfs_inode_buf_verify
  				return;
  			}
  
++<<<<<<< HEAD
 +			xfs_buf_ioerror(bp, -EFSCORRUPTED);
 +			xfs_verifier_error(bp);
++=======
++>>>>>>> 6edb181053f0 (xfs: refactor inode buffer verifier error logging)
  #ifdef DEBUG
  			xfs_alert(mp,
  				"bad inode magic/vsn daddr %lld #%d (magic=%x)",
diff --cc fs/xfs/xfs_error.c
index 388ce630c4b7,a63f5083f497..000000000000
--- a/fs/xfs/xfs_error.c
+++ b/fs/xfs/xfs_error.c
@@@ -332,19 -385,44 +369,56 @@@ xfs_buf_verifier_error
   */
  void
  xfs_verifier_error(
 -	struct xfs_buf		*bp,
 -	int			error,
 -	xfs_failaddr_t		failaddr)
 +	struct xfs_buf		*bp)
  {
++<<<<<<< HEAD
 +	struct xfs_mount *mp = bp->b_target->bt_mount;
 +
 +	xfs_alert(mp, "Metadata %s detected at %pS, %s block 0x%llx",
 +		  bp->b_error == -EFSBADCRC ? "CRC error" : "corruption",
 +		  __return_address, bp->b_ops->name, bp->b_bn);
 +
 +	xfs_alert(mp, "Unmount and run xfs_repair");
 +
 +	if (xfs_error_level >= XFS_ERRLEVEL_LOW) {
 +		xfs_alert(mp, "First 64 bytes of corrupted metadata buffer:");
 +		xfs_hex_dump(xfs_buf_offset(bp, 0), 64);
++=======
+ 	return xfs_buf_verifier_error(bp, error, "", xfs_buf_offset(bp, 0),
+ 			XFS_CORRUPTION_DUMP_LEN, failaddr);
+ }
+ 
+ /*
+  * Warnings for inode corruption problems.  Don't bother with the stack
+  * trace unless the error level is turned up high.
+  */
+ void
+ xfs_inode_verifier_error(
+ 	struct xfs_inode	*ip,
+ 	int			error,
+ 	const char		*name,
+ 	void			*buf,
+ 	size_t			bufsz,
+ 	xfs_failaddr_t		failaddr)
+ {
+ 	struct xfs_mount	*mp = ip->i_mount;
+ 	xfs_failaddr_t		fa;
+ 	int			sz;
+ 
+ 	fa = failaddr ? failaddr : __return_address;
+ 
+ 	xfs_alert(mp, "Metadata %s detected at %pS, inode 0x%llx %s",
+ 		  error == -EFSBADCRC ? "CRC error" : "corruption",
+ 		  fa, ip->i_ino, name);
+ 
+ 	xfs_alert(mp, "Unmount and run xfs_repair");
+ 
+ 	if (buf && xfs_error_level >= XFS_ERRLEVEL_LOW) {
+ 		sz = min_t(size_t, XFS_CORRUPTION_DUMP_LEN, bufsz);
+ 		xfs_alert(mp, "First %d bytes of corrupted metadata buffer:",
+ 				sz);
+ 		xfs_hex_dump(buf, sz);
++>>>>>>> 6edb181053f0 (xfs: refactor inode buffer verifier error logging)
  	}
  
  	if (xfs_error_level >= XFS_ERRLEVEL_HIGH)
diff --cc fs/xfs/xfs_error.h
index ea816c1bf8db,ce391349e78b..000000000000
--- a/fs/xfs/xfs_error.h
+++ b/fs/xfs/xfs_error.h
@@@ -21,11 -21,19 +21,23 @@@
  struct xfs_mount;
  
  extern void xfs_error_report(const char *tag, int level, struct xfs_mount *mp,
 -			const char *filename, int linenum,
 -			xfs_failaddr_t failaddr);
 +			const char *filename, int linenum, void *ra);
  extern void xfs_corruption_error(const char *tag, int level,
  			struct xfs_mount *mp, void *p, const char *filename,
++<<<<<<< HEAD
 +			int linenum, void *ra);
 +extern void xfs_verifier_error(struct xfs_buf *bp);
++=======
+ 			int linenum, xfs_failaddr_t failaddr);
+ extern void xfs_buf_verifier_error(struct xfs_buf *bp, int error,
+ 			const char *name, void *buf, size_t bufsz,
+ 			xfs_failaddr_t failaddr);
+ extern void xfs_verifier_error(struct xfs_buf *bp, int error,
+ 			xfs_failaddr_t failaddr);
+ extern void xfs_inode_verifier_error(struct xfs_inode *ip, int error,
+ 			const char *name, void *buf, size_t bufsz,
+ 			xfs_failaddr_t failaddr);
++>>>>>>> 6edb181053f0 (xfs: refactor inode buffer verifier error logging)
  
  #define	XFS_ERROR_REPORT(e, lvl, mp)	\
  	xfs_error_report(e, lvl, mp, __FILE__, __LINE__, __return_address)
* Unmerged path fs/xfs/libxfs/xfs_inode_buf.c
* Unmerged path fs/xfs/xfs_error.c
* Unmerged path fs/xfs/xfs_error.h
