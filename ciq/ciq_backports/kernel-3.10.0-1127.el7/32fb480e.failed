powercap/intel_rapl: Support multi-die/package

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Zhang Rui <rui.zhang@intel.com>
commit 32fb480e0a2cf1f71e4174d6477198c94dbc746c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/32fb480e.failed

RAPL "package" domains are actually implemented in hardware per-die.
Thus, the new multi-die/package systems have mulitple domains
within each physical package.

Update the intel_rapl driver to be "die aware" -- exporting multiple
domains within a single package, when present.  No change on single
die/package systems.

	Signed-off-by: Zhang Rui <rui.zhang@intel.com>
	Signed-off-by: Len Brown <len.brown@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: linux-pm@vger.kernel.org
Link: https://lkml.kernel.org/r/9fcb4719aeb7efccf3bc75ed8dd559e46121649f.1557769318.git.len.brown@intel.com

(cherry picked from commit 32fb480e0a2cf1f71e4174d6477198c94dbc746c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/powercap/intel_rapl.c
diff --cc drivers/powercap/intel_rapl.c
index bbf752feaa75,9202dbcef96d..000000000000
--- a/drivers/powercap/intel_rapl.c
+++ b/drivers/powercap/intel_rapl.c
@@@ -255,10 -260,13 +255,14 @@@ static const char * const rapl_domain_n
  };
  
  static struct powercap_control_type *control_type; /* PowerCap Controller */
 -static struct rapl_domain *platform_rapl_domain; /* Platform (PSys) domain */
  
  /* caller to ensure CPU hotplug lock is held */
 -static struct rapl_package *rapl_find_package_domain(int cpu)
 +static struct rapl_package *find_package_by_id(int id)
  {
++<<<<<<< HEAD
++=======
+ 	int id = topology_logical_die_id(cpu);
++>>>>>>> 32fb480e0a2c (powercap/intel_rapl: Support multi-die/package)
  	struct rapl_package *rp;
  
  	list_for_each_entry(rp, &rapl_packages, plist) {
@@@ -1520,19 -1457,18 +1524,23 @@@ static void rapl_remove_package(struct 
  }
  
  /* called from CPU hotplug notifier, hotplug lock held */
 -static struct rapl_package *rapl_add_package(int cpu)
 +static int rapl_add_package(int cpu)
  {
++<<<<<<< HEAD
++=======
+ 	int id = topology_logical_die_id(cpu);
++>>>>>>> 32fb480e0a2c (powercap/intel_rapl: Support multi-die/package)
  	struct rapl_package *rp;
 -	int ret;
 +	int ret, phy_package_id;
  
 +	phy_package_id = topology_physical_package_id(cpu);
  	rp = kzalloc(sizeof(struct rapl_package), GFP_KERNEL);
  	if (!rp)
 -		return ERR_PTR(-ENOMEM);
 +		return -ENOMEM;
  
  	/* add the new package to the list */
 -	rp->id = id;
 +	rp->id = phy_package_id;
 +	rp->nr_cpus = 1;
  	rp->lead_cpu = cpu;
  
  	/* check if the package contains valid domains */
* Unmerged path drivers/powercap/intel_rapl.c
