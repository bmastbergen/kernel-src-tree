get rid of DEBUG_WRITECOUNT

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 4597e695b8baa3e2620da89c7593be70cf20566b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/4597e695.failed

it only makes control flow in __fput() and friends more convoluted.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 4597e695b8baa3e2620da89c7593be70cf20566b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/configs/default_defconfig
#	fs/file_table.c
#	fs/open.c
#	include/linux/fs.h
#	lib/Kconfig.debug
diff --cc fs/file_table.c
index cfd92eac323a,ee20658a0647..000000000000
--- a/fs/file_table.c
+++ b/fs/file_table.c
@@@ -214,10 -209,9 +212,14 @@@ static void drop_file_write_access(stru
  
  	if (special_file(inode->i_mode))
  		return;
++<<<<<<< HEAD
 +	if (file_check_writeable(file) != 0)
 +		return;
++=======
+ 
+ 	put_write_access(inode);
++>>>>>>> 4597e695b8ba (get rid of DEBUG_WRITECOUNT)
  	__mnt_drop_write(mnt);
- 	file_release_write(file);
  }
  
  /* the real guts of fput() - releasing the last reference to file
diff --cc fs/open.c
index 0bdd69faf284,8d0b6adfe7b8..000000000000
--- a/fs/open.c
+++ b/fs/open.c
@@@ -727,8 -683,6 +727,11 @@@ static int do_dentry_open(struct file *
  		error = __get_file_write_access(inode, f->f_path.mnt);
  		if (error)
  			goto cleanup_file;
++<<<<<<< HEAD
 +		if (!special_file(inode->i_mode))
 +			file_take_write(f);
++=======
++>>>>>>> 4597e695b8ba (get rid of DEBUG_WRITECOUNT)
  	}
  
  	f->f_mapping = inode->i_mapping;
@@@ -771,15 -729,8 +774,19 @@@
  cleanup_all:
  	fops_put(f->f_op);
  	if (f->f_mode & FMODE_WRITE) {
 +		put_write_access(inode);
  		if (!special_file(inode->i_mode)) {
++<<<<<<< HEAD
 +			/*
 +			 * We don't consider this a real
 +			 * mnt_want/drop_write() pair
 +			 * because it all happenend right
 +			 * here, so just reset the state.
 +			 */
 +			file_reset_write(f);
++=======
+ 			put_write_access(inode);
++>>>>>>> 4597e695b8ba (get rid of DEBUG_WRITECOUNT)
  			__mnt_drop_write(f->f_path.mnt);
  		}
  	}
diff --cc include/linux/fs.h
index f4c0e7616f02,e80659ed78fc..000000000000
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@@ -869,16 -769,9 +869,13 @@@ static inline int ra_has_index(struct f
  		index <  ra->start + ra->size);
  }
  
- #define FILE_MNT_WRITE_TAKEN	1
- #define FILE_MNT_WRITE_RELEASED	2
- 
  struct file {
 +	/*
 +	 * fu_list becomes invalid after file_free is called and queued via
 +	 * fu_rcuhead for RCU freeing
 +	 */
  	union {
 -		struct llist_node	fu_llist;
 +		struct list_head	fu_list;
  		struct rcu_head 	fu_rcuhead;
  	} f_u;
  	struct path		f_path;
@@@ -921,13 -806,7 +918,17 @@@
  	struct list_head	f_tfile_llink;
  #endif /* #ifdef CONFIG_EPOLL */
  	struct address_space	*f_mapping;
++<<<<<<< HEAD
 +#ifdef CONFIG_DEBUG_WRITECOUNT
 +	unsigned long f_mnt_write_state;
 +#endif
 +#ifndef __GENKSYMS__
 +	struct mutex		f_pos_lock;
 +#endif
 +};
++=======
+ } __attribute__((aligned(4)));	/* lest something weird decides that 2 is OK */
++>>>>>>> 4597e695b8ba (get rid of DEBUG_WRITECOUNT)
  
  struct file_handle {
  	__u32 handle_bytes;
diff --cc lib/Kconfig.debug
index 9e4ffd78d886,7a0859314bdf..000000000000
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@@ -780,88 -1030,6 +780,91 @@@ config DEBUG_BUGVERBOS
  	  of the BUG call as well as the EIP and oops trace.  This aids
  	  debugging but costs about 70-100K of memory.
  
++<<<<<<< HEAD
 +config DEBUG_INFO
 +	bool "Compile the kernel with debug info"
 +	depends on DEBUG_KERNEL
 +	help
 +          If you say Y here the resulting kernel image will include
 +	  debugging info resulting in a larger kernel image.
 +	  This adds debug symbols to the kernel and modules (gcc -g), and
 +	  is needed if you intend to use kernel crashdump or binary object
 +	  tools like crash, kgdb, LKCD, gdb, etc on the kernel.
 +	  Say Y here only if you plan to debug the kernel.
 +
 +	  If unsure, say N.
 +
 +config DEBUG_INFO_REDUCED
 +	bool "Reduce debugging information"
 +	depends on DEBUG_INFO
 +	help
 +	  If you say Y here gcc is instructed to generate less debugging
 +	  information for structure types. This means that tools that
 +	  need full debugging information (like kgdb or systemtap) won't
 +	  be happy. But if you merely need debugging information to
 +	  resolve line numbers there is no loss. Advantage is that
 +	  build directory object sizes shrink dramatically over a full
 +	  DEBUG_INFO build and compile times are reduced too.
 +	  Only works with newer gcc versions.
 +
 +config DEBUG_VM
 +	bool "Debug VM"
 +	depends on DEBUG_KERNEL
 +	help
 +	  Enable this to turn on extended checks in the virtual-memory system
 +          that may impact performance.
 +
 +	  If unsure, say N.
 +
 +config DEBUG_VM_RB
 +	bool "Debug VM red-black trees"
 +	depends on DEBUG_VM
 +	help
 +	  Enable this to turn on more extended checks in the virtual-memory
 +	  system that may impact performance.
 +
 +	  If unsure, say N.
 +
 +config DEBUG_VIRTUAL
 +	bool "Debug VM translations"
 +	depends on DEBUG_KERNEL && X86
 +	help
 +	  Enable some costly sanity checks in virtual to page code. This can
 +	  catch mistakes with virt_to_page() and friends.
 +
 +	  If unsure, say N.
 +
 +config DEBUG_NOMMU_REGIONS
 +	bool "Debug the global anon/private NOMMU mapping region tree"
 +	depends on DEBUG_KERNEL && !MMU
 +	help
 +	  This option causes the global tree of anonymous and private mapping
 +	  regions to be regularly checked for invalid topology.
 +
 +config DEBUG_WRITECOUNT
 +	bool "Debug filesystem writers count"
 +	depends on DEBUG_KERNEL
 +	help
 +	  Enable this to catch wrong use of the writers count in struct
 +	  vfsmount.  This will increase the size of each file struct by
 +	  32 bits.
 +
 +	  If unsure, say N.
 +
 +config DEBUG_MEMORY_INIT
 +	bool "Debug memory initialisation" if EXPERT
 +	default !EXPERT
 +	help
 +	  Enable this for additional checks during memory initialisation.
 +	  The sanity checks verify aspects of the VM such as the memory model
 +	  and other information provided by the architecture. Verbose
 +	  information will be printed at KERN_DEBUG loglevel depending
 +	  on the mminit_loglevel= command-line option.
 +
 +	  If unsure, say Y
 +
++=======
++>>>>>>> 4597e695b8ba (get rid of DEBUG_WRITECOUNT)
  config DEBUG_LIST
  	bool "Debug linked list manipulation"
  	depends on DEBUG_KERNEL
* Unmerged path arch/s390/configs/default_defconfig
diff --git a/arch/powerpc/configs/ppc6xx_defconfig b/arch/powerpc/configs/ppc6xx_defconfig
index be1cb6ea3a36..403a75b78847 100644
--- a/arch/powerpc/configs/ppc6xx_defconfig
+++ b/arch/powerpc/configs/ppc6xx_defconfig
@@ -1244,7 +1244,6 @@ CONFIG_DEBUG_SPINLOCK_SLEEP=y
 CONFIG_DEBUG_HIGHMEM=y
 CONFIG_DEBUG_INFO=y
 CONFIG_DEBUG_VM=y
-CONFIG_DEBUG_WRITECOUNT=y
 CONFIG_DEBUG_LIST=y
 CONFIG_DEBUG_SG=y
 # CONFIG_RCU_CPU_STALL_DETECTOR is not set
diff --git a/arch/powerpc/configs/ps3_defconfig b/arch/powerpc/configs/ps3_defconfig
index 139a8308070c..fdee37fab81c 100644
--- a/arch/powerpc/configs/ps3_defconfig
+++ b/arch/powerpc/configs/ps3_defconfig
@@ -174,7 +174,6 @@ CONFIG_DETECT_HUNG_TASK=y
 CONFIG_PROVE_LOCKING=y
 CONFIG_DEBUG_LOCKDEP=y
 CONFIG_DEBUG_INFO=y
-CONFIG_DEBUG_WRITECOUNT=y
 CONFIG_DEBUG_MEMORY_INIT=y
 CONFIG_DEBUG_LIST=y
 CONFIG_RCU_CPU_STALL_TIMEOUT=60
* Unmerged path arch/s390/configs/default_defconfig
diff --git a/arch/sh/configs/rsk7203_defconfig b/arch/sh/configs/rsk7203_defconfig
index 4e5229b0c5bb..47236573db83 100644
--- a/arch/sh/configs/rsk7203_defconfig
+++ b/arch/sh/configs/rsk7203_defconfig
@@ -128,7 +128,6 @@ CONFIG_DEBUG_MUTEXES=y
 CONFIG_DEBUG_SPINLOCK_SLEEP=y
 CONFIG_DEBUG_INFO=y
 CONFIG_DEBUG_VM=y
-CONFIG_DEBUG_WRITECOUNT=y
 CONFIG_DEBUG_LIST=y
 CONFIG_DEBUG_SG=y
 CONFIG_FRAME_POINTER=y
diff --git a/arch/xtensa/configs/iss_defconfig b/arch/xtensa/configs/iss_defconfig
index 77c52f80187a..1b97eabd91a4 100644
--- a/arch/xtensa/configs/iss_defconfig
+++ b/arch/xtensa/configs/iss_defconfig
@@ -628,7 +628,6 @@ CONFIG_SCHED_DEBUG=y
 # CONFIG_DEBUG_KOBJECT is not set
 # CONFIG_DEBUG_INFO is not set
 # CONFIG_DEBUG_VM is not set
-# CONFIG_DEBUG_WRITECOUNT is not set
 # CONFIG_DEBUG_MEMORY_INIT is not set
 # CONFIG_DEBUG_LIST is not set
 # CONFIG_DEBUG_SG is not set
diff --git a/arch/xtensa/configs/s6105_defconfig b/arch/xtensa/configs/s6105_defconfig
index 4799c6a526b5..59d0c1c954c4 100644
--- a/arch/xtensa/configs/s6105_defconfig
+++ b/arch/xtensa/configs/s6105_defconfig
@@ -570,7 +570,6 @@ CONFIG_DEBUG_SPINLOCK_SLEEP=y
 # CONFIG_DEBUG_INFO is not set
 # CONFIG_DEBUG_VM is not set
 CONFIG_DEBUG_NOMMU_REGIONS=y
-# CONFIG_DEBUG_WRITECOUNT is not set
 # CONFIG_DEBUG_MEMORY_INIT is not set
 # CONFIG_DEBUG_LIST is not set
 # CONFIG_DEBUG_SG is not set
* Unmerged path fs/file_table.c
* Unmerged path fs/open.c
* Unmerged path include/linux/fs.h
* Unmerged path lib/Kconfig.debug
