iommu/amd: Flush old domains in kdump kernel

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Stuart Hayes <stuart.w.hayes@gmail.com>
commit 36b7200f67dfe75b416b5281ed4ace9927b513bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/36b7200f.failed

When devices are attached to the amd_iommu in a kdump kernel, the old device
table entries (DTEs), which were copied from the crashed kernel, will be
overwritten with a new domain number.  When the new DTE is written, the IOMMU
is told to flush the DTE from its internal cache--but it is not told to flush
the translation cache entries for the old domain number.

Without this patch, AMD systems using the tg3 network driver fail when kdump
tries to save the vmcore to a network system, showing network timeouts and
(sometimes) IOMMU errors in the kernel log.

This patch will flush IOMMU translation cache entries for the old domain when
a DTE gets overwritten with a new domain number.

	Signed-off-by: Stuart Hayes <stuart.w.hayes@gmail.com>
Fixes: 3ac3e5ee5ed5 ('iommu/amd: Copy old trans table from old kernel')
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 36b7200f67dfe75b416b5281ed4ace9927b513bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index 0e2fe8211528,f853b96ee547..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -1154,7 -1143,18 +1154,22 @@@ static void iommu_flush_tlb_all(struct 
  	iommu_completion_wait(iommu);
  }
  
++<<<<<<< HEAD
 +static void iommu_flush_all(struct amd_iommu *iommu)
++=======
+ static void amd_iommu_flush_tlb_domid(struct amd_iommu *iommu, u32 dom_id)
+ {
+ 	struct iommu_cmd cmd;
+ 
+ 	build_inv_iommu_pages(&cmd, 0, CMD_INV_IOMMU_ALL_PAGES_ADDRESS,
+ 			      dom_id, 1);
+ 	iommu_queue_command(iommu, &cmd);
+ 
+ 	iommu_completion_wait(iommu);
+ }
+ 
+ static void amd_iommu_flush_all(struct amd_iommu *iommu)
++>>>>>>> 36b7200f67df (iommu/amd: Flush old domains in kdump kernel)
  {
  	struct iommu_cmd cmd;
  
@@@ -2112,12 -1931,23 +2128,24 @@@ static void set_dte_entry(u16 devid, st
  		flags    |= tmp;
  	}
  
 -	flags &= ~DEV_DOMID_MASK;
 +
 +	flags &= ~(DTE_FLAG_SA | DEV_DOMID_MASK);
  	flags |= domain->id;
  
+ 	old_domid = amd_iommu_dev_table[devid].data[1] & DEV_DOMID_MASK;
  	amd_iommu_dev_table[devid].data[1]  = flags;
  	amd_iommu_dev_table[devid].data[0]  = pte_root;
+ 
+ 	/*
+ 	 * A kdump kernel might be replacing a domain ID that was copied from
+ 	 * the previous kernel--if so, it needs to flush the translation cache
+ 	 * entries for the old domain ID that is being overwritten
+ 	 */
+ 	if (old_domid) {
+ 		struct amd_iommu *iommu = amd_iommu_rlookup_table[devid];
+ 
+ 		amd_iommu_flush_tlb_domid(iommu, old_domid);
+ 	}
  }
  
  static void clear_dte_entry(u16 devid)
* Unmerged path drivers/iommu/amd_iommu.c
