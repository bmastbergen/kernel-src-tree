netfilter/ipvs: clear ipvs_property flag when SKB net namespace changed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Ye Yin <hustcat@gmail.com>
commit 2b5ec1a5f9738ee7bf8f5ec0526e75e00362c48f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/2b5ec1a5.failed

When run ipvs in two different network namespace at the same host, and one
ipvs transport network traffic to the other network namespace ipvs.
'ipvs_property' flag will make the second ipvs take no effect. So we should
clear 'ipvs_property' when SKB network namespace changed.

Fixes: 621e84d6f373 ("dev: introduce skb_scrub_packet()")
	Signed-off-by: Ye Yin <hustcat@gmail.com>
	Signed-off-by: Wei Zhou <chouryzhou@gmail.com>
	Signed-off-by: Julian Anastasov <ja@ssi.bg>
	Signed-off-by: Simon Horman <horms@verge.net.au>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2b5ec1a5f9738ee7bf8f5ec0526e75e00362c48f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index 9a7838cce01f,e140ba49b30a..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -4409,6 -4864,8 +4409,11 @@@ void skb_scrub_packet(struct sk_buff *s
  	if (!xnet)
  		return;
  
++<<<<<<< HEAD
++=======
+ 	ipvs_reset(skb);
+ 	skb_orphan(skb);
++>>>>>>> 2b5ec1a5f973 (netfilter/ipvs: clear ipvs_property flag when SKB net namespace changed)
  	skb->mark = 0;
  }
  EXPORT_SYMBOL_GPL(skb_scrub_packet);
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 79212738b4b2..1b479fa55db4 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -3671,6 +3671,13 @@ static inline void nf_reset_trace(struct sk_buff *skb)
 #endif
 }
 
+static inline void ipvs_reset(struct sk_buff *skb)
+{
+#if IS_ENABLED(CONFIG_IP_VS)
+	skb->ipvs_property = 0;
+#endif
+}
+
 /* Note: This doesn't put any conntrack and bridge info in dst. */
 static inline void __nf_copy(struct sk_buff *dst, const struct sk_buff *src)
 {
* Unmerged path net/core/skbuff.c
