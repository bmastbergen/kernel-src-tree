x86/insn-eval: Fix use-after-free access to LDT entry

jira LE-1907
cve CVE-2019-13233
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
Rebuild_CHGLOG: - [x86] insn-eval: Fix use-after-free access to LDT entry (Rafael Aquini) [1728558] {CVE-2019-13233}
Rebuild_FUZZ: 96.08%
commit-author Jann Horn <jannh@google.com>
commit de9f869616dd95e95c00bdd6b0fcd3421e8a4323
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/de9f8696.failed

get_desc() computes a pointer into the LDT while holding a lock that
protects the LDT from being freed, but then drops the lock and returns the
(now potentially dangling) pointer to its caller.

Fix it by giving the caller a copy of the LDT entry instead.

Fixes: 670f928ba09b ("x86/insn-eval: Add utility function to get segment descriptor")
	Cc: stable@vger.kernel.org
	Signed-off-by: Jann Horn <jannh@google.com>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit de9f869616dd95e95c00bdd6b0fcd3421e8a4323)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/lib/insn-eval.c
diff --cc arch/x86/lib/insn-eval.c
index e7905c5246e8,306c3a0902ba..000000000000
--- a/arch/x86/lib/insn-eval.c
+++ b/arch/x86/lib/insn-eval.c
@@@ -572,8 -575,9 +573,8 @@@ static bool get_desc(struct desc_struc
  	struct desc_ptr gdt_desc = {0, 0};
  	unsigned long desc_base;
  
 -#ifdef CONFIG_MODIFY_LDT_SYSCALL
  	if ((sel & SEGMENT_TI_MASK) == SEGMENT_LDT) {
- 		struct desc_struct *desc = NULL;
+ 		bool success = false;
  		struct ldt_struct *ldt;
  
  		/* Bits [15:3] contain the index of the desired entry. */
@@@ -581,14 -585,16 +582,21 @@@
  
  		mutex_lock(&current->active_mm->context.lock);
  		ldt = current->active_mm->context.ldt;
++<<<<<<< HEAD
 +		if (ldt && sel < ldt->size)
 +			desc = &ldt->entries[sel];
++=======
+ 		if (ldt && sel < ldt->nr_entries) {
+ 			*out = ldt->entries[sel];
+ 			success = true;
+ 		}
++>>>>>>> de9f869616dd (x86/insn-eval: Fix use-after-free access to LDT entry)
  
  		mutex_unlock(&current->active_mm->context.lock);
  
- 		return desc;
+ 		return success;
  	}
 -#endif
 +
  	native_store_gdt(&gdt_desc);
  
  	/*
@@@ -736,9 -741,9 +743,9 @@@ static unsigned long get_seg_limit(stru
   *
   * -EINVAL on error.
   */
 -int insn_get_code_seg_params(struct pt_regs *regs)
 +char insn_get_code_seg_params(struct pt_regs *regs)
  {
- 	struct desc_struct *desc;
+ 	struct desc_struct desc;
  	short sel;
  
  	if (v8086_mode(regs))
* Unmerged path arch/x86/lib/insn-eval.c
