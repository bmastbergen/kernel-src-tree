x86/boot/64: Round memory hole size up to next PMD page

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Steve Wahl <steve.wahl@hpe.com>
commit 1869dbe87cb94dc9a218ae1d9301dea3678bd4ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/1869dbe8.failed

The kernel image map is created using PMD pages, which can include
some extra space beyond what's actually needed.  Round the size of the
memory hole we search for up to the next PMD boundary, to be certain
all of the space to be mapped is usable RAM and includes no reserved
areas.

	Signed-off-by: Steve Wahl <steve.wahl@hpe.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
	Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Brijesh Singh <brijesh.singh@amd.com>
	Cc: dimitri.sivanich@hpe.com
	Cc: Feng Tang <feng.tang@intel.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Jordan Borgner <mail@jordan-borgner.de>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: mike.travis@hpe.com
	Cc: russ.anderson@hpe.com
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: x86-ml <x86@kernel.org>
	Cc: Zhenzhong Duan <zhenzhong.duan@oracle.com>
Link: https://lkml.kernel.org/r/df4f49f05c0c27f108234eb93db5c613d09ea62e.1569358539.git.steve.wahl@hpe.com
(cherry picked from commit 1869dbe87cb94dc9a218ae1d9301dea3678bd4ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/misc.c
diff --cc arch/x86/boot/compressed/misc.c
index 63c1b1118316,9652d5c2afda..000000000000
--- a/arch/x86/boot/compressed/misc.c
+++ b/arch/x86/boot/compressed/misc.c
@@@ -363,15 -402,16 +380,24 @@@ asmlinkage void *extract_kernel(void *r
  	debug_putaddr(output);
  	debug_putaddr(output_len);
  	debug_putaddr(kernel_total_size);
+ 	debug_putaddr(needed_size);
  
++<<<<<<< HEAD
 +	/*
 +	 * The memory hole needed for the kernel is the larger of either
 +	 * the entire decompressed kernel plus relocation table, or the
 +	 * entire decompressed kernel plus .bss and .brk sections.
 +	 */
++=======
+ #ifdef CONFIG_X86_64
+ 	/* Report address of 32-bit trampoline */
+ 	debug_putaddr(trampoline_32bit);
+ #endif
+ 
++>>>>>>> 1869dbe87cb9 (x86/boot/64: Round memory hole size up to next PMD page)
  	choose_random_location((unsigned long)input_data, input_len,
  				(unsigned long *)&output,
- 				max(output_len, kernel_total_size),
+ 				needed_size,
  				&virt_addr);
  
  	/* Validate memory location choices. */
* Unmerged path arch/x86/boot/compressed/misc.c
