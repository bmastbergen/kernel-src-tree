percpu: manage chunks based on contig_bits instead of free_bytes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Dennis Zhou <dennis@kernel.org>
commit 3e54097beb228ddcd73bb2fd18bafaa1062e9fe4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/3e54097b.failed

When a chunk becomes fragmented, it can end up having a large number of
small allocation areas free. The free_bytes sorting of chunks leads to
unnecessary checking of chunks that cannot satisfy the allocation.
Switch to contig_bits sorting to prevent scanning chunks that may not be
able to service the allocation request.

	Signed-off-by: Dennis Zhou <dennis@kernel.org>
	Reviewed-by: Peng Fan <peng.fan@nxp.com>
(cherry picked from commit 3e54097beb228ddcd73bb2fd18bafaa1062e9fe4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/percpu.c
diff --cc mm/percpu.c
index 60a1f468f968,fc1e8efb5222..000000000000
--- a/mm/percpu.c
+++ b/mm/percpu.c
@@@ -221,10 -231,10 +221,14 @@@ static int pcpu_size_to_slot(int size
  
  static int pcpu_chunk_slot(const struct pcpu_chunk *chunk)
  {
 -	if (chunk->free_bytes < PCPU_MIN_ALLOC_SIZE || chunk->contig_bits == 0)
 +	if (chunk->free_size < sizeof(int) || chunk->contig_hint < sizeof(int))
  		return 0;
  
++<<<<<<< HEAD
 +	return pcpu_size_to_slot(chunk->free_size);
++=======
+ 	return pcpu_size_to_slot(chunk->contig_bits * PCPU_MIN_ALLOC_SIZE);
++>>>>>>> 3e54097beb22 (percpu: manage chunks based on contig_bits instead of free_bytes)
  }
  
  /* set the pointer to a chunk in a page struct */
* Unmerged path mm/percpu.c
