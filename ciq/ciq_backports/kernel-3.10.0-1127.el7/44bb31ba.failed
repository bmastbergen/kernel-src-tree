GFS2: gfs2_create_inode(): don't bother with d_splice_alias()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Al Viro <viro@ZenIV.linux.org.uk>
commit 44bb31bac555b0faf2e7068f3a953d5b23883dc9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/44bb31ba.failed

dentry is always hashed and negative, inode - non-error, non-NULL and
non-directory.  In such conditions d_splice_alias() is equivalent to
"d_instantiate(dentry, inode) and return NULL", which simplifies the
downstream code and is consistent with the "have to create a new object"
case.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

(cherry picked from commit 44bb31bac555b0faf2e7068f3a953d5b23883dc9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/inode.c
diff --cc fs/gfs2/inode.c
index faf17643995a,9e8545bbc55c..000000000000
--- a/fs/gfs2/inode.c
+++ b/fs/gfs2/inode.c
@@@ -553,11 -595,11 +553,16 @@@ static int gfs2_create_inode(struct ino
  	struct inode *inode = NULL;
  	struct gfs2_inode *dip = GFS2_I(dir), *ip;
  	struct gfs2_sbd *sdp = GFS2_SB(&dip->i_inode);
++<<<<<<< HEAD
 +	struct gfs2_glock *io_gl = NULL;
 +	struct dentry *d;
 +	int error, free_vfs_inode = 1;
++=======
+ 	struct gfs2_glock *io_gl;
+ 	int error, free_vfs_inode = 0;
++>>>>>>> 44bb31bac555 (GFS2: gfs2_create_inode(): don't bother with d_splice_alias())
  	u32 aflags = 0;
 -	unsigned blocks = 1;
 -	struct gfs2_diradd da = { .bh = NULL, .save_loc = 1, };
 +	int arq;
  
  	if (!name->len || name->len > GFS2_FNAMESIZE)
  		return -ENAMETOOLONG;
* Unmerged path fs/gfs2/inode.c
