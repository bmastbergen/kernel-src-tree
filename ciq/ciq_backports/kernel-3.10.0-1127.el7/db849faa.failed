net/mlx5e: Rx, Fix checksum calculation for new hardware

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit db849faa9bef993a1379dc510623f750a72fa7ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/db849faa.failed

CQE checksum full mode in new HW, provides a full checksum of rx frame.
Covering bytes starting from eth protocol up to last byte in the received
frame (frame_size - ETH_HLEN), as expected by the stack.

Fixing up skb->csum by the driver is not required in such case. This fix
is to avoid wrong checksum calculation in drivers which already support
the new hardware with the new checksum mode.

Fixes: 85327a9c4150 ("net/mlx5: Update the list of the PCI supported devices")
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit db849faa9bef993a1379dc510623f750a72fa7ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 4ef3dfcdb610,8a5f9411cac6..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -789,11 -889,8 +795,16 @@@ static inline void mlx5e_handle_csum(st
  			skb->csum = csum_partial(skb->data + ETH_HLEN,
  						 network_depth - ETH_HLEN,
  						 skb->csum);
++<<<<<<< HEAD
 +		if (unlikely(netdev->features & NETIF_F_RXFCS))
 +			skb->csum = csum_block_add(skb->csum,
 +						   (__force __wsum)mlx5e_get_fcs(skb),
 +						   skb->len - ETH_FCS_LEN);
 +		stats->csum_complete++;
++=======
+ 
+ 		mlx5e_skb_padding_csum(skb, network_depth, proto, stats);
++>>>>>>> db849faa9bef (net/mlx5e: Rx, Fix checksum calculation for new hardware)
  		return;
  	}
  
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index 8240fe5a7c81..9f4aecba54fd 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -302,6 +302,7 @@ enum {
 	MLX5E_RQ_STATE_ENABLED,
 	MLX5E_RQ_STATE_AM,
 	MLX5E_RQ_STATE_NO_CSUM_COMPLETE,
+	MLX5E_RQ_STATE_CSUM_FULL, /* cqe_csum_full hw bit is set */
 };
 
 struct mlx5e_cq {
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index b820d9111cdb..1cc20ff2ef8c 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -943,6 +943,9 @@ static int mlx5e_open_rq(struct mlx5e_channel *c,
 	if (err)
 		goto err_destroy_rq;
 
+	if (MLX5_CAP_ETH(c->mdev, cqe_checksum_full))
+		__set_bit(MLX5E_RQ_STATE_CSUM_FULL, &c->rq.state);
+
 	if (params->rx_dim_enabled)
 		__set_bit(MLX5E_RQ_STATE_AM, &c->rq.state);
 
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --git a/include/linux/mlx5/mlx5_ifc.h b/include/linux/mlx5/mlx5_ifc.h
index a901876b6806..178070346e57 100644
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@ -711,7 +711,8 @@ struct mlx5_ifc_per_protocol_networking_offload_caps_bits {
 	u8         swp[0x1];
 	u8         swp_csum[0x1];
 	u8         swp_lso[0x1];
-	u8         reserved_at_23[0xd];
+	u8         cqe_checksum_full[0x1];
+	u8         reserved_at_24[0xc];
 	u8         max_vxlan_udp_ports[0x8];
 	u8         reserved_at_38[0x6];
 	u8         max_geneve_opt_len[0x1];
