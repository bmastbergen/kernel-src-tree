percpu: migrate percpu data structures to internal header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Dennis Zhou <dennisz@fb.com>
commit 8fa3ed8014ac792a4c76d585b5c0f68bd202ff6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/8fa3ed80.failed

Migrates pcpu_chunk definition and a few percpu static variables to an
internal header file from mm/percpu.c. These will be used with debugfs
to expose statistics about percpu memory improving visibility regarding
allocations and fragmentation.

	Signed-off-by: Dennis Zhou <dennisz@fb.com>
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit 8fa3ed8014ac792a4c76d585b5c0f68bd202ff6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/percpu.c
diff --cc mm/percpu.c
index c3b003f3ebc0,75ac982c19df..000000000000
--- a/mm/percpu.c
+++ b/mm/percpu.c
@@@ -101,53 -105,35 +103,66 @@@
  #define __pcpu_ptr_to_addr(ptr)		(void __force *)(ptr)
  #endif	/* CONFIG_SMP */
  
++<<<<<<< HEAD
 +struct pcpu_chunk {
 +	struct list_head	list;		/* linked to pcpu_slot lists */
 +	int			free_size;	/* free bytes in the chunk */
 +	int			contig_hint;	/* max contiguous size hint */
 +	void			*base_addr;	/* base address of this chunk */
 +
 +	int			map_used;	/* # of map entries used before the sentry */
 +	int			map_alloc;	/* # of map entries allocated */
 +	int			*map;		/* allocation map */
 +	struct list_head	map_extend_list;/* on pcpu_map_extend_chunks */
 +
 +	void			*data;		/* chunk data */
 +	int			first_free;	/* no free below this */
 +	bool			immutable;	/* no [de]population allowed */
 +	int			nr_populated;	/* # of populated pages */
 +	unsigned long		populated[];	/* populated bitmap */
 +};
 +
 +static int pcpu_unit_pages __read_mostly;
 +static int pcpu_unit_size __read_mostly;
 +static int pcpu_nr_units __read_mostly;
 +static int pcpu_atom_size __read_mostly;
 +static int pcpu_nr_slots __read_mostly;
 +static size_t pcpu_chunk_struct_size __read_mostly;
++=======
+ static int pcpu_unit_pages __ro_after_init;
+ static int pcpu_unit_size __ro_after_init;
+ static int pcpu_nr_units __ro_after_init;
+ static int pcpu_atom_size __ro_after_init;
+ int pcpu_nr_slots __ro_after_init;
+ static size_t pcpu_chunk_struct_size __ro_after_init;
++>>>>>>> 8fa3ed8014ac (percpu: migrate percpu data structures to internal header)
  
  /* cpus with the lowest and highest unit addresses */
 -static unsigned int pcpu_low_unit_cpu __ro_after_init;
 -static unsigned int pcpu_high_unit_cpu __ro_after_init;
 +static unsigned int pcpu_low_unit_cpu __read_mostly;
 +static unsigned int pcpu_high_unit_cpu __read_mostly;
  
  /* the address of the first chunk which starts with the kernel static area */
 -void *pcpu_base_addr __ro_after_init;
 +void *pcpu_base_addr __read_mostly;
  EXPORT_SYMBOL_GPL(pcpu_base_addr);
  
 -static const int *pcpu_unit_map __ro_after_init;		/* cpu -> unit */
 -const unsigned long *pcpu_unit_offsets __ro_after_init;	/* cpu -> unit offset */
 +static const int *pcpu_unit_map __read_mostly;		/* cpu -> unit */
 +const unsigned long *pcpu_unit_offsets __read_mostly;	/* cpu -> unit offset */
  
  /* group information, used for vm allocation */
 -static int pcpu_nr_groups __ro_after_init;
 -static const unsigned long *pcpu_group_offsets __ro_after_init;
 -static const size_t *pcpu_group_sizes __ro_after_init;
 +static int pcpu_nr_groups __read_mostly;
 +static const unsigned long *pcpu_group_offsets __read_mostly;
 +static const size_t *pcpu_group_sizes __read_mostly;
  
  /*
   * The first chunk which always exists.  Note that unlike other
   * chunks, this one can be allocated and mapped in several different
   * ways and thus often doesn't live in the vmalloc area.
   */
++<<<<<<< HEAD
 +static struct pcpu_chunk *pcpu_first_chunk;
++=======
+ struct pcpu_chunk *pcpu_first_chunk __ro_after_init;
++>>>>>>> 8fa3ed8014ac (percpu: migrate percpu data structures to internal header)
  
  /*
   * Optional reserved chunk.  This chunk reserves part of the first
@@@ -156,13 -142,13 +171,22 @@@
   * area doesn't exist, the following variables contain NULL and 0
   * respectively.
   */
++<<<<<<< HEAD
 +static struct pcpu_chunk *pcpu_reserved_chunk;
 +static int pcpu_reserved_chunk_limit;
++=======
+ struct pcpu_chunk *pcpu_reserved_chunk __ro_after_init;
+ static int pcpu_reserved_chunk_limit __ro_after_init;
++>>>>>>> 8fa3ed8014ac (percpu: migrate percpu data structures to internal header)
  
- static DEFINE_SPINLOCK(pcpu_lock);	/* all internal data structures */
+ DEFINE_SPINLOCK(pcpu_lock);	/* all internal data structures */
  static DEFINE_MUTEX(pcpu_alloc_mutex);	/* chunk create/destroy, [de]pop, map ext */
  
++<<<<<<< HEAD
 +static struct list_head *pcpu_slot __read_mostly; /* chunk list slots */
++=======
+ struct list_head *pcpu_slot __ro_after_init; /* chunk list slots */
++>>>>>>> 8fa3ed8014ac (percpu: migrate percpu data structures to internal header)
  
  /* chunks which need their map areas extended, protected by pcpu_lock */
  static LIST_HEAD(pcpu_map_extend_chunks);
diff --git a/mm/percpu-internal.h b/mm/percpu-internal.h
new file mode 100644
index 000000000000..68bf18522a6d
--- /dev/null
+++ b/mm/percpu-internal.h
@@ -0,0 +1,33 @@
+#ifndef _MM_PERCPU_INTERNAL_H
+#define _MM_PERCPU_INTERNAL_H
+
+#include <linux/types.h>
+#include <linux/percpu.h>
+
+struct pcpu_chunk {
+	struct list_head	list;		/* linked to pcpu_slot lists */
+	int			free_size;	/* free bytes in the chunk */
+	int			contig_hint;	/* max contiguous size hint */
+	void			*base_addr;	/* base address of this chunk */
+
+	int			map_used;	/* # of map entries used before the sentry */
+	int			map_alloc;	/* # of map entries allocated */
+	int			*map;		/* allocation map */
+	struct list_head	map_extend_list;/* on pcpu_map_extend_chunks */
+
+	void			*data;		/* chunk data */
+	int			first_free;	/* no free below this */
+	bool			immutable;	/* no [de]population allowed */
+	int			nr_populated;	/* # of populated pages */
+	unsigned long		populated[];	/* populated bitmap */
+};
+
+extern spinlock_t pcpu_lock;
+
+extern struct list_head *pcpu_slot;
+extern int pcpu_nr_slots;
+
+extern struct pcpu_chunk *pcpu_first_chunk;
+extern struct pcpu_chunk *pcpu_reserved_chunk;
+
+#endif
* Unmerged path mm/percpu.c
