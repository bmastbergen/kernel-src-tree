floppy: fix out-of-bounds read in copy_buffer

jira LE-1907
cve CVE-2019-14283
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Denis Efremov <efremov@ispras.ru>
commit da99466ac243f15fbba65bd261bfc75ffa1532b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/da99466a.failed

This fixes a global out-of-bounds read access in the copy_buffer
function of the floppy driver.

The FDDEFPRM ioctl allows one to set the geometry of a disk.  The sect
and head fields (unsigned int) of the floppy_drive structure are used to
compute the max_sector (int) in the make_raw_rw_request function.  It is
possible to overflow the max_sector.  Next, max_sector is passed to the
copy_buffer function and used in one of the memcpy calls.

An unprivileged user could trigger the bug if the device is accessible,
but requires a floppy disk to be inserted.

The patch adds the check for the .sect * .head multiplication for not
overflowing in the set_geometry function.

The bug was found by syzkaller.

	Signed-off-by: Denis Efremov <efremov@ispras.ru>
	Tested-by: Willy Tarreau <w@1wt.eu>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit da99466ac243f15fbba65bd261bfc75ffa1532b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/floppy.c
diff --cc drivers/block/floppy.c
index 5066fd80a6b6,fee57f7f3821..000000000000
--- a/drivers/block/floppy.c
+++ b/drivers/block/floppy.c
@@@ -3219,8 -3233,12 +3219,17 @@@ static int set_geometry(unsigned int cm
  	int cnt;
  
  	/* sanity checking for parameters. */
++<<<<<<< HEAD
 +	if (g->sect <= 0 ||
 +	    g->head <= 0 ||
++=======
+ 	if ((int)g->sect <= 0 ||
+ 	    (int)g->head <= 0 ||
+ 	    /* check for overflow in max_sector */
+ 	    (int)(g->sect * g->head) <= 0 ||
+ 	    /* check for zero in F_SECT_PER_TRACK */
+ 	    (unsigned char)((g->sect << 2) >> FD_SIZECODE(g)) == 0 ||
++>>>>>>> da99466ac243 (floppy: fix out-of-bounds read in copy_buffer)
  	    g->track <= 0 || g->track > UDP->tracks >> STRETCH(g) ||
  	    /* check if reserved bits are set */
  	    (g->stretch & ~(FD_STRETCH | FD_SWAPSIDES | FD_SECTBASEMASK)) != 0)
* Unmerged path drivers/block/floppy.c
