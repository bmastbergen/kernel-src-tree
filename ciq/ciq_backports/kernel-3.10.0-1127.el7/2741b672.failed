gfs2: Fix rounding error in gfs2_iomap_page_prepare

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 2741b6723bf6f7d92d07c44bd6a09c6e37f3f949
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/2741b672.failed

The pos and len arguments to the iomap page_prepare callback are not
block aligned, so we need to take that into account when computing the
number of blocks.

Fixes: d0a22a4b03b8 ("gfs2: Fix iomap write page reclaim deadlock")
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 2741b6723bf6f7d92d07c44bd6a09c6e37f3f949)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/bmap.c
diff --cc fs/gfs2/bmap.c
index cbb60a8063dc,8bae7531e883..000000000000
--- a/fs/gfs2/bmap.c
+++ b/fs/gfs2/bmap.c
@@@ -958,17 -991,37 +958,34 @@@ static void gfs2_write_unlock(struct in
  	gfs2_glock_dq_uninit(&ip->i_gh);
  }
  
++<<<<<<< HEAD
 +static void gfs2_iomap_journaled_page_done(struct inode *inode, loff_t pos,
 +					   unsigned copied, struct page *page,
 +					   struct iomap *iomap)
++=======
+ static int gfs2_iomap_page_prepare(struct inode *inode, loff_t pos,
+ 				   unsigned len, struct iomap *iomap)
+ {
+ 	unsigned int blockmask = i_blocksize(inode) - 1;
+ 	struct gfs2_sbd *sdp = GFS2_SB(inode);
+ 	unsigned int blocks;
+ 
+ 	blocks = ((pos & blockmask) + len + blockmask) >> inode->i_blkbits;
+ 	return gfs2_trans_begin(sdp, RES_DINODE + blocks, 0);
+ }
+ 
+ static void gfs2_iomap_page_done(struct inode *inode, loff_t pos,
+ 				 unsigned copied, struct page *page,
+ 				 struct iomap *iomap)
++>>>>>>> 2741b6723bf6 (gfs2: Fix rounding error in gfs2_iomap_page_prepare)
  {
  	struct gfs2_inode *ip = GFS2_I(inode);
 -	struct gfs2_sbd *sdp = GFS2_SB(inode);
  
 -	if (page && !gfs2_is_stuffed(ip))
 -		gfs2_page_add_databufs(ip, page, offset_in_page(pos), copied);
 -	gfs2_trans_end(sdp);
 +	gfs2_page_add_databufs(ip, page, offset_in_page(pos), copied);
  }
  
 -static const struct iomap_page_ops gfs2_iomap_page_ops = {
 -	.page_prepare = gfs2_iomap_page_prepare,
 -	.page_done = gfs2_iomap_page_done,
 -};
 -
 -static int gfs2_iomap_begin_write(struct inode *inode, loff_t pos,
 -				  loff_t length, unsigned flags,
 -				  struct iomap *iomap,
 +static int gfs2_iomap_begin_write(struct inode *inode, loff_t pos, loff_t length,
 +				  unsigned flags, struct iomap *iomap,
  				  struct metapath *mp)
  {
  	struct gfs2_inode *ip = GFS2_I(inode);
* Unmerged path fs/gfs2/bmap.c
