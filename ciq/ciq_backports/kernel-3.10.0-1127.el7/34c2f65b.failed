cpuidle: Move polling state initialization code to separate file

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 34c2f65b718d44ea7d7b3cc10777f410677455ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/34c2f65b.failed

Move the polling state initialization code to a separate file built
conditionally on CONFIG_ARCH_HAS_CPU_RELAX to get rid of the #ifdef
in driver.c.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Tested-by: Sudeep Holla <sudeep.holla@arm.com>
	Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
(cherry picked from commit 34c2f65b718d44ea7d7b3cc10777f410677455ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/Makefile
diff --cc drivers/cpuidle/Makefile
index 73ac9efa9477,0b67a05a7aae..000000000000
--- a/drivers/cpuidle/Makefile
+++ b/drivers/cpuidle/Makefile
@@@ -4,9 -4,25 +4,14 @@@
  
  obj-y += cpuidle.o driver.o governor.o sysfs.o governors/
  obj-$(CONFIG_ARCH_NEEDS_CPU_IDLE_COUPLED) += coupled.o
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_DT_IDLE_STATES)		  += dt_idle_states.o
+ obj-$(CONFIG_ARCH_HAS_CPU_RELAX)	  += poll_state.o
++>>>>>>> 34c2f65b718d (cpuidle: Move polling state initialization code to separate file)
  
 -##################################################################################
 -# ARM SoC drivers
 -obj-$(CONFIG_ARM_MVEBU_V7_CPUIDLE) += cpuidle-mvebu-v7.o
 -obj-$(CONFIG_ARM_BIG_LITTLE_CPUIDLE)	+= cpuidle-big_little.o
 -obj-$(CONFIG_ARM_CLPS711X_CPUIDLE)	+= cpuidle-clps711x.o
 -obj-$(CONFIG_ARM_HIGHBANK_CPUIDLE)	+= cpuidle-calxeda.o
 -obj-$(CONFIG_ARM_KIRKWOOD_CPUIDLE)	+= cpuidle-kirkwood.o
 -obj-$(CONFIG_ARM_ZYNQ_CPUIDLE)		+= cpuidle-zynq.o
 -obj-$(CONFIG_ARM_U8500_CPUIDLE)         += cpuidle-ux500.o
 -obj-$(CONFIG_ARM_AT91_CPUIDLE)          += cpuidle-at91.o
 -obj-$(CONFIG_ARM_EXYNOS_CPUIDLE)        += cpuidle-exynos.o
 -obj-$(CONFIG_ARM_CPUIDLE)		+= cpuidle-arm.o
 -
 -###############################################################################
 -# MIPS drivers
 -obj-$(CONFIG_MIPS_CPS_CPUIDLE)		+= cpuidle-cps.o
 +obj-$(CONFIG_CPU_IDLE_CALXEDA) += cpuidle-calxeda.o
 +obj-$(CONFIG_ARCH_KIRKWOOD) += cpuidle-kirkwood.o
  
  ###############################################################################
  # POWERPC drivers
* Unmerged path drivers/cpuidle/Makefile
diff --git a/drivers/cpuidle/poll_state.c b/drivers/cpuidle/poll_state.c
new file mode 100644
index 000000000000..0db4f7273952
--- /dev/null
+++ b/drivers/cpuidle/poll_state.c
@@ -0,0 +1,36 @@
+/*
+ * poll_state.c - Polling idle state
+ *
+ * This file is released under the GPLv2.
+ */
+
+#include <linux/cpuidle.h>
+#include <linux/sched.h>
+#include <linux/sched/idle.h>
+
+static int __cpuidle poll_idle(struct cpuidle_device *dev,
+			       struct cpuidle_driver *drv, int index)
+{
+	local_irq_enable();
+	if (!current_set_polling_and_test()) {
+		while (!need_resched())
+			cpu_relax();
+	}
+	current_clr_polling();
+
+	return index;
+}
+
+void poll_idle_init(struct cpuidle_driver *drv)
+{
+	struct cpuidle_state *state = &drv->states[0];
+
+	snprintf(state->name, CPUIDLE_NAME_LEN, "POLL");
+	snprintf(state->desc, CPUIDLE_DESC_LEN, "CPUIDLE CORE POLL IDLE");
+	state->exit_latency = 0;
+	state->target_residency = 0;
+	state->power_usage = -1;
+	state->enter = poll_idle;
+	state->disabled = false;
+	state->flags = CPUIDLE_FLAG_POLLING;
+}
diff --git a/include/linux/cpuidle.h b/include/linux/cpuidle.h
index 9bd9bae0c305..2720cceea619 100644
--- a/include/linux/cpuidle.h
+++ b/include/linux/cpuidle.h
@@ -172,6 +172,12 @@ static inline void cpuidle_coupled_parallel_barrier(struct cpuidle_device *dev,
 }
 #endif
 
+#ifdef CONFIG_ARCH_HAS_CPU_RELAX
+void poll_idle_init(struct cpuidle_driver *drv);
+#else
+static void poll_idle_init(struct cpuidle_driver *drv) {}
+#endif
+
 /******************************
  * CPUIDLE GOVERNOR INTERFACE *
  ******************************/
