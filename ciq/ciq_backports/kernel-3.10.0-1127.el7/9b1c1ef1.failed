ipv6: constify rt6_nexthop()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit 9b1c1ef13b35fa35051b635ca9fbda39fe6bbc70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/9b1c1ef1.failed

There is no functional change in this patch, it only prepares the next one.

rt6_nexthop() will be used by ip6_dst_lookup_neigh(), which uses const
variables.

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Reported-by: kbuild test robot <lkp@intel.com>
	Acked-by: Nick Desaulniers <ndesaulniers@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9b1c1ef13b35fa35051b635ca9fbda39fe6bbc70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vrf.c
#	net/netfilter/nf_flow_table_ip.c
* Unmerged path drivers/net/vrf.c
* Unmerged path net/netfilter/nf_flow_table_ip.c
* Unmerged path drivers/net/vrf.c
diff --git a/include/net/ip6_route.h b/include/net/ip6_route.h
index a5e7bb57ff1a..8a6da3ba1a0f 100644
--- a/include/net/ip6_route.h
+++ b/include/net/ip6_route.h
@@ -191,8 +191,8 @@ static inline bool ip6_sk_ignore_df(const struct sock *sk)
 	       inet6_sk(sk)->pmtudisc == IPV6_PMTUDISC_OMIT;
 }
 
-static inline struct in6_addr *rt6_nexthop(struct rt6_info *rt,
-					   struct in6_addr *daddr)
+static inline const struct in6_addr *rt6_nexthop(const struct rt6_info *rt,
+						 const struct in6_addr *daddr)
 {
 	if (rt->rt6i_flags & RTF_GATEWAY)
 		return &rt->rt6i_gateway;
diff --git a/net/bluetooth/6lowpan.c b/net/bluetooth/6lowpan.c
index d043c30bdf86..e977be7caa47 100644
--- a/net/bluetooth/6lowpan.c
+++ b/net/bluetooth/6lowpan.c
@@ -167,10 +167,10 @@ static inline struct lowpan_peer *peer_lookup_dst(struct lowpan_btle_dev *dev,
 						  struct in6_addr *daddr,
 						  struct sk_buff *skb)
 {
-	struct lowpan_peer *peer;
-	struct in6_addr *nexthop;
 	struct rt6_info *rt = (struct rt6_info *)skb_dst(skb);
 	int count = atomic_read(&dev->peer_count);
+	const struct in6_addr *nexthop;
+	struct lowpan_peer *peer;
 
 	BT_DBG("peers %d addr %pI6c rt %p", count, daddr, rt);
 
diff --git a/net/ipv6/ip6_output.c b/net/ipv6/ip6_output.c
index 35a4ba95d34a..7e6233f10adf 100644
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -60,8 +60,8 @@ static int ip6_finish_output2(struct sock *sk, struct sk_buff *skb)
 {
 	struct dst_entry *dst = skb_dst(skb);
 	struct net_device *dev = dst->dev;
+	const struct in6_addr *nexthop;
 	struct neighbour *neigh;
-	struct in6_addr *nexthop;
 	int ret;
 
 	skb->protocol = htons(ETH_P_IPV6);
* Unmerged path net/netfilter/nf_flow_table_ip.c
