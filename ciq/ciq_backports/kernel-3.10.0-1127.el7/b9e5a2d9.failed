scsi: lpfc: Fix hardlockup in scsi_cmd_iocb_cmpl

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author James Smart <jsmart2021@gmail.com>
commit b9e5a2d961dbedd7ee293d21f12d6b5d4d4fc35a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/b9e5a2d9.failed

There is a race condition with the abort handler declaring a waitq
item on it's stack, followed by a timeout in the abort handler that
has it give up on the abort return to its caller. When the io is
finally aborted and its completion handler called, it references
the waitq element that the abort_handler set up, which is no longer
valid resulting in a deadlock.

Fix by clearing the waitq reference, under lock, when the abort
handler timeout gives up. Have the completion handler validate the
waitq before referencing it.

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <jsmart2021@gmail.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b9e5a2d961dbedd7ee293d21f12d6b5d4d4fc35a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_scsi.c
diff --cc drivers/scsi/lpfc/lpfc_scsi.c
index 79f176e98a39,5a5a9bbe6023..000000000000
--- a/drivers/scsi/lpfc/lpfc_scsi.c
+++ b/drivers/scsi/lpfc/lpfc_scsi.c
@@@ -4317,13 -3874,14 +4317,21 @@@ lpfc_scsi_cmd_iocb_cmpl(struct lpfc_hb
  	cmd->scsi_done(cmd);
  
  	/*
 -	 * If there is an abort thread waiting for command completion
 +	 * If there is a thread waiting for command completion
  	 * wake up the thread.
  	 */
++<<<<<<< HEAD
 +	spin_lock_irqsave(shost->host_lock, flags);
 +	if (lpfc_cmd->waitq)
 +		wake_up(lpfc_cmd->waitq);
 +	spin_unlock_irqrestore(shost->host_lock, flags);
++=======
+ 	spin_lock(&lpfc_cmd->buf_lock);
+ 	lpfc_cmd->cur_iocbq.iocb_flag &= ~LPFC_DRIVER_ABORTED;
+ 	if (lpfc_cmd->waitq)
+ 		wake_up(lpfc_cmd->waitq);
+ 	spin_unlock(&lpfc_cmd->buf_lock);
++>>>>>>> b9e5a2d961db (scsi: lpfc: Fix hardlockup in scsi_cmd_iocb_cmpl)
  
  	lpfc_release_scsi_buf(phba, lpfc_cmd);
  }
@@@ -5164,8 -4716,17 +5172,15 @@@ wait_for_cmpl
  				 iocb->sli4_xritag, ret,
  				 cmnd->device->id, cmnd->device->lun);
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	lpfc_cmd->waitq = NULL;
+ 
+ 	spin_unlock(&lpfc_cmd->buf_lock);
++>>>>>>> b9e5a2d961db (scsi: lpfc: Fix hardlockup in scsi_cmd_iocb_cmpl)
  	goto out;
  
 -out_unlock_ring:
 -	if (phba->sli_rev == LPFC_SLI_REV4)
 -		spin_unlock(&pring_s4->ring_lock);
 -out_unlock_buf:
 -	spin_unlock(&lpfc_cmd->buf_lock);
  out_unlock:
  	spin_unlock_irqrestore(&phba->hbalock, flags);
  out:
* Unmerged path drivers/scsi/lpfc/lpfc_scsi.c
