Doc: Fix double words in Documentation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Masanari Iida <standby24x7@gmail.com>
commit 8da9704c8bb7d4b0a2b051a5a7eda9b049f5f766
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/8da9704c.failed

This patch fix some double words found in Documentation.

	Signed-off-by: Masanari Iida <standby24x7@gmail.com>
	Signed-off-by: Jonathan Corbet <corbet@lwn.net>
(cherry picked from commit 8da9704c8bb7d4b0a2b051a5a7eda9b049f5f766)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/ioctl/botching-up-ioctls.txt
#	Documentation/networking/kcm.txt
#	Documentation/vm/transhuge.txt
diff --cc Documentation/vm/transhuge.txt
index 8785fb87d9c7,f2e739545e74..000000000000
--- a/Documentation/vm/transhuge.txt
+++ b/Documentation/vm/transhuge.txt
@@@ -200,9 -285,29 +200,26 @@@ thp_collapse_alloc_failed is incremente
  	of pages that should be collapsed into one huge page but failed
  	the allocation.
  
 -thp_file_alloc is incremented every time a file huge page is successfully
 -i	allocated.
 -
 -thp_file_mapped is incremented every time a file huge page is mapped into
 -	user address space.
 -
 -thp_split_page is incremented every time a huge page is split into base
 +thp_split is incremented every time a huge page is split into base
  	pages. This can happen for a variety of reasons but a common
  	reason is that a huge page is old and is being reclaimed.
++<<<<<<< HEAD
++=======
+ 	This action implies splitting all PMD the page mapped with.
+ 
+ thp_split_page_failed is incremented if kernel fails to split huge
+ 	page. This can happen if the page was pinned by somebody.
+ 
+ thp_deferred_split_page is incremented when a huge page is put onto split
+ 	queue. This happens when a huge page is partially unmapped and
+ 	splitting it would free up some memory. Pages on split queue are
+ 	going to be split under memory pressure.
+ 
+ thp_split_pmd is incremented every time a PMD split into table of PTEs.
+ 	This can happen, for instance, when application calls mprotect() or
+ 	munmap() on part of huge page. It doesn't split huge page, only
+ 	page table entry.
++>>>>>>> 8da9704c8bb7 (Doc: Fix double words in Documentation)
  
  thp_zero_page_alloc is incremented every time a huge zero page is
  	successfully allocated. It includes allocations which where
* Unmerged path Documentation/ioctl/botching-up-ioctls.txt
* Unmerged path Documentation/networking/kcm.txt
diff --git a/Documentation/block/pr.txt b/Documentation/block/pr.txt
index d3eb1ca65051..ac9b8e70e64b 100644
--- a/Documentation/block/pr.txt
+++ b/Documentation/block/pr.txt
@@ -90,7 +90,7 @@ and thus removes any access restriction implied by it.
 4. IOC_PR_PREEMPT
 
 This ioctl command releases the existing reservation referred to by
-old_key and replaces it with a a new reservation of type for the
+old_key and replaces it with a new reservation of type for the
 reservation key new_key.
 
 
* Unmerged path Documentation/ioctl/botching-up-ioctls.txt
diff --git a/Documentation/livepatch/livepatch.txt b/Documentation/livepatch/livepatch.txt
index 844b0fe3c4ae..1ae2de758c08 100644
--- a/Documentation/livepatch/livepatch.txt
+++ b/Documentation/livepatch/livepatch.txt
@@ -474,7 +474,7 @@ The current Livepatch implementation has several limitations:
     Each function has to handle TOC and save LR before it could call
     the ftrace handler. This operation has to be reverted on return.
     Fortunately, the generic ftrace code has the same problem and all
-    this is is handled on the ftrace level.
+    this is handled on the ftrace level.
 
 
   + Kretprobes using the ftrace framework conflict with the patched
* Unmerged path Documentation/networking/kcm.txt
diff --git a/Documentation/usb/power-management.txt b/Documentation/usb/power-management.txt
index 0fea137d3c39..3488fcf86711 100644
--- a/Documentation/usb/power-management.txt
+++ b/Documentation/usb/power-management.txt
@@ -524,7 +524,7 @@ relevant attribute files are usb2_hardware_lpm and usb3_hardware_lpm.
 		When a USB 3.0 lpm-capable device is plugged in to a
 		xHCI host which supports link PM, it will check if U1
 		and U2 exit latencies have been set in the BOS
-		descriptor; if the check is is passed and the host
+		descriptor; if the check is passed and the host
 		supports USB3 hardware LPM, USB3 hardware LPM will be
 		enabled for the device and these files will be created.
 		The files hold a string value (enable or disable)
* Unmerged path Documentation/vm/transhuge.txt
