virtio/s390: DMA support for virtio-ccw

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Halil Pasic <pasic@linux.ibm.com>
commit f35f54f11f7f96dc6d43fa79c4a7297a9115627f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/f35f54f1.failed

Currently virtio-ccw devices do not work if the device has
VIRTIO_F_IOMMU_PLATFORM. In future we do want to support DMA API with
virtio-ccw.

Let us do the plumbing, so the feature VIRTIO_F_IOMMU_PLATFORM works
with virtio-ccw.

Let us also switch from legacy avail/used accessors to the DMA aware
ones (even if it isn't strictly necessary), and remove the legacy
accessors (we were the last users).

	Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
(cherry picked from commit f35f54f11f7f96dc6d43fa79c4a7297a9115627f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/virtio/virtio_ccw.c
diff --cc drivers/s390/virtio/virtio_ccw.c
index 528f117e589d,42832a164546..000000000000
--- a/drivers/s390/virtio/virtio_ccw.c
+++ b/drivers/s390/virtio/virtio_ccw.c
@@@ -532,11 -537,11 +533,11 @@@ static struct virtqueue *virtio_ccw_set
  		info->info_block->l.num = info->num;
  		ccw->count = sizeof(info->info_block->l);
  	} else {
 -		info->info_block->s.desc = queue;
 +		info->info_block->s.desc = (__u64)info->queue;
  		info->info_block->s.index = i;
  		info->info_block->s.num = info->num;
- 		info->info_block->s.avail = (__u64)virtqueue_get_avail(vq);
- 		info->info_block->s.used = (__u64)virtqueue_get_used(vq);
+ 		info->info_block->s.avail = (__u64)virtqueue_get_avail_addr(vq);
+ 		info->info_block->s.used = (__u64)virtqueue_get_used_addr(vq);
  		ccw->count = sizeof(info->info_block->s);
  	}
  	ccw->cmd_code = CCW_CMD_SET_VQ;
@@@ -759,6 -770,15 +760,18 @@@ out_free
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ static void ccw_transport_features(struct virtio_device *vdev)
+ {
+ 	/*
+ 	 * There shouldn't be anything that precludes supporting packed.
+ 	 * TODO: Remove the limitation after having another look into this.
+ 	 */
+ 	__virtio_clear_bit(vdev, VIRTIO_F_RING_PACKED);
+ }
+ 
++>>>>>>> f35f54f11f7f (virtio/s390: DMA support for virtio-ccw)
  static int virtio_ccw_finalize_features(struct virtio_device *vdev)
  {
  	struct virtio_ccw_device *vcdev = to_vc_device(vdev);
* Unmerged path drivers/s390/virtio/virtio_ccw.c
diff --git a/include/linux/virtio.h b/include/linux/virtio.h
index 4845ee4e25d3..ceaa7ee9146c 100644
--- a/include/linux/virtio.h
+++ b/include/linux/virtio.h
@@ -80,23 +80,6 @@ dma_addr_t virtqueue_get_desc_addr(struct virtqueue *vq);
 dma_addr_t virtqueue_get_avail_addr(struct virtqueue *vq);
 dma_addr_t virtqueue_get_used_addr(struct virtqueue *vq);
 
-/*
- * Legacy accessors -- in almost all cases, these are the wrong functions
- * to use.
- */
-static inline void *virtqueue_get_desc(struct virtqueue *vq)
-{
-	return virtqueue_get_vring(vq)->desc;
-}
-static inline void *virtqueue_get_avail(struct virtqueue *vq)
-{
-	return virtqueue_get_vring(vq)->avail;
-}
-static inline void *virtqueue_get_used(struct virtqueue *vq)
-{
-	return virtqueue_get_vring(vq)->used;
-}
-
 /**
  * virtio_device - representation of a device using virtio
  * @index: unique position on the virtio bus
