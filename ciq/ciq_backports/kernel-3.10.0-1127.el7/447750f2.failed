netfilter: nf_tables: don't use position attribute on rule replacement

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Florian Westphal <fw@strlen.de>
commit 447750f281abef547be44fdcfe3bc4447b3115a8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/447750f2.failed

Its possible to set both HANDLE and POSITION when replacing a rule.
In this case, the rule at POSITION gets replaced using the
userspace-provided handle.  Rule handles are supposed to be generated
by the kernel only.

Duplicate handles should be harmless, however better disable this "feature"
by only checking for the POSITION attribute on insert operations.

Fixes: 5e94846686d0 ("netfilter: nf_tables: add insert operation")
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 447750f281abef547be44fdcfe3bc4447b3115a8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index fac54e2397f0,e496030fdc3b..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -2076,19 -2589,18 +2076,29 @@@ static int nf_tables_newrule(struct ne
  
  		if (chain->use == UINT_MAX)
  			return -EOVERFLOW;
- 	}
  
++<<<<<<< HEAD
 +	if (nla[NFTA_RULE_POSITION]) {
 +		if (!(nlh->nlmsg_flags & NLM_F_CREATE))
 +			return -EOPNOTSUPP;
 +
 +		pos_handle = be64_to_cpu(nla_get_be64(nla[NFTA_RULE_POSITION]));
 +		old_rule = __nf_tables_rule_lookup(chain, pos_handle);
 +		if (IS_ERR(old_rule))
 +			return PTR_ERR(old_rule);
++=======
+ 		if (nla[NFTA_RULE_POSITION]) {
+ 			pos_handle = be64_to_cpu(nla_get_be64(nla[NFTA_RULE_POSITION]));
+ 			old_rule = __nft_rule_lookup(chain, pos_handle);
+ 			if (IS_ERR(old_rule)) {
+ 				NL_SET_BAD_ATTR(extack, nla[NFTA_RULE_POSITION]);
+ 				return PTR_ERR(old_rule);
+ 			}
+ 		}
++>>>>>>> 447750f281ab (netfilter: nf_tables: don't use position attribute on rule replacement)
  	}
  
 -	nft_ctx_init(&ctx, net, skb, nlh, family, table, chain, nla);
 +	nft_ctx_init(&ctx, net, skb, nlh, afi, table, chain, nla);
  
  	n = 0;
  	size = 0;
* Unmerged path net/netfilter/nf_tables_api.c
