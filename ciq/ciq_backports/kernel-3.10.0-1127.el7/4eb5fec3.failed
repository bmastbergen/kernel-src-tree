fs/proc/vmcore: Enable dumping of encrypted memory when SEV was active

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Lianbo Jiang <lijiang@redhat.com>
commit 4eb5fec31e613105668a1472d5876f3d0558e5d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/4eb5fec3.failed

In the kdump kernel, the memory of the first kernel gets to be dumped
into a vmcore file.

Similarly to SME kdump, if SEV was enabled in the first kernel, the old
memory has to be remapped encrypted in order to access it properly.

Commit

  992b649a3f01 ("kdump, proc/vmcore: Enable kdumping encrypted memory with SME enabled")

took care of the SME case but it uses sme_active() which checks for SME
only. Use mem_encrypt_active() instead, which returns true when either
SME or SEV is active.

Unlike SME, the second kernel images (kernel and initrd) are loaded into
encrypted memory when SEV is active, hence the kernel elf header must be
remapped as encrypted in order to access it properly.

 [ bp: Massage commit message. ]

Co-developed-by: Brijesh Singh <brijesh.singh@amd.com>
	Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
	Signed-off-by: Lianbo Jiang <lijiang@redhat.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Alexey Dobriyan <adobriyan@gmail.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: bhe@redhat.com
	Cc: dyoung@redhat.com
	Cc: Ganesh Goudar <ganeshgr@chelsio.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: kexec@lists.infradead.org
	Cc: linux-fsdevel@vger.kernel.org
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
	Cc: mingo@redhat.com
	Cc: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
	Cc: Souptick Joarder <jrdr.linux@gmail.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: x86-ml <x86@kernel.org>
Link: https://lkml.kernel.org/r/20190430074421.7852-4-lijiang@redhat.com
(cherry picked from commit 4eb5fec31e613105668a1472d5876f3d0558e5d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/vmcore.c
diff --cc fs/proc/vmcore.c
index a91ffdce03e6,57957c91c6df..000000000000
--- a/fs/proc/vmcore.c
+++ b/fs/proc/vmcore.c
@@@ -370,10 -369,12 +370,14 @@@ static ssize_t __read_vmcore(char *buff
  
  	list_for_each_entry(m, &vmcore_list, list) {
  		if (*fpos < m->offset + m->size) {
 -			tsz = (size_t)min_t(unsigned long long,
 -					    m->offset + m->size - *fpos,
 -					    buflen);
 +			tsz = min_t(size_t, m->offset + m->size - *fpos, buflen);
  			start = m->paddr + *fpos - m->offset;
  			tmp = read_from_oldmem(buffer, tsz, &start,
++<<<<<<< HEAD
 +					      userbuf, sme_active());
++=======
+ 					       userbuf, mem_encrypt_active());
++>>>>>>> 4eb5fec31e61 (fs/proc/vmcore: Enable dumping of encrypted memory when SEV was active)
  			if (tmp < 0)
  				return tmp;
  			buflen -= tsz;
* Unmerged path fs/proc/vmcore.c
