virtio/s390: use vring_create_virtqueue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Halil Pasic <pasic@linux.ibm.com>
commit 3279beac545190ed252cd3df0eb41056537463df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/3279beac.failed

The commit 2a2d1382fe9d ("virtio: Add improved queue allocation API")
establishes a new way of allocating virtqueues (as a part of the effort
that taught DMA to virtio rings).

In the future we will want virtio-ccw to use the DMA API as well.

Let us switch from the legacy method of allocating virtqueues to
vring_create_virtqueue() as the first step into that direction.

	Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
	Reviewed-by: Cornelia Huck <cohuck@redhat.com>
(cherry picked from commit 3279beac545190ed252cd3df0eb41056537463df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/virtio/virtio_ccw.c
diff --cc drivers/s390/virtio/virtio_ccw.c
index 528f117e589d,2c66941ef3d0..000000000000
--- a/drivers/s390/virtio/virtio_ccw.c
+++ b/drivers/s390/virtio/virtio_ccw.c
@@@ -506,17 -513,11 +503,17 @@@ static struct virtqueue *virtio_ccw_set
  		err = info->num;
  		goto out_err;
  	}
- 	size = PAGE_ALIGN(vring_size(info->num, KVM_VIRTIO_CCW_RING_ALIGN));
- 	info->queue = alloc_pages_exact(size, GFP_KERNEL | __GFP_ZERO);
- 	if (info->queue == NULL) {
- 		dev_warn(&vcdev->cdev->dev, "no queue\n");
- 		err = -ENOMEM;
- 		goto out_err;
- 	}
+ 	may_reduce = vcdev->revision > 0;
+ 	vq = vring_create_virtqueue(i, info->num, KVM_VIRTIO_CCW_RING_ALIGN,
+ 				    vdev, true, may_reduce, ctx,
+ 				    virtio_ccw_kvm_notify, callback, name);
  
++<<<<<<< HEAD
 +	vq = vring_new_virtqueue(i, info->num, KVM_VIRTIO_CCW_RING_ALIGN, vdev,
 +				 true, info->queue, virtio_ccw_kvm_notify,
 +				 callback, name);
++=======
++>>>>>>> 3279beac5451 (virtio/s390: use vring_create_virtqueue)
  	if (!vq) {
  		/* For now, we fail if we can't get the requested size. */
  		dev_warn(&vcdev->cdev->dev, "no vq\n");
* Unmerged path drivers/s390/virtio/virtio_ccw.c
