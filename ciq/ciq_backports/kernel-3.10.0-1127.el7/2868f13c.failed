scsi_lib: untangle 0 and BLK_MQ_RQ_QUEUE_OK

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Omar Sandoval <osandov@fb.com>
commit 2868f13c303e1472bfd3941c62916c1f4128a713
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/2868f13c.failed

Let's not depend on any of the BLK_MQ_RQ_QUEUE_* constants having
specific values. No functional change.

	Signed-off-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 2868f13c303e1472bfd3941c62916c1f4128a713)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_lib.c
diff --cc drivers/scsi/scsi_lib.c
index 5cfe50ad8401,47a5c8783b89..000000000000
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@@ -1849,20 -1897,26 +1849,25 @@@ static int scsi_queue_rq(struct blk_mq_
  	int reason;
  
  	ret = prep_to_mq(scsi_prep_state_check(sdev, req));
++<<<<<<< HEAD
 +	if (ret)
 +		goto out_put_budget;
++=======
+ 	if (ret != BLK_MQ_RQ_QUEUE_OK)
+ 		goto out;
++>>>>>>> 2868f13c303e (scsi_lib: untangle 0 and BLK_MQ_RQ_QUEUE_OK)
  
  	ret = BLK_MQ_RQ_QUEUE_BUSY;
 -	if (!get_device(&sdev->sdev_gendev))
 -		goto out;
 -
 -	if (!scsi_dev_queue_ready(q, sdev))
 -		goto out_put_device;
  	if (!scsi_target_queue_ready(shost, sdev))
 -		goto out_dec_device_busy;
 +		goto out_put_budget;
  	if (!scsi_host_queue_ready(q, shost, sdev))
  		goto out_dec_target_busy;
  
 -
 -	if (!(req->rq_flags & RQF_DONTPREP)) {
 +	if (!(req->cmd_flags & REQ_DONTPREP)) {
  		ret = prep_to_mq(scsi_mq_prep_fn(req));
- 		if (ret)
+ 		if (ret != BLK_MQ_RQ_QUEUE_OK)
  			goto out_dec_host_busy;
 -		req->rq_flags |= RQF_DONTPREP;
 +		req->cmd_flags |= REQ_DONTPREP;
  	} else {
  		blk_mq_start_request(req);
  	}
* Unmerged path drivers/scsi/scsi_lib.c
