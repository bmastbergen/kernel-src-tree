ext4: add missing brelse() in add_new_gdb_meta_bg()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Lukas Czerner <lczerner@redhat.com>
commit d64264d6218e6892edd832dc3a5a5857c2856c53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/d64264d6.failed

Currently in add_new_gdb_meta_bg() there is a missing brelse of gdb_bh
in case ext4_journal_get_write_access() fails.
Additionally kvfree() is missing in the same error path. Fix it by
moving the ext4_journal_get_write_access() before the ext4 sb update as
Ted suggested and release n_group_desc and gdb_bh in case it fails.

Fixes: 61a9c11e5e7a ("ext4: add missing brelse() add_new_gdb_meta_bg()'s error path")
	Signed-off-by: Lukas Czerner <lczerner@redhat.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit d64264d6218e6892edd832dc3a5a5857c2856c53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/resize.c
diff --cc fs/ext4/resize.c
index ebfcdac6bd9c,90061c3d048b..000000000000
--- a/fs/ext4/resize.c
+++ b/fs/ext4/resize.c
@@@ -907,13 -932,18 +907,26 @@@ static int add_new_gdb_meta_bg(struct s
  	memcpy(n_group_desc, o_group_desc,
  	       EXT4_SB(sb)->s_gdb_count * sizeof(struct buffer_head *));
  	n_group_desc[gdb_num] = gdb_bh;
+ 
+ 	BUFFER_TRACE(gdb_bh, "get_write_access");
+ 	err = ext4_journal_get_write_access(handle, gdb_bh);
+ 	if (err) {
+ 		kvfree(n_group_desc);
+ 		brelse(gdb_bh);
+ 		return err;
+ 	}
+ 
  	EXT4_SB(sb)->s_group_desc = n_group_desc;
  	EXT4_SB(sb)->s_gdb_count++;
++<<<<<<< HEAD
 +	ext4_kvfree(o_group_desc);
 +	BUFFER_TRACE(gdb_bh, "get_write_access");
 +	err = ext4_journal_get_write_access(handle, gdb_bh);
 +	if (unlikely(err))
 +		brelse(gdb_bh);
++=======
+ 	kvfree(o_group_desc);
++>>>>>>> d64264d6218e (ext4: add missing brelse() in add_new_gdb_meta_bg())
  	return err;
  }
  
* Unmerged path fs/ext4/resize.c
