scsi: qla2xxx: Make qla2x00_abort_srb() again decrease the sp reference count

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Bart Van Assche <bvanassche@acm.org>
commit d2d2b5a5741d317bed1fa38211f1f3b142d8cf7a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/d2d2b5a5.failed

Since qla2x00_abort_srb() starts with increasing the reference count of
@sp, decrease that same reference count before returning.

	Cc: Himanshu Madhani <hmadhani@marvell.com>
Fixes: 219d27d7147e ("scsi: qla2xxx: Fix race conditions in the code for aborting SCSI commands") # v5.2.
	Signed-off-by: Bart Van Assche <bvanassche@acm.org>
	Tested-by: Himanshu Madhani <hmadhani@marvell.com>
	Reviewed-by: Himanshu Madhani <hmadhani@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit d2d2b5a5741d317bed1fa38211f1f3b142d8cf7a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_os.c
index e86da79787c9,b667f13b62df..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -1811,6 -1722,43 +1811,46 @@@ qla2x00_loop_reset(scsi_qla_host_t *vha
  	return QLA_SUCCESS;
  }
  
++<<<<<<< HEAD
++=======
+ static void qla2x00_abort_srb(struct qla_qpair *qp, srb_t *sp, const int res,
+ 			      unsigned long *flags)
+ 	__releases(qp->qp_lock_ptr)
+ 	__acquires(qp->qp_lock_ptr)
+ {
+ 	DECLARE_COMPLETION_ONSTACK(comp);
+ 	scsi_qla_host_t *vha = qp->vha;
+ 	struct qla_hw_data *ha = vha->hw;
+ 	int rval;
+ 
+ 	if (sp_get(sp))
+ 		return;
+ 
+ 	if (sp->type == SRB_NVME_CMD || sp->type == SRB_NVME_LS ||
+ 	    (sp->type == SRB_SCSI_CMD && !ha->flags.eeh_busy &&
+ 	     !test_bit(ABORT_ISP_ACTIVE, &vha->dpc_flags) &&
+ 	     !qla2x00_isp_reg_stat(ha))) {
+ 		sp->comp = &comp;
+ 		spin_unlock_irqrestore(qp->qp_lock_ptr, *flags);
+ 		rval = ha->isp_ops->abort_command(sp);
+ 
+ 		switch (rval) {
+ 		case QLA_SUCCESS:
+ 			sp->done(sp, res);
+ 			break;
+ 		case QLA_FUNCTION_PARAMETER_ERROR:
+ 			wait_for_completion(&comp);
+ 			break;
+ 		}
+ 
+ 		spin_lock_irqsave(qp->qp_lock_ptr, *flags);
+ 		sp->comp = NULL;
+ 	}
+ 
+ 	atomic_dec(&sp->ref_count);
+ }
+ 
++>>>>>>> d2d2b5a5741d (scsi: qla2xxx: Make qla2x00_abort_srb() again decrease the sp reference count)
  static void
  __qla2x00_abort_all_cmds(struct qla_qpair *qp, int res)
  {
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
