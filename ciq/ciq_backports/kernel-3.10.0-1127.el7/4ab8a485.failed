powerpc/pseries: Remove confusing warning message.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
Rebuild_CHGLOG: - [powerpc] powerpc/pseries: Remove confusing warning message (Gustavo Duarte) [1748306]
Rebuild_FUZZ: 98.99%
commit-author Laurent Dufour <ldufour@linux.ibm.com>
commit 4ab8a485f7bc69e04e3e8d75f62bdcac5f4ed02e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/4ab8a485.failed

Since commit 1211ee61b4a8 ("powerpc/pseries: Read TLB Block Invalidate
Characteristics"), a warning message is displayed when booting a guest
on top of KVM:

  lpar: arch/powerpc/platforms/pseries/lpar.c pseries_lpar_read_hblkrm_characteristics Error calling get-system-parameter (0xfffffffd)

This message is displayed because this hypervisor is not supporting
the H_BLOCK_REMOVE hcall and thus is not exposing the corresponding
feature.

Reading the TLB Block Invalidate Characteristics should not be done if
the feature is not exposed.

Fixes: 1211ee61b4a8 ("powerpc/pseries: Read TLB Block Invalidate Characteristics")
	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Signed-off-by: Laurent Dufour <ldufour@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20191001132928.72555-1-ldufour@linux.ibm.com
(cherry picked from commit 4ab8a485f7bc69e04e3e8d75f62bdcac5f4ed02e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/pseries/lpar.c
diff --cc arch/powerpc/platforms/pseries/lpar.c
index 01d6fa559b3d,f87a5c64e24d..000000000000
--- a/arch/powerpc/platforms/pseries/lpar.c
+++ b/arch/powerpc/platforms/pseries/lpar.c
@@@ -748,6 -1340,140 +748,143 @@@ static void do_block_remove(unsigned lo
  }
  
  /*
++<<<<<<< HEAD
++=======
+  * TLB Block Invalidate Characteristics
+  *
+  * These characteristics define the size of the block the hcall H_BLOCK_REMOVE
+  * is able to process for each couple segment base page size, actual page size.
+  *
+  * The ibm,get-system-parameter properties is returning a buffer with the
+  * following layout:
+  *
+  * [ 2 bytes size of the RTAS buffer (excluding these 2 bytes) ]
+  * -----------------
+  * TLB Block Invalidate Specifiers:
+  * [ 1 byte LOG base 2 of the TLB invalidate block size being specified ]
+  * [ 1 byte Number of page sizes (N) that are supported for the specified
+  *          TLB invalidate block size ]
+  * [ 1 byte Encoded segment base page size and actual page size
+  *          MSB=0 means 4k segment base page size and actual page size
+  *          MSB=1 the penc value in mmu_psize_def ]
+  * ...
+  * -----------------
+  * Next TLB Block Invalidate Specifiers...
+  * -----------------
+  * [ 0 ]
+  */
+ static inline void set_hblkrm_bloc_size(int bpsize, int psize,
+ 					unsigned int block_size)
+ {
+ 	if (block_size > hblkrm_size[bpsize][psize])
+ 		hblkrm_size[bpsize][psize] = block_size;
+ }
+ 
+ /*
+  * Decode the Encoded segment base page size and actual page size.
+  * PAPR specifies:
+  *   - bit 7 is the L bit
+  *   - bits 0-5 are the penc value
+  * If the L bit is 0, this means 4K segment base page size and actual page size
+  * otherwise the penc value should be read.
+  */
+ #define HBLKRM_L_MASK		0x80
+ #define HBLKRM_PENC_MASK	0x3f
+ static inline void __init check_lp_set_hblkrm(unsigned int lp,
+ 					      unsigned int block_size)
+ {
+ 	unsigned int bpsize, psize;
+ 
+ 	/* First, check the L bit, if not set, this means 4K */
+ 	if ((lp & HBLKRM_L_MASK) == 0) {
+ 		set_hblkrm_bloc_size(MMU_PAGE_4K, MMU_PAGE_4K, block_size);
+ 		return;
+ 	}
+ 
+ 	lp &= HBLKRM_PENC_MASK;
+ 	for (bpsize = 0; bpsize < MMU_PAGE_COUNT; bpsize++) {
+ 		struct mmu_psize_def *def = &mmu_psize_defs[bpsize];
+ 
+ 		for (psize = 0; psize < MMU_PAGE_COUNT; psize++) {
+ 			if (def->penc[psize] == lp) {
+ 				set_hblkrm_bloc_size(bpsize, psize, block_size);
+ 				return;
+ 			}
+ 		}
+ 	}
+ }
+ 
+ #define SPLPAR_TLB_BIC_TOKEN		50
+ 
+ /*
+  * The size of the TLB Block Invalidate Characteristics is variable. But at the
+  * maximum it will be the number of possible page sizes *2 + 10 bytes.
+  * Currently MMU_PAGE_COUNT is 16, which means 42 bytes. Use a cache line size
+  * (128 bytes) for the buffer to get plenty of space.
+  */
+ #define SPLPAR_TLB_BIC_MAXLENGTH	128
+ 
+ void __init pseries_lpar_read_hblkrm_characteristics(void)
+ {
+ 	unsigned char local_buffer[SPLPAR_TLB_BIC_MAXLENGTH];
+ 	int call_status, len, idx, bpsize;
+ 
+ 	if (!firmware_has_feature(FW_FEATURE_BLOCK_REMOVE))
+ 		return;
+ 
+ 	spin_lock(&rtas_data_buf_lock);
+ 	memset(rtas_data_buf, 0, RTAS_DATA_BUF_SIZE);
+ 	call_status = rtas_call(rtas_token("ibm,get-system-parameter"), 3, 1,
+ 				NULL,
+ 				SPLPAR_TLB_BIC_TOKEN,
+ 				__pa(rtas_data_buf),
+ 				RTAS_DATA_BUF_SIZE);
+ 	memcpy(local_buffer, rtas_data_buf, SPLPAR_TLB_BIC_MAXLENGTH);
+ 	local_buffer[SPLPAR_TLB_BIC_MAXLENGTH - 1] = '\0';
+ 	spin_unlock(&rtas_data_buf_lock);
+ 
+ 	if (call_status != 0) {
+ 		pr_warn("%s %s Error calling get-system-parameter (0x%x)\n",
+ 			__FILE__, __func__, call_status);
+ 		return;
+ 	}
+ 
+ 	/*
+ 	 * The first two (2) bytes of the data in the buffer are the length of
+ 	 * the returned data, not counting these first two (2) bytes.
+ 	 */
+ 	len = be16_to_cpu(*((u16 *)local_buffer)) + 2;
+ 	if (len > SPLPAR_TLB_BIC_MAXLENGTH) {
+ 		pr_warn("%s too large returned buffer %d", __func__, len);
+ 		return;
+ 	}
+ 
+ 	idx = 2;
+ 	while (idx < len) {
+ 		u8 block_shift = local_buffer[idx++];
+ 		u32 block_size;
+ 		unsigned int npsize;
+ 
+ 		if (!block_shift)
+ 			break;
+ 
+ 		block_size = 1 << block_shift;
+ 
+ 		for (npsize = local_buffer[idx++];
+ 		     npsize > 0 && idx < len; npsize--)
+ 			check_lp_set_hblkrm((unsigned int) local_buffer[idx++],
+ 					    block_size);
+ 	}
+ 
+ 	for (bpsize = 0; bpsize < MMU_PAGE_COUNT; bpsize++)
+ 		for (idx = 0; idx < MMU_PAGE_COUNT; idx++)
+ 			if (hblkrm_size[bpsize][idx])
+ 				pr_info("H_BLOCK_REMOVE supports base psize:%d psize:%d block size:%d",
+ 					bpsize, idx, hblkrm_size[bpsize][idx]);
+ }
+ 
+ /*
++>>>>>>> 4ab8a485f7bc (powerpc/pseries: Remove confusing warning message.)
   * Take a spinlock around flushes to avoid bouncing the hypervisor tlbie
   * lock.
   */
* Unmerged path arch/powerpc/platforms/pseries/lpar.c
