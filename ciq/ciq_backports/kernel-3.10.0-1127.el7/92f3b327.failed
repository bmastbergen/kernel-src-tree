scsi: lpfc: Fixup eq_clr_intr references

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author James Smart <jsmart2021@gmail.com>
commit 92f3b327185a81f5daf87508661d77c26b817526
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/92f3b327.failed

Declaring interrupt clear routines as inline is bogus as they are used as
an indirect pointer.

Remove the inline references.

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <jsmart2021@gmail.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 92f3b327185a81f5daf87508661d77c26b817526)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_sli4.h
diff --cc drivers/scsi/lpfc/lpfc_sli4.h
index 3c0dc9f17aa6,8e4fd1a98023..000000000000
--- a/drivers/scsi/lpfc/lpfc_sli4.h
+++ b/drivers/scsi/lpfc/lpfc_sli4.h
@@@ -884,12 -1058,16 +884,25 @@@ void lpfc_sli_remove_dflt_fcf(struct lp
  int lpfc_sli4_get_els_iocb_cnt(struct lpfc_hba *);
  int lpfc_sli4_get_iocb_cnt(struct lpfc_hba *phba);
  int lpfc_sli4_init_vpi(struct lpfc_vport *);
++<<<<<<< HEAD
 +inline void lpfc_sli4_eq_clr_intr(struct lpfc_queue *);
 +uint32_t lpfc_sli4_cq_release(struct lpfc_queue *, bool);
 +uint32_t lpfc_sli4_eq_release(struct lpfc_queue *, bool);
 +inline void lpfc_sli4_if6_eq_clr_intr(struct lpfc_queue *q);
 +uint32_t lpfc_sli4_if6_cq_release(struct lpfc_queue *q, bool arm);
 +uint32_t lpfc_sli4_if6_eq_release(struct lpfc_queue *q, bool arm);
++=======
+ void lpfc_sli4_eq_clr_intr(struct lpfc_queue *);
+ void lpfc_sli4_write_cq_db(struct lpfc_hba *phba, struct lpfc_queue *q,
+ 			   uint32_t count, bool arm);
+ void lpfc_sli4_write_eq_db(struct lpfc_hba *phba, struct lpfc_queue *q,
+ 			   uint32_t count, bool arm);
+ void lpfc_sli4_if6_eq_clr_intr(struct lpfc_queue *q);
+ void lpfc_sli4_if6_write_cq_db(struct lpfc_hba *phba, struct lpfc_queue *q,
+ 			       uint32_t count, bool arm);
+ void lpfc_sli4_if6_write_eq_db(struct lpfc_hba *phba, struct lpfc_queue *q,
+ 			       uint32_t count, bool arm);
++>>>>>>> 92f3b327185a (scsi: lpfc: Fixup eq_clr_intr references)
  void lpfc_sli4_fcfi_unreg(struct lpfc_hba *, uint16_t);
  int lpfc_sli4_fcf_scan_read_fcf_rec(struct lpfc_hba *, uint16_t);
  int lpfc_sli4_fcf_rr_read_fcf_rec(struct lpfc_hba *, uint16_t);
diff --git a/drivers/scsi/lpfc/lpfc_sli.c b/drivers/scsi/lpfc/lpfc_sli.c
index ca080e127aa1..940765408e54 100644
--- a/drivers/scsi/lpfc/lpfc_sli.c
+++ b/drivers/scsi/lpfc/lpfc_sli.c
@@ -363,7 +363,7 @@ lpfc_sli4_eq_get(struct lpfc_queue *q)
  * @q: The Event Queue to disable interrupts
  *
  **/
-inline void
+void
 lpfc_sli4_eq_clr_intr(struct lpfc_queue *q)
 {
 	struct lpfc_register doorbell;
@@ -382,7 +382,7 @@ lpfc_sli4_eq_clr_intr(struct lpfc_queue *q)
  * @q: The Event Queue to disable interrupts
  *
  **/
-inline void
+void
 lpfc_sli4_if6_eq_clr_intr(struct lpfc_queue *q)
 {
 	struct lpfc_register doorbell;
* Unmerged path drivers/scsi/lpfc/lpfc_sli4.h
