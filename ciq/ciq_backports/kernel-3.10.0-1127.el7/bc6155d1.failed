fs: Allow superblock owner to access do_remount_sb()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit bc6155d1326092f4c29fe05a32b614249620d88e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/bc6155d1.failed

Superblock level remounts are currently restricted to global
CAP_SYS_ADMIN, as is the path for changing the root mount to
read only on umount. Loosen both of these permission checks to
also allow CAP_SYS_ADMIN in any namespace which is privileged
towards the userns which originally mounted the filesystem.

	Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
	Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Acked-by: Serge Hallyn <serge@hallyn.com>
	Acked-by: Christian Brauner <christian@brauner.io>
	Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
(cherry picked from commit bc6155d1326092f4c29fe05a32b614249620d88e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/namespace.c
diff --cc fs/namespace.c
index 39e32503a6c3,8ddd14806799..000000000000
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@@ -1650,11 -1590,11 +1650,11 @@@ static int do_umount(struct mount *mnt
  		 * Special case for "unmounting" root ...
  		 * we just try to remount it readonly.
  		 */
- 		if (!capable(CAP_SYS_ADMIN))
+ 		if (!ns_capable(sb->s_user_ns, CAP_SYS_ADMIN))
  			return -EPERM;
  		down_write(&sb->s_umount);
 -		if (!sb_rdonly(sb))
 -			retval = do_remount_sb(sb, SB_RDONLY, NULL, 0);
 +		if (!(sb->s_flags & MS_RDONLY))
 +			retval = do_remount_sb(sb, MS_RDONLY, NULL, 0);
  		up_write(&sb->s_umount);
  		return retval;
  	}
@@@ -2429,12 -2331,12 +2429,18 @@@ static int do_remount(struct path *path
  		return err;
  
  	down_write(&sb->s_umount);
++<<<<<<< HEAD
 +	if (flags & MS_BIND)
 +		err = change_mount_flags(path->mnt, flags);
 +	else if (!capable(CAP_SYS_ADMIN))
++=======
+ 	if (ms_flags & MS_BIND)
+ 		err = change_mount_flags(path->mnt, ms_flags);
+ 	else if (!ns_capable(sb->s_user_ns, CAP_SYS_ADMIN))
++>>>>>>> bc6155d13260 (fs: Allow superblock owner to access do_remount_sb())
  		err = -EPERM;
  	else
 -		err = do_remount_sb(sb, sb_flags, data, 0);
 +		err = do_remount_sb(sb, flags, data, 0);
  	if (!err) {
  		lock_mount_hash();
  		mnt_flags |= mnt->mnt.mnt_flags & ~MNT_USER_SETTABLE_MASK;
* Unmerged path fs/namespace.c
