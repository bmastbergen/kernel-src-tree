fuse: Restrict allow_other to the superblock's namespace or a descendant

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Seth Forshee <seth.forshee@canonical.com>
commit 73f03c2b4b527346778c711c2734dbff3442b139
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/73f03c2b.failed

Unprivileged users are normally restricted from mounting with the
allow_other option by system policy, but this could be bypassed for a mount
done with user namespace root permissions. In such cases allow_other should
not allow users outside the userns to access the mount as doing so would
give the unprivileged user the ability to manipulate processes it would
otherwise be unable to manipulate. Restrict allow_other to apply to users
in the same userns used at mount or a descendant of that namespace. Also
export current_in_userns() for use by fuse when built as a module.

	Reviewed-by: Serge Hallyn <serge@hallyn.com>
	Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
	Signed-off-by: Dongsu Park <dongsu@kinvolk.io>
	Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 73f03c2b4b527346778c711c2734dbff3442b139)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/dir.c
diff --cc fs/fuse/dir.c
index b8baa693ed17,fa4009761a7a..000000000000
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@@ -1091,8 -1029,8 +1091,13 @@@ int fuse_allow_current_process(struct f
  {
  	const struct cred *cred;
  
++<<<<<<< HEAD
 +	if (fc->flags & FUSE_ALLOW_OTHER)
 +		return 1;
++=======
+ 	if (fc->allow_other)
+ 		return current_in_userns(fc->user_ns);
++>>>>>>> 73f03c2b4b52 (fuse: Restrict allow_other to the superblock's namespace or a descendant)
  
  	cred = current_cred();
  	if (uid_eq(cred->euid, fc->user_id) &&
* Unmerged path fs/fuse/dir.c
diff --git a/kernel/user_namespace.c b/kernel/user_namespace.c
index 94c9b00b2cae..98b111b50134 100644
--- a/kernel/user_namespace.c
+++ b/kernel/user_namespace.c
@@ -1010,6 +1010,7 @@ bool current_in_userns(const struct user_namespace *target_ns)
 	}
 	return false;
 }
+EXPORT_SYMBOL(current_in_userns);
 
 static void *userns_get(struct task_struct *task)
 {
