scsi: lpfc: Fix error codes in lpfc_sli4_pci_mem_setup()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 3a487ff78c4b2bf5686dbb29178cfd78b3eed053
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/3a487ff7.failed

It used to be that "error" was set to -ENODEV at the start of the function
but we shifted some code around an now "error" is set to zero for most
error paths.  There is a mix of direct returns and "goto out" but I changed
everything to direct returns for consistency.

Fixes: 56de8357049c ("scsi: lpfc: fix calls to dma_set_mask_and_coherent()")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Acked-by: James SmartÂ  <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 3a487ff78c4b2bf5686dbb29178cfd78b3eed053)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_init.c
diff --cc drivers/scsi/lpfc/lpfc_init.c
index e516c8e33f67,bbc2815fc012..000000000000
--- a/drivers/scsi/lpfc/lpfc_init.c
+++ b/drivers/scsi/lpfc/lpfc_init.c
@@@ -9792,25 -10047,18 +9792,25 @@@ out
  static int
  lpfc_sli4_pci_mem_setup(struct lpfc_hba *phba)
  {
 -	struct pci_dev *pdev = phba->pcidev;
 +	struct pci_dev *pdev;
  	unsigned long bar0map_len, bar1map_len, bar2map_len;
- 	int error = -ENODEV;
+ 	int error;
  	uint32_t if_type;
  
 -	if (!pdev)
 +	/* Obtain PCI device reference */
 +	if (!phba->pcidev)
  		return error;
 +	else
 +		pdev = phba->pcidev;
  
  	/* Set the device DMA mask size */
 -	if (dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(64)) ||
 -	    dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32)))
 -		return error;
 +	if (pci_set_dma_mask(pdev, DMA_BIT_MASK(64)) != 0
 +	 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(64)) != 0) {
 +		if (pci_set_dma_mask(pdev, DMA_BIT_MASK(32)) != 0
 +		 || pci_set_consistent_dma_mask(pdev,DMA_BIT_MASK(32)) != 0) {
 +			return error;
 +		}
 +	}
  
  	/*
  	 * The BARs and register set definitions and offset locations are
@@@ -9871,7 -10119,7 +9871,11 @@@
  			dev_printk(KERN_ERR, &pdev->dev,
  				"ioremap failed for SLI4 PCI config "
  				"registers.\n");
++<<<<<<< HEAD
 +				goto out;
++=======
+ 			return -ENODEV;
++>>>>>>> 3a487ff78c4b (scsi: lpfc: Fix error codes in lpfc_sli4_pci_mem_setup())
  		}
  		lpfc_sli4_bar0_register_memmap(phba, if_type);
  	}
* Unmerged path drivers/scsi/lpfc/lpfc_init.c
