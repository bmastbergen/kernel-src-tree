net/mlx5e: Allow VLAN rewrite of prio field with the same match

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Eli Britstein <elibr@mellanox.com>
commit 6fca9d1e603aa86e4902ccb0ab17995c2c34f82a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/6fca9d1e.failed

Changing the prio field of the VLAN is not supported. With
commit 37410902874c ("net/mlx5e: Support VLAN modify action") zero
value indicated "no-change". Allow the vid rewrite if the prio match
is the same as the prio set value.

Fixes: 37410902874c ("net/mlx5e: Support VLAN modify action")
	Signed-off-by: Eli Britstein <elibr@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 6fca9d1e603aa86e4902ccb0ab17995c2c34f82a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index c47f64762949,611b636c603e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -2274,7 -2277,52 +2274,56 @@@ static bool same_hw_devs(struct mlx5e_p
  	return (fsystem_guid == psystem_guid);
  }
  
++<<<<<<< HEAD
 +static int parse_tc_nic_actions(struct mlx5e_priv *priv, struct tcf_exts *exts,
++=======
+ static int add_vlan_rewrite_action(struct mlx5e_priv *priv, int namespace,
+ 				   const struct flow_action_entry *act,
+ 				   struct mlx5e_tc_flow_parse_attr *parse_attr,
+ 				   struct pedit_headers_action *hdrs,
+ 				   u32 *action, struct netlink_ext_ack *extack)
+ {
+ 	u16 mask16 = VLAN_VID_MASK;
+ 	u16 val16 = act->vlan.vid & VLAN_VID_MASK;
+ 	const struct flow_action_entry pedit_act = {
+ 		.id = FLOW_ACTION_MANGLE,
+ 		.mangle.htype = FLOW_ACT_MANGLE_HDR_TYPE_ETH,
+ 		.mangle.offset = offsetof(struct vlan_ethhdr, h_vlan_TCI),
+ 		.mangle.mask = ~(u32)be16_to_cpu(*(__be16 *)&mask16),
+ 		.mangle.val = (u32)be16_to_cpu(*(__be16 *)&val16),
+ 	};
+ 	u8 match_prio_mask, match_prio_val;
+ 	void *headers_c, *headers_v;
+ 	int err;
+ 
+ 	headers_c = get_match_headers_criteria(*action, &parse_attr->spec);
+ 	headers_v = get_match_headers_value(*action, &parse_attr->spec);
+ 
+ 	if (!(MLX5_GET(fte_match_set_lyr_2_4, headers_c, cvlan_tag) &&
+ 	      MLX5_GET(fte_match_set_lyr_2_4, headers_v, cvlan_tag))) {
+ 		NL_SET_ERR_MSG_MOD(extack,
+ 				   "VLAN rewrite action must have VLAN protocol match");
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ 	match_prio_mask = MLX5_GET(fte_match_set_lyr_2_4, headers_c, first_prio);
+ 	match_prio_val = MLX5_GET(fte_match_set_lyr_2_4, headers_v, first_prio);
+ 	if (act->vlan.prio != (match_prio_val & match_prio_mask)) {
+ 		NL_SET_ERR_MSG_MOD(extack,
+ 				   "Changing VLAN prio is not supported");
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ 	err = parse_tc_pedit_action(priv, &pedit_act, namespace, parse_attr,
+ 				    hdrs, NULL);
+ 	*action |= MLX5_FLOW_CONTEXT_ACTION_MOD_HDR;
+ 
+ 	return err;
+ }
+ 
+ static int parse_tc_nic_actions(struct mlx5e_priv *priv,
+ 				struct flow_action *flow_action,
++>>>>>>> 6fca9d1e603a (net/mlx5e: Allow VLAN rewrite of prio field with the same match)
  				struct mlx5e_tc_flow_parse_attr *parse_attr,
  				struct mlx5e_tc_flow *flow,
  				struct netlink_ext_ack *extack)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
