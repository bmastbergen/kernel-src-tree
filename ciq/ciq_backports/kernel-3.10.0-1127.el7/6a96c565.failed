xfs: don't accept inode buffers with suspicious unlinked chains

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 6a96c5650568a2218712d43ec16f3f82296a6c53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/6a96c565.failed

When we're verifying inode buffers, sanity-check the unlinked pointer.
We don't want to run the risk of trying to purge something that's
obviously broken.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
(cherry picked from commit 6a96c5650568a2218712d43ec16f3f82296a6c53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_inode_buf.c
diff --cc fs/xfs/libxfs/xfs_inode_buf.c
index 3aebe5129937,f0cfcd79ac39..000000000000
--- a/fs/xfs/libxfs/xfs_inode_buf.c
+++ b/fs/xfs/libxfs/xfs_inode_buf.c
@@@ -121,9 -127,12 +127,15 @@@ xfs_inode_buf_verify
  				(unsigned long long)bp->b_bn, i,
  				be16_to_cpu(dip->di_magic));
  #endif
++<<<<<<< HEAD
++=======
+ 			xfs_buf_verifier_error(bp, -EFSCORRUPTED,
+ 					__func__, dip, sizeof(*dip),
+ 					NULL);
+ 			return;
++>>>>>>> 6a96c5650568 (xfs: don't accept inode buffers with suspicious unlinked chains)
  		}
  	}
- 	xfs_inobp_check(mp, bp);
  }
  
  
* Unmerged path fs/xfs/libxfs/xfs_inode_buf.c
