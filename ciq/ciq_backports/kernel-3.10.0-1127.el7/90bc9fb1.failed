x86/mm/pkeys: Fix fill_sig_info_pkey

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 90bc9fb15942ad08b46cd003d8d1b51f3d43e322
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/90bc9fb1.failed

SEGV_PKUERR is a signal specific si_code which happens to have the
same numeric value as several others: BUS_MCEERR_AR, ILL_ILLTRP,
FPE_FLTOVF, TRAP_HWBKPT, CLD_TRAPPED, POLL_ERR, SEGV_THREAD_ID,
as such it is not safe to just test the si_code the signal number
must also be tested to prevent a false positive in fill_sig_info_pkey.

I found this error by inspection, and BUS_MCEERR_AR appears to
be a real candidate for confusion.  So pass in si_signo and fix it.

	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Ingo Molnar <mingo@kernel.org>
Fixes: 019132ff3daf ("x86/mm/pkeys: Fill in pkey field in siginfo")
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit 90bc9fb15942ad08b46cd003d8d1b51f3d43e322)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/fault.c
diff --cc arch/x86/mm/fault.c
index a3d305dde73f,b3e40773dce0..000000000000
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@@ -172,8 -172,8 +172,13 @@@ is_prefetch(struct pt_regs *regs, unsig
   * 6. T1   : reaches here, sees vma_pkey(vma)=5, when we really
   *	     faulted on a pte with its pkey=4.
   */
++<<<<<<< HEAD
 +static void fill_sig_info_pkey(int si_code, siginfo_t *info,
 +		struct vm_area_struct *vma)
++=======
+ static void fill_sig_info_pkey(int si_signo, int si_code, siginfo_t *info,
+ 		u32 *pkey)
++>>>>>>> 90bc9fb15942 (x86/mm/pkeys: Fix fill_sig_info_pkey)
  {
  	/* This is effectively an #ifdef */
  	if (!boot_cpu_has(X86_FEATURE_OSPKE))
@@@ -220,7 -219,7 +225,11 @@@ force_sig_info_fault(int si_signo, int 
  		lsb = PAGE_SHIFT;
  	info.si_addr_lsb = lsb;
  
++<<<<<<< HEAD
 +	fill_sig_info_pkey(si_code, &info, vma);
++=======
+ 	fill_sig_info_pkey(si_signo, si_code, &info, pkey);
++>>>>>>> 90bc9fb15942 (x86/mm/pkeys: Fix fill_sig_info_pkey)
  
  	force_sig_info(si_signo, &info, tsk);
  }
* Unmerged path arch/x86/mm/fault.c
