kvm: x86: add host poll control msrs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Marcelo Tosatti <mtosatti@redhat.com>
commit 2d5ba19bdfef4dd06add144eb04287ee98409f75
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/2d5ba19b.failed

Add an MSRs which allows the guest to disable
host polling (specifically the cpuidle-haltpoll,
when performing polling in the guest, disables
host side polling).

	Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 2d5ba19bdfef4dd06add144eb04287ee98409f75)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/uapi/asm/kvm_para.h
#	arch/x86/kvm/cpuid.c
#	arch/x86/kvm/x86.c
diff --cc arch/x86/include/uapi/asm/kvm_para.h
index 92e7c8f65928,21d5f0240595..000000000000
--- a/arch/x86/include/uapi/asm/kvm_para.h
+++ b/arch/x86/include/uapi/asm/kvm_para.h
@@@ -24,6 -26,12 +24,15 @@@
  #define KVM_FEATURE_STEAL_TIME		5
  #define KVM_FEATURE_PV_EOI		6
  #define KVM_FEATURE_PV_UNHALT		7
++<<<<<<< HEAD
++=======
+ #define KVM_FEATURE_PV_TLB_FLUSH	9
+ #define KVM_FEATURE_ASYNC_PF_VMEXIT	10
+ #define KVM_FEATURE_PV_SEND_IPI	11
+ #define KVM_FEATURE_POLL_CONTROL	12
+ 
+ #define KVM_HINTS_REALTIME      0
++>>>>>>> 2d5ba19bdfef (kvm: x86: add host poll control msrs)
  
  /* The last 8 bits are used to indicate how to interpret the flags field
   * in pvclock structure. If no bits are set, all flags are ignored.
diff --cc arch/x86/kvm/cpuid.c
index 25306b1ea48a,68c74e948e28..000000000000
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@@ -599,7 -655,11 +599,15 @@@ static inline int __do_cpuid_ent(struc
  			     (1 << KVM_FEATURE_ASYNC_PF) |
  			     (1 << KVM_FEATURE_PV_EOI) |
  			     (1 << KVM_FEATURE_CLOCKSOURCE_STABLE_BIT) |
++<<<<<<< HEAD
 +			     (1 << KVM_FEATURE_PV_UNHALT);
++=======
+ 			     (1 << KVM_FEATURE_PV_UNHALT) |
+ 			     (1 << KVM_FEATURE_PV_TLB_FLUSH) |
+ 			     (1 << KVM_FEATURE_ASYNC_PF_VMEXIT) |
+ 			     (1 << KVM_FEATURE_PV_SEND_IPI) |
+ 			     (1 << KVM_FEATURE_POLL_CONTROL);
++>>>>>>> 2d5ba19bdfef (kvm: x86: add host poll control msrs)
  
  		if (sched_info_on())
  			entry->eax |= (1 << KVM_FEATURE_STEAL_TIME);
diff --cc arch/x86/kvm/x86.c
index 69feb8491cac,eb87d71ec14a..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -1034,7 -1170,14 +1034,14 @@@ static u32 emulated_msrs[] = 
  	MSR_IA32_MCG_CTL,
  	MSR_IA32_MCG_EXT_CTL,
  	MSR_IA32_SMBASE,
 -	MSR_SMI_COUNT,
 -	MSR_PLATFORM_INFO,
 -	MSR_MISC_FEATURES_ENABLES,
  	MSR_AMD64_VIRT_SPEC_CTRL,
++<<<<<<< HEAD
++=======
+ 	MSR_IA32_POWER_CTL,
+ 
+ 	MSR_K7_HWCR,
+ 	MSR_KVM_POLL_CONTROL,
++>>>>>>> 2d5ba19bdfef (kvm: x86: add host poll control msrs)
  };
  
  static unsigned num_emulated_msrs;
@@@ -7732,6 -8873,11 +7750,14 @@@ void kvm_arch_vcpu_postcreate(struct kv
  	msr.host_initiated = true;
  	kvm_write_tsc(vcpu, &msr);
  	vcpu_put(vcpu);
++<<<<<<< HEAD
++=======
+ 
+ 	/* poll control enabled by default */
+ 	vcpu->arch.msr_kvm_poll_control = 1;
+ 
+ 	mutex_unlock(&vcpu->mutex);
++>>>>>>> 2d5ba19bdfef (kvm: x86: add host poll control msrs)
  
  	if (!kvmclock_periodic_sync)
  		return;
diff --git a/Documentation/virtual/kvm/msr.txt b/Documentation/virtual/kvm/msr.txt
index 2a71c8f29f68..0a75e3e76127 100644
--- a/Documentation/virtual/kvm/msr.txt
+++ b/Documentation/virtual/kvm/msr.txt
@@ -264,3 +264,12 @@ MSR_KVM_EOI_EN: 0x4b564d04
 	guest must both read the least significant bit in the memory area and
 	clear it using a single CPU instruction, such as test and clear, or
 	compare and exchange.
+
+MSR_KVM_POLL_CONTROL: 0x4b564d05
+	Control host-side polling.
+
+	data: Bit 0 enables (1) or disables (0) host-side HLT polling logic.
+
+	KVM guests can request the host not to poll on HLT, for example if
+	they are performing polling themselves.
+
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 35f22ae3e497..8d478054e39b 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -690,6 +690,8 @@ struct kvm_vcpu_arch {
 		struct gfn_to_hva_cache data;
 	} pv_eoi;
 
+	u64 msr_kvm_poll_control;
+
 	/*
 	 * Indicate whether the access faults on its page table in guest
 	 * which is set when fix page fault and used to detect unhandeable
* Unmerged path arch/x86/include/uapi/asm/kvm_para.h
diff --git a/arch/x86/kvm/Kconfig b/arch/x86/kvm/Kconfig
index 9b6dcecca26d..eebfa602ee9f 100644
--- a/arch/x86/kvm/Kconfig
+++ b/arch/x86/kvm/Kconfig
@@ -41,6 +41,7 @@ config KVM
 	select PERF_EVENTS
 	select HAVE_KVM_MSI
 	select HAVE_KVM_CPU_RELAX_INTERCEPT
+	select HAVE_KVM_NO_POLL
 	select KVM_GENERIC_DIRTYLOG_READ_PROTECT
 	select KVM_VFIO
 	---help---
* Unmerged path arch/x86/kvm/cpuid.c
* Unmerged path arch/x86/kvm/x86.c
