net/mlx5e: Fix possible modify header actions memory leak

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Eli Britstein <elibr@mellanox.com>
commit e7739a60712a041516f74c8917a0b3e5f1e4f01e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/e7739a60.failed

The cited commit could disable the modify header flag, but did not free
the allocated memory for the modify header actions. Fix it.

Fixes: 27c11b6b844cd ("net/mlx5e: Do not rewrite fields with the same match")
	Signed-off-by: Eli Britstein <elibr@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit e7739a60712a041516f74c8917a0b3e5f1e4f01e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index c47f64762949,31cd02f11499..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -2350,10 -2550,27 +2350,26 @@@ static int parse_tc_nic_actions(struct 
  
  			attr->flow_tag = mark;
  			action |= MLX5_FLOW_CONTEXT_ACTION_FWD_DEST;
 -			}
 -			break;
 -		default:
 -			NL_SET_ERR_MSG_MOD(extack, "The offload action is not supported");
 -			return -EOPNOTSUPP;
 +			continue;
  		}
 -	}
  
++<<<<<<< HEAD
 +		return -EINVAL;
++=======
+ 	if (hdrs[TCA_PEDIT_KEY_EX_CMD_SET].pedits ||
+ 	    hdrs[TCA_PEDIT_KEY_EX_CMD_ADD].pedits) {
+ 		err = alloc_tc_pedit_action(priv, MLX5_FLOW_NAMESPACE_KERNEL,
+ 					    parse_attr, hdrs, &action, extack);
+ 		if (err)
+ 			return err;
+ 		/* in case all pedit actions are skipped, remove the MOD_HDR
+ 		 * flag.
+ 		 */
+ 		if (parse_attr->num_mod_hdr_actions == 0) {
+ 			action &= ~MLX5_FLOW_CONTEXT_ACTION_MOD_HDR;
+ 			kfree(parse_attr->mod_hdr_actions);
+ 		}
++>>>>>>> e7739a60712a (net/mlx5e: Fix possible modify header actions memory leak)
  	}
  
  	attr->action = action;
@@@ -2732,11 -2975,43 +2748,42 @@@ static int parse_tc_fdb_actions(struct 
  			}
  			action |= MLX5_FLOW_CONTEXT_ACTION_COUNT;
  			attr->dest_chain = dest_chain;
 -			break;
 -			}
 -		default:
 -			NL_SET_ERR_MSG_MOD(extack, "The offload action is not supported");
 -			return -EOPNOTSUPP;
 -		}
 -	}
  
++<<<<<<< HEAD
 +			continue;
++=======
+ 	if (MLX5_CAP_GEN(esw->dev, prio_tag_required) &&
+ 	    action & MLX5_FLOW_CONTEXT_ACTION_VLAN_POP) {
+ 		/* For prio tag mode, replace vlan pop with rewrite vlan prio
+ 		 * tag rewrite.
+ 		 */
+ 		action &= ~MLX5_FLOW_CONTEXT_ACTION_VLAN_POP;
+ 		err = add_vlan_prio_tag_rewrite_action(priv, parse_attr, hdrs,
+ 						       &action, extack);
+ 		if (err)
+ 			return err;
+ 	}
+ 
+ 	if (hdrs[TCA_PEDIT_KEY_EX_CMD_SET].pedits ||
+ 	    hdrs[TCA_PEDIT_KEY_EX_CMD_ADD].pedits) {
+ 		err = alloc_tc_pedit_action(priv, MLX5_FLOW_NAMESPACE_FDB,
+ 					    parse_attr, hdrs, &action, extack);
+ 		if (err)
+ 			return err;
+ 		/* in case all pedit actions are skipped, remove the MOD_HDR
+ 		 * flag. we might have set split_count either by pedit or
+ 		 * pop/push. if there is no pop/push either, reset it too.
+ 		 */
+ 		if (parse_attr->num_mod_hdr_actions == 0) {
+ 			action &= ~MLX5_FLOW_CONTEXT_ACTION_MOD_HDR;
+ 			kfree(parse_attr->mod_hdr_actions);
+ 			if (!((action & MLX5_FLOW_CONTEXT_ACTION_VLAN_POP) ||
+ 			      (action & MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH)))
+ 				attr->split_count = 0;
++>>>>>>> e7739a60712a (net/mlx5e: Fix possible modify header actions memory leak)
  		}
 +
 +		return -EINVAL;
  	}
  
  	attr->action = action;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
