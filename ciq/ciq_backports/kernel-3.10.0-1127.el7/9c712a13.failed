xfs: dump the first 128 bytes of any corrupt buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 9c712a1346b214a92f4a0e5bb4de4c075de65c32
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/9c712a13.failed

Increase the corrupt buffer dump to the first 128 bytes since v5
filesystems have larger block headers than before.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
(cherry picked from commit 9c712a1346b214a92f4a0e5bb4de4c075de65c32)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_error.c
diff --cc fs/xfs/xfs_error.c
index 388ce630c4b7,980d5f0660b5..000000000000
--- a/fs/xfs/xfs_error.c
+++ b/fs/xfs/xfs_error.c
@@@ -318,11 -333,11 +318,16 @@@ xfs_corruption_error
  	void			*p,
  	const char		*filename,
  	int			linenum,
 -	xfs_failaddr_t		failaddr)
 +	void			*ra)
  {
  	if (level <= xfs_error_level)
++<<<<<<< HEAD
 +		xfs_hex_dump(p, 64);
 +	xfs_error_report(tag, level, mp, filename, linenum, ra);
++=======
+ 		xfs_hex_dump(p, XFS_CORRUPTION_DUMP_LEN);
+ 	xfs_error_report(tag, level, mp, filename, linenum, failaddr);
++>>>>>>> 9c712a1346b2 (xfs: dump the first 128 bytes of any corrupt buffer)
  	xfs_alert(mp, "Corruption detected. Unmount and run xfs_repair");
  }
  
diff --git a/fs/xfs/xfs_buf.c b/fs/xfs/xfs_buf.c
index fdf9227ebab1..262e9dd764f4 100644
--- a/fs/xfs/xfs_buf.c
+++ b/fs/xfs/xfs_buf.c
@@ -1404,7 +1404,8 @@ _xfs_buf_ioapply(
 				xfs_warn(mp,
 					"%s: no ops on block 0x%llx/0x%x",
 					__func__, bp->b_bn, bp->b_length);
-				xfs_hex_dump(bp->b_addr, 64);
+				xfs_hex_dump(bp->b_addr,
+						XFS_CORRUPTION_DUMP_LEN);
 				dump_stack();
 			}
 		}
* Unmerged path fs/xfs/xfs_error.c
diff --git a/fs/xfs/xfs_error.h b/fs/xfs/xfs_error.h
index ea816c1bf8db..25de10db14c5 100644
--- a/fs/xfs/xfs_error.h
+++ b/fs/xfs/xfs_error.h
@@ -37,6 +37,9 @@ extern void xfs_verifier_error(struct xfs_buf *bp);
 #define XFS_ERRLEVEL_LOW	1
 #define XFS_ERRLEVEL_HIGH	5
 
+/* Dump 128 bytes of any corrupt buffer */
+#define XFS_CORRUPTION_DUMP_LEN		(128)
+
 /*
  * Macros to set EFSCORRUPTED & return/branch.
  */
