memory-hotplug: fix comments in zone_spanned_pages_in_node() and zone_spanned_pages_in_node()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Xishi Qiu <qiuxishi@huawei.com>
commit b5685e9263a6f3a8da546b8a46382f18a63745c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/b5685e92.failed

When hot adding a node from add_memory(), we will add memblock first, so
the node is not empty.  But when called from cpu_up(), the node should
be empty.

	Signed-off-by: Xishi Qiu <qiuxishi@huawei.com>
	Cc: Tang Chen <tangchen@cn.fujitsu.com>
	Cc: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
	Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Cc: Vlastimil Babka <vbabka@suse.cz>
	Cc: Taku Izumi <izumi.taku@jp.fujitsu.com>\
	Acked-by: David Rientjes <rientjes@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit b5685e9263a6f3a8da546b8a46382f18a63745c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/page_alloc.c
diff --cc mm/page_alloc.c
index 749853d2e5e9,b0fda2b9ca76..000000000000
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@@ -5445,11 -5081,11 +5445,17 @@@ static unsigned long __meminit zone_spa
  					unsigned long zone_type,
  					unsigned long node_start_pfn,
  					unsigned long node_end_pfn,
 +					unsigned long *zone_start_pfn,
 +					unsigned long *zone_end_pfn,
  					unsigned long *ignored)
  {
++<<<<<<< HEAD
 +	/* When hotadd a new node, the node should be empty */
++=======
+ 	unsigned long zone_start_pfn, zone_end_pfn;
+ 
+ 	/* When hotadd a new node from cpu_up(), the node should be empty */
++>>>>>>> b5685e9263a6 (memory-hotplug: fix comments in zone_spanned_pages_in_node() and zone_spanned_pages_in_node())
  	if (!node_start_pfn && !node_end_pfn)
  		return 0;
  
@@@ -5515,9 -5151,8 +5521,9 @@@ static unsigned long __meminit zone_abs
  	unsigned long zone_low = arch_zone_lowest_possible_pfn[zone_type];
  	unsigned long zone_high = arch_zone_highest_possible_pfn[zone_type];
  	unsigned long zone_start_pfn, zone_end_pfn;
 +	unsigned long nr_absent;
  
- 	/* When hotadd a new node, the node should be empty */
+ 	/* When hotadd a new node from cpu_up(), the node should be empty */
  	if (!node_start_pfn && !node_end_pfn)
  		return 0;
  
* Unmerged path mm/page_alloc.c
