scsi: qla2xxx: Fix hardlockup in abort command during driver remove

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Arun Easi <aeasi@marvell.com>
commit 5589b08e5be47e426158f659a892153b4a831921
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/5589b08e.failed

[436194.555537] NMI watchdog: Watchdog detected hard LOCKUP on cpu 5
[436194.555558] RIP: 0010:native_queued_spin_lock_slowpath+0x63/0x1e0

[436194.555563] Call Trace:
[436194.555564]  _raw_spin_lock_irqsave+0x30/0x40
[436194.555564]  qla24xx_async_abort_command+0x29/0xd0 [qla2xxx]
[436194.555565]  qla24xx_abort_command+0x208/0x2d0 [qla2xxx]
[436194.555565]  __qla2x00_abort_all_cmds+0x16b/0x290 [qla2xxx]
[436194.555565]  qla2x00_abort_all_cmds+0x42/0x60 [qla2xxx]
[436194.555566]  qla2x00_abort_isp_cleanup+0x2bd/0x3a0 [qla2xxx]
[436194.555566]  qla2x00_remove_one+0x1ad/0x360 [qla2xxx]
[436194.555566]  pci_device_remove+0x3b/0xb0

Fixes: 219d27d7147e (scsi: qla2xxx: Fix race conditions in the code for aborting SCSI commands)
	Cc: stable@vger.kernel.org # 5.2
	Signed-off-by: Arun Easi <aeasi@marvell.com>
	Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 5589b08e5be47e426158f659a892153b4a831921)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 9b129f1fdd3e,d056f5e7cf93..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -1797,6 -1713,41 +1797,44 @@@ qla2x00_loop_reset(scsi_qla_host_t *vha
  	return QLA_SUCCESS;
  }
  
++<<<<<<< HEAD
++=======
+ static void qla2x00_abort_srb(struct qla_qpair *qp, srb_t *sp, const int res,
+ 			      unsigned long *flags)
+ 	__releases(qp->qp_lock_ptr)
+ 	__acquires(qp->qp_lock_ptr)
+ {
+ 	DECLARE_COMPLETION_ONSTACK(comp);
+ 	scsi_qla_host_t *vha = qp->vha;
+ 	struct qla_hw_data *ha = vha->hw;
+ 	int rval;
+ 
+ 	if (sp_get(sp))
+ 		return;
+ 
+ 	if (sp->type == SRB_NVME_CMD || sp->type == SRB_NVME_LS ||
+ 	    (sp->type == SRB_SCSI_CMD && !ha->flags.eeh_busy &&
+ 	     !test_bit(ABORT_ISP_ACTIVE, &vha->dpc_flags) &&
+ 	     !qla2x00_isp_reg_stat(ha))) {
+ 		sp->comp = &comp;
+ 		spin_unlock_irqrestore(qp->qp_lock_ptr, *flags);
+ 		rval = ha->isp_ops->abort_command(sp);
+ 
+ 		switch (rval) {
+ 		case QLA_SUCCESS:
+ 			sp->done(sp, res);
+ 			break;
+ 		case QLA_FUNCTION_PARAMETER_ERROR:
+ 			wait_for_completion(&comp);
+ 			break;
+ 		}
+ 
+ 		spin_lock_irqsave(qp->qp_lock_ptr, *flags);
+ 		sp->comp = NULL;
+ 	}
+ }
+ 
++>>>>>>> 5589b08e5be4 (scsi: qla2xxx: Fix hardlockup in abort command during driver remove)
  static void
  __qla2x00_abort_all_cmds(struct qla_qpair *qp, int res)
  {
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
