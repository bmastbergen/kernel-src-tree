sg: remove ->sg_magic member

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Jens Axboe <axboe@kernel.dk>
commit 9544bc5347207a68eb308cc8aaaed6c3a687cabd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/9544bc53.failed

This was introduced more than a decade ago when sg chaining was
added, but we never really caught anything with it. The scatterlist
entry size can be critical, since drivers allocate it, so remove
the magic member. Recently it's been triggering allocation stalls
and failures in NVMe.

	Tested-by: Jordan Glover <Golden_Miller83@protonmail.ch>
	Acked-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 9544bc5347207a68eb308cc8aaaed6c3a687cabd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/scatterlist.h
#	lib/scatterlist.c
diff --cc include/linux/scatterlist.h
index 70e9bbe7c3f5,093aa57120b0..000000000000
--- a/include/linux/scatterlist.h
+++ b/include/linux/scatterlist.h
@@@ -2,12 -3,20 +2,24 @@@
  #define _LINUX_SCATTERLIST_H
  
  #include <linux/string.h>
 -#include <linux/types.h>
  #include <linux/bug.h>
  #include <linux/mm.h>
 -#include <asm/io.h>
  
++<<<<<<< HEAD
 +#include <asm/types.h>
 +#include <asm/scatterlist.h>
 +#include <asm/io.h>
++=======
+ struct scatterlist {
+ 	unsigned long	page_link;
+ 	unsigned int	offset;
+ 	unsigned int	length;
+ 	dma_addr_t	dma_address;
+ #ifdef CONFIG_NEED_SG_DMA_LENGTH
+ 	unsigned int	dma_length;
+ #endif
+ };
++>>>>>>> 9544bc534720 (sg: remove ->sg_magic member)
  
  /*
   * Since the above length field is an unsigned int, below we define the maximum
@@@ -229,6 -239,18 +232,21 @@@ static inline void *sg_virt(struct scat
  	return page_address(sg_page(sg)) + sg->offset;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * sg_init_marker - Initialize markers in sg table
+  * @sgl:	   The SG table
+  * @nents:	   Number of entries in table
+  *
+  **/
+ static inline void sg_init_marker(struct scatterlist *sgl,
+ 				  unsigned int nents)
+ {
+ 	sg_mark_end(&sgl[nents - 1]);
+ }
+ 
++>>>>>>> 9544bc534720 (sg: remove ->sg_magic member)
  int sg_nents(struct scatterlist *sg);
  int sg_nents_for_len(struct scatterlist *sg, u64 len);
  struct scatterlist *sg_next(struct scatterlist *);
diff --cc lib/scatterlist.c
index 5204227d3a51,d4ae67d6cd1e..000000000000
--- a/lib/scatterlist.c
+++ b/lib/scatterlist.c
@@@ -114,11 -108,7 +111,13 @@@ struct scatterlist *sg_last(struct scat
  	for_each_sg(sgl, sg, nents, i)
  		ret = sg;
  
++<<<<<<< HEAD
 +#endif
 +#ifdef CONFIG_DEBUG_SG
 +	BUG_ON(sgl[0].sg_magic != SG_MAGIC);
++=======
++>>>>>>> 9544bc534720 (sg: remove ->sg_magic member)
  	BUG_ON(!sg_is_last(ret));
- #endif
  	return ret;
  }
  EXPORT_SYMBOL(sg_last);
* Unmerged path include/linux/scatterlist.h
* Unmerged path lib/scatterlist.c
diff --git a/tools/virtio/linux/scatterlist.h b/tools/virtio/linux/scatterlist.h
index 68c9e2adc996..65dfd4002e16 100644
--- a/tools/virtio/linux/scatterlist.h
+++ b/tools/virtio/linux/scatterlist.h
@@ -35,7 +35,6 @@ static inline void sg_assign_page(struct scatterlist *sg, struct page *page)
 	 */
 	BUG_ON((unsigned long) page & 0x03);
 #ifdef CONFIG_DEBUG_SG
-	BUG_ON(sg->sg_magic != SG_MAGIC);
 	BUG_ON(sg_is_chain(sg));
 #endif
 	sg->page_link = page_link | (unsigned long) page;
@@ -66,7 +65,6 @@ static inline void sg_set_page(struct scatterlist *sg, struct page *page,
 static inline struct page *sg_page(struct scatterlist *sg)
 {
 #ifdef CONFIG_DEBUG_SG
-	BUG_ON(sg->sg_magic != SG_MAGIC);
 	BUG_ON(sg_is_chain(sg));
 #endif
 	return (struct page *)((sg)->page_link & ~0x3);
@@ -115,9 +113,6 @@ static inline void sg_chain(struct scatterlist *prv, unsigned int prv_nents,
  **/
 static inline void sg_mark_end(struct scatterlist *sg)
 {
-#ifdef CONFIG_DEBUG_SG
-	BUG_ON(sg->sg_magic != SG_MAGIC);
-#endif
 	/*
 	 * Set termination bit, clear potential chain bit
 	 */
@@ -135,17 +130,11 @@ static inline void sg_mark_end(struct scatterlist *sg)
  **/
 static inline void sg_unmark_end(struct scatterlist *sg)
 {
-#ifdef CONFIG_DEBUG_SG
-	BUG_ON(sg->sg_magic != SG_MAGIC);
-#endif
 	sg->page_link &= ~0x02;
 }
 
 static inline struct scatterlist *sg_next(struct scatterlist *sg)
 {
-#ifdef CONFIG_DEBUG_SG
-	BUG_ON(sg->sg_magic != SG_MAGIC);
-#endif
 	if (sg_is_last(sg))
 		return NULL;
 
@@ -159,13 +148,6 @@ static inline struct scatterlist *sg_next(struct scatterlist *sg)
 static inline void sg_init_table(struct scatterlist *sgl, unsigned int nents)
 {
 	memset(sgl, 0, sizeof(*sgl) * nents);
-#ifdef CONFIG_DEBUG_SG
-	{
-		unsigned int i;
-		for (i = 0; i < nents; i++)
-			sgl[i].sg_magic = SG_MAGIC;
-	}
-#endif
 	sg_mark_end(&sgl[nents - 1]);
 }
 
