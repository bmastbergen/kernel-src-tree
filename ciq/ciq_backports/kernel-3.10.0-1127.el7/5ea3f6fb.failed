perf/x86: Apply more accurate check on hypervisor platform

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Zhenzhong Duan <zhenzhong.duan@oracle.com>
commit 5ea3f6fb37b79da33ac9211df336fd2b9f47c39f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/5ea3f6fb.failed

check_msr is used to fix a bug report in guest where KVM doesn't support
LBR MSR and cause #GP.

The msr check is bypassed on real HW to workaround a false failure,
see commit d0e1a507bdc7 ("perf/x86/intel: Disable check_msr for real HW")

When running a guest with CONFIG_HYPERVISOR_GUEST not set or "nopv"
enabled, current check isn't enough and #GP could trigger.

	Signed-off-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/1564022366-18293-1-git-send-email-zhenzhong.duan@oracle.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5ea3f6fb37b79da33ac9211df336fd2b9f47c39f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/core.c
diff --cc arch/x86/events/intel/core.c
index 9266ff826d65,c9075fc75cb6..000000000000
--- a/arch/x86/events/intel/core.c
+++ b/arch/x86/events/intel/core.c
@@@ -3872,6 -4049,13 +3872,16 @@@ static bool check_msr(unsigned long msr
  	u64 val_old, val_new, val_tmp;
  
  	/*
++<<<<<<< HEAD
++=======
+ 	 * Disable the check for real HW, so we don't
+ 	 * mess with potentionaly enabled registers:
+ 	 */
+ 	if (!boot_cpu_has(X86_FEATURE_HYPERVISOR))
+ 		return true;
+ 
+ 	/*
++>>>>>>> 5ea3f6fb37b7 (perf/x86: Apply more accurate check on hypervisor platform)
  	 * Read the current value, change it and read it back to see if it
  	 * matches, this is needed to detect certain hardware emulators
  	 * (qemu/kvm) that don't trap on the MSR access and always return 0s.
* Unmerged path arch/x86/events/intel/core.c
