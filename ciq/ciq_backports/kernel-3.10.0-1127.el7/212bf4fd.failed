x86/topology: Define topology_logical_die_id()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Len Brown <len.brown@intel.com>
commit 212bf4fdb7f9eeeb99afd97ebad677d43e7b55ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/212bf4fd.failed

Define topology_logical_die_id() ala existing topology_logical_package_id()

	Signed-off-by: Len Brown <len.brown@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Zhang Rui <rui.zhang@intel.com>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/2f3526e25ae14fbeff26fb26e877d159df8946d9.1557769318.git.len.brown@intel.com

(cherry picked from commit 212bf4fdb7f9eeeb99afd97ebad677d43e7b55ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/processor.h
#	arch/x86/kernel/smpboot.c
diff --cc arch/x86/include/asm/processor.h
index 004d7b98c9bf,6aba36bde57f..000000000000
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@@ -133,12 -113,12 +133,17 @@@ struct cpuinfo_x86 
  	u16			booted_cores;
  	/* Physical processor id: */
  	u16			phys_proc_id;
 -	/* Logical processor id: */
 -	u16			logical_proc_id;
  	/* Core id: */
  	u16			cpu_core_id;
++<<<<<<< HEAD
 +	/* Compute unit id */
 +	RH_KABI_REPLACE(u8 compute_unit_id, __u8 cu_id)
 +	/* Address space bits used by the cache internally */
 +	RH_KABI_FILL_HOLE(u8	x86_cache_bits)
++=======
+ 	u16			cpu_die_id;
+ 	u16			logical_die_id;
++>>>>>>> 212bf4fdb7f9 (x86/topology: Define topology_logical_die_id())
  	/* Index into per_cpu list: */
  	u16			cpu_index;
  	u32			microcode;
diff --cc arch/x86/kernel/smpboot.c
index 9f0076e739c1,a6e01b6c2709..000000000000
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@@ -319,9 -344,32 +340,32 @@@ int topology_update_package_map(unsigne
  			cpu, pkg, new);
  	}
  found:
 -	cpu_data(cpu).logical_proc_id = new;
 +	rh_cpu_data(cpu).logical_proc_id = new;
  	return 0;
  }
+ /**
+  * topology_update_die_map - Update the physical to logical die map
+  * @die:	The die id as retrieved via CPUID
+  * @cpu:	The cpu for which this is updated
+  */
+ int topology_update_die_map(unsigned int die, unsigned int cpu)
+ {
+ 	int new;
+ 
+ 	/* Already available somewhere? */
+ 	new = topology_phys_to_logical_die(die, cpu);
+ 	if (new >= 0)
+ 		goto found;
+ 
+ 	new = logical_die++;
+ 	if (new != die) {
+ 		pr_info("CPU %u Converting physical %u to logical die %u\n",
+ 			cpu, die, new);
+ 	}
+ found:
+ 	cpu_data(cpu).logical_die_id = new;
+ 	return 0;
+ }
  
  void __init smp_store_boot_cpu_info(void)
  {
@@@ -331,9 -378,9 +375,14 @@@
  
  	*c = boot_cpu_data;
  	c->cpu_index = id;
 +	*rhc = rh_boot_cpu_data;
  	topology_update_package_map(c->phys_proc_id, id);
++<<<<<<< HEAD
 +	rhc->initialized = true;
++=======
+ 	topology_update_die_map(c->cpu_die_id, id);
+ 	c->initialized = true;
++>>>>>>> 212bf4fdb7f9 (x86/topology: Define topology_logical_die_id())
  }
  
  /*
* Unmerged path arch/x86/include/asm/processor.h
diff --git a/arch/x86/include/asm/topology.h b/arch/x86/include/asm/topology.h
index 4dea18d14c90..ffbc04ea3534 100644
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@ -122,6 +122,7 @@ extern const struct cpumask *cpu_coregroup_mask(int cpu);
 #ifdef ENABLE_TOPO_DEFINES
 #define topology_logical_package_id(cpu)	(rh_cpu_data(cpu).logical_proc_id)
 #define topology_physical_package_id(cpu)	(cpu_data(cpu).phys_proc_id)
+#define topology_logical_die_id(cpu)		(cpu_data(cpu).logical_die_id)
 #define topology_die_id(cpu)			(cpu_data(cpu).cpu_die_id)
 #define topology_core_id(cpu)			(cpu_data(cpu).cpu_core_id)
 #define topology_core_cpumask(cpu)		(per_cpu(cpu_core_map, cpu))
@@ -141,13 +142,17 @@ static inline int topology_max_smt_threads(void)
 }
 
 int topology_update_package_map(unsigned int apicid, unsigned int cpu);
+int topology_update_die_map(unsigned int dieid, unsigned int cpu);
 int topology_phys_to_logical_pkg(unsigned int pkg);
+int topology_phys_to_logical_die(unsigned int die, unsigned int cpu);
 bool topology_is_primary_thread(unsigned int cpu);
 bool topology_smt_supported(void);
 #else
 #define topology_max_packages()			(1)
 static inline int
 topology_update_package_map(unsigned int apicid, unsigned int cpu) { return 0; }
+static inline int
+topology_update_die_map(unsigned int dieid, unsigned int cpu) { return 0; }
 static inline int topology_phys_to_logical_pkg(unsigned int pkg) { return 0; }
 static inline int topology_max_smt_threads(void) { return 1; }
 static inline bool topology_is_primary_thread(unsigned int cpu) { return true; }
diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c
index f0257a566938..3a406fa7b73c 100644
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -1169,6 +1169,7 @@ static void validate_apic_and_package_id(struct cpuinfo_x86 *c)
 		       cpu, apicid, c->initial_apicid);
 	}
 	BUG_ON(topology_update_package_map(c->phys_proc_id, cpu));
+	BUG_ON(topology_update_die_map(c->cpu_die_id, cpu));
 #else
 	c->logical_proc_id = 0;
 #endif
* Unmerged path arch/x86/kernel/smpboot.c
