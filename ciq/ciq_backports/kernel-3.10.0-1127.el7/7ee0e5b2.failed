KVM: x86: MMU: Remove unused parameter of __direct_map()

jira LE-1907
cve CVE-2018-12207
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>
commit 7ee0e5b29d275ac299cdf8ef67e60bf1648c8c6a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/7ee0e5b2.failed

	Signed-off-by: Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 7ee0e5b29d275ac299cdf8ef67e60bf1648c8c6a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu.c
diff --cc arch/x86/kvm/mmu.c
index 24ebfb6e8f2e,8a1593f985df..000000000000
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@@ -3049,9 -2708,8 +3049,14 @@@ static void direct_pte_prefetch(struct 
  	__direct_pte_prefetch(vcpu, sp, sptep);
  }
  
++<<<<<<< HEAD
 +static int __direct_map(struct kvm_vcpu *vcpu, gpa_t v, int write,
 +			int map_writable, int level, gfn_t gfn, kvm_pfn_t pfn,
 +			bool prefault)
++=======
+ static int __direct_map(struct kvm_vcpu *vcpu, int write, int map_writable,
+ 			int level, gfn_t gfn, pfn_t pfn, bool prefault)
++>>>>>>> 7ee0e5b29d27 (KVM: x86: MMU: Remove unused parameter of __direct_map())
  {
  	struct kvm_shadow_walk_iterator iterator;
  	struct kvm_mmu_page *sp;
@@@ -3414,15 -3014,12 +3419,13 @@@ static int nonpaging_map(struct kvm_vcp
  	spin_lock(&vcpu->kvm->mmu_lock);
  	if (mmu_notifier_retry(vcpu->kvm, mmu_seq))
  		goto out_unlock;
 -	make_mmu_pages_available(vcpu);
 +	if (make_mmu_pages_available(vcpu) < 0)
 +		goto out_unlock;
  	if (likely(!force_pt_level))
  		transparent_hugepage_adjust(vcpu, &gfn, &pfn, &level);
- 	r = __direct_map(vcpu, v, write, map_writable, level, gfn, pfn,
- 			 prefault);
+ 	r = __direct_map(vcpu, write, map_writable, level, gfn, pfn, prefault);
  	spin_unlock(&vcpu->kvm->mmu_lock);
  
- 
  	return r;
  
  out_unlock:
@@@ -4059,12 -3525,10 +4062,11 @@@ static int tdp_page_fault(struct kvm_vc
  	spin_lock(&vcpu->kvm->mmu_lock);
  	if (mmu_notifier_retry(vcpu->kvm, mmu_seq))
  		goto out_unlock;
 -	make_mmu_pages_available(vcpu);
 +	if (make_mmu_pages_available(vcpu) < 0)
 +		goto out_unlock;
  	if (likely(!force_pt_level))
  		transparent_hugepage_adjust(vcpu, &gfn, &pfn, &level);
- 	r = __direct_map(vcpu, gpa, write, map_writable,
- 			 level, gfn, pfn, prefault);
+ 	r = __direct_map(vcpu, write, map_writable, level, gfn, pfn, prefault);
  	spin_unlock(&vcpu->kvm->mmu_lock);
  
  	return r;
* Unmerged path arch/x86/kvm/mmu.c
