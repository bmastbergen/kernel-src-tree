PCI/MSI: Don't warn when irq_create_affinity_masks() returns NULL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
Rebuild_CHGLOG: - [pci] msi: Don't warn when irq_create_affinity_masks() returns NULL (Ming Lei) [1717059]
Rebuild_FUZZ: 96.83%
commit-author Christoph Hellwig <hch@lst.de>
commit 8e1101d251647802d0a4ae19eb3d0e1453eaeff4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/8e1101d2.failed

irq_create_affinity_masks() can return NULL on non-SMP systems, when there
are not enough "free" vectors available to spread, or if memory allocation
for the CPU masks fails.  Only the allocation failure is of interest, and
even then the system will work just fine except for non-optimally spread
vectors.  Thus remove the warnings.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8e1101d251647802d0a4ae19eb3d0e1453eaeff4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/msi.c
diff --cc drivers/pci/msi.c
index f5a53c7f5bcf,2225afc1cbbb..000000000000
--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@@ -578,14 -538,12 +578,18 @@@ msi_setup_entry(struct pci_dev *dev, in
  	struct msi_desc *entry;
  	u16 control;
  
- 	if (affd) {
+ 	if (affd)
  		masks = irq_create_affinity_masks(nvec, affd);
++<<<<<<< HEAD
 +		if (!masks)
 +			pr_err("Unable to allocate affinity masks, ignoring\n");
 +	}
++=======
+ 
++>>>>>>> 8e1101d25164 (PCI/MSI: Don't warn when irq_create_affinity_masks() returns NULL)
  
  	/* MSI Entry Initialization */
 -	entry = alloc_msi_entry(&dev->dev, nvec, masks);
 +	entry = alloc_msi_entry(dev, nvec, masks);
  	if (!entry)
  		goto out;
  
@@@ -719,14 -676,11 +723,17 @@@ static int msix_setup_entries(struct pc
  	struct msi_desc *entry;
  	int ret, i;
  
- 	if (affd) {
+ 	if (affd)
  		masks = irq_create_affinity_masks(nvec, affd);
++<<<<<<< HEAD
 +		if (!masks)
 +			pr_err("Unable to allocate affinity masks, ignoring\n");
 +	}
++=======
++>>>>>>> 8e1101d25164 (PCI/MSI: Don't warn when irq_create_affinity_masks() returns NULL)
  
  	for (i = 0, curmsk = masks; i < nvec; i++) {
 -		entry = alloc_msi_entry(&dev->dev, 1, curmsk);
 +		entry = alloc_msi_entry(dev, 1, curmsk);
  		if (!entry) {
  			if (!i)
  				iounmap(base);
* Unmerged path drivers/pci/msi.c
