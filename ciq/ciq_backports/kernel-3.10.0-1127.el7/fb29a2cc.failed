percpu: setup_first_chunk enforce dynamic region must exist

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Dennis Zhou (Facebook) <dennisszhou@gmail.com>
commit fb29a2cc6b06e057ab7153a85190a96f66498ff4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/fb29a2cc.failed

The first chunk is handled as a special case as it is composed of the
static, reserved, and dynamic regions. The code handles each case
individually. The next several patches will merge these code paths and
lay the foundation for the bitmap allocator.

This patch modifies logic to enforce that a dynamic region exists and
changes the area map to account for that. This brings the logic closer
to the dynamic chunk's init logic.

	Signed-off-by: Dennis Zhou <dennisszhou@gmail.com>
	Reviewed-by: Josef Bacik <jbacik@fb.com>
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit fb29a2cc6b06e057ab7153a85190a96f66498ff4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/percpu.c
diff --cc mm/percpu.c
index 3c1f6f694380,3602d41a7dfe..000000000000
--- a/mm/percpu.c
+++ b/mm/percpu.c
@@@ -1689,14 -1701,13 +1690,20 @@@ int __init pcpu_setup_first_chunk(cons
  		schunk->free_size = dyn_size;
  		dyn_size = 0;			/* dynamic area covered */
  	}
- 	schunk->contig_hint = schunk->free_size;
  
+ 	schunk->contig_hint = schunk->free_size;
  	schunk->map[0] = 1;
  	schunk->map[1] = ai->static_size;
++<<<<<<< HEAD
 +	schunk->map_used = 1;
 +	if (schunk->free_size)
 +		schunk->map[++schunk->map_used] = ai->static_size + schunk->free_size;
 +	schunk->map[schunk->map_used] |= 1;
++=======
+ 	schunk->map[2] = (ai->static_size + schunk->free_size) | 1;
+ 	schunk->map_used = 2;
+ 	schunk->has_reserved = true;
++>>>>>>> fb29a2cc6b06 (percpu: setup_first_chunk enforce dynamic region must exist)
  
  	/* init dynamic chunk if necessary */
  	if (dyn_size) {
* Unmerged path mm/percpu.c
