RDMA/device: Call ib_cache_release_one() only from ib_device_release()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Jason Gunthorpe <jgg@mellanox.com>
commit d45f89d59bcd42d6b8575d0af69d7a3a98e73bb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/d45f89d5.failed

Instead of complicated logic about when this memory is freed, always free
it during device release(). All the cache pointers start out as NULL, so
it is safe to call this before the cache is initialized.

This makes for a simpler error unwind flow, and a simpler understanding of
the lifetime of the memory allocations inside the struct ib_device.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit d45f89d59bcd42d6b8575d0af69d7a3a98e73bb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
diff --cc drivers/infiniband/core/device.c
index 5e99537a3992,872662a84b16..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -602,9 -583,18 +578,16 @@@ int ib_register_device(struct ib_devic
  	if (ret)
  		goto out;
  
+ 	ret = ib_cache_setup_one(device);
+ 	if (ret) {
+ 		dev_warn(&device->dev,
+ 			 "Couldn't set up InfiniBand P_Key/GID cache\n");
+ 		goto out;
+ 	}
+ 
  	device->index = __dev_new_index();
  
 -	ib_device_register_rdmacg(device);
 -
 -	ret = ib_device_register_sysfs(device);
 +	ret = ib_device_register_sysfs(device, port_callback);
  	if (ret) {
  		dev_warn(&device->dev,
  			 "Couldn't register device with driver model\n");
@@@ -623,8 -614,9 +606,14 @@@
  	mutex_unlock(&device_mutex);
  	return 0;
  
++<<<<<<< HEAD
 +dev_cleanup:
 +	cleanup_device(device);
++=======
+ cg_cleanup:
+ 	ib_device_unregister_rdmacg(device);
+ 	ib_cache_cleanup_one(device);
++>>>>>>> d45f89d59bcd (RDMA/device: Call ib_cache_release_one() only from ib_device_release())
  out:
  	mutex_unlock(&device_mutex);
  	return ret;
diff --git a/drivers/infiniband/core/cache.c b/drivers/infiniband/core/cache.c
index 67e9052608ad..60aa7a022de0 100644
--- a/drivers/infiniband/core/cache.c
+++ b/drivers/infiniband/core/cache.c
@@ -1459,6 +1459,9 @@ void ib_cache_release_one(struct ib_device *device)
 {
 	int p;
 
+	if (!device->cache.ports)
+		return;
+
 	/*
 	 * The release function frees all the cache elements.
 	 * This function should be called as part of freeing
* Unmerged path drivers/infiniband/core/device.c
