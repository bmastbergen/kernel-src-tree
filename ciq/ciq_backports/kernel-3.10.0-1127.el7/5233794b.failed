net/mlx5e: reduce stack usage in mlx5_eswitch_termtbl_create

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit 5233794b179136d597b84188c1285148f07012e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/5233794b.failed

Putting an empty 'mlx5_flow_spec' structure on the stack is a bit
wasteful and causes a warning on 32-bit architectures when building
with clang -fsanitize-coverage:

drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_termtbl.c: In function 'mlx5_eswitch_termtbl_create':
drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_termtbl.c:90:1: error: the frame size of 1032 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]

Since the structure is never written to, we can statically allocate
it to avoid the stack usage. To be on the safe side, mark all
subsequent function arguments that we pass it into as 'const'
as well.

Fixes: 10caabdaad5a ("net/mlx5e: Use termination table for VLAN push actions")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Acked-by: Saeed Mahameed <saeedm@mellanox.com>
	Acked-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 5233794b179136d597b84188c1285148f07012e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_termtbl.c
#	drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
index d4d90463d6d0,a68a51c5011a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
@@@ -582,7 -584,7 +582,11 @@@ err_ida_remove
  }
  
  static struct fs_fte *alloc_fte(struct mlx5_flow_table *ft,
++<<<<<<< HEAD
 +				u32 *match_value,
++=======
+ 				const struct mlx5_flow_spec *spec,
++>>>>>>> 5233794b1791 (net/mlx5e: reduce stack usage in mlx5_eswitch_termtbl_create)
  				struct mlx5_flow_act *flow_act)
  {
  	struct mlx5_flow_steering *steering = get_steering(&ft->node);
@@@ -1449,7 -1454,7 +1453,11 @@@ static int check_conflicting_ftes(struc
  }
  
  static struct mlx5_flow_handle *add_rule_fg(struct mlx5_flow_group *fg,
++<<<<<<< HEAD
 +					    u32 *match_value,
++=======
+ 					    const struct mlx5_flow_spec *spec,
++>>>>>>> 5233794b1791 (net/mlx5e: reduce stack usage in mlx5_eswitch_termtbl_create)
  					    struct mlx5_flow_act *flow_act,
  					    struct mlx5_flow_destination *dest,
  					    int dest_num,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_termtbl.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads_termtbl.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/fs_core.c
diff --git a/include/linux/mlx5/fs.h b/include/linux/mlx5/fs.h
index 9df51da04621..ed2a44f509a7 100644
--- a/include/linux/mlx5/fs.h
+++ b/include/linux/mlx5/fs.h
@@ -192,7 +192,7 @@ struct mlx5_flow_act {
  */
 struct mlx5_flow_handle *
 mlx5_add_flow_rules(struct mlx5_flow_table *ft,
-		    struct mlx5_flow_spec *spec,
+		    const struct mlx5_flow_spec *spec,
 		    struct mlx5_flow_act *flow_act,
 		    struct mlx5_flow_destination *dest,
 		    int num_dest);
