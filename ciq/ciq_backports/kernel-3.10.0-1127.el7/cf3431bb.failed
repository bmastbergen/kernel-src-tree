scsi: scsi_error: Handle power-on reset unit attention

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Hannes Reinecke <hare@suse.de>
commit cf3431bba1df3b4f25b04900cb804d7e6e5eb6a9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/cf3431bb.failed

As per SAM there is a status precedence, with any sense code 29/XX
taking second place just after an ACA ACTIVE status.  Additionally, each
target might prefer to not queue any unit attention conditions, but just
report one.  Due to the above, this will be that one with the highest
precedence.  This results in the sense code 29/XX effectively
overwriting any other unit attention.  Hence we should report the
power-on reset to userland so that it can take appropriate action.

	Signed-off-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit cf3431bba1df3b4f25b04900cb804d7e6e5eb6a9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/scsi/scsi_device.h
diff --cc include/scsi/scsi_device.h
index 20417fb80159,d68985c366b0..000000000000
--- a/include/scsi/scsi_device.h
+++ b/include/scsi/scsi_device.h
@@@ -65,14 -63,12 +65,20 @@@ enum scsi_device_event 
  	SDEV_EVT_SOFT_THRESHOLD_REACHED_REPORTED,	/* 38 07  UA reported */
  	SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED,	/* 2A 01  UA reported */
  	SDEV_EVT_LUN_CHANGE_REPORTED,			/* 3F 0E  UA reported */
 +#ifndef __GENKSYMS__
  	SDEV_EVT_ALUA_STATE_CHANGE_REPORTED,		/* 2A 06  UA reported */
+ 	SDEV_EVT_POWER_ON_RESET_OCCURRED,		/* 29 00  UA reported */
  
  	SDEV_EVT_FIRST		= SDEV_EVT_MEDIA_CHANGE,
++<<<<<<< HEAD
 +	SDEV_EVT_LAST		= SDEV_EVT_ALUA_STATE_CHANGE_REPORTED,
 +#else
 +	SDEV_EVT_LAST		= SDEV_EVT_LUN_CHANGE_REPORTED,
 +#endif
++=======
+ 	SDEV_EVT_LAST		= SDEV_EVT_POWER_ON_RESET_OCCURRED,
+ 
++>>>>>>> cf3431bba1df (scsi: scsi_error: Handle power-on reset unit attention)
  	SDEV_EVT_MAXBITS	= SDEV_EVT_LAST + 1
  };
  
diff --git a/drivers/scsi/scsi_error.c b/drivers/scsi/scsi_error.c
index 9dd85158cf1a..30c91d1ca6d6 100644
--- a/drivers/scsi/scsi_error.c
+++ b/drivers/scsi/scsi_error.c
@@ -415,6 +415,12 @@ static void scsi_report_sense(struct scsi_device *sdev,
 				    "threshold.\n");
 		}
 
+		if (sshdr->asc == 0x29) {
+			evt_type = SDEV_EVT_POWER_ON_RESET_OCCURRED;
+			sdev_printk(KERN_WARNING, sdev,
+				    "Power-on or device reset occurred\n");
+		}
+
 		if (sshdr->asc == 0x2a && sshdr->ascq == 0x01) {
 			evt_type = SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED;
 			sdev_printk(KERN_WARNING, sdev,
diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index b802e0e13ac4..3da71325392a 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -2576,6 +2576,9 @@ static void scsi_evt_emit(struct scsi_device *sdev, struct scsi_event *evt)
 	case SDEV_EVT_ALUA_STATE_CHANGE_REPORTED:
 		envp[idx++] = "SDEV_UA=ASYMMETRIC_ACCESS_STATE_CHANGED";
 		break;
+	case SDEV_EVT_POWER_ON_RESET_OCCURRED:
+		envp[idx++] = "SDEV_UA=POWER_ON_RESET_OCCURRED";
+		break;
 	default:
 		/* do nothing */
 		break;
@@ -2680,6 +2683,7 @@ struct scsi_event *sdev_evt_alloc(enum scsi_device_event evt_type,
 	case SDEV_EVT_MODE_PARAMETER_CHANGE_REPORTED:
 	case SDEV_EVT_LUN_CHANGE_REPORTED:
 	case SDEV_EVT_ALUA_STATE_CHANGE_REPORTED:
+	case SDEV_EVT_POWER_ON_RESET_OCCURRED:
 	default:
 		/* do nothing */
 		break;
* Unmerged path include/scsi/scsi_device.h
