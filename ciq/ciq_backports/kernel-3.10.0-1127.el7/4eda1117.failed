efi/x86: drop task_lock() from efi_switch_mm()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Sebastian Andrzej Siewior <bigeasy@linutronix.de>
commit 4eda11175fd9241908efb523b7f6e8a7c15afdb7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/4eda1117.failed

efi_switch_mm() is a wrapper around switch_mm() which saves current's
->active_mm, sets the requests mm as ->active_mm and invokes
switch_mm().
I don't think that task_lock() is required during that procedure. It
protects ->mm which isn't changed here.

It needs to be mentioned that during the whole procedure (switch to
EFI's mm and back) the preemption needs to be disabled. A context switch
at this point would reset the cr3 value based on current->mm. Also, this
function may not be invoked at the same time on a different CPU because
it would overwrite the efi_scratch.prev_mm information.

Remove task_lock() and also update the comment to reflect it.

	Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
(cherry picked from commit 4eda11175fd9241908efb523b7f6e8a7c15afdb7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/platform/efi/efi_64.c
diff --cc arch/x86/platform/efi/efi_64.c
index 66a949fa7d66,e8da7f492970..000000000000
--- a/arch/x86/platform/efi/efi_64.c
+++ b/arch/x86/platform/efi/efi_64.c
@@@ -414,6 -617,20 +414,23 @@@ void __init efi_dump_pagetable(void
  #endif
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * Makes the calling thread switch to/from efi_mm context. Can be used
+  * in a kernel thread and user context. Preemption needs to remain disabled
+  * while the EFI-mm is borrowed. mmgrab()/mmdrop() is not used because the mm
+  * can not change under us.
+  * It should be ensured that there are no concurent calls to this function.
+  */
+ void efi_switch_mm(struct mm_struct *mm)
+ {
+ 	efi_scratch.prev_mm = current->active_mm;
+ 	current->active_mm = mm;
+ 	switch_mm(efi_scratch.prev_mm, mm, NULL);
+ }
+ 
++>>>>>>> 4eda11175fd9 (efi/x86: drop task_lock() from efi_switch_mm())
  #ifdef CONFIG_EFI_MIXED
  extern efi_status_t efi64_thunk(u32, ...);
  
* Unmerged path arch/x86/platform/efi/efi_64.c
