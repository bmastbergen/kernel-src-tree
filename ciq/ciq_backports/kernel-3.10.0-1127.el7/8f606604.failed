mm/percpu.c: fix panic triggered by BUG_ON() falsely

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author zijun_hu <zijun_hu@htc.com>
commit 8f6066049c54ef0f726869c27d610cef5d15e084
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/8f606604.failed

As shown by pcpu_build_alloc_info(), the number of units within a percpu
group is deduced by rounding up the number of CPUs within the group to
@upa boundary/ Therefore, the number of CPUs isn't equal to the units's
if it isn't aligned to @upa normally.  However, pcpu_page_first_chunk()
uses BUG_ON() to assert that one number is equal to the other roughly,
so a panic is maybe triggered by the BUG_ON() incorrectly.

In order to fix this issue, the number of CPUs is rounded up then
compared with units's and the BUG_ON() is replaced with a warning and
return of an error code as well, to keep system alive as much as
possible.

Link: http://lkml.kernel.org/r/57FCF07C.2020103@zoho.com
	Signed-off-by: zijun_hu <zijun_hu@htc.com>
	Cc: Tejun Heo <tj@kernel.org>
	Cc: Christoph Lameter <cl@linux.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8f6066049c54ef0f726869c27d610cef5d15e084)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/percpu.c
diff --cc mm/percpu.c
index 895c2996b902,f696385bcc44..000000000000
--- a/mm/percpu.c
+++ b/mm/percpu.c
@@@ -2128,8 -2125,8 +2135,13 @@@ int __init pcpu_page_first_chunk(size_
  
  			ptr = alloc_fn(cpu, PAGE_SIZE, PAGE_SIZE);
  			if (!ptr) {
++<<<<<<< HEAD
 +				pr_warning("PERCPU: failed to allocate %s page "
 +					   "for cpu%u\n", psize_str, cpu);
++=======
+ 				pr_warn("failed to allocate %s page for cpu%u\n",
+ 						psize_str, cpu);
++>>>>>>> 8f6066049c54 (mm/percpu.c: fix panic triggered by BUG_ON() falsely)
  				goto enomem;
  			}
  			/* kmemleak tracks the percpu allocations separately */
* Unmerged path mm/percpu.c
