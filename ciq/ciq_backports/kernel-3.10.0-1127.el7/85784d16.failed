x86/kexec: Set the C-bit in the identity map page table when SEV is active

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Lianbo Jiang <lijiang@redhat.com>
commit 85784d16c2cf172cf1ebaf2390d6b7c4045d659c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/85784d16.failed

When SEV is active, the second kernel image is loaded into encrypted
memory. For that, make sure that when kexec builds the identity mapping
page table, the memory is encrypted (i.e., _PAGE_ENC is set).

 [ bp: Sort local args and OR in _PAGE_ENC for more clarity. ]

Co-developed-by: Brijesh Singh <brijesh.singh@amd.com>
	Signed-off-by: Brijesh Singh <brijesh.singh@amd.com>
	Signed-off-by: Lianbo Jiang <lijiang@redhat.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: bhe@redhat.com
	Cc: dyoung@redhat.com
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: kexec@lists.infradead.org
	Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: x86-ml <x86@kernel.org>
Link: https://lkml.kernel.org/r/20190430074421.7852-3-lijiang@redhat.com
(cherry picked from commit 85784d16c2cf172cf1ebaf2390d6b7c4045d659c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/machine_kexec_64.c
diff --cc arch/x86/kernel/machine_kexec_64.c
index e8e0eedb2a84,16c37fe489bc..000000000000
--- a/arch/x86/kernel/machine_kexec_64.c
+++ b/arch/x86/kernel/machine_kexec_64.c
@@@ -41,6 -50,10 +41,13 @@@ static void free_transition_pgtable(str
  
  static int init_transition_pgtable(struct kimage *image, pgd_t *pgd)
  {
++<<<<<<< HEAD
++=======
+ 	pgprot_t prot = PAGE_KERNEL_EXEC_NOENC;
+ 	unsigned long vaddr, paddr;
+ 	int result = -ENOMEM;
+ 	p4d_t *p4d;
++>>>>>>> 85784d16c2cf (x86/kexec: Set the C-bit in the identity map page table when SEV is active)
  	pud_t *pud;
  	pmd_t *pmd;
  	pte_t *pte;
@@@ -74,10 -93,13 +79,14 @@@
  		set_pmd(pmd, __pmd(__pa(pte) | _KERNPG_TABLE));
  	}
  	pte = pte_offset_kernel(pmd, vaddr);
- 	set_pte(pte, pfn_pte(paddr >> PAGE_SHIFT, PAGE_KERNEL_EXEC_NOENC));
+ 
+ 	if (sev_active())
+ 		prot = PAGE_KERNEL_EXEC;
+ 
+ 	set_pte(pte, pfn_pte(paddr >> PAGE_SHIFT, prot));
  	return 0;
  err:
 +	free_transition_pgtable(image);
  	return result;
  }
  
@@@ -111,6 -133,12 +120,15 @@@ static int init_pgtable(struct kimage *
  
  	level4p = (pgd_t *)__va(start_pgtable);
  	clear_page(level4p);
++<<<<<<< HEAD
++=======
+ 
+ 	if (sev_active()) {
+ 		info.page_flag   |= _PAGE_ENC;
+ 		info.kernpg_flag |= _PAGE_ENC;
+ 	}
+ 
++>>>>>>> 85784d16c2cf (x86/kexec: Set the C-bit in the identity map page table when SEV is active)
  	if (direct_gbpages)
  		info.direct_gbpages = true;
  
* Unmerged path arch/x86/kernel/machine_kexec_64.c
