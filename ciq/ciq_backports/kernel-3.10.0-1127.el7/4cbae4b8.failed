xfs: introduce xfs_btree_debug_check_ptr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 4cbae4b816fd61e63abbe8330741e257fa95d4c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/4cbae4b8.failed

Make xfs_btree_check_ptr a non-debug function and introduce a new _debug
version that only runs when #ifdef DEBUG.   This will enable us to reuse
the checking logic with other parts of the btree code.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
(cherry picked from commit 4cbae4b816fd61e63abbe8330741e257fa95d4c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_btree.c
diff --cc fs/xfs/libxfs/xfs_btree.c
index 5f331681b289,f30d74d807e9..000000000000
--- a/fs/xfs/libxfs/xfs_btree.c
+++ b/fs/xfs/libxfs/xfs_btree.c
@@@ -2484,13 -2664,8 +2482,11 @@@ __xfs_btree_split
  	int			rrecs;
  	int			src_index;
  	int			error;		/* error return value */
- #ifdef DEBUG
  	int			i;
- #endif
  
 +	XFS_BTREE_TRACE_CURSOR(cur, XBT_ENTRY);
 +	XFS_BTREE_TRACE_ARGIPK(cur, level, *ptrp, key);
 +
  	XFS_BTREE_STATS_INC(cur, split);
  
  	/* Set up left block (current one). */
@@@ -2744,11 -2922,8 +2738,9 @@@ xfs_btree_new_iroot
  	union xfs_btree_ptr	nptr;		/* new block addr */
  	int			level;		/* btree level */
  	int			error;		/* error return code */
- #ifdef DEBUG
  	int			i;		/* loop counter */
- #endif
  
 +	XFS_BTREE_TRACE_CURSOR(cur, XBT_ENTRY);
  	XFS_BTREE_STATS_INC(cur, newroot);
  
  	ASSERT(cur->bc_flags & XFS_BTREE_ROOT_IN_INODE);
@@@ -3057,14 -3224,11 +3047,17 @@@ xfs_btree_insrec
  	int			ptr;	/* key/record index */
  	int			numrecs;/* number of records */
  	int			error;	/* error return value */
- #ifdef DEBUG
  	int			i;
++<<<<<<< HEAD
 +#endif
 +
 +	XFS_BTREE_TRACE_CURSOR(cur, XBT_ENTRY);
 +	XFS_BTREE_TRACE_ARGIPR(cur, level, *ptrp, &rec);
++=======
+ 	xfs_daddr_t		old_bn;
++>>>>>>> 4cbae4b816fd (xfs: introduce xfs_btree_debug_check_ptr)
  
  	ncur = NULL;
 -	lkey = &nkey;
  
  	/*
  	 * If we have an external root pointer, and we've made it to the
@@@ -3347,11 -3513,9 +3336,11 @@@ xfs_btree_kill_iroot
  	int			error;
  #ifdef DEBUG
  	union xfs_btree_ptr	ptr;
- 	int			i;
  #endif
+ 	int			i;
  
 +	XFS_BTREE_TRACE_CURSOR(cur, XBT_ENTRY);
 +
  	ASSERT(cur->bc_flags & XFS_BTREE_ROOT_IN_INODE);
  	ASSERT(cur->bc_nlevels > 1);
  
@@@ -3406,15 -3570,13 +3395,20 @@@
  
  	pp = xfs_btree_ptr_addr(cur, 1, block);
  	cpp = xfs_btree_ptr_addr(cur, 1, cblock);
- #ifdef DEBUG
+ 
  	for (i = 0; i < numrecs; i++) {
++<<<<<<< HEAD
 +		error = xfs_btree_check_ptr(cur, cpp, i, level - 1);
 +		if (error) {
 +			XFS_BTREE_TRACE_CURSOR(cur, XBT_ERROR);
++=======
+ 		error = xfs_btree_debug_check_ptr(cur, cpp, i, level - 1);
+ 		if (error)
++>>>>>>> 4cbae4b816fd (xfs: introduce xfs_btree_debug_check_ptr)
  			return error;
 +		}
  	}
- #endif
+ 
  	xfs_btree_copy_ptrs(cur, pp, cpp, numrecs);
  
  	error = xfs_btree_free_block(cur, cbp);
* Unmerged path fs/xfs/libxfs/xfs_btree.c
