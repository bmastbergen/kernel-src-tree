autofs: add ignore mount option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Ian Kent <raven@themaw.net>
commit 60d6d04ca3abb34d5e89f030dbea440d9715a168
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/60d6d04c.failed

Add an autofs file system mount option that can be used to provide a
generic indicator to applications that the mount entry should be ignored
when displaying mount information.

In other OSes that provide autofs and that provide a mount list to user
space based on the kernel mount list a no-op mount option ("ignore" is
the one use on the most common OS) is allowed so that autofs file system
users can optionally use it.

The idea is that it be used by user space programs to exclude autofs
mounts from consideration when reading the mounts list.

Prior to the change to link /etc/mtab to /proc/self/mounts all I needed
to do to achieve this was to use mount(2) and not update the mtab but
now that no longer works.

I know the symlinking happened a long time ago and I considered doing
this then but, at the time I couldn't remember the commonly used option
name and thought persuading the various utility maintainers would be too
hard.

But now I have a RHEL request to do this for compatibility for a widely
used product so I want to go ahead with it and try and enlist the help
of some utility package maintainers.

Clearly, without the option nothing can be done so it's at least a
start.

Link: http://lkml.kernel.org/r/154725123970.11260.6113771566924907275.stgit@pluto-themaw-net
	Signed-off-by: Ian Kent <raven@themaw.net>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 60d6d04ca3abb34d5e89f030dbea440d9715a168)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/auto_fs.h
diff --cc include/uapi/linux/auto_fs.h
index aa63451ef20a,1f7925afad2d..000000000000
--- a/include/uapi/linux/auto_fs.h
+++ b/include/uapi/linux/auto_fs.h
@@@ -17,13 -19,11 +17,17 @@@
  #include <sys/ioctl.h>
  #endif /* __KERNEL__ */
  
 -#define AUTOFS_PROTO_VERSION		5
 -#define AUTOFS_MIN_PROTO_VERSION	3
 -#define AUTOFS_MAX_PROTO_VERSION	5
  
++<<<<<<< HEAD
 +/* This file describes autofs v3 */
 +#define AUTOFS_PROTO_VERSION	3
 +
 +/* Range of protocol versions defined */
 +#define AUTOFS_MAX_PROTO_VERSION	AUTOFS_PROTO_VERSION
 +#define AUTOFS_MIN_PROTO_VERSION	AUTOFS_PROTO_VERSION
++=======
+ #define AUTOFS_PROTO_SUBVERSION		5
++>>>>>>> 60d6d04ca3ab (autofs: add ignore mount option)
  
  /*
   * The wait_queue_token (autofs_wqt_t) is part of a structure which is passed
diff --git a/fs/autofs4/autofs_i.h b/fs/autofs4/autofs_i.h
index f935faaccb3c..59a7e587922c 100644
--- a/fs/autofs4/autofs_i.h
+++ b/fs/autofs4/autofs_i.h
@@ -102,6 +102,7 @@ struct autofs_wait_queue {
 
 #define AUTOFS_SBI_CATATONIC	0x0001
 #define AUTOFS_SBI_STRICTEXPIRE 0x0002
+#define AUTOFS_SBI_IGNORE	0x0004
 
 struct autofs_sb_info {
 	u32 magic;
diff --git a/fs/autofs4/inode.c b/fs/autofs4/inode.c
index 9d19ff998531..3f18adf8e778 100644
--- a/fs/autofs4/inode.c
+++ b/fs/autofs4/inode.c
@@ -94,6 +94,8 @@ static int autofs4_show_options(struct seq_file *m, struct dentry *root)
 		seq_printf(m, ",indirect");
 	if (sbi->flags & AUTOFS_SBI_STRICTEXPIRE)
 		seq_printf(m, ",strictexpire");
+	if (sbi->flags & AUTOFS_SBI_IGNORE)
+		seq_printf(m, ",ignore");
 #ifdef CONFIG_CHECKPOINT_RESTORE
 	if (sbi->pipe)
 		seq_printf(m, ",pipe_ino=%ld", sbi->pipe->f_inode->i_ino);
@@ -116,7 +118,8 @@ static const struct super_operations autofs4_sops = {
 };
 
 enum {Opt_err, Opt_fd, Opt_uid, Opt_gid, Opt_pgrp, Opt_minproto, Opt_maxproto,
-	Opt_indirect, Opt_direct, Opt_offset, Opt_strictexpire};
+	Opt_indirect, Opt_direct, Opt_offset, Opt_strictexpire,
+	Opt_ignore};
 
 static const match_table_t tokens = {
 	{Opt_fd, "fd=%u"},
@@ -129,6 +132,7 @@ static const match_table_t tokens = {
 	{Opt_direct, "direct"},
 	{Opt_offset, "offset"},
 	{Opt_strictexpire, "strictexpire"},
+	{Opt_ignore, "ignore"},
 	{Opt_err, NULL}
 };
 
@@ -211,6 +215,9 @@ static int parse_options(char *options,
 		case Opt_strictexpire:
 			sbi->flags |= AUTOFS_SBI_STRICTEXPIRE;
 			break;
+		case Opt_ignore:
+			sbi->flags |= AUTOFS_SBI_IGNORE;
+			break;
 		default:
 			return 1;
 		}
* Unmerged path include/uapi/linux/auto_fs.h
