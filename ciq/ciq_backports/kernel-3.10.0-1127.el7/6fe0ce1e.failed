sched/deadline: Make update_curr_dl() more accurate

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Wen Yang <wen.yang99@zte.com.cn>
commit 6fe0ce1eb04f99a1eb1eb6e7f775666966cf6c80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/6fe0ce1e.failed

rq->clock_task may be updated between the two calls of
rq_clock_task() in update_curr_dl(). Calling rq_clock_task() only
once makes it more accurate and efficient, taking update_curr() as
reference.

	Suggested-by: Peter Zijlstra <peterz@infradead.org>
	Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Jiang Biao <jiang.biao2@zte.com.cn>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: zhong.weidong@zte.com.cn
Link: http://lkml.kernel.org/r/1517882148-44599-1-git-send-email-wen.yang99@zte.com.cn
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 6fe0ce1eb04f99a1eb1eb6e7f775666966cf6c80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/deadline.c
diff --cc kernel/sched/deadline.c
index 162a8d64d022,9df09782025c..000000000000
--- a/kernel/sched/deadline.c
+++ b/kernel/sched/deadline.c
@@@ -1042,7 -1151,9 +1042,13 @@@ static void update_curr_dl(struct rq *r
  {
  	struct task_struct *curr = rq->curr;
  	struct sched_dl_entity *dl_se = &curr->dl;
++<<<<<<< HEAD
 +	u64 delta_exec;
++=======
+ 	u64 delta_exec, scaled_delta_exec;
+ 	int cpu = cpu_of(rq);
+ 	u64 now;
++>>>>>>> 6fe0ce1eb04f (sched/deadline: Make update_curr_dl() more accurate)
  
  	if (!dl_task(curr) || !on_dl_rq(dl_se))
  		return;
@@@ -1072,8 -1180,8 +1079,13 @@@
  	curr->se.sum_exec_runtime += delta_exec;
  	account_group_exec_runtime(curr, delta_exec);
  
++<<<<<<< HEAD
 +	curr->se.exec_start = rq_clock_task(rq);
 +	cpuacct_charge(curr, delta_exec);
++=======
+ 	curr->se.exec_start = now;
+ 	cgroup_account_cputime(curr, delta_exec);
++>>>>>>> 6fe0ce1eb04f (sched/deadline: Make update_curr_dl() more accurate)
  
  	sched_rt_avg_update(rq, delta_exec);
  
* Unmerged path kernel/sched/deadline.c
