xfs: destroy mutex pag_ici_reclaim_lock before free

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Xiongwei Song <sxwjean@me.com>
commit 1da061899321c15500caec735f8998f4c1e1b48f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/1da06189.failed

The mutex pag_ici_reclaim_lock of xfs_perag_t structure is initialized in
xfs_initialize_perag. If happen errors in xfs_initialize_perag, or free
resources in xfs_free_perag, wo need to destroy the mutex before free
perag.

	Signed-off-by: Xiongwei Song <sxwjean@me.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit 1da061899321c15500caec735f8998f4c1e1b48f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_mount.c
diff --cc fs/xfs/xfs_mount.c
index 7d07402ca11e,98fd41cbb9e1..000000000000
--- a/fs/xfs/xfs_mount.c
+++ b/fs/xfs/xfs_mount.c
@@@ -159,6 -161,8 +159,11 @@@ xfs_free_perag
  		spin_unlock(&mp->m_perag_lock);
  		ASSERT(pag);
  		ASSERT(atomic_read(&pag->pag_ref) == 0);
++<<<<<<< HEAD
++=======
+ 		xfs_buf_hash_destroy(pag);
+ 		mutex_destroy(&pag->pag_ici_reclaim_lock);
++>>>>>>> 1da061899321 (xfs: destroy mutex pag_ici_reclaim_lock before free)
  		call_rcu(&pag->rcu_head, __xfs_free_perag);
  	}
  }
@@@ -239,9 -242,14 +244,10 @@@ xfs_initialize_perag
  
  	if (maxagi)
  		*maxagi = index;
 -
 -	mp->m_ag_prealloc_blocks = xfs_prealloc_blocks(mp);
  	return 0;
  
 -out_hash_destroy:
 -	xfs_buf_hash_destroy(pag);
  out_free_pag:
+ 	mutex_destroy(&pag->pag_ici_reclaim_lock);
  	kmem_free(pag);
  out_unwind_new_pags:
  	/* unwind any prior newly initialized pags */
@@@ -249,6 -257,8 +255,11 @@@
  		pag = radix_tree_delete(&mp->m_perag_tree, index);
  		if (!pag)
  			break;
++<<<<<<< HEAD
++=======
+ 		xfs_buf_hash_destroy(pag);
+ 		mutex_destroy(&pag->pag_ici_reclaim_lock);
++>>>>>>> 1da061899321 (xfs: destroy mutex pag_ici_reclaim_lock before free)
  		kmem_free(pag);
  	}
  	return error;
* Unmerged path fs/xfs/xfs_mount.c
