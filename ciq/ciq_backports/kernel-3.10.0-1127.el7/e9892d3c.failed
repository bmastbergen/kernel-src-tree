xfs: only trace buffer items if they exist

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit e9892d3cc853afdda2cc69e2576d9ddb5fafad71
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/e9892d3c.failed

The commit 2d3d0c5 ("xfs: lobotomise xfs_trans_read_buf_map()") left
a landmine in the tracing code: trace_xfs_trans_buf_read() is now
call on all buffers that are read through this interface rather than
just buffers in transactions. For buffers outside transaction
context, bp->b_fspriv is null, and so the buf log item tracing
functions cannot be called. This causes a NULL pointer dereference
in the trace_xfs_trans_buf_read() function when tracing is turned
on.

cc: <stable@vger.kernel.org>
	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit e9892d3cc853afdda2cc69e2576d9ddb5fafad71)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_trans_buf.c
diff --cc fs/xfs/xfs_trans_buf.c
index 0621767a06d9,75798412859a..000000000000
--- a/fs/xfs/xfs_trans_buf.c
+++ b/fs/xfs/xfs_trans_buf.c
@@@ -376,25 -320,17 +376,32 @@@ xfs_trans_read_buf_map
  			error = -EFSCORRUPTED;
  		return error;
  	}
 -
 -	if (XFS_FORCED_SHUTDOWN(mp)) {
 -		xfs_buf_relse(bp);
 -		trace_xfs_trans_read_buf_shut(bp, _RET_IP_);
 -		return -EIO;
 +#ifdef DEBUG
 +	if (xfs_do_error && !(tp->t_flags & XFS_TRANS_DIRTY)) {
 +		if (xfs_error_target == target) {
 +			if (((xfs_req_num++) % xfs_error_mod) == 0) {
 +				xfs_force_shutdown(tp->t_mountp,
 +						   SHUTDOWN_META_IO_ERROR);
 +				xfs_buf_relse(bp);
 +				xfs_debug(mp, "Returning trans error!");
 +				return -EIO;
 +			}
 +		}
  	}
 +#endif
 +	if (XFS_FORCED_SHUTDOWN(mp))
 +		goto shutdown_abort;
 +
++<<<<<<< HEAD
 +	_xfs_trans_bjoin(tp, bp, 1);
 +	trace_xfs_trans_read_buf(bp->b_fspriv);
  
++=======
+ 	if (tp) {
+ 		_xfs_trans_bjoin(tp, bp, 1);
+ 		trace_xfs_trans_read_buf(bp->b_fspriv);
+ 	}
++>>>>>>> e9892d3cc853 (xfs: only trace buffer items if they exist)
  	*bpp = bp;
  	return 0;
  
* Unmerged path fs/xfs/xfs_trans_buf.c
