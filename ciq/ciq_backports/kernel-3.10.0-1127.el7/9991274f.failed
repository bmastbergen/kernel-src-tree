xfs: Initialize variables in xfs_alloc_get_rec before using them

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Carlos Maiolino <cmaiolino@redhat.com>
commit 9991274fddb9fd4413cb166763cf7368f5086419
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/9991274f.failed

Make sure we initialize *bno and *len, before jumping to out_bad_rec
label, and risk calling xfs_warn() with uninitialized variables.

Coverity: 100898
Coverity: 1437081
Coverity: 1437129
Coverity: 1437191
Coverity: 1437201
Coverity: 1437212
Coverity: 1437341
	Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit 9991274fddb9fd4413cb166763cf7368f5086419)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_alloc.c
diff --cc fs/xfs/libxfs/xfs_alloc.c
index 62634b101f26,75dbdc14c45f..000000000000
--- a/fs/xfs/libxfs/xfs_alloc.c
+++ b/fs/xfs/libxfs/xfs_alloc.c
@@@ -189,13 -223,30 +189,39 @@@ xfs_alloc_get_rec
  	error = xfs_btree_get_rec(cur, &rec, stat);
  	if (error || !(*stat))
  		return error;
++<<<<<<< HEAD
 +	if (rec->alloc.ar_blockcount == 0)
 +		return -EFSCORRUPTED;
++=======
++>>>>>>> 9991274fddb9 (xfs: Initialize variables in xfs_alloc_get_rec before using them)
  
  	*bno = be32_to_cpu(rec->alloc.ar_startblock);
  	*len = be32_to_cpu(rec->alloc.ar_blockcount);
  
++<<<<<<< HEAD
 +	return error;
++=======
+ 	if (*len == 0)
+ 		goto out_bad_rec;
+ 
+ 	/* check for valid extent range, including overflow */
+ 	if (!xfs_verify_agbno(mp, agno, *bno))
+ 		goto out_bad_rec;
+ 	if (*bno > *bno + *len)
+ 		goto out_bad_rec;
+ 	if (!xfs_verify_agbno(mp, agno, *bno + *len - 1))
+ 		goto out_bad_rec;
+ 
+ 	return 0;
+ 
+ out_bad_rec:
+ 	xfs_warn(mp,
+ 		"%s Freespace BTree record corruption in AG %d detected!",
+ 		cur->bc_btnum == XFS_BTNUM_BNO ? "Block" : "Size", agno);
+ 	xfs_warn(mp,
+ 		"start block 0x%x block count 0x%x", *bno, *len);
+ 	return -EFSCORRUPTED;
++>>>>>>> 9991274fddb9 (xfs: Initialize variables in xfs_alloc_get_rec before using them)
  }
  
  /*
* Unmerged path fs/xfs/libxfs/xfs_alloc.c
