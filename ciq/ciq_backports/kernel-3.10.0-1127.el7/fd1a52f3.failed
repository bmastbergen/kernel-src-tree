RDMA/iwpm: Delete unnecessary checks before the macro call "dev_kfree_skb"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
Rebuild_CHGLOG: - [netdrv] ethernet: Delete unnecessary checks before the macro call "dev_kfree_skb" (David Arcari) [1721615]
Rebuild_FUZZ: 89.80%
commit-author Markus Elfring <elfring@users.sourceforge.net>
commit fd1a52f38c23c5d99fc2e6178ac4b74c5cbcf793
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/fd1a52f3.failed

The dev_kfree_skb() function performs also input parameter validation.
Thus the test around the shown calls is not needed.

This issue was detected by using the Coccinelle software.

Link: https://lore.kernel.org/r/16df4c50-1f61-d7c4-3fc8-3073666d281d@web.de
	Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>
	Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit fd1a52f38c23c5d99fc2e6178ac4b74c5cbcf793)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/iwpm_msg.c
#	drivers/infiniband/core/iwpm_util.c
diff --cc drivers/infiniband/core/iwpm_msg.c
index 8861c052155a,46686990a827..000000000000
--- a/drivers/infiniband/core/iwpm_msg.c
+++ b/drivers/infiniband/core/iwpm_msg.c
@@@ -187,8 -212,8 +186,13 @@@ int iwpm_add_mapping(struct iwpm_sa_dat
  	return ret;
  add_mapping_error:
  	pr_info("%s: %s (client = %d)\n", __func__, err_str, nl_client);
++<<<<<<< HEAD
 +	if (skb)
 +		dev_kfree_skb(skb);
++=======
+ add_mapping_error_nowarn:
+ 	dev_kfree_skb(skb);
++>>>>>>> fd1a52f38c23 (RDMA/iwpm: Delete unnecessary checks before the macro call "dev_kfree_skb")
  	if (nlmsg_request)
  		iwpm_free_nlmsg_request(&nlmsg_request->kref);
  	return ret;
@@@ -264,8 -305,8 +268,13 @@@ int iwpm_add_and_query_mapping(struct i
  	return ret;
  query_mapping_error:
  	pr_info("%s: %s (client = %d)\n", __func__, err_str, nl_client);
++<<<<<<< HEAD
 +	if (skb)
 +		dev_kfree_skb(skb);
++=======
+ query_mapping_error_nowarn:
+ 	dev_kfree_skb(skb);
++>>>>>>> fd1a52f38c23 (RDMA/iwpm: Delete unnecessary checks before the macro call "dev_kfree_skb")
  	if (nlmsg_request)
  		iwpm_free_nlmsg_request(&nlmsg_request->kref);
  	return ret;
diff --cc drivers/infiniband/core/iwpm_util.c
index 63ca8344d571,13495b43dbc1..000000000000
--- a/drivers/infiniband/core/iwpm_util.c
+++ b/drivers/infiniband/core/iwpm_util.c
@@@ -752,3 -801,37 +750,40 @@@ int iwpm_mapinfo_available(void
  	spin_unlock_irqrestore(&iwpm_mapinfo_lock, flags);
  	return full_bucket;
  }
++<<<<<<< HEAD
++=======
+ 
+ int iwpm_send_hello(u8 nl_client, int iwpm_pid, u16 abi_version)
+ {
+ 	struct sk_buff *skb = NULL;
+ 	struct nlmsghdr *nlh;
+ 	const char *err_str = "";
+ 	int ret = -EINVAL;
+ 
+ 	skb = iwpm_create_nlmsg(RDMA_NL_IWPM_HELLO, &nlh, nl_client);
+ 	if (!skb) {
+ 		err_str = "Unable to create a nlmsg";
+ 		goto hello_num_error;
+ 	}
+ 	nlh->nlmsg_seq = iwpm_get_nlmsg_seq();
+ 	err_str = "Unable to put attribute of abi_version into nlmsg";
+ 	ret = ibnl_put_attr(skb, nlh, sizeof(u16), &abi_version,
+ 			    IWPM_NLA_HELLO_ABI_VERSION);
+ 	if (ret)
+ 		goto hello_num_error;
+ 	nlmsg_end(skb, nlh);
+ 
+ 	ret = rdma_nl_unicast(&init_net, skb, iwpm_pid);
+ 	if (ret) {
+ 		skb = NULL;
+ 		err_str = "Unable to send a nlmsg";
+ 		goto hello_num_error;
+ 	}
+ 	pr_debug("%s: Sent hello abi_version = %u\n", __func__, abi_version);
+ 	return 0;
+ hello_num_error:
+ 	pr_info("%s: %s\n", __func__, err_str);
+ 	dev_kfree_skb(skb);
+ 	return ret;
+ }
++>>>>>>> fd1a52f38c23 (RDMA/iwpm: Delete unnecessary checks before the macro call "dev_kfree_skb")
* Unmerged path drivers/infiniband/core/iwpm_msg.c
* Unmerged path drivers/infiniband/core/iwpm_util.c
