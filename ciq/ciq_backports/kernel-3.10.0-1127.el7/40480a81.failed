perf stat: Factor out aggregate counts printing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Jin Yao <yao.jin@linux.intel.com>
commit 40480a8136700d678dc07222c4d7287c89d0c04d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/40480a81.failed

Move the aggregate counts printing to a new function
print_counter_aggrdata, which will be used in following patches.

	Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
	Tested-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Jin Yao <yao.jin@intel.com>
	Cc: Kan Liang <kan.liang@linux.intel.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1555077590-27664-3-git-send-email-yao.jin@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 40480a8136700d678dc07222c4d7287c89d0c04d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/stat-display.c
diff --cc tools/perf/util/stat-display.c
index 665ee374fc01,f5b4ee79568c..000000000000
--- a/tools/perf/util/stat-display.c
+++ b/tools/perf/util/stat-display.c
@@@ -623,33 -652,11 +656,37 @@@ static void print_aggr(struct perf_stat
  		if (prefix && metric_only)
  			fprintf(output, "%s", prefix);
  
- 		ad.id = id = config->aggr_map->map[s];
  		first = true;
  		evlist__for_each_entry(evlist, counter) {
++<<<<<<< HEAD
 +			if (is_duration_time(counter))
 +				continue;
 +
 +			ad.val = ad.ena = ad.run = 0;
 +			ad.nr = 0;
 +			if (!collect_data(config, counter, aggr_cb, &ad))
 +				continue;
 +			nr = ad.nr;
 +			ena = ad.ena;
 +			run = ad.run;
 +			val = ad.val;
 +			if (first && metric_only) {
 +				first = false;
 +				aggr_printout(config, counter, id, nr);
 +			}
 +			if (prefix && !metric_only)
 +				fprintf(output, "%s", prefix);
 +
 +			uval = val * counter->scale;
 +			printout(config, id, nr, counter, uval, prefix,
 +				 run, ena, 1.0, &rt_stat);
 +			if (!metric_only)
 +				fputc('\n', output);
++=======
+ 			print_counter_aggrdata(config, counter, s,
+ 					       prefix, metric_only,
+ 					       &first);
++>>>>>>> 40480a813670 (perf stat: Factor out aggregate counts printing)
  		}
  		if (metric_only)
  			fputc('\n', output);
* Unmerged path tools/perf/util/stat-display.c
