cxgb4: Add MPS refcounting for alloc/free mac filters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Raju Rangoju <rajur@chelsio.com>
commit f9f329ad87c746f4e6e352eb035e70b0dd7d5643
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/f9f329ad.failed

This patch adds reference counting support for
alloc/free mac filters

	Signed-off-by: Raju Rangoju <rajur@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f9f329ad87c746f4e6e352eb035e70b0dd7d5643)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_mps.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index 295572f2890b,1fbb640e896a..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@@ -1880,5 -1907,46 +1880,49 @@@ int cxgb4_dcb_enabled(const struct net_
  
  int cxgb4_thermal_init(struct adapter *adap);
  int cxgb4_thermal_remove(struct adapter *adap);
++<<<<<<< HEAD
++=======
+ int cxgb4_set_msix_aff(struct adapter *adap, unsigned short vec,
+ 		       cpumask_var_t *aff_mask, int idx);
+ void cxgb4_clear_msix_aff(unsigned short vec, cpumask_var_t aff_mask);
+ 
+ int cxgb4_change_mac(struct port_info *pi, unsigned int viid,
+ 		     int *tcam_idx, const u8 *addr,
+ 		     bool persistent, u8 *smt_idx);
+ 
+ int cxgb4_alloc_mac_filt(struct adapter *adap, unsigned int viid,
+ 			 bool free, unsigned int naddr,
+ 			 const u8 **addr, u16 *idx,
+ 			 u64 *hash, bool sleep_ok);
+ int cxgb4_free_mac_filt(struct adapter *adap, unsigned int viid,
+ 			unsigned int naddr, const u8 **addr, bool sleep_ok);
+ int cxgb4_init_mps_ref_entries(struct adapter *adap);
+ void cxgb4_free_mps_ref_entries(struct adapter *adap);
+ int cxgb4_alloc_encap_mac_filt(struct adapter *adap, unsigned int viid,
+ 			       const u8 *addr, const u8 *mask,
+ 			       unsigned int vni, unsigned int vni_mask,
+ 			       u8 dip_hit, u8 lookup_type, bool sleep_ok);
+ int cxgb4_free_encap_mac_filt(struct adapter *adap, unsigned int viid,
+ 			      int idx, bool sleep_ok);
+ int cxgb4_free_raw_mac_filt(struct adapter *adap,
+ 			    unsigned int viid,
+ 			    const u8 *addr,
+ 			    const u8 *mask,
+ 			    unsigned int idx,
+ 			    u8 lookup_type,
+ 			    u8 port_id,
+ 			    bool sleep_ok);
+ int cxgb4_alloc_raw_mac_filt(struct adapter *adap,
+ 			     unsigned int viid,
+ 			     const u8 *addr,
+ 			     const u8 *mask,
+ 			     unsigned int idx,
+ 			     u8 lookup_type,
+ 			     u8 port_id,
+ 			     bool sleep_ok);
+ int cxgb4_update_mac_filt(struct port_info *pi, unsigned int viid,
+ 			  int *tcam_idx, const u8 *addr,
+ 			  bool persistent, u8 *smt_idx);
++>>>>>>> f9f329ad87c7 (cxgb4: Add MPS refcounting for alloc/free mac filters)
  
  #endif /* __CXGB4_H__ */
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_mps.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index fcc54fe9426b..e77106959236 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@ -367,13 +367,19 @@ static int cxgb4_mac_sync(struct net_device *netdev, const u8 *mac_addr)
 	int ret;
 	u64 mhash = 0;
 	u64 uhash = 0;
+	/* idx stores the index of allocated filters,
+	 * its size should be modified based on the number of
+	 * MAC addresses that we allocate filters for
+	 */
+
+	u16 idx[1] = {};
 	bool free = false;
 	bool ucast = is_unicast_ether_addr(mac_addr);
 	const u8 *maclist[1] = {mac_addr};
 	struct hash_mac_addr *new_entry;
 
-	ret = t4_alloc_mac_filt(adap, adap->mbox, pi->viid, free, 1, maclist,
-				NULL, ucast ? &uhash : &mhash, false);
+	ret = cxgb4_alloc_mac_filt(adap, pi->viid, free, 1, maclist,
+				   idx, ucast ? &uhash : &mhash, false);
 	if (ret < 0)
 		goto out;
 	/* if hash != 0, then add the addr to hash addr list
@@ -411,7 +417,7 @@ static int cxgb4_mac_unsync(struct net_device *netdev, const u8 *mac_addr)
 		}
 	}
 
-	ret = t4_free_mac_filt(adap, adap->mbox, pi->viid, 1, maclist, false);
+	ret = cxgb4_free_mac_filt(adap, pi->viid, 1, maclist, false);
 	return ret < 0 ? -EINVAL : 0;
 }
 
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_mps.c
