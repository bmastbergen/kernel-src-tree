iwlwifi: assign directly to iwl_trans->cfg in QuZ detection

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Luca Coelho <luciano.coelho@intel.com>
commit 968dcfb4905245dc64d65312c0d17692fa087b99
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/968dcfb4.failed

We were erroneously assigning the new configuration to a local
variable cfg, but that was not being assigned to anything, so the
change was getting lost.  Assign directly to iwl_trans->cfg instead.

Fixes: 5a8c31aa6357 ("iwlwifi: pcie: fix recognition of QuZ devices")
	Cc: stable@vger.kernel.org # 5.2
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit 968dcfb4905245dc64d65312c0d17692fa087b99)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/pcie/drv.c
diff --cc drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 42672ddf7977,3b12e7ad35e1..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@@ -1046,6 -1042,48 +1046,51 @@@ static int iwl_pci_probe(struct pci_de
  		}
  		iwl_trans->cfg = cfg;
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	/*
+ 	 * This is a hack to switch from Qu B0 to Qu C0.  We need to
+ 	 * do this for all cfgs that use Qu B0.  All this code is in
+ 	 * urgent need for a refactor, but for now this is the easiest
+ 	 * thing to do to support Qu C-step.
+ 	 */
+ 	if (iwl_trans->hw_rev == CSR_HW_REV_TYPE_QU_C0) {
+ 		if (iwl_trans->cfg == &iwl_ax101_cfg_qu_hr)
+ 			iwl_trans->cfg = &iwl_ax101_cfg_qu_c0_hr_b0;
+ 		else if (iwl_trans->cfg == &iwl_ax201_cfg_qu_hr)
+ 			iwl_trans->cfg = &iwl_ax201_cfg_qu_c0_hr_b0;
+ 		else if (iwl_trans->cfg == &iwl9461_2ac_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9461_2ac_cfg_qu_c0_jf_b0;
+ 		else if (iwl_trans->cfg == &iwl9462_2ac_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9462_2ac_cfg_qu_c0_jf_b0;
+ 		else if (iwl_trans->cfg == &iwl9560_2ac_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9560_2ac_cfg_qu_c0_jf_b0;
+ 		else if (iwl_trans->cfg == &iwl9560_2ac_160_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9560_2ac_160_cfg_qu_c0_jf_b0;
+ 		else if (iwl_trans->cfg == &killer1650s_2ax_cfg_qu_b0_hr_b0)
+ 			iwl_trans->cfg = &killer1650s_2ax_cfg_qu_c0_hr_b0;
+ 		else if (iwl_trans->cfg == &killer1650i_2ax_cfg_qu_b0_hr_b0)
+ 			iwl_trans->cfg = &killer1650i_2ax_cfg_qu_c0_hr_b0;
+ 	}
+ 
+ 	/* same thing for QuZ... */
+ 	if (iwl_trans->hw_rev == CSR_HW_REV_TYPE_QUZ) {
+ 		if (iwl_trans->cfg == &iwl_ax101_cfg_qu_hr)
+ 			iwl_trans->cfg = &iwl_ax101_cfg_quz_hr;
+ 		else if (iwl_trans->cfg == &iwl_ax201_cfg_qu_hr)
+ 			iwl_trans->cfg = &iwl_ax201_cfg_quz_hr;
+ 		else if (iwl_trans->cfg == &iwl9461_2ac_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9461_2ac_cfg_quz_a0_jf_b0_soc;
+ 		else if (iwl_trans->cfg == &iwl9462_2ac_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9462_2ac_cfg_quz_a0_jf_b0_soc;
+ 		else if (iwl_trans->cfg == &iwl9560_2ac_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9560_2ac_cfg_quz_a0_jf_b0_soc;
+ 		else if (iwl_trans->cfg == &iwl9560_2ac_160_cfg_qu_b0_jf_b0)
+ 			iwl_trans->cfg = &iwl9560_2ac_160_cfg_quz_a0_jf_b0_soc;
+ 	}
+ 
++>>>>>>> 968dcfb49052 (iwlwifi: assign directly to iwl_trans->cfg in QuZ detection)
  #endif
  
  	pci_set_drvdata(pdev, iwl_trans);
* Unmerged path drivers/net/wireless/intel/iwlwifi/pcie/drv.c
