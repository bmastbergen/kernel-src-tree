nvme: don't abort completed request in nvme_cancel_request

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Ming Lei <ming.lei@redhat.com>
commit 78ca40724713bd422873cb4ebee86f9f499650f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/78ca4072.failed

Before aborting in-flight requests, all IO queues and their interrupts
have been shutdown. However, request's completion function may not be
done yet because it can be scheduled to run via IPI.

So don't abort one request if it is marked as completed, otherwise
we may abort one normal completed request.

	Cc: Max Gurtovoy <maxg@mellanox.com>
	Cc: Sagi Grimberg <sagi@grimberg.me>
	Cc: Keith Busch <keith.busch@intel.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 78ca40724713bd422873cb4ebee86f9f499650f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index aa80e92e846f,bcede8c879d1..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -254,12 -288,13 +254,22 @@@ void nvme_cancel_request(struct reques
  	dev_dbg_ratelimited(((struct nvme_ctrl *) data)->device,
  				"Cancelling I/O %d", req->tag);
  
++<<<<<<< HEAD
 +	status = NVME_SC_ABORT_REQ;
 +	if (blk_queue_dying(req->q))
 +		status |= NVME_SC_DNR;
 +	nvme_req(req)->status = status;
 +	blk_mq_complete_request_sync(req, 0);
 +
++=======
+ 	/* don't abort one completed request */
+ 	if (blk_mq_request_completed(req))
+ 		return true;
+ 
+ 	nvme_req(req)->status = NVME_SC_ABORT_REQ;
+ 	blk_mq_complete_request_sync(req);
+ 	return true;
++>>>>>>> 78ca40724713 (nvme: don't abort completed request in nvme_cancel_request)
  }
  EXPORT_SYMBOL_GPL(nvme_cancel_request);
  
* Unmerged path drivers/nvme/host/core.c
