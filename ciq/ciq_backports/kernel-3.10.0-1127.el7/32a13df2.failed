scsi: qla2xxx: Fix driver reload for ISP82xx

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Himanshu Madhani <hmadhani@marvell.com>
commit 32a13df21668b92f70f0673387f29251e0f285ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/32a13df2.failed

HINT_MBX_INT_PENDING is not guaranteed to be cleared by firmware. Remove
check that prevent driver load with ISP82XX.

	Signed-off-by: Quinn Tran <qutran@marvell.com>
	Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
	Reviewed-by: Ewan D. Milne <emilne@redhat.com>
Link: https://lore.kernel.org/r/20190830222402.23688-4-hmadhani@marvell.com
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 32a13df21668b92f70f0673387f29251e0f285ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_nx.c
diff --cc drivers/scsi/qla2xxx/qla_nx.c
index 868bfb56d972,2b2028f2383e..000000000000
--- a/drivers/scsi/qla2xxx/qla_nx.c
+++ b/drivers/scsi/qla2xxx/qla_nx.c
@@@ -2271,7 -2286,10 +2271,14 @@@ voi
  qla82xx_disable_intrs(struct qla_hw_data *ha)
  {
  	scsi_qla_host_t *vha = pci_get_drvdata(ha->pdev);
++<<<<<<< HEAD
 +	qla82xx_mbx_intr_disable(vha);
++=======
+ 
+ 	if (ha->interrupts_on)
+ 		qla82xx_mbx_intr_disable(vha);
+ 
++>>>>>>> 32a13df21668 (scsi: qla2xxx: Fix driver reload for ISP82xx)
  	spin_lock_irq(&ha->hardware_lock);
  	if (IS_QLA8044(ha))
  		qla8044_wr_reg(ha, LEG_INTR_MASK_OFFSET, 1);
diff --git a/drivers/scsi/qla2xxx/qla_mbx.c b/drivers/scsi/qla2xxx/qla_mbx.c
index 9df074d47e6a..27e767e2a305 100644
--- a/drivers/scsi/qla2xxx/qla_mbx.c
+++ b/drivers/scsi/qla2xxx/qla_mbx.c
@@ -253,21 +253,9 @@ qla2x00_mailbox_command(scsi_qla_host_t *vha, mbx_cmd_t *mcp)
 	if ((!abort_active && io_lock_on) || IS_NOPOLLING_TYPE(ha)) {
 		set_bit(MBX_INTR_WAIT, &ha->mbx_cmd_flags);
 
-		if (IS_P3P_TYPE(ha)) {
-			if (RD_REG_DWORD(&reg->isp82.hint) &
-				HINT_MBX_INT_PENDING) {
-				ha->flags.mbox_busy = 0;
-				spin_unlock_irqrestore(&ha->hardware_lock,
-					flags);
-
-				atomic_dec(&ha->num_pend_mbx_stage2);
-				ql_dbg(ql_dbg_mbx, vha, 0x1010,
-				    "Pending mailbox timeout, exiting.\n");
-				rval = QLA_FUNCTION_TIMEOUT;
-				goto premature_exit;
-			}
+		if (IS_P3P_TYPE(ha))
 			WRT_REG_DWORD(&reg->isp82.hint, HINT_MBX_INT_PENDING);
-		} else if (IS_FWI2_CAPABLE(ha))
+		else if (IS_FWI2_CAPABLE(ha))
 			WRT_REG_DWORD(&reg->isp24.hccr, HCCRX_SET_HOST_INT);
 		else
 			WRT_REG_WORD(&reg->isp.hccr, HCCR_SET_HOST_INT);
* Unmerged path drivers/scsi/qla2xxx/qla_nx.c
