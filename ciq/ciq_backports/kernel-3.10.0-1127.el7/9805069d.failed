virtio_net: Introduce VIRTIO_NET_F_STANDBY feature bit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Sridhar Samudrala <sridhar.samudrala@intel.com>
commit 9805069d14c1b0b66b1600ea60cfc08f94841bd8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/9805069d.failed

This feature bit can be used by hypervisor to indicate virtio_net device to
act as a standby for another device with the same MAC address.

VIRTIO_NET_F_STANDBY is defined as bit 62 as it is a device feature bit.

	Signed-off-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9805069d14c1b0b66b1600ea60cfc08f94841bd8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
#	include/uapi/linux/virtio_net.h
diff --cc drivers/net/virtio_net.c
index 5660f4230ca4,fe4534ee50a1..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -1834,18 -3019,27 +1834,34 @@@ static struct virtio_device_id id_table
  	{ 0 },
  };
  
++<<<<<<< HEAD
++=======
+ #define VIRTNET_FEATURES \
+ 	VIRTIO_NET_F_CSUM, VIRTIO_NET_F_GUEST_CSUM, \
+ 	VIRTIO_NET_F_MAC, \
+ 	VIRTIO_NET_F_HOST_TSO4, VIRTIO_NET_F_HOST_UFO, VIRTIO_NET_F_HOST_TSO6, \
+ 	VIRTIO_NET_F_HOST_ECN, VIRTIO_NET_F_GUEST_TSO4, VIRTIO_NET_F_GUEST_TSO6, \
+ 	VIRTIO_NET_F_GUEST_ECN, VIRTIO_NET_F_GUEST_UFO, \
+ 	VIRTIO_NET_F_MRG_RXBUF, VIRTIO_NET_F_STATUS, VIRTIO_NET_F_CTRL_VQ, \
+ 	VIRTIO_NET_F_CTRL_RX, VIRTIO_NET_F_CTRL_VLAN, \
+ 	VIRTIO_NET_F_GUEST_ANNOUNCE, VIRTIO_NET_F_MQ, \
+ 	VIRTIO_NET_F_CTRL_MAC_ADDR, \
+ 	VIRTIO_NET_F_MTU, VIRTIO_NET_F_CTRL_GUEST_OFFLOADS, \
+ 	VIRTIO_NET_F_SPEED_DUPLEX, VIRTIO_NET_F_STANDBY
+ 
++>>>>>>> 9805069d14c1 (virtio_net: Introduce VIRTIO_NET_F_STANDBY feature bit)
  static unsigned int features[] = {
 -	VIRTNET_FEATURES,
 -};
 -
 -static unsigned int features_legacy[] = {
 -	VIRTNET_FEATURES,
 -	VIRTIO_NET_F_GSO,
 +	VIRTIO_NET_F_CSUM, VIRTIO_NET_F_GUEST_CSUM,
 +	VIRTIO_NET_F_GSO, VIRTIO_NET_F_MAC,
 +	VIRTIO_NET_F_HOST_TSO4, VIRTIO_NET_F_HOST_UFO, VIRTIO_NET_F_HOST_TSO6,
 +	VIRTIO_NET_F_HOST_ECN, VIRTIO_NET_F_GUEST_TSO4, VIRTIO_NET_F_GUEST_TSO6,
 +	VIRTIO_NET_F_GUEST_ECN, VIRTIO_NET_F_GUEST_UFO,
 +	VIRTIO_NET_F_MRG_RXBUF, VIRTIO_NET_F_STATUS, VIRTIO_NET_F_CTRL_VQ,
 +	VIRTIO_NET_F_CTRL_RX, VIRTIO_NET_F_CTRL_VLAN,
 +	VIRTIO_NET_F_GUEST_ANNOUNCE, VIRTIO_NET_F_MQ,
 +	VIRTIO_NET_F_CTRL_MAC_ADDR,
  	VIRTIO_F_ANY_LAYOUT,
 +	VIRTIO_NET_F_MTU,
  };
  
  static struct virtio_driver virtio_net_driver = {
diff --cc include/uapi/linux/virtio_net.h
index ce932a011c1a,a3715a3224c1..000000000000
--- a/include/uapi/linux/virtio_net.h
+++ b/include/uapi/linux/virtio_net.h
@@@ -56,6 -57,11 +56,14 @@@
  					 * Steering */
  #define VIRTIO_NET_F_CTRL_MAC_ADDR 23	/* Set MAC address */
  
++<<<<<<< HEAD
++=======
+ #define VIRTIO_NET_F_STANDBY	  62	/* Act as standby for another device
+ 					 * with the same MAC.
+ 					 */
+ #define VIRTIO_NET_F_SPEED_DUPLEX 63	/* Device set linkspeed and duplex */
+ 
++>>>>>>> 9805069d14c1 (virtio_net: Introduce VIRTIO_NET_F_STANDBY feature bit)
  #ifndef VIRTIO_NET_NO_LEGACY
  #define VIRTIO_NET_F_GSO	6	/* Host handles pkts w/ any GSO type */
  #endif /* VIRTIO_NET_NO_LEGACY */
* Unmerged path drivers/net/virtio_net.c
* Unmerged path include/uapi/linux/virtio_net.h
