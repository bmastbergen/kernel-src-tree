scsi: zfcp: fix reaction on bit error threshold notification

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Steffen Maier <maier@linux.ibm.com>
commit 2190168aaea42c31bff7b9a967e7b045f07df095
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/2190168a.failed

On excessive bit errors for the FCP channel ingress fibre path, the channel
notifies us.  Previously, we only emitted a kernel message and a trace
record.  Since performance can become suboptimal with I/O timeouts due to
bit errors, we now stop using an FCP device by default on channel
notification so multipath on top can timely failover to other paths.  A new
module parameter zfcp.ber_stop can be used to get zfcp old behavior.

User explanation of new kernel message:

 * Description:
 * The FCP channel reported that its bit error threshold has been exceeded.
 * These errors might result from a problem with the physical components
 * of the local fibre link into the FCP channel.
 * The problem might be damage or malfunction of the cable or
 * cable connection between the FCP channel and
 * the adjacent fabric switch port or the point-to-point peer.
 * Find details about the errors in the HBA trace for the FCP device.
 * The zfcp device driver closed down the FCP device
 * to limit the performance impact from possible I/O command timeouts.
 * User action:
 * Check for problems on the local fibre link, ensure that fibre optics are
 * clean and functional, and all cables are properly plugged.
 * After the repair action, you can manually recover the FCP device by
 * writing "0" into its "failed" sysfs attribute.
 * If recovery through sysfs is not possible, set the CHPID of the device
 * offline and back online on the service element.

Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
	Cc: <stable@vger.kernel.org> #2.6.30+
Link: https://lore.kernel.org/r/20191001104949.42810-1-maier@linux.ibm.com
	Reviewed-by: Jens Remus <jremus@linux.ibm.com>
	Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
	Signed-off-by: Steffen Maier <maier@linux.ibm.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 2190168aaea42c31bff7b9a967e7b045f07df095)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/scsi/zfcp_fsf.c
diff --cc drivers/s390/scsi/zfcp_fsf.c
index 95aa4ca800aa,cf63916814cc..000000000000
--- a/drivers/s390/scsi/zfcp_fsf.c
+++ b/drivers/s390/scsi/zfcp_fsf.c
@@@ -18,11 -20,23 +18,20 @@@
  #include "zfcp_qdio.h"
  #include "zfcp_reqlist.h"
  
 -/* timeout for FSF requests sent during scsi_eh: abort or FCP TMF */
 -#define ZFCP_FSF_SCSI_ER_TIMEOUT (10*HZ)
 -/* timeout for: exchange config/port data outside ERP, or open/close WKA port */
 -#define ZFCP_FSF_REQUEST_TIMEOUT (60*HZ)
 -
  struct kmem_cache *zfcp_fsf_qtcb_cache;
  
++<<<<<<< HEAD
 +static void zfcp_fsf_request_timeout_handler(unsigned long data)
++=======
+ static bool ber_stop = true;
+ module_param(ber_stop, bool, 0600);
+ MODULE_PARM_DESC(ber_stop,
+ 		 "Shuts down FCP devices for FCP channels that report a bit-error count in excess of its threshold (default on)");
+ 
+ static void zfcp_fsf_request_timeout_handler(struct timer_list *t)
++>>>>>>> 2190168aaea4 (scsi: zfcp: fix reaction on bit error threshold notification)
  {
 -	struct zfcp_fsf_req *fsf_req = from_timer(fsf_req, t, timer);
 -	struct zfcp_adapter *adapter = fsf_req->adapter;
 -
 +	struct zfcp_adapter *adapter = (struct zfcp_adapter *) data;
  	zfcp_qdio_siosl(adapter);
  	zfcp_erp_adapter_reopen(adapter, ZFCP_STATUS_COMMON_ERP_FAILED,
  				"fsrth_1");
* Unmerged path drivers/s390/scsi/zfcp_fsf.c
