scsi: scsi_devinfo: cleanly zero-pad devinfo strings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Martin Wilck <mwilck@suse.com>
commit 81df022b688d43d2a3667518b2f755d384397910
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/81df022b.failed

Cleanly fill memory for "vendor" and "model" with 0-bytes for the
"compatible" case rather than adding only a single 0 byte.  This
simplifies the devinfo code a a bit, and avoids mistakes in other places
of the code (not in current upstream, but we had one such mistake in the
SUSE kernel).

[mkp: applied by hand and added braces]

	Signed-off-by: Martin Wilck <mwilck@suse.com>
	Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 81df022b688d43d2a3667518b2f755d384397910)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_devinfo.c
diff --cc drivers/scsi/scsi_devinfo.c
index f4de489642d2,449ef5adbb2b..000000000000
--- a/drivers/scsi/scsi_devinfo.c
+++ b/drivers/scsi/scsi_devinfo.c
@@@ -33,8 -34,7 +33,12 @@@ struct scsi_dev_info_list_table 
  };
  
  
++<<<<<<< HEAD
 +static const char spaces[] = "                "; /* 16 of them */
 +static unsigned scsi_default_dev_flags;
++=======
+ static blist_flags_t scsi_default_dev_flags;
++>>>>>>> 81df022b688d (scsi: scsi_devinfo: cleanly zero-pad devinfo strings)
  static LIST_HEAD(scsi_dev_info_list);
  static char scsi_dev_flags[256];
  
@@@ -296,20 -297,13 +300,30 @@@ static void scsi_strcpy_devinfo(char *n
  	size_t from_length;
  
  	from_length = strlen(from);
++<<<<<<< HEAD
 +	strncpy(to, from, min(to_length, from_length));
 +	if (from_length < to_length) {
 +		if (compatible) {
 +			/*
 +			 * NUL terminate the string if it is short.
 +			 */
 +			to[from_length] = '\0';
 +		} else {
 +			/* 
 +			 * space pad the string if it is short. 
 +			 */
 +			strncpy(&to[from_length], spaces,
 +				to_length - from_length);
 +		}
++=======
+ 	/* This zero-pads the destination */
+ 	strncpy(to, from, to_length);
+ 	if (from_length < to_length && !compatible) {
+ 		/*
+ 		 * space pad the string if it is short.
+ 		 */
+ 		memset(&to[from_length], ' ', to_length - from_length);
++>>>>>>> 81df022b688d (scsi: scsi_devinfo: cleanly zero-pad devinfo strings)
  	}
  	if (from_length > to_length)
  		 printk(KERN_WARNING "%s: %s string '%s' is too long\n",
* Unmerged path drivers/scsi/scsi_devinfo.c
