stm class: Rework policy node fallback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Alexander Shishkin <alexander.shishkin@linux.intel.com>
commit cb6102bd99efe35f016dc6d7282e681e6dbde154
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/cb6102bd.failed

Currently, if no matching policy node can be found for a trace source,
we'll try to use "default" policy node, then, if that doesn't exist,
we'll pick the first node, in order of creation. If that also fails,
we'll allocate M/C range from the beginning of the device's M/C range.

This makes it difficult to know which node (if any) was used in any
particular case.

In order to make things more deterministic, the new order is as follows:
  * if they supply ID string, use that and nothing else,
  * if they are a task, use their task name (comm),
  * use "default", if it exists,
  * return failure, to let them know there is no suitable rule.

This should provide enough convenience with the "default" catch-all node,
while not leaving *everything* to chance. As a side effect, this relaxes
the requirement of using ioctl() for identification with the possibility of
using task names as policy nodes.

	Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Tested-by: Mathieu Poirier <mathieu.poirier@linaro.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit cb6102bd99efe35f016dc6d7282e681e6dbde154)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hwtracing/stm/core.c
#	drivers/hwtracing/stm/policy.c
#	drivers/hwtracing/stm/stm.h
* Unmerged path drivers/hwtracing/stm/core.c
* Unmerged path drivers/hwtracing/stm/policy.c
* Unmerged path drivers/hwtracing/stm/stm.h
* Unmerged path drivers/hwtracing/stm/core.c
* Unmerged path drivers/hwtracing/stm/policy.c
* Unmerged path drivers/hwtracing/stm/stm.h
