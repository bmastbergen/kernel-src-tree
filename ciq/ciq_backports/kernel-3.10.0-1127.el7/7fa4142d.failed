scsi: qedf: Print fcport information on wait for upload timeout

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1127.el7
commit-author Saurav Kashyap <skashyap@marvell.com>
commit 7fa4142d8bdc7a6255844ba2edfcca4f28805ab4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1127.el7/7fa4142d.failed

Log fcport for which upload failed.

	Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 7fa4142d8bdc7a6255844ba2edfcca4f28805ab4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qedf/qedf_main.c
diff --cc drivers/scsi/qedf/qedf_main.c
index 77059b562cab,ffe536e6e0e4..000000000000
--- a/drivers/scsi/qedf/qedf_main.c
+++ b/drivers/scsi/qedf/qedf_main.c
@@@ -781,16 -783,37 +781,24 @@@ static int qedf_eh_device_reset(struct 
  	return qedf_initiate_tmf(sc_cmd, FCP_TMF_LUN_RESET);
  }
  
 -bool qedf_wait_for_upload(struct qedf_ctx *qedf)
 +void qedf_wait_for_upload(struct qedf_ctx *qedf)
  {
++<<<<<<< HEAD
 +	while (1) {
++=======
+ 	struct qedf_rport *fcport = NULL;
+ 	int wait_cnt = 120;
+ 
+ 	while (wait_cnt--) {
++>>>>>>> 7fa4142d8bdc (scsi: qedf: Print fcport information on wait for upload timeout)
  		if (atomic_read(&qedf->num_offloads))
- 			QEDF_INFO(&(qedf->dbg_ctx), QEDF_LOG_DISC,
- 			    "Waiting for all uploads to complete.\n");
+ 			QEDF_INFO(&qedf->dbg_ctx, QEDF_LOG_DISC,
+ 				  "Waiting for all uploads to complete num_offloads = 0x%x.\n",
+ 				  atomic_read(&qedf->num_offloads));
  		else
 -			return true;
 +			break;
  		msleep(500);
  	}
 -
 -	rcu_read_lock();
 -	list_for_each_entry_rcu(fcport, &qedf->fcports, peers) {
 -		if (fcport && test_bit(QEDF_RPORT_SESSION_READY,
 -				       &fcport->flags)) {
 -			if (fcport->rdata)
 -				QEDF_ERR(&qedf->dbg_ctx,
 -					 "Waiting for fcport %p portid=%06x.\n",
 -					 fcport, fcport->rdata->ids.port_id);
 -			} else {
 -				QEDF_ERR(&qedf->dbg_ctx,
 -					 "Waiting for fcport %p.\n", fcport);
 -			}
 -	}
 -	rcu_read_unlock();
 -	return false;
 -
  }
  
  /* Performs soft reset of qedf_ctx by simulating a link down/up */
* Unmerged path drivers/scsi/qedf/qedf_main.c
