gfs2: allow journal replay to hold sd_log_flush_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.53.1.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit c9ebc4b737999ab1f3264c42431f7be80ac2efbf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.53.1.el7/c9ebc4b7.failed

Before this patch, journal replays could stomp on log flushes
and each other because both log flushes and journal replays used
the same sd_log_bio. Function gfs2_log_flush prevents other log
flushes from interfering by taking the sd_log_flush_lock rwsem
during the flush. However, it does not protect against journal
replays. This patch allows the journal replay to take the same
sd_log_flush_lock rwsem so use of the sd_log_bio is not stomped.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit c9ebc4b737999ab1f3264c42431f7be80ac2efbf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/recovery.c
diff --cc fs/gfs2/recovery.c
index 9a7a16902c03,21fc44b31863..000000000000
--- a/fs/gfs2/recovery.c
+++ b/fs/gfs2/recovery.c
@@@ -439,14 -408,13 +443,19 @@@ void gfs2_recover_func(struct work_stru
  						   head.lh_blkno, pass);
  			lops_after_scan(jd, error, pass);
  			if (error)
 -				goto fail_gunlock_thaw;
 +				goto fail_gunlock_tr;
  		}
  
++<<<<<<< HEAD
 +		error = clean_journal(jd, &head);
 +		if (error)
 +			goto fail_gunlock_tr;
++=======
+ 		clean_journal(jd, &head);
+ 		up_write(&sdp->sd_log_flush_lock);
++>>>>>>> c9ebc4b73799 (gfs2: allow journal replay to hold sd_log_flush_lock)
  
 -		gfs2_glock_dq_uninit(&thaw_gh);
 +		gfs2_glock_dq_uninit(&t_gh);
  		t_rep = ktime_get();
  		fs_info(sdp, "jid=%u: Journal replayed in %lldms [jlck:%lldms, "
  			"jhead:%lldms, tlck:%lldms, replay:%lldms]\n",
* Unmerged path fs/gfs2/recovery.c
