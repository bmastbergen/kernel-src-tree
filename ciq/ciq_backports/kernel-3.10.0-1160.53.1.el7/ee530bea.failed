GFS2: Truncate address space mapping when deleting an inode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.53.1.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit ee530beafeca9826b2086eab053312b182c09669
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.53.1.el7/ee530bea.failed

In function gfs2_delete_inode() we write and flush the mapping for
a glock, among other things. We truncate the mapping for the inode,
but we never truncate the mapping for the glock. This patch makes it
also truncate the metamapping. This avoid cases where the glock is
reused by another process who is trying to recreate an inode in its
place using the same block.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Acked-by: Steven Whitehouse <swhiteho@redhat.com>
(cherry picked from commit ee530beafeca9826b2086eab053312b182c09669)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/super.c
diff --cc fs/gfs2/super.c
index fac088989e79,8f960a51a9a0..000000000000
--- a/fs/gfs2/super.c
+++ b/fs/gfs2/super.c
@@@ -1611,9 -1583,9 +1612,13 @@@ alloc_failed
  	goto out_unlock;
  
  out_truncate:
++<<<<<<< HEAD
 +	gfs2_log_flush(sdp, ip->i_gl);
++=======
+ 	gfs2_log_flush(sdp, ip->i_gl, NORMAL_FLUSH);
+ 	metamapping = gfs2_glock2aspace(ip->i_gl);
++>>>>>>> ee530beafeca (GFS2: Truncate address space mapping when deleting an inode)
  	if (test_bit(GLF_DIRTY, &ip->i_gl->gl_flags)) {
- 		struct address_space *metamapping = gfs2_glock2aspace(ip->i_gl);
  		filemap_fdatawrite(metamapping);
  		filemap_fdatawait(metamapping);
  	}
* Unmerged path fs/gfs2/super.c
