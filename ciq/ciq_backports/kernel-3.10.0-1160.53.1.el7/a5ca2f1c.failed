gfs2: Turn gfs2_consist into void functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.53.1.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit a5ca2f1cb66b1ef93bbd58b55b22cb50163a03db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.53.1.el7/a5ca2f1c.failed

Change the various gfs2_consist functions to return void.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit a5ca2f1cb66b1ef93bbd58b55b22cb50163a03db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/util.c
diff --cc fs/gfs2/util.c
index 33a5f6d866e6,698eb5952438..000000000000
--- a/fs/gfs2/util.c
+++ b/fs/gfs2/util.c
@@@ -131,65 -138,55 +131,83 @@@ int gfs2_assert_warn_i(struct gfs2_sbd 
  
  /**
   * gfs2_consist_i - Flag a filesystem consistency error and withdraw
-  * Returns: -1 if this call withdrew the machine,
-  *          0 if it was already withdrawn
   */
  
- int gfs2_consist_i(struct gfs2_sbd *sdp, const char *function,
- 		   char *file, unsigned int line)
+ void gfs2_consist_i(struct gfs2_sbd *sdp, const char *function,
+ 		    char *file, unsigned int line)
  {
++<<<<<<< HEAD
 +	int rv;
 +	rv = gfs2_lm_withdraw(sdp,
 +		"GFS2: fsid=%s: fatal: filesystem consistency error\n"
 +		"GFS2: fsid=%s:   function = %s, file = %s, line = %u\n",
 +		sdp->sd_fsname,
 +		sdp->sd_fsname, function, file, line);
 +	return rv;
++=======
+ 	gfs2_lm(sdp,
+ 		"fatal: filesystem consistency error - function = %s, file = %s, line = %u\n",
+ 		function, file, line);
+ 	gfs2_withdraw(sdp);
++>>>>>>> a5ca2f1cb66b (gfs2: Turn gfs2_consist into void functions)
  }
  
  /**
   * gfs2_consist_inode_i - Flag an inode consistency error and withdraw
-  * Returns: -1 if this call withdrew the machine,
-  *          0 if it was already withdrawn
   */
  
- int gfs2_consist_inode_i(struct gfs2_inode *ip,
- 			 const char *function, char *file, unsigned int line)
+ void gfs2_consist_inode_i(struct gfs2_inode *ip,
+ 			  const char *function, char *file, unsigned int line)
  {
  	struct gfs2_sbd *sdp = GFS2_SB(&ip->i_inode);
 -
 -	gfs2_lm(sdp,
 -		"fatal: filesystem consistency error\n"
 -		"  inode = %llu %llu\n"
 -		"  function = %s, file = %s, line = %u\n",
 -		(unsigned long long)ip->i_no_formal_ino,
 +	int rv;
 +	rv = gfs2_lm_withdraw(sdp,
 +		"GFS2: fsid=%s: fatal: filesystem consistency error\n"
 +		"GFS2: fsid=%s:   inode = %llu %llu\n"
 +		"GFS2: fsid=%s:   function = %s, file = %s, line = %u\n",
 +		sdp->sd_fsname,
 +		sdp->sd_fsname, (unsigned long long)ip->i_no_formal_ino,
  		(unsigned long long)ip->i_no_addr,
++<<<<<<< HEAD
 +		sdp->sd_fsname, function, file, line);
 +	return rv;
++=======
+ 		function, file, line);
+ 	gfs2_withdraw(sdp);
++>>>>>>> a5ca2f1cb66b (gfs2: Turn gfs2_consist into void functions)
  }
  
  /**
   * gfs2_consist_rgrpd_i - Flag a RG consistency error and withdraw
-  * Returns: -1 if this call withdrew the machine,
-  *          0 if it was already withdrawn
   */
  
- int gfs2_consist_rgrpd_i(struct gfs2_rgrpd *rgd,
- 			 const char *function, char *file, unsigned int line)
+ void gfs2_consist_rgrpd_i(struct gfs2_rgrpd *rgd,
+ 			  const char *function, char *file, unsigned int line)
  {
  	struct gfs2_sbd *sdp = rgd->rd_sbd;
 -	char fs_id_buf[sizeof(sdp->sd_fsname) + 7];
 -
 +	int rv;
 +
++<<<<<<< HEAD
 +	gfs2_rgrp_dump(NULL, rgd->rd_gl);
 +	rv = gfs2_lm_withdraw(sdp,
 +		"GFS2: fsid=%s: fatal: filesystem consistency error\n"
 +		"GFS2: fsid=%s:   RG = %llu\n"
 +		"GFS2: fsid=%s:   function = %s, file = %s, line = %u\n",
 +		sdp->sd_fsname,
 +		sdp->sd_fsname, (unsigned long long)rgd->rd_addr,
 +		sdp->sd_fsname, function, file, line);
 +	return rv;
++=======
+ 	sprintf(fs_id_buf, "fsid=%s: ", sdp->sd_fsname);
+ 	gfs2_rgrp_dump(NULL, rgd->rd_gl, fs_id_buf);
+ 	gfs2_lm(sdp,
+ 		"fatal: filesystem consistency error\n"
+ 		"  RG = %llu\n"
+ 		"  function = %s, file = %s, line = %u\n",
+ 		(unsigned long long)rgd->rd_addr,
+ 		function, file, line);
+ 	gfs2_withdraw(sdp);
++>>>>>>> a5ca2f1cb66b (gfs2: Turn gfs2_consist into void functions)
  }
  
  /**
* Unmerged path fs/gfs2/util.c
diff --git a/fs/gfs2/util.h b/fs/gfs2/util.h
index 44242f56811a..b6411afc1fae 100644
--- a/fs/gfs2/util.h
+++ b/fs/gfs2/util.h
@@ -54,22 +54,22 @@ int gfs2_assert_warn_i(struct gfs2_sbd *sdp, char *assertion,
 					__func__, __FILE__, __LINE__))
 
 
-int gfs2_consist_i(struct gfs2_sbd *sdp,
-		   const char *function, char *file, unsigned int line);
+void gfs2_consist_i(struct gfs2_sbd *sdp,
+		    const char *function, char *file, unsigned int line);
 
 #define gfs2_consist(sdp) \
 gfs2_consist_i((sdp), __func__, __FILE__, __LINE__)
 
 
-int gfs2_consist_inode_i(struct gfs2_inode *ip,
-			 const char *function, char *file, unsigned int line);
+void gfs2_consist_inode_i(struct gfs2_inode *ip,
+			  const char *function, char *file, unsigned int line);
 
 #define gfs2_consist_inode(ip) \
 gfs2_consist_inode_i((ip), __func__, __FILE__, __LINE__)
 
 
-int gfs2_consist_rgrpd_i(struct gfs2_rgrpd *rgd,
-			 const char *function, char *file, unsigned int line);
+void gfs2_consist_rgrpd_i(struct gfs2_rgrpd *rgd,
+			  const char *function, char *file, unsigned int line);
 
 #define gfs2_consist_rgrpd(rgd) \
 gfs2_consist_rgrpd_i((rgd), __func__, __FILE__, __LINE__)
