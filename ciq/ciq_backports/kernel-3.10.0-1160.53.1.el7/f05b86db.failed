gfs2: Prepare to withdraw as soon as an IO error occurs in log write

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.53.1.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit f05b86db314df9f31c4c21153338f6a38b1f0de7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.53.1.el7/f05b86db.failed

Before this patch, function gfs2_end_log_write would detect any IO
errors writing to the journal and put out an appropriate message,
but it never set a withdrawing condition. Eventually, the log daemon
would see the error and determine it was time to withdraw, but in
the meantime, other processes could continue running as if nothing
bad ever happened. The biggest consequence is that __gfs2_glock_put
would BUG() when it saw that there were still unwritten items.

This patch sets the WITHDRAWING status as soon as an IO error is
detected, and that way, the BUG will be avoided so the file system
can be properly withdrawn and unmounted.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Reviewed-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit f05b86db314df9f31c4c21153338f6a38b1f0de7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/lops.c
diff --cc fs/gfs2/lops.c
index b6ef974ca30d,7307e5e721d1..000000000000
--- a/fs/gfs2/lops.c
+++ b/fs/gfs2/lops.c
@@@ -206,12 -200,15 +206,22 @@@ static void gfs2_end_log_write(struct b
  	struct gfs2_sbd *sdp = bio->bi_private;
  	struct bio_vec *bvec;
  	struct page *page;
 -	struct bvec_iter_all iter_all;
 +	int i;
  
++<<<<<<< HEAD
 +	if (error) {
 +		sdp->sd_log_error = error;
 +		fs_err(sdp, "Error %d writing to journal, jid=%u\n", error,
 +		       sdp->sd_jdesc->jd_jid);
++=======
+ 	if (bio->bi_status) {
+ 		if (!cmpxchg(&sdp->sd_log_error, 0, (int)bio->bi_status))
+ 			fs_err(sdp, "Error %d writing to journal, jid=%u\n",
+ 			       bio->bi_status, sdp->sd_jdesc->jd_jid);
+ 		gfs2_withdraw_delayed(sdp);
+ 		/* prevent more writes to the journal */
+ 		clear_bit(SDF_JOURNAL_LIVE, &sdp->sd_flags);
++>>>>>>> f05b86db314d (gfs2: Prepare to withdraw as soon as an IO error occurs in log write)
  		wake_up(&sdp->sd_logd_waitq);
  	}
  
* Unmerged path fs/gfs2/lops.c
