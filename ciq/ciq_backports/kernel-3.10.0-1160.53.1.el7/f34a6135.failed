gfs2: Only complain the first time an io error occurs in quota or log

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.53.1.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit f34a6135ce723cf7940729ab0b2607a753ebb580
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.53.1.el7/f34a6135.failed

Before this patch, all io errors received by the quota daemon or the
logd daemon would cause a complaint message to be issued, such as:

   gfs2: fsid=dm-13.0: Error 10 writing to journal, jid=0

This patch changes it so that the error message is only issued the
first time the error is encountered.

Also, before this patch function gfs2_end_log_write did not set the
sd_log_error value, so log errors would not cause the file system to
be withdrawn. This patch sets the error code so the file system is
properly withdrawn if an io error is encountered writing to the journal.

WARNING: This change in function breaks check xfstests generic/441
and causes it to fail: io errors writing to the log should cause a
file system to be withdrawn, and no further operations are tolerated.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Reviewed-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit f34a6135ce723cf7940729ab0b2607a753ebb580)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/lops.c
#	fs/gfs2/quota.c
diff --cc fs/gfs2/lops.c
index b6ef974ca30d,0af2e5ff0d97..000000000000
--- a/fs/gfs2/lops.c
+++ b/fs/gfs2/lops.c
@@@ -206,12 -200,12 +206,19 @@@ static void gfs2_end_log_write(struct b
  	struct gfs2_sbd *sdp = bio->bi_private;
  	struct bio_vec *bvec;
  	struct page *page;
 -	struct bvec_iter_all iter_all;
 +	int i;
  
++<<<<<<< HEAD
 +	if (error) {
 +		sdp->sd_log_error = error;
 +		fs_err(sdp, "Error %d writing to journal, jid=%u\n", error,
 +		       sdp->sd_jdesc->jd_jid);
++=======
+ 	if (bio->bi_status) {
+ 		if (!cmpxchg(&sdp->sd_log_error, 0, (int)bio->bi_status))
+ 			fs_err(sdp, "Error %d writing to journal, jid=%u\n",
+ 			       bio->bi_status, sdp->sd_jdesc->jd_jid);
++>>>>>>> f34a6135ce72 (gfs2: Only complain the first time an io error occurs in quota or log)
  		wake_up(&sdp->sd_logd_waitq);
  	}
  
diff --cc fs/gfs2/quota.c
index e2f42a2af815,dbe87b2b55af..000000000000
--- a/fs/gfs2/quota.c
+++ b/fs/gfs2/quota.c
@@@ -1488,9 -1475,9 +1488,15 @@@ static void quotad_error(struct gfs2_sb
  {
  	if (error == 0 || error == -EROFS)
  		return;
++<<<<<<< HEAD
 +	if (!test_bit(SDF_SHUTDOWN, &sdp->sd_flags)) {
 +		fs_err(sdp, "gfs2_quotad: %s error %d\n", msg, error);
 +		sdp->sd_log_error = error;
++=======
+ 	if (!gfs2_withdrawn(sdp)) {
+ 		if (!cmpxchg(&sdp->sd_log_error, 0, error))
+ 			fs_err(sdp, "gfs2_quotad: %s error %d\n", msg, error);
++>>>>>>> f34a6135ce72 (gfs2: Only complain the first time an io error occurs in quota or log)
  		wake_up(&sdp->sd_logd_waitq);
  	}
  }
* Unmerged path fs/gfs2/lops.c
* Unmerged path fs/gfs2/quota.c
