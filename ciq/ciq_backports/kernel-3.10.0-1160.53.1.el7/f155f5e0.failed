gfs2: fix infinite loop in gfs2_ail1_flush on io error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.53.1.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit f155f5e01090beb317698df00629b7af4e18df6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.53.1.el7/f155f5e0.failed

Before this patch, an IO error encountered in function gfs2_ail1_flush
would cause a deadlock: because of the io error (and its resulting
withdrawn state), buffers stopped being written to the journal.
Buffers would remain on the ail1 list, so gfs2_ail1_start_one would
return 1 to indicate dirty buffers were still on the ail1 list.
However, when function gfs2_ail1_flush got a non-zero return code,
it would goto restart to retry the writes, which meant it would never
finish, and thus the infinite loop.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit f155f5e01090beb317698df00629b7af4e18df6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/log.c
diff --cc fs/gfs2/log.c
index 78f81ccc8357,72c8f30b1822..000000000000
--- a/fs/gfs2/log.c
+++ b/fs/gfs2/log.c
@@@ -152,7 -161,8 +152,12 @@@ restart
  	list_for_each_entry_reverse(tr, head, tr_list) {
  		if (wbc->nr_to_write <= 0)
  			break;
++<<<<<<< HEAD
 +		if (gfs2_ail1_start_one(sdp, wbc, tr))
++=======
+ 		if (gfs2_ail1_start_one(sdp, wbc, tr, &withdraw) &&
+ 		    !gfs2_withdrawn(sdp))
++>>>>>>> f155f5e01090 (gfs2: fix infinite loop in gfs2_ail1_flush on io error)
  			goto restart;
  	}
  	spin_unlock(&sdp->sd_ail_lock);
* Unmerged path fs/gfs2/log.c
