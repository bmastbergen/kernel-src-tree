nvmet: use new ana_log_size instead the old one

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Hou Pu <houpu.main@gmail.com>
commit e181811bd04d874fe48bbfa1165a82068b58144d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/e181811b.failed

The new ana_log_size should be used instead of the old one.
Or kernel NULL pointer dereference will happen like below:

[   38.957849][   T69] BUG: kernel NULL pointer dereference, address: 000000000000003c
[   38.975550][   T69] #PF: supervisor write access in kernel mode
[   38.975955][   T69] #PF: error_code(0x0002) - not-present page
[   38.976905][   T69] PGD 0 P4D 0
[   38.979388][   T69] Oops: 0002 [#1] SMP NOPTI
[   38.980488][   T69] CPU: 0 PID: 69 Comm: kworker/0:2 Not tainted 5.12.0+ #54
[   38.981254][   T69] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
[   38.982502][   T69] Workqueue: events nvme_loop_execute_work
[   38.985219][   T69] RIP: 0010:memcpy_orig+0x68/0x10f
[   38.986203][   T69] Code: 83 c2 20 eb 44 48 01 d6 48 01 d7 48 83 ea 20 0f 1f 00 48 83 ea 20 4c 8b 46 f8 4c 8b 4e f0 4c 8b 56 e8 4c 8b 5e e0 48 8d 76 e0 <4c> 89 47 f8 4c 89 4f f0 4c 89 57 e8 4c 89 5f e0 48 8d 7f e0 73 d2
[   38.987677][   T69] RSP: 0018:ffffc900001b7d48 EFLAGS: 00000287
[   38.987996][   T69] RAX: 0000000000000020 RBX: 0000000000000024 RCX: 0000000000000010
[   38.988327][   T69] RDX: ffffffffffffffe4 RSI: ffff8881084bc004 RDI: 0000000000000044
[   38.988620][   T69] RBP: 0000000000000024 R08: 0000000100000000 R09: 0000000000000000
[   38.988991][   T69] R10: 0000000100000000 R11: 0000000000000001 R12: 0000000000000024
[   38.989289][   T69] R13: ffff8881084bc000 R14: 0000000000000000 R15: 0000000000000024
[   38.989845][   T69] FS:  0000000000000000(0000) GS:ffff888237c00000(0000) knlGS:0000000000000000
[   38.990234][   T69] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[   38.990490][   T69] CR2: 000000000000003c CR3: 00000001085b2000 CR4: 00000000000006f0
[   38.991105][   T69] Call Trace:
[   38.994157][   T69]  sg_copy_buffer+0xb8/0xf0
[   38.995357][   T69]  nvmet_copy_to_sgl+0x48/0x6d
[   38.995565][   T69]  nvmet_execute_get_log_page_ana+0xd4/0x1cb
[   38.995792][   T69]  nvmet_execute_get_log_page+0xc9/0x146
[   38.995992][   T69]  nvme_loop_execute_work+0x3e/0x44
[   38.996181][   T69]  process_one_work+0x1c3/0x3c0
[   38.996393][   T69]  worker_thread+0x44/0x3d0
[   38.996600][   T69]  ? cancel_delayed_work+0x90/0x90
[   38.996804][   T69]  kthread+0xf7/0x130
[   38.996961][   T69]  ? kthread_create_worker_on_cpu+0x70/0x70
[   38.997171][   T69]  ret_from_fork+0x22/0x30
[   38.997705][   T69] Modules linked in:
[   38.998741][   T69] CR2: 000000000000003c
[   39.000104][   T69] ---[ end trace e719927b609d0fa0 ]---

Fixes: 5e1f689913a4 ("nvme-multipath: fix double initialization of ANA state")
	Signed-off-by: Hou Pu <houpu.main@gmail.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit e181811bd04d874fe48bbfa1165a82068b58144d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/multipath.c
diff --cc drivers/nvme/host/multipath.c
index 6b05dde7ecf1,f81871c7128a..000000000000
--- a/drivers/nvme/host/multipath.c
+++ b/drivers/nvme/host/multipath.c
@@@ -743,37 -804,31 +743,46 @@@ int nvme_mpath_init(struct nvme_ctrl *c
  	ctrl->nanagrpid = le32_to_cpu(id->nanagrpid);
  	ctrl->anagrpmax = le32_to_cpu(id->anagrpmax);
  
 -	ana_log_size = sizeof(struct nvme_ana_rsp_hdr) +
 -		ctrl->nanagrpid * sizeof(struct nvme_ana_group_desc) +
 -		ctrl->max_namespaces * sizeof(__le32);
 -	if (ana_log_size > max_transfer_size) {
 +	mutex_init(&ctrl->ana_lock);
 +	timer_setup(&ctrl->anatt_timer, nvme_anatt_timeout, 0);
 +	ctrl->ana_log_size = sizeof(struct nvme_ana_rsp_hdr) +
 +		ctrl->nanagrpid * sizeof(struct nvme_ana_group_desc);
 +	ctrl->ana_log_size += ctrl->max_namespaces * sizeof(__le32);
 +
 +	if (ctrl->ana_log_size > ctrl->max_hw_sectors << SECTOR_SHIFT) {
  		dev_err(ctrl->device,
 -			"ANA log page size (%zd) larger than MDTS (%zd).\n",
 -			ana_log_size, max_transfer_size);
 +			"ANA log page size (%zd) larger than MDTS (%d).\n",
 +			ctrl->ana_log_size,
 +			ctrl->max_hw_sectors << SECTOR_SHIFT);
  		dev_err(ctrl->device, "disabling ANA support.\n");
 -		goto out_uninit;
 +		return 0;
  	}
++<<<<<<< HEAD
 +
 +	INIT_WORK(&ctrl->ana_work, nvme_ana_work);
 +	kfree(ctrl->ana_log_buf);
 +	ctrl->ana_log_buf = kmalloc(ctrl->ana_log_size, GFP_KERNEL);
 +	if (!ctrl->ana_log_buf) {
 +		error = -ENOMEM;
 +		goto out;
++=======
+ 	if (ana_log_size > ctrl->ana_log_size) {
+ 		nvme_mpath_stop(ctrl);
+ 		kfree(ctrl->ana_log_buf);
+ 		ctrl->ana_log_buf = kmalloc(ana_log_size, GFP_KERNEL);
+ 		if (!ctrl->ana_log_buf)
+ 			return -ENOMEM;
++>>>>>>> e181811bd04d (nvmet: use new ana_log_size instead the old one)
  	}
 -	ctrl->ana_log_size = ana_log_size;
 +
  	error = nvme_read_ana_log(ctrl);
  	if (error)
 -		goto out_uninit;
 +		goto out_free_ana_log_buf;
  	return 0;
 -
 -out_uninit:
 -	nvme_mpath_uninit(ctrl);
 +out_free_ana_log_buf:
 +	kfree(ctrl->ana_log_buf);
 +	ctrl->ana_log_buf = NULL;
 +out:
  	return error;
  }
  
* Unmerged path drivers/nvme/host/multipath.c
