gfs2: Fix underflow in gfs2_page_mkwrite

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit d3c51c55cb9274dd43c156f1f26b5eb4d5f2d58c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/d3c51c55.failed

On filesystems with a block size smaller than PAGE_SIZE and non-empty
files smaller then PAGE_SIZE, gfs2_page_mkwrite could end up allocating
excess blocks beyond the end of the file, similar to fallocate.  This
doesn't make sense; fix it.

	Reported-by: Bob Peterson <rpeterso@redhat.com>
Fixes: 184b4e60853d ("gfs2: Fix end-of-file handling in gfs2_page_mkwrite")
	Cc: stable@vger.kernel.org # v5.5+
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit d3c51c55cb9274dd43c156f1f26b5eb4d5f2d58c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/file.c
diff --cc fs/gfs2/file.c
index c516cef89390,37041873bb95..000000000000
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@@ -431,6 -442,21 +431,17 @@@ static vm_fault_t gfs2_page_mkwrite(str
  	/* Update file times before taking page lock */
  	file_update_time(vmf->vma->vm_file);
  
++<<<<<<< HEAD
++=======
+ 	/* page is wholly or partially inside EOF */
+ 	if (size - offset < PAGE_SIZE)
+ 		length = size - offset;
+ 	else
+ 		length = PAGE_SIZE;
+ 
+ 	gfs2_size_hint(vmf->vma->vm_file, offset, length);
+ 
++>>>>>>> d3c51c55cb92 (gfs2: Fix underflow in gfs2_page_mkwrite)
  	set_bit(GLF_DIRTY, &ip->i_gl->gl_flags);
  	set_bit(GIF_SW_PAGED, &ip->i_flags);
  
* Unmerged path fs/gfs2/file.c
