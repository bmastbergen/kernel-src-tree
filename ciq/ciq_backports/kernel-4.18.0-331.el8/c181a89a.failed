mlxsw: spectrum_router: Consolidate mlxsw_sp_nexthop{4, 6}_type_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit c181a89a6db0ff8e8d10a572a0395dab688ae533
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/c181a89a.failed

The two functions are now identical, so consolidate them to
mlxsw_sp_nexthop_type_init().

	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Reviewed-by: Jiri Pirko <jiri@nvidia.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit c181a89a6db0ff8e8d10a572a0395dab688ae533)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index 2ec7cd201d01,bbe07d74f2e8..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -3886,27 -3893,11 +3886,33 @@@ static bool mlxsw_sp_nexthop4_ipip_type
  	       mlxsw_sp_netdev_ipip_type(mlxsw_sp, dev, p_ipipt);
  }
  
++<<<<<<< HEAD
 +static void mlxsw_sp_nexthop_type_fini(struct mlxsw_sp *mlxsw_sp,
 +				       struct mlxsw_sp_nexthop *nh)
 +{
 +	switch (nh->type) {
 +	case MLXSW_SP_NEXTHOP_TYPE_ETH:
 +		mlxsw_sp_nexthop_neigh_fini(mlxsw_sp, nh);
 +		mlxsw_sp_nexthop_rif_fini(nh);
 +		break;
 +	case MLXSW_SP_NEXTHOP_TYPE_IPIP:
 +		mlxsw_sp_nexthop_rif_fini(nh);
 +		mlxsw_sp_nexthop_ipip_fini(mlxsw_sp, nh);
 +		break;
 +	}
 +}
 +
 +static int mlxsw_sp_nexthop4_type_init(struct mlxsw_sp *mlxsw_sp,
 +				       struct mlxsw_sp_nexthop *nh,
 +				       struct fib_nh *fib_nh)
++=======
+ static int mlxsw_sp_nexthop_type_init(struct mlxsw_sp *mlxsw_sp,
+ 				      struct mlxsw_sp_nexthop *nh,
+ 				      const struct net_device *dev)
++>>>>>>> c181a89a6db0 (mlxsw: spectrum_router: Consolidate mlxsw_sp_nexthop{4, 6}_type_init())
  {
  	const struct mlxsw_sp_ipip_ops *ipip_ops;
 +	struct net_device *dev = fib_nh->nh_dev;
  	struct mlxsw_sp_ipip_entry *ipip_entry;
  	struct mlxsw_sp_rif *rif;
  	int err;
@@@ -3980,7 -3987,7 +4001,11 @@@ static int mlxsw_sp_nexthop4_init(struc
  	}
  	rcu_read_unlock();
  
++<<<<<<< HEAD
 +	err = mlxsw_sp_nexthop4_type_init(mlxsw_sp, nh, fib_nh);
++=======
+ 	err = mlxsw_sp_nexthop_type_init(mlxsw_sp, nh, dev);
++>>>>>>> c181a89a6db0 (mlxsw: spectrum_router: Consolidate mlxsw_sp_nexthop{4, 6}_type_init())
  	if (err)
  		goto err_nexthop_neigh_init;
  
@@@ -4016,7 -4023,7 +4041,11 @@@ static void mlxsw_sp_nexthop4_event(str
  
  	switch (event) {
  	case FIB_EVENT_NH_ADD:
++<<<<<<< HEAD
 +		mlxsw_sp_nexthop4_type_init(mlxsw_sp, nh, fib_nh);
++=======
+ 		mlxsw_sp_nexthop_type_init(mlxsw_sp, nh, fib_nh->fib_nh_dev);
++>>>>>>> c181a89a6db0 (mlxsw: spectrum_router: Consolidate mlxsw_sp_nexthop{4, 6}_type_init())
  		break;
  	case FIB_EVENT_NH_DEL:
  		mlxsw_sp_nexthop4_type_fini(mlxsw_sp, nh);
@@@ -5304,48 -5347,10 +5333,51 @@@ static bool mlxsw_sp_nexthop6_ipip_type
  					const struct fib6_info *rt,
  					enum mlxsw_sp_ipip_type *ret)
  {
 -	return rt->fib6_nh->fib_nh_dev &&
 -	       mlxsw_sp_netdev_ipip_type(mlxsw_sp, rt->fib6_nh->fib_nh_dev, ret);
 +	return rt->fib6_nh.nh_dev &&
 +	       mlxsw_sp_netdev_ipip_type(mlxsw_sp, rt->fib6_nh.nh_dev, ret);
  }
  
++<<<<<<< HEAD
 +static int mlxsw_sp_nexthop6_type_init(struct mlxsw_sp *mlxsw_sp,
 +				       struct mlxsw_sp_nexthop_group *nh_grp,
 +				       struct mlxsw_sp_nexthop *nh,
 +				       const struct fib6_info *rt)
 +{
 +	const struct mlxsw_sp_ipip_ops *ipip_ops;
 +	struct mlxsw_sp_ipip_entry *ipip_entry;
 +	struct net_device *dev = rt->fib6_nh.nh_dev;
 +	struct mlxsw_sp_rif *rif;
 +	int err;
 +
 +	ipip_entry = mlxsw_sp_ipip_entry_find_by_ol_dev(mlxsw_sp, dev);
 +	if (ipip_entry) {
 +		ipip_ops = mlxsw_sp->router->ipip_ops_arr[ipip_entry->ipipt];
 +		if (ipip_ops->can_offload(mlxsw_sp, dev)) {
 +			nh->type = MLXSW_SP_NEXTHOP_TYPE_IPIP;
 +			mlxsw_sp_nexthop_ipip_init(mlxsw_sp, nh, ipip_entry);
 +			return 0;
 +		}
 +	}
 +
 +	nh->type = MLXSW_SP_NEXTHOP_TYPE_ETH;
 +	rif = mlxsw_sp_rif_find_by_dev(mlxsw_sp, dev);
 +	if (!rif)
 +		return 0;
 +	mlxsw_sp_nexthop_rif_init(nh, rif);
 +
 +	err = mlxsw_sp_nexthop_neigh_init(mlxsw_sp, nh);
 +	if (err)
 +		goto err_nexthop_neigh_init;
 +
 +	return 0;
 +
 +err_nexthop_neigh_init:
 +	mlxsw_sp_nexthop_rif_fini(nh);
 +	return err;
 +}
 +
++=======
++>>>>>>> c181a89a6db0 (mlxsw: spectrum_router: Consolidate mlxsw_sp_nexthop{4, 6}_type_init())
  static void mlxsw_sp_nexthop6_type_fini(struct mlxsw_sp *mlxsw_sp,
  					struct mlxsw_sp_nexthop *nh)
  {
@@@ -5370,7 -5378,7 +5402,11 @@@ static int mlxsw_sp_nexthop6_init(struc
  		return 0;
  	nh->ifindex = dev->ifindex;
  
++<<<<<<< HEAD
 +	return mlxsw_sp_nexthop6_type_init(mlxsw_sp, nh_grp, nh, rt);
++=======
+ 	return mlxsw_sp_nexthop_type_init(mlxsw_sp, nh, dev);
++>>>>>>> c181a89a6db0 (mlxsw: spectrum_router: Consolidate mlxsw_sp_nexthop{4, 6}_type_init())
  }
  
  static void mlxsw_sp_nexthop6_fini(struct mlxsw_sp *mlxsw_sp,
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
