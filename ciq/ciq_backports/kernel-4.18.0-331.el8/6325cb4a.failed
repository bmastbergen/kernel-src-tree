powerpc/numa: remove unreachable topology workqueue code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Nathan Lynch <nathanl@linux.ibm.com>
commit 6325cb4a4ea8f4af8515b923650dd8f709694b44
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/6325cb4a.failed

Since vphn_enabled is always 0, we can remove the call to
topology_schedule_update() and remove the code which becomes
unreachable as a result.

	Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
	Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20200612051238.1007764-8-nathanl@linux.ibm.com
(cherry picked from commit 6325cb4a4ea8f4af8515b923650dd8f709694b44)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/mm/numa.c
diff --cc arch/powerpc/mm/numa.c
index 25c8877a4b95,8415481a7f13..000000000000
--- a/arch/powerpc/mm/numa.c
+++ b/arch/powerpc/mm/numa.c
@@@ -1546,64 -1414,6 +1546,67 @@@ int arch_update_cpu_topology(void
  	return numa_update_cpu_topology(true);
  }
  
++<<<<<<< HEAD
 +static void topology_work_fn(struct work_struct *work)
 +{
 +	rebuild_sched_domains();
 +}
 +static DECLARE_WORK(topology_work, topology_work_fn);
 +
 +static void topology_schedule_update(void)
 +{
 +	schedule_work(&topology_work);
 +}
 +
 +static void topology_timer_fn(struct timer_list *unused)
 +{
 +	if (prrn_enabled && cpumask_weight(&cpu_associativity_changes_mask))
 +		topology_schedule_update();
 +	else if (vphn_enabled) {
 +		if (update_cpu_associativity_changes_mask() > 0)
 +			topology_schedule_update();
 +		reset_topology_timer();
 +	}
 +}
 +static struct timer_list topology_timer;
 +
 +static void reset_topology_timer(void)
 +{
 +	if (vphn_enabled)
 +		mod_timer(&topology_timer, jiffies + topology_timer_secs * HZ);
 +}
 +
 +#ifdef CONFIG_SMP
 +
 +static int dt_update_callback(struct notifier_block *nb,
 +				unsigned long action, void *data)
 +{
 +	struct of_reconfig_data *update = data;
 +	int rc = NOTIFY_DONE;
 +
 +	switch (action) {
 +	case OF_RECONFIG_UPDATE_PROPERTY:
 +		if (!of_prop_cmp(update->dn->type, "cpu") &&
 +		    !of_prop_cmp(update->prop->name, "ibm,associativity")) {
 +			u32 core_id;
 +			of_property_read_u32(update->dn, "reg", &core_id);
 +			rc = dlpar_cpu_readd(core_id);
 +			rc = NOTIFY_OK;
 +		}
 +		break;
 +	}
 +
 +	return rc;
 +}
 +
 +static struct notifier_block dt_update_nb = {
 +	.notifier_call = dt_update_callback,
 +};
 +
 +#endif
 +
++=======
++>>>>>>> 6325cb4a4ea8 (powerpc/numa: remove unreachable topology workqueue code)
  /*
   * Start polling for associativity changes.
   */
@@@ -1746,12 -1439,6 +1749,15 @@@ static int topology_update_init(void
  {
  	start_topology_update();
  
++<<<<<<< HEAD
 +	if (vphn_enabled)
 +		topology_schedule_update();
 +
 +	if (!proc_create("powerpc/topology_updates", 0644, NULL, &topology_ops))
 +		return -ENOMEM;
 +
++=======
++>>>>>>> 6325cb4a4ea8 (powerpc/numa: remove unreachable topology workqueue code)
  	topology_inited = 1;
  	return 0;
  }
* Unmerged path arch/powerpc/mm/numa.c
