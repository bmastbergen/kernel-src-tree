virtio_pci_modern: __force cast the notify mapping

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Michael S. Tsirkin <mst@redhat.com>
commit 0f8a0b0b095fd9b301523c0f78686f5ac6fda564
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/0f8a0b0b.failed

When switching virtio_pci_modern to use a helper for mappings we lost an
__iomem tag. We should restore it.

However, virtio_pci_modern is playing tricks by hiding an iomem pointer
in a regular vq->priv pointer. Which is okay as long as it's
all contained within a single file, but we need to __force cast
the value otherwise we'll get sparse warnings.

	Reported-by: kernel test robot <lkp@intel.com>
Fixes: 7dca6c0ea96b ("virtio-pci library: switch to use vp_modern_map_vq_notify()")
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit 0f8a0b0b095fd9b301523c0f78686f5ac6fda564)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio_pci_modern.c
diff --cc drivers/virtio/virtio_pci_modern.c
index 54293ce7af32,30654d3a0b41..000000000000
--- a/drivers/virtio/virtio_pci_modern.c
+++ b/drivers/virtio/virtio_pci_modern.c
@@@ -580,7 -224,7 +580,11 @@@ static struct virtqueue *setup_vq(struc
  				virtqueue_get_avail_addr(vq),
  				virtqueue_get_used_addr(vq));
  
++<<<<<<< HEAD
 +	vq->priv = vp_modern_map_vq_notify(mdev, index);
++=======
+ 	vq->priv = (void __force *)vp_modern_map_vq_notify(mdev, index, NULL);
++>>>>>>> 0f8a0b0b095f (virtio_pci_modern: __force cast the notify mapping)
  	if (!vq->priv) {
  		err = -ENOMEM;
  		goto err_map_notify;
* Unmerged path drivers/virtio/virtio_pci_modern.c
