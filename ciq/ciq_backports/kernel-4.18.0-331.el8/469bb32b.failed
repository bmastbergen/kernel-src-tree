KVM: SVM: Skip SEV cache flush if no ASIDs have been used

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 469bb32b68d5a414fea293c17b532329c6dc9612
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/469bb32b.failed

Skip SEV's expensive WBINVD and DF_FLUSH if there are no SEV ASIDs
waiting to be reclaimed, e.g. if SEV was never used.  This "fixes" an
issue where the DF_FLUSH fails during hardware teardown if the original
SEV_INIT failed.  Ideally, SEV wouldn't be marked as enabled in KVM if
SEV_INIT fails, but that's a problem for another day.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20210422021125.3417167-16-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 469bb32b68d5a414fea293c17b532329c6dc9612)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/sev.c
diff --cc arch/x86/kvm/svm/sev.c
index 47046f928f5b,a9d8d6aafdb8..000000000000
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@@ -1736,13 -1893,17 +1735,21 @@@ out
  
  void sev_hardware_teardown(void)
  {
 -	if (!sev_enabled)
 +	if (!svm_sev_enabled())
  		return;
  
+ 	/* No need to take sev_bitmap_lock, all VMs have been destroyed. */
+ 	sev_flush_asids(0, max_sev_asid);
+ 
  	bitmap_free(sev_asid_bitmap);
  	bitmap_free(sev_reclaim_asid_bitmap);
  
++<<<<<<< HEAD
 +	sev_flush_asids();
++=======
+ 	misc_cg_set_capacity(MISC_CG_RES_SEV, 0);
+ 	misc_cg_set_capacity(MISC_CG_RES_SEV_ES, 0);
++>>>>>>> 469bb32b68d5 (KVM: SVM: Skip SEV cache flush if no ASIDs have been used)
  }
  
  int sev_cpu_init(struct svm_cpu_data *sd)
* Unmerged path arch/x86/kvm/svm/sev.c
