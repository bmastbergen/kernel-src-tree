cifs: fix dfs-links

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Ronnie Sahlberg <lsahlber@redhat.com>
commit abd4af47d3fb64157133bd35de25d39a21a31122
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/abd4af47.failed

This fixes a regression following dfs links that was introduced in the
patch series for the new mount api.

	Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
	Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit abd4af47d3fb64157133bd35de25d39a21a31122)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/connect.c
diff --cc fs/cifs/connect.c
index e113512460ff,76e4d8d8b3a6..000000000000
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@@ -4122,13 -2983,19 +4122,25 @@@ expand_dfs_referral(const unsigned int 
  			rc = PTR_ERR(mdata);
  			mdata = NULL;
  		} else {
++<<<<<<< HEAD
 +			cifs_cleanup_volume_info_contents(ctx);
 +			rc = cifs_setup_volume_info(ctx, mdata,
 +						    fake_devname, false);
++=======
+ 			/*
+ 			 * We can not clear out the whole structure since we
+ 			 * no longer have an explicit function to parse
+ 			 * a mount-string. Instead we need to clear out the
+ 			 * individual fields that are no longer valid.
+ 			 */
+ 			kfree(ctx->prepath);
+ 			ctx->prepath = NULL;
+ 			rc = cifs_setup_volume_info(ctx, mdata, fake_devname);
++>>>>>>> abd4af47d3fb (cifs: fix dfs-links)
  		}
  		kfree(fake_devname);
 -		kfree(cifs_sb->ctx->mount_options);
 -		cifs_sb->ctx->mount_options = mdata;
 +		kfree(cifs_sb->mountdata);
 +		cifs_sb->mountdata = mdata;
  	}
  	kfree(full_path);
  	return rc;
* Unmerged path fs/cifs/connect.c
