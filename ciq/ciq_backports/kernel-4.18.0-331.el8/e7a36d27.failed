s390/qeth: fix memory leak after failed TX Buffer allocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit e7a36d27f6b9f389e41d8189a8a08919c6835732
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/e7a36d27.failed

When qeth_alloc_qdio_queues() fails to allocate one of the buffers that
back an Output Queue, the 'out_freeoutqbufs' path will free all
previously allocated buffers for this queue. But it misses to free the
half-finished queue struct itself.

Move the buffer allocation into qeth_alloc_output_queue(), and deal with
such errors internally.

Fixes: 0da9581ddb0f ("qeth: exploit asynchronous delivery of storage blocks")
	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e7a36d27f6b9f389e41d8189a8a08919c6835732)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_main.c
diff --cc drivers/s390/net/qeth_core_main.c
index 1ff43ee133e3,f7bc0ca6909b..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -2699,13 -2701,7 +2712,17 @@@ static int qeth_alloc_qdio_queues(struc
  		timer_setup(&queue->timer, qeth_tx_completion_timer, 0);
  		queue->coalesce_usecs = QETH_TX_COALESCE_USECS;
  		queue->max_coalesced_frames = QETH_TX_MAX_COALESCED_FRAMES;
++<<<<<<< HEAD
 +
 +		/* give outbound qeth_qdio_buffers their qdio_buffers */
 +		for (j = 0; j < QDIO_MAX_BUFFERS_PER_Q; ++j) {
 +			WARN_ON(queue->bufs[j]);
 +			if (qeth_init_qdio_out_buf(queue, j))
 +				goto out_freeoutqbufs;
 +		}
++=======
+ 		queue->priority = QETH_QIB_PQUE_PRIO_DEFAULT;
++>>>>>>> e7a36d27f6b9 (s390/qeth: fix memory leak after failed TX Buffer allocation)
  	}
  
  	/* completion */
* Unmerged path drivers/s390/net/qeth_core_main.c
