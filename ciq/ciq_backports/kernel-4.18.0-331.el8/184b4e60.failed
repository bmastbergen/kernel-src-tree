gfs2: Fix end-of-file handling in gfs2_page_mkwrite

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 184b4e60853dfeef36b96948ab8fedb7e271063c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/184b4e60.failed

When the filesystem block size is smaller than the page size, the last
page may contain blocks that lie entirely beyond the end of the file.
Make sure to only allocate blocks that lie at least partially in the
file.  Allocating blocks beyond that isn't useful, and what's more, they
will not be zeroed out and may end up containing random data.

With that change in place, make sure we'll still always unstuff stuffed
inodes: iomap_writepage and iomap_writepages currently can't handle
stuffed files.

In addition, simplify and move the end-of-file check further to the top
in gfs2_page_mkwrite to avoid weird side effects like unstuffing when
we're not.

Fixes xfstest generic/263.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 184b4e60853dfeef36b96948ab8fedb7e271063c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/file.c
diff --cc fs/gfs2/file.c
index e69af279b7fd,92524a946d03..000000000000
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@@ -421,7 -432,9 +421,13 @@@ static vm_fault_t gfs2_page_mkwrite(str
  
  	sb_start_pagefault(inode->i_sb);
  
++<<<<<<< HEAD
 +	gfs2_size_hint(vmf->vma->vm_file, pos, PAGE_SIZE);
++=======
+ 	ret = gfs2_rsqa_alloc(ip);
+ 	if (ret)
+ 		goto out;
++>>>>>>> 184b4e60853d (gfs2: Fix end-of-file handling in gfs2_page_mkwrite)
  
  	gfs2_holder_init(ip->i_gl, LM_ST_EXCLUSIVE, 0, &gh);
  	ret = gfs2_glock_nq(&gh);
* Unmerged path fs/gfs2/file.c
