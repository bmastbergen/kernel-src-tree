iomap: Permit pages without an iop to enter writeback

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 8e1bcef8e18d0fec4afe527c074bb1fd6c2b140c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/8e1bcef8.failed

Create an iop in the writeback path if one doesn't exist.  This allows us
to avoid creating the iop in some cases.  We'll initially do that for pages
with inline data, but it can be extended to pages which are entirely within
an extent.  It also allows for an iop to be removed from pages in the
future (eg page split).

Co-developed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
	Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <djwong@kernel.org>
	Signed-off-by: Darrick J. Wong <djwong@kernel.org>
(cherry picked from commit 8e1bcef8e18d0fec4afe527c074bb1fd6c2b140c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/buffered-io.c
diff --cc fs/iomap/buffered-io.c
index 0672e30b54c6,ad976634d56b..000000000000
--- a/fs/iomap/buffered-io.c
+++ b/fs/iomap/buffered-io.c
@@@ -1406,8 -1311,7 +1406,12 @@@ iomap_writepage_map(struct iomap_writep
  	int error = 0, count = 0, i;
  	LIST_HEAD(submit_list);
  
++<<<<<<< HEAD
 +	WARN_ON_ONCE(i_blocksize(inode) < PAGE_SIZE && !iop);
 +	WARN_ON_ONCE(iop && atomic_read(&iop->write_count) != 0);
++=======
+ 	WARN_ON_ONCE(iop && atomic_read(&iop->write_bytes_pending) != 0);
++>>>>>>> 8e1bcef8e18d (iomap: Permit pages without an iop to enter writeback)
  
  	/*
  	 * Walk through the page to find areas to write back. If we run off the
* Unmerged path fs/iomap/buffered-io.c
