net: qrtr: fix null-ptr-deref in qrtr_ns_remove

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Qinglang Miao <miaoqinglang@huawei.com>
commit 4beb17e553b49c3dd74505c9f361e756aaae653e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/4beb17e5.failed

A null-ptr-deref bug is reported by Hulk Robot like this:
--------------
KASAN: null-ptr-deref in range [0x0000000000000128-0x000000000000012f]
Call Trace:
qrtr_ns_remove+0x22/0x40 [ns]
qrtr_proto_fini+0xa/0x31 [qrtr]
__x64_sys_delete_module+0x337/0x4e0
do_syscall_64+0x34/0x80
entry_SYSCALL_64_after_hwframe+0x44/0xa9
RIP: 0033:0x468ded
--------------

When qrtr_ns_init fails in qrtr_proto_init, qrtr_ns_remove which would
be called later on would raise a null-ptr-deref because qrtr_ns.workqueue
has been destroyed.

Fix it by making qrtr_ns_init have a return value and adding a check in
qrtr_proto_init.

	Reported-by: Hulk Robot <hulkci@huawei.com>
	Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4beb17e553b49c3dd74505c9f361e756aaae653e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/qrtr/ns.c
#	net/qrtr/qrtr.c
#	net/qrtr/qrtr.h
diff --cc net/qrtr/qrtr.c
index afd123eaed8e,b34358282f37..000000000000
--- a/net/qrtr/qrtr.c
+++ b/net/qrtr/qrtr.c
@@@ -1331,17 -1287,19 +1331,27 @@@ static int __init qrtr_proto_init(void
  		return rc;
  
  	rc = sock_register(&qrtr_family);
- 	if (rc) {
- 		proto_unregister(&qrtr_proto);
- 		return rc;
- 	}
+ 	if (rc)
+ 		goto err_proto;
  
++<<<<<<< HEAD
 +	rc = rtnl_register_module(THIS_MODULE, PF_QIPCRTR, RTM_NEWADDR, qrtr_addr_doit, NULL, 0);
 +	if (rc) {
 +		sock_unregister(qrtr_family.family);
 +		proto_unregister(&qrtr_proto);
 +	}
++=======
+ 	rc = qrtr_ns_init();
+ 	if (rc)
+ 		goto err_sock;
++>>>>>>> 4beb17e553b4 (net: qrtr: fix null-ptr-deref in qrtr_ns_remove)
+ 
+ 	return 0;
  
+ err_sock:
+ 	sock_unregister(qrtr_family.family);
+ err_proto:
+ 	proto_unregister(&qrtr_proto);
  	return rc;
  }
  postcore_initcall(qrtr_proto_init);
diff --cc net/qrtr/qrtr.h
index b81e6953c04b,3f2d28696062..000000000000
--- a/net/qrtr/qrtr.h
+++ b/net/qrtr/qrtr.h
@@@ -29,4 -29,8 +29,11 @@@ void qrtr_endpoint_unregister(struct qr
  
  int qrtr_endpoint_post(struct qrtr_endpoint *ep, const void *data, size_t len);
  
++<<<<<<< HEAD
++=======
+ int qrtr_ns_init(void);
+ 
+ void qrtr_ns_remove(void);
+ 
++>>>>>>> 4beb17e553b4 (net: qrtr: fix null-ptr-deref in qrtr_ns_remove)
  #endif
* Unmerged path net/qrtr/ns.c
* Unmerged path net/qrtr/ns.c
* Unmerged path net/qrtr/qrtr.c
* Unmerged path net/qrtr/qrtr.h
