s390/qeth: pass proto to qeth_l3_get_cast_type()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit c61dff3c1ef77f46e4aa605f71c68089b02b3d78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/c61dff3c.failed

qeth_l3_hard_start_xmit() already determined the skb's proto. Avoid
doing so a second time when it calls qeth_l3_get_cast_type().

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Acked-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit c61dff3c1ef77f46e4aa605f71c68089b02b3d78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_l3_main.c
diff --cc drivers/s390/net/qeth_l3_main.c
index 46eb2a809416,4921afb51a1c..000000000000
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@@ -1828,11 -1828,12 +1827,18 @@@ static netdev_features_t qeth_l3_osa_fe
  }
  
  static u16 qeth_l3_iqd_select_queue(struct net_device *dev, struct sk_buff *skb,
 -				    struct net_device *sb_dev)
 +				    struct net_device *sb_dev,
 +				    select_queue_fallback_t fallback)
  {
++<<<<<<< HEAD
 +	return qeth_iqd_select_queue(dev, skb, qeth_l3_get_cast_type(skb),
 +				     sb_dev, fallback);
++=======
+ 	__be16 proto = vlan_get_protocol(skb);
+ 
+ 	return qeth_iqd_select_queue(dev, skb,
+ 				     qeth_l3_get_cast_type(skb, proto), sb_dev);
++>>>>>>> c61dff3c1ef7 (s390/qeth: pass proto to qeth_l3_get_cast_type())
  }
  
  static u16 qeth_l3_osa_select_queue(struct net_device *dev, struct sk_buff *skb,
* Unmerged path drivers/s390/net/qeth_l3_main.c
