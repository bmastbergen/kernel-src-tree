s390/qeth: de-magic the QIB parm area

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit 72d5e8504e3b2b83a94403b0bbe3070b70538bb9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/72d5e850.failed

Use a proper struct, and only program the QIB extensions for devices
where they are supported.

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 72d5e8504e3b2b83a94403b0bbe3070b70538bb9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_main.c
diff --cc drivers/s390/net/qeth_core_main.c
index d384629799fe,81f02a70680e..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -5043,14 -5025,13 +5039,21 @@@ static int qeth_qdio_establish(struct q
  
  	QETH_CARD_TEXT(card, 2, "qdioest");
  
++<<<<<<< HEAD
 +	qib_param_field = kzalloc(FIELD_SIZEOF(struct qib, parm), GFP_KERNEL);
 +	if (!qib_param_field) {
 +		rc =  -ENOMEM;
 +		goto out_free_nothing;
 +	}
++=======
+ 	if (!IS_IQD(card) && !IS_VM_NIC(card)) {
+ 		qib_parms = kzalloc(sizeof_field(struct qib, parm), GFP_KERNEL);
+ 		if (!qib_parms)
+ 			return -ENOMEM;
++>>>>>>> 72d5e8504e3b (s390/qeth: de-magic the QIB parm area)
  
- 	qeth_create_qib_param_field(card, qib_param_field);
- 	qeth_create_qib_param_field_blkt(card, qib_param_field);
+ 		qeth_fill_qib_parms(card, qib_parms);
+ 	}
  
  	in_sbal_ptrs[0] = card->qdio.in_q->qdio_bufs;
  	if (card->options.cq == QETH_CQ_ENABLED)
diff --git a/drivers/s390/net/qeth_core.h b/drivers/s390/net/qeth_core.h
index 4550380cb5d0..39bb20bf0a07 100644
--- a/drivers/s390/net/qeth_core.h
+++ b/drivers/s390/net/qeth_core.h
@@ -278,6 +278,17 @@ struct qeth_hdr {
 	} hdr;
 } __attribute__ ((packed));
 
+struct qeth_qib_parms {
+	char pcit_magic[4];
+	u32 pcit_a;
+	u32 pcit_b;
+	u32 pcit_c;
+	char blkt_magic[4];
+	u32 blkt_total;
+	u32 blkt_inter_packet;
+	u32 blkt_inter_packet_jumbo;
+};
+
 /*TCP Segmentation Offload header*/
 struct qeth_hdr_ext_tso {
 	__u16 hdr_tot_len;
* Unmerged path drivers/s390/net/qeth_core_main.c
