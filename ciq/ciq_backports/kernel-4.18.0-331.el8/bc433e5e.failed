vdpa_sim: cleanup kiovs in vdpasim_free()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Stefano Garzarella <sgarzare@redhat.com>
commit bc433e5e0d42d7892dcefb65686c9f1df126923a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/bc433e5e.failed

vringh_getdesc_iotlb() allocates memory to store the kvec, that
is freed with vringh_kiov_cleanup().

vringh_getdesc_iotlb() is able to reuse a kvec previously allocated,
so in order to avoid to allocate the kvec for each request, we are
not calling vringh_kiov_cleanup() when we finished to handle a
request, but we should call it when we free the entire device.

	Acked-by: Jason Wang <jasowang@redhat.com>
	Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
Link: https://lore.kernel.org/r/20210315163450.254396-8-sgarzare@redhat.com
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit bc433e5e0d42d7892dcefb65686c9f1df126923a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vdpa/vdpa_sim/vdpa_sim.c
diff --cc drivers/vdpa/vdpa_sim/vdpa_sim.c
index 052f3eda0007,14dc2d3d983e..000000000000
--- a/drivers/vdpa/vdpa_sim/vdpa_sim.c
+++ b/drivers/vdpa/vdpa_sim/vdpa_sim.c
@@@ -715,8 -562,17 +715,20 @@@ static int vdpasim_dma_unmap(struct vdp
  static void vdpasim_free(struct vdpa_device *vdpa)
  {
  	struct vdpasim *vdpasim = vdpa_to_sim(vdpa);
+ 	int i;
  
  	cancel_work_sync(&vdpasim->work);
++<<<<<<< HEAD
++=======
+ 
+ 	for (i = 0; i < vdpasim->dev_attr.nvqs; i++) {
+ 		vringh_kiov_cleanup(&vdpasim->vqs[i].out_iov);
+ 		vringh_kiov_cleanup(&vdpasim->vqs[i].in_iov);
+ 	}
+ 
+ 	put_iova_domain(&vdpasim->iova);
+ 	iova_cache_put();
++>>>>>>> bc433e5e0d42 (vdpa_sim: cleanup kiovs in vdpasim_free())
  	kvfree(vdpasim->buffer);
  	if (vdpasim->iommu)
  		vhost_iotlb_free(vdpasim->iommu);
* Unmerged path drivers/vdpa/vdpa_sim/vdpa_sim.c
