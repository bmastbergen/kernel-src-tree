udp: fix possible user after free in error handler

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit 92b95364235b6441a36861ff0ca4541a13351d60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/92b95364.failed

Similar to the previous commit, this addresses the same issue for
ipv4: use a single fetch operation and use the correct rcu
annotation.

Fixes: e7cc082455cb ("udp: Support for error handlers of tunnels with arbitrary destination port")
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Acked-by: Stefano Brivio <sbrivio@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 92b95364235b6441a36861ff0ca4541a13351d60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/udp.c
diff --cc net/ipv4/udp.c
index 792b00229902,372fdc5381a9..000000000000
--- a/net/ipv4/udp.c
+++ b/net/ipv4/udp.c
@@@ -601,11 -553,27 +601,29 @@@ void udp_encap_enable(void
  }
  EXPORT_SYMBOL(udp_encap_enable);
  
 -/* Handler for tunnels with arbitrary destination ports: no socket lookup, go
 - * through error handlers in encapsulations looking for a match.
 - */
 -static int __udp4_lib_err_encap_no_sk(struct sk_buff *skb, u32 info)
 +void udp_encap_disable(void)
  {
++<<<<<<< HEAD
 +	static_branch_dec(&udp_encap_needed_key);
++=======
+ 	int i;
+ 
+ 	for (i = 0; i < MAX_IPTUN_ENCAP_OPS; i++) {
+ 		int (*handler)(struct sk_buff *skb, u32 info);
+ 		const struct ip_tunnel_encap_ops *encap;
+ 
+ 		encap = rcu_dereference(iptun_encaps[i]);
+ 		if (!encap)
+ 			continue;
+ 		handler = encap->err_handler;
+ 		if (handler && !handler(skb, info))
+ 			return 0;
+ 	}
+ 
+ 	return -ENOENT;
++>>>>>>> 92b95364235b (udp: fix possible user after free in error handler)
  }
 +EXPORT_SYMBOL(udp_encap_disable);
  
  /* Try to match ICMP errors to UDP tunnels by looking up a socket without
   * reversing source and destination port: this will match tunnels that force the
* Unmerged path net/ipv4/udp.c
