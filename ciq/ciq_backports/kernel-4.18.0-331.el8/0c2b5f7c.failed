cifs: fix rsize/wsize to be negotiated values

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Steve French <stfrench@microsoft.com>
commit 0c2b5f7ce50c24099e8ed7d35936e89fe9ca26ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/0c2b5f7c.failed

Also make sure these are displayed in /proc/mounts

	Signed-off-by: Steve French <stfrench@microsoft.com>
	Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
(cherry picked from commit 0c2b5f7ce50c24099e8ed7d35936e89fe9ca26ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/cifsfs.c
#	fs/cifs/connect.c
diff --cc fs/cifs/cifsfs.c
index e1f4772cf344,4c9e12b46810..000000000000
--- a/fs/cifs/cifsfs.c
+++ b/fs/cifs/cifsfs.c
@@@ -624,9 -621,9 +624,15 @@@ cifs_show_options(struct seq_file *s, s
  			   from_kgid_munged(&init_user_ns,
  					    cifs_sb->ctx->backupgid));
  
++<<<<<<< HEAD
 +	seq_printf(s, ",rsize=%u", cifs_sb->rsize);
 +	seq_printf(s, ",wsize=%u", cifs_sb->wsize);
 +	seq_printf(s, ",bsize=%u", cifs_sb->bsize);
++=======
+ 	seq_printf(s, ",rsize=%u", cifs_sb->ctx->rsize);
+ 	seq_printf(s, ",wsize=%u", cifs_sb->ctx->wsize);
+ 	seq_printf(s, ",bsize=%u", cifs_sb->ctx->bsize);
++>>>>>>> 0c2b5f7ce50c (cifs: fix rsize/wsize to be negotiated values)
  	if (tcon->ses->server->min_offload)
  		seq_printf(s, ",esize=%u", tcon->ses->server->min_offload);
  	seq_printf(s, ",echo_interval=%lu",
diff --cc fs/cifs/connect.c
index fad8e79e9678,64a41b32fbb1..000000000000
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@@ -4013,8 -2857,17 +4013,22 @@@ static int mount_get_conns(struct smb3_
  		}
  	}
  
++<<<<<<< HEAD
 +	cifs_sb->wsize = server->ops->negotiate_wsize(tcon, ctx);
 +	cifs_sb->rsize = server->ops->negotiate_rsize(tcon, ctx);
++=======
+ 	/*
+ 	 * Clamp the rsize/wsize mount arguments if they are too big for the server
+ 	 * and set the rsize/wsize to the negotiated values if not passed in by
+ 	 * the user on mount
+ 	 */
+ 	if ((cifs_sb->ctx->wsize == 0) ||
+ 	    (cifs_sb->ctx->wsize > server->ops->negotiate_wsize(tcon, ctx)))
+ 		cifs_sb->ctx->wsize = server->ops->negotiate_wsize(tcon, ctx);
+ 	if ((cifs_sb->ctx->rsize == 0) ||
+ 	    (cifs_sb->ctx->rsize > server->ops->negotiate_rsize(tcon, ctx)))
+ 		cifs_sb->ctx->rsize = server->ops->negotiate_rsize(tcon, ctx);
++>>>>>>> 0c2b5f7ce50c (cifs: fix rsize/wsize to be negotiated values)
  
  	return 0;
  }
* Unmerged path fs/cifs/cifsfs.c
* Unmerged path fs/cifs/connect.c
