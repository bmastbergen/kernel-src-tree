KVM: SVM: Append "_enabled" to module-scoped SEV/SEV-ES control variables

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 8d364a0792dd95d10183f25d277f4a7dec159dad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/8d364a07.failed

Rename sev and sev_es to sev_enabled and sev_es_enabled respectively to
better align with other KVM terminology, and to avoid pseudo-shadowing
when the variables are moved to sev.c in a future patch ('sev' is often
used for local struct kvm_sev_info pointers.

No functional change intended.

	Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
	Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>
	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20210422021125.3417167-8-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 8d364a0792dd95d10183f25d277f4a7dec159dad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/sev.c
diff --cc arch/x86/kvm/svm/sev.c
index da2ae8d080f3,a6041000ed9c..000000000000
--- a/arch/x86/kvm/svm/sev.c
+++ b/arch/x86/kvm/svm/sev.c
@@@ -28,6 -29,29 +28,32 @@@
  
  #define __ex(x) __kvm_handle_fault_on_reboot(x)
  
++<<<<<<< HEAD
++=======
+ #ifndef CONFIG_KVM_AMD_SEV
+ /*
+  * When this config is not defined, SEV feature is not supported and APIs in
+  * this file are not used but this file still gets compiled into the KVM AMD
+  * module.
+  *
+  * We will not have MISC_CG_RES_SEV and MISC_CG_RES_SEV_ES entries in the enum
+  * misc_res_type {} defined in linux/misc_cgroup.h.
+  *
+  * Below macros allow compilation to succeed.
+  */
+ #define MISC_CG_RES_SEV MISC_CG_RES_TYPES
+ #define MISC_CG_RES_SEV_ES MISC_CG_RES_TYPES
+ #endif
+ 
+ /* enable/disable SEV support */
+ static bool sev_enabled = IS_ENABLED(CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT);
+ module_param_named(sev, sev_enabled, bool, 0444);
+ 
+ /* enable/disable SEV-ES support */
+ static bool sev_es_enabled = IS_ENABLED(CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT);
+ module_param_named(sev_es, sev_es_enabled, bool, 0444);
+ 
++>>>>>>> 8d364a0792dd (KVM: SVM: Append "_enabled" to module-scoped SEV/SEV-ES control variables)
  static u8 sev_enc_bit;
  static int sev_flush_asids(void);
  static DECLARE_RWSEM(sev_deactivate_lock);
@@@ -1451,9 -1506,15 +1477,9 @@@ int svm_mem_enc_op(struct kvm *kvm, voi
  
  	mutex_lock(&kvm->lock);
  
 -	/* enc_context_owner handles all memory enc operations */
 -	if (is_mirroring_enc_context(kvm)) {
 -		r = -EINVAL;
 -		goto out;
 -	}
 -
  	switch (sev_cmd.id) {
  	case KVM_SEV_ES_INIT:
- 		if (!sev_es) {
+ 		if (!sev_es_enabled) {
  			r = -ENOTTY;
  			goto out;
  		}
@@@ -1681,6 -1821,9 +1707,12 @@@ void __init sev_hardware_setup(void
  	bool sev_es_supported = false;
  	bool sev_supported = false;
  
++<<<<<<< HEAD
++=======
+ 	if (!IS_ENABLED(CONFIG_KVM_AMD_SEV) || !sev_enabled || !npt_enabled)
+ 		goto out;
+ 
++>>>>>>> 8d364a0792dd (KVM: SVM: Append "_enabled" to module-scoped SEV/SEV-ES control variables)
  	/* Does the CPU support SEV? */
  	if (!boot_cpu_has(X86_FEATURE_SEV))
  		goto out;
* Unmerged path arch/x86/kvm/svm/sev.c
