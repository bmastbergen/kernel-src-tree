x86/fpu: Simplify kernel_fpu_begin()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 6d79d86f9600510e08ad45c72b9d7e664e439e62
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/6d79d86f.failed

Merge two helpers into the main function, remove a pointless local
variable and flatten a conditional.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Nicolai Stange <nstange@suse.de>
	Cc: Rik van Riel <riel@surriel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: x86-ml <x86@kernel.org>
Link: https://lkml.kernel.org/r/20190604071524.12835-3-hch@lst.de
(cherry picked from commit 6d79d86f9600510e08ad45c72b9d7e664e439e62)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/core.c
diff --cc arch/x86/kernel/fpu/core.c
index 00fba2554663,3f92cfad88f0..000000000000
--- a/arch/x86/kernel/fpu/core.c
+++ b/arch/x86/kernel/fpu/core.c
@@@ -87,33 -82,6 +81,36 @@@ bool irq_fpu_usable(void
  }
  EXPORT_SYMBOL(irq_fpu_usable);
  
++<<<<<<< HEAD
 +static void __kernel_fpu_begin(void)
 +{
 +	struct fpu *fpu = &current->thread.fpu;
 +
 +	WARN_ON_FPU(!irq_fpu_usable());
 +
 +	kernel_fpu_disable();
 +
 +	if (current->mm) {
 +		if (!test_thread_flag(TIF_NEED_FPU_LOAD)) {
 +			set_thread_flag(TIF_NEED_FPU_LOAD);
 +			/*
 +			 * Ignore return value -- we don't care if reg state
 +			 * is clobbered.
 +			 */
 +			copy_fpregs_to_fpstate(fpu);
 +		}
 +	}
 +	__cpu_invalidate_fpregs_state();
 +
 +	if (boot_cpu_has(X86_FEATURE_XMM))
 +		ldmxcsr(MXCSR_DEFAULT);
 +
 +	if (boot_cpu_has(X86_FEATURE_FPU))
 +		asm volatile ("fninit");
 +}
 +
++=======
++>>>>>>> 6d79d86f9600 (x86/fpu: Simplify kernel_fpu_begin())
  void kernel_fpu_begin(void)
  {
  	preempt_disable();
* Unmerged path arch/x86/kernel/fpu/core.c
