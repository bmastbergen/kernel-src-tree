x86/setup: Remove CONFIG_X86_RESERVE_LOW and reservelow= options

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Mike Rapoport <rppt@linux.ibm.com>
commit 1a6a9044b96729abacede172d7591c714a5b81d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/1a6a9044.failed

The CONFIG_X86_RESERVE_LOW build time and reservelow= command line option
allowed to control the amount of memory under 1M that would be reserved at
boot to avoid using memory that can be potentially clobbered by BIOS.

Since the entire range under 1M is always reserved there is no need for
these options anymore and they can be removed.

	Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/20210601075354.5149-3-rppt@kernel.org
(cherry picked from commit 1a6a9044b96729abacede172d7591c714a5b81d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
#	arch/x86/kernel/setup.c
diff --cc arch/x86/Kconfig
index c1d17062d90c,86dae426798b..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -1701,35 -1693,6 +1701,38 @@@ config X86_BOOTPARAM_MEMORY_CORRUPTION_
  	  Set whether the default state of memory_corruption_check is
  	  on or off.
  
++<<<<<<< HEAD
 +config X86_RESERVE_LOW
 +	int "Amount of low memory, in kilobytes, to reserve for the BIOS"
 +	default 64
 +	range 4 640
 +	---help---
 +	  Specify the amount of low memory to reserve for the BIOS.
 +
 +	  The first page contains BIOS data structures that the kernel
 +	  must not use, so that page must always be reserved.
 +
 +	  By default we reserve the first 64K of physical RAM, as a
 +	  number of BIOSes are known to corrupt that memory range
 +	  during events such as suspend/resume or monitor cable
 +	  insertion, so it must not be used by the kernel.
 +
 +	  You can set this to 4 if you are absolutely sure that you
 +	  trust the BIOS to get all its memory reservations and usages
 +	  right.  If you know your BIOS have problems beyond the
 +	  default 64K area, you can set this to 640 to avoid using the
 +	  entire low memory range.
 +
 +	  If you have doubts about the BIOS (e.g. suspend/resume does
 +	  not work or there's kernel crashes after certain hardware
 +	  hotplug events) then you might want to enable
 +	  X86_CHECK_BIOS_CORRUPTION=y to allow the kernel to check
 +	  typical corruption patterns.
 +
 +	  Leave this to the default value of 64 if you are unsure.
 +
++=======
++>>>>>>> 1a6a9044b967 (x86/setup: Remove CONFIG_X86_RESERVE_LOW and reservelow= options)
  config MATH_EMULATION
  	bool
  	depends on MODIFY_LDT_SYSCALL
diff --cc arch/x86/kernel/setup.c
index 3db4bd3fa6a2,7638ac6c3d80..000000000000
--- a/arch/x86/kernel/setup.c
+++ b/arch/x86/kernel/setup.c
@@@ -799,72 -695,40 +799,76 @@@ static void __init e820_add_kernel_rang
  	e820__range_add(start, size, E820_TYPE_RAM);
  }
  
++<<<<<<< HEAD
 +static unsigned reserve_low = CONFIG_X86_RESERVE_LOW << 10;
 +
 +static int __init parse_reservelow(char *p)
 +{
 +	unsigned long long size;
 +
 +	if (!p)
 +		return -EINVAL;
 +
 +	size = memparse(p, &p);
 +
 +	if (size < 4096)
 +		size = 4096;
 +
 +	if (size > 640*1024)
 +		size = 640*1024;
 +
 +	reserve_low = size;
 +
 +	return 0;
 +}
 +
 +early_param("reservelow", parse_reservelow);
 +
 +static void __init trim_low_memory_range(void)
++=======
+ static void __init early_reserve_memory(void)
++>>>>>>> 1a6a9044b967 (x86/setup: Remove CONFIG_X86_RESERVE_LOW and reservelow= options)
  {
 -	/*
 -	 * Reserve the memory occupied by the kernel between _text and
 -	 * __end_of_kernel_reserve symbols. Any kernel sections after the
 -	 * __end_of_kernel_reserve symbol must be explicitly reserved with a
 -	 * separate memblock_reserve() or they will be discarded.
 -	 */
 -	memblock_reserve(__pa_symbol(_text),
 -			 (unsigned long)__end_of_kernel_reserve - (unsigned long)_text);
 +	memblock_reserve(0, ALIGN(reserve_low, PAGE_SIZE));
 +}
  
 -	/*
 -	 * The first 4Kb of memory is a BIOS owned area, but generally it is
 -	 * not listed as such in the E820 table.
 -	 *
 -	 * Reserve the first 64K of memory since some BIOSes are known to
 -	 * corrupt low memory. After the real mode trampoline is allocated the
 -	 * rest of the memory below 640k is reserved.
 -	 *
 -	 * In addition, make sure page 0 is always reserved because on
 -	 * systems with L1TF its contents can be leaked to user processes.
 -	 */
 -	memblock_reserve(0, SZ_64K);
 +static void rh_check_supported(void)
 +{
 +	bool guest;
  
 -	early_reserve_initrd();
 +	guest = (x86_hyper_type != X86_HYPER_NATIVE || boot_cpu_has(X86_FEATURE_HYPERVISOR));
  
 -	if (efi_enabled(EFI_BOOT))
 -		efi_memblock_x86_reserve_range();
 +	/* RHEL supports single cpu on guests only */
 +	if (((boot_cpu_data.x86_max_cores * smp_num_siblings) == 1) &&
 +	    !guest && is_kdump_kernel()) {
 +		pr_crit("Detected single cpu native boot.\n");
 +		pr_crit("Important:  In Red Hat Enterprise Linux 8, single threaded, single CPU 64-bit physical systems are unsupported by Red Hat. Please contact your Red Hat support representative for a list of certified and supported systems.");
 +	}
  
 -	memblock_x86_reserve_range_setup_data();
 +	/*
 +	 * If the RHEL kernel does not support this hardware, the kernel will
 +	 * attempt to boot, but no support is provided for this hardware
 +	 */
 +	switch (boot_cpu_data.x86_vendor) {
 +	case X86_VENDOR_AMD:
 +	case X86_VENDOR_INTEL:
 +		break;
 +	default:
 +		pr_crit("Detected processor %s %s\n",
 +			boot_cpu_data.x86_vendor_id,
 +			boot_cpu_data.x86_model_id);
 +		mark_hardware_unsupported("Processor");
 +		break;
 +	}
  
 -	reserve_ibft_region();
 -	reserve_bios_regions();
 -	trim_snb_memory();
 +	/*
 +	 * Due to the complexity of x86 lapic & ioapic enumeration, and PCI IRQ
 +	 * routing, ACPI is required for x86.  acpi=off is a valid debug kernel
 +	 * parameter, so just print out a loud warning in case something
 +	 * goes wrong (which is most of the time).
 +	 */
 +	if (acpi_disabled && !guest)
 +		pr_crit("ACPI has been disabled or is not available on this hardware.  This may result in a single cpu boot, incorrect PCI IRQ routing, or boot failure.\n");
  }
  
  /*
diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index 7a25961823d6..b96468b570d9 100644
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@ -4387,11 +4387,6 @@
 			Reserves a hole at the top of the kernel virtual
 			address space.
 
-	reservelow=	[X86]
-			Format: nn[K]
-			Set the amount of memory to reserve for BIOS at
-			the bottom of the address space.
-
 	reset_devices	[KNL] Force drivers to reset the underlying device
 			during initialization.
 
* Unmerged path arch/x86/Kconfig
* Unmerged path arch/x86/kernel/setup.c
