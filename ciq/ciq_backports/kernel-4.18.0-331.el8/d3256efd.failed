veth: allow enabling NAPI even without XDP

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit d3256efd8e8b234a6251e4d4580bd2c3c31fdc4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/d3256efd.failed

Currently the veth device has the GRO feature bit set, even if
no GRO aggregation is possible with the default configuration,
as the veth device does not hook into the GRO engine.

Flipping the GRO feature bit from user-space is a no-op, unless
XDP is enabled. In such scenario GRO could actually take place, but
TSO is forced to off on the peer device.

This change allow user-space to really control the GRO feature, with
no need for an XDP program.

The GRO feature bit is now cleared by default - so that there are no
user-visible behavior changes with the default configuration.

When the GRO bit is set, the per-queue NAPI instances are initialized
and registered. On xmit, when napi instances are available, we try
to use them.

Some additional checks are in place to ensure we initialize/delete NAPIs
only when needed in case of overlapping XDP and GRO configuration
changes.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d3256efd8e8b234a6251e4d4580bd2c3c31fdc4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/veth.c
diff --cc drivers/net/veth.c
index c00053f98ad5,c95c67aa52d2..000000000000
--- a/drivers/net/veth.c
+++ b/drivers/net/veth.c
@@@ -304,15 -323,9 +309,21 @@@ static netdev_tx_t veth_xmit(struct sk_
  	}
  
  	skb_tx_timestamp(skb);
++<<<<<<< HEAD
 +	if (likely(veth_forward_skb(rcv, skb, rq, rcv_xdp) == NET_RX_SUCCESS)) {
 +		if (!rcv_xdp) {
 +			struct pcpu_lstats *stats = this_cpu_ptr(dev->lstats);
 +
 +			u64_stats_update_begin(&stats->syncp);
 +			stats->bytes += length;
 +			stats->packets++;
 +			u64_stats_update_end(&stats->syncp);
 +		}
++=======
+ 	if (likely(veth_forward_skb(rcv, skb, rq, use_napi) == NET_RX_SUCCESS)) {
+ 		if (!use_napi)
+ 			dev_lstats_add(dev, length);
++>>>>>>> d3256efd8e8b (veth: allow enabling NAPI even without XDP)
  	} else {
  drop:
  		atomic64_inc(&priv->dropped);
* Unmerged path drivers/net/veth.c
