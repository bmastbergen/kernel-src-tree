net/xfrm: Add inner_ipproto into sec_path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Huy Nguyen <huyn@nvidia.com>
commit fa4535238fb5f306f95de89371a993057b32b2a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/fa453523.failed

The inner_ipproto saves the inner IP protocol of the plain
text packet. This allows vendor's IPsec feature making offload
decision at skb's features_check and configuring hardware at
ndo_start_xmit.

For example, ConnectX6-DX IPsec device needs the plaintext's
IP protocol to support partial checksum offload on
VXLAN/GENEVE packet over IPsec transport mode tunnel.

	Signed-off-by: Raed Salem <raeds@nvidia.com>
	Signed-off-by: Huy Nguyen <huyn@nvidia.com>
	Cc: Steffen Klassert <steffen.klassert@secunet.com>
	Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit fa4535238fb5f306f95de89371a993057b32b2a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/xfrm/xfrm_output.c
diff --cc net/xfrm/xfrm_output.c
index d9edce1e45bb,e321fc63a2e9..000000000000
--- a/net/xfrm/xfrm_output.c
+++ b/net/xfrm/xfrm_output.c
@@@ -583,15 -630,15 +619,22 @@@ int xfrm_output(struct sock *sk, struc
  			kfree_skb(skb);
  			return -ENOMEM;
  		}
++<<<<<<< HEAD
 +		if (skb->sp)
 +			secpath_put(skb->sp);
 +		skb->sp = sp;
 +		skb->encapsulation = 1;
++=======
++>>>>>>> fa4535238fb5 (net/xfrm: Add inner_ipproto into sec_path)
  
  		sp->olen++;
 -		sp->xvec[sp->len++] = x;
 +		sp->xvec[skb->sp->len++] = x;
  		xfrm_state_hold(x);
  
+ 		if (skb->encapsulation)
+ 			xfrm_get_inner_ipproto(skb);
+ 		skb->encapsulation = 1;
+ 
  		if (skb_is_gso(skb)) {
  			if (skb->inner_protocol)
  				return xfrm_output_gso(net, sk, skb);
diff --git a/include/net/xfrm.h b/include/net/xfrm.h
index 20e0fb209048..a899cac4145b 100644
--- a/include/net/xfrm.h
+++ b/include/net/xfrm.h
@@ -1118,6 +1118,7 @@ struct xfrm_offload {
 #define CRYPTO_INVALID_PROTOCOL			128
 
 	__u8			proto;
+	__u8			inner_ipproto;
 };
 
 struct sec_path {
* Unmerged path net/xfrm/xfrm_output.c
