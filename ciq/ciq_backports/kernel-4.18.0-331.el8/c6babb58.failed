x86/pci, x86/amd_nb: Add Hygon Dhyana support to PCI and northbridge

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Pu Wen <puwen@hygon.cn>
commit c6babb5806b77c6ca7078c3487bb0a29704a4e38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/c6babb58.failed

Hygon's PCI vendor ID is 0x1d94, and there are PCI devices
0x1450/0x1463/0x1464 for the host bridge on the Hygon Dhyana platform.
Add Hygon Dhyana support to the PCI and northbridge subsystems by using
the code path of AMD family 17h.

 [ bp: Massage commit message, sort local vars into reverse xmas tree
   order and move the amd_northbridges.num check up. ]

	Signed-off-by: Pu Wen <puwen@hygon.cn>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>	# pci_ids.h
	Cc: tglx@linutronix.de
	Cc: mingo@redhat.com
	Cc: hpa@zytor.com
	Cc: x86@kernel.org
	Cc: thomas.lendacky@amd.com
	Cc: helgaas@kernel.org
	Cc: linux-pci@vger.kernel.org
Link: https://lkml.kernel.org/r/5f8877bd413f2ea0833378dd5454df0720e1c0df.1537885177.git.puwen@hygon.cn
(cherry picked from commit c6babb5806b77c6ca7078c3487bb0a29704a4e38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/amd_nb.c
#	include/linux/pci_ids.h
diff --cc arch/x86/kernel/amd_nb.c
index ff5870caba13,a6eca647bc76..000000000000
--- a/arch/x86/kernel/amd_nb.c
+++ b/arch/x86/kernel/amd_nb.c
@@@ -202,68 -209,44 +217,92 @@@ EXPORT_SYMBOL_GPL(amd_df_indirect_read)
  
  int amd_cache_northbridges(void)
  {
++<<<<<<< HEAD
 +	const struct pci_device_id *root_ids = amd_root_ids;
 +	struct amd_northbridge *nb;
 +	struct pci_dev *root, *misc, *link;
 +	u16 roots_per_misc = 0;
 +	u16 misc_count = 0;
 +	u16 root_count = 0;
 +	u16 i, j;
++=======
+ 	const struct pci_device_id *misc_ids = amd_nb_misc_ids;
+ 	const struct pci_device_id *link_ids = amd_nb_link_ids;
+ 	const struct pci_device_id *root_ids = amd_root_ids;
+ 	struct pci_dev *root, *misc, *link;
+ 	struct amd_northbridge *nb;
+ 	u16 i = 0;
++>>>>>>> c6babb5806b7 (x86/pci, x86/amd_nb: Add Hygon Dhyana support to PCI and northbridge)
  
  	if (amd_northbridges.num)
  		return 0;
  
+ 	if (boot_cpu_data.x86_vendor == X86_VENDOR_HYGON) {
+ 		root_ids = hygon_root_ids;
+ 		misc_ids = hygon_nb_misc_ids;
+ 		link_ids = hygon_nb_link_ids;
+ 	}
+ 
  	misc = NULL;
++<<<<<<< HEAD
 +	while ((misc = next_northbridge(misc, amd_nb_misc_ids)) != NULL)
 +		misc_count++;
++=======
+ 	while ((misc = next_northbridge(misc, misc_ids)) != NULL)
+ 		i++;
++>>>>>>> c6babb5806b7 (x86/pci, x86/amd_nb: Add Hygon Dhyana support to PCI and northbridge)
  
 -	if (!i)
 +	if (!misc_count)
  		return -ENODEV;
  
 -	nb = kcalloc(i, sizeof(struct amd_northbridge), GFP_KERNEL);
 +	root = NULL;
 +	while ((root = next_northbridge(root, root_ids)) != NULL)
 +		root_count++;
 +
 +	if (root_count) {
 +		roots_per_misc = root_count / misc_count;
 +
 +		/*
 +		 * There should be _exactly_ N roots for each DF/SMN
 +		 * interface.
 +		 */
 +		if (!roots_per_misc || (root_count % roots_per_misc)) {
 +			pr_info("Unsupported AMD DF/PCI configuration found\n");
 +			return -ENODEV;
 +		}
 +	}
 +
 +	nb = kcalloc(misc_count, sizeof(struct amd_northbridge), GFP_KERNEL);
  	if (!nb)
  		return -ENOMEM;
  
  	amd_northbridges.nb = nb;
 -	amd_northbridges.num = i;
 +	amd_northbridges.num = misc_count;
  
  	link = misc = root = NULL;
 -	for (i = 0; i != amd_northbridges.num; i++) {
 +	for (i = 0; i < amd_northbridges.num; i++) {
  		node_to_amd_nb(i)->root = root =
- 			next_northbridge(root, amd_root_ids);
+ 			next_northbridge(root, root_ids);
  		node_to_amd_nb(i)->misc = misc =
- 			next_northbridge(misc, amd_nb_misc_ids);
+ 			next_northbridge(misc, misc_ids);
  		node_to_amd_nb(i)->link = link =
++<<<<<<< HEAD
 +			next_northbridge(link, amd_nb_link_ids);
 +
 +		/*
 +		 * If there are more PCI root devices than data fabric/
 +		 * system management network interfaces, then the (N)
 +		 * PCI roots per DF/SMN interface are functionally the
 +		 * same (for DF/SMN access) and N-1 are redundant.  N-1
 +		 * PCI roots should be skipped per DF/SMN interface so
 +		 * the following DF/SMN interfaces get mapped to
 +		 * correct PCI roots.
 +		 */
 +		for (j = 1; j < roots_per_misc; j++)
 +			root = next_northbridge(root, root_ids);
++=======
+ 			next_northbridge(link, link_ids);
++>>>>>>> c6babb5806b7 (x86/pci, x86/amd_nb: Add Hygon Dhyana support to PCI and northbridge)
  	}
  
  	if (amd_gart_present())
@@@ -305,8 -289,15 +345,18 @@@ bool __init early_is_amd_nb(u32 device
  	const struct pci_device_id *id;
  	u32 vendor = device & 0xffff;
  
++<<<<<<< HEAD
++=======
+ 	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD &&
+ 	    boot_cpu_data.x86_vendor != X86_VENDOR_HYGON)
+ 		return false;
+ 
+ 	if (boot_cpu_data.x86_vendor == X86_VENDOR_HYGON)
+ 		misc_ids = hygon_nb_misc_ids;
+ 
++>>>>>>> c6babb5806b7 (x86/pci, x86/amd_nb: Add Hygon Dhyana support to PCI and northbridge)
  	device >>= 16;
- 	for (id = amd_nb_misc_ids; id->vendor; id++)
+ 	for (id = misc_ids; id->vendor; id++)
  		if (vendor == id->vendor && device == id->device)
  			return true;
  	return false;
diff --cc include/linux/pci_ids.h
index a06ffaac6453,8a0841c73f81..000000000000
--- a/include/linux/pci_ids.h
+++ b/include/linux/pci_ids.h
@@@ -2588,7 -2561,7 +2588,11 @@@
  
  #define PCI_VENDOR_ID_AMAZON		0x1d0f
  
++<<<<<<< HEAD
 +#define PCI_VENDOR_ID_HXT		0x1dbf
++=======
+ #define PCI_VENDOR_ID_HYGON		0x1d94
++>>>>>>> c6babb5806b7 (x86/pci, x86/amd_nb: Add Hygon Dhyana support to PCI and northbridge)
  
  #define PCI_VENDOR_ID_TEKRAM		0x1de1
  #define PCI_DEVICE_ID_TEKRAM_DC290	0xdc29
* Unmerged path arch/x86/kernel/amd_nb.c
diff --git a/arch/x86/pci/amd_bus.c b/arch/x86/pci/amd_bus.c
index 649bdde63e32..bfa50e65ef6c 100644
--- a/arch/x86/pci/amd_bus.c
+++ b/arch/x86/pci/amd_bus.c
@@ -93,7 +93,8 @@ static int __init early_root_info_init(void)
 		vendor = id & 0xffff;
 		device = (id>>16) & 0xffff;
 
-		if (vendor != PCI_VENDOR_ID_AMD)
+		if (vendor != PCI_VENDOR_ID_AMD &&
+		    vendor != PCI_VENDOR_ID_HYGON)
 			continue;
 
 		if (hb_probes[i].device == device) {
@@ -390,7 +391,8 @@ static int __init pci_io_ecs_init(void)
 
 static int __init amd_postcore_init(void)
 {
-	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD)
+	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD &&
+	    boot_cpu_data.x86_vendor != X86_VENDOR_HYGON)
 		return 0;
 
 	early_root_info_init();
* Unmerged path include/linux/pci_ids.h
