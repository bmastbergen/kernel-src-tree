iomap: Don't create iomap_page objects for inline files

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 637d3375953e052a62c0db409557e3b3354be88a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/637d3375.failed

In iomap_readpage_actor, don't create iop objects for inline inodes.
Otherwise, iomap_read_inline_data will set PageUptodate without setting
iop->uptodate, and iomap_page_release will eventually complain.

To prevent this kind of bug from occurring in the future, make sure the
page doesn't have private data attached in iomap_read_inline_data.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <djwong@kernel.org>
	Signed-off-by: Darrick J. Wong <djwong@kernel.org>
(cherry picked from commit 637d3375953e052a62c0db409557e3b3354be88a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/buffered-io.c
diff --cc fs/iomap/buffered-io.c
index 0672e30b54c6,41076bab18cb..000000000000
--- a/fs/iomap/buffered-io.c
+++ b/fs/iomap/buffered-io.c
@@@ -257,8 -240,8 +258,13 @@@ iomap_readpage_actor(struct inode *inod
  {
  	struct iomap_readpage_ctx *ctx = data;
  	struct page *page = ctx->cur_page;
++<<<<<<< HEAD
 +	struct iomap_page *iop = iomap_page_create(inode, page);
 +	bool is_contig = false;
++=======
+ 	struct iomap_page *iop;
+ 	bool same_page = false, is_contig = false;
++>>>>>>> 637d3375953e (iomap: Don't create iomap_page objects for inline files)
  	loff_t orig_pos = pos;
  	unsigned poff, plen;
  	sector_t sector;
* Unmerged path fs/iomap/buffered-io.c
