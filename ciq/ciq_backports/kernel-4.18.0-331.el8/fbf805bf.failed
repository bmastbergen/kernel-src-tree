mlxsw: spectrum_router: Fix wrong kfree() in error path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit fbf805bf1fcd125461541a171194f9dcdb2732d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/fbf805bf.failed

The function allocates 'nhgi', not 'nh_grp', so it needs to free the
former in its error path.

Fixes: 7f7a417e6a11 ("mlxsw: spectrum_router: Split nexthop group configuration to a different struct")
Addresses-Coverity: ("Memory - corruptions  (USE_AFTER_FREE)")
	Reviewed-by: Jiri Pirko <jiri@nvidia.com>
	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit fbf805bf1fcd125461541a171194f9dcdb2732d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index f9626e1c9fe9,7dbf02f45913..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -5388,6 -5384,66 +5388,69 @@@ static bool mlxsw_sp_rt6_is_gateway(con
  	       mlxsw_sp_nexthop6_ipip_type(mlxsw_sp, rt, NULL);
  }
  
++<<<<<<< HEAD
++=======
+ static int
+ mlxsw_sp_nexthop6_group_info_init(struct mlxsw_sp *mlxsw_sp,
+ 				  struct mlxsw_sp_nexthop_group *nh_grp,
+ 				  struct mlxsw_sp_fib6_entry *fib6_entry)
+ {
+ 	struct mlxsw_sp_nexthop_group_info *nhgi;
+ 	struct mlxsw_sp_rt6 *mlxsw_sp_rt6;
+ 	struct mlxsw_sp_nexthop *nh;
+ 	int err, i;
+ 
+ 	nhgi = kzalloc(struct_size(nhgi, nexthops, fib6_entry->nrt6),
+ 		       GFP_KERNEL);
+ 	if (!nhgi)
+ 		return -ENOMEM;
+ 	nh_grp->nhgi = nhgi;
+ 	nhgi->nh_grp = nh_grp;
+ 	mlxsw_sp_rt6 = list_first_entry(&fib6_entry->rt6_list,
+ 					struct mlxsw_sp_rt6, list);
+ 	nhgi->gateway = mlxsw_sp_rt6_is_gateway(mlxsw_sp, mlxsw_sp_rt6->rt);
+ 	nhgi->count = fib6_entry->nrt6;
+ 	for (i = 0; i < nhgi->count; i++) {
+ 		struct fib6_info *rt = mlxsw_sp_rt6->rt;
+ 
+ 		nh = &nhgi->nexthops[i];
+ 		err = mlxsw_sp_nexthop6_init(mlxsw_sp, nh_grp, nh, rt);
+ 		if (err)
+ 			goto err_nexthop6_init;
+ 		mlxsw_sp_rt6 = list_next_entry(mlxsw_sp_rt6, list);
+ 	}
+ 	nh_grp->nhgi = nhgi;
+ 	mlxsw_sp_nexthop_group_refresh(mlxsw_sp, nh_grp);
+ 
+ 	return 0;
+ 
+ err_nexthop6_init:
+ 	for (i--; i >= 0; i--) {
+ 		nh = &nhgi->nexthops[i];
+ 		mlxsw_sp_nexthop6_fini(mlxsw_sp, nh);
+ 	}
+ 	kfree(nhgi);
+ 	return err;
+ }
+ 
+ static void
+ mlxsw_sp_nexthop6_group_info_fini(struct mlxsw_sp *mlxsw_sp,
+ 				  struct mlxsw_sp_nexthop_group *nh_grp)
+ {
+ 	struct mlxsw_sp_nexthop_group_info *nhgi = nh_grp->nhgi;
+ 	int i;
+ 
+ 	for (i = nhgi->count - 1; i >= 0; i--) {
+ 		struct mlxsw_sp_nexthop *nh = &nhgi->nexthops[i];
+ 
+ 		mlxsw_sp_nexthop6_fini(mlxsw_sp, nh);
+ 	}
+ 	mlxsw_sp_nexthop_group_refresh(mlxsw_sp, nh_grp);
+ 	WARN_ON_ONCE(nhgi->adj_index_valid);
+ 	kfree(nhgi);
+ }
+ 
++>>>>>>> fbf805bf1fcd (mlxsw: spectrum_router: Fix wrong kfree() in error path)
  static struct mlxsw_sp_nexthop_group *
  mlxsw_sp_nexthop6_group_create(struct mlxsw_sp *mlxsw_sp,
  			       struct mlxsw_sp_fib6_entry *fib6_entry)
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
