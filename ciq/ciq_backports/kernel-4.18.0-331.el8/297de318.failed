gfs2: Use a tighter bound in gfs2_trans_begin

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 297de3180dd7ecbb3798f32e58691168587a8f85
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/297de318.failed

Use a tighter bound for the number of blocks required by transactions in
gfs2_trans_begin: in the worst case, we'll have mixed data and metadata,
so we'll need a log desciptor for each type.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 297de3180dd7ecbb3798f32e58691168587a8f85)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/trans.c
diff --cc fs/gfs2/trans.c
index 35084a676633,f73d6b8f3b53..000000000000
--- a/fs/gfs2/trans.c
+++ b/fs/gfs2/trans.c
@@@ -63,12 -54,16 +63,23 @@@ int gfs2_trans_begin(struct gfs2_sbd *s
  	tr->tr_blocks = blocks;
  	tr->tr_revokes = revokes;
  	tr->tr_reserved = 1;
++<<<<<<< HEAD
 +	set_bit(TR_ALLOCED, &tr->tr_flags);
 +	if (blocks)
 +		tr->tr_reserved += 6 + blocks;
++=======
+ 	if (blocks) {
+ 		/*
+ 		 * The reserved blocks are either used for data or metadata.
+ 		 * We can have mixed data and metadata, each with its own log
+ 		 * descriptor block; see calc_reserved().
+ 		 */
+ 		tr->tr_reserved += blocks + 1 + DIV_ROUND_UP(blocks - 1, databuf_limit(sdp));
+ 	}
++>>>>>>> 297de3180dd7 (gfs2: Use a tighter bound in gfs2_trans_begin)
  	if (revokes)
 -		tr->tr_reserved += gfs2_struct2blk(sdp, revokes);
 +		tr->tr_reserved += gfs2_struct2blk(sdp, revokes,
 +						   sizeof(u64));
  	INIT_LIST_HEAD(&tr->tr_databuf);
  	INIT_LIST_HEAD(&tr->tr_buf);
  	INIT_LIST_HEAD(&tr->tr_list);
* Unmerged path fs/gfs2/trans.c
