x86/fpu/64: Don't FNINIT in kernel_fpu_begin()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-331.el8
commit-author Andy Lutomirski <luto@kernel.org>
commit 49200d17d27d5cc1aede2d1bb2a78dbfc1563e65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-331.el8/49200d17.failed

The remaining callers of kernel_fpu_begin() in 64-bit kernels don't use 387
instructions, so there's no need to sanitize the FPU state.  Skip it to get
most of the performance we lost back.

	Reported-by: Krzysztof OlÄ™dzki <ole@ans.pl>
	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lkml.kernel.org/r/57f8841ccbf9f3c25a23196c888f5f6ec5887577.1611205691.git.luto@kernel.org
(cherry picked from commit 49200d17d27d5cc1aede2d1bb2a78dbfc1563e65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/fpu/api.h
diff --cc arch/x86/include/asm/fpu/api.h
index dcd9503b1098,ed33a14188f6..000000000000
--- a/arch/x86/include/asm/fpu/api.h
+++ b/arch/x86/include/asm/fpu/api.h
@@@ -24,6 -29,24 +24,27 @@@ extern void kernel_fpu_end(void)
  extern bool irq_fpu_usable(void);
  extern void fpregs_mark_activate(void);
  
++<<<<<<< HEAD
++=======
+ /* Code that is unaware of kernel_fpu_begin_mask() can use this */
+ static inline void kernel_fpu_begin(void)
+ {
+ #ifdef CONFIG_X86_64
+ 	/*
+ 	 * Any 64-bit code that uses 387 instructions must explicitly request
+ 	 * KFPU_387.
+ 	 */
+ 	kernel_fpu_begin_mask(KFPU_MXCSR);
+ #else
+ 	/*
+ 	 * 32-bit kernel code may use 387 operations as well as SSE2, etc,
+ 	 * as long as it checks that the CPU has the required capability.
+ 	 */
+ 	kernel_fpu_begin_mask(KFPU_387 | KFPU_MXCSR);
+ #endif
+ }
+ 
++>>>>>>> 49200d17d27d (x86/fpu/64: Don't FNINIT in kernel_fpu_begin())
  /*
   * Use fpregs_lock() while editing CPU's FPU registers or fpu->state.
   * A context switch will (and softirq might) save CPU's FPU registers to
* Unmerged path arch/x86/include/asm/fpu/api.h
