tty: Fix ->pgrp locking in tiocspgrp()

jira LE-1907
cve CVE-2020-29661
Rebuild_History Non-Buildable kernel-3.10.0-1160.21.1.el7
Rebuild_CHGLOG: - [tty] Fix ->pgrp locking in tiocspgrp() (Chris von Recklinghausen) [1908193] {CVE-2020-29661}
Rebuild_FUZZ: 92.96%
commit-author Jann Horn <jannh@google.com>
commit 54ffccbf053b5b6ca4f6e45094b942fab92a25fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.21.1.el7/54ffccbf.failed

tiocspgrp() takes two tty_struct pointers: One to the tty that userspace
passed to ioctl() (`tty`) and one to the TTY being changed (`real_tty`).
These pointers are different when ioctl() is called with a master fd.

To properly lock real_tty->pgrp, we must take real_tty->ctrl_lock.

This bug makes it possible for racing ioctl(TIOCSPGRP, ...) calls on
both sides of a PTY pair to corrupt the refcount of `struct pid`,
leading to use-after-free errors.

Fixes: 47f86834bbd4 ("redo locking of tty->pgrp")
CC: stable@kernel.org
	Signed-off-by: Jann Horn <jannh@google.com>
	Reviewed-by: Jiri Slaby <jirislaby@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 54ffccbf053b5b6ca4f6e45094b942fab92a25fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/tty_jobctrl.c
* Unmerged path drivers/tty/tty_jobctrl.c
* Unmerged path drivers/tty/tty_jobctrl.c
