iommu/vt-d: Move deferred device attachment into helper function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Joerg Roedel <jroedel@suse.de>
commit 034d98cc0cdcde2415c6f598fa9125e3eaa02569
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/034d98cc.failed

Move the code that does the deferred device attachment into a separate
helper function.

Fixes: 1ee0186b9a12 ("iommu/vt-d: Refactor find_domain() helper")
	Cc: stable@vger.kernel.org # v5.5
	Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
	Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 034d98cc0cdcde2415c6f598fa9125e3eaa02569)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 1431de3bfba0,42cdcce1602e..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -2385,6 -2528,25 +2385,27 @@@ static struct dmar_domain *find_domain(
  	return NULL;
  }
  
++<<<<<<< HEAD
++=======
+ static void do_deferred_attach(struct device *dev)
+ {
+ 	struct iommu_domain *domain;
+ 
+ 	dev->archdata.iommu = NULL;
+ 	domain = iommu_get_domain_for_dev(dev);
+ 	if (domain)
+ 		intel_iommu_attach_device(domain, dev);
+ }
+ 
+ static struct dmar_domain *deferred_attach_domain(struct device *dev)
+ {
+ 	if (unlikely(attach_deferred(dev)))
+ 		do_deferred_attach(dev);
+ 
+ 	return find_domain(dev);
+ }
+ 
++>>>>>>> 034d98cc0cdc (iommu/vt-d: Move deferred device attachment into helper function)
  static inline struct device_domain_info *
  dmar_search_domain_by_dev_info(int segment, int bus, int devfn)
  {
* Unmerged path drivers/iommu/intel-iommu.c
