ALSA: firewire-lib: pass no syt information to data block processing layer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit 600c8018df605a91575aef6811cf927e2d933d30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/600c8018.failed

In a previous commit, the variable passed from packet streaming layer
for syt variable is useless. This commit obsoletes it.

In my future work, the syt information is passed to data block processing
layer by another way.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 600c8018df605a91575aef6811cf927e2d933d30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/amdtp-am824.c
#	sound/firewire/amdtp-stream.c
#	sound/firewire/amdtp-stream.h
#	sound/firewire/digi00x/amdtp-dot.c
#	sound/firewire/fireface/amdtp-ff.c
#	sound/firewire/motu/amdtp-motu.c
#	sound/firewire/tascam/amdtp-tascam.c
diff --cc sound/firewire/amdtp-am824.c
index 99c99d5627ae,21068b23d528..000000000000
--- a/sound/firewire/amdtp-am824.c
+++ b/sound/firewire/amdtp-am824.c
@@@ -331,8 -335,9 +331,14 @@@ static void read_midi_messages(struct a
  	}
  }
  
++<<<<<<< HEAD
 +static unsigned int process_rx_data_blocks(struct amdtp_stream *s, __be32 *buffer,
 +					   unsigned int data_blocks, unsigned int *syt)
++=======
+ static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct amdtp_am824 *p = s->protocol;
  	struct snd_pcm_substream *pcm = READ_ONCE(s->pcm);
@@@ -352,8 -357,9 +358,14 @@@
  	return pcm_frames;
  }
  
++<<<<<<< HEAD
 +static unsigned int process_tx_data_blocks(struct amdtp_stream *s, __be32 *buffer,
 +					   unsigned int data_blocks, unsigned int *syt)
++=======
+ static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct amdtp_am824 *p = s->protocol;
  	struct snd_pcm_substream *pcm = READ_ONCE(s->pcm);
diff --cc sound/firewire/amdtp-stream.c
index 6572b73cef04,c8543cdb3c8c..000000000000
--- a/sound/firewire/amdtp-stream.c
+++ b/sound/firewire/amdtp-stream.c
@@@ -722,11 -713,22 +722,16 @@@ static void out_stream_callback(struct 
  		syt = calculate_syt(s, cycle);
  		data_blocks = calculate_data_blocks(s, syt);
  		buffer = s->buffer.packets[s->packet_index].buffer;
++<<<<<<< HEAD
 +		pcm_frames = s->process_data_blocks(s, buffer, data_blocks,
 +						    &syt);
++=======
+ 		dbc = s->data_block_counter;
+ 		pcm_frames = s->process_data_blocks(s, buffer, data_blocks, dbc);
 -
 -		if (s->flags & CIP_DBC_IS_END_EVENT)
 -			dbc = (dbc + data_blocks) & 0xff;
 -
 -		if (s->ctx_data.rx.syt_override >= 0)
 -			syt = s->ctx_data.rx.syt_override;
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  
  		build_it_pkt_header(s, cycle, &template.params, data_blocks,
 -				    dbc, syt, i);
 -
 -		if (!(s->flags & CIP_DBC_IS_END_EVENT))
 -			dbc = (dbc + data_blocks) & 0xff;
 -
 -		s->data_block_counter = dbc;
 +				    syt, i);
  
  		if (queue_out_packet(s, &template.params) < 0) {
  			cancel_stream(s);
@@@ -777,14 -781,14 +782,18 @@@ static void in_stream_callback(struct f
  		if (err >= 0) {
  			buffer = s->buffer.packets[s->packet_index].buffer;
  			pcm_frames = s->process_data_blocks(s, buffer,
++<<<<<<< HEAD
 +							    data_blocks, &syt);
++=======
+ 							    data_blocks, dbc);
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  
 -			if (!(s->flags & CIP_DBC_IS_END_EVENT))
 -				dbc = (dbc + data_blocks) & 0xff;
 +			if (!(s->flags & CIP_DBC_IS_END_EVENT)) {
 +				s->data_block_counter += data_blocks;
 +				s->data_block_counter &= 0xff;
 +			}
  		}
  
 -		s->data_block_counter = dbc;
 -
  		if (queue_in_packet(s, &params) < 0)
  			break;
  
diff --cc sound/firewire/amdtp-stream.h
index 3942894c11ac,5996cc60f166..000000000000
--- a/sound/firewire/amdtp-stream.h
+++ b/sound/firewire/amdtp-stream.h
@@@ -96,7 -99,7 +96,11 @@@ typedef unsigned int (*amdtp_stream_pro
  						struct amdtp_stream *s,
  						__be32 *buffer,
  						unsigned int data_blocks,
++<<<<<<< HEAD
 +						unsigned int *syt);
++=======
+ 						unsigned int data_block_counter);
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  struct amdtp_stream {
  	struct fw_unit *unit;
  	enum cip_flags flags;
diff --cc sound/firewire/digi00x/amdtp-dot.c
index 45ff73d16074,c296d1017ed3..000000000000
--- a/sound/firewire/digi00x/amdtp-dot.c
+++ b/sound/firewire/digi00x/amdtp-dot.c
@@@ -330,9 -330,8 +330,14 @@@ void amdtp_dot_midi_trigger(struct amdt
  }
  
  static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
++<<<<<<< HEAD
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
++=======
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct snd_pcm_substream *pcm;
  	unsigned int pcm_frames;
@@@ -351,9 -350,8 +356,14 @@@
  }
  
  static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
++<<<<<<< HEAD
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
++=======
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct snd_pcm_substream *pcm;
  	unsigned int pcm_frames;
diff --cc sound/firewire/fireface/amdtp-ff.c
index 2938489740b4,31a60dff94ac..000000000000
--- a/sound/firewire/fireface/amdtp-ff.c
+++ b/sound/firewire/fireface/amdtp-ff.c
@@@ -103,9 -103,8 +103,14 @@@ int amdtp_ff_add_pcm_hw_constraints(str
  }
  
  static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
++<<<<<<< HEAD
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
++=======
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct snd_pcm_substream *pcm = READ_ONCE(s->pcm);
  	unsigned int pcm_frames;
@@@ -122,9 -121,8 +127,14 @@@
  }
  
  static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
++<<<<<<< HEAD
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
++=======
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct snd_pcm_substream *pcm = READ_ONCE(s->pcm);
  	unsigned int pcm_frames;
diff --cc sound/firewire/motu/amdtp-motu.c
index 7973dedd31ef,30d5f87119cc..000000000000
--- a/sound/firewire/motu/amdtp-motu.c
+++ b/sound/firewire/motu/amdtp-motu.c
@@@ -300,7 -300,7 +300,11 @@@ static void __maybe_unused copy_message
  
  static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
  				__be32 *buffer, unsigned int data_blocks,
++<<<<<<< HEAD
 +				unsigned int *syt)
++=======
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct amdtp_motu *p = s->protocol;
  	struct snd_pcm_substream *pcm;
@@@ -362,7 -362,7 +366,11 @@@ static void write_sph(struct amdtp_stre
  
  static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
  				__be32 *buffer, unsigned int data_blocks,
++<<<<<<< HEAD
 +				unsigned int *syt)
++=======
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct amdtp_motu *p = (struct amdtp_motu *)s->protocol;
  	struct snd_pcm_substream *pcm;
diff --cc sound/firewire/tascam/amdtp-tascam.c
index 95fb10b7a737,bc1f2d2120b4..000000000000
--- a/sound/firewire/tascam/amdtp-tascam.c
+++ b/sound/firewire/tascam/amdtp-tascam.c
@@@ -166,9 -166,8 +166,14 @@@ static void read_status_messages(struc
  }
  
  static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
++<<<<<<< HEAD
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
++=======
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct snd_pcm_substream *pcm;
  
@@@ -182,9 -181,8 +187,14 @@@
  }
  
  static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
++<<<<<<< HEAD
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
++=======
+ 				__be32 *buffer, unsigned int data_blocks,
+ 				unsigned int data_block_counter)
++>>>>>>> 600c8018df60 (ALSA: firewire-lib: pass no syt information to data block processing layer)
  {
  	struct snd_pcm_substream *pcm;
  
* Unmerged path sound/firewire/amdtp-am824.c
* Unmerged path sound/firewire/amdtp-stream.c
* Unmerged path sound/firewire/amdtp-stream.h
* Unmerged path sound/firewire/digi00x/amdtp-dot.c
* Unmerged path sound/firewire/fireface/amdtp-ff.c
* Unmerged path sound/firewire/motu/amdtp-motu.c
* Unmerged path sound/firewire/tascam/amdtp-tascam.c
