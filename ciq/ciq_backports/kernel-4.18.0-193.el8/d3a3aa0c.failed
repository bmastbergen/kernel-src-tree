libbpf: Fix off-by-one error in ELF sanity check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit d3a3aa0c59e83d8c13a758128b10dd459ce0d866
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d3a3aa0c.failed

libbpf's bpf_object__elf_collect() does simple sanity check after iterating
over all ELF sections, if checks that .strtab index is correct. Unfortunately,
due to section indices being 1-based, the check breaks for cases when .strtab
ends up being the very last section in ELF.

Fixes: 77ba9a5b48a7 ("tools lib bpf: Fetch map names from correct strtab")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20191028233727.1286699-1-andriin@fb.com
(cherry picked from commit d3a3aa0c59e83d8c13a758128b10dd459ce0d866)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 0adc6e12ef11,5d15cc4dfcd6..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -1647,8 -1664,8 +1647,13 @@@ static int bpf_object__elf_collect(stru
  		}
  	}
  
++<<<<<<< HEAD
 +	if (!obj->efile.strtabidx || obj->efile.strtabidx >= idx) {
 +		pr_warning("Corrupted ELF file: index of strtab invalid\n");
++=======
+ 	if (!obj->efile.strtabidx || obj->efile.strtabidx > idx) {
+ 		pr_warn("Corrupted ELF file: index of strtab invalid\n");
++>>>>>>> d3a3aa0c59e8 (libbpf: Fix off-by-one error in ELF sanity check)
  		return -LIBBPF_ERRNO__FORMAT;
  	}
  	err = bpf_object__init_btf(obj, btf_data, btf_ext_data);
* Unmerged path tools/lib/bpf/libbpf.c
