ALSA: firewire-lib: add a kernel API to stop a couple of AMDTP streams in AMDTP domain

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit 6261f90bdb0b605ffb158717ec7a03b1753aded5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/6261f90b.failed

This commit adds a kernel API to stop a couple of isochronous contexts
for AMDTP streams. The API is not protected with any lock primitive.
Callers should use this with enough lock against concurrent access.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 6261f90bdb0b605ffb158717ec7a03b1753aded5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/amdtp-stream.h
diff --cc sound/firewire/amdtp-stream.h
index a739889ba7ac,ab2a69180240..000000000000
--- a/sound/firewire/amdtp-stream.h
+++ b/sound/firewire/amdtp-stream.h
@@@ -167,7 -169,10 +167,14 @@@ struct amdtp_stream 
  
  	/* For backends to process data blocks. */
  	void *protocol;
++<<<<<<< HEAD
 +	amdtp_stream_process_data_blocks_t process_data_blocks;
++=======
+ 	amdtp_stream_process_ctx_payloads_t process_ctx_payloads;
+ 
+ 	// For domain.
+ 	struct list_head list;
++>>>>>>> 6261f90bdb0b (ALSA: firewire-lib: add a kernel API to stop a couple of AMDTP streams in AMDTP domain)
  };
  
  int amdtp_stream_init(struct amdtp_stream *s, struct fw_unit *unit,
diff --git a/sound/firewire/amdtp-stream.c b/sound/firewire/amdtp-stream.c
index 49eaae157b64..92ca479276b0 100644
--- a/sound/firewire/amdtp-stream.c
+++ b/sound/firewire/amdtp-stream.c
@@ -1109,3 +1109,19 @@ void amdtp_domain_destroy(struct amdtp_domain *d)
 	WARN_ON(!list_empty(&d->streams));
 }
 EXPORT_SYMBOL_GPL(amdtp_domain_destroy);
+
+/**
+ * amdtp_domain_stop - stop sending packets for isoc context in the same domain.
+ * @d: the AMDTP domain to which the isoc contexts belong.
+ */
+void amdtp_domain_stop(struct amdtp_domain *d)
+{
+	struct amdtp_stream *s, *next;
+
+	list_for_each_entry_safe(s, next, &d->streams, list) {
+		list_del(&s->list);
+
+		amdtp_stream_stop(s);
+	}
+}
+EXPORT_SYMBOL_GPL(amdtp_domain_stop);
* Unmerged path sound/firewire/amdtp-stream.h
