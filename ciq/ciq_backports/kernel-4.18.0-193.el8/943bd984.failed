RDMA/core: Allow detaching gid attribute netdevice for RoCE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Parav Pandit <parav@mellanox.com>
commit 943bd984b108b3bb778790c2da4ae8d186b547e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/943bd984.failed

When there is active traffic through a GID, a QP/AH holds reference to
this GID entry. RoCE GID entry holds reference to its attached
netdevice. Due to this when netdevice is deleted by admin user, its
refcount is not dropped.

Therefore, while deleting RoCE GID, wait for all GID attribute's netdev
users to finish accessing netdev in rcu context.  Once all users done
accessing it, release the netdev refcount.

	Signed-off-by: Huy Nguyen <huyn@mellanox.com>
	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 943bd984b108b3bb778790c2da4ae8d186b547e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cache.c
diff --cc drivers/infiniband/core/cache.c
index f50de4cb4cd9,099d922ae7bd..000000000000
--- a/drivers/infiniband/core/cache.c
+++ b/drivers/infiniband/core/cache.c
@@@ -1280,6 -1297,63 +1328,66 @@@ struct net_device *rdma_read_gid_attr_n
  	read_unlock_irqrestore(&table->rwlock, flags);
  	return ndev;
  }
++<<<<<<< HEAD
++=======
+ EXPORT_SYMBOL(rdma_read_gid_attr_ndev_rcu);
+ 
+ static int get_lower_dev_vlan(struct net_device *lower_dev, void *data)
+ {
+ 	u16 *vlan_id = data;
+ 
+ 	if (is_vlan_dev(lower_dev))
+ 		*vlan_id = vlan_dev_vlan_id(lower_dev);
+ 
+ 	/* We are interested only in first level vlan device, so
+ 	 * always return 1 to stop iterating over next level devices.
+ 	 */
+ 	return 1;
+ }
+ 
+ /**
+  * rdma_read_gid_l2_fields - Read the vlan ID and source MAC address
+  *			     of a GID entry.
+  *
+  * @attr:	GID attribute pointer whose L2 fields to be read
+  * @vlan_id:	Pointer to vlan id to fill up if the GID entry has
+  *		vlan id. It is optional.
+  * @smac:	Pointer to smac to fill up for a GID entry. It is optional.
+  *
+  * rdma_read_gid_l2_fields() returns 0 on success and returns vlan id
+  * (if gid entry has vlan) and source MAC, or returns error.
+  */
+ int rdma_read_gid_l2_fields(const struct ib_gid_attr *attr,
+ 			    u16 *vlan_id, u8 *smac)
+ {
+ 	struct net_device *ndev;
+ 
+ 	rcu_read_lock();
+ 	ndev = rcu_dereference(attr->ndev);
+ 	if (!ndev) {
+ 		rcu_read_unlock();
+ 		return -ENODEV;
+ 	}
+ 	if (smac)
+ 		ether_addr_copy(smac, ndev->dev_addr);
+ 	if (vlan_id) {
+ 		*vlan_id = 0xffff;
+ 		if (is_vlan_dev(ndev)) {
+ 			*vlan_id = vlan_dev_vlan_id(ndev);
+ 		} else {
+ 			/* If the netdev is upper device and if it's lower
+ 			 * device is vlan device, consider vlan id of the
+ 			 * the lower vlan device for this gid entry.
+ 			 */
+ 			netdev_walk_all_lower_dev_rcu(attr->ndev,
+ 					get_lower_dev_vlan, vlan_id);
+ 		}
+ 	}
+ 	rcu_read_unlock();
+ 	return 0;
+ }
+ EXPORT_SYMBOL(rdma_read_gid_l2_fields);
++>>>>>>> 943bd984b108 (RDMA/core: Allow detaching gid attribute netdevice for RoCE)
  
  static int config_non_roce_gid_cache(struct ib_device *device,
  				     u8 port, int gid_tbl_len)
* Unmerged path drivers/infiniband/core/cache.c
diff --git a/drivers/infiniband/core/sysfs.c b/drivers/infiniband/core/sysfs.c
index 7e51b406e89a..27262d37e60e 100644
--- a/drivers/infiniband/core/sysfs.c
+++ b/drivers/infiniband/core/sysfs.c
@@ -349,10 +349,15 @@ static struct attribute *port_default_attrs[] = {
 
 static size_t print_ndev(const struct ib_gid_attr *gid_attr, char *buf)
 {
-	if (!gid_attr->ndev)
-		return -EINVAL;
-
-	return sprintf(buf, "%s\n", gid_attr->ndev->name);
+	struct net_device *ndev;
+	size_t ret = -EINVAL;
+
+	rcu_read_lock();
+	ndev = rcu_dereference(gid_attr->ndev);
+	if (ndev)
+		ret = sprintf(buf, "%s\n", ndev->name);
+	rcu_read_unlock();
+	return ret;
 }
 
 static size_t print_gid_type(const struct ib_gid_attr *gid_attr, char *buf)
diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index e0695e17f2fe..12de9f29dc03 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -94,7 +94,7 @@ enum ib_gid_type {
 
 #define ROCE_V2_UDP_DPORT      4791
 struct ib_gid_attr {
-	struct net_device	*ndev;
+	struct net_device __rcu	*ndev;
 	struct ib_device	*device;
 	union ib_gid		gid;
 	enum ib_gid_type	gid_type;
