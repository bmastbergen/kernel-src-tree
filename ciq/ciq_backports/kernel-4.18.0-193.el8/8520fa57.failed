net/mlx5e: Create q counters on uplink representors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 8520fa57a4e934eff631883cf80744d3a84c734b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8520fa57.failed

Q counters were disabled for all types of representors to prevent an issue
where there is not enough resources to init q counters for 127 representor
instances. Enable q counters only for uplink representors to support
"rx_out_of_buffer", "rx_if_down_packets" counters in ethtool.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 8520fa57a4e934eff631883cf80744d3a84c734b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index e3ab7df3e76c,f11c86d1b9b7..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -1622,6 -1716,60 +1622,63 @@@ static void mlx5e_cleanup_rep_rx(struc
  	mlx5e_close_drop_rq(&priv->drop_rq);
  }
  
++<<<<<<< HEAD
++=======
+ static int mlx5e_init_ul_rep_rx(struct mlx5e_priv *priv)
+ {
+ 	int err = mlx5e_init_rep_rx(priv);
+ 
+ 	if (err)
+ 		return err;
+ 
+ 	mlx5e_create_q_counters(priv);
+ 	return 0;
+ }
+ 
+ static void mlx5e_cleanup_ul_rep_rx(struct mlx5e_priv *priv)
+ {
+ 	mlx5e_destroy_q_counters(priv);
+ 	mlx5e_cleanup_rep_rx(priv);
+ }
+ 
+ static int mlx5e_init_uplink_rep_tx(struct mlx5e_rep_priv *rpriv)
+ {
+ 	struct mlx5_rep_uplink_priv *uplink_priv;
+ 	struct net_device *netdev;
+ 	struct mlx5e_priv *priv;
+ 	int err;
+ 
+ 	netdev = rpriv->netdev;
+ 	priv = netdev_priv(netdev);
+ 	uplink_priv = &rpriv->uplink_priv;
+ 
+ 	mutex_init(&uplink_priv->unready_flows_lock);
+ 	INIT_LIST_HEAD(&uplink_priv->unready_flows);
+ 
+ 	/* init shared tc flow table */
+ 	err = mlx5e_tc_esw_init(&uplink_priv->tc_ht);
+ 	if (err)
+ 		return err;
+ 
+ 	mlx5_init_port_tun_entropy(&uplink_priv->tun_entropy, priv->mdev);
+ 
+ 	/* init indirect block notifications */
+ 	INIT_LIST_HEAD(&uplink_priv->tc_indr_block_priv_list);
+ 	uplink_priv->netdevice_nb.notifier_call = mlx5e_nic_rep_netdevice_event;
+ 	err = register_netdevice_notifier(&uplink_priv->netdevice_nb);
+ 	if (err) {
+ 		mlx5_core_err(priv->mdev, "Failed to register netdev notifier\n");
+ 		goto tc_esw_cleanup;
+ 	}
+ 
+ 	return 0;
+ 
+ tc_esw_cleanup:
+ 	mlx5e_tc_esw_cleanup(&uplink_priv->tc_ht);
+ 	return err;
+ }
+ 
++>>>>>>> 8520fa57a4e9 (net/mlx5e: Create q counters on uplink representors)
  static int mlx5e_init_rep_tx(struct mlx5e_priv *priv)
  {
  	struct mlx5e_rep_priv *rpriv = priv->ppriv;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
