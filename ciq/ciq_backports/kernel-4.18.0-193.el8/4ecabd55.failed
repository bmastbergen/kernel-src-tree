bpf: allow CGROUP_SKB programs to use bpf_skb_cgroup_id() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Roman Gushchin <guro@fb.com>
commit 4ecabd55c90469629460f035f4bf4c8ae3d2743b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4ecabd55.failed

Currently bpf_skb_cgroup_id() is not supported for CGROUP_SKB
programs. An attempt to load such a program generates an error
like this:

    libbpf:
    0: (b7) r6 = 0
    ...
    9: (85) call bpf_skb_cgroup_id#79
    unknown func bpf_skb_cgroup_id#79

There are no particular reasons for denying it, and we have some
use cases where it might be useful.

So let's add it to the list of allowed helpers.

	Signed-off-by: Roman Gushchin <guro@fb.com>
	Cc: Yonghong Song <yhs@fb.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
	Cc: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Martin KaFai Lau <kafai@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 4ecabd55c90469629460f035f4bf4c8ae3d2743b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/filter.c
diff --cc net/core/filter.c
index ee9df4cecb0d,f2777dc0b624..000000000000
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@@ -5730,6 -5915,14 +5730,17 @@@ cg_skb_func_proto(enum bpf_func_id func
  		return &bpf_get_local_storage_proto;
  	case BPF_FUNC_sk_fullsock:
  		return &bpf_sk_fullsock_proto;
++<<<<<<< HEAD
++=======
+ 	case BPF_FUNC_sk_storage_get:
+ 		return &bpf_sk_storage_get_proto;
+ 	case BPF_FUNC_sk_storage_delete:
+ 		return &bpf_sk_storage_delete_proto;
+ #ifdef CONFIG_SOCK_CGROUP_DATA
+ 	case BPF_FUNC_skb_cgroup_id:
+ 		return &bpf_skb_cgroup_id_proto;
+ #endif
++>>>>>>> 4ecabd55c904 (bpf: allow CGROUP_SKB programs to use bpf_skb_cgroup_id() helper)
  #ifdef CONFIG_INET
  	case BPF_FUNC_tcp_sock:
  		return &bpf_tcp_sock_proto;
* Unmerged path net/core/filter.c
