vfio/type1: Handle different mdev isolation type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit be068fa236c3d697c77f02f3dc9cd7afeb0538a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/be068fa2.failed

This adds the support to determine the isolation type
of a mediated device group by checking whether it has
an iommu device. If an iommu device exists, an iommu
domain will be allocated and then attached to the iommu
device. Otherwise, keep the same behavior as it is.

	Cc: Ashok Raj <ashok.raj@intel.com>
	Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Cc: Kevin Tian <kevin.tian@intel.com>
	Signed-off-by: Sanjay Kumar <sanjay.k.kumar@intel.com>
	Signed-off-by: Liu Yi L <yi.l.liu@intel.com>
	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
	Reviewed-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
	Reviewed-by: Kirti Wankhede <kwankhede@nvidia.com>
	Acked-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit be068fa236c3d697c77f02f3dc9cd7afeb0538a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vfio/vfio_iommu_type1.c
diff --cc drivers/vfio/vfio_iommu_type1.c
index 7c23a77fd289,3be1db3501cc..000000000000
--- a/drivers/vfio/vfio_iommu_type1.c
+++ b/drivers/vfio/vfio_iommu_type1.c
@@@ -1340,6 -1307,102 +1335,105 @@@ static bool vfio_iommu_has_sw_msi(struc
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static struct device *vfio_mdev_get_iommu_device(struct device *dev)
+ {
+ 	struct device *(*fn)(struct device *dev);
+ 	struct device *iommu_device;
+ 
+ 	fn = symbol_get(mdev_get_iommu_device);
+ 	if (fn) {
+ 		iommu_device = fn(dev);
+ 		symbol_put(mdev_get_iommu_device);
+ 
+ 		return iommu_device;
+ 	}
+ 
+ 	return NULL;
+ }
+ 
+ static int vfio_mdev_attach_domain(struct device *dev, void *data)
+ {
+ 	struct iommu_domain *domain = data;
+ 	struct device *iommu_device;
+ 
+ 	iommu_device = vfio_mdev_get_iommu_device(dev);
+ 	if (iommu_device) {
+ 		if (iommu_dev_feature_enabled(iommu_device, IOMMU_DEV_FEAT_AUX))
+ 			return iommu_aux_attach_device(domain, iommu_device);
+ 		else
+ 			return iommu_attach_device(domain, iommu_device);
+ 	}
+ 
+ 	return -EINVAL;
+ }
+ 
+ static int vfio_mdev_detach_domain(struct device *dev, void *data)
+ {
+ 	struct iommu_domain *domain = data;
+ 	struct device *iommu_device;
+ 
+ 	iommu_device = vfio_mdev_get_iommu_device(dev);
+ 	if (iommu_device) {
+ 		if (iommu_dev_feature_enabled(iommu_device, IOMMU_DEV_FEAT_AUX))
+ 			iommu_aux_detach_device(domain, iommu_device);
+ 		else
+ 			iommu_detach_device(domain, iommu_device);
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ static int vfio_iommu_attach_group(struct vfio_domain *domain,
+ 				   struct vfio_group *group)
+ {
+ 	if (group->mdev_group)
+ 		return iommu_group_for_each_dev(group->iommu_group,
+ 						domain->domain,
+ 						vfio_mdev_attach_domain);
+ 	else
+ 		return iommu_attach_group(domain->domain, group->iommu_group);
+ }
+ 
+ static void vfio_iommu_detach_group(struct vfio_domain *domain,
+ 				    struct vfio_group *group)
+ {
+ 	if (group->mdev_group)
+ 		iommu_group_for_each_dev(group->iommu_group, domain->domain,
+ 					 vfio_mdev_detach_domain);
+ 	else
+ 		iommu_detach_group(domain->domain, group->iommu_group);
+ }
+ 
+ static bool vfio_bus_is_mdev(struct bus_type *bus)
+ {
+ 	struct bus_type *mdev_bus;
+ 	bool ret = false;
+ 
+ 	mdev_bus = symbol_get(mdev_bus_type);
+ 	if (mdev_bus) {
+ 		ret = (bus == mdev_bus);
+ 		symbol_put(mdev_bus_type);
+ 	}
+ 
+ 	return ret;
+ }
+ 
+ static int vfio_mdev_iommu_device(struct device *dev, void *data)
+ {
+ 	struct device **old = data, *new;
+ 
+ 	new = vfio_mdev_get_iommu_device(dev);
+ 	if (!new || (*old && *old != new))
+ 		return -EINVAL;
+ 
+ 	*old = new;
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> be068fa236c3 (vfio/type1: Handle different mdev isolation type)
  static int vfio_iommu_type1_attach_group(void *iommu_data,
  					 struct iommu_group *iommu_group)
  {
* Unmerged path drivers/vfio/vfio_iommu_type1.c
