mt76: mt7603: dynamically alloc mcu req in mt7603_mcu_set_eeprom

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 4d2a6f7b4e17ede86be46013d114d58adaca5631
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4d2a6f7b.failed

Do not allocate mcu requests on the stack in mt7603_mcu_set_eeprom
in order to avoid the following warning:

Warning: the frame size of 1032 bytes is larger than 1024 bytes
	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 4d2a6f7b4e17ede86be46013d114d58adaca5631)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7603/mcu.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/mcu.c
index 305341f20792,6357b5658a32..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mcu.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mcu.c
@@@ -348,19 -358,30 +347,35 @@@ int mt7603_mcu_set_eeprom(struct mt7603
  		.buffer_mode = 1,
  		.len = ARRAY_SIZE(req_fields) - 1,
  	};
- 	u8 *eep = (u8 *)dev->mt76.eeprom.data;
- 	int i;
+ 	const int size = 0xff * sizeof(struct req_data);
+ 	u8 *req, *eep = (u8 *)dev->mt76.eeprom.data;
+ 	int i, ret, len = sizeof(req_hdr) + size;
+ 	struct req_data *data;
+ 
+ 	BUILD_BUG_ON(ARRAY_SIZE(req_fields) * sizeof(*data) > size);
  
- 	BUILD_BUG_ON(ARRAY_SIZE(req_fields) > ARRAY_SIZE(req.data));
+ 	req = kmalloc(len, GFP_KERNEL);
+ 	if (!req)
+ 		return -ENOMEM;
  
+ 	memcpy(req, &req_hdr, sizeof(req_hdr));
+ 	data = (struct req_data *)(req + sizeof(req_hdr));
+ 	memset(data, 0, size);
  	for (i = 0; i < ARRAY_SIZE(req_fields); i++) {
- 		req.data[i].addr = cpu_to_le16(req_fields[i]);
- 		req.data[i].val = eep[req_fields[i]];
- 		req.data[i].pad = 0;
+ 		data[i].addr = cpu_to_le16(req_fields[i]);
+ 		data[i].val = eep[req_fields[i]];
  	}
  
++<<<<<<< HEAD
 +	return mt7603_mcu_msg_send(dev, MCU_EXT_CMD_EFUSE_BUFFER_MODE,
 +				   &req, sizeof(req), true);
++=======
+ 	ret = __mt76_mcu_send_msg(&dev->mt76, MCU_EXT_CMD_EFUSE_BUFFER_MODE,
+ 				  req, len, true);
+ 	kfree(req);
+ 
+ 	return ret;
++>>>>>>> 4d2a6f7b4e17 (mt76: mt7603: dynamically alloc mcu req in mt7603_mcu_set_eeprom)
  }
  
  static int mt7603_mcu_set_tx_power(struct mt7603_dev *dev)
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/mcu.c
