net/mlx5e: Expose new function for TIS destroy loop

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: Expose new function for TIS destroy loop (Alaa Hleihel) [1760285 1724336]
Rebuild_FUZZ: 95.92%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit 3c14562663c603bc523b6619a2b19a411e1cdc8e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3c145626.failed

For better modularity and code sharing.
Function internal change to be introduced in the next patches.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 3c14562663c603bc523b6619a2b19a411e1cdc8e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 1599dd95552b,491c281416d0..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -980,6 -1107,8 +980,11 @@@ int mlx5e_create_tis(struct mlx5_core_d
  void mlx5e_destroy_tis(struct mlx5_core_dev *mdev, u32 tisn);
  
  int mlx5e_create_tises(struct mlx5e_priv *priv);
++<<<<<<< HEAD
++=======
+ void mlx5e_destroy_tises(struct mlx5e_priv *priv);
+ int mlx5e_update_nic_rx(struct mlx5e_priv *priv);
++>>>>>>> 3c14562663c6 (net/mlx5e: Expose new function for TIS destroy loop)
  void mlx5e_update_carrier(struct mlx5e_priv *priv);
  int mlx5e_close(struct net_device *netdev);
  int mlx5e_open(struct net_device *netdev);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 50379aaf9f9f,390e614ac46e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -3098,11 -3216,7 +3106,15 @@@ err_close_tises
  
  static void mlx5e_cleanup_nic_tx(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	int tc;
 +
 +	mlx5e_tx_reporter_destroy(priv);
 +	for (tc = 0; tc < priv->profile->max_tc; tc++)
 +		mlx5e_destroy_tis(priv->mdev, priv->tisn[tc]);
++=======
+ 	mlx5e_destroy_tises(priv);
++>>>>>>> 3c14562663c6 (net/mlx5e: Expose new function for TIS destroy loop)
  }
  
  static void mlx5e_build_indir_tir_ctx_common(struct mlx5e_priv *priv,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index e3ab7df3e76c..cb4ee87cfcc5 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@ -1626,7 +1626,7 @@ static int mlx5e_init_rep_tx(struct mlx5e_priv *priv)
 {
 	struct mlx5e_rep_priv *rpriv = priv->ppriv;
 	struct mlx5_rep_uplink_priv *uplink_priv;
-	int tc, err;
+	int err;
 
 	err = mlx5e_create_tises(priv);
 	if (err) {
@@ -1661,18 +1661,15 @@ static int mlx5e_init_rep_tx(struct mlx5e_priv *priv)
 tc_esw_cleanup:
 	mlx5e_tc_esw_cleanup(&uplink_priv->tc_ht);
 destroy_tises:
-	for (tc = 0; tc < priv->profile->max_tc; tc++)
-		mlx5e_destroy_tis(priv->mdev, priv->tisn[tc]);
+	mlx5e_destroy_tises(priv);
 	return err;
 }
 
 static void mlx5e_cleanup_rep_tx(struct mlx5e_priv *priv)
 {
 	struct mlx5e_rep_priv *rpriv = priv->ppriv;
-	int tc;
 
-	for (tc = 0; tc < priv->profile->max_tc; tc++)
-		mlx5e_destroy_tis(priv->mdev, priv->tisn[tc]);
+	mlx5e_destroy_tises(priv);
 
 	if (rpriv->rep->vport == FDB_UPLINK_VPORT) {
 		/* clean indirect TC block notifications */
