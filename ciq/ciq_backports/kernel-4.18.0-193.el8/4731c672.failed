ALSA: fireface: code refactoring for FF data block processing layer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit 4731c672c930e490515f1747fb34d56d61ae57ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4731c672.failed

This is code refactoring for FF data block processing layer so that
it can receive list of packet descriptor.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 4731c672c930e490515f1747fb34d56d61ae57ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/fireface/amdtp-ff.c
diff --cc sound/firewire/fireface/amdtp-ff.c
index 2938489740b4,cb2073cf146b..000000000000
--- a/sound/firewire/fireface/amdtp-ff.c
+++ b/sound/firewire/fireface/amdtp-ff.c
@@@ -103,37 -113,33 +113,58 @@@ int amdtp_ff_add_pcm_hw_constraints(str
  }
  
  static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
 -					   const struct pkt_desc *desc,
 -					   struct snd_pcm_substream *pcm)
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
  {
++<<<<<<< HEAD
 +	struct snd_pcm_substream *pcm = READ_ONCE(s->pcm);
 +	unsigned int pcm_frames;
 +
 +	if (pcm) {
 +		write_pcm_s32(s, pcm, (__le32 *)buffer, data_blocks);
 +		pcm_frames = data_blocks;
 +	} else {
 +		write_pcm_silence(s, (__le32 *)buffer, data_blocks);
 +		pcm_frames = 0;
++=======
+ 	unsigned int pcm_frames = 0;
+ 
+ 	if (pcm) {
+ 		write_pcm_s32(s, pcm, (__le32 *)desc->ctx_payload,
+ 			      desc->data_blocks, pcm_frames);
+ 		pcm_frames = desc->data_blocks;
+ 	} else {
+ 		write_pcm_silence(s, (__le32 *)desc->ctx_payload,
+ 				  desc->data_blocks);
++>>>>>>> 4731c672c930 (ALSA: fireface: code refactoring for FF data block processing layer)
  	}
  
  	return pcm_frames;
  }
  
  static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
 -					   const struct pkt_desc *desc,
 -					   struct snd_pcm_substream *pcm)
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
  {
++<<<<<<< HEAD
 +	struct snd_pcm_substream *pcm = READ_ONCE(s->pcm);
 +	unsigned int pcm_frames;
 +
 +	if (pcm) {
 +		read_pcm_s32(s, pcm, (__le32 *)buffer, data_blocks);
 +		pcm_frames = data_blocks;
 +	} else {
 +		pcm_frames = 0;
++=======
+ 	unsigned int pcm_frames = 0;
+ 
+ 	if (pcm) {
+ 		read_pcm_s32(s, pcm, (__le32 *)desc->ctx_payload,
+ 			     desc->data_blocks, pcm_frames);
+ 		pcm_frames = desc->data_blocks;
++>>>>>>> 4731c672c930 (ALSA: fireface: code refactoring for FF data block processing layer)
  	}
  
  	return pcm_frames;
* Unmerged path sound/firewire/fireface/amdtp-ff.c
