tools/power turbostat: fix buffer overrun

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
commit eeb71c950bc6eee460f2070643ce137e067b234c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/eeb71c95.failed

turbostat could be terminated by general protection fault on some latest
hardwares which (for example) support 9 levels of C-states and show 18
"tADDED" lines. That bloats the total output and finally causes buffer
overrun.  So let's extend the buffer to avoid this.

	Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit eeb71c950bc6eee460f2070643ce137e067b234c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index ebc1d0b1fc9b,f8f4e1c130a6..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -5142,7 -5131,7 +5142,11 @@@ int initialize_counters(int cpu_id
  
  void allocate_output_buffer()
  {
++<<<<<<< HEAD
 +	output_buffer = calloc(1, (1 + topo.num_cpus) * 1536);
++=======
+ 	output_buffer = calloc(1, (1 + topo.num_cpus) * 2048);
++>>>>>>> eeb71c950bc6 (tools/power turbostat: fix buffer overrun)
  	outp = output_buffer;
  	if (outp == NULL)
  		err(-1, "calloc output buffer");
* Unmerged path tools/power/x86/turbostat/turbostat.c
