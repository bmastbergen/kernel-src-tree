net/mlx5: DR, Fix SW steering HW bits and definitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [kernel] mlx5: DR, Fix SW steering HW bits and definitions (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.08%
commit-author Yevgeny Kliteynik <kliteyn@mellanox.com>
commit d32d7c52e08a25d8d4b9f1a7b56400f35b8f72fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d32d7c52.failed

Fix wrong reserved bits offsets.

Fixes: 97b5484ed608 ("net/mlx5: Add HW bits and definitions required for SW steering")
	Signed-off-by: Yevgeny Kliteynik <kliteyn@mellanox.com>
	Reviewed-by: Alex Vesker <valex@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit d32d7c52e08a25d8d4b9f1a7b56400f35b8f72fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 705e876d1842,138c50d5a353..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -483,7 -486,11 +484,15 @@@ union mlx5_ifc_gre_key_bits 
  };
  
  struct mlx5_ifc_fte_match_set_misc_bits {
++<<<<<<< HEAD
 +	u8         reserved_at_0[0x8];
++=======
+ 	u8         gre_c_present[0x1];
+ 	u8         reserved_at_1[0x1];
+ 	u8         gre_k_present[0x1];
+ 	u8         gre_s_present[0x1];
+ 	u8         source_vhca_port[0x4];
++>>>>>>> d32d7c52e08a (net/mlx5: DR, Fix SW steering HW bits and definitions)
  	u8         source_sqn[0x18];
  
  	u8         source_eswitch_owner_vhca_id[0x10];
@@@ -4866,9 -5045,89 +4875,93 @@@ struct mlx5_ifc_query_hca_cap_in_bits 
  	u8         reserved_at_20[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
++	u8         reserved_at_40[0x40];
++=======
+ 	u8         other_function[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         function_id[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_other_hca_cap_bits {
+ 	u8         roce[0x1];
+ 	u8         reserved_at_1[0x27f];
+ };
+ 
+ struct mlx5_ifc_query_other_hca_cap_out_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
+ 	u8         reserved_at_40[0x40];
+ 
+ 	struct     mlx5_ifc_other_hca_cap_bits other_capability;
+ };
+ 
+ struct mlx5_ifc_query_other_hca_cap_in_bits {
+ 	u8         opcode[0x10];
+ 	u8         reserved_at_10[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         op_mod[0x10];
+ 
+ 	u8         reserved_at_40[0x10];
+ 	u8         function_id[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
+ };
+ 
+ struct mlx5_ifc_modify_other_hca_cap_out_bits {
+ 	u8         status[0x8];
+ 	u8         reserved_at_8[0x18];
+ 
+ 	u8         syndrome[0x20];
+ 
  	u8         reserved_at_40[0x40];
  };
  
+ struct mlx5_ifc_modify_other_hca_cap_in_bits {
+ 	u8         opcode[0x10];
+ 	u8         reserved_at_10[0x10];
+ 
+ 	u8         reserved_at_20[0x10];
+ 	u8         op_mod[0x10];
+ 
+ 	u8         reserved_at_40[0x10];
+ 	u8         function_id[0x10];
+ 	u8         field_select[0x20];
+ 
+ 	struct     mlx5_ifc_other_hca_cap_bits other_capability;
+ };
+ 
+ struct mlx5_ifc_flow_table_context_bits {
+ 	u8         reformat_en[0x1];
+ 	u8         decap_en[0x1];
+ 	u8         sw_owner[0x1];
+ 	u8         termination_table[0x1];
+ 	u8         table_miss_action[0x4];
+ 	u8         level[0x8];
+ 	u8         reserved_at_10[0x8];
+ 	u8         log_size[0x8];
+ 
+ 	u8         reserved_at_20[0x8];
+ 	u8         table_miss_id[0x18];
+ 
+ 	u8         reserved_at_40[0x8];
+ 	u8         lag_master_next_table_id[0x18];
+ 
+ 	u8         reserved_at_60[0x60];
+ 
+ 	u8         sw_owner_icm_root_1[0x40];
+ 
+ 	u8         sw_owner_icm_root_0[0x40];
+ 
++>>>>>>> d32d7c52e08a (net/mlx5: DR, Fix SW steering HW bits and definitions)
+ };
+ 
  struct mlx5_ifc_query_flow_table_out_bits {
  	u8         status[0x8];
  	u8         reserved_at_8[0x18];
* Unmerged path include/linux/mlx5/mlx5_ifc.h
