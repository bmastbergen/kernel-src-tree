net: sched: extract qstats update code into functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] sched: extract qstats update code into functions (Ivan Vecera) [1739606]
Rebuild_FUZZ: 95.05%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 26b537a88ca5b7399c7ab0656e06dbd9da9513c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/26b537a8.failed

Extract common code that increments cpu_qstats counters into standalone act
API functions. Change hardware offloaded actions that use percpu counter
allocation to use the new functions instead of accessing cpu_qstats
directly.

This commit doesn't change functionality.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 26b537a88ca5b7399c7ab0656e06dbd9da9513c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/act_api.h
#	net/sched/act_ct.c
diff --cc include/net/act_api.h
index c61a1bf4e3de,8d6861ce205b..000000000000
--- a/include/net/act_api.h
+++ b/include/net/act_api.h
@@@ -179,6 -186,31 +179,34 @@@ int tcf_action_dump(struct sk_buff *skb
  		    int ref);
  int tcf_action_dump_old(struct sk_buff *skb, struct tc_action *a, int, int);
  int tcf_action_dump_1(struct sk_buff *skb, struct tc_action *a, int, int);
++<<<<<<< HEAD
++=======
+ 
+ static inline void tcf_action_update_bstats(struct tc_action *a,
+ 					    struct sk_buff *skb)
+ {
+ 	bstats_cpu_update(this_cpu_ptr(a->cpu_bstats), skb);
+ }
+ 
+ static inline struct gnet_stats_queue *
+ tcf_action_get_qstats(struct tc_action *a)
+ {
+ 	return this_cpu_ptr(a->cpu_qstats);
+ }
+ 
+ static inline void tcf_action_inc_drop_qstats(struct tc_action *a)
+ {
+ 	qstats_drop_inc(this_cpu_ptr(a->cpu_qstats));
+ }
+ 
+ static inline void tcf_action_inc_overlimit_qstats(struct tc_action *a)
+ {
+ 	qstats_overlimit_inc(this_cpu_ptr(a->cpu_qstats));
+ }
+ 
+ void tcf_action_update_stats(struct tc_action *a, u64 bytes, u32 packets,
+ 			     bool drop, bool hw);
++>>>>>>> 26b537a88ca5 (net: sched: extract qstats update code into functions)
  int tcf_action_copy_stats(struct sk_buff *, struct tc_action *, int);
  
  int tcf_action_check_ctrlact(int action, struct tcf_proto *tp,
* Unmerged path net/sched/act_ct.c
* Unmerged path include/net/act_api.h
diff --git a/net/sched/act_csum.c b/net/sched/act_csum.c
index 209377dabe2f..a1aad0775084 100644
--- a/net/sched/act_csum.c
+++ b/net/sched/act_csum.c
@@ -628,7 +628,7 @@ static int tcf_csum_act(struct sk_buff *skb, const struct tc_action *a,
 	return action;
 
 drop:
-	qstats_drop_inc(this_cpu_ptr(p->common.cpu_qstats));
+	tcf_action_inc_drop_qstats(&p->common);
 	action = TC_ACT_SHOT;
 	goto out;
 }
* Unmerged path net/sched/act_ct.c
diff --git a/net/sched/act_gact.c b/net/sched/act_gact.c
index c0e921d63e64..bcdaddba51e9 100644
--- a/net/sched/act_gact.c
+++ b/net/sched/act_gact.c
@@ -167,7 +167,7 @@ static int tcf_gact_act(struct sk_buff *skb, const struct tc_action *a,
 #endif
 	bstats_cpu_update(this_cpu_ptr(gact->common.cpu_bstats), skb);
 	if (action == TC_ACT_SHOT)
-		qstats_drop_inc(this_cpu_ptr(gact->common.cpu_qstats));
+		tcf_action_inc_drop_qstats(&gact->common);
 
 	tcf_lastuse_update(&gact->tcf_tm);
 
diff --git a/net/sched/act_mirred.c b/net/sched/act_mirred.c
index e6cee7103d5b..398866e09b4e 100644
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@ -307,7 +307,7 @@ static int tcf_mirred_act(struct sk_buff *skb, const struct tc_action *a,
 
 	if (err) {
 out:
-		qstats_overlimit_inc(this_cpu_ptr(m->common.cpu_qstats));
+		tcf_action_inc_overlimit_qstats(&m->common);
 		if (tcf_mirred_is_act_redirect(m_eaction))
 			retval = TC_ACT_SHOT;
 	}
diff --git a/net/sched/act_vlan.c b/net/sched/act_vlan.c
index 40cc935e5146..4f45981ea18d 100644
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@ -92,7 +92,7 @@ static int tcf_vlan_act(struct sk_buff *skb, const struct tc_action *a,
 	return action;
 
 drop:
-	qstats_drop_inc(this_cpu_ptr(v->common.cpu_qstats));
+	tcf_action_inc_drop_qstats(&v->common);
 	return TC_ACT_SHOT;
 }
 
