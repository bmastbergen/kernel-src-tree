devlink: Change devlink health locking mechanism

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Moshe Shemesh <moshe@mellanox.com>
commit b587bdaf5f820cf7dac2c1b351db97bf98e1f427
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/b587bdaf.failed

The devlink health reporters create/destroy and user commands currently
use the devlink->lock as a locking mechanism. Different reporters have
different rules in the driver and are being created/destroyed during
different stages of driver load/unload/running. So during execution of a
reporter recover the flow can go through another reporter's destroy and
create. Such flow leads to deadlock trying to lock a mutex already
held.

With the new locking mechanism the different reporters share mutex lock
only to protect access to shared reporters list.
Added refcount per reporter, to protect the reporters from destroy while
being used.

	Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Acked-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b587bdaf5f820cf7dac2c1b351db97bf98e1f427)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/devlink.c
diff --cc net/core/devlink.c
index 23d88c10ef8b,d43bc52b8840..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -5186,32 -5233,36 +5231,40 @@@ static const struct genl_ops devlink_nl
  	},
  	{
  		.cmd = DEVLINK_CMD_HEALTH_REPORTER_GET,
 -		.validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
  		.doit = devlink_nl_cmd_health_reporter_get_doit,
  		.dumpit = devlink_nl_cmd_health_reporter_get_dumpit,
++<<<<<<< HEAD
 +		.policy = devlink_nl_policy,
 +		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK,
++=======
+ 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK |
+ 				  DEVLINK_NL_FLAG_NO_LOCK,
++>>>>>>> b587bdaf5f82 (devlink: Change devlink health locking mechanism)
  		/* can be retrieved by unprivileged users */
  	},
  	{
  		.cmd = DEVLINK_CMD_HEALTH_REPORTER_SET,
 -		.validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
  		.doit = devlink_nl_cmd_health_reporter_set_doit,
 +		.policy = devlink_nl_policy,
  		.flags = GENL_ADMIN_PERM,
- 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK,
+ 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK |
+ 				  DEVLINK_NL_FLAG_NO_LOCK,
  	},
  	{
  		.cmd = DEVLINK_CMD_HEALTH_REPORTER_RECOVER,
 -		.validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
  		.doit = devlink_nl_cmd_health_reporter_recover_doit,
 +		.policy = devlink_nl_policy,
  		.flags = GENL_ADMIN_PERM,
- 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK,
+ 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK |
+ 				  DEVLINK_NL_FLAG_NO_LOCK,
  	},
  	{
  		.cmd = DEVLINK_CMD_HEALTH_REPORTER_DIAGNOSE,
 -		.validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
  		.doit = devlink_nl_cmd_health_reporter_diagnose_doit,
 +		.policy = devlink_nl_policy,
  		.flags = GENL_ADMIN_PERM,
- 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK,
+ 		.internal_flags = DEVLINK_NL_FLAG_NEED_DEVLINK |
+ 				  DEVLINK_NL_FLAG_NO_LOCK,
  	},
  	{
  		.cmd = DEVLINK_CMD_HEALTH_REPORTER_DUMP_GET,
diff --git a/include/net/devlink.h b/include/net/devlink.h
index f8fe1084ed04..0b2cb4339f3e 100644
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@ -32,6 +32,7 @@ struct devlink {
 	struct list_head region_list;
 	u32 snapshot_id;
 	struct list_head reporter_list;
+	struct mutex reporters_lock; /* protects reporter_list */
 	struct devlink_dpipe_headers *dpipe_headers;
 	const struct devlink_ops *ops;
 	struct device *dev;
* Unmerged path net/core/devlink.c
