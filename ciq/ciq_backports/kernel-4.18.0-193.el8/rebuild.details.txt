Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 14205
Number of commits matched with upstream: 14081 (99.13%)
Number of commits in upstream but not in rpm: 474182
Number of commits NOT found in upstream: 124 (0.87%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-193.el8 for kernel-4.18.0-193.el8
Clean Cherry Picks: 11450 (81.32%)
Empty Cherry Picks: 2454 (17.43%)
_______________________________

__EMPTY COMMITS__________________________
f655f40537916d4b1d6d1a023a778697c75a4fe2 mm/percpu: add checks for the return value of memblock_alloc*()
fce86ff5802bac3a7b19db171aa1949ef9caac31 mm/huge_memory: fix vmf_insert_pfn_{pmd, pud}() crash, handle unaligned addresses
3feb9b23bf4cbf9f34568035170c6f1c25416523 net: phy: Move of_set_phy_eee_broken to phy-core.c
0f3b1cf23f0ee72017ee6daebcf6cbe601be8bee net: phy: fix reading fixed phy status
22c0ef6b1475aef4765efc4aa764b8580018123c net: phy: improve pause handling
fdcd06a8ab775cbe716ff893372bed580e4c8a1c arch: Use asm-generic header for asm/mmiowb.h
420af1554790a95e6813f56f63b6d2361614082b powerpc/mmiowb: Hook up mmwiob() implementation to asm-generic code
b012980d1c6e27f5c4adf0c19defca8658956820 riscv/mmiowb: Hook up mmwiob() implementation to asm-generic code
915530396c788d75c40f200edd67b56ac363c728 Documentation: Kill all references to mmiowb()
fb24ea52f78e0d595852e09e3a55697c8f442189 drivers: Remove explicit invocations of mmiowb()
01e3b958efe85a26d9b1b77be3a0a1491bb4cb36 arch: Remove dummy mmiowb() definitions from arch code
5f5e4eb4fb2d6c09db18dc431a0c4a3b11ff5bae IB/hfi1: Remove extra brackets from an if
9a4a5118644e41ac9da7fa7d87ff3b09e61304de xfs: refactor AGI unlinked bucket updates
f2fc16a3d7c12224d4c19055fef40ca6379b2045 xfs: refactor inode unlinked pointer update functions
23ffa52cc792813bda35fd7bbaa87df8540d4bcb xfs: refactor unlinked list search and mapping to a separate function
b1d2a068ea631891ae7a0b19c37ff8a5bf0f6af4 xfs: refactor inode update in iunlink_remove
4664c66c91a14019551b9ba8b2998fa3b5f69499 xfs: add tracepoints for high level iunlink operations
9b2471797942a5947664818cfe2c6de93b43f37a xfs: cache unlinked pointers in an rhashtable
c8b54673b30a9668d626a9e48d1659c21300f2a4 xfs: factor out two helpers from xfs_bmapi_write
6772c1f11206f270af56d62bc26737864a63608a xfs: track metadata health status
519841c207de9926418d2f39e162097088478781 xfs: clear BAD_SUMMARY if unmounting an unhealthy filesystem
c23232d409355091502a362e99ed06f800765961 xfs: report fs and rt health via geometry structure
1302c6a24fd952555aa6dc811cec5b2a22ac386a xfs: report AG health via AG geometry ioctl
89d139d5ad465e35a9c602421eb1a1ff08ea530d xfs: report inode health via bulkstat
cb357bf3d105f68ff5a5adcf89f1b285da675e2f xfs: implement per-inode writeback completion queues
3994fc48957520df061990ed22fff96023cfd953 xfs: merge adjacent io completions of the same type
a247373596677bd38a88fcaf1606be51a44c614d xfs: simplify xfs_chain_bio
adfb5fb46af059387eca0fce1d8cd8733f9ee3a0 xfs: implement cgroup aware writeback
49fe9a5d16386310b15abcfe47343c26c3cc05f2 KVM: selftests: Move kvm_create_max_vcpus test to generic code
a049a377164c3eca7d5323cd9896b64d2120c415 KVM: selftests: Enable dirty_log_test on s390x
152e9b8676c6e788c6bff095c1eaae7b86df5003 s390/vtime: steal time exponential moving average
b8580e9de48bf32b884910d22330ef2fa027cf01 PCI: Add HXT vendor ID
a2818ee4dce575b299d8a7f46b393bc2b02ef1f4 selftests/livepatch: introduce tests
86e43f23c17126e32820a1b37d747d06f3056570 livepatch: return -ENOMEM on ptr_id() allocation failure
49ee4dd2e753cd13d157361d4bd28b548e3d0ee7 livepatch: Proper error handling in the shadow variables selftest
fbb76d579dff4a2e332566dcd1d5979ac92bc34b livepatch/selftests: use "$@" to preserve argument list
abfe3c4560684864f66641438fee3075de098e89 selftests/livepatch: use TEST_PROGS for test scripts
802c2471607919f57d7d1f83f0fddd925309e97c selftests/livepatch: Add functions.sh to TEST_PROGS_EXTENDED
527d37e9e575bc0e9024de9b499385e7bb31f1ad selftests/livepatch: add test skip handling
fbb01c52471c8fb4ec2422c0ab26c134bd90bbff selftests/livepatch: push and pop dynamic debug config
00e23707442a75b404392cef1405ab4fd498de6b iov_iter: Use accessor function
aa563d7bca6e882ec2bdae24603c8f016401a144 iov_iter: Separate type from direction and use accessor functions
9ea9ce0427aab02a2fd88fc608267cf6952119f1 iov_iter: Add I/O discard iterator
2cbfdf4df58330f6cb493500387427dae1c5551d iov_iter: Fix 9p virtio breakage
875f1d0769cdcfe1596ff0ca609b453359e42ec9 iov_iter: add ITER_BVEC_FLAG_NO_REF flag
399254aaf4892113c806816f7e64cf40c804d46d block: add BIO_NO_PAGE_REF flag
39036cd2727395c3369b1051005da74059a85317 arch: add pidfd and io_uring syscalls everywhere
f5eb4d3b92a6a1096ef3480b54782a9409281300 iov_iter: fix iov_iter_type
87e5e6dab6c2a21fab2620f37786276d202e2ce0 uio: make import_iovec()/compat_import_iovec() return bytes on success
9d93a3f5a0c0d0f79aebc597d47c7cedc852aeb5 io_uring: punt short reads to async context
9e645e1105ca60fbbc6bddf2fd5ef7e57ed3dca8 io_uring: add support for sqe links
97abc889ee296faf95ca0e978340fb7b942a3e32 signal: remove the wrong signal_pending() check in restore_user_sigmask()
f7b76ac9d17e16e44feebb6d2749fec92bfd6dd4 io_uring: fix counter inc/dec mismatch in async_list
d0ee879187df966ef638031b5f5183078d672141 io_uring: fix KASAN use after free in io_sq_wq_submit_work
a982eeb09b6030e567b8b815277c8c9197168040 io_uring: fix an issue when IOSQE_IO_LINK is inserted into defer list
ac499fba98c3c65078fd84fa0a62cd6f6d5837ed docs: ipmb: place it at driver-api and convert to ReST
be068fa236c3d697c77f02f3dc9cd7afeb0538a6 vfio/type1: Handle different mdev isolation type
bea964107fa78ffe484ef8659ecc26f9ae2bcd2f net: Add IANA_VXLAN_UDP_PORT definition to vxlan header file
acdcecc61285faed359f1a3568c32089cc3a8329 udp: correct reuseport selection with connected sockets
e74deb11931ff682b59d5b9d387f7115f689698e x86/uaccess: Introduce user_access_{save,restore}()
39ea9baffda91df8bfee9b45610242a3191ea1ec x86/fpu: Remove fpu->initialized usage in __fpu__restore_sig()
2722146eb78451b30e4717a267a3a2b44e4ad317 x86/fpu: Remove fpu->initialized
4ee91519e1dccc175665fe24bb20a47c6053575c x86/fpu: Add an __fpregs_load_activate() internal helper
07baeb04f37c952981d63359ff840118ce8f5434 x86/fpu: Make __raw_xsave_addr() use a feature number instead of mask
abd16d68d65229e5acafdadc32704239131bf2ea x86/fpu: Use a feature number instead of mask in two more helpers
0cecca9d03c964abbd2b7927d0670eb70db4ebf2 x86/fpu: Eager switch PKRU state
383c252545edcc708128e2028a2318b05c45ede4 x86/entry: Add TIF_NEED_FPU_LOAD
926b21f37b072ae4c117052de45a975c6d468fec x86/fpu: Restore from kernel memory on the 64-bit path too
c2ff9e9a3d9d6c019394a22989a228d02970a8b1 x86/fpu: Merge the two code paths in __fpu__restore_sig()
5f409e20b794565e2d60ad333e79334630a6c798 x86/fpu: Defer FPU state load until return to userspace
1d731e731c4cd7cbd3b1aa295f0932e7610da82f x86/fpu: Add a fastpath to __fpu__restore_sig()
8d3289f2fa1e0c7e2f72c7352f1efb75d2ad7c76 x86/fpu: Don't use current->mm to check for a kthread
e751732486eb3f159089a64d1901992b1357e7cc KVM: X86: Fix fpu state crash in kvm guest
a8318c13e79badb92bc6640704a64cc022a6eb97 powerpc/tm: Fix restoring FP/VMX facility incorrectly on interrupts
70479b71bc80ae6f63c8d6644cc76dff99f79686 nvme-pci: tidy up nvme_map_data
f924cddebc900f7cb10d5538d69523e558fa681c block: remove blk_init_request_from_bio
483178f38cbe55a0b1854a93ceef715a0fc2ef9f nvme-pci: remove queue_count_ops for write_queues and poll_queues
f79d5fda4ea08c33a114087573d86f703149ee0e nvme: enable to inject errors into admin commands
66b20ac0a1a10769d059d6903202f53494e3d902 nvme: fix multipath crash when ANA is deactivated
b9156daeb1601d69007b7e50efcf89d69d72ec1d nvme: fix a possible deadlock when passthru commands sent to a multipath device
7df4e36a4785618f0c63f3dc2bacb164780ab0f6 perf session: Replace MAX_NR_CPUS with perf_env::nr_cpus_online
df552793493ff83b2b7289389d29d417b3ef6d6d libperf: Warn when exceeding MAX_NR_CPUS in cpumap
74ba9207e1adf1966c57450340534ae9742d00af treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 61
588f2e2caf6795ca29d50a45ea1e1438274e75e0 ALSA: firewire-lib: obsolete ctx_data.tx.first_dbc with CIP_UNALIGHED_DBC flag
ab75481202d2925a017e4cb5407b0bb49c356de8 ALSA: firewire-lib: pass data block counter to data block processing layer
860d798c370409efbedf66bae2d41b3cbdf14a79 ALSA: firewire-lib: operate data block counter in top level of processing for IT context
a35463d1f77d9e5244d6f4953d3c7f3a27c7625e ALSA: firewire-lib: operate data block counter in top level of processing for IR context
3baf30532f94030244a31a275b546d042656c535 ALSA: firewire-lib: add syt_override member for some protocols
600c8018df605a91575aef6811cf927e2d933d30 ALSA: firewire-lib: pass no syt information to data block processing layer
f4f6ae7b7c1fdbaaaecafd183fabcf5314df2b59 ALSA: firewire-lib: use packet descriptor for IT context
753e717986c24b60962367708479555212730b9f ALSA: firewire-lib: use packet descriptor for IR context
5e2ece0fdceb02f6c47f53bef309395701a65393 ALSA: firewire-lib: code refactoring to process PCM substream
0f5cfcb24d9c931e4571e9995bbfc08cc76d5d4a ALSA: firewire-lib: code refactoring to process context payloads
d2c104a3426be9991b35c65f0f260a107c4b2942 ALSA: firewire-lib: pass packet descriptor to data block processing layer
9fc90644cae9c0abfcce0576ed0a14cca67f69b9 ALSA: firewire-lib: code refactoring for AM824 data block processing layer
bb473966774a79ae9a826f721059496d9b393acc ALSA: firewire-digi00x: code refactoring for DOT data block processing layer
806653b70ee21b374d2844d144609b2e0070a86b ALSA: firewire-tascam: code refactoring for TASCAM data block processing layer
00d004db6493c62b8bbd7073a9b3b7290cbe0cea ALSA: firewire-motu: code refactoring for MOTU data block processing layer
4731c672c930e490515f1747fb34d56d61ae57ac ALSA: fireface: code refactoring for FF data block processing layer
9a738ad1b1a64ef6d8271d8d42d715b75db6eb0d ALSA: firewire-lib: process payload of isoc context according to packet descriptors
d2d5a6b0253d30ef04d513447cdd00df4fa627c3 ALSA: firewire-motu: more code refactoring for MOTU data block processing layer
6261f90bdb0b605ffb158717ec7a03b1753aded5 ALSA: firewire-lib: add a kernel API to stop a couple of AMDTP streams in AMDTP domain
157a53eef6a016e6938d9fd266b85221fcd4eaa3 ALSA: firewire-lib: add a kernel API to add AMDTP stream into AMDTP domain
9b4702b06c0e25abc612e6f02f3e25a51c684a01 ALSA: firewire-lib: add a kernel API to start AMDTP streams in AMDTP domain
94491c175d6bf4b838043a3fb5adabd731d8fbab ALSA: fireworks: code refactoring for initialization/destruction of AMDTP streams
db40eeb2469fef4efe26789ea2596372ee43ae2f ALSA: fireworks: support AMDTP domain
f155e79ab516c9ed2adb2f337fb4ff58b7474428 ALSA: firewire-lib: fix isoc cycle count to which rx packet is scheduled
2b27bdcc20958d644d04f9f12d683e52b37a5427 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 336
9952f6918daa4ab5fc81307a9f90e31a4df3b200 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 201
8e82fe2ab65a80b1526b285c661ab88cc5891e3a treewide: fix typos of SPDX-License-Identifier
97fb5e8d9b57f10f294303c9a5d1bd033eded6bf treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 284
08a5841e3a109f9ea7bfa9c64109aefa95a318c7 ASoC: soc-core: use snd_soc_dai_link_component for CPU
0779935938b1b6f492f019764bc7dda77bb08ec9 ASoC: Remove erroneous soc_cleanup_card_resources() call
8b209cdb696f49f7f5d6c1922bed435e54631ddd ASoC: remove w90x900/nuc900 platform drivers
adb76b5b9c4740a11f6ad6c68764515961ae8ade ASoC: soc-core: remove legacy style dai_link
1d76898928783d79bfd7c465e891b6cf957c839a ASoC: soc-core: allow no Platform on dai_link
7d7db5d3c3d849c2f877be3b4c9afa7f5b5257c2 ASoC: soc-core: move soc_find_component()
c1e230f0f7a3cc640317aa78389258a2fa54bcde ASoC: soc-core: soc_find_component() uses snd_soc_dai_link_component
e3303268f9cfa4eb7c2217df471417d4327109fd ASoC: soc-core: don't use soc_find_component() at snd_soc_find_dai()
34614739988ad60c3493da66dd856002ee93edf9 ASoC: soc-core: support dai_link with platforms_num != 1
aa6166c2ac28392d64f2d8b3acfb56c8fe657147 ASoC: soc-dai: mv soc_dai_hw_params() to soc-dai
846faaed9df7899e74311db3aec0a41a2f6bc345 ASoC: soc-dai: add snd_soc_dai_hw_free()
5a52a04531486e2ab069b7882432c8b266db36e6 ASoC: soc-dai: add snd_soc_dai_startup()
330fcb5135e0588b1ea3b0bbab587d1317c1cf7b ASoC: soc-dai: add snd_soc_dai_shutdown()
4beb8e109d30d339d44308a767dd6f5614492f3e ASoC: soc-dai: add snd_soc_dai_prepare()
95aef35533844f35544851b0cdc1fc154b603307 ASoC: soc-dai: add snd_soc_dai_trigger()
5c0769af4caf8fbdad2e9c0051ab0081b8e22b0a ASoC: soc-dai: add snd_soc_dai_bespoke_trigger()
1dea80d4b2bd3b53c58f008ca2bcd73182583711 ASoC: soc-dai: add snd_soc_dai_delay()
e0f2262292d0c8160cfd9a8c40425107fb65ab29 ASoC: soc-dai: add snd_soc_dai_suspend()
24b09d051164680f0a1d1910efe21ce36ad5c1ca ASoC: soc-dai: add snd_soc_dai_resume()
cfd9b5fbfe1e8763018aea2600aa0d6ff015ebfc ASoC: soc-dai: add snd_soc_dai_probe()
dcdab5820edd6123911dbd767ee1e389008b6a83 ASoC: soc-dai: add snd_soc_dai_remove()
b423c4202135f7794e0a9c55a884f5933d8e7156 ASoC: soc-dai: add snd_soc_dai_compress_new()
467fece8fbc6774a3a3bd0981e1a342fb5022706 ASoC: soc-dai: move snd_soc_dai_stream_valid() to soc-dai.c
d5fcaaba54ce729a018e50938aa6d355cffc7ef4 ASoC: Intel: Skylake: Use recommended SDxFMT programming sequence
68c907f10cd816cad2287167a1a1d77914a6d466 ASoC: codec2codec: run callbacks in order
3dcfb397dad2ad55bf50de3c5d5a57090d35a18a ASoC: codec2codec: deal with params when necessary
c8415833ec242b9ddf73bf9e1057e12f9b0fcd16 ASoC: codec2codec: fix missing return of error return code
1802d0beecafe581ad584634ba92f8a471d8a63a treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 174
bcc2a2dc3ba8c3a7aed856f840afa6a47e3cb8e0 ASoC: Intel: Skylake: Merge skl_sst and skl into skl_dev struct
a342031cdd0818cb0fbcb44798211c7a02c7ca27 ASoC: create pcm for codec2codec links as well
a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0 ASoC: codec2codec: remove ephemeral variables
9de98628c895d15427138073986eab1e3ce39cb4 ASoC: codec2codec: fill some of the runtime stream parameters
4ff1fef10f353b928bcc9d56d31fda53f2c43191 ASoC: add soc-component.c
4a81e8f30d0b422b7f10562952124d719f73b071 ASoC: soc-component: add snd_soc_component_get/put()
ae2f4849286eed48a3aa79a7b73bb5bcd0c9213b ASoC: soc-component: add snd_soc_component_open()
3672beb8cad6beb7b8c017514aef0f4f507debcf ASoC: soc-component: add snd_soc_component_close()
6d53723380ed73a2ced648d6e92774b39e5af1bd ASoC: soc-component: add snd_soc_component_prepare()
245c539a1206d74e8508a07550fb7c99d0817b8c ASoC: soc-component: add snd_soc_component_hw_params()
eae7136aa2083699c69de5890fd6c32c501952b5 ASoC: soc-component: add snd_soc_component_hw_free()
5693d50c830272cb3c4a04d2ce4db502debd1259 ASoC: soc-component: add snd_soc_component_trigger()
66c51573b89d0a5c1089139a2f0dd029a755c37d ASoC: soc-component: add snd_soc_component_suspend()
9a840cbac77a90e8406296aaa132ebf2c84ed9e3 ASoC: soc-component: add snd_soc_component_resume()
e40fadbcef583808c11d2e86b8ac1c652731468e ASoC: soc-component: add snd_soc_component_is_suspended()
08e837dd9e39bd3e25b1fa1a13f6ba44040e3f0d ASoC: soc-component: add snd_soc_component_probe()
03b34dd7d87ce3493cb1837c9e59c3b3aac4724f ASoC: soc-component: add snd_soc_component_remove()
2c7b1704819435d188c7697c6815f788bf9e6200 ASoC: soc-component: add snd_soc_component_of_xlate_dai_id()
a2a341752558cc67d6fe5c8ada7c16f9c3690f89 ASoC: soc-component: add snd_soc_component_of_xlate_dai_name()
9d415fbf773f162a5c274e671741c6fa94b74287 ASoC: soc-component: move snd_soc_component_seq_notifier()
8e2a990d76aced95c6f01c2d67d8835c86f0ca67 ASoC: soc-component: move snd_soc_component_stream_event()
7951b14611851bdae18e9bca18015b1d84731d0d ASoC: soc-component: move snd_soc_component_set_bias_level()
0035e2565b93e0902a06320ba1716bc1ddd753b3 ASoC: soc-component: add snd_soc_pcm_component_pointer()
96a47908d8769479f5217bf3f432ccdc06a29747 ASoC: soc-component: add snd_soc_pcm_component_ioctrl()
82d81f5cced36e480b581ae51c595e2deb9f2d56 ASoC: soc-component: add snd_soc_pcm_component_copy_user()
9c712e4f57229081e837d593fc1e4183b068a41c ASoC: soc-component: add snd_soc_pcm_component_page()
205875e1a12ef9c61e939db9ded90fe3f6352e75 ASoC: soc-component: add snd_soc_pcm_component_mmap()
7484291e9b7564af65b2581dcdebeeaf98bc86d0 ASoC: soc-component: add snd_soc_pcm_component_pcm_new()
79776da0989733a5bac0a1e635e3a284c3f5c745 ASoC: soc-component: add snd_soc_pcm_component_pcm_free()
36004c42c761a6d95b867a4fbb9a955034e53351 ASoC: Intel: Skylake: large_config_get overhaul
19abfefd4c7604993d1c31e098a3f48bdafe334d ALSA: hda: Direct MMIO accesses
d8ca7a0a8583fc491b625450580c4092879af3dd ASoC: soc-core: call snd_soc_dapm_debugfs_init() at soc_init_card_debugfs()
b3da42519c3e6ad977af844d61c31d0e5f874f1c ASoC: soc-core: tidyup for card->deferred_resume_work
0e36f36b04e7677c6b74349c9d4baea1ed5668f2 ASoC: soc-core: fix module_put() warning in soc_cleanup_component
3dc29b8b2062075602c7aff1514a120b4ed0187f ASoC: soc-core: support snd_soc_dai_link_component for aux_dev
a48b561d873d1d9fda55782d275eff94ec647863 ASoC: soc-core: remove legacy style of aux_dev
b03bfaec1d52123d5d941488f71e06964535e471 ASoC: soc-core: merge snd_soc_initialize_card_lists()
0cc33cecb4a1de5b55d382b8e24a128a3551a031 ASoC: Intel: Skylake: Print module type instead of id
096769ea95380ef3048765aef676e8947bc368d4 ASoC: Intel: Skylake: Remove static table index when parsing topology
f2a167ca681d21aa46f127032cc005879c328823 ASoC: Intel: Skylake: Remove MCPS available check
e5c29dc5221c328b6e54c5b2aba1feca4003c051 ASoC: Intel: Skylake: Remove memory available check
6f43791713c5bb1212ec8497034275dfdbba5cbd ASoC: Intel: Skylake: Release topology when we are done with it
ffd60fba19d9752f553aac367cd40362011ab6c9 ASoC: soc-core: move soc_probe_component() position
b614beafa495c7f6fbc15cb6977e3fe48beea1e5 ASoC: soc-core: dapm related setup at one place
95c267dd20431f0eb54ca204bd73a7d85c532a37 ASoC: soc-core: add snd_soc_dapm_init()
a7d44f78063d642406132c2ed1dc6033d0d03cfe ASoC: soc-core: move soc_probe_dai() next to soc_remove_dai()
bee886f1ea9d9e58bef8204c543a409c399f8744 ASoC: soc-core: self contained soc_bind_aux_dev()
4893a2eb34a9722501915a0b75844aa11956c10d ASoC: soc-core: add soc_unbind_aux_dev()
e8fbd2505242467044ec51bf57c642a50ed28a14 ASoC: soc-core: self contained soc_unbind_aux_dev()
53eff75e5f4dd4b9bc489955fdc60fde48d85e93 ALSA: hda: Drop export of snd_hdac_bus_add/remove_device()
ddf7cb83b0f45feb94ad89a987f600c766c463ca ALSA: hda: Unexport a few more stuff
01ec57a4371e573bfcfa898307af098a8c6f9dcf ASoC: wm_adsp: Allow bus error handler to be called directly
d4e23b7c87e3439f6d0ec0c65ad7f919d6f4c124 ASoC: Intel: Skylake: Do not disable FW notifications
c1ae5e7f057beb1daa72831ab22ec06e71669af7 ALSA: usb-audio: Unify audioformat release code
b49773e7bcf316f238f6709ad9e1999dcc3ed433 block: Disable write plugging for zoned block devices
d3833a7010817f82bff373e26d146e6401c695f4 powerpc/fadump: introduce callbacks for platform specific operations
41a65d1618238e63be1439871eaf44dc3c6a737c pseries/fadump: define RTAS register/un-register callback functions
109f25cc5fae5f8fb403d925f7b3731f6f18218a powerpc/fadump: add source info while displaying region contents
f35120115b767c49ad8de56dd78c86540a14df5b pseries/fadump: move out platform specific support from generic code
1679b96e69ec2e10ccd9d82b691ade0b16cb64d1 powerpc/fadump: use FADump instead of fadump for how it is pronounced
6f5f193e84d3d7b55d406ecc7ac4ea1ef1d1876f powerpc/opal: add MPIPL interface definitions
41df5928721ff4b5f83767cd5e8b77862fc62bb3 powerpc/fadump: add fadump support on powernv
6abec12c65e8870d8cafe154a86240fe0bcdd4f7 powerpc/fadump: improve fadump_reserve_mem()
742a265accd3e3afcc8e7b17f409c93c1de8be85 powerpc/fadump: register kernel metadata address with opal
2790d01d1e1d22735d848eec55668f7d44417e22 powerpc/fadump: reset metadata address during clean up
a20a8fa42def548f46c7e0401a94f62b8e595883 powerpc/fadump: define OPAL register/un-register callback functions
51bba8edef90cf579dba16de912d3ef809fe1d77 powerpc/fadump: support copying multiple kernel boot memory regions
2a1b06dd3a17ac278494da3c15cac84684346d22 powerpc/fadump: process the crashdump by exporting it as /proc/vmcore
6071e8f9d5ac960f0d35495f070d4d0b7ae5fc76 powerpc/fadump: Warn before processing partial crashdump
a4e2e2ca2f7bddf6d5d788033cc56f40af6e9c5a powerpc/fadump: handle invalidation of crashdump and re-registraion
fbcafdaea2e234d3c6d79e7f5605a2e8373f6678 powerpc/fadump: Update documentation about OPAL platform support
579ca1a27675485a99da50cd7fedc14232f817c3 powerpc/fadump: make use of memblock's bottom up allocation mode
5000a17afbd56b4e58b7f72ac77eabb92c418412 powerpc/fadump: process architected register state data provided by firmware
e4fc48fb4d34f7e7d42eb980a9c130bb93aba3b9 powerpc/fadump: make crash memory ranges array allocation generic
dda9dbfeeb7a855a75965b8ba7269f4edb35cde7 powerpc/fadump: consider reserved ranges while releasing memory
b2a815a554a34f0e6fab4526ae762d5528783600 powerpc/fadump: improve how crashed kernel's memory is reserved
bec53196adf4791d466adf0e339b61186c7b5283 powerpc/fadump: add support to preserve crash data on FADUMP disabled kernel
58cf055df47bb115e7c1533eec2a8f66639b80e3 powerpc/fadump: update documentation about CONFIG_PRESERVE_FA_DUMP
6f713d18144ce86c9f01cdf64222d6339e26129e powerpc/opalcore: export /sys/firmware/opal/core for analysing opal crashes
845426f3f3443c3f60737751b7af0142e3020f08 powerpc/opalcore: provide an option to invalidate /sys/firmware/opal/core file
7b1b3b48250acbfd7f15ba950d4654b7f02a8300 powerpc/fadump: consider f/w load area
b3bba79d5a7ba27bf7e31e124afbcb386128f2c6 powerpc/fadump: update documentation about option to release opalcore
becd91d9c5467160984a0380df72fdf71fee82f6 powerpc/fadump: remove RMA_START and RMA_END macros
7dee93a9a8808b3d8595e1cc79ccb8b1a7bc7a77 powerpc/fadump: support holes in kernel boot memory area
b27507bb59ed504d7fa4d6a35f25a8cc39903b54 net/ibmvnic: unlock rtnl_lock in reset so linkwatch_event can run
7ed5b31f4a6695a21f617df07646e9b15c6c1d29 net/ibmvnic: prevent more than one thread from running in reset
b3dae109fa89d67334bf3349babab3ad9b6f233f sched/swait: Rename to exclusive
c0ad4aa4d8416a39ad262a2bd68b30acd951bf0e sched/fair: Robustify CFS-bandwidth timer locking
24acfb71822566e4d469b4992a7b3b9f873e0083 workqueue: Use normal rcu
6aa140fa4508933a6ac6717d65a403eb904d6c02 sched/topology: Reference the Energy Model of CPUs when available
b68a4c0dba3b1e1dda1ede49f3c2fc72d3b54567 sched/topology: Disable EAS on inappropriate platforms
531b5c9f5cd05ead53324f419b32685a22eebe8b sched/topology: Make Energy Aware Scheduling depend on schedutil
1f74de8798c93ce14801cc4e772603e51c841c33 sched/toplogy: Introduce the 'sched_energy_present' static key
630246a06ae2a7a12d1fce85f1e5681032982791 sched/fair: Clean-up update_sg_lb_stats parameters
2802bf3cd936fe2c8033a696d375a4d9d3974de4 sched/fair: Add over-utilization/tipping point indicator
8d5d0cfb63cbcb4005e19a332b31d687b1d01e58 sched/topology: Introduce a sysctl for Energy Aware Scheduling
31bc6aeaab1d1de8959b67edbed5c7a4b3cdbe7c sched/fair: Optimize update_blocked_averages()
d0fe0b9c45c144e4ac60cf7f07f7e8ae86d3536d sched/fair: Simplify post_init_entity_util_avg() by calling it with a task_struct pointer argument
e2abb398115e9c33f3d1e25bf6d1d08badc58b13 sched/fair: Remove unneeded prototype of capacity_of()
b401ec18485ab95c49c160b170514f7ab0f8f774 mm: Replace call_rcu_sched() with call_rcu()
aacb5d91ab1bfbb0e8123da59a2e333d52ba7f60 srcu: Use "ssp" instead of "sp" for srcu_struct pointer
fd897573fa4cfe66ebddf5f4444f36710cf0cad0 rcu: Improve diagnostics for failed RCU grace-period start
1d1f898df6586c5ea9aeaf349f13089c6fa37903 rcu: Do RCU GP kthread self-wakeup from softirq and interrupt
f41c322f17ec4aa809222dc352439d80862c175b selftests: Remove KSFT_TAP_LEVEL
5821ba969511daf27fa917515904f7b823259cf7 selftests: Add test plan API to kselftest.h and adjust callers
75c84151a9dc7a755c607e6761d8f14a1690dbf0 SUNRPC: Rename xprt->recv_lock to xprt->queue_lock
edc81dcd5b7f699c4049042b35c904396642032e SUNRPC: Refactor xprt_transmit() to remove the reply queue code
7f3a1d1e1806a0eb9b200e3aed2a04431f2bcc6a SUNRPC: Refactor xprt_transmit() to remove wait for reply code
ef3f54347f690d06649c0d7a1f63d3410b3d08d3 SUNRPC: Distinguish between the slot allocation list and receive queue
944b042921a17d1a4e51bb05f8edf2b93d26e36f SUNRPC: Add a transmission queue for RPC requests
762e4e67b356ab7b8fbfc39bc07dc6110121505e SUNRPC: Refactor RPC call encoding
902c58872e1e9a2c146a55b0701c0b26cc5a4b24 SUNRPC: Fix up the back channel transmit
04b3b88fbfe63923ec1e9406efea7a889d148d8f SUNRPC: Don't reset the request 'bytes_sent' counter when releasing XPRT_LOCK
5f2f6bd98736f904c803912c5578db311c09fe89 SUNRPC: Simplify xprt_prepare_transmit()
dcbbeda836bc748e8fecd753b83d5b345ef8ec31 SUNRPC: Move RPC retransmission stat counter to xprt_transmit()
918f3c1fe83c5baa4892b943d3f5ac7191d8fb74 SUNRPC: Improve latency for interactive tasks
75891f502f5fc70f52a01af5b924384ed4866907 SUNRPC: Support for congestion control when queuing is enabled
86aeee0eb6c316e75d3b5d148177d4c01b81c977 SUNRPC: Enqueue swapper tagged RPCs at the head of the transmit queue
89f90fe1ad8bc7cde7f1859abdc392d02ee952de SUNRPC: Allow calls to xprt_transmit() to drain the entire transmit queue
c544577daddb618c7dd5fa7fb98d6a41782f020e SUNRPC: Clean up transport write space handling
adfa71446dd0943ba376eff3e05c7c89582f8038 SUNRPC: Cleanup: remove the unused 'task' argument from the request_send()
95f7691daa57bbd68caac2bdad79e0b08f4d46c1 SUNRPC: Convert xprt receive queue to use an rbtree
9d96acbc7f376dc1ffcedca0c349dd3389187a38 SUNRPC: Add a bvec array to struct xdr_buf for use with iovec_iter()
277e4ab7d530bf287e02b65cfcd3ea8f489784f6 SUNRPC: Simplify TCP receive code by switching to using iterators
c50b8ee02f1cb9506ac06d22e8414e9fef7d6890 SUNRPC: Clean up - rename xs_tcp_data_receive() to xs_stream_data_receive()
550aebfe1c573518c35ae85d6ffbdc2d44c92703 SUNRPC: Allow AF_LOCAL sockets to use the generic stream receive
71700bb96047f68a0aae3932466fc7c9ad5ce6c0 SUNRPC: Fix a memory leak in call_encode()
c443305529d1d3d3bee0d68fdd14ae89835e091f SUNRPC: Fix RPC receive hangs
16e5e90f0e4f9b7b2e4d08558a2f695e2fa1fb0d SUNRPC: Fix up handling of the XDRBUF_SPARSE_PAGES flag
26781eab48ece79000ffc4e69be402f2524e1137 SUNRPC: Treat EFAULT as a truncated message in xs_read_stream_request()
b76a5afdce6c6dacfbd51863b31b3d7cc61ca21e SUNRPC: Use the discard iterator rather than MSG_TRUNC
dfcf0380858b4e760ae02665649d884d1baa50c9 SUNRPC: Fix up socket polling
79462857eb547e5d17fc8445b9768615e02dc1cf SUNRPC: Don't force a redundant disconnection in xs_read_stream()
0445f92c5d537c173a54446b80d2052145de5148 SUNRPC: Fix disconnection races
abc13275771fac77e2d7b129c289522dacb644b6 SUNRPC: Remove xprt_connect_status()
a52458b48af142bcc2b72fe810c0db20cfae7fdd NFS/NFSD/SUNRPC: replace generic creds with 'struct cred'.
4aa5cffefa6f8af8f16490df58b8f0d827911b58 sunrpc: remove unused bc_up operation from rpc_xprt_ops
7ef88ff85ff71dd167d29d47bdb91c63cedcd554 sunrpc: remove svc_rdma_bc_class
c2c7d84fd173aff121ffd45cf15277eff43348d3 NFS: remove unnecessary test for IS_ERR(cred)
10e037d1e0d5d93cc057e4fad6911e481a462407 sunrpc: Add xprt after nfs4_test_session_trunk()
6a829eb8619fbdde6d7d627ad582fe119805f39d SUNRPC: Fix TCP receive code on archs with flush_dcache_page()
e7f45099442a380f8e087b6a8aadc36e887df1cc sunrpc: kernel BUG at kernel/cred.c:825!
97b78ae96ba76f4ca2d8f5afee6a2e567ccb8f45 SUNRPC: Ensure we respect the RPCSEC_GSS sequence number limit
deaa5c96c2f7e8b934088a1e70a0fe8797bd1149 SUNRPC: Address Kerberos performance/behavior regression
5582863f450ca44c472dbf4812a62f4e0e68b0c8 SUNRPC: Add XDR overflow trace event
7be9cea3600ba24f45733f823cb4ecb5a40f5db7 SUNRPC: Add trace event that reports reply page vector alignment
e8680a24a269bd6dcb533f4e4a5faba9ae58925c SUNRPC: Use struct xdr_stream when constructing RPC Call header
7f5667a5f8c4ff85b14ccce9d41f9244bd30ab68 SUNRPC: Clean up rpc_verify_header()
a0584ee9aed805446b044ce855e67264f0dc619e SUNRPC: Use struct xdr_stream when decoding RPC Reply header
0c77668ddb4e7bdfbca462c6185d154d0b8889ae SUNRPC: Introduce trace points in rpc_auth_gss.ko
cf500bac8fd48b57f38ece890235923d4ed5ee91 SUNRPC: Introduce rpc_prepare_reply_pages()
02ef04e432babf8fc703104212314e54112ecd2d NFS: Account for XDR pad of buf->pages
a00275baa68e1ee226cc659f54dc3a571f3ad600 SUNRPC: Make AUTH_SYS and AUTH_NULL set au_verfsize
35e77d21baa04b554bf3dc9a08dfa7e569286e51 SUNRPC: Add rpc_auth::au_ralign field
302fad7bd5c36de0eb4e94db5c15e12c68a9c842 NFS: Fix up documentation warnings
a1231fda7e944adf37d8368b2e182041a39ea1ca SUNRPC: Set memalloc_nofs_save() on all rpciod/xprtiod jobs
0ffe86f48026b7f34db22d1004bc9992f0db8b33 SUNRPC: Use poll() to fix up the socket requeue races
e66721f0436396f779291a29616858b76bfd9415 SUNRPC: Ensure rq_bytes_sent is reset before request transmission
ae0535515161d3a131f2acabb7b883e3f3d45235 SUNRPC: Don't reset the stream record info when the receive worker is running
e92053a52e68b841d1314ca04da7cbeb326ee1a0 SUNRPC: Handle zero length fragments correctly
727fcc64a0f8d346bdd60a7c92e9e720228ce037 SUNRPC: Don't suppress socket errors when a message read completes
5f52a9d429b8ba8f9d669730adf16bc534eb74ea SUNRPC: Initiate a connection close on an ESHUTDOWN error in stream receive
e791f8e9380d945ee9ed75aba2d65a9369f01820 SUNRPC: Convert xs_send_kvec() to use iov_iter_kvec()
0472e476604998c127f3c80d291113e77c5676ac SUNRPC: Convert socket page send code to use iov_iter()
c87dc4c73bb04cb3f86c7d60f9f576eb08514ad8 SUNRPC: Further cleanups of xs_sendpages()
a73881c96d73ee72b7dbbd38a6eeef66182a8ef7 SUNRPC: Fix an Oops in udp_poll()
762bb7e97351b37c6267509d5806b4c151250ab1 NFS/flexfiles: Fix up sparse RCU annotations
a79f194aa4879e9baad118c3f8bb2ca24dbef765 NFSv4/flexfiles: Abort I/O early if the layout segment was invalidated
2444ff277a686d743b5479dd52d8357c21d5ce13 NFS/flexfiles: refactor calls to fs4_ff_layout_prepare_ds()
0a156dd58274b0b847118966365203955288f4c6 NFS/flexfiles: Avoid unnecessary layout invalidations
d082d4b5a0ddf56d9a63eae66119f2ef53783d5f NFS/flexfiles: Remove bogus checks for invalid deviceids
76c6690522bb3e335ce1e201360df8776cab4d2c NFS/flexfiles: Speed up read failover when DSes are down
561d6f8aaffcc9d346e452361a6d80cb8461799d NFS/flexfiles: Simplify nfs4_ff_find_or_create_ds_client()
312cd4cb126a7936ad25306d14209fa6fd00f30a NFS/flexfiles: Simplify ff_layout_get_ds_cred()
cefa587a40bb5333901486632d4062f40a146585 NFS/flexfiles: Clean up mirror DS initialisation
12a3ad6184f86ba48f2269198c1a4520085f3002 SUNRPC: Convert remaining GFP_NOIO, and GFP_NOWAIT sites in sunrpc
ed7dc973bd91da234d93aff6d033a5206a6c9885 SUNRPC: Prevent thundering herd when the socket is not connected
477687e1116ad16180caf8633dd830b296a5ce73 SUNRPC: Fix up RPC back channel transmission
7b3fef8e4157ed424bcde039a60a730aa0dfb0eb SUNRPC: Respect RPC call timeouts when retrying transmission
cea57789e4081870ac3498fbefabbbd0d0fd8434 SUNRPC: Clean up
03e51d32da995030a16697038232171807eeb0f2 SUNRPC: Check whether the task was transmitted before rebind/reconnect
009a82f6437490c262584d65a14094a818bcb747 SUNRPC: Micro-optimise when the task is known not to be sleeping
4d6c671ace569d4b0d3f8d92ab3aef18a5d166bc SUNRPC: Take the transport send lock before binding+connecting
9734ad57b0f1a367fd3a00d717f97f8c00d9edb7 SUNRPC: Fix a client regression when handling oversized replies
27adc785928ae6b34cdda96f472735b77c91e247 SUNRPC: Use the ENOTCONN error on socket disconnect
eb90a16e9087063943859ae99bbdddd1fbfcf477 SUNRPC: rpc_decode_header() must always return a non-zero value on error
928d42f7d8737e1d6327e09668525f59725dabf9 SUNRPC: Handle the SYSTEM_ERR rpc error
5e3863fd597eba8c6679de805681631b1aad9bdb SUNRPC: Remove redundant check for the reply length in call_decode()
d84dd3fb82fa7a094de7f08f10610d55a70cf0ca SUNRPC: Don't let RPC_SOFTCONN tasks time out if the transport is connected
01f2f5b82a2b523ae76af53f2ff43c48dde10a00 SUNRPC: fix uninitialized variable warning
29e7ca715f2a0b6c0a99b1aec1b0956d1f271955 NFS: Fix handling of reply page vector
7987b694ade8cc465ce10fb3dceaa614f13ceaf3 SUNRPC: Fix a use after free when a server rejects the RPCSEC_GSS credential
75369089820473eac45e9ddd970081901a373c08 SUNRPC: Ensure the bvecs are reset when we re-encode the RPC request
5eb8d18ca0e001c6055da2b7f30d8f6dca23a44f NFSv4: Fix delegation state recovery
5478ba349f3f71f8d306cddaed33fa0527cc7b16 KVM: nVMX: Rename and split top-level consistency checks to match SDM
98d9e858fa966bd7132cc21d65e4c89a97f4fe2d KVM: nVMX: Return -EINVAL when signaling failure in pre-VM-Entry helpers
dee9c0493108b36e89d289c8fd6f4c90321d0d5e KVM/nVMX: Use kvm_vcpu_map for accessing the enlightened VMCS
e0bf2665ca26c1f6d6909de29bd382e7a5ee41e7 KVM/nVMX: Use page_address_valid in a few more locations
d7547c55cbe7471255ca51f14bcd4699f5eaabe5 KVM: Introduce KVM_CAP_MANUAL_DIRTY_LOG_PROTECT2
f3ecb59dd49f1742b97df6ba071aaa3d031154ac kvm: x86: Fix reserved bits related calculation errors caused by MKTME
837ec79b4cf4ec89d814166a71a7d679dda04736 kvm: selftests: hide vcpu_setup in processor code
3731905ef28fc1a9240d1532b2a9efbaea205dc0 KVM: nVMX: Use descriptive names for VMCS sync functions and flags
7952d769c29caac4fb51c1f0f0c12434c805b127 KVM: nVMX: Sync rarely accessed guest fields only when needed
de70d279709efb7d0b0c0dce2eb398fc43c4b7f6 KVM: nVMX: Update vmcs12 for SYSENTER MSRs when they're written
61cfcd545e4291d3130022e6f5f684b5d011374b kvm: tests: Sort tests in the Makefile alphabetically
9dba988edb31d013003b7f00e82dd56f01db70c3 tests: kvm: Check for a kernel warning
66bb8a065f5aedd4551d8d3fbce582972f65c2e1 KVM: x86: PMU Event Filter
0c5f81dad46c90792e6c3c4797131323c9e96dcd KVM: LAPIC: Inject timer interrupt via posted interrupt
d73eb57b80b98ae147e4e6a7d9877c2ba175f972 KVM: Boost vCPUs that are delivering interrupts
30cd8604323dbaf20a80e797fe7057f5b02e394d KVM: x86: Add fixed counters to PMU filter
2f5947dfcaecb99f2dd559156eecbeb7b95e4c02 Documentation: move Documentation/virtual to Documentation/virt
a48d06f9b7cedbb8ad7804d1720168b7ee6a34e7 KVM: LAPIC: Don't need to wakeup vCPU twice afer timer fire
046ddeed0461b5d270470c253cbb321103d048b6 KVM: Check preempted_in_kernel for involuntary preemption
741cbbae0768b828be2d48331eb371a4f08bbea8 KVM: remove kvm_arch_has_vcpu_debugfs()
3e7093d045196b1016517631645e874fe903db7e KVM: no need to check return value of debugfs_create functions
e2c26537ea7652d123ddb01ceb1aa0e2a5edb7ad KVM: selftests: Update gitignore file for latest changes
344c6c804703841d2bff4d68d7390ba726053874 KVM/Hyper-V: Add new KVM capability KVM_CAP_HYPERV_DIRECT_TLBFLUSH
5a0165f6dde37fd16e85c86eccb895fd4f93305f KVM: x86: announce KVM_CAP_HYPERV_ENLIGHTENED_VMCS support only when it is available
338eb29876b9e571273175f167fcd58d9441ac8e KVM: selftests: Create VM earlier for dirty log test
567a9f1e9deb273a2c02dd18c254208537fcefaa KVM: selftests: Introduce VM_MODE_PXXV48_4K
52200d0d944e473142271773c41f5f490f3a821f KVM: selftests: Remove duplicate guest mode handling
e1572f1d08be57a5412a464cff0712a23cd0b73e cpu/SMT: create and export cpu_smt_possible()
094444204570a5420d9e6ce3d4558877c3487856 selftests: kvm: add test for dirty logging inside nested guests
1108696aecf048433bf77806570f57bdbb6ef724 vfio/type1: Introduce iova list and add iommu aperture validity check
af029169b8fdae31064624d60b5469a3da95ad32 vfio/type1: Check reserved region conflict and update iova list
b09d6e47397409faf12f72edd140956e4cfe3011 vfio/type1: remove duplicate retrieval of reserved regions
1c5fecb61255aa12a16c4c06335ab68979865914 efi: Export Runtime Configuration Interface table to sysfs
a003365cab64b0f7988ac3ccb1da895ce0bece5e powerpc/tm: Add tm-poison test
93cad5f789951eaa27c3392b15294b4e51253944 selftests/powerpc: Add test case for tlbie vs mtpidr ordering issue
5b216ea1c40cf06eead15054c70e238c9bd4729e selftests/powerpc: Fix compile error on tlbie_test due to newer gcc
b2d3b5ee66f2a04a918cc043cec0c9ed3de58f40 powerpc/pseries: Track LMB nid instead of using device tree
9e323d45ba94262620a073a3f9945ca927c07c71 s390/crypto: xts-aes-s390 fix extra run-time crypto self tests finding
e80a91ad302b3b66822756afc61f9f9c1658b9c9 PCI: Add dma_ranges window list
34c6b7105e5a11174f856483cde8ad6e61b7236a PCI: Replace dev_printk(KERN_DEBUG) with dev_info(), etc
35d0a06dad2220d62042fd1a91a216d17744e724 PCI: Cleanup register definition width and whitespace
74356addc0b32e891327bcb1e36d7f798f7b1c7d PCI: Fix comment typos
12975426d8889ce42821e9e0348f9a2da343779a scsi: qla2xxx: Uninline qla2x00_init_timer()
15b7a68c1d030b2365c823730d0eb9257f2aa60e scsi: qla2xxx: Introduce the dsd32 and dsd64 data structures
d4556a4932a54613fd766df6879e39d0342f49a0 scsi: qla2xxx: Use __le64 instead of uint32_t[2] for sending DMA addresses to firmware
c750a9c9c59a85843d447910a27da21c5bcf600a scsi: qla2xxx: Remove unnecessary NULL check
3a4b6cc7332130ac5cbf3b505d8cddf0aa2ea745 scsi: qla2xxx: Fix premature timer expiration
ba0cef2532717354d90ea81dc47837d61c98defc scsi: qla2xxx: Include the <asm/unaligned.h> header file from qla_dsd.h
9e75b5e2c8384080842015d26c9272fd55c0d798 scsi: qla2xxx: Change data_dsd into an array
9933c050fe919ed42408a6e0198e3d7e7d3278a8 scsi: qla2xxx: Make it explicit that ELS pass-through IOCBs use little endian
0f8243e64682b270bad6c58a136a1acd777fcfc3 scsi: qla2xxx: Set the responder mode if appropriate for ELS pass-through IOCBs
6c18a43e3c82b0b67531a1cdec7ba31540fe6424 scsi: qla2xxx: Enable type checking for the SRB free and done callback functions
85cffefa09e448906a6f0bc20f422d75a18675bd scsi: qla2xxx: Fix a race condition between aborting and completing a SCSI command
5ec9f9040f61dfd0412a53fa2fc1e321727a5a61 scsi: qla2xxx: Let the compiler check the type of the SCSI command context pointer
c6e58160a2c0caf6a8079134f0807bef0ecec6b8 scsi: qla2xxx: Introduce qla2x00_els_dcmd2_free()
0aabb6b699f72dca96988d3f428e222f932dc889 scsi: qla2xxx: Fix Nport ID display value
fd807dc4719cbc081f647300a76af49a35c7b28e scsi: qla2xxx: Update driver version to 10.01.00.19-k
0216234c2eed1367a318daeb9f4a97d8217412a0 perf tools: Fix segfault in cpu_cache_level__read()
eeb71c950bc6eee460f2070643ce137e067b234c tools/power turbostat: fix buffer overrun
af239c44e3f976762e9bc052f0d5796b90ea530b x86/intel: Aggregate big core mobile naming
5e741407eab7c602ee5a2b06afb0070a02f4412f x86/intel: Aggregate big core graphics naming
5ebb34edbefa8ea6a7e109179d5fc7b3529dbeba x86/intel: Aggregate microserver naming
f712a1e8e59e8f42b5a9ec3887a4ad079bb18175 clocksource/drivers/tcb_clksrc: Use tcb as sched_clock
6275f4947e2f13a13a509d9fec4e1e5b15152680 clocksource/drivers/tcb_clksrc: Move Kconfig option
ba552399954dde1b388f7749fecad5c349216981 printk: Split the code for storing a message into the log buffer
a6ae928c25835ca18deb4a527079f169b68ed292 Revert "printk: make sure to print log on console."
3ac37a93fa9217e576bebfd4ba3e80edaaeb2289 printk: lock/unlock console only for new logbuf entries
e80c1a9d5f514ce5134c6c4263a11607341466c9 printk: fix printk_time race.
07c17732bd687567802aaa5fa5c101c2776565d1 printk: Remove print_prefix() calls with NULL buffer.
15ff2069cb7f967dae6a8f8c176ba51447c75f00 printk: Add caller information to printk() output.
cbae05d32ff68233f00cbad9fda0382cc982d821 printk: Pass caller information to log_store().
c39ea0b9dd24bf1bf2baa5cdbfa1905f3065347b panic: avoid the extra noise dmesg
457c89965399115e5cd8bf38f9c597293405703d treewide: Add SPDX license identifier for missed files
7f9989bace91a7a36051d64cbf46f7760c52bbf0 scsi: lpfc: Resolve checker warning for lpfc_new_io_buf()
18c4f0a42b08ced680aa287a9cf3c94b6f9a752f scsi: core: don't hold device refcount in IO path
893ce44df56580fb878ca5af9c4a5fd87567da50 gve: Add basic driver framework for Compute Engine Virtual NIC
f5cedc84a30d2d3d0e0a7f3eb53fbd66d9bf5517 gve: Add transmit and receive support
9e5f7d26a4c087f34e540a5a6f853f8d93d51448 gve: Add workqueue and reset support
e5b845dc79838e17ebeda63795337b5261a772eb gve: Add ethtool support
3c13ce74b6f885c2dcb2537b7f61a8e5afab002e gve: Fix u64_stats_sync to initialize start
a51df9f8da43e8bf9e508143630849b7d696e053 gve: fix -ENOMEM null check on a page allocation
877cb240f6a000078aabcd57f8ef7765d9fdf134 gve: Fix error return code in gve_alloc_qpls()
0287f9ed1693fff26a2d568a9d3f74c2b198540c gve: fix unused variable/label warnings
14b4c48bb1ce6ff429a9288c9579cc984193ebaf gve: Remove the exporting of gve_probe
8ec1e9006908a606b2a67c905f33ee2d3b6be5c2 gve: replace kfree with kvfree
438b43bdb95d3189e0098919f321c014ed71f410 gve: Fix case where desc_cnt and data_cnt can get out of sync
cc07db5a5b100bc8eaab5097a23d72f858979750 gve: Copy and paste bug in gve_get_stats()
4001d8e8762f57d418b66e4e668601791900a1dd genirq: Delay deactivation in free_irq()
62e0468650c30f0298822c580f382b16328119f6 genirq: Add optional hardware synchronization for shutdown
2b7403035459c75e193c6b04a293e518a4212de0 mm: Change return type int to vm_fault_t for fault handlers
1a42010cdc26bb7e5912984f3c91b8c6d55f089a s390/mm: convert to the generic get_user_pages_fast code
932f4a630a695212bdc7379b05f9bd0dafc5d968 mm/gup: replace get_user_pages_longterm() with FOLL_LONGTERM
73b0140bf0fe9df90fb267c00673c4b9bf285430 mm/gup: change GUP fast to use flags rather than a write 'bool'
7af75561e17132b20b5bc047d222f34b3e7a3e6e mm/gup: add FOLL_LONGTERM capability to GUP fast
6fa8f1afd3373c456e556815ebc8cb2330d6c3fe IB/{core,uverbs}: Move ib_umem_xxx functions from ib_core to ib_uverbs
b0ea0fa5435f9df7213a9af098558f7dd584d8e8 IB/{core,hw}: Have ib_umem_get extract the ib_ucontext from ib_udata
7527a7b157d1191b23562ed70154ae93bd65f845 IB/core: Simplify rdma cgroup registration
a124edba26270697540f1058bfcd490c1c65b116 IB/mlx5: Introduce async DEVX obj query API
02da37509705d3ba6a58fe4799a0caf6b4baecb0 RDMA/core: Use the ops infrastructure to keep all callbacks in one place
21a428a019c9a6d133e745b529b9bf18c1187e70 RDMA: Handle PD allocations by IB/core
0df91bb67334eebaf73d4ba32567e16d55f4f116 RDMA/devices: Use xarray to store the client_data
921eab1143aadf976a42cac4605b4d35159b355d RDMA/devices: Re-organize device.c locking
3d9dfd060391928bd615db62ecddea5e1255edfd IB/uverbs: Add ib_ucontext to uverbs_attr_bundle sent from ioctl and cmd flows
89944450547334aa6655e0cd4aec8df1897a205a IB/{hw,sw}: Remove 'uobject->context' dependency in object creation APIs
5f8f5499005c51656645a011bca81ffb66fcaaca RDMA/core: Move device addition deletion to device.c
fd47c2f99f04249d1ba82c422d1818dcbe193908 RDMA/restrack: Convert internal DB from hash to XArray
c5dfe0ea6ffa1c568b311c60266484a3316bb085 RDMA/nldev: Add resource tracker doit callback
48118527186fb255461ebf3685ab0f1c2680bd9c RDMA/restrack: Reduce scope of synchronization lock while updating DB
41eda65c6100930d95bb854a0114f3544593070c RDMA/restrack: Hide restrack DB from IB/core
7c77c6a9bf9d71711dd3f89858bb0f5157a11919 RDMA/restrack: Prepare restrack_root to addition of extra fields per-type
517b773e0f612d608cbc62a08c55601bd56f73f6 RDMA/nldev: Share with user-space object IDs
c3d02788b45ab4a2d8f243b98c04b549c8193af6 RDMA/nldev: Provide parent IDs for PD, MR and QP objects
1b8b778864b338b2e295687733d785ae1a65a9ea RDMA/nldev: Connect QP number to .doit callback
f2a0e45f36b0a210ff2388ed5fa89f81019c07a1 RDMA/nldev: Don't expose number of not-visible entries
ea1075edcbab7d92f4e4ccf5490043f796bf78be RDMA: Add and use rdma_for_each_port
8ceb1357b33790193e9d55d2d09bcfd6bd59dd6d RDMA/device: Consolidate ib_device per_port data into one place
8faea9fd4a3914f12cd343e10810ec5f4215ddd6 RDMA/cache: Move the cache per-port data into the main ib_port_data
c2261dd76b549754c14c8ac7cadadd0993b182d6 RDMA/device: Add ib_device_set_netdev() as an alternative to get_netdev
324e227ea7c952626abafe72db42ae0d70220a6e RDMA/device: Add ib_device_get_by_netdev()
d0899892edd089790eb17943ecf28254a909deae RDMA/device: Provide APIs from the core code to help unregistration
c367074b6c37c2d2d45cb60a15b829eefbcee0f1 RDMA/rxe: Use driver_unregister and new unregistration API
6cc2c8e535ec19153714cee62e11e4d9ac2ea953 RDMA/rxe: Add ib_device_get_by_name() and use it in rxe
ca22354b140853b8155692d5b2bc0110aa54e937 RDMA/rxe: Close a race after ib_register_device
3856ec4b93c9463d36ee39098dde1fbbd29ec6dd RDMA/core: Add RDMA_NLDEV_CMD_NEWLINK/DELLINK support
66920e1b25861d5bd99192489f6da7183529285e rdma_rxe: Use netlink messages to add/delete links
afc1990e089f501d686bb95b98146fc7ba23347f RDMA/core: Fix a WARN() message
a2a074ef396f8738d9ee08ceefa8811381a4fe4f RDMA: Handle ucontext allocations by IB/core
bb618451544ca9152a1a213d0a2b93d231c4cce1 RDMA/uverbs: Don't do double free of allocated PD
cb6acd01e2e43fd8bad11155752b7699c3d0fb76 hugetlbfs: fix races and page leaks during migration
9b7ea46a82b31c74a37e6ff1c2a1df7d53e392ab mm/hotplug: fix offline undo_isolate_page_range()
3e8589963773a5c23e2f1fe4bcad0e9a90b7f471 memcg: make it work on sparse non-0-node systems
2c012a4ad1a2cd3fb5a0f9307b9d219f84eda1fa mm: vmscan: scan anonymous pages on file refaults
eb085574a7526c4375965c5fbf7e5b0c19cdd336 mm, swap: fix race between swapoff and some swap operations
4643d67e8cb0b3536ef0ab5cddd1cedc73fa14ad hugetlbfs: fix hugetlb page migration/fault race causing SIGBUS
f7da677bc6e72033f0981b9d58b5c5d409fa641e mm, page_owner: handle THP splits correctly
c71fd893f614f205dbc050d60299cc5496491c19 locking/rwsem: Make owner available even if !CONFIG_RWSEM_SPIN_ON_OWNER
64489e78004cb5623211c75790cac90bd25ff5e9 locking/rwsem: Implement a new locking scheme
5dec94d4923683b1dd6a09dc62427a24d79ee7b4 locking/rwsem: Merge rwsem.h and rwsem-xadd.c into rwsem.c
6cef7ff6e43cbdb9fa8eb91eb9a6b25d45ae11e3 locking/rwsem: Code cleanup after files merging
3f6d517a3ece6e6ced7abcbe798ff332ac5ca586 locking/rwsem: Make rwsem_spin_on_owner() return owner state
4f23dbc1e657951e5d94c60369bc1db065961fb3 locking/rwsem: Implement lock handoff to prevent lock starvation
00f3c5a3df2c1e3dab14d0dd2b71f852d46be97f locking/rwsem: Always release wait_lock before waking up tasks
990fa7384a3057a3298bcf493651c6e14416c47c locking/rwsem: More optimal RT task handling of null owner
d3681e269fff84048c94012342c3434b227c4706 locking/rwsem: Wake up almost all readers in wait queue
02f1082b003a0cd48f48f12533d969cdbf1c2b63 locking/rwsem: Clarify usage of owner's nonspinaable bit
cf69482d62d996d3ce840eeead8e160de281ac6c locking/rwsem: Enable readers spinning on writer
94a9717b3c40e77a54e4afacd8f19a9a86bfeead locking/rwsem: Make rwsem->owner an atomic_long_t
7d43f1ce9dd075d8b2aa3ad1f3970ef386a5c358 locking/rwsem: Enable time-based spinning on reader-owned rwsem
5cfd92e12e13432251981b9d0cd68dbd7aa8d690 locking/rwsem: Adaptive disabling of reader optimistic spinning
a15ea1a35f1b2782befc8b958c123c5d6a7cab0a locking/rwsem: Guard against making count negative
78134300579a45f527ca173ec8fdb4701b69f16e locking/rwsem: Don't call owner_on_cpu() on read-owner
99143f82a255e7f054bead8443462fae76dd829e lcoking/rwsem: Add missing ACQUIRE to read_slowpath sleep loop
6ffddfb9e1de21c3d0c0cfa4fe4a20dd3291a812 locking/rwsem: Add ACQUIRE comments
91d2a812dfb98b3b4dad661529c33bc38d303461 locking/rwsem: Make handoff writer optimistically spin on owner
fce45cd41101f1a9620267146b21f09b3454d8db locking/rwsem: Check for operations on an uninitialized rwsem
e1ea9f86023e7668604cc6456a818e5e4d0361c9 KEYS: trusted: Expose common functionality [ver #2]
be24b37e22c20cbaa891971616784dd0f35211e8 KEYS: trusted: fix -Wvarags warning
1ccea77e2a2687cae171b7987eb44730ec8c6d5f treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 13
a6a9274a7c71573c8921080da990696702f7301c RDMA/nes: remove redundant check on udata
cebe556bd755d16559c8bc0d1fe5545db6bbeaf0 RDMA/core: Introduce ib_core_device to hold device
4e0f7b9070726a34bbd87a74e407d4cced6d49ab RDMA/core: Implement compat device/sysfs tree in net namespace
5417783eabb2c66738394149123fbcdd0cca0f51 RDMA/core: Support core port attributes in non init_net
a56bc45b27b92954d99c811cb047e789b6cc5a81 RDMA/core: Add module param to disable device sharing among net ns
41c6140189afdf67bd07d7bbe2d8f9382b6f9ef7 RDMA: Check net namespace access for uverbs, umad, cma and nldev
37eeab55aeca98cb6648b471f09c0e651ccb1e7c RDMA/core: Extend ib_device_get_by_index for net namespace
cb7e0e130503cb8e5ee6a7e8983bf71ed408516f RDMA/core: Add interface to read device namespace sharing mode
2b34c558022673c0d6393dd7941d417f1b5a7236 RDMA/core: Add command to set ib_core device net namspace sharing mode
d3243da8e3700eaccb41b93b498d0dfc77c90d37 RDMA/core: Don't compare specific bit after boolean AND
70f06b26f07ea42d158b41bba460ce06ffa3510a IB: ucontext should be set properly for all cmd & ioctl paths
a6a3797df2741aa81f33fe48f609247dba98f3f7 IB: Pass uverbs_attr_bundle down uobject destroy path
c4367a26357be501338e41ceae7ebb7ce57064e5 IB: Pass uverbs_attr_bundle down ib_x destroy path
bdeacabd1a5fb4c0274b949d7220501c3401a3b4 IB: Remove 'uobject->context' dependency in object destroy APIs
ff23dfa134576e071ace69e91761d229a0f73139 IB: Pass only ib_udata in function prototypes
c87e65cfb97c7f325132a68288ed76ba7bdcd2c6 RDMA/cm: Move debug counters to be under relevant IB device
9e886b39a73ad0219b3f2ff574c135d770118a6b RDMA/nldev: Return device protocol
d345691471b426e540140a4cc431c69f80abfcb6 RDMA: Handle AH allocations by IB/core
68e326dea1dba935f6a5299a24343a58b33eed10 RDMA: Handle SRQ allocations by IB/core
3042492bd1f9a08e9cf4c1a4621e359fb0f9a126 RDMA/core: Avoid freeing netdevs in disable_device()
decbc7a6b0073f55b200d80a3ecf5a5e205edd06 RDMA/core: Introduce a helper function to change net namespace of rdma device
2e5b8a01165e4fe57ec396961daae38713edce35 RDMA/core: Add a netlink command to change net namespace of rdma device
823b23da71132b80d9f41ab667c68b112455f3b6 IB/core: Allow vlan link local address based RoCE GIDs
923abb9d797ba078f4e9eb3734dd71be5f567a2a RDMA/core: Introduce RDMA subsystem ibdev_* print functions
4f33dd41b24c1e3494a6ea6c7839ea068343f809 RDMA/uverbs: Initialize uverbs_attr_bundle ucontext in ib_uverbs_get_context
eb15c78b05bd9fbac45ee5b56aaf29b2570b5238 RDMA/core: Do not invoke init_port on compat devices
dd05cb828d0ebecd3d772075fccb85ec3618bedf RDMA: Get rid of iw_cm_verbs
a70c07397fd80dfeeaead15751ab71449b548826 RDMA: Introduce and use GID attr helper to read RoCE L2 fields
adb4a57a7a1d0bf4bebc96266f30f04330e741de RDMA/cma: Use rdma_read_gid_attr_ndev_rcu to access netdev
943bd984b108b3bb778790c2da4ae8d186b547e6 RDMA/core: Allow detaching gid attribute netdevice for RoCE
a808273a495c657e33281b181fd7fcc2bb28f662 RDMA/verbs: Add a DMA iterator to return aligned contiguous memory blocks
e7a5b4aafd82771f8924905c208d5d236ddcb671 RDMA/device: Don't fire uevent before device is fully initialized
4d7ba8ce0fec6d5f364dc15786453d26fc0ccb65 RDMA/core: Change system parameters callback from dumpit to doit
dc1435c00fcd102c9803cd6120701ba5547138d5 RDMA/srp: Rename SRP sysfs name after IB device rename trigger
6875cb175ca7e0c24aa4460ac2b3257fdf662832 RDMA/core: Clear out the udata before error unwind
46bdf370f671c90573e8b683d9a14bb335057a36 RDMA/core: Fix panic when port_data isn't initialized
0e0869949666286aa441ada8e65ab51a1b95d8aa treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 502
3f9c7e76934790c53a48b11c7ad54770cd3ae50d xprtrdma: Backchannel can use GFP_KERNEL allocations
94087e978e9b645e07cc0fbdcf4140dda02f3d81 xprtrdma: Aggregate the inline settings in struct rpcrdma_ep
86c4ccd9b92ba6541fc4734e82f87139deea0470 xprtrdma: Eliminate struct rpcrdma_create_data_internal
b0abc4f5df76ceed497ffd959fd7839f9cd38a07 s390/qeth: overhaul ethtool statistics
0f7aedbdf2bb92cf1a3462561b3ff4c3a42bfe7d s390/qeth: drop redundant state checking
d0c748256611f8612728bcbf9933eb103c077763 s390/qeth: defer RX modesetting
5c0aebc6db8cf81c5dd888388dcb455beb1a87b8 s390/qeth: remove locking for RX modeset cache
05a17851341c053421b9430db36d365da8283bc7 s390/qeth: add wrapper for IP table access
df2a2a5225cccb9b738230d52c3fb74f83cf4456 s390/qeth: convert IP table spinlock to mutex
fdd1a5303efb03bfa4016f29a519f0e553739069 s390/qeth: don't bother updating the last-tx time
333ef9d1d5fb68b5f53c5f7f3ceafb65a8a6ff7e s390/qeth: don't keep statistics for tx timeout
3a18d75400ff14cf3518637579974e22aa0113bd s390/qeth: add TX multiqueue support for IQD devices
73dc2daf110f4a4e777003b22dda09bb40948fc9 s390/qeth: add TX multiqueue support for OSA devices
54a50941b7db8726732919daa859b931a9f496e2 s390/qeth: stop/wake TX queues based on their fill level
4e26c5fe552e5f0d9e3abcea48cd311af232bed9 s390/qeth: cache max number of available buffer elements
58aa2491aa615d9618ffc764cc3eaf689053c7a9 s390/qeth: extract helper to determine L2 cast type
0cd6783d3c7d40be165d1f3c811cedf0e3dfcdf1 s390/qeth: check dst entry before use
bd966839bdf9165ee0aefa57132e87e9caf55982 s390/qeth: handle error when updating TX queue count
57a688aa22eb0ce4b1c7e9310a5d84880d1884ca s390/qeth: convert device-specific trace entries
2066e1db9eef8e2057bb3a1b7cb3503a7f6725d9 s390/qeth: convert RCD code to common IO infrastructure
a59d121da2394dcb84a42bf2fe436180ce2afe5c s390/qeth: dynamically allocate simple IPA cmds
b9150461e5a6f4a78d0ef8a4d4f2a41f5a12d979 s390/qeth: dynamically allocate various cmds with sub-types
5cfbe10a000aec92003d72061d250aa7a95bc02a s390/qeth: dynamically allocate diag cmds
c3b2218d3170178b2e5539bca3623f9519386d04 s390/qeth: remove static cmd buffer infrastructure
d4c08afafa0469a24771b14528ee179f72861ea3 s390/qeth: streamline SNMP cmd code
980f4568fa32736b1dec69db2cc7c947b767e52e s390/qeth: extract helper for route validation
eca1d5c22da19abf14d27f599e787dc98b1702a3 s390/qeth: move cast type selection into fill_header()
292a50e3fc2cf699587ea282e6253e0d6ae3cdc1 s390/qeth: reject oversized SNMP requests
8d7c6ac3b2371eb1cbc9925a88f4d10efff374de x86/cpu: Add Comet Lake to the Intel CPU models header
1ffa6c04dae39776a3c222bdf88051e394386c01 perf/x86/cstate: Add Comet Lake CPU support
9066288b2aab1804dc1eebec6ff88474363b89cb perf/x86/intel: Add Comet Lake CPU support
9674b1cc0f94c34f76e58c102623a866836f269e perf/x86/msr: Add Comet Lake CPU support
ae67bd3821bb0a54d97e7883d211196637d487a9 SUNRPC: Fix up task signalling
9e6fa0bb84beeff4dddb17d7c23e35135fe977c5 SUNRPC: Refactor rpc_restart_call/rpc_restart_call_prepare
5ad64b36dda962797ce3ed579a27189ec7482d0d SUNRPC: Add tracking of RPC level errors
9dfe52a95a60096fc12234383a19b0f436304418 SUNRPC: Move call to rpc_count_iostats before rpc_call_done
061775583e35eeaa3d12ea9641906668159f1b44 net: sched: flower: introduce reference counting for filters
b2552b8c40fa89210070c6e3487b35f10608d6c5 net: sched: flower: track filter deletion with flag
272ffaadeb3e739baa70aef7e92ad844b62b3304 net: sched: flower: handle concurrent tcf proto deletion
3d81e7118d572f37456922929b2b289138b2174f net: sched: flower: protect flower classifier state with spinlock
c24e43d83b7aedb3effef54627448253e22a0140 net: sched: flower: track rtnl lock state
95e27a4da6143ad8a0c908215a0f402031b9ebf3 net: sched: ensure tc flower reoffload takes filter ref
1f17f7742eeba73dbd5ae8bdec1a85ce5877001e net: sched: flower: insert filter to ht before offloading it to hw
9e35552ae1eafd666e7388a1a94a321665d2f911 net: sched: flower: use correct ht function to prevent duplicates
9994677c968eff50968b2611e61e3afa90b39966 net: sched: flower: fix filter net reference counting
c049d56eb219661c9ae48d596c3e633973f89d1f net: sched: flower: refactor reoffload for concurrent access
99815f5031db36414178f45e3009fb5f0e219dd4 net: sched: flower: don't call synchronize_rcu() on mask creation
d39d714969cda5cbda291402c8c6b1fb1047f42e idr: introduce idr_for_each_entry_continue_ul()
8960b38932bee8db0bc9c4d8c135f21df6cdd297 linux/dim: Rename externally used net_dim members
4f75da3666c0c572967729a2401ac650be5581b6 linux/dim: Move implementation to .c files
398c2b05bbee21cc172dfff017c0351d4d14e04c linux/dim: Add completions count to dim_sample
f8be17b81d44aed1f9ea68c3fc70f501c9616e2d lib/dim: Fix -Wunused-const-variable warnings
f06d0ca45827a5790d7508de4759aed976933d4d linux/dim: Fix overflow in dim calculation
25be597ada0b49d2748ab520a78a28c1764d69e4 arm64: kill config_sctlr_el1()
b8925ee2e12d1cb9a11d6f28b5814f2bfa59dce1 arm64: cpu: Move errata and feature enable callbacks closer to callers
86d0dd34eafffbc76a81aba6ae2d71927d3835a8 arm64: cpufeature: add feature for CRC32 instructions
d376dbda187317d06d3a2d495b43a7983e4a3250 scsi: qla2xxx: Fix different size DMA Alloc/Unmap
8515dbc1f51b4f728908cdb993c849c83743aba7 serial: 8250_pci: Add support for Sunix serial boards
8ce0048f76542a1f4d68b647c5d4a4d35e7547cf IB/mlx4: Delete unused func arg
4166bfe53093b687a0b1b22e5d943e143b8089b2 PCI: al: Add Amazon Annapurna Labs PCIe host controller driver
9f32d221301c3e754b24c77ab11bf793b19f51b5 dax: Convert dax_lock_mapping_entry to XArray
b15cd800682fcaf27048b05e42f5c208e4c756c0 dax: Convert page fault handlers to XArray
6d7cd8c1373746a93dc868ee9d38a82df78b38aa dax: Remove optimisation from dax_lock_mapping_entry
c5bbd4515a05f8acb7e6ab6297044a529762cbf5 dax: Reinstate RCU protection of inode
fda490d39fc0668d92e170d95c11e35a010019aa dax: Fix dax_unlock_mapping_entry for PMD pages
0e40de0338d005f73d46898a21544cd26f01b4ce dax: Fix huge page faults
25bbe21bf427a81b8e3ccd480ea0e1d940256156 dax: Avoid losing wakeup in dax_lock_mapping_entry
c93db7bb6ef3251e0ea48ade311d3e9942748e1c dax: Check page->mapping isn't NULL
55e56f06ed71d9441f3abd5b1d3c1a870812b3fe dax: Don't access a freed inode
27359fd6e5f3c5db8fe544b63238b6170e8806d8 dax: Fix unlock mismatch with updated API
d8a706414af4827fc0b4b1c0c631c607351938b9 dax: Use non-exclusive wait in wait_entry_unlocked()
1571c029a2ff289683ddb0a32253850363bcb8a7 dax: Fix xarray entry association for mixed mappings
23c84eb7837514e16d79ed6d849b13745e0ce688 dax: Fix missed wakeup with PMD faults
61c30c98ef17e5a330d7bb8494b78b3d6dffe9b8 dax: Fix missed wakeup in put_unlocked_entry()
80d3c45fd765fbf4f10981b60ff6b1384bdbc706 SUNRPC: Fix possible autodisconnect during connect due to old last_used
08ca90afba255d05dc3253caa44056e7aecbe8c5 bpf: notify offload JITs about optimizations
3ef84346c56141c72a28efcad2ddf17809533832 selftests: bpf: makefile support sub-register code-gen test mode
2dfb40121ee83139909e4e17d414eee87897bb8e selftests: bpf: prepare for break up of verifier tests
40f2fbd5a5e9c6d0799632fcba174a7b45c471da selftests: bpf: break up test_verifier
48729226238d4d56bdb8de9d54b911f179dd54b7 selftests: bpf: break up the rest of test_verifier
c8aa703822bf811269975cf7251b5eaad4c38e9c net/flow_dissector: move bpf case into __skb_flow_bpf_dissect
cfff578ed51ca4ad4c66c8d4bd78694096ea5515 selftests/bpf: mark verifier test that uses bpf_trace_printk as BPF_PROG_TYPE_TRACEPOINT
ab963beb9f5db303b4fd7e34e422b96270e5b972 selftests/bpf: add bpf_spin_lock C test
ba72a7b4badbf4dd3c49c585c3c662bacc54f46e selftests/bpf: test for BPF_F_LOCK
2a1181540952ed0c2b91928f414c388ffe66d2b6 selftests/bpf: remove generated verifier/tests.h on 'make clean'
e2c6f50e48849298bed694de03cceb537d95cdc4 selftests/bpf: add "any alignment" annotation for some tests
fb47d1d931f8419645db15ef5fc0dc7a857c8f4e bpf: Add skb->sk, bpf_sk_fullsock and bpf_tcp_sock tests to test_verifer
e0b27b3f97b8fce620331baad563833617c1f303 bpf: Add test_sock_fields for skb->sk and bpf_tcp_sock
1727a9dce6775a4ea77a611e9ea51cac1d093519 selftests: bpf: add "alu32" to .gitignore
4836b4637ef080c2764c44ee40ed354cdb991d79 selftests: bpf: extend sub-register mode compilation to all bpf object files
bd4aed0ee73ca873bef3cb3ec746dd796f03df28 selftests: bpf: centre kernel bpf objects under new subdir "progs"
64e39ee2c84bd8eac1bd3ea370c4ada5163befac selftests: bpf: relax sub-register mode compilation criteria
0fde56e4385b09a67dd25321f607d4c942282de2 selftests: bpf: add test_lwt_ip_encap selftest
9d6b3584a7a9d7fa872cb17ceda7a3b208f441eb selftests: bpf: test_lwt_ip_encap: add negative tests.
740f8a6572213a677c7916b12a11d831373722ce selftests/bpf: make sure signal interrupts BPF_PROG_TEST_RUN
492ecee892c2a4ba6a14903d5d586ff750b7e805 bpf: enable program stats
3fcc5530bcb2a879e32bd940e6eafee328ac3647 bpf: fix build without bpf_syscall
4b9113045b1745ec8512d6743680809edca6a74e bpf: fix u64_stats_init() usage in bpf_prog_alloc()
a83de90658280611933d6b3e5044726f63a953f2 selftests/bpf: set unlimited RLIMIT_MEMLOCK for test_sock_fields
5cce85c640ccc9d9aab8b05c77d7d076a44d4db2 bpf: sync bpf.h to tools and update bpf_helpers.h
3f30658830f3a133ba2136237ea9c8e589344a3b selftests: bpf: break up test_progs - preparations
7395724b404db76fc093fb99b5c957baa409d8ae selftests: bpf: break up test_progs - pkt access
eaf90740f5ad054b1962f32a50e5b7476c0f16bd selftests: bpf: break up test_progs - xdp
615741d81de6c16aa466c4eb37805caa868a9bb8 selftests: bpf: break up test_progs - stackmap
20cb14ff9c49fcb189daf82246fb6fcd3923542c selftests: bpf: break up test_progs - tracepoint
271a6337cbaedfa9b93006326d0ecc28fd3dc71c selftests: bpf: break up test_progs - spinlock
886225bb0868fcf763bea62d18e57e4b5ef08a42 selftests: bpf: break up test_progs - misc
87dab7c3d54ce0f1ff6b54840bf7279d0944bc6a bpf: add test cases for non-pointer sanitiation logic
17a90a78847324b1a34b0de833492cbd2366361d selftests/bpf: test that GSO works in lwt_ip_encap
e78e00bd478a43ee01db726ce488424a371e8684 selftests: bpf: fix compilation with out-of-tree $(OUTPUT)
69b09175d68241cb96ff9433d8e7a17382d720d6 selftests: bpf: test_progs: initialize duration in singal_pending test
20182390c4134478d795a096ddb8dddcc648e28a bpf: fix replace_map_fd_with_map_ptr's ldimm64 second imm field
d6f1837107c00fa7b2fdb606acf65b33b455dbfd selftests/bpf: fix segfault of test_progs when prog loading failed
b55aa7b04bb42274b4a894020b5b2fa059c3527e bpf: Test ref release issue in bpf_tcp_sock and bpf_sk_fullsock
7681e7b2fbe2a78806423810c0d84dd230b96f94 bpf: Add an example for bpf_get_listener_sock
cabacfbbe54ec6730b3c147599763892c6c03525 selftests/bpf: test case for invalid call stack in dead code
2c3af7d901c61c101c02f431cfb520af9ff56ab4 selftests/bpf: fix vlan handling in flow dissector program
822fe61795018265ae14731d4e5399e5bde36864 net/flow_dissector: pass flow_keys->n_proto to BPF programs
b9e9c8599f0f23e3d2051befc9966a84b639f64f flow_dissector: fix clamping of BPF flow_keys for non-zero nhoff
089b19a9204fc090793d389a265f54124eacb05d flow_dissector: switch kernel context to struct bpf_flow_dissector
39391377f8ecf2fa4569e2fede624dc091bcd859 libbpf: add binary to gitignore
6dd7f14080473b655c247863e61b7c34424f0c83 selftests/bpf: test cases for pkt/null checks in subprogs
c751798aa224fadc5124b49eeb38fb468c0fa039 bpf: fix use after free in prog symbol exposure
78c3aff834f7939d1a2570e366e33f2a880d4d9e bpf: fix sysctl.c warning
932bfc5aae08f3cb20c1c9f051542f5933710151 s390/cpumsf: Check for CPU Measurement sampling
d2183c6f1958e6b6dfdde279f4cee04280710e34 RDMA/umem: Move page_shift from ib_umem to ib_odp_umem
deee3c7e499108b0575ee0d71b786da627a7cdee RDMA/core: Return void from ib_device_check_mandatory()
890ac8d97e6722a9e4a66a0bd836d1b028d075fe RDMA/core: Make ib_destroy_cq() void
a1a8e4a85cf7daff8b26c7b8698442ef677b4f97 rdma: Delete the ib_ucm module
b9560a419bfd498279333387817adcf5faef2825 RDMA: Move driver_id into struct ib_device_ops
72c6ec18eb6161c8fc672ae96ec5c77df4d07405 RDMA: Move uverbs_abi_ver into struct ib_device_ops
7a15414252ae4f1d450462d83f883b2d9d8036ee RDMA: Move owner into struct ib_device_ops
a80287c8130552a837eb61e1ba14844bf2d03156 RDMA/cxgb3: Delete and properly mark unimplemented resize CQ function
a52c8e2469c30cf7ac453d624aed9c168b23d1af RDMA: Clean destroy CQ in drivers do not return errors
d34d37d5a102a016c63f904d1ff0284637759cc2 RDMA/cxgb3: Use sizeof() notation instead of plain sizeof
e39afe3d6dbd908d8fd189571a3c1561088a86c2 RDMA: Convert CQ allocations to be under core responsibility
2d3c72ed504196edb2f22a08cb03a0f9fb7e564f rdma: Remove nes
0e2d00eb6fd45f2a645f4874286bdc5b4b53782b RDMA: Add NLDEV_GET_CHARDEV to allow char dev discovery and autoload
8f71bb0030b8816f57be142f95b3c7189c6eaf4c RDMA: Report available cdevs through RDMA_NLDEV_CMD_GET_CHARDEV
696de2e9ccec812eae8c85bd24c75bcb12104750 RDMA/netlink: Resort policy array
a49b1dc7ae447d7085360cd587fc1c8b9ec6c871 RDMA: Convert destroy_wq to be void
574258222281221444b561b05c3a5fa85947a80c RDMA/hns: Remove asynchronic QP destroy
836a0fbb3e76f704ad65ddfb57f00725245e509b RDMA: Check umem pointer validity prior to release
26bc7eaee94fd904d1817fee4d864f8526807465 RDMA/core: Introduce IB_MR_TYPE_INTEGRITY and ib_alloc_mr_integrity API
2cdfcdd8677b277b32d32ef8976802dc5d5f883f RDMA/core: Introduce ib_map_mr_sg_pi to map data/protection sgl's
7c717d3aeeaabbfddd0fe949b501595a2e3469e4 RDMA/core: Add signature attrs element for ib_mr structure
6c984472bad12da18b88e9f4345f4970bbec0b3e RDMA/mlx5: Implement mlx5_ib_map_mr_sg_pi and mlx5_ib_alloc_mr_integrity
34d65cd837d0c77fac0c0da632c616030b2927e3 RDMA/netlink: Audit policy settings for netlink attributes
7ade1ff96c7aa7e10445688a433d7ae39a13c6c9 RDMA/restrack: Introduce statistic counter
699a9c540a04d05aa342cd84606bc8b1e8c05b7b RDMA/restrack: Add an API to attach a task to a resource
6a6c306a09b5227d51fcc1643c888e316935dfa8 RDMA/restrack: Make is_visible_in_pid_ns() as an API
413d3347503bc39e17577eaf16451fd492a68558 RDMA/counter: Add set/clear per-port auto mode support
99fa331dc8629be55ac7a0cca0dc56492070ddac RDMA/counter: Add "auto" configuration mode support
b47ae6f803b727952dfb37afd83e51c465147b85 RDMA/nldev: Allow counter auto mode configration through RDMA netlink
c4ffee7c9bdba7b189df3251e375c4c7e93a91ac RDMA/netlink: Implement counter dumpit calback
f34a55e497e81347ffbdc6e828f123520d33ce5d RDMA/core: Get sum value of all counters when perform a sysfs stat read
1bd8e0a9d0fd1be03d2833a0c15ac676bdf275d8 RDMA/counter: Allow manual mode configuration support
b389327df90530d47931d0f5616b5cd6abb96c96 RDMA/nldev: Allow counter manual mode configration through RDMA netlink
83c2c1fcbd08ec3eb69a7f381c4e453d1a45ade3 RDMA/nldev: Allow get counter mode through RDMA netlink
6e7be47a53459ba3d288c3240ccd948fc699c377 RDMA/nldev: Allow get default counter statistics through RDMA netlink
7a54f78d9387b75d8e64bac18e84cd65f639121f IB/core: Work on the caller socket net namespace in nldev_newlink()
390d57728d8e6f7283030cb20d3b5459771a32f1 RDMA/core: Make rdma_counter.h compile stand alone
05eb06d86685e7d9dac60e6bbb46d7f4c30b056e xprtrdma: Fix occasional transport deadlock
847568942f93e0af77e4bb8a098899f310cb3a88 xprtrdma: Remove fr_state
40088f0e9b62d7fa033918b54ef45f8bf7d1ad1c xprtrdma: Add mechanism to place MRs back on the free list
d8099feda4833bab96b1bf312e9e6aad6b771570 xprtrdma: Reduce context switching due to Local Invalidation
0ab115237025f5e379620bbcd56a02697d07b002 xprtrdma: Wake RPCs directly in rpcrdma_wc_send path
379d1bc5be373c920bcda16b9894ae99505ea127 xprtrdma: Simplify rpcrdma_rep_create
9ef33ef5b628037b694a433f8af014a04bb38126 xprtrdma: Streamline rpcrdma_post_recvs
675dd90ad0932f2c03912a5252458d792bd7033a xprtrdma: Modernize ops->connect
a379d1ce32f1c97b19d68cffbd195e025dbb9d43 IB/core: Fix querying total rdma stats
d191152f43a5869d7dbb50dd2a7a4b3b8b71f1f0 IB/counters: Always initialize the port counter object
621e55ff5b8e0ab5d1063f0eae0ef3960bef8f6e RDMA/devices: Do not deadlock during client removal
9cd5881719e9555cae300ec8b389eda3c8101339 RDMA/devices: Remove the lock around remove_client_context
f4915455dcf07c4f237d6160a4b6adb0575d2909 linux/dim: Implement RDMA adaptive moderation (DIM)
da6629793aa6944db6c8a908ca1a52d87f1489aa RDMA/core: Provide RDMA DIM support for ULPs
f8fc8cd9c612c31f92b19b72f619fa043ec76e5e RDMA/nldev: Added configuration of RDMA dynamic interrupt moderation to netlink
bedc0fd0f9b517698193d644f914b33951856fd2 RDMA/core: Fix -Wunused-const-variable warnings
d97de8887a12c598abc4d2e4e57a54c1f030e112 RDMA/counter: Prevent QP counter binding if counters unsupported
932727c55653c1d7838d0ecd0cdce4393be156e0 RDMA/core: Fix error code in stat_get_doit_qp()
27b7fb1ab7bfad45f5702ff0c78a4822a41b1456 RDMA/mlx5: Fix MR npages calculation for IB_ACCESS_HUGETLB
948a7287b29e06b8c629f5e70235d857a175ceaf IB/core: Fix NULL pointer dereference when bind QP to counter
c8b32408b4074232d93e64b6c23b2aa96dde448e RDMA/counters: Properly implement PID checks
60c78668ae50d6b815ead4a62216822a92097125 RDMA/restrack: Rewrite PID namespace check to be reliable
c0cf5bdde46c664d583518addc19d6dabb6a8ec9 rdma/siw: addition to kernel build environment
b45305d777f2f9209dae5a3b8249ca03166a4df3 rdma/siw: Add missing dependencies on LIBCRC32C and DMA_VIRT_OPS
0b043644c0ca601cb19943a81aa1f1455dbe9461 RMDA/siw: Require a 64 bit arch
2c8ccb37b08fe364f02a9914daca474d43151453 RDMA/siw: Change CQ flags from 64->32 bits
d6d931adce1193ef54d06fa9bbf58e5780ca516c fuse: use kvmalloc to allocate array of pipe_buffer structs.
9635453572028134b0f997afca8a6ad9ece2c515 fuse: reduce allocation size for splice_write
261aaba72fdba17b74a3a434d9f925b43d90e958 fuse: use iversion for readdir cache verification
ab2257e9941b9ef28d4a4a451e4b146d40a21e18 fuse: reduce size of struct fuse_inode
4fc4bb796b0c75067fd65292dfd874869ff7c9dc fuse: Add bad inode check in fuse_destroy_inode()
f15ecfef058d94d03bdb35dcdfda041b3de9d543 fuse: Introduce fi->lock to protect write related fields
1ccd1ea24962276ca0548386889ef7bf57479c5d fuse: convert destroy to simple api
33826ebbbe4b45ccecf2f5a08b3457f5d59c6282 fuse: convert writepages to simple api
615047eff10886bb5ef8e97232b431348bad06d1 fuse: convert init to simple api
66abc3599c3c8795861470f21ae149520a57153d fuse: unexport request ops
7213394c4e184b002d8011c13d916e7ac6d17520 fuse: simplify request allocation
f22f812d5ce75a18b56073a7a63862e6ea764070 fuse: fix request limit
04ec5af0776e9baefed59891f12adbcb5fa71a23 fuse: export fuse_end_request()
95a84cdb11c26315a6d34664846f82c438c961a1 fuse: export fuse_send_init_request()
0cc2656cdb0b1f234e6d29378cb061e29d7522bc fuse: extract fuse_fill_super_common()
ae3aad77f46fbba56eff7141b2fc49870b60827e fuse: add fuse_iqueue_ops callbacks
0cd1eb9a4160a96e0ec9b93b2e7b489f449bf22d fuse: separate fuse device allocation and installation in fuse_conn
8fab010644363f8f80194322aa7a81e38c867af3 fuse: delete dentry if timeout is zero
783863d6476ce9f27fa87227f76ae9134caf43fa fuse: dissociate DESTROY from fuseblk
15c8e72e88e0b707ffefd524ca33f28cdb3db487 fuse: allow skipping control interface and forced unmount
a62a8ef9d97da23762a588592c8b8eb50a8deb6a virtio-fs: add virtiofs filesystem
30c6a23d34cbe19162240e9f9c2c122ba807e58c fuse: on 64-bit store time in d_fsdata directly
112e72373d1f60f1e4558d0a7f0de5da39a1224d virtio-fs: Change module name to virtiofs.ko
3f22c7467136adfa6d2a7baf7cd5c573f0641bd1 virtio-fs: don't show mount options
51fecdd2555b3e0e05a78d30093c638d164a32f9 virtiofs: Do not end request in submission context
7ee1e2e631dbf0ff0df2a67a1e01ba3c1dce7a46 virtiofs: No need to check fpq->connected state
5dbe190f341206a7896f7e40c1e3a36933d812f3 virtiofs: Set FR_SENT flag only after request has been sent
c17ea009610366146ec409fd6dc277e0f2510b10 virtiofs: Count pending forgets as in_flight forgets
a9bfd9dd3417561d06c81de04f6d6c1e0c9b3d44 virtiofs: Retry request submission from worker context
80da5a809d193c60d090cbdf4fe316781bc07965 virtiofs: Remove set but not used variable 'fc'
203dffacf592317e54480704f569a09f8b7ca380 Documentation/ABI: Document umwait control sysfs interfaces
901e822b2e365dac4727e0ddffb444a2554b0a89 ASoC: soc-component: fix a couple missing error assignments
0632fa042541dbb3b8b960a8cd519eb9b6b584c0 ASoC: core: Fix pcm code debugfs error
3efd72330543da44e82e9371dfb639802c886f6c ASoC: Fix Kconfig indentation
d68c3123ba88dcd6692c90e698473d57856578e1 ALSA: firewire-lib: add a member into AMDTP domain for events per period
a0e023317e2d55c6b2fbf342c12d8a59797e1cff ALSA: firewire-lib: use variable size of queue for isoc packets instead of fixed size
1fde7a447a7f423b893ac3fcac0ba65893924189 ALSA: bebob: share PCM buffer size for both direction
659c6af569a2bd08b3b3c1f5e445a58510de02c8 ALSA: fireworks: share PCM buffer size for both direction
3299d2a0f74c0774da0672d0bc54741da4bbda6e ALSA: oxfw: share PCM buffer size for both direction
ecb40fd2c8afdb66da7e309b43c6dc90e419c2dc ALSA: dice: share PCM buffer size for both direction
76c4ecbe4b07c0d1b1aba31bf2a7f20cccbdbb4e ALSA: firewire-digi00x: share PCM buffer size for both direction
128307d5f947d43a89e68dd8357879a0f111821d ALSA: firewire-tascam: share PCM buffer size for both direction
0f5482e7875bc2d507e6d92fcc8de22ff75fbdda ALSA: firewire-motu: share PCM buffer size for both direction
4de3eb062e2daf04646d23417a39b8843df4508b ALSA: fireface: share PCM buffer size for both direction
e229853d505d7ab77e9b68b0ac91d19f48fe6d80 ALSA: firewire-lib: schedule hardware IRQ according to the size of PCM period
03b4816dcb6ee348edf248f7ba9f04f1e90c2fc7 ALSA: firewire-lib: add irq_target member into amdtp_domain struct
f890f9a04b361b2209c38e3317e6290a98e6ff6e ALSA: firewire-lib: replace pointer callback to flush isoc contexts in AMDTP domain
e6dcc92fcea07f23c13996b7bb6a2a32ed4c6ed5 ALSA: firewire-lib: replace ack callback to flush isoc contexts in AMDTP domain
813dfbd6845e5366f2dbef190a695f8b06c1d83d ALSA: firewire-lib: cancel flushing isoc context in the laste step to process context callback
60dd49298ec5803ca423836d5a724c3fe402cc3f ALSA: firewire-lib: handle several AMDTP streams in callback handler of IRQ target
acfedcbe1ce4c69e1da914f39c02d945c80198d4 ALSA: firewire-lib: postpone to start IR context
da5e83374f463a4dd91321428d5ea5230b6d87b4 ALSA: bebob: expand delay of start for IR context just for version 3 firmware
ff4a742dde3c4b80a91cdd754fed3bc576df28c9 s390/kernel: convert SYSCALL and PGM_CHECK handlers to .quad
a80313ff91abda67641dc33bed97f6bcc5e9f6a4 s390/kernel: introduce .dma sections
b2d24b97b2a9691351920e700bfda4368c177232 s390/kernel: add support for kernel address space layout randomization (KASLR)
868202ce15a7b52534257426a94f40b6d9f6150f s390/boot: add missing declarations and includes
759d4899d905c2a491d34987366421aebca359de s390/kaslr: reserve memory for kasan usage
c13207905340d85eaddd85b6d2868218f324b180 arm64: perf: Add support for chaining event counters
21bb0ebf5d78c669ed887f30889f2d28cf6bf7db arm64: arm_pmu: Remove unnecessary isb instruction
eb41238cf19fda694e3a99c1f4f58bd88479a5ee arm64: KVM: Add accessors to track guest/host only counters
d1947bc4bc63e56014bb4d812e0db89944ed4a0f arm64: arm_pmu: Add !VHE support for exclude_host/exclude_guest attributes
3d91befbb3a0fcec6e1eebde45c8074b88cc9441 arm64: KVM: Enable !VHE support for :G/:H perf event modifiers
435e53fb5e21ad1820c5c69f208304c0e5623d01 arm64: KVM: Enable VHE support for :G/:H perf event modifiers
39e3406a090a54e700a7c0820c8258af1196b0c2 arm64: KVM: Avoid isb's by using direct pmxevtyper sysreg
21137301de5a5bd8be7b0de7896c3f139b7eb859 arm64: KVM: Fix perf cycle counter support for VHE
b7c50fab66ab66e2d3e00f809a09578d78232836 KVM: arm64: Move pmu hyp code under hyp's Makefile to avoid instrumentation
f5dd4ccf5552d71a817d0ec97481e4a71425a038 kvm: selftests: introduce aarch64_vcpu_setup
fb89f4ea7feb1e605f8f405d256c56d8ad69125c kvm: selftests: introduce aarch64_vcpu_add_default
3276cc2489641f7f37e9558f5fe9d6ae17a25528 arm64: Update silicon-errata.txt for Neoverse-N1 #1349291
c118bbb52743df70e6297671606c1c08edc659fe arm64: KVM: Propagate full Spectre v2 workaround state to KVM guests
be604c616ca71cbf5c860d0cfa4595128ab74189 arm64: sysreg: Make mrs_s and msr_s macros work with Clang and LTO
fdec2a9ef853172529baaa192673b4cdb9a44fac KVM: arm64: Migrate _elx sysreg accessors to msr_s/mrs_s
1e0cf16cdad1ba53e9eeee8746fe57de42f20c97 KVM: arm/arm64: Initialise host's MPIDRs by reading the actual register
3d584a3c85d6fe2cf878f220d4ad7145e7f89218 arm64: KVM: regmap: Fix unexpected switch fall-through
92f35b751c71d14250a401246f2c792e3aa5b386 KVM: arm/arm64: vgic: Allow more than 256 vcpus for KVM_IRQ_LINE
bcfa4b72111c9a4d483024cb1f877803b354aa11 memremap: Convert to XArray
8fc5c73554db0ac18c0c6ac5b2099ab917f83bdf acpi/nfit, device-dax: Identify differentiated memory with a unique numa-node
a2d1c7a61db9b1e261410c7d9e2be2243040749b libnvdimm/region: Rewrite _probe_success() to _advance_seeds()
1c97afa714098aab2ca588cc654f8ff67dd46dcb libnvdimm/pmem: Advance namespace seed for specific probe errors
c05f42206f4de12b6807270fc669b45472f1bdb7 blk-mq: remove blk_mq_put_ctx()
970d168de636ddac8221cbd4a11d7678943e7379 blk-mq: simplify blk_mq_make_request()
a12de1d42d74ef3c80e9fb9a2da94daaef747869 blk-mq: honor IO scheduler for multiqueue devices
cceb1d9dfa680e8b0f5d70d87c2ee25903070b96 powercap/intel_rapl: add support for ICX
895e3dceeb97855dc9990136cbb80a842fe581aa powerpc/mce: Handle UE event for memcpy_mcsafe
4d4a273854c9eac1a1b163830658dc825e183ad5 powerpc/memcpy: Add memcpy_mcsafe for pmem
42ac26d253ebe7a5f409443f2fbd239d66b65f57 powerpc: add machine check safe copy_to_user
20055a8bfaaa75f2cb9c23ecc8ab12b4abd8dc84 powerpc/memcpy: Fix stack corruption for smaller sizes
6f62a8223e65c0571e48225d5d7e56de95225bae seltests/powerpc: Add a selftest for memcpy_mcsafe
ddbca70cc45c0ac97ff6d9529e45f10b8ae73ad4 xfs: allocate xattr buffer on demand
220dd7699c46d5940115bd797b01b2ab047c87b8 x86, efi: Never relocate kernel below lowest acceptable address
2cffe9f6b96fece065ee8522673c90e92ef2085d cpuidle: add haltpoll governor
a1c4423b02b2121108e3ea9580741e0f26309a48 cpuidle-haltpoll: disable host side polling when kvm virtualized
97d3eb9da84cae0548359b0aecb8619faad003b7 cpuidle-haltpoll: vcpu hotplug support
61cb5758d3c46bc1ba87694fefc0d9653613ce6b cpuidle: Add cpuidle.governor= command line parameter
7321440829a27d58c88b7fcfcbbc37487b5e39a5 cpuidle-haltpoll: set haltpoll as preferred governor
472f263660832b90e53bede2020f68cd14f8b76c cpuidle-haltpoll: do not set an owner to allow modunload
e9b98e162aa53cbea7c8b0d6c9d5dc6e0f822b9c stacktrace: Provide helpers for common stack trace operations
214d8ca6ee854f696f75e75511fe66b409e656db stacktrace: Provide common infrastructure
7eaf51a2e094229b75cc0c315f1cbbe2f3960058 stacktrace: Unbreak stack_trace_save_tsk_reliable()
7e8e6816c6495a1168f9a7a50125d82c23e59300 stacktrace: Use PF_KTHREAD to check for kernel threads
cac9b9a4b08304f11daace03b8b48659355e44c1 stacktrace: Force USER_DS for stack_trace_save_user()
a2970421640bd9b6a78f2685d7750a791abdfd4e stacktrace: Constify 'entries' arguments
b0c51f158455e31d5024100cf3580fcd88214b0e stacktrace: Don't skip first entry on noncurrent tasks
2815ef7fe4d43072b9eda448d04fbc184f2aa513 xhci-pci: allow host runtime PM as default for Intel Alpine and Titan Ridge
eeac0e20a173dd9407e7092b3ddb45917249d68d s390/qeth: collect accurate TX statistics
e53edf743d26b39dfd78af43ff97620a4ac13ffc s390/qeth: add TX NAPI support for IQD devices
85e537d8f1b6b1201ced628b124b3d08436f5a04 s390/qeth: when in TX NAPI mode, use napi_consume_skb()
96bd6c94bdf9de38b0fa0ec679fe40013f1c4576 s390/qeth: add BQL support for IQD devices
9549d70a2d71526b8dc41cc0b255219ba46e5bf7 s390/qeth: add xmit_more support for IQD devices
8b664cd127a1e3777e23c8aaa96ba52ef741bb55 s390/qeth: use IQD Multi-Write
9bd3bb6703d8c0a5fb8aec8e3287bd55b7341dcd mm/nvdimm: add is_ioremap_addr and use that to check ioremap address
da1115fdbd6e86c62185cdd2b4bf7add39f2f82b powerpc/nvdimm: Pick nearby online node if the device node is not online
aba941392aeef2d1bc064a1e4b09293473ef7b9b ACPI / scan: Create platform device for fwnodes with multiple i2c devices
589edb56b424876cbbf61547b987a1f57d7ea99d ACPI / scan: Create platform device for INT33FE ACPI nodes
a3dd034a1707490119f32bd0c50e6047e42d2517 ACPI / scan: Create platform device for INT3515 ACPI nodes
5d32a66541c4683456507481a0944ed2985e75c7 PCI/ACPI: Allow ACPI to be built without CONFIG_PCI set
9ec6dbfbdc0ade855e6bc1da66e263e0d926697c ACPI: no need to check return value of debugfs_create functions
6010ce3f2e57a4a30327abba528876bd7c8cbd36 ACPI: debug: Clean up acpi_aml_init()
96f984d3127e283265a6245dacc399967655fe54 ACPI / scan: Create platform device for BSG2150 ACPI nodes
625210cfa6c0c26ea422f655bf68288176f174e6 x86/Kconfig: Select PCI_LOCKLESS_CONFIG if PCI is enabled
91a87a5823f798f1c7b26783e0d2c6d22a1dc28c nfp: bpf: split up the skip flag
9a06927e778bc4e805acc8fa03573bbf7e597cc5 nfp: bpf: support removing dead code
6515ad717bd723f7564581ffdfd5d8064602f29f scsi: qla2xxx: Reduce the number of forward declarations
f45bca8c5052e8c59bab64ee90c44441678b9a52 scsi: qla2xxx: Fix double scsi_done for abort path
98fa15f34cb379864757670b8e8743b21456a20e mm: replace all open encodings for NUMA_NO_NODE
03b92789e5cfdac66805c1a98f1ec67336199d56 hfi1: Convert hfi1_unit_table to XArray
3a4ef2e2b5cf9a34bcc66c0d33f7eba180a14535 RDMA/rdmavt: Catch use-after-free access of AH structures
239b0e52d8aa64d2559c672fd8c29cf1fffc3ec7 IB/hfi1: Move rvt_cq_wc struct into uapi directory
dabac6e460ce8473f1e685432a8ab7818d81a1f1 IB/hfi1: Move receive work queue struct into uapi directory
f592ae3c999fbe4faeeb90dfde8ff7da49ee4ae6 IB/rdmavt: Fracture single lock used for posting and processing RWQEs
5136bfea7e79b333af77594fac5bc70282a95313 IB/{hfi1, qib, rdmavt}: Put qp in error state when cq is full
d310c4bf8aeacc0256091feb6a0337b8fef763ac IB/{rdmavt, hfi1, qib}: Remove AH refcount for UD QPs
2b0ad2da8fd4c32f63d9142f2de43a4d34fdd679 IB/{rdmavt, hfi1, qib}: Add helpers to hide SWQE WR details
f10ff380fd7dfba4a36d40f8dd00fe17da8a1a10 RDMA/rvt: Do not use a kernel header in the ABI
4d2b8517ba1f3aba9a952ebf153ec972a127c80c IB/rdmavt: Fix variable shadowing issue in rvt_create_cq
7199435414868bd656284349edc1a1f528fe3662 IB/{rdmavt, hfi1, qib}: Add a counter for credit waits
22bb13653410424d9fce8d447506a41f8292f22f IB/hfi1: Use a common pad buffer for 9B and 16B packets
03f008c52b76114b83483de2cf15ed36fc34930c crypto: ccp - Verify access to device registers before initializing
b473b0d23529cde6c825a592c035e9d910b19e21 devlink: create a special NDO for getting the devlink instance
1b45ff6c17f1d07c496b08dd602a4aff8fe40848 devlink: hold a reference to the netdevice around ethtool compat
be6fe1d8e1023bd80e122fa5eeeaff2ce66e9247 devlink: require non-NULL ops for devlink instances
e0dcd386d1fc6ed9e90d76dfdf533287555d79d2 net: devlink: don't take devlink_mutex for devlink_compat_*
f6b19b354d50c5ae46ad66b5273f92e563fbc847 net: devlink: select NET_DEVLINK from drivers
af3836df9a59e7339d60c9c46729a7d9094d0582 net: devlink: introduce devlink_compat_phys_port_name_get()
782a624d00fa22e7499f5abc29747501ec671313 bnxt_en: Add bnxt_en initial port params table and register it
da203dfa89ce83c55b6623f73560ef7ec742aca4 Revert "devlink: Add a generic wake_on_lan port parameter"
a0e18132ec51301414a5c92e6c258c2e62fdf08f bnxt: set devlink port attrs properly
c3f10cbcaa3d5e1980733c3ccd0261df426412d2 bnxt: call devlink_port_type_eth_set() before port register
d0d54e8c359399a8d07656779d5b6ddae68ef3c7 bnxt: set devlink port type after registration
faaccbe6eb07ecd590bebae11eb236661ecfb069 nfp: move devlink port type set after netdev registration
bec5267cded268acdf679b651778c300d204e9f2 net: devlink: extend port attrs for switch ID
7e1146e8c10c00f859843817da8ecc5d902ea409 net: devlink: introduce devlink_compat_switch_id_get() helper
88c44a5200849c8182eaf36535b4ceae6b90b19d net/sched: add block pointer to tc_cls_common_offload structure
b66d035eec141b9faa3f495e9bc240f58c57ed52 nfp: flower: add qos offload framework
49cbef1388691c0e393541a5cfefb927b721ea59 nfp: flower: add qos offload install and remove functionality.
d6787147e15dffa7b7f3116a5bc3cbe0670bd74f net/sched: remove block pointer from common offload structure
3e48be05f3c7eb6f6126939e9d957903c5cfeee5 netlink: add attribute range validation to policy
33188bd6430ef06d206ae4fda2cc92f14f16fd20 netlink: add validation function to policy
5b2f94b27622d5b92d1cebf4bb5a627db4444607 net: rtnetlink: support for fdb get
f989d03ef25df3fc26d3ea0fe7c19c9830577166 net: rtnetlink: address is mandatory for rtnl_fdb_get
1c117d3b721a2678020d522ff1bf33984d4f0a5a netfilter: conntrack: fix removal of conntrack entries when l4tracker is removed
b83329fb473f29d34d85d642e3a3313bb2871fa9 netfilter: synproxy: fix erroneous tcp mss option
e971ceb803e147e47c15cbb7c5b84327c6453786 netfilter: synproxy: fix rst sequence number mismatch
6a48de0144767f2c6880540c0a4ac6741e3c440b netfilter: nf_tables: don't prevent event handler from device cleanup on netns exit
a9f5e78c403d2d62ade4f4c85040efc85f4049b8 netfilter: nf_tables: check the result of dereferencing base_chain->stats
3b0f31f2b8c9fb348e4530b88f6b64f9621f83d6 genetlink: make policy common to family
8cb081746c031fb164089322e2336a0bf5b3070c netlink: make validation more configurable for future strictness
3de644035446567017e952f16da2594d6bd195fc netlink: re-add parse/validate functions in strict mode
56738f460841761abc70347c919d5c45f6f05a42 netlink: add strict parsing for future attributes
ef6243acb4782df587a4d7d6c310fa5b5d82684b genetlink: optionally validate strictly/dumps
c04b6ea4e6097dbe35f50d4302bbcbab5310df31 tipc: fix missing indentation in source code
d00ee64e1dcf09b3afefd1340f3e9eb637272714 netlink: Fix nlmsg_parse as a wrapper for strict message parsing
05d7f547bea1872e711ee97bd46aace6cf61c42b genetlink: do not validate dump requests if there is no policy
b424e432e770d6dd572765459d5b6a96a19c5286 netlink: add validation of NLA_F_NESTED flag
d54a16b20157ce300298eb4a1169bf9acfda3d08 netlink: set bad attribute also on maxtype check
c3b4c3a47e05d5fecf7354d75824a9d1b37f3e84 xfrm/xfrm_policy: fix dst dev null pointer dereference in collect_md mode
232aa8ec3ed979d4716891540c03a806ecab0c37 tcp_bbr: refactor bbr_target_cwnd() for general inflight provisioning
6b3656a60f2067738d1a423328199720806f0c44 tcp_bbr: fix quantization code to not raise cwnd if not probing bandwidth
cca9bab1b72cd2296097c75f59ef11ef80461279 tcp: use monotonic timestamps for PAWS
40a1227ea845a37ab197dd1caffb60b047fa36b1 tcp: Avoid TCP syncookie rejected by SO_REUSEPORT socket
9ee963d6a1a03a4302b230cd21476a3c269af284 net: xdp: allow generic and driver XDP on one interface
106c35dda32f8b63f88cad7433f1b8bb0056958a selftests/bpf: More compatible nc options in test_lwt_ip_encap
1fde6f21d90f8ba5da3cb9c54ca991ed72696c43 proc: fix /proc/net/* after setns(2)
35ebfc22fe991cf5a01680a43ee238dfc16fe4c1 afs: do not send list of client addresses
b8d19572367bb019f77bbc921ef6bf965f1c8b22 netfilter: use in_dev_for_each_ifa_rcu
dcc5e1f9cad0e31198c4a4254981928299b49054 selftests: tc: add ingress device matching support
ed246cee09b9865145a2e1e34f63ec0e31dd83a5 net: core: move pop MPLS functionality from OvS to core helper
d27cf5c59a12f66425df29cd81f61aa73ef14ac1 net: core: add MPLS update core helper and use in OvS
2a2ea50870baa3fb4de0872c5b60828138654ca7 net: sched: add mpls manipulation actions to TC
b57dc7c13ea90e09ae15f821d2583fa0231b4935 net/sched: Introduce action ct
f11fe1dae1c46762a9a7b0dd142b6bfebe7783ff net/sched: Make NET_ACT_CT depends on NF_NAT
6749d59016981bca6d7000e40bdb08eed78dfa6f net: sched: include mpls actions in hardware intermediate representation
dedc5a08da07874c6e0d411e7f39c5c2cf137014 net: avoid errors when trying to pop MLPS header on non-MPLS packets
fa4e0f8855fcba600e0be2575ee29c69166f74bd net/sched: fix corrupted L2 header with MPLS 'push' and 'pop' actions
4522a70db7aa5e77526a4079628578599821b193 l2tp: fix reading optional fields of L2TPv3
161e613755e93c45cc47e75ab046f0f8de9e6d49 net: add missing documentation in linux/skbuff.h
7240b60c98d6309363a9f8d5a4ecd5b0626f2aff linux: Add skb_frag_t page_offset accessors
3730cf4dd70b6a36e48d58a862120311411b77f5 netlink: do not store start function in netlink_cb
5886d932e52acfbe12ea5aac8e7c3ad6f16364d1 netlink: replace __NLA_ENSURE implementation
ae0be8de9a53cda3505865c11826d8ff0640237c netlink: make nla_nest_start() add NLA_F_NESTED flag
12ad5f65f030ae7b8a2425f6f79137c4217e30d4 ipset: drop ipset_nest_start() and ipset_nest_end()
f78c6032c4cb89b408190afd4feb61ff4461a114 net: fix two coding style issues
c22a133a83ce64949dc35156eaefeda5a1e12bc3 rtnetlink: skip metrics loop for dst_default_metrics
362b87f5b1c6603b72699e8bb18661ecc4efc0bb netlink: use 48 byte ctx instead of 6 signed longs for callback
3256a2d6ab1f71f9a1bd2d7f6f18eb8108c48d17 tcp: adjust rto_base in retransmits_timed_out()
e9789c7cc182484fc031fd88097eb14cb26c4596 sch_cbq: validate TCA_CBQ_WRROPT to avoid crash
ad06a566e118e57b852cab5933dbbbaebb141de3 openvswitch: Properly set L4 keys on "later" IP fragments
4e95bc268b915c3a19ec8b9110f61e4ea41a1ed0 net: flow_offload: add flow_block_cb_setup_simple()
9c0e189ec988f306331036bc3f71085582b24fdc net: flow_offload: rename TC_BLOCK_{UN}BIND to FLOW_BLOCK_{UN}BIND
32f8c4093ac353a5f1b36cfed0ce0138faf8e15f net: flow_offload: rename TCF_BLOCK_BINDER_TYPE_* to FLOW_BLOCK_BINDER_TYPE_*
d63db30c8537ba45208c156d71125db73d0fe522 net: flow_offload: add flow_block_cb_alloc() and flow_block_cb_free()
da3eeb904ff432ec22cf7b4db17a47647428873a net: flow_offload: add list handling functions
67bd0d5ea7974d9dc9c502c7b4096e16a80a553d net: flow_offload: add flow_block_cb_{priv, incref, decref}()
722d36e6e29e50c640c9f5ce186b8d8709cae1a6 net: sched: remove tcf block API
0d4fd02e7199fbf57c0d175dd1890c82cd4a6f4f net: flow_offload: add flow_block_cb_is_busy() and use it
f9e30088d20016a224d8110d45356da253eaa26a net: flow_offload: rename tc_cls_flower_offload to flow_cls_offload
0c7294ddae73ad8d7532f95a86259e311e991a55 net: flow_offload: remove netns parameter from flow_block_cb_alloc()
a7323311515d488b7714bb7504a1d50fabb0bfcf net: flow_offload: rename tc_setup_cb_t to flow_setup_cb_t
14bfb13f0ed525ed117b5d1f3e77e7c0a6be15de net: flow_offload: add flow_block structure and use it
c1a970d06f8cf390354a4a426976ed7f960b71f1 net: sched: Fix NULL-pointer dereference in tc_indr_block_ing_cmd()
3929502b957ed05575e74134a817f26c42d13e2c net/mlx5e: Provide cb_list pointer when setting up tc block on rep
1edfb8ed6cc12107c2ec61b5be7bc881cfc4460e nfp: flower: verify that block cb is not busy before binding
6c47260250fc6114ce2012db13e1cd3938a27b73 netfilter: nf_tables: add xfrm expression
1321a6af30e45e467d0a5da00e8480c48cb627ee netfilter: nft_xfrm: use state family, not hook one
d983ea6f16b835dcde2ee9a58a1e764ce68bfccc tcp: add rcu protection around tp->fastopen_rsk
cab209e571a9375f7dc6db69a6c40d2d98e57e3b tcp: fix a possible lockdep splat in tcp_done()
eddf016b910486d2123675a6b5fd7d64f77cdca8 net: ipmr: fix unresolved entry dumps
378ef01b5f75e6c485b8f16b4f6a7842a312aa07 devlink: Refactor physical port attributes
a2c6b87dd08cdfc2d065d4ae369e4e747b521a7f devlink: Return physical port fields only for applicable port flavours
98fd2d6563fe4a799934a2a74d632601cd089beb devlink: Introduce PCI PF port flavour and port attribute
e41b6bf3cdd474dc9c587cb55906b0256835bf6d devlink: Introduce PCI VF port flavour and port attribute
08010a21602678932894c5e87014a282af0079cf netfilter: add API to manage NAT helpers.
fec9c271b8f1bde1086be5aa415cdb586e0dc800 openvswitch: load and reference the NAT helper.
fb1b775a247ee8d846152841f780eba6cb71bcfc net: sched: add skbedit of ptype action to hardware IR
4097e9d250fb17958c1d9b94538386edd3f20144 net: sched: don't use tc_action->order during action dump
a51486266c3ba8e035a47fa96df67f274fe0c7d0 net: sched: remove NET_CLS_IND config option
489ce2f42514b4324e5c63e93ae7570cab995254 tc-testing: Restore original behaviour for namespaces in tdc
c8ec4632c6ac9cda0e8c3d51aa41eeab66585bd5 ife: error out when nla attributes are empty
242453c227d14751fed0a8809a58f1bf3c7d837a cls_api: modify the tc_indr_block_ing_cmd parameters.
f8436988574e50fe69f6f193ee76c3185b17a5c7 cls_api: remove the tcf_block cache
e4da91021153b78b9f2972212610bc71263925f4 cls_api: add flow_indr_block_call function
4e481908c51bf02457aecdedc2d80e1be22e0146 flow_offload: move tc indirect block to flow offload
1150ab0f1b333ca310431dac65d8fa403b8471da flow_offload: support get multi-subsystem block
ef01adae0e43cfb2468d0ea07137cc63cf31495c net: sched: use major priority number as hardware priority
607f625b86f9ba4c5c04df190c73010de65f4e91 net: flow_offload: convert block_ing_cb_list to regular list type
981471bd3abf4d572097645d765391533aac327d net_sched: fix a NULL pointer deref in ipt action
4f8116c85057239ff37519debdd5d45b38ad8130 net: sched: protect block offload-related fields with rw_semaphore
97394bef5622cb32fd1e5d152251090da6c238b9 net: sched: change tcf block offload counter type to atomic_t
401192113730947572d280ec465555ab9ff5a597 net: sched: refactor block offloads counter usage
a449a3e77a85fc8b31fef7238451dc87af8ff1af net: sched: notify classifier on successful offload add/delete
c9f14470d04830de217f9d28fcd0deffd7e8c0b1 net: sched: add API for registering unlocked offload block callbacks
11bd634da25735a3f2f12112d02661d462a76792 net: sched: conditionally obtain rtnl lock in cls hw offloads API
9838b20a7fb28c69fa66ac8e68d967ffe1d0ecad net: sched: take rtnl lock in tc_setup_flow_action()
5a6ff4b13d598573fc954f672cd2a267b76a01ec net: sched: take reference to action dev before calling offloads
1444c175a37443d3f6d3db825df050741452c3c3 net: sched: copy tunnel info when setting flow_action entry->tunnel
918190f50eb630032ca0fb21f14f2e9c5c325626 net: sched: flower: don't take rtnl lock for cls hw offloads API
f2b795ea025c743073933d5a121e22a2c3e66c99 net: sched: cls_matchall: cleanup flow_action before deallocating
daa664a5cdd599583fceb9018c49d783bc5a0d5d net/mlx5e: Move local var definition into ifdef block
02a3f0d5a70a865d55c4b7cb2e327cb30491f7fd tc-testing: don't hardcode 'ip' in nsPlugin.py
95a7233c452a58a4c2310c456c73997853b2ec46 net: openvswitch: Set OvS recirc_id from tc chain index
1158958a218bb55d1c358200d7f82808d11bf929 net: sched: extend flow_action_entry with destructor
4a5da47d5cb6aba3c26a5cc0dddfb2d577e851e9 net: sched: take reference to psample group in flow_action infra
470d5060e6b3b8fae47d944601855e9ece7a2470 net: sched: use get_dev() action API in flow_action infra
199ce850ce112315cfc68d42b694bcaa27b097b7 net_sched: add policy validation for action attributes
dfe5999dc03e321d08190772c98843284d5cf419 net/sched: Set default of CONFIG_NET_TC_SKB_EXT to N
4b793feccae3b06764268377a4030eb774ed924e net_sched: fix backward compatibility for TCA_ACT_KIND
c8ecebd04cbb6badb46d42fe54282e7883ed63cc net: sched: extract common action counters update code into function
5e1ad95b630e652d3467d1fd1f0b5e5ea2c441e2 net: sched: extract bstats update code into function
26b537a88ca5b7399c7ab0656e06dbd9da9513c1 net: sched: extract qstats update code into functions
5e174d5e73dfbfb2c4bc4804f58f2f2aa34c9281 net: sched: modify stats helper functions to support regular stats
abbb0d33632ce931ca9c814813ee131351f6b92f net: sched: extend TCA_ACT space with TCA_ACT_FLAGS
e38226786022d2d8e5876ab7bc37e82b0eb57e65 net: sched: update action implementations to support flags
41aa29a58b5f7f7be43f35372ef411f304a87a0d net: cls_bpf: fix NULL deref on offload filter removal
7a338472f225f18694cc4d9ad1f6f9428f4a88d0 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 482
9143613ef0ba9f88d2fef9038930637a0909d35a selftests: kvm: consolidate VMX support checks
11eada4718a352a6a588de9908200c1e348530f1 selftests: kvm: vmx_dirty_log_test: skip the test when VMX is not supported
6605a226781eb1224c2dcf974a39eea11862b864 bnxt: pass switch ID through devlink_port_attrs_set()
a220eabc8887e3c02d308a9960e92a70cbd00b52 bnxt_en: Refactor bnxt_alloc_stats().
55e4398d4ee578094fb38f25af175629a24675d5 bnxt_en: Add support for PCIe statistics
6154532fe8fe4e5ec5ffb1a71f587015973f8753 bnxt_en: Check new firmware capability to display extended stats.
691aa62045c2b23152ce3b64feb601502aab97c5 bnxt_en: Read package version from firmware.
e969ae5bbfcf48e3ff2d159870453121d5a8441d bnxt_en: Query firmware capability to support aRFS on 57500 chips.
322b87ca55f2f3936ec9f9de438ef9b2115b5c9b bnxt_en: add page_pool support
12479f627f7c2017e6fcd50b56c2537592674c50 bnxt_en: Add page_pool_destroy() during RX ring cleanup.
4a228a3a5e58e5c05c6ffb5b430e5cb936865a8b bnxt_en: Refactor TPA logic.
79632e9ba38671215fb193346ef6fb8db582744d bnxt_en: Expand bnxt_tpa_info struct to support 57500 chips.
bfcd8d791ec18496772d117774398e336917f56e bnxt_en: Add fast path logic for TPA on 57500 chips.
ec4d8e7cf024e42def027531676918048e5c7982 bnxt_en: Add TPA ID mapping logic for 57500 chips.
4e7485066373f3e9a87fa063b65d0838990753e5 bnxt_en: Allocate the larger per-ring statistics block for 57500 chips.
7c3809181468a219aa2abd25910bd3b02b89b0de bnxt_en: Refactor bnxt_init_one() and turn on TPA support on 57500 chips.
3a131e85043cf538d5e70c0f23f9d69a4dd642b9 bnxt: no need to check return value of debugfs_create functions
fbbdbc6473070dcb3ee1d69cf1c49ff78677d716 bnxt_en: Fix allocation of zero statistics block size regression.
ba642ab773db97c32293547485f562d2dfc06666 bnxt_en: Prepare bnxt_init_one() to be called multiple times.
ec5d31e3c15d5233b491400133c67f78a320062c bnxt_en: Handle firmware reset status during IF_UP.
07f83d72d238f5d41b03d6142641129e8a7a0ec4 bnxt_en: Discover firmware error recovery capabilities.
9ffbd67734909ca8bb099e62f06387649b43d5a8 bnxt_en: Pre-map the firmware health monitoring registers.
3bc7d4a352efe5b596883ef16b769055320db1f6 bnxt_en: Add BNXT_STATE_IN_FW_RESET state.
6763c779c2d8b568b2e174f3eeeaf644fa38b34d bnxt_en: Add new FW devlink_health_reporter
230d1f0de754b483ec6eefc1ca5aaeff2b6b9a4c bnxt_en: Handle firmware reset.
657a33c8a0a2342e91259b28356838dc89216b19 bnxt_en: Add devlink health reset reporter.
2cd8696850450b750f278be06ee56eb51d84621c bnxt_en: Retain user settings on a VF after RESET_NOTIFY event.
b4fff2079d1080af7dcad8ad0e80cc89e1ee000c bnxt_en: Do not send firmware messages if firmware is in error state.
cbb51067a5f5fbae733283b67fc8013881eb4bb1 bnxt_en: Add RESET_FW state logic to bnxt_fw_reset_task().
d1db9e166bf6a50e1e6713f3fd3b4de6007e3671 bnxt_en: Add bnxt_fw_exception() to handle fatal firmware errors.
acfb50e4e773c9a5755a3c265c7c20d37a8642e5 bnxt_en: Add FW fatal devlink_health_reporter.
e72cb7d6245380acc11a24b75a865f7104ac8b33 bnxt_en: Fix compile error regression with CONFIG_BNXT_SRIOV not set.
4037eb715680caa3d80075fb54dbc35d79d5f9ff bnxt_en: Add a new BNXT_FW_RESET_STATE_POLL_FW_DOWN state.
a55c7454a8c887b226a01d7eed088ccb5374d81e sched/topology: Improve load balancing on AMD EPYC systems
72a7720fca37fec0daf295923f17ac5d88a613e1 RDMA: Introduce ib_port_phys_state enum
691f380df242a6725cb4cc706887c293cfba6afc RDMA/cxgb3: Use ib_device_set_netdev()
ee4e4040ab6191f9431afad9a2deec76f6759cad RDMA/i40iw: Associate ibdev to netdev before IB device registration
3eca7fc2d8d1275d9cf0c709f0937becbfcf6d96 RDMA: Fix double-free in srq creation error flow
ab59ca3eb4e7059727df85eee68bda169d26c8f8 RDMA/core: Fix an error handling path in 'res_get_common_doit()'
594e6c5d41ed2471ab0b90f3f0b66cdf618b7ac9 RDMA/nldev: Reshuffle the code to avoid need to rebind QP in error path
1cbe866cbcb53338de33cf67262e73f9315a9725 IB/core: Fix wrong iterating on ports
54102dd410b037a4d7984e6a5826fb212c2f8aca RDMA/iwcm: move iw_rem_ref() calls out of spinlock
a15542bb72a48042f5df7475893d46f725f5f9fb RDMA/nldev: Skip counter if port doesn't match
edbf8c01de5a104a71ed6df2bf6421ceb2836a8e bpf: add skc_lookup_tcp helper
399040847084a69f345e0a52fd62f04654e0fce3 bpf: add helper to check for a valid SYN cookie
dbaf2877e9ad0ac77c463d1bf87b2eb7efc46160 selftests/bpf: allow specifying helper for BPF_SK_LOOKUP
5792d52df1e77110abf0d11b1131992a8c0c8d17 selftests/bpf: test references to sock_common
bafc0ba8261e36e36b0b1e851749fd3712a2a6f4 selftests/bpf: add tests for bpf_tcp_check_syncookie and bpf_skc_lookup_tcp
98cdabcd0798bd9991821493120b928ed0dfab73 selftests/bpf: bpf tunnel encap test
ccd34cd3577dd6e244269bb8ccfab228360aa53d selftests/bpf: expand bpf tunnel test with decap
ef81bd054942e2bd8289c91a3528e6fc0ca26c1c selftests/bpf: expand bpf tunnel test to ipv6
7255fade7b93e7e84e12f27ae5e8af9cf8b93745 selftests/bpf: extend bpf tunnel test with gre
8142958954d17a31e0ac9e3a9c91103a1c171179 selftests/bpf: extend bpf tunnel test with tso
005edd16562b78f416e2f576a64789c90d96882f selftests/bpf: convert bpf tunnel test to BPF_ADJ_ROOM_MAC
94f16813e1b297d31f8fe6217cd9be19e080f998 selftests/bpf: convert bpf tunnel test to BPF_F_ADJ_ROOM_FIXED_GSO
75a1a9fa2e20de6319a19161ce4e2e1817d70e28 selftests/bpf: convert bpf tunnel test to encap modes
315a202987dd2b2e0adebd13c83ceef44836e66f bpf: make bpf_skb_ecn_set_ce callable from BPF_PROG_TYPE_SCHED_ACT
7df5e3db8f6354125540dfa50affd2c02b7d2832 selftests: bpf: tc-bpf flow shaping with EDT
0c4ea7f87abbdb56df616678bc23f10e51a0b4f8 bpf: test_tc_tunnel.sh needs reverse path filtering disabled
b4b6aa83433ea4675d4ba1be56774623db81f14f selftests: bpf: don't depend on hardcoded perf sample_freq
8ff80e96e3ccea5ff0a890d4f18997e0344dbec2 selftests/bpf: Test variable offset stack access
6b7b6995c43e17f994c51c107740daedd948255a selftests: bpf: tests.h should depend on .c files, not the output
a918b03e8c956d159b13fdde8608847393d54ef9 selftests: bpf: fix -Wformat-invalid-specifier for bpf_obj_id.c
7596aa3ea8a0b478a8a5c6207e69cc7fcc035d45 selftests: bpf: remove duplicate .flags initialization in ctx_skb.c
e5e7a8f2d858a91b79c4afc51a3f15edcbf9cb60 selftests/bpf: add few verifier scale tests
8aa2d4b4b92cd534d53353b0c2fb079572b97fdf selftests/bpf: synthetic tests to push verifier limits
e67b2c715415b121339049b630f0b4e1ede888dc samples, selftests/bpf: add NULL check for ksym_search
f68a5b44647bce6c34b10d5560c5b2c0aff31afc selftests/bpf: Test indirect var_off stack access in raw mode
2c6927dbdc3fbd41207e671212f53a98bbebf6ba selftests/bpf: Test indirect var_off stack access in unpriv mode
07f9196241f8bceef975dd15f894f8ed51425d55 selftests/bpf: Test unbounded var_off stack access
d8eca5bbb2be9bc7546f9e733786fa2f1a594c67 bpf: implement lookup-free direct value access for maps
fb2abb73e575b6fcb428f803faf928ef04d5bb1e bpf, selftest: test {rd, wr}only flags and direct value access
3daf8e703ec3dcf73a27a7dcabbac152793eb114 selftests: bpf: add selftest for __sk_buff context in BPF_PROG_TEST_RUN
166b5a7f2ca3803ab0a7bb33ac2300e616de2470 selftests_bpf: extend test_tc_tunnel for UDP encap
1db04c300a41e17892bf83ed0d1aa681416ee150 bpf: sync bpf.h to tools/ for BPF_F_ADJ_ROOM_ENCAP_L2
3ec61df82ba0c2d2455da838ee46bf60f2256b56 selftests_bpf: add L2 encap to test_tc_tunnel
7b146cebe30cb481b0f70d85779da938da818637 bpf: Sysctl hook
808649fb787d918a48a360a668ee4ee9023f0c11 bpf: Introduce bpf_sysctl_get_name helper
1d11b3016cec4ed9770b98e82a61708c8f4926e7 bpf: Introduce bpf_sysctl_get_current_value helper
4e63acdff864654cee0ac5aaeda3913798ee78f6 bpf: Introduce bpf_sysctl_{get,set}_new_value helpers
e1550bfe0de47e30484ba91de1e50a91ec1c31f5 bpf: Add file_pos field to bpf_sysctl ctx
1f5fa9ab6e2eb16ba81284280a498fe9c543a2d8 selftests/bpf: Test BPF_CGROUP_SYSCTL
6041c67f28d8b297ef53ab47abdcd319626c765e selftests/bpf: Test bpf_sysctl_get_name helper
11ff34f74e32f5a4ec1f71621508789cd60775b3 selftests/bpf: Test sysctl_get_current_value helper
786047dd08de3334722af036e2827ce3b34205cc selftests/bpf: Test bpf_sysctl_{get,set}_new_value helpers
9a1027e52535db1a0adf7831afdfce745dc0a061 selftests/bpf: Test file_pos field in bpf_sysctl ctx
d7a4cb9b6705a89937d12c8158a35a3145dc967a bpf: Introduce bpf_strtol and bpf_strtoul helpers
99f57973ac5b8e38ee5b5e5f518cd5bf95e3b1e3 selftests/bpf: Add sysctl and strtoX helpers to bpf_helpers.h
8549ddc832d6f36be47279d201e95cc8ade6faa9 selftests/bpf: Test bpf_strtol and bpf_strtoul helpers
7568f4cbbeae687e4c545516275479f50c15a7cc selftests/bpf: C based test for sysctl and strtoX
51356ac89b5a15e5207e8740d5f4f8b71cb7332f bpf: Fix distinct pointer types warning for ARCH=i386
bcbccad694b7ef0de9a993ecd918231c10a1496a selftests/bpf: bring back (void *) cast to set_ipv4_csum in test_tc_tunnel
bfb35c27c65fce60a12e188135ae1344d1b89e24 bpf: fix whitespace for ENCAP_L2 defines in bpf.h
a5cb33464e53482ecc645b4b7703f5b6d151095f selftests/bpf: make flow dissector tests more extensible
809041e765055ba311f3a0b8751db1c65739ad51 selftests: bpf: add VRF test cases to lwt_ip_encap test.
ba0509b6881efd0c8b26c36490cba87d8fb324c0 net: core: introduce build_skb_around
ba02de1aa04e392e15ef503c6dd5166915d9d4de selftests/bpf: fix a compilation error
849f257f61ff7dde49d59c62802e5913ff7a7cbb bpf: Increase MAX_NR_MAPS to 17 in test_verifier.c
7b8a1304323b35bbf060e0d29691031056836b73 bpf: when doing BPF_PROG_TEST_RUN for flow dissector use no-skb mode
0905beec9f52caf2c7065a8a88c08bc370850710 selftests/bpf: run flow dissector tests in skb-less mode
02ee0658362d3713421851bb7487af77a4098bb5 bpf/flow_dissector: don't adjust nhoff by ETH_HLEN in BPF_PROG_TEST_RUN
f6ad6accaa99dfa7462d18687961b8421d707c1e selftests/bpf: expand test_tc_tunnel with SIT encap
9df1c28bb75217b244257152ab7d788bb2a386d0 bpf: add writable context for raw tracepoints
6ac99e8f23d4b10258406ca0dd7bffca5f31da9d bpf: Introduce bpf sk local storage
7a9bb9762d3302bb407c7bdb0b5f754e5aa595a5 bpf: Add verifier tests for the bpf_sk_storage
51a0e301a563bf7266854e0698cdf3dc25116f7b bpf: Add BPF_MAP_TYPE_SK_STORAGE test to test_maps
263d0b35334112dd999afb4246646a2ea9da800d bpf: Add ene-to-end test for bpf_sk_storage_* helpers
71f150f4c2af5f1bc22c50f4d3d299fd7c177fd7 bpf: Use PTR_ERR_OR_ZERO in bpf_fd_sk_storage_update_elem()
07b619919d3d5401adc9bc6b79dcf12cc2c6d485 selftests: bpf: initialize bpf_object pointers where needed
9858381253acad69a4538a448eb9aa674c4f70d6 bpf: add various test cases for backward jumps
80867c5e3c0275c7208816faac768a44fa3747be bpf: fix minor issues in documentation for BPF helpers.
ff1f28c03f6a7cb5ee5802288258c2fc07ed9b07 selftests: bpf: Add files generated after build to .gitignore
a9047734eb47bea615826d4b1733526b3a867dbb selftests/bpf: add missing \\n to flow_dissector CHECK errors
3d21b6525caeae45f08e2d3a07ddfdef64882b8b selftests/bpf: add prog detach to flow_dissector test
bca844a8c92502b2aa5bd50a9094eaf01a1710c0 selftests/bpf: add test_sysctl and map_tests/tests.h to .gitignore
00d8304553de529802430799d2b2566fd32859d4 selftests: bpf: add zero extend checks for ALU32 and/or/xor
9e084bb9805226a3e53e9e28dcd9f3a8d4af35c8 selftests: bpf: move sub-register zero extension checks into subreg.c
c25d60c12534ada10312a43f1c584fa7384aa2e7 selftests: bpf: complete sub-register zero extension checks
5fac1718e706d94a7078addee9075cfaea00ca8c selftests: bpf: fix compiler warning in flow_dissector test
25a7991c84f6cf68cd1ea2ed3ba5674fb9e8c8be selftests/bpf: move test_lirc_mode2_user to TEST_GEN_PROGS_EXTENDED
983695fa676568fc0fe5ddd995c7267aabc24632 bpf: fix unconnected udp hooks
3dbc6adac1f3b83fd4c39899c747da7b417e3ffc bpf: sync tooling uapi header
3e0682695199bad51dd898fe064d1564637ff77a bpf: fix div64 overflow tests to properly detect errors
a8e11e5c5611a9f70470aebeb2c1dd6132f609d7 sysctl: define proc_do_static_key()
85749218e3a6a1ab4fb3c698394f40f07b80be5e bpf: Fix out of bounds memory access in bpf_sk_storage
216b65fb706e34128a5317d71b300daac9c428c4 tools: bpftool: add raw_tracepoint_writable prog type to header
3404ddf234ba4677bf224cb15ddcdea0ceab956e selftests/bpf: fix "ctx:write sysctl:write read ok" on s390
416c572821841bef2cbb6346fb559901efff4ff3 selftests/bpf: improve unexpected success reporting in test_syctl
d895a0f16fadb26d22ab531c49768f7642ae5c3e bpf: fix accessing bpf_sysctl.file_pos on s390
711aef1bbf88212a21f7103e88f397b47a528805 bpf, x32: Fix bug for BPF_JMP | {BPF_JSGT, BPF_JSLE, BPF_JSLT, BPF_JSGE}
9840a4ffcf0b26e08472ed53d176a6a0f1d4c498 selftests/bpf: fix race in flow dissector tests
3c0dab44e22782359a0a706cbce72de99a22aa75 x86/ftrace: Set trampoline pages as executable
dc05360fee660a9dbe59824b3f7896534210432b net: convert rps_needed and rfs_needed to new static branch api
458bf2f224f04a513b0be972f8708e78ee2c986e net: core: support XDP generic on stacked devices.
d35661fcf95d8818c1f9acc818a1bad23dda4e1c selftests/bpf: add wrapper scripts for test_xdp_vlan.sh
3cbf4ffba5eeec60f82868a5facc1962d8a44d00 net: plumb network namespace into __skb_flow_dissect
9b52e3f267a6835efd50ed9002d530666d16a411 flow_dissector: handle no-skb use case
c43f1255b866b423d2381f77eaa2cbc64a9c49aa net: pass net_device argument to the eth_get_headlen
11875ba7f251c52effb2b924e04c2ddefa9856ef selftests/bpf: More compatible nc options in test_tc_edt
b915ebe6d9c8c6b5427e606c0ecee53df921382b bpf, selftest: test global data/bss/rodata sections
7c9441066ab53168093c79477aabd575f7c14129 selftests/bpf: add pyperf scale test
5d04ec687cf98bc6e8073c646994736a46ed4e24 selftests/bpf: add tests for libbpf's hashmap
2d2a3ad872f884d618f11e1a2028cff862503dcd selftests/bpf: add btf_dump BTF-to-C conversion tests
8b401f9ed2441ad9e219953927a842d24ed051fc bpf: implement bpf_send_signal() helper
edaccf8985305967c22903a78283c8c837ea48dd tools/bpf: sync bpf uapi header bpf.h to tools directory
16f0efc3b46352018c297bbdb2c405e7d8a63095 tools/bpf: add selftest in test_progs for bpf_send_signal() helper
a4b1d3c1ddf6cb441187b6c130a473c16a05a356 bpf: verifier: insert zero extension according to analysis result
c240eff63a1cf1c4edc768e0cfc374811c02f069 bpf: introduce new bpf prog load flags "BPF_F_TEST_RND_HI32"
a1e3a3b8ba2c381a043d0c4273837895c1d3cf9c tools/bpf: Sync uapi header bpf.h
d6c2308c742a655f4598364ab331959639aae166 bpf: verifier: randomize high 32-bit when BPF_F_TEST_RND_HI32 is set
f3b55abb6d5a522228e136c3bc4a9a716d5d8a54 selftests: bpf: adjust several test_verifier helpers for insn insertion
9d120b4127e8df04ee665241916056b0156b37c7 selftests: bpf: enable hi32 randomization for all tests
e1afb70252a8614e1ef7aec05ff1b84fd324b782 bpf: check signal validity in nmi for bpf_send_signal() helper
ba0c0cc05dda2c56e23c88e4610ce2ac65ff86ec selftests/bpf: convert test_cgrp2_attach2 example into kselftest
d5506591d54b915aaa9d489c9289af2cc88f47a4 selftests/bpf: add auto-detach test
d50836cda698f6966e63c2c7f718d7c2f687ec8a bpf: add memlock precharge for socket local storage
3539b96e041c06e4317082816d90ec09160aeb11 bpf: group memory related fields in struct bpf_map_memory
b936ca643ade11f265fa10e5fb71c20d9c5243f1 bpf: rework memlock-based memory accounting for maps
c85d69135a9175c50a823d04d62d932312d037b3 bpf: move memory size checks to bpf_map_charge_init()
cd5385029f1d2e6879b78fff1a7b15514004af17 selftests/bpf: measure RTT from xdp using xdping
4ecabd55c90469629460f035f4bf4c8ae3d2743b bpf: allow CGROUP_SKB programs to use bpf_skb_cgroup_id() helper
fada7fdc83c0bf8755956bff707c42b609223301 bpf: Allow bpf_map_lookup_elem() on an xskmap
940e7be34ab3d04b7e0b6dd57bdbda1d225c3d8c tools/bpf: Add bpf_map_lookup_elem selftest for xskmap
89cceaa939171fafa153d4bf637b39e396bbd785 selftests/bpf : clean up feature/ when make clean
ebb886078bae29bd60eba3157dc6edae4bbed3a1 selftests/bpf: remove bpf_util.h from BPF C progs
9e3d709c47ca3d10df461635b350edef94f3cf11 selftests/bpf: add test for BTF-defined maps
f654407481e9bbba7039e939163ef60f9d5e43ba selftests/bpf: switch BPF_ANNOTATE_KV_PAIR tests to BTF-defined maps
df0b7792598291128fcca66b039fd027be25c10a selftests/bpf: convert tests w/ custom values to BTF-defined maps
4d18f6de6ac1d85dc0bc85481fb7cabde09e59ae samples: bpf: refactor header include path
fc559a70d57c6ee5443f7a750858503e94cdc941 selftests/bpf: fix tests due to const spill/fill
aeee380ccfc59c05a4c6e8e762fd645c6bdc773a selftests/bpf: fix tests
b061017f8b4d0e05d4c11486581a702fb2a975b2 selftests/bpf: add realistic loop tests
88091ff56b71d73c5577ebefcd4f0f721a359077 selftests, bpf: Add test for veth native XDP
6bcc617f842cdb5f3d66b3a3f06614a62fab992b selftests/bpf: build tests with debug info
e5c891a349d7c556b7b9dc231d6dd78e88a29e5c bpf: fix cgroup bpf release synchronization
0d01da6afc5402f60325c5da31b22f7d56689b49 bpf: implement getsockopt and setsockopt hooks
9ec8a4c9489dc6fac324f8adb76fc182be119389 selftests/bpf: add sockopt test
8a027dc0d8f5d421eba953a7116aea991459b202 selftests/bpf: add sockopt test that exercises sk helpers
65b4414a05ebf51966c4a28a2a1b156ab5a01b0f selftests/bpf: add sockopt test that exercises BPF_F_ALLOW_MULTI
2d6dbb9a65f4001f2878512078394c11301994f3 selftests/bpf: fix -Wstrict-aliasing in test_sockopt_sk.c
d5df2830ca9922d03a33940ea424c9a5f39f1162 devmap/cpumap: Use flush list instead of bitmap
ac8786c72eba67dfc8ae751a75c586289a1b9b1b selftests: bpf: add tests for shifts by zero
d2f5bbbc350050895d9f33c2744a61f9e0af1caa selftests: bpf: standardize to static __always_inline
8c51b314d2eeae687bf8c28491c9f5e4f05f30f5 selftests/bpf: switch test to new attach_perf_event API
1e8611bbdfc99faf8c9670dbbe582129a9a29973 selftests/bpf: add kprobe/uprobe selftests
1bdb34274acd4a772865289aeaa41696acb60110 selftests/bpf: convert existing tracepoint tests to new APIs
bc7430cc8bfb51577e466a8ca02ad87375a70bde selftests/bpf: convert selftests using BTF-defined maps to new syntax
1639b17c72fa7ad977ccd0ad6c673e3f7048723b selftests/bpf: convert legacy BPF maps to BTF-defined ones
c3ec002e633e25f6e0ce6f97346dd6f38afcbd6a selftests/bpf: add test_tcp_rtt to .gitignore
ee5cf82ce04a60d71b0dc219804f6cf1e6ba6d14 selftests/bpf: test perf buffer API
76d950773cd2a365f492ce973429ae629d58131c selftests/bpf: add verifier tests for wide stores
06ec0e2c490afd2f870d89c59200540fd9acde95 selftests/bpf: fix test_attach_probe map definition
6705fea0c799a4efb9a9ce2968a2f7a570e33dc2 bpf: cgroup: Fix build error without CONFIG_NET
ed4ed4043a127c5ca9a35339bb614693be9037a3 bpf: verifier: avoid fall-through warnings
9cae4ace80ef39005da106fbb89c952b27d7b89e selftests/bpf: do not ignore clang failures
748e50c1c13d33dffcdca66f0b1cb3d96d17fe31 selftests/bpf: compile progs with -D__TARGET_ARCH_$(SRCARCH)
af3c24e0e2ed25177b03b60ada9117bb596e8d95 selftests/bpf: fix compiling loop{1, 2, 3}.c on s390
8981e56fa17282598571958ae6a29cbc3209a6cb selftests/bpf: use typedef'ed arrays as map values
025c0c0917b78f21e3aaffecda75968d54172095 selftests/bpf: fix attach_probe on s390
e46fc22e60a410d896448835adca95aa3332d25d selftests/bpf: make directory prerequisites order-only
f83a46d4711e789642033eb00fed8e017e34fe7d selftests/bpf: put test_stub.o into $(OUTPUT)
d5e1db990fcce571a4af2434d6fc2b312d94b45e selftests/bpf: remove logic duplication in test_verifier
4e59afbbed9638f95adfac8d2f222aca3b2b1bc0 selftests/bpf: skip nmi test when perf hw events are disabled
36646b22ce2455c25c76c9023a0e5ca58d62899a selftests/bpf: fix test_verifier/test_maps make dependencies
9d1f62a6dcf0de3ab184c1f7b7d82117dcbab090 selftests/bpf: structure test_{progs, maps, verifier} test runners uniformly
1cb59a6074e23c6f6513642f752a6d8d38327354 selftests/bpf: fix perf_buffer on s390
3193c0836f203a91bef96d88c64cccf0be090d9c bpf: Disable GCC -fgcse optimization for ___bpf_prog_run()
01a0f9e4496d9f54e06abb71bf9f56c617ef8c24 selftests/bpf: fix "valid read map access into a read-only array 1" on s390
be69483bf4f3abaaca5d5ba460dbb50239463552 selftests/bpf: add another gso_segs access
e91dcb536ae263ecff07118e36bf820c229a6ecd selftests/bpf: fix test_btf_dump with O=
0604409df9e04cdec7b08d471c8c1c0c10b5554d selftests/bpf: add config fragment BPF_JIT
02205d2ed6fe26a8f4fd9e9cec251d1dc7f79316 bpf: media: properly use bpf_prog_array api
7541c87c9b7a7e07c84481f37f2c19063b44469b bpf: Allow narrow loads of bpf_sysctl fields with offset > 0
76790c7c66ccc8695afc75e73f54c0ca86267ed2 selftests/bpf: Fix btf_dump padding test case
ff1c08e1f74b6864854c39be48aa799a6a2e4d2b bpf: Change size to u64 for bpf_map_{area_alloc, charge_init}()
98e527af30a62cfb1e26f2a0ca76289bc7aba4d2 libbpf: Improve handling of corrupted ELF during map initialization
3239eb5215ebdef593a79316c9dbbdf8849166ec libceph: use sock_no_sendpage() as a fallback in ceph_tcp_sendpage()
433b0a12953bc1dfcb52febb186136395a65aad0 libceph: use MSG_SENDPAGE_NOTLAST with ceph_tcp_sendpage()
97a385e558292ba0851906783642239865670a5f libceph: remove ceph_get_direct_page_vector()
5c31e92dffb94c955fff2867a56aac68e63c286d ceph: rename struct ceph_acls_info to ceph_acl_sec_ctx
ac6713ccb5a6d13b59a2e3fda4fb049a2c4e0af2 ceph: add selinux support
5c30835690f12e14f88dd2e90c8cbb0ea8eb975f ceph: increment change_attribute on local changes
e8c99200b4d117c340c392ebd5e62d85dfeed027 libceph: don't call crypto_free_sync_skcipher() on a NULL tfm
5e3ded1bb642f2d7a6ded6deeafb155d5b5312f2 ceph: pass filp to ceph_get_caps()
ff5d913dfc7142974eb1694d5fd6284658e46bc6 ceph: return -EIO if read/write against filp that lost file locks
81f148a910045cd0a139f589a0b42764b172f8f5 ceph: invalidate all write mode filp after reconnect
131d7eb4faa1fc06b08b633aff0b59ae85f1938e ceph: auto reconnect after blacklisted
668959a53578076d836905c0bb51f5cfadf1c343 ceph: turn ceph_security_invalidate_secctx into static inline
b8fe918b090442447d821b32b7dd6e17d5b5dfc1 ceph: allow arbitrary security.* xattrs
5bb5e6ee6f5c557dcd19822eccd7bcced1e1a410 ceph: don't try to handle hashed dentries in non-O_CREAT atomic_open
87bc5b895d94a0f40fe170d4cf5771c8e8f85d15 ceph: use ceph_evict_inode to cleanup inode's resource
28af109a57d14211e5e8ba1551f00428be2fd508 driver core: add a debugfs entry to show deferred devices
25b4e70dcce92168eab4d8113817bb4dd130ebd2 driver core: allow stopping deferred probe after init
62a6bc3a1e4f4ee9ae0076fa295f9af1c3725ce3 driver: core: Allow subsystems to continue deferring probe
5903195605287681f55094bbcdf8711ea109969b PM / devfreq: add devfreq_suspend/resume() functions
5ae06c237fd05a1e9acf6f35891cfd85de792521 cpufreq: powernv: fix missing check of return value in init_powernv_pstates()
2bb4059e075dcb8d5a2f8689bb661aa76c487ab0 cpufreq: Fix two debug messages in cpufreq_set_policy()
fdc56c073270af2f4d223c96a5fff3048352fc03 PM-runtime: Consolidate code to get active/suspended time
0996584b3026bed7f38abe02e8535e6a6c474118 PM-runtime: Call pm_runtime_active|suspended_time() from sysfs
46b7fe94995fd166786a301dbba919046e70e702 PM / Domains: Improve warn for multiple states but no governor
7e5b6a5c8c44310784c88c1c198dde79f6402f7b mctp: fix use after free
eb594b7325f61835555140922a4cb715264a325c PM / Domains: Add support for CPU devices to genpd
e2a9ca29b5edc89da2fddeae30e1070b272395c5 x86/tsc: Initialize cyc2ns when tsc frequency is determined
4763f03d3d186ce8a1125844790152d76804ad60 x86/tsc: Use TSC as sched clock early
608008a45798fe9e2aee04f99b5270ea57c1376f x86/tsc: Consolidate init code
c208ac8f8f862dba7b01eb54557f4803b3c17296 x86: tsc: Rework time_cpufreq_notifier()
a174920d69db9be80332f535db4a8ca2e3bccf24 PM / Domains: Drop unused in-parameter to some genpd functions
b24e196586fecafed1c3cff9b2f87c1a64138ade PM / Domains: Search for the CPU device outside the genpd lock
f9ccd7c3a1d87cea3a6f9ed6c946dee9e7456b2e PM / Domains: Allow to attach a CPU via genpd_dev_pm_attach_by_id|name()
2acb9bdae92d0662cd4fa11c481e80b6202b5630 cpufreq: Explain the kobject_put() in cpufreq_policy_alloc()
ed61e18a4b4e445ae8622a4faec6a259601cc4a5 PM / Domains: Add GENPD_FLAG_RPM_ALWAYS_ON flag
67d874c3b2c69d65274fa5ce44ba939788d5729d cpufreq: Register notifiers with the PM QoS framework
18c49926c4bf4915e5194d1de3299c0537229f9f cpufreq: Add QoS requests for userspace constraints
c4dcc8a162784c1f827c7f6d8409598f19708fe6 cpufreq: Make cpufreq_generic_init() return void
e61a41256edf9f425039129757af4a80b5ed8162 cpufreq: dev_pm_qos_update_request() can return 1 on success
e8b22d0a329f0fb5c7ef95406872d268f01ee3b1 Input: elantech - enable 3rd button support on Fujitsu CELSIUS H780
caab277b1de0a22b675c4c95fc7b285ec2eb5bf5 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 234
5fe2ccbef9d7aecf5c4402c753444f1a12096cfd HID: logitech: fix a used uninitialized GCC warning
d0341efe7449860e1bbfdd282b3b7f0c34309222 Revert "HID: logitech: fix a used uninitialized GCC warning"
1475af255e18f35dc46f8a7acc18354c73d45149 HID: i2c-hid: Ignore input report if there's no data present on Elan touchpanels
fd35759ce32b60d3eb52436894bab996dbf8cffa HID: logitech: Handle 0 scroll events for the m560
74e7c6c877f620d65a8269692d089bbd066f626c HID: i2c-hid: Disable runtime PM on Synaptics touchpad
20522fefd52277c006ddae43dafc497b99e2f2f8 Revert "HID: i2c-hid: Disable runtime PM on Synaptics touchpad"
fe3ee1ec007bf7b10d7c02814d4b8fbe7d9bb435 HID: logitech-hidpp: allow non HID++ devices to be handled by this module
91cf9a98ae4127551d022e287e283bcd8738ed02 HID: logitech-hidpp: make .probe usbhid capable
e54abaf675ca76e026a104790e3aaa2b47ee7497 HID: logitech-hidpp: remove unused origin_is_hid_core function parameter
754a30884886d751ea8b5681a8ccaad59147a914 HID: logitech-hidpp: handle devices attached to 27MHz wireless receivers
d71b18f7c7999381a9b721d761b0aceffdcd65da HID: logitech-hidpp: do not hardcode very long report length
0610430e3dea51c9a00565af685745898048fa2b HID: logitech-hidpp: add input_device ptr to struct hidpp_device
4a79bcc64a0514d630783b8d19cf9a85e46fe988 HID: logitech-hidpp: add support for HID++ 1.0 wheel reports
7457bc1b0ebf30d98ce993ec876a5ab2b143539d HID: logitech-hidpp: add support for HID++ 1.0 extra mouse buttons reports
42bc4f3129e6565567ee63116850c530dc561aa0 HID: logitech-hidpp: add support for HID++ 1.0 consumer keys reports
ced2c0c53d08e44b1443d66620c1a883db53c72f HID: logitech-hidpp: add support for the MX5500 keyboard
a96a8a576bf5cc45534d0079d7006fc3fe25282b HID: logitech-hidpp: HID: make const array consumer_rdesc_start static
2409877d386de709606ca7eecf7c10d2838525a1 HID: logitech-hidpp: Add support for the S510 remote control
80503b23b23b5b2228d8750b786eb182f2fa28d2 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 149
2874c5fd284268364ece81a7bd936f3c8168e567 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
1a59d1b8e05ea6ab45f7e18897de1ef0e6bc3da6 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 156
c942fddf8793b2013be8c901b47d0a8dc02bf99f treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 157
fda8d26e61fc518499ddc78ae74ec1aaa89c4134 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 177
08dbd0f8ef8d2a02319aec1e6c2aeb084468309e treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 267
9c92ab61914157664a2fbdf926df0eb937838e45 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 282
2025cf9e193de05b0654570dd639acb49ebd3adf treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 288
a61127c2130236168321cc76c5a58e15c00ad154 treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 335
912c6aa67ad4252dc92e6569cfcb32ee44575183 HID: wacom: Add 2nd gen Intuos Pro Small support
0adcdbcb179624d7b3677264f2cd228e7d89eea9 video: fbdev: don't print error message on framebuffer_alloc() failure
27fc32fd9417968a459d43d9a7c50fd423d53eb9 HID: logitech-hidpp: add USB PID for a few more supported mice
addf3382c47c033e579c9c88f18e36c4e75d806a Revert "HID: logitech-hidpp: add USB PID for a few more supported mice"
a3384b8d9f63cc042711293bb97bdc92dca0391d HID: logitech-hidpp: remove support for the G700 over USB
abdd3d0b344fdf72a4904d09b97bc964d74c4419 HID: logitech-hidpp: split g920_get_config()
905d754c53a522aacf806ea1d3e7c929148c1910 HID: logitech-hidpp: rework device validation
08c453f6d073f069cf8e30e03cd3c16262c9b953 HID: logitech-hidpp: do all FF cleanup in hidpp_ff_destroy()
ec131b2d7fa629edf88a1f51669d1b4a189cba44 mm/hmm: invalidate device page table at start of invalidation
704f3f2cf63cdb76925ac2ff432182c73574b20b mm/hmm: use reference counting for HMM struct
25f23a0c7127b65c4d8200ccda8a352ad5ce1e1d mm/hmm: improve and rename hmm_vma_get_pfns() to hmm_range_snapshot()
73231612dc7c907bd96880a4086ee55eef6b6888 mm/hmm: improve and rename hmm_vma_fault() to hmm_range_fault()
a3e0d41c2b1f86b483b202d642140d8b86d677ca mm/hmm: improve driver API to work and wait over a range
023a019a9b4e90b9df8ed5be591787b5c914d74f mm/hmm: add default fault flags to avoid the need to pre-fill pfns arrays
63d5066f6e5a1713d0247ef38f0add545408896b mm/hmm: mirror hugetlbfs (snapshoting, faulting and DMA mapping)
992de9a8b7511673156df7d2bb1039dea3b2f7f3 mm/hmm: allow to mirror vma of a file on a DAX backed filesystem
55c0ece82ac6ad018a71465d332847dce023eeb3 mm/hmm: add a helper function that fault pages and map them to a device
391aab11e93f36c421abeab62526954d08ac3eed mm/hmm: convert various hmm_pfn_* to device_entry which is a better name
1c2308f0f03fdbbc674f53450eaa76943e0506f0 mm/hmm.c: suppress compilation warnings when CONFIG_HUGETLB_PAGE is not set
085ea25064a9169eba5f2ed6484c111ab0f3ee79 mm/hmm: clean up some coding style and comments
6d7c3cde93c1d9ac0b37f78ec3f2ff052159a242 mm/hmm: fix use after free with struct hmm in the mmu notifiers
e36acfe6c86d13eec62321e1e86a1ce287e52e7d mm/hmm: Use hmm_mirror not mm as an argument for hmm_range_register
c8a53b2db0aec40d8b217936e1b7f3d840c50390 mm/hmm: Hold a mmgrab from hmm to mm
378a60406415bd20ec6e845a3d6883d460656537 mm/hmm: Remove duplicate condition test before wait_event_timeout
8a9320b7ec5d879884c547fb73c35ac411a0b977 mm/hmm: Simplify hmm_get_or_create and make it reliable
157816f3775f5c4df2c68ef0e3a100ada974aa2e mm/hmm: Do not use list*_rcu() for hmm->ranges
47f245985a4f3e270b1e4f28aa49f4c939527981 mm/hmm: Hold on to the mmget for the lifetime of the range
187229c2ddd12a5bb5cd6bb3fbef9ecbc6eead92 mm/hmm: Remove racy protection against double-unregistration
2dcc3eb8ab50c9ca816cc60abfd94bea559d3e86 mm/hmm: Poison hmm_range during unregister
14331726a3c47bb1649dab155a84610f509d414e mm/hmm: Remove confusing comment and logic from hmm_release
5a136b4ae327e7f6be9c984a010df8d7ea5a4f83 mm/hmm: Fix error flows in hmm_invalidate_range_start
07ec38917e68f0114b9c8aeeb1c584b5e73e4dd6 mm: remove the struct hmm_device infrastructure
0092908d16c604b8207c2141ec64b0fa4473bb03 mm: factor out a devm_request_free_mem_region helper
02712bc3250849c1cf99d626aea98f610e695f34 mm/hmm: move hmm_vma_range_done and hmm_vma_fault to nouveau
2bcbeaefde2f0384d6ad351c151b1a9fe7791a0a mm/hmm: always return EBUSY for invalid ranges in hmm_range_{fault,snapshot}
7ab0ad0e74f82db1a7e0810828785e44305cff20 mm/hmm: fix ZONE_DEVICE anon page mapping reuse
8e86e01526764e8cdc77b80a8f24f33e6847b9e7 perf/core: Convert to SPDX license identifiers
5ff328836dfde0cef9f28c8b8791a90a36d7a183 perf tools: Rename build libperf to perf
5135d5efcbb439c2acb20d6197dd57af3a456e76 perf tools: Add cpu_topology object
48e6c5acd36873ff022cd97de866bfd0a36a3b99 perf tools: Add numa_topology object
e19a01c1438e123d169fd09376a221d844797174 perf tools: Use sysfs__mountpoint() when reading cpu topology
d19f856479feef7c1383f02b87688563a0ef7a14 perf bpf: Add bpf_map dumper
3ab481a1cfe1511b94e142b648e2c5ade9175ed3 perf script: Support insn output for normal samples
4968ac8fb7c378e2bc40b7e9bd97768fa8c7aa32 perf report: Implement browsing of individual samples
59c24980dffbea2106fe65e64ea77834d657ee9c perf ui browser: Fix ui popup argv browser for many entries
e3b74de50a5f8bbfacbd772874c8b5d9220ebcdb perf tools report: Add custom scripts to script menu
606f972b1361f477cbd4e6e8ac00742fde4b39db perf bpf: Save bpf_prog_info information as headers to perf.data
a70a1123174ab592c5fa8ecf09f9fad9b335b872 perf bpf: Save BTF information as headers to perf.data
f8dfeae009effc0b6dac2741cf8d7cbb91edb982 perf bpf: Show more BPF program info in print_bpf_prog_info()
14c9b31a925a9f5c647523a12e2b575b97c0aa47 perf header: Fix lock/unlock imbalances when processing BPF/BTF info
42e1fd80a5b8bf9188ddb502b788433ece189aae perf record: Implement COMPRESSED event record and its attributes
51255a8af7c41c876c2d715a35ab03c13302a607 perf mmap: Implement dedicated memory buffer for data compression
f24c1d7523e6db26ec2115a308750c875927741b perf tools: Introduce Zstd streaming based compression API
ef781128e47e73f0e5b2ad385cfa685a0719456a perf record: Implement compression for AIO trace streaming
504c1ad11691d1a16e92285bb961728a80c06014 perf record: Implement -z,--compression_level[=<n>] option
cb62c6f1f59232457414ecbbf2337a1cb67b4ce2 perf report: Implement perf.data record decompression
93fe8f1e11042e6cdf6f36f4e8ac111c7b818fc7 perf vendor events arm64: Map Brahma-B53 CPUID to cortex-a53 events
7025fdbea3a67c5980b94574b755a5fd65ea8a36 perf vendor events arm64: Add Cortex-A57 and Cortex-A72 events
f9934a80f91dba8c7029ba7601459e41ea7770aa blk-mq: introduce blk_mq_tagset_wait_completed_request()
b8f8c8eb408b36ad55dd41a616b3f51998880fb6 net: phy: add GBit master / slave error detection
6194114324139dc16f3251c67ed853bd6d4ae056 net: core: add member wol_enabled to struct net_device
a4307c0ec66131e722a8fa0f1da09646c46ee924 net: phy: remove flag PHY_HAS_INTERRUPT from driver configs
695bce8fd8e994999f40ee279e2fa9979cbae87a net: phy: improve struct phy_device member interrupts handling
ba2f55b06826fb51f15e3cb04b4457be5f66e0ef net: phy: icplus: add config_intr callback
034289b2d7cf29c8ddb79cf73d4886edabcff05e net: phy: icplus: keep all ip101a_g functions together
a872c388f9d9e515d9c4102110d0bf0fd7a9778a net: phy: icplus: rename IP101A_G_NO_IRQ to IP101A_G_IRQ_ALL_MASK
f7e290fbeb336421ba6237548b693c9afb4d75fa net: phy: icplus: implement .did_interrupt for IP101A/G
f2f1a847e74f61fb151e0f6f689a8485345ed1fc net: phy: icplus: allow configuring the interrupt function on IP101GR
21f49468466a41340ea389c25770dd38b7cbc748 net: phy: vitesse: remove duplicate support for VSC8574
f2f98c1d7fa81e25a5cf910edc9db4d3c6f36c1b net: phy: meson-gxl: Use the genphy_soft_reset callback
023fb4b51fa975e55b429f624102706f7156395f net: phy: aquantia: Use get_features for the PHYs abilities
0974f1f03b07543f3225414118e6e7ff205da96e net: phy: aquantia: remove false 5G and 10G speed ability for AQCS109
fb470f70fea71a0e0adf3e69d1971db6b2119e3b net: phy: aquantia: add hwmon support
232ba3a51cc224b339c7114888ed7f0d4d95695e net: phy: Micrel KSZ8061: link failure after cable connect
570c8a7d53032b1773ecfc6d317402450ada6de4 net: phy: aquantia: check for supported interface modes in config_init
1e614b5086ee8b2287238f74a9fa6d7935084a3c net: phy: aquantia: check for changed interface mode in read_status
06acc17a96215a11134114aee26532b12dc8fde1 net: phy: Add DP83825I to the DP83822 driver
110a2432c5203d62e5df31180aa0cbd21ea76f82 net: phy: aquantia: add downshift support
9d685c11bf980bdd8036fb003db5a28913192f2e net: phy: aquantia: print remote capabilities if link partner is Aquantia PHY
43429a0353af8586fe6f3a56c3931284ff5ede83 net: phy: aquantia: report PHY details like firmware version
2d64610934b4687bee09c50ec4e3e4c30fa49b3b net: phy: aquantia: inform about proprietary 1000Base-T2 mode being in use
48e4adf9afbe5256d0dab383baf310889973811d net: phy: realtek: use genphy_read_abilities
ac9e81c230eb4b5f849768379aff9c1d4f1dccea net: phy: aquantia: add suspend / resume callbacks for AQR107 family
74dcb4c1a52c7c6666319a149ad4adb001f1d00b net: phy: aquantia: add SGMII statistics
32a069d807f3cc9d0e09e86d87e654814ea44656 net: phy: realtek: remove setting callback get_features and use phylib fallback
4c75be07f9385364be3a5033ff3a20faf3f3bce0 net: phy: remove unnecessary callback settings in C45 drivers
dcdecdcfe1fc39ded8590aed2fe84d62f14b2392 net: phy: switch drivers to use dynamic feature detection
3aed3e2a143c9619f4c8d0a3b8fe74d7d3d79c93 net: phy: micrel: add Asym Pause workaround
edeb207b8a80ece2af89a444feb36539e3bc4ef8 net: phy: vitesse: Remove support for VSC8514.
7a1d8390d015a13c42b1effa1f22fda0858fe6f9 net: phy: micrel: make sure the factory test bit is cleared
f81dadbcf7fd067baf184b63c179fc392bdb226e net: phy: realtek: Add rtl8211e rx/tx delays config
1da7756e6616c7795c8a104fde0a66f212ef659d net: phy: realtek: Change TX-delay setting for RGMII modes only
dffe7d2e04670ff98e4dacf258df30446e2e80d4 net: phy: realtek: Replace phy functions with non-locked version in rtl8211e_config_init()
ee04a5fa9f3f5b956321177b0853716e1a2253b8 net: phy: aquantia: readd XGMII support for AQR107
407d8098cb1ab338199f4753162799a488d87d23 net: phy: micrel: add Asym Pause workaround for KSZ9021
09c434b8a0047c69e48499de0107de312901e798 treewide: Add SPDX license identifier for more missed files
4774cc5245700b8f4414123908c3a7a1c78e5cbb iommu/vt-d: Apply per pci device pasid table in SVA
bad614b24293ae463e74d2465685f0e4e229baca iommu: Enable debugfs exposure of IOMMU driver internals
7d0f5fd3e4d687424cc2ab68b55472e328e2ee0a iommu/amd: Add basic debugfs infrastructure for AMD IOMMU
daedaa33d9c578220b311fbad3748d3ecd5a8f66 iommu/vtd: Cleanup dma_remapping.h header
0bbeb01a4fafbf8422e5c8882d461d6ac4f71e15 iommu/vt-d: Manage scalalble mode PASID tables
3b33d4ab3217337f648f7ff3e57e755e6444c748 iommu/vt-d: Reserve a domain id for FL and PT modes
7373a8cc381978cfafa4b0285cdd935682f1b2d2 iommu/vt-d: Setup context and enable RID2PASID support
437f35e1cd4c8d043633bb72f4260369af68fbf7 iommu/vt-d: Add first level page table interface
1c4f88b7f1f9298b56c7dac18c0bcd8d2f75059a iommu/vt-d: Shared virtual address in scalable mode
6d68b88e0993d67e9ebb1240f84240b712fbc8a4 iommu/vt-d: Remove deferred invalidation
6f5086a6e3383ae6a1b08a88836fcfda7d171ca4 iommu/amd: Remove leading 0s in error log messages
addb672f200f4e99368270da205320b83efe01a0 iommu/arm-smmu: Make arm-smmu explicitly non-modular
c07b6426df922d21a13a959cf785d46e9c531941 iommu/arm-smmu: Make arm-smmu-v3 explicitly non-modular
bf8763d8f8376e98ea2a8e0fc4803f25ff91393e powerpc/iommu: Use device_iommu_mapped()
932a6523ce393921f81f09c273aa4adee52391af iommu/vt-d: Use dev_printk() when possible
717532394c712e044195405685f62522c579e22a iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument
41b80db227993394f210f0eb705a326db5f605b6 iommu/vt-d: Set context field after value initialized
5f226da1b1d7065bd22605fd889ac96eb5f3a7db iommu/amd: Use dev_printk() when possible
18b3af4492a0aa6046b86d712f6ba4cbb66100fb iommu: Fix IOMMU debugfs fallout
a3a195929d40b38833ffd0f82b2db2cc898641eb iommu: Add APIs for multiple domains per device
26b25a2b98e45aeb40eedcedc586ad5034cbd984 iommu: Bind process address spaces to devices
d7cbc0f3220fabbdfa9b3aa79275baa5b16fef5d iommu/vt-d: Make intel_iommu_enable_pasid() more generic
8cc3759a6c4931fca2ad9c1b0ead24dc0c30041c iommu/vt-d: Move common code out of iommu_attch_device()
67b8e02b5e76159a4f94f85bee370af1d9f442f9 iommu/vt-d: Aux-domain specific domain attach/detach
0e8000f8f616df653d0d7fcc43fafae7e5b07c0b iommu/vt-d: Return ID associated with an auxiliary domain
48b2c937ea37a3bece0094b46450ed5267525289 iommu/vt-d: Clean up iommu_no_mapping
f7b0c4ce8cb3c09cb3cbfc0c663268bf99e5fa9c iommu/vt-d: Flush IOTLB for untrusted device in time
dca4d60f5f8c9263f8f66724fa4750abd32d8db0 iommu/vt-d: Fix leak in intel_pasid_alloc_table on error path
f780a8dc196db1c41b5da21ecfa27e83ee5fb776 iommu/vt-d: Remove unnecessary rcu_read_locks
cdd3a2499d30695730b22dc025c00b9b28884c6b iommu/vt-d: Introduce macros useful for dumping DMAR table
7423e01741dd6a5f1255f589145313f0fb1c8cbe iommu: Add API to request DMA domain for device
73bcbdc9fa8d88db2d26d06885fb180cfe478f80 iommu/vt-d: Implement apply_resv_region iommu ops entry
4de354ec2f0c0529980ea4aa9fc4f35b296d3de8 iommu/vt-d: Delegate the identity domain to upper layer
fa954e683178949e3c50a7d40c176e7b951bb22d iommu/vt-d: Delegate the dma domain to upper layer
98b2fffb5e274d73e47d495da2caf213cfa28fc8 iommu/vt-d: Handle 32bit device with identity default domain
8af46c784ecfe8929f66b5eaae987f6874953226 iommu/vt-d: Implement is_attach_deferred iommu ops entry
4ec066c7b1476e0ca66a7acdb575627a5d1a1ee6 iommu/vt-d: Cleanup get_valid_domain_for_dev()
b7297783c2bb6fa7bd557842657bed7e95220978 iommu/vt-d: Remove duplicated code for device hotplug
df4f3c603aeb6dd40b74b93bf2db6d9c3213d4e1 iommu/vt-d: Remove static identity map code
c57b260a7d7d60dfbcf794dd9836c1d9fdbf5434 iommu/vt-d: Set domain type for a private domain
5679582c2fad11733ba65c12d127f9d703390e55 iommu/vt-d: Allow DMA domain attaching to rmrr locked device
16c9e29e12e8edbdf437001f46cf3f557aca80e8 iommu/vt-d: Cleanup after delegating DMA domain to generic iommu
c1ddcf1cc9add03d775ba787b942729a4b87e7a6 iommu/amd: Add missed 'tag' to error msg in iommu_print_event
bf4bff46eac151c3fd299741d71c4216e45b5d8b iommu/amd: Move gart fallback to amd_iommu_init
5c90501a7290e8066a5530f491e764730791945a iommu/amd: Only free resources once on init error
effa467870c7612012885df4e246bdb8ffd8e44c iommu/vt-d: Don't queue_iova() if there is no flush queue
ae23bfb68f2896835e54a137688906713cb607e7 iommu/vt-d: Detach domain before using a private one
8744daf4b0699b724ee0a56b313a6c0c4ea289e3 iommu/vt-d: Remove global page flush support
8a69961c7f7583742ab9064feab5ea533a6b1b97 iommu: Add helpers to set/get default domain type
ec21f17a9437e11bb29e5fa375aa31b472793c15 iommu/amd: Fix incorrect PASID decoding from event log
201c1db90cd643282185a00770f12f95da330eca iommu/iova: Fix compilation error with !CONFIG_IOMMU_IOVA
33dcb37cef741294b481f4d889a465b8091f11bf dma-mapping: fix page attributes for dma_mmap_*
298f78895b081911e0b3605f07d79ebd3d4cf7b0 iommu/io-pgtable: Rename iommu_gather_ops to iommu_flush_ops
a7d20dc19d9ea7012227be5144353012ffa3ddc4 iommu: Introduce struct iommu_iotlb_gather for batching TLB flushes
4fcf8544fc677fc8af135f1d86b3ba69c4ad429d iommu: Introduce iommu_iotlb_gather_add_page()
56f8af5e9d38f120cba2c2adb0786fa2dbc901a4 iommu: Pass struct iommu_iotlb_gather to ->unmap() and ->iotlb_sync()
05aed9412b0bd0d9a985d94010c42ff0a5c6cc29 iommu/io-pgtable: Hook up ->tlb_flush_walk() and ->tlb_flush_leaf() in drivers
abfd6fe0cd535d31ee83b668be6eb59ce6a8469d iommu/io-pgtable: Replace ->tlb_add_flush() with ->tlb_add_page()
e953f7f2fa78d1c7fd064171f88457c6b1e21af9 iommu/io-pgtable: Remove unused ->tlb_sync() callback
a2d3a382d6c682e22b263c9e7f0d857c3fa6c9d6 iommu/io-pgtable: Pass struct iommu_iotlb_gather to ->unmap()
3951c41af4a65ba418e6b1b973d398552bedb84f iommu/io-pgtable: Pass struct iommu_iotlb_gather to ->tlb_add_page()
2af2e72b18b499fa36d3f7379fd010ff25d2a984 iommu/arm-smmu-v3: Defer TLB invalidation until ->iotlb_sync()
353e3cf8590cf182a9f42e67993de3aca91e8090 iommu/arm-smmu-v3: Fix ATC invalidation ordering wrt main TLBs
d31c85fc864269ab8e6fb6ed36c87f2fc33a9430 snd/hda, drm/i915: Track the display_power_status using a cookie
eec4844fae7c033a0c1fc1eb3b8517aeb8b6cc49 proc/sysctl: add shared variables for range check
418e3ea157efb0eb2c6dd412a8d5f052477c7f5a bus_find_device: Unify the match callback with class_find_device
8b1e0f81fb6fcf3109465a168b2e2da3f711fa86 mm/pgtable: drop pgtable_t variable from pte_fn_t functions
8698ba53cd7173c32320ebbef4d389d41ebb5780 drm/i915/cml: Add second PCH ID for CMP
a201b00e5248bb6882ff7ed9e488c999019e729a drm/i915/aml: Allow SPT PCH for all AML devices
043b8413e8c0c0ffbf8be268eb73716e05a96064 net: devlink: remove redundant rtnl lock assert
e654f9f53b45fde3fcc8051830b212c7a8f36148 tipc: clean up skb list lock handling on send path
6dcfa2343802b1550530f3ba284cb0179cf2efc8 net/mlx5e: Implement ndo_get_port_parent_id()
751302c35ea0ae5aac9918e85199eb9f56a5afac mscc: ocelot: Implement ndo_get_port_parent_id()
d7840976e3915669382c62ddd1700960f348328e net: Use skb accessors in network drivers
b54c9d5bd6e38edac9ce3a3f95f14a1292b5268d net: Use skb_frag_off accessors
d2aa125d629080c4f3e31f23b7f612ef6b8492ac net: Don't set transport offset to invalid value
e78b2915517e8fcadb1bc130ad6aeac7099e510c net: Introduce parse_protocol header_ops callback
75c65772c3d18447d62d3aca5f91b06c16cc25e4 net/packet: Ask driver for protocol if not provided by user
18bed89107a400af0d672ec85a270f1545db2569 af_packet: fix the tx skb protocol in raw sockets with ETH_P_ALL
24969facd704a5f0dd8e08da86bf32a9ce972bee xfrm: policy: store inexact policies in an rhashtable
b5fe22e2337d47cd68bb7d8e4103a628808c4d5e xfrm: policy: consider if_id when hashing inexact policy
6be3b0db6db82cf056a72cc18042048edd27f8ee xfrm: policy: add inexact policy search tree infrastructure
9cf545ebd591da673bb6b6c88150212ad83567a9 xfrm: policy: store inexact policies in a tree ordered by destination address
e901cbc29316fb06423de5dfbc5afb78d4efda53 xfrm: policy: check reinserted policies match their node
64a09a7bfedee6ab97273d653dfac28e82635b61 xfrm: policy: store inexact policies in a tree ordered by source address
6ac098b2a9d3088781f1c2b7138cf38e817a3da7 xfrm: policy: add 2nd-level saddr trees for inexact policies
39aa6928d462d0f4fd809ff8109f98f24843b28b xfrm: policy: fix netlink/pf_key policy lookups
88584c30e31967db2ad03c7015a9aea3460deb2c xfrm: policy: fix policy hash rebuild
cc4acb1b6a86563ef5b6dc7c35d99f66d7b82557 xfrm: policy: remove set but not used variable 'priority'
0977b2383de69dc48e9fa61c5c77878ed08d87fe selftests: xfrm: add block rules with adjacent/overlapping subnets
355b00d1e14051c13aea48c1c5430c486fed2d7a xfrm: policy: use hlist rcu variants on inexact insert, part 2
1548bc4e0512700cf757192c106b3a20ab639223 xfrm: policy: delete inexact policies from inexact list on hash rebuild
1d38900cb85d5d311dbd23c2c93294527b82cd2b xfrm: policy: fix reinsertion on node merge
12750abad517a991c4568969bc748db302ab52cd xfrm: policy: fix infinite loop when merging src-nodes
fd709721352dd5239056eacaded00f2244e6ef58 xfrm: policy: fix bydst hlist corruption on hash rebuild
769a807d0b41df4201dbeb01c22eaeb3e5905532 xfrm: policy: avoid warning splat when merging nodes
191ed2024de9fcfaab24106f9dbf7e544b07d633 devlink: allow driver to update progress of flash update
ba113c3aa79a7f941ac162d05a3620bdc985c58d tcp: add data bytes sent stats
fb31c9b9f6c85b1bad569ecedbde78d9e37cd87b tcp: add data bytes retransmitted stats
7e10b6554ff2ce7f86d5d3eec3af5db8db482caa tcp: add dsack blocks received stats
7ec65372ca534217b53fd208500cf7aac223a383 tcp: add stat of data packet reordering events
2edfd8e06145da646cb4ec3e6ed2a68dc8b746bb arch: Use asm-generic/socket.h when possible
99f3a064bc2e4bd5fe50218646c5be342f2ad18c bpf: net: Add SO_DETACH_REUSEPORT_BPF
6bf071bf09d4b2ff3ee8783531e2ce814f0870cb xdp: page_pool related fix to cpumap
99c07c43c4ea0bc101331401a0fabfc51933c6a3 xdp: tracking page_pool resources and safe removal
d956a048cd3fc1ba154101a1a50fb37950081ff6 xdp: force mem allocator removal and periodic warning
f033b688c1ede5ec78c9a718fa9f0b374049bc31 xdp: add tracepoints for XDP mem
32c28f7e413981c7dd4a3ad9bbb1151e4b654261 page_pool: add tracepoints for page_pool with details need by XDP
f71fec47c2df704c7081f946d7e46fe036a4208b page_pool: make sure struct device is stable
497ad9f5b2dc86b733761b9afa44ecfa2f17be65 page_pool: fix compile warning when CONFIG_PAGE_POOL is disabled
572a6928f9e3689ad2c2f94814e6215104eec1b7 xdp: Make __mem_id_disconnect static
1a927fd347ebb3c02046150ee489d4fe4e6b9e81 init/Kconfig: add CONFIG_CC_CAN_LINK
b55873984dab0eda6db00d19db4c43dce5c11d98 selftests/bpf: test BPF_SOCK_OPS_RTT_CB
1da4bbeffe41ba318812d7590955faee8636668b net: core: page_pool: add user refcnt and reintroduce page_pool_destroy
d9c5252295218df4cfe64353aa860d7b5c8700ef treewide: add "WITH Linux-syscall-note" to SPDX tag of uapi headers
fae55527ac1164b66bee983a4d82ade2bfedb332 selftests/bpf: fix race in test_tcp_rtt test
8a03222f508bf09e03cf38f6bd77b34b450c1d60 selftests/bpf: test_progs: fix client/server race in tcp_rtt
86c1aea84b97120a6d428ce17a2ebd55be677f56 selftests/bpf: test_progs: Don't leak server_fd in tcp_rtt
56bf877a508099f16fb78c71a348f39d0dc5fd72 selftests, bpf: xdping is not meant to be run standalone
3b054b7133b4ad93671c82e8d6185258e3f1a7a5 selftests, bpf: Fix test_tc_tunnel hanging
87b11e0638c3dbf029a7c9020f8a779062db58fc net/tls: remove false positive warning
89fec474fa1ab2c754e48d29e1081a2c2bd22dc6 net/tls: pass record number as a byte array
fe58a5a02cd9f49d5868539b4146ec1e5e5176e4 net/tls: rename handle_device_resync()
f953d33ba1225d68cf8790b4706d8c4410b15926 net/tls: add kernel-driven TLS RX resync
eeb2efaf36c75753f9028de3500669bddfac81a8 net/tls: generalize the resync callback
50180074099fcda752d9d56282d23242b126ebc9 net/tls: add kernel-driven resync mechanism for TX
b5d9a834f4fd1b6abfa527ec351c871084dd23a3 net/tls: don't clear TX resync flag on error
cacf32e99788e91a3eaefafb0976deadf84f37d5 mlx5: Return -EINVAL when WARN_ON_ONCE triggers in mlx5e_tls_resync().
ab232e61e728a08a2cb4ebb439d7d2aa75df89c9 net/tls: add missing prot info init
32857cf57f920cdc03b5095f08febec94cf9c36b net/tls: fix transition through disconnect with close
95fa145479fbc0a0c1fd3274ceb42ec03c042a4a bpf: sockmap/tls, close can race with map free
5d92e631b8be8965a90c144320f06e096081a551 net/tls: partially revert fix transition through disconnect with close
414776621d1006e57e80e6db7fdc3837897aaa64 net/tls: prevent skb_orphan() from leaking TLS plain text with offload
57c722e932cfb82e9820bbaae1b1f7222ea97b52 net/tls: swap sk_write_space on close
d85f01775850a35eae47a0090839baf510c1ef12 net: tls, fix sk_write_space NULL write when tx disabled
15a7dea750e0162f273c6e61a94f96944b75b31e net/tls: use RCU protection on icsk->icsk_ulp_data
26811cc9f55acf835f7fdadc5ff2bbd6f06bc3ac net: tls: export protocol version, cipher, tx_conf/rx_conf to socket diag
be2fbc155fc8c0ff6e499753354d965cd9cf1bb0 net/tls: clean up the number of #ifdefs for CONFIG_TLS_DEVICE
79ffe6087e9145d2377385cac48d0d6a6b4225a5 net/tls: add a TX lock
cb81572e8cb50c5fb98b0b962cdfe48fff71fd37 netfilter: nf_tables: Make nft_meta expression more robust
4ed8eb6570a49931c705512060acd50058d61616 netfilter: nf_tables: Add native tproxy support
033eab53fff7acc0f5718dee6fda641734b94416 netfilter: nft_tproxy: Add missing config check
90d827f06bebbd9aded00c152e6c9eb2db4db1a3 netfilter: nft_tproxy: Fix missing-braces warning
9f818c8a7388ad1a5c60ace50be6f658c058a5f2 mlx5: no need to check return value of debugfs_create functions
eaebaf77e7cb22fc371b7843370c903f1dd0fc3d IB/mlx5: Implement DEVX hot unplug for async command FD
f0666f1f22b5748e7caf87481a0869689f9f513d IB/mlx5: Use unified register/load function for uplink and VF vports
b05af6aacdb920dc3bfd27d53ade7f680d43265c net/mlx5: E-Switch, Normalize the name of uplink vport number
a1b3839ac4a4933c7c5167efd7b6b091130d11aa net/mlx5: E-Switch, Properly refer to the esw manager vport
c9b99abcf232f69ddff158b1f313fd7d2654414b net/mlx5: E-Switch, Split VF and special vports for offloads mode
879c8f84e3602961e441723aaaac372a44dfe588 net/mlx5: E-Switch, Use getter and iterator to access vport/rep
f121e0ea9586b2c937bf1ff9a0b682dc6424ce1d net/mlx5: E-Switch, Add state to eswitch vport representors
29d9fd7d5a667b120f8228da3d8a8d1b2382538d net/mlx5: E-Switch, Support load/unload reps of specific vport types
f8e8fa0262eaf544490a11746c524333158ef0b6 net/mlx5: E-Switch, Centralize repersentor reg/unreg to eswitch driver
5ae5162066d8e59e365678a9e76fc4d8f6b78d40 net/mlx5: E-Switch, Assign a different position for uplink rep and vport
81cd229c294e2e416e9161d9286d34f3aaf19348 net/mlx5: E-Switch, Consider ECPF vport depends on eswitch ownership
a3888f33db9f55f401ad315481af251d168e57dd net/mlx5: E-Switch, Load/unload VF reps according to event from host PF
acad70731e63aa3a901bc04a81a4a152cadbe9bf net/mlx5: E-Switch, Fix the warning on vport index out of range
7095ec3ca00eba04553d4c323dc9dd160219dd68 IB/mlx5: Set correct write permissions for implicit ODP MR
1abe186ed8a6593069bc122da55fc684383fdc1c IB/mlx5: Reset access mask when looping inside page fault handler
5d0bb3bac4b9f6c22280b04545626fdfd99edc6b net/mlx5e: XDP, Avoid checksum complete when XDP prog is loaded
d3669ca9ff33e1dc6414d1e34891d342e4544e71 net/mlx5e: Fix port buffer function documentation format
868bc06b240334a0caf2de25898d2e97b895e3c9 net/mlx5: Remove redundant init functions parameter
11f3b84d7068397df9f329b8bcf1177507061938 net/mlx5: Split mdev init and pci init
52c368dc3da7beb7b283133024af1b6d07bf93b9 net/mlx5: Move health and page alloc init to mdev_init
e161105e58da81fa9170921284559800fd6aa86a net/mlx5: Function setup/teardown procedures
a80d1b68c8b7a06b85434f89d138f0c28f3d27c9 net/mlx5: Break load_one into three stages
98a8e6fc482d96809d90fcab661835ed299359c5 net/mlx5: Replace dev_err/warn/info by mlx5_core_err/warn/info
eda99e11a097fba938880f1304f1d937d2b49f3a net/mlx5: E-Switch, Fix double mutex initialization
27c11b6b844cd9473330ff29ddb55a535d2dd14a net/mlx5e: Do not rewrite fields with the same match
e79c9c60622a59a814c54a1ee70298afe544441a IB/mlx5: Remove references to uboject->context
95579e785a9ae7d98c199b38c4b79b64a31d90fa RDMA/mlx5: Move netdev info into the port struct
4a6dc8552ab2f670fdff317a5ac1bc42f85a8772 RDMA/mlx5: Free IB device on remove
da796ccb3e0eba24b15beedb168178c9b74ce6f2 RDMA/mlx5: Move ports allocation to outside of INIT stage
6a4d00be08334f15502f2fbec08eabbdddc2e64a RDMA/mlx5: Move rep into port struct
d5ed8ac34cefc678d0633bfb88d0e20523ba3068 RDMA/mlx5: Move default representors SQ steering to rule to modify QP
35b0aa67b29867cdeaee32f920da3cb300dbb851 RDMA/mlx5: Refactor netdev affinity code
26628e2d58c910fa724312c6bcc3f4d12c9e805e RDMA/mlx5: Move to single device multiport ports in switchdev mode
fb652d3299023c8fd1af13c9f897c3e3d8a424d3 RDMA/mlx5: Remove VF representor profile
1db86318c4d1a0d1c8a19535290f71a03a2f13ad RDMA/mlx5: Check for error return in flow_rule rather than err
7f575103b04246246e76de4f182475174124dd03 RDMA/mlx5: Allow DEVX and raw creation flow on reps
d3b5cc1cd996ce84d362b3c15f940346603741b9 RDMA/mlx5: Initialize roce port info before multiport master init
5fb58c9e2fb11edd12379b20be01ee54a7bac026 RDMA/mlx5: Don't create IB representors when in multiport RoCE mode
27b942fbbd3107d4e969ece133925cd646239ef4 net/mlx5: Get rid of storing copy of device name
c42260f1954598b92d9e834f3d55160318573a5e net/mlx5: Separate and generalize dma device from pci device
80f09dfc237f181e92968a72d97b7a4202baa453 net/mlx5: Eswitch, enable RoCE loopback traffic
786ef904b43b9ddb675f55ef05afad5f07fb49d0 net/mlx5: Reuse mlx5_esw_for_each_vf_vport macro in two files
ee813f314b2486549cd06e9e2c4d56ccab005609 net/mlx5: Use available mlx5_vport struct
4314ebaa1e423d398035cdb7d15c50defa0f48af net/mlx5: E-Switch, Use getter to access all vport array
5d9986a3947a08185c407442c9a5fc9546b9e440 net/mlx5: E-Switch, Fix the check of legal vport
6f4e02193c9a9ea54dd3151cf97489fa787cd0e6 net/mlx5: E-Switch, Use atomic rep state to serialize state change
3b113a1ec3d4ac7e1e621b77650ac05491f5924a IB/mlx5: Support device memory type attribute
4056b12efd43248d8331b6ed93df5ea5250106a9 IB/mlx5: Warn on allocated MEMIC buffers during cleanup
25c13324d03d004f9e8071bf5bf5d5c6fdace71e IB/mlx5: Add steering SW ICM device memory type
02f3afd97556017872a2d01d03d4ce66f8421a65 net/mlx5: E-Switch, Correct type to u16 for vport_num and int for vport_index
955858009708326b26f47b6f99939489bb88a0dc net/mlx5e: Fix number of vports for ingress ACL configuration
2ef86872d98d5558bfc852b47b1140e838d601d2 net/mlx5e: Fix no rewrite fields with the same match
e7739a60712a041516f74c8917a0b3e5f1e4f01e net/mlx5e: Fix possible modify header actions memory leak
8788392995e7f1ea87d4efa03c14d872b05f9f25 net/mlx5: Fix error handling in mlx5_load()
37eb86c4507abcb14fc346863e83aa8751aa4675 mlx5: avoid 64-bit division
57c70d8740f740498a52f9c0c0d7295829b944de net/mlx5e: Replace reciprocal_scale in TX select queue function
45e7d4c0c1727d362012a62eb57254ea71a2d591 net/mlx5e: Support tagged tunnel over bond
6cc070bdf07c8f6d5955d43da0560c9e5fd203b1 net/mlx5: potential error pointer dereference in error handling
cd56f929e6a547180f889a4def370bdd6d48d223 net/mlx5: E-Switch, Replace host_params event with functions_changed event
6706a3b94f890145ca09797f748d2b30e1414fd3 net/mlx5: E-Switch, Honor eswitch functions changed event cap
8693115af4c24d92b971ad895c5f329761ed5d38 {IB,net}/mlx5: Constify rep ops functions pointers
9b81d5a9945bc696c2e653757778e79495b164a1 net/mlx5e: Generalize vport type in vport representor
10caabdaad5ace85577a453da97d1f8d3b944427 net/mlx5e: Use termination table for VLAN push actions
ac35dcd6e4bdfadc90d6566ccf9fdc3b8f5e1b23 net/mlx5: E-Switch, Handle representors creation in handler context
10ee82cedb62dd716c44ba7a2c458688638873ab net/mlx5: E-Switch, Return raw output for query esw functions
86eec50beaf3a45f6432d491072fa5c54284dbca net/mlx5: Support querying max VFs from device
561aa15ad69e9d1e5a8bb277adb3209bf8091ecb net/mlx5: Separate IRQ data from EQ table data
b79e6beb9c36a1f26116a9a576392647643ac456 net/mlx5: Move IRQ rmap creation to IRQ allocation phase
90426cc00c77e4c11f1d23799de44ecb54e8ff27 net/mlx5: Move IRQ affinity set to IRQ allocation phase
e1706e62801e9ad65b1fb6e6eccc69acfa43d16d net/mlx5: Separate IRQ table creation from EQ table creation
bfb49549ea7993f49c0374295d84a0c7772102a2 net/mlx5: Generalize IRQ interface to work with irq_table
256cf690af0668dd4e7c192648d2faf2e7e58788 net/mlx5: Move all IRQ logic to pci_irq.c
cf49f41d29467ccec16b12f77475cc217132c572 net/mlx5: Rename mlx5_irq_info to mlx5_irq
81bfa206032a67f0700459a64a5493c246629604 net/mlx5: Use a single IRQ for all async EQs
1f8a7bee27e63d7c5287719049941e285e54d370 net/mlx5: Add EQ enable/disable API
1f28d7768f1d181249318a0f61949d4cb412e8c4 net/mlx5: Move all devlink related functions calls to devlink.c
b25bbc2f24dcab9cd186ef4003c39bf51ad0454c net/mlx5: Add Vendor Specific Capability access gateway
8b9d8baae1de7400f19058020ee8f0f27d436687 net/mlx5: Add Crdump support
63cbc552eebf08818af2025aef4589a48ef849c0 net/mlx5: Handle SW reset of FW in error flow
1ef6f1a17e56f9126472d2c50818f468f1fc43d2 net/mlx5: Control CR-space access by different PFs
3e5b72ac2f298423902169db7893fef43365e0a6 net/mlx5: Issue SW reset on FW assert
fd1483fe1f9fd45fe312adffb0faffa57446690d net/mlx5: Add support for FW reporter dump
d1bf0e2cc4a6e66c2bff48176b8b2930098468ef net/mlx5: Report devlink health on FW issues
96c82cdfe77b5e769624af71ec0554434037b82f net/mlx5: Add fw fatal devlink_health_reporter
9b1f2982360579cbdb3069fa026f6cfc31c4388b net/mlx5: Add support for FW fatal reporter dump
b3bd076f7501afea2871bb4738ab53498fd32cd5 net/mlx5: Report devlink health on FW fatal issues
b3c04e8340824cae0f40bc2b4a009025b0d6e285 net/mlx5e: use indirect calls wrapper for skb allocation
39f5886032380e49119786b23274b38e9b3aa99c net/mlx5: add missing void argument to function mlx5_devlink_alloc
cecae747b6208d40d08f8336393345093536b124 RDMA/mlx5: Consider eswitch encap mode
5c171cbe3ab3d1390290eaa85e7b371cc26b1122 RDMA/mlx5: Remove unused IB_WR_REG_SIG_MR code
de0ae958deb5e6af35c4c6a4679d4fe9896a98ca RDMA/mlx5: Improve PI handover performance
2563e2f30acb4c914fc475331e476fa920eb4245 RDMA/mlx5: Use PA mapping for PI handover
7796d2a3bb4037f9c51b8d91d059f1d690ed301f RDMA/mlx5: Refactor MR descriptors allocation
65c0f2c1663649217455a73d48b1c303f133180a net/mlx5: Introduce vport metadata matching bits and enum constants
91d6291c4e544408e90e606bbaace88923d84167 net/mlx5: Introduce a helper API to check VF vport
7445cfb1169cebf8f79763acf65f85d850850461 net/mlx5: E-Switch, Tag packet with vport number in VF vports and uplink ingress ACLs
c01cfd0f111511f005ac9c2608556a02b012a2dc net/mlx5: E-Switch, Add match on vport metadata for rule in fast path
c1286050cf47170fbce7edc3787ab577a882863b net/mlx5: E-Switch, Pass metadata from FDB to eswitch manager
a5641cb524cd023c5fafbe41891c8ec510b65f3b net/mlx5: E-Switch, Add match on vport metadata for rule in slow path
669ff1e32f334e6a09e523db94989b96da4a4710 RDMA/mlx5: Add vport metadata matching for IB representors
92ab1eb392c6ac6f7fdeee4bfdfb39aa860a371f net/mlx5: E-Switch, Enable vport metadata matching if firmware supports it
a069e977d6d8f26c90a5d9374135729dc41c3a0d net/mlx5e: Calculate linear RX frag size considering XSK
a011b49f4ed7813777a15da12a426ab939c58f14 net/mlx5e: Consider XSK in XDP MTU limit calculation
0a06382fa40601e750a9477e9cccffcb6cb4206c net/mlx5e: Encapsulate open/close queues into a function
32a23653970ac2284e41258623448a5d0852f402 net/mlx5e: Move queue param structs to en/params.h
5233794b179136d597b84188c1285148f07012e6 net/mlx5e: reduce stack usage in mlx5_eswitch_termtbl_create
a90f88fe557d7f2318b724a93875dcaac45b5f05 net/mlx5e: Don't refresh TIRs when updating representor SQs
7ff40a46dd188b83311203e72cedf42eb264fdf1 net/mlx5e: Expose same physical switch_id for all representors
f6dc1264f1c01976a84239d1038359604ee42001 net/mlx5e: Disallow tc redirect offload cases we don't support
d6518db278ed64561aa58f74ef5f3ee2f9dbe546 net/mlx5: E-Switch, Use vport index when init rep
2f69e591e4531d3192841a4eb2bd9b512f5a8b66 {IB, net}/mlx5: E-Switch, Use index of rep for vport to IB port mapping
b8ca123860ee556a8d42ab8c5c2afa469817a813 RDMA/mlx5: Cleanup rep when doing unload
386e75af995c3aec475a2185b919bf46af396bfc net/mlx5: Rename mlx5_pci_dev_type to mlx5_coredev_type
5ccf2770e83bf8739f0a7c8bed9186d7e5d2ecbc net/mlx5: Don't handle VF func change if host PF is disabled
d886aba677a0a75ad7fdb06e08418b481e09b036 net/mlx5: Reduce dependency on enabled_vfs counter and num_vfs
5f5d2536be8d5b5d3df925228ce7a6f4054d5956 net/mlx5: E-Switch, Use correct flags when configuring vlan
e1d974d03e590cf8370d4820e8b467ee700925c3 net/mlx5: Handle host PF vport mac/guid for ECPF
f6455de0b0e52dcb11aeb503151b12ec87f9c5e4 net/mlx5: E-Switch, Refactor eswitch SR-IOV interface
062f4bf4aab5c6bb62bea59cda59d5c64f23ba29 net/mlx5: E-Switch, Consolidate eswitch function number of VFs
16fff98a7e827396eb68f9243636b7240f511f10 net/mlx5: E-Switch, Reg/unreg function changed event at correct stage
db68cc569eecff7dea5e346a217ce9ca5d2a0ede net/mlx5: E-Switch, Use iterator for vlan and min-inline setups
411ec9e0b45792e2ac7c55f94a635d5ce894910b net/mlx5: E-Switch, Consider host PF for inline mode and vlan pop
4a3929b223d0a13fc5920a849a2c303ccc1a1e03 net/mlx5: E-Switch, Handle UC address change in switchdev mode
b9a7ba5562074855e8a3f92ea7e1174b61a3e87d net/mlx5: Use event mask based on device capabilities
2752b823169b216db142c4466b43269281962dcf net/mlx5: Introduce and use mlx5_eswitch_get_total_vports()
7e736f9ae3d12272fec5a2b24e41b78ed58525a4 net/mlx5: E-Switch prepare functions change handler to be modular
dd28087c14777a7f2571260d44394eb709a59368 net/mlx5: Refactor mlx5_esw_query_functions for modularity
a12ff35e0fb770b4d060298be147189313ec002c net/mlx5: Introduce TLS TX offload hardware bits and structures
2afc5e1b9c340ff20848c8dd8fb60342617bce52 IB/mlx5: Introduce MLX5_IB_OBJECT_DEVX_ASYNC_EVENT_FD
e337dd53ce4cc3db79e52704e554f648c46d5e91 IB/mlx5: Register DEVX with mlx5_core to get async events
7597385371425febdaa8c6a1da3625d4ffff16f5 IB/mlx5: Enable subscription for device events over DEVX
5ec9d8ee87c627a2c981d871e41f6e2a942f53fd IB/mlx5: Implement DEVX dispatching event
ef1659ade3590e4a29a999c6f0cb2272857638a6 IB/mlx5: Add DEVX support for CQ events
5832fdd35e61bf4793da0f0480fb873af645a7b4 IB/mlx5: DEVX cleanup mdev
9c86b07e306979de852423dd11135173caeab138 net/mlx5: Added fw version query command
8338d93788950e63d12bd1d5eb09e239550e80e9 net/mlx5: Added devlink info callback
d2ead1f360e8abd9817dea4f7290ffaf00078ac1 net/mlx5e: Add kTLS TX HW offload support
b6142608e8069dda26398e65b0a14eda6ca4282d IB/mlx5: Implement VHCA tunnel mechanism in DEVX
f60f315d339e14633a51cd2d468500d08055b84b net/mlx5e: Register devlink ports for physical link, PCI PF, VFs
1ff2f0fa450ea4e4f87793d9ed513098ec6e12be net/mlx5e: Return in default case statement in tx_post_resync_params
9a64144d683a4395f57562d90247c61a0bf5105f net/mlx5: E-Switch, Fix default encap mode
9446d17e0e21889046568e5f970e9c706acb01f5 net/mlx5: E-Switch, Reduce ingress acl modify metadata stack usage
9db7e618fca34d0a7d61c149d726fd90644ecb1e net/mlx5e: Convert single case statement switch statements into if statements
296e3a2aad09d328f22e54655c3d736033fe1ae8 IB/mlx5: Prevent concurrent MR updates during invalidation
304ecc9a34b81a8b03b685f4460d0f9c1d6d4df9 net/mlx5e: kTLS, Call WARN_ONCE on netdev mismatch
f591822c3cf314442819486f45ff7dc1f690e0c0 IB/mlx5: Fix implicit MR release flow
e7e6c6320c8c9ed923250cd019e5f9ca0f59b4b8 IB/mlx5: Check the correct variable in error handling code
93b3586e070b14704dd7bff81fbcefd64663f3c2 net/mlx5: Support inner header match criteria for non decap flow action
26149e3e1f44d27897d0af9ca4bcd723674bad44 net/mlx5: kTLS, Fix wrong TIS opmod constants
a9bc3390327317345dd4683b70970c83ab400ea3 net/mlx5e: kTLS, Fix progress params context WQE layout
f1897b3cd1af1dce8d6c06b06f02551c71112003 net/mlx5e: kTLS, Fix tisn field name
b86f1abe2c275e6f9abf7e2669ccc318b7ef7bb9 net/mlx5e: kTLS, Fix tisn field placement
e9eec6a55c95fb918036bfe29c26a535dca1ad49 IB/mlx5: Fix use-after-free error while accessing ev_file pointer
8465df4025dd4ab84fc24dad6a91cc2b9ec1604d net/mlx5: Fix crdump chunks print
a6633e11e8732b9c000774746a2c1827a7e3c316 net/mlx5: Fix delay in fw fatal report handling due to fw report
5c6f40c61777e059ac3692c4505dff5eb880a12d net/mlx5e: Add num bytes metadata to WQE info
a195784c105b2907b45fd62307d9ce821da9dc20 net/mlx5e: Remove ethernet segment from dump WQE
233fd21211bd0c77109460811eefa8d10dcfc5e7 net/mlx5e: Simplify get_route_and_out_devs helper function
5a7e5bcb663d46d9cfe7d86d5a8ede91338275cb net/mlx5e: Extend tc flow struct with reference counter
226f2ca3075ab20abf69c68235e8ba9ac2dab596 net/mlx5e: Change flow flags type to unsigned long
c5d326b29603bad4e5342801414b7302ba010209 net/mlx5e: Protect tc flows hashtable with rcu
ad86755b18d5edf1956f6d25c844f27289216877 net/mlx5e: Protect unready flows with dedicated lock
525e84bea52be145b0ae863ff8d242ce273e3bc6 net/mlx5e: Eswitch, change offloads num_flows type to atomic64
0e18134f4f9f1e5c75b63b84d250b116c76d5116 net/mlx5e: Eswitch, use state_lock to synchronize vlan change
b6fac0b46a1a76024698d240f0f9aac552f897b7 net/mlx5e: Protect tc flow table with mutex
0000a5f2507deef8668d23d6406e9d19ba371def net/mlx5: Make load_one() and unload_one() symmetric
332bd3a5b931eb67deb370db62d59f9cc7f76dac net/mlx5: E-switch, Combine metadata enable/disable functionality
610090ebce92ab6a3e1e623344be5a9dd72a8b6d net/mlx5: E-switch, Initialize TSAR Qos hardware block before its user vports
5019833d661f5edb6bd63abd3da064d2517966b4 net/mlx5: E-switch, Introduce helper function to enable/disable vports
131ce7014043087fbeddbcb3b8dac8891cd0e0fe net/mlx5: E-Switch, Remove redundant mc_promisc NULL check
5896b97296a7928035590ff3f477629774dce250 net/mlx5: E-switch, Tide up eswitch config sequence
e4f9abbd38e468c73710ad3678005ad05f79c818 net/mlx5e: Extend hairpin entry with reference counter
73edca736e581a685c98d3928b4cc029932d2d5a net/mlx5e: Protect hairpin entry flows list with spinlock
b32accda8afd36d7de1581375467fd3642d3c73e net/mlx5e: Protect hairpin hash table with mutex
db76ca2424fe28923aaec5e2187e886b025a914c net/mlx5e: Allow concurrent creation of hairpin entries
dd58edc328cec1a0d837f3f2f41e9955ec623e3e net/mlx5e: Extend mod header entry with reference counter
83a52f0d525587de65b2bc979a12b4dfad9ea82a net/mlx5e: Protect mod header entry flows list with spinlock
d2faae25c3050a87c8ff965a7939e999e3154b62 net/mlx5e: Protect mod_hdr hash table with mutex
a734d007173119fe8e7bde1689ee4123c529e238 net/mlx5e: Allow concurrent creation of mod_hdr entries
948993f2beebbdc1c9d926cfdad9827cf6bb67c0 net/mlx5e: Extend encap entry with reference counter
61086f391044fd587af9d70a9b8f6f800dd474ba net/mlx5e: Protect encap hash table with mutex
d589e785baf5e48ee80a4fbfed96661a4c7c8c8d net/mlx5e: Allow concurrent creation of encap entries
ef2e4094e076858343ea1202046443f642a245cd net/mlx5: E-switch, Removed unused hwid
724ee17912c9a8e5362751a22fd955166ed0550a net/mlx5e: Simplify querying port representor parent id
c938451f6b9ccbf25eceb27fe1d1c24fd98af923 net/mlx5e: Use vhca_id in generating representor port_index
ac0d917632cf7fbbe953f2ec82c2c979ab1b4a06 net/mlx5e: Protect neigh hash encap list with spinlock and rcu
6a06c2f7843d85b43ccea6e89de8e432834c089b net/mlx5e: Refactor neigh used value update for concurrent execution
2a1f1768fa17805ca2e937e2e034a7c3433d3bdc net/mlx5e: Refactor neigh update for concurrent execution
95435ad7999b1218367f0667ed5fe98d042ffe78 net/mlx5e: Only access fully initialized flows in neigh update
3c140dd54f37693b48609819cbaf2e294a025b92 net/mlx5e: Fix deallocation of non-fully init encap entries
3c14562663c603bc523b6619a2b19a411e1cdc8e net/mlx5e: Expose new function for TIS destroy loop
45f171b1182b9c4ab6d854d6f7fd7dd771fed591 net/mlx5e: Support LAG TX port affinity distribution
c9b9dcb430b3cd0ad2b04c360c4e528d73430481 net/mlx5: Move device memory management to mlx5_core
97b5484ed608605dca9e461c0289d1195ba9608d net/mlx5: Add HW bits and definitions required for SW steering
3a6ef5158d4a01a2ddd88c3c978e6de0d10ee759 net/mlx5: Avoid disabling RoCE when uninitialized
f813cb506b8c9abc106314e1f95c9f2ebf260988 net/mlx5: Add stub for mlx5_eswitch_mode
2b688ea5efdee2868ed23eddfdbe27dbd232edac net/mlx5: Add flow steering actions to fs_cmd shim layer
fb86f1210a5776a4c0985b829542e3c30c4b89b7 net/mlx5: DR, Add CONFIG_MLX5_SW_STEERING for software steering support
6a48faeeca10a57d13deb29069591fc20a6e8117 net/mlx5: Add direct rule fs_cmd implementation
38b9d1c62a6e9428048e4d080d2aabd0dc2e7f88 net/mlx5: Add API to set the namespace steering mode
8463daf17e800c11d0f837aed2e2813391593916 net/mlx5: Add support to use SMFS in switchdev mode
e890acd5ff18a0144967d0289869fe5f0415d399 net/mlx5: Add devlink flow_steering_mode parameter
e53e665558eea32e76585c3d3a5786e7298045ad net/mlx5: fix missing assignment of variable err
d32d7c52e08a25d8d4b9f1a7b56400f35b8f72fa net/mlx5: DR, Fix SW steering HW bits and definitions
40416d8ede651d26ce334f496a336aa1d38d1c97 net/mlx5: DR, Replace CRC32 implementation to use kernel lib
3e1f000ff74627c1adb99ee513f29ec2522ee309 IB/mlx5: Support per device q counters in switchdev mode
7761f9eef3f09f2f4c579313e0c536770b5ecff4 net/mlx5: Fix offset of tisc bits reserved field
4938c3d84541e43757473c14efcc4253571f6cc6 net/mlx5: fix spelling mistake "offlaods" -> "offloads"
fa355bb1b0373e7fe087cfc830b1b0b9b6130388 net/mlx5: FWTrace, Reduce stack usage
0417791536ae1e28d7f0418f1d20048ec4d3c6cf RDMA/mlx5: Add missing synchronize_srcu() for MW cases
c7ed6d0183d5ea9bc31bcaeeba4070bd62546471 net/mlx5: fix memory leak in mlx5_fw_fatal_reporter_dump
d5dbcc4e87bc8444bd2f1ca4b8f787e1e5677ec2 net/mlx5e: Determine source port properly for vlan push action
64d7b68577130ae00f954a28ea9d6bc51025caf9 net/mlx5e: Only skip encap flows update when encap init failed
2a4b6526236791a1bb8092079ad87a1629e78db5 net/mlx5e: Don't store direct pointer to action's tunnel info
1524b12a6e02a85264af4ed208b034a2239ef374 RDMA/mlx5: Use irq xarray locking for mkey_table
cdf29f4a262527feb11cd0071f0b3cedceaba745 mlxsw: Pass switch ID through devlink_port_attrs_set()
df535f4c47a60fd6bf8f1327e9f87628e581e136 mlxsw: switch_ib: Pass valid HW id down to mlxsw_core_port_init()
5fc1733897bff10b2a9d1fb1eae775c96cefa333 mlxsw: spectrum: Set up PTP shaper when port status has changed
c224926edfc2f774df6aefa865e31a0a00e24dde KEYS: remove redundant memset
3382388d714891fc0f575926189f33d22e7c960b intel_rapl: abstract RAPL common code
d978e755aabe215cb67bf713e103ed3916ec306d intel_rapl: support 64 bit register
0c2ddedd8bcb88c4100acb9e0fc5ac8752d09501 intel_rapl: support two power limits for every RAPL domain
abcfaeb3f5dc8bded4ba446eb2fb017a7a41d9bc intel_rapl: Fix module autoloading issue
cae478114fbe2e6f4cb9194360cf0789a923be13 powercap/intel_rapl: add support for CometLake Mobile
f84fdcbc8ec02ea34bbc641359c2a69d0d1242d4 powercap/intel_rapl: add support for Cometlake desktop
6984eb47d5c1a74bb44467ee4eee22d680f10785 arm64/cpufeature: detect pointer authentication
7503197562567b57ec14feb3a9d5400ebc56812f arm64: add basic pointer authentication support
ec6e822d1a22d0eef1d1fa260dff751dba9a4258 arm64: expose user PAC bit positions via ptrace
ccc43810827f9feb5e588e4b7098dc55b1d972f8 arm64: perf: strip PAC when unwinding userspace
ba830885656414101b2f8ca88786524d4bb5e8c1 arm64: add prctl control for resetting ptrauth keys
84931327a807a4dd65d0d6b53a8ae47845c91f79 arm64: ptr auth: Move per-thread keys from thread_info to thread_struct
a56005d3210500f8a166fcb83cbb5ac5d0f909e4 arm64: cpufeature: Reduce number of pointer auth CPU caps from 6 to 4
1e013d06120cbf67e771848fc5d98174c33b078a arm64: cpufeature: Rework ptr auth hwcaps using multi_entry_cap_matches
d0a060be573bfbf8753a15dca35497db5e968bb0 arm64: add ptrace regsets for ptrauth key management
cbdf8a189a66001c36007bf0f5c975d0376c5c3a arm64: Force SSBS on context switch
d3ec3a08fa700c8b46abb137dce4e2514a6f9668 arm64: KVM: Trap VM ops when ARM64_WORKAROUND_CAVIUM_TX2_219_TVM is set
93916beb70143c46bf1d2bacf814be3a124b253b arm64: Enable workaround for Cavium TX2 erratum 219 when running SMT
9405447ef79bc93101373e130f72e9e6cbf17dbb arm64: Avoid Cavium TX2 erratum 219 when switching TTBR
603afdc9438ac546181e843f807253d75d3dbc45 arm64: Allow CAVIUM_TX2_ERRATUM_219 to be selected
d3adeed7289220fdc78ee4400efbcd4cf1556215 arm64: perf: Terminate PMU assignment statements with semicolons
418e5ca88cc18b7e9eaafa40eac26397ccd66a71 KVM: arm/arm64: Rename kvm_pmu_{enable/disable}_counter functions
a0b0fd53e1e67639b303b15939b9c653dbe7a8c4 locking/lockdep: Free lock classes that are no longer in use
ace35a7ac493d4284a57ad807579011bebba891c locking/lockdep: Reuse list entries that are no longer in use
de4643a77356a77bce73f64275b125b4b71a69cf locking/lockdep: Reuse lock chains that have been freed
b526b2e39a53b312f5a6867ce57824247aa0ce8b locking/lockdep: Check data structure consistency
108c14858b9ea224686e476c8f5ec345a0df9e27 locking/lockdep: Add support for dynamic keys
72dcd505e8585857397207f28782c8ba55e553b5 locking/lockdep: Add module_param to enable consistency checks
28d49e282665e2a51cc91b716937fccfa24d80e1 locking/lockdep: Shrink struct lock_class_key
3fe7522fb766f6ee76bf7bc2837f1e3cc52c4e27 locking/lockdep: Avoid a Clang warning
0126574fca2ce0f0d5beb9dade6efb823ff7407b locking/lockdep: Only call init_rcu_head() after RCU has been initialized
90c1cba2b3b3851c151229f61801919b2904d437 locking/lockdep: Zap lock classes even with lock debugging disabled
8b39adbee805c539a461dbf208b125b096152b1c locking/lockdep: Make lockdep_unregister_key() honor 'debug_locks' again
f6ec8829ac9d59b637366c13038f15d6f6156fe1 locking/lockdep: Define INITIAL_CHAIN_KEY for chain keys to start with
01bb6f0af992a1e6b7797d92fd31a7864872e347 locking/lockdep: Change the range of class_idx in held_lock struct
0b9fc8ecfa30000c8900da7adbbef23438de9ec0 locking/lockdep: Remove unused argument in validate_chain() and check_deadlock()
4609c4f963f353613812f999bb027aac795bcde8 locking/lockdep: Remove redundant argument in check_deadlock
519248f36d6f3c80e176f6fa844c10d94f1f5990 lockdep: Make print_lock() address visible
dee6da22efac451d361f5224a60be2796d847b51 memory-hotplug.rst: add some details about locking internals
34dc2efb39a231280fd6696a59bbe712bf3c5c4a memblock: fix section mismatch warning
940519f0c8b757fdcbc5d14c93cdaada20ded14c mm, memory_hotplug: provide a more generic restrictions for memory hotplug
18c86506c80f6b6b5e67d95bf0d6f7e665de5239 s390x/mm: implement arch_remove_memory()
80ec922dbd87fd38d15719c86a94457204648aeb mm/memory_hotplug: allow arch_remove_memory() without CONFIG_MEMORY_HOTREMOVE
db051a0dac13db24d58470d75cee0ce7c6b031a1 mm/memory_hotplug: create memory block devices after arch_add_memory()
05f800a0bd08e14606ac63e0a5c63ed6880acaab mm/memory_hotplug: drop MHP_MEMBLOCK_API
4c4b7f9ba9486c565aead99a198ceeef73ae81f6 mm/memory_hotplug: remove memory block devices before arch_remove_memory()
a31b264c2b415b29660da0bc2ba291a98629ce51 mm/memory_hotplug: make unregister_memory_block_under_nodes() never fail
90ec010fe0d690665852d6bac21643e9ae7affd8 drivers/base/memory: use "unsigned long" for block ids
8d595c4c0f768f19db043d378b22e98405f9fd47 mm: make register_mem_sect_under_node() static
fbcf73ce65827c3d8935f38b832a43153a0c78d1 mm/memory_hotplug: rename walk_memory_range() and pass start+size instead of pfns
ea8846411ad686ff626e00bb2c3821b3db2ab56a mm/memory_hotplug: move and simplify walk_memory_blocks()
dd625285910d3cff535fa76355e49949513918a4 drivers/base/memory.c: get rid of find_memory_block_hinted()
f1eca35a0dc7cb3cdb00c88c8c5e5138a65face0 mm/sparsemem: introduce struct mem_section_usage
326e1b8f83a4318b09033ef754f40c785aed5e68 mm/sparsemem: introduce a SECTION_IS_EARLY flag
f46edbd1b1516da1fb34c917775168d5df576f78 mm/sparsemem: add helpers track active portions of a section at boot
e9c0a3f05477e18d2dae816cb61b62be1b7e90d3 mm/sparsemem: convert kmalloc_section_memmap() to populate_section_memmap()
96da4350000973ef9310a10d077d65bbc017f093 mm/hotplug: kill is_dev_zone() usage in __remove_pages()
7ea6216049ff9cf250a6722cd766d99c8d1424e5 mm/sparsemem: prepare for sub-section ranges
ba72b4c8cf60e452cf6f0258ed9ee697957b7dfd mm/sparsemem: support sub-section hotplug
7cc7867fb06166ac113eda9cf20d3c15d95ff6f5 mm/devm_memremap_pages: enable sub-section remap
9a845030427c7a2879a7d635cc7c0e5f79ec962d mm/sparsemem: cleanup 'section number' data types
a3619190d62ed9d66416891be2416f6bea2b3ca4 libnvdimm/pfn: stop padding pmem namespaces to section alignment
274b924088e93593c76fb122d24bc0ef18d0ddf4 libnvdimm/pfn: Fix namespace creation on misaligned addresses
e96f0bf2ec92da2bc9c11b0d69e9086f076e7f0b libnvdimm/pfn_dev: Add a build check to make sure we notice when struct page size change
edbb52c24441ab5203b969eca759483cb533f36d libnvdimm/pfn_dev: Add page size and struct page size to pfn superblock
25baf3d81614b0b8ca8958f4d6f111ccaaaad578 powerpc/eeh: Defer printing stack trace
1b7f3b6c43675ef2cfb9d8f48bde057794820f7c powerpc/eeh: Fix build with STACKTRACE=n
84239b445964b15045e1418ebf28e74121ace309 ptp: fix debugfs_simple_attr.cocci warnings
22cda7c1680c1ddfe941adae45e7e7ef52d0e411 powerpc/eeh: Add debugfs interface to run an EEH check
bd6461cc7b3c4fd12dcba4b0e95dfc612df872fd powerpc/eeh: Add a eeh_dev_break debugfs interface
253c892193ab58da6b1d94371285971b22c63260 powerpc/eeh: Fix eeh eeh_debugfs_break_device() with SRIOV devices
f6b6aefee70aa5261deec7feab80c249bf58397f PCI: Fix typos and whitespace errors
fea2fed201ee5647699018a56fbb6a5e8cc053a5 riscv: Enable per-task stack canaries
61e5ddca9c2a312f933bf5b12bc08484189fefe6 x86/platform/uv: Save OEM_ID from ACPI MADT probe
0959f8256ada0431c1470d89e5a2811ff2305c88 x86/platform/uv: Return UV Hubless System Type
9743cb68f736d986481edba4d00de454d2faa0ec x86/platform/uv: Add return code to UV BIOS Init function
8785968bce1cc7368ea95c3e1e5b9210f56f6667 x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files
f5a8f0ecb436a15f50215f27ab70a2e8626a6135 x86/platform/uv: Decode UVsystab Info
df55029f7ea65d8c653a79dd728918dfe25b1356 x86/platform/uv: Check EFI Boot to set reboot type
75fbeacca3ad30835e903002dba98dd909b4dfff scsi: smartpqi: Add new PCI IDs
694c5d5b4625fe4617990beb02eedb176e8309c9 scsi: smartpqi: Align driver syntax with oob
e8b3bfe9bc651acd0338b331fcee3aaafb27caeb cifs: smbd: Don't destroy transport on RDMA disconnect
cf394fc5f7155c24efb584979e81427575ab3539 lib/genalloc.c: Add algorithm, align and zeroed family of DMA allocators
d0b3517dbcf3f632f7554d878f85943439aade64 PCI/P2PDMA: use the dev_pagemap internal refcount
7c321eb2b843bf25946100b7e2de4054f71ec068 x86/kdump: Remove the backup region handling
95c5824f75f3ba4c9e8e5a4b1a623c95390ac266 x86/cpu: Add a "tsx=" cmdline option with TSX disabled by default
7531a3596e3272d1f6841e0d601a614555dc6b65 x86/tsx: Add "auto" option to the tsx= cmdline parameter
a7a248c593e4fd7a67c50b5f5318fe42a0db335e x86/speculation/taa: Add documentation for TSX Async Abort
db616173d787395787ecc93eef075fa975227b10 x86/tsx: Add config options to set tsx=on|off|auto
64870ed1b12e235cfca3f6c6da75b542c973ff78 x86/speculation: Fix incorrect MDS/TAA mitigation status
c13324a505c7790fe91a9df35be2e0462abccdb0 x86/kprobes: Prohibit probing on functions before kprobe_int3_handler()
c0213b0ac03cf69f90fe5c6a8fe2c986630940fa x86/alternative: Batch of patch operations
ba54f0c3f7c400a392c413d8ca21d3ada35f2584 x86/jump_label: Batch jump label updates
bf10c97adbd0dc8fa65c35d5b0c0dc281a68ac8e x86/jump_label: Make tp_vec_nr static
13f9bae579c6bd051e58f326913dd09af1291208 s390/kasan: support memcpy_real with TRACE_IRQFLAGS
abe57073d08c13b95a46ccf48cc9dc957d5c6fdb CIFS: Fix retry mid list corruption on reconnects
f8f9ee479439c1be9e33c4404912a2a112c46200 xfs: add kmem_alloc_io()
341dfcf8d78eaa3a2dc96dea06f0392eb2978364 btf: expose BTF info through sysfs
7fd785685e2243bb639b31557e258d11464c3489 btf: rename /sys/kernel/btf/kernel into /sys/kernel/btf/vmlinux
e03250061b54041d3502696db421c44a4a8039f4 btf: fix return value check in btf_vmlinux_init()
fdf37037664041cfdbcab6cf54ddb2c1c219034b btf: do not use CONFIG_OUTPUT_FORMAT
618916a4bf169450e4680173a4b105a1816a7d6d kbuild: replace BASH-specific ${@:2} with shift and ${@}
069e47823fff2c634b2d46a328b5096fdc8c2a0c bnx2x: Enable Multi-Cos feature.
2147e3d09e9ba6edc54b1b4bb7d8fc3cca96776b ibmvnic: Terminate waiting device threads after loss of service
ff25dcb9a1492ecbe495de936765c7ff3441b601 ibmvnic: Serialize device queries
0a2f661b6c21815a7fa60e30babe975fee8e73c6 drm/i915: Rename gen7 cmdparser tables
44157641d448cbc0c4b73c5231d2b911f0cb0427 drm/i915: Disable Secure Batches for gen6+
311a50e76a33d1e029563c24b2ff6db0c02b5afe drm/i915: Add support for mandatory cmdparsing
4f7af1948abcb18b4772fe1bcd84d7d27d96258c drm/i915: Support ro ppgtt mapped cmdparser shadow buffers
435e8fc059dbe0eec823a75c22da2972390ba9e0 drm/i915: Allow parsing of unsized batches
0f2f39758341df70202ae1c42d5a1e4ee392b6d3 drm/i915: Add gen9 BCS cmdparsing
f8c08d8faee5567803c8c533865296ca30286bbf drm/i915/cmdparser: Add support for backward jumps
7e34f4e4aad3fd34c02b294a3cf2321adf5b4438 drm/i915/gen8+: Add RC6 CTX corruption WA
ea0b163b13ffc52818c079adb00d55e227a6da6f drm/i915/cmdparser: Fix jump whitelist clearing
3591bb83eee7731d3421621a3b04d2432f80bba0 cifs: don't use 'pre:' for MODULE_SOFTDEP
98253a546a468d88b7e782ab67cdf447d3c7bbe2 perf/x86: Add MSR probe interface
c66f78a6de4de6cb520b15cf6a1b586617b9add5 x86/intel: Aggregate big core client naming
8feb8efef97a134933620071e0b6384cb3238b4e tools build feature: Check if get_current_dir_name() is available
4541a8bb13a86e504416a13360c8dc64d2fd612a tools build: Check if gettid() is available before providing helper
566e30229e1f4be67c4771afc057152d62016c9c perf trace: Beautify 'move_mount' arguments
693bd3949be6c73218e3666d85e37841d678ea7b perf trace: Beautify 'fspick' arguments
dcc6fd64f2e9448ccc1c3e1ccd46a9ff5286b861 perf trace: Beautify 'fsconfig' arguments
f6af095668b7799a7514378824dcc74869df3994 perf trace: Beautify 'fsmount' arguments
1c4924220c96392d17e0222c113509fd7b9a0854 perf script: Pad DSO name for --call-trace
8e21be4f815ca8edfee1decd87f298f92123f719 perf data: Add description of header HEADER_BPF_PROG_INFO and HEADER_BPF_BTF
835fbf126ce0a359626bc59b8da4e7601f01fc87 perf data: Document memory topology header: HEADER_MEM_TOPOLOGY
a9de7cfc7663882e98ec3b2ecf35c546a013b956 perf data: Document clockid header: HEADER_CLOCKID
0da6ae94e4102fa145149dd0878b266c932507aa perf data: Document directory format header: HEADER_DIR_FORMAT
4cae8675ea798b141ccdeea0a5b3f46a1e4605eb perf augmented_raw_syscalls: Tell which args are filenames and how many bytes to copy
0c95a7ff76fb1c5bb614e6ee438fce06d1b957c8 perf augmented_raw_syscalls: Move the probe_read_str to a separate function
deaf4da48a67f73eb7d5d1802c14eaf58d33f2da perf augmented_raw_syscalls: Change helper to consider just the augmented_filename part
602bce09fb43ca6fc41f1bdcba155b839b5e7f38 perf augmented_raw_syscalls: Move reading filename to the loop
acae8b36cded0ee62038dedd0a44d54d5d673a96 perf header: Add die information in CPU topology
e05a899718f094e2c87d99115c5b1191405a9fd0 perf header: Rename "sibling cores" to "sibling sockets"
0ccdb8407a4660f6dbc5977bc060917d2c3e7986 perf tools: Apply new CPU topology sysfs attributes
36edfb940195b62c79bc8b148720c8275659a8c7 perf data: Fix perf.data documentation for HEADER_CPU_TOPOLOGY
4885c90c5e84926cfb083c58d8b6d70d1b1ac7cf perf report: Set perf time interval in itrace_synth_ops
010e3e8fc12b1c13ce19821a11d8930226ebb4b6 perf tests arm64: Compile tests unconditionally
a0db77bf880b8badd2f9ce4da708c69b0b865853 perf intel-pt: Add Intel PT packet decoder test
9c10548c42219e961279826c2763a0e32dc056b9 tools lib: Move argv_{split,free} from tools/perf/util/
99150a1faab2963d3f5bf353354afe79bdddb75f perf diff: Use hists to manage basic blocks per symbol
f3810817b20645ffae809feb30e9fe260fbd6c4d perf diff: Link same basic blocks among different data
b10c78c50964da952e6d4db78a3692ab051e6638 perf diff: Print the basic block cycles diff
215a0d305c5651928eb67c96bcedd0a6c297dfce perf tools: Add missing headers, mostly stdlib.h
e5653eb82ddc71ad8ffcbb3c74dd6f0c0230ab4c perf tools: Move get_current_dir_name() cond prototype out of util.h
7f7c536f23e6afaa5d5d4b0e0958b0be8922491f tools lib: Adopt zalloc()/zfree() from tools/perf
d8f9da240495b50766239410f9b0c715ca506a67 perf tools: Use zfree() where applicable
e56fbc9dc79ce0fdc49ffadd062214ddd02f65b6 perf tools: Use list_del_init() more thorougly
acc7bfb3db9744c4a18c96fd6536069e8647cb11 perf metricgroup: Add missing list_del_init() when flushing egroups list
9d49169c5958e429ffa6874fbef734ae7502ad65 perf script: Assume native_arch for pipe mode
4975223b8156c14f0537dcde1554f050fb4d29bf perf tools: Introduce rlimit__bump_memlock() helper
fead24e52383c3f8eb25b5426d52b430b84a8194 perf db-export: Get rid of db_export__deferred()
8ebf5cc0f6ce469d65ba2e8ce519dae34f0b3f50 perf db-export: Export comm details
80859c947a1eb170927d03e713abf7550a3d8766 perf db-export: Factor out db_export__comm()
abde8722d9b0a317935506d9824e26f1aef6c24a perf db-export: Export switch events
872c8ee8f0f47222f7b10da96eea84d0486540a3 perf session: Fix loading of compressed data split across adjacent records
df8350ed56a26f502a9636f37faf699a12ee906e perf probe: Set pev->nargs to zero after freeing pev->args entries
fa37bab6d7154658d8a35920513f9396587754cc perf tools: Fix include paths in ui directory
fba29f1820ddd42e63c38049028422dac2d86596 tools include UAPI: Update copy of files related to new fspick, fsmount, fsconfig, fsopen, move_mount and open_tree syscalls
af833988c088d3fed3e7188e7c3dd9ca17178dc3 perf scripts python: exported-sql-viewer.py: Fix use of TRUE with SQLite
ae2b01f37044c10e975d22116755df56252b09d8 mm: remove vm_insert_pfn()
063a7d1d3623db31ca5d2309cab6030ebf93b72f mm/hmm: fix memremap.h, move dev_page_fault_t callback to hmm
b57e622e6da9048c96fa0ed6943834949a398e3f mm/hmm: convert to use vm_fault_t
50f44ee7248ad2f7984ef081974a6ecd09724b3e mm/devm_memremap_pages: fix final page put race
0b3901b38d9d916f634e903ce7cd2a8ddd5b1559 mm: migration: factor out code to compute expected number of page references
f900482da560941f978b0d36660e96f48ea78752 mm/migrate.c: cleanup expected_page_refs()
25b2995a35b609119cf96f6b62eccd56c0234c7d mm: remove MEMORY_DEVICE_PUBLIC support
3ed2dcdf54d5bf1f9823b5faf1a702e7cee53982 memremap: validate the pagemap type passed to devm_memremap_pages
1e240e8d4a7d92232b6214e02a0a4197a53afd6c memremap: move dev_pagemap callbacks into a separate structure
d8668bb0451c3c45b59dbcde2654e0539aad1d2a memremap: pass a struct dev_pagemap to ->kill and ->cleanup
f6a55e1a3fe6b3bb294a80a05437fcf86488d819 memremap: lift the devmap_enable manipulation into devm_memremap_pages
897e6365cda6ba6356e83a3aaa68dec82ef4c548 memremap: add a migrate_to_ram method to struct dev_pagemap_ops
80a72d0af05ae97a8b106c172e431072ba587492 memremap: remove the data field in struct dev_pagemap
514caf23a70fd697fa2ece238b2cd8dcc73fb16f memremap: replace the altmap_valid field with a PGMAP_ALTMAP_VALID flag
24917f6b1041a73993178920656e13364f847995 memremap: provide an optional internal refcount in struct dev_pagemap
14c5cebad510c2875ca525f36605b47058769670 memremap: move from kernel/ to mm/
77e080e7680e1e615587352f70c87b9e98126d03 mm/memunmap: don't access uninitialized memmap in memunmap_pages()
06282373ff57a2b82621be4f84f981e1b0a4eb28 mm/memremap: Fix reuse of pgmap instances with internal references
6d0e9849417bfcbe997405371e0ed712b364ba0a mm/memremap: drop unused SECTION_SIZE and SECTION_MASK
db05815b36cbd486c86fd002dfa81c9af6245e25 net/mlx5e: Add XSK zero-copy support
694826e366349d5b27599f591d3bd3a53512306e net/mlx5e: Fix wrong max num channels indication
e0d57d9c7e7a223f3c2ff8b7b63ec1bf63f11ed4 net/mlx5e: Fix a race with XSKICOSQ in XSK wakeup flow
bb487d29ce005416ed355dea213bbc39c03dabe7 net/mlx5: fix a -Wstringop-truncation warning
2347cee83b2bd868bde2d283db0fac89f22be4e0 net/mlx5: Fix rtable reference leak
e019cb536d046ea1c7ba5d370845ea362610b348 net/mlx5: Fixed a typo in a comment in esw_del_uc_addr()
238302fae0216cb2e6a087ba403f3ecc3450b18b net/mlx5: E-switch, Enable metadata on own vport
1cdc14e9d134a48d86673fd75a6abcbe0e58a29c net/mlx5: LAG, Use affinity type enumerators
556b9d16d3f53d1e72b988f37501bb7e6d3f358b net/mlx5: Clear VF's configuration on disabling SRIOV
a7cba0a4d508d2d78f2932ee944feadd38c97c2c net/mlx5: Read num_vfs before disabling SR-IOV
504db087aaccdb32af61539916409f7dca31ceb5 nvme-multipath: fix possible I/O hang when paths are updated
c329230ce886f449a6e559b636096b75ab00d18a bnxt_en: Fix the size of devlink MSIX parameters.
83a46a82b96c1928ad82958752523fb0c7d9fcce bnxt_en: Fix devlink NVRAM related byte order related issues.
c6a9e7aa2e8b15402022a15625284069d4fd6df0 bnxt_en: Adjust the time to wait before polling firmware readiness.
f255ed1c4e4c5ed8171b6e81dce1297df1f1b60c bnxt_en: Minor formatting changes in FW devlink_health_reporter
e07ab2021eb6b7123ec66ae1dc019afae566a56c bnxt_en: Add support to invoke OP-TEE API to reset firmware
627c89d00fb969f9b3b4f3156716149631d2796c bnxt_en: flow_offload: offload tunnel decap rules via indirect callbacks
f3a6d206c25ad9490f3a3c6d62baba9504227a75 bnxt_en: Call bnxt_ulp_stop()/bnxt_ulp_start() during error recovery.
0b4de1ff19bf878eb38f4f668ee15c9b9eed4240 nfp: bpf: eliminate zero extension code-gen
86c28b2d69f93a218a9a5cef146ed0097a98687f nfp: bpf: fix latency bug when updating stack index register
2e53840362771c73eb0a5ff71611507e64e8eecd ext4: don't allow any modifications to an immutable file
73eb802ad97f814aa86d83cfd1d139cadbb4f0fb docs: admin-guide: Fix min value of threads-max in kernel.rst
e80d89380c5a8553f208d002ee0f7877ed08eb6c docs: admin-guide: Remove threads-max auto-tuning
f1c8e410cdac5df42a7806e49efde2859a10fecd cpuidle: menu: Avoid computations when result will be discarded
a7fe5190c03f8137ef08db84a58dd4daf2c4785d cpuidle: menu: Remove get_loadavg() from the performance multiplier
63f202e5edf161c2ccffa286a9a701e995427b15 cpuidle: teo: Avoid using "early hits" incorrectly
23127296889fe84b0762b191b5d041e8ba6f2599 sched/fair: Update scale invariance of PELT
1c1b8a7b03ef50f80f5d0c871ee261c04a6c967e sched/fair: Replace source_load() & target_load() with weighted_cpuload()
0e1fef63d92d61ed561e504c3a078a827a0f9bfe sched/core: Remove sd->*_idx
66567fcbaecac455caa1b13643155d686b51ce63 sched/fair: Don't push cfs_bandwith slack timers forward
8ec59c0f5f4966f89f4e3e3cab81710c7fa959d0 sched/topology: Remove unused 'sd' parameter from arch_scale_cpu_capacity()
a3df067974c52df936f548ed218120f623c4c560 sched/fair: Rename weighted_cpuload() to cpu_runnable_load()
cb361d8cdef69990f6b4504dc1fd9a594d983c97 sched/fair: Use RCU accessors consistently for ->numa_group
de53fd7aedb100f03e5d2231cfce0e4993282425 sched/fair: Fix low cpu usage with high throttling by removing expiration of cpu-local slices
763a9ec06c409dcde2a761aac4bb83ff3938e0b3 sched/fair: Fix -Wunused-but-set-variable warnings
845ef9047b1f4e8ea3b8865140066b08fe93d05c s390/qeth: gather more detailed RX dropped/error statistics
5fd3fcbb8af8f9bc82afd84937393c193b95c204 s390/qeth: support per-frame invalidation
7d4faee7c6db9ddfb2b4de637dc6f1576f780bd7 s390/qeth: drop unwanted packets earlier in RX path
17caeaa4766dc447d6669b0f195c3ead746386ba s390/qeth: handle skb allocation error gracefully
5b55633f20ee1bb253dc7d915ec2fd35fd865d5a s390/qeth: guard against runt packets
f677fcb9aeb60c523ee36c1061ef2249b558d1b5 s390/qeth: ensure linear access to packet headers
ebb0e13ead2ddc186a80b1b0235deeefc5a1a667 powerpc/ptrace: Mitigate potential Spectre v1
91724c1e5afe45b64970036170659726e7dc5cff RDMA/iw_cxgb4: fix SRQ access from dump_qp()
6370740e5f8ef12de7f9a9bf48a0393d202cd827 fs/dax: Fix pmd vs pte conflict detection
add66fcbd3fbe5aa0dd4dddfa23e119c12989a27 iomap: Fix overflow in iomap_page_mkwrite
2b91b28e29f6491efbe77694c17465a3054f37cf iomap: iomap_bmap should check iomap_apply return value
e9f930ac88a8936ccc2d021110c98810cf5aa810 iomap: fix return value of iomap_dio_bio_actor on 32bit systems
419e9c38aa075ed0cd3c13d47e15954b686bcdb6 iomap: Fix pipe page leakage during splicing
f633a8ad636efb5d4bba1a047d4a0f1ef719aa06 powerpc/fsl: Add nospectre_v2 command line argument
dfa88658fb0583abb92e062c7a9cd5a5b94f2a46 powerpc/fsl: Update Spectre v2 reporting
d8f0e0b073e1ec52a05f0c2a56318b47387d2f10 powerpc/64s: support nospectre_v2 cmdline option
39e72bf96f5847ba87cc5bd7a3ce0fed813dc9ad powerpc/book3s64: Fix link stack flush on context switch
af2e8c68b9c5403f77096969c516f742f5bb29e0 KVM: PPC: Book3S HV: Flush link stack on guest exit to host kernel
b03641af680959df57c275a80ff0dc116627c7ae mm: move buddy list manipulations into helpers
97500a4a54876d3d6d2d1b8419223eb4e69b32d8 mm: maintain randomization of page free lists
5fb5c395e2c4658a57f894ae9ab72b3d4d71a882 nfp: flower: add qos offload stats request and reply
5dc37bb9b03586e8fdeb47d25e8d2a0399984936 net: replace ndo_get_devlink with ndo_get_devlink_port
335bc0dde0120b9e46a726309cf6010e39d56c82 nfp: register devlink port before netdev
1b15c90270c5051799fe5a557684d66dbc95d7b4 nfp: pass switch ID through devlink_port_attrs_set()
c25f08ac65e4e6a308babd2b39d89b362e9086c6 nfp: remove ndo_get_port_parent_id implementation
1e966763e256393965c78aa09b89027fac6b8bf1 nfp: reintroduce ndo_get_port_parent_id for representor ports
232eeb1f84eb2d481aad50471eff4766dcfd0e3a nfp: add tls init code
986643de5356b4ea6ca32ce0bfdae3e02e507a9f nfp: flower: refactor tunnel key layer calculation
e3a6aba081f45882069af28d73157e01c22d8092 nfp: flower: add GRE decap classification support
f12725d98cbe862c7680c63fd1f8b381af965f7b nfp: flower: offload pre-tunnel rules
09aa811bb7def147e230f53ed3c19ff1a54a1575 nfp: flower: remove offloaded MACs when reprs are applied to OvS bridges
2e0bc7f3cb5553812f5808ede2cea746aabfbd03 nfp: flower: encode mac indexes with pre-tunnel rule check
739d7c5752b255e89ddbb1b0474f3b88ef5cd343 nfp: flower: prevent ingress block binds on internal ports
46c46f8df9aa425cc4d6bc89d57a6fedf83dc797 devpts_pty_kill(): don't bother with d_delete()
47d99948eee48a84a4b242c17915a4ff59a29b5d powerpc/mm: Move book3s64 specifics in subdirectory mm/book3s64
5a1ea4774ddc2c6bc3ba1415880091eccf1a901e powerpc/pseries: Move mm/book3s64/vphn.c under platforms/pseries/
18a593c8b5426f6a08bcb353636d761a83f78d9e powerpc/pseries: Protect against hogging the cpu while setting up the stats
dc51f25752bfcb5f1edbac1ca4ce16af7b3bd507 crypto: arc4 - refactor arc4 core code into separate library
36647055b37ec78e9068f470f14e7cd75c001c22 cfg80211: Add airtime statistics and settings
26f7044e95042daabcf1c71796a0e804a83c979f nl80211: add support for SAE authentication offload
a0de1ca383c77a1ae123d7c0cea45e327b61876a mac80211: allow turning TWT responder support on and off via netlink
bd718fc11d5b184701e7fd8302033e31a3a03ba8 mac80211: use STA info in rate_control_send_low()
583a7a34c5d3bb76777b710c6f3fcd51981db256 mac80211: fill low rate even for HAS_RATE_CONTROL
9220f695c17b8b82ee97a38b5f11f85abdfde1e6 mt76: mmio: move mt76x02_set_irq_mask in mt76 module
b1bfbe704f8f2466a8e1bba7c8ecef1d41b30b96 mt76: dma: move mt76x02_init_{tx,rx}_queue in mt76 module
89a37842b0c13c9e568bf12f4fcbe6507147e41d mt76: remove mt76_queue dependency from tx_queue_skb function pointer
300832ad5f53591311304bb3af749dc427957d2d mt76: remove mt76_queue dependency from tx_prepare_skb function pointer
e226ba2e356929c8d4aa9131acb795c302e5e821 mt76: remove mt76_queue dependency from tx_complete_skb function pointer
af005f2605956e596b335b40bce364963f0575a0 mt76: introduce mt76_sw_queue data structure
b5903c470328b15f828ebb9c42da63da6d0cf8a1 mt76: introduce mt76_tx_info data structure
eb9ca7ecd0b4fa337bb677c1938c9123120bab59 mt76: dma: add static qualifier to mt76_dma_tx_queue_skb
a33b8ab868ad774dfb66e750ebd158887ff8d337 mt76: move tx tasklet to struct mt76_dev
41634aa8d6db9346121f58eed5d94511cdcb0976 mt76: only schedule txqs from the tx tasklet
37426fb67a017f0140e529fe4b09e490989cdbf0 mt76: move mac_work in mt76_dev
cfaae9e67cf13011ce6d6ddd61eacff8f72b7bad mt76: add skb pointer to mt76_tx_info
cc1738751cfd6a3dd38f7da90a1d5b7a7df06583 mt76: mt7603: initialize mt76_mcu_ops data structure
a4834814e1d3376e07c00ecf339f1c4b8818c8a2 mt76: mt7603: init mcu_restart function pointer
3041c445e62669327eff68a7f5ac342ba48cf4fd mt76: move beacon_int in mt76_dev
c8a04d985481b6e00534c6a47a8e85a62e8992ca mt76: move beacon_mask in mt76_dev
dc6057f49a510132ae62e008df85e8e2b548a92c mt76: move pre_tbtt_tasklet in mt76_dev
bd115805e86a6d18b18e2cf97e9cc7af361cb72a mt76: mt7603: enable/disable pre_tbtt_tasklet in mt7603_set_channel
4d2a6f7b4e17ede86be46013d114d58adaca5631 mt76: mt7603: dynamically alloc mcu req in mt7603_mcu_set_eeprom
9e63f5e76b5638f51f50e7815914daf879af5b30 mt76: mt7603: use napi polling for tx cleanup
4875e34679ba259bb8fa6a3ac337d76c8b7283a9 mt76: move netif_napi_del in mt76_dma_cleanup
0766789b1edb23874fcafdf3be69160e61384bf3 ath: fix SPDX tags
50508d941c180a105fdba802d5af1abf3d93a625 cfg80211: use parallel_ops for genl
796e90f42b7e52cf1c88e978e1d5ee69c102d85d cfg80211: add support for parsing OBBS_PD attributes
1ced169cc1c2f3e054fa14974443383ee02a8b6a mac80211: allow setting spatial reuse parameters from bss_conf
5db16ba82f38849a78ae932c0b7eada4cd2eb919 mac80211: fix possible NULL pointerderef in obss pd code
2a38075cd0beefa4da326380cf54c7b365ddc035 nl80211: Add support for EDMG channels
81e54d08d9d845053111f30045a93f3eb1c3ca96 cfg80211: support FTM responder configuration/statistics
ab0d76f6823cc3a4e277c888abd344e3b977e279 nl80211: use policy range validation where applicable
3d7af878357acd9e37fc156928106f1a969c8942 nl80211: use netlink policy validation function for elements
9bb7e0f24e7e7d00daa1219b14539e2e602649b2 cfg80211: add peer measurement with FTM initiator API
9f308616b6176b6dc470e6eb3569a09b100a823a nl80211: use for_each_element() in validate_ie_attr()
7388afe09143210f555bdd6c75035e9acc1fab96 cfg80211: Use const more consistently in for_each_element macros
1e1b11b6a1111cd9e8af1fd6ccda270a9fa3eacf nl80211/cfg80211: Specify band specific min RSSI thresholds with sched scan
6cdd3979a2bdc16116c5b2eb09475abf54ba9e70 nl80211/cfg80211: Extended Key ID support
96fc6efb9ad9d0cd8cbb4462f0eb2a07092649e6 mac80211: IEEE 802.11 Extended Key ID support
901bb9891855164fdcfcfdd9c3d25bcc800d3f5b nl80211: require and validate vendor command policy
3e47bf1ca4c363ba8b1f99c4c3dcda13d2979954 mac80211: Simplify Extended Key ID API
dc3998ec5cf2d377f2e85ba16b6a15affec98a0a mac80211: AMPDU handling for rekeys with Extended Key ID
b67fd72e84a88cae64cea8ab47ccdaab3bb3094d cfg80211: Fix Extended Key ID key install checks
e96d1cd2635c05efdd01b4eafcfc50c22c40751f cfg80211: Add support to set tx power for a station associated
1a28ed213696b379a64540ce1a879a07e36b44db nl80211: fill all policy .type entries
aab478ca0f7ada511088039c6e2c8fdcb09139db mtd: Remove dev_err() usage after platform_get_irq()
5e814e71a264f49fd64414cd22df1befed16ebdb mt76: mt7603: fix watchdog rescheduling in mt7603_set_channel
7f17b86a042e5ac0453434db700fab3ce97cfba6 mt76: mt7603: fix some checkpatch warnings
c325c9c779679fb27a05f3d53bec1fab871cfb5c mt76: move mt76_tx_tasklet in mt76 module
7f7d19c3bc8638fb6b2b6bdc68b2d955afa42315 mt76: mt7603: remove unnecessary mcu queue initialization
8b8ab5c2353404b87b4ecde37dbaea2f040aec1b mt76: add default implementation for mt76_sw_scan/mt76_sw_scan_complete
f88eb7c0d002a67ef31aeb7850b42ff69abc46dc nl80211: validate beacon head
7957a9dea8bf58b02e6ebf28f91c4bce74b5c91c mac80211: Don't access sk_queue_head->next directly.
ec649fed66bb242cca145ab364485c5a126efc53 nl80211: Disallow setting of HT for channel 14
91046d6364afde646734c7ead1f649d253c386e9 nl80211: fix VENDOR_CMD_RAW_DATA
c11f83e0626bdc2b6c550fc8b9b6eeefbd8cefaa KVM: vmx: implement MSR_IA32_TSX_CTRL disable RTM functionality
fb961945457f5177072c968aa38fee910ab893b9 netfilter: nf_tables: add SECMARK support
0f0727d971f6fdf8f1077180d495ddb9928f0c8b drm/amd/display: readd -msse2 to prevent Clang from emitting libcalls to undefined SW FP routines
ade925995b172f1d7410d1c665b2f47c5e99bef0 drm: fix module name in edid_firmware log message
d6bbece2c419debff6fc6b3c7a59fbede53bdef3 drm/amd/display: dce11.x /dce12 update formula input
c02d6a161395dfc0c2fdabb9e976a229017288d8 drm/amd/display: Add missing HBM support and raise Vega20's uclk.
dd9212a885ca4a95443905c7c3781122a4d664e8 drm/amdgpu/display: fix 64 bit divide
75c35000235f3662f2810e9a59b0c8eed045432e drm/amd/display: Power-gate all DSCs at driver init time
18b401874aee10c80b5745c9b93280dae5a59809 drm/amd/display: fix not calling ppsmu to trigger PME
d68a74541735e030dea56f72746cd26d19986f41 drm/amd/display: Clear FEC_READY shadow register if DPCD write fails
21ffcc94d5b3dc024fedac700f1e7f9dacf4ab4f drm/amd/display: Copy GSL groups when committing a new context
365d28c92f8cd3d3860f8dd057a8c136e24b3698 drm/bridge: sii902x: fix missing reference to mclk clock
e4c4073b0139d055d43a9568690fc560aab4fa5c drm/amdgpu: Fix hard hang for S/G display BOs.
d196bbbc28fab82624f7686f8b0da8e8644b6e6a drm/amd/display: Use proper enum conversion functions
e40837afb9b011757e17e9f71d97853ca574bcff drm/amd/display: Register VUPDATE_NO_LOCK interrupts for DCN2
9e48495017342c5d445b25eedd86d6fd884a6496 drm/amdgpu/sdma5: fix number of sdma5 trap irq types for navi1x
b5a41620bb88efb9fb31a4fa5e652e3d5bead7d4 drm/amd/display: support spdif
706feb26f890e1b8297b5d14975160de361edf4f drm/amd/powerpaly: fix navi series custom peak level value error
89cb5614736b9b5d3b833ca2237d10da6b4b0395 drm/amd/display: fix MPO HUBP underflow with Scatter Gather
1e7f100ce8c0640634b794604880d9204480c9f1 drm/amd/display: fix trigger not generated for freesync
ed06efb801bd291e935238d3fba46fa03d098f0e drm/i915/dp: Fix dsc bpp calculations, v5.
e0e4a2ce7a059d051c66cd7c94314fef3cd91aea drm/amd/powerplay: change metrics update period from 1ms to 100ms
52988009843160c5b366b4082ed6df48041c655c drm/i915: to make vgpu ppgtt notificaiton as atomic operation
cec5ca08e36fd18d2939b98055346b3b06f56c6c drm/i915: Perform GGTT restore much earlier during resume
bed34ef544f9ab37ab349c04cf4142282c4dcf5d drm/i915: Bump skl+ max plane width to 5k for linear/x-tiled
5028851cdfdf78dc22eacbc44a0ab0b3f599ee4a drm/i915: Mark contents as dirty on a write fault
8581d51055a08cc6eb061c8856062290e8582ce4 drm: Free the writeback_job when it with an empty fb
055e547478a11a6360c7ce05e2afc3e366968a12 drm/amd/display: memory leak
e8939b4a0d5e7b559d05f6ab8bbc22492c8505fe drm/amdgpu/sdma5: fix mask value of POLL_REGMEM packet for pipe sync
a4311745bba9763e3c965643d4531bd5765b0513 drm/i915/userptr: Never allow userptr into the mappable GGTT
41e35ffb380bde1379e4030bb5b2ac824d5139cf drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin
79fcd446e7e182c52c2c808c76f8de3eb6714349 drm/amdgpu: Fix memory leak
46203a508f64b4bfa150a9d25eab1dc891e7e650 drm/amdgpu/gmc10: properly set BANK_SELECT and FRAGMENT_SIZE
dd5279c71405533d4ddbb9453effc60f0f5bf211 drm/i915: Fix PCH reference clock for FDI on HSW/BDW
8ea763e2304951a086179bbc37476a48d125ca3e drm/amdgpu/gfx10: update gfx golden settings
5aed95bbdd210be01c664a768e63dbc773658e9f drm/amdgpu: Fix SDMA hang when performing VKexample test
3f378758b8572261cec5c6820f9846ad7f51ccd2 drm/amdgpu/sdma5: do not execute 0-sized IBs (v2)
e91e5f080e03e0c28742f0aa4051c7cefafd7cdd drm/sched: Set error to s_fence if HW job submission failed.
4294f722196d04fc2b44bca8c590d08137135f19 drm/amd/display: add 50us buffer as WA for pstate switch in active
039ffeaae307d61318742e0b2f79742e08ea6b8b dc.c:use kzalloc without test
59ed05ccdded5eb18ce012eff3d01798ac8535fa drm/i915: update rawclk also on resume
3f2a06ac814e84fba16592286ec99364098cdd07 drm/amdgpu: disable gfxoff on original raven
0d4bbe3d407f79438dc4f87943db21f7134cfc65 drm/i915/userptr: Try to acquire the page lock around set_page_dirty()
2c874ad9d6293cd387b13304894e4322ec3eab6f drm/amd/swSMU: fix smu workload bit map error
37c92dc303dd0977134d1c8501f057de407473ec drm/i915: Add new CNL PCH ID seen on a CML platform
b03bc6853c0e0c97da842434e8056f1b9d9a1f4a libbpf: convert libbpf code to use new btf helpers
ddc7c3042614e273044f698d2beab25cc3842d45 libbpf: implement BPF CO-RE offset relocation algorithm
df36e621418b0de4d4afec5f8002d45ee636bb5c selftests/bpf: add CO-RE relocs testing setup
002d3afce65518dc5dfc398a37c2be2a6bf559c4 selftests/bpf: add CO-RE relocs struct flavors tests
ec6438a988a43dcb03f0a04f3f51a48aba54764a selftests/bpf: add CO-RE relocs nesting tests
20a9ad2e71368da8e831317f0a545e4bfb31cce1 selftests/bpf: add CO-RE relocs array tests
d9db3550300f4390e457c79189e2601c107f9fe6 selftests/bpf: add CO-RE relocs enum/ptr/func_proto tests
9654e2ae908eb0d51b0b79c7c50df0754ed38edd selftests/bpf: add CO-RE relocs modifiers/typedef tests
d698f9dbdbed036ef28a96cd34a1b5d7fe58750e selftests/bpf: add CO-RE relocs ptr-as-array tests
c1f5e7dd19e71cd3607572bb957def618a33519a selftests/bpf: add CO-RE relocs ints tests
29e1c66872450adba0ad552ff6019932168676f3 selftests/bpf: add CO-RE relocs misc tests
5e61f27070292d4ad3af51dc68eebab6c1df69d3 libbpf: stop enforcing kern_version, populate it for users
2ce8450ef5a381e5ffeb4682c0093a3ab5d07008 libbpf: add bpf_object__open_{file, mem} w/ extensible opts
b707659213d3c70f2c704ec950df6263b4bffe84 tools/bpf: fix core_reloc.c compilation error
694731e8ea7f6bbcf0c57763ed4f24faa14bf056 selftests/bpf: Adjust CO-RE reloc tests for new bpf_core_read() macro
b9632679944307f3caab183fa69a4d79ffeb40ce selftests/bpf: introduce bpf_cpu_to_be64 and bpf_be64_to_cpu
637f71c09ba22d1042f5b48b58c249ee5665d44d selftests/bpf: bpf_tcp_gen_syncookie->bpf_helpers
4ce150b6a412f14074400eac5fc39d1a71c4ef0a selftests/bpf: add bpf-gcc support
24f25763d6de229e8ada7616db76fd9ba83775e9 libbpf: auto-generate list of BPF helper definitions
cf0e9718da214415195a28e5909bd297fb178583 selftests/bpf: Undo GCC-specific bpf_helpers.h changes
3ac4dbe3dd8943450e0366f8174fbfc286ea8f19 selftests/bpf: Split off tracing-only helpers into bpf_tracing.h
a53ba15d81995868651dd28a85d8045aef3d4e20 libbpf: Fix BTF-defined map's __type macro handling of arrays
5f0e5412781b01708f622d00c0b3f77b9dca7367 uapi/bpf: fix helper docs
e01a75c159691714607b8a22daa2ba7be275dd01 libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf
291ee02b5e407eb1eb99c9eeaa968ef8a0c16949 libbpf: Refactor bpf_object__open APIs to use common opts
7db3822ab99157e16c41caa5e7d788834d5a3c7c libbpf: Add BPF_CORE_READ/BPF_CORE_READ_INTO helpers
511bb0085c6fe48353c35cd3d25f4f8720579a6d libbpf: Update BTF reloc support to latest Clang format
62561eb442bd095f06534ce637b116b278e5e912 libbpf: Add support for field existance CO-RE relocation
c7566a69695cd3d8fe876c0da38a03a7472d3f56 selftests/bpf: Add field existence CO-RE relocs tests
be18010ea2d83c184cc32afdc895410a1cf2cbd5 tools, bpf: Rename pr_warning to pr_warn to align with kernel logging
4580b25fcee5347327aaffcec31c615ec28a889a libbpf: Store map pin path and status in struct bpf_map
196f8487f51ee6e2a46f51e10ac3f4ca67574ba9 libbpf: Move directory creation into _pin() functions
f1eead9e3ceef67b98be4b55ed1bfcfa4497b7db libbpf: Add bpf_program__get_{type, expected_attach_type) APIs
dd4436bb838338cfda253d7f012610a73e4078fd libbpf: Teach bpf_object__open to guess program types
57a00f41644f20b11c12a27061d814655f633544 libbpf: Add auto-pinning of maps when loading BPF objects
ec6d5f47bfe36f46aa0de707e5beb2f58d96b76d libbpf: Unpin auto-pinned maps if loading fails
473f4e133a12dd083bae044ba1782be4767177c1 libbpf: Add bpf_get_link_xdp_info() function to get more XDP information
1a734efe06948c17122808f74f0c8cc550c10cf5 libbpf: Add getter for program size
a1916a153c254cd0ad13b23bed262ed56922cc7a libbpf: attempt to load kernel BTF from sysfs first
ff20460e94af5d11ebffd9d97c1eaa00e520ecbe tools, bpf: Synchronise BPF UAPI header with tools
ee2eb063d330dc8dbe71041a1dae3cea889fdcb5 selftests/bpf: Add BPF_CORE_READ and BPF_CORE_READ_STR_INTO macro tests
d25c5e23552d54ebb9eea0de0d8cf9b7a7c5535c selftests/bpf: Make CO-RE reloc test impartial to test_progs flavor
1aace10f41adf1080d1cc54de9b3db98b8b8b0fb libbpf: Fix bpf_object name determination for bpf_object__open_file()
a0d7da26ce86a25e97ae191cb90574ada6daea98 libbpf: Fix call relocation offset calculation bug
1f8e2bcb2cd5ee1a731fb625a5438e2c305f6a7c libbpf: Refactor relocation handling
35f2c14d2a076b063a76c5bf275c46c0743ba3a0 platform/x86: ISST: Add common API to register and handle ioctls
8fbfb6fc67819c1274584ff902f7d03aafe38dab platform/x86: ISST: Store per CPU information
fb5b36a413b9f30fba573fc2a596ab7142dfaf12 platform/x86: ISST: Add IOCTL to Translate Linux logical CPU to PUNIT CPU number
d3a23584294c1f379239a3b52bac13e03fecd147 platform/x86: ISST: Add Intel Speed Select mmio interface
31a166fe9c269af17977e650846ee4ea50361c07 platform/x86: ISST: Add Intel Speed Select mailbox interface via PCI
71b21bd7f68a6ee59003f63d2e4f84fd9b0a8d07 platform/x86: ISST: Add Intel Speed Select mailbox interface via MSRs
e765f37b9b8b4fa65682e9a78a2ca2b11d3d9096 platform/x86: ISST: Add Intel Speed Select PUNIT MSR interface
f607874f35cbd276a837d7147d4e1ec752dfef44 platform/x86: ISST: Restore state on resume
3fb4f7cd472c7f5905c91508e988f6b28372210d tools/power/x86: A tool to validate Intel Speed Select commands
010764b8856e5ee5056113704dc4b914ebc88f1d tools/power/x86/intel-speed-select: Fix a read overflow in isst_set_tdp_level_msr()
a8dc07448177dddd3947e89fe3904cb3169935c2 tools/power/x86/intel-speed-select: Fix package typo
43774c0dccb405a0b63a10829d45db4b74c29e40 tools/power/x86/intel-speed-select: Fix help option typo
3ec2aef1b03eefeffe93817bd04068d3805d4a98 tools/power/x86/intel-speed-select: Fix cpu-count output
dece22a2d5e37cf7c4cda9a7d5f036c9b3fdaccb tools/power/x86/intel-speed-select: Simplify output for turbo-freq and base-freq
808088e4a1fb2d27a347db2890d43ae73c75a72f tools/power/x86/intel-speed-select: Switch output to MHz
76c2ef35f73913380f32d473a181d68decfca4f4 tools/power/x86/intel-speed-select: Change turbo ratio output to maximum turbo frequency
49aed155ec1b07f8820cceec7317c597a6f69c6e tools/power/x86/intel-speed-select: Output human readable CPU list
522586a9d5c32b5d7569237eebbfd8241f196419 tools/power/x86/intel-speed-select: Output success/failed for command output
3bc3d30ca324bfc3045a1a7fe1f5fe5ad5d92fd9 tools/power/x86/intel-speed-select: Fix memory leak
92e0e87d0be5eb192fab1edb9b44e724c63416ce platform/x86: ISST: Allow additional TRL MSRs
1233c7b95c7045905e40c11484493f20ab521d21 tools/power/x86/intel-speed-select: Display core count for bucket
44460efe44e05eae2f21e57d06d542bbbb792e65 tools/power/x86/intel-speed-select: Fix high priority core mask over count
3c64c81ad1f06823b603e9143193dcb4f3121a2f tools/power/x86/intel-speed-select: Allow online/offline based on tdp
e118fbe366d817175b2c47bfa338959bbff5bd37 tools/power/x86/intel-speed-select: Format get-assoc information
d2d1f304dc965e6a06e7f105b09bffceb477fccc tools/power/x86/intel-speed-select: Fix some debug prints
188afed9db7db3aefc8c9c33150be2f8f398da9a tools/power/x86/intel-speed-select: Extend core-power command set
b3abfd778bf1dbdd96f70bd7d00671d027f67c62 tools/power/x86/intel-speed-select: Fix perf-profile command output
abd120e3bdf3dd72ba1ed9ac077a861e0e3dc43a tools/power/x86/intel-speed-select: Remove warning for unused result
354bd06f40c4ba7b2f12d9f0f119dff62a2f922f tools/power/x86/intel-speed-select: Base-freq feature auto mode
a6a82f9bcd2ad3fab5f20fc406727dc62775db92 tools/power/x86/intel-speed-select: Turbo-freq feature auto mode
4e26fabfe15ca67125f1b6984671c2e9048d64a5 tools/power/x86/intel-speed-select: Refuse to disable core-power when getting used
ce1326a2f9f7bf8920bc7f07e7b13ce8737b4681 tools/power/x86/intel-speed-select: Add int argument to command functions
210369dc73b23fab1b9727fba35c2f83d00b6277 tools/power/x86/intel-speed-select: Make process_command generic
1c1d935c8418a63d110b2b31c57ba3d75f94f49d tools/power/x86/intel-speed-select: Add check for CascadeLake-N models
c829f0ef7bfc4b294e67506779853547e8b52c68 tools/power/x86/intel-speed-select: Implement CascadeLake-N help and command functions structures
062e4aac92e8acbab2fd135e90b580b903c3724b tools/power/x86/intel-speed-select: Implement 'perf-profile info' on CascadeLake-N
1aa7177cdcb38d114e0a80dc27482e645d8068f2 tools/power/x86/intel-speed-select: Implement base-freq commands on CascadeLake-N
263225c983aa27719fe06836426e270b658036ed tools/power/x86/intel-speed-select: Extend command set for perf-profile
82d4a34ee6196a652f04f81d23ab296bddf8486d tools/power/x86/intel-speed-select: Change display of "avx" to "avx2"
91d928147bb0d03219fd6cc079e16fd74e232e2b tools/power/x86/intel-speed-select: Correct CLX-N frequency units
a9b2f8e2fa6c0f791f2345afb826d47c6a0f0e2c tools/power/x86/intel-speed-select: Auto mode for CLX
cd0e63706549c3e0d61f5fe48806a4528c575035 tools/power/x86/intel-speed-select: Use mailbox for CLOS_PM_QOS_CONFIG
40dee9dda37d5596ad119d3c3962ca49d3f035a5 tools/power/x86/intel-speed-select: Make CLOS frequency in MHz
21c3390d61286912cef312dc4752719142ce0d54 tools/power/x86/intel-speed-select: Use Frequency weight for CLOS
7af5a95bb752702bfc91fc513d37f1f799e6fd1f tools/power/x86/intel-speed-select: Support platform with limited Intel(R) Speed Select
de7f9d3ddc8c71a116fbdfa298a19abd8d46e696 tools/power/x86/intel-speed-select: Use core count for base-freq mask
5c14aba77874d350db8973f4c980fd92c8b1fa07 tools/power/x86/intel-speed-select: Increment version
20183ccd3e4d01d23b0a01fe9f3ee73fbae312fa tools/power/x86/intel-speed-select: Ignore missing config level
1434a3d357d656d4b11fcbdc9b6c35dc673292a0 tools/power/x86/intel-speed-select: Display TRL buckets for just base config level
16add411645cff83360086e102daa67b25f1e39a syscall_get_arch: add "struct task_struct *" argument
4d8e7055a4058ee191296699803c5090e14f0dff fsnotify: fix unlink performance regression
fbb7d9d56d167247f2eb7261038385cab1073c37 kill LOOKUP_NO_EVAL, don't bother including namei.h from audit.h
6b61aed06a3b0eb8e8d49142ddd1e101a064444d namei.h: get the comments on LOOKUP_... in sync with reality
84a2bd39405ffd5fa6d6d77e408c5b9210da98de fs/namei.c: keep track of nd->root refcount status
ce8c80c536dac9f325a051b30bf7730ee505eddc arm64: Add workaround for Cortex-A76 erratum 1286807
0f80cad3124f986d0e46c14d46b8da06d87a2bf4 arm64: Restrict ARM64_ERRATUM_1188873 mitigation to AArch32
6989303a3b2d864fd8e17d3fa3365d3e9649a598 arm64: Apply ARM64_ERRATUM_1188873 to Neoverse-N1
bc15cf701fa4875d9710f16ca4d2ce25e66ce4a0 arm64: Kconfig: Tidy up errata workaround help text
969f5ea627570e91c9d54403287ee3ed657f58fe arm64: errata: Add workaround for Cortex-A76 erratum #1463225
a5325089bd05a7b0259cc4038479d36308edbda2 arm64: Handle erratum 1418040 as a superset of erratum 1188873
05460849c3b51180d5ada3373d0449aea19075e4 arm64: errata: Hide CTR_EL0.DIC on systems affected by Neoverse-N1 #1542419
ee9d90be9ddace01b7fb126567e4b539fbe1f82f arm64: Fake the IminLine size on systems affected by Neoverse-N1 #1542419
656c21d6af5d9279dd7b51ca7a4a71008127044b powerpc/shared: Use static key to detect shared processor
c77c0a8ac4c522638a8242fcb9de9496e3cdbb2d mm/hugetlb: defer freeing of huge pages if in non-task context
d360211524bece6db9920f32c91808235290b51c iommu: set group default domain before creating direct mappings
91e6015b082b08a74e5d9d326f651e5890a93519 bpf: Emit audit messages upon successful prog load and unload
f28b1932eaae183b80bd8c7abecae167a0e5c61a RDMA/mlx5: Fix a race with mlx5_ib_update_xlt on an implicit MR
c55d8b108caa2ec1ae8dddd02cb9d3a740f7c838 net/mlx5e: Fix TXQ indices to be sequential
9cf88808ad6a0f1e958e00abd9a081295fe6da0c net/mlx5e: Fix concurrency issues between config flow and XSK
950d3af70ea89cf7ac51d734a634174013631192 net/mlx5e: Use correct enum to determine uplink port
7b65e2034fde011d090d4ec472902b71129c6cbd perf tools: Allow to link with libbpf dynamicaly
18df7577adae6c6c778bf774b3aebcacbc1fb439 efi/memreserve: deal with memreserve entries in unmapped memory
ab0eb16205b43ece4c78e2259e681ff3d645ea66 efi/memreserve: Register reservations as 'reserved' in /proc/iomem
6ef81c55a2b6584cb642917f5fdf3632ef44b670 perf session: Return error code for perf_session__new() function on failure
a81bc3102b4ffb885f34855d0133f862f915ab13 ceph: take the inode lock before acquiring cap refs
252df177113575a66fc505169a29221d7232eb1e tools arch x86: Update tools's copy of cpufeatures.h
83b50f83a96899f30c6369ef5988412fa2354ab2 Drivers: hv: vmbus: Fix harmless building warnings without CONFIG_PM_SLEEP
d8bd2d442bb2688b428ac7164e5dc6d95d4fa65b Drivers: hv: vmbus: Resume after fixing up old primary channels
b307b38962eb0f22d1aa6dcf53cb7d3c2ed5eec7 Drivers: hv: vmbus: Suspend after cleaning up hv_sock and sub channels
1f48dcf180e5422b1a633b24680dd0f5c3f540f5 Drivers: hv: vmbus: Clean up hv_sock channels by force upon suspend
877b5691f27a1aec0d9b53095a323e45c30069e2 crypto: shash - remove shash_desc::flags
ec8f24b7faaf3d4799a7c3f4c1b87f6b02778ad1 treewide: Add SPDX license identifier - Makefile/Kconfig
d84f2f5a755208da3f93e17714631485cb3da11c drivers/base/node.c: simplify unregister_memory_block_under_nodes()
2c91f8fc6c999fe10185d8ad99fda1759f662f70 mm/memory_hotplug: fix try_offline_node()
1f8d75c1b7dc62f017c542ca99e7da4a0839fb1e mm/memmap_init: update variable name in memmap_init_zone
feee6b2989165631b17ac6d4ccdbf6759254e85a mm/memory_hotplug: shrink zones when offlining memory
d33695b16a9f0b5f62aefb0a4e073509690ee533 mm/memory_hotplug: poison memmap in remove_pfn_range_from_zone()
52fb87c81f11daa7027af25fc24ac7974eb8f45a mm/memory_hotplug: cleanup __remove_pages()
7e3d3620974b743b91b1f9d0660061b1de20174c SUNRPC: Fix up calculation of client message length
af6b61d7ef58099c82d854395a0e002be6bd036c Revert "SUNRPC: Micro-optimise when the task is known not to be sleeping"
a7b1a4839ff979b4dd4fb6c1ccd31af11de9ca87 SUNRPC: Ignore queue transmission errors on successful transmission
9cfeeb576d49a7b5e643b8066ba64a55e8417c5d gve: Fixes DMA synchronization.
db96c2cb4870173ea9b08df130f1d1cc9b5dd53d gve: fix dma sync bug where not all pages synced
a95069ecb7092d03b2ea1c39ee04514fe9627540 gve: Fix the queue page list allocated pages count
960b6f4f2d2e96d5f7ffe2854e0040b46cafbd36 drm/amd/display: fix struct init in update_bounding_box
988fd6b32d07400bd66259603ac9e08c33c02a05 net/mlx5: DR, Pass table flags at creation to lower layer
aec292ee6f290920fc77907dfe1b94baa600484d net/mlx5: DR, Align dest FT action creation to API
b8853c969f406bfb682740b7646ee8b4623ee955 net/mlx5: DR, Add support for multiple destination table action
7ee3f6d2486e25d96d2309da4d53fe10a58e2b63 net/mlx5: DR, Create multiple destination action from dr_create_fte
8c39a39e28b86a4021d9be314ce01019bafa5fdc NFSv4: Fix a credential refcount leak in nfs41_check_delegation_stateid
27a30cf64a5cbe2105e4ff9613246b32d584766a NFSv4.1: Fix open stateid recovery
ad11408970df79d5f481aa9964e91f183133424c NFSv4.1: Only reap expired delegations
cc204d01262a69218b2d0db5cdea371de85871d9 SUNRPC: Dequeue the request from the receive queue while we're re-encoding
45835a63d039fc3bfb1d6c72cedaf785cd920e4a SUNRPC: Don't receive TCP data into a request buffer that has been reset
9ba828861c56a21d211d5d10f5643774b1ea330d SUNRPC: Don't try to parse incomplete RPC messages
8593e010786181df887b001824ff8f3e52e2098f SUNRPC: Fix congestion window race with disconnect
bd736ed3e2d1088d9b4050f727342e1e619c3841 SUNRPC: Don't handle errors if the bind/connect succeeded
d5711920ec6e578f51db95caa6f185f5090b865e Revert "NFSv4/flexfiles: Abort I/O early if the layout segment was invalidated"
4b93dab36f28e673725e5e6123ebfccf7697f96a xprtrdma: Add unique trace points for posting Local Invalidate WRs
a31b2f939219dd9bffdf01a45bd91f209f8cc369 xprtrdma: Connection becomes unstable after a reconnect
2ae50ad68cd79224198b525f7bd645c9da98b6ff xprtrdma: Close window between waking RPC senders and posting Receives
5c441544f045e679afd6c3c6d9f7aaf5fa5f37b0 NFSv4.x: Handle bad/dead sessions correctly in nfs41_sequence_process()
a25e3726b32c746c0098125d4c7463bb84df72bb nfsd: Ensure CLONE persists data and metadata changes to the target file
a445e940ea686fc60475564009821010eb213be3 dma-mapping: fix handling of dma-ranges for reserved memory (again)
8068df3b60373c390198f660574ea14c8098de57 mm/memory_hotplug: don't free usage map when removing a re-added early section
39e7234f00bc93613c086ae42d852d5f4147120a locking/rwsem: Fix kernel crash when spinning on RWSEM_OWNER_UNKNOWN
db4d30fbb71b47e4ecb11c4efa5d8aad4b03dfae x86/bugs: Add ITLB_MULTIHIT bug infrastructure
b8e8c8303ff28c61046a4d0f6ea99aea609a7dc0 kvm: mmu: ITLB_MULTIHIT mitigation
1aa9b9572b10529c2e64e2b8f44025d86e124308 kvm: x86: mmu: Recovery of shattered NX large pages
7f00cc8d4a51074eb0ad4c3f16c15757b1ddfb7d Documentation: Add ITLB_MULTIHIT documentation
13fb59276b47db556370bba53b5b55f3849dd8c9 kvm: x86: disable shattered huge page recovery for PREEMPT_RT.
ed69a6cb700880d052a0d085ff2e5bfc108ce238 KVM: x86/mmu: Take slots_lock when using kvm_mmu_zap_all_fast()
902ce63b337381092ff865f542e854ff3d0ebe2b driver/base/memory.c: validate memory block size early
848e19ad3c3352b6e0906f05b282a3e22c67c98f drivers/base/memory.c: drop the mem_sysfs_mutex
4fb6eabf1037cfbef90a26412492aeae5580cf0a drivers/base/memory.c: cache memory blocks in xarray to accelerate lookup
3b83b6c2e024d85b770ddb1e19a513b5d7587f6f net/mlx5e: Clear VF config when switching modes
d75f773c86a2b8b7278e2c33343b46a4024bc002 treewide: Switch printk users from %pf and %pF to %ps and %pS, respectively
471a739a47aa7d582f0cdf9d392957d04632bae2 PCI: PM: Avoid skipping bus-level PM on platforms without ACPI
7f1c62c443a453deb6eb3515e3c05650ffe0dcf0 PCI: Add pci_info_ratelimited() to ratelimit PCI separately
ec6a75ef8e33fe33f963b916fd902c52a0be33ff PCI/PM: Clear PCIe PME Status even for legacy power management
6da2f2ccfd2deb81a63fc23a505ccd72de005c39 PCI/PM: Make power management op coding style consistent
6941a0c2bdedfb729fb166091e12d06e4fce177f PCI/PM: Use PCI dev_printk() wrappers for consistency
12bcae44bf48595c71898330076576075590e15b PCI/PM: Use pci_WARN() to include device information
baef7f8e5e91f85ce7625c11370479f9f0778fae PCI/PM: Simplify pci_set_power_state()
89cdbc3546354c359558a1809133902028c57da4 PCI/PM: Remove unused pci_driver.resume_early() hook
1a1daf097e21e544dd3e7c0ff620d78a9795fbf2 PCI/PM: Remove unused pci_driver.suspend_late() hook
adfac8f6b7396b408fa9a8f40ea41112bebb980f PCI/PM: Use pci_power_up() in pci_set_power_state()
dc2256b0735d03664a92a6cb94ea4e564dfa237b PCI/PM: Fold __pci_start_power_transition() into its caller
e43f15ea2f6d6858675fa1baa5cb624f17269af0 PCI/PM: Decode D3cold power state correctly
ad9001f2f41198784b0423646450ba2cb24793a3 PCI/PM: Add missing link delays required by the PCIe spec
29b598ddb8d2d401257013c2af5e9f003bf84ec4 net/mlx5e: Move uplink rep init/cleanup code into own functions
3460c184dfb0b41118b5000ad78dd997c034b2b5 net/mlx5e: Profile specific stats groups
96b12796550d0f0a7613f03efa0140f39120946b net/mlx5e: Declare stats groups via macro
f0ff8e8c7206886a5360eee7d3f664480ed473c9 net/mlx5e: Convert stats groups array to array of group pointers
2a303f13f9cda5a8f5729ccb84b211c1ef6bed92 net/mlx5e: IPoIB, use separate stats groups
8a236b15144b29ce47f80c37bc55740a5388ecb1 net/mlx5e: Convert rep stats to mlx5e_stats_grp-based infra
8520fa57a4e934eff631883cf80744d3a84c734b net/mlx5e: Create q counters on uplink representors
7c453526dc50460c63ff28df7673570dd057c5d0 net/mlx5e: Enable all available stats for uplink reps
76f4e2da45b44bf70f61c28fcbc91668492463e0 arm64: kexec: always reset to EL2 if present
6b57cea9221b0247ad5111b348522625e489a8e4 IB/core: Let IB core distribute cache update events
b587bdaf5f820cf7dac2c1b351db97bf98e1f427 devlink: Change devlink health locking mechanism
8cb4ec44de42b99b92399b4d1daf3dc430ed0186 netfilter: nft_tproxy: Fix port selector on Big Endian
6c8991f41546c3c472503dff1ea9daaddf9331c2 net: ipv6_stub: use ip6_dst_lookup_flow instead of ip6_dst_lookup
a0fd72d2c95b56c78feec0867f2077b5ff5991e6 drm/mgag200: Pin displayed cursor BO to video memory
cf578c8c8e0b1fcd7c7de649effaf2c7625433c5 drm/mgag200: Set cursor scanout address to correct BO
a9c342ab77ab6e8ab662105335ae1e44e01271d4 drm/mgag200: Don't unpin the current cursor image's buffer.
1f503443e7df8dc8366608b4d810ce2d6669827c mm/sparse.c: reset section's mem_map when fully deactivated
50a5065f4474c2dbc1f7462b45a32d33d7b48d88 drm/i915: Fix detection for a CMP-V PCH
3a8a5aba142a44eaeba0cb0ec1b4a8f177b5e59a drm/mgag200: Extract device type from flags
d6d437d97d54c85a1a93967b2745e31dff03365a drm/mgag200: Store flags from PCI driver data in device structure
1591fadf857cdbaf2baa55e421af99a61354713c drm/mgag200: Add workaround for HW that does not support 'startadd'
4adf0b49eea926a55fd956ef7d86750f771435ff drm/mgag200: Flag all G200 SE A machines as broken wrt <startadd>
310d35771ee9040f5744109fc277206ad96ba253 drm/nouveau/kms/nv50-: Call outp_atomic_check_view() before handling PBN
ac2d9275f371346922b31a388bbaa6a54f1154a4 drm/nouveau/kms/nv50-: Store the bpc we're using in nv50_head_atom
ae5769d4670982bc483885b120b557a9ffd57527 drm/nouveau/kms/nv50-: Limit MST BPC to 8
0e29be9e0bbbf9cb3d718c5c48382b1420ce0749 drm/amd/display: re-enable wait in pipelock, but add timeout
ee9ea6d88593509f2bbfb8bd40482b21b6a7502c drm/amd/display: add default clocks if not able to fetch them
dab5ef2722cde781ff3f6b3542d673ed174359b8 drm/amdgpu: initialize vm_inv_eng0_sem for gfxhub and mmhub
a2d15ed733365ba2e0e3eb55a83c7a493eaaaa2c drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number
1daa2bfa17aa5ace20bb02509cd3d2c2c0afc642 drm/amdgpu: add new member in amdgpu_device for vmhub counts per asic chip
3ff985485b29693376bb470a40b7aba4394a189b drm/amdgpu: Export function to flush TLB of specific vm hub
4ed8a03740d0ce092563c8fcb76d2c28da4675cd drm/amdgpu: invalidate mmhub semaphore workaround in gmc9/gmc10
387d40fd6fb64819ae67343a4eb3776ded7932d6 drm/amdgpu/gfx10: explicitly wait for cp idle after halt/unhalt
c25edaaf75af4e291e63f58f17b5f5b499dd6e38 drm/amdgpu/gfx10: re-init clear state buffer after gpu reset
418899d6157516fb0b7acad5e37653e60b285852 drm/amdgpu: avoid using invalidate semaphore for picasso
90f6452ca58d436de4f69b423ecd75a109aa9766 drm/amdgpu: add invalidate semaphore limit for SRIOV and picasso in gmc9
d72cf01f410aa09868d98b672f3f92328c96b32d drm/mipi-dbi: fix a loop in debugfs code
c7581a414d28413c1dd6d116d44859b5a52e0950 drm: Use EOPNOTSUPP, not ENOTSUPP
3084cf46cf8110826a42de8c8ef30e8fa48974c2 drm/ttm: return -EBUSY on pipelining with no_gpu_wait (v2)
616f5b65f1c02d3d6ae370644670d14c57de2fd8 drm/amd/display: Handle virtual signal type in disable_link()
2fef0faa1cdc5d41ce3ef83f7b8f7e7ecb02d700 drm/amd/display: Set number of pipes to 1 if the second pipe was disabled
068ad870bbd8f4f2c5b2fd4977a4f3330c9988f4 drm/amd/powerplay: A workaround to GPU RESET on APU
361c61f47a1cd8df26a08ddbb0cbdad72bb1776d drm/amd/display: load iram for abm 2.3
2ad0cdf9e2e9e079af34af681863fa638f2ee212 drm/amd/display: set minimum abm backlight level
40a9592a26608e16f7545a068ea4165e1869f629 drm/amdkfd: Fix MQD size calculation
df3b7e32ed459a5348f7b408a9b8142b7358fde8 drm/amd/display: refactor Device ID for external chips
566b4252fe9da9582dde008c5e9c3eb7c136e348 drm/amd/display: add new active dongle to existent w/a
edb922b022c0c94805c4ffad202b3edff83d76f0 drm/amd/display: Program DWB watermarks from correct state
588b9828f0744ca13555c4a35cd0251ac8ad8ad2 drm: Don't free jobs in wait_event_interruptible()
952f6c4b5d72d40f93f3deb61239290b357d434e drm/amd/display: correctly populate dpp refclk in fpga
a28fda312a9fabdf0e5f5652449d6197c9fb0a90 drm/amdgpu: Avoid accidental thread reactivation.
a9ae8731e6e52829a935d81a65d7f925cb95dbac drm/amdgpu: Call find_vma under mmap_sem
fa11d3c9425354c4b47e40f34d29c5b0949fe4ce drm/amd/display: Change the delay time before enabling FEC
949ffc8b3631ea0192a298109fa583b2f3a39c8f drm/amd/display: Reset steer fifo before unblanking the stream
64d17f25dcad518461ccf0c260544e1e379c5b35 drm/nouveau: Fix drm-core using atomic code-paths on pre-nv50 hardware
3d1890ef8023e61934e070021b06cc9f417260c0 drm/nouveau/kms/nv50-: fix panel scaling
fa7df7516e32807cfc5360f41de8c2cc34e00046 drm/amdgpu/smu: add metrics table lock
885d386540129e5bf5eec0c10dde3dd1380ef1f8 drm/amdgpu/smu: add metrics table lock for navi (v2)
0371e2fba42158cb55f6d2c8cf4c9c0821677c0c drm/amdgpu/smu: add metrics table lock for vega20 (v2)
1cd21a7c5679015352e8a6f46813aced51d71bb8 drm/i915: Add Wa_1407352427:icl,ehl
bc8a76a152c5f9ef3b48104154a65a68a8b76946 drm/i915/gen9: Clear residual context state on context switch
de7b45babd9be25138ff5e4a0c34eefffbb226ff drm/amdgpu: cleanup creating BOs at fixed location (v2)
5f6a556f98de425fcb7928456839a06f02156633 drm/amdgpu/discovery: reserve discovery data at the top of VRAM
aaff8b448d2ab8c0ccc8591c997663c54b074293 drm/amdgpu: enable gfxoff for raven1 refresh
5d593d682ffa533615f81a0680d4aa18dbeb97f7 drm/amd/display: Reorder detect_edp_sink_caps before link settings read.
ba16a48af797db124ac100417f9229b1650ce1fb drm/i915: Fix pid leak with banned clients
488603b815a7514c7009e6fc339d74ed4a30f343 sched/core: Don't skip remote tick for idle CPUs
c1948390d78b5183ee9b7dd831efd7f6ac496ab0 net/mlx5: Fix deadlock in fs_core
742db30c4ee6cd28142e83e154b5271f95a2c67a drm/nouveau: Add HD-audio component notifier support
5bb88d07948b6779cb783ec0f08b4c1474d592dd drm/nouveau/kms/gv100-: move window ownership setup into modesetting path
137c4ba7163ad9d5696b9fde78b1c0898a9c115b drm/nouveau/kms/gv100-: avoid sending a core update until the first modeset
20a1452c35425b2cef76f21f8395ef069dfddfa9 netfilter: nf_tables: add nft_setelem_parse_key()
7b225d0b5c6dda5fefab578175f210c6fc7e389a netfilter: nf_tables: add NFTA_SET_ELEM_KEY_END attribute
f3a2181e16f1dcbf5446ed43f6b5d9f56c459f85 netfilter: nf_tables: Support for sets with multiple ranged fields
2092767168f0681aa03727448b801600a364c013 bitmap: Introduce bitmap_cut(): cut bits and shift remaining
611973c1e06faef31d034deeb3ae7b7960b1f043 selftests: netfilter: Introduce tests for sets with range concatenation
6441fa6178f5456d1d4b512c08798888f99db185 KVM: x86: avoid incorrect writes to host MSR_IA32_SPEC_CTRL
31de3d2500e49e9f44fdda1830a37f4d9735bcdd x86/kvm/hyper-v: move VMX controls sanitization out of nested_enable_evmcs()
a83502314ce303c6341b249c41121759c7477ba1 x86/kvm/hyper-v: don't allow to turn on unsupported VMX controls for nested guests
beb205dd67aaa4315dedf5c40b47c6e9dee5a469 RDMA/siw: Fix setting active_mtu attribute
cfff75d8973ae4a90b3df3ae7fbba1ce9af9c8f0 selinux: reorder hooks to make runtime disable less broken
f9b69d7f62796b33657c98e0d3ca3be763f70fa4 bnxt_en: Fix suspend/resume path on 57500 chips
0a3f4e4f342c070312d799f7998d2f916c502c6e bnxt_en: Extend ETHTOOL_RESET to hot reset driver.
a2b31e27f6269af8bbda4be2199c2af7c4dcb5a3 bnxt_en: Add a warning message for driver initiated reset
05069dd4c577f9b143dfd243d55834333c4470c5 bnxt_en: Return proper error code for non-existent NVM variable
2e882468fce263afef4a77ea4fe40808baaddae7 bnxt_en: Combine 2 functions calling the same HWRM_DRV_RGTR fw command.
f92335d830059f3f9db950f0af49405d287924d5 bnxt_en: Send FUNC_RESOURCE_QCAPS command in bnxt_resume()
bdb3860236b3ec8bb0f55ddef6d62666a8b3b23e bnxt_en: Do driver unregister cleanup in bnxt_init_one() failure path.
937f188c1f4f89b3fa93ba31fc8587dc1fb14a22 bnxt_en: Fix the logic that creates the health reporters.
7e334fc8003c7a38372cc98e7be6082670a47d29 bnxt_en: Add missing devlink health reporters for VFs.
8280b38e01f71e0f89389ccad3fa43b79e57c604 bnxt_en: Fix bp->fw_health allocation and free logic.
325f85f37e5b35807d86185bdf2c64d2980c44ba bnxt_en: Free context memory in the open path if firmware has been reset.
d407302895d3f3ca3a333c711744a95e0b1b0150 bnxt_en: Fix logic that disables Bus Master during firmware reset.
c16d4ee0e397163fe7ceac281eaa952e63fadec7 bnxt_en: Refactor logic to re-enable SRIOV after firmware reset detected.
12de2eadf87825c3990c1aa68b5e93101ca2f043 bnxt_en: Fix RDMA driver failure with SRIOV after firmware reset.
b9a4b9d084d978f80eb9210727c81804588b42ff arm64: debug: Don't propagate UNKNOWN FAR into si_code for debug signals
52c6d145da15a9a9cea14678be307c127ccc6ef5 arm64: debug: Remove unused return value from do_debug_exception()
04d26e7b159a396372646a480f4caa166d1b6720 tcp: fix rejected syncookies due to stale timestamps
cb44a08f8647fd2e8db5cc9ac27cd8355fa392d8 tcp: tighten acceptance of ACKs not matching a child socket
721c8dafad26ccfa90ff659ee19755e3377b829d tcp: Protect accesses to .ts_recent_stamp with {READ,WRITE}_ONCE()
4e4362d2bf2a49ff44dbbc9585207977ca3d71d0 xfrm: support output_mark for offload ESP packets
ba5f6a8617f4cd8e77da0a190b9647065014eade tipc: update replicast capability for broadcast send link
abc9b4e0549b93fdaff56e9532bc49a2d7b04955 tipc: fix retrans failure due to wrong destination
031097d9e079e40dce401031d1012e83d80eaf01 net: skmsg: fix TLS 1.3 crash with full sk_msg
7e81a35302066c5a00b4c72d83e3ea4cad6eeb5b bpf: Sockmap, ensure sock lock held during tear down
58c8db929db1c1d785a6f5d8f8692e5dbcc35e84 net, sk_msg: Don't check if sock is locked when tearing down psock
33bfe20dd7117dd81fd896a53f743a233e1ad64f bpf: Sockmap/tls, push write_space updates through ulp updates
55667441c84fa5e0911a0aac44fb059c15ba6da2 net/flow_dissector: switch to siphash
59eb87cb52c9f7164804bc8639c4d03ba9b0c169 net: sched: prevent duplicate flower rules from tcf_proto destroy race
7976a11b30929871a4c84c3c406d7681a3dbcc10 net: use helpers to change sk_ack_backlog
040b5cfbcefa263ccf2c118c4938308606bb7ed8 Fixed updating of ethertype in function skb_mpls_pop
8ffb055beae58574d3e77b4bf9d4d15eace1ca27 cls_flower: Fix the behavior using port ranges with hw-offload
d04ac224b1688f005a84f764cfe29844f8e9da08 net: Fixed updating of ethertype in skb_mpls_push()
dbad3408896c3c5722ec9cda065468b3df16c5bf net: core: rename indirect block ingress cb function
25a443f74bcff2c4d506a39eae62fc15ad7c618a net: sched: allow indirect blocks to bind to clsact in TC
bb3d0b8bf5be61ab1d6f472c43cbf34de17e796b net_sched: sch_fq: properly set sk->sk_pacing_status
2e24cd755552350b94a7617617c6877b8cbcb701 net_sched: fix ops->bind_class() implementations
760d228e322e99cdf6d81b4b60a268b8f13cf67a net_sched: walk through all child classes in tc_bind_tclass()
59fb9b62fb6c929a756563152a89f39b07cf8893 flow_dissector: Fix to use new variables for port ranges in bpf hook
501a90c945103e8627406763dac418f20f3837b2 inet: protect against too small mtu values.
a5a7daa52edb5197a3b696afee13ef174dc2e993 tcp: fix data-race in tcp_recvmsg()
db7ffee6f3eb3683cdcaeddecc0a630a14546fe3 tcp: clear tp->data_segs{in|out} in tcp_disconnect()
784f8344de750a41344f4bbbebb8507a730fc99c tcp: clear tp->segs_{in|out} in tcp_disconnect()
2beb6d2901a3f73106485d560c49981144aeacb1 ipv6/addrconf: only check invalid header values when NETLINK_F_STRICT_CHK is set
97b2512ad000a409b4073dd1a71e4157d76675cb nvme: prevent warning triggered by nvme_stop_keep_alive
bab0c318ba3da32483da8aad37b9ef98fd8edafb KVM: x86: do not reset microcode version on INIT or RESET
7560cc3ca7d9d11555f80c830544e463fcdb28b8 iommu/vt-d: Fix lock inversion between iommu->lock and device_domain_lock
bf708cfb2f4811d1948a88c41ab96587e84ad344 iommu/vt-d: Call __dmar_remove_one_dev_info with valid pointer
9235cb13d7d17baba0b3a9277381258361e95c16 iommu/vt-d: Allow devices with RMRRs to use identity domain
1ee0186b9a128a872887e16e2d1520ea37a95dc4 iommu/vt-d: Refactor find_domain() helper
1d4615978f525b769990a4a4ef22fb1b9a04cdf1 iommu/vt-d: Add attach_deferred() helper
034d98cc0cdcde2415c6f598fa9125e3eaa02569 iommu/vt-d: Move deferred device attachment into helper function
a11bfde9c77df1fd350ea27169ab921f511bf5d0 iommu/vt-d: Do deferred attachment in iommu_need_mapping()
96d170f3b1a607612caf3618c534d5c64fc2d61b iommu/vt-d: Remove deferred_attach_domain()
b850a82114df9b0ec1d191dc64eed1f20a772e0f net/mlx5: DR, Enable counter on non-fwd-dest objects
13a7e459a41a56d788ab33d825c6205379bbb711 net/mlx5: DR, Handle reformat capability over sw-steering tables
0b382546d863f2f09eecaccda95a0b4bfd148f92 PCI: pciehp: Add DMI table for in-band presence detection disabled
e47304232b373362228bf233f17bd12b11c9aafc bpf: Fix cgroup local storage prog tracking
e10360f815ca6367357b2c2cfef17fc663e50f7b bpf: cgroup: prevent out-of-order release of cgroup bpf
580205dd4fe800b1e95be8b6df9e2991f975a8ad selftests/bpf: Fix test_attach_probe
d3a3aa0c59e83d8c13a758128b10dd459ce0d866 libbpf: Fix off-by-one error in ELF sanity check
7c3977d1e80401b1a25efded698b05d60ee26e31 libbpf: Fix sym->st_value print on 32-bit arches
679152d3a32e305c213f83160c328c37566ae8bc libbpf: Fix printf compilation warnings on ppc64le arch
6803ee25f0ead1e836808acb14396bb9a9849113 libbpf: Extract and generalize CPU mask parsing logic
12dd14b230b3c742b80272ecb8a83cdf824625ca libbpf: Add missing newline in opts validation macro
35b9211c0a2427e8f39e534f442f43804fc8d5ca libbpf: Fix realloc usage in bpf_core_find_cands
c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3 page_pool: do not release pool until inflight == 0.
86c76c09898332143be365c702cf8d586ed4ed21 xdp: obtain the mem_id mutex before trying to remove an entry.
2e012c74823629d9db27963c79caa3f5b2010746 net: bpf: Don't leak time wait and request sockets
db6a5018b6e008c1d69c6628cdaa9541b8e70940 bpf, sockmap: Don't sleep while holding RCU lock on tear-down
766f2a59323a7881613af577718bb46cc1267b1f selftests/bpf: revamp test_progs to allow more control
8160bae21fc29de0ec795abcd209cdd7cc144e8e selftests/bpf: add test selectors by number and name to test_progs
61098e89e6c80d6a141774ef8ee41e38471b069e selftests/bpf: prevent headers to be compiled as C code
329e38f76cc2a77085264ce6e0dbe902c33fd7a3 selftest/bpf: centralize libbpf logging management for test_progs
0ff97e56c0986ea6633083c3487d9231bbbd881b selftests/bpf: abstract away test log output
3a516a0a3a7b21ec038db83ffb0d3cddc42514c9 selftests/bpf: add sub-tests support for test_progs
01340e31915bc73bf33a8f912ff1b74d514b8d79 libbpf: Add BPF-side definitions of supported field relocation kinds
e00aca65e646da08f8dce31c9b89f11dab76198c libbpf: Make DECLARE_LIBBPF_OPTS macro strictly a variable declaration
36b5d471135c3ef5f4922aa23f6566b6a07227f7 selftests/bpf: samples/bpf: Split off legacy stuff from bpf_helpers.h
bf8ff0f8cfd73e850c01b453ddb79609bd83279c selftests/bpf: fix clearing buffered output between tests/subtests
92b4f9d150593a7a78d9872c2d5dc05ffae4521b scsi: megaraid_sas: fixup MSIx interrupt setup during resume
f287d3d19769b1d22cba4e51fa0487f2697713c9 drm/nouveau/kms/gv100-: Re-set LUT after clearing for modesets
7a47281439ba00b11fc098f36695522184ce5a82 net: sched: lock action when translating it to flow_action infra
107f2d50916500985b9fffd7c77d8c14809f9802 net: sched: refactor ct action helpers to require tcf_lock
b15e7a6e8d31d6abe2d98929d60ad3a0e6ae4de1 net: sched: don't take rtnl lock during flow_action setup
0954df70fba743d8cdaa09ccf6ba8e4ad09628de selftests: nft_concat_range: Add test for reported add/flush/add issue
5ccf2027bb9362f8c4909e980e3856451a55dcb2 drm/i915: Check backlight type while doing eDP backlight initializaiton
fde7266fb2f6fff2a7fe861474bf198ef0f2449f drm/i915: Fix eDP DPCD aux max backlight calculations
9ac7d53d70a2b4f43360e3aa0f14a2514339328f drm/i915: Auto detect DPCD backlight support by default
0883ce8146ed6074c76399f4e70dbed788582e12 drm/dp: Introduce EDID-based quirks
17f5d57915be108b4967b7770c9ea87c493b30a7 drm/i915: Force DPCD backlight mode on X1 Extreme 2nd Gen 4K AMOLED panel
ba518bbd3f3c265419fa8c3702940cb7c642c6a5 drm/i915: Force DPCD backlight mode for some Dell CML 2020 panels
c780e86dd48ef6467a1146cf7d0fe1e05a635039 blktrace: Protect q->blk_trace with RCU
1e62e222db2e0dc7af0a89c225311d319c5d1c4f net/mlx5: E-Switch, Use vport metadata matching only when mandatory
20f7b37ffc7da5beb9c98382ca70b918f2282060 net/mlx5e: Introduce root ft concept for representors netdevs
6783e8b29f636383af293a55336f036bc7ad5619 net/mlx5e: Init ethtool steering for representors
a47970ed74a535b1accb4bc73643fd5a93993c3e kvm/svm: PKU not currently supported
3e8cb8b2eaeb22f540f1cbc00cbb594047b7ba89 fuse: fix stack use after return
383de108157c881074f32914b61125e299820bd2 net/mlx5e: Don't clear the whole vf config when switching modes
d1d17a359ce6901545c075d7401c10179d9cedfd esp: remove the skb from the chain when it's enqueued in cryptd_wq
e59a2508d90f393c8423716349db315e32b67559 drm/bochs: deinit bugfix
cd758a9b57ee85f0733c759e60f42b969c81f27b KVM: PPC: Book3S HV: Use __gfn_to_pfn_memslot in HPT page fault handler

__CHANGES NOT IN UPSTREAM________________
Apply debranding changes'
gfs2: fix O_EXCL|O_CREAT handling on cold dcache
powerpc/nvdimm: set target_node properly
Remove the unsupported check for Cooper Lake
arm64: select CPUMASK_OFFSTACK if NUMA
arm64: tlb: skip tlbi broadcast
nbd: fix stack corruption in nbd_check_sock_type()
libbpf: avoid usage of __builtin_preserve_field_info
Mark Comet Lake-S as supported
rebuild, due infrastructure issues last kernel build wasn't signed properly [1807216]"
PCI: pciehp: Add support for disabling in-band presence
redhat: kabi: convert incorrect use of RH_KABI_EXTEND
redhat: kabi: macros for intentional kABI breakage
redhat: kabi: bpf: remove misleading comment
redhat: kabi: introduce RH_KABI_HIDE_INCLUDE and RH_KABI_FAKE_INCLUDE
nvme: nvme_keep_alive_end_io fixup setting comp_seen flag
iommu: don't change default domain if already set by quirk
Fix bugs introduced by netlink strict checking backport
netfilter: conntrack: Request module if l3proto is unknown
Revert: f5bcc37b81fc ("namei: allow restricted O_CREAT of FIFOs and regular files")
Revert: 433cbb6cf0ae ("quota: honor quota type in Q_XGETQSTATcalls")
Mark AMD Ryzen 7 as supported
Mark AMD Ryzen 5 as supported
memcg: Add preemption point in accumulate_memcg_tree()
ALSA: Use the legacy HDA driver as default for Intel DSP platforms
nvme: nvme_mpath_init remove multipath check
Mark certain versions of Comet Lake as supported
s390/dasd: Disable Thin Provisioning to prevent data loss
Merge tag 'nfs-rdma-for-5.1-1' of git://git.linux-nfs.org/projects/anna/linux-nfs
revert "ice: mark driver as tech-preview"
igc: add additional delay during phy hw reset
bridge: fix regression in br_mdb_fill_info()
virtiofs: Check contents of options string
admin guide/pm: Admin guide for intel-speed-select
x86: isst: Use dev_get_drvdata
sk_buff: fix skb_ext_put() and skb_ext_reset() calls
wireless: Fix Kconfig indentation
export arc4 defines
big.little: fix refcount leak
menu: Drop redundant comparison
menu: Fix white space
devres: introduce devm_release_action()
crash_core: Make S390 share the same crashkernel=auto reservation policy as X86_64
Do not output deprecated warning for hwmon_device_register()
kvm: untaint kernel for tech-preview when using nested VMX
cleanup: Remove .rej files
revert "sunrpc: Fix up task signalling"
Fix memcpy_mcsafe_64.S link on selftests
netfilter: nf_tables: Add missing nft_tproxy Makefile line
mpt3sas: support target smid for task
revert "be2net: Disable queue dump in be_tx_timeout handler"
locking/lockdep: Rename lockdep_info() to lockdep_init()
kconfig: disable io_uring support
perf: Hook up new events
Add comment for x86 processor OS version support
kvm: svm: taint module and print taint message iff nested is enabled
rh_features: move rh_features entry to sys/kernel
core/skmsg: Delete an unnecessary check before the function call "consume_skb"
TLS: fix stat counters description
add TLS offload documentation
tls: RSTify the ktls documentation
xdp: increase kABI version
selftests: bpf: disable test_seg6_loop test
networking: switchdev: Update port parent ID section
DRM Backport 5.2 -> 5.3
DRM Backport 5.1 -> 5.2
add show_fdinfo handler
Remove unused sync_dump()
amd: Use pr_fmt()
vsc8531: add two additional LED modes for VSC8584
hpwdt: Reflect changes
hpwdt: Have core ping watchdog
hpwdt: Stop hpwdt on unregister
perf vendor events arm64: Remove wildcard
redhat: perf kABI-check failure fix
hmm: fix utf8 .
rhel: cpufreq: switch printk users from pf and pF to ps and pS, respectively
scmi: Register an Energy Model
scpi: Register an Energy Model
dt: Register an Energy Model
selftests/bpf: test_tc_tunnel: skip unsupported tests
sync bpf.h
update uapi/linux/bpf.h
sched: use new symbol for TC kABI version
use flow block API
ebpf: record usage of flow dissector
rh_features: convert to atomic allocation
networking: fix af_xdp.rst Sphinx warnings
redhat: rh_kabi: introduce RH_KABI_EXTEND_WITH_SIZE
tipc: disallow enabling of loopback interface bearer
s390/qeth: fix xmit_more support
revert "gve: account for lack of netdev_xmit_more() definition (RHEL-only)"
ixgbevf: Bump version for RHEL 8.2.0
qla2xxx: Update driver version
qla2xxx: Fix conflict_port check for NULL
Bump version for RHEL 8.2.0
acpi:ipmi: Convert ipmi_user_t to struct ipmi_user 0001-x86-smp-fix-non-SMP-broken-build-due-to-redefinition.patch brew_job bzlist bzlist-v2 run.sh testing_desc v4-notes v5-notes
stacktrace: Keep stack_trace structure and remove snprint_stack_trace()
ALSA: ASoC/SOF - enable SND_SOC_SOF_HDA_COMMON_HDMI_CODEC
RDMA/siw: Mark Software iWARP Driver as tech-preview
bpf: remove leftovers after v5.0 update
cxgb4: RHEL-only disable device dump
qla2xxx: call dma_free_coherent with correct size in all cases in qla24xx_sp_unmap
exit from RHEL 8.2 early ystream mode
locking/rwsem: Add rwsem_init.c to keep __init_rwsem() kABI
locking/rwsem: Revert "locking/rwsem: Add missing ACQUIRE to read_slowpath ..."
RDMA/cxgb4: Sort SRQ ops alphabetically
gve: account for lack of netdev_xmit_more() definition (RHEL-only)
HID: intel-ish-hid: Replace GPLv2 boilerplate/reference with SPDX - rule 288
HID: intel-ish-hid: Add SPDX license identifier - Makefile/Kconfig
HID: intel-ish-hid: prefix header search paths with $(srctree)/
Revert "Revert "sunrpc: Ensure we always close the socket after a connection shuts down""
thunderbolt: shash - remove shash_desc::flags
powerpc/opalcore: enable CONFIG_OPAL_CORE for FADUMP
ALSA: ASoC: add soc-dai.c
PCI: PM: Skip devices in D0 for
block: initialize the write priority
nvme: return error from
lightnvm: simplify geometry
s390/setup: Fix kernel lock down for s390
redhat: Fix error messages during build of zfcpdump kernel
fix package summary and description for some kernel subpackages
arm64: disable improved unwind tables
drivers: tap.c: fix wrong backport causing WARN_ON_ONCE(1) in skb_flow_dissect()
