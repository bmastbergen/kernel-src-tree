arm64: Fake the IminLine size on systems affected by Neoverse-N1 #1542419

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author James Morse <james.morse@arm.com>
commit ee9d90be9ddace01b7fb126567e4b539fbe1f82f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/ee9d90be.failed

Systems affected by Neoverse-N1 #1542419 support DIC so do not need to
perform icache maintenance once new instructions are cleaned to the PoU.
For the errata workaround, the kernel hides DIC from user-space, so that
the unnecessary cache maintenance can be trapped by firmware.

To reduce the number of traps, produce a fake IminLine value based on
PAGE_SIZE.

	Signed-off-by: James Morse <james.morse@arm.com>
	Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit ee9d90be9ddace01b7fb126567e4b539fbe1f82f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/traps.c
diff --cc arch/arm64/kernel/traps.c
index 6da589ed3e5a,4e3e9d9c8151..000000000000
--- a/arch/arm64/kernel/traps.c
+++ b/arch/arm64/kernel/traps.c
@@@ -485,6 -470,15 +485,18 @@@ static void ctr_read_handler(unsigned i
  	int rt = ESR_ELx_SYS64_ISS_RT(esr);
  	unsigned long val = arm64_ftr_reg_user_value(&arm64_ftr_reg_ctrel0);
  
++<<<<<<< HEAD
++=======
+ 	if (cpus_have_const_cap(ARM64_WORKAROUND_1542419)) {
+ 		/* Hide DIC so that we can trap the unnecessary maintenance...*/
+ 		val &= ~BIT(CTR_DIC_SHIFT);
+ 
+ 		/* ... and fake IminLine to reduce the number of traps. */
+ 		val &= ~CTR_IMINLINE_MASK;
+ 		val |= (PAGE_SHIFT - 2) & CTR_IMINLINE_MASK;
+ 	}
+ 
++>>>>>>> ee9d90be9dda (arm64: Fake the IminLine size on systems affected by Neoverse-N1 #1542419)
  	pt_regs_write_reg(regs, rt, val);
  
  	arm64_skip_faulting_instruction(regs, AARCH64_INSN_SIZE);
diff --git a/arch/arm64/include/asm/cache.h b/arch/arm64/include/asm/cache.h
index 8964157198c9..ac0f6ccffcea 100644
--- a/arch/arm64/include/asm/cache.h
+++ b/arch/arm64/include/asm/cache.h
@@ -22,6 +22,7 @@
 #define CTR_L1IP_MASK		3
 #define CTR_DMINLINE_SHIFT	16
 #define CTR_IMINLINE_SHIFT	0
+#define CTR_IMINLINE_MASK	0xf
 #define CTR_ERG_SHIFT		20
 #define CTR_CWG_SHIFT		24
 #define CTR_CWG_MASK		15
@@ -29,7 +30,7 @@
 #define CTR_DIC_SHIFT		29
 
 #define CTR_CACHE_MINLINE_MASK	\
-	(0xf << CTR_DMINLINE_SHIFT | 0xf << CTR_IMINLINE_SHIFT)
+	(0xf << CTR_DMINLINE_SHIFT | CTR_IMINLINE_MASK << CTR_IMINLINE_SHIFT)
 
 #define CTR_L1IP(ctr)		(((ctr) >> CTR_L1IP_SHIFT) & CTR_L1IP_MASK)
 
* Unmerged path arch/arm64/kernel/traps.c
