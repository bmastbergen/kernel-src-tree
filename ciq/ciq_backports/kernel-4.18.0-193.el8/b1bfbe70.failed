mt76: dma: move mt76x02_init_{tx,rx}_queue in mt76 module

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mt76: dma: move mt76x02_init_{tx, rx}_queue in mt76 module (Jarod Wilson) [1776606]
Rebuild_FUZZ: 99.13%
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit b1bfbe704f8f2466a8e1bba7c8ecef1d41b30b96
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/b1bfbe70.failed

Move mt76x02_init_tx_queue and mt76x02_init_rx_queue in mt76
module in order to be reused adding support for mt7603 driver
and remove duplicated code.
Squash mt76x02_init_tx_queue and mt76x02_init_rx_queue in
mt76_dma_alloc_queue

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit b1bfbe704f8f2466a8e1bba7c8ecef1d41b30b96)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
index 617934565818,531779d8856e..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
@@@ -68,61 -152,16 +68,70 @@@ static void mt76x02_pre_tbtt_tasklet(un
  	spin_unlock_bh(&q->lock);
  }
  
 +static void mt76x02e_pre_tbtt_enable(struct mt76x02_dev *dev, bool en)
 +{
 +	if (en)
 +		tasklet_enable(&dev->mt76.pre_tbtt_tasklet);
 +	else
 +		tasklet_disable(&dev->mt76.pre_tbtt_tasklet);
 +}
 +
 +static void mt76x02e_beacon_enable(struct mt76x02_dev *dev, bool en)
 +{
 +	mt76_rmw_field(dev, MT_INT_TIMER_EN, MT_INT_TIMER_EN_PRE_TBTT_EN, en);
 +	if (en)
 +		mt76x02_irq_enable(dev, MT_INT_PRE_TBTT | MT_INT_TBTT);
 +	else
 +		mt76x02_irq_disable(dev, MT_INT_PRE_TBTT | MT_INT_TBTT);
 +}
 +
 +void mt76x02e_init_beacon_config(struct mt76x02_dev *dev)
 +{
 +	static const struct mt76x02_beacon_ops beacon_ops = {
 +		.nslots = 8,
 +		.slot_size = 1024,
 +		.pre_tbtt_enable = mt76x02e_pre_tbtt_enable,
 +		.beacon_enable = mt76x02e_beacon_enable,
 +	};
 +
 +	dev->beacon_ops = &beacon_ops;
 +
 +	/* Fire a pre-TBTT interrupt 8 ms before TBTT */
 +	mt76_rmw_field(dev, MT_INT_TIMER_CFG, MT_INT_TIMER_CFG_PRE_TBTT, 8 << 4);
 +	mt76_rmw_field(dev, MT_INT_TIMER_CFG, MT_INT_TIMER_CFG_GP_TIMER,
 +		       MT_DFS_GP_INTERVAL);
 +	mt76_wr(dev, MT_INT_TIMER_EN, 0);
 +
 +	mt76x02_init_beacon_config(dev);
 +}
 +EXPORT_SYMBOL_GPL(mt76x02e_init_beacon_config);
 +
  static int
 -mt76x02_init_tx_queue(struct mt76x02_dev *dev, struct mt76_queue *q,
 +mt76x02_init_tx_queue(struct mt76x02_dev *dev, struct mt76_sw_queue *q,
  		      int idx, int n_desc)
  {
++<<<<<<< HEAD
 +	struct mt76_queue *hwq;
 +	int err;
 +
 +	hwq = devm_kzalloc(dev->mt76.dev, sizeof(*hwq), GFP_KERNEL);
 +	if (!hwq)
 +		return -ENOMEM;
 +
 +	err = mt76_queue_alloc(dev, hwq, idx, n_desc, 0, MT_TX_RING_BASE);
 +	if (err < 0)
 +		return err;
 +
 +	INIT_LIST_HEAD(&q->swq);
 +	q->q = hwq;
++=======
+ 	int err;
+ 
+ 	err = mt76_queue_alloc(dev, q, idx, n_desc, 0,
+ 			       MT_TX_RING_BASE);
+ 	if (err < 0)
+ 		return err;
++>>>>>>> b1bfbe704f8f (mt76: dma: move mt76x02_init_{tx,rx}_queue in mt76 module)
  
  	mt76x02_irq_enable(dev, MT_INT_TX_DONE(idx));
  
diff --git a/drivers/net/wireless/mediatek/mt76/dma.c b/drivers/net/wireless/mediatek/mt76/dma.c
index 4381155375e1..0305f2b8c23d 100644
--- a/drivers/net/wireless/mediatek/mt76/dma.c
+++ b/drivers/net/wireless/mediatek/mt76/dma.c
@@ -33,6 +33,11 @@ mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q,
 	q->buf_size = bufsize;
 	q->hw_idx = idx;
 
+	q->regs = dev->mmio.regs + ring_base + idx * MT_RING_SIZE;
+	q->ndesc = n_desc;
+	q->buf_size = bufsize;
+	q->hw_idx = idx;
+
 	size = q->ndesc * sizeof(struct mt76_desc);
 	q->desc = dmam_alloc_coherent(dev->dev, size, &q->desc_dma, GFP_KERNEL);
 	if (!q->desc)
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/dma.c b/drivers/net/wireless/mediatek/mt76/mt7603/dma.c
index b3ae0aaea62a..4606b539190f 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/dma.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/dma.c
@@ -8,15 +8,12 @@ static int
 mt7603_init_tx_queue(struct mt7603_dev *dev, struct mt76_queue *q,
 		     int idx, int n_desc)
 {
-	int ret;
-
-	q->hw_idx = idx;
-	q->regs = dev->mt76.mmio.regs + MT_TX_RING_BASE + idx * MT_RING_SIZE;
-	q->ndesc = n_desc;
+	int err;
 
-	ret = mt76_queue_alloc(dev, q);
-	if (ret)
-		return ret;
+	err = mt76_queue_alloc(dev, q, idx, n_desc, 0,
+			       MT_TX_RING_BASE);
+	if (err < 0)
+		return err;
 
 	mt7603_irq_enable(dev, MT_INT_TX_DONE(idx));
 
@@ -119,15 +116,12 @@ static int
 mt7603_init_rx_queue(struct mt7603_dev *dev, struct mt76_queue *q,
 		     int idx, int n_desc, int bufsize)
 {
-	int ret;
-
-	q->regs = dev->mt76.mmio.regs + MT_RX_RING_BASE + idx * MT_RING_SIZE;
-	q->ndesc = n_desc;
-	q->buf_size = bufsize;
+	int err;
 
-	ret = mt76_queue_alloc(dev, q);
-	if (ret)
-		return ret;
+	err = mt76_queue_alloc(dev, q, idx, n_desc, bufsize,
+			       MT_RX_RING_BASE);
+	if (err < 0)
+		return err;
 
 	mt7603_irq_enable(dev, MT_INT_RX_DONE(idx));
 
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
