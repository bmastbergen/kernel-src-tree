bnxt_en: Refactor bnxt_alloc_stats().

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] bnxt_en: Refactor bnxt_alloc_stats() (Jonathan Toppins) [1724766]
Rebuild_FUZZ: 98.63%
commit-author Vasundhara Volam <vasundhara-v.volam@broadcom.com>
commit a220eabc8887e3c02d308a9960e92a70cbd00b52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a220eabc.failed

Reverse the condition of the large "if" block and return early.  This
will simplify the follow up patch to add PCIe statistics.

	Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a220eabc8887e3c02d308a9960e92a70cbd00b52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index ba84c87ec7b3,1fb6d5eb3cc3..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -3446,56 -3440,53 +3446,74 @@@ static int bnxt_alloc_stats(struct bnx
  		cpr->hw_stats_ctx_id = INVALID_STATS_CTX_ID;
  	}
  
- 	if (BNXT_PF(bp) && bp->chip_num != CHIP_NUM_58700) {
- 		if (bp->hw_rx_port_stats)
- 			goto alloc_ext_stats;
+ 	if (BNXT_VF(bp) || bp->chip_num == CHIP_NUM_58700)
+ 		return 0;
  
- 		bp->hw_port_stats_size = sizeof(struct rx_port_stats) +
- 					 sizeof(struct tx_port_stats) + 1024;
+ 	if (bp->hw_rx_port_stats)
+ 		goto alloc_ext_stats;
  
- 		bp->hw_rx_port_stats =
- 			dma_alloc_coherent(&pdev->dev, bp->hw_port_stats_size,
- 					   &bp->hw_rx_port_stats_map,
- 					   GFP_KERNEL);
- 		if (!bp->hw_rx_port_stats)
- 			return -ENOMEM;
+ 	bp->hw_port_stats_size = sizeof(struct rx_port_stats) +
+ 				 sizeof(struct tx_port_stats) + 1024;
+ 
+ 	bp->hw_rx_port_stats =
+ 		dma_alloc_coherent(&pdev->dev, bp->hw_port_stats_size,
+ 				   &bp->hw_rx_port_stats_map,
+ 				   GFP_KERNEL);
+ 	if (!bp->hw_rx_port_stats)
+ 		return -ENOMEM;
  
- 		bp->hw_tx_port_stats = (void *)(bp->hw_rx_port_stats + 1) +
- 				       512;
- 		bp->hw_tx_port_stats_map = bp->hw_rx_port_stats_map +
- 					   sizeof(struct rx_port_stats) + 512;
- 		bp->flags |= BNXT_FLAG_PORT_STATS;
+ 	bp->hw_tx_port_stats = (void *)(bp->hw_rx_port_stats + 1) + 512;
+ 	bp->hw_tx_port_stats_map = bp->hw_rx_port_stats_map +
+ 				   sizeof(struct rx_port_stats) + 512;
+ 	bp->flags |= BNXT_FLAG_PORT_STATS;
  
  alloc_ext_stats:
- 		/* Display extended statistics only if FW supports it */
- 		if (bp->hwrm_spec_code < 0x10804 ||
- 		    bp->hwrm_spec_code == 0x10900)
- 			return 0;
+ 	/* Display extended statistics only if FW supports it */
+ 	if (bp->hwrm_spec_code < 0x10804 || bp->hwrm_spec_code == 0x10900)
+ 		return 0;
  
- 		if (bp->hw_rx_port_stats_ext)
- 			goto alloc_tx_ext_stats;
+ 	if (bp->hw_rx_port_stats_ext)
+ 		goto alloc_tx_ext_stats;
  
++<<<<<<< HEAD
 +		bp->hw_rx_port_stats_ext =
 +			dma_zalloc_coherent(&pdev->dev,
 +					    sizeof(struct rx_port_stats_ext),
 +					    &bp->hw_rx_port_stats_ext_map,
 +					    GFP_KERNEL);
 +		if (!bp->hw_rx_port_stats_ext)
 +			return 0;
++=======
+ 	bp->hw_rx_port_stats_ext =
+ 		dma_alloc_coherent(&pdev->dev, sizeof(struct rx_port_stats_ext),
+ 				   &bp->hw_rx_port_stats_ext_map, GFP_KERNEL);
+ 	if (!bp->hw_rx_port_stats_ext)
+ 		return 0;
++>>>>>>> a220eabc8887 (bnxt_en: Refactor bnxt_alloc_stats().)
  
  alloc_tx_ext_stats:
- 		if (bp->hw_tx_port_stats_ext)
- 			return 0;
+ 	if (bp->hw_tx_port_stats_ext)
+ 		return 0;
  
++<<<<<<< HEAD
 +		if (bp->hwrm_spec_code >= 0x10902) {
 +			bp->hw_tx_port_stats_ext =
 +				dma_zalloc_coherent(&pdev->dev,
 +					    sizeof(struct tx_port_stats_ext),
 +					    &bp->hw_tx_port_stats_ext_map,
 +					    GFP_KERNEL);
 +		}
 +		bp->flags |= BNXT_FLAG_PORT_STATS_EXT;
++=======
+ 	if (bp->hwrm_spec_code >= 0x10902) {
+ 		bp->hw_tx_port_stats_ext =
+ 			dma_alloc_coherent(&pdev->dev,
+ 					   sizeof(struct tx_port_stats_ext),
+ 					   &bp->hw_tx_port_stats_ext_map,
+ 					   GFP_KERNEL);
++>>>>>>> a220eabc8887 (bnxt_en: Refactor bnxt_alloc_stats().)
  	}
+ 	bp->flags |= BNXT_FLAG_PORT_STATS_EXT;
  	return 0;
  }
  
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
