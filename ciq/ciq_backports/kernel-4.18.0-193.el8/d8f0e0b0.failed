powerpc/64s: support nospectre_v2 cmdline option

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [powerpc] 64s: support nospectre_v2 cmdline option (Gustavo Duarte) [1777686]
Rebuild_FUZZ: 90.91%
commit-author Christopher M. Riedl <cmr@informatik.wtf>
commit d8f0e0b073e1ec52a05f0c2a56318b47387d2f10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d8f0e0b0.failed

Add support for disabling the kernel implemented spectre v2 mitigation
(count cache flush on context switch) via the nospectre_v2 and
mitigations=off cmdline options.

	Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
	Signed-off-by: Christopher M. Riedl <cmr@informatik.wtf>
	Reviewed-by: Andrew Donnellan <ajd@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20190524024647.381-1-cmr@informatik.wtf
(cherry picked from commit d8f0e0b073e1ec52a05f0c2a56318b47387d2f10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/security.c
diff --cc arch/powerpc/kernel/security.c
index d465307cccdd,7cfcb294b11c..000000000000
--- a/arch/powerpc/kernel/security.c
+++ b/arch/powerpc/kernel/security.c
@@@ -27,6 -27,10 +27,13 @@@ static enum count_cache_flush_type coun
  
  bool barrier_nospec_enabled;
  static bool no_nospec;
++<<<<<<< HEAD
++=======
+ static bool btb_flush_enabled;
+ #if defined(CONFIG_PPC_FSL_BOOK3E) || defined(CONFIG_PPC_BOOK3S_64)
+ static bool no_spectrev2;
+ #endif
++>>>>>>> d8f0e0b073e1 (powerpc/64s: support nospectre_v2 cmdline option)
  
  static void enable_barrier_nospec(bool enable)
  {
@@@ -100,8 -104,36 +107,31 @@@ static __init int barrier_nospec_debugf
  	return 0;
  }
  device_initcall(barrier_nospec_debugfs_init);
 -
 -static __init int security_feature_debugfs_init(void)
 -{
 -	debugfs_create_x64("security_features", 0400, powerpc_debugfs_root,
 -			   (u64 *)&powerpc_security_features);
 -	return 0;
 -}
 -device_initcall(security_feature_debugfs_init);
  #endif /* CONFIG_DEBUG_FS */
  
++<<<<<<< HEAD
++=======
+ #if defined(CONFIG_PPC_FSL_BOOK3E) || defined(CONFIG_PPC_BOOK3S_64)
+ static int __init handle_nospectre_v2(char *p)
+ {
+ 	no_spectrev2 = true;
+ 
+ 	return 0;
+ }
+ early_param("nospectre_v2", handle_nospectre_v2);
+ #endif /* CONFIG_PPC_FSL_BOOK3E || CONFIG_PPC_BOOK3S_64 */
+ 
+ #ifdef CONFIG_PPC_FSL_BOOK3E
+ void setup_spectre_v2(void)
+ {
+ 	if (no_spectrev2 || cpu_mitigations_off())
+ 		do_btb_flush_fixups();
+ 	else
+ 		btb_flush_enabled = true;
+ }
+ #endif /* CONFIG_PPC_FSL_BOOK3E */
+ 
++>>>>>>> d8f0e0b073e1 (powerpc/64s: support nospectre_v2 cmdline option)
  #ifdef CONFIG_PPC_BOOK3S_64
  ssize_t cpu_show_meltdown(struct device *dev, struct device_attribute *attr, char *buf)
  {
* Unmerged path arch/powerpc/kernel/security.c
