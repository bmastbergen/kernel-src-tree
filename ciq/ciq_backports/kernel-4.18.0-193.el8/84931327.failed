arm64: ptr auth: Move per-thread keys from thread_info to thread_struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [arm64] ptr auth: Move per-thread keys from thread_info to thread_struct (Mark Salter) [1756103]
Rebuild_FUZZ: 94.81%
commit-author Will Deacon <will.deacon@arm.com>
commit 84931327a807a4dd65d0d6b53a8ae47845c91f79
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/84931327.failed

We don't need to get at the per-thread keys from assembly at all, so
they can live alongside the rest of the per-thread register state in
thread_struct instead of thread_info.

This will also allow straighforward whitelisting of the keys for
hardened usercopy should we expose them via a ptrace request later on.

	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 84931327a807a4dd65d0d6b53a8ae47845c91f79)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/pointer_auth.h
#	arch/arm64/kernel/pointer_auth.c
* Unmerged path arch/arm64/include/asm/pointer_auth.h
* Unmerged path arch/arm64/kernel/pointer_auth.c
* Unmerged path arch/arm64/include/asm/pointer_auth.h
diff --git a/arch/arm64/include/asm/processor.h b/arch/arm64/include/asm/processor.h
index 80d0ee02d1f0..75290789c0c9 100644
--- a/arch/arm64/include/asm/processor.h
+++ b/arch/arm64/include/asm/processor.h
@@ -147,6 +147,9 @@ struct thread_struct {
 	unsigned long		fault_address;	/* fault info */
 	unsigned long		fault_code;	/* ESR_EL1 value */
 	struct debug_info	debug;		/* debugging */
+#ifdef CONFIG_ARM64_PTR_AUTH
+	struct ptrauth_keys	keys_user;
+#endif
 };
 
 static inline void arch_thread_struct_whitelist(unsigned long *offset,
* Unmerged path arch/arm64/kernel/pointer_auth.c
