mscc: ocelot: Implement ndo_get_port_parent_id()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit 751302c35ea0ae5aac9918e85199eb9f56a5afac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/751302c3.failed

Ocelot only supports SWITCHDEV_ATTR_ID_PORT_PARENT_ID as a valid
switchdev attribute getter, convert it to use ndo_get_port_parent_id()
and get rid of the switchdev_ops::switchdev_port_attr_get altogether.

	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 751302c35ea0ae5aac9918e85199eb9f56a5afac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mscc/ocelot.c
diff --cc drivers/net/ethernet/mscc/ocelot.c
index 84dc0b745fc3,195306d05bcd..000000000000
--- a/drivers/net/ethernet/mscc/ocelot.c
+++ b/drivers/net/ethernet/mscc/ocelot.c
@@@ -691,6 -892,42 +691,45 @@@ end
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static int ocelot_vlan_rx_add_vid(struct net_device *dev, __be16 proto,
+ 				  u16 vid)
+ {
+ 	return ocelot_vlan_vid_add(dev, vid, false, true);
+ }
+ 
+ static int ocelot_vlan_rx_kill_vid(struct net_device *dev, __be16 proto,
+ 				   u16 vid)
+ {
+ 	return ocelot_vlan_vid_del(dev, vid);
+ }
+ 
+ static int ocelot_set_features(struct net_device *dev,
+ 			       netdev_features_t features)
+ {
+ 	struct ocelot_port *port = netdev_priv(dev);
+ 	netdev_features_t changed = dev->features ^ features;
+ 
+ 	if (changed & NETIF_F_HW_VLAN_CTAG_FILTER)
+ 		ocelot_vlan_mode(port, features);
+ 
+ 	return 0;
+ }
+ 
+ static int ocelot_get_port_parent_id(struct net_device *dev,
+ 				     struct netdev_phys_item_id *ppid)
+ {
+ 	struct ocelot_port *ocelot_port = netdev_priv(dev);
+ 	struct ocelot *ocelot = ocelot_port->ocelot;
+ 
+ 	ppid->id_len = sizeof(ocelot->base_mac);
+ 	memcpy(&ppid->id, &ocelot->base_mac, ppid->id_len);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 751302c35ea0 (mscc: ocelot: Implement ndo_get_port_parent_id())
  static const struct net_device_ops ocelot_port_netdev_ops = {
  	.ndo_open			= ocelot_port_open,
  	.ndo_stop			= ocelot_port_stop,
@@@ -702,6 -939,10 +741,13 @@@
  	.ndo_fdb_add			= ocelot_fdb_add,
  	.ndo_fdb_del			= ocelot_fdb_del,
  	.ndo_fdb_dump			= ocelot_fdb_dump,
++<<<<<<< HEAD
++=======
+ 	.ndo_vlan_rx_add_vid		= ocelot_vlan_rx_add_vid,
+ 	.ndo_vlan_rx_kill_vid		= ocelot_vlan_rx_kill_vid,
+ 	.ndo_set_features		= ocelot_set_features,
+ 	.ndo_get_port_parent_id		= ocelot_get_port_parent_id,
++>>>>>>> 751302c35ea0 (mscc: ocelot: Implement ndo_get_port_parent_id())
  };
  
  static void ocelot_get_strings(struct net_device *netdev, u32 sset, u8 *data)
@@@ -781,27 -1022,10 +827,8 @@@ static const struct ethtool_ops ocelot_
  	.get_strings		= ocelot_get_strings,
  	.get_ethtool_stats	= ocelot_get_ethtool_stats,
  	.get_sset_count		= ocelot_get_sset_count,
 -	.get_link_ksettings	= phy_ethtool_get_link_ksettings,
 -	.set_link_ksettings	= phy_ethtool_set_link_ksettings,
  };
  
- static int ocelot_port_attr_get(struct net_device *dev,
- 				struct switchdev_attr *attr)
- {
- 	struct ocelot_port *ocelot_port = netdev_priv(dev);
- 	struct ocelot *ocelot = ocelot_port->ocelot;
- 
- 	switch (attr->id) {
- 	case SWITCHDEV_ATTR_ID_PORT_PARENT_ID:
- 		attr->u.ppid.id_len = sizeof(ocelot->base_mac);
- 		memcpy(&attr->u.ppid.id, &ocelot->base_mac,
- 		       attr->u.ppid.id_len);
- 		break;
- 	default:
- 		return -EOPNOTSUPP;
- 	}
- 
- 	return 0;
- }
- 
  static int ocelot_port_attr_stp_state_set(struct ocelot_port *ocelot_port,
  					  struct switchdev_trans *trans,
  					  u8 state)
* Unmerged path drivers/net/ethernet/mscc/ocelot.c
