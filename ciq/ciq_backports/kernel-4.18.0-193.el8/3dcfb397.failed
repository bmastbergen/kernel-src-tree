ASoC: codec2codec: deal with params when necessary

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: codec2codec: deal with params when necessary (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 94.34%
commit-author Jerome Brunet <jbrunet@baylibre.com>
commit 3dcfb397dad2ad55bf50de3c5d5a57090d35a18a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3dcfb397.failed

When there is an event on codec to codec dai_link, we only need to deal
with params if the event is SND_SOC_DAPM_PRE_PMU, when .hw_params() is
called. For the other events, it is useless.

Also, dealing with the codec to codec params just before calling
.hw_params() callbacks give change to either party on the link to alter
params content in .startup(), which might be useful in some cases

	Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
Link: https://lore.kernel.org/r/20190725165949.29699-4-jbrunet@baylibre.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 3dcfb397dad2ad55bf50de3c5d5a57090d35a18a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-dapm.c
diff --cc sound/soc/soc-dapm.c
index 7874989d43fc,6dcaf9ff6eb5..000000000000
--- a/sound/soc/soc-dapm.c
+++ b/sound/soc/soc-dapm.c
@@@ -3846,49 -3893,10 +3915,52 @@@ static int snd_soc_dai_link_event(struc
  
  	switch (event) {
  	case SND_SOC_DAPM_PRE_PMU:
- 		substream.stream = SNDRV_PCM_STREAM_CAPTURE;
- 		snd_soc_dapm_widget_for_each_source_path(w, path) {
- 			source = path->source->priv;
+ 		ret = snd_soc_dai_link_event_pre_pmu(w, &substream);
+ 		if (ret < 0)
+ 			goto out;
  
++<<<<<<< HEAD
 +			if (source->driver->ops->startup) {
 +				ret = source->driver->ops->startup(&substream,
 +								   source);
 +				if (ret < 0) {
 +					dev_err(source->dev,
 +						"ASoC: startup() failed: %d\n",
 +						ret);
 +					goto out;
 +				}
 +			}
 +			source->active++;
 +			ret = soc_dai_hw_params(&substream, params, source);
 +			if (ret < 0)
 +				goto out;
 +
 +			dapm_update_dai_unlocked(&substream, params, source);
 +		}
 +
 +		substream.stream = SNDRV_PCM_STREAM_PLAYBACK;
 +		snd_soc_dapm_widget_for_each_sink_path(w, path) {
 +			sink = path->sink->priv;
 +
 +			if (sink->driver->ops->startup) {
 +				ret = sink->driver->ops->startup(&substream,
 +								 sink);
 +				if (ret < 0) {
 +					dev_err(sink->dev,
 +						"ASoC: startup() failed: %d\n",
 +						ret);
 +					goto out;
 +				}
 +			}
 +			sink->active++;
 +			ret = soc_dai_hw_params(&substream, params, sink);
 +			if (ret < 0)
 +				goto out;
 +
 +			dapm_update_dai_unlocked(&substream, params, sink);
 +		}
++=======
++>>>>>>> 3dcfb397dad2 (ASoC: codec2codec: deal with params when necessary)
  		break;
  
  	case SND_SOC_DAPM_POST_PMU:
* Unmerged path sound/soc/soc-dapm.c
