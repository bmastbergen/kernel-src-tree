net: phy: micrel: make sure the factory test bit is cleared

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] phy: micrel: make sure the factory test bit is cleared (Petr Oros) [1772010]
Rebuild_FUZZ: 95.58%
commit-author Antoine Tenart <antoine.tenart@bootlin.com>
commit 7a1d8390d015a13c42b1effa1f22fda0858fe6f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7a1d8390.failed

The KSZ8081 PHY has a factory test mode which is set at the de-assertion
of the reset line based on the RXER (KSZ8081RNA/RND) or TXC
(KSZ8081MNX/RNB) pin. If a pull-down is missing, or if the pin has a
pull-up, the factory test mode should be cleared by manually writing a 0
(according to the datasheet). This patch makes sure this factory test
bit is cleared in config_init().

	Tested-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
	Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7a1d8390d015a13c42b1effa1f22fda0858fe6f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/micrel.c
diff --cc drivers/net/phy/micrel.c
index 52d52619256a,3c8186f269f9..000000000000
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@@ -340,6 -341,29 +341,32 @@@ static int ksz8041_config_aneg(struct p
  	return genphy_config_aneg(phydev);
  }
  
++<<<<<<< HEAD
++=======
+ static int ksz8081_config_init(struct phy_device *phydev)
+ {
+ 	/* KSZPHY_OMSO_FACTORY_TEST is set at de-assertion of the reset line
+ 	 * based on the RXER (KSZ8081RNA/RND) or TXC (KSZ8081MNX/RNB) pin. If a
+ 	 * pull-down is missing, the factory test mode should be cleared by
+ 	 * manually writing a 0.
+ 	 */
+ 	phy_clear_bits(phydev, MII_KSZPHY_OMSO, KSZPHY_OMSO_FACTORY_TEST);
+ 
+ 	return kszphy_config_init(phydev);
+ }
+ 
+ static int ksz8061_config_init(struct phy_device *phydev)
+ {
+ 	int ret;
+ 
+ 	ret = phy_write_mmd(phydev, MDIO_MMD_PMAPMD, MDIO_DEVID1, 0xB61A);
+ 	if (ret)
+ 		return ret;
+ 
+ 	return kszphy_config_init(phydev);
+ }
+ 
++>>>>>>> 7a1d8390d015 (net: phy: micrel: make sure the factory test bit is cleared)
  static int ksz9021_load_values_from_of(struct phy_device *phydev,
  				       const struct device_node *of_node,
  				       u16 reg,
@@@ -1006,11 -1048,10 +1033,11 @@@ static struct phy_driver ksphy_driver[
  	.phy_id		= PHY_ID_KSZ8081,
  	.name		= "Micrel KSZ8081 or KSZ8091",
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
 -	/* PHY_BASIC_FEATURES */
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
  	.driver_data	= &ksz8081_type,
  	.probe		= kszphy_probe,
- 	.config_init	= kszphy_config_init,
+ 	.config_init	= ksz8081_config_init,
  	.ack_interrupt	= kszphy_ack_interrupt,
  	.config_intr	= kszphy_config_intr,
  	.get_sset_count = kszphy_get_sset_count,
* Unmerged path drivers/net/phy/micrel.c
