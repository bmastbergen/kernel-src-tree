RDMA/nldev: Connect QP number to .doit callback

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit 1b8b778864b338b2e295687733d785ae1a65a9ea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/1b8b7788.failed

This patch adds ability to query specific QP based on its LQPN (local
QPN), which is assigned by HW and needs special treatment while inserting
into restrack DB.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 1b8b778864b338b2e295687733d785ae1a65a9ea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/nldev.c
#	drivers/infiniband/core/restrack.c
diff --cc drivers/infiniband/core/nldev.c
index efccd8e0fb77,8b4f86ce50ce..000000000000
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@@ -915,6 -920,8 +915,11 @@@ static const struct nldev_fill_res_entr
  		.fill_res_func = fill_res_qp_entry,
  		.nldev_cmd = RDMA_NLDEV_CMD_RES_QP_GET,
  		.nldev_attr = RDMA_NLDEV_ATTR_RES_QP,
++<<<<<<< HEAD
++=======
+ 		.entry = RDMA_NLDEV_ATTR_RES_QP_ENTRY,
+ 		.id = RDMA_NLDEV_ATTR_RES_LQPN,
++>>>>>>> 1b8b778864b3 (RDMA/nldev: Connect QP number to .doit callback)
  	},
  	[RDMA_RESTRACK_CM_ID] = {
  		.fill_res_func = fill_res_cm_id_entry,
diff --cc drivers/infiniband/core/restrack.c
index bfd36820ee66,fa804093fafb..000000000000
--- a/drivers/infiniband/core/restrack.c
+++ b/drivers/infiniband/core/restrack.c
@@@ -177,13 -221,22 +177,28 @@@ static void rdma_restrack_add(struct rd
  	if (!dev)
  		return;
  
 -	rt = &dev->res[res->type];
 -
  	kref_init(&res->kref);
  	init_completion(&res->comp);
++<<<<<<< HEAD
 +	res->valid = true;
 +
 +	down_write(&dev->res.rwsem);
 +	hash_add(dev->res.hash, &res->node, res->type);
 +	up_write(&dev->res.rwsem);
++=======
+ 	if (res->type != RDMA_RESTRACK_QP)
+ 		ret = rt_xa_alloc_cyclic(&rt->xa, &res->id, res, &rt->next_id);
+ 	else {
+ 		/* Special case to ensure that LQPN points to right QP */
+ 		struct ib_qp *qp = container_of(res, struct ib_qp, res);
+ 
+ 		ret = xa_insert(&rt->xa, qp->qp_num, res, GFP_KERNEL);
+ 		res->id = ret ? 0 : qp->qp_num;
+ 	}
+ 
+ 	if (!ret)
+ 		res->valid = true;
++>>>>>>> 1b8b778864b3 (RDMA/nldev: Connect QP number to .doit callback)
  }
  
  /**
* Unmerged path drivers/infiniband/core/nldev.c
* Unmerged path drivers/infiniband/core/restrack.c
