netfilter: nf_tables: add nft_setelem_parse_key()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 20a1452c35425b2cef76f21f8395ef069dfddfa9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/20a1452c.failed

Add helper function to parse the set element key netlink attribute.

v4: No changes
v3: New patch

[sbrivio: refactor error paths and labels; use NFT_DATA_VALUE_MAXLEN
  instead of sizeof(*key) in helper, value can be longer than that;
  rebase]
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 20a1452c35425b2cef76f21f8395ef069dfddfa9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index 04c95168b032,58e3b285a3d1..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -4336,15 -4829,22 +4347,27 @@@ static int nft_add_set_elem(struct nft_
  		timeout = set->timeout;
  	}
  
++<<<<<<< HEAD
 +	err = nft_data_init(ctx, &elem.key.val, sizeof(elem.key), &d1,
 +			    nla[NFTA_SET_ELEM_KEY]);
++=======
+ 	expiration = 0;
+ 	if (nla[NFTA_SET_ELEM_EXPIRATION] != NULL) {
+ 		if (!(set->flags & NFT_SET_TIMEOUT))
+ 			return -EINVAL;
+ 		err = nf_msecs_to_jiffies64(nla[NFTA_SET_ELEM_EXPIRATION],
+ 					    &expiration);
+ 		if (err)
+ 			return err;
+ 	}
+ 
+ 	err = nft_setelem_parse_key(ctx, set, &elem.key.val,
+ 				    nla[NFTA_SET_ELEM_KEY]);
++>>>>>>> 20a1452c3542 (netfilter: nf_tables: add nft_setelem_parse_key())
  	if (err < 0)
  		goto err1;
- 	err = -EINVAL;
- 	if (d1.type != NFT_DATA_VALUE || d1.len != set->klen)
- 		goto err2;
  
- 	nft_set_ext_add_length(&tmpl, NFT_SET_EXT_KEY, d1.len);
+ 	nft_set_ext_add_length(&tmpl, NFT_SET_EXT_KEY, set->klen);
  	if (timeout > 0) {
  		nft_set_ext_add(&tmpl, NFT_SET_EXT_EXPIRATION);
  		if (timeout != set->timeout)
@@@ -4590,14 -5089,13 +4612,13 @@@ static int nft_del_setelem(struct nft_c
  	void *priv;
  	int err;
  
 -	err = nla_parse_nested_deprecated(nla, NFTA_SET_ELEM_MAX, attr,
 -					  nft_set_elem_policy, NULL);
 +	err = nla_parse_nested(nla, NFTA_SET_ELEM_MAX, attr,
 +			       nft_set_elem_policy, NULL);
  	if (err < 0)
- 		goto err1;
+ 		return err;
  
- 	err = -EINVAL;
  	if (nla[NFTA_SET_ELEM_KEY] == NULL)
- 		goto err1;
+ 		return -EINVAL;
  
  	nft_set_ext_prepare(&tmpl);
  
@@@ -4620,9 -5114,9 +4637,9 @@@
  
  	err = -ENOMEM;
  	elem.priv = nft_set_elem_init(set, &tmpl, elem.key.val.data, NULL, 0,
 -				      0, GFP_KERNEL);
 +				      GFP_KERNEL);
  	if (elem.priv == NULL)
- 		goto err2;
+ 		goto fail_elem;
  
  	ext = nft_set_elem_ext(set, elem.priv);
  	if (flags)
* Unmerged path net/netfilter/nf_tables_api.c
