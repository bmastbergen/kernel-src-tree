mt76: introduce mt76_tx_info data structure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit b5903c470328b15f828ebb9c42da63da6d0cf8a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/b5903c47.failed

Add mt76_tx_info as auxiliary data structure to pass values
to tx_prepare_skb pointer. This is a preliminary patch to add
support for new chipsets (e.g. mt7615)

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit b5903c470328b15f828ebb9c42da63da6d0cf8a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/dma.c
#	drivers/net/wireless/mediatek/mt76/mt76.h
#	drivers/net/wireless/mediatek/mt76/mt76x02.h
#	drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
#	drivers/net/wireless/mediatek/mt76/mt76x02_usb.h
#	drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
diff --cc drivers/net/wireless/mediatek/mt76/dma.c
index 4381155375e1,41f254958760..000000000000
--- a/drivers/net/wireless/mediatek/mt76/dma.c
+++ b/drivers/net/wireless/mediatek/mt76/dma.c
@@@ -286,21 -278,17 +286,28 @@@ mt76_dma_tx_queue_skb_raw(struct mt76_d
  	return 0;
  }
  
 -int mt76_dma_tx_queue_skb(struct mt76_dev *dev, enum mt76_txq_id qid,
 -			  struct sk_buff *skb, struct mt76_wcid *wcid,
 -			  struct ieee80211_sta *sta)
 +static int
 +mt76_dma_tx_queue_skb(struct mt76_dev *dev, enum mt76_txq_id qid,
 +		      struct sk_buff *skb, struct mt76_wcid *wcid,
 +		      struct ieee80211_sta *sta)
  {
  	struct mt76_queue *q = dev->q_tx[qid].q;
++<<<<<<< HEAD
 +	struct mt76_tx_info tx_info = {
 +		.skb = skb,
 +	};
++=======
+ 	struct mt76_tx_info tx_info = {};
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  	int len, n = 0, ret = -ENOMEM;
  	struct mt76_queue_entry e;
  	struct mt76_txwi_cache *t;
  	struct sk_buff *iter;
  	dma_addr_t addr;
++<<<<<<< HEAD
 +	u8 *txwi;
++=======
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  
  	t = mt76_get_txwi(dev);
  	if (!t) {
@@@ -351,7 -339,7 +358,11 @@@
  	}
  
  	return mt76_dma_add_buf(dev, q, tx_info.buf, tx_info.nbuf,
++<<<<<<< HEAD
 +				tx_info.info, tx_info.skb, t);
++=======
+ 				tx_info.info, skb, t);
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  
  unmap:
  	for (n--; n > 0; n--)
diff --cc drivers/net/wireless/mediatek/mt76/mt76.h
index 1c8ddf9c225d,b13cc014bee7..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76.h
@@@ -87,9 -85,16 +87,22 @@@ struct mt76_queue_buf 
  
  struct mt76_tx_info {
  	struct mt76_queue_buf buf[32];
++<<<<<<< HEAD
 +	struct sk_buff *skb;
 +	int nbuf;
 +	u32 info;
++=======
+ 	int nbuf;
+ 	u32 info;
+ };
+ 
+ struct mt76u_buf {
+ 	struct mt76_dev *dev;
+ 	struct urb *urb;
+ 	size_t len;
+ 	void *buf;
+ 	bool done;
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  };
  
  struct mt76_queue_entry {
@@@ -300,7 -300,8 +313,12 @@@ struct mt76_driver_ops 
  	void (*update_survey)(struct mt76_dev *dev);
  
  	int (*tx_prepare_skb)(struct mt76_dev *dev, void *txwi_ptr,
++<<<<<<< HEAD
 +			      enum mt76_txq_id qid, struct mt76_wcid *wcid,
++=======
+ 			      struct sk_buff *skb, enum mt76_txq_id qid,
+ 			      struct mt76_wcid *wcid,
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  			      struct ieee80211_sta *sta,
  			      struct mt76_tx_info *tx_info);
  
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02.h
index f7fd53a1738a,e0f8ec70127b..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02.h
@@@ -180,8 -172,8 +180,13 @@@ irqreturn_t mt76x02_irq_handler(int irq
  void mt76x02_tx(struct ieee80211_hw *hw, struct ieee80211_tx_control *control,
  		struct sk_buff *skb);
  int mt76x02_tx_prepare_skb(struct mt76_dev *mdev, void *txwi,
++<<<<<<< HEAD
 +			   enum mt76_txq_id qid, struct mt76_wcid *wcid,
 +			   struct ieee80211_sta *sta,
++=======
+ 			   struct sk_buff *skb, enum mt76_txq_id qid,
+ 			   struct mt76_wcid *wcid, struct ieee80211_sta *sta,
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  			   struct mt76_tx_info *tx_info);
  void mt76x02_sw_scan(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
  		     const u8 *mac);
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
index 04118f08debc,dd7d04b9b8db..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
@@@ -147,8 -147,8 +147,13 @@@ bool mt76x02_tx_status_data(struct mt76
  EXPORT_SYMBOL_GPL(mt76x02_tx_status_data);
  
  int mt76x02_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
++<<<<<<< HEAD
 +			   enum mt76_txq_id qid, struct mt76_wcid *wcid,
 +			   struct ieee80211_sta *sta,
++=======
+ 			   struct sk_buff *skb, enum mt76_txq_id qid,
+ 			   struct mt76_wcid *wcid, struct ieee80211_sta *sta,
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  			   struct mt76_tx_info *tx_info)
  {
  	struct mt76x02_dev *dev = container_of(mdev, struct mt76x02_dev, mt76);
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_usb.h
index 7b53f9e57f29,8f98cc6ce094..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_usb.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_usb.h
@@@ -26,8 -26,8 +26,13 @@@ int mt76x02u_mcu_fw_send_data(struct mt
  
  int mt76x02u_skb_dma_info(struct sk_buff *skb, int port, u32 flags);
  int mt76x02u_tx_prepare_skb(struct mt76_dev *mdev, void *data,
++<<<<<<< HEAD
 +			    enum mt76_txq_id qid, struct mt76_wcid *wcid,
 +			    struct ieee80211_sta *sta,
++=======
+ 			    struct sk_buff *skb, enum mt76_txq_id qid,
+ 			    struct mt76_wcid *wcid, struct ieee80211_sta *sta,
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  			    struct mt76_tx_info *tx_info);
  void mt76x02u_tx_complete_skb(struct mt76_dev *mdev, enum mt76_txq_id qid,
  			      struct mt76_queue_entry *e);
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
index 5e4f3a8c5784,394dfe5b4a2e..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
@@@ -72,8 -72,8 +72,13 @@@ int mt76x02u_skb_dma_info(struct sk_buf
  }
  
  int mt76x02u_tx_prepare_skb(struct mt76_dev *mdev, void *data,
++<<<<<<< HEAD
 +			    enum mt76_txq_id qid, struct mt76_wcid *wcid,
 +			    struct ieee80211_sta *sta,
++=======
+ 			    struct sk_buff *skb, enum mt76_txq_id qid,
+ 			    struct mt76_wcid *wcid, struct ieee80211_sta *sta,
++>>>>>>> b5903c470328 (mt76: introduce mt76_tx_info data structure)
  			    struct mt76_tx_info *tx_info)
  {
  	struct mt76x02_dev *dev = container_of(mdev, struct mt76x02_dev, mt76);
* Unmerged path drivers/net/wireless/mediatek/mt76/dma.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76.h
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/mac.c b/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
index 5abc02b57818..34a81bb052da 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
@@ -913,7 +913,7 @@ mt7603_mac_write_txwi(struct mt7603_dev *dev, __le32 *txwi,
 int mt7603_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
 			  struct sk_buff *skb, struct mt76_queue *q,
 			  struct mt76_wcid *wcid, struct ieee80211_sta *sta,
-			  u32 *tx_info)
+			  struct mt76_tx_info *tx_info)
 {
 	struct mt7603_dev *dev = container_of(mdev, struct mt7603_dev, mt76);
 	struct mt7603_sta *msta = container_of(wcid, struct mt7603_sta, wcid);
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h b/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
index 6049f3b7c8fe..2cf5e6e2ebc5 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
@@ -227,7 +227,7 @@ void mt7603_filter_tx(struct mt7603_dev *dev, int idx, bool abort);
 int mt7603_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
 			  struct sk_buff *skb, struct mt76_queue *q,
 			  struct mt76_wcid *wcid, struct ieee80211_sta *sta,
-			  u32 *tx_info);
+			  struct mt76_tx_info *tx_info);
 
 void mt7603_tx_complete_skb(struct mt76_dev *mdev, struct mt76_queue *q,
 			    struct mt76_queue_entry *e, bool flush);
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_usb.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
