RDMA/nldev: Provide parent IDs for PD, MR and QP objects

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit c3d02788b45ab4a2d8f243b98c04b549c8193af6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/c3d02788.failed

PD, MR and QP objects have parents objects: contexts and PDs.  The exposed
parent IDs allow to correlate various objects and simplify debug
investigation.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit c3d02788b45ab4a2d8f243b98c04b549c8193af6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/nldev.c
#	include/uapi/rdma/rdma_netlink.h
diff --cc drivers/infiniband/core/nldev.c
index efccd8e0fb77,e6c7cc510556..000000000000
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@@ -107,6 -108,11 +107,14 @@@ static const struct nla_policy nldev_po
  	[RDMA_NLDEV_ATTR_DRIVER_U32]		= { .type = NLA_U32 },
  	[RDMA_NLDEV_ATTR_DRIVER_S64]		= { .type = NLA_S64 },
  	[RDMA_NLDEV_ATTR_DRIVER_U64]		= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 	[RDMA_NLDEV_ATTR_RES_PDN]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_CQN]               = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_MRN]               = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_CM_IDN]            = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_CTXN]              = { .type = NLA_U32 },
++>>>>>>> c3d02788b45a (RDMA/nldev: Provide parent IDs for PD, MR and QP objects)
  };
  
  static int put_driver_name_print_type(struct sk_buff *msg, const char *name,
@@@ -508,6 -506,13 +520,16 @@@ static int fill_res_cq_entry(struct sk_
  	    nla_put_u8(msg, RDMA_NLDEV_ATTR_RES_POLL_CTX, cq->poll_ctx))
  		goto err;
  
++<<<<<<< HEAD
++=======
+ 	if (nla_put_u32(msg, RDMA_NLDEV_ATTR_RES_CQN, res->id))
+ 		goto err;
+ 	if (!rdma_is_kernel_res(res) &&
+ 	    nla_put_u32(msg, RDMA_NLDEV_ATTR_RES_CTXN,
+ 			cq->uobject->context->res.id))
+ 		goto err;
+ 
++>>>>>>> c3d02788b45a (RDMA/nldev: Provide parent IDs for PD, MR and QP objects)
  	if (fill_res_name_pid(msg, res))
  		goto err;
  
@@@ -545,6 -541,13 +567,16 @@@ static int fill_res_mr_entry(struct sk_
  			      RDMA_NLDEV_ATTR_PAD))
  		goto err;
  
++<<<<<<< HEAD
++=======
+ 	if (nla_put_u32(msg, RDMA_NLDEV_ATTR_RES_MRN, res->id))
+ 		goto err;
+ 
+ 	if (!rdma_is_kernel_res(res) &&
+ 	    nla_put_u32(msg, RDMA_NLDEV_ATTR_RES_PDN, mr->pd->res.id))
+ 		goto err;
+ 
++>>>>>>> c3d02788b45a (RDMA/nldev: Provide parent IDs for PD, MR and QP objects)
  	if (fill_res_name_pid(msg, res))
  		goto err;
  
@@@ -584,6 -578,14 +616,17 @@@ static int fill_res_pd_entry(struct sk_
  			      atomic_read(&pd->usecnt), RDMA_NLDEV_ATTR_PAD))
  		goto err;
  
++<<<<<<< HEAD
++=======
+ 	if (nla_put_u32(msg, RDMA_NLDEV_ATTR_RES_PDN, res->id))
+ 		goto err;
+ 
+ 	if (!rdma_is_kernel_res(res) &&
+ 	    nla_put_u32(msg, RDMA_NLDEV_ATTR_RES_CTXN,
+ 			pd->uobject->context->res.id))
+ 		goto err;
+ 
++>>>>>>> c3d02788b45a (RDMA/nldev: Provide parent IDs for PD, MR and QP objects)
  	if (fill_res_name_pid(msg, res))
  		goto err;
  
diff --cc include/uapi/rdma/rdma_netlink.h
index 3a9e681e4257,4ebbcfb2c6ef..000000000000
--- a/include/uapi/rdma/rdma_netlink.h
+++ b/include/uapi/rdma/rdma_netlink.h
@@@ -457,6 -457,16 +457,19 @@@ enum rdma_nldev_attr 
  	RDMA_NLDEV_ATTR_DRIVER_U64,		/* u64 */
  
  	/*
++<<<<<<< HEAD
++=======
+ 	 * Indexes to get/set secific entry,
+ 	 * for QP use RDMA_NLDEV_ATTR_RES_LQPN
+ 	 */
+ 	RDMA_NLDEV_ATTR_RES_PDN,               /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_CQN,               /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_MRN,               /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_CM_IDN,            /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_CTXN,	       /* u32 */
+ 
+ 	/*
++>>>>>>> c3d02788b45a (RDMA/nldev: Provide parent IDs for PD, MR and QP objects)
  	 * Always the end
  	 */
  	RDMA_NLDEV_ATTR_MAX
* Unmerged path drivers/infiniband/core/nldev.c
* Unmerged path include/uapi/rdma/rdma_netlink.h
