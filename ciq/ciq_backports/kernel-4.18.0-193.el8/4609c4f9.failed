locking/lockdep: Remove redundant argument in check_deadlock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Yuyang Du <duyuyang@gmail.com>
commit 4609c4f963f353613812f999bb027aac795bcde8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4609c4f9.failed

In check_deadlock(), the third argument read comes from the second
argument hlock so that it can be removed. No functional change.

	Signed-off-by: Yuyang Du <duyuyang@gmail.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: bvanassche@acm.org
	Cc: frederic@kernel.org
	Cc: ming.lei@redhat.com
	Cc: will.deacon@arm.com
Link: https://lkml.kernel.org/r/20190506081939.74287-18-duyuyang@gmail.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 4609c4f963f353613812f999bb027aac795bcde8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/locking/lockdep.c
diff --cc kernel/locking/lockdep.c
index b9aa3f7f91bb,be4c1348ddcd..000000000000
--- a/kernel/locking/lockdep.c
+++ b/kernel/locking/lockdep.c
@@@ -1929,8 -2246,7 +1929,12 @@@ print_deadlock_bug(struct task_struct *
   * Returns: 0 on deadlock detected, 1 on OK, 2 on recursive read
   */
  static int
++<<<<<<< HEAD
 +check_deadlock(struct task_struct *curr, struct held_lock *next,
 +	       struct lockdep_map *next_instance, int read)
++=======
+ check_deadlock(struct task_struct *curr, struct held_lock *next)
++>>>>>>> 4609c4f963f3 (locking/lockdep: Remove redundant argument in check_deadlock)
  {
  	struct held_lock *prev;
  	struct held_lock *nest = NULL;
@@@ -2499,7 -2839,7 +2503,11 @@@ static int validate_chain(struct task_s
  		 * The simple case: does the current hold the same lock
  		 * already?
  		 */
++<<<<<<< HEAD
 +		int ret = check_deadlock(curr, hlock, lock, hlock->read);
++=======
+ 		int ret = check_deadlock(curr, hlock);
++>>>>>>> 4609c4f963f3 (locking/lockdep: Remove redundant argument in check_deadlock)
  
  		if (!ret)
  			return 0;
* Unmerged path kernel/locking/lockdep.c
