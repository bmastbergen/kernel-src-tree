ASoC: codec2codec: fill some of the runtime stream parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: codec2codec: fill some of the runtime stream parameters (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 95.31%
commit-author Jerome Brunet <jbrunet@baylibre.com>
commit 9de98628c895d15427138073986eab1e3ce39cb4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/9de98628.failed

Set the information provided struct snd_soc_pcm_stream in the
struct snd_pcm_runtime of the codec to codec link.

	Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
Link: https://lore.kernel.org/r/20190725165949.29699-7-jbrunet@baylibre.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 9de98628c895d15427138073986eab1e3ce39cb4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-dapm.c
diff --cc sound/soc/soc-dapm.c
index 7874989d43fc,e16838e1bda2..000000000000
--- a/sound/soc/soc-dapm.c
+++ b/sound/soc/soc-dapm.c
@@@ -3833,16 -3852,52 +3833,55 @@@ static int snd_soc_dai_link_event(struc
  	hw_param_interval(params, SNDRV_PCM_HW_PARAM_CHANNELS)->max
  		= config->channels_max;
  
 -	substream->stream = SNDRV_PCM_STREAM_CAPTURE;
 -	snd_soc_dapm_widget_for_each_source_path(w, path) {
 -		source = path->source->priv;
 +	memset(&substream, 0, sizeof(substream));
  
 -		ret = snd_soc_dai_hw_params(source, substream, params);
 -		if (ret < 0)
 -			goto out;
 -
 -		dapm_update_dai_unlocked(substream, params, source);
 +	/* Allocate a dummy snd_pcm_runtime for startup() and other ops() */
 +	runtime = kzalloc(sizeof(*runtime), GFP_KERNEL);
 +	if (!runtime) {
 +		ret = -ENOMEM;
 +		goto out;
  	}
++<<<<<<< HEAD
 +	substream.runtime = runtime;
 +	substream.private_data = rtd;
++=======
+ 
+ 	substream->stream = SNDRV_PCM_STREAM_PLAYBACK;
+ 	snd_soc_dapm_widget_for_each_sink_path(w, path) {
+ 		sink = path->sink->priv;
+ 
+ 		ret = snd_soc_dai_hw_params(sink, substream, params);
+ 		if (ret < 0)
+ 			goto out;
+ 
+ 		dapm_update_dai_unlocked(substream, params, sink);
+ 	}
+ 
+ 	runtime->format = params_format(params);
+ 	runtime->subformat = params_subformat(params);
+ 	runtime->channels = params_channels(params);
+ 	runtime->rate = params_rate(params);
+ 
+ out:
+ 	if (ret < 0)
+ 		kfree(runtime);
+ 
+ 	kfree(params);
+ 	return ret;
+ }
+ 
+ static int snd_soc_dai_link_event(struct snd_soc_dapm_widget *w,
+ 				  struct snd_kcontrol *kcontrol, int event)
+ {
+ 	struct snd_soc_dapm_path *path;
+ 	struct snd_soc_dai *source, *sink;
+ 	struct snd_pcm_substream *substream = w->priv;
+ 	int ret = 0, saved_stream = substream->stream;
+ 
+ 	if (WARN_ON(list_empty(&w->edges[SND_SOC_DAPM_DIR_OUT]) ||
+ 		    list_empty(&w->edges[SND_SOC_DAPM_DIR_IN])))
+ 		return -EINVAL;
++>>>>>>> 9de98628c895 (ASoC: codec2codec: fill some of the runtime stream parameters)
  
  	switch (event) {
  	case SND_SOC_DAPM_PRE_PMU:
* Unmerged path sound/soc/soc-dapm.c
