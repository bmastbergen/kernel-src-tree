mt76: move pre_tbtt_tasklet in mt76_dev

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit dc6057f49a510132ae62e008df85e8e2b548a92c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/dc6057f4.failed

Move pre_tbtt_tasklet tasklet in mt76_dev data structure since
it is used by all drivers

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit dc6057f49a510132ae62e008df85e8e2b548a92c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7603/init.c
#	drivers/net/wireless/mediatek/mt76/mt7603/mac.c
#	drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
#	drivers/net/wireless/mediatek/mt76/mt76x02.h
#	drivers/net/wireless/mediatek/mt76/mt76x02_util.c
#	drivers/net/wireless/mediatek/mt76/mt76x2/pci_main.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/init.c
index 0bec409dfb03,78cdbb70e178..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/init.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/init.c
@@@ -514,8 -514,8 +514,13 @@@ int mt7603_register_device(struct mt760
  
  	spin_lock_init(&dev->ps_lock);
  
++<<<<<<< HEAD
 +	INIT_DELAYED_WORK(&dev->mac_work, mt7603_mac_work);
 +	tasklet_init(&dev->pre_tbtt_tasklet, mt7603_pre_tbtt_tasklet,
++=======
+ 	INIT_DELAYED_WORK(&dev->mt76.mac_work, mt7603_mac_work);
+ 	tasklet_init(&dev->mt76.pre_tbtt_tasklet, mt7603_pre_tbtt_tasklet,
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  		     (unsigned long)dev);
  
  	/* Check for 7688, which only has 1SS */
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/mac.c
index 260a72176cf4,6d506e34c3ee..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
@@@ -1276,8 -1278,8 +1276,13 @@@ static void mt7603_mac_watchdog_reset(s
  	/* lock/unlock all queues to ensure that no tx is pending */
  	mt76_txq_schedule_all(&dev->mt76);
  
++<<<<<<< HEAD
 +	tasklet_disable(&dev->tx_tasklet);
 +	tasklet_disable(&dev->pre_tbtt_tasklet);
++=======
+ 	tasklet_disable(&dev->mt76.tx_tasklet);
+ 	tasklet_disable(&dev->mt76.pre_tbtt_tasklet);
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  	napi_disable(&dev->mt76.napi[0]);
  	napi_disable(&dev->mt76.napi[1]);
  
@@@ -1323,10 -1325,10 +1328,10 @@@ skip_dma_reset
  	clear_bit(MT76_RESET, &dev->mt76.state);
  	mutex_unlock(&dev->mt76.mutex);
  
 -	tasklet_enable(&dev->mt76.tx_tasklet);
 -	tasklet_schedule(&dev->mt76.tx_tasklet);
 +	tasklet_enable(&dev->tx_tasklet);
 +	tasklet_schedule(&dev->tx_tasklet);
  
- 	tasklet_enable(&dev->pre_tbtt_tasklet);
+ 	tasklet_enable(&dev->mt76.pre_tbtt_tasklet);
  	mt7603_beacon_set_timer(dev, -1, beacon_int);
  
  	napi_enable(&dev->mt76.napi[0]);
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
index 10ced8d17526,fa64bbaab0d2..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
@@@ -143,10 -140,6 +143,13 @@@ struct mt7603_dev 
  	u32 reset_test;
  
  	unsigned int reset_cause[__RESET_CAUSE_MAX];
++<<<<<<< HEAD
 +
 +	struct delayed_work mac_work;
 +	struct tasklet_struct tx_tasklet;
 +	struct tasklet_struct pre_tbtt_tasklet;
++=======
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  };
  
  extern const struct mt76_driver_ops mt7603_drv_ops;
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02.h
index f7fd53a1738a,687bd14b2d77..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02.h
@@@ -90,6 -90,7 +90,10 @@@ struct mt76x02_dev 
  
  	struct sk_buff *rx_head;
  
++<<<<<<< HEAD
++=======
+ 	struct napi_struct tx_napi;
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  	struct delayed_work cal_work;
  	struct delayed_work wdt_work;
  
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_util.c
index ad5323447ed4,12724e96b290..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_util.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_util.c
@@@ -593,6 -593,8 +593,11 @@@ void mt76x02_sw_scan(struct ieee80211_h
  {
  	struct mt76x02_dev *dev = hw->priv;
  
++<<<<<<< HEAD
++=======
+ 	if (mt76_is_mmio(dev))
+ 		tasklet_disable(&dev->mt76.pre_tbtt_tasklet);
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  	set_bit(MT76_SCANNING, &dev->mt76.state);
  }
  EXPORT_SYMBOL_GPL(mt76x02_sw_scan);
@@@ -603,6 -605,9 +608,12 @@@ void mt76x02_sw_scan_complete(struct ie
  	struct mt76x02_dev *dev = hw->priv;
  
  	clear_bit(MT76_SCANNING, &dev->mt76.state);
++<<<<<<< HEAD
++=======
+ 	if (mt76_is_mmio(dev))
+ 		tasklet_enable(&dev->mt76.pre_tbtt_tasklet);
+ 
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  	if (dev->cal.gain_init_done) {
  		/* Restore AGC gain and resume calibration after scanning. */
  		dev->cal.low_gain = -1;
diff --cc drivers/net/wireless/mediatek/mt76/mt76x2/pci_main.c
index 3a1467326f4d,e416eee6a306..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x2/pci_main.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x2/pci_main.c
@@@ -62,6 -59,9 +62,12 @@@ mt76x2_set_channel(struct mt76x02_dev *
  
  	mt76_set_channel(&dev->mt76);
  
++<<<<<<< HEAD
++=======
+ 	tasklet_disable(&dev->mt76.pre_tbtt_tasklet);
+ 	tasklet_disable(&dev->dfs_pd.dfs_tasklet);
+ 
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  	mt76x2_mac_stop(dev, true);
  	ret = mt76x2_phy_set_channel(dev, chandef);
  
@@@ -72,12 -72,10 +78,17 @@@
  	mt76x02_dfs_init_params(dev);
  
  	mt76x2_mac_resume(dev);
++<<<<<<< HEAD
++=======
+ 	tasklet_enable(&dev->dfs_pd.dfs_tasklet);
+ 	tasklet_enable(&dev->mt76.pre_tbtt_tasklet);
++>>>>>>> dc6057f49a51 (mt76: move pre_tbtt_tasklet in mt76_dev)
  
  	clear_bit(MT76_RESET, &dev->mt76.state);
 +	mutex_unlock(&dev->mt76.mutex);
 +
 +	tasklet_enable(&dev->dfs_pd.dfs_tasklet);
 +	tasklet_enable(&dev->mt76.pre_tbtt_tasklet);
  
  	mt76_txq_schedule_all(&dev->mt76);
  
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/core.c b/drivers/net/wireless/mediatek/mt76/mt7603/core.c
index cbb948675674..cf98e312fe51 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/core.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/core.c
@@ -38,7 +38,7 @@ irqreturn_t mt7603_irq_handler(int irq, void *dev_instance)
 
 		mt76_wr(dev, MT_HW_INT_STATUS(3), hwintr);
 		if (hwintr & MT_HW_INT3_PRE_TBTT0)
-			tasklet_schedule(&dev->pre_tbtt_tasklet);
+			tasklet_schedule(&dev->mt76.pre_tbtt_tasklet);
 
 		if ((hwintr & MT_HW_INT3_TBTT0) && dev->mt76.csa_complete)
 			mt76_csa_finish(&dev->mt76);
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/init.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/mac.c
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/main.c b/drivers/net/wireless/mediatek/mt76/mt7603/main.c
index ce4a5b71b958..4ce6d04e0496 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/main.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/main.c
@@ -294,9 +294,9 @@ mt7603_bss_info_changed(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	if (changed & (BSS_CHANGED_BEACON_ENABLED | BSS_CHANGED_BEACON_INT)) {
 		int beacon_int = !!info->enable_beacon * info->beacon_int;
 
-		tasklet_disable(&dev->pre_tbtt_tasklet);
+		tasklet_disable(&dev->mt76.pre_tbtt_tasklet);
 		mt7603_beacon_set_timer(dev, mvif->idx, beacon_int);
-		tasklet_enable(&dev->pre_tbtt_tasklet);
+		tasklet_enable(&dev->mt76.pre_tbtt_tasklet);
 	}
 
 	mutex_unlock(&dev->mt76.mutex);
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_util.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x2/pci_main.c
