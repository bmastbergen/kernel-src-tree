arm64: debug: Remove unused return value from do_debug_exception()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Will Deacon <will.deacon@arm.com>
commit 52c6d145da15a9a9cea14678be307c127ccc6ef5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/52c6d145.failed

do_debug_exception() goes out of its way to return a value that isn't
ever used, so just make the thing void.

	Reviewed-by: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 52c6d145da15a9a9cea14678be307c127ccc6ef5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/mm/fault.c
diff --cc arch/arm64/mm/fault.c
index cda34ebb74ca,0cb0e09995e1..000000000000
--- a/arch/arm64/mm/fault.c
+++ b/arch/arm64/mm/fault.c
@@@ -810,12 -810,12 +810,21 @@@ void __init hook_debug_fault_code(int n
  	debug_fault_info[nr].name	= name;
  }
  
++<<<<<<< HEAD
 +asmlinkage int __exception do_debug_exception(unsigned long addr,
 +					      unsigned int esr,
 +					      struct pt_regs *regs)
 +{
 +	const struct fault_info *inf = esr_to_debug_fault_info(esr);
 +	int rv;
++=======
+ asmlinkage void __exception do_debug_exception(unsigned long addr_if_watchpoint,
+ 					       unsigned int esr,
+ 					       struct pt_regs *regs)
+ {
+ 	const struct fault_info *inf = esr_to_debug_fault_info(esr);
+ 	unsigned long pc = instruction_pointer(regs);
++>>>>>>> 52c6d145da15 (arm64: debug: Remove unused return value from do_debug_exception())
  
  	/*
  	 * Tell lockdep we disabled irqs in entry.S. Do nothing if they were
@@@ -824,34 -824,15 +833,38 @@@
  	if (interrupts_enabled(regs))
  		trace_hardirqs_off();
  
 -	if (user_mode(regs) && !is_ttbr0_addr(pc))
 +	if (user_mode(regs) && instruction_pointer(regs) > TASK_SIZE)
  		arm64_apply_bp_hardening();
  
++<<<<<<< HEAD
 +	if (!inf->fn(addr, esr, regs)) {
 +		rv = 1;
 +	} else {
 +		arm64_notify_die(inf->name, regs,
 +				 inf->sig, inf->code, (void __user *)addr, esr);
 +		rv = 0;
++=======
+ 	if (inf->fn(addr_if_watchpoint, esr, regs)) {
+ 		arm64_notify_die(inf->name, regs,
+ 				 inf->sig, inf->code, (void __user *)pc, esr);
++>>>>>>> 52c6d145da15 (arm64: debug: Remove unused return value from do_debug_exception())
  	}
  
  	if (interrupts_enabled(regs))
  		trace_hardirqs_on();
- 
- 	return rv;
  }
  NOKPROBE_SYMBOL(do_debug_exception);
 +
 +#ifdef CONFIG_ARM64_PAN
 +void cpu_enable_pan(const struct arm64_cpu_capabilities *__unused)
 +{
 +	/*
 +	 * We modify PSTATE. This won't work from irq context as the PSTATE
 +	 * is discarded once we return from the exception.
 +	 */
 +	WARN_ON_ONCE(in_interrupt());
 +
 +	config_sctlr_el1(SCTLR_EL1_SPAN, 0);
 +	asm(SET_PSTATE_PAN(1));
 +}
 +#endif /* CONFIG_ARM64_PAN */
* Unmerged path arch/arm64/mm/fault.c
