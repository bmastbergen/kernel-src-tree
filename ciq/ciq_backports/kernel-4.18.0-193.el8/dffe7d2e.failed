net: phy: realtek: Replace phy functions with non-locked version in rtl8211e_config_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] phy: realtek: Replace phy functions with non-locked version in rtl8211e_config_init() (Petr Oros) [1772010]
Rebuild_FUZZ: 97.14%
commit-author Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
commit dffe7d2e04670ff98e4dacf258df30446e2e80d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/dffe7d2e.failed

After calling phy_select_page() and until calling phy_restore_page(),
the mutex 'mdio_lock' is already locked, so the driver should use
non-locked version of phy functions. Or there will be a deadlock with
'mdio_lock'.

This replaces phy functions called from rtl8211e_config_init() to avoid
the deadlock issue.

Fixes: f81dadbcf7fd ("net: phy: realtek: Add rtl8211e rx/tx delays config")
	Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit dffe7d2e04670ff98e4dacf258df30446e2e80d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/realtek.c
diff --cc drivers/net/phy/realtek.c
index c5539deda6b9,a669945eb829..000000000000
--- a/drivers/net/phy/realtek.c
+++ b/drivers/net/phy/realtek.c
@@@ -174,6 -182,52 +174,55 @@@ static int rtl8211f_config_init(struct 
  	return phy_modify_paged(phydev, 0xd08, 0x11, RTL8211F_TX_DELAY, val);
  }
  
++<<<<<<< HEAD
++=======
+ static int rtl8211e_config_init(struct phy_device *phydev)
+ {
+ 	int ret = 0, oldpage;
+ 	u16 val;
+ 
+ 	/* enable TX/RX delay for rgmii-* modes, and disable them for rgmii. */
+ 	switch (phydev->interface) {
+ 	case PHY_INTERFACE_MODE_RGMII:
+ 		val = 0;
+ 		break;
+ 	case PHY_INTERFACE_MODE_RGMII_ID:
+ 		val = RTL8211E_TX_DELAY | RTL8211E_RX_DELAY;
+ 		break;
+ 	case PHY_INTERFACE_MODE_RGMII_RXID:
+ 		val = RTL8211E_RX_DELAY;
+ 		break;
+ 	case PHY_INTERFACE_MODE_RGMII_TXID:
+ 		val = RTL8211E_TX_DELAY;
+ 		break;
+ 	default: /* the rest of the modes imply leaving delays as is. */
+ 		return 0;
+ 	}
+ 
+ 	/* According to a sample driver there is a 0x1c config register on the
+ 	 * 0xa4 extension page (0x7) layout. It can be used to disable/enable
+ 	 * the RX/TX delays otherwise controlled by RXDLY/TXDLY pins. It can
+ 	 * also be used to customize the whole configuration register:
+ 	 * 8:6 = PHY Address, 5:4 = Auto-Negotiation, 3 = Interface Mode Select,
+ 	 * 2 = RX Delay, 1 = TX Delay, 0 = SELRGV (see original PHY datasheet
+ 	 * for details).
+ 	 */
+ 	oldpage = phy_select_page(phydev, 0x7);
+ 	if (oldpage < 0)
+ 		goto err_restore_page;
+ 
+ 	ret = __phy_write(phydev, RTL821x_EXT_PAGE_SELECT, 0xa4);
+ 	if (ret)
+ 		goto err_restore_page;
+ 
+ 	ret = __phy_modify(phydev, 0x1c, RTL8211E_TX_DELAY | RTL8211E_RX_DELAY,
+ 			   val);
+ 
+ err_restore_page:
+ 	return phy_restore_page(phydev, oldpage, ret);
+ }
+ 
++>>>>>>> dffe7d2e0467 (net: phy: realtek: Replace phy functions with non-locked version in rtl8211e_config_init())
  static int rtl8211b_suspend(struct phy_device *phydev)
  {
  	phy_write(phydev, MII_MMD_DATA, BIT(9));
* Unmerged path drivers/net/phy/realtek.c
