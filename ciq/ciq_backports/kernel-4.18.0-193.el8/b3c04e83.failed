net/mlx5e: use indirect calls wrapper for skb allocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: use indirect calls wrapper for skb allocation (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.30%
commit-author Paolo Abeni <pabeni@redhat.com>
commit b3c04e8340824cae0f40bc2b4a009025b0d6e285
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/b3c04e83.failed

We can avoid an indirect call per packet wrapping the skb creation
with the appropriate helper.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Acked-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b3c04e8340824cae0f40bc2b4a009025b0d6e285)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 24a40c92fb92,0fe5f13d07cc..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -34,7 -34,7 +34,11 @@@
  #include <linux/ip.h>
  #include <linux/ipv6.h>
  #include <linux/tcp.h>
++<<<<<<< HEAD
 +#include <net/busy_poll.h>
++=======
+ #include <linux/indirect_call_wrapper.h>
++>>>>>>> b3c04e834082 (net/mlx5e: use indirect calls wrapper for skb allocation)
  #include <net/ip6_checksum.h>
  #include <net/page_pool.h>
  #include <net/inet_ecn.h>
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
