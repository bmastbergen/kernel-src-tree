net_sched: walk through all child classes in tc_bind_tclass()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Cong Wang <xiyou.wangcong@gmail.com>
commit 760d228e322e99cdf6d81b4b60a268b8f13cf67a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/760d228e.failed

In a complex TC class hierarchy like this:

tc qdisc add dev eth0 root handle 1:0 cbq bandwidth 100Mbit         \
  avpkt 1000 cell 8
tc class add dev eth0 parent 1:0 classid 1:1 cbq bandwidth 100Mbit  \
  rate 6Mbit weight 0.6Mbit prio 8 allot 1514 cell 8 maxburst 20      \
  avpkt 1000 bounded

tc filter add dev eth0 parent 1:0 protocol ip prio 1 u32 match ip \
  sport 80 0xffff flowid 1:3
tc filter add dev eth0 parent 1:0 protocol ip prio 1 u32 match ip \
  sport 25 0xffff flowid 1:4

tc class add dev eth0 parent 1:1 classid 1:3 cbq bandwidth 100Mbit  \
  rate 5Mbit weight 0.5Mbit prio 5 allot 1514 cell 8 maxburst 20      \
  avpkt 1000
tc class add dev eth0 parent 1:1 classid 1:4 cbq bandwidth 100Mbit  \
  rate 3Mbit weight 0.3Mbit prio 5 allot 1514 cell 8 maxburst 20      \
  avpkt 1000

where filters are installed on qdisc 1:0, so we can't merely
search from class 1:1 when creating class 1:3 and class 1:4. We have
to walk through all the child classes of the direct parent qdisc.
Otherwise we would miss filters those need reverse binding.

Fixes: 07d79fc7d94e ("net_sched: add reverse binding for tc class")
	Cc: Jamal Hadi Salim <jhs@mojatatu.com>
	Cc: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 760d228e322e99cdf6d81b4b60a268b8f13cf67a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_api.c
diff --cc net/sched/sch_api.c
index dc2ca624f837,50794125bf02..000000000000
--- a/net/sched/sch_api.c
+++ b/net/sched/sch_api.c
@@@ -1938,8 -1938,9 +1940,14 @@@ static int tc_bind_class_walker(struct 
  			struct tcf_bind_args arg = {};
  
  			arg.w.fn = tcf_node_bind;
++<<<<<<< HEAD
 +			arg.classid = clid;
 +			arg.cl = new_cl;
++=======
+ 			arg.classid = a->clid;
+ 			arg.base = cl;
+ 			arg.cl = a->new_cl;
++>>>>>>> 760d228e322e (net_sched: walk through all child classes in tc_bind_tclass())
  			tp->ops->walk(tp, &arg.w, true);
  		}
  	}
* Unmerged path net/sched/sch_api.c
