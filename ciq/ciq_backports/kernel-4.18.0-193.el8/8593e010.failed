SUNRPC: Fix congestion window race with disconnect

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 8593e010786181df887b001824ff8f3e52e2098f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8593e010.failed

If the congestion window closes just as the transport disconnects,
a reconnect is never driven because:

1. The XPRT_CONG_WAIT flag prevents tasks from taking the write lock
2. There's no wake-up of the first task on the xprt->sending queue

To address this, clear the congestion wait flag as part of
completing a disconnect.

Fixes: 75891f502f5f ("SUNRPC: Support for congestion control ... ")
	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 8593e010786181df887b001824ff8f3e52e2098f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprt.c
diff --cc net/sunrpc/xprt.c
index c4d4cd12e49e,83ec4edd2f91..000000000000
--- a/net/sunrpc/xprt.c
+++ b/net/sunrpc/xprt.c
@@@ -421,6 -456,26 +421,29 @@@ void xprt_release_rqst_cong(struct rpc_
  }
  EXPORT_SYMBOL_GPL(xprt_release_rqst_cong);
  
++<<<<<<< HEAD
++=======
+ static void xprt_clear_congestion_window_wait_locked(struct rpc_xprt *xprt)
+ {
+ 	if (test_and_clear_bit(XPRT_CWND_WAIT, &xprt->state))
+ 		__xprt_lock_write_next_cong(xprt);
+ }
+ 
+ /*
+  * Clear the congestion window wait flag and wake up the next
+  * entry on xprt->sending
+  */
+ static void
+ xprt_clear_congestion_window_wait(struct rpc_xprt *xprt)
+ {
+ 	if (test_and_clear_bit(XPRT_CWND_WAIT, &xprt->state)) {
+ 		spin_lock(&xprt->transport_lock);
+ 		__xprt_lock_write_next_cong(xprt);
+ 		spin_unlock(&xprt->transport_lock);
+ 	}
+ }
+ 
++>>>>>>> 8593e0107861 (SUNRPC: Fix congestion window race with disconnect)
  /**
   * xprt_adjust_cwnd - adjust transport congestion window
   * @xprt: pointer to xprt
@@@ -619,10 -674,12 +642,17 @@@ static void xprt_autoclose(struct work_
  void xprt_disconnect_done(struct rpc_xprt *xprt)
  {
  	dprintk("RPC:       disconnected transport %p\n", xprt);
 -	spin_lock(&xprt->transport_lock);
 +	spin_lock_bh(&xprt->transport_lock);
  	xprt_clear_connected(xprt);
++<<<<<<< HEAD
 +	xprt_wake_pending_tasks(xprt, -EAGAIN);
 +	spin_unlock_bh(&xprt->transport_lock);
++=======
+ 	xprt_clear_write_space_locked(xprt);
+ 	xprt_clear_congestion_window_wait_locked(xprt);
+ 	xprt_wake_pending_tasks(xprt, -ENOTCONN);
+ 	spin_unlock(&xprt->transport_lock);
++>>>>>>> 8593e0107861 (SUNRPC: Fix congestion window race with disconnect)
  }
  EXPORT_SYMBOL_GPL(xprt_disconnect_done);
  
* Unmerged path net/sunrpc/xprt.c
