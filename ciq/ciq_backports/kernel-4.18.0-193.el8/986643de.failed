nfp: flower: refactor tunnel key layer calculation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
commit 986643de5356b4ea6ca32ce0bfdae3e02e507a9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/986643de.failed

Refactor the key layer calculation function, in particular the tunnel
key layer calculation by introducing helper functions. This is done
in preparation for supporting GRE tunnel offloads.

	Signed-off-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: John Hurley <john.hurley@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 986643de5356b4ea6ca32ce0bfdae3e02e507a9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/flower/offload.c
diff --cc drivers/net/ethernet/netronome/nfp/flower/offload.c
index 9878f76b520f,6b28910442db..000000000000
--- a/drivers/net/ethernet/netronome/nfp/flower/offload.c
+++ b/drivers/net/ethernet/netronome/nfp/flower/offload.c
@@@ -243,44 -294,13 +294,21 @@@ nfp_flower_calculate_key_layers(struct 
  		if (flow_rule_match_key(rule, FLOW_DISSECTOR_KEY_ENC_OPTS))
  			flow_rule_match_enc_opts(rule, &enc_op);
  
++<<<<<<< HEAD
 +		switch (enc_ports.key->dst) {
 +		case htons(NFP_FL_VXLAN_PORT):
 +			*tun_type = NFP_FL_TUNNEL_VXLAN;
 +			key_layer |= NFP_FLOWER_LAYER_VXLAN;
 +			key_size += sizeof(struct nfp_flower_ipv4_udp_tun);
- 
- 			if (enc_op.key) {
- 				NL_SET_ERR_MSG_MOD(extack, "unsupported offload: encap options not supported on vxlan tunnels");
- 				return -EOPNOTSUPP;
- 			}
- 			break;
- 		case htons(GENEVE_UDP_PORT):
- 			if (!(priv->flower_ext_feats & NFP_FL_FEATS_GENEVE)) {
- 				NL_SET_ERR_MSG_MOD(extack, "unsupported offload: loaded firmware does not support geneve offload");
- 				return -EOPNOTSUPP;
- 			}
- 			*tun_type = NFP_FL_TUNNEL_GENEVE;
- 			key_layer |= NFP_FLOWER_LAYER_EXT_META;
- 			key_size += sizeof(struct nfp_flower_ext_meta);
- 			key_layer_two |= NFP_FLOWER_LAYER2_GENEVE;
- 			key_size += sizeof(struct nfp_flower_ipv4_udp_tun);
- 
- 			if (!enc_op.key)
- 				break;
- 			if (!(priv->flower_ext_feats &
- 			      NFP_FL_FEATS_GENEVE_OPT)) {
- 				NL_SET_ERR_MSG_MOD(extack, "unsupported offload: loaded firmware does not support geneve option offload");
- 				return -EOPNOTSUPP;
- 			}
- 			err = nfp_flower_calc_opt_layer(&enc_op, &key_layer_two,
- 							&key_size, extack);
- 			if (err)
- 				return err;
- 			break;
- 		default:
- 			NL_SET_ERR_MSG_MOD(extack, "unsupported offload: tunnel type unknown");
- 			return -EOPNOTSUPP;
- 		}
++=======
++>>>>>>> 986643de5356 (nfp: flower: refactor tunnel key layer calculation)
+ 
+ 		err = nfp_flower_calc_udp_tun_layer(enc_ports.key, enc_op.key,
+ 						    &key_layer_two, &key_layer,
+ 						    &key_size, priv, tun_type,
+ 						    extack);
+ 		if (err)
+ 			return err;
  
  		/* Ensure the ingress netdev matches the expected tun type. */
  		if (!nfp_fl_netdev_is_tunnel_type(netdev, *tun_type)) {
* Unmerged path drivers/net/ethernet/netronome/nfp/flower/offload.c
