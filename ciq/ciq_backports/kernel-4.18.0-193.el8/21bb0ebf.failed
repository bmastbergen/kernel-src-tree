arm64: arm_pmu: Remove unnecessary isb instruction

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [arm64] arm_pmu: Remove unnecessary isb instruction (Auger Eric) [1749501]
Rebuild_FUZZ: 92.47%
commit-author Andrew Murray <andrew.murray@arm.com>
commit 21bb0ebf5d78c669ed887f30889f2d28cf6bf7db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/21bb0ebf.failed

The armv8pmu_enable_event_counter function issues an isb instruction
after enabling a pair of counters - this doesn't provide any value
and is inconsistent with the armv8pmu_disable_event_counter.

In any case armv8pmu_enable_event_counter is always called with the
PMU stopped. Starting the PMU with armv8pmu_start results in an isb
instruction being issued prior to writing to PMCR_EL0.

Let's remove the unnecessary isb instruction.

	Signed-off-by: Andrew Murray <andrew.murray@arm.com>
	Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
	Acked-by: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
(cherry picked from commit 21bb0ebf5d78c669ed887f30889f2d28cf6bf7db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/perf_event.c
diff --cc arch/arm64/kernel/perf_event.c
index 019a00051790,cccf4fc86d67..000000000000
--- a/arch/arm64/kernel/perf_event.c
+++ b/arch/arm64/kernel/perf_event.c
@@@ -580,6 -526,15 +580,18 @@@ static inline int armv8pmu_enable_count
  	return idx;
  }
  
++<<<<<<< HEAD
++=======
+ static inline void armv8pmu_enable_event_counter(struct perf_event *event)
+ {
+ 	int idx = event->hw.idx;
+ 
+ 	armv8pmu_enable_counter(idx);
+ 	if (armv8pmu_event_is_chained(event))
+ 		armv8pmu_enable_counter(idx - 1);
+ }
+ 
++>>>>>>> 21bb0ebf5d78 (arm64: arm_pmu: Remove unnecessary isb instruction)
  static inline int armv8pmu_disable_counter(int idx)
  {
  	u32 counter = ARMV8_IDX_TO_COUNTER(idx);
* Unmerged path arch/arm64/kernel/perf_event.c
