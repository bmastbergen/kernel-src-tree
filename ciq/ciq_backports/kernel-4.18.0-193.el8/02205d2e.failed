bpf: media: properly use bpf_prog_array api

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Stanislav Fomichev <sdf@google.com>
commit 02205d2ed6fe26a8f4fd9e9cec251d1dc7f79316
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/02205d2e.failed

Now that we don't have __rcu markers on the bpf_prog_array helpers,
let's use proper rcu_dereference_protected to obtain array pointer
under mutex.

	Cc: linux-media@vger.kernel.org
	Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
	Cc: Sean Young <sean@mess.org>
	Signed-off-by: Stanislav Fomichev <sdf@google.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 02205d2ed6fe26a8f4fd9e9cec251d1dc7f79316)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/rc/bpf-lirc.c
diff --cc drivers/media/rc/bpf-lirc.c
index 96e87f2d514d,0a0ce620e4a2..000000000000
--- a/drivers/media/rc/bpf-lirc.c
+++ b/drivers/media/rc/bpf-lirc.c
@@@ -8,7 -8,8 +8,12 @@@
  #include <linux/bpf_lirc.h>
  #include "rc-core-priv.h"
  
++<<<<<<< HEAD
 +#include <linux/rh_features.h>
++=======
+ #define lirc_rcu_dereference(p)						\
+ 	rcu_dereference_protected(p, lockdep_is_held(&ir_raw_handler_lock))
++>>>>>>> 02205d2ed6fe (bpf: media: properly use bpf_prog_array api)
  
  /*
   * BPF interface for raw IR
* Unmerged path drivers/media/rc/bpf-lirc.c
