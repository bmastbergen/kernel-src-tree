mt76: move mac_work in mt76_dev

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 37426fb67a017f0140e529fe4b09e490989cdbf0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/37426fb6.failed

Move mac_work delayed work in mt76_dev data structure since
it is used by all drivers and it will be reused adding mac work to
mt7615

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 37426fb67a017f0140e529fe4b09e490989cdbf0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt76.h
#	drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
#	drivers/net/wireless/mediatek/mt76/mt76x0/usb.c
diff --cc drivers/net/wireless/mediatek/mt76/mt76.h
index 1c8ddf9c225d,21c24a31bb61..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76.h
@@@ -453,7 -448,6 +453,10 @@@ struct mt76_dev 
  	int tx_dma_idx[4];
  
  	struct tasklet_struct tx_tasklet;
++<<<<<<< HEAD
 +	struct napi_struct tx_napi;
++=======
++>>>>>>> 37426fb67a01 (mt76: move mac_work in mt76_dev)
  	struct delayed_work mac_work;
  
  	wait_queue_head_t tx_wait;
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
index 10ced8d17526,488b19c8bbd7..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
@@@ -144,8 -144,6 +144,11 @@@ struct mt7603_dev 
  
  	unsigned int reset_cause[__RESET_CAUSE_MAX];
  
++<<<<<<< HEAD
 +	struct delayed_work mac_work;
 +	struct tasklet_struct tx_tasklet;
++=======
++>>>>>>> 37426fb67a01 (mt76: move mac_work in mt76_dev)
  	struct tasklet_struct pre_tbtt_tasklet;
  };
  
diff --cc drivers/net/wireless/mediatek/mt76/mt76x0/usb.c
index 645f4d15fb61,ee8d4b5c4558..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x0/usb.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x0/usb.c
@@@ -80,7 -86,7 +80,11 @@@ static void mt76x0u_stop(struct ieee802
  	clear_bit(MT76_STATE_RUNNING, &dev->mt76.state);
  	cancel_delayed_work_sync(&dev->cal_work);
  	cancel_delayed_work_sync(&dev->mt76.mac_work);
++<<<<<<< HEAD
 +	mt76u_stop_tx(&dev->mt76);
++=======
+ 	mt76u_stop_stat_wk(&dev->mt76);
++>>>>>>> 37426fb67a01 (mt76: move mac_work in mt76_dev)
  	mt76x02u_exit_beacon_config(dev);
  
  	if (test_bit(MT76_REMOVED, &dev->mt76.state))
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76.h
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/init.c b/drivers/net/wireless/mediatek/mt76/mt7603/init.c
index 9f5032985cdd..d394839f1bd8 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/init.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/init.c
@@ -513,7 +513,7 @@ int mt7603_register_device(struct mt7603_dev *dev)
 
 	spin_lock_init(&dev->ps_lock);
 
-	INIT_DELAYED_WORK(&dev->mac_work, mt7603_mac_work);
+	INIT_DELAYED_WORK(&dev->mt76.mac_work, mt7603_mac_work);
 	tasklet_init(&dev->pre_tbtt_tasklet, mt7603_pre_tbtt_tasklet,
 		     (unsigned long)dev);
 
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/mac.c b/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
index 5388d1a6ffcf..8afcab43d0b1 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
@@ -1666,7 +1666,7 @@ mt7603_false_cca_check(struct mt7603_dev *dev)
 void mt7603_mac_work(struct work_struct *work)
 {
 	struct mt7603_dev *dev = container_of(work, struct mt7603_dev,
-					      mac_work.work);
+					      mt76.mac_work.work);
 	bool reset = false;
 
 	mt76_tx_status_check(&dev->mt76, NULL, false);
@@ -1719,6 +1719,6 @@ void mt7603_mac_work(struct work_struct *work)
 	if (reset)
 		mt7603_mac_watchdog_reset(dev);
 
-	ieee80211_queue_delayed_work(mt76_hw(dev), &dev->mac_work,
+	ieee80211_queue_delayed_work(mt76_hw(dev), &dev->mt76.mac_work,
 				     msecs_to_jiffies(MT7603_WATCHDOG_TIME));
 }
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/main.c b/drivers/net/wireless/mediatek/mt76/mt7603/main.c
index 088f86416a97..b796208b2c6f 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/main.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/main.c
@@ -16,7 +16,7 @@ mt7603_start(struct ieee80211_hw *hw)
 	mt7603_mac_start(dev);
 	dev->survey_time = ktime_get_boottime();
 	set_bit(MT76_STATE_RUNNING, &dev->mt76.state);
-	mt7603_mac_work(&dev->mac_work.work);
+	mt7603_mac_work(&dev->mt76.mac_work.work);
 
 	return 0;
 }
@@ -27,7 +27,7 @@ mt7603_stop(struct ieee80211_hw *hw)
 	struct mt7603_dev *dev = hw->priv;
 
 	clear_bit(MT76_STATE_RUNNING, &dev->mt76.state);
-	cancel_delayed_work_sync(&dev->mac_work);
+	cancel_delayed_work_sync(&dev->mt76.mac_work);
 	mt7603_mac_stop(dev);
 }
 
@@ -132,7 +132,7 @@ mt7603_set_channel(struct mt7603_dev *dev, struct cfg80211_chan_def *def)
 	u8 bw = MT_BW_20;
 	bool failed = false;
 
-	cancel_delayed_work_sync(&dev->mac_work);
+	cancel_delayed_work_sync(&dev->mt76.mac_work);
 
 	mutex_lock(&dev->mt76.mutex);
 	set_bit(MT76_RESET, &dev->mt76.state);
@@ -171,7 +171,7 @@ mt7603_set_channel(struct mt7603_dev *dev, struct cfg80211_chan_def *def)
 
 	mt76_txq_schedule_all(&dev->mt76);
 
-	ieee80211_queue_delayed_work(mt76_hw(dev), &dev->mac_work,
+	ieee80211_queue_delayed_work(mt76_hw(dev), &dev->mt76.mac_work,
 				     MT7603_WATCHDOG_TIME);
 
 	/* reset channel stats */
@@ -189,7 +189,7 @@ mt7603_set_channel(struct mt7603_dev *dev, struct cfg80211_chan_def *def)
 	mutex_unlock(&dev->mt76.mutex);
 
 	if (failed)
-		mt7603_mac_work(&dev->mac_work.work);
+		mt7603_mac_work(&dev->mt76.mac_work.work);
 
 	return ret;
 }
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x0/usb.c
