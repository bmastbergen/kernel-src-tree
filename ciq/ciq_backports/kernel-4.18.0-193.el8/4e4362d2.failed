xfrm: support output_mark for offload ESP packets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Ulrich Weber <ulrich.weber@gmail.com>
commit 4e4362d2bf2a49ff44dbbc9585207977ca3d71d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4e4362d2.failed

Commit 9b42c1f179a6 ("xfrm: Extend the output_mark") added output_mark
support but missed ESP offload support.

xfrm_smark_get() is not called within xfrm_input() for packets coming
from esp4_gro_receive() or esp6_gro_receive(). Therefore call
xfrm_smark_get() directly within these functions.

Fixes: 9b42c1f179a6 ("xfrm: Extend the output_mark to support input direction and masking.")
	Signed-off-by: Ulrich Weber <ulrich.weber@gmail.com>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit 4e4362d2bf2a49ff44dbbc9585207977ca3d71d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/esp4_offload.c
#	net/ipv6/esp6_offload.c
diff --cc net/ipv4/esp4_offload.c
index 670e7fb2a6de,e2e219c7854a..000000000000
--- a/net/ipv4/esp4_offload.c
+++ b/net/ipv4/esp4_offload.c
@@@ -56,8 -57,10 +56,15 @@@ static struct sk_buff **esp4_gro_receiv
  		if (!x)
  			goto out_reset;
  
++<<<<<<< HEAD
 +		skb->sp->xvec[skb->sp->len++] = x;
 +		skb->sp->olen++;
++=======
+ 		skb->mark = xfrm_smark_get(skb->mark, x);
+ 
+ 		sp->xvec[sp->len++] = x;
+ 		sp->olen++;
++>>>>>>> 4e4362d2bf2a (xfrm: support output_mark for offload ESP packets)
  
  		xo = xfrm_offload(skb);
  		if (!xo) {
diff --cc net/ipv6/esp6_offload.c
index 4387130de1c1,fd535053245b..000000000000
--- a/net/ipv6/esp6_offload.c
+++ b/net/ipv6/esp6_offload.c
@@@ -78,8 -79,10 +78,15 @@@ static struct sk_buff **esp6_gro_receiv
  		if (!x)
  			goto out_reset;
  
++<<<<<<< HEAD
 +		skb->sp->xvec[skb->sp->len++] = x;
 +		skb->sp->olen++;
++=======
+ 		skb->mark = xfrm_smark_get(skb->mark, x);
+ 
+ 		sp->xvec[sp->len++] = x;
+ 		sp->olen++;
++>>>>>>> 4e4362d2bf2a (xfrm: support output_mark for offload ESP packets)
  
  		xo = xfrm_offload(skb);
  		if (!xo) {
* Unmerged path net/ipv4/esp4_offload.c
* Unmerged path net/ipv6/esp6_offload.c
