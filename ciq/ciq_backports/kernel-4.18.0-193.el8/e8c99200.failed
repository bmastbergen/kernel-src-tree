libceph: don't call crypto_free_sync_skcipher() on a NULL tfm

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jia-Ju Bai <baijiaju1990@gmail.com>
commit e8c99200b4d117c340c392ebd5e62d85dfeed027
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e8c99200.failed

In set_secret(), key->tfm is assigned to NULL on line 55, and then
ceph_crypto_key_destroy(key) is executed.

ceph_crypto_key_destroy(key)
  crypto_free_sync_skcipher(key->tfm)
    crypto_free_skcipher(&tfm->base);

This happens to work because crypto_sync_skcipher is a trivial wrapper
around crypto_skcipher: &tfm->base is still 0 and crypto_free_skcipher()
handles that.  Let's not rely on the layout of crypto_sync_skcipher.

This bug is found by a static analysis tool STCheck written by us.

Fixes: 69d6302b65a8 ("libceph: Remove VLA usage of skcipher").
	Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
	Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit e8c99200b4d117c340c392ebd5e62d85dfeed027)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ceph/crypto.c
diff --cc net/ceph/crypto.c
index 02172c408ff2,4f75df40fb12..000000000000
--- a/net/ceph/crypto.c
+++ b/net/ceph/crypto.c
@@@ -136,8 -136,10 +136,15 @@@ void ceph_crypto_key_destroy(struct cep
  	if (key) {
  		kfree(key->key);
  		key->key = NULL;
++<<<<<<< HEAD
 +		crypto_free_skcipher(key->tfm);
 +		key->tfm = NULL;
++=======
+ 		if (key->tfm) {
+ 			crypto_free_sync_skcipher(key->tfm);
+ 			key->tfm = NULL;
+ 		}
++>>>>>>> e8c99200b4d1 (libceph: don't call crypto_free_sync_skcipher() on a NULL tfm)
  	}
  }
  
* Unmerged path net/ceph/crypto.c
