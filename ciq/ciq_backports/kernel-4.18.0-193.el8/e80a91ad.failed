PCI: Add dma_ranges window list

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Srinath Mannam <srinath.mannam@broadcom.com>
commit e80a91ad302b3b66822756afc61f9f9c1658b9c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e80a91ad.failed

Add a dma_ranges field in PCI host bridge structure to hold resource
entries list of memory regions in sorted order representing memory ranges
that can be accessed through DMA transactions.

Based-on-a-patch-by: Oza Pawandeep <oza.oza@broadcom.com>
	Signed-off-by: Srinath Mannam <srinath.mannam@broadcom.com>
[lorenzo.pieralisi@arm.com: updated commit log]
	Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Oza Pawandeep <poza@codeaurora.org>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit e80a91ad302b3b66822756afc61f9f9c1658b9c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/probe.c
diff --cc drivers/pci/probe.c
index b5792b7d4277,2a651089a606..000000000000
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@@ -586,9 -586,17 +586,14 @@@ static void pci_release_host_bridge_dev
  	kfree(to_pci_host_bridge(dev));
  }
  
 -struct pci_host_bridge *pci_alloc_host_bridge(size_t priv)
 +static void pci_init_host_bridge(struct pci_host_bridge *bridge)
  {
 -	struct pci_host_bridge *bridge;
 -
 -	bridge = kzalloc(sizeof(*bridge) + priv, GFP_KERNEL);
 -	if (!bridge)
 -		return NULL;
 -
  	INIT_LIST_HEAD(&bridge->windows);
++<<<<<<< HEAD
++=======
+ 	INIT_LIST_HEAD(&bridge->dma_ranges);
+ 	bridge->dev.release = pci_release_host_bridge_dev;
++>>>>>>> e80a91ad302b (PCI: Add dma_ranges window list)
  
  	/*
  	 * We assume we can manage these PCIe features.  Some systems may
@@@ -627,7 -623,8 +632,12 @@@ struct pci_host_bridge *devm_pci_alloc_
  	if (!bridge)
  		return NULL;
  
++<<<<<<< HEAD
 +	pci_init_host_bridge(bridge);
++=======
+ 	INIT_LIST_HEAD(&bridge->windows);
+ 	INIT_LIST_HEAD(&bridge->dma_ranges);
++>>>>>>> e80a91ad302b (PCI: Add dma_ranges window list)
  	bridge->dev.release = devm_pci_release_host_bridge_dev;
  
  	return bridge;
* Unmerged path drivers/pci/probe.c
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 9c63b78bade6..abbf3c7aab3a 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -513,6 +513,7 @@ struct pci_host_bridge {
 	void		*sysdata;
 	int		busnr;
 	struct list_head windows;	/* resource_entry */
+	struct list_head dma_ranges;	/* dma ranges resource list */
 	u8 (*swizzle_irq)(struct pci_dev *, u8 *); /* Platform IRQ swizzler */
 	int (*map_irq)(const struct pci_dev *, u8, u8);
 	void (*release_fn)(struct pci_host_bridge *);
