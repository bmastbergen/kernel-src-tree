drm/mgag200: Extract device type from flags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Thomas Zimmermann <tzimmermann@suse.de>
commit 3a8a5aba142a44eaeba0cb0ec1b4a8f177b5e59a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3a8a5aba.failed

Adds a conversion function that extracts the device type from the
PCI id-table flags. Allows for storing additional information in the
other flag bits.

	Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
Fixes: 81da87f63a1e ("drm: Replace drm_gem_vram_push_to_system() with kunmap + unpin")
	Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: John Donnelly <john.p.donnelly@oracle.com>
	Cc: Gerd Hoffmann <kraxel@redhat.com>
	Cc: Dave Airlie <airlied@redhat.com>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Maxime Ripard <mripard@kernel.org>
	Cc: David Airlie <airlied@linux.ie>
	Cc: Sam Ravnborg <sam@ravnborg.org>
	Cc: Emil Velikov <emil.velikov@collabora.com>
	Cc: "Y.C. Chen" <yc_chen@aspeedtech.com>
	Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Cc: "Jos√© Roberto de Souza" <jose.souza@intel.com>
	Cc: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
	Cc: dri-devel@lists.freedesktop.org
	Cc: <stable@vger.kernel.org> # v5.3+
Link: https://patchwork.freedesktop.org/patch/msgid/20191126101529.20356-2-tzimmermann@suse.de
(cherry picked from commit 3a8a5aba142a44eaeba0cb0ec1b4a8f177b5e59a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/mgag200/mgag200_drv.h
diff --cc drivers/gpu/drm/mgag200/mgag200_drv.h
index 0aaedc554879,976404634092..000000000000
--- a/drivers/gpu/drm/mgag200/mgag200_drv.h
+++ b/drivers/gpu/drm/mgag200/mgag200_drv.h
@@@ -219,23 -183,11 +221,31 @@@ struct mga_device 
  	u32 unique_rev_id;
  };
  
++<<<<<<< HEAD
 +
 +struct mgag200_bo {
 +	struct ttm_buffer_object bo;
 +	struct ttm_placement placement;
 +	struct ttm_bo_kmap_obj kmap;
 +	struct drm_gem_object gem;
 +	struct ttm_place placements[3];
 +	int pin_count;
 +};
 +#define gem_to_mga_bo(gobj) container_of((gobj), struct mgag200_bo, gem)
 +
 +static inline struct mgag200_bo *
 +mgag200_bo(struct ttm_buffer_object *bo)
 +{
 +	return container_of(bo, struct mgag200_bo, bo);
 +}
 +
++=======
+ static inline enum mga_type
+ mgag200_type_from_driver_data(kernel_ulong_t driver_data)
+ {
+ 	return (enum mga_type)(driver_data & MGAG200_TYPE_MASK);
+ }
++>>>>>>> 3a8a5aba142a (drm/mgag200: Extract device type from flags)
  				/* mgag200_mode.c */
  int mgag200_modeset_init(struct mga_device *mdev);
  void mgag200_modeset_fini(struct mga_device *mdev);
* Unmerged path drivers/gpu/drm/mgag200/mgag200_drv.h
diff --git a/drivers/gpu/drm/mgag200/mgag200_main.c b/drivers/gpu/drm/mgag200/mgag200_main.c
index 163255099779..8e584a2786d6 100644
--- a/drivers/gpu/drm/mgag200/mgag200_main.c
+++ b/drivers/gpu/drm/mgag200/mgag200_main.c
@@ -152,7 +152,7 @@ static int mgag200_device_init(struct drm_device *dev,
 	struct mga_device *mdev = dev->dev_private;
 	int ret, option;
 
-	mdev->type = flags;
+	mdev->type = mgag200_type_from_driver_data(flags);
 
 	/* Hardcode the number of CRTCs to 1 */
 	mdev->num_crtc = 1;
