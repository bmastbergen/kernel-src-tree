RDMA: Move owner into struct ib_device_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit 7a15414252ae4f1d450462d83f883b2d9d8036ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7a154142.failed

This more closely follows how other subsytems work, with owner being a
member of the structure containing the function pointers.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 7a15414252ae4f1d450462d83f883b2d9d8036ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
#	drivers/infiniband/hw/bnxt_re/main.c
#	drivers/infiniband/hw/cxgb3/iwch_provider.c
#	drivers/infiniband/hw/cxgb4/provider.c
#	drivers/infiniband/hw/efa/efa_main.c
#	drivers/infiniband/hw/hfi1/verbs.c
#	drivers/infiniband/hw/hns/hns_roce_main.c
#	drivers/infiniband/hw/i40iw/i40iw_verbs.c
#	drivers/infiniband/hw/mlx4/main.c
#	drivers/infiniband/hw/mlx5/main.c
#	drivers/infiniband/hw/mthca/mthca_provider.c
#	drivers/infiniband/hw/nes/nes_verbs.c
#	drivers/infiniband/hw/ocrdma/ocrdma_main.c
#	drivers/infiniband/hw/qedr/main.c
#	drivers/infiniband/hw/qib/qib_verbs.c
#	drivers/infiniband/hw/usnic/usnic_ib_main.c
#	drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
#	drivers/infiniband/sw/rxe/rxe_verbs.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/device.c
index ec96a7b1c811,357d74c8df2b..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -1269,6 -2318,18 +1269,21 @@@ void ib_set_device_ops(struct ib_devic
  
  #define SET_OBJ_SIZE(ptr, name) SET_DEVICE_OP(ptr, size_##name)
  
++<<<<<<< HEAD
++=======
+ 	if (ops->driver_id != RDMA_DRIVER_UNKNOWN) {
+ 		WARN_ON(dev_ops->driver_id != RDMA_DRIVER_UNKNOWN &&
+ 			dev_ops->driver_id != ops->driver_id);
+ 		dev_ops->driver_id = ops->driver_id;
+ 	}
+ 	if (ops->owner) {
+ 		WARN_ON(dev_ops->owner && dev_ops->owner != ops->owner);
+ 		dev_ops->owner = ops->owner;
+ 	}
+ 	if (ops->uverbs_abi_ver)
+ 		dev_ops->uverbs_abi_ver = ops->uverbs_abi_ver;
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	SET_DEVICE_OP(dev_ops, add_gid);
  	SET_DEVICE_OP(dev_ops, advise_mr);
  	SET_DEVICE_OP(dev_ops, alloc_dm);
diff --cc drivers/infiniband/hw/bnxt_re/main.c
index 1f64cd1c51a2,351c420248a0..000000000000
--- a/drivers/infiniband/hw/bnxt_re/main.c
+++ b/drivers/infiniband/hw/bnxt_re/main.c
@@@ -596,6 -596,10 +596,13 @@@ static void bnxt_re_unregister_ib(struc
  }
  
  static const struct ib_device_ops bnxt_re_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_BNXT_RE,
+ 	.uverbs_abi_ver = BNXT_RE_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.add_gid = bnxt_re_add_gid,
  	.alloc_hw_stats = bnxt_re_ib_alloc_hw_stats,
  	.alloc_mr = bnxt_re_alloc_mr,
diff --cc drivers/infiniband/hw/cxgb3/iwch_provider.c
index b9bb151437dc,1b35941eee74..000000000000
--- a/drivers/infiniband/hw/cxgb3/iwch_provider.c
+++ b/drivers/infiniband/hw/cxgb3/iwch_provider.c
@@@ -1320,6 -1236,10 +1320,13 @@@ static void get_dev_fw_ver_str(struct i
  }
  
  static const struct ib_device_ops iwch_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_CXGB3,
+ 	.uverbs_abi_ver = IWCH_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_hw_stats	= iwch_alloc_stats,
  	.alloc_mr = iwch_alloc_mr,
  	.alloc_mw = iwch_alloc_mw,
diff --cc drivers/infiniband/hw/cxgb4/provider.c
index e03b14a450bc,2b1f2443b7da..000000000000
--- a/drivers/infiniband/hw/cxgb4/provider.c
+++ b/drivers/infiniband/hw/cxgb4/provider.c
@@@ -506,6 -489,10 +506,13 @@@ static int fill_res_entry(struct sk_buf
  }
  
  static const struct ib_device_ops c4iw_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_CXGB4,
+ 	.uverbs_abi_ver = C4IW_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_hw_stats = c4iw_alloc_stats,
  	.alloc_mr = c4iw_alloc_mr,
  	.alloc_mw = c4iw_alloc_mw,
diff --cc drivers/infiniband/hw/efa/efa_main.c
index 44152ed1ee86,b891ee239a67..000000000000
--- a/drivers/infiniband/hw/efa/efa_main.c
+++ b/drivers/infiniband/hw/efa/efa_main.c
@@@ -197,6 -197,10 +197,13 @@@ static void efa_stats_init(struct efa_d
  }
  
  static const struct ib_device_ops efa_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_EFA,
+ 	.uverbs_abi_ver = EFA_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_pd = efa_alloc_pd,
  	.alloc_ucontext = efa_alloc_ucontext,
  	.create_ah = efa_create_ah,
diff --cc drivers/infiniband/hw/hfi1/verbs.c
index e52467f6adab,1f36db98240f..000000000000
--- a/drivers/infiniband/hw/hfi1/verbs.c
+++ b/drivers/infiniband/hw/hfi1/verbs.c
@@@ -1778,6 -1779,9 +1778,12 @@@ static int get_hw_stats(struct ib_devic
  }
  
  static const struct ib_device_ops hfi1_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_HFI1,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_hw_stats = alloc_hw_stats,
  	.alloc_rdma_netdev = hfi1_vnic_alloc_rn,
  	.get_dev_fw_str = hfi1_get_dev_fw_str,
diff --cc drivers/infiniband/hw/hns/hns_roce_main.c
index e6509f248a6a,f07b2ec86ec2..000000000000
--- a/drivers/infiniband/hw/hns/hns_roce_main.c
+++ b/drivers/infiniband/hw/hns/hns_roce_main.c
@@@ -480,6 -414,10 +480,13 @@@ static void hns_roce_unregister_device(
  }
  
  static const struct ib_device_ops hns_roce_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_HNS,
+ 	.uverbs_abi_ver = 1,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.add_gid = hns_roce_add_gid,
  	.alloc_pd = hns_roce_alloc_pd,
  	.alloc_ucontext = hns_roce_alloc_ucontext,
diff --cc drivers/infiniband/hw/i40iw/i40iw_verbs.c
index c58fa19da4cf,bfe16e6f04f4..000000000000
--- a/drivers/infiniband/hw/i40iw/i40iw_verbs.c
+++ b/drivers/infiniband/hw/i40iw/i40iw_verbs.c
@@@ -2685,6 -2650,11 +2685,14 @@@ static int i40iw_query_pkey(struct ib_d
  }
  
  static const struct ib_device_ops i40iw_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_I40IW,
+ 	/* NOTE: Older kernels wrongly use 0 for the uverbs_abi_ver */
+ 	.uverbs_abi_ver = I40IW_ABI_VER,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_hw_stats = i40iw_alloc_hw_stats,
  	.alloc_mr = i40iw_alloc_mr,
  	.alloc_pd = i40iw_alloc_pd,
diff --cc drivers/infiniband/hw/mlx4/main.c
index d66002a31000,5d7a87842291..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -2531,6 -2510,10 +2531,13 @@@ static void get_fw_ver_str(struct ib_de
  }
  
  static const struct ib_device_ops mlx4_ib_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_MLX4,
+ 	.uverbs_abi_ver = MLX4_IB_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.add_gid = mlx4_ib_add_gid,
  	.alloc_mr = mlx4_ib_alloc_mr,
  	.alloc_pd = mlx4_ib_alloc_pd,
diff --cc drivers/infiniband/hw/mlx5/main.c
index 9937619aa9d5,1e3d936ed809..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5926,6 -6123,10 +5925,13 @@@ static void mlx5_ib_stage_flow_db_clean
  }
  
  static const struct ib_device_ops mlx5_ib_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_MLX5,
+ 	.uverbs_abi_ver	= MLX5_IB_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.add_gid = mlx5_ib_add_gid,
  	.alloc_mr = mlx5_ib_alloc_mr,
  	.alloc_pd = mlx5_ib_alloc_pd,
diff --cc drivers/infiniband/hw/mthca/mthca_provider.c
index ae6b236e4756,b128ff76f709..000000000000
--- a/drivers/infiniband/hw/mthca/mthca_provider.c
+++ b/drivers/infiniband/hw/mthca/mthca_provider.c
@@@ -1194,6 -1153,10 +1194,13 @@@ static void get_dev_fw_str(struct ib_de
  }
  
  static const struct ib_device_ops mthca_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_MTHCA,
+ 	.uverbs_abi_ver = MTHCA_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_pd = mthca_alloc_pd,
  	.alloc_ucontext = mthca_alloc_ucontext,
  	.attach_mcast = mthca_multicast_attach,
@@@ -1276,9 -1247,6 +1283,12 @@@ int mthca_register_device(struct mthca_
  	if (ret)
  		return ret;
  
++<<<<<<< HEAD
 +	dev->ib_dev.owner                = THIS_MODULE;
 +
 +	dev->ib_dev.uverbs_abi_ver	 = MTHCA_UVERBS_ABI_VERSION;
++=======
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	dev->ib_dev.uverbs_cmd_mask	 =
  		(1ull << IB_USER_VERBS_CMD_GET_CONTEXT)		|
  		(1ull << IB_USER_VERBS_CMD_QUERY_DEVICE)	|
diff --cc drivers/infiniband/hw/nes/nes_verbs.c
index cece4f7f433e,db044b2eaead..000000000000
--- a/drivers/infiniband/hw/nes/nes_verbs.c
+++ b/drivers/infiniband/hw/nes/nes_verbs.c
@@@ -3576,6 -3558,11 +3576,14 @@@ static void get_dev_fw_str(struct ib_de
  }
  
  static const struct ib_device_ops nes_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_NES,
+ 	/* NOTE: Older kernels wrongly use 0 for the uverbs_abi_ver */
+ 	.uverbs_abi_ver = NES_ABI_USERSPACE_VER,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_mr = nes_alloc_mr,
  	.alloc_mw = nes_alloc_mw,
  	.alloc_pd = nes_alloc_pd,
diff --cc drivers/infiniband/hw/ocrdma/ocrdma_main.c
index f315478642e2,b326313d413f..000000000000
--- a/drivers/infiniband/hw/ocrdma/ocrdma_main.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_main.c
@@@ -144,6 -144,10 +144,13 @@@ static const struct attribute_group ocr
  };
  
  static const struct ib_device_ops ocrdma_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_OCRDMA,
+ 	.uverbs_abi_ver = OCRDMA_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_mr = ocrdma_alloc_mr,
  	.alloc_pd = ocrdma_alloc_pd,
  	.alloc_ucontext = ocrdma_alloc_ucontext,
@@@ -194,8 -204,6 +201,11 @@@ static int ocrdma_register_device(struc
  	BUILD_BUG_ON(sizeof(OCRDMA_NODE_DESC) > IB_DEVICE_NODE_DESC_MAX);
  	memcpy(dev->ibdev.node_desc, OCRDMA_NODE_DESC,
  	       sizeof(OCRDMA_NODE_DESC));
++<<<<<<< HEAD
 +	dev->ibdev.owner = THIS_MODULE;
 +	dev->ibdev.uverbs_abi_ver = OCRDMA_ABI_VERSION;
++=======
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	dev->ibdev.uverbs_cmd_mask =
  	    OCRDMA_UVERBS(GET_CONTEXT) |
  	    OCRDMA_UVERBS(QUERY_DEVICE) |
diff --cc drivers/infiniband/hw/qedr/main.c
index 65953b3f1f4f,a0bb07ba0f3c..000000000000
--- a/drivers/infiniband/hw/qedr/main.c
+++ b/drivers/infiniband/hw/qedr/main.c
@@@ -188,6 -183,10 +188,13 @@@ static void qedr_roce_register_device(s
  }
  
  static const struct ib_device_ops qedr_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_QEDR,
+ 	.uverbs_abi_ver = QEDR_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_mr = qedr_alloc_mr,
  	.alloc_pd = qedr_alloc_pd,
  	.alloc_ucontext = qedr_alloc_ucontext,
@@@ -231,8 -235,6 +238,11 @@@ static int qedr_register_device(struct 
  
  	dev->ibdev.node_guid = dev->attr.node_guid;
  	memcpy(dev->ibdev.node_desc, QEDR_NODE_DESC, sizeof(QEDR_NODE_DESC));
++<<<<<<< HEAD
 +	dev->ibdev.owner = THIS_MODULE;
 +	dev->ibdev.uverbs_abi_ver = QEDR_ABI_VERSION;
++=======
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  
  	dev->ibdev.uverbs_cmd_mask = QEDR_UVERBS(GET_CONTEXT) |
  				     QEDR_UVERBS(QUERY_DEVICE) |
diff --cc drivers/infiniband/hw/qib/qib_verbs.c
index 5ff32d32c61c,54310fd6c7b6..000000000000
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@@ -1482,6 -1482,9 +1482,12 @@@ static void qib_fill_device_attr(struc
  }
  
  static const struct ib_device_ops qib_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_QIB,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.init_port = qib_create_port_files,
  	.modify_device = qib_modify_device,
  	.process_mad = qib_process_mad,
diff --cc drivers/infiniband/hw/usnic/usnic_ib_main.c
index 6b56f4f2222a,e701322dc740..000000000000
--- a/drivers/infiniband/hw/usnic/usnic_ib_main.c
+++ b/drivers/infiniband/hw/usnic/usnic_ib_main.c
@@@ -316,9 -329,12 +316,16 @@@ static void usnic_get_dev_fw_str(struc
  }
  
  static const struct ib_device_ops usnic_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_USNIC,
+ 	.uverbs_abi_ver = USNIC_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_pd = usnic_ib_alloc_pd,
  	.alloc_ucontext = usnic_ib_alloc_ucontext,
 +	.create_ah = usnic_ib_create_ah,
  	.create_cq = usnic_ib_create_cq,
  	.create_qp = usnic_ib_create_qp,
  	.dealloc_pd = usnic_ib_dealloc_pd,
diff --cc drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
index 02c7ba35823c,0c48464ffff1..000000000000
--- a/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
+++ b/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
@@@ -144,6 -144,10 +144,13 @@@ static int pvrdma_port_immutable(struc
  }
  
  static const struct ib_device_ops pvrdma_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_VMW_PVRDMA,
+ 	.uverbs_abi_ver = PVRDMA_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.add_gid = pvrdma_add_gid,
  	.alloc_mr = pvrdma_alloc_mr,
  	.alloc_pd = pvrdma_alloc_pd,
@@@ -192,10 -202,8 +199,9 @@@ static int pvrdma_register_device(struc
  	dev->ib_dev.node_guid = dev->dsr->caps.node_guid;
  	dev->sys_image_guid = dev->dsr->caps.sys_image_guid;
  	dev->flags = 0;
- 	dev->ib_dev.owner = THIS_MODULE;
  	dev->ib_dev.num_comp_vectors = 1;
  	dev->ib_dev.dev.parent = &dev->pdev->dev;
 +	dev->ib_dev.uverbs_abi_ver = PVRDMA_UVERBS_ABI_VERSION;
  	dev->ib_dev.uverbs_cmd_mask =
  		(1ull << IB_USER_VERBS_CMD_GET_CONTEXT)		|
  		(1ull << IB_USER_VERBS_CMD_QUERY_DEVICE)	|
diff --cc drivers/infiniband/sw/rxe/rxe_verbs.c
index f3188f269481,046129393215..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_verbs.c
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.c
@@@ -1126,7 -1101,20 +1126,14 @@@ static const struct attribute_group rxe
  	.attrs = rxe_dev_attributes,
  };
  
 -static int rxe_enable_driver(struct ib_device *ib_dev)
 -{
 -	struct rxe_dev *rxe = container_of(ib_dev, struct rxe_dev, ib_dev);
 -
 -	rxe_set_port_state(rxe);
 -	dev_info(&rxe->ib_dev.dev, "added %s\n", netdev_name(rxe->ndev));
 -	return 0;
 -}
 -
  static const struct ib_device_ops rxe_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.owner = THIS_MODULE,
+ 	.driver_id = RDMA_DRIVER_RXE,
+ 	.uverbs_abi_ver = RXE_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	.alloc_hw_stats = rxe_ib_alloc_hw_stats,
  	.alloc_mr = rxe_alloc_mr,
  	.alloc_pd = rxe_alloc_pd,
diff --cc include/rdma/ib_verbs.h
index 714b9b5e3733,d1f16a6c4810..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2290,6 -2329,10 +2290,13 @@@ struct uverbs_attr_bundle
   * need to define the supported operations, otherwise they will be set to null.
   */
  struct ib_device_ops {
++<<<<<<< HEAD
++=======
+ 	struct module *owner;
+ 	enum rdma_driver_id driver_id;
+ 	u32 uverbs_abi_ver;
+ 
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
  	int (*post_send)(struct ib_qp *qp, const struct ib_send_wr *send_wr,
  			 const struct ib_send_wr **bad_send_wr);
  	int (*post_recv)(struct ib_qp *qp, const struct ib_recv_wr *recv_wr,
@@@ -2558,12 -2640,11 +2565,19 @@@ struct ib_device 
  
  	int			      num_comp_vectors;
  
++<<<<<<< HEAD
 +	struct ib_port_pkey_list     *port_pkey_list;
++=======
+ 	union {
+ 		struct device		dev;
+ 		struct ib_core_device	coredev;
+ 	};
++>>>>>>> 7a15414252ae (RDMA: Move owner into struct ib_device_ops)
 +
 +	struct iw_cm_verbs	     *iwcm;
  
 +	struct module               *owner;
 +	struct device                dev;
  	/* First group for device attributes,
  	 * Second group for driver provided attributes (optional).
  	 * It is NULL terminated array.
* Unmerged path drivers/infiniband/core/device.c
diff --git a/drivers/infiniband/core/uverbs_main.c b/drivers/infiniband/core/uverbs_main.c
index 38520b130ead..e93edef20a1a 100644
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@ -198,7 +198,7 @@ void ib_uverbs_release_file(struct kref *ref)
 	ib_dev = srcu_dereference(file->device->ib_dev,
 				  &file->device->disassociate_srcu);
 	if (ib_dev && !ib_dev->ops.disassociate_ucontext)
-		module_put(ib_dev->owner);
+		module_put(ib_dev->ops.owner);
 	srcu_read_unlock(&file->device->disassociate_srcu, srcu_key);
 
 	if (atomic_dec_and_test(&file->device->refcount))
@@ -1059,7 +1059,7 @@ static int ib_uverbs_open(struct inode *inode, struct file *filp)
 	module_dependent = !(ib_dev->ops.disassociate_ucontext);
 
 	if (module_dependent) {
-		if (!try_module_get(ib_dev->owner)) {
+		if (!try_module_get(ib_dev->ops.owner)) {
 			ret = -ENODEV;
 			goto err;
 		}
@@ -1094,7 +1094,7 @@ static int ib_uverbs_open(struct inode *inode, struct file *filp)
 	return nonseekable_open(inode, filp);
 
 err_module:
-	module_put(ib_dev->owner);
+	module_put(ib_dev->ops.owner);
 
 err:
 	mutex_unlock(&dev->lists_mutex);
* Unmerged path drivers/infiniband/hw/bnxt_re/main.c
* Unmerged path drivers/infiniband/hw/cxgb3/iwch_provider.c
* Unmerged path drivers/infiniband/hw/cxgb4/provider.c
* Unmerged path drivers/infiniband/hw/efa/efa_main.c
* Unmerged path drivers/infiniband/hw/hfi1/verbs.c
* Unmerged path drivers/infiniband/hw/hns/hns_roce_main.c
* Unmerged path drivers/infiniband/hw/i40iw/i40iw_verbs.c
* Unmerged path drivers/infiniband/hw/mlx4/main.c
* Unmerged path drivers/infiniband/hw/mlx5/main.c
* Unmerged path drivers/infiniband/hw/mthca/mthca_provider.c
* Unmerged path drivers/infiniband/hw/nes/nes_verbs.c
* Unmerged path drivers/infiniband/hw/ocrdma/ocrdma_main.c
* Unmerged path drivers/infiniband/hw/qedr/main.c
* Unmerged path drivers/infiniband/hw/qib/qib_verbs.c
* Unmerged path drivers/infiniband/hw/usnic/usnic_ib_main.c
* Unmerged path drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
* Unmerged path drivers/infiniband/sw/rxe/rxe_verbs.c
* Unmerged path include/rdma/ib_verbs.h
