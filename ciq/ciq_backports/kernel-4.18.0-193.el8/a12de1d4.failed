blk-mq: honor IO scheduler for multiqueue devices

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit a12de1d42d74ef3c80e9fb9a2da94daaef747869
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a12de1d4.failed

If a device is using multiple queues, the IO scheduler may be bypassed.
This may hurt performance for some slow MQ devices, and it also breaks
zoned devices which depend on mq-deadline for respecting the write order
in one zone.

Don't bypass io scheduler if we have one setup.

This patch can double sequential write performance basically on MQ
scsi_debug when mq-deadline is applied.

	Cc: Bart Van Assche <bvanassche@acm.org>
	Cc: Hannes Reinecke <hare@suse.com>
	Cc: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Javier Gonz√°lez <javier@javigon.com>
	Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit a12de1d42d74ef3c80e9fb9a2da94daaef747869)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 49d6c08f6c9f,5d4bef3c378d..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -2003,9 -2012,9 +2003,11 @@@ static blk_qc_t blk_mq_make_request(str
  		}
  
  		blk_add_rq_to_plug(plug, rq);
+ 	} else if (q->elevator) {
+ 		blk_mq_sched_insert_request(rq, false, true, true);
  	} else if (plug && !blk_queue_nomerges(q)) {
 +		blk_mq_bio_to_request(rq, bio);
 +
  		/*
  		 * We do limited plugging. If the bio can be merged, do that.
  		 * Otherwise the existing request in the plug list will be
@@@ -2030,14 -2037,10 +2032,19 @@@
  			blk_mq_try_issue_directly(data.hctx, same_queue_rq,
  					&cookie);
  		}
++<<<<<<< HEAD
 +	} else if ((q->nr_hw_queues > 1 && is_sync) || (!q->elevator &&
 +			!data.hctx->dispatch_busy)) {
 +		blk_mq_put_ctx(data.ctx);
 +		blk_mq_bio_to_request(rq, bio);
++=======
+ 	} else if ((q->nr_hw_queues > 1 && is_sync) ||
+ 			!data.hctx->dispatch_busy) {
++>>>>>>> a12de1d42d74 (blk-mq: honor IO scheduler for multiqueue devices)
  		blk_mq_try_issue_directly(data.hctx, rq, &cookie);
  	} else {
 +		blk_mq_put_ctx(data.ctx);
 +		blk_mq_bio_to_request(rq, bio);
  		blk_mq_sched_insert_request(rq, false, true, true);
  	}
  
* Unmerged path block/blk-mq.c
