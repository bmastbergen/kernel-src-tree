arm64: Handle erratum 1418040 as a superset of erratum 1188873

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Marc Zyngier <marc.zyngier@arm.com>
commit a5325089bd05a7b0259cc4038479d36308edbda2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a5325089.failed

We already mitigate erratum 1188873 affecting Cortex-A76 and
Neoverse-N1 r0p0 to r2p0. It turns out that revisions r0p0 to
r3p1 of the same cores are affected by erratum 1418040, which
has the same workaround as 1188873.

Let's expand the range of affected revisions to match 1418040,
and repaint all occurences of 1188873 to 1418040. Whilst we're
there, do a bit of reformating in silicon-errata.txt and drop
a now unnecessary dependency on ARM_ARCH_TIMER_OOL_WORKAROUND.

	Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit a5325089bd05a7b0259cc4038479d36308edbda2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/arm64/silicon-errata.txt
#	arch/arm64/Kconfig
#	arch/arm64/include/asm/cpucaps.h
#	arch/arm64/kernel/cpu_errata.c
#	arch/arm64/kernel/entry.S
diff --cc Documentation/arm64/silicon-errata.txt
index e311dab9df6a,2735462d5958..000000000000
--- a/Documentation/arm64/silicon-errata.txt
+++ b/Documentation/arm64/silicon-errata.txt
@@@ -56,11 -58,14 +56,18 @@@ stable kernels
  | ARM            | Cortex-A72      | #853709         | N/A                         |
  | ARM            | Cortex-A73      | #858921         | ARM64_ERRATUM_858921        |
  | ARM            | Cortex-A55      | #1024718        | ARM64_ERRATUM_1024718       |
- | ARM            | Cortex-A76      | #1188873        | ARM64_ERRATUM_1188873       |
+ | ARM            | Cortex-A76      | #1188873,1418040| ARM64_ERRATUM_1418040       |
  | ARM            | Cortex-A76      | #1165522        | ARM64_ERRATUM_1165522       |
++<<<<<<< HEAD
 +| ARM            | MMU-500         | #841119,#826419 | N/A                         |
++=======
+ | ARM            | Cortex-A76      | #1286807        | ARM64_ERRATUM_1286807       |
+ | ARM            | Cortex-A76      | #1463225        | ARM64_ERRATUM_1463225       |
+ | ARM            | Neoverse-N1     | #1188873,1418040| ARM64_ERRATUM_1418040       |
+ | ARM            | MMU-500         | #841119,826419  | N/A                         |
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  |                |                 |                 |                             |
- | Cavium         | ThunderX ITS    | #22375, #24313  | CAVIUM_ERRATUM_22375        |
+ | Cavium         | ThunderX ITS    | #22375,24313    | CAVIUM_ERRATUM_22375        |
  | Cavium         | ThunderX ITS    | #23144          | CAVIUM_ERRATUM_23144        |
  | Cavium         | ThunderX GICv3  | #23154          | CAVIUM_ERRATUM_23154        |
  | Cavium         | ThunderX Core   | #27456          | CAVIUM_ERRATUM_27456        |
diff --cc arch/arm64/Kconfig
index a2ff4c9fea5e,6a9544606da3..000000000000
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@@ -499,17 -475,17 +499,30 @@@ config ARM64_ERRATUM_102471
  
  	  If unsure, say Y.
  
++<<<<<<< HEAD
 +config ARM64_ERRATUM_1188873
 +	bool "Cortex-A76: MRC read following MRRC read of specific Generic Timer in AArch32 might give incorrect result"
++=======
+ config ARM64_ERRATUM_1418040
+ 	bool "Cortex-A76/Neoverse-N1: MRC read following MRRC read of specific Generic Timer in AArch32 might give incorrect result"
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  	default y
  	depends on COMPAT
- 	select ARM_ARCH_TIMER_OOL_WORKAROUND
  	help
++<<<<<<< HEAD
 +	  This option adds work arounds for ARM Cortex-A76 erratum 1188873
 +
 +	  Affected Cortex-A76 cores (r0p0, r1p0, r2p0) could cause
 +	  register corruption when accessing the timer registers from
 +	  AArch32 userspace.
++=======
+ 	  This option adds a workaround for ARM Cortex-A76/Neoverse-N1
+ 	  errata 1188873 and 1418040.
+ 
+ 	  Affected Cortex-A76/Neoverse-N1 cores (r0p0 to r3p1) could
+ 	  cause register corruption when accessing the timer registers
+ 	  from AArch32 userspace.
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  
  	  If unsure, say Y.
  
diff --cc arch/arm64/include/asm/cpucaps.h
index 1a8df16d556c,33401ebc187c..000000000000
--- a/arch/arm64/include/asm/cpucaps.h
+++ b/arch/arm64/include/asm/cpucaps.h
@@@ -51,11 -51,19 +51,15 @@@
  #define ARM64_SSBD				30
  #define ARM64_MISMATCHED_CACHE_TYPE		31
  #define ARM64_HAS_STAGE2_FWB			32
 -#define ARM64_HAS_CRC32				33
 +#define ARM64_WORKAROUND_1188873		33
  #define ARM64_SSBS				34
++<<<<<<< HEAD
 +#define ARM64_WORKAROUND_1165522		35
++=======
+ #define ARM64_WORKAROUND_1418040		35
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  #define ARM64_HAS_SB				36
 -#define ARM64_WORKAROUND_1165522		37
 -#define ARM64_HAS_ADDRESS_AUTH_ARCH		38
 -#define ARM64_HAS_ADDRESS_AUTH_IMP_DEF		39
 -#define ARM64_HAS_GENERIC_AUTH_ARCH		40
 -#define ARM64_HAS_GENERIC_AUTH_IMP_DEF		41
 -#define ARM64_HAS_IRQ_PRIO_MASKING		42
 -#define ARM64_HAS_DCPODP			43
 -#define ARM64_WORKAROUND_1463225		44
  
 -#define ARM64_NCAPS				45
 +#define ARM64_NCAPS				37
  
  #endif /* __ASM_CPUCAPS_H */
diff --cc arch/arm64/kernel/cpu_errata.c
index feeb8962a8d8,d61beedba101..000000000000
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@@ -694,6 -698,20 +694,23 @@@ static const struct midr_range workarou
  };
  #endif
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_ARM64_ERRATUM_1418040
+ /*
+  * - 1188873 affects r0p0 to r2p0
+  * - 1418040 affects r0p0 to r3p1
+  */
+ static const struct midr_range erratum_1418040_list[] = {
+ 	/* Cortex-A76 r0p0 to r3p1 */
+ 	MIDR_RANGE(MIDR_CORTEX_A76, 0, 0, 3, 1),
+ 	/* Neoverse-N1 r0p0 to r3p1 */
+ 	MIDR_RANGE(MIDR_NEOVERSE_N1, 0, 0, 3, 1),
+ 	{},
+ };
+ #endif
+ 
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  const struct arm64_cpu_capabilities arm64_errata[] = {
  #ifdef CONFIG_ARM64_WORKAROUND_CLEAN_CACHE
  	{
@@@ -812,12 -829,11 +829,18 @@@
  		.matches = has_ssbd_mitigation,
  		.midr_range_list = arm64_ssb_cpus,
  	},
- #ifdef CONFIG_ARM64_ERRATUM_1188873
+ #ifdef CONFIG_ARM64_ERRATUM_1418040
  	{
++<<<<<<< HEAD
 +		/* Cortex-A76 r0p0 to r2p0 */
 +		.desc = "ARM erratum 1188873",
 +		.capability = ARM64_WORKAROUND_1188873,
 +		ERRATA_MIDR_RANGE(MIDR_CORTEX_A76, 0, 0, 2, 0),
++=======
+ 		.desc = "ARM erratum 1418040",
+ 		.capability = ARM64_WORKAROUND_1418040,
+ 		ERRATA_MIDR_RANGE_LIST(erratum_1418040_list),
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  	},
  #endif
  #ifdef CONFIG_ARM64_ERRATUM_1165522
diff --cc arch/arm64/kernel/entry.S
index 864ada8a265a,cd0c7af8e4a8..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -331,8 -336,22 +331,27 @@@ alternative_if ARM64_WORKAROUND_84571
  alternative_else_nop_endif
  #endif
  3:
++<<<<<<< HEAD
 +	apply_ssbd 0, 5f, x0, x1
 +5:
++=======
+ #ifdef CONFIG_ARM64_ERRATUM_1418040
+ alternative_if_not ARM64_WORKAROUND_1418040
+ 	b	4f
+ alternative_else_nop_endif
+ 	/*
+ 	 * if (x22.mode32 == cntkctl_el1.el0vcten)
+ 	 *     cntkctl_el1.el0vcten = ~cntkctl_el1.el0vcten
+ 	 */
+ 	mrs	x1, cntkctl_el1
+ 	eon	x0, x1, x22, lsr #3
+ 	tbz	x0, #1, 4f
+ 	eor	x1, x1, #2	// ARCH_TIMER_USR_VCT_ACCESS_EN
+ 	msr	cntkctl_el1, x1
+ 4:
+ #endif
+ 	apply_ssbd 0, x0, x1
++>>>>>>> a5325089bd05 (arm64: Handle erratum 1418040 as a superset of erratum 1188873)
  	.endif
  
  	msr	elr_el1, x21			// set up the return data
* Unmerged path Documentation/arm64/silicon-errata.txt
* Unmerged path arch/arm64/Kconfig
* Unmerged path arch/arm64/include/asm/cpucaps.h
* Unmerged path arch/arm64/kernel/cpu_errata.c
* Unmerged path arch/arm64/kernel/entry.S
