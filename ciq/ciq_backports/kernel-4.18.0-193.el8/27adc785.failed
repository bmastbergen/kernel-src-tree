SUNRPC: Use the ENOTCONN error on socket disconnect

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 27adc785928ae6b34cdda96f472735b77c91e247
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/27adc785.failed

When the socket is closed, we currently send an EAGAIN error to all
pending requests in order to ask them to retransmit. Use ENOTCONN
instead, to ensure that they try to reconnect before attempting to
transmit.
This also helps SOFTCONN tasks to behave correctly in this
situation.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 27adc785928ae6b34cdda96f472735b77c91e247)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprt.c
diff --cc net/sunrpc/xprt.c
index c4d4cd12e49e,d7117d241460..000000000000
--- a/net/sunrpc/xprt.c
+++ b/net/sunrpc/xprt.c
@@@ -621,7 -663,8 +621,12 @@@ void xprt_disconnect_done(struct rpc_xp
  	dprintk("RPC:       disconnected transport %p\n", xprt);
  	spin_lock_bh(&xprt->transport_lock);
  	xprt_clear_connected(xprt);
++<<<<<<< HEAD
 +	xprt_wake_pending_tasks(xprt, -EAGAIN);
++=======
+ 	xprt_clear_write_space_locked(xprt);
+ 	xprt_wake_pending_tasks(xprt, -ENOTCONN);
++>>>>>>> 27adc785928a (SUNRPC: Use the ENOTCONN error on socket disconnect)
  	spin_unlock_bh(&xprt->transport_lock);
  }
  EXPORT_SYMBOL_GPL(xprt_disconnect_done);
* Unmerged path net/sunrpc/xprt.c
