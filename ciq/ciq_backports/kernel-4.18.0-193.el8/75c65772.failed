net/packet: Ask driver for protocol if not provided by user

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] packet: Ask driver for protocol if not provided by user (Ivan Vecera) [1765561]
Rebuild_FUZZ: 96.49%
commit-author Maxim Mikityanskiy <maximmi@mellanox.com>
commit 75c65772c3d18447d62d3aca5f91b06c16cc25e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/75c65772.failed

If a socket was created with socket(AF_PACKET, SOCK_RAW, 0), the
protocol number is unavailable. Try to ask the driver to extract it from
the L2 header in order for skb_try_probe_transport_header to succeed.

	Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 75c65772c3d18447d62d3aca5f91b06c16cc25e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/packet/af_packet.c
diff --cc net/packet/af_packet.c
index be3b2bbfc0a3,cac4c1a3f807..000000000000
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@@ -1971,7 -1979,7 +1980,11 @@@ retry
  	if (unlikely(extra_len == 4))
  		skb->no_fcs = 1;
  
++<<<<<<< HEAD
 +	skb_probe_transport_header(skb, 0);
++=======
+ 	packet_parse_headers(skb, sock);
++>>>>>>> 75c65772c3d1 (net/packet: Ask driver for protocol if not provided by user)
  
  	dev_queue_xmit(skb);
  	rcu_read_unlock();
@@@ -2520,7 -2528,7 +2533,11 @@@ static int tpacket_fill_skb(struct pack
  		len = ((to_write > len_max) ? len_max : to_write);
  	}
  
++<<<<<<< HEAD
 +	skb_probe_transport_header(skb, 0);
++=======
+ 	packet_parse_headers(skb, sock);
++>>>>>>> 75c65772c3d1 (net/packet: Ask driver for protocol if not provided by user)
  
  	return tp_len;
  }
@@@ -2931,7 -2934,7 +2948,11 @@@ static int packet_snd(struct socket *so
  		virtio_net_hdr_set_proto(skb, &vnet_hdr);
  	}
  
++<<<<<<< HEAD
 +	skb_probe_transport_header(skb, reserve);
++=======
+ 	packet_parse_headers(skb, sock);
++>>>>>>> 75c65772c3d1 (net/packet: Ask driver for protocol if not provided by user)
  
  	if (unlikely(extra_len == 4))
  		skb->no_fcs = 1;
* Unmerged path net/packet/af_packet.c
