powerpc/fadump: use FADump instead of fadump for how it is pronounced

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Hari Bathini <hbathini@linux.ibm.com>
commit 1679b96e69ec2e10ccd9d82b691ade0b16cb64d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/1679b96e.failed

fadump is pronounced f-a-dump. Update documentation accordingly. Also,
update how fadump_region contents look like with recent changes.

	Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/156821339317.5656.15852294223821732082.stgit@hbathini.in.ibm.com
(cherry picked from commit 1679b96e69ec2e10ccd9d82b691ade0b16cb64d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/powerpc/firmware-assisted-dump.txt
diff --cc Documentation/powerpc/firmware-assisted-dump.txt
index 779dd3fcbc51,d912755067d2..000000000000
--- a/Documentation/powerpc/firmware-assisted-dump.txt
+++ b/Documentation/powerpc/firmware-assisted-dump.txt
@@@ -31,9 -32,9 +31,9 @@@ dump offers several strong, practical a
     with a fresh copy of the kernel.  In particular,
     PCI and I/O devices have been reinitialized and are
     in a clean, consistent state.
 --  Once the dump is copied out, the memory that held the dump
 +-- Once the dump is copied out, the memory that held the dump
     is immediately available to the running kernel. And therefore,
-    unlike kdump, fadump doesn't need a 2nd reboot to get back
+    unlike kdump, FADump doesn't need a 2nd reboot to get back
     the system to the production configuration.
  
  The above can only be accomplished by coordination with,
@@@ -59,12 -61,12 +59,12 @@@ as follows
           the default calculated size. Use this option if default
           boot memory size is not sufficient for second kernel to
           boot successfully. For syntax of crashkernel= parameter,
 -         refer to Documentation/admin-guide/kdump/kdump.rst. If any offset is
 +         refer to Documentation/kdump/kdump.txt. If any offset is
           provided in crashkernel= parameter, it will be ignored
-          as fadump uses a predefined offset to reserve memory
+          as FADump uses a predefined offset to reserve memory
           for boot memory dump preservation in case of a crash.
  
 --  After the low memory (boot memory) area has been saved, the
 +-- After the low memory (boot memory) area has been saved, the
     firmware will reset PCI and other hardware state.  It will
     *not* clear the RAM. It will then launch the bootloader, as
     normal.
@@@ -120,9 -123,9 +120,9 @@@ blocking this significant chunk of memo
  Hence, the implementation uses the Linux kernel's Contiguous Memory
  Allocator (CMA) for memory reservation if CMA is configured for kernel.
  With CMA reservation this memory will be available for applications to
- use it, while kernel is prevented from using it. With this fadump will
+ use it, while kernel is prevented from using it. With this FADump will
  still be able to capture all of the kernel memory and most of the user
 -space memory except the user pages that were present in CMA region::
 +space memory except the user pages that were present in CMA region.
  
    o Memory Reservation during first kernel
  
@@@ -170,8 -173,8 +170,13 @@@ KDump, as dump mechanism
  The tools to examine the dump will be same as the ones
  used for kdump.
  
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +How to enable firmware-assisted dump (fadump):
 +-------------------------------------
++=======
+ How to enable firmware-assisted dump (FADump):
+ ----------------------------------------------
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
  
  1. Set config option CONFIG_FA_DUMP=y and build kernel.
  2. Boot into linux kernel with 'fadump=on' kernel cmdline option.
@@@ -202,35 -206,34 +207,54 @@@ the control files and debugfs file to d
  Here is the list of files under kernel sysfs:
  
   /sys/kernel/fadump_enabled
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +
 +    This is used to display the fadump status.
 +    0 = fadump is disabled
 +    1 = fadump is enabled
++=======
+     This is used to display the FADump status.
+ 
+     - 0 = FADump is disabled
+     - 1 = FADump is enabled
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
  
      This interface can be used by kdump init scripts to identify if
-     fadump is enabled in the kernel and act accordingly.
+     FADump is enabled in the kernel and act accordingly.
  
   /sys/kernel/fadump_registered
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +
 +    This is used to display the fadump registration status as well
 +    as to control (start/stop) the fadump registration.
 +    0 = fadump is not registered.
 +    1 = fadump is registered and ready to handle system crash.
++=======
+     This is used to display the FADump registration status as well
+     as to control (start/stop) the FADump registration.
+ 
+     - 0 = FADump is not registered.
+     - 1 = FADump is registered and ready to handle system crash.
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
  
-     To register fadump echo 1 > /sys/kernel/fadump_registered and
+     To register FADump echo 1 > /sys/kernel/fadump_registered and
      echo 0 > /sys/kernel/fadump_registered for un-register and stop the
-     fadump. Once the fadump is un-registered, the system crash will not
+     FADump. Once the FADump is un-registered, the system crash will not
      be handled and vmcore will not be captured. This interface can be
      easily integrated with kdump service start/stop.
  
   /sys/kernel/fadump_release_mem
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +
 +    This file is available only when fadump is active during
++=======
+     This file is available only when FADump is active during
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
      second kernel. This is used to release the reserved memory
      region that are held for saving crash dump. To release the
 -    reserved memory echo 1 to it::
 +    reserved memory echo 1 to it:
  
 -	echo 1  > /sys/kernel/fadump_release_mem
 +    echo 1  > /sys/kernel/fadump_release_mem
  
      After echo 1, the content of the /sys/kernel/debug/powerpc/fadump_region
      file will change to reflect the new memory reservations.
@@@ -243,38 -246,44 +267,64 @@@ Here is the list of files under powerp
  (Assuming debugfs is mounted on /sys/kernel/debug directory.)
  
   /sys/kernel/debug/powerpc/fadump_region
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +
 +    This file shows the reserved memory regions if fadump is
++=======
+     This file shows the reserved memory regions if FADump is
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
      enabled otherwise this file is empty. The output format
 -    is::
 -
 -      <region>: [<start>-<end>] <reserved-size> bytes, Dumped: <dump-size>
 +    is:
 +    <region>: [<start>-<end>] <reserved-size> bytes, Dumped: <dump-size>
  
+     and for kernel DUMP region is:
+ 
+     DUMP: Src: <src-addr>, Dest: <dest-addr>, Size: <size>, Dumped: # bytes
+ 
      e.g.
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +    Contents when fadump is registered during first kernel
++=======
+     Contents when FADump is registered during first kernel::
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
  
 -      # cat /sys/kernel/debug/powerpc/fadump_region
 -      CPU : [0x0000006ffb0000-0x0000006fff001f] 0x40020 bytes, Dumped: 0x0
 -      HPTE: [0x0000006fff0020-0x0000006fff101f] 0x1000 bytes, Dumped: 0x0
 -      DUMP: [0x0000006fff1020-0x0000007fff101f] 0x10000000 bytes, Dumped: 0x0
 +    # cat /sys/kernel/debug/powerpc/fadump_region
 +    CPU : [0x0000006ffb0000-0x0000006fff001f] 0x40020 bytes, Dumped: 0x0
 +    HPTE: [0x0000006fff0020-0x0000006fff101f] 0x1000 bytes, Dumped: 0x0
 +    DUMP: [0x0000006fff1020-0x0000007fff101f] 0x10000000 bytes, Dumped: 0x0
  
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +    Contents when fadump is active during second kernel
++=======
+     Contents when FADump is active during second kernel::
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
  
 -      # cat /sys/kernel/debug/powerpc/fadump_region
 -      CPU : [0x0000006ffb0000-0x0000006fff001f] 0x40020 bytes, Dumped: 0x40020
 -      HPTE: [0x0000006fff0020-0x0000006fff101f] 0x1000 bytes, Dumped: 0x1000
 -      DUMP: [0x0000006fff1020-0x0000007fff101f] 0x10000000 bytes, Dumped: 0x10000000
 -          : [0x00000010000000-0x0000006ffaffff] 0x5ffb0000 bytes, Dumped: 0x5ffb0000
 +    # cat /sys/kernel/debug/powerpc/fadump_region
 +    CPU : [0x0000006ffb0000-0x0000006fff001f] 0x40020 bytes, Dumped: 0x40020
 +    HPTE: [0x0000006fff0020-0x0000006fff101f] 0x1000 bytes, Dumped: 0x1000
 +    DUMP: [0x0000006fff1020-0x0000007fff101f] 0x10000000 bytes, Dumped: 0x10000000
 +        : [0x00000010000000-0x0000006ffaffff] 0x5ffb0000 bytes, Dumped: 0x5ffb0000
  
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +NOTE: Please refer to Documentation/filesystems/debugfs.txt on
++=======
+ 
+ NOTE:
+       Please refer to Documentation/filesystems/debugfs.txt on
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
        how to mount the debugfs filesystem.
  
  
  TODO:
  -----
 - - Need to come up with the better approach to find out more
 + o Need to come up with the better approach to find out more
     accurate boot memory size that is required for a kernel to
     boot successfully when booted with restricted memory.
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 + o The fadump implementation introduces a fadump crash info structure
++=======
+  - The FADump implementation introduces a FADump crash info structure
++>>>>>>> 1679b96e69ec (powerpc/fadump: use FADump instead of fadump for how it is pronounced):Documentation/powerpc/firmware-assisted-dump.rst
     in the scratch area before the ELF core header. The idea of introducing
     this structure is to pass some important crash info data to the second
     kernel which will help second kernel to populate ELF core header with
* Unmerged path Documentation/powerpc/firmware-assisted-dump.txt
