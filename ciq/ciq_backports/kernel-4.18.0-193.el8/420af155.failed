powerpc/mmiowb: Hook up mmwiob() implementation to asm-generic code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Will Deacon <will.deacon@arm.com>
commit 420af1554790a95e6813f56f63b6d2361614082b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/420af155.failed

In a bid to kill off explicit mmiowb() usage in driver code, hook up
the asm-generic mmiowb() tracking code but provide a definition of
arch_mmiowb_state() so that the tracking data can remain in the paca
as it does at present

This replaces the existing (flawed) implementation.

	Acked-by: Michael Ellerman <mpe@ellerman.id.au>
	Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 420af1554790a95e6813f56f63b6d2361614082b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/Kconfig
#	arch/powerpc/include/asm/io.h
#	arch/powerpc/include/asm/paca.h
diff --cc arch/powerpc/Kconfig
index 40466f86cda5,5e3d0853c31d..000000000000
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@@ -126,6 -131,8 +126,11 @@@ config PP
  	select ARCH_HAS_ELF_RANDOMIZE
  	select ARCH_HAS_FORTIFY_SOURCE
  	select ARCH_HAS_GCOV_PROFILE_ALL
++<<<<<<< HEAD
++=======
+ 	select ARCH_HAS_KCOV
+ 	select ARCH_HAS_MMIOWB			if PPC64
++>>>>>>> 420af1554790 (powerpc/mmiowb: Hook up mmwiob() implementation to asm-generic code)
  	select ARCH_HAS_PHYS_TO_DMA
  	select ARCH_HAS_PMEM_API                if PPC64
  	select ARCH_HAS_PTE_SPECIAL
diff --cc arch/powerpc/include/asm/io.h
index e0331e754568,1fad67b46409..000000000000
--- a/arch/powerpc/include/asm/io.h
+++ b/arch/powerpc/include/asm/io.h
@@@ -30,13 -34,11 +30,10 @@@ extern struct pci_dev *isa_bridge_pcide
  #include <asm/byteorder.h>
  #include <asm/synch.h>
  #include <asm/delay.h>
+ #include <asm/mmiowb.h>
  #include <asm/mmu.h>
  #include <asm/ppc_asm.h>
 -#include <asm/pgtable.h>
  
- #ifdef CONFIG_PPC64
- #include <asm/paca.h>
- #endif
- 
  #define SIO_CONFIG_RA	0x398
  #define SIO_CONFIG_RD	0x399
  
@@@ -102,31 -104,6 +99,34 @@@ extern bool isa_io_special
   *
   */
  
++<<<<<<< HEAD
 +#ifdef CONFIG_PPC64
 +#define IO_SET_SYNC_FLAG()	do { local_paca->io_sync = 1; } while(0)
 +#else
 +#define IO_SET_SYNC_FLAG()
 +#endif
 +
 +/* gcc 4.0 and older doesn't have 'Z' constraint */
 +#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ == 0)
 +#define DEF_MMIO_IN_X(name, size, insn)				\
 +static inline u##size name(const volatile u##size __iomem *addr)	\
 +{									\
 +	u##size ret;							\
 +	__asm__ __volatile__("sync;"#insn" %0,0,%1;twi 0,%0,0;isync"	\
 +		: "=r" (ret) : "r" (addr), "m" (*addr) : "memory");	\
 +	return ret;							\
 +}
 +
 +#define DEF_MMIO_OUT_X(name, size, insn)				\
 +static inline void name(volatile u##size __iomem *addr, u##size val)	\
 +{									\
 +	__asm__ __volatile__("sync;"#insn" %1,0,%2"			\
 +		: "=m" (*addr) : "r" (val), "r" (addr) : "memory");	\
 +	IO_SET_SYNC_FLAG();						\
 +}
 +#else /* newer gcc */
++=======
++>>>>>>> 420af1554790 (powerpc/mmiowb: Hook up mmwiob() implementation to asm-generic code)
  #define DEF_MMIO_IN_X(name, size, insn)				\
  static inline u##size name(const volatile u##size __iomem *addr)	\
  {									\
@@@ -141,9 -118,8 +141,9 @@@ static inline void name(volatile u##siz
  {									\
  	__asm__ __volatile__("sync;"#insn" %1,%y0"			\
  		: "=Z" (*addr) : "r" (val) : "memory");			\
- 	IO_SET_SYNC_FLAG();						\
+ 	mmiowb_set_pending();						\
  }
 +#endif
  
  #define DEF_MMIO_IN_D(name, size, insn)				\
  static inline u##size name(const volatile u##size __iomem *addr)	\
diff --cc arch/powerpc/include/asm/paca.h
index 7b6e23af3808,134e912d403f..000000000000
--- a/arch/powerpc/include/asm/paca.h
+++ b/arch/powerpc/include/asm/paca.h
@@@ -256,6 -262,12 +257,15 @@@ struct paca_struct 
  	struct slb_entry *mce_faulty_slbs;
  	u16 slb_save_cache_ptr;
  #endif /* CONFIG_PPC_BOOK3S_64 */
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_STACKPROTECTOR
+ 	unsigned long canary;
+ #endif
+ #ifdef CONFIG_MMIOWB
+ 	struct mmiowb_state mmiowb_state;
+ #endif
++>>>>>>> 420af1554790 (powerpc/mmiowb: Hook up mmwiob() implementation to asm-generic code)
  } ____cacheline_aligned;
  
  extern void copy_mm_to_paca(struct mm_struct *mm);
* Unmerged path arch/powerpc/Kconfig
* Unmerged path arch/powerpc/include/asm/io.h
diff --git a/arch/powerpc/include/asm/mmiowb.h b/arch/powerpc/include/asm/mmiowb.h
new file mode 100644
index 000000000000..b10180613507
--- /dev/null
+++ b/arch/powerpc/include/asm/mmiowb.h
@@ -0,0 +1,20 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _ASM_POWERPC_MMIOWB_H
+#define _ASM_POWERPC_MMIOWB_H
+
+#ifdef CONFIG_MMIOWB
+
+#include <linux/compiler.h>
+#include <asm/barrier.h>
+#include <asm/paca.h>
+
+#define arch_mmiowb_state()	(&local_paca->mmiowb_state)
+#define mmiowb()		mb()
+
+#else
+#define mmiowb()		do { } while (0)
+#endif /* CONFIG_MMIOWB */
+
+#include <asm-generic/mmiowb.h>
+
+#endif	/* _ASM_POWERPC_MMIOWB_H */
* Unmerged path arch/powerpc/include/asm/paca.h
diff --git a/arch/powerpc/include/asm/spinlock.h b/arch/powerpc/include/asm/spinlock.h
index 72dc4ddc2972..2b82ddb7e8f6 100644
--- a/arch/powerpc/include/asm/spinlock.h
+++ b/arch/powerpc/include/asm/spinlock.h
@@ -39,19 +39,6 @@
 #define LOCK_TOKEN	1
 #endif
 
-#if defined(CONFIG_PPC64) && defined(CONFIG_SMP)
-#define CLEAR_IO_SYNC	(get_paca()->io_sync = 0)
-#define SYNC_IO		do {						\
-				if (unlikely(get_paca()->io_sync)) {	\
-					mb();				\
-					get_paca()->io_sync = 0;	\
-				}					\
-			} while (0)
-#else
-#define CLEAR_IO_SYNC
-#define SYNC_IO
-#endif
-
 #ifdef CONFIG_PPC_PSERIES
 #define vcpu_is_preempted vcpu_is_preempted
 static inline bool vcpu_is_preempted(int cpu)
@@ -99,7 +86,6 @@ static inline unsigned long __arch_spin_trylock(arch_spinlock_t *lock)
 
 static inline int arch_spin_trylock(arch_spinlock_t *lock)
 {
-	CLEAR_IO_SYNC;
 	return __arch_spin_trylock(lock) == 0;
 }
 
@@ -130,7 +116,6 @@ extern void __rw_yield(arch_rwlock_t *lock);
 
 static inline void arch_spin_lock(arch_spinlock_t *lock)
 {
-	CLEAR_IO_SYNC;
 	while (1) {
 		if (likely(__arch_spin_trylock(lock) == 0))
 			break;
@@ -148,7 +133,6 @@ void arch_spin_lock_flags(arch_spinlock_t *lock, unsigned long flags)
 {
 	unsigned long flags_dis;
 
-	CLEAR_IO_SYNC;
 	while (1) {
 		if (likely(__arch_spin_trylock(lock) == 0))
 			break;
@@ -167,7 +151,6 @@ void arch_spin_lock_flags(arch_spinlock_t *lock, unsigned long flags)
 
 static inline void arch_spin_unlock(arch_spinlock_t *lock)
 {
-	SYNC_IO;
 	__asm__ __volatile__("# arch_spin_unlock\n\t"
 				PPC_RELEASE_BARRIER: : :"memory");
 	lock->slock = 0;
diff --git a/arch/powerpc/xmon/xmon.c b/arch/powerpc/xmon/xmon.c
index fdc43d5ccb42..442bd9eb8a69 100644
--- a/arch/powerpc/xmon/xmon.c
+++ b/arch/powerpc/xmon/xmon.c
@@ -2415,7 +2415,10 @@ static void dump_one_paca(int cpu)
 	DUMP(p, trap_save, "%#-*x");
 	DUMP(p, irq_soft_mask, "%#-*x");
 	DUMP(p, irq_happened, "%#-*x");
-	DUMP(p, io_sync, "%#-*x");
+#ifdef CONFIG_MMIOWB
+	DUMP(p, mmiowb_state.nesting_count, "%#-*x");
+	DUMP(p, mmiowb_state.mmiowb_pending, "%#-*x");
+#endif
 	DUMP(p, irq_work_pending, "%#-*x");
 	DUMP(p, nap_state_lost, "%#-*x");
 	DUMP(p, sprg_vdso, "%#-*llx");
