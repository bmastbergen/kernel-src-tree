iommu/vt-d: Call __dmar_remove_one_dev_info with valid pointer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jerry Snitselaar <jsnitsel@redhat.com>
commit bf708cfb2f4811d1948a88c41ab96587e84ad344
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/bf708cfb.failed

It is possible for archdata.iommu to be set to
DEFER_DEVICE_DOMAIN_INFO or DUMMY_DEVICE_DOMAIN_INFO so check for
those values before calling __dmar_remove_one_dev_info. Without a
check it can result in a null pointer dereference. This has been seen
while booting a kdump kernel on an HP dl380 gen9.

	Cc: Joerg Roedel <joro@8bytes.org>
	Cc: Lu Baolu <baolu.lu@linux.intel.com>
	Cc: David Woodhouse <dwmw2@infradead.org>
	Cc: stable@vger.kernel.org # 5.3+
	Cc: linux-kernel@vger.kernel.org
Fixes: ae23bfb68f28 ("iommu/vt-d: Detach domain before using a private one")
	Signed-off-by: Jerry Snitselaar <jsnitsel@redhat.com>
	Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit bf708cfb2f4811d1948a88c41ab96587e84ad344)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 1431de3bfba0,932267f49f9a..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -5045,7 -5163,9 +5045,13 @@@ static void dmar_remove_one_dev_info(st
  
  	spin_lock_irqsave(&device_domain_lock, flags);
  	info = dev->archdata.iommu;
++<<<<<<< HEAD
 +	__dmar_remove_one_dev_info(info);
++=======
+ 	if (info && info != DEFER_DEVICE_DOMAIN_INFO
+ 	    && info != DUMMY_DEVICE_DOMAIN_INFO)
+ 		__dmar_remove_one_dev_info(info);
++>>>>>>> bf708cfb2f48 (iommu/vt-d: Call __dmar_remove_one_dev_info with valid pointer)
  	spin_unlock_irqrestore(&device_domain_lock, flags);
  }
  
* Unmerged path drivers/iommu/intel-iommu.c
