mm: make register_mem_sect_under_node() static

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author David Hildenbrand <david@redhat.com>
commit 8d595c4c0f768f19db043d378b22e98405f9fd47
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8d595c4c.failed

It is only used internally.

Link: http://lkml.kernel.org/r/20190614100114.311-4-david@redhat.com
	Signed-off-by: David Hildenbrand <david@redhat.com>
	Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
	Cc: Keith Busch <keith.busch@intel.com>
	Cc: Oscar Salvador <osalvador@suse.de>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8d595c4c0f768f19db043d378b22e98405f9fd47)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/node.h
diff --cc include/linux/node.h
index 1a557c589ecb,4866f32a02d8..000000000000
--- a/include/linux/node.h
+++ b/include/linux/node.h
@@@ -137,10 -137,7 +137,14 @@@ static inline int register_one_node(in
  extern void unregister_one_node(int nid);
  extern int register_cpu_under_node(unsigned int cpu, unsigned int nid);
  extern int unregister_cpu_under_node(unsigned int cpu, unsigned int nid);
++<<<<<<< HEAD
 +extern int register_mem_sect_under_node(struct memory_block *mem_blk,
 +						void *arg);
 +extern int unregister_mem_sect_under_nodes(struct memory_block *mem_blk,
 +					   unsigned long phys_index);
++=======
+ extern void unregister_memory_block_under_nodes(struct memory_block *mem_blk);
++>>>>>>> 8d595c4c0f76 (mm: make register_mem_sect_under_node() static)
  
  extern int register_memory_node_under_compute_node(unsigned int mem_nid,
  						   unsigned int cpu_nid,
@@@ -171,15 -168,8 +175,19 @@@ static inline int unregister_cpu_under_
  {
  	return 0;
  }
++<<<<<<< HEAD
 +static inline int register_mem_sect_under_node(struct memory_block *mem_blk,
 +							void *arg)
 +{
 +	return 0;
 +}
 +static inline int unregister_mem_sect_under_nodes(struct memory_block *mem_blk,
 +						  unsigned long phys_index)
++=======
+ static inline void unregister_memory_block_under_nodes(struct memory_block *mem_blk)
++>>>>>>> 8d595c4c0f76 (mm: make register_mem_sect_under_node() static)
  {
 +	return 0;
  }
  
  static inline void register_hugetlbfs_with_node(node_registration_func_t reg,
diff --git a/drivers/base/node.c b/drivers/base/node.c
index 8598fcbd2a17..3a912adf3b9b 100644
--- a/drivers/base/node.c
+++ b/drivers/base/node.c
@@ -752,7 +752,8 @@ static int __ref get_nid_for_pfn(unsigned long pfn)
 }
 
 /* register memory section under specified node if it spans that node */
-int register_mem_sect_under_node(struct memory_block *mem_blk, void *arg)
+static int register_mem_sect_under_node(struct memory_block *mem_blk,
+					 void *arg)
 {
 	int ret, nid = *(int *)arg;
 	unsigned long pfn, sect_start_pfn, sect_end_pfn;
* Unmerged path include/linux/node.h
