net/mlx5: Control CR-space access by different PFs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: Control CR-space access by different PFs (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 95.83%
commit-author Feras Daoud <ferasda@mellanox.com>
commit 1ef6f1a17e56f9126472d2c50818f468f1fc43d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/1ef6f1a1.failed

Since the FW can be shared between different PFs/VFs it is common
that more than one health poll will detected a failure, this can
lead to multiple resets which are unneeded.

The solution is to use a FW locking mechanism using semaphore space
to provide a way to allow only one device to collect the cr-dump and
to issue a sw-reset.

	Signed-off-by: Feras Daoud <ferasda@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 1ef6f1a17e56f9126472d2c50818f468f1fc43d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/lib/pci_vsc.c
#	drivers/net/ethernet/mellanox/mlx5/core/lib/pci_vsc.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lib/pci_vsc.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lib/pci_vsc.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lib/pci_vsc.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lib/pci_vsc.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
index 8213c994e205..b92ba703e6a4 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
@@ -106,6 +106,10 @@ enum {
 	MLX5_DRIVER_SYND = 0xbadd00de,
 };
 
+enum mlx5_semaphore_space_address {
+	MLX5_SEMAPHORE_SPACE_DOMAIN     = 0xA,
+};
+
 int mlx5_query_hca_caps(struct mlx5_core_dev *dev);
 int mlx5_query_board_id(struct mlx5_core_dev *dev);
 int mlx5_cmd_init_hca(struct mlx5_core_dev *dev, uint32_t *sw_owner_id);
