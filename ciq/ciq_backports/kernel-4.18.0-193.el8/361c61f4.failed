drm/amd/display: load iram for abm 2.3

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Josip Pavic <Josip.Pavic@amd.com>
commit 361c61f47a1cd8df26a08ddbb0cbdad72bb1776d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/361c61f4.failed

[Why]
ABM 2.3 firmware expects information in iRAM that differs from previous
versions of ABM, so a mechanism is required to provide it with that
information.

[How]
Extend the existing iRAM definition to include parameters added by
ABM 2.3, and load it if DMCU is running ABM 2.3.

	Signed-off-by: Josip Pavic <Josip.Pavic@amd.com>
	Reviewed-by: Anthony Koo <Anthony.Koo@amd.com>
	Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 361c61f47a1cd8df26a08ddbb0cbdad72bb1776d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/modules/power/power_helpers.c
diff --cc drivers/gpu/drm/amd/display/modules/power/power_helpers.c
index 038b88221c5f,05e2be856037..000000000000
--- a/drivers/gpu/drm/amd/display/modules/power/power_helpers.c
+++ b/drivers/gpu/drm/amd/display/modules/power/power_helpers.c
@@@ -498,15 -536,72 +533,79 @@@ void fill_iram_v_2_2(struct iram_table_
  	ram_table->dark_pos_gain[4][2] = 0x00;
  	ram_table->dark_pos_gain[4][3] = 0x00;
  
- 	ram_table->hybridFactor[0] = 0xff;
- 	ram_table->hybridFactor[1] = 0xff;
- 	ram_table->hybridFactor[2] = 0xff;
- 	ram_table->hybridFactor[3] = 0xc0;
+ 	ram_table->hybrid_factor[0] = 0xff;
+ 	ram_table->hybrid_factor[1] = 0xff;
+ 	ram_table->hybrid_factor[2] = 0xff;
+ 	ram_table->hybrid_factor[3] = 0xc0;
  
++<<<<<<< HEAD
 +	ram_table->contrastFactor[0] = 0x99;
 +	ram_table->contrastFactor[1] = 0x99;
 +	ram_table->contrastFactor[2] = 0x99;
 +	ram_table->contrastFactor[3] = 0x80;
++=======
+ 	ram_table->contrast_factor[0] = 0x99;
+ 	ram_table->contrast_factor[1] = 0x99;
+ 	ram_table->contrast_factor[2] = 0x90;
+ 	ram_table->contrast_factor[3] = 0x80;
+ 
+ 	ram_table->iir_curve[0] = 0x65;
+ 	ram_table->iir_curve[1] = 0x65;
+ 	ram_table->iir_curve[2] = 0x65;
+ 	ram_table->iir_curve[3] = 0x65;
+ 	ram_table->iir_curve[4] = 0x65;
+ 
+ 	//Gamma 2.2
+ 	ram_table->crgb_thresh[0] = cpu_to_be16(0x127c);
+ 	ram_table->crgb_thresh[1] = cpu_to_be16(0x151b);
+ 	ram_table->crgb_thresh[2] = cpu_to_be16(0x17d5);
+ 	ram_table->crgb_thresh[3] = cpu_to_be16(0x1a56);
+ 	ram_table->crgb_thresh[4] = cpu_to_be16(0x1c83);
+ 	ram_table->crgb_thresh[5] = cpu_to_be16(0x1e72);
+ 	ram_table->crgb_thresh[6] = cpu_to_be16(0x20f0);
+ 	ram_table->crgb_thresh[7] = cpu_to_be16(0x232b);
+ 	ram_table->crgb_offset[0] = cpu_to_be16(0x2999);
+ 	ram_table->crgb_offset[1] = cpu_to_be16(0x3999);
+ 	ram_table->crgb_offset[2] = cpu_to_be16(0x4666);
+ 	ram_table->crgb_offset[3] = cpu_to_be16(0x5999);
+ 	ram_table->crgb_offset[4] = cpu_to_be16(0x6333);
+ 	ram_table->crgb_offset[5] = cpu_to_be16(0x7800);
+ 	ram_table->crgb_offset[6] = cpu_to_be16(0x8c00);
+ 	ram_table->crgb_offset[7] = cpu_to_be16(0xa000);
+ 	ram_table->crgb_slope[0]  = cpu_to_be16(0x3609);
+ 	ram_table->crgb_slope[1]  = cpu_to_be16(0x2dfa);
+ 	ram_table->crgb_slope[2]  = cpu_to_be16(0x27ea);
+ 	ram_table->crgb_slope[3]  = cpu_to_be16(0x235d);
+ 	ram_table->crgb_slope[4]  = cpu_to_be16(0x2042);
+ 	ram_table->crgb_slope[5]  = cpu_to_be16(0x1dc3);
+ 	ram_table->crgb_slope[6]  = cpu_to_be16(0x1b1a);
+ 	ram_table->crgb_slope[7]  = cpu_to_be16(0x1910);
+ 
+ 	fill_backlight_transform_table_v_2_2(
+ 			params, ram_table);
+ }
+ 
+ void fill_iram_v_2_3(struct iram_table_v_2_2 *ram_table, struct dmcu_iram_parameters params)
+ {
+ 	unsigned int i, j;
+ 	unsigned int set = params.set;
+ 
+ 	ram_table->flags = 0x0;
+ 	for (i = 0; i < NUM_AGGR_LEVEL; i++) {
+ 		ram_table->hybrid_factor[i] = abm_settings[set][i].brightness_gain;
+ 		ram_table->contrast_factor[i] = abm_settings[set][i].contrast_factor;
+ 		ram_table->deviation_gain[i] = abm_settings[set][i].deviation_gain;
+ 		ram_table->min_knee[i] = abm_settings[set][i].min_knee;
+ 		ram_table->max_knee[i] = abm_settings[set][i].max_knee;
+ 
+ 		for (j = 0; j < NUM_AMBI_LEVEL; j++) {
+ 			ram_table->min_reduction[j][i] = abm_settings[set][i].min_reduction;
+ 			ram_table->max_reduction[j][i] = abm_settings[set][i].max_reduction;
+ 			ram_table->bright_pos_gain[j][i] = abm_settings[set][i].bright_pos_gain;
+ 			ram_table->dark_pos_gain[j][i] = abm_settings[set][i].dark_pos_gain;
+ 		}
+ 	}
++>>>>>>> 361c61f47a1c (drm/amd/display: load iram for abm 2.3)
  
  	ram_table->iir_curve[0] = 0x65;
  	ram_table->iir_curve[1] = 0x65;
* Unmerged path drivers/gpu/drm/amd/display/modules/power/power_helpers.c
