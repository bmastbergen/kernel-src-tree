bpf: fix u64_stats_init() usage in bpf_prog_alloc()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 4b9113045b1745ec8512d6743680809edca6a74e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4b911304.failed

We need to iterate through all possible cpus.

Fixes: 492ecee892c2 ("bpf: enable program stats")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reported-by: Guenter Roeck <linux@roeck-us.net>
	Tested-by: Guenter Roeck <linux@roeck-us.net>
	Acked-by: Song Liu <songliubraving@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 4b9113045b1745ec8512d6743680809edca6a74e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/core.c
diff --cc kernel/bpf/core.c
index 3abb1fce17b6,3f08c257858e..000000000000
--- a/kernel/bpf/core.c
+++ b/kernel/bpf/core.c
@@@ -104,6 -104,32 +104,35 @@@ struct bpf_prog *bpf_prog_alloc(unsigne
  
  	return fp;
  }
++<<<<<<< HEAD
++=======
+ 
+ struct bpf_prog *bpf_prog_alloc(unsigned int size, gfp_t gfp_extra_flags)
+ {
+ 	gfp_t gfp_flags = GFP_KERNEL | __GFP_ZERO | gfp_extra_flags;
+ 	struct bpf_prog *prog;
+ 	int cpu;
+ 
+ 	prog = bpf_prog_alloc_no_stats(size, gfp_extra_flags);
+ 	if (!prog)
+ 		return NULL;
+ 
+ 	prog->aux->stats = alloc_percpu_gfp(struct bpf_prog_stats, gfp_flags);
+ 	if (!prog->aux->stats) {
+ 		kfree(prog->aux);
+ 		vfree(prog);
+ 		return NULL;
+ 	}
+ 
+ 	for_each_possible_cpu(cpu) {
+ 		struct bpf_prog_stats *pstats;
+ 
+ 		pstats = per_cpu_ptr(prog->aux->stats, cpu);
+ 		u64_stats_init(&pstats->syncp);
+ 	}
+ 	return prog;
+ }
++>>>>>>> 4b9113045b17 (bpf: fix u64_stats_init() usage in bpf_prog_alloc())
  EXPORT_SYMBOL_GPL(bpf_prog_alloc);
  
  int bpf_prog_alloc_jited_linfo(struct bpf_prog *prog)
* Unmerged path kernel/bpf/core.c
