HID: logitech: Handle 0 scroll events for the m560

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [hid] logitech: Handle 0 scroll events for the m560 (Benjamin Tissoires) [1740778]
Rebuild_FUZZ: 94.74%
commit-author Peter Hutterer <peter.hutterer@who-t.net>
commit fd35759ce32b60d3eb52436894bab996dbf8cffa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/fd35759c.failed

hidpp_scroll_counter_handle_scroll() doesn't expect a 0-value scroll event, it
gets interpreted as a negative scroll direction event. This can cause scroll
direction resets and thus broken scrolling.

Fixes: 4435ff2f09a2fc ("HID: logitech: Enable high-resolution scrolling on Logitech mice")
	Cc: stable@vger.kernel.org # v5.0
Reported-and-tested-by: Aimo Metsälä <aimetsal@outlook.com>
	Signed-off-by: Peter Hutterer <peter.hutterer@who-t.net>
	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
(cherry picked from commit fd35759ce32b60d3eb52436894bab996dbf8cffa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/hid-logitech-hidpp.c
diff --cc drivers/hid/hid-logitech-hidpp.c
index 6189e33c6a01,199cc256e9d9..000000000000
--- a/drivers/hid/hid-logitech-hidpp.c
+++ b/drivers/hid/hid-logitech-hidpp.c
@@@ -2530,8 -2614,9 +2530,14 @@@ static int m560_raw_event(struct hid_de
  		input_report_rel(mydata->input, REL_Y, v);
  
  		v = hid_snto32(data[6], 8);
++<<<<<<< HEAD
 +		hid_scroll_counter_handle_scroll(
 +				&hidpp->vertical_wheel_counter, v);
++=======
+ 		if (v != 0)
+ 			hidpp_scroll_counter_handle_scroll(
+ 					&hidpp->vertical_wheel_counter, v);
++>>>>>>> fd35759ce32b (HID: logitech: Handle 0 scroll events for the m560)
  
  		input_sync(mydata->input);
  	}
* Unmerged path drivers/hid/hid-logitech-hidpp.c
