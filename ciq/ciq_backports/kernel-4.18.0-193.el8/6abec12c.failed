powerpc/fadump: improve fadump_reserve_mem()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Hari Bathini <hbathini@linux.ibm.com>
commit 6abec12c65e8870d8cafe154a86240fe0bcdd4f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/6abec12c.failed

Some code clean-up like using minimal assignments and updating printk
messages. Also, add an 'error_out' label for handling error cleanup
at one place.

	Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/156821343485.5656.10202857091553646948.stgit@hbathini.in.ibm.com
(cherry picked from commit 6abec12c65e8870d8cafe154a86240fe0bcdd4f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/fadump.c
diff --cc arch/powerpc/kernel/fadump.c
index 56526469b148,7d47d4bb7d6e..000000000000
--- a/arch/powerpc/kernel/fadump.c
+++ b/arch/powerpc/kernel/fadump.c
@@@ -469,10 -353,9 +468,16 @@@ int __init fadump_reserve_mem(void
  	 * If dump is active then we have already calculated the size during
  	 * first kernel.
  	 */
++<<<<<<< HEAD
 +	if (fdm_active)
 +		fw_dump.boot_memory_size = be64_to_cpu(fdm_active->rmr_region.source_len);
 +	else {
 +		fw_dump.boot_memory_size = fadump_calculate_reserve_size();
++=======
+ 	if (!fw_dump.dump_active) {
+ 		fw_dump.boot_memory_size =
+ 			PAGE_ALIGN(fadump_calculate_reserve_size());
++>>>>>>> 6abec12c65e8 (powerpc/fadump: improve fadump_reserve_mem())
  #ifdef CONFIG_CMA
  		if (!fw_dump.nocma)
  			fw_dump.boot_memory_size =
@@@ -521,21 -405,12 +527,20 @@@
  		 * dump is written to disk by userspace tool. This memory
  		 * will be released for general use once the dump is saved.
  		 */
- 		base = fw_dump.boot_memory_size;
- 		size = memory_boundary - base;
+ 		size = mem_boundary - base;
  		fadump_reserve_crash_area(base, size);
  
 -		pr_debug("fadumphdr_addr = %#016lx\n", fw_dump.fadumphdr_addr);
 -		pr_debug("Reserve dump area start address: 0x%lx\n",
 -			 fw_dump.reserve_dump_area_start);
 +		fw_dump.fadumphdr_addr =
 +				be64_to_cpu(fdm_active->rmr_region.destination_address) +
 +				be64_to_cpu(fdm_active->rmr_region.source_len);
 +		pr_debug("fadumphdr_addr = %pa\n", &fw_dump.fadumphdr_addr);
 +
 +		/*
 +		 * Start address of reserve dump area (permanent reservation)
 +		 * for re-registering FADump after dump capture.
 +		 */
 +		fw_dump.reserve_dump_area_start =
 +			be64_to_cpu(fdm_active->cpu_state_data.destination_address);
  	} else {
  		/*
  		 * Reserve memory at an offset closer to bottom of the RAM to
* Unmerged path arch/powerpc/kernel/fadump.c
