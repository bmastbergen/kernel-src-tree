SUNRPC: Fix a memory leak in call_encode()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 71700bb96047f68a0aae3932466fc7c9ad5ce6c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/71700bb9.failed

If we retransmit an RPC request, we currently end up clobbering the
value of req->rq_rcv_buf.bvec that was allocated by the initial call to
xprt_request_prepare(req).

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 71700bb96047f68a0aae3932466fc7c9ad5ce6c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/sunrpc/xdr.h
diff --cc include/linux/sunrpc/xdr.h
index be8249e1a86c,2ec128060239..000000000000
--- a/include/linux/sunrpc/xdr.h
+++ b/include/linux/sunrpc/xdr.h
@@@ -70,6 -72,7 +70,10 @@@ xdr_buf_init(struct xdr_buf *buf, void 
  	buf->head[0].iov_base = start;
  	buf->head[0].iov_len = len;
  	buf->tail[0].iov_len = 0;
++<<<<<<< HEAD
++=======
+ 	buf->pages = NULL;
++>>>>>>> 71700bb96047 (SUNRPC: Fix a memory leak in call_encode())
  	buf->page_len = 0;
  	buf->flags = 0;
  	buf->len = 0;
* Unmerged path include/linux/sunrpc/xdr.h
diff --git a/net/sunrpc/clnt.c b/net/sunrpc/clnt.c
index 672043b072dd..d53344f53492 100644
--- a/net/sunrpc/clnt.c
+++ b/net/sunrpc/clnt.c
@@ -2317,6 +2317,7 @@ call_decode(struct rpc_task *task)
 	task->tk_status = 0;
 	/* Note: rpc_verify_header() may have freed the RPC slot */
 	if (task->tk_rqstp == req) {
+		xdr_free_bvec(&req->rq_rcv_buf);
 		req->rq_reply_bytes_recvd = req->rq_rcv_buf.len = 0;
 		if (task->tk_client->cl_discrtry)
 			xprt_conditional_disconnect(req->rq_xprt,
diff --git a/net/sunrpc/xprt.c b/net/sunrpc/xprt.c
index 4f9f6015515a..7de8d0f2f8b0 100644
--- a/net/sunrpc/xprt.c
+++ b/net/sunrpc/xprt.c
@@ -1267,6 +1267,8 @@ xprt_request_init(struct rpc_task *task)
 	req->rq_snd_buf.buflen = 0;
 	req->rq_rcv_buf.len = 0;
 	req->rq_rcv_buf.buflen = 0;
+	req->rq_snd_buf.bvec = NULL;
+	req->rq_rcv_buf.bvec = NULL;
 	req->rq_release_snd_buf = NULL;
 	xprt_reset_majortimeo(req);
 	dprintk("RPC: %5u reserved req %p xid %08x\n", task->tk_pid,
