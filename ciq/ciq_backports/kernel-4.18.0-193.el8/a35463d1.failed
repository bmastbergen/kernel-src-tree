ALSA: firewire-lib: operate data block counter in top level of processing for IR context

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit a35463d1f77d9e5244d6f4953d3c7f3a27c7625e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a35463d1.failed

In ALSA IEC 61883-1/6 packet streaming engine, two types of data block
counter are supported. This commit applies code refactoring to make it
explicitly for IR context.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit a35463d1f77d9e5244d6f4953d3c7f3a27c7625e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/amdtp-stream.c
diff --cc sound/firewire/amdtp-stream.c
index 6572b73cef04,3435bef97a8b..000000000000
--- a/sound/firewire/amdtp-stream.c
+++ b/sound/firewire/amdtp-stream.c
@@@ -579,17 -571,16 +580,22 @@@ static int check_cip_header(struct amdt
  	}
  
  	/* Check data block counter continuity */
- 	*dbc = cip_header[0] & CIP_DBC_MASK;
+ 	dbc = cip_header[0] & CIP_DBC_MASK;
  	if (*data_blocks == 0 && (s->flags & CIP_EMPTY_HAS_WRONG_DBC) &&
- 	    s->data_block_counter != UINT_MAX)
- 		*dbc = s->data_block_counter;
+ 	    *data_block_counter != UINT_MAX)
+ 		dbc = *data_block_counter;
  
++<<<<<<< HEAD
 +	if (((s->flags & CIP_SKIP_DBC_ZERO_CHECK) &&
 +	     *dbc == s->ctx_data.tx.first_dbc) ||
 +	    s->data_block_counter == UINT_MAX) {
++=======
+ 	if ((dbc == 0x00 && (s->flags & CIP_SKIP_DBC_ZERO_CHECK)) ||
+ 	    *data_block_counter == UINT_MAX) {
++>>>>>>> a35463d1f77d (ALSA: firewire-lib: operate data block counter in top level of processing for IR context)
  		lost = false;
  	} else if (!(s->flags & CIP_DBC_IS_END_EVENT)) {
- 		lost = *dbc != s->data_block_counter;
+ 		lost = dbc != *data_block_counter;
  	} else {
  		unsigned int dbc_interval;
  
@@@ -777,14 -776,14 +781,18 @@@ static void in_stream_callback(struct f
  		if (err >= 0) {
  			buffer = s->buffer.packets[s->packet_index].buffer;
  			pcm_frames = s->process_data_blocks(s, buffer,
++<<<<<<< HEAD
 +							    data_blocks, &syt);
++=======
+ 				data_blocks, dbc, &syt);
++>>>>>>> a35463d1f77d (ALSA: firewire-lib: operate data block counter in top level of processing for IR context)
  
- 			if (!(s->flags & CIP_DBC_IS_END_EVENT)) {
- 				s->data_block_counter += data_blocks;
- 				s->data_block_counter &= 0xff;
- 			}
+ 			if (!(s->flags & CIP_DBC_IS_END_EVENT))
+ 				dbc = (dbc + data_blocks) & 0xff;
  		}
  
+ 		s->data_block_counter = dbc;
+ 
  		if (queue_in_packet(s, &params) < 0)
  			break;
  
* Unmerged path sound/firewire/amdtp-stream.c
