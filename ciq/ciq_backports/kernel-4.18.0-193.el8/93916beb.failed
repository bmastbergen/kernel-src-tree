arm64: Enable workaround for Cavium TX2 erratum 219 when running SMT

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [arm64] Enable workaround for Cavium TX2 erratum 219 when running SMT (Auger Eric) [1771633]
Rebuild_FUZZ: 94.57%
commit-author Marc Zyngier <marc.zyngier@arm.com>
commit 93916beb70143c46bf1d2bacf814be3a124b253b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/93916beb.failed

It appears that the only case where we need to apply the TX2_219_TVM
mitigation is when the core is in SMT mode. So let's condition the
enabling on detecting a CPU whose MPIDR_EL1.Aff0 is non-zero.

	Cc: <stable@vger.kernel.org>
	Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 93916beb70143c46bf1d2bacf814be3a124b253b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/cpu_errata.c
diff --cc arch/arm64/kernel/cpu_errata.c
index feeb8962a8d8,d999ca2dd760..000000000000
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@@ -828,6 -869,22 +853,25 @@@ const struct arm64_cpu_capabilities arm
  		ERRATA_MIDR_RANGE(MIDR_CORTEX_A76, 0, 0, 2, 0),
  	},
  #endif
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_ARM64_ERRATUM_1463225
+ 	{
+ 		.desc = "ARM erratum 1463225",
+ 		.capability = ARM64_WORKAROUND_1463225,
+ 		.type = ARM64_CPUCAP_LOCAL_CPU_ERRATUM,
+ 		.matches = has_cortex_a76_erratum_1463225,
+ 	},
+ #endif
+ #ifdef CONFIG_CAVIUM_TX2_ERRATUM_219
+ 	{
+ 		.desc = "Cavium ThunderX2 erratum 219 (KVM guest sysreg trapping)",
+ 		.capability = ARM64_WORKAROUND_CAVIUM_TX2_219_TVM,
+ 		ERRATA_MIDR_RANGE_LIST(tx2_family_cpus),
+ 		.matches = needs_tx2_tvm_workaround,
+ 	},
+ #endif
++>>>>>>> 93916beb7014 (arm64: Enable workaround for Cavium TX2 erratum 219 when running SMT)
  	{
  	}
  };
* Unmerged path arch/arm64/kernel/cpu_errata.c
