net/tls: swap sk_write_space on close

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] tls: swap sk_write_space on close (Sabrina Dubroca) [1760375]
Rebuild_FUZZ: 94.29%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 57c722e932cfb82e9820bbaae1b1f7222ea97b52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/57c722e9.failed

Now that we swap the original proto and clear the ULP pointer
on close we have to make sure no callback will try to access
the freed state. sk_write_space is not part of sk_prot, remember
to swap it.

	Reported-by: syzbot+dcdc9deefaec44785f32@syzkaller.appspotmail.com
Fixes: 95fa145479fb ("bpf: sockmap/tls, close can race with map free")
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 57c722e932cfb82e9820bbaae1b1f7222ea97b52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_main.c
diff --cc net/tls/tls_main.c
index 797e39e87f9c,ce6ef56a65ef..000000000000
--- a/net/tls/tls_main.c
+++ b/net/tls/tls_main.c
@@@ -305,6 -304,12 +305,15 @@@ static void tls_sk_proto_close(struct s
  	if (ctx->tx_conf != TLS_BASE || ctx->rx_conf != TLS_BASE)
  		tls_sk_proto_cleanup(sk, ctx, timeo);
  
++<<<<<<< HEAD
++=======
+ 	write_lock_bh(&sk->sk_callback_lock);
+ 	if (free_ctx)
+ 		icsk->icsk_ulp_data = NULL;
+ 	sk->sk_prot = ctx->sk_proto;
+ 	sk->sk_write_space = ctx->sk_write_space;
+ 	write_unlock_bh(&sk->sk_callback_lock);
++>>>>>>> 57c722e932cf (net/tls: swap sk_write_space on close)
  	release_sock(sk);
  	if (ctx->tx_conf == TLS_SW)
  		tls_sw_free_ctx_tx(ctx);
* Unmerged path net/tls/tls_main.c
