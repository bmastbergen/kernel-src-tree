ASoC: soc-core: support dai_link with platforms_num != 1

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-core: support dai_link with platforms_num != 1 (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 94.92%
commit-author Jerome Brunet <jbrunet@baylibre.com>
commit 34614739988ad60c3493da66dd856002ee93edf9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/34614739.failed

Add support platforms_num != 1 in dai_link. Initially, the main purpose of
this change was to make the platform optional in the dai_link, instead of
inserting the dummy platform driver.

This particular case had just been solved by Kuninori Morimoto with
commit 1d7689892878 ("ASoC: soc-core: allow no Platform on dai_link").

However, this change may still be useful for those who need multiple
platform components on a single dai_link (it solves one of the FIXME
note in soc-core)

	Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 34614739988ad60c3493da66dd856002ee93edf9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-core.c
diff --cc sound/soc/soc-core.c
index fe48c2d11026,b9061cd8d787..000000000000
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@@ -888,8 -896,7 +888,12 @@@ static int soc_bind_dai_link(struct snd
  	struct snd_soc_dai_link *dai_link)
  {
  	struct snd_soc_pcm_runtime *rtd;
++<<<<<<< HEAD
 +	struct snd_soc_dai_link_component *codecs;
 +	struct snd_soc_dai_link_component cpu_dai_component;
++=======
+ 	struct snd_soc_dai_link_component *codec, *platform;
++>>>>>>> 34614739988a (ASoC: soc-core: support dai_link with platforms_num != 1)
  	struct snd_soc_component *component;
  	int i;
  
@@@ -1147,20 -1059,8 +1153,25 @@@ static int snd_soc_init_multicodec(stru
  static int soc_init_dai_link(struct snd_soc_card *card,
  			     struct snd_soc_dai_link *link)
  {
++<<<<<<< HEAD
 +	int i, ret;
 +	struct snd_soc_dai_link_component *codec;
++=======
+ 	int i;
+ 	struct snd_soc_dai_link_component *codec, *platform;
++>>>>>>> 34614739988a (ASoC: soc-core: support dai_link with platforms_num != 1)
 +
 +	ret = snd_soc_init_platform(card, link);
 +	if (ret) {
 +		dev_err(card->dev, "ASoC: failed to init multiplatform\n");
 +		return ret;
 +	}
 +
 +	ret = snd_soc_init_multicodec(card, link);
 +	if (ret) {
 +		dev_err(card->dev, "ASoC: failed to init multicodec\n");
 +		return ret;
 +	}
  
  	for_each_link_codecs(link, i, codec) {
  		/*
@@@ -1189,10 -1088,31 +1199,34 @@@
  			return -EPROBE_DEFER;
  	}
  
++<<<<<<< HEAD
++=======
+ 	for_each_link_platforms(link, i, platform) {
+ 		/*
+ 		 * Platform may be specified by either name or OF node, but it
+ 		 * can be left unspecified, then no components will be inserted
+ 		 * in the rtdcom list
+ 		 */
+ 		if (!!platform->name == !!platform->of_node) {
+ 			dev_err(card->dev,
+ 				"ASoC: Neither/both platform name/of_node are set for %s\n",
+ 				link->name);
+ 			return -EINVAL;
+ 		}
+ 
+ 		/*
+ 		 * Defer card registration if platform component is not added to
+ 		 * component list.
+ 		 */
+ 		if (!soc_find_component(platform))
+ 			return -EPROBE_DEFER;
+ 	}
+ 
++>>>>>>> 34614739988a (ASoC: soc-core: support dai_link with platforms_num != 1)
  	/* FIXME */
 -	if (link->num_cpus > 1) {
 +	if (link->num_platforms > 1) {
  		dev_err(card->dev,
 -			"ASoC: multi cpu is not yet supported %s\n",
 +			"ASoC: multi platform is not yet supported %s\n",
  			link->name);
  		return -EINVAL;
  	}
diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8387b011d9c9..1c6a9352e2e9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1044,6 +1044,12 @@ struct snd_soc_dai_link {
 	     ((i) < link->num_codecs) && ((codec) = &link->codecs[i]);	\
 	     (i)++)
 
+#define for_each_link_platforms(link, i, platform)			\
+	for ((i) = 0;							\
+	     ((i) < link->num_platforms) &&				\
+	     ((platform) = &link->platforms[i]);			\
+	     (i)++)
+
 /*
  * Sample 1 : Single CPU/Codec/Platform
  *
* Unmerged path sound/soc/soc-core.c
