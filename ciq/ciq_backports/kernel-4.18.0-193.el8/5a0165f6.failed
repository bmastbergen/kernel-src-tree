KVM: x86: announce KVM_CAP_HYPERV_ENLIGHTENED_VMCS support only when it is available

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 5a0165f6dde37fd16e85c86eccb895fd4f93305f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/5a0165f6.failed

It was discovered that after commit 65efa61dc0d5 ("selftests: kvm: provide
common function to enable eVMCS") hyperv_cpuid selftest is failing on AMD.
The reason is that the commit changed _vcpu_ioctl() to vcpu_ioctl() in the
test and this one can't fail.

Instead of fixing the test is seems to make more sense to not announce
KVM_CAP_HYPERV_ENLIGHTENED_VMCS support if it is definitely missing
(on svm and in case kvm_intel.nested=0).

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Reviewed-by: Jim Mattson <jmattson@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5a0165f6dde37fd16e85c86eccb895fd4f93305f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 439955b592a1,67af887f0b9b..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -3279,6 -3281,12 +3278,15 @@@ int kvm_vm_ioctl_check_extension(struc
  		r = kvm_x86_ops->get_nested_state ?
  			kvm_x86_ops->get_nested_state(NULL, NULL, 0) : 0;
  		break;
++<<<<<<< HEAD
++=======
+ 	case KVM_CAP_HYPERV_DIRECT_TLBFLUSH:
+ 		r = kvm_x86_ops->enable_direct_tlbflush != NULL;
+ 		break;
+ 	case KVM_CAP_HYPERV_ENLIGHTENED_VMCS:
+ 		r = kvm_x86_ops->nested_enable_evmcs != NULL;
+ 		break;
++>>>>>>> 5a0165f6dde3 (KVM: x86: announce KVM_CAP_HYPERV_ENLIGHTENED_VMCS support only when it is available)
  	default:
  		break;
  	}
* Unmerged path arch/x86/kvm/x86.c
