iommu: Add helpers to set/get default domain type

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] Add helpers to set/get default domain type (Jerry Snitselaar) [1745844]
Rebuild_FUZZ: 92.31%
commit-author Joerg Roedel <jroedel@suse.de>
commit 8a69961c7f7583742ab9064feab5ea533a6b1b97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8a69961c.failed

Add a couple of functions to allow changing the default
domain type from architecture code and a function for iommu
drivers to request whether the default domain is
passthrough.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 8a69961c7f7583742ab9064feab5ea533a6b1b97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/iommu.c
#	include/linux/iommu.h
diff --cc drivers/iommu/iommu.c
index 2f8158aef5f9,c5e0fc5ffe8b..000000000000
--- a/drivers/iommu/iommu.c
+++ b/drivers/iommu/iommu.c
@@@ -1947,6 -2201,40 +1947,43 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ /* Request that a device is direct mapped by the IOMMU */
+ int iommu_request_dm_for_dev(struct device *dev)
+ {
+ 	return request_default_domain_for_dev(dev, IOMMU_DOMAIN_IDENTITY);
+ }
+ 
+ /* Request that a device can't be direct mapped by the IOMMU */
+ int iommu_request_dma_domain_for_dev(struct device *dev)
+ {
+ 	return request_default_domain_for_dev(dev, IOMMU_DOMAIN_DMA);
+ }
+ 
+ void iommu_set_default_passthrough(bool cmd_line)
+ {
+ 	if (cmd_line)
+ 		iommu_set_cmd_line_dma_api();
+ 
+ 	iommu_def_domain_type = IOMMU_DOMAIN_IDENTITY;
+ }
+ 
+ void iommu_set_default_translated(bool cmd_line)
+ {
+ 	if (cmd_line)
+ 		iommu_set_cmd_line_dma_api();
+ 
+ 	iommu_def_domain_type = IOMMU_DOMAIN_DMA;
+ }
+ 
+ bool iommu_default_passthrough(void)
+ {
+ 	return iommu_def_domain_type == IOMMU_DOMAIN_IDENTITY;
+ }
+ EXPORT_SYMBOL_GPL(iommu_default_passthrough);
+ 
++>>>>>>> 8a69961c7f75 (iommu: Add helpers to set/get default domain type)
  const struct iommu_ops *iommu_ops_from_fwnode(struct fwnode_handle *fwnode)
  {
  	const struct iommu_ops *ops = NULL;
diff --cc include/linux/iommu.h
index dc67b63eb5b6,29bac5345563..000000000000
--- a/include/linux/iommu.h
+++ b/include/linux/iommu.h
@@@ -313,6 -435,10 +313,13 @@@ extern void iommu_set_fault_handler(str
  extern void iommu_get_resv_regions(struct device *dev, struct list_head *list);
  extern void iommu_put_resv_regions(struct device *dev, struct list_head *list);
  extern int iommu_request_dm_for_dev(struct device *dev);
++<<<<<<< HEAD
++=======
+ extern int iommu_request_dma_domain_for_dev(struct device *dev);
+ extern void iommu_set_default_passthrough(bool cmd_line);
+ extern void iommu_set_default_translated(bool cmd_line);
+ extern bool iommu_default_passthrough(void);
++>>>>>>> 8a69961c7f75 (iommu: Add helpers to set/get default domain type)
  extern struct iommu_resv_region *
  iommu_alloc_resv_region(phys_addr_t start, size_t length, int prot,
  			enum iommu_resv_type type);
@@@ -551,6 -734,24 +558,27 @@@ static inline int iommu_request_dm_for_
  	return -ENODEV;
  }
  
++<<<<<<< HEAD
++=======
+ static inline int iommu_request_dma_domain_for_dev(struct device *dev)
+ {
+ 	return -ENODEV;
+ }
+ 
+ static inline void iommu_set_default_passthrough(bool cmd_line)
+ {
+ }
+ 
+ static inline void iommu_set_default_translated(bool cmd_line)
+ {
+ }
+ 
+ static inline bool iommu_default_passthrough(void)
+ {
+ 	return true;
+ }
+ 
++>>>>>>> 8a69961c7f75 (iommu: Add helpers to set/get default domain type)
  static inline int iommu_attach_group(struct iommu_domain *domain,
  				     struct iommu_group *group)
  {
* Unmerged path drivers/iommu/iommu.c
* Unmerged path include/linux/iommu.h
