netfilter: nf_tables: check the result of dereferencing base_chain->stats

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Li RongQing <lirongqing@baidu.com>
commit a9f5e78c403d2d62ade4f4c85040efc85f4049b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a9f5e78c.failed

Check the result of dereferencing base_chain->stats, instead of result
of this_cpu_ptr with NULL.

base_chain->stats maybe be changed to NULL when a chain is updated and a
new NULL counter can be attached.

And we do not need to check returning of this_cpu_ptr since
base_chain->stats is from percpu allocator if it is non-NULL,
this_cpu_ptr returns a valid value.

And fix two sparse error by replacing rcu_access_pointer and
rcu_dereference with READ_ONCE under rcu_read_lock.

Thanks for Eric's help to finish this patch.

Fixes: 009240940e84c1 ("netfilter: nf_tables: don't assume chain stats are set when jumplabel is set")
	Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
	Signed-off-by: Zhang Yu <zhangyu31@baidu.com>
	Signed-off-by: Li RongQing <lirongqing@baidu.com>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit a9f5e78c403d2d62ade4f4c85040efc85f4049b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_core.c
diff --cc net/netfilter/nf_tables_core.c
index 8de912ca53d3,d0f168c2670f..000000000000
--- a/net/netfilter/nf_tables_core.c
+++ b/net/netfilter/nf_tables_core.c
@@@ -101,12 -102,12 +102,17 @@@ static noinline void nft_update_chain_s
  	struct nft_stats *stats;
  
  	base_chain = nft_base_chain(chain);
++<<<<<<< HEAD
 +	if (!base_chain->stats)
 +		return;
- 
- 	local_bh_disable();
- 	stats = this_cpu_ptr(rcu_dereference(base_chain->stats));
- 	if (stats) {
++=======
++>>>>>>> a9f5e78c403d (netfilter: nf_tables: check the result of dereferencing base_chain->stats)
+ 
+ 	rcu_read_lock();
+ 	pstats = READ_ONCE(base_chain->stats);
+ 	if (pstats) {
+ 		local_bh_disable();
+ 		stats = this_cpu_ptr(pstats);
  		u64_stats_update_begin(&stats->syncp);
  		stats->pkts++;
  		stats->bytes += pkt->skb->len;
* Unmerged path net/netfilter/nf_tables_core.c
