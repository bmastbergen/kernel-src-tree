lib/dim: Fix -Wunused-const-variable warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [lib] dim: Fix -Wunused-const-variable warnings (Ivan Vecera) [1737807]
Rebuild_FUZZ: 95.35%
commit-author Leon Romanovsky <leon@kernel.org>
commit f8be17b81d44aed1f9ea68c3fc70f501c9616e2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/f8be17b8.failed

DIM causes to the following warnings during kernel compilation
which indicates that tx_profile and rx_profile are supposed to
be declared in *.c and not in *.h files.

In file included from ./include/rdma/ib_verbs.h:64,
                 from ./include/linux/mlx5/device.h:37,
                 from ./include/linux/mlx5/driver.h:51,
                 from ./include/linux/mlx5/vport.h:36,
                 from drivers/infiniband/hw/mlx5/ib_virt.c:34:
./include/linux/dim.h:326:1: warning: _tx_profile_ defined but not used [-Wunused-const-variable=]
  326 | tx_profile[DIM_CQ_PERIOD_NUM_MODES][NET_DIM_PARAMS_NUM_PROFILES] = {
      | ^~~~~~~~~~
./include/linux/dim.h:320:1: warning: _rx_profile_ defined but not used [-Wunused-const-variable=]
  320 | rx_profile[DIM_CQ_PERIOD_NUM_MODES][NET_DIM_PARAMS_NUM_PROFILES] = {
      | ^~~~~~~~~~

Fixes: 4f75da3666c0 ("linux/dim: Move implementation to .c files")
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Acked-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f8be17b81d44aed1f9ea68c3fc70f501c9616e2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/dim.h
#	lib/dim/net_dim.c
diff --cc include/linux/dim.h
index f0f20ed25497,9fa4b3f88c39..000000000000
--- a/include/linux/dim.h
+++ b/include/linux/dim.h
@@@ -132,23 -253,81 +132,86 @@@ net_dim_update_sample(u16 event_ctr, u6
  	s->event_ctr = event_ctr;
  }
  
 -/**
 - *	dim_update_sample_with_comps - set a sample's fields with given
 - *	values including the completion parameter
 - *	@event_ctr: number of events to set
 - *	@packets: number of packets to set
 - *	@bytes: number of bytes to set
 - *	@comps: number of completions to set
 - *	@s: DIM sample
 - */
  static inline void
 -dim_update_sample_with_comps(u16 event_ctr, u64 packets, u64 bytes, u64 comps,
 -			     struct dim_sample *s)
 +dim_calc_stats(struct net_dim_sample *start, struct net_dim_sample *end,
 +	       struct dim_stats *curr_stats)
  {
 -	dim_update_sample(event_ctr, packets, bytes, s);
 -	s->comp_ctr = comps;
 +	/* u32 holds up to 71 minutes, should be enough */
 +	u32 delta_us = ktime_us_delta(end->time, start->time);
 +	u32 npkts = BIT_GAP(BITS_PER_TYPE(u32), end->pkt_ctr, start->pkt_ctr);
 +	u32 nbytes = BIT_GAP(BITS_PER_TYPE(u32), end->byte_ctr,
 +			     start->byte_ctr);
 +
 +	if (!delta_us)
 +		return;
 +
 +	curr_stats->ppms = DIV_ROUND_UP(npkts * USEC_PER_MSEC, delta_us);
 +	curr_stats->bpms = DIV_ROUND_UP(nbytes * USEC_PER_MSEC, delta_us);
 +	curr_stats->epms = DIV_ROUND_UP(DIM_NEVENTS * USEC_PER_MSEC,
 +					delta_us);
  }
  
++<<<<<<< HEAD
++=======
+ /* Net DIM */
+ 
+ /**
+  *	net_dim_get_rx_moderation - provide a CQ moderation object for the given RX profile
+  *	@cq_period_mode: CQ period mode
+  *	@ix: Profile index
+  */
+ struct dim_cq_moder net_dim_get_rx_moderation(u8 cq_period_mode, int ix);
+ 
+ /**
+  *	net_dim_get_def_rx_moderation - provide the default RX moderation
+  *	@cq_period_mode: CQ period mode
+  */
+ struct dim_cq_moder net_dim_get_def_rx_moderation(u8 cq_period_mode);
+ 
+ /**
+  *	net_dim_get_tx_moderation - provide a CQ moderation object for the given TX profile
+  *	@cq_period_mode: CQ period mode
+  *	@ix: Profile index
+  */
+ struct dim_cq_moder net_dim_get_tx_moderation(u8 cq_period_mode, int ix);
+ 
+ /**
+  *	net_dim_get_def_tx_moderation - provide the default TX moderation
+  *	@cq_period_mode: CQ period mode
+  */
+ struct dim_cq_moder net_dim_get_def_tx_moderation(u8 cq_period_mode);
+ 
+ /**
+  *	net_dim - main DIM algorithm entry point
+  *	@dim: DIM instance information
+  *	@end_sample: Current data measurement
+  *
+  * Called by the consumer.
+  * This is the main logic of the algorithm, where data is processed in order to decide on next
+  * required action.
+  */
+ void net_dim(struct dim *dim, struct dim_sample end_sample);
+ 
+ /* RDMA DIM */
+ 
+ /*
+  * RDMA DIM profile:
+  * profile size must be of RDMA_DIM_PARAMS_NUM_PROFILES.
+  */
+ #define RDMA_DIM_PARAMS_NUM_PROFILES 9
+ #define RDMA_DIM_START_PROFILE 0
+ 
+ /**
+  * rdma_dim - Runs the adaptive moderation.
+  * @dim: The moderation struct.
+  * @completions: The number of completions collected in this round.
+  *
+  * Each call to rdma_dim takes the latest amount of completions that
+  * have been collected and counts them as a new event.
+  * Once enough events have been collected the algorithm decides a new
+  * moderation level.
+  */
+ void rdma_dim(struct dim *dim, u64 completions);
+ 
++>>>>>>> f8be17b81d44 (lib/dim: Fix -Wunused-const-variable warnings)
  #endif /* DIM_H */
* Unmerged path lib/dim/net_dim.c
* Unmerged path include/linux/dim.h
* Unmerged path lib/dim/net_dim.c
