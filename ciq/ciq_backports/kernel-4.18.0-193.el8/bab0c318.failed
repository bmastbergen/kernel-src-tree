KVM: x86: do not reset microcode version on INIT or RESET

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit bab0c318ba3da32483da8aad37b9ef98fd8edafb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/bab0c318.failed

Do not initialize the microcode version at RESET or INIT, only on vCPU
creation.   Microcode updates are not lost during INIT, and exact
behavior across a warm RESET is not specified by the architecture.

Since we do not support a microcode update directly from the hypervisor,
but only as a result of userspace setting the microcode version MSR,
it's simpler for userspace if we do nothing in KVM and let userspace
emulate behavior for RESET as it sees fit.

Userspace can tie the fix to the availability of MSR_IA32_UCODE_REV in
the list of emulated MSRs.

	Reported-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit bab0c318ba3da32483da8aad37b9ef98fd8edafb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm.c
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/svm.c
index d202128d6e5a,bef0ba35f121..000000000000
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@@ -2227,9 -2264,10 +2226,14 @@@ static struct kvm_vcpu *svm_create_vcpu
  	svm->asid_generation = 0;
  	init_vmcb(svm);
  
++<<<<<<< HEAD
 +	svm_init_osvw(&svm->vcpu);
++=======
+ 	svm_init_osvw(vcpu);
+ 	vcpu->arch.microcode_version = 0x01000065;
++>>>>>>> bab0c318ba3d (KVM: x86: do not reset microcode version on INIT or RESET)
  
 -	return 0;
 +	return &svm->vcpu;
  
  free_page4:
  	__free_page(hsave_page);
diff --cc arch/x86/kvm/vmx/vmx.c
index 1496da3f09e5,d625b4b0e7b4..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -6800,7 -6762,8 +6799,12 @@@ static struct kvm_vcpu *vmx_create_vcpu
  	vmx->nested.posted_intr_nv = -1;
  	vmx->nested.current_vmptr = -1ull;
  
++<<<<<<< HEAD
 +	vmx->msr_ia32_feature_control_valid_bits = FEATURE_CONTROL_LOCKED;
++=======
+ 	vcpu->arch.microcode_version = 0x100000000ULL;
+ 	vmx->msr_ia32_feature_control_valid_bits = FEAT_CTL_LOCKED;
++>>>>>>> bab0c318ba3d (KVM: x86: do not reset microcode version on INIT or RESET)
  
  	/*
  	 * Enforce invariant: pi_desc.nv is always either POSTED_INTR_VECTOR
* Unmerged path arch/x86/kvm/svm.c
* Unmerged path arch/x86/kvm/vmx/vmx.c
