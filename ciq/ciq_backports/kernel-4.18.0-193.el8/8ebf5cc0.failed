perf db-export: Export comm details

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 8ebf5cc0f6ce469d65ba2e8ce519dae34f0b3f50
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8ebf5cc0.failed

In preparation for exporting the current comm for a thread, export comm
thread id, start time and exec flag.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
Link: http://lkml.kernel.org/r/20190710085810.1650-9-adrian.hunter@intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 8ebf5cc0f6ce469d65ba2e8ce519dae34f0b3f50)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/db-export.c
diff --cc tools/perf/util/db-export.c
index 1ee4544e8b2c,b0504d3eb130..000000000000
--- a/tools/perf/util/db-export.c
+++ b/tools/perf/util/db-export.c
@@@ -159,10 -95,7 +159,14 @@@ int db_export__exec_comm(struct db_expo
  	comm->db_id = ++dbe->comm_last_db_id;
  
  	if (dbe->export_comm) {
++<<<<<<< HEAD
 +		if (main_thread->comm_set)
 +			err = dbe->export_comm(dbe, comm);
 +		else
 +			err = db_export__defer_comm(dbe, comm);
++=======
+ 		err = dbe->export_comm(dbe, comm, main_thread);
++>>>>>>> 8ebf5cc0f6ce (perf db-export: Export comm details)
  		if (err)
  			return err;
  	}
* Unmerged path tools/perf/util/db-export.c
diff --git a/tools/perf/util/db-export.h b/tools/perf/util/db-export.h
index 129fe766fa11..a941bb469a09 100644
--- a/tools/perf/util/db-export.h
+++ b/tools/perf/util/db-export.h
@@ -52,7 +52,8 @@ struct db_export {
 	int (*export_machine)(struct db_export *dbe, struct machine *machine);
 	int (*export_thread)(struct db_export *dbe, struct thread *thread,
 			     u64 main_thread_db_id, struct machine *machine);
-	int (*export_comm)(struct db_export *dbe, struct comm *comm);
+	int (*export_comm)(struct db_export *dbe, struct comm *comm,
+			   struct thread *thread);
 	int (*export_comm_thread)(struct db_export *dbe, u64 db_id,
 				  struct comm *comm, struct thread *thread);
 	int (*export_dso)(struct db_export *dbe, struct dso *dso,
diff --git a/tools/perf/util/scripting-engines/trace-event-python.c b/tools/perf/util/scripting-engines/trace-event-python.c
index 112bed65232f..b85531304723 100644
--- a/tools/perf/util/scripting-engines/trace-event-python.c
+++ b/tools/perf/util/scripting-engines/trace-event-python.c
@@ -1011,15 +1011,19 @@ static int python_export_thread(struct db_export *dbe, struct thread *thread,
 	return 0;
 }
 
-static int python_export_comm(struct db_export *dbe, struct comm *comm)
+static int python_export_comm(struct db_export *dbe, struct comm *comm,
+			      struct thread *thread)
 {
 	struct tables *tables = container_of(dbe, struct tables, dbe);
 	PyObject *t;
 
-	t = tuple_new(2);
+	t = tuple_new(5);
 
 	tuple_set_u64(t, 0, comm->db_id);
 	tuple_set_string(t, 1, comm__str(comm));
+	tuple_set_u64(t, 2, thread->db_id);
+	tuple_set_u64(t, 3, comm->start);
+	tuple_set_s32(t, 4, comm->exec);
 
 	call_object(tables->comm_handler, t, "comm_table");
 
