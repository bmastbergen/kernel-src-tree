ASoC: Intel: Skylake: Do not disable FW notifications

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: Intel: Skylake: Do not disable FW notifications (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 94.64%
commit-author Amadeusz Sławiński <amadeuszx.slawinski@intel.com>
commit d4e23b7c87e3439f6d0ec0c65ad7f919d6f4c124
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d4e23b7c.failed

As per FW team recommendation we should not disable notifications.
By default, all notifications are enabled in DSP firmware. These
notifications provide a vital information whenever an error occurs.

Currently, driver disables them during boot sequences. By doing so,
Skylake may silently ignore severe stream errors.
Correct that by removing permissive code.

	Signed-off-by: Amadeusz Sławiński <amadeuszx.slawinski@intel.com>
	Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
Link: https://lore.kernel.org/r/20190723145854.8527-6-cezary.rojewski@intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit d4e23b7c87e3439f6d0ec0c65ad7f919d6f4c124)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/skylake/skl-messages.c
#	sound/soc/intel/skylake/skl-pcm.c
#	sound/soc/intel/skylake/skl-sst-dsp.h
diff --cc sound/soc/intel/skylake/skl-messages.c
index 7a9f212503ec,07762543fb13..000000000000
--- a/sound/soc/intel/skylake/skl-messages.c
+++ b/sound/soc/intel/skylake/skl-messages.c
@@@ -44,27 -55,9 +44,30 @@@ void skl_dsp_set_astate_cfg(struct skl_
  	msg.param_data_size = (cnt * sizeof(struct skl_astate_param) +
  				sizeof(cnt));
  
 -	skl_ipc_set_large_config(&skl->ipc, &msg, data);
 +	skl_ipc_set_large_config(&ctx->ipc, &msg, data);
 +}
 +
++<<<<<<< HEAD
 +#define NOTIFICATION_PARAM_ID 3
 +#define NOTIFICATION_MASK 0xf
 +
 +/* disable notfication for underruns/overruns from firmware module */
 +void skl_dsp_enable_notification(struct skl_sst *ctx, bool enable)
 +{
 +	struct notification_mask mask;
 +	struct skl_ipc_large_config_msg	msg = {0};
 +
 +	mask.notify = NOTIFICATION_MASK;
 +	mask.enable = enable;
 +
 +	msg.large_param_id = NOTIFICATION_PARAM_ID;
 +	msg.param_data_size = sizeof(mask);
 +
 +	skl_ipc_set_large_config(&ctx->ipc, &msg, (u32 *)&mask);
  }
  
++=======
++>>>>>>> d4e23b7c87e3 (ASoC: Intel: Skylake: Do not disable FW notifications)
  static int skl_dsp_setup_spib(struct device *dev, unsigned int size,
  				int stream_tag, int enable)
  {
@@@ -429,10 -418,8 +432,13 @@@ int skl_resume_dsp(struct skl *skl
  	if (ret < 0)
  		return ret;
  
++<<<<<<< HEAD
 +	skl_dsp_enable_notification(skl->skl_sst, false);
 +
++=======
++>>>>>>> d4e23b7c87e3 (ASoC: Intel: Skylake: Do not disable FW notifications)
  	if (skl->cfg.astate_cfg != NULL) {
 -		skl_dsp_set_astate_cfg(skl, skl->cfg.astate_cfg->count,
 +		skl_dsp_set_astate_cfg(skl->skl_sst, skl->cfg.astate_cfg->count,
  					skl->cfg.astate_cfg);
  	}
  	return ret;
diff --cc sound/soc/intel/skylake/skl-pcm.c
index 460e4feea382,7f287424af9b..000000000000
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@@ -1438,11 -1444,10 +1438,15 @@@ static int skl_platform_soc_probe(struc
  			return ret;
  		}
  		skl_populate_modules(skl);
++<<<<<<< HEAD
 +		skl->skl_sst->update_d0i3c = skl_update_d0i3c;
 +		skl_dsp_enable_notification(skl->skl_sst, false);
++=======
+ 		skl->update_d0i3c = skl_update_d0i3c;
++>>>>>>> d4e23b7c87e3 (ASoC: Intel: Skylake: Do not disable FW notifications)
  
  		if (skl->cfg.astate_cfg != NULL) {
 -			skl_dsp_set_astate_cfg(skl,
 +			skl_dsp_set_astate_cfg(skl->skl_sst,
  					skl->cfg.astate_cfg->count,
  					skl->cfg.astate_cfg);
  		}
diff --cc sound/soc/intel/skylake/skl-sst-dsp.h
index a80219562036,cdfec0fca577..000000000000
--- a/sound/soc/intel/skylake/skl-sst-dsp.h
+++ b/sound/soc/intel/skylake/skl-sst-dsp.h
@@@ -233,21 -233,20 +233,24 @@@ void bxt_sst_dsp_cleanup(struct device 
  
  int snd_skl_parse_uuids(struct sst_dsp *ctx, const struct firmware *fw,
  				unsigned int offset, int index);
 -int skl_get_pvt_id(struct skl_dev *skl, guid_t *uuid_mod, int instance_id);
 -int skl_put_pvt_id(struct skl_dev *skl, guid_t *uuid_mod, int *pvt_id);
 -int skl_get_pvt_instance_id_map(struct skl_dev *skl,
 +int skl_get_pvt_id(struct skl_sst *ctx, guid_t *uuid_mod, int instance_id);
 +int skl_put_pvt_id(struct skl_sst *ctx, guid_t *uuid_mod, int *pvt_id);
 +int skl_get_pvt_instance_id_map(struct skl_sst *ctx,
  				int module_id, int instance_id);
 -void skl_freeup_uuid_list(struct skl_dev *skl);
 +void skl_freeup_uuid_list(struct skl_sst *ctx);
  
  int skl_dsp_strip_extended_manifest(struct firmware *fw);
++<<<<<<< HEAD
 +void skl_dsp_enable_notification(struct skl_sst *ctx, bool enable);
++=======
++>>>>>>> d4e23b7c87e3 (ASoC: Intel: Skylake: Do not disable FW notifications)
  
 -void skl_dsp_set_astate_cfg(struct skl_dev *skl, u32 cnt, void *data);
 +void skl_dsp_set_astate_cfg(struct skl_sst *ctx, u32 cnt, void *data);
  
  int skl_sst_ctx_init(struct device *dev, int irq, const char *fw_name,
 -		struct skl_dsp_loader_ops dsp_ops, struct skl_dev **dsp,
 +		struct skl_dsp_loader_ops dsp_ops, struct skl_sst **dsp,
  		struct sst_dsp_device *skl_dev);
 -int skl_prepare_lib_load(struct skl_dev *skl, struct skl_lib_info *linfo,
 +int skl_prepare_lib_load(struct skl_sst *skl, struct skl_lib_info *linfo,
  			struct firmware *stripped_fw,
  			unsigned int hdr_offset, int index);
  void skl_release_library(struct skl_lib_info *linfo, int lib_count);
* Unmerged path sound/soc/intel/skylake/skl-messages.c
* Unmerged path sound/soc/intel/skylake/skl-pcm.c
* Unmerged path sound/soc/intel/skylake/skl-sst-dsp.h
diff --git a/sound/soc/intel/skylake/skl-topology.h b/sound/soc/intel/skylake/skl-topology.h
index 3ecabd72e525..70b2b0fbb63c 100644
--- a/sound/soc/intel/skylake/skl-topology.h
+++ b/sound/soc/intel/skylake/skl-topology.h
@@ -140,11 +140,6 @@ struct skl_src_module_cfg {
 	enum skl_s_freq src_cfg;
 } __packed;
 
-struct notification_mask {
-	u32 notify;
-	u32 enable;
-} __packed;
-
 struct skl_up_down_mixer_cfg {
 	struct skl_base_cfg base_cfg;
 	enum skl_ch_cfg out_ch_cfg;
