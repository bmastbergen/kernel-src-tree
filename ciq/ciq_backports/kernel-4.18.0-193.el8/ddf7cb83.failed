ALSA: hda: Unexport a few more stuff

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit ddf7cb83b0f45feb94ad89a987f600c766c463ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/ddf7cb83.failed

Drop EXPORT_SYMBOL*() from a few more stuff in HD-audio core that
aren't used outside.  Particular the unsol event handler can be
staticized now because the recent change removed all external
callers.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit ddf7cb83b0f45feb94ad89a987f600c766c463ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/hdaudio.h
#	sound/hda/local.h
diff --cc include/sound/hdaudio.h
index 8aba7302842d,b260c5fd2337..000000000000
--- a/include/sound/hdaudio.h
+++ b/include/sound/hdaudio.h
@@@ -389,11 -370,6 +385,14 @@@ int snd_hdac_bus_exec_verb_unlocked(str
  				    unsigned int cmd, unsigned int *res);
  void snd_hdac_bus_queue_event(struct hdac_bus *bus, u32 res, u32 res_ex);
  
++<<<<<<< HEAD
 +int snd_hdac_bus_add_device(struct hdac_bus *bus, struct hdac_device *codec);
 +void snd_hdac_bus_remove_device(struct hdac_bus *bus,
 +				struct hdac_device *codec);
 +void snd_hdac_bus_process_unsol_events(struct work_struct *work);
 +
++=======
++>>>>>>> ddf7cb83b0f4 (ALSA: hda: Unexport a few more stuff)
  static inline void snd_hdac_codec_link_up(struct hdac_device *codec)
  {
  	set_bit(codec->addr, &codec->bus->codec_powered);
diff --cc sound/hda/local.h
index 877631e39373,5b935219352f..000000000000
--- a/sound/hda/local.h
+++ b/sound/hda/local.h
@@@ -33,4 -33,11 +33,14 @@@ int hda_widget_sysfs_reinit(struct hdac
  			    int num_nodes);
  void hda_widget_sysfs_exit(struct hdac_device *codec);
  
++<<<<<<< HEAD
++=======
+ int snd_hdac_bus_add_device(struct hdac_bus *bus, struct hdac_device *codec);
+ void snd_hdac_bus_remove_device(struct hdac_bus *bus,
+ 				struct hdac_device *codec);
+ 
+ int snd_hdac_exec_verb(struct hdac_device *codec, unsigned int cmd,
+ 		       unsigned int flags, unsigned int *res);
+ 
++>>>>>>> ddf7cb83b0f4 (ALSA: hda: Unexport a few more stuff)
  #endif /* __HDAC_LOCAL_H */
* Unmerged path include/sound/hdaudio.h
diff --git a/sound/hda/hdac_bus.c b/sound/hda/hdac_bus.c
index fb6cb306d75b..0c5f4ef92d80 100644
--- a/sound/hda/hdac_bus.c
+++ b/sound/hda/hdac_bus.c
@@ -10,6 +10,8 @@
 #include <sound/hdaudio.h>
 #include "trace.h"
 
+static void snd_hdac_bus_process_unsol_events(struct work_struct *work);
+
 static const struct hdac_bus_ops default_ops = {
 	.command = snd_hdac_bus_send_cmd,
 	.get_response = snd_hdac_bus_get_response,
@@ -150,7 +152,7 @@ EXPORT_SYMBOL_GPL(snd_hdac_bus_queue_event);
 /*
  * process queued unsolicited events
  */
-void snd_hdac_bus_process_unsol_events(struct work_struct *work)
+static void snd_hdac_bus_process_unsol_events(struct work_struct *work)
 {
 	struct hdac_bus *bus = container_of(work, struct hdac_bus, unsol_work);
 	struct hdac_device *codec;
@@ -173,7 +175,6 @@ void snd_hdac_bus_process_unsol_events(struct work_struct *work)
 			drv->unsol_event(codec, res);
 	}
 }
-EXPORT_SYMBOL_GPL(snd_hdac_bus_process_unsol_events);
 
 /**
  * snd_hdac_bus_add_device - Add a codec to bus
diff --git a/sound/hda/hdac_device.c b/sound/hda/hdac_device.c
index efe841aacac3..d65590cf015b 100644
--- a/sound/hda/hdac_device.c
+++ b/sound/hda/hdac_device.c
@@ -220,8 +220,8 @@ EXPORT_SYMBOL_GPL(snd_hdac_codec_modalias);
  *
  * Return an encoded command verb or -1 for error.
  */
-unsigned int snd_hdac_make_cmd(struct hdac_device *codec, hda_nid_t nid,
-			       unsigned int verb, unsigned int parm)
+static unsigned int snd_hdac_make_cmd(struct hdac_device *codec, hda_nid_t nid,
+				      unsigned int verb, unsigned int parm)
 {
 	u32 val, addr;
 
@@ -239,7 +239,6 @@ unsigned int snd_hdac_make_cmd(struct hdac_device *codec, hda_nid_t nid,
 	val |= parm;
 	return val;
 }
-EXPORT_SYMBOL_GPL(snd_hdac_make_cmd);
 
 /**
  * snd_hdac_exec_verb - execute an encoded verb
@@ -260,7 +259,6 @@ int snd_hdac_exec_verb(struct hdac_device *codec, unsigned int cmd,
 		return codec->exec_verb(codec, cmd, flags, res);
 	return snd_hdac_bus_exec_verb(codec->bus, codec->addr, cmd, res);
 }
-EXPORT_SYMBOL_GPL(snd_hdac_exec_verb);
 
 
 /**
diff --git a/sound/hda/hdac_regmap.c b/sound/hda/hdac_regmap.c
index 996dbc850224..4428fda449c6 100644
--- a/sound/hda/hdac_regmap.c
+++ b/sound/hda/hdac_regmap.c
@@ -20,6 +20,7 @@
 #include <sound/core.h>
 #include <sound/hdaudio.h>
 #include <sound/hda_regmap.h>
+#include "local.h"
 
 static int codec_pm_lock(struct hdac_device *codec)
 {
* Unmerged path sound/hda/local.h
