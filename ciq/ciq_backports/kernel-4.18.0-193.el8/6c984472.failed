RDMA/mlx5: Implement mlx5_ib_map_mr_sg_pi and mlx5_ib_alloc_mr_integrity

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Max Gurtovoy <maxg@mellanox.com>
commit 6c984472bad12da18b88e9f4345f4970bbec0b3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/6c984472.failed

mlx5_ib_map_mr_sg_pi() will map the PI and data dma mapped SG lists to the
mlx5 memory region prior to the registration operation. In the new
API, the mlx5 driver will allocate an internal memory region for the
UMR operation to register both PI and data SG lists. The internal MR
will use KLM mode in order to map 2 (possibly non-contiguous/non-align)
SG lists using 1 memory key. In the new API, each ULP will use 1 memory
region for the signature operation (instead of 3 in the old API). This
memory region will have a key that will be exposed to remote server to
perform RDMA operation. The internal memory key that will map the SG lists
will stay private.

	Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
	Signed-off-by: Israel Rukshin <israelr@mellanox.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 6c984472bad12da18b88e9f4345f4970bbec0b3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
#	drivers/infiniband/hw/mlx5/mr.c
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 1b44b1ade284,7980814f355d..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -1113,12 -1149,18 +1117,25 @@@ void mlx5_ib_free_implicit_mr(struct ml
  int mlx5_ib_rereg_user_mr(struct ib_mr *ib_mr, int flags, u64 start,
  			  u64 length, u64 virt_addr, int access_flags,
  			  struct ib_pd *pd, struct ib_udata *udata);
++<<<<<<< HEAD
 +int mlx5_ib_dereg_mr(struct ib_mr *ibmr);
 +struct ib_mr *mlx5_ib_alloc_mr(struct ib_pd *pd,
 +			       enum ib_mr_type mr_type,
 +			       u32 max_num_sg);
++=======
+ int mlx5_ib_dereg_mr(struct ib_mr *ibmr, struct ib_udata *udata);
+ struct ib_mr *mlx5_ib_alloc_mr(struct ib_pd *pd, enum ib_mr_type mr_type,
+ 			       u32 max_num_sg, struct ib_udata *udata);
+ struct ib_mr *mlx5_ib_alloc_mr_integrity(struct ib_pd *pd,
+ 					 u32 max_num_sg,
+ 					 u32 max_num_meta_sg);
++>>>>>>> 6c984472bad1 (RDMA/mlx5: Implement mlx5_ib_map_mr_sg_pi and mlx5_ib_alloc_mr_integrity)
  int mlx5_ib_map_mr_sg(struct ib_mr *ibmr, struct scatterlist *sg, int sg_nents,
  		      unsigned int *sg_offset);
+ int mlx5_ib_map_mr_sg_pi(struct ib_mr *ibmr, struct scatterlist *data_sg,
+ 			 int data_sg_nents, unsigned int *data_sg_offset,
+ 			 struct scatterlist *meta_sg, int meta_sg_nents,
+ 			 unsigned int *meta_sg_offset);
  int mlx5_ib_process_mad(struct ib_device *ibdev, int mad_flags, u8 port_num,
  			const struct ib_wc *in_wc, const struct ib_grh *in_grh,
  			const struct ib_mad_hdr *in, size_t in_mad_size,
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 117463d43c3b,af8ae1e76fd4..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -1656,15 -1637,20 +1656,26 @@@ static void dereg_mr(struct mlx5_ib_de
  		kfree(mr);
  }
  
 -int mlx5_ib_dereg_mr(struct ib_mr *ibmr, struct ib_udata *udata)
 +int mlx5_ib_dereg_mr(struct ib_mr *ibmr)
  {
- 	dereg_mr(to_mdev(ibmr->device), to_mmr(ibmr));
+ 	struct mlx5_ib_mr *mmr = to_mmr(ibmr);
+ 
+ 	if (ibmr->type == IB_MR_TYPE_INTEGRITY)
+ 		dereg_mr(to_mdev(mmr->pi_mr->ibmr.device), mmr->pi_mr);
+ 
+ 	dereg_mr(to_mdev(ibmr->device), mmr);
+ 
  	return 0;
  }
  
++<<<<<<< HEAD
 +struct ib_mr *mlx5_ib_alloc_mr(struct ib_pd *pd,
 +			       enum ib_mr_type mr_type,
 +			       u32 max_num_sg)
++=======
+ static struct mlx5_ib_mr *mlx5_ib_alloc_pi_mr(struct ib_pd *pd,
+ 				u32 max_num_sg, u32 max_num_meta_sg)
++>>>>>>> 6c984472bad1 (RDMA/mlx5: Implement mlx5_ib_map_mr_sg_pi and mlx5_ib_alloc_mr_integrity)
  {
  	struct mlx5_ib_dev *dev = to_mdev(pd->device);
  	int inlen = MLX5_ST_SZ_BYTES(create_mkey_in);
diff --git a/drivers/infiniband/hw/mlx5/main.c b/drivers/infiniband/hw/mlx5/main.c
index 9937619aa9d5..9428631fbc2d 100644
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@ -5928,6 +5928,7 @@ static void mlx5_ib_stage_flow_db_cleanup(struct mlx5_ib_dev *dev)
 static const struct ib_device_ops mlx5_ib_dev_ops = {
 	.add_gid = mlx5_ib_add_gid,
 	.alloc_mr = mlx5_ib_alloc_mr,
+	.alloc_mr_integrity = mlx5_ib_alloc_mr_integrity,
 	.alloc_pd = mlx5_ib_alloc_pd,
 	.alloc_ucontext = mlx5_ib_alloc_ucontext,
 	.attach_mcast = mlx5_ib_mcg_attach,
@@ -5957,6 +5958,7 @@ static const struct ib_device_ops mlx5_ib_dev_ops = {
 	.get_dma_mr = mlx5_ib_get_dma_mr,
 	.get_link_layer = mlx5_ib_port_link_layer,
 	.map_mr_sg = mlx5_ib_map_mr_sg,
+	.map_mr_sg_pi = mlx5_ib_map_mr_sg_pi,
 	.mmap = mlx5_ib_mmap,
 	.modify_cq = mlx5_ib_modify_cq,
 	.modify_device = mlx5_ib_modify_device,
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
