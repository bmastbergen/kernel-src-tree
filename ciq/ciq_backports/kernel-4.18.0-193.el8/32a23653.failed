net/mlx5e: Move queue param structs to en/params.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: Move queue param structs to en/params.h (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 95.83%
commit-author Maxim Mikityanskiy <maximmi@mellanox.com>
commit 32a23653970ac2284e41258623448a5d0852f402
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/32a23653.failed

structs mlx5e_{rq,sq,cq,channel}_param are going to be used in the
upcoming XSK RX and TX patches. Move them to a header file to make
them accessible from other C files.

	Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Acked-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 32a23653970ac2284e41258623448a5d0852f402)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/params.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/params.h
index 0ef1436c4c76,f83417b822bf..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
@@@ -6,10 -6,48 +6,53 @@@
  
  #include "en.h"
  
++<<<<<<< HEAD
 +u32 mlx5e_rx_get_linear_frag_sz(struct mlx5e_params *params);
++=======
+ struct mlx5e_xsk_param {
+ 	u16 headroom;
+ 	u16 chunk_size;
+ };
+ 
+ struct mlx5e_rq_param {
+ 	u32                        rqc[MLX5_ST_SZ_DW(rqc)];
+ 	struct mlx5_wq_param       wq;
+ 	struct mlx5e_rq_frags_info frags_info;
+ };
+ 
+ struct mlx5e_sq_param {
+ 	u32                        sqc[MLX5_ST_SZ_DW(sqc)];
+ 	struct mlx5_wq_param       wq;
+ 	bool                       is_mpw;
+ };
+ 
+ struct mlx5e_cq_param {
+ 	u32                        cqc[MLX5_ST_SZ_DW(cqc)];
+ 	struct mlx5_wq_param       wq;
+ 	u16                        eq_ix;
+ 	u8                         cq_period_mode;
+ };
+ 
+ struct mlx5e_channel_param {
+ 	struct mlx5e_rq_param      rq;
+ 	struct mlx5e_sq_param      sq;
+ 	struct mlx5e_sq_param      xdp_sq;
+ 	struct mlx5e_sq_param      icosq;
+ 	struct mlx5e_cq_param      rx_cq;
+ 	struct mlx5e_cq_param      tx_cq;
+ 	struct mlx5e_cq_param      icosq_cq;
+ };
+ 
+ /* Parameter calculations */
+ 
+ u16 mlx5e_get_linear_rq_headroom(struct mlx5e_params *params,
+ 				 struct mlx5e_xsk_param *xsk);
+ u32 mlx5e_rx_get_linear_frag_sz(struct mlx5e_params *params,
+ 				struct mlx5e_xsk_param *xsk);
++>>>>>>> 32a23653970a (net/mlx5e: Move queue param structs to en/params.h)
  u8 mlx5e_mpwqe_log_pkts_per_wqe(struct mlx5e_params *params);
 -bool mlx5e_rx_is_linear_skb(struct mlx5e_params *params);
 +bool mlx5e_rx_is_linear_skb(struct mlx5_core_dev *mdev,
 +			    struct mlx5e_params *params);
  bool mlx5e_rx_mpwqe_is_linear_skb(struct mlx5_core_dev *mdev,
  				  struct mlx5e_params *params);
  u8 mlx5e_mpwqe_get_log_rq_size(struct mlx5e_params *params);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/params.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index c389378c3be2..842206191f8f 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -57,35 +57,6 @@
 #include "en/reporter.h"
 #include "en/params.h"
 
-struct mlx5e_rq_param {
-	u32			rqc[MLX5_ST_SZ_DW(rqc)];
-	struct mlx5_wq_param	wq;
-	struct mlx5e_rq_frags_info frags_info;
-};
-
-struct mlx5e_sq_param {
-	u32                        sqc[MLX5_ST_SZ_DW(sqc)];
-	struct mlx5_wq_param       wq;
-	bool                       is_mpw;
-};
-
-struct mlx5e_cq_param {
-	u32                        cqc[MLX5_ST_SZ_DW(cqc)];
-	struct mlx5_wq_param       wq;
-	u16                        eq_ix;
-	u8                         cq_period_mode;
-};
-
-struct mlx5e_channel_param {
-	struct mlx5e_rq_param      rq;
-	struct mlx5e_sq_param      sq;
-	struct mlx5e_sq_param      xdp_sq;
-	struct mlx5e_sq_param      icosq;
-	struct mlx5e_cq_param      rx_cq;
-	struct mlx5e_cq_param      tx_cq;
-	struct mlx5e_cq_param      icosq_cq;
-};
-
 bool mlx5e_check_fragmented_striding_rq_cap(struct mlx5_core_dev *mdev)
 {
 	bool striding_rq_umr = MLX5_CAP_GEN(mdev, striding_rq) &&
