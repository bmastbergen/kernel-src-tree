drm/amdgpu/discovery: reserve discovery data at the top of VRAM

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Xiaojie Yuan <xiaojie.yuan@amd.com>
commit 5f6a556f98de425fcb7928456839a06f02156633
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/5f6a556f.failed

IP Discovery data is TMR fenced by the latest PSP BL,
so we need to reserve this region.

Tested on navi10/12/14 with VBIOS integrated with latest PSP BL.

v2: use DISCOVERY_TMR_SIZE macro as bo size
    use amdgpu_bo_create_kernel_at() to allocate bo

	Signed-off-by: Xiaojie Yuan <xiaojie.yuan@amd.com>
	Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
	Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 5f6a556f98de425fcb7928456839a06f02156633)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c
#	drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
#	drivers/gpu/drm/amd/display/dc/dcn10/dcn10_clk_mgr.h
#	drivers/gpu/drm/amd/include/discovery.h
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
index 73e71e61dc99,2e85a5154f87..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
@@@ -1719,9 -1747,23 +1719,23 @@@ int amdgpu_ttm_init(struct amdgpu_devic
  	r = amdgpu_bo_create_kernel(adev, adev->gmc.stolen_size, PAGE_SIZE,
  				    AMDGPU_GEM_DOMAIN_VRAM,
  				    &adev->stolen_vga_memory,
 -				    NULL, &stolen_vga_buf);
 +				    NULL, NULL);
  	if (r)
  		return r;
+ 
+ 	/*
+ 	 * reserve one TMR (64K) memory at the top of VRAM which holds
+ 	 * IP Discovery data and is protected by PSP.
+ 	 */
+ 	r = amdgpu_bo_create_kernel_at(adev,
+ 				       adev->gmc.real_vram_size - DISCOVERY_TMR_SIZE,
+ 				       DISCOVERY_TMR_SIZE,
+ 				       AMDGPU_GEM_DOMAIN_VRAM,
+ 				       &adev->discovery_memory,
+ 				       NULL);
+ 	if (r)
+ 		return r;
+ 
  	DRM_INFO("amdgpu: %uM of VRAM memory ready\n",
  		 (unsigned) (adev->gmc.real_vram_size / (1024 * 1024)));
  
@@@ -1801,8 -1825,12 +1815,15 @@@
   */
  void amdgpu_ttm_late_init(struct amdgpu_device *adev)
  {
 -	void *stolen_vga_buf;
  	/* return the VGA stolen memory (if any) back to VRAM */
++<<<<<<< HEAD
 +	amdgpu_bo_free_kernel(&adev->stolen_vga_memory, NULL, NULL);
++=======
+ 	amdgpu_bo_free_kernel(&adev->stolen_vga_memory, NULL, &stolen_vga_buf);
+ 
+ 	/* return the IP Discovery TMR memory back to VRAM */
+ 	amdgpu_bo_free_kernel(&adev->discovery_memory, NULL, NULL);
++>>>>>>> 5f6a556f98de (drm/amdgpu/discovery: reserve discovery data at the top of VRAM)
  }
  
  /**
diff --cc drivers/gpu/drm/amd/display/dc/dcn10/dcn10_clk_mgr.h
index a995eda443a3,5a6693d7d269..000000000000
--- a/drivers/gpu/drm/amd/display/dc/dcn10/dcn10_clk_mgr.h
+++ b/drivers/gpu/drm/amd/display/dc/dcn10/dcn10_clk_mgr.h
@@@ -19,25 -19,18 +19,36 @@@
   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
   * OTHER DEALINGS IN THE SOFTWARE.
   *
 + * Authors: AMD
 + *
   */
  
 -#ifndef __AMDGPU_DISCOVERY__
 -#define __AMDGPU_DISCOVERY__
 +#ifndef __DCN10_CLK_MGR_H__
 +#define __DCN10_CLK_MGR_H__
  
++<<<<<<< HEAD:drivers/gpu/drm/amd/display/dc/dcn10/dcn10_clk_mgr.h
 +#include "../dce/dce_clk_mgr.h"
++=======
+ #define DISCOVERY_TMR_SIZE  (64 << 10)
+ 
+ int amdgpu_discovery_init(struct amdgpu_device *adev);
+ void amdgpu_discovery_fini(struct amdgpu_device *adev);
+ int amdgpu_discovery_reg_base_init(struct amdgpu_device *adev);
+ int amdgpu_discovery_get_ip_version(struct amdgpu_device *adev, int hw_id,
+                                     int *major, int *minor);
+ int amdgpu_discovery_get_gfx_info(struct amdgpu_device *adev);
++>>>>>>> 5f6a556f98de (drm/amdgpu/discovery: reserve discovery data at the top of VRAM):drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
 +
 +struct clk_bypass {
 +	uint32_t dcfclk_bypass;
 +	uint32_t dispclk_pypass;
 +	uint32_t dprefclk_bypass;
 +};
 +
 +void dcn1_pplib_apply_display_requirements(
 +	struct dc *dc,
 +	struct dc_state *context);
 +
 +struct clk_mgr *dcn1_clk_mgr_create(struct dc_context *ctx);
  
 -#endif /* __AMDGPU_DISCOVERY__ */
 +#endif //__DCN10_CLK_MGR_H__
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c
* Unmerged path drivers/gpu/drm/amd/include/discovery.h
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu.h b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
index 8d0d7f3dd5fb..b4442c967b70 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu.h
@@ -747,6 +747,7 @@ struct amdgpu_device {
 	uint8_t				*bios;
 	uint32_t			bios_size;
 	struct amdgpu_bo		*stolen_vga_memory;
+	struct amdgpu_bo		*discovery_memory;
 	uint32_t			bios_scratch_reg_offset;
 	uint32_t			bios_scratch[AMDGPU_BIOS_NUM_SCRATCH];
 
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
* Unmerged path drivers/gpu/drm/amd/display/dc/dcn10/dcn10_clk_mgr.h
* Unmerged path drivers/gpu/drm/amd/include/discovery.h
