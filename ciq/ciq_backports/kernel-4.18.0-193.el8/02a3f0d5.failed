tc-testing: don't hardcode 'ip' in nsPlugin.py

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Davide Caratti <dcaratti@redhat.com>
commit 02a3f0d5a70a865d55c4b7cb2e327cb30491f7fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/02a3f0d5.failed

the following tdc test fails on Fedora:

 # ./tdc.py -e 2638
  -- ns/SubPlugin.__init__
 Test 2638: Add matchall and try to get it
 -----> prepare stage *** Could not execute: "$TC qdisc add dev $DEV1 clsact"
 -----> prepare stage *** Error message: "/bin/sh: ip: command not found"
 returncode 127; expected [0]
 -----> prepare stage *** Aborting test run.

Let nsPlugin.py use the 'IP' variable introduced with commit 92c1a19e2fb9
("tc-tests: added path to ip command in tdc"), so that the path to 'ip' is
correctly resolved to the value we have in tdc_config.py.

 # ./tdc.py -e 2638
  -- ns/SubPlugin.__init__
 Test 2638: Add matchall and try to get it
 All test results:
 1..1
 ok 1 2638 - Add matchall and try to get it

Fixes: 489ce2f42514 ("tc-testing: Restore original behaviour for namespaces in tdc")
	Reported-by: Hangbin Liu <liuhangbin@gmail.com>
	Signed-off-by: Davide Caratti <dcaratti@redhat.com>
	Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 02a3f0d5a70a865d55c4b7cb2e327cb30491f7fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py
diff --cc tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py
index a194b1af2b30,9539cffa9e5e..000000000000
--- a/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py
+++ b/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py
@@@ -73,26 -77,36 +73,48 @@@ class SubPlugin(TdcPlugin)
              print('adjust_command:  return command [{}]'.format(command))
          return command
  
++<<<<<<< HEAD
++=======
+     def _ports_create(self):
+         cmd = '$IP link add $DEV0 type veth peer name $DEV1'
+         self._exec_cmd('pre', cmd)
+         cmd = '$IP link set $DEV0 up'
+         self._exec_cmd('pre', cmd)
+         if not self.args.namespace:
+             cmd = '$IP link set $DEV1 up'
+             self._exec_cmd('pre', cmd)
+ 
+     def _ports_destroy(self):
+         cmd = '$IP link del $DEV0'
+         self._exec_cmd('post', cmd)
+ 
++>>>>>>> 02a3f0d5a70a (tc-testing: don't hardcode 'ip' in nsPlugin.py)
      def _ns_create(self):
          '''
          Create the network namespace in which the tests will be run and set up
          the required network devices for it.
          '''
 -        self._ports_create()
          if self.args.namespace:
-             cmd = 'ip netns add {}'.format(self.args.NAMES['NS'])
+             cmd = '$IP netns add {}'.format(self.args.NAMES['NS'])
              self._exec_cmd('pre', cmd)
++<<<<<<< HEAD
 +            cmd = 'ip link add $DEV0 type veth peer name $DEV1'
 +            self._exec_cmd('pre', cmd)
 +            cmd = 'ip link set $DEV1 netns {}'.format(self.args.NAMES['NS'])
 +            self._exec_cmd('pre', cmd)
 +            cmd = 'ip link set $DEV0 up'
 +            self._exec_cmd('pre', cmd)
 +            cmd = 'ip -n {} link set $DEV1 up'.format(self.args.NAMES['NS'])
++=======
+             cmd = '$IP link set $DEV1 netns {}'.format(self.args.NAMES['NS'])
+             self._exec_cmd('pre', cmd)
+             cmd = '$IP -n {} link set $DEV1 up'.format(self.args.NAMES['NS'])
++>>>>>>> 02a3f0d5a70a (tc-testing: don't hardcode 'ip' in nsPlugin.py)
              self._exec_cmd('pre', cmd)
              if self.args.device:
-                 cmd = 'ip link set $DEV2 netns {}'.format(self.args.NAMES['NS'])
+                 cmd = '$IP link set $DEV2 netns {}'.format(self.args.NAMES['NS'])
                  self._exec_cmd('pre', cmd)
-                 cmd = 'ip -n {} link set $DEV2 up'.format(self.args.NAMES['NS'])
+                 cmd = '$IP -n {} link set $DEV2 up'.format(self.args.NAMES['NS'])
                  self._exec_cmd('pre', cmd)
  
      def _ns_destroy(self):
* Unmerged path tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py
