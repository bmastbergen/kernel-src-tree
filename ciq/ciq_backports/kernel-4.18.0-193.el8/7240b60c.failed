linux: Add skb_frag_t page_offset accessors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jonathan Lemon <jonathan.lemon@gmail.com>
commit 7240b60c98d6309363a9f8d5a4ecd5b0626f2aff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7240b60c.failed

Add skb_frag_off(), skb_frag_off_add(), skb_frag_off_set(),
and skb_frag_off_copy() accessors for page_offset.

	Signed-off-by: Jonathan Lemon <jonathan.lemon@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7240b60c98d6309363a9f8d5a4ecd5b0626f2aff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
diff --cc include/linux/skbuff.h
index 0678e9ef412a,2957cdd6c032..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -314,41 -309,51 +314,72 @@@ extern int sysctl_max_skb_frags
   */
  #define GSO_BY_FRAGS	0xFFFF
  
 -typedef struct bio_vec skb_frag_t;
 +typedef struct skb_frag_struct skb_frag_t;
  
 +struct skb_frag_struct {
 +	struct {
 +		struct page *p;
 +	} page;
 +#if (BITS_PER_LONG > 32) || (PAGE_SIZE >= 65536)
 +	__u32 page_offset;
 +	__u32 size;
 +#else
 +	__u16 page_offset;
 +	__u16 size;
 +#endif
 +};
 +
++<<<<<<< HEAD
++=======
+ /**
+  * skb_frag_size() - Returns the size of a skb fragment
+  * @frag: skb fragment
+  */
++>>>>>>> 7240b60c98d6 (linux: Add skb_frag_t page_offset accessors)
  static inline unsigned int skb_frag_size(const skb_frag_t *frag)
  {
 -	return frag->bv_len;
 +	return frag->size;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * skb_frag_size_set() - Sets the size of a skb fragment
+  * @frag: skb fragment
+  * @size: size of fragment
+  */
++>>>>>>> 7240b60c98d6 (linux: Add skb_frag_t page_offset accessors)
  static inline void skb_frag_size_set(skb_frag_t *frag, unsigned int size)
  {
 -	frag->bv_len = size;
 +	frag->size = size;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * skb_frag_size_add() - Increments the size of a skb fragment by @delta
+  * @frag: skb fragment
+  * @delta: value to add
+  */
++>>>>>>> 7240b60c98d6 (linux: Add skb_frag_t page_offset accessors)
  static inline void skb_frag_size_add(skb_frag_t *frag, int delta)
  {
 -	frag->bv_len += delta;
 +	frag->size += delta;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * skb_frag_size_sub() - Decrements the size of a skb fragment by @delta
+  * @frag: skb fragment
+  * @delta: value to subtract
+  */
++>>>>>>> 7240b60c98d6 (linux: Add skb_frag_t page_offset accessors)
  static inline void skb_frag_size_sub(skb_frag_t *frag, int delta)
  {
 -	frag->bv_len -= delta;
 +	frag->size -= delta;
  }
  
 -/**
 - * skb_frag_must_loop - Test if %p is a high memory page
 - * @p: fragment's page
 - */
  static inline bool skb_frag_must_loop(struct page *p)
  {
  #if defined(CONFIG_HIGHMEM)
@@@ -3125,10 -3205,10 +3207,10 @@@ static inline bool skb_can_coalesce(str
  	if (skb_zcopy(skb))
  		return false;
  	if (i) {
 -		const skb_frag_t *frag = &skb_shinfo(skb)->frags[i - 1];
 +		const struct skb_frag_struct *frag = &skb_shinfo(skb)->frags[i - 1];
  
  		return page == skb_frag_page(frag) &&
- 		       off == frag->page_offset + skb_frag_size(frag);
+ 		       off == skb_frag_off(frag) + skb_frag_size(frag);
  	}
  	return false;
  }
* Unmerged path include/linux/skbuff.h
