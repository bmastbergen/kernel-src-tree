iommu/vt-d: Introduce macros useful for dumping DMAR table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Introduce macros useful for dumping DMAR table (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 94.55%
commit-author Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
commit cdd3a2499d30695730b22dc025c00b9b28884c6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/cdd3a249.failed

A scalable mode DMAR table walk would involve looking at bits in each stage
of walk, like,
1. Is PASID enabled in the context entry?
2. What's the size of PASID directory?
3. Is the PASID directory entry present?
4. Is the PASID table entry present?
5. Number of PASID table entries?

Hence, add these macros that will later be used during this walk.
Apart from adding new macros, move existing macros (like
pasid_pde_is_present(), get_pasid_table_from_pde() and pasid_supported())
to appropriate header files so that they could be reused.

	Cc: Joerg Roedel <joro@8bytes.org>
	Cc: Ashok Raj <ashok.raj@intel.com>
	Cc: Lu Baolu <baolu.lu@linux.intel.com>
	Cc: Sohil Mehta <sohil.mehta@intel.com>
	Cc: David Woodhouse <dwmw2@infradead.org>
	Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit cdd3a2499d30695730b22dc025c00b9b28884c6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-pasid.h
diff --cc drivers/iommu/intel-pasid.h
index 7aa7e4a635a7,fc8cd8f17de1..000000000000
--- a/drivers/iommu/intel-pasid.h
+++ b/drivers/iommu/intel-pasid.h
@@@ -12,10 -12,37 +12,41 @@@
  
  #define PASID_RID2PASID			0x0
  #define PASID_MIN			0x1
++<<<<<<< HEAD
 +#define PASID_MAX			0x20000
++=======
+ #define PASID_MAX			0x100000
+ #define PASID_PTE_MASK			0x3F
+ #define PASID_PTE_PRESENT		1
+ #define PDE_PFN_MASK			PAGE_MASK
+ #define PASID_PDE_SHIFT			6
+ #define MAX_NR_PASID_BITS		20
+ #define PASID_TBL_ENTRIES		BIT(PASID_PDE_SHIFT)
+ 
+ #define is_pasid_enabled(entry)		(((entry)->lo >> 3) & 0x1)
+ #define get_pasid_dir_size(entry)	(1 << ((((entry)->lo >> 9) & 0x7) + 7))
+ 
+ /*
+  * Domain ID reserved for pasid entries programmed for first-level
+  * only and pass-through transfer modes.
+  */
+ #define FLPT_DEFAULT_DID		1
+ 
+ /*
+  * The SUPERVISOR_MODE flag indicates a first level translation which
+  * can be used for access to kernel addresses. It is valid only for
+  * access to the kernel's static 1:1 mapping of physical memory â€” not
+  * to vmalloc or even module mappings.
+  */
+ #define PASID_FLAG_SUPERVISOR_MODE	BIT(0)
+ 
+ struct pasid_dir_entry {
+ 	u64 val;
+ };
++>>>>>>> cdd3a2499d30 (iommu/vt-d: Introduce macros useful for dumping DMAR table)
  
  struct pasid_entry {
 -	u64 val[8];
 +	u64 val;
  };
  
  /* The representative of a PASID table */
diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 2b01c065423a..049ee6c6623e 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -355,6 +355,7 @@ int dmar_disabled = 0;
 int dmar_disabled = 1;
 #endif /*CONFIG_INTEL_IOMMU_DEFAULT_ON*/
 
+int intel_iommu_sm;
 int intel_iommu_enabled = 0;
 EXPORT_SYMBOL_GPL(intel_iommu_enabled);
 
@@ -362,17 +363,12 @@ static int dmar_map_gfx = 1;
 static int dmar_forcedac;
 static int intel_iommu_strict;
 static int intel_iommu_superpage = 1;
-static int intel_iommu_sm;
 static int iommu_identity_mapping;
 
 #define IDENTMAP_ALL		1
 #define IDENTMAP_GFX		2
 #define IDENTMAP_AZALIA		4
 
-#define sm_supported(iommu)	(intel_iommu_sm && ecap_smts((iommu)->ecap))
-#define pasid_supported(iommu)	(sm_supported(iommu) &&			\
-				 ecap_pasid((iommu)->ecap))
-
 int intel_iommu_gfx_mapped;
 EXPORT_SYMBOL_GPL(intel_iommu_gfx_mapped);
 
* Unmerged path drivers/iommu/intel-pasid.h
diff --git a/include/linux/intel-iommu.h b/include/linux/intel-iommu.h
index 8d42a6ffd805..6e414cc4a198 100644
--- a/include/linux/intel-iommu.h
+++ b/include/linux/intel-iommu.h
@@ -426,6 +426,12 @@ enum {
 #define VTD_FLAG_TRANS_PRE_ENABLED	(1 << 0)
 #define VTD_FLAG_IRQ_REMAP_PRE_ENABLED	(1 << 1)
 
+extern int intel_iommu_sm;
+
+#define sm_supported(iommu)	(intel_iommu_sm && ecap_smts((iommu)->ecap))
+#define pasid_supported(iommu)	(sm_supported(iommu) &&			\
+				 ecap_pasid((iommu)->ecap))
+
 struct pasid_entry;
 struct pasid_state_entry;
 struct page_req_dsc;
