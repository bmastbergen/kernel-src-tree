net: sched: prevent duplicate flower rules from tcf_proto destroy race

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] sched: prevent duplicate flower rules from tcf_proto destroy race (Ivan Vecera) [1789862]
Rebuild_FUZZ: 96.30%
commit-author John Hurley <john.hurley@netronome.com>
commit 59eb87cb52c9f7164804bc8639c4d03ba9b0c169
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/59eb87cb.failed

When a new filter is added to cls_api, the function
tcf_chain_tp_insert_unique() looks up the protocol/priority/chain to
determine if the tcf_proto is duplicated in the chain's hashtable. It then
creates a new entry or continues with an existing one. In cls_flower, this
allows the function fl_ht_insert_unque to determine if a filter is a
duplicate and reject appropriately, meaning that the duplicate will not be
passed to drivers via the offload hooks. However, when a tcf_proto is
destroyed it is removed from its chain before a hardware remove hook is
hit. This can lead to a race whereby the driver has not received the
remove message but duplicate flows can be accepted. This, in turn, can
lead to the offload driver receiving incorrect duplicate flows and out of
order add/delete messages.

Prevent duplicates by utilising an approach suggested by Vlad Buslov. A
hash table per block stores each unique chain/protocol/prio being
destroyed. This entry is only removed when the full destroy (and hardware
offload) has completed. If a new flow is being added with the same
identiers as a tc_proto being detroyed, then the add request is replayed
until the destroy is complete.

Fixes: 8b64678e0af8 ("net: sched: refactor tp insert/delete for concurrent execution")
	Signed-off-by: John Hurley <john.hurley@netronome.com>
	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Reviewed-by: Simon Horman <simon.horman@netronome.com>
	Reported-by: Louis Peens <louis.peens@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 59eb87cb52c9f7164804bc8639c4d03ba9b0c169)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/sch_generic.h
#	net/sched/cls_api.c
diff --cc include/net/sch_generic.h
index 9b7506b9aad2,d80acda231ae..000000000000
--- a/include/net/sch_generic.h
+++ b/include/net/sch_generic.h
@@@ -13,8 -13,12 +13,14 @@@
  #include <linux/refcount.h>
  #include <linux/workqueue.h>
  #include <linux/mutex.h>
++<<<<<<< HEAD
++=======
+ #include <linux/rwsem.h>
+ #include <linux/atomic.h>
+ #include <linux/hashtable.h>
++>>>>>>> 59eb87cb52c9 (net: sched: prevent duplicate flower rules from tcf_proto destroy race)
  #include <net/gen_stats.h>
  #include <net/rtnetlink.h>
 -#include <net/flow_offload.h>
  
  struct Qdisc_ops;
  struct qdisc_walker;
diff --cc net/sched/cls_api.c
index 36ca1f338da1,20d60b8fcb70..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -999,8 -910,10 +1065,14 @@@ static struct tcf_block *tcf_block_crea
  		return ERR_PTR(-ENOMEM);
  	}
  	mutex_init(&block->lock);
++<<<<<<< HEAD
++=======
+ 	mutex_init(&block->proto_destroy_lock);
+ 	init_rwsem(&block->cb_lock);
+ 	flow_block_init(&block->flow_block);
++>>>>>>> 59eb87cb52c9 (net: sched: prevent duplicate flower rules from tcf_proto destroy race)
  	INIT_LIST_HEAD(&block->chain_list);
 +	INIT_LIST_HEAD(&block->cb_list);
  	INIT_LIST_HEAD(&block->owner_list);
  	INIT_LIST_HEAD(&block->chain0.filter_chain_list);
  
* Unmerged path include/net/sch_generic.h
* Unmerged path net/sched/cls_api.c
