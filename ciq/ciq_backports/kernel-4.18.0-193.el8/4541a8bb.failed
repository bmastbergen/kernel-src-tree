tools build: Check if gettid() is available before providing helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 4541a8bb13a86e504416a13360c8dc64d2fd612a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4541a8bb.failed

Laura reported that the perf build failed in fedora when we got a glibc
that provides gettid(), which I reproduced using fedora rawhide with the
glibc-devel-2.29.9000-26.fc31.x86_64 package.

Add a feature check to avoid providing a gettid() helper in such
systems.

On a fedora rawhide system with this patch applied we now get:

  [root@7a5f55352234 perf]# grep gettid /tmp/build/perf/FEATURE-DUMP
  feature-gettid=1
  [root@7a5f55352234 perf]# cat /tmp/build/perf/feature/test-gettid.make.output
  [root@7a5f55352234 perf]# ldd /tmp/build/perf/feature/test-gettid.bin
          linux-vdso.so.1 (0x00007ffc6b1f6000)
          libc.so.6 => /lib64/libc.so.6 (0x00007f04e0a74000)
          /lib64/ld-linux-x86-64.so.2 (0x00007f04e0c47000)
  [root@7a5f55352234 perf]# nm /tmp/build/perf/feature/test-gettid.bin | grep -w gettid
                   U gettid@@GLIBC_2.30
  [root@7a5f55352234 perf]#

While on a fedora:29 system:

  [acme@quaco perf]$ grep gettid /tmp/build/perf/FEATURE-DUMP
  feature-gettid=0
  [acme@quaco perf]$ cat /tmp/build/perf/feature/test-gettid.make.output
  test-gettid.c: In function ‘main’:
  test-gettid.c:8:9: error: implicit declaration of function ‘gettid’; did you mean ‘getgid’? [-Werror=implicit-function-declaration]
    return gettid();
           ^~~~~~
           getgid
  cc1: all warnings being treated as errors
  [acme@quaco perf]$

	Reported-by: Laura Abbott <labbott@redhat.com>
	Tested-by: Laura Abbott <labbott@redhat.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Florian Weimer <fweimer@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: https://lkml.kernel.org/n/tip-yfy3ch53agmklwu9o7rlgf9c@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 4541a8bb13a86e504416a13360c8dc64d2fd612a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/Makefile.feature
#	tools/build/feature/test-all.c
#	tools/perf/Makefile.config
diff --cc tools/build/Makefile.feature
index c13a69d78773,50377cc2f5f9..000000000000
--- a/tools/build/Makefile.feature
+++ b/tools/build/Makefile.feature
@@@ -34,6 -35,8 +34,11 @@@ FEATURE_TESTS_BASIC :
          eventfd                         \
          fortify-source                  \
          sync-compare-and-swap           \
++<<<<<<< HEAD
++=======
+         get_current_dir_name            \
+         gettid				\
++>>>>>>> 4541a8bb13a8 (tools build: Check if gettid() is available before providing helper)
          glibc                           \
          gtk2                            \
          gtk2-infobar                    \
diff --cc tools/build/feature/test-all.c
index eb95e6e5a536,3b3d5d72124a..000000000000
--- a/tools/build/feature/test-all.c
+++ b/tools/build/feature/test-all.c
@@@ -34,6 -34,14 +34,17 @@@
  # include "test-libelf-mmap.c"
  #undef main
  
++<<<<<<< HEAD
++=======
+ #define main main_test_get_current_dir_name
+ # include "test-get_current_dir_name.c"
+ #undef main
+ 
+ #define main main_test_gettid
+ # include "test-gettid.c"
+ #undef main
+ 
++>>>>>>> 4541a8bb13a8 (tools build: Check if gettid() is available before providing helper)
  #define main main_test_glibc
  # include "test-glibc.c"
  #undef main
@@@ -190,6 -198,8 +201,11 @@@ int main(int argc, char *argv[]
  	main_test_hello();
  	main_test_libelf();
  	main_test_libelf_mmap();
++<<<<<<< HEAD
++=======
+ 	main_test_get_current_dir_name();
+ 	main_test_gettid();
++>>>>>>> 4541a8bb13a8 (tools build: Check if gettid() is available before providing helper)
  	main_test_glibc();
  	main_test_dwarf();
  	main_test_dwarf_getlocations();
diff --cc tools/perf/Makefile.config
index 36005a3ebce0,5f16a20cae86..000000000000
--- a/tools/perf/Makefile.config
+++ b/tools/perf/Makefile.config
@@@ -327,6 -328,14 +327,17 @@@ ifeq ($(feature-eventfd), 1
    CFLAGS += -DHAVE_EVENTFD
  endif
  
++<<<<<<< HEAD
++=======
+ ifeq ($(feature-get_current_dir_name), 1)
+   CFLAGS += -DHAVE_GET_CURRENT_DIR_NAME
+ endif
+ 
+ ifeq ($(feature-gettid), 1)
+   CFLAGS += -DHAVE_GETTID
+ endif
+ 
++>>>>>>> 4541a8bb13a8 (tools build: Check if gettid() is available before providing helper)
  ifdef NO_LIBELF
    NO_DWARF := 1
    NO_DEMANGLE := 1
* Unmerged path tools/build/Makefile.feature
diff --git a/tools/build/feature/Makefile b/tools/build/feature/Makefile
index 6368c2ca59af..416ba906558f 100644
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@ -53,6 +53,7 @@ FILES=                                          \
          test-get_cpuid.bin                     \
          test-sdt.bin                           \
          test-cxx.bin                           \
+         test-gettid.bin			\
          test-jvmti.bin				\
          test-jvmti-cmlr.bin			\
          test-sched_getcpu.bin			\
@@ -263,6 +264,9 @@ $(OUTPUT)test-sdt.bin:
 $(OUTPUT)test-cxx.bin:
 	$(BUILDXX) -std=gnu++11
 
+$(OUTPUT)test-gettid.bin:
+	$(BUILD)
+
 $(OUTPUT)test-jvmti.bin:
 	$(BUILD)
 
* Unmerged path tools/build/feature/test-all.c
diff --git a/tools/build/feature/test-gettid.c b/tools/build/feature/test-gettid.c
new file mode 100644
index 000000000000..ef24e42d3f1b
--- /dev/null
+++ b/tools/build/feature/test-gettid.c
@@ -0,0 +1,11 @@
+// SPDX-License-Identifier: GPL-2.0
+// Copyright (C) 2019, Red Hat Inc, Arnaldo Carvalho de Melo <acme@redhat.com>
+#define _GNU_SOURCE
+#include <unistd.h>
+
+int main(void)
+{
+	return gettid();
+}
+
+#undef _GNU_SOURCE
* Unmerged path tools/perf/Makefile.config
diff --git a/tools/perf/jvmti/jvmti_agent.c b/tools/perf/jvmti/jvmti_agent.c
index f7eb63cbbc65..88108598d6e9 100644
--- a/tools/perf/jvmti/jvmti_agent.c
+++ b/tools/perf/jvmti/jvmti_agent.c
@@ -45,10 +45,12 @@
 static char jit_path[PATH_MAX];
 static void *marker_addr;
 
+#ifndef HAVE_GETTID
 static inline pid_t gettid(void)
 {
 	return (pid_t)syscall(__NR_gettid);
 }
+#endif
 
 static int get_e_machine(struct jitheader *hdr)
 {
