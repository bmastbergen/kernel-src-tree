scsi: qla2xxx: Uninline qla2x00_init_timer()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Bart Van Assche <bvanassche@acm.org>
commit 12975426d8889ce42821e9e0348f9a2da343779a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/12975426.failed

Since qla2x00_init_timer() is not used for I/O commands there is no need to
inline this function. Hence uninline this function.

	Cc: Himanshu Madhani <hmadhani@marvell.com>
	Cc: Giridhar Malavali <gmalavali@marvell.com>
	Signed-off-by: Bart Van Assche <bvanassche@acm.org>
	Acked-by: Himanshu Madhani <hmadhani@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 12975426d8889ce42821e9e0348f9a2da343779a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_inline.h
diff --cc drivers/scsi/qla2xxx/qla_inline.h
index 8b6c54843283,bf063c664352..000000000000
--- a/drivers/scsi/qla2xxx/qla_inline.h
+++ b/drivers/scsi/qla2xxx/qla_inline.h
@@@ -219,17 -219,6 +219,20 @@@ qla2x00_rel_sp(srb_t *sp
  	qla2xxx_rel_qpair_sp(sp->qpair, sp);
  }
  
++<<<<<<< HEAD
 +static inline void
 +qla2x00_init_timer(srb_t *sp, unsigned long tmo)
 +{
 +	timer_setup(&sp->u.iocb_cmd.timer, qla2x00_sp_timeout, 0);
 +	sp->u.iocb_cmd.timer.expires = jiffies + tmo * HZ;
 +	sp->free = qla2x00_sp_free;
 +	if (IS_QLAFX00(sp->vha->hw) && (sp->type == SRB_FXIOCB_DCMD))
 +		init_completion(&sp->u.iocb_cmd.u.fxiocb.fxiocb_comp);
 +	add_timer(&sp->u.iocb_cmd.timer);
 +}
 +
++=======
++>>>>>>> 12975426d888 (scsi: qla2xxx: Uninline qla2x00_init_timer())
  static inline int
  qla2x00_gid_list_size(struct qla_hw_data *ha)
  {
diff --git a/drivers/scsi/qla2xxx/qla_gbl.h b/drivers/scsi/qla2xxx/qla_gbl.h
index c218574a45fb..932516db2844 100644
--- a/drivers/scsi/qla2xxx/qla_gbl.h
+++ b/drivers/scsi/qla2xxx/qla_gbl.h
@@ -281,6 +281,7 @@ extern int qla2x00_start_sp(srb_t *);
 extern int qla24xx_dif_start_scsi(srb_t *);
 extern int qla2x00_start_bidir(srb_t *, struct scsi_qla_host *, uint32_t);
 extern int qla2xxx_dif_start_scsi_mq(srb_t *);
+extern void qla2x00_init_timer(srb_t *sp, unsigned long tmo);
 extern unsigned long qla2x00_get_async_timeout(struct scsi_qla_host *);
 
 extern void *qla2x00_alloc_iocbs(struct scsi_qla_host *, srb_t *);
* Unmerged path drivers/scsi/qla2xxx/qla_inline.h
diff --git a/drivers/scsi/qla2xxx/qla_iocb.c b/drivers/scsi/qla2xxx/qla_iocb.c
index 5ec975e110c5..54dc1bbeeefb 100644
--- a/drivers/scsi/qla2xxx/qla_iocb.c
+++ b/drivers/scsi/qla2xxx/qla_iocb.c
@@ -2565,6 +2565,17 @@ qla24xx_tm_iocb(srb_t *sp, struct tsk_mgmt_entry *tsk)
 	}
 }
 
+void qla2x00_init_timer(srb_t *sp, unsigned long tmo)
+{
+	timer_setup(&sp->u.iocb_cmd.timer, qla2x00_sp_timeout, 0);
+	sp->u.iocb_cmd.timer.expires = jiffies + tmo * HZ;
+	sp->free = qla2x00_sp_free;
+	init_completion(&sp->comp);
+	if (IS_QLAFX00(sp->vha->hw) && sp->type == SRB_FXIOCB_DCMD)
+		init_completion(&sp->u.iocb_cmd.u.fxiocb.fxiocb_comp);
+	add_timer(&sp->u.iocb_cmd.timer);
+}
+
 static void
 qla2x00_els_dcmd_sp_free(void *data)
 {
