ASoC: soc-core: move soc_probe_dai() next to soc_remove_dai()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-core: move soc_probe_dai() next to soc_remove_dai() (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 95.31%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit a7d44f78063d642406132c2ed1dc6033d0d03cfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a7d44f78.failed

It is easy to read code if it is cleanly using paired function/naming,
like start <-> stop, register <-> unregister, etc, etc.
But, current ALSA SoC code is very random, unbalance, not paired, etc.
It is easy to create bug at the such code, and it will be difficult to
debug.

This patch moves soc_probe_dai() next to soc_remove_dai() which is
paired function.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Link: https://lore.kernel.org/r/87zhjkor1x.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit a7d44f78063d642406132c2ed1dc6033d0d03cfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-core.c
diff --cc sound/soc/soc-core.c
index f15c8bc335f7,3ca5a21bfa6a..000000000000
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@@ -1548,27 -1431,6 +1568,30 @@@ static int soc_rtd_init(struct snd_soc_
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int soc_probe_dai(struct snd_soc_dai *dai, int order)
 +{
 +	if (dai->probed ||
 +	    dai->driver->probe_order != order)
 +		return 0;
 +
 +	if (dai->driver->probe) {
 +		int ret = dai->driver->probe(dai);
 +
 +		if (ret < 0) {
 +			dev_err(dai->dev, "ASoC: failed to probe DAI %s: %d\n",
 +				dai->name, ret);
 +			return ret;
 +		}
 +	}
 +
 +	dai->probed = 1;
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> a7d44f78063d (ASoC: soc-core: move soc_probe_dai() next to soc_remove_dai())
  static int soc_link_dai_pcm_new(struct snd_soc_dai **dais, int num_dais,
  				struct snd_soc_pcm_runtime *rtd)
  {
* Unmerged path sound/soc/soc-core.c
