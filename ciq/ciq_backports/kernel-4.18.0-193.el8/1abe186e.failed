IB/mlx5: Reset access mask when looping inside page fault handler

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Moni Shoua <monis@mellanox.com>
commit 1abe186ed8a6593069bc122da55fc684383fdc1c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/1abe186e.failed

If page-fault handler spans multiple MRs then the access mask needs to
be reset before each MR handling or otherwise write access will be
granted to mapped pages instead of read-only.

	Cc: <stable@vger.kernel.org> # 3.19
Fixes: 7bdf65d411c1 ("IB/mlx5: Handle page faults")
	Reported-by: Jerome Glisse <jglisse@redhat.com>
	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 1abe186ed8a6593069bc122da55fc684383fdc1c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/odp.c
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 13a008cb3994,0aa10ebda5d9..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -583,9 -583,9 +583,13 @@@ static int pagefault_mr(struct mlx5_ib_
  	struct ib_umem_odp *odp_mr = to_ib_umem_odp(mr->umem);
  	bool downgrade = flags & MLX5_PF_FLAGS_DOWNGRADE;
  	bool prefetch = flags & MLX5_PF_FLAGS_PREFETCH;
++<<<<<<< HEAD
 +	int npages = 0, current_seq, page_shift, ret, np;
 +	bool implicit = false;
 +	u64 access_mask = ODP_READ_ALLOWED_BIT;
++=======
+ 	u64 access_mask;
++>>>>>>> 1abe186ed8a6 (IB/mlx5: Reset access mask when looping inside page fault handler)
  	u64 start_idx, page_mask;
  	struct ib_umem_odp *odp;
  	size_t size;
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
