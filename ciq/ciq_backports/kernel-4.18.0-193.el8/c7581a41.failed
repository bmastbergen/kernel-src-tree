drm: Use EOPNOTSUPP, not ENOTSUPP

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit c7581a414d28413c1dd6d116d44859b5a52e0950
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/c7581a41.failed

- it's what we recommend in our docs:

https://dri.freedesktop.org/docs/drm/gpu/drm-uapi.html#recommended-ioctl-return-values

- it's the overwhelmingly used error code for "operation not
  supported", at least in drm core (slightly less so in drivers):

$ git grep EOPNOTSUPP -- drivers/gpu/drm/*c | wc -l
83
$ git grep ENOTSUPP -- drivers/gpu/drm/*c | wc -l
5

- include/linux/errno.h makes it fairly clear that these are for nfsv3
  (plus they also have error codes above 512, which is the block with
  some special behaviour ...)

/* Defined for the NFSv3 protocol */

If the above isn't reflecting current practice, then I guess we should
at least update the docs.

Noralf commented:

Ben Hutchings made this comment[1] in a thread about use of ENOTSUPP in
drivers:

  glibc's strerror() returns these strings for ENOTSUPP and EOPNOTSUPP
  respectively:

  "Unknown error 524"
  "Operation not supported"

So at least for errors returned to userspace EOPNOTSUPP makes sense.

José asked:

> Hopefully this will not break any userspace

None of the functions in drm_edid.c affected by this reach userspace,
it's all driver internal.

Same for the mipi function, that error code should be handled by
drivers. Drivers are supposed to remap "the hw is on fire" to EIO when
reporting up to userspace, but I think if a driver sees this it would
be a driver bug.
v2: Augment commit message with comments from Noralf and José

	Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
	Acked-by: Noralf Trønnes <noralf@tronnes.org>
	Cc: José Roberto de Souza <jose.souza@intel.com>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Maxime Ripard <mripard@kernel.org>
	Cc: Sean Paul <sean@poorly.run>
	Cc: Alex Deucher <alexander.deucher@amd.com>
	Cc: Andres Rodriguez <andresx7@gmail.com>
	Cc: Noralf Trønnes <noralf@tronnes.org>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190904143942.31756-1-daniel.vetter@ffwll.ch
(cherry picked from commit c7581a414d28413c1dd6d116d44859b5a52e0950)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/tinydrm/mipi-dbi.c
diff --cc drivers/gpu/drm/tinydrm/mipi-dbi.c
index 918f77c7de34,f8154316a3b0..000000000000
--- a/drivers/gpu/drm/tinydrm/mipi-dbi.c
+++ b/drivers/gpu/drm/tinydrm/mipi-dbi.c
@@@ -774,18 -948,18 +774,23 @@@ static int mipi_dbi_spi1_transfer(struc
  	return 0;
  }
  
 -static int mipi_dbi_typec1_command(struct mipi_dbi *dbi, u8 *cmd,
 +static int mipi_dbi_typec1_command(struct mipi_dbi *mipi, u8 cmd,
  				   u8 *parameters, size_t num)
  {
 -	unsigned int bpw = (*cmd == MIPI_DCS_WRITE_MEMORY_START) ? 16 : 8;
 +	unsigned int bpw = (cmd == MIPI_DCS_WRITE_MEMORY_START) ? 16 : 8;
  	int ret;
  
++<<<<<<< HEAD:drivers/gpu/drm/tinydrm/mipi-dbi.c
 +	if (mipi_dbi_command_is_read(mipi, cmd))
 +		return -ENOTSUPP;
++=======
+ 	if (mipi_dbi_command_is_read(dbi, *cmd))
+ 		return -EOPNOTSUPP;
++>>>>>>> c7581a414d28 (drm: Use EOPNOTSUPP, not ENOTSUPP):drivers/gpu/drm/drm_mipi_dbi.c
  
 -	MIPI_DBI_DEBUG_COMMAND(*cmd, parameters, num);
 +	MIPI_DBI_DEBUG_COMMAND(cmd, parameters, num);
  
 -	ret = mipi_dbi_spi1_transfer(dbi, 0, cmd, 1, 8);
 +	ret = mipi_dbi_spi1_transfer(mipi, 0, &cmd, 1, 8);
  	if (ret || !num)
  		return ret;
  
diff --git a/drivers/gpu/drm/drm_edid.c b/drivers/gpu/drm/drm_edid.c
index 3697d229618f..a1dfcb30bdc9 100644
--- a/drivers/gpu/drm/drm_edid.c
+++ b/drivers/gpu/drm/drm_edid.c
@@ -3728,7 +3728,7 @@ cea_db_offsets(const u8 *cea, int *start, int *end)
 		if (*end < 4 || *end > 127)
 			return -ERANGE;
 	} else {
-		return -ENOTSUPP;
+		return -EOPNOTSUPP;
 	}
 
 	return 0;
@@ -4148,7 +4148,7 @@ int drm_edid_to_sad(struct edid *edid, struct cea_sad **sads)
 
 	if (cea_revision(cea) < 3) {
 		DRM_DEBUG_KMS("SAD: wrong CEA revision\n");
-		return -ENOTSUPP;
+		return -EOPNOTSUPP;
 	}
 
 	if (cea_db_offsets(cea, &start, &end)) {
@@ -4209,7 +4209,7 @@ int drm_edid_to_speaker_allocation(struct edid *edid, u8 **sadb)
 
 	if (cea_revision(cea) < 3) {
 		DRM_DEBUG_KMS("SAD: wrong CEA revision\n");
-		return -ENOTSUPP;
+		return -EOPNOTSUPP;
 	}
 
 	if (cea_db_offsets(cea, &start, &end)) {
* Unmerged path drivers/gpu/drm/tinydrm/mipi-dbi.c
