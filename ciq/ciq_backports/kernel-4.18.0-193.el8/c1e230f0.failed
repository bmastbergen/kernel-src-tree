ASoC: soc-core: soc_find_component() uses snd_soc_dai_link_component

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-core: soc_find_component() uses snd_soc_dai_link_component (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 95.77%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit c1e230f0f7a3cc640317aa78389258a2fa54bcde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/c1e230f0.failed

soc_find_component() is using "of_node" and "name" to finding component,
but we should use snd_soc_dai_link_component now, because it is created
to such purpose.

This patch uses snd_soc_dai_link_component for soc_find_component().

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit c1e230f0f7a3cc640317aa78389258a2fa54bcde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-core.c
diff --cc sound/soc/soc-core.c
index 757912af181d,1749f4af91b6..000000000000
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@@ -760,24 -760,6 +760,20 @@@ static struct device_nod
  	return of_node;
  }
  
 +static struct snd_soc_component *soc_find_component(
- 	struct device_node *of_node, const char *name)
++	const struct snd_soc_dai_link_component *dlc)
 +{
 +	struct snd_soc_component *component;
- 	struct snd_soc_dai_link_component dlc;
 +
 +	lockdep_assert_held(&client_mutex);
 +
- 	for_each_component(component) {
- 		dlc.name = name;
- 		dlc.of_node = of_node;
- 		if (snd_soc_is_matching_component(&dlc, component))
++	for_each_component(component)
++		if (snd_soc_is_matching_component(dlc, component))
 +			return component;
- 	}
 +
 +	return NULL;
 +}
 +
  static int snd_soc_is_matching_component(
  	const struct snd_soc_dai_link_component *dlc,
  	struct snd_soc_component *component)
@@@ -1182,21 -1073,43 +1178,57 @@@ static int soc_init_dai_link(struct snd
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * Platform may be specified by either name or OF node,
+ 	 * or no Platform.
+ 	 *
+ 	 * FIXME
+ 	 *
+ 	 * We need multi-platform support
+ 	 */
+ 	if (link->num_platforms > 0) {
+ 
+ 		if (link->num_platforms > 1) {
+ 			dev_err(card->dev,
+ 				"ASoC: multi platform is not yet supported %s\n",
+ 				link->name);
+ 			return -EINVAL;
+ 		}
+ 
+ 		if (link->platforms->name && link->platforms->of_node) {
+ 			dev_err(card->dev,
+ 				"ASoC: Both platform name/of_node are set for %s\n",
+ 				link->name);
+ 			return -EINVAL;
+ 		}
+ 
+ 		/*
+ 		 * Defer card registartion if platform dai component is not
+ 		 * added to component list.
+ 		 */
+ 		if ((link->platforms->of_node || link->platforms->name) &&
+ 		    !soc_find_component(link->platforms))
+ 			return -EPROBE_DEFER;
+ 	}
+ 
++>>>>>>> c1e230f0f7a3 (ASoC: soc-core: soc_find_component() uses snd_soc_dai_link_component)
  	/* FIXME */
 -	if (link->num_cpus > 1) {
 +	if (link->num_platforms > 1) {
 +		dev_err(card->dev,
 +			"ASoC: multi platform is not yet supported %s\n",
 +			link->name);
 +		return -EINVAL;
 +	}
 +
 +	/*
 +	 * Platform may be specified by either name or OF node, but
 +	 * can be left unspecified, and a dummy platform will be used.
 +	 */
 +	if (link->platforms->name && link->platforms->of_node) {
  		dev_err(card->dev,
 -			"ASoC: multi cpu is not yet supported %s\n",
 +			"ASoC: Both platform name/of_node are set for %s\n",
  			link->name);
  		return -EINVAL;
  	}
@@@ -1225,8 -1130,8 +1257,13 @@@
  	 * Defer card registartion if cpu dai component is not added to
  	 * component list.
  	 */
++<<<<<<< HEAD
 +	if ((link->cpu_of_node || link->cpu_name) &&
 +	    !soc_find_component(link->cpu_of_node, link->cpu_name))
++=======
+ 	if ((link->cpus->of_node || link->cpus->name) &&
+ 	    !soc_find_component(link->cpus))
++>>>>>>> c1e230f0f7a3 (ASoC: soc-core: soc_find_component() uses snd_soc_dai_link_component)
  		return -EPROBE_DEFER;
  
  	/*
@@@ -1666,12 -1571,11 +1703,11 @@@ static int soc_probe_link_dais(struct s
  	return 0;
  }
  
 -static int soc_bind_aux_dev(struct snd_soc_card *card, int num)
 +static int soc_bind_aux_dev(struct snd_soc_card *card,
 +			    struct snd_soc_aux_dev *aux_dev)
  {
 -	struct snd_soc_aux_dev *aux_dev = &card->aux_dev[num];
  	struct snd_soc_component *component;
- 	const char *name;
- 	struct device_node *codec_of_node;
+ 	struct snd_soc_dai_link_component dlc;
  
  	if (aux_dev->codec_of_node || aux_dev->codec_name) {
  		/* codecs, usually analog devices */
* Unmerged path sound/soc/soc-core.c
