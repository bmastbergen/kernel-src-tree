net/mlx5e: Fix wrong max num channels indication

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: Fix wrong max num channels indication (Mohammad Heib) [1776921]
Rebuild_FUZZ: 95.65%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit 694826e366349d5b27599f591d3bd3a53512306e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/694826e3.failed

No XSK support in the enhanced IPoIB driver and representors.
Add a profile property to specify this, and enhance the logic
that calculates the max number of channels to take it into
account.

Fixes: db05815b36cb ("net/mlx5e: Add XSK zero-copy support")
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 694826e366349d5b27599f591d3bd3a53512306e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en/params.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
#	drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 1599dd95552b,ce1be2a84231..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -155,6 -156,11 +155,14 @@@ do 
  			    ##__VA_ARGS__);                     \
  } while (0)
  
++<<<<<<< HEAD
++=======
+ enum mlx5e_rq_group {
+ 	MLX5E_RQ_GROUP_REGULAR,
+ 	MLX5E_RQ_GROUP_XSK,
+ #define MLX5E_NUM_RQ_GROUPS(g) (1 + MLX5E_RQ_GROUP_##g)
+ };
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  
  static inline u16 mlx5_min_rx_wqes(int wq_type, u32 wq_size)
  {
@@@ -176,13 -182,6 +184,16 @@@ static inline int mlx5e_get_max_num_cha
  		min_t(int, mlx5_comp_vectors_count(mdev), MLX5E_MAX_NUM_CHANNELS);
  }
  
++<<<<<<< HEAD
 +/* Use this function to get max num channels after netdev was created */
 +static inline int mlx5e_get_netdev_max_channels(struct net_device *netdev)
 +{
 +	return min_t(unsigned int, netdev->num_rx_queues,
 +		     netdev->num_tx_queues);
 +}
 +
++=======
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  struct mlx5e_tx_wqe {
  	struct mlx5_wqe_ctrl_seg ctrl;
  	struct mlx5_wqe_eth_seg  eth;
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/params.h
index 0ef1436c4c76,3a615d663d84..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/params.h
@@@ -6,18 -6,120 +6,97 @@@
  
  #include "en.h"
  
++<<<<<<< HEAD
 +u32 mlx5e_rx_get_linear_frag_sz(struct mlx5e_params *params);
 +u8 mlx5e_mpwqe_log_pkts_per_wqe(struct mlx5e_params *params);
 +bool mlx5e_rx_is_linear_skb(struct mlx5_core_dev *mdev,
 +			    struct mlx5e_params *params);
++=======
+ struct mlx5e_xsk_param {
+ 	u16 headroom;
+ 	u16 chunk_size;
+ };
+ 
+ struct mlx5e_rq_param {
+ 	u32                        rqc[MLX5_ST_SZ_DW(rqc)];
+ 	struct mlx5_wq_param       wq;
+ 	struct mlx5e_rq_frags_info frags_info;
+ };
+ 
+ struct mlx5e_sq_param {
+ 	u32                        sqc[MLX5_ST_SZ_DW(sqc)];
+ 	struct mlx5_wq_param       wq;
+ 	bool                       is_mpw;
+ };
+ 
+ struct mlx5e_cq_param {
+ 	u32                        cqc[MLX5_ST_SZ_DW(cqc)];
+ 	struct mlx5_wq_param       wq;
+ 	u16                        eq_ix;
+ 	u8                         cq_period_mode;
+ };
+ 
+ struct mlx5e_channel_param {
+ 	struct mlx5e_rq_param      rq;
+ 	struct mlx5e_sq_param      sq;
+ 	struct mlx5e_sq_param      xdp_sq;
+ 	struct mlx5e_sq_param      icosq;
+ 	struct mlx5e_cq_param      rx_cq;
+ 	struct mlx5e_cq_param      tx_cq;
+ 	struct mlx5e_cq_param      icosq_cq;
+ };
+ 
+ static inline bool mlx5e_qid_get_ch_if_in_group(struct mlx5e_params *params,
+ 						u16 qid,
+ 						enum mlx5e_rq_group group,
+ 						u16 *ix)
+ {
+ 	int nch = params->num_channels;
+ 	int ch = qid - nch * group;
+ 
+ 	if (ch < 0 || ch >= nch)
+ 		return false;
+ 
+ 	*ix = ch;
+ 	return true;
+ }
+ 
+ static inline void mlx5e_qid_get_ch_and_group(struct mlx5e_params *params,
+ 					      u16 qid,
+ 					      u16 *ix,
+ 					      enum mlx5e_rq_group *group)
+ {
+ 	u16 nch = params->num_channels;
+ 
+ 	*ix = qid % nch;
+ 	*group = qid / nch;
+ }
+ 
+ static inline bool mlx5e_qid_validate(const struct mlx5e_profile *profile,
+ 				      struct mlx5e_params *params, u64 qid)
+ {
+ 	return qid < params->num_channels * profile->rq_groups;
+ }
+ 
+ /* Parameter calculations */
+ 
+ u16 mlx5e_get_linear_rq_headroom(struct mlx5e_params *params,
+ 				 struct mlx5e_xsk_param *xsk);
+ u32 mlx5e_rx_get_linear_frag_sz(struct mlx5e_params *params,
+ 				struct mlx5e_xsk_param *xsk);
+ u8 mlx5e_mpwqe_log_pkts_per_wqe(struct mlx5e_params *params,
+ 				struct mlx5e_xsk_param *xsk);
+ bool mlx5e_rx_is_linear_skb(struct mlx5e_params *params,
+ 			    struct mlx5e_xsk_param *xsk);
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  bool mlx5e_rx_mpwqe_is_linear_skb(struct mlx5_core_dev *mdev,
 -				  struct mlx5e_params *params,
 -				  struct mlx5e_xsk_param *xsk);
 -u8 mlx5e_mpwqe_get_log_rq_size(struct mlx5e_params *params,
 -			       struct mlx5e_xsk_param *xsk);
 +				  struct mlx5e_params *params);
 +u8 mlx5e_mpwqe_get_log_rq_size(struct mlx5e_params *params);
  u8 mlx5e_mpwqe_get_log_stride_size(struct mlx5_core_dev *mdev,
 -				   struct mlx5e_params *params,
 -				   struct mlx5e_xsk_param *xsk);
 +				   struct mlx5e_params *params);
  u8 mlx5e_mpwqe_get_log_num_strides(struct mlx5_core_dev *mdev,
 -				   struct mlx5e_params *params,
 -				   struct mlx5e_xsk_param *xsk);
 +				   struct mlx5e_params *params);
  u16 mlx5e_get_rq_headroom(struct mlx5_core_dev *mdev,
 -			  struct mlx5e_params *params,
 -			  struct mlx5e_xsk_param *xsk);
 -
 -/* Build queue parameters */
 -
 -void mlx5e_build_rq_param(struct mlx5e_priv *priv,
 -			  struct mlx5e_params *params,
 -			  struct mlx5e_xsk_param *xsk,
 -			  struct mlx5e_rq_param *param);
 -void mlx5e_build_sq_param_common(struct mlx5e_priv *priv,
 -				 struct mlx5e_sq_param *param);
 -void mlx5e_build_rx_cq_param(struct mlx5e_priv *priv,
 -			     struct mlx5e_params *params,
 -			     struct mlx5e_xsk_param *xsk,
 -			     struct mlx5e_cq_param *param);
 -void mlx5e_build_tx_cq_param(struct mlx5e_priv *priv,
 -			     struct mlx5e_params *params,
 -			     struct mlx5e_cq_param *param);
 -void mlx5e_build_ico_cq_param(struct mlx5e_priv *priv,
 -			      u8 log_wq_size,
 -			      struct mlx5e_cq_param *param);
 -void mlx5e_build_icosq_param(struct mlx5e_priv *priv,
 -			     u8 log_wq_size,
 -			     struct mlx5e_sq_param *param);
 -void mlx5e_build_xdpsq_param(struct mlx5e_priv *priv,
 -			     struct mlx5e_params *params,
 -			     struct mlx5e_sq_param *param);
 +			  struct mlx5e_params *params);
  
  #endif /* __MLX5_EN_PARAMS_H__ */
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 606a0734ba57,ed25757ac5bd..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@@ -388,8 -389,17 +388,14 @@@ static int mlx5e_set_ringparam(struct n
  void mlx5e_ethtool_get_channels(struct mlx5e_priv *priv,
  				struct ethtool_channels *ch)
  {
++<<<<<<< HEAD
 +	ch->max_combined   = mlx5e_get_netdev_max_channels(priv->netdev);
++=======
+ 	mutex_lock(&priv->state_lock);
+ 
+ 	ch->max_combined   = priv->max_nch;
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	ch->combined_count = priv->channels.params.num_channels;
 -	if (priv->xsk.refcnt) {
 -		/* The upper half are XSK queues. */
 -		ch->max_combined *= 2;
 -		ch->combined_count *= 2;
 -	}
 -
 -	mutex_unlock(&priv->state_lock);
  }
  
  static void mlx5e_get_channels(struct net_device *dev,
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
index 47e1d9d34a6c,94304abc49e9..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
@@@ -600,9 -610,10 +600,16 @@@ static int validate_flow(struct mlx5e_p
  	if (fs->location >= MAX_NUM_OF_ETHTOOL_RULES)
  		return -ENOSPC;
  
++<<<<<<< HEAD
 +	if (fs->ring_cookie >= priv->channels.params.num_channels &&
 +	    fs->ring_cookie != RX_CLS_FLOW_DISC)
 +		return -EINVAL;
++=======
+ 	if (fs->ring_cookie != RX_CLS_FLOW_DISC)
+ 		if (!mlx5e_qid_validate(priv->profile, &priv->channels.params,
+ 					fs->ring_cookie))
+ 			return -EINVAL;
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  
  	switch (fs->flow_type & ~(FLOW_EXT | FLOW_MAC_EXT)) {
  	case ETHER_FLOW:
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index a71021978d58,570c42b7eeea..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2349,16 -2436,14 +2349,25 @@@ int mlx5e_create_indirect_rqt(struct ml
  	return err;
  }
  
 -int mlx5e_create_direct_rqts(struct mlx5e_priv *priv, struct mlx5e_tir *tirs)
 +int mlx5e_create_direct_rqts(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	struct mlx5e_rqt *rqt;
 +	int err;
 +	int ix;
 +
 +	for (ix = 0; ix < mlx5e_get_netdev_max_channels(priv->netdev); ix++) {
 +		rqt = &priv->direct_tir[ix].rqt;
 +		err = mlx5e_create_rqt(priv, 1 /*size */, rqt);
 +		if (err)
++=======
+ 	int err;
+ 	int ix;
+ 
+ 	for (ix = 0; ix < priv->max_nch; ix++) {
+ 		err = mlx5e_create_rqt(priv, 1 /*size */, &tirs[ix].rqt);
+ 		if (unlikely(err))
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  			goto err_destroy_rqts;
  	}
  
@@@ -2376,8 -2461,8 +2385,13 @@@ void mlx5e_destroy_direct_rqts(struct m
  {
  	int i;
  
++<<<<<<< HEAD
 +	for (i = 0; i < mlx5e_get_netdev_max_channels(priv->netdev); i++)
 +		mlx5e_destroy_rqt(priv, &priv->direct_tir[i].rqt);
++=======
+ 	for (i = 0; i < priv->max_nch; i++)
+ 		mlx5e_destroy_rqt(priv, &tirs[i].rqt);
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  }
  
  static int mlx5e_rx_hash_fn(int hfunc)
@@@ -2797,6 -2881,7 +2810,10 @@@ static void mlx5e_build_tx2sq_maps(stru
  void mlx5e_activate_priv_channels(struct mlx5e_priv *priv)
  {
  	int num_txqs = priv->channels.num * priv->channels.params.num_tc;
++<<<<<<< HEAD
++=======
+ 	int num_rxqs = priv->channels.num * priv->profile->rq_groups;
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	struct net_device *netdev = priv->netdev;
  
  	mlx5e_netdev_set_tcs(netdev);
@@@ -3202,9 -3301,8 +3219,12 @@@ err_destroy_inner_tirs
  	return err;
  }
  
 -int mlx5e_create_direct_tirs(struct mlx5e_priv *priv, struct mlx5e_tir *tirs)
 +int mlx5e_create_direct_tirs(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	int nch = mlx5e_get_netdev_max_channels(priv->netdev);
++=======
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	struct mlx5e_tir *tir;
  	void *tirc;
  	int inlen;
@@@ -3217,13 -3315,13 +3237,17 @@@
  	if (!in)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	for (ix = 0; ix < nch; ix++) {
++=======
+ 	for (ix = 0; ix < priv->max_nch; ix++) {
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  		memset(in, 0, inlen);
 -		tir = &tirs[ix];
 +		tir = &priv->direct_tir[ix];
  		tirc = MLX5_ADDR_OF(create_tir_in, in, ctx);
 -		mlx5e_build_direct_tir_ctx(priv, tir->rqt.rqtn, tirc);
 +		mlx5e_build_direct_tir_ctx(priv, priv->direct_tir[ix].rqt.rqtn, tirc);
  		err = mlx5e_create_tir(priv->mdev, tir, in, inlen);
 -		if (unlikely(err))
 +		if (err)
  			goto err_destroy_ch_tirs;
  	}
  
@@@ -3255,13 -3352,12 +3279,20 @@@ void mlx5e_destroy_indirect_tirs(struc
  		mlx5e_destroy_tir(priv->mdev, &priv->inner_indir_tir[i]);
  }
  
 -void mlx5e_destroy_direct_tirs(struct mlx5e_priv *priv, struct mlx5e_tir *tirs)
 +void mlx5e_destroy_direct_tirs(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	int nch = mlx5e_get_netdev_max_channels(priv->netdev);
 +	int i;
 +
 +	for (i = 0; i < nch; i++)
 +		mlx5e_destroy_tir(priv->mdev, &priv->direct_tir[i]);
++=======
+ 	int i;
+ 
+ 	for (i = 0; i < priv->max_nch; i++)
+ 		mlx5e_destroy_tir(priv->mdev, &tirs[i]);
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  }
  
  static int mlx5e_modify_channels_scatter_fcs(struct mlx5e_channels *chs, bool enable)
@@@ -3400,8 -3482,9 +3431,8 @@@ void mlx5e_fold_sw_stats64(struct mlx5e
  {
  	int i;
  
- 	for (i = 0; i < mlx5e_get_netdev_max_channels(priv->netdev); i++) {
+ 	for (i = 0; i < priv->max_nch; i++) {
  		struct mlx5e_channel_stats *channel_stats = &priv->channel_stats[i];
 -		struct mlx5e_rq_stats *xskrq_stats = &channel_stats->xskrq;
  		struct mlx5e_rq_stats *rq_stats = &channel_stats->rq;
  		int j;
  
@@@ -4781,9 -4954,8 +4812,14 @@@ static int mlx5e_nic_init(struct mlx5_c
  	if (err)
  		return err;
  
++<<<<<<< HEAD
 +	mlx5e_build_nic_params(mdev, rss, &priv->channels.params,
 +			       mlx5e_get_netdev_max_channels(netdev),
 +			       netdev->mtu);
++=======
+ 	mlx5e_build_nic_params(mdev, &priv->xsk, rss, &priv->channels.params,
+ 			       priv->max_nch, netdev->mtu);
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  
  	mlx5e_timestamp_init(priv);
  
@@@ -5020,7 -5214,7 +5058,11 @@@ struct net_device *mlx5e_create_netdev(
  
  	netdev = alloc_etherdev_mqs(sizeof(struct mlx5e_priv),
  				    nch * profile->max_tc,
++<<<<<<< HEAD
 +				    nch);
++=======
+ 				    nch * profile->rq_groups);
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	if (!netdev) {
  		mlx5_core_err(mdev, "alloc_etherdev_mqs() failed\n");
  		return NULL;
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
index 280a467764e5,57f9f346d213..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
@@@ -1306,7 -1409,8 +1306,12 @@@ static int mlx5e_grp_channels_get_num_s
  static int mlx5e_grp_channels_fill_strings(struct mlx5e_priv *priv, u8 *data,
  					   int idx)
  {
++<<<<<<< HEAD
 +	int max_nch = mlx5e_get_netdev_max_channels(priv->netdev);
++=======
+ 	bool is_xsk = priv->xsk.ever_used;
+ 	int max_nch = priv->max_nch;
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	int i, j, tc;
  
  	for (i = 0; i < max_nch; i++)
@@@ -1341,7 -1452,8 +1346,12 @@@
  static int mlx5e_grp_channels_fill_stats(struct mlx5e_priv *priv, u64 *data,
  					 int idx)
  {
++<<<<<<< HEAD
 +	int max_nch = mlx5e_get_netdev_max_channels(priv->netdev);
++=======
+ 	bool is_xsk = priv->xsk.ever_used;
+ 	int max_nch = priv->max_nch;
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	int i, j, tc;
  
  	for (i = 0; i < max_nch; i++)
diff --cc drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
index e01a916f296c,1a2560e3bf7c..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
@@@ -87,9 -87,8 +87,14 @@@ int mlx5i_init(struct mlx5_core_dev *md
  	mlx5e_set_netdev_mtu_boundaries(priv);
  	netdev->mtu = netdev->max_mtu;
  
++<<<<<<< HEAD
 +	mlx5e_build_nic_params(mdev, &priv->rss_params, &priv->channels.params,
 +			       mlx5e_get_netdev_max_channels(netdev),
 +			       netdev->mtu);
++=======
+ 	mlx5e_build_nic_params(mdev, NULL, &priv->rss_params, &priv->channels.params,
+ 			       priv->max_nch, netdev->mtu);
++>>>>>>> 694826e36634 (net/mlx5e: Fix wrong max num channels indication)
  	mlx5i_build_nic_params(mdev, &priv->channels.params);
  
  	mlx5e_timestamp_init(priv);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/params.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index e3ab7df3e76c..5d07644ee5c3 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@ -1768,6 +1768,7 @@ static const struct mlx5e_profile mlx5e_vf_rep_profile = {
 	.rx_handlers.handle_rx_cqe       = mlx5e_handle_rx_cqe_rep,
 	.rx_handlers.handle_rx_cqe_mpwqe = mlx5e_handle_rx_cqe_mpwrq,
 	.max_tc			= 1,
+	.rq_groups		= MLX5E_NUM_RQ_GROUPS(REGULAR),
 };
 
 static const struct mlx5e_profile mlx5e_uplink_rep_profile = {
@@ -1784,6 +1785,7 @@ static const struct mlx5e_profile mlx5e_uplink_rep_profile = {
 	.rx_handlers.handle_rx_cqe       = mlx5e_handle_rx_cqe_rep,
 	.rx_handlers.handle_rx_cqe_mpwqe = mlx5e_handle_rx_cqe_mpwrq,
 	.max_tc			= MLX5E_MAX_NUM_TC,
+	.rq_groups		= MLX5E_NUM_RQ_GROUPS(REGULAR),
 };
 
 /* e-Switch vport representors */
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c
index 59bc29fec576..d151df6c98bd 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib_vlan.c
@@ -354,6 +354,7 @@ static const struct mlx5e_profile mlx5i_pkey_nic_profile = {
 	.rx_handlers.handle_rx_cqe       = mlx5i_handle_rx_cqe,
 	.rx_handlers.handle_rx_cqe_mpwqe = NULL, /* Not supported */
 	.max_tc		   = MLX5I_MAX_NUM_TC,
+	.rq_groups	   = MLX5E_NUM_RQ_GROUPS(REGULAR),
 };
 
 const struct mlx5e_profile *mlx5i_pkey_get_profile(void)
