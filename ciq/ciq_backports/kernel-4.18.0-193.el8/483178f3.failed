nvme-pci: remove queue_count_ops for write_queues and poll_queues

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Minwoo Im <minwoo.im.dev@gmail.com>
commit 483178f38cbe55a0b1854a93ceef715a0fc2ef9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/483178f3.failed

queue_count_set() seems like that it has been provided to limit the
number of queue entries for write/poll queues.  But, the
queue_count_set() has been doing nothing but a parameter check even it
has num_possible_cpus() which is nop.

This patch removes entire queue_count_ops from the write_queues and
poll_queues.

	Signed-off-by: Minwoo Im <minwoo.im.dev@gmail.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 483178f38cbe55a0b1854a93ceef715a0fc2ef9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index cd897b66e12f,007f8becde4a..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -79,8 -74,8 +73,13 @@@ MODULE_PARM_DESC(write_queues
  	"Number of queues to use for writes. If not set, reads and writes "
  	"will share a queue set.");
  
++<<<<<<< HEAD
 +static int poll_queues = 0;
 +module_param_cb(poll_queues, &queue_count_ops, &poll_queues, 0644);
++=======
+ static int poll_queues;
+ module_param(poll_queues, int, 0644);
++>>>>>>> 483178f38cbe (nvme-pci: remove queue_count_ops for write_queues and poll_queues)
  MODULE_PARM_DESC(poll_queues, "Number of queues to use for polled IO.");
  
  struct nvme_dev;
* Unmerged path drivers/nvme/host/pci.c
