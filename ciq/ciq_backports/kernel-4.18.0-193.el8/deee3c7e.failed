RDMA/core: Return void from ib_device_check_mandatory()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit deee3c7e499108b0575ee0d71b786da627a7cdee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/deee3c7e.failed

The return value from ib_device_check_mandatory() is always 0 - change it
to be void.

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit deee3c7e499108b0575ee0d71b786da627a7cdee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
diff --cc drivers/infiniband/core/device.c
index ec96a7b1c811,afb3f5946796..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -96,7 -261,16 +96,20 @@@ static struct notifier_block ibdev_lsm_
  	.notifier_call = ib_security_change,
  };
  
++<<<<<<< HEAD
 +static int ib_device_check_mandatory(struct ib_device *device)
++=======
+ static int rdma_dev_change_netns(struct ib_device *device, struct net *cur_net,
+ 				 struct net *net);
+ 
+ /* Pointer to the RCU head at the start of the ib_port_data array */
+ struct ib_port_data_rcu {
+ 	struct rcu_head rcu_head;
+ 	struct ib_port_data pdata[];
+ };
+ 
+ static void ib_device_check_mandatory(struct ib_device *device)
++>>>>>>> deee3c7e4991 (RDMA/core: Return void from ib_device_check_mandatory())
  {
  #define IB_MANDATORY_FUNC(x) { offsetof(struct ib_device_ops, x), #x }
  	static const struct {
@@@ -131,21 -305,8 +144,19 @@@
  			break;
  		}
  	}
- 
- 	return 0;
  }
  
 +static struct ib_device *__ib_device_get_by_index(u32 index)
 +{
 +	struct ib_device *device;
 +
 +	list_for_each_entry(device, &device_list, core_list)
 +		if (device->index == index)
 +			return device;
 +
 +	return NULL;
 +}
 +
  /*
   * Caller must perform ib_device_put() to return the device reference count
   * when ib_device_get_by_index() returns valid device pointer.
@@@ -536,14 -1172,12 +547,19 @@@ static int setup_device(struct ib_devic
  	struct ib_udata uhw = {.outlen = 0, .inlen = 0};
  	int ret;
  
++<<<<<<< HEAD
 +	ret = ib_device_check_mandatory(device);
 +	if (ret)
 +		return ret;
++=======
+ 	setup_dma_device(device);
+ 	ib_device_check_mandatory(device);
++>>>>>>> deee3c7e4991 (RDMA/core: Return void from ib_device_check_mandatory())
  
 -	ret = setup_port_data(device);
 +	ret = read_port_immutable(device);
  	if (ret) {
 -		dev_warn(&device->dev, "Couldn't create per-port data\n");
 +		dev_warn(&device->dev,
 +			 "Couldn't create per port immutable data\n");
  		return ret;
  	}
  
* Unmerged path drivers/infiniband/core/device.c
