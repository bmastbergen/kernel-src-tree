drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Le Ma <le.ma@amd.com>
commit a2d15ed733365ba2e0e3eb55a83c7a493eaaaa2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a2d15ed7.failed

The number of GFXHUB/MMHUB may be expanded in later ASICs.

	Signed-off-by: Le Ma <le.ma@amd.com>
	Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit a2d15ed733365ba2e0e3eb55a83c7a493eaaaa2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
#	drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c
#	drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c
#	drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c
#	drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
#	drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
#	drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
#	drivers/gpu/drm/amd/amdgpu/vcn_v1_0.c
#	drivers/gpu/drm/amd/amdgpu/vcn_v2_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
index 7fbac9597e7e,01f658fa72c6..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
@@@ -1769,7 -1762,8 +1769,12 @@@ static const struct amdgpu_ring_funcs u
  	.type = AMDGPU_RING_TYPE_UVD,
  	.align_mask = 0xf,
  	.support_64bit_ptrs = false,
++<<<<<<< HEAD
 +	.vmhub = AMDGPU_MMHUB,
++=======
+ 	.no_user_fence = true,
+ 	.vmhub = AMDGPU_MMHUB_0,
++>>>>>>> a2d15ed73336 (drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number)
  	.get_rptr = uvd_v7_0_ring_get_rptr,
  	.get_wptr = uvd_v7_0_ring_get_wptr,
  	.set_wptr = uvd_v7_0_ring_set_wptr,
@@@ -1801,7 -1795,8 +1806,12 @@@ static const struct amdgpu_ring_funcs u
  	.align_mask = 0x3f,
  	.nop = HEVC_ENC_CMD_NO_OP,
  	.support_64bit_ptrs = false,
++<<<<<<< HEAD
 +	.vmhub = AMDGPU_MMHUB,
++=======
+ 	.no_user_fence = true,
+ 	.vmhub = AMDGPU_MMHUB_0,
++>>>>>>> a2d15ed73336 (drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number)
  	.get_rptr = uvd_v7_0_enc_ring_get_rptr,
  	.get_wptr = uvd_v7_0_enc_ring_get_wptr,
  	.set_wptr = uvd_v7_0_enc_ring_set_wptr,
diff --cc drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
index aadc3e66ebd7,683701cf7270..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
@@@ -1067,7 -1069,8 +1067,12 @@@ static const struct amdgpu_ring_funcs v
  	.align_mask = 0x3f,
  	.nop = VCE_CMD_NO_OP,
  	.support_64bit_ptrs = false,
++<<<<<<< HEAD
 +	.vmhub = AMDGPU_MMHUB,
++=======
+ 	.no_user_fence = true,
+ 	.vmhub = AMDGPU_MMHUB_0,
++>>>>>>> a2d15ed73336 (drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number)
  	.get_rptr = vce_v4_0_ring_get_rptr,
  	.get_wptr = vce_v4_0_ring_get_wptr,
  	.set_wptr = vce_v4_0_ring_set_wptr,
diff --cc drivers/gpu/drm/amd/amdgpu/vcn_v1_0.c
index 3dbc51f9d3b9,916e32533c1b..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/vcn_v1_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/vcn_v1_0.c
@@@ -2054,7 -2197,8 +2054,12 @@@ static const struct amdgpu_ring_funcs v
  	.type = AMDGPU_RING_TYPE_VCN_DEC,
  	.align_mask = 0xf,
  	.support_64bit_ptrs = false,
++<<<<<<< HEAD
 +	.vmhub = AMDGPU_MMHUB,
++=======
+ 	.no_user_fence = true,
+ 	.vmhub = AMDGPU_MMHUB_0,
++>>>>>>> a2d15ed73336 (drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number)
  	.get_rptr = vcn_v1_0_dec_ring_get_rptr,
  	.get_wptr = vcn_v1_0_dec_ring_get_wptr,
  	.set_wptr = vcn_v1_0_dec_ring_set_wptr,
@@@ -2087,7 -2231,8 +2092,12 @@@ static const struct amdgpu_ring_funcs v
  	.align_mask = 0x3f,
  	.nop = VCN_ENC_CMD_NO_OP,
  	.support_64bit_ptrs = false,
++<<<<<<< HEAD
 +	.vmhub = AMDGPU_MMHUB,
++=======
+ 	.no_user_fence = true,
+ 	.vmhub = AMDGPU_MMHUB_0,
++>>>>>>> a2d15ed73336 (drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number)
  	.get_rptr = vcn_v1_0_enc_ring_get_rptr,
  	.get_wptr = vcn_v1_0_enc_ring_get_wptr,
  	.set_wptr = vcn_v1_0_enc_ring_set_wptr,
@@@ -2118,7 -2263,8 +2128,12 @@@ static const struct amdgpu_ring_funcs v
  	.align_mask = 0xf,
  	.nop = PACKET0(0x81ff, 0),
  	.support_64bit_ptrs = false,
++<<<<<<< HEAD
 +	.vmhub = AMDGPU_MMHUB,
++=======
+ 	.no_user_fence = true,
+ 	.vmhub = AMDGPU_MMHUB_0,
++>>>>>>> a2d15ed73336 (drm/amdgpu: rename AMDGPU_GFXHUB/MMHUB macro with hub number)
  	.extra_dw = 64,
  	.get_rptr = vcn_v1_0_jpeg_ring_get_rptr,
  	.get_wptr = vcn_v1_0_jpeg_ring_get_wptr,
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/vcn_v2_0.c
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
index 16fcb56c232b..ff0dd3f1927e 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c
@@ -3352,12 +3352,12 @@ int amdgpu_vm_ioctl(struct drm_device *dev, void *data, struct drm_file *filp)
 	switch (args->in.op) {
 	case AMDGPU_VM_OP_RESERVE_VMID:
 		/* current, we only have requirement to reserve vmid from gfxhub */
-		r = amdgpu_vmid_alloc_reserved(adev, &fpriv->vm, AMDGPU_GFXHUB);
+		r = amdgpu_vmid_alloc_reserved(adev, &fpriv->vm, AMDGPU_GFXHUB_0);
 		if (r)
 			return r;
 		break;
 	case AMDGPU_VM_OP_UNRESERVE_VMID:
-		amdgpu_vmid_free_reserved(adev, &fpriv->vm, AMDGPU_GFXHUB);
+		amdgpu_vmid_free_reserved(adev, &fpriv->vm, AMDGPU_GFXHUB_0);
 		break;
 	default:
 		return -EINVAL;
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h
index 81ff8177f092..b577a587658f 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.h
@@ -96,8 +96,8 @@ struct amdgpu_bo_list_entry;
 
 /* max number of VMHUB */
 #define AMDGPU_MAX_VMHUBS			2
-#define AMDGPU_GFXHUB				0
-#define AMDGPU_MMHUB				1
+#define AMDGPU_GFXHUB_0				0
+#define AMDGPU_MMHUB_0				1
 
 /* hardcode that limit for now */
 #define AMDGPU_VA_RESERVED_SIZE			(1ULL << 20)
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
index 5a86ee47ff33..fc4173742be0 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
@@ -1882,7 +1882,7 @@ static void gfx_v9_0_constants_init(struct amdgpu_device *adev)
 	/* XXX SH_MEM regs */
 	/* where to put LDS, scratch, GPUVM in FSA64 space */
 	mutex_lock(&adev->srbm_mutex);
-	for (i = 0; i < adev->vm_manager.id_mgr[AMDGPU_GFXHUB].num_ids; i++) {
+	for (i = 0; i < adev->vm_manager.id_mgr[AMDGPU_GFXHUB_0].num_ids; i++) {
 		soc15_grbm_select(adev, 0, 0, 0, i);
 		/* CP and shaders */
 		if (i == 0) {
@@ -4668,7 +4668,7 @@ static const struct amdgpu_ring_funcs gfx_v9_0_ring_funcs_gfx = {
 	.align_mask = 0xff,
 	.nop = PACKET3(PACKET3_NOP, 0x3FFF),
 	.support_64bit_ptrs = true,
-	.vmhub = AMDGPU_GFXHUB,
+	.vmhub = AMDGPU_GFXHUB_0,
 	.get_rptr = gfx_v9_0_ring_get_rptr_gfx,
 	.get_wptr = gfx_v9_0_ring_get_wptr_gfx,
 	.set_wptr = gfx_v9_0_ring_set_wptr_gfx,
@@ -4719,7 +4719,7 @@ static const struct amdgpu_ring_funcs gfx_v9_0_ring_funcs_compute = {
 	.align_mask = 0xff,
 	.nop = PACKET3(PACKET3_NOP, 0x3FFF),
 	.support_64bit_ptrs = true,
-	.vmhub = AMDGPU_GFXHUB,
+	.vmhub = AMDGPU_GFXHUB_0,
 	.get_rptr = gfx_v9_0_ring_get_rptr_compute,
 	.get_wptr = gfx_v9_0_ring_get_wptr_compute,
 	.set_wptr = gfx_v9_0_ring_set_wptr_compute,
@@ -4754,7 +4754,7 @@ static const struct amdgpu_ring_funcs gfx_v9_0_ring_funcs_kiq = {
 	.align_mask = 0xff,
 	.nop = PACKET3(PACKET3_NOP, 0x3FFF),
 	.support_64bit_ptrs = true,
-	.vmhub = AMDGPU_GFXHUB,
+	.vmhub = AMDGPU_GFXHUB_0,
 	.get_rptr = gfx_v9_0_ring_get_rptr_compute,
 	.get_wptr = gfx_v9_0_ring_get_wptr_compute,
 	.set_wptr = gfx_v9_0_ring_set_wptr_compute,
diff --git a/drivers/gpu/drm/amd/amdgpu/gfxhub_v1_0.c b/drivers/gpu/drm/amd/amdgpu/gfxhub_v1_0.c
index f5edddf3b29d..facd5fb0f5f9 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfxhub_v1_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfxhub_v1_0.c
@@ -356,7 +356,7 @@ void gfxhub_v1_0_set_fault_enable_default(struct amdgpu_device *adev,
 
 void gfxhub_v1_0_init(struct amdgpu_device *adev)
 {
-	struct amdgpu_vmhub *hub = &adev->vmhub[AMDGPU_GFXHUB];
+	struct amdgpu_vmhub *hub = &adev->vmhub[AMDGPU_GFXHUB_0];
 
 	hub->ctx0_ptb_addr_lo32 =
 		SOC15_REG_OFFSET(GC, 0,
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfxhub_v2_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/gmc_v10_0.c
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
index c0446af00cdd..29491410ea72 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v9_0.c
@@ -458,7 +458,7 @@ static void gmc_v9_0_emit_pasid_mapping(struct amdgpu_ring *ring, unsigned vmid,
 	struct amdgpu_device *adev = ring->adev;
 	uint32_t reg;
 
-	if (ring->funcs->vmhub == AMDGPU_GFXHUB)
+	if (ring->funcs->vmhub == AMDGPU_GFXHUB_0)
 		reg = SOC15_REG_OFFSET(OSSSYS, 0, mmIH_VMID_0_LUT) + vmid;
 	else
 		reg = SOC15_REG_OFFSET(OSSSYS, 0, mmIH_VMID_0_LUT_MM) + vmid;
@@ -1041,8 +1041,8 @@ static int gmc_v9_0_sw_init(void *handle)
 	 * amdgpu graphics/compute will use VMIDs 1-7
 	 * amdkfd will use VMIDs 8-15
 	 */
-	adev->vm_manager.id_mgr[AMDGPU_GFXHUB].num_ids = AMDGPU_NUM_OF_VMIDS;
-	adev->vm_manager.id_mgr[AMDGPU_MMHUB].num_ids = AMDGPU_NUM_OF_VMIDS;
+	adev->vm_manager.id_mgr[AMDGPU_GFXHUB_0].num_ids = AMDGPU_NUM_OF_VMIDS;
+	adev->vm_manager.id_mgr[AMDGPU_MMHUB_0].num_ids = AMDGPU_NUM_OF_VMIDS;
 
 	amdgpu_vm_manager_init(adev);
 
diff --git a/drivers/gpu/drm/amd/amdgpu/mmhub_v1_0.c b/drivers/gpu/drm/amd/amdgpu/mmhub_v1_0.c
index 1696644ec022..2e8804bb9cf1 100644
--- a/drivers/gpu/drm/amd/amdgpu/mmhub_v1_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/mmhub_v1_0.c
@@ -391,7 +391,7 @@ void mmhub_v1_0_set_fault_enable_default(struct amdgpu_device *adev, bool value)
 
 void mmhub_v1_0_init(struct amdgpu_device *adev)
 {
-	struct amdgpu_vmhub *hub = &adev->vmhub[AMDGPU_MMHUB];
+	struct amdgpu_vmhub *hub = &adev->vmhub[AMDGPU_MMHUB_0];
 
 	hub->ctx0_ptb_addr_lo32 =
 		SOC15_REG_OFFSET(MMHUB, 0,
* Unmerged path drivers/gpu/drm/amd/amdgpu/mmhub_v2_0.c
diff --git a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
index c816e55d43a9..1758ad9d5a4f 100644
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
@@ -1926,7 +1926,7 @@ static const struct amdgpu_ring_funcs sdma_v4_0_ring_funcs = {
 	.align_mask = 0xf,
 	.nop = SDMA_PKT_NOP_HEADER_OP(SDMA_OP_NOP),
 	.support_64bit_ptrs = true,
-	.vmhub = AMDGPU_MMHUB,
+	.vmhub = AMDGPU_MMHUB_0,
 	.get_rptr = sdma_v4_0_ring_get_rptr,
 	.get_wptr = sdma_v4_0_ring_get_wptr,
 	.set_wptr = sdma_v4_0_ring_set_wptr,
@@ -1958,7 +1958,7 @@ static const struct amdgpu_ring_funcs sdma_v4_0_page_ring_funcs = {
 	.align_mask = 0xf,
 	.nop = SDMA_PKT_NOP_HEADER_OP(SDMA_OP_NOP),
 	.support_64bit_ptrs = true,
-	.vmhub = AMDGPU_MMHUB,
+	.vmhub = AMDGPU_MMHUB_0,
 	.get_rptr = sdma_v4_0_ring_get_rptr,
 	.get_wptr = sdma_v4_0_page_ring_get_wptr,
 	.set_wptr = sdma_v4_0_page_ring_set_wptr,
* Unmerged path drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/uvd_v7_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/vce_v4_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/vcn_v1_0.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/vcn_v2_0.c
