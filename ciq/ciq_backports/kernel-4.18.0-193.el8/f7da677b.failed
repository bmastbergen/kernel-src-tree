mm, page_owner: handle THP splits correctly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Vlastimil Babka <vbabka@suse.cz>
commit f7da677bc6e72033f0981b9d58b5c5d409fa641e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/f7da677b.failed

THP splitting path is missing the split_page_owner() call that
split_page() has.

As a result, split THP pages are wrongly reported in the page_owner file
as order-9 pages.  Furthermore when the former head page is freed, the
remaining former tail pages are not listed in the page_owner file at
all.  This patch fixes that by adding the split_page_owner() call into
__split_huge_page().

Link: http://lkml.kernel.org/r/20190820131828.22684-2-vbabka@suse.cz
Fixes: a9627bc5e34e ("mm/page_owner: introduce split_page_owner and replace manual handling")
	Reported-by: Kirill A. Shutemov <kirill@shutemov.name>
	Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Mel Gorman <mgorman@techsingularity.net>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit f7da677bc6e72033f0981b9d58b5c5d409fa641e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/huge_memory.c
diff --cc mm/huge_memory.c
index 1b2dc4a081fa,de1f15969e27..000000000000
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@@ -33,6 -31,8 +33,11 @@@
  #include <linux/page_idle.h>
  #include <linux/shmem_fs.h>
  #include <linux/oom.h>
++<<<<<<< HEAD
++=======
+ #include <linux/numa.h>
+ #include <linux/page_owner.h>
++>>>>>>> f7da677bc6e7 (mm, page_owner: handle THP splits correctly)
  
  #include <asm/tlb.h>
  #include <asm/pgalloc.h>
@@@ -2464,9 -2517,12 +2469,12 @@@ static void __split_huge_page(struct pa
  	}
  
  	ClearPageCompound(head);
+ 
+ 	split_page_owner(head, HPAGE_PMD_ORDER);
+ 
  	/* See comment in __split_huge_page_tail() */
  	if (PageAnon(head)) {
 -		/* Additional pin to swap cache */
 +		/* Additional pin to radix tree of swap cache */
  		if (PageSwapCache(head))
  			page_ref_add(head, 2);
  		else
* Unmerged path mm/huge_memory.c
