RDMA: Move uverbs_abi_ver into struct ib_device_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit 72c6ec18eb6161c8fc672ae96ec5c77df4d07405
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/72c6ec18.failed

No reason for every driver to emit code to set this, just make it part of
the driver's existing static const ops structure.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 72c6ec18eb6161c8fc672ae96ec5c77df4d07405)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
#	drivers/infiniband/hw/bnxt_re/main.c
#	drivers/infiniband/hw/cxgb3/iwch_provider.c
#	drivers/infiniband/hw/cxgb4/provider.c
#	drivers/infiniband/hw/efa/efa_main.c
#	drivers/infiniband/hw/hns/hns_roce_main.c
#	drivers/infiniband/hw/i40iw/i40iw_verbs.c
#	drivers/infiniband/hw/mlx4/main.c
#	drivers/infiniband/hw/mlx5/main.c
#	drivers/infiniband/hw/mthca/mthca_provider.c
#	drivers/infiniband/hw/nes/nes_verbs.c
#	drivers/infiniband/hw/ocrdma/ocrdma_main.c
#	drivers/infiniband/hw/qedr/main.c
#	drivers/infiniband/hw/usnic/usnic_ib_main.c
#	drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
#	drivers/infiniband/sw/rxe/rxe_verbs.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/device.c
index ec96a7b1c811,a00b7fc360bf..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -1269,6 -2318,14 +1269,17 @@@ void ib_set_device_ops(struct ib_devic
  
  #define SET_OBJ_SIZE(ptr, name) SET_DEVICE_OP(ptr, size_##name)
  
++<<<<<<< HEAD
++=======
+ 	if (ops->driver_id != RDMA_DRIVER_UNKNOWN) {
+ 		WARN_ON(dev_ops->driver_id != RDMA_DRIVER_UNKNOWN &&
+ 			dev_ops->driver_id != ops->driver_id);
+ 		dev_ops->driver_id = ops->driver_id;
+ 	}
+ 	if (ops->uverbs_abi_ver)
+ 		dev_ops->uverbs_abi_ver = ops->uverbs_abi_ver;
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	SET_DEVICE_OP(dev_ops, add_gid);
  	SET_DEVICE_OP(dev_ops, advise_mr);
  	SET_DEVICE_OP(dev_ops, alloc_dm);
diff --cc drivers/infiniband/hw/bnxt_re/main.c
index 1f64cd1c51a2,a45cb9ee51ab..000000000000
--- a/drivers/infiniband/hw/bnxt_re/main.c
+++ b/drivers/infiniband/hw/bnxt_re/main.c
@@@ -596,6 -596,9 +596,12 @@@ static void bnxt_re_unregister_ib(struc
  }
  
  static const struct ib_device_ops bnxt_re_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_BNXT_RE,
+ 	.uverbs_abi_ver = BNXT_RE_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.add_gid = bnxt_re_add_gid,
  	.alloc_hw_stats = bnxt_re_ib_alloc_hw_stats,
  	.alloc_mr = bnxt_re_alloc_mr,
diff --cc drivers/infiniband/hw/cxgb3/iwch_provider.c
index b9bb151437dc,5b410605a3a1..000000000000
--- a/drivers/infiniband/hw/cxgb3/iwch_provider.c
+++ b/drivers/infiniband/hw/cxgb3/iwch_provider.c
@@@ -1320,6 -1236,9 +1320,12 @@@ static void get_dev_fw_ver_str(struct i
  }
  
  static const struct ib_device_ops iwch_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_CXGB3,
+ 	.uverbs_abi_ver = IWCH_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_hw_stats	= iwch_alloc_stats,
  	.alloc_mr = iwch_alloc_mr,
  	.alloc_mw = iwch_alloc_mw,
@@@ -1391,30 -1317,13 +1397,29 @@@ int iwch_register_device(struct iwch_de
  	dev->ibdev.phys_port_cnt = dev->rdev.port_info.nports;
  	dev->ibdev.num_comp_vectors = 1;
  	dev->ibdev.dev.parent = &dev->rdev.rnic_info.pdev->dev;
- 	dev->ibdev.uverbs_abi_ver = IWCH_UVERBS_ABI_VERSION;
  
 -	memcpy(dev->ibdev.iw_ifname, dev->rdev.t3cdev_p->lldev->name,
 -	       sizeof(dev->ibdev.iw_ifname));
 +	dev->ibdev.iwcm = kzalloc(sizeof(struct iw_cm_verbs), GFP_KERNEL);
 +	if (!dev->ibdev.iwcm)
 +		return -ENOMEM;
  
 +	dev->ibdev.iwcm->connect = iwch_connect;
 +	dev->ibdev.iwcm->accept = iwch_accept_cr;
 +	dev->ibdev.iwcm->reject = iwch_reject_cr;
 +	dev->ibdev.iwcm->create_listen = iwch_create_listen;
 +	dev->ibdev.iwcm->destroy_listen = iwch_destroy_listen;
 +	dev->ibdev.iwcm->add_ref = iwch_qp_add_ref;
 +	dev->ibdev.iwcm->rem_ref = iwch_qp_rem_ref;
 +	dev->ibdev.iwcm->get_qp = iwch_get_qp;
 +	memcpy(dev->ibdev.iwcm->ifname, dev->rdev.t3cdev_p->lldev->name,
 +	       sizeof(dev->ibdev.iwcm->ifname));
 +
 +	dev->ibdev.driver_id = RDMA_DRIVER_CXGB3;
  	rdma_set_device_sysfs_group(&dev->ibdev, &iwch_attr_group);
  	ib_set_device_ops(&dev->ibdev, &iwch_dev_ops);
 -	return ib_register_device(&dev->ibdev, "cxgb3_%d");
 +	ret = ib_register_device(&dev->ibdev, "cxgb3_%d");
 +	if (ret)
 +		kfree(dev->ibdev.iwcm);
 +	return ret;
  }
  
  void iwch_unregister_device(struct iwch_dev *dev)
diff --cc drivers/infiniband/hw/cxgb4/provider.c
index e03b14a450bc,c56cdfbd8a88..000000000000
--- a/drivers/infiniband/hw/cxgb4/provider.c
+++ b/drivers/infiniband/hw/cxgb4/provider.c
@@@ -506,6 -489,9 +506,12 @@@ static int fill_res_entry(struct sk_buf
  }
  
  static const struct ib_device_ops c4iw_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_CXGB4,
+ 	.uverbs_abi_ver = C4IW_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_hw_stats = c4iw_alloc_stats,
  	.alloc_mr = c4iw_alloc_mr,
  	.alloc_mw = c4iw_alloc_mw,
@@@ -597,28 -596,11 +603,27 @@@ void c4iw_register_device(struct work_s
  	dev->ibdev.phys_port_cnt = dev->rdev.lldi.nports;
  	dev->ibdev.num_comp_vectors =  dev->rdev.lldi.nciq;
  	dev->ibdev.dev.parent = &dev->rdev.lldi.pdev->dev;
- 	dev->ibdev.uverbs_abi_ver = C4IW_UVERBS_ABI_VERSION;
  
 -	memcpy(dev->ibdev.iw_ifname, dev->rdev.lldi.ports[0]->name,
 -	       sizeof(dev->ibdev.iw_ifname));
 +	dev->ibdev.iwcm = kzalloc(sizeof(struct iw_cm_verbs), GFP_KERNEL);
 +	if (!dev->ibdev.iwcm) {
 +		ret = -ENOMEM;
 +		goto err_dealloc_ctx;
 +	}
 +
 +	dev->ibdev.iwcm->connect = c4iw_connect;
 +	dev->ibdev.iwcm->accept = c4iw_accept_cr;
 +	dev->ibdev.iwcm->reject = c4iw_reject_cr;
 +	dev->ibdev.iwcm->create_listen = c4iw_create_listen;
 +	dev->ibdev.iwcm->destroy_listen = c4iw_destroy_listen;
 +	dev->ibdev.iwcm->add_ref = c4iw_qp_add_ref;
 +	dev->ibdev.iwcm->rem_ref = c4iw_qp_rem_ref;
 +	dev->ibdev.iwcm->get_qp = c4iw_get_qp;
 +	dev->ibdev.res.fill_res_entry = fill_res_entry;
 +	memcpy(dev->ibdev.iwcm->ifname, dev->rdev.lldi.ports[0]->name,
 +	       sizeof(dev->ibdev.iwcm->ifname));
  
  	rdma_set_device_sysfs_group(&dev->ibdev, &c4iw_attr_group);
 +	dev->ibdev.driver_id = RDMA_DRIVER_CXGB4;
  	ib_set_device_ops(&dev->ibdev, &c4iw_dev_ops);
  	ret = set_netdevs(&dev->ibdev, &dev->rdev);
  	if (ret)
diff --cc drivers/infiniband/hw/efa/efa_main.c
index 44152ed1ee86,b05c5a0b9bc0..000000000000
--- a/drivers/infiniband/hw/efa/efa_main.c
+++ b/drivers/infiniband/hw/efa/efa_main.c
@@@ -197,6 -197,9 +197,12 @@@ static void efa_stats_init(struct efa_d
  }
  
  static const struct ib_device_ops efa_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_EFA,
+ 	.uverbs_abi_ver = EFA_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_pd = efa_alloc_pd,
  	.alloc_ucontext = efa_alloc_ucontext,
  	.create_ah = efa_create_ah,
diff --cc drivers/infiniband/hw/hns/hns_roce_main.c
index e6509f248a6a,e496b0628e25..000000000000
--- a/drivers/infiniband/hw/hns/hns_roce_main.c
+++ b/drivers/infiniband/hw/hns/hns_roce_main.c
@@@ -480,6 -414,9 +480,12 @@@ static void hns_roce_unregister_device(
  }
  
  static const struct ib_device_ops hns_roce_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_HNS,
+ 	.uverbs_abi_ver = 1,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.add_gid = hns_roce_add_gid,
  	.alloc_pd = hns_roce_alloc_pd,
  	.alloc_ucontext = hns_roce_alloc_ucontext,
diff --cc drivers/infiniband/hw/i40iw/i40iw_verbs.c
index c58fa19da4cf,4dc647c8556b..000000000000
--- a/drivers/infiniband/hw/i40iw/i40iw_verbs.c
+++ b/drivers/infiniband/hw/i40iw/i40iw_verbs.c
@@@ -2685,6 -2650,10 +2685,13 @@@ static int i40iw_query_pkey(struct ib_d
  }
  
  static const struct ib_device_ops i40iw_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_I40IW,
+ 	/* NOTE: Older kernels wrongly use 0 for the uverbs_abi_ver */
+ 	.uverbs_abi_ver = I40IW_ABI_VER,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_hw_stats = i40iw_alloc_hw_stats,
  	.alloc_mr = i40iw_alloc_mr,
  	.alloc_pd = i40iw_alloc_pd,
diff --cc drivers/infiniband/hw/mlx4/main.c
index d66002a31000,1f87221acbb0..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -1086,9 -1087,10 +1086,10 @@@ static struct ib_ucontext *mlx4_ib_allo
  	int err;
  
  	if (!dev->ib_active)
 -		return -EAGAIN;
 +		return ERR_PTR(-EAGAIN);
  
- 	if (ibdev->uverbs_abi_ver == MLX4_IB_UVERBS_NO_DEV_CAPS_ABI_VERSION) {
+ 	if (ibdev->ops.uverbs_abi_ver ==
+ 	    MLX4_IB_UVERBS_NO_DEV_CAPS_ABI_VERSION) {
  		resp_v3.qp_tab_size      = dev->dev->caps.num_qps;
  		resp_v3.bf_reg_size      = dev->dev->caps.bf_reg_size;
  		resp_v3.bf_regs_per_page = dev->dev->caps.bf_regs_per_page;
@@@ -2531,6 -2510,9 +2532,12 @@@ static void get_fw_ver_str(struct ib_de
  }
  
  static const struct ib_device_ops mlx4_ib_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_MLX4,
+ 	.uverbs_abi_ver = MLX4_IB_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.add_gid = mlx4_ib_add_gid,
  	.alloc_mr = mlx4_ib_alloc_mr,
  	.alloc_pd = mlx4_ib_alloc_pd,
diff --cc drivers/infiniband/hw/mlx5/main.c
index 9937619aa9d5,0c23eccb8855..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5926,6 -6124,9 +5926,12 @@@ static void mlx5_ib_stage_flow_db_clean
  }
  
  static const struct ib_device_ops mlx5_ib_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_MLX5,
+ 	.uverbs_abi_ver	= MLX5_IB_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.add_gid = mlx5_ib_add_gid,
  	.alloc_mr = mlx5_ib_alloc_mr,
  	.alloc_pd = mlx5_ib_alloc_pd,
diff --cc drivers/infiniband/hw/mthca/mthca_provider.c
index ae6b236e4756,690c65accea4..000000000000
--- a/drivers/infiniband/hw/mthca/mthca_provider.c
+++ b/drivers/infiniband/hw/mthca/mthca_provider.c
@@@ -1194,6 -1153,9 +1194,12 @@@ static void get_dev_fw_str(struct ib_de
  }
  
  static const struct ib_device_ops mthca_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_MTHCA,
+ 	.uverbs_abi_ver = MTHCA_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_pd = mthca_alloc_pd,
  	.alloc_ucontext = mthca_alloc_ucontext,
  	.attach_mcast = mthca_multicast_attach,
diff --cc drivers/infiniband/hw/nes/nes_verbs.c
index cece4f7f433e,f1fdd6829a40..000000000000
--- a/drivers/infiniband/hw/nes/nes_verbs.c
+++ b/drivers/infiniband/hw/nes/nes_verbs.c
@@@ -3576,6 -3558,10 +3576,13 @@@ static void get_dev_fw_str(struct ib_de
  }
  
  static const struct ib_device_ops nes_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_NES,
+ 	/* NOTE: Older kernels wrongly use 0 for the uverbs_abi_ver */
+ 	.uverbs_abi_ver = NES_ABI_USERSPACE_VER,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_mr = nes_alloc_mr,
  	.alloc_mw = nes_alloc_mw,
  	.alloc_pd = nes_alloc_pd,
diff --cc drivers/infiniband/hw/ocrdma/ocrdma_main.c
index f315478642e2,ef823f1144b5..000000000000
--- a/drivers/infiniband/hw/ocrdma/ocrdma_main.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_main.c
@@@ -144,6 -144,9 +144,12 @@@ static const struct attribute_group ocr
  };
  
  static const struct ib_device_ops ocrdma_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_OCRDMA,
+ 	.uverbs_abi_ver = OCRDMA_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_mr = ocrdma_alloc_mr,
  	.alloc_pd = ocrdma_alloc_pd,
  	.alloc_ucontext = ocrdma_alloc_ucontext,
diff --cc drivers/infiniband/hw/qedr/main.c
index 65953b3f1f4f,793e25776a7e..000000000000
--- a/drivers/infiniband/hw/qedr/main.c
+++ b/drivers/infiniband/hw/qedr/main.c
@@@ -188,6 -183,9 +188,12 @@@ static void qedr_roce_register_device(s
  }
  
  static const struct ib_device_ops qedr_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_QEDR,
+ 	.uverbs_abi_ver = QEDR_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_mr = qedr_alloc_mr,
  	.alloc_pd = qedr_alloc_pd,
  	.alloc_ucontext = qedr_alloc_ucontext,
diff --cc drivers/infiniband/hw/usnic/usnic_ib_main.c
index 6b56f4f2222a,f61690816095..000000000000
--- a/drivers/infiniband/hw/usnic/usnic_ib_main.c
+++ b/drivers/infiniband/hw/usnic/usnic_ib_main.c
@@@ -316,9 -329,11 +316,15 @@@ static void usnic_get_dev_fw_str(struc
  }
  
  static const struct ib_device_ops usnic_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_USNIC,
+ 	.uverbs_abi_ver = USNIC_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_pd = usnic_ib_alloc_pd,
  	.alloc_ucontext = usnic_ib_alloc_ucontext,
 +	.create_ah = usnic_ib_create_ah,
  	.create_cq = usnic_ib_create_cq,
  	.create_qp = usnic_ib_create_qp,
  	.dealloc_pd = usnic_ib_dealloc_pd,
diff --cc drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
index 02c7ba35823c,2a7eb2838453..000000000000
--- a/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
+++ b/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
@@@ -144,6 -144,9 +144,12 @@@ static int pvrdma_port_immutable(struc
  }
  
  static const struct ib_device_ops pvrdma_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_VMW_PVRDMA,
+ 	.uverbs_abi_ver = PVRDMA_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.add_gid = pvrdma_add_gid,
  	.alloc_mr = pvrdma_alloc_mr,
  	.alloc_pd = pvrdma_alloc_pd,
diff --cc drivers/infiniband/sw/rxe/rxe_verbs.c
index f3188f269481,9e87cdb82bec..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_verbs.c
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.c
@@@ -1126,7 -1101,19 +1126,13 @@@ static const struct attribute_group rxe
  	.attrs = rxe_dev_attributes,
  };
  
 -static int rxe_enable_driver(struct ib_device *ib_dev)
 -{
 -	struct rxe_dev *rxe = container_of(ib_dev, struct rxe_dev, ib_dev);
 -
 -	rxe_set_port_state(rxe);
 -	dev_info(&rxe->ib_dev.dev, "added %s\n", netdev_name(rxe->ndev));
 -	return 0;
 -}
 -
  static const struct ib_device_ops rxe_dev_ops = {
++<<<<<<< HEAD
++=======
+ 	.driver_id = RDMA_DRIVER_RXE,
+ 	.uverbs_abi_ver = RXE_UVERBS_ABI_VERSION,
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	.alloc_hw_stats = rxe_ib_alloc_hw_stats,
  	.alloc_mr = rxe_alloc_mr,
  	.alloc_pd = rxe_alloc_pd,
diff --cc include/rdma/ib_verbs.h
index 714b9b5e3733,16405b9bca13..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2290,6 -2329,9 +2290,12 @@@ struct uverbs_attr_bundle
   * need to define the supported operations, otherwise they will be set to null.
   */
  struct ib_device_ops {
++<<<<<<< HEAD
++=======
+ 	enum rdma_driver_id driver_id;
+ 	u32 uverbs_abi_ver;
+ 
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	int (*post_send)(struct ib_qp *qp, const struct ib_send_wr *send_wr,
  			 const struct ib_send_wr **bad_send_wr);
  	int (*post_recv)(struct ib_qp *qp, const struct ib_recv_wr *recv_wr,
@@@ -2570,10 -2651,6 +2576,13 @@@ struct ib_device 
  	 */
  	const struct attribute_group	*groups[3];
  
++<<<<<<< HEAD
 +	struct kobject			*ports_kobj;
 +	struct list_head             port_list;
 +
 +	int			     uverbs_abi_ver;
++=======
++>>>>>>> 72c6ec18eb61 (RDMA: Move uverbs_abi_ver into struct ib_device_ops)
  	u64			     uverbs_cmd_mask;
  	u64			     uverbs_ex_cmd_mask;
  
* Unmerged path drivers/infiniband/core/device.c
diff --git a/drivers/infiniband/core/uverbs_main.c b/drivers/infiniband/core/uverbs_main.c
index 38520b130ead..e81f4780d8ff 100644
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@ -1180,7 +1180,7 @@ static ssize_t abi_version_show(struct device *device,
 	srcu_key = srcu_read_lock(&dev->disassociate_srcu);
 	ib_dev = srcu_dereference(dev->ib_dev, &dev->disassociate_srcu);
 	if (ib_dev)
-		ret = sprintf(buf, "%d\n", ib_dev->uverbs_abi_ver);
+		ret = sprintf(buf, "%u\n", ib_dev->ops.uverbs_abi_ver);
 	srcu_read_unlock(&dev->disassociate_srcu, srcu_key);
 
 	return ret;
diff --git a/drivers/infiniband/hw/bnxt_re/ib_verbs.c b/drivers/infiniband/hw/bnxt_re/ib_verbs.c
index 9361cce3c120..de2f74a13616 100644
--- a/drivers/infiniband/hw/bnxt_re/ib_verbs.c
+++ b/drivers/infiniband/hw/bnxt_re/ib_verbs.c
@@ -3674,10 +3674,10 @@ struct ib_ucontext *bnxt_re_alloc_ucontext(struct ib_device *ibdev,
 	u32 chip_met_rev_num = 0;
 	int rc;
 
-	dev_dbg(rdev_to_dev(rdev), "ABI version requested %d",
-		ibdev->uverbs_abi_ver);
+	dev_dbg(rdev_to_dev(rdev), "ABI version requested %u",
+		ibdev->ops.uverbs_abi_ver);
 
-	if (ibdev->uverbs_abi_ver != BNXT_RE_ABI_VERSION) {
+	if (ibdev->ops.uverbs_abi_ver != BNXT_RE_ABI_VERSION) {
 		dev_dbg(rdev_to_dev(rdev), " is different from the device %d ",
 			BNXT_RE_ABI_VERSION);
 		return ERR_PTR(-EPERM);
* Unmerged path drivers/infiniband/hw/bnxt_re/main.c
* Unmerged path drivers/infiniband/hw/cxgb3/iwch_provider.c
* Unmerged path drivers/infiniband/hw/cxgb4/provider.c
* Unmerged path drivers/infiniband/hw/efa/efa_main.c
* Unmerged path drivers/infiniband/hw/hns/hns_roce_main.c
* Unmerged path drivers/infiniband/hw/i40iw/i40iw_verbs.c
* Unmerged path drivers/infiniband/hw/mlx4/main.c
* Unmerged path drivers/infiniband/hw/mlx5/main.c
* Unmerged path drivers/infiniband/hw/mthca/mthca_provider.c
* Unmerged path drivers/infiniband/hw/nes/nes_verbs.c
* Unmerged path drivers/infiniband/hw/ocrdma/ocrdma_main.c
* Unmerged path drivers/infiniband/hw/qedr/main.c
* Unmerged path drivers/infiniband/hw/usnic/usnic_ib_main.c
* Unmerged path drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
diff --git a/drivers/infiniband/sw/rdmavt/vt.c b/drivers/infiniband/sw/rdmavt/vt.c
index b3f0c5578925..49a4948dc9de 100644
--- a/drivers/infiniband/sw/rdmavt/vt.c
+++ b/drivers/infiniband/sw/rdmavt/vt.c
@@ -393,6 +393,8 @@ enum {
 };
 
 static const struct ib_device_ops rvt_dev_ops = {
+	.uverbs_abi_ver = RVT_UVERBS_ABI_VERSION,
+
 	.alloc_fmr = rvt_alloc_fmr,
 	.alloc_mr = rvt_alloc_mr,
 	.alloc_pd = rvt_alloc_pd,
@@ -606,7 +608,6 @@ int rvt_register_device(struct rvt_dev_info *rdi, u32 driver_id)
 	 * exactly which functions rdmavt supports, nor do they know the ABI
 	 * version, so we do all of this sort of stuff here.
 	 */
-	rdi->ibdev.uverbs_abi_ver = RVT_UVERBS_ABI_VERSION;
 	rdi->ibdev.uverbs_cmd_mask =
 		(1ull << IB_USER_VERBS_CMD_GET_CONTEXT)         |
 		(1ull << IB_USER_VERBS_CMD_QUERY_DEVICE)        |
* Unmerged path drivers/infiniband/sw/rxe/rxe_verbs.c
* Unmerged path include/rdma/ib_verbs.h
