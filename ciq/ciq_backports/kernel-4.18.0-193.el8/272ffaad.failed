net: sched: flower: handle concurrent tcf proto deletion

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] sched: flower: handle concurrent tcf proto deletion (Ivan Vecera) [1751856]
Rebuild_FUZZ: 95.33%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 272ffaadeb3e739baa70aef7e92ad844b62b3304
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/272ffaad.failed

Without rtnl lock protection tcf proto can be deleted concurrently. Check
tcf proto 'deleting' flag after taking tcf spinlock to verify that no
concurrent deletion is in progress. Return EAGAIN error if concurrent
deletion detected, which will cause caller to retry and possibly create new
instance of tcf proto.

Retry mechanism is a result of fine-grained locking approach used in this
and previous changes in series and is necessary to allow concurrent updates
on same chain instance. Alternative approach would be to lock the whole
chain while updating filters on any of child tp's, adding and removing
classifier instances from the chain. However, since most CPU-intensive
parts of filter update code are specifically in classifier code and its
dependencies (extensions and hw offloads), such approach would negate most
of the gains introduced by this change and previous changes in the series
when updating same chain instance.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 272ffaadeb3e739baa70aef7e92ad844b62b3304)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_flower.c
diff --cc net/sched/cls_flower.c
index ffd0c5b3e320,25a4d64b82db..000000000000
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@@ -1431,7 -1500,22 +1431,19 @@@ static int fl_change(struct net *net, s
  	if (!tc_in_hw(fnew->flags))
  		fnew->flags |= TCA_CLS_FLAGS_NOT_IN_HW;
  
++<<<<<<< HEAD
++=======
+ 	/* tp was deleted concurrently. -EAGAIN will cause caller to lookup
+ 	 * proto again or create new one, if necessary.
+ 	 */
+ 	if (tp->deleting) {
+ 		err = -EAGAIN;
+ 		goto errout_hw;
+ 	}
+ 
+ 	refcount_inc(&fnew->refcnt);
++>>>>>>> 272ffaadeb3e (net: sched: flower: handle concurrent tcf proto deletion)
  	if (fold) {
 -		/* Fold filter was deleted concurrently. Retry lookup. */
 -		if (fold->deleted) {
 -			err = -EAGAIN;
 -			goto errout_hw;
 -		}
 -
  		fnew->handle = handle;
  
  		err = rhashtable_insert_fast(&fnew->mask->ht, &fnew->ht_node,
* Unmerged path net/sched/cls_flower.c
