iommu/vt-d: Implement apply_resv_region iommu ops entry

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Implement apply_resv_region iommu ops entry (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 94.23%
commit-author James Sewart <jamessewart@arista.com>
commit 73bcbdc9fa8d88db2d26d06885fb180cfe478f80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/73bcbdc9.failed

Used by iommu.c before creating identity mappings for reserved
ranges to ensure dma-ops won't ever remap these ranges.

	Signed-off-by: James Sewart <jamessewart@arista.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 73bcbdc9fa8d88db2d26d06885fb180cfe478f80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 2b01c065423a,3995afc59c28..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -5421,6 -5549,20 +5421,23 @@@ int intel_iommu_enable_pasid(struct int
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static void intel_iommu_apply_resv_region(struct device *dev,
+ 					  struct iommu_domain *domain,
+ 					  struct iommu_resv_region *region)
+ {
+ 	struct dmar_domain *dmar_domain = to_dmar_domain(domain);
+ 	unsigned long start, end;
+ 
+ 	start = IOVA_PFN(region->start);
+ 	end   = IOVA_PFN(region->start + region->length - 1);
+ 
+ 	WARN_ON_ONCE(!reserve_iova(&dmar_domain->iovad, start, end));
+ }
+ 
+ #ifdef CONFIG_INTEL_IOMMU_SVM
++>>>>>>> 73bcbdc9fa8d (iommu/vt-d: Implement apply_resv_region iommu ops entry)
  struct intel_iommu *intel_svm_device_to_iommu(struct device *dev)
  {
  	struct intel_iommu *iommu;
* Unmerged path drivers/iommu/intel-iommu.c
