iommu/vt-d: Clean up iommu_no_mapping

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Clean up iommu_no_mapping (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 91.18%
commit-author Christoph Hellwig <hch@lst.de>
commit 48b2c937ea37a3bece0094b46450ed5267525289
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/48b2c937.failed

Invert the return value to avoid double negatives, use a bool
instead of int as the return value, and reduce some indentation
after early returns.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 48b2c937ea37a3bece0094b46450ed5267525289)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 940779fd0ec3,46337a4ea33e..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -3572,30 -3621,23 +3572,48 @@@ static bool iommu_need_mapping(struct d
  	found = identity_mapping(dev);
  	if (found) {
  		if (iommu_should_identity_map(dev, 0))
++<<<<<<< HEAD
 +			return 1;
 +		else {
 +			/*
 +			 * 32 bit DMA is removed from si_domain and fall back
 +			 * to non-identity mapping.
 +			 */
 +			dmar_remove_one_dev_info(si_domain, dev);
 +			pr_info("32bit %s uses non-identity mapping\n",
 +				dev_name(dev));
 +			return 0;
 +		}
++=======
+ 			return false;
+ 
+ 		/*
+ 		 * 32 bit DMA is removed from si_domain and fall back to
+ 		 * non-identity mapping.
+ 		 */
+ 		dmar_remove_one_dev_info(dev);
+ 		dev_info(dev, "32bit DMA uses non-identity mapping\n");
++>>>>>>> 48b2c937ea37 (iommu/vt-d: Clean up iommu_no_mapping)
  	} else {
  		/*
  		 * In case of a detached 64 bit DMA device from vm, the device
  		 * is put into si_domain for identity mapping.
  		 */
++<<<<<<< HEAD
 +		if (iommu_should_identity_map(dev, 0)) {
 +			int ret;
 +			ret = domain_add_dev_info(si_domain, dev);
 +			if (!ret) {
 +				pr_info("64bit %s uses identity mapping\n",
 +					dev_name(dev));
 +				return 1;
 +			}
++=======
+ 		if (iommu_should_identity_map(dev, 0) &&
+ 		    !domain_add_dev_info(si_domain, dev)) {
+ 			dev_info(dev, "64bit DMA uses identity mapping\n");
+ 			return false;
++>>>>>>> 48b2c937ea37 (iommu/vt-d: Clean up iommu_no_mapping)
  		}
  	}
  
* Unmerged path drivers/iommu/intel-iommu.c
