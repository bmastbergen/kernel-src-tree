net: phy: switch drivers to use dynamic feature detection

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] phy: switch drivers to use dynamic feature detection (Petr Oros) [1772010]
Rebuild_FUZZ: 95.41%
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit dcdecdcfe1fc39ded8590aed2fe84d62f14b2392
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/dcdecdcf.failed

Recently genphy_read_abilities() has been added that dynamically detects
clause 22 PHY abilities. I *think* this detection should work with all
supported PHY's, at least for the ones with basic features sets, i.e.
PHY_BASIC_FEATURES and PHY_GBIT_FEATURES. So let's remove setting these
features explicitly and rely on phylib feature detection.

I don't have access to most of these PHY's, therefore I'd appreciate
regression testing.

v2:
- make the feature constant a comment so that readers know which
  features are supported by the respective PHY

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Tested-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit dcdecdcfe1fc39ded8590aed2fe84d62f14b2392)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/amd.c
#	drivers/net/phy/at803x.c
#	drivers/net/phy/bcm63xx.c
#	drivers/net/phy/broadcom.c
#	drivers/net/phy/cicada.c
#	drivers/net/phy/davicom.c
#	drivers/net/phy/dp83640.c
#	drivers/net/phy/dp83822.c
#	drivers/net/phy/dp83848.c
#	drivers/net/phy/dp83867.c
#	drivers/net/phy/dp83tc811.c
#	drivers/net/phy/icplus.c
#	drivers/net/phy/intel-xway.c
#	drivers/net/phy/lxt.c
#	drivers/net/phy/marvell.c
#	drivers/net/phy/meson-gxl.c
#	drivers/net/phy/micrel.c
#	drivers/net/phy/microchip.c
#	drivers/net/phy/mscc.c
#	drivers/net/phy/national.c
#	drivers/net/phy/qsemi.c
#	drivers/net/phy/smsc.c
#	drivers/net/phy/ste10Xp.c
#	drivers/net/phy/vitesse.c
diff --cc drivers/net/phy/amd.c
index f17b43f92511,eef35f8c8d45..000000000000
--- a/drivers/net/phy/amd.c
+++ b/drivers/net/phy/amd.c
@@@ -60,8 -60,7 +60,12 @@@ static struct phy_driver am79c_driver[
  	.phy_id		= PHY_ID_AM79C874,
  	.name		= "AM79C874",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= am79c_config_init,
  	.ack_interrupt	= am79c_ack_interrupt,
  	.config_intr	= am79c_config_intr,
diff --cc drivers/net/phy/at803x.c
index 625c7f17dbe9,406111753f7c..000000000000
--- a/drivers/net/phy/at803x.c
+++ b/drivers/net/phy/at803x.c
@@@ -389,8 -389,7 +389,12 @@@ static struct phy_driver at803x_driver[
  	.get_wol		= at803x_get_wol,
  	.suspend		= at803x_suspend,
  	.resume			= at803x_resume,
++<<<<<<< HEAD
 +	.features		= PHY_GBIT_FEATURES,
 +	.flags			= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.ack_interrupt		= at803x_ack_interrupt,
  	.config_intr		= at803x_config_intr,
  }, {
@@@ -405,8 -404,7 +409,12 @@@
  	.get_wol		= at803x_get_wol,
  	.suspend		= at803x_suspend,
  	.resume			= at803x_resume,
++<<<<<<< HEAD
 +	.features		= PHY_BASIC_FEATURES,
 +	.flags			= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.ack_interrupt		= at803x_ack_interrupt,
  	.config_intr		= at803x_config_intr,
  }, {
@@@ -420,8 -418,7 +428,12 @@@
  	.get_wol		= at803x_get_wol,
  	.suspend		= at803x_suspend,
  	.resume			= at803x_resume,
++<<<<<<< HEAD
 +	.features		= PHY_GBIT_FEATURES,
 +	.flags			= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.aneg_done		= at803x_aneg_done,
  	.ack_interrupt		= &at803x_ack_interrupt,
  	.config_intr		= &at803x_config_intr,
diff --cc drivers/net/phy/bcm63xx.c
index 27f1a28caca5,23f1958ba6ad..000000000000
--- a/drivers/net/phy/bcm63xx.c
+++ b/drivers/net/phy/bcm63xx.c
@@@ -64,8 -64,8 +64,13 @@@ static struct phy_driver bcm63xx_driver
  	.phy_id		= 0x00406000,
  	.phy_id_mask	= 0xfffffc00,
  	.name		= "Broadcom BCM63XX (1)",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT | PHY_IS_INTERNAL,
++=======
+ 	/* PHY_BASIC_FEATURES */
+ 	.flags		= PHY_IS_INTERNAL,
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm63xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm63xx_config_intr,
@@@ -73,8 -73,8 +78,13 @@@
  	/* same phy as above, with just a different OUI */
  	.phy_id		= 0x002bdc00,
  	.phy_id_mask	= 0xfffffc00,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT | PHY_IS_INTERNAL,
++=======
+ 	/* PHY_BASIC_FEATURES */
+ 	.flags		= PHY_IS_INTERNAL,
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm63xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm63xx_config_intr,
diff --cc drivers/net/phy/broadcom.c
index 5bd071b6a76c,67fa05d67523..000000000000
--- a/drivers/net/phy/broadcom.c
+++ b/drivers/net/phy/broadcom.c
@@@ -610,8 -610,7 +610,12 @@@ static struct phy_driver broadcom_drive
  	.phy_id		= PHY_ID_BCM5411,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5411",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -619,8 -618,7 +623,12 @@@
  	.phy_id		= PHY_ID_BCM5421,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5421",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -628,8 -626,7 +636,12 @@@
  	.phy_id		= PHY_ID_BCM54210E,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM54210E",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -637,8 -634,7 +649,12 @@@
  	.phy_id		= PHY_ID_BCM5461,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5461",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -646,8 -642,7 +662,12 @@@
  	.phy_id		= PHY_ID_BCM54612E,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM54612E",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -655,8 -650,7 +675,12 @@@
  	.phy_id		= PHY_ID_BCM54616S,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM54616S",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.config_aneg	= bcm54616s_config_aneg,
  	.ack_interrupt	= bcm_phy_ack_intr,
@@@ -665,8 -659,7 +689,12 @@@
  	.phy_id		= PHY_ID_BCM5464,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5464",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -674,8 -667,7 +702,12 @@@
  	.phy_id		= PHY_ID_BCM5481,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5481",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.config_aneg	= bcm5481_config_aneg,
  	.ack_interrupt	= bcm_phy_ack_intr,
@@@ -684,8 -676,7 +716,12 @@@
  	.phy_id         = PHY_ID_BCM54810,
  	.phy_id_mask    = 0xfffffff0,
  	.name           = "Broadcom BCM54810",
++<<<<<<< HEAD
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init    = bcm54xx_config_init,
  	.config_aneg    = bcm5481_config_aneg,
  	.ack_interrupt  = bcm_phy_ack_intr,
@@@ -694,8 -685,7 +730,12 @@@
  	.phy_id		= PHY_ID_BCM5482,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5482",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm5482_config_init,
  	.read_status	= bcm5482_read_status,
  	.ack_interrupt	= bcm_phy_ack_intr,
@@@ -704,8 -694,7 +744,12 @@@
  	.phy_id		= PHY_ID_BCM50610,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM50610",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -713,8 -702,7 +757,12 @@@
  	.phy_id		= PHY_ID_BCM50610M,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM50610M",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -722,8 -710,7 +770,12 @@@
  	.phy_id		= PHY_ID_BCM57780,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM57780",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= bcm54xx_config_init,
  	.ack_interrupt	= bcm_phy_ack_intr,
  	.config_intr	= bcm_phy_config_intr,
@@@ -731,8 -718,7 +783,12 @@@
  	.phy_id		= PHY_ID_BCMAC131,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCMAC131",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= brcm_fet_config_init,
  	.ack_interrupt	= brcm_fet_ack_interrupt,
  	.config_intr	= brcm_fet_config_intr,
@@@ -740,8 -726,7 +796,12 @@@
  	.phy_id		= PHY_ID_BCM5241,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Broadcom BCM5241",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= brcm_fet_config_init,
  	.ack_interrupt	= brcm_fet_ack_interrupt,
  	.config_intr	= brcm_fet_config_intr,
@@@ -759,8 -744,7 +819,12 @@@
  	.phy_id         = PHY_ID_BCM89610,
  	.phy_id_mask    = 0xfffffff0,
  	.name           = "Broadcom BCM89610",
++<<<<<<< HEAD
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init    = bcm54xx_config_init,
  	.ack_interrupt  = bcm_phy_ack_intr,
  	.config_intr    = bcm_phy_config_intr,
diff --cc drivers/net/phy/cicada.c
index 10e8d438753f,9d1612a4d7e6..000000000000
--- a/drivers/net/phy/cicada.c
+++ b/drivers/net/phy/cicada.c
@@@ -102,8 -102,7 +102,12 @@@ static struct phy_driver cis820x_driver
  	.phy_id		= 0x000fc410,
  	.name		= "Cicada Cis8201",
  	.phy_id_mask	= 0x000ffff0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= &cis820x_config_init,
  	.ack_interrupt	= &cis820x_ack_interrupt,
  	.config_intr	= &cis820x_config_intr,
@@@ -111,8 -110,7 +115,12 @@@
  	.phy_id		= 0x000fc440,
  	.name		= "Cicada Cis8204",
  	.phy_id_mask	= 0x000fffc0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= &cis820x_config_init,
  	.ack_interrupt	= &cis820x_ack_interrupt,
  	.config_intr	= &cis820x_config_intr,
diff --cc drivers/net/phy/davicom.c
index 60274340170e,942f277463a4..000000000000
--- a/drivers/net/phy/davicom.c
+++ b/drivers/net/phy/davicom.c
@@@ -144,8 -144,7 +144,12 @@@ static struct phy_driver dm91xx_driver[
  	.phy_id		= 0x0181b880,
  	.name		= "Davicom DM9161E",
  	.phy_id_mask	= 0x0ffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= dm9161_config_init,
  	.config_aneg	= dm9161_config_aneg,
  	.ack_interrupt	= dm9161_ack_interrupt,
@@@ -154,8 -153,7 +158,12 @@@
  	.phy_id		= 0x0181b8b0,
  	.name		= "Davicom DM9161B/C",
  	.phy_id_mask	= 0x0ffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= dm9161_config_init,
  	.config_aneg	= dm9161_config_aneg,
  	.ack_interrupt	= dm9161_ack_interrupt,
@@@ -164,8 -162,7 +172,12 @@@
  	.phy_id		= 0x0181b8a0,
  	.name		= "Davicom DM9161A",
  	.phy_id_mask	= 0x0ffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= dm9161_config_init,
  	.config_aneg	= dm9161_config_aneg,
  	.ack_interrupt	= dm9161_ack_interrupt,
@@@ -174,8 -171,7 +186,12 @@@
  	.phy_id		= 0x00181b80,
  	.name		= "Davicom DM9131",
  	.phy_id_mask	= 0x0ffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.ack_interrupt	= dm9161_ack_interrupt,
  	.config_intr	= dm9161_config_intr,
  } };
diff --cc drivers/net/phy/dp83640.c
index cb196a77c740,6580094161a9..000000000000
--- a/drivers/net/phy/dp83640.c
+++ b/drivers/net/phy/dp83640.c
@@@ -1514,8 -1514,7 +1514,12 @@@ static struct phy_driver dp83640_drive
  	.phy_id		= DP83640_PHY_ID,
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "NatSemi DP83640",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.probe		= dp83640_probe,
  	.remove		= dp83640_remove,
  	.soft_reset	= dp83640_soft_reset,
diff --cc drivers/net/phy/dp83822.c
index 41b5bf72ddd7,7ed4760fb155..000000000000
--- a/drivers/net/phy/dp83822.c
+++ b/drivers/net/phy/dp83822.c
@@@ -304,22 -306,24 +304,40 @@@ static int dp83822_resume(struct phy_de
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ #define DP83822_PHY_DRIVER(_id, _name)				\
+ 	{							\
+ 		PHY_ID_MATCH_MODEL(_id),			\
+ 		.name		= (_name),			\
+ 		/* PHY_BASIC_FEATURES */			\
+ 		.soft_reset	= dp83822_phy_reset,		\
+ 		.config_init	= dp83822_config_init,		\
+ 		.get_wol = dp83822_get_wol,			\
+ 		.set_wol = dp83822_set_wol,			\
+ 		.ack_interrupt = dp83822_ack_interrupt,		\
+ 		.config_intr = dp83822_config_intr,		\
+ 		.suspend = dp83822_suspend,			\
+ 		.resume = dp83822_resume,			\
+ 	}
+ 
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  static struct phy_driver dp83822_driver[] = {
 -	DP83822_PHY_DRIVER(DP83822_PHY_ID, "TI DP83822"),
 -	DP83822_PHY_DRIVER(DP83825I_PHY_ID, "TI DP83825I"),
 +	{
 +		.phy_id = DP83822_PHY_ID,
 +		.phy_id_mask = 0xfffffff0,
 +		.name = "TI DP83822",
 +		.features = PHY_BASIC_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
 +		.config_init = dp83822_config_init,
 +		.soft_reset = dp83822_phy_reset,
 +		.get_wol = dp83822_get_wol,
 +		.set_wol = dp83822_set_wol,
 +		.ack_interrupt = dp83822_ack_interrupt,
 +		.config_intr = dp83822_config_intr,
 +		.suspend = dp83822_suspend,
 +		.resume = dp83822_resume,
 +	 },
  };
  module_phy_driver(dp83822_driver);
  
diff --cc drivers/net/phy/dp83848.c
index 4f9886296320,6f9bc7d91f17..000000000000
--- a/drivers/net/phy/dp83848.c
+++ b/drivers/net/phy/dp83848.c
@@@ -99,8 -99,7 +99,12 @@@ MODULE_DEVICE_TABLE(mdio, dp83848_tbl)
  		.phy_id		= _id,				\
  		.phy_id_mask	= 0xfffffff0,			\
  		.name		= _name,			\
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,		\
 +		.flags		= PHY_HAS_INTERRUPT,		\
++=======
+ 		/* PHY_BASIC_FEATURES */			\
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  								\
  		.soft_reset	= genphy_soft_reset,		\
  		.config_init	= _config_init,			\
diff --cc drivers/net/phy/dp83867.c
index ed528d4f9746,fd35131a0c39..000000000000
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@@ -315,8 -315,7 +315,12 @@@ static struct phy_driver dp83867_driver
  		.phy_id		= DP83867_PHY_ID,
  		.phy_id_mask	= 0xfffffff0,
  		.name		= "TI DP83867",
++<<<<<<< HEAD
 +		.features	= PHY_GBIT_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  		.config_init	= dp83867_config_init,
  		.soft_reset	= dp83867_phy_reset,
diff --cc drivers/net/phy/dp83tc811.c
index be16975a8891,ac27da16824d..000000000000
--- a/drivers/net/phy/dp83tc811.c
+++ b/drivers/net/phy/dp83tc811.c
@@@ -338,8 -338,7 +338,12 @@@ static struct phy_driver dp83811_driver
  		.phy_id = DP83TC811_PHY_ID,
  		.phy_id_mask = 0xfffffff0,
  		.name = "TI DP83TC811",
++<<<<<<< HEAD
 +		.features = PHY_BASIC_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init = dp83811_config_init,
  		.config_aneg = dp83811_config_aneg,
  		.soft_reset = dp83811_phy_reset,
diff --cc drivers/net/phy/icplus.c
index fe2ae9a57d6d,d6e8516cd146..000000000000
--- a/drivers/net/phy/icplus.c
+++ b/drivers/net/phy/icplus.c
@@@ -228,8 -329,10 +228,15 @@@ static struct phy_driver icplus_driver[
  	.phy_id		= 0x02430c54,
  	.name		= "ICPlus IP101A/G",
  	.phy_id_mask	= 0x0ffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
+ 	.probe		= ip101a_g_probe,
+ 	.config_intr	= ip101a_g_config_intr,
+ 	.did_interrupt	= ip101a_g_did_interrupt,
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.ack_interrupt	= ip101a_g_ack_interrupt,
  	.config_init	= &ip101a_g_config_init,
  	.suspend	= genphy_suspend,
diff --cc drivers/net/phy/intel-xway.c
index c41d33f72a32,b7875b36097f..000000000000
--- a/drivers/net/phy/intel-xway.c
+++ b/drivers/net/phy/intel-xway.c
@@@ -232,8 -232,7 +232,12 @@@ static struct phy_driver xway_gphy[] = 
  		.phy_id		= PHY_ID_PHY11G_1_3,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY11G (PEF 7071/PEF 7072) v1.3",
++<<<<<<< HEAD
 +		.features	= PHY_GBIT_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.config_aneg	= xway_gphy14_config_aneg,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
@@@ -245,8 -244,7 +249,12 @@@
  		.phy_id		= PHY_ID_PHY22F_1_3,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY22F (PEF 7061) v1.3",
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.config_aneg	= xway_gphy14_config_aneg,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
@@@ -258,8 -256,7 +266,12 @@@
  		.phy_id		= PHY_ID_PHY11G_1_4,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY11G (PEF 7071/PEF 7072) v1.4",
++<<<<<<< HEAD
 +		.features	= PHY_GBIT_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.config_aneg	= xway_gphy14_config_aneg,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
@@@ -271,8 -268,7 +283,12 @@@
  		.phy_id		= PHY_ID_PHY22F_1_4,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY22F (PEF 7061) v1.4",
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.config_aneg	= xway_gphy14_config_aneg,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
@@@ -284,8 -280,7 +300,12 @@@
  		.phy_id		= PHY_ID_PHY11G_1_5,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY11G (PEF 7071/PEF 7072) v1.5 / v1.6",
++<<<<<<< HEAD
 +		.features	= PHY_GBIT_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
  		.did_interrupt	= xway_gphy_did_interrupt,
@@@ -296,8 -291,7 +316,12 @@@
  		.phy_id		= PHY_ID_PHY22F_1_5,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY22F (PEF 7061) v1.5 / v1.6",
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
  		.did_interrupt	= xway_gphy_did_interrupt,
@@@ -308,8 -302,7 +332,12 @@@
  		.phy_id		= PHY_ID_PHY11G_VR9_1_1,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY11G (xRX v1.1 integrated)",
++<<<<<<< HEAD
 +		.features	= PHY_GBIT_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
  		.did_interrupt	= xway_gphy_did_interrupt,
@@@ -320,8 -313,7 +348,12 @@@
  		.phy_id		= PHY_ID_PHY22F_VR9_1_1,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY22F (xRX v1.1 integrated)",
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
  		.did_interrupt	= xway_gphy_did_interrupt,
@@@ -332,8 -324,7 +364,12 @@@
  		.phy_id		= PHY_ID_PHY11G_VR9_1_2,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY11G (xRX v1.2 integrated)",
++<<<<<<< HEAD
 +		.features	= PHY_GBIT_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
  		.did_interrupt	= xway_gphy_did_interrupt,
@@@ -344,8 -335,7 +380,12 @@@
  		.phy_id		= PHY_ID_PHY22F_VR9_1_2,
  		.phy_id_mask	= 0xffffffff,
  		.name		= "Intel XWAY PHY22F (xRX v1.2 integrated)",
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,
 +		.flags		= PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= xway_gphy_config_init,
  		.ack_interrupt	= xway_gphy_ack_interrupt,
  		.did_interrupt	= xway_gphy_did_interrupt,
diff --cc drivers/net/phy/lxt.c
index e8c47da014c8,314486288119..000000000000
--- a/drivers/net/phy/lxt.c
+++ b/drivers/net/phy/lxt.c
@@@ -251,8 -251,7 +251,12 @@@ static struct phy_driver lxt97x_driver[
  	.phy_id		= 0x78100000,
  	.name		= "LXT970",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= lxt970_config_init,
  	.ack_interrupt	= lxt970_ack_interrupt,
  	.config_intr	= lxt970_config_intr,
@@@ -260,8 -259,7 +264,12 @@@
  	.phy_id		= 0x001378e0,
  	.name		= "LXT971",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.ack_interrupt	= lxt971_ack_interrupt,
  	.config_intr	= lxt971_config_intr,
  }, {
diff --cc drivers/net/phy/marvell.c
index 087f9001df9a,8754cb883d02..000000000000
--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@@ -2126,8 -2126,7 +2126,12 @@@ static struct phy_driver marvell_driver
  		.phy_id = MARVELL_PHY_ID_88E1101,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1101",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &marvell_config_init,
  		.config_aneg = &m88e1101_config_aneg,
@@@ -2145,8 -2144,7 +2149,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1112,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1112",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1111_config_init,
  		.config_aneg = &marvell_config_aneg,
@@@ -2164,8 -2162,7 +2172,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1111,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1111",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1111_config_init,
  		.config_aneg = &marvell_config_aneg,
@@@ -2184,8 -2181,7 +2196,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1118,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1118",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1118_config_init,
  		.config_aneg = &m88e1118_config_aneg,
@@@ -2203,8 -2199,7 +2219,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1121R,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1121R",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = &m88e1121_probe,
  		.config_init = &marvell_config_init,
  		.config_aneg = &m88e1121_config_aneg,
@@@ -2224,8 -2219,7 +2244,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1318S,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1318S",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1318_config_init,
  		.config_aneg = &m88e1318_config_aneg,
@@@ -2247,8 -2241,7 +2271,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1145,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1145",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1145_config_init,
  		.config_aneg = &m88e1101_config_aneg,
@@@ -2267,8 -2260,7 +2295,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1149R,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1149R",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1149_config_init,
  		.config_aneg = &m88e1118_config_aneg,
@@@ -2286,8 -2278,7 +2318,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1240,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1240",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1111_config_init,
  		.config_aneg = &marvell_config_aneg,
@@@ -2305,8 -2296,7 +2341,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1116R,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1116R",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e1116r_config_init,
  		.ack_interrupt = &marvell_ack_interrupt,
@@@ -2347,8 -2336,7 +2387,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E1540,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1540",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = m88e1510_probe,
  		.config_init = &marvell_config_init,
  		.config_aneg = &m88e1510_config_aneg,
@@@ -2371,8 -2359,7 +2415,12 @@@
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E1545",
  		.probe = m88e1510_probe,
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init = &marvell_config_init,
  		.config_aneg = &m88e1510_config_aneg,
  		.read_status = &marvell_read_status,
@@@ -2391,8 -2378,7 +2439,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E3016,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E3016",
++<<<<<<< HEAD
 +		.features = PHY_BASIC_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = marvell_probe,
  		.config_init = &m88e3016_config_init,
  		.aneg_done = &marvell_aneg_done,
@@@ -2412,8 -2398,7 +2464,12 @@@
  		.phy_id = MARVELL_PHY_ID_88E6390,
  		.phy_id_mask = MARVELL_PHY_ID_MASK,
  		.name = "Marvell 88E6390",
++<<<<<<< HEAD
 +		.features = PHY_GBIT_FEATURES,
 +		.flags = PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.probe = m88e6390_probe,
  		.config_init = &marvell_config_init,
  		.config_aneg = &m88e6390_config_aneg,
diff --cc drivers/net/phy/meson-gxl.c
index f3c85fe08937,fa80d6dce8ee..000000000000
--- a/drivers/net/phy/meson-gxl.c
+++ b/drivers/net/phy/meson-gxl.c
@@@ -226,8 -226,9 +226,14 @@@ static struct phy_driver meson_gxl_phy[
  	{
  		PHY_ID_MATCH_EXACT(0x01814400),
  		.name		= "Meson GXL Internal PHY",
++<<<<<<< HEAD
 +		.features	= PHY_BASIC_FEATURES,
 +		.flags		= PHY_IS_INTERNAL | PHY_HAS_INTERRUPT,
++=======
+ 		/* PHY_BASIC_FEATURES */
+ 		.flags		= PHY_IS_INTERNAL,
+ 		.soft_reset     = genphy_soft_reset,
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  		.config_init	= meson_gxl_config_init,
  		.read_status	= meson_gxl_read_status,
  		.ack_interrupt	= meson_gxl_ack_interrupt,
diff --cc drivers/net/phy/micrel.c
index 52d52619256a,d6807b5bcd97..000000000000
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@@ -897,8 -908,7 +897,12 @@@ static struct phy_driver ksphy_driver[
  	.phy_id		= PHY_ID_KS8737,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KS8737",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ks8737_type,
  	.config_init	= kszphy_config_init,
  	.ack_interrupt	= kszphy_ack_interrupt,
@@@ -909,8 -919,7 +913,12 @@@
  	.phy_id		= PHY_ID_KSZ8021,
  	.phy_id_mask	= 0x00ffffff,
  	.name		= "Micrel KSZ8021 or KSZ8031",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8021_type,
  	.probe		= kszphy_probe,
  	.config_init	= kszphy_config_init,
@@@ -925,8 -934,7 +933,12 @@@
  	.phy_id		= PHY_ID_KSZ8031,
  	.phy_id_mask	= 0x00ffffff,
  	.name		= "Micrel KSZ8031",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8021_type,
  	.probe		= kszphy_probe,
  	.config_init	= kszphy_config_init,
@@@ -941,8 -949,7 +953,12 @@@
  	.phy_id		= PHY_ID_KSZ8041,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ8041",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8041_type,
  	.probe		= kszphy_probe,
  	.config_init	= ksz8041_config_init,
@@@ -958,8 -965,7 +974,12 @@@
  	.phy_id		= PHY_ID_KSZ8041RNLI,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ8041RNLI",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8041_type,
  	.probe		= kszphy_probe,
  	.config_init	= kszphy_config_init,
@@@ -974,8 -980,7 +994,12 @@@
  	.phy_id		= PHY_ID_KSZ8051,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ8051",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8051_type,
  	.probe		= kszphy_probe,
  	.config_init	= kszphy_config_init,
@@@ -990,8 -995,7 +1014,12 @@@
  	.phy_id		= PHY_ID_KSZ8001,
  	.name		= "Micrel KSZ8001 or KS8721",
  	.phy_id_mask	= 0x00fffffc,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8041_type,
  	.probe		= kszphy_probe,
  	.config_init	= kszphy_config_init,
@@@ -1006,8 -1010,7 +1034,12 @@@
  	.phy_id		= PHY_ID_KSZ8081,
  	.name		= "Micrel KSZ8081 or KSZ8091",
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz8081_type,
  	.probe		= kszphy_probe,
  	.config_init	= kszphy_config_init,
@@@ -1022,9 -1025,8 +1054,14 @@@
  	.phy_id		= PHY_ID_KSZ8061,
  	.name		= "Micrel KSZ8061",
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
 +	.config_init	= kszphy_config_init,
++=======
+ 	/* PHY_BASIC_FEATURES */
+ 	.config_init	= ksz8061_config_init,
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.ack_interrupt	= kszphy_ack_interrupt,
  	.config_intr	= kszphy_config_intr,
  	.suspend	= genphy_suspend,
@@@ -1033,8 -1035,7 +1070,12 @@@
  	.phy_id		= PHY_ID_KSZ9021,
  	.phy_id_mask	= 0x000ffffe,
  	.name		= "Micrel KSZ9021 Gigabit PHY",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz9021_type,
  	.probe		= kszphy_probe,
  	.config_init	= ksz9021_config_init,
@@@ -1051,8 -1052,7 +1092,12 @@@
  	.phy_id		= PHY_ID_KSZ9031,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ9031 Gigabit PHY",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz9021_type,
  	.probe		= kszphy_probe,
  	.config_init	= ksz9031_config_init,
@@@ -1069,8 -1069,7 +1114,12 @@@
  	.phy_id		= PHY_ID_KSZ9131,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Microchip KSZ9131 Gigabit PHY",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.driver_data	= &ksz9021_type,
  	.probe		= kszphy_probe,
  	.config_init	= ksz9131_config_init,
@@@ -1096,8 -1095,7 +1145,12 @@@
  	.phy_id		= PHY_ID_KSZ886X,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ886X Switch",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= kszphy_config_init,
  	.suspend	= genphy_suspend,
  	.resume		= genphy_resume,
@@@ -1105,8 -1103,7 +1158,12 @@@
  	.phy_id		= PHY_ID_KSZ8795,
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.name		= "Micrel KSZ8795",
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= kszphy_config_init,
  	.config_aneg	= ksz8873mll_config_aneg,
  	.read_status	= ksz8873mll_read_status,
diff --cc drivers/net/phy/microchip.c
index 1e4d2070363a,eb1b3287fe08..000000000000
--- a/drivers/net/phy/microchip.c
+++ b/drivers/net/phy/microchip.c
@@@ -333,8 -333,7 +333,12 @@@ static struct phy_driver microchip_phy_
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "Microchip LAN88xx",
  
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= lan88xx_probe,
  	.remove		= lan88xx_remove,
diff --cc drivers/net/phy/mscc.c
index af7ebb50c6cb,623313f077d1..000000000000
--- a/drivers/net/phy/mscc.c
+++ b/drivers/net/phy/mscc.c
@@@ -1882,8 -1882,7 +1882,12 @@@ static struct phy_driver vsc85xx_driver
  	.phy_id		= PHY_ID_VSC8530,
  	.name		= "Microsemi FE VSC8530",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.soft_reset	= &genphy_soft_reset,
  	.config_init	= &vsc85xx_config_init,
  	.config_aneg    = &vsc85xx_config_aneg,
@@@ -1908,8 -1907,7 +1912,12 @@@
  	.phy_id		= PHY_ID_VSC8531,
  	.name		= "Microsemi VSC8531",
  	.phy_id_mask    = 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.soft_reset	= &genphy_soft_reset,
  	.config_init    = &vsc85xx_config_init,
  	.config_aneg    = &vsc85xx_config_aneg,
@@@ -1934,8 -1932,7 +1942,12 @@@
  	.phy_id		= PHY_ID_VSC8540,
  	.name		= "Microsemi FE VSC8540 SyncE",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.soft_reset	= &genphy_soft_reset,
  	.config_init	= &vsc85xx_config_init,
  	.config_aneg	= &vsc85xx_config_aneg,
@@@ -1960,8 -1957,7 +1972,12 @@@
  	.phy_id		= PHY_ID_VSC8541,
  	.name		= "Microsemi VSC8541 SyncE",
  	.phy_id_mask    = 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.soft_reset	= &genphy_soft_reset,
  	.config_init    = &vsc85xx_config_init,
  	.config_aneg    = &vsc85xx_config_aneg,
@@@ -1986,8 -1982,7 +2002,12 @@@
  	.phy_id		= PHY_ID_VSC8574,
  	.name		= "Microsemi GE VSC8574 SyncE",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.soft_reset	= &genphy_soft_reset,
  	.config_init    = &vsc8584_config_init,
  	.config_aneg    = &vsc85xx_config_aneg,
@@@ -2013,8 -2008,7 +2033,12 @@@
  	.phy_id		= PHY_ID_VSC8584,
  	.name		= "Microsemi GE VSC8584 SyncE",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.soft_reset	= &genphy_soft_reset,
  	.config_init    = &vsc8584_config_init,
  	.config_aneg    = &vsc85xx_config_aneg,
diff --cc drivers/net/phy/national.c
index 99b3fa82f6d1,a221dd552c3c..000000000000
--- a/drivers/net/phy/national.c
+++ b/drivers/net/phy/national.c
@@@ -128,8 -128,7 +128,12 @@@ static struct phy_driver dp83865_driver
  	.phy_id = DP83865_PHY_ID,
  	.phy_id_mask = 0xfffffff0,
  	.name = "NatSemi DP83865",
++<<<<<<< HEAD
 +	.features = PHY_GBIT_FEATURES,
 +	.flags = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init = ns_config_init,
  	.ack_interrupt = ns_ack_interrupt,
  	.config_intr = ns_config_intr,
diff --cc drivers/net/phy/qsemi.c
index f47825c58756,1b15a991ee06..000000000000
--- a/drivers/net/phy/qsemi.c
+++ b/drivers/net/phy/qsemi.c
@@@ -110,8 -110,7 +110,12 @@@ static struct phy_driver qs6612_driver[
  	.phy_id		= 0x00181440,
  	.name		= "QS6612",
  	.phy_id_mask	= 0xfffffff0,
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= qs6612_config_init,
  	.ack_interrupt	= qs6612_ack_interrupt,
  	.config_intr	= qs6612_config_intr,
diff --cc drivers/net/phy/smsc.c
index 79ce4258206c,dc3d92d340c4..000000000000
--- a/drivers/net/phy/smsc.c
+++ b/drivers/net/phy/smsc.c
@@@ -214,8 -214,7 +214,12 @@@ static struct phy_driver smsc_phy_drive
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "SMSC LAN83C185",
  
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= smsc_phy_probe,
  
@@@ -234,8 -233,7 +238,12 @@@
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "SMSC LAN8187",
  
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= smsc_phy_probe,
  
@@@ -259,8 -257,7 +267,12 @@@
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "SMSC LAN8700",
  
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= smsc_phy_probe,
  
@@@ -285,8 -282,7 +297,12 @@@
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "SMSC LAN911x Internal PHY",
  
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= smsc_phy_probe,
  
@@@ -304,8 -300,8 +320,13 @@@
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "SMSC LAN8710/LAN8720",
  
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT | PHY_RST_AFTER_CLK_EN,
++=======
+ 	/* PHY_BASIC_FEATURES */
+ 	.flags		= PHY_RST_AFTER_CLK_EN,
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= smsc_phy_probe,
  
@@@ -330,8 -326,7 +351,12 @@@
  	.phy_id_mask	= 0xfffffff0,
  	.name		= "SMSC LAN8740",
  
++<<<<<<< HEAD
 +	.features	= PHY_BASIC_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  
  	.probe		= smsc_phy_probe,
  
diff --cc drivers/net/phy/ste10Xp.c
index 4a4310d4aa4b,d735a01380ed..000000000000
--- a/drivers/net/phy/ste10Xp.c
+++ b/drivers/net/phy/ste10Xp.c
@@@ -81,8 -81,7 +81,12 @@@ static struct phy_driver ste10xp_pdrive
  	.phy_id = STE101P_PHY_ID,
  	.phy_id_mask = 0xfffffff0,
  	.name = "STe101p",
++<<<<<<< HEAD
 +	.features = PHY_BASIC_FEATURES,
 +	.flags = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init = ste10Xp_config_init,
  	.ack_interrupt = ste10Xp_ack_interrupt,
  	.config_intr = ste10Xp_config_intr,
@@@ -92,8 -91,7 +96,12 @@@
  	.phy_id = STE100P_PHY_ID,
  	.phy_id_mask = 0xffffffff,
  	.name = "STe100p",
++<<<<<<< HEAD
 +	.features = PHY_BASIC_FEATURES,
 +	.flags = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_BASIC_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init = ste10Xp_config_init,
  	.ack_interrupt = ste10Xp_ack_interrupt,
  	.config_intr = ste10Xp_config_intr,
diff --cc drivers/net/phy/vitesse.c
index 225d27b2d1c2,48a881918885..000000000000
--- a/drivers/net/phy/vitesse.c
+++ b/drivers/net/phy/vitesse.c
@@@ -391,8 -389,7 +391,12 @@@ static struct phy_driver vsc82xx_driver
  	.phy_id         = PHY_ID_VSC8234,
  	.name           = "Vitesse VSC8234",
  	.phy_id_mask    = 0x000ffff0,
++<<<<<<< HEAD
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init    = &vsc824x_config_init,
  	.config_aneg    = &vsc82x4_config_aneg,
  	.ack_interrupt  = &vsc824x_ack_interrupt,
@@@ -401,8 -398,7 +405,12 @@@
  	.phy_id		= PHY_ID_VSC8244,
  	.name		= "Vitesse VSC8244",
  	.phy_id_mask	= 0x000fffc0,
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= &vsc824x_config_init,
  	.config_aneg	= &vsc82x4_config_aneg,
  	.ack_interrupt	= &vsc824x_ack_interrupt,
@@@ -421,18 -416,7 +429,22 @@@
  	.phy_id         = PHY_ID_VSC8572,
  	.name           = "Vitesse VSC8572",
  	.phy_id_mask    = 0x000ffff0,
++<<<<<<< HEAD
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
 +	.config_init    = &vsc824x_config_init,
 +	.config_aneg    = &vsc82x4_config_aneg,
 +	.ack_interrupt  = &vsc824x_ack_interrupt,
 +	.config_intr    = &vsc82xx_config_intr,
 +}, {
 +	.phy_id         = PHY_ID_VSC8574,
 +	.name           = "Vitesse VSC8574",
 +	.phy_id_mask    = 0x000ffff0,
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init    = &vsc824x_config_init,
  	.config_aneg    = &vsc82x4_config_aneg,
  	.ack_interrupt  = &vsc824x_ack_interrupt,
@@@ -441,8 -425,7 +453,12 @@@
  	.phy_id         = PHY_ID_VSC8601,
  	.name           = "Vitesse VSC8601",
  	.phy_id_mask    = 0x000ffff0,
++<<<<<<< HEAD
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init    = &vsc8601_config_init,
  	.ack_interrupt  = &vsc824x_ack_interrupt,
  	.config_intr    = &vsc82xx_config_intr,
@@@ -486,8 -469,7 +502,12 @@@
  	.phy_id         = PHY_ID_VSC8662,
  	.name           = "Vitesse VSC8662",
  	.phy_id_mask    = 0x000ffff0,
++<<<<<<< HEAD
 +	.features       = PHY_GBIT_FEATURES,
 +	.flags          = PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init    = &vsc824x_config_init,
  	.config_aneg    = &vsc82x4_config_aneg,
  	.ack_interrupt  = &vsc824x_ack_interrupt,
@@@ -497,8 -479,7 +517,12 @@@
  	.phy_id		= PHY_ID_VSC8221,
  	.phy_id_mask	= 0x000ffff0,
  	.name		= "Vitesse VSC8221",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= &vsc8221_config_init,
  	.ack_interrupt	= &vsc824x_ack_interrupt,
  	.config_intr	= &vsc82xx_config_intr,
@@@ -507,8 -488,7 +531,12 @@@
  	.phy_id		= PHY_ID_VSC8211,
  	.phy_id_mask	= 0x000ffff0,
  	.name		= "Vitesse VSC8211",
++<<<<<<< HEAD
 +	.features	= PHY_GBIT_FEATURES,
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	/* PHY_GBIT_FEATURES */
++>>>>>>> dcdecdcfe1fc (net: phy: switch drivers to use dynamic feature detection)
  	.config_init	= &vsc8221_config_init,
  	.ack_interrupt	= &vsc824x_ack_interrupt,
  	.config_intr	= &vsc82xx_config_intr,
* Unmerged path drivers/net/phy/amd.c
diff --git a/drivers/net/phy/asix.c b/drivers/net/phy/asix.c
index f14ba5366b91..79bf7ef1fcfd 100644
--- a/drivers/net/phy/asix.c
+++ b/drivers/net/phy/asix.c
@@ -43,7 +43,7 @@ static struct phy_driver asix_driver[] = { {
 	.phy_id		= PHY_ID_ASIX_AX88796B,
 	.name		= "Asix Electronics AX88796B",
 	.phy_id_mask	= 0xfffffff0,
-	.features	= PHY_BASIC_FEATURES,
+	/* PHY_BASIC_FEATURES */
 	.soft_reset	= asix_soft_reset,
 } };
 
* Unmerged path drivers/net/phy/at803x.c
diff --git a/drivers/net/phy/bcm-cygnus.c b/drivers/net/phy/bcm-cygnus.c
index 625b7cb76285..9ccf28b0a04d 100644
--- a/drivers/net/phy/bcm-cygnus.c
+++ b/drivers/net/phy/bcm-cygnus.c
@@ -254,7 +254,7 @@ static struct phy_driver bcm_cygnus_phy_driver[] = {
 	.phy_id        = PHY_ID_BCM_CYGNUS,
 	.phy_id_mask   = 0xfffffff0,
 	.name          = "Broadcom Cygnus PHY",
-	.features      = PHY_GBIT_FEATURES,
+	/* PHY_GBIT_FEATURES */
 	.config_init   = bcm_cygnus_config_init,
 	.ack_interrupt = bcm_phy_ack_intr,
 	.config_intr   = bcm_phy_config_intr,
@@ -264,7 +264,7 @@ static struct phy_driver bcm_cygnus_phy_driver[] = {
 	.phy_id		= PHY_ID_BCM_OMEGA,
 	.phy_id_mask	= 0xfffffff0,
 	.name		= "Broadcom Omega Combo GPHY",
-	.features	= PHY_GBIT_FEATURES,
+	/* PHY_GBIT_FEATURES */
 	.flags		= PHY_IS_INTERNAL,
 	.config_init	= bcm_omega_config_init,
 	.suspend	= genphy_suspend,
* Unmerged path drivers/net/phy/bcm63xx.c
diff --git a/drivers/net/phy/bcm7xxx.c b/drivers/net/phy/bcm7xxx.c
index a75e1b283541..8fc33867e524 100644
--- a/drivers/net/phy/bcm7xxx.c
+++ b/drivers/net/phy/bcm7xxx.c
@@ -538,7 +538,7 @@ static int bcm7xxx_28nm_probe(struct phy_device *phydev)
 	.phy_id		= (_oui),					\
 	.phy_id_mask	= 0xfffffff0,					\
 	.name		= _name,					\
-	.features	= PHY_GBIT_FEATURES,				\
+	/* PHY_GBIT_FEATURES */						\
 	.flags		= PHY_IS_INTERNAL,				\
 	.config_init	= bcm7xxx_28nm_config_init,			\
 	.resume		= bcm7xxx_28nm_resume,				\
@@ -555,7 +555,7 @@ static int bcm7xxx_28nm_probe(struct phy_device *phydev)
 	.phy_id		= (_oui),					\
 	.phy_id_mask	= 0xfffffff0,					\
 	.name		= _name,					\
-	.features	= PHY_BASIC_FEATURES,				\
+	/* PHY_BASIC_FEATURES */					\
 	.flags		= PHY_IS_INTERNAL,				\
 	.config_init	= bcm7xxx_28nm_ephy_config_init,		\
 	.resume		= bcm7xxx_28nm_ephy_resume,			\
@@ -570,7 +570,7 @@ static int bcm7xxx_28nm_probe(struct phy_device *phydev)
 	.phy_id         = (_oui),					\
 	.phy_id_mask    = 0xfffffff0,					\
 	.name           = _name,					\
-	.features       = PHY_BASIC_FEATURES,				\
+	/* PHY_BASIC_FEATURES */					\
 	.flags          = PHY_IS_INTERNAL,				\
 	.config_init    = bcm7xxx_config_init,				\
 	.suspend        = bcm7xxx_suspend,				\
* Unmerged path drivers/net/phy/broadcom.c
* Unmerged path drivers/net/phy/cicada.c
* Unmerged path drivers/net/phy/davicom.c
* Unmerged path drivers/net/phy/dp83640.c
* Unmerged path drivers/net/phy/dp83822.c
* Unmerged path drivers/net/phy/dp83848.c
* Unmerged path drivers/net/phy/dp83867.c
* Unmerged path drivers/net/phy/dp83tc811.c
diff --git a/drivers/net/phy/et1011c.c b/drivers/net/phy/et1011c.c
index 2aa367c04a8e..09e07b902d3a 100644
--- a/drivers/net/phy/et1011c.c
+++ b/drivers/net/phy/et1011c.c
@@ -86,7 +86,7 @@ static struct phy_driver et1011c_driver[] = { {
 	.phy_id		= 0x0282f014,
 	.name		= "ET1011C",
 	.phy_id_mask	= 0xfffffff0,
-	.features	= PHY_GBIT_FEATURES,
+	/* PHY_GBIT_FEATURES */
 	.config_aneg	= et1011c_config_aneg,
 	.read_status	= et1011c_read_status,
 } };
* Unmerged path drivers/net/phy/icplus.c
* Unmerged path drivers/net/phy/intel-xway.c
* Unmerged path drivers/net/phy/lxt.c
* Unmerged path drivers/net/phy/marvell.c
* Unmerged path drivers/net/phy/meson-gxl.c
* Unmerged path drivers/net/phy/micrel.c
* Unmerged path drivers/net/phy/microchip.c
* Unmerged path drivers/net/phy/mscc.c
* Unmerged path drivers/net/phy/national.c
* Unmerged path drivers/net/phy/qsemi.c
diff --git a/drivers/net/phy/rockchip.c b/drivers/net/phy/rockchip.c
index 9053b1d01906..52f1f65320fe 100644
--- a/drivers/net/phy/rockchip.c
+++ b/drivers/net/phy/rockchip.c
@@ -175,7 +175,7 @@ static struct phy_driver rockchip_phy_driver[] = {
 	.phy_id			= INTERNAL_EPHY_ID,
 	.phy_id_mask		= 0xfffffff0,
 	.name			= "Rockchip integrated EPHY",
-	.features		= PHY_BASIC_FEATURES,
+	/* PHY_BASIC_FEATURES */
 	.flags			= 0,
 	.link_change_notify	= rockchip_link_change_notify,
 	.soft_reset		= genphy_soft_reset,
* Unmerged path drivers/net/phy/smsc.c
* Unmerged path drivers/net/phy/ste10Xp.c
diff --git a/drivers/net/phy/uPD60620.c b/drivers/net/phy/uPD60620.c
index 219fc7cdc2b3..a32b3fd8a370 100644
--- a/drivers/net/phy/uPD60620.c
+++ b/drivers/net/phy/uPD60620.c
@@ -87,7 +87,7 @@ static struct phy_driver upd60620_driver[1] = { {
 	.phy_id         = UPD60620_PHY_ID,
 	.phy_id_mask    = 0xfffffffe,
 	.name           = "Renesas uPD60620",
-	.features       = PHY_BASIC_FEATURES,
+	/* PHY_BASIC_FEATURES */
 	.flags          = 0,
 	.config_init    = upd60620_config_init,
 	.read_status    = upd60620_read_status,
* Unmerged path drivers/net/phy/vitesse.c
