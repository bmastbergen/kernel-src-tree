RDMA/core: Make ib_destroy_cq() void

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit 890ac8d97e6722a9e4a66a0bd836d1b028d075fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/890ac8d9.failed

Kernel destroy CQ flows can't fail and the returned value of
ib_destroy_cq() is not interested in those flows.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 890ac8d97e6722a9e4a66a0bd836d1b028d075fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/rdma/ib_verbs.h
diff --cc include/rdma/ib_verbs.h
index 714b9b5e3733,ec6446864b08..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -3548,10 -3846,22 +3548,25 @@@ int ib_resize_cq(struct ib_cq *cq, int 
  int rdma_set_cq_moderation(struct ib_cq *cq, u16 cq_count, u16 cq_period);
  
  /**
 - * ib_destroy_cq_user - Destroys the specified CQ.
 + * ib_destroy_cq - Destroys the specified CQ.
   * @cq: The CQ to destroy.
 - * @udata: Valid user data or NULL for kernel objects
   */
++<<<<<<< HEAD
 +int ib_destroy_cq(struct ib_cq *cq);
++=======
+ int ib_destroy_cq_user(struct ib_cq *cq, struct ib_udata *udata);
+ 
+ /**
+  * ib_destroy_cq - Destroys the specified kernel CQ.
+  * @cq: The CQ to destroy.
+  *
+  * NOTE: for user cq use ib_destroy_cq_user with valid udata!
+  */
+ static inline void ib_destroy_cq(struct ib_cq *cq)
+ {
+ 	ib_destroy_cq_user(cq, NULL);
+ }
++>>>>>>> 890ac8d97e67 (RDMA/core: Make ib_destroy_cq() void)
  
  /**
   * ib_poll_cq - poll a CQ for completion(s)
* Unmerged path include/rdma/ib_verbs.h
