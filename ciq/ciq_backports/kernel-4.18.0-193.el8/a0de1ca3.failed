mac80211: allow turning TWT responder support on and off via netlink

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author John Crispin <john@phrozen.org>
commit a0de1ca383c77a1ae123d7c0cea45e327b61876a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a0de1ca3.failed

Allow the userland daemon to en/disable TWT support for an AP.

	Signed-off-by: Shashidhar Lakkavalli <slakkavalli@datto.com>
	Signed-off-by: John Crispin <john@phrozen.org>
[simplify parsing code]
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit a0de1ca383c77a1ae123d7c0cea45e327b61876a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/nl80211.h
#	net/wireless/nl80211.c
diff --cc include/uapi/linux/nl80211.h
index 4f370da7d4b6,8fc3a43cac75..000000000000
--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@@ -2341,6 -2350,12 +2341,15 @@@ enum nl80211_commands 
   *	should be picking up the lowest tx power, either tx power per-interface
   *	or per-station.
   *
++<<<<<<< HEAD
++=======
+  * @NL80211_ATTR_SAE_PASSWORD: attribute for passing SAE password material. It
+  *	is used with %NL80211_CMD_CONNECT to provide password for offloading
+  *	SAE authentication for WPA3-Personal networks.
+  *
+  * @NL80211_ATTR_TWT_RESPONDER: Enable target wait time responder support.
+  *
++>>>>>>> a0de1ca383c7 (mac80211: allow turning TWT responder support on and off via netlink)
   * @NUM_NL80211_ATTR: total number of nl80211_attrs available
   * @NL80211_ATTR_MAX: highest attribute number currently defined
   * @__NL80211_ATTR_AFTER_LAST: internal use
@@@ -2794,6 -2809,10 +2803,13 @@@ enum nl80211_attrs 
  	NL80211_ATTR_STA_TX_POWER_SETTING,
  	NL80211_ATTR_STA_TX_POWER,
  
++<<<<<<< HEAD
++=======
+ 	NL80211_ATTR_SAE_PASSWORD,
+ 
+ 	NL80211_ATTR_TWT_RESPONDER,
+ 
++>>>>>>> a0de1ca383c7 (mac80211: allow turning TWT responder support on and off via netlink)
  	/* add attributes here, update the policy in nl80211.c */
  
  	__NL80211_ATTR_AFTER_LAST,
diff --cc net/wireless/nl80211.c
index 51e64e56c83a,68e5ab5394dd..000000000000
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@@ -510,7 -571,9 +510,13 @@@ const struct nla_policy nl80211_policy[
  	[NL80211_ATTR_PEER_MEASUREMENTS] =
  		NLA_POLICY_NESTED(nl80211_pmsr_attr_policy),
  	[NL80211_ATTR_AIRTIME_WEIGHT] = NLA_POLICY_MIN(NLA_U16, 1),
++<<<<<<< HEAD
 +#endif /* Not in RHEL */
++=======
+ 	[NL80211_ATTR_SAE_PASSWORD] = { .type = NLA_BINARY,
+ 					.len = SAE_PASSWORD_MAX_LEN },
+ 	[NL80211_ATTR_TWT_RESPONDER] = { .type = NLA_FLAG },
++>>>>>>> a0de1ca383c7 (mac80211: allow turning TWT responder support on and off via netlink)
  };
  
  /* policy for the key attributes */
diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 3bfe699199ad..6c89f1726bea 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -887,6 +887,7 @@ enum cfg80211_ap_settings_flags {
  * @he_cap: HE capabilities (or %NULL if HE isn't enabled)
  * @ht_required: stations must support HT
  * @vht_required: stations must support VHT
+ * @twt_responder: Enable Target Wait Time
  * @flags: flags, as defined in enum cfg80211_ap_settings_flags
  */
 struct cfg80211_ap_settings {
@@ -913,6 +914,7 @@ struct cfg80211_ap_settings {
 	const struct ieee80211_vht_cap *vht_cap;
 	const struct ieee80211_he_cap_elem *he_cap;
 	bool ht_required, vht_required;
+	bool twt_responder;
 	u32 flags;
 };
 
diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index d66e6a06ed70..481556423886 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -503,6 +503,8 @@ struct ieee80211_ftm_responder_params {
  * @he_support: does this BSS support HE
  * @twt_requester: does this BSS support TWT requester (relevant for managed
  *	mode only, set if the AP advertises TWT responder role)
+ * @twt_responder: does this BSS support TWT requester (relevant for managed
+ *	mode only, set if the AP advertises TWT responder role)
  * @assoc: association status
  * @ibss_joined: indicates whether this station is part of an IBSS
  *	or not
@@ -610,6 +612,7 @@ struct ieee80211_bss_conf {
 	u16 frame_time_rts_th;
 	bool he_support;
 	bool twt_requester;
+	bool twt_responder;
 	/* association related data */
 	bool assoc, ibss_joined;
 	bool ibss_creator;
* Unmerged path include/uapi/linux/nl80211.h
diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index 5369a4a03940..8cc7c63c9b58 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -980,7 +980,8 @@ static int ieee80211_start_ap(struct wiphy *wiphy, struct net_device *dev,
 		      BSS_CHANGED_BEACON |
 		      BSS_CHANGED_SSID |
 		      BSS_CHANGED_P2P_PS |
-		      BSS_CHANGED_TXPOWER;
+		      BSS_CHANGED_TXPOWER |
+		      BSS_CHANGED_TWT;
 	int err;
 	int prev_beacon_int;
 
@@ -1050,6 +1051,7 @@ static int ieee80211_start_ap(struct wiphy *wiphy, struct net_device *dev,
 	sdata->vif.bss_conf.dtim_period = params->dtim_period;
 	sdata->vif.bss_conf.enable_beacon = true;
 	sdata->vif.bss_conf.allow_p2p_go_ps = sdata->vif.p2p;
+	sdata->vif.bss_conf.twt_responder = params->twt_responder;
 
 	sdata->vif.bss_conf.ssid_len = params->ssid_len;
 	if (params->ssid_len)
* Unmerged path net/wireless/nl80211.c
