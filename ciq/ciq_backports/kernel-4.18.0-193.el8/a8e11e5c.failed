sysctl: define proc_do_static_key()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Eric Dumazet <edumazet@google.com>
commit a8e11e5c5611a9f70470aebeb2c1dd6132f609d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a8e11e5c.failed

Convert proc_dointvec_minmax_bpf_stats() into a more generic
helper, since we are going to use jump labels more often.

Note that sysctl_bpf_stats_enabled is removed, since
it is no longer needed/used.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a8e11e5c5611a9f70470aebeb2c1dd6132f609d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/core.c
#	kernel/sysctl.c
diff --cc kernel/bpf/core.c
index d3b800409cbe,080e2bb644cc..000000000000
--- a/kernel/bpf/core.c
+++ b/kernel/bpf/core.c
@@@ -2071,6 -2095,9 +2071,12 @@@ int __weak skb_copy_bits(const struct s
  	return -EFAULT;
  }
  
++<<<<<<< HEAD
++=======
+ DEFINE_STATIC_KEY_FALSE(bpf_stats_enabled_key);
+ EXPORT_SYMBOL(bpf_stats_enabled_key);
+ 
++>>>>>>> a8e11e5c5611 (sysctl: define proc_do_static_key())
  /* All definitions of tracepoints related to BPF. */
  #define CREATE_TRACE_POINTS
  #include <linux/bpf_trace.h>
diff --cc kernel/sysctl.c
index 04c2181c0df5,1beca96fb625..000000000000
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@@ -1221,6 -1246,13 +1221,16 @@@ static struct ctl_table kern_table[] = 
  		.extra1		= &one,
  		.extra2		= &one,
  	},
++<<<<<<< HEAD
++=======
+ 	{
+ 		.procname	= "bpf_stats_enabled",
+ 		.data		= &bpf_stats_enabled_key.key,
+ 		.maxlen		= sizeof(bpf_stats_enabled_key),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_do_static_key,
+ 	},
++>>>>>>> a8e11e5c5611 (sysctl: define proc_do_static_key())
  #endif
  #if defined(CONFIG_TREE_RCU) || defined(CONFIG_PREEMPT_RCU)
  	{
@@@ -3281,6 -3362,43 +3291,41 @@@ int proc_doulongvec_ms_jiffies_minmax(s
  
  #endif /* CONFIG_PROC_SYSCTL */
  
++<<<<<<< HEAD
++=======
+ #if defined(CONFIG_SYSCTL)
+ int proc_do_static_key(struct ctl_table *table, int write,
+ 		       void __user *buffer, size_t *lenp,
+ 		       loff_t *ppos)
+ {
+ 	struct static_key *key = (struct static_key *)table->data;
+ 	static DEFINE_MUTEX(static_key_mutex);
+ 	int val, ret;
+ 	struct ctl_table tmp = {
+ 		.data   = &val,
+ 		.maxlen = sizeof(val),
+ 		.mode   = table->mode,
+ 		.extra1 = &zero,
+ 		.extra2 = &one,
+ 	};
+ 
+ 	if (write && !capable(CAP_SYS_ADMIN))
+ 		return -EPERM;
+ 
+ 	mutex_lock(&static_key_mutex);
+ 	val = static_key_enabled(key);
+ 	ret = proc_dointvec_minmax(&tmp, write, buffer, lenp, ppos);
+ 	if (write && !ret) {
+ 		if (val)
+ 			static_key_enable(key);
+ 		else
+ 			static_key_disable(key);
+ 	}
+ 	mutex_unlock(&static_key_mutex);
+ 	return ret;
+ }
+ #endif
++>>>>>>> a8e11e5c5611 (sysctl: define proc_do_static_key())
  /*
   * No sense putting this after each symbol definition, twice,
   * exception granted :-)
diff --git a/include/linux/sysctl.h b/include/linux/sysctl.h
index b769ecfcc3bd..aadd310769d0 100644
--- a/include/linux/sysctl.h
+++ b/include/linux/sysctl.h
@@ -63,6 +63,9 @@ extern int proc_doulongvec_ms_jiffies_minmax(struct ctl_table *table, int,
 				      void __user *, size_t *, loff_t *);
 extern int proc_do_large_bitmap(struct ctl_table *, int,
 				void __user *, size_t *, loff_t *);
+extern int proc_do_static_key(struct ctl_table *table, int write,
+			      void __user *buffer, size_t *lenp,
+			      loff_t *ppos);
 
 /*
  * Register a set of sysctl names by calling register_sysctl_table
* Unmerged path kernel/bpf/core.c
* Unmerged path kernel/sysctl.c
