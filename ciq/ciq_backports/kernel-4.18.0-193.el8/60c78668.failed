RDMA/restrack: Rewrite PID namespace check to be reliable

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit 60c78668ae50d6b815ead4a62216822a92097125
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/60c78668.failed

task_active_pid_ns() is wrong API to check PID namespace because it
posses some restrictions and return PID namespace where the process
was allocated. It created mismatches with current namespace, which
can be different.

Rewrite whole rdma_is_visible_in_pid_ns() logic to provide reliable
results without any relation to allocated PID namespace.

Fixes: 8be565e65fa9 ("RDMA/nldev: Factor out the PID namespace check")
Fixes: 6a6c306a09b5 ("RDMA/restrack: Make is_visible_in_pid_ns() as an API")
	Reviewed-by: Mark Zhang <markz@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
Link: https://lore.kernel.org/r/20190815083834.9245-4-leon@kernel.org
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 60c78668ae50d6b815ead4a62216822a92097125)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/restrack.c
diff --cc drivers/infiniband/core/restrack.c
index bfd36820ee66,a07665f7ef8c..000000000000
--- a/drivers/infiniband/core/restrack.c
+++ b/drivers/infiniband/core/restrack.c
@@@ -86,23 -107,21 +86,29 @@@ void rdma_restrack_clean(struct ib_devi
   * rdma_restrack_count() - the current usage of specific object
   * @dev:  IB device
   * @type: actual type of object to operate
-  * @ns:   PID namespace
   */
- int rdma_restrack_count(struct ib_device *dev, enum rdma_restrack_type type,
- 			struct pid_namespace *ns)
+ int rdma_restrack_count(struct ib_device *dev, enum rdma_restrack_type type)
  {
 -	struct rdma_restrack_root *rt = &dev->res[type];
 +	struct rdma_restrack_root *res = &dev->res;
  	struct rdma_restrack_entry *e;
 -	XA_STATE(xas, &rt->xa, 0);
  	u32 cnt = 0;
  
++<<<<<<< HEAD
 +	down_read(&res->rwsem);
 +	hash_for_each_possible(res->hash, e, node, type) {
 +		if (ns == &init_pid_ns ||
 +		    (!rdma_is_kernel_res(e) &&
 +		     ns == task_active_pid_ns(e->task)))
 +			cnt++;
++=======
+ 	xa_lock(&rt->xa);
+ 	xas_for_each(&xas, e, U32_MAX) {
+ 		if (!rdma_is_visible_in_pid_ns(e))
+ 			continue;
+ 		cnt++;
++>>>>>>> 60c78668ae50 (RDMA/restrack: Rewrite PID namespace check to be reliable)
  	}
 -	xa_unlock(&rt->xa);
 +	up_read(&res->rwsem);
  	return cnt;
  }
  EXPORT_SYMBOL(rdma_restrack_count);
@@@ -289,3 -346,18 +295,21 @@@ out
  	}
  }
  EXPORT_SYMBOL(rdma_restrack_del);
++<<<<<<< HEAD
++=======
+ 
+ bool rdma_is_visible_in_pid_ns(struct rdma_restrack_entry *res)
+ {
+ 	/*
+ 	 * 1. Kern resources should be visible in init
+ 	 *    namespace only
+ 	 * 2. Present only resources visible in the current
+ 	 *     namespace
+ 	 */
+ 	if (rdma_is_kernel_res(res))
+ 		return task_active_pid_ns(current) == &init_pid_ns;
+ 
+ 	/* PID 0 means that resource is not found in current namespace */
+ 	return task_pid_vnr(res->task);
+ }
++>>>>>>> 60c78668ae50 (RDMA/restrack: Rewrite PID namespace check to be reliable)
diff --git a/drivers/infiniband/core/nldev.c b/drivers/infiniband/core/nldev.c
index efccd8e0fb77..80ab05b2a250 100644
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@ -327,8 +327,7 @@ static int fill_res_info(struct sk_buff *msg, struct ib_device *device)
 	for (i = 0; i < RDMA_RESTRACK_MAX; i++) {
 		if (!names[i])
 			continue;
-		curr = rdma_restrack_count(device, i,
-					   task_active_pid_ns(current));
+		curr = rdma_restrack_count(device, i);
 		ret = fill_res_info_entry(msg, names[i], curr);
 		if (ret)
 			goto err;
* Unmerged path drivers/infiniband/core/restrack.c
diff --git a/include/rdma/restrack.h b/include/rdma/restrack.h
index 7e9d9a881f70..84487b0cd351 100644
--- a/include/rdma/restrack.h
+++ b/include/rdma/restrack.h
@@ -126,8 +126,7 @@ struct rdma_restrack_entry {
 void rdma_restrack_init(struct ib_device *dev);
 void rdma_restrack_clean(struct ib_device *dev);
 int rdma_restrack_count(struct ib_device *dev,
-			enum rdma_restrack_type type,
-			struct pid_namespace *ns);
+			enum rdma_restrack_type type);
 
 void rdma_restrack_kadd(struct rdma_restrack_entry *res);
 void rdma_restrack_uadd(struct rdma_restrack_entry *res);
