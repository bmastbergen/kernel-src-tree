printk: Remove print_prefix() calls with NULL buffer.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
commit 07c17732bd687567802aaa5fa5c101c2776565d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/07c17732.failed

We can save lines/size by removing print_prefix() with buf == NULL.
This patch makes no functional change.

Link: http://lkml.kernel.org/r/1544521745-11925-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
To: Steven Rostedt <rostedt@goodmis.org>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Signed-off-by: Petr Mladek <pmladek@suse.com>
(cherry picked from commit 07c17732bd687567802aaa5fa5c101c2776565d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/printk/printk.c
diff --cc kernel/printk/printk.c
index 2c240612abfc,91db332ccf4d..000000000000
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@@ -1229,42 -1228,28 +1229,36 @@@ static inline void boot_delay_msec(int 
  static bool printk_time = IS_ENABLED(CONFIG_PRINTK_TIME);
  module_param_named(time, printk_time, bool, S_IRUGO | S_IWUSR);
  
+ static size_t print_syslog(unsigned int level, char *buf)
+ {
+ 	return sprintf(buf, "<%u>", level);
+ }
+ 
  static size_t print_time(u64 ts, char *buf)
  {
 -	unsigned long rem_nsec = do_div(ts, 1000000000);
 +	unsigned long rem_nsec;
 +
 +	if (!printk_time)
 +		return 0;
 +
 +	rem_nsec = do_div(ts, 1000000000);
  
- 	if (!buf)
- 		return snprintf(NULL, 0, "[%5lu.000000] ", (unsigned long)ts);
- 
  	return sprintf(buf, "[%5lu.%06lu] ",
  		       (unsigned long)ts, rem_nsec / 1000);
  }
  
 -static size_t print_prefix(const struct printk_log *msg, bool syslog,
 -			   bool time, char *buf)
 +static size_t print_prefix(const struct printk_log *msg, bool syslog, char *buf)
  {
  	size_t len = 0;
- 	unsigned int prefix = (msg->facility << 3) | msg->level;
- 
- 	if (syslog) {
- 		if (buf) {
- 			len += sprintf(buf, "<%u>", prefix);
- 		} else {
- 			len += 3;
- 			if (prefix > 999)
- 				len += 3;
- 			else if (prefix > 99)
- 				len += 2;
- 			else if (prefix > 9)
- 				len++;
- 		}
- 	}
  
++<<<<<<< HEAD
 +	len += print_time(msg->ts_nsec, buf ? buf + len : NULL);
++=======
+ 	if (syslog)
+ 		len = print_syslog((msg->facility << 3) | msg->level, buf);
+ 	if (time)
+ 		len += print_time(msg->ts_nsec, buf + len);
++>>>>>>> 07c17732bd68 (printk: Remove print_prefix() calls with NULL buffer.)
  	return len;
  }
  
@@@ -1287,19 -1275,17 +1283,31 @@@ static size_t msg_print_text(const stru
  		}
  
  		if (buf) {
++<<<<<<< HEAD
 +			if (print_prefix(msg, syslog, NULL) +
 +			    text_len + 1 >= size - len)
 +				break;
 +
 +			len += print_prefix(msg, syslog, buf + len);
++=======
+ 			if (prefix_len + text_len + 1 >= size - len)
+ 				break;
+ 
+ 			memcpy(buf + len, prefix, prefix_len);
+ 			len += prefix_len;
++>>>>>>> 07c17732bd68 (printk: Remove print_prefix() calls with NULL buffer.)
  			memcpy(buf + len, text, text_len);
  			len += text_len;
  			buf[len++] = '\n';
  		} else {
  			/* SYSLOG_ACTION_* buffer size only calculation */
++<<<<<<< HEAD
 +			len += print_prefix(msg, syslog, NULL);
 +			len += text_len;
 +			len++;
++=======
+ 			len += prefix_len + text_len + 1;
++>>>>>>> 07c17732bd68 (printk: Remove print_prefix() calls with NULL buffer.)
  		}
  
  		text = next;
* Unmerged path kernel/printk/printk.c
