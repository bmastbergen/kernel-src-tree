drm/nouveau/kms/gv100-: Re-set LUT after clearing for modesets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lyude Paul <lyude@redhat.com>
commit f287d3d19769b1d22cba4e51fa0487f2697713c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/f287d3d1.failed

While certain modeset operations on gv100+ need us to temporarily
disable the LUT, we make the mistake of sometimes neglecting to
reprogram the LUT after such modesets. In particular, moving a head from
one encoder to another seems to trigger this quite often. GV100+ is very
picky about having a LUT in most scenarios, so this causes the display
engine to hang with the following error code:

disp: chid 1 stat 00005080 reason 5 [INVALID_STATE] mthd 0200 data
00000001 code 0000002d)

So, fix this by always re-programming the LUT if we're clearing it in a
state where the wndw is still visible, and has a XLUT handle programmed.

	Signed-off-by: Lyude Paul <lyude@redhat.com>
Fixes: facaed62b4cb ("drm/nouveau/kms/gv100: initial support")
	Cc: <stable@vger.kernel.org> # v4.18+
	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit f287d3d19769b1d22cba4e51fa0487f2697713c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/dispnv50/wndw.c
diff --cc drivers/gpu/drm/nouveau/dispnv50/wndw.c
index 50303ec194bb,bb737f9281e6..000000000000
--- a/drivers/gpu/drm/nouveau/dispnv50/wndw.c
+++ b/drivers/gpu/drm/nouveau/dispnv50/wndw.c
@@@ -410,6 -458,9 +410,12 @@@ nv50_wndw_atomic_check(struct drm_plan
  		asyw->clr.ntfy = armw->ntfy.handle != 0;
  		asyw->clr.sema = armw->sema.handle != 0;
  		asyw->clr.xlut = armw->xlut.handle != 0;
++<<<<<<< HEAD
++=======
+ 		if (asyw->clr.xlut && asyw->visible)
+ 			asyw->set.xlut = asyw->xlut.handle != 0;
+ 		asyw->clr.csc  = armw->csc.valid;
++>>>>>>> f287d3d19769 (drm/nouveau/kms/gv100-: Re-set LUT after clearing for modesets)
  		if (wndw->func->image_clr)
  			asyw->clr.image = armw->image.handle[0] != 0;
  	}
* Unmerged path drivers/gpu/drm/nouveau/dispnv50/wndw.c
