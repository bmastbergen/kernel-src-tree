printk: fix printk_time race.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
commit e80c1a9d5f514ce5134c6c4263a11607341466c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e80c1a9d.failed

Since printk_time can be toggled via /sys/module/printk/parameters/time ,
it is not safe to assume that output length does not change across
multiple msg_print_text() calls. If we hit this race, we can observe
failures such as SYSLOG_ACTION_READ_ALL writes more bytes than userspace
has supplied, SYSLOG_ACTION_SIZE_UNREAD returns -EFAULT when succeeded,
SYSLOG_ACTION_READ reads garbage memory or even triggers an kernel oops
at _copy_to_user() due to integer overflow.

To close this race, get a snapshot value of printk_time and pass it to
SYSLOG_ACTION_READ, SYSLOG_ACTION_READ_ALL, SYSLOG_ACTION_SIZE_UNREAD and
kmsg_dump_get_buffer().

Link: http://lkml.kernel.org/r/555af37c-b9e0-f940-cb73-a78eba2d4944@i-love.sakura.ne.jp
To: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Signed-off-by: Petr Mladek <pmladek@suse.com>
(cherry picked from commit e80c1a9d5f514ce5134c6c4263a11607341466c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/printk/printk.c
diff --cc kernel/printk/printk.c
index 2c240612abfc,c7d217764db3..000000000000
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@@ -2019,8 -2035,9 +2027,14 @@@ static void console_lock_spinning_enabl
  static int console_lock_spinning_disable_and_check(void) { return 0; }
  static void call_console_drivers(const char *ext_text, size_t ext_len,
  				 const char *text, size_t len) {}
++<<<<<<< HEAD
 +static size_t msg_print_text(const struct printk_log *msg,
 +			     bool syslog, char *buf, size_t size) { return 0; }
++=======
+ static size_t msg_print_text(const struct printk_log *msg, bool syslog,
+ 			     bool time, char *buf, size_t size) { return 0; }
+ static bool suppress_message_printing(int level) { return false; }
++>>>>>>> e80c1a9d5f51 (printk: fix printk_time race.)
  
  #endif /* CONFIG_PRINTK */
  
* Unmerged path kernel/printk/printk.c
