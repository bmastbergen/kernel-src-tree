x86/fpu: Make __raw_xsave_addr() use a feature number instead of mask

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Sebastian Andrzej Siewior <bigeasy@linutronix.de>
commit 07baeb04f37c952981d63359ff840118ce8f5434
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/07baeb04.failed

Most users of __raw_xsave_addr() use a feature number, shift it to a
mask and then __raw_xsave_addr() shifts it back to the feature number.

Make __raw_xsave_addr() use the feature number as an argument.

	Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Dave Hansen <dave.hansen@intel.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: "Jason A. Donenfeld" <Jason@zx2c4.com>
	Cc: kvm ML <kvm@vger.kernel.org>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Cc: Rik van Riel <riel@surriel.com>
	Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Cc: x86-ml <x86@kernel.org>
Link: https://lkml.kernel.org/r/20190403164156.19645-11-bigeasy@linutronix.de
(cherry picked from commit 07baeb04f37c952981d63359ff840118ce8f5434)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/xstate.c
diff --cc arch/x86/kernel/fpu/xstate.c
index 87a57b7642d3,4f7f3c5d0d0c..000000000000
--- a/arch/x86/kernel/fpu/xstate.c
+++ b/arch/x86/kernel/fpu/xstate.c
@@@ -805,17 -805,13 +805,19 @@@ void fpu__resume_cpu(void
  }
  
  /*
-  * Given an xstate feature mask, calculate where in the xsave
+  * Given an xstate feature nr, calculate where in the xsave
   * buffer the state is.  Callers should ensure that the buffer
   * is valid.
 + *
 + * Note: does not work for compacted buffers.
   */
++<<<<<<< HEAD
 +void *__raw_xsave_addr(struct xregs_state *xsave, int xstate_feature_mask)
++=======
+ static void *__raw_xsave_addr(struct xregs_state *xsave, int xfeature_nr)
++>>>>>>> 07baeb04f37c (x86/fpu: Make __raw_xsave_addr() use a feature number instead of mask)
  {
- 	int feature_nr = fls64(xstate_feature_mask) - 1;
- 
- 	if (!xfeature_enabled(feature_nr)) {
+ 	if (!xfeature_enabled(xfeature_nr)) {
  		WARN_ON_FPU(1);
  		return NULL;
  	}
* Unmerged path arch/x86/kernel/fpu/xstate.c
