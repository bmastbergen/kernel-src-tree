drm/sched: Set error to s_fence if HW job submission failed.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [gpu] drm/sched: Set error to s_fence if HW job submission failed (Lyude Paul) [1771779]
Rebuild_FUZZ: 99.16%
commit-author Andrey Grodzovsky <andrey.grodzovsky@amd.com>
commit e91e5f080e03e0c28742f0aa4051c7cefafd7cdd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e91e5f08.failed

Problem:
When run_job fails and HW fence returned is NULL we still signal
the s_fence to avoid hangs but the user has no way of knowing if
the actual HW job was ran and finished.

Fix:
Allow .run_job implementations to return ERR_PTR in the fence pointer
returned and then set this error for s_fence->finished fence so whoever
wait on this fence can inspect the signaled fence for an error.

	Signed-off-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
	Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit e91e5f080e03e0c28742f0aa4051c7cefafd7cdd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/scheduler/sched_main.c
diff --cc drivers/gpu/drm/scheduler/sched_main.c
index a1bec2779e76,f39b97ed4ade..000000000000
--- a/drivers/gpu/drm/scheduler/sched_main.c
+++ b/drivers/gpu/drm/scheduler/sched_main.c
@@@ -462,8 -479,8 +462,9 @@@ void drm_sched_resubmit_jobs(struct drm
  	struct drm_sched_job *s_job, *tmp;
  	uint64_t guilty_context;
  	bool found_guilty = false;
+ 	struct dma_fence *fence;
  
 +	/*TODO DO we need spinlock here ? */
  	list_for_each_entry_safe(s_job, tmp, &sched->ring_mirror_list, node) {
  		struct drm_sched_fence *s_fence = s_job->s_fence;
  
@@@ -475,8 -492,17 +476,22 @@@
  		if (found_guilty && s_job->s_fence->scheduled.context == guilty_context)
  			dma_fence_set_error(&s_fence->finished, -ECANCELED);
  
++<<<<<<< HEAD
 +		s_job->s_fence->parent = sched->ops->run_job(s_job);
 +		atomic_inc(&sched->hw_rq_count);
++=======
+ 		dma_fence_put(s_job->s_fence->parent);
+ 		fence = sched->ops->run_job(s_job);
+ 
+ 		if (IS_ERR_OR_NULL(fence)) {
+ 			s_job->s_fence->parent = NULL;
+ 			dma_fence_set_error(&s_fence->finished, PTR_ERR(fence));
+ 		} else {
+ 			s_job->s_fence->parent = fence;
+ 		}
+ 
+ 
++>>>>>>> e91e5f080e03 (drm/sched: Set error to s_fence if HW job submission failed.)
  	}
  }
  EXPORT_SYMBOL(drm_sched_resubmit_jobs);
* Unmerged path drivers/gpu/drm/scheduler/sched_main.c
