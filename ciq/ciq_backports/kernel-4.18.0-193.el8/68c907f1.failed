ASoC: codec2codec: run callbacks in order

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: codec2codec: run callbacks in order (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 93.18%
commit-author Jerome Brunet <jbrunet@baylibre.com>
commit 68c907f10cd816cad2287167a1a1d77914a6d466
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/68c907f1.failed

When handling dai_link events on codec to codec links, run all .startup()
callbacks on sinks and sources before running any .hw_params(). Same goes
for hw_free() and shutdown(). This is closer to the behavior of regular
dai links

	Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
Link: https://lore.kernel.org/r/20190725165949.29699-2-jbrunet@baylibre.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 68c907f10cd816cad2287167a1a1d77914a6d466)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-dapm.c
diff --cc sound/soc/soc-dapm.c
index 14f564217aef,034b31fd2ecb..000000000000
--- a/sound/soc/soc-dapm.c
+++ b/sound/soc/soc-dapm.c
@@@ -3850,40 -3828,44 +3850,64 @@@ static int snd_soc_dai_link_event(struc
  		snd_soc_dapm_widget_for_each_source_path(w, path) {
  			source = path->source->priv;
  
 -			ret = snd_soc_dai_startup(source, &substream);
 -			if (ret < 0) {
 -				dev_err(source->dev,
 -					"ASoC: startup() failed: %d\n", ret);
 -				goto out;
 +			if (source->driver->ops->startup) {
 +				ret = source->driver->ops->startup(&substream,
 +								   source);
 +				if (ret < 0) {
 +					dev_err(source->dev,
 +						"ASoC: startup() failed: %d\n",
 +						ret);
 +					goto out;
 +				}
  			}
  			source->active++;
++<<<<<<< HEAD
 +			ret = soc_dai_hw_params(&substream, params, source);
 +			if (ret < 0)
 +				goto out;
 +
 +			dapm_update_dai_unlocked(&substream, params, source);
++=======
++>>>>>>> 68c907f10cd8 (ASoC: codec2codec: run callbacks in order)
  		}
  
  		substream.stream = SNDRV_PCM_STREAM_PLAYBACK;
  		snd_soc_dapm_widget_for_each_sink_path(w, path) {
  			sink = path->sink->priv;
  
 -			ret = snd_soc_dai_startup(sink, &substream);
 -			if (ret < 0) {
 -				dev_err(sink->dev,
 -					"ASoC: startup() failed: %d\n", ret);
 -				goto out;
 +			if (sink->driver->ops->startup) {
 +				ret = sink->driver->ops->startup(&substream,
 +								 sink);
 +				if (ret < 0) {
 +					dev_err(sink->dev,
 +						"ASoC: startup() failed: %d\n",
 +						ret);
 +					goto out;
 +				}
  			}
  			sink->active++;
++<<<<<<< HEAD
 +			ret = soc_dai_hw_params(&substream, params, sink);
++=======
+ 		}
+ 
+ 		substream.stream = SNDRV_PCM_STREAM_CAPTURE;
+ 		snd_soc_dapm_widget_for_each_source_path(w, path) {
+ 			source = path->source->priv;
+ 
+ 			ret = snd_soc_dai_hw_params(source, &substream, params);
+ 			if (ret < 0)
+ 				goto out;
+ 
+ 			dapm_update_dai_unlocked(&substream, params, source);
+ 		}
+ 
+ 		substream.stream = SNDRV_PCM_STREAM_PLAYBACK;
+ 		snd_soc_dapm_widget_for_each_sink_path(w, path) {
+ 			sink = path->sink->priv;
+ 
+ 			ret = snd_soc_dai_hw_params(sink, &substream, params);
++>>>>>>> 68c907f10cd8 (ASoC: codec2codec: run callbacks in order)
  			if (ret < 0)
  				goto out;
  
@@@ -3919,27 -3901,27 +3943,44 @@@
  		substream.stream = SNDRV_PCM_STREAM_CAPTURE;
  		snd_soc_dapm_widget_for_each_source_path(w, path) {
  			source = path->source->priv;
++<<<<<<< HEAD
 +
 +			if (source->driver->ops->hw_free)
 +				source->driver->ops->hw_free(&substream,
 +							     source);
++=======
+ 			snd_soc_dai_hw_free(source, &substream);
+ 		}
++>>>>>>> 68c907f10cd8 (ASoC: codec2codec: run callbacks in order)
+ 
+ 		substream.stream = SNDRV_PCM_STREAM_PLAYBACK;
+ 		snd_soc_dapm_widget_for_each_sink_path(w, path) {
+ 			sink = path->sink->priv;
+ 			snd_soc_dai_hw_free(sink, &substream);
+ 		}
  
+ 		substream.stream = SNDRV_PCM_STREAM_CAPTURE;
+ 		snd_soc_dapm_widget_for_each_source_path(w, path) {
+ 			source = path->source->priv;
  			source->active--;
 -			snd_soc_dai_shutdown(source, &substream);
 +			if (source->driver->ops->shutdown)
 +				source->driver->ops->shutdown(&substream,
 +							      source);
  		}
  
  		substream.stream = SNDRV_PCM_STREAM_PLAYBACK;
  		snd_soc_dapm_widget_for_each_sink_path(w, path) {
  			sink = path->sink->priv;
++<<<<<<< HEAD
 +
 +			if (sink->driver->ops->hw_free)
 +				sink->driver->ops->hw_free(&substream, sink);
 +
++=======
++>>>>>>> 68c907f10cd8 (ASoC: codec2codec: run callbacks in order)
  			sink->active--;
 -			snd_soc_dai_shutdown(sink, &substream);
 +			if (sink->driver->ops->shutdown)
 +				sink->driver->ops->shutdown(&substream, sink);
  		}
  		break;
  
* Unmerged path sound/soc/soc-dapm.c
