net/mlx5e: Move uplink rep init/cleanup code into own functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Roi Dayan <roid@mellanox.com>
commit 29b598ddb8d2d401257013c2af5e9f003bf84ec4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/29b598dd.failed

Clean up the code and allows to call uplink rep init/cleanup
from different location later.
To be used later for a new uplink representor mode.

	Signed-off-by: Roi Dayan <roid@mellanox.com>
	Reviewed-by: Eli Britstein <elibr@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 29b598ddb8d2d401257013c2af5e9f003bf84ec4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index e3ab7df3e76c,60c79123824b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -1625,8 -1714,7 +1662,12 @@@ tc_esw_cleanup
  static int mlx5e_init_rep_tx(struct mlx5e_priv *priv)
  {
  	struct mlx5e_rep_priv *rpriv = priv->ppriv;
++<<<<<<< HEAD
 +	struct mlx5_rep_uplink_priv *uplink_priv;
 +	int tc, err;
++=======
+ 	int err;
++>>>>>>> 29b598ddb8d2 (net/mlx5e: Move uplink rep init/cleanup code into own functions)
  
  	err = mlx5e_create_tises(priv);
  	if (err) {
@@@ -1634,35 -1722,16 +1675,27 @@@
  		return err;
  	}
  
++<<<<<<< HEAD
 +	if (rpriv->rep->vport == FDB_UPLINK_VPORT) {
 +		uplink_priv = &rpriv->uplink_priv;
 +
 +		INIT_LIST_HEAD(&uplink_priv->unready_flows);
 +
 +		/* init shared tc flow table */
 +		err = mlx5e_tc_esw_init(&uplink_priv->tc_ht);
++=======
+ 	if (rpriv->rep->vport == MLX5_VPORT_UPLINK) {
+ 		err = mlx5e_init_uplink_rep_tx(rpriv);
++>>>>>>> 29b598ddb8d2 (net/mlx5e: Move uplink rep init/cleanup code into own functions)
  		if (err)
  			goto destroy_tises;
- 
- 		mlx5_init_port_tun_entropy(&uplink_priv->tun_entropy, priv->mdev);
- 
- 		/* init indirect block notifications */
- 		INIT_LIST_HEAD(&uplink_priv->tc_indr_block_priv_list);
- 		uplink_priv->netdevice_nb.notifier_call = mlx5e_nic_rep_netdevice_event;
- 		err = register_netdevice_notifier(&uplink_priv->netdevice_nb);
- 		if (err) {
- 			mlx5_core_err(priv->mdev, "Failed to register netdev notifier\n");
- 			goto tc_esw_cleanup;
- 		}
  	}
  
  	return 0;
  
- tc_esw_cleanup:
- 	mlx5e_tc_esw_cleanup(&uplink_priv->tc_ht);
  destroy_tises:
 -	mlx5e_destroy_tises(priv);
 +	for (tc = 0; tc < priv->profile->max_tc; tc++)
 +		mlx5e_destroy_tis(priv->mdev, priv->tisn[tc]);
  	return err;
  }
  
@@@ -1669,22 -1749,14 +1713,27 @@@ static void mlx5e_cleanup_uplink_rep_tx
  static void mlx5e_cleanup_rep_tx(struct mlx5e_priv *priv)
  {
  	struct mlx5e_rep_priv *rpriv = priv->ppriv;
 +	int tc;
 +
 +	for (tc = 0; tc < priv->profile->max_tc; tc++)
 +		mlx5e_destroy_tis(priv->mdev, priv->tisn[tc]);
  
 -	mlx5e_destroy_tises(priv);
++<<<<<<< HEAD
 +	if (rpriv->rep->vport == FDB_UPLINK_VPORT) {
 +		/* clean indirect TC block notifications */
 +		unregister_netdevice_notifier(&rpriv->uplink_priv.netdevice_nb);
 +		mlx5e_rep_indr_clean_block_privs(rpriv);
  
 +		/* delete shared tc flow table */
 +		mlx5e_tc_esw_cleanup(&rpriv->uplink_priv.tc_ht);
 +	}
++=======
+ 	if (rpriv->rep->vport == MLX5_VPORT_UPLINK)
+ 		mlx5e_cleanup_uplink_rep_tx(rpriv);
++>>>>>>> 29b598ddb8d2 (net/mlx5e: Move uplink rep init/cleanup code into own functions)
  }
  
 -static void mlx5e_rep_enable(struct mlx5e_priv *priv)
 +static void mlx5e_vf_rep_enable(struct mlx5e_priv *priv)
  {
  	mlx5e_set_netdev_mtu_boundaries(priv);
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
