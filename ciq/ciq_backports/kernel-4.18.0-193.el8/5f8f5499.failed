RDMA/core: Move device addition deletion to device.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Parav Pandit <parav@mellanox.com>
commit 5f8f5499005c51656645a011bca81ffb66fcaaca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/5f8f5499.failed

Move core device addition and removal from sysfs.c to device.c as device.c
is more appropriate place for device management.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 5f8f5499005c51656645a011bca81ffb66fcaaca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
diff --cc drivers/infiniband/core/device.c
index 8641d8bca5aa,3eddc6e67a16..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -599,40 -766,34 +601,51 @@@ int ib_register_device(struct ib_devic
  		goto out;
  	}
  
 -	ib_device_register_rdmacg(device);
 +	device->index = __dev_new_index();
 +
 +	ret = ib_device_register_rdmacg(device);
 +	if (ret) {
 +		dev_warn(&device->dev,
 +			 "Couldn't register device with rdma cgroup\n");
 +		goto dev_cleanup;
 +	}
  
+ 	ret = device_add(&device->dev);
+ 	if (ret)
+ 		goto cg_cleanup;
+ 
  	ret = ib_device_register_sysfs(device);
  	if (ret) {
  		dev_warn(&device->dev,
  			 "Couldn't register device with driver model\n");
- 		goto cg_cleanup;
+ 		goto dev_cleanup;
  	}
  
 -	ret = enable_device(device);
 -	if (ret)
 -		goto sysfs_cleanup;
 +	refcount_set(&device->refcount, 1);
 +
 +	xa_for_each_marked (&clients, index, client, CLIENT_REGISTERED)
 +		if (!add_client_context(device, client) && client->add)
 +			client->add(device);
  
 +	down_write(&lists_rwsem);
 +	list_add_tail(&device->core_list, &device_list);
 +	up_write(&lists_rwsem);
 +	mutex_unlock(&device_mutex);
  	return 0;
  
++<<<<<<< HEAD
++=======
+ sysfs_cleanup:
+ 	ib_device_unregister_sysfs(device);
+ dev_cleanup:
+ 	device_del(&device->dev);
++>>>>>>> 5f8f5499005c (RDMA/core: Move device addition deletion to device.c)
  cg_cleanup:
  	ib_device_unregister_rdmacg(device);
 +dev_cleanup:
  	ib_cache_cleanup_one(device);
  out:
 -	release_name(device);
 +	mutex_unlock(&device_mutex);
  	return ret;
  }
  EXPORT_SYMBOL(ib_register_device);
@@@ -645,48 -806,12 +658,49 @@@
   */
  void ib_unregister_device(struct ib_device *device)
  {
 -	disable_device(device);
 +	struct ib_client_data *context, *tmp;
 +	unsigned long flags;
 +
 +	/*
 +	 * Wait for all netlink command callers to finish working on the
 +	 * device.
 +	 */
 +	ib_device_put(device);
 +	wait_for_completion(&device->unreg_completion);
 +
 +	mutex_lock(&device_mutex);
 +
 +	down_write(&lists_rwsem);
 +	list_del(&device->core_list);
 +	write_lock_irq(&device->client_data_lock);
 +	list_for_each_entry(context, &device->client_data_list, list)
 +		context->going_down = true;
 +	write_unlock_irq(&device->client_data_lock);
 +	downgrade_write(&lists_rwsem);
 +
 +	list_for_each_entry(context, &device->client_data_list, list) {
 +		if (context->client->remove)
 +			context->client->remove(device, context->data);
 +	}
 +	up_read(&lists_rwsem);
 +
  	ib_device_unregister_sysfs(device);
+ 	device_del(&device->dev);
  	ib_device_unregister_rdmacg(device);
 +
 +	mutex_unlock(&device_mutex);
 +
  	ib_cache_cleanup_one(device);
 -	release_name(device);
 +
 +	down_write(&lists_rwsem);
 +	write_lock_irqsave(&device->client_data_lock, flags);
 +	list_for_each_entry_safe(context, tmp, &device->client_data_list,
 +				 list) {
 +		list_del(&context->list);
 +		kfree(context);
 +	}
 +	write_unlock_irqrestore(&device->client_data_lock, flags);
 +	up_write(&lists_rwsem);
  }
  EXPORT_SYMBOL(ib_unregister_device);
  
diff --git a/drivers/infiniband/core/core_priv.h b/drivers/infiniband/core/core_priv.h
index 9d1d4bce8f87..06964928ef9d 100644
--- a/drivers/infiniband/core/core_priv.h
+++ b/drivers/infiniband/core/core_priv.h
@@ -54,6 +54,8 @@ struct pkey_index_qp_list {
 	struct list_head    qp_list;
 };
 
+extern const struct attribute_group ib_dev_attr_group;
+
 int ib_device_register_sysfs(struct ib_device *device);
 void ib_device_unregister_sysfs(struct ib_device *device);
 int ib_device_rename(struct ib_device *ibdev, const char *name);
* Unmerged path drivers/infiniband/core/device.c
diff --git a/drivers/infiniband/core/sysfs.c b/drivers/infiniband/core/sysfs.c
index 7e51b406e89a..9335b15c2e38 100644
--- a/drivers/infiniband/core/sysfs.c
+++ b/drivers/infiniband/core/sysfs.c
@@ -1275,7 +1275,7 @@ static struct attribute *ib_dev_attrs[] = {
 	NULL,
 };
 
-static const struct attribute_group dev_attr_group = {
+const struct attribute_group ib_dev_attr_group = {
 	.attrs = ib_dev_attrs,
 };
 
@@ -1338,18 +1338,10 @@ int ib_device_register_sysfs(struct ib_device *device)
 {
 	int ret;
 
-	device->groups[0] = &dev_attr_group;
-	device->dev.groups = device->groups;
-
-	ret = device_add(&device->dev);
+	ret = ib_setup_port_attrs(device);
 	if (ret)
 		return ret;
 
-	ret = ib_setup_port_attrs(device);
-	if (ret) {
-		device_del(&device->dev);
-		return ret;
-	}
 	if (device->ops.alloc_hw_stats)
 		setup_hw_stats(device, NULL, 0);
 
@@ -1363,6 +1355,4 @@ void ib_device_unregister_sysfs(struct ib_device *device)
 	kfree(device->hw_stats);
 
 	ib_free_port_attrs(device);
-	/* Balances with device_add */
-	device_del(&device->dev);
 }
