net/mlx5: Fix delay in fw fatal report handling due to fw report

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: Fix delay in fw fatal report handling due to fw report (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.77%
commit-author Moshe Shemesh <moshe@mellanox.com>
commit a6633e11e8732b9c000774746a2c1827a7e3c316
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a6633e11.failed

When fw fatal error occurs, poll health() first detects and reports on a
fw error. Afterwards, it detects and reports on the fw fatal error
itself.

That can cause a long delay in fw fatal error handling which waits in a
queue for the fw error handling to be finished. The fw error handle will
try asking for fw core dump command while fw in fatal state may not
respond and driver will wait for command timeout.

Changing the flow to detect and handle first fw fatal errors and only if
no fatal error detected look for a fw error to handle.

Fixes: d1bf0e2cc4a6 ("net/mlx5: Report devlink health on FW issues")
	Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
	Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit a6633e11e8732b9c000774746a2c1827a7e3c316)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/health.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/health.c
index fa1691ba661a,d685122d9ff7..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/health.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/health.c
@@@ -329,15 -719,15 +339,22 @@@ static void poll_health(struct timer_li
  
  	health->prev = count;
  	if (health->miss_counter == MAX_MISSES) {
 -		mlx5_core_err(dev, "device's health compromised - reached miss count\n");
 +		dev_err(&dev->pdev->dev, "device's health compromised - reached miss count\n");
  		print_health_info(dev);
 -		queue_work(health->wq, &health->report_work);
  	}
  
++<<<<<<< HEAD
 +	if (in_fatal(dev) && !health->sick) {
 +		health->sick = true;
 +		print_health_info(dev);
 +		mlx5_trigger_health_work(dev);
 +	}
++=======
+ 	prev_synd = health->synd;
+ 	health->synd = ioread8(&h->synd);
+ 	if (health->synd && health->synd != prev_synd)
+ 		queue_work(health->wq, &health->report_work);
++>>>>>>> a6633e11e873 (net/mlx5: Fix delay in fw fatal report handling due to fw report)
  
  out:
  	mod_timer(&health->timer, get_next_poll_jiffies());
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/health.c
