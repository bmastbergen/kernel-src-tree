PCI/PM: Use PCI dev_printk() wrappers for consistency

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 6941a0c2bdedfb729fb166091e12d06e4fce177f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/6941a0c2.failed

Use the PCI dev_printk() wrappers for consistency with the rest of the PCI
core.  No functional change intended.

Link: https://lore.kernel.org/r/20191017212851.54237-2-helgaas@kernel.org
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 6941a0c2bdedfb729fb166091e12d06e4fce177f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci-driver.c
diff --cc drivers/pci/pci-driver.c
index e6614ab5ceca,407b1df5ea7c..000000000000
--- a/drivers/pci/pci-driver.c
+++ b/drivers/pci/pci-driver.c
@@@ -897,9 -866,25 +898,28 @@@ static int pci_pm_suspend_noirq(struct 
  			pci_prepare_to_sleep(pci_dev);
  	}
  
- 	dev_dbg(dev, "PCI PM: Suspend power state: %s\n",
+ 	pci_dbg(pci_dev, "PCI PM: Suspend power state: %s\n",
  		pci_power_name(pci_dev->current_state));
  
++<<<<<<< HEAD
++=======
+ 	if (pci_dev->current_state == PCI_D0) {
+ 		pci_dev->skip_bus_pm = true;
+ 		/*
+ 		 * Per PCI PM r1.2, table 6-1, a bridge must be in D0 if any
+ 		 * downstream device is in D0, so avoid changing the power state
+ 		 * of the parent bridge by setting the skip_bus_pm flag for it.
+ 		 */
+ 		if (pci_dev->bus->self)
+ 			pci_dev->bus->self->skip_bus_pm = true;
+ 	}
+ 
+ 	if (pci_dev->skip_bus_pm && pm_suspend_no_platform()) {
+ 		pci_dbg(pci_dev, "PCI PM: Skipped\n");
+ 		goto Fixup;
+ 	}
+ 
++>>>>>>> 6941a0c2bded (PCI/PM: Use PCI dev_printk() wrappers for consistency)
  	pci_pm_set_unknown_state(pci_dev);
  
  	/*
@@@ -1305,11 -1296,11 +1325,19 @@@ static int pci_pm_runtime_suspend(struc
  		 * log level.
  		 */
  		if (error == -EBUSY || error == -EAGAIN) {
++<<<<<<< HEAD
 +			dev_dbg(dev, "can't suspend now (%pf returned %d)\n",
 +				pm->runtime_suspend, error);
 +			return error;
 +		} else if (error) {
 +			dev_err(dev, "can't suspend (%pf returned %d)\n",
++=======
+ 			pci_dbg(pci_dev, "can't suspend now (%ps returned %d)\n",
+ 				pm->runtime_suspend, error);
+ 			return error;
+ 		} else if (error) {
+ 			pci_err(pci_dev, "can't suspend (%ps returned %d)\n",
++>>>>>>> 6941a0c2bded (PCI/PM: Use PCI dev_printk() wrappers for consistency)
  				pm->runtime_suspend, error);
  			return error;
  		}
* Unmerged path drivers/pci/pci-driver.c
