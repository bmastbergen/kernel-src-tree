workqueue: Use normal rcu

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 24acfb71822566e4d469b4992a7b3b9f873e0083
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/24acfb71.failed

There is no need for sched_rcu. The undocumented reason why sched_rcu
is used is to avoid a few explicit rcu_read_lock()/unlock() pairs by
the fact that sched_rcu reader side critical sections are also protected
by preempt or irq disabled regions.

Replace rcu_read_lock_sched with rcu_read_lock and acquire the RCU lock
where it is not yet explicit acquired. Replace local_irq_disable() with
rcu_read_lock(). Update asserts.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
[bigeasy: mangle changelog a little]
	Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit 24acfb71822566e4d469b4992a7b3b9f873e0083)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/workqueue.c
diff --cc kernel/workqueue.c
index 4228207fff91,37a32884986b..000000000000
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@@ -3403,8 -3563,8 +3408,13 @@@ static void put_unbound_pool(struct wor
  	del_timer_sync(&pool->idle_timer);
  	del_timer_sync(&pool->mayday_timer);
  
++<<<<<<< HEAD
 +	/* sched-RCU protected to allow dereferences from get_work_pool() */
 +	call_rcu_sched(&pool->rcu, rcu_free_pool);
++=======
+ 	/* RCU protected to allow dereferences from get_work_pool() */
+ 	call_rcu(&pool->rcu, rcu_free_pool);
++>>>>>>> 24acfb718225 (workqueue: Use normal rcu)
  }
  
  /**
* Unmerged path kernel/workqueue.c
