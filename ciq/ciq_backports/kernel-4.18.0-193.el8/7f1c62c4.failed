PCI: Add pci_info_ratelimited() to ratelimit PCI separately

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Krzysztof Wilczynski <kw@linux.com>
commit 7f1c62c443a453deb6eb3515e3c05650ffe0dcf0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7f1c62c4.failed

Do not use printk_ratelimit() in drivers/pci/pci.c as it shares the rate
limiting state with all other callers to the printk_ratelimit().

Add pci_info_ratelimited() (similar to pci_notice_ratelimited() added in
the commit a88a7b3eb076 ("vfio: Use dev_printk() when possible")) and use
it instead of printk_ratelimit() + pci_info().

Link: https://lore.kernel.org/r/20190825224616.8021-1-kw@linux.com
	Signed-off-by: Krzysztof Wilczynski <kw@linux.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 7f1c62c443a453deb6eb3515e3c05650ffe0dcf0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index 906f59ad2896,f5bab312995d..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -2393,4 -2430,10 +2393,13 @@@ void pci_uevent_ers(struct pci_dev *pde
  #define pci_info(pdev, fmt, arg...)	dev_info(&(pdev)->dev, fmt, ##arg)
  #define pci_dbg(pdev, fmt, arg...)	dev_dbg(&(pdev)->dev, fmt, ##arg)
  
++<<<<<<< HEAD
++=======
+ #define pci_notice_ratelimited(pdev, fmt, arg...) \
+ 	dev_notice_ratelimited(&(pdev)->dev, fmt, ##arg)
+ 
+ #define pci_info_ratelimited(pdev, fmt, arg...) \
+ 	dev_info_ratelimited(&(pdev)->dev, fmt, ##arg)
+ 
++>>>>>>> 7f1c62c443a4 (PCI: Add pci_info_ratelimited() to ratelimit PCI separately)
  #endif /* LINUX_PCI_H */
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 68888fa2018a..cc540cb62ddf 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -885,8 +885,8 @@ static int pci_raw_set_power_state(struct pci_dev *dev, pci_power_t state)
 
 	pci_read_config_word(dev, dev->pm_cap + PCI_PM_CTRL, &pmcsr);
 	dev->current_state = (pmcsr & PCI_PM_CTRL_STATE_MASK);
-	if (dev->current_state != state && printk_ratelimit())
-		pci_info(dev, "Refused to change power state, currently in D%d\n",
+	if (dev->current_state != state)
+		pci_info_ratelimited(dev, "Refused to change power state, currently in D%d\n",
 			 dev->current_state);
 
 	/*
* Unmerged path include/linux/pci.h
