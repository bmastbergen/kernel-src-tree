libbpf: Improve handling of corrupted ELF during map initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 98e527af30a62cfb1e26f2a0ca76289bc7aba4d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/98e527af.failed

If we get ELF file with "maps" section, but no symbols pointing to it, we'll
end up with division by zero. Add check against this situation and exit early
with error. Found by Coverity scan against Github libbpf sources.

Fixes: bf82927125dd ("libbpf: refactor map initialization")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20191107020855.3834758-6-andriin@fb.com
(cherry picked from commit 98e527af30a62cfb1e26f2a0ca76289bc7aba4d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 70dc223cca5a,fde6cb3e5d41..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -927,13 -956,13 +927,21 @@@ static int bpf_object__init_user_maps(s
  	pr_debug("maps in %s: %d maps in %zd bytes\n",
  		 obj->path, nr_maps, data->d_size);
  
++<<<<<<< HEAD
 +	map_def_sz = data->d_size / nr_maps;
 +	if (!data->d_size || (data->d_size % nr_maps) != 0) {
 +		pr_warning("unable to determine map definition size "
 +			   "section %s, %d maps in %zd bytes\n",
 +			   obj->path, nr_maps, data->d_size);
++=======
+ 	if (!data->d_size || nr_maps == 0 || (data->d_size % nr_maps) != 0) {
+ 		pr_warn("unable to determine map definition size "
+ 			"section %s, %d maps in %zd bytes\n",
+ 			obj->path, nr_maps, data->d_size);
++>>>>>>> 98e527af30a6 (libbpf: Improve handling of corrupted ELF during map initialization)
  		return -EINVAL;
  	}
+ 	map_def_sz = data->d_size / nr_maps;
  
  	/* Fill obj->maps using data in "maps" section.  */
  	for (i = 0; i < nr_syms; i++) {
* Unmerged path tools/lib/bpf/libbpf.c
