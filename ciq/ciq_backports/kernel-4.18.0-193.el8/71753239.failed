iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Remove unused dmar_remove_one_dev_info() argument (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 94.83%
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 717532394c712e044195405685f62522c579e22a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/71753239.failed

domain_remove_dev_info() takes a struct dmar_domain * argument, but doesn't
use it.  Remove it.  No functional change intended.

The last use of this argument was removed by 127c761598f7 ("iommu/vt-d:
Pass device_domain_info to __dmar_remove_one_dev_info").

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 717532394c712e044195405685f62522c579e22a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 1cb6d9e1ae40,e06913460cc3..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -2473,13 -2538,15 +2472,19 @@@ static struct dmar_domain *dmar_insert_
  	list_add(&info->global, &device_domain_list);
  	if (dev)
  		dev->archdata.iommu = info;
 -	spin_unlock_irqrestore(&device_domain_lock, flags);
  
 -	/* PASID table is mandatory for a PCI device in scalable mode. */
 -	if (dev && dev_is_pci(dev) && sm_supported(iommu)) {
 +	if (dev && dev_is_pci(dev) && info->pasid_supported) {
  		ret = intel_pasid_alloc_table(dev);
  		if (ret) {
++<<<<<<< HEAD
 +			pr_warn("No pasid table for %s, pasid disabled\n",
 +				dev_name(dev));
 +			info->pasid_supported = 0;
++=======
+ 			dev_err(dev, "PASID table allocation failed\n");
+ 			dmar_remove_one_dev_info(dev);
+ 			return NULL;
++>>>>>>> 717532394c71 (iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument)
  		}
  
  		/* Setup the PASID entry for requests without PASID: */
@@@ -2492,17 -2559,15 +2497,27 @@@
  					dev, PASID_RID2PASID);
  		spin_unlock(&iommu->lock);
  		if (ret) {
++<<<<<<< HEAD
 +			pr_err("Setup RID2PASID for %s failed\n",
 +			       dev_name(dev));
 +			dmar_remove_one_dev_info(domain, dev);
++=======
+ 			dev_err(dev, "Setup RID2PASID failed\n");
+ 			dmar_remove_one_dev_info(dev);
++>>>>>>> 717532394c71 (iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument)
  			return NULL;
  		}
  	}
 +	spin_unlock_irqrestore(&device_domain_lock, flags);
  
  	if (dev && domain_context_mapping(domain, dev)) {
++<<<<<<< HEAD
 +		pr_err("Domain context map for %s failed\n", dev_name(dev));
 +		dmar_remove_one_dev_info(domain, dev);
++=======
+ 		dev_err(dev, "Domain context map failed\n");
+ 		dmar_remove_one_dev_info(dev);
++>>>>>>> 717532394c71 (iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument)
  		return NULL;
  	}
  
@@@ -3578,9 -3620,8 +3593,14 @@@ static int iommu_no_mapping(struct devi
  			 * 32 bit DMA is removed from si_domain and fall back
  			 * to non-identity mapping.
  			 */
++<<<<<<< HEAD
 +			dmar_remove_one_dev_info(si_domain, dev);
 +			pr_info("32bit %s uses non-identity mapping\n",
 +				dev_name(dev));
++=======
+ 			dmar_remove_one_dev_info(dev);
+ 			dev_info(dev, "32bit DMA uses non-identity mapping\n");
++>>>>>>> 717532394c71 (iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument)
  			return 0;
  		}
  	} else {
@@@ -4521,19 -4568,16 +4541,29 @@@ static int device_notifier(struct notif
  	if (iommu_dummy(dev))
  		return 0;
  
 -	if (action != BUS_NOTIFY_REMOVED_DEVICE)
 -		return 0;
 +	if (action == BUS_NOTIFY_REMOVED_DEVICE) {
 +		domain = find_domain(dev);
 +		if (!domain)
 +			return 0;
  
++<<<<<<< HEAD
 +		dmar_remove_one_dev_info(domain, dev);
 +		if (!domain_type_is_vm_or_si(domain) &&
 +		    list_empty(&domain->devices))
 +			domain_exit(domain);
 +	} else if (action == BUS_NOTIFY_ADD_DEVICE) {
 +		if (iommu_should_identity_map(dev, 1))
 +			domain_add_dev_info(si_domain, dev);
 +	}
++=======
+ 	domain = find_domain(dev);
+ 	if (!domain)
+ 		return 0;
+ 
+ 	dmar_remove_one_dev_info(dev);
+ 	if (!domain_type_is_vm_or_si(domain) && list_empty(&domain->devices))
+ 		domain_exit(domain);
++>>>>>>> 717532394c71 (iommu/vt-d: Remove unused dmar_remove_one_dev_info() argument)
  
  	return 0;
  }
* Unmerged path drivers/iommu/intel-iommu.c
