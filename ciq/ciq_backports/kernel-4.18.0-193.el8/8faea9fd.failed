RDMA/cache: Move the cache per-port data into the main ib_port_data

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jason Gunthorpe <jgg@ziepe.ca>
commit 8faea9fd4a3914f12cd343e10810ec5f4215ddd6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8faea9fd.failed

Like the other cases there no real reason to have another array just for
the cache. This larger conversion gets its own patch.

	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 8faea9fd4a3914f12cd343e10810ec5f4215ddd6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cache.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/cache.c
index f50de4cb4cd9,a28dc1901c80..000000000000
--- a/drivers/infiniband/core/cache.c
+++ b/drivers/infiniband/core/cache.c
@@@ -875,14 -873,12 +873,20 @@@ static void gid_table_release_one(struc
  
  static int _gid_table_setup_one(struct ib_device *ib_dev)
  {
- 	u8 port;
  	struct ib_gid_table *table;
+ 	unsigned int rdma_port;
  
++<<<<<<< HEAD
 +	for (port = 0; port < ib_dev->phys_port_cnt; port++) {
 +		u8 rdma_port = port + rdma_start_port(ib_dev);
 +
 +		table =	alloc_gid_table(
 +				ib_dev->port_immutable[rdma_port].gid_tbl_len);
++=======
+ 	rdma_for_each_port (ib_dev, rdma_port) {
+ 		table = alloc_gid_table(
+ 			ib_dev->port_data[rdma_port].immutable.gid_tbl_len);
++>>>>>>> 8faea9fd4a39 (RDMA/cache: Move the cache per-port data into the main ib_port_data)
  		if (!table)
  			goto rollback_table_setup;
  
@@@ -1432,22 -1420,12 +1427,12 @@@ int ib_cache_setup_one(struct ib_devic
  
  	rwlock_init(&device->cache.lock);
  
- 	device->cache.ports =
- 		kcalloc(rdma_end_port(device) - rdma_start_port(device) + 1,
- 			sizeof(*device->cache.ports),
- 			GFP_KERNEL);
- 	if (!device->cache.ports)
- 		return -ENOMEM;
- 
  	err = gid_table_setup_one(device);
- 	if (err) {
- 		kfree(device->cache.ports);
- 		device->cache.ports = NULL;
+ 	if (err)
  		return err;
- 	}
  
 -	rdma_for_each_port (device, p)
 -		ib_cache_update(device, p, true);
 +	for (p = 0; p <= rdma_end_port(device) - rdma_start_port(device); ++p)
 +		ib_cache_update(device, p + rdma_start_port(device), true);
  
  	INIT_IB_EVENT_HANDLER(&device->cache.event_handler,
  			      device, ib_cache_event);
diff --cc include/rdma/ib_verbs.h
index 2ff74f11eec0,50b7ebc2885e..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2198,6 -2197,15 +2197,18 @@@ struct ib_port_immutable 
  	u32                           max_mad_size;
  };
  
++<<<<<<< HEAD
++=======
+ struct ib_port_data {
+ 	struct ib_port_immutable immutable;
+ 
+ 	spinlock_t pkey_list_lock;
+ 	struct list_head pkey_list;
+ 
+ 	struct ib_port_cache cache;
+ };
+ 
++>>>>>>> 8faea9fd4a39 (RDMA/cache: Move the cache per-port data into the main ib_port_data)
  /* rdma netdev type - specifies protocol type */
  enum rdma_netdev_t {
  	RDMA_NETDEV_OPA_VNIC,
* Unmerged path drivers/infiniband/core/cache.c
* Unmerged path include/rdma/ib_verbs.h
