PM-runtime: Call pm_runtime_active|suspended_time() from sysfs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit 0996584b3026bed7f38abe02e8535e6a6c474118
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/0996584b.failed

Avoid the open-coding of the accounted time acquisition in
runtime_active|suspend_time_show() and make them call
pm_runtime_active|suspended_time() instead.

Note that this change also indirectly avoids holding dev->power.lock
around the do_div() computation and the sprintf() call which is an
additional improvement.

	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
[ rjw: Changelog ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 0996584b3026bed7f38abe02e8535e6a6c474118)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/power/sysfs.c
diff --cc drivers/base/power/sysfs.c
index fc036148e63c,1226e441ddfe..000000000000
--- a/drivers/base/power/sysfs.c
+++ b/drivers/base/power/sysfs.c
@@@ -125,10 -125,9 +125,16 @@@ static ssize_t runtime_active_time_show
  				struct device_attribute *attr, char *buf)
  {
  	int ret;
++<<<<<<< HEAD
 +	spin_lock_irq(&dev->power.lock);
 +	update_pm_runtime_accounting(dev);
 +	ret = sprintf(buf, "%i\n", jiffies_to_msecs(dev->power.active_jiffies));
 +	spin_unlock_irq(&dev->power.lock);
++=======
+ 	u64 tmp = pm_runtime_active_time(dev);
+ 	do_div(tmp, NSEC_PER_MSEC);
+ 	ret = sprintf(buf, "%llu\n", tmp);
++>>>>>>> 0996584b3026 (PM-runtime: Call pm_runtime_active|suspended_time() from sysfs)
  	return ret;
  }
  
@@@ -138,11 -137,9 +144,17 @@@ static ssize_t runtime_suspended_time_s
  				struct device_attribute *attr, char *buf)
  {
  	int ret;
++<<<<<<< HEAD
 +	spin_lock_irq(&dev->power.lock);
 +	update_pm_runtime_accounting(dev);
 +	ret = sprintf(buf, "%i\n",
 +		jiffies_to_msecs(dev->power.suspended_jiffies));
 +	spin_unlock_irq(&dev->power.lock);
++=======
+ 	u64 tmp = pm_runtime_suspended_time(dev);
+ 	do_div(tmp, NSEC_PER_MSEC);
+ 	ret = sprintf(buf, "%llu\n", tmp);
++>>>>>>> 0996584b3026 (PM-runtime: Call pm_runtime_active|suspended_time() from sysfs)
  	return ret;
  }
  
diff --git a/drivers/base/power/runtime.c b/drivers/base/power/runtime.c
index 8118edb25602..a5709f3cdba3 100644
--- a/drivers/base/power/runtime.c
+++ b/drivers/base/power/runtime.c
@@ -62,7 +62,7 @@ static int rpm_suspend(struct device *dev, int rpmflags);
  * runtime_status field is updated, to account the time in the old state
  * correctly.
  */
-void update_pm_runtime_accounting(struct device *dev)
+static void update_pm_runtime_accounting(struct device *dev)
 {
 	unsigned long now = jiffies;
 	unsigned long delta;
* Unmerged path drivers/base/power/sysfs.c
diff --git a/include/linux/pm.h b/include/linux/pm.h
index e573f956ed8b..9562f7cc9a4d 100644
--- a/include/linux/pm.h
+++ b/include/linux/pm.h
@@ -642,7 +642,6 @@ struct dev_pm_info {
 	struct dev_pm_qos	*qos;
 };
 
-extern void update_pm_runtime_accounting(struct device *dev);
 extern int dev_pm_get_subsys_data(struct device *dev);
 extern void dev_pm_put_subsys_data(struct device *dev);
 
