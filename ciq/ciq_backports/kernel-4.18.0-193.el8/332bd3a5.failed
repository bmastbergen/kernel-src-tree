net/mlx5: E-switch, Combine metadata enable/disable functionality

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: E-switch, Combine metadata enable/disable functionality (Alaa Hleihel) [1724327 1724336]
Rebuild_FUZZ: 96.83%
commit-author Parav Pandit <parav@mellanox.com>
commit 332bd3a5b931eb67deb370db62d59f9cc7f76dac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/332bd3a5.failed

Except bit toggling code, rest of the code is same to enable/disable
metadata passing functionality.
Hence, combine them to single function and control using enable flag.

Also instead of checking metadata supported at multiple places,
fold into the helper function.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 332bd3a5b931eb67deb370db62d59f9cc7f76dac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 2a02050a09e7,4be19890f725..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -543,7 -587,41 +543,45 @@@ void mlx5_eswitch_del_send_to_vport_rul
  	mlx5_del_flow_rules(rule);
  }
  
++<<<<<<< HEAD
 +static void peer_miss_rules_setup(struct mlx5_core_dev *peer_dev,
++=======
+ static int esw_set_passing_vport_metadata(struct mlx5_eswitch *esw, bool enable)
+ {
+ 	u32 out[MLX5_ST_SZ_DW(query_esw_vport_context_out)] = {};
+ 	u32 in[MLX5_ST_SZ_DW(modify_esw_vport_context_in)] = {};
+ 	u8 fdb_to_vport_reg_c_id;
+ 	int err;
+ 
+ 	if (!mlx5_eswitch_vport_match_metadata_enabled(esw))
+ 		return 0;
+ 
+ 	err = mlx5_eswitch_query_esw_vport_context(esw, esw->manager_vport,
+ 						   out, sizeof(out));
+ 	if (err)
+ 		return err;
+ 
+ 	fdb_to_vport_reg_c_id = MLX5_GET(query_esw_vport_context_out, out,
+ 					 esw_vport_context.fdb_to_vport_reg_c_id);
+ 
+ 	if (enable)
+ 		fdb_to_vport_reg_c_id |= MLX5_FDB_TO_VPORT_REG_C_0;
+ 	else
+ 		fdb_to_vport_reg_c_id &= ~MLX5_FDB_TO_VPORT_REG_C_0;
+ 
+ 	MLX5_SET(modify_esw_vport_context_in, in,
+ 		 esw_vport_context.fdb_to_vport_reg_c_id, fdb_to_vport_reg_c_id);
+ 
+ 	MLX5_SET(modify_esw_vport_context_in, in,
+ 		 field_select.fdb_to_vport_reg_c_id, 1);
+ 
+ 	return mlx5_eswitch_modify_esw_vport_context(esw, esw->manager_vport,
+ 						     in, sizeof(in));
+ }
+ 
+ static void peer_miss_rules_setup(struct mlx5_eswitch *esw,
+ 				  struct mlx5_core_dev *peer_dev,
++>>>>>>> 332bd3a5b931 (net/mlx5: E-switch, Combine metadata enable/disable functionality)
  				  struct mlx5_flow_spec *spec,
  				  struct mlx5_flow_destination *dest)
  {
@@@ -1613,7 -2118,11 +1651,15 @@@ int esw_offloads_init(struct mlx5_eswit
  	if (err)
  		return err;
  
++<<<<<<< HEAD
 +	err = esw_offloads_load_reps(esw, nvports);
++=======
+ 	err = esw_set_passing_vport_metadata(esw, true);
+ 	if (err)
+ 		goto err_vport_metadata;
+ 
+ 	err = esw_offloads_load_all_reps(esw);
++>>>>>>> 332bd3a5b931 (net/mlx5: E-switch, Combine metadata enable/disable functionality)
  	if (err)
  		goto err_reps;
  
@@@ -1621,6 -2130,12 +1667,11 @@@
  	return 0;
  
  err_reps:
++<<<<<<< HEAD
++=======
+ 	esw_set_passing_vport_metadata(esw, false);
+ err_vport_metadata:
++>>>>>>> 332bd3a5b931 (net/mlx5: E-switch, Combine metadata enable/disable functionality)
  	esw_offloads_steering_cleanup(esw);
  	return err;
  }
@@@ -1644,11 -2159,14 +1695,16 @@@ static int esw_offloads_stop(struct mlx
  	return err;
  }
  
 -void esw_offloads_cleanup(struct mlx5_eswitch *esw)
 +void esw_offloads_cleanup(struct mlx5_eswitch *esw, int nvports)
  {
 -	mlx5_rdma_disable_roce(esw->dev);
  	esw_offloads_devcom_cleanup(esw);
++<<<<<<< HEAD
 +	esw_offloads_unload_reps(esw, nvports);
++=======
+ 	esw_offloads_unload_all_reps(esw);
+ 	esw_set_passing_vport_metadata(esw, false);
++>>>>>>> 332bd3a5b931 (net/mlx5: E-switch, Combine metadata enable/disable functionality)
  	esw_offloads_steering_cleanup(esw);
 -	esw->offloads.encap = DEVLINK_ESWITCH_ENCAP_MODE_NONE;
  }
  
  static int esw_mode_from_devlink(u16 mode, u16 *mlx5_mode)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
