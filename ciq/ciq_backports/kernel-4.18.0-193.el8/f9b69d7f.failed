bnxt_en: Fix suspend/resume path on 57500 chips

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Vasundhara Volam <vasundhara-v.volam@broadcom.com>
commit f9b69d7f62796b33657c98e0d3ca3be763f70fa4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/f9b69d7f.failed

Driver calls HWRM_FUNC_RESET firmware call while resuming the device
which clears the context memory backing store. Because of which
allocating firmware resources would eventually fail. Fix it by freeing
all context memory during suspend and reallocate the memory during resume.

Call bnxt_hwrm_queue_qportcfg() in resume path.  This firmware call
is needed on the 57500 chips so that firmware will set up the proper
queue mapping in relation to the context memory.

	Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
(cherry picked from commit f9b69d7f62796b33657c98e0d3ca3be763f70fa4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index 17f5edfd8c9f,6a12ab5b8830..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -11020,6 -11946,26 +11023,29 @@@ static int bnxt_resume(struct device *d
  		rc = -EBUSY;
  		goto resume_exit;
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	if (bnxt_hwrm_queue_qportcfg(bp)) {
+ 		rc = -ENODEV;
+ 		goto resume_exit;
+ 	}
+ 
+ 	if (bp->hwrm_spec_code >= 0x10803) {
+ 		if (bnxt_alloc_ctx_mem(bp)) {
+ 			rc = -ENODEV;
+ 			goto resume_exit;
+ 		}
+ 	}
+ 	if (BNXT_NEW_RM(bp))
+ 		bnxt_hwrm_func_resc_qcaps(bp, false);
+ 
+ 	if (bnxt_hwrm_func_drv_rgtr(bp, NULL, 0, false)) {
+ 		rc = -ENODEV;
+ 		goto resume_exit;
+ 	}
+ 
++>>>>>>> f9b69d7f6279 (bnxt_en: Fix suspend/resume path on 57500 chips)
  	bnxt_get_wol_settings(bp);
  	if (netif_running(dev)) {
  		rc = bnxt_open(dev);
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
