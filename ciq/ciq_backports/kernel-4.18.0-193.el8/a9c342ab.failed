drm/mgag200: Don't unpin the current cursor image's buffer.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [drm] drm/mgag200: Don't unpin the current cursor image's buffer (Lyude Paul) [1784290]
Rebuild_FUZZ: 99.15%
commit-author Thomas Zimmermann <tzimmermann@suse.de>
commit a9c342ab77ab6e8ab662105335ae1e44e01271d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a9c342ab.failed

Currently the displayed cursor buffer might be evicted from video memory.
Not unpinning the BO fixes this problem. At this point, pixels_current
also references the BO and it will be unpinned during the next cursor
update.

	Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
	Acked-by: Sam Ravnborg <sam@ravnborg.org>
Fixes: 94dc57b10399 ("drm/mgag200: Rewrite cursor handling")
	Cc: Gerd Hoffmann <kraxel@redhat.com>
	Cc: Dave Airlie <airlied@redhat.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190723075425.24028-4-tzimmermann@suse.de
(cherry picked from commit a9c342ab77ab6e8ab662105335ae1e44e01271d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/mgag200/mgag200_cursor.c
diff --cc drivers/gpu/drm/mgag200/mgag200_cursor.c
index 968e20379d54,289ce3e29032..000000000000
--- a/drivers/gpu/drm/mgag200/mgag200_cursor.c
+++ b/drivers/gpu/drm/mgag200/mgag200_cursor.c
@@@ -224,32 -207,28 +224,38 @@@ int mga_crtc_cursor_set(struct drm_crt
  	/* Adjust cursor control register to turn on the cursor */
  	WREG_DAC(MGA1064_CURSOR_CTL, 4); /* 16-colour palletized cursor mode */
  
 -	/* Now update internal buffer pointers */
 -	if (pixels_current)
 -		drm_gem_vram_unpin(pixels_current);
 -	mdev->cursor.pixels_current = pixels_next;
 +	/* Now swap internal buffer pointers */
 +	if (mdev->cursor.pixels_1 == mdev->cursor.pixels_prev) {
 +		mdev->cursor.pixels_prev = mdev->cursor.pixels_2;
 +		mdev->cursor.pixels_current = mdev->cursor.pixels_1;
 +	} else if (mdev->cursor.pixels_1 == mdev->cursor.pixels_current) {
 +		mdev->cursor.pixels_prev = mdev->cursor.pixels_1;
 +		mdev->cursor.pixels_current = mdev->cursor.pixels_2;
 +	} else {
 +		BUG();
 +	}
 +	ret = 0;
  
++<<<<<<< HEAD
 +	ttm_bo_kunmap(&pixels_prev->kmap);
 + out3:
 +	ttm_bo_kunmap(&bo->kmap);
 + out2:
 +	mgag200_bo_unreserve(bo);
 + out1:
 +	if (ret)
 +		mga_hide_cursor(mdev);
 +	mgag200_bo_unreserve(pixels_1);
 +out_unreserve1:
 +	mgag200_bo_unreserve(pixels_2);
 +out_unref:
++=======
+ 	drm_gem_vram_kunmap(pixels_next);
+ 	drm_gem_vram_kunmap(gbo);
+ 	drm_gem_vram_unpin(gbo);
++>>>>>>> a9c342ab77ab (drm/mgag200: Don't unpin the current cursor image's buffer.)
  	drm_gem_object_put_unlocked(obj);
  
 -	return 0;
 -
 -err_drm_gem_vram_kunmap_dst:
 -	drm_gem_vram_kunmap(pixels_next);
 -err_drm_gem_vram_unpin_dst:
 -	drm_gem_vram_unpin(pixels_next);
 -err_drm_gem_vram_kunmap_src:
 -	drm_gem_vram_kunmap(gbo);
 -err_drm_gem_vram_unpin_src:
 -	drm_gem_vram_unpin(gbo);
 -err_drm_gem_object_put_unlocked:
 -	drm_gem_object_put_unlocked(obj);
  	return ret;
  }
  
* Unmerged path drivers/gpu/drm/mgag200/mgag200_cursor.c
