iommu/vt-d: Fix leak in intel_pasid_alloc_table on error path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Fix leak in intel_pasid_alloc_table on error path (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 94.83%
commit-author Eric Auger <eric.auger@redhat.com>
commit dca4d60f5f8c9263f8f66724fa4750abd32d8db0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/dca4d60f.failed

If alloc_pages_node() fails, pasid_table is leaked. Free it.

Fixes: cc580e41260db ("iommu/vt-d: Per PCI device pasid table interfaces")

	Signed-off-by: Eric Auger <eric.auger@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit dca4d60f5f8c9263f8f66724fa4750abd32d8db0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-pasid.c
diff --cc drivers/iommu/intel-pasid.c
index 3a9a3f77a014,2fefeafda437..000000000000
--- a/drivers/iommu/intel-pasid.c
+++ b/drivers/iommu/intel-pasid.c
@@@ -144,14 -146,18 +144,21 @@@ int intel_pasid_alloc_table(struct devi
  		return -ENOMEM;
  	INIT_LIST_HEAD(&pasid_table->dev);
  
 -	if (info->pasid_supported)
 -		max_pasid = min_t(int, pci_max_pasids(to_pci_dev(dev)),
 -				  intel_pasid_max_id);
 -
 -	size = max_pasid >> (PASID_PDE_SHIFT - 3);
 -	order = size ? get_order(size) : 0;
 +	size = sizeof(struct pasid_entry);
 +	count = min_t(int, pci_max_pasids(to_pci_dev(dev)), intel_pasid_max_id);
 +	order = get_order(size * count);
  	pages = alloc_pages_node(info->iommu->node,
++<<<<<<< HEAD
 +				 GFP_ATOMIC | __GFP_ZERO,
 +				 order);
 +	if (!pages)
++=======
+ 				 GFP_KERNEL | __GFP_ZERO, order);
+ 	if (!pages) {
+ 		kfree(pasid_table);
++>>>>>>> dca4d60f5f8c (iommu/vt-d: Fix leak in intel_pasid_alloc_table on error path)
  		return -ENOMEM;
+ 	}
  
  	pasid_table->table = page_address(pages);
  	pasid_table->order = order;
* Unmerged path drivers/iommu/intel-pasid.c
