PCI/PM: Clear PCIe PME Status even for legacy power management

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit ec6a75ef8e33fe33f963b916fd902c52a0be33ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/ec6a75ef.failed

Previously, pci_pm_resume_noirq() cleared the PME Status bit in the Root
Status register only if the device had no driver or the driver did not
implement legacy power management.  It should clear PME Status regardless
of what sort of power management the driver supports, so do this before
checking for legacy power management.

This affects Root Ports and Root Complex Event Collectors, for which the
usual driver is the PCIe portdrv, which implements new power management, so
this change is just on principle, not to fix any actual defects.

Fixes: a39bd851dccf ("PCI/PM: Clear PCIe PME Status bit in core, not PCIe port driver")
Link: https://lore.kernel.org/r/20191014230016.240912-4-helgaas@kernel.org
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit ec6a75ef8e33fe33f963b916fd902c52a0be33ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci-driver.c
diff --cc drivers/pci/pci-driver.c
index 81c73c8b37c4,0c3086793e4e..000000000000
--- a/drivers/pci/pci-driver.c
+++ b/drivers/pci/pci-driver.c
@@@ -947,7 -931,17 +947,21 @@@ static int pci_pm_resume_noirq(struct d
  	if (dev_pm_smart_suspend_and_suspended(dev))
  		pm_runtime_set_active(dev);
  
++<<<<<<< HEAD
 +	pci_pm_default_resume_early(pci_dev);
++=======
+ 	/*
+ 	 * In the suspend-to-idle case, devices left in D0 during suspend will
+ 	 * stay in D0, so it is not necessary to restore or update their
+ 	 * configuration here and attempting to put them into D0 again is
+ 	 * pointless, so avoid doing that.
+ 	 */
+ 	if (!(pci_dev->skip_bus_pm && pm_suspend_no_platform()))
+ 		pci_pm_default_resume_early(pci_dev);
+ 
+ 	pci_fixup_device(pci_fixup_resume_early, pci_dev);
+ 	pcie_pme_root_status_cleanup(pci_dev);
++>>>>>>> ec6a75ef8e33 (PCI/PM: Clear PCIe PME Status even for legacy power management)
  
  	if (pci_has_legacy_pm_support(pci_dev))
  		return pci_legacy_resume_early(dev);
* Unmerged path drivers/pci/pci-driver.c
