mm/memory_hotplug: make unregister_memory_block_under_nodes() never fail

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author David Hildenbrand <david@redhat.com>
commit a31b264c2b415b29660da0bc2ba291a98629ce51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a31b264c.failed

We really don't want anything during memory hotunplug to fail.  We
always pass a valid memory block device, that check can go.  Avoid
allocating memory and eventually failing.  As we are always called under
lock, we can use a static piece of memory.  This avoids having to put
the structure onto the stack, having to guess about the stack size of
callers.

Patch inspired by a patch from Oscar Salvador.

In the future, there might be no need to iterate over nodes at all.
mem->nid should tell us exactly what to remove.  Memory block devices
with mixed nodes (added during boot) should properly fenced off and
never removed.

Link: http://lkml.kernel.org/r/20190527111152.16324-11-david@redhat.com
	Signed-off-by: David Hildenbrand <david@redhat.com>
	Reviewed-by: Wei Yang <richardw.yang@linux.intel.com>
	Reviewed-by: Oscar Salvador <osalvador@suse.de>
	Acked-by: Michal Hocko <mhocko@suse.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
	Cc: Alex Deucher <alexander.deucher@amd.com>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: Mark Brown <broonie@kernel.org>
	Cc: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>
	Cc: Andrew Banman <andrew.banman@hpe.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Anshuman Khandual <anshuman.khandual@arm.com>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Arun KS <arunks@codeaurora.org>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Chintan Pandya <cpandya@codeaurora.org>
	Cc: Christophe Leroy <christophe.leroy@c-s.fr>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Fenghua Yu <fenghua.yu@intel.com>
	Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Cc: Jun Yao <yaojun8558363@gmail.com>
	Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
	Cc: Logan Gunthorpe <logang@deltatee.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
	Cc: Mathieu Malaterre <malat@debian.org>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
	Cc: "mike.travis@hpe.com" <mike.travis@hpe.com>
	Cc: Nicholas Piggin <npiggin@gmail.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Qian Cai <cai@lca.pw>
	Cc: Rich Felker <dalias@libc.org>
	Cc: Rob Herring <robh@kernel.org>
	Cc: Robin Murphy <robin.murphy@arm.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: Vasily Gorbik <gor@linux.ibm.com>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
	Cc: Yu Zhao <yuzhao@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit a31b264c2b415b29660da0bc2ba291a98629ce51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/node.c
#	include/linux/node.h
diff --cc drivers/base/node.c
index 8598fcbd2a17,beec80649b33..000000000000
--- a/drivers/base/node.c
+++ b/drivers/base/node.c
@@@ -801,23 -802,18 +801,37 @@@ int register_mem_sect_under_node(struc
  	return 0;
  }
  
++<<<<<<< HEAD
 +/* unregister memory section under all nodes that it spans */
 +int unregister_mem_sect_under_nodes(struct memory_block *mem_blk,
 +				    unsigned long phys_index)
++=======
+ /*
+  * Unregister memory block device under all nodes that it spans.
+  * Has to be called with mem_sysfs_mutex held (due to unlinked_nodes).
+  */
+ void unregister_memory_block_under_nodes(struct memory_block *mem_blk)
++>>>>>>> a31b264c2b41 (mm/memory_hotplug: make unregister_memory_block_under_nodes() never fail)
  {
- 	NODEMASK_ALLOC(nodemask_t, unlinked_nodes, GFP_KERNEL);
  	unsigned long pfn, sect_start_pfn, sect_end_pfn;
+ 	static nodemask_t unlinked_nodes;
  
++<<<<<<< HEAD
 +	if (!mem_blk) {
 +		NODEMASK_FREE(unlinked_nodes);
 +		return -EFAULT;
 +	}
 +	if (!unlinked_nodes)
 +		return -ENOMEM;
 +	nodes_clear(*unlinked_nodes);
 +
 +	sect_start_pfn = section_nr_to_pfn(phys_index);
 +	sect_end_pfn = sect_start_pfn + PAGES_PER_SECTION - 1;
++=======
+ 	nodes_clear(unlinked_nodes);
+ 	sect_start_pfn = section_nr_to_pfn(mem_blk->start_section_nr);
+ 	sect_end_pfn = section_nr_to_pfn(mem_blk->end_section_nr);
++>>>>>>> a31b264c2b41 (mm/memory_hotplug: make unregister_memory_block_under_nodes() never fail)
  	for (pfn = sect_start_pfn; pfn <= sect_end_pfn; pfn++) {
  		int nid;
  
diff --cc include/linux/node.h
index 1a557c589ecb,548c226966a2..000000000000
--- a/include/linux/node.h
+++ b/include/linux/node.h
@@@ -139,8 -139,7 +139,12 @@@ extern int register_cpu_under_node(unsi
  extern int unregister_cpu_under_node(unsigned int cpu, unsigned int nid);
  extern int register_mem_sect_under_node(struct memory_block *mem_blk,
  						void *arg);
++<<<<<<< HEAD
 +extern int unregister_mem_sect_under_nodes(struct memory_block *mem_blk,
 +					   unsigned long phys_index);
++=======
+ extern void unregister_memory_block_under_nodes(struct memory_block *mem_blk);
++>>>>>>> a31b264c2b41 (mm/memory_hotplug: make unregister_memory_block_under_nodes() never fail)
  
  extern int register_memory_node_under_compute_node(unsigned int mem_nid,
  						   unsigned int cpu_nid,
@@@ -176,10 -175,8 +180,13 @@@ static inline int register_mem_sect_und
  {
  	return 0;
  }
++<<<<<<< HEAD
 +static inline int unregister_mem_sect_under_nodes(struct memory_block *mem_blk,
 +						  unsigned long phys_index)
++=======
+ static inline void unregister_memory_block_under_nodes(struct memory_block *mem_blk)
++>>>>>>> a31b264c2b41 (mm/memory_hotplug: make unregister_memory_block_under_nodes() never fail)
  {
- 	return 0;
  }
  
  static inline void register_hugetlbfs_with_node(node_registration_func_t reg,
* Unmerged path drivers/base/node.c
* Unmerged path include/linux/node.h
