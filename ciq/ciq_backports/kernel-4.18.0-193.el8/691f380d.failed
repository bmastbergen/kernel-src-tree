RDMA/cxgb3: Use ib_device_set_netdev()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Kamal Heib <kamalheib1@gmail.com>
commit 691f380df242a6725cb4cc706887c293cfba6afc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/691f380d.failed

This change is required to associate the cxgb3 ib_dev with the
underlying net_device, so in the upcoming patch we can call
ib_device_get_netdev().

	Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
Link: https://lore.kernel.org/r/20190807103138.17219-3-kamalheib1@gmail.com
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 691f380df242a6725cb4cc706887c293cfba6afc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb3/iwch_provider.c
diff --cc drivers/infiniband/hw/cxgb3/iwch_provider.c
index ba5689180499,5848e4727b2e..000000000000
--- a/drivers/infiniband/hw/cxgb3/iwch_provider.c
+++ b/drivers/infiniband/hw/cxgb3/iwch_provider.c
@@@ -1345,12 -1268,28 +1345,30 @@@ static const struct ib_device_ops iwch_
  	.query_port = iwch_query_port,
  	.reg_user_mr = iwch_reg_user_mr,
  	.req_notify_cq = iwch_arm_cq,
 -	INIT_RDMA_OBJ_SIZE(ib_pd, iwch_pd, ibpd),
 -	INIT_RDMA_OBJ_SIZE(ib_cq, iwch_cq, ibcq),
 -	INIT_RDMA_OBJ_SIZE(ib_ucontext, iwch_ucontext, ibucontext),
 +	.resize_cq = iwch_resize_cq,
  };
  
+ static int set_netdevs(struct ib_device *ib_dev, struct cxio_rdev *rdev)
+ {
+ 	int ret;
+ 	int i;
+ 
+ 	for (i = 0; i < rdev->port_info.nports; i++) {
+ 		ret = ib_device_set_netdev(ib_dev, rdev->port_info.lldevs[i],
+ 					   i + 1);
+ 		if (ret)
+ 			return ret;
+ 	}
+ 	return 0;
+ }
+ 
  int iwch_register_device(struct iwch_dev *dev)
  {
++<<<<<<< HEAD
 +	int ret;
++=======
+ 	int err;
++>>>>>>> 691f380df242 (RDMA/cxgb3: Use ib_device_set_netdev())
  
  	pr_debug("%s iwch_dev %p\n", __func__, dev);
  	memset(&dev->ibdev.node_guid, 0, sizeof(dev->ibdev.node_guid));
@@@ -1387,30 -1325,17 +1405,38 @@@
  	dev->ibdev.phys_port_cnt = dev->rdev.port_info.nports;
  	dev->ibdev.num_comp_vectors = 1;
  	dev->ibdev.dev.parent = &dev->rdev.rnic_info.pdev->dev;
 +	dev->ibdev.uverbs_abi_ver = IWCH_UVERBS_ABI_VERSION;
  
 -	memcpy(dev->ibdev.iw_ifname, dev->rdev.t3cdev_p->lldev->name,
 -	       sizeof(dev->ibdev.iw_ifname));
 +	dev->ibdev.iwcm = kzalloc(sizeof(struct iw_cm_verbs), GFP_KERNEL);
 +	if (!dev->ibdev.iwcm)
 +		return -ENOMEM;
  
 +	dev->ibdev.iwcm->connect = iwch_connect;
 +	dev->ibdev.iwcm->accept = iwch_accept_cr;
 +	dev->ibdev.iwcm->reject = iwch_reject_cr;
 +	dev->ibdev.iwcm->create_listen = iwch_create_listen;
 +	dev->ibdev.iwcm->destroy_listen = iwch_destroy_listen;
 +	dev->ibdev.iwcm->add_ref = iwch_qp_add_ref;
 +	dev->ibdev.iwcm->rem_ref = iwch_qp_rem_ref;
 +	dev->ibdev.iwcm->get_qp = iwch_get_qp;
 +	memcpy(dev->ibdev.iwcm->ifname, dev->rdev.t3cdev_p->lldev->name,
 +	       sizeof(dev->ibdev.iwcm->ifname));
 +
 +	dev->ibdev.driver_id = RDMA_DRIVER_CXGB3;
  	rdma_set_device_sysfs_group(&dev->ibdev, &iwch_attr_group);
  	ib_set_device_ops(&dev->ibdev, &iwch_dev_ops);
++<<<<<<< HEAD
 +	ret = ib_register_device(&dev->ibdev, "cxgb3_%d");
 +	if (ret)
 +		kfree(dev->ibdev.iwcm);
 +	return ret;
++=======
+ 	err = set_netdevs(&dev->ibdev, &dev->rdev);
+ 	if (err)
+ 		return err;
+ 
+ 	return ib_register_device(&dev->ibdev, "cxgb3_%d");
++>>>>>>> 691f380df242 (RDMA/cxgb3: Use ib_device_set_netdev())
  }
  
  void iwch_unregister_device(struct iwch_dev *dev)
* Unmerged path drivers/infiniband/hw/cxgb3/iwch_provider.c
