bpf: sync bpf.h to tools/ for BPF_F_ADJ_ROOM_ENCAP_L2

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Alan Maguire <alan.maguire@oracle.com>
commit 1db04c300a41e17892bf83ed0d1aa681416ee150
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/1db04c30.failed

Sync include/uapi/linux/bpf.h with tools/ equivalent to add
BPF_F_ADJ_ROOM_ENCAP_L2(len) macro.

	Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 1db04c300a41e17892bf83ed0d1aa681416ee150)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/include/uapi/linux/bpf.h
diff --cc tools/include/uapi/linux/bpf.h
index ec9b995baf20,2e96d0b4bf65..000000000000
--- a/tools/include/uapi/linux/bpf.h
+++ b/tools/include/uapi/linux/bpf.h
@@@ -1516,9 -1509,24 +1516,13 @@@ union bpf_attr 
   * 		* **BPF_ADJ_ROOM_NET**: Adjust room at the network layer
   * 		  (room space is added or removed below the layer 3 header).
   *
 - *		The following flags are supported at this time:
 - *
 - *		* **BPF_F_ADJ_ROOM_FIXED_GSO**: Do not adjust gso_size.
 - *		  Adjusting mss in this way is not allowed for datagrams.
 - *
 - *		* **BPF_F_ADJ_ROOM_ENCAP_L3_IPV4 **:
 - *		* **BPF_F_ADJ_ROOM_ENCAP_L3_IPV6 **:
 - *		  Any new space is reserved to hold a tunnel header.
 - *		  Configure skb offsets and other fields accordingly.
 - *
 - *		* **BPF_F_ADJ_ROOM_ENCAP_L4_GRE **:
 - *		* **BPF_F_ADJ_ROOM_ENCAP_L4_UDP **:
 - *		  Use with ENCAP_L3 flags to further specify the tunnel type.
 + * 		All values for *flags* are reserved for future usage, and must
 + * 		be left at zero.
   *
+  *		* **BPF_F_ADJ_ROOM_ENCAP_L2(len) **:
+  *		  Use with ENCAP_L3/L4 flags to further specify the tunnel
+  *		  type; **len** is the length of the inner MAC header.
+  *
   * 		A call to this helper is susceptible to change the underlaying
   * 		packet buffer. Therefore, at load time, all checks on pointers
   * 		previously done by the verifier are invalidated and must be
@@@ -2520,6 -2665,20 +2524,23 @@@ enum bpf_func_id 
  /* Current network namespace */
  #define BPF_F_CURRENT_NETNS		(-1L)
  
++<<<<<<< HEAD
++=======
+ /* BPF_FUNC_skb_adjust_room flags. */
+ #define BPF_F_ADJ_ROOM_FIXED_GSO	(1ULL << 0)
+ 
+ #define	BPF_ADJ_ROOM_ENCAP_L2_MASK	0xff
+ #define	BPF_ADJ_ROOM_ENCAP_L2_SHIFT	56
+ 
+ #define BPF_F_ADJ_ROOM_ENCAP_L3_IPV4	(1ULL << 1)
+ #define BPF_F_ADJ_ROOM_ENCAP_L3_IPV6	(1ULL << 2)
+ #define BPF_F_ADJ_ROOM_ENCAP_L4_GRE	(1ULL << 3)
+ #define BPF_F_ADJ_ROOM_ENCAP_L4_UDP	(1ULL << 4)
+ #define	BPF_F_ADJ_ROOM_ENCAP_L2(len)	(((__u64)len & \
+ 					  BPF_ADJ_ROOM_ENCAP_L2_MASK) \
+ 					 << BPF_ADJ_ROOM_ENCAP_L2_SHIFT)
+ 
++>>>>>>> 1db04c300a41 (bpf: sync bpf.h to tools/ for BPF_F_ADJ_ROOM_ENCAP_L2)
  /* Mode for BPF_FUNC_skb_adjust_room helper. */
  enum bpf_adj_room_mode {
  	BPF_ADJ_ROOM_NET,
* Unmerged path tools/include/uapi/linux/bpf.h
