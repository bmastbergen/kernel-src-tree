drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Ville Syrj채l채 <ville.syrjala@linux.intel.com>
commit 41e35ffb380bde1379e4030bb5b2ac824d5139cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/41e35ffb.failed

The first come first served apporoach to handling the VBT
child device AUX ch conflicts has backfired. We have machines
in the wild where the VBT specifies both port A eDP and
port E DP (in that order) with port E being the real one.

So let's try to flip the preference around and let the last
child device win once again.

	Cc: stable@vger.kernel.org
	Cc: Jani Nikula <jani.nikula@intel.com>
	Tested-by: Masami Ichikawa <masami256@gmail.com>
	Tested-by: Torsten <freedesktop201910@liggy.de>
Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=111966
Fixes: 36a0f92020dc ("drm/i915/bios: make child device order the priority order")
	Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20191011202030.8829-1-ville.syrjala@linux.intel.com
	Acked-by: Jani Nikula <jani.nikula@intel.com>
(cherry picked from commit 41e35ffb380bde1379e4030bb5b2ac824d5139cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_bios.c
diff --cc drivers/gpu/drm/i915/intel_bios.c
index 4364f42cac6b,f0307b04cc13..000000000000
--- a/drivers/gpu/drm/i915/intel_bios.c
+++ b/drivers/gpu/drm/i915/intel_bios.c
@@@ -1222,16 -1265,12 +1222,21 @@@ static void sanitize_ddc_pin(struct drm
  	if (!info->alternate_ddc_pin)
  		return;
  
 -	p = get_port_by_ddc_pin(dev_priv, info->alternate_ddc_pin);
 -	if (p != PORT_NONE) {
 +	for_each_port_masked(p, (1 << port) - 1) {
 +		struct ddi_vbt_port_info *i = &dev_priv->vbt.ddi_port_info[p];
 +
 +		if (info->alternate_ddc_pin != i->alternate_ddc_pin)
 +			continue;
 +
  		DRM_DEBUG_KMS("port %c trying to use the same DDC pin (0x%x) as port %c, "
  			      "disabling port %c DVI/HDMI support\n",
++<<<<<<< HEAD:drivers/gpu/drm/i915/intel_bios.c
 +			      port_name(p), i->alternate_ddc_pin,
 +			      port_name(port), port_name(p));
++=======
+ 			      port_name(port), info->alternate_ddc_pin,
+ 			      port_name(p), port_name(p));
++>>>>>>> 41e35ffb380b (drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin):drivers/gpu/drm/i915/display/intel_bios.c
  
  		/*
  		 * If we have multiple ports supposedly sharing the
@@@ -1239,12 -1278,17 +1244,26 @@@
  		 * port. Otherwise they share the same ddc bin and
  		 * system couldn't communicate with them separately.
  		 *
++<<<<<<< HEAD:drivers/gpu/drm/i915/intel_bios.c
 +		 * Due to parsing the ports in alphabetical order,
 +		 * a higher port will always clobber a lower one.
 +		 */
 +		i->supports_dvi = false;
 +		i->supports_hdmi = false;
 +		i->alternate_ddc_pin = 0;
++=======
+ 		 * Give inverse child device order the priority,
+ 		 * last one wins. Yes, there are real machines
+ 		 * (eg. Asrock B250M-HDV) where VBT has both
+ 		 * port A and port E with the same AUX ch and
+ 		 * we must pick port E :(
+ 		 */
+ 		info = &dev_priv->vbt.ddi_port_info[p];
+ 
+ 		info->supports_dvi = false;
+ 		info->supports_hdmi = false;
+ 		info->alternate_ddc_pin = 0;
++>>>>>>> 41e35ffb380b (drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin):drivers/gpu/drm/i915/display/intel_bios.c
  	}
  }
  
@@@ -1258,16 -1316,12 +1277,21 @@@ static void sanitize_aux_ch(struct drm_
  	if (!info->alternate_aux_channel)
  		return;
  
 -	p = get_port_by_aux_ch(dev_priv, info->alternate_aux_channel);
 -	if (p != PORT_NONE) {
 +	for_each_port_masked(p, (1 << port) - 1) {
 +		struct ddi_vbt_port_info *i = &dev_priv->vbt.ddi_port_info[p];
 +
 +		if (info->alternate_aux_channel != i->alternate_aux_channel)
 +			continue;
 +
  		DRM_DEBUG_KMS("port %c trying to use the same AUX CH (0x%x) as port %c, "
  			      "disabling port %c DP support\n",
++<<<<<<< HEAD:drivers/gpu/drm/i915/intel_bios.c
 +			      port_name(p), i->alternate_aux_channel,
 +			      port_name(port), port_name(p));
++=======
+ 			      port_name(port), info->alternate_aux_channel,
+ 			      port_name(p), port_name(p));
++>>>>>>> 41e35ffb380b (drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin):drivers/gpu/drm/i915/display/intel_bios.c
  
  		/*
  		 * If we have multiple ports supposedlt sharing the
@@@ -1275,11 -1329,16 +1299,24 @@@
  		 * port. Otherwise they share the same aux channel
  		 * and system couldn't communicate with them separately.
  		 *
++<<<<<<< HEAD:drivers/gpu/drm/i915/intel_bios.c
 +		 * Due to parsing the ports in alphabetical order,
 +		 * a higher port will always clobber a lower one.
 +		 */
 +		i->supports_dp = false;
 +		i->alternate_aux_channel = 0;
++=======
+ 		 * Give inverse child device order the priority,
+ 		 * last one wins. Yes, there are real machines
+ 		 * (eg. Asrock B250M-HDV) where VBT has both
+ 		 * port A and port E with the same AUX ch and
+ 		 * we must pick port E :(
+ 		 */
+ 		info = &dev_priv->vbt.ddi_port_info[p];
+ 
+ 		info->supports_dp = false;
+ 		info->alternate_aux_channel = 0;
++>>>>>>> 41e35ffb380b (drm/i915: Favor last VBT child device with conflicting AUX ch/DDC pin):drivers/gpu/drm/i915/display/intel_bios.c
  	}
  }
  
* Unmerged path drivers/gpu/drm/i915/intel_bios.c
