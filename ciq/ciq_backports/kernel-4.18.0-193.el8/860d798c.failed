ALSA: firewire-lib: operate data block counter in top level of processing for IT context

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit 860d798c370409efbedf66bae2d41b3cbdf14a79
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/860d798c.failed

In ALSA IEC 61883-1/6 packet streaming engine, two types of data block
counter are supported. This commit applies code refactoring to make it
explicitly for IT context.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 860d798c370409efbedf66bae2d41b3cbdf14a79)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/amdtp-stream.c
diff --cc sound/firewire/amdtp-stream.c
index 6572b73cef04,c89083ccd729..000000000000
--- a/sound/firewire/amdtp-stream.c
+++ b/sound/firewire/amdtp-stream.c
@@@ -722,11 -713,20 +714,25 @@@ static void out_stream_callback(struct 
  		syt = calculate_syt(s, cycle);
  		data_blocks = calculate_data_blocks(s, syt);
  		buffer = s->buffer.packets[s->packet_index].buffer;
++<<<<<<< HEAD
 +		pcm_frames = s->process_data_blocks(s, buffer, data_blocks,
 +						    &syt);
++=======
+ 		dbc = s->data_block_counter;
+ 		pcm_frames = s->process_data_blocks(s, buffer, data_blocks, dbc,
+ 						    &syt);
+ 
+ 		if (s->flags & CIP_DBC_IS_END_EVENT)
+ 			dbc = (dbc + data_blocks) & 0xff;
++>>>>>>> 860d798c3704 (ALSA: firewire-lib: operate data block counter in top level of processing for IT context)
  
  		build_it_pkt_header(s, cycle, &template.params, data_blocks,
- 				    syt, i);
+ 				    dbc, syt, i);
+ 
+ 		if (!(s->flags & CIP_DBC_IS_END_EVENT))
+ 			dbc = (dbc + data_blocks) & 0xff;
+ 
+ 		s->data_block_counter = dbc;
  
  		if (queue_out_packet(s, &template.params) < 0) {
  			cancel_stream(s);
* Unmerged path sound/firewire/amdtp-stream.c
