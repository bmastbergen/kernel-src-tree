bnxt_en: Refactor bnxt_init_one() and turn on TPA support on 57500 chips.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] bnxt_en: Refactor bnxt_init_one() and turn on TPA support on 57500 chips (Jonathan Toppins) [1724766]
Rebuild_FUZZ: 99.31%
commit-author Michael Chan <michael.chan@broadcom.com>
commit 7c3809181468a219aa2abd25910bd3b02b89b0de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7c380918.failed

With the new TPA feature in the 57500 chips, we need to discover the
feature first before setting up the netdev features.  Refactor the
the firmware probe and init logic more cleanly into 2 functions and
and make these calls before setting up the netdev features.

	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7c3809181468a219aa2abd25910bd3b02b89b0de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index 32c6d5d2773c,90d20052f113..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -10693,31 -10968,8 +10741,26 @@@ static int bnxt_init_one(struct pci_de
  	if (!BNXT_CHIP_P4_PLUS(bp))
  		bp->flags |= BNXT_FLAG_DOUBLE_DB;
  
- 	rc = bnxt_hwrm_func_drv_rgtr(bp);
- 	if (rc)
- 		goto init_err_pci_clean;
- 
- 	rc = bnxt_hwrm_func_rgtr_async_events(bp, NULL, 0);
- 	if (rc)
- 		goto init_err_pci_clean;
- 
  	bp->ulp_probe = bnxt_ulp_probe;
  
++<<<<<<< HEAD
 +	rc = bnxt_hwrm_queue_qportcfg(bp);
 +	if (rc) {
 +		netdev_err(bp->dev, "hwrm query qportcfg failure rc: %x\n",
 +			   rc);
 +		rc = -1;
 +		goto init_err_pci_clean;
 +	}
 +	/* Get the MAX capabilities for this function */
 +	rc = bnxt_hwrm_func_qcaps(bp);
 +	if (rc) {
 +		netdev_err(bp->dev, "hwrm query capability failure rc: %x\n",
 +			   rc);
 +		rc = -1;
 +		goto init_err_pci_clean;
 +	}
++=======
++>>>>>>> 7c3809181468 (bnxt_en: Refactor bnxt_init_one() and turn on TPA support on 57500 chips.)
  	rc = bnxt_init_mac_addr(bp);
  	if (rc) {
  		dev_err(&pdev->dev, "Unable to initialize mac address.\n");
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt.h b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
index 40decea98910..1752b6ac7976 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
@@ -1442,8 +1442,8 @@ struct bnxt {
 #define BNXT_CHIP_TYPE_NITRO_A0(bp) ((bp)->flags & BNXT_FLAG_CHIP_NITRO_A0)
 #define BNXT_RX_PAGE_MODE(bp)	((bp)->flags & BNXT_FLAG_RX_PAGE_MODE)
 #define BNXT_SUPPORTS_TPA(bp)	(!BNXT_CHIP_TYPE_NITRO_A0(bp) &&	\
-				 !(bp->flags & BNXT_FLAG_CHIP_P5) &&	\
-				 !is_kdump_kernel())
+				 (!((bp)->flags & BNXT_FLAG_CHIP_P5) ||	\
+				  (bp)->max_tpa_v2) && !is_kdump_kernel())
 
 /* Chip class phase 5 */
 #define BNXT_CHIP_P5(bp)			\
