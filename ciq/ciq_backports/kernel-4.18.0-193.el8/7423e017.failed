iommu: Add API to request DMA domain for device

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] Add API to request DMA domain for device (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 91.95%
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit 7423e01741dd6a5f1255f589145313f0fb1c8cbe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7423e017.failed

Normally during iommu probing a device, a default doamin will
be allocated and attached to the device. The domain type of
the default domain is statically defined, which results in a
situation where the allocated default domain isn't suitable
for the device due to some limitations. We already have API
iommu_request_dm_for_dev() to replace a DMA domain with an
identity one. This adds iommu_request_dma_domain_for_dev()
to request a dma domain if an allocated identity domain isn't
suitable for the device in question.

	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 7423e01741dd6a5f1255f589145313f0fb1c8cbe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/iommu.c
diff --cc drivers/iommu/iommu.c
index 186a97d654d3,2fca04c3dbaf..000000000000
--- a/drivers/iommu/iommu.c
+++ b/drivers/iommu/iommu.c
@@@ -1920,9 -1949,10 +1921,14 @@@ request_default_domain_for_dev(struct d
  	/* Make the direct mapped domain the default for this group */
  	if (group->default_domain)
  		iommu_domain_free(group->default_domain);
- 	group->default_domain = dm_domain;
+ 	group->default_domain = domain;
  
++<<<<<<< HEAD
 +	pr_info("Using direct mapping for device %s\n", dev_name(dev));
++=======
+ 	dev_info(dev, "Using iommu %s mapping\n",
+ 		 type == IOMMU_DOMAIN_DMA ? "dma" : "direct");
++>>>>>>> 7423e01741dd (iommu: Add API to request DMA domain for device)
  
  	ret = 0;
  out:
* Unmerged path drivers/iommu/iommu.c
diff --git a/include/linux/iommu.h b/include/linux/iommu.h
index 19668cb5b1d5..a29265b043b5 100644
--- a/include/linux/iommu.h
+++ b/include/linux/iommu.h
@@ -307,6 +307,7 @@ extern void iommu_set_fault_handler(struct iommu_domain *domain,
 extern void iommu_get_resv_regions(struct device *dev, struct list_head *list);
 extern void iommu_put_resv_regions(struct device *dev, struct list_head *list);
 extern int iommu_request_dm_for_dev(struct device *dev);
+extern int iommu_request_dma_domain_for_dev(struct device *dev);
 extern struct iommu_resv_region *
 iommu_alloc_resv_region(phys_addr_t start, size_t length, int prot,
 			enum iommu_resv_type type);
@@ -545,6 +546,11 @@ static inline int iommu_request_dm_for_dev(struct device *dev)
 	return -ENODEV;
 }
 
+static inline int iommu_request_dma_domain_for_dev(struct device *dev)
+{
+	return -ENODEV;
+}
+
 static inline int iommu_attach_group(struct iommu_domain *domain,
 				     struct iommu_group *group)
 {
