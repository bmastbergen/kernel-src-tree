ext4: don't allow any modifications to an immutable file

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 2e53840362771c73eb0a5ff71611507e64e8eecd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/2e538403.failed

Don't allow any modifications to a file that's marked immutable, which
means that we have to flush all the writable pages to make the readonly
and we have to check the setattr/setflags parameters more closely.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@kernel.org
(cherry picked from commit 2e53840362771c73eb0a5ff71611507e64e8eecd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/ioctl.c
diff --cc fs/ext4/ioctl.c
index 525127c7fd81,7af835ac8d23..000000000000
--- a/fs/ext4/ioctl.c
+++ b/fs/ext4/ioctl.c
@@@ -322,6 -346,37 +345,40 @@@ static int ext4_ioctl_setflags(struct i
  			goto flags_out;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if ((flags ^ oldflags) & EXT4_CASEFOLD_FL) {
+ 		if (!ext4_has_feature_casefold(sb)) {
+ 			err = -EOPNOTSUPP;
+ 			goto flags_out;
+ 		}
+ 
+ 		if (!S_ISDIR(inode->i_mode)) {
+ 			err = -ENOTDIR;
+ 			goto flags_out;
+ 		}
+ 
+ 		if (!ext4_empty_dir(inode)) {
+ 			err = -ENOTEMPTY;
+ 			goto flags_out;
+ 		}
+ 	}
+ 
+ 	/*
+ 	 * Wait for all pending directio and then flush all the dirty pages
+ 	 * for this file.  The flush marks all the pages readonly, so any
+ 	 * subsequent attempt to write to the file (particularly mmap pages)
+ 	 * will come through the filesystem and fail.
+ 	 */
+ 	if (S_ISREG(inode->i_mode) && !IS_IMMUTABLE(inode) &&
+ 	    (flags & EXT4_IMMUTABLE_FL)) {
+ 		inode_dio_wait(inode);
+ 		err = filemap_write_and_wait(inode->i_mapping);
+ 		if (err)
+ 			goto flags_out;
+ 	}
+ 
++>>>>>>> 2e5384036277 (ext4: don't allow any modifications to an immutable file)
  	handle = ext4_journal_start(inode, EXT4_HT_INODE, 1);
  	if (IS_ERR(handle)) {
  		err = PTR_ERR(handle);
* Unmerged path fs/ext4/ioctl.c
