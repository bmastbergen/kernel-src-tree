net/mlx5e: Generalize vport type in vport representor

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: Generalize vport type in vport representor (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.08%
commit-author Vu Pham <vuhuong@mellanox.com>
commit 9b81d5a9945bc696c2e653757778e79495b164a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/9b81d5a9.failed

Beside the special vports (PF/uplink/ecpf), the rest of the vports
are similar.
Remove vf_ prefix from function and variable names.

This patch does not change any functionality.

	Signed-off-by: Vu Pham <vuhuong@mellanox.com>
	Reviewed-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Bodong Wang <bodong@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 9b81d5a9945bc696c2e653757778e79495b164a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 21f28aa252f3,dde0021bd5ee..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -166,17 -166,6 +166,20 @@@ static void mlx5e_uplink_rep_update_hw_
  	vport_stats->tx_bytes   = PPORT_802_3_GET(pstats, a_octets_transmitted_ok);
  }
  
++<<<<<<< HEAD
 +static void mlx5e_rep_update_hw_counters(struct mlx5e_priv *priv)
 +{
 +	struct mlx5e_rep_priv *rpriv = priv->ppriv;
 +	struct mlx5_eswitch_rep *rep = rpriv->rep;
 +
 +	if (rep->vport == FDB_UPLINK_VPORT)
 +		mlx5e_uplink_rep_update_hw_counters(priv);
 +	else
 +		mlx5e_vf_rep_update_hw_counters(priv);
 +}
 +
++=======
++>>>>>>> 9b81d5a9945b (net/mlx5e: Generalize vport type in vport representor)
  static void mlx5e_rep_update_sw_counters(struct mlx5e_priv *priv)
  {
  	struct mlx5e_sw_stats *s = &priv->stats.sw;
@@@ -1323,20 -1307,17 +1326,31 @@@ static int mlx5e_uplink_rep_set_vf_vlan
  	return 0;
  }
  
++<<<<<<< HEAD
 +static const struct switchdev_ops mlx5e_rep_switchdev_ops = {
 +	.switchdev_port_attr_get	= mlx5e_attr_get,
 +};
 +
 +static const struct net_device_ops mlx5e_netdev_ops_vf_rep = {
 +	.ndo_open                = mlx5e_vf_rep_open,
 +	.ndo_stop                = mlx5e_vf_rep_close,
++=======
+ static const struct net_device_ops mlx5e_netdev_ops_rep = {
+ 	.ndo_open                = mlx5e_rep_open,
+ 	.ndo_stop                = mlx5e_rep_close,
++>>>>>>> 9b81d5a9945b (net/mlx5e: Generalize vport type in vport representor)
  	.ndo_start_xmit          = mlx5e_xmit,
  	.ndo_get_phys_port_name  = mlx5e_rep_get_phys_port_name,
  	.ndo_setup_tc            = mlx5e_rep_setup_tc,
- 	.ndo_get_stats64         = mlx5e_vf_rep_get_stats,
+ 	.ndo_get_stats64         = mlx5e_rep_get_stats,
  	.ndo_has_offload_stats	 = mlx5e_rep_has_offload_stats,
  	.ndo_get_offload_stats	 = mlx5e_rep_get_offload_stats,
++<<<<<<< HEAD
 +	.ndo_change_mtu          = mlx5e_vf_rep_change_mtu,
++=======
+ 	.ndo_change_mtu          = mlx5e_rep_change_mtu,
+ 	.ndo_get_port_parent_id	 = mlx5e_rep_get_port_parent_id,
++>>>>>>> 9b81d5a9945b (net/mlx5e: Generalize vport type in vport representor)
  };
  
  static const struct net_device_ops mlx5e_netdev_ops_uplink_rep = {
@@@ -1770,7 -1748,8 +1784,12 @@@ mlx5e_vport_rep_load(struct mlx5_core_d
  	rpriv->rep = rep;
  
  	nch = mlx5e_get_max_num_channels(dev);
++<<<<<<< HEAD
 +	profile = (rep->vport == FDB_UPLINK_VPORT) ? &mlx5e_uplink_rep_profile : &mlx5e_vf_rep_profile;
++=======
+ 	profile = (rep->vport == MLX5_VPORT_UPLINK) ?
+ 		  &mlx5e_uplink_rep_profile : &mlx5e_rep_profile;
++>>>>>>> 9b81d5a9945b (net/mlx5e: Generalize vport type in vport representor)
  	netdev = mlx5e_create_netdev(dev, profile, nch, rpriv);
  	if (!netdev) {
  		pr_warn("Failed to create representor netdev for vport %d\n",
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
