ceph: take the inode lock before acquiring cap refs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jeff Layton <jlayton@kernel.org>
commit a81bc3102b4ffb885f34855d0133f862f915ab13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a81bc310.failed

Most of the time, we (or the vfs layer) takes the inode_lock and then
acquires caps, but ceph_read_iter does the opposite, and that can lead
to a deadlock.

When there are multiple clients treading over the same data, we can end
up in a situation where a reader takes caps and then tries to acquire
the inode_lock. Another task holds the inode_lock and issues a request
to the MDS which needs to revoke the caps, but that can't happen until
the inode_lock is unwedged.

Fix this by having ceph_read_iter take the inode_lock earlier, before
attempting to acquire caps.

Fixes: 321fe13c9398 ("ceph: add buffered/direct exclusionary locking for reads and writes")
Link: https://tracker.ceph.com/issues/36348
	Signed-off-by: Jeff Layton <jlayton@kernel.org>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit a81bc3102b4ffb885f34855d0133f862f915ab13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/file.c
diff --cc fs/ceph/file.c
index 78f6092117e7,06efeaff3b57..000000000000
--- a/fs/ceph/file.c
+++ b/fs/ceph/file.c
@@@ -1255,9 -1273,15 +1260,20 @@@ again
  		want = CEPH_CAP_FILE_CACHE | CEPH_CAP_FILE_LAZYIO;
  	else
  		want = CEPH_CAP_FILE_CACHE;
++<<<<<<< HEAD
 +	ret = ceph_get_caps(ci, CEPH_CAP_FILE_RD, want, -1, &got, &pinned_page);
 +	if (ret < 0)
++=======
+ 	ret = ceph_get_caps(filp, CEPH_CAP_FILE_RD, want, -1,
+ 			    &got, &pinned_page);
+ 	if (ret < 0) {
+ 		if (iocb->ki_flags & IOCB_DIRECT)
+ 			ceph_end_io_direct(inode);
+ 		else
+ 			ceph_end_io_read(inode);
++>>>>>>> a81bc3102b4f (ceph: take the inode lock before acquiring cap refs)
  		return ret;
+ 	}
  
  	if ((got & (CEPH_CAP_FILE_CACHE|CEPH_CAP_FILE_LAZYIO)) == 0 ||
  	    (iocb->ki_flags & IOCB_DIRECT) ||
* Unmerged path fs/ceph/file.c
