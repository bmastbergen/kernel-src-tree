openvswitch: load and reference the NAT helper.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Flavio Leitner <fbl@redhat.com>
commit fec9c271b8f1bde1086be5aa415cdb586e0dc800
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/fec9c271.failed

This improves the original commit 17c357efe5ec ("openvswitch: load
NAT helper") where it unconditionally tries to load the module for
every flow using NAT, so not efficient when loading multiple flows.
It also doesn't hold any references to the NAT module while the
flow is active.

This change fixes those problems. It will try to load the module
only if it's not present. It grabs a reference to the NAT module
and holds it while the flow is active. Finally, an error message
shows up if either actions above fails.

Fixes: 17c357efe5ec ("openvswitch: load NAT helper")
	Signed-off-by: Flavio Leitner <fbl@redhat.com>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit fec9c271b8f1bde1086be5aa415cdb586e0dc800)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/conntrack.c
diff --cc net/openvswitch/conntrack.c
index 651369c56694,c4128082f88b..000000000000
--- a/net/openvswitch/conntrack.c
+++ b/net/openvswitch/conntrack.c
@@@ -1320,16 -1322,24 +1321,24 @@@ static int ovs_ct_add_helper(struct ovs
  		return -ENOMEM;
  	}
  
+ #ifdef CONFIG_NF_NAT_NEEDED
+ 	if (info->nat) {
+ 		ret = nf_nat_helper_try_module_get(name, info->family,
+ 						   key->ip.proto);
+ 		if (ret) {
+ 			nf_conntrack_helper_put(helper);
+ 			OVS_NLERR(log, "Failed to load \"%s\" NAT helper, error: %d",
+ 				  name, ret);
+ 			return ret;
+ 		}
+ 	}
+ #endif
  	rcu_assign_pointer(help->helper, helper);
  	info->helper = helper;
- 
- 	if (info->nat)
- 		request_module("ip_nat_%s", name);
- 
- 	return 0;
+ 	return ret;
  }
  
 -#if IS_ENABLED(CONFIG_NF_NAT)
 +#ifdef CONFIG_NF_NAT_NEEDED
  static int parse_nat(const struct nlattr *attr,
  		     struct ovs_conntrack_info *info, bool log)
  {
@@@ -1777,10 -1810,18 +1786,21 @@@ void ovs_ct_free_action(const struct nl
  
  static void __ovs_ct_free_action(struct ovs_conntrack_info *ct_info)
  {
- 	if (ct_info->helper)
+ 	if (ct_info->helper) {
+ #ifdef CONFIG_NF_NAT_NEEDED
+ 		if (ct_info->nat)
+ 			nf_nat_helper_put(ct_info->helper);
+ #endif
  		nf_conntrack_helper_put(ct_info->helper);
++<<<<<<< HEAD
 +	if (ct_info->ct)
++=======
+ 	}
+ 	if (ct_info->ct) {
+ 		if (ct_info->timeout[0])
+ 			nf_ct_destroy_timeout(ct_info->ct);
++>>>>>>> fec9c271b8f1 (openvswitch: load and reference the NAT helper.)
  		nf_ct_tmpl_free(ct_info->ct);
 -	}
  }
  
  #if	IS_ENABLED(CONFIG_NETFILTER_CONNCOUNT)
* Unmerged path net/openvswitch/conntrack.c
