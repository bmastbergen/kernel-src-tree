NFS/flexfiles: Simplify nfs4_ff_find_or_create_ds_client()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 561d6f8aaffcc9d346e452361a6d80cb8461799d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/561d6f8a.failed

Pass in a pointer to the mirror rather than forcing another
array access.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 561d6f8aaffcc9d346e452361a6d80cb8461799d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/flexfilelayout/flexfilelayoutdev.c
diff --cc fs/nfs/flexfilelayout/flexfilelayoutdev.c
index 17fa3223959f,1fe66745f452..000000000000
--- a/fs/nfs/flexfilelayout/flexfilelayoutdev.c
+++ b/fs/nfs/flexfilelayout/flexfilelayoutdev.c
@@@ -472,15 -463,18 +472,24 @@@ ff_layout_get_ds_cred(struct pnfs_layou
  }
  
  /**
++<<<<<<< HEAD
 +* Find or create a DS rpc client with th MDS server rpc client auth flavor
 +* in the nfs_client cl_ds_clients list.
 +*/
++=======
+  * nfs4_ff_find_or_create_ds_client - Find or create a DS rpc client
+  * @mirror: pointer to the mirror
+  * @ds_clp: nfs_client for the DS
+  * @inode: pointer to inode
+  *
+  * Find or create a DS rpc client with th MDS server rpc client auth flavor
+  * in the nfs_client cl_ds_clients list.
+  */
++>>>>>>> 561d6f8aaffc (NFS/flexfiles: Simplify nfs4_ff_find_or_create_ds_client())
  struct rpc_clnt *
- nfs4_ff_find_or_create_ds_client(struct pnfs_layout_segment *lseg, u32 ds_idx,
+ nfs4_ff_find_or_create_ds_client(struct nfs4_ff_layout_mirror *mirror,
  				 struct nfs_client *ds_clp, struct inode *inode)
  {
- 	struct nfs4_ff_layout_mirror *mirror = FF_LAYOUT_COMP(lseg, ds_idx);
- 
  	switch (mirror->mirror_ds->ds_versions[0].version) {
  	case 3:
  		/* For NFSv3 DS, flavor is set when creating DS connections */
diff --git a/fs/nfs/flexfilelayout/flexfilelayout.c b/fs/nfs/flexfilelayout/flexfilelayout.c
index e73fa899eaa9..d5022a2e2d7f 100644
--- a/fs/nfs/flexfilelayout/flexfilelayout.c
+++ b/fs/nfs/flexfilelayout/flexfilelayout.c
@@ -1732,7 +1732,7 @@ ff_layout_read_pagelist(struct nfs_pgio_header *hdr)
 	if (!ds)
 		goto out_failed;
 
-	ds_clnt = nfs4_ff_find_or_create_ds_client(lseg, idx, ds->ds_clp,
+	ds_clnt = nfs4_ff_find_or_create_ds_client(mirror, ds->ds_clp,
 						   hdr->inode);
 	if (IS_ERR(ds_clnt))
 		goto out_failed;
@@ -1795,7 +1795,7 @@ ff_layout_write_pagelist(struct nfs_pgio_header *hdr, int sync)
 	if (!ds)
 		goto out_failed;
 
-	ds_clnt = nfs4_ff_find_or_create_ds_client(lseg, idx, ds->ds_clp,
+	ds_clnt = nfs4_ff_find_or_create_ds_client(mirror, ds->ds_clp,
 						   hdr->inode);
 	if (IS_ERR(ds_clnt))
 		goto out_failed;
@@ -1878,7 +1878,7 @@ static int ff_layout_initiate_commit(struct nfs_commit_data *data, int how)
 	if (!ds)
 		goto out_err;
 
-	ds_clnt = nfs4_ff_find_or_create_ds_client(lseg, idx, ds->ds_clp,
+	ds_clnt = nfs4_ff_find_or_create_ds_client(mirror, ds->ds_clp,
 						   data->inode);
 	if (IS_ERR(ds_clnt))
 		goto out_err;
diff --git a/fs/nfs/flexfilelayout/flexfilelayout.h b/fs/nfs/flexfilelayout/flexfilelayout.h
index 2baeecfcf13c..4bcc6ec03701 100644
--- a/fs/nfs/flexfilelayout/flexfilelayout.h
+++ b/fs/nfs/flexfilelayout/flexfilelayout.h
@@ -214,8 +214,7 @@ nfs4_ff_layout_prepare_ds(struct pnfs_layout_segment *lseg, u32 ds_idx,
 			  bool fail_return);
 
 struct rpc_clnt *
-nfs4_ff_find_or_create_ds_client(struct pnfs_layout_segment *lseg,
-				 u32 ds_idx,
+nfs4_ff_find_or_create_ds_client(struct nfs4_ff_layout_mirror *mirror,
 				 struct nfs_client *ds_clp,
 				 struct inode *inode);
 struct rpc_cred *ff_layout_get_ds_cred(struct pnfs_layout_segment *lseg,
* Unmerged path fs/nfs/flexfilelayout/flexfilelayoutdev.c
