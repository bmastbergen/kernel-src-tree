drm/mipi-dbi: fix a loop in debugfs code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit d72cf01f410aa09868d98b672f3f92328c96b32d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d72cf01f.failed

This code will likely crash if we try to do a zero byte write.  The code
looks like this:

        /* strip trailing whitespace */
        for (i = count - 1; i > 0; i--)
                if (isspace(buf[i]))
			...

We're writing zero bytes so count = 0.  You would think that "count - 1"
would be negative one, but because "i" is unsigned it is a large
positive numer instead.  The "i > 0" condition is true and the "buf[i]"
access will be out of bounds.

The fix is to make "i" signed and now everything works as expected.  The
upper bound of "count" is capped in __kernel_write() at MAX_RW_COUNT so
we don't have to worry about it being higher than INT_MAX.

Fixes: 02dd95fe3169 ("drm/tinydrm: Add MIPI DBI support")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
[noralf: Adjust title]
	Signed-off-by: Noralf Tr√∏nnes <noralf@tronnes.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20190821072456.GJ26957@mwanda
(cherry picked from commit d72cf01f410aa09868d98b672f3f92328c96b32d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/tinydrm/mipi-dbi.c
diff --cc drivers/gpu/drm/tinydrm/mipi-dbi.c
index 918f77c7de34,c4ee2709a6f3..000000000000
--- a/drivers/gpu/drm/tinydrm/mipi-dbi.c
+++ b/drivers/gpu/drm/tinydrm/mipi-dbi.c
@@@ -972,15 -1184,19 +972,22 @@@ static ssize_t mipi_dbi_debugfs_command
  					      size_t count, loff_t *ppos)
  {
  	struct seq_file *m = file->private_data;
 -	struct mipi_dbi_dev *dbidev = m->private;
 +	struct mipi_dbi *mipi = m->private;
  	u8 val, cmd = 0, parameters[64];
  	char *buf, *pos, *token;
++<<<<<<< HEAD:drivers/gpu/drm/tinydrm/mipi-dbi.c
 +	unsigned int i;
 +	int ret;
++=======
+ 	int i, ret, idx;
+ 
+ 	if (!drm_dev_enter(&dbidev->drm, &idx))
+ 		return -ENODEV;
++>>>>>>> d72cf01f410a (drm/mipi-dbi: fix a loop in debugfs code):drivers/gpu/drm/drm_mipi_dbi.c
  
  	buf = memdup_user_nul(ubuf, count);
 -	if (IS_ERR(buf)) {
 -		ret = PTR_ERR(buf);
 -		goto err_exit;
 -	}
 +	if (IS_ERR(buf))
 +		return PTR_ERR(buf);
  
  	/* strip trailing whitespace */
  	for (i = count - 1; i > 0; i--)
* Unmerged path drivers/gpu/drm/tinydrm/mipi-dbi.c
