net: devlink: extend port attrs for switch ID

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] devlink: extend port attrs for switch ID (Petr Oros) [1737133]
Rebuild_FUZZ: 94.12%
commit-author Jiri Pirko <jiri@mellanox.com>
commit bec5267cded268acdf679b651778c300d204e9f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/bec5267c.failed

Extend devlink_port_attrs_set() to pass switch ID for ports which are
part of switch and store it in port attrs. For other ports, this is
NULL.

Note that this allows the driver to group devlink ports into one or more
switches according to the actual topology.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bec5267cded268acdf679b651778c300d204e9f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
#	include/net/devlink.h
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
index 5c786cbe162c,36ec4cb45276..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
@@@ -226,6 -229,22 +226,25 @@@ int bnxt_dl_register(struct bnxt *bp
  		goto err_dl_unreg;
  	}
  
++<<<<<<< HEAD
++=======
+ 	devlink_port_attrs_set(&bp->dl_port, DEVLINK_PORT_FLAVOUR_PHYSICAL,
+ 			       bp->pf.port_id, false, 0, NULL, 0);
+ 	rc = devlink_port_register(dl, &bp->dl_port, bp->pf.port_id);
+ 	if (rc) {
+ 		netdev_err(bp->dev, "devlink_port_register failed");
+ 		goto err_dl_param_unreg;
+ 	}
+ 	devlink_port_type_eth_set(&bp->dl_port, bp->dev);
+ 
+ 	rc = devlink_port_params_register(&bp->dl_port, bnxt_dl_port_params,
+ 					  ARRAY_SIZE(bnxt_dl_port_params));
+ 	if (rc) {
+ 		netdev_err(bp->dev, "devlink_port_params_register failed");
+ 		goto err_dl_port_unreg;
+ 	}
+ 
++>>>>>>> bec5267cded2 (net: devlink: extend port attrs for switch ID)
  	devlink_params_publish(dl);
  
  	return 0;
diff --cc include/net/devlink.h
index b709c4086baa,0f7968761204..000000000000
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@@ -567,9 -584,9 +569,15 @@@ void devlink_port_type_clear(struct dev
  void devlink_port_attrs_set(struct devlink_port *devlink_port,
  			    enum devlink_port_flavour flavour,
  			    u32 port_number, bool split,
++<<<<<<< HEAD
 +			    u32 split_subport_number);
 +int devlink_port_get_phys_port_name(struct devlink_port *devlink_port,
 +				    char *name, size_t len);
++=======
+ 			    u32 split_subport_number,
+ 			    const unsigned char *switch_id,
+ 			    unsigned char switch_id_len);
++>>>>>>> bec5267cded2 (net: devlink: extend port attrs for switch ID)
  int devlink_sb_register(struct devlink *devlink, unsigned int sb_index,
  			u32 size, u16 ingress_pools_count,
  			u16 egress_pools_count, u16 ingress_tc_count,
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
diff --git a/drivers/net/ethernet/mellanox/mlxsw/core.c b/drivers/net/ethernet/mellanox/mlxsw/core.c
index 743465428b03..199b66468592 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/core.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core.c
@@ -1736,7 +1736,8 @@ int mlxsw_core_port_init(struct mlxsw_core *mlxsw_core, u8 local_port,
 
 	mlxsw_core_port->local_port = local_port;
 	devlink_port_attrs_set(devlink_port, DEVLINK_PORT_FLAVOUR_PHYSICAL,
-			       port_number, split, split_port_subnumber);
+			       port_number, split, split_port_subnumber,
+			       NULL, 0);
 	err = devlink_port_register(devlink, devlink_port, local_port);
 	if (err)
 		memset(mlxsw_core_port, 0, sizeof(*mlxsw_core_port));
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_devlink.c b/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
index db2da99f6aa7..c3230bb5c93c 100644
--- a/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
@@ -365,7 +365,7 @@ int nfp_devlink_port_register(struct nfp_app *app, struct nfp_port *port)
 	devlink_port_type_eth_set(&port->dl_port, port->netdev);
 	devlink_port_attrs_set(&port->dl_port, DEVLINK_PORT_FLAVOUR_PHYSICAL,
 			       eth_port.label_port, eth_port.is_split,
-			       eth_port.label_subport);
+			       eth_port.label_subport, NULL, 0);
 
 	devlink = priv_to_devlink(app->pf);
 
* Unmerged path include/net/devlink.h
diff --git a/net/core/devlink.c b/net/core/devlink.c
index 48f0a56ab944..65eef00e6ce1 100644
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@ -5455,11 +5455,16 @@ EXPORT_SYMBOL_GPL(devlink_port_type_clear);
  *	@split: indicates if this is split port
  *	@split_subport_number: if the port is split, this is the number
  *	                       of subport.
+ *	@switch_id: if the port is part of switch, this is buffer with ID,
+ *	            otwerwise this is NULL
+ *	@switch_id_len: length of the switch_id buffer
  */
 void devlink_port_attrs_set(struct devlink_port *devlink_port,
 			    enum devlink_port_flavour flavour,
 			    u32 port_number, bool split,
-			    u32 split_subport_number)
+			    u32 split_subport_number,
+			    const unsigned char *switch_id,
+			    unsigned char switch_id_len)
 {
 	struct devlink_port_attrs *attrs = &devlink_port->attrs;
 
@@ -5470,6 +5475,15 @@ void devlink_port_attrs_set(struct devlink_port *devlink_port,
 	attrs->port_number = port_number;
 	attrs->split = split;
 	attrs->split_subport_number = split_subport_number;
+	if (switch_id) {
+		attrs->switch_port = true;
+		if (WARN_ON(switch_id_len > MAX_PHYS_ITEM_ID_LEN))
+			switch_id_len = MAX_PHYS_ITEM_ID_LEN;
+		memcpy(attrs->switch_id.id, switch_id, switch_id_len);
+		attrs->switch_id.id_len = switch_id_len;
+	} else {
+		attrs->switch_port = false;
+	}
 }
 EXPORT_SYMBOL_GPL(devlink_port_attrs_set);
 
diff --git a/net/dsa/dsa2.c b/net/dsa/dsa2.c
index d3de7955f981..3472b9dc341c 100644
--- a/net/dsa/dsa2.c
+++ b/net/dsa/dsa2.c
@@ -285,7 +285,7 @@ static int dsa_port_setup(struct dsa_port *dp)
 	 * independent from front panel port numbers.
 	 */
 	devlink_port_attrs_set(&dp->devlink_port, flavour,
-			       dp->index, false, 0);
+			       dp->index, false, 0, NULL, 0);
 	err = devlink_port_register(ds->devlink, &dp->devlink_port,
 				    dp->index);
 	if (err)
