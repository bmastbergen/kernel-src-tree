PM-runtime: Consolidate code to get active/suspended time

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit fdc56c073270af2f4d223c96a5fff3048352fc03
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/fdc56c07.failed

In a step to consolidate the code for fetching the PM-runtime
active/suspended time for a device, add a common function for that
and make the existing pm_runtime_suspended_time() call it.

Also add a corresponding pm_runtime_active_time() calling the new
common function.

	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
[ rjw: Changelog, function rename ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit fdc56c073270af2f4d223c96a5fff3048352fc03)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/power/runtime.c
diff --cc drivers/base/power/runtime.c
index 8118edb25602,32f6bf076bd7..000000000000
--- a/drivers/base/power/runtime.c
+++ b/drivers/base/power/runtime.c
@@@ -86,19 -98,30 +86,33 @@@ static void __update_runtime_status(str
  	dev->power.runtime_status = status;
  }
  
- u64 pm_runtime_suspended_time(struct device *dev)
+ static u64 rpm_get_accounted_time(struct device *dev, bool suspended)
  {
 -	u64 time;
 -	unsigned long flags;
 +	unsigned long flags, time;
  
  	spin_lock_irqsave(&dev->power.lock, flags);
  
  	update_pm_runtime_accounting(dev);
++<<<<<<< HEAD
 +	time = dev->power.suspended_jiffies;
++=======
+ 	time = suspended ? dev->power.suspended_time : dev->power.active_time;
++>>>>>>> fdc56c073270 (PM-runtime: Consolidate code to get active/suspended time)
  
  	spin_unlock_irqrestore(&dev->power.lock, flags);
  
 -	return time;
 +	return jiffies_to_nsecs(time);
  }
+ 
+ u64 pm_runtime_active_time(struct device *dev)
+ {
+ 	return rpm_get_accounted_time(dev, false);
+ }
+ 
+ u64 pm_runtime_suspended_time(struct device *dev)
+ {
+ 	return rpm_get_accounted_time(dev, true);
+ }
  EXPORT_SYMBOL_GPL(pm_runtime_suspended_time);
  
  /**
diff --git a/drivers/base/power/power.h b/drivers/base/power/power.h
index c511def48b48..ec33fbdb919b 100644
--- a/drivers/base/power/power.h
+++ b/drivers/base/power/power.h
@@ -21,6 +21,7 @@ static inline void pm_runtime_early_init(struct device *dev)
 extern void pm_runtime_init(struct device *dev);
 extern void pm_runtime_reinit(struct device *dev);
 extern void pm_runtime_remove(struct device *dev);
+extern u64 pm_runtime_active_time(struct device *dev);
 
 #define WAKE_IRQ_DEDICATED_ALLOCATED	BIT(0)
 #define WAKE_IRQ_DEDICATED_MANAGED	BIT(1)
* Unmerged path drivers/base/power/runtime.c
