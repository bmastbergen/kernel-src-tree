netlink: do not store start function in netlink_cb

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Florian Westphal <fw@strlen.de>
commit 3730cf4dd70b6a36e48d58a862120311411b77f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3730cf4d.failed

->start() is called once when dump is being initialized, there is no
need to store it in netlink_cb.

	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3730cf4dd70b6a36e48d58a862120311411b77f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netlink/af_netlink.c
diff --cc net/netlink/af_netlink.c
index cc08d97cff76,f6ac7693d2cc..000000000000
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@@ -2351,11 -2308,8 +2350,16 @@@ int __netlink_dump_start(struct sock *s
  	cb->min_dump_alloc = control->min_dump_alloc;
  	cb->skb = skb;
  
++<<<<<<< HEAD
 +	nlk2 = nlk_sk(NETLINK_CB(skb).sk);
 +	cb->strict_check = !!(nlk2->flags & NETLINK_F_STRICT_CHK);
 +
 +	if (cb->start) {
 +		ret = cb->start(cb);
++=======
+ 	if (control->start) {
+ 		ret = control->start(cb);
++>>>>>>> 3730cf4dd70b (netlink: do not store start function in netlink_cb)
  		if (ret)
  			goto error_put;
  	}
diff --git a/include/linux/netlink.h b/include/linux/netlink.h
index 03572b4ff6c1..fd7f80e2c735 100644
--- a/include/linux/netlink.h
+++ b/include/linux/netlink.h
@@ -180,7 +180,6 @@ netlink_skb_clone(struct sk_buff *skb, gfp_t gfp_mask)
 struct netlink_callback {
 	struct sk_buff		*skb;
 	const struct nlmsghdr	*nlh;
-	int			(*start)(struct netlink_callback *);
 	int			(*dump)(struct sk_buff * skb,
 					struct netlink_callback *cb);
 	int			(*done)(struct netlink_callback *cb);
* Unmerged path net/netlink/af_netlink.c
