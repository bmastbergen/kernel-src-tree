libbpf: Fix BTF-defined map's __type macro handling of arrays

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit a53ba15d81995868651dd28a85d8045aef3d4e20
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a53ba15d.failed

Due to a quirky C syntax of declaring pointers to array or function
prototype, existing __type() macro doesn't work with map key/value types
that are array or function prototype. One has to create a typedef first
and use it to specify key/value type for a BPF map.  By using typeof(),
pointer to type is now handled uniformly for all kinds of types. Convert
one of self-tests as a demonstration.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Link: https://lore.kernel.org/bpf/20191004040211.2434033-1-andriin@fb.com
(cherry picked from commit a53ba15d81995868651dd28a85d8045aef3d4e20)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/test_get_stack_rawtp.c
diff --cc tools/testing/selftests/bpf/test_get_stack_rawtp.c
index f6d9f238e00a,6cc4479ac9df..000000000000
--- a/tools/testing/selftests/bpf/test_get_stack_rawtp.c
+++ b/tools/testing/selftests/bpf/test_get_stack_rawtp.c
@@@ -47,14 -47,14 +47,23 @@@ struct bpf_map_def SEC("maps") stackdat
   * issue and avoid complicated C programming massaging.
   * This is an acceptable workaround since there is one entry here.
   */
++<<<<<<< HEAD:tools/testing/selftests/bpf/test_get_stack_rawtp.c
 +struct bpf_map_def SEC("maps") rawdata_map = {
 +	.type = BPF_MAP_TYPE_PERCPU_ARRAY,
 +	.key_size = sizeof(__u32),
 +	.value_size = MAX_STACK_RAWTP * sizeof(__u64) * 2,
 +	.max_entries = 1,
 +};
++=======
+ struct {
+ 	__uint(type, BPF_MAP_TYPE_PERCPU_ARRAY);
+ 	__uint(max_entries, 1);
+ 	__type(key, __u32);
+ 	__type(value, __u64[2 * MAX_STACK_RAWTP]);
+ } rawdata_map SEC(".maps");
++>>>>>>> a53ba15d8199 (libbpf: Fix BTF-defined map's __type macro handling of arrays):tools/testing/selftests/bpf/progs/test_get_stack_rawtp.c
  
 -SEC("raw_tracepoint/sys_enter")
 +SEC("tracepoint/raw_syscalls/sys_enter")
  int bpf_prog1(void *ctx)
  {
  	int max_len, max_buildid_len, usize, ksize, total_size;
diff --git a/tools/testing/selftests/bpf/bpf_helpers.h b/tools/testing/selftests/bpf/bpf_helpers.h
index 91537e9a7fbd..d1b762da2074 100644
--- a/tools/testing/selftests/bpf/bpf_helpers.h
+++ b/tools/testing/selftests/bpf/bpf_helpers.h
@@ -9,7 +9,7 @@
 #define SEC(NAME) __attribute__((section(NAME), used))
 
 #define __uint(name, val) int (*name)[val]
-#define __type(name, val) val *name
+#define __type(name, val) typeof(val) *name
 
 /* helper macro to print out debug messages */
 #define bpf_printk(fmt, ...)				\
* Unmerged path tools/testing/selftests/bpf/test_get_stack_rawtp.c
