mt76: add skb pointer to mt76_tx_info

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit cfaae9e67cf13011ce6d6ddd61eacff8f72b7bad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/cfaae9e6.failed

Pass skb pointer to tx_prepare_skb through mt76_tx_info data structure.
This is a preliminary patch to properly support dma error path for
new chipsets (e.g. 7615)

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit cfaae9e67cf13011ce6d6ddd61eacff8f72b7bad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7603/mac.c
#	drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
#	drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
#	drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/mac.c
index 5388d1a6ffcf,c10adebde383..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mac.c
@@@ -911,9 -912,9 +911,15 @@@ mt7603_mac_write_txwi(struct mt7603_de
  }
  
  int mt7603_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
++<<<<<<< HEAD
 +			  struct sk_buff *skb, struct mt76_queue *q,
 +			  struct mt76_wcid *wcid, struct ieee80211_sta *sta,
 +			  u32 *tx_info)
++=======
+ 			  enum mt76_txq_id qid, struct mt76_wcid *wcid,
+ 			  struct ieee80211_sta *sta,
+ 			  struct mt76_tx_info *tx_info)
++>>>>>>> cfaae9e67cf1 (mt76: add skb pointer to mt76_tx_info)
  {
  	struct mt7603_dev *dev = container_of(mdev, struct mt7603_dev, mt76);
  	struct mt7603_sta *msta = container_of(wcid, struct mt7603_sta, wcid);
@@@ -943,7 -944,8 +949,12 @@@
  		spin_unlock_bh(&dev->mt76.lock);
  	}
  
++<<<<<<< HEAD
 +	mt7603_mac_write_txwi(dev, txwi_ptr, skb, q, wcid, sta, pid, key);
++=======
+ 	mt7603_mac_write_txwi(dev, txwi_ptr, tx_info->skb, qid, wcid,
+ 			      sta, pid, key);
++>>>>>>> cfaae9e67cf1 (mt76: add skb pointer to mt76_tx_info)
  
  	return 0;
  }
diff --cc drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
index 10ced8d17526,3816f1e8ae70..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
@@@ -225,12 -221,12 +225,18 @@@ void mt7603_wtbl_set_smps(struct mt7603
  void mt7603_filter_tx(struct mt7603_dev *dev, int idx, bool abort);
  
  int mt7603_tx_prepare_skb(struct mt76_dev *mdev, void *txwi_ptr,
++<<<<<<< HEAD
 +			  struct sk_buff *skb, struct mt76_queue *q,
 +			  struct mt76_wcid *wcid, struct ieee80211_sta *sta,
 +			  u32 *tx_info);
++=======
+ 			  enum mt76_txq_id qid, struct mt76_wcid *wcid,
+ 			  struct ieee80211_sta *sta,
+ 			  struct mt76_tx_info *tx_info);
++>>>>>>> cfaae9e67cf1 (mt76: add skb pointer to mt76_tx_info)
  
 -void mt7603_tx_complete_skb(struct mt76_dev *mdev, enum mt76_txq_id qid,
 -			    struct mt76_queue_entry *e);
 +void mt7603_tx_complete_skb(struct mt76_dev *mdev, struct mt76_queue *q,
 +			    struct mt76_queue_entry *e, bool flush);
  
  void mt7603_queue_rx_skb(struct mt76_dev *mdev, enum mt76_rxq_id q,
  			 struct sk_buff *skb);
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
index 04118f08debc,cf7abd9b7d2e..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
@@@ -163,17 -162,11 +163,22 @@@ int mt76x02_tx_prepare_skb(struct mt76_
  	hdrlen = ieee80211_hdrlen(hdr->frame_control);
  	len = tx_info->skb->len - (hdrlen & 2);
  	mt76x02_mac_write_txwi(dev, txwi, tx_info->skb, wcid, sta, len);
++<<<<<<< HEAD
  
  	pid = mt76_tx_status_skb_add(mdev, wcid, tx_info->skb);
 +
 +	/* encode packet rate for no-skb packet id to fix up status reporting */
 +	if (pid == MT_PACKET_ID_NO_SKB)
 +		pid = MT_PACKET_ID_HAS_RATE |
 +		      (le16_to_cpu(txwi->rate) & MT_RXWI_RATE_INDEX);
 +
++=======
++
++	pid = mt76_tx_status_skb_add(mdev, wcid, tx_info->skb);
++>>>>>>> cfaae9e67cf1 (mt76: add skb pointer to mt76_tx_info)
  	txwi->pktid = pid;
  
 -	if (pid >= MT_PACKET_ID_FIRST)
 +	if (mt76_is_skb_pktid(pid) && ampdu)
  		qsel = MT_QSEL_MGMT;
  
  	tx_info->info = FIELD_PREP(MT_TXD_INFO_QSEL, qsel) |
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
index 5e4f3a8c5784,818b96064dec..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
@@@ -88,17 -87,11 +88,22 @@@ int mt76x02u_tx_prepare_skb(struct mt76
  	txwi = (struct mt76x02_txwi *)(tx_info->skb->data - sizeof(*txwi));
  	mt76x02_mac_write_txwi(dev, txwi, tx_info->skb, wcid, sta, len);
  	skb_push(tx_info->skb, sizeof(*txwi));
++<<<<<<< HEAD
  
  	pid = mt76_tx_status_skb_add(mdev, wcid, tx_info->skb);
 +
 +	/* encode packet rate for no-skb packet id to fix up status reporting */
 +	if (pid == MT_PACKET_ID_NO_SKB)
 +		pid = MT_PACKET_ID_HAS_RATE |
 +		      (le16_to_cpu(txwi->rate) & MT_RXWI_RATE_INDEX);
 +
++=======
++
++	pid = mt76_tx_status_skb_add(mdev, wcid, tx_info->skb);
++>>>>>>> cfaae9e67cf1 (mt76: add skb pointer to mt76_tx_info)
  	txwi->pktid = pid;
  
 -	if (pid >= MT_PACKET_ID_FIRST || ep == MT_EP_OUT_HCCA)
 +	if ((mt76_is_skb_pktid(pid) && ampdu) || ep == MT_EP_OUT_HCCA)
  		qsel = MT_QSEL_MGMT;
  	else
  		qsel = MT_QSEL_EDCA;
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/mac.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7603/mt7603.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_txrx.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_usb_core.c
