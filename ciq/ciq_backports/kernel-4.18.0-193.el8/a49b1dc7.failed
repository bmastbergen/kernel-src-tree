RDMA: Convert destroy_wq to be void

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit a49b1dc7ae447d7085360cd587fc1c8b9ec6c871
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a49b1dc7.failed

All callers of destroy WQ are always success and there is no need
to check their return value, so convert destroy_wq to be void.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit a49b1dc7ae447d7085360cd587fc1c8b9ec6c871)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/verbs.c
#	drivers/infiniband/hw/mlx4/mlx4_ib.h
#	drivers/infiniband/hw/mlx4/qp.c
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
#	drivers/infiniband/hw/mlx5/qp.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/verbs.c
index 3b0a71d494e4,16ef8a9bda4c..000000000000
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@@ -2209,24 -2229,23 +2209,31 @@@ struct ib_wq *ib_create_wq(struct ib_p
  EXPORT_SYMBOL(ib_create_wq);
  
  /**
 - * ib_destroy_wq - Destroys the specified user WQ.
 + * ib_destroy_wq - Destroys the specified WQ.
   * @wq: The WQ to destroy.
 - * @udata: Valid user data
   */
 -int ib_destroy_wq(struct ib_wq *wq, struct ib_udata *udata)
 +int ib_destroy_wq(struct ib_wq *wq)
  {
- 	int err;
  	struct ib_cq *cq = wq->cq;
  	struct ib_pd *pd = wq->pd;
  
  	if (atomic_read(&wq->usecnt))
  		return -EBUSY;
  
++<<<<<<< HEAD
 +	err = wq->device->ops.destroy_wq(wq);
 +	if (!err) {
 +		atomic_dec(&pd->usecnt);
 +		atomic_dec(&cq->usecnt);
 +	}
 +	return err;
++=======
+ 	wq->device->ops.destroy_wq(wq, udata);
+ 	atomic_dec(&pd->usecnt);
+ 	atomic_dec(&cq->usecnt);
+ 
+ 	return 0;
++>>>>>>> a49b1dc7ae44 (RDMA: Convert destroy_wq to be void)
  }
  EXPORT_SYMBOL(ib_destroy_wq);
  
diff --cc drivers/infiniband/hw/mlx4/mlx4_ib.h
index 4c774304cc63,eb53bb4c0c91..000000000000
--- a/drivers/infiniband/hw/mlx4/mlx4_ib.h
+++ b/drivers/infiniband/hw/mlx4/mlx4_ib.h
@@@ -912,7 -906,7 +912,11 @@@ void mlx4_ib_sl2vl_update(struct mlx4_i
  struct ib_wq *mlx4_ib_create_wq(struct ib_pd *pd,
  				struct ib_wq_init_attr *init_attr,
  				struct ib_udata *udata);
++<<<<<<< HEAD
 +int mlx4_ib_destroy_wq(struct ib_wq *wq);
++=======
+ void mlx4_ib_destroy_wq(struct ib_wq *wq, struct ib_udata *udata);
++>>>>>>> a49b1dc7ae44 (RDMA: Convert destroy_wq to be void)
  int mlx4_ib_modify_wq(struct ib_wq *wq, struct ib_wq_attr *wq_attr,
  		      u32 wq_attr_mask, struct ib_udata *udata);
  
diff --cc drivers/infiniband/hw/mlx4/qp.c
index 971e9a9ebdaf,520364defa28..000000000000
--- a/drivers/infiniband/hw/mlx4/qp.c
+++ b/drivers/infiniband/hw/mlx4/qp.c
@@@ -4232,7 -4248,7 +4232,11 @@@ int mlx4_ib_modify_wq(struct ib_wq *ibw
  	return err;
  }
  
++<<<<<<< HEAD
 +int mlx4_ib_destroy_wq(struct ib_wq *ibwq)
++=======
+ void mlx4_ib_destroy_wq(struct ib_wq *ibwq, struct ib_udata *udata)
++>>>>>>> a49b1dc7ae44 (RDMA: Convert destroy_wq to be void)
  {
  	struct mlx4_ib_dev *dev = to_mdev(ibwq->device);
  	struct mlx4_ib_qp *qp = to_mqp((struct ib_qp *)ibwq);
@@@ -4240,11 -4256,9 +4244,9 @@@
  	if (qp->counter_index)
  		mlx4_ib_free_qp_counter(dev, qp);
  
 -	destroy_qp_common(dev, qp, MLX4_IB_RWQ_SRC, udata);
 +	destroy_qp_common(dev, qp, MLX4_IB_RWQ_SRC, 1);
  
  	kfree(qp);
- 
- 	return 0;
  }
  
  struct ib_rwq_ind_table
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 1b44b1ade284,82cfe86087b6..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -1171,7 -1201,7 +1171,11 @@@ int mlx5_ib_check_mr_status(struct ib_m
  struct ib_wq *mlx5_ib_create_wq(struct ib_pd *pd,
  				struct ib_wq_init_attr *init_attr,
  				struct ib_udata *udata);
++<<<<<<< HEAD
 +int mlx5_ib_destroy_wq(struct ib_wq *wq);
++=======
+ void mlx5_ib_destroy_wq(struct ib_wq *wq, struct ib_udata *udata);
++>>>>>>> a49b1dc7ae44 (RDMA: Convert destroy_wq to be void)
  int mlx5_ib_modify_wq(struct ib_wq *wq, struct ib_wq_attr *wq_attr,
  		      u32 wq_attr_mask, struct ib_udata *udata);
  struct ib_rwq_ind_table *mlx5_ib_create_rwq_ind_table(struct ib_device *device,
diff --cc drivers/infiniband/hw/mlx5/qp.c
index 7927d666efe8,ae847709b3d3..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -5868,16 -6047,14 +5868,18 @@@ err
  	return ERR_PTR(err);
  }
  
++<<<<<<< HEAD
 +int mlx5_ib_destroy_wq(struct ib_wq *wq)
++=======
+ void mlx5_ib_destroy_wq(struct ib_wq *wq, struct ib_udata *udata)
++>>>>>>> a49b1dc7ae44 (RDMA: Convert destroy_wq to be void)
  {
  	struct mlx5_ib_dev *dev = to_mdev(wq->device);
  	struct mlx5_ib_rwq *rwq = to_mrwq(wq);
  
  	mlx5_core_destroy_rq_tracked(dev->mdev, &rwq->core_qp);
 -	destroy_user_rq(dev, wq->pd, rwq, udata);
 +	destroy_user_rq(dev, wq->pd, rwq);
  	kfree(rwq);
- 
- 	return 0;
  }
  
  struct ib_rwq_ind_table *mlx5_ib_create_rwq_ind_table(struct ib_device *device,
diff --cc include/rdma/ib_verbs.h
index 5405a5f0fd95,805148a12660..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2471,7 -2509,7 +2471,11 @@@ struct ib_device_ops 
  	struct ib_wq *(*create_wq)(struct ib_pd *pd,
  				   struct ib_wq_init_attr *init_attr,
  				   struct ib_udata *udata);
++<<<<<<< HEAD
 +	int (*destroy_wq)(struct ib_wq *wq);
++=======
+ 	void (*destroy_wq)(struct ib_wq *wq, struct ib_udata *udata);
++>>>>>>> a49b1dc7ae44 (RDMA: Convert destroy_wq to be void)
  	int (*modify_wq)(struct ib_wq *wq, struct ib_wq_attr *attr,
  			 u32 wq_attr_mask, struct ib_udata *udata);
  	struct ib_rwq_ind_table *(*create_rwq_ind_table)(
* Unmerged path drivers/infiniband/core/verbs.c
* Unmerged path drivers/infiniband/hw/mlx4/mlx4_ib.h
* Unmerged path drivers/infiniband/hw/mlx4/qp.c
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
* Unmerged path include/rdma/ib_verbs.h
