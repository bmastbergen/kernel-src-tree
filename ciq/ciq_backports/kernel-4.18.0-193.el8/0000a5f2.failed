net/mlx5: Make load_one() and unload_one() symmetric

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: Make load_one() and unload_one() symmetric (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.00%
commit-author Parav Pandit <parav@mellanox.com>
commit 0000a5f2507deef8668d23d6406e9d19ba371def
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/0000a5f2.failed

Currently mlx5_load_one() perform device registration using
mlx5_register_device(). But mlx5_unload_one() doesn't unregister.

Make them symmetric by doing device unregistration in
mlx5_unload_one().

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 0000a5f2507deef8668d23d6406e9d19ba371def)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index 7f8040cb1be0,fa0e991f1983..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -1208,8 -1217,10 +1208,15 @@@ static int mlx5_unload_one(struct mlx5_
  {
  	int err = 0;
  
++<<<<<<< HEAD
 +	if (cleanup)
 +		mlx5_drain_health_recovery(dev);
++=======
+ 	if (cleanup) {
+ 		mlx5_unregister_device(dev);
+ 		mlx5_drain_health_wq(dev);
+ 	}
++>>>>>>> 0000a5f2507d (net/mlx5: Make load_one() and unload_one() symmetric)
  
  	mutex_lock(&dev->intf_state_mutex);
  	if (!test_bit(MLX5_INTERFACE_STATE_UP, &dev->intf_state)) {
@@@ -1367,14 -1368,13 +1374,19 @@@ static void remove_one(struct pci_dev *
  {
  	struct mlx5_core_dev *dev  = pci_get_drvdata(pdev);
  	struct devlink *devlink = priv_to_devlink(dev);
 +	struct mlx5_priv *priv = &dev->priv;
  
++<<<<<<< HEAD
 +	devlink_unregister(devlink);
 +	mlx5_unregister_device(dev);
++=======
+ 	mlx5_crdump_disable(dev);
+ 	mlx5_devlink_unregister(devlink);
++>>>>>>> 0000a5f2507d (net/mlx5: Make load_one() and unload_one() symmetric)
  
 -	if (mlx5_unload_one(dev, true)) {
 -		mlx5_core_err(dev, "mlx5_unload_one failed\n");
 -		mlx5_health_flush(dev);
 +	if (mlx5_unload_one(dev, priv, true)) {
 +		dev_err(&dev->pdev->dev, "mlx5_unload_one failed\n");
 +		mlx5_health_cleanup(dev);
  		return;
  	}
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
