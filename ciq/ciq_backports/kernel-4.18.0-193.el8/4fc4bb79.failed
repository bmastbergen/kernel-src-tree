fuse: Add bad inode check in fuse_destroy_inode()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Myungho Jung <mhjungk@gmail.com>
commit 4fc4bb796b0c75067fd65292dfd874869ff7c9dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4fc4bb79.failed

make_bad_inode() sets inode->i_mode to S_IFREG if I/O error is detected
in fuse_do_getattr()/fuse_do_setattr(). If the inode is not a regular
file, write_files and queued_writes in fuse_inode are not initialized
and have NULL or invalid pointers written by other members in a union.
So, list_empty() returns false in fuse_destroy_inode(). Add
is_bad_inode() to check if make_bad_inode() was called.

	Reported-by: syzbot+b9c89b84423073226299@syzkaller.appspotmail.com
Fixes: ab2257e9941b ("fuse: reduce size of struct fuse_inode")
	Signed-off-by: Myungho Jung <mhjungk@gmail.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 4fc4bb796b0c75067fd65292dfd874869ff7c9dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/inode.c
diff --cc fs/fuse/inode.c
index b7c43877d6a7,073865371f9b..000000000000
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@@ -125,8 -115,10 +125,15 @@@ static void fuse_i_callback(struct rcu_
  static void fuse_destroy_inode(struct inode *inode)
  {
  	struct fuse_inode *fi = get_fuse_inode(inode);
++<<<<<<< HEAD
 +	BUG_ON(!list_empty(&fi->write_files));
 +	BUG_ON(!list_empty(&fi->queued_writes));
++=======
+ 	if (S_ISREG(inode->i_mode) && !is_bad_inode(inode)) {
+ 		WARN_ON(!list_empty(&fi->write_files));
+ 		WARN_ON(!list_empty(&fi->queued_writes));
+ 	}
++>>>>>>> 4fc4bb796b0c (fuse: Add bad inode check in fuse_destroy_inode())
  	mutex_destroy(&fi->mutex);
  	kfree(fi->forget);
  	call_rcu(&inode->i_rcu, fuse_i_callback);
* Unmerged path fs/fuse/inode.c
