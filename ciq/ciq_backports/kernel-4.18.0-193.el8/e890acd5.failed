net/mlx5: Add devlink flow_steering_mode parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: Add devlink flow_steering_mode parameter (Alaa Hleihel) [1760284 1724336]
Rebuild_FUZZ: 95.83%
commit-author Maor Gottlieb <maorg@mellanox.com>
commit e890acd5ff18a0144967d0289869fe5f0415d399
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e890acd5.failed

Add new parameter (flow_steering_mode) to control the flow steering
mode of the driver.
Two modes are supported:
1. DMFS - Device managed flow steering
2. SMFS - Software/Driver managed flow steering.

In the DMFS mode, the HW steering entities are created through the
FW. In the SMFS mode this entities are created though the driver
directly.

The driver will use the devlink steering mode only if the steering
domain supports it, for now SMFS will manages only the switchdev eswitch
steering domain.

User command examples:
- Set SMFS flow steering mode::

    $ devlink dev param set pci/0000:06:00.0 name flow_steering_mode value "smfs" cmode runtime

- Read device flow steering mode::

    $ devlink dev param show pci/0000:06:00.0 name flow_steering_mode
      pci/0000:06:00.0:
      name flow_steering_mode type driver-specific
      values:
         cmode runtime value smfs

	Signed-off-by: Maor Gottlieb <maorg@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit e890acd5ff18a0144967d0289869fe5f0415d399)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/device_drivers/mellanox/mlx5.rst
#	drivers/net/ethernet/mellanox/mlx5/core/devlink.c
* Unmerged path Documentation/networking/device_drivers/mellanox/mlx5.rst
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/devlink.c
* Unmerged path Documentation/networking/device_drivers/mellanox/mlx5.rst
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/devlink.c
