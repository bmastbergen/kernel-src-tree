ALSA: firewire-lib: use packet descriptor for IT context

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit f4f6ae7b7c1fdbaaaecafd183fabcf5314df2b59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/f4f6ae7b.failed

This commit uses packet descriptor to parse headers of IT context and
generate timing information for ideal sequence.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit f4f6ae7b7c1fdbaaaecafd183fabcf5314df2b59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/amdtp-stream.c
diff --cc sound/firewire/amdtp-stream.c
index 51ab268a7513,463c7a340a45..000000000000
--- a/sound/firewire/amdtp-stream.c
+++ b/sound/firewire/amdtp-stream.c
@@@ -706,26 -728,28 +738,46 @@@ static void out_stream_callback(struct 
  	if (s->packet_index < 0)
  		return;
  
+ 	generate_ideal_pkt_descs(s, s->pkt_descs, ctx_header, packets);
+ 
  	for (i = 0; i < packets; ++i) {
++<<<<<<< HEAD
 +		u32 cycle;
 +		unsigned int syt;
 +		unsigned int data_blocks;
 +		__be32 *buffer;
++=======
+ 		const struct pkt_desc *desc = s->pkt_descs + i;
++>>>>>>> f4f6ae7b7c1f (ALSA: firewire-lib: use packet descriptor for IT context)
  		unsigned int pcm_frames;
+ 		unsigned int syt;
  		struct {
  			struct fw_iso_packet params;
  			__be32 header[IT_PKT_HEADER_SIZE_CIP / sizeof(__be32)];
  		} template = { {0}, {0} };
  		struct snd_pcm_substream *pcm;
  
++<<<<<<< HEAD
 +		cycle = compute_it_cycle(*ctx_header);
 +		syt = calculate_syt(s, cycle);
 +		data_blocks = calculate_data_blocks(s, syt);
 +		buffer = s->buffer.packets[s->packet_index].buffer;
 +		pcm_frames = s->process_data_blocks(s, buffer, data_blocks,
 +						    &syt);
 +
 +		build_it_pkt_header(s, cycle, &template.params, data_blocks,
++=======
+ 		pcm_frames = s->process_data_blocks(s, desc->ctx_payload,
+ 				desc->data_blocks, desc->data_block_counter);
+ 
+ 		if (s->ctx_data.rx.syt_override < 0)
+ 			syt = desc->syt;
+ 		else
+ 			syt = s->ctx_data.rx.syt_override;
+ 
+ 		build_it_pkt_header(s, desc->cycle, &template.params,
+ 				    desc->data_blocks, desc->data_block_counter,
++>>>>>>> f4f6ae7b7c1f (ALSA: firewire-lib: use packet descriptor for IT context)
  				    syt, i);
  
  		if (queue_out_packet(s, &template.params) < 0) {
* Unmerged path sound/firewire/amdtp-stream.c
