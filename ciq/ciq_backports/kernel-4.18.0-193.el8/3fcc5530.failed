bpf: fix build without bpf_syscall

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Alexei Starovoitov <ast@kernel.org>
commit 3fcc5530bcb2a879e32bd940e6eafee328ac3647
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3fcc5530.failed

wrap bpf_stats_enabled sysctl with #ifdef

	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Fixes: 492ecee892c2 ("bpf: enable program stats")
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
	Acked-by: Song Liu <songliubraving@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
(cherry picked from commit 3fcc5530bcb2a879e32bd940e6eafee328ac3647)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sysctl.c
diff --cc kernel/sysctl.c
index 04c2181c0df5,7578e21a711b..000000000000
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@@ -224,9 -224,14 +224,17 @@@ static int proc_dostring_coredump(struc
  #endif
  static int proc_dopipe_max_size(struct ctl_table *table, int write,
  		void __user *buffer, size_t *lenp, loff_t *ppos);
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_BPF_SYSCALL
+ static int proc_dointvec_minmax_bpf_stats(struct ctl_table *table, int write,
+ 					  void __user *buffer, size_t *lenp,
+ 					  loff_t *ppos);
+ #endif
++>>>>>>> 3fcc5530bcb2 (bpf: fix build without bpf_syscall)
  
  #ifdef CONFIG_MAGIC_SYSRQ
 -/* Note: sysrq code uses its own private copy */
 +/* Note: sysrq code uses it's own private copy */
  static int __sysrq_enabled = CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE;
  
  static int sysrq_sysctl_handler(struct ctl_table *table, int write,
@@@ -1221,6 -1234,15 +1229,18 @@@ static struct ctl_table kern_table[] = 
  		.extra1		= &one,
  		.extra2		= &one,
  	},
++<<<<<<< HEAD
++=======
+ 	{
+ 		.procname	= "bpf_stats_enabled",
+ 		.data		= &sysctl_bpf_stats_enabled,
+ 		.maxlen		= sizeof(sysctl_bpf_stats_enabled),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec_minmax_bpf_stats,
+ 		.extra1		= &zero,
+ 		.extra2		= &one,
+ 	},
++>>>>>>> 3fcc5530bcb2 (bpf: fix build without bpf_syscall)
  #endif
  #if defined(CONFIG_TREE_RCU) || defined(CONFIG_PREEMPT_RCU)
  	{
@@@ -3281,6 -3274,29 +3301,32 @@@ int proc_doulongvec_ms_jiffies_minmax(s
  
  #endif /* CONFIG_PROC_SYSCTL */
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_BPF_SYSCALL
+ static int proc_dointvec_minmax_bpf_stats(struct ctl_table *table, int write,
+ 					  void __user *buffer, size_t *lenp,
+ 					  loff_t *ppos)
+ {
+ 	int ret, bpf_stats = *(int *)table->data;
+ 	struct ctl_table tmp = *table;
+ 
+ 	if (write && !capable(CAP_SYS_ADMIN))
+ 		return -EPERM;
+ 
+ 	tmp.data = &bpf_stats;
+ 	ret = proc_dointvec_minmax(&tmp, write, buffer, lenp, ppos);
+ 	if (write && !ret) {
+ 		*(int *)table->data = bpf_stats;
+ 		if (bpf_stats)
+ 			static_branch_enable(&bpf_stats_enabled_key);
+ 		else
+ 			static_branch_disable(&bpf_stats_enabled_key);
+ 	}
+ 	return ret;
+ }
+ #endif
++>>>>>>> 3fcc5530bcb2 (bpf: fix build without bpf_syscall)
  /*
   * No sense putting this after each symbol definition, twice,
   * exception granted :-)
* Unmerged path kernel/sysctl.c
