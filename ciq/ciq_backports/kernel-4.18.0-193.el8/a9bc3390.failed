net/mlx5e: kTLS, Fix progress params context WQE layout

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: kTLS, Fix progress params context WQE layout (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.23%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit a9bc3390327317345dd4683b70970c83ab400ea3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a9bc3390.failed

The TLS progress params context WQE should not include an
Eth segment, drop it.
In addition, align the tls_progress_params layout with the
HW specification document:
- fix the tisn field name.
- remove the valid bit.

Fixes: a12ff35e0fb7 ("net/mlx5: Introduce TLS TX offload hardware bits and structures")
Fixes: d2ead1f360e8 ("net/mlx5e: Add kTLS TX HW offload support")
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit a9bc3390327317345dd4683b70970c83ab400ea3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls_tx.c
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index f08f46b9673f,b8b570c30b5e..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -9919,4 -9991,80 +9919,83 @@@ struct mlx5_ifc_affiliated_event_header
  	u8         obj_id[0x20];
  };
  
++<<<<<<< HEAD
++=======
+ enum {
+ 	MLX5_HCA_CAP_GENERAL_OBJECT_TYPES_ENCRYPTION_KEY = BIT(0xc),
+ };
+ 
+ enum {
+ 	MLX5_GENERAL_OBJECT_TYPES_ENCRYPTION_KEY = 0xc,
+ };
+ 
+ struct mlx5_ifc_encryption_key_obj_bits {
+ 	u8         modify_field_select[0x40];
+ 
+ 	u8         reserved_at_40[0x14];
+ 	u8         key_size[0x4];
+ 	u8         reserved_at_58[0x4];
+ 	u8         key_type[0x4];
+ 
+ 	u8         reserved_at_60[0x8];
+ 	u8         pd[0x18];
+ 
+ 	u8         reserved_at_80[0x180];
+ 	u8         key[8][0x20];
+ 
+ 	u8         reserved_at_300[0x500];
+ };
+ 
+ struct mlx5_ifc_create_encryption_key_in_bits {
+ 	struct mlx5_ifc_general_obj_in_cmd_hdr_bits general_obj_in_cmd_hdr;
+ 	struct mlx5_ifc_encryption_key_obj_bits encryption_key_object;
+ };
+ 
+ enum {
+ 	MLX5_GENERAL_OBJECT_TYPE_ENCRYPTION_KEY_KEY_SIZE_128 = 0x0,
+ 	MLX5_GENERAL_OBJECT_TYPE_ENCRYPTION_KEY_KEY_SIZE_256 = 0x1,
+ };
+ 
+ enum {
+ 	MLX5_GENERAL_OBJECT_TYPE_ENCRYPTION_KEY_TYPE_DEK = 0x1,
+ };
+ 
+ struct mlx5_ifc_tls_static_params_bits {
+ 	u8         const_2[0x2];
+ 	u8         tls_version[0x4];
+ 	u8         const_1[0x2];
+ 	u8         reserved_at_8[0x14];
+ 	u8         encryption_standard[0x4];
+ 
+ 	u8         reserved_at_20[0x20];
+ 
+ 	u8         initial_record_number[0x40];
+ 
+ 	u8         resync_tcp_sn[0x20];
+ 
+ 	u8         gcm_iv[0x20];
+ 
+ 	u8         implicit_iv[0x40];
+ 
+ 	u8         reserved_at_100[0x8];
+ 	u8         dek_index[0x18];
+ 
+ 	u8         reserved_at_120[0xe0];
+ };
+ 
+ struct mlx5_ifc_tls_progress_params_bits {
+ 	u8         reserved_at_0[0x8];
+ 	u8         tisn[0x18];
+ 
+ 	u8         next_record_tcp_sn[0x20];
+ 
+ 	u8         hw_resync_tcp_sn[0x20];
+ 
+ 	u8         record_tracker_state[0x2];
+ 	u8         auth_state[0x2];
+ 	u8         reserved_at_64[0x4];
+ 	u8         hw_offset_record_number[0x18];
+ };
+ 
++>>>>>>> a9bc33903273 (net/mlx5e: kTLS, Fix progress params context WQE layout)
  #endif /* MLX5_IFC_H */
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls_tx.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index 97eff4c4a3fe..8a938a0e3fb1 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -185,8 +185,13 @@ static inline int mlx5e_get_netdev_max_channels(struct net_device *netdev)
 
 struct mlx5e_tx_wqe {
 	struct mlx5_wqe_ctrl_seg ctrl;
-	struct mlx5_wqe_eth_seg  eth;
-	struct mlx5_wqe_data_seg data[0];
+	union {
+		struct {
+			struct mlx5_wqe_eth_seg  eth;
+			struct mlx5_wqe_data_seg data[0];
+		};
+		u8 tls_progress_params_ctx[0];
+	};
 };
 
 struct mlx5e_rx_wqe_ll {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ktls_tx.c
* Unmerged path include/linux/mlx5/mlx5_ifc.h
