powerpc/fadump: Update documentation about OPAL platform support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Hari Bathini <hbathini@linux.ibm.com>
commit fbcafdaea2e234d3c6d79e7f5605a2e8373f6678
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/fbcafdae.failed

With FADump support now available on both pseries and OPAL platforms,
update FADump documentation with these details.

	Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/156821361692.5656.11377757995827253404.stgit@hbathini.in.ibm.com
(cherry picked from commit fbcafdaea2e234d3c6d79e7f5605a2e8373f6678)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/powerpc/firmware-assisted-dump.txt
diff --cc Documentation/powerpc/firmware-assisted-dump.txt
index 779dd3fcbc51,ab578ac64c09..000000000000
--- a/Documentation/powerpc/firmware-assisted-dump.txt
+++ b/Documentation/powerpc/firmware-assisted-dump.txt
@@@ -45,12 -46,12 +45,18 @@@ as follows
     These registered sections of memory are reserved by the first
     kernel during early boot.
  
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +-- When a system crashes, the Power firmware will save
 +   the low memory (boot memory of size larger of 5% of system RAM
 +   or 256MB) of RAM to the previous registered region. It will
 +   also save system registers, and hardware PTE's.
++=======
+ -  When system crashes, the Power firmware will copy the registered
+    low memory regions (boot memory) from source to destination area.
+    It will also save hardware PTE's.
++>>>>>>> fbcafdaea2e2 (powerpc/fadump: Update documentation about OPAL platform support):Documentation/powerpc/firmware-assisted-dump.rst
  
 -   NOTE:
 -         The term 'boot memory' means size of the low memory chunk
 +   NOTE: The term 'boot memory' means size of the low memory chunk
           that is required for a kernel to boot successfully when
           booted with restricted memory. By default, the boot memory
           size will be the larger of 5% of system RAM or 256MB.
@@@ -59,18 -60,19 +65,30 @@@
           the default calculated size. Use this option if default
           boot memory size is not sufficient for second kernel to
           boot successfully. For syntax of crashkernel= parameter,
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +         refer to Documentation/kdump/kdump.txt. If any offset is
 +         provided in crashkernel= parameter, it will be ignored
 +         as fadump uses a predefined offset to reserve memory
++=======
+          refer to Documentation/admin-guide/kdump/kdump.rst. If any
+          offset is provided in crashkernel= parameter, it will be
+          ignored as FADump uses a predefined offset to reserve memory
++>>>>>>> fbcafdaea2e2 (powerpc/fadump: Update documentation about OPAL platform support):Documentation/powerpc/firmware-assisted-dump.rst
           for boot memory dump preservation in case of a crash.
  
 --  After the low memory (boot memory) area has been saved, the
 +-- After the low memory (boot memory) area has been saved, the
     firmware will reset PCI and other hardware state.  It will
     *not* clear the RAM. It will then launch the bootloader, as
     normal.
  
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +-- The freshly booted kernel will notice that there is a new
 +   node (ibm,dump-kernel) in the device tree, indicating that
++=======
+ -  The freshly booted kernel will notice that there is a new node
+    (rtas/ibm,kernel-dump on pSeries or ibm,opal/dump/mpipl-boot
+    on OPAL platform) in the device tree, indicating that
++>>>>>>> fbcafdaea2e2 (powerpc/fadump: Update documentation about OPAL platform support):Documentation/powerpc/firmware-assisted-dump.rst
     there is crash data available from a previous boot. During
     the early boot OS will reserve rest of the memory above
     boot memory size effectively booting with restricted memory
@@@ -92,11 -95,14 +110,14 @@@
       # echo 1 > /sys/kernel/fadump_release_mem
  
  Please note that the firmware-assisted dump feature
- is only available on Power6 and above systems with recent
- firmware versions.
+ is only available on POWER6 and above systems on pSeries
+ (PowerVM) platform and POWER9 and above systems with OP940
+ or later firmware versions on PowerNV (OPAL) platform.
+ Note that, OPAL firmware exports ibm,opal/dump node when
+ FADump is supported on PowerNV platform.
  
  Implementation details:
 ------------------------
 +----------------------
  
  During boot, a check is made to see if firmware supports
  this feature on that particular machine. If it does, then
@@@ -108,21 -114,23 +129,41 @@@ that are run. If there is dump data, th
  /sys/kernel/fadump_release_mem file is created, and the reserved
  memory is held.
  
++<<<<<<< HEAD:Documentation/powerpc/firmware-assisted-dump.txt
 +If there is no waiting dump data, then only the memory required
 +to hold CPU state, HPTE region, boot memory dump and elfcore
 +header, is usually reserved at an offset greater than boot memory
 +size (see Fig. 1). This area is *not* released: this region will
 +be kept permanently reserved, so that it can act as a receptacle
 +for a copy of the boot memory content in addition to CPU state
 +and HPTE region, in the case a crash does occur. Since this reserved
 +memory area is used only after the system crash, there is no point in
 +blocking this significant chunk of memory from production kernel.
 +Hence, the implementation uses the Linux kernel's Contiguous Memory
 +Allocator (CMA) for memory reservation if CMA is configured for kernel.
 +With CMA reservation this memory will be available for applications to
 +use it, while kernel is prevented from using it. With this fadump will
 +still be able to capture all of the kernel memory and most of the user
 +space memory except the user pages that were present in CMA region.
++=======
+ If there is no waiting dump data, then only the memory required to
+ hold CPU state, HPTE region, boot memory dump, FADump header and
+ elfcore header, is usually reserved at an offset greater than boot
+ memory size (see Fig. 1). This area is *not* released: this region
+ will be kept permanently reserved, so that it can act as a receptacle
+ for a copy of the boot memory content in addition to CPU state and
+ HPTE region, in the case a crash does occur.
+ 
+ Since this reserved memory area is used only after the system crash,
+ there is no point in blocking this significant chunk of memory from
+ production kernel. Hence, the implementation uses the Linux kernel's
+ Contiguous Memory Allocator (CMA) for memory reservation if CMA is
+ configured for kernel. With CMA reservation this memory will be
+ available for applications to use it, while kernel is prevented from
+ using it. With this FADump will still be able to capture all of the
+ kernel memory and most of the user space memory except the user pages
+ that were present in CMA region::
++>>>>>>> fbcafdaea2e2 (powerpc/fadump: Update documentation about OPAL platform support):Documentation/powerpc/firmware-assisted-dump.rst
  
    o Memory Reservation during first kernel
  
* Unmerged path Documentation/powerpc/firmware-assisted-dump.txt
