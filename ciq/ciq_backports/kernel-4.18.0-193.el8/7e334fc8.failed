bnxt_en: Add missing devlink health reporters for VFs.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] bnxt_en: Add missing devlink health reporters for VFs (Jonathan Toppins) [1801868]
Rebuild_FUZZ: 99.07%
commit-author Vasundhara Volam <vasundhara-v.volam@broadcom.com>
commit 7e334fc8003c7a38372cc98e7be6082670a47d29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7e334fc8.failed

The VF driver also needs to create the health reporters since
VFs are also involved in firmware reset and recovery.  Modify
bnxt_dl_register() and bnxt_dl_unregister() so that they can
be called by the VFs to register/unregister devlink.  Only the PF
will register the devlink parameters.  With devlink registered,
we can now create the health reporters on the VFs.

Fixes: 6763c779c2d8 ("bnxt_en: Add new FW devlink_health_reporter")
	Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7e334fc8003c7a38372cc98e7be6082670a47d29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
#	drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index f7c9d57ddad5,a754903b27ee..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -10371,11 -11417,11 +10371,16 @@@ static void bnxt_remove_one(struct pci_
  	struct net_device *dev = pci_get_drvdata(pdev);
  	struct bnxt *bp = netdev_priv(dev);
  
- 	if (BNXT_PF(bp)) {
+ 	if (BNXT_PF(bp))
  		bnxt_sriov_disable(bp);
++<<<<<<< HEAD
 +		bnxt_dl_unregister(bp);
 +	}
++=======
++>>>>>>> 7e334fc8003c (bnxt_en: Add missing devlink health reporters for VFs.)
  
+ 	bnxt_dl_fw_reporters_destroy(bp, true);
+ 	bnxt_dl_unregister(bp);
  	pci_disable_pcie_error_reporting(pdev);
  	unregister_netdev(dev);
  	bnxt_shutdown_tc(bp);
@@@ -10936,8 -11898,8 +10941,13 @@@ static int bnxt_init_one(struct pci_de
  	if (rc)
  		goto init_err_cleanup_tc;
  
++<<<<<<< HEAD
 +	if (BNXT_PF(bp))
 +		bnxt_dl_register(bp);
++=======
+ 	bnxt_dl_register(bp);
+ 	bnxt_dl_fw_reporters_create(bp);
++>>>>>>> 7e334fc8003c (bnxt_en: Add missing devlink health reporters for VFs.)
  
  	netdev_info(dev, "%s found at mem %lx, node addr %pM\n",
  		    board_info[ent->driver_data].name,
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
index 336fbceafb45,3eedd4477218..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
@@@ -20,8 -267,11 +20,10 @@@ static const struct devlink_ops bnxt_dl
  	.eswitch_mode_set = bnxt_dl_eswitch_mode_set,
  	.eswitch_mode_get = bnxt_dl_eswitch_mode_get,
  #endif /* CONFIG_BNXT_SRIOV */
 -	.flash_update	  = bnxt_dl_flash_update,
  };
  
+ static const struct devlink_ops bnxt_vf_dl_ops;
+ 
  enum bnxt_dl_param_id {
  	BNXT_DEVLINK_PARAM_ID_BASE = DEVLINK_PARAM_GENERIC_ID_MAX,
  	BNXT_DEVLINK_PARAM_ID_GRE_VER_CHECK,
@@@ -244,8 -559,14 +252,19 @@@ void bnxt_dl_unregister(struct bnxt *bp
  	if (!dl)
  		return;
  
++<<<<<<< HEAD
 +	devlink_params_unregister(dl, bnxt_dl_params,
 +				  ARRAY_SIZE(bnxt_dl_params));
++=======
+ 	if (BNXT_PF(bp)) {
+ 		devlink_port_params_unregister(&bp->dl_port,
+ 					       bnxt_dl_port_params,
+ 					       ARRAY_SIZE(bnxt_dl_port_params));
+ 		devlink_port_unregister(&bp->dl_port);
+ 		devlink_params_unregister(dl, bnxt_dl_params,
+ 					  ARRAY_SIZE(bnxt_dl_params));
+ 	}
++>>>>>>> 7e334fc8003c (bnxt_en: Add missing devlink health reporters for VFs.)
  	devlink_unregister(dl);
  	devlink_free(dl);
  }
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
