net/mlx5e: Implement ndo_get_port_parent_id()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit 6dcfa2343802b1550530f3ba284cb0179cf2efc8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/6dcfa234.failed

mlx5e only supports SWITCHDEV_ATTR_ID_PORT_PARENT_ID, which makes it a
great candidate to be converted to use the ndo_get_port_parent_id() NDO
instead of implementing switchdev_port_attr_get().

Since mlx5e makes use of switchdev_port_parent_id() convert it to use
netdev_port_same_parent_id().

	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6dcfa2343802b1550530f3ba284cb0179cf2efc8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index d4d2e9fb17fa,0b1988b330f3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -1359,7 -1311,7 +1351,11 @@@ static const struct net_device_ops mlx5
  	.ndo_get_vf_config       = mlx5e_get_vf_config,
  	.ndo_get_vf_stats        = mlx5e_get_vf_stats,
  	.ndo_set_vf_vlan         = mlx5e_uplink_rep_set_vf_vlan,
++<<<<<<< HEAD
 +	.ndo_set_features        = mlx5e_set_features,
++=======
+ 	.ndo_get_port_parent_id	 = mlx5e_rep_get_port_parent_id,
++>>>>>>> 6dcfa2343802 (net/mlx5e: Implement ndo_get_port_parent_id())
  };
  
  bool mlx5e_eswitch_rep(struct net_device *netdev)
@@@ -1433,11 -1385,10 +1429,17 @@@ static void mlx5e_build_rep_netdev(stru
  
  	netdev->watchdog_timeo    = 15 * HZ;
  
 +	netdev->features       |= NETIF_F_NETNS_LOCAL;
 +
++<<<<<<< HEAD
 +	netdev->switchdev_ops = &mlx5e_rep_switchdev_ops;
  
 +	netdev->hw_features    |= NETIF_F_HW_TC;
++=======
+ 	netdev->features	 |= NETIF_F_HW_TC | NETIF_F_NETNS_LOCAL;
+ 	netdev->hw_features      |= NETIF_F_HW_TC;
+ 
++>>>>>>> 6dcfa2343802 (net/mlx5e: Implement ndo_get_port_parent_id())
  	netdev->hw_features    |= NETIF_F_SG;
  	netdev->hw_features    |= NETIF_F_IP_CSUM;
  	netdev->hw_features    |= NETIF_F_IPV6_CSUM;
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
index fc750bb56f73..fa2a3c444cdc 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
@@ -25,7 +25,7 @@ static int get_route_and_out_devs(struct mlx5e_priv *priv,
 	/* if the egress device isn't on the same HW e-switch or
 	 * it's a LAG device, use the uplink
 	 */
-	if (!switchdev_port_same_parent_id(priv->netdev, dev) ||
+	if (!netdev_port_same_parent_id(priv->netdev, dev) ||
 	    dst_is_lag_dev) {
 		*route_dev = uplink_dev;
 		*out_dev = *route_dev;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 3e4d44681652..a8710a97e693 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@ -38,7 +38,6 @@
 #include <linux/mlx5/fs.h>
 #include <linux/mlx5/device.h>
 #include <linux/rhashtable.h>
-#include <net/switchdev.h>
 #include <net/tc_act/tc_mirred.h>
 #include <net/tc_act/tc_vlan.h>
 #include <net/tc_act/tc_tunnel_key.h>
@@ -2624,8 +2623,8 @@ static int parse_tc_fdb_actions(struct mlx5e_priv *priv,
 
 			action |= MLX5_FLOW_CONTEXT_ACTION_FWD_DEST |
 				  MLX5_FLOW_CONTEXT_ACTION_COUNT;
-			if (switchdev_port_same_parent_id(priv->netdev,
-							  out_dev) ||
+			if (netdev_port_same_parent_id(priv->netdev,
+						       out_dev) ||
 			    is_merged_eswitch_dev(priv, out_dev)) {
 				struct mlx5_eswitch *esw = priv->mdev->priv.eswitch;
 				struct net_device *uplink_dev = mlx5_eswitch_uplink_get_proto_dev(esw, REP_ETH);
