selftests/bpf: Add sysctl and strtoX helpers to bpf_helpers.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Andrey Ignatov <rdna@fb.com>
commit 99f57973ac5b8e38ee5b5e5f518cd5bf95e3b1e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/99f57973.failed

Add bpf_sysctl_* and bpf_strtoX helpers to bpf_helpers.h.

	Signed-off-by: Andrey Ignatov <rdna@fb.com>
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit 99f57973ac5b8e38ee5b5e5f518cd5bf95e3b1e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/bpf_helpers.h
diff --cc tools/testing/selftests/bpf/bpf_helpers.h
index f4aedf8b6643,59e221586cf7..000000000000
--- a/tools/testing/selftests/bpf/bpf_helpers.h
+++ b/tools/testing/selftests/bpf/bpf_helpers.h
@@@ -172,6 -177,40 +172,43 @@@ static int (*bpf_skb_vlan_pop)(void *ct
  	(void *) BPF_FUNC_skb_vlan_pop;
  static int (*bpf_rc_pointer_rel)(void *ctx, int rel_x, int rel_y) =
  	(void *) BPF_FUNC_rc_pointer_rel;
++<<<<<<< HEAD
++=======
+ static void (*bpf_spin_lock)(struct bpf_spin_lock *lock) =
+ 	(void *) BPF_FUNC_spin_lock;
+ static void (*bpf_spin_unlock)(struct bpf_spin_lock *lock) =
+ 	(void *) BPF_FUNC_spin_unlock;
+ static struct bpf_sock *(*bpf_sk_fullsock)(struct bpf_sock *sk) =
+ 	(void *) BPF_FUNC_sk_fullsock;
+ static struct bpf_tcp_sock *(*bpf_tcp_sock)(struct bpf_sock *sk) =
+ 	(void *) BPF_FUNC_tcp_sock;
+ static struct bpf_sock *(*bpf_get_listener_sock)(struct bpf_sock *sk) =
+ 	(void *) BPF_FUNC_get_listener_sock;
+ static int (*bpf_skb_ecn_set_ce)(void *ctx) =
+ 	(void *) BPF_FUNC_skb_ecn_set_ce;
+ static int (*bpf_tcp_check_syncookie)(struct bpf_sock *sk,
+ 	    void *ip, int ip_len, void *tcp, int tcp_len) =
+ 	(void *) BPF_FUNC_tcp_check_syncookie;
+ static int (*bpf_sysctl_get_name)(void *ctx, char *buf,
+ 				  unsigned long long buf_len,
+ 				  unsigned long long flags) =
+ 	(void *) BPF_FUNC_sysctl_get_name;
+ static int (*bpf_sysctl_get_current_value)(void *ctx, char *buf,
+ 					   unsigned long long buf_len) =
+ 	(void *) BPF_FUNC_sysctl_get_current_value;
+ static int (*bpf_sysctl_get_new_value)(void *ctx, char *buf,
+ 				       unsigned long long buf_len) =
+ 	(void *) BPF_FUNC_sysctl_get_new_value;
+ static int (*bpf_sysctl_set_new_value)(void *ctx, const char *buf,
+ 				       unsigned long long buf_len) =
+ 	(void *) BPF_FUNC_sysctl_set_new_value;
+ static int (*bpf_strtol)(const char *buf, unsigned long long buf_len,
+ 			 unsigned long long flags, long *res) =
+ 	(void *) BPF_FUNC_strtol;
+ static int (*bpf_strtoul)(const char *buf, unsigned long long buf_len,
+ 			  unsigned long long flags, unsigned long *res) =
+ 	(void *) BPF_FUNC_strtoul;
++>>>>>>> 99f57973ac5b (selftests/bpf: Add sysctl and strtoX helpers to bpf_helpers.h)
  
  /* llvm builtin functions that eBPF C program may use to
   * emit BPF_LD_ABS and BPF_LD_IND instructions
* Unmerged path tools/testing/selftests/bpf/bpf_helpers.h
