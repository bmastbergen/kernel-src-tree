mt76: remove mt76_queue dependency from tx_queue_skb function pointer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 89a37842b0c13c9e568bf12f4fcbe6507147e41d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/89a37842.failed

Remove mt76_queue dependency from tx_queue_skb function pointer and
rely on mt76_tx_qid instead. This is a preliminary patch to introduce
mt76_sw_queue support

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 89a37842b0c13c9e568bf12f4fcbe6507147e41d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/dma.c
#	drivers/net/wireless/mediatek/mt76/mt76.h
#	drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
#	drivers/net/wireless/mediatek/mt76/tx.c
#	drivers/net/wireless/mediatek/mt76/usb.c
diff --cc drivers/net/wireless/mediatek/mt76/dma.c
index 4381155375e1,b9a43183d5d9..000000000000
--- a/drivers/net/wireless/mediatek/mt76/dma.c
+++ b/drivers/net/wireless/mediatek/mt76/dma.c
@@@ -286,21 -278,19 +286,29 @@@ mt76_dma_tx_queue_skb_raw(struct mt76_d
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int
 +mt76_dma_tx_queue_skb(struct mt76_dev *dev, enum mt76_txq_id qid,
 +		      struct sk_buff *skb, struct mt76_wcid *wcid,
 +		      struct ieee80211_sta *sta)
 +{
 +	struct mt76_queue *q = dev->q_tx[qid].q;
 +	struct mt76_tx_info tx_info = {
 +		.skb = skb,
 +	};
 +	int len, n = 0, ret = -ENOMEM;
++=======
+ int mt76_dma_tx_queue_skb(struct mt76_dev *dev, enum mt76_txq_id qid,
+ 			  struct sk_buff *skb, struct mt76_wcid *wcid,
+ 			  struct ieee80211_sta *sta)
+ {
+ 	struct mt76_queue *q = &dev->q_tx[qid];
++>>>>>>> 89a37842b0c1 (mt76: remove mt76_queue dependency from tx_queue_skb function pointer)
  	struct mt76_queue_entry e;
  	struct mt76_txwi_cache *t;
 -	struct mt76_queue_buf buf[32];
  	struct sk_buff *iter;
  	dma_addr_t addr;
 -	int len;
 -	u32 tx_info = 0;
 -	int n, ret;
 +	u8 *txwi;
  
  	t = mt76_get_txwi(dev);
  	if (!t) {
diff --cc drivers/net/wireless/mediatek/mt76/mt76.h
index 1c8ddf9c225d,b63127e509e2..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76.h
@@@ -676,27 -647,9 +676,33 @@@ static inline struct mt76_tx_cb *mt76_t
  	return ((void *) IEEE80211_SKB_CB(skb)->status.status_driver_data);
  }
  
++<<<<<<< HEAD
 +static inline void mt76_insert_hdr_pad(struct sk_buff *skb)
 +{
 +	int len = ieee80211_get_hdrlen_from_skb(skb);
 +
 +	if (len % 4 == 0)
 +		return;
 +
 +	skb_push(skb, 2);
 +	memmove(skb->data, skb->data + 2, len);
 +
 +	skb->data[len] = 0;
 +	skb->data[len + 1] = 0;
 +}
 +
 +static inline bool mt76_is_skb_pktid(u8 pktid)
 +{
 +	if (pktid & MT_PACKET_ID_HAS_RATE)
 +		return false;
 +
 +	return pktid >= MT_PACKET_ID_FIRST;
 +}
++=======
+ int mt76_dma_tx_queue_skb(struct mt76_dev *dev, enum mt76_txq_id qid,
+ 			  struct sk_buff *skb, struct mt76_wcid *wcid,
+ 			  struct ieee80211_sta *sta);
++>>>>>>> 89a37842b0c1 (mt76: remove mt76_queue dependency from tx_queue_skb function pointer)
  
  void mt76_rx(struct mt76_dev *dev, enum mt76_rxq_id q, struct sk_buff *skb);
  void mt76_tx(struct mt76_dev *dev, struct ieee80211_sta *sta,
diff --cc drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
index 617934565818,21970398a1f1..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
+++ b/drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
@@@ -62,8 -146,8 +62,13 @@@ static void mt76x02_pre_tbtt_tasklet(un
  		struct ieee80211_vif *vif = info->control.vif;
  		struct mt76x02_vif *mvif = (struct mt76x02_vif *)vif->drv_priv;
  
++<<<<<<< HEAD
 +		mt76_tx_queue_skb(dev, MT_TXQ_PSD, skb, &mvif->group_wcid,
 +				  NULL);
++=======
+ 		mt76_dma_tx_queue_skb(&dev->mt76, MT_TXQ_PSD, skb,
+ 				      &mvif->group_wcid, NULL);
++>>>>>>> 89a37842b0c1 (mt76: remove mt76_queue dependency from tx_queue_skb function pointer)
  	}
  	spin_unlock_bh(&q->lock);
  }
diff --cc drivers/net/wireless/mediatek/mt76/tx.c
index 5397827668b9,0c1036da9a92..000000000000
--- a/drivers/net/wireless/mediatek/mt76/tx.c
+++ b/drivers/net/wireless/mediatek/mt76/tx.c
@@@ -393,9 -390,8 +393,13 @@@ mt76_txq_send_burst(struct mt76_dev *de
  {
  	struct ieee80211_txq *txq = mtxq_to_txq(mtxq);
  	enum mt76_txq_id qid = mt76_txq_get_qid(txq);
++<<<<<<< HEAD
++=======
+ 	struct ieee80211_tx_info *info;
++>>>>>>> 89a37842b0c1 (mt76: remove mt76_queue dependency from tx_queue_skb function pointer)
  	struct mt76_wcid *wcid = mtxq->wcid;
 +	struct mt76_queue *hwq = sq->q;
 +	struct ieee80211_tx_info *info;
  	struct sk_buff *skb;
  	int n_frames = 1, limit;
  	struct ieee80211_tx_rate tx_rate;
diff --cc drivers/net/wireless/mediatek/mt76/usb.c
index fb87ce7fbdf6,b1551419338f..000000000000
--- a/drivers/net/wireless/mediatek/mt76/usb.c
+++ b/drivers/net/wireless/mediatek/mt76/usb.c
@@@ -777,10 -730,8 +777,15 @@@ mt76u_tx_queue_skb(struct mt76_dev *dev
  		   struct sk_buff *skb, struct mt76_wcid *wcid,
  		   struct ieee80211_sta *sta)
  {
++<<<<<<< HEAD
 +	struct mt76_queue *q = dev->q_tx[qid].q;
 +	struct mt76_tx_info tx_info = {
 +		.skb = skb,
 +	};
++=======
+ 	struct mt76_queue *q = &dev->q_tx[qid];
+ 	struct mt76u_buf *buf;
++>>>>>>> 89a37842b0c1 (mt76: remove mt76_queue dependency from tx_queue_skb function pointer)
  	u16 idx = q->tail;
  	int err;
  
* Unmerged path drivers/net/wireless/mediatek/mt76/dma.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76.h
diff --git a/drivers/net/wireless/mediatek/mt76/mt7603/beacon.c b/drivers/net/wireless/mediatek/mt76/mt7603/beacon.c
index 4dcb465095d1..99c0a3ba37cb 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7603/beacon.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7603/beacon.c
@@ -23,7 +23,7 @@ mt7603_update_beacon_iter(void *priv, u8 *mac, struct ieee80211_vif *vif)
 	if (!skb)
 		return;
 
-	mt76_dma_tx_queue_skb(&dev->mt76, &dev->mt76.q_tx[MT_TXQ_BEACON], skb,
+	mt76_dma_tx_queue_skb(&dev->mt76, MT_TXQ_BEACON, skb,
 			      &mvif->sta.wcid, NULL);
 
 	spin_lock_bh(&dev->ps_lock);
@@ -118,8 +118,8 @@ void mt7603_pre_tbtt_tasklet(unsigned long arg)
 		struct ieee80211_vif *vif = info->control.vif;
 		struct mt7603_vif *mvif = (struct mt7603_vif *)vif->drv_priv;
 
-		mt76_dma_tx_queue_skb(&dev->mt76, q, skb, &mvif->sta.wcid,
-				      NULL);
+		mt76_dma_tx_queue_skb(&dev->mt76, MT_TXQ_CAB, skb,
+				      &mvif->sta.wcid, NULL);
 	}
 	mt76_queue_kick(dev, q);
 	spin_unlock_bh(&q->lock);
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76x02_mmio.c
* Unmerged path drivers/net/wireless/mediatek/mt76/tx.c
* Unmerged path drivers/net/wireless/mediatek/mt76/usb.c
