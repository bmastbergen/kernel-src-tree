RDMA/core: Add RDMA_NLDEV_CMD_NEWLINK/DELLINK support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Steve Wise <swise@opengridcomputing.com>
commit 3856ec4b93c9463d36ee39098dde1fbbd29ec6dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3856ec4b.failed

Add support for new LINK messages to allow adding and deleting rdma
interfaces.  This will be used initially for soft rdma drivers which
instantiate device instances dynamically by the admin specifying a netdev
device to use.  The rdma_rxe module will be the first user of these
messages.

The design is modeled after RTNL_NEWLINK/DELLINK: rdma drivers register
with the rdma core if they provide link add/delete functions.  Each driver
registers with a unique "type" string, that is used to dispatch messages
coming from user space.  A new RDMA_NLDEV_ATTR is defined for the "type"
string.  User mode will pass 3 attributes in a NEWLINK message:
RDMA_NLDEV_ATTR_DEV_NAME for the desired rdma device name to be created,
RDMA_NLDEV_ATTR_LINK_TYPE for the "type" of link being added, and
RDMA_NLDEV_ATTR_NDEV_NAME for the net_device interface to use for this
link.  The DELLINK message will contain the RDMA_NLDEV_ATTR_DEV_INDEX of
the device to delete.

	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 3856ec4b93c9463d36ee39098dde1fbbd29ec6dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/nldev.c
#	include/rdma/ib_verbs.h
#	include/uapi/rdma/rdma_netlink.h
diff --cc drivers/infiniband/core/nldev.c
index efccd8e0fb77,5e94dc87f04f..000000000000
--- a/drivers/infiniband/core/nldev.c
+++ b/drivers/infiniband/core/nldev.c
@@@ -107,6 -109,13 +108,16 @@@ static const struct nla_policy nldev_po
  	[RDMA_NLDEV_ATTR_DRIVER_U32]		= { .type = NLA_U32 },
  	[RDMA_NLDEV_ATTR_DRIVER_S64]		= { .type = NLA_S64 },
  	[RDMA_NLDEV_ATTR_DRIVER_U64]		= { .type = NLA_U64 },
++<<<<<<< HEAD
++=======
+ 	[RDMA_NLDEV_ATTR_RES_PDN]		= { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_CQN]               = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_MRN]               = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_CM_IDN]            = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_RES_CTXN]              = { .type = NLA_U32 },
+ 	[RDMA_NLDEV_ATTR_LINK_TYPE]		= { .type = NLA_NUL_STRING,
+ 				    .len = RDMA_NLDEV_ATTR_ENTRY_STRLEN },
++>>>>>>> 3856ec4b93c9 (RDMA/core: Add RDMA_NLDEV_CMD_NEWLINK/DELLINK support)
  };
  
  static int put_driver_name_print_type(struct sk_buff *msg, const char *name,
diff --cc include/rdma/ib_verbs.h
index 2ff74f11eec0,225cb76d469f..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2601,6 -2622,9 +2602,12 @@@ struct ib_device 
  	 */
  	refcount_t refcount;
  	struct completion unreg_completion;
++<<<<<<< HEAD
++=======
+ 	struct work_struct unregistration_work;
+ 
+ 	const struct rdma_link_ops *link_ops;
++>>>>>>> 3856ec4b93c9 (RDMA/core: Add RDMA_NLDEV_CMD_NEWLINK/DELLINK support)
  };
  
  struct ib_client {
diff --cc include/uapi/rdma/rdma_netlink.h
index 3a9e681e4257,5cc592728071..000000000000
--- a/include/uapi/rdma/rdma_netlink.h
+++ b/include/uapi/rdma/rdma_netlink.h
@@@ -457,6 -459,20 +459,23 @@@ enum rdma_nldev_attr 
  	RDMA_NLDEV_ATTR_DRIVER_U64,		/* u64 */
  
  	/*
++<<<<<<< HEAD
++=======
+ 	 * Indexes to get/set secific entry,
+ 	 * for QP use RDMA_NLDEV_ATTR_RES_LQPN
+ 	 */
+ 	RDMA_NLDEV_ATTR_RES_PDN,               /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_CQN,               /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_MRN,               /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_CM_IDN,            /* u32 */
+ 	RDMA_NLDEV_ATTR_RES_CTXN,	       /* u32 */
+ 	/*
+ 	 * Identifies the rdma driver. eg: "rxe" or "siw"
+ 	 */
+ 	RDMA_NLDEV_ATTR_LINK_TYPE,		/* string */
+ 
+ 	/*
++>>>>>>> 3856ec4b93c9 (RDMA/core: Add RDMA_NLDEV_CMD_NEWLINK/DELLINK support)
  	 * Always the end
  	 */
  	RDMA_NLDEV_ATTR_MAX
* Unmerged path drivers/infiniband/core/nldev.c
* Unmerged path include/rdma/ib_verbs.h
diff --git a/include/rdma/rdma_netlink.h b/include/rdma/rdma_netlink.h
index 70218e6b5187..10732ab31ba2 100644
--- a/include/rdma/rdma_netlink.h
+++ b/include/rdma/rdma_netlink.h
@@ -99,4 +99,15 @@ int rdma_nl_multicast(struct sk_buff *skb, unsigned int group, gfp_t flags);
  * Returns true on success or false if no listeners.
  */
 bool rdma_nl_chk_listeners(unsigned int group);
+
+struct rdma_link_ops {
+	struct list_head list;
+	const char *type;
+	int (*newlink)(const char *ibdev_name, struct net_device *ndev);
+};
+
+void rdma_link_register(struct rdma_link_ops *ops);
+void rdma_link_unregister(struct rdma_link_ops *ops);
+
+#define MODULE_ALIAS_RDMA_LINK(type) MODULE_ALIAS("rdma-link-" type)
 #endif /* _RDMA_NETLINK_H */
* Unmerged path include/uapi/rdma/rdma_netlink.h
