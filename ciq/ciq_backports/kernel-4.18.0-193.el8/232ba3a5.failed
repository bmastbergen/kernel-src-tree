net: phy: Micrel KSZ8061: link failure after cable connect

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] phy: micrel ksz8061: link failure after cable connect (Petr Oros) [1772010]
Rebuild_FUZZ: 95.50%
commit-author Rajasingh Thavamani <T.Rajasingh@landisgyr.com>
commit 232ba3a51cc224b339c7114888ed7f0d4d95695e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/232ba3a5.failed

With Micrel KSZ8061 PHY, the link may occasionally not come up after
Ethernet cable connect. The vendor's (Microchip, former Micrel) errata
sheet 80000688A.pdf descripes the problem and possible workarounds in
detail, see below.
The batch implements workaround 1, which permanently fixes the issue.

DESCRIPTION
Link-up may not occur properly when the Ethernet cable is initially
connected. This issue occurs more commonly when the cable is connected
slowly, but it may occur any time a cable is connected. This issue occurs
in the auto-negotiation circuit, and will not occur if auto-negotiation
is disabled (which requires that the two link partners be set to the
same speed and duplex).

END USER IMPLICATIONS
When this issue occurs, link is not established. Subsequent cable
plug/unplaug cycle will not correct the issue.

WORk AROUND
There are four approaches to work around this issue:
1. This issue can be prevented by setting bit 15 in MMD device address 1,
   register 2, prior to connecting the cable or prior to setting the
   Restart Auto-negotiation bit in register 0h. The MMD registers are
   accessed via the indirect access registers Dh and Eh, or via the Micrel
   EthUtil utility as shown here:
   . if using the EthUtil utility (usually with a Micrel KSZ8061
     Evaluation Board), type the following commands:
     > address 1
     > mmd 1
     > iw 2 b61a
   . Alternatively, write the following registers to write to the
     indirect MMD register:
     Write register Dh, data 0001h
     Write register Eh, data 0002h
     Write register Dh, data 4001h
     Write register Eh, data B61Ah
2. The issue can be avoided by disabling auto-negotiation in the KSZ8061,
   either by the strapping option, or by clearing bit 12 in register 0h.
   Care must be taken to ensure that the KSZ8061 and the link partner
   will link with the same speed and duplex. Note that the KSZ8061
   defaults to full-duplex when auto-negotiation is off, but other
   devices may default to half-duplex in the event of failed
   auto-negotiation.
3. The issue can be avoided by connecting the cable prior to powering-up
   or resetting the KSZ8061, and leaving it plugged in thereafter.
4. If the above measures are not taken and the problem occurs, link can
   be recovered by setting the Restart Auto-Negotiation bit in
   register 0h, or by resetting or power cycling the device. Reset may
   be either hardware reset or software reset (register 0h, bit 15).

PLAN
This errata will not be corrected in the future revision.

Fixes: 7ab59dc15e2f ("drivers/net/phy/micrel_phy: Add support for new PHYs")
	Signed-off-by: Alexander Onnasch <alexander.onnasch@landisgyr.com>
	Signed-off-by: Rajasingh Thavamani <T.Rajasingh@landisgyr.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 232ba3a51cc224b339c7114888ed7f0d4d95695e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/micrel.c
diff --cc drivers/net/phy/micrel.c
index 52d52619256a,b7df0295a3ca..000000000000
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@@ -1023,8 -1051,7 +1034,12 @@@ static struct phy_driver ksphy_driver[
  	.name		= "Micrel KSZ8061",
  	.phy_id_mask	= MICREL_PHY_ID_MASK,
  	.features	= PHY_BASIC_FEATURES,
++<<<<<<< HEAD
 +	.flags		= PHY_HAS_INTERRUPT,
 +	.config_init	= kszphy_config_init,
++=======
+ 	.config_init	= ksz8061_config_init,
++>>>>>>> 232ba3a51cc2 (net: phy: Micrel KSZ8061: link failure after cable connect)
  	.ack_interrupt	= kszphy_ack_interrupt,
  	.config_intr	= kszphy_config_intr,
  	.suspend	= genphy_suspend,
* Unmerged path drivers/net/phy/micrel.c
