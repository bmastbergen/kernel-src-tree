netlink: set bad attribute also on maxtype check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Michal Kubecek <mkubecek@suse.cz>
commit d54a16b20157ce300298eb4a1169bf9acfda3d08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d54a16b2.failed

The check that attribute type is within 0...maxtype range in
__nla_validate_parse() sets only error message but not bad_attr in extack.
Set also bad_attr to tell userspace which attribute failed validation.

	Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
	Reviewed-by: Johannes Berg <johannes@sipsolutions.net>
	Reviewed-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d54a16b20157ce300298eb4a1169bf9acfda3d08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/nlattr.c
diff --cc lib/nlattr.c
index 17d86e6fbd3b,adc919b32bf9..000000000000
--- a/lib/nlattr.c
+++ b/lib/nlattr.c
@@@ -243,8 -339,54 +243,57 @@@ out_err
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static int __nla_validate_parse(const struct nlattr *head, int len, int maxtype,
+ 				const struct nla_policy *policy,
+ 				unsigned int validate,
+ 				struct netlink_ext_ack *extack,
+ 				struct nlattr **tb)
+ {
+ 	const struct nlattr *nla;
+ 	int rem;
+ 
+ 	if (tb)
+ 		memset(tb, 0, sizeof(struct nlattr *) * (maxtype + 1));
+ 
+ 	nla_for_each_attr(nla, head, len, rem) {
+ 		u16 type = nla_type(nla);
+ 
+ 		if (type == 0 || type > maxtype) {
+ 			if (validate & NL_VALIDATE_MAXTYPE) {
+ 				NL_SET_ERR_MSG_ATTR(extack, nla,
+ 						    "Unknown attribute type");
+ 				return -EINVAL;
+ 			}
+ 			continue;
+ 		}
+ 		if (policy) {
+ 			int err = validate_nla(nla, maxtype, policy,
+ 					       validate, extack);
+ 
+ 			if (err < 0)
+ 				return err;
+ 		}
+ 
+ 		if (tb)
+ 			tb[type] = (struct nlattr *)nla;
+ 	}
+ 
+ 	if (unlikely(rem > 0)) {
+ 		pr_warn_ratelimited("netlink: %d bytes leftover after parsing attributes in process `%s'.\n",
+ 				    rem, current->comm);
+ 		NL_SET_ERR_MSG(extack, "bytes leftover after parsing attributes");
+ 		if (validate & NL_VALIDATE_TRAILING)
+ 			return -EINVAL;
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> d54a16b20157 (netlink: set bad attribute also on maxtype check)
  /**
 - * __nla_validate - Validate a stream of attributes
 + * nla_validate - Validate a stream of attributes
   * @head: head of attribute stream
   * @len: length of attribute stream
   * @maxtype: maximum attribute type to be expected
* Unmerged path lib/nlattr.c
