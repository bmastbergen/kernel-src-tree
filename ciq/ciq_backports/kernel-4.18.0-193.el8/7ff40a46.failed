net/mlx5e: Expose same physical switch_id for all representors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5e: Expose same physical switch_id for all representors (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.67%
commit-author Paul Blakey <paulb@mellanox.com>
commit 7ff40a46dd188b83311203e72cedf42eb264fdf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7ff40a46.failed

Report system_image_guid as the E-Switch switch_id, this ensures
that when a NIC contains multiple PCI functions and which
has merged eswitch capability, all representors from
multiple PFs publish same switch_id.

	Signed-off-by: Paul Blakey <paulb@mellanox.com>
	Reviewed-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 7ff40a46dd188b83311203e72cedf42eb264fdf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 1ddcc10576ec,330034fcdfc5..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -399,38 -388,22 +399,45 @@@ static const struct ethtool_ops mlx5e_u
  	.set_pauseparam    = mlx5e_uplink_rep_set_pauseparam,
  };
  
 -static int mlx5e_rep_get_port_parent_id(struct net_device *dev,
 -					struct netdev_phys_item_id *ppid)
 +static int mlx5e_attr_get(struct net_device *dev, struct switchdev_attr *attr)
  {
- 	struct mlx5e_priv *priv = netdev_priv(dev);
- 	struct mlx5_eswitch *esw = priv->mdev->priv.eswitch;
- 	struct net_device *uplink_upper = NULL;
- 	struct mlx5e_priv *uplink_priv = NULL;
- 	struct net_device *uplink_dev;
+ 	struct mlx5_eswitch *esw;
+ 	struct mlx5e_priv *priv;
+ 	u64 parent_id;
+ 
+ 	priv = netdev_priv(dev);
+ 	esw = priv->mdev->priv.eswitch;
  
  	if (esw->mode == SRIOV_NONE)
  		return -EOPNOTSUPP;
  
++<<<<<<< HEAD
 +	uplink_dev = mlx5_eswitch_uplink_get_proto_dev(esw, REP_ETH);
 +	if (uplink_dev) {
 +		uplink_upper = netdev_master_upper_dev_get(uplink_dev);
 +		uplink_priv = netdev_priv(uplink_dev);
 +	}
 +
 +	switch (attr->id) {
 +	case SWITCHDEV_ATTR_ID_PORT_PARENT_ID:
 +		attr->u.ppid.id_len = ETH_ALEN;
 +		if (uplink_upper && mlx5_lag_is_sriov(uplink_priv->mdev)) {
 +			ether_addr_copy(attr->u.ppid.id, uplink_upper->dev_addr);
 +		} else {
 +			struct mlx5e_rep_priv *rpriv = priv->ppriv;
 +			struct mlx5_eswitch_rep *rep = rpriv->rep;
 +
 +			ether_addr_copy(attr->u.ppid.id, rep->hw_id);
 +		}
 +		break;
 +	default:
 +		return -EOPNOTSUPP;
 +	}
++=======
+ 	parent_id = mlx5_query_nic_system_image_guid(priv->mdev);
+ 	ppid->id_len = sizeof(parent_id);
+ 	memcpy(ppid->id, &parent_id, sizeof(parent_id));
++>>>>>>> 7ff40a46dd18 (net/mlx5e: Expose same physical switch_id for all representors)
  
  	return 0;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
