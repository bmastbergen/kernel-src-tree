ALSA: firewire-tascam: code refactoring for TASCAM data block processing layer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Takashi Sakamoto <o-takashi@sakamocchi.jp>
commit 806653b70ee21b374d2844d144609b2e0070a86b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/806653b7.failed

This is code refactoring for TASCAM data block processing layer so that
it can receive list of packet descriptor.

	Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 806653b70ee21b374d2844d144609b2e0070a86b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/firewire/tascam/amdtp-tascam.c
diff --cc sound/firewire/tascam/amdtp-tascam.c
index 95fb10b7a737,3c9abf422f24..000000000000
--- a/sound/firewire/tascam/amdtp-tascam.c
+++ b/sound/firewire/tascam/amdtp-tascam.c
@@@ -166,38 -176,37 +176,60 @@@ static void read_status_messages(struc
  }
  
  static unsigned int process_tx_data_blocks(struct amdtp_stream *s,
 -					   const struct pkt_desc *desc,
 -					   struct snd_pcm_substream *pcm)
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
  {
++<<<<<<< HEAD
 +	struct snd_pcm_substream *pcm;
 +
 +	pcm = READ_ONCE(s->pcm);
 +	if (data_blocks > 0 && pcm)
 +		read_pcm_s32(s, pcm, buffer, data_blocks);
++=======
+ 	unsigned int pcm_frames = 0;
+ 
+ 	if (pcm) {
+ 		read_pcm_s32(s, pcm, desc->ctx_payload, desc->data_blocks,
+ 			     pcm_frames);
+ 		pcm_frames += desc->data_blocks;
+ 	}
++>>>>>>> 806653b70ee2 (ALSA: firewire-tascam: code refactoring for TASCAM data block processing layer)
  
 -	read_status_messages(s, desc->ctx_payload, desc->data_blocks);
 +	read_status_messages(s, buffer, data_blocks);
  
 -	return pcm_frames;
 +	return data_blocks;
  }
  
  static unsigned int process_rx_data_blocks(struct amdtp_stream *s,
 -					   const struct pkt_desc *desc,
 -					   struct snd_pcm_substream *pcm)
 +					   __be32 *buffer,
 +					   unsigned int data_blocks,
 +					   unsigned int *syt)
  {
++<<<<<<< HEAD
 +	struct snd_pcm_substream *pcm;
 +
 +	/* This field is not used. */
 +	*syt = 0x0000;
++=======
+ 	unsigned int pcm_frames = 0;
+ 
+ 	if (pcm) {
+ 		write_pcm_s32(s, pcm, desc->ctx_payload, desc->data_blocks,
+ 			      pcm_frames);
+ 		pcm_frames += desc->data_blocks;
+ 	} else {
+ 		write_pcm_silence(s, desc->ctx_payload, desc->data_blocks);
+ 	}
++>>>>>>> 806653b70ee2 (ALSA: firewire-tascam: code refactoring for TASCAM data block processing layer)
  
 -	return pcm_frames;
 +	pcm = READ_ONCE(s->pcm);
 +	if (pcm)
 +		write_pcm_s32(s, pcm, buffer, data_blocks);
 +	else
 +		write_pcm_silence(s, buffer, data_blocks);
 +
 +	return data_blocks;
  }
  
  int amdtp_tscm_init(struct amdtp_stream *s, struct fw_unit *unit,
* Unmerged path sound/firewire/tascam/amdtp-tascam.c
