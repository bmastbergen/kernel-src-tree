s390/qeth: don't bother updating the last-tx time

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit fdd1a5303efb03bfa4016f29a519f0e553739069
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/fdd1a530.failed

As the documentation for netif_trans_update() says, netdev_start_xmit()
already updates the last-tx time after every good xmit. So don't
duplicate that effort.

One odd case is that qeth_flush_buffers() also gets called from our
TX completion handler, to flush out any partially filled buffer when
we switch the queue to non-packing mode. But as the TX completion
handler will _always_ wake the txq, we don't have to worry about
the TX watchdog there.

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fdd1a5303efb03bfa4016f29a519f0e553739069)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_main.c
diff --cc drivers/s390/net/qeth_core_main.c
index 67e5e3d26068,9e495df742cb..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -3382,7 -3370,7 +3382,11 @@@ static void qeth_flush_buffers(struct q
  		}
  	}
  
++<<<<<<< HEAD
 +	netif_trans_update(queue->card->dev);
++=======
+ 	QETH_TXQ_STAT_ADD(queue, bufs, count);
++>>>>>>> fdd1a5303efb (s390/qeth: don't bother updating the last-tx time)
  	qdio_flags = QDIO_FLAG_SYNC_OUTPUT;
  	if (atomic_read(&queue->set_pci_flags_count))
  		qdio_flags |= QDIO_FLAG_PCI_OUT;
* Unmerged path drivers/s390/net/qeth_core_main.c
