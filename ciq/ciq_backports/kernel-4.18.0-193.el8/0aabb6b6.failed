scsi: qla2xxx: Fix Nport ID display value

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Quinn Tran <qutran@marvell.com>
commit 0aabb6b699f72dca96988d3f428e222f932dc889
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/0aabb6b6.failed

For N2N, the NPort ID is assigned by driver in the PLOGI ELS.  According to
FW Spec the byte order for SID is not the same as DID.

Link: https://lore.kernel.org/r/20190912180918.6436-8-hmadhani@marvell.com
	Reviewed-by: Roman Bolshakov <r.bolshakov@yadro.com>
	Tested-by: Roman Bolshakov <r.bolshakov@yadro.com>
	Signed-off-by: Quinn Tran <qutran@marvell.com>
	Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 0aabb6b699f72dca96988d3f428e222f932dc889)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_iocb.c
diff --cc drivers/scsi/qla2xxx/qla_iocb.c
index efd570826e6c,518eb954cf42..000000000000
--- a/drivers/scsi/qla2xxx/qla_iocb.c
+++ b/drivers/scsi/qla2xxx/qla_iocb.c
@@@ -2684,26 -2656,22 +2684,33 @@@ qla24xx_els_logo_iocb(srb_t *sp, struc
  	els_iocb->port_id[0] = sp->fcport->d_id.b.al_pa;
  	els_iocb->port_id[1] = sp->fcport->d_id.b.area;
  	els_iocb->port_id[2] = sp->fcport->d_id.b.domain;
++<<<<<<< HEAD
 +	els_iocb->s_id[0] = vha->d_id.b.al_pa;
 +	els_iocb->s_id[1] = vha->d_id.b.area;
 +	els_iocb->s_id[2] = vha->d_id.b.domain;
 +	els_iocb->control_flags = 0;
++=======
+ 	/* For SID the byte order is different than DID */
+ 	els_iocb->s_id[1] = vha->d_id.b.al_pa;
+ 	els_iocb->s_id[2] = vha->d_id.b.area;
+ 	els_iocb->s_id[0] = vha->d_id.b.domain;
++>>>>>>> 0aabb6b699f7 (scsi: qla2xxx: Fix Nport ID display value)
  
  	if (elsio->u.els_logo.els_cmd == ELS_DCMD_PLOGI) {
 -		els_iocb->control_flags = 0;
  		els_iocb->tx_byte_count = els_iocb->tx_len =
 -			cpu_to_le32(sizeof(struct els_plogi_payload));
 -		put_unaligned_le64(elsio->u.els_plogi.els_plogi_pyld_dma,
 -				   &els_iocb->tx_address);
 +			sizeof(struct els_plogi_payload);
 +		els_iocb->tx_address[0] =
 +			cpu_to_le32(LSD(elsio->u.els_plogi.els_plogi_pyld_dma));
 +		els_iocb->tx_address[1] =
 +			cpu_to_le32(MSD(elsio->u.els_plogi.els_plogi_pyld_dma));
 +
  		els_iocb->rx_dsd_count = 1;
  		els_iocb->rx_byte_count = els_iocb->rx_len =
 -			cpu_to_le32(sizeof(struct els_plogi_payload));
 -		put_unaligned_le64(elsio->u.els_plogi.els_resp_pyld_dma,
 -				   &els_iocb->rx_address);
 +			sizeof(struct els_plogi_payload);
 +		els_iocb->rx_address[0] =
 +			cpu_to_le32(LSD(elsio->u.els_plogi.els_resp_pyld_dma));
 +		els_iocb->rx_address[1] =
 +			cpu_to_le32(MSD(elsio->u.els_plogi.els_resp_pyld_dma));
  
  		ql_dbg(ql_dbg_io + ql_dbg_buffer, vha, 0x3073,
  		    "PLOGI ELS IOCB:\n");
* Unmerged path drivers/scsi/qla2xxx/qla_iocb.c
