net/mlx5: Add HW bits and definitions required for SW steering

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [kernel] mlx5: Add HW bits and definitions required for SW steering (Alaa Hleihel) [1760284 1724336]
Rebuild_FUZZ: 96.67%
commit-author Alex Vesker <valex@mellanox.com>
commit 97b5484ed608605dca9e461c0289d1195ba9608d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/97b5484e.failed

Add the required Software Steering hardware definitions and
bits to mlx5_ifc.

	Signed-off-by: Alex Vesker <valex@mellanox.com>
	Signed-off-by: Yevgeny Klitenik <kliten@mellanox.com>
	Reviewed-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 97b5484ed608605dca9e461c0289d1195ba9608d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 705e876d1842,76e945dbc7ed..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -650,11 -697,33 +681,19 @@@ struct mlx5_ifc_flow_table_nic_cap_bit
  
  	struct mlx5_ifc_flow_table_prop_layout_bits flow_table_properties_nic_transmit_sniffer;
  
- 	u8         reserved_at_e00[0x7200];
+ 	u8         reserved_at_e00[0x1200];
+ 
+ 	u8         sw_steering_nic_rx_action_drop_icm_address[0x40];
+ 
+ 	u8         sw_steering_nic_tx_action_drop_icm_address[0x40];
+ 
+ 	u8         sw_steering_nic_tx_action_allow_icm_address[0x40];
+ 
+ 	u8         reserved_at_20c0[0x5f40];
  };
  
 -enum {
 -	MLX5_FDB_TO_VPORT_REG_C_0 = 0x01,
 -	MLX5_FDB_TO_VPORT_REG_C_1 = 0x02,
 -	MLX5_FDB_TO_VPORT_REG_C_2 = 0x04,
 -	MLX5_FDB_TO_VPORT_REG_C_3 = 0x08,
 -	MLX5_FDB_TO_VPORT_REG_C_4 = 0x10,
 -	MLX5_FDB_TO_VPORT_REG_C_5 = 0x20,
 -	MLX5_FDB_TO_VPORT_REG_C_6 = 0x40,
 -	MLX5_FDB_TO_VPORT_REG_C_7 = 0x80,
 -};
 -
  struct mlx5_ifc_flow_table_eswitch_cap_bits {
 -	u8      fdb_to_vport_reg_c_id[0x8];
 -	u8      reserved_at_8[0xf];
 -	u8      flow_source[0x1];
 -	u8      reserved_at_18[0x2];
 +	u8      reserved_at_0[0x1a];
  	u8      multi_fdb_encap[0x1];
  	u8      reserved_at_1b[0x1];
  	u8      fdb_multi_path_to_table[0x1];
@@@ -2592,6 -2732,8 +2673,11 @@@ union mlx5_ifc_hca_cap_union_bits 
  	struct mlx5_ifc_qos_cap_bits qos_cap;
  	struct mlx5_ifc_debug_cap_bits debug_cap;
  	struct mlx5_ifc_fpga_cap_bits fpga_cap;
++<<<<<<< HEAD
++=======
+ 	struct mlx5_ifc_tls_cap_bits tls_cap;
+ 	struct mlx5_ifc_device_mem_cap_bits device_mem_cap;
++>>>>>>> 97b5484ed608 (net/mlx5: Add HW bits and definitions required for SW steering)
  	u8         reserved_at_0[0x8000];
  };
  
@@@ -5247,6 -5484,16 +5412,19 @@@ enum 
  	MLX5_ACTION_IN_FIELD_OUT_DIPV4         = 0x16,
  	MLX5_ACTION_IN_FIELD_OUT_FIRST_VID     = 0x17,
  	MLX5_ACTION_IN_FIELD_OUT_IPV6_HOPLIMIT = 0x47,
++<<<<<<< HEAD
++=======
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_A    = 0x49,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_B    = 0x50,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_C_0  = 0x51,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_C_1  = 0x52,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_C_2  = 0x53,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_C_3  = 0x54,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_C_4  = 0x55,
+ 	MLX5_ACTION_IN_FIELD_METADATA_REG_C_5  = 0x56,
+ 	MLX5_ACTION_IN_FIELD_OUT_TCP_SEQ_NUM   = 0x59,
+ 	MLX5_ACTION_IN_FIELD_OUT_TCP_ACK_NUM   = 0x5B,
++>>>>>>> 97b5484ed608 (net/mlx5: Add HW bits and definitions required for SW steering)
  };
  
  struct mlx5_ifc_alloc_modify_header_context_out_bits {
diff --git a/include/linux/mlx5/device.h b/include/linux/mlx5/device.h
index fc2b6e807f06..b51047aaddbe 100644
--- a/include/linux/mlx5/device.h
+++ b/include/linux/mlx5/device.h
@@ -1142,6 +1142,9 @@ enum mlx5_qcam_feature_groups {
 #define MLX5_CAP_FLOWTABLE(mdev, cap) \
 	MLX5_GET(flow_table_nic_cap, mdev->caps.hca_cur[MLX5_CAP_FLOW_TABLE], cap)
 
+#define MLX5_CAP64_FLOWTABLE(mdev, cap) \
+	MLX5_GET64(flow_table_nic_cap, (mdev)->caps.hca_cur[MLX5_CAP_FLOW_TABLE], cap)
+
 #define MLX5_CAP_FLOWTABLE_MAX(mdev, cap) \
 	MLX5_GET(flow_table_nic_cap, mdev->caps.hca_max[MLX5_CAP_FLOW_TABLE], cap)
 
@@ -1205,6 +1208,10 @@ enum mlx5_qcam_feature_groups {
 	MLX5_GET(e_switch_cap, \
 		 mdev->caps.hca_cur[MLX5_CAP_ESWITCH], cap)
 
+#define MLX5_CAP64_ESW_FLOWTABLE(mdev, cap) \
+	MLX5_GET64(flow_table_eswitch_cap, \
+		(mdev)->caps.hca_cur[MLX5_CAP_ESWITCH_FLOW_TABLE], cap)
+
 #define MLX5_CAP_ESW_MAX(mdev, cap) \
 	MLX5_GET(e_switch_cap, \
 		 mdev->caps.hca_max[MLX5_CAP_ESWITCH], cap)
* Unmerged path include/linux/mlx5/mlx5_ifc.h
