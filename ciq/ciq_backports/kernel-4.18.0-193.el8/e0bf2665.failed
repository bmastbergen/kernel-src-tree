KVM/nVMX: Use page_address_valid in a few more locations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author KarimAllah Ahmed <karahmed@amazon.de>
commit e0bf2665ca26c1f6d6909de29bd382e7a5ee41e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e0bf2665.failed

Use page_address_valid in a few more locations that is already checking for
a page aligned address that does not cross the maximum physical address.

	Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit e0bf2665ca26c1f6d6909de29bd382e7a5ee41e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/nested.c
diff --cc arch/x86/kvm/vmx/nested.c
index 2eb02eaaa147,877593573b52..000000000000
--- a/arch/x86/kvm/vmx/nested.c
+++ b/arch/x86/kvm/vmx/nested.c
@@@ -4580,8 -4545,7 +4580,12 @@@ static int handle_vmptrld(struct kvm_vc
  	if (nested_vmx_get_vmptr(vcpu, &vmptr))
  		return 1;
  
++<<<<<<< HEAD
 +	nested_taint();
 +	if (!PAGE_ALIGNED(vmptr) || (vmptr >> cpuid_maxphyaddr(vcpu)))
++=======
+ 	if (!page_address_valid(vcpu, vmptr))
++>>>>>>> e0bf2665ca26 (KVM/nVMX: Use page_address_valid in a few more locations)
  		return nested_vmx_failValid(vcpu,
  			VMXERR_VMPTRLD_INVALID_ADDRESS);
  
* Unmerged path arch/x86/kvm/vmx/nested.c
