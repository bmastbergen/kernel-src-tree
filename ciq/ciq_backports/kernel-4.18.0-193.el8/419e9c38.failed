iomap: Fix pipe page leakage during splicing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jan Kara <jack@suse.cz>
commit 419e9c38aa075ed0cd3c13d47e15954b686bcdb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/419e9c38.failed

When splicing using iomap_dio_rw() to a pipe, we may leak pipe pages
because bio_iov_iter_get_pages() records that the pipe will have full
extent worth of data however if file size is not block size aligned
iomap_dio_rw() returns less than what bio_iov_iter_get_pages() set up
and splice code gets confused leaking a pipe page with the file tail.

Handle the situation similarly to the old direct IO implementation and
revert iter to actually returned read amount which makes iter consistent
with value returned from iomap_dio_rw() and thus the splice code is
happy.

Fixes: ff6a9292e6f6 ("iomap: implement direct I/O")
CC: stable@vger.kernel.org
	Reported-by: syzbot+991400e8eba7e00a26e1@syzkaller.appspotmail.com
	Signed-off-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 419e9c38aa075ed0cd3c13d47e15954b686bcdb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/direct-io.c
* Unmerged path fs/iomap/direct-io.c
* Unmerged path fs/iomap/direct-io.c
