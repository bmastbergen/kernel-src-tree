printk: lock/unlock console only for new logbuf entries

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
commit 3ac37a93fa9217e576bebfd4ba3e80edaaeb2289
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3ac37a93.failed

Prior to commit 5c2992ee7fd8a29 ("printk: remove console flushing special
cases for partial buffered lines") we would do console_cont_flush()
for each pr_cont() to print cont fragments, so console_unlock() would
actually print data:

	pr_cont();
	 console_lock();
	 console_unlock()
	  console_cont_flush(); // print cont fragment
	...
	pr_cont();
	 console_lock();
	 console_unlock()
	  console_cont_flush(); // print cont fragment

We don't do console_cont_flush() anymore, so when we do pr_cont()
console_unlock() does nothing (unless we flushed the cont buffer):

	pr_cont();
	 console_lock();
	 console_unlock();      // noop
	...
	pr_cont();
	 console_lock();
	 console_unlock();      // noop
	...
	pr_cont();
	  cont_flush();
	    console_lock();
	    console_unlock();   // print data

We also wakeup klogd purposelessly for pr_cont() output - un-flushed
cont buffer is not stored in log_buf; there is nothing to pull.

Thus we can console_lock()/console_unlock()/wake_up_klogd() only when
we know that we log_store()-ed a message and there is something to
print to the consoles/syslog.

Link: http://lkml.kernel.org/r/20181002023836.4487-3-sergey.senozhatsky@gmail.com
To: Steven Rostedt <rostedt@goodmis.org>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Dmitriy Vyukov <dvyukov@google.com>
	Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
	Cc: Tejun Heo <tj@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: LKML <linux-kernel@vger.kernel.org>
	Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
	Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Signed-off-by: Petr Mladek <pmladek@suse.com>
(cherry picked from commit 3ac37a93fa9217e576bebfd4ba3e80edaaeb2289)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/printk/printk.c
diff --cc kernel/printk/printk.c
index 2c3a2b6d9fd5,e9a7e50ed60a..000000000000
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@@ -1895,11 -1881,32 +1895,36 @@@ asmlinkage int vprintk_emit(int facilit
  	if (dict)
  		lflags |= LOG_PREFIX|LOG_NEWLINE;
  
 -	return log_output(facility, level, lflags,
 -			  dict, dictlen, text, text_len);
 -}
 +	if (suppress_message_printing(level))
 +		lflags |= LOG_NOCONS;
 +
++<<<<<<< HEAD
 +	printed_len = log_output(facility, level, lflags, dict, dictlen, text, text_len);
  
++=======
+ asmlinkage int vprintk_emit(int facility, int level,
+ 			    const char *dict, size_t dictlen,
+ 			    const char *fmt, va_list args)
+ {
+ 	int printed_len;
+ 	bool in_sched = false, pending_output;
+ 	unsigned long flags;
+ 	u64 curr_log_seq;
+ 
+ 	if (level == LOGLEVEL_SCHED) {
+ 		level = LOGLEVEL_DEFAULT;
+ 		in_sched = true;
+ 	}
+ 
+ 	boot_delay_msec(level);
+ 	printk_delay();
+ 
+ 	/* This stops the holder of console_sem just where we want him */
+ 	logbuf_lock_irqsave(flags);
+ 	curr_log_seq = log_next_seq;
+ 	printed_len = vprintk_store(facility, level, dict, dictlen, fmt, args);
+ 	pending_output = (curr_log_seq != log_next_seq);
++>>>>>>> 3ac37a93fa92 (printk: lock/unlock console only for new logbuf entries)
  	logbuf_unlock_irqrestore(flags);
  
  	/* If called from the scheduler, we can not call up(). */
* Unmerged path kernel/printk/printk.c
