bnxt_en: Refactor TPA logic.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] bnxt_en: Refactor TPA logic (Jonathan Toppins) [1724766]
Rebuild_FUZZ: 98.18%
commit-author Michael Chan <michael.chan@broadcom.com>
commit 4a228a3a5e58e5c05c6ffb5b430e5cb936865a8b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4a228a3a.failed

Refactor the TPA logic slightly, so that the code can be more easily
extended to support TPA on the new 57500 chips.  In particular, the
logic to get the next aggregation completion is refactored into a
new function bnxt_get_agg() so that this operation is made more
generalized.  This operation will be different on the new chip in TPA
mode.  The logic to recycle the aggregation buffers has a new start
index parameter added for the same purpose.

	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4a228a3a5e58e5c05c6ffb5b430e5cb936865a8b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index 1824f8494ea6,2491bf139cf5..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -2500,8 -2533,8 +2533,13 @@@ static void bnxt_free_rx_rings(struct b
  		if (xdp_rxq_info_is_reg(&rxr->xdp_rxq))
  			xdp_rxq_info_unreg(&rxr->xdp_rxq);
  
++<<<<<<< HEAD
 +		kfree(rxr->rx_tpa);
 +		rxr->rx_tpa = NULL;
++=======
+ 		page_pool_destroy(rxr->page_pool);
+ 		rxr->page_pool = NULL;
++>>>>>>> 4a228a3a5e58 (bnxt_en: Refactor TPA logic.)
  
  		kfree(rxr->rx_agg_bmap);
  		rxr->rx_agg_bmap = NULL;
@@@ -2514,9 -2547,29 +2552,9 @@@
  	}
  }
  
 -static int bnxt_alloc_rx_page_pool(struct bnxt *bp,
 -				   struct bnxt_rx_ring_info *rxr)
 -{
 -	struct page_pool_params pp = { 0 };
 -
 -	pp.pool_size = bp->rx_ring_size;
 -	pp.nid = dev_to_node(&bp->pdev->dev);
 -	pp.dev = &bp->pdev->dev;
 -	pp.dma_dir = DMA_BIDIRECTIONAL;
 -
 -	rxr->page_pool = page_pool_create(&pp);
 -	if (IS_ERR(rxr->page_pool)) {
 -		int err = PTR_ERR(rxr->page_pool);
 -
 -		rxr->page_pool = NULL;
 -		return err;
 -	}
 -	return 0;
 -}
 -
  static int bnxt_alloc_rx_rings(struct bnxt *bp)
  {
- 	int i, rc, agg_rings = 0, tpa_rings = 0;
+ 	int i, rc = 0, agg_rings = 0;
  
  	if (!bp->rx_ring)
  		return -ENOMEM;
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
