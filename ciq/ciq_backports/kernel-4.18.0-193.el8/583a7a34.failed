mac80211: fill low rate even for HAS_RATE_CONTROL

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 583a7a34c5d3bb76777b710c6f3fcd51981db256
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/583a7a34.failed

If HW advertises it has rate control, we skip all of the
rate control assignments, but sometimes the data we have
here is useful, especially so that we don't have to do
the lookups again on which rates are configured and are
supported.

So do the low rate assignment anyway to help out drivers
that might need it.

	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 583a7a34c5d3bb76777b710c6f3fcd51981db256)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/rate.c
diff --cc net/mac80211/rate.c
index 734e0677f820,b3ac330c3eb0..000000000000
--- a/net/mac80211/rate.c
+++ b/net/mac80211/rate.c
@@@ -894,12 -892,17 +894,16 @@@ void rate_control_get_rate(struct ieee8
  		info->control.rates[i].count = 0;
  	}
  
- 	if (ieee80211_hw_check(&sdata->local->hw, HAS_RATE_CONTROL))
+ 	if (rate_control_send_low(sta ? &sta->sta : NULL, txrc))
  		return;
  
++<<<<<<< HEAD
 +	if (rate_control_send_low(ista, txrc))
++=======
+ 	if (ieee80211_hw_check(&sdata->local->hw, HAS_RATE_CONTROL))
++>>>>>>> 583a7a34c5d3 (mac80211: fill low rate even for HAS_RATE_CONTROL)
  		return;
  
 -	if (sta && test_sta_flag(sta, WLAN_STA_RATE_CONTROL)) {
 -		ista = &sta->sta;
 -		priv_sta = sta->rate_ctrl_priv;
 -	}
 -
  	if (ista) {
  		spin_lock_bh(&sta->rate_ctrl_lock);
  		ref->ops->get_rate(ref->priv, ista, priv_sta, txrc);
* Unmerged path net/mac80211/rate.c
