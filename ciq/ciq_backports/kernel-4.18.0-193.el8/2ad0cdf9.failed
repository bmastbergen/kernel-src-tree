drm/amd/display: set minimum abm backlight level

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Anthony Koo <Anthony.Koo@amd.com>
commit 2ad0cdf9e2e9e079af34af681863fa638f2ee212
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/2ad0cdf9.failed

[Why]
A lot of the time, the backlight characteristic curve maps min backlight
to a non-zero value.
But there are cases where we want the curve to intersect at 0.
In this scenario even if OS never asks to set 0% backlight, the ABM
reduction can result in backlight being lowered close to 0.
This particularly can cause problems in some LED drivers, and in
general just looks like backlight is completely off.

[How]
Add default cap to disallow backlight from dropping below 1%
even after ABM reduction is applied.

	Signed-off-by: Anthony Koo <Anthony.Koo@amd.com>
	Reviewed-by: Aric Cyr <Aric.Cyr@amd.com>
	Acked-by: Leo Li <sunpeng.li@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 2ad0cdf9e2e9e079af34af681863fa638f2ee212)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
#	drivers/gpu/drm/amd/display/modules/power/power_helpers.c
diff --cc drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
index 3e8da751bf94,83579e0619dc..000000000000
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
@@@ -686,10 -942,18 +686,21 @@@ static int dm_late_init(void *handle
  	params.backlight_lut_array_size = 16;
  	params.backlight_lut_array = linear_lut;
  
++<<<<<<< HEAD
 +	ret = dmcu_load_iram(dmcu, params);
++=======
+ 	/* Min backlight level after ABM reduction,  Don't allow below 1%
+ 	 * 0xFFFF x 0.01 = 0x28F
+ 	 */
+ 	params.min_abm_backlight = 0x28F;
+ 
+ 	/* todo will enable for navi10 */
+ 	if (adev->asic_type <= CHIP_RAVEN) {
+ 		ret = dmcu_load_iram(dmcu, params);
++>>>>>>> 2ad0cdf9e2e9 (drm/amd/display: set minimum abm backlight level)
  
 -		if (!ret)
 -			return -EINVAL;
 -	}
 +	if (!ret)
 +		return -EINVAL;
  
  	return detect_mst_link_for_all_connectors(adev->ddev);
  }
diff --cc drivers/gpu/drm/amd/display/modules/power/power_helpers.c
index 038b88221c5f,4e2f615c3566..000000000000
--- a/drivers/gpu/drm/amd/display/modules/power/power_helpers.c
+++ b/drivers/gpu/drm/amd/display/modules/power/power_helpers.c
@@@ -128,16 -164,19 +128,27 @@@ struct iram_table_v_2_2 
  	uint8_t max_reduction[NUM_AMBI_LEVEL][NUM_AGGR_LEVEL];		/* 0x16 U0.8 */
  	uint8_t bright_pos_gain[NUM_AMBI_LEVEL][NUM_AGGR_LEVEL];	/* 0x2a U2.6 */
  	uint8_t dark_pos_gain[NUM_AMBI_LEVEL][NUM_AGGR_LEVEL];		/* 0x3e U2.6 */
++<<<<<<< HEAD
 +	uint8_t hybridFactor[NUM_AGGR_LEVEL];						/* 0x52 U0.8 */
 +	uint8_t contrastFactor[NUM_AGGR_LEVEL];						/* 0x56 U0.8 */
 +	uint8_t deviation_gain[NUM_AGGR_LEVEL];						/* 0x5a U0.8 */
 +	uint8_t iir_curve[NUM_AMBI_LEVEL];							/* 0x5e U0.8 */
 +	uint8_t pad[29];											/* 0x63 U0.8 */
++=======
+ 	uint8_t hybrid_factor[NUM_AGGR_LEVEL];				/* 0x52 U0.8 */
+ 	uint8_t contrast_factor[NUM_AGGR_LEVEL];			/* 0x56 U0.8 */
+ 	uint8_t deviation_gain[NUM_AGGR_LEVEL];				/* 0x5a U0.8 */
+ 	uint8_t iir_curve[NUM_AMBI_LEVEL];				/* 0x5e U0.8 */
+ 	uint8_t min_knee[NUM_AGGR_LEVEL];				/* 0x63 U0.8 */
+ 	uint8_t max_knee[NUM_AGGR_LEVEL];				/* 0x67 U0.8 */
+ 	uint16_t min_abm_backlight;					/* 0x6b U16  */
+ 	uint8_t pad[19];						/* 0x6d U0.8 */
++>>>>>>> 2ad0cdf9e2e9 (drm/amd/display: set minimum abm backlight level)
  
  	/* parameters for crgb conversion */
- 	uint16_t crgb_thresh[NUM_POWER_FN_SEGS];					/* 0x80 U3.13 */
- 	uint16_t crgb_offset[NUM_POWER_FN_SEGS];					/* 0x90 U1.15 */
- 	uint16_t crgb_slope[NUM_POWER_FN_SEGS];						/* 0xa0 U4.12 */
+ 	uint16_t crgb_thresh[NUM_POWER_FN_SEGS];			/* 0x80 U3.13 */
+ 	uint16_t crgb_offset[NUM_POWER_FN_SEGS];			/* 0x90 U1.15 */
+ 	uint16_t crgb_slope[NUM_POWER_FN_SEGS];				/* 0xa0 U4.12 */
  
  	/* parameters for custom curve */
  	/* thresholds for brightness --> backlight */
@@@ -407,10 -447,13 +419,13 @@@ void fill_iram_v_2_2(struct iram_table_
  
  	ram_table->flags = 0x0;
  
+ 	ram_table->min_abm_backlight =
+ 			cpu_to_be16(params.min_abm_backlight);
+ 
  	ram_table->deviation_gain[0] = 0xb3;
 -	ram_table->deviation_gain[1] = 0xa8;
 -	ram_table->deviation_gain[2] = 0x98;
 -	ram_table->deviation_gain[3] = 0x68;
 +	ram_table->deviation_gain[1] = 0xb3;
 +	ram_table->deviation_gain[2] = 0xb3;
 +	ram_table->deviation_gain[3] = 0xb3;
  
  	ram_table->min_reduction[0][0] = min_reduction_table_v_2_2[abm_config[set][0]];
  	ram_table->min_reduction[1][0] = min_reduction_table_v_2_2[abm_config[set][0]];
@@@ -498,15 -541,76 +513,83 @@@
  	ram_table->dark_pos_gain[4][2] = 0x00;
  	ram_table->dark_pos_gain[4][3] = 0x00;
  
 -	ram_table->hybrid_factor[0] = 0xff;
 -	ram_table->hybrid_factor[1] = 0xff;
 -	ram_table->hybrid_factor[2] = 0xff;
 -	ram_table->hybrid_factor[3] = 0xc0;
 -
 +	ram_table->hybridFactor[0] = 0xff;
 +	ram_table->hybridFactor[1] = 0xff;
 +	ram_table->hybridFactor[2] = 0xff;
 +	ram_table->hybridFactor[3] = 0xc0;
 +
++<<<<<<< HEAD
 +	ram_table->contrastFactor[0] = 0x99;
 +	ram_table->contrastFactor[1] = 0x99;
 +	ram_table->contrastFactor[2] = 0x99;
 +	ram_table->contrastFactor[3] = 0x80;
++=======
+ 	ram_table->contrast_factor[0] = 0x99;
+ 	ram_table->contrast_factor[1] = 0x99;
+ 	ram_table->contrast_factor[2] = 0x90;
+ 	ram_table->contrast_factor[3] = 0x80;
+ 
+ 	ram_table->iir_curve[0] = 0x65;
+ 	ram_table->iir_curve[1] = 0x65;
+ 	ram_table->iir_curve[2] = 0x65;
+ 	ram_table->iir_curve[3] = 0x65;
+ 	ram_table->iir_curve[4] = 0x65;
+ 
+ 	//Gamma 2.2
+ 	ram_table->crgb_thresh[0] = cpu_to_be16(0x127c);
+ 	ram_table->crgb_thresh[1] = cpu_to_be16(0x151b);
+ 	ram_table->crgb_thresh[2] = cpu_to_be16(0x17d5);
+ 	ram_table->crgb_thresh[3] = cpu_to_be16(0x1a56);
+ 	ram_table->crgb_thresh[4] = cpu_to_be16(0x1c83);
+ 	ram_table->crgb_thresh[5] = cpu_to_be16(0x1e72);
+ 	ram_table->crgb_thresh[6] = cpu_to_be16(0x20f0);
+ 	ram_table->crgb_thresh[7] = cpu_to_be16(0x232b);
+ 	ram_table->crgb_offset[0] = cpu_to_be16(0x2999);
+ 	ram_table->crgb_offset[1] = cpu_to_be16(0x3999);
+ 	ram_table->crgb_offset[2] = cpu_to_be16(0x4666);
+ 	ram_table->crgb_offset[3] = cpu_to_be16(0x5999);
+ 	ram_table->crgb_offset[4] = cpu_to_be16(0x6333);
+ 	ram_table->crgb_offset[5] = cpu_to_be16(0x7800);
+ 	ram_table->crgb_offset[6] = cpu_to_be16(0x8c00);
+ 	ram_table->crgb_offset[7] = cpu_to_be16(0xa000);
+ 	ram_table->crgb_slope[0]  = cpu_to_be16(0x3609);
+ 	ram_table->crgb_slope[1]  = cpu_to_be16(0x2dfa);
+ 	ram_table->crgb_slope[2]  = cpu_to_be16(0x27ea);
+ 	ram_table->crgb_slope[3]  = cpu_to_be16(0x235d);
+ 	ram_table->crgb_slope[4]  = cpu_to_be16(0x2042);
+ 	ram_table->crgb_slope[5]  = cpu_to_be16(0x1dc3);
+ 	ram_table->crgb_slope[6]  = cpu_to_be16(0x1b1a);
+ 	ram_table->crgb_slope[7]  = cpu_to_be16(0x1910);
+ 
+ 	fill_backlight_transform_table_v_2_2(
+ 			params, ram_table);
+ }
+ 
+ void fill_iram_v_2_3(struct iram_table_v_2_2 *ram_table, struct dmcu_iram_parameters params)
+ {
+ 	unsigned int i, j;
+ 	unsigned int set = params.set;
+ 
+ 	ram_table->flags = 0x0;
+ 
+ 	ram_table->min_abm_backlight =
+ 			cpu_to_be16(params.min_abm_backlight);
+ 
+ 	for (i = 0; i < NUM_AGGR_LEVEL; i++) {
+ 		ram_table->hybrid_factor[i] = abm_settings[set][i].brightness_gain;
+ 		ram_table->contrast_factor[i] = abm_settings[set][i].contrast_factor;
+ 		ram_table->deviation_gain[i] = abm_settings[set][i].deviation_gain;
+ 		ram_table->min_knee[i] = abm_settings[set][i].min_knee;
+ 		ram_table->max_knee[i] = abm_settings[set][i].max_knee;
+ 
+ 		for (j = 0; j < NUM_AMBI_LEVEL; j++) {
+ 			ram_table->min_reduction[j][i] = abm_settings[set][i].min_reduction;
+ 			ram_table->max_reduction[j][i] = abm_settings[set][i].max_reduction;
+ 			ram_table->bright_pos_gain[j][i] = abm_settings[set][i].bright_pos_gain;
+ 			ram_table->dark_pos_gain[j][i] = abm_settings[set][i].dark_pos_gain;
+ 		}
+ 	}
++>>>>>>> 2ad0cdf9e2e9 (drm/amd/display: set minimum abm backlight level)
  
  	ram_table->iir_curve[0] = 0x65;
  	ram_table->iir_curve[1] = 0x65;
* Unmerged path drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
* Unmerged path drivers/gpu/drm/amd/display/modules/power/power_helpers.c
diff --git a/drivers/gpu/drm/amd/display/modules/power/power_helpers.h b/drivers/gpu/drm/amd/display/modules/power/power_helpers.h
index da5df00fedce..e54157026330 100644
--- a/drivers/gpu/drm/amd/display/modules/power/power_helpers.h
+++ b/drivers/gpu/drm/amd/display/modules/power/power_helpers.h
@@ -38,6 +38,7 @@ struct dmcu_iram_parameters {
 	unsigned int backlight_lut_array_size;
 	unsigned int backlight_ramping_reduction;
 	unsigned int backlight_ramping_start;
+	unsigned int min_abm_backlight;
 	unsigned int set;
 };
 
