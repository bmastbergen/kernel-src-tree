x86/platform/uv: Add return code to UV BIOS Init function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [x86] platform/uv: Add return code to UV BIOS Init function (Frank Ramsay) [1757510]
Rebuild_FUZZ: 96.36%
commit-author Mike Travis <mike.travis@hpe.com>
commit 9743cb68f736d986481edba4d00de454d2faa0ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/9743cb68.failed

Add a return code to the UV BIOS init function that indicates the
successful initialization of the kernel/BIOS callback interface.

	Signed-off-by: Mike Travis <mike.travis@hpe.com>
	Reviewed-by: Steve Wahl <steve.wahl@hpe.com>
	Reviewed-by: Dimitri Sivanich <dimitri.sivanich@hpe.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Christoph Hellwig <hch@infradead.org>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Hedi Berriche <hedi.berriche@hpe.com>
	Cc: Justin Ernst <justin.ernst@hpe.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Russ Anderson <russ.anderson@hpe.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20190910145839.895739629@stormcage.eag.rdlabs.hpecorp.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 9743cb68f736d986481edba4d00de454d2faa0ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/uv/bios.h
#	arch/x86/platform/uv/bios_uv.c
diff --cc arch/x86/include/asm/uv/bios.h
index 3f697a9e3f59,389174eaec79..000000000000
--- a/arch/x86/include/asm/uv/bios.h
+++ b/arch/x86/include/asm/uv/bios.h
@@@ -152,11 -138,7 +152,15 @@@ extern s64 uv_bios_change_memprotect(u6
  extern s64 uv_bios_reserved_page_pa(u64, u64 *, u64 *, u64 *);
  extern int uv_bios_set_legacy_vga_target(bool decode, int domain, int bus);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_EFI
 +extern void uv_bios_init(void);
 +#else
 +void uv_bios_init(void) { }
 +#endif
++=======
+ extern int uv_bios_init(void);
++>>>>>>> 9743cb68f736 (x86/platform/uv: Add return code to UV BIOS Init function)
  
  extern unsigned long sn_rtc_cycles_per_second;
  extern int uv_type;
diff --cc arch/x86/platform/uv/bios_uv.c
index eb33432f2f24,ece9cb9c1189..000000000000
--- a/arch/x86/platform/uv/bios_uv.c
+++ b/arch/x86/platform/uv/bios_uv.c
@@@ -207,17 -184,16 +207,21 @@@ int uv_bios_set_legacy_vga_target(bool 
  }
  EXPORT_SYMBOL_GPL(uv_bios_set_legacy_vga_target);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_EFI
 +void uv_bios_init(void)
++=======
+ int uv_bios_init(void)
++>>>>>>> 9743cb68f736 (x86/platform/uv: Add return code to UV BIOS Init function)
  {
  	uv_systab = NULL;
 -	if ((uv_systab_phys == EFI_INVALID_TABLE_ADDR) ||
 -	    !uv_systab_phys || efi_runtime_disabled()) {
 +	if ((efi.uv_systab == EFI_INVALID_TABLE_ADDR) ||
 +	    !efi.uv_systab || efi_runtime_disabled()) {
  		pr_crit("UV: UVsystab: missing\n");
- 		return;
+ 		return -EEXIST;
  	}
  
 -	uv_systab = ioremap(uv_systab_phys, sizeof(struct uv_systab));
 +	uv_systab = ioremap(efi.uv_systab, sizeof(struct uv_systab));
  	if (!uv_systab || strncmp(uv_systab->signature, UV_SYSTAB_SIG, 4)) {
  		pr_err("UV: UVsystab: bad signature!\n");
  		iounmap(uv_systab);
@@@ -229,12 -205,12 +233,13 @@@
  		int size = uv_systab->size;
  
  		iounmap(uv_systab);
 -		uv_systab = ioremap(uv_systab_phys, size);
 +		uv_systab = ioremap(efi.uv_systab, size);
  		if (!uv_systab) {
  			pr_err("UV: UVsystab: ioremap(%d) failed!\n", size);
- 			return;
+ 			return -EFAULT;
  		}
  	}
  	pr_info("UV: UVsystab: Revision:%x\n", uv_systab->revision);
+ 	return 0;
  }
 +#endif
* Unmerged path arch/x86/include/asm/uv/bios.h
* Unmerged path arch/x86/platform/uv/bios_uv.c
