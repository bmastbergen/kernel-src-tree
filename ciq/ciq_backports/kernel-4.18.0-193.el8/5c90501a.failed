iommu/amd: Only free resources once on init error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] amd: Only free resources once on init error (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 93.48%
commit-author Kevin Mitchell <kevmitch@arista.com>
commit 5c90501a7290e8066a5530f491e764730791945a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/5c90501a.failed

When amd_iommu=off was specified on the command line, free_X_resources
functions were called immediately after early_amd_iommu_init. They were
then called again when amd_iommu_init also failed (as expected).

Instead, call them only once: at the end of state_next() whenever
there's an error. These functions should be safe to call any time and
any number of times. However, since state_next is never called again in
an error state, the cleanup will only ever be run once.

This also ensures that cleanup code is run as soon as possible after an
error is detected rather than waiting for amd_iommu_init() to be called.

	Signed-off-by: Kevin Mitchell <kevmitch@arista.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 5c90501a7290e8066a5530f491e764730791945a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu_init.c
diff --cc drivers/iommu/amd_iommu_init.c
index c1c77340a209,e308fb6a2908..000000000000
--- a/drivers/iommu/amd_iommu_init.c
+++ b/drivers/iommu/amd_iommu_init.c
@@@ -2715,9 -2630,7 +2715,13 @@@ static int __init state_next(void
  		ret = early_amd_iommu_init();
  		init_state = ret ? IOMMU_INIT_ERROR : IOMMU_ACPI_FINISHED;
  		if (init_state == IOMMU_ACPI_FINISHED && amd_iommu_disabled) {
++<<<<<<< HEAD
 +			pr_info("AMD-Vi: AMD IOMMU disabled on kernel command-line\n");
 +			free_dma_resources();
 +			free_iommu_resources();
++=======
+ 			pr_info("AMD IOMMU disabled on kernel command-line\n");
++>>>>>>> 5c90501a7290 (iommu/amd: Only free resources once on init error)
  			init_state = IOMMU_CMDLINE_DISABLED;
  			ret = -EINVAL;
  		}
@@@ -2830,19 -2756,19 +2847,34 @@@ static int __init amd_iommu_init(void
  	int ret;
  
  	ret = iommu_go_to_state(IOMMU_INITIALIZED);
++<<<<<<< HEAD
 +	if (ret) {
 +		free_dma_resources();
 +		if (!irq_remapping_enabled) {
 +			disable_iommus();
 +			free_iommu_resources();
 +		} else {
 +			struct amd_iommu *iommu;
 +
 +			uninit_device_table_dma();
 +			for_each_iommu(iommu)
 +				iommu_flush_all_caches(iommu);
 +		}
 +	}
++=======
+ #ifdef CONFIG_GART_IOMMU
+ 	if (ret && list_empty(&amd_iommu_list)) {
+ 		/*
+ 		 * We failed to initialize the AMD IOMMU - try fallback
+ 		 * to GART if possible.
+ 		 */
+ 		gart_iommu_init();
+ 	}
+ #endif
+ 
+ 	for_each_iommu(iommu)
+ 		amd_iommu_debugfs_setup(iommu);
++>>>>>>> 5c90501a7290 (iommu/amd: Only free resources once on init error)
  
  	return ret;
  }
* Unmerged path drivers/iommu/amd_iommu_init.c
