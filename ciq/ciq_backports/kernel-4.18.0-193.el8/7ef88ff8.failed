sunrpc: remove svc_rdma_bc_class

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Vasily Averin <vvs@virtuozzo.com>
commit 7ef88ff85ff71dd167d29d47bdb91c63cedcd554
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7ef88ff8.failed

Remove svc_xprt_class svc_rdma_bc_class and related functions.

	Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 7ef88ff85ff71dd167d29d47bdb91c63cedcd554)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/svc_rdma_transport.c
diff --cc net/sunrpc/xprtrdma/svc_rdma_transport.c
index ddc3c02d3d1a,085933cc6b3e..000000000000
--- a/net/sunrpc/xprtrdma/svc_rdma_transport.c
+++ b/net/sunrpc/xprtrdma/svc_rdma_transport.c
@@@ -99,62 -100,6 +99,65 @@@ struct svc_xprt_class svc_rdma_class = 
  	.xcl_ident = XPRT_TRANSPORT_RDMA,
  };
  
++<<<<<<< HEAD
 +#if defined(CONFIG_SUNRPC_BACKCHANNEL)
 +static struct svc_xprt *svc_rdma_bc_create(struct svc_serv *, struct net *,
 +					   struct sockaddr *, int, int);
 +static void svc_rdma_bc_detach(struct svc_xprt *);
 +static void svc_rdma_bc_free(struct svc_xprt *);
 +
 +static const struct svc_xprt_ops svc_rdma_bc_ops = {
 +	.xpo_create = svc_rdma_bc_create,
 +	.xpo_detach = svc_rdma_bc_detach,
 +	.xpo_free = svc_rdma_bc_free,
 +	.xpo_secure_port = svc_rdma_secure_port,
 +};
 +
 +struct svc_xprt_class svc_rdma_bc_class = {
 +	.xcl_name = "rdma-bc",
 +	.xcl_owner = THIS_MODULE,
 +	.xcl_ops = &svc_rdma_bc_ops,
 +	.xcl_max_payload = (1024 - RPCRDMA_HDRLEN_MIN)
 +};
 +
 +static struct svc_xprt *svc_rdma_bc_create(struct svc_serv *serv,
 +					   struct net *net,
 +					   struct sockaddr *sa, int salen,
 +					   int flags)
 +{
 +	struct svcxprt_rdma *cma_xprt;
 +	struct svc_xprt *xprt;
 +
 +	cma_xprt = svc_rdma_create_xprt(serv, net);
 +	if (!cma_xprt)
 +		return ERR_PTR(-ENOMEM);
 +	xprt = &cma_xprt->sc_xprt;
 +
 +	svc_xprt_init(net, &svc_rdma_bc_class, xprt, serv);
 +	set_bit(XPT_CONG_CTRL, &xprt->xpt_flags);
 +
 +	dprintk("svcrdma: %s(%p)\n", __func__, xprt);
 +	return xprt;
 +}
 +
 +static void svc_rdma_bc_detach(struct svc_xprt *xprt)
 +{
 +	dprintk("svcrdma: %s(%p)\n", __func__, xprt);
 +}
 +
 +static void svc_rdma_bc_free(struct svc_xprt *xprt)
 +{
 +	struct svcxprt_rdma *rdma =
 +		container_of(xprt, struct svcxprt_rdma, sc_xprt);
 +
 +	dprintk("svcrdma: %s(%p)\n", __func__, xprt);
 +	if (xprt)
 +		kfree(rdma);
 +}
 +#endif	/* CONFIG_SUNRPC_BACKCHANNEL */
 +
++=======
++>>>>>>> 7ef88ff85ff7 (sunrpc: remove svc_rdma_bc_class)
  /* QP event handler */
  static void qp_event_handler(struct ib_event *event, void *context)
  {
diff --git a/net/sunrpc/xprtrdma/svc_rdma.c b/net/sunrpc/xprtrdma/svc_rdma.c
index 134bef6a451e..abdb3004a1e3 100644
--- a/net/sunrpc/xprtrdma/svc_rdma.c
+++ b/net/sunrpc/xprtrdma/svc_rdma.c
@@ -235,9 +235,6 @@ void svc_rdma_cleanup(void)
 		unregister_sysctl_table(svcrdma_table_header);
 		svcrdma_table_header = NULL;
 	}
-#if defined(CONFIG_SUNRPC_BACKCHANNEL)
-	svc_unreg_xprt_class(&svc_rdma_bc_class);
-#endif
 	svc_unreg_xprt_class(&svc_rdma_class);
 }
 
@@ -259,8 +256,5 @@ int svc_rdma_init(void)
 
 	/* Register RDMA with the SVC transport switch */
 	svc_reg_xprt_class(&svc_rdma_class);
-#if defined(CONFIG_SUNRPC_BACKCHANNEL)
-	svc_reg_xprt_class(&svc_rdma_bc_class);
-#endif
 	return 0;
 }
* Unmerged path net/sunrpc/xprtrdma/svc_rdma_transport.c
