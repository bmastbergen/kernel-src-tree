s390/qeth: drop redundant state checking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit 0f7aedbdf2bb92cf1a3462561b3ff4c3a42bfe7d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/0f7aedbd.failed

Now that qeth always uses dev_close() to shutdown the interface, we can
trust the locking and remove some custom state checks.
qeth_l?_stop_card() is no longer called for a card in UP state, so remove
the checks there too. This basically makes the UP state obsolete, so rip
out the whole thing (except for the sysfs-visible string).

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0f7aedbdf2bb92cf1a3462561b3ff4c3a42bfe7d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core.h
#	drivers/s390/net/qeth_core_main.c
#	drivers/s390/net/qeth_l2_main.c
#	drivers/s390/net/qeth_l3_main.c
diff --cc drivers/s390/net/qeth_core.h
index 43763e505604,c851cf6e01c4..000000000000
--- a/drivers/s390/net/qeth_core.h
+++ b/drivers/s390/net/qeth_core.h
@@@ -470,6 -443,48 +470,51 @@@ enum qeth_out_q_states 
         QETH_OUT_Q_LOCKED_FLUSH,
  };
  
++<<<<<<< HEAD
++=======
+ #define QETH_CARD_STAT_ADD(_c, _stat, _val)	((_c)->stats._stat += (_val))
+ #define QETH_CARD_STAT_INC(_c, _stat)		QETH_CARD_STAT_ADD(_c, _stat, 1)
+ 
+ #define QETH_TXQ_STAT_ADD(_q, _stat, _val)	((_q)->stats._stat += (_val))
+ #define QETH_TXQ_STAT_INC(_q, _stat)		QETH_TXQ_STAT_ADD(_q, _stat, 1)
+ 
+ struct qeth_card_stats {
+ 	u64 rx_bufs;
+ 	u64 rx_skb_csum;
+ 	u64 rx_sg_skbs;
+ 	u64 rx_sg_frags;
+ 	u64 rx_sg_alloc_page;
+ 
+ 	/* rtnl_link_stats64 */
+ 	u64 rx_packets;
+ 	u64 rx_bytes;
+ 	u64 rx_errors;
+ 	u64 rx_dropped;
+ 	u64 rx_multicast;
+ 	u64 tx_errors;
+ };
+ 
+ struct qeth_out_q_stats {
+ 	u64 bufs;
+ 	u64 bufs_pack;
+ 	u64 buf_elements;
+ 	u64 skbs_pack;
+ 	u64 skbs_sg;
+ 	u64 skbs_csum;
+ 	u64 skbs_tso;
+ 	u64 skbs_linearized;
+ 	u64 skbs_linearized_fail;
+ 	u64 tso_bytes;
+ 	u64 packing_mode_switch;
+ 
+ 	/* rtnl_link_stats64 */
+ 	u64 tx_packets;
+ 	u64 tx_bytes;
+ 	u64 tx_errors;
+ 	u64 tx_dropped;
+ };
+ 
++>>>>>>> 0f7aedbdf2bb (s390/qeth: drop redundant state checking)
  struct qeth_qdio_out_q {
  	struct qdio_buffer *qdio_bufs[QDIO_MAX_BUFFERS_PER_Q];
  	struct qeth_qdio_out_buffer *bufs[QDIO_MAX_BUFFERS_PER_Q];
diff --cc drivers/s390/net/qeth_core_main.c
index 3cee916767c4,a44a4e0d2b19..000000000000
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@@ -6209,6 -6177,32 +6202,35 @@@ netdev_features_t qeth_features_check(s
  }
  EXPORT_SYMBOL_GPL(qeth_features_check);
  
++<<<<<<< HEAD
++=======
+ void qeth_get_stats64(struct net_device *dev, struct rtnl_link_stats64 *stats)
+ {
+ 	struct qeth_card *card = dev->ml_priv;
+ 	struct qeth_qdio_out_q *queue;
+ 	unsigned int i;
+ 
+ 	QETH_CARD_TEXT(card, 5, "getstat");
+ 
+ 	stats->rx_packets = card->stats.rx_packets;
+ 	stats->rx_bytes = card->stats.rx_bytes;
+ 	stats->rx_errors = card->stats.rx_errors;
+ 	stats->rx_dropped = card->stats.rx_dropped;
+ 	stats->multicast = card->stats.rx_multicast;
+ 	stats->tx_errors = card->stats.tx_errors;
+ 
+ 	for (i = 0; i < card->qdio.no_out_queues; i++) {
+ 		queue = card->qdio.out_qs[i];
+ 
+ 		stats->tx_packets += queue->stats.tx_packets;
+ 		stats->tx_bytes += queue->stats.tx_bytes;
+ 		stats->tx_errors += queue->stats.tx_errors;
+ 		stats->tx_dropped += queue->stats.tx_dropped;
+ 	}
+ }
+ EXPORT_SYMBOL_GPL(qeth_get_stats64);
+ 
++>>>>>>> 0f7aedbdf2bb (s390/qeth: drop redundant state checking)
  int qeth_open(struct net_device *dev)
  {
  	struct qeth_card *card = dev->ml_priv;
diff --cc drivers/s390/net/qeth_l2_main.c
index 047db281d2ca,8efb2e8ff8f4..000000000000
--- a/drivers/s390/net/qeth_l2_main.c
+++ b/drivers/s390/net/qeth_l2_main.c
@@@ -613,12 -609,8 +610,17 @@@ static netdev_tx_t qeth_l2_hard_start_x
  	int tx_bytes = skb->len;
  	int rc;
  
++<<<<<<< HEAD
 +	if (card->state != CARD_STATE_UP) {
 +		card->stats.tx_carrier_errors++;
 +		goto tx_drop;
 +	}
 +
 +	queue = qeth_get_tx_queue(card, skb, ipv, cast_type);
++=======
+ 	queue = qeth_get_tx_queue(card, skb, ipv, cast_type);
+ 
++>>>>>>> 0f7aedbdf2bb (s390/qeth: drop redundant state checking)
  	netif_stop_queue(dev);
  
  	if (IS_OSN(card))
@@@ -636,9 -628,9 +638,15 @@@
  		return NETDEV_TX_BUSY;
  	} /* else fall through */
  
++<<<<<<< HEAD
 +tx_drop:
 +	card->stats.tx_dropped++;
 +	kfree_skb(skb);
++=======
+ 	QETH_TXQ_STAT_INC(queue, tx_dropped);
+ 	QETH_TXQ_STAT_INC(queue, tx_errors);
+ 	dev_kfree_skb_any(skb);
++>>>>>>> 0f7aedbdf2bb (s390/qeth: drop redundant state checking)
  	netif_wake_queue(dev);
  	return NETDEV_TX_OK;
  }
diff --cc drivers/s390/net/qeth_l3_main.c
index 0cb7ec9f29c1,7e68d9d16859..000000000000
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@@ -2075,11 -2074,6 +2073,14 @@@ static netdev_tx_t qeth_l3_hard_start_x
  			goto tx_drop;
  	}
  
++<<<<<<< HEAD
 +	if (card->state != CARD_STATE_UP) {
 +		card->stats.tx_carrier_errors++;
 +		goto tx_drop;
 +	}
 +
++=======
++>>>>>>> 0f7aedbdf2bb (s390/qeth: drop redundant state checking)
  	if (cast_type == RTN_BROADCAST && !card->info.broadcast_capable)
  		goto tx_drop;
  
* Unmerged path drivers/s390/net/qeth_core.h
* Unmerged path drivers/s390/net/qeth_core_main.c
diff --git a/drivers/s390/net/qeth_core_sys.c b/drivers/s390/net/qeth_core_sys.c
index 6e11082e0a41..67c4da71b613 100644
--- a/drivers/s390/net/qeth_core_sys.c
+++ b/drivers/s390/net/qeth_core_sys.c
@@ -29,11 +29,11 @@ static ssize_t qeth_dev_state_show(struct device *dev,
 	case CARD_STATE_HARDSETUP:
 		return sprintf(buf, "HARDSETUP\n");
 	case CARD_STATE_SOFTSETUP:
+		if (card->dev->flags & IFF_UP)
+			return sprintf(buf, "UP (LAN %s)\n",
+				       netif_carrier_ok(card->dev) ? "ONLINE" :
+								     "OFFLINE");
 		return sprintf(buf, "SOFTSETUP\n");
-	case CARD_STATE_UP:
-		return sprintf(buf, "UP (LAN %s)\n",
-			       netif_carrier_ok(card->dev) ? "ONLINE" :
-							     "OFFLINE");
 	default:
 		return sprintf(buf, "UNKNOWN\n");
 	}
* Unmerged path drivers/s390/net/qeth_l2_main.c
* Unmerged path drivers/s390/net/qeth_l3_main.c
