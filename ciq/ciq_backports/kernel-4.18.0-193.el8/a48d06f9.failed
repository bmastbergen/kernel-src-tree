KVM: LAPIC: Don't need to wakeup vCPU twice afer timer fire

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Wanpeng Li <wanpengli@tencent.com>
commit a48d06f9b7cedbb8ad7804d1720168b7ee6a34e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a48d06f9.failed

kvm_set_pending_timer() will take care to wake up the sleeping vCPU which
has pending timer, don't need to check this in apic_timer_expired() again.

	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a48d06f9b7cedbb8ad7804d1720168b7ee6a34e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/lapic.c
diff --cc arch/x86/kvm/lapic.c
index f5e7241ea740,685d17c11461..000000000000
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@@ -1546,8 -1524,49 +1546,46 @@@ void kvm_wait_lapic_expire(struct kvm_v
  	if (unlikely(!apic->lapic_timer.timer_advance_adjust_done))
  		adjust_lapic_timer_advance(vcpu, apic->lapic_timer.advance_expire_delta);
  }
 -
 -void kvm_wait_lapic_expire(struct kvm_vcpu *vcpu)
 -{
 -	if (lapic_timer_int_injected(vcpu))
 -		__kvm_wait_lapic_expire(vcpu);
 -}
  EXPORT_SYMBOL_GPL(kvm_wait_lapic_expire);
  
++<<<<<<< HEAD
++=======
+ static void kvm_apic_inject_pending_timer_irqs(struct kvm_lapic *apic)
+ {
+ 	struct kvm_timer *ktimer = &apic->lapic_timer;
+ 
+ 	kvm_apic_local_deliver(apic, APIC_LVTT);
+ 	if (apic_lvtt_tscdeadline(apic))
+ 		ktimer->tscdeadline = 0;
+ 	if (apic_lvtt_oneshot(apic)) {
+ 		ktimer->tscdeadline = 0;
+ 		ktimer->target_expiration = 0;
+ 	}
+ }
+ 
+ static void apic_timer_expired(struct kvm_lapic *apic)
+ {
+ 	struct kvm_vcpu *vcpu = apic->vcpu;
+ 	struct kvm_timer *ktimer = &apic->lapic_timer;
+ 
+ 	if (atomic_read(&apic->lapic_timer.pending))
+ 		return;
+ 
+ 	if (apic_lvtt_tscdeadline(apic) || ktimer->hv_timer_in_use)
+ 		ktimer->expired_tscdeadline = ktimer->tscdeadline;
+ 
+ 	if (kvm_use_posted_timer_interrupt(apic->vcpu)) {
+ 		if (apic->lapic_timer.timer_advance_ns)
+ 			__kvm_wait_lapic_expire(vcpu);
+ 		kvm_apic_inject_pending_timer_irqs(apic);
+ 		return;
+ 	}
+ 
+ 	atomic_inc(&apic->lapic_timer.pending);
+ 	kvm_set_pending_timer(vcpu);
+ }
+ 
++>>>>>>> a48d06f9b7ce (KVM: LAPIC: Don't need to wakeup vCPU twice afer timer fire)
  static void start_sw_tscdeadline(struct kvm_lapic *apic)
  {
  	struct kvm_timer *ktimer = &apic->lapic_timer;
* Unmerged path arch/x86/kvm/lapic.c
