net: sched: extract bstats update code into function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] sched: extract bstats update code into function (Ivan Vecera) [1739606]
Rebuild_FUZZ: 94.95%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 5e1ad95b630e652d3467d1fd1f0b5e5ea2c441e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/5e1ad95b.failed

Extract common code that increments cpu_bstats counter into standalone act
API function. Change hardware offloaded actions that use percpu counter
allocation to use the new function instead of incrementing cpu_bstats
directly.

This commit doesn't change functionality.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5e1ad95b630e652d3467d1fd1f0b5e5ea2c441e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/act_api.h
#	net/sched/act_ct.c
diff --cc include/net/act_api.h
index c61a1bf4e3de,9a32853f77f9..000000000000
--- a/include/net/act_api.h
+++ b/include/net/act_api.h
@@@ -179,6 -186,15 +179,18 @@@ int tcf_action_dump(struct sk_buff *skb
  		    int ref);
  int tcf_action_dump_old(struct sk_buff *skb, struct tc_action *a, int, int);
  int tcf_action_dump_1(struct sk_buff *skb, struct tc_action *a, int, int);
++<<<<<<< HEAD
++=======
+ 
+ static inline void tcf_action_update_bstats(struct tc_action *a,
+ 					    struct sk_buff *skb)
+ {
+ 	bstats_cpu_update(this_cpu_ptr(a->cpu_bstats), skb);
+ }
+ 
+ void tcf_action_update_stats(struct tc_action *a, u64 bytes, u32 packets,
+ 			     bool drop, bool hw);
++>>>>>>> 5e1ad95b630e (net: sched: extract bstats update code into function)
  int tcf_action_copy_stats(struct sk_buff *, struct tc_action *, int);
  
  int tcf_action_check_ctrlact(int action, struct tcf_proto *tp,
* Unmerged path net/sched/act_ct.c
* Unmerged path include/net/act_api.h
diff --git a/net/sched/act_csum.c b/net/sched/act_csum.c
index 209377dabe2f..80fe72f60513 100644
--- a/net/sched/act_csum.c
+++ b/net/sched/act_csum.c
@@ -584,7 +584,7 @@ static int tcf_csum_act(struct sk_buff *skb, const struct tc_action *a,
 	params = rcu_dereference_bh(p->params);
 
 	tcf_lastuse_update(&p->tcf_tm);
-	bstats_cpu_update(this_cpu_ptr(p->common.cpu_bstats), skb);
+	tcf_action_update_bstats(&p->common, skb);
 
 	action = READ_ONCE(p->tcf_action);
 	if (unlikely(action == TC_ACT_SHOT))
* Unmerged path net/sched/act_ct.c
diff --git a/net/sched/act_gact.c b/net/sched/act_gact.c
index c0e921d63e64..466845fb7f7e 100644
--- a/net/sched/act_gact.c
+++ b/net/sched/act_gact.c
@@ -165,7 +165,7 @@ static int tcf_gact_act(struct sk_buff *skb, const struct tc_action *a,
 		action = gact_rand[ptype](gact);
 	}
 #endif
-	bstats_cpu_update(this_cpu_ptr(gact->common.cpu_bstats), skb);
+	tcf_action_update_bstats(&gact->common, skb);
 	if (action == TC_ACT_SHOT)
 		qstats_drop_inc(this_cpu_ptr(gact->common.cpu_qstats));
 
diff --git a/net/sched/act_mirred.c b/net/sched/act_mirred.c
index e6cee7103d5b..1fa5ea4eaea4 100644
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@ -235,7 +235,7 @@ static int tcf_mirred_act(struct sk_buff *skb, const struct tc_action *a,
 	}
 
 	tcf_lastuse_update(&m->tcf_tm);
-	bstats_cpu_update(this_cpu_ptr(m->common.cpu_bstats), skb);
+	tcf_action_update_bstats(&m->common, skb);
 
 	m_mac_header_xmit = READ_ONCE(m->tcfm_mac_header_xmit);
 	m_eaction = READ_ONCE(m->tcfm_eaction);
diff --git a/net/sched/act_tunnel_key.c b/net/sched/act_tunnel_key.c
index 2e1c7c13ae7a..d2703367f08c 100644
--- a/net/sched/act_tunnel_key.c
+++ b/net/sched/act_tunnel_key.c
@@ -35,7 +35,7 @@ static int tunnel_key_act(struct sk_buff *skb, const struct tc_action *a,
 	params = rcu_dereference_bh(t->params);
 
 	tcf_lastuse_update(&t->tcf_tm);
-	bstats_cpu_update(this_cpu_ptr(t->common.cpu_bstats), skb);
+	tcf_action_update_bstats(&t->common, skb);
 	action = READ_ONCE(t->tcf_action);
 
 	switch (params->tcft_action) {
diff --git a/net/sched/act_vlan.c b/net/sched/act_vlan.c
index 40cc935e5146..810f7459c01b 100644
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@ -33,7 +33,7 @@ static int tcf_vlan_act(struct sk_buff *skb, const struct tc_action *a,
 	u16 tci;
 
 	tcf_lastuse_update(&v->tcf_tm);
-	bstats_cpu_update(this_cpu_ptr(v->common.cpu_bstats), skb);
+	tcf_action_update_bstats(&v->common, skb);
 
 	/* Ensure 'data' points at mac_header prior calling vlan manipulating
 	 * functions.
