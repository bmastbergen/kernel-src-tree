net: phy: icplus: add config_intr callback

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] phy: icplus: add config_intr callback (Petr Oros) [1772010]
Rebuild_FUZZ: 93.67%
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit ba2f55b06826fb51f15e3cb04b4457be5f66e0ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/ba2f55b0.failed

Move IRQ configuration for IP101A/G from config_init to config_intr
callback. Reasons:

1. This allows phylib to disable interrupts if needed.
2. Icplus was the only driver supporting interrupts w/o defining a
   config_intr callback. Now we can add a phylib plausibility check
   disabling interrupt mode if one of the two irq-related callbacks
   isn't defined.

I don't own hardware with this PHY, and the change is based on the
datasheet for IP101A LF (which is supposed to be register-compatible
with IP101A/G). Change is compile-tested only.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ba2f55b06826fb51f15e3cb04b4457be5f66e0ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/icplus.c
diff --cc drivers/net/phy/icplus.c
index 791587a49215,ad87bd3280d7..000000000000
--- a/drivers/net/phy/icplus.c
+++ b/drivers/net/phy/icplus.c
@@@ -234,7 -242,7 +242,11 @@@ static struct phy_driver icplus_driver[
  	.name		= "ICPlus IP101A/G",
  	.phy_id_mask	= 0x0ffffff0,
  	.features	= PHY_BASIC_FEATURES,
++<<<<<<< HEAD
 +	.flags		= PHY_HAS_INTERRUPT,
++=======
+ 	.config_intr	= ip101a_g_config_intr,
++>>>>>>> ba2f55b06826 (net: phy: icplus: add config_intr callback)
  	.ack_interrupt	= ip101a_g_ack_interrupt,
  	.config_init	= &ip101a_g_config_init,
  	.suspend	= genphy_suspend,
* Unmerged path drivers/net/phy/icplus.c
