perf db-export: Get rid of db_export__deferred()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit fead24e52383c3f8eb25b5426d52b430b84a8194
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/fead24e5.failed

db_export__deferred() deferred the export of comms if the comm string
had not been "set" (changed from :<pid>) however that problem was fixed
a long time ago by commit e803cf97a4f9 ("perf record: Synthesize COMM
event for a command line workload"), so get rid of
db_export__deferred().

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/20190710085810.1650-2-adrian.hunter@intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit fead24e52383c3f8eb25b5426d52b430b84a8194)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/db-export.c
diff --cc tools/perf/util/db-export.c
index d7315a00c731,34cf197fe74f..000000000000
--- a/tools/perf/util/db-export.c
+++ b/tools/perf/util/db-export.c
@@@ -27,56 -18,8 +27,59 @@@
  #include "callchain.h"
  #include "call-path.h"
  #include "db-export.h"
 -#include <linux/zalloc.h>
  
++<<<<<<< HEAD
 +struct deferred_export {
 +	struct list_head node;
 +	struct comm *comm;
 +};
 +
 +static int db_export__deferred(struct db_export *dbe)
 +{
 +	struct deferred_export *de;
 +	int err;
 +
 +	while (!list_empty(&dbe->deferred)) {
 +		de = list_entry(dbe->deferred.next, struct deferred_export,
 +				node);
 +		err = dbe->export_comm(dbe, de->comm);
 +		list_del(&de->node);
 +		free(de);
 +		if (err)
 +			return err;
 +	}
 +
 +	return 0;
 +}
 +
 +static void db_export__free_deferred(struct db_export *dbe)
 +{
 +	struct deferred_export *de;
 +
 +	while (!list_empty(&dbe->deferred)) {
 +		de = list_entry(dbe->deferred.next, struct deferred_export,
 +				node);
 +		list_del(&de->node);
 +		free(de);
 +	}
 +}
 +
 +static int db_export__defer_comm(struct db_export *dbe, struct comm *comm)
 +{
 +	struct deferred_export *de;
 +
 +	de = zalloc(sizeof(struct deferred_export));
 +	if (!de)
 +		return -ENOMEM;
 +
 +	de->comm = comm;
 +	list_add_tail(&de->node, &dbe->deferred);
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> fead24e52383 (perf db-export: Get rid of db_export__deferred())
  int db_export__init(struct db_export *dbe)
  {
  	memset(dbe, 0, sizeof(struct db_export));
* Unmerged path tools/perf/util/db-export.c
diff --git a/tools/perf/util/db-export.h b/tools/perf/util/db-export.h
index 4e2424c89df9..cca277b2662f 100644
--- a/tools/perf/util/db-export.h
+++ b/tools/perf/util/db-export.h
@@ -77,11 +77,9 @@ struct db_export {
 	u64 sample_last_db_id;
 	u64 call_path_last_db_id;
 	u64 call_return_last_db_id;
-	struct list_head deferred;
 };
 
 int db_export__init(struct db_export *dbe);
-int db_export__flush(struct db_export *dbe);
 void db_export__exit(struct db_export *dbe);
 int db_export__evsel(struct db_export *dbe, struct perf_evsel *evsel);
 int db_export__machine(struct db_export *dbe, struct machine *machine);
diff --git a/tools/perf/util/scripting-engines/trace-event-python.c b/tools/perf/util/scripting-engines/trace-event-python.c
index 112bed65232f..c9837f0f0fd6 100644
--- a/tools/perf/util/scripting-engines/trace-event-python.c
+++ b/tools/perf/util/scripting-engines/trace-event-python.c
@@ -1620,9 +1620,7 @@ static int python_start_script(const char *script, int argc, const char **argv)
 
 static int python_flush_script(void)
 {
-	struct tables *tables = &tables_global;
-
-	return db_export__flush(&tables->dbe);
+	return 0;
 }
 
 /*
