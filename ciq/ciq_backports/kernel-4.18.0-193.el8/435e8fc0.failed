drm/i915: Allow parsing of unsized batches

jira LE-1907
cve CVE-2019-0155
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jon Bloomfield <jon.bloomfield@intel.com>
commit 435e8fc059dbe0eec823a75c22da2972390ba9e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/435e8fc0.failed

In "drm/i915: Add support for mandatory cmdparsing" we introduced the
concept of mandatory parsing. This allows the cmdparser to be invoked
even when user passes batch_len=0 to the execbuf ioctl's.

However, the cmdparser needs to know the extents of the buffer being
scanned. Refactor the code to ensure the cmdparser uses the actual
object size, instead of the incoming length, if user passes 0.

	Signed-off-by: Jon Bloomfield <jon.bloomfield@intel.com>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: Dave Airlie <airlied@redhat.com>
	Cc: Takashi Iwai <tiwai@suse.de>
	Cc: Tyler Hicks <tyhicks@canonical.com>
	Reviewed-by: Chris Wilson <chris.p.wilson@intel.com>
(cherry picked from commit 435e8fc059dbe0eec823a75c22da2972390ba9e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_gem_execbuffer.c
diff --cc drivers/gpu/drm/i915/i915_gem_execbuffer.c
index 21a06982621e,8237b2935b5f..000000000000
--- a/drivers/gpu/drm/i915/i915_gem_execbuffer.c
+++ b/drivers/gpu/drm/i915/i915_gem_execbuffer.c
@@@ -310,7 -296,9 +310,13 @@@ static inline u64 gen8_noncanonical_add
  
  static inline bool eb_use_cmdparser(const struct i915_execbuffer *eb)
  {
++<<<<<<< HEAD:drivers/gpu/drm/i915/i915_gem_execbuffer.c
 +	return intel_engine_needs_cmd_parser(eb->engine) && eb->batch_len;
++=======
+ 	return intel_engine_requires_cmd_parser(eb->engine) ||
+ 		(intel_engine_using_cmd_parser(eb->engine) &&
+ 		 eb->args->batch_len);
++>>>>>>> 435e8fc059db (drm/i915: Allow parsing of unsized batches):drivers/gpu/drm/i915/gem/i915_gem_execbuffer.c
  }
  
  static int eb_create(struct i915_execbuffer *eb)
@@@ -2389,26 -2589,8 +2398,23 @@@ i915_gem_do_execbuffer(struct drm_devic
  			err = PTR_ERR(vma);
  			goto err_vma;
  		}
 +
 +		if (vma) {
 +			/*
 +			 * Batch parsed and accepted:
 +			 *
 +			 * Set the DISPATCH_SECURE bit to remove the NON_SECURE
 +			 * bit from MI_BATCH_BUFFER_START commands issued in
 +			 * the dispatch_execbuffer implementations. We
 +			 * specifically don't want that set on batches the
 +			 * command parser has accepted.
 +			 */
 +			eb.batch_flags |= I915_DISPATCH_SECURE;
 +			eb.batch_start_offset = 0;
 +			eb.batch = vma;
 +		}
  	}
  
- 	if (eb.batch_len == 0)
- 		eb.batch_len = eb.batch->size - eb.batch_start_offset;
- 
  	/*
  	 * snb/ivb/vlv conflate the "batch in ppgtt" bit with the "non-secure
  	 * batch" bit. Hence we need to pin secure batches into the global gtt.
* Unmerged path drivers/gpu/drm/i915/i915_gem_execbuffer.c
