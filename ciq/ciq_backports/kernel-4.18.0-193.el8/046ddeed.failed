KVM: Check preempted_in_kernel for involuntary preemption

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Wanpeng Li <wanpengli@tencent.com>
commit 046ddeed0461b5d270470c253cbb321103d048b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/046ddeed.failed

preempted_in_kernel is updated in preempt_notifier when involuntary preemption
ocurrs, it can be stale when the voluntarily preempted vCPUs are taken into
account by kvm_vcpu_on_spin() loop. This patch lets it just check preempted_in_kernel
for involuntary preemption.

	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 046ddeed0461b5d270470c253cbb321103d048b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index 76b5f2660625,ed061d8a457c..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -4205,8 -4206,8 +4206,13 @@@ static void kvm_sched_in(struct preempt
  {
  	struct kvm_vcpu *vcpu = preempt_notifier_to_vcpu(pn);
  
++<<<<<<< HEAD
 +	if (vcpu->preempted)
 +		vcpu->preempted = false;
++=======
+ 	WRITE_ONCE(vcpu->preempted, false);
+ 	WRITE_ONCE(vcpu->ready, false);
++>>>>>>> 046ddeed0461 (KVM: Check preempted_in_kernel for involuntary preemption)
  
  	kvm_arch_sched_in(vcpu, cpu);
  
@@@ -4218,8 -4219,10 +4224,15 @@@ static void kvm_sched_out(struct preemp
  {
  	struct kvm_vcpu *vcpu = preempt_notifier_to_vcpu(pn);
  
++<<<<<<< HEAD
 +	if (current->state == TASK_RUNNING)
 +		vcpu->preempted = true;
++=======
+ 	if (current->state == TASK_RUNNING) {
+ 		WRITE_ONCE(vcpu->preempted, true);
+ 		WRITE_ONCE(vcpu->ready, true);
+ 	}
++>>>>>>> 046ddeed0461 (KVM: Check preempted_in_kernel for involuntary preemption)
  	kvm_arch_vcpu_put(vcpu);
  }
  
* Unmerged path virt/kvm/kvm_main.c
