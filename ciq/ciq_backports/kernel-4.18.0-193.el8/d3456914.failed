RDMA: Handle AH allocations by IB/core

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Leon Romanovsky <leon@kernel.org>
commit d345691471b426e540140a4cc431c69f80abfcb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/d3456914.failed

Simplify drivers by ensuring lifetime of ib_ah object. The changes
in .create_ah() go hand in hand with relevant update in .destroy_ah().

We will use this opportunity and convert .destroy_ah() to don't fail, as
it was suggested a long time ago, because there is nothing to do in case
of failure during destroy.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit d345691471b426e540140a4cc431c69f80abfcb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/device.c
#	drivers/infiniband/core/verbs.c
#	drivers/infiniband/hw/bnxt_re/ib_verbs.c
#	drivers/infiniband/hw/bnxt_re/ib_verbs.h
#	drivers/infiniband/hw/bnxt_re/main.c
#	drivers/infiniband/hw/hns/hns_roce_ah.c
#	drivers/infiniband/hw/hns/hns_roce_device.h
#	drivers/infiniband/hw/hns/hns_roce_main.c
#	drivers/infiniband/hw/mlx4/ah.c
#	drivers/infiniband/hw/mlx4/mad.c
#	drivers/infiniband/hw/mlx4/main.c
#	drivers/infiniband/hw/mlx4/mlx4_ib.h
#	drivers/infiniband/hw/mlx5/ah.c
#	drivers/infiniband/hw/mlx5/main.c
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
#	drivers/infiniband/hw/mthca/mthca_provider.c
#	drivers/infiniband/hw/ocrdma/ocrdma_ah.c
#	drivers/infiniband/hw/ocrdma/ocrdma_ah.h
#	drivers/infiniband/hw/ocrdma/ocrdma_main.c
#	drivers/infiniband/hw/qedr/main.c
#	drivers/infiniband/hw/qedr/verbs.c
#	drivers/infiniband/hw/qedr/verbs.h
#	drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
#	drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.c
#	drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.h
#	drivers/infiniband/sw/rdmavt/ah.c
#	drivers/infiniband/sw/rdmavt/ah.h
#	drivers/infiniband/sw/rdmavt/vt.c
#	drivers/infiniband/sw/rxe/rxe_verbs.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/device.c
index ec96a7b1c811,b5fad8a68a35..000000000000
--- a/drivers/infiniband/core/device.c
+++ b/drivers/infiniband/core/device.c
@@@ -1357,6 -2221,10 +1357,13 @@@ void ib_set_device_ops(struct ib_devic
  	SET_DEVICE_OP(dev_ops, set_vf_guid);
  	SET_DEVICE_OP(dev_ops, set_vf_link_state);
  	SET_DEVICE_OP(dev_ops, unmap_fmr);
++<<<<<<< HEAD
++=======
+ 
+ 	SET_OBJ_SIZE(dev_ops, ib_ah);
+ 	SET_OBJ_SIZE(dev_ops, ib_pd);
+ 	SET_OBJ_SIZE(dev_ops, ib_ucontext);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  }
  EXPORT_SYMBOL(ib_set_device_ops);
  
diff --cc drivers/infiniband/core/verbs.c
index 3220fb42ecce,6172019481a4..000000000000
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@@ -934,16 -947,16 +941,25 @@@ int rdma_destroy_ah(struct ib_ah *ah, u
  	might_sleep_if(flags & RDMA_DESTROY_AH_SLEEPABLE);
  
  	pd = ah->pd;
++<<<<<<< HEAD
 +	ret = ah->device->ops.destroy_ah(ah, flags);
 +	if (!ret) {
 +		atomic_dec(&pd->usecnt);
 +		if (sgid_attr)
 +			rdma_put_gid_attr(sgid_attr);
 +	}
++=======
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  
- 	return ret;
+ 	ah->device->ops.destroy_ah(ah, flags);
+ 	atomic_dec(&pd->usecnt);
+ 	if (sgid_attr)
+ 		rdma_put_gid_attr(sgid_attr);
+ 
+ 	kfree(ah);
+ 	return 0;
  }
 -EXPORT_SYMBOL(rdma_destroy_ah_user);
 +EXPORT_SYMBOL(rdma_destroy_ah);
  
  /* Shared receive queues */
  
diff --cc drivers/infiniband/hw/bnxt_re/ib_verbs.c
index bfcab22666c5,a9e2e29d7ad0..000000000000
--- a/drivers/infiniband/hw/bnxt_re/ib_verbs.c
+++ b/drivers/infiniband/hw/bnxt_re/ib_verbs.c
@@@ -647,7 -633,7 +647,11 @@@ fail
  }
  
  /* Address Handles */
++<<<<<<< HEAD
 +int bnxt_re_destroy_ah(struct ib_ah *ib_ah, u32 flags)
++=======
+ void bnxt_re_destroy_ah(struct ib_ah *ib_ah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	struct bnxt_re_ah *ah = container_of(ib_ah, struct bnxt_re_ah, ib_ah);
  	struct bnxt_re_dev *rdev = ah->rdev;
diff --cc drivers/infiniband/hw/bnxt_re/ib_verbs.h
index c4af72604b4f,953da89e5ec0..000000000000
--- a/drivers/infiniband/hw/bnxt_re/ib_verbs.h
+++ b/drivers/infiniband/hw/bnxt_re/ib_verbs.h
@@@ -163,17 -163,13 +163,27 @@@ int bnxt_re_query_gid(struct ib_device 
  		      int index, union ib_gid *gid);
  enum rdma_link_layer bnxt_re_get_link_layer(struct ib_device *ibdev,
  					    u8 port_num);
++<<<<<<< HEAD
 +struct ib_pd *bnxt_re_alloc_pd(struct ib_device *ibdev,
 +			       struct ib_ucontext *context,
 +			       struct ib_udata *udata);
 +int bnxt_re_dealloc_pd(struct ib_pd *pd);
 +struct ib_ah *bnxt_re_create_ah(struct ib_pd *pd,
 +				struct rdma_ah_attr *ah_attr,
 +				u32 flags,
 +				struct ib_udata *udata);
 +int bnxt_re_modify_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
 +int bnxt_re_query_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
 +int bnxt_re_destroy_ah(struct ib_ah *ah, u32 flags);
++=======
+ int bnxt_re_alloc_pd(struct ib_pd *pd, struct ib_udata *udata);
+ void bnxt_re_dealloc_pd(struct ib_pd *pd, struct ib_udata *udata);
+ int bnxt_re_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr, u32 flags,
+ 		      struct ib_udata *udata);
+ int bnxt_re_modify_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
+ int bnxt_re_query_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
+ void bnxt_re_destroy_ah(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  struct ib_srq *bnxt_re_create_srq(struct ib_pd *pd,
  				  struct ib_srq_init_attr *srq_init_attr,
  				  struct ib_udata *udata);
diff --cc drivers/infiniband/hw/bnxt_re/main.c
index 0d40a930c192,ec22853f8363..000000000000
--- a/drivers/infiniband/hw/bnxt_re/main.c
+++ b/drivers/infiniband/hw/bnxt_re/main.c
@@@ -637,6 -637,9 +637,12 @@@ static const struct ib_device_ops bnxt_
  	.query_srq = bnxt_re_query_srq,
  	.reg_user_mr = bnxt_re_reg_user_mr,
  	.req_notify_cq = bnxt_re_req_notify_cq,
++<<<<<<< HEAD
++=======
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, bnxt_re_ah, ib_ah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, bnxt_re_pd, ib_pd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, bnxt_re_ucontext, ib_uctx),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static int bnxt_re_register_ib(struct bnxt_re_dev *rdev)
diff --cc drivers/infiniband/hw/hns/hns_roce_ah.c
index b94b92719537,d9498313ea46..000000000000
--- a/drivers/infiniband/hw/hns/hns_roce_ah.c
+++ b/drivers/infiniband/hw/hns/hns_roce_ah.c
@@@ -39,22 -39,17 +39,16 @@@
  #define HNS_ROCE_VLAN_SL_BIT_MASK	7
  #define HNS_ROCE_VLAN_SL_SHIFT		13
  
- struct ib_ah *hns_roce_create_ah(struct ib_pd *ibpd,
- 				 struct rdma_ah_attr *ah_attr,
- 				 u32 flags,
- 				 struct ib_udata *udata)
+ int hns_roce_create_ah(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr,
+ 		       u32 flags, struct ib_udata *udata)
  {
- 	struct hns_roce_dev *hr_dev = to_hr_dev(ibpd->device);
+ 	struct hns_roce_dev *hr_dev = to_hr_dev(ibah->device);
  	const struct ib_gid_attr *gid_attr;
  	struct device *dev = hr_dev->dev;
- 	struct hns_roce_ah *ah;
+ 	struct hns_roce_ah *ah = to_hr_ah(ibah);
  	u16 vlan_tag = 0xffff;
  	const struct ib_global_route *grh = rdma_ah_read_grh(ah_attr);
 -	bool vlan_en = false;
  
- 	ah = kzalloc(sizeof(*ah), GFP_ATOMIC);
- 	if (!ah)
- 		return ERR_PTR(-ENOMEM);
- 
  	/* Get mac address */
  	memcpy(ah->av.mac, ah_attr->roce.dmac, ETH_ALEN);
  
@@@ -107,9 -105,7 +101,11 @@@ int hns_roce_query_ah(struct ib_ah *iba
  	return 0;
  }
  
++<<<<<<< HEAD
 +int hns_roce_destroy_ah(struct ib_ah *ah, u32 flags)
++=======
+ void hns_roce_destroy_ah(struct ib_ah *ah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
- 	kfree(to_hr_ah(ah));
- 
- 	return 0;
+ 	return;
  }
diff --cc drivers/infiniband/hw/hns/hns_roce_device.h
index 5996c474cbe8,e424dcca2c74..000000000000
--- a/drivers/infiniband/hw/hns/hns_roce_device.h
+++ b/drivers/infiniband/hw/hns/hns_roce_device.h
@@@ -956,17 -1105,13 +956,19 @@@ void hns_roce_bitmap_free_range(struct 
  				unsigned long obj, int cnt,
  				int rr);
  
- struct ib_ah *hns_roce_create_ah(struct ib_pd *pd,
- 				 struct rdma_ah_attr *ah_attr,
- 				 u32 flags,
- 				 struct ib_udata *udata);
+ int hns_roce_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr,
+ 		       u32 flags, struct ib_udata *udata);
  int hns_roce_query_ah(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr);
++<<<<<<< HEAD
 +int hns_roce_destroy_ah(struct ib_ah *ah, u32 flags);
++=======
+ void hns_roce_destroy_ah(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  
 -int hns_roce_alloc_pd(struct ib_pd *pd, struct ib_udata *udata);
 -void hns_roce_dealloc_pd(struct ib_pd *pd, struct ib_udata *udata);
 +struct ib_pd *hns_roce_alloc_pd(struct ib_device *ib_dev,
 +				struct ib_ucontext *context,
 +				struct ib_udata *udata);
 +int hns_roce_dealloc_pd(struct ib_pd *pd);
  
  struct ib_mr *hns_roce_get_dma_mr(struct ib_pd *pd, int acc);
  struct ib_mr *hns_roce_reg_user_mr(struct ib_pd *pd, u64 start, u64 length,
diff --cc drivers/infiniband/hw/hns/hns_roce_main.c
index 171e4cf3e9d6,176bade523ea..000000000000
--- a/drivers/infiniband/hw/hns/hns_roce_main.c
+++ b/drivers/infiniband/hw/hns/hns_roce_main.c
@@@ -525,6 -468,10 +525,13 @@@ static const struct ib_device_ops hns_r
  	.query_pkey = hns_roce_query_pkey,
  	.query_port = hns_roce_query_port,
  	.reg_user_mr = hns_roce_reg_user_mr,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, hns_roce_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, hns_roce_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, hns_roce_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static const struct ib_device_ops hns_roce_dev_mr_ops = {
diff --cc drivers/infiniband/hw/mlx4/ah.c
index 1672808262ba,b53772ab2401..000000000000
--- a/drivers/infiniband/hw/mlx4/ah.c
+++ b/drivers/infiniband/hw/mlx4/ah.c
@@@ -250,8 -228,7 +228,11 @@@ int mlx4_ib_query_ah(struct ib_ah *ibah
  	return 0;
  }
  
++<<<<<<< HEAD
 +int mlx4_ib_destroy_ah(struct ib_ah *ah, u32 flags)
++=======
+ void mlx4_ib_destroy_ah(struct ib_ah *ah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
- 	kfree(to_mah(ah));
- 	return 0;
+ 	return;
  }
diff --cc drivers/infiniband/hw/mlx4/mad.c
index 936ee1314bcd,68c951491a08..000000000000
--- a/drivers/infiniband/hw/mlx4/mad.c
+++ b/drivers/infiniband/hw/mlx4/mad.c
@@@ -1410,8 -1418,7 +1418,12 @@@ int mlx4_ib_send_to_wire(struct mlx4_ib
  		goto out;
  
  	sqp_mad = (struct mlx4_mad_snd_buf *) (sqp->tx_ring[wire_tx_ix].buf.addr);
++<<<<<<< HEAD
 +	if (sqp->tx_ring[wire_tx_ix].ah)
 +		mlx4_ib_destroy_ah(sqp->tx_ring[wire_tx_ix].ah, 0);
++=======
+ 	kfree(sqp->tx_ring[wire_tx_ix].ah);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  	sqp->tx_ring[wire_tx_ix].ah = ah;
  	ib_dma_sync_single_for_cpu(&dev->ib_dev,
  				   sqp->tx_ring[wire_tx_ix].buf.map,
@@@ -1450,7 -1457,7 +1462,11 @@@
  	spin_unlock(&sqp->tx_lock);
  	sqp->tx_ring[wire_tx_ix].ah = NULL;
  out:
++<<<<<<< HEAD
 +	mlx4_ib_destroy_ah(ah, 0);
++=======
+ 	kfree(ah);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  	return ret;
  }
  
@@@ -1902,8 -1909,8 +1918,13 @@@ static void mlx4_ib_sqp_comp_worker(str
  		if (wc.status == IB_WC_SUCCESS) {
  			switch (wc.opcode) {
  			case IB_WC_SEND:
++<<<<<<< HEAD
 +				mlx4_ib_destroy_ah(sqp->tx_ring[wc.wr_id &
 +					      (MLX4_NUM_TUNNEL_BUFS - 1)].ah, 0);
++=======
+ 				kfree(sqp->tx_ring[wc.wr_id &
+ 				      (MLX4_NUM_TUNNEL_BUFS - 1)].ah);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  				sqp->tx_ring[wc.wr_id & (MLX4_NUM_TUNNEL_BUFS - 1)].ah
  					= NULL;
  				spin_lock(&sqp->tx_lock);
@@@ -1931,8 -1938,8 +1952,13 @@@
  				 " status = %d, wrid = 0x%llx\n",
  				 ctx->slave, wc.status, wc.wr_id);
  			if (!MLX4_TUN_IS_RECV(wc.wr_id)) {
++<<<<<<< HEAD
 +				mlx4_ib_destroy_ah(sqp->tx_ring[wc.wr_id &
 +					      (MLX4_NUM_TUNNEL_BUFS - 1)].ah, 0);
++=======
+ 				kfree(sqp->tx_ring[wc.wr_id &
+ 				      (MLX4_NUM_TUNNEL_BUFS - 1)].ah);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  				sqp->tx_ring[wc.wr_id & (MLX4_NUM_TUNNEL_BUFS - 1)].ah
  					= NULL;
  				spin_lock(&sqp->tx_lock);
diff --cc drivers/infiniband/hw/mlx4/main.c
index d66002a31000,27f38897ca9e..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -2580,6 -2558,10 +2580,13 @@@ static const struct ib_device_ops mlx4_
  	.req_notify_cq = mlx4_ib_arm_cq,
  	.rereg_user_mr = mlx4_ib_rereg_user_mr,
  	.resize_cq = mlx4_ib_resize_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, mlx4_ib_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, mlx4_ib_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, mlx4_ib_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static const struct ib_device_ops mlx4_ib_dev_wq_ops = {
diff --cc drivers/infiniband/hw/mlx4/mlx4_ib.h
index e491f3eda6e7,14ca042ea715..000000000000
--- a/drivers/infiniband/hw/mlx4/mlx4_ib.h
+++ b/drivers/infiniband/hw/mlx4/mlx4_ib.h
@@@ -753,14 -752,12 +753,16 @@@ int mlx4_ib_arm_cq(struct ib_cq *cq, en
  void __mlx4_ib_cq_clean(struct mlx4_ib_cq *cq, u32 qpn, struct mlx4_ib_srq *srq);
  void mlx4_ib_cq_clean(struct mlx4_ib_cq *cq, u32 qpn, struct mlx4_ib_srq *srq);
  
- struct ib_ah *mlx4_ib_create_ah(struct ib_pd *pd, struct rdma_ah_attr *ah_attr,
- 				u32 flags, struct ib_udata *udata);
- struct ib_ah *mlx4_ib_create_ah_slave(struct ib_pd *pd,
- 				      struct rdma_ah_attr *ah_attr,
- 				      int slave_sgid_index, u8 *s_mac,
- 				      u16 vlan_tag);
+ int mlx4_ib_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr, u32 flags,
+ 		      struct ib_udata *udata);
+ int mlx4_ib_create_ah_slave(struct ib_ah *ah, struct rdma_ah_attr *ah_attr,
+ 			    int slave_sgid_index, u8 *s_mac, u16 vlan_tag);
  int mlx4_ib_query_ah(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr);
++<<<<<<< HEAD
 +int mlx4_ib_destroy_ah(struct ib_ah *ah, u32 flags);
++=======
+ void mlx4_ib_destroy_ah(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  
  struct ib_srq *mlx4_ib_create_srq(struct ib_pd *pd,
  				  struct ib_srq_init_attr *init_attr,
diff --cc drivers/infiniband/hw/mlx5/ah.c
index 420ae0897333,80642dd359bc..000000000000
--- a/drivers/infiniband/hw/mlx5/ah.c
+++ b/drivers/infiniband/hw/mlx5/ah.c
@@@ -131,8 -125,7 +125,11 @@@ int mlx5_ib_query_ah(struct ib_ah *ibah
  	return 0;
  }
  
++<<<<<<< HEAD
 +int mlx5_ib_destroy_ah(struct ib_ah *ah, u32 flags)
++=======
+ void mlx5_ib_destroy_ah(struct ib_ah *ah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
- 	kfree(to_mah(ah));
- 	return 0;
+ 	return;
  }
diff --cc drivers/infiniband/hw/mlx5/main.c
index 2e9e8914ac78,f4827d12677a..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -5948,6 -5986,10 +5948,13 @@@ static const struct ib_device_ops mlx5_
  	.req_notify_cq = mlx5_ib_arm_cq,
  	.rereg_user_mr = mlx5_ib_rereg_user_mr,
  	.resize_cq = mlx5_ib_resize_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, mlx5_ib_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, mlx5_ib_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, mlx5_ib_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static const struct ib_device_ops mlx5_ib_dev_flow_ipsec_ops = {
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 1b44b1ade284,5b4206653fdb..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -1051,10 -1054,10 +1051,14 @@@ void mlx5_ib_db_unmap_user(struct mlx5_
  void __mlx5_ib_cq_clean(struct mlx5_ib_cq *cq, u32 qpn, struct mlx5_ib_srq *srq);
  void mlx5_ib_cq_clean(struct mlx5_ib_cq *cq, u32 qpn, struct mlx5_ib_srq *srq);
  void mlx5_ib_free_srq_wqe(struct mlx5_ib_srq *srq, int wqe_index);
- struct ib_ah *mlx5_ib_create_ah(struct ib_pd *pd, struct rdma_ah_attr *ah_attr,
- 				u32 flags, struct ib_udata *udata);
+ int mlx5_ib_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr, u32 flags,
+ 		      struct ib_udata *udata);
  int mlx5_ib_query_ah(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr);
++<<<<<<< HEAD
 +int mlx5_ib_destroy_ah(struct ib_ah *ah, u32 flags);
++=======
+ void mlx5_ib_destroy_ah(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  struct ib_srq *mlx5_ib_create_srq(struct ib_pd *pd,
  				  struct ib_srq_init_attr *init_attr,
  				  struct ib_udata *udata);
diff --cc drivers/infiniband/hw/mthca/mthca_provider.c
index ae6b236e4756,6fc371a9e45f..000000000000
--- a/drivers/infiniband/hw/mthca/mthca_provider.c
+++ b/drivers/infiniband/hw/mthca/mthca_provider.c
@@@ -399,45 -380,27 +399,34 @@@ static struct ib_pd *mthca_alloc_pd(str
  		}
  	}
  
 -	return 0;
 +	return &pd->ibpd;
  }
  
 -static void mthca_dealloc_pd(struct ib_pd *pd, struct ib_udata *udata)
 +static int mthca_dealloc_pd(struct ib_pd *pd)
  {
  	mthca_pd_free(to_mdev(pd->device), to_mpd(pd));
 +	kfree(pd);
 +
 +	return 0;
  }
  
- static struct ib_ah *mthca_ah_create(struct ib_pd *pd,
- 				     struct rdma_ah_attr *ah_attr,
- 				     u32 flags,
- 				     struct ib_udata *udata)
+ static int mthca_ah_create(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr,
+ 			   u32 flags, struct ib_udata *udata)
  
  {
- 	int err;
- 	struct mthca_ah *ah;
- 
- 	ah = kmalloc(sizeof *ah, GFP_ATOMIC);
- 	if (!ah)
- 		return ERR_PTR(-ENOMEM);
+ 	struct mthca_ah *ah = to_mah(ibah);
  
- 	err = mthca_create_ah(to_mdev(pd->device), to_mpd(pd), ah_attr, ah);
- 	if (err) {
- 		kfree(ah);
- 		return ERR_PTR(err);
- 	}
- 
- 	return &ah->ibah;
+ 	return mthca_create_ah(to_mdev(ibah->device), to_mpd(ibah->pd), ah_attr,
+ 			       ah);
  }
  
++<<<<<<< HEAD
 +static int mthca_ah_destroy(struct ib_ah *ah, u32 flags)
++=======
+ static void mthca_ah_destroy(struct ib_ah *ah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	mthca_destroy_ah(to_mdev(ah->device), to_mah(ah));
- 	kfree(ah);
- 
- 	return 0;
  }
  
  static struct ib_srq *mthca_create_srq(struct ib_pd *pd,
@@@ -1224,6 -1198,10 +1213,13 @@@ static const struct ib_device_ops mthca
  	.query_qp = mthca_query_qp,
  	.reg_user_mr = mthca_reg_user_mr,
  	.resize_cq = mthca_resize_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, mthca_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, mthca_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, mthca_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static const struct ib_device_ops mthca_dev_arbel_srq_ops = {
diff --cc drivers/infiniband/hw/ocrdma/ocrdma_ah.c
index a7295322efbc,a17747cb086a..000000000000
--- a/drivers/infiniband/hw/ocrdma/ocrdma_ah.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_ah.c
@@@ -215,11 -211,10 +211,14 @@@ int ocrdma_create_ah(struct ib_ah *ibah
  av_conf_err:
  	ocrdma_free_av(dev, ah);
  av_err:
- 	kfree(ah);
- 	return ERR_PTR(status);
+ 	return status;
  }
  
++<<<<<<< HEAD
 +int ocrdma_destroy_ah(struct ib_ah *ibah, u32 flags)
++=======
+ void ocrdma_destroy_ah(struct ib_ah *ibah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	struct ocrdma_ah *ah = get_ocrdma_ah(ibah);
  	struct ocrdma_dev *dev = get_ocrdma_dev(ibah->device);
diff --cc drivers/infiniband/hw/ocrdma/ocrdma_ah.h
index eb996e14b520,64cb82c08664..000000000000
--- a/drivers/infiniband/hw/ocrdma/ocrdma_ah.h
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_ah.h
@@@ -51,9 -51,9 +51,15 @@@ enum 
  	OCRDMA_AH_L3_TYPE_SHIFT		= 0x1D /* 29 bits */
  };
  
++<<<<<<< HEAD
 +struct ib_ah *ocrdma_create_ah(struct ib_pd *pd, struct rdma_ah_attr *ah_attr,
 +			       u32 flags, struct ib_udata *udata);
 +int ocrdma_destroy_ah(struct ib_ah *ah, u32 flags);
++=======
+ int ocrdma_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr, u32 flags,
+ 		     struct ib_udata *udata);
+ void ocrdma_destroy_ah(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  int ocrdma_query_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
  
  int ocrdma_process_mad(struct ib_device *,
diff --cc drivers/infiniband/hw/ocrdma/ocrdma_main.c
index 88970a6bb555,8642a2e60be7..000000000000
--- a/drivers/infiniband/hw/ocrdma/ocrdma_main.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_main.c
@@@ -179,6 -179,10 +179,13 @@@ static const struct ib_device_ops ocrdm
  	.reg_user_mr = ocrdma_reg_user_mr,
  	.req_notify_cq = ocrdma_arm_cq,
  	.resize_cq = ocrdma_resize_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, ocrdma_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, ocrdma_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, ocrdma_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static const struct ib_device_ops ocrdma_dev_srq_ops = {
diff --cc drivers/infiniband/hw/qedr/main.c
index 878e9e23652b,f32ea7052c48..000000000000
--- a/drivers/infiniband/hw/qedr/main.c
+++ b/drivers/infiniband/hw/qedr/main.c
@@@ -239,6 -238,10 +239,13 @@@ static const struct ib_device_ops qedr_
  	.reg_user_mr = qedr_reg_user_mr,
  	.req_notify_cq = qedr_arm_cq,
  	.resize_cq = qedr_resize_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, qedr_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, qedr_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, qedr_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static int qedr_register_device(struct qedr_dev *dev)
diff --cc drivers/infiniband/hw/qedr/verbs.c
index 9cb7820beb81,8ea06856e7b9..000000000000
--- a/drivers/infiniband/hw/qedr/verbs.c
+++ b/drivers/infiniband/hw/qedr/verbs.c
@@@ -2612,10 -2553,10 +2608,14 @@@ int qedr_create_ah(struct ib_ah *ibah, 
  
  	rdma_copy_ah_attr(&ah->attr, attr);
  
- 	return &ah->ibah;
+ 	return 0;
  }
  
++<<<<<<< HEAD
 +int qedr_destroy_ah(struct ib_ah *ibah, u32 flags)
++=======
+ void qedr_destroy_ah(struct ib_ah *ibah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	struct qedr_ah *ah = get_qedr_ah(ibah);
  
diff --cc drivers/infiniband/hw/qedr/verbs.h
index 0e5fb4e82418,772af35a5055..000000000000
--- a/drivers/infiniband/hw/qedr/verbs.h
+++ b/drivers/infiniband/hw/qedr/verbs.h
@@@ -71,14 -70,14 +71,20 @@@ struct ib_srq *qedr_create_srq(struct i
  int qedr_modify_srq(struct ib_srq *ibsrq, struct ib_srq_attr *attr,
  		    enum ib_srq_attr_mask attr_mask, struct ib_udata *udata);
  int qedr_query_srq(struct ib_srq *ibsrq, struct ib_srq_attr *attr);
 -int qedr_destroy_srq(struct ib_srq *ibsrq, struct ib_udata *udata);
 +int qedr_destroy_srq(struct ib_srq *ibsrq);
  int qedr_post_srq_recv(struct ib_srq *ibsrq, const struct ib_recv_wr *wr,
  		       const struct ib_recv_wr **bad_recv_wr);
++<<<<<<< HEAD
 +struct ib_ah *qedr_create_ah(struct ib_pd *ibpd, struct rdma_ah_attr *attr,
 +			     u32 flags, struct ib_udata *udata);
 +int qedr_destroy_ah(struct ib_ah *ibah, u32 flags);
++=======
+ int qedr_create_ah(struct ib_ah *ibah, struct rdma_ah_attr *attr, u32 flags,
+ 		   struct ib_udata *udata);
+ void qedr_destroy_ah(struct ib_ah *ibah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  
 -int qedr_dereg_mr(struct ib_mr *ib_mr, struct ib_udata *udata);
 +int qedr_dereg_mr(struct ib_mr *);
  struct ib_mr *qedr_get_dma_mr(struct ib_pd *, int acc);
  
  struct ib_mr *qedr_reg_user_mr(struct ib_pd *, u64 start, u64 length,
diff --cc drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
index 7e3160341a20,6cbc271a1b7d..000000000000
--- a/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
+++ b/drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
@@@ -195,6 -195,10 +195,13 @@@ static const struct ib_device_ops pvrdm
  	.query_qp = pvrdma_query_qp,
  	.reg_user_mr = pvrdma_reg_user_mr,
  	.req_notify_cq = pvrdma_req_notify_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, pvrdma_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, pvrdma_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, pvrdma_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static const struct ib_device_ops pvrdma_dev_srq_ops = {
diff --cc drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.c
index e426f95731eb,faf7ecd7b3fa..000000000000
--- a/drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.c
+++ b/drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.c
@@@ -587,9 -546,8 +577,12 @@@ int pvrdma_create_ah(struct ib_ah *ibah
   * @ah: the address handle to destroyed
   * @flags: destroy address handle flags (see enum rdma_destroy_ah_flags)
   *
-  * @return: 0 on success.
   */
++<<<<<<< HEAD
 +int pvrdma_destroy_ah(struct ib_ah *ah, u32 flags)
++=======
+ void pvrdma_destroy_ah(struct ib_ah *ah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	struct pvrdma_dev *dev = to_vdev(ah->device);
  
diff --cc drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.h
index f7f758d60110,013c73f2eba3..000000000000
--- a/drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.h
+++ b/drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.h
@@@ -414,14 -411,13 +414,20 @@@ int pvrdma_map_mr_sg(struct ib_mr *ibmr
  		     int sg_nents, unsigned int *sg_offset);
  struct ib_cq *pvrdma_create_cq(struct ib_device *ibdev,
  			       const struct ib_cq_init_attr *attr,
 +			       struct ib_ucontext *context,
  			       struct ib_udata *udata);
 -int pvrdma_destroy_cq(struct ib_cq *cq, struct ib_udata *udata);
 +int pvrdma_destroy_cq(struct ib_cq *cq);
  int pvrdma_poll_cq(struct ib_cq *ibcq, int num_entries, struct ib_wc *wc);
  int pvrdma_req_notify_cq(struct ib_cq *cq, enum ib_cq_notify_flags flags);
++<<<<<<< HEAD
 +struct ib_ah *pvrdma_create_ah(struct ib_pd *pd, struct rdma_ah_attr *ah_attr,
 +			       u32 flags, struct ib_udata *udata);
 +int pvrdma_destroy_ah(struct ib_ah *ah, u32 flags);
++=======
+ int pvrdma_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr, u32 flags,
+ 		     struct ib_udata *udata);
+ void pvrdma_destroy_ah(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  
  struct ib_srq *pvrdma_create_srq(struct ib_pd *pd,
  				 struct ib_srq_init_attr *init_attr,
diff --cc drivers/infiniband/sw/rdmavt/ah.c
index fc10e4e26ca7,e6f7e4689d4d..000000000000
--- a/drivers/infiniband/sw/rdmavt/ah.c
+++ b/drivers/infiniband/sw/rdmavt/ah.c
@@@ -141,7 -134,8 +134,11 @@@ int rvt_create_ah(struct ib_ah *ibah, s
   *
   * Return: 0 on success
   */
++<<<<<<< HEAD
 +int rvt_destroy_ah(struct ib_ah *ibah, u32 destroy_flags)
++=======
+ void rvt_destroy_ah(struct ib_ah *ibah, u32 destroy_flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	struct rvt_dev_info *dev = ib_to_rvt(ibah->device);
  	struct rvt_ah *ah = ibah_to_rvtah(ibah);
diff --cc drivers/infiniband/sw/rdmavt/ah.h
index 72431a618d5d,bbb4d3bdec4e..000000000000
--- a/drivers/infiniband/sw/rdmavt/ah.h
+++ b/drivers/infiniband/sw/rdmavt/ah.h
@@@ -50,11 -50,9 +50,17 @@@
  
  #include <rdma/rdma_vt.h>
  
++<<<<<<< HEAD
 +struct ib_ah *rvt_create_ah(struct ib_pd *pd,
 +			    struct rdma_ah_attr *ah_attr,
 +			    u32 create_flags,
 +			    struct ib_udata *udata);
 +int rvt_destroy_ah(struct ib_ah *ibah, u32 destroy_flags);
++=======
+ int rvt_create_ah(struct ib_ah *ah, struct rdma_ah_attr *ah_attr,
+ 		  u32 create_flags, struct ib_udata *udata);
+ void rvt_destroy_ah(struct ib_ah *ibah, u32 destroy_flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  int rvt_modify_ah(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr);
  int rvt_query_ah(struct ib_ah *ibah, struct rdma_ah_attr *ah_attr);
  
diff --cc drivers/infiniband/sw/rdmavt/vt.c
index b3f0c5578925,f4b3bb57ab06..000000000000
--- a/drivers/infiniband/sw/rdmavt/vt.c
+++ b/drivers/infiniband/sw/rdmavt/vt.c
@@@ -436,6 -425,10 +436,13 @@@ static const struct ib_device_ops rvt_d
  	.req_notify_cq = rvt_req_notify_cq,
  	.resize_cq = rvt_resize_cq,
  	.unmap_fmr = rvt_unmap_fmr,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, rvt_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, rvt_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, rvt_ucontext, ibucontext),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
  static noinline int check_support(struct rvt_dev_info *rdi, int verb)
diff --cc drivers/infiniband/sw/rxe/rxe_verbs.c
index f3188f269481,a6c63a260626..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_verbs.c
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.c
@@@ -194,13 -189,10 +194,11 @@@ static int rxe_dealloc_pd(struct ib_pd 
  	struct rxe_pd *pd = to_rpd(ibpd);
  
  	rxe_drop_ref(pd);
 +	return 0;
  }
  
- static struct ib_ah *rxe_create_ah(struct ib_pd *ibpd,
- 				   struct rdma_ah_attr *attr,
- 				   u32 flags,
- 				   struct ib_udata *udata)
+ static int rxe_create_ah(struct ib_ah *ibah, struct rdma_ah_attr *attr,
+ 			 u32 flags, struct ib_udata *udata)
  
  {
  	int err;
@@@ -247,7 -235,7 +241,11 @@@ static int rxe_query_ah(struct ib_ah *i
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int rxe_destroy_ah(struct ib_ah *ibah, u32 flags)
++=======
+ static void rxe_destroy_ah(struct ib_ah *ibah, u32 flags)
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  {
  	struct rxe_ah *ah = to_rah(ibah);
  
@@@ -1169,9 -1163,13 +1165,16 @@@ static const struct ib_device_ops rxe_d
  	.reg_user_mr = rxe_reg_user_mr,
  	.req_notify_cq = rxe_req_notify_cq,
  	.resize_cq = rxe_resize_cq,
++<<<<<<< HEAD
++=======
+ 
+ 	INIT_RDMA_OBJ_SIZE(ib_ah, rxe_ah, ibah),
+ 	INIT_RDMA_OBJ_SIZE(ib_pd, rxe_pd, ibpd),
+ 	INIT_RDMA_OBJ_SIZE(ib_ucontext, rxe_ucontext, ibuc),
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
 -int rxe_register_device(struct rxe_dev *rxe, const char *ibdev_name)
 +int rxe_register_device(struct rxe_dev *rxe)
  {
  	int err;
  	struct ib_device *dev = &rxe->ib_dev;
diff --cc include/rdma/ib_verbs.h
index a09e0c8b12a7,3232a84c4fdb..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -2385,21 -2394,18 +2385,31 @@@ struct ib_device_ops 
  	int (*del_gid)(const struct ib_gid_attr *attr, void **context);
  	int (*query_pkey)(struct ib_device *device, u8 port_num, u16 index,
  			  u16 *pkey);
 -	int (*alloc_ucontext)(struct ib_ucontext *context,
 -			      struct ib_udata *udata);
 -	void (*dealloc_ucontext)(struct ib_ucontext *context);
 +	struct ib_ucontext *(*alloc_ucontext)(struct ib_device *device,
 +					      struct ib_udata *udata);
 +	int (*dealloc_ucontext)(struct ib_ucontext *context);
  	int (*mmap)(struct ib_ucontext *context, struct vm_area_struct *vma);
  	void (*disassociate_ucontext)(struct ib_ucontext *ibcontext);
++<<<<<<< HEAD
 +	struct ib_pd *(*alloc_pd)(struct ib_device *device,
 +				  struct ib_ucontext *context,
 +				  struct ib_udata *udata);
 +	int (*dealloc_pd)(struct ib_pd *pd);
 +	struct ib_ah *(*create_ah)(struct ib_pd *pd,
 +				   struct rdma_ah_attr *ah_attr, u32 flags,
 +				   struct ib_udata *udata);
 +	int (*modify_ah)(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
 +	int (*query_ah)(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
 +	int (*destroy_ah)(struct ib_ah *ah, u32 flags);
++=======
+ 	int (*alloc_pd)(struct ib_pd *pd, struct ib_udata *udata);
+ 	void (*dealloc_pd)(struct ib_pd *pd, struct ib_udata *udata);
+ 	int (*create_ah)(struct ib_ah *ah, struct rdma_ah_attr *ah_attr,
+ 			 u32 flags, struct ib_udata *udata);
+ 	int (*modify_ah)(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
+ 	int (*query_ah)(struct ib_ah *ah, struct rdma_ah_attr *ah_attr);
+ 	void (*destroy_ah)(struct ib_ah *ah, u32 flags);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  	struct ib_srq *(*create_srq)(struct ib_pd *pd,
  				     struct ib_srq_init_attr *srq_init_attr,
  				     struct ib_udata *udata);
@@@ -2530,8 -2534,40 +2540,31 @@@
  	 */
  	int (*init_port)(struct ib_device *device, u8 port_num,
  			 struct kobject *port_sysfs);
++<<<<<<< HEAD
++=======
+ 	/**
+ 	 * Allows rdma drivers to add their own restrack attributes.
+ 	 */
+ 	int (*fill_res_entry)(struct sk_buff *msg,
+ 			      struct rdma_restrack_entry *entry);
+ 
+ 	/* Device lifecycle callbacks */
+ 	/*
+ 	 * Called after the device becomes registered, before clients are
+ 	 * attached
+ 	 */
+ 	int (*enable_driver)(struct ib_device *dev);
+ 	/*
+ 	 * This is called as part of ib_dealloc_device().
+ 	 */
+ 	void (*dealloc_driver)(struct ib_device *dev);
+ 
+ 	DECLARE_RDMA_OBJ_SIZE(ib_ah);
+ 	DECLARE_RDMA_OBJ_SIZE(ib_pd);
+ 	DECLARE_RDMA_OBJ_SIZE(ib_ucontext);
++>>>>>>> d345691471b4 (RDMA: Handle AH allocations by IB/core)
  };
  
 -struct ib_core_device {
 -	/* device must be the first element in structure until,
 -	 * union of ib_core_device and device exists in ib_device.
 -	 */
 -	struct device dev;
 -	possible_net_t rdma_net;
 -	struct kobject *ports_kobj;
 -	struct list_head port_list;
 -	struct ib_device *owner; /* reach back to owner ib_device */
 -};
 -
 -struct rdma_restrack_root;
  struct ib_device {
  	/* Do not access @dma_device directly from ULP nor from HW drivers. */
  	struct device                *dma_device;
* Unmerged path drivers/infiniband/core/device.c
* Unmerged path drivers/infiniband/core/verbs.c
* Unmerged path drivers/infiniband/hw/bnxt_re/ib_verbs.c
* Unmerged path drivers/infiniband/hw/bnxt_re/ib_verbs.h
* Unmerged path drivers/infiniband/hw/bnxt_re/main.c
diff --git a/drivers/infiniband/hw/bnxt_re/qplib_sp.c b/drivers/infiniband/hw/bnxt_re/qplib_sp.c
index e9c53e406404..4197493d5efe 100644
--- a/drivers/infiniband/hw/bnxt_re/qplib_sp.c
+++ b/drivers/infiniband/hw/bnxt_re/qplib_sp.c
@@ -532,25 +532,21 @@ int bnxt_qplib_create_ah(struct bnxt_qplib_res *res, struct bnxt_qplib_ah *ah,
 	return 0;
 }
 
-int bnxt_qplib_destroy_ah(struct bnxt_qplib_res *res, struct bnxt_qplib_ah *ah,
-			  bool block)
+void bnxt_qplib_destroy_ah(struct bnxt_qplib_res *res, struct bnxt_qplib_ah *ah,
+			   bool block)
 {
 	struct bnxt_qplib_rcfw *rcfw = res->rcfw;
 	struct cmdq_destroy_ah req;
 	struct creq_destroy_ah_resp resp;
 	u16 cmd_flags = 0;
-	int rc;
 
 	/* Clean up the AH table in the device */
 	RCFW_CMD_PREP(req, DESTROY_AH, cmd_flags);
 
 	req.ah_cid = cpu_to_le32(ah->id);
 
-	rc = bnxt_qplib_rcfw_send_message(rcfw, (void *)&req, (void *)&resp,
-					  NULL, block);
-	if (rc)
-		return rc;
-	return 0;
+	bnxt_qplib_rcfw_send_message(rcfw, (void *)&req, (void *)&resp, NULL,
+				     block);
 }
 
 /* MRW */
diff --git a/drivers/infiniband/hw/bnxt_re/qplib_sp.h b/drivers/infiniband/hw/bnxt_re/qplib_sp.h
index 39454b3f738d..0ec3b12b0bcd 100644
--- a/drivers/infiniband/hw/bnxt_re/qplib_sp.h
+++ b/drivers/infiniband/hw/bnxt_re/qplib_sp.h
@@ -243,8 +243,8 @@ int bnxt_qplib_set_func_resources(struct bnxt_qplib_res *res,
 				  struct bnxt_qplib_ctx *ctx);
 int bnxt_qplib_create_ah(struct bnxt_qplib_res *res, struct bnxt_qplib_ah *ah,
 			 bool block);
-int bnxt_qplib_destroy_ah(struct bnxt_qplib_res *res, struct bnxt_qplib_ah *ah,
-			  bool block);
+void bnxt_qplib_destroy_ah(struct bnxt_qplib_res *res, struct bnxt_qplib_ah *ah,
+			   bool block);
 int bnxt_qplib_alloc_mrw(struct bnxt_qplib_res *res,
 			 struct bnxt_qplib_mrw *mrw);
 int bnxt_qplib_dereg_mrw(struct bnxt_qplib_res *res, struct bnxt_qplib_mrw *mrw,
* Unmerged path drivers/infiniband/hw/hns/hns_roce_ah.c
* Unmerged path drivers/infiniband/hw/hns/hns_roce_device.h
* Unmerged path drivers/infiniband/hw/hns/hns_roce_main.c
* Unmerged path drivers/infiniband/hw/mlx4/ah.c
* Unmerged path drivers/infiniband/hw/mlx4/mad.c
* Unmerged path drivers/infiniband/hw/mlx4/main.c
* Unmerged path drivers/infiniband/hw/mlx4/mlx4_ib.h
* Unmerged path drivers/infiniband/hw/mlx5/ah.c
* Unmerged path drivers/infiniband/hw/mlx5/main.c
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
* Unmerged path drivers/infiniband/hw/mthca/mthca_provider.c
* Unmerged path drivers/infiniband/hw/ocrdma/ocrdma_ah.c
* Unmerged path drivers/infiniband/hw/ocrdma/ocrdma_ah.h
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_hw.c b/drivers/infiniband/hw/ocrdma/ocrdma_hw.c
index 7363d6e7071d..719c6edb24f4 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_hw.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_hw.c
@@ -3066,13 +3066,12 @@ int ocrdma_alloc_av(struct ocrdma_dev *dev, struct ocrdma_ah *ah)
 	return status;
 }
 
-int ocrdma_free_av(struct ocrdma_dev *dev, struct ocrdma_ah *ah)
+void ocrdma_free_av(struct ocrdma_dev *dev, struct ocrdma_ah *ah)
 {
 	unsigned long flags;
 	spin_lock_irqsave(&dev->av_tbl.lock, flags);
 	ah->av->valid = 0;
 	spin_unlock_irqrestore(&dev->av_tbl.lock, flags);
-	return 0;
 }
 
 static int ocrdma_create_eqs(struct ocrdma_dev *dev)
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_hw.h b/drivers/infiniband/hw/ocrdma/ocrdma_hw.h
index ebc1f442aec3..88d45aa19ded 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_hw.h
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_hw.h
@@ -139,8 +139,8 @@ int ocrdma_mbx_modify_srq(struct ocrdma_srq *, struct ib_srq_attr *);
 int ocrdma_mbx_query_srq(struct ocrdma_srq *, struct ib_srq_attr *);
 int ocrdma_mbx_destroy_srq(struct ocrdma_dev *, struct ocrdma_srq *);
 
-int ocrdma_alloc_av(struct ocrdma_dev *, struct ocrdma_ah *);
-int ocrdma_free_av(struct ocrdma_dev *, struct ocrdma_ah *);
+int ocrdma_alloc_av(struct ocrdma_dev *dev, struct ocrdma_ah *ah);
+void ocrdma_free_av(struct ocrdma_dev *dev, struct ocrdma_ah *ah);
 
 int ocrdma_qp_state_change(struct ocrdma_qp *, enum ib_qp_state new_state,
 			    enum ib_qp_state *old_ib_state);
* Unmerged path drivers/infiniband/hw/ocrdma/ocrdma_main.c
* Unmerged path drivers/infiniband/hw/qedr/main.c
* Unmerged path drivers/infiniband/hw/qedr/verbs.c
* Unmerged path drivers/infiniband/hw/qedr/verbs.h
* Unmerged path drivers/infiniband/hw/vmw_pvrdma/pvrdma_main.c
* Unmerged path drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.c
* Unmerged path drivers/infiniband/hw/vmw_pvrdma/pvrdma_verbs.h
* Unmerged path drivers/infiniband/sw/rdmavt/ah.c
* Unmerged path drivers/infiniband/sw/rdmavt/ah.h
* Unmerged path drivers/infiniband/sw/rdmavt/vt.c
diff --git a/drivers/infiniband/sw/rxe/rxe_pool.c b/drivers/infiniband/sw/rxe/rxe_pool.c
index b5c91df22047..112d71671b7b 100644
--- a/drivers/infiniband/sw/rxe/rxe_pool.c
+++ b/drivers/infiniband/sw/rxe/rxe_pool.c
@@ -50,7 +50,7 @@ struct rxe_type_info rxe_type_info[RXE_NUM_TYPES] = {
 	[RXE_TYPE_AH] = {
 		.name		= "rxe-ah",
 		.size		= sizeof(struct rxe_ah),
-		.flags		= RXE_POOL_ATOMIC,
+		.flags		= RXE_POOL_ATOMIC | RXE_POOL_NO_ALLOC,
 	},
 	[RXE_TYPE_SRQ] = {
 		.name		= "rxe-srq",
* Unmerged path drivers/infiniband/sw/rxe/rxe_verbs.c
diff --git a/drivers/infiniband/sw/rxe/rxe_verbs.h b/drivers/infiniband/sw/rxe/rxe_verbs.h
index 74e04801d34d..929af0c7d97a 100644
--- a/drivers/infiniband/sw/rxe/rxe_verbs.h
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.h
@@ -71,8 +71,8 @@ struct rxe_pd {
 };
 
 struct rxe_ah {
-	struct rxe_pool_entry	pelem;
 	struct ib_ah		ibah;
+	struct rxe_pool_entry	pelem;
 	struct rxe_pd		*pd;
 	struct rxe_av		av;
 };
* Unmerged path include/rdma/ib_verbs.h
