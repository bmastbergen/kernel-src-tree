printk: Pass caller information to log_store().

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
commit cbae05d32ff68233f00cbad9fda0382cc982d821
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/cbae05d3.failed

When thread1 called printk() which did not end with '\n', and then thread2
called printk() which ends with '\n' before thread1 calls pr_cont(), the
partial content saved into "struct cont" is flushed by thread2 despite the
partial content was generated by thread1. This leads to confusing output
as if the partial content was generated by thread2. Fix this problem by
passing correct caller information to log_store().

Before:

  [ T8533] abcdefghijklm
  [ T8533] ABCDEFGHIJKLMNOPQRSTUVWXYZ
  [ T8532] nopqrstuvwxyz
  [ T8532] abcdefghijklmnopqrstuvwxyz
  [ T8533] abcdefghijklm
  [ T8533] ABCDEFGHIJKLMNOPQRSTUVWXYZ
  [ T8532] nopqrstuvwxyz

After:

  [ T8507] abcdefghijklm
  [ T8508] ABCDEFGHIJKLMNOPQRSTUVWXYZ
  [ T8507] nopqrstuvwxyz
  [ T8507] abcdefghijklmnopqrstuvwxyz
  [ T8507] abcdefghijklm
  [ T8508] ABCDEFGHIJKLMNOPQRSTUVWXYZ
  [ T8507] nopqrstuvwxyz

Link: http://lkml.kernel.org/r/1550314773-8607-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
To: Dmitry Vyukov <dvyukov@google.com>
To: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
To: Steven Rostedt <rostedt@goodmis.org>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
[pmladek: broke 80-column rule where it made more harm than good]
	Signed-off-by: Petr Mladek <pmladek@suse.com>
(cherry picked from commit cbae05d32ff68233f00cbad9fda0382cc982d821)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/printk/printk.c
diff --cc kernel/printk/printk.c
index 2c240612abfc,b4d26388bc62..000000000000
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@@ -627,6 -633,9 +627,12 @@@ static int log_store(u32 caller_id, in
  		msg->ts_nsec = ts_nsec;
  	else
  		msg->ts_nsec = local_clock();
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_PRINTK_CALLER
+ 	msg->caller_id = caller_id;
+ #endif
++>>>>>>> cbae05d32ff6 (printk: Pass caller information to log_store().)
  	memset(log_dict(msg) + dict_len, 0, pad_len);
  	msg->len = size;
  
@@@ -1840,12 -1887,14 +1855,13 @@@ static size_t log_output(int facility, 
  	}
  
  	/* Store it in the record log */
- 	return log_store(facility, level, lflags, 0, dict, dictlen, text, text_len);
+ 	return log_store(caller_id, facility, level, lflags, 0,
+ 			 dict, dictlen, text, text_len);
  }
  
 -/* Must be called under logbuf_lock. */
 -int vprintk_store(int facility, int level,
 -		  const char *dict, size_t dictlen,
 -		  const char *fmt, va_list args)
 +asmlinkage int vprintk_emit(int facility, int level,
 +			    const char *dict, size_t dictlen,
 +			    const char *fmt, va_list args)
  {
  	static char textbuf[LOG_LINE_MAX];
  	char *text = textbuf;
* Unmerged path kernel/printk/printk.c
