net/mlx5: Read num_vfs before disabling SR-IOV

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: Read num_vfs before disabling SR-IOV (Mohammad Heib) [1776921]
Rebuild_FUZZ: 95.45%
commit-author Parav Pandit <parav@mellanox.com>
commit a7cba0a4d508d2d78f2932ee944feadd38c97c2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/a7cba0a4.failed

mlx5_device_disable_sriov() currently reads num_vfs from the PCI core.
However when mlx5_device_disable_sriov() is executed, SR-IOV is
already disabled at the PCI level.
Due to this disable_hca() cleanup is not done during SR-IOV disable
flow.

mlx5_sriov_disable()
  pci_enable_sriov()
  mlx5_device_disable_sriov() <- num_vfs is zero here.

When SR-IOV enablement fails during mlx5_sriov_enable(), HCA's are left
in enabled stage because mlx5_device_disable_sriov() relies on num_vfs
from PCI core.

mlx5_sriov_enable()
  mlx5_device_enable_sriov()
  pci_enable_sriov() <- Fails

Hence, to overcome above issues,
(a) Read num_vfs before disabling SR-IOV and use it.
(b) Use num_vfs given when enabling sriov in error unwinding path.

Fixes: d886aba677a0 ("net/mlx5: Reduce dependency on enabled_vfs counter and num_vfs")
	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit a7cba0a4d508d2d78f2932ee944feadd38c97c2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/sriov.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/sriov.c
index a249b3c3843d,03f037811f1d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/sriov.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/sriov.c
@@@ -115,7 -108,8 +115,12 @@@ enable_vfs_hca
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void mlx5_device_disable_sriov(struct mlx5_core_dev *dev)
++=======
+ static void
+ mlx5_device_disable_sriov(struct mlx5_core_dev *dev, int num_vfs, bool clear_vf)
++>>>>>>> a7cba0a4d508 (net/mlx5: Read num_vfs before disabling SR-IOV)
  {
  	struct mlx5_core_sriov *sriov = &dev->priv.sriov;
  	int err;
@@@ -158,7 -147,7 +163,11 @@@ static int mlx5_sriov_enable(struct pci
  	err = pci_enable_sriov(pdev, num_vfs);
  	if (err) {
  		mlx5_core_warn(dev, "pci_enable_sriov failed : %d\n", err);
++<<<<<<< HEAD
 +		mlx5_device_disable_sriov(dev);
++=======
+ 		mlx5_device_disable_sriov(dev, num_vfs, true);
++>>>>>>> a7cba0a4d508 (net/mlx5: Read num_vfs before disabling SR-IOV)
  	}
  	return err;
  }
@@@ -166,9 -155,10 +175,14 @@@
  static void mlx5_sriov_disable(struct pci_dev *pdev)
  {
  	struct mlx5_core_dev *dev  = pci_get_drvdata(pdev);
+ 	int num_vfs = pci_num_vf(dev->pdev);
  
  	pci_disable_sriov(pdev);
++<<<<<<< HEAD
 +	mlx5_device_disable_sriov(dev);
++=======
+ 	mlx5_device_disable_sriov(dev, num_vfs, true);
++>>>>>>> a7cba0a4d508 (net/mlx5: Read num_vfs before disabling SR-IOV)
  }
  
  int mlx5_core_sriov_configure(struct pci_dev *pdev, int num_vfs)
@@@ -205,7 -193,31 +219,35 @@@ void mlx5_sriov_detach(struct mlx5_core
  	if (!mlx5_core_is_pf(dev))
  		return;
  
++<<<<<<< HEAD
 +	mlx5_device_disable_sriov(dev);
++=======
+ 	mlx5_device_disable_sriov(dev, pci_num_vf(dev->pdev), false);
+ }
+ 
+ static u16 mlx5_get_max_vfs(struct mlx5_core_dev *dev)
+ {
+ 	u16 host_total_vfs;
+ 	const u32 *out;
+ 
+ 	if (mlx5_core_is_ecpf_esw_manager(dev)) {
+ 		out = mlx5_esw_query_functions(dev);
+ 
+ 		/* Old FW doesn't support getting total_vfs from esw func
+ 		 * but supports getting it from pci_sriov.
+ 		 */
+ 		if (IS_ERR(out))
+ 			goto done;
+ 		host_total_vfs = MLX5_GET(query_esw_functions_out, out,
+ 					  host_params_context.host_total_vfs);
+ 		kvfree(out);
+ 		if (host_total_vfs)
+ 			return host_total_vfs;
+ 	}
+ 
+ done:
+ 	return pci_sriov_get_totalvfs(dev->pdev);
++>>>>>>> a7cba0a4d508 (net/mlx5: Read num_vfs before disabling SR-IOV)
  }
  
  int mlx5_sriov_init(struct mlx5_core_dev *dev)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sriov.c
