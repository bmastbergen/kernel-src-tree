libbpf: Add missing newline in opts validation macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Toke Høiland-Jørgensen <toke@redhat.com>
commit 12dd14b230b3c742b80272ecb8a83cdf824625ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/12dd14b2.failed

The error log output in the opts validation macro was missing a newline.

Fixes: 2ce8450ef5a3 ("libbpf: add bpf_object__open_{file, mem} w/ extensible opts")
	Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20191219120714.928380-1-toke@redhat.com
(cherry picked from commit 12dd14b230b3c742b80272ecb8a83cdf824625ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf_internal.h
diff --cc tools/lib/bpf/libbpf_internal.h
index 2e83a34f8c79,8c3afbd97747..000000000000
--- a/tools/lib/bpf/libbpf_internal.h
+++ b/tools/lib/bpf/libbpf_internal.h
@@@ -47,6 -63,40 +47,43 @@@ do {				
  #define pr_info(fmt, ...)	__pr(LIBBPF_INFO, fmt, ##__VA_ARGS__)
  #define pr_debug(fmt, ...)	__pr(LIBBPF_DEBUG, fmt, ##__VA_ARGS__)
  
++<<<<<<< HEAD
++=======
+ static inline bool libbpf_validate_opts(const char *opts,
+ 					size_t opts_sz, size_t user_sz,
+ 					const char *type_name)
+ {
+ 	if (user_sz < sizeof(size_t)) {
+ 		pr_warn("%s size (%zu) is too small\n", type_name, user_sz);
+ 		return false;
+ 	}
+ 	if (user_sz > opts_sz) {
+ 		size_t i;
+ 
+ 		for (i = opts_sz; i < user_sz; i++) {
+ 			if (opts[i]) {
+ 				pr_warn("%s has non-zero extra bytes\n",
+ 					type_name);
+ 				return false;
+ 			}
+ 		}
+ 	}
+ 	return true;
+ }
+ 
+ #define OPTS_VALID(opts, type)						      \
+ 	(!(opts) || libbpf_validate_opts((const char *)opts,		      \
+ 					 offsetofend(struct type,	      \
+ 						     type##__last_field),     \
+ 					 (opts)->sz, #type))
+ #define OPTS_HAS(opts, field) \
+ 	((opts) && opts->sz >= offsetofend(typeof(*(opts)), field))
+ #define OPTS_GET(opts, field, fallback_value) \
+ 	(OPTS_HAS(opts, field) ? (opts)->field : fallback_value)
+ 
+ int parse_cpu_mask_str(const char *s, bool **mask, int *mask_sz);
+ int parse_cpu_mask_file(const char *fcpu, bool **mask, int *mask_sz);
++>>>>>>> 12dd14b230b3 (libbpf: Add missing newline in opts validation macro)
  int libbpf__load_raw_btf(const char *raw_types, size_t types_len,
  			 const char *str_sec, size_t str_len);
  
* Unmerged path tools/lib/bpf/libbpf_internal.h
