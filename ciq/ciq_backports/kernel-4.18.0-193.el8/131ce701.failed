net/mlx5: E-Switch, Remove redundant mc_promisc NULL check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [netdrv] mlx5: E-Switch, Remove redundant mc_promisc NULL check (Alaa Hleihel) [1724336]
Rebuild_FUZZ: 96.43%
commit-author Parav Pandit <parav@mellanox.com>
commit 131ce7014043087fbeddbcb3b8dac8891cd0e0fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/131ce701.failed

mc_promisc pointer points to an instance of struct esw_mc_addr allocated
as part of the esw structure.
Hence it cannot be NULL.
Removed such redundant check and assign where it is actually used.

While at it, add comment around legacy mode fields and move mc_promisc
close to other legacy mode structures to improve code redability.

	Signed-off-by: Parav Pandit <parav@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 131ce7014043087fbeddbcb3b8dac8891cd0e0fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
index be195cce77a4,90d150be237b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
@@@ -1789,36 -1892,31 +1789,41 @@@ void mlx5_eswitch_disable_sriov(struct 
  {
  	struct esw_mc_addr *mc_promisc;
  	int old_mode;
 +	int nvports;
 +	int i;
  
 -	if (!ESW_ALLOWED(esw) || esw->mode == MLX5_ESWITCH_NONE)
 +	if (!ESW_ALLOWED(esw) || esw->mode == SRIOV_NONE)
  		return;
  
 -	esw_info(esw->dev, "Disable: mode(%s), nvfs(%d), active vports(%d)\n",
 -		 esw->mode == MLX5_ESWITCH_LEGACY ? "LEGACY" : "OFFLOADS",
 -		 esw->esw_funcs.num_vfs, esw->enabled_vports);
 +	esw_info(esw->dev, "disable SRIOV: active vports(%d) mode(%d)\n",
 +		 esw->enabled_vports, esw->mode);
  
++<<<<<<< HEAD
 +	mc_promisc = &esw->mc_promisc;
 +	nvports = esw->enabled_vports;
++=======
+ 	mlx5_eswitch_event_handlers_unregister(esw);
++>>>>>>> 131ce7014043 (net/mlx5: E-Switch, Remove redundant mc_promisc NULL check)
  
 -	mlx5_eswitch_disable_pf_vf_vports(esw);
 +	if (esw->mode == SRIOV_LEGACY)
 +		mlx5_eq_notifier_unregister(esw->dev, &esw->nb);
 +
 +	for (i = 0; i < esw->total_vports; i++)
 +		esw_disable_vport(esw, i);
  
- 	if (mc_promisc && mc_promisc->uplink_rule)
+ 	mc_promisc = &esw->mc_promisc;
+ 	if (mc_promisc->uplink_rule)
  		mlx5_del_flow_rules(mc_promisc->uplink_rule);
  
 -	if (esw->mode == MLX5_ESWITCH_LEGACY)
 -		esw_destroy_legacy_table(esw);
 -	else if (esw->mode == MLX5_ESWITCH_OFFLOADS)
 -		esw_offloads_cleanup(esw);
 -
  	esw_destroy_tsar(esw);
  
 +	if (esw->mode == SRIOV_LEGACY)
 +		esw_destroy_legacy_table(esw);
 +	else if (esw->mode == SRIOV_OFFLOADS)
 +		esw_offloads_cleanup(esw, nvports);
 +
  	old_mode = esw->mode;
 -	esw->mode = MLX5_ESWITCH_NONE;
 +	esw->mode = SRIOV_NONE;
  
  	mlx5_lag_update(esw->dev);
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index af9a875f1cf1..a3be66fa5832 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@ -189,8 +189,11 @@ struct esw_mc_addr { /* SRIOV only */
 struct mlx5_eswitch {
 	struct mlx5_core_dev    *dev;
 	struct mlx5_nb          nb;
+	/* legacy data structures */
 	struct mlx5_eswitch_fdb fdb_table;
 	struct hlist_head       mc_table[MLX5_L2_ADDR_HASH_SIZE];
+	struct esw_mc_addr mc_promisc;
+	/* end of legacy */
 	struct workqueue_struct *work_queue;
 	struct mlx5_vport       *vports;
 	int                     total_vports;
@@ -199,7 +202,6 @@ struct mlx5_eswitch {
 	 * and async SRIOV admin state changes
 	 */
 	struct mutex            state_lock;
-	struct esw_mc_addr	mc_promisc;
 
 	struct {
 		bool            enabled;
