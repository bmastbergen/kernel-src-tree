s390/qeth: check dst entry before use

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Julian Wiedmann <jwi@linux.ibm.com>
commit 0cd6783d3c7d40be165d1f3c811cedf0e3dfcdf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/0cd6783d.failed

While qeth_l3 uses netif_keep_dst() to hold onto the dst, a skb's dst
may still have been obsoleted (via dst_dev_put()) by the time that we
end up using it. The dst then points to the loopback interface, which
means the neighbour lookup in qeth_l3_get_cast_type() determines a bogus
cast type of RTN_BROADCAST.
For IQD interfaces this causes us to place such skbs on the wrong
HW queue, resulting in TX errors.

Fix-up the various call sites to first validate the dst entry with
dst_check(), and fall back accordingly.

	Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0cd6783d3c7d40be165d1f3c811cedf0e3dfcdf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_l3_main.c
diff --cc drivers/s390/net/qeth_l3_main.c
index 2767231791db,13bf3e2e9cea..000000000000
--- a/drivers/s390/net/qeth_l3_main.c
+++ b/drivers/s390/net/qeth_l3_main.c
@@@ -1944,6 -1948,8 +1951,11 @@@ static void qeth_l3_fill_header(struct 
  {
  	struct qeth_hdr_layer3 *l3_hdr = &hdr->hdr.l3;
  	struct vlan_ethhdr *veth = vlan_eth_hdr(skb);
++<<<<<<< HEAD
++=======
+ 	struct qeth_card *card = queue->card;
+ 	struct dst_entry *dst;
++>>>>>>> 0cd6783d3c7d (s390/qeth: check dst entry before use)
  
  	hdr->hdr.l3.length = data_len;
  
* Unmerged path drivers/s390/net/qeth_l3_main.c
