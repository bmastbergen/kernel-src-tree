nfp: remove ndo_get_port_parent_id implementation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Jiri Pirko <jiri@mellanox.com>
commit c25f08ac65e4e6a308babd2b39d89b362e9086c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/c25f08ac.failed

Remove implementation of get_port_parent_id ndo and rely on core calling
into devlink for the information directly.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c25f08ac65e4e6a308babd2b39d89b362e9086c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net_common.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_repr.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_common.c
index 7adfe416825f,bde9695b9f8a..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
@@@ -3543,8 -3533,7 +3543,12 @@@ const struct net_device_ops nfp_net_net
  	.ndo_udp_tunnel_add	= nfp_net_add_vxlan_port,
  	.ndo_udp_tunnel_del	= nfp_net_del_vxlan_port,
  	.ndo_bpf		= nfp_net_xdp,
++<<<<<<< HEAD
 +	.ndo_get_port_parent_id	= nfp_port_get_port_parent_id,
 +	.ndo_get_devlink	= nfp_devlink_get_devlink,
++=======
+ 	.ndo_get_devlink_port	= nfp_devlink_get_devlink_port,
++>>>>>>> c25f08ac65e4 (nfp: remove ndo_get_port_parent_id implementation)
  };
  
  /**
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_repr.c
index 94d228c04496,c3ad083d36c6..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_repr.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_repr.c
@@@ -272,8 -272,7 +272,12 @@@ const struct net_device_ops nfp_repr_ne
  	.ndo_fix_features	= nfp_repr_fix_features,
  	.ndo_set_features	= nfp_port_set_features,
  	.ndo_set_mac_address    = eth_mac_addr,
++<<<<<<< HEAD
 +	.ndo_get_port_parent_id	= nfp_port_get_port_parent_id,
 +	.ndo_get_devlink	= nfp_devlink_get_devlink,
++=======
+ 	.ndo_get_devlink_port	= nfp_devlink_get_devlink_port,
++>>>>>>> c25f08ac65e4 (nfp: remove ndo_get_port_parent_id implementation)
  };
  
  void
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_common.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_repr.c
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_port.c b/drivers/net/ethernet/netronome/nfp/nfp_port.c
index 93c5bfc0510b..fcd16877e6e0 100644
--- a/drivers/net/ethernet/netronome/nfp/nfp_port.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_port.c
@@ -30,22 +30,6 @@ struct nfp_port *nfp_port_from_netdev(struct net_device *netdev)
 	return NULL;
 }
 
-int nfp_port_get_port_parent_id(struct net_device *netdev,
-				struct netdev_phys_item_id *ppid)
-{
-	struct nfp_port *port;
-	const u8 *serial;
-
-	port = nfp_port_from_netdev(netdev);
-	if (!port)
-		return -EOPNOTSUPP;
-
-	ppid->id_len = nfp_cpp_serial(port->app->cpp, &serial);
-	memcpy(&ppid->id, serial, ppid->id_len);
-
-	return 0;
-}
-
 int nfp_port_setup_tc(struct net_device *netdev, enum tc_setup_type type,
 		      void *type_data)
 {
