RDMA/iw_cxgb4: fix SRQ access from dump_qp()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Potnuri Bharat Teja <bharat@chelsio.com>
commit 91724c1e5afe45b64970036170659726e7dc5cff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/91724c1e.failed

dump_qp() is wrongly trying to dump SRQ structures as QP when SRQ is used
by the application. This patch matches the QPID before dumping them.  Also
removes unwanted SRQ id addition to QP id xarray.

Fixes: 2f43129127e6 ("cxgb4: Convert qpidr to XArray")
Link: https://lore.kernel.org/r/20190930074119.20046-1-bharat@chelsio.com
	Signed-off-by: Rahul Kundu <rahul.kundu@chelsio.com>
	Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 91724c1e5afe45b64970036170659726e7dc5cff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/qp.c
diff --cc drivers/infiniband/hw/cxgb4/qp.c
index 176eab2358a4,bbcac539777a..000000000000
--- a/drivers/infiniband/hw/cxgb4/qp.c
+++ b/drivers/infiniband/hw/cxgb4/qp.c
@@@ -2836,10 -2807,8 +2830,15 @@@ int c4iw_destroy_srq(struct ib_srq *ibs
  	rhp = srq->rhp;
  
  	pr_debug("%s id %d\n", __func__, srq->wq.qid);
++<<<<<<< HEAD
 +
 +	xa_erase_irq(&rhp->qps, srq->wq.qid);
 +	ucontext = ibsrq->uobject ?
 +		to_c4iw_ucontext(ibsrq->uobject->context) : NULL;
++=======
+ 	ucontext = rdma_udata_to_drv_context(udata, struct c4iw_ucontext,
+ 					     ibucontext);
++>>>>>>> 91724c1e5afe (RDMA/iw_cxgb4: fix SRQ access from dump_qp())
  	free_srq_queue(srq, ucontext ? &ucontext->uctx : &rhp->rdev.uctx,
  		       srq->wr_waitp);
  	c4iw_free_srq_idx(&rhp->rdev, srq->idx);
diff --git a/drivers/infiniband/hw/cxgb4/device.c b/drivers/infiniband/hw/cxgb4/device.c
index 78577b3191fa..dd7eb8dcf67d 100644
--- a/drivers/infiniband/hw/cxgb4/device.c
+++ b/drivers/infiniband/hw/cxgb4/device.c
@@ -250,10 +250,13 @@ static void set_ep_sin6_addrs(struct c4iw_ep *ep,
 	}
 }
 
-static int dump_qp(struct c4iw_qp *qp, struct c4iw_debugfs_data *qpd)
+static int dump_qp(unsigned long id, struct c4iw_qp *qp,
+		   struct c4iw_debugfs_data *qpd)
 {
 	int space;
 	int cc;
+	if (id != qp->wq.sq.qid)
+		return 0;
 
 	space = qpd->bufsize - qpd->pos - 1;
 	if (space == 0)
@@ -358,7 +361,7 @@ static int qp_open(struct inode *inode, struct file *file)
 
 	xa_lock_irq(&qpd->devp->qps);
 	xa_for_each(&qpd->devp->qps, index, qp)
-		dump_qp(qp, qpd);
+		dump_qp(index, qp, qpd);
 	xa_unlock_irq(&qpd->devp->qps);
 
 	qpd->buf[qpd->pos++] = 0;
* Unmerged path drivers/infiniband/hw/cxgb4/qp.c
