RDMA/mlx5: Refactor netdev affinity code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Mark Bloch <markb@mellanox.com>
commit 35b0aa67b29867cdeaee32f920da3cb300dbb851
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/35b0aa67.failed

The design of representors is such that once an IB representor is created,
the netdev of representor already exists, we can use that fact to simplify
the netdev affinity code.

	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 35b0aa67b29867cdeaee32f920da3cb300dbb851)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/ib_rep.c
#	drivers/infiniband/hw/mlx5/main.c
diff --cc drivers/infiniband/hw/mlx5/ib_rep.c
index 95ac97af6166,7946cf26421b..000000000000
--- a/drivers/infiniband/hw/mlx5/ib_rep.c
+++ b/drivers/infiniband/hw/mlx5/ib_rep.c
@@@ -74,14 -62,22 +74,28 @@@ mlx5_ib_vport_rep_load(struct mlx5_core
  	if (!ibdev)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	ibdev->rep = rep;
++=======
+ 	ibdev->port = kcalloc(num_ports, sizeof(*ibdev->port),
+ 			      GFP_KERNEL);
+ 	if (!ibdev->port) {
+ 		ib_dealloc_device(&ibdev->ib_dev);
+ 		return -ENOMEM;
+ 	}
+ 
+ 	ibdev->is_rep = true;
+ 	ibdev->port[0].rep = rep;
+ 	ibdev->port[0].roce.netdev =
+ 		mlx5_ib_get_rep_netdev(dev->priv.eswitch, rep->vport);
++>>>>>>> 35b0aa67b298 (RDMA/mlx5: Refactor netdev affinity code)
  	ibdev->mdev = dev;
 -	ibdev->num_ports = num_ports;
 -
 -	if (!__mlx5_ib_add(ibdev, profile))
 +	ibdev->num_ports = max(MLX5_CAP_GEN(dev, num_ports),
 +			       MLX5_CAP_GEN(dev, num_vhca_ports));
 +	if (!__mlx5_ib_add(ibdev, &rep_profile)) {
 +		ib_dealloc_device(&ibdev->ib_dev);
  		return -EINVAL;
 +	}
  
  	rep->rep_if[REP_IB].priv = ibdev;
  
diff --cc drivers/infiniband/hw/mlx5/main.c
index bfccdc129840,0c3335d3fc3d..000000000000
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@@ -172,18 -200,12 +200,24 @@@ static int mlx5_netdev_event(struct not
  
  	switch (event) {
  	case NETDEV_REGISTER:
+ 		/* Should already be registered during the load */
+ 		if (ibdev->is_rep)
+ 			break;
  		write_lock(&roce->netdev_lock);
++<<<<<<< HEAD
 +		if (ibdev->rep) {
 +			struct mlx5_eswitch *esw = ibdev->mdev->priv.eswitch;
 +			struct net_device *rep_ndev;
 +
 +			rep_ndev = mlx5_ib_get_rep_netdev(esw,
 +							  ibdev->rep->vport);
 +			if (rep_ndev == ndev)
 +				roce->netdev = ndev;
 +		} else if (ndev->dev.parent == &mdev->pdev->dev) {
++=======
+ 		if (ndev->dev.parent == &mdev->pdev->dev)
++>>>>>>> 35b0aa67b298 (RDMA/mlx5: Refactor netdev affinity code)
  			roce->netdev = ndev;
- 		}
  		write_unlock(&roce->netdev_lock);
  		break;
  
* Unmerged path drivers/infiniband/hw/mlx5/ib_rep.c
* Unmerged path drivers/infiniband/hw/mlx5/main.c
