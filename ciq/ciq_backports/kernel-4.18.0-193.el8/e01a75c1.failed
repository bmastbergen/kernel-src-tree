libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit e01a75c159691714607b8a22daa2ba7be275dd01
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/e01a75c1.failed

Move bpf_helpers.h, bpf_tracing.h, and bpf_endian.h into libbpf. Move
bpf_helper_defs.h generation into libbpf's Makefile. Ensure all those
headers are installed along the other libbpf headers. Also, adjust
selftests and samples include path to include libbpf now.

	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Song Liu <songliubraving@fb.com>
Link: https://lore.kernel.org/bpf/20191008175942.1769476-6-andriin@fb.com
(cherry picked from commit e01a75c159691714607b8a22daa2ba7be275dd01)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/.gitignore
#	tools/lib/bpf/bpf_tracing.h
#	tools/testing/selftests/bpf/.gitignore
#	tools/testing/selftests/bpf/Makefile
diff --cc tools/lib/bpf/.gitignore
index 01eb9b677e27,35bf013e368c..000000000000
--- a/tools/lib/bpf/.gitignore
+++ b/tools/lib/bpf/.gitignore
@@@ -1,3 -1,9 +1,12 @@@
  libbpf_version.h
  libbpf.pc
  FEATURE-DUMP.libbpf
++<<<<<<< HEAD
++=======
+ test_libbpf
+ libbpf.so.*
+ TAGS
+ tags
+ cscope.*
+ /bpf_helper_defs.h
++>>>>>>> e01a75c15969 (libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf)
diff --cc tools/testing/selftests/bpf/.gitignore
index 159e0044042b,7470327edcfe..000000000000
--- a/tools/testing/selftests/bpf/.gitignore
+++ b/tools/testing/selftests/bpf/.gitignore
@@@ -22,5 -22,20 +22,22 @@@ test_lirc_mode2_use
  get_cgroup_id_user
  test_skb_cgroup_id_user
  test_socket_cookie
 -test_cgroup_attach
  test_cgroup_storage
  test_select_reuseport
++<<<<<<< HEAD
++=======
+ test_flow_dissector
+ flow_dissector_load
+ test_netcnt
+ test_section_names
+ test_tcpnotify_user
+ test_libbpf
+ test_tcp_check_syncookie_user
+ test_sysctl
+ alu32
+ libbpf.pc
+ libbpf.so.*
+ test_hashmap
+ test_btf_dump
+ xdping
++>>>>>>> e01a75c15969 (libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf)
diff --cc tools/testing/selftests/bpf/Makefile
index 9bfa8b025d92,90944b7a8274..000000000000
--- a/tools/testing/selftests/bpf/Makefile
+++ b/tools/testing/selftests/bpf/Makefile
@@@ -67,11 -86,21 +67,24 @@@ TEST_GEN_PROGS_EXTENDED = test_libbpf_o
  
  include ../lib.mk
  
++<<<<<<< HEAD
++=======
+ # NOTE: $(OUTPUT) won't get default value if used before lib.mk
+ TEST_CUSTOM_PROGS = $(OUTPUT)/urandom_read
+ all: $(TEST_CUSTOM_PROGS)
+ 
+ $(OUTPUT)/urandom_read: $(OUTPUT)/%: %.c
+ 	$(CC) -o $@ $< -Wl,--build-id
+ 
+ $(OUTPUT)/test_stub.o: test_stub.c
+ 	$(CC) $(TEST_PROGS_CFLAGS) $(CFLAGS) -c -o $@ $<
+ 
++>>>>>>> e01a75c15969 (libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf)
  BPFOBJ := $(OUTPUT)/libbpf.a
  
 -$(TEST_GEN_PROGS): $(OUTPUT)/test_stub.o $(BPFOBJ)
 +$(TEST_GEN_PROGS): $(BPFOBJ)
  
 -$(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/test_stub.o $(OUTPUT)/libbpf.a
 +$(TEST_GEN_PROGS_EXTENDED): $(OUTPUT)/libbpf.a
  
  $(OUTPUT)/test_dev_cgroup: cgroup_helpers.c
  $(OUTPUT)/test_skb_cgroup_id_user: cgroup_helpers.c
@@@ -116,15 -142,19 +129,22 @@@ endi
  #
  # Use '-idirafter': Don't interfere with include mechanics except where the
  # build would have failed anyways.
 -define get_sys_includes
 -$(shell $(1) -v -E - </dev/null 2>&1 \
 +CLANG_SYS_INCLUDES := $(shell $(CLANG) -v -E - </dev/null 2>&1 \
  	| sed -n '/<...> search starts here:/,/End of search list./{ s| \(/.*\)|-idirafter \1|p }')
++<<<<<<< HEAD
++=======
+ endef
+ CLANG_SYS_INCLUDES = $(call get_sys_includes,$(CLANG))
+ BPF_CFLAGS = -I. -I./include/uapi -I../../../include/uapi \
+ 	     -I$(BPFDIR) -I$(OUTPUT)/../usr/include -D__TARGET_ARCH_$(SRCARCH)
++>>>>>>> e01a75c15969 (libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf)
  
 -CLANG_CFLAGS = $(CLANG_SYS_INCLUDES) \
 -	       -Wno-compare-distinct-pointer-types
 +CLANG_FLAGS = -I. -I./include/uapi -I../../../include/uapi \
 +	      $(CLANG_SYS_INCLUDES) \
 +	      -Wno-compare-distinct-pointer-types
  
 -$(OUTPUT)/test_l4lb_noinline.o: BPF_CFLAGS += -fno-inline
 -$(OUTPUT)/test_xdp_noinline.o: BPF_CFLAGS += -fno-inline
 +$(OUTPUT)/test_l4lb_noinline.o: CLANG_FLAGS += -fno-inline
 +$(OUTPUT)/test_xdp_noinline.o: CLANG_FLAGS += -fno-inline
  
  $(OUTPUT)/test_queue_map.o: test_queue_stack_map.h
  $(OUTPUT)/test_stack_map.o: test_queue_stack_map.h
@@@ -172,4 -264,59 +192,63 @@@ ifeq ($(DWARF2BTF),y
  	$(BTF_PAHOLE) -J $@
  endif
  
++<<<<<<< HEAD
 +EXTRA_CLEAN := $(TEST_CUSTOM_PROGS)
++=======
+ PROG_TESTS_DIR = $(OUTPUT)/prog_tests
+ $(PROG_TESTS_DIR):
+ 	mkdir -p $@
+ PROG_TESTS_H := $(PROG_TESTS_DIR)/tests.h
+ PROG_TESTS_FILES := $(wildcard prog_tests/*.c)
+ test_progs.c: $(PROG_TESTS_H)
+ $(OUTPUT)/test_progs: CFLAGS += $(TEST_PROGS_CFLAGS)
+ $(OUTPUT)/test_progs: test_progs.c $(PROG_TESTS_FILES) | $(OUTPUT)/test_attach_probe.o $(PROG_TESTS_H)
+ $(PROG_TESTS_H): $(PROG_TESTS_FILES) | $(PROG_TESTS_DIR)
+ 	$(shell ( cd prog_tests/; \
+ 		  echo '/* Generated header, do not edit */'; \
+ 		  ls *.c 2> /dev/null | \
+ 			sed -e 's@\([^\.]*\)\.c@DEFINE_TEST(\1)@'; \
+ 		 ) > $(PROG_TESTS_H))
+ 
+ MAP_TESTS_DIR = $(OUTPUT)/map_tests
+ $(MAP_TESTS_DIR):
+ 	mkdir -p $@
+ MAP_TESTS_H := $(MAP_TESTS_DIR)/tests.h
+ MAP_TESTS_FILES := $(wildcard map_tests/*.c)
+ test_maps.c: $(MAP_TESTS_H)
+ $(OUTPUT)/test_maps: CFLAGS += $(TEST_MAPS_CFLAGS)
+ $(OUTPUT)/test_maps: test_maps.c $(MAP_TESTS_FILES) | $(MAP_TESTS_H)
+ $(MAP_TESTS_H): $(MAP_TESTS_FILES) | $(MAP_TESTS_DIR)
+ 	$(shell ( cd map_tests/; \
+ 		  echo '/* Generated header, do not edit */'; \
+ 		  echo '#ifdef DECLARE'; \
+ 		  ls *.c 2> /dev/null | \
+ 			sed -e 's@\([^\.]*\)\.c@extern void test_\1(void);@'; \
+ 		  echo '#endif'; \
+ 		  echo '#ifdef CALL'; \
+ 		  ls *.c 2> /dev/null | \
+ 			sed -e 's@\([^\.]*\)\.c@test_\1();@'; \
+ 		  echo '#endif' \
+ 		 ) > $(MAP_TESTS_H))
+ 
+ VERIFIER_TESTS_DIR = $(OUTPUT)/verifier
+ $(VERIFIER_TESTS_DIR):
+ 	mkdir -p $@
+ VERIFIER_TESTS_H := $(VERIFIER_TESTS_DIR)/tests.h
+ VERIFIER_TEST_FILES := $(wildcard verifier/*.c)
+ test_verifier.c: $(VERIFIER_TESTS_H)
+ $(OUTPUT)/test_verifier: CFLAGS += $(TEST_VERIFIER_CFLAGS)
+ $(OUTPUT)/test_verifier: test_verifier.c | $(VERIFIER_TEST_FILES) $(VERIFIER_TESTS_H)
+ $(VERIFIER_TESTS_H): $(VERIFIER_TEST_FILES) | $(VERIFIER_TESTS_DIR)
+ 	$(shell ( cd verifier/; \
+ 		  echo '/* Generated header, do not edit */'; \
+ 		  echo '#ifdef FILL_ARRAY'; \
+ 		  ls *.c 2> /dev/null | \
+ 			sed -e 's@\(.*\)@#include \"\1\"@'; \
+ 		  echo '#endif' \
+ 		 ) > $(VERIFIER_TESTS_H))
+ 
+ EXTRA_CLEAN := $(TEST_CUSTOM_PROGS) $(ALU32_BUILD_DIR) $(BPF_GCC_BUILD_DIR) \
+ 	$(VERIFIER_TESTS_H) $(PROG_TESTS_H) $(MAP_TESTS_H) \
+ 	feature
++>>>>>>> e01a75c15969 (libbpf: Move bpf_{helpers, helper_defs, endian, tracing}.h into libbpf)
* Unmerged path tools/lib/bpf/bpf_tracing.h
diff --git a/samples/bpf/Makefile b/samples/bpf/Makefile
index 35f6d1428c0c..ab6a826a8f3e 100644
--- a/samples/bpf/Makefile
+++ b/samples/bpf/Makefile
@@ -283,7 +283,7 @@ $(obj)/hbm_edt_kern.o: $(src)/hbm.h $(src)/hbm_kern.h
 $(obj)/%.o: $(src)/%.c
 	@echo "  CLANG-bpf " $@
 	$(Q)$(CLANG) $(NOSTDINC_FLAGS) $(LINUXINCLUDE) $(EXTRA_CFLAGS) -I$(obj) \
-		-I$(srctree)/tools/testing/selftests/bpf/ \
+		-I$(srctree)/tools/testing/selftests/bpf/ -I$(srctree)/tools/lib/bpf/ \
 		-D__KERNEL__ -D__BPF_TRACING__ -Wno-unused-value -Wno-pointer-sign \
 		-D__TARGET_ARCH_$(SRCARCH) -Wno-compare-distinct-pointer-types \
 		-Wno-gnu-variable-sized-type-not-at-end \
* Unmerged path tools/lib/bpf/.gitignore
diff --git a/tools/lib/bpf/Makefile b/tools/lib/bpf/Makefile
index d71dd7772ae0..96709a80d877 100644
--- a/tools/lib/bpf/Makefile
+++ b/tools/lib/bpf/Makefile
@@ -152,7 +152,7 @@ all: fixdep
 
 all_cmd: $(CMD_TARGETS) check
 
-$(BPF_IN): force elfdep bpfdep
+$(BPF_IN): force elfdep bpfdep bpf_helper_defs.h
 	@(test -f ../../include/uapi/linux/bpf.h -a -f ../../../include/uapi/linux/bpf.h && ( \
 	(diff -B ../../include/uapi/linux/bpf.h ../../../include/uapi/linux/bpf.h >/dev/null) || \
 	echo "Warning: Kernel ABI header at 'tools/include/uapi/linux/bpf.h' differs from latest version at 'include/uapi/linux/bpf.h'" >&2 )) || true
@@ -170,6 +170,10 @@ $(BPF_IN): force elfdep bpfdep
 	echo "Warning: Kernel ABI header at 'tools/include/uapi/linux/if_xdp.h' differs from latest version at 'include/uapi/linux/if_xdp.h'" >&2 )) || true
 	$(Q)$(MAKE) $(build)=libbpf
 
+bpf_helper_defs.h: $(srctree)/include/uapi/linux/bpf.h
+	$(Q)$(srctree)/scripts/bpf_helpers_doc.py --header 		\
+		--file $(srctree)/include/uapi/linux/bpf.h > bpf_helper_defs.h
+
 $(OUTPUT)libbpf.so: $(OUTPUT)libbpf.so.$(LIBBPF_VERSION)
 
 $(OUTPUT)libbpf.so.$(LIBBPF_VERSION): $(BPF_IN)
@@ -230,13 +234,17 @@ install_lib: all_cmd
 		$(call do_install_mkdir,$(libdir_SQ)); \
 		cp -fpR $(LIB_FILE) $(DESTDIR)$(libdir_SQ)
 
-install_headers:
+install_headers: bpf_helper_defs.h
 	$(call QUIET_INSTALL, headers) \
 		$(call do_install,bpf.h,$(prefix)/include/bpf,644); \
 		$(call do_install,libbpf.h,$(prefix)/include/bpf,644); \
 		$(call do_install,btf.h,$(prefix)/include/bpf,644); \
 		$(call do_install,libbpf_util.h,$(prefix)/include/bpf,644); \
-		$(call do_install,xsk.h,$(prefix)/include/bpf,644);
+		$(call do_install,xsk.h,$(prefix)/include/bpf,644); \
+		$(call do_install,bpf_helpers.h,$(prefix)/include/bpf,644); \
+		$(call do_install,bpf_helper_defs.h,$(prefix)/include/bpf,644); \
+		$(call do_install,bpf_tracing.h,$(prefix)/include/bpf,644); \
+		$(call do_install,bpf_endian.h,$(prefix)/include/bpf,644);
 
 install_pkgconfig: $(PC_FILE)
 	$(call QUIET_INSTALL, $(PC_FILE)) \
@@ -253,7 +261,7 @@ config-clean:
 clean:
 	$(call QUIET_CLEAN, libbpf) $(RM) $(TARGETS) $(CXX_TEST_TARGET) \
 		*.o *~ *.a *.so *.so.$(LIBBPF_MAJOR_VERSION) .*.d .*.cmd \
-		*.pc LIBBPF-CFLAGS
+		*.pc LIBBPF-CFLAGS bpf_helper_defs.h
 	$(call QUIET_CLEAN, core-gen) $(RM) $(OUTPUT)FEATURE-DUMP.libbpf
 
 
diff --git a/tools/testing/selftests/bpf/bpf_endian.h b/tools/lib/bpf/bpf_endian.h
similarity index 100%
rename from tools/testing/selftests/bpf/bpf_endian.h
rename to tools/lib/bpf/bpf_endian.h
diff --git a/tools/testing/selftests/bpf/bpf_helpers.h b/tools/lib/bpf/bpf_helpers.h
similarity index 100%
rename from tools/testing/selftests/bpf/bpf_helpers.h
rename to tools/lib/bpf/bpf_helpers.h
* Unmerged path tools/lib/bpf/bpf_tracing.h
* Unmerged path tools/testing/selftests/bpf/.gitignore
* Unmerged path tools/testing/selftests/bpf/Makefile
