net: devlink: introduce devlink_compat_switch_id_get() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] devlink: introduce devlink_compat_switch_id_get() helper (Petr Oros) [1737133]
Rebuild_FUZZ: 95.73%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 7e1146e8c10c00f859843817da8ecc5d902ea409
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/7e1146e8.failed

Introduce devlink_compat_switch_id_get() helper which fills up switch_id
according to passed netdev pointer. Call it directly from
dev_get_port_parent_id() as a fallback when ndo_get_port_parent_id
is not defined for given netdev.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7e1146e8c10c00f859843817da8ecc5d902ea409)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/devlink.h
diff --cc include/net/devlink.h
index b709c4086baa,70c7d1ac8344..000000000000
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@@ -722,6 -739,12 +722,13 @@@ devlink_health_reporter_state_update(st
  void devlink_compat_running_version(struct net_device *dev,
  				    char *buf, size_t len);
  int devlink_compat_flash_update(struct net_device *dev, const char *file_name);
++<<<<<<< HEAD
++=======
+ int devlink_compat_phys_port_name_get(struct net_device *dev,
+ 				      char *name, size_t len);
+ int devlink_compat_switch_id_get(struct net_device *dev,
+ 				 struct netdev_phys_item_id *ppid);
++>>>>>>> 7e1146e8c10c (net: devlink: introduce devlink_compat_switch_id_get() helper)
  
  #else
  
@@@ -1223,6 -758,21 +1230,24 @@@ devlink_compat_flash_update(struct net_
  {
  	return -EOPNOTSUPP;
  }
++<<<<<<< HEAD
++=======
+ 
+ static inline int
+ devlink_compat_phys_port_name_get(struct net_device *dev,
+ 				  char *name, size_t len)
+ {
+ 	return -EOPNOTSUPP;
+ }
+ 
+ static inline int
+ devlink_compat_switch_id_get(struct net_device *dev,
+ 			     struct netdev_phys_item_id *ppid)
+ {
+ 	return -EOPNOTSUPP;
+ }
+ 
++>>>>>>> 7e1146e8c10c (net: devlink: introduce devlink_compat_switch_id_get() helper)
  #endif
  
  #endif /* _NET_DEVLINK_H_ */
* Unmerged path include/net/devlink.h
diff --git a/net/core/dev.c b/net/core/dev.c
index 9906175b6f76..4f4d1c62ad4a 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -7640,14 +7640,21 @@ int dev_get_port_parent_id(struct net_device *dev,
 	struct netdev_phys_item_id first = { };
 	struct net_device *lower_dev;
 	struct list_head *iter;
-	int err = -EOPNOTSUPP;
+	int err;
 
-	if (ops->ndo_get_port_parent_id)
-		return ops->ndo_get_port_parent_id(dev, ppid);
+	if (ops->ndo_get_port_parent_id) {
+		err = ops->ndo_get_port_parent_id(dev, ppid);
+		if (err != -EOPNOTSUPP)
+			return err;
+	}
 
-	if (!recurse)
+	err = devlink_compat_switch_id_get(dev, ppid);
+	if (!err || err != -EOPNOTSUPP)
 		return err;
 
+	if (!recurse)
+		return -EOPNOTSUPP;
+
 	netdev_for_each_lower_dev(dev, lower_dev, iter) {
 		err = dev_get_port_parent_id(lower_dev, ppid, recurse);
 		if (err)
diff --git a/net/core/devlink.c b/net/core/devlink.c
index 48f0a56ab944..88128b01e087 100644
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@ -6529,6 +6529,25 @@ int devlink_compat_flash_update(struct net_device *dev, const char *file_name)
 	return -EOPNOTSUPP;
 }
 
+int devlink_compat_switch_id_get(struct net_device *dev,
+				 struct netdev_phys_item_id *ppid)
+{
+	struct devlink_port *devlink_port;
+
+	/* RTNL mutex is held here which ensures that devlink_port
+	 * instance cannot disappear in the middle. No need to take
+	 * any devlink lock as only permanent values are accessed.
+	 */
+	ASSERT_RTNL();
+	devlink_port = netdev_to_devlink_port(dev);
+	if (!devlink_port || !devlink_port->attrs.switch_port)
+		return -EOPNOTSUPP;
+
+	memcpy(ppid, &devlink_port->attrs.switch_id, sizeof(*ppid));
+
+	return 0;
+}
+
 static int __init devlink_init(void)
 {
 	return genl_register_family(&devlink_nl_family);
