arm64: Kconfig: Tidy up errata workaround help text

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Will Deacon <will.deacon@arm.com>
commit bc15cf701fa4875d9710f16ca4d2ce25e66ce4a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/bc15cf70.failed

The nature of silicon errata means that the Kconfig help text for our
various software workarounds has been written by many different people.
Along the way, we've accumulated typos and inconsistencies which make
the options needlessly difficult to read.

Fix up minor issues with the help text.

	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit bc15cf701fa4875d9710f16ca4d2ce25e66ce4a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/Kconfig
diff --cc arch/arm64/Kconfig
index a2ff4c9fea5e,d28f12e9c160..000000000000
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@@ -502,10 -478,9 +502,10 @@@ config ARM64_ERRATUM_102471
  config ARM64_ERRATUM_1188873
  	bool "Cortex-A76: MRC read following MRRC read of specific Generic Timer in AArch32 might give incorrect result"
  	default y
 +	depends on COMPAT
  	select ARM_ARCH_TIMER_OOL_WORKAROUND
  	help
- 	  This option adds work arounds for ARM Cortex-A76 erratum 1188873
+ 	  This option adds a workaround for ARM Cortex-A76 erratum 1188873.
  
  	  Affected Cortex-A76 cores (r0p0, r1p0, r2p0) could cause
  	  register corruption when accessing the timer registers from
@@@ -525,6 -500,24 +525,27 @@@ config ARM64_ERRATUM_116552
  
  	  If unsure, say Y.
  
++<<<<<<< HEAD
++=======
+ config ARM64_ERRATUM_1286807
+ 	bool "Cortex-A76: Modification of the translation table for a virtual address might lead to read-after-read ordering violation"
+ 	default y
+ 	select ARM64_WORKAROUND_REPEAT_TLBI
+ 	help
+ 	  This option adds a workaround for ARM Cortex-A76 erratum 1286807.
+ 
+ 	  On the affected Cortex-A76 cores (r0p0 to r3p0), if a virtual
+ 	  address for a cacheable mapping of a location is being
+ 	  accessed by a core while another core is remapping the virtual
+ 	  address to a new physical page using the recommended
+ 	  break-before-make sequence, then under very rare circumstances
+ 	  TLBI+DSB completes before a read using the translation being
+ 	  invalidated has been observed by other observers. The
+ 	  workaround repeats the TLBI+DSB operation.
+ 
+ 	  If unsure, say Y.
+ 
++>>>>>>> bc15cf701fa4 (arm64: Kconfig: Tidy up errata workaround help text)
  config CAVIUM_ERRATUM_22375
  	bool "Cavium erratum 22375, 24313"
  	default y
@@@ -594,6 -587,9 +615,12 @@@ config QCOM_FALKOR_ERRATUM_100
  	  is unchanged. Work around the erratum by invalidating the walk cache
  	  entries for the trampoline before entering the kernel proper.
  
++<<<<<<< HEAD
++=======
+ config ARM64_WORKAROUND_REPEAT_TLBI
+ 	bool
+ 
++>>>>>>> bc15cf701fa4 (arm64: Kconfig: Tidy up errata workaround help text)
  config QCOM_FALKOR_ERRATUM_1009
  	bool "Falkor E1009: Prematurely complete a DSB after a TLBI"
  	default y
@@@ -1327,6 -1399,20 +1354,23 @@@ config ARM64_MODULE_PLT
  	bool
  	select HAVE_MOD_ARCH_SPECIFIC
  
++<<<<<<< HEAD
++=======
+ config ARM64_PSEUDO_NMI
+ 	bool "Support for NMI-like interrupts"
+ 	select CONFIG_ARM_GIC_V3
+ 	help
+ 	  Adds support for mimicking Non-Maskable Interrupts through the use of
+ 	  GIC interrupt priority. This support requires version 3 or later of
+ 	  ARM GIC.
+ 
+ 	  This high priority configuration for interrupts needs to be
+ 	  explicitly enabled by setting the kernel parameter
+ 	  "irqchip.gicv3_pseudo_nmi" to 1.
+ 
+ 	  If unsure, say N
+ 
++>>>>>>> bc15cf701fa4 (arm64: Kconfig: Tidy up errata workaround help text)
  config RELOCATABLE
  	bool
  	help
* Unmerged path arch/arm64/Kconfig
