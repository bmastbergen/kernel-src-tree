net/tls: add missing prot info init

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] tls: add missing prot info init (Sabrina Dubroca) [1760375]
Rebuild_FUZZ: 93.94%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit ab232e61e728a08a2cb4ebb439d7d2aa75df89c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/ab232e61.failed

Turns out TLS_TX in HW offload mode does not initialize tls_prot_info.
Since commit 9cd81988cce1 ("net/tls: use version from prot") we actually
use this field on the datapath.  Luckily we always compare it to TLS 1.3,
and assume 1.2 otherwise. So since zero is not equal to 1.3, everything
worked fine.

Fixes: 9cd81988cce1 ("net/tls: use version from prot")
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ab232e61e728a08a2cb4ebb439d7d2aa75df89c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_device.c
diff --cc net/tls/tls_device.c
index 330d54f9f11e,7c0b2b778703..000000000000
--- a/net/tls/tls_device.c
+++ b/net/tls/tls_device.c
@@@ -765,6 -877,14 +765,17 @@@ int tls_set_device_offload(struct sock 
  		goto free_offload_ctx;
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* Sanity-check the rec_seq_size for stack allocations */
+ 	if (rec_seq_size > TLS_MAX_REC_SEQ_SIZE) {
+ 		rc = -EINVAL;
+ 		goto free_offload_ctx;
+ 	}
+ 
+ 	prot->version = crypto_info->version;
+ 	prot->cipher_type = crypto_info->cipher_type;
++>>>>>>> ab232e61e728 (net/tls: add missing prot info init)
  	prot->prepend_size = TLS_HEADER_SIZE + nonce_size;
  	prot->tag_size = tag_size;
  	prot->overhead_size = prot->prepend_size + prot->tag_size;
* Unmerged path net/tls/tls_device.c
