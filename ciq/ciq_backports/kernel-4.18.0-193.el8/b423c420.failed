ASoC: soc-dai: add snd_soc_dai_compress_new()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-dai: add snd_soc_dai_compress_new() (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 93.75%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit b423c4202135f7794e0a9c55a884f5933d8e7156
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/b423c420.failed

Current ALSA SoC is directly using dai->driver->xxx,
thus, it has deep nested bracket, and it makes code unreadable.
This patch adds new snd_soc_dai_compress_new() and use it.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Link: https://lore.kernel.org/r/87h87ehn1a.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit b423c4202135f7794e0a9c55a884f5933d8e7156)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/soc-dai.h
#	sound/soc/soc-dai.c
diff --cc include/sound/soc-dai.h
index f5d70041108f,0f8b09520020..000000000000
--- a/include/sound/soc-dai.h
+++ b/include/sound/soc-dai.h
@@@ -145,6 -145,30 +145,33 @@@ int snd_soc_dai_get_channel_map(struct 
  
  int snd_soc_dai_is_dummy(struct snd_soc_dai *dai);
  
++<<<<<<< HEAD
++=======
+ int snd_soc_dai_hw_params(struct snd_soc_dai *dai,
+ 			  struct snd_pcm_substream *substream,
+ 			  struct snd_pcm_hw_params *params);
+ void snd_soc_dai_hw_free(struct snd_soc_dai *dai,
+ 			 struct snd_pcm_substream *substream);
+ int snd_soc_dai_startup(struct snd_soc_dai *dai,
+ 			struct snd_pcm_substream *substream);
+ void snd_soc_dai_shutdown(struct snd_soc_dai *dai,
+ 			  struct snd_pcm_substream *substream);
+ int snd_soc_dai_prepare(struct snd_soc_dai *dai,
+ 			struct snd_pcm_substream *substream);
+ int snd_soc_dai_trigger(struct snd_soc_dai *dai,
+ 			struct snd_pcm_substream *substream, int cmd);
+ int snd_soc_dai_bespoke_trigger(struct snd_soc_dai *dai,
+ 			struct snd_pcm_substream *substream, int cmd);
+ snd_pcm_sframes_t snd_soc_dai_delay(struct snd_soc_dai *dai,
+ 				    struct snd_pcm_substream *substream);
+ void snd_soc_dai_suspend(struct snd_soc_dai *dai);
+ void snd_soc_dai_resume(struct snd_soc_dai *dai);
+ int snd_soc_dai_probe(struct snd_soc_dai *dai);
+ int snd_soc_dai_remove(struct snd_soc_dai *dai);
+ int snd_soc_dai_compress_new(struct snd_soc_dai *dai,
+ 			     struct snd_soc_pcm_runtime *rtd, int num);
+ 
++>>>>>>> b423c4202135 (ASoC: soc-dai: add snd_soc_dai_compress_new())
  struct snd_soc_dai_ops {
  	/*
  	 * DAI clocking configuration, all optional.
* Unmerged path sound/soc/soc-dai.c
* Unmerged path include/sound/soc-dai.h
diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index 0451742d082d..65588de16af7 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -1642,15 +1642,16 @@ static int soc_probe_link_dais(struct snd_soc_card *card,
 			num = rtd->dai_link->id;
 	}
 
-	if (cpu_dai->driver->compress_new) {
-		/* create compress_device" */
-		ret = cpu_dai->driver->compress_new(rtd, num);
-		if (ret < 0) {
+	/* create compress_device if possible */
+	ret = snd_soc_dai_compress_new(cpu_dai, rtd, num);
+	if (ret != -ENOTSUPP) {
+		if (ret < 0)
 			dev_err(card->dev, "ASoC: can't create compress %s\n",
 					 dai_link->stream_name);
-			return ret;
-		}
-	} else if (!dai_link->params) {
+		return ret;
+	}
+
+	if (!dai_link->params) {
 		/* create the pcm */
 		ret = soc_new_pcm(rtd, num);
 		if (ret < 0) {
* Unmerged path sound/soc/soc-dai.c
