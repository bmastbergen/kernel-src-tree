iommu/vt-d: Use dev_printk() when possible

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Use dev_printk() when possible (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 92.31%
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 932a6523ce393921f81f09c273aa4adee52391af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/932a6523.failed

Use dev_printk() when possible so the IOMMU messages are more consistent
with other messages related to the device.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 932a6523ce393921f81f09c273aa4adee52391af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 571e5d59c400,648dc16cca6e..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -2473,13 -2539,15 +2474,19 @@@ static struct dmar_domain *dmar_insert_
  	list_add(&info->global, &device_domain_list);
  	if (dev)
  		dev->archdata.iommu = info;
 -	spin_unlock_irqrestore(&device_domain_lock, flags);
  
 -	/* PASID table is mandatory for a PCI device in scalable mode. */
 -	if (dev && dev_is_pci(dev) && sm_supported(iommu)) {
 +	if (dev && dev_is_pci(dev) && info->pasid_supported) {
  		ret = intel_pasid_alloc_table(dev);
  		if (ret) {
++<<<<<<< HEAD
 +			pr_warn("No pasid table for %s, pasid disabled\n",
 +				dev_name(dev));
 +			info->pasid_supported = 0;
++=======
+ 			dev_err(dev, "PASID table allocation failed\n");
+ 			dmar_remove_one_dev_info(domain, dev);
+ 			return NULL;
++>>>>>>> 932a6523ce39 (iommu/vt-d: Use dev_printk() when possible)
  		}
  
  		/* Setup the PASID entry for requests without PASID: */
@@@ -2498,10 -2565,9 +2504,10 @@@
  			return NULL;
  		}
  	}
 +	spin_unlock_irqrestore(&device_domain_lock, flags);
  
  	if (dev && domain_context_mapping(domain, dev)) {
- 		pr_err("Domain context map for %s failed\n", dev_name(dev));
+ 		dev_err(dev, "Domain context map failed\n");
  		dmar_remove_one_dev_info(domain, dev);
  		return NULL;
  	}
* Unmerged path drivers/iommu/intel-iommu.c
