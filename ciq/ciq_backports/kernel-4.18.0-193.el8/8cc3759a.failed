iommu/vt-d: Move common code out of iommu_attch_device()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [iommu] vt-d: Move common code out of iommu_attch_device() (Jerry Snitselaar) [1742234]
Rebuild_FUZZ: 94.34%
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit 8cc3759a6c4931fca2ad9c1b0ead24dc0c30041c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8cc3759a.failed

This part of code could be used by both normal and aux
domain specific attach entries. Hence move them into a
common function to avoid duplication.

	Cc: Ashok Raj <ashok.raj@intel.com>
	Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Cc: Kevin Tian <kevin.tian@intel.com>
	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 8cc3759a6c4931fca2ad9c1b0ead24dc0c30041c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 940779fd0ec3,a0f9c748ca9f..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -5022,27 -5074,6 +5022,30 @@@ static int prepare_domain_attach_device
  	int addr_width;
  	u8 bus, devfn;
  
++<<<<<<< HEAD
 +	if (device_is_rmrr_locked(dev)) {
 +		dev_warn(dev, "Device is ineligible for IOMMU domain attach due to platform RMRR requirement.  Contact your platform vendor.\n");
 +		return -EPERM;
 +	}
 +
 +	/* normally dev is not mapped */
 +	if (unlikely(domain_context_mapped(dev))) {
 +		struct dmar_domain *old_domain;
 +
 +		old_domain = find_domain(dev);
 +		if (old_domain) {
 +			rcu_read_lock();
 +			dmar_remove_one_dev_info(old_domain, dev);
 +			rcu_read_unlock();
 +
 +			if (!domain_type_is_vm_or_si(old_domain) &&
 +			     list_empty(&old_domain->devices))
 +				domain_exit(old_domain);
 +		}
 +	}
 +
++=======
++>>>>>>> 8cc3759a6c49 (iommu/vt-d: Move common code out of iommu_attch_device())
  	iommu = device_to_iommu(dev, &bus, &devfn);
  	if (!iommu)
  		return -ENODEV;
* Unmerged path drivers/iommu/intel-iommu.c
