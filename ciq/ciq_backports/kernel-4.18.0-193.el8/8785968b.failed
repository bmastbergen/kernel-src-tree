x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [x86] platform/uv: Add UV Hubbed/Hubless Proc FS Files (Frank Ramsay) [1757510]
Rebuild_FUZZ: 96.00%
commit-author Mike Travis <mike.travis@hpe.com>
commit 8785968bce1cc7368ea95c3e1e5b9210f56f6667
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/8785968b.failed

Indicate to UV user utilities that UV hubless support is available on
this system via the existing /proc infterface.  The current interface is
maintained with the addition of new /proc leaves ("hubbed", "hubless",
and "oemid") that contain the specific type of UV arch this one is.

	Signed-off-by: Mike Travis <mike.travis@hpe.com>
	Reviewed-by: Steve Wahl <steve.wahl@hpe.com>
	Reviewed-by: Dimitri Sivanich <dimitri.sivanich@hpe.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Christoph Hellwig <hch@infradead.org>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Hedi Berriche <hedi.berriche@hpe.com>
	Cc: Justin Ernst <justin.ernst@hpe.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Russ Anderson <russ.anderson@hpe.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20190910145840.055590900@stormcage.eag.rdlabs.hpecorp.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 8785968bce1cc7368ea95c3e1e5b9210f56f6667)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/uv/uv.h
#	arch/x86/kernel/apic/x2apic_uv_x.c
diff --cc arch/x86/include/asm/uv/uv.h
index e60c45fd3679,45ea95ce79b4..000000000000
--- a/arch/x86/include/asm/uv/uv.h
+++ b/arch/x86/include/asm/uv/uv.h
@@@ -12,13 -12,26 +12,33 @@@ struct mm_struct
  #ifdef CONFIG_X86_UV
  #include <linux/efi.h>
  
++<<<<<<< HEAD
++=======
+ #define	UV_PROC_NODE	"sgi_uv"
+ 
+ static inline int uv(int uvtype)
+ {
+ 	/* uv(0) is "any" */
+ 	if (uvtype >= 0 && uvtype <= 30)
+ 		return 1 << uvtype;
+ 	return 1;
+ }
+ 
+ extern unsigned long uv_systab_phys;
+ 
++>>>>>>> 8785968bce1c (x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files)
  extern enum uv_system_type get_uv_system_type(void);
  static inline bool is_early_uv_system(void)
  {
 -	return uv_systab_phys && uv_systab_phys != EFI_INVALID_TABLE_ADDR;
 +	return !((efi.uv_systab == EFI_INVALID_TABLE_ADDR) || !efi.uv_systab);
  }
  extern int is_uv_system(void);
++<<<<<<< HEAD
 +extern int is_uv_hubless(void);
++=======
+ extern int is_uv_hubbed(int uvtype);
+ extern int is_uv_hubless(int uvtype);
++>>>>>>> 8785968bce1c (x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files)
  extern void uv_cpu_init(void);
  extern void uv_nmi_init(void);
  extern void uv_system_init(void);
@@@ -30,7 -43,8 +50,12 @@@ extern const struct cpumask *uv_flush_t
  static inline enum uv_system_type get_uv_system_type(void) { return UV_NONE; }
  static inline bool is_early_uv_system(void)	{ return 0; }
  static inline int is_uv_system(void)	{ return 0; }
++<<<<<<< HEAD
 +static inline int is_uv_hubless(void)	{ return 0; }
++=======
+ static inline int is_uv_hubbed(int uv)	{ return 0; }
+ static inline int is_uv_hubless(int uv) { return 0; }
++>>>>>>> 8785968bce1c (x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files)
  static inline void uv_cpu_init(void)	{ }
  static inline void uv_system_init(void)	{ }
  static inline const struct cpumask *
diff --cc arch/x86/kernel/apic/x2apic_uv_x.c
index 18a8bcc93e18,b5059050b46f..000000000000
--- a/arch/x86/kernel/apic/x2apic_uv_x.c
+++ b/arch/x86/kernel/apic/x2apic_uv_x.c
@@@ -35,16 -22,12 +35,21 @@@
  #include <asm/uv/bios.h>
  #include <asm/uv/uv.h>
  #include <asm/apic.h>
 +#include <asm/e820/api.h>
 +#include <asm/ipi.h>
 +#include <asm/smp.h>
 +#include <asm/x86_init.h>
 +#include <asm/nmi.h>
  
 -static DEFINE_PER_CPU(int, x2apic_extra_bits);
 +DEFINE_PER_CPU(int, x2apic_extra_bits);
  
  static enum uv_system_type	uv_system_type;
++<<<<<<< HEAD
 +static bool			uv_hubless_system;
++=======
+ static int			uv_hubbed_system;
+ static int			uv_hubless_system;
++>>>>>>> 8785968bce1c (x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files)
  static u64			gru_start_paddr, gru_end_paddr;
  static u64			gru_dist_base, gru_first_node_paddr = -1LL, gru_last_node_paddr;
  static u64			gru_dist_lmask, gru_dist_umask;
@@@ -355,9 -378,15 +378,19 @@@ int is_uv_system(void
  }
  EXPORT_SYMBOL_GPL(is_uv_system);
  
++<<<<<<< HEAD
 +int is_uv_hubless(void)
++=======
+ int is_uv_hubbed(int uvtype)
+ {
+ 	return (uv_hubbed_system & uvtype);
+ }
+ EXPORT_SYMBOL_GPL(is_uv_hubbed);
+ 
+ int is_uv_hubless(int uvtype)
++>>>>>>> 8785968bce1c (x86/platform/uv: Add UV Hubbed/Hubless Proc FS Files)
  {
 -	return (uv_hubless_system & uvtype);
 +	return uv_hubless_system;
  }
  EXPORT_SYMBOL_GPL(is_uv_hubless);
  
* Unmerged path arch/x86/include/asm/uv/uv.h
* Unmerged path arch/x86/kernel/apic/x2apic_uv_x.c
