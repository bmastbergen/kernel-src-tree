ASoC: soc-dai: add snd_soc_dai_prepare()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [sound] ALSA: ASoC: soc-dai: add snd_soc_dai_prepare() (Jaroslav Kysela) [1738610]
Rebuild_FUZZ: 93.02%
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit 4beb8e109d30d339d44308a767dd6f5614492f3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4beb8e10.failed

Current ALSA SoC is directly using dai->driver->ops->xxx,
thus, it has deep nested bracket, and it makes code unreadable.
This patch adds new snd_soc_dai_prepare() and use it.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Link: https://lore.kernel.org/r/87tvbehn46.wl-kuninori.morimoto.gx@renesas.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 4beb8e109d30d339d44308a767dd6f5614492f3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/soc-dai.h
#	sound/soc/soc-dai.c
diff --cc include/sound/soc-dai.h
index f5d70041108f,c7dff6a0b5b9..000000000000
--- a/include/sound/soc-dai.h
+++ b/include/sound/soc-dai.h
@@@ -145,6 -145,18 +145,21 @@@ int snd_soc_dai_get_channel_map(struct 
  
  int snd_soc_dai_is_dummy(struct snd_soc_dai *dai);
  
++<<<<<<< HEAD
++=======
+ int snd_soc_dai_hw_params(struct snd_soc_dai *dai,
+ 			  struct snd_pcm_substream *substream,
+ 			  struct snd_pcm_hw_params *params);
+ void snd_soc_dai_hw_free(struct snd_soc_dai *dai,
+ 			 struct snd_pcm_substream *substream);
+ int snd_soc_dai_startup(struct snd_soc_dai *dai,
+ 			struct snd_pcm_substream *substream);
+ void snd_soc_dai_shutdown(struct snd_soc_dai *dai,
+ 			  struct snd_pcm_substream *substream);
+ int snd_soc_dai_prepare(struct snd_soc_dai *dai,
+ 			struct snd_pcm_substream *substream);
+ 
++>>>>>>> 4beb8e109d30 (ASoC: soc-dai: add snd_soc_dai_prepare())
  struct snd_soc_dai_ops {
  	/*
  	 * DAI clocking configuration, all optional.
* Unmerged path sound/soc/soc-dai.c
* Unmerged path include/sound/soc-dai.h
* Unmerged path sound/soc/soc-dai.c
diff --git a/sound/soc/soc-pcm.c b/sound/soc/soc-pcm.c
index 4878d22ebd8c..45597d9d484e 100644
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@ -825,27 +825,22 @@ static int soc_pcm_prepare(struct snd_pcm_substream *substream)
 	}
 
 	for_each_rtd_codec_dai(rtd, i, codec_dai) {
-		if (codec_dai->driver->ops->prepare) {
-			ret = codec_dai->driver->ops->prepare(substream,
-							      codec_dai);
-			if (ret < 0) {
-				dev_err(codec_dai->dev,
-					"ASoC: codec DAI prepare error: %d\n",
-					ret);
-				goto out;
-			}
-		}
-	}
-
-	if (cpu_dai->driver->ops->prepare) {
-		ret = cpu_dai->driver->ops->prepare(substream, cpu_dai);
+		ret = snd_soc_dai_prepare(codec_dai, substream);
 		if (ret < 0) {
-			dev_err(cpu_dai->dev,
-				"ASoC: cpu DAI prepare error: %d\n", ret);
+			dev_err(codec_dai->dev,
+				"ASoC: codec DAI prepare error: %d\n",
+				ret);
 			goto out;
 		}
 	}
 
+	ret = snd_soc_dai_prepare(cpu_dai, substream);
+	if (ret < 0) {
+		dev_err(cpu_dai->dev,
+			"ASoC: cpu DAI prepare error: %d\n", ret);
+		goto out;
+	}
+
 	/* cancel any delayed stream shutdown that is pending */
 	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK &&
 	    rtd->pop_wait) {
