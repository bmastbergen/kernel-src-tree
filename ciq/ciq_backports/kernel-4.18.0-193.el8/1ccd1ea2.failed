fuse: convert destroy to simple api

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 1ccd1ea24962276ca0548386889ef7bf57479c5d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/1ccd1ea2.failed

We can use the "force" flag to make sure the DESTROY request is always sent
to userspace.  So no need to keep it allocated during the lifetime of the
filesystem.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 1ccd1ea24962276ca0548386889ef7bf57479c5d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/inode.c
diff --cc fs/fuse/inode.c
index 523a1f18c557,127984642a71..000000000000
--- a/fs/fuse/inode.c
+++ b/fs/fuse/inode.c
@@@ -1168,11 -1163,12 +1165,20 @@@ static int fuse_fill_super(struct super
  		fc->dont_mask = 1;
  	sb->s_flags |= SB_POSIXACL;
  
++<<<<<<< HEAD
 +	fc->default_permissions = d.default_permissions;
 +	fc->allow_other = d.allow_other;
 +	fc->user_id = d.user_id;
 +	fc->group_id = d.group_id;
 +	fc->max_read = max_t(unsigned, 4096, d.max_read);
++=======
+ 	fc->default_permissions = ctx->default_permissions;
+ 	fc->allow_other = ctx->allow_other;
+ 	fc->user_id = ctx->user_id;
+ 	fc->group_id = ctx->group_id;
+ 	fc->max_read = max_t(unsigned, 4096, ctx->max_read);
+ 	fc->destroy = is_bdev;
++>>>>>>> 1ccd1ea24962 (fuse: convert destroy to simple api)
  
  	/* Used by get_root_inode() */
  	sb->s_fs_info = fc;
diff --git a/fs/fuse/file.c b/fs/fuse/file.c
index 242a5155c471..40dbac4b4427 100644
--- a/fs/fuse/file.c
+++ b/fs/fuse/file.c
@@ -273,7 +273,7 @@ void fuse_release_common(struct file *file, bool isdir)
 	 * synchronous RELEASE is allowed (and desirable) in this case
 	 * because the server can be trusted not to screw up.
 	 */
-	fuse_file_put(ff, ff->fc->destroy_req != NULL, isdir);
+	fuse_file_put(ff, ff->fc->destroy, isdir);
 }
 
 static int fuse_open(struct inode *inode, struct file *file)
diff --git a/fs/fuse/fuse_i.h b/fs/fuse/fuse_i.h
index 41673641ba3b..718527c74330 100644
--- a/fs/fuse/fuse_i.h
+++ b/fs/fuse/fuse_i.h
@@ -703,6 +703,9 @@ struct fuse_conn {
 	/** Does the filesystem support copy_file_range? */
 	unsigned no_copy_file_range:1;
 
+	/* Send DESTROY request */
+	unsigned int destroy:1;
+
 	/** The number of requests waiting for completion */
 	atomic_t num_waiting;
 
@@ -724,9 +727,6 @@ struct fuse_conn {
 	/** Key for lock owner ID scrambling */
 	u32 scramble_key[4];
 
-	/** Reserved request for the DESTROY message */
-	struct fuse_req *destroy_req;
-
 	/** Version counter for attribute changes */
 	atomic64_t attr_version;
 
* Unmerged path fs/fuse/inode.c
