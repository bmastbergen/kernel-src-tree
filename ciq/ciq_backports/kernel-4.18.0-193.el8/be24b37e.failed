KEYS: trusted: fix -Wvarags warning

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author ndesaulniers@google.com <ndesaulniers@google.com>
commit be24b37e22c20cbaa891971616784dd0f35211e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/be24b37e.failed

Fixes the warning reported by Clang:
security/keys/trusted.c:146:17: warning: passing an object that
undergoes default
      argument promotion to 'va_start' has undefined behavior [-Wvarargs]
        va_start(argp, h3);
                       ^
security/keys/trusted.c:126:37: note: parameter of type 'unsigned
char' is declared here
unsigned char *h2, unsigned char h3, ...)
                               ^
Specifically, it seems that both the C90 (4.8.1.1) and C11 (7.16.1.4)
standards explicitly call this out as undefined behavior:

The parameter parmN is the identifier of the rightmost parameter in
the variable parameter list in the function definition (the one just
before the ...). If the parameter parmN is declared with ... or with a
type that is not compatible with the type that results after
application of the default argument promotions, the behavior is
undefined.

Link: https://github.com/ClangBuiltLinux/linux/issues/41
Link: https://www.eskimo.com/~scs/cclass/int/sx11c.html
	Suggested-by: David Laight <David.Laight@aculab.com>
	Suggested-by: Denis Kenzior <denkenz@gmail.com>
	Suggested-by: James Bottomley <jejb@linux.vnet.ibm.com>
	Suggested-by: Nathan Chancellor <natechancellor@gmail.com>
	Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
	Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
	Tested-by: Nathan Chancellor <natechancellor@gmail.com>
	Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: James Morris <james.morris@microsoft.com>
(cherry picked from commit be24b37e22c20cbaa891971616784dd0f35211e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/keys/trusted.h
diff --cc include/keys/trusted.h
index 8d5fe9eafb22,0071298b9b28..000000000000
--- a/include/keys/trusted.h
+++ b/include/keys/trusted.h
@@@ -36,6 -36,18 +36,21 @@@ enum 
  	SRK_keytype = 4
  };
  
++<<<<<<< HEAD
++=======
+ int TSS_authhmac(unsigned char *digest, const unsigned char *key,
+ 			unsigned int keylen, unsigned char *h1,
+ 			unsigned char *h2, unsigned int h3, ...);
+ int TSS_checkhmac1(unsigned char *buffer,
+ 			  const uint32_t command,
+ 			  const unsigned char *ononce,
+ 			  const unsigned char *key,
+ 			  unsigned int keylen, ...);
+ 
+ int trusted_tpm_send(unsigned char *cmd, size_t buflen);
+ int oiap(struct tpm_buf *tb, uint32_t *handle, unsigned char *nonce);
+ 
++>>>>>>> be24b37e22c2 (KEYS: trusted: fix -Wvarags warning)
  #define TPM_DEBUG 0
  
  #if TPM_DEBUG
* Unmerged path include/keys/trusted.h
diff --git a/security/keys/trusted.c b/security/keys/trusted.c
index b268d03f3f90..361d088c8ee4 100644
--- a/security/keys/trusted.c
+++ b/security/keys/trusted.c
@@ -125,7 +125,7 @@ static int TSS_rawhmac(unsigned char *digest, const unsigned char *key,
  */
 static int TSS_authhmac(unsigned char *digest, const unsigned char *key,
 			unsigned int keylen, unsigned char *h1,
-			unsigned char *h2, unsigned char h3, ...)
+			unsigned char *h2, unsigned int h3, ...)
 {
 	unsigned char paramdigest[SHA1_DIGEST_SIZE];
 	struct sdesc *sdesc;
@@ -144,7 +144,7 @@ static int TSS_authhmac(unsigned char *digest, const unsigned char *key,
 		return PTR_ERR(sdesc);
 	}
 
-	c = h3;
+	c = !!h3;
 	ret = crypto_shash_init(&sdesc->shash);
 	if (ret < 0)
 		goto out;
