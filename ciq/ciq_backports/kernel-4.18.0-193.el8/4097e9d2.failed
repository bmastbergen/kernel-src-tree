net: sched: don't use tc_action->order during action dump

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
Rebuild_CHGLOG: - [net] sched: don't use tc_action->order during action dump (Ivan Vecera) [1739606]
Rebuild_FUZZ: 95.41%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 4097e9d250fb17958c1d9b94538386edd3f20144
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/4097e9d2.failed

Function tcf_action_dump() relies on tc_action->order field when starting
nested nla to send action data to userspace. This approach breaks in
several cases:

- When multiple filters point to same shared action, tc_action->order field
  is overwritten each time it is attached to filter. This causes filter
  dump to output action with incorrect attribute for all filters that have
  the action in different position (different order) from the last set
  tc_action->order value.

- When action data is displayed using tc action API (RTM_GETACTION), action
  order is overwritten by tca_action_gd() according to its position in
  resulting array of nl attributes, which will break filter dump for all
  filters attached to that shared action that expect it to have different
  order value.

Don't rely on tc_action->order when dumping actions. Set nla according to
action position in resulting array of actions instead.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4097e9d250fb17958c1d9b94538386edd3f20144)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_api.c
diff --cc net/sched/act_api.c
index d35eb0b8379b,c42ecf4b3c10..000000000000
--- a/net/sched/act_api.c
+++ b/net/sched/act_api.c
@@@ -803,7 -800,7 +803,11 @@@ int tcf_action_dump(struct sk_buff *skb
  
  	for (i = 0; i < TCA_ACT_MAX_PRIO && actions[i]; i++) {
  		a = actions[i];
++<<<<<<< HEAD
 +		nest = nla_nest_start(skb, a->order);
++=======
+ 		nest = nla_nest_start_noflag(skb, i + 1);
++>>>>>>> 4097e9d250fb (net: sched: don't use tc_action->order during action dump)
  		if (nest == NULL)
  			goto nla_put_failure;
  		err = tcf_action_dump_1(skb, a, bind, ref);
* Unmerged path net/sched/act_api.c
