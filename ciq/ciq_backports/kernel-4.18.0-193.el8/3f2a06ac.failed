drm/amdgpu: disable gfxoff on original raven

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-193.el8
commit-author Alex Deucher <alexander.deucher@amd.com>
commit 3f2a06ac814e84fba16592286ec99364098cdd07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-193.el8/3f2a06ac.failed

There are still combinations of sbios and firmware that
are not stable.

Bug: https://bugzilla.kernel.org/show_bug.cgi?id=204689
	Acked-by: Christian KÃ¶nig <christian.koenig@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 3f2a06ac814e84fba16592286ec99364098cdd07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
index 1c72903db2ba,3e4ac2f06c3b..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
@@@ -576,9 -1043,46 +576,51 @@@ static void gfx_v9_0_check_fw_write_wai
  	}
  }
  
++<<<<<<< HEAD
 +static int gfx_v9_0_init_microcode(struct amdgpu_device *adev)
++=======
+ static void gfx_v9_0_check_if_need_gfxoff(struct amdgpu_device *adev)
+ {
+ 	switch (adev->asic_type) {
+ 	case CHIP_VEGA10:
+ 	case CHIP_VEGA12:
+ 	case CHIP_VEGA20:
+ 		break;
+ 	case CHIP_RAVEN:
+ 		/* Disable GFXOFF on original raven.  There are combinations
+ 		 * of sbios and platforms that are not stable.
+ 		 */
+ 		if (!(adev->rev_id >= 0x8 || adev->pdev->device == 0x15d8))
+ 			adev->pm.pp_feature &= ~PP_GFXOFF_MASK;
+ 		else if (!(adev->rev_id >= 0x8 || adev->pdev->device == 0x15d8)
+ 			 &&((adev->gfx.rlc_fw_version != 106 &&
+ 			     adev->gfx.rlc_fw_version < 531) ||
+ 			    (adev->gfx.rlc_fw_version == 53815) ||
+ 			    (adev->gfx.rlc_feature_version < 1) ||
+ 			    !adev->gfx.rlc.is_rlc_v2_1))
+ 			adev->pm.pp_feature &= ~PP_GFXOFF_MASK;
+ 
+ 		if (adev->pm.pp_feature & PP_GFXOFF_MASK)
+ 			adev->pg_flags |= AMD_PG_SUPPORT_GFX_PG |
+ 				AMD_PG_SUPPORT_CP |
+ 				AMD_PG_SUPPORT_RLC_SMU_HS;
+ 		break;
+ 	case CHIP_RENOIR:
+ 		if (adev->pm.pp_feature & PP_GFXOFF_MASK)
+ 			adev->pg_flags |= AMD_PG_SUPPORT_GFX_PG |
+ 				AMD_PG_SUPPORT_CP |
+ 				AMD_PG_SUPPORT_RLC_SMU_HS;
+ 		break;
+ 	default:
+ 		break;
+ 	}
+ }
+ 
+ static int gfx_v9_0_init_cp_gfx_microcode(struct amdgpu_device *adev,
+ 					  const char *chip_name)
++>>>>>>> 3f2a06ac814e (drm/amdgpu: disable gfxoff on original raven)
  {
 +	const char *chip_name;
  	char fw_name[30];
  	int err;
  	struct amdgpu_firmware_info *info = NULL;
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
