futex: Simplify fixup_pi_state_owner()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-301.1.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit f2dac39d93987f7de1e20b3988c8685523247ae2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-301.1.el8/f2dac39d.failed

Too many gotos already and an upcoming fix would make it even more
unreadable.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: stable@vger.kernel.org
(cherry picked from commit f2dac39d93987f7de1e20b3988c8685523247ae2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/futex.c
diff --cc kernel/futex.c
index 68d78b271694,7a38ead96cae..000000000000
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@@ -2342,18 -2329,13 +2342,17 @@@ static void unqueue_me_pi(struct futex_
  	spin_unlock(q->lock_ptr);
  }
  
- static int fixup_pi_state_owner(u32 __user *uaddr, struct futex_q *q,
- 				struct task_struct *argowner)
+ static int __fixup_pi_state_owner(u32 __user *uaddr, struct futex_q *q,
+ 				  struct task_struct *argowner)
  {
  	struct futex_pi_state *pi_state = q->pi_state;
++<<<<<<< HEAD
 +	u32 uval, uninitialized_var(curval), newval;
++=======
++>>>>>>> f2dac39d9398 (futex: Simplify fixup_pi_state_owner())
  	struct task_struct *oldowner, *newowner;
- 	u32 newtid;
- 	int ret, err = 0;
- 
- 	lockdep_assert_held(q->lock_ptr);
- 
- 	raw_spin_lock_irq(&pi_state->pi_mutex.wait_lock);
+ 	u32 uval, curval, newval, newtid;
+ 	int err = 0;
  
  	oldowner = pi_state->owner;
  
* Unmerged path kernel/futex.c
