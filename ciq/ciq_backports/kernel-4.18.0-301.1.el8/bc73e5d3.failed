drm/i915: Hold onto an explicit ref to i915_vma_work.pinned

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-301.1.el8
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit bc73e5d33048b7ab5f12b11b5d923700467a8e1d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-301.1.el8/bc73e5d3.failed

Since __vma_release is run by a kworker after the fence has been
signaled, it is no longer protected by the active reference on the vma,
and so the alias of vw->pinned to vma->obj is also not protected by a
reference on the object. Add an explicit reference for vw->pinned so it
will always be safe.

Found by inspection.

Fixes: 54d7195f8c64 ("drm/i915: Unpin vma->obj on early error")
	Reported-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
	Cc: <stable@vger.kernel.org> # v5.6+
	Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20201102161931.30031-1-chris@chris-wilson.co.uk
(cherry picked from commit bc73e5d33048b7ab5f12b11b5d923700467a8e1d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_vma.c
diff --cc drivers/gpu/drm/i915/i915_vma.c
index bc64f773dcdb,caa9b041616b..000000000000
--- a/drivers/gpu/drm/i915/i915_vma.c
+++ b/drivers/gpu/drm/i915/i915_vma.c
@@@ -315,8 -314,13 +315,16 @@@ static void __vma_release(struct dma_fe
  {
  	struct i915_vma_work *vw = container_of(work, typeof(*vw), base);
  
- 	if (vw->pinned)
+ 	if (vw->pinned) {
  		__i915_gem_object_unpin_pages(vw->pinned);
++<<<<<<< HEAD
++=======
+ 		i915_gem_object_put(vw->pinned);
+ 	}
+ 
+ 	i915_vm_free_pt_stash(vw->vm, &vw->stash);
+ 	i915_vm_put(vw->vm);
++>>>>>>> bc73e5d33048 (drm/i915: Hold onto an explicit ref to i915_vma_work.pinned)
  }
  
  static const struct dma_fence_work_ops bind_ops = {
@@@ -430,12 -433,10 +438,12 @@@ int i915_vma_bind(struct i915_vma *vma
  
  		if (vma->obj) {
  			__i915_gem_object_pin_pages(vma->obj);
- 			work->pinned = vma->obj;
+ 			work->pinned = i915_gem_object_get(vma->obj);
  		}
  	} else {
 -		vma->ops->bind_vma(vma->vm, NULL, vma, cache_level, bind_flags);
 +		ret = vma->ops->bind_vma(vma->vm, vma, cache_level, bind_flags);
 +		if (ret)
 +			return ret;
  	}
  
  	atomic_or(bind_flags, &vma->flags);
* Unmerged path drivers/gpu/drm/i915/i915_vma.c
