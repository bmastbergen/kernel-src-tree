ethtool: fix the check logic of at least one channel for RX/TX

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-301.1.el8
commit-author Yinjun Zhang <yinjun.zhang@corigine.com>
commit a4fc088ad4ff4a99d01978aa41065132b574b4b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-301.1.el8/a4fc088a.failed

The command "ethtool -L <intf> combined 0" may clean the RX/TX channel
count and skip the error path, since the attrs
tb[ETHTOOL_A_CHANNELS_RX_COUNT] and tb[ETHTOOL_A_CHANNELS_TX_COUNT]
are NULL in this case when recent ethtool is used.

Tested using ethtool v5.10.

Fixes: 7be92514b99c ("ethtool: check if there is at least one channel for TX/RX in the core")
	Signed-off-by: Yinjun Zhang <yinjun.zhang@corigine.com>
	Signed-off-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: Louis Peens <louis.peens@netronome.com>
Link: https://lore.kernel.org/r/20210225125102.23989-1-simon.horman@netronome.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit a4fc088ad4ff4a99d01978aa41065132b574b4b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ethtool/channels.c
diff --cc net/ethtool/channels.c
index ab8f27845c59,6a070dc8e4b0..000000000000
--- a/net/ethtool/channels.c
+++ b/net/ethtool/channels.c
@@@ -132,17 -115,12 +132,21 @@@ int ethnl_set_channels(struct sk_buff *
  	bool mod = false, mod_combined = false;
  	struct ethtool_channels channels = {};
  	struct ethnl_req_info req_info = {};
++<<<<<<< HEAD
 +	const struct nlattr *err_attr;
++=======
+ 	struct nlattr **tb = info->attrs;
+ 	u32 err_attr, max_rx_in_use = 0;
++>>>>>>> a4fc088ad4ff (ethtool: fix the check logic of at least one channel for RX/TX)
  	const struct ethtool_ops *ops;
  	struct net_device *dev;
- 	u32 max_rx_in_use = 0;
  	int ret;
  
 +	ret = nlmsg_parse(info->nlhdr, GENL_HDRLEN, tb,
 +			  ETHTOOL_A_CHANNELS_MAX, channels_set_policy,
 +			  info->extack);
 +	if (ret < 0)
 +		return ret;
  	ret = ethnl_parse_header_dev_get(&req_info,
  					 tb[ETHTOOL_A_CHANNELS_HEADER],
  					 genl_info_net(info), info->extack,
* Unmerged path net/ethtool/channels.c
