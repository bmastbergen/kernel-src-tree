gfs2: simplify gfs2_block_map

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-301.1.el8
commit-author Bob Peterson <rpeterso@redhat.com>
commit a6645745d45da5b3dd3ff616a3e44f7651eda9f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-301.1.el8/a6645745.failed

Function gfs2_block_map had a lot of redundancy between its create and
no_create paths. This patch simplifies the code to eliminate the redundancy.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit a6645745d45da5b3dd3ff616a3e44f7651eda9f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/bmap.c
diff --cc fs/gfs2/bmap.c
index 5e3da9484f69,62d9081d1e26..000000000000
--- a/fs/gfs2/bmap.c
+++ b/fs/gfs2/bmap.c
@@@ -1284,15 -1300,10 +1285,22 @@@ int gfs2_block_map(struct inode *inode
  	clear_buffer_boundary(bh_map);
  	trace_gfs2_bmap(ip, bh_map, lblock, create, 1);
  
++<<<<<<< HEAD
 +	if (create) {
 +		ret = gfs2_iomap_get(inode, pos, length, IOMAP_WRITE, &iomap, &mp);
 +		if (!ret && iomap.type == IOMAP_HOLE)
 +			ret = gfs2_iomap_alloc(inode, &iomap, IOMAP_WRITE, &mp);
 +		release_metapath(&mp);
 +	} else {
 +		ret = gfs2_iomap_get(inode, pos, length, 0, &iomap, &mp);
 +		release_metapath(&mp);
 +	}
++=======
+ 	ret = gfs2_iomap_get(inode, pos, length, flags, &iomap, &mp);
+ 	if (create && !ret && iomap.type == IOMAP_HOLE)
+ 		ret = gfs2_iomap_alloc(inode, &iomap, &mp);
+ 	release_metapath(&mp);
++>>>>>>> a6645745d45d (gfs2: simplify gfs2_block_map)
  	if (ret)
  		goto out;
  
* Unmerged path fs/gfs2/bmap.c
