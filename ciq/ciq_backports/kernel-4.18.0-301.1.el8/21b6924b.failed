gfs2: rename gfs2_write_full_page to gfs2_write_jdata_page, remove parm

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-301.1.el8
commit-author Bob Peterson <rpeterso@redhat.com>
commit 21b6924bb70e77c83d508b0d188d88f5e403f1f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-301.1.el8/21b6924b.failed

Since the function is only used for writing jdata pages, this patch
simply renames function gfs2_write_full_page to a more appropriate
name: gfs2_write_jdata_page. This makes the code easier to understand.

The function was only called in one place, which passed in a pointer to
function gfs2_get_block_noalloc. The function doesn't need to be
passed in. Therefore, this also eliminates the unnecessary parameter
to increase efficiency.

I also took the liberty of cleaning up the function comments.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 21b6924bb70e77c83d508b0d188d88f5e403f1f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/aops.c
diff --cc fs/gfs2/aops.c
index d147c78098ec,287d160ccf7a..000000000000
--- a/fs/gfs2/aops.c
+++ b/fs/gfs2/aops.c
@@@ -121,28 -107,15 +121,36 @@@ out
  }
  
  /**
++<<<<<<< HEAD
 + * gfs2_writepage - Write page for writeback mappings
 + * @page: The page
 + * @wbc: The writeback control
 + *
 + */
 +
 +static int gfs2_writepage(struct page *page, struct writeback_control *wbc)
 +{
 +	int ret;
 +
 +	ret = gfs2_writepage_common(page, wbc);
 +	if (ret <= 0)
 +		return ret;
 +
 +	return nobh_writepage(page, gfs2_get_block_noalloc, wbc);
 +}
 +
 +/* This is the same as calling block_write_full_page, but it also
++=======
+  * gfs2_write_jdata_page - gfs2 jdata-specific version of block_write_full_page
+  * @page: The page to write
+  * @wbc: The writeback control
+  *
+  * This is the same as calling block_write_full_page, but it also
++>>>>>>> 21b6924bb70e (gfs2: rename gfs2_write_full_page to gfs2_write_jdata_page, remove parm)
   * writes pages outside of i_size
   */
- static int gfs2_write_full_page(struct page *page, get_block_t *get_block,
- 				struct writeback_control *wbc)
+ static int gfs2_write_jdata_page(struct page *page,
+ 				 struct writeback_control *wbc)
  {
  	struct inode * const inode = page->mapping->host;
  	loff_t i_size = i_size_read(inode);
* Unmerged path fs/gfs2/aops.c
