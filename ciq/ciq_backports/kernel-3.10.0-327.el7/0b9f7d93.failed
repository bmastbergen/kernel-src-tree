ACPI / i915: ignore firmware requests for backlight change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [acpi] i915: ignore firmware requests for backlight change (Benjamin Tissoires) [1218354]
Rebuild_FUZZ: 93.58%
commit-author Aaron Lu <aaron.lu@intel.com>
commit 0b9f7d93ca6109048a4eb06332b666b6e29df4fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0b9f7d93.failed

Some Thinkpad laptops' firmware will initiate a backlight level change
request through operation region on the events of AC plug/unplug, but
since we are not using firmware's interface to do the backlight setting
on these affected laptops, we do not want the firmware to use some
arbitrary value from its ASL variable to set the backlight level on
AC plug/unplug either.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=76491
Link: https://bugzilla.kernel.org/show_bug.cgi?id=77091
Reported-and-tested-by: Igor Gnatenko <i.gnatenko.brain@gmail.com>
Reported-and-tested-by: Anton Gubarkov <anton.gubarkov@gmail.com>
	Signed-off-by: Aaron Lu <aaron.lu@intel.com>
	Acked-by: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 0b9f7d93ca6109048a4eb06332b666b6e29df4fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/video.c
diff --cc drivers/acpi/video.c
index e28ad28032c6,5bb1278e9324..000000000000
--- a/drivers/acpi/video.c
+++ b/drivers/acpi/video.c
@@@ -227,6 -233,23 +227,26 @@@ static int acpi_video_get_next_level(st
  static int acpi_video_switch_brightness(struct acpi_video_device *device,
  					 int event);
  
++<<<<<<< HEAD
++=======
+ static bool acpi_video_use_native_backlight(void)
+ {
+ 	if (use_native_backlight_param != -1)
+ 		return use_native_backlight_param;
+ 	else
+ 		return use_native_backlight_dmi;
+ }
+ 
+ bool acpi_video_verify_backlight_support(void)
+ {
+ 	if (acpi_osi_is_win8() && acpi_video_use_native_backlight() &&
+ 	    backlight_device_registered(BACKLIGHT_RAW))
+ 		return false;
+ 	return acpi_video_backlight_support();
+ }
+ EXPORT_SYMBOL_GPL(acpi_video_verify_backlight_support);
+ 
++>>>>>>> 0b9f7d93ca61 (ACPI / i915: ignore firmware requests for backlight change)
  /* backlight device sysfs support */
  static int acpi_video_get_brightness(struct backlight_device *bd)
  {
* Unmerged path drivers/acpi/video.c
diff --git a/drivers/gpu/drm/i915/intel_opregion.c b/drivers/gpu/drm/i915/intel_opregion.c
index f5801a36d392..4a89941c4efc 100644
--- a/drivers/gpu/drm/i915/intel_opregion.c
+++ b/drivers/gpu/drm/i915/intel_opregion.c
@@ -410,6 +410,15 @@ static u32 asle_set_backlight(struct drm_device *dev, u32 bclp)
 
 	DRM_DEBUG_DRIVER("bclp = 0x%08x\n", bclp);
 
+	/*
+	 * If the acpi_video interface is not supposed to be used, don't
+	 * bother processing backlight level change requests from firmware.
+	 */
+	if (!acpi_video_verify_backlight_support()) {
+		DRM_DEBUG_KMS("opregion backlight request ignored\n");
+		return 0;
+	}
+
 	if (!(bclp & ASLE_BCLP_VALID))
 		return ASLC_BACKLIGHT_FAILED;
 
diff --git a/include/acpi/video.h b/include/acpi/video.h
index ea4c7bbded4d..843ef1adfbfa 100644
--- a/include/acpi/video.h
+++ b/include/acpi/video.h
@@ -22,6 +22,7 @@ extern void acpi_video_unregister(void);
 extern void acpi_video_unregister_backlight(void);
 extern int acpi_video_get_edid(struct acpi_device *device, int type,
 			       int device_id, void **edid);
+extern bool acpi_video_verify_backlight_support(void);
 #else
 static inline int acpi_video_register(void) { return 0; }
 static inline void acpi_video_unregister(void) { return; }
@@ -31,6 +32,7 @@ static inline int acpi_video_get_edid(struct acpi_device *device, int type,
 {
 	return -ENODEV;
 }
+static inline bool acpi_video_verify_backlight_support(void) { return false; }
 #endif
 
 #endif
