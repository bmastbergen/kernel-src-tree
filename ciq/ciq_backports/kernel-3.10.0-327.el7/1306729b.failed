sunrpc: eliminate RPC_TRACEPOINTS

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jeff Layton <jlayton@primarydata.com>
commit 1306729b0d4f4a0bd0d098711ed3d938dc5a1a28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1306729b.failed

It's always set to the same value as CONFIG_TRACEPOINTS, so we can just
use that instead.

	Signed-off-by: Jeff Layton <jlayton@primarydata.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 1306729b0d4f4a0bd0d098711ed3d938dc5a1a28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/sunrpc/debug.h
#	include/linux/sunrpc/sched.h
#	net/sunrpc/sched.c
diff --cc include/linux/sunrpc/debug.h
index 9385bd74c860,43f38ee9668c..000000000000
--- a/include/linux/sunrpc/debug.h
+++ b/include/linux/sunrpc/debug.h
@@@ -10,18 -10,6 +10,21 @@@
  
  #include <uapi/linux/sunrpc/debug.h>
  
++<<<<<<< HEAD
 +
 +/*
 + * Enable RPC debugging/profiling.
 + */
 +#ifdef CONFIG_SUNRPC_DEBUG
 +#define  RPC_DEBUG
 +#endif
 +#ifdef CONFIG_TRACEPOINTS
 +#define RPC_TRACEPOINTS
 +#endif
 +/* #define  RPC_PROFILE */
 +
++=======
++>>>>>>> 1306729b0d4f (sunrpc: eliminate RPC_TRACEPOINTS)
  /*
   * Debugging macros etc
   */
diff --cc include/linux/sunrpc/sched.h
index 3a847de83fab,5f1e6bd4c316..000000000000
--- a/include/linux/sunrpc/sched.h
+++ b/include/linux/sunrpc/sched.h
@@@ -79,7 -79,7 +79,11 @@@ struct rpc_task 
  	unsigned short		tk_flags;	/* misc flags */
  	unsigned short		tk_timeouts;	/* maj timeouts */
  
++<<<<<<< HEAD
 +#if defined(RPC_DEBUG) || defined(RPC_TRACEPOINTS)
++=======
+ #if IS_ENABLED(CONFIG_SUNRPC_DEBUG) || IS_ENABLED(CONFIG_TRACEPOINTS)
++>>>>>>> 1306729b0d4f (sunrpc: eliminate RPC_TRACEPOINTS)
  	unsigned short		tk_pid;		/* debugging aid */
  #endif
  	unsigned char		tk_priority : 2,/* Task priority */
@@@ -187,7 -187,7 +191,11 @@@ struct rpc_wait_queue 
  	unsigned char		nr;			/* # tasks remaining for cookie */
  	unsigned short		qlen;			/* total # tasks waiting in queue */
  	struct rpc_timer	timer_list;
++<<<<<<< HEAD
 +#if defined(RPC_DEBUG) || defined(RPC_TRACEPOINTS)
++=======
+ #if IS_ENABLED(CONFIG_SUNRPC_DEBUG) || IS_ENABLED(CONFIG_TRACEPOINTS)
++>>>>>>> 1306729b0d4f (sunrpc: eliminate RPC_TRACEPOINTS)
  	const char *		name;
  #endif
  };
@@@ -251,7 -251,7 +259,11 @@@ static inline int rpc_wait_for_completi
  	return __rpc_wait_for_completion_task(task, NULL);
  }
  
++<<<<<<< HEAD
 +#if defined(RPC_DEBUG) || defined (RPC_TRACEPOINTS)
++=======
+ #if IS_ENABLED(CONFIG_SUNRPC_DEBUG) || IS_ENABLED(CONFIG_TRACEPOINTS)
++>>>>>>> 1306729b0d4f (sunrpc: eliminate RPC_TRACEPOINTS)
  static inline const char * rpc_qname(const struct rpc_wait_queue *q)
  {
  	return ((q && q->name) ? q->name : "unknown");
diff --cc net/sunrpc/sched.c
index c0365c14b858,d20f2329eea3..000000000000
--- a/net/sunrpc/sched.c
+++ b/net/sunrpc/sched.c
@@@ -258,7 -258,7 +258,11 @@@ static int rpc_wait_bit_killable(void *
  	return 0;
  }
  
++<<<<<<< HEAD
 +#if defined(RPC_DEBUG) || defined(RPC_TRACEPOINTS)
++=======
+ #if IS_ENABLED(CONFIG_SUNRPC_DEBUG) || IS_ENABLED(CONFIG_TRACEPOINTS)
++>>>>>>> 1306729b0d4f (sunrpc: eliminate RPC_TRACEPOINTS)
  static void rpc_task_set_debuginfo(struct rpc_task *task)
  {
  	static atomic_t rpc_pid;
* Unmerged path include/linux/sunrpc/debug.h
* Unmerged path include/linux/sunrpc/sched.h
* Unmerged path net/sunrpc/sched.c
