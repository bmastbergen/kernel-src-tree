perf build: Add probe objects building

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] build: Add probe objects building (Jiri Olsa) [1222189]
Rebuild_FUZZ: 92.96%
commit-author Jiri Olsa <jolsa@kernel.org>
commit 709e679193c6e0e39222cd1fd51008225208cbc7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/709e6791.failed

Move the probe objects building under build framework to be included in
the libperf build object.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Tested-by: Will Deacon <will.deacon@arm.com>
	Cc: Alexis Berlemont <alexis.berlemont@gmail.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-p39iitiu2ltgmtbn48bsh7nz@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 709e679193c6e0e39222cd1fd51008225208cbc7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Makefile.perf
#	tools/perf/util/Build
diff --cc tools/perf/Makefile.perf
index 9842afffa808,0997e2b33c77..000000000000
--- a/tools/perf/Makefile.perf
+++ b/tools/perf/Makefile.perf
@@@ -336,84 -327,6 +336,87 @@@ LIB_H += util/data.
  LIB_H += util/kvm-stat.h
  LIB_H += util/thread-stack.h
  
++<<<<<<< HEAD
 +LIB_OBJS += $(OUTPUT)util/abspath.o
 +LIB_OBJS += $(OUTPUT)util/alias.o
 +LIB_OBJS += $(OUTPUT)util/annotate.o
 +LIB_OBJS += $(OUTPUT)util/build-id.o
 +LIB_OBJS += $(OUTPUT)util/config.o
 +LIB_OBJS += $(OUTPUT)util/ctype.o
 +LIB_OBJS += $(OUTPUT)util/db-export.o
 +LIB_OBJS += $(OUTPUT)util/pmu.o
 +LIB_OBJS += $(OUTPUT)util/environment.o
 +LIB_OBJS += $(OUTPUT)util/event.o
 +LIB_OBJS += $(OUTPUT)util/evlist.o
 +LIB_OBJS += $(OUTPUT)util/evsel.o
 +LIB_OBJS += $(OUTPUT)util/exec_cmd.o
 +LIB_OBJS += $(OUTPUT)util/find_next_bit.o
 +LIB_OBJS += $(OUTPUT)util/help.o
 +LIB_OBJS += $(OUTPUT)util/kallsyms.o
 +LIB_OBJS += $(OUTPUT)util/levenshtein.o
 +LIB_OBJS += $(OUTPUT)util/parse-options.o
 +LIB_OBJS += $(OUTPUT)util/parse-events.o
 +LIB_OBJS += $(OUTPUT)util/path.o
 +LIB_OBJS += $(OUTPUT)util/rbtree.o
 +LIB_OBJS += $(OUTPUT)util/bitmap.o
 +LIB_OBJS += $(OUTPUT)util/hweight.o
 +LIB_OBJS += $(OUTPUT)util/run-command.o
 +LIB_OBJS += $(OUTPUT)util/quote.o
 +LIB_OBJS += $(OUTPUT)util/strbuf.o
 +LIB_OBJS += $(OUTPUT)util/string.o
 +LIB_OBJS += $(OUTPUT)util/strlist.o
 +LIB_OBJS += $(OUTPUT)util/strfilter.o
 +LIB_OBJS += $(OUTPUT)util/top.o
 +LIB_OBJS += $(OUTPUT)util/usage.o
 +LIB_OBJS += $(OUTPUT)util/wrapper.o
 +LIB_OBJS += $(OUTPUT)util/sigchain.o
 +LIB_OBJS += $(OUTPUT)util/dso.o
 +LIB_OBJS += $(OUTPUT)util/symbol.o
 +LIB_OBJS += $(OUTPUT)util/symbol-elf.o
 +LIB_OBJS += $(OUTPUT)util/color.o
 +LIB_OBJS += $(OUTPUT)util/pager.o
 +LIB_OBJS += $(OUTPUT)util/header.o
 +LIB_OBJS += $(OUTPUT)util/callchain.o
 +LIB_OBJS += $(OUTPUT)util/values.o
 +LIB_OBJS += $(OUTPUT)util/debug.o
 +LIB_OBJS += $(OUTPUT)util/machine.o
 +LIB_OBJS += $(OUTPUT)util/map.o
 +LIB_OBJS += $(OUTPUT)util/pstack.o
 +LIB_OBJS += $(OUTPUT)util/session.o
 +LIB_OBJS += $(OUTPUT)util/comm.o
 +LIB_OBJS += $(OUTPUT)util/thread.o
 +LIB_OBJS += $(OUTPUT)util/thread_map.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-parse.o
 +LIB_OBJS += $(OUTPUT)util/parse-events-flex.o
 +LIB_OBJS += $(OUTPUT)util/parse-events-bison.o
 +LIB_OBJS += $(OUTPUT)util/pmu-flex.o
 +LIB_OBJS += $(OUTPUT)util/pmu-bison.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-read.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-info.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-scripting.o
 +LIB_OBJS += $(OUTPUT)util/trace-event.o
 +LIB_OBJS += $(OUTPUT)util/svghelper.o
 +LIB_OBJS += $(OUTPUT)util/sort.o
 +LIB_OBJS += $(OUTPUT)util/hist.o
 +LIB_OBJS += $(OUTPUT)util/probe-event.o
 +LIB_OBJS += $(OUTPUT)util/util.o
 +LIB_OBJS += $(OUTPUT)util/xyarray.o
 +LIB_OBJS += $(OUTPUT)util/cpumap.o
 +LIB_OBJS += $(OUTPUT)util/cgroup.o
 +LIB_OBJS += $(OUTPUT)util/target.o
 +LIB_OBJS += $(OUTPUT)util/rblist.o
 +LIB_OBJS += $(OUTPUT)util/intlist.o
 +LIB_OBJS += $(OUTPUT)util/vdso.o
 +LIB_OBJS += $(OUTPUT)util/stat.o
 +LIB_OBJS += $(OUTPUT)util/record.o
 +LIB_OBJS += $(OUTPUT)util/srcline.o
 +LIB_OBJS += $(OUTPUT)util/data.o
 +LIB_OBJS += $(OUTPUT)util/tsc.o
 +LIB_OBJS += $(OUTPUT)util/cloexec.o
 +LIB_OBJS += $(OUTPUT)util/thread-stack.o
 +
++=======
++>>>>>>> 709e679193c6 (perf build: Add probe objects building)
  LIB_OBJS += $(OUTPUT)ui/setup.o
  LIB_OBJS += $(OUTPUT)ui/helpline.o
  LIB_OBJS += $(OUTPUT)ui/progress.o
@@@ -421,10 -334,6 +424,13 @@@ LIB_OBJS += $(OUTPUT)ui/util.
  LIB_OBJS += $(OUTPUT)ui/hist.o
  LIB_OBJS += $(OUTPUT)ui/stdio/hist.o
  
++<<<<<<< HEAD
 +LIB_OBJS += $(OUTPUT)arch/common.o
 +
 +BUILTIN_OBJS += $(OUTPUT)builtin-probe.o
 +
++=======
++>>>>>>> 709e679193c6 (perf build: Add probe objects building)
  PERFLIBS = $(LIB_FILE) $(LIBAPIKFS) $(LIBTRACEEVENT)
  
  # We choose to avoid "if .. else if .. else .. endif endif"
* Unmerged path tools/perf/util/Build
diff --git a/tools/perf/Build b/tools/perf/Build
index 80a944b929da..60ff67f85571 100644
--- a/tools/perf/Build
+++ b/tools/perf/Build
@@ -20,6 +20,7 @@ perf-y += builtin-inject.o
 perf-y += builtin-mem.o
 
 perf-$(CONFIG_AUDIT) += builtin-trace.o
+perf-$(CONFIG_LIBELF) += builtin-probe.o
 
 perf-y += bench/
 perf-y += tests/
* Unmerged path tools/perf/Makefile.perf
diff --git a/tools/perf/config/Makefile b/tools/perf/config/Makefile
index deb0c596fc15..37a7607250ae 100644
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@ -369,6 +369,7 @@ endif # NO_LIBELF
 ifndef NO_LIBELF
   CFLAGS += -DHAVE_LIBELF_SUPPORT
   EXTLIBS += -lelf
+  $(call detected,CONFIG_LIBELF)
 
   ifeq ($(feature-libelf-mmap), 1)
     CFLAGS += -DHAVE_LIBELF_MMAP_SUPPORT
* Unmerged path tools/perf/util/Build
