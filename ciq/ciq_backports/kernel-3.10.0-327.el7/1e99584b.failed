ipip,gre,vti,sit: implement ndo_get_iflink

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] ipip, gre, vti, sit: implement ndo_get_iflink (Jiri Benc) [1210260]
Rebuild_FUZZ: 96.55%
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit 1e99584b911cb6f3d2a681e2532d8dc3f9339c9c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1e99584b.failed

Don't use dev->iflink anymore.

CC: Steffen Klassert <steffen.klassert@secunet.com>
	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1e99584b911cb6f3d2a681e2532d8dc3f9339c9c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/ip_tunnels.h
#	net/ipv4/ip_tunnel.c
#	net/ipv6/sit.c
diff --cc include/net/ip_tunnels.h
index 8d95b01ba42b,d8214cb88bbc..000000000000
--- a/include/net/ip_tunnels.h
+++ b/include/net/ip_tunnels.h
@@@ -111,6 -141,8 +111,11 @@@ struct ip_tunnel_net 
  int ip_tunnel_init(struct net_device *dev);
  void ip_tunnel_uninit(struct net_device *dev);
  void  ip_tunnel_dellink(struct net_device *dev, struct list_head *head);
++<<<<<<< HEAD
++=======
+ struct net *ip_tunnel_get_link_net(const struct net_device *dev);
+ int ip_tunnel_get_iflink(const struct net_device *dev);
++>>>>>>> 1e99584b911c (ipip,gre,vti,sit: implement ndo_get_iflink)
  int ip_tunnel_init_net(struct net *net, int ip_tnl_net_id,
  		       struct rtnl_link_ops *ops, char *devname);
  
diff --cc net/ipv4/ip_tunnel.c
index 1129aec53c2c,4bb7252110a6..000000000000
--- a/net/ipv4/ip_tunnel.c
+++ b/net/ipv4/ip_tunnel.c
@@@ -849,6 -971,22 +848,25 @@@ void ip_tunnel_dellink(struct net_devic
  }
  EXPORT_SYMBOL_GPL(ip_tunnel_dellink);
  
++<<<<<<< HEAD
++=======
+ struct net *ip_tunnel_get_link_net(const struct net_device *dev)
+ {
+ 	struct ip_tunnel *tunnel = netdev_priv(dev);
+ 
+ 	return tunnel->net;
+ }
+ EXPORT_SYMBOL(ip_tunnel_get_link_net);
+ 
+ int ip_tunnel_get_iflink(const struct net_device *dev)
+ {
+ 	struct ip_tunnel *tunnel = netdev_priv(dev);
+ 
+ 	return tunnel->parms.link;
+ }
+ EXPORT_SYMBOL(ip_tunnel_get_iflink);
+ 
++>>>>>>> 1e99584b911c (ipip,gre,vti,sit: implement ndo_get_iflink)
  int ip_tunnel_init_net(struct net *net, int ip_tnl_net_id,
  				  struct rtnl_link_ops *ops, char *devname)
  {
diff --cc net/ipv6/sit.c
index 0bf8881a52b0,6cf2026a9cea..000000000000
--- a/net/ipv6/sit.c
+++ b/net/ipv6/sit.c
@@@ -1261,15 -1355,17 +1261,19 @@@ static void ipip6_dev_free(struct net_d
  
  static void ipip6_tunnel_setup(struct net_device *dev)
  {
 -	struct ip_tunnel *tunnel = netdev_priv(dev);
 -	int t_hlen = tunnel->hlen + sizeof(struct iphdr);
 -
  	dev->netdev_ops		= &ipip6_netdev_ops;
 -	dev->destructor		= ipip6_dev_free;
 +	dev->destructor 	= ipip6_dev_free;
  
  	dev->type		= ARPHRD_SIT;
 -	dev->hard_header_len	= LL_MAX_HEADER + t_hlen;
 -	dev->mtu		= ETH_DATA_LEN - t_hlen;
 +	dev->hard_header_len 	= LL_MAX_HEADER + sizeof(struct iphdr);
 +	dev->mtu		= ETH_DATA_LEN - sizeof(struct iphdr);
  	dev->flags		= IFF_NOARP;
++<<<<<<< HEAD
 +	dev->priv_flags	       &= ~IFF_XMIT_DST_RELEASE;
 +	dev->iflink		= 0;
++=======
+ 	netif_keep_dst(dev);
++>>>>>>> 1e99584b911c (ipip,gre,vti,sit: implement ndo_get_iflink)
  	dev->addr_len		= 4;
  	dev->features		|= NETIF_F_LLTX;
  	dev->features		|= SIT_FEATURES;
* Unmerged path include/net/ip_tunnels.h
diff --git a/net/ipv4/ip_gre.c b/net/ipv4/ip_gre.c
index d066319d6040..58a27c98a5e0 100644
--- a/net/ipv4/ip_gre.c
+++ b/net/ipv4/ip_gre.c
@@ -455,6 +455,7 @@ static const struct net_device_ops ipgre_netdev_ops = {
 	.ndo_do_ioctl		= ipgre_tunnel_ioctl,
 	.ndo_change_mtu		= ip_tunnel_change_mtu,
 	.ndo_get_stats64	= ip_tunnel_get_stats64,
+	.ndo_get_iflink		= ip_tunnel_get_iflink,
 };
 
 #define GRE_FEATURES (NETIF_F_SG |		\
@@ -645,6 +646,7 @@ static const struct net_device_ops gre_tap_netdev_ops = {
 	.ndo_validate_addr	= eth_validate_addr,
 	.ndo_change_mtu		= ip_tunnel_change_mtu,
 	.ndo_get_stats64	= ip_tunnel_get_stats64,
+	.ndo_get_iflink		= ip_tunnel_get_iflink,
 };
 
 static void ipgre_tap_setup(struct net_device *dev)
* Unmerged path net/ipv4/ip_tunnel.c
diff --git a/net/ipv4/ip_vti.c b/net/ipv4/ip_vti.c
index b9997c5dcf18..8f1fc635f06d 100644
--- a/net/ipv4/ip_vti.c
+++ b/net/ipv4/ip_vti.c
@@ -341,6 +341,7 @@ static const struct net_device_ops vti_netdev_ops = {
 	.ndo_do_ioctl	= vti_tunnel_ioctl,
 	.ndo_change_mtu	= ip_tunnel_change_mtu,
 	.ndo_get_stats64 = ip_tunnel_get_stats64,
+	.ndo_get_iflink = ip_tunnel_get_iflink,
 };
 
 static void vti_tunnel_setup(struct net_device *dev)
@@ -360,7 +361,6 @@ static int vti_tunnel_init(struct net_device *dev)
 
 	dev->mtu		= ETH_DATA_LEN;
 	dev->flags		= IFF_NOARP;
-	dev->iflink		= 0;
 	dev->addr_len		= 4;
 	dev->features		|= NETIF_F_LLTX;
 	dev->priv_flags		&= ~IFF_XMIT_DST_RELEASE;
diff --git a/net/ipv4/ipip.c b/net/ipv4/ipip.c
index ca79260ee627..d6964d8d1fb4 100644
--- a/net/ipv4/ipip.c
+++ b/net/ipv4/ipip.c
@@ -272,6 +272,7 @@ static const struct net_device_ops ipip_netdev_ops = {
 	.ndo_do_ioctl	= ipip_tunnel_ioctl,
 	.ndo_change_mtu = ip_tunnel_change_mtu,
 	.ndo_get_stats64 = ip_tunnel_get_stats64,
+	.ndo_get_iflink = ip_tunnel_get_iflink,
 };
 
 #define IPIP_FEATURES (NETIF_F_SG |		\
@@ -286,7 +287,6 @@ static void ipip_tunnel_setup(struct net_device *dev)
 
 	dev->type		= ARPHRD_TUNNEL;
 	dev->flags		= IFF_NOARP;
-	dev->iflink		= 0;
 	dev->addr_len		= 4;
 	dev->features		|= NETIF_F_LLTX;
 	dev->priv_flags		&= ~IFF_XMIT_DST_RELEASE;
* Unmerged path net/ipv6/sit.c
