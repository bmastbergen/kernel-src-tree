crypto: add missing crypto module aliases

jira LE-1907
cve CVE-2014-9644
cve CVE-2013-7421
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [crypto] add missing crypto module aliases (Denys Vlasenko) [1190631] {CVE-2013-7421 CVE-2014-9644}
Rebuild_FUZZ: 89.19%
commit-author Mathias Krause <minipli@googlemail.com>
commit 3e14dcf7cb80b34a1f38b55bc96f02d23fdaaaaf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/3e14dcf7.failed

Commit 5d26a105b5a7 ("crypto: prefix module autoloading with "crypto-"")
changed the automatic module loading when requesting crypto algorithms
to prefix all module requests with "crypto-". This requires all crypto
modules to have a crypto specific module alias even if their file name
would otherwise match the requested crypto algorithm.

Even though commit 5d26a105b5a7 added those aliases for a vast amount of
modules, it was missing a few. Add the required MODULE_ALIAS_CRYPTO
annotations to those files to make them get loaded automatically, again.
This fixes, e.g., requesting 'ecb(blowfish-generic)', which used to work
with kernels v3.18 and below.

Also change MODULE_ALIAS() lines to MODULE_ALIAS_CRYPTO(). The former
won't work for crypto modules any more.

Fixes: 5d26a105b5a7 ("crypto: prefix module autoloading with "crypto-"")
	Cc: Kees Cook <keescook@chromium.org>
	Signed-off-by: Mathias Krause <minipli@googlemail.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 3e14dcf7cb80b34a1f38b55bc96f02d23fdaaaaf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/crypto/sha1.c
#	arch/x86/crypto/sha-mb/sha1_mb.c
#	crypto/aes_generic.c
#	crypto/ansi_cprng.c
#	crypto/blowfish_generic.c
#	crypto/camellia_generic.c
#	crypto/cast5_generic.c
#	crypto/cast6_generic.c
#	crypto/crc32c.c
#	crypto/crct10dif_generic.c
#	crypto/des_generic.c
#	crypto/ghash-generic.c
#	crypto/krng.c
#	crypto/salsa20_generic.c
#	crypto/serpent_generic.c
#	crypto/sha1_generic.c
#	crypto/sha256_generic.c
#	crypto/sha512_generic.c
#	crypto/tea.c
#	crypto/tgr192.c
#	crypto/twofish_generic.c
#	crypto/wp512.c
diff --cc arch/powerpc/crypto/sha1.c
index f9e8b9491efc,c154cebc1041..000000000000
--- a/arch/powerpc/crypto/sha1.c
+++ b/arch/powerpc/crypto/sha1.c
@@@ -154,4 -154,5 +154,9 @@@ module_exit(sha1_powerpc_mod_fini)
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("SHA1 Secure Hash Algorithm");
  
++<<<<<<< HEAD
 +MODULE_ALIAS("sha1-powerpc");
++=======
+ MODULE_ALIAS_CRYPTO("sha1");
+ MODULE_ALIAS_CRYPTO("sha1-powerpc");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/aes_generic.c
index 47f2e5c71759,3dd101144a58..000000000000
--- a/crypto/aes_generic.c
+++ b/crypto/aes_generic.c
@@@ -1474,4 -1474,5 +1474,9 @@@ module_exit(aes_fini)
  
  MODULE_DESCRIPTION("Rijndael (AES) Cipher Algorithm");
  MODULE_LICENSE("Dual BSD/GPL");
++<<<<<<< HEAD
 +MODULE_ALIAS("aes");
++=======
+ MODULE_ALIAS_CRYPTO("aes");
+ MODULE_ALIAS_CRYPTO("aes-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/ansi_cprng.c
index 666f1962a160,6f5bebc9bf01..000000000000
--- a/crypto/ansi_cprng.c
+++ b/crypto/ansi_cprng.c
@@@ -476,4 -476,5 +476,9 @@@ module_param(dbg, int, 0)
  MODULE_PARM_DESC(dbg, "Boolean to enable debugging (0/1 == off/on)");
  module_init(prng_mod_init);
  module_exit(prng_mod_fini);
++<<<<<<< HEAD
 +MODULE_ALIAS("stdrng");
++=======
+ MODULE_ALIAS_CRYPTO("stdrng");
+ MODULE_ALIAS_CRYPTO("ansi_cprng");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/blowfish_generic.c
index 8baf5447d35b,87b392a77a93..000000000000
--- a/crypto/blowfish_generic.c
+++ b/crypto/blowfish_generic.c
@@@ -138,4 -138,5 +138,9 @@@ module_exit(blowfish_mod_fini)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("Blowfish Cipher Algorithm");
++<<<<<<< HEAD
 +MODULE_ALIAS("blowfish");
++=======
+ MODULE_ALIAS_CRYPTO("blowfish");
+ MODULE_ALIAS_CRYPTO("blowfish-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/camellia_generic.c
index 75efa2052305,a02286bf319e..000000000000
--- a/crypto/camellia_generic.c
+++ b/crypto/camellia_generic.c
@@@ -1098,4 -1098,5 +1098,9 @@@ module_exit(camellia_fini)
  
  MODULE_DESCRIPTION("Camellia Cipher Algorithm");
  MODULE_LICENSE("GPL");
++<<<<<<< HEAD
 +MODULE_ALIAS("camellia");
++=======
+ MODULE_ALIAS_CRYPTO("camellia");
+ MODULE_ALIAS_CRYPTO("camellia-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/cast5_generic.c
index 5558f630a0eb,df5c72629383..000000000000
--- a/crypto/cast5_generic.c
+++ b/crypto/cast5_generic.c
@@@ -549,4 -549,5 +549,9 @@@ module_exit(cast5_mod_fini)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("Cast5 Cipher Algorithm");
++<<<<<<< HEAD
 +MODULE_ALIAS("cast5");
++=======
+ MODULE_ALIAS_CRYPTO("cast5");
+ MODULE_ALIAS_CRYPTO("cast5-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/cast6_generic.c
index de732528a430,058c8d755d03..000000000000
--- a/crypto/cast6_generic.c
+++ b/crypto/cast6_generic.c
@@@ -291,4 -291,5 +291,9 @@@ module_exit(cast6_mod_fini)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("Cast6 Cipher Algorithm");
++<<<<<<< HEAD
 +MODULE_ALIAS("cast6");
++=======
+ MODULE_ALIAS_CRYPTO("cast6");
+ MODULE_ALIAS_CRYPTO("cast6-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/crc32c.c
index 06f7018c9d95,06f1b60f02b2..000000000000
--- a/crypto/crc32c.c
+++ b/crypto/crc32c.c
@@@ -170,3 -170,6 +170,9 @@@ module_exit(crc32c_mod_fini)
  MODULE_AUTHOR("Clay Haapala <chaapala@cisco.com>");
  MODULE_DESCRIPTION("CRC32c (Castagnoli) calculations wrapper for lib/crc32c");
  MODULE_LICENSE("GPL");
++<<<<<<< HEAD:crypto/crc32c.c
++=======
+ MODULE_ALIAS_CRYPTO("crc32c");
+ MODULE_ALIAS_CRYPTO("crc32c-generic");
+ MODULE_SOFTDEP("pre: crc32c");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases):crypto/crc32c_generic.c
diff --cc crypto/crct10dif_generic.c
index 877e7114ec5c,c1229614c7e3..000000000000
--- a/crypto/crct10dif_generic.c
+++ b/crypto/crct10dif_generic.c
@@@ -124,4 -124,5 +124,9 @@@ module_exit(crct10dif_mod_fini)
  MODULE_AUTHOR("Tim Chen <tim.c.chen@linux.intel.com>");
  MODULE_DESCRIPTION("T10 DIF CRC calculation.");
  MODULE_LICENSE("GPL");
++<<<<<<< HEAD
 +MODULE_ALIAS("crct10dif");
++=======
+ MODULE_ALIAS_CRYPTO("crct10dif");
+ MODULE_ALIAS_CRYPTO("crct10dif-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/des_generic.c
index f6cf63f88468,a71720544d11..000000000000
--- a/crypto/des_generic.c
+++ b/crypto/des_generic.c
@@@ -971,8 -983,6 +971,11 @@@ static struct crypto_alg des_algs[2] = 
  	.cia_decrypt		=	des3_ede_decrypt } }
  } };
  
++<<<<<<< HEAD
 +MODULE_ALIAS("des3_ede");
 +
++=======
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
  static int __init des_generic_mod_init(void)
  {
  	return crypto_register_algs(des_algs, ARRAY_SIZE(des_algs));
diff --cc crypto/ghash-generic.c
index 9d3f0c69a86f,bac70995e064..000000000000
--- a/crypto/ghash-generic.c
+++ b/crypto/ghash-generic.c
@@@ -172,4 -172,5 +172,9 @@@ module_exit(ghash_mod_exit)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("GHASH Message Digest Algorithm");
++<<<<<<< HEAD
 +MODULE_ALIAS("ghash");
++=======
+ MODULE_ALIAS_CRYPTO("ghash");
+ MODULE_ALIAS_CRYPTO("ghash-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/krng.c
index a2d2b72fc135,0224841b6579..000000000000
--- a/crypto/krng.c
+++ b/crypto/krng.c
@@@ -62,4 -62,5 +62,9 @@@ module_exit(krng_mod_fini)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("Kernel Random Number Generator");
++<<<<<<< HEAD
 +MODULE_ALIAS("stdrng");
++=======
+ MODULE_ALIAS_CRYPTO("stdrng");
+ MODULE_ALIAS_CRYPTO("krng");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/salsa20_generic.c
index 9a4770c02284,f550b5d94630..000000000000
--- a/crypto/salsa20_generic.c
+++ b/crypto/salsa20_generic.c
@@@ -248,4 -248,5 +248,9 @@@ module_exit(salsa20_generic_mod_fini)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION ("Salsa20 stream cipher algorithm");
++<<<<<<< HEAD
 +MODULE_ALIAS("salsa20");
++=======
+ MODULE_ALIAS_CRYPTO("salsa20");
+ MODULE_ALIAS_CRYPTO("salsa20-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/serpent_generic.c
index 7ddbd7e88859,94970a794975..000000000000
--- a/crypto/serpent_generic.c
+++ b/crypto/serpent_generic.c
@@@ -665,5 -665,6 +665,11 @@@ module_exit(serpent_mod_fini)
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("Serpent and tnepres (kerneli compatible serpent reversed) Cipher Algorithm");
  MODULE_AUTHOR("Dag Arne Osvik <osvik@ii.uib.no>");
++<<<<<<< HEAD
 +MODULE_ALIAS("tnepres");
 +MODULE_ALIAS("serpent");
++=======
+ MODULE_ALIAS_CRYPTO("tnepres");
+ MODULE_ALIAS_CRYPTO("serpent");
+ MODULE_ALIAS_CRYPTO("serpent-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/sha1_generic.c
index 42794803c480,a3e50c37eb6f..000000000000
--- a/crypto/sha1_generic.c
+++ b/crypto/sha1_generic.c
@@@ -153,4 -153,5 +153,9 @@@ module_exit(sha1_generic_mod_fini)
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("SHA1 Secure Hash Algorithm");
  
++<<<<<<< HEAD
 +MODULE_ALIAS("sha1");
++=======
+ MODULE_ALIAS_CRYPTO("sha1");
+ MODULE_ALIAS_CRYPTO("sha1-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/sha256_generic.c
index 543366779524,b001ff5c2efc..000000000000
--- a/crypto/sha256_generic.c
+++ b/crypto/sha256_generic.c
@@@ -384,5 -384,7 +384,12 @@@ module_exit(sha256_generic_mod_fini)
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("SHA-224 and SHA-256 Secure Hash Algorithm");
  
++<<<<<<< HEAD
 +MODULE_ALIAS("sha224");
 +MODULE_ALIAS("sha256");
++=======
+ MODULE_ALIAS_CRYPTO("sha224");
+ MODULE_ALIAS_CRYPTO("sha224-generic");
+ MODULE_ALIAS_CRYPTO("sha256");
+ MODULE_ALIAS_CRYPTO("sha256-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/sha512_generic.c
index 4c5862095679,1c3c3767e079..000000000000
--- a/crypto/sha512_generic.c
+++ b/crypto/sha512_generic.c
@@@ -285,5 -288,7 +285,12 @@@ module_exit(sha512_generic_mod_fini)
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION("SHA-512 and SHA-384 Secure Hash Algorithms");
  
++<<<<<<< HEAD
 +MODULE_ALIAS("sha384");
 +MODULE_ALIAS("sha512");
++=======
+ MODULE_ALIAS_CRYPTO("sha384");
+ MODULE_ALIAS_CRYPTO("sha384-generic");
+ MODULE_ALIAS_CRYPTO("sha512");
+ MODULE_ALIAS_CRYPTO("sha512-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/tea.c
index 0a572323ee4a,b70b441c7d1e..000000000000
--- a/crypto/tea.c
+++ b/crypto/tea.c
@@@ -270,8 -270,9 +270,14 @@@ static void __exit tea_mod_fini(void
  	crypto_unregister_algs(tea_algs, ARRAY_SIZE(tea_algs));
  }
  
++<<<<<<< HEAD
 +MODULE_ALIAS("xtea");
 +MODULE_ALIAS("xeta");
++=======
+ MODULE_ALIAS_CRYPTO("tea");
+ MODULE_ALIAS_CRYPTO("xtea");
+ MODULE_ALIAS_CRYPTO("xeta");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
  
  module_init(tea_mod_init);
  module_exit(tea_mod_fini);
diff --cc crypto/tgr192.c
index 87403556fd0b,321bc6ff2a9d..000000000000
--- a/crypto/tgr192.c
+++ b/crypto/tgr192.c
@@@ -676,8 -676,9 +676,14 @@@ static void __exit tgr192_mod_fini(void
  	crypto_unregister_shashes(tgr_algs, ARRAY_SIZE(tgr_algs));
  }
  
++<<<<<<< HEAD
 +MODULE_ALIAS("tgr160");
 +MODULE_ALIAS("tgr128");
++=======
+ MODULE_ALIAS_CRYPTO("tgr192");
+ MODULE_ALIAS_CRYPTO("tgr160");
+ MODULE_ALIAS_CRYPTO("tgr128");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
  
  module_init(tgr192_mod_init);
  module_exit(tgr192_mod_fini);
diff --cc crypto/twofish_generic.c
index 2d5000552d0f,ebf7a3efb572..000000000000
--- a/crypto/twofish_generic.c
+++ b/crypto/twofish_generic.c
@@@ -211,4 -211,5 +211,9 @@@ module_exit(twofish_mod_fini)
  
  MODULE_LICENSE("GPL");
  MODULE_DESCRIPTION ("Twofish Cipher Algorithm");
++<<<<<<< HEAD
 +MODULE_ALIAS("twofish");
++=======
+ MODULE_ALIAS_CRYPTO("twofish");
+ MODULE_ALIAS_CRYPTO("twofish-generic");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
diff --cc crypto/wp512.c
index 180f1d6e03f4,7ee5a043a988..000000000000
--- a/crypto/wp512.c
+++ b/crypto/wp512.c
@@@ -1167,8 -1167,9 +1167,14 @@@ static void __exit wp512_mod_fini(void
  	crypto_unregister_shashes(wp_algs, ARRAY_SIZE(wp_algs));
  }
  
++<<<<<<< HEAD
 +MODULE_ALIAS("wp384");
 +MODULE_ALIAS("wp256");
++=======
+ MODULE_ALIAS_CRYPTO("wp512");
+ MODULE_ALIAS_CRYPTO("wp384");
+ MODULE_ALIAS_CRYPTO("wp256");
++>>>>>>> 3e14dcf7cb80 (crypto: add missing crypto module aliases)
  
  module_init(wp512_mod_init);
  module_exit(wp512_mod_fini);
* Unmerged path arch/x86/crypto/sha-mb/sha1_mb.c
* Unmerged path arch/powerpc/crypto/sha1.c
* Unmerged path arch/x86/crypto/sha-mb/sha1_mb.c
* Unmerged path crypto/aes_generic.c
* Unmerged path crypto/ansi_cprng.c
* Unmerged path crypto/blowfish_generic.c
* Unmerged path crypto/camellia_generic.c
* Unmerged path crypto/cast5_generic.c
* Unmerged path crypto/cast6_generic.c
* Unmerged path crypto/crc32c.c
* Unmerged path crypto/crct10dif_generic.c
* Unmerged path crypto/des_generic.c
* Unmerged path crypto/ghash-generic.c
* Unmerged path crypto/krng.c
* Unmerged path crypto/salsa20_generic.c
* Unmerged path crypto/serpent_generic.c
* Unmerged path crypto/sha1_generic.c
* Unmerged path crypto/sha256_generic.c
* Unmerged path crypto/sha512_generic.c
* Unmerged path crypto/tea.c
* Unmerged path crypto/tgr192.c
* Unmerged path crypto/twofish_generic.c
* Unmerged path crypto/wp512.c
