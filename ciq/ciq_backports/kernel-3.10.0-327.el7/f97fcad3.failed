md: remove need for mddev_lock() in md_seq_show()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] remove need for mddev_lock() in md_seq_show() (Jes Sorensen) [1150149 1173510 1194720]
Rebuild_FUZZ: 95.74%
commit-author NeilBrown <neilb@suse.de>
commit f97fcad38f2ecf2e34b6f0ab93f74f2978dbe008
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f97fcad3.failed

The only access in md_seq_show that could suffer from races
not protected by ->lock is walking the rdev list.
This can receive sufficient protection from 'rcu'.

So use rdev_for_each_rcu() and get rid of mddev_lock().

Now reading /proc/mdstat will never block in md_seq_show.

	Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit f97fcad38f2ecf2e34b6f0ab93f74f2978dbe008)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 0227d221c67b,eb0c3b576d7d..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -7082,9 -6950,7 +7082,13 @@@ static int md_seq_show(struct seq_file 
  		return 0;
  	}
  
++<<<<<<< HEAD
 +	if (mddev_lock(mddev) < 0)
 +		return -EINTR;
 +
++=======
+ 	spin_lock(&mddev->lock);
++>>>>>>> f97fcad38f2e (md: remove need for mddev_lock() in md_seq_show())
  	if (mddev->pers || mddev->raid_disks || !list_empty(&mddev->disks)) {
  		seq_printf(seq, "%s : %sactive", mdname(mddev),
  						mddev->pers ? "" : "in");
@@@ -7155,8 -7023,8 +7161,13 @@@
  
  		seq_printf(seq, "\n");
  	}
++<<<<<<< HEAD
 +	mddev_unlock(mddev);
 +	
++=======
+ 	spin_unlock(&mddev->lock);
+ 
++>>>>>>> f97fcad38f2e (md: remove need for mddev_lock() in md_seq_show())
  	return 0;
  }
  
* Unmerged path drivers/md/md.c
