rtnl: add link netns id to interface messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit d37512a277dfb2cef8a578e25a3246f61399a55a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d37512a2.failed

This patch adds a new attribute (IFLA_LINK_NETNSID) which contains the 'link'
netns id when this netns is different from the netns where the interface
stands (for example for x-net interfaces like ip tunnels).
With this attribute, it's possible to interpret correctly all advertised
information (like IFLA_LINK, etc.).

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d37512a277dfb2cef8a578e25a3246f61399a55a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/rtnetlink.h
#	include/uapi/linux/if_link.h
#	net/core/rtnetlink.c
diff --cc include/net/rtnetlink.h
index 9ff6beec92ec,6c6d5393fc34..000000000000
--- a/include/net/rtnetlink.h
+++ b/include/net/rtnetlink.h
@@@ -83,36 -81,27 +84,53 @@@ struct rtnl_link_ops 
  	unsigned int		(*get_num_tx_queues)(void);
  	unsigned int		(*get_num_rx_queues)(void);
  
++<<<<<<< HEAD
 +	/* RHEL SPECIFIC
 +	 *
 +	 * The following padding has been inserted before ABI freeze to
 +	 * allow extending the structure while preserve ABI. Feel free
 +	 * to replace reserved slots with required structure field
 +	 * additions of your backport.
 +	 */
 +	RH_KABI_RESERVE_P(1)
 +	RH_KABI_RESERVE_P(2)
 +	RH_KABI_RESERVE_P(3)
 +	RH_KABI_RESERVE_P(4)
 +	RH_KABI_RESERVE_P(5)
 +	RH_KABI_RESERVE_P(6)
 +	RH_KABI_RESERVE_P(7)
 +	RH_KABI_RESERVE_P(8)
 +	RH_KABI_RESERVE_P(9)
 +	RH_KABI_RESERVE_P(10)
 +	RH_KABI_RESERVE_P(11)
 +	RH_KABI_RESERVE_P(12)
 +	RH_KABI_RESERVE_P(13)
 +	RH_KABI_RESERVE_P(14)
 +	RH_KABI_RESERVE_P(15)
 +	RH_KABI_RESERVE_P(16)
++=======
+ 	int			slave_maxtype;
+ 	const struct nla_policy	*slave_policy;
+ 	int			(*slave_validate)(struct nlattr *tb[],
+ 						  struct nlattr *data[]);
+ 	int			(*slave_changelink)(struct net_device *dev,
+ 						    struct net_device *slave_dev,
+ 						    struct nlattr *tb[],
+ 						    struct nlattr *data[]);
+ 	size_t			(*get_slave_size)(const struct net_device *dev,
+ 						  const struct net_device *slave_dev);
+ 	int			(*fill_slave_info)(struct sk_buff *skb,
+ 						   const struct net_device *dev,
+ 						   const struct net_device *slave_dev);
+ 	struct net		*(*get_link_net)(const struct net_device *dev);
++>>>>>>> d37512a277df (rtnl: add link netns id to interface messages)
  };
  
 -int __rtnl_link_register(struct rtnl_link_ops *ops);
 -void __rtnl_link_unregister(struct rtnl_link_ops *ops);
 +extern int	__rtnl_link_register(struct rtnl_link_ops *ops);
 +extern void	__rtnl_link_unregister(struct rtnl_link_ops *ops);
  
 -int rtnl_link_register(struct rtnl_link_ops *ops);
 -void rtnl_link_unregister(struct rtnl_link_ops *ops);
 +extern int	rtnl_link_register(struct rtnl_link_ops *ops);
 +extern void	rtnl_link_unregister(struct rtnl_link_ops *ops);
  
  /**
   * 	struct rtnl_af_ops - rtnetlink address family operations
diff --cc include/uapi/linux/if_link.h
index 4efe6bcb6e67,0deee3eeddbf..000000000000
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@@ -144,6 -144,9 +144,12 @@@ enum 
  	IFLA_NUM_RX_QUEUES,
  	IFLA_CARRIER,
  	IFLA_PHYS_PORT_ID,
++<<<<<<< HEAD
++=======
+ 	IFLA_CARRIER_CHANGES,
+ 	IFLA_PHYS_SWITCH_ID,
+ 	IFLA_LINK_NETNSID,
++>>>>>>> d37512a277df (rtnl: add link netns id to interface messages)
  	__IFLA_MAX
  };
  
diff --cc net/core/rtnetlink.c
index 187818c8949a,bd6370f0cb31..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -801,6 -874,8 +801,11 @@@ static noinline size_t if_nlmsg_size(co
  	       + nla_total_size(4) /* IFLA_NUM_RX_QUEUES */
  	       + nla_total_size(1) /* IFLA_OPERSTATE */
  	       + nla_total_size(1) /* IFLA_LINKMODE */
++<<<<<<< HEAD
++=======
+ 	       + nla_total_size(4) /* IFLA_CARRIER_CHANGES */
+ 	       + nla_total_size(4) /* IFLA_LINK_NETNSID */
++>>>>>>> d37512a277df (rtnl: add link netns id to interface messages)
  	       + nla_total_size(ext_filter_mask
  			        & RTEXT_FILTER_VF ? 4 : 0) /* IFLA_NUM_VF */
  	       + rtnl_vfinfo_size(dev, ext_filter_mask) /* IFLA_VFINFO_LIST */
* Unmerged path include/net/rtnetlink.h
* Unmerged path include/uapi/linux/if_link.h
* Unmerged path net/core/rtnetlink.c
