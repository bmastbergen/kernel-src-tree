cxgb4: Add debugfs facility to inject FL starvation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit 5b377d114f2b9ceed97ed84ef32d2afededfcc31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/5b377d11.failed

Add debugfs entry to inject Freelist starvation, used only for debugging
purpose.

	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5b377d114f2b9ceed97ed84ef32d2afededfcc31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
#	drivers/net/ethernet/chelsio/cxgb4/sge.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index dddf17cba9bf,63c30f325929..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@@ -581,18 -641,16 +581,27 @@@ struct sge 
  	u32 fl_align;               /* response queue message alignment */
  	u32 fl_starve_thres;        /* Free List starvation threshold */
  
 -	struct sge_idma_monitor_state idma_monitor;
 +	/* State variables for detecting an SGE Ingress DMA hang */
 +	unsigned int idma_1s_thresh;/* SGE same State Counter 1s threshold */
 +	unsigned int idma_stalled[2];/* SGE synthesized stalled timers in HZ */
 +	unsigned int idma_state[2]; /* SGE IDMA Hang detect state */
 +	unsigned int idma_qid[2];   /* SGE IDMA Hung Ingress Queue ID */
 +
  	unsigned int egr_start;
 -	unsigned int egr_sz;
  	unsigned int ingr_start;
++<<<<<<< HEAD
 +	void *egr_map[MAX_EGRQ];    /* qid->queue egress queue map */
 +	struct sge_rspq *ingr_map[MAX_INGQ]; /* qid->queue ingress queue map */
 +	DECLARE_BITMAP(starving_fl, MAX_EGRQ);
 +	DECLARE_BITMAP(txq_maperr, MAX_EGRQ);
++=======
+ 	unsigned int ingr_sz;
+ 	void **egr_map;    /* qid->queue egress queue map */
+ 	struct sge_rspq **ingr_map; /* qid->queue ingress queue map */
+ 	unsigned long *starving_fl;
+ 	unsigned long *txq_maperr;
+ 	unsigned long *blocked_fl;
++>>>>>>> 5b377d114f2b (cxgb4: Add debugfs facility to inject FL starvation)
  	struct timer_list rx_timer; /* refills starving FLs */
  	struct timer_list tx_timer; /* checks Tx queues */
  };
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 2a3e5627b439,79ef047ee75c..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -5754,6 -3815,68 +5754,71 @@@ static int adap_init0(struct adapter *a
  	adap->tids.nftids = val[4] - val[3] + 1;
  	adap->sge.ingr_start = val[5];
  
++<<<<<<< HEAD
++=======
+ 	/* qids (ingress/egress) returned from firmware can be anywhere
+ 	 * in the range from EQ(IQFLINT)_START to EQ(IQFLINT)_END.
+ 	 * Hence driver needs to allocate memory for this range to
+ 	 * store the queue info. Get the highest IQFLINT/EQ index returned
+ 	 * in FW_EQ_*_CMD.alloc command.
+ 	 */
+ 	params[0] = FW_PARAM_PFVF(EQ_END);
+ 	params[1] = FW_PARAM_PFVF(IQFLINT_END);
+ 	ret = t4_query_params(adap, adap->mbox, adap->fn, 0, 2, params, val);
+ 	if (ret < 0)
+ 		goto bye;
+ 	adap->sge.egr_sz = val[0] - adap->sge.egr_start + 1;
+ 	adap->sge.ingr_sz = val[1] - adap->sge.ingr_start + 1;
+ 
+ 	adap->sge.egr_map = kcalloc(adap->sge.egr_sz,
+ 				    sizeof(*adap->sge.egr_map), GFP_KERNEL);
+ 	if (!adap->sge.egr_map) {
+ 		ret = -ENOMEM;
+ 		goto bye;
+ 	}
+ 
+ 	adap->sge.ingr_map = kcalloc(adap->sge.ingr_sz,
+ 				     sizeof(*adap->sge.ingr_map), GFP_KERNEL);
+ 	if (!adap->sge.ingr_map) {
+ 		ret = -ENOMEM;
+ 		goto bye;
+ 	}
+ 
+ 	/* Allocate the memory for the vaious egress queue bitmaps
+ 	 * ie starving_fl, txq_maperr and blocked_fl.
+ 	 */
+ 	adap->sge.starving_fl =	kcalloc(BITS_TO_LONGS(adap->sge.egr_sz),
+ 					sizeof(long), GFP_KERNEL);
+ 	if (!adap->sge.starving_fl) {
+ 		ret = -ENOMEM;
+ 		goto bye;
+ 	}
+ 
+ 	adap->sge.txq_maperr = kcalloc(BITS_TO_LONGS(adap->sge.egr_sz),
+ 				       sizeof(long), GFP_KERNEL);
+ 	if (!adap->sge.txq_maperr) {
+ 		ret = -ENOMEM;
+ 		goto bye;
+ 	}
+ 
+ #ifdef CONFIG_DEBUG_FS
+ 	adap->sge.blocked_fl = kcalloc(BITS_TO_LONGS(adap->sge.egr_sz),
+ 				       sizeof(long), GFP_KERNEL);
+ 	if (!adap->sge.blocked_fl) {
+ 		ret = -ENOMEM;
+ 		goto bye;
+ 	}
+ #endif
+ 
+ 	params[0] = FW_PARAM_PFVF(CLIP_START);
+ 	params[1] = FW_PARAM_PFVF(CLIP_END);
+ 	ret = t4_query_params(adap, adap->mbox, adap->fn, 0, 2, params, val);
+ 	if (ret < 0)
+ 		goto bye;
+ 	adap->clipt_start = val[0];
+ 	adap->clipt_end = val[1];
+ 
++>>>>>>> 5b377d114f2b (cxgb4: Add debugfs facility to inject FL starvation)
  	/* query params related to active filter region */
  	params[0] = FW_PARAM_PFVF(ACTIVE_FILTER_START);
  	params[1] = FW_PARAM_PFVF(ACTIVE_FILTER_END);
@@@ -5953,6 -4077,13 +6018,16 @@@
  	 * happened to HW/FW, stop issuing commands.
  	 */
  bye:
++<<<<<<< HEAD
++=======
+ 	kfree(adap->sge.egr_map);
+ 	kfree(adap->sge.ingr_map);
+ 	kfree(adap->sge.starving_fl);
+ 	kfree(adap->sge.txq_maperr);
+ #ifdef CONFIG_DEBUG_FS
+ 	kfree(adap->sge.blocked_fl);
+ #endif
++>>>>>>> 5b377d114f2b (cxgb4: Add debugfs facility to inject FL starvation)
  	if (ret != -ETIMEDOUT && ret != -EIO)
  		t4_fw_bye(adap, adap->mbox);
  	return ret;
@@@ -6337,6 -4523,13 +6412,16 @@@ static void free_some_resources(struct 
  
  	t4_free_mem(adapter->l2t);
  	t4_free_mem(adapter->tids.tid_tab);
++<<<<<<< HEAD
++=======
+ 	kfree(adapter->sge.egr_map);
+ 	kfree(adapter->sge.ingr_map);
+ 	kfree(adapter->sge.starving_fl);
+ 	kfree(adapter->sge.txq_maperr);
+ #ifdef CONFIG_DEBUG_FS
+ 	kfree(adapter->sge.blocked_fl);
+ #endif
++>>>>>>> 5b377d114f2b (cxgb4: Add debugfs facility to inject FL starvation)
  	disable_msi(adapter);
  
  	for_each_port(adapter, i)
diff --cc drivers/net/ethernet/chelsio/cxgb4/sge.c
index 9797215ec30f,19886d5506a4..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/sge.c
@@@ -581,8 -586,15 +581,18 @@@ static unsigned int refill_fl(struct ad
  	unsigned int cred = q->avail;
  	__be64 *d = &q->desc[q->pidx];
  	struct rx_sw_desc *sd = &q->sdesc[q->pidx];
 -	int node;
  
++<<<<<<< HEAD
 +	gfp |= __GFP_NOWARN | __GFP_COLD;
++=======
+ #ifdef CONFIG_DEBUG_FS
+ 	if (test_bit(q->cntxt_id - adap->sge.egr_start, adap->sge.blocked_fl))
+ 		goto out;
+ #endif
+ 
+ 	gfp |= __GFP_NOWARN;
+ 	node = dev_to_node(adap->pdev_dev);
++>>>>>>> 5b377d114f2b (cxgb4: Add debugfs facility to inject FL starvation)
  
  	if (s->fl_pg_order == 0)
  		goto alloc_small_pages;
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/sge.c
