ALSA: line6: Refer to manufacturer as "Line 6"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Refer to manufacturer as "Line 6" (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 93.02%
commit-author Chris Rorvick <chris@rorvick.com>
commit c6fffce92e1a8cda8c1b552f5a24295839f3f93a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c6fffce9.failed

The correct spelling includes the space.  Fix this in strings and
comments that refer to the manufacturer.

	Signed-off-by: Chris Rorvick <chris@rorvick.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit c6fffce92e1a8cda8c1b552f5a24295839f3f93a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/midi.c
#	drivers/staging/line6/pod.c
#	drivers/staging/line6/toneport.c
#	drivers/staging/line6/variax.c
#	sound/usb/line6/Kconfig
#	sound/usb/line6/driver.c
#	sound/usb/line6/podhd.c
#	sound/usb/line6/usbdefs.h
diff --cc drivers/staging/line6/midi.c
index e3f9a53dbd96,64e242b9ce82..000000000000
--- a/drivers/staging/line6/midi.c
+++ b/drivers/staging/line6/midi.c
@@@ -234,8 -226,7 +234,12 @@@ static int snd_line6_new_midi(struct sn
  	struct snd_rawmidi *rmidi;
  	int err;
  
++<<<<<<< HEAD:drivers/staging/line6/midi.c
 +	err = snd_rawmidi_new(line6midi->line6->card, "Line6 MIDI", 0, 1, 1,
 +			      &rmidi);
++=======
+ 	err = snd_rawmidi_new(line6->card, "Line 6 MIDI", 0, 1, 1, rmidi_ret);
++>>>>>>> c6fffce92e1a (ALSA: line6: Refer to manufacturer as "Line 6"):sound/usb/line6/midi.c
  	if (err < 0)
  		return err;
  
diff --cc drivers/staging/line6/pod.c
index 711d2c74641b,7766f5349324..000000000000
--- a/drivers/staging/line6/pod.c
+++ b/drivers/staging/line6/pod.c
@@@ -17,7 -21,83 +17,87 @@@
  #include "capture.h"
  #include "driver.h"
  #include "playback.h"
++<<<<<<< HEAD:drivers/staging/line6/pod.c
 +#include "pod.h"
++=======
+ #include "usbdefs.h"
+ 
+ /*
+ 	Locate name in binary program dump
+ */
+ #define	POD_NAME_OFFSET 0
+ #define	POD_NAME_LENGTH 16
+ 
+ /*
+ 	Other constants
+ */
+ #define POD_CONTROL_SIZE 0x80
+ #define POD_BUFSIZE_DUMPREQ 7
+ #define POD_STARTUP_DELAY 1000
+ 
+ /*
+ 	Stages of POD startup procedure
+ */
+ enum {
+ 	POD_STARTUP_INIT = 1,
+ 	POD_STARTUP_VERSIONREQ,
+ 	POD_STARTUP_WORKQUEUE,
+ 	POD_STARTUP_SETUP,
+ 	POD_STARTUP_LAST = POD_STARTUP_SETUP - 1
+ };
+ 
+ enum {
+ 	LINE6_BASSPODXT,
+ 	LINE6_BASSPODXTLIVE,
+ 	LINE6_BASSPODXTPRO,
+ 	LINE6_POCKETPOD,
+ 	LINE6_PODXT,
+ 	LINE6_PODXTLIVE_POD,
+ 	LINE6_PODXTPRO,
+ };
+ 
+ struct usb_line6_pod {
+ 	/**
+ 		Generic Line 6 USB data.
+ 	*/
+ 	struct usb_line6 line6;
+ 
+ 	/**
+ 		Instrument monitor level.
+ 	*/
+ 	int monitor_level;
+ 
+ 	/**
+ 		Timer for device initializaton.
+ 	*/
+ 	struct timer_list startup_timer;
+ 
+ 	/**
+ 		Work handler for device initializaton.
+ 	*/
+ 	struct work_struct startup_work;
+ 
+ 	/**
+ 		Current progress in startup procedure.
+ 	*/
+ 	int startup_progress;
+ 
+ 	/**
+ 		Serial number of device.
+ 	*/
+ 	int serial_number;
+ 
+ 	/**
+ 		Firmware version (x 100).
+ 	*/
+ 	int firmware_version;
+ 
+ 	/**
+ 		Device ID.
+ 	*/
+ 	int device_id;
+ };
++>>>>>>> c6fffce92e1a (ALSA: line6: Refer to manufacturer as "Line 6"):sound/usb/line6/pod.c
  
  #define POD_SYSEX_CODE 3
  #define POD_BYTES_PER_FRAME 6	/* 24bit audio (stereo) */
@@@ -427,24 -605,27 +507,44 @@@ void line6_pod_disconnect(struct usb_in
  {
  	struct usb_line6_pod *pod;
  
 -	pod = kzalloc(sizeof(*pod), GFP_KERNEL);
 -	if (!pod)
 -		return -ENODEV;
 -	return line6_probe(interface, &pod->line6,
 -			   &pod_properties_table[id->driver_info],
 -			   pod_init);
 +	if (interface == NULL)
 +		return;
 +	pod = usb_get_intfdata(interface);
 +
 +	if (pod != NULL) {
 +		struct snd_line6_pcm *line6pcm = pod->line6.line6pcm;
 +		struct device *dev = &interface->dev;
 +
 +		if (line6pcm != NULL)
 +			line6_pcm_disconnect(line6pcm);
 +
 +		if (dev != NULL) {
 +			/* remove sysfs entries: */
 +			device_remove_file(dev, &dev_attr_device_id);
 +			device_remove_file(dev, &dev_attr_firmware_version);
 +			device_remove_file(dev, &dev_attr_serial_number);
 +		}
 +	}
 +
 +	pod_destruct(interface);
  }
++<<<<<<< HEAD:drivers/staging/line6/pod.c
++=======
+ 
+ static struct usb_driver pod_driver = {
+ 	.name = KBUILD_MODNAME,
+ 	.probe = pod_probe,
+ 	.disconnect = line6_disconnect,
+ #ifdef CONFIG_PM
+ 	.suspend = line6_suspend,
+ 	.resume = line6_resume,
+ 	.reset_resume = line6_resume,
+ #endif
+ 	.id_table = pod_id_table,
+ };
+ 
+ module_usb_driver(pod_driver);
+ 
+ MODULE_DESCRIPTION("Line 6 POD USB driver");
+ MODULE_LICENSE("GPL");
++>>>>>>> c6fffce92e1a (ALSA: line6: Refer to manufacturer as "Line 6"):sound/usb/line6/pod.c
diff --cc drivers/staging/line6/toneport.c
index 4f8fc09cde1e,77ad98c1a948..000000000000
--- a/drivers/staging/line6/toneport.c
+++ b/drivers/staging/line6/toneport.c
@@@ -17,7 -20,49 +17,53 @@@
  #include "capture.h"
  #include "driver.h"
  #include "playback.h"
++<<<<<<< HEAD:drivers/staging/line6/toneport.c
 +#include "toneport.h"
++=======
+ #include "usbdefs.h"
+ 
+ enum line6_device_type {
+ 	LINE6_GUITARPORT,
+ 	LINE6_PODSTUDIO_GX,
+ 	LINE6_PODSTUDIO_UX1,
+ 	LINE6_PODSTUDIO_UX2,
+ 	LINE6_TONEPORT_GX,
+ 	LINE6_TONEPORT_UX1,
+ 	LINE6_TONEPORT_UX2,
+ };
+ 
+ struct usb_line6_toneport {
+ 	/**
+ 		Generic Line 6 USB data.
+ 	*/
+ 	struct usb_line6 line6;
+ 
+ 	/**
+ 		Source selector.
+ 	*/
+ 	int source;
+ 
+ 	/**
+ 		Serial number of device.
+ 	*/
+ 	int serial_number;
+ 
+ 	/**
+ 		Firmware version (x 100).
+ 	*/
+ 	int firmware_version;
+ 
+ 	/**
+ 		 Timer for delayed PCM startup.
+ 	*/
+ 	struct timer_list timer;
+ 
+ 	/**
+ 		 Device type.
+ 	*/
+ 	enum line6_device_type type;
+ };
++>>>>>>> c6fffce92e1a (ALSA: line6: Refer to manufacturer as "Line 6"):sound/usb/line6/toneport.c
  
  static int toneport_send_cmd(struct usb_device *usbdev, int cmd1, int cmd2);
  
diff --cc drivers/staging/line6/variax.c
index bd0f694fa8d8,5e4da466da50..000000000000
--- a/drivers/staging/line6/variax.c
+++ b/drivers/staging/line6/variax.c
@@@ -10,10 -10,64 +10,64 @@@
   */
  
  #include <linux/slab.h>
 -#include <linux/spinlock.h>
 -#include <linux/usb.h>
 -#include <linux/wait.h>
 -#include <linux/module.h>
 -#include <sound/core.h>
  
 +#include "audio.h"
  #include "driver.h"
++<<<<<<< HEAD:drivers/staging/line6/variax.c
 +#include "variax.h"
++=======
+ #include "usbdefs.h"
+ 
+ #define VARIAX_STARTUP_DELAY1 1000
+ #define VARIAX_STARTUP_DELAY3 100
+ #define VARIAX_STARTUP_DELAY4 100
+ 
+ /*
+ 	Stages of Variax startup procedure
+ */
+ enum {
+ 	VARIAX_STARTUP_INIT = 1,
+ 	VARIAX_STARTUP_VERSIONREQ,
+ 	VARIAX_STARTUP_WAIT,
+ 	VARIAX_STARTUP_ACTIVATE,
+ 	VARIAX_STARTUP_WORKQUEUE,
+ 	VARIAX_STARTUP_SETUP,
+ 	VARIAX_STARTUP_LAST = VARIAX_STARTUP_SETUP - 1
+ };
+ 
+ enum {
+ 	LINE6_PODXTLIVE_VARIAX,
+ 	LINE6_VARIAX
+ };
+ 
+ struct usb_line6_variax {
+ 	/**
+ 		Generic Line 6 USB data.
+ 	*/
+ 	struct usb_line6 line6;
+ 
+ 	/**
+ 		Buffer for activation code.
+ 	*/
+ 	unsigned char *buffer_activate;
+ 
+ 	/**
+ 		Handler for device initializaton.
+ 	*/
+ 	struct work_struct startup_work;
+ 
+ 	/**
+ 		Timers for device initializaton.
+ 	*/
+ 	struct timer_list startup_timer1;
+ 	struct timer_list startup_timer2;
+ 
+ 	/**
+ 		Current progress in startup procedure.
+ 	*/
+ 	int startup_progress;
+ };
++>>>>>>> c6fffce92e1a (ALSA: line6: Refer to manufacturer as "Line 6"):sound/usb/line6/variax.c
  
  #define VARIAX_OFFSET_ACTIVATE 7
  
* Unmerged path sound/usb/line6/Kconfig
* Unmerged path sound/usb/line6/driver.c
* Unmerged path sound/usb/line6/podhd.c
* Unmerged path sound/usb/line6/usbdefs.h
diff --git a/drivers/staging/line6/capture.c b/drivers/staging/line6/capture.c
index 93bd813139f8..7f3cbd8cba86 100644
--- a/drivers/staging/line6/capture.c
+++ b/drivers/staging/line6/capture.c
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
diff --git a/drivers/staging/line6/capture.h b/drivers/staging/line6/capture.h
index 4157bcb598a9..ff172fb5bad9 100644
--- a/drivers/staging/line6/capture.h
+++ b/drivers/staging/line6/capture.h
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
diff --git a/drivers/staging/line6/driver.h b/drivers/staging/line6/driver.h
index 4fd9dad58be7..df04f8b62c76 100644
--- a/drivers/staging/line6/driver.h
+++ b/drivers/staging/line6/driver.h
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
@@ -25,7 +25,7 @@
 #define LINE6_MESSAGE_MAXLEN 256
 
 /*
-	Line6 MIDI control commands
+	Line 6 MIDI control commands
 */
 #define LINE6_PARAM_CHANGE   0xb0
 #define LINE6_PROGRAM_CHANGE 0xc0
@@ -68,7 +68,7 @@ static const int SYSEX_DATA_OFS = sizeof(line6_midi_id) + 3;
 static const int SYSEX_EXTRA_SIZE = sizeof(line6_midi_id) + 4;
 
 /**
-	 Common properties of Line6 devices.
+	 Common properties of Line 6 devices.
 */
 struct line6_properties {
 	/**
@@ -96,7 +96,7 @@ struct line6_properties {
 };
 
 /**
-	 Common data shared by all Line6 devices.
+	 Common data shared by all Line 6 devices.
 	 Corresponds to a pair of USB endpoints.
 */
 struct usb_line6 {
@@ -136,18 +136,18 @@ struct usb_line6 {
 	struct device *ifcdev;
 
 	/**
-		 Line6 sound card data structure.
+		 Line 6 sound card data structure.
 		 Each device has at least MIDI or PCM.
 	*/
 	struct snd_card *card;
 
 	/**
-		 Line6 PCM device data structure.
+		 Line 6 PCM device data structure.
 	*/
 	struct snd_line6_pcm *line6pcm;
 
 	/**
-		 Line6 MIDI device data structure.
+		 Line 6 MIDI device data structure.
 	*/
 	struct snd_line6_midi *line6midi;
 
* Unmerged path drivers/staging/line6/midi.c
diff --git a/drivers/staging/line6/midi.h b/drivers/staging/line6/midi.h
index 78f903fb4d41..68e7d3a19139 100644
--- a/drivers/staging/line6/midi.h
+++ b/drivers/staging/line6/midi.h
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
@@ -20,7 +20,7 @@
 
 struct snd_line6_midi {
 	/**
-		 Pointer back to the Line6 driver data structure.
+		 Pointer back to the Line 6 driver data structure.
 	*/
 	struct usb_line6 *line6;
 
diff --git a/drivers/staging/line6/midibuf.c b/drivers/staging/line6/midibuf.c
index f0adb7baa603..4cab13caf78e 100644
--- a/drivers/staging/line6/midibuf.c
+++ b/drivers/staging/line6/midibuf.c
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
@@ -23,7 +23,7 @@ static int midibuf_message_length(unsigned char code)
 	} else {
 		/*
 		   Note that according to the MIDI specification 0xf2 is
-		   the "Song Position Pointer", but this is used by Line6
+		   the "Song Position Pointer", but this is used by Line 6
 		   to send sysex messages to the host.
 		 */
 		static const int length[] = { -1, 2, -1, 2, -1, -1, 1, 1, 1, 1,
diff --git a/drivers/staging/line6/midibuf.h b/drivers/staging/line6/midibuf.h
index 707482b940e4..18eed7565e05 100644
--- a/drivers/staging/line6/midibuf.h
+++ b/drivers/staging/line6/midibuf.h
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
diff --git a/drivers/staging/line6/pcm.c b/drivers/staging/line6/pcm.c
index abb9d8483566..2525b8f97dd7 100644
--- a/drivers/staging/line6/pcm.c
+++ b/drivers/staging/line6/pcm.c
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
diff --git a/drivers/staging/line6/pcm.h b/drivers/staging/line6/pcm.h
index 6aa0d46a2890..354f378f5e0f 100644
--- a/drivers/staging/line6/pcm.h
+++ b/drivers/staging/line6/pcm.h
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
@@ -26,7 +26,7 @@
 
 /*
 	number of USB frames per URB
-	The Line6 Windows driver always transmits two frames per packet, but
+	The Line 6 Windows driver always transmits two frames per packet, but
 	the Linux driver performs significantly better (i.e., lower latency)
 	with only one frame per packet.
 */
@@ -40,7 +40,7 @@
 #endif
 
 /*
-	Get substream from Line6 PCM data structure
+	Get substream from Line 6 PCM data structure
 */
 #define get_substream(line6pcm, stream)	\
 		(line6pcm->pcm->streams[stream].substream)
@@ -48,7 +48,7 @@
 /*
 	PCM mode bits.
 
-	There are several features of the Line6 USB driver which require PCM
+	There are several features of the Line 6 USB driver which require PCM
 	data to be exchanged with the device:
 	*) PCM playback and capture via ALSA
 	*) software monitoring (for devices without hardware monitoring)
@@ -181,7 +181,7 @@ struct line6_pcm_properties {
 
 struct snd_line6_pcm {
 	/**
-		 Pointer back to the Line6 driver data structure.
+		 Pointer back to the Line 6 driver data structure.
 	*/
 	struct usb_line6 *line6;
 
diff --git a/drivers/staging/line6/playback.c b/drivers/staging/line6/playback.c
index feb51c49e316..b681b36f090a 100644
--- a/drivers/staging/line6/playback.c
+++ b/drivers/staging/line6/playback.c
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
diff --git a/drivers/staging/line6/playback.h b/drivers/staging/line6/playback.h
index 743bd6f74c57..0dfca5e42490 100644
--- a/drivers/staging/line6/playback.h
+++ b/drivers/staging/line6/playback.h
@@ -1,5 +1,5 @@
 /*
- * Line6 Linux USB driver - 0.9.1beta
+ * Line 6 Linux USB driver - 0.9.1beta
  *
  * Copyright (C) 2004-2010 Markus Grabner (grabner@icg.tugraz.at)
  *
* Unmerged path drivers/staging/line6/pod.c
* Unmerged path drivers/staging/line6/toneport.c
* Unmerged path drivers/staging/line6/variax.c
* Unmerged path sound/usb/line6/Kconfig
* Unmerged path sound/usb/line6/driver.c
* Unmerged path sound/usb/line6/podhd.c
* Unmerged path sound/usb/line6/usbdefs.h
