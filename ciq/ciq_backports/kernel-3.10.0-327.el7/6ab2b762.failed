perf build: Disable libbabeltrace check by default

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] build: Disable libbabeltrace check by default (Jiri Olsa) [1222189]
Rebuild_FUZZ: 94.74%
commit-author Jiri Olsa <jolsa@redhat.com>
commit 6ab2b762befd192b90704c5c7898f5abf8ebb387
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6ab2b762.failed

Disabling libbabeltrace check by default and replacing the
NO_LIBBABELTRACE make variable with LIBBABELTRACE.

Users wanting the libbabeltrace feature need to build via:

  $ make LIBBABELTRACE=1

The reason for this is that the libababeltrace interface we use (version
1.3) hasn't been packaged/released yet, thus the failing feature check
only slows down build and confuses other (non CTF) developers.

Requested-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Acked-by: Ingo Molnar <mingo@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jeremie Galarneau <jgalar@efficios.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Cc: Tom Zanussi <tzanussi@gmail.com>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/20150328103030.GA8431@krava.redhat.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 6ab2b762befd192b90704c5c7898f5abf8ebb387)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
diff --cc tools/perf/config/Makefile
index 49715ac798cd,59a98c643240..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -670,14 -598,15 +670,26 @@@ els
    NO_PERF_READ_VDSOX32 := 1
  endif
  
++<<<<<<< HEAD
 +ifndef NO_LIBBABELTRACE
 +  ifeq ($(feature-libbabeltrace), 0)
 +    msg := $(warning No libbabeltrace found, disables 'perf data' CTF format support, please install libbabeltrace-dev[el]/libbabeltrace-ctf-dev);
 +    NO_LIBBABELTRACE := 1
 +  else
 +    CFLAGS += -DHAVE_LIBBABELTRACE_SUPPORT $(LIBBABELTRACE_CFLAGS)
 +    LDFLAGS += $(LIBBABELTRACE_LDFLAGS)
 +    EXTLIBS += -lbabeltrace-ctf
++=======
+ ifdef LIBBABELTRACE
+   $(call feature_check,libbabeltrace)
+   ifeq ($(feature-libbabeltrace), 1)
+     CFLAGS += -DHAVE_LIBBABELTRACE_SUPPORT $(LIBBABELTRACE_CFLAGS)
+     LDFLAGS += $(LIBBABELTRACE_LDFLAGS)
+     EXTLIBS += -lbabeltrace-ctf
+     $(call detected,CONFIG_LIBBABELTRACE)
+   else
+     msg := $(warning No libbabeltrace found, disables 'perf data' CTF format support, please install libbabeltrace-dev[el]/libbabeltrace-ctf-dev);
++>>>>>>> 6ab2b762befd (perf build: Disable libbabeltrace check by default)
    endif
  endif
  
diff --git a/tools/perf/Makefile.perf b/tools/perf/Makefile.perf
index 0066e52a44e4..232f53942d9b 100644
--- a/tools/perf/Makefile.perf
+++ b/tools/perf/Makefile.perf
@@ -69,7 +69,7 @@ include config/utilities.mak
 #
 # Define NO_ZLIB if you do not want to support compressed kernel modules
 #
-# Define NO_LIBBABELTRACE if you do not want libbabeltrace support
+# Define LIBBABELTRACE if you DO want libbabeltrace support
 # for CTF data format.
 
 ifeq ($(srctree),)
* Unmerged path tools/perf/config/Makefile
