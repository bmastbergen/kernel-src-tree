perf probe ppc64le: Fixup function entry if using kallsyms lookup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] probe: ppc64le: Fixup function entry if using kallsyms lookup (Gustavo Duarte) [1223850]
Rebuild_FUZZ: 95.24%
commit-author Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
commit 7b6ff0bdbf4f7f429c2116cca92a6d171217449e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7b6ff0bd.failed

On powerpc ABIv2, if no debug-info is found and we use kallsyms, we need
to fixup the function entry to point to the local entry point. Use
offset of 8 since current toolchains always generate 2 instructions (8
bytes).

	Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
	Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
	Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Cc: linuxppc-dev@lists.ozlabs.org
Link: http://lkml.kernel.org/r/92253021e77a104b23b615c8c23bf9501dfe60bf.1430217967.git.naveen.n.rao@linux.vnet.ibm.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 7b6ff0bdbf4f7f429c2116cca92a6d171217449e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/arch/powerpc/util/sym-handling.c
#	tools/perf/util/probe-event.h
diff --cc tools/perf/util/probe-event.h
index d6b783447be9,180f142cc170..000000000000
--- a/tools/perf/util/probe-event.h
+++ b/tools/perf/util/probe-event.h
@@@ -135,6 -135,9 +135,12 @@@ extern int show_available_vars(struct p
  			       struct strfilter *filter, bool externs);
  extern int show_available_funcs(const char *module, struct strfilter *filter,
  				bool user);
++<<<<<<< HEAD
++=======
+ bool arch__prefers_symtab(void);
+ void arch__fix_tev_from_maps(struct perf_probe_event *pev,
+ 			     struct probe_trace_event *tev, struct map *map);
++>>>>>>> 7b6ff0bdbf4f (perf probe ppc64le: Fixup function entry if using kallsyms lookup)
  
  /* Maximum index number of event-name postfix */
  #define MAX_EVENT_INDEX	1024
* Unmerged path tools/perf/arch/powerpc/util/sym-handling.c
* Unmerged path tools/perf/arch/powerpc/util/sym-handling.c
diff --git a/tools/perf/util/probe-event.c b/tools/perf/util/probe-event.c
index 16b35a0e74d9..451a8366ce42 100644
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@ -2469,6 +2469,10 @@ static int find_probe_functions(struct map *map, char *name)
 #define strdup_or_goto(str, label)	\
 	({ char *__p = strdup(str); if (!__p) goto label; __p; })
 
+void __weak arch__fix_tev_from_maps(struct perf_probe_event *pev __maybe_unused,
+				struct probe_trace_event *tev __maybe_unused,
+				struct map *map __maybe_unused) { }
+
 /*
  * Find probe function addresses from map.
  * Return an error or the number of found probe_trace_event
@@ -2575,6 +2579,7 @@ static int find_probe_trace_events_from_map(struct perf_probe_event *pev,
 					strdup_or_goto(pev->args[i].type,
 							nomem_out);
 		}
+		arch__fix_tev_from_maps(pev, tev, map);
 	}
 
 out:
* Unmerged path tools/perf/util/probe-event.h
