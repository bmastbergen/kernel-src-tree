powerpc/powernv/ioda: Clean up IOMMU group registration

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [powerpc] powernv/ioda: Clean up IOMMU group registration (David Gibson) [1213665]
Rebuild_FUZZ: 92.16%
commit-author Alexey Kardashevskiy <aik@ozlabs.ru>
commit c5773822c000bafd462ad02db1d61459acef0d52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c5773822.failed

The existing code has 3 calls to iommu_register_group() and
all 3 branches actually cover all possible cases.

This replaces 3 calls with one and moves the registration earlier;
the latter will make more sense when we add TCE table sharing.

	Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
	Reviewed-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit c5773822c000bafd462ad02db1d61459acef0d52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/pci-ioda.c
diff --cc arch/powerpc/platforms/powernv/pci-ioda.c
index 109e90d84e34,2b829eb07f87..000000000000
--- a/arch/powerpc/platforms/powernv/pci-ioda.c
+++ b/arch/powerpc/platforms/powernv/pci-ioda.c
@@@ -724,7 -1822,6 +727,10 @@@ static void pnv_pci_ioda_setup_dma_pe(s
  	}
  
  	/* Setup linux iommu table */
++<<<<<<< HEAD
 +	tbl = &pe->tce32_table;
++=======
++>>>>>>> c5773822c000 (powerpc/powernv/ioda: Clean up IOMMU group registration)
  	pnv_pci_setup_iommu_table(tbl, addr, TCE32_TABLE_SIZE * segs,
  				  base << 28, IOMMU_PAGE_SHIFT_4K);
  
@@@ -742,12 -1841,17 +748,25 @@@
  				 TCE_PCI_SWINV_PAIR);
  	}
  	iommu_init_table(tbl, phb->hose->node);
 +	iommu_register_group(tbl, phb->hose->global_number, pe->pe_number);
  
++<<<<<<< HEAD
 +	if (pe->pdev)
 +		set_iommu_table_base_and_group(&pe->pdev->dev, tbl);
 +	else
 +		pnv_ioda_setup_bus_dma(pe, pe->pbus, true);
++=======
+ 	if (pe->flags & PNV_IODA_PE_DEV) {
+ 		/*
+ 		 * Setting table base here only for carrying iommu_group
+ 		 * further down to let iommu_add_device() do the job.
+ 		 * pnv_pci_ioda_dma_dev_setup will override it later anyway.
+ 		 */
+ 		set_iommu_table_base(&pe->pdev->dev, tbl);
+ 		iommu_add_device(&pe->pdev->dev);
+ 	} else if (pe->flags & (PNV_IODA_PE_BUS | PNV_IODA_PE_BUS_ALL))
+ 		pnv_ioda_setup_bus_dma(pe, pe->pbus);
++>>>>>>> c5773822c000 (powerpc/powernv/ioda: Clean up IOMMU group registration)
  
  	return;
   fail:
@@@ -857,7 -1952,6 +879,10 @@@ static void pnv_pci_ioda2_setup_dma_pe(
  	}
  
  	/* Setup linux iommu table */
++<<<<<<< HEAD
 +	tbl = &pe->tce32_table;
++=======
++>>>>>>> c5773822c000 (powerpc/powernv/ioda: Clean up IOMMU group registration)
  	pnv_pci_setup_iommu_table(tbl, addr, tce_table_size, 0,
  			IOMMU_PAGE_SHIFT_4K);
  
@@@ -873,15 -1969,22 +898,28 @@@
  		tbl->it_type |= (TCE_PCI_SWINV_CREATE | TCE_PCI_SWINV_FREE);
  	}
  	iommu_init_table(tbl, phb->hose->node);
 +	iommu_register_group(tbl, phb->hose->global_number, pe->pe_number);
  
++<<<<<<< HEAD
 +	if (pe->pdev)
 +		set_iommu_table_base_and_group(&pe->pdev->dev, tbl);
 +	else
 +		pnv_ioda_setup_bus_dma(pe, pe->pbus, true);
++=======
+ 	if (pe->flags & PNV_IODA_PE_DEV) {
+ 		/*
+ 		 * Setting table base here only for carrying iommu_group
+ 		 * further down to let iommu_add_device() do the job.
+ 		 * pnv_pci_ioda_dma_dev_setup will override it later anyway.
+ 		 */
+ 		set_iommu_table_base(&pe->pdev->dev, tbl);
+ 		iommu_add_device(&pe->pdev->dev);
+ 	} else if (pe->flags & (PNV_IODA_PE_BUS | PNV_IODA_PE_BUS_ALL))
+ 		pnv_ioda_setup_bus_dma(pe, pe->pbus);
++>>>>>>> c5773822c000 (powerpc/powernv/ioda: Clean up IOMMU group registration)
  
  	/* Also create a bypass window */
 -	if (!pnv_iommu_bypass_disabled)
 -		pnv_pci_ioda2_setup_bypass_pe(phb, pe);
 -
 +	pnv_pci_ioda2_setup_bypass_pe(phb, pe);
  	return;
  fail:
  	if (pe->tce32_seg >= 0)
* Unmerged path arch/powerpc/platforms/powernv/pci-ioda.c
