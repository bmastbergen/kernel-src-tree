bonding: enhance L2 hash helper with packet type

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jianhua Xie <jianhua.xie@freescale.com>
commit ce04d63502ca7ec30ef07336a0fd6f1165fd486b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ce04d635.failed

Current L2 hash helper calculates destination eth addr and
source ether addr as L2 hash factors.  This patch is adding
packet type ID field into L2 hash factors.  While one of
BOND_XMIT_POLICY_LAYER2 or BOND_XMIT_POLICY_{LAYER|ENCAP}23
is applied, for the 2nd level hash, enhanced hash method can
help to distribute different types of packets like IPv4/IPv6
packets to different slave devices.

CC: Jay Vosburgh <j.vosburgh@gmail.com>
CC: Veaceslav Falico <vfalico@gmail.com>
CC: Andy Gospodarek <andy@greyhouse.net>
CC: David S. Miller <davem@davemloft.net>
CC: Pan Jiafei <Jiafei.Pan@freescale.com>

	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: Jianhua Xie <jianhua.xie@freescale.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ce04d63502ca7ec30ef07336a0fd6f1165fd486b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 5e51f44f6317,a2c4e8d4a955..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -3218,16 -2974,14 +3218,23 @@@ static struct notifier_block bond_netde
  
  /*---------------------------- Hashing Policies -----------------------------*/
  
 -/* L2 hash helper */
 -static inline u32 bond_eth_hash(struct sk_buff *skb)
 +/*
 + * Hash for the output device based upon layer 2 data
 + */
 +static int bond_xmit_hash_policy_l2(struct sk_buff *skb, int count)
  {
++<<<<<<< HEAD
 +	struct ethhdr *data = (struct ethhdr *)skb->data;
 +
 +	if (skb_headlen(skb) >= offsetof(struct ethhdr, h_proto))
 +		return (data->h_dest[5] ^ data->h_source[5]) % count;
++=======
+ 	struct ethhdr *ep, hdr_tmp;
++>>>>>>> ce04d63502ca (bonding: enhance L2 hash helper with packet type)
  
+ 	ep = skb_header_pointer(skb, 0, sizeof(hdr_tmp), &hdr_tmp);
+ 	if (ep)
+ 		return ep->h_dest[5] ^ ep->h_source[5] ^ ep->h_proto;
  	return 0;
  }
  
* Unmerged path drivers/net/bonding/bond_main.c
