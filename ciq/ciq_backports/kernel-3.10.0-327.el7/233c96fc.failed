flowcache: Fix kernel panic in flow_cache_flush_task

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Miroslav Urbanek <mu@miroslavurbanek.com>
commit 233c96fc077d310772375d47522fb444ff546905
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/233c96fc.failed

flow_cache_flush_task references a structure member flow_cache_gc_work
where it should reference flow_cache_flush_task instead.

Kernel panic occurs on kernels using IPsec during XFRM garbage
collection. The garbage collection interval can be shortened using the
following sysctl settings:

net.ipv4.xfrm4_gc_thresh=4
net.ipv6.xfrm6_gc_thresh=4

With the default settings, our productions servers crash approximately
once a week. With the settings above, they crash immediately.

Fixes: ca925cf1534e ("flowcache: Make flow cache name space aware")
	Reported-by: Tomáš Charvát <tc@excello.cz>
	Tested-by: Jan Hejl <jh@excello.cz>
	Signed-off-by: Miroslav Urbanek <mu@miroslavurbanek.com>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 233c96fc077d310772375d47522fb444ff546905)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/flow.c
diff --cc net/core/flow.c
index dfa602ceb8cd,1033725be40b..000000000000
--- a/net/core/flow.c
+++ b/net/core/flow.c
@@@ -393,14 -378,16 +393,22 @@@ done
  
  static void flow_cache_flush_task(struct work_struct *work)
  {
++<<<<<<< HEAD
 +	flow_cache_flush();
++=======
+ 	struct netns_xfrm *xfrm = container_of(work, struct netns_xfrm,
+ 						flow_cache_flush_work);
+ 	struct net *net = container_of(xfrm, struct net, xfrm);
+ 
+ 	flow_cache_flush(net);
++>>>>>>> 233c96fc077d (flowcache: Fix kernel panic in flow_cache_flush_task)
  }
  
 -void flow_cache_flush_deferred(struct net *net)
 +static DECLARE_WORK(flow_cache_flush_work, flow_cache_flush_task);
 +
 +void flow_cache_flush_deferred(void)
  {
 -	schedule_work(&net->xfrm.flow_cache_flush_work);
 +	schedule_work(&flow_cache_flush_work);
  }
  
  static int flow_cache_cpu_prepare(struct flow_cache *fc, int cpu)
* Unmerged path net/core/flow.c
