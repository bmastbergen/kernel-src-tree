KVM: x86/vPMU: introduce pmu.h header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] kvm: vpmu: introduce pmu.h header (Wei Huang) [1076010]
Rebuild_FUZZ: 94.29%
commit-author Wei Huang <wehuang@redhat.com>
commit 474a5bb944d2ad308a1360dcae72b16b8eecd250
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/474a5bb9.failed

This will be used for private function used by AMD- and Intel-specific
PMU implementations.

	Signed-off-by: Wei Huang <wei@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 474a5bb944d2ad308a1360dcae72b16b8eecd250)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/kvm_host.h
diff --cc arch/x86/include/asm/kvm_host.h
index 5e84fe1d6c52,534dfa324e35..000000000000
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@@ -1119,16 -1195,9 +1119,23 @@@ void kvm_complete_insn_gp(struct kvm_vc
  
  int kvm_is_in_guest(void);
  
++<<<<<<< HEAD
 +void kvm_pmu_init(struct kvm_vcpu *vcpu);
 +void kvm_pmu_destroy(struct kvm_vcpu *vcpu);
 +void kvm_pmu_reset(struct kvm_vcpu *vcpu);
 +void kvm_pmu_cpuid_update(struct kvm_vcpu *vcpu);
 +bool kvm_pmu_msr(struct kvm_vcpu *vcpu, u32 msr);
 +int kvm_pmu_get_msr(struct kvm_vcpu *vcpu, u32 msr, u64 *data);
 +int kvm_pmu_set_msr(struct kvm_vcpu *vcpu, struct msr_data *msr_info);
 +int kvm_pmu_check_pmc(struct kvm_vcpu *vcpu, unsigned pmc);
 +int kvm_pmu_read_pmc(struct kvm_vcpu *vcpu, unsigned pmc, u64 *data);
 +void kvm_handle_pmu_event(struct kvm_vcpu *vcpu);
 +void kvm_deliver_pmi(struct kvm_vcpu *vcpu);
++=======
+ int __x86_set_memory_region(struct kvm *kvm,
+ 			    const struct kvm_userspace_memory_region *mem);
+ int x86_set_memory_region(struct kvm *kvm,
+ 			  const struct kvm_userspace_memory_region *mem);
++>>>>>>> 474a5bb944d2 (KVM: x86/vPMU: introduce pmu.h header)
  
  #endif /* _ASM_X86_KVM_HOST_H */
* Unmerged path arch/x86/include/asm/kvm_host.h
diff --git a/arch/x86/kvm/cpuid.c b/arch/x86/kvm/cpuid.c
index 292827dbed59..5c11e8f6502c 100644
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@ -24,6 +24,7 @@
 #include "lapic.h"
 #include "mmu.h"
 #include "trace.h"
+#include "pmu.h"
 
 static u32 xstate_required_size(u64 xstate_bv, bool compacted)
 {
diff --git a/arch/x86/kvm/pmu.c b/arch/x86/kvm/pmu.c
index 8e6b7d869d2f..d3f7c75b38c3 100644
--- a/arch/x86/kvm/pmu.c
+++ b/arch/x86/kvm/pmu.c
@@ -19,13 +19,9 @@
 #include "x86.h"
 #include "cpuid.h"
 #include "lapic.h"
+#include "pmu.h"
 
-static struct kvm_arch_event_perf_mapping {
-	u8 eventsel;
-	u8 unit_mask;
-	unsigned event_type;
-	bool inexact;
-} arch_events[] = {
+static struct kvm_event_hw_type_mapping arch_events[] = {
 	/* Index must match CPUID 0x0A.EBX bit vector */
 	[0] = { 0x3c, 0x00, PERF_COUNT_HW_CPU_CYCLES },
 	[1] = { 0xc0, 0x00, PERF_COUNT_HW_INSTRUCTIONS },
diff --git a/arch/x86/kvm/pmu.h b/arch/x86/kvm/pmu.h
new file mode 100644
index 000000000000..19bf0172f93b
--- /dev/null
+++ b/arch/x86/kvm/pmu.h
@@ -0,0 +1,26 @@
+#ifndef __KVM_X86_PMU_H
+#define __KVM_X86_PMU_H
+
+#define vcpu_to_pmu(vcpu) (&(vcpu)->arch.pmu)
+#define pmu_to_vcpu(pmu)  (container_of((pmu), struct kvm_vcpu, arch.pmu))
+#define pmc_to_pmu(pmc)   (&(pmc)->vcpu->arch.pmu)
+
+struct kvm_event_hw_type_mapping {
+	u8 eventsel;
+	u8 unit_mask;
+	unsigned event_type;
+};
+
+void kvm_pmu_deliver_pmi(struct kvm_vcpu *vcpu);
+void kvm_pmu_handle_event(struct kvm_vcpu *vcpu);
+int kvm_pmu_rdpmc(struct kvm_vcpu *vcpu, unsigned pmc, u64 *data);
+int kvm_pmu_is_valid_msr_idx(struct kvm_vcpu *vcpu, unsigned idx);
+bool kvm_pmu_is_valid_msr(struct kvm_vcpu *vcpu, u32 msr);
+int kvm_pmu_get_msr(struct kvm_vcpu *vcpu, u32 msr, u64 *data);
+int kvm_pmu_set_msr(struct kvm_vcpu *vcpu, struct msr_data *msr_info);
+void kvm_pmu_refresh(struct kvm_vcpu *vcpu);
+void kvm_pmu_reset(struct kvm_vcpu *vcpu);
+void kvm_pmu_init(struct kvm_vcpu *vcpu);
+void kvm_pmu_destroy(struct kvm_vcpu *vcpu);
+
+#endif /* __KVM_X86_PMU_H */
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index b974c76d1459..9fdbcc6f5113 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -28,6 +28,7 @@
 #include "x86.h"
 #include "cpuid.h"
 #include "assigned-dev.h"
+#include "pmu.h"
 
 #include <linux/clocksource.h>
 #include <linux/interrupt.h>
