ALSA: line6: Improve line6_read/write_data() interfaces

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Improve line6_read/write_data() interfaces (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 94.23%
commit-author Chris Rorvick <chris@rorvick.com>
commit 25a0707cf6bc20677aa2e0b889d69f9dee8c1f14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/25a0707c.failed

The address cannot be negative so make it unsigned.  Also, an unsigned
int is always sufficient for the length, so no need to overdo it with a
size_t.  Finally, add in range checks to see if the values passed in
actually fit where they are used.

	Signed-off-by: Chris Rorvick <chris@rorvick.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 25a0707cf6bc20677aa2e0b889d69f9dee8c1f14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/driver.h
#	sound/usb/line6/driver.c
diff --cc drivers/staging/line6/driver.h
index 4fd9dad58be7,7da643e79e3b..000000000000
--- a/drivers/staging/line6/driver.h
+++ b/drivers/staging/line6/driver.h
@@@ -184,31 -147,35 +184,36 @@@ struct usb_line6 
  
  extern char *line6_alloc_sysex_buffer(struct usb_line6 *line6, int code1,
  				      int code2, int size);
++<<<<<<< HEAD:drivers/staging/line6/driver.h
 +extern ssize_t line6_nop_read(struct device *dev,
 +			      struct device_attribute *attr, char *buf);
 +extern ssize_t line6_nop_write(struct device *dev,
 +			       struct device_attribute *attr,
 +			       const char *buf, size_t count);
 +extern int line6_read_data(struct usb_line6 *line6, int address, void *data,
 +			   size_t datalen);
++=======
+ extern int line6_read_data(struct usb_line6 *line6, unsigned address,
+ 			   void *data, unsigned datalen);
++>>>>>>> 25a0707cf6bc (ALSA: line6: Improve line6_read/write_data() interfaces):sound/usb/line6/driver.h
  extern int line6_read_serial_number(struct usb_line6 *line6,
 -				    u32 *serial_number);
 +				    int *serial_number);
 +extern int line6_send_program(struct usb_line6 *line6, u8 value);
 +extern int line6_send_raw_message(struct usb_line6 *line6, const char *buffer,
 +				  int size);
  extern int line6_send_raw_message_async(struct usb_line6 *line6,
  					const char *buffer, int size);
  extern int line6_send_sysex_message(struct usb_line6 *line6,
  				    const char *buffer, int size);
  extern ssize_t line6_set_raw(struct device *dev, struct device_attribute *attr,
  			     const char *buf, size_t count);
 -extern void line6_start_timer(struct timer_list *timer, unsigned long msecs,
 -			      void (*function)(unsigned long),
 +extern void line6_start_timer(struct timer_list *timer, unsigned int msecs,
 +			      void (*function) (unsigned long),
  			      unsigned long data);
 +extern int line6_transmit_parameter(struct usb_line6 *line6, int param,
 +				    u8 value);
  extern int line6_version_request_async(struct usb_line6 *line6);
- extern int line6_write_data(struct usb_line6 *line6, int address, void *data,
- 			    size_t datalen);
+ extern int line6_write_data(struct usb_line6 *line6, unsigned address,
+ 			    void *data, unsigned datalen);
  
 -int line6_probe(struct usb_interface *interface,
 -		const struct usb_device_id *id,
 -		const char *driver_name,
 -		const struct line6_properties *properties,
 -		int (*private_init)(struct usb_line6 *, const struct usb_device_id *id),
 -		size_t data_size);
 -
 -void line6_disconnect(struct usb_interface *interface);
 -
 -#ifdef CONFIG_PM
 -int line6_suspend(struct usb_interface *interface, pm_message_t message);
 -int line6_resume(struct usb_interface *interface);
 -#endif
 -
  #endif
* Unmerged path sound/usb/line6/driver.c
* Unmerged path drivers/staging/line6/driver.h
* Unmerged path sound/usb/line6/driver.c
