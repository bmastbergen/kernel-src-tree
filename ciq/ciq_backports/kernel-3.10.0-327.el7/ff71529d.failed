bonding: use last_arp_rx in bond_loadbalance_arp_mon()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit ff71529da40eee34458b1c3d62ca158a13e99b4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ff71529d.failed

Now that last_arp_rx correctly show the last time we've received an ARP, we
can use it safely instead of slave->dev->last_rx.

CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ff71529da40eee34458b1c3d62ca158a13e99b4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 38651cb9ac46,e7aab9a6a670..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2671,15 -2371,11 +2671,20 @@@ void bond_loadbalance_arp_mon(struct wo
  		unsigned long trans_start = dev_trans_start(slave->dev);
  
  		if (slave->link != BOND_LINK_UP) {
++<<<<<<< HEAD
 +			if (time_in_range(jiffies,
 +				trans_start - delta_in_ticks,
 +				trans_start + delta_in_ticks + extra_ticks) &&
 +			    time_in_range(jiffies,
 +				slave->dev->last_rx - delta_in_ticks,
 +				slave->dev->last_rx + delta_in_ticks + extra_ticks)) {
++=======
+ 			if (bond_time_in_interval(bond, trans_start, 1) &&
+ 			    bond_time_in_interval(bond, slave->last_arp_rx, 1)) {
++>>>>>>> ff71529da40e (bonding: use last_arp_rx in bond_loadbalance_arp_mon())
  
  				slave->link  = BOND_LINK_UP;
 -				slave_state_changed = 1;
 +				bond_set_active_slave(slave);
  
  				/* primary_slave has no meaning in round-robin
  				 * mode. the window of a slave being up and
@@@ -2704,15 -2400,11 +2709,20 @@@
  			 * when the source ip is 0, so don't take the link down
  			 * if we don't know our ip yet
  			 */
++<<<<<<< HEAD
 +			if (!time_in_range(jiffies,
 +				trans_start - delta_in_ticks,
 +				trans_start + 2 * delta_in_ticks + extra_ticks) ||
 +			    !time_in_range(jiffies,
 +				slave->dev->last_rx - delta_in_ticks,
 +				slave->dev->last_rx + 2 * delta_in_ticks + extra_ticks)) {
++=======
+ 			if (!bond_time_in_interval(bond, trans_start, 2) ||
+ 			    !bond_time_in_interval(bond, slave->last_arp_rx, 2)) {
++>>>>>>> ff71529da40e (bonding: use last_arp_rx in bond_loadbalance_arp_mon())
  
  				slave->link  = BOND_LINK_DOWN;
 -				slave_state_changed = 1;
 +				bond_set_backup_slave(slave);
  
  				if (slave->link_failure_count < UINT_MAX)
  					slave->link_failure_count++;
* Unmerged path drivers/net/bonding/bond_main.c
