ip6tnl,gre6,vti6: implement ndo_get_iflink

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] ip6tnl, gre6, vti6: implement ndo_get_iflink (Jiri Benc) [1210260]
Rebuild_FUZZ: 97.67%
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit ecf2c06a88d2ed534a87b84b8c1a467ab23352dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ecf2c06a.failed

Don't use dev->iflink anymore.

CC: Steffen Klassert <steffen.klassert@secunet.com>
	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ecf2c06a88d2ed534a87b84b8c1a467ab23352dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/ip6_tunnel.h
#	net/ipv6/ip6_gre.c
#	net/ipv6/ip6_vti.c
diff --cc include/net/ip6_tunnel.h
index 2265b0bf97e5,1668be5937e6..000000000000
--- a/include/net/ip6_tunnel.h
+++ b/include/net/ip6_tunnel.h
@@@ -69,6 -70,8 +69,11 @@@ int ip6_tnl_xmit_ctl(struct ip6_tnl *t)
  __u16 ip6_tnl_parse_tlv_enc_lim(struct sk_buff *skb, __u8 *raw);
  __u32 ip6_tnl_get_cap(struct ip6_tnl *t, const struct in6_addr *laddr,
  			     const struct in6_addr *raddr);
++<<<<<<< HEAD
++=======
+ struct net *ip6_tnl_get_link_net(const struct net_device *dev);
+ int ip6_tnl_get_iflink(const struct net_device *dev);
++>>>>>>> ecf2c06a88d2 (ip6tnl,gre6,vti6: implement ndo_get_iflink)
  
  static inline void ip6tunnel_xmit(struct sk_buff *skb, struct net_device *dev)
  {
diff --cc net/ipv6/ip6_gre.c
index 06aadf812d65,f724329d7436..000000000000
--- a/net/ipv6/ip6_gre.c
+++ b/net/ipv6/ip6_gre.c
@@@ -1242,9 -1239,8 +1243,8 @@@ static void ip6gre_tunnel_setup(struct 
  	if (!(t->parms.flags & IP6_TNL_F_IGN_ENCAP_LIMIT))
  		dev->mtu -= 8;
  	dev->flags |= IFF_NOARP;
- 	dev->iflink = 0;
  	dev->addr_len = sizeof(struct in6_addr);
 -	netif_keep_dst(dev);
 +	dev->priv_flags &= ~IFF_XMIT_DST_RELEASE;
  }
  
  static int ip6gre_tunnel_init(struct net_device *dev)
@@@ -1267,6 -1264,12 +1267,15 @@@
  	if (!dev->tstats)
  		return -ENOMEM;
  
++<<<<<<< HEAD
++=======
+ 	for_each_possible_cpu(i) {
+ 		struct pcpu_sw_netstats *ip6gre_tunnel_stats;
+ 		ip6gre_tunnel_stats = per_cpu_ptr(dev->tstats, i);
+ 		u64_stats_init(&ip6gre_tunnel_stats->syncp);
+ 	}
+ 
++>>>>>>> ecf2c06a88d2 (ip6tnl,gre6,vti6: implement ndo_get_iflink)
  	return 0;
  }
  
* Unmerged path net/ipv6/ip6_vti.c
* Unmerged path include/net/ip6_tunnel.h
* Unmerged path net/ipv6/ip6_gre.c
diff --git a/net/ipv6/ip6_tunnel.c b/net/ipv6/ip6_tunnel.c
index 3e2a790fd5f7..9e0b579cc5ae 100644
--- a/net/ipv6/ip6_tunnel.c
+++ b/net/ipv6/ip6_tunnel.c
@@ -1268,8 +1268,6 @@ static void ip6_tnl_link_config(struct ip6_tnl *t)
 	else
 		dev->flags &= ~IFF_POINTOPOINT;
 
-	dev->iflink = p->link;
-
 	if (p->flags & IP6_TNL_F_CAP_XMIT) {
 		int strict = (ipv6_addr_type(&p->raddr) &
 			      (IPV6_ADDR_MULTICAST|IPV6_ADDR_LINKLOCAL));
@@ -1521,6 +1519,13 @@ ip6_tnl_change_mtu(struct net_device *dev, int new_mtu)
 	return 0;
 }
 
+int ip6_tnl_get_iflink(const struct net_device *dev)
+{
+	struct ip6_tnl *t = netdev_priv(dev);
+
+	return t->parms.link;
+}
+EXPORT_SYMBOL(ip6_tnl_get_iflink);
 
 static const struct net_device_ops ip6_tnl_netdev_ops = {
 	.ndo_init	= ip6_tnl_dev_init,
@@ -1529,6 +1534,7 @@ static const struct net_device_ops ip6_tnl_netdev_ops = {
 	.ndo_do_ioctl	= ip6_tnl_ioctl,
 	.ndo_change_mtu = ip6_tnl_change_mtu,
 	.ndo_get_stats	= ip6_get_stats,
+	.ndo_get_iflink = ip6_tnl_get_iflink,
 };
 
 
* Unmerged path net/ipv6/ip6_vti.c
