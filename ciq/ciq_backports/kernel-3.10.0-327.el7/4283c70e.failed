PCI: pciehp: Make pcie_wait_cmd() self-contained

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [pci] pciehp: Make pcie_wait_cmd() self-contained (Myron Stowe) [1223472]
Rebuild_FUZZ: 94.51%
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 4283c70e91dcabe36f3545afabc5ee2b7d4da34a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/4283c70e.failed

pcie_wait_cmd() waits for the controller to finish a hotplug command.  Move
the associated logic (to determine whether waiting is required and whether
we're using interrupts or polling) from pcie_write_cmd() to
pcie_wait_cmd().

No functional change.

	Tested-by: Rajat Jain <rajatxjain@gmail.com>	(IDT 807a controller)
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: Yinghai Lu <yinghai@kernel.org>
(cherry picked from commit 4283c70e91dcabe36f3545afabc5ee2b7d4da34a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/pciehp_hpc.c
diff --cc drivers/pci/hotplug/pciehp_hpc.c
index f253bb808636,7c2a9dd6f6a4..000000000000
--- a/drivers/pci/hotplug/pciehp_hpc.c
+++ b/drivers/pci/hotplug/pciehp_hpc.c
@@@ -193,18 -203,7 +205,22 @@@ static void pcie_write_cmd(struct contr
  	/*
  	 * Wait for command completion.
  	 */
++<<<<<<< HEAD
 +	if (!ctrl->no_cmd_complete) {
 +		int poll = 0;
 +		/*
 +		 * if hotplug interrupt is not enabled or command
 +		 * completed interrupt is not enabled, we need to poll
 +		 * command completed event.
 +		 */
 +		if (!(slot_ctrl & PCI_EXP_SLTCTL_HPIE) ||
 +		    !(slot_ctrl & PCI_EXP_SLTCTL_CCIE))
 +			poll = 1;
 +                pcie_wait_cmd(ctrl, poll);
 +	}
++=======
+ 	pcie_wait_cmd(ctrl);
++>>>>>>> 4283c70e91dc (PCI: pciehp: Make pcie_wait_cmd() self-contained)
  	mutex_unlock(&ctrl->ctrl_lock);
  }
  
diff --git a/drivers/pci/hotplug/pciehp.h b/drivers/pci/hotplug/pciehp.h
index 7bae08bc1a61..89c4739a5cff 100644
--- a/drivers/pci/hotplug/pciehp.h
+++ b/drivers/pci/hotplug/pciehp.h
@@ -92,6 +92,7 @@ struct controller {
 	struct slot *slot;
 	wait_queue_head_t queue;	/* sleep & wake process */
 	u32 slot_cap;
+	u32 slot_ctrl;
 	struct timer_list poll_timer;
 	unsigned int cmd_busy:1;
 	unsigned int no_cmd_complete:1;
* Unmerged path drivers/pci/hotplug/pciehp_hpc.c
