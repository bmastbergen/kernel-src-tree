net: Handle unregister properly when netdev namespace change fails.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] Handle unregister properly when netdev namespace change fails. (Jiri Benc) [1210260]
Rebuild_FUZZ: 96.12%
commit-author David S. Miller <davem@davemloft.net>
commit 4363890079674db7b00cf1bb0e6fa430e846e86b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/43638900.failed

If rtnl_newlink() fails on it's call to dev_change_net_namespace(), we
have to make use of the ->dellink() method, if present, just like we
do when rtnl_configure_link() fails.

Fixes: 317f4810e45e ("rtnl: allow to create device with IFLA_LINK_NETNSID set")
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4363890079674db7b00cf1bb0e6fa430e846e86b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index 164916e79775,ee0608bb3bc0..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -1917,22 -2146,48 +1917,48 @@@ replay
  
  		dev->ifindex = ifm->ifi_index;
  
 -		if (ops->newlink) {
 -			err = ops->newlink(link_net ? : net, dev, tb, data);
 -			/* Drivers should call free_netdev() in ->destructor
 -			 * and unregister it on failure after registration
 -			 * so that device could be finally freed in rtnl_unlock.
 -			 */
 -			if (err < 0) {
 -				/* If device is not registered at all, free it now */
 -				if (dev->reg_state == NETREG_UNINITIALIZED)
 -					free_netdev(dev);
 -				goto out;
 -			}
 -		} else {
 +		if (ops->newlink)
 +			err = ops->newlink(net, dev, tb, data);
 +		else
  			err = register_netdevice(dev);
++<<<<<<< HEAD
 +
 +		if (err < 0 && !IS_ERR(dev))
 +			free_netdev(dev);
 +		if (err < 0)
 +			goto out;
 +
 +		err = rtnl_configure_link(dev, ifm);
 +		if (err < 0)
 +			unregister_netdevice(dev);
++=======
+ 			if (err < 0) {
+ 				free_netdev(dev);
+ 				goto out;
+ 			}
+ 		}
+ 		err = rtnl_configure_link(dev, ifm);
+ 		if (err < 0)
+ 			goto out_unregister;
+ 		if (link_net) {
+ 			err = dev_change_net_namespace(dev, dest_net, ifname);
+ 			if (err < 0)
+ 				goto out_unregister;
+ 		}
++>>>>>>> 436389007967 (net: Handle unregister properly when netdev namespace change fails.)
  out:
 -		if (link_net)
 -			put_net(link_net);
  		put_net(dest_net);
  		return err;
+ out_unregister:
+ 		if (ops->newlink) {
+ 			LIST_HEAD(list_kill);
+ 
+ 			ops->dellink(dev, &list_kill);
+ 			unregister_netdevice_many(&list_kill);
+ 		} else {
+ 			unregister_netdevice(dev);
+ 		}
+ 		goto out;
  	}
  }
  
* Unmerged path net/core/rtnetlink.c
