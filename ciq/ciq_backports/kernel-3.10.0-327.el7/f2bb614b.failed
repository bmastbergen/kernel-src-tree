ALSA: line6: Clear prev_fbuf and prev_fsize properly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Clear prev_fbuf and prev_fsize properly (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 93.88%
commit-author Takashi Iwai <tiwai@suse.de>
commit f2bb614bb6c7f5245521195f144272ef93d9f086
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f2bb614b.failed

Clearing prev_fsize in line6_pcm_acquire() is pretty racy.
This can be called at any time while the stream is being played.
Rather better to clear prev_fbuf and prev_fsize at the proper place
like the stream stop for capture, and just after copying the monitor /
impulse data inside the spinlock.

	Tested-by: Chris Rorvick <chris@rorvick.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit f2bb614bb6c7f5245521195f144272ef93d9f086)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/playback.c
#	sound/usb/line6/pcm.c
diff --cc drivers/staging/line6/playback.c
index f97584b88a0d,242265929145..000000000000
--- a/drivers/staging/line6/playback.c
+++ b/drivers/staging/line6/playback.c
@@@ -170,14 -166,13 +170,12 @@@ static int submit_audio_out_urb(struct 
  		struct usb_iso_packet_descriptor *fout =
  		    &urb_out->iso_frame_desc[i];
  
- 		if (line6pcm->flags & LINE6_BITS_CAPTURE_STREAM)
- 			fsize = line6pcm->prev_fsize;
- 
+ 		fsize = line6pcm->prev_fsize;
  		if (fsize == 0) {
  			int n;
 -
 -			line6pcm->out.count += frame_increment;
 -			n = line6pcm->out.count / frame_factor;
 -			line6pcm->out.count -= n * frame_factor;
 +			line6pcm->count_out += frame_increment;
 +			n = line6pcm->count_out / frame_factor;
 +			line6pcm->count_out -= n * frame_factor;
  			fsize = n * bytes_per_frame;
  		}
  
@@@ -264,10 -260,11 +262,15 @@@
  				add_monitor_signal(urb_out, line6pcm->prev_fbuf,
  						   line6pcm->volume_monitor,
  						   bytes_per_frame);
 +#ifdef CONFIG_LINE6_USB_IMPULSE_RESPONSE
  		}
++<<<<<<< HEAD:drivers/staging/line6/playback.c
 +#endif
++=======
+ 		line6pcm->prev_fbuf = NULL;
+ 		line6pcm->prev_fsize = 0;
++>>>>>>> f2bb614bb6c7 (ALSA: line6: Clear prev_fbuf and prev_fsize properly):sound/usb/line6/playback.c
  	}
 -	spin_unlock(&line6pcm->in.lock);
  
  	ret = usb_submit_urb(urb_out, GFP_ATOMIC);
  
* Unmerged path sound/usb/line6/pcm.c
* Unmerged path drivers/staging/line6/playback.c
* Unmerged path sound/usb/line6/pcm.c
