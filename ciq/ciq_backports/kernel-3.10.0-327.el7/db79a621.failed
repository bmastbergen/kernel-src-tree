vxlan: Only set has-GBP bit in header if any other bits would be set

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Thomas Graf <tgraf@suug.ch>
commit db79a621835ee91d3e10177abd97f48e0a4dcf9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/db79a621.failed

This allows for a VXLAN-GBP socket to talk to a Linux VXLAN socket by
not setting any of the bits.

	Signed-off-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit db79a621835ee91d3e10177abd97f48e0a4dcf9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 3440d933b3ec,d08072c10aa9..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1529,11 -1662,24 +1529,29 @@@ static bool route_shortcircuit(struct n
  	return false;
  }
  
 -static void vxlan_build_gbp_hdr(struct vxlanhdr *vxh, u32 vxflags,
 -				struct vxlan_metadata *md)
 +static inline struct sk_buff *vxlan_handle_offloads(struct sk_buff *skb,
 +						    bool udp_csum)
  {
++<<<<<<< HEAD
 +	int type = udp_csum ? SKB_GSO_UDP_TUNNEL_CSUM : SKB_GSO_UDP_TUNNEL;
 +	return iptunnel_handle_offloads(skb, udp_csum, type);
++=======
+ 	struct vxlanhdr_gbp *gbp;
+ 
+ 	if (!md->gbp)
+ 		return;
+ 
+ 	gbp = (struct vxlanhdr_gbp *)vxh;
+ 	vxh->vx_flags |= htonl(VXLAN_HF_GBP);
+ 
+ 	if (md->gbp & VXLAN_GBP_DONT_LEARN)
+ 		gbp->dont_learn = 1;
+ 
+ 	if (md->gbp & VXLAN_GBP_POLICY_APPLIED)
+ 		gbp->policy_applied = 1;
+ 
+ 	gbp->policy_id = htons(md->gbp & VXLAN_GBP_ID_MASK);
++>>>>>>> db79a621835e (vxlan: Only set has-GBP bit in header if any other bits would be set)
  }
  
  #if IS_ENABLED(CONFIG_IPV6)
* Unmerged path drivers/net/vxlan.c
