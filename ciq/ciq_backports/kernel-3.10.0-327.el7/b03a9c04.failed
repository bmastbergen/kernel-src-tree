ipv6: remove ipv6_sk_ac_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author WANG Cong <xiyou.wangcong@gmail.com>
commit b03a9c04a3a605815c232506e1d76281afe0946f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b03a9c04.failed

Just move rtnl lock up, so that the anycast list can be protected
by rtnl lock now.

	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b03a9c04a3a605815c232506e1d76281afe0946f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/anycast.c
diff --cc net/ipv6/anycast.c
index 5a80f15a9de2,d10f2e2b49c6..000000000000
--- a/net/ipv6/anycast.c
+++ b/net/ipv6/anycast.c
@@@ -169,13 -163,10 +163,17 @@@ int ipv6_sock_ac_drop(struct sock *sk, 
  	else
  		np->ipv6_ac_list = pac->acl_next;
  
++<<<<<<< HEAD
 +	spin_unlock_bh(&ipv6_sk_ac_lock);
 +
 +	rcu_read_lock();
 +	dev = dev_get_by_index_rcu(net, pac->acl_ifindex);
++=======
+ 	dev = __dev_get_by_index(net, pac->acl_ifindex);
++>>>>>>> b03a9c04a3a6 (ipv6: remove ipv6_sk_ac_lock)
  	if (dev)
  		ipv6_dev_ac_dec(dev, &pac->acl_addr);
 -	rtnl_unlock();
 +	rcu_read_unlock();
  
  	sock_kfree_s(sk, pac, sizeof(*pac));
  	return 0;
@@@ -192,13 -183,11 +190,15 @@@ void ipv6_sock_ac_close(struct sock *sk
  	if (!np->ipv6_ac_list)
  		return;
  
- 	spin_lock_bh(&ipv6_sk_ac_lock);
+ 	rtnl_lock();
  	pac = np->ipv6_ac_list;
  	np->ipv6_ac_list = NULL;
- 	spin_unlock_bh(&ipv6_sk_ac_lock);
  
  	prev_index = 0;
++<<<<<<< HEAD
 +	rcu_read_lock();
++=======
++>>>>>>> b03a9c04a3a6 (ipv6: remove ipv6_sk_ac_lock)
  	while (pac) {
  		struct ipv6_ac_socklist *next = pac->acl_next;
  
* Unmerged path net/ipv6/anycast.c
