tpm, tpm_tis: fix TPM 2.0 probing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
commit 4d5f2051cd24adc19a645e920344e05afe8d69b9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/4d5f2051.failed

If during transmission system error was returned, the logic was to
incorrectly deduce that chip is a TPM 1.x chip. This patch fixes this
issue. Also, this patch changes probing so that message tag is used as the
measure for TPM 2.x, which should be much more stable. A separate function
called tpm2_probe() is encapsulated because it can be used with any
chipset.

Fixes: aec04cbdf723 ("tpm: TPM 2.0 FIFO Interface")
	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Reviewed-by: Stefan Berger <stefanb@linux.vnet.ibm.com>
	Reviewed-by: Peter Huewe <peterhuewe@gmx.de>
	Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
(cherry picked from commit 4d5f2051cd24adc19a645e920344e05afe8d69b9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/tpm/tpm.h
#	drivers/char/tpm/tpm2-cmd.c
#	drivers/char/tpm/tpm_tis.c
diff --cc drivers/char/tpm/tpm.h
index e638eb016b90,f8319a0860fd..000000000000
--- a/drivers/char/tpm/tpm.h
+++ b/drivers/char/tpm/tpm.h
@@@ -351,3 -424,16 +351,19 @@@ static inline void tpm_remove_ppi(struc
  {
  }
  #endif
++<<<<<<< HEAD
++=======
+ 
+ int tpm2_pcr_read(struct tpm_chip *chip, int pcr_idx, u8 *res_buf);
+ int tpm2_pcr_extend(struct tpm_chip *chip, int pcr_idx, const u8 *hash);
+ int tpm2_get_random(struct tpm_chip *chip, u8 *out, size_t max);
+ ssize_t tpm2_get_tpm_pt(struct tpm_chip *chip, u32 property_id,
+ 			u32 *value, const char *desc);
+ 
+ extern int tpm2_startup(struct tpm_chip *chip, u16 startup_type);
+ extern void tpm2_shutdown(struct tpm_chip *chip, u16 shutdown_type);
+ extern unsigned long tpm2_calc_ordinal_duration(struct tpm_chip *, u32);
+ extern int tpm2_do_selftest(struct tpm_chip *chip);
+ extern int tpm2_gen_interrupt(struct tpm_chip *chip);
+ extern int tpm2_probe(struct tpm_chip *chip);
++>>>>>>> 4d5f2051cd24 (tpm, tpm_tis: fix TPM 2.0 probing)
diff --cc drivers/char/tpm/tpm_tis.c
index 51350cd0847e,f2dffa770b8e..000000000000
--- a/drivers/char/tpm/tpm_tis.c
+++ b/drivers/char/tpm/tpm_tis.c
@@@ -609,6 -642,10 +609,13 @@@ static int tpm_tis_init(struct device *
  		goto out_err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	rc = tpm2_probe(chip);
+ 	if (rc)
+ 		goto out_err;
+ 
++>>>>>>> 4d5f2051cd24 (tpm, tpm_tis: fix TPM 2.0 probing)
  	vendor = ioread32(chip->vendor.iobase + TPM_DID_VID(0));
  	chip->vendor.manufacturer_id = vendor;
  
@@@ -709,7 -746,10 +716,14 @@@
  			chip->vendor.probed_irq = 0;
  
  			/* Generate Interrupts */
++<<<<<<< HEAD
 +			tpm_gen_interrupt(chip);
++=======
+ 			if (chip->flags & TPM_CHIP_FLAG_TPM2)
+ 				tpm2_gen_interrupt(chip);
+ 			else
+ 				tpm_gen_interrupt(chip);
++>>>>>>> 4d5f2051cd24 (tpm, tpm_tis: fix TPM 2.0 probing)
  
  			chip->vendor.irq = chip->vendor.probed_irq;
  
* Unmerged path drivers/char/tpm/tpm2-cmd.c
* Unmerged path drivers/char/tpm/tpm.h
* Unmerged path drivers/char/tpm/tpm2-cmd.c
* Unmerged path drivers/char/tpm/tpm_tis.c
