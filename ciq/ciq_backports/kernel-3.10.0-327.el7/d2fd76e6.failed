enclosure: handle non-unique element descriptors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Markus Stockhausen <stockhausen@collogia.de>
commit d2fd76e6f60ce438e98512236138a3527ad6a736
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d2fd76e6.failed

Some SES devices give non-unique Element Descriptors as part of the
Element Descriptor diag page. Since we use these for creating sysfs
entries, they need to be unique. The specification doesn't require
these to be unique.

Eg:
$ sg_ses -p 7 /dev/sg0
  FTS CORP  TXS6_SAS20BPX12   0500
    enclosure services device
Element descriptor In diagnostic page:
  generation code: 0x0
  element descriptor by type list
    Element type: Array device, subenclosure id: 0
      Overall descriptor: ArrayDevicesInSubEnclsr0
      Element 1 descriptor: ArrayDevice00
      Element 2 descriptor: ArrayDevice01
      Element 3 descriptor: ArrayDevice02
      Element 4 descriptor: ArrayDevice03
      Element 5 descriptor: ArrayDevice03
      Element 6 descriptor: ArrayDevice03
      Element 7 descriptor: ArrayDevice03
      Element 8 descriptor: ArrayDevice03
      Element 9 descriptor: ArrayDevice03
      Element 10 descriptor: ArrayDevice03
      Element 11 descriptor: ArrayDevice03
      Element 12 descriptor: ArrayDevice03

Based on http://thread.gmane.org/gmane.linux.scsi/69289. This
version implements James' ideas about the naming convention

	Signed-off-by: Markus Stockhausen <stockhausen@collogia.de>
	Acked-by: James Bottomley <James.Bottomley@HansenPartnership.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit d2fd76e6f60ce438e98512236138a3527ad6a736)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/enclosure.c
diff --cc drivers/misc/enclosure.c
index 73b9b9f5d38d,180a5442fd4b..000000000000
--- a/drivers/misc/enclosure.c
+++ b/drivers/misc/enclosure.c
@@@ -247,7 -247,30 +248,34 @@@ static void enclosure_component_release
  	put_device(dev->parent);
  }
  
++<<<<<<< HEAD
 +static const struct attribute_group *enclosure_groups[];
++=======
+ static struct enclosure_component *
+ enclosure_component_find_by_name(struct enclosure_device *edev,
+ 				const char *name)
+ {
+ 	int i;
+ 	const char *cname;
+ 	struct enclosure_component *ecomp;
+ 
+ 	if (!edev || !name || !name[0])
+ 		return NULL;
+ 
+ 	for (i = 0; i < edev->components; i++) {
+ 		ecomp = &edev->component[i];
+ 		cname = dev_name(&ecomp->cdev);
+ 		if (ecomp->number != -1 &&
+ 		    cname && cname[0] &&
+ 		    !strcmp(cname, name))
+ 			return ecomp;
+ 	}
+ 
+ 	return NULL;
+ }
+ 
+ static const struct attribute_group *enclosure_component_groups[];
++>>>>>>> d2fd76e6f60c (enclosure: handle non-unique element descriptors)
  
  /**
   * enclosure_component_register - add a particular component to an enclosure
* Unmerged path drivers/misc/enclosure.c
