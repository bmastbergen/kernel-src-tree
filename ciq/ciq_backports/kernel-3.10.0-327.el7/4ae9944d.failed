dm: run queue on re-queue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Junichi Nomura <j-nomura@ce.jp.nec.com>
commit 4ae9944d132b160d444fa3aa875307eb0fa3eeec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/4ae9944d.failed

Without kicking queue, requeued request may stay forever in
the queue if there are no other I/O activities to the device.

The original error had been in v2.6.39 with commit 7eaceaccab5f
("block: remove per-queue plugging"), which replaced conditional
plugging by periodic runqueue.

Commit 9d1deb83d489 in v4.1-rc1 removed the periodic runqueue
and the problem started to manifest.

Fixes: 9d1deb83d489 ("dm: don't schedule delayed run of the queue if nothing to do")
	Signed-off-by: Jun'ichi Nomura <j-nomura@ce.jp.nec.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 4ae9944d132b160d444fa3aa875307eb0fa3eeec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm.c
diff --cc drivers/md/dm.c
index 7270805de04c,0bf79a0bad37..000000000000
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@@ -1119,6 -1157,17 +1119,20 @@@ static void dm_unprep_request(struct re
  /*
   * Requeue the original request of a clone.
   */
++<<<<<<< HEAD
++=======
+ static void old_requeue_request(struct request *rq)
+ {
+ 	struct request_queue *q = rq->q;
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(q->queue_lock, flags);
+ 	blk_requeue_request(q, rq);
+ 	blk_run_queue_async(q);
+ 	spin_unlock_irqrestore(q->queue_lock, flags);
+ }
+ 
++>>>>>>> 4ae9944d132b (dm: run queue on re-queue)
  static void dm_requeue_unmapped_original_request(struct mapped_device *md,
  						 struct request *rq)
  {
* Unmerged path drivers/md/dm.c
