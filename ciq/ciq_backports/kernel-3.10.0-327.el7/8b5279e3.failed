xfs: only writeback and truncate pages for the freed range

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Brian Foster <bfoster@redhat.com>
commit 8b5279e33f241a074a9c8649bba8f77a2167b798
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8b5279e3.failed

xfs_free_file_space() only affects the range of the file for which space
is being freed. It currently writes and truncates the page cache from
the start offset of the free to EOF.

Modify xfs_free_file_space() to write back and truncate page cache of
just the range being freed.

	Signed-off-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit 8b5279e33f241a074a9c8649bba8f77a2167b798)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_bmap_util.c
diff --cc fs/xfs/xfs_bmap_util.c
index e2ea28ff57bf,809ae7d395c3..000000000000
--- a/fs/xfs/xfs_bmap_util.c
+++ b/fs/xfs/xfs_bmap_util.c
@@@ -1233,12 -1234,13 +1234,19 @@@ xfs_free_file_space
  	inode_dio_wait(VFS_I(ip));
  
  	rounding = max_t(xfs_off_t, 1 << mp->m_sb.sb_blocklog, PAGE_CACHE_SIZE);
++<<<<<<< HEAD
 +	ioffset = offset & ~(rounding - 1);
 +	error = -filemap_write_and_wait_range(VFS_I(ip)->i_mapping,
 +					      ioffset, -1);
++=======
+ 	ioffset = round_down(offset, rounding);
+ 	iendoffset = round_up(offset + len, rounding) - 1;
+ 	error = filemap_write_and_wait_range(VFS_I(ip)->i_mapping, ioffset,
+ 					     iendoffset);
++>>>>>>> 8b5279e33f24 (xfs: only writeback and truncate pages for the freed range)
  	if (error)
  		goto out;
- 	truncate_pagecache_range(VFS_I(ip), ioffset, -1);
+ 	truncate_pagecache_range(VFS_I(ip), ioffset, iendoffset);
  
  	/*
  	 * Need to zero the stuff we're not freeing, on disk.
* Unmerged path fs/xfs/xfs_bmap_util.c
