IB/iser: Make fastreg pool cache friendly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [infiniband] iser: Make fastreg pool cache friendly (Amir Vadai) [1164539]
Rebuild_FUZZ: 96.20%
commit-author Sagi Grimberg <sagig@mellanox.com>
commit 8b95aa2c1bf8c936e5b0e9096b180a3e4f5327ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8b95aa2c.failed

Memory regions are resources that are saved
in the device caches. Increase the probability for
a cache hit by adding the MRU descriptor to pool
head.

	Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 8b95aa2c1bf8c936e5b0e9096b180a3e4f5327ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/iser/iser_memory.c
diff --cc drivers/infiniband/ulp/iser/iser_memory.c
index f40132fc970c,45f512043ef5..000000000000
--- a/drivers/infiniband/ulp/iser/iser_memory.c
+++ b/drivers/infiniband/ulp/iser/iser_memory.c
@@@ -41,6 -41,32 +41,35 @@@
  
  #define ISER_KMALLOC_THRESHOLD 0x20000 /* 128K - kmalloc limit */
  
++<<<<<<< HEAD
++=======
+ struct fast_reg_descriptor *
+ iser_reg_desc_get(struct ib_conn *ib_conn)
+ {
+ 	struct fast_reg_descriptor *desc;
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(&ib_conn->lock, flags);
+ 	desc = list_first_entry(&ib_conn->fastreg.pool,
+ 				struct fast_reg_descriptor, list);
+ 	list_del(&desc->list);
+ 	spin_unlock_irqrestore(&ib_conn->lock, flags);
+ 
+ 	return desc;
+ }
+ 
+ void
+ iser_reg_desc_put(struct ib_conn *ib_conn,
+ 		  struct fast_reg_descriptor *desc)
+ {
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(&ib_conn->lock, flags);
+ 	list_add(&desc->list, &ib_conn->fastreg.pool);
+ 	spin_unlock_irqrestore(&ib_conn->lock, flags);
+ }
+ 
++>>>>>>> 8b95aa2c1bf8 (IB/iser: Make fastreg pool cache friendly)
  /**
   * iser_start_rdma_unaligned_sg
   */
* Unmerged path drivers/infiniband/ulp/iser/iser_memory.c
