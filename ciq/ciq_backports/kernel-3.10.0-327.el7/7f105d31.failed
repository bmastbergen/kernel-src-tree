PCI/portdrv: Remove warning about invalid IRQ for hot-added PCIe ports

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [pci] portdrv: Remove warning about invalid IRQ for hot-added PCIe ports (Myron Stowe) [1223472]
Rebuild_FUZZ: 97.06%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit 7f105d311869d80895c169ba90ebebded93b3867
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7f105d31.failed

For hot-added PCIe ports on x86 platforms, we always warned about an
invalid IRQ, e.g.,

  pci 0000:00:00.0: device [8086:0e0b] has invalid IRQ; check vendor BIOS

This was because we check pci_dev->irq before actually allocating the IRQ
for the device, which happens in this path:

  pcie_port_device_register
    pci_enable_device
      pci_enable_device_flags
        do_pci_enable_device
          pcibios_enable_device    (on x86)
            pcibios_enable_irq

This warning message isn't generated for PCIe ports present at boot time
because x86 arch code has called acpi_pci_irq_enable() in pci_acpi_init()
for each PCI device for safety.

[bhelgaas: changelog]
	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 7f105d311869d80895c169ba90ebebded93b3867)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pcie/portdrv_pci.c
diff --cc drivers/pci/pcie/portdrv_pci.c
index 0d8fdc48e642,2ccc9b926ea7..000000000000
--- a/drivers/pci/pcie/portdrv_pci.c
+++ b/drivers/pci/pcie/portdrv_pci.c
@@@ -203,10 -203,6 +203,13 @@@ static int pcie_portdrv_probe(struct pc
  	     (pci_pcie_type(dev) != PCI_EXP_TYPE_DOWNSTREAM)))
  		return -ENODEV;
  
++<<<<<<< HEAD
 +	if (!dev->irq && dev->pin) {
 +		dev_warn(&dev->dev, "device [%04x:%04x] has invalid IRQ; "
 +			 "check vendor BIOS\n", dev->vendor, dev->device);
 +	}
++=======
++>>>>>>> 7f105d311869 (PCI/portdrv: Remove warning about invalid IRQ for hot-added PCIe ports)
  	status = pcie_port_device_register(dev);
  	if (status)
  		return status;
* Unmerged path drivers/pci/pcie/portdrv_pci.c
