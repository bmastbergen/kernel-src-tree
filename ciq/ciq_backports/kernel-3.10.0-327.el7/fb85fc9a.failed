btrfs: kill extent_buffer_page helper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author David Sterba <dsterba@suse.cz>
commit fb85fc9a675738ee2746b51c3aedde944b18ca02
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/fb85fc9a.failed

It used to be more complex but now it's just a simple array access.

	Signed-off-by: David Sterba <dsterba@suse.cz>
(cherry picked from commit fb85fc9a675738ee2746b51c3aedde944b18ca02)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent_io.c
diff --cc fs/btrfs/extent_io.c
index 7222b44d2a14,3359969b1a36..000000000000
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@@ -4585,8 -4644,10 +4583,15 @@@ static void mark_extent_buffer_accessed
  
  	num_pages = num_extent_pages(eb->start, eb->len);
  	for (i = 0; i < num_pages; i++) {
++<<<<<<< HEAD
 +		struct page *p = extent_buffer_page(eb, i);
 +		mark_page_accessed(p);
++=======
+ 		struct page *p = eb->pages[i];
+ 
+ 		if (p != accessed)
+ 			mark_page_accessed(p);
++>>>>>>> fb85fc9a6757 (btrfs: kill extent_buffer_page helper)
  	}
  }
  
* Unmerged path fs/btrfs/extent_io.c
diff --git a/fs/btrfs/extent_io.h b/fs/btrfs/extent_io.h
index d33406bf20ca..27966c56c596 100644
--- a/fs/btrfs/extent_io.h
+++ b/fs/btrfs/extent_io.h
@@ -279,12 +279,6 @@ static inline unsigned long num_extent_pages(u64 start, u64 len)
 		(start >> PAGE_CACHE_SHIFT);
 }
 
-static inline struct page *extent_buffer_page(struct extent_buffer *eb,
-					      unsigned long i)
-{
-	return eb->pages[i];
-}
-
 static inline void extent_buffer_get(struct extent_buffer *eb)
 {
 	atomic_inc(&eb->refs);
