perf build: Add ui objects building

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] build: Add ui objects building (Jiri Olsa) [1222189]
Rebuild_FUZZ: 92.31%
commit-author Jiri Olsa <jolsa@kernel.org>
commit 3b939a631b53bdb1bf6826fca2a330b16e995fc2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/3b939a63.failed

Move the ui objects building under build framework to be included in the
libperf build object.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Tested-by: Will Deacon <will.deacon@arm.com>
	Cc: Alexis Berlemont <alexis.berlemont@gmail.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-re5vuat8uu396n7hyor9b5ve@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 3b939a631b53bdb1bf6826fca2a330b16e995fc2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Build
#	tools/perf/Makefile.perf
#	tools/perf/config/Makefile
diff --cc tools/perf/Build
index 80a944b929da,e84ced325147..000000000000
--- a/tools/perf/Build
+++ b/tools/perf/Build
@@@ -30,3 -31,7 +30,10 @@@ paths += -DPERF_MAN_PATH="BUILD_STR($(m
  
  CFLAGS_builtin-help.o      += $(paths)
  CFLAGS_builtin-timechart.o += $(paths)
++<<<<<<< HEAD
++=======
+ 
+ libperf-y += util/
+ libperf-y += arch/
+ libperf-y += ui/
++>>>>>>> 3b939a631b53 (perf build: Add ui objects building)
diff --cc tools/perf/Makefile.perf
index 9842afffa808,c658fa6dc81e..000000000000
--- a/tools/perf/Makefile.perf
+++ b/tools/perf/Makefile.perf
@@@ -336,95 -327,6 +336,98 @@@ LIB_H += util/data.
  LIB_H += util/kvm-stat.h
  LIB_H += util/thread-stack.h
  
++<<<<<<< HEAD
 +LIB_OBJS += $(OUTPUT)util/abspath.o
 +LIB_OBJS += $(OUTPUT)util/alias.o
 +LIB_OBJS += $(OUTPUT)util/annotate.o
 +LIB_OBJS += $(OUTPUT)util/build-id.o
 +LIB_OBJS += $(OUTPUT)util/config.o
 +LIB_OBJS += $(OUTPUT)util/ctype.o
 +LIB_OBJS += $(OUTPUT)util/db-export.o
 +LIB_OBJS += $(OUTPUT)util/pmu.o
 +LIB_OBJS += $(OUTPUT)util/environment.o
 +LIB_OBJS += $(OUTPUT)util/event.o
 +LIB_OBJS += $(OUTPUT)util/evlist.o
 +LIB_OBJS += $(OUTPUT)util/evsel.o
 +LIB_OBJS += $(OUTPUT)util/exec_cmd.o
 +LIB_OBJS += $(OUTPUT)util/find_next_bit.o
 +LIB_OBJS += $(OUTPUT)util/help.o
 +LIB_OBJS += $(OUTPUT)util/kallsyms.o
 +LIB_OBJS += $(OUTPUT)util/levenshtein.o
 +LIB_OBJS += $(OUTPUT)util/parse-options.o
 +LIB_OBJS += $(OUTPUT)util/parse-events.o
 +LIB_OBJS += $(OUTPUT)util/path.o
 +LIB_OBJS += $(OUTPUT)util/rbtree.o
 +LIB_OBJS += $(OUTPUT)util/bitmap.o
 +LIB_OBJS += $(OUTPUT)util/hweight.o
 +LIB_OBJS += $(OUTPUT)util/run-command.o
 +LIB_OBJS += $(OUTPUT)util/quote.o
 +LIB_OBJS += $(OUTPUT)util/strbuf.o
 +LIB_OBJS += $(OUTPUT)util/string.o
 +LIB_OBJS += $(OUTPUT)util/strlist.o
 +LIB_OBJS += $(OUTPUT)util/strfilter.o
 +LIB_OBJS += $(OUTPUT)util/top.o
 +LIB_OBJS += $(OUTPUT)util/usage.o
 +LIB_OBJS += $(OUTPUT)util/wrapper.o
 +LIB_OBJS += $(OUTPUT)util/sigchain.o
 +LIB_OBJS += $(OUTPUT)util/dso.o
 +LIB_OBJS += $(OUTPUT)util/symbol.o
 +LIB_OBJS += $(OUTPUT)util/symbol-elf.o
 +LIB_OBJS += $(OUTPUT)util/color.o
 +LIB_OBJS += $(OUTPUT)util/pager.o
 +LIB_OBJS += $(OUTPUT)util/header.o
 +LIB_OBJS += $(OUTPUT)util/callchain.o
 +LIB_OBJS += $(OUTPUT)util/values.o
 +LIB_OBJS += $(OUTPUT)util/debug.o
 +LIB_OBJS += $(OUTPUT)util/machine.o
 +LIB_OBJS += $(OUTPUT)util/map.o
 +LIB_OBJS += $(OUTPUT)util/pstack.o
 +LIB_OBJS += $(OUTPUT)util/session.o
 +LIB_OBJS += $(OUTPUT)util/comm.o
 +LIB_OBJS += $(OUTPUT)util/thread.o
 +LIB_OBJS += $(OUTPUT)util/thread_map.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-parse.o
 +LIB_OBJS += $(OUTPUT)util/parse-events-flex.o
 +LIB_OBJS += $(OUTPUT)util/parse-events-bison.o
 +LIB_OBJS += $(OUTPUT)util/pmu-flex.o
 +LIB_OBJS += $(OUTPUT)util/pmu-bison.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-read.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-info.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-scripting.o
 +LIB_OBJS += $(OUTPUT)util/trace-event.o
 +LIB_OBJS += $(OUTPUT)util/svghelper.o
 +LIB_OBJS += $(OUTPUT)util/sort.o
 +LIB_OBJS += $(OUTPUT)util/hist.o
 +LIB_OBJS += $(OUTPUT)util/probe-event.o
 +LIB_OBJS += $(OUTPUT)util/util.o
 +LIB_OBJS += $(OUTPUT)util/xyarray.o
 +LIB_OBJS += $(OUTPUT)util/cpumap.o
 +LIB_OBJS += $(OUTPUT)util/cgroup.o
 +LIB_OBJS += $(OUTPUT)util/target.o
 +LIB_OBJS += $(OUTPUT)util/rblist.o
 +LIB_OBJS += $(OUTPUT)util/intlist.o
 +LIB_OBJS += $(OUTPUT)util/vdso.o
 +LIB_OBJS += $(OUTPUT)util/stat.o
 +LIB_OBJS += $(OUTPUT)util/record.o
 +LIB_OBJS += $(OUTPUT)util/srcline.o
 +LIB_OBJS += $(OUTPUT)util/data.o
 +LIB_OBJS += $(OUTPUT)util/tsc.o
 +LIB_OBJS += $(OUTPUT)util/cloexec.o
 +LIB_OBJS += $(OUTPUT)util/thread-stack.o
 +
 +LIB_OBJS += $(OUTPUT)ui/setup.o
 +LIB_OBJS += $(OUTPUT)ui/helpline.o
 +LIB_OBJS += $(OUTPUT)ui/progress.o
 +LIB_OBJS += $(OUTPUT)ui/util.o
 +LIB_OBJS += $(OUTPUT)ui/hist.o
 +LIB_OBJS += $(OUTPUT)ui/stdio/hist.o
 +
 +LIB_OBJS += $(OUTPUT)arch/common.o
 +
 +BUILTIN_OBJS += $(OUTPUT)builtin-probe.o
 +
++=======
++>>>>>>> 3b939a631b53 (perf build: Add ui objects building)
  PERFLIBS = $(LIB_FILE) $(LIBAPIKFS) $(LIBTRACEEVENT)
  
  # We choose to avoid "if .. else if .. else .. endif endif"
@@@ -616,18 -484,6 +619,21 @@@ $(OUTPUT)%.o: %.
  $(OUTPUT)%.s: %.S
  	$(QUIET_CC)$(CC) -o $@ -E $(CFLAGS) $<
  
++<<<<<<< HEAD
 +$(OUTPUT)util/exec_cmd.o: util/exec_cmd.c $(OUTPUT)PERF-CFLAGS
 +	$(QUIET_CC)$(CC) -o $@ -c $(CFLAGS) \
 +		'-DPERF_EXEC_PATH="$(perfexecdir_SQ)"' \
 +		'-DPREFIX="$(prefix_SQ)"' \
 +		$<
 +
 +$(OUTPUT)util/config.o: util/config.c $(OUTPUT)PERF-CFLAGS
 +	$(QUIET_CC)$(CC) -o $@ -c $(CFLAGS) -DETC_PERFCONFIG='"$(ETC_PERFCONFIG_SQ)"' $<
 +
 +$(OUTPUT)ui/setup.o: ui/setup.c $(OUTPUT)PERF-CFLAGS
 +	$(QUIET_CC)$(CC) -o $@ -c $(CFLAGS) -DLIBDIR='"$(libdir_SQ)"' $<
 +
++=======
++>>>>>>> 3b939a631b53 (perf build: Add ui objects building)
  $(OUTPUT)ui/browser.o: ui/browser.c $(OUTPUT)PERF-CFLAGS
  	$(QUIET_CC)$(CC) -o $@ -c $(CFLAGS) -DENABLE_SLFUTURE_CONST $<
  
diff --cc tools/perf/config/Makefile
index deb0c596fc15,07391389aa4c..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -835,3 -841,7 +835,10 @@@ endi
  $(call detected_var,htmldir_SQ)
  $(call detected_var,infodir_SQ)
  $(call detected_var,mandir_SQ)
++<<<<<<< HEAD
++=======
+ $(call detected_var,ETC_PERFCONFIG_SQ)
+ $(call detected_var,prefix_SQ)
+ $(call detected_var,perfexecdir_SQ)
+ $(call detected_var,LIBDIR)
++>>>>>>> 3b939a631b53 (perf build: Add ui objects building)
* Unmerged path tools/perf/Build
* Unmerged path tools/perf/Makefile.perf
* Unmerged path tools/perf/config/Makefile
diff --git a/tools/perf/ui/Build b/tools/perf/ui/Build
new file mode 100644
index 000000000000..077b6a448ddc
--- /dev/null
+++ b/tools/perf/ui/Build
@@ -0,0 +1,8 @@
+libperf-y += setup.o
+libperf-y += helpline.o
+libperf-y += progress.o
+libperf-y += util.o
+libperf-y += hist.o
+libperf-y += stdio/hist.o
+
+CFLAGS_setup.o += -DLIBDIR="BUILD_STR($(LIBDIR))"
