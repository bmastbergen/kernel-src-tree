drm/radeon: add a dpm quirk for Sapphire Radeon R9 270X 2GB GDDR5

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [drm] radeon: add a dpm quirk for Sapphire Radeon R9 270X 2GB GDDR5 (Rob Clark) [1249805]
Rebuild_FUZZ: 96.83%
commit-author Alex Deucher <alexander.deucher@amd.com>
commit 5dfc71bc44d91d1620505c064fa22b0b3db58a9d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/5dfc71bc.failed

bug:
https://bugs.freedesktop.org/show_bug.cgi?id=76490

	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 5dfc71bc44d91d1620505c064fa22b0b3db58a9d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/radeon/si_dpm.c
diff --cc drivers/gpu/drm/radeon/si_dpm.c
index 78dfbe35393f,787cd8fd897f..000000000000
--- a/drivers/gpu/drm/radeon/si_dpm.c
+++ b/drivers/gpu/drm/radeon/si_dpm.c
@@@ -2907,6 -2912,74 +2907,77 @@@ static int si_init_smc_spll_table(struc
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ struct si_dpm_quirk {
+ 	u32 chip_vendor;
+ 	u32 chip_device;
+ 	u32 subsys_vendor;
+ 	u32 subsys_device;
+ 	u32 max_sclk;
+ 	u32 max_mclk;
+ };
+ 
+ /* cards with dpm stability problems */
+ static struct si_dpm_quirk si_dpm_quirk_list[] = {
+ 	/* PITCAIRN - https://bugs.freedesktop.org/show_bug.cgi?id=76490 */
+ 	{ PCI_VENDOR_ID_ATI, 0x6810, 0x1462, 0x3036, 0, 120000 },
+ 	{ PCI_VENDOR_ID_ATI, 0x6811, 0x174b, 0xe271, 0, 120000 },
+ 	{ PCI_VENDOR_ID_ATI, 0x6810, 0x174b, 0xe271, 85000, 90000 },
+ 	{ 0, 0, 0, 0 },
+ };
+ 
+ static u16 si_get_lower_of_leakage_and_vce_voltage(struct radeon_device *rdev,
+ 						   u16 vce_voltage)
+ {
+ 	u16 highest_leakage = 0;
+ 	struct si_power_info *si_pi = si_get_pi(rdev);
+ 	int i;
+ 
+ 	for (i = 0; i < si_pi->leakage_voltage.count; i++){
+ 		if (highest_leakage < si_pi->leakage_voltage.entries[i].voltage)
+ 			highest_leakage = si_pi->leakage_voltage.entries[i].voltage;
+ 	}
+ 
+ 	if (si_pi->leakage_voltage.count && (highest_leakage < vce_voltage))
+ 		return highest_leakage;
+ 
+ 	return vce_voltage;
+ }
+ 
+ static int si_get_vce_clock_voltage(struct radeon_device *rdev,
+ 				    u32 evclk, u32 ecclk, u16 *voltage)
+ {
+ 	u32 i;
+ 	int ret = -EINVAL;
+ 	struct radeon_vce_clock_voltage_dependency_table *table =
+ 		&rdev->pm.dpm.dyn_state.vce_clock_voltage_dependency_table;
+ 
+ 	if (((evclk == 0) && (ecclk == 0)) ||
+ 	    (table && (table->count == 0))) {
+ 		*voltage = 0;
+ 		return 0;
+ 	}
+ 
+ 	for (i = 0; i < table->count; i++) {
+ 		if ((evclk <= table->entries[i].evclk) &&
+ 		    (ecclk <= table->entries[i].ecclk)) {
+ 			*voltage = table->entries[i].v;
+ 			ret = 0;
+ 			break;
+ 		}
+ 	}
+ 
+ 	/* if no match return the highest voltage */
+ 	if (ret)
+ 		*voltage = table->entries[table->count - 1].v;
+ 
+ 	*voltage = si_get_lower_of_leakage_and_vce_voltage(rdev, *voltage);
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> 5dfc71bc44d9 (drm/radeon: add a dpm quirk for Sapphire Radeon R9 270X 2GB GDDR5)
  static void si_apply_state_adjust_rules(struct radeon_device *rdev,
  					struct radeon_ps *rps)
  {
* Unmerged path drivers/gpu/drm/radeon/si_dpm.c
