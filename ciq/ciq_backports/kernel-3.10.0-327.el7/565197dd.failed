IB/core: Extend ib_uverbs_create_cq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [inifniband] core: Extend ib_uverbs_create_cq (Amir Vadai) [1164527 1164530 1164531 1164536 1164537]
Rebuild_FUZZ: 95.52%
commit-author Matan Barak <matanb@mellanox.com>
commit 565197dd8fb1354509fa983658b54d63a2ecc5d6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/565197dd.failed

ib_uverbs_ex_create_cq follows the extension verbs
mechanism. New features (for example, CQ creation flags
field which is added in a downstream patch) could used
via user-space libraries without breaking the ABI.

	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 565197dd8fb1354509fa983658b54d63a2ecc5d6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_cmd.c
#	drivers/infiniband/core/uverbs_main.c
diff --cc drivers/infiniband/core/uverbs_cmd.c
index 422dd8c84243,51311b1c0b00..000000000000
--- a/drivers/infiniband/core/uverbs_cmd.c
+++ b/drivers/infiniband/core/uverbs_cmd.c
@@@ -1312,19 -1346,11 +1317,14 @@@ static struct ib_ucq_object *create_cq(
  	struct ib_uverbs_event_file    *ev_file = NULL;
  	struct ib_cq                   *cq;
  	int                             ret;
++<<<<<<< HEAD
++=======
+ 	struct ib_uverbs_ex_create_cq_resp resp;
+ 	struct ib_cq_init_attr attr = {};
++>>>>>>> 565197dd8fb1 (IB/core: Extend ib_uverbs_create_cq)
  
- 	if (out_len < sizeof resp)
- 		return -ENOSPC;
- 
- 	if (copy_from_user(&cmd, buf, sizeof cmd))
- 		return -EFAULT;
- 
- 	INIT_UDATA(&udata, buf + sizeof cmd,
- 		   (unsigned long) cmd.response + sizeof resp,
- 		   in_len - sizeof cmd, out_len - sizeof resp);
- 
- 	if (cmd.comp_vector >= file->device->num_comp_vectors)
- 		return -EINVAL;
+ 	if (cmd->comp_vector >= file->device->num_comp_vectors)
+ 		return ERR_PTR(-EINVAL);
  
  	obj = kmalloc(sizeof *obj, GFP_KERNEL);
  	if (!obj)
@@@ -1347,9 -1373,14 +1347,20 @@@
  	INIT_LIST_HEAD(&obj->comp_list);
  	INIT_LIST_HEAD(&obj->async_list);
  
++<<<<<<< HEAD
 +	cq = file->device->ib_dev->create_cq(file->device->ib_dev, cmd.cqe,
 +					     cmd.comp_vector,
 +					     file->ucontext, &udata);
++=======
+ 	attr.cqe = cmd->cqe;
+ 	attr.comp_vector = cmd->comp_vector;
+ 
+ 	if (cmd_sz > offsetof(typeof(*cmd), flags) + sizeof(cmd->flags))
+ 		attr.flags = cmd->flags;
+ 
+ 	cq = file->device->ib_dev->create_cq(file->device->ib_dev, &attr,
+ 					     file->ucontext, uhw);
++>>>>>>> 565197dd8fb1 (IB/core: Extend ib_uverbs_create_cq)
  	if (IS_ERR(cq)) {
  		ret = PTR_ERR(cq);
  		goto err_file;
diff --cc drivers/infiniband/core/uverbs_main.c
index bdd1d5bdde73,f6eef2da7097..000000000000
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@@ -123,7 -123,8 +123,12 @@@ static int (*uverbs_ex_cmd_table[])(str
  				    struct ib_udata *uhw) = {
  	[IB_USER_VERBS_EX_CMD_CREATE_FLOW]	= ib_uverbs_ex_create_flow,
  	[IB_USER_VERBS_EX_CMD_DESTROY_FLOW]	= ib_uverbs_ex_destroy_flow,
++<<<<<<< HEAD
 +	[IB_USER_VERBS_EX_CMD_QUERY_DEVICE]	= ib_uverbs_ex_query_device
++=======
+ 	[IB_USER_VERBS_EX_CMD_QUERY_DEVICE]	= ib_uverbs_ex_query_device,
+ 	[IB_USER_VERBS_EX_CMD_CREATE_CQ]	= ib_uverbs_ex_create_cq,
++>>>>>>> 565197dd8fb1 (IB/core: Extend ib_uverbs_create_cq)
  };
  
  static void ib_uverbs_add_one(struct ib_device *device);
diff --git a/drivers/infiniband/core/uverbs.h b/drivers/infiniband/core/uverbs.h
index b716b0815644..ba365b6d1e8d 100644
--- a/drivers/infiniband/core/uverbs.h
+++ b/drivers/infiniband/core/uverbs.h
@@ -259,5 +259,6 @@ IB_UVERBS_DECLARE_CMD(close_xrcd);
 IB_UVERBS_DECLARE_EX_CMD(create_flow);
 IB_UVERBS_DECLARE_EX_CMD(destroy_flow);
 IB_UVERBS_DECLARE_EX_CMD(query_device);
+IB_UVERBS_DECLARE_EX_CMD(create_cq);
 
 #endif /* UVERBS_H */
* Unmerged path drivers/infiniband/core/uverbs_cmd.c
* Unmerged path drivers/infiniband/core/uverbs_main.c
diff --git a/include/uapi/rdma/ib_user_verbs.h b/include/uapi/rdma/ib_user_verbs.h
index e8a96071e352..dbf94bccff35 100644
--- a/include/uapi/rdma/ib_user_verbs.h
+++ b/include/uapi/rdma/ib_user_verbs.h
@@ -91,6 +91,7 @@ enum {
 
 enum {
 	IB_USER_VERBS_EX_CMD_QUERY_DEVICE = IB_USER_VERBS_CMD_QUERY_DEVICE,
+	IB_USER_VERBS_EX_CMD_CREATE_CQ = IB_USER_VERBS_CMD_CREATE_CQ,
 	IB_USER_VERBS_EX_CMD_CREATE_FLOW = IB_USER_VERBS_CMD_THRESHOLD,
 	IB_USER_VERBS_EX_CMD_DESTROY_FLOW,
 };
@@ -342,11 +343,27 @@ struct ib_uverbs_create_cq {
 	__u64 driver_data[0];
 };
 
+struct ib_uverbs_ex_create_cq {
+	__u64 user_handle;
+	__u32 cqe;
+	__u32 comp_vector;
+	__s32 comp_channel;
+	__u32 comp_mask;
+	__u32 flags;
+	__u32 reserved;
+};
+
 struct ib_uverbs_create_cq_resp {
 	__u32 cq_handle;
 	__u32 cqe;
 };
 
+struct ib_uverbs_ex_create_cq_resp {
+	struct ib_uverbs_create_cq_resp base;
+	__u32 comp_mask;
+	__u32 response_length;
+};
+
 struct ib_uverbs_resize_cq {
 	__u64 response;
 	__u32 cq_handle;
