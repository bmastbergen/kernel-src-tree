x86/MCE/AMD: Enable thresholding interrupts by default if supported

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] mce: Enable thresholding interrupts by default if supported (Prarit Bhargava) [1217770]
Rebuild_FUZZ: 93.65%
commit-author Aravind Gopalakrishnan <aravind.gopalakrishnan@amd.com>
commit d79f931f1c8b6963e13a3738ef2906ba89bb8d12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d79f931f.failed

We setup APIC vectors for threshold errors if interrupt_capable.
However, we don't set interrupt_enable by default. Rework
threshold_restart_bank() so that when we set up lvt_offset, we also set
IntType to APIC and also enable thresholding interrupts for banks which
support it by default.

User is still allowed to disable interrupts through sysfs.

While at it, check if status is valid before we proceed to log error
using mce_log. This is because, in multi-node platforms, only the NBC
(Node Base Core, i.e. the first core in the node) has valid status info
in its MCA registers. So, the decoding of status values on the non-NBC
leads to noise on kernel logs like so:

  EDAC DEBUG: amd64_inject_write_store: section=0x80000000 word_bits=0x10020001
  [Hardware Error]: Corrected error, no action required.
  [Hardware Error]: CPU:25 (15:2:0) MC4_STATUS[-|CE|-|-|-
  [Hardware Error]: Corrected error, no action required.
  [Hardware Error]: CPU:26 (15:2:0) MC4_STATUS[-|CE|-|-|-
  <...>
  WARNING: CPU: 25 PID: 0 at drivers/edac/amd64_edac.c:2147 decode_bus_error+0x1ba/0x2a0()
  WARNING: CPU: 26 PID: 0 at drivers/edac/amd64_edac.c:2147 decode_bus_error+0x1ba/0x2a0()
  Something is rotten in the state of Denmark.

	Suggested-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Aravind Gopalakrishnan <aravind.gopalakrishnan@amd.com>
Link: http://lkml.kernel.org/r/1422896561-7695-1-git-send-email-aravind.gopalakrishnan@amd.com
[ Massage commit message. ]
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit d79f931f1c8b6963e13a3738ef2906ba89bb8d12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 9df9938f4973,55ad9b37cae8..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -314,21 -314,22 +315,36 @@@ static void amd_threshold_interrupt(voi
  			 * Log the machine check that caused the threshold
  			 * event.
  			 */
 -			if (high & MASK_OVERFLOW_HI)
 -				goto log;
 +			machine_check_poll(MCP_TIMESTAMP,
 +					&__get_cpu_var(mce_poll_banks));
 +
 +			if (high & MASK_OVERFLOW_HI) {
 +				rdmsrl(address, m.misc);
 +				rdmsrl(MSR_IA32_MC0_STATUS + bank * 4,
 +				       m.status);
 +				m.bank = K8_MCE_THRESHOLD_BASE
 +				       + bank * NR_BLOCKS
 +				       + block;
 +				mce_log(&m);
 +				return;
 +			}
  		}
  	}
++<<<<<<< HEAD
++=======
+ 	return;
+ 
+ log:
+ 	mce_setup(&m);
+ 	rdmsrl(MSR_IA32_MCx_STATUS(bank), m.status);
+ 	if (!(m.status & MCI_STATUS_VAL))
+ 		return;
+ 	m.misc = ((u64)high << 32) | low;
+ 	m.bank = bank;
+ 	mce_log(&m);
+ 
+ 	wrmsrl(MSR_IA32_MCx_STATUS(bank), 0);
++>>>>>>> d79f931f1c8b (x86/MCE/AMD: Enable thresholding interrupts by default if supported)
  }
  
  /*
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
