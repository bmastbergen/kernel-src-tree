perf/x86/intel/uncore: Add Broadwell-U uncore IMC PMU support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] perf/uncore: Add Broadwell-U uncore IMC PMU support (Jiri Olsa) [1250642]
Rebuild_FUZZ: 91.07%
commit-author Stephane Eranian <eranian@google.com>
commit a41f3c8cd4e28dcbebd8ec27a9602c86cfa5f009
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a41f3c8c.failed

This patch enables the uncore Memory Controller (IMC) PMU
support for Intel Broadwell-U (Model 61) mobile processors.
The IMC PMU enables measuring memory bandwidth.

To use with perf:
$ perf stat -a -I 1000 -e
uncore_imc/data_reads/,uncore_imc/data_writes/ sleep 10

	Tested-by: Sonny Rao <sonnyrao@chromium.org>
	Signed-off-by: Stephane Eranian <eranian@google.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: kan.liang@intel.com
	Cc: peterz@infradead.org
Link: http://lkml.kernel.org/r/20150423065642.GA4890@thinkpad
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit a41f3c8cd4e28dcbebd8ec27a9602c86cfa5f009)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_uncore.h
#	arch/x86/kernel/cpu/perf_event_intel_uncore_snb.c
diff --cc arch/x86/kernel/cpu/perf_event_intel_uncore.h
index 9d4bb7106af6,06b07930e48b..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_uncore.h
+++ b/arch/x86/kernel/cpu/perf_event_intel_uncore.h
@@@ -696,3 -301,42 +696,45 @@@ static inline bool uncore_box_is_fake(s
  {
  	return (box->phys_id < 0);
  }
++<<<<<<< HEAD
++=======
+ 
+ struct intel_uncore_pmu *uncore_event_to_pmu(struct perf_event *event);
+ struct intel_uncore_box *uncore_pmu_to_box(struct intel_uncore_pmu *pmu, int cpu);
+ struct intel_uncore_box *uncore_event_to_box(struct perf_event *event);
+ u64 uncore_msr_read_counter(struct intel_uncore_box *box, struct perf_event *event);
+ void uncore_pmu_start_hrtimer(struct intel_uncore_box *box);
+ void uncore_pmu_cancel_hrtimer(struct intel_uncore_box *box);
+ void uncore_pmu_event_read(struct perf_event *event);
+ void uncore_perf_event_update(struct intel_uncore_box *box, struct perf_event *event);
+ struct event_constraint *
+ uncore_get_constraint(struct intel_uncore_box *box, struct perf_event *event);
+ void uncore_put_constraint(struct intel_uncore_box *box, struct perf_event *event);
+ u64 uncore_shared_reg_config(struct intel_uncore_box *box, int idx);
+ 
+ extern struct intel_uncore_type **uncore_msr_uncores;
+ extern struct intel_uncore_type **uncore_pci_uncores;
+ extern struct pci_driver *uncore_pci_driver;
+ extern int uncore_pcibus_to_physid[256];
+ extern struct pci_dev *uncore_extra_pci_dev[UNCORE_SOCKET_MAX][UNCORE_EXTRA_PCI_DEV_MAX];
+ extern struct event_constraint uncore_constraint_empty;
+ 
+ /* perf_event_intel_uncore_snb.c */
+ int snb_uncore_pci_init(void);
+ int ivb_uncore_pci_init(void);
+ int hsw_uncore_pci_init(void);
+ int bdw_uncore_pci_init(void);
+ void snb_uncore_cpu_init(void);
+ void nhm_uncore_cpu_init(void);
+ 
+ /* perf_event_intel_uncore_snbep.c */
+ int snbep_uncore_pci_init(void);
+ void snbep_uncore_cpu_init(void);
+ int ivbep_uncore_pci_init(void);
+ void ivbep_uncore_cpu_init(void);
+ int hswep_uncore_pci_init(void);
+ void hswep_uncore_cpu_init(void);
+ 
+ /* perf_event_intel_uncore_nhmex.c */
+ void nhmex_uncore_cpu_init(void);
++>>>>>>> a41f3c8cd4e2 (perf/x86/intel/uncore: Add Broadwell-U uncore IMC PMU support)
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore_snb.c
diff --git a/arch/x86/kernel/cpu/perf_event_intel_uncore.c b/arch/x86/kernel/cpu/perf_event_intel_uncore.c
index 4ce0c799c887..1b81d55fab1c 100644
--- a/arch/x86/kernel/cpu/perf_event_intel_uncore.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_uncore.c
@@ -3891,6 +3891,9 @@ static int __init uncore_pci_init(void)
 		pci_uncores = snb_pci_uncores;
 		uncore_pci_driver = &hsw_uncore_pci_driver;
 		break;
+	case 61: /* Broadwell */
+		ret = bdw_uncore_pci_init();
+		break;
 	default:
 		return 0;
 	}
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore.h
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore_snb.c
