NFS: Reduce time spent holding the i_mutex during fallocate()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Anna Schumaker <Anna.Schumaker@netapp.com>
commit f830f7ddd9165c8bd69127458627f03df4b1a406
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f830f7dd.failed

At the very least, we should not be taking the i_mutex until after
checking if the server even supports ALLOCATE or DEALLOCATE, allowing
v4.0 or v4.1 to exit without potentially waiting on a lock.

	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit f830f7ddd9165c8bd69127458627f03df4b1a406)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs42proc.c
#	fs/nfs/nfs4file.c
diff --cc fs/nfs/nfs4file.c
index cb5f89c48651,cb3c7879e59f..000000000000
--- a/fs/nfs/nfs4file.c
+++ b/fs/nfs/nfs4file.c
@@@ -115,12 -126,54 +115,52 @@@ nfs4_file_fsync(struct file *file, loff
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NFS_V4_2
+ static loff_t nfs4_file_llseek(struct file *filep, loff_t offset, int whence)
+ {
+ 	loff_t ret;
+ 
+ 	switch (whence) {
+ 	case SEEK_HOLE:
+ 	case SEEK_DATA:
+ 		ret = nfs42_proc_llseek(filep, offset, whence);
+ 		if (ret != -ENOTSUPP)
+ 			return ret;
+ 	default:
+ 		return nfs_file_llseek(filep, offset, whence);
+ 	}
+ }
+ 
+ static long nfs42_fallocate(struct file *filep, int mode, loff_t offset, loff_t len)
+ {
+ 	struct inode *inode = file_inode(filep);
+ 	long ret;
+ 
+ 	if (!S_ISREG(inode->i_mode))
+ 		return -EOPNOTSUPP;
+ 
+ 	if ((mode != 0) && (mode != (FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE)))
+ 		return -EOPNOTSUPP;
+ 
+ 	ret = inode_newsize_ok(inode, offset + len);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	if (mode & FALLOC_FL_PUNCH_HOLE)
+ 		return nfs42_proc_deallocate(filep, offset, len);
+ 	return nfs42_proc_allocate(filep, offset, len);
+ }
+ #endif /* CONFIG_NFS_V4_2 */
+ 
++>>>>>>> f830f7ddd916 (NFS: Reduce time spent holding the i_mutex during fallocate())
  const struct file_operations nfs4_file_operations = {
 -#ifdef CONFIG_NFS_V4_2
 -	.llseek		= nfs4_file_llseek,
 -#else
  	.llseek		= nfs_file_llseek,
 -#endif
 -	.read		= new_sync_read,
 -	.write		= new_sync_write,
 -	.read_iter	= nfs_file_read,
 -	.write_iter	= nfs_file_write,
 +	.read		= do_sync_read,
 +	.write		= do_sync_write,
 +	.aio_read	= nfs_file_read,
 +	.aio_write	= nfs_file_write,
  	.mmap		= nfs_file_mmap,
  	.open		= nfs4_file_open,
  	.flush		= nfs_file_flush,
* Unmerged path fs/nfs/nfs42proc.c
* Unmerged path fs/nfs/nfs42proc.c
* Unmerged path fs/nfs/nfs4file.c
