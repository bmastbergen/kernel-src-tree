crypto: nx - Removing CTR mode from NX driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [crypto] nx - Removing CTR mode from NX driver (Herbert Xu) [1241751]
Rebuild_FUZZ: 90.24%
commit-author Leonidas Da Silva Barbosa <leosilva@linux.vnet.ibm.com>
commit 9cfaf082b8775e9f99fa5f2e8b2ae0ca8baff785
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9cfaf082.failed

CTR hardware implementation does not match with kernel spec causing a counter bug
where just low 8 bytes are used for counter, when should be all 16bytes.

Since we already have other counter modes working according with specs
not worth to keep CTR itself on NX.

	Signed-off-by: Leonidas S. Barbosa <leosilva@linux.vnet.ibm.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 9cfaf082b8775e9f99fa5f2e8b2ae0ca8baff785)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/nx/nx.c
#	drivers/crypto/nx/nx.h
diff --cc drivers/crypto/nx/nx.c
index d1771e3494dc,0794f1cc0018..000000000000
--- a/drivers/crypto/nx/nx.c
+++ b/drivers/crypto/nx/nx.c
@@@ -570,15 -596,11 +570,19 @@@ static int nx_register_algs(void
  	if (rc)
  		goto out_unreg_ecb;
  
++<<<<<<< HEAD
 +	rc = crypto_register_alg(&nx_ctr_aes_alg);
 +	if (rc)
 +		goto out_unreg_cbc;
 +
 +	rc = crypto_register_alg(&nx_ctr3686_aes_alg);
++=======
+ 	rc = nx_register_alg(&nx_ctr3686_aes_alg, NX_FC_AES, NX_MODE_AES_CTR);
++>>>>>>> 9cfaf082b877 (crypto: nx - Removing CTR mode from NX driver)
  	if (rc)
- 		goto out_unreg_ctr;
+ 		goto out_unreg_cbc;
  
 -	rc = nx_register_aead(&nx_gcm_aes_alg, NX_FC_AES, NX_MODE_AES_GCM);
 +	rc = crypto_register_alg(&nx_gcm_aes_alg);
  	if (rc)
  		goto out_unreg_ctr3686;
  
@@@ -609,25 -634,25 +613,29 @@@
  	goto out;
  
  out_unreg_s512:
 -	nx_unregister_shash(&nx_shash_sha512_alg, NX_FC_SHA, NX_MODE_SHA,
 -			    NX_PROPS_SHA512);
 +	crypto_unregister_shash(&nx_shash_sha512_alg);
  out_unreg_s256:
 -	nx_unregister_shash(&nx_shash_sha256_alg, NX_FC_SHA, NX_MODE_SHA,
 -			    NX_PROPS_SHA256);
 +	crypto_unregister_shash(&nx_shash_sha256_alg);
  out_unreg_ccm4309:
 -	nx_unregister_aead(&nx_ccm4309_aes_alg, NX_FC_AES, NX_MODE_AES_CCM);
 +	crypto_unregister_alg(&nx_ccm4309_aes_alg);
  out_unreg_ccm:
 -	nx_unregister_aead(&nx_ccm_aes_alg, NX_FC_AES, NX_MODE_AES_CCM);
 +	crypto_unregister_alg(&nx_ccm_aes_alg);
  out_unreg_gcm4106:
 -	nx_unregister_aead(&nx_gcm4106_aes_alg, NX_FC_AES, NX_MODE_AES_GCM);
 +	crypto_unregister_alg(&nx_gcm4106_aes_alg);
  out_unreg_gcm:
 -	nx_unregister_aead(&nx_gcm_aes_alg, NX_FC_AES, NX_MODE_AES_GCM);
 +	crypto_unregister_alg(&nx_gcm_aes_alg);
  out_unreg_ctr3686:
++<<<<<<< HEAD
 +	crypto_unregister_alg(&nx_ctr3686_aes_alg);
 +out_unreg_ctr:
 +	crypto_unregister_alg(&nx_ctr_aes_alg);
++=======
+ 	nx_unregister_alg(&nx_ctr3686_aes_alg, NX_FC_AES, NX_MODE_AES_CTR);
++>>>>>>> 9cfaf082b877 (crypto: nx - Removing CTR mode from NX driver)
  out_unreg_cbc:
 -	nx_unregister_alg(&nx_cbc_aes_alg, NX_FC_AES, NX_MODE_AES_CBC);
 +	crypto_unregister_alg(&nx_cbc_aes_alg);
  out_unreg_ecb:
 -	nx_unregister_alg(&nx_ecb_aes_alg, NX_FC_AES, NX_MODE_AES_ECB);
 +	crypto_unregister_alg(&nx_ecb_aes_alg);
  out:
  	return rc;
  }
@@@ -766,17 -800,23 +774,37 @@@ static int nx_remove(struct vio_dev *vi
  	if (nx_driver.of.status == NX_OKAY) {
  		NX_DEBUGFS_FINI(&nx_driver);
  
++<<<<<<< HEAD
 +		crypto_unregister_alg(&nx_ccm_aes_alg);
 +		crypto_unregister_alg(&nx_ccm4309_aes_alg);
 +		crypto_unregister_alg(&nx_gcm_aes_alg);
 +		crypto_unregister_alg(&nx_gcm4106_aes_alg);
 +		crypto_unregister_alg(&nx_ctr_aes_alg);
 +		crypto_unregister_alg(&nx_ctr3686_aes_alg);
 +		crypto_unregister_alg(&nx_cbc_aes_alg);
 +		crypto_unregister_alg(&nx_ecb_aes_alg);
 +		crypto_unregister_shash(&nx_shash_sha256_alg);
 +		crypto_unregister_shash(&nx_shash_sha512_alg);
 +		crypto_unregister_shash(&nx_shash_aes_xcbc_alg);
++=======
+ 		nx_unregister_shash(&nx_shash_aes_xcbc_alg,
+ 				    NX_FC_AES, NX_MODE_AES_XCBC_MAC, -1);
+ 		nx_unregister_shash(&nx_shash_sha512_alg,
+ 				    NX_FC_SHA, NX_MODE_SHA, NX_PROPS_SHA256);
+ 		nx_unregister_shash(&nx_shash_sha256_alg,
+ 				    NX_FC_SHA, NX_MODE_SHA, NX_PROPS_SHA512);
+ 		nx_unregister_aead(&nx_ccm4309_aes_alg,
+ 				   NX_FC_AES, NX_MODE_AES_CCM);
+ 		nx_unregister_aead(&nx_ccm_aes_alg, NX_FC_AES, NX_MODE_AES_CCM);
+ 		nx_unregister_aead(&nx_gcm4106_aes_alg,
+ 				   NX_FC_AES, NX_MODE_AES_GCM);
+ 		nx_unregister_aead(&nx_gcm_aes_alg,
+ 				   NX_FC_AES, NX_MODE_AES_GCM);
+ 		nx_unregister_alg(&nx_ctr3686_aes_alg,
+ 				  NX_FC_AES, NX_MODE_AES_CTR);
+ 		nx_unregister_alg(&nx_cbc_aes_alg, NX_FC_AES, NX_MODE_AES_CBC);
+ 		nx_unregister_alg(&nx_ecb_aes_alg, NX_FC_AES, NX_MODE_AES_ECB);
++>>>>>>> 9cfaf082b877 (crypto: nx - Removing CTR mode from NX driver)
  	}
  
  	return 0;
diff --cc drivers/crypto/nx/nx.h
index 6c9ecaaead52,591632d9c654..000000000000
--- a/drivers/crypto/nx/nx.h
+++ b/drivers/crypto/nx/nx.h
@@@ -178,12 -185,11 +178,17 @@@ void nx_debugfs_fini(struct nx_crypto_d
  
  extern struct crypto_alg nx_cbc_aes_alg;
  extern struct crypto_alg nx_ecb_aes_alg;
++<<<<<<< HEAD
 +extern struct crypto_alg nx_gcm_aes_alg;
 +extern struct crypto_alg nx_gcm4106_aes_alg;
 +extern struct crypto_alg nx_ctr_aes_alg;
++=======
+ extern struct aead_alg nx_gcm_aes_alg;
+ extern struct aead_alg nx_gcm4106_aes_alg;
++>>>>>>> 9cfaf082b877 (crypto: nx - Removing CTR mode from NX driver)
  extern struct crypto_alg nx_ctr3686_aes_alg;
 -extern struct aead_alg nx_ccm_aes_alg;
 -extern struct aead_alg nx_ccm4309_aes_alg;
 +extern struct crypto_alg nx_ccm_aes_alg;
 +extern struct crypto_alg nx_ccm4309_aes_alg;
  extern struct shash_alg nx_shash_aes_xcbc_alg;
  extern struct shash_alg nx_shash_sha512_alg;
  extern struct shash_alg nx_shash_sha256_alg;
diff --git a/drivers/crypto/nx/nx-aes-ctr.c b/drivers/crypto/nx/nx-aes-ctr.c
index 2617cd4d54dd..e414b5c0f7fb 100644
--- a/drivers/crypto/nx/nx-aes-ctr.c
+++ b/drivers/crypto/nx/nx-aes-ctr.c
@@ -143,27 +143,6 @@ static int ctr3686_aes_nx_crypt(struct blkcipher_desc *desc,
 	return ctr_aes_nx_crypt(desc, dst, src, nbytes);
 }
 
-struct crypto_alg nx_ctr_aes_alg = {
-	.cra_name        = "ctr(aes)",
-	.cra_driver_name = "ctr-aes-nx",
-	.cra_priority    = 300,
-	.cra_flags       = CRYPTO_ALG_TYPE_BLKCIPHER,
-	.cra_blocksize   = 1,
-	.cra_ctxsize     = sizeof(struct nx_crypto_ctx),
-	.cra_type        = &crypto_blkcipher_type,
-	.cra_module      = THIS_MODULE,
-	.cra_init        = nx_crypto_ctx_aes_ctr_init,
-	.cra_exit        = nx_crypto_ctx_exit,
-	.cra_blkcipher = {
-		.min_keysize = AES_MIN_KEY_SIZE,
-		.max_keysize = AES_MAX_KEY_SIZE,
-		.ivsize      = AES_BLOCK_SIZE,
-		.setkey      = ctr_aes_nx_set_key,
-		.encrypt     = ctr_aes_nx_crypt,
-		.decrypt     = ctr_aes_nx_crypt,
-	}
-};
-
 struct crypto_alg nx_ctr3686_aes_alg = {
 	.cra_name        = "rfc3686(ctr(aes))",
 	.cra_driver_name = "rfc3686-ctr-aes-nx",
* Unmerged path drivers/crypto/nx/nx.c
* Unmerged path drivers/crypto/nx/nx.h
