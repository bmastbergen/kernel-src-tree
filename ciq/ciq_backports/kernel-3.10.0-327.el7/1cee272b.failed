hv: move "client/server_monitor_latency" bus attributes to dev_groups

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] move "client/server_monitor_latency" bus attributes to dev_groups (Vitaly Kuznetsov) [1201889]
Rebuild_FUZZ: 97.01%
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 1cee272b0249c5007391da6cf42903b8f30dbc5a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1cee272b.failed

This moves the "client_monitor_latency" and "server_monitor_latency" bus
attributes to the dev_groups structure, removing the need for it to be
in a temporary structure.

	Tested-by: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 1cee272b0249c5007391da6cf42903b8f30dbc5a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel.c
#	drivers/hv/vmbus_drv.c
#	include/linux/hyperv.h
diff --cc drivers/hv/channel.c
index 45ad7011d110,ff61464f57ca..000000000000
--- a/drivers/hv/channel.c
+++ b/drivers/hv/channel.c
@@@ -69,22 -69,12 +69,30 @@@ void vmbus_get_debug_info(struct vmbus_
  	u8 monitor_group = (u8)channel->offermsg.monitorid / 32;
  	u8 monitor_offset = (u8)channel->offermsg.monitorid % 32;
  
++<<<<<<< HEAD
 +	monitorpage = (struct hv_monitor_page *)vmbus_connection.monitor_pages;
 +
 +	debuginfo->servermonitor_pending =
 +			monitorpage->trigger_group[monitor_group].pending;
 +	debuginfo->servermonitor_latency =
 +			monitorpage->latency[monitor_group][monitor_offset];
++=======
+ 	monitorpage = vmbus_connection.monitor_pages[0];
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	debuginfo->servermonitor_connectionid =
  			monitorpage->parameter[monitor_group]
  					[monitor_offset].connectionid.u.id;
  
++<<<<<<< HEAD
 +	monitorpage++;
 +
 +	debuginfo->clientmonitor_pending =
 +			monitorpage->trigger_group[monitor_group].pending;
 +	debuginfo->clientmonitor_latency =
 +			monitorpage->latency[monitor_group][monitor_offset];
++=======
+ 	monitorpage = vmbus_connection.monitor_pages[1];
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	debuginfo->clientmonitor_connectionid =
  			monitorpage->parameter[monitor_group]
  					[monitor_offset].connectionid.u.id;
diff --cc drivers/hv/vmbus_drv.c
index 2ed3b20b532d,461b989835b6..000000000000
--- a/drivers/hv/vmbus_drv.c
+++ b/drivers/hv/vmbus_drv.c
@@@ -46,18 -46,8 +46,22 @@@ static struct tasklet_struct msg_dpc
  static struct completion probe_event;
  static int irq;
  
 +struct resource hyperv_mmio = {
 +	.name  = "hyperv mmio",
 +	.flags = IORESOURCE_MEM,
 +};
 +EXPORT_SYMBOL_GPL(hyperv_mmio);
 +
  struct hv_device_info {
++<<<<<<< HEAD
 +	u32 server_monitor_pending;
 +	u32 server_monitor_latency;
 +	u32 server_monitor_conn_id;
 +	u32 client_monitor_pending;
 +	u32 client_monitor_latency;
++=======
+ 	u32 server_monitor_conn_id;
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	u32 client_monitor_conn_id;
  
  	struct hv_dev_port_info inbound;
@@@ -83,12 -73,8 +87,17 @@@ static void get_channel_info(struct hv_
  
  	vmbus_get_debug_info(device->channel, &debug_info);
  
++<<<<<<< HEAD
 +	info->server_monitor_pending = debug_info.servermonitor_pending;
 +	info->server_monitor_latency = debug_info.servermonitor_latency;
 +	info->server_monitor_conn_id = debug_info.servermonitor_connectionid;
 +
 +	info->client_monitor_pending = debug_info.clientmonitor_pending;
 +	info->client_monitor_latency = debug_info.clientmonitor_latency;
++=======
+ 	info->server_monitor_conn_id = debug_info.servermonitor_connectionid;
+ 
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	info->client_monitor_conn_id = debug_info.clientmonitor_connectionid;
  
  	info->inbound.int_mask = debug_info.inbound.current_interrupt_mask;
@@@ -161,17 -147,9 +170,23 @@@ static ssize_t vmbus_show_device_attr(s
  	} else if (!strcmp(dev_attr->attr.name, "in_write_bytes_avail")) {
  		ret = sprintf(buf, "%d\n",
  			       device_info->inbound.bytes_avail_towrite);
++<<<<<<< HEAD
 +	} else if (!strcmp(dev_attr->attr.name, "server_monitor_pending")) {
 +		ret = sprintf(buf, "%d\n", device_info->server_monitor_pending);
 +	} else if (!strcmp(dev_attr->attr.name, "server_monitor_latency")) {
 +		ret = sprintf(buf, "%d\n", device_info->server_monitor_latency);
  	} else if (!strcmp(dev_attr->attr.name, "server_monitor_conn_id")) {
  		ret = sprintf(buf, "%d\n",
  			       device_info->server_monitor_conn_id);
 +	} else if (!strcmp(dev_attr->attr.name, "client_monitor_pending")) {
 +		ret = sprintf(buf, "%d\n", device_info->client_monitor_pending);
 +	} else if (!strcmp(dev_attr->attr.name, "client_monitor_latency")) {
 +		ret = sprintf(buf, "%d\n", device_info->client_monitor_latency);
++=======
++	} else if (!strcmp(dev_attr->attr.name, "server_monitor_conn_id")) {
++		ret = sprintf(buf, "%d\n",
++			       device_info->server_monitor_conn_id);
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	} else if (!strcmp(dev_attr->attr.name, "client_monitor_conn_id")) {
  		ret = sprintf(buf, "%d\n",
  			       device_info->client_monitor_conn_id);
@@@ -181,6 -159,31 +196,34 @@@
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static u8 channel_monitor_group(struct vmbus_channel *channel)
+ {
+ 	return (u8)channel->offermsg.monitorid / 32;
+ }
+ 
+ static u8 channel_monitor_offset(struct vmbus_channel *channel)
+ {
+ 	return (u8)channel->offermsg.monitorid % 32;
+ }
+ 
+ static u32 channel_pending(struct vmbus_channel *channel,
+ 			   struct hv_monitor_page *monitor_page)
+ {
+ 	u8 monitor_group = channel_monitor_group(channel);
+ 	return monitor_page->trigger_group[monitor_group].pending;
+ }
+ 
+ static u32 channel_latency(struct vmbus_channel *channel,
+ 			   struct hv_monitor_page *monitor_page)
+ {
+ 	u8 monitor_group = channel_monitor_group(channel);
+ 	u8 monitor_offset = channel_monitor_offset(channel);
+ 	return monitor_page->latency[monitor_group][monitor_offset];
+ }
+ 
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  static ssize_t id_show(struct device *dev, struct device_attribute *dev_attr,
  		       char *buf)
  {
@@@ -249,7 -252,62 +292,35 @@@ static ssize_t modalias_show(struct dev
  }
  static DEVICE_ATTR_RO(modalias);
  
 -static ssize_t server_monitor_pending_show(struct device *dev,
 -					   struct device_attribute *dev_attr,
 -					   char *buf)
 -{
 -	struct hv_device *hv_dev = device_to_hv_device(dev);
 -
 -	if (!hv_dev->channel)
 -		return -ENODEV;
 -	return sprintf(buf, "%d\n",
 -		       channel_pending(hv_dev->channel,
 -				       vmbus_connection.monitor_pages[1]));
 -}
 -static DEVICE_ATTR_RO(server_monitor_pending);
 -
 -static ssize_t client_monitor_pending_show(struct device *dev,
 -					   struct device_attribute *dev_attr,
 -					   char *buf)
 -{
 -	struct hv_device *hv_dev = device_to_hv_device(dev);
 -
 -	if (!hv_dev->channel)
 -		return -ENODEV;
 -	return sprintf(buf, "%d\n",
 -		       channel_pending(hv_dev->channel,
 -				       vmbus_connection.monitor_pages[1]));
 -}
 -static DEVICE_ATTR_RO(client_monitor_pending);
  
+ static ssize_t server_monitor_latency_show(struct device *dev,
+ 					   struct device_attribute *dev_attr,
+ 					   char *buf)
+ {
+ 	struct hv_device *hv_dev = device_to_hv_device(dev);
+ 
+ 	if (!hv_dev->channel)
+ 		return -ENODEV;
+ 	return sprintf(buf, "%d\n",
+ 		       channel_latency(hv_dev->channel,
+ 				       vmbus_connection.monitor_pages[0]));
+ }
+ static DEVICE_ATTR_RO(server_monitor_latency);
+ 
+ static ssize_t client_monitor_latency_show(struct device *dev,
+ 					   struct device_attribute *dev_attr,
+ 					   char *buf)
+ {
+ 	struct hv_device *hv_dev = device_to_hv_device(dev);
+ 
+ 	if (!hv_dev->channel)
+ 		return -ENODEV;
+ 	return sprintf(buf, "%d\n",
+ 		       channel_latency(hv_dev->channel,
+ 				       vmbus_connection.monitor_pages[1]));
+ }
+ static DEVICE_ATTR_RO(client_monitor_latency);
+ 
  static struct attribute *vmbus_attrs[] = {
  	&dev_attr_id.attr,
  	&dev_attr_state.attr,
@@@ -257,18 -315,18 +328,30 @@@
  	&dev_attr_class_id.attr,
  	&dev_attr_device_id.attr,
  	&dev_attr_modalias.attr,
++<<<<<<< HEAD
++=======
+ 	&dev_attr_server_monitor_pending.attr,
+ 	&dev_attr_client_monitor_pending.attr,
+ 	&dev_attr_server_monitor_latency.attr,
+ 	&dev_attr_client_monitor_latency.attr,
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	NULL,
  };
  ATTRIBUTE_GROUPS(vmbus);
  
  /* Set up per device attributes in /sys/bus/vmbus/devices/<bus device> */
  static struct device_attribute vmbus_device_attrs[] = {
++<<<<<<< HEAD
 +	__ATTR(server_monitor_pending, S_IRUGO, vmbus_show_device_attr, NULL),
 +	__ATTR(server_monitor_latency, S_IRUGO, vmbus_show_device_attr, NULL),
 +	__ATTR(server_monitor_conn_id, S_IRUGO, vmbus_show_device_attr, NULL),
 +
 +	__ATTR(client_monitor_pending, S_IRUGO, vmbus_show_device_attr, NULL),
 +	__ATTR(client_monitor_latency, S_IRUGO, vmbus_show_device_attr, NULL),
++=======
+ 	__ATTR(server_monitor_conn_id, S_IRUGO, vmbus_show_device_attr, NULL),
+ 
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	__ATTR(client_monitor_conn_id, S_IRUGO, vmbus_show_device_attr, NULL),
  
  	__ATTR(out_intr_mask, S_IRUGO, vmbus_show_device_attr, NULL),
diff --cc include/linux/hyperv.h
index c9f89b16b793,ec1e5033bb99..000000000000
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@@ -588,11 -900,7 +588,15 @@@ enum vmbus_channel_state 
  };
  
  struct vmbus_channel_debug_info {
++<<<<<<< HEAD
 +	u32 servermonitor_pending;
 +	u32 servermonitor_latency;
 +	u32 servermonitor_connectionid;
 +	u32 clientmonitor_pending;
 +	u32 clientmonitor_latency;
++=======
+ 	u32 servermonitor_connectionid;
++>>>>>>> 1cee272b0249 (hv: move "client/server_monitor_latency" bus attributes to dev_groups)
  	u32 clientmonitor_connectionid;
  
  	struct hv_ring_buffer_debug_info inbound;
* Unmerged path drivers/hv/channel.c
* Unmerged path drivers/hv/vmbus_drv.c
* Unmerged path include/linux/hyperv.h
