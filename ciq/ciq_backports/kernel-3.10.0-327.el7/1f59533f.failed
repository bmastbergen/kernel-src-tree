qdisc: validate frames going through the direct_xmit path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jesper Dangaard Brouer <brouer@redhat.com>
commit 1f59533f9ca5634e7b8914252e48aee9d9cbe501
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1f59533f.failed

In commit 50cbe9ab5f8d ("net: Validate xmit SKBs right when we
pull them out of the qdisc") the validation code was moved out of
dev_hard_start_xmit and into dequeue_skb.

However this overlooked the fact that we do not always enqueue
the skb onto a qdisc. First situation is if qdisc have flag
TCQ_F_CAN_BYPASS and qdisc is empty.  Second situation is if
there is no qdisc on the device, which is a common case for
software devices.

Originally spotted and inital patch by Alexander Duyck.
As a result Alex was seeing issues trying to connect to a
vhost_net interface after commit 50cbe9ab5f8d was applied.

Added a call to validate_xmit_skb() in __dev_xmit_skb(), in the
code path for qdiscs with TCQ_F_CAN_BYPASS flag, and in
__dev_queue_xmit() when no qdisc.

Also handle the error situation where dev_hard_start_xmit() could
return a skb list, and does not return dev_xmit_complete(rc) and
falls through to the kfree_skb(), in that situation it should
call kfree_skb_list().

Fixes:  50cbe9ab5f8d ("net: Validate xmit SKBs right when we pull them out of the qdisc")
	Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
	Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1f59533f9ca5634e7b8914252e48aee9d9cbe501)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/dev.c
diff --cc net/core/dev.c
index 1924c9647d47,2f3dbd657570..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -2823,9 -2909,11 +2828,15 @@@ recursion_alert
  	}
  
  	rc = -ENETDOWN;
+ drop:
  	rcu_read_unlock_bh();
  
++<<<<<<< HEAD
 +	kfree_skb(skb);
++=======
+ 	atomic_long_inc(&dev->tx_dropped);
+ 	kfree_skb_list(skb);
++>>>>>>> 1f59533f9ca5 (qdisc: validate frames going through the direct_xmit path)
  	return rc;
  out:
  	rcu_read_unlock_bh();
* Unmerged path net/core/dev.c
