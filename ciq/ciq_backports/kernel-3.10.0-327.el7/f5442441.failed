bonding: permit enslaving interfaces without set_mac support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@gmail.com>
commit f54424412b6b2f64cae4d7c39d981ca14ce0052c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f5442441.failed

Currently we exit if the slave isn't the first slave, doesn't support mac
address setting and fail_over_mac isn't FOM_ACTIVE. It's wrong because we
only require ndo_set_mac_address in case bonding is in active-backup mode
and FOM isn't FOM_ACTIVE.

To fix this - only exit with an error if we're in a/b mode and have
fail_over_mac != FOM_ACTIVE.

Also, maintain current behaviour on the first slave (forcibly change fom to
FOM_ACTIVE) to not break anyone's configuration.

CC: Jay Vosburgh <j.vosburgh@gmail.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f54424412b6b2f64cae4d7c39d981ca14ce0052c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index aa34e1bea1e8,d643807a8e6a..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -1557,15 -1302,20 +1557,32 @@@ int bond_enslave(struct net_device *bon
  	}
  
  	if (slave_ops->ndo_set_mac_address == NULL) {
++<<<<<<< HEAD
 +		if (bond->slave_cnt == 0) {
 +			pr_warning("%s: Warning: The first slave device specified does not support setting the MAC address. Setting fail_over_mac to active.",
 +				   bond_dev->name);
 +			bond->params.fail_over_mac = BOND_FOM_ACTIVE;
 +		} else if (bond->params.fail_over_mac != BOND_FOM_ACTIVE) {
 +			pr_err("%s: Error: The slave device specified does not support setting the MAC address, but fail_over_mac is not set to active.\n",
 +			       bond_dev->name);
 +			res = -EOPNOTSUPP;
 +			goto err_undo_flags;
++=======
+ 		pr_warn("%s: Warning: The slave device specified does not support setting the MAC address\n",
+ 			bond_dev->name);
+ 		if (BOND_MODE(bond) == BOND_MODE_ACTIVEBACKUP &&
+ 		    bond->params.fail_over_mac != BOND_FOM_ACTIVE) {
+ 			if (!bond_has_slaves(bond)) {
+ 				bond->params.fail_over_mac = BOND_FOM_ACTIVE;
+ 				pr_warn("%s: Setting fail_over_mac to active for active-backup mode\n",
+ 					bond_dev->name);
+ 			} else {
+ 				pr_err("%s: Error: The slave device specified does not support setting the MAC address, but fail_over_mac is not set to active\n",
+ 				       bond_dev->name);
+ 				res = -EOPNOTSUPP;
+ 				goto err_undo_flags;
+ 			}
++>>>>>>> f54424412b6b (bonding: permit enslaving interfaces without set_mac support)
  		}
  	}
  
* Unmerged path drivers/net/bonding/bond_main.c
