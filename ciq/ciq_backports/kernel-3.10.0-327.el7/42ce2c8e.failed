ixgbe: fix setting port VLAN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Emil Tantilov <emil.s.tantilov@intel.com>
commit 42ce2c8ef6a9bc1459965f8a5a1e7a87049ef1af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/42ce2c8e.failed

This patch fixes couple of issues introduced by
commit 2b509c0cd292 ("ixgbe: cleanup ixgbe_ndo_set_vf_vlan")

- fix setting of the VLAN inside ixgbe_enable_port_vlan()
- disable the "hide VLAN" bit in PFQDE when port VLAN is disabled

	Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
	Tested-by: Krishneil Singh <Krishneil.k.singh@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 42ce2c8ef6a9bc1459965f8a5a1e7a87049ef1af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
index da242f04e09f,7f37fe7269a7..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
@@@ -1107,6 -1090,65 +1107,68 @@@ int ixgbe_ndo_set_vf_mac(struct net_dev
  	return ixgbe_set_vf_mac(adapter, vf, mac);
  }
  
++<<<<<<< HEAD
++=======
+ static int ixgbe_enable_port_vlan(struct ixgbe_adapter *adapter, int vf,
+ 				  u16 vlan, u8 qos)
+ {
+ 	struct ixgbe_hw *hw = &adapter->hw;
+ 	int err;
+ 
+ 	err = ixgbe_set_vf_vlan(adapter, true, vlan, vf);
+ 	if (err)
+ 		goto out;
+ 
+ 	ixgbe_set_vmvir(adapter, vlan, qos, vf);
+ 	ixgbe_set_vmolr(hw, vf, false);
+ 	if (adapter->vfinfo[vf].spoofchk_enabled)
+ 		hw->mac.ops.set_vlan_anti_spoofing(hw, true, vf);
+ 	adapter->vfinfo[vf].vlan_count++;
+ 
+ 	/* enable hide vlan on X550 */
+ 	if (hw->mac.type >= ixgbe_mac_X550)
+ 		ixgbe_write_qde(adapter, vf, IXGBE_QDE_ENABLE |
+ 				IXGBE_QDE_HIDE_VLAN);
+ 
+ 	adapter->vfinfo[vf].pf_vlan = vlan;
+ 	adapter->vfinfo[vf].pf_qos = qos;
+ 	dev_info(&adapter->pdev->dev,
+ 		 "Setting VLAN %d, QOS 0x%x on VF %d\n", vlan, qos, vf);
+ 	if (test_bit(__IXGBE_DOWN, &adapter->state)) {
+ 		dev_warn(&adapter->pdev->dev,
+ 			 "The VF VLAN has been set, but the PF device is not up.\n");
+ 		dev_warn(&adapter->pdev->dev,
+ 			 "Bring the PF device up before attempting to use the VF device.\n");
+ 	}
+ 
+ out:
+ 	return err;
+ }
+ 
+ static int ixgbe_disable_port_vlan(struct ixgbe_adapter *adapter, int vf)
+ {
+ 	struct ixgbe_hw *hw = &adapter->hw;
+ 	int err;
+ 
+ 	err = ixgbe_set_vf_vlan(adapter, false,
+ 				adapter->vfinfo[vf].pf_vlan, vf);
+ 	ixgbe_clear_vmvir(adapter, vf);
+ 	ixgbe_set_vmolr(hw, vf, true);
+ 	hw->mac.ops.set_vlan_anti_spoofing(hw, false, vf);
+ 	if (adapter->vfinfo[vf].vlan_count)
+ 		adapter->vfinfo[vf].vlan_count--;
+ 
+ 	/* disable hide VLAN on X550 */
+ 	if (hw->mac.type >= ixgbe_mac_X550)
+ 		ixgbe_write_qde(adapter, vf, IXGBE_QDE_ENABLE);
+ 
+ 	adapter->vfinfo[vf].pf_vlan = 0;
+ 	adapter->vfinfo[vf].pf_qos = 0;
+ 
+ 	return err;
+ }
+ 
++>>>>>>> 42ce2c8ef6a9 (ixgbe: fix setting port VLAN)
  int ixgbe_ndo_set_vf_vlan(struct net_device *netdev, int vf, u16 vlan, u8 qos)
  {
  	int err = 0;
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
