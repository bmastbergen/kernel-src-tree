perf build: Remove uneeded variables

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] build: Remove uneeded variables (Jiri Olsa) [1222189]
Rebuild_FUZZ: 92.54%
commit-author Jiri Olsa <jolsa@kernel.org>
commit 8e499ac5376c03fa3ff90ddd7def3fee175aa4b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8e499ac5.failed

Removing uneeded variables from Makefile.perf:

  BUILTIN_OBJS LIB_OBJS GTK_OBJS
  - objects are now hold by in the build Makefiles

  LIB_H
  - header dependencies iare now handled by Build
    framework

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Tested-by: Will Deacon <will.deacon@arm.com>
	Cc: Alexis Berlemont <alexis.berlemont@gmail.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-o85k0klhwqh3fmvryfgcpr95@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 8e499ac5376c03fa3ff90ddd7def3fee175aa4b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Makefile.perf
diff --cc tools/perf/Makefile.perf
index 9842afffa808,d49f7930d544..000000000000
--- a/tools/perf/Makefile.perf
+++ b/tools/perf/Makefile.perf
@@@ -211,220 -212,8 +207,223 @@@ endi
  
  export PERL_PATH
  
 +$(OUTPUT)util/parse-events-flex.c: util/parse-events.l $(OUTPUT)util/parse-events-bison.c
 +	$(QUIET_FLEX)$(FLEX) -o $@ --header-file=$(OUTPUT)util/parse-events-flex.h $(PARSER_DEBUG_FLEX) util/parse-events.l
 +
 +$(OUTPUT)util/parse-events-bison.c: util/parse-events.y
 +	$(QUIET_BISON)$(BISON) -v util/parse-events.y -d $(PARSER_DEBUG_BISON) -o $(OUTPUT)util/parse-events-bison.c -p parse_events_
 +
 +$(OUTPUT)util/pmu-flex.c: util/pmu.l $(OUTPUT)util/pmu-bison.c
 +	$(QUIET_FLEX)$(FLEX) -o $@ --header-file=$(OUTPUT)util/pmu-flex.h util/pmu.l
 +
 +$(OUTPUT)util/pmu-bison.c: util/pmu.y
 +	$(QUIET_BISON)$(BISON) -v util/pmu.y -d -o $(OUTPUT)util/pmu-bison.c -p perf_pmu_
 +
 +$(OUTPUT)util/parse-events.o: $(OUTPUT)util/parse-events-flex.c $(OUTPUT)util/parse-events-bison.c
 +$(OUTPUT)util/pmu.o: $(OUTPUT)util/pmu-flex.c $(OUTPUT)util/pmu-bison.c
 +
  LIB_FILE=$(OUTPUT)libperf.a
  
++<<<<<<< HEAD
 +LIB_H += ../lib/symbol/kallsyms.h
 +LIB_H += ../../include/uapi/linux/perf_event.h
 +LIB_H += ../../include/linux/rbtree.h
 +LIB_H += ../../include/linux/list.h
 +LIB_H += ../../include/uapi/linux/const.h
 +LIB_H += ../include/linux/hash.h
 +LIB_H += ../../include/linux/stringify.h
 +LIB_H += util/include/linux/bitmap.h
 +LIB_H += ../include/linux/bitops.h
 +LIB_H += ../include/asm-generic/bitops/arch_hweight.h
 +LIB_H += ../include/asm-generic/bitops/atomic.h
 +LIB_H += ../include/asm-generic/bitops/const_hweight.h
 +LIB_H += ../include/asm-generic/bitops/find.h
 +LIB_H += ../include/asm-generic/bitops/fls64.h
 +LIB_H += ../include/asm-generic/bitops/fls.h
 +LIB_H += ../include/asm-generic/bitops/__ffs.h
 +LIB_H += ../include/asm-generic/bitops/__fls.h
 +LIB_H += ../include/asm-generic/bitops/hweight.h
 +LIB_H += ../include/asm-generic/bitops.h
 +LIB_H += ../include/linux/compiler.h
 +LIB_H += ../include/linux/log2.h
 +LIB_H += util/include/linux/const.h
 +LIB_H += util/include/linux/ctype.h
 +LIB_H += util/include/linux/kernel.h
 +LIB_H += util/include/linux/list.h
 +LIB_H += ../include/linux/export.h
 +LIB_H += util/include/linux/poison.h
 +LIB_H += util/include/linux/rbtree.h
 +LIB_H += util/include/linux/rbtree_augmented.h
 +LIB_H += util/include/linux/string.h
 +LIB_H += ../include/linux/types.h
 +LIB_H += util/include/linux/linkage.h
 +LIB_H += util/include/asm/asm-offsets.h
 +LIB_H += ../include/asm/bug.h
 +LIB_H += util/include/asm/byteorder.h
 +LIB_H += util/include/asm/swab.h
 +LIB_H += util/include/asm/system.h
 +LIB_H += util/include/asm/uaccess.h
 +LIB_H += util/include/dwarf-regs.h
 +LIB_H += util/include/asm/dwarf2.h
 +LIB_H += util/include/asm/cpufeature.h
 +LIB_H += util/include/asm/unistd_32.h
 +LIB_H += util/include/asm/unistd_64.h
 +LIB_H += perf.h
 +LIB_H += util/annotate.h
 +LIB_H += util/cache.h
 +LIB_H += util/callchain.h
 +LIB_H += util/build-id.h
 +LIB_H += util/db-export.h
 +LIB_H += util/debug.h
 +LIB_H += util/pmu.h
 +LIB_H += util/event.h
 +LIB_H += util/evsel.h
 +LIB_H += util/evlist.h
 +LIB_H += util/exec_cmd.h
 +LIB_H += util/find-vdso-map.c
 +LIB_H += util/levenshtein.h
 +LIB_H += util/machine.h
 +LIB_H += util/map.h
 +LIB_H += util/parse-options.h
 +LIB_H += util/parse-events.h
 +LIB_H += util/quote.h
 +LIB_H += util/util.h
 +LIB_H += util/xyarray.h
 +LIB_H += util/header.h
 +LIB_H += util/help.h
 +LIB_H += util/session.h
 +LIB_H += util/strbuf.h
 +LIB_H += util/strlist.h
 +LIB_H += util/strfilter.h
 +LIB_H += util/svghelper.h
 +LIB_H += util/tool.h
 +LIB_H += util/run-command.h
 +LIB_H += util/sigchain.h
 +LIB_H += util/dso.h
 +LIB_H += util/symbol.h
 +LIB_H += util/color.h
 +LIB_H += util/values.h
 +LIB_H += util/sort.h
 +LIB_H += util/hist.h
 +LIB_H += util/comm.h
 +LIB_H += util/thread.h
 +LIB_H += util/thread_map.h
 +LIB_H += util/trace-event.h
 +LIB_H += util/probe-finder.h
 +LIB_H += util/dwarf-aux.h
 +LIB_H += util/probe-event.h
 +LIB_H += util/pstack.h
 +LIB_H += util/cpumap.h
 +LIB_H += util/top.h
 +LIB_H += $(ARCH_INCLUDE)
 +LIB_H += util/cgroup.h
 +LIB_H += $(LIB_INCLUDE)traceevent/event-parse.h
 +LIB_H += util/target.h
 +LIB_H += util/rblist.h
 +LIB_H += util/intlist.h
 +LIB_H += util/perf_regs.h
 +LIB_H += util/unwind.h
 +LIB_H += util/vdso.h
 +LIB_H += util/tsc.h
 +LIB_H += ui/helpline.h
 +LIB_H += ui/progress.h
 +LIB_H += ui/util.h
 +LIB_H += ui/ui.h
 +LIB_H += util/data.h
 +LIB_H += util/kvm-stat.h
 +LIB_H += util/thread-stack.h
 +
 +LIB_OBJS += $(OUTPUT)util/abspath.o
 +LIB_OBJS += $(OUTPUT)util/alias.o
 +LIB_OBJS += $(OUTPUT)util/annotate.o
 +LIB_OBJS += $(OUTPUT)util/build-id.o
 +LIB_OBJS += $(OUTPUT)util/config.o
 +LIB_OBJS += $(OUTPUT)util/ctype.o
 +LIB_OBJS += $(OUTPUT)util/db-export.o
 +LIB_OBJS += $(OUTPUT)util/pmu.o
 +LIB_OBJS += $(OUTPUT)util/environment.o
 +LIB_OBJS += $(OUTPUT)util/event.o
 +LIB_OBJS += $(OUTPUT)util/evlist.o
 +LIB_OBJS += $(OUTPUT)util/evsel.o
 +LIB_OBJS += $(OUTPUT)util/exec_cmd.o
 +LIB_OBJS += $(OUTPUT)util/find_next_bit.o
 +LIB_OBJS += $(OUTPUT)util/help.o
 +LIB_OBJS += $(OUTPUT)util/kallsyms.o
 +LIB_OBJS += $(OUTPUT)util/levenshtein.o
 +LIB_OBJS += $(OUTPUT)util/parse-options.o
 +LIB_OBJS += $(OUTPUT)util/parse-events.o
 +LIB_OBJS += $(OUTPUT)util/path.o
 +LIB_OBJS += $(OUTPUT)util/rbtree.o
 +LIB_OBJS += $(OUTPUT)util/bitmap.o
 +LIB_OBJS += $(OUTPUT)util/hweight.o
 +LIB_OBJS += $(OUTPUT)util/run-command.o
 +LIB_OBJS += $(OUTPUT)util/quote.o
 +LIB_OBJS += $(OUTPUT)util/strbuf.o
 +LIB_OBJS += $(OUTPUT)util/string.o
 +LIB_OBJS += $(OUTPUT)util/strlist.o
 +LIB_OBJS += $(OUTPUT)util/strfilter.o
 +LIB_OBJS += $(OUTPUT)util/top.o
 +LIB_OBJS += $(OUTPUT)util/usage.o
 +LIB_OBJS += $(OUTPUT)util/wrapper.o
 +LIB_OBJS += $(OUTPUT)util/sigchain.o
 +LIB_OBJS += $(OUTPUT)util/dso.o
 +LIB_OBJS += $(OUTPUT)util/symbol.o
 +LIB_OBJS += $(OUTPUT)util/symbol-elf.o
 +LIB_OBJS += $(OUTPUT)util/color.o
 +LIB_OBJS += $(OUTPUT)util/pager.o
 +LIB_OBJS += $(OUTPUT)util/header.o
 +LIB_OBJS += $(OUTPUT)util/callchain.o
 +LIB_OBJS += $(OUTPUT)util/values.o
 +LIB_OBJS += $(OUTPUT)util/debug.o
 +LIB_OBJS += $(OUTPUT)util/machine.o
 +LIB_OBJS += $(OUTPUT)util/map.o
 +LIB_OBJS += $(OUTPUT)util/pstack.o
 +LIB_OBJS += $(OUTPUT)util/session.o
 +LIB_OBJS += $(OUTPUT)util/comm.o
 +LIB_OBJS += $(OUTPUT)util/thread.o
 +LIB_OBJS += $(OUTPUT)util/thread_map.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-parse.o
 +LIB_OBJS += $(OUTPUT)util/parse-events-flex.o
 +LIB_OBJS += $(OUTPUT)util/parse-events-bison.o
 +LIB_OBJS += $(OUTPUT)util/pmu-flex.o
 +LIB_OBJS += $(OUTPUT)util/pmu-bison.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-read.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-info.o
 +LIB_OBJS += $(OUTPUT)util/trace-event-scripting.o
 +LIB_OBJS += $(OUTPUT)util/trace-event.o
 +LIB_OBJS += $(OUTPUT)util/svghelper.o
 +LIB_OBJS += $(OUTPUT)util/sort.o
 +LIB_OBJS += $(OUTPUT)util/hist.o
 +LIB_OBJS += $(OUTPUT)util/probe-event.o
 +LIB_OBJS += $(OUTPUT)util/util.o
 +LIB_OBJS += $(OUTPUT)util/xyarray.o
 +LIB_OBJS += $(OUTPUT)util/cpumap.o
 +LIB_OBJS += $(OUTPUT)util/cgroup.o
 +LIB_OBJS += $(OUTPUT)util/target.o
 +LIB_OBJS += $(OUTPUT)util/rblist.o
 +LIB_OBJS += $(OUTPUT)util/intlist.o
 +LIB_OBJS += $(OUTPUT)util/vdso.o
 +LIB_OBJS += $(OUTPUT)util/stat.o
 +LIB_OBJS += $(OUTPUT)util/record.o
 +LIB_OBJS += $(OUTPUT)util/srcline.o
 +LIB_OBJS += $(OUTPUT)util/data.o
 +LIB_OBJS += $(OUTPUT)util/tsc.o
 +LIB_OBJS += $(OUTPUT)util/cloexec.o
 +LIB_OBJS += $(OUTPUT)util/thread-stack.o
 +
 +LIB_OBJS += $(OUTPUT)ui/setup.o
 +LIB_OBJS += $(OUTPUT)ui/helpline.o
 +LIB_OBJS += $(OUTPUT)ui/progress.o
 +LIB_OBJS += $(OUTPUT)ui/util.o
 +LIB_OBJS += $(OUTPUT)ui/hist.o
 +LIB_OBJS += $(OUTPUT)ui/stdio/hist.o
 +
 +LIB_OBJS += $(OUTPUT)arch/common.o
 +
 +BUILTIN_OBJS += $(OUTPUT)builtin-probe.o
 +
++=======
++>>>>>>> 8e499ac5376c (perf build: Remove uneeded variables)
  PERFLIBS = $(LIB_FILE) $(LIBAPIKFS) $(LIBTRACEEVENT)
  
  # We choose to avoid "if .. else if .. else .. endif endif"
@@@ -545,25 -260,19 +544,30 @@@ strip: $(PROGRAMS) $(OUTPUT)per
  
  PERF_IN := $(OUTPUT)perf-in.o
  
 -export srctree OUTPUT RM CC LD AR CFLAGS V BISON FLEX
 +export srctree OUTPUT RM CC LD AR CFLAGS V
  build := -f $(srctree)/tools/build/Makefile.build dir=. obj
  
 -$(PERF_IN): $(OUTPUT)PERF-VERSION-FILE $(OUTPUT)common-cmds.h FORCE
 +$(PERF_IN): $(OUTPUT)common-cmds.h FORCE
  	@$(MAKE) $(build)=perf
  
++<<<<<<< HEAD
 +$(OUTPUT)perf.o: perf.c $(OUTPUT)common-cmds.h $(OUTPUT)PERF-CFLAGS
 +	$(QUIET_CC)$(CC) -include $(OUTPUT)PERF-VERSION-FILE \
 +		'-DPERF_HTML_PATH="$(htmldir_SQ)"' \
 +		$(CFLAGS) -c $(filter %.c,$^) -o $@
 +
 +$(OUTPUT)perf: $(OUTPUT)perf.o $(BUILTIN_OBJS) $(PERFLIBS) $(PERF_IN)
 +	$(QUIET_LINK)$(CC) $(CFLAGS) $(LDFLAGS) $(OUTPUT)perf.o \
 +               $(BUILTIN_OBJS) $(PERF_IN) $(LIBS) -o $@
++=======
+ $(OUTPUT)perf: $(PERFLIBS) $(PERF_IN)
+ 	$(QUIET_LINK)$(CC) $(CFLAGS) $(LDFLAGS) $(PERF_IN) $(LIBS) -o $@
++>>>>>>> 8e499ac5376c (perf build: Remove uneeded variables)
  
 -$(GTK_IN): FORCE
 -	@$(MAKE) $(build)=gtk
 +$(GTK_OBJS): $(OUTPUT)%.o: %.c $(LIB_H)
 +	$(QUIET_CC)$(CC) -o $@ -c -fPIC $(CFLAGS) $(GTK_CFLAGS) $<
  
 -$(OUTPUT)libperf-gtk.so: $(GTK_IN) $(PERFLIBS)
 +$(OUTPUT)libperf-gtk.so: $(GTK_OBJS) $(PERFLIBS)
  	$(QUIET_LINK)$(CC) -o $@ -shared $(LDFLAGS) $(filter %.o,$^) $(GTK_LIBS)
  
  $(OUTPUT)common-cmds.h: util/generate-cmdlist.sh command-list.txt
@@@ -683,26 -348,15 +687,30 @@@ $(OUTPUT)perf-read-vdsox32: perf-read-v
  	$(QUIET_CC)$(CC) -mx32 $(filter -static,$(LDFLAGS)) -Wall -Werror -o $@ perf-read-vdso.c
  endif
  
- $(LIB_OBJS) $(BUILTIN_OBJS): $(LIB_H)
- $(patsubst perf-%,%.o,$(PROGRAMS)): $(LIB_H) $(wildcard */*.h)
+ $(patsubst perf-%,%.o,$(PROGRAMS)): $(wildcard */*.h)
  
 -LIBPERF_IN := $(OUTPUT)libperf-in.o
 -
 -$(LIBPERF_IN): FORCE
 -	@$(MAKE) $(build)=libperf
 -
 +# we compile into subdirectories. if the target directory is not the source directory, they might not exists. So
 +# we depend the various files onto their directories.
 +DIRECTORY_DEPS = $(LIB_OBJS) $(BUILTIN_OBJS) $(GTK_OBJS)
 +DIRECTORY_DEPS += $(OUTPUT)PERF-VERSION-FILE $(OUTPUT)common-cmds.h
 +# no need to add flex objects, because they depend on bison ones
 +DIRECTORY_DEPS += $(OUTPUT)util/parse-events-bison.c
 +DIRECTORY_DEPS += $(OUTPUT)util/pmu-bison.c
 +
 +OUTPUT_DIRECTORIES := $(sort $(dir $(DIRECTORY_DEPS)))
 +
++<<<<<<< HEAD
 +$(DIRECTORY_DEPS): | $(OUTPUT_DIRECTORIES)
 +# In the second step, we make a rule to actually create these directories
 +$(OUTPUT_DIRECTORIES):
 +	$(QUIET_MKDIR)$(MKDIR) -p $@ 2>/dev/null
 +
 +$(LIB_FILE): $(LIB_OBJS)
 +	$(QUIET_AR)$(RM) $@ && $(AR) rcs $@ $(LIB_OBJS)
++=======
+ $(LIB_FILE): $(LIBPERF_IN)
+ 	$(QUIET_AR)$(RM) $@ && $(AR) rcs $@ $(LIBPERF_IN) $(LIB_OBJS)
++>>>>>>> 8e499ac5376c (perf build: Remove uneeded variables)
  
  # libtraceevent.a
  TE_SOURCES = $(wildcard $(TRACE_EVENT_DIR)*.[ch])
@@@ -886,7 -540,7 +894,11 @@@ config-clean
  	@$(MAKE) -C config/feature-checks clean >/dev/null
  
  clean: $(LIBTRACEEVENT)-clean $(LIBAPIKFS)-clean config-clean
++<<<<<<< HEAD
 +	$(call QUIET_CLEAN, core-objs)  $(RM) $(LIB_OBJS) $(BUILTIN_OBJS) $(LIB_FILE) $(OUTPUT)perf-archive $(OUTPUT)perf-with-kcore $(OUTPUT)perf.o $(LANG_BINDINGS) $(GTK_OBJS)
++=======
+ 	$(call QUIET_CLEAN, core-objs)  $(RM) $(LIB_FILE) $(OUTPUT)perf-archive $(OUTPUT)perf-with-kcore $(LANG_BINDINGS)
++>>>>>>> 8e499ac5376c (perf build: Remove uneeded variables)
  	@find . -name '*.o' -delete -o -name '\.*.cmd' -delete -o -name '\.*.d' -delete
  	@$(RM) .config-detected
  	$(call QUIET_CLEAN, core-progs) $(RM) $(ALL_PROGRAMS) perf perf-read-vdso32 perf-read-vdsox32
* Unmerged path tools/perf/Makefile.perf
