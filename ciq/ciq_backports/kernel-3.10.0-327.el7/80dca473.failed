crypto: aesni - fix counter overflow handling in "by8" variant

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [crypto] aesni: fix counter overflow handling in "by8" variant (Herbert Xu) [1174971]
Rebuild_FUZZ: 90.43%
commit-author Mathias Krause <minipli@googlemail.com>
commit 80dca4734b3561be59879b02bce359b6f661e921
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/80dca473.failed

The "by8" CTR AVX implementation fails to propperly handle counter
overflows. That was the reason it got disabled in commit 7da4b29d496b
("crypto: aesni - disable "by8" AVX CTR optimization").

Fix the overflow handling by incrementing the counter block as a double
quad word, i.e. a 128 bit, and testing for overflows afterwards. We need
to use VPTEST to do so as VPADD* does not set the flags itself and
silently drops the carry bit.

As this change adds branches to the hot path, minor performance
regressions  might be a side effect. But, OTOH, we now have a conforming
implementation -- the preferable goal.

A tcrypt test on a SandyBridge system (i7-2620M) showed almost identical
numbers for the old and this version with differences within the noise
range. A dm-crypt test with the fixed version gave even slightly better
results for this version. So the performance impact might not be as big
as expected.

	Tested-by: Romain Francoise <romain@orebokech.com>
	Signed-off-by: Mathias Krause <minipli@googlemail.com>
	Cc: Chandramouli Narayanan <mouli@linux.intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 80dca4734b3561be59879b02bce359b6f661e921)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/crypto/aes_ctrby8_avx-x86_64.S
* Unmerged path arch/x86/crypto/aes_ctrby8_avx-x86_64.S
* Unmerged path arch/x86/crypto/aes_ctrby8_avx-x86_64.S
