x86, MCE, AMD: Correct thresholding error logging

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] mce: Correct thresholding error logging (Prarit Bhargava) [1217770]
Rebuild_FUZZ: 88.64%
commit-author Chen Yucong <slaoub@gmail.com>
commit 44612a3ac671d7b9a9b987ab73dcc776204ac4d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/44612a3a.failed

mce_setup() does not gather the content of IA32_MCG_STATUS, so it
should be read explicitly. Moreover, we need to clear IA32_MCx_STATUS
to avoid that mce_log() logs the processed threshold event again
at next time.

But we do the logging ourselves and machine_check_poll() is completely
useless there. So kill it.

	Signed-off-by: Chen Yucong <slaoub@gmail.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 44612a3ac671d7b9a9b987ab73dcc776204ac4d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 603df4f74640,9ce64955559d..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -309,21 -308,21 +308,37 @@@ static void amd_threshold_interrupt(voi
  			 * Log the machine check that caused the threshold
  			 * event.
  			 */
++<<<<<<< HEAD
 +			machine_check_poll(MCP_TIMESTAMP,
 +					&__get_cpu_var(mce_poll_banks));
 +
 +			if (high & MASK_OVERFLOW_HI) {
 +				rdmsrl(address, m.misc);
 +				rdmsrl(MSR_IA32_MC0_STATUS + bank * 4,
 +				       m.status);
 +				m.bank = K8_MCE_THRESHOLD_BASE
 +				       + bank * NR_BLOCKS
 +				       + block;
 +				mce_log(&m);
 +				return;
 +			}
++=======
+ 			if (high & MASK_OVERFLOW_HI)
+ 				goto log;
++>>>>>>> 44612a3ac671 (x86, MCE, AMD: Correct thresholding error logging)
  		}
  	}
+ 	return;
+ 
+ log:
+ 	mce_setup(&m);
+ 	rdmsrl(MSR_IA32_MCG_STATUS, m.mcgstatus);
+ 	rdmsrl(address, m.misc);
+ 	rdmsrl(MSR_IA32_MCx_STATUS(bank), m.status);
+ 	m.bank = K8_MCE_THRESHOLD_BASE + bank * NR_BLOCKS + block;
+ 	mce_log(&m);
+ 
+ 	wrmsrl(MSR_IA32_MCx_STATUS(bank), 0);
  }
  
  /*
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
