libiscsi: return new error code when nop times out

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Mike Christie <michaelc@cs.wisc.edu>
commit 09ff742c62a6bbfca7aed485f44c8b16f52e1096
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/09ff742c.failed

When a iscsi nop as ping timedout we were failing with the
common connection error code, ISCSI_ERR_CONN_FAILED. This
patch adds a new error code for this problem so can properly
track/distinguish in userspace.

	Signed-off-by: Mike Christie <michaelc@cs.wisc.edu>
	Acked-by: Vikas Chaudhary <vikas.chaudhary@qlogic.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 09ff742c62a6bbfca7aed485f44c8b16f52e1096)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/libiscsi.c
diff --cc drivers/scsi/libiscsi.c
index 0c863af09254,ea025e4806b6..000000000000
--- a/drivers/scsi/libiscsi.c
+++ b/drivers/scsi/libiscsi.c
@@@ -2082,8 -2096,8 +2082,13 @@@ static void iscsi_check_transport_timeo
  				  "last ping %lu, now %lu\n",
  				  conn->ping_timeout, conn->recv_timeout,
  				  last_recv, conn->last_ping, jiffies);
++<<<<<<< HEAD
 +		spin_unlock(&session->lock);
 +		iscsi_conn_failure(conn, ISCSI_ERR_CONN_FAILED);
++=======
+ 		spin_unlock(&session->frwd_lock);
+ 		iscsi_conn_failure(conn, ISCSI_ERR_NOP_TIMEDOUT);
++>>>>>>> 09ff742c62a6 (libiscsi: return new error code when nop times out)
  		return;
  	}
  
* Unmerged path drivers/scsi/libiscsi.c
diff --git a/include/scsi/iscsi_if.h b/include/scsi/iscsi_if.h
index fd0421c6d40a..95ed9424a11a 100644
--- a/include/scsi/iscsi_if.h
+++ b/include/scsi/iscsi_if.h
@@ -527,6 +527,7 @@ enum iscsi_err {
 	ISCSI_ERR_XMIT_FAILED		= ISCSI_ERR_BASE + 19,
 	ISCSI_ERR_TCP_CONN_CLOSE	= ISCSI_ERR_BASE + 20,
 	ISCSI_ERR_SCSI_EH_SESSION_RST	= ISCSI_ERR_BASE + 21,
+	ISCSI_ERR_NOP_TIMEDOUT		= ISCSI_ERR_BASE + 22,
 };
 
 /*
