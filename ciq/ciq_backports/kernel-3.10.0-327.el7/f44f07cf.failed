ALSA: line6: Clamp values correctly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Clamp values correctly (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 90.62%
commit-author Takashi Iwai <tiwai@suse.de>
commit f44f07cf3910f84b15b2a78c4933d5946bf409cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f44f07cf.failed

The usages of clamp() macro in sound/usb/line6/playback.c are just
wrong, the low and high values are swapped.

	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit f44f07cf3910f84b15b2a78c4933d5946bf409cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/playback.c
diff --cc drivers/staging/line6/playback.c
index f97584b88a0d,97ed593f6010..000000000000
--- a/drivers/staging/line6/playback.c
+++ b/drivers/staging/line6/playback.c
@@@ -38,8 -37,10 +38,15 @@@ static void change_volume(struct urb *u
  		buf_end = p + urb_out->transfer_buffer_length / sizeof(*p);
  
  		for (; p < buf_end; ++p) {
++<<<<<<< HEAD:drivers/staging/line6/playback.c
 +			int val = (*p * volume[chn & 1]) >> 8;
 +			*p = clamp(val, 0x7fff, -0x8000);
++=======
+ 			short pv = le16_to_cpu(*p);
+ 			int val = (pv * volume[chn & 1]) >> 8;
+ 			pv = clamp(val, -0x8000, 0x7fff);
+ 			*p = cpu_to_le16(pv);
++>>>>>>> f44f07cf3910 (ALSA: line6: Clamp values correctly):sound/usb/line6/playback.c
  			++chn;
  		}
  	} else if (bytes_per_frame == 6) {
@@@ -49,9 -51,10 +56,9 @@@
  
  		for (; p < buf_end; p += 3) {
  			int val;
 -
  			val = p[0] + (p[1] << 8) + ((signed char)p[2] << 16);
  			val = (val * volume[chn & 1]) >> 8;
- 			val = clamp(val, 0x7fffff, -0x800000);
+ 			val = clamp(val, -0x800000, 0x7fffff);
  			p[0] = val;
  			p[1] = val >> 8;
  			p[2] = val >> 16;
@@@ -123,8 -123,11 +130,16 @@@ static void add_monitor_signal(struct u
  		buf_end = po + urb_out->transfer_buffer_length / sizeof(*po);
  
  		for (; po < buf_end; ++pi, ++po) {
++<<<<<<< HEAD:drivers/staging/line6/playback.c
 +			int val = *po + ((*pi * volume) >> 8);
 +			*po = clamp(val, 0x7fff, -0x8000);
++=======
+ 			short pov = le16_to_cpu(*po);
+ 			short piv = le16_to_cpu(*pi);
+ 			int val = pov + ((piv * volume) >> 8);
+ 			pov = clamp(val, -0x8000, 0x7fff);
+ 			*po = cpu_to_le16(pov);
++>>>>>>> f44f07cf3910 (ALSA: line6: Clamp values correctly):sound/usb/line6/playback.c
  		}
  	}
  
* Unmerged path drivers/staging/line6/playback.c
