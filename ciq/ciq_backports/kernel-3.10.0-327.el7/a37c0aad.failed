timekeeping: Use ktime_t data for ktime_get_update_offsets_now()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Thomas Gleixner <tglx@linutronix.de>
commit a37c0aad6093575b52432b47b145304f1af18dff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a37c0aad.failed

No need to juggle with timespecs.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: John Stultz <john.stultz@linaro.org>
(cherry picked from commit a37c0aad6093575b52432b47b145304f1af18dff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/timekeeping.c
diff --cc kernel/time/timekeeping.c
index a690422a076b,54d90529f99d..000000000000
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@@ -1591,25 -1667,23 +1591,28 @@@ ktime_t ktime_get_update_offsets_tick(k
  ktime_t ktime_get_update_offsets_now(ktime_t *offs_real, ktime_t *offs_boot,
  							ktime_t *offs_tai)
  {
++<<<<<<< HEAD
 +	struct timekeeper *tk = &timekeeper;
 +	ktime_t now;
++=======
+ 	struct timekeeper *tk = &tk_core.timekeeper;
++>>>>>>> a37c0aad6093 (timekeeping: Use ktime_t data for ktime_get_update_offsets_now())
  	unsigned int seq;
- 	u64 secs, nsecs;
+ 	ktime_t base;
+ 	u64 nsecs;
  
  	do {
 -		seq = read_seqcount_begin(&tk_core.seq);
 +		seq = read_seqcount_begin(&timekeeper_seq);
  
- 		secs = tk->xtime_sec;
+ 		base = tk->base_mono;
  		nsecs = timekeeping_get_ns(tk);
  
  		*offs_real = tk->offs_real;
  		*offs_boot = tk->offs_boot;
  		*offs_tai = tk->offs_tai;
 -	} while (read_seqcount_retry(&tk_core.seq, seq));
 +	} while (read_seqcount_retry(&timekeeper_seq, seq));
  
- 	now = ktime_add_ns(ktime_set(secs, 0), nsecs);
- 	now = ktime_sub(now, *offs_real);
- 	return now;
+ 	return ktime_add_ns(base, nsecs);
  }
  #endif
  
* Unmerged path kernel/time/timekeeping.c
