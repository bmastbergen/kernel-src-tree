perf probe ppc64le: Fix ppc64 ABIv2 symbol decoding

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] probe: ppc64le: Fix ppc64 ABIv2 symbol decoding (Gustavo Duarte) [1223850]
Rebuild_FUZZ: 93.88%
commit-author Ananth N Mavinakayanahalli <ananth@in.ibm.com>
commit c50fc0a43e33a6c3257c5cbb954cd747d7b9a680
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c50fc0a4.failed

ppc64 ELF ABIv2 has a Global Entry Point (GEP) and a Local Entry Point
(LEP). For purposes of probing, we need the LEP - the offset to which is
encoded in st_other.

	Signed-off-by: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
	Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Cc: linuxppc-dev@lists.ozlabs.org
Link: http://lkml.kernel.org/r/ab9cc5e2b9de4cbaaf50f6ef2346a6a81100bad1.1430217967.git.naveen.n.rao@linux.vnet.ibm.com
	Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit c50fc0a43e33a6c3257c5cbb954cd747d7b9a680)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/arch/powerpc/util/sym-handling.c
#	tools/perf/util/symbol.h
diff --cc tools/perf/util/symbol.h
index b0bb802f2d95,90965296c129..000000000000
--- a/tools/perf/util/symbol.h
+++ b/tools/perf/util/symbol.h
@@@ -301,4 -303,14 +301,17 @@@ int setup_list(struct strlist **list, c
  int setup_intlist(struct intlist **list, const char *list_str,
  		  const char *list_name);
  
++<<<<<<< HEAD
++=======
+ #ifdef HAVE_LIBELF_SUPPORT
+ bool elf__needs_adjust_symbols(GElf_Ehdr ehdr);
+ void arch__elf_sym_adjust(GElf_Sym *sym);
+ #endif
+ 
+ #define SYMBOL_A 0
+ #define SYMBOL_B 1
+ 
+ int arch__choose_best_symbol(struct symbol *syma, struct symbol *symb);
+ 
++>>>>>>> c50fc0a43e33 (perf probe ppc64le: Fix ppc64 ABIv2 symbol decoding)
  #endif /* __PERF_SYMBOL */
* Unmerged path tools/perf/arch/powerpc/util/sym-handling.c
* Unmerged path tools/perf/arch/powerpc/util/sym-handling.c
diff --git a/tools/perf/util/symbol-elf.c b/tools/perf/util/symbol-elf.c
index a7ab6063e038..f08800475071 100644
--- a/tools/perf/util/symbol-elf.c
+++ b/tools/perf/util/symbol-elf.c
@@ -771,6 +771,8 @@ static bool want_demangle(bool is_kernel_sym)
 	return is_kernel_sym ? symbol_conf.demangle_kernel : symbol_conf.demangle;
 }
 
+void __weak arch__elf_sym_adjust(GElf_Sym *sym __maybe_unused) { }
+
 int dso__load_sym(struct dso *dso, struct map *map,
 		  struct symsrc *syms_ss, struct symsrc *runtime_ss,
 		  symbol_filter_t filter, int kmodule)
@@ -935,6 +937,8 @@ int dso__load_sym(struct dso *dso, struct map *map,
 		    (sym.st_value & 1))
 			--sym.st_value;
 
+		arch__elf_sym_adjust(&sym);
+
 		if (dso->kernel || kmodule) {
 			char dso_name[PATH_MAX];
 
* Unmerged path tools/perf/util/symbol.h
