tcp: unify tcp_v4_rtx_synack and tcp_v6_rtx_synack

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Octavian Purdila <octavian.purdila@intel.com>
commit 5db92c994982ed826cf38f38d58bd09bc326aef6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/5db92c99.failed

	Signed-off-by: Octavian Purdila <octavian.purdila@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5db92c994982ed826cf38f38d58bd09bc326aef6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp_ipv4.c
#	net/ipv6/tcp_ipv6.c
diff --cc net/ipv4/tcp_ipv4.c
index 7c1eb4426934,597dd9d75210..000000000000
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@@ -842,17 -845,6 +842,20 @@@ static int tcp_v4_send_synack(struct so
  	return err;
  }
  
++<<<<<<< HEAD
 +static int tcp_v4_rtx_synack(struct sock *sk, struct request_sock *req)
 +{
 +	int res = tcp_v4_send_synack(sk, NULL, req, 0);
 +
 +	if (!res) {
 +		TCP_INC_STATS_BH(sock_net(sk), TCP_MIB_RETRANSSEGS);
 +		NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_TCPSYNRETRANS);
 +	}
 +	return res;
 +}
 +
++=======
++>>>>>>> 5db92c994982 (tcp: unify tcp_v4_rtx_synack and tcp_v6_rtx_synack)
  /*
   *	IPv4 request_sock destructor.
   */
diff --cc net/ipv6/tcp_ipv6.c
index 45f11a2930c9,41389bbb08c0..000000000000
--- a/net/ipv6/tcp_ipv6.c
+++ b/net/ipv6/tcp_ipv6.c
@@@ -501,18 -506,6 +501,21 @@@ done
  	return err;
  }
  
++<<<<<<< HEAD
 +static int tcp_v6_rtx_synack(struct sock *sk, struct request_sock *req)
 +{
 +	struct flowi6 fl6;
 +	int res;
 +
 +	res = tcp_v6_send_synack(sk, NULL, &fl6, req, 0);
 +	if (!res) {
 +		TCP_INC_STATS_BH(sock_net(sk), TCP_MIB_RETRANSSEGS);
 +		NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_TCPSYNRETRANS);
 +	}
 +	return res;
 +}
++=======
++>>>>>>> 5db92c994982 (tcp: unify tcp_v4_rtx_synack and tcp_v6_rtx_synack)
  
  static void tcp_v6_reqsk_destructor(struct request_sock *req)
  {
diff --git a/include/net/tcp.h b/include/net/tcp.h
index ba45accd7103..13754977dee4 100644
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -1553,6 +1553,8 @@ extern int tcp4_proc_init(void);
 extern void tcp4_proc_exit(void);
 #endif
 
+int tcp_rtx_synack(struct sock *sk, struct request_sock *req);
+
 /* TCP af-specific functions */
 struct tcp_sock_af_ops {
 #ifdef CONFIG_TCP_MD5SIG
* Unmerged path net/ipv4/tcp_ipv4.c
diff --git a/net/ipv4/tcp_output.c b/net/ipv4/tcp_output.c
index 3e023b66a2fc..4922c9e1f0f3 100644
--- a/net/ipv4/tcp_output.c
+++ b/net/ipv4/tcp_output.c
@@ -3261,3 +3261,18 @@ void tcp_send_probe0(struct sock *sk)
 					  TCP_RTO_MAX);
 	}
 }
+
+int tcp_rtx_synack(struct sock *sk, struct request_sock *req)
+{
+	const struct tcp_request_sock_ops *af_ops = tcp_rsk(req)->af_specific;
+	struct flowi fl;
+	int res;
+
+	res = af_ops->send_synack(sk, NULL, &fl, req, 0, NULL);
+	if (!res) {
+		TCP_INC_STATS_BH(sock_net(sk), TCP_MIB_RETRANSSEGS);
+		NET_INC_STATS_BH(sock_net(sk), LINUX_MIB_TCPSYNRETRANS);
+	}
+	return res;
+}
+EXPORT_SYMBOL(tcp_rtx_synack);
* Unmerged path net/ipv6/tcp_ipv6.c
