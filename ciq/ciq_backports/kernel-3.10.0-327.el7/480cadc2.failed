scsi: Fix qemu boot hang problem

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] Fix qemu boot hang problem (Ewan Milne) [1109348]
Rebuild_FUZZ: 89.66%
commit-author Guenter Roeck <linux@roeck-us.net>
commit 480cadc2b7e0fa2bbab20141efb547dfe0c3707c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/480cadc2.failed

The latest kernel fails to boot qemu arm images when using scsi
for disk access. Boot gets stuck after the following messages.

brd: module loaded
sym53c8xx 0000:00:0c.0: enabling device (0100 -> 0103)
sym0: <895a> rev 0x0 at pci 0000:00:0c.0 irq 93
sym0: No NVRAM, ID 7, Fast-40, LVD, parity checking
sym0: SCSI BUS has been reset.
scsi host0: sym-2.2.3

Bisect points to commit 71e75c97f97a ("scsi: convert device_busy to
atomic_t"). Code inspection shows the following suspicious change
in scsi_request_fn.

out_delay:
-       if (sdev->device_busy == 0 && !scsi_device_blocked(sdev))
+       if (atomic_read(&sdev->device_busy) && !scsi_device_blocked(sdev))
		blk_delay_queue(q, SCSI_QUEUE_DELAY);
	}

'sdev->device_busy == 0' was replaced with 'atomic_read(&sdev->device_busy)',
meaning the logic was reversed. Changing this expression to
'!atomic_read(&sdev->device_busy)' fixes the problem.

	Signed-off-by: Guenter Roeck <linux@roeck-us.net>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Acked-by: Jens Axboe <axboe@fb.com>
	Reviewed-by: Venkatesh Srinivas <venkateshs@google.com>
	Reviewed-by: Webb Scales <webbnh@hp.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 480cadc2b7e0fa2bbab20141efb547dfe0c3707c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_lib.c
diff --cc drivers/scsi/scsi_lib.c
index 4ddd184ab02c,ce62e8798cc8..000000000000
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@@ -1644,9 -1772,9 +1644,13 @@@ static void scsi_request_fn(struct requ
  	 */
  	spin_lock_irq(q->queue_lock);
  	blk_requeue_request(q, req);
 -	atomic_dec(&sdev->device_busy);
 +	sdev->device_busy--;
  out_delay:
++<<<<<<< HEAD
 +	if (sdev->device_busy == 0 && !scsi_device_blocked(sdev))
++=======
+ 	if (!atomic_read(&sdev->device_busy) && !scsi_device_blocked(sdev))
++>>>>>>> 480cadc2b7e0 (scsi: Fix qemu boot hang problem)
  		blk_delay_queue(q, SCSI_QUEUE_DELAY);
  }
  
* Unmerged path drivers/scsi/scsi_lib.c
