cxgb4: Add support in cxgb4 to get expansion rom version via ethtool

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit ba3f8cd55f2aaa734ba44d8dd8cfaa6503c83d63
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ba3f8cd5.failed

Add support to get option/expansion rom version flashed in the adapter via
ethtool getdrvinfo function.

	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ba3f8cd55f2aaa734ba44d8dd8cfaa6503c83d63)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
#	drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 4646a2a40271,a22cf932ca35..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -1452,14 -1429,22 +1453,33 @@@ static void get_drvinfo(struct net_devi
  	if (adapter->params.fw_vers)
  		snprintf(info->fw_version, sizeof(info->fw_version),
  			"%u.%u.%u.%u, TP %u.%u.%u.%u",
++<<<<<<< HEAD
 +			FW_HDR_FW_VER_MAJOR_GET(adapter->params.fw_vers),
 +			FW_HDR_FW_VER_MINOR_GET(adapter->params.fw_vers),
 +			FW_HDR_FW_VER_MICRO_GET(adapter->params.fw_vers),
 +			FW_HDR_FW_VER_BUILD_GET(adapter->params.fw_vers),
 +			FW_HDR_FW_VER_MAJOR_GET(adapter->params.tp_vers),
 +			FW_HDR_FW_VER_MINOR_GET(adapter->params.tp_vers),
 +			FW_HDR_FW_VER_MICRO_GET(adapter->params.tp_vers),
 +			FW_HDR_FW_VER_BUILD_GET(adapter->params.tp_vers));
++=======
+ 			FW_HDR_FW_VER_MAJOR_G(adapter->params.fw_vers),
+ 			FW_HDR_FW_VER_MINOR_G(adapter->params.fw_vers),
+ 			FW_HDR_FW_VER_MICRO_G(adapter->params.fw_vers),
+ 			FW_HDR_FW_VER_BUILD_G(adapter->params.fw_vers),
+ 			FW_HDR_FW_VER_MAJOR_G(adapter->params.tp_vers),
+ 			FW_HDR_FW_VER_MINOR_G(adapter->params.tp_vers),
+ 			FW_HDR_FW_VER_MICRO_G(adapter->params.tp_vers),
+ 			FW_HDR_FW_VER_BUILD_G(adapter->params.tp_vers));
+ 
+ 	if (!t4_get_exprom_version(adapter, &exprom_vers))
+ 		snprintf(info->erom_version, sizeof(info->erom_version),
+ 			 "%u.%u.%u.%u",
+ 			 FW_HDR_FW_VER_MAJOR_G(exprom_vers),
+ 			 FW_HDR_FW_VER_MINOR_G(exprom_vers),
+ 			 FW_HDR_FW_VER_MICRO_G(exprom_vers),
+ 			 FW_HDR_FW_VER_BUILD_G(exprom_vers));
++>>>>>>> ba3f8cd55f2a (cxgb4: Add support in cxgb4 to get expansion rom version via ethtool)
  }
  
  static void get_strings(struct net_device *dev, u32 stringset, u8 *data)
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
index 6e8a06e7cea8,9b353a88cbda..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
@@@ -2251,10 -3016,33 +2251,40 @@@ enum fw_hdr_chip 
  	FW_HDR_CHIP_T5
  };
  
++<<<<<<< HEAD
 +#define FW_HDR_FW_VER_MAJOR_GET(x) (((x) >> 24) & 0xff)
 +#define FW_HDR_FW_VER_MINOR_GET(x) (((x) >> 16) & 0xff)
 +#define FW_HDR_FW_VER_MICRO_GET(x) (((x) >> 8) & 0xff)
 +#define FW_HDR_FW_VER_BUILD_GET(x) (((x) >> 0) & 0xff)
++=======
+ #define FW_HDR_FW_VER_MAJOR_S	24
+ #define FW_HDR_FW_VER_MAJOR_M	0xff
+ #define FW_HDR_FW_VER_MAJOR_V(x) \
+ 	((x) << FW_HDR_FW_VER_MAJOR_S)
+ #define FW_HDR_FW_VER_MAJOR_G(x) \
+ 	(((x) >> FW_HDR_FW_VER_MAJOR_S) & FW_HDR_FW_VER_MAJOR_M)
+ 
+ #define FW_HDR_FW_VER_MINOR_S	16
+ #define FW_HDR_FW_VER_MINOR_M	0xff
+ #define FW_HDR_FW_VER_MINOR_V(x) \
+ 	((x) << FW_HDR_FW_VER_MINOR_S)
+ #define FW_HDR_FW_VER_MINOR_G(x) \
+ 	(((x) >> FW_HDR_FW_VER_MINOR_S) & FW_HDR_FW_VER_MINOR_M)
+ 
+ #define FW_HDR_FW_VER_MICRO_S	8
+ #define FW_HDR_FW_VER_MICRO_M	0xff
+ #define FW_HDR_FW_VER_MICRO_V(x) \
+ 	((x) << FW_HDR_FW_VER_MICRO_S)
+ #define FW_HDR_FW_VER_MICRO_G(x) \
+ 	(((x) >> FW_HDR_FW_VER_MICRO_S) & FW_HDR_FW_VER_MICRO_M)
+ 
+ #define FW_HDR_FW_VER_BUILD_S	0
+ #define FW_HDR_FW_VER_BUILD_M	0xff
+ #define FW_HDR_FW_VER_BUILD_V(x) \
+ 	((x) << FW_HDR_FW_VER_BUILD_S)
+ #define FW_HDR_FW_VER_BUILD_G(x) \
+ 	(((x) >> FW_HDR_FW_VER_BUILD_S) & FW_HDR_FW_VER_BUILD_M)
++>>>>>>> ba3f8cd55f2a (cxgb4: Add support in cxgb4 to get expansion rom version via ethtool)
  
  enum fw_hdr_intfver {
  	FW_HDR_INTFVER_NIC      = 0x00,
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index 067eaa5ac000..877f24949730 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@ -990,6 +990,7 @@ int t4_fw_upgrade(struct adapter *adap, unsigned int mbox,
 unsigned int t4_flash_cfg_addr(struct adapter *adapter);
 int t4_get_fw_version(struct adapter *adapter, u32 *vers);
 int t4_get_tp_version(struct adapter *adapter, u32 *vers);
+int t4_get_exprom_version(struct adapter *adapter, u32 *vers);
 int t4_prep_fw(struct adapter *adap, struct fw_info *fw_info,
 	       const u8 *fw_data, unsigned int fw_size,
 	       struct fw_hdr *card_fw, enum dev_state state, int *reset);
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index 500e399e494e..51db85d56ae0 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@ -950,6 +950,43 @@ int t4_get_tp_version(struct adapter *adapter, u32 *vers)
 			     1, vers, 0);
 }
 
+/**
+ *	t4_get_exprom_version - return the Expansion ROM version (if any)
+ *	@adapter: the adapter
+ *	@vers: where to place the version
+ *
+ *	Reads the Expansion ROM header from FLASH and returns the version
+ *	number (if present) through the @vers return value pointer.  We return
+ *	this in the Firmware Version Format since it's convenient.  Return
+ *	0 on success, -ENOENT if no Expansion ROM is present.
+ */
+int t4_get_exprom_version(struct adapter *adap, u32 *vers)
+{
+	struct exprom_header {
+		unsigned char hdr_arr[16];	/* must start with 0x55aa */
+		unsigned char hdr_ver[4];	/* Expansion ROM version */
+	} *hdr;
+	u32 exprom_header_buf[DIV_ROUND_UP(sizeof(struct exprom_header),
+					   sizeof(u32))];
+	int ret;
+
+	ret = t4_read_flash(adap, FLASH_EXP_ROM_START,
+			    ARRAY_SIZE(exprom_header_buf), exprom_header_buf,
+			    0);
+	if (ret)
+		return ret;
+
+	hdr = (struct exprom_header *)exprom_header_buf;
+	if (hdr->hdr_arr[0] != 0x55 || hdr->hdr_arr[1] != 0xaa)
+		return -ENOENT;
+
+	*vers = (FW_HDR_FW_VER_MAJOR_V(hdr->hdr_ver[0]) |
+		 FW_HDR_FW_VER_MINOR_V(hdr->hdr_ver[1]) |
+		 FW_HDR_FW_VER_MICRO_V(hdr->hdr_ver[2]) |
+		 FW_HDR_FW_VER_BUILD_V(hdr->hdr_ver[3]));
+	return 0;
+}
+
 /* Is the given firmware API compatible with the one the driver was compiled
  * with?
  */
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
