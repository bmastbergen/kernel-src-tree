ixgbe: cleanup move setting PFQDE.HIDE_VLAN to support function.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] ixgbe: cleanup move setting PFQDE.HIDE_VLAN to support function (John Greene) [1173786]
Rebuild_FUZZ: 99.21%
commit-author Don Skidmore <donald.c.skidmore@intel.com>
commit 8d697e7e54eed5528c3cd720607af6c1d6032d42
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8d697e7e.failed

Move setting of drop enable to support function.  This not only makes the
code more readable but is also prep for following patches that add
additional MAC support.

	Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 8d697e7e54eed5528c3cd720607af6c1d6032d42)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
index 46bd2a51b591,0c25df506247..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
@@@ -637,24 -619,24 +637,45 @@@ int ixgbe_vf_configuration(struct pci_d
  }
  
  static inline void ixgbe_write_qde(struct ixgbe_adapter *adapter, u32 vf,
++<<<<<<< HEAD
 +                                   u32 qde)
 +{
 +        struct ixgbe_hw *hw = &adapter->hw;
 +        struct ixgbe_ring_feature *vmdq = &adapter->ring_feature[RING_F_VMDQ];
 +        u32 q_per_pool = __ALIGN_MASK(1, ~vmdq->mask);
 +        int i;
 +
 +        for (i = vf * q_per_pool; i < ((vf + 1) * q_per_pool); i++) {
 +                u32 reg;
 +
 +                /* flush previous write */
 +                IXGBE_WRITE_FLUSH(hw);
 +
 +                /* indicate to hardware that we want to set drop enable */
 +                reg = IXGBE_QDE_WRITE | IXGBE_QDE_ENABLE;
 +                reg |= i <<  IXGBE_QDE_IDX_SHIFT;
 +                IXGBE_WRITE_REG(hw, IXGBE_QDE, reg);
 +        }
++=======
+ 				   u32 qde)
+ {
+ 	struct ixgbe_hw *hw = &adapter->hw;
+ 	struct ixgbe_ring_feature *vmdq = &adapter->ring_feature[RING_F_VMDQ];
+ 	u32 q_per_pool = __ALIGN_MASK(1, ~vmdq->mask);
+ 	int i;
+ 
+ 	for (i = vf * q_per_pool; i < ((vf + 1) * q_per_pool); i++) {
+ 		u32 reg;
+ 
+ 		/* flush previous write */
+ 		IXGBE_WRITE_FLUSH(hw);
+ 
+ 		/* indicate to hardware that we want to set drop enable */
+ 		reg = IXGBE_QDE_WRITE | IXGBE_QDE_ENABLE;
+ 		reg |= i <<  IXGBE_QDE_IDX_SHIFT;
+ 		IXGBE_WRITE_REG(hw, IXGBE_QDE, reg);
+ 	}
++>>>>>>> 8d697e7e54ee (ixgbe: cleanup move setting PFQDE.HIDE_VLAN to support function.)
  }
  
  static int ixgbe_vf_reset_msg(struct ixgbe_adapter *adapter, u32 vf)
@@@ -682,7 -667,7 +703,11 @@@
  	reg |= 1 << vf_shift;
  	IXGBE_WRITE_REG(hw, IXGBE_VFTE(reg_offset), reg);
  
++<<<<<<< HEAD
 +	/* RHEL: set drop enable on all queues, needed for 550 enablement */
++=======
+ 	/* force drop enable for all VF Rx queues */
++>>>>>>> 8d697e7e54ee (ixgbe: cleanup move setting PFQDE.HIDE_VLAN to support function.)
  	ixgbe_write_qde(adapter, vf, IXGBE_QDE_ENABLE);
  
  	/* enable receive for vf */
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_sriov.c
