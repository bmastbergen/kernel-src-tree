Fnic: Not probing all the vNICS via fnic_probe on boot

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hiral Shah <hishah@cisco.com>
commit a232bfbe195df4b85ff9e5876534fe4081d9fd9a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a232bfbe.failed

In fnic_dev_wait, Wait for finish to complete at least three times in two
seconds while loop before returning -ETIMEDOUT as sometime
schedule_timeout_uninterruptible takes more than two seconds to wake up.

- Increment fnic version from 1.6.0.11 to 1.6.0.12

	Signed-off-by: Hiral Shah <hishah@cisco.com>
	Signed-off-by: Sesidhar Baddela <sebaddel@cisco.com>
	Signed-off-by: Anil Chintalapati <achintal@cisco.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit a232bfbe195df4b85ff9e5876534fe4081d9fd9a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/fnic/fnic.h
diff --cc drivers/scsi/fnic/fnic.h
index a547c3fee2f5,69dee6838678..000000000000
--- a/drivers/scsi/fnic/fnic.h
+++ b/drivers/scsi/fnic/fnic.h
@@@ -39,7 -39,7 +39,11 @@@
  
  #define DRV_NAME		"fnic"
  #define DRV_DESCRIPTION		"Cisco FCoE HBA Driver"
++<<<<<<< HEAD
 +#define DRV_VERSION		"1.5.0.45a"
++=======
+ #define DRV_VERSION		"1.6.0.12"
++>>>>>>> a232bfbe195d (Fnic: Not probing all the vNICS via fnic_probe on boot)
  #define PFX			DRV_NAME ": "
  #define DFX                     DRV_NAME "%d: "
  
* Unmerged path drivers/scsi/fnic/fnic.h
diff --git a/drivers/scsi/fnic/fnic_main.c b/drivers/scsi/fnic/fnic_main.c
index 33e4ec2bfe73..b7e9c2883532 100644
--- a/drivers/scsi/fnic/fnic_main.c
+++ b/drivers/scsi/fnic/fnic_main.c
@@ -433,21 +433,30 @@ static int fnic_dev_wait(struct vnic_dev *vdev,
 	unsigned long time;
 	int done;
 	int err;
+	int count;
+
+	count = 0;
 
 	err = start(vdev, arg);
 	if (err)
 		return err;
 
-	/* Wait for func to complete...2 seconds max */
+	/* Wait for func to complete.
+	* Sometime schedule_timeout_uninterruptible take long time
+	* to wake up so we do not retry as we are only waiting for
+	* 2 seconds in while loop. By adding count, we make sure
+	* we try atleast three times before returning -ETIMEDOUT
+	*/
 	time = jiffies + (HZ * 2);
 	do {
 		err = finished(vdev, &done);
+		count++;
 		if (err)
 			return err;
 		if (done)
 			return 0;
 		schedule_timeout_uninterruptible(HZ / 10);
-	} while (time_after(time, jiffies));
+	} while (time_after(time, jiffies) || (count < 3));
 
 	return -ETIMEDOUT;
 }
