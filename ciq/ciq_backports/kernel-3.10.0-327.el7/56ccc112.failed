md: fix race when unfreezing sync_action

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] fix race when unfreezing sync_action (Jes Sorensen) [1150149 1173510 1194720]
Rebuild_FUZZ: 94.74%
commit-author NeilBrown <neilb@suse.de>
commit 56ccc1125bc141cf63927eda7febff4216dea2d3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/56ccc112.failed

A recent change removed the need for locking around writing
to "sync_action" (and various other places), but introduced a
subtle race.
When e.g. setting 'reshape' on a 'frozen' array, the 'frozen'
flag is cleared before 'reshape' is set, so the md thread can
get in and start trying recovery - which isn't wanted.

So instead of clearing MD_RECOVERY_FROZEN for any command
except 'frozen', only clear it when each specific command
is parsed.  This allows the handling of 'reshape' to clear
the bit while a lock is held.

Also remove some places where we set MD_RECOVERY_NEEDED,
as it is always set on non-error exit of the function.


	Signed-off-by: NeilBrown <neilb@suse.de>
Fixes: 6791875e2e53 ("md: make reconfig_mutex optional for writes to md sysfs files.")
(cherry picked from commit 56ccc1125bc141cf63927eda7febff4216dea2d3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 12c52aceb5eb,8f10f4ea70ea..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -4229,7 -4237,12 +4229,16 @@@ action_store(struct mddev *mddev, cons
  		int err;
  		if (mddev->pers->start_reshape == NULL)
  			return -EINVAL;
++<<<<<<< HEAD
 +		err = mddev->pers->start_reshape(mddev);
++=======
+ 		err = mddev_lock(mddev);
+ 		if (!err) {
+ 			clear_bit(MD_RECOVERY_FROZEN, &mddev->recovery);
+ 			err = mddev->pers->start_reshape(mddev);
+ 			mddev_unlock(mddev);
+ 		}
++>>>>>>> 56ccc1125bc1 (md: fix race when unfreezing sync_action)
  		if (err)
  			return err;
  		sysfs_notify(&mddev->kobj, NULL, "degraded");
* Unmerged path drivers/md/md.c
