vxlan: fix possible use of uninitialized in vxlan_igmp_{join, leave}

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
commit 149d7549c22045bc777a377720809b108639f9e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/149d7549.failed

Test robot noticed that we check the return of vxlan_igmp_join and leave
but inside them there was a path that it could be used initialized.

It's not really possible because those if() inside these igmp functions
would always match as we can't have sockets of other type in there, but
this way we keep the compiler happy.

Fixes: 56ef9c909b40 ("vxlan: Move socket initialization to within rtnl scope")
	Reported-by: kbuild test robot <fengguang.wu@intel.com>
	Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 149d7549c22045bc777a377720809b108639f9e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index f6bd9cff732e,e75e4b2e6031..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1043,6 -1093,7 +1043,10 @@@ static void vxlan_igmp_join(struct work
  	struct sock *sk = vs->sock->sk;
  	union vxlan_addr *ip = &vxlan->default_dst.remote_ip;
  	int ifindex = vxlan->default_dst.remote_ifindex;
++<<<<<<< HEAD
++=======
+ 	int ret = -EINVAL;
++>>>>>>> 149d7549c220 (vxlan: fix possible use of uninitialized in vxlan_igmp_{join, leave})
  
  	lock_sock(sk);
  	if (ip->sa.sa_family == AF_INET) {
@@@ -1072,6 -1121,7 +1076,10 @@@ static void vxlan_igmp_leave(struct wor
  	struct sock *sk = vs->sock->sk;
  	union vxlan_addr *ip = &vxlan->default_dst.remote_ip;
  	int ifindex = vxlan->default_dst.remote_ifindex;
++<<<<<<< HEAD
++=======
+ 	int ret = -EINVAL;
++>>>>>>> 149d7549c220 (vxlan: fix possible use of uninitialized in vxlan_igmp_{join, leave})
  
  	lock_sock(sk);
  	if (ip->sa.sa_family == AF_INET) {
* Unmerged path drivers/net/vxlan.c
