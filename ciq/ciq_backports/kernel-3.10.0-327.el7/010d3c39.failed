bonding: fix bond_arp_rcv() race of curr_active_slave

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 010d3c3989706d800ae72253773fa6537cc9f74c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/010d3c39.failed

bond->curr_active_slave can be changed between its deferences, even to
NULL, and thus we might panic.

We're always holding the rcu (rx_handler->bond_handle_frame()->bond_arp_rcv())
so fix this by rcu_dereferencing() it and using the saved.

	Reported-by: Ding Tianhong <dingtianhong@huawei.com>
Fixes: aeea64a ("bonding: don't trust arp requests unless active slave really works")
CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Acked-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 010d3c3989706d800ae72253773fa6537cc9f74c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 1769905a03a5,bd70bbc7992c..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2618,11 -2315,12 +2621,18 @@@ int bond_arp_rcv(const struct sk_buff *
  	 * is done to avoid endless looping when we can't reach the
  	 * arp_ip_target and fool ourselves with our own arp requests.
  	 */
+ 
  	if (bond_is_active_slave(slave))
  		bond_validate_arp(bond, slave, sip, tip);
++<<<<<<< HEAD
 +	else if (bond->curr_active_slave &&
 +		 time_after(slave_last_rx(bond, bond->curr_active_slave),
 +			    bond->curr_active_slave->jiffies))
++=======
+ 	else if (curr_active_slave &&
+ 		 time_after(slave_last_rx(bond, curr_active_slave),
+ 			    curr_active_slave->last_link_up))
++>>>>>>> 010d3c398970 (bonding: fix bond_arp_rcv() race of curr_active_slave)
  		bond_validate_arp(bond, slave, tip, sip);
  
  out_unlock:
* Unmerged path drivers/net/bonding/bond_main.c
