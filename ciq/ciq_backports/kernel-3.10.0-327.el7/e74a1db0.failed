net/mlx5_core: Check the return bitmask when querying ISSI

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] mlx5_core: Check the return bitmask when querying ISSI (Amir Vadai) [1164527 1164530 1164531 1164536 1164537]
Rebuild_FUZZ: 96.43%
commit-author Haggai Abramonvsky <hagaya@mellanox.com>
commit e74a1db03326ecdc7c3f54a581b197a26ce5eebe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/e74a1db0.failed

The determination of the supported ISSI versions should be conditioned
on the returned mask, and not only on the return status of the query
ISSI command, fix that.

	Signed-off-by: Haggai Abramovsky <hagaya@mellanox.com>
	Signed-off-by: Majd Dibbiny <majd@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e74a1db03326ecdc7c3f54a581b197a26ce5eebe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index a652cb93ceaa,11c7216a2517..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -668,6 -607,61 +668,64 @@@ clean
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_MLX5_CORE_EN
+ static int mlx5_core_set_issi(struct mlx5_core_dev *dev)
+ {
+ 	u32 query_in[MLX5_ST_SZ_DW(query_issi_in)];
+ 	u32 query_out[MLX5_ST_SZ_DW(query_issi_out)];
+ 	u32 set_in[MLX5_ST_SZ_DW(set_issi_in)];
+ 	u32 set_out[MLX5_ST_SZ_DW(set_issi_out)];
+ 	int err;
+ 	u32 sup_issi;
+ 
+ 	memset(query_in, 0, sizeof(query_in));
+ 	memset(query_out, 0, sizeof(query_out));
+ 
+ 	MLX5_SET(query_issi_in, query_in, opcode, MLX5_CMD_OP_QUERY_ISSI);
+ 
+ 	err = mlx5_cmd_exec_check_status(dev, query_in, sizeof(query_in),
+ 					 query_out, sizeof(query_out));
+ 	if (err) {
+ 		if (((struct mlx5_outbox_hdr *)query_out)->status ==
+ 		    MLX5_CMD_STAT_BAD_OP_ERR) {
+ 			pr_debug("Only ISSI 0 is supported\n");
+ 			return 0;
+ 		}
+ 
+ 		pr_err("failed to query ISSI\n");
+ 		return err;
+ 	}
+ 
+ 	sup_issi = MLX5_GET(query_issi_out, query_out, supported_issi_dw0);
+ 
+ 	if (sup_issi & (1 << 1)) {
+ 		memset(set_in, 0, sizeof(set_in));
+ 		memset(set_out, 0, sizeof(set_out));
+ 
+ 		MLX5_SET(set_issi_in, set_in, opcode, MLX5_CMD_OP_SET_ISSI);
+ 		MLX5_SET(set_issi_in, set_in, current_issi, 1);
+ 
+ 		err = mlx5_cmd_exec_check_status(dev, set_in, sizeof(set_in),
+ 						 set_out, sizeof(set_out));
+ 		if (err) {
+ 			pr_err("failed to set ISSI=1\n");
+ 			return err;
+ 		}
+ 
+ 		dev->issi = 1;
+ 
+ 		return 0;
+ 	} else if (sup_issi & (1 << 0) || !sup_issi) {
+ 		return 0;
+ 	}
+ 
+ 	return -ENOTSUPP;
+ }
+ #endif
+ 
++>>>>>>> e74a1db03326 (net/mlx5_core: Check the return bitmask when querying ISSI)
  static int mlx5_dev_init(struct mlx5_core_dev *dev, struct pci_dev *pdev)
  {
  	struct mlx5_priv *priv = &dev->priv;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
