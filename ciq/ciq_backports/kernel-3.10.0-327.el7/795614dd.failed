ALSA: hda - divide controller and codec dependency on i915 gfx power well

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] hda - divide controller and codec dependency on i915 gfx power well (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 95.71%
commit-author Mengdong Lin <mengdong.lin@intel.com>
commit 795614dde4d3550c3ef72469b1ba4d09d8635202
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/795614dd.failed

This patch can improve power saving for Intel platforms on which only the
display audio codec is in the shared i915 power well:

- Add a flag "need_i915_power" to indicate whether the controller needs the
  i915 power well.

- The driver will always request the i915 power when probing the controller
  and codecs if AZX_DCAPS_I915_POWERWELL is set (either the controller or a
  codec needs this power).

- If the controller needs the i915 power, the power will be held after probe
  until the controller is runtime suspended or S3. If the controller doesn't
  need the power, the power will be released the after probe, and a codec
  that needs the power can request/release the power via bus link_power ops.

Background:
- For Haswell/Broadwell, which has a separate HD-A controller for display audio,
  both the controller and the display codec are in the i915 power well.

- For Baytrail/Braswell, the display and analog audio share the same HDA
  controller and link, and only the display codec is in the i915 power well.

- For Skylake, the display and analog audio share the same HDA controller but
  use separate links. Only the display codec is in the i915 power well. And in
  legacy mode we take the two links as one. So it can follow Baytrail/Braswell.

	Signed-off-by: Mengdong Lin <mengdong.lin@intel.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 795614dde4d3550c3ef72469b1ba4d09d8635202)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/hda_intel.c
diff --cc sound/pci/hda/hda_intel.c
index 1b8eb97f0430,8cd10b8cd41d..000000000000
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@@ -886,10 -902,11 +889,11 @@@ static int azx_runtime_resume(struct de
  	if (chip->disabled || hda->init_failed)
  		return 0;
  
 -	if (!azx_has_pm_runtime(chip))
 +	if (!(chip->driver_caps & AZX_DCAPS_PM_RUNTIME))
  		return 0;
  
- 	if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL) {
+ 	if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL
+ 		&& hda->need_i915_power) {
  		hda_display_power(hda, true);
  		haswell_set_bclk(hda);
  	}
@@@ -1875,8 -1892,17 +1880,21 @@@ static int azx_probe_continue(struct az
  	int dev = chip->dev_index;
  	int err;
  
++<<<<<<< HEAD
 +	/* Request power well for Haswell HDA controller and codec */
++=======
+ 	hda->probe_continued = 1;
+ 
+ 	/* Request display power well for the HDA controller or codec. For
+ 	 * Haswell/Broadwell, both the display HDA controller and codec need
+ 	 * this power. For other platforms, like Baytrail/Braswell, only the
+ 	 * display codec needs the power and it can be released after probe.
+ 	 */
++>>>>>>> 795614dde4d3 (ALSA: hda - divide controller and codec dependency on i915 gfx power well)
  	if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL) {
+ 		/* Assume the controller needs the power by default */
+ 		hda->need_i915_power = 1;
+ 
  #ifdef CONFIG_SND_HDA_I915
  		err = hda_i915_init(hda);
  		if (err < 0)
* Unmerged path sound/pci/hda/hda_intel.c
diff --git a/sound/pci/hda/hda_intel.h b/sound/pci/hda/hda_intel.h
index 46e5bfd13eec..079408880b18 100644
--- a/sound/pci/hda/hda_intel.h
+++ b/sound/pci/hda/hda_intel.h
@@ -44,6 +44,7 @@ struct hda_intel {
 	struct dev_pm_domain hdmi_pm_domain;
 
 	/* i915 component interface */
+	bool need_i915_power:1; /* the hda controller needs i915 power */
 	struct i915_audio_component audio_component;
 	int i915_power_refcount;
 };
