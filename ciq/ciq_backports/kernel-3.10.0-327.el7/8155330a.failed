lib: memzero_explicit: add comment for its usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Daniel Borkmann <dborkman@redhat.com>
commit 8155330aad477c5b1337895a6922df76817f0874
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8155330a.failed

Lets improve the comment to add a note on when to use memzero_explicit()
for those not digging through the git logs. We don't want people to
pollute places with memzero_explicit() where it's not really necessary.

Reference: https://lkml.org/lkml/2015/1/4/190
	Suggested-by: Herbert Xu <herbert@gondor.apana.org.au>
	Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 8155330aad477c5b1337895a6922df76817f0874)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/string.c
diff --cc lib/string.c
index e5878de4f101,d984ec4fd3b7..000000000000
--- a/lib/string.c
+++ b/lib/string.c
@@@ -586,6 -598,27 +586,30 @@@ void *memset(void *s, int c, size_t cou
  EXPORT_SYMBOL(memset);
  #endif
  
++<<<<<<< HEAD
++=======
+ /**
+  * memzero_explicit - Fill a region of memory (e.g. sensitive
+  *		      keying data) with 0s.
+  * @s: Pointer to the start of the area.
+  * @count: The size of the area.
+  *
+  * Note: usually using memset() is just fine (!), but in cases
+  * where clearing out _local_ data at the end of a scope is
+  * necessary, memzero_explicit() should be used instead in
+  * order to prevent the compiler from optimising away zeroing.
+  *
+  * memzero_explicit() doesn't need an arch-specific version as
+  * it just invokes the one of memset() implicitly.
+  */
+ void memzero_explicit(void *s, size_t count)
+ {
+ 	memset(s, 0, count);
+ 	OPTIMIZER_HIDE_VAR(s);
+ }
+ EXPORT_SYMBOL(memzero_explicit);
+ 
++>>>>>>> 8155330aad47 (lib: memzero_explicit: add comment for its usage)
  #ifndef __HAVE_ARCH_MEMCPY
  /**
   * memcpy - Copy one area of memory to another
* Unmerged path lib/string.c
