xfs: separate xflags from xfs_ioctl_setattr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit 29a17c00d4b1b8eab61b85b71cb5a83455a7dc5e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/29a17c00.failed

The setting of the extended flags is down through two separate
interfaces, but they are munged together into xfs_ioctl_setattr
and make that function far more complex than it needs to be.
Separate it out into a helper function along with all the other
common inode changes and transaction manipulations in
xfs_ioctl_setattr().

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit 29a17c00d4b1b8eab61b85b71cb5a83455a7dc5e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_ioctl.c
diff --cc fs/xfs/xfs_ioctl.c
index ff7a7ccc1aa5,b0064bdb7a6e..000000000000
--- a/fs/xfs/xfs_ioctl.c
+++ b/fs/xfs/xfs_ioctl.c
@@@ -1191,44 -1197,9 +1229,50 @@@ xfs_ioctl_setattr
  	}
  
  
++<<<<<<< HEAD
 +	if (mask & FSX_XFLAGS) {
 +		/*
 +		 * Can't change realtime flag if any extents are allocated.
 +		 */
 +		if ((ip->i_d.di_nextents || ip->i_delayed_blks) &&
 +		    (XFS_IS_REALTIME_INODE(ip)) !=
 +		    (fa->fsx_xflags & XFS_XFLAG_REALTIME)) {
 +			code = XFS_ERROR(EINVAL);	/* EFBIG? */
 +			goto error_return;
 +		}
 +
 +		/*
 +		 * If realtime flag is set then must have realtime data.
 +		 */
 +		if ((fa->fsx_xflags & XFS_XFLAG_REALTIME)) {
 +			if ((mp->m_sb.sb_rblocks == 0) ||
 +			    (mp->m_sb.sb_rextsize == 0) ||
 +			    (ip->i_d.di_extsize % mp->m_sb.sb_rextsize)) {
 +				code = XFS_ERROR(EINVAL);
 +				goto error_return;
 +			}
 +		}
 +
 +		/*
 +		 * Can't modify an immutable/append-only file unless
 +		 * we have appropriate permission.
 +		 */
 +		if ((ip->i_d.di_flags &
 +				(XFS_DIFLAG_IMMUTABLE|XFS_DIFLAG_APPEND) ||
 +		     (fa->fsx_xflags &
 +				(XFS_XFLAG_IMMUTABLE | XFS_XFLAG_APPEND))) &&
 +		    !capable(CAP_LINUX_IMMUTABLE)) {
 +			code = XFS_ERROR(EPERM);
 +			goto error_return;
 +		}
 +	}
 +
 +	xfs_trans_ijoin(tp, ip, 0);
++=======
+ 	code = xfs_ioctl_setattr_xflags(tp, ip, fa);
+ 	if (code)
+ 		goto error_return;
++>>>>>>> 29a17c00d4b1 (xfs: separate xflags from xfs_ioctl_setattr)
  
  	/*
  	 * Change file ownership.  Must be the owner or privileged.
* Unmerged path fs/xfs/xfs_ioctl.c
