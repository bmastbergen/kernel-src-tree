ALSA: line6: Drop superfluous snd_device for rawmidi

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Drop superfluous snd_device for rawmidi (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 93.88%
commit-author Takashi Iwai <tiwai@suse.de>
commit aaa68d2f295147a7b648bbab632557c7429fb8cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/aaa68d2f.failed

Like the previous fix for PCM, attach the card-specific resource into
rawmidi->private_data instead of handling in a snd_device object.
This simplifies the code and structure.

	Tested-by: Chris Rorvick <chris@rorvick.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit aaa68d2f295147a7b648bbab632557c7429fb8cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/midi.c
diff --cc drivers/staging/line6/midi.c
index e3f9a53dbd96,ebca5ebcfecc..000000000000
--- a/drivers/staging/line6/midi.c
+++ b/drivers/staging/line6/midi.c
@@@ -256,12 -250,13 +248,17 @@@ static int snd_line6_new_midi(struct us
  }
  
  /* MIDI device destructor */
- static int snd_line6_midi_free(struct snd_device *device)
+ static void snd_line6_midi_free(struct snd_rawmidi *rmidi)
  {
++<<<<<<< HEAD:drivers/staging/line6/midi.c
 +	struct snd_line6_midi *line6midi = device->device_data;
++=======
+ 	struct snd_line6_midi *line6midi = rmidi->private_data;
+ 
++>>>>>>> aaa68d2f2951 (ALSA: line6: Drop superfluous snd_device for rawmidi):sound/usb/line6/midi.c
  	line6_midibuf_destroy(&line6midi->midibuf_in);
  	line6_midibuf_destroy(&line6midi->midibuf_out);
- 	return 0;
+ 	kfree(line6midi);
  }
  
  /*
@@@ -269,52 -264,40 +266,68 @@@
  */
  int line6_init_midi(struct usb_line6 *line6)
  {
- 	static struct snd_device_ops midi_ops = {
- 		.dev_free = snd_line6_midi_free,
- 	};
- 
  	int err;
+ 	struct snd_rawmidi *rmidi;
  	struct snd_line6_midi *line6midi;
  
 -	if (!(line6->properties->capabilities & LINE6_CAP_CONTROL)) {
 +	if (!(line6->properties->capabilities & LINE6_BIT_CONTROL)) {
  		/* skip MIDI initialization and report success */
  		return 0;
  	}
  
- 	line6midi = kzalloc(sizeof(struct snd_line6_midi), GFP_KERNEL);
+ 	err = snd_line6_new_midi(line6, &rmidi);
+ 	if (err < 0)
+ 		return err;
  
- 	if (line6midi == NULL)
+ 	line6midi = kzalloc(sizeof(struct snd_line6_midi), GFP_KERNEL);
+ 	if (!line6midi)
  		return -ENOMEM;
  
++<<<<<<< HEAD:drivers/staging/line6/midi.c
 +	err = line6_midibuf_init(&line6midi->midibuf_in, MIDI_BUFFER_SIZE, 0);
 +	if (err < 0) {
 +		kfree(line6midi);
 +		return err;
 +	}
 +
 +	err = line6_midibuf_init(&line6midi->midibuf_out, MIDI_BUFFER_SIZE, 1);
 +	if (err < 0) {
 +		kfree(line6midi->midibuf_in.buf);
 +		kfree(line6midi);
 +		return err;
 +	}
 +
 +	line6midi->line6 = line6;
 +	line6->line6midi = line6midi;
 +
 +	err = snd_device_new(line6->card, SNDRV_DEV_RAWMIDI, line6midi,
 +			     &midi_ops);
 +	if (err < 0)
 +		return err;
 +
 +	snd_card_set_dev(line6->card, line6->ifcdev);
 +
 +	err = snd_line6_new_midi(line6midi);
 +	if (err < 0)
 +		return err;
++=======
+ 	rmidi->private_data = line6midi;
+ 	rmidi->private_free = snd_line6_midi_free;
++>>>>>>> aaa68d2f2951 (ALSA: line6: Drop superfluous snd_device for rawmidi):sound/usb/line6/midi.c
  
  	init_waitqueue_head(&line6midi->send_wait);
  	spin_lock_init(&line6midi->send_urb_lock);
  	spin_lock_init(&line6midi->midi_transmit_lock);
+ 	line6midi->line6 = line6;
+ 
+ 	err = line6_midibuf_init(&line6midi->midibuf_in, MIDI_BUFFER_SIZE, 0);
+ 	if (err < 0)
+ 		return err;
+ 
+ 	err = line6_midibuf_init(&line6midi->midibuf_out, MIDI_BUFFER_SIZE, 1);
+ 	if (err < 0)
+ 		return err;
+ 
+ 	line6->line6midi = line6midi;
  	return 0;
  }
 -EXPORT_SYMBOL_GPL(line6_init_midi);
* Unmerged path drivers/staging/line6/midi.c
