sched/idle, x86: Switch from TS_POLLING to TIF_POLLING_NRFLAG

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] sched/idle: Switch from TS_POLLING to TIF_POLLING_NRFLAG (Rik van Riel) [1197889]
Rebuild_FUZZ: 95.73%
commit-author Peter Zijlstra <peterz@infradead.org>
commit f80c5b39b80ab4d52acd940c03b89948cafdbd18
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f80c5b39.failed

Standardize the idle polling indicator to TIF_POLLING_NRFLAG such that
both TIF_NEED_RESCHED and TIF_POLLING_NRFLAG are in the same word.
This will allow us, using fetch_or(), to both set NEED_RESCHED and
check for POLLING_NRFLAG in a single operation and avoid pointless
wakeups.

Changing from the non-atomic thread_info::status flags to the atomic
thread_info::flags shouldn't be a big issue since most polling state
changes were followed/preceded by a full memory barrier anyway.

Also, fix up the apm_32 idle function, clearly that was forgotten in
the last conversion. The default idle state is !POLLING so just kill
the lot.

	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Jiri Kosina <jkosina@suse.cz>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Oleg Nesterov <oleg@redhat.com>
	Cc: Steven Rostedt <srostedt@redhat.com>
Link: http://lkml.kernel.org/n/tip-7yksmqtlv4nfowmlqr1rifoi@git.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit f80c5b39b80ab4d52acd940c03b89948cafdbd18)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/thread_info.h
diff --cc arch/x86/include/asm/thread_info.h
index f9513ef09010,854053889d4d..000000000000
--- a/arch/x86/include/asm/thread_info.h
+++ b/arch/x86/include/asm/thread_info.h
@@@ -89,7 -83,7 +89,11 @@@ struct thread_info 
  #define TIF_FORK		18	/* ret_from_fork */
  #define TIF_NOHZ		19	/* in adaptive nohz mode */
  #define TIF_MEMDIE		20	/* is terminating due to OOM killer */
++<<<<<<< HEAD
 +#define TIF_DEBUG		21	/* uses debug registers */
++=======
+ #define TIF_POLLING_NRFLAG	21	/* idle is polling for TIF_NEED_RESCHED */
++>>>>>>> f80c5b39b80a (sched/idle, x86: Switch from TS_POLLING to TIF_POLLING_NRFLAG)
  #define TIF_IO_BITMAP		22	/* uses I/O bitmap */
  #define TIF_FORCED_TF		24	/* true if TF in eflags artificially */
  #define TIF_BLOCKSTEP		25	/* set when we want DEBUGCTLMSR_BTF */
@@@ -113,7 -107,7 +117,11 @@@
  #define _TIF_IA32		(1 << TIF_IA32)
  #define _TIF_FORK		(1 << TIF_FORK)
  #define _TIF_NOHZ		(1 << TIF_NOHZ)
++<<<<<<< HEAD
 +#define _TIF_DEBUG		(1 << TIF_DEBUG)
++=======
+ #define _TIF_POLLING_NRFLAG	(1 << TIF_POLLING_NRFLAG)
++>>>>>>> f80c5b39b80a (sched/idle, x86: Switch from TS_POLLING to TIF_POLLING_NRFLAG)
  #define _TIF_IO_BITMAP		(1 << TIF_IO_BITMAP)
  #define _TIF_FORCED_TF		(1 << TIF_FORCED_TF)
  #define _TIF_BLOCKSTEP		(1 << TIF_BLOCKSTEP)
* Unmerged path arch/x86/include/asm/thread_info.h
diff --git a/arch/x86/kernel/apm_32.c b/arch/x86/kernel/apm_32.c
index 53a4e2744846..8fdcec62d713 100644
--- a/arch/x86/kernel/apm_32.c
+++ b/arch/x86/kernel/apm_32.c
@@ -844,21 +844,10 @@ static int apm_do_idle(void)
 	int polling;
 	int err = 0;
 
-	polling = !!(current_thread_info()->status & TS_POLLING);
-	if (polling) {
-		current_thread_info()->status &= ~TS_POLLING;
-		/*
-		 * TS_POLLING-cleared state must be visible before we
-		 * test NEED_RESCHED:
-		 */
-		smp_mb();
-	}
 	if (!need_resched()) {
 		idled = 1;
 		ret = apm_bios_call_simple(APM_FUNC_IDLE, 0, 0, &eax, &err);
 	}
-	if (polling)
-		current_thread_info()->status |= TS_POLLING;
 
 	if (!idled)
 		return 0;
