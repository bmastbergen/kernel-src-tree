cxgb4 : Disable recursive mailbox commands when enabling vi

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] cxgb4: Disable recursive mailbox commands when enabling vi (Sai Vemuri) [1251611]
Rebuild_FUZZ: 99.15%
commit-author Anish Bhatt <anish@chelsio.com>
commit 30f00847953e3aa3f710d62ffd37b42042807900
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/30f00847.failed

Enabling a Virtual Interface can result in an interrupt during the processing
 of the VI Enable command and, in some paths, result in an attempt to issue
another command in the interrupt context, eventually crashing the system. Thus,
 we disable interrupts during the course of the VI Enable command and ensure
enable doesn't sleep.

	Signed-off-by: Anish Bhatt <anish@chelsio.com>
	Signed-off-by: Casey Leedom <leedom@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 30f00847953e3aa3f710d62ffd37b42042807900)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
#	drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 0c588dc02bae,4247356c16ff..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -624,8 -673,13 +624,18 @@@ static int link_start(struct net_devic
  	if (ret == 0)
  		ret = t4_link_start(pi->adapter, mb, pi->tx_chan,
  				    &pi->link_cfg);
++<<<<<<< HEAD
 +	if (ret == 0)
 +		ret = t4_enable_vi(pi->adapter, mb, pi->viid, true, true);
++=======
+ 	if (ret == 0) {
+ 		local_bh_disable();
+ 		ret = t4_enable_vi_params(pi->adapter, mb, pi->viid, true,
+ 					  true, CXGB4_DCB_ENABLED);
+ 		local_bh_enable();
+ 	}
+ 
++>>>>>>> 30f00847953e (cxgb4 : Disable recursive mailbox commands when enabling vi)
  	return ret;
  }
  
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index 71d1d4fe87b2,a853133d8db8..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@@ -3590,6 -3535,33 +3590,36 @@@ int t4_set_addr_hash(struct adapter *ad
  }
  
  /**
++<<<<<<< HEAD
++=======
+  *      t4_enable_vi_params - enable/disable a virtual interface
+  *      @adap: the adapter
+  *      @mbox: mailbox to use for the FW command
+  *      @viid: the VI id
+  *      @rx_en: 1=enable Rx, 0=disable Rx
+  *      @tx_en: 1=enable Tx, 0=disable Tx
+  *      @dcb_en: 1=enable delivery of Data Center Bridging messages.
+  *
+  *      Enables/disables a virtual interface.  Note that setting DCB Enable
+  *      only makes sense when enabling a Virtual Interface ...
+  */
+ int t4_enable_vi_params(struct adapter *adap, unsigned int mbox,
+ 			unsigned int viid, bool rx_en, bool tx_en, bool dcb_en)
+ {
+ 	struct fw_vi_enable_cmd c;
+ 
+ 	memset(&c, 0, sizeof(c));
+ 	c.op_to_viid = htonl(FW_CMD_OP(FW_VI_ENABLE_CMD) | FW_CMD_REQUEST |
+ 			     FW_CMD_EXEC | FW_VI_ENABLE_CMD_VIID(viid));
+ 
+ 	c.ien_to_len16 = htonl(FW_VI_ENABLE_CMD_IEN(rx_en) |
+ 			       FW_VI_ENABLE_CMD_EEN(tx_en) | FW_LEN16(c) |
+ 			       FW_VI_ENABLE_CMD_DCB_INFO(dcb_en));
+ 	return t4_wr_mbox_ns(adap, mbox, &c, sizeof(c), NULL);
+ }
+ 
+ /**
++>>>>>>> 30f00847953e (cxgb4 : Disable recursive mailbox commands when enabling vi)
   *	t4_enable_vi - enable/disable a virtual interface
   *	@adap: the adapter
   *	@mbox: mailbox to use for the FW command
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
