sched/idle: Clear polling before descheduling the idle thread

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Andy Lutomirski <luto@amacapital.net>
commit 82c65d60d64401aedc1006d6572469bbfdf148de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/82c65d60.failed

Currently, the only real guarantee provided by the polling bit is
that, if you hold rq->lock and the polling bit is set, then you can
set need_resched to force a reschedule.

The only reason the lock is needed is that the idle thread might not
be running at all when setting its need_resched bit, and rq->lock
keeps it pinned.

This is easy to fix: just clear the polling bit before scheduling.
Now the idle thread's polling bit is only ever set when
rq->curr == rq->idle.

	Signed-off-by: Andy Lutomirski <luto@amacapital.net>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Cc: nicolas.pitre@linaro.org
	Cc: daniel.lezcano@linaro.org
	Cc: umgwanakikbuti@gmail.com
	Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: linux-kernel@vger.kernel.org
Link: http://lkml.kernel.org/r/b2059fcb4c613d520cb503b6fad6e47033c7c203.1401902905.git.luto@amacapital.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 82c65d60d64401aedc1006d6572469bbfdf148de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/idle.c
* Unmerged path kernel/sched/idle.c
* Unmerged path kernel/sched/idle.c
