bonding: Use RCU_INIT_POINTER() for better overhead and for sparse

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Paul E. McKenney <paulmck@linux.vnet.ibm.com>
commit 36708b89e00951b004b4dd6c14181301e2e98354
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/36708b89.failed

Although rcu_assign_pointer() can be used to assign a constant
NULL pointer, doing so gets you an unnecessary memory barrier and
in some circumstances, sparse warnings.  This commit therefore
changes the rcu_assign_pointer() of NULL in __bond_release_one() to
RCU_INIT_POINTER().

	Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
	Reviewed-by: Josh Triplett <josh@joshtriplett.org>
(cherry picked from commit 36708b89e00951b004b4dd6c14181301e2e98354)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index a766565cdf48,a0b97c4c655d..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2031,7 -1763,7 +2031,11 @@@ static int __bond_release_one(struct ne
  	}
  
  	if (all) {
++<<<<<<< HEAD
 +		bond->curr_active_slave = NULL;
++=======
+ 		RCU_INIT_POINTER(bond->curr_active_slave, NULL);
++>>>>>>> 36708b89e009 (bonding: Use RCU_INIT_POINTER() for better overhead and for sparse)
  	} else if (oldcurrent == slave) {
  		/*
  		 * Note that we hold RTNL over this sequence, so there
* Unmerged path drivers/net/bonding/bond_main.c
