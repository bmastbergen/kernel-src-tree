pnfs/blocklayout: don't set pages uptodate

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 8c792ea940499153732adea2ea4ca37f6999778f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8c792ea9.failed

The core nfs code handles setting pages uptodate on reads, no need to mess
with the pageflags outselves.  Also remove a debug function to dump page
flags.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 8c792ea940499153732adea2ea4ca37f6999778f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/blocklayout/blocklayout.c
diff --cc fs/nfs/blocklayout/blocklayout.c
index 04db638b8038,5aa23750a149..000000000000
--- a/fs/nfs/blocklayout/blocklayout.c
+++ b/fs/nfs/blocklayout/blocklayout.c
@@@ -187,32 -173,11 +173,38 @@@ retry
  	return bio;
  }
  
++<<<<<<< HEAD
 +static struct bio *bl_add_page_to_bio(struct bio *bio, int npg, int rw,
 +				      sector_t isect, struct page *page,
 +				      struct pnfs_block_extent *be,
 +				      void (*end_io)(struct bio *, int err),
 +				      struct parallel_io *par)
 +{
 +	return do_add_page_to_bio(bio, npg, rw, isect, page, be,
 +				  end_io, par, 0, PAGE_CACHE_SIZE);
 +}
 +
 +/* This is basically copied from mpage_end_io_read */
 +static void bl_end_io_read(struct bio *bio, int err)
 +{
 +	struct parallel_io *par = bio->bi_private;
 +	const int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
 +	struct bio_vec *bvec = bio->bi_io_vec + bio->bi_vcnt - 1;
 +
 +	do {
 +		struct page *page = bvec->bv_page;
++=======
+ static void bl_end_io_read(struct bio *bio, int err)
+ {
+ 	struct parallel_io *par = bio->bi_private;
++>>>>>>> 8c792ea94049 (pnfs/blocklayout: don't set pages uptodate)
  
 -	if (err) {
 +		if (--bvec >= bio->bi_io_vec)
 +			prefetchw(&bvec->bv_page->flags);
 +		if (uptodate)
 +			SetPageUptodate(page);
 +	} while (bvec >= bio->bi_io_vec);
 +	if (!uptodate) {
  		struct nfs_pgio_header *header = par->data;
  
  		if (!header->pnfs_error)
* Unmerged path fs/nfs/blocklayout/blocklayout.c
