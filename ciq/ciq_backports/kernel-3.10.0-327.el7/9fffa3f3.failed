i40e/i40evf: Cache the CEE TLV status returned from firmware

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Neerav Parikh <neerav.parikh@intel.com>
commit 9fffa3f34dff2585ae86cd5b59c68ad2d4172f25
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9fffa3f3.failed

Store the CEE TLV status returned by firmware to allow drivers to dump that
for debug purposes.

Change-ID: Ie3c4cf8cebabee4f15e1e3fdc4fc8a68bbca40ee
	Signed-off-by: Neerav Parikh <neerav.parikh@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 9fffa3f34dff2585ae86cd5b59c68ad2d4172f25)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_dcb.c
#	drivers/net/ethernet/intel/i40e/i40e_type.h
diff --cc drivers/net/ethernet/intel/i40e/i40e_dcb.c
index eb67091781fd,90de46aef557..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_dcb.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_dcb.c
@@@ -415,7 -573,48 +415,49 @@@ free_mem
  i40e_status i40e_get_dcb_config(struct i40e_hw *hw)
  {
  	i40e_status ret = 0;
 -	struct i40e_aqc_get_cee_dcb_cfg_resp cee_cfg;
 -	struct i40e_aqc_get_cee_dcb_cfg_v1_resp cee_v1_cfg;
  
++<<<<<<< HEAD
++=======
+ 	/* If Firmware version < v4.33 IEEE only */
+ 	if (((hw->aq.fw_maj_ver == 4) && (hw->aq.fw_min_ver < 33)) ||
+ 	    (hw->aq.fw_maj_ver < 4))
+ 		goto ieee;
+ 
+ 	/* If Firmware version == v4.33 use old CEE struct */
+ 	if ((hw->aq.fw_maj_ver == 4) && (hw->aq.fw_min_ver == 33)) {
+ 		ret = i40e_aq_get_cee_dcb_config(hw, &cee_v1_cfg,
+ 						 sizeof(cee_v1_cfg), NULL);
+ 		if (!ret) {
+ 			/* CEE mode */
+ 			hw->local_dcbx_config.dcbx_mode = I40E_DCBX_MODE_CEE;
+ 			hw->local_dcbx_config.tlv_status =
+ 					le16_to_cpu(cee_v1_cfg.tlv_status);
+ 			i40e_cee_to_dcb_v1_config(&cee_v1_cfg,
+ 						  &hw->local_dcbx_config);
+ 		}
+ 	} else {
+ 		ret = i40e_aq_get_cee_dcb_config(hw, &cee_cfg,
+ 						 sizeof(cee_cfg), NULL);
+ 		if (!ret) {
+ 			/* CEE mode */
+ 			hw->local_dcbx_config.dcbx_mode = I40E_DCBX_MODE_CEE;
+ 			hw->local_dcbx_config.tlv_status =
+ 					le32_to_cpu(cee_cfg.tlv_status);
+ 			i40e_cee_to_dcb_config(&cee_cfg,
+ 					       &hw->local_dcbx_config);
+ 		}
+ 	}
+ 
+ 	/* CEE mode not enabled try querying IEEE data */
+ 	if (hw->aq.asq_last_status == I40E_AQ_RC_ENOENT)
+ 		goto ieee;
+ 	else
+ 		goto out;
+ 
+ ieee:
+ 	/* IEEE mode */
+ 	hw->local_dcbx_config.dcbx_mode = I40E_DCBX_MODE_IEEE;
++>>>>>>> 9fffa3f34dff (i40e/i40evf: Cache the CEE TLV status returned from firmware)
  	/* Get Local DCB Config */
  	ret = i40e_aq_get_dcb_config(hw, I40E_AQ_LLDP_MIB_LOCAL, 0,
  				     &hw->local_dcbx_config);
diff --cc drivers/net/ethernet/intel/i40e/i40e_type.h
index 5d6da63e4def,4842239ee777..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_type.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_type.h
@@@ -434,11 -436,15 +434,19 @@@ struct i40e_ieee_app_priority_table 
  };
  
  struct i40e_dcbx_config {
 -	u8  dcbx_mode;
 -#define I40E_DCBX_MODE_CEE	0x1
 -#define I40E_DCBX_MODE_IEEE	0x2
  	u32 numapps;
++<<<<<<< HEAD
 +	struct i40e_ieee_ets_config etscfg;
 +	struct i40e_ieee_ets_recommend etsrec;
 +	struct i40e_ieee_pfc_config pfc;
 +	struct i40e_ieee_app_priority_table app[I40E_DCBX_MAX_APPS];
++=======
+ 	u32 tlv_status; /* CEE mode TLV status */
+ 	struct i40e_dcb_ets_config etscfg;
+ 	struct i40e_dcb_ets_config etsrec;
+ 	struct i40e_dcb_pfc_config pfc;
+ 	struct i40e_dcb_app_priority_table app[I40E_DCBX_MAX_APPS];
++>>>>>>> 9fffa3f34dff (i40e/i40evf: Cache the CEE TLV status returned from firmware)
  };
  
  /* Port hardware description */
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_dcb.c
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_type.h
diff --git a/drivers/net/ethernet/intel/i40evf/i40e_type.h b/drivers/net/ethernet/intel/i40evf/i40e_type.h
index f4c6a6a84b43..76079f4f92c0 100644
--- a/drivers/net/ethernet/intel/i40evf/i40e_type.h
+++ b/drivers/net/ethernet/intel/i40evf/i40e_type.h
@@ -434,6 +434,7 @@ struct i40e_ieee_app_priority_table {
 
 struct i40e_dcbx_config {
 	u32 numapps;
+	u32 tlv_status; /* CEE mode TLV status */
 	struct i40e_ieee_ets_config etscfg;
 	struct i40e_ieee_ets_recommend etsrec;
 	struct i40e_ieee_pfc_config pfc;
