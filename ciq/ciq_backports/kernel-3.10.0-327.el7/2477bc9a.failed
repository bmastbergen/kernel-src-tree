bonding: update bond carrier state when min_links option changes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jonathan Toppins <jtoppins@cumulusnetworks.com>
commit 2477bc9a3db53540c64687c79efae9a7f1f60cef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2477bc9a.failed

	Cc: Andy Gospodarek <gospo@cumulusnetworks.com>
	Signed-off-by: Jonathan Toppins <jtoppins@cumulusnetworks.com>
	Signed-off-by: Jay Vosburgh <jay.vosburgh@canonical.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2477bc9a3db53540c64687c79efae9a7f1f60cef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_options.c
#	drivers/net/bonding/bonding.h
diff --cc drivers/net/bonding/bonding.h
index 64c0cb81e478,29f53eacac0a..000000000000
--- a/drivers/net/bonding/bonding.h
+++ b/drivers/net/bonding/bonding.h
@@@ -415,15 -520,12 +415,20 @@@ int bond_create(struct net *net, const 
  int bond_create_sysfs(struct bond_net *net);
  void bond_destroy_sysfs(struct bond_net *net);
  void bond_prepare_sysfs_group(struct bonding *bond);
 -int bond_sysfs_slave_add(struct slave *slave);
 -void bond_sysfs_slave_del(struct slave *slave);
 +int bond_create_slave_symlinks(struct net_device *master, struct net_device *slave);
 +void bond_destroy_slave_symlinks(struct net_device *master, struct net_device *slave);
  int bond_enslave(struct net_device *bond_dev, struct net_device *slave_dev);
  int bond_release(struct net_device *bond_dev, struct net_device *slave_dev);
++<<<<<<< HEAD:drivers/net/bonding/bonding.h
 +void bond_mii_monitor(struct work_struct *);
 +void bond_loadbalance_arp_mon(struct work_struct *);
 +void bond_activebackup_arp_mon(struct work_struct *);
 +void bond_set_mode_ops(struct bonding *bond, int mode);
 +int bond_parse_parm(const char *mode_arg, const struct bond_parm_tbl *tbl);
++=======
+ u32 bond_xmit_hash(struct bonding *bond, struct sk_buff *skb);
+ int bond_set_carrier(struct bonding *bond);
++>>>>>>> 2477bc9a3db5 (bonding: update bond carrier state when min_links option changes):include/net/bonding.h
  void bond_select_active_slave(struct bonding *bond);
  void bond_change_active_slave(struct bonding *bond, struct slave *new_active);
  void bond_create_debugfs(void);
* Unmerged path drivers/net/bonding/bond_options.c
diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index 723c3d160745..ef044639cf62 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -525,7 +525,7 @@ static void bond_del_vlans_from_slave(struct bonding *bond,
  *
  * Returns zero if carrier state does not change, nonzero if it does.
  */
-static int bond_set_carrier(struct bonding *bond)
+int bond_set_carrier(struct bonding *bond)
 {
 	struct slave *slave;
 	int i;
* Unmerged path drivers/net/bonding/bond_options.c
* Unmerged path drivers/net/bonding/bonding.h
