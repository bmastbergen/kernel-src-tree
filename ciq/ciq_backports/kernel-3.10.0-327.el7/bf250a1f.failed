ipv6: Partial checksum only UDP packets

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Vlad Yasevich <vyasevich@gmail.com>
commit bf250a1fa769f2eb8fc7a4e28b3b523e9cb67eef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/bf250a1f.failed

ip6_append_data is used by other protocols and some of them can't
be partially checksummed.  Only partially checksum UDP protocol.

Fixes: 32dce968dd987a (ipv6: Allow for partial checksums on non-ufo packets)
	Reported-by: Sabrina Dubroca <sd@queasysnail.net>
	Tested-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bf250a1fa769f2eb8fc7a4e28b3b523e9cb67eef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_output.c
diff --cc net/ipv6/ip6_output.c
index 524b4ad02d70,7deebf102cba..000000000000
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@@ -1261,10 -1263,21 +1261,21 @@@ emsgsize
  		}
  	}
  
 -	if (sk->sk_type == SOCK_DGRAM || sk->sk_type == SOCK_RAW) {
 +	/* For UDP, check if TX timestamp is enabled */
 +	if (sk->sk_type == SOCK_DGRAM)
  		sock_tx_timestamp(sk, &tx_flags);
 -		if (tx_flags & SKBTX_ANY_SW_TSTAMP &&
 -		    sk->sk_tsflags & SOF_TIMESTAMPING_OPT_ID)
 -			tskey = sk->sk_tskey++;
 -	}
  
++<<<<<<< HEAD
++=======
+ 	/* If this is the first and only packet and device
+ 	 * supports checksum offloading, let's use it.
+ 	 */
+ 	if (!skb && sk->sk_protocol == IPPROTO_UDP &&
+ 	    length + fragheaderlen < mtu &&
+ 	    rt->dst.dev->features & NETIF_F_V6_CSUM &&
+ 	    !exthdrlen)
+ 		csummode = CHECKSUM_PARTIAL;
++>>>>>>> bf250a1fa769 (ipv6: Partial checksum only UDP packets)
  	/*
  	 * Let's try using as much space as possible.
  	 * Use MTU if total length of the message fits into the MTU.
* Unmerged path net/ipv6/ip6_output.c
