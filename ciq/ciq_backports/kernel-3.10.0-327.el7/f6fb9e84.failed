KVM: PPC: Book3S HV: Add missing HPTE unlock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [kvm] ppc: book3s hv: Add missing HPTE unlock (Thomas Huth) [1226884 1227323]
Rebuild_FUZZ: 93.98%
commit-author Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
commit f6fb9e848c39d65516caf7614fc8e0b28f5301ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f6fb9e84.failed

In kvm_test_clear_dirty(), if we find an invalid HPTE we move on to the
next HPTE without unlocking the invalid one.  In fact we should never
find an invalid and unlocked HPTE in the rmap chain, but for robustness
we should unlock it.  This adds the missing unlock.

	Reported-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Signed-off-by: Paul Mackerras <paulus@samba.org>
	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit f6fb9e848c39d65516caf7614fc8e0b28f5301ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_64_mmu_hv.c
diff --cc arch/powerpc/kvm/book3s_64_mmu_hv.c
index f682ff67a26c,41f96c51dfca..000000000000
--- a/arch/powerpc/kvm/book3s_64_mmu_hv.c
+++ b/arch/powerpc/kvm/book3s_64_mmu_hv.c
@@@ -1114,16 -1117,19 +1114,23 @@@ static int kvm_test_clear_dirty_npages(
  		}
  
  		/* Now check and modify the HPTE */
++<<<<<<< HEAD
 +		if (!(hptep[0] & HPTE_V_VALID))
++=======
+ 		if (!(hptep[0] & cpu_to_be64(HPTE_V_VALID))) {
+ 			/* unlock and continue */
+ 			hptep[0] &= ~cpu_to_be64(HPTE_V_HVLOCK);
++>>>>>>> f6fb9e848c39 (KVM: PPC: Book3S HV: Add missing HPTE unlock)
  			continue;
+ 		}
  
  		/* need to make it temporarily absent so C is stable */
 -		hptep[0] |= cpu_to_be64(HPTE_V_ABSENT);
 +		hptep[0] |= HPTE_V_ABSENT;
  		kvmppc_invalidate_hpte(kvm, hptep, i);
 -		v = be64_to_cpu(hptep[0]);
 -		r = be64_to_cpu(hptep[1]);
 +		v = hptep[0];
 +		r = hptep[1];
  		if (r & HPTE_R_C) {
 -			hptep[1] = cpu_to_be64(r & ~HPTE_R_C);
 +			hptep[1] = r & ~HPTE_R_C;
  			if (!(rev[i].guest_rpte & HPTE_R_C)) {
  				rev[i].guest_rpte |= HPTE_R_C;
  				note_hpte_modification(kvm, &rev[i]);
* Unmerged path arch/powerpc/kvm/book3s_64_mmu_hv.c
