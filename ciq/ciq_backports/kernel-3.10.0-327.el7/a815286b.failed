cxgb4 : Fix bug in DCB app deletion

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] cxgb4: Fix bug in DCB app deletion (Sai Vemuri) [1251611]
Rebuild_FUZZ: 98.55%
commit-author Anish Bhatt <anish@chelsio.com>
commit a815286b94875c0428444e036df7e4e1a070bec0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a815286b.failed

Unlike CEE, IEEE has a bespoke app delete call and does not rely on priority
for app deletion

Fixes : 2376c879b80c ('cxgb4 : Improve handling of DCB negotiation or loss
 thereof')

	Signed-off-by: Anish Bhatt <anish@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a815286b94875c0428444e036df7e4e1a070bec0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
index a8b1073e6373,b6fdb142eacb..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
@@@ -30,6 -41,60 +30,62 @@@ void cxgb4_dcb_state_init(struct net_de
  
  	memset(dcb, 0, sizeof(struct port_dcb_info));
  	dcb->state = CXGB4_DCB_STATE_START;
++<<<<<<< HEAD
++=======
+ 	if (version_temp)
+ 		dcb->dcb_version = version_temp;
+ 
+ 	netdev_dbg(dev, "%s: Initializing DCB state for port[%d]\n",
+ 		    __func__, pi->port_id);
+ }
+ 
+ void cxgb4_dcb_version_init(struct net_device *dev)
+ {
+ 	struct port_info *pi = netdev2pinfo(dev);
+ 	struct port_dcb_info *dcb = &pi->dcb;
+ 
+ 	/* Any writes here are only done on kernels that exlicitly need
+ 	 * a specific version, say < 2.6.38 which only support CEE
+ 	 */
+ 	dcb->dcb_version = FW_PORT_DCB_VER_AUTO;
+ }
+ 
+ static void cxgb4_dcb_cleanup_apps(struct net_device *dev)
+ {
+ 	struct port_info *pi = netdev2pinfo(dev);
+ 	struct adapter *adap = pi->adapter;
+ 	struct port_dcb_info *dcb = &pi->dcb;
+ 	struct dcb_app app;
+ 	int i, err;
+ 
+ 	/* zero priority implies remove */
+ 	app.priority = 0;
+ 
+ 	for (i = 0; i < CXGB4_MAX_DCBX_APP_SUPPORTED; i++) {
+ 		/* Check if app list is exhausted */
+ 		if (!dcb->app_priority[i].protocolid)
+ 			break;
+ 
+ 		app.protocol = dcb->app_priority[i].protocolid;
+ 
+ 		if (dcb->dcb_version == FW_PORT_DCB_VER_IEEE) {
+ 			app.priority = dcb->app_priority[i].user_prio_map;
+ 			app.selector = dcb->app_priority[i].sel_field + 1;
+ 			err = dcb_ieee_delapp(dev, &app);
+ 		} else {
+ 			app.selector = !!(dcb->app_priority[i].sel_field);
+ 			err = dcb_setapp(dev, &app);
+ 		}
+ 
+ 		if (err) {
+ 			dev_err(adap->pdev_dev,
+ 				"Failed DCB Clear %s Application Priority: sel=%d, prot=%d, , err=%d\n",
+ 				dcb_ver_array[dcb->dcb_version], app.selector,
+ 				app.protocol, -err);
+ 			break;
+ 		}
+ 	}
++>>>>>>> a815286b9487 (cxgb4 : Fix bug in DCB app deletion)
  }
  
  /* Finite State machine for Data Center Bridging.
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
