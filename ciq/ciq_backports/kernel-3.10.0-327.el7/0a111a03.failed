bonding: convert bond_alb.c to use netdev_printk instead of pr_

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@gmail.com>
commit 0a111a03f474dfd04e119ea095c3cff4192fccd1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0a111a03.failed

CC: Jay Vosburgh <j.vosburgh@gmail.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0a111a03f474dfd04e119ea095c3cff4192fccd1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_alb.c
diff --cc drivers/net/bonding/bond_alb.c
index 9c9e1f0f72a6,194a45bd1ef7..000000000000
--- a/drivers/net/bonding/bond_alb.c
+++ b/drivers/net/bonding/bond_alb.c
@@@ -729,10 -764,9 +728,16 @@@ static struct slave *rlb_arp_xmit(struc
  		* rx channel
  		*/
  		tx_slave = rlb_choose_channel(skb, bond);
++<<<<<<< HEAD
 +		if (tx_slave) {
 +			memcpy(arp->mac_src, tx_slave->dev->dev_addr, ETH_ALEN);
 +		}
 +		pr_debug("Server sent ARP Reply packet\n");
++=======
+ 		if (tx_slave)
+ 			ether_addr_copy(arp->mac_src, tx_slave->dev->dev_addr);
+ 		netdev_dbg(bond->dev, "Server sent ARP Reply packet\n");
++>>>>>>> 0a111a03f474 (bonding: convert bond_alb.c to use netdev_printk instead of pr_)
  	} else if (arp->op_code == htons(ARPOP_REQUEST)) {
  		/* Create an entry in the rx_hashtbl for this client as a
  		 * place holder.
@@@ -1214,13 -1266,12 +1217,18 @@@ static int alb_handle_addr_collision_on
  	if (free_mac_slave) {
  		alb_set_slave_mac_addr(slave, free_mac_slave->perm_hwaddr);
  
++<<<<<<< HEAD
 +		pr_warning("%s: Warning: the hw address of slave %s is in use by the bond; giving it the hw address of %s\n",
 +			   bond->dev->name, slave->dev->name,
 +			   free_mac_slave->dev->name);
++=======
+ 		netdev_warn(bond->dev, "the hw address of slave %s is in use by the bond; giving it the hw address of %s\n",
+ 			    slave->dev->name, free_mac_slave->dev->name);
++>>>>>>> 0a111a03f474 (bonding: convert bond_alb.c to use netdev_printk instead of pr_)
  
  	} else if (has_bond_addr) {
- 		pr_err("%s: Error: the hw address of slave %s is in use by the bond; couldn't find a slave with a free hw address to give it (this should not have happened)\n",
- 		       bond->dev->name, slave->dev->name);
+ 		netdev_err(bond->dev, "the hw address of slave %s is in use by the bond; couldn't find a slave with a free hw address to give it (this should not have happened)\n",
+ 			   slave->dev->name);
  		return -EFAULT;
  	}
  
* Unmerged path drivers/net/bonding/bond_alb.c
