bonding: move active_slave setting into separate function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit d9e32b21cb394c0816f206539b8c7e9c023db332
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d9e32b21.failed

Do a bit of refactoring on the way.

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d9e32b21cb394c0816f206539b8c7e9c023db332)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_options.c
#	drivers/net/bonding/bond_sysfs.c
#	drivers/net/bonding/bonding.h
diff --cc drivers/net/bonding/bond_sysfs.c
index 739d4dbe8629,abd260047103..000000000000
--- a/drivers/net/bonding/bond_sysfs.c
+++ b/drivers/net/bonding/bond_sysfs.c
@@@ -1286,69 -1235,22 +1286,84 @@@ static ssize_t bonding_store_active_sla
  					  struct device_attribute *attr,
  					  const char *buf, size_t count)
  {
++<<<<<<< HEAD
 +	int i;
 +	struct slave *slave;
 +	struct slave *old_active = NULL;
 +	struct slave *new_active = NULL;
++=======
+ 	int ret;
++>>>>>>> d9e32b21cb39 (bonding: move active_slave setting into separate function)
  	struct bonding *bond = to_bond(d);
  	char ifname[IFNAMSIZ];
+ 	struct net_device *dev;
  
  	if (!rtnl_trylock())
  		return restart_syscall();
  
++<<<<<<< HEAD
 +	block_netpoll_tx();
 +	read_lock(&bond->lock);
 +	write_lock_bh(&bond->curr_slave_lock);
 +
 +	if (!USES_PRIMARY(bond->params.mode)) {
 +		pr_info("%s: Unable to change active slave; %s is in mode %d\n",
 +			bond->dev->name, bond->dev->name, bond->params.mode);
 +		goto out;
 +	}
 +
++=======
++>>>>>>> d9e32b21cb39 (bonding: move active_slave setting into separate function)
  	sscanf(buf, "%15s", ifname); /* IFNAMSIZ */
- 
- 	/* check to see if we are clearing active */
  	if (!strlen(ifname) || buf[0] == '\n') {
++<<<<<<< HEAD
 +		pr_info("%s: Clearing current active slave.\n",
 +			bond->dev->name);
 +		bond->curr_active_slave = NULL;
 +		bond_select_active_slave(bond);
 +		goto out;
 +	}
 +
 +	bond_for_each_slave(bond, slave, i) {
 +		if (strncmp(slave->dev->name, ifname, IFNAMSIZ) == 0) {
 +			old_active = bond->curr_active_slave;
 +			new_active = slave;
 +			if (new_active == old_active) {
 +				/* do nothing */
 +				pr_info("%s: %s is already the current"
 +					" active slave.\n",
 +					bond->dev->name,
 +					slave->dev->name);
 +				goto out;
 +			} else {
 +				if ((new_active) &&
 +				    (old_active) &&
 +				    (new_active->link == BOND_LINK_UP) &&
 +				    IS_UP(new_active->dev)) {
 +					pr_info("%s: Setting %s as active"
 +						" slave.\n",
 +						bond->dev->name,
 +						slave->dev->name);
 +					bond_change_active_slave(bond,
 +								 new_active);
 +				} else {
 +					pr_info("%s: Could not set %s as"
 +						" active slave; either %s is"
 +						" down or the link is down.\n",
 +						bond->dev->name,
 +						slave->dev->name,
 +						slave->dev->name);
 +				}
 +				goto out;
 +			}
++=======
+ 		dev = NULL;
+ 	} else {
+ 		dev = __dev_get_by_name(dev_net(bond->dev), ifname);
+ 		if (!dev) {
+ 			ret = -ENODEV;
+ 			goto out;
++>>>>>>> d9e32b21cb39 (bonding: move active_slave setting into separate function)
  		}
  	}
  
diff --cc drivers/net/bonding/bonding.h
index 743d73f75728,686759dce4c6..000000000000
--- a/drivers/net/bonding/bonding.h
+++ b/drivers/net/bonding/bonding.h
@@@ -442,6 -426,8 +442,11 @@@ void bond_setup(struct net_device *bond
  unsigned int bond_get_num_tx_queues(void);
  int bond_netlink_init(void);
  void bond_netlink_fini(void);
++<<<<<<< HEAD
++=======
+ int bond_option_mode_set(struct bonding *bond, int mode);
+ int bond_option_active_slave_set(struct bonding *bond, struct net_device *slave_dev);
++>>>>>>> d9e32b21cb39 (bonding: move active_slave setting into separate function)
  
  struct bond_net {
  	struct net *		net;	/* Associated network namespace */
* Unmerged path drivers/net/bonding/bond_options.c
* Unmerged path drivers/net/bonding/bond_options.c
* Unmerged path drivers/net/bonding/bond_sysfs.c
* Unmerged path drivers/net/bonding/bonding.h
