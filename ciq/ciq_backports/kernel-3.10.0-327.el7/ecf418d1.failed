hpsa: Get queue depth from identify physical bmic for physical disks.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] hpsa: Get queue depth from identify physical bmic for physical disks (Joseph Szczypek) [1227171]
Rebuild_FUZZ: 99.27%
commit-author Joe Handzik <joseph.t.handzik@hp.com>
commit ecf418d14fa7ddb28cc7f99c4f7298542b3bd9f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ecf418d1.failed

get drive queue depth to help avoid task set full conditions.

	Reviewed-by: Scott Teel <scott.teel@pmcs.com>
	Reviewed-by: Kevin Barnett <kevin.barnett@pmcs.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Reviewed-by: Hannes Reinecke <hare@Suse.de>
	Signed-off-by: Joe Handzik <joseph.t.handzik@hp.com>
	Signed-off-by: Don Brace <don.brace@pmcs.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: James Bottomley <JBottomley@Odin.com>
(cherry picked from commit ecf418d14fa7ddb28cc7f99c4f7298542b3bd9f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/hpsa.c
diff --cc drivers/scsi/hpsa.c
index 12c02e8d4ce8,d09333ad20b9..000000000000
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@@ -3067,28 -3464,22 +3067,42 @@@ static void hpsa_update_scsi_devices(st
  				ncurrent++;
  			break;
  		case TYPE_DISK:
- 			if (h->hba_mode_enabled) {
+ 			if (i >= nphysicals) {
+ 				ncurrent++;
+ 				break;
+ 			}
+ 
+ 			if (h->hba_mode_enabled)
  				/* never use raid mapper in HBA mode */
  				this_device->offload_enabled = 0;
- 				ncurrent++;
+ 			else if (!(h->transMethod & CFGTBL_Trans_io_accel1 ||
+ 				h->transMethod & CFGTBL_Trans_io_accel2))
  				break;
++<<<<<<< HEAD
 +			} else if (h->acciopath_status) {
 +				if (i >= nphysicals) {
 +					ncurrent++;
 +					break;
 +				}
 +			} else {
 +				if (i < nphysicals)
 +					break;
 +				ncurrent++;
 +				break;
 +			}
 +			if (physical_mode == HPSA_REPORT_PHYS_EXTENDED) {
 +				memcpy(&this_device->ioaccel_handle,
 +					&lunaddrbytes[20],
 +					sizeof(this_device->ioaccel_handle));
 +				ncurrent++;
 +			}
++=======
+ 
+ 			hpsa_get_ioaccel_drive_info(h, this_device,
+ 						lunaddrbytes, id_phys);
+ 			atomic_set(&this_device->ioaccel_cmds_out, 0);
+ 			ncurrent++;
++>>>>>>> ecf418d14fa7 (hpsa: Get queue depth from identify physical bmic for physical disks.)
  			break;
  		case TYPE_TAPE:
  		case TYPE_MEDIUM_CHANGER:
* Unmerged path drivers/scsi/hpsa.c
