ip_tunnel: fix sparse non static symbol warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Wei Yongjun <yongjun_wei@trendmicro.com.cn>
commit d0eb1f7e66dd53355746cd6a8e7e56c465dc6cde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d0eb1f7e.failed

Fixes the following sparse warning:

net/ipv4/ip_tunnel.c:116:18: warning:
 symbol 'tunnel_dst_check' was not declared. Should it be static?

	Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d0eb1f7e66dd53355746cd6a8e7e56c465dc6cde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ip_tunnel.c
diff --cc net/ipv4/ip_tunnel.c
index 97e997263ac1,d3929a69f008..000000000000
--- a/net/ipv4/ip_tunnel.c
+++ b/net/ipv4/ip_tunnel.c
@@@ -68,6 -68,63 +68,66 @@@ static unsigned int ip_tunnel_hash(stru
  			 IP_TNL_HASH_BITS);
  }
  
++<<<<<<< HEAD
++=======
+ static inline void __tunnel_dst_set(struct ip_tunnel_dst *idst,
+ 				    struct dst_entry *dst)
+ {
+ 	struct dst_entry *old_dst;
+ 
+ 	if (dst && (dst->flags & DST_NOCACHE))
+ 		dst = NULL;
+ 
+ 	spin_lock_bh(&idst->lock);
+ 	old_dst = rcu_dereference(idst->dst);
+ 	rcu_assign_pointer(idst->dst, dst);
+ 	dst_release(old_dst);
+ 	spin_unlock_bh(&idst->lock);
+ }
+ 
+ static inline void tunnel_dst_set(struct ip_tunnel *t, struct dst_entry *dst)
+ {
+ 	__tunnel_dst_set(this_cpu_ptr(t->dst_cache), dst);
+ }
+ 
+ static inline void tunnel_dst_reset(struct ip_tunnel *t)
+ {
+ 	tunnel_dst_set(t, NULL);
+ }
+ 
+ static void tunnel_dst_reset_all(struct ip_tunnel *t)
+ {
+ 	int i;
+ 
+ 	for_each_possible_cpu(i)
+ 		__tunnel_dst_set(per_cpu_ptr(t->dst_cache, i), NULL);
+ }
+ 
+ static inline struct dst_entry *tunnel_dst_get(struct ip_tunnel *t)
+ {
+ 	struct dst_entry *dst;
+ 
+ 	rcu_read_lock();
+ 	dst = rcu_dereference(this_cpu_ptr(t->dst_cache)->dst);
+ 	if (dst)
+ 		dst_hold(dst);
+ 	rcu_read_unlock();
+ 	return dst;
+ }
+ 
+ static struct dst_entry *tunnel_dst_check(struct ip_tunnel *t, u32 cookie)
+ {
+ 	struct dst_entry *dst = tunnel_dst_get(t);
+ 
+ 	if (dst && dst->obsolete && dst->ops->check(dst, cookie) == NULL) {
+ 		tunnel_dst_reset(t);
+ 		return NULL;
+ 	}
+ 
+ 	return dst;
+ }
+ 
++>>>>>>> d0eb1f7e66dd (ip_tunnel: fix sparse non static symbol warning)
  /* Often modified stats are per cpu, other are shared (netdev->stats) */
  struct rtnl_link_stats64 *ip_tunnel_get_stats64(struct net_device *dev,
  						struct rtnl_link_stats64 *tot)
* Unmerged path net/ipv4/ip_tunnel.c
