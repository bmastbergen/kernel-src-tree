vti6: Don't unregister pernet ops twice on init errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Mathias Krause <minipli@googlemail.com>
commit fd71143645a9958e437c8cf394be2c44a6acb23a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/fd711436.failed

If we fail to register one of the xfrm protocol handlers we will
unregister the pernet ops twice on the error exit path. This will
probably lead to a kernel panic as the double deregistration
leads to a double kfree().

Fix this by removing one of the calls to do it only once.

Fixes: fa9ad96d49 ("vti6: Update the ipv6 side to use its own...")
	Signed-off-by: Mathias Krause <minipli@googlemail.com>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit fd71143645a9958e437c8cf394be2c44a6acb23a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_vti.c
diff --cc net/ipv6/ip6_vti.c
index d39d05bb7b0d,a51100379f4a..000000000000
--- a/net/ipv6/ip6_vti.c
+++ b/net/ipv6/ip6_vti.c
@@@ -983,11 -1095,30 +983,36 @@@ static int __init vti6_tunnel_init(void
  	if (err < 0)
  		goto out_pernet;
  
 -	err = xfrm6_protocol_register(&vti_esp6_protocol, IPPROTO_ESP);
 +	err = xfrm6_mode_tunnel_input_register(&vti6_handler);
  	if (err < 0) {
++<<<<<<< HEAD
 +		pr_err("%s: can't register vti6\n", __func__);
 +		goto out;
 +	}
++=======
+ 		pr_err("%s: can't register vti6 protocol\n", __func__);
+ 
+ 		goto out;
+ 	}
+ 
+ 	err = xfrm6_protocol_register(&vti_ah6_protocol, IPPROTO_AH);
+ 	if (err < 0) {
+ 		xfrm6_protocol_deregister(&vti_esp6_protocol, IPPROTO_ESP);
+ 		pr_err("%s: can't register vti6 protocol\n", __func__);
+ 
+ 		goto out;
+ 	}
+ 
+ 	err = xfrm6_protocol_register(&vti_ipcomp6_protocol, IPPROTO_COMP);
+ 	if (err < 0) {
+ 		xfrm6_protocol_deregister(&vti_ah6_protocol, IPPROTO_AH);
+ 		xfrm6_protocol_deregister(&vti_esp6_protocol, IPPROTO_ESP);
+ 		pr_err("%s: can't register vti6 protocol\n", __func__);
+ 
+ 		goto out;
+ 	}
+ 
++>>>>>>> fd71143645a9 (vti6: Don't unregister pernet ops twice on init errors)
  	err = rtnl_link_register(&vti6_link_ops);
  	if (err < 0)
  		goto rtnl_link_failed;
* Unmerged path net/ipv6/ip6_vti.c
