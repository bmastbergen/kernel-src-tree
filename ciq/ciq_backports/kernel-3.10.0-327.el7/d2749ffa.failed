qla2xxx: Unload of qla2xxx driver crashes the machine.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Unload of qla2xxx driver crashes the machine (Chad Dupuis) [1187302]
Rebuild_FUZZ: 99.07%
commit-author Arun Easi <arun.easi@qlogic.com>
commit d2749ffadb4c76c04ad82645cc86a2fa39ceff3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d2749ffa.failed

	Signed-off-by: Arun Easi <arun.easi@qlogic.com>
	Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit d2749ffadb4c76c04ad82645cc86a2fa39ceff3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 48dd89de01d4,4880f0b2daa3..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -3104,9 -3107,97 +3104,100 @@@ qla2x00_remove_one(struct pci_dev *pdev
  		if (ha->mqiobase)
  			iounmap(ha->mqiobase);
  
 -		if ((IS_QLA83XX(ha) || IS_QLA27XX(ha)) && ha->msixbase)
 +		if (IS_QLA83XX(ha) && ha->msixbase)
  			iounmap(ha->msixbase);
  	}
++<<<<<<< HEAD
++=======
+ }
+ 
+ static void
+ qla2x00_clear_drv_active(struct qla_hw_data *ha)
+ {
+ 	if (IS_QLA8044(ha)) {
+ 		qla8044_idc_lock(ha);
+ 		qla8044_clear_drv_active(ha);
+ 		qla8044_idc_unlock(ha);
+ 	} else if (IS_QLA82XX(ha)) {
+ 		qla82xx_idc_lock(ha);
+ 		qla82xx_clear_drv_active(ha);
+ 		qla82xx_idc_unlock(ha);
+ 	}
+ }
+ 
+ static void
+ qla2x00_remove_one(struct pci_dev *pdev)
+ {
+ 	scsi_qla_host_t *base_vha;
+ 	struct qla_hw_data  *ha;
+ 
+ 	base_vha = pci_get_drvdata(pdev);
+ 	ha = base_vha->hw;
+ 
+ 	/* Indicate device removal to prevent future board_disable and wait
+ 	 * until any pending board_disable has completed. */
+ 	set_bit(PFLG_DRIVER_REMOVING, &base_vha->pci_flags);
+ 	cancel_work_sync(&ha->board_disable);
+ 
+ 	/*
+ 	 * If the PCI device is disabled then there was a PCI-disconnect and
+ 	 * qla2x00_disable_board_on_pci_error has taken care of most of the
+ 	 * resources.
+ 	 */
+ 	if (!atomic_read(&pdev->enable_cnt)) {
+ 		scsi_host_put(base_vha->host);
+ 		kfree(ha);
+ 		pci_set_drvdata(pdev, NULL);
+ 		return;
+ 	}
+ 
+ 	qla2x00_wait_for_hba_ready(base_vha);
+ 
+ 	set_bit(UNLOADING, &base_vha->dpc_flags);
+ 
+ 	if (IS_QLAFX00(ha))
+ 		qlafx00_driver_shutdown(base_vha, 20);
+ 
+ 	qla2x00_delete_all_vps(ha, base_vha);
+ 
+ 	if (IS_QLA8031(ha)) {
+ 		ql_dbg(ql_dbg_p3p, base_vha, 0xb07e,
+ 		    "Clearing fcoe driver presence.\n");
+ 		if (qla83xx_clear_drv_presence(base_vha) != QLA_SUCCESS)
+ 			ql_dbg(ql_dbg_p3p, base_vha, 0xb079,
+ 			    "Error while clearing DRV-Presence.\n");
+ 	}
+ 
+ 	qla2x00_abort_all_cmds(base_vha, DID_NO_CONNECT << 16);
+ 
+ 	qla2x00_dfs_remove(base_vha);
+ 
+ 	qla84xx_put_chip(base_vha);
+ 
+ 	/* Disable timer */
+ 	if (base_vha->timer_active)
+ 		qla2x00_stop_timer(base_vha);
+ 
+ 	base_vha->flags.online = 0;
+ 
+ 	qla2x00_destroy_deferred_work(ha);
+ 
+ 	qlt_remove_target(ha, base_vha);
+ 
+ 	qla2x00_free_sysfs_attr(base_vha, true);
+ 
+ 	fc_remove_host(base_vha->host);
+ 
+ 	scsi_remove_host(base_vha->host);
+ 
+ 	qla2x00_free_device(base_vha);
+ 
+ 	qla2x00_clear_drv_active(ha);
+ 
+ 	scsi_host_put(base_vha->host);
+ 
+ 	qla2x00_unmap_iobases(ha);
++>>>>>>> d2749ffadb4c (qla2xxx: Unload of qla2xxx driver crashes the machine.)
  
  	pci_release_selected_regions(ha->pdev, ha->bars);
  	kfree(ha);
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
