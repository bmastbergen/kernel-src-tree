hv: remove the per-channel workqueue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] remove the per-channel workqueue (Vitaly Kuznetsov) [1203682]
Rebuild_FUZZ: 94.12%
commit-author Dexuan Cui <decui@microsoft.com>
commit aadc3780f31865edc84c587ab718a33a8eeeb09d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/aadc3780.failed

It's not necessary any longer, since we can safely run the blocking
message handlers in vmbus_connection.work_queue now.

	Signed-off-by: Dexuan Cui <decui@microsoft.com>
	Cc: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit aadc3780f31865edc84c587ab718a33a8eeeb09d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel_mgmt.c
diff --cc drivers/hv/channel_mgmt.c
index f9943186ea53,0eeb1b3bc048..000000000000
--- a/drivers/hv/channel_mgmt.c
+++ b/drivers/hv/channel_mgmt.c
@@@ -151,12 -147,6 +151,15 @@@ static struct vmbus_channel *alloc_chan
  	INIT_LIST_HEAD(&channel->sc_list);
  	INIT_LIST_HEAD(&channel->percpu_list);
  
++<<<<<<< HEAD
 +	channel->controlwq = create_workqueue("hv_vmbus_ctl");
 +	if (!channel->controlwq) {
 +		kfree(channel);
 +		return NULL;
 +	}
 +
++=======
++>>>>>>> aadc3780f318 (hv: remove the per-channel workqueue)
  	return channel;
  }
  
* Unmerged path drivers/hv/channel_mgmt.c
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index 55d525dc7600..e383d8935b70 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -659,8 +659,6 @@ struct vmbus_channel {
 
 	struct hv_device *device_obj;
 
-	struct work_struct work;
-
 	enum vmbus_channel_state state;
 
 	struct vmbus_channel_offer_channel offermsg;
@@ -681,7 +679,6 @@ struct vmbus_channel {
 	struct hv_ring_buffer_info outbound;	/* send to parent */
 	struct hv_ring_buffer_info inbound;	/* receive from parent */
 	spinlock_t inbound_lock;
-	struct workqueue_struct *controlwq;
 
 	struct vmbus_close_msg close_msg;
 
