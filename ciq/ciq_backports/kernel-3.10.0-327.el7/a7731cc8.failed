fm10k: update xcast mode before synchronizing multicast addresses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jeff Kirsher <jeffrey.t.kirsher@intel.com>
commit a7731cc8a1593510cdd5acf97a70a41a2ebe9571
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a7731cc8.failed

When the PF receives a request to update a multicast address for the VF,
it checks the enabled multicast mode first. Fix a bug where the VF tried
to set a multicast address before requesting the required xcast mode.
This ensures the multicast addresses are honored as long as the xcast
mode was allowed.

	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Acked-by: Matthew Vick <matthew.vick@intel.com>
	Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit a7731cc8a1593510cdd5acf97a70a41a2ebe9571)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
diff --cc drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
index dd8554ad5dde,2f4f41b7eae7..000000000000
--- a/drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
+++ b/drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
@@@ -970,14 -970,7 +970,18 @@@ static void fm10k_set_rx_mode(struct ne
  
  	fm10k_mbx_lock(interface);
  
++<<<<<<< HEAD
 +	/* syncronize all of the addresses */
 +	if (xcast_mode != FM10K_XCAST_MODE_PROMISC) {
 +		__dev_uc_sync(dev, fm10k_uc_sync, fm10k_uc_unsync);
 +		if (xcast_mode != FM10K_XCAST_MODE_ALLMULTI)
 +			__dev_mc_sync(dev, fm10k_mc_sync, fm10k_mc_unsync);
 +	}
 +
 +	/* if we aren't changing modes there is nothing to do */
++=======
+ 	/* update xcast mode first, but only if it changed */
++>>>>>>> a7731cc8a159 (fm10k: update xcast mode before synchronizing multicast addresses)
  	if (interface->xcast_mode != xcast_mode) {
  		/* update VLAN table */
  		if (xcast_mode == FM10K_XCAST_MODE_PROMISC)
@@@ -1051,7 -1051,10 +1062,14 @@@ void fm10k_restore_rx_state(struct fm10
  					   vid, true, 0);
  	}
  
++<<<<<<< HEAD
 +	/* syncronize all of the addresses */
++=======
+ 	/* update xcast mode before syncronizing addresses */
+ 	hw->mac.ops.update_xcast_mode(hw, glort, xcast_mode);
+ 
+ 	/* synchronize all of the addresses */
++>>>>>>> a7731cc8a159 (fm10k: update xcast mode before synchronizing multicast addresses)
  	if (xcast_mode != FM10K_XCAST_MODE_PROMISC) {
  		__dev_uc_sync(netdev, fm10k_uc_sync, fm10k_uc_unsync);
  		if (xcast_mode != FM10K_XCAST_MODE_ALLMULTI)
* Unmerged path drivers/net/ethernet/intel/fm10k/fm10k_netdev.c
