md/raid1: make sure resync waits for conflicting writes to complete.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] raid1: make sure resync waits for conflicting writes to complete (Jes Sorensen) [1261114]
Rebuild_FUZZ: 96.97%
commit-author NeilBrown <neilb@suse.de>
commit 2f73d3c55d09ce60647b96ad2a9b539c95a530ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2f73d3c5.failed

The resync/recovery process for raid1 was recently changed
so that writes could happen in parallel with resync providing
they were in different regions of the device.

There is a problem though:  While a write request will always
wait for conflicting resync to complete, a resync request
will *not* always wait for conflicting writes to complete.

Two changes are needed to fix this:

1/ raise_barrier (which waits until it is safe to do resync)
   must wait until current_window_requests is zero
2/ wait_battier (which waits at the start of a new write request)
   must update current_window_requests if the request could
   possible conflict with a concurrent resync.

As concurrent writes and resync can lead to data loss,
this patch is suitable for -stable.

Fixes: 79ef3a8aa1cb1523cc231c9a90a278333c21f761
	Cc: stable@vger.kernel.org (v3.13+)
	Cc: majianpeng <majianpeng@gmail.com>
	Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 2f73d3c55d09ce60647b96ad2a9b539c95a530ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid1.c
diff --cc drivers/md/raid1.c
index bd5c16776ac5,b13c218997da..000000000000
--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@@ -908,8 -917,8 +910,13 @@@ static sector_t wait_barrier(struct r1c
  	}
  
  	if (bio && bio_data_dir(bio) == WRITE) {
++<<<<<<< HEAD
 +		if (conf->next_resync + NEXT_NORMALIO_DISTANCE
 +		    <= bio->bi_sector) {
++=======
+ 		if (bio->bi_iter.bi_sector >=
+ 		    conf->next_resync) {
++>>>>>>> 2f73d3c55d09 (md/raid1: make sure resync waits for conflicting writes to complete.)
  			if (conf->start_next_window == MaxSector)
  				conf->start_next_window =
  					conf->next_resync +
* Unmerged path drivers/md/raid1.c
