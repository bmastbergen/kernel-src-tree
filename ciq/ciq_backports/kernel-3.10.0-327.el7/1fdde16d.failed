hv: delete struct hv_dev_port_info

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] delete struct hv_dev_port_info (Vitaly Kuznetsov) [1201889]
Rebuild_FUZZ: 93.75%
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 1fdde16d1f93376ad2a2df769f756572c2e84cbd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1fdde16d.failed

It's no longer needed, and the struct hv_ring_buffer_debug_info
structure shouldn't be "global" so move it to the local .h file instead.

	Tested-by: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 1fdde16d1f93376ad2a2df769f756572c2e84cbd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/vmbus_drv.c
diff --cc drivers/hv/vmbus_drv.c
index 2ed3b20b532d,cf3220e8a3a6..000000000000
--- a/drivers/hv/vmbus_drv.c
+++ b/drivers/hv/vmbus_drv.c
@@@ -46,22 -46,9 +46,27 @@@ static struct tasklet_struct msg_dpc
  static struct completion probe_event;
  static int irq;
  
 +struct resource hyperv_mmio = {
 +	.name  = "hyperv mmio",
 +	.flags = IORESOURCE_MEM,
 +};
 +EXPORT_SYMBOL_GPL(hyperv_mmio);
 +
  struct hv_device_info {
++<<<<<<< HEAD
 +	u32 server_monitor_pending;
 +	u32 server_monitor_latency;
 +	u32 server_monitor_conn_id;
 +	u32 client_monitor_pending;
 +	u32 client_monitor_latency;
 +	u32 client_monitor_conn_id;
 +
 +	struct hv_dev_port_info inbound;
 +	struct hv_dev_port_info outbound;
++=======
+ 	struct hv_ring_buffer_debug_info inbound;
+ 	struct hv_ring_buffer_debug_info outbound;
++>>>>>>> 1fdde16d1f93 (hv: delete struct hv_dev_port_info)
  };
  
  static int vmbus_exists(void)
@@@ -76,37 -63,11 +81,45 @@@
  static void get_channel_info(struct hv_device *device,
  			     struct hv_device_info *info)
  {
++<<<<<<< HEAD
 +	struct vmbus_channel_debug_info debug_info;
 +
 +	if (!device->channel)
 +		return;
 +
 +	vmbus_get_debug_info(device->channel, &debug_info);
 +
 +	info->server_monitor_pending = debug_info.servermonitor_pending;
 +	info->server_monitor_latency = debug_info.servermonitor_latency;
 +	info->server_monitor_conn_id = debug_info.servermonitor_connectionid;
 +
 +	info->client_monitor_pending = debug_info.clientmonitor_pending;
 +	info->client_monitor_latency = debug_info.clientmonitor_latency;
 +	info->client_monitor_conn_id = debug_info.clientmonitor_connectionid;
 +
 +	info->inbound.int_mask = debug_info.inbound.current_interrupt_mask;
 +	info->inbound.read_idx = debug_info.inbound.current_read_index;
 +	info->inbound.write_idx = debug_info.inbound.current_write_index;
 +	info->inbound.bytes_avail_toread =
 +		debug_info.inbound.bytes_avail_toread;
 +	info->inbound.bytes_avail_towrite =
 +		debug_info.inbound.bytes_avail_towrite;
 +
 +	info->outbound.int_mask =
 +		debug_info.outbound.current_interrupt_mask;
 +	info->outbound.read_idx = debug_info.outbound.current_read_index;
 +	info->outbound.write_idx = debug_info.outbound.current_write_index;
 +	info->outbound.bytes_avail_toread =
 +		debug_info.outbound.bytes_avail_toread;
 +	info->outbound.bytes_avail_towrite =
 +		debug_info.outbound.bytes_avail_towrite;
++=======
+ 	if (!device->channel)
+ 		return;
+ 
+ 	hv_ringbuffer_get_debuginfo(&device->channel->inbound, &info->inbound);
+ 	hv_ringbuffer_get_debuginfo(&device->channel->outbound, &info->outbound);
++>>>>>>> 1fdde16d1f93 (hv: delete struct hv_dev_port_info)
  }
  
  #define VMBUS_ALIAS_LEN ((sizeof((struct hv_vmbus_device_id *)0)->guid) * 2)
diff --git a/drivers/hv/hyperv_vmbus.h b/drivers/hv/hyperv_vmbus.h
index b5e790856f6e..d0dbb41dec54 100644
--- a/drivers/hv/hyperv_vmbus.h
+++ b/drivers/hv/hyperv_vmbus.h
@@ -519,6 +519,13 @@ struct hv_context {
 
 extern struct hv_context hv_context;
 
+struct hv_ring_buffer_debug_info {
+	u32 current_interrupt_mask;
+	u32 current_read_index;
+	u32 current_write_index;
+	u32 bytes_avail_toread;
+	u32 bytes_avail_towrite;
+};
 
 /* Hv Interface */
 
* Unmerged path drivers/hv/vmbus_drv.c
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index c9f89b16b793..048fe3494318 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -115,15 +115,6 @@ struct hv_ring_buffer_info {
 	u32 ring_data_startoffset;
 };
 
-struct hv_ring_buffer_debug_info {
-	u32 current_interrupt_mask;
-	u32 current_read_index;
-	u32 current_write_index;
-	u32 bytes_avail_toread;
-	u32 bytes_avail_towrite;
-};
-
-
 /*
  *
  * hv_get_ringbuffer_availbytes()
@@ -890,14 +881,6 @@ extern void vmbus_get_debug_info(struct vmbus_channel *channel,
 
 extern void vmbus_ontimer(unsigned long data);
 
-struct hv_dev_port_info {
-	u32 int_mask;
-	u32 read_idx;
-	u32 write_idx;
-	u32 bytes_avail_toread;
-	u32 bytes_avail_towrite;
-};
-
 /* Base driver object */
 struct hv_driver {
 	const char *name;
