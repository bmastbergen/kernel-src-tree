scsi: ratelimit I/O error messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] ratelimit I/O error messages (Ewan Milne) [1124082]
Rebuild_FUZZ: 90.32%
commit-author Hannes Reinecke <hare@suse.de>
commit f1569ff1d5ae0ca8598956be632947a88f540e2a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f1569ff1.failed

There can be quite a lot of I/O error messages, even on smaller
machines. So we need to ratelimit them to not overwhelm logging.

	Signed-off-by: Hannes Reinecke <hare@suse.de>
	Tested-by: Robert Elliott <elliott@hp.com>
	Reviewed-by: Robert Elliott <elliott@hp.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit f1569ff1d5ae0ca8598956be632947a88f540e2a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_lib.c
diff --cc drivers/scsi/scsi_lib.c
index 2eb9f5889dec,fc0a8a0c0a34..000000000000
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@@ -20,6 -21,7 +20,10 @@@
  #include <linux/delay.h>
  #include <linux/hardirq.h>
  #include <linux/scatterlist.h>
++<<<<<<< HEAD
++=======
+ #include <linux/blk-mq.h>
++>>>>>>> f1569ff1d5ae (scsi: ratelimit I/O error messages)
  #include <linux/ratelimit.h>
  
  #include <scsi/scsi.h>
@@@ -887,14 -1039,28 +891,36 @@@ void scsi_io_completion(struct scsi_cmn
  	switch (action) {
  	case ACTION_FAIL:
  		/* Give up and fail the remainder of the request */
++<<<<<<< HEAD
 +		if (!(req->cmd_flags & REQ_QUIET) && __ratelimit(&rs)) {
 +			scsi_print_result(cmd);
 +			if (driver_byte(result) & DRIVER_SENSE)
 +				scsi_print_sense("", cmd);
 +			scsi_print_command(cmd);
++=======
+ 		if (!(req->cmd_flags & REQ_QUIET)) {
+ 			static DEFINE_RATELIMIT_STATE(_rs,
+ 					DEFAULT_RATELIMIT_INTERVAL,
+ 					DEFAULT_RATELIMIT_BURST);
+ 
+ 			if (unlikely(scsi_logging_level))
+ 				level = SCSI_LOG_LEVEL(SCSI_LOG_MLCOMPLETE_SHIFT,
+ 						       SCSI_LOG_MLCOMPLETE_BITS);
+ 
+ 			/*
+ 			 * if logging is enabled the failure will be printed
+ 			 * in scsi_log_completion(), so avoid duplicate messages
+ 			 */
+ 			if (!level && __ratelimit(&_rs)) {
+ 				scsi_print_result(cmd, NULL, FAILED);
+ 				if (driver_byte(result) & DRIVER_SENSE)
+ 					scsi_print_sense(cmd);
+ 				scsi_print_command(cmd);
+ 			}
++>>>>>>> f1569ff1d5ae (scsi: ratelimit I/O error messages)
  		}
 -		if (!scsi_end_request(req, error, blk_rq_err_bytes(req), 0))
 -			return;
 +		if (!blk_end_request_err(req, error))
 +			goto next_command;
  		/*FALLTHRU*/
  	case ACTION_REPREP:
  	requeue:
* Unmerged path drivers/scsi/scsi_lib.c
