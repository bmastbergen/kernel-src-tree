crypto: aesni - fix "by8" variant for 128 bit keys

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [crypto] aesni: fix "by8" variant for 128 bit keys (Herbert Xu) [1174971]
Rebuild_FUZZ: 87.91%
commit-author Mathias Krause <minipli@googlemail.com>
commit 0b1e95b2fa0934c3a08db483979c70d3b287f50e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0b1e95b2.failed

The "by8" counter mode optimization is broken for 128 bit keys with
input data longer than 128 bytes. It uses the wrong key material for
en- and decryption.

The key registers xkey0, xkey4, xkey8 and xkey12 need to be preserved
in case we're handling more than 128 bytes of input data -- they won't
get reloaded after the initial load. They must therefore be (a) loaded
on the first iteration and (b) be preserved for the latter ones. The
implementation for 128 bit keys does not comply with (a) nor (b).

Fix this by bringing the implementation back to its original source
and correctly load the key registers and preserve their values by
*not* re-using the registers for other purposes.

Kudos to James for reporting the issue and providing a test case
showing the discrepancies.

	Reported-by: James Yonan <james@openvpn.net>
	Cc: Chandramouli Narayanan <mouli@linux.intel.com>
	Cc: <stable@vger.kernel.org> # v3.18
	Signed-off-by: Mathias Krause <minipli@googlemail.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 0b1e95b2fa0934c3a08db483979c70d3b287f50e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/crypto/aes_ctrby8_avx-x86_64.S
* Unmerged path arch/x86/crypto/aes_ctrby8_avx-x86_64.S
* Unmerged path arch/x86/crypto/aes_ctrby8_avx-x86_64.S
