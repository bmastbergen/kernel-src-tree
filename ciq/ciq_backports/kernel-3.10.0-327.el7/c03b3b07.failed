x86, irq, mpparse: Release IOAPIC pin when PCI device is disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] irq, mpparse: Release IOAPIC pin when PCI device is disabled (Steve Best) [1231358]
Rebuild_FUZZ: 96.00%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit c03b3b0738a56cf283b0d05256988d5e3c8bd719
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c03b3b07.failed

Release IOAPIC pin associated with PCI device when the PCI device
is disabled.

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: Joerg Roedel <joro@8bytes.org>
	Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Grant Likely <grant.likely@linaro.org>
	Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
	Cc: Bjorn Helgaas <bhelgaas@google.com>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Yinghai Lu <yinghai@kernel.org>
Link: http://lkml.kernel.org/r/1402302011-23642-40-git-send-email-jiang.liu@linux.intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit c03b3b0738a56cf283b0d05256988d5e3c8bd719)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/mpparse.c
diff --cc arch/x86/kernel/mpparse.c
index b10e1132f316,fde86d2b79f8..000000000000
--- a/arch/x86/kernel/mpparse.c
+++ b/arch/x86/kernel/mpparse.c
@@@ -112,10 -113,20 +112,18 @@@ static void __init MP_bus_info(struct m
  		pr_warn("Unknown bustype %s - ignoring\n", str);
  }
  
++<<<<<<< HEAD
++=======
+ static struct irq_domain_ops mp_ioapic_irqdomain_ops = {
+ 	.map = mp_irqdomain_map,
+ 	.unmap = mp_irqdomain_unmap,
+ };
+ 
++>>>>>>> c03b3b0738a5 (x86, irq, mpparse: Release IOAPIC pin when PCI device is disabled)
  static void __init MP_ioapic_info(struct mpc_ioapic *m)
  {
 -	struct ioapic_domain_cfg cfg = {
 -		.type = IOAPIC_DOMAIN_LEGACY,
 -		.ops = &mp_ioapic_irqdomain_ops,
 -	};
 -
  	if (m->flags & MPC_APIC_USABLE)
 -		mp_register_ioapic(m->apicid, m->apicaddr, gsi_top, &cfg);
 +		mp_register_ioapic(m->apicid, m->apicaddr, gsi_top);
  }
  
  static void __init print_mp_irq_info(struct mpc_intsrc *mp_irq)
* Unmerged path arch/x86/kernel/mpparse.c
diff --git a/arch/x86/pci/irq.c b/arch/x86/pci/irq.c
index 84112f55dd7a..02a106a0ec25 100644
--- a/arch/x86/pci/irq.c
+++ b/arch/x86/pci/irq.c
@@ -26,6 +26,7 @@ static int acer_tm360_irqrouting;
 static struct irq_routing_table *pirq_table;
 
 static int pirq_enable_irq(struct pci_dev *dev);
+static void pirq_disable_irq(struct pci_dev *dev);
 
 /*
  * Never use: 0, 1, 2 (timer, keyboard, and cascade)
@@ -53,7 +54,7 @@ struct irq_router_handler {
 };
 
 int (*pcibios_enable_irq)(struct pci_dev *dev) = pirq_enable_irq;
-void (*pcibios_disable_irq)(struct pci_dev *dev) = NULL;
+void (*pcibios_disable_irq)(struct pci_dev *dev) = pirq_disable_irq;
 
 /*
  *  Check passed address for the PCI IRQ Routing Table signature
@@ -1186,7 +1187,7 @@ void pcibios_penalize_isa_irq(int irq, int active)
 
 static int pirq_enable_irq(struct pci_dev *dev)
 {
-	u8 pin;
+	u8 pin = 0;
 
 	pci_read_config_byte(dev, PCI_INTERRUPT_PIN, &pin);
 	if (pin && !pcibios_lookup_irq(dev, 1)) {
@@ -1254,3 +1255,11 @@ static int pirq_enable_irq(struct pci_dev *dev)
 	}
 	return 0;
 }
+
+static void pirq_disable_irq(struct pci_dev *dev)
+{
+	if (io_apic_assign_pci_irqs && dev->irq) {
+		mp_unmap_irq(dev->irq);
+		dev->irq = 0;
+	}
+}
