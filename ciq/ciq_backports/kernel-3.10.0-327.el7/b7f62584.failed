i2c: add quirk checks to core

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [i2c] add quirk checks to core (Gustavo Duarte) [1221075]
Rebuild_FUZZ: 90.57%
commit-author Wolfram Sang <wsa@the-dreams.de>
commit b7f625840267b18ef1011cba0085bb7e237d76f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b7f62584.failed

Let the core do the checks if HW quirks prevent a transfer. Saves code
from drivers and adds consistency.

	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
	Tested-by: Ray Jui <rjui@broadcom.com>
	Tested-by: Ivan T. Ivanov <iivanov@mm-sol.com>
	Tested-by: Neelesh Gupta <neelegup@linux.vnet.ibm.com>
Tested-By: Ludovic Desroches <ludovic.desroches@atmel.com>
(cherry picked from commit b7f625840267b18ef1011cba0085bb7e237d76f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/i2c-core.c
diff --cc drivers/i2c/i2c-core.c
index d6835cd1ee37,57a86f4aab43..000000000000
--- a/drivers/i2c/i2c-core.c
+++ b/drivers/i2c/i2c-core.c
@@@ -1491,6 -2005,22 +1550,25 @@@ int __i2c_transfer(struct i2c_adapter *
  	unsigned long orig_jiffies;
  	int ret, try;
  
++<<<<<<< HEAD
++=======
+ 	if (adap->quirks && i2c_check_for_quirks(adap, msgs, num))
+ 		return -EOPNOTSUPP;
+ 
+ 	/* i2c_trace_msg gets enabled when tracepoint i2c_transfer gets
+ 	 * enabled.  This is an efficient way of keeping the for-loop from
+ 	 * being executed when not needed.
+ 	 */
+ 	if (static_key_false(&i2c_trace_msg)) {
+ 		int i;
+ 		for (i = 0; i < num; i++)
+ 			if (msgs[i].flags & I2C_M_RD)
+ 				trace_i2c_read(adap, &msgs[i], i);
+ 			else
+ 				trace_i2c_write(adap, &msgs[i], i);
+ 	}
+ 
++>>>>>>> b7f625840267 (i2c: add quirk checks to core)
  	/* Retry automatically on arbitration loss */
  	orig_jiffies = jiffies;
  	for (ret = 0, try = 0; try <= adap->retries; try++) {
* Unmerged path drivers/i2c/i2c-core.c
