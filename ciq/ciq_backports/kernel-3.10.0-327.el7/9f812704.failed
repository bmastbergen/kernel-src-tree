ipmi: Fix a problem that messages are not issued in run_to_completion mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hidehiro Kawai <hidehiro.kawai.ez@hitachi.com>
commit 9f8127048ab8b47b43f8aeaaec9fec2da44be9a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9f812704.failed

start_next_msg() issues a message placed in smi_info->waiting_msg
if it is non-NULL.  However, sender() sets a message to
smi_info->curr_msg and NULL to smi_info->waiting_msg in the context
of run_to_completion mode.  As the result, it leads an infinite
loop by waiting the completion of unissued message when leaving
dying message after kernel panic.

sender() should set the message to smi_info->waiting_msg not
curr_msg.

	Signed-off-by: Hidehiro Kawai <hidehiro.kawai.ez@hitachi.com>
	Signed-off-by: Corey Minyard <cminyard@mvista.com>
(cherry picked from commit 9f8127048ab8b47b43f8aeaaec9fec2da44be9a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/ipmi/ipmi_si_intf.c
diff --cc drivers/char/ipmi/ipmi_si_intf.c
index cdfc62bd1d70,8a45e92ff60c..000000000000
--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@@ -908,10 -939,10 +908,14 @@@ static void sender(void                
  
  	if (smi_info->run_to_completion) {
  		/*
 -		 * If we are running to completion, start it and run
 -		 * transactions until everything is clear.
 +		 * If we are running to completion, then throw it in
 +		 * the list and run transactions until everything is
 +		 * clear.  Priority doesn't matter here.
  		 */
++<<<<<<< HEAD
++=======
+ 		smi_info->waiting_msg = msg;
++>>>>>>> 9f8127048ab8 (ipmi: Fix a problem that messages are not issued in run_to_completion mode)
  
  		/*
  		 * Run to completion means we are single-threaded, no
* Unmerged path drivers/char/ipmi/ipmi_si_intf.c
