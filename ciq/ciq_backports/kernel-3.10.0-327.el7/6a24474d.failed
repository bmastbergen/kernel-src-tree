percpu-refcount: consistently use plain (non-sched) RCU

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Tejun Heo <tj@kernel.org>
commit 6a24474da83ea7c8b7d32f05f858b1259994067a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6a24474d.failed

percpu_ref_get/put() are using preempt_disable/enable() while
percpu_ref_kill() is using plain call_rcu() instead of
call_rcu_sched().  This is buggy as grace periods of the two may not
match.  Fix it by using plain RCU in percpu_ref_get/put().

(I suggested using sched RCU in the first place but there's no actual
 benefit in doing so unless we're gonna introduce different variants
 of get/put to be called while preemption is alredy disabled, which we
 definitely shouldn't.)

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Reported-by: Rusty Russell <rusty@rustcorp.com.au>
	Acked-by: Kent Overstreet <koverstreet@google.com>
(cherry picked from commit 6a24474da83ea7c8b7d32f05f858b1259994067a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/percpu-refcount.h
* Unmerged path include/linux/percpu-refcount.h
* Unmerged path include/linux/percpu-refcount.h
