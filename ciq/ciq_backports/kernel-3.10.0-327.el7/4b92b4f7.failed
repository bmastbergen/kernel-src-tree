x86, irq: Simplify arch_early_irq_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] irq: Simplify arch_early_irq_init() (Steve Best) [1231358]
Rebuild_FUZZ: 93.33%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit 4b92b4f754939e4ac6bb53355abbe48a5054b573
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/4b92b4f7.failed

Simplify function arch_early_irq_init() and kill static array irq_cfgx[].

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: Joerg Roedel <joro@8bytes.org>
	Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Grant Likely <grant.likely@linaro.org>
	Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
	Cc: Bjorn Helgaas <bhelgaas@google.com>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Yinghai Lu <yinghai@kernel.org>
Link: http://lkml.kernel.org/r/1402302011-23642-21-git-send-email-jiang.liu@linux.intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit 4b92b4f754939e4ac6bb53355abbe48a5054b573)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/apic/io_apic.c
diff --cc arch/x86/kernel/apic/io_apic.c
index 07a33b81b46c,e25e7e315d4f..000000000000
--- a/arch/x86/kernel/apic/io_apic.c
+++ b/arch/x86/kernel/apic/io_apic.c
@@@ -216,13 -218,9 +217,9 @@@ static struct irq_pin_list *alloc_irq_p
  int __init arch_early_irq_init(void)
  {
  	struct irq_cfg *cfg;
- 	int count, node, i;
+ 	int i, node = cpu_to_node(0);
  
 -	if (!nr_legacy_irqs())
 +	if (!legacy_pic->nr_legacy_irqs)
  		io_apic_irqs = ~0UL;
  
  	for_each_ioapic(i) {
@@@ -233,25 -231,14 +230,36 @@@
  			pr_err("IOAPIC %d: suspend/resume impossible!\n", i);
  	}
  
++<<<<<<< HEAD
 +	cfg = irq_cfgx;
 +	count = ARRAY_SIZE(irq_cfgx);
 +	node = cpu_to_node(0);
 +
 +	/* Make sure the legacy interrupts are marked in the bitmap */
 +	irq_reserve_irqs(0, legacy_pic->nr_legacy_irqs);
 +
 +	for (i = 0; i < count; i++) {
 +		irq_set_chip_data(i, &cfg[i]);
 +		zalloc_cpumask_var_node(&cfg[i].domain, GFP_KERNEL, node);
 +		zalloc_cpumask_var_node(&cfg[i].old_domain, GFP_KERNEL, node);
 +		/*
 +		 * For legacy IRQ's, start with assigning irq0 to irq15 to
 +		 * IRQ0_VECTOR to IRQ15_VECTOR for all cpu's.
 +		 */
 +		if (i < legacy_pic->nr_legacy_irqs) {
 +			cfg[i].vector = IRQ0_VECTOR + i;
 +			cpumask_setall(cfg[i].domain);
 +		}
++=======
+ 	/*
+ 	 * For legacy IRQ's, start with assigning irq0 to irq15 to
+ 	 * IRQ0_VECTOR to IRQ15_VECTOR for all cpu's.
+ 	 */
+ 	for (i = 0; i < nr_legacy_irqs(); i++) {
+ 		cfg = alloc_irq_and_cfg_at(i, node);
+ 		cfg->vector = IRQ0_VECTOR + i;
+ 		cpumask_setall(cfg->domain);
++>>>>>>> 4b92b4f75493 (x86, irq: Simplify arch_early_irq_init())
  	}
  
  	return 0;
@@@ -3456,7 -3366,7 +3464,11 @@@ int __init arch_probe_nr_irqs(void
  	if (nr < nr_irqs)
  		nr_irqs = nr;
  
++<<<<<<< HEAD
 +	return NR_IRQS_LEGACY;
++=======
+ 	return 0;
++>>>>>>> 4b92b4f75493 (x86, irq: Simplify arch_early_irq_init())
  }
  
  int io_apic_set_pci_routing(struct device *dev, int irq,
* Unmerged path arch/x86/kernel/apic/io_apic.c
