net/mlx5_core: Set log_uar_page_sz for non 4K page size architecture

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] mlx5_core: Set log_uar_page_sz for non 4K page size architecture (Honggang Li) [1248676]
Rebuild_FUZZ: 96.97%
commit-author Carol L Soto <clsoto@linux.vnet.ibm.com>
commit fe1e1876d8f6d8d4b45e3940e6dd43cd3b18d958
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/fe1e1876.failed

failed to configure the page size for architectures with page size
different than 4K.

Fixes: 938fe83 ("net/mlx5_core: New device capabilities handling")
	Signed-off-by: Carol L Soto <clsoto@linux.vnet.ibm.com>
	Acked-by: Amir Vadai <amirv@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fe1e1876d8f6d8d4b45e3940e6dd43cd3b18d958)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index a652cb93ceaa,06e3e1e54c35..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -439,21 -372,27 +439,26 @@@ static int handle_hca_cap(struct mlx5_c
  	if (err)
  		goto query_ex;
  
 -	set_hca_cap = MLX5_ADDR_OF(set_hca_cap_in, set_ctx,
 -				   capability);
 -	memcpy(set_hca_cap, dev->hca_caps_cur[MLX5_CAP_GENERAL],
 -	       MLX5_ST_SZ_BYTES(cmd_hca_cap));
 +	err = mlx5_core_get_caps(dev, cur_caps, HCA_CAP_OPMOD_GET_CUR);
 +	if (err)
 +		goto query_ex;
  
 -	mlx5_core_dbg(dev, "Current Pkey table size %d Setting new size %d\n",
 -		      mlx5_to_sw_pkey_sz(MLX5_CAP_GEN(dev, pkey_table_size)),
 -		      128);
  	/* we limit the size of the pkey table to 128 entries for now */
 -	MLX5_SET(cmd_hca_cap, set_hca_cap, pkey_table_size,
 -		 to_fw_pkey_sz(128));
 +	cur_caps->gen.pkey_table_size = 128;
  
  	if (prof->mask & MLX5_PROF_MASK_QP_SIZE)
 -		MLX5_SET(cmd_hca_cap, set_hca_cap, log_max_qp,
 -			 prof->log_max_qp);
 +		cur_caps->gen.log_max_qp = prof->log_max_qp;
  
 -	/* disable cmdif checksum */
 -	MLX5_SET(cmd_hca_cap, set_hca_cap, cmdif_checksum, 0);
 +	/* disable checksum */
 +	cur_caps->gen.flags &= ~MLX5_DEV_CAP_FLAG_CMDIF_CSUM;
  
++<<<<<<< HEAD
 +	copy_rw_fields(MLX5_ADDR_OF(set_hca_cap_in, set_ctx, capability),
 +		       cur_caps);
++=======
+ 	MLX5_SET(cmd_hca_cap, set_hca_cap, log_uar_page_sz, PAGE_SHIFT - 12);
+ 
++>>>>>>> fe1e1876d8f6 (net/mlx5_core: Set log_uar_page_sz for non 4K page size architecture)
  	err = set_caps(dev, set_ctx, set_sz);
  
  query_ex:
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
