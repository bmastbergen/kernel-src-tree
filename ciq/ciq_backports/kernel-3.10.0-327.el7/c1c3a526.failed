powerpc/powernv: Separate function for OPAL IRQ setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [powerpc] powernv: Separate function for OPAL IRQ setup (Steve Best) [1221071]
Rebuild_FUZZ: 91.84%
commit-author Gavin Shan <gwshan@linux.vnet.ibm.com>
commit c1c3a526bb4ddbec7639a9fb3b84fede25b201d9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c1c3a526.failed

The patch put the OPAL interrupt setup logic in opal_init() into
seperate function opal_irq_init() for easier code maintaining. The
patch doesn't introduce logic changes except:

   * Rename variable names.
   * Release virtual IRQ upon error from request_irq().
   * Don't cache the virtual IRQ to opal_irqs[] upon error from
     request_irq().

	Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
	Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit c1c3a526bb4ddbec7639a9fb3b84fede25b201d9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/opal.c
diff --cc arch/powerpc/platforms/powernv/opal.c
index 2542700371c7,933c7fbd6b54..000000000000
--- a/arch/powerpc/platforms/powernv/opal.c
+++ b/arch/powerpc/platforms/powernv/opal.c
@@@ -589,6 -683,63 +589,66 @@@ static void __init opal_dump_region_ini
  		pr_warn("DUMP: Failed to register kernel log buffer. "
  			"rc = %d\n", rc);
  }
++<<<<<<< HEAD
++=======
+ 
+ static void opal_ipmi_init(struct device_node *opal_node)
+ {
+ 	struct device_node *np;
+ 
+ 	for_each_child_of_node(opal_node, np)
+ 		if (of_device_is_compatible(np, "ibm,opal-ipmi"))
+ 			of_platform_device_create(np, NULL, NULL);
+ }
+ 
+ static void opal_i2c_create_devs(void)
+ {
+ 	struct device_node *np;
+ 
+ 	for_each_compatible_node(np, NULL, "ibm,opal-i2c")
+ 		of_platform_device_create(np, NULL, NULL);
+ }
+ 
+ static void __init opal_irq_init(struct device_node *dn)
+ {
+ 	const __be32 *irqs;
+ 	int i, irqlen;
+ 
+ 	/* Get interrupt property */
+ 	irqs = of_get_property(opal_node, "opal-interrupts", &irqlen);
+ 	pr_debug("Found %d interrupts reserved for OPAL\n",
+ 		 irqs ? (irqlen / 4) : 0);
+ 
+ 	/* Install interrupt handlers */
+ 	opal_irq_count = irqlen / 4;
+ 	opal_irqs = kzalloc(opal_irq_count * sizeof(unsigned int), GFP_KERNEL);
+ 	for (i = 0; irqs && i < opal_irq_count; i++, irqs++) {
+ 		unsigned int irq, virq;
+ 		int rc;
+ 
+ 		/* Get hardware and virtual IRQ */
+ 		irq = be32_to_cpup(irqs);
+ 		virq = irq_create_mapping(NULL, irq);
+ 		if (virq == NO_IRQ) {
+ 			pr_warn("Failed to map irq 0x%x\n", irq);
+ 			continue;
+ 		}
+ 
+ 		/* Install interrupt handler */
+ 		rc = request_irq(virq, opal_interrupt, 0, "opal", NULL);
+ 		if (rc) {
+ 			irq_dispose_mapping(virq);
+ 			pr_warn("Error %d requesting irq %d (0x%x)\n",
+ 				 rc, virq, irq);
+ 			continue;
+ 		}
+ 
+ 		/* Cache IRQ */
+ 		opal_irqs[i] = virq;
+ 	}
+ }
+ 
++>>>>>>> c1c3a526bb4d (powerpc/powernv: Separate function for OPAL IRQ setup)
  static int __init opal_init(void)
  {
  	struct device_node *np, *consoles;
@@@ -615,25 -765,11 +674,29 @@@
  		of_node_put(consoles);
  	}
  
 -	/* Create i2c platform devices */
 -	opal_i2c_create_devs();
 -
  	/* Find all OPAL interrupts and request them */
++<<<<<<< HEAD
 +	irqs = of_get_property(opal_node, "opal-interrupts", &irqlen);
 +	pr_debug("opal: Found %d interrupts reserved for OPAL\n",
 +		 irqs ? (irqlen / 4) : 0);
 +	opal_irq_count = irqlen / 4;
 +	opal_irqs = kzalloc(opal_irq_count * sizeof(unsigned int), GFP_KERNEL);
 +	for (i = 0; irqs && i < (irqlen / 4); i++, irqs++) {
 +		unsigned int hwirq = be32_to_cpup(irqs);
 +		unsigned int irq = irq_create_mapping(NULL, hwirq);
 +		if (irq == NO_IRQ) {
 +			pr_warning("opal: Failed to map irq 0x%x\n", hwirq);
 +			continue;
 +		}
 +		rc = request_irq(irq, opal_interrupt, 0, "opal", NULL);
 +		if (rc)
 +			pr_warning("opal: Error %d requesting irq %d"
 +				   " (0x%x)\n", rc, irq, hwirq);
 +		opal_irqs[i] = irq;
 +	}
++=======
+ 	opal_irq_init(opal_node);
++>>>>>>> c1c3a526bb4d (powerpc/powernv: Separate function for OPAL IRQ setup)
  
  	/* Create "opal" kobject under /sys/firmware */
  	rc = opal_sysfs_init();
* Unmerged path arch/powerpc/platforms/powernv/opal.c
