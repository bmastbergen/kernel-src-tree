x86: kvmclock: abolish PVCLOCK_COUNTS_FROM_ZERO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] kvmclock: abolish PVCLOCK_COUNTS_FROM_ZERO (Radim Krcmar) [1263030]
Rebuild_FUZZ: 94.38%
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit 72c930dcfc2b49404ee9e20f6c868402e9c71166
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/72c930dc.failed

Newer KVM won't be exposing PVCLOCK_COUNTS_FROM_ZERO anymore.
The purpose of that flags was to start counting system time from 0 when
the KVM clock has been initialized.
We can achieve the same by selecting one read as the initial point.

A simple subtraction will work unless the KVM clock count overflows
earlier (has smaller width) than scheduler's cycle count.  We should be
safe till x86_128.

Because PVCLOCK_COUNTS_FROM_ZERO was enabled only on new hypervisors,
setting sched clock as stable based on PVCLOCK_TSC_STABLE_BIT might
regress on older ones.

I presume we don't need to change kvm_clock_read instead of introducing
kvm_sched_clock_read.  A problem could arise in case sched_clock is
expected to return the same value as get_cycles, but we should have
merged those clocks in that case.

	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
	Acked-by: Marcelo Tosatti <mtosatti@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 72c930dcfc2b49404ee9e20f6c868402e9c71166)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/kvmclock.c
diff --cc arch/x86/kernel/kvmclock.c
index 2edb7419212b,2bd81e302427..000000000000
--- a/arch/x86/kernel/kvmclock.c
+++ b/arch/x86/kernel/kvmclock.c
@@@ -264,13 -298,7 +298,16 @@@ void __init kvmclock_init(void
  #endif
  	kvm_get_preset_lpj();
  	clocksource_register_hz(&kvm_clock, NSEC_PER_SEC);
 +	pv_info.paravirt_enabled = 1;
  	pv_info.name = "KVM";
++<<<<<<< HEAD
 +
 +	if (kvm_para_has_feature(KVM_FEATURE_CLOCKSOURCE_STABLE_BIT))
 +		pvclock_set_flags(PVCLOCK_TSC_STABLE_BIT);
 +
 +	set_sched_clock_stable();
++=======
++>>>>>>> 72c930dcfc2b (x86: kvmclock: abolish PVCLOCK_COUNTS_FROM_ZERO)
  }
  
  int __init kvm_setup_vsyscall_timeinfo(void)
* Unmerged path arch/x86/kernel/kvmclock.c
