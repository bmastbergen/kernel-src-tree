kernel/reboot.c: add orderly_reboot for graceful reboot

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [kernel] reboot: add orderly_reboot for graceful reboot (Gustavo Duarte) [1221072]
Rebuild_FUZZ: 91.09%
commit-author Joel Stanley <joel@jms.id.au>
commit 7a54f46b301cfab8a0d7365aa186545f8b98f22e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7a54f46b.failed

The kernel has orderly_poweroff which allows the kernel to initiate a
graceful shutdown of userspace, by running /sbin/poweroff.  This adds
orderly_reboot that will cause userspace to shut itself down by calling
/sbin/reboot.

This will be used for shutdown initiated by a system controller on
platforms that do not use ACPI.

orderly_reboot() should be used when the system wants to allow userspace
to gracefully shut itself down.  For cases where the system may imminently
catch on fire, the existing emergency_restart() provides an immediate
reboot without involving userspace.

	Signed-off-by: Joel Stanley <joel@jms.id.au>
	Cc: Fabian Frederick <fabf@skynet.be>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Rusty Russell <rusty@rustcorp.com.au>
	Cc: Jeremy Kerr <jk@ozlabs.org>
	Cc: David S. Miller <davem@davemloft.net>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7a54f46b301cfab8a0d7365aa186545f8b98f22e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/reboot.c
* Unmerged path kernel/reboot.c
diff --git a/include/linux/reboot.h b/include/linux/reboot.h
index 23b36304cd88..bbd802a625a6 100644
--- a/include/linux/reboot.h
+++ b/include/linux/reboot.h
@@ -41,7 +41,8 @@ void ctrl_alt_del(void);
 #define POWEROFF_CMD_PATH_LEN	256
 extern char poweroff_cmd[POWEROFF_CMD_PATH_LEN];
 
-extern int orderly_poweroff(bool force);
+extern void orderly_poweroff(bool force);
+extern void orderly_reboot(void);
 
 /*
  * Emergency restart, callable from an interrupt handler.
* Unmerged path kernel/reboot.c
