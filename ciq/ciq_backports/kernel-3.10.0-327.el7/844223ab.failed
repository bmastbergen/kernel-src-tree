bonding: use ether_addr_equal_64bits to instead of ether_addr_equal

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author dingtianhong <dingtianhong@huawei.com>
commit 844223abe9f88b0e0cb7fb1f1f8ab04fe29806bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/844223ab.failed

The net_device.dev_addr have more than 2 bytes of additional data after
the mac addr, so it is safe to use the ether_addr_equal_64bits().

	Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 844223abe9f88b0e0cb7fb1f1f8ab04fe29806bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 31650ac192dc,69525942658d..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -1901,10 -1635,9 +1901,15 @@@ err_free
  	kfree(new_slave);
  
  err_undo_flags:
 +	bond_compute_features(bond);
  	/* Enslave of first slave has failed and we need to fix master's mac */
++<<<<<<< HEAD
 +	if (bond->slave_cnt == 0 &&
 +	    ether_addr_equal(bond_dev->dev_addr, slave_dev->dev_addr))
++=======
+ 	if (!bond_has_slaves(bond) &&
+ 	    ether_addr_equal_64bits(bond_dev->dev_addr, slave_dev->dev_addr))
++>>>>>>> 844223abe9f8 (bonding: use ether_addr_equal_64bits to instead of ether_addr_equal)
  		eth_hw_addr_random(bond_dev);
  
  	return res;
@@@ -1988,8 -1709,14 +1993,19 @@@ static int __bond_release_one(struct ne
  
  	bond->current_arp_slave = NULL;
  
++<<<<<<< HEAD
 +	/* release the slave from its bond */
 +	bond_detach_slave(bond, slave);
++=======
+ 	if (!all && !bond->params.fail_over_mac) {
+ 		if (ether_addr_equal_64bits(bond_dev->dev_addr, slave->perm_hwaddr) &&
+ 		    bond_has_slaves(bond))
+ 			pr_warn("%s: Warning: the permanent HWaddr of %s - %pM - is still in use by %s. Set the HWaddr of %s to a different address to avoid conflicts.\n",
+ 				   bond_dev->name, slave_dev->name,
+ 				   slave->perm_hwaddr,
+ 				   bond_dev->name, slave_dev->name);
+ 	}
++>>>>>>> 844223abe9f8 (bonding: use ether_addr_equal_64bits to instead of ether_addr_equal)
  
  	if (bond->primary_slave == slave)
  		bond->primary_slave = NULL;
* Unmerged path drivers/net/bonding/bond_main.c
