ACPI / scan: always register ACPI LPSS scan handler

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [acpi] scan: always register ACPI LPSS scan handler (Prarit Bhargava) [1178891]
Rebuild_FUZZ: 92.63%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit d6ddaaac8f5c37ad84db3e6e019981f392389cf0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d6ddaaac.failed

Prevent platform devices from being created for ACPI LPSS devices
if CONFIG_X86_INTEL_LPSS is unset by compiling out the LPSS scan
handler's callbacks only in that case and still compiling its device
ID list in and registering the scan handler in either case.

This change is based on a prototype from Zhang Rui.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
(cherry picked from commit d6ddaaac8f5c37ad84db3e6e019981f392389cf0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpi_lpss.c
diff --cc drivers/acpi/acpi_lpss.c
index ed5dc78f528a,51069b260518..000000000000
--- a/drivers/acpi/acpi_lpss.c
+++ b/drivers/acpi/acpi_lpss.c
@@@ -149,27 -172,44 +153,62 @@@ static struct lpss_device_desc byt_i2c_
  	.shared_clock = &i2c_clock,
  };
  
+ #else
+ 
+ #define LPSS_ADDR(desc) (0UL)
+ 
+ #endif /* CONFIG_X86_INTEL_LPSS */
+ 
  static const struct acpi_device_id acpi_lpss_device_ids[] = {
  	/* Generic LPSS devices */
- 	{ "INTL9C60", (unsigned long)&lpss_dma_desc },
+ 	{ "INTL9C60", LPSS_ADDR(lpss_dma_desc) },
  
  	/* Lynxpoint LPSS devices */
++<<<<<<< HEAD
 +	{ "INT33C0", (unsigned long)&lpt_dev_desc },
 +	{ "INT33C1", (unsigned long)&lpt_dev_desc },
 +	{ "INT33C2", (unsigned long)&lpt_dev_desc },
 +	{ "INT33C3", (unsigned long)&lpt_dev_desc },
 +	{ "INT33C4", (unsigned long)&lpt_uart_dev_desc },
 +	{ "INT33C5", (unsigned long)&lpt_uart_dev_desc },
 +	{ "INT33C6", (unsigned long)&lpt_sdio_dev_desc },
 +	{ "INT33C7", },
 +
 +	/* BayTrail LPSS devices */
 +	{ "80860F0A", (unsigned long)&byt_uart_dev_desc },
 +	{ "80860F0E", (unsigned long)&byt_spi_dev_desc },
 +	{ "80860F14", (unsigned long)&byt_sdio_dev_desc },
 +	{ "80860F41", (unsigned long)&byt_i2c_dev_desc },
 +	{ "INT33B2", },
 +
++=======
+ 	{ "INT33C0", LPSS_ADDR(lpt_dev_desc) },
+ 	{ "INT33C1", LPSS_ADDR(lpt_dev_desc) },
+ 	{ "INT33C2", LPSS_ADDR(lpt_i2c_dev_desc) },
+ 	{ "INT33C3", LPSS_ADDR(lpt_i2c_dev_desc) },
+ 	{ "INT33C4", LPSS_ADDR(lpt_uart_dev_desc) },
+ 	{ "INT33C5", LPSS_ADDR(lpt_uart_dev_desc) },
+ 	{ "INT33C6", LPSS_ADDR(lpt_sdio_dev_desc) },
+ 	{ "INT33C7", },
+ 
+ 	/* BayTrail LPSS devices */
+ 	{ "80860F09", LPSS_ADDR(byt_pwm_dev_desc) },
+ 	{ "80860F0A", LPSS_ADDR(byt_uart_dev_desc) },
+ 	{ "80860F0E", LPSS_ADDR(byt_spi_dev_desc) },
+ 	{ "80860F14", LPSS_ADDR(byt_sdio_dev_desc) },
+ 	{ "80860F41", LPSS_ADDR(byt_i2c_dev_desc) },
+ 	{ "INT33B2", },
+ 
+ 	{ "INT3430", LPSS_ADDR(lpt_dev_desc) },
+ 	{ "INT3431", LPSS_ADDR(lpt_dev_desc) },
+ 	{ "INT3432", LPSS_ADDR(lpt_i2c_dev_desc) },
+ 	{ "INT3433", LPSS_ADDR(lpt_i2c_dev_desc) },
+ 	{ "INT3434", LPSS_ADDR(lpt_uart_dev_desc) },
+ 	{ "INT3435", LPSS_ADDR(lpt_uart_dev_desc) },
+ 	{ "INT3436", LPSS_ADDR(lpt_sdio_dev_desc) },
+ 	{ "INT3437", },
+ 
++>>>>>>> d6ddaaac8f5c (ACPI / scan: always register ACPI LPSS scan handler)
  	{ }
  };
  
diff --git a/drivers/acpi/Makefile b/drivers/acpi/Makefile
index 933be06afd44..77a7b101277f 100644
--- a/drivers/acpi/Makefile
+++ b/drivers/acpi/Makefile
@@ -39,7 +39,7 @@ acpi-y				+= processor_core.o
 acpi-y				+= ec.o
 acpi-$(CONFIG_ACPI_DOCK)	+= dock.o
 acpi-y				+= pci_root.o pci_link.o pci_irq.o
-acpi-$(CONFIG_X86_INTEL_LPSS)	+= acpi_lpss.o
+acpi-y				+= acpi_lpss.o
 acpi-y				+= acpi_platform.o
 acpi-y				+= power.o
 acpi-y				+= event.o
* Unmerged path drivers/acpi/acpi_lpss.c
diff --git a/drivers/acpi/internal.h b/drivers/acpi/internal.h
index 1eabf931aaba..f2c092c78cb4 100644
--- a/drivers/acpi/internal.h
+++ b/drivers/acpi/internal.h
@@ -72,11 +72,7 @@ int acpi_debugfs_init(void);
 #else
 static inline void acpi_debugfs_init(void) { return; }
 #endif
-#ifdef CONFIG_X86_INTEL_LPSS
 void acpi_lpss_init(void);
-#else
-static inline void acpi_lpss_init(void) {}
-#endif
 
 acpi_status acpi_hotplug_schedule(struct acpi_device *adev, u32 src);
 bool acpi_queue_hotplug_work(struct work_struct *work);
