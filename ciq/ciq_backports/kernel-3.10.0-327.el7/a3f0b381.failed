i40e: poll on NVM semaphore only if not other error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Shannon Nelson <shannon.nelson@intel.com>
commit a3f0b381ee4a84b633ea60ffa8e01f84e9528c75
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a3f0b381.failed

Only poll on the NVM semaphore if there's time left on a previous
reservation.  Also, add a little more info to debug messages.

Change-ID: I2439bf870b95a28b810dcb5cca1c06440463cf8a
	Signed-off-by: Shannon Nelson <shannon.nelson@intel.com>
	Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
	Tested-by: Jim Young <jamesx.m.young@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit a3f0b381ee4a84b633ea60ffa8e01f84e9528c75)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_nvm.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_nvm.c
index ca91e3157fe0,0fc62fc941e8..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_nvm.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_nvm.c
@@@ -91,21 -91,22 +91,33 @@@ i40e_status i40e_acquire_nvm(struct i40
  	gtime = rd32(hw, I40E_GLVFGEN_TIMER);
  
  	/* Store the timeout */
 -	hw->nvm.hw_semaphore_timeout = I40E_MS_TO_GTIME(time_left) + gtime;
 +	hw->nvm.hw_semaphore_timeout = I40E_MS_TO_GTIME(time) + gtime;
  
++<<<<<<< HEAD
 +	if (ret_code) {
 +		/* Set the polling timeout */
 +		if (time > I40E_MAX_NVM_TIMEOUT)
 +			timeout = I40E_MS_TO_GTIME(I40E_MAX_NVM_TIMEOUT)
 +				  + gtime;
 +		else
 +			timeout = hw->nvm.hw_semaphore_timeout;
 +		/* Poll until the current NVM owner timeouts */
 +		while (gtime < timeout) {
++=======
+ 	if (ret_code)
+ 		i40e_debug(hw, I40E_DEBUG_NVM,
+ 			   "NVM acquire type %d failed time_left=%llu ret=%d aq_err=%d\n",
+ 			   access, time_left, ret_code, hw->aq.asq_last_status);
+ 
+ 	if (ret_code && time_left) {
+ 		/* Poll until the current NVM owner timeouts */
+ 		timeout = I40E_MS_TO_GTIME(I40E_MAX_NVM_TIMEOUT) + gtime;
+ 		while ((gtime < timeout) && time_left) {
++>>>>>>> a3f0b381ee4a (i40e: poll on NVM semaphore only if not other error)
  			usleep_range(10000, 20000);
 -			gtime = rd32(hw, I40E_GLVFGEN_TIMER);
  			ret_code = i40e_aq_request_resource(hw,
  							I40E_NVM_RESOURCE_ID,
 -							access, 0, &time_left,
 +							access, 0, &time,
  							NULL);
  			if (!ret_code) {
  				hw->nvm.hw_semaphore_timeout =
@@@ -116,11 -116,9 +128,16 @@@
  		}
  		if (ret_code) {
  			hw->nvm.hw_semaphore_timeout = 0;
 +			hw->nvm.hw_semaphore_wait =
 +						I40E_MS_TO_GTIME(time) + gtime;
  			i40e_debug(hw, I40E_DEBUG_NVM,
++<<<<<<< HEAD
 +				   "NVM acquire timed out, wait %llu ms before trying again.\n",
 +				   time);
++=======
+ 				   "NVM acquire timed out, wait %llu ms before trying again. status=%d aq_err=%d\n",
+ 				   time_left, ret_code, hw->aq.asq_last_status);
++>>>>>>> a3f0b381ee4a (i40e: poll on NVM semaphore only if not other error)
  		}
  	}
  
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_nvm.c
