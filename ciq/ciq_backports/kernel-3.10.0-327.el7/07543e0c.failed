hpsa: guard against overflowing raid map array

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Stephen Cameron <stephenmcameron@gmail.com>
commit 07543e0c05de177f2e9612ae7756e904b329379c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/07543e0c.failed

In the code that translates logical drive LBAs to physical
drive LBAs if we overflow the raid map disk data array we
will get the wrong answers.  We do not expect that to happen,
but best to be on the safe side and guard against it anyway.

	Reviewed-by: Scott Teel <scott.teel@pmcs.com>
	Signed-off-by: Don Brace <don.brace@pmcs.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 07543e0c05de177f2e9612ae7756e904b329379c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/hpsa.c
diff --cc drivers/scsi/hpsa.c
index 324be725ca32,03fae8af23ec..000000000000
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@@ -3763,6 -3921,11 +3763,14 @@@ static int hpsa_scsi_ioaccel_raid_map(s
  		return IO_ACCEL_INELIGIBLE;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (unlikely(map_index >= RAID_MAP_MAX_ENTRIES))
+ 		return IO_ACCEL_INELIGIBLE;
+ 
+ 	c->phys_disk = dev->phys_disk[map_index];
+ 
++>>>>>>> 07543e0c05de (hpsa: guard against overflowing raid map array)
  	disk_handle = dd[map_index].ioaccel_handle;
  	disk_block = le64_to_cpu(map->disk_starting_blk) +
  			first_row * le16_to_cpu(map->strip_size) +
* Unmerged path drivers/scsi/hpsa.c
