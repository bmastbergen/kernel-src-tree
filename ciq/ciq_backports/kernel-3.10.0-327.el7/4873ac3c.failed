bonding: add net_ratelimt to avoid spam in arp interval

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author dingtianhong <dingtianhong@huawei.com>
commit 4873ac3c8ed3b0285f18b81e501249c26284c2ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/4873ac3c.failed

Remove the unnecessary log and add net_ratelimit to the others, in order to
avoid spam the log.

	Cc: Joe Perches <joe@perches.com>
	Cc: Jay Vosburgh <fubar@us.ibm.com>
	Cc: Veaceslav Falico <vfalico@redhat.com>
	Cc: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4873ac3c8ed3b0285f18b81e501249c26284c2ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 6df1bb589f96,5be34b72a048..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2443,13 -2138,26 +2443,33 @@@ static void bond_arp_send(struct net_de
  			 NULL, slave_dev->dev_addr, NULL);
  
  	if (!skb) {
- 		pr_err("ARP packet allocation failed\n");
+ 		net_err_ratelimited("ARP packet allocation failed\n");
  		return;
  	}
++<<<<<<< HEAD
 +	if (vlan_id) {
 +		skb = vlan_put_tag(skb, htons(ETH_P_8021Q), vlan_id);
 +		if (!skb) {
 +			pr_err("failed to insert VLAN tag\n");
++=======
+ 	if (outer->vlan_id) {
+ 		if (inner->vlan_id) {
+ 			pr_debug("inner tag: proto %X vid %X\n",
+ 				 ntohs(inner->vlan_proto), inner->vlan_id);
+ 			skb = __vlan_put_tag(skb, inner->vlan_proto,
+ 					     inner->vlan_id);
+ 			if (!skb) {
+ 				net_err_ratelimited("failed to insert inner VLAN tag\n");
+ 				return;
+ 			}
+ 		}
+ 
+ 		pr_debug("outer reg: proto %X vid %X\n",
+ 			 ntohs(outer->vlan_proto), outer->vlan_id);
+ 		skb = vlan_put_tag(skb, outer->vlan_proto, outer->vlan_id);
+ 		if (!skb) {
+ 			net_err_ratelimited("failed to insert outer VLAN tag\n");
++>>>>>>> 4873ac3c8ed3 (bonding: add net_ratelimt to avoid spam in arp interval)
  			return;
  		}
  	}
@@@ -2475,10 -2188,11 +2495,18 @@@ static void bond_arp_send_all(struct bo
  			/* there's no route to target - try to send arp
  			 * probe to generate any traffic (arp_validate=0)
  			 */
++<<<<<<< HEAD
 +			if (bond->params.arp_validate && net_ratelimit())
 +				pr_warn("%s: no route to arp_ip_target %pI4 and arp_validate is set\n",
 +					bond->dev->name, &targets[i]);
 +			bond_arp_send(slave->dev, ARPOP_REQUEST, targets[i], 0, 0);
++=======
+ 			if (bond->params.arp_validate)
+ 				net_warn_ratelimited("%s: no route to arp_ip_target %pI4 and arp_validate is set\n",
+ 						     bond->dev->name,
+ 						     &targets[i]);
+ 			bond_arp_send(slave->dev, ARPOP_REQUEST, targets[i], 0, &inner, &outer);
++>>>>>>> 4873ac3c8ed3 (bonding: add net_ratelimt to avoid spam in arp interval)
  			continue;
  		}
  
* Unmerged path drivers/net/bonding/bond_main.c
