drm/nouveau/disp/dp: gm1xx appears to have same dp lane ordering as gm2xx

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [drm] nouveau/disp/dp: gm1xx appears to have same dp lane ordering as gm2xx (Rob Clark) [1249805]
Rebuild_FUZZ: 97.18%
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 2a89359415da2fc1250b4c205de3c384bd781f54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2a893594.failed

Fixes 2-lane DP on Quadro K620.

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 2a89359415da2fc1250b4c205de3c384bd781f54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/core/engine/disp/sornv94.c
#	drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
#	drivers/gpu/drm/nouveau/nvkm/engine/disp/nv50.h
diff --cc drivers/gpu/drm/nouveau/core/engine/disp/sornv94.c
index 05487cda84a8,22443627a086..000000000000
--- a/drivers/gpu/drm/nouveau/core/engine/disp/sornv94.c
+++ b/drivers/gpu/drm/nouveau/core/engine/disp/sornv94.c
@@@ -41,19 -34,22 +41,30 @@@ nv94_sor_soff(struct nvkm_output_dp *ou
  }
  
  static inline u32
 -g94_sor_loff(struct nvkm_output_dp *outp)
 +nv94_sor_loff(struct nvkm_output_dp *outp)
  {
 -	return g94_sor_soff(outp) + !(outp->base.info.sorconf.link & 1) * 0x80;
 +	return nv94_sor_soff(outp) + !(outp->base.info.sorconf.link & 1) * 0x80;
  }
  
++<<<<<<< HEAD:drivers/gpu/drm/nouveau/core/engine/disp/sornv94.c
 +static inline u32
 +nv94_sor_dp_lane_map(struct nv50_disp_priv *priv, u8 lane)
 +{
 +	static const u8 nvaf[] = { 24, 16, 8, 0 }; /* thanks, apple.. */
 +	static const u8 nv94[] = { 16, 8, 0, 24 };
++=======
+ u32
+ g94_sor_dp_lane_map(struct nv50_disp_priv *priv, u8 lane)
+ {
+ 	static const u8 gm100[] = { 0, 8, 16, 24 };
+ 	static const u8 mcp89[] = { 24, 16, 8, 0 }; /* thanks, apple.. */
+ 	static const u8   g94[] = { 16, 8, 0, 24 };
+ 	if (nv_device(priv)->chipset >= 0x110)
+ 		return gm100[lane];
++>>>>>>> 2a89359415da (drm/nouveau/disp/dp: gm1xx appears to have same dp lane ordering as gm2xx):drivers/gpu/drm/nouveau/nvkm/engine/disp/sorg94.c
  	if (nv_device(priv)->chipset == 0xaf)
 -		return mcp89[lane];
 -	return g94[lane];
 +		return nvaf[lane];
 +	return nv94[lane];
  }
  
  static int
diff --cc drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
index 97f0e9cd3d40,1f02b603e19a..000000000000
--- a/drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
+++ b/drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
@@@ -40,23 -31,16 +40,26 @@@ nvd0_sor_soff(struct nvkm_output_dp *ou
  }
  
  static inline u32
 -gf110_sor_loff(struct nvkm_output_dp *outp)
 +nvd0_sor_loff(struct nvkm_output_dp *outp)
 +{
 +	return nvd0_sor_soff(outp) + !(outp->base.info.sorconf.link & 1) * 0x80;
 +}
 +
++<<<<<<< HEAD:drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
 +static inline u32
 +nvd0_sor_dp_lane_map(struct nv50_disp_priv *priv, u8 lane)
  {
 -	return gf110_sor_soff(outp) + !(outp->base.info.sorconf.link & 1) * 0x80;
 +	static const u8 nvd0[] = { 16, 8, 0, 24 };
 +	return nvd0[lane];
  }
  
++=======
++>>>>>>> 2a89359415da (drm/nouveau/disp/dp: gm1xx appears to have same dp lane ordering as gm2xx):drivers/gpu/drm/nouveau/nvkm/engine/disp/sorgf110.c
  static int
 -gf110_sor_dp_pattern(struct nvkm_output_dp *outp, int pattern)
 +nvd0_sor_dp_pattern(struct nvkm_output_dp *outp, int pattern)
  {
 -	struct nv50_disp_priv *priv = (void *)nvkm_disp(outp);
 -	const u32 loff = gf110_sor_loff(outp);
 +	struct nv50_disp_priv *priv = (void *)nouveau_disp(outp);
 +	const u32 loff = nvd0_sor_loff(outp);
  	nv_mask(priv, 0x61c110 + loff, 0x0f0f0f0f, 0x01010101 * pattern);
  	return 0;
  }
@@@ -81,12 -65,13 +84,19 @@@ nvd0_sor_dp_lnk_ctl(struct nvkm_output_
  }
  
  static int
 -gf110_sor_dp_drv_ctl(struct nvkm_output_dp *outp,
 -		     int ln, int vs, int pe, int pc)
 +nvd0_sor_dp_drv_ctl(struct nvkm_output_dp *outp, int ln, int vs, int pe, int pc)
  {
++<<<<<<< HEAD:drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
 +	struct nv50_disp_priv *priv = (void *)nouveau_disp(outp);
 +	struct nouveau_bios *bios = nouveau_bios(priv);
 +	const u32 shift = nvd0_sor_dp_lane_map(priv, ln);
 +	const u32 loff = nvd0_sor_loff(outp);
++=======
+ 	struct nv50_disp_priv *priv = (void *)nvkm_disp(outp);
+ 	struct nvkm_bios *bios = nvkm_bios(priv);
+ 	const u32 shift = g94_sor_dp_lane_map(priv, ln);
+ 	const u32 loff = gf110_sor_loff(outp);
++>>>>>>> 2a89359415da (drm/nouveau/disp/dp: gm1xx appears to have same dp lane ordering as gm2xx):drivers/gpu/drm/nouveau/nvkm/engine/disp/sorgf110.c
  	u32 addr, data[4];
  	u8  ver, hdr, cnt, len;
  	struct nvbios_dpout info;
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/disp/nv50.h
* Unmerged path drivers/gpu/drm/nouveau/core/engine/disp/sornv94.c
* Unmerged path drivers/gpu/drm/nouveau/core/engine/disp/sornvd0.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/disp/nv50.h
