powerpc/eeh: Fix trivial error in eeh_restore_dev_state()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [powerpc] eeh: Fix trivial error in eeh_restore_dev_state() (David Gibson) [1227573]
Rebuild_FUZZ: 92.45%
commit-author David Gibson <david@gibson.dropbear.id.au>
commit 502f159c0239863deebfc50e09c0892d0c157101
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/502f159c.failed

Commit 28158cd "powerpc/eeh: Enhance pcibios_set_pcie_reset_state()"
introduced a fix for a problem where certain configurations could lead to
pci_reset_function() destroying the state of PCI devices other than the one
specified.

Unfortunately, the fix has a trivial bug - it calls pci_save_state() again,
when it should be calling pci_restore_state().  This corrects the problem.

	Cc: Gavin Shan <gwshan@au1.ibm.com>
	Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
	Acked-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 502f159c0239863deebfc50e09c0892d0c157101)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/eeh.c
diff --cc arch/powerpc/kernel/eeh.c
index 6021b67a433c,51dcdf66e9e6..000000000000
--- a/arch/powerpc/kernel/eeh.c
+++ b/arch/powerpc/kernel/eeh.c
@@@ -664,6 -673,55 +664,58 @@@ int eeh_pci_enable(struct eeh_pe *pe, i
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ static void *eeh_disable_and_save_dev_state(void *data, void *userdata)
+ {
+ 	struct eeh_dev *edev = data;
+ 	struct pci_dev *pdev = eeh_dev_to_pci_dev(edev);
+ 	struct pci_dev *dev = userdata;
+ 
+ 	/*
+ 	 * The caller should have disabled and saved the
+ 	 * state for the specified device
+ 	 */
+ 	if (!pdev || pdev == dev)
+ 		return NULL;
+ 
+ 	/* Ensure we have D0 power state */
+ 	pci_set_power_state(pdev, PCI_D0);
+ 
+ 	/* Save device state */
+ 	pci_save_state(pdev);
+ 
+ 	/*
+ 	 * Disable device to avoid any DMA traffic and
+ 	 * interrupt from the device
+ 	 */
+ 	pci_write_config_word(pdev, PCI_COMMAND, PCI_COMMAND_INTX_DISABLE);
+ 
+ 	return NULL;
+ }
+ 
+ static void *eeh_restore_dev_state(void *data, void *userdata)
+ {
+ 	struct eeh_dev *edev = data;
+ 	struct pci_dn *pdn = eeh_dev_to_pdn(edev);
+ 	struct pci_dev *pdev = eeh_dev_to_pci_dev(edev);
+ 	struct pci_dev *dev = userdata;
+ 
+ 	if (!pdev)
+ 		return NULL;
+ 
+ 	/* Apply customization from firmware */
+ 	if (pdn && eeh_ops->restore_config)
+ 		eeh_ops->restore_config(pdn);
+ 
+ 	/* The caller should restore state for the specified device */
+ 	if (pdev != dev)
+ 		pci_restore_state(pdev);
+ 
+ 	return NULL;
+ }
+ 
++>>>>>>> 502f159c0239 (powerpc/eeh: Fix trivial error in eeh_restore_dev_state())
  /**
   * pcibios_set_pcie_slot_reset - Set PCI-E reset state
   * @dev: pci device struct
* Unmerged path arch/powerpc/kernel/eeh.c
