bonding: use RCU protection for 3ad xmit path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author dingtianhong <dingtianhong@huawei.com>
commit 47e91f56008b43e1365e8d1d4a6813fe8a33b6f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/47e91f56.failed

The commit 278b20837511776dc9d5f6ee1c7fabd5479838bb
(bonding: initial RCU conversion) has convert the roundrobin,
active-backup, broadcast and xor xmit path to rcu protection,
the performance will be better for these mode, so this time,
convert xmit path for 3ad mode.

	Suggested-by: Nikolay Aleksandrov <nikolay@redhat.com>
	Suggested-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: Wang Yufen <wangyufen@huawei.com>
	Cc: Nikolay Aleksandrov <nikolay@redhat.com>
	Cc: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 47e91f56008b43e1365e8d1d4a6813fe8a33b6f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index 466dba240756,187b1b7772ef..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -2380,9 -2340,12 +2380,14 @@@ int __bond_3ad_get_active_agg_info(stru
  				   struct ad_info *ad_info)
  {
  	struct aggregator *aggregator = NULL;
 -	struct list_head *iter;
 -	struct slave *slave;
  	struct port *port;
  
++<<<<<<< HEAD
 +	for (port = __get_first_port(bond); port; port = __get_next_port(port)) {
++=======
+ 	bond_for_each_slave_rcu(bond, slave, iter) {
+ 		port = &(SLAVE_AD_INFO(slave).port);
++>>>>>>> 47e91f56008b (bonding: use RCU protection for 3ad xmit path)
  		if (port->aggregator && port->aggregator->is_active) {
  			aggregator = port->aggregator;
  			break;
@@@ -2439,15 -2402,24 +2444,22 @@@ int bond_3ad_xmit_xor(struct sk_buff *s
  		goto out;
  	}
  
 -	slave_agg_no = bond_xmit_hash(bond, skb, slaves_in_agg);
 -	first_ok_slave = NULL;
 +	slave_agg_no = bond->xmit_hash_policy(skb, slaves_in_agg);
  
++<<<<<<< HEAD
 +	bond_for_each_slave(bond, slave, i) {
 +		struct aggregator *agg = SLAVE_AD_INFO(slave).port.aggregator;
++=======
+ 	bond_for_each_slave_rcu(bond, slave, iter) {
+ 		agg = SLAVE_AD_INFO(slave).port.aggregator;
+ 		if (!agg || agg->aggregator_identifier != agg_id)
+ 			continue;
++>>>>>>> 47e91f56008b (bonding: use RCU protection for 3ad xmit path)
  
 -		if (slave_agg_no >= 0) {
 -			if (!first_ok_slave && SLAVE_IS_OK(slave))
 -				first_ok_slave = slave;
 +		if (agg && (agg->aggregator_identifier == agg_id)) {
  			slave_agg_no--;
 -			continue;
 -		}
 -
 -		if (SLAVE_IS_OK(slave)) {
 -			res = bond_dev_queue_xmit(bond, skb, slave->dev);
 -			goto out;
 +			if (slave_agg_no < 0)
 +				break;
  		}
  	}
  
* Unmerged path drivers/net/bonding/bond_3ad.c
