cxgb4/cxgb4vf/csiostor: Make PCI Device ID Tables be "const"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit 768ffc66b45fd6551162d64ac8d92c101725262a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/768ffc66.failed

Make PCI Device ID Tables be "const" to move them out of the data segment and
remove a redundant check on CH_PCI_DEVICE_ID_TABLE_DEFINE_BEGIN in
t4_pci_id_tbl.h to guard the contents of the include file.

	Signed-off-by: Casey Leedom <leedom@chelsio.com>
	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 768ffc66b45fd6551162d64ac8d92c101725262a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
#	drivers/net/ethernet/chelsio/cxgb4/t4_pci_id_tbl.h
#	drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
#	drivers/scsi/csiostor/csio_init.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 6b10b0dc9878,dd4b2da6e468..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -209,114 -121,25 +209,122 @@@ struct filter_entry 
  			 NETIF_MSG_TIMER | NETIF_MSG_IFDOWN | NETIF_MSG_IFUP |\
  			 NETIF_MSG_RX_ERR | NETIF_MSG_TX_ERR)
  
++<<<<<<< HEAD
 +#define CH_DEVICE(devid, data) { PCI_VDEVICE(CHELSIO, devid), (data) }
++=======
+ /* Macros needed to support the PCI Device ID Table ...
+  */
+ #define CH_PCI_DEVICE_ID_TABLE_DEFINE_BEGIN \
+ 	static const struct pci_device_id cxgb4_pci_tbl[] = {
+ #define CH_PCI_DEVICE_ID_FUNCTION 0x4
 -
 -/* Include PCI Device IDs for both PF4 and PF0-3 so our PCI probe() routine is
 - * called for both.
 - */
 -#define CH_PCI_DEVICE_ID_FUNCTION2 0x0
 -
 -#define CH_PCI_ID_TABLE_ENTRY(devid) \
 -		{PCI_VDEVICE(CHELSIO, (devid)), 4}
 -
 -#define CH_PCI_DEVICE_ID_TABLE_DEFINE_END \
 -		{ 0, } \
 -	}
 -
 -#include "t4_pci_id_tbl.h"
++>>>>>>> 768ffc66b45f (cxgb4/cxgb4vf/csiostor: Make PCI Device ID Tables be "const")
 +
 +static DEFINE_PCI_DEVICE_TABLE(cxgb4_pci_tbl) = {
 +	CH_DEVICE(0xa000, 0),  /* PE10K */
 +	CH_DEVICE(0x4001, -1),
 +	CH_DEVICE(0x4002, -1),
 +	CH_DEVICE(0x4003, -1),
 +	CH_DEVICE(0x4004, -1),
 +	CH_DEVICE(0x4005, -1),
 +	CH_DEVICE(0x4006, -1),
 +	CH_DEVICE(0x4007, -1),
 +	CH_DEVICE(0x4008, -1),
 +	CH_DEVICE(0x4009, -1),
 +	CH_DEVICE(0x400a, -1),
 +	CH_DEVICE(0x400d, -1),
 +	CH_DEVICE(0x400e, -1),
 +	CH_DEVICE(0x4080, -1),
 +	CH_DEVICE(0x4081, -1),
 +	CH_DEVICE(0x4082, -1),
 +	CH_DEVICE(0x4083, -1),
 +	CH_DEVICE(0x4084, -1),
 +	CH_DEVICE(0x4085, -1),
 +	CH_DEVICE(0x4086, -1),
 +	CH_DEVICE(0x4087, -1),
 +	CH_DEVICE(0x4088, -1),
 +	CH_DEVICE(0x4401, 4),
 +	CH_DEVICE(0x4402, 4),
 +	CH_DEVICE(0x4403, 4),
 +	CH_DEVICE(0x4404, 4),
 +	CH_DEVICE(0x4405, 4),
 +	CH_DEVICE(0x4406, 4),
 +	CH_DEVICE(0x4407, 4),
 +	CH_DEVICE(0x4408, 4),
 +	CH_DEVICE(0x4409, 4),
 +	CH_DEVICE(0x440a, 4),
 +	CH_DEVICE(0x440d, 4),
 +	CH_DEVICE(0x440e, 4),
 +	CH_DEVICE(0x4480, 4),
 +	CH_DEVICE(0x4481, 4),
 +	CH_DEVICE(0x4482, 4),
 +	CH_DEVICE(0x4483, 4),
 +	CH_DEVICE(0x4484, 4),
 +	CH_DEVICE(0x4485, 4),
 +	CH_DEVICE(0x4486, 4),
 +	CH_DEVICE(0x4487, 4),
 +	CH_DEVICE(0x4488, 4),
 +	CH_DEVICE(0x5001, 4),
 +	CH_DEVICE(0x5002, 4),
 +	CH_DEVICE(0x5003, 4),
 +	CH_DEVICE(0x5004, 4),
 +	CH_DEVICE(0x5005, 4),
 +	CH_DEVICE(0x5006, 4),
 +	CH_DEVICE(0x5007, 4),
 +	CH_DEVICE(0x5008, 4),
 +	CH_DEVICE(0x5009, 4),
 +	CH_DEVICE(0x500A, 4),
 +	CH_DEVICE(0x500B, 4),
 +	CH_DEVICE(0x500C, 4),
 +	CH_DEVICE(0x500D, 4),
 +	CH_DEVICE(0x500E, 4),
 +	CH_DEVICE(0x500F, 4),
 +	CH_DEVICE(0x5010, 4),
 +	CH_DEVICE(0x5011, 4),
 +	CH_DEVICE(0x5012, 4),
 +	CH_DEVICE(0x5013, 4),
 +	CH_DEVICE(0x5014, 4),
 +	CH_DEVICE(0x5015, 4),
 +	CH_DEVICE(0x5080, 4),
 +	CH_DEVICE(0x5081, 4),
 +	CH_DEVICE(0x5082, 4),
 +	CH_DEVICE(0x5083, 4),
 +	CH_DEVICE(0x5084, 4),
 +	CH_DEVICE(0x5085, 4),
 +	CH_DEVICE(0x5086, 4),
 +	CH_DEVICE(0x5087, 4),
 +	CH_DEVICE(0x5088, 4),
 +	CH_DEVICE(0x5401, 4),
 +	CH_DEVICE(0x5402, 4),
 +	CH_DEVICE(0x5403, 4),
 +	CH_DEVICE(0x5404, 4),
 +	CH_DEVICE(0x5405, 4),
 +	CH_DEVICE(0x5406, 4),
 +	CH_DEVICE(0x5407, 4),
 +	CH_DEVICE(0x5408, 4),
 +	CH_DEVICE(0x5409, 4),
 +	CH_DEVICE(0x540A, 4),
 +	CH_DEVICE(0x540B, 4),
 +	CH_DEVICE(0x540C, 4),
 +	CH_DEVICE(0x540D, 4),
 +	CH_DEVICE(0x540E, 4),
 +	CH_DEVICE(0x540F, 4),
 +	CH_DEVICE(0x5410, 4),
 +	CH_DEVICE(0x5411, 4),
 +	CH_DEVICE(0x5412, 4),
 +	CH_DEVICE(0x5413, 4),
 +	CH_DEVICE(0x5414, 4),
 +	CH_DEVICE(0x5415, 4),
 +	CH_DEVICE(0x5480, 4),
 +	CH_DEVICE(0x5481, 4),
 +	CH_DEVICE(0x5482, 4),
 +	CH_DEVICE(0x5483, 4),
 +	CH_DEVICE(0x5484, 4),
 +	CH_DEVICE(0x5485, 4),
 +	CH_DEVICE(0x5486, 4),
 +	CH_DEVICE(0x5487, 4),
 +	CH_DEVICE(0x5488, 4),
 +	{ 0, }
 +};
  
  #define FW4_FNAME "cxgb4/t4fw.bin"
  #define FW5_FNAME "cxgb4/t5fw.bin"
diff --cc drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
index 0b0c9434b272,1d893b0b7ddf..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
@@@ -2935,67 -3031,18 +2935,73 @@@ static void cxgb4vf_pci_shutdown(struc
  	pci_set_drvdata(pdev, NULL);
  }
  
 -/* Macros needed to support the PCI Device ID Table ...
 +/*
 + * PCI Device registration data structures.
   */
++<<<<<<< HEAD
 +#define CH_DEVICE(devid) \
 +	{ PCI_VENDOR_ID_CHELSIO, devid, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 0 }
++=======
+ #define CH_PCI_DEVICE_ID_TABLE_DEFINE_BEGIN \
+ 	static const struct pci_device_id cxgb4vf_pci_tbl[] = {
+ #define CH_PCI_DEVICE_ID_FUNCTION	0x8
 -
 -#define CH_PCI_ID_TABLE_ENTRY(devid) \
 -		{ PCI_VDEVICE(CHELSIO, (devid)), 0 }
 -
 -#define CH_PCI_DEVICE_ID_TABLE_DEFINE_END { 0, } }
 -
 -#include "../cxgb4/t4_pci_id_tbl.h"
++>>>>>>> 768ffc66b45f (cxgb4/cxgb4vf/csiostor: Make PCI Device ID Tables be "const")
 +
 +static const struct pci_device_id cxgb4vf_pci_tbl[] = {
 +	CH_DEVICE(0xb000),	/* PE10K FPGA */
 +	CH_DEVICE(0x4801),	/* T420-cr */
 +	CH_DEVICE(0x4802),	/* T422-cr */
 +	CH_DEVICE(0x4803),	/* T440-cr */
 +	CH_DEVICE(0x4804),	/* T420-bch */
 +	CH_DEVICE(0x4805),	/* T440-bch */
 +	CH_DEVICE(0x4806),	/* T460-ch */
 +	CH_DEVICE(0x4807),	/* T420-so */
 +	CH_DEVICE(0x4808),	/* T420-cx */
 +	CH_DEVICE(0x4809),	/* T420-bt */
 +	CH_DEVICE(0x480a),	/* T404-bt */
 +	CH_DEVICE(0x480d),	/* T480-cr */
 +	CH_DEVICE(0x480e),	/* T440-lp-cr */
 +	CH_DEVICE(0x4880),
 +	CH_DEVICE(0x4881),
 +	CH_DEVICE(0x4882),
 +	CH_DEVICE(0x4883),
 +	CH_DEVICE(0x4884),
 +	CH_DEVICE(0x4885),
 +	CH_DEVICE(0x4886),
 +	CH_DEVICE(0x4887),
 +	CH_DEVICE(0x4888),
 +	CH_DEVICE(0x5801),	/* T520-cr */
 +	CH_DEVICE(0x5802),	/* T522-cr */
 +	CH_DEVICE(0x5803),	/* T540-cr */
 +	CH_DEVICE(0x5804),	/* T520-bch */
 +	CH_DEVICE(0x5805),	/* T540-bch */
 +	CH_DEVICE(0x5806),	/* T540-ch */
 +	CH_DEVICE(0x5807),	/* T520-so */
 +	CH_DEVICE(0x5808),	/* T520-cx */
 +	CH_DEVICE(0x5809),	/* T520-bt */
 +	CH_DEVICE(0x580a),	/* T504-bt */
 +	CH_DEVICE(0x580b),	/* T520-sr */
 +	CH_DEVICE(0x580c),	/* T504-bt */
 +	CH_DEVICE(0x580d),	/* T580-cr */
 +	CH_DEVICE(0x580e),	/* T540-lp-cr */
 +	CH_DEVICE(0x580f),	/* Amsterdam */
 +	CH_DEVICE(0x5810),	/* T580-lp-cr */
 +	CH_DEVICE(0x5811),	/* T520-lp-cr */
 +	CH_DEVICE(0x5812),	/* T560-cr */
 +	CH_DEVICE(0x5813),	/* T580-cr */
 +	CH_DEVICE(0x5814),	/* T580-so-cr */
 +	CH_DEVICE(0x5815),	/* T502-bt */
 +	CH_DEVICE(0x5880),
 +	CH_DEVICE(0x5881),
 +	CH_DEVICE(0x5882),
 +	CH_DEVICE(0x5883),
 +	CH_DEVICE(0x5884),
 +	CH_DEVICE(0x5885),
 +	CH_DEVICE(0x5886),
 +	CH_DEVICE(0x5887),
 +	CH_DEVICE(0x5888),
 +	{ 0, }
 +};
  
  MODULE_DESCRIPTION(DRV_DESC);
  MODULE_AUTHOR("Chelsio Communications");
diff --cc drivers/scsi/csiostor/csio_init.c
index 00346fe939d5,dbe416ff46c2..000000000000
--- a/drivers/scsi/csiostor/csio_init.c
+++ b/drivers/scsi/csiostor/csio_init.c
@@@ -1169,53 -1168,20 +1169,63 @@@ static struct pci_error_handlers csio_e
  	.resume		= csio_pci_resume,
  };
  
++<<<<<<< HEAD
 +static DEFINE_PCI_DEVICE_TABLE(csio_pci_tbl) = {
 +	CSIO_DEVICE(CSIO_DEVID_T440DBG_FCOE, 0),        /* T4 DEBUG FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T420CR_FCOE, 0),		/* T420CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T422CR_FCOE, 0),		/* T422CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T440CR_FCOE, 0),		/* T440CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T420BCH_FCOE, 0),	/* T420BCH FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T440BCH_FCOE, 0),	/* T440BCH FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T440CH_FCOE, 0),		/* T440CH FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T420SO_FCOE, 0),		/* T420SO FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T420CX_FCOE, 0),		/* T420CX FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T420BT_FCOE, 0),		/* T420BT FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T404BT_FCOE, 0),		/* T404BT FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_B420_FCOE, 0),		/* B420 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_B404_FCOE, 0),		/* B404 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T480CR_FCOE, 0),		/* T480 CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T440LPCR_FCOE, 0),	/* T440 LP-CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_AMSTERDAM_T4_FCOE, 0),   /* AMSTERDAM T4 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_HUAWEI_T480_FCOE, 0),    /* HUAWEI T480 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_HUAWEI_T440_FCOE, 0),    /* HUAWEI T440 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_HUAWEI_STG310_FCOE, 0),  /* HUAWEI STG FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_ACROMAG_XMC_XAUI, 0),    /* ACROMAG XAUI FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_QUANTA_MEZZ_SFP_FCOE, 0),/* QUANTA MEZZ FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_HUAWEI_10GT_FCOE, 0),    /* HUAWEI 10GT FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_HUAWEI_T440_TOE_FCOE, 0),/* HUAWEI T4 TOE FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T580DBG_FCOE, 0),        /* T5 DEBUG FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T520CR_FCOE, 0),         /* T520CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T522CR_FCOE, 0),         /* T522CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T540CR_FCOE, 0),         /* T540CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T520BCH_FCOE, 0),        /* T520BCH FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T540BCH_FCOE, 0),        /* T540BCH FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T540CH_FCOE, 0),         /* T540CH FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T520SO_FCOE, 0),         /* T520SO FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T520CX_FCOE, 0),         /* T520CX FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T520BT_FCOE, 0),         /* T520BT FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T504BT_FCOE, 0),         /* T504BT FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_B520_FCOE, 0),           /* B520 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_B504_FCOE, 0),           /* B504 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T580CR2_FCOE, 0),	/* T580 CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T540LPCR_FCOE, 0),       /* T540 LP-CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_AMSTERDAM_T5_FCOE, 0),   /* AMSTERDAM T5 FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T580LPCR_FCOE, 0),       /* T580 LP-CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T520LLCR_FCOE, 0),       /* T520 LL-CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T560CR_FCOE, 0),         /* T560 CR FCOE */
 +	CSIO_DEVICE(CSIO_DEVID_T580CR_FCOE, 0),         /* T580 CR FCOE */
 +	{ 0, 0, 0, 0, 0, 0, 0 }
 +};
++=======
+ /*
+  *  Macros needed to support the PCI Device ID Table ...
+  */
+ #define CH_PCI_DEVICE_ID_TABLE_DEFINE_BEGIN \
+ 	static const struct pci_device_id csio_pci_tbl[] = {
+ /* Define for FCoE uses PF6 */
+ #define CH_PCI_DEVICE_ID_FUNCTION	0x6
++>>>>>>> 768ffc66b45f (cxgb4/cxgb4vf/csiostor: Make PCI Device ID Tables be "const")
  
 -#define CH_PCI_ID_TABLE_ENTRY(devid) \
 -		{ PCI_VDEVICE(CHELSIO, (devid)), 0 }
 -
 -#define CH_PCI_DEVICE_ID_TABLE_DEFINE_END { 0, } }
 -
 -#include "t4_pci_id_tbl.h"
  
  static struct pci_driver csio_pci_driver = {
  	.name		= KBUILD_MODNAME,
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_pci_id_tbl.h
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_pci_id_tbl.h
* Unmerged path drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
* Unmerged path drivers/scsi/csiostor/csio_init.c
