Input: synaptics - re-route tracksticks buttons on the Lenovo 2015 series

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [input] mouse: synaptics - re-route tracksticks buttons on the Lenovo 2015 series (Benjamin Tissoires) [1186106 1186112]
Rebuild_FUZZ: 94.52%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit cdd9dc195916ef5644cfac079094c3c1d1616e4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/cdd9dc19.failed

The 2015 series of the Lenovo thinkpads added back the hardware buttons on
top of the touchpad for the trackstick.

Unfortunately, they are wired to the touchpad, and not the trackstick.
Thus, they are seen as extra buttons from the kernel point of view.

This leads to a problem in user space because extra buttons on synaptics
devices used to be used as scroll up/down buttons. So in the end, the
experience for the user is scroll events for buttons left and right when
using the trackstick. Yay!

Fortunately, the firmware advertises such behavior in the extended
capability $10, and so we can re-route the buttons through the pass-through
interface.

Hallelujah-expressed-by: Peter Hutterer <peter.hutterer@who-t.net>
	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit cdd9dc195916ef5644cfac079094c3c1d1616e4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/mouse/synaptics.c
diff --cc drivers/input/mouse/synaptics.c
index 134bace9080f,ecc7811cbd46..000000000000
--- a/drivers/input/mouse/synaptics.c
+++ b/drivers/input/mouse/synaptics.c
@@@ -789,6 -845,49 +793,52 @@@ static void synaptics_report_semi_mt_da
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void synaptics_report_ext_buttons(struct psmouse *psmouse,
+ 					 const struct synaptics_hw_state *hw)
+ {
+ 	struct input_dev *dev = psmouse->dev;
+ 	struct synaptics_data *priv = psmouse->private;
+ 	int ext_bits = (SYN_CAP_MULTI_BUTTON_NO(priv->ext_cap) + 1) >> 1;
+ 	char buf[6] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
+ 	int i;
+ 
+ 	if (!SYN_CAP_MULTI_BUTTON_NO(priv->ext_cap))
+ 		return;
+ 
+ 	/* Bug in FW 8.1, buttons are reported only when ExtBit is 1 */
+ 	if (SYN_ID_FULL(priv->identity) == 0x801 &&
+ 	    !((psmouse->packet[0] ^ psmouse->packet[3]) & 0x02))
+ 		return;
+ 
+ 	if (!SYN_CAP_EXT_BUTTONS_STICK(priv->ext_cap_10)) {
+ 		for (i = 0; i < ext_bits; i++) {
+ 			input_report_key(dev, BTN_0 + 2 * i,
+ 				hw->ext_buttons & (1 << i));
+ 			input_report_key(dev, BTN_1 + 2 * i,
+ 				hw->ext_buttons & (1 << (i + ext_bits)));
+ 		}
+ 		return;
+ 	}
+ 
+ 	/*
+ 	 * This generation of touchpads has the trackstick buttons
+ 	 * physically wired to the touchpad. Re-route them through
+ 	 * the pass-through interface.
+ 	 */
+ 	if (!priv->pt_port)
+ 		return;
+ 
+ 	/* The trackstick expects at most 3 buttons */
+ 	priv->pt_buttons = SYN_CAP_EXT_BUTTON_STICK_L(hw->ext_buttons)      |
+ 			   SYN_CAP_EXT_BUTTON_STICK_R(hw->ext_buttons) << 1 |
+ 			   SYN_CAP_EXT_BUTTON_STICK_M(hw->ext_buttons) << 2;
+ 
+ 	synaptics_pass_pt_packet(psmouse, priv->pt_port, buf);
+ }
+ 
++>>>>>>> cdd9dc195916 (Input: synaptics - re-route tracksticks buttons on the Lenovo 2015 series)
  static void synaptics_report_buttons(struct psmouse *psmouse,
  				     const struct synaptics_hw_state *hw)
  {
* Unmerged path drivers/input/mouse/synaptics.c
diff --git a/drivers/input/mouse/synaptics.h b/drivers/input/mouse/synaptics.h
index 38347088b682..361ee6c9fc9c 100644
--- a/drivers/input/mouse/synaptics.h
+++ b/drivers/input/mouse/synaptics.h
@@ -109,6 +109,10 @@
 #define SYN_CAP_EXT_BUTTONS_STICK(ex10)	((ex10) & 0x010000)
 #define SYN_CAP_SECUREPAD(ex10)		((ex10) & 0x020000)
 
+#define SYN_CAP_EXT_BUTTON_STICK_L(eb)	(!!((eb) & 0x01))
+#define SYN_CAP_EXT_BUTTON_STICK_M(eb)	(!!((eb) & 0x02))
+#define SYN_CAP_EXT_BUTTON_STICK_R(eb)	(!!((eb) & 0x04))
+
 /* synaptics modes query bits */
 #define SYN_MODE_ABSOLUTE(m)		((m) & (1 << 7))
 #define SYN_MODE_RATE(m)		((m) & (1 << 6))
@@ -190,6 +194,7 @@ struct synaptics_data {
 	bool disable_gesture;			/* disable gestures */
 
 	struct serio *pt_port;			/* Pass-through serio port */
+	unsigned char pt_buttons;		/* Pass-through buttons */
 
 	struct synaptics_mt_state mt_state;	/* Current mt finger state */
 	bool mt_state_lost;			/* mt_state may be incorrect */
