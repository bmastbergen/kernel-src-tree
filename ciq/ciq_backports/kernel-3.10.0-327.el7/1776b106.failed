perf/x86/intel: Revert incomplete and undocumented Broadwell client support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Ingo Molnar <mingo@kernel.org>
commit 1776b10627e486dd431fe72d8d47e5a865cf65d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1776b106.failed

These patches:

  86a349a28b24 ("perf/x86/intel: Add Broadwell core support")
  c46e665f0377 ("perf/x86: Add INST_RETIRED.ALL workarounds")
  fdda3c4aacec ("perf/x86/intel: Use Broadwell cache event list for Haswell")

introduced magic constants and unexplained changes:

  https://lkml.org/lkml/2014/10/28/1128
  https://lkml.org/lkml/2014/10/27/325
  https://lkml.org/lkml/2014/8/27/546
  https://lkml.org/lkml/2014/10/28/546

Peter Zijlstra has attempted to help out, to clean up the mess:

  https://lkml.org/lkml/2014/10/28/543

But has not received helpful and constructive replies which makes
me doubt wether it can all be finished in time until v3.18 is
released.

Despite various review feedback the author (Andi Kleen) has answered
only few of the review questions and has generally been uncooperative,
only giving replies when prompted repeatedly, and only giving minimal
answers instead of constructively explaining and helping along the effort.

That kind of behavior is not acceptable.

There's also a boot crash on Intel E5-1630 v3 CPUs reported for another
commit from Andi Kleen:

  e735b9db12d7 ("perf/x86/intel/uncore: Add Haswell-EP uncore support")

  https://lkml.org/lkml/2014/10/22/730

Which is not yet resolved. The uncore driver is independent in theory,
but the crash makes me worry about how well all these patches were
tested and makes me uneasy about the level of interminging that the
Broadwell and Haswell code has received by the commits above.

As a first step to resolve the mess revert the Broadwell client commits
back to the v3.17 version, before we run out of time and problematic
code hits a stable upstream kernel.

( If the Haswell-EP crash is not resolved via a simple fix then we'll have
  to revert the Haswell-EP uncore driver as well. )

The Broadwell client series has to be submitted in a clean fashion, with
single, well documented changes per patch. If they are submitted in time
and are accepted during review then they can possibly go into v3.19 but
will need additional scrutiny due to the rocky history of this patch set.

	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: eranian@google.com
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: http://lkml.kernel.org/r/1409683455-29168-3-git-send-email-andi@firstfloor.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 1776b10627e486dd431fe72d8d47e5a865cf65d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel.c
diff --cc arch/x86/kernel/cpu/perf_event_intel.c
index a70b87114edd,944bf019b74f..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel.c
+++ b/arch/x86/kernel/cpu/perf_event_intel.c
@@@ -2690,27 -2565,6 +2561,30 @@@ __init int intel_pmu_init(void
  		pr_cont("Haswell events, ");
  		break;
  
++<<<<<<< HEAD
 +	case 61: /* 14nm Broadwell Core-M */
 +		x86_pmu.late_ack = true;
 +		memcpy(hw_cache_event_ids, hsw_hw_cache_event_ids, sizeof(hw_cache_event_ids));
 +		memcpy(hw_cache_extra_regs, hsw_hw_cache_extra_regs, sizeof(hw_cache_extra_regs));
 +
 +		intel_pmu_lbr_init_snb();
 +
 +		x86_pmu.event_constraints = intel_bdw_event_constraints;
 +		x86_pmu.pebs_constraints = intel_hsw_pebs_event_constraints;
 +		x86_pmu.extra_regs = intel_snbep_extra_regs;
 +		x86_pmu.pebs_aliases = intel_pebs_aliases_snb;
 +		/* all extra regs are per-cpu when HT is on */
 +		x86_pmu.er_flags |= ERF_HAS_RSP_1;
 +		x86_pmu.er_flags |= ERF_NO_HT_SHARING;
 +
 +		x86_pmu.hw_config = hsw_hw_config;
 +		x86_pmu.get_event_constraints = hsw_get_event_constraints;
 +		x86_pmu.cpu_events = hsw_events_attrs;
 +		pr_cont("Broadwell events, ");
 +		break;
 +
++=======
++>>>>>>> 1776b10627e4 (perf/x86/intel: Revert incomplete and undocumented Broadwell client support)
  	default:
  		switch (x86_pmu.version) {
  		case 1:
* Unmerged path arch/x86/kernel/cpu/perf_event_intel.c
