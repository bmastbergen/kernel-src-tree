firmware/dmi_scan: generalize for use by other archs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [firmware] dmi_scan: generalize for use by other archs (Jarod Wilson) [853192]
Rebuild_FUZZ: 90.53%
commit-author Ard Biesheuvel <ard.biesheuvel@linaro.org>
commit cf0744021c5d5de54d2c66e2020c6de2fe800264
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/cf074402.failed

This patch makes a couple of changes to the SMBIOS/DMI scanning
code so it can be used on other archs (such as ARM and arm64):
(a) wrap the calls to ioremap()/iounmap(), this allows the use of a
    flavor of ioremap() more suitable for random unaligned access;
(b) allow the non-EFI fallback probe into hardcoded physical address
    0xF0000 to be disabled.

	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Acked-by: Grant Likely <grant.likely@linaro.org>
	Cc: Ingo Molnar <mingo@elte.hu>
Cc "Luck, Tony" <tony.luck@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit cf0744021c5d5de54d2c66e2020c6de2fe800264)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/ia64/include/asm/dmi.h
#	drivers/firmware/dmi_scan.c
diff --cc arch/ia64/include/asm/dmi.h
index 1ed4c8fedb83,f365a61f5c71..000000000000
--- a/arch/ia64/include/asm/dmi.h
+++ b/arch/ia64/include/asm/dmi.h
@@@ -5,8 -5,10 +5,16 @@@
  #include <asm/io.h>
  
  /* Use normal IO mappings for DMI */
++<<<<<<< HEAD
 +#define dmi_ioremap ioremap
 +#define dmi_iounmap(x,l) iounmap(x)
 +#define dmi_alloc(l) kmalloc(l, GFP_ATOMIC)
++=======
+ #define dmi_early_remap		ioremap
+ #define dmi_early_unmap(x, l)	iounmap(x)
+ #define dmi_remap		ioremap
+ #define dmi_unmap		iounmap
+ #define dmi_alloc(l)		kzalloc(l, GFP_ATOMIC)
++>>>>>>> cf0744021c5d (firmware/dmi_scan: generalize for use by other archs)
  
  #endif
diff --cc drivers/firmware/dmi_scan.c
index 001c346d35b6,17afc51f3054..000000000000
--- a/drivers/firmware/dmi_scan.c
+++ b/drivers/firmware/dmi_scan.c
@@@ -546,14 -537,8 +546,19 @@@ void __init dmi_scan_machine(void
  			dmi_available = 1;
  			goto out;
  		}
++<<<<<<< HEAD
 +	}
 +	else {
 +		/*
 +		 * no iounmap() for that ioremap(); it would be a no-op, but
 +		 * it's so early in setup that sucker gets confused into doing
 +		 * what it shouldn't if we actually call it.
 +		 */
 +		p = dmi_ioremap(0xF0000, 0x10000);
++=======
+ 	} else if (IS_ENABLED(CONFIG_DMI_SCAN_MACHINE_NON_EFI_FALLBACK)) {
+ 		p = dmi_early_remap(0xF0000, 0x10000);
++>>>>>>> cf0744021c5d (firmware/dmi_scan: generalize for use by other archs)
  		if (p == NULL)
  			goto error;
  
@@@ -574,10 -559,10 +579,10 @@@
  			}
  			memcpy(buf, buf + 16, 16);
  		}
- 		dmi_iounmap(p, 0x10000);
+ 		dmi_early_unmap(p, 0x10000);
  	}
   error:
 -	pr_info("DMI not present or invalid.\n");
 +	printk(KERN_INFO "DMI not present or invalid.\n");
   out:
  	dmi_initialized = 1;
  }
diff --git a/arch/ia64/Kconfig b/arch/ia64/Kconfig
index 1a2b7749b047..fa20910f1903 100644
--- a/arch/ia64/Kconfig
+++ b/arch/ia64/Kconfig
@@ -104,6 +104,7 @@ config HAVE_SETUP_PER_CPU_AREA
 config DMI
 	bool
 	default y
+	select DMI_SCAN_MACHINE_NON_EFI_FALLBACK
 
 config EFI
 	bool
* Unmerged path arch/ia64/include/asm/dmi.h
diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig
index 9b26872f4d21..5022d3ec11f9 100644
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@ -735,6 +735,7 @@ config APB_TIMER
 # The code disables itself when not needed.
 config DMI
 	default y
+	select DMI_SCAN_MACHINE_NON_EFI_FALLBACK
 	bool "Enable DMI scanning" if EXPERT
 	---help---
 	  Enabled scanning of DMI to identify machine quirks. Say Y
diff --git a/arch/x86/include/asm/dmi.h b/arch/x86/include/asm/dmi.h
index fd8f9e2ca35f..535192f6bfad 100644
--- a/arch/x86/include/asm/dmi.h
+++ b/arch/x86/include/asm/dmi.h
@@ -13,7 +13,9 @@ static __always_inline __init void *dmi_alloc(unsigned len)
 }
 
 /* Use early IO mappings for DMI because it's initialized early */
-#define dmi_ioremap early_ioremap
-#define dmi_iounmap early_iounmap
+#define dmi_early_remap		early_ioremap
+#define dmi_early_unmap		early_iounmap
+#define dmi_remap		ioremap
+#define dmi_unmap		iounmap
 
 #endif /* _ASM_X86_DMI_H */
diff --git a/drivers/firmware/Kconfig b/drivers/firmware/Kconfig
index 93876302fb2e..9bee34b22ee8 100644
--- a/drivers/firmware/Kconfig
+++ b/drivers/firmware/Kconfig
@@ -107,6 +107,9 @@ config DMI_SYSFS
 	  under /sys/firmware/dmi when this option is enabled and
 	  loaded.
 
+config DMI_SCAN_MACHINE_NON_EFI_FALLBACK
+	bool
+
 config ISCSI_IBFT_FIND
 	bool "iSCSI Boot Firmware Table Attributes"
 	depends on X86
* Unmerged path drivers/firmware/dmi_scan.c
