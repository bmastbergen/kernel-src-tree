i40e: Remove unnecessary pf members

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Anjali Singhai Jain <anjali.singhai@intel.com>
commit 0bf4b1b0c3fda4dd72910cba3c40b3273a2de756
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0bf4b1b0.failed

We can use the stat index macro directly, a variable is not required.

Change-ID: I19f08ac16353dc0cd87a1a8248d714e15a54aa8a
	Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
	Tested-by: Jim Young <james.m.young@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 0bf4b1b0c3fda4dd72910cba3c40b3273a2de756)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 1c7e57a6b590,6f16f56a3f27..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -1084,12 -1096,18 +1084,14 @@@ static void i40e_update_pf_stats(struc
  			   &osd->rx_jabber, &nsd->rx_jabber);
  
  	/* FDIR stats */
- 	i40e_stat_update32(hw, I40E_GLQF_PCNT(pf->fd_atr_cnt_idx),
+ 	i40e_stat_update32(hw,
+ 			   I40E_GLQF_PCNT(I40E_FD_ATR_STAT_IDX(pf->hw.pf_id)),
  			   pf->stat_offsets_loaded,
  			   &osd->fd_atr_match, &nsd->fd_atr_match);
- 	i40e_stat_update32(hw, I40E_GLQF_PCNT(pf->fd_sb_cnt_idx),
+ 	i40e_stat_update32(hw,
+ 			   I40E_GLQF_PCNT(I40E_FD_SB_STAT_IDX(pf->hw.pf_id)),
  			   pf->stat_offsets_loaded,
  			   &osd->fd_sb_match, &nsd->fd_sb_match);
 -	i40e_stat_update32(hw,
 -		      I40E_GLQF_PCNT(I40E_FD_ATR_TUNNEL_STAT_IDX(pf->hw.pf_id)),
 -		      pf->stat_offsets_loaded,
 -		      &osd->fd_atr_tunnel_match, &nsd->fd_atr_tunnel_match);
  
  	val = rd32(hw, I40E_PRTPM_EEE_STAT);
  	nsd->tx_lpi_status =
@@@ -7623,12 -7681,8 +7625,17 @@@ static int i40e_sw_init(struct i40e_pf 
  	    (pf->hw.func_caps.fd_filters_best_effort > 0)) {
  		pf->flags |= I40E_FLAG_FD_ATR_ENABLED;
  		pf->atr_sample_rate = I40E_DEFAULT_ATR_SAMPLE_RATE;
++<<<<<<< HEAD
 +		/* Setup a counter for fd_atr per pf */
 +		pf->fd_atr_cnt_idx = I40E_FD_ATR_STAT_IDX(pf->hw.pf_id);
 +		if (!(pf->flags & I40E_FLAG_MFP_ENABLED)) {
 +			pf->flags |= I40E_FLAG_FD_SB_ENABLED;
 +			/* Setup a counter for fd_sb per pf */
 +			pf->fd_sb_cnt_idx = I40E_FD_SB_STAT_IDX(pf->hw.pf_id);
++=======
+ 		if (!(pf->flags & I40E_FLAG_MFP_ENABLED)) {
+ 			pf->flags |= I40E_FLAG_FD_SB_ENABLED;
++>>>>>>> 0bf4b1b0c3fd (i40e: Remove unnecessary pf members)
  		} else {
  			dev_info(&pf->pdev->dev,
  				 "Flow Director Sideband mode Disabled in MFP mode\n");
diff --git a/drivers/net/ethernet/intel/i40e/i40e.h b/drivers/net/ethernet/intel/i40e/i40e.h
index 3753b38a70e0..b2985632721a 100644
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@ -262,8 +262,6 @@ struct i40e_pf {
 
 	struct hlist_head fdir_filter_list;
 	u16 fdir_pf_active_filters;
-	u16 fd_sb_cnt_idx;
-	u16 fd_atr_cnt_idx;
 	unsigned long fd_flush_timestamp;
 	u32 fd_flush_cnt;
 	u32 fd_add_err;
diff --git a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
index ee389564d0ce..ee3ae387a305 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
@@ -2240,7 +2240,7 @@ static int i40e_add_fdir_ethtool(struct i40e_vsi *vsi,
 	input->pctype = 0;
 	input->dest_vsi = vsi->id;
 	input->fd_status = I40E_FILTER_PROGRAM_DESC_FD_STATUS_FD_ID;
-	input->cnt_index  = pf->fd_sb_cnt_idx;
+	input->cnt_index  = I40E_FD_SB_STAT_IDX(pf->hw.pf_id);
 	input->flow_type = fsp->flow_type;
 	input->ip4_proto = fsp->h_u.usr_ip4_spec.proto;
 
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
