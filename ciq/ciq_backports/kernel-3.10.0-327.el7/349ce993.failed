tcp: md5: do not use alloc_percpu()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Eric Dumazet <edumazet@google.com>
commit 349ce993ac706869d553a1816426d3a4bfda02b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/349ce993.failed

percpu tcp_md5sig_pool contains memory blobs that ultimately
go through sg_set_buf().

-> sg_set_page(sg, virt_to_page(buf), buflen, offset_in_page(buf));

This requires that whole area is in a physically contiguous portion
of memory. And that @buf is not backed by vmalloc().

Given that alloc_percpu() can use vmalloc() areas, this does not
fit the requirements.

Replace alloc_percpu() by a static DEFINE_PER_CPU() as tcp_md5sig_pool
is small anyway, there is no gain to dynamically allocate it.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
Fixes: 765cf9976e93 ("tcp: md5: remove one indirection level in tcp_md5sig_pool")
	Reported-by: Crestez Dan Leonard <cdleonard@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 349ce993ac706869d553a1816426d3a4bfda02b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index bed081b74c05,39ec0c379545..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -2894,13 -2917,13 +2875,19 @@@ EXPORT_SYMBOL(tcp_alloc_md5sig_pool)
   */
  struct tcp_md5sig_pool *tcp_get_md5sig_pool(void)
  {
- 	struct tcp_md5sig_pool __percpu *p;
- 
  	local_bh_disable();
++<<<<<<< HEAD
 +	p = ACCESS_ONCE(tcp_md5sig_pool);
 +	if (p)
 +		return __this_cpu_ptr(p);
++=======
++>>>>>>> 349ce993ac70 (tcp: md5: do not use alloc_percpu())
  
+ 	if (tcp_md5sig_pool_populated) {
+ 		/* coupled with smp_wmb() in __tcp_alloc_md5sig_pool() */
+ 		smp_rmb();
+ 		return this_cpu_ptr(&tcp_md5sig_pool);
+ 	}
  	local_bh_enable();
  	return NULL;
  }
* Unmerged path net/ipv4/tcp.c
