ALSA: line6: Use incremental loop

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Use incremental loop (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 90.00%
commit-author Takashi Iwai <tiwai@suse.de>
commit 9fb754b79e536eb35d69a4678687addff589e45b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9fb754b7.failed

Using a decremental loop without particular reasons worsens the
readability a lot.  Use incremental loops instead.

	Tested-by: Chris Rorvick <chris@rorvick.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 9fb754b79e536eb35d69a4678687addff589e45b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/pcm.c
diff --cc drivers/staging/line6/pcm.c
index cfc50624f3e2,43474c4ebb6b..000000000000
--- a/drivers/staging/line6/pcm.c
+++ b/drivers/staging/line6/pcm.c
@@@ -326,12 -330,7 +326,16 @@@ static void line6_cleanup_pcm(struct sn
  	int i;
  	struct snd_line6_pcm *line6pcm = snd_pcm_chip(pcm);
  
++<<<<<<< HEAD:drivers/staging/line6/pcm.c
 +#ifdef CONFIG_LINE6_USB_IMPULSE_RESPONSE
 +	device_remove_file(line6pcm->line6->ifcdev, &dev_attr_impulse_volume);
 +	device_remove_file(line6pcm->line6->ifcdev, &dev_attr_impulse_period);
 +#endif
 +
 +	for (i = LINE6_ISO_BUFFERS; i--;) {
++=======
+ 	for (i = 0; i < LINE6_ISO_BUFFERS; i++) {
++>>>>>>> 9fb754b79e53 (ALSA: line6: Use incremental loop):sound/usb/line6/pcm.c
  		if (line6pcm->urb_audio_out[i]) {
  			usb_kill_urb(line6pcm->urb_audio_out[i]);
  			usb_free_urb(line6pcm->urb_audio_out[i]);
diff --git a/drivers/staging/line6/capture.c b/drivers/staging/line6/capture.c
index 93bd813139f8..71b268d22406 100644
--- a/drivers/staging/line6/capture.c
+++ b/drivers/staging/line6/capture.c
@@ -93,7 +93,7 @@ void line6_unlink_audio_in_urbs(struct snd_line6_pcm *line6pcm)
 {
 	unsigned int i;
 
-	for (i = LINE6_ISO_BUFFERS; i--;) {
+	for (i = 0; i < LINE6_ISO_BUFFERS; i++) {
 		if (test_bit(i, &line6pcm->active_urb_in)) {
 			if (!test_and_set_bit(i, &line6pcm->unlink_urb_in)) {
 				struct urb *u = line6pcm->urb_audio_in[i];
@@ -115,7 +115,7 @@ void line6_wait_clear_audio_in_urbs(struct snd_line6_pcm *line6pcm)
 
 	do {
 		alive = 0;
-		for (i = LINE6_ISO_BUFFERS; i--;) {
+		for (i = 0; i < LINE6_ISO_BUFFERS; i++) {
 			if (test_bit(i, &line6pcm->active_urb_in))
 				alive++;
 		}
* Unmerged path drivers/staging/line6/pcm.c
diff --git a/drivers/staging/line6/playback.c b/drivers/staging/line6/playback.c
index feb51c49e316..201c84c0858f 100644
--- a/drivers/staging/line6/playback.c
+++ b/drivers/staging/line6/playback.c
@@ -300,7 +300,7 @@ void line6_unlink_audio_out_urbs(struct snd_line6_pcm *line6pcm)
 {
 	unsigned int i;
 
-	for (i = LINE6_ISO_BUFFERS; i--;) {
+	for (i = 0; i < LINE6_ISO_BUFFERS; i++) {
 		if (test_bit(i, &line6pcm->active_urb_out)) {
 			if (!test_and_set_bit(i, &line6pcm->unlink_urb_out)) {
 				struct urb *u = line6pcm->urb_audio_out[i];
@@ -322,7 +322,7 @@ void line6_wait_clear_audio_out_urbs(struct snd_line6_pcm *line6pcm)
 
 	do {
 		alive = 0;
-		for (i = LINE6_ISO_BUFFERS; i--;) {
+		for (i = 0; i < LINE6_ISO_BUFFERS; i++) {
 			if (test_bit(i, &line6pcm->active_urb_out))
 				alive++;
 		}
@@ -369,14 +369,14 @@ static void audio_out_callback(struct urb *urb)
 	line6pcm->last_frame_out = urb->start_frame;
 
 	/* find index of URB */
-	for (index = LINE6_ISO_BUFFERS; index--;)
+	for (index = 0; index < LINE6_ISO_BUFFERS; index++)
 		if (urb == line6pcm->urb_audio_out[index])
 			break;
 
-	if (index < 0)
+	if (index >= LINE6_ISO_BUFFERS)
 		return;		/* URB has been unlinked asynchronously */
 
-	for (i = LINE6_ISO_PACKETS; i--;)
+	for (i = 0; i < LINE6_ISO_PACKETS; i++)
 		length += urb->iso_frame_desc[i].length;
 
 	spin_lock_irqsave(&line6pcm->lock_audio_out, flags);
@@ -392,7 +392,7 @@ static void audio_out_callback(struct urb *urb)
 
 	clear_bit(index, &line6pcm->active_urb_out);
 
-	for (i = LINE6_ISO_PACKETS; i--;)
+	for (i = 0; i < LINE6_ISO_PACKETS; i++)
 		if (urb->iso_frame_desc[i].status == -EXDEV) {
 			shutdown = 1;
 			break;
