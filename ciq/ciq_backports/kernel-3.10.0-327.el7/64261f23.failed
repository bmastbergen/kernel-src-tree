dev: move skb_scrub_packet() after eth_type_trans()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] move skb_scrub_packet() after eth_type_trans() (Marcelo Leitner) [1206570]
Rebuild_FUZZ: 94.85%
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit 64261f230a9157f5f520ce30ec6827d679375e2f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/64261f23.failed

skb_scrub_packet() was called before eth_type_trans() to let eth_type_trans()
set pkt_type.

In fact, we should force pkt_type to PACKET_HOST, so move the call after
eth_type_trans().

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 64261f230a9157f5f520ce30ec6827d679375e2f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/dev.c
#	net/ipv4/ip_tunnel.c
diff --cc net/core/dev.c
index 1924c9647d47,1ed2b66a10a6..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -1665,8 -1691,14 +1665,19 @@@ int dev_forward_skb(struct net_device *
  		kfree_skb(skb);
  		return NET_RX_DROP;
  	}
++<<<<<<< HEAD
 +	skb_scrub_packet(skb, true);
 +	skb->protocol = eth_type_trans(skb, dev);
++=======
+ 	skb->protocol = eth_type_trans(skb, dev);
+ 
+ 	/* eth_type_trans() can set pkt_type.
+ 	 * call skb_scrub_packet() after it to clear pkt_type _after_ calling
+ 	 * eth_type_trans().
+ 	 */
+ 	skb_scrub_packet(skb);
+ 
++>>>>>>> 64261f230a91 (dev: move skb_scrub_packet() after eth_type_trans())
  	return netif_rx(skb);
  }
  EXPORT_SYMBOL_GPL(dev_forward_skb);
diff --cc net/ipv4/ip_tunnel.c
index 97e997263ac1,fbc1094964bf..000000000000
--- a/net/ipv4/ip_tunnel.c
+++ b/net/ipv4/ip_tunnel.c
@@@ -457,9 -454,6 +457,12 @@@ int ip_tunnel_rcv(struct ip_tunnel *tun
  	tstats->rx_bytes += skb->len;
  	u64_stats_update_end(&tstats->syncp);
  
++<<<<<<< HEAD
 +	if (tunnel->net != dev_net(tunnel->dev))
 +		skb_scrub_packet(skb, true);
 +
++=======
++>>>>>>> 64261f230a91 (dev: move skb_scrub_packet() after eth_type_trans())
  	if (tunnel->dev->type == ARPHRD_ETHER) {
  		skb->protocol = eth_type_trans(skb, tunnel->dev);
  		skb_postpull_rcsum(skb, eth_hdr(skb), ETH_HLEN);
* Unmerged path net/core/dev.c
* Unmerged path net/ipv4/ip_tunnel.c
