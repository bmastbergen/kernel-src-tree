md: level_store: group all important changes into one place.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] level_store: group all important changes into one place (Jes Sorensen) [1150149 1173510 1194720]
Rebuild_FUZZ: 95.65%
commit-author NeilBrown <neilb@suse.de>
commit db721d32b74b51a5ac9ec9fab1d85cba90dbdbd3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/db721d32.failed

Gather all the changes that can happen atomically and might
be relevant to other code into one place.  This will
make it easier to refine the locking.

Note that this puts quite a few things between mddev_detach()
and ->free().  Enabling this was the point of some recent patches.

	Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit db721d32b74b51a5ac9ec9fab1d85cba90dbdbd3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 0227d221c67b,58f531f8dcc2..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -3524,25 -3373,20 +3524,42 @@@ level_store(struct mddev *mddev, const 
  
  	/* Looks like we have a winner */
  	mddev_suspend(mddev);
++<<<<<<< HEAD
 +	mddev->pers->stop(mddev);
 +	
 +	if (mddev->pers->sync_request == NULL &&
 +	    pers->sync_request != NULL) {
 +		/* need to add the md_redundancy_group */
 +		if (sysfs_create_group(&mddev->kobj, &md_redundancy_group))
 +			printk(KERN_WARNING
 +			       "md: cannot register extra attributes for %s\n",
 +			       mdname(mddev));
 +		mddev->sysfs_action = sysfs_get_dirent(mddev->kobj.sd, NULL, "sync_action");
 +	}		
 +	if (mddev->pers->sync_request != NULL &&
 +	    pers->sync_request == NULL) {
 +		/* need to remove the md_redundancy_group */
 +		if (mddev->to_remove == NULL)
 +			mddev->to_remove = &md_redundancy_group;
 +	}
 +
 +	if (mddev->pers->sync_request == NULL &&
++=======
+ 	mddev_detach(mddev);
+ 	oldpers = mddev->pers;
+ 	oldpriv = mddev->private;
+ 	mddev->pers = pers;
+ 	mddev->private = priv;
+ 	strlcpy(mddev->clevel, pers->name, sizeof(mddev->clevel));
+ 	mddev->level = mddev->new_level;
+ 	mddev->layout = mddev->new_layout;
+ 	mddev->chunk_sectors = mddev->new_chunk_sectors;
+ 	mddev->delta_disks = 0;
+ 	mddev->reshape_backwards = 0;
+ 	mddev->degraded = 0;
+ 
+ 	if (oldpers->sync_request == NULL &&
++>>>>>>> db721d32b74b (md: level_store: group all important changes into one place.)
  	    mddev->external) {
  		/* We are converting from a no-redundancy array
  		 * to a redundancy array and metadata is managed
* Unmerged path drivers/md/md.c
