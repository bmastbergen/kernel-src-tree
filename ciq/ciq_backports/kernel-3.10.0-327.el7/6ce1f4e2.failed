KVM: MMU: introduce for_each_slot_rmap_range

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [kvm] mmu: introduce for_each_slot_rmap_range (Paolo Bonzini) [1202825]
Rebuild_FUZZ: 93.98%
commit-author Xiao Guangrong <guangrong.xiao@linux.intel.com>
commit 6ce1f4e295dd06b19443341b1684d361739ec117
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6ce1f4e2.failed

It's used to abstract the code from kvm_handle_hva_range and it will be
used by later patch

	Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 6ce1f4e295dd06b19443341b1684d361739ec117)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu.c
diff --cc arch/x86/kvm/mmu.c
index 10d8f908481b,316c43243995..000000000000
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@@ -1357,26 -1514,11 +1425,34 @@@ static int kvm_handle_hva_range(struct 
  		gfn_start = hva_to_gfn_memslot(hva_start, memslot);
  		gfn_end = hva_to_gfn_memslot(hva_end + PAGE_SIZE - 1, memslot);
  
++<<<<<<< HEAD
 +		for (j = PT_PAGE_TABLE_LEVEL;
 +		     j < PT_PAGE_TABLE_LEVEL + KVM_NR_PAGE_SIZES; ++j) {
 +			unsigned long idx, idx_end;
 +			unsigned long *rmapp;
 +			gfn_t gfn = gfn_start;
 +
 +			/*
 +			 * {idx(page_j) | page_j intersects with
 +			 *  [hva_start, hva_end)} = {idx, idx+1, ..., idx_end}.
 +			 */
 +			idx = gfn_to_index(gfn_start, memslot->base_gfn, j);
 +			idx_end = gfn_to_index(gfn_end - 1, memslot->base_gfn, j);
 +
 +			rmapp = __gfn_to_rmap(gfn_start, j, memslot);
 +
 +			for (; idx <= idx_end;
 +			       ++idx, gfn += (1UL << KVM_HPAGE_GFN_SHIFT(j)))
 +				ret |= handler(kvm, rmapp++, memslot,
 +					       gfn, j, data);
 +		}
++=======
+ 		for_each_slot_rmap_range(memslot, PT_PAGE_TABLE_LEVEL,
+ 				PT_MAX_HUGEPAGE_LEVEL, gfn_start, gfn_end - 1,
+ 				&iterator)
+ 			ret |= handler(kvm, iterator.rmap, memslot,
+ 				       iterator.gfn, iterator.level, data);
++>>>>>>> 6ce1f4e295dd (KVM: MMU: introduce for_each_slot_rmap_range)
  	}
  
  	return ret;
* Unmerged path arch/x86/kvm/mmu.c
