tuntap: Increase the number of queues in tun.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] tuntap: Increase the number of queues in tun (Jason Wang) [1231604]
Rebuild_FUZZ: 98.88%
commit-author Pankaj Gupta <pagupta@redhat.com>
commit baf71c5c1f80d82e92924050a60b5baaf97e3094
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/baf71c5c.failed

Networking under kvm works best if we allocate a per-vCPU RX and TX
queue in a virtual NIC. This requires a per-vCPU queue on the host side.

It is now safe to increase the maximum number of queues.
Preceding patch: 'net: allow large number of rx queues'
made sure this won't cause failures due to high order memory
allocations. Increase it to 256: this is the max number of vCPUs
KVM supports.

Size of tun_struct changes from 8512 to 10496 after this patch. This keeps
pages allocated for tun_struct before and after the patch to 3.

	Signed-off-by: Pankaj Gupta <pagupta@redhat.com>
	Reviewed-by: David Gibson <dgibson@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit baf71c5c1f80d82e92924050a60b5baaf97e3094)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/tun.c
diff --cc drivers/net/tun.c
index ebe54fc8a50b,74fdf1158448..000000000000
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@@ -125,10 -124,9 +125,16 @@@ struct tap_filter 
  	unsigned char	addr[FLT_EXACT_COUNT][ETH_ALEN];
  };
  
++<<<<<<< HEAD
 +/* DEFAULT_MAX_NUM_RSS_QUEUES were choosed to let the rx/tx queues allocated for
 + * the netdevice to be fit in one page. So we can make sure the success of
 + * memory allocation. TODO: increase the limit. */
 +#define MAX_TAP_QUEUES DEFAULT_MAX_NUM_RSS_QUEUES
++=======
+ /* MAX_TAP_QUEUES 256 is chosen to allow rx/tx queues to be equal
+  * to max number of VCPUs in guest. */
+ #define MAX_TAP_QUEUES 256
++>>>>>>> baf71c5c1f80 (tuntap: Increase the number of queues in tun.)
  #define MAX_TAP_FLOWS  4096
  
  #define TUN_FLOW_EXPIRE (3 * HZ)
* Unmerged path drivers/net/tun.c
