openvswitch: Fix MPLS action validation.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] openvswitch: Fix MPLS action validation (Jiri Benc) [1156461 1211348]
Rebuild_FUZZ: 98.73%
commit-author Pravin B Shelar <pshelar@nicira.com>
commit ec449f40bb3e19c77f62ddabf7c1fe3ccefece6f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ec449f40.failed

Linux stack does not implement GSO for packet with multiple
encapsulations.  Therefore there was check in MPLS action
validation to detect such case, But this check introduced
bug which deleted one or more actions from actions list.
Following patch removes this check to fix the validation.

Fixes: 25cd9ba0abc ("openvswitch: Add basic MPLS support to
kernel").

	Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
	Reported-by: Srinivas Neginhal <sneginha@vmware.com>
	Acked-by: Jarno Rajahalme <jrajahalme@nicira.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ec449f40bb3e19c77f62ddabf7c1fe3ccefece6f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/flow_netlink.c
diff --cc net/openvswitch/flow_netlink.c
index d35e6f9713da,d1eecf707613..000000000000
--- a/net/openvswitch/flow_netlink.c
+++ b/net/openvswitch/flow_netlink.c
@@@ -1757,8 -1826,45 +1757,50 @@@ int ovs_nla_copy_actions(const struct n
  		case OVS_ACTION_ATTR_RECIRC:
  			break;
  
++<<<<<<< HEAD
 +		case OVS_ACTION_ATTR_SET:
 +			err = validate_set(a, key, sfa, &skip_copy);
++=======
+ 		case OVS_ACTION_ATTR_PUSH_MPLS: {
+ 			const struct ovs_action_push_mpls *mpls = nla_data(a);
+ 
+ 			if (!eth_p_mpls(mpls->mpls_ethertype))
+ 				return -EINVAL;
+ 			/* Prohibit push MPLS other than to a white list
+ 			 * for packets that have a known tag order.
+ 			 */
+ 			if (vlan_tci & htons(VLAN_TAG_PRESENT) ||
+ 			    (eth_type != htons(ETH_P_IP) &&
+ 			     eth_type != htons(ETH_P_IPV6) &&
+ 			     eth_type != htons(ETH_P_ARP) &&
+ 			     eth_type != htons(ETH_P_RARP) &&
+ 			     !eth_p_mpls(eth_type)))
+ 				return -EINVAL;
+ 			eth_type = mpls->mpls_ethertype;
+ 			break;
+ 		}
+ 
+ 		case OVS_ACTION_ATTR_POP_MPLS:
+ 			if (vlan_tci & htons(VLAN_TAG_PRESENT) ||
+ 			    !eth_p_mpls(eth_type))
+ 				return -EINVAL;
+ 
+ 			/* Disallow subsequent L2.5+ set and mpls_pop actions
+ 			 * as there is no check here to ensure that the new
+ 			 * eth_type is valid and thus set actions could
+ 			 * write off the end of the packet or otherwise
+ 			 * corrupt it.
+ 			 *
+ 			 * Support for these actions is planned using packet
+ 			 * recirculation.
+ 			 */
+ 			eth_type = htons(0);
+ 			break;
+ 
+ 		case OVS_ACTION_ATTR_SET:
+ 			err = validate_set(a, key, sfa,
+ 					   &skip_copy, eth_type, log);
++>>>>>>> ec449f40bb3e (openvswitch: Fix MPLS action validation.)
  			if (err)
  				return err;
  			break;
* Unmerged path net/openvswitch/flow_netlink.c
