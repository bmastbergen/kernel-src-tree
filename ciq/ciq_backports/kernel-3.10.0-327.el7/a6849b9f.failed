AHCI: Pass SCSI host template as arg to ahci_host_activate()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Alexander Gordeev <agordeev@redhat.com>
commit a6849b9fdbffd2492a848df942b39d23bd81ef27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a6849b9f.failed

This update is a prerequisite for consolidation of
AHCI host activation code within ahci_host_activate()
function.

	Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
	Signed-off-by: Tejun Heo <tj@kernel.org>
	Cc: linux-ide@vger.kernel.org
(cherry picked from commit a6849b9fdbffd2492a848df942b39d23bd81ef27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ata/ahci.c
#	drivers/ata/ahci.h
diff --cc drivers/ata/ahci.c
index 2fc38f7d1744,fcda5b663030..000000000000
--- a/drivers/ata/ahci.c
+++ b/drivers/ata/ahci.c
@@@ -1166,9 -1230,7 +1166,13 @@@ intx
   *	ahci_host_activate - start AHCI host, request IRQs and register it
   *	@host: target ATA host
   *	@irq: base IRQ number to request
++<<<<<<< HEAD
 + *	@n_msis: number of MSIs allocated for this host
 + *	@irq_handler: irq_handler used when requesting IRQs
 + *	@irq_flags: irq_flags used when requesting IRQs
++=======
+  *	@sht: scsi_host_template to use when registering the host
++>>>>>>> a6849b9fdbff (AHCI: Pass SCSI host template as arg to ahci_host_activate())
   *
   *	Similar to ata_host_activate, but requests IRQs according to AHCI-1.1
   *	when multiple MSIs were allocated. That is one MSI per port, starting
@@@ -1180,7 -1242,8 +1184,12 @@@
   *	RETURNS:
   *	0 on success, -errno otherwise.
   */
++<<<<<<< HEAD
 +int ahci_host_activate(struct ata_host *host, int irq, unsigned int n_msis)
++=======
+ int ahci_host_activate(struct ata_host *host, int irq,
+ 		       struct scsi_host_template *sht)
++>>>>>>> a6849b9fdbff (AHCI: Pass SCSI host template as arg to ahci_host_activate())
  {
  	int i, rc;
  
@@@ -1445,7 -1488,7 +1454,11 @@@ static int ahci_init_one(struct pci_de
  	pci_set_master(pdev);
  
  	if (hpriv->flags & AHCI_HFLAG_MULTI_MSI)
++<<<<<<< HEAD
 +		return ahci_host_activate(host, pdev->irq, n_msis);
++=======
+ 		return ahci_host_activate(host, pdev->irq, &ahci_sht);
++>>>>>>> a6849b9fdbff (AHCI: Pass SCSI host template as arg to ahci_host_activate())
  
  	return ata_host_activate(host, pdev->irq, ahci_interrupt, IRQF_SHARED,
  				 &ahci_sht);
diff --cc drivers/ata/ahci.h
index 16b1c42fa23e,31b4c44e3f71..000000000000
--- a/drivers/ata/ahci.h
+++ b/drivers/ata/ahci.h
@@@ -370,7 -392,9 +370,13 @@@ irqreturn_t ahci_interrupt(int irq, voi
  irqreturn_t ahci_hw_interrupt(int irq, void *dev_instance);
  irqreturn_t ahci_thread_fn(int irq, void *dev_instance);
  void ahci_print_info(struct ata_host *host, const char *scc_s);
++<<<<<<< HEAD
 +int ahci_host_activate(struct ata_host *host, int irq, unsigned int n_msis);
++=======
+ int ahci_host_activate(struct ata_host *host, int irq,
+ 		       struct scsi_host_template *sht);
+ void ahci_error_handler(struct ata_port *ap);
++>>>>>>> a6849b9fdbff (AHCI: Pass SCSI host template as arg to ahci_host_activate())
  
  static inline void __iomem *__ahci_port_base(struct ata_host *host,
  					     unsigned int port_no)
* Unmerged path drivers/ata/ahci.c
* Unmerged path drivers/ata/ahci.h
