bonding: unwind on bond_add_vlan failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author nikolay@redhat.com <nikolay@redhat.com>
commit b20903f2a9ee5bd9ca80ad72867c8d137aaf4d62
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b20903f2.failed

In case of bond_add_vlan() failure currently we'll have the vlan's
refcnt bumped up in all slaves, but it will never go down because it
failed to get added to the bond, so properly unwind the added vlan if
bond_add_vlan fails.

	Signed-off-by: Nikolay Aleksandrov <nikolay@redhat.com>
	Acked-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b20903f2a9ee5bd9ca80ad72867c8d137aaf4d62)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index ef8213746e65,4264a7631cba..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -460,9 -461,8 +460,14 @@@ static int bond_vlan_rx_add_vid(struct 
  	return 0;
  
  unwind:
++<<<<<<< HEAD
 +	/* unwind from head to the slave that failed */
 +	stop_at = slave;
 +	bond_for_each_slave_from_to(bond, slave, i, bond->first_slave, stop_at)
++=======
+ 	/* unwind from the slave that failed */
+ 	bond_for_each_slave_continue_reverse(bond, slave)
++>>>>>>> b20903f2a9ee (bonding: unwind on bond_add_vlan failure)
  		vlan_vid_del(slave->dev, proto, vid);
  
  	return res;
* Unmerged path drivers/net/bonding/bond_main.c
