NVMe: Fix error handling of class_create("nvme")

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Alexey Khoroshilov <khoroshilov@ispras.ru>
commit c727040bdaa28cd7aa9dbc086eee7b236e0fb270
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c727040b.failed

class_create() returns ERR_PTR on failure,
so IS_ERR() should be used instead of check for NULL.

Found by Linux Driver Verification project (linuxtesting.org).

	Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
	Acked-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit c727040bdaa28cd7aa9dbc086eee7b236e0fb270)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index 29d2b5fb1975,9052553eda65..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -3139,10 -3155,18 +3139,21 @@@ static int __init nvme_init(void
  	else if (result > 0)
  		nvme_major = result;
  
 -	result = __register_chrdev(nvme_char_major, 0, NVME_MINORS, "nvme",
 -							&nvme_dev_fops);
 -	if (result < 0)
 +	nvme_nb.notifier_call = &nvme_cpu_notify;
 +	result = register_hotcpu_notifier(&nvme_nb);
 +	if (result)
  		goto unregister_blkdev;
++<<<<<<< HEAD
++=======
+ 	else if (result > 0)
+ 		nvme_char_major = result;
+ 
+ 	nvme_class = class_create(THIS_MODULE, "nvme");
+ 	if (IS_ERR(nvme_class)) {
+ 		result = PTR_ERR(nvme_class);
+ 		goto unregister_chrdev;
+ 	}
++>>>>>>> c727040bdaa2 (NVMe: Fix error handling of class_create("nvme"))
  
  	result = pci_register_driver(&nvme_driver);
  	if (result)
* Unmerged path drivers/block/nvme-core.c
