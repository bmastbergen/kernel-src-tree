rtnetlink: ifla_vf_policy: fix misuses of NLA_BINARY

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 364d5716a7adb91b731a35765d369602d68d2881
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/364d5716.failed

ifla_vf_policy[] is wrong in advertising its individual member types as
NLA_BINARY since .type = NLA_BINARY in combination with .len declares the
len member as *max* attribute length [0, len].

The issue is that when do_setvfinfo() is being called to set up a VF
through ndo handler, we could set corrupted data if the attribute length
is less than the size of the related structure itself.

The intent is exactly the opposite, namely to make sure to pass at least
data of minimum size of len.

Fixes: ebc08a6f47ee ("rtnetlink: Add VF config code to rtnetlink")
	Cc: Mitch Williams <mitch.a.williams@intel.com>
	Cc: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 364d5716a7adb91b731a35765d369602d68d2881)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index 84ac04f7b576,5daabfda6f6f..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -1140,16 -1237,12 +1140,25 @@@ static const struct nla_policy ifla_vfi
  };
  
  static const struct nla_policy ifla_vf_policy[IFLA_VF_MAX+1] = {
++<<<<<<< HEAD
 +	[IFLA_VF_MAC]		= { .type = NLA_BINARY,
 +				    .len = sizeof(struct ifla_vf_mac) },
 +	[IFLA_VF_VLAN]		= { .type = NLA_BINARY,
 +				    .len = sizeof(struct ifla_vf_vlan) },
 +	[IFLA_VF_TX_RATE]	= { .type = NLA_BINARY,
 +				    .len = sizeof(struct ifla_vf_tx_rate) },
 +	[IFLA_VF_SPOOFCHK]	= { .type = NLA_BINARY,
 +				    .len = sizeof(struct ifla_vf_spoofchk) },
 +	[IFLA_VF_LINK_STATE]	= { .type = NLA_BINARY,
 +				    .len = sizeof(struct ifla_vf_link_state) },
++=======
+ 	[IFLA_VF_MAC]		= { .len = sizeof(struct ifla_vf_mac) },
+ 	[IFLA_VF_VLAN]		= { .len = sizeof(struct ifla_vf_vlan) },
+ 	[IFLA_VF_TX_RATE]	= { .len = sizeof(struct ifla_vf_tx_rate) },
+ 	[IFLA_VF_SPOOFCHK]	= { .len = sizeof(struct ifla_vf_spoofchk) },
+ 	[IFLA_VF_RATE]		= { .len = sizeof(struct ifla_vf_rate) },
+ 	[IFLA_VF_LINK_STATE]	= { .len = sizeof(struct ifla_vf_link_state) },
++>>>>>>> 364d5716a7ad (rtnetlink: ifla_vf_policy: fix misuses of NLA_BINARY)
  };
  
  static const struct nla_policy ifla_port_policy[IFLA_PORT_MAX+1] = {
* Unmerged path net/core/rtnetlink.c
