show isolated cpus in sysfs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [drivers] base: show isolated cpus in sysfs (Rik van Riel) [1212618]
Rebuild_FUZZ: 90.00%
commit-author Rik van Riel <riel@redhat.com>
commit 59f30abe94bff50636c8cad45207a01fdcb2ee49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/59f30abe.failed

After system bootup, there is no totally reliable way to see
which CPUs are isolated, because the kernel may modify the
CPUs specified on the isolcpus= kernel command line option.

Export the CPU list that actually got isolated in sysfs,
specifically in the file /sys/devices/system/cpu/isolated

This can be used by system management tools like libvirt,
openstack, and others to ensure proper placement of tasks.

	Suggested-by: Li Zefan <lizefan@huawei.com>
	Signed-off-by: Rik van Riel <riel@redhat.com>
	Acked-by: Mike Galbraith <umgwanakikbuti@gmail.com>
	Acked-by: Chris Metcalf <cmetcalf@ezchip.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 59f30abe94bff50636c8cad45207a01fdcb2ee49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/cpu.c
diff --cc drivers/base/cpu.c
index 9785fff8a4e9,ea23ee7b545b..000000000000
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@@ -323,7 -442,8 +334,12 @@@ static struct attribute *cpu_root_attrs
  	&cpu_attrs[2].attr.attr,
  	&dev_attr_kernel_max.attr,
  	&dev_attr_offline.attr,
++<<<<<<< HEAD
 +#ifdef CONFIG_ARCH_HAS_CPU_AUTOPROBE
++=======
+ 	&dev_attr_isolated.attr,
+ #ifdef CONFIG_GENERIC_CPU_AUTOPROBE
++>>>>>>> 59f30abe94bf (show isolated cpus in sysfs)
  	&dev_attr_modalias.attr,
  #endif
  	NULL
* Unmerged path drivers/base/cpu.c
