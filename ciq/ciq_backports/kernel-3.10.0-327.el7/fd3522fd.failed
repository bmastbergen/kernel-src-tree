audit: enable filename recording via getname_kernel()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Paul Moore <pmoore@redhat.com>
commit fd3522fdc84023b050bb40318d9fc71a9adc22bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/fd3522fd.failed

Enable recording of filenames in getname_kernel() and remove the
kludgy workaround in __audit_inode() now that we have proper filename
logging for kernel users.

CC: viro@zeniv.linux.org.uk
CC: linux-fsdevel@vger.kernel.org
	Signed-off-by: Paul Moore <pmoore@redhat.com>
	Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit fd3522fdc84023b050bb40318d9fc71a9adc22bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/namei.c
#	kernel/auditsc.c
diff --cc fs/namei.c
index 72c9894b9e82,a3fde77d4abf..000000000000
--- a/fs/namei.c
+++ b/fs/namei.c
@@@ -210,6 -212,42 +210,45 @@@ getname(const char __user * filename
  	return getname_flags(filename, 0, NULL);
  }
  
++<<<<<<< HEAD
++=======
+ struct filename *
+ getname_kernel(const char * filename)
+ {
+ 	struct filename *result;
+ 	int len = strlen(filename) + 1;
+ 
+ 	result = __getname();
+ 	if (unlikely(!result))
+ 		return ERR_PTR(-ENOMEM);
+ 
+ 	if (len <= EMBEDDED_NAME_MAX) {
+ 		result->name = (char *)(result) + sizeof(*result);
+ 		result->separate = false;
+ 	} else if (len <= PATH_MAX) {
+ 		struct filename *tmp;
+ 
+ 		tmp = kmalloc(sizeof(*tmp), GFP_KERNEL);
+ 		if (unlikely(!tmp)) {
+ 			__putname(result);
+ 			return ERR_PTR(-ENOMEM);
+ 		}
+ 		tmp->name = (char *)result;
+ 		tmp->separate = true;
+ 		result = tmp;
+ 	} else {
+ 		__putname(result);
+ 		return ERR_PTR(-ENAMETOOLONG);
+ 	}
+ 	memcpy((char *)result->name, filename, len);
+ 	result->uptr = NULL;
+ 	result->aname = NULL;
+ 	audit_getname(result);
+ 
+ 	return result;
+ }
+ 
++>>>>>>> fd3522fdc840 (audit: enable filename recording via getname_kernel())
  #ifdef CONFIG_AUDITSYSCALL
  void putname(struct filename *name)
  {
diff --cc kernel/auditsc.c
index 01f5de1b9bd4,132dbcdef6ec..000000000000
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@@ -1818,12 -1878,14 +1818,19 @@@ void __audit_inode(struct filename *nam
  	}
  
  out_alloc:
 -	/* unable to find an entry with both a matching name and type */
 -	n = audit_alloc_name(context, AUDIT_TYPE_UNKNOWN);
 +	/* unable to find the name from a previous getname(). Allocate a new
 +	 * anonymous entry.
 +	 */
 +	n = audit_alloc_name(context, AUDIT_TYPE_NORMAL);
  	if (!n)
  		return;
++<<<<<<< HEAD
++=======
+ 	if (name)
+ 		/* no need to set ->name_put as the original will cleanup */
+ 		n->name = name;
+ 
++>>>>>>> fd3522fdc840 (audit: enable filename recording via getname_kernel())
  out:
  	if (parent) {
  		n->name_len = n->name ? parent_len(n->name->name) : AUDIT_NAME_FULL;
* Unmerged path fs/namei.c
* Unmerged path kernel/auditsc.c
