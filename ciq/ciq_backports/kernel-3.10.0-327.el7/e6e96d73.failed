NVMe: Initialize device list head before starting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Keith Busch <keith.busch@intel.com>
commit e6e96d73a2aaaa54ed2c0f98693f4bf572712f1c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/e6e96d73.failed

Driver recovery requires the device's list node to have been initialized.

Fixes: https://lkml.org/lkml/2015/3/22/262

	Reported-by: Steven Noonan <steven@uplinklabs.net>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Cc: Matthew Wilcox <willy@linux.intel.com>
	Cc: Jens Axboe <axboe@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit e6e96d73a2aaaa54ed2c0f98693f4bf572712f1c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index 6783fae878e4,e23be20a3417..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2985,34 -2994,21 +2985,40 @@@ static int nvme_probe(struct pci_dev *p
  		goto release;
  
  	kref_init(&dev->kref);
 -	dev->device = device_create(nvme_class, &pdev->dev,
 -				MKDEV(nvme_char_major, dev->instance),
 -				dev, "nvme%d", dev->instance);
 -	if (IS_ERR(dev->device)) {
 -		result = PTR_ERR(dev->device);
 +	result = nvme_dev_start(dev);
 +	if (result)
  		goto release_pools;
 -	}
 -	get_device(dev->device);
  
++<<<<<<< HEAD
 +	if (dev->online_queues > 1)
 +		result = nvme_dev_add(dev);
 +	if (result)
 +		goto shutdown;
 +
 +	scnprintf(dev->name, sizeof(dev->name), "nvme%d", dev->instance);
 +	dev->miscdev.minor = MISC_DYNAMIC_MINOR;
 +	dev->miscdev.parent = &pdev->dev;
 +	dev->miscdev.name = dev->name;
 +	dev->miscdev.fops = &nvme_dev_fops;
 +	result = misc_register(&dev->miscdev);
 +	if (result)
 +		goto remove;
 +
 +	dev->initialized = 1;
++=======
+ 	INIT_LIST_HEAD(&dev->node);
+ 	INIT_WORK(&dev->probe_work, nvme_async_probe);
+ 	schedule_work(&dev->probe_work);
++>>>>>>> e6e96d73a2aa (NVMe: Initialize device list head before starting)
  	return 0;
  
 + remove:
 +	nvme_dev_remove(dev);
 +	nvme_free_namespaces(dev);
 + shutdown:
 +	nvme_dev_shutdown(dev);
   release_pools:
 +	nvme_free_queues(dev, 0);
  	nvme_release_prp_pools(dev);
   release:
  	nvme_release_instance(dev);
* Unmerged path drivers/block/nvme-core.c
