tcp: fix stretch ACK bugs in Reno

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Neal Cardwell <ncardwell@google.com>
commit c22bdca94782f05b9337d8548bde51b2f38ef17f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c22bdca9.failed

Change Reno to properly handle stretch ACKs in additive increase mode
by passing in the count of ACKed packets to tcp_cong_avoid_ai().

In addition, if snd_cwnd crosses snd_ssthresh during slow start
processing, and we then exit slow start mode, we need to carry over
any remaining "credit" for packets ACKed and apply that to additive
increase by passing this remaining "acked" count to
tcp_cong_avoid_ai().

	Reported-by: Eyal Perry <eyalpe@mellanox.com>
	Signed-off-by: Neal Cardwell <ncardwell@google.com>
	Signed-off-by: Yuchung Cheng <ycheng@google.com>
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c22bdca94782f05b9337d8548bde51b2f38ef17f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp_cong.c
diff --cc net/ipv4/tcp_cong.c
index 511547b93096,8670e68e2ce6..000000000000
--- a/net/ipv4/tcp_cong.c
+++ b/net/ipv4/tcp_cong.c
@@@ -362,11 -335,13 +362,21 @@@ void tcp_reno_cong_avoid(struct sock *s
  		return;
  
  	/* In "safe" area, increase. */
++<<<<<<< HEAD
 +	if (tp->snd_cwnd <= tp->snd_ssthresh)
 +		tcp_slow_start(tp);
 +	/* In dangerous area, increase slowly. */
 +	else
 +		tcp_cong_avoid_ai(tp, tp->snd_cwnd);
++=======
+ 	if (tp->snd_cwnd <= tp->snd_ssthresh) {
+ 		acked = tcp_slow_start(tp, acked);
+ 		if (!acked)
+ 			return;
+ 	}
+ 	/* In dangerous area, increase slowly. */
+ 	tcp_cong_avoid_ai(tp, tp->snd_cwnd, acked);
++>>>>>>> c22bdca94782 (tcp: fix stretch ACK bugs in Reno)
  }
  EXPORT_SYMBOL_GPL(tcp_reno_cong_avoid);
  
* Unmerged path net/ipv4/tcp_cong.c
