percpu-refcount: implement percpu_ref_reinit() and percpu_ref_is_zero()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Tejun Heo <tj@kernel.org>
commit 2d7227828e1475c7b272e55bd70c4cec8eea219a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2d722782.failed

Now that explicit invocation of percpu_ref_exit() is necessary to free
the percpu counter, we can implement percpu_ref_reinit() which
reinitializes a released percpu_ref.  This can be used implement
scalable gating switch which can be drained and then re-opened without
worrying about memory allocation failures.

percpu_ref_is_zero() is added to be used in a sanity check in
percpu_ref_exit().  As this function will be useful for other purposes
too, make it a public interface.

v2: Use smp_read_barrier_depends() instead of smp_load_acquire().  We
    only need data dep barrier and smp_load_acquire() is stronger and
    heavier on some archs.  Spotted by Lai Jiangshan.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Cc: Kent Overstreet <kmo@daterainc.com>
	Cc: Christoph Lameter <cl@linux-foundation.org>
	Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
(cherry picked from commit 2d7227828e1475c7b272e55bd70c4cec8eea219a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/percpu-refcount.h
#	lib/percpu-refcount.c
* Unmerged path include/linux/percpu-refcount.h
* Unmerged path lib/percpu-refcount.c
* Unmerged path include/linux/percpu-refcount.h
* Unmerged path lib/percpu-refcount.c
