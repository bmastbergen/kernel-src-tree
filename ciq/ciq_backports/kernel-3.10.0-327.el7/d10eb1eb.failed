perf ordered_events: Allow tools to specify a deliver method

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] ordered_events: Allow tools to specify a deliver method (Jiri Olsa) [1222189]
Rebuild_FUZZ: 95.65%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit d10eb1eb76a86266354ecab6e42c1606e3b8bc4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d10eb1eb.failed

So that we can simplify the deliver method to pass just:

 (ordered_events, ordered_event, sample);

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Don Zickus <dzickus@redhat.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-j0s4bpxs5qza5tnkvjwom9rw@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d10eb1eb76a86266354ecab6e42c1606e3b8bc4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/ordered-events.c
#	tools/perf/util/ordered-events.h
#	tools/perf/util/session.c
diff --cc tools/perf/util/session.c
index 647c690afe48,e2f318a3f17a..000000000000
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@@ -14,7 -14,14 +14,13 @@@
  #include "util.h"
  #include "cpumap.h"
  #include "perf_regs.h"
 -#include "asm/bug.h"
  
+ static int machines__deliver_event(struct machines *machines,
+ 				   struct perf_evlist *evlist,
+ 				   union perf_event *event,
+ 				   struct perf_sample *sample,
+ 				   struct perf_tool *tool, u64 file_offset);
+ 
  static int perf_session__open(struct perf_session *session)
  {
  	struct perf_data_file *file = session->file;
@@@ -127,6 -139,9 +141,12 @@@ struct perf_session *perf_session__new(
  	    tool->ordered_events && !perf_evlist__sample_id_all(session->evlist)) {
  		dump_printf("WARNING: No sample_id_all support, falling back to unordered processing\n");
  		tool->ordered_events = false;
++<<<<<<< HEAD
++=======
+ 	} else {
+ 		ordered_events__init(&session->ordered_events, &session->machines,
+ 				     session->evlist, tool, ordered_events__deliver_event);
++>>>>>>> d10eb1eb76a8 (perf ordered_events: Allow tools to specify a deliver method)
  	}
  
  	return session;
@@@ -1003,11 -904,11 +1023,19 @@@ perf_session__deliver_sample(struct per
  					    &sample->read.one, machine);
  }
  
++<<<<<<< HEAD
 +static int perf_session_deliver_event(struct perf_session *session,
 +				      union perf_event *event,
 +				      struct perf_sample *sample,
 +				      struct perf_tool *tool,
 +				      u64 file_offset)
++=======
+ static int machines__deliver_event(struct machines *machines,
+ 				   struct perf_evlist *evlist,
+ 				   union perf_event *event,
+ 				   struct perf_sample *sample,
+ 				   struct perf_tool *tool, u64 file_offset)
++>>>>>>> d10eb1eb76a8 (perf ordered_events: Allow tools to specify a deliver method)
  {
  	struct perf_evsel *evsel;
  	struct machine *machine;
* Unmerged path tools/perf/util/ordered-events.c
* Unmerged path tools/perf/util/ordered-events.h
* Unmerged path tools/perf/util/ordered-events.c
* Unmerged path tools/perf/util/ordered-events.h
* Unmerged path tools/perf/util/session.c
