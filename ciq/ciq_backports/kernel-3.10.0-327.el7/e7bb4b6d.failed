mm: add p[te|md] protnone helpers for use by NUMA balancing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [mm] add p[te|md] protnone helpers for use by NUMA balancing (Gustavo Duarte) [1217743]
Rebuild_FUZZ: 88.68%
commit-author Mel Gorman <mgorman@suse.de>
commit e7bb4b6d1609cce391af1e7bc6f31d14f1a3a890
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/e7bb4b6d.failed

This is a preparatory patch that introduces protnone helpers for automatic
NUMA balancing.

	Signed-off-by: Mel Gorman <mgorman@suse.de>
	Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
	Acked-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Tested-by: Sasha Levin <sasha.levin@oracle.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Dave Jones <davej@redhat.com>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Rik van Riel <riel@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit e7bb4b6d1609cce391af1e7bc6f31d14f1a3a890)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/pgtable.h
diff --cc arch/powerpc/include/asm/pgtable.h
index 4fbc04254e64,1146006d3477..000000000000
--- a/arch/powerpc/include/asm/pgtable.h
+++ b/arch/powerpc/include/asm/pgtable.h
@@@ -38,6 -40,21 +38,24 @@@ static inline int pte_none(pte_t pte)		
  static inline pgprot_t pte_pgprot(pte_t pte)	{ return __pgprot(pte_val(pte) & PAGE_PROT_BITS); }
  
  #ifdef CONFIG_NUMA_BALANCING
++<<<<<<< HEAD
++=======
+ /*
+  * These work without NUMA balancing but the kernel does not care. See the
+  * comment in include/asm-generic/pgtable.h . On powerpc, this will only
+  * work for user pages and always return true for kernel pages.
+  */
+ static inline int pte_protnone(pte_t pte)
+ {
+ 	return (pte_val(pte) &
+ 		(_PAGE_PRESENT | _PAGE_USER)) == _PAGE_PRESENT;
+ }
+ 
+ static inline int pmd_protnone(pmd_t pmd)
+ {
+ 	return pte_protnone(pmd_pte(pmd));
+ }
++>>>>>>> e7bb4b6d1609 (mm: add p[te|md] protnone helpers for use by NUMA balancing)
  
  static inline int pte_present(pte_t pte)
  {
* Unmerged path arch/powerpc/include/asm/pgtable.h
diff --git a/arch/x86/include/asm/pgtable.h b/arch/x86/include/asm/pgtable.h
index baa6c1dd0ecb..06b15a7a2a9a 100644
--- a/arch/x86/include/asm/pgtable.h
+++ b/arch/x86/include/asm/pgtable.h
@@ -445,6 +445,22 @@ static inline int pmd_present(pmd_t pmd)
 				 _PAGE_NUMA);
 }
 
+#ifdef CONFIG_NUMA_BALANCING
+/*
+ * These work without NUMA balancing but the kernel does not care. See the
+ * comment in include/asm-generic/pgtable.h
+ */
+static inline int pte_protnone(pte_t pte)
+{
+	return pte_flags(pte) & _PAGE_PROTNONE;
+}
+
+static inline int pmd_protnone(pmd_t pmd)
+{
+	return pmd_flags(pmd) & _PAGE_PROTNONE;
+}
+#endif /* CONFIG_NUMA_BALANCING */
+
 static inline int pmd_none(pmd_t pmd)
 {
 	/* Only check low word on 32-bit platforms, since it might be
diff --git a/include/asm-generic/pgtable.h b/include/asm-generic/pgtable.h
index 52e84dd2949b..76622d2f99c8 100644
--- a/include/asm-generic/pgtable.h
+++ b/include/asm-generic/pgtable.h
@@ -594,6 +594,26 @@ static inline int pmd_trans_unstable(pmd_t *pmd)
 #endif
 }
 
+#ifndef CONFIG_NUMA_BALANCING
+/*
+ * Technically a PTE can be PROTNONE even when not doing NUMA balancing but
+ * the only case the kernel cares is for NUMA balancing and is only ever set
+ * when the VMA is accessible. For PROT_NONE VMAs, the PTEs are not marked
+ * _PAGE_PROTNONE so by by default, implement the helper as "always no". It
+ * is the responsibility of the caller to distinguish between PROT_NONE
+ * protections and NUMA hinting fault protections.
+ */
+static inline int pte_protnone(pte_t pte)
+{
+	return 0;
+}
+
+static inline int pmd_protnone(pmd_t pmd)
+{
+	return 0;
+}
+#endif /* CONFIG_NUMA_BALANCING */
+
 #ifdef CONFIG_NUMA_BALANCING
 #ifdef CONFIG_ARCH_USES_NUMA_PROT_NONE
 /*
