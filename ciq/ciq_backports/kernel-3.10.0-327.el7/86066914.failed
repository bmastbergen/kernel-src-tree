gfs2: Don't support fallocate on jdata	files

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [fs] gfs2: Don't support fallocate on jdata files (Abhijith Das) [1221331]
Rebuild_FUZZ: 96.63%
commit-author Abhi Das <adas@redhat.com>
commit 86066914edff2316cbed63aac8a87d5001441a16
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/86066914.failed

We cannot provide an efficient implementation due to the headers
on the data blocks, so there doesn't seem much point in having it.

	Signed-off-by: Abhi Das <adas@redhat.com>
	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit 86066914edff2316cbed63aac8a87d5001441a16)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/file.c
diff --cc fs/gfs2/file.c
index c4f7d287f0d2,8252115551a6..000000000000
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@@ -912,6 -907,46 +912,49 @@@ out_trans_fail
  	gfs2_inplace_release(ip);
  out_qunlock:
  	gfs2_quota_unlock(ip);
++<<<<<<< HEAD
++=======
+ 	return error;
+ }
+ 
+ static long gfs2_fallocate(struct file *file, int mode, loff_t offset, loff_t len)
+ {
+ 	struct inode *inode = file_inode(file);
+ 	struct gfs2_inode *ip = GFS2_I(inode);
+ 	struct gfs2_holder gh;
+ 	int ret;
+ 
+ 	if ((mode & ~FALLOC_FL_KEEP_SIZE) || gfs2_is_jdata(ip))
+ 		return -EOPNOTSUPP;
+ 
+ 	mutex_lock(&inode->i_mutex);
+ 
+ 	gfs2_holder_init(ip->i_gl, LM_ST_EXCLUSIVE, 0, &gh);
+ 	ret = gfs2_glock_nq(&gh);
+ 	if (ret)
+ 		goto out_uninit;
+ 
+ 	if (!(mode & FALLOC_FL_KEEP_SIZE) &&
+ 	    (offset + len) > inode->i_size) {
+ 		ret = inode_newsize_ok(inode, offset + len);
+ 		if (ret)
+ 			goto out_unlock;
+ 	}
+ 
+ 	ret = get_write_access(inode);
+ 	if (ret)
+ 		goto out_unlock;
+ 
+ 	ret = gfs2_rs_alloc(ip);
+ 	if (ret)
+ 		goto out_putw;
+ 
+ 	ret = __gfs2_fallocate(file, mode, offset, len);
+ 	if (ret)
+ 		gfs2_rs_deltree(ip->i_res);
+ out_putw:
+ 	put_write_access(inode);
++>>>>>>> 86066914edff (gfs2: Don't support fallocate on jdata	files)
  out_unlock:
  	gfs2_glock_dq(&gh);
  out_uninit:
* Unmerged path fs/gfs2/file.c
