[SCSI] iscsi_tcp: check for valid session before accessing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] iscsi_tcp: check for valid session before accessing (Chris Leech) [1231606]
Rebuild_FUZZ: 93.58%
commit-author Mike Christie <michaelc@cs.wisc.edu>
commit eee2b5c840d93f704554f4a2884cef72742f22e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/eee2b5c8.failed

Check that the session is setup before accessing its
connection. This fixes a oops where userspace tries
to get the ip address before the session is bound to
a host.

	Signed-off-by: Mike Christie <michaelc@cs.wisc.edu>
	Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit eee2b5c840d93f704554f4a2884cef72742f22e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/iscsi_tcp.c
diff --cc drivers/scsi/iscsi_tcp.c
index a70e7d920c87,bfb6d07d87f0..000000000000
--- a/drivers/scsi/iscsi_tcp.c
+++ b/drivers/scsi/iscsi_tcp.c
@@@ -759,10 -759,13 +759,17 @@@ static int iscsi_sw_tcp_host_get_param(
  
  	switch (param) {
  	case ISCSI_HOST_PARAM_IPADDRESS:
++<<<<<<< HEAD
 +		spin_lock_bh(&session->lock);
++=======
+ 		if (!session)
+ 			return -ENOTCONN;
+ 
+ 		spin_lock_bh(&session->frwd_lock);
++>>>>>>> eee2b5c840d9 ([SCSI] iscsi_tcp: check for valid session before accessing)
  		conn = session->leadconn;
  		if (!conn) {
 -			spin_unlock_bh(&session->frwd_lock);
 +			spin_unlock_bh(&session->lock);
  			return -ENOTCONN;
  		}
  		tcp_conn = conn->dd_data;
* Unmerged path drivers/scsi/iscsi_tcp.c
