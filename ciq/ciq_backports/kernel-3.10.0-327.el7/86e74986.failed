bonding: 3ad: clean up curr_slave_lock usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Nikolay Aleksandrov <nikolay@redhat.com>
commit 86e749866d7c6b0ee1f9377cf7142f2690596a05
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/86e74986.failed

Remove the read_lock in bond_3ad_lacpdu_recv() since when the slave is
being released its rx_handler is removed before 3ad unbind, so even if
packets arrive, they won't see the slave in an inconsistent state.

	Signed-off-by: Nikolay Aleksandrov <nikolay@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 86e749866d7c6b0ee1f9377cf7142f2690596a05)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index 65115ee7b259,dfd3a7835d17..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -2510,15 -2483,15 +2509,19 @@@ int bond_3ad_lacpdu_recv(const struct s
  
  	lacpdu = skb_header_pointer(skb, 0, sizeof(_lacpdu), &_lacpdu);
  	if (!lacpdu)
- 		return ret;
+ 		return RX_HANDLER_ANOTHER;
  
++<<<<<<< HEAD
 +	read_lock(&bond->lock);
 +	ret = bond_3ad_rx_indication(lacpdu, slave, skb->len);
 +	read_unlock(&bond->lock);
 +	return ret;
++=======
+ 	return bond_3ad_rx_indication(lacpdu, slave, skb->len);
++>>>>>>> 86e749866d7c (bonding: 3ad: clean up curr_slave_lock usage)
  }
  
 -/**
 - * bond_3ad_update_lacp_rate - change the lacp rate
 - * @bond - bonding struct
 - *
 +/*
   * When modify lacp_rate parameter via sysfs,
   * update actor_oper_port_state of each port.
   *
* Unmerged path drivers/net/bonding/bond_3ad.c
