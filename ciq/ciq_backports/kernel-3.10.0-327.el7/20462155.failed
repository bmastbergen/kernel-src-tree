net: inet_diag: export IPV6_V6ONLY sockopt

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] inet_diag: export IPV6_V6ONLY sockopt (Phil Sutter) [1247309]
Rebuild_FUZZ: 93.67%
commit-author Phil Sutter <phil@nwl.cc>
commit 204621551b2a0060a013b92f7add4d5c452fa7cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/20462155.failed

For AF_INET6 sockets, the value of struct ipv6_pinfo.ipv6only is
exported to userspace. It indicates whether a socket bound to in6addr_any
listens on IPv4 as well as IPv6. Since the socket is natively IPv6, it is not
listed by e.g. 'ss -l -4'.

This patch is accompanied by an appropriate one for iproute2 to enable
the additional information in 'ss -e'.

	Signed-off-by: Phil Sutter <phil@nwl.cc>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 204621551b2a0060a013b92f7add4d5c452fa7cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/inet_diag.h
diff --cc include/uapi/linux/inet_diag.h
index d65c0a09efd3,68a1f71fde9f..000000000000
--- a/include/uapi/linux/inet_diag.h
+++ b/include/uapi/linux/inet_diag.h
@@@ -111,9 -111,11 +111,17 @@@ enum 
  	INET_DIAG_SKMEMINFO,
  	INET_DIAG_SHUTDOWN,
  	INET_DIAG_DCTCPINFO,
++<<<<<<< HEAD
 +};
 +
 +#define INET_DIAG_MAX INET_DIAG_DCTCPINFO
++=======
+ 	INET_DIAG_PROTOCOL,  /* response attribute only */
+ 	INET_DIAG_SKV6ONLY,
+ };
+ 
+ #define INET_DIAG_MAX INET_DIAG_SKV6ONLY
++>>>>>>> 204621551b2a (net: inet_diag: export IPV6_V6ONLY sockopt)
  
  /* INET_DIAG_MEM */
  
* Unmerged path include/uapi/linux/inet_diag.h
diff --git a/net/ipv4/inet_diag.c b/net/ipv4/inet_diag.c
index 4eeba4e497a0..4a2ded314512 100644
--- a/net/ipv4/inet_diag.c
+++ b/net/ipv4/inet_diag.c
@@ -147,6 +147,10 @@ int inet_sk_diag_fill(struct sock *sk, struct inet_connection_sock *icsk,
 			if (nla_put_u8(skb, INET_DIAG_TCLASS,
 				       inet6_sk(sk)->tclass) < 0)
 				goto errout;
+
+		if (ipv6_only_sock(sk) &&
+		    nla_put_u8(skb, INET_DIAG_SKV6ONLY, 1))
+			goto errout;
 	}
 #endif
 
