show nohz_full cpus in sysfs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [drivers] base: show nohz_full cpus in sysfs (Rik van Riel) [1212618]
Rebuild_FUZZ: 90.32%
commit-author Rik van Riel <riel@redhat.com>
commit 6570a9a1ce3a1dd227a065fd8ad16778d827b753
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6570a9a1.failed

Currently there is no way to query which CPUs are in nohz_full
mode from userspace.

Export the CPU list running in nohz_full mode in sysfs,
specifically in the file /sys/devices/system/cpu/nohz_full

This can be used by system management tools like libvirt,
openstack, and others to ensure proper task placement.

	Signed-off-by: Rik van Riel <riel@redhat.com>
	Acked-by: Mike Galbraith <umgwanakikbuti@gmail.com>
	Acked-by: Chris Metcalf <cmetcalf@ezchip.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6570a9a1ce3a1dd227a065fd8ad16778d827b753)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/cpu.c
diff --cc drivers/base/cpu.c
index 9785fff8a4e9,78720e706176..000000000000
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@@ -14,6 -14,9 +14,12 @@@
  #include <linux/slab.h>
  #include <linux/percpu.h>
  #include <linux/acpi.h>
++<<<<<<< HEAD
++=======
+ #include <linux/of.h>
+ #include <linux/cpufeature.h>
+ #include <linux/tick.h>
++>>>>>>> 6570a9a1ce3a (show nohz_full cpus in sysfs)
  
  #include "base.h"
  
@@@ -243,6 -266,30 +249,33 @@@ static ssize_t print_cpus_offline(struc
  }
  static DEVICE_ATTR(offline, 0444, print_cpus_offline, NULL);
  
++<<<<<<< HEAD
++=======
+ static ssize_t print_cpus_isolated(struct device *dev,
+ 				  struct device_attribute *attr, char *buf)
+ {
+ 	int n = 0, len = PAGE_SIZE-2;
+ 
+ 	n = scnprintf(buf, len, "%*pbl\n", cpumask_pr_args(cpu_isolated_map));
+ 
+ 	return n;
+ }
+ static DEVICE_ATTR(isolated, 0444, print_cpus_isolated, NULL);
+ 
+ #ifdef CONFIG_NO_HZ_FULL
+ static ssize_t print_cpus_nohz_full(struct device *dev,
+ 				  struct device_attribute *attr, char *buf)
+ {
+ 	int n = 0, len = PAGE_SIZE-2;
+ 
+ 	n = scnprintf(buf, len, "%*pbl\n", cpumask_pr_args(tick_nohz_full_mask));
+ 
+ 	return n;
+ }
+ static DEVICE_ATTR(nohz_full, 0444, print_cpus_nohz_full, NULL);
+ #endif
+ 
++>>>>>>> 6570a9a1ce3a (show nohz_full cpus in sysfs)
  static void cpu_device_release(struct device *dev)
  {
  	/*
@@@ -323,7 -456,11 +356,15 @@@ static struct attribute *cpu_root_attrs
  	&cpu_attrs[2].attr.attr,
  	&dev_attr_kernel_max.attr,
  	&dev_attr_offline.attr,
++<<<<<<< HEAD
 +#ifdef CONFIG_ARCH_HAS_CPU_AUTOPROBE
++=======
+ 	&dev_attr_isolated.attr,
+ #ifdef CONFIG_NO_HZ_FULL
+ 	&dev_attr_nohz_full.attr,
+ #endif
+ #ifdef CONFIG_GENERIC_CPU_AUTOPROBE
++>>>>>>> 6570a9a1ce3a (show nohz_full cpus in sysfs)
  	&dev_attr_modalias.attr,
  #endif
  	NULL
* Unmerged path drivers/base/cpu.c
