md/raid5: call break_stripe_batch_list from handle_stripe_clean_event

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] raid5: call break_stripe_batch_list from handle_stripe_clean_event (Jes Sorensen) [1150149 1173510 1194720]
Rebuild_FUZZ: 97.78%
commit-author NeilBrown <neilb@suse.de>
commit 787b76fa37159050f6d26aebfa6210009baed93b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/787b76fa.failed

Now that the code in break_stripe_batch_list() is nearly identical
to the end of handle_stripe_clean_event, replace the later
with a function call.

The only remaining difference of any interest is the masking that is
applieds to dev[i].flags copied from head_sh.
R5_WriteError certainly isn't wanted as it is set per-stripe, not
per-patch.  R5_Overlap isn't wanted as it is explicitly handled.

	Signed-off-by: NeilBrown <neilb@suse.de>

(cherry picked from commit 787b76fa37159050f6d26aebfa6210009baed93b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5.c
diff --cc drivers/md/raid5.c
index 10d9c8acff76,3254504b1080..000000000000
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@@ -3296,7 -3420,8 +3296,12 @@@ static void handle_stripe_fill(struct s
  	set_bit(STRIPE_HANDLE, &sh->state);
  }
  
++<<<<<<< HEAD
 +
++=======
+ static void break_stripe_batch_list(struct stripe_head *head_sh,
+ 				    unsigned long handle_flags);
++>>>>>>> 787b76fa3715 (md/raid5: call break_stripe_batch_list from handle_stripe_clean_event)
  /* handle_stripe_clean_event
   * any written block on an uptodate or failed drive can be returned.
   * Note that if we 'wrote' to a failed drive, it will be UPTODATE, but
* Unmerged path drivers/md/raid5.c
