ACPI / LPSS: support for fractional divider clock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [acpi] lpss: support for fractional divider clock (Prarit Bhargava) [1178891]
Rebuild_FUZZ: 92.31%
commit-author Heikki Krogerus <heikki.krogerus@linux.intel.com>
commit ed3a872e2ef62bde06e2f579d8d1458766ced078
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ed3a872e.failed

This creates fractional divider type clock for the ones that
have it. It is needed by the UART driver as the clock rate must
accommodate to the requested baud rate.

	Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit ed3a872e2ef62bde06e2f579d8d1458766ced078)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpi_lpss.c
diff --cc drivers/acpi/acpi_lpss.c
index ed5dc78f528a,d1c9b04e29a3..000000000000
--- a/drivers/acpi/acpi_lpss.c
+++ b/drivers/acpi/acpi_lpss.c
@@@ -57,7 -61,9 +58,8 @@@ struct lpss_device_desc 
  	bool ltr_required;
  	unsigned int prv_offset;
  	size_t prv_size_override;
+ 	bool clk_divider;
  	bool clk_gate;
 -	bool save_ctx;
  	struct lpss_shared_clock *shared_clock;
  	void (*setup)(struct lpss_private_data *pdata);
  };
@@@ -109,29 -125,32 +120,46 @@@ static struct lpss_device_desc lpt_sdio
  	.ltr_required = true,
  };
  
++<<<<<<< HEAD
 +static struct lpss_shared_clock uart_clock = {
 +	.name = "uart_clk",
 +	.rate = 44236800,
++=======
+ static struct lpss_shared_clock pwm_clock = {
+ 	.name = "pwm_clk",
+ 	.rate = 25000000,
+ };
+ 
+ static struct lpss_device_desc byt_pwm_dev_desc = {
+ 	.clk_required = true,
+ 	.save_ctx = true,
+ 	.shared_clock = &pwm_clock,
++>>>>>>> ed3a872e2ef6 (ACPI / LPSS: support for fractional divider clock)
  };
  
  static struct lpss_device_desc byt_uart_dev_desc = {
  	.clk_required = true,
  	.prv_offset = 0x800,
+ 	.clk_divider = true,
  	.clk_gate = true,
++<<<<<<< HEAD
 +	.shared_clock = &uart_clock,
++=======
+ 	.save_ctx = true,
++>>>>>>> ed3a872e2ef6 (ACPI / LPSS: support for fractional divider clock)
  	.setup = lpss_uart_setup,
  };
  
  static struct lpss_device_desc byt_spi_dev_desc = {
  	.clk_required = true,
  	.prv_offset = 0x400,
+ 	.clk_divider = true,
  	.clk_gate = true,
++<<<<<<< HEAD
 +	.shared_clock = &spi_clock,
++=======
+ 	.save_ctx = true,
++>>>>>>> ed3a872e2ef6 (ACPI / LPSS: support for fractional divider clock)
  };
  
  static struct lpss_device_desc byt_sdio_dev_desc = {
@@@ -170,6 -191,15 +198,18 @@@ static const struct acpi_device_id acpi
  	{ "80860F41", (unsigned long)&byt_i2c_dev_desc },
  	{ "INT33B2", },
  
++<<<<<<< HEAD
++=======
+ 	{ "INT3430", (unsigned long)&lpt_dev_desc },
+ 	{ "INT3431", (unsigned long)&lpt_dev_desc },
+ 	{ "INT3432", (unsigned long)&lpt_i2c_dev_desc },
+ 	{ "INT3433", (unsigned long)&lpt_i2c_dev_desc },
+ 	{ "INT3434", (unsigned long)&lpt_uart_dev_desc },
+ 	{ "INT3435", (unsigned long)&lpt_uart_dev_desc },
+ 	{ "INT3436", (unsigned long)&lpt_sdio_dev_desc },
+ 	{ "INT3437", },
+ 
++>>>>>>> ed3a872e2ef6 (ACPI / LPSS: support for fractional divider clock)
  	{ }
  };
  
* Unmerged path drivers/acpi/acpi_lpss.c
