bonding: fix __get_first_agg RCU usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 768b954922e69a92a363bd4041cb93040ae4e9cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/768b9549.failed

Currently, the RCU read lock usage is just wrong - it gets the slave struct
under RCU and continues to use it when RCU lock is released.

However, it's still safe to do this cause we didn't need the
rcu_read_lock() initially - all of the __get_first_agg() callers are either
holding RCU read lock or the RTNL lock, so that we can't sync while in it.

Fixes: be79bd048 ("bonding: add RCU for bond_3ad_state_machine_handler()")
CC: dingtianhong@huawei.com
CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 768b954922e69a92a363bd4041cb93040ae4e9cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index dc508c87249d,b49f421346a7..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -179,12 -148,19 +180,26 @@@ static inline struct port *__get_next_p
  static inline struct aggregator *__get_first_agg(struct port *port)
  {
  	struct bonding *bond = __get_bond_by_port(port);
++<<<<<<< HEAD
++=======
+ 	struct slave *first_slave;
+ 	struct aggregator *agg;
++>>>>>>> 768b954922e6 (bonding: fix __get_first_agg RCU usage)
  
 -	/* If there's no bond for this port, or bond has no slaves */
 -	if (bond == NULL)
 +	// If there's no bond for this port, or bond has no slaves
 +	if ((bond == NULL) || (bond->slave_cnt == 0))
  		return NULL;
  
++<<<<<<< HEAD
 +	return &(SLAVE_AD_INFO(bond->first_slave).aggregator);
++=======
+ 	rcu_read_lock();
+ 	first_slave = bond_first_slave_rcu(bond);
+ 	agg = first_slave ? &(SLAVE_AD_INFO(first_slave).aggregator) : NULL;
+ 	rcu_read_unlock();
+ 
+ 	return agg;
++>>>>>>> 768b954922e6 (bonding: fix __get_first_agg RCU usage)
  }
  
  /**
* Unmerged path drivers/net/bonding/bond_3ad.c
