component: fix missed cleanup in case of devres failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Russell King <rmk+kernel@arm.linux.org.uk>
commit c334940ea26cb58f5514dcbb225a3f397b2684ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c334940e.failed

In try_to_bring_up_master(), we tear down the master's component list
for each error case, except for devres group failure.  Fix this
oversight by making the code less prone to such mistakes.

	Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
(cherry picked from commit c334940ea26cb58f5514dcbb225a3f397b2684ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/component.c
diff --cc drivers/base/component.c
index c53efe6c6d8e,d0ebd4431736..000000000000
--- a/drivers/base/component.c
+++ b/drivers/base/component.c
@@@ -113,37 -113,44 +113,62 @@@ static void master_remove_components(st
  static int try_to_bring_up_master(struct master *master,
  	struct component *component)
  {
- 	int ret = 0;
+ 	int ret;
  
- 	if (!master->bound) {
- 		/*
- 		 * Search the list of components, looking for components that
- 		 * belong to this master, and attach them to the master.
- 		 */
- 		if (master->ops->add_components(master->dev, master)) {
- 			/* Failed to find all components */
- 			master_remove_components(master);
- 			ret = 0;
- 			goto out;
- 		}
+ 	if (master->bound)
+ 		return 0;
  
++<<<<<<< HEAD
 +		if (component && component->master != master) {
 +			master_remove_components(master);
 +			ret = 0;
 +			goto out;
 +		}
 +
 +		/* Found all components */
 +		ret = master->ops->bind(master->dev);
 +		if (ret < 0) {
 +			master_remove_components(master);
 +			goto out;
 +		}
 +
 +		master->bound = true;
 +		ret = 1;
++=======
+ 	/*
+ 	 * Search the list of components, looking for components that
+ 	 * belong to this master, and attach them to the master.
+ 	 */
+ 	if (master->ops->add_components(master->dev, master)) {
+ 		/* Failed to find all components */
+ 		ret = 0;
+ 		goto out;
++>>>>>>> c334940ea26c (component: fix missed cleanup in case of devres failure)
+ 	}
+ 
+ 	if (component && component->master != master) {
+ 		ret = 0;
+ 		goto out;
  	}
+ 
+ 	if (!devres_open_group(master->dev, NULL, GFP_KERNEL)) {
+ 		ret = -ENOMEM;
+ 		goto out;
+ 	}
+ 
+ 	/* Found all components */
+ 	ret = master->ops->bind(master->dev);
+ 	if (ret < 0) {
+ 		devres_release_group(master->dev, NULL);
+ 		dev_info(master->dev, "master bind failed: %d\n", ret);
+ 		goto out;
+ 	}
+ 
+ 	master->bound = true;
+ 	return 1;
+ 
  out:
+ 	master_remove_components(master);
  
  	return ret;
  }
* Unmerged path drivers/base/component.c
