rtlwifi: Remove the clear interrupt routine from all drivers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Vincent Fann <vincent_fann@realtek.com>
commit 1277fa2ab2f9a624a4b0177119ca13b5fd65edd0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1277fa2a.failed

Several of these drivers have there TX randomly blocked for 3~5 seconds while
measuring tx throughput (iperf). The root couse happens in rtl_pci_flush().
The function uses a while-loop to wait for TX queue length to decrease to 0.
The TX queue length counts the number of packets that are queued in the driver.
The driver relys on the TX OK interrupt to return skb and reduce TX queue length.

The interrupt subroutine disables interupts, reads the interrupt registers, and
then clears the registers in the beginning of _rtl_pci_interrupt(). After all
interupts process are finished, the driver invokes enable_interrupt() to enable
interupts. This behavior is normal for an interrupt subroutine.

But enable_interrupt() invokes clear_interrupt() again. This unexpected interrupt
clearing may cleari me fresh TX OK interrupts. These missing interrupts cause TX
queue length to never reduce to 0i, which causes rtl_pci_flush() to be stuck in
unterminated while-loop.

This patch removes clear_interrupt() in enable_interrupt() to avoid this behavior.

	Signed-off-by: Vincent Fann <vincent_fann@realtek.com>
	Signed-off-by: Shao Fu <shaofu@realtek.com>
	Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
	Cc: Stable <stable@vger.kernel.org> [3.18+]
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit 1277fa2ab2f9a624a4b0177119ca13b5fd65edd0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/rtlwifi/rtl8188ee/hw.c
#	drivers/net/wireless/rtlwifi/rtl8192ee/hw.c
#	drivers/net/wireless/rtlwifi/rtl8723ae/hw.c
#	drivers/net/wireless/rtlwifi/rtl8821ae/hw.c
diff --cc drivers/net/wireless/rtlwifi/rtl8188ee/hw.c
index b14cf5a10f44,8ee83b093c0d..000000000000
--- a/drivers/net/wireless/rtlwifi/rtl8188ee/hw.c
+++ b/drivers/net/wireless/rtlwifi/rtl8188ee/hw.c
@@@ -1307,13 -1359,15 +1307,20 @@@ void rtl88ee_enable_interrupt(struct ie
  	struct rtl_priv *rtlpriv = rtl_priv(hw);
  	struct rtl_pci *rtlpci = rtl_pcidev(rtl_pcipriv(hw));
  
++<<<<<<< HEAD
 +	rtl_write_dword(rtlpriv, REG_HIMR, rtlpci->irq_mask[0] & 0xFFFFFFFF);
 +	rtl_write_dword(rtlpriv, REG_HIMRE, rtlpci->irq_mask[1] & 0xFFFFFFFF);
++=======
+ 	rtl_write_dword(rtlpriv, REG_HIMR,
+ 			rtlpci->irq_mask[0] & 0xFFFFFFFF);
+ 	rtl_write_dword(rtlpriv, REG_HIMRE,
+ 			rtlpci->irq_mask[1] & 0xFFFFFFFF);
++>>>>>>> 1277fa2ab2f9 (rtlwifi: Remove the clear interrupt routine from all drivers)
  	rtlpci->irq_enabled = true;
 -	/* there are some C2H CMDs have been sent
 -	 * before system interrupt is enabled, e.g., C2H, CPWM.
 -	 * So we need to clear all C2H events that FW has notified,
 -	 * otherwise FW won't schedule any commands anymore.
 +	/* there are some C2H CMDs have been sent before system interrupt
 +	 * is enabled, e.g., C2H, CPWM.
 +	 * So we need to clear all C2H events that FW has notified, otherwise
 +	 * FW won't schedule any commands anymore.
  	 */
  	rtl_write_byte(rtlpriv, REG_C2HEVT_CLEAR, 0);
  	/*enable system interrupt*/
diff --cc drivers/net/wireless/rtlwifi/rtl8723ae/hw.c
index 87f69166a7ed,a4b7eac6856f..000000000000
--- a/drivers/net/wireless/rtlwifi/rtl8723ae/hw.c
+++ b/drivers/net/wireless/rtlwifi/rtl8723ae/hw.c
@@@ -1181,7 -1258,7 +1181,11 @@@ void rtl8723ae_set_qos(struct ieee80211
  	}
  }
  
++<<<<<<< HEAD
 +void rtl8723ae_enable_interrupt(struct ieee80211_hw *hw)
++=======
+ void rtl8723e_enable_interrupt(struct ieee80211_hw *hw)
++>>>>>>> 1277fa2ab2f9 (rtlwifi: Remove the clear interrupt routine from all drivers)
  {
  	struct rtl_priv *rtlpriv = rtl_priv(hw);
  	struct rtl_pci *rtlpci = rtl_pcidev(rtl_pcipriv(hw));
@@@ -1195,7 -1272,6 +1199,10 @@@ void rtl8723ae_disable_interrupt(struc
  {
  	struct rtl_priv *rtlpriv = rtl_priv(hw);
  	struct rtl_pci *rtlpci = rtl_pcidev(rtl_pcipriv(hw));
++<<<<<<< HEAD
 +
++=======
++>>>>>>> 1277fa2ab2f9 (rtlwifi: Remove the clear interrupt routine from all drivers)
  	rtl_write_dword(rtlpriv, 0x3a8, IMR8190_DISABLED);
  	rtl_write_dword(rtlpriv, 0x3ac, IMR8190_DISABLED);
  	rtlpci->irq_enabled = false;
* Unmerged path drivers/net/wireless/rtlwifi/rtl8192ee/hw.c
* Unmerged path drivers/net/wireless/rtlwifi/rtl8821ae/hw.c
* Unmerged path drivers/net/wireless/rtlwifi/rtl8188ee/hw.c
* Unmerged path drivers/net/wireless/rtlwifi/rtl8192ee/hw.c
* Unmerged path drivers/net/wireless/rtlwifi/rtl8723ae/hw.c
* Unmerged path drivers/net/wireless/rtlwifi/rtl8821ae/hw.c
