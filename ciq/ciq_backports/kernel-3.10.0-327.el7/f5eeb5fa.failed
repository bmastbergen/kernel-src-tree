mac80211: fix invalid read in minstrel_sort_best_tp_rates()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Adrien Schildknecht <adrien+dev@schischi.me>
commit f5eeb5fa191fd7b634cbc4883ac58f3b2184dbc5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f5eeb5fa.failed

At the last iteration of the loop, j may equal zero and thus
tp_list[j - 1] causes an invalid read.
Change the logic of the loop so that j - 1 is always >= 0.

	Cc: stable@vger.kernel.org
	Signed-off-by: Adrien Schildknecht <adrien+dev@schischi.me>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit f5eeb5fa191fd7b634cbc4883ac58f3b2184dbc5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/rc80211_minstrel.c
diff --cc net/mac80211/rc80211_minstrel.c
index 1c1469c36dca,3ece7d1034c8..000000000000
--- a/net/mac80211/rc80211_minstrel.c
+++ b/net/mac80211/rc80211_minstrel.c
@@@ -73,10 -92,17 +73,24 @@@ rix_to_ndx(struct minstrel_sta_info *mi
  static inline void
  minstrel_sort_best_tp_rates(struct minstrel_sta_info *mi, int i, u8 *tp_list)
  {
++<<<<<<< HEAD
 +	int j = MAX_THR_RATES;
 +
 +	while (j > 0 && mi->r[i].cur_tp > mi->r[tp_list[j - 1]].cur_tp)
 +		j--;
++=======
+ 	int j;
+ 	struct minstrel_rate_stats *tmp_mrs;
+ 	struct minstrel_rate_stats *cur_mrs = &mi->r[i].stats;
+ 
+ 	for (j = MAX_THR_RATES; j > 0; --j) {
+ 		tmp_mrs = &mi->r[tp_list[j - 1]].stats;
+ 		if (minstrel_get_tp_avg(&mi->r[i], cur_mrs->prob_ewma) <=
+ 		    minstrel_get_tp_avg(&mi->r[tp_list[j - 1]], tmp_mrs->prob_ewma))
+ 			break;
+ 	}
+ 
++>>>>>>> f5eeb5fa191f (mac80211: fix invalid read in minstrel_sort_best_tp_rates())
  	if (j < MAX_THR_RATES - 1)
  		memmove(&tp_list[j + 1], &tp_list[j], MAX_THR_RATES - (j + 1));
  	if (j < MAX_THR_RATES)
* Unmerged path net/mac80211/rc80211_minstrel.c
