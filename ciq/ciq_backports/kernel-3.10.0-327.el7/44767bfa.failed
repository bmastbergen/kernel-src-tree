x86, irq: Enhance mp_register_ioapic() to support irqdomain

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] irq: Enhance mp_register_ioapic() to support irqdomain (Steve Best) [1231358]
Rebuild_FUZZ: 95.58%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit 44767bfaaed782d6d635ecbb13f3980041e6f33e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/44767bfa.failed

Enhance function mp_register_ioapic() to support irqdomain.
When registering IOAPIC, caller may provide callbacks and parameters
for creating irqdomain. The IOAPIC core will create irqdomain later
if caller has passed in corresponding parameters.

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: Joerg Roedel <joro@8bytes.org>
	Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: sfi-devel@simplefirmware.org
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Grant Likely <grant.likely@linaro.org>
	Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
	Cc: Bjorn Helgaas <bhelgaas@google.com>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Yinghai Lu <yinghai@kernel.org>
	Cc: Len Brown <len.brown@intel.com>
	Cc: Pavel Machek <pavel@ucw.cz>
	Cc: Rob Herring <rob.herring@calxeda.com>
	Cc: Michal Simek <monstr@monstr.eu>
	Cc: Tony Lindgren <tony@atomide.com>
Link: http://lkml.kernel.org/r/1402302011-23642-25-git-send-email-jiang.liu@linux.intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit 44767bfaaed782d6d635ecbb13f3980041e6f33e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/io_apic.h
#	arch/x86/kernel/apic/io_apic.c
diff --cc arch/x86/include/asm/io_apic.h
index 7eb3755fee9a,3e4bea3a52b1..000000000000
--- a/arch/x86/include/asm/io_apic.h
+++ b/arch/x86/include/asm/io_apic.h
@@@ -177,7 -189,9 +177,13 @@@ extern u32 gsi_top
  extern int mp_find_ioapic(u32 gsi);
  extern int mp_find_ioapic_pin(int ioapic, u32 gsi);
  extern u32 mp_pin_to_gsi(int ioapic, int pin);
++<<<<<<< HEAD
 +extern void __init mp_register_ioapic(int id, u32 address, u32 gsi_base);
++=======
+ extern int mp_map_gsi_to_irq(u32 gsi, unsigned int flags);
+ extern void __init mp_register_ioapic(int id, u32 address, u32 gsi_base,
+ 				      struct ioapic_domain_cfg *cfg);
++>>>>>>> 44767bfaaed7 (x86, irq: Enhance mp_register_ioapic() to support irqdomain)
  extern void __init pre_init_apic_IRQ0(void);
  
  extern void mp_save_irq(struct mpc_intsrc *m);
diff --cc arch/x86/kernel/apic/io_apic.c
index 07a33b81b46c,563f4504f54d..000000000000
--- a/arch/x86/kernel/apic/io_apic.c
+++ b/arch/x86/kernel/apic/io_apic.c
@@@ -86,6 -84,8 +86,11 @@@ int sis_apic_bug = -1
  
  static DEFINE_RAW_SPINLOCK(ioapic_lock);
  static DEFINE_RAW_SPINLOCK(vector_lock);
++<<<<<<< HEAD
++=======
+ static DEFINE_MUTEX(ioapic_mutex);
+ static unsigned int ioapic_dynirq_base;
++>>>>>>> 44767bfaaed7 (x86, irq: Enhance mp_register_ioapic() to support irqdomain)
  
  static struct ioapic {
  	/*
@@@ -2860,9 -2954,12 +2892,12 @@@ void __init setup_IO_APIC(void
  	/*
  	 * calling enable_IO_APIC() is moved to setup_local_APIC for BP
  	 */
 -	io_apic_irqs = nr_legacy_irqs() ? ~PIC_IRQS : ~0UL;
 +	io_apic_irqs = legacy_pic->nr_legacy_irqs ? ~PIC_IRQS : ~0UL;
  
  	apic_printk(APIC_VERBOSE, "ENABLING IO-APIC IRQs\n");
+ 	for_each_ioapic(ioapic)
+ 		BUG_ON(mp_irqdomain_create(ioapic));
+ 
  	/*
           * Set up IO-APIC IRQ routing.
           */
@@@ -3423,20 -3464,14 +3458,27 @@@ static int __init io_apic_get_redir_ent
  	return reg_01.bits.entries + 1;
  }
  
 -unsigned int arch_dynirq_lower_bound(unsigned int from)
 +static void __init probe_nr_irqs_gsi(void)
  {
 -	unsigned int min = gsi_top + nr_legacy_irqs();
 +	int nr;
 +
++<<<<<<< HEAD
 +	nr = gsi_top + NR_IRQS_LEGACY;
 +	if (nr > nr_irqs_gsi)
 +		nr_irqs_gsi = nr;
 +
 +	printk(KERN_DEBUG "nr_irqs_gsi: %d\n", nr_irqs_gsi);
 +}
  
 +int get_nr_irqs_gsi(void)
 +{
 +	return nr_irqs_gsi;
++=======
+ 	if (ioapic_dynirq_base)
+ 		return ioapic_dynirq_base;
+ 
+ 	return from < min ? min : from;
++>>>>>>> 44767bfaaed7 (x86, irq: Enhance mp_register_ioapic() to support irqdomain)
  }
  
  int __init arch_probe_nr_irqs(void)
* Unmerged path arch/x86/include/asm/io_apic.h
diff --git a/arch/x86/kernel/acpi/boot.c b/arch/x86/kernel/acpi/boot.c
index e90087442d73..073cd66da66f 100644
--- a/arch/x86/kernel/acpi/boot.c
+++ b/arch/x86/kernel/acpi/boot.c
@@ -348,7 +348,7 @@ acpi_parse_ioapic(struct acpi_subtable_header * header, const unsigned long end)
 	acpi_table_print_madt_entry(header);
 
 	mp_register_ioapic(ioapic->id,
-			   ioapic->address, ioapic->global_irq_base);
+			   ioapic->address, ioapic->global_irq_base, NULL);
 
 	return 0;
 }
* Unmerged path arch/x86/kernel/apic/io_apic.c
diff --git a/arch/x86/kernel/devicetree.c b/arch/x86/kernel/devicetree.c
index 442dd94a94f4..a57b11dc9167 100644
--- a/arch/x86/kernel/devicetree.c
+++ b/arch/x86/kernel/devicetree.c
@@ -191,7 +191,7 @@ static void __init dtb_add_ioapic(struct device_node *dn)
 				dn->full_name);
 		return;
 	}
-	mp_register_ioapic(++ioapic_id, r.start, gsi_top);
+	mp_register_ioapic(++ioapic_id, r.start, gsi_top, NULL);
 }
 
 static void __init dtb_ioapic_setup(void)
diff --git a/arch/x86/kernel/mpparse.c b/arch/x86/kernel/mpparse.c
index b10e1132f316..ea8595e4cbd5 100644
--- a/arch/x86/kernel/mpparse.c
+++ b/arch/x86/kernel/mpparse.c
@@ -115,7 +115,7 @@ static void __init MP_bus_info(struct mpc_bus *m)
 static void __init MP_ioapic_info(struct mpc_ioapic *m)
 {
 	if (m->flags & MPC_APIC_USABLE)
-		mp_register_ioapic(m->apicid, m->apicaddr, gsi_top);
+		mp_register_ioapic(m->apicid, m->apicaddr, gsi_top, NULL);
 }
 
 static void __init print_mp_irq_info(struct mpc_intsrc *mp_irq)
diff --git a/arch/x86/platform/sfi/sfi.c b/arch/x86/platform/sfi/sfi.c
index bcd1a703e3e6..8f2f789c6f04 100644
--- a/arch/x86/platform/sfi/sfi.c
+++ b/arch/x86/platform/sfi/sfi.c
@@ -82,7 +82,7 @@ static int __init sfi_parse_ioapic(struct sfi_table_header *table)
 	pentry = (struct sfi_apic_table_entry *)sb->pentry;
 
 	for (i = 0; i < num; i++) {
-		mp_register_ioapic(i, pentry->phys_addr, gsi_top);
+		mp_register_ioapic(i, pentry->phys_addr, gsi_top, NULL);
 		pentry++;
 	}
 
