mm: gup: kvm use get_user_pages_unlocked

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [mm] gup: kvm use get_user_pages_unlocked (Andrea Arcangeli) [965657]
Rebuild_FUZZ: 94.74%
commit-author Andrea Arcangeli <aarcange@redhat.com>
commit 0664e57ff0c68cbca012a45a38288fa277eb6795
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0664e57f.failed

Use the more generic get_user_pages_unlocked which has the additional
benefit of passing FAULT_FLAG_ALLOW_RETRY at the very first page fault
(which allows the first page fault in an unmapped area to be always able
to block indefinitely by being allowed to release the mmap_sem).

	Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
	Reviewed-by: Andres Lagar-Cavilla <andreslc@google.com>
	Reviewed-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Peter Feiner <pfeiner@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0664e57ff0c68cbca012a45a38288fa277eb6795)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/async_pf.c
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/async_pf.c
index d60c80bcbcd6,44660aee335f..000000000000
--- a/virt/kvm/async_pf.c
+++ b/virt/kvm/async_pf.c
@@@ -65,9 -80,8 +65,14 @@@ static void async_pf_execute(struct wor
  
  	might_sleep();
  
++<<<<<<< HEAD
 +	down_read(&mm->mmap_sem);
 +	get_user_pages(NULL, mm, addr, 1, 1, 0, NULL, NULL);
 +	up_read(&mm->mmap_sem);
++=======
+ 	get_user_pages_unlocked(NULL, mm, addr, 1, 1, 0, NULL);
+ 	kvm_async_page_present_sync(vcpu, apf);
++>>>>>>> 0664e57ff0c6 (mm: gup: kvm use get_user_pages_unlocked)
  
  	spin_lock(&vcpu->async_pf.lock);
  	list_add_tail(&apf->link, &vcpu->async_pf.done);
diff --cc virt/kvm/kvm_main.c
index 9c5b960f56f6,458b9b14b15c..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -1261,8 -1191,9 +1261,14 @@@ static int hva_to_pfn_slow(unsigned lon
  					      addr, write_fault, page);
  		up_read(&current->mm->mmap_sem);
  	} else
++<<<<<<< HEAD
 +		npages = get_user_pages_fast(addr, 1, write_fault,
 +					     page);
++=======
+ 		npages = __get_user_pages_unlocked(current, current->mm, addr, 1,
+ 						   write_fault, 0, page,
+ 						   FOLL_TOUCH|FOLL_HWPOISON);
++>>>>>>> 0664e57ff0c6 (mm: gup: kvm use get_user_pages_unlocked)
  	if (npages != 1)
  		return npages;
  
* Unmerged path virt/kvm/async_pf.c
* Unmerged path virt/kvm/kvm_main.c
