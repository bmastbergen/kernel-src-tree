ixgbe: Set lan_id before using I2C

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Don Skidmore <donald.c.skidmore@intel.com>
commit 7e49d6165e4a6c5df7f32c16976b33bfd830b92c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7e49d616.failed

We need to call the set_lan_id before accessing I2C and this wasn't
being done so this patch corrects that.  Likewise we do the same for
QSFP just to be consistent.

In the X550 case this is even more important as with out it the mux
is not controlled properly.

	Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com>
	Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 7e49d6165e4a6c5df7f32c16976b33bfd830b92c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_x550.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_x550.c
index b0f0c518df36,d65327ec7350..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_x550.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_x550.c
@@@ -1094,11 -1454,26 +1094,17 @@@ static s32 ixgbe_setup_internal_phy_x55
  static s32 ixgbe_init_phy_ops_X550em(struct ixgbe_hw *hw)
  {
  	struct ixgbe_phy_info *phy = &hw->phy;
 -	ixgbe_link_speed speed;
  	s32 ret_val;
  
++<<<<<<< HEAD
 +	if (hw->device_id == IXGBE_DEV_ID_X550EM_X_SFP) {
++=======
+ 	hw->mac.ops.set_lan_id(hw);
+ 
+ 	if (hw->mac.ops.get_media_type(hw) == ixgbe_media_type_fiber) {
++>>>>>>> 7e49d6165e4a (ixgbe: Set lan_id before using I2C)
  		phy->phy_semaphore_mask = IXGBE_GSSR_SHARED_I2C_SM;
  		ixgbe_setup_mux_ctl(hw);
 -
 -		/* Save NW management interface connected on board. This is used
 -		 * to determine internal PHY mode.
 -		 */
 -		phy->nw_mng_if_sel = IXGBE_READ_REG(hw, IXGBE_NW_MNG_IF_SEL);
 -
 -		/* If internal PHY mode is KR, then initialize KR link */
 -		if (phy->nw_mng_if_sel & IXGBE_NW_MNG_IF_SEL_INT_PHY_MODE) {
 -			speed = IXGBE_LINK_SPEED_10GB_FULL |
 -				IXGBE_LINK_SPEED_1GB_FULL;
 -			ret_val = ixgbe_setup_kr_speed_x550em(hw, speed);
 -		}
  	}
  
  	/* Identify the PHY or SFP module */
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_phy.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_phy.c
index 8d2b0f490a0c..4e53f678f522 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_phy.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_phy.c
@@ -1426,6 +1426,9 @@ s32 ixgbe_identify_qsfp_module_generic(struct ixgbe_hw *hw)
 		goto out;
 	}
 
+	/* LAN ID is needed for sfp_type determination */
+	hw->mac.ops.set_lan_id(hw);
+
 	status = hw->phy.ops.read_i2c_eeprom(hw, IXGBE_SFF_IDENTIFIER,
 					     &identifier);
 
@@ -1440,9 +1443,6 @@ s32 ixgbe_identify_qsfp_module_generic(struct ixgbe_hw *hw)
 
 	hw->phy.id = identifier;
 
-	/* LAN ID is needed for sfp_type determination */
-	hw->mac.ops.set_lan_id(hw);
-
 	status = hw->phy.ops.read_i2c_eeprom(hw, IXGBE_SFF_QSFP_10GBE_COMP,
 					     &comp_codes_10g);
 
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_x550.c
