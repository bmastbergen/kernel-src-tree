bonding: slight optimization for bond_3ad_xmit_xor()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author dingtianhong <dingtianhong@huawei.com>
commit a742e1f545c38efb769bd02b91f11b1c9acb6e56
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a742e1f5.failed

The bond_dev_queue_xmit() will always return 0, and as a fast path,
it is inappropriate to check the res value when xmit every package,
so remove the res check and avoid once judgement for xmit.

	Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a742e1f545c38efb769bd02b91f11b1c9acb6e56)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index 01fb8a7c6a05,8d7483d5d3e6..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -2441,14 -2394,14 +2441,17 @@@ int bond_3ad_get_active_agg_info(struc
  
  int bond_3ad_xmit_xor(struct sk_buff *skb, struct net_device *dev)
  {
 +	struct slave *slave, *start_at;
  	struct bonding *bond = netdev_priv(dev);
 -	struct slave *slave, *first_ok_slave;
 -	struct aggregator *agg;
 -	struct ad_info ad_info;
 -	struct list_head *iter;
 -	int slaves_in_agg;
  	int slave_agg_no;
++<<<<<<< HEAD
 +	int slaves_in_agg;
++=======
++>>>>>>> a742e1f545c3 (bonding: slight optimization for bond_3ad_xmit_xor())
  	int agg_id;
 +	int i;
 +	struct ad_info ad_info;
 +	int res = 1;
  
  	if (__bond_3ad_get_active_agg_info(bond, &ad_info)) {
  		pr_debug("%s: Error: __bond_3ad_get_active_agg_info failed\n",
@@@ -2460,51 -2413,50 +2463,68 @@@
  	agg_id = ad_info.aggregator_id;
  
  	if (slaves_in_agg == 0) {
 +		/*the aggregator is empty*/
  		pr_debug("%s: Error: active aggregator is empty\n", dev->name);
- 		goto out;
+ 		goto err_free;
  	}
  
 -	slave_agg_no = bond_xmit_hash(bond, skb, slaves_in_agg);
 -	first_ok_slave = NULL;
 +	slave_agg_no = bond->xmit_hash_policy(skb, slaves_in_agg);
  
 -	bond_for_each_slave_rcu(bond, slave, iter) {
 -		agg = SLAVE_AD_INFO(slave).port.aggregator;
 -		if (!agg || agg->aggregator_identifier != agg_id)
 -			continue;
 +	bond_for_each_slave(bond, slave, i) {
 +		struct aggregator *agg = SLAVE_AD_INFO(slave).port.aggregator;
  
 -		if (slave_agg_no >= 0) {
 -			if (!first_ok_slave && SLAVE_IS_OK(slave))
 -				first_ok_slave = slave;
 +		if (agg && (agg->aggregator_identifier == agg_id)) {
  			slave_agg_no--;
++<<<<<<< HEAD
 +			if (slave_agg_no < 0)
 +				break;
++=======
+ 			continue;
+ 		}
+ 
+ 		if (SLAVE_IS_OK(slave)) {
+ 			bond_dev_queue_xmit(bond, skb, slave->dev);
+ 			goto out;
++>>>>>>> a742e1f545c3 (bonding: slight optimization for bond_3ad_xmit_xor())
  		}
  	}
  
  	if (slave_agg_no >= 0) {
  		pr_err("%s: Error: Couldn't find a slave to tx on for aggregator ID %d\n",
  		       dev->name, agg_id);
- 		goto out;
+ 		goto err_free;
  	}
  
++<<<<<<< HEAD
 +	start_at = slave;
 +
 +	bond_for_each_slave_from(bond, slave, i, start_at) {
 +		int slave_agg_id = 0;
 +		struct aggregator *agg = SLAVE_AD_INFO(slave).port.aggregator;
 +
 +		if (agg)
 +			slave_agg_id = agg->aggregator_identifier;
 +
 +		if (SLAVE_IS_OK(slave) && agg && (slave_agg_id == agg_id)) {
 +			res = bond_dev_queue_xmit(bond, skb, slave->dev);
 +			break;
 +		}
 +	}
++=======
+ 	/* we couldn't find any suitable slave after the agg_no, so use the
+ 	 * first suitable found, if found. */
+ 	if (first_ok_slave)
+ 		bond_dev_queue_xmit(bond, skb, first_ok_slave->dev);
+ 	else
+ 		goto err_free;
++>>>>>>> a742e1f545c3 (bonding: slight optimization for bond_3ad_xmit_xor())
  
  out:
- 	if (res) {
- 		/* no suitable interface, frame not sent */
- 		kfree_skb(skb);
- 	}
- 
  	return NETDEV_TX_OK;
+ err_free:
+ 	/* no suitable interface, frame not sent */
+ 	kfree_skb(skb);
+ 	goto out;
  }
  
  int bond_3ad_lacpdu_recv(const struct sk_buff *skb, struct bonding *bond,
* Unmerged path drivers/net/bonding/bond_3ad.c
