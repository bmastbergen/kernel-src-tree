net/mlx4_core: Adjust counter grant policy in the resource tracker

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] mlx4_core: Adjust counter grant policy in the resource tracker (Amir Vadai) [1164527 1164530 1164531 1164536 1164537]
Rebuild_FUZZ: 96.88%
commit-author Eran Ben Elisha <eranbe@mellanox.com>
commit 9de92c60beaac0a05d984ea72fc474196e1dd5a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9de92c60.failed

Each physical function has a guarantee of two counters per port, one
for a default counter and one for the IB driver.

Each virtual function has a guarantee of one counter per port.
All other counters are free and can be obtained on demand.

This is a preparation step for supporting a get_vf_stats ndo call,
so we can promise a counter for every VF in order to collect their
statistics from the PF context.

	Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
	Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9de92c60beaac0a05d984ea72fc474196e1dd5a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
diff --cc drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
index c02f79cf6678,802eb2a63db9..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
+++ b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
@@@ -481,14 -498,22 +493,23 @@@ int mlx4_init_resource_tracker(struct m
  	for (i = 0; i < MLX4_NUM_OF_RESOURCE_TYPE; i++) {
  		struct resource_allocator *res_alloc =
  			&priv->mfunc.master.res_tracker.res_alloc[i];
 -		res_alloc->quota = kmalloc((dev->persist->num_vfs + 1) *
 -					   sizeof(int), GFP_KERNEL);
 -		res_alloc->guaranteed = kmalloc((dev->persist->num_vfs + 1) *
 -						sizeof(int), GFP_KERNEL);
 +		res_alloc->quota = kmalloc((dev->num_vfs + 1) * sizeof(int), GFP_KERNEL);
 +		res_alloc->guaranteed = kmalloc((dev->num_vfs + 1) * sizeof(int), GFP_KERNEL);
  		if (i == RES_MAC || i == RES_VLAN)
  			res_alloc->allocated = kzalloc(MLX4_MAX_PORTS *
 -						       (dev->persist->num_vfs
 -						       + 1) *
 -						       sizeof(int), GFP_KERNEL);
 +						       (dev->num_vfs + 1) * sizeof(int),
 +							GFP_KERNEL);
  		else
++<<<<<<< HEAD
 +			res_alloc->allocated = kzalloc((dev->num_vfs + 1) * sizeof(int), GFP_KERNEL);
++=======
+ 			res_alloc->allocated = kzalloc((dev->persist->
+ 							num_vfs + 1) *
+ 						       sizeof(int), GFP_KERNEL);
+ 		/* Reduce the sink counter */
+ 		if (i == RES_COUNTER)
+ 			res_alloc->res_free = dev->caps.max_counters - 1;
++>>>>>>> 9de92c60beaa (net/mlx4_core: Adjust counter grant policy in the resource tracker)
  
  		if (!res_alloc->quota || !res_alloc->guaranteed ||
  		    !res_alloc->allocated)
* Unmerged path drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
