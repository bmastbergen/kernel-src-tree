crypto: qat - don't need qat_auth_state struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [crypto] qat - don't need qat_auth_state struct (Nikolay Aleksandrov) [1173791]
Rebuild_FUZZ: 90.48%
commit-author Tadeusz Struk <tadeusz.struk@intel.com>
commit b2c3f7cdad7673e00a449b879fb2b20d5c164797
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b2c3f7cd.failed

We don't need the qat_auth_state structure anymore.

	Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit b2c3f7cdad7673e00a449b879fb2b20d5c164797)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/qat_algs.c
diff --cc drivers/crypto/qat/qat_common/qat_algs.c
index 5d93760fdd84,1dc5b0a17cf7..000000000000
--- a/drivers/crypto/qat/qat_common/qat_algs.c
+++ b/drivers/crypto/qat/qat_common/qat_algs.c
@@@ -102,25 -102,31 +102,29 @@@ struct qat_alg_cd 
  	};
  } __aligned(64);
  
++<<<<<<< HEAD
 +#define MAX_AUTH_STATE_SIZE sizeof(struct icp_qat_hw_auth_algo_blk)
 +
 +struct qat_auth_state {
 +	uint8_t data[MAX_AUTH_STATE_SIZE + 64];
 +} __aligned(64);
 +
 +struct qat_alg_session_ctx {
++=======
+ struct qat_alg_aead_ctx {
++>>>>>>> b2c3f7cdad76 (crypto: qat - don't need qat_auth_state struct)
  	struct qat_alg_cd *enc_cd;
 -	struct qat_alg_cd *dec_cd;
  	dma_addr_t enc_cd_paddr;
 +	struct qat_alg_cd *dec_cd;
  	dma_addr_t dec_cd_paddr;
 -	struct icp_qat_fw_la_bulk_req enc_fw_req;
 -	struct icp_qat_fw_la_bulk_req dec_fw_req;
 -	struct crypto_shash *hash_tfm;
 -	enum icp_qat_hw_auth_algo qat_hash_alg;
 +	struct icp_qat_fw_la_bulk_req enc_fw_req_tmpl;
 +	struct icp_qat_fw_la_bulk_req dec_fw_req_tmpl;
  	struct qat_crypto_instance *inst;
  	struct crypto_tfm *tfm;
 +	struct crypto_shash *hash_tfm;
 +	enum icp_qat_hw_auth_algo qat_hash_alg;
  	uint8_t salt[AES_BLOCK_SIZE];
 -	spinlock_t lock;	/* protects qat_alg_aead_ctx struct */
 -};
 -
 -struct qat_alg_ablkcipher_ctx {
 -	struct icp_qat_hw_cipher_algo_blk *enc_cd;
 -	struct icp_qat_hw_cipher_algo_blk *dec_cd;
 -	dma_addr_t enc_cd_paddr;
 -	dma_addr_t dec_cd_paddr;
 -	struct icp_qat_fw_la_bulk_req enc_fw_req;
 -	struct icp_qat_fw_la_bulk_req dec_fw_req;
 -	struct qat_crypto_instance *inst;
 -	struct crypto_tfm *tfm;
 -	spinlock_t lock;	/* protects qat_alg_ablkcipher_ctx struct */
 +	spinlock_t lock;	/* protects qat_alg_session_ctx struct */
  };
  
  static int get_current_node(void)
* Unmerged path drivers/crypto/qat/qat_common/qat_algs.c
