PCI: Handle read-only BARs on AMD CS553x devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [pci] Handle read-only BARs on AMD CS553x devices (Myron Stowe) [1198314]
Rebuild_FUZZ: 94.51%
commit-author Myron Stowe <myron.stowe@redhat.com>
commit 06cf35f903aa6da0cc8d9f81e9bcd1f7e1b534bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/06cf35f9.failed

Some AMD CS553x devices have read-only BARs because of a firmware or
hardware defect.  There's a workaround in quirk_cs5536_vsa(), but it no
longer works after 36e8164882ca ("PCI: Restore detection of read-only
BARs").  Prior to 36e8164882ca, we filled in res->start; afterwards we
leave it zeroed out.  The quirk only updated the size, so the driver tried
to use a region starting at zero, which didn't work.

Expand quirk_cs5536_vsa() to read the base addresses from the BARs and
hard-code the sizes.

On Nix's system BAR 2's read-only value is 0x6200.  Prior to 36e8164882ca,
we interpret that as a 512-byte BAR based on the lowest-order bit set.  Per
datasheet sec 5.6.1, that BAR (MFGPT) requires only 64 bytes; use that to
avoid clearing any address bits if a platform uses only 64-byte alignment.

[bhelgaas: changelog, reduce BAR 2 size to 64]
Fixes: 36e8164882ca ("PCI: Restore detection of read-only BARs")
Link: https://bugzilla.kernel.org/show_bug.cgi?id=85991#c4
Link: http://support.amd.com/TechDocs/31506_cs5535_databook.pdf
Link: http://support.amd.com/TechDocs/33238G_cs5536_db.pdf
Reported-and-tested-by: Nix <nix@esperi.org.uk>
	Signed-off-by: Myron Stowe <myron.stowe@redhat.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
CC: stable@vger.kernel.org	# v.2.6.27+
(cherry picked from commit 06cf35f903aa6da0cc8d9f81e9bcd1f7e1b534bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/quirks.c
diff --cc drivers/pci/quirks.c
index a5082debf2e0,903d5078b5ed..000000000000
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@@ -316,11 -362,14 +346,21 @@@ static void quirk_io(struct pci_dev *de
   */
  static void quirk_cs5536_vsa(struct pci_dev *dev)
  {
+ 	static char *name = "CS5536 ISA bridge";
+ 
  	if (pci_resource_len(dev, 0) != 8) {
++<<<<<<< HEAD
 +		struct resource *res = &dev->resource[0];
 +		res->end = res->start + 8 - 1;
 +		dev_info(&dev->dev, "CS5536 ISA bridge bug detected "
 +				"(incorrect header); workaround applied.\n");
++=======
+ 		quirk_io(dev, 0,   8, name);	/* SMB */
+ 		quirk_io(dev, 1, 256, name);	/* GPIO */
+ 		quirk_io(dev, 2,  64, name);	/* MFGPT */
+ 		dev_info(&dev->dev, "%s bug detected (incorrect header); workaround applied\n",
+ 			 name);
++>>>>>>> 06cf35f903aa (PCI: Handle read-only BARs on AMD CS553x devices)
  	}
  }
  DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_CS5536_ISA, quirk_cs5536_vsa);
* Unmerged path drivers/pci/quirks.c
