NVMe: Fix FS mount issue (hot-remove followed by hot-add)

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Indraneel M <indraneel.m@samsung.com>
commit 285dffc9101244ac65c29672a1fb3fe614b52238
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/285dffc9.failed

After Hot-remove of a device with a mounted partition,
when the device is hot-added again, the new node reappears
as nvme0n1. Mounting this new node fails with the error:

mount: mount /dev/nvme0n1p1 on /mnt failed: File exists.

The old nodes's FS entries still exist and the kernel can't re-create
procfs and sysfs entries for the new node with the same name.
The patch fixes this issue.

	Acked-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Indraneel M <indraneel.m@samsung.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 285dffc9101244ac65c29672a1fb3fe614b52238)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index 48e1152870d9,95f2310255ce..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2811,7 -2493,8 +2811,12 @@@ static void nvme_free_dev(struct kref *
  
  	pci_dev_put(dev->pci_dev);
  	nvme_free_namespaces(dev);
++<<<<<<< HEAD
 +	free_percpu(dev->io_queue);
++=======
+ 	nvme_release_instance(dev);
+ 	blk_mq_free_tag_set(&dev->tagset);
++>>>>>>> 285dffc91012 (NVMe: Fix FS mount issue (hot-remove followed by hot-add))
  	kfree(dev->queues);
  	kfree(dev->entry);
  	kfree(dev);
@@@ -3059,12 -2775,12 +3064,16 @@@ static void nvme_remove(struct pci_dev 
  
  	pci_set_drvdata(pdev, NULL);
  	flush_work(&dev->reset_work);
 +	flush_work(&dev->cpu_work);
  	misc_deregister(&dev->miscdev);
 -	nvme_dev_remove(dev);
  	nvme_dev_shutdown(dev);
 -	nvme_dev_remove_admin(dev);
  	nvme_free_queues(dev, 0);
++<<<<<<< HEAD
 +	nvme_dev_remove(dev);
 +	nvme_release_instance(dev);
++=======
+ 	nvme_free_admin_tags(dev);
++>>>>>>> 285dffc91012 (NVMe: Fix FS mount issue (hot-remove followed by hot-add))
  	nvme_release_prp_pools(dev);
  	kref_put(&dev->kref, nvme_free_dev);
  }
* Unmerged path drivers/block/nvme-core.c
