hv: use correct order when freeing monitor_pages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] use correct order when freeing monitor_pages (Vitaly Kuznetsov) [1201889]
Rebuild_FUZZ: 95.65%
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit a100d88df1e924e5c9678fabf054d1bae7ab74fb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a100d88d.failed

We try to free two pages when only one has been allocated.
Cleanup path is unlikely, so I haven't found any trace that would fit,
but I hope that free_pages_prepare() does catch it.

	Cc: stable@vger.kernel.org
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
	Reviewed-by: Amos Kong <akong@redhat.com>
	Acked-by: Jason Wang <jasowang@redhat.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a100d88df1e924e5c9678fabf054d1bae7ab74fb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/connection.c
diff --cc drivers/hv/connection.c
index cad8295c2bdf,e84f4526eb36..000000000000
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@@ -225,10 -224,10 +225,17 @@@ cleanup
  		vmbus_connection.int_page = NULL;
  	}
  
++<<<<<<< HEAD
 +	if (vmbus_connection.monitor_pages) {
 +		free_pages((unsigned long)vmbus_connection.monitor_pages, 1);
 +		vmbus_connection.monitor_pages = NULL;
 +	}
++=======
+ 	free_pages((unsigned long)vmbus_connection.monitor_pages[0], 0);
+ 	free_pages((unsigned long)vmbus_connection.monitor_pages[1], 0);
+ 	vmbus_connection.monitor_pages[0] = NULL;
+ 	vmbus_connection.monitor_pages[1] = NULL;
++>>>>>>> a100d88df1e9 (hv: use correct order when freeing monitor_pages)
  
  	kfree(msginfo);
  
* Unmerged path drivers/hv/connection.c
