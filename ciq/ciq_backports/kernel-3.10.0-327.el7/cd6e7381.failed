qlcnic: Update Link speed and port type info for 83xx adapter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jitendra Kalsaria <jitendra.kalsaria@qlogic.com>
commit cd6e7381fbd925c85de1c208f2972e87a7c9d77b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/cd6e7381.failed

o Update the port type information
o Advertise correct link modes and autonegotiation
o Add support to change link speed

	Signed-off-by: Jitendra Kalsaria <jitendra.kalsaria@qlogic.com>
	Signed-off-by: Shahed Shaikh <shahed.shaikh@qlogic.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cd6e7381fbd925c85de1c208f2972e87a7c9d77b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
index 9a74de43b9e4,528c651138b4..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
@@@ -3272,35 -3347,60 +3347,66 @@@ int qlcnic_83xx_get_settings(struct qlc
  int qlcnic_83xx_set_settings(struct qlcnic_adapter *adapter,
  			     struct ethtool_cmd *ecmd)
  {
- 	int status = 0;
+ 	struct qlcnic_hardware_context *ahw = adapter->ahw;
  	u32 config = adapter->ahw->port_config;
+ 	int status = 0;
  
- 	if (ecmd->autoneg)
- 		adapter->ahw->port_config |= BIT_15;
- 
- 	switch (ethtool_cmd_speed(ecmd)) {
- 	case SPEED_10:
- 		adapter->ahw->port_config |= BIT_8;
- 		break;
- 	case SPEED_100:
- 		adapter->ahw->port_config |= BIT_9;
- 		break;
- 	case SPEED_1000:
- 		adapter->ahw->port_config |= BIT_10;
- 		break;
- 	case SPEED_10000:
- 		adapter->ahw->port_config |= BIT_11;
- 		break;
- 	default:
- 		return -EINVAL;
+ 	/* 83xx devices do not support Half duplex */
+ 	if (ecmd->duplex == DUPLEX_HALF) {
+ 			netdev_info(adapter->netdev,
+ 				    "Half duplex mode not supported\n");
+ 			return -EINVAL;
+ 	}
+ 
+ 	if (ecmd->autoneg) {
+ 		ahw->port_config |= QLC_83XX_AUTONEG_ENABLE;
+ 		ahw->port_config |= (QLC_83XX_100_CAPABLE |
+ 				     QLC_83XX_1G_CAPABLE |
+ 				     QLC_83XX_10G_CAPABLE);
+ 	} else { /* force speed */
+ 		ahw->port_config &= ~QLC_83XX_AUTONEG_ENABLE;
+ 		switch (ethtool_cmd_speed(ecmd)) {
+ 		case SPEED_10:
+ 			ahw->port_config &= ~(QLC_83XX_100_CAPABLE |
+ 					      QLC_83XX_1G_CAPABLE |
+ 					      QLC_83XX_10G_CAPABLE);
+ 			ahw->port_config |= QLC_83XX_10_CAPABLE;
+ 			break;
+ 		case SPEED_100:
+ 			ahw->port_config &= ~(QLC_83XX_10_CAPABLE |
+ 					      QLC_83XX_1G_CAPABLE |
+ 					      QLC_83XX_10G_CAPABLE);
+ 			ahw->port_config |= QLC_83XX_100_CAPABLE;
+ 			break;
+ 		case SPEED_1000:
+ 			ahw->port_config &= ~(QLC_83XX_10_CAPABLE |
+ 					      QLC_83XX_100_CAPABLE |
+ 					      QLC_83XX_10G_CAPABLE);
+ 			ahw->port_config |= QLC_83XX_1G_CAPABLE;
+ 			break;
+ 		case SPEED_10000:
+ 			ahw->port_config &= ~(QLC_83XX_10_CAPABLE |
+ 					      QLC_83XX_100_CAPABLE |
+ 					      QLC_83XX_1G_CAPABLE);
+ 			ahw->port_config |= QLC_83XX_10G_CAPABLE;
+ 			break;
+ 		default:
+ 			return -EINVAL;
+ 		}
  	}
- 
  	status = qlcnic_83xx_set_port_config(adapter);
  	if (status) {
++<<<<<<< HEAD
 +		dev_info(&adapter->pdev->dev,
 +			 "Faild to Set Link Speed and autoneg.\n");
 +		adapter->ahw->port_config = config;
++=======
+ 		netdev_info(adapter->netdev,
+ 			    "Failed to Set Link Speed and autoneg.\n");
+ 		ahw->port_config = config;
++>>>>>>> cd6e7381fbd9 (qlcnic: Update Link speed and port type info for 83xx adapter)
  	}
+ 
  	return status;
  }
  
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h
index 2bf101a47d02..abda0ce91f90 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h
@@ -360,7 +360,6 @@ enum qlcnic_83xx_states {
 #define QLC_83XX_SFP_MODULE_TYPE(data)		(((data) >> 4) & 0x1F)
 #define QLC_83XX_SFP_CU_LENGTH(data)		(LSB((data) >> 16))
 #define QLC_83XX_SFP_TX_FAULT(data)		((data) & BIT_10)
-#define QLC_83XX_SFP_10G_CAPABLE(data)		((data) & BIT_11)
 #define QLC_83XX_LINK_STATS(data)		((data) & BIT_0)
 #define QLC_83XX_CURRENT_LINK_SPEED(data)	(((data) >> 3) & 7)
 #define QLC_83XX_LINK_PAUSE(data)		(((data) >> 6) & 3)
