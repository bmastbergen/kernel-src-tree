virtio_net: unconditionally define struct virtio_net_hdr_v1.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [virtio] virtio-net: unconditionally define struct virtio_net_hdr_v1 (Jason Wang) [1227339]
Rebuild_FUZZ: 97.48%
commit-author Rusty Russell <rusty@rustcorp.com.au>
commit e68c48f97547979c91de04b487d79dc0d3be7015
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/e68c48f9.failed

This was introduced in commit ed9ecb0415b97b5f9f91f146e1977bb372c74c6d,
but only defined if !VIRTIO_NET_NO_LEGACY.  We should always define
it: easier for users to have conditional legacy code.

	Suggested-by: "Michael S. Tsirkin" <mst@redhat.com>
	Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit e68c48f97547979c91de04b487d79dc0d3be7015)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/virtio_net.h
diff --cc include/uapi/linux/virtio_net.h
index b8ad148155ff,7bbee79ca293..000000000000
--- a/include/uapi/linux/virtio_net.h
+++ b/include/uapi/linux/virtio_net.h
@@@ -73,34 -74,6 +73,37 @@@ struct virtio_net_config 
  	__u16 max_virtqueue_pairs;
  } __attribute__((packed));
  
++<<<<<<< HEAD
 +#ifndef VIRTIO_NET_NO_LEGACY
 +/* This header comes first in the scatter-gather list.
 + * For legacy virtio, if VIRTIO_F_ANY_LAYOUT is not negotiated, it must
 + * be the first element of the scatter-gather list.  If you don't
 + * specify GSO or CSUM features, you can simply ignore the header. */
 +struct virtio_net_hdr {
 +#define VIRTIO_NET_HDR_F_NEEDS_CSUM	1	// Use csum_start, csum_offset
 +#define VIRTIO_NET_HDR_F_DATA_VALID	2	// Csum is valid
 +	__u8 flags;
 +#define VIRTIO_NET_HDR_GSO_NONE		0	// Not a GSO frame
 +#define VIRTIO_NET_HDR_GSO_TCPV4	1	// GSO frame, IPv4 TCP (TSO)
 +#define VIRTIO_NET_HDR_GSO_UDP		3	// GSO frame, IPv4 UDP (UFO)
 +#define VIRTIO_NET_HDR_GSO_TCPV6	4	// GSO frame, IPv6 TCP
 +#define VIRTIO_NET_HDR_GSO_ECN		0x80	// TCP has ECN set
 +	__u8 gso_type;
 +	__u16 hdr_len;		/* Ethernet + IP + tcp/udp hdrs */
 +	__u16 gso_size;		/* Bytes to append to hdr_len per frame */
 +	__u16 csum_start;	/* Position to start checksumming from */
 +	__u16 csum_offset;	/* Offset after that to place checksum */
 +};
 +
 +/* This is the version of the header to use when the MRG_RXBUF
 + * feature has been negotiated. */
 +struct virtio_net_hdr_mrg_rxbuf {
 +	struct virtio_net_hdr hdr;
 +	__u16 num_buffers;	/* Number of merged rx buffers */
 +};
 +#else /* ... VIRTIO_NET_NO_LEGACY */
++=======
++>>>>>>> e68c48f97547 (virtio_net: unconditionally define struct virtio_net_hdr_v1.)
  /*
   * This header comes first in the scatter-gather list.  If you don't
   * specify GSO or CSUM features, you can simply ignore the header.
* Unmerged path include/uapi/linux/virtio_net.h
