audit: convert status version to a feature bitmap

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Richard Guy Briggs <rgb@redhat.com>
commit 0288d7183c41c0192d2963d44590f346f4aee917
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0288d718.failed

The version field defined in the audit status structure was found to have
limitations in terms of its expressibility of features supported.  This is
distict from the get/set features call to be able to command those features
that are present.

Converting this field from a version number to a feature bitmap will allow
distributions to selectively backport and support certain features and will
allow upstream to be able to deprecate features in the future.  It will allow
userspace clients to first query the kernel for which features are actually
present and supported.  Currently, EINVAL is returned rather than EOPNOTSUP,
which isn't helpful in determining if there was an error in the command, or if
it simply isn't supported yet.  Past features are not represented by this
bitmap, but their use may be converted to EOPNOTSUP if needed in the future.

Since "version" is too generic to convert with a #define, use a union in the
struct status, introducing the member "feature_bitmap" unionized with
"version".

Convert existing AUDIT_VERSION_* macros over to AUDIT_FEATURE_BITMAP*
counterparts, leaving the former for backwards compatibility.

	Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
[PM: minor whitespace tweaks]
	Signed-off-by: Paul Moore <pmoore@redhat.com>
(cherry picked from commit 0288d7183c41c0192d2963d44590f346f4aee917)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/audit.h
#	kernel/audit.c
diff --cc include/uapi/linux/audit.h
index 847d781161f3,2ccf19e06e15..000000000000
--- a/include/uapi/linux/audit.h
+++ b/include/uapi/linux/audit.h
@@@ -319,6 -320,18 +319,21 @@@ enum 
  #define AUDIT_STATUS_PID		0x0004
  #define AUDIT_STATUS_RATE_LIMIT		0x0008
  #define AUDIT_STATUS_BACKLOG_LIMIT	0x0010
++<<<<<<< HEAD
++=======
+ #define AUDIT_STATUS_BACKLOG_WAIT_TIME	0x0020
+ 
+ #define AUDIT_FEATURE_BITMAP_BACKLOG_LIMIT	0x00000001
+ #define AUDIT_FEATURE_BITMAP_BACKLOG_WAIT_TIME	0x00000002
+ #define AUDIT_FEATURE_BITMAP_ALL (AUDIT_FEATURE_BITMAP_BACKLOG_LIMIT | \
+ 				  AUDIT_FEATURE_BITMAP_BACKLOG_WAIT_TIME)
+ 
+ /* deprecated: AUDIT_VERSION_* */
+ #define AUDIT_VERSION_LATEST 		AUDIT_FEATURE_BITMAP_ALL
+ #define AUDIT_VERSION_BACKLOG_LIMIT	AUDIT_FEATURE_BITMAP_BACKLOG_LIMIT
+ #define AUDIT_VERSION_BACKLOG_WAIT_TIME	AUDIT_FEATURE_BITMAP_BACKLOG_WAIT_TIME
+ 
++>>>>>>> 0288d7183c41 (audit: convert status version to a feature bitmap)
  				/* Failure-to-log actions */
  #define AUDIT_FAIL_SILENT	0
  #define AUDIT_FAIL_PRINTK	1
@@@ -373,7 -409,11 +388,15 @@@ struct audit_status 
  	__u32		backlog_limit;	/* waiting messages limit */
  	__u32		lost;		/* messages lost */
  	__u32		backlog;	/* messages waiting in queue */
++<<<<<<< HEAD
 +	__u32		version;	/* audit api version number */
++=======
+ 	union {
+ 		__u32	version;	/* deprecated: audit api version num */
+ 		__u32	feature_bitmap;	/* bitmap of kernel audit features */
+ 	};
+ 	__u32		backlog_wait_time;/* message queue wait timeout */
++>>>>>>> 0288d7183c41 (audit: convert status version to a feature bitmap)
  };
  
  struct audit_features {
diff --cc kernel/audit.c
index f3a996e2f95b,7b83c557aee6..000000000000
--- a/kernel/audit.c
+++ b/kernel/audit.c
@@@ -787,9 -842,9 +787,15 @@@ static int audit_receive_msg(struct sk_
  		s.backlog_limit		= audit_backlog_limit;
  		s.lost			= atomic_read(&audit_lost);
  		s.backlog		= skb_queue_len(&audit_skb_queue);
++<<<<<<< HEAD
 +		s.version		= 1;
 +		audit_send_reply(NETLINK_CB(skb).portid, seq, AUDIT_GET, 0, 0,
 +				 &s, sizeof(s));
++=======
+ 		s.feature_bitmap	= AUDIT_FEATURE_BITMAP_ALL;
+ 		s.backlog_wait_time	= audit_backlog_wait_time;
+ 		audit_send_reply(skb, seq, AUDIT_GET, 0, 0, &s, sizeof(s));
++>>>>>>> 0288d7183c41 (audit: convert status version to a feature bitmap)
  		break;
  	}
  	case AUDIT_SET: {
* Unmerged path include/uapi/linux/audit.h
* Unmerged path kernel/audit.c
