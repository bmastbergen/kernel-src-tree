cifs: Use kzalloc instead of kmalloc/memset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [unisys] Use kzalloc instead of kmalloc/memset (Erik Arfvidson) [1245362]
Rebuild_FUZZ: 92.50%
commit-author Haowen Bai <baihaowen@meizu.com>
commit 9339faac6d206544601b939321059f60ba96a18d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9339faac.failed

Use kzalloc rather than duplicating its implementation, which
makes code simple and easy to understand.

	Signed-off-by: Haowen Bai <baihaowen@meizu.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 9339faac6d206544601b939321059f60ba96a18d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/transport.c
diff --cc fs/cifs/transport.c
index 18cd5650a5fc,c667e6ddfe2f..000000000000
--- a/fs/cifs/transport.c
+++ b/fs/cifs/transport.c
@@@ -367,12 -445,47 +367,48 @@@ uncork
  }
  
  static int
 -smb_send_rqst(struct TCP_Server_Info *server, int num_rqst,
 -	      struct smb_rqst *rqst, int flags)
 +smb_sendv(struct TCP_Server_Info *server, struct kvec *iov, int n_vec)
  {
 -	struct kvec iov;
 -	struct smb2_transform_hdr *tr_hdr;
 -	struct smb_rqst cur_rqst[MAX_COMPOUND];
 -	int rc;
 +	struct smb_rqst rqst = { .rq_iov = iov,
 +				 .rq_nvec = n_vec };
  
++<<<<<<< HEAD
 +	return smb_send_rqst(server, &rqst);
++=======
+ 	if (!(flags & CIFS_TRANSFORM_REQ))
+ 		return __smb_send_rqst(server, num_rqst, rqst);
+ 
+ 	if (num_rqst > MAX_COMPOUND - 1)
+ 		return -ENOMEM;
+ 
+ 	if (!server->ops->init_transform_rq) {
+ 		cifs_server_dbg(VFS, "Encryption requested but transform callback is missing\n");
+ 		return -EIO;
+ 	}
+ 
+ 	tr_hdr = kzalloc(sizeof(*tr_hdr), GFP_NOFS);
+ 	if (!tr_hdr)
+ 		return -ENOMEM;
+ 
+ 	memset(&cur_rqst[0], 0, sizeof(cur_rqst));
+ 	memset(&iov, 0, sizeof(iov));
+ 
+ 	iov.iov_base = tr_hdr;
+ 	iov.iov_len = sizeof(*tr_hdr);
+ 	cur_rqst[0].rq_iov = &iov;
+ 	cur_rqst[0].rq_nvec = 1;
+ 
+ 	rc = server->ops->init_transform_rq(server, num_rqst + 1,
+ 					    &cur_rqst[0], rqst);
+ 	if (rc)
+ 		goto out;
+ 
+ 	rc = __smb_send_rqst(server, num_rqst + 1, &cur_rqst[0]);
+ 	smb3_free_compound_rqst(num_rqst, &cur_rqst[1]);
+ out:
+ 	kfree(tr_hdr);
+ 	return rc;
++>>>>>>> 9339faac6d20 (cifs: Use kzalloc instead of kmalloc/memset)
  }
  
  int
* Unmerged path fs/cifs/transport.c
