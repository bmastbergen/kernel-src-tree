bonding: RCUify bond_ab_arp_probe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 98b90f26651f9d84cfbb0221c9a3d9863c5bea69
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/98b90f26.failed

Currently bond_ab_arp_probe() is always called under rcu_read_lock(),
however to work with curr_active_slave we're still holding the
curr_slave_lock.

To remove that curr_slave_lock - rcu_dereference the bond's
curr_active_slave and use it further - so that we're sure the slave won't
go away, and we don't care if it will change in the meanwhile.

CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 98b90f26651f9d84cfbb0221c9a3d9863c5bea69)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 102682489f45,27e6fddb2206..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2933,19 -2604,19 +2933,31 @@@ do_failover
   */
  static void bond_ab_arp_probe(struct bonding *bond)
  {
++<<<<<<< HEAD
 +	struct slave *slave;
 +	int i;
 +
 +	read_lock(&bond->curr_slave_lock);
 +
 +	if (bond->current_arp_slave && bond->curr_active_slave)
 +		pr_info("PROBE: c_arp %s && cas %s BAD\n",
 +			bond->current_arp_slave->dev->name,
 +			bond->curr_active_slave->dev->name);
++=======
+ 	struct slave *slave, *before = NULL, *new_slave = NULL,
+ 		     *curr_arp_slave = rcu_dereference(bond->current_arp_slave),
+ 		     *curr_active_slave = rcu_dereference(bond->curr_active_slave);
+ 	struct list_head *iter;
+ 	bool found = false;
+ 
+ 	if (curr_arp_slave && curr_active_slave)
+ 		pr_info("PROBE: c_arp %s && cas %s BAD\n",
+ 			curr_arp_slave->dev->name,
+ 			curr_active_slave->dev->name);
++>>>>>>> 98b90f26651f (bonding: RCUify bond_ab_arp_probe)
  
- 	if (bond->curr_active_slave) {
- 		bond_arp_send_all(bond, bond->curr_active_slave);
- 		read_unlock(&bond->curr_slave_lock);
+ 	if (curr_active_slave) {
+ 		bond_arp_send_all(bond, curr_active_slave);
  		return;
  	}
  
* Unmerged path drivers/net/bonding/bond_main.c
