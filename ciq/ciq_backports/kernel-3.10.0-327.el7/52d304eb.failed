locks: fix NULL-deref in generic_delete_lease

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author NeilBrown <neilb@suse.de>
commit 52d304eb4eaced9ad04b64ba7cd6ceb5153bbf18
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/52d304eb.failed

commit 0efaa7e82f02fe69c05ad28e905f31fc86e6f08e
  locks: generic_delete_lease doesn't need a file_lock at all

moves the call to fl->fl_lmops->lm_change() to a place in the
code where fl might be a non-lease lock.
When that happens, fl_lmops is NULL and an Oops ensures.

So add an extra test to restore correct functioning.

	Reported-by: Linda Walsh <suse@tlinx.org>
Link: https://bugzilla.suse.com/show_bug.cgi?id=912569
	Cc: stable@vger.kernel.org (v3.18)
Fixes: 0efaa7e82f02fe69c05ad28e905f31fc86e6f08e
	Signed-off-by: NeilBrown <neilb@suse.de>
	Signed-off-by: Jeff Layton <jlayton@primarydata.com>
(cherry picked from commit 52d304eb4eaced9ad04b64ba7cd6ceb5153bbf18)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/locks.c
diff --cc fs/locks.c
index 539c15f0037d,59e2f905e4ff..000000000000
--- a/fs/locks.c
+++ b/fs/locks.c
@@@ -1627,8 -1702,10 +1627,15 @@@ static int generic_delete_lease(struct 
  			break;
  	}
  	trace_generic_delete_lease(inode, fl);
++<<<<<<< HEAD
 +	if (fl)
 +		error = fl->fl_lmops->lm_change(before, F_UNLCK);
++=======
+ 	if (fl && IS_LEASE(fl))
+ 		error = fl->fl_lmops->lm_change(before, F_UNLCK, &dispose);
+ 	spin_unlock(&inode->i_lock);
+ 	locks_dispose_list(&dispose);
++>>>>>>> 52d304eb4eac (locks: fix NULL-deref in generic_delete_lease)
  	return error;
  }
  
* Unmerged path fs/locks.c
