ipmi: Remove the now unnecessary message queue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Corey Minyard <cminyard@mvista.com>
commit b874b985c816c74a9bda04082f18db88dcbc808a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b874b985.failed

A message queue was added to the message handler, so the SMI
interfaces only need to handle one message at a time.  Pull out
the message queue.  This also leads to some significant
simplification in the shutdown of an interface, since the
message handler now does a lot of the cleanup.

	Signed-off-by: Corey Minyard <cminyard@mvista.com>
(cherry picked from commit b874b985c816c74a9bda04082f18db88dcbc808a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/ipmi/ipmi_si_intf.c
diff --cc drivers/char/ipmi/ipmi_si_intf.c
index f73439915954,d31a7fce2260..000000000000
--- a/drivers/char/ipmi/ipmi_si_intf.c
+++ b/drivers/char/ipmi/ipmi_si_intf.c
@@@ -3303,16 -3372,14 +3272,19 @@@ static int try_smi_init(struct smi_inf
  	setup_oem_data_handler(new_smi);
  	setup_xaction_handlers(new_smi);
  
- 	INIT_LIST_HEAD(&(new_smi->xmit_msgs));
- 	INIT_LIST_HEAD(&(new_smi->hp_xmit_msgs));
+ 	new_smi->waiting_msg = NULL;
  	new_smi->curr_msg = NULL;
  	atomic_set(&new_smi->req_events, 0);
 -	new_smi->run_to_completion = false;
 +	new_smi->run_to_completion = 0;
  	for (i = 0; i < SI_NUM_STATS; i++)
  		atomic_set(&new_smi->stats[i], 0);
  
++<<<<<<< HEAD
 +	new_smi->interrupt_disabled = 1;
 +	atomic_set(&new_smi->stop_operation, 0);
++=======
+ 	new_smi->interrupt_disabled = true;
++>>>>>>> b874b985c816 (ipmi: Remove the now unnecessary message queue)
  	atomic_set(&new_smi->need_watch, 0);
  	new_smi->intf_num = smi_num;
  	smi_num++;
@@@ -3405,12 -3467,12 +3377,12 @@@
  	wait_for_timer_and_thread(new_smi);
  
   out_err:
 -	new_smi->interrupt_disabled = true;
 +	new_smi->interrupt_disabled = 1;
  
  	if (new_smi->intf) {
- 		ipmi_unregister_smi(new_smi->intf);
+ 		ipmi_smi_t intf = new_smi->intf;
  		new_smi->intf = NULL;
+ 		ipmi_unregister_smi(intf);
  	}
  
  	if (new_smi->irq_cleanup) {
* Unmerged path drivers/char/ipmi/ipmi_si_intf.c
