sd: don't use scsi_setup_blk_pc_cmnd for discard requests

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 6a7b43985daa4f42b6d6f0186594c3a68f84a1d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6a7b4398.failed

Simplify handling of discard requests by setting up the command directly
instead of initializing request fields and then calling
scsi_setup_blk_pc_cmnd to propagate the information into the command.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
(cherry picked from commit 6a7b43985daa4f42b6d6f0186594c3a68f84a1d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/sd.c
diff --cc drivers/scsi/sd.c
index 4549249c8e53,03bed86b9fc9..000000000000
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@@ -753,9 -754,22 +752,28 @@@ static int sd_setup_discard_cmnd(struc
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	blk_add_request_payload(rq, page, len);
 +	ret = scsi_setup_blk_pc_cmnd(sdp, rq);
 +	rq->buffer = page_address(page);
++=======
+ 	rq->completion_data = page;
+ 	rq->timeout = SD_TIMEOUT;
+ 
+ 	cmd->transfersize = len;
+ 	cmd->allowed = rq->retries;
+ 
+ 	/*
+ 	 * Initially __data_len is set to the amount of data that needs to be
+ 	 * transferred to the target. This amount depends on whether WRITE SAME
+ 	 * or UNMAP is being used. After the scatterlist has been mapped by
+ 	 * scsi_init_io() we set __data_len to the size of the area to be
+ 	 * discarded on disk. This allows us to report completion on the full
+ 	 * amount of blocks described by the request.
+ 	 */
+ 	blk_add_request_payload(rq, page, len);
+ 	ret = scsi_init_io(cmd, GFP_ATOMIC);
++>>>>>>> 6a7b43985daa (sd: don't use scsi_setup_blk_pc_cmnd for discard requests)
  	rq->__data_len = nr_bytes;
  
  out:
* Unmerged path drivers/scsi/sd.c
