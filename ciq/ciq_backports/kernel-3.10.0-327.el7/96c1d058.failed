Drivers: hv: vmbus: Add support for VMBus panic notifier handler

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] vmbus: Add support for VMBus panic notifier handler (Vitaly Kuznetsov) [1210721]
Rebuild_FUZZ: 88.70%
commit-author Nick Meier <nmeier@microsoft.com>
commit 96c1d0581d00f7abe033350edb021a9d947d8d81
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/96c1d058.failed

Hyper-V allows a guest to notify the Hyper-V host that a panic
condition occured.  This notification can include up to five 64
bit values.  These 64 bit values are written into crash MSRs.
Once the data has been written into the crash MSRs, the host is
then notified by writing into a Crash Control MSR.  On the Hyper-V
host, the panic notification data is captured in the Windows Event
log as a 18590 event.

Crash MSRs are defined in appendix H of the Hypervisor Top Level
Functional Specification.  At the time of this patch, v4.0 is the
current functional spec.  The URL for the v4.0 document is:

http://download.microsoft.com/download/A/B/4/AB43A34E-BDD0-4FA6-BDEF-79EEF16E880B/Hypervisor Top Level Functional Specification v4.0.docx

	Signed-off-by: Nick Meier <nmeier@microsoft.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 96c1d0581d00f7abe033350edb021a9d947d8d81)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/vmbus_drv.c
diff --cc drivers/hv/vmbus_drv.c
index 143d8f6191ee,526fa8b19cda..000000000000
--- a/drivers/hv/vmbus_drv.c
+++ b/drivers/hv/vmbus_drv.c
@@@ -36,9 -35,12 +36,11 @@@
  #include <asm/hyperv.h>
  #include <asm/hypervisor.h>
  #include <asm/mshyperv.h>
+ #include <linux/notifier.h>
+ #include <linux/ptrace.h>
  #include "hyperv_vmbus.h"
  
 +
  static struct acpi_device  *hv_acpi_dev;
  
  static struct tasklet_struct msg_dpc;
@@@ -584,6 -821,16 +611,19 @@@ static int vmbus_bus_init(int irq
  	if (ret)
  		goto err_alloc;
  
++<<<<<<< HEAD
++=======
+ 	hv_cpu_hotplug_quirk(true);
+ 
+ 	/*
+ 	 * Only register if the crash MSRs are available
+ 	 */
+ 	if (ms_hyperv.features & HV_FEATURE_GUEST_CRASH_MSR_AVAILABLE) {
+ 		atomic_notifier_chain_register(&panic_notifier_list,
+ 					       &hyperv_panic_block);
+ 	}
+ 
++>>>>>>> 96c1d0581d00 (Drivers: hv: vmbus: Add support for VMBus panic notifier handler)
  	vmbus_request_offers();
  
  	return 0;
diff --git a/drivers/hv/hyperv_vmbus.h b/drivers/hv/hyperv_vmbus.h
index b5e790856f6e..08e5b1598ba7 100644
--- a/drivers/hv/hyperv_vmbus.h
+++ b/drivers/hv/hyperv_vmbus.h
@@ -49,6 +49,17 @@ enum hv_cpuid_function {
 	HVCPUID_IMPLEMENTATION_LIMITS		= 0x40000005,
 };
 
+#define  HV_FEATURE_GUEST_CRASH_MSR_AVAILABLE   0x400
+
+#define HV_X64_MSR_CRASH_P0   0x40000100
+#define HV_X64_MSR_CRASH_P1   0x40000101
+#define HV_X64_MSR_CRASH_P2   0x40000102
+#define HV_X64_MSR_CRASH_P3   0x40000103
+#define HV_X64_MSR_CRASH_P4   0x40000104
+#define HV_X64_MSR_CRASH_CTL  0x40000105
+
+#define HV_CRASH_CTL_CRASH_NOTIFY 0x8000000000000000
+
 /* Define version of the synthetic interrupt controller. */
 #define HV_SYNIC_VERSION		(1)
 
* Unmerged path drivers/hv/vmbus_drv.c
