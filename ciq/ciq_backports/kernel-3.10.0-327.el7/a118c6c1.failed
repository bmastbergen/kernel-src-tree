sd: don't use scsi_setup_blk_pc_cmnd for flush requests

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Christoph Hellwig <hch@lst.de>
commit a118c6c1d907e52286df25ee1e8b217f25d6f73d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a118c6c1.failed

Simplify handling of flush requests by setting up the command directly
instead of initializing request fields and then calling
scsi_setup_blk_pc_cmnd to propagate the information into the command.

Also rename scsi_setup_flush_cmnd to sd_setup_flush_cmnd for consistency.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
(cherry picked from commit a118c6c1d907e52286df25ee1e8b217f25d6f73d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/sd.c
diff --cc drivers/scsi/sd.c
index 12868943df88,18ca21fd7559..000000000000
--- a/drivers/scsi/sd.c
+++ b/drivers/scsi/sd.c
@@@ -844,14 -844,20 +844,27 @@@ static int sd_setup_write_same_cmnd(str
  	return ret;
  }
  
- static int scsi_setup_flush_cmnd(struct scsi_device *sdp, struct request *rq)
+ static int sd_setup_flush_cmnd(struct scsi_cmnd *cmd)
  {
++<<<<<<< HEAD
 +	rq->timeout = rq->q->rq_timeout * SD_FLUSH_TIMEOUT_MULTIPLIER;
 +	rq->retries = SD_MAX_RETRIES;
 +	rq->cmd[0] = SYNCHRONIZE_CACHE;
 +	rq->cmd_len = 10;
++=======
+ 	struct request *rq = cmd->request;
++>>>>>>> a118c6c1d907 (sd: don't use scsi_setup_blk_pc_cmnd for flush requests)
  
- 	return scsi_setup_blk_pc_cmnd(sdp, rq);
+ 	/* flush requests don't perform I/O, zero the S/G table */
+ 	memset(&cmd->sdb, 0, sizeof(cmd->sdb));
+ 
+ 	cmd->cmnd[0] = SYNCHRONIZE_CACHE;
+ 	cmd->cmd_len = 10;
+ 	cmd->transfersize = 0;
+ 	cmd->allowed = SD_MAX_RETRIES;
+ 
+ 	rq->timeout *= SD_FLUSH_TIMEOUT_MULTIPLIER;
+ 	return BLKPREP_OK;
  }
  
  static void sd_uninit_command(struct scsi_cmnd *SCpnt)
* Unmerged path drivers/scsi/sd.c
