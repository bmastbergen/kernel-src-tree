bonding: fix LACP PDU not sent on slave port sometimes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Satish Ashok <sashok@cumulusnetworks.com>
commit 2f6373245a09e2a34f36df7d982f783291ec8fce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2f637324.failed

When a slave is added to a bond and it is not in full duplex mode,
AD_PORT_LACP_ENABLED flag is cleared, due to this LACP PDU is not sent
on slave. When the duplex is changed to full, the flag needs to be set
to send LACP PDU.

	Cc: Andy Gospodarek <gospo@cumulusnetworks.com>
	Reviewed-by: Nikolay Aleksandrov <nikolay@redhat.com>
	Signed-off-by: Satish Ashok <sashok@cumulusnetworks.com>
	Signed-off-by: Jonathan Toppins <jtoppins@cumulusnetworks.com>
	Signed-off-by: Jay Vosburgh <jay.vosburgh@canonical.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2f6373245a09e2a34f36df7d982f783291ec8fce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index 65115ee7b259,cfc4a9c1000a..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -2196,12 -2219,14 +2196,19 @@@ static int bond_3ad_rx_indication(struc
  		switch (lacpdu->subtype) {
  		case AD_TYPE_LACPDU:
  			ret = RX_HANDLER_CONSUMED;
++<<<<<<< HEAD
 +			pr_debug("Received LACPDU on port %d\n",
 +				 port->actor_port_number);
++=======
+ 			netdev_dbg(slave->bond->dev,
+ 				   "Received LACPDU on port %d slave %s\n",
+ 				   port->actor_port_number,
+ 				   slave->dev->name);
++>>>>>>> 2f6373245a09 (bonding: fix LACP PDU not sent on slave port sometimes)
  			/* Protect against concurrent state machines */
 -			spin_lock(&slave->bond->mode_lock);
 +			__get_state_machine_lock(port);
  			ad_rx_machine(lacpdu, port);
 -			spin_unlock(&slave->bond->mode_lock);
 +			__release_state_machine_lock(port);
  			break;
  
  		case AD_TYPE_MARKER:
@@@ -2282,12 -2309,15 +2289,19 @@@ void bond_3ad_adapter_duplex_changed(st
  		return;
  	}
  
 -	spin_lock_bh(&slave->bond->mode_lock);
 +	__get_state_machine_lock(port);
  
 -	port->actor_admin_port_key &= ~AD_DUPLEX_KEY_MASKS;
 +	port->actor_admin_port_key &= ~AD_DUPLEX_KEY_BITS;
  	port->actor_oper_port_key = port->actor_admin_port_key |=
  		__get_duplex(port);
++<<<<<<< HEAD
 +	pr_debug("Port %d changed duplex\n", port->actor_port_number);
++=======
+ 	netdev_dbg(slave->bond->dev, "Port %d slave %s changed duplex\n",
+ 		   port->actor_port_number, slave->dev->name);
+ 	if (port->actor_oper_port_key & AD_DUPLEX_KEY_MASKS)
+ 		port->sm_vars |= AD_PORT_LACP_ENABLED;
++>>>>>>> 2f6373245a09 (bonding: fix LACP PDU not sent on slave port sometimes)
  	/* there is no need to reselect a new aggregator, just signal the
  	 * state machines to reinitialize
  	 */
* Unmerged path drivers/net/bonding/bond_3ad.c
