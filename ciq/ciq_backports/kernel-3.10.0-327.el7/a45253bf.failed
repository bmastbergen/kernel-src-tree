veth: set iflink to the peer veth

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit a45253bf32bf49cdb2807bad212b84f5ab51ac26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a45253bf.failed

Now that the peer netns is advertised in rtnl messages, we can set this property
so that IFLA_LINK will advertise the peer ifindex. It allows the userland to get
the full veth configuration.

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a45253bf32bf49cdb2807bad212b84f5ab51ac26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/veth.c
diff --cc drivers/net/veth.c
index 11c9ff103aa7,c8186ffda1a3..000000000000
--- a/drivers/net/veth.c
+++ b/drivers/net/veth.c
@@@ -244,6 -248,35 +244,38 @@@ static void veth_dev_free(struct net_de
  	free_netdev(dev);
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NET_POLL_CONTROLLER
+ static void veth_poll_controller(struct net_device *dev)
+ {
+ 	/* veth only receives frames when its peer sends one
+ 	 * Since it's a synchronous operation, we are guaranteed
+ 	 * never to have pending data when we poll for it so
+ 	 * there is nothing to do here.
+ 	 *
+ 	 * We need this though so netpoll recognizes us as an interface that
+ 	 * supports polling, which enables bridge devices in virt setups to
+ 	 * still use netconsole
+ 	 */
+ }
+ #endif	/* CONFIG_NET_POLL_CONTROLLER */
+ 
+ static int veth_get_iflink(const struct net_device *dev)
+ {
+ 	struct veth_priv *priv = netdev_priv(dev);
+ 	struct net_device *peer;
+ 	int iflink;
+ 
+ 	rcu_read_lock();
+ 	peer = rcu_dereference(priv->peer);
+ 	iflink = peer ? peer->ifindex : 0;
+ 	rcu_read_unlock();
+ 
+ 	return iflink;
+ }
+ 
++>>>>>>> a45253bf32bf (veth: set iflink to the peer veth)
  static const struct net_device_ops veth_netdev_ops = {
  	.ndo_init            = veth_dev_init,
  	.ndo_open            = veth_open,
@@@ -251,7 -284,12 +283,14 @@@
  	.ndo_start_xmit      = veth_xmit,
  	.ndo_change_mtu      = veth_change_mtu,
  	.ndo_get_stats64     = veth_get_stats64,
 -	.ndo_set_rx_mode     = veth_set_multicast_list,
  	.ndo_set_mac_address = eth_mac_addr,
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NET_POLL_CONTROLLER
+ 	.ndo_poll_controller	= veth_poll_controller,
+ #endif
+ 	.ndo_get_iflink		= veth_get_iflink,
++>>>>>>> a45253bf32bf (veth: set iflink to the peer veth)
  };
  
  #define VETH_FEATURES (NETIF_F_SG | NETIF_F_FRAGLIST | NETIF_F_ALL_TSO |    \
* Unmerged path drivers/net/veth.c
