powerpc/powernv: handle OPAL_SUCCESS return in opal_sensor_read

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Cédric Le Goater <clg@fr.ibm.com>
commit 6bc08d03e745a0b369bd28294b969e4fdaf7be9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6bc08d03.failed

Currently, when a sensor value is read, the kernel calls OPAL, which in
turn builds a message for the FSP, and waits for a message back.

The new device tree for OPAL sensors [1] adds new sensors that can be
read synchronously (core temperatures for instance) and that don't need
to wait for a response.

This patch modifies the opal call to accept an OPAL_SUCCESS return value
and cover the case above.

[1] https://lists.ozlabs.org/pipermail/skiboot/2015-March/000639.html

	Signed-off-by: Cédric Le Goater <clg@fr.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 6bc08d03e745a0b369bd28294b969e4fdaf7be9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/opal-sensor.c
diff --cc arch/powerpc/platforms/powernv/opal-sensor.c
index 10271ad1fac4,655250499d18..000000000000
--- a/arch/powerpc/platforms/powernv/opal-sensor.c
+++ b/arch/powerpc/platforms/powernv/opal-sensor.c
@@@ -44,19 -46,29 +44,45 @@@ int opal_get_sensor_data(u32 sensor_hnd
  
  	mutex_lock(&opal_sensor_mutex);
  	ret = opal_sensor_read(sensor_hndl, token, &data);
++<<<<<<< HEAD
 +	if (ret != OPAL_ASYNC_COMPLETION)
 +		goto out_token;
 +
 +	ret = opal_async_wait_response(token, &msg);
 +	if (ret) {
 +		pr_err("%s: Failed to wait for the async response, %d\n",
 +				__func__, ret);
 +		goto out_token;
 +	}
 +
 +	*sensor_data = be32_to_cpu(data);
 +	ret = be64_to_cpu(msg.params[1]);
 +
++=======
+ 	switch (ret) {
+ 	case OPAL_ASYNC_COMPLETION:
+ 		ret = opal_async_wait_response(token, &msg);
+ 		if (ret) {
+ 			pr_err("%s: Failed to wait for the async response, %d\n",
+ 			       __func__, ret);
+ 			goto out_token;
+ 		}
+ 
+ 		ret = opal_error_code(be64_to_cpu(msg.params[1]));
+ 		*sensor_data = be32_to_cpu(data);
+ 		break;
+ 
+ 	case OPAL_SUCCESS:
+ 		ret = 0;
+ 		*sensor_data = be32_to_cpu(data);
+ 		break;
+ 
+ 	default:
+ 		ret = opal_error_code(ret);
+ 		break;
+ 	}
+ 
++>>>>>>> 6bc08d03e745 (powerpc/powernv: handle OPAL_SUCCESS return in opal_sensor_read)
  out_token:
  	mutex_unlock(&opal_sensor_mutex);
  	opal_async_release_token(token);
* Unmerged path arch/powerpc/platforms/powernv/opal-sensor.c
