xfs: kill VN_CACHED

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit 2667c6f935d979cea1ab7fa58568fd0fd725525f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2667c6f9.failed

Only has 2 users, has outlived it's usefulness.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit 2667c6f935d979cea1ab7fa58568fd0fd725525f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_bmap_util.c
#	fs/xfs/xfs_vnode.h
diff --cc fs/xfs/xfs_bmap_util.c
index e2ea28ff57bf,1b79b8c19c37..000000000000
--- a/fs/xfs/xfs_bmap_util.c
+++ b/fs/xfs/xfs_bmap_util.c
@@@ -1593,21 -1714,16 +1593,27 @@@ xfs_swap_extents
  		goto out_unlock;
  	}
  
 -	error = filemap_write_and_wait(VFS_I(tip)->i_mapping);
 +	error = xfs_swap_extent_flush(ip);
 +	if (error)
 +		goto out_unlock;
 +	error = xfs_swap_extent_flush(tip);
  	if (error)
  		goto out_unlock;
 -	truncate_pagecache_range(VFS_I(tip), 0, -1);
  
++<<<<<<< HEAD
 +	tp = xfs_trans_alloc(mp, XFS_TRANS_SWAPEXT);
 +	error = xfs_trans_reserve(tp, &M_RES(mp)->tr_ichange, 0, 0);
 +	if (error) {
 +		xfs_trans_cancel(tp, 0);
++=======
+ 	/* Verify O_DIRECT for ftmp */
+ 	if (VFS_I(tip)->i_mapping->nrpages) {
+ 		error = -EINVAL;
++>>>>>>> 2667c6f935d9 (xfs: kill VN_CACHED)
  		goto out_unlock;
  	}
 +	xfs_lock_two_inodes(ip, tip, XFS_ILOCK_EXCL);
 +	lock_flags |= XFS_ILOCK_EXCL;
  
  	/* Verify all data are being swapped */
  	if (sxp->sx_offset != 0 ||
diff --cc fs/xfs/xfs_vnode.h
index e8a77383c0d5,bcf0c74f0d2f..000000000000
--- a/fs/xfs/xfs_vnode.h
+++ b/fs/xfs/xfs_vnode.h
@@@ -38,9 -38,6 +38,12 @@@ struct attrlist_cursor_kern
   * Some useful predicates.
   */
  #define VN_MAPPED(vp)	mapping_mapped(vp->i_mapping)
++<<<<<<< HEAD
 +#define VN_CACHED(vp)	(vp->i_mapping->nrpages)
 +#define VN_DIRTY(vp)	mapping_tagged(vp->i_mapping, \
 +					PAGECACHE_TAG_DIRTY)
++=======
++>>>>>>> 2667c6f935d9 (xfs: kill VN_CACHED)
  
  
  #endif	/* __XFS_VNODE_H__ */
* Unmerged path fs/xfs/xfs_bmap_util.c
* Unmerged path fs/xfs/xfs_vnode.h
