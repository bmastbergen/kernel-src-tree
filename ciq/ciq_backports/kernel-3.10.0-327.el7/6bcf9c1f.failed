perf tools powerpc: Use dwfl_report_elf() instead of offline.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] powerpc: Use dwfl_report_elf() instead of offline (Gustavo Duarte) [1113736]
Rebuild_FUZZ: 89.09%
commit-author Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
commit 6bcf9c1ff3ec22fd81eba336737d9865476509b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6bcf9c1f.failed

dwfl_report_offline() works only when libraries are prelinked.

Replace dwfl_report_offline() with dwfl_report_elf() so we correctly
extract debug info even from libraries that are not prelinked.

	Reported-by: Jiri Olsa <jolsa@redhat.com>
	Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Tested-by: Jiri Olsa <jolsa@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
Link: http://lkml.kernel.org/r/20150114221045.GA17703@us.ibm.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 6bcf9c1ff3ec22fd81eba336737d9865476509b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/arch/powerpc/util/skip-callchain-idx.c
diff --cc tools/perf/arch/powerpc/util/skip-callchain-idx.c
index d73ef8bb08c7,0c370f81e002..000000000000
--- a/tools/perf/arch/powerpc/util/skip-callchain-idx.c
+++ b/tools/perf/arch/powerpc/util/skip-callchain-idx.c
@@@ -145,7 -145,7 +145,11 @@@ static Dwarf_Frame *get_dwarf_frame(Dwf
   *		yet used)
   *	-1 in case of errors
   */
++<<<<<<< HEAD
 +static int check_return_addr(const char *exec_file, Dwarf_Addr pc)
++=======
+ static int check_return_addr(struct dso *dso, u64 map_start, Dwarf_Addr pc)
++>>>>>>> 6bcf9c1ff3ec (perf tools powerpc: Use dwfl_report_elf() instead of offline.)
  {
  	int		rc = -1;
  	Dwfl		*dwfl;
@@@ -155,16 -155,31 +159,34 @@@
  	Dwarf_Addr	start = pc;
  	Dwarf_Addr	end = pc;
  	bool		signalp;
+ 	const char	*exec_file = dso->long_name;
  
 -	dwfl = dso->dwfl;
 -
 +	dwfl = dwfl_begin(&offline_callbacks);
  	if (!dwfl) {
 -		dwfl = dwfl_begin(&offline_callbacks);
 -		if (!dwfl) {
 -			pr_debug("dwfl_begin() failed: %s\n", dwarf_errmsg(-1));
 -			return -1;
 -		}
 +		pr_debug("dwfl_begin() failed: %s\n", dwarf_errmsg(-1));
 +		return -1;
 +	}
  
++<<<<<<< HEAD
 +	if (dwfl_report_offline(dwfl, "",  exec_file, -1) == NULL) {
 +		pr_debug("dwfl_report_offline() failed %s\n", dwarf_errmsg(-1));
 +		goto out;
++=======
+ 		mod = dwfl_report_elf(dwfl, exec_file, exec_file, -1,
+ 						map_start, false);
+ 		if (!mod) {
+ 			pr_debug("dwfl_report_elf() failed %s\n",
+ 						dwarf_errmsg(-1));
+ 			/*
+ 			 * We normally cache the DWARF debug info and never
+ 			 * call dwfl_end(). But to prevent fd leak, free in
+ 			 * case of error.
+ 			 */
+ 			dwfl_end(dwfl);
+ 			goto out;
+ 		}
+ 		dso->dwfl = dwfl;
++>>>>>>> 6bcf9c1ff3ec (perf tools powerpc: Use dwfl_report_elf() instead of offline.)
  	}
  
  	mod = dwfl_addrmodule(dwfl, pc);
@@@ -246,10 -259,10 +268,14 @@@ int arch_skip_callchain_idx(struct mach
  		return skip_slot;
  	}
  
++<<<<<<< HEAD
 +	rc = check_return_addr(dso->long_name, ip);
++=======
+ 	rc = check_return_addr(dso, al.map->start, ip);
++>>>>>>> 6bcf9c1ff3ec (perf tools powerpc: Use dwfl_report_elf() instead of offline.)
  
- 	pr_debug("DSO %s, nr %" PRIx64 ", ip 0x%" PRIx64 "rc %d\n",
- 				dso->long_name, chain->nr, ip, rc);
+ 	pr_debug("[DSO %s, sym %s, ip 0x%" PRIx64 "] rc %d\n",
+ 				dso->long_name, al.sym->name, ip, rc);
  
  	if (rc == 0) {
  		/*
* Unmerged path tools/perf/arch/powerpc/util/skip-callchain-idx.c
