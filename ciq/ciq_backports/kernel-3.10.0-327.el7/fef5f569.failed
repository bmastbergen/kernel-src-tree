Input: convert remaining uses of pr_warning to pr_warn

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] netxen: Convert remaining uses of pr_warning to pr_warn (Tony Camuso) [1187294]
Rebuild_FUZZ: 93.58%
commit-author Joe Perches <joe@perches.com>
commit fef5f569db06ea80ae3a864b1ba4bda6e359311d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/fef5f569.failed

To enable eventual removal of pr_warning

This makes pr_warn use consistent for drivers/input

Prior to this patch, there were 8 uses of pr_warning and
17 uses of pr_warn in drivers/input

	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit fef5f569db06ea80ae3a864b1ba4bda6e359311d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/misc/xen-kbdfront.c
diff --cc drivers/input/misc/xen-kbdfront.c
index e21c1816a8f9,1fd911d4fadf..000000000000
--- a/drivers/input/misc/xen-kbdfront.c
+++ b/drivers/input/misc/xen-kbdfront.c
@@@ -126,10 -128,15 +126,22 @@@ static int xenkbd_probe(struct xenbus_d
  	if (!info->page)
  		goto error_nomem;
  
++<<<<<<< HEAD
 +	if (xenbus_scanf(XBT_NIL, dev->otherend, "feature-abs-pointer", "%d", &abs) < 0)
 +		abs = 0;
 +	if (abs)
 +		xenbus_printf(XBT_NIL, dev->nodename, "request-abs-pointer", "1");
++=======
+ 	abs = xenbus_read_unsigned(dev->otherend, "feature-abs-pointer", 0);
+ 	if (abs) {
+ 		ret = xenbus_write(XBT_NIL, dev->nodename,
+ 				   "request-abs-pointer", "1");
+ 		if (ret) {
+ 			pr_warn("xenkbd: can't request abs-pointer\n");
+ 			abs = 0;
+ 		}
+ 	}
++>>>>>>> fef5f569db06 (Input: convert remaining uses of pr_warning to pr_warn)
  
  	/* keyboard */
  	kbd = input_allocate_device();
@@@ -315,15 -322,12 +327,15 @@@ static void xenkbd_backend_changed(stru
  
  	case XenbusStateInitWait:
  InitWait:
 -		if (xenbus_read_unsigned(info->xbdev->otherend,
 -					 "feature-abs-pointer", 0)) {
 -			ret = xenbus_write(XBT_NIL, info->xbdev->nodename,
 -					   "request-abs-pointer", "1");
 +		ret = xenbus_scanf(XBT_NIL, info->xbdev->otherend,
 +				   "feature-abs-pointer", "%d", &val);
 +		if (ret < 0)
 +			val = 0;
 +		if (val) {
 +			ret = xenbus_printf(XBT_NIL, info->xbdev->nodename,
 +					    "request-abs-pointer", "1");
  			if (ret)
- 				pr_warning("xenkbd: can't request abs-pointer");
+ 				pr_warn("xenkbd: can't request abs-pointer\n");
  		}
  
  		xenbus_switch_state(dev, XenbusStateConnected);
diff --git a/drivers/input/gameport/gameport.c b/drivers/input/gameport/gameport.c
index da739d9d1905..10f5a523c6ef 100644
--- a/drivers/input/gameport/gameport.c
+++ b/drivers/input/gameport/gameport.c
@@ -348,8 +348,8 @@ static int gameport_queue_event(void *object, struct module *owner,
 	}
 
 	if (!try_module_get(owner)) {
-		pr_warning("Can't get module reference, dropping event %d\n",
-			   event_type);
+		pr_warn("Can't get module reference, dropping event %d\n",
+			event_type);
 		kfree(event);
 		retval = -EINVAL;
 		goto out;
diff --git a/drivers/input/joystick/gamecon.c b/drivers/input/joystick/gamecon.c
index e68e49786483..caed69e29860 100644
--- a/drivers/input/joystick/gamecon.c
+++ b/drivers/input/joystick/gamecon.c
@@ -869,7 +869,8 @@ static int __init gc_setup_pad(struct gc *gc, int idx, int pad_type)
 
 		err = gc_n64_init_ff(input_dev, idx);
 		if (err) {
-			pr_warning("Failed to initiate rumble for N64 device %d\n", idx);
+			pr_warn("Failed to initiate rumble for N64 device %d\n",
+				idx);
 			goto err_free_dev;
 		}
 
diff --git a/drivers/input/misc/apanel.c b/drivers/input/misc/apanel.c
index a8d2b8db4e35..532c7456c789 100644
--- a/drivers/input/misc/apanel.c
+++ b/drivers/input/misc/apanel.c
@@ -314,7 +314,8 @@ static int __init apanel_init(void)
 		if (devno >= APANEL_DEV_MAX)
 			pr_notice(APANEL ": unknown device %u found\n", devno);
 		else if (device_chip[devno] != CHIP_NONE)
-			pr_warning(APANEL ": duplicate entry for devno %u\n", devno);
+			pr_warn(APANEL ": duplicate entry for devno %u\n",
+				devno);
 
 		else if (method != 1 && method != 2 && method != 4) {
 			pr_notice(APANEL ": unknown method %u for devno %u\n",
* Unmerged path drivers/input/misc/xen-kbdfront.c
diff --git a/drivers/input/serio/serio.c b/drivers/input/serio/serio.c
index 30cafd82a761..29d177a56a7e 100644
--- a/drivers/input/serio/serio.c
+++ b/drivers/input/serio/serio.c
@@ -287,8 +287,8 @@ static int serio_queue_event(void *object, struct module *owner,
 	}
 
 	if (!try_module_get(owner)) {
-		pr_warning("Can't get module reference, dropping event %d\n",
-			   event_type);
+		pr_warn("Can't get module reference, dropping event %d\n",
+			event_type);
 		kfree(event);
 		retval = -EINVAL;
 		goto out;
@@ -814,8 +814,8 @@ static void serio_attach_driver(struct serio_driver *drv)
 
 	error = driver_attach(&drv->driver);
 	if (error)
-		pr_warning("driver_attach() failed for %s with error %d\n",
-			   drv->driver.name, error);
+		pr_warn("driver_attach() failed for %s with error %d\n",
+			drv->driver.name, error);
 }
 
 int __serio_register_driver(struct serio_driver *drv, struct module *owner, const char *mod_name)
