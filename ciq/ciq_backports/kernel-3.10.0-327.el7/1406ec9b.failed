mm, hugetlb: improve, cleanup resv_map parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [mm] hugetlb: improve, cleanup resv_map parameters (Aristeu Rozanski) [1252129]
Rebuild_FUZZ: 95.74%
commit-author Joonsoo Kim <iamjoonsoo.kim@lge.com>
commit 1406ec9ba6c65cb69e9243bff07ca3f51e2525e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/1406ec9b.failed

To change a protection method for region tracking to find grained one,
we pass the resv_map, instead of list_head, to region manipulation
functions.

This doesn't introduce any functional change, and it is just for
preparing a next step.

[davidlohr@hp.com: update changelog]
	Signed-off-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Signed-off-by: Davidlohr Bueso <davidlohr@hp.com>
	Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Cc: David Gibson <david@gibson.dropbear.id.au>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 1406ec9ba6c65cb69e9243bff07ca3f51e2525e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/hugetlb.c
diff --cc mm/hugetlb.c
index 7af5a0235d54,454b311373c5..000000000000
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@@ -1268,9 -1164,9 +1272,13 @@@ static long vma_needs_reservation(struc
  	} else  {
  		long err;
  		pgoff_t idx = vma_hugecache_offset(h, vma, addr);
 -		struct resv_map *resv = vma_resv_map(vma);
 +		struct resv_map *reservations = vma_resv_map(vma);
  
++<<<<<<< HEAD
 +		err = region_chg(&reservations->regions, idx, idx + 1);
++=======
+ 		err = region_chg(resv, idx, idx + 1);
++>>>>>>> 1406ec9ba6c6 (mm, hugetlb: improve, cleanup resv_map parameters)
  		if (err < 0)
  			return err;
  		return 0;
@@@ -1290,10 -1186,10 +1298,14 @@@ static void vma_commit_reservation(stru
  
  	} else if (is_vma_resv_set(vma, HPAGE_RESV_OWNER)) {
  		pgoff_t idx = vma_hugecache_offset(h, vma, addr);
 -		struct resv_map *resv = vma_resv_map(vma);
 +		struct resv_map *reservations = vma_resv_map(vma);
  
  		/* Mark this page used in the map. */
++<<<<<<< HEAD
 +		region_add(&reservations->regions, idx, idx + 1);
++=======
+ 		region_add(resv, idx, idx + 1);
++>>>>>>> 1406ec9ba6c6 (mm, hugetlb: improve, cleanup resv_map parameters)
  	}
  }
  
@@@ -2409,7 -2280,7 +2421,11 @@@ static void hugetlb_vm_op_close(struct 
  		end = vma_hugecache_offset(h, vma, vma->vm_end);
  
  		reserve = (end - start) -
++<<<<<<< HEAD
 +			region_count(&reservations->regions, start, end);
++=======
+ 			region_count(resv, start, end);
++>>>>>>> 1406ec9ba6c6 (mm, hugetlb: improve, cleanup resv_map parameters)
  
  		resv_map_put(vma);
  
* Unmerged path mm/hugetlb.c
