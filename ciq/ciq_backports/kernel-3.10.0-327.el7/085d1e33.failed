pnfs: Do not grab the commit_info lock twice when rescheduling writes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Tom Haynes <loghyr@primarydata.com>
commit 085d1e33a6a8495d9afa58ad2b8b7ea74d613515
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/085d1e33.failed

	Acked-by: Jeff Layton <jlayton@primarydata.com>
	Signed-off-by: Tom Haynes <loghyr@primarydata.com>
(cherry picked from commit 085d1e33a6a8495d9afa58ad2b8b7ea74d613515)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/direct.c
#	fs/nfs/pnfs_nfs.c
diff --cc fs/nfs/direct.c
index f13c360ce5c1,e84f764b9dcd..000000000000
--- a/fs/nfs/direct.c
+++ b/fs/nfs/direct.c
@@@ -639,7 -573,20 +639,24 @@@ out
  	return result;
  }
  
++<<<<<<< HEAD
 +#if IS_ENABLED(CONFIG_NFS_V3) || IS_ENABLED(CONFIG_NFS_V4)
++=======
+ static void
+ nfs_direct_write_scan_commit_list(struct inode *inode,
+ 				  struct list_head *list,
+ 				  struct nfs_commit_info *cinfo)
+ {
+ 	spin_lock(cinfo->lock);
+ #ifdef CONFIG_NFS_V4_1
+ 	if (cinfo->ds != NULL && cinfo->ds->nwritten != 0)
+ 		NFS_SERVER(inode)->pnfs_curr_ld->recover_commit_reqs(list, cinfo);
+ #endif
+ 	nfs_scan_commit_list(&cinfo->mds->list, list, cinfo, 0);
+ 	spin_unlock(cinfo->lock);
+ }
+ 
++>>>>>>> 085d1e33a6a8 (pnfs: Do not grab the commit_info lock twice when rescheduling writes)
  static void nfs_direct_write_reschedule(struct nfs_direct_req *dreq)
  {
  	struct nfs_pageio_descriptor desc;
* Unmerged path fs/nfs/pnfs_nfs.c
* Unmerged path fs/nfs/direct.c
diff --git a/fs/nfs/pnfs.h b/fs/nfs/pnfs.h
index 959dfb9c2be3..d18d08223879 100644
--- a/fs/nfs/pnfs.h
+++ b/fs/nfs/pnfs.h
@@ -357,15 +357,6 @@ pnfs_scan_commit_lists(struct inode *inode, struct nfs_commit_info *cinfo,
 		return NFS_SERVER(inode)->pnfs_curr_ld->scan_commit_lists(cinfo, max);
 }
 
-static inline void
-pnfs_recover_commit_reqs(struct inode *inode, struct list_head *list,
-			 struct nfs_commit_info *cinfo)
-{
-	if (cinfo->ds == NULL || cinfo->ds->nwritten == 0)
-		return;
-	NFS_SERVER(inode)->pnfs_curr_ld->recover_commit_reqs(list, cinfo);
-}
-
 static inline struct nfs_page *
 pnfs_search_commit_reqs(struct inode *inode, struct nfs_commit_info *cinfo,
 			struct page *page)
@@ -536,12 +527,6 @@ pnfs_scan_commit_lists(struct inode *inode, struct nfs_commit_info *cinfo,
 	return 0;
 }
 
-static inline void
-pnfs_recover_commit_reqs(struct inode *inode, struct list_head *list,
-			 struct nfs_commit_info *cinfo)
-{
-}
-
 static inline struct nfs_page *
 pnfs_search_commit_reqs(struct inode *inode, struct nfs_commit_info *cinfo,
 			struct page *page)
* Unmerged path fs/nfs/pnfs_nfs.c
