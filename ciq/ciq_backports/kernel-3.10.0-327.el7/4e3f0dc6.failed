ALSA: jack: extend snd_jack_new to support phantom jack

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] jack: extend snd_jack_new to support phantom jack (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 94.23%
commit-author Jie Yang <yang.jie@intel.com>
commit 4e3f0dc65883cac95807549b2f7a3ac183686bcb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/4e3f0dc6.failed

Dont create input devices for phantom jacks.

Here, we extend snd_jack_new() to support phantom jack creating:
pass in a bool param for [non-]phantom flag, and a bool param
initial_jack to indicate whether we need to create a kctl at
this stage.

We can also add a kctl to the jack after its created meaning we
can now integrate the HDA and ASoC jacks.

	Signed-off-by: Jie Yang <yang.jie@intel.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 4e3f0dc65883cac95807549b2f7a3ac183686bcb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/jack.h
#	sound/core/jack.c
#	sound/soc/soc-jack.c
diff --cc include/sound/jack.h
index 58916573db58,23bede121c78..000000000000
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@@ -70,7 -87,8 +70,12 @@@ struct snd_jack 
  #ifdef CONFIG_SND_JACK
  
  int snd_jack_new(struct snd_card *card, const char *id, int type,
++<<<<<<< HEAD
 +		 struct snd_jack **jack);
++=======
+ 		 struct snd_jack **jack, bool initial_kctl, bool phantom_jack);
+ int snd_jack_add_new_kctl(struct snd_jack *jack, const char * name, int mask);
++>>>>>>> 4e3f0dc65883 (ALSA: jack: extend snd_jack_new to support phantom jack)
  void snd_jack_set_parent(struct snd_jack *jack, struct device *parent);
  int snd_jack_set_key(struct snd_jack *jack, enum snd_jack_types type,
  		     int keytype);
@@@ -78,9 -96,8 +83,9 @@@
  void snd_jack_report(struct snd_jack *jack, int status);
  
  #else
 +
  static inline int snd_jack_new(struct snd_card *card, const char *id, int type,
- 			       struct snd_jack **jack)
+ 			       struct snd_jack **jack, bool initial_kctl, bool phantom_jack)
  {
  	return 0;
  }
diff --cc sound/core/jack.c
index 8658578eb584,b34187b072ea..000000000000
--- a/sound/core/jack.c
+++ b/sound/core/jack.c
@@@ -150,6 -247,12 +163,15 @@@ int snd_jack_new(struct snd_card *card
  	if (err < 0)
  		goto fail_input;
  
++<<<<<<< HEAD
++=======
+ 	jack->card = card;
+ 	INIT_LIST_HEAD(&jack->kctl_list);
+ 
+ 	if (initial_kctl)
+ 		snd_jack_kctl_add(jack, jack_kctl);
+ 
++>>>>>>> 4e3f0dc65883 (ALSA: jack: extend snd_jack_new to support phantom jack)
  	*jjack = jack;
  
  	return 0;
diff --cc sound/soc/soc-jack.c
index 0bb5cccd7766,70a9bdd5f3e3..000000000000
--- a/sound/soc/soc-jack.c
+++ b/sound/soc/soc-jack.c
@@@ -42,9 -48,16 +42,20 @@@ int snd_soc_jack_new(struct snd_soc_cod
  	INIT_LIST_HEAD(&jack->jack_zones);
  	BLOCKING_INIT_NOTIFIER_HEAD(&jack->notifier);
  
++<<<<<<< HEAD
 +	return snd_jack_new(codec->card->snd_card, id, type, &jack->jack);
++=======
+ 	ret = snd_jack_new(card->snd_card, id, type, &jack->jack, false, false);
+ 	if (ret)
+ 		return ret;
+ 
+ 	if (num_pins)
+ 		return snd_soc_jack_add_pins(jack, num_pins, pins);
+ 
+ 	return 0;
++>>>>>>> 4e3f0dc65883 (ALSA: jack: extend snd_jack_new to support phantom jack)
  }
 -EXPORT_SYMBOL_GPL(snd_soc_card_jack_new);
 +EXPORT_SYMBOL_GPL(snd_soc_jack_new);
  
  /**
   * snd_soc_jack_report - Report the current status for a jack
* Unmerged path include/sound/jack.h
* Unmerged path sound/core/jack.c
diff --git a/sound/pci/hda/hda_jack.c b/sound/pci/hda/hda_jack.c
index d7cfe7b8c32b..0927aeb3c378 100644
--- a/sound/pci/hda/hda_jack.c
+++ b/sound/pci/hda/hda_jack.c
@@ -417,7 +417,7 @@ static int __snd_hda_jack_add_kctl(struct hda_codec *codec, hda_nid_t nid,
 	if (!phantom_jack) {
 		jack->type = get_input_jack_type(codec, nid);
 		err = snd_jack_new(codec->card, name, jack->type,
-				   &jack->jack);
+				   &jack->jack, false, false);
 		if (err < 0)
 			return err;
 		jack->jack->private_data = jack;
diff --git a/sound/pci/oxygen/xonar_wm87x6.c b/sound/pci/oxygen/xonar_wm87x6.c
index 6ce68604c25e..90ac479f389f 100644
--- a/sound/pci/oxygen/xonar_wm87x6.c
+++ b/sound/pci/oxygen/xonar_wm87x6.c
@@ -286,7 +286,7 @@ static void xonar_ds_init(struct oxygen *chip)
 	xonar_enable_output(chip);
 
 	snd_jack_new(chip->card, "Headphone",
-		     SND_JACK_HEADPHONE, &data->hp_jack);
+		     SND_JACK_HEADPHONE, &data->hp_jack, false, false);
 	xonar_ds_handle_hp_jack(chip);
 
 	snd_component_add(chip->card, "WM8776");
* Unmerged path sound/soc/soc-jack.c
