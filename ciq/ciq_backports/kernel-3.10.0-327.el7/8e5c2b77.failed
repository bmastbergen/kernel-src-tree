Revert "ACPI / video / i915: No ACPI backlight if firmware expects Windows 8"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [acpi] revert "acpi video / i915: No ACPI backlight if firmware expects Windows 8" (Benjamin Tissoires) [1218354]
Rebuild_FUZZ: 98.68%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 8e5c2b776ae4c35f54547c017e0a943429f5748a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8e5c2b77.failed

We attempted to address a regression introduced by commit a57f7f9
(ACPICA: Add Windows8/Server2012 string for _OSI method.) after which
ACPI video backlight support doesn't work on a number of systems,
because the relevant AML methods in the ACPI tables in their BIOSes
become useless after the BIOS has been told that the OS is compatible
with Windows 8.  That problem is tracked by the bug entry at:

https://bugzilla.kernel.org/show_bug.cgi?id=51231

Commit 8c5bd7a (ACPI / video / i915: No ACPI backlight if firmware
expects Windows 8) introduced for this purpose essentially prevented
the ACPI backlight support from being used if the BIOS had been told
that the OS was compatible with Windows 8 and the i915 driver was
loaded, in which case the backlight would always be handled by i915.
Unfortunately, however, that turned out to cause problems with
backlight to appear on multiple systems with symptoms indicating that
i915 was unable to control the backlight on those systems as
expected.

For this reason, revert commit 8c5bd7a, but leave the function
acpi_video_backlight_quirks() introduced by it, because another
commit on top of it uses that function.

References: https://lkml.org/lkml/2013/7/21/119
References: https://lkml.org/lkml/2013/7/22/261
References: https://lkml.org/lkml/2013/7/23/429
References: https://lkml.org/lkml/2013/7/23/459
References: https://lkml.org/lkml/2013/7/23/81
References: https://lkml.org/lkml/2013/7/24/27
Reported-and-tested-by: James Hogan <james@albanarts.com>
Reported-and-tested-by: Kamal Mostafa <kamal@canonical.com>
Reported-and-tested-by: JÃ¶rg Otte <jrg.otte@gmail.com>
Reported-and-tested-by: Steven Newbury <steve@snewbury.org.uk>
	Reported-by: Martin Steigerwald <Martin@lichtvoll.de>
	Reported-by: Kalle Valo <kvalo@adurom.com>
	Tested-by: Joerg Platte <jplatte@naasa.net>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 8e5c2b776ae4c35f54547c017e0a943429f5748a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/internal.h
#	drivers/acpi/video_detect.c
diff --cc drivers/acpi/internal.h
index 1eabf931aaba,5da44e81dd4d..000000000000
--- a/drivers/acpi/internal.h
+++ b/drivers/acpi/internal.h
@@@ -172,4 -164,13 +172,16 @@@ struct platform_device
  int acpi_create_platform_device(struct acpi_device *adev,
  				const struct acpi_device_id *id);
  
++<<<<<<< HEAD
++=======
+ /*--------------------------------------------------------------------------
+ 					Video
+   -------------------------------------------------------------------------- */
+ #if defined(CONFIG_ACPI_VIDEO) || defined(CONFIG_ACPI_VIDEO_MODULE)
+ bool acpi_video_backlight_quirks(void);
+ #else
+ static inline bool acpi_video_backlight_quirks(void) { return false; }
+ #endif
+ 
++>>>>>>> 8e5c2b776ae4 (Revert "ACPI / video / i915: No ACPI backlight if firmware expects Windows 8")
  #endif /* _ACPI_INTERNAL_H_ */
diff --cc drivers/acpi/video_detect.c
index 00bcfb92f3ef,c3397748ba46..000000000000
--- a/drivers/acpi/video_detect.c
+++ b/drivers/acpi/video_detect.c
@@@ -231,6 -236,12 +231,15 @@@ static void acpi_video_caps_check(void
  		acpi_video_get_capabilities(NULL);
  }
  
++<<<<<<< HEAD
++=======
+ bool acpi_video_backlight_quirks(void)
+ {
+ 	return acpi_gbl_osi_data >= ACPI_OSI_WIN_8;
+ }
+ EXPORT_SYMBOL(acpi_video_backlight_quirks);
+ 
++>>>>>>> 8e5c2b776ae4 (Revert "ACPI / video / i915: No ACPI backlight if firmware expects Windows 8")
  /* Promote the vendor interface instead of the generic video module.
   * This function allow DMI blacklists to be implemented by externals
   * platform drivers instead of putting a big blacklist in video_detect.c
* Unmerged path drivers/acpi/internal.h
* Unmerged path drivers/acpi/video_detect.c
