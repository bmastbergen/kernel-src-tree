bonding: don't use bond_next_slave() in bond_info_seq_next()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit f965084535713d952c5bb702806fd6052641b9e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f9650845.failed

We don't need the circular loop there and it's the only current user of
bond_next_slave() - so just use the standard bond_for_each_slave().

CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f965084535713d952c5bb702806fd6052641b9e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_procfs.c
diff --cc drivers/net/bonding/bond_procfs.c
index 4060d41f0ee7,fb868d6c22da..000000000000
--- a/drivers/net/bonding/bond_procfs.c
+++ b/drivers/net/bonding/bond_procfs.c
@@@ -36,11 -37,19 +38,25 @@@ static void *bond_info_seq_next(struct 
  
  	++*pos;
  	if (v == SEQ_START_TOKEN)
 -		return bond_first_slave(bond);
 +		return bond->first_slave;
 +
++<<<<<<< HEAD
 +	slave = slave->next;
  
 +	return (slave == bond->first_slave) ? NULL : slave;
++=======
+ 	if (bond_is_last_slave(bond, v))
+ 		return NULL;
+ 
+ 	bond_for_each_slave(bond, slave, iter) {
+ 		if (found)
+ 			return slave;
+ 		if (slave == v)
+ 			found = true;
+ 	}
+ 
+ 	return NULL;
++>>>>>>> f96508453571 (bonding: don't use bond_next_slave() in bond_info_seq_next())
  }
  
  static void bond_info_seq_stop(struct seq_file *seq, void *v)
* Unmerged path drivers/net/bonding/bond_procfs.c
