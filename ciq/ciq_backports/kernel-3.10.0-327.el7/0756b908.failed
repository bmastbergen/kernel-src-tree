ext4: fix end of region partial cluster handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Eric Whitney <enwlinux@gmail.com>
commit 0756b908a364c217bc2d8063783992ffe338b143
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0756b908.failed

ext4_ext_remove_space() can incorrectly free a partial_cluster if
EAGAIN is encountered while truncating or punching.  Extent removal
should be retried in this case.

It also fails to free a partial cluster when the punched region begins
at the start of a file on that unaligned cluster and where the entire
file has not been punched.  Remove the requirement that all blocks in
the file must have been freed in order to free the partial cluster.

	Signed-off-by: Eric Whitney <enwlinux@gmail.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit 0756b908a364c217bc2d8063783992ffe338b143)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/extents.c
diff --cc fs/ext4/extents.c
index f4be464c1026,9eae2f4916ce..000000000000
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@@ -2983,16 -3009,18 +2983,24 @@@ again
  	trace_ext4_ext_remove_space_done(inode, start, end, depth,
  			partial_cluster, path->p_hdr->eh_entries);
  
- 	/* If we still have something in the partial cluster and we have removed
+ 	/*
+ 	 * If we still have something in the partial cluster and we have removed
  	 * even the first extent, then we should free the blocks in the partial
- 	 * cluster as well. */
- 	if (partial_cluster > 0 && path->p_hdr->eh_entries == 0) {
- 		int flags = get_default_free_blocks_flags(inode);
- 
+ 	 * cluster as well.  (This code will only run when there are no leaves
+ 	 * to the immediate left of the truncated/punched region.)
+ 	 */
+ 	if (partial_cluster > 0 && err == 0) {
+ 		/* don't zero partial_cluster since it's not used afterwards */
  		ext4_free_blocks(handle, inode, NULL,
++<<<<<<< HEAD
 +				 EXT4_C2B(EXT4_SB(sb), partial_cluster),
 +				 EXT4_SB(sb)->s_cluster_ratio, flags);
 +		partial_cluster = 0;
++=======
+ 				 EXT4_C2B(sbi, partial_cluster),
+ 				 sbi->s_cluster_ratio,
+ 				 get_default_free_blocks_flags(inode));
++>>>>>>> 0756b908a364 (ext4: fix end of region partial cluster handling)
  	}
  
  	/* TODO: flexible tree reduction should be here */
* Unmerged path fs/ext4/extents.c
