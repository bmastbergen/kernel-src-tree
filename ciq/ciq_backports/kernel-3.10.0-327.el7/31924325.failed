bonding: remove the unnecessary struct bond_net

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author dingtianhong <dingtianhong@huawei.com>
commit 31924325f59ba94deb255e8ae314eb103141af40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/31924325.failed

Move the structure bond_net forward, and remove the unnecessary structure declaration.

	Cc: Jay Vosburgh <j.vosburgh@gmail.com>
	Cc: Veaceslav Falico <vfalico@gmail.com>
	Cc: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 31924325f59ba94deb255e8ae314eb103141af40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bonding.h
diff --cc drivers/net/bonding/bonding.h
index e1ca02f0b074,1eab9115517d..000000000000
--- a/drivers/net/bonding/bonding.h
+++ b/drivers/net/bonding/bonding.h
@@@ -409,7 -479,23 +409,27 @@@ static inline __be32 bond_confirm_addr(
  	return addr;
  }
  
++<<<<<<< HEAD
 +struct bond_net;
++=======
+ static inline bool slave_can_tx(struct slave *slave)
+ {
+ 	if (IS_UP(slave->dev) && slave->link == BOND_LINK_UP &&
+ 	    bond_is_active_slave(slave))
+ 		return true;
+ 	else
+ 		return false;
+ }
+ 
+ struct bond_net {
+ 	struct net		*net;	/* Associated network namespace */
+ 	struct list_head	dev_list;
+ #ifdef CONFIG_PROC_FS
+ 	struct proc_dir_entry	*proc_dir;
+ #endif
+ 	struct class_attribute	class_attr_bonding_masters;
+ };
++>>>>>>> 31924325f59b (bonding: remove the unnecessary struct bond_net)
  
  int bond_arp_rcv(const struct sk_buff *skb, struct bonding *bond, struct slave *slave);
  void bond_dev_queue_xmit(struct bonding *bond, struct sk_buff *skb, struct net_device *slave_dev);
@@@ -438,16 -520,10 +458,7 @@@ void bond_setup(struct net_device *bond
  unsigned int bond_get_num_tx_queues(void);
  int bond_netlink_init(void);
  void bond_netlink_fini(void);
 -struct net_device *bond_option_active_slave_get_rcu(struct bonding *bond);
 -struct net_device *bond_option_active_slave_get(struct bonding *bond);
 -const char *bond_slave_link_status(s8 link);
  
- struct bond_net {
- 	struct net *		net;	/* Associated network namespace */
- 	struct list_head	dev_list;
- #ifdef CONFIG_PROC_FS
- 	struct proc_dir_entry *	proc_dir;
- #endif
- 	struct class_attribute	class_attr_bonding_masters;
- };
- 
  #ifdef CONFIG_PROC_FS
  void bond_create_proc_entry(struct bonding *bond);
  void bond_remove_proc_entry(struct bonding *bond);
* Unmerged path drivers/net/bonding/bonding.h
