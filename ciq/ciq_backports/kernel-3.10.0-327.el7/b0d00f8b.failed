ACPI / LPSS: drop clkdev_name member from lpss_device_desc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [acpi] lpss: drop clkdev_name member from lpss_device_desc (Prarit Bhargava) [1178891]
Rebuild_FUZZ: 93.58%
commit-author Heikki Krogerus <heikki.krogerus@linux.intel.com>
commit b0d00f8bd526dab6878913dfd5690eee5d4be10e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b0d00f8b.failed

It was used to provide the correct con_id for the dma
driver, but it's not needed. Even if the driver requests a
clock with the con_id, it still gets the correct clock. The
device name is enough to match a single clock.

	Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit b0d00f8bd526dab6878913dfd5690eee5d4be10e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpi_lpss.c
diff --cc drivers/acpi/acpi_lpss.c
index ed5dc78f528a,db3498bc4c2a..000000000000
--- a/drivers/acpi/acpi_lpss.c
+++ b/drivers/acpi/acpi_lpss.c
@@@ -52,19 -70,15 +52,27 @@@ struct lpss_shared_clock 
  struct lpss_private_data;
  
  struct lpss_device_desc {
++<<<<<<< HEAD
 +	bool clk_required;
 +	const char *clkdev_name;
 +	bool ltr_required;
++=======
+ 	unsigned int flags;
++>>>>>>> b0d00f8bd526 (ACPI / LPSS: drop clkdev_name member from lpss_device_desc)
  	unsigned int prv_offset;
  	size_t prv_size_override;
 +	bool clk_gate;
  	struct lpss_shared_clock *shared_clock;
  	void (*setup)(struct lpss_private_data *pdata);
  };
  
  static struct lpss_device_desc lpss_dma_desc = {
++<<<<<<< HEAD
 +	.clk_required = true,
 +	.clkdev_name = "hclk",
++=======
+ 	.flags = LPSS_CLK,
++>>>>>>> b0d00f8bd526 (ACPI / LPSS: drop clkdev_name member from lpss_device_desc)
  };
  
  struct lpss_private_data {
@@@ -202,12 -266,7 +210,16 @@@ static int register_device_clock(struc
  	clk_data = platform_get_drvdata(lpss_clk_dev);
  	if (!clk_data)
  		return -ENODEV;
++<<<<<<< HEAD
 +
 +	if (dev_desc->clkdev_name) {
 +		clk_register_clkdev(clk_data->clk, dev_desc->clkdev_name,
 +				    dev_name(&adev->dev));
 +		return 0;
 +	}
++=======
+ 	clk = clk_data->clk;
++>>>>>>> b0d00f8bd526 (ACPI / LPSS: drop clkdev_name member from lpss_device_desc)
  
  	if (!pdata->mmio_base
  	    || pdata->mmio_size < dev_desc->prv_offset + LPSS_CLK_SIZE)
* Unmerged path drivers/acpi/acpi_lpss.c
