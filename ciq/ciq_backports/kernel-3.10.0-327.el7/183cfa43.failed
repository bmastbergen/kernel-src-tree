IB/iser: Use internal polling budget to avoid possible live-lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [infiniband] iser: Use internal polling budget to avoid possible live-lock (Amir Vadai) [1164539]
Rebuild_FUZZ: 97.60%
commit-author Sagi Grimberg <sagig@mellanox.com>
commit 183cfa434ec90897b1423ce4f916e8a237139133
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/183cfa43.failed

We need a way to guarentee that we don't stay in soft-IRQ context for
too long.  We might starve other pending CQ tasklets or worse lock
against application trying to issue IO on the running CPU.

	Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
	Signed-off-by: Roi Dayan <roid@mellanox.com>
	Signed-off-by: Ariel Nahum <arieln@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 183cfa434ec90897b1423ce4f916e8a237139133)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/iser/iser_verbs.c
diff --cc drivers/infiniband/ulp/iser/iser_verbs.c
index fbf2a1e0f2e2,e31ac57accc9..000000000000
--- a/drivers/infiniband/ulp/iser/iser_verbs.c
+++ b/drivers/infiniband/ulp/iser/iser_verbs.c
@@@ -42,8 -42,11 +42,10 @@@
  #define ISER_MAX_RX_CQ_LEN	(ISER_QP_MAX_RECV_DTOS * ISCSI_ISER_MAX_CONN)
  #define ISER_MAX_TX_CQ_LEN	(ISER_QP_MAX_REQ_DTOS  * ISCSI_ISER_MAX_CONN)
  
+ static int iser_cq_poll_limit = 512;
+ 
  static void iser_cq_tasklet_fn(unsigned long data);
  static void iser_cq_callback(struct ib_cq *cq, void *cq_context);
 -static int iser_drain_tx_cq(struct iser_comp *comp);
  
  static void iser_cq_event_callback(struct ib_event *cause, void *context)
  {
@@@ -1182,7 -1249,9 +1184,13 @@@ static void iser_cq_tasklet_fn(unsigne
  		}
  		completed_rx++;
  		if (!(completed_rx & 63))
++<<<<<<< HEAD
 +			completed_tx += iser_drain_tx_cq(device, cq_index);
++=======
+ 			completed_tx += iser_drain_tx_cq(comp);
+ 		if (completed_rx >= iser_cq_poll_limit)
+ 			break;
++>>>>>>> 183cfa434ec9 (IB/iser: Use internal polling budget to avoid possible live-lock)
  	}
  	/* #warning "it is assumed here that arming CQ only once its empty" *
  	 * " would not cause interrupts to be missed"                       */
* Unmerged path drivers/infiniband/ulp/iser/iser_verbs.c
