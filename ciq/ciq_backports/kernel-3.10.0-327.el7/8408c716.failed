Btrfs: fix wrong error handle when the device is missing or is not writeable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Miao Xie <miaox@cn.fujitsu.com>
commit 8408c716d7a4ddd5954ce33f53a7d3cd2876cf65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8408c716.failed

The original bio might be submitted, so we shoud increase bi_remaining to
account for it when we deal with the error that the device is missing or
is not writeable, or we would skip the endio handle.

	Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit 8408c716d7a4ddd5954ce33f53a7d3cd2876cf65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/volumes.c
diff --cc fs/btrfs/volumes.c
index c9e9926028f3,c83b24251e53..000000000000
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@@ -5581,8 -5424,8 +5590,13 @@@ static void btrfs_end_bio(struct bio *b
  			set_bit(BIO_UPTODATE, &bio->bi_flags);
  			err = 0;
  		}
++<<<<<<< HEAD
 +		kfree(bbio);
 +		bio_endio_nodec(bio, err);
++=======
+ 
+ 		btrfs_end_bbio(bbio, bio, err);
++>>>>>>> 8408c716d7a4 (Btrfs: fix wrong error handle when the device is missing or is not writeable)
  	} else if (!is_orig_bio) {
  		bio_put(bio);
  	}
@@@ -5748,9 -5594,9 +5765,15 @@@ static void bbio_error(struct btrfs_bi
  		bio->bi_private = bbio->private;
  		bio->bi_end_io = bbio->end_io;
  		btrfs_io_bio(bio)->mirror_num = bbio->mirror_num;
++<<<<<<< HEAD
 +		bio->bi_sector = logical >> 9;
 +		kfree(bbio);
 +		bio_endio(bio, -EIO);
++=======
+ 		bio->bi_iter.bi_sector = logical >> 9;
+ 
+ 		btrfs_end_bbio(bbio, bio, -EIO);
++>>>>>>> 8408c716d7a4 (Btrfs: fix wrong error handle when the device is missing or is not writeable)
  	}
  }
  
* Unmerged path fs/btrfs/volumes.c
