nfs: do not start the callback thread until we set rqstp->rq_task

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 66f09ca717e7905e0eebe000b86e27d0274b95ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/66f09ca7.failed

This fixes an Oopsable race when starting up the callback server.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
	Reviewed-by: Jeff Layton <jlayton@primarydata.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 66f09ca717e7905e0eebe000b86e27d0274b95ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/callback.c
diff --cc fs/nfs/callback.c
index 2fac271ca4ef,b8fb3a4ef649..000000000000
--- a/fs/nfs/callback.c
+++ b/fs/nfs/callback.c
@@@ -235,10 -233,10 +235,15 @@@ static int nfs_callback_start_svc(int m
  
  	svc_sock_update_bufs(serv);
  
 +	sprintf(svc_name, "nfsv4.%u-svc", minorversion);
  	cb_info->serv = serv;
  	cb_info->rqst = rqstp;
++<<<<<<< HEAD
 +	cb_info->task = kthread_run(callback_svc, cb_info->rqst, svc_name);
++=======
+ 	cb_info->task = kthread_create(callback_svc, cb_info->rqst,
+ 				    "nfsv4.%u-svc", minorversion);
++>>>>>>> 66f09ca717e7 (nfs: do not start the callback thread until we set rqstp->rq_task)
  	if (IS_ERR(cb_info->task)) {
  		ret = PTR_ERR(cb_info->task);
  		svc_exit_thread(cb_info->rqst);
* Unmerged path fs/nfs/callback.c
