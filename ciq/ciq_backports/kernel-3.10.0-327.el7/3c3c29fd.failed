kvm-vfio: do not use module_init

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 3c3c29fd0d7cddc32862c350d0700ce69953e3bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/3c3c29fd.failed

/me got confused between the kernel and QEMU.  In the kernel, you can
only have one module_init function, and it will prevent unloading the
module unless you also have the corresponding module_exit function.

So, commit 80ce1639727e (KVM: VFIO: register kvm_device_ops dynamically,
2014-09-02) broke unloading of the kvm module, by adding a module_init
function and no module_exit.

Repair it by making kvm_vfio_ops_init weak, and checking it in
kvm_init.

	Cc: Will Deacon <will.deacon@arm.com>
	Cc: Gleb Natapov <gleb@kernel.org>
	Cc: Alex Williamson <Alex.Williamson@redhat.com>
Fixes: 80ce1639727e9d38729c34f162378508c307ca25
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 3c3c29fd0d7cddc32862c350d0700ce69953e3bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/vfio.c
diff --cc virt/kvm/vfio.c
index ba1a93f935c7,281e7cf2b8e5..000000000000
--- a/virt/kvm/vfio.c
+++ b/virt/kvm/vfio.c
@@@ -268,10 -279,7 +269,17 @@@ static int kvm_vfio_create(struct kvm_d
  	return 0;
  }
  
++<<<<<<< HEAD
 +struct kvm_device_ops kvm_vfio_ops = {
 +	.name = "kvm-vfio",
 +	.create = kvm_vfio_create,
 +	.destroy = kvm_vfio_destroy,
 +	.set_attr = kvm_vfio_set_attr,
 +	.has_attr = kvm_vfio_has_attr,
 +};
++=======
+ int kvm_vfio_ops_init(void)
+ {
+ 	return kvm_register_device_ops(&kvm_vfio_ops, KVM_DEV_TYPE_VFIO);
+ }
++>>>>>>> 3c3c29fd0d7c (kvm-vfio: do not use module_init)
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index d94b560606b6..29ed3ad77595 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -57,6 +57,7 @@
 
 #include "coalesced_mmio.h"
 #include "async_pf.h"
+#include "vfio.h"
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/kvm.h>
@@ -3243,6 +3244,9 @@ int kvm_init(void *opaque, unsigned vcpu_size, unsigned vcpu_align,
 		goto out_undebugfs;
 	}
 
+	r = kvm_vfio_ops_init();
+	WARN_ON(r);
+
 	return 0;
 
 out_undebugfs:
* Unmerged path virt/kvm/vfio.c
diff --git a/virt/kvm/vfio.h b/virt/kvm/vfio.h
new file mode 100644
index 000000000000..92eac75d6b62
--- /dev/null
+++ b/virt/kvm/vfio.h
@@ -0,0 +1,13 @@
+#ifndef __KVM_VFIO_H
+#define __KVM_VFIO_H
+
+#ifdef CONFIG_KVM_VFIO
+int kvm_vfio_ops_init(void);
+#else
+static inline int kvm_vfio_ops_init(void)
+{
+	return 0;
+}
+#endif
+
+#endif
