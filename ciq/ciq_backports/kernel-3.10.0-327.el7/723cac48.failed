xfs: lock out page faults from extent swap operations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit 723cac48473358939759885a18e8df113ea96138
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/723cac48.failed

Extent swap operations are another extent manipulation operation
that we need to ensure does not race against mmap page faults. The
current code returns if the file is mapped prior to the swap being
done, but it could potentially race against new page faults while
the swap is in progress. Hence we should use the XFS_MMAPLOCK_EXCL
for this operation, too.

While there, fix the error path handling that can result in double
unlocks of the inodes when cancelling the swapext transaction.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit 723cac48473358939759885a18e8df113ea96138)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_bmap_util.c
diff --cc fs/xfs/xfs_bmap_util.c
index 247d2c73079e,7efa23e72a90..000000000000
--- a/fs/xfs/xfs_bmap_util.c
+++ b/fs/xfs/xfs_bmap_util.c
@@@ -1538,14 -1598,7 +1538,18 @@@ xfs_swap_extent_flush
  
  	/* Verify O_DIRECT for ftmp */
  	if (VFS_I(ip)->i_mapping->nrpages)
++<<<<<<< HEAD
 +		return EINVAL;
 +
 +	/*
 +	 * Don't try to swap extents on mmap()d files because we can't lock
 +	 * out races against page faults safely.
 +	 */
 +	if (mapping_mapped(VFS_I(ip)->i_mapping))
 +		return EBUSY;
++=======
+ 		return -EINVAL;
++>>>>>>> 723cac484733 (xfs: lock out page faults from extent swap operations)
  	return 0;
  }
  
* Unmerged path fs/xfs/xfs_bmap_util.c
