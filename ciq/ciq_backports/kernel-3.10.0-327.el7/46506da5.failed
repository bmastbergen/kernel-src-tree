virtio_pci: add an option to disable legacy driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [virtio] virtio-pci: add an option to disable legacy driver (Jason Wang) [1227339]
Rebuild_FUZZ: 98.00%
commit-author Michael S. Tsirkin <mst@redhat.com>
commit 46506da5f365efe7fe3e4c9da73ab679c0382fac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/46506da5.failed

Useful for testing device virtio 1 compatibility.
Based on patch by Rusty - couldn't resist putting
that flying car joke in there!

	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit 46506da5f365efe7fe3e4c9da73ab679c0382fac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/Makefile
#	drivers/virtio/virtio_pci_common.h
diff --cc drivers/virtio/Makefile
index 9076635697bb,d85565b8ea46..000000000000
--- a/drivers/virtio/Makefile
+++ b/drivers/virtio/Makefile
@@@ -1,4 -1,6 +1,9 @@@
  obj-$(CONFIG_VIRTIO) += virtio.o virtio_ring.o
  obj-$(CONFIG_VIRTIO_MMIO) += virtio_mmio.o
  obj-$(CONFIG_VIRTIO_PCI) += virtio_pci.o
++<<<<<<< HEAD
++=======
+ virtio_pci-y := virtio_pci_modern.o virtio_pci_common.o
+ virtio_pci-$(CONFIG_VIRTIO_PCI_LEGACY) += virtio_pci_legacy.o
++>>>>>>> 46506da5f365 (virtio_pci: add an option to disable legacy driver)
  obj-$(CONFIG_VIRTIO_BALLOON) += virtio_balloon.o
* Unmerged path drivers/virtio/virtio_pci_common.h
diff --git a/drivers/virtio/Kconfig b/drivers/virtio/Kconfig
index 69ea4aef9c88..631e0ede08ab 100644
--- a/drivers/virtio/Kconfig
+++ b/drivers/virtio/Kconfig
@@ -19,6 +19,25 @@ config VIRTIO_PCI
 
 	  If unsure, say M.
 
+config VIRTIO_PCI_LEGACY
+	bool "Support for legacy virtio draft 0.9.X and older devices"
+	default y
+	depends on VIRTIO_PCI
+	---help---
+          Virtio PCI Card 0.9.X Draft (circa 2014) and older device support.
+
+	  This option enables building a transitional driver, supporting
+	  both devices conforming to Virtio 1 specification, and legacy devices.
+	  If disabled, you get a slightly smaller, non-transitional driver,
+	  with no legacy compatibility.
+
+          So look out into your driveway.  Do you have a flying car?  If
+          so, you can happily disable this option and virtio will not
+          break.  Otherwise, leave it set.  Unless you're testing what
+          life will be like in The Future.
+
+	  If unsure, say Y.
+
 config VIRTIO_BALLOON
 	tristate "Virtio balloon driver"
 	depends on VIRTIO
* Unmerged path drivers/virtio/Makefile
* Unmerged path drivers/virtio/virtio_pci_common.h
