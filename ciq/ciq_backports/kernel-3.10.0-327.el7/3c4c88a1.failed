bonding: remove __get_next_port()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 3c4c88a138f0857b9e77266e09ad147d17629401
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/3c4c88a1.failed

Currently this function is only used in constructs like

for (port = __get_first_port(bond); port; port = __get_next_port(port))

which is basicly the same as

bond_for_each_slave(bond, slave, iter) {
	port = &(SLAVE_AD_INFO(slave).port);

but a more time consuming.

Remove the function and convert the users to bond_for_each_slave().

CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3c4c88a138f0857b9e77266e09ad147d17629401)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index 9a9c1907e108,c1535f8762d1..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -143,32 -143,12 +143,35 @@@ static inline struct bonding *__get_bon
   */
  static inline struct port *__get_first_port(struct bonding *bond)
  {
 -	struct slave *first_slave = bond_first_slave(bond);
 +	if (bond->slave_cnt == 0)
 +		return NULL;
 +
 +	return &(SLAVE_AD_INFO(bond->first_slave).port);
 +}
 +
 +/**
++<<<<<<< HEAD
 + * __get_next_port - get the next port in the bond
 + * @port: the port we're looking at
 + *
 + * Return the port of the slave that is next in line of @port's slave in the
 + * bond, or %NULL if it can't be found.
 + */
 +static inline struct port *__get_next_port(struct port *port)
 +{
 +	struct bonding *bond = __get_bond_by_port(port);
 +	struct slave *slave = port->slave;
 +
 +	// If there's no bond for this port, or this is the last slave
 +	if ((bond == NULL) || (slave->next == bond->first_slave))
 +		return NULL;
  
 -	return first_slave ? &(SLAVE_AD_INFO(first_slave).port) : NULL;
 +	return &(SLAVE_AD_INFO(slave->next).port);
  }
  
  /**
++=======
++>>>>>>> 3c4c88a138f0 (bonding: remove __get_next_port())
   * __get_first_agg - get the first aggregator in the bond
   * @bond: the bond we're looking at
   *
* Unmerged path drivers/net/bonding/bond_3ad.c
