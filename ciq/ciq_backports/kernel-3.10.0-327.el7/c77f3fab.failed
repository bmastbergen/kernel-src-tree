kvm: x86: set KVM_REQ_EVENT when updating IRR

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] kvm: set KVM_REQ_EVENT when updating IRR (Radim Krcmar) [1271333]
Rebuild_FUZZ: 94.12%
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit c77f3fab441c3e466b4c3601a475fc31ce156b06
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c77f3fab.failed

After moving PIR to IRR, the interrupt needs to be delivered manually.

	Reported-by: Paolo Bonzini <pbonzini@redhat.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit c77f3fab441c3e466b4c3601a475fc31ce156b06)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/lapic.c
diff --cc arch/x86/kvm/lapic.c
index 3b33363e0cac,168b8759bd73..000000000000
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@@ -344,9 -338,19 +344,22 @@@ void kvm_apic_update_irr(struct kvm_vcp
  	for (i = 0; i <= 7; i++) {
  		pir_val = xchg(&pir[i], 0);
  		if (pir_val)
 -			*((u32 *)(regs + APIC_IRR + i * 0x10)) |= pir_val;
 +			*((u32 *)(apic->regs + APIC_IRR + i * 0x10)) |= pir_val;
  	}
  }
++<<<<<<< HEAD
++=======
+ EXPORT_SYMBOL_GPL(__kvm_apic_update_irr);
+ 
+ void kvm_apic_update_irr(struct kvm_vcpu *vcpu, u32 *pir)
+ {
+ 	struct kvm_lapic *apic = vcpu->arch.apic;
+ 
+ 	__kvm_apic_update_irr(pir, apic->regs);
+ 
+ 	kvm_make_request(KVM_REQ_EVENT, vcpu);
+ }
++>>>>>>> c77f3fab441c (kvm: x86: set KVM_REQ_EVENT when updating IRR)
  EXPORT_SYMBOL_GPL(kvm_apic_update_irr);
  
  static inline void apic_set_irr(int vec, struct kvm_lapic *apic)
* Unmerged path arch/x86/kvm/lapic.c
