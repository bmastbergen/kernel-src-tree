bonding: Advertize vxlan offload features when supported

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 5a7baa78851b8e915480aa596de4bd2f13f31ffb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/5a7baa78.failed

When the underlying device supports TCP offloads for VXLAN/UDP
encapulated traffic, we need to reflect that through the hw_enc_features
field of the bonding net-device. This will cause the xmit path
in the core networking stack to provide bonding with encapsulated
GSO frames to offload into the HW etc.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5a7baa78851b8e915480aa596de4bd2f13f31ffb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index aa34e1bea1e8,3a451b6cd3d5..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -1309,11 -1025,17 +1309,22 @@@ static netdev_features_t bond_fix_featu
  				 NETIF_F_FRAGLIST | NETIF_F_ALL_TSO | \
  				 NETIF_F_HIGHDMA | NETIF_F_LRO)
  
+ #define BOND_ENC_FEATURES	(NETIF_F_ALL_CSUM | NETIF_F_SG | NETIF_F_RXCSUM |\
+ 				 NETIF_F_TSO | NETIF_F_GSO_UDP_TUNNEL)
+ 
  static void bond_compute_features(struct bonding *bond)
  {
++<<<<<<< HEAD
++=======
+ 	unsigned int flags, dst_release_flag = IFF_XMIT_DST_RELEASE;
+ 	netdev_features_t vlan_features = BOND_VLAN_FEATURES;
+ 	netdev_features_t enc_features  = BOND_ENC_FEATURES;
+ 	struct net_device *bond_dev = bond->dev;
+ 	struct list_head *iter;
++>>>>>>> 5a7baa78851b (bonding: Advertize vxlan offload features when supported)
  	struct slave *slave;
 +	struct net_device *bond_dev = bond->dev;
 +	netdev_features_t vlan_features = BOND_VLAN_FEATURES;
  	unsigned short max_hard_header_len = ETH_HLEN;
  	unsigned int gso_max_size = GSO_MAX_SIZE;
  	u16 gso_max_segs = GSO_MAX_SEGS;
* Unmerged path drivers/net/bonding/bond_main.c
