xfs: remove shared supberlock feature checking

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit ab3e57b53f549ad51cbdf85e846ca4eaf0f3be30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ab3e57b5.failed

We reject any filesystem that is mounted with this feature bit set,
so we don't need to check for it anywhere else. Remove the function
for checking if the feature bit is set and any code that uses it.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Jie Liu <jeff.liu@oracle.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit ab3e57b53f549ad51cbdf85e846ca4eaf0f3be30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_sb.h
diff --cc fs/xfs/xfs_sb.h
index 9e6a3d51a942,86a964cc6925..000000000000
--- a/fs/xfs/xfs_sb.h
+++ b/fs/xfs/xfs_sb.h
@@@ -407,18 -394,6 +404,21 @@@ static inline bool xfs_sb_version_hasda
  	return (sbp->sb_versionnum & XFS_SB_VERSION_DALIGNBIT);
  }
  
++<<<<<<< HEAD
 +static inline bool xfs_sb_version_hasshared(struct xfs_sb *sbp)
 +{
 +	return XFS_SB_VERSION_NUM(sbp) == XFS_SB_VERSION_4 &&
 +		(sbp->sb_versionnum & XFS_SB_VERSION_SHAREDBIT);
 +}
 +
 +static inline bool xfs_sb_version_hasdirv2(struct xfs_sb *sbp)
 +{
 +	return XFS_SB_VERSION_NUM(sbp) == XFS_SB_VERSION_5 ||
 +	       (sbp->sb_versionnum & XFS_SB_VERSION_DIRV2BIT);
 +}
 +
++=======
++>>>>>>> ab3e57b53f54 (xfs: remove shared supberlock feature checking)
  static inline bool xfs_sb_version_haslogv2(struct xfs_sb *sbp)
  {
  	return XFS_SB_VERSION_NUM(sbp) == XFS_SB_VERSION_5 ||
diff --git a/fs/xfs/xfs_fsops.c b/fs/xfs/xfs_fsops.c
index 3445ead7c1fc..377556b25aab 100644
--- a/fs/xfs/xfs_fsops.c
+++ b/fs/xfs/xfs_fsops.c
@@ -85,8 +85,6 @@ xfs_fs_geometry(
 				XFS_FSOP_GEOM_FLAGS_IALIGN : 0) |
 			(xfs_sb_version_hasdalign(&mp->m_sb) ?
 				XFS_FSOP_GEOM_FLAGS_DALIGN : 0) |
-			(xfs_sb_version_hasshared(&mp->m_sb) ?
-				XFS_FSOP_GEOM_FLAGS_SHARED : 0) |
 			(xfs_sb_version_hasextflgbit(&mp->m_sb) ?
 				XFS_FSOP_GEOM_FLAGS_EXTFLG : 0) |
 			(xfs_sb_version_hasdirv2(&mp->m_sb) ?
diff --git a/fs/xfs/xfs_sb.c b/fs/xfs/xfs_sb.c
index b98c21d8ea4b..1cadd6d6e801 100644
--- a/fs/xfs/xfs_sb.c
+++ b/fs/xfs/xfs_sb.c
@@ -293,7 +293,8 @@ xfs_mount_validate_sb(
 	    (sbp->sb_imax_pct > 100 /* zero sb_imax_pct is valid */)	||
 	    sbp->sb_dblocks == 0					||
 	    sbp->sb_dblocks > XFS_MAX_DBLOCKS(sbp)			||
-	    sbp->sb_dblocks < XFS_MIN_DBLOCKS(sbp))) {
+	    sbp->sb_dblocks < XFS_MIN_DBLOCKS(sbp)			||
+	    sbp->sb_shared_vn != 0)) {
 		xfs_notice(mp, "SB sanity check failed");
 		return XFS_ERROR(EFSCORRUPTED);
 	}
* Unmerged path fs/xfs/xfs_sb.h
