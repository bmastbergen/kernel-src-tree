net: move net_device priv_flags out from UAPI

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] move net_device priv_flags out from UAPI (Alexander Duyck) [1129761]
Rebuild_FUZZ: 94.12%
commit-author Luis R. Rodriguez <mcgrof@suse.com>
commit 7aa98047df95d7caf0678e939cdd936dfb99cd06
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7aa98047.failed

These are private to userspace, and they're unstable
anyway and can be shuffled at will (see 080e4130b1fb)
so any userspace application relying on them is on crack.

Test compiled with allyesconfig.

mcgrof@drvbp1 /pub/mem/mcgrof/net-next (git::master)$ make allyesconfig
mcgrof@drvbp1 /pub/mem/mcgrof/net-next (git::master)$ time make -j 20
...
  BUILD   arch/x86/boot/bzImage
Setup is 16992 bytes (padded to 17408 bytes).
System is 56153 kB
CRC 721d2751
Kernel: arch/x86/boot/bzImage is ready  (#1)
real    19m35.744s
user    280m37.984s
sys     27m54.104s

	Cc: netdev@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Cc: Ben Hutchings <ben@decadent.org.uk>
	Cc: Florian Fainelli <f.fainelli@gmail.com>
	Cc: David Miller <davem@davemloft.net>
	Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7aa98047df95d7caf0678e939cdd936dfb99cd06)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if.h
diff --cc include/uapi/linux/if.h
index 1ec407b01e46,9cf2394f0bcf..000000000000
--- a/include/uapi/linux/if.h
+++ b/include/uapi/linux/if.h
@@@ -56,35 -112,6 +56,38 @@@
  #define IFF_VOLATILE	(IFF_LOOPBACK|IFF_POINTOPOINT|IFF_BROADCAST|IFF_ECHO|\
  		IFF_MASTER|IFF_SLAVE|IFF_RUNNING|IFF_LOWER_UP|IFF_DORMANT)
  
++<<<<<<< HEAD
 +/* Private (from user) interface flags (netdevice->priv_flags). */
 +#define IFF_802_1Q_VLAN 0x1             /* 802.1Q VLAN device.          */
 +#define IFF_EBRIDGE	0x2		/* Ethernet bridging device.	*/
 +#define IFF_SLAVE_INACTIVE	0x4	/* bonding slave not the curr. active */
 +#define IFF_MASTER_8023AD	0x8	/* bonding master, 802.3ad. 	*/
 +#define IFF_MASTER_ALB	0x10		/* bonding master, balance-alb.	*/
 +#define IFF_BONDING	0x20		/* bonding master or slave	*/
 +#define IFF_SLAVE_NEEDARP 0x40		/* need ARPs for validation	*/
 +#define IFF_ISATAP	0x80		/* ISATAP interface (RFC4214)	*/
 +#define IFF_MASTER_ARPMON 0x100		/* bonding master, ARP mon in use */
 +#define IFF_WAN_HDLC	0x200		/* WAN HDLC device		*/
 +#define IFF_XMIT_DST_RELEASE 0x400	/* dev_hard_start_xmit() is allowed to
 +					 * release skb->dst
 +					 */
 +#define IFF_DONT_BRIDGE 0x800		/* disallow bridging this ether dev */
 +#define IFF_DISABLE_NETPOLL	0x1000	/* disable netpoll at run-time */
 +#define IFF_MACVLAN_PORT	0x2000	/* device used as macvlan port */
 +#define IFF_BRIDGE_PORT	0x4000		/* device used as bridge port */
 +#define IFF_OVS_DATAPATH	0x8000	/* device used as Open vSwitch
 +					 * datapath port */
 +#define IFF_TX_SKB_SHARING	0x10000	/* The interface supports sharing
 +					 * skbs on transmit */
 +#define IFF_UNICAST_FLT	0x20000		/* Supports unicast filtering	*/
 +#define IFF_TEAM_PORT	0x40000		/* device used as team port */
 +#define IFF_SUPP_NOFCS	0x80000		/* device supports sending custom FCS */
 +#define IFF_LIVE_ADDR_CHANGE 0x100000	/* device supports hardware address
 +					 * change when it's running */
 +
 +
++=======
++>>>>>>> 7aa98047df95 (net: move net_device priv_flags out from UAPI)
  #define IF_GET_IFACE	0x0001		/* for querying only */
  #define IF_GET_PROTO	0x0002
  
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index d77c2cff9dff..c7409d3ad31e 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -1125,6 +1125,89 @@ struct net_device_ops {
 	RH_KABI_RESERVE_P(16)
 };
 
+/**
+ * enum net_device_priv_flags - &struct net_device priv_flags
+ *
+ * These are the &struct net_device, they are only set internally
+ * by drivers and used in the kernel. These flags are invisible to
+ * userspace, this means that the order of these flags can change
+ * during any kernel release.
+ *
+ * You should have a pretty good reason to be extending these flags.
+ *
+ * @IFF_802_1Q_VLAN: 802.1Q VLAN device
+ * @IFF_EBRIDGE: Ethernet bridging device
+ * @IFF_SLAVE_INACTIVE: bonding slave not the curr. active
+ * @IFF_MASTER_8023AD: bonding master, 802.3ad
+ * @IFF_MASTER_ALB: bonding master, balance-alb
+ * @IFF_BONDING: bonding master or slave
+ * @IFF_SLAVE_NEEDARP: need ARPs for validation
+ * @IFF_ISATAP: ISATAP interface (RFC4214)
+ * @IFF_MASTER_ARPMON: bonding master, ARP mon in use
+ * @IFF_WAN_HDLC: WAN HDLC device
+ * @IFF_XMIT_DST_RELEASE: dev_hard_start_xmit() is allowed to
+ *	release skb->dst
+ * @IFF_DONT_BRIDGE: disallow bridging this ether dev
+ * @IFF_DISABLE_NETPOLL: disable netpoll at run-time
+ * @IFF_MACVLAN_PORT: device used as macvlan port
+ * @IFF_BRIDGE_PORT: device used as bridge port
+ * @IFF_OVS_DATAPATH: device used as Open vSwitch datapath port
+ * @IFF_TX_SKB_SHARING: The interface supports sharing skbs on transmit
+ * @IFF_UNICAST_FLT: Supports unicast filtering
+ * @IFF_TEAM_PORT: device used as team port
+ * @IFF_SUPP_NOFCS: device supports sending custom FCS
+ * @IFF_LIVE_ADDR_CHANGE: device supports hardware address
+ *	change when it's running
+ * @IFF_MACVLAN: Macvlan device
+ */
+enum netdev_priv_flags {
+	IFF_802_1Q_VLAN			= 1<<0,
+	IFF_EBRIDGE			= 1<<1,
+	IFF_SLAVE_INACTIVE		= 1<<2,
+	IFF_MASTER_8023AD		= 1<<3,
+	IFF_MASTER_ALB			= 1<<4,
+	IFF_BONDING			= 1<<5,
+	IFF_SLAVE_NEEDARP		= 1<<6,
+	IFF_ISATAP			= 1<<7,
+	IFF_MASTER_ARPMON		= 1<<8,
+	IFF_WAN_HDLC			= 1<<9,
+	IFF_XMIT_DST_RELEASE		= 1<<10,
+	IFF_DONT_BRIDGE			= 1<<11,
+	IFF_DISABLE_NETPOLL		= 1<<12,
+	IFF_MACVLAN_PORT		= 1<<13,
+	IFF_BRIDGE_PORT			= 1<<14,
+	IFF_OVS_DATAPATH		= 1<<15,
+	IFF_TX_SKB_SHARING		= 1<<16,
+	IFF_UNICAST_FLT			= 1<<17,
+	IFF_TEAM_PORT			= 1<<18,
+	IFF_SUPP_NOFCS			= 1<<19,
+	IFF_LIVE_ADDR_CHANGE		= 1<<20,
+	IFF_MACVLAN			= 1<<21,
+};
+
+#define IFF_802_1Q_VLAN			IFF_802_1Q_VLAN
+#define IFF_EBRIDGE			IFF_EBRIDGE
+#define IFF_SLAVE_INACTIVE		IFF_SLAVE_INACTIVE
+#define IFF_MASTER_8023AD		IFF_MASTER_8023AD
+#define IFF_MASTER_ALB			IFF_MASTER_ALB
+#define IFF_BONDING			IFF_BONDING
+#define IFF_SLAVE_NEEDARP		IFF_SLAVE_NEEDARP
+#define IFF_ISATAP			IFF_ISATAP
+#define IFF_MASTER_ARPMON		IFF_MASTER_ARPMON
+#define IFF_WAN_HDLC			IFF_WAN_HDLC
+#define IFF_XMIT_DST_RELEASE		IFF_XMIT_DST_RELEASE
+#define IFF_DONT_BRIDGE			IFF_DONT_BRIDGE
+#define IFF_DISABLE_NETPOLL		IFF_DISABLE_NETPOLL
+#define IFF_MACVLAN_PORT		IFF_MACVLAN_PORT
+#define IFF_BRIDGE_PORT			IFF_BRIDGE_PORT
+#define IFF_OVS_DATAPATH		IFF_OVS_DATAPATH
+#define IFF_TX_SKB_SHARING		IFF_TX_SKB_SHARING
+#define IFF_UNICAST_FLT			IFF_UNICAST_FLT
+#define IFF_TEAM_PORT			IFF_TEAM_PORT
+#define IFF_SUPP_NOFCS			IFF_SUPP_NOFCS
+#define IFF_LIVE_ADDR_CHANGE		IFF_LIVE_ADDR_CHANGE
+#define IFF_MACVLAN			IFF_MACVLAN
+
 /*
  *	The DEVICE structure.
  *	Actually, this whole structure is a big mistake.  It mixes I/O
* Unmerged path include/uapi/linux/if.h
