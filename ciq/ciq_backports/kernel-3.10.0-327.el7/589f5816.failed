net: kdoc struct net_device flags and priv_flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] kdoc struct net_device flags and priv_flags (Alexander Duyck) [1129761]
Rebuild_FUZZ: 94.51%
commit-author Luis R. Rodriguez <mcgrof@suse.com>
commit 589f5816f3f660aa4b1c93fc9eac58a1e807bbbb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/589f5816.failed

We have documentation for these flags but they're scattered
all over the place. #defines don't allow documentation to be
written easily so to help to start bringing some documentation
together use the enums kdoc practice but keep the defines to
allow userspace to be able to #ifdef them.

I've verified the same values are assigned before and after
with a simple userspace test program [0] and checksumming the
output.

[0] http://drvbp1.linux-foundation.org/~mcgrof/kdoc/netdev_flags/

mcgrof@gnat ~/tmp $ ./check-flags | sha1sum
0ec5b6b1840aa3bb9ce464e61c564820871c92c3  -

	Cc: netdev@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Cc: Ben Hutchings <ben@decadent.org.uk>
	Cc: Florian Fainelli <f.fainelli@gmail.com>
	Cc: David Miller <davem@davemloft.net>
	Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 589f5816f3f660aa4b1c93fc9eac58a1e807bbbb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if.h
diff --cc include/uapi/linux/if.h
index 1ec407b01e46,42ec87994cf6..000000000000
--- a/include/uapi/linux/if.h
+++ b/include/uapi/linux/if.h
@@@ -56,34 -112,88 +112,118 @@@ enum net_device_flags 
  #define IFF_VOLATILE	(IFF_LOOPBACK|IFF_POINTOPOINT|IFF_BROADCAST|IFF_ECHO|\
  		IFF_MASTER|IFF_SLAVE|IFF_RUNNING|IFF_LOWER_UP|IFF_DORMANT)
  
++<<<<<<< HEAD
 +/* Private (from user) interface flags (netdevice->priv_flags). */
 +#define IFF_802_1Q_VLAN 0x1             /* 802.1Q VLAN device.          */
 +#define IFF_EBRIDGE	0x2		/* Ethernet bridging device.	*/
 +#define IFF_SLAVE_INACTIVE	0x4	/* bonding slave not the curr. active */
 +#define IFF_MASTER_8023AD	0x8	/* bonding master, 802.3ad. 	*/
 +#define IFF_MASTER_ALB	0x10		/* bonding master, balance-alb.	*/
 +#define IFF_BONDING	0x20		/* bonding master or slave	*/
 +#define IFF_SLAVE_NEEDARP 0x40		/* need ARPs for validation	*/
 +#define IFF_ISATAP	0x80		/* ISATAP interface (RFC4214)	*/
 +#define IFF_MASTER_ARPMON 0x100		/* bonding master, ARP mon in use */
 +#define IFF_WAN_HDLC	0x200		/* WAN HDLC device		*/
 +#define IFF_XMIT_DST_RELEASE 0x400	/* dev_hard_start_xmit() is allowed to
 +					 * release skb->dst
 +					 */
 +#define IFF_DONT_BRIDGE 0x800		/* disallow bridging this ether dev */
 +#define IFF_DISABLE_NETPOLL	0x1000	/* disable netpoll at run-time */
 +#define IFF_MACVLAN_PORT	0x2000	/* device used as macvlan port */
 +#define IFF_BRIDGE_PORT	0x4000		/* device used as bridge port */
 +#define IFF_OVS_DATAPATH	0x8000	/* device used as Open vSwitch
 +					 * datapath port */
 +#define IFF_TX_SKB_SHARING	0x10000	/* The interface supports sharing
 +					 * skbs on transmit */
 +#define IFF_UNICAST_FLT	0x20000		/* Supports unicast filtering	*/
 +#define IFF_TEAM_PORT	0x40000		/* device used as team port */
 +#define IFF_SUPP_NOFCS	0x80000		/* device supports sending custom FCS */
 +#define IFF_LIVE_ADDR_CHANGE 0x100000	/* device supports hardware address
 +					 * change when it's running */
++=======
+ /**
+  * enum net_device_priv_flags - &struct net_device priv_flags
+  *
+  * These are the &struct net_device, they are only set internally
+  * by drivers and used in the kernel. These flags are invisible to
+  * userspace, this means that the order of these flags can change
+  * during any kernel release.
+  *
+  * You should have a pretty good reason to be extending these flags.
+  *
+  * @IFF_802_1Q_VLAN: 802.1Q VLAN device
+  * @IFF_EBRIDGE: Ethernet bridging device
+  * @IFF_SLAVE_INACTIVE: bonding slave not the curr. active
+  * @IFF_MASTER_8023AD: bonding master, 802.3ad
+  * @IFF_MASTER_ALB: bonding master, balance-alb
+  * @IFF_BONDING: bonding master or slave
+  * @IFF_SLAVE_NEEDARP: need ARPs for validation
+  * @IFF_ISATAP: ISATAP interface (RFC4214)
+  * @IFF_MASTER_ARPMON: bonding master, ARP mon in use
+  * @IFF_WAN_HDLC: WAN HDLC device
+  * @IFF_XMIT_DST_RELEASE: dev_hard_start_xmit() is allowed to
+  *	release skb->dst
+  * @IFF_DONT_BRIDGE: disallow bridging this ether dev
+  * @IFF_DISABLE_NETPOLL: disable netpoll at run-time
+  * @IFF_MACVLAN_PORT: device used as macvlan port
+  * @IFF_BRIDGE_PORT: device used as bridge port
+  * @IFF_OVS_DATAPATH: device used as Open vSwitch datapath port
+  * @IFF_TX_SKB_SHARING: The interface supports sharing skbs on transmit
+  * @IFF_UNICAST_FLT: Supports unicast filtering
+  * @IFF_TEAM_PORT: device used as team port
+  * @IFF_SUPP_NOFCS: device supports sending custom FCS
+  * @IFF_LIVE_ADDR_CHANGE: device supports hardware address
+  *	change when it's running
+  * @IFF_MACVLAN: Macvlan device
+  */
+ enum netdev_priv_flags {
+ 	IFF_802_1Q_VLAN			= 1<<0,
+ 	IFF_EBRIDGE			= 1<<1,
+ 	IFF_SLAVE_INACTIVE		= 1<<2,
+ 	IFF_MASTER_8023AD		= 1<<3,
+ 	IFF_MASTER_ALB			= 1<<4,
+ 	IFF_BONDING			= 1<<5,
+ 	IFF_SLAVE_NEEDARP		= 1<<6,
+ 	IFF_ISATAP			= 1<<7,
+ 	IFF_MASTER_ARPMON		= 1<<8,
+ 	IFF_WAN_HDLC			= 1<<9,
+ 	IFF_XMIT_DST_RELEASE		= 1<<10,
+ 	IFF_DONT_BRIDGE			= 1<<11,
+ 	IFF_DISABLE_NETPOLL		= 1<<12,
+ 	IFF_MACVLAN_PORT		= 1<<13,
+ 	IFF_BRIDGE_PORT			= 1<<14,
+ 	IFF_OVS_DATAPATH		= 1<<15,
+ 	IFF_TX_SKB_SHARING		= 1<<16,
+ 	IFF_UNICAST_FLT			= 1<<17,
+ 	IFF_TEAM_PORT			= 1<<18,
+ 	IFF_SUPP_NOFCS			= 1<<19,
+ 	IFF_LIVE_ADDR_CHANGE		= 1<<20,
+ 	IFF_MACVLAN			= 1<<21,
+ };
++>>>>>>> 589f5816f3f6 (net: kdoc struct net_device flags and priv_flags)
  
+ #define IFF_802_1Q_VLAN			IFF_802_1Q_VLAN
+ #define IFF_EBRIDGE			IFF_EBRIDGE
+ #define IFF_SLAVE_INACTIVE		IFF_SLAVE_INACTIVE
+ #define IFF_MASTER_8023AD		IFF_MASTER_8023AD
+ #define IFF_MASTER_ALB			IFF_MASTER_ALB
+ #define IFF_BONDING			IFF_BONDING
+ #define IFF_SLAVE_NEEDARP		IFF_SLAVE_NEEDARP
+ #define IFF_ISATAP			IFF_ISATAP
+ #define IFF_MASTER_ARPMON		IFF_MASTER_ARPMON
+ #define IFF_WAN_HDLC			IFF_WAN_HDLC
+ #define IFF_XMIT_DST_RELEASE		IFF_XMIT_DST_RELEASE
+ #define IFF_DONT_BRIDGE			IFF_DONT_BRIDGE
+ #define IFF_DISABLE_NETPOLL		IFF_DISABLE_NETPOLL
+ #define IFF_MACVLAN_PORT		IFF_MACVLAN_PORT
+ #define IFF_BRIDGE_PORT			IFF_BRIDGE_PORT
+ #define IFF_OVS_DATAPATH		IFF_OVS_DATAPATH
+ #define IFF_TX_SKB_SHARING		IFF_TX_SKB_SHARING
+ #define IFF_UNICAST_FLT			IFF_UNICAST_FLT
+ #define IFF_TEAM_PORT			IFF_TEAM_PORT
+ #define IFF_SUPP_NOFCS			IFF_SUPP_NOFCS
+ #define IFF_LIVE_ADDR_CHANGE		IFF_LIVE_ADDR_CHANGE
+ #define IFF_MACVLAN			IFF_MACVLAN
  
  #define IF_GET_IFACE	0x0001		/* for querying only */
  #define IF_GET_PROTO	0x0002
* Unmerged path include/uapi/linux/if.h
