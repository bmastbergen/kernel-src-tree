KVM: x86: revert "add method to test PIR bitmap vector"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [kvm] x86: revert "add method to test PIR bitmap vector" (Bandan Das) [1209995]
Rebuild_FUZZ: 95.24%
commit-author Marcelo Tosatti <mtosatti@redhat.com>
commit 2e6d015799d523dcce11c7d1465e6feb7b69fab1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2e6d0157.failed

Revert 7c6a98dfa1ba9dc64a62e73624ecea9995736bbd, given
that testing PIR is not necessary anymore.

	Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 2e6d015799d523dcce11c7d1465e6feb7b69fab1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index a4fa771e3adf,15b78936c101..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -6899,11 -6988,29 +6893,37 @@@ static int handle_invvpid(struct kvm_vc
  	return 1;
  }
  
++<<<<<<< HEAD
 +static bool vmx_test_pir(struct kvm_vcpu *vcpu, int vector)
 +{
 +	struct vcpu_vmx *vmx = to_vmx(vcpu);
 +
 +	return pi_test_pir(vector, &vmx->pi_desc);
++=======
+ static int handle_pml_full(struct kvm_vcpu *vcpu)
+ {
+ 	unsigned long exit_qualification;
+ 
+ 	trace_kvm_pml_full(vcpu->vcpu_id);
+ 
+ 	exit_qualification = vmcs_readl(EXIT_QUALIFICATION);
+ 
+ 	/*
+ 	 * PML buffer FULL happened while executing iret from NMI,
+ 	 * "blocked by NMI" bit has to be set before next VM entry.
+ 	 */
+ 	if (!(to_vmx(vcpu)->idt_vectoring_info & VECTORING_INFO_VALID_MASK) &&
+ 			cpu_has_virtual_nmis() &&
+ 			(exit_qualification & INTR_INFO_UNBLOCK_NMI))
+ 		vmcs_set_bits(GUEST_INTERRUPTIBILITY_INFO,
+ 				GUEST_INTR_STATE_NMI);
+ 
+ 	/*
+ 	 * PML buffer already flushed at beginning of VMEXIT. Nothing to do
+ 	 * here.., and there's no userspace involvement needed for PML.
+ 	 */
+ 	return 1;
++>>>>>>> 2e6d015799d5 (KVM: x86: revert "add method to test PIR bitmap vector")
  }
  
  /*
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 85892f251941..38ed1ad6d10d 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -758,7 +758,6 @@ struct kvm_x86_ops {
 	void (*set_virtual_x2apic_mode)(struct kvm_vcpu *vcpu, bool set);
 	void (*set_apic_access_page_addr)(struct kvm_vcpu *vcpu, hpa_t hpa);
 	void (*deliver_posted_interrupt)(struct kvm_vcpu *vcpu, int vector);
-	bool (*test_posted_interrupt)(struct kvm_vcpu *vcpu, int vector);
 	void (*sync_pir_to_irr)(struct kvm_vcpu *vcpu);
 	int (*set_tss_addr)(struct kvm *kvm, unsigned int addr);
 	int (*get_tdp_level)(void);
* Unmerged path arch/x86/kvm/vmx.c
