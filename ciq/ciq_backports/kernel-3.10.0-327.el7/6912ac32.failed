KVM: x86/vPMU: Enable PMU handling for AMD PERFCTRn and EVNTSELn MSRs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] kvm: Enable PMU handling for AMD PERFCTRn and EVNTSELn MSRs (Wei Huang) [1076010]
Rebuild_FUZZ: 92.19%
commit-author Wei Huang <wei@redhat.com>
commit 6912ac326d3aab9c0774ebec99f60a73fd04a520
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/6912ac32.failed

This patch enables AMD guest VM to access (R/W) PMU related MSRs, which
include PERFCTR[0..3] and EVNTSEL[0..3].

	Reviewed-by: Joerg Roedel <jroedel@suse.de>
	Tested-by: Joerg Roedel <jroedel@suse.de>
	Reviewed-by: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: Wei Huang <wei@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 6912ac326d3aab9c0774ebec99f60a73fd04a520)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index b974c76d1459,613e13a61cb5..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -2267,37 -2202,12 +2267,46 @@@ int kvm_set_msr_common(struct kvm_vcpu 
  	case MSR_IA32_MC0_CTL ... MSR_IA32_MCx_CTL(KVM_MAX_MCE_BANKS) - 1:
  		return set_msr_mce(vcpu, msr, data);
  
++<<<<<<< HEAD
 +	/* Performance counters are not protected by a CPUID bit,
 +	 * so we should check all of them in the generic path for the sake of
 +	 * cross vendor migration.
 +	 * Writing a zero into the event select MSRs disables them,
 +	 * which we perfectly emulate ;-). Any other value should be at least
 +	 * reported, some guests depend on them.
 +	 */
 +	case MSR_K7_EVNTSEL0:
 +	case MSR_K7_EVNTSEL1:
 +	case MSR_K7_EVNTSEL2:
 +	case MSR_K7_EVNTSEL3:
 +		if (data != 0)
 +			vcpu_unimpl(vcpu, "unimplemented perfctr wrmsr: "
 +				    "0x%x data 0x%llx\n", msr, data);
 +		break;
 +	/* at least RHEL 4 unconditionally writes to the perfctr registers,
 +	 * so we ignore writes to make it happy.
 +	 */
 +	case MSR_K7_PERFCTR0:
 +	case MSR_K7_PERFCTR1:
 +	case MSR_K7_PERFCTR2:
 +	case MSR_K7_PERFCTR3:
 +		vcpu_unimpl(vcpu, "unimplemented perfctr wrmsr: "
 +			    "0x%x data 0x%llx\n", msr, data);
 +		break;
 +	case MSR_P6_PERFCTR0:
 +	case MSR_P6_PERFCTR1:
 +		pr = true;
 +	case MSR_P6_EVNTSEL0:
 +	case MSR_P6_EVNTSEL1:
 +		if (kvm_pmu_msr(vcpu, msr))
++=======
+ 	case MSR_K7_PERFCTR0 ... MSR_K7_PERFCTR3:
+ 	case MSR_P6_PERFCTR0 ... MSR_P6_PERFCTR1:
+ 		pr = true; /* fall through */
+ 	case MSR_K7_EVNTSEL0 ... MSR_K7_EVNTSEL3:
+ 	case MSR_P6_EVNTSEL0 ... MSR_P6_EVNTSEL1:
+ 		if (kvm_pmu_is_valid_msr(vcpu, msr))
++>>>>>>> 6912ac326d3a (KVM: x86/vPMU: Enable PMU handling for AMD PERFCTRn and EVNTSELn MSRs)
  			return kvm_pmu_set_msr(vcpu, msr_info);
  
  		if (pr || data != 0)
@@@ -2531,26 -2397,24 +2532,36 @@@ int kvm_get_msr_common(struct kvm_vcpu 
  	case MSR_AMD64_NB_CFG:
  	case MSR_FAM10H_MMIO_CONF_BASE:
  	case MSR_AMD64_BU_CFG2:
 -		msr_info->data = 0;
 +		data = 0;
  		break;
++<<<<<<< HEAD
 +	case MSR_P6_PERFCTR0:
 +	case MSR_P6_PERFCTR1:
 +	case MSR_P6_EVNTSEL0:
 +	case MSR_P6_EVNTSEL1:
 +		if (kvm_pmu_msr(vcpu, msr))
 +			return kvm_pmu_get_msr(vcpu, msr, pdata);
 +		data = 0;
++=======
+ 	case MSR_K7_EVNTSEL0 ... MSR_K7_EVNTSEL3:
+ 	case MSR_K7_PERFCTR0 ... MSR_K7_PERFCTR3:
+ 	case MSR_P6_PERFCTR0 ... MSR_P6_PERFCTR1:
+ 	case MSR_P6_EVNTSEL0 ... MSR_P6_EVNTSEL1:
+ 		if (kvm_pmu_is_valid_msr(vcpu, msr_info->index))
+ 			return kvm_pmu_get_msr(vcpu, msr_info->index, &msr_info->data);
+ 		msr_info->data = 0;
++>>>>>>> 6912ac326d3a (KVM: x86/vPMU: Enable PMU handling for AMD PERFCTRn and EVNTSELn MSRs)
  		break;
  	case MSR_IA32_UCODE_REV:
 -		msr_info->data = 0x100000000ULL;
 +		data = 0x100000000ULL;
  		break;
  	case MSR_MTRRcap:
 +		data = 0x500 | KVM_NR_VAR_MTRR;
 +		break;
  	case 0x200 ... 0x2ff:
 -		return kvm_mtrr_get_msr(vcpu, msr_info->index, &msr_info->data);
 +		return get_msr_mtrr(vcpu, msr, pdata);
  	case 0xcd: /* fsb frequency */
 -		msr_info->data = 3;
 +		data = 3;
  		break;
  		/*
  		 * MSR_EBC_FREQUENCY_ID
* Unmerged path arch/x86/kvm/x86.c
