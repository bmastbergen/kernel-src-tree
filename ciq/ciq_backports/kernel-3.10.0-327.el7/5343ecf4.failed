ALSA: line6: Fix the error recovery in line6_pcm_acquire()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Fix the error recovery in line6_pcm_acquire() (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 94.55%
commit-author Takashi Iwai <tiwai@suse.de>
commit 5343ecf4e5c94aecdd6a859b76c125c3544865d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/5343ecf4.failed

line6_pcm_acquire() tries to restore the newly obtained resources at
the error path.  But some flags aren't recorded and released properly
when the corresponding buffer is already present.  These bits have to
be cleared in the error recovery, too.

Also, "flags_final" can be initialized to zero since we pass only the
subset of "channels" bits.

	Tested-by: Chris Rorvick <chris@rorvick.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 5343ecf4e5c94aecdd6a859b76c125c3544865d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/pcm.c
diff --cc drivers/staging/line6/pcm.c
index cfc50624f3e2,9a2a15f4c4e4..000000000000
--- a/drivers/staging/line6/pcm.c
+++ b/drivers/staging/line6/pcm.c
@@@ -107,11 -98,15 +107,23 @@@ static bool test_flags(unsigned long fl
  
  int line6_pcm_acquire(struct snd_line6_pcm *line6pcm, int channels)
  {
++<<<<<<< HEAD:drivers/staging/line6/pcm.c
 +	unsigned long flags_old =
 +	    __sync_fetch_and_or(&line6pcm->flags, channels);
 +	unsigned long flags_new = flags_old | channels;
 +	unsigned long flags_final = flags_old;
 +	int err = 0;
++=======
+ 	unsigned long flags_old, flags_new, flags_final;
+ 	int err;
+ 
+ 	do {
+ 		flags_old = ACCESS_ONCE(line6pcm->flags);
+ 		flags_new = flags_old | channels;
+ 	} while (cmpxchg(&line6pcm->flags, flags_old, flags_new) != flags_old);
+ 
+ 	flags_final = 0;
++>>>>>>> 5343ecf4e5c9 (ALSA: line6: Fix the error recovery in line6_pcm_acquire()):sound/usb/line6/pcm.c
  
  	line6pcm->prev_fbuf = NULL;
  
@@@ -192,9 -187,10 +204,9 @@@ pcm_acquire_error
  	   If not all requested resources/streams could be obtained, release
  	   those which were successfully obtained (if any).
  	*/
- 	line6_pcm_release(line6pcm, flags_final & channels);
+ 	line6_pcm_release(line6pcm, flags_final);
  	return err;
  }
 -EXPORT_SYMBOL_GPL(line6_pcm_acquire);
  
  int line6_pcm_release(struct snd_line6_pcm *line6pcm, int channels)
  {
* Unmerged path drivers/staging/line6/pcm.c
