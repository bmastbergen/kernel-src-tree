tools/power turbostat: update PERF_LIMIT_REASONS decoding

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [tools] turbostat: update PERF_LIMIT_REASONS decoding (Prarit Bhargava) [1187329]
Rebuild_FUZZ: 88.24%
commit-author Len Brown <len.brown@intel.com>
commit e33cbe852de48c313a8a52686765c58a711dd9e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/e33cbe85.failed

cosmetic only.

order the decoding of MSR_PERF_LIMIT_REASONS bits
from MSB to LSB -- which you notice when more than 1 bit is set
and you are, say, comparing the output to the documentation...

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit e33cbe852de48c313a8a52686765c58a711dd9e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 4941c7e942b5,50ef8577b91f..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -1621,6 -1677,103 +1621,106 @@@ int print_epb(struct thread_data *t, st
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * print_perf_limit()
+  */
+ int print_perf_limit(struct thread_data *t, struct core_data *c, struct pkg_data *p)
+ {
+ 	unsigned long long msr;
+ 	int cpu;
+ 
+ 	cpu = t->cpu_id;
+ 
+ 	/* per-package */
+ 	if (!(t->flags & CPU_IS_FIRST_THREAD_IN_CORE) || !(t->flags & CPU_IS_FIRST_CORE_IN_PACKAGE))
+ 		return 0;
+ 
+ 	if (cpu_migrate(cpu)) {
+ 		fprintf(stderr, "Could not migrate to CPU %d\n", cpu);
+ 		return -1;
+ 	}
+ 
+ 	if (do_core_perf_limit_reasons) {
+ 		get_msr(cpu, MSR_CORE_PERF_LIMIT_REASONS, &msr);
+ 		fprintf(stderr, "cpu%d: MSR_CORE_PERF_LIMIT_REASONS, 0x%08llx", cpu, msr);
+ 		fprintf(stderr, " (Active: %s%s%s%s%s%s%s%s%s%s%s%s%s%s)",
+ 			(msr & 1 << 15) ? "bit15, " : "",
+ 			(msr & 1 << 14) ? "bit14, " : "",
+ 			(msr & 1 << 13) ? "Transitions, " : "",
+ 			(msr & 1 << 12) ? "MultiCoreTurbo, " : "",
+ 			(msr & 1 << 11) ? "PkgPwrL2, " : "",
+ 			(msr & 1 << 10) ? "PkgPwrL1, " : "",
+ 			(msr & 1 << 9) ? "CorePwr, " : "",
+ 			(msr & 1 << 8) ? "Amps, " : "",
+ 			(msr & 1 << 6) ? "VR-Therm, " : "",
+ 			(msr & 1 << 5) ? "Auto-HWP, " : "",
+ 			(msr & 1 << 4) ? "Graphics, " : "",
+ 			(msr & 1 << 2) ? "bit2, " : "",
+ 			(msr & 1 << 1) ? "ThermStatus, " : "",
+ 			(msr & 1 << 0) ? "PROCHOT, " : "");
+ 		fprintf(stderr, " (Logged: %s%s%s%s%s%s%s%s%s%s%s%s%s%s)\n",
+ 			(msr & 1 << 31) ? "bit31, " : "",
+ 			(msr & 1 << 30) ? "bit30, " : "",
+ 			(msr & 1 << 29) ? "Transitions, " : "",
+ 			(msr & 1 << 28) ? "MultiCoreTurbo, " : "",
+ 			(msr & 1 << 27) ? "PkgPwrL2, " : "",
+ 			(msr & 1 << 26) ? "PkgPwrL1, " : "",
+ 			(msr & 1 << 25) ? "CorePwr, " : "",
+ 			(msr & 1 << 24) ? "Amps, " : "",
+ 			(msr & 1 << 22) ? "VR-Therm, " : "",
+ 			(msr & 1 << 21) ? "Auto-HWP, " : "",
+ 			(msr & 1 << 20) ? "Graphics, " : "",
+ 			(msr & 1 << 18) ? "bit18, " : "",
+ 			(msr & 1 << 17) ? "ThermStatus, " : "",
+ 			(msr & 1 << 16) ? "PROCHOT, " : "");
+ 
+ 	}
+ 	if (do_gfx_perf_limit_reasons) {
+ 		get_msr(cpu, MSR_GFX_PERF_LIMIT_REASONS, &msr);
+ 		fprintf(stderr, "cpu%d: MSR_GFX_PERF_LIMIT_REASONS, 0x%08llx", cpu, msr);
+ 		fprintf(stderr, " (Active: %s%s%s%s%s%s%s%s)",
+ 			(msr & 1 << 0) ? "PROCHOT, " : "",
+ 			(msr & 1 << 1) ? "ThermStatus, " : "",
+ 			(msr & 1 << 4) ? "Graphics, " : "",
+ 			(msr & 1 << 6) ? "VR-Therm, " : "",
+ 			(msr & 1 << 8) ? "Amps, " : "",
+ 			(msr & 1 << 9) ? "GFXPwr, " : "",
+ 			(msr & 1 << 10) ? "PkgPwrL1, " : "",
+ 			(msr & 1 << 11) ? "PkgPwrL2, " : "");
+ 		fprintf(stderr, " (Logged: %s%s%s%s%s%s%s%s)\n",
+ 			(msr & 1 << 16) ? "PROCHOT, " : "",
+ 			(msr & 1 << 17) ? "ThermStatus, " : "",
+ 			(msr & 1 << 20) ? "Graphics, " : "",
+ 			(msr & 1 << 22) ? "VR-Therm, " : "",
+ 			(msr & 1 << 24) ? "Amps, " : "",
+ 			(msr & 1 << 25) ? "GFXPwr, " : "",
+ 			(msr & 1 << 26) ? "PkgPwrL1, " : "",
+ 			(msr & 1 << 27) ? "PkgPwrL2, " : "");
+ 	}
+ 	if (do_ring_perf_limit_reasons) {
+ 		get_msr(cpu, MSR_RING_PERF_LIMIT_REASONS, &msr);
+ 		fprintf(stderr, "cpu%d: MSR_RING_PERF_LIMIT_REASONS, 0x%08llx", cpu, msr);
+ 		fprintf(stderr, " (Active: %s%s%s%s%s%s)",
+ 			(msr & 1 << 0) ? "PROCHOT, " : "",
+ 			(msr & 1 << 1) ? "ThermStatus, " : "",
+ 			(msr & 1 << 6) ? "VR-Therm, " : "",
+ 			(msr & 1 << 8) ? "Amps, " : "",
+ 			(msr & 1 << 10) ? "PkgPwrL1, " : "",
+ 			(msr & 1 << 11) ? "PkgPwrL2, " : "");
+ 		fprintf(stderr, " (Logged: %s%s%s%s%s%s)\n",
+ 			(msr & 1 << 16) ? "PROCHOT, " : "",
+ 			(msr & 1 << 17) ? "ThermStatus, " : "",
+ 			(msr & 1 << 22) ? "VR-Therm, " : "",
+ 			(msr & 1 << 24) ? "Amps, " : "",
+ 			(msr & 1 << 26) ? "PkgPwrL1, " : "",
+ 			(msr & 1 << 27) ? "PkgPwrL2, " : "");
+ 	}
+ 	return 0;
+ }
+ 
++>>>>>>> e33cbe852de4 (tools/power turbostat: update PERF_LIMIT_REASONS decoding)
  #define	RAPL_POWER_GRANULARITY	0x7FFF	/* 15 bit power granularity */
  #define	RAPL_TIME_GRANULARITY	0x3F /* 6 bit time granularity */
  
* Unmerged path tools/power/x86/turbostat/turbostat.c
