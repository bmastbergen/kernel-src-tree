cxgb4: Try and provide an RDMA CIQ per cpu

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit f36e58e5668694cd89d0a4d04a767a6286d497cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f36e58e5.failed

To allow for better scalability on systems with large core counts, we
will try and allocate enough RDMA Concentrator IQs and MSI/X vectors as
we have cores. If we cannot get enough MSI/X vectors, fall back to the
minimum required: 1 per adapter rx channel.

Also clean up cxgb_enable_msix() to make it readable and correct a bug
where the vectors are not correctly assigned if the driver doesn't get
the full amount requested.

	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f36e58e5668694cd89d0a4d04a767a6286d497cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 6b10b0dc9878,e344bdcd40b3..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@@ -6217,14 -5817,23 +6232,24 @@@ static int enable_msix(struct adapter *
  		/* need nchan for each possible ULD */
  		ofld_need = 3 * nchan;
  	}
 -#ifdef CONFIG_CHELSIO_T4_DCB
 -	/* For Data Center Bridging we need 8 Ethernet TX Priority Queues for
 -	 * each port.
 -	 */
 -	need = 8 * adap->params.nports + EXTRA_VECS + ofld_need;
 -#else
  	need = adap->params.nports + EXTRA_VECS + ofld_need;
++<<<<<<< HEAD
 +
 +	want = pci_enable_msix_range(adap->pdev, entries, need, want);
 +	if (want < 0)
 +		return want;
++=======
+ #endif
+ 	allocated = pci_enable_msix_range(adap->pdev, entries, need, want);
+ 	if (allocated < 0) {
+ 		dev_info(adap->pdev_dev, "not enough MSI-X vectors left,"
+ 			 " not using MSI-X\n");
+ 		kfree(entries);
+ 		return allocated;
+ 	}
++>>>>>>> f36e58e56686 (cxgb4: Try and provide an RDMA CIQ per cpu)
  
- 	/*
- 	 * Distribute available vectors to the various queue groups.
+ 	/* Distribute available vectors to the various queue groups.
  	 * Every group gets its minimum requirement and NIC gets top
  	 * priority for leftovers.
  	 */
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index dddf17cba9bf..e3dd76d8eeeb 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@ -368,7 +368,7 @@ enum {
 	MAX_OFLD_QSETS = 16,          /* # of offload Tx/Rx queue sets */
 	MAX_CTRL_QUEUES = NCHAN,      /* # of control Tx queues */
 	MAX_RDMA_QUEUES = NCHAN,      /* # of streaming RDMA Rx queues */
-	MAX_RDMA_CIQS = NCHAN,        /* # of  RDMA concentrator IQs */
+	MAX_RDMA_CIQS = 32,        /* # of  RDMA concentrator IQs */
 	MAX_ISCSI_QUEUES = NCHAN,     /* # of streaming iSCSI Rx queues */
 };
 
@@ -571,8 +571,8 @@ struct sge {
 	u16 rdmaqs;                 /* # of available RDMA Rx queues */
 	u16 rdmaciqs;               /* # of available RDMA concentrator IQs */
 	u16 ofld_rxq[MAX_OFLD_QSETS];
-	u16 rdma_rxq[NCHAN];
-	u16 rdma_ciq[NCHAN];
+	u16 rdma_rxq[MAX_RDMA_QUEUES];
+	u16 rdma_ciq[MAX_RDMA_CIQS];
 	u16 timer_val[SGE_NTIMERS];
 	u8 counter_val[SGE_NCOUNTERS];
 	u32 fl_pg_order;            /* large page allocation size */
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
