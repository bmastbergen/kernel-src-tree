md/raid5: separate large if clause out of fetch_block().

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] raid5: separate large if clause out of fetch_block() (Jes Sorensen) [1150149 1173510 1194720]
Rebuild_FUZZ: 96.30%
commit-author NeilBrown <neilb@suse.de>
commit 2c58f06e6fe23905c4c586191bef0acc51536a9d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2c58f06e.failed

fetch_block() has a very large and hard to read 'if' condition.

Separate it into its own function so that it can be
made more readable.

	Signed-off-by: NeilBrown <neilb@suse.de>
(cherry picked from commit 2c58f06e6fe23905c4c586191bef0acc51536a9d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5.c
diff --cc drivers/md/raid5.c
index 7648d382ecbd,5a980fe7c982..000000000000
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@@ -2918,8 -2912,25 +2918,28 @@@ static int need_this_block(struct strip
  	     (s->failed >= 1 && fdev[0]->toread) ||
  	     (s->failed >= 2 && fdev[1]->toread) ||
  	     (sh->raid_conf->level <= 5 && s->failed && fdev[0]->towrite &&
 -	      (!test_bit(R5_Insync, &dev->flags) || test_bit(STRIPE_PREREAD_ACTIVE, &sh->state)) &&
  	      !test_bit(R5_OVERWRITE, &fdev[0]->flags)) ||
++<<<<<<< HEAD
 +	     (sh->raid_conf->level == 6 && s->failed && s->to_write))) {
++=======
+ 	     ((sh->raid_conf->level == 6 ||
+ 	       sh->sector >= sh->raid_conf->mddev->recovery_cp)
+ 	      && s->failed && s->to_write &&
+ 	      (s->to_write - s->non_overwrite <
+ 	       sh->raid_conf->raid_disks - sh->raid_conf->max_degraded) &&
+ 	      (!test_bit(R5_Insync, &dev->flags) || test_bit(STRIPE_PREREAD_ACTIVE, &sh->state)))))
+ 		return 1;
+ 	return 0;
+ }
+ 
+ static int fetch_block(struct stripe_head *sh, struct stripe_head_state *s,
+ 		       int disk_idx, int disks)
+ {
+ 	struct r5dev *dev = &sh->dev[disk_idx];
+ 
+ 	/* is the data in this block needed, and can we get it? */
+ 	if (need_this_block(sh, s, disk_idx, disks)) {
++>>>>>>> 2c58f06e6fe2 (md/raid5: separate large if clause out of fetch_block().)
  		/* we would like to get this block, possibly by computing it,
  		 * otherwise read it if the backing disk is insync
  		 */
* Unmerged path drivers/md/raid5.c
