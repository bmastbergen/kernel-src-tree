dm crypt: add 'submit_from_crypt_cpus' option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] dm-crypt: add 'submit_from_crypt_cpus' option (Mike Snitzer) [1205955 752438]
Rebuild_FUZZ: 97.78%
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit 0f5d8e6ee758f7023e4353cca75d785b2d4f6abe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0f5d8e6e.failed

Make it possible to disable offloading writes by setting the optional
'submit_from_crypt_cpus' table argument.

There are some situations where offloading write bios from the
encryption threads to a single thread degrades performance
significantly.

The default is to offload write bios to the same thread because it
benefits CFQ to have writes submitted using the same IO context.

	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 0f5d8e6ee758f7023e4353cca75d785b2d4f6abe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-crypt.c
diff --cc drivers/md/dm-crypt.c
index 4fcca8922627,4519a7c0098c..000000000000
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@@ -1191,14 -1236,19 +1192,26 @@@ static void kcryptd_crypt_write_io_subm
  	}
  
  	/* crypt_convert should have filled the clone bio */
 -	BUG_ON(io->ctx.iter_out.bi_size);
 +	BUG_ON(io->ctx.idx_out < clone->bi_vcnt);
  
 -	clone->bi_iter.bi_sector = cc->start + io->sector;
 +	clone->bi_sector = cc->start + io->sector;
  
++<<<<<<< HEAD
 +	if (async)
 +		kcryptd_queue_io(io);
 +	else
 +		generic_make_request(clone);
++=======
+ 	if (likely(!async) && test_bit(DM_CRYPT_NO_OFFLOAD, &cc->flags)) {
+ 		generic_make_request(clone);
+ 		return;
+ 	}
+ 
+ 	spin_lock_irqsave(&cc->write_thread_wait.lock, flags);
+ 	list_add_tail(&io->list, &cc->write_thread_list);
+ 	wake_up_locked(&cc->write_thread_wait);
+ 	spin_unlock_irqrestore(&cc->write_thread_wait.lock, flags);
++>>>>>>> 0f5d8e6ee758 (dm crypt: add 'submit_from_crypt_cpus' option)
  }
  
  static void kcryptd_crypt_write_convert(struct dm_crypt_io *io)
diff --git a/Documentation/device-mapper/dm-crypt.txt b/Documentation/device-mapper/dm-crypt.txt
index 571f24ffc91c..ad697781f9ac 100644
--- a/Documentation/device-mapper/dm-crypt.txt
+++ b/Documentation/device-mapper/dm-crypt.txt
@@ -51,7 +51,7 @@ Parameters: <cipher> <key> <iv_offset> <device path> \
     Otherwise #opt_params is the number of following arguments.
 
     Example of optional parameters section:
-        2 allow_discards same_cpu_crypt
+        3 allow_discards same_cpu_crypt submit_from_crypt_cpus
 
 allow_discards
     Block discard requests (a.k.a. TRIM) are passed through the crypt device.
@@ -68,6 +68,14 @@ same_cpu_crypt
     The default is to use an unbound workqueue so that encryption work
     is automatically balanced between available CPUs.
 
+submit_from_crypt_cpus
+    Disable offloading writes to a separate thread after encryption.
+    There are some situations where offloading write bios from the
+    encryption threads to a single thread degrades performance
+    significantly.  The default is to offload write bios to the same
+    thread because it benefits CFQ to have writes submitted using the
+    same context.
+
 Example scripts
 ===============
 LUKS (Linux Unified Key Setup) is now the preferred way to set up disk
* Unmerged path drivers/md/dm-crypt.c
