i40e: Fix issue with removal of apps from DBCNL app table

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Neerav Parikh <neerav.parikh@intel.com>
commit 750fcbcf18cabe0f44aba2f0bcfb39a31150fe10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/750fcbcf.failed

This patch fixes an issue where the driver is not flushing out the
DCBNL app table for applications that are not present in the local
DCBX application configuration TLVs.

Change-ID: I1f1ee04c81c145071b2ab15657546eb10b81fadb
	Signed-off-by: Neerav Parikh <neerav.parikh@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 750fcbcf18cabe0f44aba2f0bcfb39a31150fe10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_dcb_nl.c
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_dcb_nl.c
index 44ab9c2402ba,f4070b5d33d6..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_dcb_nl.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_dcb_nl.c
@@@ -275,16 -276,14 +276,20 @@@ static bool i40e_dcbnl_find_app(struct 
   * DCB configuration
   **/
  void i40e_dcbnl_flush_apps(struct i40e_pf *pf,
+ 			   struct i40e_dcbx_config *old_cfg,
  			   struct i40e_dcbx_config *new_cfg)
  {
++<<<<<<< HEAD
 +	struct i40e_ieee_app_priority_table app;
 +	struct i40e_dcbx_config *dcbxcfg;
 +	struct i40e_hw *hw = &pf->hw;
++=======
+ 	struct i40e_dcb_app_priority_table app;
++>>>>>>> 750fcbcf18ca (i40e: Fix issue with removal of apps from DBCNL app table)
  	int i;
  
- 	dcbxcfg = &hw->local_dcbx_config;
- 	for (i = 0; i < dcbxcfg->numapps; i++) {
- 		app = dcbxcfg->app[i];
+ 	for (i = 0; i < old_cfg->numapps; i++) {
+ 		app = old_cfg->app[i];
  		/* The APP is not available anymore delete it */
  		if (!i40e_dcbnl_find_app(new_cfg, &app))
  			i40e_dcbnl_del_app(pf, &app);
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index b3a0e64e7870,fae83ac8c822..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -5185,12 -5196,16 +5184,22 @@@ static int i40e_handle_lldp_event(struc
  		goto exit;
  	}
  
 +	/* Convert/store the DCBX data from LLDPDU temporarily */
  	memset(&tmp_dcbx_cfg, 0, sizeof(tmp_dcbx_cfg));
++<<<<<<< HEAD
 +	ret = i40e_lldp_to_dcb_config(e->msg_buf, &tmp_dcbx_cfg);
++=======
+ 	/* Store the old configuration */
+ 	memcpy(&tmp_dcbx_cfg, &hw->local_dcbx_config, sizeof(tmp_dcbx_cfg));
+ 
+ 	/* Reset the old DCBx configuration data */
+ 	memset(&hw->local_dcbx_config, 0, sizeof(hw->local_dcbx_config));
+ 	/* Get updated DCBX data from firmware */
+ 	ret = i40e_get_dcb_config(&pf->hw);
++>>>>>>> 750fcbcf18ca (i40e: Fix issue with removal of apps from DBCNL app table)
  	if (ret) {
 -		dev_info(&pf->pdev->dev, "Failed querying DCB configuration data from firmware.\n");
 +		/* Error in LLDPDU parsing return */
 +		dev_info(&pf->pdev->dev, "Failed parsing LLDPDU from event buffer\n");
  		goto exit;
  	}
  
@@@ -5200,12 -5216,10 +5210,19 @@@
  		goto exit;
  	}
  
++<<<<<<< HEAD
 +	need_reconfig = i40e_dcb_need_reconfig(pf, dcbx_cfg, &tmp_dcbx_cfg);
 +
 +	i40e_dcbnl_flush_apps(pf, &tmp_dcbx_cfg);
 +
 +	/* Overwrite the new configuration */
 +	*dcbx_cfg = tmp_dcbx_cfg;
++=======
+ 	need_reconfig = i40e_dcb_need_reconfig(pf, &tmp_dcbx_cfg,
+ 					       &hw->local_dcbx_config);
+ 
+ 	i40e_dcbnl_flush_apps(pf, &tmp_dcbx_cfg, &hw->local_dcbx_config);
++>>>>>>> 750fcbcf18ca (i40e: Fix issue with removal of apps from DBCNL app table)
  
  	if (!need_reconfig)
  		goto exit;
diff --git a/drivers/net/ethernet/intel/i40e/i40e.h b/drivers/net/ethernet/intel/i40e/i40e.h
index 840b392a5ffb..5393262c7a9a 100644
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@ -725,6 +725,7 @@ void i40e_fcoe_handle_status(struct i40e_ring *rx_ring,
 void i40e_vlan_stripping_enable(struct i40e_vsi *vsi);
 #ifdef CONFIG_I40E_DCB
 void i40e_dcbnl_flush_apps(struct i40e_pf *pf,
+			   struct i40e_dcbx_config *old_cfg,
 			   struct i40e_dcbx_config *new_cfg);
 void i40e_dcbnl_set_all(struct i40e_vsi *vsi);
 void i40e_dcbnl_setup(struct i40e_vsi *vsi);
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_dcb_nl.c
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
