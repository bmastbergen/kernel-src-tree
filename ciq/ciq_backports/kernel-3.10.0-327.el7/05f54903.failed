nfs: remove WARN_ON_ONCE from nfs_direct_good_bytes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Peng Tao <tao.peng@primarydata.com>
commit 05f54903d9d370a4cd302a85681304d3ec59e5c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/05f54903.failed

For flexfiles driver, we might choose to read from mirror index other
than 0 while mirror_count is always 1 for read.

	Reported-by: Jean Spector <jean@primarydata.com>
	Cc: <stable@vger.kernel.org> # v3.19+
	Cc: Weston Andros Adamson <dros@primarydata.com>
	Signed-off-by: Peng Tao <tao.peng@primarydata.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 05f54903d9d370a4cd302a85681304d3ec59e5c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/direct.c
diff --cc fs/nfs/direct.c
index 74e3798cd593,eeb52b434e6f..000000000000
--- a/fs/nfs/direct.c
+++ b/fs/nfs/direct.c
@@@ -108,6 -117,39 +108,42 @@@ static inline int put_dreq(struct nfs_d
  	return atomic_dec_and_test(&dreq->io_count);
  }
  
++<<<<<<< HEAD
++=======
+ void nfs_direct_set_resched_writes(struct nfs_direct_req *dreq)
+ {
+ 	dreq->flags = NFS_ODIRECT_RESCHED_WRITES;
+ }
+ EXPORT_SYMBOL_GPL(nfs_direct_set_resched_writes);
+ 
+ static void
+ nfs_direct_good_bytes(struct nfs_direct_req *dreq, struct nfs_pgio_header *hdr)
+ {
+ 	int i;
+ 	ssize_t count;
+ 
+ 	if (dreq->mirror_count == 1) {
+ 		dreq->mirrors[hdr->pgio_mirror_idx].count += hdr->good_bytes;
+ 		dreq->count += hdr->good_bytes;
+ 	} else {
+ 		/* mirrored writes */
+ 		count = dreq->mirrors[hdr->pgio_mirror_idx].count;
+ 		if (count + dreq->io_start < hdr->io_start + hdr->good_bytes) {
+ 			count = hdr->io_start + hdr->good_bytes - dreq->io_start;
+ 			dreq->mirrors[hdr->pgio_mirror_idx].count = count;
+ 		}
+ 		/* update the dreq->count by finding the minimum agreed count from all
+ 		 * mirrors */
+ 		count = dreq->mirrors[0].count;
+ 
+ 		for (i = 1; i < dreq->mirror_count; i++)
+ 			count = min(count, dreq->mirrors[i].count);
+ 
+ 		dreq->count = count;
+ 	}
+ }
+ 
++>>>>>>> 05f54903d9d3 (nfs: remove WARN_ON_ONCE from nfs_direct_good_bytes)
  /*
   * nfs_direct_select_verf - select the right verifier
   * @dreq - direct request possibly spanning multiple servers
* Unmerged path fs/nfs/direct.c
