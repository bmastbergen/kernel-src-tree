ipv4: ip_tunnels: disable cache for nbma gre tunnels

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] ip_tunnel: ip_tunnels: disable cache for nbma gre tunnels (Marcelo Leitner) [1206570]
Rebuild_FUZZ: 91.74%
commit-author Timo Teräs <timo.teras@iki.fi>
commit 22fb22eaebf4d16987f3fd9c3484c436ee0badf2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/22fb22ea.failed

The connected check fails to check for ip_gre nbma mode tunnels
properly. ip_gre creates temporary tnl_params with daddr specified
to pass-in the actual target on per-packet basis from neighbor
layer. Detect these tunnels by inspecting the actual tunnel
configuration.

Minimal test case:
 ip route add 192.168.1.1/32 via 10.0.0.1
 ip route add 192.168.1.2/32 via 10.0.0.2
 ip tunnel add nbma0 mode gre key 1 tos c0
 ip addr add 172.17.0.0/16 dev nbma0
 ip link set nbma0 up
 ip neigh add 172.17.0.1 lladdr 192.168.1.1 dev nbma0
 ip neigh add 172.17.0.2 lladdr 192.168.1.2 dev nbma0
 ping 172.17.0.1
 ping 172.17.0.2

The second ping should be going to 192.168.1.2 and head 10.0.0.2;
but cached gre tunnel level route is used and it's actually going
to 192.168.1.1 via 10.0.0.1.

The lladdr's need to go to separate dst for the bug to trigger.
Test case uses separate route entries, but this can also happen
when the route entry is same: if there is a nexthop exception or
the GRE tunnel is IPsec'ed in which case the dst points to xfrm
bundle unique to the gre lladdr.

Fixes: 7d442fab0a67 ("ipv4: Cache dst in tunnels")
	Signed-off-by: Timo Teräs <timo.teras@iki.fi>
	Cc: Tom Herbert <therbert@google.com>
	Cc: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 22fb22eaebf4d16987f3fd9c3484c436ee0badf2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ip_tunnel.c
diff --cc net/ipv4/ip_tunnel.c
index 7524ed93eba6,49721d78df75..000000000000
--- a/net/ipv4/ip_tunnel.c
+++ b/net/ipv4/ip_tunnel.c
@@@ -535,8 -540,10 +535,13 @@@ void ip_tunnel_xmit(struct sk_buff *skb
  	unsigned int max_headroom;	/* The extra header space needed */
  	__be32 dst;
  	int err;
++<<<<<<< HEAD
++=======
+ 	bool connected;
++>>>>>>> 22fb22eaebf4 (ipv4: ip_tunnels: disable cache for nbma gre tunnels)
  
  	inner_iph = (const struct iphdr *)skb_inner_network_header(skb);
+ 	connected = (tunnel->parms.iph.daddr != 0);
  
  	dst = tnl_params->daddr;
  	if (dst == 0) {
* Unmerged path net/ipv4/ip_tunnel.c
