virtio: drop legacy_only driver flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [virtio] drop legacy_only driver flag (Jason Wang) [1227339]
Rebuild_FUZZ: 87.50%
commit-author Michael S. Tsirkin <mst@redhat.com>
commit d71a6fc6b97fba1de999c6f0fab5c75544afab76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/d71a6fc6.failed

legacy_only flag is now unused, drop it from core.

	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
	Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>
(cherry picked from commit d71a6fc6b97fba1de999c6f0fab5c75544afab76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio.c
#	include/linux/virtio.h
diff --cc drivers/virtio/virtio.c
index 683d7137d7c9,f22665868781..000000000000
--- a/drivers/virtio/virtio.c
+++ b/drivers/virtio/virtio.c
@@@ -120,21 -178,50 +120,41 @@@ static int virtio_dev_probe(struct devi
  	/* Figure out what features the device supports. */
  	device_features = dev->config->get_features(dev);
  
 -	/* Figure out what features the driver supports. */
 -	driver_features = 0;
 +	/* Features supported by both device and driver into dev->features. */
 +	memset(dev->features, 0, sizeof(dev->features));
  	for (i = 0; i < drv->feature_table_size; i++) {
  		unsigned int f = drv->feature_table[i];
 -		BUG_ON(f >= 64);
 -		driver_features |= (1ULL << f);
 +		BUG_ON(f >= 32);
 +		if (device_features & (1 << f))
 +			set_bit(f, dev->features);
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* Some drivers have a separate feature table for virtio v1.0 */
+ 	if (drv->feature_table_legacy) {
+ 		driver_features_legacy = 0;
+ 		for (i = 0; i < drv->feature_table_size_legacy; i++) {
+ 			unsigned int f = drv->feature_table_legacy[i];
+ 			BUG_ON(f >= 64);
+ 			driver_features_legacy |= (1ULL << f);
+ 		}
+ 	} else {
+ 		driver_features_legacy = driver_features;
+ 	}
+ 
+ 	if (device_features & (1ULL << VIRTIO_F_VERSION_1))
+ 		dev->features = driver_features & device_features;
+ 	else
+ 		dev->features = driver_features_legacy & device_features;
+ 
++>>>>>>> d71a6fc6b97f (virtio: drop legacy_only driver flag)
  	/* Transport features always preserved to pass to finalize_features. */
  	for (i = VIRTIO_TRANSPORT_F_START; i < VIRTIO_TRANSPORT_F_END; i++)
 -		if (device_features & (1ULL << i))
 -			__virtio_set_bit(dev, i);
 +		if (device_features & (1 << i))
 +			set_bit(i, dev->features);
  
 -	err = dev->config->finalize_features(dev);
 -	if (err)
 -		goto err;
 -
 -	if (virtio_has_feature(dev, VIRTIO_F_VERSION_1)) {
 -		add_status(dev, VIRTIO_CONFIG_S_FEATURES_OK);
 -		status = dev->config->get_status(dev);
 -		if (!(status & VIRTIO_CONFIG_S_FEATURES_OK)) {
 -			dev_err(_d, "virtio: device refuses features: %x\n",
 -			       status);
 -			err = -ENODEV;
 -			goto err;
 -		}
 -	}
 +	dev->config->finalize_features(dev);
  
  	err = drv->probe(dev);
  	if (err)
diff --cc include/linux/virtio.h
index ff2f7cdd2d36,d09e0938fd60..000000000000
--- a/include/linux/virtio.h
+++ b/include/linux/virtio.h
@@@ -126,6 -132,8 +126,11 @@@ void virtio_break_device(struct virtio_
   * @id_table: the ids serviced by this driver.
   * @feature_table: an array of feature numbers supported by this driver.
   * @feature_table_size: number of entries in the feature table array.
++<<<<<<< HEAD
++=======
+  * @feature_table_legacy: same as feature_table but when working in legacy mode.
+  * @feature_table_size_legacy: number of entries in feature table legacy array.
++>>>>>>> d71a6fc6b97f (virtio: drop legacy_only driver flag)
   * @probe: the function to call when a device is found.  Returns 0 or -errno.
   * @remove: the function to call when a device is removed.
   * @config_changed: optional function to call when the device configuration
@@@ -136,6 -144,8 +141,11 @@@ struct virtio_driver 
  	const struct virtio_device_id *id_table;
  	const unsigned int *feature_table;
  	unsigned int feature_table_size;
++<<<<<<< HEAD
++=======
+ 	const unsigned int *feature_table_legacy;
+ 	unsigned int feature_table_size_legacy;
++>>>>>>> d71a6fc6b97f (virtio: drop legacy_only driver flag)
  	int (*probe)(struct virtio_device *dev);
  	void (*scan)(struct virtio_device *dev);
  	void (*remove)(struct virtio_device *dev);
* Unmerged path drivers/virtio/virtio.c
* Unmerged path include/linux/virtio.h
