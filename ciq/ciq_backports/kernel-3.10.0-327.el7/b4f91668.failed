tools lib api: Use tools build framework

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit b4f9166847354cb839c275c062c6b17afba49211
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b4f91668.failed

Move the libapikfs library building under tools build framework.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Tested-by: Will Deacon <will.deacon@arm.com>
	Cc: Alexis Berlemont <alexis.berlemont@gmail.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-xjo8r7nuqy9mvlfrmx9zcfwb@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit b4f9166847354cb839c275c062c6b17afba49211)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/api/Makefile
diff --cc tools/lib/api/Makefile
index 5e752b4c653f,1aa47c271313..000000000000
--- a/tools/lib/api/Makefile
+++ b/tools/lib/api/Makefile
@@@ -1,31 -1,23 +1,29 @@@
  include ../../scripts/Makefile.include
  include ../../perf/config/utilities.mak		# QUIET_CLEAN
  
++<<<<<<< HEAD
 +# guard against environment variables
 +LIB_H=
 +LIB_OBJS=
++=======
+ ifeq ($(srctree),)
+ srctree := $(patsubst %/,%,$(dir $(shell pwd)))
+ srctree := $(patsubst %/,%,$(dir $(srctree)))
+ srctree := $(patsubst %/,%,$(dir $(srctree)))
+ #$(info Determined 'srctree' to be $(srctree))
+ endif
  
- LIB_H += fs/debugfs.h
- LIB_H += fs/tracefs.h
- LIB_H += fs/findfs.h
- LIB_H += fs/fs.h
- # See comment below about piggybacking...
- LIB_H += fd/array.h
+ CC = $(CROSS_COMPILE)gcc
+ AR = $(CROSS_COMPILE)ar
  
- LIB_OBJS += $(OUTPUT)fs/debugfs.o
- LIB_OBJS += $(OUTPUT)fs/tracefs.o
- LIB_OBJS += $(OUTPUT)fs/findfs.o
- LIB_OBJS += $(OUTPUT)fs/fs.o
- # XXX piggybacking here, need to introduce libapikfd, or rename this
- # to plain libapik.a and make it have it all api goodies
- LIB_OBJS += $(OUTPUT)fd/array.o
+ MAKEFLAGS += --no-print-directory
++>>>>>>> b4f916684735 (tools lib api: Use tools build framework)
  
- LIBFILE = libapikfs.a
+ LIBFILE = $(OUTPUT)libapikfs.a
  
- CFLAGS = -ggdb3 -Wall -Wextra -std=gnu99 -Werror -O6 -D_FORTIFY_SOURCE=2 $(EXTRA_WARNINGS) $(EXTRA_CFLAGS) -fPIC
- EXTLIBS = -lelf -lpthread -lrt -lm
- ALL_CFLAGS = $(CFLAGS) $(BASIC_CFLAGS) -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
- ALL_LDFLAGS = $(LDFLAGS)
+ CFLAGS := $(EXTRA_WARNINGS) $(EXTRA_CFLAGS)
+ CFLAGS += -ggdb3 -Wall -Wextra -std=gnu99 -Werror -O6 -D_FORTIFY_SOURCE=2 -fPIC
+ CFLAGS += -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
  
  RM = rm -f
  
diff --git a/tools/lib/api/Build b/tools/lib/api/Build
new file mode 100644
index 000000000000..64dd8d466d2c
--- /dev/null
+++ b/tools/lib/api/Build
@@ -0,0 +1,2 @@
+libapikfs-y += fd/
+libapikfs-y += fs/
* Unmerged path tools/lib/api/Makefile
diff --git a/tools/lib/api/fd/Build b/tools/lib/api/fd/Build
new file mode 100644
index 000000000000..4ddcb0ff7f49
--- /dev/null
+++ b/tools/lib/api/fd/Build
@@ -0,0 +1 @@
+libapikfs-y += array.o
diff --git a/tools/lib/api/fs/Build b/tools/lib/api/fs/Build
new file mode 100644
index 000000000000..5f0fe4dfaae6
--- /dev/null
+++ b/tools/lib/api/fs/Build
@@ -0,0 +1,4 @@
+libapikfs-y += fs.o
+libapikfs-y += findfs.o
+libapikfs-y += debugfs.o
+libapikfs-y += tracefs.o
diff --git a/tools/perf/Makefile.perf b/tools/perf/Makefile.perf
index 9842afffa808..181477012765 100644
--- a/tools/perf/Makefile.perf
+++ b/tools/perf/Makefile.perf
@@ -721,20 +721,12 @@ $(LIBTRACEEVENT)-clean:
 install-traceevent-plugins: $(LIBTRACEEVENT)
 	$(QUIET_SUBDIR0)$(TRACE_EVENT_DIR) $(LIBTRACEEVENT_FLAGS) install_plugins
 
-LIBAPIKFS_SOURCES = $(wildcard $(LIB_PATH)fs/*.[ch] $(LIB_PATH)fd/*.[ch])
-
-# if subdir is set, we've been called from above so target has been built
-# already
-$(LIBAPIKFS): $(LIBAPIKFS_SOURCES)
-ifeq ($(subdir),)
-	$(QUIET_SUBDIR0)$(LIB_DIR) $(QUIET_SUBDIR1) O=$(OUTPUT) libapikfs.a
-endif
+$(LIBAPIKFS): FORCE
+	@$(MAKE) -C $(LIB_DIR) O=$(OUTPUT) $(OUTPUT)libapikfs.a
 
 $(LIBAPIKFS)-clean:
-ifeq ($(subdir),)
 	$(call QUIET_CLEAN, libapikfs)
 	@$(MAKE) -C $(LIB_DIR) O=$(OUTPUT) clean >/dev/null
-endif
 
 help:
 	@echo 'Perf make targets:'
