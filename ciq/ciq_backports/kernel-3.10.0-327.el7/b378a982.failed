s390: include linux/io.h instead of asm/io.h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] Include linux/io.h instead of asm/io.h (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 92.68%
commit-author Heiko Carstens <hca@linux.ibm.com>
commit b378a982614360686f45c3e6b63fd5d1acd02d08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b378a982.failed

Include linux/io.h instead of asm/io.h everywhere. linux/io.h includes
asm/io.h, so this shouldn't cause any problems. Instead this might help for
some randconfig build errors which were reported due to some undefined io
related functions.

Also move the changed include so it stays grouped together with other
includes from the same directory.

For ctcm_mpc.c also remove not needed comments (actually questions).

	Acked-by: Christian Borntraeger <borntraeger@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
	Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
(cherry picked from commit b378a982614360686f45c3e6b63fd5d1acd02d08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/appldata/appldata_base.c
#	arch/s390/appldata/appldata_mem.c
#	arch/s390/include/asm/appldata.h
#	arch/s390/kernel/cpcmd.c
#	arch/s390/kernel/dis.c
#	arch/s390/kernel/perf_cpum_sf.c
#	arch/s390/kernel/process.c
#	arch/s390/kvm/priv.c
#	arch/s390/lib/spinlock.c
#	arch/s390/mm/maccess.c
#	drivers/s390/block/dasd_eckd.c
#	drivers/s390/block/dcssblk.c
#	drivers/s390/char/monwriter.c
#	drivers/s390/net/netiucv.c
diff --cc arch/s390/appldata/appldata_base.c
index 6c0281f30d44,bbefe5e86bdf..000000000000
--- a/arch/s390/appldata/appldata_base.c
+++ b/arch/s390/appldata/appldata_base.c
@@@ -24,12 -26,10 +24,19 @@@
  #include <linux/notifier.h>
  #include <linux/cpu.h>
  #include <linux/workqueue.h>
++<<<<<<< HEAD
 +#include <linux/suspend.h>
 +#include <linux/platform_device.h>
 +#include <asm/appldata.h>
 +#include <asm/vtimer.h>
 +#include <asm/uaccess.h>
 +#include <asm/io.h>
++=======
+ #include <linux/uaccess.h>
+ #include <linux/io.h>
+ #include <asm/appldata.h>
+ #include <asm/vtimer.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/smp.h>
  
  #include "appldata.h"
diff --cc arch/s390/appldata/appldata_mem.c
index 7ef60b52d6e0,fc608f9b79ab..000000000000
--- a/arch/s390/appldata/appldata_mem.c
+++ b/arch/s390/appldata/appldata_mem.c
@@@ -13,7 -14,8 +13,12 @@@
  #include <linux/kernel_stat.h>
  #include <linux/pagemap.h>
  #include <linux/swap.h>
++<<<<<<< HEAD
 +#include <asm/io.h>
++=======
+ #include <linux/slab.h>
+ #include <linux/io.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  
  #include "appldata.h"
  
diff --cc arch/s390/include/asm/appldata.h
index 32a705987156,f2240392c708..000000000000
--- a/arch/s390/include/asm/appldata.h
+++ b/arch/s390/include/asm/appldata.h
@@@ -7,29 -8,8 +7,34 @@@
  #ifndef _ASM_S390_APPLDATA_H
  #define _ASM_S390_APPLDATA_H
  
++<<<<<<< HEAD
 +#include <asm/io.h>
++=======
+ #include <linux/io.h>
+ #include <asm/diag.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
 +
 +#ifndef CONFIG_64BIT
 +
 +#define APPLDATA_START_INTERVAL_REC	0x00	/* Function codes for */
 +#define APPLDATA_STOP_REC		0x01	/* DIAG 0xDC	      */
 +#define APPLDATA_GEN_EVENT_REC		0x02
 +#define APPLDATA_START_CONFIG_REC	0x03
 +
 +/*
 + * Parameter list for DIAGNOSE X'DC'
 + */
 +struct appldata_parameter_list {
 +	u16 diag;		/* The DIAGNOSE code X'00DC'	      */
 +	u8  function;		/* The function code for the DIAGNOSE */
 +	u8  parlist_length;	/* Length of the parameter list       */
 +	u32 product_id_addr;	/* Address of the 16-byte product ID  */
 +	u16 reserved;
 +	u16 buffer_length;	/* Length of the application data buffer  */
 +	u32 buffer_addr;	/* Address of the application data buffer */
 +} __attribute__ ((packed));
 +
 +#else /* CONFIG_64BIT */
  
  #define APPLDATA_START_INTERVAL_REC	0x80
  #define APPLDATA_STOP_REC		0x81
diff --cc arch/s390/kernel/cpcmd.c
index d7b0c4d27880,b210a29d3ee9..000000000000
--- a/arch/s390/kernel/cpcmd.c
+++ b/arch/s390/kernel/cpcmd.c
@@@ -14,9 -15,11 +14,14 @@@
  #include <linux/spinlock.h>
  #include <linux/stddef.h>
  #include <linux/string.h>
++<<<<<<< HEAD
++=======
+ #include <linux/mm.h>
+ #include <linux/io.h>
+ #include <asm/diag.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/ebcdic.h>
  #include <asm/cpcmd.h>
- #include <asm/io.h>
  
  static DEFINE_SPINLOCK(cpcmd_lock);
  static char cpcmd_buf[241];
diff --cc arch/s390/kernel/dis.c
index f3762937dd82,51d6e6dcadcd..000000000000
--- a/arch/s390/kernel/dis.c
+++ b/arch/s390/kernel/dis.c
@@@ -21,12 -22,10 +21,19 @@@
  #include <linux/reboot.h>
  #include <linux/kprobes.h>
  #include <linux/kdebug.h>
++<<<<<<< HEAD
 +
 +#include <asm/uaccess.h>
 +#include <asm/dis.h>
 +#include <asm/io.h>
 +#include <linux/atomic.h>
 +#include <asm/mathemu.h>
++=======
+ #include <linux/uaccess.h>
+ #include <linux/atomic.h>
+ #include <linux/io.h>
+ #include <asm/dis.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/cpcmd.h>
  #include <asm/lowcore.h>
  #include <asm/debug.h>
diff --cc arch/s390/kernel/perf_cpum_sf.c
index 5a13e430307b,59856a2dc135..000000000000
--- a/arch/s390/kernel/perf_cpum_sf.c
+++ b/arch/s390/kernel/perf_cpum_sf.c
@@@ -24,6 -22,7 +24,10 @@@
  #include <asm/irq.h>
  #include <asm/debug.h>
  #include <asm/timex.h>
++<<<<<<< HEAD
++=======
+ #include <linux/io.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  
  /* Minimum number of sample-data-block-tables:
   * At least one table is required for the sampling buffer structure.
diff --cc arch/s390/kernel/process.c
index bdd859e6d87e,258000417724..000000000000
--- a/arch/s390/kernel/process.c
+++ b/arch/s390/kernel/process.c
@@@ -22,8 -27,11 +22,16 @@@
  #include <linux/compat.h>
  #include <linux/kprobes.h>
  #include <linux/random.h>
++<<<<<<< HEAD
 +#include <linux/module.h>
 +#include <asm/io.h>
++=======
+ #include <linux/export.h>
+ #include <linux/init_task.h>
+ #include <linux/entry-common.h>
+ #include <linux/io.h>
+ #include <asm/cpu_mf.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/processor.h>
  #include <asm/vtimer.h>
  #include <asm/exec.h>
diff --cc arch/s390/kvm/priv.c
index 59200ee275e5,dc4cfa8795c0..000000000000
--- a/arch/s390/kvm/priv.c
+++ b/arch/s390/kvm/priv.c
@@@ -14,18 -11,20 +14,29 @@@
  #include <linux/kvm.h>
  #include <linux/gfp.h>
  #include <linux/errno.h>
++<<<<<<< HEAD
 +#include <linux/compat.h>
++=======
+ #include <linux/mm_types.h>
+ #include <linux/pgtable.h>
+ #include <linux/io.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/asm-offsets.h>
  #include <asm/facility.h>
  #include <asm/current.h>
  #include <asm/debug.h>
  #include <asm/ebcdic.h>
  #include <asm/sysinfo.h>
++<<<<<<< HEAD
 +#include <asm/pgtable.h>
 +#include <asm/pgalloc.h>
 +#include <asm/io.h>
++=======
+ #include <asm/page-states.h>
+ #include <asm/gmap.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/ptrace.h>
 -#include <asm/sclp.h>
 -#include <asm/ap.h>
 +#include <asm/compat.h>
  #include "gaccess.h"
  #include "kvm-s390.h"
  #include "trace.h"
diff --cc arch/s390/lib/spinlock.c
index ad3b7fe8195f,81c53440b3e6..000000000000
--- a/arch/s390/lib/spinlock.c
+++ b/arch/s390/lib/spinlock.c
@@@ -6,15 -7,26 +6,21 @@@
   */
  
  #include <linux/types.h>
 -#include <linux/export.h>
 +#include <linux/module.h>
  #include <linux/spinlock.h>
 -#include <linux/jiffies.h>
  #include <linux/init.h>
  #include <linux/smp.h>
++<<<<<<< HEAD
 +#include <asm/io.h>
++=======
+ #include <linux/percpu.h>
+ #include <linux/io.h>
+ #include <asm/alternative.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  
 -int spin_retry = -1;
 +int spin_retry = 1000;
  
 -static int __init spin_retry_init(void)
 -{
 -	if (spin_retry < 0)
 -		spin_retry = 1000;
 -	return 0;
 -}
 -early_initcall(spin_retry_init);
 -
 -/*
 +/**
   * spin_retry= parameter
   */
  static int __init spin_retry_setup(char *str)
diff --cc arch/s390/mm/maccess.c
index 309340ae035a,cbe1df1e9c18..000000000000
--- a/arch/s390/mm/maccess.c
+++ b/arch/s390/mm/maccess.c
@@@ -13,50 -12,65 +13,87 @@@
  #include <linux/errno.h>
  #include <linux/gfp.h>
  #include <linux/cpu.h>
++<<<<<<< HEAD
 +#include <linux/export.h>
 +#include <asm/ctl_reg.h>
++=======
+ #include <linux/uio.h>
+ #include <linux/io.h>
+ #include <asm/asm-extable.h>
+ #include <asm/ctl_reg.h>
+ #include <asm/abs_lowcore.h>
+ #include <asm/stacktrace.h>
+ #include <asm/maccess.h>
+ 
+ unsigned long __bootdata_preserved(__memcpy_real_area);
+ pte_t *__bootdata_preserved(memcpy_real_ptep);
+ static DEFINE_MUTEX(memcpy_real_mutex);
+ 
+ static notrace long s390_kernel_write_odd(void *dst, const void *src, size_t size)
+ {
+ 	unsigned long aligned, offset, count;
+ 	char tmp[8];
+ 
+ 	aligned = (unsigned long) dst & ~7UL;
+ 	offset = (unsigned long) dst & 7UL;
+ 	size = min(8UL - offset, size);
+ 	count = size - 1;
+ 	asm volatile(
+ 		"	bras	1,0f\n"
+ 		"	mvc	0(1,%4),0(%5)\n"
+ 		"0:	mvc	0(8,%3),0(%0)\n"
+ 		"	ex	%1,0(1)\n"
+ 		"	lg	%1,0(%3)\n"
+ 		"	lra	%0,0(%0)\n"
+ 		"	sturg	%1,%0\n"
+ 		: "+&a" (aligned), "+&a" (count), "=m" (tmp)
+ 		: "a" (&tmp), "a" (&tmp[offset]), "a" (src)
+ 		: "cc", "memory", "1");
+ 	return size;
+ }
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  
  /*
 - * s390_kernel_write - write to kernel memory bypassing DAT
 - * @dst: destination address
 - * @src: source address
 - * @size: number of bytes to copy
 - *
 - * This function writes to kernel memory bypassing DAT and possible page table
 - * write protection. It writes to the destination using the sturg instruction.
 - * Therefore we have a read-modify-write sequence: the function reads eight
 - * bytes from destination at an eight byte boundary, modifies the bytes
 - * requested and writes the result back in a loop.
 + * This function writes to kernel memory bypassing DAT and possible
 + * write protection. It copies one to four bytes from src to dst
 + * using the stura instruction.
 + * Returns the number of bytes copied or -EFAULT.
   */
 -static DEFINE_SPINLOCK(s390_kernel_write_lock);
 +static long probe_kernel_write_odd(void *dst, const void *src, size_t size)
 +{
 +	unsigned long count, aligned;
 +	int offset, mask;
 +	int rc = -EFAULT;
  
 -notrace void *s390_kernel_write(void *dst, const void *src, size_t size)
 +	aligned = (unsigned long) dst & ~3UL;
 +	offset = (unsigned long) dst & 3;
 +	count = min_t(unsigned long, 4 - offset, size);
 +	mask = (0xf << (4 - count)) & 0xf;
 +	mask >>= offset;
 +	asm volatile(
 +		"	bras	1,0f\n"
 +		"	icm	0,0,0(%3)\n"
 +		"0:	l	0,0(%1)\n"
 +		"	lra	%1,0(%1)\n"
 +		"1:	ex	%2,0(1)\n"
 +		"2:	stura	0,%1\n"
 +		"	la	%0,0\n"
 +		"3:\n"
 +		EX_TABLE(0b,3b) EX_TABLE(1b,3b) EX_TABLE(2b,3b)
 +		: "+d" (rc), "+a" (aligned)
 +		: "a" (mask), "a" (src) : "cc", "memory", "0", "1");
 +	return rc ? rc : count;
 +}
 +
 +long probe_kernel_write(void *dst, const void *src, size_t size)
  {
 -	void *tmp = dst;
 -	unsigned long flags;
 -	long copied;
 +	long copied = 0;
  
 -	spin_lock_irqsave(&s390_kernel_write_lock, flags);
  	while (size) {
 -		copied = s390_kernel_write_odd(tmp, src, size);
 -		tmp += copied;
 +		copied = probe_kernel_write_odd(dst, src, size);
 +		if (copied < 0)
 +			break;
 +		dst += copied;
  		src += copied;
  		size -= copied;
  	}
diff --cc drivers/s390/block/dasd_eckd.c
index 2cc4f165b72d,8587e423169e..000000000000
--- a/drivers/s390/block/dasd_eckd.c
+++ b/drivers/s390/block/dasd_eckd.c
@@@ -19,13 -20,14 +19,22 @@@
  #include <linux/module.h>
  #include <linux/compat.h>
  #include <linux/init.h>
++<<<<<<< HEAD
++=======
+ #include <linux/seq_file.h>
+ #include <linux/uaccess.h>
+ #include <linux/io.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  
  #include <asm/css_chars.h>
  #include <asm/debug.h>
  #include <asm/idals.h>
  #include <asm/ebcdic.h>
++<<<<<<< HEAD
 +#include <asm/io.h>
 +#include <asm/uaccess.h>
++=======
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/cio.h>
  #include <asm/ccwdev.h>
  #include <asm/itcw.h>
diff --cc drivers/s390/block/dcssblk.c
index 6eca019bcf30,a573ffbd4a33..000000000000
--- a/drivers/s390/block/dcssblk.c
+++ b/drivers/s390/block/dcssblk.c
@@@ -16,9 -17,11 +16,15 @@@
  #include <linux/blkdev.h>
  #include <linux/completion.h>
  #include <linux/interrupt.h>
++<<<<<<< HEAD
 +#include <linux/platform_device.h>
++=======
+ #include <linux/pfn_t.h>
+ #include <linux/uio.h>
+ #include <linux/dax.h>
+ #include <linux/io.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/extmem.h>
- #include <asm/io.h>
  
  #define DCSSBLK_NAME "dcssblk"
  #define DCSSBLK_MINORS_PER_DISK 1
diff --cc drivers/s390/char/monwriter.c
index 4600aa10a1c6,bc5193d81f9c..000000000000
--- a/drivers/s390/char/monwriter.c
+++ b/drivers/s390/char/monwriter.c
@@@ -19,11 -20,10 +19,15 @@@
  #include <linux/ctype.h>
  #include <linux/poll.h>
  #include <linux/mutex.h>
 +#include <linux/platform_device.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
 +#include <asm/uaccess.h>
++=======
+ #include <linux/uaccess.h>
+ #include <linux/io.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/ebcdic.h>
- #include <asm/io.h>
  #include <asm/appldata.h>
  #include <asm/monwriter.h>
  
diff --cc drivers/s390/net/netiucv.c
index 9ca3996f65b2,8852b03f943b..000000000000
--- a/drivers/s390/net/netiucv.c
+++ b/drivers/s390/net/netiucv.c
@@@ -61,8 -47,8 +61,13 @@@
  #include <linux/ctype.h>
  #include <net/dst.h>
  
++<<<<<<< HEAD
 +#include <asm/io.h>
 +#include <asm/uaccess.h>
++=======
+ #include <linux/io.h>
+ #include <linux/uaccess.h>
++>>>>>>> b378a9826143 (s390: include linux/io.h instead of asm/io.h)
  #include <asm/ebcdic.h>
  
  #include <net/iucv/iucv.h>
* Unmerged path arch/s390/appldata/appldata_base.c
* Unmerged path arch/s390/appldata/appldata_mem.c
* Unmerged path arch/s390/include/asm/appldata.h
diff --git a/arch/s390/include/asm/dma.h b/arch/s390/include/asm/dma.h
index bb9bdcd20864..5955e414a0e7 100644
--- a/arch/s390/include/asm/dma.h
+++ b/arch/s390/include/asm/dma.h
@@ -1,7 +1,7 @@
 #ifndef _ASM_S390_DMA_H
 #define _ASM_S390_DMA_H
 
-#include <asm/io.h>
+#include <linux/io.h>
 
 /*
  * MAX_DMA_ADDRESS is ambiguous because on s390 its completely unrelated
* Unmerged path arch/s390/kernel/cpcmd.c
* Unmerged path arch/s390/kernel/dis.c
* Unmerged path arch/s390/kernel/perf_cpum_sf.c
* Unmerged path arch/s390/kernel/process.c
* Unmerged path arch/s390/kvm/priv.c
* Unmerged path arch/s390/lib/spinlock.c
* Unmerged path arch/s390/mm/maccess.c
diff --git a/drivers/s390/block/dasd_diag.c b/drivers/s390/block/dasd_diag.c
index cc0603358522..987e8502c73a 100644
--- a/drivers/s390/block/dasd_diag.c
+++ b/drivers/s390/block/dasd_diag.c
@@ -22,7 +22,7 @@
 #include <asm/dasd.h>
 #include <asm/debug.h>
 #include <asm/ebcdic.h>
-#include <asm/io.h>
+#include <linux/io.h>
 #include <asm/irq.h>
 #include <asm/vtoc.h>
 #include <asm/diag.h>
* Unmerged path drivers/s390/block/dasd_eckd.c
diff --git a/drivers/s390/block/dasd_fba.c b/drivers/s390/block/dasd_fba.c
index 4dd0e2f6047e..d2792fe495a0 100644
--- a/drivers/s390/block/dasd_fba.c
+++ b/drivers/s390/block/dasd_fba.c
@@ -15,10 +15,10 @@
 #include <linux/bio.h>
 #include <linux/module.h>
 #include <linux/init.h>
+#include <linux/io.h>
 
 #include <asm/idals.h>
 #include <asm/ebcdic.h>
-#include <asm/io.h>
 #include <asm/ccwdev.h>
 
 #include "dasd_int.h"
* Unmerged path drivers/s390/block/dcssblk.c
diff --git a/drivers/s390/char/con3215.c b/drivers/s390/char/con3215.c
index f4e07f867ac3..90353b5ca456 100644
--- a/drivers/s390/char/con3215.c
+++ b/drivers/s390/char/con3215.c
@@ -24,7 +24,7 @@
 #include <linux/slab.h>
 #include <asm/ccwdev.h>
 #include <asm/cio.h>
-#include <asm/io.h>
+#include <linux/io.h>
 #include <asm/ebcdic.h>
 #include <asm/uaccess.h>
 #include <asm/delay.h>
* Unmerged path drivers/s390/char/monwriter.c
diff --git a/drivers/s390/net/ctcm_mpc.c b/drivers/s390/net/ctcm_mpc.c
index 2dbc77b5137b..33f504b64a45 100644
--- a/drivers/s390/net/ctcm_mpc.c
+++ b/drivers/s390/net/ctcm_mpc.c
@@ -42,13 +42,13 @@
 #include <linux/netdevice.h>
 #include <net/dst.h>
 
-#include <linux/io.h>		/* instead of <asm/io.h> ok ? */
-#include <asm/ccwdev.h>
-#include <asm/ccwgroup.h>
-#include <linux/bitops.h>	/* instead of <asm/bitops.h> ok ? */
-#include <linux/uaccess.h>	/* instead of <asm/uaccess.h> ok ? */
+#include <linux/io.h>
+#include <linux/bitops.h>
+#include <linux/uaccess.h>
 #include <linux/wait.h>
 #include <linux/moduleparam.h>
+#include <asm/ccwdev.h>
+#include <asm/ccwgroup.h>
 #include <asm/idals.h>
 
 #include "ctcm_main.h"
* Unmerged path drivers/s390/net/netiucv.c
