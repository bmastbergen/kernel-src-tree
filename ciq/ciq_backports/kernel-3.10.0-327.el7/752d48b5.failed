bonding: move active_slave getting into separate function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit 752d48b52ec929c6fd6ccd7ea9728571830fdd49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/752d48b5.failed

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 752d48b52ec929c6fd6ccd7ea9728571830fdd49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_options.c
#	drivers/net/bonding/bond_sysfs.c
#	drivers/net/bonding/bonding.h
diff --cc drivers/net/bonding/bond_sysfs.c
index 739d4dbe8629,47749c970a01..000000000000
--- a/drivers/net/bonding/bond_sysfs.c
+++ b/drivers/net/bonding/bond_sysfs.c
@@@ -1269,16 -1218,16 +1269,29 @@@ static ssize_t bonding_show_active_slav
  					 struct device_attribute *attr,
  					 char *buf)
  {
++<<<<<<< HEAD
 +	struct slave *curr;
 +	struct bonding *bond = to_bond(d);
 +	int count = 0;
 +
 +	read_lock(&bond->curr_slave_lock);
 +	curr = bond->curr_active_slave;
 +	read_unlock(&bond->curr_slave_lock);
 +
 +	if (USES_PRIMARY(bond->params.mode) && curr)
 +		count = sprintf(buf, "%s\n", curr->dev->name);
++=======
+ 	struct bonding *bond = to_bond(d);
+ 	struct net_device *slave_dev;
+ 	int count = 0;
+ 
+ 	rcu_read_lock();
+ 	slave_dev = bond_option_active_slave_get_rcu(bond);
+ 	if (slave_dev)
+ 		count = sprintf(buf, "%s\n", slave_dev->name);
+ 	rcu_read_unlock();
+ 
++>>>>>>> 752d48b52ec9 (bonding: move active_slave getting into separate function)
  	return count;
  }
  
diff --cc drivers/net/bonding/bonding.h
index 743d73f75728,046a60535e04..000000000000
--- a/drivers/net/bonding/bonding.h
+++ b/drivers/net/bonding/bonding.h
@@@ -442,6 -426,10 +442,13 @@@ void bond_setup(struct net_device *bond
  unsigned int bond_get_num_tx_queues(void);
  int bond_netlink_init(void);
  void bond_netlink_fini(void);
++<<<<<<< HEAD
++=======
+ int bond_option_mode_set(struct bonding *bond, int mode);
+ int bond_option_active_slave_set(struct bonding *bond, struct net_device *slave_dev);
+ struct net_device *bond_option_active_slave_get_rcu(struct bonding *bond);
+ struct net_device *bond_option_active_slave_get(struct bonding *bond);
++>>>>>>> 752d48b52ec9 (bonding: move active_slave getting into separate function)
  
  struct bond_net {
  	struct net *		net;	/* Associated network namespace */
* Unmerged path drivers/net/bonding/bond_options.c
* Unmerged path drivers/net/bonding/bond_options.c
* Unmerged path drivers/net/bonding/bond_sysfs.c
* Unmerged path drivers/net/bonding/bonding.h
