IB/mlx4: Fix error paths in mlx4_ib_create_flow()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [inifniband] mlx4: Fix error paths in mlx4_ib_create_flow() (Amir Vadai) [1164527 1164530 1164531 1164536 1164537]
Rebuild_FUZZ: 96.84%
commit-author Roland Dreier <roland@purestorage.com>
commit 1156256811e42908fd13c4cfcf32965d8b93f2a8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/11562568.failed

The unwinding clean up code are err_create_flow starts at the current
index i.  That means we shouldn't increment i until we're really sure
we won't have to destroy the current flow; otherwise we might
increment the index, fail inside an is_bonded block, and end up
accessing off the end of the reg_id[] array.

This was detected by Coverity (CID 1271229).

	Signed-off-by: Roland Dreier <roland@purestorage.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 1156256811e42908fd13c4cfcf32965d8b93f2a8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx4/main.c
diff --cc drivers/infiniband/hw/mlx4/main.c
index a0eb941cd8b1,8191e176c5b7..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -1180,16 -1182,42 +1180,47 @@@ static struct ib_flow *mlx4_ib_create_f
  
  	while (i < ARRAY_SIZE(type) && type[i]) {
  		err = __mlx4_ib_create_flow(qp, flow_attr, domain, type[i],
 -					    &mflow->reg_id[i].id);
 +					    &mflow->reg_id[i]);
  		if (err)
  			goto err_create_flow;
++<<<<<<< HEAD
++=======
+ 		if (is_bonded) {
+ 			/* Application always sees one port so the mirror rule
+ 			 * must be on port #2
+ 			 */
+ 			flow_attr->port = 2;
+ 			err = __mlx4_ib_create_flow(qp, flow_attr,
+ 						    domain, type[j],
+ 						    &mflow->reg_id[j].mirror);
+ 			flow_attr->port = 1;
+ 			if (err)
+ 				goto err_create_flow;
+ 			j++;
+ 		}
+ 
++>>>>>>> 1156256811e4 (IB/mlx4: Fix error paths in mlx4_ib_create_flow())
  		i++;
  	}
  
  	if (i < ARRAY_SIZE(type) && flow_attr->type == IB_FLOW_ATTR_NORMAL) {
 -		err = mlx4_ib_tunnel_steer_add(qp, flow_attr,
 -					       &mflow->reg_id[i].id);
 +		err = mlx4_ib_tunnel_steer_add(qp, flow_attr, &mflow->reg_id[i]);
  		if (err)
  			goto err_create_flow;
++<<<<<<< HEAD
++=======
+ 
+ 		if (is_bonded) {
+ 			flow_attr->port = 2;
+ 			err = mlx4_ib_tunnel_steer_add(qp, flow_attr,
+ 						       &mflow->reg_id[j].mirror);
+ 			flow_attr->port = 1;
+ 			if (err)
+ 				goto err_create_flow;
+ 			j++;
+ 		}
+ 		/* function to create mirror rule */
++>>>>>>> 1156256811e4 (IB/mlx4: Fix error paths in mlx4_ib_create_flow())
  		i++;
  	}
  
* Unmerged path drivers/infiniband/hw/mlx4/main.c
