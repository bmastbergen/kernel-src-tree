iw_cxgb4: Cleanup register defines/MACROS

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hariprasad S <hariprasad@chelsio.com>
commit 0b7410471d59ce2ea30453e68c03bdb941d5951e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/0b741047.failed

Cleanup macros and register defines for consistency

	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 0b7410471d59ce2ea30453e68c03bdb941d5951e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/cm.c
diff --cc drivers/infiniband/hw/cxgb4/cm.c
index dbfa05fcb4a7,0493cca3ec15..000000000000
--- a/drivers/infiniband/hw/cxgb4/cm.c
+++ b/drivers/infiniband/hw/cxgb4/cm.c
@@@ -649,33 -649,33 +649,39 @@@ static int send_connect(struct c4iw_ep 
  	 * remainder will be specified in the rx_data_ack.
  	 */
  	win = ep->rcv_win >> 10;
 -	if (win > RCV_BUFSIZ_M)
 -		win = RCV_BUFSIZ_M;
 -
 -	opt0 = (nocong ? NO_CONG_F : 0) |
 -	       KEEP_ALIVE_F |
 -	       DELACK_F |
 -	       WND_SCALE_V(wscale) |
 -	       MSS_IDX_V(mtu_idx) |
 -	       L2T_IDX_V(ep->l2t->idx) |
 -	       TX_CHAN_V(ep->tx_chan) |
 -	       SMAC_SEL_V(ep->smac_idx) |
 -	       DSCP_V(ep->tos) |
 -	       ULP_MODE_V(ULP_MODE_TCPDDP) |
 -	       RCV_BUFSIZ_V(win);
 -	opt2 = RX_CHANNEL_V(0) |
 -	       CCTRL_ECN_V(enable_ecn) |
 -	       RSS_QUEUE_VALID_F | RSS_QUEUE_V(ep->rss_qid);
 +	if (win > RCV_BUFSIZ_MASK)
 +		win = RCV_BUFSIZ_MASK;
 +
 +	opt0 = (nocong ? NO_CONG(1) : 0) |
 +	       KEEP_ALIVE(1) |
 +	       DELACK(1) |
 +	       WND_SCALE(wscale) |
 +	       MSS_IDX(mtu_idx) |
 +	       L2T_IDX(ep->l2t->idx) |
 +	       TX_CHAN(ep->tx_chan) |
 +	       SMAC_SEL(ep->smac_idx) |
 +	       DSCP(ep->tos) |
 +	       ULP_MODE(ULP_MODE_TCPDDP) |
 +	       RCV_BUFSIZ(win);
 +	opt2 = RX_CHANNEL(0) |
 +	       CCTRL_ECN(enable_ecn) |
 +	       RSS_QUEUE_VALID | RSS_QUEUE(ep->rss_qid);
  	if (enable_tcp_timestamps)
 -		opt2 |= TSTAMPS_EN_F;
 +		opt2 |= TSTAMPS_EN(1);
  	if (enable_tcp_sack)
 -		opt2 |= SACK_EN_F;
 +		opt2 |= SACK_EN(1);
  	if (wscale && enable_tcp_window_scaling)
 -		opt2 |= WND_SCALE_EN_F;
 +		opt2 |= WND_SCALE_EN(1);
  	if (is_t5(ep->com.dev->rdev.lldi.adapter_type)) {
++<<<<<<< HEAD
 +		opt2 |= T5_OPT_2_VALID;
 +		opt2 |= V_CONG_CNTRL(CONG_ALG_TAHOE);
 +		opt2 |= CONG_CNTRL_VALID; /* OPT_2_ISS for T5 */
++=======
+ 		opt2 |= T5_OPT_2_VALID_F;
+ 		opt2 |= CONG_CNTRL_V(CONG_ALG_TAHOE);
+ 		opt2 |= T5_ISS_F;
++>>>>>>> 0b7410471d59 (iw_cxgb4: Cleanup register defines/MACROS)
  	}
  	t4_set_arp_err_handler(skb, ep, act_open_req_arp_failure);
  
@@@ -2213,9 -2212,9 +2219,15 @@@ static void accept_cr(struct c4iw_ep *e
  	}
  	if (is_t5(ep->com.dev->rdev.lldi.adapter_type)) {
  		u32 isn = (prandom_u32() & ~7UL) - 1;
++<<<<<<< HEAD
 +		opt2 |= T5_OPT_2_VALID;
 +		opt2 |= V_CONG_CNTRL(CONG_ALG_TAHOE);
 +		opt2 |= CONG_CNTRL_VALID; /* OPT_2_ISS for T5 */
++=======
+ 		opt2 |= T5_OPT_2_VALID_F;
+ 		opt2 |= CONG_CNTRL_V(CONG_ALG_TAHOE);
+ 		opt2 |= T5_ISS_F;
++>>>>>>> 0b7410471d59 (iw_cxgb4: Cleanup register defines/MACROS)
  		rpl5 = (void *)rpl;
  		memset(&rpl5->iss, 0, roundup(sizeof(*rpl5)-sizeof(*rpl), 16));
  		if (peer2peer)
* Unmerged path drivers/infiniband/hw/cxgb4/cm.c
diff --git a/drivers/infiniband/hw/cxgb4/t4fw_ri_api.h b/drivers/infiniband/hw/cxgb4/t4fw_ri_api.h
index 5709e77faf7c..fe29e875e8c6 100644
--- a/drivers/infiniband/hw/cxgb4/t4fw_ri_api.h
+++ b/drivers/infiniband/hw/cxgb4/t4fw_ri_api.h
@@ -848,6 +848,8 @@ enum {                     /* TCP congestion control algorithms */
 #define V_CONG_CNTRL(x) ((x) << S_CONG_CNTRL)
 #define G_CONG_CNTRL(x) (((x) >> S_CONG_CNTRL) & M_CONG_CNTRL)
 
-#define CONG_CNTRL_VALID   (1 << 18)
+#define T5_ISS_S    18
+#define T5_ISS_V(x) ((x) << T5_ISS_S)
+#define T5_ISS_F    T5_ISS_V(1U)
 
 #endif /* _T4FW_RI_API_H_ */
