virtio_rpmsg: set DRIVER_OK before using device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [virtio] virtio-rpmsg: set DRIVER_OK before using device (Jason Wang) [1227339]
Rebuild_FUZZ: 97.87%
commit-author Michael S. Tsirkin <mst@redhat.com>
commit 71e4b8bf0482fc7d70e9d4c10b13c207a285d58a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/71e4b8bf.failed

virtio spec requires that all drivers set DRIVER_OK
before using devices. While rpmsg isn't yet
included in the virtio 1 spec, previous spec versions
also required this.

virtio rpmsg violates this rule: is calls kick
before setting DRIVER_OK.

The fix isn't trivial since simply calling virtio_device_ready earlier
would mean we might get an interrupt in parallel with adding buffers.

Instead, split kick out to prepare+notify calls.  prepare before
virtio_device_ready - when we know we won't get interrupts. notify right
afterwards.

	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
	Acked-by: Ohad Ben-Cohen <ohad@wizery.com>
	Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit 71e4b8bf0482fc7d70e9d4c10b13c207a285d58a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/rpmsg/virtio_rpmsg_bus.c
diff --cc drivers/rpmsg/virtio_rpmsg_bus.c
index b6135d4d54eb,73354ee27877..000000000000
--- a/drivers/rpmsg/virtio_rpmsg_bus.c
+++ b/drivers/rpmsg/virtio_rpmsg_bus.c
@@@ -948,6 -950,8 +948,11 @@@ static int rpmsg_probe(struct virtio_de
  	struct virtproc_info *vrp;
  	void *bufs_va;
  	int err = 0, i;
++<<<<<<< HEAD
++=======
+ 	size_t total_buf_space;
+ 	bool notify;
++>>>>>>> 71e4b8bf0482 (virtio_rpmsg: set DRIVER_OK before using device)
  
  	vrp = kzalloc(sizeof(*vrp), GFP_KERNEL);
  	if (!vrp)
* Unmerged path drivers/rpmsg/virtio_rpmsg_bus.c
