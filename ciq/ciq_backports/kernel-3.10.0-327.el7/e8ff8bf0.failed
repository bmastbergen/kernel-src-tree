md/raid1: Avoid raid1 resync getting stuck

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [md] raid1: Avoid raid1 resync getting stuck (Jes Sorensen) [1256954]
Rebuild_FUZZ: 96.30%
commit-author Jes Sorensen <Jes.Sorensen@redhat.com>
commit e8ff8bf09ff49733534ff3cee91bde030186055f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/e8ff8bf0.failed

close_sync() needs to set conf->next_resync to a large, but safe value
below MaxSector and use it to determine whether or not to set
start_next_window in wait_barrier()

Solution suggested by Neil Brown.

	Reported-by: Nate Dailey <nate.dailey@stratus.com>
	Tested-by: Xiao Ni <xni@redhat.com>
	Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
	Signed-off-by: NeilBrown <neilb@suse.com>
(cherry picked from commit e8ff8bf09ff49733534ff3cee91bde030186055f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid1.c
diff --cc drivers/md/raid1.c
index 448dda3a7e5e,049df6c4a8cc..000000000000
--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@@ -911,8 -881,7 +911,12 @@@ static sector_t wait_barrier(struct r1c
  	}
  
  	if (bio && bio_data_dir(bio) == WRITE) {
++<<<<<<< HEAD
 +		if (conf->next_resync + NEXT_NORMALIO_DISTANCE
 +		    <= bio->bi_sector) {
++=======
+ 		if (bio->bi_iter.bi_sector >= conf->next_resync) {
++>>>>>>> e8ff8bf09ff4 (md/raid1: Avoid raid1 resync getting stuck)
  			if (conf->start_next_window == MaxSector)
  				conf->start_next_window =
  					conf->next_resync +
* Unmerged path drivers/md/raid1.c
