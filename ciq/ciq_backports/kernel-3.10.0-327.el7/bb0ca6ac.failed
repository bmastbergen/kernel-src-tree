kvm: Fix kvm_get_page_retry_io __gup retval check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [kvm] Fix kvm_get_page_retry_io __gup retval check (Bandan Das) [1209995]
Rebuild_FUZZ: 94.62%
commit-author Andres Lagar-Cavilla <andreslc@google.com>
commit bb0ca6acd466af55c95b7ce508f29e23a24cabd9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/bb0ca6ac.failed

Confusion around -EBUSY and zero (inside a BUG_ON no less).

	Reported-by: Andrea Arcangeli <aarcange@redhat.com>
	Signed-off-by: Andres Lagar-Cavilla <andreslc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit bb0ca6acd466af55c95b7ce508f29e23a24cabd9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index 577696e35d5e,a1cf53ee0d28..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -1134,6 -1127,43 +1134,46 @@@ static int get_user_page_nowait(struct 
  	return __get_user_pages(tsk, mm, start, 1, flags, page, NULL, NULL);
  }
  
++<<<<<<< HEAD
++=======
+ int kvm_get_user_page_io(struct task_struct *tsk, struct mm_struct *mm,
+ 			 unsigned long addr, bool write_fault,
+ 			 struct page **pagep)
+ {
+ 	int npages;
+ 	int locked = 1;
+ 	int flags = FOLL_TOUCH | FOLL_HWPOISON |
+ 		    (pagep ? FOLL_GET : 0) |
+ 		    (write_fault ? FOLL_WRITE : 0);
+ 
+ 	/*
+ 	 * If retrying the fault, we get here *not* having allowed the filemap
+ 	 * to wait on the page lock. We should now allow waiting on the IO with
+ 	 * the mmap semaphore released.
+ 	 */
+ 	down_read(&mm->mmap_sem);
+ 	npages = __get_user_pages(tsk, mm, addr, 1, flags, pagep, NULL,
+ 				  &locked);
+ 	if (!locked) {
+ 		VM_BUG_ON(npages);
+ 
+ 		if (!pagep)
+ 			return 0;
+ 
+ 		/*
+ 		 * The previous call has now waited on the IO. Now we can
+ 		 * retry and complete. Pass TRIED to ensure we do not re
+ 		 * schedule async IO (see e.g. filemap_fault).
+ 		 */
+ 		down_read(&mm->mmap_sem);
+ 		npages = __get_user_pages(tsk, mm, addr, 1, flags | FOLL_TRIED,
+ 					  pagep, NULL, NULL);
+ 	}
+ 	up_read(&mm->mmap_sem);
+ 	return npages;
+ }
+ 
++>>>>>>> bb0ca6acd466 (kvm: Fix kvm_get_page_retry_io __gup retval check)
  static inline int check_user_page_hwpoison(unsigned long addr)
  {
  	int rc, flags = FOLL_TOUCH | FOLL_HWPOISON | FOLL_WRITE;
* Unmerged path virt/kvm/kvm_main.c
