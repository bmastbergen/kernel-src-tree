IB/mlx4: Fix use of flow-counters for process_mad

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [infiniband] mlx4: Fix use of flow-counters for process_mad (Amir Vadai) [1251740]
Rebuild_FUZZ: 96.84%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 43bfb9729ea88d46e3f4d3ad7b17106c7b071fcb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/43bfb972.failed

For IB links, reading HCA flow counters through iboe_process_mad() should
be used when mlx4_ib_process_mad() is invoked only for VFs PMA queries and
exactly nothing else.

Fixes: 7193a141eb74 ('IB/mlx4: Set VF to read from QP counters')
	Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 43bfb9729ea88d46e3f4d3ad7b17106c7b071fcb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx4/mad.c
diff --cc drivers/infiniband/hw/mlx4/mad.c
index 273c9291e9cd,68b3dfa922bf..000000000000
--- a/drivers/infiniband/hw/mlx4/mad.c
+++ b/drivers/infiniband/hw/mlx4/mad.c
@@@ -873,23 -857,34 +873,45 @@@ int mlx4_ib_process_mad(struct ib_devic
  			struct ib_mad_hdr *out, size_t *out_mad_size,
  			u16 *out_mad_pkey_index)
  {
 -	struct mlx4_ib_dev *dev = to_mdev(ibdev);
  	const struct ib_mad *in_mad = (const struct ib_mad *)in;
  	struct ib_mad *out_mad = (struct ib_mad *)out;
+ 	enum rdma_link_layer link = rdma_port_get_link_layer(ibdev, port_num);
  
  	if (WARN_ON_ONCE(in_mad_size != sizeof(*in_mad) ||
  			 *out_mad_size != sizeof(*out_mad)))
  		return IB_MAD_RESULT_FAILURE;
  
++<<<<<<< HEAD
 +	switch (rdma_port_get_link_layer(ibdev, port_num)) {
 +	case IB_LINK_LAYER_INFINIBAND:
 +		return ib_process_mad(ibdev, mad_flags, port_num, in_wc,
 +				      in_grh, in_mad, out_mad);
 +	case IB_LINK_LAYER_ETHERNET:
 +		return iboe_process_mad(ibdev, mad_flags, port_num, in_wc,
 +					  in_grh, in_mad, out_mad);
 +	default:
 +		return -EINVAL;
++=======
+ 	/* iboe_process_mad() which uses the HCA flow-counters to implement IB PMA
+ 	 * queries, should be called only by VFs and for that specific purpose
+ 	 */
+ 	if (link == IB_LINK_LAYER_INFINIBAND) {
+ 		if (mlx4_is_slave(dev->dev) &&
+ 		    in_mad->mad_hdr.mgmt_class == IB_MGMT_CLASS_PERF_MGMT &&
+ 		    in_mad->mad_hdr.attr_id == IB_PMA_PORT_COUNTERS)
+ 			return iboe_process_mad(ibdev, mad_flags, port_num, in_wc,
+ 						in_grh, in_mad, out_mad);
+ 
+ 		return ib_process_mad(ibdev, mad_flags, port_num, in_wc,
+ 				      in_grh, in_mad, out_mad);
++>>>>>>> 43bfb9729ea8 (IB/mlx4: Fix use of flow-counters for process_mad)
  	}
+ 
+ 	if (link == IB_LINK_LAYER_ETHERNET)
+ 		return iboe_process_mad(ibdev, mad_flags, port_num, in_wc,
+ 					in_grh, in_mad, out_mad);
+ 
+ 	return -EINVAL;
  }
  
  static void send_handler(struct ib_mad_agent *agent,
* Unmerged path drivers/infiniband/hw/mlx4/mad.c
