Revert "usb: Reset USB-3 devices on USB-3 link bounce"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Zhuang Jin Can <jin.can.zhuang@intel.com>
commit 7671bd1e97b9fa09aea69e76375ada9534c735a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7671bd1e.failed

This revert a82b76f7fa6154e8ab2d8071842a3e38b9c0d0ff.

The commit causes an extra reset in remote wakeup as described in:
http://www.spinics.net/lists/linux-usb/msg119080.html

	Signed-off-by: Zhuang Jin Can <jin.can.zhuang@intel.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 7671bd1e97b9fa09aea69e76375ada9534c735a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/core/hub.c
diff --cc drivers/usb/core/hub.c
index 67e0535f038a,4c259aca7a62..000000000000
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@@ -4968,30 -4974,14 +4968,41 @@@ static void port_event(struct usb_hub *
  			if (hub_port_reset(hub, port1, NULL,
  					HUB_BH_RESET_TIME, true) < 0)
  				hub_port_disable(hub, port1, 1);
++<<<<<<< HEAD
 +		} else
 +			reset_device = 1;
 +	}
 +
 +	/*
 +	 * On disconnect USB3 protocol ports transit from U0 to
 +	 * SS.Inactive to Rx.Detect. If this happens a warm-
 +	 * reset is not needed, but a (re)connect may happen
 +	 * before khubd runs and sees the disconnect, and the
 +	 * device may be an unknown state.
 +	 *
 +	 * If the port went through SS.Inactive without khubd
 +	 * seeing it the C_LINK_STATE change flag will be set,
 +	 * and we reset the dev to put it in a known state.
 +	 */
 +	if (reset_device || (udev && hub_is_superspeed(hub->hdev)
 +				&& (portchange & USB_PORT_STAT_C_LINK_STATE)
 +				&& (portstatus & USB_PORT_STAT_CONNECTION))) {
 +		usb_unlock_port(port_dev);
 +		usb_lock_device(udev);
 +		usb_reset_device(udev);
 +		usb_unlock_device(udev);
 +		usb_lock_port(port_dev);
 +		connect_change = 0;
++=======
+ 		} else {
+ 			usb_unlock_port(port_dev);
+ 			usb_lock_device(udev);
+ 			usb_reset_device(udev);
+ 			usb_unlock_device(udev);
+ 			usb_lock_port(port_dev);
+ 			connect_change = 0;
+ 		}
++>>>>>>> 7671bd1e97b9 (Revert "usb: Reset USB-3 devices on USB-3 link bounce")
  	}
  
  	if (connect_change)
* Unmerged path drivers/usb/core/hub.c
