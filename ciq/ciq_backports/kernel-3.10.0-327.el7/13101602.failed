openvswitch: Add missing initialization in validate_and_copy_set_tun()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Geert Uytterhoeven <geert@linux-m68k.org>
commit 13101602c4a9f653d59af9469040797bc5b361ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/13101602.failed

net/openvswitch/flow_netlink.c: In function ‘validate_and_copy_set_tun’:
net/openvswitch/flow_netlink.c:1749: warning: ‘err’ may be used uninitialized in this function

If ipv4_tun_from_nlattr() returns a different positive value than
OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS, err will be uninitialized, and
validate_and_copy_set_tun() may return an undefined value instead of a
zero success indicator. Initialize err to zero to fix this.

Fixes: 1dd144cf5b4b47e1 ("openvswitch: Support VXLAN Group Policy extension")
	Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Acked-by: Pravin B Shelar <pshelar@nicira.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 13101602c4a9f653d59af9469040797bc5b361ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/flow_netlink.c
diff --cc net/openvswitch/flow_netlink.c
index d35e6f9713da,3829328c5a76..000000000000
--- a/net/openvswitch/flow_netlink.c
+++ b/net/openvswitch/flow_netlink.c
@@@ -1490,39 -1746,26 +1490,43 @@@ static int validate_and_copy_set_tun(co
  	struct sw_flow_key key;
  	struct ovs_tunnel_info *tun_info;
  	struct nlattr *a;
++<<<<<<< HEAD
 +	int err, start;
++=======
+ 	int err = 0, start, opts_type;
++>>>>>>> 13101602c4a9 (openvswitch: Add missing initialization in validate_and_copy_set_tun())
  
  	ovs_match_init(&match, &key, NULL);
 -	opts_type = ipv4_tun_from_nlattr(nla_data(attr), &match, false, log);
 -	if (opts_type < 0)
 -		return opts_type;
 +	err = ipv4_tun_from_nlattr(nla_data(attr), &match, false);
 +	if (err)
 +		return err;
  
  	if (key.tun_opts_len) {
 -		switch (opts_type) {
 -		case OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS:
 -			err = validate_geneve_opts(&key);
 -			if (err < 0)
 -				return err;
 -			break;
 -		case OVS_TUNNEL_KEY_ATTR_VXLAN_OPTS:
 -			break;
 -		}
 +		struct geneve_opt *option = GENEVE_OPTS(&key,
 +							key.tun_opts_len);
 +		int opts_len = key.tun_opts_len;
 +		bool crit_opt = false;
 +
 +		while (opts_len > 0) {
 +			int len;
 +
 +			if (opts_len < sizeof(*option))
 +				return -EINVAL;
 +
 +			len = sizeof(*option) + option->length * 4;
 +			if (len > opts_len)
 +				return -EINVAL;
 +
 +			crit_opt |= !!(option->type & GENEVE_CRIT_OPT_TYPE);
 +
 +			option = (struct geneve_opt *)((u8 *)option + len);
 +			opts_len -= len;
 +		};
 +
 +		key.tun_key.tun_flags |= crit_opt ? TUNNEL_CRIT_OPT : 0;
  	};
  
 -	start = add_nested_action_start(sfa, OVS_ACTION_ATTR_SET, log);
 +	start = add_nested_action_start(sfa, OVS_ACTION_ATTR_SET);
  	if (start < 0)
  		return start;
  
* Unmerged path net/openvswitch/flow_netlink.c
