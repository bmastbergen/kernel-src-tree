ALSA: hda - Re-add the lost fake mute support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit a686ec4c5f28eb1b384e4b87b08543155c970072
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a686ec4c.failed

Yet another regression by the transition to regmap cache; for better
usability, we had the fake mute control using the zero amp value for
Conexant codecs, and this was forgotten in the new hda core code.

Since the bits 4-7 are unused for the amp registers (as we follow the
syntax of AMP_GET verb), the bit 4 is now used to indicate the fake
mute.  For setting this flag, snd_hda_codec_amp_update() becomes a
function from a simple macro.  The bonus is that it gained a proper
function description.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit a686ec4c5f28eb1b384e4b87b08543155c970072)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/hda_regmap.h
#	sound/hda/hdac_regmap.c
#	sound/pci/hda/hda_local.h
diff --cc sound/pci/hda/hda_local.h
index 1d001647fc47,bed66c314431..000000000000
--- a/sound/pci/hda/hda_local.h
+++ b/sound/pci/hda/hda_local.h
@@@ -127,10 -127,10 +127,17 @@@ int snd_hda_mixer_amp_switch_put_beep(s
  				      struct snd_ctl_elem_value *ucontrol);
  #endif
  /* lowlevel accessor with caching; use carefully */
++<<<<<<< HEAD
 +int snd_hda_codec_amp_read(struct hda_codec *codec, hda_nid_t nid, int ch,
 +			   int direction, int index);
 +int snd_hda_codec_amp_update(struct hda_codec *codec, hda_nid_t nid, int ch,
 +			     int direction, int idx, int mask, int val);
++=======
+ #define snd_hda_codec_amp_read(codec, nid, ch, dir, idx) \
+ 	snd_hdac_regmap_get_amp(&(codec)->core, nid, ch, dir, idx)
+ int snd_hda_codec_amp_update(struct hda_codec *codec, hda_nid_t nid,
+ 			     int ch, int dir, int idx, int mask, int val);
++>>>>>>> a686ec4c5f28 (ALSA: hda - Re-add the lost fake mute support)
  int snd_hda_codec_amp_stereo(struct hda_codec *codec, hda_nid_t nid,
  			     int dir, int idx, int mask, int val);
  int snd_hda_codec_amp_init(struct hda_codec *codec, hda_nid_t nid, int ch,
* Unmerged path include/sound/hda_regmap.h
* Unmerged path sound/hda/hdac_regmap.c
* Unmerged path include/sound/hda_regmap.h
* Unmerged path sound/hda/hdac_regmap.c
diff --git a/sound/pci/hda/hda_codec.c b/sound/pci/hda/hda_codec.c
index 71e62b4ababd..1337c6d56dae 100644
--- a/sound/pci/hda/hda_codec.c
+++ b/sound/pci/hda/hda_codec.c
@@ -1991,6 +1991,31 @@ int snd_hda_codec_amp_update(struct hda_codec *codec, hda_nid_t nid, int ch,
 }
 EXPORT_SYMBOL_GPL(snd_hda_codec_amp_update);
 
+/**
+ * snd_hda_codec_amp_update - update the AMP mono value
+ * @codec: HD-audio codec
+ * @nid: NID to read the AMP value
+ * @ch: channel to update (0 or 1)
+ * @dir: #HDA_INPUT or #HDA_OUTPUT
+ * @idx: the index value (only for input direction)
+ * @mask: bit mask to set
+ * @val: the bits value to set
+ *
+ * Update the AMP values for the given channel, direction and index.
+ */
+int snd_hda_codec_amp_update(struct hda_codec *codec, hda_nid_t nid,
+			     int ch, int dir, int idx, int mask, int val)
+{
+	unsigned int cmd = snd_hdac_regmap_encode_amp(nid, ch, dir, idx);
+
+	/* enable fake mute if no h/w mute but min=mute */
+	if ((query_amp_caps(codec, nid, dir) &
+	     (AC_AMPCAP_MUTE | AC_AMPCAP_MIN_MUTE)) == AC_AMPCAP_MIN_MUTE)
+		cmd |= AC_AMP_FAKE_MUTE;
+	return snd_hdac_regmap_update_raw(&codec->core, cmd, mask, val);
+}
+EXPORT_SYMBOL_GPL(snd_hda_codec_amp_update);
+
 /**
  * snd_hda_codec_amp_stereo - update the AMP stereo values
  * @codec: HD-audio codec
* Unmerged path sound/pci/hda/hda_local.h
