percpu-refcount: implement percpu_ref_cancel_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Tejun Heo <tj@kernel.org>
commit bc497bd33b2d6a6f07bc8574b4764edbd7fdffa8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/bc497bd3.failed

Normally, percpu_ref_init() initializes and percpu_ref_kill()
initiates destruction which completes asynchronously.  The
asynchronous destruction can be problematic in init failure path where
the caller wants to destroy half-constructed object - distinguishing
half-constructed objects from the usual release method can be painful
for complex objects.

This patch implements percpu_ref_cancel_init() which synchronously
destroys the percpu_ref without invoking release.  To avoid
unintentional misuses, the function requires the ref to have finished
percpu_ref_init() but never used and triggers WARN otherwise.

v2: Explain the weird name and usage restriction in the function
    comment.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Acked-by: Kent Overstreet <koverstreet@google.com>
(cherry picked from commit bc497bd33b2d6a6f07bc8574b4764edbd7fdffa8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/percpu-refcount.h
#	lib/percpu-refcount.c
* Unmerged path include/linux/percpu-refcount.h
* Unmerged path lib/percpu-refcount.c
* Unmerged path include/linux/percpu-refcount.h
* Unmerged path lib/percpu-refcount.c
