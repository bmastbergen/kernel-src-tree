scsi: stop decoding if scsi_normalize_sense() fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] stop decoding if scsi_normalize_sense() fails (Ewan Milne) [1124082]
Rebuild_FUZZ: 93.75%
commit-author Hannes Reinecke <hare@suse.de>
commit 149d18cc2143079ac5fc4e61bc53bb532b8eed26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/149d18cc.failed

If scsi_normalize_sense() fails we couldn't decode the sense
buffer, and the scsi_sense_hdr fields are invalid.
For those cases we should rather dump the sense buffer
and not try to decode invalid fields.

	Signed-off-by: Hannes Reinecke <hare@suse.de>
	Reviewed-by: Robert Elliott <elliott@hp.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 149d18cc2143079ac5fc4e61bc53bb532b8eed26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/constants.c
diff --cc drivers/scsi/constants.c
index 2f447075adbb,d7b6e4bfa55c..000000000000
--- a/drivers/scsi/constants.c
+++ b/drivers/scsi/constants.c
@@@ -1518,12 -1520,13 +1513,20 @@@ void __scsi_print_sense(const char *nam
  {
  	struct scsi_sense_hdr sshdr;
  
++<<<<<<< HEAD
 +	printk(KERN_INFO "%s: ", name);
 +	scsi_decode_sense_buffer(sense_buffer, sense_len, &sshdr);
 +	scsi_show_sense_hdr(&sshdr);
++=======
+ 	if (!scsi_normalize_sense(sense_buffer, sense_len, &sshdr)) {
+ 		scsi_dump_sense_buffer(sense_buffer, sense_len);
+ 		return;
+ 	}
+ 	scsi_show_sense_hdr(sdev, name, &sshdr);
++>>>>>>> 149d18cc2143 (scsi: stop decoding if scsi_normalize_sense() fails)
  	scsi_decode_sense_extras(sense_buffer, sense_len, &sshdr);
 -	scsi_show_extd_sense(sdev, name, sshdr.asc, sshdr.ascq);
 +	printk(KERN_INFO "%s: ", name);
 +	scsi_show_extd_sense(sshdr.asc, sshdr.ascq);
  }
  EXPORT_SYMBOL(__scsi_print_sense);
  
* Unmerged path drivers/scsi/constants.c
