PCI: pciehp: Fix pcie_wait_cmd() timeout

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [pci] pciehp: Fix pcie_wait_cmd() timeout (Myron Stowe) [1223472]
Rebuild_FUZZ: 93.33%
commit-author Yinghai Lu <yinghai@kernel.org>
commit 7cbeb9f90db8e56856db7568520b735732d34d86
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7cbeb9f9.failed

pcie_poll_cmd() take msecs instead of jiffies, so convert timeout to msecs.

Fixes: 40b960831cfa ("PCI: pciehp: Compute timeout from hotplug command start time")
	Signed-off-by: Yinghai Lu <yinghai@kernel.org>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 7cbeb9f90db8e56856db7568520b735732d34d86)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/pciehp_hpc.c
diff --cc drivers/pci/hotplug/pciehp_hpc.c
index f253bb808636,2a412fa3b338..000000000000
--- a/drivers/pci/hotplug/pciehp_hpc.c
+++ b/drivers/pci/hotplug/pciehp_hpc.c
@@@ -129,18 -128,52 +129,32 @@@ static int pcie_poll_cmd(struct control
  	return 0;	/* timeout */
  }
  
 -static void pcie_wait_cmd(struct controller *ctrl)
 +static void pcie_wait_cmd(struct controller *ctrl, int poll)
  {
  	unsigned int msecs = pciehp_poll_mode ? 2500 : 1000;
 -	unsigned long duration = msecs_to_jiffies(msecs);
 -	unsigned long cmd_timeout = ctrl->cmd_started + duration;
 -	unsigned long now, timeout;
 +	unsigned long timeout = msecs_to_jiffies(msecs);
  	int rc;
  
 -	/*
 -	 * If the controller does not generate notifications for command
 -	 * completions, we never need to wait between writes.
 -	 */
 -	if (NO_CMD_CMPL(ctrl))
 -		return;
 -
 -	if (!ctrl->cmd_busy)
 -		return;
 -
 -	/*
 -	 * Even if the command has already timed out, we want to call
 -	 * pcie_poll_cmd() so it can clear PCI_EXP_SLTSTA_CC.
 -	 */
 -	now = jiffies;
 -	if (time_before_eq(cmd_timeout, now))
 -		timeout = 1;
 +	if (poll)
 +		rc = pcie_poll_cmd(ctrl);
  	else
 -		timeout = cmd_timeout - now;
 -
 -	if (ctrl->slot_ctrl & PCI_EXP_SLTCTL_HPIE &&
 -	    ctrl->slot_ctrl & PCI_EXP_SLTCTL_CCIE)
  		rc = wait_event_timeout(ctrl->queue, !ctrl->cmd_busy, timeout);
++<<<<<<< HEAD
++=======
+ 	else
+ 		rc = pcie_poll_cmd(ctrl, jiffies_to_msecs(timeout));
+ 
+ 	/*
+ 	 * Controllers with errata like Intel CF118 don't generate
+ 	 * completion notifications unless the power/indicator/interlock
+ 	 * control bits are changed.  On such controllers, we'll emit this
+ 	 * timeout message when we wait for completion of commands that
+ 	 * don't change those bits, e.g., commands that merely enable
+ 	 * interrupts.
+ 	 */
++>>>>>>> 7cbeb9f90db8 (PCI: pciehp: Fix pcie_wait_cmd() timeout)
  	if (!rc)
 -		ctrl_info(ctrl, "Timeout on hotplug command %#010x (issued %u msec ago)\n",
 -			  ctrl->slot_ctrl,
 -			  jiffies_to_msecs(now - ctrl->cmd_started));
 +		ctrl_dbg(ctrl, "Command not completed in 1000 msec\n");
  }
  
  /**
* Unmerged path drivers/pci/hotplug/pciehp_hpc.c
