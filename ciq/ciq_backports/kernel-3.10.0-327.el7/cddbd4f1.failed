ALSA: line6: Tidy up and typo fixes in comments

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] line6: Tidy up and typo fixes in comments (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 93.18%
commit-author Takashi Iwai <tiwai@suse.de>
commit cddbd4f17078530b4914a42f6d7f3e543b5fad0e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/cddbd4f1.failed

Just reformatting the comments and typos fixed, no functional
changes.  Particularly,
- avoid the kerneldoc marker "/**",
- reduce multiple comment lines into single lines,
- corrected wrongly referred function names

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit cddbd4f17078530b4914a42f6d7f3e543b5fad0e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/line6/driver.h
#	drivers/staging/line6/midi.h
#	drivers/staging/line6/pod.c
#	drivers/staging/line6/toneport.c
#	drivers/staging/line6/variax.c
#	sound/usb/line6/driver.c
#	sound/usb/line6/pcm.h
#	sound/usb/line6/podhd.c
diff --cc drivers/staging/line6/driver.h
index 4fd9dad58be7,80d42a0fd889..000000000000
--- a/drivers/staging/line6/driver.h
+++ b/drivers/staging/line6/driver.h
@@@ -67,119 -60,75 +67,140 @@@ extern const unsigned char line6_midi_i
  static const int SYSEX_DATA_OFS = sizeof(line6_midi_id) + 3;
  static const int SYSEX_EXTRA_SIZE = sizeof(line6_midi_id) + 4;
  
++<<<<<<< HEAD:drivers/staging/line6/driver.h
 +/**
 +	 Common properties of Line6 devices.
 +*/
 +struct line6_properties {
 +	/**
 +		 Bit identifying this device in the line6usb driver.
 +	*/
 +	int device_bit;
 +
 +	/**
 +		 Card id string (maximum 16 characters).
 +		 This can be used to address the device in ALSA programs as
 +		 "default:CARD=<id>"
 +	*/
++=======
+ /*
+ 	 Common properties of Line 6 devices.
+ */
+ struct line6_properties {
+ 	/* Card id string (maximum 16 characters).
+ 	 * This can be used to address the device in ALSA programs as
+ 	 * "default:CARD=<id>"
+ 	 */
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/driver.h
  	const char *id;
  
- 	/**
- 		 Card short name (maximum 32 characters).
- 	*/
+ 	/* Card short name (maximum 32 characters) */
  	const char *name;
  
- 	/**
- 		 Bit vector defining this device's capabilities in the
- 		 line6usb driver.
- 	*/
+ 	/* Bit vector defining this device's capabilities in line6usb driver */
  	int capabilities;
 -
 -	int altsetting;
 -
 -	unsigned ep_ctrl_r;
 -	unsigned ep_ctrl_w;
 -	unsigned ep_audio_r;
 -	unsigned ep_audio_w;
  };
  
++<<<<<<< HEAD:drivers/staging/line6/driver.h
 +/**
 +	 Common data shared by all Line6 devices.
++=======
+ /*
+ 	 Common data shared by all Line 6 devices.
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/driver.h
  	 Corresponds to a pair of USB endpoints.
  */
  struct usb_line6 {
- 	/**
- 		 USB device.
- 	*/
+ 	/* USB device */
  	struct usb_device *usbdev;
  
++<<<<<<< HEAD:drivers/staging/line6/driver.h
 +	/**
 +		 Product id.
 +	*/
 +	int product;
 +
 +	/**
 +		 Properties.
 +	*/
 +	const struct line6_properties *properties;
 +
 +	/**
 +		 Interface number.
 +	*/
 +	int interface_number;
 +
 +	/**
 +		 Interval (ms).
 +	*/
++=======
+ 	/* Properties */
+ 	const struct line6_properties *properties;
+ 
+ 	/* Interval (ms) */
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/driver.h
  	int interval;
  
- 	/**
- 		 Maximum size of USB packet.
- 	*/
+ 	/* Maximum size of USB packet */
  	int max_packet_size;
  
- 	/**
- 		 Device representing the USB interface.
- 	*/
+ 	/* Device representing the USB interface */
  	struct device *ifcdev;
  
++<<<<<<< HEAD:drivers/staging/line6/driver.h
 +	/**
 +		 Line6 sound card data structure.
 +		 Each device has at least MIDI or PCM.
 +	*/
 +	struct snd_card *card;
 +
 +	/**
 +		 Line6 PCM device data structure.
 +	*/
 +	struct snd_line6_pcm *line6pcm;
 +
 +	/**
 +		 Line6 MIDI device data structure.
 +	*/
 +	struct snd_line6_midi *line6midi;
 +
 +	/**
 +		 USB endpoint for listening to control commands.
 +	*/
 +	int ep_control_read;
 +
 +	/**
 +		 USB endpoint for writing control commands.
 +	*/
 +	int ep_control_write;
 +
 +	/**
 +		 URB for listening to PODxt Pro control endpoint.
 +	*/
++=======
+ 	/* Line 6 sound card data structure.
+ 	 * Each device has at least MIDI or PCM.
+ 	 */
+ 	struct snd_card *card;
+ 
+ 	/* Line 6 PCM device data structure */
+ 	struct snd_line6_pcm *line6pcm;
+ 
+ 	/* Line 6 MIDI device data structure */
+ 	struct snd_line6_midi *line6midi;
+ 
+ 	/* URB for listening to PODxt Pro control endpoint */
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/driver.h
  	struct urb *urb_listen;
  
- 	/**
- 		 Buffer for listening to PODxt Pro control endpoint.
- 	*/
+ 	/* Buffer for listening to PODxt Pro control endpoint */
  	unsigned char *buffer_listen;
  
- 	/**
- 		 Buffer for message to be processed.
- 	*/
+ 	/* Buffer for message to be processed */
  	unsigned char *buffer_message;
  
- 	/**
- 		 Length of message to be processed.
- 	*/
+ 	/* Length of message to be processed */
  	int message_length;
 -
 -	void (*process_message)(struct usb_line6 *);
 -	void (*disconnect)(struct usb_line6 *line6);
  };
  
  extern char *line6_alloc_sysex_buffer(struct usb_line6 *line6, int code1,
diff --cc drivers/staging/line6/midi.h
index 78f903fb4d41,cf82d69e2747..000000000000
--- a/drivers/staging/line6/midi.h
+++ b/drivers/staging/line6/midi.h
@@@ -19,49 -19,28 +19,46 @@@
  #define MIDI_BUFFER_SIZE 1024
  
  struct snd_line6_midi {
++<<<<<<< HEAD:drivers/staging/line6/midi.h
 +	/**
 +		 Pointer back to the Line6 driver data structure.
 +	*/
++=======
+ 	/* Pointer back to the Line 6 driver data structure */
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/midi.h
  	struct usb_line6 *line6;
  
- 	/**
- 		 MIDI substream for receiving (or NULL if not active).
- 	*/
+ 	/* MIDI substream for receiving (or NULL if not active) */
  	struct snd_rawmidi_substream *substream_receive;
  
- 	/**
- 		 MIDI substream for transmitting (or NULL if not active).
- 	*/
+ 	/* MIDI substream for transmitting (or NULL if not active) */
  	struct snd_rawmidi_substream *substream_transmit;
  
- 	/**
- 		 Number of currently active MIDI send URBs.
- 	*/
+ 	/* Number of currently active MIDI send URBs */
  	int num_active_send_urbs;
  
++<<<<<<< HEAD:drivers/staging/line6/midi.h
 +	/**
 +		 Spin lock to protect updates of send_urb.
 +	*/
 +	spinlock_t send_urb_lock;
 +
 +	/**
 +		 Spin lock to protect MIDI buffer handling.
 +	*/
 +	spinlock_t midi_transmit_lock;
++=======
+ 	/* Spin lock to protect MIDI buffer handling */
+ 	spinlock_t lock;
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/midi.h
  
- 	/**
- 		 Wait queue for MIDI transmission.
- 	*/
+ 	/* Wait queue for MIDI transmission */
  	wait_queue_head_t send_wait;
  
- 	/**
- 		 Buffer for incoming MIDI stream.
- 	*/
+ 	/* Buffer for incoming MIDI stream */
  	struct midi_buffer midibuf_in;
  
- 	/**
- 		 Buffer for outgoing MIDI stream.
- 	*/
+ 	/* Buffer for outgoing MIDI stream */
  	struct midi_buffer midibuf_out;
  };
  
diff --cc drivers/staging/line6/pod.c
index 711d2c74641b,bc20cf141719..000000000000
--- a/drivers/staging/line6/pod.c
+++ b/drivers/staging/line6/pod.c
@@@ -17,7 -21,67 +17,71 @@@
  #include "capture.h"
  #include "driver.h"
  #include "playback.h"
++<<<<<<< HEAD:drivers/staging/line6/pod.c
 +#include "pod.h"
++=======
+ #include "usbdefs.h"
+ 
+ /*
+ 	Locate name in binary program dump
+ */
+ #define	POD_NAME_OFFSET 0
+ #define	POD_NAME_LENGTH 16
+ 
+ /*
+ 	Other constants
+ */
+ #define POD_CONTROL_SIZE 0x80
+ #define POD_BUFSIZE_DUMPREQ 7
+ #define POD_STARTUP_DELAY 1000
+ 
+ /*
+ 	Stages of POD startup procedure
+ */
+ enum {
+ 	POD_STARTUP_INIT = 1,
+ 	POD_STARTUP_VERSIONREQ,
+ 	POD_STARTUP_WORKQUEUE,
+ 	POD_STARTUP_SETUP,
+ 	POD_STARTUP_LAST = POD_STARTUP_SETUP - 1
+ };
+ 
+ enum {
+ 	LINE6_BASSPODXT,
+ 	LINE6_BASSPODXTLIVE,
+ 	LINE6_BASSPODXTPRO,
+ 	LINE6_POCKETPOD,
+ 	LINE6_PODXT,
+ 	LINE6_PODXTLIVE_POD,
+ 	LINE6_PODXTPRO,
+ };
+ 
+ struct usb_line6_pod {
+ 	/* Generic Line 6 USB data */
+ 	struct usb_line6 line6;
+ 
+ 	/* Instrument monitor level */
+ 	int monitor_level;
+ 
+ 	/* Timer for device initialization */
+ 	struct timer_list startup_timer;
+ 
+ 	/* Work handler for device initialization */
+ 	struct work_struct startup_work;
+ 
+ 	/* Current progress in startup procedure */
+ 	int startup_progress;
+ 
+ 	/* Serial number of device */
+ 	int serial_number;
+ 
+ 	/* Firmware version (x 100) */
+ 	int firmware_version;
+ 
+ 	/* Device ID */
+ 	int device_id;
+ };
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/pod.c
  
  #define POD_SYSEX_CODE 3
  #define POD_BYTES_PER_FRAME 6	/* 24bit audio (stereo) */
diff --cc drivers/staging/line6/toneport.c
index 4f8fc09cde1e,9024acb2b850..000000000000
--- a/drivers/staging/line6/toneport.c
+++ b/drivers/staging/line6/toneport.c
@@@ -17,7 -21,49 +17,53 @@@
  #include "capture.h"
  #include "driver.h"
  #include "playback.h"
++<<<<<<< HEAD:drivers/staging/line6/toneport.c
 +#include "toneport.h"
++=======
+ #include "usbdefs.h"
+ 
+ enum line6_device_type {
+ 	LINE6_GUITARPORT,
+ 	LINE6_PODSTUDIO_GX,
+ 	LINE6_PODSTUDIO_UX1,
+ 	LINE6_PODSTUDIO_UX2,
+ 	LINE6_TONEPORT_GX,
+ 	LINE6_TONEPORT_UX1,
+ 	LINE6_TONEPORT_UX2,
+ };
+ 
+ struct usb_line6_toneport;
+ 
+ struct toneport_led {
+ 	struct led_classdev dev;
+ 	char name[64];
+ 	struct usb_line6_toneport *toneport;
+ 	bool registered;
+ };
+ 
+ struct usb_line6_toneport {
+ 	/* Generic Line 6 USB data */
+ 	struct usb_line6 line6;
+ 
+ 	/* Source selector */
+ 	int source;
+ 
+ 	/* Serial number of device */
+ 	int serial_number;
+ 
+ 	/* Firmware version (x 100) */
+ 	int firmware_version;
+ 
+ 	/* Timer for delayed PCM startup */
+ 	struct timer_list timer;
+ 
+ 	/* Device type */
+ 	enum line6_device_type type;
+ 
+ 	/* LED instances */
+ 	struct toneport_led leds[2];
+ };
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/toneport.c
  
  static int toneport_send_cmd(struct usb_device *usbdev, int cmd1, int cmd2);
  
diff --cc drivers/staging/line6/variax.c
index bd0f694fa8d8,44042cbdef01..000000000000
--- a/drivers/staging/line6/variax.c
+++ b/drivers/staging/line6/variax.c
@@@ -10,10 -10,54 +10,54 @@@
   */
  
  #include <linux/slab.h>
 -#include <linux/spinlock.h>
 -#include <linux/usb.h>
 -#include <linux/wait.h>
 -#include <linux/module.h>
 -#include <sound/core.h>
  
 +#include "audio.h"
  #include "driver.h"
++<<<<<<< HEAD:drivers/staging/line6/variax.c
 +#include "variax.h"
++=======
+ #include "usbdefs.h"
+ 
+ #define VARIAX_STARTUP_DELAY1 1000
+ #define VARIAX_STARTUP_DELAY3 100
+ #define VARIAX_STARTUP_DELAY4 100
+ 
+ /*
+ 	Stages of Variax startup procedure
+ */
+ enum {
+ 	VARIAX_STARTUP_INIT = 1,
+ 	VARIAX_STARTUP_VERSIONREQ,
+ 	VARIAX_STARTUP_WAIT,
+ 	VARIAX_STARTUP_ACTIVATE,
+ 	VARIAX_STARTUP_WORKQUEUE,
+ 	VARIAX_STARTUP_SETUP,
+ 	VARIAX_STARTUP_LAST = VARIAX_STARTUP_SETUP - 1
+ };
+ 
+ enum {
+ 	LINE6_PODXTLIVE_VARIAX,
+ 	LINE6_VARIAX
+ };
+ 
+ struct usb_line6_variax {
+ 	/* Generic Line 6 USB data */
+ 	struct usb_line6 line6;
+ 
+ 	/* Buffer for activation code */
+ 	unsigned char *buffer_activate;
+ 
+ 	/* Handler for device initialization */
+ 	struct work_struct startup_work;
+ 
+ 	/* Timers for device initialization */
+ 	struct timer_list startup_timer1;
+ 	struct timer_list startup_timer2;
+ 
+ 	/* Current progress in startup procedure */
+ 	int startup_progress;
+ };
++>>>>>>> cddbd4f17078 (ALSA: line6: Tidy up and typo fixes in comments):sound/usb/line6/variax.c
  
  #define VARIAX_OFFSET_ACTIVATE 7
  
* Unmerged path sound/usb/line6/driver.c
* Unmerged path sound/usb/line6/pcm.h
* Unmerged path sound/usb/line6/podhd.c
* Unmerged path drivers/staging/line6/driver.h
* Unmerged path drivers/staging/line6/midi.h
* Unmerged path drivers/staging/line6/pod.c
* Unmerged path drivers/staging/line6/toneport.c
* Unmerged path drivers/staging/line6/variax.c
* Unmerged path sound/usb/line6/driver.c
* Unmerged path sound/usb/line6/pcm.h
* Unmerged path sound/usb/line6/podhd.c
