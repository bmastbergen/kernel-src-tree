uprobes: Introduce free_ret_instance()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Oleg Nesterov <oleg@redhat.com>
commit 2bb5e840e873f8778a41801141771f54f547fa65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/2bb5e840.failed

We can simplify uprobe_free_utask() and handle_uretprobe_chain()
if we add a simple helper which does put_uprobe/kfree and
returns the ->next return_instance.

	Tested-by: Pratyush Anand <panand@redhat.com>
	Signed-off-by: Oleg Nesterov <oleg@redhat.com>
	Acked-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Acked-by: Anton Arapov <arapov@gmail.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/20150721134006.GA4740@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 2bb5e840e873f8778a41801141771f54f547fa65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/uprobes.c
diff --cc kernel/events/uprobes.c
index 8d6474b2f80e,d8c702fc836f..000000000000
--- a/kernel/events/uprobes.c
+++ b/kernel/events/uprobes.c
@@@ -1319,6 -1368,24 +1319,27 @@@ unsigned long __weak uprobe_get_swbp_ad
  	return instruction_pointer(regs) - UPROBE_SWBP_INSN_SIZE;
  }
  
++<<<<<<< HEAD
++=======
+ unsigned long uprobe_get_trap_addr(struct pt_regs *regs)
+ {
+ 	struct uprobe_task *utask = current->utask;
+ 
+ 	if (unlikely(utask && utask->active_uprobe))
+ 		return utask->vaddr;
+ 
+ 	return instruction_pointer(regs);
+ }
+ 
+ static struct return_instance *free_ret_instance(struct return_instance *ri)
+ {
+ 	struct return_instance *next = ri->next;
+ 	put_uprobe(ri->uprobe);
+ 	kfree(ri);
+ 	return next;
+ }
+ 
++>>>>>>> 2bb5e840e873 (uprobes: Introduce free_ret_instance())
  /*
   * Called with no locks held.
   * Called in context of a exiting or a exec-ing thread.
* Unmerged path kernel/events/uprobes.c
