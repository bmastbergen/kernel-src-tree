bridge: fix netfilter/NF_BR_LOCAL_OUT for own, locally generated queries

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Linus Lüssing <linus.luessing@web.de>
commit f0b4eeced518c632210ef2aea44fc92cc9e86cce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f0b4eece.failed

Ebtables on the OUTPUT chain (NF_BR_LOCAL_OUT) would not work as expected
for both locally generated IGMP and MLD queries. The IP header specific
filter options are off by 14 Bytes for netfilter (actual output on
interfaces is fine).

NF_HOOK() expects the skb->data to point to the IP header, not the
ethernet one (while dev_queue_xmit() does not). Luckily there is an
br_dev_queue_push_xmit() helper function already - let's just use that.

Introduced by eb1d16414339a6e113d89e2cca2556005d7ce919
("bridge: Add core IGMP snooping support")

Ebtables example:

$ ebtables -I OUTPUT -p IPv6 -o eth1 --logical-out br0 \
	--log --log-level 6 --log-ip6 --log-prefix="~EBT: " -j DROP

before (broken):

~EBT:  IN= OUT=eth1 MAC source = 02:04:64:a4:39:c2 \
	MAC dest = 33:33:00:00:00:01 proto = 0x86dd IPv6 \
	SRC=64a4:39c2:86dd:6000:0000:0020:0001:fe80 IPv6 \
	DST=0000:0000:0000:0004:64ff:fea4:39c2:ff02, \
	IPv6 priority=0x3, Next Header=2

after (working):

~EBT:  IN= OUT=eth1 MAC source = 02:04:64:a4:39:c2 \
	MAC dest = 33:33:00:00:00:01 proto = 0x86dd IPv6 \
	SRC=fe80:0000:0000:0000:0004:64ff:fea4:39c2 IPv6 \
	DST=ff02:0000:0000:0000:0000:0000:0000:0001, \
	IPv6 priority=0x0, Next Header=0

	Signed-off-by: Linus Lüssing <linus.luessing@web.de>
	Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit f0b4eeced518c632210ef2aea44fc92cc9e86cce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index f8395c842ff9,c465876c7861..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -798,12 -813,13 +798,17 @@@ static void __br_multicast_send_query(s
  		return;
  
  	if (port) {
- 		__skb_push(skb, sizeof(struct ethhdr));
  		skb->dev = port->dev;
  		NF_HOOK(NFPROTO_BRIDGE, NF_BR_LOCAL_OUT, skb, NULL, skb->dev,
++<<<<<<< HEAD
 +			dev_queue_xmit);
 +	} else
++=======
+ 			br_dev_queue_push_xmit);
+ 	} else {
+ 		br_multicast_select_own_querier(br, ip, skb);
++>>>>>>> f0b4eeced518 (bridge: fix netfilter/NF_BR_LOCAL_OUT for own, locally generated queries)
  		netif_rx(skb);
 -	}
  }
  
  static void br_multicast_send_query(struct net_bridge *br,
* Unmerged path net/bridge/br_multicast.c
