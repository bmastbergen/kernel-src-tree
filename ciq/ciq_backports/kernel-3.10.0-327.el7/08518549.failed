fs: rework getname_kernel to handle up to PATH_MAX sized filenames

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [fs] namei: rework getname_kernel to handle up to PATH_MAX sized filenames (Paul Moore) [1155208]
Rebuild_FUZZ: 94.81%
commit-author Paul Moore <pmoore@redhat.com>
commit 08518549722f0c992a9e4be71a0777f37147e9d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/08518549.failed

In preparation for expanded use in the kernel, make getname_kernel()
more useful by allowing it to handle any legal filename length.

Thanks to Guenter Roeck for his suggestion to substitute memcpy() for
strlcpy().

CC: linux@roeck-us.net
CC: viro@zeniv.linux.org.uk
CC: linux-fsdevel@vger.kernel.org
	Signed-off-by: Paul Moore <pmoore@redhat.com>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 08518549722f0c992a9e4be71a0777f37147e9d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/namei.c
diff --cc fs/namei.c
index 72c9894b9e82,71dc1cc23b1a..000000000000
--- a/fs/namei.c
+++ b/fs/namei.c
@@@ -210,6 -212,41 +210,44 @@@ getname(const char __user * filename
  	return getname_flags(filename, 0, NULL);
  }
  
++<<<<<<< HEAD
++=======
+ struct filename *
+ getname_kernel(const char * filename)
+ {
+ 	struct filename *result;
+ 	int len = strlen(filename) + 1;
+ 
+ 	result = __getname();
+ 	if (unlikely(!result))
+ 		return ERR_PTR(-ENOMEM);
+ 
+ 	if (len <= EMBEDDED_NAME_MAX) {
+ 		result->name = (char *)(result) + sizeof(*result);
+ 		result->separate = false;
+ 	} else if (len <= PATH_MAX) {
+ 		struct filename *tmp;
+ 
+ 		tmp = kmalloc(sizeof(*tmp), GFP_KERNEL);
+ 		if (unlikely(!tmp)) {
+ 			__putname(result);
+ 			return ERR_PTR(-ENOMEM);
+ 		}
+ 		tmp->name = (char *)result;
+ 		tmp->separate = true;
+ 		result = tmp;
+ 	} else {
+ 		__putname(result);
+ 		return ERR_PTR(-ENAMETOOLONG);
+ 	}
+ 	memcpy((char *)result->name, filename, len);
+ 	result->uptr = NULL;
+ 	result->aname = NULL;
+ 
+ 	return result;
+ }
+ 
++>>>>>>> 08518549722f (fs: rework getname_kernel to handle up to PATH_MAX sized filenames)
  #ifdef CONFIG_AUDITSYSCALL
  void putname(struct filename *name)
  {
* Unmerged path fs/namei.c
