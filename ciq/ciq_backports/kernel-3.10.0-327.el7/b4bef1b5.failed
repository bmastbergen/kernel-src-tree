vlan: kill vlan_put_tag helper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit b4bef1b57544b18899eb15569e3bafd8d2eeeff6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/b4bef1b5.failed

Since both tx and rx paths work with skb->vlan_tci, there's no need for
this function anymore. Switch users directly to __vlan_hwaccel_put_tag.

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b4bef1b57544b18899eb15569e3bafd8d2eeeff6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_alb.c
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_alb.c
index 06a8df1ef842,bb9e9fc45e1b..000000000000
--- a/drivers/net/bonding/bond_alb.c
+++ b/drivers/net/bonding/bond_alb.c
@@@ -506,12 -475,8 +506,17 @@@ static void rlb_update_client(struct rl
  		skb->dev = client_info->slave->dev;
  
  		if (client_info->vlan_id) {
++<<<<<<< HEAD
 +			skb = vlan_put_tag(skb, htons(ETH_P_8021Q), client_info->vlan_id);
 +			if (!skb) {
 +				pr_err("%s: Error: failed to insert VLAN tag\n",
 +				       client_info->slave->bond->dev->name);
 +				continue;
 +			}
++=======
+ 			__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q),
+ 					       client_info->vlan_id);
++>>>>>>> b4bef1b57544 (vlan: kill vlan_put_tag helper)
  		}
  
  		arp_xmit(skb);
@@@ -988,14 -947,8 +993,19 @@@ static void alb_send_lp_vid(struct slav
  	skb->priority = TC_PRIO_CONTROL;
  	skb->dev = slave->dev;
  
++<<<<<<< HEAD
 +	if (vid) {
 +		skb = vlan_put_tag(skb, vlan_proto, vid);
 +		if (!skb) {
 +			pr_err("%s: Error: failed to insert VLAN tag\n",
 +			       slave->bond->dev->name);
 +			return;
 +		}
 +	}
++=======
+ 	if (vid)
+ 		__vlan_hwaccel_put_tag(skb, vlan_proto, vid);
++>>>>>>> b4bef1b57544 (vlan: kill vlan_put_tag helper)
  
  	dev_queue_xmit(skb);
  }
diff --cc drivers/net/bonding/bond_main.c
index 4ea3a26a679d,e26c68232032..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2475,16 -2128,42 +2475,31 @@@ static void bond_arp_send(struct net_de
  			 NULL, slave_dev->dev_addr, NULL);
  
  	if (!skb) {
 -		net_err_ratelimited("ARP packet allocation failed\n");
 +		pr_err("ARP packet allocation failed\n");
  		return;
  	}
 -
 -	if (!tags || tags->vlan_proto == VLAN_N_VID)
 -		goto xmit;
 -
 -	tags++;
 -
 -	/* Go through all the tags backwards and add them to the packet */
 -	while (tags->vlan_proto != VLAN_N_VID) {
 -		if (!tags->vlan_id) {
 -			tags++;
 -			continue;
 -		}
 -
 -		netdev_dbg(slave_dev, "inner tag: proto %X vid %X\n",
 -			   ntohs(outer_tag->vlan_proto), tags->vlan_id);
 -		skb = __vlan_put_tag(skb, tags->vlan_proto,
 -				     tags->vlan_id);
 +	if (vlan_id) {
 +		skb = vlan_put_tag(skb, htons(ETH_P_8021Q), vlan_id);
  		if (!skb) {
++<<<<<<< HEAD
 +			pr_err("failed to insert VLAN tag\n");
 +			return;
 +		}
++=======
+ 			net_err_ratelimited("failed to insert inner VLAN tag\n");
+ 			return;
+ 		}
+ 
+ 		tags++;
+ 	}
+ 	/* Set the outer tag */
+ 	if (outer_tag->vlan_id) {
+ 		netdev_dbg(slave_dev, "outer tag: proto %X vid %X\n",
+ 			   ntohs(outer_tag->vlan_proto), outer_tag->vlan_id);
+ 		__vlan_hwaccel_put_tag(skb, outer_tag->vlan_proto,
+ 				       outer_tag->vlan_id);
++>>>>>>> b4bef1b57544 (vlan: kill vlan_put_tag helper)
  	}
 -
 -xmit:
  	arp_xmit(skb);
  }
  
* Unmerged path drivers/net/bonding/bond_alb.c
* Unmerged path drivers/net/bonding/bond_main.c
diff --git a/drivers/net/usb/cdc_mbim.c b/drivers/net/usb/cdc_mbim.c
index 213b0f0bc55e..9b1984f30fe0 100644
--- a/drivers/net/usb/cdc_mbim.c
+++ b/drivers/net/usb/cdc_mbim.c
@@ -221,7 +221,7 @@ static struct sk_buff *cdc_mbim_process_dgram(struct usbnet *dev, u8 *buf, size_
 
 	/* map MBIM session to VLAN */
 	if (tci)
-		vlan_put_tag(skb, htons(ETH_P_8021Q), tci);
+		__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q), tci);
 err:
 	return skb;
 }
diff --git a/include/linux/if_vlan.h b/include/linux/if_vlan.h
index 978291b95d4e..9e389413ca3b 100644
--- a/include/linux/if_vlan.h
+++ b/include/linux/if_vlan.h
@@ -343,25 +343,6 @@ static inline void __vlan_hwaccel_put_tag(struct sk_buff *skb,
 
 #define HAVE_VLAN_PUT_TAG
 
-/**
- * vlan_put_tag - inserts VLAN tag according to device features
- * @skb: skbuff to tag
- * @vlan_tci: VLAN TCI to insert
- *
- * Assumes skb->dev is the target that will xmit this frame.
- * Returns a VLAN tagged skb.
- */
-static inline struct sk_buff *vlan_put_tag(struct sk_buff *skb,
-					   __be16 vlan_proto, u16 vlan_tci)
-{
-	if (vlan_hw_offload_capable(skb->dev->features, vlan_proto)) {
-		__vlan_hwaccel_put_tag(skb, vlan_proto, vlan_tci);
-		return skb;
-	} else {
-		return __vlan_put_tag(skb, vlan_proto, vlan_tci);
-	}
-}
-
 /**
  * __vlan_get_tag - get the VLAN ID that is part of the payload
  * @skb: skbuff to query
