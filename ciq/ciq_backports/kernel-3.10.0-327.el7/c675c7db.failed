powerpc/book3s: Don't clear MSR_RI in hmi handler.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [powerpc] book3s: Don't clear MSR_RI in hmi handler (Gustavo Duarte) [1221091]
Rebuild_FUZZ: 90.11%
commit-author Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
commit c675c7db629bd1abf4a9a36c0200686716eeea05
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c675c7db.failed

In HMI interrupt handler we don't touch SRR0/SRR1, instead we touch
HSRR0/HSRR1. Hence we don't need to clear MSR_RI bit.

	Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit c675c7db629bd1abf4a9a36c0200686716eeea05)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/exceptions-64s.S
diff --cc arch/powerpc/kernel/exceptions-64s.S
index d587cf01fac4,72e783ea0681..000000000000
--- a/arch/powerpc/kernel/exceptions-64s.S
+++ b/arch/powerpc/kernel/exceptions-64s.S
@@@ -1340,11 -1251,55 +1340,63 @@@ fwnmi_data_area
  	. = 0x8000
  #endif /* defined(CONFIG_PPC_PSERIES) || defined(CONFIG_PPC_POWERNV) */
  
++<<<<<<< HEAD
 +/* Space for CPU0's segment table */
 +	.balign 4096
 +	.globl initial_stab
 +initial_stab:
 +	.space	4096
++=======
+ 	.globl hmi_exception_early
+ hmi_exception_early:
+ 	EXCEPTION_PROLOG_1(PACA_EXGEN, NOTEST, 0xe60)
+ 	mr	r10,r1			/* Save r1			*/
+ 	ld	r1,PACAEMERGSP(r13)	/* Use emergency stack		*/
+ 	subi	r1,r1,INT_FRAME_SIZE	/* alloc stack frame		*/
+ 	std	r9,_CCR(r1)		/* save CR in stackframe	*/
+ 	mfspr	r11,SPRN_HSRR0		/* Save HSRR0 */
+ 	std	r11,_NIP(r1)		/* save HSRR0 in stackframe	*/
+ 	mfspr	r12,SPRN_HSRR1		/* Save SRR1 */
+ 	std	r12,_MSR(r1)		/* save SRR1 in stackframe	*/
+ 	std	r10,0(r1)		/* make stack chain pointer	*/
+ 	std	r0,GPR0(r1)		/* save r0 in stackframe	*/
+ 	std	r10,GPR1(r1)		/* save r1 in stackframe	*/
+ 	EXCEPTION_PROLOG_COMMON_2(PACA_EXGEN)
+ 	EXCEPTION_PROLOG_COMMON_3(0xe60)
+ 	addi	r3,r1,STACK_FRAME_OVERHEAD
+ 	bl	hmi_exception_realmode
+ 	/* Windup the stack. */
+ 	/* Move original HSRR0 and HSRR1 into the respective regs */
+ 	ld	r9,_MSR(r1)
+ 	mtspr	SPRN_HSRR1,r9
+ 	ld	r3,_NIP(r1)
+ 	mtspr	SPRN_HSRR0,r3
+ 	ld	r9,_CTR(r1)
+ 	mtctr	r9
+ 	ld	r9,_XER(r1)
+ 	mtxer	r9
+ 	ld	r9,_LINK(r1)
+ 	mtlr	r9
+ 	REST_GPR(0, r1)
+ 	REST_8GPRS(2, r1)
+ 	REST_GPR(10, r1)
+ 	ld	r11,_CCR(r1)
+ 	mtcr	r11
+ 	REST_GPR(11, r1)
+ 	REST_2GPRS(12, r1)
+ 	/* restore original r1. */
+ 	ld	r1,GPR1(r1)
+ 
+ 	/*
+ 	 * Go to virtual mode and pull the HMI event information from
+ 	 * firmware.
+ 	 */
+ 	.globl hmi_exception_after_realmode
+ hmi_exception_after_realmode:
+ 	SET_SCRATCH0(r13)
+ 	EXCEPTION_PROLOG_0(PACA_EXGEN)
+ 	b	hmi_exception_hv
++>>>>>>> c675c7db629b (powerpc/book3s: Don't clear MSR_RI in hmi handler.)
  
  #ifdef CONFIG_PPC_POWERNV
  _GLOBAL(opal_mc_secondary_handler)
* Unmerged path arch/powerpc/kernel/exceptions-64s.S
