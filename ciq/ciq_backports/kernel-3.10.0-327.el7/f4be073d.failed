perf: Check permission only for parent tracepoint event

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [kenrel] trace: Check permission only for parent tracepoint event (Jiri Olsa) [1253487]
Rebuild_FUZZ: 93.69%
commit-author Jiri Olsa <jolsa@kernel.org>
commit f4be073db878d0e79f74bc36f1642847781791a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f4be073d.failed

There's no need to check cloned event's permission once the
parent was already checked.

Also the code is checking 'current' process permissions, which
is not owner process for cloned events, thus could end up with
wrong permission check result.

	Reported-by: Alexander Yarygin <yarygin@linux.vnet.ibm.com>
	Tested-by: Alexander Yarygin <yarygin@linux.vnet.ibm.com>
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
Link: http://lkml.kernel.org/r/1405079782-8139-1-git-send-email-jolsa@kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit f4be073db878d0e79f74bc36f1642847781791a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/trace_event_perf.c
diff --cc kernel/trace/trace_event_perf.c
index 8354dc81ae64,4b9c114ee9de..000000000000
--- a/kernel/trace/trace_event_perf.c
+++ b/kernel/trace/trace_event_perf.c
@@@ -24,10 -24,44 +24,31 @@@ static int	total_ref_count
  static int perf_trace_event_perm(struct ftrace_event_call *tp_event,
  				 struct perf_event *p_event)
  {
++<<<<<<< HEAD
++=======
+ 	if (tp_event->perf_perm) {
+ 		int ret = tp_event->perf_perm(tp_event, p_event);
+ 		if (ret)
+ 			return ret;
+ 	}
+ 
+ 	/*
+ 	 * We checked and allowed to create parent,
+ 	 * allow children without checking.
+ 	 */
+ 	if (p_event->parent)
+ 		return 0;
+ 
+ 	/*
+ 	 * It's ok to check current process (owner) permissions in here,
+ 	 * because code below is called only via perf_event_open syscall.
+ 	 */
+ 
++>>>>>>> f4be073db878 (perf: Check permission only for parent tracepoint event)
  	/* The ftrace function trace is allowed only for root. */
 -	if (ftrace_event_is_function(tp_event)) {
 -		if (perf_paranoid_tracepoint_raw() && !capable(CAP_SYS_ADMIN))
 -			return -EPERM;
 -
 -		/*
 -		 * We don't allow user space callchains for  function trace
 -		 * event, due to issues with page faults while tracing page
 -		 * fault handler and its overall trickiness nature.
 -		 */
 -		if (!p_event->attr.exclude_callchain_user)
 -			return -EINVAL;
 -
 -		/*
 -		 * Same reason to disable user stack dump as for user space
 -		 * callchains above.
 -		 */
 -		if (p_event->attr.sample_type & PERF_SAMPLE_STACK_USER)
 -			return -EINVAL;
 -	}
 +	if (ftrace_event_is_function(tp_event) &&
 +	    perf_paranoid_tracepoint_raw() && !capable(CAP_SYS_ADMIN))
 +		return -EPERM;
  
  	/* No tracing, just counting, so no obvious leak */
  	if (!(p_event->attr.sample_type & PERF_SAMPLE_RAW))
* Unmerged path kernel/trace/trace_event_perf.c
