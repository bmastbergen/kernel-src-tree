perf/x86/uncore: Rename IvyTown to IvyBridge-EP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] perf/uncore: Rename IvyTown to IvyBridge-EP (Jiri Olsa) [1176340]
Rebuild_FUZZ: 95.56%
commit-author Peter Zijlstra <peterz@infradead.org>
commit ddcd0973fe02aad3d4bdc59dd0f1db90f51105a9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ddcd0973.failed

Keeping track of all the various CPU names is hard enough; adding extra
silly names for no reason is just not helping. If we know the base arch
name (IvyBridge) then we can do the client/server parts with the well
known {,EP,EX} postfixes, no need to remember endless amounts of
unrelated and pointless names for this.

	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/n/tip-8559jke61dsyr7d0i74iutli@git.kernel.org
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Yan, Zheng <zheng.z.yan@intel.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ddcd0973fe02aad3d4bdc59dd0f1db90f51105a9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_uncore.c
#	arch/x86/kernel/cpu/perf_event_intel_uncore.h
#	arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c
diff --cc arch/x86/kernel/cpu/perf_event_intel_uncore.c
index 969a74b7104d,4785ee8ac599..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_uncore.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_uncore.c
@@@ -3854,32 -878,16 +3854,37 @@@ static int __init uncore_pci_init(void
  
  	switch (boot_cpu_data.x86_model) {
  	case 45: /* Sandy Bridge-EP */
 -		ret = snbep_uncore_pci_init();
 +		ret = snbep_pci2phy_map_init(0x3ce0);
 +		if (ret)
 +			return ret;
 +		pci_uncores = snbep_pci_uncores;
 +		uncore_pci_driver = &snbep_uncore_pci_driver;
  		break;
++<<<<<<< HEAD
 +	case 62: /* IvyTown */
 +		ret = snbep_pci2phy_map_init(0x0e1e);
 +		if (ret)
 +			return ret;
 +		pci_uncores = ivt_pci_uncores;
 +		uncore_pci_driver = &ivt_uncore_pci_driver;
++=======
+ 	case 62: /* Ivy Bridge-EP */
+ 		ret = ivbep_uncore_pci_init();
++>>>>>>> ddcd0973fe02 (perf/x86/uncore: Rename IvyTown to IvyBridge-EP)
  		break;
  	case 42: /* Sandy Bridge */
 -		ret = snb_uncore_pci_init();
 +		ret = snb_pci2phy_map_init(PCI_DEVICE_ID_INTEL_SNB_IMC);
 +		if (ret)
 +			return ret;
 +		pci_uncores = snb_pci_uncores;
 +		uncore_pci_driver = &snb_uncore_pci_driver;
  		break;
  	case 58: /* Ivy Bridge */
 -		ret = ivb_uncore_pci_init();
 +		ret = snb_pci2phy_map_init(PCI_DEVICE_ID_INTEL_IVB_IMC);
 +		if (ret)
 +			return ret;
 +		pci_uncores = snb_pci_uncores;
 +		uncore_pci_driver = &ivb_uncore_pci_driver;
  		break;
  	case 60: /* Haswell */
  	case 69: /* Haswell Celeron */
@@@ -4172,28 -1178,17 +4177,33 @@@ static int __init uncore_cpu_init(void
  		break;
  	case 42: /* Sandy Bridge */
  	case 58: /* Ivy Bridge */
 -		snb_uncore_cpu_init();
 +		if (snb_uncore_cbox.num_boxes > max_cores)
 +			snb_uncore_cbox.num_boxes = max_cores;
 +		msr_uncores = snb_msr_uncores;
  		break;
  	case 45: /* Sandy Bridge-EP */
 -		snbep_uncore_cpu_init();
 +		if (snbep_uncore_cbox.num_boxes > max_cores)
 +			snbep_uncore_cbox.num_boxes = max_cores;
 +		msr_uncores = snbep_msr_uncores;
  		break;
  	case 46: /* Nehalem-EX */
 +		uncore_nhmex = true;
  	case 47: /* Westmere-EX aka. Xeon E7 */
 -		nhmex_uncore_cpu_init();
 +		if (!uncore_nhmex)
 +			nhmex_uncore_mbox.event_descs = wsmex_uncore_mbox_events;
 +		if (nhmex_uncore_cbox.num_boxes > max_cores)
 +			nhmex_uncore_cbox.num_boxes = max_cores;
 +		msr_uncores = nhmex_msr_uncores;
  		break;
++<<<<<<< HEAD
 +	case 62: /* IvyTown */
 +		if (ivt_uncore_cbox.num_boxes > max_cores)
 +			ivt_uncore_cbox.num_boxes = max_cores;
 +		msr_uncores = ivt_msr_uncores;
++=======
+ 	case 62: /* Ivy Bridge-EP */
+ 		ivbep_uncore_cpu_init();
++>>>>>>> ddcd0973fe02 (perf/x86/uncore: Rename IvyTown to IvyBridge-EP)
  		break;
  
  	default:
diff --cc arch/x86/kernel/cpu/perf_event_intel_uncore.h
index 90236f0c94a9,1d7e89416018..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_uncore.h
+++ b/arch/x86/kernel/cpu/perf_event_intel_uncore.h
@@@ -694,3 -299,39 +694,42 @@@ static inline bool uncore_box_is_fake(s
  {
  	return (box->phys_id < 0);
  }
++<<<<<<< HEAD
++=======
+ 
+ struct intel_uncore_pmu *uncore_event_to_pmu(struct perf_event *event);
+ struct intel_uncore_box *uncore_pmu_to_box(struct intel_uncore_pmu *pmu, int cpu);
+ struct intel_uncore_box *uncore_event_to_box(struct perf_event *event);
+ u64 uncore_msr_read_counter(struct intel_uncore_box *box, struct perf_event *event);
+ void uncore_pmu_start_hrtimer(struct intel_uncore_box *box);
+ void uncore_pmu_cancel_hrtimer(struct intel_uncore_box *box);
+ void uncore_pmu_event_read(struct perf_event *event);
+ void uncore_perf_event_update(struct intel_uncore_box *box, struct perf_event *event);
+ struct event_constraint *
+ uncore_get_constraint(struct intel_uncore_box *box, struct perf_event *event);
+ void uncore_put_constraint(struct intel_uncore_box *box, struct perf_event *event);
+ u64 uncore_shared_reg_config(struct intel_uncore_box *box, int idx);
+ 
+ extern struct intel_uncore_type **uncore_msr_uncores;
+ extern struct intel_uncore_type **uncore_pci_uncores;
+ extern struct pci_driver *uncore_pci_driver;
+ extern int uncore_pcibus_to_physid[256];
+ extern struct pci_dev *uncore_extra_pci_dev[UNCORE_SOCKET_MAX][UNCORE_EXTRA_PCI_DEV_MAX];
+ extern struct event_constraint uncore_constraint_empty;
+ 
+ /* perf_event_intel_uncore_snb.c */
+ int snb_uncore_pci_init(void);
+ int ivb_uncore_pci_init(void);
+ int hsw_uncore_pci_init(void);
+ void snb_uncore_cpu_init(void);
+ void nhm_uncore_cpu_init(void);
+ 
+ /* perf_event_intel_uncore_snbep.c */
+ int snbep_uncore_pci_init(void);
+ void snbep_uncore_cpu_init(void);
+ int ivbep_uncore_pci_init(void);
+ void ivbep_uncore_cpu_init(void);
+ 
+ /* perf_event_intel_uncore_nhmex.c */
+ void nhmex_uncore_cpu_init(void);
++>>>>>>> ddcd0973fe02 (perf/x86/uncore: Rename IvyTown to IvyBridge-EP)
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore.c
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore.h
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c
