locks: set fl_owner for leases to filp instead of current->files

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jeff Layton <jlayton@primarydata.com>
commit 7ca76311fe6c397e9f332e5e6c79e3310d5ee98a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/7ca76311.failed

Like flock locks, leases are owned by the file description. Now that the
i_have_this_lease check in __break_lease is gone, we don't actually use
the fl_owner for leases for anything. So, it's now safe to set this more
appropriately to the same value as the fl_file.

While we're at it, fix up the comments over the fl_owner_t definition
since they're rather out of date.

	Signed-off-by: Jeff Layton <jlayton@primarydata.com>
(cherry picked from commit 7ca76311fe6c397e9f332e5e6c79e3310d5ee98a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/fs.h
diff --cc include/linux/fs.h
index e90cecea1ac5,bb9484ae1eef..000000000000
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@@ -926,14 -851,8 +926,19 @@@ static inline int file_check_writeable(
   */
  #define FILE_LOCK_DEFERRED 1
  
++<<<<<<< HEAD
 +/*
 + * The POSIX file lock owner is determined by
 + * the "struct files_struct" in the thread group
 + * (or NULL for no owner - BSD locks).
 + *
 + * Lockd stuffs a "host" pointer into this.
 + */
 +typedef struct files_struct *fl_owner_t;
++=======
+ /* legacy typedef, should eventually be removed */
+ typedef void *fl_owner_t;
++>>>>>>> 7ca76311fe6c (locks: set fl_owner for leases to filp instead of current->files)
  
  struct file_lock_operations {
  	void (*fl_copy_lock)(struct file_lock *, struct file_lock *);
diff --git a/fs/locks.c b/fs/locks.c
index 539c15f0037d..93d1a248b61c 100644
--- a/fs/locks.c
+++ b/fs/locks.c
@@ -465,7 +465,7 @@ static int lease_init(struct file *filp, long type, struct file_lock *fl)
 	if (assign_type(fl, type) != 0)
 		return -EINVAL;
 
-	fl->fl_owner = current->files;
+	fl->fl_owner = filp;
 	fl->fl_pid = current->tgid;
 
 	fl->fl_file = filp;
* Unmerged path include/linux/fs.h
