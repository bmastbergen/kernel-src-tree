ALSA: hda - Power down codec automatically at registration

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [alsa] hda - Power down codec automatically at registration (Jaroslav Kysela) [1197064]
Rebuild_FUZZ: 94.55%
commit-author Takashi Iwai <tiwai@suse.de>
commit 709949fbe9632941585dcacabc8a66010030ed10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/709949fb.failed

So far, we let the controller driver power down the all codecs at the
end of probe.  But this can be done better in the codec's dev_register
callback.  This results in the reduction of duplicated codes in each
control driver.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 709949fbe9632941585dcacabc8a66010030ed10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/hda_codec.c
diff --cc sound/pci/hda/hda_codec.c
index d0dbc62c9147,6580a367023e..000000000000
--- a/sound/pci/hda/hda_codec.c
+++ b/sound/pci/hda/hda_codec.c
@@@ -1175,10 -1161,10 +1175,15 @@@ static int snd_hda_codec_dev_register(s
  	struct hda_codec *codec = device->device_data;
  
  	snd_hda_register_beep_device(codec);
 -	if (device_is_registered(hda_codec_dev(codec)))
 +	if (device_is_registered(hda_codec_dev(codec))) {
 +		snd_hda_power_sync(codec);
  		pm_runtime_enable(hda_codec_dev(codec));
++<<<<<<< HEAD
 +	}
++=======
+ 	/* it was powered up in snd_hda_codec_new(), now all done */
+ 	snd_hda_power_down(codec);
++>>>>>>> 709949fbe963 (ALSA: hda - Power down codec automatically at registration)
  	return 0;
  }
  
@@@ -1276,9 -1262,9 +1281,8 @@@ int snd_hda_codec_new(struct hda_bus *b
  
  #ifdef CONFIG_PM
  	/* snd_hda_codec_new() marks the codec as power-up, and leave it as is.
- 	 * the caller has to power down appropriatley after initialization
- 	 * phase.
+ 	 * it's powered down later in snd_hda_codec_dev_register().
  	 */
 -	set_bit(codec->addr, &bus->codec_powered);
  	pm_runtime_set_active(hda_codec_dev(codec));
  	pm_runtime_get_noresume(hda_codec_dev(codec));
  	codec->power_jiffies = jiffies;
* Unmerged path sound/pci/hda/hda_codec.c
diff --git a/sound/pci/hda/hda_intel.c b/sound/pci/hda/hda_intel.c
index 0301732dd71a..c7ed44f55ed5 100644
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@ -1613,19 +1613,6 @@ static int azx_first_init(struct azx *chip)
 	return 0;
 }
 
-static void power_down_all_codecs(struct azx *chip)
-{
-#ifdef CONFIG_PM
-	/* The codecs were powered up in snd_hda_codec_new().
-	 * Now all initialization done, so turn them down if possible
-	 */
-	struct hda_codec *codec;
-	list_for_each_entry(codec, &chip->bus->codec_list, list) {
-		snd_hda_power_down(codec);
-	}
-#endif
-}
-
 #ifdef CONFIG_SND_HDA_PATCH_LOADER
 /* callback from request_firmware_nowait() */
 static void azx_firmware_cb(const struct firmware *fw, void *context)
@@ -1936,7 +1923,6 @@ static int azx_probe_continue(struct azx *chip)
 		goto out_free;
 
 	chip->running = 1;
-	power_down_all_codecs(chip);
 	azx_notifier_register(chip);
 	azx_add_card_list(chip);
 	if ((chip->driver_caps & AZX_DCAPS_PM_RUNTIME) || hda->use_vga_switcheroo)
diff --git a/sound/pci/hda/hda_tegra.c b/sound/pci/hda/hda_tegra.c
index a67269dbf5b1..7773ddba4cf3 100644
--- a/sound/pci/hda/hda_tegra.c
+++ b/sound/pci/hda/hda_tegra.c
@@ -338,17 +338,6 @@ static int hda_tegra_init_chip(struct azx *chip, struct platform_device *pdev)
 	return 0;
 }
 
-/*
- * The codecs were powered up in snd_hda_codec_new().
- * Now all initialization done, so turn them down if possible
- */
-static void power_down_all_codecs(struct azx *chip)
-{
-	struct hda_codec *codec;
-	list_for_each_entry(codec, &chip->bus->codec_list, list)
-		snd_hda_power_down(codec);
-}
-
 static int hda_tegra_first_init(struct azx *chip, struct platform_device *pdev)
 {
 	struct snd_card *card = chip->card;
@@ -524,7 +513,6 @@ static int hda_tegra_probe(struct platform_device *pdev)
 		goto out_free;
 
 	chip->running = 1;
-	power_down_all_codecs(chip);
 	azx_notifier_register(chip);
 
 	return 0;
