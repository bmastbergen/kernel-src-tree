bonding: fix __get_active_agg() RCU logic

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 49b7624eda6867d2803bcc5bbf6f25936184304a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/49b7624e.failed

Currently, the implementation is meaningless - once again, we take the
slave structure and use it after we've exited RCU critical section.

Fix this by removing the rcu_read_lock() from __get_active_agg(), and
ensuring that all its callers are holding RCU.

Fixes: be79bd048 ("bonding: add RCU for bond_3ad_state_machine_handler()")
CC: dingtianhong@huawei.com
CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 49b7624eda6867d2803bcc5bbf6f25936184304a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_3ad.c
diff --cc drivers/net/bonding/bond_3ad.c
index dc508c87249d,cce1f1bf90b4..000000000000
--- a/drivers/net/bonding/bond_3ad.c
+++ b/drivers/net/bonding/bond_3ad.c
@@@ -750,6 -679,7 +750,10 @@@ static u32 __get_agg_bandwidth(struct a
   * __get_active_agg - get the current active aggregator
   * @aggregator: the aggregator we're looking at
   *
++<<<<<<< HEAD
++=======
+  * Caller must hold RCU lock.
++>>>>>>> 49b7624eda68 (bonding: fix __get_active_agg() RCU logic)
   */
  static struct aggregator *__get_active_agg(struct aggregator *aggregator)
  {
@@@ -757,7 -687,7 +761,11 @@@
  	struct list_head *iter;
  	struct slave *slave;
  
++<<<<<<< HEAD
 +	bond_for_each_slave(bond, slave, iter)
++=======
+ 	bond_for_each_slave_rcu(bond, slave, iter)
++>>>>>>> 49b7624eda68 (bonding: fix __get_active_agg() RCU logic)
  		if (SLAVE_AD_INFO(slave).aggregator.is_active)
  			return &(SLAVE_AD_INFO(slave).aggregator);
  
@@@ -1525,7 -1502,7 +1534,11 @@@ static void ad_agg_selection_logic(stru
  	active = __get_active_agg(agg);
  	best = (active && agg_device_up(active)) ? active : NULL;
  
++<<<<<<< HEAD
 +	bond_for_each_slave(bond, slave, iter) {
++=======
+ 	bond_for_each_slave_rcu(bond, slave, iter) {
++>>>>>>> 49b7624eda68 (bonding: fix __get_active_agg() RCU logic)
  		agg = &(SLAVE_AD_INFO(slave).aggregator);
  
  		agg->is_active = 0;
* Unmerged path drivers/net/bonding/bond_3ad.c
