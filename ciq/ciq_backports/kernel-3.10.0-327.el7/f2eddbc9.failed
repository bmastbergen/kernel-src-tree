Drivers: hv: vmbus: Fix a bug in rescind processing in vmbus_close_internal()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] vmbus: Fix a bug in rescind processing in vmbus_close_internal() (Vitaly Kuznetsov) [1203682]
Rebuild_FUZZ: 90.78%
commit-author K. Y. Srinivasan <kys@microsoft.com>
commit f2eddbc9f1a466329c68f3b75e89cfacd2792365
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f2eddbc9.failed

When a channel has been rescinded, the close operation is a noop.
Restructure the code so we deal with the rescind condition after
we properly cleanup the channel. I would like to thank
Dexuan Cui <decui@microsoft.com> for observing this problem.
The current code leaks memory when the channel is rescinded.

The current char-next branch is broken and this patch fixes
the bug.

	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit f2eddbc9f1a466329c68f3b75e89cfacd2792365)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel.c
diff --cc drivers/hv/channel.c
index 45ad7011d110,2c8206d820f2..000000000000
--- a/drivers/hv/channel.c
+++ b/drivers/hv/channel.c
@@@ -552,7 -540,13 +552,17 @@@ static void vmbus_close_internal(struc
  	free_pages((unsigned long)channel->ringbuffer_pages,
  		get_order(channel->ringbuffer_pagecount * PAGE_SIZE));
  
- 
++<<<<<<< HEAD
++
++=======
+ 	/*
+ 	 * If the channel has been rescinded; process device removal.
+ 	 */
+ 	if (channel->rescind)
+ 		hv_process_channel_removal(channel,
+ 					   channel->offermsg.child_relid);
+ 	return ret;
++>>>>>>> f2eddbc9f1a4 (Drivers: hv: vmbus: Fix a bug in rescind processing in vmbus_close_internal())
  }
  
  /*
* Unmerged path drivers/hv/channel.c
