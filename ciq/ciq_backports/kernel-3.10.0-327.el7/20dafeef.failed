xfs: xfs_mru_cache_insert() should use GFP_NOFS

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Byoungyoung Lee <blee@gatech.edu>
commit 20dafeefac97d1a690b113f2a954dc84fdf8f290
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/20dafeef.failed

xfs_mru_cache_insert() can be called from within transaction context
during block allocation like so:

write(2)
  ....
    xfs_get_blocks
      xfs_iomap_write_direct
        start transaction
        xfs_bmapi_write
          xfs_bmapi_allocate
            xfs_bmap_btalloc
              xfs_bmap_btalloc_filestreams
                xfs_filestream_new_ag
                  xfs_filestream_pick_ag
                    xfs_mru_cache_insert
                      radix_tree_preload(GFP_KERNEL)

In this case, GFP_KERNEL is incorrect and can potentially lead to
deadlocks in memory reclaim. It should use GFP_NOFS allocations to
avoid lock recursion problems.

[dchinner: rewrote commit message]

	Signed-off-by: Byoungyoung Lee <blee@gatech.edu>
	Signed-off-by: Sanidhya Kashyap <sanidhya.gatech@gmail.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit 20dafeefac97d1a690b113f2a954dc84fdf8f290)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_mru_cache.c
diff --cc fs/xfs/xfs_mru_cache.c
index 967b183589be,f8a674d7f092..000000000000
--- a/fs/xfs/xfs_mru_cache.c
+++ b/fs/xfs/xfs_mru_cache.c
@@@ -448,16 -435,10 +448,21 @@@ xfs_mru_cache_insert
  
  	ASSERT(mru && mru->lists);
  	if (!mru || !mru->lists)
 -		return -EINVAL;
 +		return EINVAL;
  
++<<<<<<< HEAD
 +	elem = kmem_zone_zalloc(xfs_mru_elem_zone, KM_SLEEP);
 +	if (!elem)
 +		return ENOMEM;
 +
 +	if (radix_tree_preload(GFP_KERNEL)) {
 +		error = ENOMEM;
 +		goto out_free_item;
 +	}
++=======
+ 	if (radix_tree_preload(GFP_NOFS))
+ 		return -ENOMEM;
++>>>>>>> 20dafeefac97 (xfs: xfs_mru_cache_insert() should use GFP_NOFS)
  
  	INIT_LIST_HEAD(&elem->list_node);
  	elem->key = key;
* Unmerged path fs/xfs/xfs_mru_cache.c
