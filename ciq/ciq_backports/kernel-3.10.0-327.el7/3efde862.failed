be2iscsi : Fix the retry count for boot targets

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] be2iscsi: Fix the retry count for boot targets (Rob Evers) [1183800]
Rebuild_FUZZ: 98.92%
commit-author John Soni Jose <sony.john-n@emulex.com>
commit 3efde86222098a301168df5f72ab774511298bca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/3efde862.failed

 Increment the retry count to get the boot target info when
 port async event is received by the driver. Update sysfs enteries
 with the boot target  parameters.

	Signed-off-by: Minh Tran <minhduc.tran@emulex.com>
	Signed-off-by: John Soni Jose <sony.john-n@emulex.com>
	Signed-off-by: Jayamohan Kallickal <jayamohan.kallickal@emulex.com>
	Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
	Signed-off-by: James Bottomley <JBottomley@Odin.com>
(cherry picked from commit 3efde86222098a301168df5f72ab774511298bca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/be2iscsi/be_main.c
diff --cc drivers/scsi/be2iscsi/be_main.c
index e665462c9248,a8c2cd63a062..000000000000
--- a/drivers/scsi/be2iscsi/be_main.c
+++ b/drivers/scsi/be2iscsi/be_main.c
@@@ -4380,11 -4333,17 +4385,23 @@@ static int beiscsi_get_boot_info(struc
  		beiscsi_log(phba, KERN_ERR,
  			    BEISCSI_LOG_INIT | BEISCSI_LOG_CONFIG,
  			    "BM_%d : No boot session\n");
+ 
+ 		if (ret == -ENXIO)
+ 			phba->get_boot = 0;
+ 
+ 
  		return ret;
  	}
++<<<<<<< HEAD
 +	nonemb_cmd.va = pci_alloc_consistent(phba->ctrl.pdev,
 +				sizeof(*session_resp),
 +				&nonemb_cmd.dma);
++=======
+ 	phba->get_boot = 0;
+ 	nonemb_cmd.va = pci_zalloc_consistent(phba->ctrl.pdev,
+ 					      sizeof(*session_resp),
+ 					      &nonemb_cmd.dma);
++>>>>>>> 3efde8622209 (be2iscsi : Fix the retry count for boot targets)
  	if (nonemb_cmd.va == NULL) {
  		beiscsi_log(phba, KERN_ERR,
  			    BEISCSI_LOG_INIT | BEISCSI_LOG_CONFIG,
diff --git a/drivers/scsi/be2iscsi/be_cmds.c b/drivers/scsi/be2iscsi/be_cmds.c
index 339e22eba7ae..65aefaa76ae5 100644
--- a/drivers/scsi/be2iscsi/be_cmds.c
+++ b/drivers/scsi/be2iscsi/be_cmds.c
@@ -452,6 +452,7 @@ void beiscsi_async_link_state_process(struct beiscsi_hba *phba,
 		    ((evt->port_link_status & ASYNC_EVENT_LOGICAL) &&
 		     (evt->port_fault == BEISCSI_PHY_LINK_FAULT_NONE))) {
 		phba->state = BE_ADAPTER_LINK_UP | BE_ADAPTER_CHECK_BOOT;
+		phba->get_boot = BE_GET_BOOT_RETRIES;
 
 		beiscsi_log(phba, KERN_ERR,
 			    BEISCSI_LOG_CONFIG | BEISCSI_LOG_INIT,
@@ -480,6 +481,7 @@ int beiscsi_process_mcc(struct beiscsi_hba *phba)
 				case ASYNC_EVENT_NEW_ISCSI_CONN:
 				case ASYNC_EVENT_NEW_TCP_CONN:
 					phba->state |= BE_ADAPTER_CHECK_BOOT;
+					phba->get_boot = BE_GET_BOOT_RETRIES;
 					beiscsi_log(phba, KERN_ERR,
 						    BEISCSI_LOG_CONFIG |
 						    BEISCSI_LOG_MBOX,
@@ -488,6 +490,8 @@ int beiscsi_process_mcc(struct beiscsi_hba *phba)
 						    compl->flags);
 					break;
 				default:
+					phba->state |= BE_ADAPTER_CHECK_BOOT;
+					phba->get_boot = BE_GET_BOOT_RETRIES;
 					beiscsi_log(phba, KERN_ERR,
 						    BEISCSI_LOG_CONFIG |
 						    BEISCSI_LOG_MBOX,
* Unmerged path drivers/scsi/be2iscsi/be_main.c
diff --git a/drivers/scsi/be2iscsi/be_main.h b/drivers/scsi/be2iscsi/be_main.h
index 25fae06fda68..f68d7f4b12bb 100644
--- a/drivers/scsi/be2iscsi/be_main.h
+++ b/drivers/scsi/be2iscsi/be_main.h
@@ -109,6 +109,9 @@
 
 #define BEISCSI_CLEAN_UNLOAD	0x01
 #define BEISCSI_EEH_UNLOAD	0x02
+
+#define BE_GET_BOOT_RETRIES	45
+#define BE_GET_BOOT_TO		20
 /**
  * hardware needs the async PDU buffers to be posted in multiples of 8
  * So have atleast 8 of them by default
@@ -413,6 +416,7 @@ struct beiscsi_hba {
 	} fw_config;
 
 	unsigned int state;
+	int get_boot;
 	bool fw_timeout;
 	bool ue_detected;
 	struct delayed_work beiscsi_hw_check_task;
