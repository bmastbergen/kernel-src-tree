perf/x86/uncore: Export basic memory events for IVT IMC PMU

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [x86] perf/uncore: Export basic memory events for IVT IMC PMU (Jiri Olsa) [1176340]
Rebuild_FUZZ: 96.49%
commit-author Stephane Eranian <eranian@google.com>
commit 85a16ef66cc8a053de80aadf13722a2c1254d346
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/85a16ef6.failed

This patch exposes two basic events for Ivytown IMC uncore PMU:

- cas_count_read: number of full-cache line reads to memory controller
- cas_count_write: number of full-cache line writes to memory controller

Those events use the same encoding as for SNB-EP, so reuse the same
event table. See specification in:

http://www.intel.com/content/dam/www/public/us/en/documents/manuals/xeon-e5-2600-v2-uncore-manual.pdf

By aggregating all the read and write events from all the memory controllers
of each processor socket, one can determine the total memory bandwidth utilization.

	Signed-off-by: Stephane Eranian <eranian@google.com>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20140812060031.GA25239@quad
	Cc: zheng.z.yan@intel.com
	Cc: ak@linux.intel.com
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 85a16ef66cc8a053de80aadf13722a2c1254d346)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_uncore_snbep.c
