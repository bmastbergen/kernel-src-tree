netfilter: Add nf_hook_state initializer function.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [net] netfilter: Add nf_hook_state initializer function (Jiri Benc) [1230935]
Rebuild_FUZZ: 98.99%
commit-author David Miller <davem@davemloft.net>
commit 107a9f4dc9211c1f91703d1739d7fd22ac58b332
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/107a9f4d.failed

This way we can consolidate where we setup new nf_hook_state objects,
to make sure the entire thing is initialized.

The only other place an nf_hook_object is instantiated is nf_queue,
wherein a structure copy is used.

	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 107a9f4dc9211c1f91703d1739d7fd22ac58b332)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netfilter.h
diff --cc include/linux/netfilter.h
index 3c0221f8945f,b8c88f3c85ff..000000000000
--- a/include/linux/netfilter.h
+++ b/include/linux/netfilter.h
@@@ -43,11 -44,34 +43,39 @@@ int netfilter_init(void)
  struct sk_buff;
  
  struct nf_hook_ops;
++<<<<<<< HEAD
++=======
+ 
+ struct nf_hook_state {
+ 	unsigned int hook;
+ 	int thresh;
+ 	u_int8_t pf;
+ 	struct net_device *in;
+ 	struct net_device *out;
+ 	int (*okfn)(struct sk_buff *);
+ };
+ 
+ static inline void nf_hook_state_init(struct nf_hook_state *p,
+ 				      unsigned int hook,
+ 				      int thresh, u_int8_t pf,
+ 				      struct net_device *indev,
+ 				      struct net_device *outdev,
+ 				      int (*okfn)(struct sk_buff *))
+ {
+ 	p->hook = hook;
+ 	p->thresh = thresh;
+ 	p->pf = pf;
+ 	p->in = indev;
+ 	p->out = outdev;
+ 	p->okfn = okfn;
+ }
+ 
++>>>>>>> 107a9f4dc921 (netfilter: Add nf_hook_state initializer function.)
  typedef unsigned int nf_hookfn(const struct nf_hook_ops *ops,
  			       struct sk_buff *skb,
 -			       const struct nf_hook_state *state);
 +			       const struct net_device *in,
 +			       const struct net_device *out,
 +			       int (*okfn)(struct sk_buff *));
  
  struct nf_hook_ops {
  	struct list_head list;
@@@ -141,8 -156,13 +169,18 @@@ static inline int nf_hook_thresh(u_int8
  				 struct net_device *outdev,
  				 int (*okfn)(struct sk_buff *), int thresh)
  {
++<<<<<<< HEAD
 +	if (nf_hooks_active(pf, hook))
 +		return nf_hook_slow(pf, hook, skb, indev, outdev, okfn, thresh);
++=======
+ 	if (nf_hooks_active(pf, hook)) {
+ 		struct nf_hook_state state;
+ 
+ 		nf_hook_state_init(&state, hook, thresh, pf,
+ 				   indev, outdev, okfn);
+ 		return nf_hook_slow(skb, &state);
+ 	}
++>>>>>>> 107a9f4dc921 (netfilter: Add nf_hook_state initializer function.)
  	return 1;
  }
  
* Unmerged path include/linux/netfilter.h
