drm/i915: Snapshot seqno of most recently submitted request.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [drm] i915: Snapshot seqno of most recently submitted request (Rob Clark) [1249805]
Rebuild_FUZZ: 95.65%
commit-author Tomas Elf <tomas.elf@intel.com>
commit 94f7bbe1509731bdef651d7fb235b2c31fb23be8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/94f7bbe1.failed

The hang checker needs to inspect whether or not the ring request list is empty
as well as if the given engine has reached or passed the most recently
submitted request. The problem with this is that the hang checker cannot grab
the struct_mutex, which is required in order to safely inspect requests since
requests might be deallocated during inspection. In the past we've had kernel
panics due to this very unsynchronized access in the hang checker.

One solution to this problem is to not inspect the requests directly since
we're only interested in the seqno of the most recently submitted request - not
the request itself. Instead the seqno of the most recently submitted request is
stored separately, which the hang checker then inspects, circumventing the
issue of synchronization from the hang checker entirely.

This fixes a regression introduced in

commit 44cdd6d219bc64f6810b8ed0023a4d4db9e0fe68
Author: John Harrison <John.C.Harrison@Intel.com>
Date:   Mon Nov 24 18:49:40 2014 +0000

    drm/i915: Convert 'ring_idle()' to use requests not seqnos

v2 (Chris Wilson):
- Pass current engine seqno to ring_idle() from i915_hangcheck_elapsed() rather
than compute it over again.
- Remove extra whitespace.

Issue: VIZ-5998
	Signed-off-by: Tomas Elf <tomas.elf@intel.com>
	Cc: stable@vger.kernel.org
	Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
[danvet: Add regressing commit citation provided by Chris.]
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit 94f7bbe1509731bdef651d7fb235b2c31fb23be8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_irq.c
#	drivers/gpu/drm/i915/intel_ringbuffer.h
diff --cc drivers/gpu/drm/i915/i915_irq.c
index 80a0ed154d8e,984e2fe6688c..000000000000
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@@ -2882,18 -2706,11 +2882,25 @@@ static void gen8_disable_vblank(struct 
  	spin_unlock_irqrestore(&dev_priv->irq_lock, irqflags);
  }
  
++<<<<<<< HEAD
 +static u32
 +ring_last_seqno(struct intel_engine_cs *ring)
 +{
 +	return list_entry(ring->request_list.prev,
 +			  struct drm_i915_gem_request, list)->seqno;
 +}
 +
++=======
++>>>>>>> 94f7bbe15097 (drm/i915: Snapshot seqno of most recently submitted request.)
  static bool
  ring_idle(struct intel_engine_cs *ring, u32 seqno)
  {
  	return (list_empty(&ring->request_list) ||
++<<<<<<< HEAD
 +		i915_seqno_passed(seqno, ring_last_seqno(ring)));
++=======
+ 		i915_seqno_passed(seqno, ring->last_submitted_seqno));
++>>>>>>> 94f7bbe15097 (drm/i915: Snapshot seqno of most recently submitted request.)
  }
  
  static bool
diff --cc drivers/gpu/drm/i915/intel_ringbuffer.h
index e72017bdcd7f,4be66f60504d..000000000000
--- a/drivers/gpu/drm/i915/intel_ringbuffer.h
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.h
@@@ -167,10 -274,15 +167,21 @@@ struct  intel_engine_cs 
  	/**
  	 * Do we have some not yet emitted requests outstanding?
  	 */
++<<<<<<< HEAD
 +	struct drm_i915_gem_request *preallocated_lazy_request;
 +	u32 outstanding_lazy_seqno;
++=======
+ 	struct drm_i915_gem_request *outstanding_lazy_request;
+ 	/**
+ 	 * Seqno of request most recently submitted to request_list.
+ 	 * Used exclusively by hang checker to avoid grabbing lock while
+ 	 * inspecting request list.
+ 	 */
+ 	u32 last_submitted_seqno;
+ 
++>>>>>>> 94f7bbe15097 (drm/i915: Snapshot seqno of most recently submitted request.)
  	bool gpu_caches_dirty;
 +	bool fbc_dirty;
  
  	wait_queue_head_t irq_queue;
  
diff --git a/drivers/gpu/drm/i915/i915_gem.c b/drivers/gpu/drm/i915/i915_gem.c
index 53b4db8b449c..62d7590ad251 100644
--- a/drivers/gpu/drm/i915/i915_gem.c
+++ b/drivers/gpu/drm/i915/i915_gem.c
@@ -2380,6 +2380,7 @@ int __i915_add_request(struct intel_engine_cs *ring,
 		i915_gem_context_reference(request->ctx);
 
 	request->emitted_jiffies = jiffies;
+	ring->last_submitted_seqno = request->seqno;
 	list_add_tail(&request->list, &ring->request_list);
 	request->file_priv = NULL;
 
* Unmerged path drivers/gpu/drm/i915/i915_irq.c
* Unmerged path drivers/gpu/drm/i915/intel_ringbuffer.h
