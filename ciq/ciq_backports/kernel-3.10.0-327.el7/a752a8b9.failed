bonding: fix packets_per_slave showing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Nikolay Aleksandrov <nikolay@redhat.com>
commit a752a8b94da4865d9c361c16ccf7ccb2994291dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a752a8b9.failed

There's an issue when showing the value of packets_per_slave due to
using signed integer. The value may be < 0 and thus not put through
reciprocal_value() before showing. This patch makes it use unsigned
integer when showing it.

CC: Andy Gospodarek <andy@greyhouse.net>
CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Veaceslav Falico <vfalico@redhat.com>
CC: David S. Miller <davem@davemloft.net>
	Signed-off-by: Nikolay Aleksandrov <nikolay@redhat.com>
	Acked-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a752a8b94da4865d9c361c16ccf7ccb2994291dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_sysfs.c
diff --cc drivers/net/bonding/bond_sysfs.c
index 739d4dbe8629,0ae580bbc5db..000000000000
--- a/drivers/net/bonding/bond_sysfs.c
+++ b/drivers/net/bonding/bond_sysfs.c
@@@ -1745,6 -1630,53 +1745,56 @@@ out
  static DEVICE_ATTR(lp_interval, S_IRUGO | S_IWUSR,
  		   bonding_show_lp_interval, bonding_store_lp_interval);
  
++<<<<<<< HEAD
++=======
+ static ssize_t bonding_show_packets_per_slave(struct device *d,
+ 					      struct device_attribute *attr,
+ 					      char *buf)
+ {
+ 	struct bonding *bond = to_bond(d);
+ 	unsigned int packets_per_slave = bond->params.packets_per_slave;
+ 
+ 	if (packets_per_slave > 1)
+ 		packets_per_slave = reciprocal_value(packets_per_slave);
+ 
+ 	return sprintf(buf, "%u\n", packets_per_slave);
+ }
+ 
+ static ssize_t bonding_store_packets_per_slave(struct device *d,
+ 					       struct device_attribute *attr,
+ 					       const char *buf, size_t count)
+ {
+ 	struct bonding *bond = to_bond(d);
+ 	int new_value, ret = count;
+ 
+ 	if (sscanf(buf, "%d", &new_value) != 1) {
+ 		pr_err("%s: no packets_per_slave value specified.\n",
+ 		       bond->dev->name);
+ 		ret = -EINVAL;
+ 		goto out;
+ 	}
+ 	if (new_value < 0 || new_value > USHRT_MAX) {
+ 		pr_err("%s: packets_per_slave must be between 0 and %u\n",
+ 		       bond->dev->name, USHRT_MAX);
+ 		ret = -EINVAL;
+ 		goto out;
+ 	}
+ 	if (bond->params.mode != BOND_MODE_ROUNDROBIN)
+ 		pr_warn("%s: Warning: packets_per_slave has effect only in balance-rr mode\n",
+ 			bond->dev->name);
+ 	if (new_value > 1)
+ 		bond->params.packets_per_slave = reciprocal_value(new_value);
+ 	else
+ 		bond->params.packets_per_slave = new_value;
+ out:
+ 	return ret;
+ }
+ 
+ static DEVICE_ATTR(packets_per_slave, S_IRUGO | S_IWUSR,
+ 		   bonding_show_packets_per_slave,
+ 		   bonding_store_packets_per_slave);
+ 
++>>>>>>> a752a8b94da4 (bonding: fix packets_per_slave showing)
  static struct attribute *per_bond_attrs[] = {
  	&dev_attr_slaves.attr,
  	&dev_attr_mode.attr,
* Unmerged path drivers/net/bonding/bond_sysfs.c
