hpsa: get rid of cmd_special_alloc and cmd_special_free

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Stephen Cameron <stephenmcameron@gmail.com>
commit 45fcb86e4663122590d243a466eb21ae45890f03
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/45fcb86e.failed

We have commands reserved for internal use.

This is laying the groundwork for removing the internal
queue of commands from the driver so that the locks that
protect that queue may be removed.

	Reviewed-by: Scott Teel <scott.teel@pmcs.com>
	Signed-off-by: Don Brace <don.brace@pmcs.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 45fcb86e4663122590d243a466eb21ae45890f03)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/hpsa.c
diff --cc drivers/scsi/hpsa.c
index 58a3317f7b99,26e3e5b80555..000000000000
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@@ -4621,42 -4607,6 +4618,45 @@@ static struct CommandList *cmd_alloc(st
  	return c;
  }
  
++<<<<<<< HEAD
 +/* For operations that can wait for kmalloc to possibly sleep,
 + * this routine can be called. Lock need not be held to call
 + * cmd_special_alloc. cmd_special_free() is the complement.
 + */
 +static struct CommandList *cmd_special_alloc(struct ctlr_info *h)
 +{
 +	struct CommandList *c;
 +	dma_addr_t cmd_dma_handle, err_dma_handle;
 +
 +	c = pci_alloc_consistent(h->pdev, sizeof(*c), &cmd_dma_handle);
 +	if (c == NULL)
 +		return NULL;
 +	memset(c, 0, sizeof(*c));
 +
 +	c->cmd_type = CMD_SCSI;
 +	c->cmdindex = -1;
 +
 +	c->err_info = pci_alloc_consistent(h->pdev, sizeof(*c->err_info),
 +		    &err_dma_handle);
 +
 +	if (c->err_info == NULL) {
 +		pci_free_consistent(h->pdev,
 +			sizeof(*c), c, cmd_dma_handle);
 +		return NULL;
 +	}
 +	memset(c->err_info, 0, sizeof(*c->err_info));
 +
 +	INIT_LIST_HEAD(&c->list);
 +	c->busaddr = (u32) cmd_dma_handle;
 +	c->ErrDesc.Addr = cpu_to_le64(err_dma_handle);
 +	c->ErrDesc.Len = cpu_to_le32(sizeof(*c->err_info));
 +
 +	c->h = h;
 +	return c;
 +}
 +
++=======
++>>>>>>> 45fcb86e4663 (hpsa: get rid of cmd_special_alloc and cmd_special_free)
  static void cmd_free(struct ctlr_info *h, struct CommandList *c)
  {
  	int i;
* Unmerged path drivers/scsi/hpsa.c
diff --git a/drivers/scsi/hpsa.h b/drivers/scsi/hpsa.h
index 5ee6c6a73b0c..06c9e430a64a 100644
--- a/drivers/scsi/hpsa.h
+++ b/drivers/scsi/hpsa.h
@@ -170,7 +170,7 @@ struct ctlr_info {
 	unsigned long transMethod;
 
 	/* cap concurrent passthrus at some reasonable maximum */
-#define HPSA_MAX_CONCURRENT_PASSTHRUS (20)
+#define HPSA_MAX_CONCURRENT_PASSTHRUS (10)
 	spinlock_t passthru_count_lock; /* protects passthru_count */
 	int passthru_count;
 
