s390: optimize control register update

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [s390] optimize control register update (Hendrik Brueckner) [1204860]
Rebuild_FUZZ: 91.43%
commit-author Martin Schwidefsky <schwidefsky@de.ibm.com>
commit c63badebfebacdba827ab1cc1d420fc81bd8d818
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/c63badeb.failed

It is less expensive to update control registers 0 and 2 with two
individual stctg/lctlg instructions as with a single one that spans
control register 0, 1 and 2.

	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit c63badebfebacdba827ab1cc1d420fc81bd8d818)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/ptrace.c
diff --cc arch/s390/kernel/ptrace.c
index b113cc3c32f6,f6be6087a0e9..000000000000
--- a/arch/s390/kernel/ptrace.c
+++ b/arch/s390/kernel/ptrace.c
@@@ -56,17 -56,26 +56,40 @@@ void update_per_regs(struct task_struc
  #ifdef CONFIG_64BIT
  	/* Take care of the enable/disable of transactional execution. */
  	if (MACHINE_HAS_TE) {
++<<<<<<< HEAD
 +		unsigned long cr0, cr0_new;
 +
 +		__ctl_store(cr0, 0, 0);
 +		/* set or clear transaction execution bit 8. */
 +		if (task->thread.per_flags & PER_FLAG_NO_TE)
 +			cr0_new = cr0 & ~(1UL << 55);
 +		else
 +			cr0_new = cr0 | (1UL << 55);
 +		/* Only load control register 0 if necessary. */
 +		if (cr0 != cr0_new)
 +			__ctl_load(cr0_new, 0, 0);
++=======
+ 		unsigned long cr, cr_new;
+ 
+ 		__ctl_store(cr, 0, 0);
+ 		/* Set or clear transaction execution TXC bit 8. */
+ 		cr_new = cr | (1UL << 55);
+ 		if (task->thread.per_flags & PER_FLAG_NO_TE)
+ 			cr_new &= ~(1UL << 55);
+ 		if (cr_new != cr)
+ 			__ctl_load(cr, 0, 0);
+ 		/* Set or clear transaction execution TDC bits 62 and 63. */
+ 		__ctl_store(cr, 2, 2);
+ 		cr_new = cr & ~3UL;
+ 		if (task->thread.per_flags & PER_FLAG_TE_ABORT_RAND) {
+ 			if (task->thread.per_flags & PER_FLAG_TE_ABORT_RAND_TEND)
+ 				cr_new |= 1UL;
+ 			else
+ 				cr_new |= 2UL;
+ 		}
+ 		if (cr_new != cr)
+ 			__ctl_load(cr_new, 2, 2);
++>>>>>>> c63badebfeba (s390: optimize control register update)
  	}
  #endif
  	/* Copy user specified PER registers */
* Unmerged path arch/s390/kernel/ptrace.c
