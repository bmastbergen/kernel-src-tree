qla2xxx: Enable diagnostic port using NVRAM parameters.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Enable diagnostic port using NVRAM parameters (Chad Dupuis) [1187302]
Rebuild_FUZZ: 99.08%
commit-author Himanshu Madhani <himanshu.madhani@qlogic.com>
commit 25232cc9b8eca0406f51e61e944e854ed021a9d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/25232cc9.failed

	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 25232cc9b8eca0406f51e61e944e854ed021a9d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_def.h
diff --cc drivers/scsi/qla2xxx/qla_def.h
index 823aec28928b,c29f4653db18..000000000000
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@@ -3003,6 -3135,8 +3003,11 @@@ struct qla_hw_data 
      (((ha)->fw_attributes_h << 16 | (ha)->fw_attributes) & BIT_22))
  #define IS_ATIO_MSIX_CAPABLE(ha) (IS_QLA83XX(ha))
  #define IS_TGT_MODE_CAPABLE(ha)	(ha->tgt.atio_q_length)
++<<<<<<< HEAD
++=======
+ #define IS_SHADOW_REG_CAPABLE(ha)  (IS_QLA27XX(ha))
+ #define IS_DPORT_CAPABLE(ha)  (IS_QLA83XX(ha) || IS_QLA27XX(ha))
++>>>>>>> 25232cc9b8ec (qla2xxx: Enable diagnostic port using NVRAM parameters.)
  
  	/* HBA serial number */
  	uint8_t		serial0;
* Unmerged path drivers/scsi/qla2xxx/qla_def.h
diff --git a/drivers/scsi/qla2xxx/qla_init.c b/drivers/scsi/qla2xxx/qla_init.c
index 462d79903da9..31af7ff70552 100644
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@ -2156,6 +2156,10 @@ qla2x00_init_rings(scsi_qla_host_t *vha)
 		mid_init_cb->options = __constant_cpu_to_le16(BIT_1);
 		mid_init_cb->init_cb.execution_throttle =
 		    cpu_to_le16(ha->fw_xcb_count);
+		/* D-Port Status */
+		if (IS_DPORT_CAPABLE(ha))
+			mid_init_cb->init_cb.firmware_options_1 |=
+			    cpu_to_le16(BIT_7);
 	}
 
 	rval = qla2x00_init_firmware(vha, ha->init_cb_size);
