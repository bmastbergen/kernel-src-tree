intel_pstate: honor user space min_perf_pct override on resume

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Kristen Carlson Accardi <kristen@linux.intel.com>
commit a04759924e2528c5cc2af49b183c5638fe8d9bed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/a0475992.failed

If the user has requested an override of the min_perf_pct via
sysfs, then it should be restored whenever policy is updated,
such as on resume.  Take the max of whatever the user requested
and whatever the policy is.

	Signed-off-by: Kristen Carlson Accardi <kristen@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit a04759924e2528c5cc2af49b183c5638fe8d9bed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 208fb8fdd2bc,e7e808d9a8af..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -367,9 -435,13 +371,11 @@@ static ssize_t store_min_perf_pct(struc
  	ret = sscanf(buf, "%u", &input);
  	if (ret != 1)
  		return -EINVAL;
- 	limits.min_perf_pct = clamp_t(int, input, 0 , 100);
+ 
+ 	limits.min_sysfs_pct = clamp_t(int, input, 0 , 100);
+ 	limits.min_perf_pct = max(limits.min_policy_pct, limits.min_sysfs_pct);
  	limits.min_perf = div_fp(int_tofp(limits.min_perf_pct), int_tofp(100));
  
 -	if (hwp_active)
 -		intel_pstate_hwp_set();
  	return count;
  }
  
@@@ -856,8 -936,10 +863,15 @@@ static int intel_pstate_set_policy(stru
  		limits.no_turbo = 0;
  		return 0;
  	}
++<<<<<<< HEAD
 +	limits.min_perf_pct = (policy->min * 100) / policy->cpuinfo.max_freq;
 +	limits.min_perf_pct = clamp_t(int, limits.min_perf_pct, 0 , 100);
++=======
+ 
+ 	limits.min_policy_pct = (policy->min * 100) / policy->cpuinfo.max_freq;
+ 	limits.min_policy_pct = clamp_t(int, limits.min_policy_pct, 0 , 100);
+ 	limits.min_perf_pct = max(limits.min_policy_pct, limits.min_sysfs_pct);
++>>>>>>> a04759924e25 (intel_pstate: honor user space min_perf_pct override on resume)
  	limits.min_perf = div_fp(int_tofp(limits.min_perf_pct), int_tofp(100));
  
  	limits.max_policy_pct = (policy->max * 100) / policy->cpuinfo.max_freq;
* Unmerged path drivers/cpufreq/intel_pstate.c
