NFS: Don't zap caches on fallocate()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [fs] nfs: Don't zap caches on fallocate() ("J. Bruce Fields") [1079385]
Rebuild_FUZZ: 98.63%
commit-author Anna Schumaker <Anna.Schumaker@netapp.com>
commit 9a51940bf65bf9fdc93027d70bdecdfc403c5b24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/9a51940b.failed

This patch adds a GETATTR to the end of ALLOCATE and DEALLOCATE
operations so we can set the updated inode size and change attribute
directly.  DEALLOCATE will still need to release pagecache pages, so
nfs42_proc_deallocate() now calls truncate_pagecache_range() before
contacting the server.

	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 9a51940bf65bf9fdc93027d70bdecdfc403c5b24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs42proc.c
#	fs/nfs/nfs42xdr.c
#	fs/nfs/nfs4file.c
#	include/linux/nfs_xdr.h
diff --cc fs/nfs/nfs4file.c
index cb5f89c48651,151ddff624d4..000000000000
--- a/fs/nfs/nfs4file.c
+++ b/fs/nfs/nfs4file.c
@@@ -115,12 -126,59 +115,57 @@@ nfs4_file_fsync(struct file *file, loff
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NFS_V4_2
+ static loff_t nfs4_file_llseek(struct file *filep, loff_t offset, int whence)
+ {
+ 	loff_t ret;
+ 
+ 	switch (whence) {
+ 	case SEEK_HOLE:
+ 	case SEEK_DATA:
+ 		ret = nfs42_proc_llseek(filep, offset, whence);
+ 		if (ret != -ENOTSUPP)
+ 			return ret;
+ 	default:
+ 		return nfs_file_llseek(filep, offset, whence);
+ 	}
+ }
+ 
+ static long nfs42_fallocate(struct file *filep, int mode, loff_t offset, loff_t len)
+ {
+ 	struct inode *inode = file_inode(filep);
+ 	long ret;
+ 
+ 	if (!S_ISREG(inode->i_mode))
+ 		return -EOPNOTSUPP;
+ 
+ 	if ((mode != 0) && (mode != (FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE)))
+ 		return -EOPNOTSUPP;
+ 
+ 	ret = inode_newsize_ok(inode, offset + len);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	mutex_lock(&inode->i_mutex);
+ 	if (mode & FALLOC_FL_PUNCH_HOLE)
+ 		ret = nfs42_proc_deallocate(filep, offset, len);
+ 	else
+ 		ret = nfs42_proc_allocate(filep, offset, len);
+ 	mutex_unlock(&inode->i_mutex);
+ 
+ 	return ret;
+ }
+ #endif /* CONFIG_NFS_V4_2 */
+ 
++>>>>>>> 9a51940bf65b (NFS: Don't zap caches on fallocate())
  const struct file_operations nfs4_file_operations = {
 -#ifdef CONFIG_NFS_V4_2
 -	.llseek		= nfs4_file_llseek,
 -#else
  	.llseek		= nfs_file_llseek,
 -#endif
 -	.read		= new_sync_read,
 -	.write		= new_sync_write,
 -	.read_iter	= nfs_file_read,
 -	.write_iter	= nfs_file_write,
 +	.read		= do_sync_read,
 +	.write		= do_sync_write,
 +	.aio_read	= nfs_file_read,
 +	.aio_write	= nfs_file_write,
  	.mmap		= nfs_file_mmap,
  	.open		= nfs4_file_open,
  	.flush		= nfs_file_flush,
diff --cc include/linux/nfs_xdr.h
index d874b38c2470,93ab6071bbe9..000000000000
--- a/include/linux/nfs_xdr.h
+++ b/include/linux/nfs_xdr.h
@@@ -1256,6 -1265,43 +1256,46 @@@ nfs_free_pnfs_ds_cinfo(struct pnfs_ds_c
  
  #endif /* CONFIG_NFS_V4_1 */
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NFS_V4_2
+ struct nfs42_falloc_args {
+ 	struct nfs4_sequence_args	seq_args;
+ 
+ 	struct nfs_fh			*falloc_fh;
+ 	nfs4_stateid			 falloc_stateid;
+ 	u64				 falloc_offset;
+ 	u64				 falloc_length;
+ 	const u32			*falloc_bitmask;
+ };
+ 
+ struct nfs42_falloc_res {
+ 	struct nfs4_sequence_res	seq_res;
+ 	unsigned int			status;
+ 
+ 	struct nfs_fattr		*falloc_fattr;
+ 	const struct nfs_server		*falloc_server;
+ };
+ 
+ struct nfs42_seek_args {
+ 	struct nfs4_sequence_args	seq_args;
+ 
+ 	struct nfs_fh			*sa_fh;
+ 	nfs4_stateid			sa_stateid;
+ 	u64				sa_offset;
+ 	u32				sa_what;
+ };
+ 
+ struct nfs42_seek_res {
+ 	struct nfs4_sequence_res	seq_res;
+ 	unsigned int			status;
+ 
+ 	u32	sr_eof;
+ 	u64	sr_offset;
+ };
+ #endif
+ 
++>>>>>>> 9a51940bf65b (NFS: Don't zap caches on fallocate())
  struct nfs_page;
  
  #define NFS_PAGEVEC_SIZE	(8U)
* Unmerged path fs/nfs/nfs42proc.c
* Unmerged path fs/nfs/nfs42xdr.c
* Unmerged path fs/nfs/nfs42proc.c
* Unmerged path fs/nfs/nfs42xdr.c
* Unmerged path fs/nfs/nfs4file.c
* Unmerged path include/linux/nfs_xdr.h
