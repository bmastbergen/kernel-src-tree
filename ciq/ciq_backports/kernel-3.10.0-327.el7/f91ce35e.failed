ACPIPHP / radeon / nouveau: Remove acpi_bus_no_hotplug()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit f91ce35e471ae17552ce7bfe355cfd997e3ad781
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/f91ce35e.failed

Revert parts of f244d8b623da ("ACPIPHP / radeon / nouveau: Fix VGA
switcheroo problem related to hotplug").

A previous commit 5493b31f0b55 ("PCI: Add pci_ignore_hotplug() to ignore
hotplug events for a device") added equivalent functionality implemented in
a different way for both acpiphp and pciehp.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: Alex Deucher <alexander.deucher@amd.com>
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Acked-by: Dave Airlie <airlied@redhat.com>
	Acked-by: Rajat Jain <rajatxjain@gmail.com>
(cherry picked from commit f91ce35e471ae17552ce7bfe355cfd997e3ad781)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nouveau_acpi.c
#	include/acpi/acpi_bus.h
diff --cc drivers/gpu/drm/nouveau/nouveau_acpi.c
index 3465ccfaedf3,622424692b3b..000000000000
--- a/drivers/gpu/drm/nouveau/nouveau_acpi.c
+++ b/drivers/gpu/drm/nouveau/nouveau_acpi.c
@@@ -261,15 -221,14 +260,20 @@@ static int nouveau_dsm_pci_probe(struc
  	if (!dhandle)
  		return false;
  
- 	if (!acpi_has_method(dhandle, "_DSM")) {
- 		nouveau_dsm_priv.other_handle = dhandle;
+ 	if (!acpi_has_method(dhandle, "_DSM"))
  		return false;
++<<<<<<< HEAD
 +	}
 +	if (nouveau_test_dsm(dhandle, nouveau_dsm, NOUVEAU_DSM_POWER))
++=======
+ 
+ 	if (acpi_check_dsm(dhandle, nouveau_dsm_muid, 0x00000102,
+ 			   1 << NOUVEAU_DSM_POWER))
++>>>>>>> f91ce35e471a (ACPIPHP / radeon / nouveau: Remove acpi_bus_no_hotplug())
  		retval |= NOUVEAU_DSM_HAS_MUX;
  
 -	if (nouveau_check_optimus_dsm(dhandle))
 +	if (nouveau_test_dsm(dhandle, nouveau_optimus_dsm,
 +		NOUVEAU_DSM_OPTIMUS_CAPS))
  		retval |= NOUVEAU_DSM_HAS_OPT;
  
  	if (retval & NOUVEAU_DSM_HAS_OPT) {
diff --cc include/acpi/acpi_bus.h
index 4aee46887e66,95c506961a13..000000000000
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@@ -401,7 -409,8 +400,12 @@@ extern struct kobject *acpi_kobj
  extern int acpi_bus_generate_netlink_event(const char*, const char*, u8, int);
  void acpi_bus_private_data_handler(acpi_handle, void *);
  int acpi_bus_get_private_data(acpi_handle, void **);
++<<<<<<< HEAD
 +void acpi_bus_no_hotplug(acpi_handle handle);
++=======
+ int acpi_bus_attach_private_data(acpi_handle, void *);
+ void acpi_bus_detach_private_data(acpi_handle);
++>>>>>>> f91ce35e471a (ACPIPHP / radeon / nouveau: Remove acpi_bus_no_hotplug())
  extern int acpi_notifier_call_chain(struct acpi_device *, u32, u32);
  extern int register_acpi_notifier(struct notifier_block *);
  extern int unregister_acpi_notifier(struct notifier_block *);
diff --git a/drivers/acpi/bus.c b/drivers/acpi/bus.c
index 2b13b24d2284..b650fa02865a 100644
--- a/drivers/acpi/bus.c
+++ b/drivers/acpi/bus.c
@@ -151,16 +151,6 @@ int acpi_bus_get_private_data(acpi_handle handle, void **data)
 }
 EXPORT_SYMBOL(acpi_bus_get_private_data);
 
-void acpi_bus_no_hotplug(acpi_handle handle)
-{
-	struct acpi_device *adev = NULL;
-
-	acpi_bus_get_device(handle, &adev);
-	if (adev)
-		adev->flags.no_hotplug = true;
-}
-EXPORT_SYMBOL_GPL(acpi_bus_no_hotplug);
-
 static void acpi_print_osc_error(acpi_handle handle,
 	struct acpi_osc_context *context, char *error)
 {
* Unmerged path drivers/gpu/drm/nouveau/nouveau_acpi.c
diff --git a/drivers/gpu/drm/radeon/radeon_atpx_handler.c b/drivers/gpu/drm/radeon/radeon_atpx_handler.c
index 29a9fefa3bb5..ca22c70bd6b5 100644
--- a/drivers/gpu/drm/radeon/radeon_atpx_handler.c
+++ b/drivers/gpu/drm/radeon/radeon_atpx_handler.c
@@ -33,7 +33,6 @@ static struct radeon_atpx_priv {
 	bool atpx_detected;
 	/* handle for device - and atpx */
 	acpi_handle dhandle;
-	acpi_handle other_handle;
 	struct radeon_atpx atpx;
 } radeon_atpx_priv;
 
@@ -453,10 +452,9 @@ static bool radeon_atpx_pci_probe_handle(struct pci_dev *pdev)
 		return false;
 
 	status = acpi_get_handle(dhandle, "ATPX", &atpx_handle);
-	if (ACPI_FAILURE(status)) {
-		radeon_atpx_priv.other_handle = dhandle;
+	if (ACPI_FAILURE(status))
 		return false;
-	}
+
 	radeon_atpx_priv.dhandle = dhandle;
 	radeon_atpx_priv.atpx.handle = atpx_handle;
 	return true;
* Unmerged path include/acpi/acpi_bus.h
