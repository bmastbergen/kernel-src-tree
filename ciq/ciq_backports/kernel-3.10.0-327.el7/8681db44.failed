hv: make "monitor_pages" a "real" pointer array

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] make "monitor_pages" a "real" pointer array (Vitaly Kuznetsov) [1201889]
Rebuild_FUZZ: 95.56%
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 8681db445ed407167cd0d78c48727773b132367b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/8681db44.failed

monitor_pages was a void pointer, containing an unknown number of arrays that
we just "knew" were a child and parent array of a specific size.  Instead of
that implicit knowledge, let's make them a real pointer, allowing us to have
type safety, and a semblance of sane addressing schemes.

	Tested-by: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 8681db445ed407167cd0d78c48727773b132367b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/connection.c
diff --cc drivers/hv/connection.c
index cad8295c2bdf,4faea979975e..000000000000
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@@ -78,12 -76,8 +78,17 @@@ static int vmbus_negotiate_version(stru
  	msg->header.msgtype = CHANNELMSG_INITIATE_CONTACT;
  	msg->vmbus_version_requested = version;
  	msg->interrupt_page = virt_to_phys(vmbus_connection.int_page);
++<<<<<<< HEAD
 +	msg->monitor_page1 = virt_to_phys(vmbus_connection.monitor_pages);
 +	msg->monitor_page2 = virt_to_phys(
 +			(void *)((unsigned long)vmbus_connection.monitor_pages +
 +				 PAGE_SIZE));
 +	if (version == VERSION_WIN8_1)
 +		msg->target_vcpu = hv_context.vp_index[smp_processor_id()];
++=======
+ 	msg->monitor_page1 = virt_to_phys(vmbus_connection.monitor_pages[0]);
+ 	msg->monitor_page2 = virt_to_phys(vmbus_connection.monitor_pages[1]);
++>>>>>>> 8681db445ed4 (hv: make "monitor_pages" a "real" pointer array)
  
  	/*
  	 * Add to list before we send the request since we may
diff --git a/drivers/hv/channel.c b/drivers/hv/channel.c
index 45ad7011d110..9ee56fbd9b57 100644
--- a/drivers/hv/channel.c
+++ b/drivers/hv/channel.c
@@ -47,8 +47,8 @@ static void vmbus_setevent(struct vmbus_channel *channel)
 			(unsigned long *) vmbus_connection.send_int_page +
 			(channel->offermsg.child_relid >> 5));
 
-		monitorpage = vmbus_connection.monitor_pages;
-		monitorpage++; /* Get the child to parent monitor page */
+		/* Get the child to parent monitor page */
+		monitorpage = vmbus_connection.monitor_pages[1];
 
 		sync_set_bit(channel->monitor_bit,
 			(unsigned long *)&monitorpage->trigger_group
@@ -69,8 +69,7 @@ void vmbus_get_debug_info(struct vmbus_channel *channel,
 	u8 monitor_group = (u8)channel->offermsg.monitorid / 32;
 	u8 monitor_offset = (u8)channel->offermsg.monitorid % 32;
 
-	monitorpage = (struct hv_monitor_page *)vmbus_connection.monitor_pages;
-
+	monitorpage = vmbus_connection.monitor_pages[0];
 	debuginfo->servermonitor_pending =
 			monitorpage->trigger_group[monitor_group].pending;
 	debuginfo->servermonitor_latency =
@@ -79,8 +78,7 @@ void vmbus_get_debug_info(struct vmbus_channel *channel,
 			monitorpage->parameter[monitor_group]
 					[monitor_offset].connectionid.u.id;
 
-	monitorpage++;
-
+	monitorpage = vmbus_connection.monitor_pages[1];
 	debuginfo->clientmonitor_pending =
 			monitorpage->trigger_group[monitor_group].pending;
 	debuginfo->clientmonitor_latency =
* Unmerged path drivers/hv/connection.c
diff --git a/drivers/hv/hyperv_vmbus.h b/drivers/hv/hyperv_vmbus.h
index b5e790856f6e..5c05c1f8383a 100644
--- a/drivers/hv/hyperv_vmbus.h
+++ b/drivers/hv/hyperv_vmbus.h
@@ -617,7 +617,7 @@ struct vmbus_connection {
 	 * 2 pages - 1st page for parent->child notification and 2nd
 	 * is child->parent notification
 	 */
-	void *monitor_pages;
+	struct hv_monitor_page *monitor_pages[2];
 	struct list_head chn_msg_list;
 	spinlock_t channelmsg_lock;
 
