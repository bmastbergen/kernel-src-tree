Drivers: hv: hv_balloon: correctly handle val.freeram<num_pages case

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [hv] hv_balloon: correctly handle val.freeram<num_pages case (Vitaly Kuznetsov) [1203790]
Rebuild_FUZZ: 89.43%
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit ba0c444153889a9b672974d85a4a57a8eeb49fe3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ba0c4441.failed

'Drivers: hv: hv_balloon: refuse to balloon below the floor' fix does not
correctly handle the case when val.freeram < num_pages as val.freeram is
__kernel_ulong_t and the 'val.freeram - num_pages' value will be a huge
positive value instead of being negative.

Usually host doesn't ask us to balloon more than val.freeram but in case
he have a memory hog started after we post the last pressure report we
can get into troubles.

	Suggested-by: Laszlo Ersek <lersek@redhat.com>
	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Reviewed-by: Laszlo Ersek <lersek@redhat.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ba0c444153889a9b672974d85a4a57a8eeb49fe3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/hv_balloon.c
diff --cc drivers/hv/hv_balloon.c
index 8abd874de236,4052ad8255fa..000000000000
--- a/drivers/hv/hv_balloon.c
+++ b/drivers/hv/hv_balloon.c
@@@ -1145,6 -1151,15 +1145,18 @@@ static void balloon_up(struct work_stru
  	 */
  	alloc_unit = 512;
  
++<<<<<<< HEAD
++=======
+ 	si_meminfo(&val);
+ 	floor = compute_balloon_floor();
+ 
+ 	/* Refuse to balloon below the floor, keep the 2M granularity. */
+ 	if (val.freeram < num_pages || val.freeram - num_pages < floor) {
+ 		num_pages = val.freeram > floor ? (val.freeram - floor) : 0;
+ 		num_pages -= num_pages % PAGES_IN_2M;
+ 	}
+ 
++>>>>>>> ba0c44415388 (Drivers: hv: hv_balloon: correctly handle val.freeram<num_pages case)
  	while (!done) {
  		bl_resp = (struct dm_balloon_response *)send_buffer;
  		memset(send_buffer, 0, PAGE_SIZE);
* Unmerged path drivers/hv/hv_balloon.c
