ACPI / video: Allow forcing native backlight on non win8 machines

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [acpi] video: Allow forcing native backlight on non win8 machines (Benjamin Tissoires) [1218354]
Rebuild_FUZZ: 94.31%
commit-author Aaron Lu <aaron.lu@intel.com>
commit ff92cfe7cbc05c6c62f5b06c7d9090f4c853cd51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/ff92cfe7.failed

The native backlight behavior (so not registering both the acpi-video
and the vendor backlight driver) can be useful on some non win8 machines
too, so change the behavior of the video.use_native_backlight=1 or 0
kernel cmdline option to be: if user has set video.use_native_backlight=1
or 0, use that no matter if it is a win8 system or not. Also, we will
put some known systems into the DMI table to make them either use native
backlight interface or not, and the use_native_backlight_dmi is used to
reflect that.

Original-by: Hans de Goede <hdegoede@redhat.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Aaron Lu <aaron.lu@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit ff92cfe7cbc05c6c62f5b06c7d9090f4c853cd51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/video.c
diff --cc drivers/acpi/video.c
index 7f4cc32e755e,2f45dca31724..000000000000
--- a/drivers/acpi/video.c
+++ b/drivers/acpi/video.c
@@@ -80,13 -79,22 +80,25 @@@ static bool allow_duplicates
  module_param(allow_duplicates, bool, 0644);
  
  /*
 - * For Windows 8 systems: used to decide if video module
 - * should skip registering backlight interface of its own.
 + * Some BIOSes claim they use minimum backlight at boot,
 + * and this may bring dimming screen after boot
   */
++<<<<<<< HEAD
 +static bool use_bios_initial_backlight = 1;
 +module_param(use_bios_initial_backlight, bool, 0644);
++=======
+ enum {
+ 	NATIVE_BACKLIGHT_NOT_SET = -1,
+ 	NATIVE_BACKLIGHT_OFF,
+ 	NATIVE_BACKLIGHT_ON,
+ };
+ 
+ static int use_native_backlight_param = NATIVE_BACKLIGHT_NOT_SET;
+ module_param_named(use_native_backlight, use_native_backlight_param, int, 0444);
+ static int use_native_backlight_dmi = NATIVE_BACKLIGHT_NOT_SET;
++>>>>>>> ff92cfe7cbc0 (ACPI / video: Allow forcing native backlight on non win8 machines)
  
 -static int register_count;
 -static struct mutex video_list_lock;
 -static struct list_head video_bus_head;
 +static int register_count = 0;
  static int acpi_video_bus_add(struct acpi_device *device);
  static int acpi_video_bus_remove(struct acpi_device *device);
  static void acpi_video_bus_notify(struct acpi_device *device, u32 event);
@@@ -224,8 -239,25 +236,30 @@@ static int acpi_video_device_lcd_get_le
  			unsigned long long *level, bool raw);
  static int acpi_video_get_next_level(struct acpi_video_device *device,
  				     u32 level_current, u32 event);
++<<<<<<< HEAD
 +static int acpi_video_switch_brightness(struct acpi_video_device *device,
 +					 int event);
++=======
+ static void acpi_video_switch_brightness(struct work_struct *work);
+ 
+ static bool acpi_video_use_native_backlight(void)
+ {
+ 	if (use_native_backlight_param != NATIVE_BACKLIGHT_NOT_SET)
+ 		return use_native_backlight_param;
+ 	else if (use_native_backlight_dmi != NATIVE_BACKLIGHT_NOT_SET)
+ 		return use_native_backlight_dmi;
+ 	return acpi_osi_is_win8();
+ }
+ 
+ bool acpi_video_verify_backlight_support(void)
+ {
+ 	if (acpi_video_use_native_backlight() &&
+ 	    backlight_device_registered(BACKLIGHT_RAW))
+ 		return false;
+ 	return acpi_video_backlight_support();
+ }
+ EXPORT_SYMBOL_GPL(acpi_video_verify_backlight_support);
++>>>>>>> ff92cfe7cbc0 (ACPI / video: Allow forcing native backlight on non win8 machines)
  
  /* backlight device sysfs support */
  static int acpi_video_get_brightness(struct backlight_device *bd)
@@@ -388,15 -419,9 +422,15 @@@ static int __init video_set_bqc_offset(
  	return 0;
  }
  
 +static int video_ignore_initial_backlight(const struct dmi_system_id *d)
 +{
 +	use_bios_initial_backlight = 0;
 +	return 0;
 +}
 +
  static int __init video_disable_native_backlight(const struct dmi_system_id *d)
  {
- 	use_native_backlight_dmi = false;
+ 	use_native_backlight_dmi = NATIVE_BACKLIGHT_OFF;
  	return 0;
  }
  
* Unmerged path drivers/acpi/video.c
