perf session: Remove perf_session from some deliver event routines

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [perf] session: Remove perf_session from some deliver event routines (Jiri Olsa) [1222189]
Rebuild_FUZZ: 96.06%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 313e53b08e99b1dacf9ea2b0fbe97890db1ea95f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/313e53b0.failed

Further untangling perf_session from plain event delivery routines.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Don Zickus <dzickus@redhat.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-cvz8e6pwyogs4w14582iis9w@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 313e53b08e99b1dacf9ea2b0fbe97890db1ea95f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/session.c
diff --cc tools/perf/util/session.c
index 78b55d673ea4,0133d01d51bd..000000000000
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@@ -957,7 -840,7 +956,11 @@@ static int deliver_sample_value(struct 
  	}
  
  	if (!sid || sid->evsel == NULL) {
++<<<<<<< HEAD
 +		++session->stats.nr_unknown_id;
++=======
+ 		++evlist->stats.nr_unknown_id;
++>>>>>>> 313e53b08e99 (perf session: Remove perf_session from some deliver event routines)
  		return 0;
  	}
  
@@@ -1009,12 -892,12 +1012,13 @@@ static in
  					    &sample->read.one, machine);
  }
  
 -int perf_session__deliver_event(struct perf_session *session,
 -				union perf_event *event,
 -				struct perf_sample *sample,
 -				struct perf_tool *tool, u64 file_offset)
 +static int perf_session_deliver_event(struct perf_session *session,
 +				      union perf_event *event,
 +				      struct perf_sample *sample,
 +				      struct perf_tool *tool,
 +				      u64 file_offset)
  {
+ 	struct perf_evlist *evlist = session->evlist;
  	struct perf_evsel *evsel;
  	struct machine *machine;
  
@@@ -1028,15 -911,14 +1032,22 @@@
  	case PERF_RECORD_SAMPLE:
  		dump_sample(evsel, event, sample);
  		if (evsel == NULL) {
++<<<<<<< HEAD
 +			++session->stats.nr_unknown_id;
 +			return 0;
 +		}
 +		if (machine == NULL) {
 +			++session->stats.nr_unprocessable_samples;
++=======
+ 			++evlist->stats.nr_unknown_id;
  			return 0;
  		}
- 		return perf_session__deliver_sample(session, tool, event,
- 						    sample, evsel, machine);
+ 		if (machine == NULL) {
+ 			++evlist->stats.nr_unprocessable_samples;
++>>>>>>> 313e53b08e99 (perf session: Remove perf_session from some deliver event routines)
+ 			return 0;
+ 		}
+ 		return perf_evlist__deliver_sample(evlist, tool, event, sample, evsel, machine);
  	case PERF_RECORD_MMAP:
  		return tool->mmap(tool, event, sample, machine);
  	case PERF_RECORD_MMAP2:
@@@ -1049,7 -931,7 +1060,11 @@@
  		return tool->exit(tool, event, sample, machine);
  	case PERF_RECORD_LOST:
  		if (tool->lost == perf_event__process_lost)
++<<<<<<< HEAD
 +			session->stats.total_lost += event->lost.lost;
++=======
+ 			evlist->stats.total_lost += event->lost.lost;
++>>>>>>> 313e53b08e99 (perf session: Remove perf_session from some deliver event routines)
  		return tool->lost(tool, event, sample, machine);
  	case PERF_RECORD_READ:
  		return tool->read(tool, event, sample, evsel, machine);
@@@ -1058,7 -940,7 +1073,11 @@@
  	case PERF_RECORD_UNTHROTTLE:
  		return tool->unthrottle(tool, event, sample, machine);
  	default:
++<<<<<<< HEAD
 +		++session->stats.nr_unknown_events;
++=======
+ 		++evlist->stats.nr_unknown_events;
++>>>>>>> 313e53b08e99 (perf session: Remove perf_session from some deliver event routines)
  		return -1;
  	}
  }
@@@ -1194,7 -1077,7 +1214,11 @@@ static s64 perf_session__process_event(
  	if (event->header.type >= PERF_RECORD_HEADER_MAX)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	events_stats__inc(&session->stats, event->header.type);
++=======
+ 	events_stats__inc(&evlist->stats, event->header.type);
++>>>>>>> 313e53b08e99 (perf session: Remove perf_session from some deliver event routines)
  
  	if (event->header.type >= PERF_RECORD_USER_TYPE_START)
  		return perf_session__process_user_event(session, event, tool, file_offset);
* Unmerged path tools/perf/util/session.c
