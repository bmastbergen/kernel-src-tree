target/iscsi: Fix np_ip bracket issue by removing np_ip

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [target] iscsi: Fix np_ip bracket issue by removing np_ip (Andy Grover) [1249107]
Rebuild_FUZZ: 93.20%
commit-author Andy Grover <agrover@redhat.com>
commit 76c28f1fcfeb42b47f798fe498351ee1d60086ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/76c28f1f.failed

Revert commit 1997e6259, which causes double brackets on ipv6
inaddr_any addresses.

Since we have np_sockaddr, if we need a textual representation we can
use "%pISc".

Change iscsit_add_network_portal() and iscsit_add_np() signatures to remove
*ip_str parameter.

Fix and extend some comments earlier in the function.

Tested to work for :: and ::1 via iscsiadm, previously :: failed, see
https://bugzilla.redhat.com/show_bug.cgi?id=1249107 .

CC: stable@vger.kernel.org
	Signed-off-by: Andy Grover <agrover@redhat.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 76c28f1fcfeb42b47f798fe498351ee1d60086ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/iscsi/iscsi_target.c
#	drivers/target/iscsi/iscsi_target_tpg.c
diff --cc drivers/target/iscsi/iscsi_target.c
index ab99bab1af07,d75eeb5ce13a..000000000000
--- a/drivers/target/iscsi/iscsi_target.c
+++ b/drivers/target/iscsi/iscsi_target.c
@@@ -3467,13 -3461,44 +3464,54 @@@ static int iscsit_build_sendtargets_res
  				struct iscsi_np *np = tpg_np->tpg_np;
  				bool inaddr_any = iscsit_check_inaddr_any(np);
  
++<<<<<<< HEAD
 +				len = sprintf(buf, "TargetAddress="
 +					"%s:%hu,%hu",
 +					(inaddr_any == false) ?
 +						np->np_ip : conn->local_ip,
 +					(inaddr_any == false) ?
 +						np->np_port : conn->local_port,
 +					tpg->tpgt);
++=======
+ 				if (np->np_network_transport != network_transport)
+ 					continue;
+ 
+ 				if (!target_name_printed) {
+ 					len = sprintf(buf, "TargetName=%s",
+ 						      tiqn->tiqn);
+ 					len += 1;
+ 
+ 					if ((len + payload_len) > buffer_len) {
+ 						spin_unlock(&tpg->tpg_np_lock);
+ 						spin_unlock(&tiqn->tiqn_tpg_lock);
+ 						end_of_buf = 1;
+ 						goto eob;
+ 					}
+ 
+ 					if (skip_bytes && len <= skip_bytes) {
+ 						skip_bytes -= len;
+ 					} else {
+ 						memcpy(payload + payload_len, buf, len);
+ 						payload_len += len;
+ 						target_name_printed = 1;
+ 						if (len > skip_bytes)
+ 							skip_bytes = 0;
+ 					}
+ 				}
+ 
+ 				if (inaddr_any) {
+ 					len = sprintf(buf, "TargetAddress="
+ 						      "%s:%hu,%hu",
+ 						      conn->local_ip,
+ 						      np->np_port,
+ 						      tpg->tpgt);
+ 				} else {
+ 					len = sprintf(buf, "TargetAddress="
+ 						      "%pISpc,%hu",
+ 						      &np->np_sockaddr,
+ 						      tpg->tpgt);
+ 				}
++>>>>>>> 76c28f1fcfeb (target/iscsi: Fix np_ip bracket issue by removing np_ip)
  				len += 1;
  
  				if ((len + payload_len) > buffer_len) {
diff --cc drivers/target/iscsi/iscsi_target_tpg.c
index 75a4e83842c2,31007cb4c877..000000000000
--- a/drivers/target/iscsi/iscsi_target_tpg.c
+++ b/drivers/target/iscsi/iscsi_target_tpg.c
@@@ -468,9 -469,9 +467,15 @@@ struct iscsi_tpg_np *iscsit_tpg_add_net
  
  	if (!tpg_np_parent) {
  		if (iscsit_tpg_check_network_portal(tpg->tpg_tiqn, sockaddr,
++<<<<<<< HEAD
 +				network_transport) == true) {
 +			pr_err("Network Portal: %s already exists on a"
 +				" different TPG on %s\n", ip_str,
++=======
+ 				network_transport)) {
+ 			pr_err("Network Portal: %pISc already exists on a"
+ 				" different TPG on %s\n", sockaddr,
++>>>>>>> 76c28f1fcfeb (target/iscsi: Fix np_ip bracket issue by removing np_ip)
  				tpg->tpg_tiqn->tiqn);
  			return ERR_PTR(-EEXIST);
  		}
* Unmerged path drivers/target/iscsi/iscsi_target.c
diff --git a/drivers/target/iscsi/iscsi_target.h b/drivers/target/iscsi/iscsi_target.h
index 2c437cb8ca00..71df0ec7a367 100644
--- a/drivers/target/iscsi/iscsi_target.h
+++ b/drivers/target/iscsi/iscsi_target.h
@@ -11,7 +11,7 @@ extern int iscsit_deaccess_np(struct iscsi_np *, struct iscsi_portal_group *);
 extern bool iscsit_check_np_match(struct __kernel_sockaddr_storage *,
 				struct iscsi_np *, int);
 extern struct iscsi_np *iscsit_add_np(struct __kernel_sockaddr_storage *,
-				char *, int);
+				int);
 extern int iscsit_reset_np_thread(struct iscsi_np *, struct iscsi_tpg_np *,
 				struct iscsi_portal_group *);
 extern int iscsit_del_np(struct iscsi_np *);
diff --git a/drivers/target/iscsi/iscsi_target_configfs.c b/drivers/target/iscsi/iscsi_target_configfs.c
index 759cf6d6a5de..2b3f42f6a4ec 100644
--- a/drivers/target/iscsi/iscsi_target_configfs.c
+++ b/drivers/target/iscsi/iscsi_target_configfs.c
@@ -103,7 +103,7 @@ static ssize_t lio_target_np_store_sctp(
 		 * Use existing np->np_sockaddr for SCTP network portal reference
 		 */
 		tpg_np_sctp = iscsit_tpg_add_network_portal(tpg, &np->np_sockaddr,
-					np->np_ip, tpg_np, ISCSI_SCTP_TCP);
+					tpg_np, ISCSI_SCTP_TCP);
 		if (!tpg_np_sctp || IS_ERR(tpg_np_sctp))
 			goto out;
 	} else {
@@ -181,7 +181,7 @@ static ssize_t lio_target_np_store_iser(
 		}
 
 		tpg_np_iser = iscsit_tpg_add_network_portal(tpg, &np->np_sockaddr,
-				np->np_ip, tpg_np, ISCSI_INFINIBAND);
+				tpg_np, ISCSI_INFINIBAND);
 		if (IS_ERR(tpg_np_iser)) {
 			rc = PTR_ERR(tpg_np_iser);
 			goto out;
@@ -252,8 +252,8 @@ static struct se_tpg_np *lio_target_call_addnptotpg(
 			return ERR_PTR(-EINVAL);
 		}
 		str++; /* Skip over leading "[" */
-		*str2 = '\0'; /* Terminate the IPv6 address */
-		str2++; /* Skip over the "]" */
+		*str2 = '\0'; /* Terminate the unbracketed IPv6 address */
+		str2++; /* Skip over the \0 */
 		port_str = strstr(str2, ":");
 		if (!port_str) {
 			pr_err("Unable to locate \":port\""
@@ -320,7 +320,7 @@ static struct se_tpg_np *lio_target_call_addnptotpg(
 	 * sys/kernel/config/iscsi/$IQN/$TPG/np/$IP:$PORT/
 	 *
 	 */
-	tpg_np = iscsit_tpg_add_network_portal(tpg, &sockaddr, str, NULL,
+	tpg_np = iscsit_tpg_add_network_portal(tpg, &sockaddr, NULL,
 				ISCSI_TCP);
 	if (IS_ERR(tpg_np)) {
 		iscsit_put_tpg(tpg);
@@ -348,8 +348,8 @@ static void lio_target_call_delnpfromtpg(
 
 	se_tpg = &tpg->tpg_se_tpg;
 	pr_debug("LIO_Target_ConfigFS: DEREGISTER -> %s TPGT: %hu"
-		" PORTAL: %s:%hu\n", config_item_name(&se_tpg->se_tpg_wwn->wwn_group.cg_item),
-		tpg->tpgt, tpg_np->tpg_np->np_ip, tpg_np->tpg_np->np_port);
+		" PORTAL: %pISc:%hu\n", config_item_name(&se_tpg->se_tpg_wwn->wwn_group.cg_item),
+		tpg->tpgt, &tpg_np->tpg_np->np_sockaddr, tpg_np->tpg_np->np_port);
 
 	ret = iscsit_tpg_del_network_portal(tpg, tpg_np);
 	if (ret < 0)
diff --git a/drivers/target/iscsi/iscsi_target_core.h b/drivers/target/iscsi/iscsi_target_core.h
index 909fde99d2ab..46926f2c4ef6 100644
--- a/drivers/target/iscsi/iscsi_target_core.h
+++ b/drivers/target/iscsi/iscsi_target_core.h
@@ -768,7 +768,6 @@ struct iscsi_np {
 	enum iscsi_timer_flags_table np_login_timer_flags;
 	u32			np_exports;
 	enum np_flags_table	np_flags;
-	unsigned char		np_ip[IPV6_ADDRESS_SPACE];
 	u16			np_port;
 	spinlock_t		np_thread_lock;
 	struct completion	np_restart_comp;
diff --git a/drivers/target/iscsi/iscsi_target_login.c b/drivers/target/iscsi/iscsi_target_login.c
index c57779e1a97c..1422f8310ea9 100644
--- a/drivers/target/iscsi/iscsi_target_login.c
+++ b/drivers/target/iscsi/iscsi_target_login.c
@@ -819,8 +819,8 @@ static void iscsi_handle_login_thread_timeout(unsigned long data)
 	struct iscsi_np *np = (struct iscsi_np *) data;
 
 	spin_lock_bh(&np->np_thread_lock);
-	pr_err("iSCSI Login timeout on Network Portal %s:%hu\n",
-			np->np_ip, np->np_port);
+	pr_err("iSCSI Login timeout on Network Portal %pISc:%hu\n",
+			&np->np_sockaddr, np->np_port);
 
 	if (np->np_login_timer_flags & ISCSI_TF_STOP) {
 		spin_unlock_bh(&np->np_thread_lock);
@@ -1222,8 +1222,8 @@ static int __iscsi_target_login_thread(struct iscsi_np *np)
 	spin_lock_bh(&np->np_thread_lock);
 	if (np->np_thread_state != ISCSI_NP_THREAD_ACTIVE) {
 		spin_unlock_bh(&np->np_thread_lock);
-		pr_err("iSCSI Network Portal on %s:%hu currently not"
-			" active.\n", np->np_ip, np->np_port);
+		pr_err("iSCSI Network Portal on %pISc:%hu currently not"
+			" active.\n", &np->np_sockaddr, np->np_port);
 		iscsit_tx_login_rsp(conn, ISCSI_STATUS_CLS_TARGET_ERR,
 				ISCSI_LOGIN_STATUS_SVC_UNAVAILABLE);
 		goto new_sess_out;
* Unmerged path drivers/target/iscsi/iscsi_target_tpg.c
diff --git a/drivers/target/iscsi/iscsi_target_tpg.h b/drivers/target/iscsi/iscsi_target_tpg.h
index dda48c141a8c..fb50cb04eb6b 100644
--- a/drivers/target/iscsi/iscsi_target_tpg.h
+++ b/drivers/target/iscsi/iscsi_target_tpg.h
@@ -23,7 +23,7 @@ extern struct iscsi_node_attrib *iscsit_tpg_get_node_attrib(struct iscsi_session
 extern void iscsit_tpg_del_external_nps(struct iscsi_tpg_np *);
 extern struct iscsi_tpg_np *iscsit_tpg_locate_child_np(struct iscsi_tpg_np *, int);
 extern struct iscsi_tpg_np *iscsit_tpg_add_network_portal(struct iscsi_portal_group *,
-			struct __kernel_sockaddr_storage *, char *, struct iscsi_tpg_np *,
+			struct __kernel_sockaddr_storage *, struct iscsi_tpg_np *,
 			int);
 extern int iscsit_tpg_del_network_portal(struct iscsi_portal_group *,
 			struct iscsi_tpg_np *);
