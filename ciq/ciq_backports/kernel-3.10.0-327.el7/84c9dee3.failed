pnfs: enable CB_NOTIFY_DEVICEID support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 84c9dee3adc2bc49a52af74f18378a4887448288
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/84c9dee3.failed

This code has been around for a while, but never was enabled, although
it is in a working shape.

Note that we implement NOTIFY_DEVICEID4_CHANGE identical to
NOTIFY_DEVICEID4_DELETE.  Given that in either case we can't do anything
but preventing further lookups of a given device ID there isn't much difference
in semantics for the two.  For the delete case the server MUST ensure that
there are no outstanding layouts, while for the change case it doesn't, but
that has little relevance to the client.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 84c9dee3adc2bc49a52af74f18378a4887448288)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4xdr.c
diff --cc fs/nfs/nfs4xdr.c
index f2cd957adb90,005d03c5d274..000000000000
--- a/fs/nfs/nfs4xdr.c
+++ b/fs/nfs/nfs4xdr.c
@@@ -362,19 -362,13 +362,29 @@@ static int nfs4_stat_to_errno(int)
  				XDR_QUADLEN(NFS4_MAX_SESSIONID_LEN) + 5)
  #define encode_reclaim_complete_maxsz	(op_encode_hdr_maxsz + 4)
  #define decode_reclaim_complete_maxsz	(op_decode_hdr_maxsz + 4)
++<<<<<<< HEAD
 +#define encode_getdevicelist_maxsz (op_encode_hdr_maxsz + 4 + \
 +				encode_verifier_maxsz)
 +#define decode_getdevicelist_maxsz (op_decode_hdr_maxsz + \
 +				2 /* nfs_cookie4 gdlr_cookie */ + \
 +				decode_verifier_maxsz \
 +				  /* verifier4 gdlr_verifier */ + \
 +				1 /* gdlr_deviceid_list count */ + \
 +				XDR_QUADLEN(NFS4_PNFS_GETDEVLIST_MAXNUM * \
 +					    NFS4_DEVICEID4_SIZE) \
 +				  /* gdlr_deviceid_list */ + \
 +				1 /* bool gdlr_eof */)
 +#define encode_getdeviceinfo_maxsz (op_encode_hdr_maxsz + 4 + \
 +				XDR_QUADLEN(NFS4_DEVICEID4_SIZE))
++=======
+ #define encode_getdeviceinfo_maxsz (op_encode_hdr_maxsz + \
+ 				XDR_QUADLEN(NFS4_DEVICEID4_SIZE) + \
+ 				1 /* layout type */ + \
+ 				1 /* maxcount */ + \
+ 				1 /* bitmap size */ + \
+ 				1 /* notification bitmap length */ + \
+ 				1 /* notification bitmap, word 0 */)
++>>>>>>> 84c9dee3adc2 (pnfs: enable CB_NOTIFY_DEVICEID support)
  #define decode_getdeviceinfo_maxsz (op_decode_hdr_maxsz + \
  				1 /* layout type */ + \
  				1 /* opaque devaddr4 length */ + \
diff --git a/fs/nfs/callback_proc.c b/fs/nfs/callback_proc.c
index 56bd0eaf645e..73466b934090 100644
--- a/fs/nfs/callback_proc.c
+++ b/fs/nfs/callback_proc.c
@@ -289,9 +289,6 @@ __be32 nfs4_callback_devicenotify(struct cb_devicenotifyargs *args,
 		}
 
 	found:
-		if (dev->cbd_notify_type == NOTIFY_DEVICEID4_CHANGE)
-			dprintk("%s: NOTIFY_DEVICEID4_CHANGE not supported, "
-				"deleting instead\n", __func__);
 		nfs4_delete_deviceid(server->pnfs_curr_ld, clp, &dev->cbd_dev_id);
 	}
 
* Unmerged path fs/nfs/nfs4xdr.c
