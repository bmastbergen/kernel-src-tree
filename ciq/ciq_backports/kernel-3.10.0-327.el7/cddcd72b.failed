nvme: disable irqs in nvme_freeze_queues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Christoph Hellwig <hch@lst.de>
commit cddcd72bcec3b1dc9cef7f17d724a7fe42d64cc1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/cddcd72b.failed

The queue_lock needs to be taken with irqs disabled.  This is mostly
due to the old pre blk-mq usage pattern, but we've also picked it up
in most of the few places where we use the queue_lock with blk-mq.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit cddcd72bcec3b1dc9cef7f17d724a7fe42d64cc1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index 29d2b5fb1975,00e641937a8e..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2694,6 -2578,34 +2694,37 @@@ static void nvme_dev_list_remove(struc
  		kthread_stop(tmp);
  }
  
++<<<<<<< HEAD
++=======
+ static void nvme_freeze_queues(struct nvme_dev *dev)
+ {
+ 	struct nvme_ns *ns;
+ 
+ 	list_for_each_entry(ns, &dev->namespaces, list) {
+ 		blk_mq_freeze_queue_start(ns->queue);
+ 
+ 		spin_lock_irq(ns->queue->queue_lock);
+ 		queue_flag_set(QUEUE_FLAG_STOPPED, ns->queue);
+ 		spin_unlock_irq(ns->queue->queue_lock);
+ 
+ 		blk_mq_cancel_requeue_work(ns->queue);
+ 		blk_mq_stop_hw_queues(ns->queue);
+ 	}
+ }
+ 
+ static void nvme_unfreeze_queues(struct nvme_dev *dev)
+ {
+ 	struct nvme_ns *ns;
+ 
+ 	list_for_each_entry(ns, &dev->namespaces, list) {
+ 		queue_flag_clear_unlocked(QUEUE_FLAG_STOPPED, ns->queue);
+ 		blk_mq_unfreeze_queue(ns->queue);
+ 		blk_mq_start_stopped_hw_queues(ns->queue, true);
+ 		blk_mq_kick_requeue_list(ns->queue);
+ 	}
+ }
+ 
++>>>>>>> cddcd72bcec3 (nvme: disable irqs in nvme_freeze_queues)
  static void nvme_dev_shutdown(struct nvme_dev *dev)
  {
  	int i;
* Unmerged path drivers/block/nvme-core.c
