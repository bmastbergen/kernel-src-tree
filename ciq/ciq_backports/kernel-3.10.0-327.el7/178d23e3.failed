net/mlx4_core: Use sink counter for the VF default as fallback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [netdrv] mlx4_core: Use sink counter for the VF default as fallback (Amir Vadai) [1251740]
Rebuild_FUZZ: 96.67%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 178d23e3cd4811ebe702d60ac31e8bee389a5847
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/178d23e3.failed

Some old PF drivers don't let VFs allocate counters, in that case, use
the sink counter so the VF can load and operate properly.

Fixes: 6de5f7f6a1fa ('net/mlx4_core: Allocate default counter per port')
	Reported-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 178d23e3cd4811ebe702d60ac31e8bee389a5847)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/main.c
diff --cc drivers/net/ethernet/mellanox/mlx4/main.c
index 79d4da7f5aff,29c2a017a450..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/main.c
+++ b/drivers/net/ethernet/mellanox/mlx4/main.c
@@@ -2000,6 -2246,52 +2000,55 @@@ static void mlx4_cleanup_counters_table
  	mlx4_bitmap_cleanup(&mlx4_priv(dev)->counters_bitmap);
  }
  
++<<<<<<< HEAD
++=======
+ static void mlx4_cleanup_default_counters(struct mlx4_dev *dev)
+ {
+ 	struct mlx4_priv *priv = mlx4_priv(dev);
+ 	int port;
+ 
+ 	for (port = 0; port < dev->caps.num_ports; port++)
+ 		if (priv->def_counter[port] != -1)
+ 			mlx4_counter_free(dev,  priv->def_counter[port]);
+ }
+ 
+ static int mlx4_allocate_default_counters(struct mlx4_dev *dev)
+ {
+ 	struct mlx4_priv *priv = mlx4_priv(dev);
+ 	int port, err = 0;
+ 	u32 idx;
+ 
+ 	for (port = 0; port < dev->caps.num_ports; port++)
+ 		priv->def_counter[port] = -1;
+ 
+ 	for (port = 0; port < dev->caps.num_ports; port++) {
+ 		err = mlx4_counter_alloc(dev, &idx);
+ 
+ 		if (!err || err == -ENOSPC) {
+ 			priv->def_counter[port] = idx;
+ 		} else if (err == -ENOENT) {
+ 			err = 0;
+ 			continue;
+ 		} else if (mlx4_is_slave(dev) && err == -EINVAL) {
+ 			priv->def_counter[port] = MLX4_SINK_COUNTER_INDEX(dev);
+ 			mlx4_warn(dev, "can't allocate counter from old PF driver, using index %d\n",
+ 				  MLX4_SINK_COUNTER_INDEX(dev));
+ 			err = 0;
+ 		} else {
+ 			mlx4_err(dev, "%s: failed to allocate default counter port %d err %d\n",
+ 				 __func__, port + 1, err);
+ 			mlx4_cleanup_default_counters(dev);
+ 			return err;
+ 		}
+ 
+ 		mlx4_dbg(dev, "%s: default counter index %d for port %d\n",
+ 			 __func__, priv->def_counter[port], port + 1);
+ 	}
+ 
+ 	return err;
+ }
+ 
++>>>>>>> 178d23e3cd48 (net/mlx4_core: Use sink counter for the VF default as fallback)
  int __mlx4_counter_alloc(struct mlx4_dev *dev, u32 *idx)
  {
  	struct mlx4_priv *priv = mlx4_priv(dev);
* Unmerged path drivers/net/ethernet/mellanox/mlx4/main.c
