userns: Allow PR_CAPBSET_DROP in a user namespace.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [security] userns: Allow PR_CAPBSET_DROP in a user namespace (Oleg Nesterov) [1108829]
Rebuild_FUZZ: 98.99%
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 160da84dbb39443fdade7151bc63a88f8e953077
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/160da84d.failed

As the capabilites and capability bounding set are per user namespace
properties it is safe to allow changing them with just CAP_SETPCAP
permission in the user namespace.

	Acked-by: Serge Hallyn <serge.hallyn@canonical.com>
	Tested-by: Richard Weinberger <richard@nod.at>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit 160da84dbb39443fdade7151bc63a88f8e953077)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/commoncap.c
diff --cc security/commoncap.c
index dce9bb8a7500,9fccf71b2b62..000000000000
--- a/security/commoncap.c
+++ b/security/commoncap.c
@@@ -825,11 -822,9 +825,15 @@@ int cap_task_setnice(struct task_struc
   * Implement PR_CAPBSET_DROP.  Attempt to remove the specified capability from
   * the current task's bounding set.  Returns 0 on success, -ve on error.
   */
 -static long cap_prctl_drop(struct cred *new, unsigned long cap)
 +static int cap_prctl_drop(unsigned long cap)
  {
++<<<<<<< HEAD
 +	struct cred *new;
 +
 +	if (!capable(CAP_SETPCAP))
++=======
+ 	if (!ns_capable(current_user_ns(), CAP_SETPCAP))
++>>>>>>> 160da84dbb39 (userns: Allow PR_CAPBSET_DROP in a user namespace.)
  		return -EPERM;
  	if (!cap_valid(cap))
  		return -EINVAL;
* Unmerged path security/commoncap.c
