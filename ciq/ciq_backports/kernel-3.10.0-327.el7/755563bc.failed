powerpc/powernv: Fixes for hypervisor doorbell handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
Rebuild_CHGLOG: - [powerpc] powernv: Fixes for hypervisor doorbell handling (Laurent Vivier) [1213669]
Rebuild_FUZZ: 92.16%
commit-author Paul Mackerras <paulus@samba.org>
commit 755563bc79c764c90b9f44db5e4fe6c556d3440c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/755563bc.failed

Since we can now use hypervisor doorbells for host IPIs, this makes
sure we clear the host IPI flag when taking a doorbell interrupt, and
clears any pending doorbell IPI in pnv_smp_cpu_kill_self() (as we
already do for IPIs sent via the XICS interrupt controller).  Otherwise
if there did happen to be a leftover pending doorbell interrupt for
an offline CPU thread for any reason, it would prevent that thread from
going into a power-saving mode; it would instead keep waking up because
of the interrupt.

	Signed-off-by: Paul Mackerras <paulus@samba.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 755563bc79c764c90b9f44db5e4fe6c556d3440c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/dbell.c
#	arch/powerpc/platforms/powernv/smp.c
diff --cc arch/powerpc/kernel/dbell.c
index d55c76c571f3,2128f3a96c32..000000000000
--- a/arch/powerpc/kernel/dbell.c
+++ b/arch/powerpc/kernel/dbell.c
@@@ -41,7 -42,8 +42,12 @@@ void doorbell_exception(struct pt_regs 
  
  	may_hard_irq_enable();
  
++<<<<<<< HEAD
 +	__get_cpu_var(irq_stat).doorbell_irqs++;
++=======
+ 	kvmppc_set_host_ipi(smp_processor_id(), 0);
+ 	__this_cpu_inc(irq_stat.doorbell_irqs);
++>>>>>>> 755563bc79c7 (powerpc/powernv: Fixes for hypervisor doorbell handling)
  
  	smp_ipi_demux();
  
diff --cc arch/powerpc/platforms/powernv/smp.c
index 1c14ba216c76,38a45088f633..000000000000
--- a/arch/powerpc/platforms/powernv/smp.c
+++ b/arch/powerpc/platforms/powernv/smp.c
@@@ -149,7 -151,8 +151,12 @@@ static int pnv_smp_cpu_disable(void
  static void pnv_smp_cpu_kill_self(void)
  {
  	unsigned int cpu;
++<<<<<<< HEAD
 +	unsigned long srr1;
++=======
+ 	unsigned long srr1, wmask;
+ 	u32 idle_states;
++>>>>>>> 755563bc79c7 (powerpc/powernv: Fixes for hypervisor doorbell handling)
  
  	/* Standard hot unplug procedure */
  	local_irq_disable();
@@@ -160,6 -163,11 +167,14 @@@
  	generic_set_cpu_dead(cpu);
  	smp_wmb();
  
++<<<<<<< HEAD
++=======
+ 	wmask = SRR1_WAKEMASK;
+ 	if (cpu_has_feature(CPU_FTR_ARCH_207S))
+ 		wmask = SRR1_WAKEMASK_P8;
+ 
+ 	idle_states = pnv_get_supported_cpuidle_states();
++>>>>>>> 755563bc79c7 (powerpc/powernv: Fixes for hypervisor doorbell handling)
  	/* We don't want to take decrementer interrupts while we are offline,
  	 * so clear LPCR:PECE1. We keep PECE2 enabled.
  	 */
diff --git a/arch/powerpc/include/asm/ppc-opcode.h b/arch/powerpc/include/asm/ppc-opcode.h
index c636841fc772..ebe6650700a4 100644
--- a/arch/powerpc/include/asm/ppc-opcode.h
+++ b/arch/powerpc/include/asm/ppc-opcode.h
@@ -152,6 +152,7 @@
 #define PPC_INST_MFSPR_PVR		0x7c1f42a6
 #define PPC_INST_MFSPR_PVR_MASK		0xfc1fffff
 #define PPC_INST_MSGSND			0x7c00019c
+#define PPC_INST_MSGCLR			0x7c0001dc
 #define PPC_INST_MSGSNDP		0x7c00011c
 #define PPC_INST_NOP			0x60000000
 #define PPC_INST_POPCNTB		0x7c0000f4
@@ -305,6 +306,8 @@
 					___PPC_RB(b) | __PPC_EH(eh))
 #define PPC_MSGSND(b)		stringify_in_c(.long PPC_INST_MSGSND | \
 					___PPC_RB(b))
+#define PPC_MSGCLR(b)		stringify_in_c(.long PPC_INST_MSGCLR | \
+					___PPC_RB(b))
 #define PPC_MSGSNDP(b)		stringify_in_c(.long PPC_INST_MSGSNDP | \
 					___PPC_RB(b))
 #define PPC_POPCNTB(a, s)	stringify_in_c(.long PPC_INST_POPCNTB | \
diff --git a/arch/powerpc/include/asm/reg.h b/arch/powerpc/include/asm/reg.h
index d6140b94c770..9d5b156f3206 100644
--- a/arch/powerpc/include/asm/reg.h
+++ b/arch/powerpc/include/asm/reg.h
@@ -604,13 +604,16 @@
 #define   SRR1_ISI_N_OR_G	0x10000000 /* ISI: Access is no-exec or G */
 #define   SRR1_ISI_PROT		0x08000000 /* ISI: Other protection fault */
 #define   SRR1_WAKEMASK		0x00380000 /* reason for wakeup */
+#define   SRR1_WAKEMASK_P8	0x003c0000 /* reason for wakeup on POWER8 */
 #define   SRR1_WAKESYSERR	0x00300000 /* System error */
 #define   SRR1_WAKEEE		0x00200000 /* External interrupt */
 #define   SRR1_WAKEMT		0x00280000 /* mtctrl */
 #define	  SRR1_WAKEHMI		0x00280000 /* Hypervisor maintenance */
 #define   SRR1_WAKEDEC		0x00180000 /* Decrementer interrupt */
+#define   SRR1_WAKEDBELL	0x00140000 /* Privileged doorbell on P8 */
 #define   SRR1_WAKETHERM	0x00100000 /* Thermal management interrupt */
 #define	  SRR1_WAKERESET	0x00100000 /* System reset */
+#define   SRR1_WAKEHDBELL	0x000c0000 /* Hypervisor doorbell on P8 */
 #define	  SRR1_WAKESTATE	0x00030000 /* Powersave exit mask [46:47] */
 #define	  SRR1_WS_DEEPEST	0x00030000 /* Some resources not maintained,
 					  * may not be recoverable */
* Unmerged path arch/powerpc/kernel/dbell.c
* Unmerged path arch/powerpc/platforms/powernv/smp.c
