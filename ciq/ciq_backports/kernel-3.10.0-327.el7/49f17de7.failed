bonding: rename last_arp_rx to last_rx

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 49f17de72174ceb340a96996e14058e8f6ff951d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/49f17de7.failed

To reflect the new meaning.

CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 49f17de72174ceb340a96996e14058e8f6ff951d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
#	drivers/net/bonding/bonding.h
diff --cc drivers/net/bonding/bond_main.c
index 1769905a03a5,ac4a1b88115e..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -1682,18 -1395,12 +1682,22 @@@ int bond_enslave(struct net_device *bon
  	new_slave->delay = 0;
  	new_slave->link_failure_count = 0;
  
 +	write_unlock_bh(&bond->lock);
 +
 +	bond_compute_features(bond);
 +
  	bond_update_speed_duplex(new_slave);
  
++<<<<<<< HEAD
 +	read_lock(&bond->lock);
 +
 +	new_slave->last_arp_rx = jiffies -
++=======
+ 	new_slave->last_rx = jiffies -
++>>>>>>> 49f17de72174 (bonding: rename last_arp_rx to last_rx)
  		(msecs_to_jiffies(bond->params.arp_interval) + 1);
  	for (i = 0; i < BOND_MAX_ARP_TARGETS; i++)
- 		new_slave->target_last_arp_rx[i] = new_slave->last_arp_rx;
+ 		new_slave->target_last_arp_rx[i] = new_slave->last_rx;
  
  	if (bond->params.miimon && !bond->params.use_carrier) {
  		link_reporting = bond_check_dev_link(bond, slave_dev, 1);
@@@ -2668,15 -2368,11 +2672,20 @@@ void bond_loadbalance_arp_mon(struct wo
  		unsigned long trans_start = dev_trans_start(slave->dev);
  
  		if (slave->link != BOND_LINK_UP) {
++<<<<<<< HEAD
 +			if (time_in_range(jiffies,
 +				trans_start - delta_in_ticks,
 +				trans_start + delta_in_ticks + extra_ticks) &&
 +			    time_in_range(jiffies,
 +				slave->dev->last_rx - delta_in_ticks,
 +				slave->dev->last_rx + delta_in_ticks + extra_ticks)) {
++=======
+ 			if (bond_time_in_interval(bond, trans_start, 1) &&
+ 			    bond_time_in_interval(bond, slave->last_rx, 1)) {
++>>>>>>> 49f17de72174 (bonding: rename last_arp_rx to last_rx)
  
  				slave->link  = BOND_LINK_UP;
 -				slave_state_changed = 1;
 +				bond_set_active_slave(slave);
  
  				/* primary_slave has no meaning in round-robin
  				 * mode. the window of a slave being up and
@@@ -2701,15 -2397,11 +2710,20 @@@
  			 * when the source ip is 0, so don't take the link down
  			 * if we don't know our ip yet
  			 */
++<<<<<<< HEAD
 +			if (!time_in_range(jiffies,
 +				trans_start - delta_in_ticks,
 +				trans_start + 2 * delta_in_ticks + extra_ticks) ||
 +			    !time_in_range(jiffies,
 +				slave->dev->last_rx - delta_in_ticks,
 +				slave->dev->last_rx + 2 * delta_in_ticks + extra_ticks)) {
++=======
+ 			if (!bond_time_in_interval(bond, trans_start, 2) ||
+ 			    !bond_time_in_interval(bond, slave->last_rx, 2)) {
++>>>>>>> 49f17de72174 (bonding: rename last_arp_rx to last_rx)
  
  				slave->link  = BOND_LINK_DOWN;
 -				slave_state_changed = 1;
 +				bond_set_backup_slave(slave);
  
  				if (slave->link_failure_count < UINT_MAX)
  					slave->link_failure_count++;
diff --cc drivers/net/bonding/bonding.h
index e1ca02f0b074,430362891d0d..000000000000
--- a/drivers/net/bonding/bonding.h
+++ b/drivers/net/bonding/bonding.h
@@@ -168,19 -184,13 +168,25 @@@ struct bond_parm_tbl 
  
  #define BOND_MAX_MODENAME_LEN 20
  
 +struct vlan_entry {
 +	struct list_head vlan_list;
 +	unsigned short vlan_id;
 +};
 +
  struct slave {
  	struct net_device *dev; /* first - useful for panic debug */
 +	struct slave *next;
 +	struct slave *prev;
  	struct bonding *bond; /* our master */
  	int    delay;
++<<<<<<< HEAD
 +	unsigned long jiffies;
 +	unsigned long last_arp_rx;
++=======
+ 	/* all three in jiffies */
+ 	unsigned long last_link_up;
+ 	unsigned long last_rx;
++>>>>>>> 49f17de72174 (bonding: rename last_arp_rx to last_rx)
  	unsigned long target_last_arp_rx[BOND_MAX_ARP_TARGETS];
  	s8     link;    /* one of BOND_LINK_XXXX */
  	s8     new_link;
* Unmerged path drivers/net/bonding/bond_main.c
* Unmerged path drivers/net/bonding/bonding.h
