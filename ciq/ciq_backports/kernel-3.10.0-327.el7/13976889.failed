NVMe: enable IO stats by default

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Jens Axboe <axboe@fb.com>
commit 139768895309c6c1d6913e909e9c9422f81a1640
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/13976889.failed

Before the blk-mq conversion they were on by default, we should
not change behavior there.

	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 139768895309c6c1d6913e909e9c9422f81a1640)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index dfa7c848f446,677d7b9ff454..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2089,18 -1880,15 +2089,22 @@@ static struct nvme_ns *nvme_alloc_ns(st
  	if (rt->attributes & NVME_LBART_ATTRIB_HIDE)
  		return NULL;
  
 -	ns = kzalloc_node(sizeof(*ns), GFP_KERNEL, node);
 +	ns = kzalloc(sizeof(*ns), GFP_KERNEL);
  	if (!ns)
  		return NULL;
 -	ns->queue = blk_mq_init_queue(&dev->tagset);
 -	if (IS_ERR(ns->queue))
 +	ns->queue = blk_alloc_queue(GFP_KERNEL);
 +	if (!ns->queue)
  		goto out_free_ns;
 +	ns->queue->queue_flags = QUEUE_FLAG_DEFAULT;
 +	queue_flag_clear_unlocked(QUEUE_FLAG_STACKABLE, ns->queue);
  	queue_flag_set_unlocked(QUEUE_FLAG_NOMERGES, ns->queue);
  	queue_flag_set_unlocked(QUEUE_FLAG_NONROT, ns->queue);
++<<<<<<< HEAD
 +	queue_flag_clear_unlocked(QUEUE_FLAG_ADD_RANDOM, ns->queue);
 +	blk_queue_make_request(ns->queue, nvme_make_request);
++=======
+ 	queue_flag_set_unlocked(QUEUE_FLAG_SG_GAPS, ns->queue);
++>>>>>>> 139768895309 (NVMe: enable IO stats by default)
  	ns->dev = dev;
  	ns->queue->queuedata = ns;
  
* Unmerged path drivers/block/nvme-core.c
