cxgb4: Add support for ULP RX logic analyzer output in debugfs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-327.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit 797ff0f573184778771b6d1186eca72f7e3adb4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-327.el7/797ff0f5.failed

Dump Upper Layer Protocol RX module command trace

	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 797ff0f573184778771b6d1186eca72f7e3adb4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
#	drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
#	drivers/net/ethernet/chelsio/cxgb4/t4_hw.h
#	drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index 500e399e494e,9938f2aa5ef7..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@@ -1241,6 -1239,45 +1241,48 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  *	t4_fwcache - firmware cache operation
+  *	@adap: the adapter
+  *	@op  : the operation (flush or flush and invalidate)
+  */
+ int t4_fwcache(struct adapter *adap, enum fw_params_param_dev_fwcache op)
+ {
+ 	struct fw_params_cmd c;
+ 
+ 	memset(&c, 0, sizeof(c));
+ 	c.op_to_vfn =
+ 		cpu_to_be32(FW_CMD_OP_V(FW_PARAMS_CMD) |
+ 			    FW_CMD_REQUEST_F | FW_CMD_WRITE_F |
+ 			    FW_PARAMS_CMD_PFN_V(adap->fn) |
+ 			    FW_PARAMS_CMD_VFN_V(0));
+ 	c.retval_len16 = cpu_to_be32(FW_LEN16(c));
+ 	c.param[0].mnem =
+ 		cpu_to_be32(FW_PARAMS_MNEM_V(FW_PARAMS_MNEM_DEV) |
+ 			    FW_PARAMS_PARAM_X_V(FW_PARAMS_PARAM_DEV_FWCACHE));
+ 	c.param[0].val = (__force __be32)op;
+ 
+ 	return t4_wr_mbox(adap, adap->mbox, &c, sizeof(c), NULL);
+ }
+ 
+ void t4_ulprx_read_la(struct adapter *adap, u32 *la_buf)
+ {
+ 	unsigned int i, j;
+ 
+ 	for (i = 0; i < 8; i++) {
+ 		u32 *p = la_buf + i;
+ 
+ 		t4_write_reg(adap, ULP_RX_LA_CTL_A, i);
+ 		j = t4_read_reg(adap, ULP_RX_LA_WRPTR_A);
+ 		t4_write_reg(adap, ULP_RX_LA_RDPTR_A, j);
+ 		for (j = 0; j < ULPRX_LA_SIZE; j++, p += 8)
+ 			*p = t4_read_reg(adap, ULP_RX_LA_RDDATA_A);
+ 	}
+ }
+ 
++>>>>>>> 797ff0f57318 (cxgb4: Add support for ULP RX logic analyzer output in debugfs)
  #define ADVERT_MASK (FW_PORT_CAP_SPEED_100M | FW_PORT_CAP_SPEED_1G |\
  		     FW_PORT_CAP_SPEED_10G | FW_PORT_CAP_SPEED_40G | \
  		     FW_PORT_CAP_ANEG)
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_hw.h
index c19a90e7f7d1,380b15c0417a..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.h
@@@ -56,6 -57,17 +56,20 @@@ enum 
  };
  
  enum {
++<<<<<<< HEAD
++=======
+ 	CIM_NUM_IBQ    = 6,     /* # of CIM IBQs */
+ 	CIM_NUM_OBQ    = 6,     /* # of CIM OBQs */
+ 	CIM_NUM_OBQ_T5 = 8,     /* # of CIM OBQs for T5 adapter */
+ 	CIMLA_SIZE     = 2048,  /* # of 32-bit words in CIM LA */
+ 	CIM_IBQ_SIZE   = 128,   /* # of 128-bit words in a CIM IBQ */
+ 	CIM_OBQ_SIZE   = 128,   /* # of 128-bit words in a CIM OBQ */
+ 	TPLA_SIZE      = 128,   /* # of 64-bit words in TP LA */
+ 	ULPRX_LA_SIZE  = 512,   /* # of 256-bit words in ULP_RX LA */
+ };
+ 
+ enum {
++>>>>>>> 797ff0f57318 (cxgb4: Add support for ULP RX logic analyzer output in debugfs)
  	SF_PAGE_SIZE = 256,           /* serial flash page size */
  	SF_SEC_SIZE = 64 * 1024,      /* serial flash sector size */
  };
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
index ca17cd6178d0,91e0ea1954f0..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
@@@ -1165,141 -2167,344 +1165,482 @@@
  
  #define MPS_RX_PERR_INT_CAUSE_A 0x11074
  
++<<<<<<< HEAD
 +#define CPL_INTR_CAUSE 0x19054
 +#define  CIM_OP_MAP_PERR   0x00000020U
 +#define  CIM_OVFL_ERROR    0x00000010U
 +#define  TP_FRAMING_ERROR  0x00000008U
 +#define  SGE_FRAMING_ERROR 0x00000004U
 +#define  CIM_FRAMING_ERROR 0x00000002U
 +#define  ZERO_SWITCH_ERROR 0x00000001U
 +
 +#define SMB_INT_CAUSE 0x19090
 +#define  MSTTXFIFOPARINT 0x00200000U
 +#define  MSTRXFIFOPARINT 0x00100000U
 +#define  SLVFIFOPARINT   0x00080000U
 +
 +#define ULP_RX_INT_CAUSE 0x19158
 +#define ULP_RX_ISCSI_TAGMASK 0x19164
 +#define ULP_RX_ISCSI_PSZ 0x19168
 +#define  HPZ3_MASK   0x0f000000U
 +#define  HPZ3_SHIFT  24
 +#define  HPZ3(x)     ((x) << HPZ3_SHIFT)
 +#define  HPZ2_MASK   0x000f0000U
 +#define  HPZ2_SHIFT  16
 +#define  HPZ2(x)     ((x) << HPZ2_SHIFT)
 +#define  HPZ1_MASK   0x00000f00U
 +#define  HPZ1_SHIFT  8
 +#define  HPZ1(x)     ((x) << HPZ1_SHIFT)
 +#define  HPZ0_MASK   0x0000000fU
 +#define  HPZ0_SHIFT  0
 +#define  HPZ0(x)     ((x) << HPZ0_SHIFT)
 +
 +#define ULP_RX_TDDP_PSZ 0x19178
 +
 +#define SF_DATA 0x193f8
 +#define SF_OP 0x193fc
 +#define  SF_BUSY       0x80000000U
 +#define  SF_LOCK       0x00000010U
 +#define  SF_CONT       0x00000008U
 +#define  BYTECNT_MASK  0x00000006U
 +#define  BYTECNT_SHIFT 1
 +#define  BYTECNT(x)    ((x) << BYTECNT_SHIFT)
 +#define  OP_WR         0x00000001U
 +
 +#define PL_PF_INT_CAUSE 0x3c0
 +#define  PFSW  0x00000008U
 +#define  PFSGE 0x00000004U
 +#define  PFCIM 0x00000002U
 +#define  PFMPS 0x00000001U
 +
 +#define PL_PF_INT_ENABLE 0x3c4
 +#define PL_PF_CTL 0x3c8
 +#define  SWINT 0x00000001U
 +
 +#define PL_WHOAMI 0x19400
 +#define  SOURCEPF_MASK   0x00000700U
 +#define  SOURCEPF_SHIFT  8
 +#define  SOURCEPF(x)     ((x) << SOURCEPF_SHIFT)
 +#define  SOURCEPF_GET(x) (((x) & SOURCEPF_MASK) >> SOURCEPF_SHIFT)
 +#define  ISVF            0x00000080U
 +#define  VFID_MASK       0x0000007fU
 +#define  VFID_SHIFT      0
 +#define  VFID(x)         ((x) << VFID_SHIFT)
 +#define  VFID_GET(x)     (((x) & VFID_MASK) >> VFID_SHIFT)
 +
 +#define PL_INT_CAUSE 0x1940c
 +#define  ULP_TX     0x08000000U
 +#define  SGE        0x04000000U
 +#define  HMA        0x02000000U
 +#define  CPL_SWITCH 0x01000000U
 +#define  ULP_RX     0x00800000U
 +#define  PM_RX      0x00400000U
 +#define  PM_TX      0x00200000U
 +#define  MA         0x00100000U
 +#define  TP         0x00080000U
 +#define  LE         0x00040000U
 +#define  EDC1       0x00020000U
 +#define  EDC0       0x00010000U
 +#define  MC         0x00008000U
 +#define  PCIE       0x00004000U
 +#define  PMU        0x00002000U
 +#define  XGMAC_KR1  0x00001000U
 +#define  XGMAC_KR0  0x00000800U
 +#define  XGMAC1     0x00000400U
 +#define  XGMAC0     0x00000200U
 +#define  SMB        0x00000100U
 +#define  SF         0x00000080U
 +#define  PL         0x00000040U
 +#define  NCSI       0x00000020U
 +#define  MPS        0x00000010U
 +#define  MI         0x00000008U
 +#define  DBG        0x00000004U
 +#define  I2CM       0x00000002U
 +#define  CIM        0x00000001U
 +
 +#define MC1 0x31
 +#define PL_INT_ENABLE 0x19410
 +#define PL_INT_MAP0 0x19414
 +#define PL_RST 0x19428
 +#define  PIORST     0x00000002U
 +#define  PIORSTMODE 0x00000001U
 +
 +#define PL_PL_INT_CAUSE 0x19430
 +#define  FATALPERR 0x00000010U
 +#define  PERRVFID  0x00000001U
 +
 +#define PL_REV 0x1943c
 +
 +#define S_REV    0
 +#define M_REV    0xfU
 +#define V_REV(x) ((x) << S_REV)
 +#define G_REV(x) (((x) >> S_REV) & M_REV)
 +
 +#define LE_DB_CONFIG 0x19c04
 +#define  HASHEN 0x00100000U
 +
 +#define LE_DB_SERVER_INDEX 0x19c18
 +#define LE_DB_ACT_CNT_IPV4 0x19c20
 +#define LE_DB_ACT_CNT_IPV6 0x19c24
 +
 +#define LE_DB_INT_CAUSE 0x19c3c
 +#define  REQQPARERR 0x00010000U
 +#define  UNKNOWNCMD 0x00008000U
 +#define  PARITYERR  0x00000040U
 +#define  LIPMISS    0x00000020U
 +#define  LIP0       0x00000010U
 +
 +#define LE_DB_TID_HASHBASE 0x19df8
 +
 +#define NCSI_INT_CAUSE 0x1a0d8
 +#define  CIM_DM_PRTY_ERR 0x00000100U
 +#define  MPS_DM_PRTY_ERR 0x00000080U
 +#define  TXFIFO_PRTY_ERR 0x00000002U
 +#define  RXFIFO_PRTY_ERR 0x00000001U
 +
 +#define XGMAC_PORT_CFG2 0x1018
 +#define  PATEN   0x00040000U
 +#define  MAGICEN 0x00020000U
++=======
+ #define MPS_CLS_TCAM_Y_L_A 0xf000
+ #define MPS_CLS_TCAM_X_L_A 0xf008
+ 
+ #define MPS_CLS_TCAM_Y_L(idx) (MPS_CLS_TCAM_Y_L_A + (idx) * 16)
+ #define NUM_MPS_CLS_TCAM_Y_L_INSTANCES 512
+ 
+ #define MPS_CLS_TCAM_X_L(idx) (MPS_CLS_TCAM_X_L_A + (idx) * 16)
+ #define NUM_MPS_CLS_TCAM_X_L_INSTANCES 512
+ 
+ #define MPS_CLS_SRAM_L_A 0xe000
+ #define MPS_CLS_SRAM_H_A 0xe004
+ 
+ #define MPS_CLS_SRAM_L(idx) (MPS_CLS_SRAM_L_A + (idx) * 8)
+ #define NUM_MPS_CLS_SRAM_L_INSTANCES 336
+ 
+ #define MPS_CLS_SRAM_H(idx) (MPS_CLS_SRAM_H_A + (idx) * 8)
+ #define NUM_MPS_CLS_SRAM_H_INSTANCES 336
+ 
+ #define MULTILISTEN0_S    25
+ 
+ #define REPLICATE_S    11
+ #define REPLICATE_V(x) ((x) << REPLICATE_S)
+ #define REPLICATE_F    REPLICATE_V(1U)
+ 
+ #define PF_S    8
+ #define PF_M    0x7U
+ #define PF_G(x) (((x) >> PF_S) & PF_M)
+ 
+ #define VF_VALID_S    7
+ #define VF_VALID_V(x) ((x) << VF_VALID_S)
+ #define VF_VALID_F    VF_VALID_V(1U)
+ 
+ #define VF_S    0
+ #define VF_M    0x7fU
+ #define VF_G(x) (((x) >> VF_S) & VF_M)
+ 
+ #define SRAM_PRIO3_S    22
+ #define SRAM_PRIO3_M    0x7U
+ #define SRAM_PRIO3_G(x) (((x) >> SRAM_PRIO3_S) & SRAM_PRIO3_M)
+ 
+ #define SRAM_PRIO2_S    19
+ #define SRAM_PRIO2_M    0x7U
+ #define SRAM_PRIO2_G(x) (((x) >> SRAM_PRIO2_S) & SRAM_PRIO2_M)
+ 
+ #define SRAM_PRIO1_S    16
+ #define SRAM_PRIO1_M    0x7U
+ #define SRAM_PRIO1_G(x) (((x) >> SRAM_PRIO1_S) & SRAM_PRIO1_M)
+ 
+ #define SRAM_PRIO0_S    13
+ #define SRAM_PRIO0_M    0x7U
+ #define SRAM_PRIO0_G(x) (((x) >> SRAM_PRIO0_S) & SRAM_PRIO0_M)
+ 
+ #define SRAM_VLD_S    12
+ #define SRAM_VLD_V(x) ((x) << SRAM_VLD_S)
+ #define SRAM_VLD_F    SRAM_VLD_V(1U)
+ 
+ #define PORTMAP_S    0
+ #define PORTMAP_M    0xfU
+ #define PORTMAP_G(x) (((x) >> PORTMAP_S) & PORTMAP_M)
+ 
+ #define CPL_INTR_CAUSE_A 0x19054
+ 
+ #define CIM_OP_MAP_PERR_S    5
+ #define CIM_OP_MAP_PERR_V(x) ((x) << CIM_OP_MAP_PERR_S)
+ #define CIM_OP_MAP_PERR_F    CIM_OP_MAP_PERR_V(1U)
+ 
+ #define CIM_OVFL_ERROR_S    4
+ #define CIM_OVFL_ERROR_V(x) ((x) << CIM_OVFL_ERROR_S)
+ #define CIM_OVFL_ERROR_F    CIM_OVFL_ERROR_V(1U)
+ 
+ #define TP_FRAMING_ERROR_S    3
+ #define TP_FRAMING_ERROR_V(x) ((x) << TP_FRAMING_ERROR_S)
+ #define TP_FRAMING_ERROR_F    TP_FRAMING_ERROR_V(1U)
+ 
+ #define SGE_FRAMING_ERROR_S    2
+ #define SGE_FRAMING_ERROR_V(x) ((x) << SGE_FRAMING_ERROR_S)
+ #define SGE_FRAMING_ERROR_F    SGE_FRAMING_ERROR_V(1U)
+ 
+ #define CIM_FRAMING_ERROR_S    1
+ #define CIM_FRAMING_ERROR_V(x) ((x) << CIM_FRAMING_ERROR_S)
+ #define CIM_FRAMING_ERROR_F    CIM_FRAMING_ERROR_V(1U)
+ 
+ #define ZERO_SWITCH_ERROR_S    0
+ #define ZERO_SWITCH_ERROR_V(x) ((x) << ZERO_SWITCH_ERROR_S)
+ #define ZERO_SWITCH_ERROR_F    ZERO_SWITCH_ERROR_V(1U)
+ 
+ #define SMB_INT_CAUSE_A 0x19090
+ 
+ #define MSTTXFIFOPARINT_S    21
+ #define MSTTXFIFOPARINT_V(x) ((x) << MSTTXFIFOPARINT_S)
+ #define MSTTXFIFOPARINT_F    MSTTXFIFOPARINT_V(1U)
+ 
+ #define MSTRXFIFOPARINT_S    20
+ #define MSTRXFIFOPARINT_V(x) ((x) << MSTRXFIFOPARINT_S)
+ #define MSTRXFIFOPARINT_F    MSTRXFIFOPARINT_V(1U)
+ 
+ #define SLVFIFOPARINT_S    19
+ #define SLVFIFOPARINT_V(x) ((x) << SLVFIFOPARINT_S)
+ #define SLVFIFOPARINT_F    SLVFIFOPARINT_V(1U)
+ 
+ #define ULP_RX_INT_CAUSE_A 0x19158
+ #define ULP_RX_ISCSI_TAGMASK_A 0x19164
+ #define ULP_RX_ISCSI_PSZ_A 0x19168
+ #define ULP_RX_LA_CTL_A 0x1923c
+ #define ULP_RX_LA_RDPTR_A 0x19240
+ #define ULP_RX_LA_RDDATA_A 0x19244
+ #define ULP_RX_LA_WRPTR_A 0x19248
+ 
+ #define HPZ3_S    24
+ #define HPZ3_V(x) ((x) << HPZ3_S)
+ 
+ #define HPZ2_S    16
+ #define HPZ2_V(x) ((x) << HPZ2_S)
+ 
+ #define HPZ1_S    8
+ #define HPZ1_V(x) ((x) << HPZ1_S)
+ 
+ #define HPZ0_S    0
+ #define HPZ0_V(x) ((x) << HPZ0_S)
+ 
+ #define ULP_RX_TDDP_PSZ_A 0x19178
+ 
+ /* registers for module SF */
+ #define SF_DATA_A 0x193f8
+ #define SF_OP_A 0x193fc
+ 
+ #define SF_BUSY_S    31
+ #define SF_BUSY_V(x) ((x) << SF_BUSY_S)
+ #define SF_BUSY_F    SF_BUSY_V(1U)
+ 
+ #define SF_LOCK_S    4
+ #define SF_LOCK_V(x) ((x) << SF_LOCK_S)
+ #define SF_LOCK_F    SF_LOCK_V(1U)
+ 
+ #define SF_CONT_S    3
+ #define SF_CONT_V(x) ((x) << SF_CONT_S)
+ #define SF_CONT_F    SF_CONT_V(1U)
+ 
+ #define BYTECNT_S    1
+ #define BYTECNT_V(x) ((x) << BYTECNT_S)
+ 
+ #define OP_S    0
+ #define OP_V(x) ((x) << OP_S)
+ #define OP_F    OP_V(1U)
+ 
+ #define PL_PF_INT_CAUSE_A 0x3c0
+ 
+ #define PFSW_S    3
+ #define PFSW_V(x) ((x) << PFSW_S)
+ #define PFSW_F    PFSW_V(1U)
+ 
+ #define PFCIM_S    1
+ #define PFCIM_V(x) ((x) << PFCIM_S)
+ #define PFCIM_F    PFCIM_V(1U)
+ 
+ #define PL_PF_INT_ENABLE_A 0x3c4
+ #define PL_PF_CTL_A 0x3c8
+ 
+ #define PL_WHOAMI_A 0x19400
+ 
+ #define SOURCEPF_S    8
+ #define SOURCEPF_M    0x7U
+ #define SOURCEPF_G(x) (((x) >> SOURCEPF_S) & SOURCEPF_M)
+ 
+ #define PL_INT_CAUSE_A 0x1940c
+ 
+ #define ULP_TX_S    27
+ #define ULP_TX_V(x) ((x) << ULP_TX_S)
+ #define ULP_TX_F    ULP_TX_V(1U)
+ 
+ #define SGE_S    26
+ #define SGE_V(x) ((x) << SGE_S)
+ #define SGE_F    SGE_V(1U)
+ 
+ #define CPL_SWITCH_S    24
+ #define CPL_SWITCH_V(x) ((x) << CPL_SWITCH_S)
+ #define CPL_SWITCH_F    CPL_SWITCH_V(1U)
+ 
+ #define ULP_RX_S    23
+ #define ULP_RX_V(x) ((x) << ULP_RX_S)
+ #define ULP_RX_F    ULP_RX_V(1U)
+ 
+ #define PM_RX_S    22
+ #define PM_RX_V(x) ((x) << PM_RX_S)
+ #define PM_RX_F    PM_RX_V(1U)
+ 
+ #define PM_TX_S    21
+ #define PM_TX_V(x) ((x) << PM_TX_S)
+ #define PM_TX_F    PM_TX_V(1U)
+ 
+ #define MA_S    20
+ #define MA_V(x) ((x) << MA_S)
+ #define MA_F    MA_V(1U)
+ 
+ #define TP_S    19
+ #define TP_V(x) ((x) << TP_S)
+ #define TP_F    TP_V(1U)
+ 
+ #define LE_S    18
+ #define LE_V(x) ((x) << LE_S)
+ #define LE_F    LE_V(1U)
+ 
+ #define EDC1_S    17
+ #define EDC1_V(x) ((x) << EDC1_S)
+ #define EDC1_F    EDC1_V(1U)
+ 
+ #define EDC0_S    16
+ #define EDC0_V(x) ((x) << EDC0_S)
+ #define EDC0_F    EDC0_V(1U)
+ 
+ #define MC_S    15
+ #define MC_V(x) ((x) << MC_S)
+ #define MC_F    MC_V(1U)
+ 
+ #define PCIE_S    14
+ #define PCIE_V(x) ((x) << PCIE_S)
+ #define PCIE_F    PCIE_V(1U)
+ 
+ #define XGMAC_KR1_S    12
+ #define XGMAC_KR1_V(x) ((x) << XGMAC_KR1_S)
+ #define XGMAC_KR1_F    XGMAC_KR1_V(1U)
+ 
+ #define XGMAC_KR0_S    11
+ #define XGMAC_KR0_V(x) ((x) << XGMAC_KR0_S)
+ #define XGMAC_KR0_F    XGMAC_KR0_V(1U)
+ 
+ #define XGMAC1_S    10
+ #define XGMAC1_V(x) ((x) << XGMAC1_S)
+ #define XGMAC1_F    XGMAC1_V(1U)
+ 
+ #define XGMAC0_S    9
+ #define XGMAC0_V(x) ((x) << XGMAC0_S)
+ #define XGMAC0_F    XGMAC0_V(1U)
+ 
+ #define SMB_S    8
+ #define SMB_V(x) ((x) << SMB_S)
+ #define SMB_F    SMB_V(1U)
+ 
+ #define SF_S    7
+ #define SF_V(x) ((x) << SF_S)
+ #define SF_F    SF_V(1U)
+ 
+ #define PL_S    6
+ #define PL_V(x) ((x) << PL_S)
+ #define PL_F    PL_V(1U)
+ 
+ #define NCSI_S    5
+ #define NCSI_V(x) ((x) << NCSI_S)
+ #define NCSI_F    NCSI_V(1U)
+ 
+ #define MPS_S    4
+ #define MPS_V(x) ((x) << MPS_S)
+ #define MPS_F    MPS_V(1U)
+ 
+ #define CIM_S    0
+ #define CIM_V(x) ((x) << CIM_S)
+ #define CIM_F    CIM_V(1U)
+ 
+ #define MC1_S    31
+ 
+ #define PL_INT_ENABLE_A 0x19410
+ #define PL_INT_MAP0_A 0x19414
+ #define PL_RST_A 0x19428
+ 
+ #define PIORST_S    1
+ #define PIORST_V(x) ((x) << PIORST_S)
+ #define PIORST_F    PIORST_V(1U)
+ 
+ #define PIORSTMODE_S    0
+ #define PIORSTMODE_V(x) ((x) << PIORSTMODE_S)
+ #define PIORSTMODE_F    PIORSTMODE_V(1U)
+ 
+ #define PL_PL_INT_CAUSE_A 0x19430
+ 
+ #define FATALPERR_S    4
+ #define FATALPERR_V(x) ((x) << FATALPERR_S)
+ #define FATALPERR_F    FATALPERR_V(1U)
+ 
+ #define PERRVFID_S    0
+ #define PERRVFID_V(x) ((x) << PERRVFID_S)
+ #define PERRVFID_F    PERRVFID_V(1U)
+ 
+ #define PL_REV_A 0x1943c
+ 
+ #define REV_S    0
+ #define REV_M    0xfU
+ #define REV_V(x) ((x) << REV_S)
+ #define REV_G(x) (((x) >> REV_S) & REV_M)
+ 
+ #define LE_DB_INT_CAUSE_A 0x19c3c
+ 
+ #define REQQPARERR_S    16
+ #define REQQPARERR_V(x) ((x) << REQQPARERR_S)
+ #define REQQPARERR_F    REQQPARERR_V(1U)
+ 
+ #define UNKNOWNCMD_S    15
+ #define UNKNOWNCMD_V(x) ((x) << UNKNOWNCMD_S)
+ #define UNKNOWNCMD_F    UNKNOWNCMD_V(1U)
+ 
+ #define PARITYERR_S    6
+ #define PARITYERR_V(x) ((x) << PARITYERR_S)
+ #define PARITYERR_F    PARITYERR_V(1U)
+ 
+ #define LIPMISS_S    5
+ #define LIPMISS_V(x) ((x) << LIPMISS_S)
+ #define LIPMISS_F    LIPMISS_V(1U)
+ 
+ #define LIP0_S    4
+ #define LIP0_V(x) ((x) << LIP0_S)
+ #define LIP0_F    LIP0_V(1U)
+ 
+ #define NCSI_INT_CAUSE_A 0x1a0d8
+ 
+ #define CIM_DM_PRTY_ERR_S    8
+ #define CIM_DM_PRTY_ERR_V(x) ((x) << CIM_DM_PRTY_ERR_S)
+ #define CIM_DM_PRTY_ERR_F    CIM_DM_PRTY_ERR_V(1U)
+ 
+ #define MPS_DM_PRTY_ERR_S    7
+ #define MPS_DM_PRTY_ERR_V(x) ((x) << MPS_DM_PRTY_ERR_S)
+ #define MPS_DM_PRTY_ERR_F    MPS_DM_PRTY_ERR_V(1U)
+ 
+ #define TXFIFO_PRTY_ERR_S    1
+ #define TXFIFO_PRTY_ERR_V(x) ((x) << TXFIFO_PRTY_ERR_S)
+ #define TXFIFO_PRTY_ERR_F    TXFIFO_PRTY_ERR_V(1U)
+ 
+ #define RXFIFO_PRTY_ERR_S    0
+ #define RXFIFO_PRTY_ERR_V(x) ((x) << RXFIFO_PRTY_ERR_S)
+ #define RXFIFO_PRTY_ERR_F    RXFIFO_PRTY_ERR_V(1U)
+ 
+ #define XGMAC_PORT_CFG2_A 0x1018
+ 
+ #define PATEN_S    18
+ #define PATEN_V(x) ((x) << PATEN_S)
+ #define PATEN_F    PATEN_V(1U)
+ 
+ #define MAGICEN_S    17
+ #define MAGICEN_V(x) ((x) << MAGICEN_S)
+ #define MAGICEN_F    MAGICEN_V(1U)
++>>>>>>> 797ff0f57318 (cxgb4: Add support for ULP RX logic analyzer output in debugfs)
  
  #define XGMAC_PORT_MAGIC_MACID_LO 0x1024
  #define XGMAC_PORT_MAGIC_MACID_HI 0x1028
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index 067eaa5ac000..fbf37d1ec0ec 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@ -1025,6 +1025,8 @@ void t4_tp_get_tcp_stats(struct adapter *adap, struct tp_tcp_stats *v4,
 void t4_load_mtus(struct adapter *adap, const unsigned short *mtus,
 		  const unsigned short *alpha, const unsigned short *beta);
 
+void t4_ulprx_read_la(struct adapter *adap, u32 *la_buf);
+
 void t4_mk_filtdelwr(unsigned int ftid, struct fw_filter_wr *wr, int qid);
 
 void t4_wol_magic_enable(struct adapter *adap, unsigned int port,
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_hw.h
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
