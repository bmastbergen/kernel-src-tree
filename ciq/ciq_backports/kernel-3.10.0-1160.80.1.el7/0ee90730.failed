x86/sev: Avoid using __x86_return_thunk

jira LE-1907
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23825
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-3.10.0-1160.80.1.el7
commit-author Kim Phillips <kim.phillips@amd.com>
commit 0ee9073000e8791f8b134a8ded31bcc767f7f232
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.80.1.el7/0ee90730.failed

Specifically, it's because __enc_copy() encrypts the kernel after
being relocated outside the kernel in sme_encrypt_execute(), and the
RET macro's jmp offset isn't amended prior to execution.

	Signed-off-by: Kim Phillips <kim.phillips@amd.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 0ee9073000e8791f8b134a8ded31bcc767f7f232)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/mem_encrypt_boot.S
diff --cc arch/x86/mm/mem_encrypt_boot.S
index 01f682cf77a8,d94dea450fa6..000000000000
--- a/arch/x86/mm/mem_encrypt_boot.S
+++ b/arch/x86/mm/mem_encrypt_boot.S
@@@ -66,10 -65,12 +66,17 @@@ ENTRY(sme_encrypt_execute
  	movq	%rbp, %rsp		/* Restore original stack pointer */
  	pop	%rbp
  
++<<<<<<< HEAD
 +	ret
 +ENDPROC(sme_encrypt_execute)
++=======
+ 	/* Offset to __x86_return_thunk would be wrong here */
+ 	ret
+ 	int3
+ SYM_FUNC_END(sme_encrypt_execute)
++>>>>>>> 0ee9073000e8 (x86/sev: Avoid using __x86_return_thunk)
  
 -SYM_FUNC_START(__enc_copy)
 +ENTRY(__enc_copy)
  /*
   * Routine used to encrypt memory in place.
   *   This routine must be run outside of the kernel proper since
@@@ -152,6 -153,8 +159,12 @@@
  	pop	%r12
  	pop	%r15
  
++<<<<<<< HEAD
++	ret
++=======
+ 	/* Offset to __x86_return_thunk would be wrong here */
  	ret
+ 	int3
++>>>>>>> 0ee9073000e8 (x86/sev: Avoid using __x86_return_thunk)
  .L__enc_copy_end:
 -SYM_FUNC_END(__enc_copy)
 +ENDPROC(__enc_copy)
* Unmerged path arch/x86/mm/mem_encrypt_boot.S
