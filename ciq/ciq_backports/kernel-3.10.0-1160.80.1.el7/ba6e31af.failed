x86/speculation: Add LFENCE to RSB fill sequence

jira LE-1907
cve CVE-2022-26373
Rebuild_History Non-Buildable kernel-3.10.0-1160.80.1.el7
commit-author Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
commit ba6e31af2be96c4d0536f2152ed6f7b6c11bca47
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.80.1.el7/ba6e31af.failed

RSB fill sequence does not have any protection for miss-prediction of
conditional branch at the end of the sequence. CPU can speculatively
execute code immediately after the sequence, while RSB filling hasn't
completed yet.

  #define __FILL_RETURN_BUFFER(reg, nr, sp)       \
          mov     $(nr/2), reg;                   \
  771:                                            \
          ANNOTATE_INTRA_FUNCTION_CALL;           \
          call    772f;                           \
  773:    /* speculation trap */                  \
          UNWIND_HINT_EMPTY;                      \
          pause;                                  \
          lfence;                                 \
          jmp     773b;                           \
  772:                                            \
          ANNOTATE_INTRA_FUNCTION_CALL;           \
          call    774f;                           \
  775:    /* speculation trap */                  \
          UNWIND_HINT_EMPTY;                      \
          pause;                                  \
          lfence;                                 \
          jmp     775b;                           \
  774:                                            \
          add     $(BITS_PER_LONG/8) * 2, sp;     \
          dec     reg;                            \
          jnz     771b;        <----- CPU can miss-predict here.

Before RSB is filled, RETs that come in program order after this macro
can be executed speculatively, making them vulnerable to RSB-based
attacks.

Mitigate it by adding an LFENCE after the conditional branch to prevent
speculation while RSB is being filled.

	Suggested-by: Andrew Cooper <andrew.cooper3@citrix.com>
	Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit ba6e31af2be96c4d0536f2152ed6f7b6c11bca47)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/nospec-branch.h
diff --cc arch/x86/include/asm/nospec-branch.h
index 7f927c4692a2,d3a3cc6772ee..000000000000
--- a/arch/x86/include/asm/nospec-branch.h
+++ b/arch/x86/include/asm/nospec-branch.h
@@@ -51,9 -58,11 +51,14 @@@
  	lfence;					\
  	jmp	775b;				\
  774:						\
 -	add	$(BITS_PER_LONG/8) * 2, sp;	\
  	dec	reg;				\
  	jnz	771b;				\
++<<<<<<< HEAD
 +	add	$(BITS_PER_LONG/8) * nr, sp;
++=======
+ 	/* barrier for jnz misprediction */	\
+ 	lfence;
++>>>>>>> ba6e31af2be9 (x86/speculation: Add LFENCE to RSB fill sequence)
  
  #ifdef __ASSEMBLY__
  
* Unmerged path arch/x86/include/asm/nospec-branch.h
