Bluetooth: L2CAP: Fix calling sk_filter on non-socket based channel

jira LE-1907
cve CVE-2020-12351
Rebuild_History Non-Buildable kernel-3.10.0-1160.2.2.el7
commit-author Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
commit f19425641cb2572a33cb074d5e30283720bd4d22
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.2.2.el7/f1942564.failed

Only sockets will have the chan->data set to an actual sk, channels
like A2MP would have its own data which would likely cause a crash when
calling sk_filter, in order to fix this a new callback has been
introduced so channels can implement their own filtering if necessary.

	Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit f19425641cb2572a33cb074d5e30283720bd4d22)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/bluetooth/l2cap.h
#	net/bluetooth/l2cap_sock.c
diff --cc include/net/bluetooth/l2cap.h
index 45f3a951974c,1d1232917de7..000000000000
--- a/include/net/bluetooth/l2cap.h
+++ b/include/net/bluetooth/l2cap.h
@@@ -619,10 -664,9 +619,15 @@@ struct l2cap_ops 
  	struct sk_buff		*(*alloc_skb) (struct l2cap_chan *chan,
  					       unsigned long hdr_len,
  					       unsigned long len, int nb);
++<<<<<<< HEAD
 +	int			(*memcpy_fromiovec) (struct l2cap_chan *chan,
 +						     unsigned char *kdata,
 +						     struct msghdr *msg,
 +						     int len);
++=======
+ 	int			(*filter) (struct l2cap_chan * chan,
+ 					   struct sk_buff *skb);
++>>>>>>> f19425641cb2 (Bluetooth: L2CAP: Fix calling sk_filter on non-socket based channel)
  };
  
  struct l2cap_conn {
diff --cc net/bluetooth/l2cap_sock.c
index 869092243191,f1b1edd0b697..000000000000
--- a/net/bluetooth/l2cap_sock.c
+++ b/net/bluetooth/l2cap_sock.c
@@@ -1483,8 -1690,9 +1496,12 @@@ static const struct l2cap_ops l2cap_cha
  	.suspend		= l2cap_sock_suspend_cb,
  	.set_shutdown		= l2cap_sock_set_shutdown_cb,
  	.get_sndtimeo		= l2cap_sock_get_sndtimeo_cb,
 -	.get_peer_pid		= l2cap_sock_get_peer_pid_cb,
  	.alloc_skb		= l2cap_sock_alloc_skb_cb,
++<<<<<<< HEAD
 +	.memcpy_fromiovec	= l2cap_sock_memcpy_fromiovec_cb,
++=======
+ 	.filter			= l2cap_sock_filter,
++>>>>>>> f19425641cb2 (Bluetooth: L2CAP: Fix calling sk_filter on non-socket based channel)
  };
  
  static void l2cap_sock_destruct(struct sock *sk)
* Unmerged path include/net/bluetooth/l2cap.h
diff --git a/net/bluetooth/l2cap_core.c b/net/bluetooth/l2cap_core.c
index 6e94fd907d89..c547a0f5a9c6 100644
--- a/net/bluetooth/l2cap_core.c
+++ b/net/bluetooth/l2cap_core.c
@@ -6671,9 +6671,10 @@ static int l2cap_data_rcv(struct l2cap_chan *chan, struct sk_buff *skb)
 		goto drop;
 	}
 
-	if ((chan->mode == L2CAP_MODE_ERTM ||
-	     chan->mode == L2CAP_MODE_STREAMING) && sk_filter(chan->data, skb))
-		goto drop;
+	if (chan->ops->filter) {
+		if (chan->ops->filter(chan, skb))
+			goto drop;
+	}
 
 	if (!control->sframe) {
 		int err;
* Unmerged path net/bluetooth/l2cap_sock.c
