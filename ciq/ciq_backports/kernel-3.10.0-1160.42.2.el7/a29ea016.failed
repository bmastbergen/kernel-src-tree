s390/dasd: prevent inconsistent LCU device data

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.42.2.el7
commit-author Stefan Haberland <sth@linux.ibm.com>
commit a29ea01653493b94ea12bb2b89d1564a265081b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.42.2.el7/a29ea016.failed

Prevent _lcu_update from adding a device to a pavgroup if the LCU still
requires an update. The data is not reliable any longer and in parallel
devices might have been moved on the lists already.
This might lead to list corruptions or invalid PAV grouping.
Only add devices to a pavgroup if the LCU is up to date. Additional steps
are taken by the scheduled lcu update.

Fixes: 8e09f21574ea ("[S390] dasd: add hyper PAV support to DASD device driver, part 1")
	Cc: stable@vger.kernel.org
	Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
	Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit a29ea01653493b94ea12bb2b89d1564a265081b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/block/dasd_alias.c
diff --cc drivers/s390/block/dasd_alias.c
index 6a1c6579a5da,f841518de6c5..000000000000
--- a/drivers/s390/block/dasd_alias.c
+++ b/drivers/s390/block/dasd_alias.c
@@@ -621,7 -510,15 +621,19 @@@ static int _lcu_update(struct dasd_devi
  	if (rc)
  		return rc;
  
++<<<<<<< HEAD
 +	_trylock_and_lock_lcu_irqsave(lcu, NULL, &flags);
++=======
+ 	spin_lock_irqsave(&lcu->lock, flags);
+ 	/*
+ 	 * there is another update needed skip the remaining handling
+ 	 * the data might already be outdated
+ 	 * but especially do not add the device to an LCU with pending
+ 	 * update
+ 	 */
+ 	if (lcu->flags & NEED_UAC_UPDATE)
+ 		goto out;
++>>>>>>> a29ea0165349 (s390/dasd: prevent inconsistent LCU device data)
  	lcu->pav = NO_PAV;
  	for (i = 0; i < MAX_DEVICES_PER_LCU; ++i) {
  		switch (lcu->uac->unit[i].ua_type) {
@@@ -640,7 -537,7 +652,11 @@@
  				 alias_list) {
  		_add_device_to_lcu(lcu, device, refdev);
  	}
++<<<<<<< HEAD
 +	_unlock_all_devices_on_lcu(lcu, NULL, NULL);
++=======
+ out:
++>>>>>>> a29ea0165349 (s390/dasd: prevent inconsistent LCU device data)
  	spin_unlock_irqrestore(&lcu->lock, flags);
  	return 0;
  }
* Unmerged path drivers/s390/block/dasd_alias.c
