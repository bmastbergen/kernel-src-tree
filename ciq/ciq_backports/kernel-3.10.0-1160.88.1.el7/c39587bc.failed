scsi: qla2xxx: Fix crash due to stale SRB access around I/O timeouts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.88.1.el7
commit-author Arun Easi <aeasi@marvell.com>
commit c39587bc0abaf16593f7abcdf8aeec3c038c7d52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.88.1.el7/c39587bc.failed

Ensure SRB is returned during I/O timeout error escalation. If that is not
possible fail the escalation path.

Following crash stack was seen:

BUG: unable to handle kernel paging request at 0000002f56aa90f8
IP: qla_chk_edif_rx_sa_delete_pending+0x14/0x30 [qla2xxx]
Call Trace:
 ? qla2x00_status_entry+0x19f/0x1c50 [qla2xxx]
 ? qla2x00_start_sp+0x116/0x1170 [qla2xxx]
 ? dma_pool_alloc+0x1d6/0x210
 ? mempool_alloc+0x54/0x130
 ? qla24xx_process_response_queue+0x548/0x12b0 [qla2xxx]
 ? qla_do_work+0x2d/0x40 [qla2xxx]
 ? process_one_work+0x14c/0x390

Link: https://lore.kernel.org/r/20220616053508.27186-6-njavali@marvell.com
Fixes: d74595278f4a ("scsi: qla2xxx: Add multiple queue pair functionality.")
	Cc: stable@vger.kernel.org
	Signed-off-by: Arun Easi <aeasi@marvell.com>
	Signed-off-by: Nilesh Javali <njavali@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit c39587bc0abaf16593f7abcdf8aeec3c038c7d52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 942fc822fc1d,1c7fb6484db2..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -1334,9 -1339,12 +1334,18 @@@ qla2xxx_eh_abort(struct scsi_cmnd *cmd
  	return ret;
  }
  
++<<<<<<< HEAD
 +int
 +qla2x00_eh_wait_for_pending_commands(scsi_qla_host_t *vha, unsigned int t,
 +	unsigned int l, enum nexus_wait_type type)
++=======
+ /*
+  * Returns: QLA_SUCCESS or QLA_FUNCTION_FAILED.
+  */
+ static int
+ __qla2x00_eh_wait_for_pending_commands(struct qla_qpair *qpair, unsigned int t,
+ 				       uint64_t l, enum nexus_wait_type type)
++>>>>>>> c39587bc0aba (scsi: qla2xxx: Fix crash due to stale SRB access around I/O timeouts)
  {
  	int cnt, match, status;
  	unsigned long flags;
@@@ -1408,11 -1444,11 +1436,11 @@@ __qla2xxx_eh_generic_reset(char *name, 
  		return err;
  
  	if (fcport->deleted)
- 		return SUCCESS;
+ 		return FAILED;
  
  	ql_log(ql_log_info, vha, 0x8009,
 -	    "DEVICE RESET ISSUED nexus=%ld:%d:%llu cmd=%p.\n", vha->host_no,
 -	    sdev->id, sdev->lun, cmd);
 +	    "%s RESET ISSUED nexus=%ld:%d:%d cmd=%p.\n", name, vha->host_no,
 +	    cmd->device->id, cmd->device->lun, cmd);
  
  	err = 0;
  	if (qla2x00_wait_for_hba_online(vha) != QLA_SUCCESS) {
@@@ -1477,8 -1502,55 +1505,59 @@@ qla2xxx_eh_target_reset(struct scsi_cmn
  		return FAILED;
  	}
  
++<<<<<<< HEAD
 +	return __qla2xxx_eh_generic_reset("TARGET", WAIT_TARGET, cmd,
 +	    ha->isp_ops->target_reset);
++=======
+ 	if (!fcport) {
+ 		return FAILED;
+ 	}
+ 
+ 	err = fc_block_rport(rport);
+ 	if (err != 0)
+ 		return err;
+ 
+ 	if (fcport->deleted)
+ 		return FAILED;
+ 
+ 	ql_log(ql_log_info, vha, 0x8009,
+ 	    "TARGET RESET ISSUED nexus=%ld:%d cmd=%p.\n", vha->host_no,
+ 	    sdev->id, cmd);
+ 
+ 	err = 0;
+ 	if (qla2x00_wait_for_hba_online(vha) != QLA_SUCCESS) {
+ 		ql_log(ql_log_warn, vha, 0x800a,
+ 		    "Wait for hba online failed for cmd=%p.\n", cmd);
+ 		goto eh_reset_failed;
+ 	}
+ 	err = 2;
+ 	if (ha->isp_ops->target_reset(fcport, 0, 0) != QLA_SUCCESS) {
+ 		ql_log(ql_log_warn, vha, 0x800c,
+ 		    "target_reset failed for cmd=%p.\n", cmd);
+ 		goto eh_reset_failed;
+ 	}
+ 	err = 3;
+ 	if (qla2x00_eh_wait_for_pending_commands(vha, sdev->id,
+ 	    0, WAIT_TARGET) != QLA_SUCCESS) {
+ 		ql_log(ql_log_warn, vha, 0x800d,
+ 		    "wait for pending cmds failed for cmd=%p.\n", cmd);
+ 		goto eh_reset_failed;
+ 	}
+ 
+ 	ql_log(ql_log_info, vha, 0x800e,
+ 	    "TARGET RESET SUCCEEDED nexus:%ld:%d cmd=%p.\n",
+ 	    vha->host_no, sdev->id, cmd);
+ 
+ 	return SUCCESS;
+ 
+ eh_reset_failed:
+ 	ql_log(ql_log_info, vha, 0x800f,
+ 	    "TARGET RESET FAILED: %s nexus=%ld:%d:%llu cmd=%p.\n",
+ 	    reset_errors[err], vha->host_no, cmd->device->id, cmd->device->lun,
+ 	    cmd);
+ 	vha->reset_cmd_err_cnt++;
+ 	return FAILED;
++>>>>>>> c39587bc0aba (scsi: qla2xxx: Fix crash due to stale SRB access around I/O timeouts)
  }
  
  /**************************************************************************
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
