libbpf: Fix another __u64 cast in printf

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Andrii Nakryiko <andriin@fb.com>
commit 17e54b096e6a8dc92b92c59c2e3437550383b27a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/17e54b09.failed

Another issue of __u64 needing either %lu or %llu, depending on the
architecture. Fix with cast to `unsigned long long`.

Fixes: 7e06aad52929 ("libbpf: Add multi-prog section support for struct_ops")
	Signed-off-by: Andrii Nakryiko <andriin@fb.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20200904041611.1695163-1-andriin@fb.com
(cherry picked from commit 17e54b096e6a8dc92b92c59c2e3437550383b27a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 133c0050e689,53be32a2b9fc..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -7711,6 -8222,12 +7711,15 @@@ static int bpf_object__collect_st_ops_r
  				map->name, (size_t)rel.r_offset, shdr_idx);
  			return -LIBBPF_ERRNO__RELOC;
  		}
++<<<<<<< HEAD
++=======
+ 		if (sym.st_value % BPF_INSN_SZ) {
+ 			pr_warn("struct_ops reloc %s: invalid target program offset %llu\n",
+ 				map->name, (unsigned long long)sym.st_value);
+ 			return -LIBBPF_ERRNO__FORMAT;
+ 		}
+ 		insn_idx = sym.st_value / BPF_INSN_SZ;
++>>>>>>> 17e54b096e6a (libbpf: Fix another __u64 cast in printf)
  
  		member = find_member_by_offset(st_ops->type, moff * 8);
  		if (!member) {
* Unmerged path tools/lib/bpf/libbpf.c
