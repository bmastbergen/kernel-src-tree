mt76: introduce single-sku support for mt7663/mt7921

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 18369a4f9d73bf0ccd43d8df691d394281ee3ed4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/18369a4f.failed

Introduce support for rate-txpower compensation for mt7663/mt7921 chipsets.
Rate-txpower limit is specified through dts

	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 18369a4f9d73bf0ccd43d8df691d394281ee3ed4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7615/init.c
#	drivers/net/wireless/mediatek/mt76/mt7615/main.c
#	drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.c
#	drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
#	drivers/net/wireless/mediatek/mt76/mt7921/main.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7615/init.c
index 987cad91c063,d84662fb0304..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7615/init.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7615/init.c
@@@ -320,7 -323,11 +320,15 @@@ mt7615_regd_notifier(struct wiphy *wiph
  
  	if (chandef->chan->flags & IEEE80211_CHAN_RADAR)
  		mt7615_dfs_init_radar_detector(phy);
++<<<<<<< HEAD
 +	mt7615_mcu_set_channel_domain(phy);
++=======
+ 
+ 	if (mt7615_firmware_offload(phy->dev)) {
+ 		mt76_connac_mcu_set_channel_domain(mphy);
+ 		mt76_connac_mcu_set_rate_txpower(mphy);
+ 	}
++>>>>>>> 18369a4f9d73 (mt76: introduce single-sku support for mt7663/mt7921)
  
  	mt7615_mutex_release(dev);
  }
diff --cc drivers/net/wireless/mediatek/mt76/mt7615/main.c
index f8409002c8b6,62d9df47a1f6..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7615/main.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7615/main.c
@@@ -65,8 -62,19 +65,24 @@@ static int mt7615_start(struct ieee8021
  		mt7615_mac_enable_nf(dev, 1);
  	}
  
++<<<<<<< HEAD
 +	mt7615_mcu_set_channel_domain(phy);
 +	mt7615_mcu_set_chan_info(phy, MCU_EXT_CMD_SET_RX_PATH);
++=======
+ 	if (mt7615_firmware_offload(dev)) {
+ 		ret = mt76_connac_mcu_set_channel_domain(phy->mt76);
+ 		if (ret)
+ 			goto out;
+ 
+ 		ret = mt76_connac_mcu_set_rate_txpower(phy->mt76);
+ 		if (ret)
+ 			goto out;
+ 	}
+ 
+ 	ret = mt7615_mcu_set_chan_info(phy, MCU_EXT_CMD_SET_RX_PATH);
+ 	if (ret)
+ 		goto out;
++>>>>>>> 18369a4f9d73 (mt76: introduce single-sku support for mt7663/mt7921)
  
  	set_bit(MT76_STATE_RUNNING, &phy->mt76->state);
  
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/main.c
index c3e38909c927,13910ac78df1..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/main.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/main.c
@@@ -165,25 -165,46 +165,58 @@@ void mt7921_set_stream_he_caps(struct m
  	}
  }
  
++<<<<<<< HEAD
++=======
+ int __mt7921_start(struct mt7921_phy *phy)
+ {
+ 	struct mt76_phy *mphy = phy->mt76;
+ 	int err;
+ 
+ 	err = mt76_connac_mcu_set_mac_enable(mphy->dev, 0, true, false);
+ 	if (err)
+ 		return err;
+ 
+ 	err = mt76_connac_mcu_set_channel_domain(mphy);
+ 	if (err)
+ 		return err;
+ 
+ 	err = mt7921_mcu_set_chan_info(phy, MCU_EXT_CMD_SET_RX_PATH);
+ 	if (err)
+ 		return err;
+ 
+ 	err = mt76_connac_mcu_set_rate_txpower(phy->mt76);
+ 	if (err)
+ 		return err;
+ 
+ 	mt7921_mac_reset_counters(phy);
+ 	set_bit(MT76_STATE_RUNNING, &mphy->state);
+ 
+ 	ieee80211_queue_delayed_work(mphy->hw, &mphy->mac_work,
+ 				     MT7921_WATCHDOG_TIME);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 18369a4f9d73 (mt76: introduce single-sku support for mt7663/mt7921)
  static int mt7921_start(struct ieee80211_hw *hw)
  {
 +	struct mt7921_dev *dev = mt7921_hw_dev(hw);
  	struct mt7921_phy *phy = mt7921_hw_phy(hw);
 -	int err;
  
 -	mt7921_mutex_acquire(phy->dev);
 -	err = __mt7921_start(phy);
 -	mt7921_mutex_release(phy->dev);
 +	mutex_lock(&dev->mt76.mutex);
  
 -	return err;
 +	mt7921_mcu_set_mac(dev, 0, true, false);
 +	mt7921_mcu_set_channel_domain(phy);
 +	mt7921_mcu_set_chan_info(phy, MCU_EXT_CMD_SET_RX_PATH);
 +	mt7921_mac_reset_counters(phy);
 +	set_bit(MT76_STATE_RUNNING, &phy->mt76->state);
 +
 +	ieee80211_queue_delayed_work(hw, &phy->mt76->mac_work,
 +				     MT7921_WATCHDOG_TIME);
 +
 +	mutex_unlock(&dev->mt76.mutex);
 +
 +	return 0;
  }
  
  static void mt7921_stop(struct ieee80211_hw *hw)
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7615/init.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7615/main.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
diff --git a/drivers/net/wireless/mediatek/mt76/mt7921/init.c b/drivers/net/wireless/mediatek/mt76/mt7921/init.c
index b88101a7ddbd..006ce9e2f533 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7921/init.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/init.c
@@ -57,12 +57,14 @@ mt7921_regd_notifier(struct wiphy *wiphy,
 {
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7921_dev *dev = mt7921_hw_dev(hw);
+	struct mt7921_phy *phy = mt7921_hw_phy(hw);
 
 	memcpy(dev->mt76.alpha2, request->alpha2, sizeof(dev->mt76.alpha2));
 	dev->mt76.region = request->dfs_region;
 
 	mt7921_mutex_acquire(dev);
 	mt76_connac_mcu_set_channel_domain(hw->priv);
+	mt76_connac_mcu_set_rate_txpower(phy->mt76);
 	mt7921_mutex_release(dev);
 }
 
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/main.c
