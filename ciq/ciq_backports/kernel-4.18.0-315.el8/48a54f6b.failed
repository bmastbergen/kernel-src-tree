net/fq_impl: use skb_get_hash instead of skb_get_hash_perturb

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Felix Fietkau <nbd@nbd.name>
commit 48a54f6bc456859dabbd1fbd805e233d260754cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/48a54f6b.failed

This avoids unnecessarily regenerating the skb flow hash

	Signed-off-by: Felix Fietkau <nbd@nbd.name>
Link: https://lore.kernel.org/r/20200726130947.88145-1-nbd@nbd.name
[small commit message fixup]
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 48a54f6bc456859dabbd1fbd805e233d260754cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/fq_impl.h
diff --cc include/net/fq_impl.h
index 4b3e18ff8e6f,e73d74d2fabf..000000000000
--- a/include/net/fq_impl.h
+++ b/include/net/fq_impl.h
@@@ -107,8 -106,15 +107,18 @@@ begin
  	return skb;
  }
  
++<<<<<<< HEAD
++=======
+ static u32 fq_flow_idx(struct fq *fq, struct sk_buff *skb)
+ {
+ 	u32 hash = skb_get_hash(skb);
+ 
+ 	return reciprocal_scale(hash, fq->flows_cnt);
+ }
+ 
++>>>>>>> 48a54f6bc456 (net/fq_impl: use skb_get_hash instead of skb_get_hash_perturb)
  static struct fq_flow *fq_flow_classify(struct fq *fq,
 -					struct fq_tin *tin, u32 idx,
 +					struct fq_tin *tin,
  					struct sk_buff *skb,
  					fq_flow_get_default_t get_default_func)
  {
diff --git a/include/net/fq.h b/include/net/fq.h
index c51be50e1349..27b438bbdcdd 100644
--- a/include/net/fq.h
+++ b/include/net/fq.h
@@ -70,7 +70,6 @@ struct fq {
 	struct list_head backlogs;
 	spinlock_t lock;
 	u32 flows_cnt;
-	siphash_key_t	perturbation;
 	u32 limit;
 	u32 memory_limit;
 	u32 memory_usage;
* Unmerged path include/net/fq_impl.h
