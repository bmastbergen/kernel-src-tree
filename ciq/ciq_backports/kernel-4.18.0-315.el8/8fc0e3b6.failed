xfrm: interface: fix ipv4 pmtu check to honor ip header df

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Eyal Birger <eyal.birger@gmail.com>
commit 8fc0e3b6a8666d656923d214e4dc791e9a17164a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/8fc0e3b6.failed

Frag needed should only be sent if the header enables DF.

This fix allows packets larger than MTU to pass the xfrm interface
and be fragmented after encapsulation, aligning behavior with
non-interface xfrm.

Fixes: f203b76d7809 ("xfrm: Add virtual xfrm interfaces")
	Signed-off-by: Eyal Birger <eyal.birger@gmail.com>
	Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit 8fc0e3b6a8666d656923d214e4dc791e9a17164a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/xfrm/xfrm_interface.c
diff --cc net/xfrm/xfrm_interface.c
index 39c2532fdafa,8831f5a9e992..000000000000
--- a/net/xfrm/xfrm_interface.c
+++ b/net/xfrm/xfrm_interface.c
@@@ -298,10 -304,12 +298,17 @@@ xfrmi_xmit2(struct sk_buff *skb, struc
  			if (mtu < IPV6_MIN_MTU)
  				mtu = IPV6_MIN_MTU;
  
 -			icmpv6_ndo_send(skb, ICMPV6_PKT_TOOBIG, 0, mtu);
 +			icmpv6_send(skb, ICMPV6_PKT_TOOBIG, 0, mtu);
  		} else {
++<<<<<<< HEAD
 +			icmp_send(skb, ICMP_DEST_UNREACH, ICMP_FRAG_NEEDED,
 +				  htonl(mtu));
++=======
+ 			if (!(ip_hdr(skb)->frag_off & htons(IP_DF)))
+ 				goto xmit;
+ 			icmp_ndo_send(skb, ICMP_DEST_UNREACH, ICMP_FRAG_NEEDED,
+ 				      htonl(mtu));
++>>>>>>> 8fc0e3b6a866 (xfrm: interface: fix ipv4 pmtu check to honor ip header df)
  		}
  
  		dst_release(dst);
* Unmerged path net/xfrm/xfrm_interface.c
