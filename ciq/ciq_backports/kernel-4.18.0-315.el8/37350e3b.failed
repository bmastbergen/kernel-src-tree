locking/rtmutex: Remove pointless CONFIG_RT_MUTEXES=n stubs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 37350e3b2655eb0fce4e0e6ce8ce631c781136fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/37350e3b.failed

None of these functions are used when CONFIG_RT_MUTEXES=n.

Remove the gunk. Remove pointless comments and clean up the coding style
mess while at it.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lore.kernel.org/r/20210326153943.863379182@linutronix.de
(cherry picked from commit 37350e3b2655eb0fce4e0e6ce8ce631c781136fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/locking/rtmutex_common.h
diff --cc kernel/locking/rtmutex_common.h
index e6913103d7ff,8596a71774e0..000000000000
--- a/kernel/locking/rtmutex_common.h
+++ b/kernel/locking/rtmutex_common.h
@@@ -23,18 -23,17 +23,26 @@@
   * @tree_entry:		pi node to enqueue into the mutex waiters tree
   * @pi_tree_entry:	pi node to enqueue into the mutex owner waiters tree
   * @task:		task reference to the blocked task
+  * @lock:		Pointer to the rt_mutex on which the waiter blocks
+  * @prio:		Priority of the waiter
+  * @deadline:		Deadline of the waiter if applicable
   */
  struct rt_mutex_waiter {
- 	struct rb_node          tree_entry;
- 	struct rb_node          pi_tree_entry;
+ 	struct rb_node		tree_entry;
+ 	struct rb_node		pi_tree_entry;
  	struct task_struct	*task;
  	struct rt_mutex		*lock;
++<<<<<<< HEAD
 +#ifdef CONFIG_DEBUG_RT_MUTEXES
 +	struct pid		*deadlock_task_pid;
 +	struct rt_mutex		*deadlock_lock;
 +#endif
 +	int prio;
 +	u64 deadline;
++=======
+ 	int			prio;
+ 	u64			deadline;
++>>>>>>> 37350e3b2655 (locking/rtmutex: Remove pointless CONFIG_RT_MUTEXES=n stubs)
  };
  
  /*
* Unmerged path kernel/locking/rtmutex_common.h
