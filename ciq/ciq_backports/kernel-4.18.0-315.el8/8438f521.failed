tracing: Add flag to control different traces

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Tingwei Zhang <tingwei@codeaurora.org>
commit 8438f5211479e4b8433f641634362264bc3bbd9e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/8438f521.failed

More traces like event trace or trace marker will be supported.
Add flag for difference traces, so that they can be controlled
separately. Move current function trace to it's own flag
instead of global ftrace enable flag.

	Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
	Reviewed-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Signed-off-by: Tingwei Zhang <tingwei@codeaurora.org>
	Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Link: https://lore.kernel.org/r/20201005071319.78508-3-alexander.shishkin@linux.intel.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 8438f5211479e4b8433f641634362264bc3bbd9e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/trace.c
diff --cc kernel/trace/trace.c
index 3871b23923fc,3ca121ad8728..000000000000
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@@ -2459,10 -2780,10 +2463,15 @@@ static void ftrace_exports(struct ring_
  
  	preempt_disable_notrace();
  
 -	export = rcu_dereference_raw_check(ftrace_exports_list);
 +	export = rcu_dereference_raw_notrace(ftrace_exports_list);
  	while (export) {
++<<<<<<< HEAD
 +		trace_process_export(export, event);
 +		export = rcu_dereference_raw_notrace(export->next);
++=======
+ 		trace_process_export(export, event, flag);
+ 		export = rcu_dereference_raw_check(export->next);
++>>>>>>> 8438f5211479 (tracing: Add flag to control different traces)
  	}
  
  	preempt_enable_notrace();
diff --git a/include/linux/trace.h b/include/linux/trace.h
index b95ffb2188ab..8e938746f558 100644
--- a/include/linux/trace.h
+++ b/include/linux/trace.h
@@ -3,6 +3,9 @@
 #define _LINUX_TRACE_H
 
 #ifdef CONFIG_TRACING
+
+#define TRACE_EXPORT_FUNCTION	BIT(0)
+
 /*
  * The trace export - an export of Ftrace output. The trace_export
  * can process traces and export them to a registered destination as
@@ -15,10 +18,12 @@
  * next		- pointer to the next trace_export
  * write	- copy traces which have been delt with ->commit() to
  *		  the destination
+ * flags	- which ftrace to be exported
  */
 struct trace_export {
 	struct trace_export __rcu	*next;
 	void (*write)(struct trace_export *, const void *, unsigned int);
+	int flags;
 };
 
 int register_ftrace_export(struct trace_export *export);
* Unmerged path kernel/trace/trace.c
