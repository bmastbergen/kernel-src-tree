mt76: connac: introduce mt76_sta_cmd_info data structure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 5802106f8bc710cac0e2db6d5d2d219d5f9490b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/5802106f.failed

Introduce mt76_sta_cmd_info data structure to contain parameters passed
to mt76_sta_cmd_info routine. This is preliminary patch to properly
configure rcpi for mt7921 devices.

	Tested-by: Jayden.Kuo <jayden.kuo@mediatek.com>
	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 5802106f8bc710cac0e2db6d5d2d219d5f9490b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7615/mcu.c
#	drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.c
#	drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
#	drivers/net/wireless/mediatek/mt76/mt7921/main.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7615/mcu.c
index 54430643642e,1ed06c253816..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7615/mcu.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7615/mcu.c
@@@ -1371,14 -986,13 +1371,20 @@@ mt7615_mcu_wtbl_sta_add(struct mt7615_d
  	if (IS_ERR(sskb))
  		return PTR_ERR(sskb);
  
++<<<<<<< HEAD
 +	mt7615_mcu_sta_basic_tlv(sskb, vif, sta, enable);
 +	if (enable && sta) {
 +		mt7615_mcu_sta_ht_tlv(sskb, sta);
 +		mt7615_mcu_sta_uapsd(sskb, vif, sta);
 +	}
++=======
+ 	mt76_connac_mcu_sta_basic_tlv(sskb, vif, sta, enable);
+ 	if (enable && sta)
+ 		mt76_connac_mcu_sta_tlv(phy->mt76, sskb, sta, vif, 0);
++>>>>>>> 5802106f8bc7 (mt76: connac: introduce mt76_sta_cmd_info data structure)
  
 -	wtbl_hdr = mt76_connac_mcu_alloc_wtbl_req(&dev->mt76, &msta->wcid,
 -						  WTBL_RESET_AND_SET, NULL,
 -						  &wskb);
 +	wtbl_hdr = mt7615_mcu_alloc_wtbl_req(dev, msta, WTBL_RESET_AND_SET,
 +					     NULL, &wskb);
  	if (IS_ERR(wtbl_hdr))
  		return PTR_ERR(wtbl_hdr);
  
@@@ -1461,38 -1082,19 +1467,50 @@@ mt7615_mcu_sta_rx_ba(struct mt7615_dev 
  }
  
  static int
 -__mt7615_mcu_add_sta(struct mt76_phy *phy, struct ieee80211_vif *vif,
 -		     struct ieee80211_sta *sta, bool enable, int cmd)
 +mt7615_mcu_add_sta_cmd(struct mt7615_dev *dev, struct ieee80211_vif *vif,
 +		       struct ieee80211_sta *sta, bool enable, int cmd)
  {
  	struct mt7615_vif *mvif = (struct mt7615_vif *)vif->drv_priv;
++<<<<<<< HEAD
 +	struct wtbl_req_hdr *wtbl_hdr;
 +	struct mt7615_sta *msta;
 +	struct tlv *sta_wtbl;
 +	struct sk_buff *skb;
 +
 +	msta = sta ? (struct mt7615_sta *)sta->drv_priv : &mvif->sta;
 +
 +	skb = mt7615_mcu_alloc_sta_req(dev, mvif, msta);
 +	if (IS_ERR(skb))
 +		return PTR_ERR(skb);
 +
 +	mt7615_mcu_sta_basic_tlv(skb, vif, sta, enable);
 +	if (enable && sta) {
 +		mt7615_mcu_sta_ht_tlv(skb, sta);
 +		mt7615_mcu_sta_uapsd(skb, vif, sta);
 +	}
 +
 +	sta_wtbl = mt7615_mcu_add_tlv(skb, STA_REC_WTBL, sizeof(struct tlv));
 +
 +	wtbl_hdr = mt7615_mcu_alloc_wtbl_req(dev, msta, WTBL_RESET_AND_SET,
 +					     sta_wtbl, &skb);
 +	if (enable) {
 +		mt7615_mcu_wtbl_generic_tlv(skb, vif, sta, sta_wtbl, wtbl_hdr);
 +		if (sta)
 +			mt7615_mcu_wtbl_ht_tlv(skb, sta, sta_wtbl, wtbl_hdr);
 +	}
 +
 +	return mt76_mcu_skb_send_msg(&dev->mt76, skb, cmd, true);
++=======
+ 	struct mt76_sta_cmd_info info = {
+ 		.sta = sta,
+ 		.vif = vif,
+ 		.enable = enable,
+ 		.cmd = cmd,
+ 	};
+ 
+ 	info.wcid = sta ? (struct mt76_wcid *)sta->drv_priv : &mvif->sta.wcid;
+ 	return mt76_connac_mcu_add_sta_cmd(phy, &info);
++>>>>>>> 5802106f8bc7 (mt76: connac: introduce mt76_sta_cmd_info data structure)
  }
  
  static int
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/main.c
index b822180a14a3,302d8d78d6f7..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/main.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/main.c
@@@ -588,7 -657,7 +595,11 @@@ int mt7921_mac_sta_add(struct mt76_dev 
  	mt7921_mac_wtbl_update(dev, idx,
  			       MT_WTBL_UPDATE_ADM_COUNT_CLEAR);
  
++<<<<<<< HEAD
 +	ret = mt7921_mcu_uni_add_sta(dev, vif, sta, true);
++=======
+ 	ret = mt76_connac_mcu_add_sta_cmd(&dev->mphy, &info);
++>>>>>>> 5802106f8bc7 (mt76: connac: introduce mt76_sta_cmd_info data structure)
  	if (ret)
  		return ret;
  
@@@ -600,12 -671,27 +611,26 @@@ void mt7921_mac_sta_remove(struct mt76_
  {
  	struct mt7921_dev *dev = container_of(mdev, struct mt7921_dev, mt76);
  	struct mt7921_sta *msta = (struct mt7921_sta *)sta->drv_priv;
- 
+ 	struct mt76_sta_cmd_info info = {
+ 		.sta = sta,
+ 		.vif = vif,
+ 		.cmd = MCU_UNI_CMD_STA_REC_UPDATE,
+ 		.wcid = &msta->wcid,
+ 	};
+ 
++<<<<<<< HEAD
 +	mt7921_mcu_uni_add_sta(dev, vif, sta, false);
++=======
+ 	mt76_connac_free_pending_tx_skbs(&dev->pm, &msta->wcid);
+ 	mt76_connac_pm_wake(&dev->mphy, &dev->pm);
+ 
+ 	mt76_connac_mcu_add_sta_cmd(&dev->mphy, &info);
+ 
++>>>>>>> 5802106f8bc7 (mt76: connac: introduce mt76_sta_cmd_info data structure)
  	mt7921_mac_wtbl_update(dev, msta->wcid.idx,
  			       MT_WTBL_UPDATE_ADM_COUNT_CLEAR);
 -
 -	if (vif->type == NL80211_IFTYPE_STATION && !sta->tdls) {
 -		struct mt7921_vif *mvif = (struct mt7921_vif *)vif->drv_priv;
 -
 -		mt76_connac_mcu_uni_add_bss(&dev->mphy, vif, &mvif->sta.wcid,
 -					    false);
 -	}
 +	if (vif->type == NL80211_IFTYPE_STATION && !sta->tdls)
 +		mt7921_mcu_uni_add_bss(&dev->phy, vif, false);
  
  	spin_lock_bh(&dev->sta_poll_lock);
  	if (!list_empty(&msta->poll_list))
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7615/mcu.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/main.c
