xsk: Remove internal DMA headers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Björn Töpel <bjorn.topel@intel.com>
commit b75597d8947f842fa525000cf9569c21e7596da9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/b75597d8.failed

Christoph Hellwig correctly pointed out [1] that the AF_XDP core was
pointlessly including internal headers. Let us remove those includes.

  [1] https://lore.kernel.org/bpf/20201005084341.GA3224@infradead.org/

Fixes: 1c1efc2af158 ("xsk: Create and free buffer pool independently from umem")
	Reported-by: Christoph Hellwig <hch@infradead.org>
	Signed-off-by: Björn Töpel <bjorn.topel@intel.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/bpf/20201005090525.116689-1-bjorn.topel@gmail.com
(cherry picked from commit b75597d8947f842fa525000cf9569c21e7596da9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/xdp/xsk_buff_pool.c
diff --cc net/xdp/xsk_buff_pool.c
index a2044c245215,64c9e55d4d4e..000000000000
--- a/net/xdp/xsk_buff_pool.c
+++ b/net/xdp/xsk_buff_pool.c
@@@ -2,21 -2,34 +2,25 @@@
  
  #include <net/xsk_buff_pool.h>
  #include <net/xdp_sock.h>
++<<<<<<< HEAD
++=======
+ #include <net/xdp_sock_drv.h>
++>>>>>>> b75597d8947f (xsk: Remove internal DMA headers)
  
  #include "xsk_queue.h"
 -#include "xdp_umem.h"
 -#include "xsk.h"
  
 -void xp_add_xsk(struct xsk_buff_pool *pool, struct xdp_sock *xs)
 +static void xp_addr_unmap(struct xsk_buff_pool *pool)
  {
 -	unsigned long flags;
 -
 -	if (!xs->tx)
 -		return;
 -
 -	spin_lock_irqsave(&pool->xsk_tx_list_lock, flags);
 -	list_add_rcu(&xs->tx_list, &pool->xsk_tx_list);
 -	spin_unlock_irqrestore(&pool->xsk_tx_list_lock, flags);
 +	vunmap(pool->addrs);
  }
  
 -void xp_del_xsk(struct xsk_buff_pool *pool, struct xdp_sock *xs)
 +static int xp_addr_map(struct xsk_buff_pool *pool,
 +		       struct page **pages, u32 nr_pages)
  {
 -	unsigned long flags;
 -
 -	if (!xs->tx)
 -		return;
 -
 -	spin_lock_irqsave(&pool->xsk_tx_list_lock, flags);
 -	list_del_rcu(&xs->tx_list);
 -	spin_unlock_irqrestore(&pool->xsk_tx_list_lock, flags);
 +	pool->addrs = vmap(pages, nr_pages, VM_MAP, PAGE_KERNEL);
 +	if (!pool->addrs)
 +		return -ENOMEM;
 +	return 0;
  }
  
  void xp_destroy(struct xsk_buff_pool *pool)
* Unmerged path net/xdp/xsk_buff_pool.c
