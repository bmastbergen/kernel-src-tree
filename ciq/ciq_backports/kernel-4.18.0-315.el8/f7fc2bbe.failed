mt76: mt7915: fix eeprom parsing for DBDC

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Felix Fietkau <nbd@nbd.name>
commit f7fc2bbe4680eb886fa7a7b647120990fd74e497
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/f7fc2bbe.failed

Annotate WIFI_CONF eeprom mask values with the byte number
Fix parsing per-band number of chains

	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit f7fc2bbe4680eb886fa7a7b647120990fd74e497)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7915/eeprom.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7915/eeprom.c
index d65910cc0709,291a781dada2..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7915/eeprom.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7915/eeprom.c
@@@ -43,35 -46,54 +43,71 @@@ static int mt7915_check_eeprom(struct m
  	}
  }
  
 -void mt7915_eeprom_parse_band_config(struct mt7915_phy *phy)
 +static void mt7915_eeprom_parse_hw_cap(struct mt7915_dev *dev)
  {
 -	struct mt7915_dev *dev = phy->dev;
 -	bool ext_phy = phy != &dev->phy;
 -	u32 val;
 +	u8 *eeprom = dev->mt76.eeprom.data;
 +	u8 tx_mask, max_nss = 4;
 +	u32 val = mt7915_eeprom_read(dev, MT_EE_WIFI_CONF);
  
++<<<<<<< HEAD
 +	val = FIELD_GET(MT_EE_WIFI_CONF_BAND_SEL, val);
++=======
+ 	val = mt7915_eeprom_read(dev, MT_EE_WIFI_CONF + ext_phy);
+ 	val = FIELD_GET(MT_EE_WIFI_CONF0_BAND_SEL, val);
++>>>>>>> f7fc2bbe4680 (mt76: mt7915: fix eeprom parsing for DBDC)
  	switch (val) {
  	case MT_EE_5GHZ:
 -		phy->mt76->cap.has_5ghz = true;
 +		dev->mphy.cap.has_5ghz = true;
  		break;
  	case MT_EE_2GHZ:
 -		phy->mt76->cap.has_2ghz = true;
 +		dev->mphy.cap.has_2ghz = true;
  		break;
  	default:
 -		phy->mt76->cap.has_2ghz = true;
 -		phy->mt76->cap.has_5ghz = true;
 +		dev->mphy.cap.has_2ghz = true;
 +		dev->mphy.cap.has_5ghz = true;
  		break;
  	}
++<<<<<<< HEAD
 +
 +	/* read tx mask from eeprom */
 +	tx_mask =  FIELD_GET(MT_EE_WIFI_CONF_TX_MASK,
 +			     eeprom[MT_EE_WIFI_CONF]);
 +	if (!tx_mask || tx_mask > max_nss)
 +		tx_mask = max_nss;
 +
 +	dev->chainmask = BIT(tx_mask) - 1;
 +	dev->mphy.antenna_mask = dev->chainmask;
 +	dev->phy.chainmask = dev->chainmask;
++=======
+ }
+ 
+ static void mt7915_eeprom_parse_hw_cap(struct mt7915_dev *dev)
+ {
+ 	u8 nss, nss_band, *eeprom = dev->mt76.eeprom.data;
+ 
+ 	mt7915_eeprom_parse_band_config(&dev->phy);
+ 
+ 	/* read tx mask from eeprom */
+ 	nss = FIELD_GET(MT_EE_WIFI_CONF0_TX_PATH, eeprom[MT_EE_WIFI_CONF]);
+ 	if (!nss || nss > 4)
+ 		nss = 4;
+ 
+ 	nss_band = nss;
+ 
+ 	if (dev->dbdc_support) {
+ 		nss_band = FIELD_GET(MT_EE_WIFI_CONF3_TX_PATH_B0,
+ 				     eeprom[MT_EE_WIFI_CONF + 3]);
+ 		if (!nss_band || nss_band > 2)
+ 			nss_band = 2;
+ 
+ 		if (nss_band >= nss)
+ 			nss = 4;
+ 	}
+ 
+ 	dev->chainmask = BIT(nss) - 1;
+ 	dev->mphy.antenna_mask = BIT(nss_band) - 1;
+ 	dev->mphy.chainmask = dev->mphy.antenna_mask;
++>>>>>>> f7fc2bbe4680 (mt76: mt7915: fix eeprom parsing for DBDC)
  }
  
  int mt7915_eeprom_init(struct mt7915_dev *dev)
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7915/eeprom.c
diff --git a/drivers/net/wireless/mediatek/mt76/mt7915/eeprom.h b/drivers/net/wireless/mediatek/mt76/mt7915/eeprom.h
index 4e31d6ab4fa6..a8945231af13 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7915/eeprom.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7915/eeprom.h
@@ -24,11 +24,14 @@ enum mt7915_eeprom_field {
 	__MT_EE_MAX =		0xe00
 };
 
-#define MT_EE_WIFI_CONF_TX_MASK			GENMASK(2, 0)
-#define MT_EE_WIFI_CONF_BAND_SEL		GENMASK(7, 6)
-#define MT_EE_WIFI_CONF_TSSI0_2G		BIT(0)
-#define MT_EE_WIFI_CONF_TSSI0_5G		BIT(2)
-#define MT_EE_WIFI_CONF_TSSI1_5G		BIT(4)
+#define MT_EE_WIFI_CONF0_TX_PATH		GENMASK(2, 0)
+#define MT_EE_WIFI_CONF0_BAND_SEL		GENMASK(7, 6)
+#define MT_EE_WIFI_CONF1_BAND_SEL		GENMASK(7, 6)
+#define MT_EE_WIFI_CONF3_TX_PATH_B0		GENMASK(1, 0)
+#define MT_EE_WIFI_CONF3_TX_PATH_B1		GENMASK(5, 4)
+#define MT_EE_WIFI_CONF7_TSSI0_2G		BIT(0)
+#define MT_EE_WIFI_CONF7_TSSI0_5G		BIT(2)
+#define MT_EE_WIFI_CONF7_TSSI1_5G		BIT(4)
 
 enum mt7915_eeprom_band {
 	MT_EE_DUAL_BAND,
@@ -115,9 +118,9 @@ mt7915_tssi_enabled(struct mt7915_dev *dev, enum nl80211_band band)
 
 	/* TODO: DBDC */
 	if (band == NL80211_BAND_5GHZ)
-		return eep[MT_EE_WIFI_CONF + 7] & MT_EE_WIFI_CONF_TSSI0_5G;
+		return eep[MT_EE_WIFI_CONF + 7] & MT_EE_WIFI_CONF7_TSSI0_5G;
 	else
-		return eep[MT_EE_WIFI_CONF + 7] & MT_EE_WIFI_CONF_TSSI0_2G;
+		return eep[MT_EE_WIFI_CONF + 7] & MT_EE_WIFI_CONF7_TSSI0_2G;
 }
 
 extern const struct sku_group mt7915_sku_groups[];
