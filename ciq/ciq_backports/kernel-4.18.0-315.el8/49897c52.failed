mt76: mt7921: fix the insmod hangs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Sean Wang <sean.wang@mediatek.com>
commit 49897c529f85504139a6e54417a65f26a07492d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/49897c52.failed

Fix the second insert module causing the device hangs after remove module.

Fixes: 1c099ab44727 ("mt76: mt7921: add MCU support")
	Signed-off-by: Sean Wang <sean.wang@mediatek.com>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 49897c529f85504139a6e54417a65f26a07492d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7921/mac.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/mac.c
index bcbd59a23f9b,36eaa9d97f64..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/mac.c
@@@ -1162,19 -1200,21 +1162,23 @@@ void mt7921_update_channel(struct mt76_
  	mt7921_phy_update_channel(&mdev->phy, 0);
  	/* reset obss airtime */
  	mt76_set(dev, MT_WF_RMAC_MIB_TIME0(0), MT_WF_RMAC_MIB_RXTIME_CLR);
 -
 -	mt76_connac_power_save_sched(&dev->mphy, &dev->pm);
  }
  
++<<<<<<< HEAD
 +static bool
 +mt7921_wait_reset_state(struct mt7921_dev *dev, u32 state)
++=======
+ int mt7921_wfsys_reset(struct mt7921_dev *dev)
++>>>>>>> 49897c529f85 (mt76: mt7921: fix the insmod hangs)
  {
 -	mt76_set(dev, 0x70002600, BIT(0));
 -	msleep(200);
 -	mt76_clear(dev, 0x70002600, BIT(0));
 +	bool ret;
 +
 +	ret = wait_event_timeout(dev->reset_wait,
 +				 (READ_ONCE(dev->reset_state) & state),
 +				 MT7921_RESET_TIMEOUT);
  
 -	return __mt76_poll_msec(&dev->mt76, MT_WFSYS_SW_RST_B,
 -				WFSYS_SW_INIT_DONE, WFSYS_SW_INIT_DONE, 500);
 +	WARN(!ret, "Timeout waiting for MCU reset state %x\n", state);
 +	return ret;
  }
  
  static void
diff --git a/drivers/net/wireless/mediatek/mt76/mt7921/init.c b/drivers/net/wireless/mediatek/mt76/mt7921/init.c
index 1af7367c40d5..e190612c3feb 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7921/init.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/init.c
@@ -263,8 +263,6 @@ void mt7921_unregister_device(struct mt7921_dev *dev)
 {
 	mt76_unregister_device(&dev->mt76);
 	mt7921_mcu_exit(dev);
-	mt7921_dma_cleanup(dev);
-
 	mt7921_tx_token_put(dev);
 
 	tasklet_disable(&dev->irq_tasklet);
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/mac.c
diff --git a/drivers/net/wireless/mediatek/mt76/mt7921/mcu.c b/drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
index a931e8406c2a..1bf3cf3f5c8d 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
@@ -1753,18 +1753,7 @@ int mt7921_mcu_init(struct mt7921_dev *dev)
 
 void mt7921_mcu_exit(struct mt7921_dev *dev)
 {
-	u32 reg = mt7921_reg_map_l1(dev, MT_TOP_MISC);
-
-	__mt76_mcu_restart(&dev->mt76);
-	if (!mt76_poll_msec(dev, reg, MT_TOP_MISC_FW_STATE,
-			    FIELD_PREP(MT_TOP_MISC_FW_STATE,
-				       FW_STATE_FW_DOWNLOAD), 1000)) {
-		dev_err(dev->mt76.dev, "Failed to exit mcu\n");
-		return;
-	}
-
-	reg = mt7921_reg_map_l1(dev, MT_TOP_LPCR_HOST_BAND0);
-	mt76_wr(dev, reg, MT_TOP_LPCR_HOST_FW_OWN);
+	mt7921_wfsys_reset(dev);
 	skb_queue_purge(&dev->mt76.mcu.res_q);
 }
 
diff --git a/drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h b/drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
index 2a7af97420c3..4f992e62f8d4 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
@@ -370,4 +370,5 @@ int mt7921_mcu_update_gtk_rekey(struct ieee80211_hw *hw,
 int mt7921_mcu_update_arp_filter(struct ieee80211_hw *hw,
 				 struct ieee80211_vif *vif,
 				 struct ieee80211_bss_conf *info);
+int mt7921_wfsys_reset(struct mt7921_dev *dev);
 #endif
