libbpf: Fix null dereference in xsk_socket__delete

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Magnus Karlsson <magnus.karlsson@intel.com>
commit f78331f74cacb33d87cd60376dacc5bd397959e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/f78331f7.failed

Fix a possible null pointer dereference in xsk_socket__delete that
will occur if a null pointer is fed into the function.

Fixes: 2f6324a3937f ("libbpf: Support shared umems between queues and devices")
	Reported-by: Andrii Nakryiko <andrii.nakryiko@gmail.com>
	Signed-off-by: Magnus Karlsson <magnus.karlsson@intel.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/1604396490-12129-2-git-send-email-magnus.karlsson@gmail.com
(cherry picked from commit f78331f74cacb33d87cd60376dacc5bd397959e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/xsk.c
diff --cc tools/lib/bpf/xsk.c
index a9b02103767b,504b7a85d445..000000000000
--- a/tools/lib/bpf/xsk.c
+++ b/tools/lib/bpf/xsk.c
@@@ -781,9 -898,10 +782,14 @@@ void xsk_socket__delete(struct xsk_sock
  	if (!xsk)
  		return;
  
++<<<<<<< HEAD
 +	if (xsk->prog_fd != -1) {
++=======
+ 	ctx = xsk->ctx;
+ 	if (ctx->prog_fd != -1) {
++>>>>>>> f78331f74cac (libbpf: Fix null dereference in xsk_socket__delete)
  		xsk_delete_bpf_maps(xsk);
 -		close(ctx->prog_fd);
 +		close(xsk->prog_fd);
  	}
  
  	err = xsk_get_mmap_offsets(xsk->fd, &off);
* Unmerged path tools/lib/bpf/xsk.c
