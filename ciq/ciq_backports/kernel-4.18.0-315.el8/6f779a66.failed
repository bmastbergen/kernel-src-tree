cfg80211: allow specifying a reason for hw_rfkill

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Emmanuel Grumbach <emmanuel.grumbach@intel.com>
commit 6f779a66dc84450ceb4825024d3e337f42e633de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/6f779a66.failed

rfkill now allows to report a reason for the hw_rfkill state.
Allow cfg80211 drivers to specify this reason.
Keep the current API to use the default reason
(RFKILL_HARD_BLOCK_SIGNAL).

	Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Link: https://lore.kernel.org/r/20210322204633.102581-4-emmanuel.grumbach@intel.com
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 6f779a66dc84450ceb4825024d3e337f42e633de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/cfg80211.h
diff --cc include/net/cfg80211.h
index adb3bb4b6816,3b296f2b7a2c..000000000000
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@@ -10,6 -10,8 +10,11 @@@
   * Copyright (C) 2018-2020 Intel Corporation
   */
  
++<<<<<<< HEAD
++=======
+ #include <linux/ethtool.h>
+ #include <uapi/linux/rfkill.h>
++>>>>>>> 6f779a66dc84 (cfg80211: allow specifying a reason for hw_rfkill)
  #include <linux/netdevice.h>
  #include <linux/debugfs.h>
  #include <linux/list.h>
* Unmerged path include/net/cfg80211.h
diff --git a/net/wireless/core.c b/net/wireless/core.c
index 12d1359c5c78..6c3f7a591c4f 100644
--- a/net/wireless/core.c
+++ b/net/wireless/core.c
@@ -1082,14 +1082,15 @@ void wiphy_free(struct wiphy *wiphy)
 }
 EXPORT_SYMBOL(wiphy_free);
 
-void wiphy_rfkill_set_hw_state(struct wiphy *wiphy, bool blocked)
+void wiphy_rfkill_set_hw_state_reason(struct wiphy *wiphy, bool blocked,
+				      enum rfkill_hard_block_reasons reason)
 {
 	struct cfg80211_registered_device *rdev = wiphy_to_rdev(wiphy);
 
-	if (rfkill_set_hw_state(rdev->rfkill, blocked))
+	if (rfkill_set_hw_state_reason(rdev->rfkill, blocked, reason))
 		schedule_work(&rdev->rfkill_block);
 }
-EXPORT_SYMBOL(wiphy_rfkill_set_hw_state);
+EXPORT_SYMBOL(wiphy_rfkill_set_hw_state_reason);
 
 void cfg80211_cqm_config_free(struct wireless_dev *wdev)
 {
