mt76: mt7915: move testmode data from dev to phy

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Shayne Chen <shayne.chen@mediatek.com>
commit 78fc30a21cf1175e97567fa5153c0efc7d955a45
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/78fc30a2.failed

Move per-chip testmode data to mt7915_phy, to properly support
reg_backup and rx status of each band in testmode.

	Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
	Acked-by: Ryder Lee <ryder.lee@mediatek.com>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 78fc30a21cf1175e97567fa5153c0efc7d955a45)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7915/mac.c
#	drivers/net/wireless/mediatek/mt76/mt7915/testmode.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7915/mac.c
index 2621e27aedf5,dc1f56fb823d..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7915/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7915/mac.c
@@@ -601,11 -608,11 +608,15 @@@ void mt7915_mac_fill_rx_vector(struct m
  #endif
  
  static void
 -mt7915_mac_write_txwi_tm(struct mt7915_phy *phy, __le32 *txwi,
 -			 struct sk_buff *skb)
 +mt7915_mac_write_txwi_tm(struct mt7915_dev *dev, struct mt76_phy *mphy,
 +			 __le32 *txwi, struct sk_buff *skb)
  {
  #ifdef CONFIG_NL80211_TESTMODE
++<<<<<<< HEAD
 +	struct mt76_testmode_data *td = &dev->mt76.test;
++=======
+ 	struct mt76_testmode_data *td = &phy->mt76->test;
++>>>>>>> 78fc30a21cf1 (mt76: mt7915: move testmode data from dev to phy)
  	u8 rate_idx = td->tx_rate_idx;
  	u8 nss = td->tx_rate_nss;
  	u8 bw, mode;
diff --cc drivers/net/wireless/mediatek/mt76/mt7915/testmode.c
index fe56ab18e974,b58c91ea3fa5..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7915/testmode.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7915/testmode.c
@@@ -131,14 -133,15 +131,18 @@@ mt7915_tm_set_trx(struct mt7915_dev *de
  }
  
  static void
 -mt7915_tm_reg_backup_restore(struct mt7915_phy *phy)
 +mt7915_tm_reg_backup_restore(struct mt7915_dev *dev, struct mt7915_phy *phy)
  {
  	int n_regs = ARRAY_SIZE(reg_backup_list);
 -	struct mt7915_dev *dev = phy->dev;
  	bool ext_phy = phy != &dev->phy;
- 	u32 *b = dev->test.reg_backup;
+ 	u32 *b = phy->test.reg_backup;
  	int i;
  
++<<<<<<< HEAD
 +	if (dev->mt76.test.state == MT76_TM_STATE_OFF) {
++=======
+ 	if (phy->mt76->test.state == MT76_TM_STATE_OFF) {
++>>>>>>> 78fc30a21cf1 (mt76: mt7915: move testmode data from dev to phy)
  		for (i = 0; i < n_regs; i++)
  			mt76_wr(dev, reg_backup_list[i].band[ext_phy], b[i]);
  		return;
@@@ -201,23 -205,27 +205,31 @@@ mt7915_tm_set_tx_frames(struct mt7915_d
  {
  	static const u8 spe_idx_map[] = {0, 0, 1, 0, 3, 2, 4, 0,
  					 9, 8, 6, 10, 16, 12, 18, 0};
 -	struct sk_buff *skb = phy->mt76->test.tx_skb;
 -	struct mt7915_dev *dev = phy->dev;
 +	struct sk_buff *skb = dev->mt76.test.tx_skb;
  	struct ieee80211_tx_info *info;
  
 -	mt7915_tm_set_trx(phy, TM_MAC_RX_RXV, false);
 +	mt7915_tm_set_trx(dev, &dev->phy, TM_MAC_RX_RXV, false);
  
  	if (en) {
 -		u8 tx_ant = phy->mt76->test.tx_antenna_mask;
 +		u8 tx_ant = dev->mt76.test.tx_antenna_mask;
  
  		mutex_unlock(&dev->mt76.mutex);
 -		mt7915_set_channel(phy);
 +		mt7915_set_channel(&dev->phy);
  		mutex_lock(&dev->mt76.mutex);
  
++<<<<<<< HEAD
 +		mt7915_mcu_set_chan_info(&dev->phy, MCU_EXT_CMD_SET_RX_PATH);
 +		dev->test.spe_idx = spe_idx_map[tx_ant];
++=======
+ 		mt7915_mcu_set_chan_info(phy, MCU_EXT_CMD_SET_RX_PATH);
+ 
+ 		if (phy != &dev->phy)
+ 			tx_ant >>= 2;
+ 		phy->test.spe_idx = spe_idx_map[tx_ant];
++>>>>>>> 78fc30a21cf1 (mt76: mt7915: move testmode data from dev to phy)
  	}
  
 -	mt7915_tm_set_trx(phy, TM_MAC_TX, en);
 +	mt7915_tm_set_trx(dev, &dev->phy, TM_MAC_TX, en);
  
  	if (!en || !skb)
  		return;
@@@ -321,9 -330,9 +333,13 @@@ mt7915_tm_set_params(struct mt76_dev *m
  }
  
  static int
 -mt7915_tm_dump_stats(struct mt76_phy *mphy, struct sk_buff *msg)
 +mt7915_tm_dump_stats(struct mt76_dev *mdev, struct sk_buff *msg)
  {
++<<<<<<< HEAD
 +	struct mt7915_dev *dev = container_of(mdev, struct mt7915_dev, mt76);
++=======
+ 	struct mt7915_phy *phy = mphy->priv;
++>>>>>>> 78fc30a21cf1 (mt76: mt7915: move testmode data from dev to phy)
  	void *rx, *rssi;
  	int i;
  
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7915/mac.c
diff --git a/drivers/net/wireless/mediatek/mt76/mt7915/mac.h b/drivers/net/wireless/mediatek/mt76/mt7915/mac.h
index d420392b952d..96ff3fb0d1f3 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7915/mac.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7915/mac.h
@@ -95,6 +95,8 @@ enum rx_pkt_type {
 #define MT_RXD3_NORMAL_PF_MODE		BIT(29)
 #define MT_RXD3_NORMAL_PF_STS		GENMASK(31, 30)
 
+#define MT_RXV_HDR_BAND_IDX		BIT(24)
+
 /* P-RXV */
 #define MT_PRXV_TX_RATE			GENMASK(6, 0)
 #define MT_PRXV_TX_DCM			BIT(4)
diff --git a/drivers/net/wireless/mediatek/mt76/mt7915/mt7915.h b/drivers/net/wireless/mediatek/mt76/mt7915/mt7915.h
index 86b2a8866e72..c088fd7b665e 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7915/mt7915.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7915/mt7915.h
@@ -143,6 +143,20 @@ struct mt7915_phy {
 	struct delayed_work mac_work;
 	u8 mac_work_count;
 	u8 sta_work_count;
+
+#ifdef CONFIG_NL80211_TESTMODE
+	struct {
+		u32 *reg_backup;
+
+		s32 last_freq_offset;
+		u8 last_rcpi[4];
+		s8 last_ib_rssi[4];
+		s8 last_wb_rssi[4];
+		u8 last_snr;
+
+		u8 spe_idx;
+	} test;
+#endif
 };
 
 struct mt7915_dev {
@@ -175,20 +189,6 @@ struct mt7915_dev {
 	s8 **rate_power; /* TODO: use mt76_rate_power */
 
 	bool fw_debug;
-
-#ifdef CONFIG_NL80211_TESTMODE
-	struct {
-		u32 *reg_backup;
-
-		s32 last_freq_offset;
-		u8 last_rcpi[4];
-		s8 last_ib_rssi[4];
-		s8 last_wb_rssi[4];
-		u8 last_snr;
-
-		u8 spe_idx;
-	} test;
-#endif
 };
 
 enum {
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7915/testmode.c
