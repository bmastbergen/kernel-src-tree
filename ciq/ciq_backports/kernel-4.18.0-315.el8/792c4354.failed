tcp: move tp->rack init to tcp_disconnect()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 792c4354a508c42c69f4771287cb99dde4ab79be
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/792c4354.failed

If we make sure all listeners have proper tp->rack value,
then a clone will also inherit proper initial value.

Note that fresh sockets init tp->rack from tcp_init_sock()

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 792c4354a508c42c69f4771287cb99dde4ab79be)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index 09484262d3e9,2348199e6cee..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -2663,6 -2609,15 +2663,18 @@@ int tcp_disconnect(struct sock *sk, in
  	tp->sacked_out = 0;
  	tp->tlp_high_seq = 0;
  	tp->last_oow_ack_time = 0;
++<<<<<<< HEAD
++=======
+ 	/* There's a bubble in the pipe until at least the first ACK. */
+ 	tp->app_limited = ~0U;
+ 	tp->rack.mstamp = 0;
+ 	tp->rack.advanced = 0;
+ 	tp->rack.reo_wnd_steps = 1;
+ 	tp->rack.last_delivered = 0;
+ 	tp->rack.reo_wnd_persist = 0;
+ 	tp->rack.dsack_seen = 0;
+ 
++>>>>>>> 792c4354a508 (tcp: move tp->rack init to tcp_disconnect())
  
  	/* Clean up fastopen related fields */
  	tcp_free_fastopen_req(tp);
* Unmerged path net/ipv4/tcp.c
diff --git a/net/ipv4/tcp_minisocks.c b/net/ipv4/tcp_minisocks.c
index 079dc195a8be..6d8e898e7bdd 100644
--- a/net/ipv4/tcp_minisocks.c
+++ b/net/ipv4/tcp_minisocks.c
@@ -547,12 +547,6 @@ struct sock *tcp_create_openreq_child(const struct sock *sk,
 	newtp->fastopen_req = NULL;
 	RCU_INIT_POINTER(newtp->fastopen_rsk, NULL);
 	newtp->syn_data_acked = 0;
-	newtp->rack.mstamp = 0;
-	newtp->rack.advanced = 0;
-	newtp->rack.reo_wnd_steps = 1;
-	newtp->rack.last_delivered = 0;
-	newtp->rack.reo_wnd_persist = 0;
-	newtp->rack.dsack_seen = 0;
 
 	tcp_bpf_clone(sk, newsk);
 
