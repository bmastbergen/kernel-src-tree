locking/rtmutex: Consolidate rt_mutex_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Sebastian Andrzej Siewior <bigeasy@linutronix.de>
commit 199cacd1a625cfc499d624b98b10dc763062f7dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/199cacd1.failed

rt_mutex_init() only initializes lockdep if CONFIG_DEBUG_RT_MUTEXES is
enabled, which is fine because all lockdep variants select it, but there is
no reason to do so.

Move the function outside of the CONFIG_DEBUG_RT_MUTEXES block which
removes #ifdeffery.

	Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lore.kernel.org/r/20210326153943.437405350@linutronix.de
(cherry picked from commit 199cacd1a625cfc499d624b98b10dc763062f7dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/rtmutex.h
diff --cc include/linux/rtmutex.h
index 48b334b9eb87,243fabc2c85f..000000000000
--- a/include/linux/rtmutex.h
+++ b/include/linux/rtmutex.h
@@@ -53,25 -51,15 +54,33 @@@ struct hrtimer_sleeper
  	return 0;
   }
  # define rt_mutex_debug_check_no_locks_held(task)	do { } while (0)
+ # define rt_mutex_debug_task_free(t)			do { } while (0)
  #endif
  
++<<<<<<< HEAD
 +#ifdef CONFIG_DEBUG_RT_MUTEXES
 +# define __DEBUG_RT_MUTEX_INITIALIZER(mutexname) \
 +	, .name = #mutexname
 +
 +# define rt_mutex_init(mutex) \
++=======
+ #define rt_mutex_init(mutex) \
++>>>>>>> 199cacd1a625 (locking/rtmutex: Consolidate rt_mutex_init())
  do { \
  	static struct lock_class_key __key; \
  	__rt_mutex_init(mutex, __func__, &__key); \
  } while (0)
  
++<<<<<<< HEAD
 + extern void rt_mutex_debug_task_free(struct task_struct *tsk);
 +#else
 +# define __DEBUG_RT_MUTEX_INITIALIZER(mutexname)
 +# define rt_mutex_init(mutex)			__rt_mutex_init(mutex, NULL, NULL)
 +# define rt_mutex_debug_task_free(t)			do { } while (0)
 +#endif
 +
++=======
++>>>>>>> 199cacd1a625 (locking/rtmutex: Consolidate rt_mutex_init())
  #ifdef CONFIG_DEBUG_LOCK_ALLOC
  #define __DEP_MAP_RT_MUTEX_INITIALIZER(mutexname) \
  	, .dep_map = { .name = #mutexname }
* Unmerged path include/linux/rtmutex.h
