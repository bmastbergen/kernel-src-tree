mt76: attempt to free up more room when filling the tx queue

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Felix Fietkau <nbd@nbd.name>
commit 9716ef046b46a6426b2a11301ea5232fc8cdce63
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/9716ef04.failed

Run dma cleanup immediately if the queue is almost full, instead of waiting
for the tx interrupt

	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 9716ef046b46a6426b2a11301ea5232fc8cdce63)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/tx.c
diff --cc drivers/net/wireless/mediatek/mt76/tx.c
index 99005b28b465,1e20afb70fc1..000000000000
--- a/drivers/net/wireless/mediatek/mt76/tx.c
+++ b/drivers/net/wireless/mediatek/mt76/tx.c
@@@ -447,8 -447,8 +447,13 @@@ mt76_txq_send_burst(struct mt76_phy *ph
  static int
  mt76_txq_schedule_list(struct mt76_phy *phy, enum mt76_txq_id qid)
  {
++<<<<<<< HEAD
 +	struct mt76_dev *dev = phy->dev;
 +	struct mt76_queue *q = dev->q_tx[qid];
++=======
+ 	struct mt76_queue *q = phy->q_tx[qid];
+ 	struct mt76_dev *dev = phy->dev;
++>>>>>>> 9716ef046b46 (mt76: attempt to free up more room when filling the tx queue)
  	struct ieee80211_txq *txq;
  	struct mt76_txq *mtxq;
  	struct mt76_wcid *wcid;
diff --git a/drivers/net/wireless/mediatek/mt76/dma.c b/drivers/net/wireless/mediatek/mt76/dma.c
index 33fb7892c5a5..db2444245d78 100644
--- a/drivers/net/wireless/mediatek/mt76/dma.c
+++ b/drivers/net/wireless/mediatek/mt76/dma.c
@@ -88,6 +88,7 @@ mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q,
 	int i;
 
 	spin_lock_init(&q->lock);
+	spin_lock_init(&q->cleanup_lock);
 
 	q->regs = dev->mmio.regs + ring_base + idx * MT_RING_SIZE;
 	q->ndesc = n_desc;
@@ -225,6 +226,7 @@ mt76_dma_tx_cleanup(struct mt76_dev *dev, struct mt76_queue *q, bool flush)
 	if (!q)
 		return;
 
+	spin_lock_bh(&q->cleanup_lock);
 	if (flush)
 		last = -1;
 	else
@@ -243,6 +245,7 @@ mt76_dma_tx_cleanup(struct mt76_dev *dev, struct mt76_queue *q, bool flush)
 			last = readl(&q->regs->dma_idx);
 
 	}
+	spin_unlock_bh(&q->cleanup_lock);
 
 	if (flush) {
 		spin_lock_bh(&q->lock);
diff --git a/drivers/net/wireless/mediatek/mt76/mt76.h b/drivers/net/wireless/mediatek/mt76/mt76.h
index b1381101ffac..9823d88a6153 100644
--- a/drivers/net/wireless/mediatek/mt76/mt76.h
+++ b/drivers/net/wireless/mediatek/mt76/mt76.h
@@ -125,6 +125,7 @@ struct mt76_queue {
 	struct mt76_queue_regs __iomem *regs;
 
 	spinlock_t lock;
+	spinlock_t cleanup_lock;
 	struct mt76_queue_entry *entry;
 	struct mt76_desc *desc;
 
* Unmerged path drivers/net/wireless/mediatek/mt76/tx.c
