scsi: smartpqi: Add support for wwid

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Kevin Barnett <kevin.barnett@microchip.com>
commit 7a84a821f194bb1e509219c80efcbff2b4d47e45
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/7a84a821.failed

WWID has been added to Report Physical LUNs in newer controller
firmware. The presence of this field is detected by a feature bit. Add
detection of this new feature and store the WWID when set.

Link: https://lore.kernel.org/r/161549378041.25025.3869709982357729841.stgit@brunhilda
	Reviewed-by: Scott Benesh <scott.benesh@microchip.com>
	Reviewed-by: Mike McGowen <mike.mcgowen@microchip.com>
	Reviewed-by: Scott Teel <scott.teel@microchip.com>
	Signed-off-by: Kevin Barnett <kevin.barnett@microchip.com>
	Signed-off-by: Don Brace <don.brace@microchip.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 7a84a821f194bb1e509219c80efcbff2b4d47e45)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/smartpqi/smartpqi.h
#	drivers/scsi/smartpqi/smartpqi_init.c
diff --cc drivers/scsi/smartpqi/smartpqi.h
index 2a82a166f773,a579d772dce0..000000000000
--- a/drivers/scsi/smartpqi/smartpqi.h
+++ b/drivers/scsi/smartpqi/smartpqi.h
@@@ -761,13 -832,29 +761,34 @@@ struct pqi_config_table_firmware_featur
  	u8	features_supported[];
  /*	u8	features_requested_by_host[]; */
  /*	u8	features_enabled[]; */
 -/* The 2 fields below are only valid if the MAX_KNOWN_FEATURE bit is set. */
 -/*	__le16	firmware_max_known_feature; */
 -/*	__le16	host_max_known_feature; */
  };
  
++<<<<<<< HEAD
 +#define PQI_FIRMWARE_FEATURE_OFA			0
 +#define PQI_FIRMWARE_FEATURE_SMP			1
 +#define PQI_FIRMWARE_FEATURE_SOFT_RESET_HANDSHAKE	11
 +#define PQI_FIRMWARE_FEATURE_RAID_IU_TIMEOUT		13
 +#define PQI_FIRMWARE_FEATURE_TMF_IU_TIMEOUT		14
++=======
+ #define PQI_FIRMWARE_FEATURE_OFA				0
+ #define PQI_FIRMWARE_FEATURE_SMP				1
+ #define PQI_FIRMWARE_FEATURE_MAX_KNOWN_FEATURE			2
+ #define PQI_FIRMWARE_FEATURE_RAID_0_READ_BYPASS			3
+ #define PQI_FIRMWARE_FEATURE_RAID_1_READ_BYPASS			4
+ #define PQI_FIRMWARE_FEATURE_RAID_5_READ_BYPASS			5
+ #define PQI_FIRMWARE_FEATURE_RAID_6_READ_BYPASS			6
+ #define PQI_FIRMWARE_FEATURE_RAID_0_WRITE_BYPASS		7
+ #define PQI_FIRMWARE_FEATURE_RAID_1_WRITE_BYPASS		8
+ #define PQI_FIRMWARE_FEATURE_RAID_5_WRITE_BYPASS		9
+ #define PQI_FIRMWARE_FEATURE_RAID_6_WRITE_BYPASS		10
+ #define PQI_FIRMWARE_FEATURE_SOFT_RESET_HANDSHAKE		11
+ #define PQI_FIRMWARE_FEATURE_UNIQUE_SATA_WWN			12
+ #define PQI_FIRMWARE_FEATURE_RAID_IU_TIMEOUT			13
+ #define PQI_FIRMWARE_FEATURE_TMF_IU_TIMEOUT			14
+ #define PQI_FIRMWARE_FEATURE_RAID_BYPASS_ON_ENCRYPTED_NVME	15
+ #define PQI_FIRMWARE_FEATURE_UNIQUE_WWID_IN_REPORT_PHYS_LUN	16
+ #define PQI_FIRMWARE_FEATURE_MAXIMUM				16
++>>>>>>> 7a84a821f194 (scsi: smartpqi: Add support for wwid)
  
  struct pqi_config_table_debug {
  	struct pqi_config_table_section_header header;
@@@ -964,8 -1108,10 +985,9 @@@ struct pqi_scsi_dev 
  	struct list_head add_list_entry;
  	struct list_head delete_list_entry;
  
 -	struct pqi_stream_data stream_data[NUM_STREAMS_PER_LUN];
  	atomic_t scsi_cmds_outstanding;
  	atomic_t raid_bypass_cnt;
+ 	u8	page_83_identifier[16];
  };
  
  /* VPD inquiry pages */
@@@ -1156,8 -1303,21 +1178,26 @@@ struct pqi_ctrl_info 
  	u8		pqi_mode_enabled : 1;
  	u8		pqi_reset_quiesce_supported : 1;
  	u8		soft_reset_handshake_supported : 1;
++<<<<<<< HEAD
 +	u8		raid_iu_timeout_supported: 1;
 +	u8		tmf_iu_timeout_supported: 1;
++=======
+ 	u8		raid_iu_timeout_supported : 1;
+ 	u8		tmf_iu_timeout_supported : 1;
+ 	u8		unique_wwid_in_report_phys_lun_supported : 1;
+ 	u8		enable_r1_writes : 1;
+ 	u8		enable_r5_writes : 1;
+ 	u8		enable_r6_writes : 1;
+ 	u8		lv_drive_type_mix_valid : 1;
+ 	u8		enable_stream_detection : 1;
+ 
+ 	u8		ciss_report_log_flags;
+ 	u32		max_transfer_encrypted_sas_sata;
+ 	u32		max_transfer_encrypted_nvme;
+ 	u32		max_write_raid_5_6;
+ 	u32		max_write_raid_1_10_2drive;
+ 	u32		max_write_raid_1_10_3drive;
++>>>>>>> 7a84a821f194 (scsi: smartpqi: Add support for wwid)
  
  	struct list_head scsi_device_list;
  	spinlock_t	scsi_device_list_lock;
diff --cc drivers/scsi/smartpqi/smartpqi_init.c
index f21839c52ced,a226b7e32e3d..000000000000
--- a/drivers/scsi/smartpqi/smartpqi_init.c
+++ b/drivers/scsi/smartpqi/smartpqi_init.c
@@@ -1950,10 -2045,19 +1953,20 @@@ static inline bool pqi_is_device_with_s
  
  static inline bool pqi_expose_device(struct pqi_scsi_dev *device)
  {
 -	return !device->is_physical_device || !pqi_skip_device(device->scsi3addr);
 +	return !device->is_physical_device ||
 +		!pqi_skip_device(device->scsi3addr);
  }
  
+ static inline void pqi_set_physical_device_wwid(struct pqi_ctrl_info *ctrl_info,
+ 	struct pqi_scsi_dev *device, struct report_phys_lun_extended_entry *phys_lun_ext_entry)
+ {
+ 	if (ctrl_info->unique_wwid_in_report_phys_lun_supported ||
+ 		pqi_is_device_with_sas_address(device))
+ 		device->wwid = phys_lun_ext_entry->wwid;
+ 	else
+ 		device->wwid = cpu_to_be64(get_unaligned_be64(&device->page_83_identifier));
+ }
+ 
  static int pqi_update_scsi_devices(struct pqi_ctrl_info *ctrl_info)
  {
  	int i;
@@@ -6901,13 -7415,15 +6914,17 @@@ static void pqi_ctrl_update_feature_fla
  			firmware_feature->enabled;
  		break;
  	case PQI_FIRMWARE_FEATURE_RAID_IU_TIMEOUT:
 -		ctrl_info->raid_iu_timeout_supported = firmware_feature->enabled;
 +		ctrl_info->raid_iu_timeout_supported =
 +			firmware_feature->enabled;
  		break;
  	case PQI_FIRMWARE_FEATURE_TMF_IU_TIMEOUT:
 -		ctrl_info->tmf_iu_timeout_supported = firmware_feature->enabled;
 +		ctrl_info->tmf_iu_timeout_supported =
 +			firmware_feature->enabled;
  		break;
+ 	case PQI_FIRMWARE_FEATURE_UNIQUE_WWID_IN_REPORT_PHYS_LUN:
+ 		ctrl_info->unique_wwid_in_report_phys_lun_supported =
+ 			firmware_feature->enabled;
+ 		break;
  	}
  
  	pqi_firmware_feature_status(ctrl_info, firmware_feature);
@@@ -6948,6 -7509,16 +6965,19 @@@ static struct pqi_firmware_feature pqi_
  		.feature_bit = PQI_FIRMWARE_FEATURE_TMF_IU_TIMEOUT,
  		.feature_status = pqi_ctrl_update_feature_flags,
  	},
++<<<<<<< HEAD
++=======
+ 	{
+ 		.feature_name = "RAID Bypass on encrypted logical volumes on NVMe",
+ 		.feature_bit = PQI_FIRMWARE_FEATURE_RAID_BYPASS_ON_ENCRYPTED_NVME,
+ 		.feature_status = pqi_firmware_feature_status,
+ 	},
+ 	{
+ 		.feature_name = "Unique WWID in Report Physical LUN",
+ 		.feature_bit = PQI_FIRMWARE_FEATURE_UNIQUE_WWID_IN_REPORT_PHYS_LUN,
+ 		.feature_status = pqi_ctrl_update_feature_flags,
+ 	},
++>>>>>>> 7a84a821f194 (scsi: smartpqi: Add support for wwid)
  };
  
  static void pqi_process_firmware_features(
* Unmerged path drivers/scsi/smartpqi/smartpqi.h
* Unmerged path drivers/scsi/smartpqi/smartpqi_init.c
