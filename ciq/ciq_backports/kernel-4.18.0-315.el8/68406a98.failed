mac80211_hwsim: fix overwriting of if_combination

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author James Prestwood <james.prestwood@linux.intel.com>
commit 68406a9807e4db562a157df9a958b3b6e2cedb38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/68406a98.failed

Moved setting if_combination.num_different_channels/radar_detect_widths
into an else after use_chanctx. In the case of use_chanctx, these two
settings were getting overwritten.

	Signed-off-by: James Prestwood <james.prestwood@linux.intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 68406a9807e4db562a157df9a958b3b6e2cedb38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mac80211_hwsim.c
diff --cc drivers/net/wireless/mac80211_hwsim.c
index fc163a346a61,e4db8e2b2b54..000000000000
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@@ -2601,22 -2749,30 +2601,47 @@@ static int mac80211_hwsim_new_radio(str
  		hw->wiphy->max_scan_ssids = 255;
  		hw->wiphy->max_scan_ie_len = IEEE80211_MAX_DATA_LEN;
  		hw->wiphy->max_remain_on_channel_duration = 1000;
 +		hw->wiphy->iface_combinations = &data->if_combination;
 +		if (param->p2p_device)
 +			data->if_combination = hwsim_if_comb_p2p_dev[0];
 +		else
 +			data->if_combination = hwsim_if_comb[0];
 +		hw->wiphy->n_iface_combinations = 1;
 +		/* For channels > 1 DFS is not allowed */
  		data->if_combination.radar_detect_widths = 0;
  		data->if_combination.num_different_channels = data->channels;
++<<<<<<< HEAD
 +	} else if (param->p2p_device) {
 +		hw->wiphy->iface_combinations = hwsim_if_comb_p2p_dev;
 +		hw->wiphy->n_iface_combinations =
 +			ARRAY_SIZE(hwsim_if_comb_p2p_dev);
 +	} else {
 +		hw->wiphy->iface_combinations = hwsim_if_comb;
 +		hw->wiphy->n_iface_combinations = ARRAY_SIZE(hwsim_if_comb);
++=======
+ 	} else {
+ 		data->if_combination.num_different_channels = 1;
+ 		data->if_combination.radar_detect_widths =
+ 					BIT(NL80211_CHAN_WIDTH_20_NOHT) |
+ 					BIT(NL80211_CHAN_WIDTH_20) |
+ 					BIT(NL80211_CHAN_WIDTH_40) |
+ 					BIT(NL80211_CHAN_WIDTH_80) |
+ 					BIT(NL80211_CHAN_WIDTH_160);
+ 	}
+ 
+ 	data->if_combination.n_limits = n_limits;
+ 	data->if_combination.max_interfaces = 2048;
+ 	data->if_combination.limits = data->if_limits;
+ 
+ 	hw->wiphy->iface_combinations = &data->if_combination;
+ 	hw->wiphy->n_iface_combinations = 1;
+ 
+ 	if (param->ciphers) {
+ 		memcpy(data->ciphers, param->ciphers,
+ 		       param->n_ciphers * sizeof(u32));
+ 		hw->wiphy->cipher_suites = data->ciphers;
+ 		hw->wiphy->n_cipher_suites = param->n_ciphers;
++>>>>>>> 68406a9807e4 (mac80211_hwsim: fix overwriting of if_combination)
  	}
  
  	INIT_DELAYED_WORK(&data->roc_start, hw_roc_start);
* Unmerged path drivers/net/wireless/mac80211_hwsim.c
