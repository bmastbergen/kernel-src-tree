brcmfmac: p2p: Fix recently introduced deadlock issue

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Hans de Goede <hdegoede@redhat.com>
commit bd83a2fc05ed323d7ae38443a6d2e253ef1c4237
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/bd83a2fc.failed

Commit a05829a7222e ("cfg80211: avoid holding the RTNL when calling the
driver") replaced the rtnl_lock parameter passed to various brcmf
functions with just lock, because since that commit it is not just
about the rtnl_lock but also about the wiphy_lock .

During this search/replace the "if (!rtnl_locked)" check in brcmfmac/p2p.c
was accidentally replaced with "if (locked)", dropping the inversion of
the check. This causes the code to now call rtnl_lock() while already
holding the lock, causing a deadlock.

Add back the "!" to the if-condition to fix this.

	Cc: Johannes Berg <johannes.berg@intel.com>
Fixes: a05829a7222e ("cfg80211: avoid holding the RTNL when calling the driver")
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
Link: https://lore.kernel.org/r/20210313143635.109154-1-hdegoede@redhat.com
(cherry picked from commit bd83a2fc05ed323d7ae38443a6d2e253ef1c4237)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
diff --cc drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
index ec6fc7a150a6,34cd8a7401fe..000000000000
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
@@@ -2439,11 -2439,15 +2439,15 @@@ void brcmf_p2p_ifp_removed(struct brcmf
  	vif = ifp->vif;
  	cfg = wdev_to_cfg(&vif->wdev);
  	cfg->p2p.bss_idx[P2PAPI_BSSCFG_DEVICE].vif = NULL;
++<<<<<<< HEAD
 +	if (!rtnl_locked)
++=======
+ 	if (!locked) {
++>>>>>>> bd83a2fc05ed (brcmfmac: p2p: Fix recently introduced deadlock issue)
  		rtnl_lock();
 -		wiphy_lock(cfg->wiphy);
 -		cfg80211_unregister_wdev(&vif->wdev);
 -		wiphy_unlock(cfg->wiphy);
 +	cfg80211_unregister_wdev(&vif->wdev);
 +	if (!rtnl_locked)
  		rtnl_unlock();
 -	} else {
 -		cfg80211_unregister_wdev(&vif->wdev);
 -	}
  	brcmf_free_vif(vif);
  }
  
* Unmerged path drivers/net/wireless/broadcom/brcm80211/brcmfmac/p2p.c
