netlink: consistently use NLA_POLICY_MIN_LEN()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
Rebuild_CHGLOG: - netlink/wireless: consistently use NLA_POLICY_MIN_LEN() (Jarod Wilson) [1937053]
Rebuild_FUZZ: 91.09%
commit-author Johannes Berg <johannes.berg@intel.com>
commit bc0435855041d7fff0b83dd992fc4be34aa11afb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/bc043585.failed

Change places that open-code NLA_POLICY_MIN_LEN() to
use the macro instead, giving us flexibility in how we
handle the details of the macro.

	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bc0435855041d7fff0b83dd992fc4be34aa11afb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macsec.c
#	drivers/net/wireguard/netlink.c
diff --cc drivers/net/macsec.c
index 78a3d5a82afb,124045cbcda3..000000000000
--- a/drivers/net/macsec.c
+++ b/drivers/net/macsec.c
@@@ -1602,7 -1611,7 +1602,11 @@@ static const struct nla_policy macsec_g
  static const struct nla_policy macsec_genl_sa_policy[NUM_MACSEC_SA_ATTR] = {
  	[MACSEC_SA_ATTR_AN] = { .type = NLA_U8 },
  	[MACSEC_SA_ATTR_ACTIVE] = { .type = NLA_U8 },
++<<<<<<< HEAD
 +	[MACSEC_SA_ATTR_PN] = { .type = NLA_U32 },
++=======
+ 	[MACSEC_SA_ATTR_PN] = NLA_POLICY_MIN_LEN(4),
++>>>>>>> bc0435855041 (netlink: consistently use NLA_POLICY_MIN_LEN())
  	[MACSEC_SA_ATTR_KEYID] = { .type = NLA_BINARY,
  				   .len = MACSEC_KEYID_LEN, },
  	[MACSEC_SA_ATTR_KEY] = { .type = NLA_BINARY,
* Unmerged path drivers/net/wireguard/netlink.c
* Unmerged path drivers/net/macsec.c
* Unmerged path drivers/net/wireguard/netlink.c
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 953ae3520781..8596196e1b97 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -703,7 +703,7 @@ nl80211_wowlan_tcp_policy[NUM_NL80211_WOWLAN_TCP] = {
 	[NL80211_WOWLAN_TCP_DST_MAC] = NLA_POLICY_EXACT_LEN_WARN(ETH_ALEN),
 	[NL80211_WOWLAN_TCP_SRC_PORT] = { .type = NLA_U16 },
 	[NL80211_WOWLAN_TCP_DST_PORT] = { .type = NLA_U16 },
-	[NL80211_WOWLAN_TCP_DATA_PAYLOAD] = { .type = NLA_MIN_LEN, .len = 1 },
+	[NL80211_WOWLAN_TCP_DATA_PAYLOAD] = NLA_POLICY_MIN_LEN(1),
 	[NL80211_WOWLAN_TCP_DATA_PAYLOAD_SEQ] = {
 		.len = sizeof(struct nl80211_wowlan_tcp_data_seq)
 	},
@@ -711,8 +711,8 @@ nl80211_wowlan_tcp_policy[NUM_NL80211_WOWLAN_TCP] = {
 		.len = sizeof(struct nl80211_wowlan_tcp_data_token)
 	},
 	[NL80211_WOWLAN_TCP_DATA_INTERVAL] = { .type = NLA_U32 },
-	[NL80211_WOWLAN_TCP_WAKE_PAYLOAD] = { .type = NLA_MIN_LEN, .len = 1 },
-	[NL80211_WOWLAN_TCP_WAKE_MASK] = { .type = NLA_MIN_LEN, .len = 1 },
+	[NL80211_WOWLAN_TCP_WAKE_PAYLOAD] = NLA_POLICY_MIN_LEN(1),
+	[NL80211_WOWLAN_TCP_WAKE_MASK] = NLA_POLICY_MIN_LEN(1),
 };
 #endif /* CONFIG_PM */
 
