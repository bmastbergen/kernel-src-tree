KVM: arm64: Unify trap handlers injecting an UNDEF

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Marc Zyngier <maz@kernel.org>
commit 338b17933a6077bb5406b33d8b9fb9616fffc1af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/338b1793.failed

A large number of system register trap handlers only inject an
UNDEF exeption, and yet each class of sysreg seems to provide its
own, identical function.

Let's unify them all, saving us introducing yet another one later.

	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Acked-by: Will Deacon <will@kernel.org>
Link: https://lore.kernel.org/r/20201110141308.451654-3-maz@kernel.org
(cherry picked from commit 338b17933a6077bb5406b33d8b9fb9616fffc1af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/sys_regs.c
diff --cc arch/arm64/kvm/sys_regs.c
index 78a960fd2f3e,b0022f37c8f1..000000000000
--- a/arch/arm64/kvm/sys_regs.c
+++ b/arch/arm64/kvm/sys_regs.c
@@@ -1061,11 -1055,17 +1047,17 @@@ static bool undef_access(struct kvm_vcp
  static unsigned int ptrauth_visibility(const struct kvm_vcpu *vcpu,
  			const struct sys_reg_desc *rd)
  {
 -	return vcpu_has_ptrauth(vcpu) ? 0 : REG_HIDDEN;
 +	return vcpu_has_ptrauth(vcpu) ? 0 : REG_HIDDEN_USER | REG_HIDDEN_GUEST;
  }
  
+ /*
+  * If we land here on a PtrAuth access, that is because we didn't
+  * fixup the access on exit by allowing the PtrAuth sysregs. The only
+  * way this happens is when the guest does not have PtrAuth support
+  * enabled.
+  */
  #define __PTRAUTH_KEY(k)						\
- 	{ SYS_DESC(SYS_## k), trap_ptrauth, reset_unknown, k,		\
+ 	{ SYS_DESC(SYS_## k), undef_access, reset_unknown, k,		\
  	.visibility = ptrauth_visibility}
  
  #define PTRAUTH_KEY(k)							\
@@@ -1525,6 -1533,10 +1517,13 @@@ static const struct sys_reg_desc sys_re
  	{ SYS_DESC(SYS_SCTLR_EL1), access_vm_reg, reset_val, SCTLR_EL1, 0x00C50078 },
  	{ SYS_DESC(SYS_ACTLR_EL1), access_actlr, reset_actlr, ACTLR_EL1 },
  	{ SYS_DESC(SYS_CPACR_EL1), NULL, reset_val, CPACR_EL1, 0 },
++<<<<<<< HEAD
++=======
+ 
+ 	{ SYS_DESC(SYS_RGSR_EL1), undef_access },
+ 	{ SYS_DESC(SYS_GCR_EL1), undef_access },
+ 
++>>>>>>> 338b17933a60 (KVM: arm64: Unify trap handlers injecting an UNDEF)
  	{ SYS_DESC(SYS_ZCR_EL1), NULL, reset_val, ZCR_EL1, 0, .visibility = sve_visibility },
  	{ SYS_DESC(SYS_TTBR0_EL1), access_vm_reg, reset_unknown, TTBR0_EL1 },
  	{ SYS_DESC(SYS_TTBR1_EL1), access_vm_reg, reset_unknown, TTBR1_EL1 },
@@@ -1549,6 -1561,9 +1548,12 @@@
  	{ SYS_DESC(SYS_ERXMISC0_EL1), trap_raz_wi },
  	{ SYS_DESC(SYS_ERXMISC1_EL1), trap_raz_wi },
  
++<<<<<<< HEAD
++=======
+ 	{ SYS_DESC(SYS_TFSR_EL1), undef_access },
+ 	{ SYS_DESC(SYS_TFSRE0_EL1), undef_access },
+ 
++>>>>>>> 338b17933a60 (KVM: arm64: Unify trap handlers injecting an UNDEF)
  	{ SYS_DESC(SYS_FAR_EL1), access_vm_reg, reset_unknown, FAR_EL1 },
  	{ SYS_DESC(SYS_PAR_EL1), NULL, reset_unknown, PAR_EL1 },
  
* Unmerged path arch/arm64/kvm/sys_regs.c
