mt76: mt7615: move testmode data from dev to phy

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Shayne Chen <shayne.chen@mediatek.com>
commit 7517ea014d3c94caa238e140dfb29bde10540a54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/7517ea01.failed

Move per-chip testmode data to mt7615_phy, to properly support
reg_backup and rx status of each band in testmode.

	Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
	Acked-by: Ryder Lee <ryder.lee@mediatek.com>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 7517ea014d3c94caa238e140dfb29bde10540a54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt7615/testmode.c
diff --cc drivers/net/wireless/mediatek/mt76/mt7615/testmode.c
index 8fc97a52411a,b82915445d0d..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7615/testmode.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7615/testmode.c
@@@ -95,14 -95,15 +95,23 @@@ mt7615_tm_set_tx_power(struct mt7615_ph
  }
  
  static void
 -mt7615_tm_reg_backup_restore(struct mt7615_phy *phy)
 +mt7615_tm_reg_backup_restore(struct mt7615_dev *dev)
  {
++<<<<<<< HEAD
 +	u32 *b = dev->test.reg_backup;
++=======
+ 	struct mt7615_dev *dev = phy->dev;
+ 	u32 *b = phy->test.reg_backup;
++>>>>>>> 7517ea014d3c (mt76: mt7615: move testmode data from dev to phy)
  	int n_regs = ARRAY_SIZE(reg_backup_list);
  	int n_rf_regs = ARRAY_SIZE(rf_backup_list);
  	int i;
  
++<<<<<<< HEAD
 +	if (dev->mt76.test.state == MT76_TM_STATE_OFF) {
++=======
+ 	if (phy->mt76->test.state == MT76_TM_STATE_OFF) {
++>>>>>>> 7517ea014d3c (mt76: mt7615: move testmode data from dev to phy)
  		for (i = 0; i < n_regs; i++)
  			mt76_wr(dev, reg_backup_list[i], b[i]);
  
@@@ -325,9 -320,9 +334,13 @@@ mt7615_tm_set_params(struct mt76_dev *m
  }
  
  static int
 -mt7615_tm_dump_stats(struct mt76_phy *mphy, struct sk_buff *msg)
 +mt7615_tm_dump_stats(struct mt76_dev *mdev, struct sk_buff *msg)
  {
++<<<<<<< HEAD
 +	struct mt7615_dev *dev = container_of(mdev, struct mt7615_dev, mt76);
++=======
+ 	struct mt7615_phy *phy = mphy->priv;
++>>>>>>> 7517ea014d3c (mt76: mt7615: move testmode data from dev to phy)
  	void *rx, *rssi;
  	int i;
  
diff --git a/drivers/net/wireless/mediatek/mt76/mt7615/mac.c b/drivers/net/wireless/mediatek/mt76/mt7615/mac.c
index 433d4c941a48..8dabb534b17c 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7615/mac.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7615/mac.c
@@ -186,7 +186,7 @@ mt7615_get_status_freq_info(struct mt7615_dev *dev, struct mt76_phy *mphy,
 	status->freq = ieee80211_channel_to_frequency(chfreq, status->band);
 }
 
-static void mt7615_mac_fill_tm_rx(struct mt7615_dev *dev, __le32 *rxv)
+static void mt7615_mac_fill_tm_rx(struct mt7615_phy *phy, __le32 *rxv)
 {
 #ifdef CONFIG_NL80211_TESTMODE
 	u32 rxv1 = le32_to_cpu(rxv[0]);
@@ -210,13 +210,13 @@ static void mt7615_mac_fill_tm_rx(struct mt7615_dev *dev, __le32 *rxv)
 		foe = (foe * foe_const) >> 15;
 	}
 
-	dev->test.last_freq_offset = foe;
-	dev->test.last_rcpi[0] = FIELD_GET(MT_RXV4_RCPI0, rxv4);
-	dev->test.last_rcpi[1] = FIELD_GET(MT_RXV4_RCPI1, rxv4);
-	dev->test.last_rcpi[2] = FIELD_GET(MT_RXV4_RCPI2, rxv4);
-	dev->test.last_rcpi[3] = FIELD_GET(MT_RXV4_RCPI3, rxv4);
-	dev->test.last_ib_rssi[0] = FIELD_GET(MT_RXV3_IB_RSSI, rxv3);
-	dev->test.last_wb_rssi[0] = FIELD_GET(MT_RXV3_WB_RSSI, rxv3);
+	phy->test.last_freq_offset = foe;
+	phy->test.last_rcpi[0] = FIELD_GET(MT_RXV4_RCPI0, rxv4);
+	phy->test.last_rcpi[1] = FIELD_GET(MT_RXV4_RCPI1, rxv4);
+	phy->test.last_rcpi[2] = FIELD_GET(MT_RXV4_RCPI2, rxv4);
+	phy->test.last_rcpi[3] = FIELD_GET(MT_RXV4_RCPI3, rxv4);
+	phy->test.last_ib_rssi[0] = FIELD_GET(MT_RXV3_IB_RSSI, rxv3);
+	phy->test.last_wb_rssi[0] = FIELD_GET(MT_RXV3_WB_RSSI, rxv3);
 #endif
 }
 
@@ -435,7 +435,7 @@ static int mt7615_mac_fill_rx(struct mt7615_dev *dev, struct sk_buff *skb)
 					     status->chain_signal[i]);
 		}
 
-		mt7615_mac_fill_tm_rx(dev, rxd);
+		mt7615_mac_fill_tm_rx(mphy->priv, rxd);
 
 		rxd += 6;
 		if ((u8 *)rxd - skb->data >= skb->len)
diff --git a/drivers/net/wireless/mediatek/mt76/mt7615/mt7615.h b/drivers/net/wireless/mediatek/mt76/mt7615/mt7615.h
index d697ff2ea56e..979c5c7fe93c 100644
--- a/drivers/net/wireless/mediatek/mt76/mt7615/mt7615.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7615/mt7615.h
@@ -195,6 +195,17 @@ struct mt7615_phy {
 	struct timer_list roc_timer;
 	wait_queue_head_t roc_wait;
 	bool roc_grant;
+
+#ifdef CONFIG_NL80211_TESTMODE
+	struct {
+		u32 *reg_backup;
+
+		s16 last_freq_offset;
+		u8 last_rcpi[4];
+		s8 last_ib_rssi[4];
+		s8 last_wb_rssi[4];
+	} test;
+#endif
 };
 
 #define mt7615_mcu_add_tx_ba(dev, ...)	(dev)->mcu_ops->add_tx_ba((dev), __VA_ARGS__)
@@ -281,17 +292,6 @@ struct mt7615_dev {
 
 	u32 muar_mask;
 
-#ifdef CONFIG_NL80211_TESTMODE
-	struct {
-		u32 *reg_backup;
-
-		s16 last_freq_offset;
-		u8 last_rcpi[4];
-		s8 last_ib_rssi[4];
-		s8 last_wb_rssi[4];
-	} test;
-#endif
-
 	struct {
 		bool enable;
 
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7615/testmode.c
