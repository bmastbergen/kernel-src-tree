arm64: Add TRFCR_ELx definitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Jonathan Zhou <jonathan.zhouwen@huawei.com>
commit 4b6929f50d79cd674e4315a5dad5284b98534942
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/4b6929f5.failed

Add definitions for the Arm v8.4 SelfHosted trace extensions registers.

[ split the register definitions to separate patch
  rename some of the symbols ]

Link: https://lore.kernel.org/r/20210110224850.1880240-28-suzuki.poulose@arm.com
	Cc: Will Deacon <will@kernel.org>
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Signed-off-by: Jonathan Zhou <jonathan.zhouwen@huawei.com>
	Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
	Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
Link: https://lore.kernel.org/r/20210201181351.1475223-30-mathieu.poirier@linaro.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 4b6929f50d79cd674e4315a5dad5284b98534942)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/sysreg.h
diff --cc arch/arm64/include/asm/sysreg.h
index f6e202e1649c,4acff97519b9..000000000000
--- a/arch/arm64/include/asm/sysreg.h
+++ b/arch/arm64/include/asm/sysreg.h
@@@ -173,8 -187,11 +173,9 @@@
  #define SYS_SCTLR_EL1			sys_reg(3, 0, 1, 0, 0)
  #define SYS_ACTLR_EL1			sys_reg(3, 0, 1, 0, 1)
  #define SYS_CPACR_EL1			sys_reg(3, 0, 1, 0, 2)
 -#define SYS_RGSR_EL1			sys_reg(3, 0, 1, 0, 5)
 -#define SYS_GCR_EL1			sys_reg(3, 0, 1, 0, 6)
  
  #define SYS_ZCR_EL1			sys_reg(3, 0, 1, 2, 0)
+ #define SYS_TRFCR_EL1			sys_reg(3, 0, 1, 2, 1)
  
  #define SYS_TTBR0_EL1			sys_reg(3, 0, 2, 0, 0)
  #define SYS_TTBR1_EL1			sys_reg(3, 0, 2, 0, 1)
@@@ -441,7 -470,9 +442,8 @@@
  
  #define SYS_PMCCFILTR_EL0		sys_reg(3, 3, 14, 15, 7)
  
 -#define SYS_SCTLR_EL2			sys_reg(3, 4, 1, 0, 0)
  #define SYS_ZCR_EL2			sys_reg(3, 4, 1, 2, 0)
+ #define SYS_TRFCR_EL2			sys_reg(3, 4, 1, 2, 1)
  #define SYS_DACR32_EL2			sys_reg(3, 4, 3, 0, 0)
  #define SYS_SPSR_EL2			sys_reg(3, 4, 4, 0, 0)
  #define SYS_ELR_EL2			sys_reg(3, 4, 4, 0, 1)
@@@ -721,6 -831,8 +723,11 @@@
  #define ID_AA64MMFR2_CNP_SHIFT		0
  
  /* id_aa64dfr0 */
++<<<<<<< HEAD
++=======
+ #define ID_AA64DFR0_TRACE_FILT_SHIFT	40
+ #define ID_AA64DFR0_DOUBLELOCK_SHIFT	36
++>>>>>>> 4b6929f50d79 (arm64: Add TRFCR_ELx definitions)
  #define ID_AA64DFR0_PMSVER_SHIFT	32
  #define ID_AA64DFR0_CTX_CMPS_SHIFT	28
  #define ID_AA64DFR0_WRPS_SHIFT		20
@@@ -801,14 -976,44 +808,22 @@@
  #define ZCR_ELx_LEN_SIZE	9
  #define ZCR_ELx_LEN_MASK	0x1ff
  
 -#define CPACR_EL1_ZEN_EL1EN	(BIT(16)) /* enable EL1 access */
 -#define CPACR_EL1_ZEN_EL0EN	(BIT(17)) /* enable EL0 access, if EL1EN set */
 +#define CPACR_EL1_ZEN_EL1EN	(1 << 16) /* enable EL1 access */
 +#define CPACR_EL1_ZEN_EL0EN	(1 << 17) /* enable EL0 access, if EL1EN set */
  #define CPACR_EL1_ZEN		(CPACR_EL1_ZEN_EL1EN | CPACR_EL1_ZEN_EL0EN)
  
 -/* TCR EL1 Bit Definitions */
 -#define SYS_TCR_EL1_TCMA1	(BIT(58))
 -#define SYS_TCR_EL1_TCMA0	(BIT(57))
 -
 -/* GCR_EL1 Definitions */
 -#define SYS_GCR_EL1_RRND	(BIT(16))
 -#define SYS_GCR_EL1_EXCL_MASK	0xffffUL
 -
 -/* RGSR_EL1 Definitions */
 -#define SYS_RGSR_EL1_TAG_MASK	0xfUL
 -#define SYS_RGSR_EL1_SEED_SHIFT	8
 -#define SYS_RGSR_EL1_SEED_MASK	0xffffUL
 -
 -/* GMID_EL1 field definitions */
 -#define SYS_GMID_EL1_BS_SHIFT	0
 -#define SYS_GMID_EL1_BS_SIZE	4
 -
 -/* TFSR{,E0}_EL1 bit definitions */
 -#define SYS_TFSR_EL1_TF0_SHIFT	0
 -#define SYS_TFSR_EL1_TF1_SHIFT	1
 -#define SYS_TFSR_EL1_TF0	(UL(1) << SYS_TFSR_EL1_TF0_SHIFT)
 -#define SYS_TFSR_EL1_TF1	(UL(1) << SYS_TFSR_EL1_TF1_SHIFT)
  
  /* Safe value for MPIDR_EL1: Bit31:RES1, Bit30:U:0, Bit24:MT:0 */
 -#define SYS_MPIDR_SAFE_VAL	(BIT(31))
 +#define SYS_MPIDR_SAFE_VAL		(1UL << 31)
  
+ #define TRFCR_ELx_TS_SHIFT		5
+ #define TRFCR_ELx_TS_VIRTUAL		((0x1UL) << TRFCR_ELx_TS_SHIFT)
+ #define TRFCR_ELx_TS_GUEST_PHYSICAL	((0x2UL) << TRFCR_ELx_TS_SHIFT)
+ #define TRFCR_ELx_TS_PHYSICAL		((0x3UL) << TRFCR_ELx_TS_SHIFT)
+ #define TRFCR_EL2_CX			BIT(3)
+ #define TRFCR_ELx_ExTRE			BIT(1)
+ #define TRFCR_ELx_E0TRE			BIT(0)
+ 
  #ifdef __ASSEMBLY__
  
  	.irp	num,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30
* Unmerged path arch/arm64/include/asm/sysreg.h
