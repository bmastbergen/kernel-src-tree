mac80211: properly process TXQ management frames

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit ca47b46294eabc5b9e85bc2ec9de0bf097a39af6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/ca47b462.failed

My previous commit to not apply flow control to management frames
that are going over TXQs (which is currently only the case for
iwlwifi, I think) broke things, with iwlwifi firmware crashing on
certain frames. As it turns out, that was due to the frame being
too short: space for the MIC wasn't added at the end of encrypted
management frames.

Clearly, this is due to using the 'frags' queue - this is meant
only for frames that have already been processed for TX, and the
code in ieee80211_tx_dequeue() just returns them. This caused all
management frames to now not get any TX processing.

To fix this, use IEEE80211_TX_INTCFL_NEED_TXPROCESSING (which is
currently used only in other circumstances) to indicate that the
frames need processing, and clear it immediately after so that,
at least in theory, MMPDUs can be fragmented.

Fixes: 73bc9e0af594 ("mac80211: don't apply flow control on management frames")
	Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
Link: https://lore.kernel.org/r/20210416134702.ef8486a64293.If0a9025b39c71bb91b11dd6ac45547aba682df34@changeid
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit ca47b46294eabc5b9e85bc2ec9de0bf097a39af6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/tx.c
diff --cc net/mac80211/tx.c
index b6a0760286b5,8aeb60182f10..000000000000
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@@ -1397,11 -1383,26 +1397,31 @@@ static void ieee80211_txq_enqueue(struc
  {
  	struct fq *fq = &local->fq;
  	struct fq_tin *tin = &txqi->tin;
 -	u32 flow_idx = fq_flow_idx(fq, skb);
  
  	ieee80211_set_skb_enqueue_time(skb);
++<<<<<<< HEAD
 +	fq_tin_enqueue(fq, tin, skb,
 +		       fq_skb_free_func,
 +		       fq_flow_get_default_func);
++=======
+ 
+ 	spin_lock_bh(&fq->lock);
+ 	/*
+ 	 * For management frames, don't really apply codel etc.,
+ 	 * we don't want to apply any shaping or anything we just
+ 	 * want to simplify the driver API by having them on the
+ 	 * txqi.
+ 	 */
+ 	if (unlikely(txqi->txq.tid == IEEE80211_NUM_TIDS)) {
+ 		IEEE80211_SKB_CB(skb)->control.flags |=
+ 			IEEE80211_TX_INTCFL_NEED_TXPROCESSING;
+ 		__skb_queue_tail(&txqi->frags, skb);
+ 	} else {
+ 		fq_tin_enqueue(fq, tin, flow_idx, skb,
+ 			       fq_skb_free_func);
+ 	}
+ 	spin_unlock_bh(&fq->lock);
++>>>>>>> ca47b46294ea (mac80211: properly process TXQ management frames)
  }
  
  static bool fq_vlan_filter_func(struct fq *fq, struct fq_tin *tin,
* Unmerged path net/mac80211/tx.c
