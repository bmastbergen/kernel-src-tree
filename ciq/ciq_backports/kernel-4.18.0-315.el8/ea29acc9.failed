mt76: mt7921: add dumping Tx power table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Sean Wang <sean.wang@mediatek.com>
commit ea29acc97c555bc4c295cd0ad78083a33b0272a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/ea29acc9.failed

Dump the tx power table saved in offload firmware.

	Signed-off-by: Sean Wang <sean.wang@mediatek.com>
	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit ea29acc97c555bc4c295cd0ad78083a33b0272a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
#	drivers/net/wireless/mediatek/mt76/mt7921/debugfs.c
#	drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
#	drivers/net/wireless/mediatek/mt76/mt7921/mcu.h
#	drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/debugfs.c
index 440e6e4919d7,5207ad3157e8..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/debugfs.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/debugfs.c
@@@ -158,6 -146,150 +158,153 @@@ mt7921_queues_read(struct seq_file *s, 
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static void
+ mt7921_seq_puts_array(struct seq_file *file, const char *str,
+ 		      s8 *val, int len)
+ {
+ 	int i;
+ 
+ 	seq_printf(file, "%-16s:", str);
+ 	for (i = 0; i < len; i++)
+ 		if (val[i] == 127)
+ 			seq_printf(file, " %6s", "N.A");
+ 		else
+ 			seq_printf(file, " %6d", val[i]);
+ 	seq_puts(file, "\n");
+ }
+ 
+ #define mt7921_print_txpwr_entry(prefix, rate)				\
+ ({									\
+ 	mt7921_seq_puts_array(s, #prefix " (user)",			\
+ 			      txpwr.data[TXPWR_USER].rate,		\
+ 			      ARRAY_SIZE(txpwr.data[TXPWR_USER].rate)); \
+ 	mt7921_seq_puts_array(s, #prefix " (eeprom)",			\
+ 			      txpwr.data[TXPWR_EEPROM].rate,		\
+ 			      ARRAY_SIZE(txpwr.data[TXPWR_EEPROM].rate)); \
+ 	mt7921_seq_puts_array(s, #prefix " (tmac)",			\
+ 			      txpwr.data[TXPWR_MAC].rate,		\
+ 			      ARRAY_SIZE(txpwr.data[TXPWR_MAC].rate));	\
+ })
+ 
+ static int
+ mt7921_txpwr(struct seq_file *s, void *data)
+ {
+ 	struct mt7921_dev *dev = dev_get_drvdata(s->private);
+ 	struct mt7921_txpwr txpwr;
+ 	int ret;
+ 
+ 	ret = mt7921_get_txpwr_info(dev, &txpwr);
+ 	if (ret)
+ 		return ret;
+ 
+ 	seq_printf(s, "Tx power table (channel %d)\n", txpwr.ch);
+ 	seq_printf(s, "%-16s  %6s %6s %6s %6s\n",
+ 		   " ", "1m", "2m", "5m", "11m");
+ 	mt7921_print_txpwr_entry(CCK, cck);
+ 
+ 	seq_printf(s, "%-16s  %6s %6s %6s %6s %6s %6s %6s %6s\n",
+ 		   " ", "6m", "9m", "12m", "18m", "24m", "36m",
+ 		   "48m", "54m");
+ 	mt7921_print_txpwr_entry(OFDM, ofdm);
+ 
+ 	seq_printf(s, "%-16s  %6s %6s %6s %6s %6s %6s %6s %6s\n",
+ 		   " ", "mcs0", "mcs1", "mcs2", "mcs3", "mcs4", "mcs5",
+ 		   "mcs6", "mcs7");
+ 	mt7921_print_txpwr_entry(HT20, ht20);
+ 
+ 	seq_printf(s, "%-16s  %6s %6s %6s %6s %6s %6s %6s %6s %6s\n",
+ 		   " ", "mcs0", "mcs1", "mcs2", "mcs3", "mcs4", "mcs5",
+ 		   "mcs6", "mcs7", "mcs32");
+ 	mt7921_print_txpwr_entry(HT40, ht40);
+ 
+ 	seq_printf(s, "%-16s  %6s %6s %6s %6s %6s %6s %6s %6s %6s %6s %6s %6s\n",
+ 		   " ", "mcs0", "mcs1", "mcs2", "mcs3", "mcs4", "mcs5",
+ 		   "mcs6", "mcs7", "mcs8", "mcs9", "mcs10", "mcs11");
+ 	mt7921_print_txpwr_entry(VHT20, vht20);
+ 	mt7921_print_txpwr_entry(VHT40, vht40);
+ 	mt7921_print_txpwr_entry(VHT80, vht80);
+ 	mt7921_print_txpwr_entry(VHT160, vht160);
+ 	mt7921_print_txpwr_entry(HE26, he26);
+ 	mt7921_print_txpwr_entry(HE52, he52);
+ 	mt7921_print_txpwr_entry(HE106, he106);
+ 	mt7921_print_txpwr_entry(HE242, he242);
+ 	mt7921_print_txpwr_entry(HE484, he484);
+ 	mt7921_print_txpwr_entry(HE996, he996);
+ 	mt7921_print_txpwr_entry(HE996x2, he996x2);
+ 
+ 	return 0;
+ }
+ 
+ static int
+ mt7921_pm_set(void *data, u64 val)
+ {
+ 	struct mt7921_dev *dev = data;
+ 	struct mt76_phy *mphy = dev->phy.mt76;
+ 
+ 	mt7921_mutex_acquire(dev);
+ 
+ 	dev->pm.enable = val;
+ 
+ 	ieee80211_iterate_active_interfaces(mphy->hw,
+ 					    IEEE80211_IFACE_ITER_RESUME_ALL,
+ 					    mt7921_pm_interface_iter, mphy->priv);
+ 	mt7921_mutex_release(dev);
+ 
+ 	return 0;
+ }
+ 
+ static int
+ mt7921_pm_get(void *data, u64 *val)
+ {
+ 	struct mt7921_dev *dev = data;
+ 
+ 	*val = dev->pm.enable;
+ 
+ 	return 0;
+ }
+ 
+ DEFINE_DEBUGFS_ATTRIBUTE(fops_pm, mt7921_pm_get, mt7921_pm_set, "%lld\n");
+ 
+ static int
+ mt7921_pm_idle_timeout_set(void *data, u64 val)
+ {
+ 	struct mt7921_dev *dev = data;
+ 
+ 	dev->pm.idle_timeout = msecs_to_jiffies(val);
+ 
+ 	return 0;
+ }
+ 
+ static int
+ mt7921_pm_idle_timeout_get(void *data, u64 *val)
+ {
+ 	struct mt7921_dev *dev = data;
+ 
+ 	*val = jiffies_to_msecs(dev->pm.idle_timeout);
+ 
+ 	return 0;
+ }
+ 
+ DEFINE_DEBUGFS_ATTRIBUTE(fops_pm_idle_timeout, mt7921_pm_idle_timeout_get,
+ 			 mt7921_pm_idle_timeout_set, "%lld\n");
+ 
+ static int mt7921_config(void *data, u64 val)
+ {
+ 	struct mt7921_dev *dev = data;
+ 	int ret;
+ 
+ 	mt7921_mutex_acquire(dev);
+ 	ret = mt76_connac_mcu_chip_config(&dev->mt76);
+ 	mt7921_mutex_release(dev);
+ 
+ 	return ret;
+ }
+ 
+ DEFINE_DEBUGFS_ATTRIBUTE(fops_config, NULL, mt7921_config, "%lld\n");
+ 
++>>>>>>> ea29acc97c55 (mt76: mt7921: add dumping Tx power table)
  int mt7921_init_debugfs(struct mt7921_dev *dev)
  {
  	struct dentry *dir;
@@@ -170,8 -302,14 +317,14 @@@
  				    mt7921_queues_read);
  	debugfs_create_devm_seqfile(dev->mt76.dev, "acq", dir,
  				    mt7921_queues_acq);
++<<<<<<< HEAD
 +	debugfs_create_file("tx_stats", 0400, dir, dev, &fops_tx_stats);
++=======
+ 	debugfs_create_devm_seqfile(dev->mt76.dev, "txpower_sku", dir,
+ 				    mt7921_txpwr);
+ 	debugfs_create_file("tx_stats", 0400, dir, dev, &mt7921_tx_stats_fops);
++>>>>>>> ea29acc97c55 (mt76: mt7921: add dumping Tx power table)
  	debugfs_create_file("fw_debug", 0600, dir, dev, &fops_fw_debug);
 -	debugfs_create_file("runtime-pm", 0600, dir, dev, &fops_pm);
 -	debugfs_create_file("idle-timeout", 0600, dir, dev,
 -			    &fops_pm_idle_timeout);
 -	debugfs_create_file("chip_config", 0600, dir, dev, &fops_config);
  
  	return 0;
  }
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
index 1e025a580444,1f231088f287..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
@@@ -2931,4 -1382,26 +2931,30 @@@ int mt7921_mcu_update_gtk_rekey(struct 
  	return mt76_mcu_skb_send_msg(&dev->mt76, skb, MCU_UNI_CMD_OFFLOAD,
  				     true);
  }
++<<<<<<< HEAD
 +#endif /* CONFIG_PM */
++=======
+ 
+ int mt7921_get_txpwr_info(struct mt7921_dev *dev, struct mt7921_txpwr *txpwr)
+ {
+ 	struct mt7921_txpwr_event *event;
+ 	struct mt7921_txpwr_req req = {
+ 		.dbdc_idx = 0,
+ 	};
+ 	struct sk_buff *skb;
+ 	int ret;
+ 
+ 	ret = mt76_mcu_send_and_get_msg(&dev->mt76, MCU_CMD_GET_TXPWR,
+ 					&req, sizeof(req), true, &skb);
+ 	if (ret)
+ 		return ret;
+ 
+ 	event = (struct mt7921_txpwr_event *)skb->data;
+ 	WARN_ON(skb->len != le16_to_cpu(event->len));
+ 	memcpy(txpwr, &event->txpwr, sizeof(event->txpwr));
+ 
+ 	dev_kfree_skb(skb);
+ 
+ 	return 0;
+ }
++>>>>>>> ea29acc97c55 (mt76: mt7921: add dumping Tx power table)
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/mcu.h
index 6b3877959bd3,49823d0a3d0a..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/mcu.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/mcu.h
@@@ -83,6 -86,8 +83,11 @@@ enum 
  	MCU_EVENT_CH_PRIVILEGE = 0x18,
  	MCU_EVENT_SCHED_SCAN_DONE = 0x23,
  	MCU_EVENT_DBG_MSG = 0x27,
++<<<<<<< HEAD
++=======
+ 	MCU_EVENT_TXPWR = 0xd0,
+ 	MCU_EVENT_COREDUMP = 0xf0,
++>>>>>>> ea29acc97c55 (mt76: mt7921: add dumping Tx power table)
  };
  
  /* ext event table */
diff --cc drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
index 2a7af97420c3,5cc01efee989..000000000000
--- a/drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
+++ b/drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
@@@ -164,22 -167,41 +164,52 @@@ struct mt7921_dev 
  	struct idr token;
  
  	u8 fw_debug;
 +};
  
 -	struct mt76_connac_pm pm;
 -	struct mt76_connac_coredump coredump;
 +enum {
 +	HW_BSSID_0 = 0x0,
 +	HW_BSSID_1,
 +	HW_BSSID_2,
 +	HW_BSSID_3,
 +	HW_BSSID_MAX = HW_BSSID_3,
 +	EXT_BSSID_START = 0x10,
 +	EXT_BSSID_1,
 +	EXT_BSSID_15 = 0x1f,
 +	EXT_BSSID_MAX = EXT_BSSID_15,
 +	REPEATER_BSSID_START = 0x20,
 +	REPEATER_BSSID_MAX = 0x3f,
  };
  
+ enum {
+ 	TXPWR_USER,
+ 	TXPWR_EEPROM,
+ 	TXPWR_MAC,
+ 	TXPWR_MAX_NUM,
+ };
+ 
+ struct mt7921_txpwr {
+ 	u8 ch;
+ 	u8 rsv[3];
+ 	struct {
+ 		u8 ch;
+ 		u8 cck[4];
+ 		u8 ofdm[8];
+ 		u8 ht20[8];
+ 		u8 ht40[9];
+ 		u8 vht20[12];
+ 		u8 vht40[12];
+ 		u8 vht80[12];
+ 		u8 vht160[12];
+ 		u8 he26[12];
+ 		u8 he52[12];
+ 		u8 he106[12];
+ 		u8 he242[12];
+ 		u8 he484[12];
+ 		u8 he996[12];
+ 		u8 he996x2[12];
+ 	} data[TXPWR_MAX_NUM];
+ };
+ 
  enum {
  	MT_LMAC_AC00,
  	MT_LMAC_AC01,
@@@ -370,4 -368,19 +400,22 @@@ int mt7921_mcu_update_gtk_rekey(struct 
  int mt7921_mcu_update_arp_filter(struct ieee80211_hw *hw,
  				 struct ieee80211_vif *vif,
  				 struct ieee80211_bss_conf *info);
++<<<<<<< HEAD
++=======
+ int mt7921_mcu_drv_pmctrl(struct mt7921_dev *dev);
+ int mt7921_mcu_fw_pmctrl(struct mt7921_dev *dev);
+ void mt7921_pm_wake_work(struct work_struct *work);
+ void mt7921_pm_power_save_work(struct work_struct *work);
+ bool mt7921_wait_for_mcu_init(struct mt7921_dev *dev);
+ int mt7921_mac_set_beacon_filter(struct mt7921_phy *phy,
+ 				 struct ieee80211_vif *vif,
+ 				 bool enable);
+ void mt7921_pm_interface_iter(void *priv, u8 *mac, struct ieee80211_vif *vif);
+ void mt7921_coredump_work(struct work_struct *work);
+ int mt7921_mcu_update_arp_filter(struct ieee80211_hw *hw,
+ 				 struct ieee80211_vif *vif,
+ 				 struct ieee80211_bss_conf *info);
+ int mt7921_wfsys_reset(struct mt7921_dev *dev);
+ int mt7921_get_txpwr_info(struct mt7921_dev *dev, struct mt7921_txpwr *txpwr);
++>>>>>>> ea29acc97c55 (mt76: mt7921: add dumping Tx power table)
  #endif
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt76_connac_mcu.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/debugfs.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/mcu.c
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/mcu.h
* Unmerged path drivers/net/wireless/mediatek/mt76/mt7921/mt7921.h
