bpf: Fix unsigned 'datasec_id' compared with zero in check_pseudo_btf_id

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Kaixu Xia <kaixuxia@tencent.com>
commit f16e631333a8f12ae8128826e695db4b2a528407
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/f16e6313.failed

The unsigned variable datasec_id is assigned a return value from the call
to check_pseudo_btf_id(), which may return negative error code.

This fixes the following coccicheck warning:

  ./kernel/bpf/verifier.c:9616:5-15: WARNING: Unsigned expression compared with zero: datasec_id > 0

Fixes: eaa6bcb71ef6 ("bpf: Introduce bpf_per_cpu_ptr()")
	Reported-by: Tosk Robot <tencent_os_robot@tencent.com>
	Signed-off-by: Kaixu Xia <kaixuxia@tencent.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Andrii Nakryiko <andrii@kernel.org>
	Acked-by: John Fastabend <john.fastabend@gmail.com>
	Cc: Hao Luo <haoluo@google.com>
Link: https://lore.kernel.org/bpf/1605071026-25906-1-git-send-email-kaixuxia@tencent.com
(cherry picked from commit f16e631333a8f12ae8128826e695db4b2a528407)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/bpf/verifier.c
diff --cc kernel/bpf/verifier.c
index 919da4e6cd5d,6204ec705d80..000000000000
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@@ -9419,10 -9572,15 +9419,20 @@@ static int check_pseudo_btf_id(struct b
  			       struct bpf_insn *insn,
  			       struct bpf_insn_aux_data *aux)
  {
++<<<<<<< HEAD
 +	u32 type, id = insn->imm;
 +	const struct btf_type *t;
 +	const char *sym_name;
++=======
+ 	const struct btf_var_secinfo *vsi;
+ 	const struct btf_type *datasec;
+ 	const struct btf_type *t;
+ 	const char *sym_name;
+ 	bool percpu = false;
+ 	u32 type, id = insn->imm;
+ 	s32 datasec_id;
++>>>>>>> f16e631333a8 (bpf: Fix unsigned 'datasec_id' compared with zero in check_pseudo_btf_id)
  	u64 addr;
 -	int i;
  
  	if (!btf_vmlinux) {
  		verbose(env, "kernel is missing BTF, make sure CONFIG_DEBUG_INFO_BTF=y is specified in Kconfig.\n");
* Unmerged path kernel/bpf/verifier.c
