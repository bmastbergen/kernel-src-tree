PCI/PM: Revert "PCI/PM: Apply D2 delay as milliseconds, not microseconds"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 638c133e5f52a3793cb5494897df008f5cef0ddd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/638c133e.failed

This reverts commit 7e24bc347e57992d532bc2ed700209b0fc0a4bf5.

7e24bc347e57 was based on PCIe r5.0, sec 5.9, which claims we need a 200 ms
delay when transitioning to or from D2.  However, sec 5.3.1.3 states the
delay as 200 μs (microseconds), as does the table in PCIe r4.0, sec 5.9.1.

This looks like a typo in the r5.0 spec, so revert back to a 200 μs delay
instead of a 200 ms delay.

Fixes: 7e24bc347e57 ("PCI/PM: Apply D2 delay as milliseconds, not microseconds")
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 638c133e5f52a3793cb5494897df008f5cef0ddd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci.h
diff --cc drivers/pci/pci.h
index 54c57859b652,f86cae9aa1f4..000000000000
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@@ -43,9 -43,9 +43,15 @@@ int pci_probe_reset_function(struct pci
  int pci_bridge_secondary_bus_reset(struct pci_dev *dev);
  int pci_bus_error_reset(struct pci_dev *dev);
  
++<<<<<<< HEAD
 +#define PCI_PM_D2_DELAY         200
 +#define PCI_PM_D3_WAIT          10
 +#define PCI_PM_D3COLD_WAIT      100
++=======
+ #define PCI_PM_D2_DELAY         200	/* usec; see PCIe r4.0, sec 5.9.1 */
+ #define PCI_PM_D3HOT_WAIT       10	/* msec */
+ #define PCI_PM_D3COLD_WAIT      100	/* msec */
++>>>>>>> 638c133e5f52 (PCI/PM: Revert "PCI/PM: Apply D2 delay as milliseconds, not microseconds")
  
  /**
   * struct pci_platform_pm_ops - Firmware PM callbacks
diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 8ac63d3c142e..f974ce0321b4 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -1080,7 +1080,7 @@ static int pci_raw_set_power_state(struct pci_dev *dev, pci_power_t state)
 	if (state == PCI_D3hot || dev->current_state == PCI_D3hot)
 		pci_dev_d3_sleep(dev);
 	else if (state == PCI_D2 || dev->current_state == PCI_D2)
-		msleep(PCI_PM_D2_DELAY);
+		udelay(PCI_PM_D2_DELAY);
 
 	pci_read_config_word(dev, dev->pm_cap + PCI_PM_CTRL, &pmcsr);
 	dev->current_state = (pmcsr & PCI_PM_CTRL_STATE_MASK);
* Unmerged path drivers/pci/pci.h
