scsi: smartpqi: Add host level stream detection enable

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Don Brace <don.brace@microchip.com>
commit 5be746d7d74b0f40128ac6f1d1ba30bc05770beb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/5be746d7.failed

Allow R5/R6 stream detection to be disabled/enabled using sysfs entry
enable_stream_detection.

Example usage:

lsscsi
[2:2:0:0]    storage Adaptec  3258P-32i /e     0010
 ^
 |
 +---- NOTE: here host is host2

find /sys -name \*enable_stream\*
/sys/devices/pci0000:36/0000:36:00.0/0000:37:00.0/0000:38:00.0/0000:39:00.0/host2/scsi_host/host2/enable_stream_detection
/sys/devices/pci0000:5b/0000:5b:00.0/0000:5c:00.0/host3/scsi_host/host3/enable_stream_detection

Current stream detection:
cat /sys/devices/pci0000:36/0000:36:00.0/0000:37:00.0/0000:38:00.0/0000:39:00.0/host2/scsi_host/host2/enable_stream_detection
1

Turn off stream detection:
echo 0 > /sys/devices/pci0000:36/0000:36:00.0/0000:37:00.0/0000:38:00.0/0000:39:00.0/host2/scsi_host/host2/enable_stream_detection

Turn on stream detection:
echo 1 > /sys/devices/pci0000:36/0000:36:00.0/0000:37:00.0/0000:38:00.0/0000:39:00.0/host2/scsi_host/host2/enable_stream_detection

Link: https://lore.kernel.org/r/161549376281.25025.1132304698441513738.stgit@brunhilda
	Reviewed-by: Scott Benesh <scott.benesh@microchip.com>
	Reviewed-by: Mike McGowen <mike.mcgowen@microchip.com>
	Reviewed-by: Scott Teel <scott.teel@microchip.com>
	Reviewed-by: Kevin Barnett <kevin.barnett@microchip.com>
	Reviewed-by: Martin Wilck <mwilck@suse.com>
	Signed-off-by: Don Brace <don.brace@microchip.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 5be746d7d74b0f40128ac6f1d1ba30bc05770beb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/smartpqi/smartpqi_init.c
diff --cc drivers/scsi/smartpqi/smartpqi_init.c
index 590c50864b81,dce832f2614a..000000000000
--- a/drivers/scsi/smartpqi/smartpqi_init.c
+++ b/drivers/scsi/smartpqi/smartpqi_init.c
@@@ -6245,14 -6696,103 +6245,111 @@@ static ssize_t pqi_lockup_action_store(
  	return -EINVAL;
  }
  
++<<<<<<< HEAD
++=======
+ static ssize_t pqi_host_enable_stream_detection_show(struct device *dev,
+ 	struct device_attribute *attr, char *buffer)
+ {
+ 	struct Scsi_Host *shost = class_to_shost(dev);
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 
+ 	return scnprintf(buffer, 10, "%x\n",
+ 			ctrl_info->enable_stream_detection);
+ }
+ 
+ static ssize_t pqi_host_enable_stream_detection_store(struct device *dev,
+ 	struct device_attribute *attr, const char *buffer, size_t count)
+ {
+ 	struct Scsi_Host *shost = class_to_shost(dev);
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 	u8 set_stream_detection = 0;
+ 
+ 	if (kstrtou8(buffer, 0, &set_stream_detection))
+ 		return -EINVAL;
+ 
+ 	if (set_stream_detection > 0)
+ 		set_stream_detection = 1;
+ 
+ 	ctrl_info->enable_stream_detection = set_stream_detection;
+ 
+ 	return count;
+ }
+ 
+ static ssize_t pqi_host_enable_r5_writes_show(struct device *dev,
+ 	struct device_attribute *attr, char *buffer)
+ {
+ 	struct Scsi_Host *shost = class_to_shost(dev);
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 
+ 	return scnprintf(buffer, 10, "%x\n", ctrl_info->enable_r5_writes);
+ }
+ 
+ static ssize_t pqi_host_enable_r5_writes_store(struct device *dev,
+ 	struct device_attribute *attr, const char *buffer, size_t count)
+ {
+ 	struct Scsi_Host *shost = class_to_shost(dev);
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 	u8 set_r5_writes = 0;
+ 
+ 	if (kstrtou8(buffer, 0, &set_r5_writes))
+ 		return -EINVAL;
+ 
+ 	if (set_r5_writes > 0)
+ 		set_r5_writes = 1;
+ 
+ 	ctrl_info->enable_r5_writes = set_r5_writes;
+ 
+ 	return count;
+ }
+ 
+ static ssize_t pqi_host_enable_r6_writes_show(struct device *dev,
+ 	struct device_attribute *attr, char *buffer)
+ {
+ 	struct Scsi_Host *shost = class_to_shost(dev);
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 
+ 	return scnprintf(buffer, 10, "%x\n", ctrl_info->enable_r6_writes);
+ }
+ 
+ static ssize_t pqi_host_enable_r6_writes_store(struct device *dev,
+ 	struct device_attribute *attr, const char *buffer, size_t count)
+ {
+ 	struct Scsi_Host *shost = class_to_shost(dev);
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 	u8 set_r6_writes = 0;
+ 
+ 	if (kstrtou8(buffer, 0, &set_r6_writes))
+ 		return -EINVAL;
+ 
+ 	if (set_r6_writes > 0)
+ 		set_r6_writes = 1;
+ 
+ 	ctrl_info->enable_r6_writes = set_r6_writes;
+ 
+ 	return count;
+ }
+ 
++>>>>>>> 5be746d7d74b (scsi: smartpqi: Add host level stream detection enable)
  static DEVICE_ATTR(driver_version, 0444, pqi_driver_version_show, NULL);
  static DEVICE_ATTR(firmware_version, 0444, pqi_firmware_version_show, NULL);
  static DEVICE_ATTR(model, 0444, pqi_model_show, NULL);
  static DEVICE_ATTR(serial_number, 0444, pqi_serial_number_show, NULL);
  static DEVICE_ATTR(vendor, 0444, pqi_vendor_show, NULL);
  static DEVICE_ATTR(rescan, 0200, NULL, pqi_host_rescan_store);
++<<<<<<< HEAD
 +static DEVICE_ATTR(lockup_action, 0644,
 +	pqi_lockup_action_show, pqi_lockup_action_store);
++=======
+ static DEVICE_ATTR(lockup_action, 0644, pqi_lockup_action_show,
+ 	pqi_lockup_action_store);
+ static DEVICE_ATTR(enable_stream_detection, 0644,
+ 	pqi_host_enable_stream_detection_show,
+ 	pqi_host_enable_stream_detection_store);
+ static DEVICE_ATTR(enable_r5_writes, 0644,
+ 	pqi_host_enable_r5_writes_show, pqi_host_enable_r5_writes_store);
+ static DEVICE_ATTR(enable_r6_writes, 0644,
+ 	pqi_host_enable_r6_writes_show, pqi_host_enable_r6_writes_store);
++>>>>>>> 5be746d7d74b (scsi: smartpqi: Add host level stream detection enable)
  
  static struct device_attribute *pqi_shost_attrs[] = {
  	&dev_attr_driver_version,
@@@ -6262,6 -6802,9 +6359,12 @@@
  	&dev_attr_vendor,
  	&dev_attr_rescan,
  	&dev_attr_lockup_action,
++<<<<<<< HEAD
++=======
+ 	&dev_attr_enable_stream_detection,
+ 	&dev_attr_enable_r5_writes,
+ 	&dev_attr_enable_r6_writes,
++>>>>>>> 5be746d7d74b (scsi: smartpqi: Add host level stream detection enable)
  	NULL
  };
  
* Unmerged path drivers/scsi/smartpqi/smartpqi_init.c
