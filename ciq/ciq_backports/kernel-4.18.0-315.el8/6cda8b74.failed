tcp: move app_limited init to tcp_disconnect()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 6cda8b7493ac323c3b58a9a897abc0e6432d5a1d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/6cda8b74.failed

If we make sure all listeners have app_limited set to ~0U,
then a clone will also inherit proper initial value.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6cda8b7493ac323c3b58a9a897abc0e6432d5a1d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp_minisocks.c
diff --cc net/ipv4/tcp_minisocks.c
index 079dc195a8be,13f3c6444efa..000000000000
--- a/net/ipv4/tcp_minisocks.c
+++ b/net/ipv4/tcp_minisocks.c
@@@ -487,19 -486,8 +487,22 @@@ struct sock *tcp_create_openreq_child(c
  	newsk->sk_txhash = treq->txhash;
  	newtp->total_retrans = req->num_retrans;
  
++<<<<<<< HEAD
 +	/* So many TCP implementations out there (incorrectly) count the
 +	 * initial SYN frame in their delayed-ACK and congestion control
 +	 * algorithms that we must have the following bandaid to talk
 +	 * efficiently to them.  -DaveM
 +	 */
 +	newtp->snd_cwnd = TCP_INIT_CWND;
 +	newtp->snd_cwnd_cnt = 0;
 +
 +	/* There's a bubble in the pipe until at least the first ACK. */
 +	newtp->app_limited = ~0U;
 +
++=======
++>>>>>>> 6cda8b7493ac (tcp: move app_limited init to tcp_disconnect())
  	tcp_init_xmit_timers(newsk);
 -	newtp->write_seq = newtp->pushed_seq = treq->snt_isn + 1;
 +	WRITE_ONCE(newtp->write_seq, newtp->pushed_seq = treq->snt_isn + 1);
  
  	newtp->rx_opt.saw_tstamp = 0;
  
diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index 09484262d3e9..486a1dd8cd43 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -2663,6 +2663,9 @@ int tcp_disconnect(struct sock *sk, int flags)
 	tp->sacked_out = 0;
 	tp->tlp_high_seq = 0;
 	tp->last_oow_ack_time = 0;
+	/* There's a bubble in the pipe until at least the first ACK. */
+	tp->app_limited = ~0U;
+
 
 	/* Clean up fastopen related fields */
 	tcp_free_fastopen_req(tp);
* Unmerged path net/ipv4/tcp_minisocks.c
