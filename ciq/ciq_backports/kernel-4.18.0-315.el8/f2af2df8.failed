mac80211: calculate hash for fq without holding fq->lock in itxq enqueue

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Felix Fietkau <nbd@nbd.name>
commit f2af2df800d3648b1d68e02d5b8a5d77cfee8970
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/f2af2df8.failed

Reduces lock contention on enqueue/dequeue of iTXQ packets

	Signed-off-by: Felix Fietkau <nbd@nbd.name>
	Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit f2af2df800d3648b1d68e02d5b8a5d77cfee8970)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/fq_impl.h
#	net/mac80211/tx.c
diff --cc include/net/fq_impl.h
index 89a012905ef0,2caa86660ab0..000000000000
--- a/include/net/fq_impl.h
+++ b/include/net/fq_impl.h
@@@ -116,12 -123,7 +123,12 @@@ static struct fq_flow *fq_flow_classify
  
  	lockdep_assert_held(&fq->lock);
  
++<<<<<<< HEAD
 +	hash = skb_get_hash_perturb(skb, &fq->perturbation);
 +	idx = reciprocal_scale(hash, fq->flows_cnt);
++=======
++>>>>>>> f2af2df800d3 (mac80211: calculate hash for fq without holding fq->lock in itxq enqueue)
  	flow = &fq->flows[idx];
- 
  	if (flow->tin && flow->tin != tin) {
  		flow = get_default_func(fq, tin, idx, skb);
  		tin->collisions++;
diff --cc net/mac80211/tx.c
index a1584634b4c4,2c0fec888021..000000000000
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@@ -3253,7 -3222,7 +3254,11 @@@ static bool ieee80211_amsdu_aggregate(s
  	u8 max_subframes = sta->sta.max_amsdu_subframes;
  	int max_frags = local->hw.max_tx_fragments;
  	int max_amsdu_len = sta->sta.max_amsdu_len;
++<<<<<<< HEAD
 +	int orig_truesize;
++=======
+ 	u32 flow_idx;
++>>>>>>> f2af2df800d3 (mac80211: calculate hash for fq without holding fq->lock in itxq enqueue)
  	__be16 len;
  	void *data;
  	bool ret = false;
* Unmerged path include/net/fq_impl.h
* Unmerged path net/mac80211/tx.c
