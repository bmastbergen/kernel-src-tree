PCI/ERR: Rename reset_link() to reset_subordinates()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-315.el8
commit-author Sean V Kelley <sean.v.kelley@intel.com>
commit 8f1bbfbc3596d401b60d1562b27ec28c2724f60d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-315.el8/8f1bbfbc.failed

reset_link() appears to be misnamed.  The point is to reset any devices
below a given bridge, so rename it to reset_subordinates() to make it clear
that we are passing a bridge with the intent to reset the devices below it.

Link: https://lore.kernel.org/r/20201121001036.8560-5-sean.v.kelley@intel.com
	Tested-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> # non-native/no RCEC
	Signed-off-by: Sean V Kelley <sean.v.kelley@intel.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
	Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
(cherry picked from commit 8f1bbfbc3596d401b60d1562b27ec28c2724f60d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci.h
#	drivers/pci/pcie/err.c
diff --cc drivers/pci/pci.h
index 664057bd4060,3c4570a3058f..000000000000
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@@ -581,8 -572,8 +581,13 @@@ static inline int pci_dev_specific_disa
  
  /* PCI error reporting and recovery */
  pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
++<<<<<<< HEAD
 +			enum pci_channel_state state,
 +			pci_ers_result_t (*reset_link)(struct pci_dev *pdev));
++=======
+ 		pci_channel_state_t state,
+ 		pci_ers_result_t (*reset_subordinates)(struct pci_dev *pdev));
++>>>>>>> 8f1bbfbc3596 (PCI/ERR: Rename reset_link() to reset_subordinates())
  
  bool pcie_wait_for_link(struct pci_dev *pdev, bool active);
  #ifdef CONFIG_PCIEASPM
diff --cc drivers/pci/pcie/err.c
index f0cfd3df376b,db149c6ce4fb..000000000000
--- a/drivers/pci/pcie/err.c
+++ b/drivers/pci/pcie/err.c
@@@ -147,8 -147,8 +147,13 @@@ out
  }
  
  pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
++<<<<<<< HEAD
 +			enum pci_channel_state state,
 +			pci_ers_result_t (*reset_link)(struct pci_dev *pdev))
++=======
+ 		pci_channel_state_t state,
+ 		pci_ers_result_t (*reset_subordinates)(struct pci_dev *pdev))
++>>>>>>> 8f1bbfbc3596 (PCI/ERR: Rename reset_link() to reset_subordinates())
  {
  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
  	struct pci_bus *bus;
* Unmerged path drivers/pci/pci.h
* Unmerged path drivers/pci/pcie/err.c
