x86/speculation: Reorder the spec_v2 code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 15d6b7aab0793b2de8a05d8a828777dd24db424e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/15d6b7aa.failed

Reorder the code so it is better grouped. No functional change.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Jiri Kosina <jkosina@suse.cz>
	Cc: Tom Lendacky <thomas.lendacky@amd.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: David Woodhouse <dwmw@amazon.co.uk>
	Cc: Tim Chen <tim.c.chen@linux.intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Casey Schaufler <casey.schaufler@intel.com>
	Cc: Asit Mallick <asit.k.mallick@intel.com>
	Cc: Arjan van de Ven <arjan@linux.intel.com>
	Cc: Jon Masters <jcm@redhat.com>
	Cc: Waiman Long <longman9394@gmail.com>
	Cc: Greg KH <gregkh@linuxfoundation.org>
	Cc: Dave Stewart <david.c.stewart@intel.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/20181125185004.707122879@linutronix.de


(cherry picked from commit 15d6b7aab0793b2de8a05d8a828777dd24db424e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/bugs.c
diff --cc arch/x86/kernel/cpu/bugs.c
index 9da976b47d9d,c9542b9fb329..000000000000
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -311,44 -317,6 +311,47 @@@ static enum spectre_v2_mitigation_cmd _
  	return cmd;
  }
  
++<<<<<<< HEAD
 +static bool stibp_needed(void)
 +{
 +	if (spectre_v2_enabled == SPECTRE_V2_NONE)
 +		return false;
 +
 +	if (!boot_cpu_has(X86_FEATURE_STIBP))
 +		return false;
 +
 +	return true;
 +}
 +
 +static void update_stibp_msr(void *info)
 +{
 +	wrmsrl(MSR_IA32_SPEC_CTRL, x86_spec_ctrl_base);
 +}
 +
 +void arch_smt_update(void)
 +{
 +	u64 mask;
 +
 +	if (!stibp_needed())
 +		return;
 +
 +	mutex_lock(&spec_ctrl_mutex);
 +
 +	mask = x86_spec_ctrl_base & ~SPEC_CTRL_STIBP;
 +	if (sched_smt_active())
 +		mask |= SPEC_CTRL_STIBP;
 +
 +	if (mask != x86_spec_ctrl_base) {
 +		pr_info("Spectre v2 cross-process SMT mitigation: %s STIBP\n",
 +			mask & SPEC_CTRL_STIBP ? "Enabling" : "Disabling");
 +		x86_spec_ctrl_base = mask;
 +		on_each_cpu(update_stibp_msr, NULL, 1);
 +	}
 +	mutex_unlock(&spec_ctrl_mutex);
 +}
 +
++=======
++>>>>>>> 15d6b7aab079 (x86/speculation: Reorder the spec_v2 code)
  static void __init spectre_v2_select_mitigation(void)
  {
  	enum spectre_v2_mitigation_cmd cmd = spectre_v2_parse_cmdline();
* Unmerged path arch/x86/kernel/cpu/bugs.c
