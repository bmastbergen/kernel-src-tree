flow_dissector: Dissect tos and ttl from the tunnel info

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 5544adb9707fda5d54494c37940701894c16b9a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/5544adb9.failed

Add dissection of the tos and ttl from the ip tunnel headers
fields in case a match is needed on them.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Roi Dayan <roid@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5544adb9707fda5d54494c37940701894c16b9a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/flow_dissector.h
diff --cc include/net/flow_dissector.h
index adc24df56b90,2a17f041f7a1..000000000000
--- a/include/net/flow_dissector.h
+++ b/include/net/flow_dissector.h
@@@ -206,7 -206,8 +206,12 @@@ enum flow_dissector_key_id 
  	FLOW_DISSECTOR_KEY_MPLS, /* struct flow_dissector_key_mpls */
  	FLOW_DISSECTOR_KEY_TCP, /* struct flow_dissector_key_tcp */
  	FLOW_DISSECTOR_KEY_IP, /* struct flow_dissector_key_ip */
++<<<<<<< HEAD
 +
++=======
+ 	FLOW_DISSECTOR_KEY_CVLAN, /* struct flow_dissector_key_flow_vlan */
+ 	FLOW_DISSECTOR_KEY_ENC_IP, /* struct flow_dissector_key_ip */
++>>>>>>> 5544adb9707f (flow_dissector: Dissect tos and ttl from the tunnel info)
  	FLOW_DISSECTOR_KEY_MAX,
  };
  
* Unmerged path include/net/flow_dissector.h
diff --git a/net/core/flow_dissector.c b/net/core/flow_dissector.c
index 53f96e4f7bf5..51dd02875b75 100644
--- a/net/core/flow_dissector.c
+++ b/net/core/flow_dissector.c
@@ -152,7 +152,9 @@ skb_flow_dissect_tunnel_info(const struct sk_buff *skb,
 	    !dissector_uses_key(flow_dissector,
 				FLOW_DISSECTOR_KEY_ENC_CONTROL) &&
 	    !dissector_uses_key(flow_dissector,
-				FLOW_DISSECTOR_KEY_ENC_PORTS))
+				FLOW_DISSECTOR_KEY_ENC_PORTS) &&
+	    !dissector_uses_key(flow_dissector,
+				FLOW_DISSECTOR_KEY_ENC_IP))
 		return;
 
 	info = skb_tunnel_info(skb);
@@ -212,6 +214,16 @@ skb_flow_dissect_tunnel_info(const struct sk_buff *skb,
 		tp->src = key->tp_src;
 		tp->dst = key->tp_dst;
 	}
+
+	if (dissector_uses_key(flow_dissector, FLOW_DISSECTOR_KEY_ENC_IP)) {
+		struct flow_dissector_key_ip *ip;
+
+		ip = skb_flow_dissector_target(flow_dissector,
+					       FLOW_DISSECTOR_KEY_ENC_IP,
+					       target_container);
+		ip->tos = key->tos;
+		ip->ttl = key->ttl;
+	}
 }
 EXPORT_SYMBOL(skb_flow_dissect_tunnel_info);
 
