net/mlx5: Use max_num_eqs for calculation of required MSIX vectors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Denis Drozdov <denisd@mellanox.com>
commit 342ac8448f1fb213908656ae5581d0f37a5954e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/342ac844.failed

New firmware has defined new HCA capability field called "max_num_eqs",
that is the number of available EQs after subtracting reserved FW EQs.

Before this capability the FW reported the EQ number in "log_max_eqs",
the reported value also contained FW reserved EQs, but the driver might
be failing to load on 320 cpus systems due to the fact that FW
reserved EQs were not available to the driver.

Now the driver has to obtain max_num_eqs value from new FW to get real
number of EQs available.

	Signed-off-by: Denis Drozdov <denisd@mellanox.com>
	Reviewed-by: Alex Vesker <valex@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 342ac8448f1fb213908656ae5581d0f37a5954e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 963c8cd46e6b,63e1ce4c4826..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -1115,7 -1131,12 +1115,16 @@@ struct mlx5_ifc_cmd_hca_cap_bits 
  	u8         reserved_at_3f8[0x3];
  	u8         log_max_current_uc_list[0x5];
  
++<<<<<<< HEAD
 +	u8         reserved_at_400[0x80];
++=======
+ 	u8         general_obj_types[0x40];
+ 
+ 	u8         reserved_at_440[0x20];
+ 
+ 	u8         reserved_at_460[0x10];
+ 	u8         max_num_eqs[0x10];
++>>>>>>> 342ac8448f1f (net/mlx5: Use max_num_eqs for calculation of required MSIX vectors)
  
  	u8         reserved_at_480[0x3];
  	u8         log_max_l2_table[0x5];
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/main.c b/drivers/net/ethernet/mellanox/mlx5/core/main.c
index f9b950e1bd85..ad958b9b1b9b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@ -321,7 +321,9 @@ static int mlx5_alloc_irq_vectors(struct mlx5_core_dev *dev)
 {
 	struct mlx5_priv *priv = &dev->priv;
 	struct mlx5_eq_table *table = &priv->eq_table;
-	int num_eqs = 1 << MLX5_CAP_GEN(dev, log_max_eq);
+	int num_eqs = MLX5_CAP_GEN(dev, max_num_eqs) ?
+		      MLX5_CAP_GEN(dev, max_num_eqs) :
+		      1 << MLX5_CAP_GEN(dev, log_max_eq);
 	int nvec;
 	int err;
 
* Unmerged path include/linux/mlx5/mlx5_ifc.h
