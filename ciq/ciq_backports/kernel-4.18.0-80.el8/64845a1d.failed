block: Introduce get_current_ioprio()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Damien Le Moal <damien.lemoal@wdc.com>
commit 64845a1ddd655574886eb48e9a5eaeeb9b05bf0d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/64845a1d.failed

Define get_current_ioprio() as an inline helper to obtain the caller
I/O priority from its task I/O context. Use this helper in
blk_init_request_from_bio() to set a request ioprio.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 64845a1ddd655574886eb48e9a5eaeeb9b05bf0d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-core.c
diff --cc block/blk-core.c
index f000f658d70d,4450d3c08f25..000000000000
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@@ -1925,8 -813,6 +1925,11 @@@ out
  
  void blk_init_request_from_bio(struct request *req, struct bio *bio)
  {
++<<<<<<< HEAD
 +	struct io_context *ioc = rq_ioc(bio);
 +
++=======
++>>>>>>> 64845a1ddd65 (block: Introduce get_current_ioprio())
  	if (bio->bi_opf & REQ_RAHEAD)
  		req->cmd_flags |= REQ_FAILFAST_MASK;
  
* Unmerged path block/blk-core.c
diff --git a/include/linux/ioprio.h b/include/linux/ioprio.h
index 9e30ed6443db..e9bfe6972aed 100644
--- a/include/linux/ioprio.h
+++ b/include/linux/ioprio.h
@@ -70,6 +70,19 @@ static inline int task_nice_ioclass(struct task_struct *task)
 		return IOPRIO_CLASS_BE;
 }
 
+/*
+ * If the calling process has set an I/O priority, use that. Otherwise, return
+ * the default I/O priority.
+ */
+static inline int get_current_ioprio(void)
+{
+	struct io_context *ioc = current->io_context;
+
+	if (ioc)
+		return ioc->ioprio;
+	return IOPRIO_PRIO_VALUE(IOPRIO_CLASS_NONE, 0);
+}
+
 /*
  * For inheritance, return the highest of the two given priorities
  */
