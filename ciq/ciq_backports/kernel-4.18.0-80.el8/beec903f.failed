ia64: remove iommu_dma_supported

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Christoph Hellwig <hch@lst.de>
commit beec903f71214c0bfa555955dd548e87bfb2c623
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/beec903f.failed

The generic dma_direct_supported helper already used by intel-iommu on
x86 does a better job than the ia64 reimplementation.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Tony Luck <tony.luck@intel.com>
(cherry picked from commit beec903f71214c0bfa555955dd548e87bfb2c623)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/ia64/kernel/pci-dma.c
diff --cc arch/ia64/kernel/pci-dma.c
index b5df084c0af4,3c2884bef3d4..000000000000
--- a/arch/ia64/kernel/pci-dma.c
+++ b/arch/ia64/kernel/pci-dma.c
@@@ -53,35 -51,6 +53,38 @@@ iommu_dma_init(void
  	return;
  }
  
++<<<<<<< HEAD
 +int iommu_dma_supported(struct device *dev, u64 mask)
 +{
 +	/* Copied from i386. Doesn't make much sense, because it will
 +	   only work for pci_alloc_coherent.
 +	   The caller just has to use GFP_DMA in this case. */
 +	if (mask < DMA_BIT_MASK(24))
 +		return 0;
 +
 +	/* Tell the device to use SAC when IOMMU force is on.  This
 +	   allows the driver to use cheaper accesses in some cases.
 +
 +	   Problem with this is that if we overflow the IOMMU area and
 +	   return DAC as fallback address the device may not handle it
 +	   correctly.
 +
 +	   As a special case some controllers have a 39bit address
 +	   mode that is as efficient as 32bit (aic79xx). Don't force
 +	   SAC for these.  Assume all masks <= 40 bits are of this
 +	   type. Normally this doesn't make any difference, but gives
 +	   more gentle handling of IOMMU overflow. */
 +	if (iommu_sac_force && (mask >= DMA_BIT_MASK(40))) {
 +		dev_info(dev, "Force SAC with mask %llx\n", mask);
 +		return 0;
 +	}
 +
 +	return 1;
 +}
 +EXPORT_SYMBOL(iommu_dma_supported);
 +
++=======
++>>>>>>> beec903f7121 (ia64: remove iommu_dma_supported)
  void __init pci_iommu_alloc(void)
  {
  	dma_ops = &intel_dma_ops;
* Unmerged path arch/ia64/kernel/pci-dma.c
diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 16675eadec1f..4b095ae729ed 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -3898,9 +3898,7 @@ const struct dma_map_ops intel_dma_ops = {
 	.map_page = intel_map_page,
 	.unmap_page = intel_unmap_page,
 	.mapping_error = intel_mapping_error,
-#ifdef CONFIG_X86
 	.dma_supported = dma_direct_supported,
-#endif
 };
 
 static inline int iommu_domain_cache_init(void)
