blk-mq: export hctx->type in debugfs instead of sysfs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit 346fc1089e5d4734990b4b6c3cd0cdeae9ae482d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/346fc108.failed

Now we only export hctx->type via sysfs, and there isn't such info
in hctx entry under debugfs. We often use debugfs only to diagnose
queue mapping issue, so add the support in debugfs.

Queue mapping becomes a bit more complicated after multiple queue
mapping is supported, we may write blktest to verify if queue mapping
is valid based on blk-mq-debugfs.

Given not necessary to export hctx->type twice, so remove the export
from sysfs.

	Cc: Jeff Moyer <jmoyer@redhat.com>
	Cc: Mike Snitzer <snitzer@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 346fc1089e5d4734990b4b6c3cd0cdeae9ae482d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq-sysfs.c
diff --cc block/blk-mq-sysfs.c
index 6efef1f679f0,3f9c3f4ac44c..000000000000
--- a/block/blk-mq-sysfs.c
+++ b/block/blk-mq-sysfs.c
@@@ -173,11 -173,6 +173,14 @@@ static ssize_t blk_mq_hw_sysfs_cpus_sho
  	return ret;
  }
  
++<<<<<<< HEAD
 +static ssize_t blk_mq_hw_sysfs_type_show(struct blk_mq_hw_ctx *hctx, char *page)
 +{
 +	return sprintf(page, "%u\n", hctx->type);
 +}
 +
++=======
++>>>>>>> 346fc1089e5d (blk-mq: export hctx->type in debugfs instead of sysfs)
  static struct attribute *default_ctx_attrs[] = {
  	NULL,
  };
diff --git a/block/blk-mq-debugfs.c b/block/blk-mq-debugfs.c
index 8b03684e12a5..bebb96ee847f 100644
--- a/block/blk-mq-debugfs.c
+++ b/block/blk-mq-debugfs.c
@@ -461,6 +461,21 @@ static int hctx_busy_show(void *data, struct seq_file *m)
 	return 0;
 }
 
+static const char *const hctx_types[] = {
+	[HCTX_TYPE_DEFAULT]	= "default",
+	[HCTX_TYPE_READ]	= "read",
+	[HCTX_TYPE_POLL]	= "poll",
+};
+
+static int hctx_type_show(void *data, struct seq_file *m)
+{
+	struct blk_mq_hw_ctx *hctx = data;
+
+	BUILD_BUG_ON(ARRAY_SIZE(hctx_types) != HCTX_MAX_TYPES);
+	seq_printf(m, "%s\n", hctx_types[hctx->type]);
+	return 0;
+}
+
 static int hctx_ctx_map_show(void *data, struct seq_file *m)
 {
 	struct blk_mq_hw_ctx *hctx = data;
@@ -820,6 +835,7 @@ static const struct blk_mq_debugfs_attr blk_mq_debugfs_hctx_attrs[] = {
 	{"run", 0600, hctx_run_show, hctx_run_write},
 	{"active", 0400, hctx_active_show},
 	{"dispatch_busy", 0400, hctx_dispatch_busy_show},
+	{"type", 0400, hctx_type_show},
 	{},
 };
 
* Unmerged path block/blk-mq-sysfs.c
