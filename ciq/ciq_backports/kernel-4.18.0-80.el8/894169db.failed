scsi: megaraid_sas: Use 63-bit DMA addressing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
commit 894169db12463cea08d0e2a9e35f42b291340e5a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/894169db.failed

Although MegaRAID controllers support 64-bit DMA addressing, as per
hardware design, DMA address with all 64-bits set
(0xFFFFFFFF-FFFFFFFF) results in a firmware fault.

Driver will set 63-bit DMA mask to ensure the above address will not be
used.

	Cc: stable@vger.kernel.org
	Signed-off-by: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 894169db12463cea08d0e2a9e35f42b291340e5a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_base.c
diff --cc drivers/scsi/megaraid/megaraid_sas_base.c
index ff5c2d50b7b6,f7bdd783360a..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@@ -6043,14 -6200,14 +6043,19 @@@ megasas_set_dma_mask(struct megasas_ins
  {
  	u64 consistent_mask;
  	struct pci_dev *pdev;
 -	u32 scratch_pad_1;
 +	u32 scratch_pad_2;
  
  	pdev = instance->pdev;
++<<<<<<< HEAD
 +	consistent_mask = (instance->adapter_type == VENTURA_SERIES) ?
 +				DMA_BIT_MASK(64) : DMA_BIT_MASK(32);
++=======
+ 	consistent_mask = (instance->adapter_type >= VENTURA_SERIES) ?
+ 				DMA_BIT_MASK(63) : DMA_BIT_MASK(32);
++>>>>>>> 894169db1246 (scsi: megaraid_sas: Use 63-bit DMA addressing)
  
  	if (IS_DMA64) {
- 		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(64)) &&
+ 		if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(63)) &&
  		    dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32)))
  			goto fail_set_dma_mask;
  
@@@ -6061,13 -6218,13 +6066,13 @@@
  			 * If 32 bit DMA mask fails, then try for 64 bit mask
  			 * for FW capable of handling 64 bit DMA.
  			 */
 -			scratch_pad_1 = megasas_readl
 -				(instance, &instance->reg_set->outbound_scratch_pad_1);
 +			scratch_pad_2 = readl
 +				(&instance->reg_set->outbound_scratch_pad_2);
  
 -			if (!(scratch_pad_1 & MR_CAN_HANDLE_64_BIT_DMA_OFFSET))
 +			if (!(scratch_pad_2 & MR_CAN_HANDLE_64_BIT_DMA_OFFSET))
  				goto fail_set_dma_mask;
  			else if (dma_set_mask_and_coherent(&pdev->dev,
- 							   DMA_BIT_MASK(64)))
+ 							   DMA_BIT_MASK(63)))
  				goto fail_set_dma_mask;
  		}
  	} else if (dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32)))
* Unmerged path drivers/scsi/megaraid/megaraid_sas_base.c
