iw_cxgb4: only allow 1 flush on user qps

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Steve Wise <swise@opengridcomputing.com>
commit 308aa2b8f7b7db3332a7d41099fd37851fb793b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/308aa2b8.failed

Once the qp has been flushed, it cannot be flushed again.  The user qp
flush logic wasn't enforcing it however.  The bug can cause
touch-after-free crashes like:

Unable to handle kernel paging request for data at address 0x000001ec
Faulting instruction address: 0xc008000016069100
Oops: Kernel access of bad area, sig: 11 [#1]
...
NIP [c008000016069100] flush_qp+0x80/0x480 [iw_cxgb4]
LR [c00800001606cd6c] c4iw_modify_qp+0x71c/0x11d0 [iw_cxgb4]
Call Trace:
[c00800001606cd6c] c4iw_modify_qp+0x71c/0x11d0 [iw_cxgb4]
[c00800001606e868] c4iw_ib_modify_qp+0x118/0x200 [iw_cxgb4]
[c0080000119eae80] ib_security_modify_qp+0xd0/0x3d0 [ib_core]
[c0080000119c4e24] ib_modify_qp+0xc4/0x2c0 [ib_core]
[c008000011df0284] iwcm_modify_qp_err+0x44/0x70 [iw_cm]
[c008000011df0fec] destroy_cm_id+0xcc/0x370 [iw_cm]
[c008000011ed4358] rdma_destroy_id+0x3c8/0x520 [rdma_cm]
[c0080000134b0540] ucma_close+0x90/0x1b0 [rdma_ucm]
[c000000000444da4] __fput+0xe4/0x2f0

So fix flush_qp() to only flush the wq once.

	Cc: stable@vger.kernel.org
	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 308aa2b8f7b7db3332a7d41099fd37851fb793b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/qp.c
diff --cc drivers/infiniband/hw/cxgb4/qp.c
index aef53305f1c3,347fe18b1a41..000000000000
--- a/drivers/infiniband/hw/cxgb4/qp.c
+++ b/drivers/infiniband/hw/cxgb4/qp.c
@@@ -1388,7 -1685,13 +1388,17 @@@ static void flush_qp(struct c4iw_qp *qh
  	schp = to_c4iw_cq(qhp->ibqp.send_cq);
  
  	if (qhp->ibqp.uobject) {
++<<<<<<< HEAD
 +		t4_set_wq_in_error(&qhp->wq);
++=======
+ 
+ 		/* for user qps, qhp->wq.flushed is protected by qhp->mutex */
+ 		if (qhp->wq.flushed)
+ 			return;
+ 
+ 		qhp->wq.flushed = 1;
+ 		t4_set_wq_in_error(&qhp->wq, 0);
++>>>>>>> 308aa2b8f7b7 (iw_cxgb4: only allow 1 flush on user qps)
  		t4_set_cq_in_error(&rchp->cq);
  		spin_lock_irqsave(&rchp->comp_handler_lock, flag);
  		(*rchp->ibcq.comp_handler)(&rchp->ibcq, rchp->ibcq.cq_context);
* Unmerged path drivers/infiniband/hw/cxgb4/qp.c
