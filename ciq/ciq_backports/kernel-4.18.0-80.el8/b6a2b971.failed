net: sched: act_csum: remove dependency on rtnl lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
Rebuild_CHGLOG: - [net] sched: act_csum: remove dependency on rtnl lock (Ivan Vecera) [1638022]
Rebuild_FUZZ: 94.95%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit b6a2b971c0b00253197682fbdf1c55fc0e2610a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/b6a2b971.failed

Use tcf lock to protect csum action struct private data from concurrent
modification in init and dump. Use rcu swap operation to reassign params
pointer under protection of tcf lock. (old params value is not used by
init, so there is no need of standalone rcu dereference step)

Remove rtnl assertion that is no longer necessary.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b6a2b971c0b00253197682fbdf1c55fc0e2610a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_csum.c
diff --cc net/sched/act_csum.c
index 08b34187b0cb,f01c59ba6d12..000000000000
--- a/net/sched/act_csum.c
+++ b/net/sched/act_csum.c
@@@ -85,18 -91,19 +85,20 @@@ static int tcf_csum_init(struct net *ne
  
  	params_new = kzalloc(sizeof(*params_new), GFP_KERNEL);
  	if (unlikely(!params_new)) {
 -		tcf_idr_release(*a, bind);
 +		if (ret == ACT_P_CREATED)
 +			tcf_idr_release(*a, bind);
  		return -ENOMEM;
  	}
- 	params_old = rtnl_dereference(p->params);
+ 	params_new->update_flags = parm->update_flags;
  
+ 	spin_lock(&p->tcf_lock);
  	p->tcf_action = parm->action;
- 	params_new->update_flags = parm->update_flags;
- 	rcu_assign_pointer(p->params, params_new);
- 	if (params_old)
- 		kfree_rcu(params_old, rcu);
+ 	rcu_swap_protected(p->params, params_new,
+ 			   lockdep_is_held(&p->tcf_lock));
+ 	spin_unlock(&p->tcf_lock);
+ 
+ 	if (params_new)
+ 		kfree_rcu(params_new, rcu);
  
  	if (ret == ACT_P_CREATED)
  		tcf_idr_insert(tn, *a);
@@@ -598,9 -599,8 +600,14 @@@ static int tcf_csum_dump(struct sk_buf
  	struct tcf_csum_params *params;
  	struct tc_csum opt = {
  		.index   = p->tcf_index,
++<<<<<<< HEAD
 +		.refcnt  = p->tcf_refcnt - ref,
 +		.bindcnt = p->tcf_bindcnt - bind,
 +		.action  = p->tcf_action,
++=======
+ 		.refcnt  = refcount_read(&p->tcf_refcnt) - ref,
+ 		.bindcnt = atomic_read(&p->tcf_bindcnt) - bind,
++>>>>>>> b6a2b971c0b0 (net: sched: act_csum: remove dependency on rtnl lock)
  	};
  	struct tcf_t t;
  
* Unmerged path net/sched/act_csum.c
