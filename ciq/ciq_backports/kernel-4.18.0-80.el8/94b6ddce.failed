tipc: reset bearer if device carrier not ok

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
commit 94b6ddce71780575fbbf9d2c36afc8440e61a281
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/94b6ddce.failed

If we detect that under lying carrier detects errors and goes down,
we reset the bearer.

	Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
	Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 94b6ddce71780575fbbf9d2c36afc8440e61a281)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tipc/bearer.c
diff --cc net/tipc/bearer.c
index 8dd419220973,645c16052052..000000000000
--- a/net/tipc/bearer.c
+++ b/net/tipc/bearer.c
@@@ -609,11 -609,11 +609,17 @@@ static int tipc_l2_device_event(struct 
  
  	switch (evt) {
  	case NETDEV_CHANGE:
- 		if (netif_carrier_ok(dev))
+ 		if (netif_carrier_ok(dev) && netif_oper_up(dev)) {
+ 			test_and_set_bit_lock(0, &b->up);
  			break;
++<<<<<<< HEAD
 +	case NETDEV_UP:
 +		test_and_set_bit_lock(0, &b->up);
 +		break;
++=======
+ 		}
+ 		/* fall through */
++>>>>>>> 94b6ddce7178 (tipc: reset bearer if device carrier not ok)
  	case NETDEV_GOING_DOWN:
  		clear_bit_unlock(0, &b->up);
  		tipc_reset_bearer(net, b);
* Unmerged path net/tipc/bearer.c
