net/mlx5e: Initialize all netdev common structures in one place

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 519a0bf5b20c370fb05ee05ea6c00e1377c13229
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/519a0bf5.failed

Move all mlx5e generic structures initializations to mlx5e_netdev_init.
The common structure new initializer function will be used to initialize
mlx5 context for netlink created netdevs such as IPoIB mlx5 accelerated
child netdevs.

Fixes: cd565b4b51e5 ("IB/IPoIB: Support acceleration options callbacks")
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Feras Daoud <ferasda@mellanox.com>
(cherry picked from commit 519a0bf5b20c370fb05ee05ea6c00e1377c13229)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
#	drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 6ddc006bb555,f6dd0254d103..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -1144,6 -961,12 +1144,15 @@@ int mlx5e_ethtool_flash_device(struct m
  			       struct ethtool_flash *flash);
  
  /* mlx5e generic netdev management API */
++<<<<<<< HEAD
++=======
+ int mlx5e_netdev_init(struct net_device *netdev,
+ 		      struct mlx5e_priv *priv,
+ 		      struct mlx5_core_dev *mdev,
+ 		      const struct mlx5e_profile *profile,
+ 		      void *ppriv);
+ void mlx5e_netdev_cleanup(struct net_device *netdev, struct mlx5e_priv *priv);
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
  struct net_device*
  mlx5e_create_netdev(struct mlx5_core_dev *mdev, const struct mlx5e_profile *profile,
  		    void *ppriv);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 11fe75e05d5e,d5a7bd493240..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4527,39 -4557,9 +4527,42 @@@ void mlx5e_build_nic_params(struct mlx5
  	params->tx_min_inline_mode = mlx5e_params_calculate_tx_min_inline(mdev);
  
  	/* RSS */
 -	mlx5e_build_rss_params(params);
 +	params->rss_hfunc = ETH_RSS_HASH_XOR;
 +	netdev_rss_key_fill(params->toeplitz_hash_key, sizeof(params->toeplitz_hash_key));
 +	mlx5e_build_default_indir_rqt(params->indirection_rqt,
 +				      MLX5E_INDIR_RQT_SIZE, max_channels);
 +}
 +
++<<<<<<< HEAD
 +static void mlx5e_build_nic_netdev_priv(struct mlx5_core_dev *mdev,
 +					struct net_device *netdev,
 +					const struct mlx5e_profile *profile,
 +					void *ppriv)
 +{
 +	struct mlx5e_priv *priv = netdev_priv(netdev);
 +
 +	priv->mdev        = mdev;
 +	priv->netdev      = netdev;
 +	priv->profile     = profile;
 +	priv->ppriv       = ppriv;
 +	priv->msglevel    = MLX5E_MSG_LEVEL;
 +	priv->max_opened_tc = 1;
 +
 +	mlx5e_build_nic_params(mdev, &priv->channels.params,
 +			       profile->max_nch(mdev), netdev->mtu);
 +
 +	mutex_init(&priv->state_lock);
 +
 +	INIT_WORK(&priv->update_carrier_work, mlx5e_update_carrier_work);
 +	INIT_WORK(&priv->set_rx_mode_work, mlx5e_set_rx_mode_work);
 +	INIT_WORK(&priv->tx_timeout_work, mlx5e_tx_timeout_work);
 +	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
 +
 +	mlx5e_timestamp_init(priv);
  }
  
++=======
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
  static void mlx5e_set_netdev_dev_addr(struct net_device *netdev)
  {
  	struct mlx5e_priv *priv = netdev_priv(netdev);
@@@ -4730,9 -4730,15 +4733,19 @@@ static void mlx5e_nic_init(struct mlx5_
  	struct mlx5e_priv *priv = netdev_priv(netdev);
  	int err;
  
++<<<<<<< HEAD
 +	priv->vxlan = mlx5_vxlan_create(mdev);
++=======
+ 	err = mlx5e_netdev_init(netdev, priv, mdev, profile, ppriv);
+ 	if (err)
+ 		return err;
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
+ 
+ 	mlx5e_build_nic_params(mdev, &priv->channels.params,
+ 			       profile->max_nch(mdev), netdev->mtu);
+ 
+ 	mlx5e_timestamp_init(priv);
  
- 	mlx5e_build_nic_netdev_priv(mdev, netdev, profile, ppriv);
  	err = mlx5e_ipsec_init(priv);
  	if (err)
  		mlx5_core_err(mdev, "IPSec initialization failed, %d\n", err);
@@@ -4905,6 -4927,46 +4918,49 @@@ static const struct mlx5e_profile mlx5e
  
  /* mlx5e generic netdev management API (move to en_common.c) */
  
++<<<<<<< HEAD
++=======
+ /* mlx5e_netdev_init/cleanup must be called from profile->init/cleanup callbacks */
+ int mlx5e_netdev_init(struct net_device *netdev,
+ 		      struct mlx5e_priv *priv,
+ 		      struct mlx5_core_dev *mdev,
+ 		      const struct mlx5e_profile *profile,
+ 		      void *ppriv)
+ {
+ 	/* priv init */
+ 	priv->mdev        = mdev;
+ 	priv->netdev      = netdev;
+ 	priv->profile     = profile;
+ 	priv->ppriv       = ppriv;
+ 	priv->msglevel    = MLX5E_MSG_LEVEL;
+ 	priv->max_opened_tc = 1;
+ 
+ 	mutex_init(&priv->state_lock);
+ 	INIT_WORK(&priv->update_carrier_work, mlx5e_update_carrier_work);
+ 	INIT_WORK(&priv->set_rx_mode_work, mlx5e_set_rx_mode_work);
+ 	INIT_WORK(&priv->tx_timeout_work, mlx5e_tx_timeout_work);
+ 	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
+ 
+ 	priv->wq = create_singlethread_workqueue("mlx5e");
+ 	if (!priv->wq)
+ 		return -ENOMEM;
+ 
+ 	/* netdev init */
+ 	netif_carrier_off(netdev);
+ 
+ #ifdef CONFIG_MLX5_EN_ARFS
+ 	netdev->rx_cpu_rmap = mdev->rmap;
+ #endif
+ 
+ 	return 0;
+ }
+ 
+ void mlx5e_netdev_cleanup(struct net_device *netdev, struct mlx5e_priv *priv)
+ {
+ 	destroy_workqueue(priv->wq);
+ }
+ 
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
  struct net_device *mlx5e_create_netdev(struct mlx5_core_dev *mdev,
  				       const struct mlx5e_profile *profile,
  				       void *ppriv)
@@@ -4921,19 -4983,11 +4977,27 @@@
  		return NULL;
  	}
  
++<<<<<<< HEAD
 +#ifdef CONFIG_RFS_ACCEL
 +	netdev->rx_cpu_rmap = mdev->rmap;
 +#endif
 +
 +	profile->init(mdev, netdev, profile, ppriv);
 +
 +	netif_carrier_off(netdev);
 +
 +	priv = netdev_priv(netdev);
 +
 +	priv->wq = create_singlethread_workqueue("mlx5e");
 +	if (!priv->wq)
 +		goto err_cleanup_nic;
++=======
+ 	err = profile->init(mdev, netdev, profile, ppriv);
+ 	if (err) {
+ 		mlx5_core_err(mdev, "failed to init mlx5e profile %d\n", err);
+ 		goto err_free_netdev;
+ 	}
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
  
  	return netdev;
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 8e3c5b4b90ab,1a3efa87f557..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -970,21 -1078,18 +970,28 @@@ static void mlx5e_build_rep_netdev(stru
  	netdev->max_mtu = MLX5E_HW2SW_MTU(&priv->channels.params, max_mtu);
  }
  
 -static int mlx5e_init_rep(struct mlx5_core_dev *mdev,
 -			  struct net_device *netdev,
 -			  const struct mlx5e_profile *profile,
 -			  void *ppriv)
 +static void mlx5e_init_rep(struct mlx5_core_dev *mdev,
 +			   struct net_device *netdev,
 +			   const struct mlx5e_profile *profile,
 +			   void *ppriv)
  {
  	struct mlx5e_priv *priv = netdev_priv(netdev);
 -	int err;
  
++<<<<<<< HEAD
 +	priv->mdev                         = mdev;
 +	priv->netdev                       = netdev;
 +	priv->profile                      = profile;
 +	priv->ppriv                        = ppriv;
 +
 +	mutex_init(&priv->state_lock);
++=======
+ 	err = mlx5e_netdev_init(netdev, priv, mdev, profile, ppriv);
+ 	if (err)
+ 		return err;
+ 
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
 +
 +	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
  
  	priv->channels.params.num_channels = profile->max_nch(mdev);
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
index 0e07e0bb17d3,ed28602c98f6..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
@@@ -78,14 -78,11 +78,20 @@@ void mlx5i_init(struct mlx5_core_dev *m
  {
  	struct mlx5e_priv *priv  = mlx5i_epriv(netdev);
  	u16 max_mtu;
 -	int err;
  
++<<<<<<< HEAD
 +	/* priv init */
 +	priv->mdev        = mdev;
 +	priv->netdev      = netdev;
 +	priv->profile     = profile;
 +	priv->ppriv       = ppriv;
 +	priv->max_opened_tc = 1;
 +	mutex_init(&priv->state_lock);
++=======
+ 	err = mlx5e_netdev_init(netdev, priv, mdev, profile, ppriv);
+ 	if (err)
+ 		return err;
++>>>>>>> 519a0bf5b20c (net/mlx5e: Initialize all netdev common structures in one place)
  
  	mlx5_query_port_max_mtu(mdev, &max_mtu, 1);
  	netdev->mtu = max_mtu;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
