net: hns3: add 8 BD limit for tx flow

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Peng Li <lipeng321@huawei.com>
commit 51e8439f34962794f6c5010a44893fe58450b8df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/51e8439f.failed

A single transmit packet can span up to 8 descriptors according
to the HW limit. If a skb has more than 8 frags, driver uses
skb_copy to get a new skb which has less frags.

	Signed-off-by: Peng Li <lipeng321@huawei.com>
	Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 51e8439f34962794f6c5010a44893fe58450b8df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
index 1cf648100000,216f3dd25cd6..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
@@@ -1049,7 -1185,19 +1063,23 @@@ static int hns3_nic_maybe_stop_tx(struc
  	/* No. of segments (plus a header) */
  	buf_num = skb_shinfo(skb)->nr_frags + 1;
  
++<<<<<<< HEAD
 +	if (buf_num > ring_space(ring))
++=======
+ 	if (unlikely(buf_num > HNS3_MAX_BD_PER_FRAG)) {
+ 		buf_num = (skb->len + HNS3_MAX_BD_SIZE - 1) / HNS3_MAX_BD_SIZE;
+ 		if (ring_space(ring) < buf_num)
+ 			return -EBUSY;
+ 		/* manual split the send packet */
+ 		new_skb = skb_copy(skb, GFP_ATOMIC);
+ 		if (!new_skb)
+ 			return -ENOMEM;
+ 		dev_kfree_skb_any(skb);
+ 		*out_skb = new_skb;
+ 	}
+ 
+ 	if (unlikely(ring_space(ring) < buf_num))
++>>>>>>> 51e8439f3496 (net: hns3: add 8 BD limit for tx flow)
  		return -EBUSY;
  
  	*bnum = buf_num;
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
