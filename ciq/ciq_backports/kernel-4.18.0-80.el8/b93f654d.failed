f2fs: remove request_list check in is_idle()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Jens Axboe <axboe@kernel.dk>
commit b93f654d73fa09088041efa77972b1d616a75fcb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/b93f654d.failed

This doesn't work on stacked devices, and it doesn't work on
blk-mq devices. The request_list is only used on legacy, which
we don't have much of anymore, and soon won't have any of.

Kill the check.

	Cc: Jaegeuk Kim <jaegeuk@kernel.org>
	Cc: linux-f2fs-devel@lists.sourceforge.net
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
	Reviewed-by: Chao Yu <yuchao0@huawei.com>
	Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
(cherry picked from commit b93f654d73fa09088041efa77972b1d616a75fcb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/f2fs/f2fs.h
diff --cc fs/f2fs/f2fs.h
index 6799c3fc44e3,f865c5ed965d..000000000000
--- a/fs/f2fs/f2fs.h
+++ b/fs/f2fs/f2fs.h
@@@ -1319,16 -1378,23 +1319,20 @@@ static inline bool f2fs_time_over(struc
  	return time_after(jiffies, sbi->last_time[type] + interval);
  }
  
 -static inline unsigned int f2fs_time_to_wait(struct f2fs_sb_info *sbi,
 -						int type)
 +static inline bool is_idle(struct f2fs_sb_info *sbi)
  {
 -	unsigned long interval = sbi->interval_time[type] * HZ;
 -	unsigned int wait_ms = 0;
 -	long delta;
 -
 -	delta = (sbi->last_time[type] + interval) - jiffies;
 -	if (delta > 0)
 -		wait_ms = jiffies_to_msecs(delta);
++<<<<<<< HEAD
 +	struct block_device *bdev = sbi->sb->s_bdev;
 +	struct request_queue *q = bdev_get_queue(bdev);
 +	struct request_list *rl = &q->root_rl;
  
 -	return wait_ms;
 -}
 +	if (rl->count[BLK_RW_SYNC] || rl->count[BLK_RW_ASYNC])
 +		return 0;
  
 -static inline bool is_idle(struct f2fs_sb_info *sbi, int type)
 -{
 +	return f2fs_time_over(sbi, REQ_TIME);
++=======
+ 	return f2fs_time_over(sbi, type);
++>>>>>>> b93f654d73fa (f2fs: remove request_list check in is_idle())
  }
  
  /*
* Unmerged path fs/f2fs/f2fs.h
