net: hns3: Fix for multicast failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Huazhong Tan <tanhuazhong@huawei.com>
commit fd5f9da3f6583046215d614a87792b46e55785e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/fd5f9da3.failed

When the lower 24 bits of the IPV6 link-local addresses at both
ends are the same, the multicast MAC address for Neigbour Discovery
is the same. The multicast for Neigbour Discovery will fail.

This patch fixes it by including the bonding uplink port in the
multicast group.

Fixes: 46a3df9f9718("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
	Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
	Signed-off-by: Peng Li <lipeng321@huawei.com>
	Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fd5f9da3f6583046215d614a87792b46e55785e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
index f5fda0553e44,8f1339a9a6bb..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
@@@ -4357,10 -4359,10 +4357,17 @@@ int hclge_add_mc_addr_common(struct hcl
  		return -EINVAL;
  	}
  	memset(&req, 0, sizeof(req));
++<<<<<<< HEAD
 +	hnae_set_bit(req.flags, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
 +	hnae_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
 +	hnae_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT1_EN_B, 1);
 +	hnae_set_bit(req.mc_mac_en, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
++=======
+ 	hnae3_set_bit(req.flags, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
+ 	hnae3_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
+ 	hnae3_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT1_EN_B, 1);
+ 	hnae3_set_bit(req.mc_mac_en, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
++>>>>>>> fd5f9da3f658 (net: hns3: Fix for multicast failure)
  	hclge_prepare_mac_addr(&req, addr);
  	status = hclge_lookup_mac_vlan_tbl(vport, &req, desc, true);
  	if (!status) {
@@@ -4424,10 -4426,10 +4431,17 @@@ int hclge_rm_mc_addr_common(struct hclg
  	}
  
  	memset(&req, 0, sizeof(req));
++<<<<<<< HEAD
 +	hnae_set_bit(req.flags, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
 +	hnae_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
 +	hnae_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT1_EN_B, 1);
 +	hnae_set_bit(req.mc_mac_en, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
++=======
+ 	hnae3_set_bit(req.flags, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
+ 	hnae3_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
+ 	hnae3_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT1_EN_B, 1);
+ 	hnae3_set_bit(req.mc_mac_en, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
++>>>>>>> fd5f9da3f658 (net: hns3: Fix for multicast failure)
  	hclge_prepare_mac_addr(&req, addr);
  	status = hclge_lookup_mac_vlan_tbl(vport, &req, desc, true);
  	if (!status) {
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
