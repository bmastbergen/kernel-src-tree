iommu: Add "iommu.strict" command line option

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Zhen Lei <thunder.leizhen@huawei.com>
commit 68a6efe86f6a16e25556a2aff40efad41097b486
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/68a6efe8.failed

Add a generic command line option to enable lazy unmapping via IOVA
flush queues, which will initally be suuported by iommu-dma. This echoes
the semantics of "intel_iommu=strict" (albeit with the opposite default
value), but in the driver-agnostic fashion of "iommu.passthrough".

	Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
[rm: move handling out of SMMUv3 driver, clean up documentation]
	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
[will: dropped broken printk when parsing command-line option]
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 68a6efe86f6a16e25556a2aff40efad41097b486)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/iommu.c
diff --cc drivers/iommu/iommu.c
index 63b37563db7e,2b6dad2aa9f1..000000000000
--- a/drivers/iommu/iommu.c
+++ b/drivers/iommu/iommu.c
@@@ -36,7 -36,12 +36,12 @@@
  
  static struct kset *iommu_group_kset;
  static DEFINE_IDA(iommu_group_ida);
 -#ifdef CONFIG_IOMMU_DEFAULT_PASSTHROUGH
 -static unsigned int iommu_def_domain_type = IOMMU_DOMAIN_IDENTITY;
 -#else
  static unsigned int iommu_def_domain_type = IOMMU_DOMAIN_DMA;
++<<<<<<< HEAD
++=======
+ #endif
+ static bool iommu_dma_strict __read_mostly = true;
++>>>>>>> 68a6efe86f6a (iommu: Add "iommu.strict" command line option)
  
  struct iommu_callback_data {
  	const struct iommu_ops *ops;
diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
index 8059a56ef18f..028996fa7637 100644
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@ -1739,6 +1739,18 @@
 		nobypass	[PPC/POWERNV]
 			Disable IOMMU bypass, using IOMMU for PCI devices.
 
+	iommu.strict=	[ARM64] Configure TLB invalidation behaviour
+			Format: { "0" | "1" }
+			0 - Lazy mode.
+			  Request that DMA unmap operations use deferred
+			  invalidation of hardware TLBs, for increased
+			  throughput at the cost of reduced device isolation.
+			  Will fall back to strict mode if not supported by
+			  the relevant IOMMU driver.
+			1 - Strict mode (default).
+			  DMA unmap operations invalidate IOMMU hardware TLBs
+			  synchronously.
+
 	iommu.passthrough=
 			[ARM64] Configure DMA to bypass the IOMMU by default.
 			Format: { "0" | "1" }
* Unmerged path drivers/iommu/iommu.c
