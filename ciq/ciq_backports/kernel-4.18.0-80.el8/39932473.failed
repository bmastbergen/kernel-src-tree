net: hns3: Optimize for unicast mac vlan table

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Jian Shen <shenjian15@huawei.com>
commit 39932473b63ebbfdebe298cad09711349feddbc6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/39932473.failed

In previously implement for unicast mac vlan table, the space is
shared by all the functions, driver does nothing when the space is
exhausted. This patch preallocates the space of unicast mac vlan
table for each function by software. Each function can only use its
private space and available shared space, avoiding single function
exhausts too much space, and other functions are unable to add
unicast mac address.

	Signed-off-by: Jian Shen <shenjian15@huawei.com>
	Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 39932473b63ebbfdebe298cad09711349feddbc6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_cmd.h
#	drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
#	drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.h
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_cmd.h
index e89fc32600da,6098dacb0987..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_cmd.h
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_cmd.h
@@@ -190,11 -175,11 +190,12 @@@ enum hclge_opcode_type 
  	HCLGE_OPC_MAC_VLAN_REMOVE	    = 0x1001,
  	HCLGE_OPC_MAC_VLAN_TYPE_ID	    = 0x1002,
  	HCLGE_OPC_MAC_VLAN_INSERT	    = 0x1003,
+ 	HCLGE_OPC_MAC_VLAN_ALLOCATE	    = 0x1004,
  	HCLGE_OPC_MAC_ETHTYPE_ADD	    = 0x1010,
  	HCLGE_OPC_MAC_ETHTYPE_REMOVE	= 0x1011,
 +	HCLGE_OPC_MAC_VLAN_MASK_SET	= 0x1012,
  
 -	/* Multicast linear table commands */
 +	/* Multicast linear table cmd */
  	HCLGE_OPC_MTA_MAC_MODE_CFG	    = 0x1020,
  	HCLGE_OPC_MTA_MAC_FUNC_CFG	    = 0x1021,
  	HCLGE_OPC_MTA_TBL_ITEM_CFG	    = 0x1022,
@@@ -599,13 -593,12 +602,22 @@@ struct hclge_mac_vlan_tbl_entry_cmd 
  	u8      rsv2[6];
  };
  
++<<<<<<< HEAD
 +#define HCLGE_VLAN_MASK_EN_B		0x0
 +struct hclge_mac_vlan_mask_entry_cmd {
 +	u8 rsv0[2];
 +	u8 vlan_mask;
 +	u8 rsv1;
 +	u8 mac_mask[6];
 +	u8 rsv2[14];
++=======
+ #define HCLGE_UMV_SPC_ALC_B	0
+ struct hclge_umv_spc_alc_cmd {
+ 	u8 allocate;
+ 	u8 rsv1[3];
+ 	__le32 space_size;
+ 	u8 rsv2[16];
++>>>>>>> 39932473b63e (net: hns3: Optimize for unicast mac vlan table)
  };
  
  #define HCLGE_MAC_MGR_MASK_VLAN_B		BIT(0)
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
index 4e699a56848c,d346d0aec15f..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
@@@ -768,9 -777,14 +770,20 @@@ static void hclge_parse_cfg(struct hclg
  	req = (struct hclge_cfg_param_cmd *)desc[1].data;
  	cfg->numa_node_map = __le32_to_cpu(req->param[0]);
  
++<<<<<<< HEAD
 +	cfg->speed_ability = hnae_get_field(__le32_to_cpu(req->param[1]),
 +					    HCLGE_CFG_SPEED_ABILITY_M,
 +					    HCLGE_CFG_SPEED_ABILITY_S);
++=======
+ 	cfg->speed_ability = hnae3_get_field(__le32_to_cpu(req->param[1]),
+ 					     HCLGE_CFG_SPEED_ABILITY_M,
+ 					     HCLGE_CFG_SPEED_ABILITY_S);
+ 	cfg->umv_space = hnae3_get_field(__le32_to_cpu(req->param[1]),
+ 					 HCLGE_CFG_UMV_TBL_SPACE_M,
+ 					 HCLGE_CFG_UMV_TBL_SPACE_S);
+ 	if (!cfg->umv_space)
+ 		cfg->umv_space = HCLGE_DEFAULT_UMV_SPACE_PER_PF;
++>>>>>>> 39932473b63e (net: hns3: Optimize for unicast mac vlan table)
  }
  
  /* hclge_get_cfg: query the static parameter from flash
@@@ -4032,10 -5453,12 +4169,12 @@@ int hclge_rm_uc_addr_common(struct hclg
  	}
  
  	memset(&req, 0, sizeof(req));
 -	hnae3_set_bit(req.flags, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
 -	hnae3_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
 +	hnae_set_bit(req.flags, HCLGE_MAC_VLAN_BIT0_EN_B, 1);
 +	hnae_set_bit(req.entry_type, HCLGE_MAC_VLAN_BIT0_EN_B, 0);
  	hclge_prepare_mac_addr(&req, addr);
  	ret = hclge_remove_mac_vlan_tbl(vport, &req);
+ 	if (!ret)
+ 		hclge_update_umv_space(vport, true);
  
  	return ret;
  }
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.h
index d4295d04475e,d0c7c624b31a..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.h
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.h
@@@ -460,6 -683,19 +467,22 @@@ struct hclge_dev 
  	struct hclge_vlan_type_cfg vlan_type_cfg;
  
  	unsigned long vlan_table[VLAN_N_VID][BITS_TO_LONGS(HCLGE_VPORT_NUM)];
++<<<<<<< HEAD
++=======
+ 
+ 	struct hclge_fd_cfg fd_cfg;
+ 	struct hlist_head fd_rule_list;
+ 	u16 hclge_fd_rule_num;
+ 
+ 	u16 wanted_umv_size;
+ 	/* max available unicast mac vlan space */
+ 	u16 max_umv_size;
+ 	/* private unicast mac vlan space, it's same for PF and its VFs */
+ 	u16 priv_umv_size;
+ 	/* unicast mac vlan space shared by PF and its VFs */
+ 	u16 share_umv_size;
+ 	struct mutex umv_mutex; /* protect share_umv_size */
++>>>>>>> 39932473b63e (net: hns3: Optimize for unicast mac vlan table)
  };
  
  /* VPort level vlan tag configuration for TX direction */
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_cmd.h
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.h
