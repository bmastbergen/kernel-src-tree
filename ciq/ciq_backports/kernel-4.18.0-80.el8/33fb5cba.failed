net: sched: cls_flower: change fl_init_dissector to accept mask and dissector

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
Rebuild_CHGLOG: - [net] sched: cls_flower: change fl_init_dissector to accept mask and dissector (Ivan Vecera) [1638022]
Rebuild_FUZZ: 96.64%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 33fb5cba11ff639c32f4f0104b04b2415fcd9ecc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/33fb5cba.failed

This function is going to be used for templates as well, so we need to
pass the pointer separately.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 33fb5cba11ff639c32f4f0104b04b2415fcd9ecc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_flower.c
diff --cc net/sched/cls_flower.c
index 56add37e1c3d,bb7aa1e9d281..000000000000
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@@ -826,42 -834,44 +827,47 @@@ static void fl_init_dissector(struct fl
  
  	FL_KEY_SET(keys, cnt, FLOW_DISSECTOR_KEY_CONTROL, control);
  	FL_KEY_SET(keys, cnt, FLOW_DISSECTOR_KEY_BASIC, basic);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ETH_ADDRS, eth);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_IPV4_ADDRS, ipv4);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_IPV6_ADDRS, ipv6);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_PORTS, tp);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_IP, ip);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_TCP, tcp);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ICMP, icmp);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ARP, arp);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_MPLS, mpls);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_VLAN, vlan);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_CVLAN, cvlan);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ENC_KEYID, enc_key_id);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ENC_IPV4_ADDRS, enc_ipv4);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ENC_IPV6_ADDRS, enc_ipv6);
- 	if (FL_KEY_IS_MASKED(&mask->key, enc_ipv4) ||
- 	    FL_KEY_IS_MASKED(&mask->key, enc_ipv6))
+ 	if (FL_KEY_IS_MASKED(mask, enc_ipv4) ||
+ 	    FL_KEY_IS_MASKED(mask, enc_ipv6))
  		FL_KEY_SET(keys, cnt, FLOW_DISSECTOR_KEY_ENC_CONTROL,
  			   enc_control);
- 	FL_KEY_SET_IF_MASKED(&mask->key, keys, cnt,
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
  			     FLOW_DISSECTOR_KEY_ENC_PORTS, enc_tp);
++<<<<<<< HEAD
++=======
+ 	FL_KEY_SET_IF_MASKED(mask, keys, cnt,
+ 			     FLOW_DISSECTOR_KEY_ENC_IP, enc_ip);
++>>>>>>> 33fb5cba11ff (net: sched: cls_flower: change fl_init_dissector to accept mask and dissector)
  
- 	skb_flow_dissector_init(&mask->dissector, keys, cnt);
+ 	skb_flow_dissector_init(dissector, keys, cnt);
  }
  
  static struct fl_flow_mask *fl_create_new_mask(struct cls_fl_head *head,
* Unmerged path net/sched/cls_flower.c
