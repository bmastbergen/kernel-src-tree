drm/nouveau: register backlight on pascal and newer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 15f77c4ade3364106a3a397f0a8d6fce9d6a6326
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/15f77c4a.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 15f77c4ade3364106a3a397f0a8d6fce9d6a6326)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nouveau_backlight.c
diff --cc drivers/gpu/drm/nouveau/nouveau_backlight.c
index 408b955e5c39,c7a94c94dbf3..000000000000
--- a/drivers/gpu/drm/nouveau/nouveau_backlight.c
+++ b/drivers/gpu/drm/nouveau/nouveau_backlight.c
@@@ -276,27 -235,65 +276,48 @@@ nouveau_backlight_init(struct drm_devic
  		return 0;
  	}
  
 -	if (connector->connector_type == DRM_MODE_CONNECTOR_LVDS)
 -		nv_encoder = find_encoder(connector, DCB_OUTPUT_LVDS);
 -	else if (connector->connector_type == DRM_MODE_CONNECTOR_eDP)
 -		nv_encoder = find_encoder(connector, DCB_OUTPUT_DP);
 -	else
 -		return 0;
 -
 +	drm_connector_list_iter_begin(dev, &conn_iter);
 +	drm_for_each_connector_iter(connector, &conn_iter) {
 +		if (connector->connector_type != DRM_MODE_CONNECTOR_LVDS &&
 +		    connector->connector_type != DRM_MODE_CONNECTOR_eDP)
 +			continue;
 +
++<<<<<<< HEAD
 +		switch (device->info.family) {
 +		case NV_DEVICE_INFO_V0_CURIE:
 +			return nv40_backlight_init(connector);
 +		case NV_DEVICE_INFO_V0_TESLA:
 +		case NV_DEVICE_INFO_V0_FERMI:
 +		case NV_DEVICE_INFO_V0_KEPLER:
 +		case NV_DEVICE_INFO_V0_MAXWELL:
 +			return nv50_backlight_init(connector);
 +		default:
 +			break;
 +		}
++=======
+ 	if (!nv_encoder)
+ 		return 0;
+ 
+ 	switch (device->info.family) {
+ 	case NV_DEVICE_INFO_V0_CURIE:
+ 		ret = nv40_backlight_init(nv_encoder, &props, &ops);
+ 		break;
+ 	case NV_DEVICE_INFO_V0_TESLA:
+ 	case NV_DEVICE_INFO_V0_FERMI:
+ 	case NV_DEVICE_INFO_V0_KEPLER:
+ 	case NV_DEVICE_INFO_V0_MAXWELL:
+ 	case NV_DEVICE_INFO_V0_PASCAL:
+ 	case NV_DEVICE_INFO_V0_VOLTA:
+ 	case NV_DEVICE_INFO_V0_TURING:
+ 		ret = nv50_backlight_init(nv_encoder, &props, &ops);
+ 		break;
+ 	default:
+ 		return 0;
++>>>>>>> 15f77c4ade33 (drm/nouveau: register backlight on pascal and newer)
  	}
 -
 -	if (ret == -ENODEV)
 -		return 0;
 -	else if (ret)
 -		return ret;
 -
 -	bl = kzalloc(sizeof(*bl), GFP_KERNEL);
 -	if (!bl)
 -		return -ENOMEM;
 -
 -	if (!nouveau_get_backlight_name(backlight_name, bl)) {
 -		NV_ERROR(drm, "Failed to retrieve a unique name for the backlight interface\n");
 -		goto fail_alloc;
 -	}
 -
 -	bl->dev = backlight_device_register(backlight_name, connector->kdev,
 -					    nv_encoder, ops, &props);
 -	if (IS_ERR(bl->dev)) {
 -		if (bl->id >= 0)
 -			ida_simple_remove(&bl_ida, bl->id);
 -		ret = PTR_ERR(bl->dev);
 -		goto fail_alloc;
 -	}
 -
 -	nouveau_connector(connector)->backlight = bl;
 -	bl->dev->props.brightness = bl->dev->ops->get_brightness(bl->dev);
 -	backlight_update_status(bl->dev);
 +	drm_connector_list_iter_end(&conn_iter);
  
  	return 0;
 -
 -fail_alloc:
 -	kfree(bl);
 -	return ret;
  }
  
  void
* Unmerged path drivers/gpu/drm/nouveau/nouveau_backlight.c
