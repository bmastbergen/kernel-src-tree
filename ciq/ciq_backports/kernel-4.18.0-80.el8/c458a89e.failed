rcu: Switch lazy counts to rcu_data structure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Paul E. McKenney <paulmck@linux.vnet.ibm.com>
commit c458a89e964dbf3c56b23eca2018bd0e2380969d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/c458a89e.failed

This commit removes ->all_lazy, ->nonlazy_posted and ->nonlazy_posted_snap
from the rcu_dynticks structure and updates the code to access them from
the rcu_data structure.

	Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
(cherry picked from commit c458a89e964dbf3c56b23eca2018bd0e2380969d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tree.h
#	kernel/rcu/tree_plugin.h
diff --cc kernel/rcu/tree.h
index 971069b043e9,36a47c7bd882..000000000000
--- a/kernel/rcu/tree.h
+++ b/kernel/rcu/tree.h
@@@ -42,20 -42,7 +42,23 @@@ struct rcu_dynticks 
  	long dynticks_nmi_nesting;  /* Track irq/NMI nesting level. */
  	atomic_t dynticks;	    /* Even value for idle, else odd. */
  	bool rcu_need_heavy_qs;     /* GP old, need heavy quiescent state. */
 +	unsigned long rcu_qs_ctr;   /* Light universal quiescent state ctr. */
  	bool rcu_urgent_qs;	    /* GP old need light quiescent state. */
++<<<<<<< HEAD
 +#ifdef CONFIG_RCU_FAST_NO_HZ
 +	bool all_lazy;		    /* Are all CPU's CBs lazy? */
 +	unsigned long nonlazy_posted;
 +				    /* # times non-lazy CBs posted to CPU. */
 +	unsigned long nonlazy_posted_snap;
 +				    /* idle-period nonlazy_posted snapshot. */
 +	unsigned long last_accelerate;
 +				    /* Last jiffy CBs were accelerated. */
 +	unsigned long last_advance_all;
 +				    /* Last jiffy CBs were all advanced. */
 +	int tick_nohz_enabled_snap; /* Previously seen value from sysfs. */
 +#endif /* #ifdef CONFIG_RCU_FAST_NO_HZ */
++=======
++>>>>>>> c458a89e964d (rcu: Switch lazy counts to rcu_data structure)
  };
  
  /* Communicate arguments to a workqueue handler. */
diff --cc kernel/rcu/tree_plugin.h
index 6d38152e918f,b5aeb2fe4cfe..000000000000
--- a/kernel/rcu/tree_plugin.h
+++ b/kernel/rcu/tree_plugin.h
@@@ -1640,7 -1633,7 +1640,11 @@@ static bool __maybe_unused rcu_try_adva
   */
  int rcu_needs_cpu(u64 basemono, u64 *nextevt)
  {
++<<<<<<< HEAD
 +	struct rcu_dynticks *rdtp = this_cpu_ptr(&rcu_dynticks);
++=======
+ 	struct rcu_data *rdp = this_cpu_ptr(&rcu_data);
++>>>>>>> c458a89e964d (rcu: Switch lazy counts to rcu_data structure)
  	unsigned long dj;
  
  	lockdep_assert_irqs_disabled();
@@@ -1660,10 -1653,10 +1664,10 @@@
  		invoke_rcu_core();
  		return 1;
  	}
 -	rdp->last_accelerate = jiffies;
 +	rdtp->last_accelerate = jiffies;
  
  	/* Request timer delay depending on laziness, and round. */
- 	if (!rdtp->all_lazy) {
+ 	if (!rdp->all_lazy) {
  		dj = round_up(rcu_idle_gp_delay + jiffies,
  			       rcu_idle_gp_delay) - jiffies;
  	} else {
@@@ -1686,10 -1679,8 +1690,14 @@@
  static void rcu_prepare_for_idle(void)
  {
  	bool needwake;
++<<<<<<< HEAD
 +	struct rcu_data *rdp;
 +	struct rcu_dynticks *rdtp = this_cpu_ptr(&rcu_dynticks);
++=======
+ 	struct rcu_data *rdp = this_cpu_ptr(&rcu_data);
++>>>>>>> c458a89e964d (rcu: Switch lazy counts to rcu_data structure)
  	struct rcu_node *rnp;
 +	struct rcu_state *rsp;
  	int tne;
  
  	lockdep_assert_irqs_disabled();
@@@ -1773,14 -1761,14 +1781,24 @@@ static void rcu_idle_count_callbacks_po
  
  static void print_cpu_stall_fast_no_hz(char *cp, int cpu)
  {
++<<<<<<< HEAD
 +	struct rcu_dynticks *rdtp = &per_cpu(rcu_dynticks, cpu);
 +	unsigned long nlpd = rdtp->nonlazy_posted - rdtp->nonlazy_posted_snap;
++=======
+ 	struct rcu_data *rdp = &per_cpu(rcu_data, cpu);
+ 	unsigned long nlpd = rdp->nonlazy_posted - rdp->nonlazy_posted_snap;
++>>>>>>> c458a89e964d (rcu: Switch lazy counts to rcu_data structure)
  
  	sprintf(cp, "last_accelerate: %04lx/%04lx, nonlazy_posted: %ld, %c%c",
 -		rdp->last_accelerate & 0xffff, jiffies & 0xffff,
 +		rdtp->last_accelerate & 0xffff, jiffies & 0xffff,
  		ulong2long(nlpd),
++<<<<<<< HEAD
 +		rdtp->all_lazy ? 'L' : '.',
 +		rdtp->tick_nohz_enabled_snap ? '.' : 'D');
++=======
+ 		rdp->all_lazy ? 'L' : '.',
+ 		rdp->tick_nohz_enabled_snap ? '.' : 'D');
++>>>>>>> c458a89e964d (rcu: Switch lazy counts to rcu_data structure)
  }
  
  #else /* #ifdef CONFIG_RCU_FAST_NO_HZ */
* Unmerged path kernel/rcu/tree.h
* Unmerged path kernel/rcu/tree_plugin.h
