x86/hyper-v: Trace PV IPI send

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 58ec5e9c9044bd7e1c0bcc6ad822b2e909f49732
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/58ec5e9c.failed

Trace Hyper-V PV IPIs the same way we do PV TLB flush.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: devel@linuxdriverproject.org
	Cc: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Cc: Stephen Hemminger <sthemmin@microsoft.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Tianyu Lan <Tianyu.Lan@microsoft.com>
	Cc: "Michael Kelley (EOSG)" <Michael.H.Kelley@microsoft.com>
Link: https://lkml.kernel.org/r/20180622170625.30688-5-vkuznets@redhat.com

(cherry picked from commit 58ec5e9c9044bd7e1c0bcc6ad822b2e909f49732)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/trace/hyperv.h
diff --cc arch/x86/include/asm/trace/hyperv.h
index e1ffe61de8d6,9c0d4b588e3f..000000000000
--- a/arch/x86/include/asm/trace/hyperv.h
+++ b/arch/x86/include/asm/trace/hyperv.h
@@@ -28,18 -28,19 +28,34 @@@ TRACE_EVENT(hyperv_mmu_flush_tlb_others
  		      __entry->addr, __entry->end)
  	);
  
++<<<<<<< HEAD
 +TRACE_EVENT(hyperv_nested_flush_guest_mapping,
 +	    TP_PROTO(u64 as, int ret),
 +	    TP_ARGS(as, ret),
 +
 +	    TP_STRUCT__entry(
 +		    __field(u64, as)
 +		    __field(int, ret)
 +		    ),
 +	    TP_fast_assign(__entry->as = as;
 +			   __entry->ret = ret;
 +		    ),
 +	    TP_printk("address space %llx ret %d", __entry->as, __entry->ret)
++=======
+ TRACE_EVENT(hyperv_send_ipi_mask,
+ 	    TP_PROTO(const struct cpumask *cpus,
+ 		     int vector),
+ 	    TP_ARGS(cpus, vector),
+ 	    TP_STRUCT__entry(
+ 		    __field(unsigned int, ncpus)
+ 		    __field(int, vector)
+ 		    ),
+ 	    TP_fast_assign(__entry->ncpus = cpumask_weight(cpus);
+ 			   __entry->vector = vector;
+ 		    ),
+ 	    TP_printk("ncpus %d vector %x",
+ 		      __entry->ncpus, __entry->vector)
++>>>>>>> 58ec5e9c9044 (x86/hyper-v: Trace PV IPI send)
  	);
  
  #endif /* CONFIG_HYPERV */
diff --git a/arch/x86/hyperv/hv_apic.c b/arch/x86/hyperv/hv_apic.c
index b8b411beb2f9..ff80c6cedd4e 100644
--- a/arch/x86/hyperv/hv_apic.c
+++ b/arch/x86/hyperv/hv_apic.c
@@ -31,6 +31,8 @@
 #include <asm/mshyperv.h>
 #include <asm/apic.h>
 
+#include <asm/trace/hyperv.h>
+
 static struct apic orig_apic;
 
 static u64 hv_apic_icr_read(void)
@@ -136,6 +138,8 @@ static bool __send_ipi_mask(const struct cpumask *mask, int vector)
 	struct ipi_arg_non_ex ipi_arg;
 	int ret = 1;
 
+	trace_hyperv_send_ipi_mask(mask, vector);
+
 	if (cpumask_empty(mask))
 		return true;
 
* Unmerged path arch/x86/include/asm/trace/hyperv.h
