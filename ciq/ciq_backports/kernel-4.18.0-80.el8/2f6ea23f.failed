arm64: KVM: Avoid marking pages as XN in Stage-2 if CTR_EL0.DIC is set

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Marc Zyngier <marc.zyngier@arm.com>
commit 2f6ea23f63cca99cd514c221f075c986b57c927e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/2f6ea23f.failed

On systems where CTR_EL0.DIC is set, we don't need to perform
icache invalidation to guarantee that we'll fetch the right
instruction stream.

This also means that taking a permission fault to invalidate the
icache is an unnecessary overhead.

On such systems, we can safely leave the page as being executable.

	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Acked-by: Mark Rutland <mark.rutland@arm.com>
	Acked-by: Christoffer Dall <christoffer.dall@arm.com>
	Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
(cherry picked from commit 2f6ea23f63cca99cd514c221f075c986b57c927e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/pgtable-prot.h
diff --cc arch/arm64/include/asm/pgtable-prot.h
index 108ecad7acc5,78b942c1bea4..000000000000
--- a/arch/arm64/include/asm/pgtable-prot.h
+++ b/arch/arm64/include/asm/pgtable-prot.h
@@@ -67,8 -67,28 +67,33 @@@
  #define PAGE_HYP_RO		__pgprot(_HYP_PAGE_DEFAULT | PTE_HYP | PTE_RDONLY | PTE_HYP_XN)
  #define PAGE_HYP_DEVICE		__pgprot(PROT_DEVICE_nGnRE | PTE_HYP)
  
++<<<<<<< HEAD
 +#define PAGE_S2			__pgprot(_PROT_DEFAULT | PTE_S2_MEMATTR(MT_S2_NORMAL) | PTE_S2_RDONLY | PTE_S2_XN)
 +#define PAGE_S2_DEVICE		__pgprot(_PROT_DEFAULT | PTE_S2_MEMATTR(MT_S2_DEVICE_nGnRE) | PTE_S2_RDONLY | PTE_S2_XN)
++=======
+ #define PAGE_S2_MEMATTR(attr)						\
+ 	({								\
+ 		u64 __val;						\
+ 		if (cpus_have_const_cap(ARM64_HAS_STAGE2_FWB))		\
+ 			__val = PTE_S2_MEMATTR(MT_S2_FWB_ ## attr);	\
+ 		else							\
+ 			__val = PTE_S2_MEMATTR(MT_S2_ ## attr);		\
+ 		__val;							\
+ 	 })
+ 
+ #define PAGE_S2_XN							\
+ 	({								\
+ 		u64 __val;						\
+ 		if (cpus_have_const_cap(ARM64_HAS_CACHE_DIC))		\
+ 			__val = 0;					\
+ 		else							\
+ 			__val = PTE_S2_XN;				\
+ 		__val;							\
+ 	})
+ 
+ #define PAGE_S2			__pgprot(_PROT_DEFAULT | PAGE_S2_MEMATTR(NORMAL) | PTE_S2_RDONLY | PAGE_S2_XN)
+ #define PAGE_S2_DEVICE		__pgprot(_PROT_DEFAULT | PAGE_S2_MEMATTR(DEVICE_nGnRE) | PTE_S2_RDONLY | PAGE_S2_XN)
++>>>>>>> 2f6ea23f63cc (arm64: KVM: Avoid marking pages as XN in Stage-2 if CTR_EL0.DIC is set)
  
  #define PAGE_NONE		__pgprot(((_PAGE_DEFAULT) & ~PTE_VALID) | PTE_PROT_NONE | PTE_RDONLY | PTE_NG | PTE_PXN | PTE_UXN)
  #define PAGE_SHARED		__pgprot(_PAGE_DEFAULT | PTE_USER | PTE_NG | PTE_PXN | PTE_UXN | PTE_WRITE)
* Unmerged path arch/arm64/include/asm/pgtable-prot.h
