pktcdvd: remove queue_lock around blk_queue_max_hw_sectors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Christoph Hellwig <hch@lst.de>
commit a50f9aec1ac713dd25f1b1b443d97aa2fc69f740
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/a50f9aec.failed

blk_queue_max_hw_sectors can't do anything with queue_lock protection
so don't hold it.

	Reviewed-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit a50f9aec1ac713dd25f1b1b443d97aa2fc69f740)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/pktcdvd.c
diff --cc drivers/block/pktcdvd.c
index d77895a8ff90,f5a71023f76c..000000000000
--- a/drivers/block/pktcdvd.c
+++ b/drivers/block/pktcdvd.c
@@@ -2203,9 -2203,7 +2203,13 @@@ static int pkt_open_dev(struct pktcdvd_
  		 * Some CDRW drives can not handle writes larger than one packet,
  		 * even if the size is a multiple of the packet size.
  		 */
++<<<<<<< HEAD
 +		spin_lock_irq(q->queue_lock);
  		blk_queue_max_hw_sectors(q, pd->settings.size);
 +		spin_unlock_irq(q->queue_lock);
++=======
++		blk_queue_max_hw_sectors(q, pd->settings.size);
++>>>>>>> a50f9aec1ac7 (pktcdvd: remove queue_lock around blk_queue_max_hw_sectors)
  		set_bit(PACKET_WRITABLE, &pd->flags);
  	} else {
  		pkt_set_speed(pd, MAX_SPEED, MAX_SPEED);
* Unmerged path drivers/block/pktcdvd.c
