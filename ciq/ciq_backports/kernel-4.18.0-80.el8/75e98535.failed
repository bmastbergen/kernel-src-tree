net: hns3: Remove print messages for error packet

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Jian Shen <shenjian15@huawei.com>
commit 75e98535182df92908e469bdbe4e84e983c1113c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/75e98535.failed

There are already multiple types packets statistics for error packets,
it's unnecessary to print them, which may affect the rx performance if
print too many.

	Signed-off-by: Jian Shen <shenjian15@huawei.com>
	Signed-off-by: Peng Li <lipeng321@huawei.com>
	Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 75e98535182df92908e469bdbe4e84e983c1113c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
index b3b7dabe1791,5a4773a9b4a5..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
@@@ -2093,14 -2142,13 +2093,21 @@@ static void hns3_rx_checksum(struct hns
  		return;
  
  	/* check if hardware has done checksum */
 -	if (!hnae3_get_bit(bd_base_info, HNS3_RXD_L3L4P_B))
 +	if (!hnae_get_bit(bd_base_info, HNS3_RXD_L3L4P_B))
  		return;
  
++<<<<<<< HEAD
 +	if (unlikely(hnae_get_bit(l234info, HNS3_RXD_L3E_B) ||
 +		     hnae_get_bit(l234info, HNS3_RXD_L4E_B) ||
 +		     hnae_get_bit(l234info, HNS3_RXD_OL3E_B) ||
 +		     hnae_get_bit(l234info, HNS3_RXD_OL4E_B))) {
 +		netdev_err(netdev, "L3/L4 error pkt\n");
++=======
+ 	if (unlikely(hnae3_get_bit(l234info, HNS3_RXD_L3E_B) ||
+ 		     hnae3_get_bit(l234info, HNS3_RXD_L4E_B) ||
+ 		     hnae3_get_bit(l234info, HNS3_RXD_OL3E_B) ||
+ 		     hnae3_get_bit(l234info, HNS3_RXD_OL4E_B))) {
++>>>>>>> 75e98535182d (net: hns3: Remove print messages for error packet)
  		u64_stats_update_begin(&ring->syncp);
  		ring->stats.l3l4_csum_err++;
  		u64_stats_update_end(&ring->syncp);
@@@ -2274,9 -2326,7 +2281,13 @@@ static int hns3_handle_rx_bd(struct hns
  					       vlan_tag);
  	}
  
++<<<<<<< HEAD
 +	if (unlikely(!hnae_get_bit(bd_base_info, HNS3_RXD_VLD_B))) {
 +		netdev_err(netdev, "no valid bd,%016llx,%016llx\n",
 +			   ((u64 *)desc)[0], ((u64 *)desc)[1]);
++=======
+ 	if (unlikely(!hnae3_get_bit(bd_base_info, HNS3_RXD_VLD_B))) {
++>>>>>>> 75e98535182d (net: hns3: Remove print messages for error packet)
  		u64_stats_update_begin(&ring->syncp);
  		ring->stats.non_vld_descs++;
  		u64_stats_update_end(&ring->syncp);
@@@ -2286,8 -2336,7 +2297,12 @@@
  	}
  
  	if (unlikely((!desc->rx.pkt_len) ||
++<<<<<<< HEAD
 +		     hnae_get_bit(l234info, HNS3_RXD_TRUNCAT_B))) {
 +		netdev_err(netdev, "truncated pkt\n");
++=======
+ 		     hnae3_get_bit(l234info, HNS3_RXD_TRUNCAT_B))) {
++>>>>>>> 75e98535182d (net: hns3: Remove print messages for error packet)
  		u64_stats_update_begin(&ring->syncp);
  		ring->stats.err_pkt_len++;
  		u64_stats_update_end(&ring->syncp);
@@@ -2296,8 -2345,7 +2311,12 @@@
  		return -EFAULT;
  	}
  
++<<<<<<< HEAD
 +	if (unlikely(hnae_get_bit(l234info, HNS3_RXD_L2E_B))) {
 +		netdev_err(netdev, "L2 error pkt\n");
++=======
+ 	if (unlikely(hnae3_get_bit(l234info, HNS3_RXD_L2E_B))) {
++>>>>>>> 75e98535182d (net: hns3: Remove print messages for error packet)
  		u64_stats_update_begin(&ring->syncp);
  		ring->stats.l2_err++;
  		u64_stats_update_end(&ring->syncp);
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3_enet.c
