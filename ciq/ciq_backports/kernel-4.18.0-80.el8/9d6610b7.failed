nvme-mpath: remove I/O polling support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 9d6610b76fa374eae3deb93bcbace4a06c2e3b95
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/9d6610b7.failed

The ->poll_fn has been stale for a while, as a lot of places check for mq
ops.  But there is no real point in it anyway, as we don't even use
the multipath code for subsystems without multiple ports, which is usually
what we do high performance I/O to.  If it really becomes an issue we
should rework the nvme code to also skip the multipath code for any
private namespace, even if that could mean some trouble when rescanning.

	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 9d6610b76fa374eae3deb93bcbace4a06c2e3b95)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/multipath.c
diff --cc drivers/nvme/host/multipath.c
index ff1655bfa2c9,ec310b1b9267..000000000000
--- a/drivers/nvme/host/multipath.c
+++ b/drivers/nvme/host/multipath.c
@@@ -133,21 -220,6 +133,24 @@@ static blk_qc_t nvme_ns_head_make_reque
  	return ret;
  }
  
++<<<<<<< HEAD
 +static bool nvme_ns_head_poll(struct request_queue *q, blk_qc_t qc)
 +{
 +	struct nvme_ns_head *head = q->queuedata;
 +	struct nvme_ns *ns;
 +	bool found = false;
 +	int srcu_idx;
 +
 +	srcu_idx = srcu_read_lock(&head->srcu);
 +	ns = srcu_dereference(head->current_path, &head->srcu);
 +	if (likely(ns && ns->ctrl->state == NVME_CTRL_LIVE))
 +		found = ns->queue->poll_fn(q, qc);
 +	srcu_read_unlock(&head->srcu, srcu_idx);
 +	return found;
 +}
 +
++=======
++>>>>>>> 9d6610b76fa3 (nvme-mpath: remove I/O polling support)
  static void nvme_requeue_work(struct work_struct *work)
  {
  	struct nvme_ns_head *head =
* Unmerged path drivers/nvme/host/multipath.c
