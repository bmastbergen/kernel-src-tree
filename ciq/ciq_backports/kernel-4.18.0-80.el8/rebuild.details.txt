Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 4546
Number of commits matched with upstream: 4250 (93.49%)
Number of commits in upstream but not in rpm: 483888
Number of commits NOT found in upstream: 296 (6.51%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-80.el8 for kernel-4.18.0-80.el8
Clean Cherry Picks: 3762 (88.52%)
Empty Cherry Picks: 475 (11.18%)
_______________________________

__EMPTY COMMITS__________________________
bd096f6443194e57382686a3ac5f2ce4e82b55d7 KVM: s390: Add skey emulation fault handling
7a6873be1b11517a0c55ab4534e4de54b3e228a3 ide-cd: Remove redundant sense buffer
b86d865cb1cae1e61527ea0b8977078bbf694328 blkcg: Make blkg_root_lookup() work for queues in bypass mode
58ec5e9c9044bd7e1c0bcc6ad822b2e909f49732 x86/hyper-v: Trace PV IPI send
be0e16ce7c3bf9855f1ef5ae46cf889e1784ddea x86/hyper-v: Fix wrong merge conflict resolution
1e4511604dfaf6d1642603ff89effb9e93682716 PCI/AER: Expose internal API for obtaining AER information
a11bdb1a6b782ee97587f92fae798efc78c31093 KVM: s390: Fix pfmf and conditional skey emulation
5544adb9707fda5d54494c37940701894c16b9a0 flow_dissector: Dissect tos and ttl from the tunnel info
0e2c17b64d5c7f57bcd7054ef87797376dcdee26 net/sched: cls_flower: Support matching on ip tos and ttl for tunnels
17dbca119312b4e8173d4e25ff64262119fcef38 x86/speculation/l1tf: Add sysfs reporting for l1tf
a399477e52c17e148746d3ce9a483f681c2aa9a0 x86/KVM/VMX: Add module argument for L1TF mitigation
a47dd5f06714c844b33f3b5f517b6f3e81ce57b5 x86/KVM/VMX: Add L1D flush algorithm
3fa045be4c720146b18a19cea7a767dc6ad5df94 x86/KVM/VMX: Add L1D MSR based flush
c595ceee45707f00f64f61c54fb64ef0cc0b4e85 x86/KVM/VMX: Add L1D flush logic
390d975e0c4e60ce70d4157e0dd91ede37824603 x86/KVM/VMX: Use MSR save list for IA32_FLUSH_CMD if required
72c6d2db64fa18c996ece8f06e499509e6c9a37e x86/litf: Introduce vmx status variable
2f055947ae5e2741fb2dc5bba1033c417ccf4faa x86/kvm: Drop L1TF MSR list approach
a7b9020b06ec6d7c3f3b0d4ef1a9eba12654f4f7 x86/l1tf: Handle EPT disabled state proper
7db92e165ac814487264632ab2624e832f20ae38 x86/kvm: Move l1tf setup function
4c6523ec59fe895ea352a650218a6be0653910b1 x86/kvm: Add static key for flush always
dd4bfa739a72508b75760b393d129ed7b431daab x86/kvm: Serialize L1D flush parameter setter
895ae47f9918833c3a880fbccd41e0692b37e7d9 x86/kvm: Allow runtime control of L1D flush
d90a7a0ec83fb86622cd7dae23255d3c50a99ec8 x86/bugs, kvm: Introduce boot-time control of L1TF mitigations
288d152c23dcf3c09da46c5c481903ca10ebfef7 x86/KVM/VMX: Initialize the vmx_l1d_flush_pages' content
379fd0c7e6a391e5565336a646f19f218fb98c6c x86/KVM/VMX: Don't set l1tf_flush_l1d to true from vmx_l1d_flush()
427362a142441f08051369db6fbe7f61c73b3dca x86/KVM/VMX: Replace 'vmx_l1d_flush_always' with 'vmx_l1d_flush_cond'
5b6ccc6c3b1a477fbac9ec97a0b4c1c48e765209 x86/KVM/VMX: Move the l1tf_flush_l1d test to vmx_l1d_flush()
45b575c00d8e72d69d75dd8c112f044b7b01b069 x86/KVM/VMX: Introduce per-host-cpu analogue of l1tf_flush_l1d
ea156d192f5257a5bf393d33910d3b481bf8a401 x86/speculation: Simplify sysfs report of VMX L1TF vulnerability
8e0b2b916662e09dd4d09e5271cdf214c6b80e62 x86/speculation: Use ARCH_CAPABILITIES to skip L1D flush on vmentry
5b76a3cff011df2dcb6186c965a2e4d809a05ad4 KVM: VMX: Tell the nested hypervisor to skip L1D flush on vmentry
d806afa495e2e2a1a726e26c5e44f27818e804c1 x86/kvm/vmx: Fix coding style in vmx_setup_l1d_flush()
0027ff2a75f9dcf0537ac0a65c5840b0e21a4950 KVM: VMX: fixes for vmentry_l1d_flush module parameter
48a8b97cfd804a965fbbe7be2d56a7984ef6bdb1 x86/mm: Only use tlb_remove_table() for paravirt
2f6ea23f63cca99cd514c221f075c986b57c927e arm64: KVM: Avoid marking pages as XN in Stage-2 if CTR_EL0.DIC is set
00a5c58d9499bd0c290b57205f43a70f2e69d3f6 KVM: PPC: Make iommu_table::it_userspace big endian
090bad39b237aad92d8e01baa033699cf0c81cbe powerpc/powernv: Add indirect levels to it_userspace
9bc98c8a43c4900ee63b160f805c65051e35d917 powerpc/powernv: Rework TCE level allocation
a68bd1267b7286b1687905651b404e765046de25 powerpc/powernv/ioda: Allocate indirect TCE levels on demand
96dc89d526ef77604376f06220e3d2931a0bfd58 powerpc/tm: Avoid possible userspace r1 corruption on reclaim
9df9516940a61d29aedf4d91b483ca6597e7d480 x86/speculation/l1tf: Fix overflow in l1tf_pfn_limit() on 32bit
b0a182f875689647b014bc01d36b340217792852 x86/speculation/l1tf: Fix off-by-one error when warning that system has too much RAM
cc51e5428ea54f575d49cfcede1d4cb3a72b4ec4 x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+
d6488ac19aabcc6c85a74b69eaf1b7301124c323 PCI: Mark fall-through switch cases before enabling -Wimplicit-fallthrough
11eb0e0e8dea8b97cff972b09cf6fb033b729dff PCI: Make early dump functionality generic
ad281ecf1c7d4c905607e049b967bb6412587ca1 PCI: Add DMA alias quirk for Microsemi Switchtec NTB
1842623850d09b0b1147d4974573aa305658d97f PCI: Handle error return from pci_reset_bridge_secondary_bus()
381634cad15b711e033a2638d558232b60f753f6 PCI: Hide pci_reset_bridge_secondary_bus() from drivers
bfc456060d0cbcf6902a436d358b60cb1534668c IB/hfi1,PCI: Allow bus reset while probing
3425d934fc0312f62024163736a7afe4de20c10f efi/x86: Handle page faults occurring while running EFI runtime services
59b57717fff8b562825d9d25e0180ad7e8048ca9 blkcg: delay blkg destruction until after writeback has finished
530ca2c9bd6949c72c9b5cfc330cb3dbccaa3f5b blk-mq: Allow blocking queue tag iter callbacks
c1af5427954b6a7f8c34b9778b1e1c9f1d9af302 net: aquantia: Ethtool based ring size configuration
288551de45aa39a751bc03e7976919aa896c5093 net: aquantia: Implement rx/tx flow control ethtools callback
b8d68b62d99355c827243c62f00de70168e1661f net: aquantia: Add renegotiate ethtool operation support
a0da96c08cfacc97d16330e12be2135f502017dd net: aquantia: implement WOL support
92ab64079d6b750c2b6860d988b6c912a7eddfef net: aquantia: implement EEE support
e91578488fd0ccb5d1e94c46117901af8f0c34dc net: aquantia: whitespace changes
8f60f762aa3d4c8b940ac01d6c0bbb5ec2361d6b net: aquantia: renaming for better visibility
3d5537f9d468a6afa6c07f6681a4adac0237c235 net: aquantia: Make function aq_fw1x_set_power() static
358aa5ce288aa1085f0f3ef9f315119563fa6541 net/mlx5e: Vxlan, move vxlan logic to core driver
342ac8448f1fb213908656ae5581d0f37a5954e8 net/mlx5: Use max_num_eqs for calculation of required MSIX vectors
fe6d86b3c3165e6c55d6b0049a13d3b65371163a net/mlx5e: Add CONFIG_MLX5_EN_RXNFC for ethtool rx nfc
ec080045977073c5e69a7fddee3a8aef9bf62881 net/mlx5e: Add CONFIG_MLX5_EN_ARFS for accelerated flow steering support
44f68ae0cad6afbd72d3de1c7b0e149c1655b626 net/mlx5e: Move flow steering declarations into en/fs.h
c5791ab0abecb5e4a41673b83e3660f731b0717b net/mlx5e: vxlan.c depends on CONFIG_VXLAN
6dbc80ca41f5a76e0d2ae4e96b2476d68a2ea17f net/mlx5e: clock.c depends on CONFIG_PTP_1588_CLOCK
a8274b854b5e7c78187d7b9eaf701e1f6e1ccfcb net/mlx5: Reorganize the makefile
9c29bcd189f4ab1644b7125713602532d0aefdb7 mlx5: remove ndo_poll_controller
4d8fcf216c90bc25e34ae2200aa8985ee3158898 net/mlx5e: Avoid unbounded peer devices when unpairing TC hairpin rules
fcd29ad17c6ff885dfae58f557e9323941e63ba2 net/mlx5: Add Fast teardown support
41f4e631daf80d16d818ac17c4144bd5b9a11f33 KVM: PPC: Book3S HV: Extract PMU save/restore operations as C-callable functions
7854f7545bff69567fc3fcd8831752138b892483 KVM: PPC: Book3S: Rework TM save/restore code and make it C-callable
95a6432ce903858a2f285d611275340aa574c6ac KVM: PPC: Book3S HV: Streamlined guest entry/exit path on P9 for radix guests
360cae313702cdd0b90f82c261a8302fecef030a KVM: PPC: Book3S HV: Nested guest entry via hypercall
4bad77799fede9d95abaf499fff385608ee14877 KVM: PPC: Book3S HV: Handle hypercalls correctly when nested
fd10be257312b5d883f89d62d691443e95678fdd KVM: PPC: Book3S HV: Handle page fault for a nested guest
8cf531ed48cfc76f370369a372802a65361df27c KVM: PPC: Book3S HV: Introduce rmap to track nested guest mappings
e3b6b4661527e821ffbe3db83952fdb1e6e47c49 KVM: PPC: Book3S HV: Implement H_TLB_INVALIDATE hcall
690ed4cad87a34781a7f3c34a6cebda6cc2cc06c KVM: PPC: Book3S HV: Use hypercalls for TLB invalidation when nested
9d0b048da788c1df927d808bb60e7fd4f19a3a12 KVM: PPC: Book3S HV: Invalidate TLB when nested vcpu moves physical cpu
f3c99f97a3cda284418af6e242e06b351b83f647 KVM: PPC: Book3S HV: Don't access HFSCR, LPIDR or LPCR when running nested
73937deb4b2d7f08ac48e9125de889c757a7a9b3 KVM: PPC: Book3S HV: Sanitise hv_regs on nested guest entry
10b5022db7861a98f3d9a87eed8405f2d4e37ed6 KVM: PPC: Book3S HV: Handle differing endianness for H_ENTER_NESTED
83a055104eaf89589582659737ff5bf6eed63ac4 KVM: PPC: Book3S HV: Add nested shadow page tables to debugfs
aa069a996951f3e2e38437ef0316685a5893fc7e KVM: PPC: Book3S HV: Add a VM capability to enable nested virtualization
582f58de36834096a91cc1de2540c2f7269f850d drm/amdgpu: Suppress keypresses from ACPI_VIDEO events
7582df826734bad71522b442b8977e3dee63a77a RDMA/core: Avoid holding lock while initializing fields on stack
308aa2b8f7b7db3332a7d41099fd37851fb793b2 iw_cxgb4: only allow 1 flush on user qps
2a3f93459d689d990b3ecfbe782fec89b97d3279 arm64: KVM: Sanitize PSTATE.M when being set from userspace
05296620f6d14dce0030b87e1e57891a770fb65c xdp: factor out common program/flags handling from drivers
a25717d2b604347d9af8da81deea7b08e8c94220 xdp: support simultaneous driver and hw XDP attachment
799e173d7125155c00e9492c8212c5e41333049f netdevsim: add support for simultaneous driver and hw XDP
99dadb6e3ec130800d199ec42fff03242b1be1eb selftests/bpf: add test for multiple programs
202aabe84a8fd809e8f401bc05e20f35a5102ece xdp: fix uninitialized 'err' variable
b0d1beeff2a97a0cf1965ea8f1d13b8973f22582 xdp: implement convert_to_xdp_frame for MEM_TYPE_ZERO_COPY
fa0f527358bd900ef92f925878ed6bfbd51305cc ip: use rb trees for IP frag queue.
70837ffe3085c9a91488b52ca13ac84424da1042 ipv4: frags: precedence bug in ip_expire()
a4fd284a1f8fd4b6c59aa59db2185b1e17c5c11c ip: process in-order fragments efficiently
0ff89efb524631ac9901b81446b453c29711c376 ip: fail fast on IP defrag errors
5d407b071dc369c26a38398326ee2be53651cfe4 ip: frags: fix crash in ip_do_fragment()
1aa28fb98368078bcaf527bf46c0e001db934414 i40evf: remove ndo_poll_controller
eaeb398425089cb3c8edc81a406109db94b2705c IB/ipoib: Move init code to ndo_init
9f49a5b5c21d58aa84e16cfdc5e99e49faefcb7a RDMA/netdev: Use priv_destructor for netdev cleanup
ee190ab734ba4d3c7887bd193ce8124385738e44 IB/ipoib: Get rid of the sysfs_mutex
25405d98a2aa0b9983bb9c36b0b00815d39394f4 IB/ipoib: Do not remove child devices from within the ndo_uninit
13476d35bba60b59521ff25d902fdb552b8bf2ac IB/ipoib: Maintain the child_intfs list from ndo_init/uninit
760109760455a0a35491cb02a3bc3e15f0c180f6 IB/ipoib: Consolidate checking of the proposed child interface
f6a8a19bb11b46d60250ddc4e3e1ba6aa166f488 RDMA/netdev: Hoist alloc_netdev_mqs out of the driver
5d6b0cb3369df425de75c94c98eb3f1a86659022 RDMA/netdev: Fix netlink support in IPoIB
182570b26223deea0eaf09ba384c79a29d0a328f net/mlx5e: Gather common netdev init/cleanup functionality in one place
303211b44ce3faa4456f78ed725d80e0212aa842 net/mlx5e: Always initialize update stats delayed work
519a0bf5b20c370fb05ee05ea6c00e1377c13229 net/mlx5e: Initialize all netdev common structures in one place
cdeef2b1528b6faa7a7e60de7a56c48bc6838ae6 net/mlx5e: Use non-delayed work for update stats
779d986d60de51aabc3bec385f92b832089c5c01 net/mlx5e: Do not ignore netdevice TX/RX queues number
532c00c97f16a2a8576d453ae13ddc38162faed4 rcu: Remove rsp parameter from rcu_gp_kthread_wake()
0854a05c9fa554930174f0fa7453c18f99108a4a rcu: Remove rsp parameter from rcu_gp_kthread() and friends
63d4c8c97948b0be8cb7ef3b7b943c25864eae4b rcu: Remove rsp parameter from expedited grace-period functions
aedf4ba984168ab5b96898a03bfdb51d07194776 rcu: Remove rsp parameter from rcu_node tree accessor macros
88d1bead858d88cdda92ed8f3388eea8ee3a9675 rcu: Remove rcu_data structure's ->rsp field
b97d23c51c9fee56b0c7598c323ab2846d873f2d rcu: Remove for_each_rcu_flavor() flavor-traversal macro
9cbc5b97029bff2db7fb413d6ce588d38373834c rcu: Eliminate grace-period management code use of rsp
ec9f5835f74cba5cc2285d3032bb2b16afc312c3 rcu: Eliminate RCU-barrier use of rsp
eb7a6653887b540a81d1b91ee0fc68b604da9386 rcu: Eliminate initialization-time use of rsp
4e95020cdd34bbfc86f9c705f4d46ed63fa2e231 rcu: Inline increment_cpu_stall_ticks() into its sole caller
c3854a055bc834806b481b34f5f552ac415b2000 rcu: Pull rcu_gp_kthread() FQS loop into separate function
7f87c036fea3c17eb6a6e4f4164c67aeb98710ea rcu: Clean up flavor-related definitions and comments in rcu.h
dd46a7882c2c2006201e053ebf5e9ad761860cc0 rcu: Inline _rcu_barrier() into its sole remaining caller
92aa39e9dc77481b90cbef25e547d66cab901496 rcu: Make need_resched() respond to urgent RCU-QS needs
a0ef9ec24144799b5b47fa54c38f9a0f9dfe9a59 rcu: Provide improved interrupt-from-idle check in rcu_check_callbacks()
7e28c5af4ef6b539334aa5de40feca0c041c94df rcu: Eliminate ->rcu_qs_ctr from the rcu_dynticks structure
c06aed0e31008a248c1841f1b7fc80e9ee242a31 rcu: Compute jiffies_till_sched_qs from other kernel parameters
d3052109c0bc9e536d17d627ae628ed8ceb6928c rcu: More aggressively enlist scheduler aid for nohz_full CPUs
df63fa5bc11aadf81126d4a1785080c800e2ece3 rcu: Convert "1UL << x" to "BIT(x)"
0fd79e7521bc944522c3c97f40f3d25619e329f4 rcu: Switch ->tick_nohz_enabled_snap to rcu_data structure
5998a75adbf4f85e63b06fa7723633cc84d7129b rcu: Switch last accelerate/advance to rcu_data structure
c458a89e964dbf3c56b23eca2018bd0e2380969d rcu: Switch lazy counts to rcu_data structure
2dba13f0b6c2b26ff371b8927ac58d20a7d94713 rcu: Switch urgent quiescent-state requests to rcu_data structure
4c5273bf2b5ed9b585e470dda19c09c875a9fbbd rcu: Switch dyntick nesting counters to rcu_data structure
dc5a4f2932f18568bb9d8cdbe2139a8ddbc28bb8 rcu: Switch ->dynticks to rcu_data structure, remove rcu_dynticks
8d8a9d0e7eda9feeee4af7be31932e14b512d3ad rcu: Remove obsolete ->dynticks_fqs and ->cond_resched_completed
894d45bbf7e7569ec2aa845155801fd503b5f1bf rcu: Convert rcu_state.ofl_lock to raw_spinlock_t
224de549f0beca58fb95c0b8da9cb2bfa8c6cc12 nfp: flower: reject tunnel encap with ipv6 outer headers for offloading
db191db813722297be36ffce2862e0f2b0e54d82 nfp: flower: fix vlan match by checking both vlan id and vlan pcp
c26b5aa8ef0d46035060fded475e6ab957b9f69f gfs2: Fix iomap buffer head reference counting bug
94675cceacaec27a30eefb142c4c59a9d3131742 powerpc/pseries: Defer the logging of rtas error to irq work queue.
c6d15258cdf1c197cad7b11b9848e79068dd21e0 powerpc/pseries: Dump the SLB contents on SLB MCE errors.
b5d29843d8ef86d4cde4742e095b81b7fd41e688 drm/atomic_helper: Allow DPMS On<->Off changes for unregistered connectors
39b50c603878f4f8ae541ac4088a805d588abc79 drm/atomic_helper: Stop modesets on unregistered connectors harder
b93f654d73fa09088041efa77972b1d616a75fcb f2fs: remove request_list check in is_idle()
965b652e901886ea54f93c60027b5be76328d958 block: Expose queue nr_zones in sysfs
aae3b069d5ce865ca5ef2902c2a22cef7ab4f3a2 bsg: pass in desired timeout handler
5e28b8d8a1b03ce86f33d38a64a4983d2b5c7679 bsg: provide bsg_remove_queue() helper
cd2f076f1d7ac20a93029ab38646b303f1c1468e bsg: convert to use blk-mq
f382fb0bcef4c37dc049e9f6963e3baf204d815c block: remove legacy IO schedulers
a1ce35fa49852db60fc6e268038530be533c5b15 block: remove dead elevator code
f9cd4bfe96955e7a1d3ec54b393dee87b815ba3b block: get rid of MQ scheduler ops union
92bc5a24844ada9b010f03c49a493e3edeadaa54 block: remove __blk_put_request()
4316b79e4321d4140164e42f228778e5bc66c84f block: kill legacy parts of timeout handling
1028e4b335665290dc563d5272f3c6b84e7fd66e bsg: move bsg-lib parts outside of request queue
db6d995235606191fa9db0c717e9d843200b71ea block: remove request_list code
c7bb9ad1744ea14e61e5fff99ee5282709b0c9d9 block: get rid of q->softirq_done_fn()
f9afca4d367b8c915f28d29fcaba7460640403ff blk-mq: pass in request/bio flags to queue mapping
f31967f0e455d08d3ea1d2f849bf62dafc92dbf4 blk-mq: allow software queue to map to multiple hardware queues
b3c661b15d5ab11d982e58bee23e05c1780528a1 blk-mq: support multiple hctx maps
ea4f995ee8b8f0578b3319949f2edd5d812fdb0a blk-mq: cache request hardware queue mapping
67cae4c948a5311121905a2a8740c50daf7f6478 blk-mq: cleanup and improve list insertion
9d037ad707ed6069fbea4e38e6ee37e027b13f1d block: remove req->timeout_list
e41128cfd9389b889e91097b8ca61574d1e71482 block: remove set but not used variable 'et'
7ff4f8035695984c513598e2d49c8277d5d234ca block: remove dead queue members
cb36bb36e1f17d2a7b9a9751e5cfec4235b46c93 net: ena: use CSUM_CHECKED device indication to report skb's checksum status
be26667cb3947c90322467f1d15ad86b02350e00 net: ena: fix indentations in ena_defs for better readability
6fbbde9a1969dfb476467ebf69a475095ef3fd4d KVM: x86: Control guest reads of MSR_PLATFORM_INFO
11644a7659529730eaf2f166efaabe7c3dc7af8c xhci: Add quirk to workaround the errata seen on Cavium Thunder-X2 Soc
e4e87715aa850ab312fd3a3f3452d7390d46ba02 net: hns3: modify hnae_ to hnae3_
5c8971979a10783150e1011ece685333bbec5759 net: hns3: Fix for l4 checksum offload bug
cf4103c699c2b3dd88bea169f47ad75d872b4a80 net: hns3: Fix for using wrong mask and shift in hclge_get_ring_chain_from_mbx
5fd50ac38fb66451672b75f8d143dbef6081dd3a net: hns3: Add support for serdes loopback selftest
128b900de7df567ca7ca063bf5da4ed0f357db8c net: hns3: Fix desc num set to default when setting channel
1c77215480bcfa0852575180f997bd156f2aef17 net: hns3: Set tx ring' tc info when netdev is up
fd5f9da3f6583046215d614a87792b46e55785e2 net: hns3: Fix for multicast failure
0f29fc23b21d3cbd966537bfabba07c00466b787 net: hns3: Fix for loopback selftest failed problem
d9f28fc23d544f673d087b00a6c7132d972f89ea net: hns3: Fix client initialize state issue when roce client initialize failed
b4f1d30327c831c4582a4e4672a06162ddfd3854 net: hns3: Fix tqp array traversal condition for vf
fa7a4bd564ccca06f17f5f509ab020ee973b4c72 net: hns3: Add handle for default case
75e98535182df92908e469bdbe4e84e983c1113c net: hns3: Remove print messages for error packet
e4fd75022c24eb28cc1034e97e60cecc24f325f3 net: hns3: Fix loss of coal configuration while doing reset
39932473b63ebbfdebe298cad09711349feddbc6 net: hns3: Optimize for unicast mac vlan table
c60edc17df391e33c9c3cd6e319eb1f32ce26730 net: hns3: Enable promisc mode when mac vlan table is full
b469e7e47c8a075cc08bcd1e85d4365134bdcdd5 fanotify: fix handling of events on child sub-directory
89ab066d4229acd32e323f1569833302544a4186 Revert "net: simplify sock_poll_wait"
2b59f58e34e78abec2bccd2413ae9e7ea509a855 net/smc: short wait for late smc_clc_wait_msg
94b6ddce71780575fbbf9d2c36afc8440e61a281 tipc: reset bearer if device carrier not ok
a1f8dd34e64af689e95122921fb2ca83dedd4c4e tipc: eliminate possible recursive locking detected by LOCKDEP
d949cfedbcbab4e91590576cbace2671924ad69c tipc: ignore STATE_MSG on wrong link session
556e4c62baffa71e2045a298379db7e57dd47f3d x86/amd_nb: Add support for newer PCI topologies
a8f76ae41cd633ac00be1b3019b1eb4741be3828 x86/speculation: Move STIPB/IBPB string conditionals out of cpu_show_common()
34bce7c9690b1d897686aac89604ba7adc365556 x86/speculation: Disable STIBP when enhanced IBRS is in use
130d6f946f6f2a972ee3ec8540b7243ab99abe97 x86/l1tf: Show actual SMT state
15d6b7aab0793b2de8a05d8a828777dd24db424e x86/speculation: Reorder the spec_v2 code
8770709f411763884535662744a3786a1806afd3 x86/speculation: Mark string arrays const correctly
30ba72a990f5096ae08f284de17986461efcc408 x86/speculataion: Mark command line parser data __initdata
495d470e9828500e0155027f230449ac5e29c025 x86/speculation: Unify conditional spectre v2 print functions
fa1202ef224391b6f5b26cdd44cc50495e8fab54 x86/speculation: Add command line control for indirect branch speculation
4c71a2b6fd7e42814aa68a6dec88abf3b42ea573 x86/speculation: Prepare for conditional IBPB in switch_mm()
6893a959d7fdebbab5f5aa112c277d5a44435ba1 x86/speculation: Prepare arch_smt_update() for PRCTL mode
9137bb27e60e554dab694eafa4cca241fa3a694f x86/speculation: Add prctl() control for indirect branch speculation
7cc765a67d8e04ef7d772425ca5a2a1e2b894c15 x86/speculation: Enable prctl mode for spectre_v2_user
6b3e64c237c072797a9ec918654a60e3a46488e2 x86/speculation: Add seccomp Spectre v2 user space protection mode
55a974021ec952ee460dc31ca08722158639de72 x86/speculation: Provide IBPB always command line options
24cc61d8cb5a9232fadf21a830061853c1268fdd arm64: memblock: don't permit memblock resizing until linear mapping is up
8dc765d438f1e42b3e8227b3b09fad7d73f4ec9a SCSI: fix queue cleanup race before queue initialization is done
fee61deecb1d850bf34f682a6a452e5ee51b7572 drm/i915: Fix NULL deref when re-enabling HPD IRQs on systems with MST
9a64c65083b910b3557b317dc56e1e93063ac350 drm/i915: Add short HPD IRQ storm detection for non-MST systems
6c75520f7e5a6a353f3b332509d205e213d05855 IB/mlx5: Don't hold spin lock while checking device state
d3a80bb5a3eac311ddf28387402593977574460d net/mlx5e: Don't match on vlan non-existence if ethertype is wildcarded
077ecd785d90c6cbba08d719faa4be8561aa0a1e net/mlx5e: Claim TC hw offloads support only under a proper build config
1392f44bba22533b8dfdc6b0e73610b27c3f76cf net/mlx5e: Apply the correct check for supporting TC esw rules split
ef90c5e9757d5abc80b947cbcaacc43d1e916488 net/mlx5: Return success for PAGE_FAULT_RESUME in internal error state
37b06e5078975bb4efe3cbd91e254112851b125f IB/mlx5: Fix implicit ODP interrupted page fault
2e5dfc99f2e61c42083ba742395e7a7b353513d1 vfs: combine the clone and dedupe into a single remap_file_range
a91ae49bbaf43910edb09e03fedf26b23875bd52 vfs: pass remap flags to generic_remap_file_range_prep
3d28193e1df043764deb7abdaba5e3a6660bc393 vfs: pass remap flags to generic_remap_checks
8dde90bca6fca3736ea20109654bcf6dcf2ecf1d vfs: remap helper should update destination inode metadata
42ec3d4c02187a18e27ff94b409ec27234bf2ffd vfs: make remap_file_range functions take and return bytes completed
452ce65951a2f0719e4e119ecca134c06cfe22ee vfs: plumb remap flags through the vfs clone functions
df3658361951e17364f1e1c3fa92862a990ad8bd vfs: plumb remap flags through the vfs dedupe functions
eca3654e3cc7d93e9734d0fa96cfb15c7f356244 vfs: enable remap callers that can handle short operations
c32e5f39953fa6bbff35c655bdcb7b3128f1e79f vfs: hide file range comparison function
8c5c836bd6c3b9f9fc1c5a210d630b8c42f4f7df vfs: clean up generic_remap_file_range_prep return value
3f68c1f562f1e4c5e1a515b392a2e0a509a342d5 xfs: support returning partial reflink results
7a6ccf004e234c01fb2a11771de9837c9ff3d56d xfs: remove redundant remap partial EOF block checks
3fc9f5e409319e994d113cf1327ba6ab147423c2 xfs: remove xfs_reflink_remap_range
bf4a1fcf0bc18d52cf0fce6571d6f327ab5eaf22 xfs: remove [cm]time update from reflink calls
da034bcc6aaaf2a6ba6c5b5e63565c5ef4816a0e xfs: make xfs_file_remap_range() static
6744557b53a2b710ebce3736a5c27a0119685fcc vfs: allow some remap flags to be passed to vfs_clone_file_range
693ba15c9202fe0283404abe4066e1b986e284eb scsi: Remove percpu_ida
49d92c0dd64ae769c2d67fe27ac260ae31259ba6 block: Add PCI P2P flag for request queue
c6925093d0b28329ad3a486f5b0345c2c192ae9a nvmet: Optionally use PCI P2P memory
21d3bbdd4c342f16eac8d70893e45cdfa3381a1e nvmet: don't try to add ns to p2p map unless it actually uses it
079076b3416e78ba2bb3ce38e05e320c388c3120 block: remove deadline __deadline manipulation helpers
57d74df90783f6a6b3e79dfdd2a567ce5db3b790 block: use atomic bitops for ->queue_flags
373e4af34ec13c17a6b80227c7d5d3719122eb77 block: remove queue_lockdep_assert_held
7fb1763de6f8b4d6e7a69a08a14ce5496500f2c5 blk-cgroup: move locking into blkg_destroy_all
0d945c1f966b2bcb67bb12be749da0a7fb00201b block: remove the queue_lock indirection
344e9ffcbd1898e1dc04085564a6e05c30ea8199 block: add queue_is_mq() helper
503f620f0cb8a9da9c2bba72f2141aaa4b0e3962 floppy: remove queue_lock around floppy_end_request
a50f9aec1ac713dd25f1b1b443d97aa2fc69f740 pktcdvd: remove queue_lock around blk_queue_max_hw_sectors
b2101f655f8f6bd510154364e24d1cdba037133f ide: don't acquire queue lock in ide_pm_execute_rq
f04842734c7a68381ab3cb45628ffb3ff1029490 ide: don't acquire queue_lock in ide_complete_pm_rq
85f4d4b65fdd67f1d6dc9eeb1d91923cef07eb6a block: have ->poll_fn() return number of entries polled
e2b3fa5af70c1e646270f6c7c799414f5e904d7a block: Remove bio->bi_ioc
64845a1ddd655574886eb48e9a5eaeeb9b05bf0d block: Introduce get_current_ioprio()
20578bdfd0418efb11ec316229e670d085cd574a block: Initialize BIO I/O priority early
0c62bff1fd633774756be6d88d71002cd37615e0 block: fix attempt to assign NULL io_context
1052b8ac5282daf35df331edcbdb645839d17e6a blk-mq: when polling for IO, look for any completion
9743139c5d11ab170f70a308dcb88c342390adfb blk-mq: remove 'tag' parameter from mq_ops->poll()
0a1b8b87d064a47fad9ec475316002da28559207 block: make blk_poll() take a parameter on whether to spin or not
aa61bec30eca11816789dc25c2090366b0ccfaf8 blk-mq: ensure mq_ops ->poll() is entered at least once
4ab32bf3305eedb4d31f85cac68a67becab10494 blk-mq: never redirect polled IO completions
5f0ed774ed2914decfd397569fface997532e94d block: sum requests in the plug structure
ce5b009cff1961137127edf91f44effd0eec8ffd block: improve logic around when to sort a plug list
d666ba98f849ad44c4405ecc2180390ebe80f4f9 blk-mq: add mq_ops->commit_rqs()
be94f058f2bde6f0b0ee9059a35daa8e15be308f blk-mq: use bd->last == true for list inserts
b2c5d16b72df1116f05c9be16a630ac939d34101 blk-mq: use plug for devices that implement ->commits_rqs()
e20ba6e1da029136ded295f33076483d65ddf50a block: move queues types to the block layer
c6d962aebaf8ec5d867aac09ee33e3f528c2539d nvme-pci: only allow polling with separate poll queues
3a7afd8ee42a68d4f24ab9c947a4ef82d4d52375 nvme-pci: remove the CQ lock for interrupt driven queues
f9801a484ad6dcc33b10c61b143efc3352541802 nvme-rdma: remove I/O polling support
9d6610b76fa374eae3deb93bcbace4a06c2e3b95 nvme-mpath: remove I/O polling support
529262d56dbebe6a26df5d2fd24cc0e1bc8579e5 block: remove ->poll_fn
376f7ef8bfeaee3993c2e85df1bbaa06725b9342 block: only allow polling if a poll queue_map exists
b978962ad4f7f9c06e5aa07b2a9b22f6d600456c blkcg: update blkg_lookup_create() to do locking
beea9da07d8a6228a7e4a31a83f9478d513bf03f blkcg: convert blkg_lookup_create() to find closest blkg
2268c0feb0ffb1c1bb6e1d4d5505d30f485aa77b blkcg: introduce common blkg association logic
892ad71f622bbf39c6de321d5ca9b0fdec237c24 dm: set the static flush bio device on demand
5cdf2e3fea5ee37b66842d76a9b06e6dac0b933d blkcg: associate blkg when associating a device
e439bedf6b24264f620cc05627e23a90054bde41 blkcg: consolidate bio_issue_init() to be a part of core
74b7c02a9bc124ee3df0d77880ee26db0a325516 blkcg: associate a blkg for pages being evicted by swap
c839e7a03f92bafd71fd145b470dcdc7f43f2d4c blkcg: remove bio->bi_css and instead use bio->bi_blkg
f0fcb3ec89f37167810e660b0595d9a6155d9807 blkcg: remove additional reference to the css
6f70fb66182b02e50deea65e9a3a86b7bf659a39 blkcg: remove bio_disassociate_task()
b3b9f24f5fcc099c41f7dc1d02350635830888e5 blkcg: change blkg reference counting to use percpu_ref
7754f669ffde3919e398a9e591cd7510d6cf4e73 blkcg: rename blkg_try_get() to blkg_tryget()
d3fcdff19054575a368dfdac7407cabffea36c43 block: convert io-latency to use rq_qos_wait
4705de735b3383792c84a92e57508d6865caa85f blkcg: put back rcu lock in blkcg_bio_issue_check()
5938870247be4453ef6602c7ce467bebb48113c8 blk-mq: re-build queue map in case of kdump kernel
112f158f66cbe25fd561a5dfe9c3826e06abf757 block: stop passing 'cpu' to all percpu stats methods
5b18b5a737600fd20ba2045f320d5926ebbf341a block: delete part_round_stats and switch to less precise counting
1226b8dd0e91331cfab500f305b2c264445a0392 block: switch to per-cpu in-flight counters
e016b78201a2d9ff40f3f0da072292689af24c7f block: return just one value from part_in_flight
6451fe73fa0f542a49bfacd7205b88a597897f58 nvme: fix irq vs io_queue calculations
0273ac349f08f4ff9ef88aaaf9c9f2aa6e87d2be blkcg: handle dying request_queue when associating a blkg
036bb44327f50273e85ee4a2c9b56eebce1c0838 net: sched: change type of reference and bind counters
3f7c72bc4227b169ba2c924a7987324e24bbc4b2 net: sched: always take reference to action
16af6067392c40e454e49eec834843ab03643d96 net: sched: implement reference counted action release
4e8ddd7f1758ca4ddd0c1f7cf3e66fce736241d2 net: sched: don't release reference on action overwrite
cae422f379f37fe9105d2a113259788f989e7df5 net: sched: use reference counting action init
0190c1d452a91c38a3462abdd81752be1b9006a8 net: sched: atomically check-allocate action
90b73b77d08ec395311411b545c756ca710aae59 net: sched: change action API to use array of pointers to actions
01e866bf07fbb10e96bff46ea1e5e0410d6e40b9 net: sched: act_ife: fix memory leak in ife init
6f3dfb0dc831953187fea8e3b798768611441321 net/sched: skbedit: use per-cpu counters
c749cdda9089eb1fdb6a9ab98f945124d12f2595 net/sched: act_skbedit: don't use spinlock in the data path
33fb5cba11ff639c32f4f0104b04b2415fcd9ecc net: sched: cls_flower: change fl_init_dissector to accept mask and dissector
a8305bff685252e80b7c60f4f5e7dd2e63e38218 net: Add and use skb_mark_not_on_list().
7fd4b288ea6a3e45ad8afbcd5ec39554d57f1ae0 tc/act: remove unneeded RCU lock in action callback
92e2c4053623f21d61a683f7ef7bd61c8300ac7d flow_dissector: allow dissection of tunnel options from metadata
0a6e77784f490912d81b92cfd48424541c04691e net/sched: allow flower to match tunnel options
2142236b45843dbcbe9691d24cf06caff91a78fd net: sched: act_bpf: remove dependency on rtnl lock
b6a2b971c0b00253197682fbdf1c55fc0e2610a4 net: sched: act_csum: remove dependency on rtnl lock
e8917f437006686b8fa1b9e54f31d7abc0ea7e97 net: sched: act_gact: remove dependency on rtnl lock
54d0d423a48aa0e61bb39665d20376ba7b940535 net: sched: act_ife: remove dependency on rtnl lock
67b0c1a3c9ced3726dea73000f8900f453fc894f net: sched: act_pedit: remove dependency on rtnl lock
d7728495665601658c7f94f3b5fa4e3f54d71c18 net: sched: act_sample: remove dependency on rtnl lock
5e48180ed8bcfa60e02887ba801307caf14bbe40 net: sched: act_simple: remove dependency on rtnl lock
c8814552fe51358f5fc46bc1c4aa4bb68454f4eb net: sched: act_skbmod: remove dependency on rtnl lock
729e01260989cc06c8a78491b46545793aef323a net: sched: act_tunnel_key: remove dependency on rtnl lock
764e9a24480f6ffba5493fb21e6a7b030d6b8b67 net: sched: act_vlan: remove dependency on rtnl lock
4e232818bd32b29f15bef532f320a14367d172b4 net: sched: act_mirred: remove dependency on rtnl lock
e329bc427395e2d74f2bb685ef3dddda91a6695f net: sched: act_police: remove dependency on rtnl lock
653cd284a8a857ddfcf24f5bc3bd204a229f6c9f net: sched: always disable bh when taking tcf_lock
edfaf94fa705181eeb2fe0c36c0b902dedbd40f1 net_sched: improve and refactor tcf_action_put_many()
97a3f84f2c84f81b859aedd2c186df09c2ee21a6 net_sched: remove unnecessary ops->delete()
b144e7ec51a132eac00a68bf897b6349d810022f net_sched: remove unused parameter for tcf_action_delete()
7d485c451fc82f8ae431cdb379521bc6d0641064 net_sched: remove unused tcf_idr_check()
244cd96adb5f5ab39551081fb1f9009a54bb12ee net_sched: remove list_head from tc_action
a0c2e90fe131d9a7440ac05c9c31fc35dfac2fa8 net_sched: remove unused tcfa_capab
4e407ff5cd67ec76eeeea1deec227b7982dc7f66 act_ife: move tcfa_lock down to where necessary
5ffe57da29b3802baeddaa40909682bbb4cb4d48 act_ife: fix a potential deadlock
191672ca07a7c10c3b84d01019a33d59b4317997 net_sched: fix unused variable warning in stmmac
97763dc0f4010bc20e2969a6bf9a40a2551c4f79 net_sched: reject unknown tcfa_action values
506a03aa04deed321b26153aff4e61161aefa8af net_sched: add missing tcf_lock for act_connmark
c10bbfae3ae43fae1d77e16f05a73474acf514ff net: sched: null actions array pointer before releasing action
6d7a8df6dfe4d62335673fb15407d79180a33ea2 net: sched: act_skbedit: remove dependency on rtnl lock
f20a4d01175ad681a88d571c6391d188453ca6d0 net: sched: act_nat: remove dependency on rtnl lock
84cb8eb26cb9ce3c79928094962a475a9d850a53 net: sched: action_ife: take reference to meta module
ee28bb56ac5b4c0c08ef10d33cc7adb749bbf4c6 net/sched: fix memory leak in act_tunnel_key_init()
86c55361e569400b6286f30283a9c143a18c20d9 net: sched: cls_flower: dump offload count value
93be42f9173bbc133bd72915b658394308437d00 net/sched: act_police: use per-cpu counters
2d550dbad83c88fc7cb594a1803e77457fe625f9 net/sched: act_police: don't use spinlock in the data path
34043d250f51368f214aed7f54c2dc29c819a8c7 net/sched: act_sample: fix NULL dereference in the data path
28169abadb08333eb607621faa3a1dd7109e0d45 net/sched: Add hardware specific counters to TC actions
95278ddaa15cfa23e4a06ee9ed7b6ee0197c500b net_sched: convert idrinfo->lock from spinlock to a mutex
c08f5ed5d625926f38552b734b587a28e947b55c net/sched: act_police: disallow 'goto chain' on fallback control action
19ab69107d3ecfb7cd3e38ad262a881be40c01a3 net/sched: act_pedit: fix memory leak when IDR allocation fails
63c82997f5c0f3e1b914af43d82f712a86bc5f3a net: sched: cls_flower: validate nested enc_opts_policy to avoid warning
f2cbd485282014132851bf37cb2ca624a456275d net/sched: act_police: fix race condition on state variables
484afd1bd3fc6f9f5347289fc8b285aa65f67054 net/sched: act_police: add missing spinlock initialization
fd6d433865a2ad1f7e018ef80408cb3dc3be1ab3 net/sched: act_police: fix memory leak in case of invalid control action
f94e63801ab2791ed64c409d0f751f6a0c953ead netfilter: conntrack: reset tcp maxwin on re-register
86029d10af18381814881d6cce2dd6872163b59f tls: zero the crypto information from tls_context before freeing
50c6b58a814d86a93c0f6964570f839632854044 tls: fix currently broken MSG_PEEK behavior
4269fea768a11a447d8de620ce420f2214d4685c Revert "netfilter: nft_numgen: add map lookups for numgen random operations"
d4d576f5ab7edcb757bb33e6a5600666a0b1232d ip6_tunnel: Fix encapsulation layout
32764c66faba8fff950346776eb46801b67c610f net: 8021q: move vlan offload registrations into vlan_core
0a22b17a6b1ddb161fae7452faa892ba4d77ebe9 nfp: flower: add geneve option match offload
67fecaf8e9cc28812042f61194ac0e0a9737f897 RDMA/core: Fix unwinding flow in case of error to register device
5aceaeb26394538858a9dbae5830d628469a44cf blk-mq: only dispatch to non-defauly queue maps if they have queues
7e849dd9cf37bc52aff9b5236377c405040c959c nvme-pci: don't share queue maps
e5edd5f298fafda28284bafb8371e6f0b7681035 blk-mq: skip zero-queue maps in blk_mq_map_swqueue
346fc1089e5d4734990b4b6c3cd0cdeae9ae482d blk-mq: export hctx->type in debugfs instead of sysfs
721fb6fbfd2132164c2e8777cc837f9b2c1794dc fsnotify: Fix busy inodes during unmount
6c08ec1216b7b2f84b9755f339d6009768599256 KVM: PPC: Book3S HV: Fix handling for interrupted H_ENTER_NESTED
ed4c1136ac2a0dd8ca3ec37de2658eadb9d83c43 scsi: mpt3sas: Update driver version to 27.101.00.00
cd19181bf9ad4b7f40f2a4e0355d052109c76529 blk-mq: enable IO poll if .nr_queues of type poll > 0
dbe3ece1287dafe4113c64ada3113c39f344c64a dm: don't reuse bio for flushes
3a762de55b4ede47a5369f57d0f92979738be638 block: save irq state in blkg_lookup_create()
9a1ea439b16b92002e0a6fceebc5d1794906e297 mm: put_and_wait_on_page_locked() while page is migrated
b5679cebf780c6f1c2451a73bf1842a4409840e7 vmbus: fix subchannel removal
0425e3e6e0c7f92f2c2a396d902871b7a81da0eb RDMA/hns: Support flush cqe for hip08 in kernel space
f1a315420e79fe5c077fa119db9439ffabd2cda2 RDMA/hns: Fix an error code in hns_roce_v2_init_eq_table()
b00a92c8f2cae4ea8c84ddae9b9ba5daeb9f327f RDMA/hns: Move all prints out of irq handle
07fdef34d2be6811f00c6f9e4e2a1483cf86696c iommu/arm-smmu-v3: Implement flush_iotlb_all hook
68a6efe86f6a16e25556a2aff40efad41097b486 iommu: Add "iommu.strict" command line option
44f6876a00e83df5fd28681502b19b0f51e4a3c6 iommu/arm-smmu: Support non-strict mode
2d657d17f72d2ae70c02f0d0ea6a04ad0f016b57 nvdimm: Split label init out from the logic for getting config data
7d47aad4570e5e6e9a8162bb417ca9b74132f27c nvdimm: Use namespace index data to reduce number of label reads needed
894169db12463cea08d0e2a9e35f42b291340e5a scsi: megaraid_sas: Use 63-bit DMA addressing
7b9e2d348c2af201e70346cdae052f387f713c49 scsi: megaraid_sas: driver version update
234ff0b729ad882d20f7996591a964965647addf KVM: PPC: Book3S HV: Fix race between kvm_unmap_hva_range and MMU mode switch
233a7cb235318223df8133235383f4c595c654c1 kvm: arm64: Allow tuning the physical address size for VM
6992195cc6c6c4d673a3266ae59cbeeb746d61af KVM: arm64: Clarify explanation of STAGE2_PGTABLE_LEVELS
bec6e03b5ea5618479548bce1da4e16088e25edc KVM: PPC: Book3S HV: Hold kvm->mmu_lock across updating nested pte rc bits
8400f8740651c1a3081c30b46004451c448f4d5f KVM: PPC: Book3S HV: Align gfn to L1 page size when inserting nest-rmap entry
8b23eee4e55a32a2b51a180dfd27a8d214acc7a1 KVM: PPC: Book3S HV: Apply combination of host and l1 pte rc for nested guest
90165d3da0760a0353518740ac307f0d81c4e400 KVM: PPC: Book3S HV: Introduce kvmhv_update_nest_rmap_rc_list()
ae59a7e1945bc2245bbb587071ca737e00daf443 KVM: PPC: Book3S HV: Keep rc bits in shadow pgtable in sync with host
94d7a86c21a3d6046bf4616272313cb7d525075a x86/kvm/vmx: Remove duplicate l1d flush definitions
fca91f6d60b6ee53b8d43c8ad5bad153a758961c kvm: nVMX: Set VM instruction error for VMPTRLD of unbacked page
bd4fb6d270bc423a9a4098108784f7f9254c4e6d arm64: Add support for SB barrier and patch in over DSB; ISB sequences
fb544d1ca65a89f7a3895f7531221ceeed74ada7 KVM: arm/arm64: Fix VMID alloc race by reverting to lock-less
6794ad5443a2118243e13879f94228524a1a2b92 KVM: arm/arm64: Fix unintended stage 2 PMD mappings
630d42b70f5d5cdac94dc5d080fc6d389076bf6e scsi: megaraid_sas: Fix Ventura series based checks
154a7cde9a895d87ecc9807b34651021d3e6e8a7 scsi: megaraid_sas: Introduce new Aero adapter type
272652fcbf1adf6321efe288583fa4a30a15af31 scsi: megaraid_sas: add retry logic in megasas_readl
7fbe078c37aba3088359c9256c1a1d0c3e39ee81 vhost/vsock: fix vhost vsock cid hashing inconsistent
c45b1fa2433c65e44bdf48f513cb37289f3116b9 nvme-pci: fix nvme_setup_irqs()
7809167da5c86fd6bf309b33dee7a797e263342f block: don't lose track of REQ_INTEGRITY flag
18b01b16e8bae9cd227909f6e6d2783d74855f65 PCI: Remove pci_unmap_addr() wrappers for DMA API
c77804be53369dd4c15bfc376cf9b45948194cab net: hns: Fix WARNING when hns modules installed
c43c3a8683fe624b67b91a06f1c25cd752a05b3b KVM: PPC: Book3S HV: Cleanups - constify memslots, fix comments
f6d52b2172b1adfde010df34730290c282ee641b drm/nouveau/disp: move eDP panel power handling
15f77c4ade3364106a3a397f0a8d6fce9d6a6326 drm/nouveau: register backlight on pascal and newer
11189c1089da413aa4b5fd6be4c4d47c78968819 acpi/nfit: Fix command-supported detection
58d1131777a4b7c228267b809bd88f7be66edcfb iommu: Add config option to set passthrough as default
1d50e5d0c5052446cb85a3bf11fe8ba4e8d770ca crash_core, vmcoreinfo: Append 'MAX_PHYSMEM_BITS' to vmcoreinfo
f3ecc0ff0457eae93503792c6fc35921fa8a6204 dma-mapping: move the dma_coherent flag to struct device
bc3ec75de5452db59b683487867ba562b950708a dma-mapping: merge direct and noncoherent ops
58b0440663ec11372befb8ead0ee7099d8878590 dma-mapping: consolidate the dma mmap implementations
f0edfea8ef93ed6cc5f747c46c85c8e53e0798a0 dma-mapping: move the remap helpers to a separate file
886643b766321f15f63bd950be618cbb6dd22bbc arm64: use the generic swiotlb_dma_ops
f62717551b2b7d72fc2a3975539117d350bad84d arm64: fix warnings without CONFIG_IOMMU_DMA
0c3b3171ceccb8830c2bb5adff1b4e9b204c1450 dma-mapping: move the arm64 noncoherent alloc/free support to common code
05887cb610a54bf568de7f0bc07c4a64e45ac6f9 dma-mapping: move dma_get_required_mask to kernel/dma
7249c1a52df9967cd23550f3dc24fb6ca43cdc6a dma-mapping: move various slow path functions out of line
3731c3d4774e38b9d91c01943e1e6a243c1776be dma-mapping: always build the direct mapping code
beec903f71214c0bfa555955dd548e87bfb2c623 ia64: remove iommu_dma_supported
02b4da5f84d157f6a27e05ca017bdb74bcf01bee intel-iommu: mark intel_dma_ops static
524a669bdd5ff45cb927f0c524ed4e7a4fb3650b iommu/vt-d: remove the mapping_error dma_map_ops method
90ac706e98fcb24fb0b0a259558987f33cc2f0f6 dma-mapping: factor out dummy DMA ops
a20bb058375147cb639c7aa17ef86ad68b32d847 dma-direct: add an explicit dma_direct_get_required_mask
7d21ee4c719f00896767ce19c4c01a56374c2ced dma-direct: refine dma_direct_alloc zone selection
b4ebe6063204da58e48600b810a97c29ae9e5d12 dma-direct: implement complete bus_dma_mask handling
9d7a224b463e1cf1178570b57b6497240fd79bc3 dma-direct: always allow dma mask <= physiscal memory size
1fc8e6423edb4bba365b0780c2fcddfb921b24b2 dma-direct: fix return value of dma_direct_supported
79ac32a427f5d1211fa417021fd04c36f63ab917 dma-direct: document the zone selection logic
b18814e767a445534ab9ccba02e82a31208f85d6 dma-direct: provide page based alloc/free helpers
704f2c20eaa566f6906e8812b6e2115889bd753d dma-direct: reject highmem pages from dma_alloc_from_contiguous
b907e20508d02462a50c2841da0a5e3883fdab39 swiotlb: remove SWIOTLB_MAP_ERROR
68c608345cc569bcfa1c1b2add4c00c343ecf933 swiotlb: remove dma_mark_clean
b0cbeae4944924640bf550b75487729a20204c14 dma-direct: remove the mapping_error dma_map_ops method
58dfd4ac022037c6a562e92fc6d2a778819b2162 dma-direct: improve addressability error reporting
17ac524719f3fc88c1a90528f4789e4b4f618512 dma-direct: use dma_direct_map_page to implement dma_direct_map_sg
c92a54cfa0257e8ffd66b2a17d49e9c0bd4b769f dma-direct: do not include SME mask in the DMA supported check
55897af63091ebc2c3f239c6a6666f748113ac50 dma-direct: merge swiotlb_dma_ops into the dma_direct code
356da6d0cde3323236977fce54c1f9612a742036 dma-mapping: bypass indirect calls for dma-direct
8b1cce9f5832a8eda17d37a3c49fb7dd2d650f46 dma-mapping: fix inverted logic in dma_supported
9ab91e7c5c514b675470d9b57393cbe455722060 arm64: default to the direct mapping in get_arch_dma_ops
2e05ea5cdc1ac55d9ef678ed5ea6c38acf7fd2a3 dma-mapping: implement dma_map_single_attrs using dma_map_page_attrs
ed6ccf10f24bdfc1955bc8b976ddedc370fc3869 dma-mapping: properly stub out the DMA API for !CONFIG_HAS_DMA
4d44175aa5bb5f68772b1eb0306554812294ca52 netfilter: nf_tables: handle nft_object lookups via rhltable
594cc251fdd0d231d342d88b2fdff4bc42fb0690 make 'user_access_begin()' do 'access_ok()'
6e693b3ffecb0b478c7050b44a4842854154f715 x86: uaccess: Inhibit speculation past access_ok() in user_access_begin()
c08435ec7f2bc8f4109401f696fd55159b4b40cb bpf: move {prev_,}insn_idx into verifier env
979d63d50c0c0f7bc537bf821e056cc9fe5abd38 bpf: prevent out of bounds speculation on pointer arithmetic
d3bd7413e0ca40b60cf60d4003246d067cafdeda bpf: fix sanitation of alu op with pointer / scalar type from different paths
b284909abad48b07d3071a9fc9b5692b3e64914b cpu/hotplug: Fix "SMT disabled by BIOS" detection for KVM
5ffdfaedfa0aba3f5db0fbb8ed4f3192be2b39b8 arm64: mm: Support Common Not Private translations
ab510027dc4dbd1eeb611a34b0cda8b21fcde492 arm64: KVM: Enable Common Not Private translations
e842dfb5a2d3b4c43766508ef89a4eb67471d53a arm64: mm: Offset TTBR1 to allow 52-bit PTRS_PER_PGD
b9567720a1b8e739380e0241413606c056c57859 arm64: mm: Allow forcing all userspace addresses to 52-bit
68d23da4373aba76f5300017c4746440f276698e arm64: Kconfig: Re-jig CONFIG options for 52-bit VA
9b31cf493ffa40914e02998381993116e574c651 arm64: mm: Introduce MAX_USER_VA_BITS definition
ecec76885bcfe3294685dc363fd1273df0d5d65f KVM: nVMX: unconditionally cancel preemption timer in free_nested (CVE-2019-7221)
ebe9f6f19d80d8978d16078dff3d5bd93ad8d102 acpi/nfit: Fix bus command validation
ddefc033eecf23f1e8b81d0663c5db965adf5516 PCI: Fix "try" semantics of bus and slot reset
cfe4bd7a257f6d6f81d3458d8c9d9ec4957539e6 sctp: check and update stream->out_curr when allocating stream_out
49fcf732bdae0550721ef73af7c45109ce26b2a9 lockdown: Enforce module signatures if the kernel is locked down
9b9d8dda1ed72e9bd560ab0ca93d322a9440510e lockdown: Restrict /dev/{mem,kmem,port} when the kernel is locked down
7d31f4602f8d366072471ca138e4ea7b8edf9be0 kexec_load: Disable at runtime if the kernel is locked down
38bd94b8a1bd46e6d3d9718c7ff582e4c8ccb440 hibernate: Disable when the kernel is locked down
eb627e17727ebeede70697ae1798688b0d328b54 PCI: Lock down BAR access when the kernel is locked down
96c4f67293e4cd8b3394adce5a8041a2784e68a3 x86: Lock down IO port access when the kernel is locked down
95f5e95f41dff31b2a4566c5a8975c08a49ae4e3 x86/msr: Restrict MSR access when the kernel is locked down
f474e1486b78ac15322f8a1cda48a32a1deff9d3 ACPI: Limit access to custom_method when the kernel is locked down
41fa1ee9c6d687afb05760dd349f361855f1d7f5 acpi: Ignore acpi_rsdp kernel param when the kernel has been locked down
3f19cad3fa0d0fff18ee126f03a80420ae7bcbc9 lockdown: Prohibit PCMCIA CIS storage when the kernel is locked down
20657f66ef52e5005369e4ef539d4cbf01eab10d lockdown: Lock down module params that specify hardware parameters (eg. ioport)
906357f77a077508d160e729f917c5f0a4304f25 x86/mmiotrace: Lock down the testmmiotrace module
5496197f9b084f086cb410dd566648b0896fcc74 debugfs: Restrict debugfs when the kernel is locked down
b9a400ac295728b2d47445e09814e1880409b311 net: hns3: aligning buffer size in SSU to 256 bytes
af854724e51e4047f534ac6d19b3ef9fb3c35c49 net: hns3: fix a SSU buffer checking bug
51e8439f34962794f6c5010a44893fe58450b8df net: hns3: add 8 BD limit for tx flow
8727638426b0aea59d7f904ad8ddf483f9234f88 s390/setup: fix early warning messages
86a86804e4f18fc3880541b3d5a07f4df0fe29cb s390/setup: fix boot crash for machine without EDAT-1

__CHANGES NOT IN UPSTREAM________________
Rolled in CentOS secureboot cert'
Debranding patches'
Apply debranding changes'
revert "Add a SysRq option to lift kernel lockdown"
revert "cpu/hotplug: Add SMT policy options"
MODSIGN: Also check platform keyring in mod_verify_sig()
Fix for module sig verification
efi: Lock down the kernel if booted in secure boot mode
efi: Add an EFI_SECURE_BOOT flag to indicate secure boot mode
Lock down TIOCSSERIAL
uswsusp: Disable when the kernel is locked down
Add a SysRq option to lift kernel lockdown
Add the ability to lock down access to the running kernel image
cpu/hotplug: Add SMT policy options
pci/quirks: Add quirk to reset nvgpu at boot for the Lenovo ThinkPad P50
arm64, vmcoreinfo : Append 'MAX_USER_VA_BITS' to vmcoreinfo
namespace: Add padding fix to user_table[]
Revert "Drop -doc subpackage"
perf tools: Compile perf with -g instead of -ggdb3 to workaround gdb crash
Revert "gfs2: Fix loop in gfs2_rbm_find"
KABI: struct class padding
KABI: struct timer_list padding
KABI: struct irq_domain padding
KABI: struct kset padding
KABI: struct kobject and kobj_type padding
KABI: struct delayed_work padding
KABI: struct work_struct padding
KABI: struct hrtimer padding
KABI: struct user_namespace padding
KABI: struct resource padding
KABI: Protect device_driver struct
KABI: Protect radix functions
mptsas: pci-id table changes
mptsas: Taint kernel if mptsas is loaded
rtnetlink: fix incorrect handling of device stats passed to userspace
exclude sock_reuseport from kABI protection
KABI: struct device padding
KABI: struct dma_map_ops padding
deprecate elevator= kernel parameter
kernel.spec: disable kabi checks until RC
Small change to the message about certified hardware
x86/kdump: make the behavior of crashkernel=X consistent with kaslr
Add back support for Intel processors
KABI, x86/paravirt: Protect paravirt ops structures
KABI: struct module padding
KABI: struct stack_trace_struct padding
redhat: kernel: clean up taint flags
netxen: taint as unsupported in RHEL8
resort to custom code for sk_buff padding
add padding to cipher_context
add padding to tls_crypto_context
add padding to ipv4_devconf
add KABI padding to file_system_type
add KABI padding to multiple fs ops vectors
add KABI padding to dentry structure
add KABI padding to inode structure
add KABI padding to file_lock structure
ipmi: RH_KABI macros to pad kabi exposed structs
reserve space in structures for KABI
PCI: Add reserved fields to 'struct hotplug_slot'
PCI: Add reserved fields to 'struct hotplug_slot_ops'
PCI: Add reserved fields to 'struct pci_sriov'
PCI: Add reserved fields to 'struct pci_driver'
PCI: Add reserved fields to 'struct pci_bus'
PCI: Add reserved fields, and extension, to 'struct pci_dev'
PCI: always include 'p2pdma' in 'struct pci_dev'
nvmet-fc: Mark NVMe/FC target mode driver as unsupported
Mark GICv2 deprecated
megaraid_sas: mark Aero controllers as tech preview
redhat: kabi: reserved padding for kernel sched data structures
redhat: kabi: reserved padding for MM related data structures
mptspi: pci-id table changes
mptspi: Taint kernel if mptspi is loaded
kabi: reserve space for public data structure
kabi: reserve space for blk-mq related structure
kabi: reserve space for bsg related structure
kabi: reserve space for integrity related structure
kabi: reserve space for CONFIG_BLK_DEV_ZONED
mpt3sas: mark Aero controllers as tech preview
spec: Add libperf-jvmti.so into perf debuginfo rpm
redhat: blacklist auto-loadable net modules in modules-extra
redhat: move sctp modules to kernel-modules-extra
add reserved fields to neighbour
add reserved fields to rtnl_link_stats*
reserve bits in netdev_features_t for future features
add reserved fields to sk_buff
add reserved fields to ipv6_devconf
add reserved fields to fib_rule
add reserved fields to sock
add reserved fields to genl_family
add reserved fields to proto_ops
add reserved fields to proto
add reserved fields to genl_ops
add reserved fields to dst_ops
add reserved fields to dst_entry
add reserved fields to lwtunnel_state
add reserved fields to packet_type
add reserved fields to napi_struct
add reserved fields to net_device
exclude wireless_dev from KABI protection
add reserved fields to dcbnl_rtnl_ops
add reserved fields to xfrm_*
add reserved fields to switchdev_obj
add reserved fields to switchdev_ops
add reserved fields to l3mdev_ops
exclude ndisc_ops from kABI protection
add reserved fields to xfrmdev_ops
add reserved fields to tlsdev_ops
add reserved fields to netdev_rx_queue
add reserved fields to netdev_queue
add reserved fields to rtnl_link_ops
add reserved fields to ethtool_ops
add reserved fields to header_ops
add reserved fields to net_device_ops
add reserved fields to flowi* structs
Mark AMD EPYC guests as supported
be2net: Disable queue dump in be_tx_timeout handler
x86/kvm: mark as TechPreview when running as a nested hypervisor
kernel.spec: Fix kernel-tools files section logic
ebpf: record usage of eBPF
add rh_features to /proc
add support for rh_features
expand cpu feature/bug bits
add kabi support for cpuinfo_x86
Display a message about certified hardware
disable zerocopy by default
Revert "sunrpc: Ensure we always close the socket after a connection shuts down"
scsi_sysfs: make unpriv_sgio queue attribute accessible for non-block devices
scsi_ioctl: introduce unpriv_sgio queue flag
scsi_ioctl: pass request_queue to blk_verify_command
powerpc: Select CONFIG_SWIOTLB
redhat: add a comment with warning about RH_KABI_EXCLUDE usage
Sign the aarch64 kernel
configs: Enable CONFIG_IP_SET_HASH_IPMAC as a module
configs: disable CAKE, ETF & SKBPRIO qdisc in config
always run make with HOSTCFLAGS/HOSTLDFLAGS set
Pass global build flags to tools build
Pass global build flags to bpftool build
Mark Intel Apollo Lake supported
kvm: x86: bump KVM_(SOFT_)MAX_VCPUS to 384
Add reserved fields to mm_context_t
Add reserved fields to thread_struct
kdump: correct crashkernel=auto threshold
x86/spec_ctrl: Synchronize RHEL8 percpu SPEC_CTRL MSR states with new STIBP logic
x86/spec_ctrl: Temporarily remove the IBRS code from process.c & bugs.c
sched: exclude TC from kABI guarantee
Mark Intel Cascade Lake supported
redhat: Enable -Werror for architectures
drm/atomic_helper: Remove dangling variable
x86/spec_ctrl: Change default Skylake Spectre v2 mitigation to retpoline
net: ena: enable CONFIG_ENA_ETHERNET for aarch64
redhat: fix bpf_samples build
pcie: Enable Broadom iProc PCIE and mark it is as tech preview
PCI/ACPI: Add iProc PCIe MCFG quirk
PCI: iproc: Add ACPI/ECAM support
kernel.spec: Do not zip modules on noarch builds
redhat: Enable kernel-tools (for kvm_stat) on s390x, too
spec: Add bpftool debuginfo package
kernel.spec: Include kernel-signing-ca.cer public key
mark coffeelake-s/h 8+2 as supported
x86/spec_ctrl: Synchronize STIBP changes with RHEL IBRS code
sched: disable autogroups by default
Taint kernel if e1000 is loaded
configs: enable CONFIG_IAVF=m
init/main.c: Enable watchdog_thresh control from kernel line
redhat: add optional bpf_samples package
redhat spec: Add new perf tools file
kernel.spec: s390/zfcpdump: add -zfcpdump kernel variant
rh_taint: correct loaddable module support dependencies
mark amd rome as unsupported
drm/amdgpu: Silence harmless WARN_ON() during MST disable
x86/spec_ctrl/compat: Call IBRS_ENTRY only after valid kernel stack
Mark Intel Cascade Lake supported
Revert "blk-throttle: fix race between
amd-xgbe: mark driver as tech preview
Forward port weak-modules support from RHEL 7 to RHEL 8
dax: mark tech preview
amd/display/dc/basics/logger.c: fix build error with CONFIG_FORTIFY_SOURCE=y
spec: Add missing BuildRequires for bpftool
svm: nested virt support off by default
blk-mq: sync the update nr_hw_queues with
netfilter: xt_hashlimit: do not crash when reading proc file
x86/spec_ctrl: Make IBRS code work with SSBD mitigation
x86/spec_ctrl: Auto-enable IBRS on Skylake
x86/spec_ctrl: Extend spectre_v2 boot option to support IBRS
x86/spec_ctrl: Boot time IBRS initialization
x86/spec_ctrl: Add IBRS code to the 64-bit assembly entry code
x86/cpufeatures: Increase NCAPINTS for future extension
iommu/arm-smmu: workaround DMA mode issues
rh_kabi: Add macros to size and extend structs
redhat: Move gfs2 and dlm out of kernel-modules-extra
Fix x86 32-bit invalid cpu boot failure message
Generate BootLoaderSpec config fragments
lfpc: add Lancer FCoE to the removed devices
megaraid_sas: add removed id table
aacraid: add removed id table
qla4xxx: add removed id table
lpfc: add removed id table
qla2xxx: add removed id table
mpt3sas: add removed id table
be2iscsi: add removed id table
rh_taint, pci : add information about removed hardware
kernel: add SUPPORT_REMOVED kernel taint
xdp: exclude XDP from kABI guarantee
rh_kabi: introduce RH_KABI_EXCLUDE
block: Ensure that a request queue is dissociated from the
drivers/block/drbd: remove the null check for
drivers/block/aoe/aoedev: NULL check is not needed for
drivers/block/mtip32xx: remove the null check for
block: Switch struct packet_command to use struct
t10-pi: provide empty t10_pi_complete() for
Block: blk-throttle: set low_valid immediately once one
block: Document how blk_update_request() handles
blk-mq: remove synchronize_rcu() from
block: Make struct request_queue smaller for
tls: mark as Tech Preview
redhat: remove bootwrapper subpackage
Revert sched/fair: Consider SD_NUMA when selecting the most idle group to schedule on
redhat: makefile: adjust KBUILD_CFLAGS to reflect kernel.spec for powerpc builds
redhat: spec: build ppc64le kernel with -O3
csiostor: Add a soft dep on cxgb4 driver
dell_rbu: make firmware payload memory uncachable
mark intel knights landing and knights mill unsupported
mark whiskey-lake processor supported
ipmi: do not configure ipmi for HPE m400
IB/rxe: Mark Soft-RoCE Transport driver as tech-preview
ice: mark driver as tech-preview
be2iscsi: remove BE3 family support
update rh_check_supported processor list
kABI: Add generic kABI macros to use for kABI workarounds
add pci_hw_vendor_status()
ahci: thunderx2: Fix for errata that affects stop engine
Vulcan: AHCI PCI bar fix for Broadcom Vulcan early silicon
bpf: set default values for bpf_jit_harden and bpf_jit_kallsyms
bpf: Add tech preview taint for syscall
bpf: set unprivileged_bpf_disabled to 1 by default, add a boot parameter
add Red Hat-specific taint flags
perf tests: Add Python 3 support to attr.py
kdump: fix a grammar issue in a kernel message
tags.sh: Ignore redhat/rpm
put RHEL info into generated headers
kdump: add support for crashkernel=auto
acpi: prefer booting with ACPI over DTS
aarch64: acpi scan: Fix regression related to X-Gene UARTs
ACPI / irq: Workaround firmware issue on X-Gene based m400
add rh_check_supported
qla2xxx: Remove PCI IDs of deprecated adapter
be2iscsi: remove unsupported device IDs
Removing Obsolete hba pci-ids from rhel8
hpsa: modify hpsa driver version
hpsa: remove old cciss-based smartarray pci ids
rh_taint: add support for marking driver as unsupported
rh_taint: add support
qla4xxx: Remove deprecated PCI IDs from RHEL 8
aacraid: Remove depreciated device and vendor PCI id's
megaraid_sas: remove deprecated pci-ids
mpt*: remove certain deprecated pci-ids
modules: add rhelversion MODULE_INFO tag
ACPI: APEI: arm64: Ignore broken HPE moonshot APEI support
compute content hash for kernel-headers
compress modules on all architectures
add gcov rpm packaging support
don't ship spdxcheck.py
clean stray bpf files
Copy symvers.gz to /lib/modules
Add kabi-dup related code into specfile
kernel spec: Add and enable kabi check
Enable warning checks for configs in rpm build
remove workaround for rst2man-3 from python3-docutils
fix dist tag used for hardlink in kernel-devel post
get_maintainer.pl: Add optional .get_maintainer.MAINTAINERS override
drop kernel package dependency on python2
Makefile: Move RHEL definitions down
eBPF: Add bpftool package to spec file
fix conflicts with COPYING file while installing newer 4.17 kernel
do not build kernel meta-package on noarch
kernel spec: remove copy of arch/x86/purgatory/sha256.*
spec: Add new arch/powerpc/kernel/module.lds file to kernel-devel rpm
kernel spec: fix recent build errors from brp-mangle-shebangs
Add i386 to ExclusiveArch to fix noarch package build
Build kernel-abi-whitelists package
kernel spec: build bzImage for s390
kernel spec: arm64: package module.lds in kernel-devel
Re-enable debuginfo packages and fix build with current dist tag
kernel spec: build kernel-debug on all architectures
don\'t build kernel meta-package if we are only building kernel headers
remove use_vdso macro
build perf and tools man pages instead of relying on a separate tarball
disable debug build if arch is in nobuildarches list
remove fedora changelog from spec file
only support ppc64le builds
remove x86 32-bit package support
remove arm 32-bit package support
remove configuration generation support from kernel spec file
remove broken out patches from kernel spec file
import kernel spec from rhel8 bootstrap dist-git
