net: sched: act_simple: remove dependency on rtnl lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
Rebuild_CHGLOG: - [net] sched: act_simple: remove dependency on rtnl lock (Ivan Vecera) [1638022]
Rebuild_FUZZ: 95.15%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 5e48180ed8bcfa60e02887ba801307caf14bbe40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/5e48180e.failed

Use tcf spinlock to protect private simple action data from concurrent
modification during dump. (simple init already uses tcf spinlock when
changing action state)

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5e48180ed8bcfa60e02887ba801307caf14bbe40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_simple.c
diff --cc net/sched/act_simple.c
index 3e22f76567cc,18e4452574cd..000000000000
--- a/net/sched/act_simple.c
+++ b/net/sched/act_simple.c
@@@ -146,9 -154,8 +146,14 @@@ static int tcf_simp_dump(struct sk_buf
  	struct tcf_defact *d = to_defact(a);
  	struct tc_defact opt = {
  		.index   = d->tcf_index,
++<<<<<<< HEAD
 +		.refcnt  = d->tcf_refcnt - ref,
 +		.bindcnt = d->tcf_bindcnt - bind,
 +		.action  = d->tcf_action,
++=======
+ 		.refcnt  = refcount_read(&d->tcf_refcnt) - ref,
+ 		.bindcnt = atomic_read(&d->tcf_bindcnt) - bind,
++>>>>>>> 5e48180ed8bc (net: sched: act_simple: remove dependency on rtnl lock)
  	};
  	struct tcf_t t;
  
* Unmerged path net/sched/act_simple.c
