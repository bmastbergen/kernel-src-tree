net: hns3: fix a SSU buffer checking bug

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Yunsheng Lin <linyunsheng@huawei.com>
commit af854724e51e4047f534ac6d19b3ef9fb3c35c49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/af854724.failed

When caculating the SSU buffer, it first allocate tx and
rx private buffer, then the remaining buffer is for rx
shared buffer. The remaining buffer size should be at
least bigger than or equal to the shared_std, which is the
minimum shared buffer size required by the driver, but
currently if the remaining buffer size is equal to the
shared_std, it returns failure, which causes SSU buffer
allocation failure problem.

This patch fixes this problem by rounding up shared_std before
checking the the remaining buffer size bigger than or equal to
the shared_std.

Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
	Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
	Signed-off-by: Peng Li <lipeng321@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit af854724e51e4047f534ac6d19b3ef9fb3c35c49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
diff --cc drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
index da1cb56b8813,d0e84de39fa3..000000000000
--- a/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
+++ b/drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
@@@ -1305,23 -1392,25 +1305,31 @@@ static bool  hclge_is_rx_buf_ok(struct 
  
  	tc_num = hclge_get_tc_num(hdev);
  	pfc_enable_num = hclge_get_pfc_enalbe_num(hdev);
 -	aligned_mps = roundup(hdev->mps, HCLGE_BUF_SIZE_UNIT);
  
  	if (hnae3_dev_dcb_supported(hdev))
 -		shared_buf_min = 2 * aligned_mps + hdev->dv_buf_size;
 +		shared_buf_min = 2 * hdev->mps + hdev->dv_buf_size;
  	else
 -		shared_buf_min = aligned_mps + HCLGE_NON_DCB_ADDITIONAL_BUF
 +		shared_buf_min = hdev->mps + HCLGE_NON_DCB_ADDITIONAL_BUF
  					+ hdev->dv_buf_size;
  
++<<<<<<< HEAD
 +	shared_buf_tc = pfc_enable_num * hdev->mps +
 +			(tc_num - pfc_enable_num) * hdev->mps / 2 +
 +			hdev->mps;
 +	shared_std = max_t(u32, shared_buf_min, shared_buf_tc);
++=======
+ 	shared_buf_tc = pfc_enable_num * aligned_mps +
+ 			(tc_num - pfc_enable_num) * aligned_mps / 2 +
+ 			aligned_mps;
+ 	shared_std = roundup(max_t(u32, shared_buf_min, shared_buf_tc),
+ 			     HCLGE_BUF_SIZE_UNIT);
++>>>>>>> af854724e51e (net: hns3: fix a SSU buffer checking bug)
  
  	rx_priv = hclge_get_rx_priv_buff_alloced(buf_alloc);
- 	if (rx_all <= rx_priv + shared_std)
+ 	if (rx_all < rx_priv + shared_std)
  		return false;
  
 -	shared_buf = rounddown(rx_all - rx_priv, HCLGE_BUF_SIZE_UNIT);
 +	shared_buf = rx_all - rx_priv;
  	buf_alloc->s_buf.buf_size = shared_buf;
  	if (hnae3_dev_dcb_supported(hdev)) {
  		buf_alloc->s_buf.self.high = shared_buf - hdev->dv_buf_size;
* Unmerged path drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c
