dma-direct: always allow dma mask <= physiscal memory size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 9d7a224b463e1cf1178570b57b6497240fd79bc3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/9d7a224b.failed

This way an architecture with less than 4G of RAM can support dma_mask
smaller than 32-bit without a ZONE_DMA.  Apparently that is a common
case on powerpc.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Robin Murphy <robin.murphy@arm.com>
(cherry picked from commit 9d7a224b463e1cf1178570b57b6497240fd79bc3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/direct.c
diff --cc kernel/dma/direct.c
index 2ba3b52698ea,170bd322a94a..000000000000
--- a/kernel/dma/direct.c
+++ b/kernel/dma/direct.c
@@@ -163,27 -282,27 +163,44 @@@ int dma_direct_map_sg(struct device *de
  	return nents;
  }
  
+ /*
+  * Because 32-bit DMA masks are so common we expect every architecture to be
+  * able to satisfy them - either by not supporting more physical memory, or by
+  * providing a ZONE_DMA32.  If neither is the case, the architecture needs to
+  * use an IOMMU instead of the direct mapping.
+  */
  int dma_direct_supported(struct device *dev, u64 mask)
  {
- #ifdef CONFIG_ZONE_DMA
- 	if (mask < phys_to_dma(dev, DMA_BIT_MASK(ARCH_ZONE_DMA_BITS)))
+ 	u64 min_mask;
+ 
+ 	if (IS_ENABLED(CONFIG_ZONE_DMA))
+ 		min_mask = DMA_BIT_MASK(ARCH_ZONE_DMA_BITS);
+ 	else
+ 		min_mask = DMA_BIT_MASK(32);
+ 
+ 	min_mask = min_t(u64, min_mask, (max_pfn - 1) << PAGE_SHIFT);
+ 
+ 	if (mask >= phys_to_dma(dev, min_mask))
  		return 0;
++<<<<<<< HEAD
 +#else
 +	/*
 +	 * Because 32-bit DMA masks are so common we expect every architecture
 +	 * to be able to satisfy them - either by not supporting more physical
 +	 * memory, or by providing a ZONE_DMA32.  If neither is the case, the
 +	 * architecture needs to use an IOMMU instead of the direct mapping.
 +	 */
 +	if (mask < phys_to_dma(dev, DMA_BIT_MASK(32)))
 +		return 0;
 +#endif
 +	/*
 +	 * Upstream PCI/PCIe bridges or SoC interconnects may not carry
 +	 * as many DMA address bits as the device itself supports.
 +	 */
 +	if (dev->bus_dma_mask && mask > dev->bus_dma_mask)
 +		return 0;
++=======
++>>>>>>> 9d7a224b463e (dma-direct: always allow dma mask <= physiscal memory size)
  	return 1;
  }
  
* Unmerged path kernel/dma/direct.c
