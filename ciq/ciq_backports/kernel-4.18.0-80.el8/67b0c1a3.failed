net: sched: act_pedit: remove dependency on rtnl lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
Rebuild_CHGLOG: - [net] sched: act_pedit: remove dependency on rtnl lock (Ivan Vecera) [1638022]
Rebuild_FUZZ: 95.05%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 67b0c1a3c9ced3726dea73000f8900f453fc894f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/67b0c1a3.failed

Rearrange pedit init code to only access pedit action data while holding
tcf spinlock. Change keys allocation type to atomic to allow it to execute
while holding tcf spinlock. Take tcf spinlock in dump function when
accessing pedit action data.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 67b0c1a3c9ced3726dea73000f8900f453fc894f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_pedit.c
diff --cc net/sched/act_pedit.c
index ff5d047fa7b2,3f62da72ab6a..000000000000
--- a/net/sched/act_pedit.c
+++ b/net/sched/act_pedit.c
@@@ -181,38 -183,33 +181,40 @@@ static int tcf_pedit_init(struct net *n
  		}
  		ret = tcf_idr_create(tn, parm->index, est, a,
  				     &act_pedit_ops, bind, false);
 -		if (ret) {
 -			tcf_idr_cleanup(tn, parm->index);
 +		if (ret)
  			goto out_free;
++<<<<<<< HEAD
 +		p = to_pedit(*a);
 +		keys = kmalloc(ksize, GFP_KERNEL);
 +		if (!keys) {
 +			tcf_idr_release(*a, bind);
 +			ret = -ENOMEM;
 +			goto out_free;
++=======
++>>>>>>> 67b0c1a3c9ce (net: sched: act_pedit: remove dependency on rtnl lock)
  		}
  		ret = ACT_P_CREATED;
 -	} else if (err > 0) {
 +	} else {
  		if (bind)
  			goto out_free;
 +		tcf_idr_release(*a, bind);
  		if (!ovr) {
  			ret = -EEXIST;
- 			goto out_free;
- 		}
- 		p = to_pedit(*a);
- 		if (p->tcfp_nkeys && p->tcfp_nkeys != parm->nkeys) {
- 			keys = kmalloc(ksize, GFP_KERNEL);
- 			if (!keys) {
- 				ret = -ENOMEM;
- 				goto out_free;
- 			}
+ 			goto out_release;
  		}
 -	} else {
 -		return err;
  	}
  
+ 	p = to_pedit(*a);
  	spin_lock_bh(&p->tcf_lock);
- 	p->tcfp_flags = parm->flags;
- 	p->tcf_action = parm->action;
- 	if (keys) {
+ 
+ 	if (ret == ACT_P_CREATED ||
+ 	    (p->tcfp_nkeys && p->tcfp_nkeys != parm->nkeys)) {
+ 		keys = kmalloc(ksize, GFP_ATOMIC);
+ 		if (!keys) {
+ 			spin_unlock_bh(&p->tcf_lock);
+ 			ret = -ENOMEM;
+ 			goto out_release;
+ 		}
  		kfree(p->tcfp_keys);
  		p->tcfp_keys = keys;
  		p->tcfp_nkeys = parm->nkeys;
* Unmerged path net/sched/act_pedit.c
