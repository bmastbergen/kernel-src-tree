x86: uaccess: Inhibit speculation past access_ok() in user_access_begin()

jira LE-1907
cve CVE-2018-20669
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Will Deacon <will.deacon@arm.com>
commit 6e693b3ffecb0b478c7050b44a4842854154f715
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/6e693b3f.failed

Commit 594cc251fdd0 ("make 'user_access_begin()' do 'access_ok()'")
makes the access_ok() check part of the user_access_begin() preceding a
series of 'unsafe' accesses.  This has the desirable effect of ensuring
that all 'unsafe' accesses have been range-checked, without having to
pick through all of the callsites to verify whether the appropriate
checking has been made.

However, the consolidated range check does not inhibit speculation, so
it is still up to the caller to ensure that they are not susceptible to
any speculative side-channel attacks for user addresses that ultimately
fail the access_ok() check.

This is an oversight, so use __uaccess_begin_nospec() to ensure that
speculation is inhibited until the access_ok() check has passed.

	Reported-by: Julien Thierry <julien.thierry@arm.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 6e693b3ffecb0b478c7050b44a4842854154f715)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/uaccess.h
diff --cc arch/x86/include/asm/uaccess.h
index aae77eb8491c,780f2b42c8ef..000000000000
--- a/arch/x86/include/asm/uaccess.h
+++ b/arch/x86/include/asm/uaccess.h
@@@ -708,16 -707,18 +708,27 @@@ extern struct movsl_mask 
   * checking before using them, but you have to surround them with the
   * user_access_begin/end() pair.
   */
++<<<<<<< HEAD
 +#define user_access_begin()	__uaccess_begin()
++=======
+ static __must_check inline bool user_access_begin(const void __user *ptr, size_t len)
+ {
+ 	if (unlikely(!access_ok(ptr,len)))
+ 		return 0;
+ 	__uaccess_begin_nospec();
+ 	return 1;
+ }
+ #define user_access_begin(a,b)	user_access_begin(a,b)
++>>>>>>> 6e693b3ffecb (x86: uaccess: Inhibit speculation past access_ok() in user_access_begin())
  #define user_access_end()	__uaccess_end()
  
 -#define unsafe_put_user(x, ptr, label)	\
 -	__put_user_size((__typeof__(*(ptr)))(x), (ptr), sizeof(*(ptr)), label)
 +#define unsafe_put_user(x, ptr, err_label)					\
 +do {										\
 +	int __pu_err;								\
 +	__typeof__(*(ptr)) __pu_val = (x);					\
 +	__put_user_size(__pu_val, (ptr), sizeof(*(ptr)), __pu_err, -EFAULT);	\
 +	if (unlikely(__pu_err)) goto err_label;					\
 +} while (0)
  
  #define unsafe_get_user(x, ptr, err_label)					\
  do {										\
* Unmerged path arch/x86/include/asm/uaccess.h
