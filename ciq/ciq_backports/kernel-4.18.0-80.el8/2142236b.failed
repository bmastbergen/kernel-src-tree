net: sched: act_bpf: remove dependency on rtnl lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
Rebuild_CHGLOG: - [net] sched: act_bpf: remove dependency on rtnl lock (Ivan Vecera) [1638022]
Rebuild_FUZZ: 94.85%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 2142236b45843dbcbe9691d24cf06caff91a78fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/2142236b.failed

Use tcf spinlock to protect bpf action private data from concurrent
modification during dump and init. Remove rtnl lock assertion that is no
longer necessary.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2142236b45843dbcbe9691d24cf06caff91a78fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_bpf.c
diff --cc net/sched/act_bpf.c
index 9c2fc25c73ff,9e8a33f9fee3..000000000000
--- a/net/sched/act_bpf.c
+++ b/net/sched/act_bpf.c
@@@ -141,9 -141,8 +141,14 @@@ static int tcf_bpf_dump(struct sk_buff 
  	struct tcf_bpf *prog = to_bpf(act);
  	struct tc_act_bpf opt = {
  		.index   = prog->tcf_index,
++<<<<<<< HEAD
 +		.refcnt  = prog->tcf_refcnt - ref,
 +		.bindcnt = prog->tcf_bindcnt - bind,
 +		.action  = prog->tcf_action,
++=======
+ 		.refcnt  = refcount_read(&prog->tcf_refcnt) - ref,
+ 		.bindcnt = atomic_read(&prog->tcf_bindcnt) - bind,
++>>>>>>> 2142236b4584 (net: sched: act_bpf: remove dependency on rtnl lock)
  	};
  	struct tcf_t tm;
  	int ret;
* Unmerged path net/sched/act_bpf.c
