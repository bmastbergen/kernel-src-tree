nvme-pci: don't share queue maps

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 7e849dd9cf37bc52aff9b5236377c405040c959c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/7e849dd9.failed

Now that the block layer checks if a queue map has any queues inside
it there is no more reason to duplicate the maps for the non-default
types.

	Reviewed-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 7e849dd9cf37bc52aff9b5236377c405040c959c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index e63d03795df8,698b350b38cf..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -491,12 -495,8 +491,17 @@@ static int nvme_pci_map_queues(struct b
  
  		map->nr_queues = dev->io_queues[i];
  		if (!map->nr_queues) {
++<<<<<<< HEAD
 +			BUG_ON(i == NVMEQ_TYPE_READ);
 +
 +			/* shared set, resuse read set parameters */
 +			map->nr_queues = dev->io_queues[NVMEQ_TYPE_READ];
 +			qoff = 0;
 +			offset = queue_irq_offset(dev);
++=======
+ 			BUG_ON(i == HCTX_TYPE_DEFAULT);
+ 			continue;
++>>>>>>> 7e849dd9cf37 (nvme-pci: don't share queue maps)
  		}
  
  		/*
* Unmerged path drivers/nvme/host/pci.c
