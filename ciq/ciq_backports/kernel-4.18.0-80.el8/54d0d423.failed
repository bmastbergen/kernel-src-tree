net: sched: act_ife: remove dependency on rtnl lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
Rebuild_CHGLOG: - [net] sched: act_ife: remove dependency on rtnl lock (Ivan Vecera) [1638022]
Rebuild_FUZZ: 94.85%
commit-author Vlad Buslov <vladbu@mellanox.com>
commit 54d0d423a48aa0e61bb39665d20376ba7b940535
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/54d0d423.failed

Use tcf spinlock and rcu to protect params pointer from concurrent
modification during dump and init. Use rcu swap operation to reassign
params pointer under protection of tcf lock. (old params value is not used
by init, so there is no need of standalone rcu dereference step)

Ife action has meta-actions that are compiled as standalone modules. Rtnl
mutex must be released while loading a kernel module. In order to support
execution without rtnl mutex, propagate 'rtnl_held' argument to meta action
loading functions. When requesting meta action module, conditionally
release rtnl lock depending on 'rtnl_held' argument.

	Signed-off-by: Vlad Buslov <vladbu@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 54d0d423a48aa0e61bb39665d20376ba7b940535)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_ife.c
diff --cc net/sched/act_ife.c
index 2aab42c549af,5d200495e467..000000000000
--- a/net/sched/act_ife.c
+++ b/net/sched/act_ife.c
@@@ -594,13 -604,11 +598,18 @@@ static int tcf_ife_dump(struct sk_buff 
  {
  	unsigned char *b = skb_tail_pointer(skb);
  	struct tcf_ife_info *ife = to_ife(a);
- 	struct tcf_ife_params *p = rtnl_dereference(ife->params);
+ 	struct tcf_ife_params *p;
  	struct tc_ife opt = {
  		.index = ife->tcf_index,
++<<<<<<< HEAD
 +		.refcnt = ife->tcf_refcnt - ref,
 +		.bindcnt = ife->tcf_bindcnt - bind,
 +		.action = ife->tcf_action,
 +		.flags = p->flags,
++=======
+ 		.refcnt = refcount_read(&ife->tcf_refcnt) - ref,
+ 		.bindcnt = atomic_read(&ife->tcf_bindcnt) - bind,
++>>>>>>> 54d0d423a48a (net: sched: act_ife: remove dependency on rtnl lock)
  	};
  	struct tcf_t t;
  
* Unmerged path net/sched/act_ife.c
