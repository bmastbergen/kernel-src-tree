iommu/arm-smmu: Support non-strict mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-80.el8
commit-author Robin Murphy <robin.murphy@arm.com>
commit 44f6876a00e83df5fd28681502b19b0f51e4a3c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-80.el8/44f6876a.failed

All we need is to wire up .flush_iotlb_all properly and implement the
domain attribute, and iommu-dma and io-pgtable will do the rest for us.
The only real subtlety is documenting the barrier semantics we're
introducing between io-pgtable and the drivers for non-strict flushes.

	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 44f6876a00e83df5fd28681502b19b0f51e4a3c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/arm-smmu.c
diff --cc drivers/iommu/arm-smmu.c
index a9a45df799e7,1030027cbcc6..000000000000
--- a/drivers/iommu/arm-smmu.c
+++ b/drivers/iommu/arm-smmu.c
@@@ -1568,8 -1607,7 +1607,12 @@@ static struct iommu_ops arm_smmu_ops = 
  	.attach_dev		= arm_smmu_attach_dev,
  	.map			= arm_smmu_map,
  	.unmap			= arm_smmu_unmap,
++<<<<<<< HEAD
 +	.map_sg			= default_iommu_map_sg,
 +	.flush_iotlb_all	= arm_smmu_iotlb_sync,
++=======
+ 	.flush_iotlb_all	= arm_smmu_flush_iotlb_all,
++>>>>>>> 44f6876a00e8 (iommu/arm-smmu: Support non-strict mode)
  	.iotlb_sync		= arm_smmu_iotlb_sync,
  	.iova_to_phys		= arm_smmu_iova_to_phys,
  	.add_device		= arm_smmu_add_device,
* Unmerged path drivers/iommu/arm-smmu.c
