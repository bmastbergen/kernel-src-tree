nfsd: apply umask on fs without ACL support

jira LE-1907
cve CVE-2020-24394
Rebuild_History Non-Buildable kernel-3.10.0-1160.11.1.el7
commit-author J. Bruce Fields <bfields@redhat.com>
commit 22cf8419f1319ff87ec759d0ebdff4cbafaee832
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.11.1.el7/22cf8419.failed

The server is failing to apply the umask when creating new objects on
filesystems without ACL support.

To reproduce this, you need to use NFSv4.2 and a client and server
recent enough to support umask, and you need to export a filesystem that
lacks ACL support (for example, ext4 with the "noacl" mount option).

Filesystems with ACL support are expected to take care of the umask
themselves (usually by calling posix_acl_create).

For filesystems without ACL support, this is up to the caller of
vfs_create(), vfs_mknod(), or vfs_mkdir().

	Reported-by: Elliott Mitchell <ehem+debian@m5p.com>
	Reported-by: Salvatore Bonaccorso <carnil@debian.org>
	Tested-by: Salvatore Bonaccorso <carnil@debian.org>
Fixes: 47057abde515 ("nfsd: add support for the umask attribute")
	Cc: stable@vger.kernel.org
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 22cf8419f1319ff87ec759d0ebdff4cbafaee832)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/vfs.c
diff --cc fs/nfsd/vfs.c
index 3db8b9c8668a,d22a056da477..000000000000
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@@ -1371,16 -1226,9 +1371,22 @@@ nfsd_create(struct svc_rqst *rqstp, str
  		iap->ia_mode = 0;
  	iap->ia_mode = (iap->ia_mode & S_IALLUGO) | type;
  
++<<<<<<< HEAD
 +	err = nfserr_inval;
 +	if (!S_ISREG(type) && !S_ISDIR(type) && !special_file(type)) {
 +		printk(KERN_WARNING "nfsd: bad file type %o in nfsd_create\n",
 +		       type);
 +		goto out;
 +	}
 +
 +	/*
 +	 * Get the dir op function pointer.
 +	 */
++=======
+ 	if (!IS_POSIXACL(dirp))
+ 		iap->ia_mode &= ~current_umask();
+ 
++>>>>>>> 22cf8419f131 (nfsd: apply umask on fs without ACL support)
  	err = 0;
  	host_err = 0;
  	switch (type) {
* Unmerged path fs/nfsd/vfs.c
