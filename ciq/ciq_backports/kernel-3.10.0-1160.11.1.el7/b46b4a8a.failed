hv_utils: drain the timesync packets on onchannelcallback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-1160.11.1.el7
commit-author Vineeth Pillai <viremana@linux.microsoft.com>
commit b46b4a8a57c377b72a98c7930a9f6969d2d4784e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.11.1.el7/b46b4a8a.failed

There could be instances where a system stall prevents the timesync
packets to be consumed. And this might lead to more than one packet
pending in the ring buffer. Current code empties one packet per callback
and it might be a stale one. So drain all the packets from ring buffer
on each callback.

	Signed-off-by: Vineeth Pillai <viremana@linux.microsoft.com>
	Reviewed-by: Michael Kelley <mikelley@microsoft.com>
Link: https://lore.kernel.org/r/20200821152849.99517-1-viremana@linux.microsoft.com
	Signed-off-by: Wei Liu <wei.liu@kernel.org>
(cherry picked from commit b46b4a8a57c377b72a98c7930a9f6969d2d4784e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/hv_util.c
diff --cc drivers/hv/hv_util.c
index 1594361268b7,a4e8d96513c2..000000000000
--- a/drivers/hv/hv_util.c
+++ b/drivers/hv/hv_util.c
@@@ -294,10 -387,23 +294,28 @@@ static void timesync_onchannelcallback(
  	struct ictimesync_ref_data *refdata;
  	u8 *time_txf_buf = util_timesynch.recv_buffer;
  
++<<<<<<< HEAD
 +	vmbus_recvpacket(channel, time_txf_buf,
 +			 PAGE_SIZE, &recvlen, &requestid);
++=======
+ 	/*
+ 	 * Drain the ring buffer and use the last packet to update
+ 	 * host_ts
+ 	 */
+ 	while (1) {
+ 		int ret = vmbus_recvpacket(channel, time_txf_buf,
+ 					   HV_HYP_PAGE_SIZE, &recvlen,
+ 					   &requestid);
+ 		if (ret) {
+ 			pr_warn_once("TimeSync IC pkt recv failed (Err: %d)\n",
+ 				     ret);
+ 			break;
+ 		}
+ 
+ 		if (!recvlen)
+ 			break;
++>>>>>>> b46b4a8a57c3 (hv_utils: drain the timesync packets on onchannelcallback)
  
- 	if (recvlen > 0) {
  		icmsghdrp = (struct icmsg_hdr *)&time_txf_buf[
  				sizeof(struct vmbuspipe_hdr)];
  
* Unmerged path drivers/hv/hv_util.c
