kvm: Serialize wq active checks in kvm_vcpu_wake_up()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Davidlohr Bueso <dave@stgolabs.net>
commit 5e0018b3e39e9b44dbfb380b83026e55d2f65b91
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5e0018b3.failed

This is a generic call and can be suceptible to races
in reading the wq task_list while another task is adding
itself to the list. Add a full barrier by using the
swq_has_sleeper() helper.

	Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5e0018b3e39e9b44dbfb380b83026e55d2f65b91)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/kvm_main.c
diff --cc virt/kvm/kvm_main.c
index 7b5d2dcd7b53,9deb5a245b83..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -2142,17 -2182,18 +2142,22 @@@ out
  }
  EXPORT_SYMBOL_GPL(kvm_vcpu_block);
  
 -bool kvm_vcpu_wake_up(struct kvm_vcpu *vcpu)
 +#ifndef CONFIG_S390
 +void kvm_vcpu_wake_up(struct kvm_vcpu *vcpu)
  {
 -	struct swait_queue_head *wqp;
 +	wait_queue_head_t *wqp;
  
  	wqp = kvm_arch_vcpu_wq(vcpu);
++<<<<<<< HEAD
 +	if (waitqueue_active(wqp)) {
 +		wake_up_interruptible(wqp);
++=======
+ 	if (swq_has_sleeper(wqp)) {
+ 		swake_up(wqp);
++>>>>>>> 5e0018b3e39e (kvm: Serialize wq active checks in kvm_vcpu_wake_up())
  		++vcpu->stat.halt_wakeup;
 -		return true;
  	}
  
 -	return false;
  }
  EXPORT_SYMBOL_GPL(kvm_vcpu_wake_up);
  
* Unmerged path virt/kvm/kvm_main.c
