ovl: check namelen

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 6b2d5fe46fa8f4fc1c5262c73930b9a2a94db2e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6b2d5fe4.failed

We already calculate f_namelen in statfs as the maximum of the name lengths
provided by the filesystems taking part in the overlay.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 6b2d5fe46fa8f4fc1c5262c73930b9a2a94db2e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/namei.c
#	fs/overlayfs/ovl_entry.h
#	fs/overlayfs/super.c
diff --cc fs/overlayfs/super.c
index 6792748a2443,e19e2ed6a4fd..000000000000
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@@ -995,31 -461,34 +995,56 @@@ static int ovl_mount_dir(const char *na
  	return err;
  }
  
- static int ovl_lower_dir(const char *name, struct path *path, long *namelen,
- 			 int *stack_depth, bool *remote)
+ static int ovl_check_namelen(struct path *path, struct ovl_fs *ofs,
+ 			     const char *name)
+ {
+ 	struct kstatfs statfs;
+ 	int err = vfs_statfs(path, &statfs);
+ 
+ 	if (err)
+ 		pr_err("overlayfs: statfs failed on '%s'\n", name);
+ 	else
+ 		ofs->namelen = max(ofs->namelen, statfs.f_namelen);
+ 
+ 	return err;
+ }
+ 
+ static int ovl_lower_dir(const char *name, struct path *path,
+ 			 struct ovl_fs *ofs, int *stack_depth, bool *remote)
  {
  	int err;
++<<<<<<< HEAD
 +	struct kstatfs statfs;
 +	const int *lower_stack_depth;
++=======
++>>>>>>> 6b2d5fe46fa8 (ovl: check namelen)
  
  	err = ovl_mount_dir_noesc(name, path);
  	if (err)
  		goto out;
  
++<<<<<<< HEAD
 +	lower_stack_depth = get_s_stack_depth(path->mnt->mnt_sb);
 +	if (!lower_stack_depth) {
 +		pr_err("overlayfs: superblock missing extension wrapper (old kernel?)\n");
 +		err = -EOPNOTSUPP;
 +		goto out_put;
 +	}
 +
 +	err = vfs_statfs(path, &statfs);
 +	if (err) {
 +		pr_err("overlayfs: statfs failed on '%s'\n", name);
 +		goto out_put;
 +	}
 +	*namelen = max(*namelen, statfs.f_namelen);
 +	*stack_depth = max(*stack_depth, *lower_stack_depth);
++=======
+ 	err = ovl_check_namelen(path, ofs, name);
+ 	if (err)
+ 		goto out_put;
+ 
+ 	*stack_depth = max(*stack_depth, path->mnt->mnt_sb->s_stack_depth);
++>>>>>>> 6b2d5fe46fa8 (ovl: check namelen)
  
  	if (ovl_dentry_remote(path->dentry))
  		*remote = true;
@@@ -1302,9 -760,8 +1331,14 @@@ static int ovl_fill_super(struct super_
  
  	lower = lowertmp;
  	for (numlower = 0; numlower < stacklen; numlower++) {
++<<<<<<< HEAD
 +		err = ovl_lower_dir(lower, &stack[numlower],
 +				    &ufs->lower_namelen, overlay_stack_depth,
 +				    &remote);
++=======
+ 		err = ovl_lower_dir(lower, &stack[numlower], ufs,
+ 				    &sb->s_stack_depth, &remote);
++>>>>>>> 6b2d5fe46fa8 (ovl: check namelen)
  		if (err)
  			goto out_put_lowerpath;
  
* Unmerged path fs/overlayfs/namei.c
* Unmerged path fs/overlayfs/ovl_entry.h
* Unmerged path fs/overlayfs/namei.c
* Unmerged path fs/overlayfs/ovl_entry.h
* Unmerged path fs/overlayfs/super.c
