scsi: megaraid_sas: Resize MFA frame used for IOC INIT to 4k

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] megaraid_sas: Resize MFA frame used for IOC INIT to 4k (Tomas Henzl) [1506606]
Rebuild_FUZZ: 94.74%
commit-author Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
commit b9637d14dc00d91cef0068cde1f9a8959b051028
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b9637d14.failed

Older firmware version unconditionally pulls 4k frame for IOC INIT MFA
frame.  But driver allocates 1k or 4k max_chain_frame_sz based on FW
capability.  During boot time, this results in DMA read errors.
Workaround fix in driver by allocating separate ioc_init frame of 4k
size to support older firmware.

	Signed-off-by: Kashyap Desai <kashyap.desai@broadcom.com>
	Signed-off-by: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b9637d14dc00d91cef0068cde1f9a8959b051028)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
#	drivers/scsi/megaraid/megaraid_sas_fusion.h
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index 61e75ffabe45,857bdbb0f79d..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -775,13 -777,10 +775,20 @@@ megasas_ioc_init_fusion(struct megasas_
  
  	fusion = instance->ctrl_context;
  
++<<<<<<< HEAD
 +	cmd = megasas_get_cmd(instance);
 +
 +	if (!cmd) {
 +		dev_err(&instance->pdev->dev, "Could not allocate cmd for INIT Frame\n");
 +		ret = 1;
 +		goto fail_get_cmd;
 +	}
++=======
+ 	ioc_init_handle = fusion->ioc_init_request_phys;
+ 	IOCInitMessage = fusion->ioc_init_request;
+ 
+ 	cmd = fusion->ioc_init_cmd;
++>>>>>>> b9637d14dc00 (scsi: megaraid_sas: Resize MFA frame used for IOC INIT to 4k)
  
  	scratch_pad_2 = readl
  		(&instance->reg_set->outbound_scratch_pad_2);
@@@ -925,12 -912,6 +932,15 @@@
  	ret = 0;
  
  fail_fw_init:
++<<<<<<< HEAD
 +	megasas_return_cmd(instance, cmd);
 +	if (IOCInitMessage)
 +		dma_free_coherent(&instance->pdev->dev,
 +				  sizeof(struct MPI2_IOC_INIT_REQUEST),
 +				  IOCInitMessage, ioc_init_handle);
 +fail_get_cmd:
++=======
++>>>>>>> b9637d14dc00 (scsi: megaraid_sas: Resize MFA frame used for IOC INIT to 4k)
  	dev_err(&instance->pdev->dev,
  		"Init cmd return status %s for SCSI host %d\n",
  		ret ? "FAILED" : "SUCCESS", instance->host->host_no);
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.h
index d78d76112501,549f86b2e871..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.h
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.h
@@@ -103,13 -103,8 +103,14 @@@ enum MR_RAID_FLAGS_IO_SUB_TYPE 
  #define THRESHOLD_REPLY_COUNT 50
  #define RAID_1_PEER_CMDS 2
  #define JBOD_MAPS_COUNT	2
+ #define IOC_INIT_FRAME_SIZE 4096
  
 +enum MR_FUSION_ADAPTER_TYPE {
 +	THUNDERBOLT_SERIES = 0,
 +	INVADER_SERIES = 1,
 +	VENTURA_SERIES = 2,
 +};
 +
  /*
   * Raid Context structure which describes MegaRAID specific IO Parameters
   * This resides at offset 0x60 where the SGL normally starts in MPT IO Frames
@@@ -1318,9 -1313,13 +1319,16 @@@ struct fusion_context 
  	u8 fast_path_io;
  	struct LD_LOAD_BALANCE_INFO *load_balance_info;
  	u32 load_balance_info_pages;
 -	LD_SPAN_INFO *log_to_span;
 -	u32 log_to_span_pages;
 +	LD_SPAN_INFO log_to_span[MAX_LOGICAL_DRIVES_EXT];
 +	u8 adapter_type;
  	struct LD_STREAM_DETECT **stream_detect_by_ld;
++<<<<<<< HEAD
++=======
+ 	dma_addr_t ioc_init_request_phys;
+ 	struct MPI2_IOC_INIT_REQUEST *ioc_init_request;
+ 	struct megasas_cmd *ioc_init_cmd;
+ 
++>>>>>>> b9637d14dc00 (scsi: megaraid_sas: Resize MFA frame used for IOC INIT to 4k)
  };
  
  union desc_value {
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.h
