tpm: return -ENODEV if np is not set

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Colin Ian King <colin.king@canonical.com>
commit 79eec5b940cffff14c7bd1b9eb856ccb36274cc2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/79eec5b9.failed

device_node np contains a garbage value from the stack and it
is only set if chip->dev.parent->of_node is not null.  Thus the
check for a null np won't spot a garbage value of np from the
stack if chip->dev.parent->of_node is null and if np contains
an garbage non-null value.

I believe the correct fix is to return -ENODEV if and only if
chip->dev.parent->of_node is null.

Found with static analysis by CoverityScan, CID 1377755

	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
(cherry picked from commit 79eec5b940cffff14c7bd1b9eb856ccb36274cc2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/tpm/tpm_of.c
diff --cc drivers/char/tpm/tpm_of.c
index 12a86dda3b69,36df9df4c472..000000000000
--- a/drivers/char/tpm/tpm_of.c
+++ b/drivers/char/tpm/tpm_of.c
@@@ -31,19 -31,16 +31,23 @@@ int tpm_read_log_of(struct tpm_chip *ch
  	log = &chip->log;
  	if (chip->dev.parent->of_node)
  		np = chip->dev.parent->of_node;
++<<<<<<< HEAD
 +	if (!np) {
 +		pr_err("%s: ERROR - IBMVTPM not supported\n", __func__);
++=======
+ 	else
++>>>>>>> 79eec5b940cf (tpm: return -ENODEV if np is not set)
  		return -ENODEV;
 +	}
  
  	sizep = of_get_property(np, "linux,sml-size", NULL);
 -	if (sizep == NULL)
 -		return -EIO;
 -
 +	if (sizep == NULL) {
 +		pr_err("%s: ERROR - SML size not found\n", __func__);
 +		goto cleanup_eio;
 +	}
  	if (*sizep == 0) {
 -		dev_warn(&chip->dev, "%s: Event log area empty\n", __func__);
 -		return -EIO;
 +		pr_err("%s: ERROR - event log area empty\n", __func__);
 +		goto cleanup_eio;
  	}
  
  	basep = of_get_property(np, "linux,sml-base", NULL);
* Unmerged path drivers/char/tpm/tpm_of.c
