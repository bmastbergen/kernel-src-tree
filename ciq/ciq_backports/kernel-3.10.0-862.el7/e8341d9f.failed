xfs: fix up agi unlinked list reservations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Brian Foster <bfoster@redhat.com>
commit e8341d9f6348640dff01d8c4a33695dc82bab5a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e8341d9f.failed

The current AGI unlinked list addition and removal reservations do
not reflect the worst case log usage. An unlinked list removal can
log up to two on-disk inode clusters but only includes reservation
for one. An unlinked list addition logs the on-disk cluster but
includes reservation for an in-core inode.

Update the AGI unlinked list reservation helpers to calculate the
correct worst case reservation for the associated operations.

	Signed-off-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit e8341d9f6348640dff01d8c4a33695dc82bab5a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_trans_resv.c
diff --cc fs/xfs/libxfs/xfs_trans_resv.c
index 1b754cb1e8ae,173b1bc13ffe..000000000000
--- a/fs/xfs/libxfs/xfs_trans_resv.c
+++ b/fs/xfs/libxfs/xfs_trans_resv.c
@@@ -261,7 -289,7 +262,11 @@@ xfs_calc_iunlink_remove_reservation
  	struct xfs_mount        *mp)
  {
  	return xfs_calc_buf_res(1, mp->m_sb.sb_sectsize) +
++<<<<<<< HEAD
 +	       max_t(uint, XFS_FSB_TO_B(mp,1), mp->m_inode_cluster_size);
++=======
+ 	       2 * max_t(uint, XFS_FSB_TO_B(mp, 1), mp->m_inode_cluster_size);
++>>>>>>> e8341d9f6348 (xfs: fix up agi unlinked list reservations)
  }
  
  /*
* Unmerged path fs/xfs/libxfs/xfs_trans_resv.c
