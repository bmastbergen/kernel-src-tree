IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Don Hiatt <don.hiatt@intel.com>
commit b64581adba467c916590c3922f64ec6c2b59a2c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b64581ad.failed

Pass only the lower 16Bits of an Extended LIDs to rvt_cq_entry
to avoid triggering a WARN_ON_ONCE during conversion there.
These upper 16Bits are okay to drop as they are obtained elsewhere.

Fixes: 62ede7779904 ("Add OPA extended LID support")
	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Don Hiatt <don.hiatt@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit b64581adba467c916590c3922f64ec6c2b59a2c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/rc.c
#	drivers/infiniband/hw/hfi1/ruc.c
#	drivers/infiniband/hw/hfi1/uc.c
#	drivers/infiniband/hw/hfi1/ud.c
diff --cc drivers/infiniband/hw/hfi1/rc.c
index bc6bfb74bac7,fd01a760259f..000000000000
--- a/drivers/infiniband/hw/hfi1/rc.c
+++ b/drivers/infiniband/hw/hfi1/rc.c
@@@ -2097,7 -2219,7 +2097,11 @@@ send_last
  			wc.opcode = IB_WC_RECV;
  		wc.qp = &qp->ibqp;
  		wc.src_qp = qp->remote_qpn;
++<<<<<<< HEAD
 +		wc.slid = qp->remote_ah_attr.dlid;
++=======
+ 		wc.slid = rdma_ah_get_dlid(&qp->remote_ah_attr) & U16_MAX;
++>>>>>>> b64581adba46 (IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry)
  		/*
  		 * It seems that IB mandates the presence of an SL in a
  		 * work completion only for the UD transport (see section
diff --cc drivers/infiniband/hw/hfi1/ruc.c
index 675f4ef89dc3,1a3ed6e81b31..000000000000
--- a/drivers/infiniband/hw/hfi1/ruc.c
+++ b/drivers/infiniband/hw/hfi1/ruc.c
@@@ -544,8 -560,8 +544,13 @@@ do_write
  	wc.byte_len = wqe->length;
  	wc.qp = &qp->ibqp;
  	wc.src_qp = qp->remote_qpn;
++<<<<<<< HEAD
 +	wc.slid = qp->remote_ah_attr.dlid;
 +	wc.sl = qp->remote_ah_attr.sl;
++=======
+ 	wc.slid = rdma_ah_get_dlid(&qp->remote_ah_attr) & U16_MAX;
+ 	wc.sl = rdma_ah_get_sl(&qp->remote_ah_attr);
++>>>>>>> b64581adba46 (IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry)
  	wc.port_num = 1;
  	/* Signal completion event if the solicited bit is set. */
  	rvt_cq_enter(ibcq_to_rvtcq(qp->ibqp.recv_cq), &wc,
diff --cc drivers/infiniband/hw/hfi1/uc.c
index f0bdb100e005,1ee80a5f258c..000000000000
--- a/drivers/infiniband/hw/hfi1/uc.c
+++ b/drivers/infiniband/hw/hfi1/uc.c
@@@ -451,7 -462,7 +451,11 @@@ last_imm
  		wc.status = IB_WC_SUCCESS;
  		wc.qp = &qp->ibqp;
  		wc.src_qp = qp->remote_qpn;
++<<<<<<< HEAD
 +		wc.slid = qp->remote_ah_attr.dlid;
++=======
+ 		wc.slid = rdma_ah_get_dlid(&qp->remote_ah_attr) & U16_MAX;
++>>>>>>> b64581adba46 (IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry)
  		/*
  		 * It seems that IB mandates the presence of an SL in a
  		 * work completion only for the UD transport (see section
diff --cc drivers/infiniband/hw/hfi1/ud.c
index 45bc3f04793e,5260b27f5631..000000000000
--- a/drivers/infiniband/hw/hfi1/ud.c
+++ b/drivers/infiniband/hw/hfi1/ud.c
@@@ -243,7 -265,8 +243,12 @@@ static void ud_loopback(struct rvt_qp *
  	} else {
  		wc.pkey_index = 0;
  	}
++<<<<<<< HEAD
 +	wc.slid = ppd->lid | (ah_attr->src_path_bits & ((1 << ppd->lmc) - 1));
++=======
+ 	wc.slid = (ppd->lid | (rdma_ah_get_path_bits(ah_attr) &
+ 				   ((1 << ppd->lmc) - 1))) & U16_MAX;
++>>>>>>> b64581adba46 (IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry)
  	/* Check for loopback when the port lid is not set */
  	if (wc.slid == 0 && sqp->ibqp.qp_type == IB_QPT_GSI)
  		wc.slid = be16_to_cpu(IB_LID_PERMISSIVE);
@@@ -842,8 -1035,9 +847,14 @@@ void hfi1_ud_rcv(struct hfi1_packet *pa
  	} else {
  		wc.pkey_index = 0;
  	}
++<<<<<<< HEAD
 +
 +	wc.slid = slid;
++=======
+ 	if (slid_is_permissive)
+ 		slid = be32_to_cpu(OPA_LID_PERMISSIVE);
+ 	wc.slid = slid & U16_MAX;
++>>>>>>> b64581adba46 (IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry)
  	wc.sl = sl_from_sc;
  
  	/*
* Unmerged path drivers/infiniband/hw/hfi1/rc.c
* Unmerged path drivers/infiniband/hw/hfi1/ruc.c
* Unmerged path drivers/infiniband/hw/hfi1/uc.c
* Unmerged path drivers/infiniband/hw/hfi1/ud.c
