x86/retpoline: Fill return stack buffer on vmexit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] retpoline: Fill return stack buffer on vmexit (Josh Poimboeuf) [1535644]
Rebuild_FUZZ: 95.74%
commit-author David Woodhouse <dwmw@amazon.co.uk>
commit 117cc7a908c83697b0b737d15ae1eb5943afe35b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/117cc7a9.failed

In accordance with the Intel and AMD documentation, we need to overwrite
all entries in the RSB on exiting a guest, to prevent malicious branch
target predictions from affecting the host kernel. This is needed both
for retpoline and for IBRS.

[ak: numbers again for the RSB stuffing labels]

	Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: gnomes@lxorguk.ukuu.org.uk
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: thomas.lendacky@amd.com
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Jiri Kosina <jikos@kernel.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Kees Cook <keescook@google.com>
	Cc: Tim Chen <tim.c.chen@linux.intel.com>
	Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
	Cc: Paul Turner <pjt@google.com>
Link: https://lkml.kernel.org/r/1515755487-8524-1-git-send-email-dwmw@amazon.co.uk

(cherry picked from commit 117cc7a908c83697b0b737d15ae1eb5943afe35b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/nospec-branch.h
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index ea17c4ee84e5,d1e25dba3112..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -47,7 -47,10 +47,12 @@@
  #include <asm/perf_event.h>
  #include <asm/debugreg.h>
  #include <asm/kexec.h>
 -#include <asm/apic.h>
  #include <asm/irq_remapping.h>
++<<<<<<< HEAD
++=======
+ #include <asm/mmu_context.h>
+ #include <asm/nospec-branch.h>
++>>>>>>> 117cc7a908c8 (x86/retpoline: Fill return stack buffer on vmexit)
  
  #include "trace.h"
  #include "pmu.h"
* Unmerged path arch/x86/include/asm/nospec-branch.h
* Unmerged path arch/x86/include/asm/nospec-branch.h
diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 5d58287b60ba..5bac698c5da8 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -41,6 +41,7 @@
 #include <asm/debugreg.h>
 #include <asm/kvm_para.h>
 #include <asm/irq_remapping.h>
+#include <asm/nospec-branch.h>
 
 #include <asm/virtext.h>
 #include "trace.h"
@@ -4830,6 +4831,9 @@ static void svm_vcpu_run(struct kvm_vcpu *vcpu)
 #endif
 		);
 
+	/* Eliminate branch target predictions from guest mode */
+	vmexit_fill_RSB();
+
 #ifdef CONFIG_X86_64
 	wrmsrl(MSR_GS_BASE, svm->host.gs_base);
 #else
* Unmerged path arch/x86/kvm/vmx.c
