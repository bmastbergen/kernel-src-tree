net/mlx5e: Reduce number of heap allocated buffers for update stats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Reduce number of heap allocated buffers for update stats (Kamal Heib) [1456694]
Rebuild_FUZZ: 96.92%
commit-author Gal Pressman <galp@mellanox.com>
commit 0883b4f456f691a54df7a9ae5607ade456fa7b97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0883b4f4.failed

Allocating buffers on the heap every 200ms is something we should avoid,
let's use buffers located on the stack instead.

	Signed-off-by: Gal Pressman <galp@mellanox.com>
	Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Cc: kernel-team@fb.com
(cherry picked from commit 0883b4f456f691a54df7a9ae5607ade456fa7b97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 950c1d21ad52,50184021624e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -243,11 -252,6 +244,14 @@@ static void mlx5e_update_pport_counters
  	int sz = MLX5_ST_SZ_BYTES(ppcnt_reg);
  	int prio;
  	void *out;
++<<<<<<< HEAD
 +	u32 *in;
 +
 +	in = mlx5_vzalloc(sz);
 +	if (!in)
 +		goto free_out;
++=======
++>>>>>>> 0883b4f456f6 (net/mlx5e: Reduce number of heap allocated buffers for update stats)
  
  	MLX5_SET(ppcnt_reg, in, local_port, 1);
  
@@@ -280,9 -284,6 +284,12 @@@
  		mlx5_core_access_reg(mdev, in, sz, out, sz,
  				     MLX5_REG_PPCNT, 0, 0);
  	}
++<<<<<<< HEAD
 +
 +free_out:
 +	kvfree(in);
++=======
++>>>>>>> 0883b4f456f6 (net/mlx5e: Reduce number of heap allocated buffers for update stats)
  }
  
  static void mlx5e_update_q_counter(struct mlx5e_priv *priv)
@@@ -307,10 -308,6 +314,13 @@@ static void mlx5e_update_pcie_counters(
  	if (!MLX5_CAP_MCAM_FEATURE(mdev, pcie_performance_group))
  		return;
  
++<<<<<<< HEAD
 +	in = mlx5_vzalloc(sz);
 +	if (!in)
 +		return;
 +
++=======
++>>>>>>> 0883b4f456f6 (net/mlx5e: Reduce number of heap allocated buffers for update stats)
  	out = pcie_stats->pcie_perf_counters;
  	MLX5_SET(mpcnt_reg, in, grp, MLX5_PCIE_PERFORMANCE_COUNTERS_GROUP);
  	mlx5_core_access_reg(mdev, in, sz, out, sz, MLX5_REG_MPCNT, 0, 0);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
