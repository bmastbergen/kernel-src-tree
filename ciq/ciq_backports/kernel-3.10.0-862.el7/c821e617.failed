nfp: prepare print macros for use without netdev

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit c821e617896e99b82fa82777b1ac1263c51eea64
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c821e617.failed

To be able to reuse print macros easily with control vNICs make the
macros check if netdev pointer is populated and use dev_* print
functions otherwise.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c821e617896e99b82fa82777b1ac1263c51eea64)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net.h
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net.h
index 600c79f39fe0,b14aa31d494a..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net.h
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net.h
@@@ -50,15 -50,32 +50,44 @@@
  
  #include "nfp_net_ctrl.h"
  
++<<<<<<< HEAD
 +#define nn_err(nn, fmt, args...)  netdev_err((nn)->netdev, fmt, ## args)
 +#define nn_warn(nn, fmt, args...) netdev_warn((nn)->netdev, fmt, ## args)
 +#define nn_info(nn, fmt, args...) netdev_info((nn)->netdev, fmt, ## args)
 +#define nn_dbg(nn, fmt, args...)  netdev_dbg((nn)->netdev, fmt, ## args)
 +#define nn_warn_ratelimit(nn, fmt, args...)				\
 +	do {								\
 +		if (unlikely(net_ratelimit()))				\
 +			netdev_warn((nn)->netdev, fmt, ## args);	\
 +	} while (0)
++=======
+ #define nn_pr(nn, lvl, fmt, args...)					\
+ 	({								\
+ 		struct nfp_net *__nn = (nn);				\
+ 									\
+ 		if (__nn->dp.netdev)					\
+ 			netdev_printk(lvl, __nn->dp.netdev, fmt, ## args); \
+ 		else							\
+ 			dev_printk(lvl, __nn->dp.dev, "ctrl: " fmt, ## args); \
+ 	})
+ 
+ #define nn_err(nn, fmt, args...)	nn_pr(nn, KERN_ERR, fmt, ## args)
+ #define nn_warn(nn, fmt, args...)	nn_pr(nn, KERN_WARNING, fmt, ## args)
+ #define nn_info(nn, fmt, args...)	nn_pr(nn, KERN_INFO, fmt, ## args)
+ #define nn_dbg(nn, fmt, args...)	nn_pr(nn, KERN_DEBUG, fmt, ## args)
+ 
+ #define nn_dp_warn(dp, fmt, args...)					\
+ 	({								\
+ 		struct nfp_net_dp *__dp = (dp);				\
+ 									\
+ 		if (unlikely(net_ratelimit())) {			\
+ 			if (__dp->netdev)				\
+ 				netdev_warn(__dp->netdev, fmt, ## args); \
+ 			else						\
+ 				dev_warn(__dp->dev, fmt, ## args);	\
+ 		}							\
+ 	})
++>>>>>>> c821e617896e (nfp: prepare print macros for use without netdev)
  
  /* Max time to wait for NFP to respond on updates (in seconds) */
  #define NFP_NET_POLL_TIMEOUT	5
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net.h
