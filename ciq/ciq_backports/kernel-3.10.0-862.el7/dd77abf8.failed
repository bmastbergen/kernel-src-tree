IB/mlx4: Support RAW Ethernet when RoCE is disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Majd Dibbiny <majd@mellanox.com>
commit dd77abf8a03a1ebd4dd3ddebecce312dcb0d1af1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/dd77abf8.failed

On some environments, such as certain SR-IOV VF configurations, RoCE
isn't supported for mlx4 Ethernet ports. Currently the driver will
not open IB device on that port.

This is problematic since we do want user-space RAW Ethernet QPs functionality
to remain in place. For that end, enhance the relevant driver flows such that we
do create a device instance in that case.

	Signed-off-by: Majd Dibbiny <majd@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit dd77abf8a03a1ebd4dd3ddebecce312dcb0d1af1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx4/main.c
diff --cc drivers/infiniband/hw/mlx4/main.c
index aa0cb6252b8c,2cc6f21baea1..000000000000
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@@ -2865,23 -2867,19 +2865,37 @@@ static void *mlx4_ib_add(struct mlx4_de
  	if (mlx4_ib_init_sriov(ibdev))
  		goto err_mad;
  
++<<<<<<< HEAD
 +	if (dev->caps.flags & MLX4_DEV_CAP_FLAG_IBOE ||
 +	    dev->caps.flags2 & MLX4_DEV_CAP_FLAG2_ROCE_V1_V2) {
 +		if (!iboe->nb.notifier_call) {
 +			iboe->nb.notifier_call = mlx4_ib_netdev_event;
 +			err = register_netdevice_notifier_rh(&iboe->nb);
 +			if (err) {
 +				iboe->nb.notifier_call = NULL;
 +				goto err_notif;
 +			}
 +		}
 +		if (dev->caps.flags2 & MLX4_DEV_CAP_FLAG2_ROCE_V1_V2) {
 +			err = mlx4_config_roce_v2_port(dev, ROCE_V2_UDP_DPORT);
 +			if (err) {
 +				goto err_notif;
 +			}
++=======
+ 	if (!iboe->nb.notifier_call) {
+ 		iboe->nb.notifier_call = mlx4_ib_netdev_event;
+ 		err = register_netdevice_notifier(&iboe->nb);
+ 		if (err) {
+ 			iboe->nb.notifier_call = NULL;
+ 			goto err_notif;
++>>>>>>> dd77abf8a03a (IB/mlx4: Support RAW Ethernet when RoCE is disabled)
  		}
  	}
+ 	if (dev->caps.flags2 & MLX4_DEV_CAP_FLAG2_ROCE_V1_V2) {
+ 		err = mlx4_config_roce_v2_port(dev, ROCE_V2_UDP_DPORT);
+ 		if (err)
+ 			goto err_notif;
+ 	}
  
  	for (j = 0; j < ARRAY_SIZE(mlx4_class_attributes); ++j) {
  		if (device_create_file(&ibdev->ib_dev.dev,
* Unmerged path drivers/infiniband/hw/mlx4/main.c
diff --git a/include/linux/mlx4/device.h b/include/linux/mlx4/device.h
index 7a7ab22c757b..3a9bf61b9431 100644
--- a/include/linux/mlx4/device.h
+++ b/include/linux/mlx4/device.h
@@ -1011,8 +1011,7 @@ struct mlx4_mad_ifc {
 #define mlx4_foreach_ib_transport_port(port, dev)                         \
 	for ((port) = 1; (port) <= (dev)->caps.num_ports; (port)++)       \
 		if (((dev)->caps.port_mask[port] == MLX4_PORT_TYPE_IB) || \
-			((dev)->caps.flags & MLX4_DEV_CAP_FLAG_IBOE) || \
-			((dev)->caps.flags2 & MLX4_DEV_CAP_FLAG2_ROCE_V1_V2))
+		    ((dev)->caps.port_mask[port] == MLX4_PORT_TYPE_ETH))
 
 #define MLX4_INVALID_SLAVE_ID	0xFF
 #define MLX4_SINK_COUNTER_INDEX(dev)	(dev->caps.max_counters - 1)
