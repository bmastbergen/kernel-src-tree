nfp: replace -ENOTSUPP with -EOPNOTSUPP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 46c505188b788c050d28174c6e726835e057bb28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/46c50518.failed

As Or points out in commit 423b3aecf290 ("net/mlx4: Change ENOTSUPP
to EOPNOTSUPP"), ENOTSUPP is NFS specific error.  Replace it with
EOPNOTSUPP.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 46c505188b788c050d28174c6e726835e057bb28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_bpf_jit.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_common.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_offload.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_common.c
index 4bac97838402,0e87b446e98f..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
@@@ -2400,8 -2634,35 +2400,38 @@@ static struct rtnl_link_stats64 *nfp_ne
  		stats->tx_bytes += data[1];
  		stats->tx_errors += data[2];
  	}
 -}
  
++<<<<<<< HEAD
 +	return stats;
++=======
+ static bool nfp_net_ebpf_capable(struct nfp_net *nn)
+ {
+ 	if (nn->cap & NFP_NET_CFG_CTRL_BPF &&
+ 	    nn_readb(nn, NFP_NET_CFG_BPF_ABI) == NFP_NET_BPF_ABI)
+ 		return true;
+ 	return false;
+ }
+ 
+ static int
+ nfp_net_setup_tc(struct net_device *netdev, u32 handle, __be16 proto,
+ 		 struct tc_to_netdev *tc)
+ {
+ 	struct nfp_net *nn = netdev_priv(netdev);
+ 
+ 	if (TC_H_MAJ(handle) != TC_H_MAJ(TC_H_INGRESS))
+ 		return -EOPNOTSUPP;
+ 	if (proto != htons(ETH_P_ALL))
+ 		return -EOPNOTSUPP;
+ 
+ 	if (tc->type == TC_SETUP_CLSBPF && nfp_net_ebpf_capable(nn)) {
+ 		if (!nn->dp.bpf_offload_xdp)
+ 			return nfp_net_bpf_offload(nn, tc->cls_bpf);
+ 		else
+ 			return -EBUSY;
+ 	}
+ 
+ 	return -EINVAL;
++>>>>>>> 46c505188b78 (nfp: replace -ENOTSUPP with -EOPNOTSUPP)
  }
  
  static int nfp_net_set_features(struct net_device *netdev,
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_bpf_jit.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_offload.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_bpf_jit.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_common.c
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
index 69f458e0de89..cf8342bbe0c6 100644
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
@@ -767,7 +767,7 @@ static int nfp_net_set_coalesce(struct net_device *netdev,
 	    ec->tx_coalesce_usecs_high ||
 	    ec->tx_max_coalesced_frames_high ||
 	    ec->rate_sample_interval)
-		return -ENOTSUPP;
+		return -EOPNOTSUPP;
 
 	/* Compute factor used to convert coalesce '_usecs' parameters to
 	 * ME timestamp ticks.  There are 16 ME clock cycles for each timestamp
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_offload.c
