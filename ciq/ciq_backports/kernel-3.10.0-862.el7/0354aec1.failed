dma-debug: Fix dma_debug_entry offset calculation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Daniel Mentz <danielmentz@google.com>
commit 0354aec19ce3d355c6213b0434064efc25c9b22c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0354aec1.failed

dma-debug uses struct dma_debug_entry to keep track of dma coherent
memory allocation requests. The virtual address is converted into a pfn
and an offset. Previously, the offset was calculated using an incorrect
bit mask.  As a result, we saw incorrect error messages from dma-debug
like the following:

"DMA-API: exceeded 7 overlapping mappings of cacheline 0x03e00000"

Cacheline 0x03e00000 does not exist on our platform.

	Cc: <stable@vger.kernel.org>
Fixes: 0abdd7a81b7e ("dma-debug: introduce debug_dma_assert_idle()")
	Signed-off-by: Daniel Mentz <danielmentz@google.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 0354aec19ce3d355c6213b0434064efc25c9b22c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/dma-debug.c
diff --cc lib/dma-debug.c
index 050a97ad50b2,d34bd24c2c84..000000000000
--- a/lib/dma-debug.c
+++ b/lib/dma-debug.c
@@@ -1246,7 -1463,8 +1246,12 @@@ void debug_dma_alloc_coherent(struct de
  
  	entry->type      = dma_debug_coherent;
  	entry->dev       = dev;
++<<<<<<< HEAD
 +	entry->paddr     = virt_to_phys(virt);
++=======
+ 	entry->pfn	 = page_to_pfn(virt_to_page(virt));
+ 	entry->offset	 = (size_t) virt & ~PAGE_MASK;
++>>>>>>> 0354aec19ce3 (dma-debug: Fix dma_debug_entry offset calculation)
  	entry->size      = size;
  	entry->dev_addr  = dma_addr;
  	entry->direction = DMA_BIDIRECTIONAL;
@@@ -1261,7 -1479,8 +1266,12 @@@ void debug_dma_free_coherent(struct dev
  	struct dma_debug_entry ref = {
  		.type           = dma_debug_coherent,
  		.dev            = dev,
++<<<<<<< HEAD
 +		.paddr          = virt_to_phys(virt),
++=======
+ 		.pfn		= page_to_pfn(virt_to_page(virt)),
+ 		.offset		= (size_t) virt & ~PAGE_MASK,
++>>>>>>> 0354aec19ce3 (dma-debug: Fix dma_debug_entry offset calculation)
  		.dev_addr       = addr,
  		.size           = size,
  		.direction      = DMA_BIDIRECTIONAL,
* Unmerged path lib/dma-debug.c
