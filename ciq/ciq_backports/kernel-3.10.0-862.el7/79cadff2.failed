x86/hyper-v: Include hyperv/ only when CONFIG_HYPERV is set

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] hyper-v: Include hyperv/ only when CONFIG_HYPERV is set (Vitaly Kuznetsov) [1465471]
Rebuild_FUZZ: 96.49%
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 79cadff2d92bb8b1448f6dba6861d15adc3dc4cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/79cadff2.failed

Code is arch/x86/hyperv/ is only needed when CONFIG_HYPERV is set, the
'basic' support and detection lives in arch/x86/kernel/cpu/mshyperv.c
which is included when CONFIG_HYPERVISOR_GUEST is set.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
	Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Cc: Jork Loeser <Jork.Loeser@microsoft.com>
	Cc: K. Y. Srinivasan <kys@microsoft.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Simon Xiao <sixiao@microsoft.com>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: devel@linuxdriverproject.org
Link: http://lkml.kernel.org/r/20170802160921.21791-2-vkuznets@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 79cadff2d92bb8b1448f6dba6861d15adc3dc4cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/mshyperv.h
diff --cc arch/x86/include/asm/mshyperv.h
index c86331fdc4b0,baea2679a0aa..000000000000
--- a/arch/x86/include/asm/mshyperv.h
+++ b/arch/x86/include/asm/mshyperv.h
@@@ -83,6 -167,70 +83,71 @@@ void hv_setup_crash_handler(void (*hand
  void hv_remove_crash_handler(void);
  
  #if IS_ENABLED(CONFIG_HYPERV)
 -extern struct clocksource *hyperv_cs;
 -
  void hyperv_init(void);
++<<<<<<< HEAD
++=======
+ void hyperv_report_panic(struct pt_regs *regs);
+ bool hv_is_hypercall_page_setup(void);
+ void hyperv_cleanup(void);
+ #else /* CONFIG_HYPERV */
+ static inline void hyperv_init(void) {}
+ static inline bool hv_is_hypercall_page_setup(void) { return false; }
+ static inline void hyperv_cleanup(void) {}
+ #endif /* CONFIG_HYPERV */
+ 
+ #ifdef CONFIG_HYPERV_TSCPAGE
+ struct ms_hyperv_tsc_page *hv_get_tsc_page(void);
+ static inline u64 hv_read_tsc_page(const struct ms_hyperv_tsc_page *tsc_pg)
+ {
+ 	u64 scale, offset, cur_tsc;
+ 	u32 sequence;
+ 
+ 	/*
+ 	 * The protocol for reading Hyper-V TSC page is specified in Hypervisor
+ 	 * Top-Level Functional Specification ver. 3.0 and above. To get the
+ 	 * reference time we must do the following:
+ 	 * - READ ReferenceTscSequence
+ 	 *   A special '0' value indicates the time source is unreliable and we
+ 	 *   need to use something else. The currently published specification
+ 	 *   versions (up to 4.0b) contain a mistake and wrongly claim '-1'
+ 	 *   instead of '0' as the special value, see commit c35b82ef0294.
+ 	 * - ReferenceTime =
+ 	 *        ((RDTSC() * ReferenceTscScale) >> 64) + ReferenceTscOffset
+ 	 * - READ ReferenceTscSequence again. In case its value has changed
+ 	 *   since our first reading we need to discard ReferenceTime and repeat
+ 	 *   the whole sequence as the hypervisor was updating the page in
+ 	 *   between.
+ 	 */
+ 	do {
+ 		sequence = READ_ONCE(tsc_pg->tsc_sequence);
+ 		if (!sequence)
+ 			return U64_MAX;
+ 		/*
+ 		 * Make sure we read sequence before we read other values from
+ 		 * TSC page.
+ 		 */
+ 		smp_rmb();
+ 
+ 		scale = READ_ONCE(tsc_pg->tsc_scale);
+ 		offset = READ_ONCE(tsc_pg->tsc_offset);
+ 		cur_tsc = rdtsc_ordered();
+ 
+ 		/*
+ 		 * Make sure we read sequence after we read all other values
+ 		 * from TSC page.
+ 		 */
+ 		smp_rmb();
+ 
+ 	} while (READ_ONCE(tsc_pg->tsc_sequence) != sequence);
+ 
+ 	return mul_u64_u64_shr(cur_tsc, scale, 64) + offset;
+ }
+ 
+ #else
+ static inline struct ms_hyperv_tsc_page *hv_get_tsc_page(void)
+ {
+ 	return NULL;
+ }
++>>>>>>> 79cadff2d92b (x86/hyper-v: Include hyperv/ only when CONFIG_HYPERV is set)
  #endif
  #endif
diff --git a/arch/x86/Kbuild b/arch/x86/Kbuild
index e65c24050aae..84c699782644 100644
--- a/arch/x86/Kbuild
+++ b/arch/x86/Kbuild
@@ -6,7 +6,7 @@ obj-$(CONFIG_KVM) += kvm/
 obj-$(CONFIG_XEN) += xen/
 
 # Hyper-V paravirtualization support
-obj-$(CONFIG_HYPERVISOR_GUEST) += hyperv/
+obj-$(subst m,y,$(CONFIG_HYPERV)) += hyperv/
 
 # lguest paravirtualization support
 obj-$(CONFIG_LGUEST_GUEST) += lguest/
* Unmerged path arch/x86/include/asm/mshyperv.h
