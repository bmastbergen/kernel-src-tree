scsi: cxlflash: Update sysfs helper routines to pass config structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] cxlflash: Update sysfs helper routines to pass config structure (Gustavo Duarte) [1456494]
Rebuild_FUZZ: 95.45%
commit-author Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
commit 3b225cd32a05b627a6ca366f364a824beaabecc5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3b225cd3.failed

As staging for future function, pass the config pointer instead of the AFU
pointer for port-related sysfs helper routines.

	Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Signed-off-by: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 3b225cd32a05b627a6ca366f364a824beaabecc5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxlflash/main.c
diff --cc drivers/scsi/cxlflash/main.c
index c68badcfa77f,157d806c97fc..000000000000
--- a/drivers/scsi/cxlflash/main.c
+++ b/drivers/scsi/cxlflash/main.c
@@@ -2062,11 -2101,9 +2065,15 @@@ static ssize_t port0_show(struct devic
  			  struct device_attribute *attr,
  			  char *buf)
  {
++<<<<<<< HEAD
 +	struct Scsi_Host *shost = class_to_shost(dev);
 +	struct cxlflash_cfg *cfg = (struct cxlflash_cfg *)shost->hostdata;
 +	struct afu *afu = cfg->afu;
++=======
+ 	struct cxlflash_cfg *cfg = shost_priv(class_to_shost(dev));
++>>>>>>> 3b225cd32a05 (scsi: cxlflash: Update sysfs helper routines to pass config structure)
  
- 	return cxlflash_show_port_status(0, afu, buf);
+ 	return cxlflash_show_port_status(0, cfg, buf);
  }
  
  /**
@@@ -2081,11 -2118,9 +2088,15 @@@ static ssize_t port1_show(struct devic
  			  struct device_attribute *attr,
  			  char *buf)
  {
++<<<<<<< HEAD
 +	struct Scsi_Host *shost = class_to_shost(dev);
 +	struct cxlflash_cfg *cfg = (struct cxlflash_cfg *)shost->hostdata;
 +	struct afu *afu = cfg->afu;
++=======
+ 	struct cxlflash_cfg *cfg = shost_priv(class_to_shost(dev));
++>>>>>>> 3b225cd32a05 (scsi: cxlflash: Update sysfs helper routines to pass config structure)
  
- 	return cxlflash_show_port_status(1, afu, buf);
+ 	return cxlflash_show_port_status(1, cfg, buf);
  }
  
  /**
@@@ -2211,11 -2246,9 +2223,15 @@@ static ssize_t port0_lun_table_show(str
  				    struct device_attribute *attr,
  				    char *buf)
  {
++<<<<<<< HEAD
 +	struct Scsi_Host *shost = class_to_shost(dev);
 +	struct cxlflash_cfg *cfg = (struct cxlflash_cfg *)shost->hostdata;
 +	struct afu *afu = cfg->afu;
++=======
+ 	struct cxlflash_cfg *cfg = shost_priv(class_to_shost(dev));
++>>>>>>> 3b225cd32a05 (scsi: cxlflash: Update sysfs helper routines to pass config structure)
  
- 	return cxlflash_show_port_lun_table(0, afu, buf);
+ 	return cxlflash_show_port_lun_table(0, cfg, buf);
  }
  
  /**
@@@ -2230,11 -2263,78 +2246,15 @@@ static ssize_t port1_lun_table_show(str
  				    struct device_attribute *attr,
  				    char *buf)
  {
 -	struct cxlflash_cfg *cfg = shost_priv(class_to_shost(dev));
 -
 -	return cxlflash_show_port_lun_table(1, cfg, buf);
 -}
 -
 -/**
 - * irqpoll_weight_show() - presents the current IRQ poll weight for the host
 - * @dev:	Generic device associated with the host.
 - * @attr:	Device attribute representing the IRQ poll weight.
 - * @buf:	Buffer of length PAGE_SIZE to report back the current IRQ poll
 - *		weight in ASCII.
 - *
 - * An IRQ poll weight of 0 indicates polling is disabled.
 - *
 - * Return: The size of the ASCII string returned in @buf.
 - */
 -static ssize_t irqpoll_weight_show(struct device *dev,
 -				   struct device_attribute *attr, char *buf)
 -{
 -	struct cxlflash_cfg *cfg = shost_priv(class_to_shost(dev));
++<<<<<<< HEAD
 +	struct Scsi_Host *shost = class_to_shost(dev);
 +	struct cxlflash_cfg *cfg = (struct cxlflash_cfg *)shost->hostdata;
  	struct afu *afu = cfg->afu;
 -
 -	return scnprintf(buf, PAGE_SIZE, "%u\n", afu->irqpoll_weight);
 -}
 -
 -/**
 - * irqpoll_weight_store() - sets the current IRQ poll weight for the host
 - * @dev:	Generic device associated with the host.
 - * @attr:	Device attribute representing the IRQ poll weight.
 - * @buf:	Buffer of length PAGE_SIZE containing the desired IRQ poll
 - *		weight in ASCII.
 - * @count:	Length of data resizing in @buf.
 - *
 - * An IRQ poll weight of 0 indicates polling is disabled.
 - *
 - * Return: The size of the ASCII string returned in @buf.
 - */
 -static ssize_t irqpoll_weight_store(struct device *dev,
 -				    struct device_attribute *attr,
 -				    const char *buf, size_t count)
 -{
++=======
+ 	struct cxlflash_cfg *cfg = shost_priv(class_to_shost(dev));
 -	struct device *cfgdev = &cfg->dev->dev;
 -	struct afu *afu = cfg->afu;
 -	u32 weight;
 -	int rc;
 -
 -	rc = kstrtouint(buf, 10, &weight);
 -	if (rc)
 -		return -EINVAL;
 -
 -	if (weight > 256) {
 -		dev_info(cfgdev,
 -			 "Invalid IRQ poll weight. It must be 256 or less.\n");
 -		return -EINVAL;
 -	}
++>>>>>>> 3b225cd32a05 (scsi: cxlflash: Update sysfs helper routines to pass config structure)
  
- 	return cxlflash_show_port_lun_table(1, afu, buf);
 -	if (weight == afu->irqpoll_weight) {
 -		dev_info(cfgdev,
 -			 "Current IRQ poll weight has the same weight.\n");
 -		return -EINVAL;
 -	}
 -
 -	if (afu_is_irqpoll_enabled(afu))
 -		irq_poll_disable(&afu->irqpoll);
 -
 -	afu->irqpoll_weight = weight;
 -
 -	if (weight > 0)
 -		irq_poll_init(&afu->irqpoll, weight, cxlflash_irqpoll);
 -
 -	return count;
++	return cxlflash_show_port_lun_table(1, cfg, buf);
  }
  
  /**
* Unmerged path drivers/scsi/cxlflash/main.c
