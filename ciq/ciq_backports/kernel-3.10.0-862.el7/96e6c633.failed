scsi: csiostor: add check for supported fw version

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] csiostor: add check for supported fw version (Arjun Vynipadath) [1458318]
Rebuild_FUZZ: 93.62%
commit-author Varun Prakash <varun@chelsio.com>
commit 96e6c633ec48ca487cc150d77810ac500bab35f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/96e6c633.failed

T6 FCoE support is added in fw version 1.16.45.0 so return error if fw
version < 1.16.45.0 for T6 adapters.

	Signed-off-by: Varun Prakash <varun@chelsio.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 96e6c633ec48ca487cc150d77810ac500bab35f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/csiostor/csio_hw.c
diff --cc drivers/scsi/csiostor/csio_hw.c
index 660dba7be3a9,2029ad225121..000000000000
--- a/drivers/scsi/csiostor/csio_hw.c
+++ b/drivers/scsi/csiostor/csio_hw.c
@@@ -2215,33 -2146,41 +2226,46 @@@ csio_hw_configure(struct csio_hw *hw
  		if (rv != 0)
  			goto out;
  
++<<<<<<< HEAD
 +		/*
 +		 * If the firmware doesn't support Configuration
 +		 * Files, use the old Driver-based, hard-wired
 +		 * initialization.  Otherwise, try using the
 +		 * Configuration File support and fall back to the
 +		 * Driver-based initialization if there's no
 +		 * Configuration File found.
++=======
+ 		rv = csio_hw_check_fwver(hw);
+ 		if (rv < 0)
+ 			goto out;
+ 
+ 		/* If the firmware doesn't support Configuration Files,
+ 		 * return an error.
++>>>>>>> 96e6c633ec48 (scsi: csiostor: add check for supported fw version)
  		 */
 -		rv = csio_hw_check_fwconfig(hw, param);
 -		if (rv != 0) {
 -			csio_info(hw, "Firmware doesn't support "
 -				  "Firmware Configuration files\n");
 -			goto out;
 +		if (csio_hw_check_fwconfig(hw, param) == 0) {
 +			rv = csio_hw_use_fwconfig(hw, reset, param);
 +			if (rv == -ENOENT)
 +				goto out;
 +			if (rv != 0) {
 +				csio_info(hw,
 +				    "No Configuration File present "
 +				    "on adapter.  Using hard-wired "
 +				    "configuration parameters.\n");
 +				rv = csio_hw_no_fwconfig(hw, reset);
 +			}
 +		} else {
 +			rv = csio_hw_no_fwconfig(hw, reset);
  		}
  
 -		/* The firmware provides us with a memory buffer where we can
 -		 * load a Configuration File from the host if we want to
 -		 * override the Configuration File in flash.
 -		 */
 -		rv = csio_hw_use_fwconfig(hw, reset, param);
 -		if (rv == -ENOENT) {
 -			csio_info(hw, "Could not initialize "
 -				  "adapter, error%d\n", rv);
 -			goto out;
 -		}
 -		if (rv != 0) {
 -			csio_info(hw, "Could not initialize "
 -				  "adapter, error%d\n", rv);
 +		if (rv != 0)
  			goto out;
 -		}
  
  	} else {
+ 		rv = csio_hw_check_fwver(hw);
+ 		if (rv < 0)
+ 			goto out;
+ 
  		if (hw->fw_state == CSIO_DEV_STATE_INIT) {
  
  			hw->flags |= CSIO_HWF_USING_SOFT_PARAMS;
* Unmerged path drivers/scsi/csiostor/csio_hw.c
diff --git a/drivers/scsi/csiostor/csio_hw.h b/drivers/scsi/csiostor/csio_hw.h
index 1fe8fdee70fa..f70293a4265b 100644
--- a/drivers/scsi/csiostor/csio_hw.h
+++ b/drivers/scsi/csiostor/csio_hw.h
@@ -70,6 +70,7 @@
 #define CSIO_MAX_CMD_PER_LUN	32
 #define CSIO_MAX_DDP_BUF_SIZE	(1024 * 1024)
 #define CSIO_MAX_SECTOR_SIZE	128
+#define CSIO_MIN_T6_FW		0x01102D00  /* FW 1.16.45.0 */
 
 /* Interrupts */
 #define CSIO_EXTRA_MSI_IQS	2	/* Extra iqs for INTX/MSI mode
