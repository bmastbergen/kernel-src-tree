tools/power turbostat: turbostat.8 update

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [tools] power turbostat: turbostat.8 update (Prarit Bhargava) [1514290]
Rebuild_FUZZ: 92.11%
commit-author Len Brown <len.brown@intel.com>
commit da67e2b9fd1d846a41978690da0a899d8e4378ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/da67e2b9.failed

update examples to show recently updated features.
In particular
--add
--show
--hide
--cpu
--list

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit da67e2b9fd1d846a41978690da0a899d8e4378ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.8
diff --cc tools/power/x86/turbostat/turbostat.8
index 0863a08025ac,b1b1ab80102c..000000000000
--- a/tools/power/x86/turbostat/turbostat.8
+++ b/tools/power/x86/turbostat/turbostat.8
@@@ -45,11 -46,17 +46,15 @@@ name as necessary to disambiguate it fr
  		'delta' shows the difference in values during the measurement interval.
  		'percent' shows the delta as a percentage of the cycles elapsed.
  		default: delta
+ 
+ 	name: "name_string"
+ 		Any string that does not match a key-word above is used
+ 		as the column header.
  .fi
  .PP
 -\fB--cpu cpu-set\fP limit output to system summary plus the specified cpu-set.  cpu-set is a comma delimited list of cpu ranges. cpu ranges can be individual cpu numbers or start and end numbers, separated by ".." or '-'.  eg. 1,2,8,14..17,21-44
 +\fB--hide column\fP do not show the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.
  .PP
 -\fB--hide column\fP do not show the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.  Use "--hide sysfs" to hide the sysfs statistics columns as a group.
 -.PP
 -\fB--show column\fP show only the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.  Use "--show sysfs" to show the sysfs statistics columns as a group.
 +\fB--show column\fP show only the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.
  .PP
  \fB--Dump\fP displays the raw counter values.
  .PP
@@@ -103,52 -112,110 +111,154 @@@ The system configuration dump (if --qui
  \fBPKG_%\fP percent of the interval that RAPL throttling was active on the Package.
  \fBRAM_%\fP percent of the interval that RAPL throttling was active on DRAM.
  .fi
+ .SH TOO MUCH INFORMATION EXAMPLE
+ By default, turbostat dumps all possible information -- a system configuration header, followed by columns for all counters.
+ This is ideal for remote debugging, use the "--out" option to save everything to a text file, and get that file to the expert helping you debug.
  .PP
++<<<<<<< HEAD
 +.SH PERIODIC EXAMPLE
 +Without any parameters, turbostat displays statistics ever 5 seconds.
 +Periodic output goes to stdout, by default, unless --out is used to specify an output file.
 +The 5-second interval can be changed with th "-i sec" option.
 +Or a command may be specified as in "FORK EXAMPLE" below.
 +
 +The first row of statistics is a summary for the entire system.
 +For residency % columns, the summary is a weighted average.
 +For Temperature columns, the summary is the column maximum.
 +For Watts columns, the summary is a system total.
 +Subsequent rows show per-CPU statistics.
 +
 +.nf
 +[root@ivy]# ./turbostat
 +    Core     CPU Avg_MHz   Busy% Bzy_MHz TSC_MHz     SMI  CPU%c1  CPU%c3  CPU%c6  CPU%c7 CoreTmp  PkgTmp Pkg%pc2 Pkg%pc3 Pkg%pc6 Pkg%pc7 PkgWatt CorWatt GFXWatt 
 +       -       -       6    0.36    1596    3492       0    0.59    0.01   99.04    0.00      23      24   23.82    0.01   72.47    0.00    6.40    1.01    0.00
 +       0       0       9    0.58    1596    3492       0    0.28    0.01   99.13    0.00      23      24   23.82    0.01   72.47    0.00    6.40    1.01    0.00
 +       0       4       1    0.07    1596    3492       0    0.79
 +       1       1      10    0.65    1596    3492       0    0.59    0.00   98.76    0.00      23
 +       1       5       5    0.28    1596    3492       0    0.95
 +       2       2      10    0.66    1596    3492       0    0.41    0.01   98.92    0.00      23
 +       2       6       2    0.10    1597    3492       0    0.97
 +       3       3       3    0.20    1596    3492       0    0.44    0.00   99.37    0.00      23
 +       3       7       5    0.31    1596    3492       0    0.33
 +.fi
 +.SH DEBUG EXAMPLE
 +The "--debug" option prints additional system information before measurements:
 +
++=======
+ When you are not interested in all that information, and there are several ways to see only what you want.  First the "--quiet" option will skip the configuration information, and turbostat will show only the counter columns.  Second, you can reduce the columns with the "--hide" and "--show" options.  If you use the "--show" option, then turbostat will show only the columns you list.  If you use the "--hide" option, turbostat will show all columns, except the ones you list.
+ .PP
+ To find out what columns are available for --show and --hide, the "--list" option is available.  Note, however, there is an exception.  The C-state columns collected from sysfs "C1,C2,C3,C1%,C2%,C3%" are not built-in counters, but are discovered after --show and --hide are processed.  You can use the special counter name "sysfs" to refer to all of them at the same time.
+ .nf
+ sudo ./turbostat --show sysfs --quiet sleep 10
+ 10.003837 sec
+ 	C1	C1E	C3	C6	C7s	C1%	C1E%	C3%	C6%	C7s%
+ 	4	21	2	2	459	0.14	0.82	0.00	0.00	98.93
+ 	1	17	2	2	130	0.00	0.02	0.00	0.00	99.80
+ 	0	0	0	0	31	0.00	0.00	0.00	0.00	99.95
+ 	2	1	0	0	52	1.14	6.49	0.00	0.00	92.21
+ 	1	2	0	0	52	0.00	0.08	0.00	0.00	99.86
+ 	0	0	0	0	71	0.00	0.00	0.00	0.00	99.89
+ 	0	0	0	0	25	0.00	0.00	0.00	0.00	99.96
+ 	0	0	0	0	74	0.00	0.00	0.00	0.00	99.94
+ 	0	1	0	0	24	0.00	0.00	0.00	0.00	99.84
+ .fi
+ .PP
+ .SH ONE SHOT COMMAND EXAMPLE
+ If turbostat is invoked with a command, it will fork that command
+ and output the statistics gathered after the command exits.
+ In this case, turbostat output goes to stderr, by default.
+ Output can instead be saved to a file using the --out option.
+ In this example, the "sleep 10" command is forked, and turbostat waits for it to complete before saving all statistics into "ts.out".  Note that "sleep 10" is not part of turbostat, but is simply an example of a command that turbostat can fork.  The "ts.out" file is what you want to edit in a very wide window, paste into a spreadsheet, or attach to a bugzilla entry.
+ 
++>>>>>>> da67e2b9fd1d (tools/power turbostat: turbostat.8 update)
  .nf
- turbostat version 4.1 10-Feb, 2015 - Len Brown <lenb@kernel.org>
+ [root@hsw]# ./turbostat -o ts.out sleep 10
+ [root@hsw]#
+ .fi
+ 
+ .SH PERIODIC INTERVAL EXAMPLE
+ Without a command to fork, turbostat displays statistics ever 5 seconds.
+ Periodic output goes to stdout, by default, unless --out is used to specify an output file.
+ The 5-second interval can be changed with the "-i sec" option.
+ .nf
+ sudo ./turbostat --quiet --hide sysfs,IRQ,SMI,CoreTmp,PkgTmp,GFX%rc6,GFXMHz,PkgWatt,CorWatt,GFXWatt
+ 	Core	CPU	Avg_MHz	Busy%	Bzy_MHz	TSC_MHz	CPU%c1	CPU%c3	CPU%c6	CPU%c7
+ 	-	-	488	12.52	3900	3498	12.50	0.00	0.00	74.98
+ 	0	0	5	0.13	3900	3498	99.87	0.00	0.00	0.00
+ 	0	4	3897	99.99	3900	3498	0.01
+ 	1	1	0	0.00	3856	3498	0.01	0.00	0.00	99.98
+ 	1	5	0	0.00	3861	3498	0.01
+ 	2	2	1	0.02	3889	3498	0.03	0.00	0.00	99.95
+ 	2	6	0	0.00	3863	3498	0.05
+ 	3	3	0	0.01	3869	3498	0.02	0.00	0.00	99.97
+ 	3	7	0	0.00	3878	3498	0.03
+ 	Core	CPU	Avg_MHz	Busy%	Bzy_MHz	TSC_MHz	CPU%c1	CPU%c3	CPU%c6	CPU%c7
+ 	-	-	491	12.59	3900	3498	12.42	0.00	0.00	74.99
+ 	0	0	27	0.69	3900	3498	99.31	0.00	0.00	0.00
+ 	0	4	3898	99.99	3900	3498	0.01
+ 	1	1	0	0.00	3883	3498	0.01	0.00	0.00	99.99
+ 	1	5	0	0.00	3898	3498	0.01
+ 	2	2	0	0.01	3889	3498	0.02	0.00	0.00	99.98
+ 	2	6	0	0.00	3889	3498	0.02
+ 	3	3	0	0.00	3856	3498	0.01	0.00	0.00	99.99
+ 	3	7	0	0.00	3897	3498	0.01
+ .fi
+ This example also shows the use of the --hide option to skip columns that are not wanted.
+ Note that cpu4 in this example is 99.99% busy, while the other CPUs are all under 1% busy.
+ Notice that cpu4's HT sibling is cpu0, which is under 1% busy, but can get into CPU%c1 only,
+ because its cpu4's activity on shared hardware keeps it from entering a deeper C-state.
+ 
+ .SH SYSTEM CONFIGURATION INFORMATION EXAMPLE
+ 
+ By default, turbostat always dumps system configuration information
+ before taking measurements.  In the example above, "--quiet" is used
+ to suppress that output.  Here is an example of the configuration information:
+ .nf
+ turbostat version 2017.02.15 - Len Brown <lenb@kernel.org>
  CPUID(0): GenuineIntel 13 CPUID levels; family:model:stepping 0x6:3c:3 (6:60:3)
- CPUID(6): APERF, DTS, PTM, EPB
+ CPUID(1): SSE3 MONITOR - EIST TM2 TSC MSR ACPI-TM TM
+ CPUID(6): APERF, TURBO, DTS, PTM, No-HWP, No-HWPnotify, No-HWPwindow, No-HWPepp, No-HWPpkg, EPB
+ cpu4: MSR_IA32_MISC_ENABLE: 0x00850089 (TCC EIST No-MWAIT PREFETCH TURBO)
+ CPUID(7): No-SGX
+ cpu4: MSR_MISC_PWR_MGMT: 0x00400000 (ENable-EIST_Coordination DISable-EPB DISable-OOB)
  RAPL: 3121 sec. Joule Counter Range, at 84 Watts
++<<<<<<< HEAD
 +cpu0: MSR_NHM_PLATFORM_INFO: 0x80838f3012300
 +8 * 100 = 800 MHz max efficiency
 +35 * 100 = 3500 MHz TSC frequency
 +cpu0: MSR_IA32_POWER_CTL: 0x0004005d (C1E auto-promotion: DISabled)
 +cpu0: MSR_NHM_SNB_PKG_CST_CFG_CTL: 0x1e000400 (UNdemote-C3, UNdemote-C1, demote-C3, demote-C1, UNlocked: pkg-cstate-limit=0: pc0)
 +cpu0: MSR_NHM_TURBO_RATIO_LIMIT: 0x25262727
 +37 * 100 = 3700 MHz max turbo 4 active cores
 +38 * 100 = 3800 MHz max turbo 3 active cores
 +39 * 100 = 3900 MHz max turbo 2 active cores
 +39 * 100 = 3900 MHz max turbo 1 active cores
++=======
+ cpu4: MSR_PLATFORM_INFO: 0x80838f3012300
+ 8 * 100.0 = 800.0 MHz max efficiency frequency
+ 35 * 100.0 = 3500.0 MHz base frequency
+ cpu4: MSR_IA32_POWER_CTL: 0x0004005d (C1E auto-promotion: DISabled)
+ cpu4: MSR_TURBO_RATIO_LIMIT: 0x25262727
+ 37 * 100.0 = 3700.0 MHz max turbo 4 active cores
+ 38 * 100.0 = 3800.0 MHz max turbo 3 active cores
+ 39 * 100.0 = 3900.0 MHz max turbo 2 active cores
+ 39 * 100.0 = 3900.0 MHz max turbo 1 active cores
+ cpu4: MSR_CONFIG_TDP_NOMINAL: 0x00000023 (base_ratio=35)
+ cpu4: MSR_CONFIG_TDP_LEVEL_1: 0x00000000 ()
+ cpu4: MSR_CONFIG_TDP_LEVEL_2: 0x00000000 ()
+ cpu4: MSR_CONFIG_TDP_CONTROL: 0x80000000 ( lock=1)
+ cpu4: MSR_TURBO_ACTIVATION_RATIO: 0x00000000 (MAX_NON_TURBO_RATIO=0 lock=0)
+ cpu4: MSR_PKG_CST_CONFIG_CONTROL: 0x1e000400 (UNdemote-C3, UNdemote-C1, demote-C3, demote-C1, UNlocked: pkg-cstate-limit=0: pc0)
+ cpu4: POLL: CPUIDLE CORE POLL IDLE
+ cpu4: C1: MWAIT 0x00
+ cpu4: C1E: MWAIT 0x01
+ cpu4: C3: MWAIT 0x10
+ cpu4: C6: MWAIT 0x20
+ cpu4: C7s: MWAIT 0x32
+ cpu4: MSR_MISC_FEATURE_CONTROL: 0x00000000 (L2-Prefetch L2-Prefetch-pair L1-Prefetch L1-IP-Prefetch)
++>>>>>>> da67e2b9fd1d (tools/power turbostat: turbostat.8 update)
  cpu0: MSR_IA32_ENERGY_PERF_BIAS: 0x00000006 (balanced)
- cpu0: MSR_CORE_PERF_LIMIT_REASONS, 0x31200000 (Active: ) (Logged: Auto-HWP, Amps, MultiCoreTurbo, Transitions, )
+ cpu0: MSR_CORE_PERF_LIMIT_REASONS, 0x31200000 (Active: ) (Logged: Transitions, MultiCoreTurbo, Amps, Auto-HWP, )
  cpu0: MSR_GFX_PERF_LIMIT_REASONS, 0x00000000 (Active: ) (Logged: )
  cpu0: MSR_RING_PERF_LIMIT_REASONS, 0x0d000000 (Active: ) (Logged: Amps, PkgPwrL1, PkgPwrL2, )
  cpu0: MSR_RAPL_POWER_UNIT: 0x000a0e03 (0.125000 Watts, 0.000061 Joules, 0.000977 sec.)
@@@ -189,46 -247,22 +290,65 @@@ should be sustainable on all CPUs indef
  The remaining rows show what maximum turbo frequency is possible
  depending on the number of idle cores.  Note that not all information is
  available on all processors.
++<<<<<<< HEAD
 +.PP
 +The --debug option adds additional columns to the measurement ouput, including CPU idle power-state residency processor temperature sensor readinds.
 +See the field definitions above.
 +.SH FORK EXAMPLE
 +If turbostat is invoked with a command, it will fork that command
 +and output the statistics gathered after the command exits.
 +In this case, turbostat output goes to stderr, by default.
 +Output can instead be saved to a file using the --out option.
 +eg. Here a cycle soaker is run on 1 CPU (see %c0) for a few seconds
 +until ^C while the other CPUs are mostly idle:
 +
 +.nf
 +root@ivy: turbostat cat /dev/zero > /dev/null
 +^C
 +    Core     CPU Avg_MHz   Busy% Bzy_MHz TSC_MHz     SMI  CPU%c1  CPU%c3  CPU%c6  CPU%c7 CoreTmp  PkgTmp Pkg%pc2 Pkg%pc3 Pkg%pc6 Pkg%pc7 PkgWatt CorWatt GFXWatt 
 +       -       -     496   12.75    3886    3492       0   13.16    0.04   74.04    0.00      36      36    0.00    0.00    0.00    0.00   23.15   17.65    0.00
 +       0       0      22    0.57    3830    3492       0    0.83    0.02   98.59    0.00      27      36    0.00    0.00    0.00    0.00   23.15   17.65    0.00
 +       0       4       9    0.24    3829    3492       0    1.15
 +       1       1       4    0.09    3783    3492       0   99.91    0.00    0.00    0.00      36
 +       1       5    3880   99.82    3888    3492       0    0.18
 +       2       2      17    0.44    3813    3492       0    0.77    0.04   98.75    0.00      28
 +       2       6      12    0.32    3823    3492       0    0.89
 +       3       3      16    0.43    3844    3492       0    0.63    0.11   98.84    0.00      30
 +       3       7       4    0.11    3827    3492       0    0.94
 +30.372243 sec
 +
 +.fi
 +Above the cycle soaker drives cpu5 up its 3.8 GHz turbo limit
 +while the other processors are generally in various states of idle.
 +
 +Note that cpu1 and cpu5 are HT siblings within core1.
 +As cpu5 is very busy, it prevents its sibling, cpu1,
 +from entering a c-state deeper than c1.
 +
 +Note that the Avg_MHz column reflects the total number of cycles executed
 +divided by the measurement interval.  If the Busy% column is 100%,
 +then the processor was running at that speed the entire interval.
 +The Avg_MHz multiplied by the Busy% results in the Bzy_MHz --
 +which is the average frequency while the processor was executing --
 +not including any non-busy idle time.
++=======
+ .SH ADD COUNTER EXAMPLE
+ Here we limit turbostat to showing just the CPU number for cpu0 - cpu3.
+ We add a counter showing the 32-bit raw value of MSR 0x199 (MSR_IA32_PERF_CTL),
+ labeling it with the column header, "PRF_CTRL", and display it only once,
+ afte the conclusion of a 0.1 second sleep.
+ .nf
+ sudo ./turbostat --quiet --cpu 0-3 --show CPU --add msr0x199,u32,raw,PRF_CTRL sleep .1
+ 0.101604 sec
+ CPU	  PRF_CTRL
+ -	0x00000000
+ 0	0x00000c00
+ 1	0x00000800
+ 2	0x00000a00
+ 3	0x00000800
+ 
+ .fi
++>>>>>>> da67e2b9fd1d (tools/power turbostat: turbostat.8 update)
  
  .SH NOTES
  
* Unmerged path tools/power/x86/turbostat/turbostat.8
