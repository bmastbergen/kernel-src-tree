blk-mq: move update of tags->rqs to __blk_mq_alloc_request()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Omar Sandoval <osandov@fb.com>
commit 562bef4259776c19cb2423d43af1f99183910a4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/562bef42.failed

No functional difference, it just makes a little more sense to update
the tag map where we actually allocate the tag.

	Signed-off-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
	Tested-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit 562bef4259776c19cb2423d43af1f99183910a4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq-sched.c
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 3e6f9b3d2b64,94593c6282d8..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -251,15 -220,24 +251,31 @@@ __blk_mq_alloc_request(struct blk_mq_al
  
  	tag = blk_mq_get_tag(data);
  	if (tag != BLK_MQ_TAG_FAIL) {
 -		struct blk_mq_tags *tags = blk_mq_tags_from_data(data);
 +		rq = data->hctx->tags->rqs[tag];
  
++<<<<<<< HEAD
 +		if (blk_mq_tag_busy(data->hctx)) {
 +			rq->cmd_flags = REQ_MQ_INFLIGHT;
 +			atomic_inc(&data->hctx->nr_active);
++=======
+ 		rq = tags->static_rqs[tag];
+ 
+ 		if (data->flags & BLK_MQ_REQ_INTERNAL) {
+ 			rq->tag = -1;
+ 			rq->internal_tag = tag;
+ 		} else {
+ 			if (blk_mq_tag_busy(data->hctx)) {
+ 				rq->rq_flags = RQF_MQ_INFLIGHT;
+ 				atomic_inc(&data->hctx->nr_active);
+ 			}
+ 			rq->tag = tag;
+ 			rq->internal_tag = -1;
+ 			data->hctx->tags->rqs[rq->tag] = rq;
++>>>>>>> 562bef425977 (blk-mq: move update of tags->rqs to __blk_mq_alloc_request())
  		}
  
 -		blk_mq_rq_ctx_init(data->q, data->ctx, rq, op);
 +		rq->tag = tag;
 +		blk_mq_rq_ctx_init(data->q, data->ctx, rq, rw);
  		return rq;
  	}
  
* Unmerged path block/blk-mq-sched.c
* Unmerged path block/blk-mq-sched.c
* Unmerged path block/blk-mq.c
