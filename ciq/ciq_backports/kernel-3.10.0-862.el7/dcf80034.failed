net/sched: act_mirred: Refactor detection whether dev needs xmit at mac header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: act_mirred: Refactor detection whether dev needs xmit at mac header (Ivan Vecera) [1445420]
Rebuild_FUZZ: 97.37%
commit-author Shmulik Ladkani <shmulik.ladkani@gmail.com>
commit dcf800344a91173802f2ad9c1c6b642f4b302df6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/dcf80034.failed

Move detection logic that tests whether device expects skb data to point
at mac_header upon xmit into a function.

	Signed-off-by: Shmulik Ladkani <shmulik.ladkani@gmail.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit dcf800344a91173802f2ad9c1c6b642f4b302df6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_mirred.c
diff --cc net/sched/act_mirred.c
index 80554d23769d,69dcce8c7532..000000000000
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@@ -51,11 -51,30 +51,31 @@@ static const struct nla_policy mirred_p
  	[TCA_MIRRED_PARMS]	= { .len = sizeof(struct tc_mirred) },
  };
  
++<<<<<<< HEAD
++=======
+ static int mirred_net_id;
+ static struct tc_action_ops act_mirred_ops;
+ 
+ static bool dev_is_mac_header_xmit(const struct net_device *dev)
+ {
+ 	switch (dev->type) {
+ 	case ARPHRD_TUNNEL:
+ 	case ARPHRD_TUNNEL6:
+ 	case ARPHRD_SIT:
+ 	case ARPHRD_IPGRE:
+ 	case ARPHRD_VOID:
+ 	case ARPHRD_NONE:
+ 		return false;
+ 	}
+ 	return true;
+ }
+ 
++>>>>>>> dcf800344a91 (net/sched: act_mirred: Refactor detection whether dev needs xmit at mac header)
  static int tcf_mirred_init(struct net *net, struct nlattr *nla,
 -			   struct nlattr *est, struct tc_action **a, int ovr,
 +			   struct nlattr *est, struct tc_action *a, int ovr,
  			   int bind)
  {
 -	struct tc_action_net *tn = net_generic(net, mirred_net_id);
  	struct nlattr *tb[TCA_MIRRED_MAX + 1];
 -	bool mac_header_xmit = false;
  	struct tc_mirred *parm;
  	struct tcf_mirred *m;
  	struct net_device *dev;
@@@ -78,21 -105,12 +98,26 @@@
  	}
  	if (parm->ifindex) {
  		dev = __dev_get_by_index(net, parm->ifindex);
 -		if (dev == NULL) {
 -			if (exists)
 -				tcf_hash_release(*a, bind);
 +		if (dev == NULL)
  			return -ENODEV;
++<<<<<<< HEAD
 +		switch (dev->type) {
 +		case ARPHRD_TUNNEL:
 +		case ARPHRD_TUNNEL6:
 +		case ARPHRD_SIT:
 +		case ARPHRD_IPGRE:
 +		case ARPHRD_VOID:
 +		case ARPHRD_NONE:
 +			ok_push = 0;
 +			break;
 +		default:
 +			ok_push = 1;
 +			break;
 +		}
++=======
+ 		}
+ 		mac_header_xmit = dev_is_mac_header_xmit(dev);
++>>>>>>> dcf800344a91 (net/sched: act_mirred: Refactor detection whether dev needs xmit at mac header)
  	} else {
  		dev = NULL;
  	}
* Unmerged path net/sched/act_mirred.c
