IB/ipoib: Fix memory leak in create child syscall

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Feras Daoud <ferasda@mellanox.com>
commit 4542d66bb26f2d021c70a78e46f183c6675fc4c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4542d66b.failed

The flow of creating a new child goes through ipoib_vlan_add
which allocates a new interface and checks the rtnl_lock.

If the lock is taken, restart_syscall will be called to restart
the system call again. In this case we are not releasing the
already allocated interface, causing a leak.

Fixes: 9baa0b036410 ("IB/ipoib: Add rtnl_link_ops support")
	Signed-off-by: Feras Daoud <ferasda@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 4542d66bb26f2d021c70a78e46f183c6675fc4c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/ipoib/ipoib_vlan.c
diff --cc drivers/infiniband/ulp/ipoib/ipoib_vlan.c
index a69df126283b,081b33deff1b..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_vlan.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_vlan.c
@@@ -131,13 -132,14 +131,18 @@@ int ipoib_vlan_add(struct net_device *p
  
  	snprintf(intf_name, sizeof intf_name, "%s.%04x",
  		 ppriv->dev->name, pkey);
++<<<<<<< HEAD
 +	priv = ipoib_intf_alloc(intf_name);
- 	if (!priv)
- 		return -ENOMEM;
++=======
  
  	if (!rtnl_trylock())
  		return restart_syscall();
  
+ 	priv = ipoib_intf_alloc(ppriv->ca, ppriv->port, intf_name);
++>>>>>>> 4542d66bb26f (IB/ipoib: Fix memory leak in create child syscall)
+ 	if (!priv)
+ 		return -ENOMEM;
+ 
  	down_write(&ppriv->vlan_rwsem);
  
  	/*
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_vlan.c
