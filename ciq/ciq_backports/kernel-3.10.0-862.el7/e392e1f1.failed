nvme_fc: correct nvme status set on abort

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [nvme] fc: correct nvme status set on abort (David Milburn) [1457880 1456486 1454365]
Rebuild_FUZZ: 93.51%
commit-author James Smart <jsmart2021@gmail.com>
commit e392e1f1f408fe8baf1046c970d05cbf1f0ec945
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e392e1f1.failed

correct nvme status set on abort. Patch that changed status to being actual
nvme status crossed in the night with the patch that added abort values.

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit e392e1f1f408fe8baf1046c970d05cbf1f0ec945)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fc.c
diff --cc drivers/nvme/host/fc.c
index a2d701be7e74,775869c69df6..000000000000
--- a/drivers/nvme/host/fc.c
+++ b/drivers/nvme/host/fc.c
@@@ -1247,7 -1369,16 +1247,20 @@@ done
  		return;
  	}
  
++<<<<<<< HEAD
 +	blk_mq_complete_request(rq, status);
++=======
+ 	complete_rq = __nvme_fc_fcpop_chk_teardowns(ctrl, op);
+ 	if (!complete_rq) {
+ 		if (unlikely(op->flags & FCOP_FLAGS_TERMIO)) {
+ 			status = cpu_to_le16(NVME_SC_ABORT_REQ << 1);
+ 			if (blk_queue_dying(rq->q))
+ 				status |= cpu_to_le16(NVME_SC_DNR << 1);
+ 		}
+ 		nvme_end_request(rq, status, result);
+ 	} else
+ 		__nvme_fc_final_op_cleanup(rq);
++>>>>>>> e392e1f1f408 (nvme_fc: correct nvme status set on abort)
  }
  
  static int
* Unmerged path drivers/nvme/host/fc.c
