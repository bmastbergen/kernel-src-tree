mlxsw: spectrum: Tidy up header file

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit cb4cc0e0b18ef683eed191707fa812a1719b9723
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/cb4cc0e0.failed

Make it clear where functions are defined and move misplaced declaration
to their correct place.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Reviewed-by: Petr Machata <petrm@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cb4cc0e0b18ef683eed191707fa812a1719b9723)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.h
index 280114e1ebf6,99760fd55ba1..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
@@@ -302,13 -229,10 +302,16 @@@ struct mlxsw_sp_port 
  		struct rtnl_link_stats64 *cache;
  		struct delayed_work update_dw;
  	} hw_stats;
 -	struct mlxsw_sp_port_sample *sample;
 -	struct list_head vlans_list;
  };
  
++<<<<<<< HEAD
 +bool mlxsw_sp_port_dev_check(const struct net_device *dev);
 +struct mlxsw_sp *mlxsw_sp_lower_get(struct net_device *dev);
 +struct mlxsw_sp_port *mlxsw_sp_port_lower_dev_hold(struct net_device *dev);
 +void mlxsw_sp_port_dev_put(struct mlxsw_sp_port *mlxsw_sp_port);
 +
++=======
++>>>>>>> cb4cc0e0b18e (mlxsw: spectrum: Tidy up header file)
  static inline bool
  mlxsw_sp_port_is_pause_en(const struct mlxsw_sp_port *mlxsw_sp_port)
  {
@@@ -375,54 -266,13 +378,55 @@@ mlxsw_sp_port_vport_find(const struct m
  	return NULL;
  }
  
 -enum mlxsw_sp_flood_type {
 -	MLXSW_SP_FLOOD_TYPE_UC,
 -	MLXSW_SP_FLOOD_TYPE_BC,
 -	MLXSW_SP_FLOOD_TYPE_MC,
 +static inline struct mlxsw_sp_port *
 +mlxsw_sp_port_vport_find_by_fid(const struct mlxsw_sp_port *mlxsw_sp_port,
 +				u16 fid)
 +{
 +	struct mlxsw_sp_port *mlxsw_sp_vport;
 +
 +	list_for_each_entry(mlxsw_sp_vport, &mlxsw_sp_port->vports_list,
 +			    vport.list) {
 +		struct mlxsw_sp_fid *f = mlxsw_sp_vport_fid_get(mlxsw_sp_vport);
 +
 +		if (f && f->fid == fid)
 +			return mlxsw_sp_vport;
 +	}
 +
 +	return NULL;
 +}
 +
 +static inline struct mlxsw_sp_fid *mlxsw_sp_fid_find(struct mlxsw_sp *mlxsw_sp,
 +						     u16 fid)
 +{
 +	struct mlxsw_sp_fid *f;
 +
 +	list_for_each_entry(f, &mlxsw_sp->fids, list)
 +		if (f->fid == fid)
 +			return f;
 +
 +	return NULL;
 +}
 +
 +static inline struct mlxsw_sp_fid *
 +mlxsw_sp_vfid_find(const struct mlxsw_sp *mlxsw_sp,
 +		   const struct net_device *br_dev)
 +{
 +	struct mlxsw_sp_fid *f;
 +
 +	list_for_each_entry(f, &mlxsw_sp->vfids.list, list)
 +		if (f->dev == br_dev)
 +			return f;
 +
 +	return NULL;
 +}
 +
 +enum mlxsw_sp_flood_table {
 +	MLXSW_SP_FLOOD_TABLE_UC,
 +	MLXSW_SP_FLOOD_TABLE_BC,
 +	MLXSW_SP_FLOOD_TABLE_MC,
  };
  
+ /* spectrum_buffers.c */
  int mlxsw_sp_buffers_init(struct mlxsw_sp *mlxsw_sp);
  void mlxsw_sp_buffers_fini(struct mlxsw_sp *mlxsw_sp);
  int mlxsw_sp_port_buffers_init(struct mlxsw_sp_port *mlxsw_sp_port);
@@@ -460,24 -310,23 +464,40 @@@ int mlxsw_sp_sb_occ_tc_port_bind_get(st
  u32 mlxsw_sp_cells_bytes(const struct mlxsw_sp *mlxsw_sp, u32 cells);
  u32 mlxsw_sp_bytes_cells(const struct mlxsw_sp *mlxsw_sp, u32 bytes);
  
+ /* spectrum_switchdev.c */
  int mlxsw_sp_switchdev_init(struct mlxsw_sp *mlxsw_sp);
  void mlxsw_sp_switchdev_fini(struct mlxsw_sp *mlxsw_sp);
 +int mlxsw_sp_port_vlan_init(struct mlxsw_sp_port *mlxsw_sp_port);
  void mlxsw_sp_port_switchdev_init(struct mlxsw_sp_port *mlxsw_sp_port);
  void mlxsw_sp_port_switchdev_fini(struct mlxsw_sp_port *mlxsw_sp_port);
++<<<<<<< HEAD
 +int mlxsw_sp_port_vid_to_fid_set(struct mlxsw_sp_port *mlxsw_sp_port,
 +				 enum mlxsw_reg_svfa_mt mt, bool valid, u16 fid,
 +				 u16 vid);
 +int mlxsw_sp_port_vlan_set(struct mlxsw_sp_port *mlxsw_sp_port, u16 vid_begin,
 +			   u16 vid_end, bool is_member, bool untagged);
 +int mlxsw_sp_vport_flood_set(struct mlxsw_sp_port *mlxsw_sp_vport, u16 fid,
 +			     bool set);
 +void mlxsw_sp_port_active_vlans_del(struct mlxsw_sp_port *mlxsw_sp_port);
 +int mlxsw_sp_port_fdb_flush(struct mlxsw_sp_port *mlxsw_sp_port, u16 fid);
 +int mlxsw_sp_rif_fdb_op(struct mlxsw_sp *mlxsw_sp, const char *mac, u16 fid,
 +			bool adding);
 +struct mlxsw_sp_fid *mlxsw_sp_fid_create(struct mlxsw_sp *mlxsw_sp, u16 fid);
 +void mlxsw_sp_fid_destroy(struct mlxsw_sp *mlxsw_sp, struct mlxsw_sp_fid *f);
++=======
+ int mlxsw_sp_rif_fdb_op(struct mlxsw_sp *mlxsw_sp, const char *mac, u16 fid,
+ 			bool adding);
+ void
+ mlxsw_sp_port_vlan_bridge_leave(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan);
+ int mlxsw_sp_port_bridge_join(struct mlxsw_sp_port *mlxsw_sp_port,
+ 			      struct net_device *brport_dev,
+ 			      struct net_device *br_dev);
+ void mlxsw_sp_port_bridge_leave(struct mlxsw_sp_port *mlxsw_sp_port,
+ 				struct net_device *brport_dev,
+ 				struct net_device *br_dev);
+ 
+ /* spectrum.c */
++>>>>>>> cb4cc0e0b18e (mlxsw: spectrum: Tidy up header file)
  int mlxsw_sp_port_ets_set(struct mlxsw_sp_port *mlxsw_sp_port,
  			  enum mlxsw_reg_qeec_hr hr, u8 index, u8 next_index,
  			  bool dwrr, u8 dwrr_weight);
@@@ -494,14 -343,30 +514,32 @@@ int mlxsw_sp_port_vid_stp_set(struct ml
  int mlxsw_sp_port_vid_learning_set(struct mlxsw_sp_port *mlxsw_sp_port, u16 vid,
  				   bool learn_enable);
  int mlxsw_sp_port_pvid_set(struct mlxsw_sp_port *mlxsw_sp_port, u16 vid);
++<<<<<<< HEAD
++=======
+ struct mlxsw_sp_port_vlan *
+ mlxsw_sp_port_vlan_get(struct mlxsw_sp_port *mlxsw_sp_port, u16 vid);
+ void mlxsw_sp_port_vlan_put(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan);
+ int mlxsw_sp_port_vlan_set(struct mlxsw_sp_port *mlxsw_sp_port, u16 vid_begin,
+ 			   u16 vid_end, bool is_member, bool untagged);
+ int mlxsw_sp_flow_counter_get(struct mlxsw_sp *mlxsw_sp,
+ 			      unsigned int counter_index, u64 *packets,
+ 			      u64 *bytes);
+ int mlxsw_sp_flow_counter_alloc(struct mlxsw_sp *mlxsw_sp,
+ 				unsigned int *p_counter_index);
+ void mlxsw_sp_flow_counter_free(struct mlxsw_sp *mlxsw_sp,
+ 				unsigned int counter_index);
+ bool mlxsw_sp_port_dev_check(const struct net_device *dev);
+ struct mlxsw_sp *mlxsw_sp_lower_get(struct net_device *dev);
+ struct mlxsw_sp_port *mlxsw_sp_port_dev_lower_find(struct net_device *dev);
+ struct mlxsw_sp_port *mlxsw_sp_port_lower_dev_hold(struct net_device *dev);
+ void mlxsw_sp_port_dev_put(struct mlxsw_sp_port *mlxsw_sp_port);
++>>>>>>> cb4cc0e0b18e (mlxsw: spectrum: Tidy up header file)
  
+ /* spectrum_dcb.c */
  #ifdef CONFIG_MLXSW_SPECTRUM_DCB
- 
  int mlxsw_sp_port_dcb_init(struct mlxsw_sp_port *mlxsw_sp_port);
  void mlxsw_sp_port_dcb_fini(struct mlxsw_sp_port *mlxsw_sp_port);
- 
  #else
- 
  static inline int mlxsw_sp_port_dcb_init(struct mlxsw_sp_port *mlxsw_sp_port)
  {
  	return 0;
@@@ -519,17 -383,13 +556,18 @@@ int mlxsw_sp_router_netevent_event(stru
  int mlxsw_sp_netdevice_router_port_event(struct net_device *dev);
  int mlxsw_sp_inetaddr_event(struct notifier_block *unused,
  			    unsigned long event, void *ptr);
 -int mlxsw_sp_netdevice_vrf_event(struct net_device *l3_dev, unsigned long event,
 -				 struct netdev_notifier_changeupper_info *info);
 -void
 -mlxsw_sp_port_vlan_router_leave(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan);
 -void mlxsw_sp_rif_destroy(struct mlxsw_sp_rif *rif);
 +void mlxsw_sp_rif_bridge_destroy(struct mlxsw_sp *mlxsw_sp,
 +				 struct mlxsw_sp_rif *r);
 +int mlxsw_sp_vport_vrf_join(struct mlxsw_sp_port *mlxsw_sp_vport);
 +void mlxsw_sp_vport_vrf_leave(struct mlxsw_sp_port *mlxsw_sp_vport);
 +int mlxsw_sp_port_vrf_join(struct mlxsw_sp_port *mlxsw_sp_port);
 +void mlxsw_sp_port_vrf_leave(struct mlxsw_sp_port *mlxsw_sp_port);
 +int mlxsw_sp_bridge_vrf_join(struct mlxsw_sp *mlxsw_sp,
 +			     struct net_device *l3_dev);
 +void mlxsw_sp_bridge_vrf_leave(struct mlxsw_sp *mlxsw_sp,
 +			       struct net_device *l3_dev);
  
+ /* spectrum_kvdl.c */
  int mlxsw_sp_kvdl_alloc(struct mlxsw_sp *mlxsw_sp, unsigned int entry_count,
  			u32 *p_entry_index);
  void mlxsw_sp_kvdl_free(struct mlxsw_sp *mlxsw_sp, int entry_index);
@@@ -643,12 -507,35 +683,46 @@@ int mlxsw_sp_flower_replace(struct mlxs
  			    __be16 protocol, struct tc_cls_flower_offload *f);
  void mlxsw_sp_flower_destroy(struct mlxsw_sp_port *mlxsw_sp_port, bool ingress,
  			     struct tc_cls_flower_offload *f);
++<<<<<<< HEAD
 +int mlxsw_sp_flow_counter_get(struct mlxsw_sp *mlxsw_sp,
 +			      unsigned int counter_index, u64 *packets,
 +			      u64 *bytes);
 +int mlxsw_sp_flow_counter_alloc(struct mlxsw_sp *mlxsw_sp,
 +				unsigned int *p_counter_index);
 +void mlxsw_sp_flow_counter_free(struct mlxsw_sp *mlxsw_sp,
 +				unsigned int counter_index);
 +
++=======
+ int mlxsw_sp_flower_stats(struct mlxsw_sp_port *mlxsw_sp_port, bool ingress,
+ 			  struct tc_cls_flower_offload *f);
+ 
+ /* spectrum_fid.c */
+ int mlxsw_sp_fid_flood_set(struct mlxsw_sp_fid *fid,
+ 			   enum mlxsw_sp_flood_type packet_type, u8 local_port,
+ 			   bool member);
+ int mlxsw_sp_fid_port_vid_map(struct mlxsw_sp_fid *fid,
+ 			      struct mlxsw_sp_port *mlxsw_sp_port, u16 vid);
+ void mlxsw_sp_fid_port_vid_unmap(struct mlxsw_sp_fid *fid,
+ 				 struct mlxsw_sp_port *mlxsw_sp_port, u16 vid);
+ enum mlxsw_sp_rif_type mlxsw_sp_fid_rif_type(const struct mlxsw_sp_fid *fid);
+ u16 mlxsw_sp_fid_index(const struct mlxsw_sp_fid *fid);
+ enum mlxsw_sp_fid_type mlxsw_sp_fid_type(const struct mlxsw_sp_fid *fid);
+ void mlxsw_sp_fid_rif_set(struct mlxsw_sp_fid *fid, struct mlxsw_sp_rif *rif);
+ enum mlxsw_sp_rif_type
+ mlxsw_sp_fid_type_rif_type(const struct mlxsw_sp *mlxsw_sp,
+ 			   enum mlxsw_sp_fid_type type);
+ u16 mlxsw_sp_fid_8021q_vid(const struct mlxsw_sp_fid *fid);
+ struct mlxsw_sp_fid *mlxsw_sp_fid_8021q_get(struct mlxsw_sp *mlxsw_sp, u16 vid);
+ struct mlxsw_sp_fid *mlxsw_sp_fid_8021d_get(struct mlxsw_sp *mlxsw_sp,
+ 					    int br_ifindex);
+ struct mlxsw_sp_fid *mlxsw_sp_fid_rfid_get(struct mlxsw_sp *mlxsw_sp,
+ 					   u16 rif_index);
+ struct mlxsw_sp_fid *mlxsw_sp_fid_dummy_get(struct mlxsw_sp *mlxsw_sp);
+ void mlxsw_sp_fid_put(struct mlxsw_sp_fid *fid);
+ int mlxsw_sp_port_fids_init(struct mlxsw_sp_port *mlxsw_sp_port);
+ void mlxsw_sp_port_fids_fini(struct mlxsw_sp_port *mlxsw_sp_port);
+ int mlxsw_sp_fids_init(struct mlxsw_sp *mlxsw_sp);
+ void mlxsw_sp_fids_fini(struct mlxsw_sp *mlxsw_sp);
+ 
++>>>>>>> cb4cc0e0b18e (mlxsw: spectrum: Tidy up header file)
  #endif
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.h
