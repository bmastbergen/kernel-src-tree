mlxsw: spectrum: Add support for IPv6 traps

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arkadi Sharshevsky <arkadis@mellanox.com>
commit 8d54814e5233f92bdc2e5185c5dbf4978f7c2742
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8d54814e.failed

Before we can start using IPv6, we need to trap certain control packets
to the CPU. Among others, these include Neighbour Discovery, DHCP and
neighbour misses.

	Signed-off-by: Arkadi Sharshevsky <arkadis@mellanox.com>
	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8d54814e5233f92bdc2e5185c5dbf4978f7c2742)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/reg.h
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
#	drivers/net/ethernet/mellanox/mlxsw/trap.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/reg.h
index 0883d4d54313,fe196fd84491..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/reg.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/reg.h
@@@ -3688,6 -3688,8 +3688,11 @@@ enum mlxsw_reg_htgt_trap_group 
  	MLXSW_REG_HTGT_TRAP_GROUP_SP_IP2ME,
  	MLXSW_REG_HTGT_TRAP_GROUP_SP_DHCP,
  	MLXSW_REG_HTGT_TRAP_GROUP_SP_EVENT,
++<<<<<<< HEAD
++=======
+ 	MLXSW_REG_HTGT_TRAP_GROUP_SP_IPV6_MLD,
+ 	MLXSW_REG_HTGT_TRAP_GROUP_SP_IPV6_ND,
++>>>>>>> 8d54814e5233 (mlxsw: spectrum: Add support for IPv6 traps)
  };
  
  /* reg_htgt_trap_group
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index 48f8ce84f0a1,d6dc3dc4f319..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -3365,15 -3332,53 +3365,55 @@@ static const struct mlxsw_listener mlxs
  	MLXSW_SP_RXL_NO_MARK(IGMP_V3_REPORT, TRAP_TO_CPU, IGMP, false),
  	MLXSW_SP_RXL_MARK(ARPBC, MIRROR_TO_CPU, ARP, false),
  	MLXSW_SP_RXL_MARK(ARPUC, MIRROR_TO_CPU, ARP, false),
 -	MLXSW_SP_RXL_NO_MARK(FID_MISS, TRAP_TO_CPU, IP2ME, false),
 -	MLXSW_SP_RXL_MARK(IPV6_MLDV12_LISTENER_QUERY, MIRROR_TO_CPU, IPV6_MLD,
 -			  false),
 -	MLXSW_SP_RXL_NO_MARK(IPV6_MLDV1_LISTENER_REPORT, TRAP_TO_CPU, IPV6_MLD,
 -			     false),
 -	MLXSW_SP_RXL_NO_MARK(IPV6_MLDV1_LISTENER_DONE, TRAP_TO_CPU, IPV6_MLD,
 -			     false),
 -	MLXSW_SP_RXL_NO_MARK(IPV6_MLDV2_LISTENER_REPORT, TRAP_TO_CPU, IPV6_MLD,
 -			     false),
  	/* L3 traps */
++<<<<<<< HEAD
 +	MLXSW_SP_RXL_NO_MARK(MTUERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 +	MLXSW_SP_RXL_NO_MARK(TTLERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 +	MLXSW_SP_RXL_NO_MARK(LBERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 +	MLXSW_SP_RXL_MARK(OSPF, TRAP_TO_CPU, OSPF, false),
 +	MLXSW_SP_RXL_NO_MARK(IP2ME, TRAP_TO_CPU, IP2ME, false),
 +	MLXSW_SP_RXL_NO_MARK(RTR_INGRESS0, TRAP_TO_CPU, REMOTE_ROUTE, false),
 +	MLXSW_SP_RXL_NO_MARK(HOST_MISS_IPV4, TRAP_TO_CPU, ARP_MISS, false),
 +	MLXSW_SP_RXL_NO_MARK(BGP_IPV4, TRAP_TO_CPU, BGP_IPV4, false),
++=======
+ 	MLXSW_SP_RXL_MARK(MTUERROR, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(TTLERROR, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(LBERROR, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(IP2ME, TRAP_TO_CPU, IP2ME, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_UNSPECIFIED_ADDRESS, TRAP_TO_CPU, ROUTER_EXP,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(IPV6_LINK_LOCAL_DEST, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_LINK_LOCAL_SRC, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_ALL_NODES_LINK, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_ALL_ROUTERS_LINK, TRAP_TO_CPU, ROUTER_EXP,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(IPV4_OSPF, TRAP_TO_CPU, OSPF, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_OSPF, TRAP_TO_CPU, OSPF, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_DHCP, TRAP_TO_CPU, DHCP, false),
+ 	MLXSW_SP_RXL_MARK(RTR_INGRESS0, TRAP_TO_CPU, REMOTE_ROUTE, false),
+ 	MLXSW_SP_RXL_MARK(IPV4_BGP, TRAP_TO_CPU, BGP, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_BGP, TRAP_TO_CPU, BGP, false),
+ 	MLXSW_SP_RXL_MARK(L3_IPV6_ROUTER_SOLICITATION, TRAP_TO_CPU, IPV6_ND,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(L3_IPV6_ROUTER_ADVERTISMENT, TRAP_TO_CPU, IPV6_ND,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(L3_IPV6_NEIGHBOR_SOLICITATION, TRAP_TO_CPU, IPV6_ND,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(L3_IPV6_NEIGHBOR_ADVERTISMENT, TRAP_TO_CPU, IPV6_ND,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(L3_IPV6_REDIRECTION, TRAP_TO_CPU, IPV6_ND, false),
+ 	MLXSW_SP_RXL_MARK(IPV6_MC_LINK_LOCAL_DEST, TRAP_TO_CPU, ROUTER_EXP,
+ 			  false),
+ 	MLXSW_SP_RXL_MARK(HOST_MISS_IPV4, TRAP_TO_CPU, HOST_MISS, false),
+ 	MLXSW_SP_RXL_MARK(HOST_MISS_IPV6, TRAP_TO_CPU, HOST_MISS, false),
+ 	MLXSW_SP_RXL_MARK(ROUTER_ALERT_IPV4, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	MLXSW_SP_RXL_MARK(ROUTER_ALERT_IPV6, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	/* PKT Sample trap */
+ 	MLXSW_RXL(mlxsw_sp_rx_listener_sample_func, PKT_SAMPLE, MIRROR_TO_CPU,
+ 		  false, SP_IP2ME, DISCARD),
+ 	/* ACL trap */
+ 	MLXSW_SP_RXL_NO_MARK(ACL0, TRAP_TO_CPU, IP2ME, false),
++>>>>>>> 8d54814e5233 (mlxsw: spectrum: Add support for IPv6 traps)
  };
  
  static int mlxsw_sp_cpu_policers_set(struct mlxsw_core *mlxsw_core)
diff --cc drivers/net/ethernet/mellanox/mlxsw/trap.h
index 7ab275deacac,61652396bf75..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/trap.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/trap.h
@@@ -59,11 -61,33 +59,39 @@@ enum 
  	MLXSW_TRAP_ID_MTUERROR = 0x52,
  	MLXSW_TRAP_ID_TTLERROR = 0x53,
  	MLXSW_TRAP_ID_LBERROR = 0x54,
- 	MLXSW_TRAP_ID_OSPF = 0x55,
+ 	MLXSW_TRAP_ID_IPV4_OSPF = 0x55,
  	MLXSW_TRAP_ID_IP2ME = 0x5F,
++<<<<<<< HEAD
++=======
+ 	MLXSW_TRAP_ID_IPV6_UNSPECIFIED_ADDRESS = 0x60,
+ 	MLXSW_TRAP_ID_IPV6_LINK_LOCAL_DEST = 0x61,
+ 	MLXSW_TRAP_ID_IPV6_LINK_LOCAL_SRC = 0x62,
+ 	MLXSW_TRAP_ID_IPV6_ALL_NODES_LINK = 0x63,
+ 	MLXSW_TRAP_ID_IPV6_OSPF = 0x64,
+ 	MLXSW_TRAP_ID_IPV6_MLDV12_LISTENER_QUERY = 0x65,
+ 	MLXSW_TRAP_ID_IPV6_MLDV1_LISTENER_REPORT = 0x66,
+ 	MLXSW_TRAP_ID_IPV6_MLDV1_LISTENER_DONE = 0x67,
+ 	MLXSW_TRAP_ID_IPV6_MLDV2_LISTENER_REPORT = 0x68,
+ 	MLXSW_TRAP_ID_IPV6_DHCP = 0x69,
+ 	MLXSW_TRAP_ID_IPV6_ALL_ROUTERS_LINK = 0x6F,
++>>>>>>> 8d54814e5233 (mlxsw: spectrum: Add support for IPv6 traps)
  	MLXSW_TRAP_ID_RTR_INGRESS0 = 0x70,
- 	MLXSW_TRAP_ID_BGP_IPV4 = 0x88,
+ 	MLXSW_TRAP_ID_IPV4_BGP = 0x88,
+ 	MLXSW_TRAP_ID_IPV6_BGP = 0x89,
+ 	MLXSW_TRAP_ID_L3_IPV6_ROUTER_SOLICITATION = 0x8A,
+ 	MLXSW_TRAP_ID_L3_IPV6_ROUTER_ADVERTISMENT = 0x8B,
+ 	MLXSW_TRAP_ID_L3_IPV6_NEIGHBOR_SOLICITATION = 0x8C,
+ 	MLXSW_TRAP_ID_L3_IPV6_NEIGHBOR_ADVERTISMENT = 0x8D,
+ 	MLXSW_TRAP_ID_L3_IPV6_REDIRECTION = 0x8E,
  	MLXSW_TRAP_ID_HOST_MISS_IPV4 = 0x90,
++<<<<<<< HEAD
++=======
+ 	MLXSW_TRAP_ID_IPV6_MC_LINK_LOCAL_DEST = 0x91,
+ 	MLXSW_TRAP_ID_HOST_MISS_IPV6 = 0x92,
+ 	MLXSW_TRAP_ID_ROUTER_ALERT_IPV4 = 0xD6,
+ 	MLXSW_TRAP_ID_ROUTER_ALERT_IPV6 = 0xD7,
+ 	MLXSW_TRAP_ID_ACL0 = 0x1C0,
++>>>>>>> 8d54814e5233 (mlxsw: spectrum: Add support for IPv6 traps)
  
  	MLXSW_TRAP_ID_MAX = 0x1FF
  };
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/reg.h
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/trap.h
