scsi: lpfc: Avoid NULL pointer dereference in lpfc_els_abort()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] lpfc: Avoid NULL pointer dereference in lpfc_els_abort() (Dick Kennedy) [1385844 1461977 1387768]
Rebuild_FUZZ: 94.92%
commit-author Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
commit 7c9fdfb7000715df2d187df251d11e4850ce94c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7c9fdfb7.failed

We might have a NULL pring in lpfc_els_abort(), for example on error
recovery path, since queues are destroyed during error recovery
mechanism.

In this case, we should just drop the abort since the queues will be
recreated anyway. This patch just verifies for NULL pointer and stop the
abortion of the queue in case of a NULL pring.

Also, this patch converts return type of lpfc_els_abort() from int to
void, since it's not checked anywhere.

	Reported-by: Harsha Thyagaraja <hathyaga@in.ibm.com>
	Reported-by: Naresh Bannoth <nbannoth@in.ibm.com>
	Tested-by: Raphael Silva <raphasil@linux.vnet.ibm.com>
	Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Acked-by: James Smart  <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 7c9fdfb7000715df2d187df251d11e4850ce94c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_nportdisc.c
diff --cc drivers/scsi/lpfc/lpfc_nportdisc.c
index 56a3df4fddb0,f74cb0142fd4..000000000000
--- a/drivers/scsi/lpfc/lpfc_nportdisc.c
+++ b/drivers/scsi/lpfc/lpfc_nportdisc.c
@@@ -204,10 -210,15 +204,19 @@@ voi
  lpfc_els_abort(struct lpfc_hba *phba, struct lpfc_nodelist *ndlp)
  {
  	LIST_HEAD(abort_list);
 -	struct lpfc_sli_ring *pring;
 +	struct lpfc_sli  *psli = &phba->sli;
 +	struct lpfc_sli_ring *pring = &psli->ring[LPFC_ELS_RING];
  	struct lpfc_iocbq *iocb, *next_iocb;
  
++<<<<<<< HEAD
++=======
+ 	pring = lpfc_phba_elsring(phba);
+ 
+ 	/* In case of error recovery path, we might have a NULL pring here */
+ 	if (!pring)
+ 		return;
+ 
++>>>>>>> 7c9fdfb70007 (scsi: lpfc: Avoid NULL pointer dereference in lpfc_els_abort())
  	/* Abort outstanding I/O on NPort <nlp_DID> */
  	lpfc_printf_vlog(ndlp->vport, KERN_INFO, LOG_DISCOVERY,
  			 "2819 Abort outstanding I/O on NPort x%x "
diff --git a/drivers/scsi/lpfc/lpfc_crtn.h b/drivers/scsi/lpfc/lpfc_crtn.h
index 5c660beb66e2..eddfc2959b26 100644
--- a/drivers/scsi/lpfc/lpfc_crtn.h
+++ b/drivers/scsi/lpfc/lpfc_crtn.h
@@ -119,7 +119,7 @@ int lpfc_disc_state_machine(struct lpfc_vport *, struct lpfc_nodelist *, void *,
 void lpfc_do_scr_ns_plogi(struct lpfc_hba *, struct lpfc_vport *);
 int lpfc_check_sparm(struct lpfc_vport *, struct lpfc_nodelist *,
 		     struct serv_parm *, uint32_t, int);
-int lpfc_els_abort(struct lpfc_hba *, struct lpfc_nodelist *);
+void lpfc_els_abort(struct lpfc_hba *, struct lpfc_nodelist *);
 void lpfc_more_plogi(struct lpfc_vport *);
 void lpfc_more_adisc(struct lpfc_vport *);
 void lpfc_end_rscn(struct lpfc_vport *);
* Unmerged path drivers/scsi/lpfc/lpfc_nportdisc.c
