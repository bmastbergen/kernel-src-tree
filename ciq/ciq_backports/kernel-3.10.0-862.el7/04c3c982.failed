libnvdimm, btt: fix format string warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Randy Dunlap <rdunlap@infradead.org>
commit 04c3c982fcc0151ed3574d7ae4f1e62278054d72
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/04c3c982.failed

Fix format warnings (seen on i386) in nvdimm/btt.c:

../drivers/nvdimm/btt.c: In function ‘btt_map_init’:
../drivers/nvdimm/btt.c:430:3: warning: format ‘%lx’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘size_t’ [-Wformat=]
   dev_WARN_ONCE(to_dev(arena), size < 512,
   ^
../drivers/nvdimm/btt.c: In function ‘btt_log_init’:
../drivers/nvdimm/btt.c:474:3: warning: format ‘%lx’ expects argument of type ‘long unsigned int’, but argument 4 has type ‘size_t’ [-Wformat=]
   dev_WARN_ONCE(to_dev(arena), size < 512,
   ^

Fixes: 86652d2eb347 ("libnvdimm, btt: clean up warning and error messages")
	Reported-by: Arnd Bergmann <arnd@arndb.de>
	Reported-by: kbuild test robot <fengguang.wu@intel.com>
	Cc: Vishal Verma <vishal.l.verma@intel.com>
	Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 04c3c982fcc0151ed3574d7ae4f1e62278054d72)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/btt.c
diff --cc drivers/nvdimm/btt.c
index 73d03e1bfbd1,b9008c3f0d17..000000000000
--- a/drivers/nvdimm/btt.c
+++ b/drivers/nvdimm/btt.c
@@@ -396,8 -419,18 +396,13 @@@ static int btt_map_init(struct arena_in
  	while (mapsize) {
  		size_t size = min(mapsize, chunk_size);
  
++<<<<<<< HEAD
++=======
+ 		dev_WARN_ONCE(to_dev(arena), size < 512,
+ 			"chunk size: %#zx is unaligned\n", size);
++>>>>>>> 04c3c982fcc0 (libnvdimm, btt: fix format string warnings)
  		ret = arena_write_bytes(arena, arena->mapoff + offset, zerobuf,
 -				size, 0);
 +				size);
  		if (ret)
  			goto free;
  
@@@ -417,11 -450,38 +422,39 @@@
   */
  static int btt_log_init(struct arena_info *arena)
  {
 -	size_t logsize = arena->info2off - arena->logoff;
 -	size_t chunk_size = SZ_4K, offset = 0;
 -	struct log_entry log;
 -	void *zerobuf;
  	int ret;
  	u32 i;
 +	struct log_entry log, zerolog;
  
++<<<<<<< HEAD
 +	memset(&zerolog, 0, sizeof(zerolog));
++=======
+ 	zerobuf = kzalloc(chunk_size, GFP_KERNEL);
+ 	if (!zerobuf)
+ 		return -ENOMEM;
+ 	/*
+ 	 * logoff should always be at least 512B  aligned. We rely on that to
+ 	 * make sure rw_bytes does error clearing correctly, so make sure that
+ 	 * is the case.
+ 	 */
+ 	dev_WARN_ONCE(to_dev(arena), !IS_ALIGNED(arena->logoff, 512),
+ 		"arena->logoff: %#llx is unaligned\n", arena->logoff);
+ 
+ 	while (logsize) {
+ 		size_t size = min(logsize, chunk_size);
+ 
+ 		dev_WARN_ONCE(to_dev(arena), size < 512,
+ 			"chunk size: %#zx is unaligned\n", size);
+ 		ret = arena_write_bytes(arena, arena->logoff + offset, zerobuf,
+ 				size, 0);
+ 		if (ret)
+ 			goto free;
+ 
+ 		offset += size;
+ 		logsize -= size;
+ 		cond_resched();
+ 	}
++>>>>>>> 04c3c982fcc0 (libnvdimm, btt: fix format string warnings)
  
  	for (i = 0; i < arena->nfree; i++) {
  		log.lba = cpu_to_le32(i);
* Unmerged path drivers/nvdimm/btt.c
