Add module param type 'ullong'

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [kernel] params: Add module param type 'ullong' (Jiri Benc) [1497085]
Rebuild_FUZZ: 88.24%
commit-author Hannes Reinecke <hare@suse.de>
commit b4210b810e5040f10a30ba56de6c3faab5c49345
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b4210b81.failed

Some driver might want to pass in an 64-bit value, so introduce
a module param type 'ullong'.

	Signed-off-by: Hannes Reinecke <hare@suse.de>
	Reviewed-by: Christoph Hellwig <hch@infradead.org>
	Reviewed-by: Ewan Milne <emilne@redhat.com>
	Acked-by: Rusty Russell <rusty@rustcorp.com.au>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit b4210b810e5040f10a30ba56de6c3faab5c49345)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/params.c
diff --cc kernel/params.c
index e9578f496fbc,34f527023794..000000000000
--- a/kernel/params.c
+++ b/kernel/params.c
@@@ -200,13 -249,14 +200,24 @@@ int parse_args(const char *doing
  	EXPORT_SYMBOL(param_ops_##name)
  
  
++<<<<<<< HEAD
 +STANDARD_PARAM_DEF(byte, unsigned char, "%hhu", unsigned long, strict_strtoul);
 +STANDARD_PARAM_DEF(short, short, "%hi", long, strict_strtol);
 +STANDARD_PARAM_DEF(ushort, unsigned short, "%hu", unsigned long, strict_strtoul);
 +STANDARD_PARAM_DEF(int, int, "%i", long, strict_strtol);
 +STANDARD_PARAM_DEF(uint, unsigned int, "%u", unsigned long, strict_strtoul);
 +STANDARD_PARAM_DEF(long, long, "%li", long, strict_strtol);
 +STANDARD_PARAM_DEF(ulong, unsigned long, "%lu", unsigned long, strict_strtoul);
++=======
+ STANDARD_PARAM_DEF(byte, unsigned char, "%hhu", kstrtou8);
+ STANDARD_PARAM_DEF(short, short, "%hi", kstrtos16);
+ STANDARD_PARAM_DEF(ushort, unsigned short, "%hu", kstrtou16);
+ STANDARD_PARAM_DEF(int, int, "%i", kstrtoint);
+ STANDARD_PARAM_DEF(uint, unsigned int, "%u", kstrtouint);
+ STANDARD_PARAM_DEF(long, long, "%li", kstrtol);
+ STANDARD_PARAM_DEF(ulong, unsigned long, "%lu", kstrtoul);
+ STANDARD_PARAM_DEF(ullong, unsigned long long, "%llu", kstrtoull);
++>>>>>>> b4210b810e50 (Add module param type 'ullong')
  
  int param_set_charp(const char *val, const struct kernel_param *kp)
  {
diff --git a/include/linux/moduleparam.h b/include/linux/moduleparam.h
index 137b4198fc03..4ea890455854 100644
--- a/include/linux/moduleparam.h
+++ b/include/linux/moduleparam.h
@@ -372,6 +372,11 @@ extern int param_set_ulong(const char *val, const struct kernel_param *kp);
 extern int param_get_ulong(char *buffer, const struct kernel_param *kp);
 #define param_check_ulong(name, p) __param_check(name, p, unsigned long)
 
+extern struct kernel_param_ops param_ops_ullong;
+extern int param_set_ullong(const char *val, const struct kernel_param *kp);
+extern int param_get_ullong(char *buffer, const struct kernel_param *kp);
+#define param_check_ullong(name, p) __param_check(name, p, unsigned long long)
+
 extern struct kernel_param_ops param_ops_charp;
 extern int param_set_charp(const char *val, const struct kernel_param *kp);
 extern int param_get_charp(char *buffer, const struct kernel_param *kp);
* Unmerged path kernel/params.c
