net: sched: cls_fw: no need to call tcf_exts_change for newly allocated struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: cls_fw: no need to call tcf_exts_change for newly allocated struct (Ivan Vecera) [1445420]
Rebuild_FUZZ: 96.69%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 94611bff6e1e57c4a74a9242f3fe749aa4a31678
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/94611bff.failed

As the f struct was allocated right before fw_set_parms call, no need
to use tcf_exts_change to do atomic change, and we can just fill-up
the unused exts struct directly by tcf_exts_validate.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 94611bff6e1e57c4a74a9242f3fe749aa4a31678)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_fw.c
diff --cc net/sched/cls_fw.c
index f11733402ade,11f178f1b2be..000000000000
--- a/net/sched/cls_fw.c
+++ b/net/sched/cls_fw.c
@@@ -193,9 -198,7 +193,12 @@@ static int fw_set_parms(struct net *net
  	u32 mask;
  	int err;
  
++<<<<<<< HEAD
 +	tcf_exts_init(&e, TCA_FW_ACT, TCA_FW_POLICE);
 +	err = tcf_exts_validate(net, tp, tb, tca[TCA_RATE], &e, ovr);
++=======
+ 	err = tcf_exts_validate(net, tp, tb, tca[TCA_RATE], &f->exts, ovr);
++>>>>>>> 94611bff6e1e (net: sched: cls_fw: no need to call tcf_exts_change for newly allocated struct)
  	if (err < 0)
  		return err;
  
* Unmerged path net/sched/cls_fw.c
