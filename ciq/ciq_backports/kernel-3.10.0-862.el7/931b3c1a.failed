RDMA/mlx5: Fix existence check for extended address vector

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit 931b3c1a832621b4bdcbaf783096fc267eb36fbe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/931b3c1a.failed

The extended address vector is the highest bit in be32 variable,
but it was compared with the lowest. This patch fixes the endianness
of that check and removes already declared define.

Fixes: 17d2f88f92ce ("IB/mlx5: Add ODP atomics support")
	Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 931b3c1a832621b4bdcbaf783096fc267eb36fbe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/odp.c
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 25e3fb5efdf9,3d701c7a4c91..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -492,6 -929,35 +492,38 @@@ invalid_transport_or_opcode
  		return -EFAULT;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (unlikely(opcode >= sizeof(mlx5_ib_odp_opcode_cap) /
+ 	    sizeof(mlx5_ib_odp_opcode_cap[0]) ||
+ 	    !(transport_caps & mlx5_ib_odp_opcode_cap[opcode]))) {
+ 		mlx5_ib_err(dev, "ODP fault on QP of an unsupported opcode 0x%x\n",
+ 			    opcode);
+ 		return -EFAULT;
+ 	}
+ 
+ 	if (qp->ibqp.qp_type != IB_QPT_RC) {
+ 		av = *wqe;
+ 		if (av->dqp_dct & cpu_to_be32(MLX5_EXTENDED_UD_AV))
+ 			*wqe += sizeof(struct mlx5_av);
+ 		else
+ 			*wqe += sizeof(struct mlx5_base_av);
+ 	}
+ 
+ 	switch (opcode) {
+ 	case MLX5_OPCODE_RDMA_WRITE:
+ 	case MLX5_OPCODE_RDMA_WRITE_IMM:
+ 	case MLX5_OPCODE_RDMA_READ:
+ 		*wqe += sizeof(struct mlx5_wqe_raddr_seg);
+ 		break;
+ 	case MLX5_OPCODE_ATOMIC_CS:
+ 	case MLX5_OPCODE_ATOMIC_FA:
+ 		*wqe += sizeof(struct mlx5_wqe_raddr_seg);
+ 		*wqe += sizeof(struct mlx5_wqe_atomic_seg);
+ 		break;
+ 	}
+ 
++>>>>>>> 931b3c1a8326 (RDMA/mlx5: Fix existence check for extended address vector)
  	return 0;
  }
  
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
