rtnetlink: bring NETDEV_CHANGE_TX_QUEUE_LEN event process back in rtnetlink_event

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit ebdcf0450b020748c2dab6bfe44a5ac3c5159fb0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ebdcf045.failed

The same fix for changing mtu in the patch 'rtnetlink: bring
NETDEV_CHANGEMTU event process back in rtnetlink_event' is
needed for changing tx_queue_len.

Note that the redundant notifications issue for tx_queue_len
will be fixed in the later patch 'rtnetlink: do not send
notification for tx_queue_len in do_setlink'.

Fixes: 27b3b551d8a7 ("rtnetlink: Do not generate notifications for NETDEV_CHANGE_TX_QUEUE_LEN event")
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Acked-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ebdcf0450b020748c2dab6bfe44a5ac3c5159fb0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index 589eb8f71c7a,bf473604f33d..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -3926,7 -4287,9 +3926,13 @@@ static int rtnetlink_event(struct notif
  	case NETDEV_NOTIFY_PEERS:
  	case NETDEV_RESEND_IGMP:
  	case NETDEV_CHANGEINFODATA:
++<<<<<<< HEAD
 +		rtmsg_ifinfo(RTM_NEWLINK, dev, 0, GFP_KERNEL);
++=======
+ 	case NETDEV_CHANGE_TX_QUEUE_LEN:
+ 		rtmsg_ifinfo_event(RTM_NEWLINK, dev, 0, rtnl_get_event(event),
+ 				   GFP_KERNEL);
++>>>>>>> ebdcf0450b02 (rtnetlink: bring NETDEV_CHANGE_TX_QUEUE_LEN event process back in rtnetlink_event)
  		break;
  	default:
  		break;
* Unmerged path net/core/rtnetlink.c
