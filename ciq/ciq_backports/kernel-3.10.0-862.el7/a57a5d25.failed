ibmvnic: Move login to its own routine

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author John Allen <jallen@linux.vnet.ibm.com>
commit a57a5d25a56bd9625722d17fecacf21cbe9818d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a57a5d25.failed

Move the code that handles login and renegotiation of ibmvnic
capabilities to its own routine.

	Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a57a5d25a56bd9625722d17fecacf21cbe9818d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 6a325c61534d,04f8feb0f2a3..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -368,6 -371,38 +368,46 @@@ static void free_rx_pool(struct ibmvnic
  	pool->rx_buff = NULL;
  }
  
+ static int ibmvnic_login(struct net_device *netdev)
+ {
+ 	struct ibmvnic_adapter *adapter = netdev_priv(netdev);
 -	unsigned long timeout = msecs_to_jiffies(30000);
+ 	struct device *dev = &adapter->vdev->dev;
++<<<<<<< HEAD
++	struct ibmvnic_tx_pool *tx_pool;
++	union ibmvnic_crq crq;
++	int rxadd_subcrqs;
++	u64 *size_array;
++	int tx_subcrqs;
++	int i, j;
++
++=======
+ 
+ 	do {
+ 		if (adapter->renegotiate) {
+ 			adapter->renegotiate = false;
+ 			release_sub_crqs_no_irqs(adapter);
+ 
+ 			reinit_completion(&adapter->init_done);
+ 			send_cap_queries(adapter);
+ 			if (!wait_for_completion_timeout(&adapter->init_done,
+ 							 timeout)) {
+ 				dev_err(dev, "Capabilities query timeout\n");
+ 				return -1;
+ 			}
+ 		}
+ 
+ 		reinit_completion(&adapter->init_done);
+ 		send_login(adapter);
+ 		if (!wait_for_completion_timeout(&adapter->init_done,
+ 						 timeout)) {
+ 			dev_err(dev, "Login timeout\n");
+ 			return -1;
+ 		}
+ 	} while (adapter->renegotiate);
+ 
+ 	return 0;
+ }
+ 
  static int ibmvnic_open(struct net_device *netdev)
  {
  	struct ibmvnic_adapter *adapter = netdev_priv(netdev);
@@@ -377,8 -412,25 +417,26 @@@
  	int rxadd_subcrqs;
  	u64 *size_array;
  	int tx_subcrqs;
+ 	int rc = 0;
  	int i, j;
  
+ 	rc = ibmvnic_login(netdev);
+ 	if (rc)
+ 		return rc;
+ 
+ 	rc = netif_set_real_num_tx_queues(netdev, adapter->req_tx_queues);
+ 	if (rc) {
+ 		dev_err(dev, "failed to set the number of tx queues\n");
+ 		return -1;
+ 	}
+ 
+ 	rc = init_sub_crq_irqs(adapter);
+ 	if (rc) {
+ 		dev_err(dev, "failed to initialize sub crq irqs\n");
+ 		return -1;
+ 	}
+ 
++>>>>>>> a57a5d25a56b (ibmvnic: Move login to its own routine)
  	rxadd_subcrqs =
  	    be32_to_cpu(adapter->login_rsp_buf->num_rxadd_subcrqs);
  	tx_subcrqs =
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
