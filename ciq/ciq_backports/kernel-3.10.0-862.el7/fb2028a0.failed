scsi: qla2xxx: Off by one in qlt_ctio_to_cmd()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Off by one in qlt_ctio_to_cmd() (Himanshu Madhani) [1460030]
Rebuild_FUZZ: 93.02%
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit fb2028a0b24e0823bbc0a28e6f0f1bd9fbbf733c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/fb2028a0.failed

There are "req->num_outstanding_cmds" elements in the
req->outstanding_cmds[] array so the > here should be >=.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Nicholas Bellinger <nab@linux-iscsi.org>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit fb2028a0b24e0823bbc0a28e6f0f1bd9fbbf733c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 7a27b61e2d53,986a4270b2ff..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -2424,22 -3723,31 +2424,40 @@@ static inline struct qla_tgt_cmd *qlt_g
  
  /* ha->hardware_lock supposed to be held on entry */
  static struct qla_tgt_cmd *qlt_ctio_to_cmd(struct scsi_qla_host *vha,
 -	struct rsp_que *rsp, uint32_t handle, void *ctio)
 +	uint32_t handle, void *ctio)
  {
  	struct qla_tgt_cmd *cmd = NULL;
 -	struct req_que *req;
 -	int qid = GET_QID(handle);
 -	uint32_t h = handle & ~QLA_TGT_HANDLE_MASK;
  
 -	if (unlikely(h == QLA_TGT_SKIP_HANDLE))
 -		return NULL;
 +	/* Clear out internal marks */
 +	handle &= ~(CTIO_COMPLETION_HANDLE_MARK |
 +	    CTIO_INTERMEDIATE_HANDLE_MARK);
  
++<<<<<<< HEAD
 +	if (handle != QLA_TGT_NULL_HANDLE) {
 +		if (unlikely(handle == QLA_TGT_SKIP_HANDLE)) {
 +			ql_dbg(ql_dbg_tgt, vha, 0xe01d, "%s",
 +			    "SKIP_HANDLE CTIO\n");
 +			return NULL;
 +		}
 +		/* handle-1 is actually used */
 +		if (unlikely(handle > DEFAULT_OUTSTANDING_COMMANDS)) {
++=======
+ 	if (qid == rsp->req->id) {
+ 		req = rsp->req;
+ 	} else if (vha->hw->req_q_map[qid]) {
+ 		ql_dbg(ql_dbg_tgt_mgt, vha, 0x1000a,
+ 		    "qla_target(%d): CTIO completion with different QID %d handle %x\n",
+ 		    vha->vp_idx, rsp->id, handle);
+ 		req = vha->hw->req_q_map[qid];
+ 	} else {
+ 		return NULL;
+ 	}
+ 
+ 	h &= QLA_CMD_HANDLE_MASK;
+ 
+ 	if (h != QLA_TGT_NULL_HANDLE) {
+ 		if (unlikely(h >= req->num_outstanding_cmds)) {
++>>>>>>> fb2028a0b24e (scsi: qla2xxx: Off by one in qlt_ctio_to_cmd())
  			ql_dbg(ql_dbg_tgt, vha, 0xe052,
  			    "qla_target(%d): Wrong handle %x received\n",
  			    vha->vp_idx, handle);
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
