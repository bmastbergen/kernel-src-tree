Sanitize 'move_pages()' permission checks

jira LE-1907
cve CVE-2017-14140
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [kernel] mm: Sanitize 'move_pages()' permission checks (Chris von Recklinghausen) [1499610] {CVE-2017-14140}
Rebuild_FUZZ: 95.35%
commit-author Linus Torvalds <torvalds@linux-foundation.org>
commit 197e7e521384a23b9e585178f3f11c9fa08274b9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/197e7e52.failed

The 'move_paghes()' system call was introduced long long ago with the
same permission checks as for sending a signal (except using
CAP_SYS_NICE instead of CAP_SYS_KILL for the overriding capability).

That turns out to not be a great choice - while the system call really
only moves physical page allocations around (and you need other
capabilities to do a lot of it), you can check the return value to map
out some the virtual address choices and defeat ASLR of a binary that
still shares your uid.

So change the access checks to the more common 'ptrace_may_access()'
model instead.

This tightens the access checks for the uid, and also effectively
changes the CAP_SYS_NICE check to CAP_SYS_PTRACE, but it's unlikely that
anybody really _uses_ this legacy system call any more (we hav ebetter
NUMA placement models these days), so I expect nobody to notice.

Famous last words.

	Reported-by: Otto Ebeling <otto.ebeling@iki.fi>
	Acked-by: Eric W. Biederman <ebiederm@xmission.com>
	Cc: Willy Tarreau <w@1wt.eu>
	Cc: stable@kernel.org
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 197e7e521384a23b9e585178f3f11c9fa08274b9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/migrate.c
diff --cc mm/migrate.c
index f70d80642c5a,e84eeb4e4356..000000000000
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@@ -37,8 -38,10 +37,15 @@@
  #include <linux/gfp.h>
  #include <linux/balloon_compaction.h>
  #include <linux/mmu_notifier.h>
++<<<<<<< HEAD
 +#include <linux/memremap.h>
 +#include <linux/userfaultfd_k.h>
++=======
+ #include <linux/page_idle.h>
+ #include <linux/page_owner.h>
+ #include <linux/sched/mm.h>
+ #include <linux/ptrace.h>
++>>>>>>> 197e7e521384 (Sanitize 'move_pages()' permission checks)
  
  #include <asm/tlbflush.h>
  
* Unmerged path mm/migrate.c
