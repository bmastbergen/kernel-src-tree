scsi: libfc: fix a deadlock in fc_rport_work

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] libfc: fix a deadlock in fc_rport_work (Govindarajulu Varadarajan) [1507105]
Rebuild_FUZZ: 92.68%
commit-author Satish Kharat <satishkh@cisco.com>
commit d1b3f51ee1eab3a6db1b09a60e61280c48eb0b01
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d1b3f51e.failed

In places like fc_rport_recv_plogi_req and fcoe_ctlr_vn_add we always
take the lport disc_mutex lock before the rports mutex
(rp_mutex) lock. Gaurding list_del_rcu(&rdata->peers) with
disc.disc_mutex in fc_rport_work is correct but the rp_mutex lock
can and should to be dropped before taking that lock else results
in a deadlock.

	Signed-off-by: Satish Kharat <satishkh@cisco.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit d1b3f51ee1eab3a6db1b09a60e61280c48eb0b01)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/libfc/fc_rport.c
diff --cc drivers/scsi/libfc/fc_rport.c
index 36b58cef5f35,31d31aad3de1..000000000000
--- a/drivers/scsi/libfc/fc_rport.c
+++ b/drivers/scsi/libfc/fc_rport.c
@@@ -365,8 -388,7 +366,12 @@@ static void fc_rport_work(struct work_s
  				mutex_lock(&lport->disc.disc_mutex);
  				list_del_rcu(&rdata->peers);
  				mutex_unlock(&lport->disc.disc_mutex);
++<<<<<<< HEAD
 +				mutex_unlock(&rdata->rp_mutex);
 +				kref_put(&rdata->kref, lport->tt.rport_destroy);
++=======
+ 				kref_put(&rdata->kref, fc_rport_destroy);
++>>>>>>> d1b3f51ee1ea (scsi: libfc: fix a deadlock in fc_rport_work)
  			}
  		} else {
  			/*
* Unmerged path drivers/scsi/libfc/fc_rport.c
