cpufreq: intel_pstate: Fix intel_pstate_verify_policy()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [cpufreq] intel_pstate: Fix intel_pstate_verify_policy() (Prarit Bhargava) [1465349]
Rebuild_FUZZ: 91.09%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit d74b19929130c9b5395a497030dcf161353cd526
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d74b1992.failed

The code added to intel_pstate_verify_policy() by commit 1443ebbacfd7
(cpufreq: intel_pstate: Fix sysfs limits enforcement for performance
policy) should use perf_limits instead of limits, because otherwise
setting global limits via sysfs may affect policies inconsistently.

For example, in the sequence of shell commands below, the
scaling_min_freq attribute for policy1 and policy2 should be
affected in the same way, because scaling_governor is set in
the same way for both of them:

 # cat cpufreq/policy1/scaling_governor
 powersave
 # cat cpufreq/policy2/scaling_governor
 powersave
 # echo performance > cpufreq/policy0/scaling_governor
 # echo 94 > intel_pstate/min_perf_pct
 # cat cpufreq/policy0/scaling_min_freq
 2914000
 # cat cpufreq/policy1/scaling_min_freq
 2914000
 # cat cpufreq/policy2/scaling_min_freq
 800000

The are affected differently, because intel_pstate_verify_policy()
is invoked with limits set to &performance_limits (left behind by
policy0) for policy1 and with limits set to &powersave_limits (left
behind by policy1) for policy2.  Since perf_limits is set to the
set of limits matching the policy being updated, using it instead
of limits fixes the inconsistency.

Fixes: 1443ebbacfd7 (cpufreq: intel_pstate: Fix sysfs limits enforcement for performance policy)
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit d74b19929130c9b5395a497030dcf161353cd526)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index b681c02dda0f,3dc546601c88..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -1505,6 -2207,17 +1505,20 @@@ static int intel_pstate_verify_policy(s
  	    policy->policy != CPUFREQ_POLICY_PERFORMANCE)
  		return -EINVAL;
  
++<<<<<<< HEAD
++=======
+ 	/* When per-CPU limits are used, sysfs limits are not used */
+ 	if (!per_cpu_limits) {
+ 		unsigned int max_freq, min_freq;
+ 
+ 		max_freq = policy->cpuinfo.max_freq *
+ 					perf_limits->max_sysfs_pct / 100;
+ 		min_freq = policy->cpuinfo.max_freq *
+ 					perf_limits->min_sysfs_pct / 100;
+ 		cpufreq_verify_within_limits(policy, min_freq, max_freq);
+ 	}
+ 
++>>>>>>> d74b19929130 (cpufreq: intel_pstate: Fix intel_pstate_verify_policy())
  	return 0;
  }
  
* Unmerged path drivers/cpufreq/intel_pstate.c
