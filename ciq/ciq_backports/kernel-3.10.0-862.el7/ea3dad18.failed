ovl: mark parent impure on ovl_link()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Amir Goldstein <amir73il@gmail.com>
commit ea3dad18dc5f778cfd931311a91a9315aa0065a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ea3dad18.failed

When linking a file with copy up origin into a new parent, mark the
new parent dir "impure".

Fixes: ee1d6d37b6b8 ("ovl: mark upper dir with type origin entries "impure"")
	Cc: <stable@vger.kernel.org> # v4.12
	Signed-off-by: Amir Goldstein <amir73il@gmail.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit ea3dad18dc5f778cfd931311a91a9315aa0065a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/dir.c
diff --cc fs/overlayfs/dir.c
index 709c8eb662f9,48b70e6490f3..000000000000
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@@ -511,8 -481,8 +511,13 @@@ out_cleanup
  }
  
  static int ovl_create_or_link(struct dentry *dentry, struct inode *inode,
++<<<<<<< HEAD
 +			      struct kstat *stat, const char *link,
 +			      struct dentry *hardlink)
++=======
+ 			      struct cattr *attr, struct dentry *hardlink,
+ 			      bool origin)
++>>>>>>> ea3dad18dc5f (ovl: mark parent impure on ovl_link())
  {
  	int err;
  	const struct cred *old_cred;
@@@ -578,9 -561,9 +595,13 @@@ static int ovl_create_object(struct den
  		goto out_drop_write;
  
  	inode_init_owner(inode, dentry->d_parent->d_inode, mode);
 -	attr.mode = inode->i_mode;
 +	stat.mode = inode->i_mode;
  
++<<<<<<< HEAD
 +	err = ovl_create_or_link(dentry, inode, &stat, link, NULL);
++=======
+ 	err = ovl_create_or_link(dentry, inode, &attr, NULL, false);
++>>>>>>> ea3dad18dc5f (ovl: mark parent impure on ovl_link())
  	if (err)
  		iput(inode);
  
@@@ -634,7 -618,12 +655,12 @@@ static int ovl_link(struct dentry *old
  	inode = d_inode(old);
  	ihold(inode);
  
++<<<<<<< HEAD
 +	err = ovl_create_or_link(new, inode, NULL, NULL, ovl_dentry_upper(old));
++=======
+ 	err = ovl_create_or_link(new, inode, NULL, ovl_dentry_upper(old),
+ 				 ovl_type_origin(old));
++>>>>>>> ea3dad18dc5f (ovl: mark parent impure on ovl_link())
  	if (err)
  		iput(inode);
  
* Unmerged path fs/overlayfs/dir.c
