ALSA: x86: Clean up unused defines and inclusions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit 03c3437755881a9f6f1b5f8c05e62edf7898a87f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/03c34377.failed

Many defines and constants are left unused.  Clean them up.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 03c3437755881a9f6f1b5f8c05e62edf7898a87f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/x86/intel_hdmi_audio.c
#	sound/x86/intel_hdmi_audio.h
#	sound/x86/intel_hdmi_lpe_audio.h
diff --cc sound/x86/intel_hdmi_audio.c
index 063e2be94d05,82f48fbcd74b..000000000000
--- a/sound/x86/intel_hdmi_audio.c
+++ b/sound/x86/intel_hdmi_audio.c
@@@ -21,20 -21,22 +21,35 @@@
   * ALSA driver for Intel HDMI audio
   */
  
++<<<<<<< HEAD
 +#define pr_fmt(fmt)	"had: " fmt
 +
++=======
+ #include <linux/types.h>
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  #include <linux/platform_device.h>
  #include <linux/io.h>
  #include <linux/slab.h>
  #include <linux/module.h>
++<<<<<<< HEAD
 +#include <linux/acpi.h>
++=======
+ #include <linux/interrupt.h>
+ #include <linux/pm_runtime.h>
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  #include <asm/cacheflush.h>
- #include <sound/pcm.h>
  #include <sound/core.h>
+ #include <sound/asoundef.h>
+ #include <sound/pcm.h>
  #include <sound/pcm_params.h>
  #include <sound/initval.h>
  #include <sound/control.h>
++<<<<<<< HEAD
 +#include <sound/initval.h>
++=======
+ #include <drm/drm_edid.h>
+ #include <drm/intel_lpe_audio.h>
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  #include "intel_hdmi_audio.h"
  
  /*standard module options for ALSA. This module supports only one card*/
@@@ -917,9 -931,11 +932,15 @@@ static int snd_intelhad_prog_n(u32 aud_
  	return 0;
  }
  
++<<<<<<< HEAD
 +void snd_intelhad_handle_underrun(struct snd_intelhad *intelhaddata)
++=======
+ #define MAX_CNT			0xFF
+ 
+ static void snd_intelhad_handle_underrun(struct snd_intelhad *intelhaddata)
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  {
 -	u32 hdmi_status = 0, i = 0;
 +	u32 hdmi_status, i = 0;
  
  	/* Handle Underrun interrupt within Audio Unit */
  	had_write_register(intelhaddata, AUD_CONFIG, 0);
diff --cc sound/x86/intel_hdmi_audio.h
index 32a2fb766e47,dea51fcfc07f..000000000000
--- a/sound/x86/intel_hdmi_audio.h
+++ b/sound/x86/intel_hdmi_audio.h
@@@ -30,17 -30,8 +30,20 @@@
  #ifndef _INTEL_HDMI_AUDIO_H_
  #define _INTEL_HDMI_AUDIO_H_
  
++<<<<<<< HEAD
 +#include <linux/types.h>
 +#include <sound/initval.h>
 +#include <linux/version.h>
 +#include <linux/pm_runtime.h>
 +#include <sound/asoundef.h>
 +#include <sound/control.h>
 +#include <sound/pcm.h>
++=======
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  #include "intel_hdmi_lpe_audio.h"
  
 +struct platform_device;
 +
  #define PCM_INDEX		0
  #define MAX_PB_STREAMS		1
  #define MAX_CAP_STREAMS		0
@@@ -89,17 -76,7 +91,21 @@@ struct ring_buf_info 
  	u8	is_valid;
  };
  
++<<<<<<< HEAD
 +struct had_stream_pvt {
 +	enum had_stream_status		stream_status;
 +	int				stream_ops;
 +	ssize_t				dbg_cum_bytes;
 +};
 +
 +struct had_pvt_data {
 +	enum had_status_stream		stream_type;
 +};
 +
 +/**
++=======
+ /*
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
   * struct snd_intelhad - intelhad driver structure
   *
   * @card: ptr to hold card details
diff --cc sound/x86/intel_hdmi_lpe_audio.h
index a1c3aa0fbc57,5a5adb7f0cde..000000000000
--- a/sound/x86/intel_hdmi_lpe_audio.h
+++ b/sound/x86/intel_hdmi_lpe_audio.h
@@@ -23,19 -23,6 +23,22 @@@
  #ifndef __INTEL_HDMI_LPE_AUDIO_H
  #define __INTEL_HDMI_LPE_AUDIO_H
  
++<<<<<<< HEAD
 +#include <linux/types.h>
 +#include <sound/initval.h>
 +#include <linux/version.h>
 +#include <linux/pm_runtime.h>
 +#include <sound/asoundef.h>
 +#include <sound/control.h>
 +#include <sound/pcm.h>
 +
 +#define AUD_CONFIG_VALID_BIT			(1<<9)
 +#define AUD_CONFIG_DP_MODE			(1<<15)
 +#define AUD_CONFIG_BLOCK_BIT			(1<<7)
 +
 +#define HMDI_LPE_AUDIO_DRIVER_NAME		"intel-hdmi-lpe-audio"
++=======
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  #define HAD_MAX_DEVICES		1
  #define HAD_MIN_CHANNEL		2
  #define HAD_MAX_CHANNEL		8
@@@ -95,156 -82,6 +98,159 @@@
  /* Naud Value */
  #define DP_NAUD_VAL					32768
  
++<<<<<<< HEAD
 +/* _AUD_CONFIG register MASK */
 +#define AUD_CONFIG_MASK_UNDERRUN	0xC0000000
 +#define AUD_CONFIG_MASK_SRDBG		0x00000002
 +#define AUD_CONFIG_MASK_FUNCRST		0x00000001
 +
 +#define MAX_CNT			0xFF
 +#define HAD_SUSPEND_DELAY	1000
 +
 +#define OTM_HDMI_ELD_SIZE 128
 +
 +union otm_hdmi_eld_t {
 +	unsigned char eld_data[OTM_HDMI_ELD_SIZE];
 +	struct {
 +		/* Byte[0] = ELD Version Number */
 +		union {
 +			unsigned char   byte0;
 +			struct {
 +				unsigned char reserved:3; /* Reserf */
 +				unsigned char eld_ver:5; /* ELD Version Number */
 +				/* 00000b - reserved
 +				 * 00001b - first rev, obsoleted
 +				 * 00010b - version 2, supporting CEA version
 +				 *			861D or below
 +				 * 00011b:11111b - reserved
 +				 * for future
 +				 */
 +			};
 +		};
 +
 +		/* Byte[1] = Vendor Version Field */
 +		union {
 +			unsigned char vendor_version;
 +			struct {
 +				unsigned char reserved1:3;
 +				unsigned char veld_ver:5; /* Version number of the ELD
 +						     * extension. This value is
 +						     * provisioned and unique to
 +						     * each vendor.
 +						     */
 +			};
 +		};
 +
 +		/* Byte[2] = Baseline Length field */
 +		unsigned char baseline_eld_length; /* Length of the Baseline structure
 +					      *	divided by Four.
 +					      */
 +
 +		/* Byte [3] = Reserved for future use */
 +		unsigned char byte3;
 +
 +		/* Starting of the BaseLine EELD structure
 +		 * Byte[4] = Monitor Name Length
 +		 */
 +		union {
 +			unsigned char byte4;
 +			struct {
 +				unsigned char mnl:5;
 +				unsigned char cea_edid_rev_id:3;
 +			};
 +		};
 +
 +		/* Byte[5] = Capabilities */
 +		union {
 +			unsigned char capabilities;
 +			struct {
 +				unsigned char hdcp:1; /* HDCP support */
 +				unsigned char ai_support:1;   /* AI support */
 +				unsigned char connection_type:2; /* Connection type
 +							    * 00 - HDMI
 +							    * 01 - DP
 +							    * 10 -11  Reserved
 +							    * for future
 +							    * connection types
 +							    */
 +				unsigned char sadc:4; /* Indicates number of 3 bytes
 +						 * Short Audio Descriptors.
 +						 */
 +			};
 +		};
 +
 +		/* Byte[6] = Audio Synch Delay */
 +		unsigned char audio_synch_delay; /* Amount of time reported by the
 +					    * sink that the video trails audio
 +					    * in milliseconds.
 +					    */
 +
 +		/* Byte[7] = Speaker Allocation Block */
 +		union {
 +			unsigned char speaker_allocation_block;
 +			struct {
 +				unsigned char flr:1; /*Front Left and Right channels*/
 +				unsigned char lfe:1; /*Low Frequency Effect channel*/
 +				unsigned char fc:1;  /*Center transmission channel*/
 +				unsigned char rlr:1; /*Rear Left and Right channels*/
 +				unsigned char rc:1; /*Rear Center channel*/
 +				unsigned char flrc:1; /*Front left and Right of Center
 +						 *transmission channels
 +						 */
 +				unsigned char rlrc:1; /*Rear left and Right of Center
 +						 *transmission channels
 +						 */
 +				unsigned char reserved3:1; /* Reserved */
 +			};
 +		};
 +
 +		/* Byte[8 - 15] - 8 Byte port identification value */
 +		unsigned char port_id_value[8];
 +
 +		/* Byte[16 - 17] - 2 Byte Manufacturer ID */
 +		unsigned char manufacturer_id[2];
 +
 +		/* Byte[18 - 19] - 2 Byte Product ID */
 +		unsigned char product_id[2];
 +
 +		/* Byte [20-83] - 64 Bytes of BaseLine Data */
 +		unsigned char mn_sand_sads[64]; /* This will include
 +					   * - ASCII string of Monitor name
 +					   * - List of 3 byte SADs
 +					   * - Zero padding
 +					   */
 +
 +		/* Vendor ELD Block should continue here!
 +		 * No Vendor ELD block defined as of now.
 +		 */
 +	} __packed;
 +};
 +
 +/**
 + * enum had_status - Audio stream states
 + *
 + * @STREAM_INIT: Stream initialized
 + * @STREAM_RUNNING: Stream running
 + * @STREAM_PAUSED: Stream paused
 + * @STREAM_DROPPED: Stream dropped
 + */
 +enum had_stream_status {
 +	STREAM_INIT = 0,
 +	STREAM_RUNNING = 1,
 +	STREAM_PAUSED = 2,
 +	STREAM_DROPPED = 3
 +};
 +
 +/**
 + * enum had_status_stream - HAD stream states
 + */
 +enum had_status_stream {
 +	HAD_INIT = 0,
 +	HAD_RUNNING_STREAM,
 +};
 +
++=======
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  enum had_drv_status {
  	HAD_DRV_CONNECTED,
  	HAD_DRV_RUNNING,
@@@ -373,17 -187,15 +372,25 @@@ union aud_cfg 
  		u32 bogus_sample:1;
  		u32 dp_modei:1;
  		u32 rsvd:16;
 -	} regx;
 -	u32 regval;
 +	} cfg_regx_v2;
 +	u32 cfg_regval;
  };
  
++<<<<<<< HEAD
 +/**
 + * union aud_ch_status_0 - Audio Channel Status 0 Attributes
 + *
 + * @status_0_regx:individual register bits
 + * @status_0_regval:full register value
 + *
 + */
++=======
+ #define AUD_CONFIG_BLOCK_BIT			(1 << 7)
+ #define AUD_CONFIG_VALID_BIT			(1 << 9)
+ #define AUD_CONFIG_DP_MODE			(1 << 15)
+ 
+ /* Audio Channel Status 0 Attributes */
++>>>>>>> 03c343775588 (ALSA: x86: Clean up unused defines and inclusions)
  union aud_ch_status_0 {
  	struct {
  		u32 ch_status:1;
@@@ -596,61 -342,17 +603,42 @@@ union aud_info_frame3 
  		u32 lsv:4;
  		u32 dm_inh:1;
  		u32 rsvd1:16;
 -	} regx;
 -	u32 regval;
 +	} fr3_regx;
 +	u32 fr3_val;
 +};
 +
 +enum hdmi_connector_status {
 +	hdmi_connector_status_connected = 1,
 +	hdmi_connector_status_disconnected = 2,
 +	hdmi_connector_status_unknown = 3,
  };
  
- #define HDMI_AUDIO_UNDERRUN     (1UL<<31)
- #define HDMI_AUDIO_BUFFER_DONE  (1UL<<29)
+ /* AUD_HDMI_STATUS bits */
+ #define HDMI_AUDIO_UNDERRUN		(1U << 31)
+ #define HDMI_AUDIO_BUFFER_DONE		(1U << 29)
  
- 
- #define PORT_ENABLE			(1 << 31)
- #define SDVO_AUDIO_ENABLE	(1 << 6)
- 
- enum had_caps_list {
- 	HAD_GET_ELD = 1,
- 	HAD_GET_DISPLAY_RATE,
- 	HAD_GET_DP_OUTPUT,
- 	HAD_GET_LINK_RATE,
- 	HAD_SET_ENABLE_AUDIO,
- 	HAD_SET_DISABLE_AUDIO,
- 	HAD_SET_ENABLE_AUDIO_INT,
- 	HAD_SET_DISABLE_AUDIO_INT,
- };
- 
- enum had_event_type {
- 	HAD_EVENT_HOT_PLUG = 1,
- 	HAD_EVENT_HOT_UNPLUG,
- 	HAD_EVENT_MODE_CHANGING,
- 	HAD_EVENT_AUDIO_BUFFER_DONE,
- 	HAD_EVENT_AUDIO_BUFFER_UNDERRUN,
- 	HAD_EVENT_QUERY_IS_AUDIO_BUSY,
- 	HAD_EVENT_QUERY_IS_AUDIO_SUSPENDED,
- };
+ /* AUD_HDMI_STATUS register mask */
+ #define AUD_CONFIG_MASK_UNDERRUN	0xC0000000
+ #define AUD_CONFIG_MASK_SRDBG		0x00000002
+ #define AUD_CONFIG_MASK_FUNCRST		0x00000001
  
 +/*
 + * HDMI Display Controller Audio Interface
 + *
 + */
 +struct hdmi_audio_event {
 +	int type;
 +};
 +
 +void mid_hdmi_audio_signal_event(enum had_event_type event);
 +
 +int mid_hdmi_audio_read(u32 reg, u32 *val);
 +int mid_hdmi_audio_write(u32 reg, u32 val);
 +int mid_hdmi_audio_rmw(u32 reg, u32 val, u32 mask);
 +
 +int mid_hdmi_audio_get_caps(enum had_caps_list get_element,
 +			    void *capabilities);
 +int mid_hdmi_audio_set_caps(enum had_caps_list set_element,
 +			    void *capabilties);
 +
  #endif
* Unmerged path sound/x86/intel_hdmi_audio.c
* Unmerged path sound/x86/intel_hdmi_audio.h
* Unmerged path sound/x86/intel_hdmi_lpe_audio.h
