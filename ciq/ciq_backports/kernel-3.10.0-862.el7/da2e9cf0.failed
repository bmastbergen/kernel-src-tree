qede: Fix compilation without QED_RDMA

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Chad Dupuis <chad.dupuis@cavium.com>
commit da2e9cf03b8fccbb69dd1e215bb1e554ce8e8cbe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/da2e9cf0.failed

When CONFIG_QED_RDMA isn't defined, we'd hit the following:

 /include/linux/qed/qede_rdma.h:84:19:
 warning: ‘qede_rdma_dev_add’ used but never defined [enabled by default]
 static inline int qede_rdma_dev_add(struct qede_dev *dev);

Fixes: bbfcd1e8e167 ("qed*: Set rdma generic functions prefix")
	Signed-off-by: Chad Dupuis <chad.dupuis@cavium.com>
	Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit da2e9cf03b8fccbb69dd1e215bb1e554ce8e8cbe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/qed/qede_roce.h
diff --cc include/linux/qed/qede_roce.h
index 3b8dd551a98c,9904617a9730..000000000000
--- a/include/linux/qed/qede_roce.h
+++ b/include/linux/qed/qede_roce.h
@@@ -57,25 -62,26 +57,29 @@@ struct qedr_driver 
  				struct net_device *);
  
  	void (*remove)(struct qedr_dev *);
 -	void (*notify)(struct qedr_dev *, enum qede_rdma_event);
 +	void (*notify)(struct qedr_dev *, enum qede_roce_event);
  };
  
 -/* APIs for RDMA driver to register callback handlers,
 +/* APIs for RoCE driver to register callback handlers,
   * which will be invoked when device is added, removed, ifup, ifdown
   */
 -int qede_rdma_register_driver(struct qedr_driver *drv);
 -void qede_rdma_unregister_driver(struct qedr_driver *drv);
 +int qede_roce_register_driver(struct qedr_driver *drv);
 +void qede_roce_unregister_driver(struct qedr_driver *drv);
  
 -bool qede_rdma_supported(struct qede_dev *dev);
 +bool qede_roce_supported(struct qede_dev *dev);
  
  #if IS_ENABLED(CONFIG_QED_RDMA)
 -int qede_rdma_dev_add(struct qede_dev *dev);
 -void qede_rdma_dev_event_open(struct qede_dev *dev);
 -void qede_rdma_dev_event_close(struct qede_dev *dev);
 -void qede_rdma_dev_remove(struct qede_dev *dev);
 -void qede_rdma_event_changeaddr(struct qede_dev *edr);
 -
 +int qede_roce_dev_add(struct qede_dev *dev);
 +void qede_roce_dev_event_open(struct qede_dev *dev);
 +void qede_roce_dev_event_close(struct qede_dev *dev);
 +void qede_roce_dev_remove(struct qede_dev *dev);
 +void qede_roce_event_changeaddr(struct qede_dev *qedr);
  #else
++<<<<<<< HEAD:include/linux/qed/qede_roce.h
 +static inline int qede_roce_dev_add(struct qede_dev *dev)
++=======
+ static inline int qede_rdma_dev_add(struct qede_dev *dev)
++>>>>>>> da2e9cf03b8f (qede: Fix compilation without QED_RDMA):include/linux/qed/qede_rdma.h
  {
  	return 0;
  }
* Unmerged path include/linux/qed/qede_roce.h
