ACPI / bus: Make acpi_get_first_physical_node() public

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Lukas Wunner <lukas@wunner.de>
commit daae45caf5a042a0c7d147749ed1e4c970fc86d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/daae45ca.failed

Following the fwnode of a device is currently a one-way road: We provide
ACPI_COMPANION() to obtain the fwnode but there's no (public) method to
do the reverse. Granted, there may be multiple physical_nodes, but often
the first one in the list is sufficient.

A handy function to obtain it was introduced with commit 3b95bd160547
("ACPI: introduce a function to find the first physical device"), but
currently it's only available internally.

We're about to add an EFI Device Path parser which needs this function.
Consider the following device path: ACPI(PNP0A03,0)/PCI(28,2)/PCI(0,0)
The PCI root is encoded as an ACPI device in the path, so the parser
has to find the corresponding ACPI device, then find its physical node,
find the PCI bridge in slot 1c (decimal 28), function 2 below it and
finally find the PCI device in slot 0, function 0.

To this end, make acpi_get_first_physical_node() public.

	Signed-off-by: Lukas Wunner <lukas@wunner.de>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit daae45caf5a042a0c7d147749ed1e4c970fc86d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/acpi.h
diff --cc include/linux/acpi.h
index 0ab4b0e3a549,536c12ed2669..000000000000
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@@ -496,7 -626,23 +498,25 @@@ static inline bool has_acpi_companion(s
  	return false;
  }
  
++<<<<<<< HEAD
++=======
+ static inline void acpi_preset_companion(struct device *dev,
+ 					 struct acpi_device *parent, u64 addr)
+ {
+ }
+ 
+ static inline const char *acpi_dev_name(struct acpi_device *adev)
+ {
+ 	return NULL;
+ }
+ 
+ static inline struct device *acpi_get_first_physical_node(struct acpi_device *adev)
+ {
+ 	return NULL;
+ }
+ 
++>>>>>>> daae45caf5a0 (ACPI / bus: Make acpi_get_first_physical_node() public)
  static inline void acpi_early_init(void) { }
 -static inline void acpi_subsystem_init(void) { }
  
  static inline int early_acpi_boot_init(void)
  {
* Unmerged path include/linux/acpi.h
