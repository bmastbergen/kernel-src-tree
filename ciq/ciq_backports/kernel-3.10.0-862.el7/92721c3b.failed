scsi: lpfc: Fix Lun Priority level shown as NA

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] lpfc: Fix Lun Priority level shown as NA (Dick Kennedy) [1385844 1461977 1387768]
Rebuild_FUZZ: 93.02%
commit-author James Smart <jsmart2021@gmail.com>
commit 92721c3b97126a712af221635407251e42e58b60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/92721c3b.failed

Lun Priority level shown as NA

Remote port is not getting registered for nameserver and fdmi.  Due to
which dfc SendCTPassThru cmd is failing.

Made changes to register the remote port for both.

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 92721c3b97126a712af221635407251e42e58b60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_hbadisc.c
diff --cc drivers/scsi/lpfc/lpfc_hbadisc.c
index 79d58e5464d6,055fedd761ea..000000000000
--- a/drivers/scsi/lpfc/lpfc_hbadisc.c
+++ b/drivers/scsi/lpfc/lpfc_hbadisc.c
@@@ -4049,23 -4159,58 +4049,53 @@@ lpfc_nlp_state_cleanup(struct lpfc_vpor
  	if (new_state == NLP_STE_NPR_NODE)
  		ndlp->nlp_flag &= ~NLP_RCV_PLOGI;
  
 -	/* FCP and NVME Transport interface */
 -	if ((old_state == NLP_STE_MAPPED_NODE ||
 -	     old_state == NLP_STE_UNMAPPED_NODE)) {
 -		if (ndlp->rport) {
 -			vport->phba->nport_event_cnt++;
 -			lpfc_unregister_remote_port(ndlp);
 -		}
 -
 -		/* Notify the NVME transport of this rport's loss on the
 -		 * Initiator.  For NVME Target, should upcall transport
 -		 * in the else clause when API available.
 -		 */
 -		if (ndlp->nlp_fc4_type & NLP_FC4_NVME) {
 -			vport->phba->nport_event_cnt++;
 -			if (vport->phba->nvmet_support == 0)
 -				lpfc_nvme_unregister_port(vport, ndlp);
 -		}
 +	/* Transport interface */
 +	if (ndlp->rport && (old_state == NLP_STE_MAPPED_NODE ||
 +			    old_state == NLP_STE_UNMAPPED_NODE)) {
 +		vport->phba->nport_event_cnt++;
 +		lpfc_unregister_remote_port(ndlp);
  	}
  
 -	/* FCP and NVME Transport interfaces */
 -
  	if (new_state ==  NLP_STE_MAPPED_NODE ||
  	    new_state == NLP_STE_UNMAPPED_NODE) {
++<<<<<<< HEAD
 +		vport->phba->nport_event_cnt++;
 +		/*
 +		 * Tell the fc transport about the port, if we haven't
 +		 * already. If we have, and it's a scsi entity, be
 +		 * sure to unblock any attached scsi devices
 +		 */
 +		lpfc_register_remote_port(vport, ndlp);
++=======
+ 		if (ndlp->nlp_fc4_type & NLP_FC4_FCP ||
+ 		    ndlp->nlp_DID == Fabric_DID ||
+ 		    ndlp->nlp_DID == NameServer_DID ||
+ 		    ndlp->nlp_DID == FDMI_DID) {
+ 			vport->phba->nport_event_cnt++;
+ 			/*
+ 			 * Tell the fc transport about the port, if we haven't
+ 			 * already. If we have, and it's a scsi entity, be
+ 			 */
+ 			lpfc_register_remote_port(vport, ndlp);
+ 		}
+ 		/* Notify the NVME transport of this new rport. */
+ 		if (ndlp->nlp_fc4_type & NLP_FC4_NVME) {
+ 			if (vport->phba->nvmet_support == 0) {
+ 				/* Register this rport with the transport.
+ 				 * Initiators take the NDLP ref count in
+ 				 * the register.
+ 				 */
+ 				vport->phba->nport_event_cnt++;
+ 				lpfc_nvme_register_port(vport, ndlp);
+ 			} else {
+ 				/* Just take an NDLP ref count since the
+ 				 * target does not register rports.
+ 				 */
+ 				lpfc_nlp_get(ndlp);
+ 			}
+ 		}
++>>>>>>> 92721c3b9712 (scsi: lpfc: Fix Lun Priority level shown as NA)
  	}
 -
  	if ((new_state ==  NLP_STE_MAPPED_NODE) &&
  		(vport->stat_data_enabled)) {
  		/*
* Unmerged path drivers/scsi/lpfc/lpfc_hbadisc.c
