KVM: nVMX: fix AD condition when handling EPT violation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit 332518706195007f9fbafa69652aa5b3cf72df24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/33251870.failed

I have introduced this bug when applying and simplifying Paolo's patch
as we agreed on the list.  The original was "x &= ~y; if (z) x |= y;".

Here is the story of a bad workflow:

  A maintainer was already testing with the intended change, but it was
  applied only to a testing repo on a different machine.  When the time
  to push tested patches to kvm/next came, he realized that this change
  was missing and quickly added it to the maintenance repo, didn't test
  again (because the change is trivial, right), and pushed the world to
  fire.

Fixes: ae1e2d1082ae ("kvm: nVMX: support EPT accessed/dirty bits")
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit 332518706195007f9fbafa69652aa5b3cf72df24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index 9e322d5ffbcf,837f6dd1ae9c..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -5941,6 -6214,17 +5941,20 @@@ static int handle_ept_violation(struct 
  
  	exit_qualification = vmcs_readl(EXIT_QUALIFICATION);
  
++<<<<<<< HEAD
++=======
+ 	if (is_guest_mode(vcpu)
+ 	    && !(exit_qualification & EPT_VIOLATION_GVA_TRANSLATED)) {
+ 		/*
+ 		 * Fix up exit_qualification according to whether guest
+ 		 * page table accesses are reads or writes.
+ 		 */
+ 		u64 eptp = nested_ept_get_cr3(vcpu);
+ 		if (!(eptp & VMX_EPT_AD_ENABLE_BIT))
+ 			exit_qualification &= ~EPT_VIOLATION_ACC_WRITE;
+ 	}
+ 
++>>>>>>> 332518706195 (KVM: nVMX: fix AD condition when handling EPT violation)
  	/*
  	 * EPT violation happened while executing iret from NMI,
  	 * "blocked by NMI" bit has to be set before next VM entry.
* Unmerged path arch/x86/kvm/vmx.c
