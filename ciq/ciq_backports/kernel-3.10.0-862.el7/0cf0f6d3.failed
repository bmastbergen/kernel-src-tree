mlx5e: push cls_flower and mqprio setup_tc processing into separate functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jiri Pirko <jiri@mellanox.com>
commit 0cf0f6d3d39672c044393aef71ee782430ca8b13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0cf0f6d3.failed

Let mlx5e_setup_tc (former mlx5e_ndo_setup_tc) be a splitter for specific
setup_tc types and push out cls_flower and mqprio specific codes into
separate functions. Also change the return values so they are the same
as in the rest of the drivers.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0cf0f6d3d39672c044393aef71ee782430ca8b13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index edb21d8194bc,adf35da74a85..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2584,12 -2998,16 +2584,20 @@@ int mlx5e_modify_rqs_vsd(struct mlx5e_p
  	return 0;
  }
  
- static int mlx5e_setup_tc(struct net_device *netdev, u8 tc)
+ static int mlx5e_setup_tc_mqprio(struct net_device *netdev,
+ 				 struct tc_mqprio_qopt *mqprio)
  {
  	struct mlx5e_priv *priv = netdev_priv(netdev);
++<<<<<<< HEAD
 +	bool was_opened;
++=======
+ 	struct mlx5e_channels new_channels = {};
+ 	u8 tc = mqprio->num_tc;
++>>>>>>> 0cf0f6d3d396 (mlx5e: push cls_flower and mqprio setup_tc processing into separate functions)
  	int err = 0;
  
+ 	mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
+ 
  	if (tc && tc != MLX5E_MAX_NUM_TC)
  		return -EINVAL;
  
@@@ -2609,36 -3031,44 +2617,73 @@@
  	return err;
  }
  
++<<<<<<< HEAD
 +static int mlx5e_ndo_setup_tc(struct net_device *dev, u32 handle,
 +			      __be16 proto, struct tc_to_netdev *tc)
 +{
 +	struct mlx5e_priv *priv = netdev_priv(dev);
 +
 +	if (TC_H_MAJ(handle) != TC_H_MAJ(TC_H_INGRESS))
 +		goto mqprio;
 +
 +	switch (tc->type) {
 +	case TC_SETUP_CLSFLOWER:
 +		switch (tc->cls_flower->command) {
 +		case TC_CLSFLOWER_REPLACE:
 +			return mlx5e_configure_flower(priv, proto, tc->cls_flower);
 +		case TC_CLSFLOWER_DESTROY:
 +			return mlx5e_delete_flower(priv, tc->cls_flower);
 +		case TC_CLSFLOWER_STATS:
 +			return mlx5e_stats_flower(priv, tc->cls_flower);
 +		}
++=======
+ static int mlx5e_setup_tc_cls_flower(struct net_device *dev,
+ 				     u32 handle, u32 chain_index, __be16 proto,
+ 				     struct tc_cls_flower_offload *cls_flower)
+ {
+ 	struct mlx5e_priv *priv = netdev_priv(dev);
+ 
+ 	if (TC_H_MAJ(handle) != TC_H_MAJ(TC_H_INGRESS) ||
+ 	    chain_index)
+ 		return -EOPNOTSUPP;
+ 
+ 	switch (cls_flower->command) {
+ 	case TC_CLSFLOWER_REPLACE:
+ 		return mlx5e_configure_flower(priv, proto, cls_flower);
+ 	case TC_CLSFLOWER_DESTROY:
+ 		return mlx5e_delete_flower(priv, cls_flower);
+ 	case TC_CLSFLOWER_STATS:
+ 		return mlx5e_stats_flower(priv, cls_flower);
++>>>>>>> 0cf0f6d3d396 (mlx5e: push cls_flower and mqprio setup_tc processing into separate functions)
  	default:
  		return -EOPNOTSUPP;
  	}
+ }
  
++<<<<<<< HEAD
 +mqprio:
 +	if (tc->type != TC_SETUP_MQPRIO)
 +		return -EINVAL;
 +
 +	return mlx5e_setup_tc(dev, tc->tc);
++=======
+ static int mlx5e_setup_tc(struct net_device *dev, enum tc_setup_type type,
+ 			  u32 handle, u32 chain_index, __be16 proto,
+ 			  struct tc_to_netdev *tc)
+ {
+ 	switch (type) {
+ 	case TC_SETUP_CLSFLOWER:
+ 		return mlx5e_setup_tc_cls_flower(dev, handle, chain_index,
+ 						 proto, tc->cls_flower);
+ 	case TC_SETUP_MQPRIO:
+ 		return mlx5e_setup_tc_mqprio(dev, tc->mqprio);
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
++>>>>>>> 0cf0f6d3d396 (mlx5e: push cls_flower and mqprio setup_tc processing into separate functions)
  }
  
 -static void
 +static struct rtnl_link_stats64 *
  mlx5e_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats)
  {
  	struct mlx5e_priv *priv = netdev_priv(dev);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
