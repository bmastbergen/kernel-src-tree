ibmvnic: Revert to previous mtu when unsupported value requested

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author John Allen <jallen@linux.vnet.ibm.com>
commit e791380340685698dbdd38c7e3f3fcbf70a3c832
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e7913803.failed

If we request an unsupported mtu value, the vnic server will suggest a
different value. Currently we take the suggested value without question
and login with that value. However, the behavior doesn't seem completely
sane as attempting to change the mtu to some specific value will change
the mtu to some completely different value most of the time. This patch
fixes the issue by logging in with the previously used mtu value and
printing an error message saying that the given mtu is unsupported.

	Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>
	Reviewed-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e791380340685698dbdd38c7e3f3fcbf70a3c832)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 8c661442348b,cc36b254917c..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -2624,9 -3623,18 +2624,24 @@@ static void handle_request_cap_rsp(unio
  			 *req_value,
  			 (long int)be64_to_cpu(crq->request_capability_rsp.
  					       number), name);
++<<<<<<< HEAD
 +		release_sub_crqs_no_irqs(adapter);
 +		*req_value = be64_to_cpu(crq->request_capability_rsp.number);
 +		init_sub_crqs(adapter, 1);
++=======
+ 
+ 		if (be16_to_cpu(crq->request_capability_rsp.capability) ==
+ 		    REQ_MTU) {
+ 			pr_err("mtu of %llu is not supported. Reverting.\n",
+ 			       *req_value);
+ 			*req_value = adapter->fallback.mtu;
+ 		} else {
+ 			*req_value =
+ 				be64_to_cpu(crq->request_capability_rsp.number);
+ 		}
+ 
+ 		ibmvnic_send_req_caps(adapter, 1);
++>>>>>>> e79138034068 (ibmvnic: Revert to previous mtu when unsupported value requested)
  		return;
  	default:
  		dev_err(dev, "Error %d in request cap rsp\n",
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
