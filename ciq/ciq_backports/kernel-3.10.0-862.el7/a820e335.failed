perf pmu: Special case uncore_ prefix

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Andi Kleen <ak@linux.intel.com>
commit a820e33547aee9fd0460106c1fc577a125c23975
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a820e335.failed

Special case uncore_ prefix in PMU match, to allow for shorter event
uncore specifications.

Before:

  perf stat -a -e uncore_cbox/event=0x35,umask=0x1,filter_opc=0x19C/ sleep 1

After

  perf stat -a -e cbox/event=0x35,umask=0x1,filter_opc=0x19C/ sleep 1

Committer tests:

   # perf list uncore

  List of pre-defined events (to be used in -e):

    uncore_cbox_0/clockticks/                       [Kernel PMU event]
    uncore_cbox_1/clockticks/                       [Kernel PMU event]
    uncore_imc/data_reads/                          [Kernel PMU event]
    uncore_imc/data_writes/                         [Kernel PMU event]

  # perf stat -a -e cbox_0/clockticks/ sleep 1

   Performance counter stats for 'system wide':

  281,474,976,653,084      cbox_0/clockticks/

       1.000870129 seconds time elapsed

  #

	Signed-off-by: Andi Kleen <ak@linux.intel.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
Link: http://lkml.kernel.org/r/20170320201711.14142-7-andi@firstfloor.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit a820e33547aee9fd0460106c1fc577a125c23975)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/parse-events.y
diff --cc tools/perf/util/parse-events.y
index 3bcbf7cd7a4a,04fd8c9af9f9..000000000000
--- a/tools/perf/util/parse-events.y
+++ b/tools/perf/util/parse-events.y
@@@ -216,11 -226,35 +216,35 @@@ event_pmu
  PE_NAME opt_event_config
  {
  	struct parse_events_evlist *data = _data;
 -	struct list_head *list, *orig_terms, *terms;
 -
 -	if (parse_events_copy_term_list($2, &orig_terms))
 -		YYABORT;
 +	struct list_head *list;
  
  	ALLOC_LIST(list);
++<<<<<<< HEAD
 +	ABORT_ON(parse_events_add_pmu(data, list, $1, $2));
++=======
+ 	if (parse_events_add_pmu(data, list, $1, $2)) {
+ 		struct perf_pmu *pmu = NULL;
+ 		int ok = 0;
+ 
+ 		while ((pmu = perf_pmu__scan(pmu)) != NULL) {
+ 			char *name = pmu->name;
+ 
+ 			if (!strncmp(name, "uncore_", 7) &&
+ 			    strncmp($1, "uncore_", 7))
+ 				name += 7;
+ 			if (!strncmp($1, name, strlen($1))) {
+ 				if (parse_events_copy_term_list(orig_terms, &terms))
+ 					YYABORT;
+ 				if (!parse_events_add_pmu(data, list, pmu->name, terms))
+ 					ok++;
+ 				parse_events_terms__delete(terms);
+ 			}
+ 		}
+ 		if (!ok)
+ 			YYABORT;
+ 	}
++>>>>>>> a820e33547ae (perf pmu: Special case uncore_ prefix)
  	parse_events_terms__delete($2);
 -	parse_events_terms__delete(orig_terms);
  	$$ = list;
  }
  |
* Unmerged path tools/perf/util/parse-events.y
