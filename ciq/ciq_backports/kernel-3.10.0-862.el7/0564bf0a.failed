net/sched/sch_htb: clamp xstats tokens to fit into 32-bit int

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: sch_htb: clamp xstats tokens to fit into 32-bit int (Ivan Vecera) [1445420]
Rebuild_FUZZ: 94.12%
commit-author Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
commit 0564bf0afae443deeb16f36e2c39fefff89d05f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0564bf0a.failed

In kernel HTB keeps tokens in signed 64-bit in nanoseconds. In netlink
protocol these values are converted into pshed ticks (64ns for now) and
truncated to 32-bit. In struct tc_htb_xstats fields "tokens" and "ctokens"
are declared as unsigned 32-bit but they could be negative thus tool 'tc'
prints them as signed. Big values loose higher bits and/or become negative.

This patch clamps tokens in xstat into range from INT_MIN to INT_MAX.
In this way it's easier to understand what's going on here.

	Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0564bf0afae443deeb16f36e2c39fefff89d05f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_htb.c
diff --cc net/sched/sch_htb.c
index 1e10f13f8290,052f84d6cc23..000000000000
--- a/net/sched/sch_htb.c
+++ b/net/sched/sch_htb.c
@@@ -1136,22 -1136,18 +1136,29 @@@ static in
  htb_dump_class_stats(struct Qdisc *sch, unsigned long arg, struct gnet_dump *d)
  {
  	struct htb_class *cl = (struct htb_class *)arg;
 +	struct gnet_stats_queue qs = {
 +		.drops = cl->drops,
 +	};
  	__u32 qlen = 0;
  
 -	if (!cl->level && cl->un.leaf.q)
 +	if (!cl->level && cl->un.leaf.q) {
  		qlen = cl->un.leaf.q->q.qlen;
++<<<<<<< HEAD
 +		qs.backlog = cl->un.leaf.q->qstats.backlog;
 +	}
 +	cl->xstats.tokens = PSCHED_NS2TICKS(cl->tokens);
 +	cl->xstats.ctokens = PSCHED_NS2TICKS(cl->ctokens);
++=======
+ 	cl->xstats.tokens = clamp_t(s64, PSCHED_NS2TICKS(cl->tokens),
+ 				    INT_MIN, INT_MAX);
+ 	cl->xstats.ctokens = clamp_t(s64, PSCHED_NS2TICKS(cl->ctokens),
+ 				     INT_MIN, INT_MAX);
++>>>>>>> 0564bf0afae4 (net/sched/sch_htb: clamp xstats tokens to fit into 32-bit int)
  
 -	if (gnet_stats_copy_basic(d, NULL, &cl->bstats) < 0 ||
 +	if (gnet_stats_copy_basic(qdisc_root_sleeping_running(sch),
 +				  d, NULL, &cl->bstats) < 0 ||
  	    gnet_stats_copy_rate_est(d, NULL, &cl->rate_est) < 0 ||
 -	    gnet_stats_copy_queue(d, NULL, &cl->qstats, qlen) < 0)
 +	    gnet_stats_copy_queue(d, NULL, &qs, qlen) < 0)
  		return -1;
  
  	return gnet_stats_copy_app(d, &cl->xstats, sizeof(cl->xstats));
* Unmerged path net/sched/sch_htb.c
