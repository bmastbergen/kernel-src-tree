scsi_dh_alua: uninitialized variable in alua_rtpg()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit a4bd85203190990ad808abbd4a5dc848a950002c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a4bd8520.failed

It's possible to use "err" without initializing it.  If it happens to be
a 2 which is SCSI_DH_RETRY then that could cause a bug.  Bart Van Assche
pointed out that we should probably re-initialize it for every iteration
through the retry loop.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Hannes Reinicke <hare@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
	Signed-off-by: James Bottomley <jejb@linux.vnet.ibm.com>
(cherry picked from commit a4bd85203190990ad808abbd4a5dc848a950002c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/device_handler/scsi_dh_alua.c
diff --cc drivers/scsi/device_handler/scsi_dh_alua.c
index 2f054f24112a,a655cf29c16f..000000000000
--- a/drivers/scsi/device_handler/scsi_dh_alua.c
+++ b/drivers/scsi/device_handler/scsi_dh_alua.c
@@@ -336,23 -507,33 +336,28 @@@ static int alua_check_sense(struct scsi
   * Returns SCSI_DH_DEV_OFFLINED if the path is
   * found to be unusable.
   */
 -static int alua_rtpg(struct scsi_device *sdev, struct alua_port_group *pg)
 +static int alua_rtpg(struct scsi_device *sdev, struct alua_dh_data *h, int wait_for_transition)
  {
  	struct scsi_sense_hdr sense_hdr;
 -	struct alua_port_group *tmp_pg;
 -	int len, k, off, valid_states = 0, bufflen = ALUA_RTPG_SIZE;
 -	unsigned char *desc, *buff;
 +	int len, k, off, valid_states = 0;
 +	unsigned char *ucp;
  	unsigned err, retval;
 +	unsigned long expiry, interval = 0;
  	unsigned int tpg_desc_tbl_off;
  	unsigned char orig_transition_tmo;
 -	unsigned long flags;
  
 -	if (!pg->expiry) {
 -		unsigned long transition_tmo = ALUA_FAILOVER_TIMEOUT * HZ;
 -
 -		if (pg->transition_tmo)
 -			transition_tmo = pg->transition_tmo * HZ;
 -
 -		pg->expiry = round_jiffies_up(jiffies + transition_tmo);
 -	}
 -
 -	buff = kzalloc(bufflen, GFP_KERNEL);
 -	if (!buff)
 -		return SCSI_DH_DEV_TEMP_BUSY;
 +	if (!h->transition_tmo)
 +		expiry = round_jiffies_up(jiffies + ALUA_FAILOVER_TIMEOUT * HZ);
 +	else
 +		expiry = round_jiffies_up(jiffies + h->transition_tmo * HZ);
  
   retry:
++<<<<<<< HEAD
 +	retval = submit_rtpg(sdev, h->buff, h->bufflen, &sense_hdr, h->flags);
++=======
+ 	err = 0;
+ 	retval = submit_rtpg(sdev, buff, bufflen, &sense_hdr, pg->flags);
++>>>>>>> a4bd85203190 (scsi_dh_alua: uninitialized variable in alua_rtpg())
  
  	if (retval) {
  		if (!scsi_sense_valid(&sense_hdr)) {
* Unmerged path drivers/scsi/device_handler/scsi_dh_alua.c
