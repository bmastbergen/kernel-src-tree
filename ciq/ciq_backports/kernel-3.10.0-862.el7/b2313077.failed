net_sched: make tcf_hash_check() boolean

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author WANG Cong <xiyou.wangcong@gmail.com>
commit b2313077ed0db35ee186905d8076a737248edd24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b2313077.failed

	Cc: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b2313077ed0db35ee186905d8076a737248edd24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/act_api.h
#	net/sched/act_api.c
#	net/sched/act_ife.c
#	net/sched/act_ipt.c
#	net/sched/act_mirred.c
#	net/sched/act_simple.c
#	net/sched/act_skbedit.c
#	net/sched/act_vlan.c
diff --cc include/net/act_api.h
index 7eba1aba336b,fb82b5b5d9e7..000000000000
--- a/include/net/act_api.h
+++ b/include/net/act_api.h
@@@ -114,19 -115,52 +114,61 @@@ struct tc_action_ops 
  	int     (*init)(struct net *net, struct nlattr *nla,
  			struct nlattr *est, struct tc_action *act, int ovr,
  			int bind);
 -	int     (*walk)(struct net *, struct sk_buff *,
 -			struct netlink_callback *, int, struct tc_action *);
 +	int     (*walk)(struct sk_buff *, struct netlink_callback *, int, struct tc_action *);
  	void	(*stats_update)(struct tc_action *, u64, u32, u64);
 +	int	(*get_dev)(const struct tc_action *a, struct net *net,
 +			   struct net_device **mirred_dev);
  };
  
++<<<<<<< HEAD
 +int tcf_hash_search(struct tc_action *a, u32 index);
 +u32 tcf_hash_new_index(struct tcf_hashinfo *hinfo);
 +int tcf_hash_check(u32 index, struct tc_action *a, int bind);
 +int tcf_hash_create(u32 index, struct nlattr *est, struct tc_action *a,
 +		    int size, int bind, bool cpustats);
++=======
+ struct tc_action_net {
+ 	struct tcf_hashinfo *hinfo;
+ 	const struct tc_action_ops *ops;
+ };
+ 
+ static inline
+ int tc_action_net_init(struct tc_action_net *tn,
+ 		       const struct tc_action_ops *ops, unsigned int mask)
+ {
+ 	int err = 0;
+ 
+ 	tn->hinfo = kmalloc(sizeof(*tn->hinfo), GFP_KERNEL);
+ 	if (!tn->hinfo)
+ 		return -ENOMEM;
+ 	tn->ops = ops;
+ 	err = tcf_hashinfo_init(tn->hinfo, mask);
+ 	if (err)
+ 		kfree(tn->hinfo);
+ 	return err;
+ }
+ 
+ void tcf_hashinfo_destroy(const struct tc_action_ops *ops,
+ 			  struct tcf_hashinfo *hinfo);
+ 
+ static inline void tc_action_net_exit(struct tc_action_net *tn)
+ {
+ 	tcf_hashinfo_destroy(tn->ops, tn->hinfo);
+ 	kfree(tn->hinfo);
+ }
+ 
+ int tcf_generic_walker(struct tc_action_net *tn, struct sk_buff *skb,
+ 		       struct netlink_callback *cb, int type,
+ 		       struct tc_action *a);
+ int tcf_hash_search(struct tc_action_net *tn, struct tc_action *a, u32 index);
+ u32 tcf_hash_new_index(struct tc_action_net *tn);
+ bool tcf_hash_check(struct tc_action_net *tn, u32 index, struct tc_action *a,
+ 		    int bind);
+ int tcf_hash_create(struct tc_action_net *tn, u32 index, struct nlattr *est,
+ 		    struct tc_action *a, int size, int bind, bool cpustats);
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  void tcf_hash_cleanup(struct tc_action *a, struct nlattr *est);
 -void tcf_hash_insert(struct tc_action_net *tn, struct tc_action *a);
 +void tcf_hash_insert(struct tc_action *a);
  
  int __tcf_hash_release(struct tc_action *a, bool bind, bool strict);
  
diff --cc net/sched/act_api.c
index 4061344fb37b,f8c61d2a7963..000000000000
--- a/net/sched/act_api.c
+++ b/net/sched/act_api.c
@@@ -225,18 -224,20 +225,28 @@@ int tcf_hash_search(struct tc_action *a
  }
  EXPORT_SYMBOL(tcf_hash_search);
  
++<<<<<<< HEAD
 +int tcf_hash_check(u32 index, struct tc_action *a, int bind)
++=======
+ bool tcf_hash_check(struct tc_action_net *tn, u32 index, struct tc_action *a,
+ 		    int bind)
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  {
 -	struct tcf_hashinfo *hinfo = tn->hinfo;
 +	struct tcf_hashinfo *hinfo = a->ops->hinfo;
  	struct tcf_common *p = NULL;
  	if (index && (p = tcf_hash_lookup(index, hinfo)) != NULL) {
  		if (bind)
  			p->tcfc_bindcnt++;
  		p->tcfc_refcnt++;
  		a->priv = p;
++<<<<<<< HEAD
 +		return 1;
++=======
+ 		a->hinfo = hinfo;
+ 		return true;
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  	}
- 	return 0;
+ 	return false;
  }
  EXPORT_SYMBOL(tcf_hash_check);
  
diff --cc net/sched/act_ipt.c
index 014563af32c0,6148e323ed93..000000000000
--- a/net/sched/act_ipt.c
+++ b/net/sched/act_ipt.c
@@@ -92,6 -97,7 +92,10 @@@ static int tcf_ipt_init(struct net *net
  	struct tcf_ipt *ipt;
  	struct xt_entry_target *td, *t;
  	char *tname;
++<<<<<<< HEAD
++=======
+ 	bool exists = false;
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  	int ret = 0, err;
  	u32 hook = 0;
  	u32 index = 0;
diff --cc net/sched/act_mirred.c
index 80554d23769d,5b135d357e1e..000000000000
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@@ -60,6 -63,7 +60,10 @@@ static int tcf_mirred_init(struct net *
  	struct tcf_mirred *m;
  	struct net_device *dev;
  	int ret, ok_push = 0;
++<<<<<<< HEAD
++=======
+ 	bool exists = false;
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  
  	if (nla == NULL)
  		return -EINVAL;
diff --cc net/sched/act_simple.c
index 4876cc19a2ed,318328d34d12..000000000000
--- a/net/sched/act_simple.c
+++ b/net/sched/act_simple.c
@@@ -83,8 -85,10 +83,13 @@@ static int tcf_simp_init(struct net *ne
  	struct nlattr *tb[TCA_DEF_MAX + 1];
  	struct tc_defact *parm;
  	struct tcf_defact *d;
+ 	bool exists = false;
+ 	int ret = 0, err;
  	char *defdata;
++<<<<<<< HEAD
 +	int ret = 0, err;
++=======
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  
  	if (nla == NULL)
  		return -EINVAL;
diff --cc net/sched/act_skbedit.c
index 173bfd2bb060,53d1486cddf7..000000000000
--- a/net/sched/act_skbedit.c
+++ b/net/sched/act_skbedit.c
@@@ -67,6 -69,7 +67,10 @@@ static int tcf_skbedit_init(struct net 
  	struct tcf_skbedit *d;
  	u32 flags = 0, *priority = NULL, *mark = NULL;
  	u16 *queue_mapping = NULL;
++<<<<<<< HEAD
++=======
+ 	bool exists = false;
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  	int ret = 0, err;
  
  	if (nla == NULL)
diff --cc net/sched/act_vlan.c
index 2ca3e6093ca9,db9b7ed570ba..000000000000
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@@ -76,9 -77,8 +76,14 @@@ static int tcf_vlan_init(struct net *ne
  	int action;
  	__be16 push_vid = 0;
  	__be16 push_proto = 0;
++<<<<<<< HEAD
 +	u8 push_prio = 0;
 +	int ret = 0;
 +	int err;
++=======
+ 	bool exists = false;
+ 	int ret = 0, err;
++>>>>>>> b2313077ed0d (net_sched: make tcf_hash_check() boolean)
  
  	if (!nla)
  		return -EINVAL;
* Unmerged path net/sched/act_ife.c
* Unmerged path include/net/act_api.h
* Unmerged path net/sched/act_api.c
* Unmerged path net/sched/act_ife.c
* Unmerged path net/sched/act_ipt.c
* Unmerged path net/sched/act_mirred.c
* Unmerged path net/sched/act_simple.c
* Unmerged path net/sched/act_skbedit.c
* Unmerged path net/sched/act_vlan.c
