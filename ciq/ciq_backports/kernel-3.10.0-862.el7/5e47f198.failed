target: Fix target_release_cmd_kref shutdown comp leak

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [target] Fix target_release_cmd_kref shutdown comp leak (Maurizio Lombardi) [1366062]
Rebuild_FUZZ: 92.00%
commit-author Himanshu Madhani <himanshu.madhani@qlogic.com>
commit 5e47f1985d7107331c3f64fb3ec83d66fd73577e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5e47f198.failed

This patch fixes an active I/O shutdown bug for fabric
drivers using target_wait_for_sess_cmds(), where se_cmd
descriptor shutdown would result in hung tasks waiting
indefinitely for se_cmd->cmd_wait_comp to complete().

To address this bug, drop the incorrect list_del_init()
usage in target_wait_for_sess_cmds() and always complete()
during se_cmd target_release_cmd_kref() put, in order to
let caller invoke the final fabric release callback
into se_cmd->se_tfo->release_cmd() code.

	Reported-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Tested-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 5e47f1985d7107331c3f64fb3ec83d66fd73577e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_transport.c
diff --cc drivers/target/target_core_transport.c
index 68bc47c2e404,ab2bf12975e1..000000000000
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@@ -2614,8 -2659,7 +2614,11 @@@ void target_wait_for_sess_cmds(struct s
  
  	list_for_each_entry_safe(se_cmd, tmp_cmd,
  				&se_sess->sess_wait_list, se_cmd_list) {
++<<<<<<< HEAD
 +		list_del(&se_cmd->se_cmd_list);
 +
++=======
++>>>>>>> 5e47f1985d71 (target: Fix target_release_cmd_kref shutdown comp leak)
  		pr_debug("Waiting for se_cmd: %p t_state: %d, fabric state:"
  			" %d\n", se_cmd, se_cmd->t_state,
  			se_cmd->se_tfo->get_cmd_state(se_cmd));
* Unmerged path drivers/target/target_core_transport.c
