libnvdimm, btt: fix btt_rw_page not returning errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Vishal Verma <vishal.l.verma@intel.com>
commit c13c43d54f2c6a3be1c675766778ac1ad8dfbfcc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c13c43d5.failed

btt_rw_page was not propagating errors frm btt_do_bvec, resulting in any
IO errors via the rw_page path going unnoticed. the pmem driver recently
fixed this in e10624f pmem: fail io-requests to known bad blocks
but same problem in BTT went neglected.

Fixes: 5212e11fde4d ("nd_btt: atomic sector updates")
	Cc: <stable@vger.kernel.org>
	Cc: Toshi Kani <toshi.kani@hpe.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Jeff Moyer <jmoyer@redhat.com>
	Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit c13c43d54f2c6a3be1c675766778ac1ad8dfbfcc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/btt.c
diff --cc drivers/nvdimm/btt.c
index 870e0156bc06,4e56e720288d..000000000000
--- a/drivers/nvdimm/btt.c
+++ b/drivers/nvdimm/btt.c
@@@ -1195,13 -1245,16 +1195,22 @@@ out
  }
  
  static int btt_rw_page(struct block_device *bdev, sector_t sector,
 -		struct page *page, bool is_write)
 +		struct page *page, int rw)
  {
  	struct btt *btt = bdev->bd_disk->private_data;
+ 	int rc;
  
++<<<<<<< HEAD
 +	btt_do_bvec(btt, NULL, page, PAGE_CACHE_SIZE, 0, rw, sector);
 +	page_endio(page, rw & WRITE, 0);
 +	return 0;
++=======
+ 	rc = btt_do_bvec(btt, NULL, page, PAGE_SIZE, 0, is_write, sector);
+ 	if (rc == 0)
+ 		page_endio(page, is_write, 0);
+ 
+ 	return rc;
++>>>>>>> c13c43d54f2c (libnvdimm, btt: fix btt_rw_page not returning errors)
  }
  
  
* Unmerged path drivers/nvdimm/btt.c
