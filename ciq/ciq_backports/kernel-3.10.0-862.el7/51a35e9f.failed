sysfs, kernfs: make sysfs_super_info->ns const

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Tejun Heo <tj@kernel.org>
commit 51a35e9fd0f229d2f84455ee7e85a5d30fa35594
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/51a35e9f.failed

Add const qualifier to sysfs_super_info->ns so that it's consistent
with other namespace tag usages in sysfs.  Because kobject doesn't use
const qualifier for namespace tags, this ends up requiring an explicit
cast to drop const qualifier in free_sysfs_super_info().

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 51a35e9fd0f229d2f84455ee7e85a5d30fa35594)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/sysfs/mount.c
#	fs/sysfs/sysfs.h
diff --cc fs/sysfs/mount.c
index 83afed5eaea3,fcbe5e80aeeb..000000000000
--- a/fs/sysfs/mount.c
+++ b/fs/sysfs/mount.c
@@@ -98,9 -92,7 +98,13 @@@ static int sysfs_set_super(struct super
  
  static void free_sysfs_super_info(struct sysfs_super_info *info)
  {
++<<<<<<< HEAD
 +	int type;
 +	for (type = KOBJ_NS_TYPE_NONE; type < KOBJ_NS_TYPES; type++)
 +		kobj_ns_drop(type, info->ns[type]);
++=======
+ 	kobj_ns_drop(KOBJ_NS_TYPE_NET, (void *)info->ns);
++>>>>>>> 51a35e9fd0f2 (sysfs, kernfs: make sysfs_super_info->ns const)
  	kfree(info);
  }
  
diff --cc fs/sysfs/sysfs.h
index e18c3f38727c,ce97907e2894..000000000000
--- a/fs/sysfs/sysfs.h
+++ b/fs/sysfs/sysfs.h
@@@ -140,13 -18,14 +140,24 @@@ struct sysfs_addrm_cxt 
   * mount.c
   */
  
++<<<<<<< HEAD
 +/*
 + * Each sb is associated with a set of namespace tags (i.e.
 + * the network namespace of the task which mounted this sysfs
 + * instance).
 + */
 +struct sysfs_super_info {
 +	void *ns[KOBJ_NS_TYPES];
++=======
+ struct sysfs_super_info {
+ 	/*
+ 	 * Each sb is associated with one namespace tag, currently the network
+ 	 * namespace of the task which mounted this sysfs instance.  If multiple
+ 	 * tags become necessary, make the following an array and compare
+ 	 * sysfs_dirent tag against every entry.
+ 	 */
+ 	const void		*ns;
++>>>>>>> 51a35e9fd0f2 (sysfs, kernfs: make sysfs_super_info->ns const)
  };
  #define sysfs_info(SB) ((struct sysfs_super_info *)(SB->s_fs_info))
  extern struct sysfs_dirent sysfs_root;
* Unmerged path fs/sysfs/mount.c
* Unmerged path fs/sysfs/sysfs.h
