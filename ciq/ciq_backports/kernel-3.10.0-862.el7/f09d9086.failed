livepatch: make object/func-walking helpers more robust

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Miroslav Benes <mbenes@suse.cz>
commit f09d90864eb7cc00cadbbfd083b4eff84c167981
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f09d9086.failed

Current object-walking helper checks the presence of obj->funcs to
determine the end of objs array in klp_object structure. This is
somewhat fragile because one can easily forget about funcs definition
during livepatch creation. In such a case the livepatch module is
successfully loaded and all objects after the incorrect one are omitted.
This is very confusing. Let's make the helper more robust and check also
for the other external member, name. Thus the helper correctly stops on
an empty item of the array. We need to have a check for obj->funcs in
klp_init_object() to make it work.

The same applies to a func-walking helper.

As a benefit we'll check for new_func member definition during the
livepatch initialization. There is no such check anywhere in the code
now.

[jkosina@suse.cz: fix shortlog]
	Signed-off-by: Miroslav Benes <mbenes@suse.cz>
	Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Acked-by: Jessica Yu <jeyu@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit f09d90864eb7cc00cadbbfd083b4eff84c167981)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/livepatch.h
#	kernel/livepatch/core.c
* Unmerged path include/linux/livepatch.h
* Unmerged path kernel/livepatch/core.c
* Unmerged path include/linux/livepatch.h
* Unmerged path kernel/livepatch/core.c
