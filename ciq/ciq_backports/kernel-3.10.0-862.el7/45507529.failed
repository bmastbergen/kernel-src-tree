net: sched: cls_flower: no need to call tcf_exts_change for newly allocated struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: cls_flower: no need to call tcf_exts_change for newly allocated struct (Ivan Vecera) [1445420]
Rebuild_FUZZ: 96.86%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 455075292b0d58f708c1afe7011a8b9223b2c9c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/45507529.failed

As the f struct was allocated right before fl_set_parms call, no need
to use tcf_exts_change to do atomic change, and we can just fill-up
the unused exts struct directly by tcf_exts_validate.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 455075292b0d58f708c1afe7011a8b9223b2c9c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_flower.c
diff --cc net/sched/cls_flower.c
index 92a3092a522f,7ab524fc43f9..000000000000
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@@ -854,11 -852,9 +854,14 @@@ static int fl_set_parms(struct net *net
  			unsigned long base, struct nlattr **tb,
  			struct nlattr *est, bool ovr)
  {
- 	struct tcf_exts e;
  	int err;
  
++<<<<<<< HEAD
 +	tcf_exts_init(&e, TCA_FLOWER_ACT, 0);
 +	err = tcf_exts_validate(net, tp, tb, est, &e, ovr);
++=======
+ 	err = tcf_exts_validate(net, tp, tb, est, &f->exts, ovr);
++>>>>>>> 455075292b0d (net: sched: cls_flower: no need to call tcf_exts_change for newly allocated struct)
  	if (err < 0)
  		return err;
  
* Unmerged path net/sched/cls_flower.c
