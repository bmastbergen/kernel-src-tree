net_sched: replace pr_warning with pr_warn

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yang Yingliang <yangyingliang@huawei.com>
commit c17988a90f92c61164d6b82dd92ce8ade03899c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c17988a9.failed

Prefer pr_warn(... to pr_warning(...

	Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c17988a90f92c61164d6b82dd92ce8ade03899c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_dsmark.c
diff --cc net/sched/sch_dsmark.c
index aa6f17b4c579,7cd49e5f2dfe..000000000000
--- a/net/sched/sch_dsmark.c
+++ b/net/sched/sch_dsmark.c
@@@ -300,8 -303,8 +300,13 @@@ static struct sk_buff *dsmark_dequeue(s
  		 * and don't need yet another qdisc as a bypass.
  		 */
  		if (p->mask[index] != 0xff || p->value[index])
++<<<<<<< HEAD
 +			pr_warn("%s: unsupported protocol %d\n",
 +				__func__, ntohs(tc_skb_protocol(skb)));
++=======
+ 			pr_warn("dsmark_dequeue: unsupported protocol %d\n",
+ 				ntohs(skb->protocol));
++>>>>>>> c17988a90f92 (net_sched: replace pr_warning with pr_warn)
  		break;
  	}
  
diff --git a/net/sched/sch_cbq.c b/net/sched/sch_cbq.c
index 48570e1ac8a0..2a9beaac14db 100644
--- a/net/sched/sch_cbq.c
+++ b/net/sched/sch_cbq.c
@@ -1062,8 +1062,8 @@ static void cbq_normalize_quanta(struct cbq_sched_data *q, int prio)
 			}
 			if (cl->quantum <= 0 ||
 			    cl->quantum > 32*qdisc_dev(cl->qdisc)->mtu) {
-				pr_warning("CBQ: class %08x has bad quantum==%ld, repaired.\n",
-					   cl->common.classid, cl->quantum);
+				pr_warn("CBQ: class %08x has bad quantum==%ld, repaired.\n",
+					cl->common.classid, cl->quantum);
 				cl->quantum = qdisc_dev(cl->qdisc)->mtu/2 + 1;
 			}
 		}
* Unmerged path net/sched/sch_dsmark.c
diff --git a/net/sched/sch_gred.c b/net/sched/sch_gred.c
index e55503737f92..74dae029a79a 100644
--- a/net/sched/sch_gred.c
+++ b/net/sched/sch_gred.c
@@ -371,8 +371,8 @@ static inline int gred_change_table_def(struct Qdisc *sch, struct nlattr *dps)
 
 	for (i = table->DPs; i < MAX_DPs; i++) {
 		if (table->tab[i]) {
-			pr_warning("GRED: Warning: Destroying "
-				   "shadowed VQ 0x%x\n", i);
+			pr_warn("GRED: Warning: Destroying shadowed VQ 0x%x\n",
+				i);
 			gred_destroy_vq(table->tab[i]);
 			table->tab[i] = NULL;
 		}
diff --git a/net/sched/sch_htb.c b/net/sched/sch_htb.c
index 426ade1b5677..3a03f5f340aa 100644
--- a/net/sched/sch_htb.c
+++ b/net/sched/sch_htb.c
@@ -718,7 +718,7 @@ static s64 htb_do_events(struct htb_sched *q, const int level,
 
 	/* too much load - let's continue after a break for scheduling */
 	if (!(q->warned & HTB_WARN_TOOMANYEVENTS)) {
-		pr_warning("htb: too many events!\n");
+		pr_warn("htb: too many events!\n");
 		q->warned |= HTB_WARN_TOOMANYEVENTS;
 	}
 
@@ -1492,15 +1492,13 @@ static int htb_change_class(struct Qdisc *sch, u32 classid,
 		cl->quantum = min_t(u64, quantum, INT_MAX);
 
 		if (!hopt->quantum && cl->quantum < 1000) {
-			pr_warning(
-			       "HTB: quantum of class %X is small. Consider r2q change.\n",
-			       cl->common.classid);
+			pr_warn("HTB: quantum of class %X is small. Consider r2q change.\n",
+				cl->common.classid);
 			cl->quantum = 1000;
 		}
 		if (!hopt->quantum && cl->quantum > 200000) {
-			pr_warning(
-			       "HTB: quantum of class %X is big. Consider r2q change.\n",
-			       cl->common.classid);
+			pr_warn("HTB: quantum of class %X is big. Consider r2q change.\n",
+				cl->common.classid);
 			cl->quantum = 200000;
 		}
 		if (hopt->quantum)
