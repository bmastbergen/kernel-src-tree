ceph: ignore error from invalidate_inode_pages2_range() in direct write

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author NeilBrown <neilb@suse.com>
commit 5d7eb1a3225309b294275385ece36fee256d5c46
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5d7eb1a3.failed

This call can fail if there are dirty pages.  The preceding call to
filemap_write_and_wait_range() will normally remove dirty pages, but
as inode_lock() is not held over calls to ceph_direct_read_write(), it
could race with non-direct writes and pages could be dirtied
immediately after filemap_write_and_wait_range() returns

If there are dirty pages, they will be removed by the subsequent call
to truncate_inode_pages_range(), so having them here is not a problem.

If the 'ret' value is left holding an error, then in the async IO case
(aio_req is not NULL) the loop that would normally call
ceph_osdc_start_request() will see the error in 'ret' and abort all
requests.  This doesn't seem like correct behaviour.

So use separate 'ret2' instead of overloading 'ret'.

	Signed-off-by: NeilBrown <neilb@suse.com>
	Reviewed-by: Jeff Layton <jlayton@redhat.com>
	Reviewed-by: Yan, Zheng <zyan@redhat.com>
(cherry picked from commit 5d7eb1a3225309b294275385ece36fee256d5c46)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/file.c
diff --cc fs/ceph/file.c
index 7e050b424b59,395c7fcb1cea..000000000000
--- a/fs/ceph/file.c
+++ b/fs/ceph/file.c
@@@ -910,10 -902,10 +910,17 @@@ ceph_direct_read_write(struct kiocb *io
  		return ret;
  
  	if (write) {
++<<<<<<< HEAD
 +		ret = invalidate_inode_pages2_range(inode->i_mapping,
 +					pos >> PAGE_CACHE_SHIFT,
 +					(pos + count) >> PAGE_CACHE_SHIFT);
 +		if (ret < 0)
++=======
+ 		int ret2 = invalidate_inode_pages2_range(inode->i_mapping,
+ 					pos >> PAGE_SHIFT,
+ 					(pos + count) >> PAGE_SHIFT);
+ 		if (ret2 < 0)
++>>>>>>> 5d7eb1a32253 (ceph: ignore error from invalidate_inode_pages2_range() in direct write)
  			dout("invalidate_inode_pages2_range returned %d\n", ret);
  
  		flags = CEPH_OSD_FLAG_ORDERSNAP |
* Unmerged path fs/ceph/file.c
