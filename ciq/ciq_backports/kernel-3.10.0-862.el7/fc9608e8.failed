nvmet-fcloop: remove use of FC-specific error codes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author James Smart <jsmart2021@gmail.com>
commit fc9608e8b4dc3c2545fa0bc5d3eef158ca56ccf8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/fc9608e8.failed

The FC-NVME transport loopback test module used the FC-specific error
codes in cases where it emulated a transport abort case. Instead of
using the FC-specific values, now use a generic value (NVME_SC_INTERNAL).

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit fc9608e8b4dc3c2545fa0bc5d3eef158ca56ccf8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/fcloop.c
diff --cc drivers/nvme/target/fcloop.c
index 594b73502d04,1fd1afbb8b2a..000000000000
--- a/drivers/nvme/target/fcloop.c
+++ b/drivers/nvme/target/fcloop.c
@@@ -498,6 -562,39 +498,42 @@@ fcloop_fcp_op(struct nvmet_fc_target_po
  }
  
  static void
++<<<<<<< HEAD
++=======
+ fcloop_tgt_fcp_abort(struct nvmet_fc_target_port *tgtport,
+ 			struct nvmefc_tgt_fcp_req *tgt_fcpreq)
+ {
+ 	struct fcloop_fcpreq *tfcp_req = tgt_fcp_req_to_fcpreq(tgt_fcpreq);
+ 
+ 	/*
+ 	 * mark aborted only in case there were 2 threads in transport
+ 	 * (one doing io, other doing abort) and only kills ops posted
+ 	 * after the abort request
+ 	 */
+ 	spin_lock(&tfcp_req->reqlock);
+ 	tfcp_req->aborted = true;
+ 	spin_unlock(&tfcp_req->reqlock);
+ 
+ 	tfcp_req->status = NVME_SC_INTERNAL;
+ 
+ 	/*
+ 	 * nothing more to do. If io wasn't active, the transport should
+ 	 * immediately call the req_release. If it was active, the op
+ 	 * will complete, and the lldd should call req_release.
+ 	 */
+ }
+ 
+ static void
+ fcloop_fcp_req_release(struct nvmet_fc_target_port *tgtport,
+ 			struct nvmefc_tgt_fcp_req *tgt_fcpreq)
+ {
+ 	struct fcloop_fcpreq *tfcp_req = tgt_fcp_req_to_fcpreq(tgt_fcpreq);
+ 
+ 	schedule_work(&tfcp_req->work);
+ }
+ 
+ static void
++>>>>>>> fc9608e8b4dc (nvmet-fcloop: remove use of FC-specific error codes)
  fcloop_ls_abort(struct nvme_fc_local_port *localport,
  			struct nvme_fc_remote_port *remoteport,
  				struct nvmefc_ls_req *lsreq)
* Unmerged path drivers/nvme/target/fcloop.c
