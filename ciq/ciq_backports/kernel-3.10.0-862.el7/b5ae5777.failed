net/mlx5e: IPoIB, Modify rdma netdev allocate and free to support PKEY

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: IPoIB, Modify rdma netdev allocate and free to support PKEY (Kamal Heib) [1517570 1456694]
Rebuild_FUZZ: 97.06%
commit-author Alex Vesker <valex@mellanox.com>
commit b5ae577741bec22b584fa704076ccd8221cad19d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b5ae5777.failed

Resources such as FT, QPN HT and mdev resources should be allocated
only by parent netdev. Shared resources are allocated and freed by the
parent interface since the parent is always present and created
before the IPoIB PKEY sub-interface.

	Signed-off-by: Alex Vesker <valex@mellanox.com>
	Reviewed-by: Erez Shitrit <erezsh@mellanox.com>
(cherry picked from commit b5ae577741bec22b584fa704076ccd8221cad19d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_common.c
#	drivers/net/ethernet/mellanox/mlx5/core/ipoib.h
#	drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_common.c
index f175518ff07a,157d02917237..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_common.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_common.c
@@@ -134,21 -133,23 +134,25 @@@ void mlx5e_destroy_mdev_resources(struc
  	mlx5_core_destroy_mkey(mdev, &res->mkey);
  	mlx5_core_dealloc_transport_domain(mdev, res->td.tdn);
  	mlx5_core_dealloc_pd(mdev, res->pdn);
++<<<<<<< HEAD
 +	mlx5_unmap_free_uar(mdev, &res->cq_uar);
++=======
+ 	memset(res, 0, sizeof(*res));
++>>>>>>> b5ae577741be (net/mlx5e: IPoIB, Modify rdma netdev allocate and free to support PKEY)
  }
  
 -int mlx5e_refresh_tirs(struct mlx5e_priv *priv, bool enable_uc_lb)
 +int mlx5e_refresh_tirs_self_loopback(struct mlx5_core_dev *mdev,
 +				     bool enable_uc_lb)
  {
 -	struct mlx5_core_dev *mdev = priv->mdev;
  	struct mlx5e_tir *tir;
 -	int err  = -ENOMEM;
 -	u32 tirn = 0;
 -	int inlen;
  	void *in;
 +	int inlen;
 +	int err = 0;
  
  	inlen = MLX5_ST_SZ_BYTES(modify_tir_in);
 -	in = kvzalloc(inlen, GFP_KERNEL);
 +	in = mlx5_vzalloc(inlen);
  	if (!in)
 -		goto out;
 +		return -ENOMEM;
  
  	if (enable_uc_lb)
  		MLX5_SET(modify_tir_in, in, ctx.self_lb_block,
diff --cc drivers/net/ethernet/mellanox/mlx5/core/ipoib.h
index 89bca182464c,49008022c306..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib.h
@@@ -38,9 -38,22 +38,16 @@@
  
  #define MLX5I_MAX_NUM_TC 1
  
 -extern const struct ethtool_ops mlx5i_ethtool_ops;
 -extern const struct ethtool_ops mlx5i_pkey_ethtool_ops;
 -
 -#define MLX5_IB_GRH_BYTES       40
 -#define MLX5_IPOIB_ENCAP_LEN    4
 -#define MLX5_IPOIB_PSEUDO_LEN   20
 -#define MLX5_IPOIB_HARD_LEN     (MLX5_IPOIB_PSEUDO_LEN + MLX5_IPOIB_ENCAP_LEN)
 -
  /* ipoib rdma netdev's private data structure */
  struct mlx5i_priv {
 -	struct rdma_netdev rn; /* keep this first */
  	struct mlx5_core_qp qp;
++<<<<<<< HEAD:drivers/net/ethernet/mellanox/mlx5/core/ipoib.h
++=======
+ 	bool   sub_interface;
+ 	u32    qkey;
+ 	u16    pkey_index;
+ 	struct mlx5i_pkey_qpn_ht *qpn_htbl;
++>>>>>>> b5ae577741be (net/mlx5e: IPoIB, Modify rdma netdev allocate and free to support PKEY):drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.h
  	char  *mlx5e_priv[0];
  };
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_common.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
