net_sched: sch_pie: defer skb freeing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Eric Dumazet <edumazet@google.com>
commit db4879d93c351cb978db1eb4c963f44d267d63a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/db4879d9.failed

pie_change() can use rtnl_qdisc_drop() to benefit from
deferred freeing.

pie_reset() is already using qdisc_reset_queue()

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit db4879d93c351cb978db1eb4c963f44d267d63a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_pie.c
diff --cc net/sched/sch_pie.c
index 3b7e44df5a47,912a46a5d02e..000000000000
--- a/net/sched/sch_pie.c
+++ b/net/sched/sch_pie.c
@@@ -232,10 -232,11 +232,16 @@@ static int pie_change(struct Qdisc *sch
  	while (sch->q.qlen > sch->limit) {
  		struct sk_buff *skb = __skb_dequeue(&sch->q);
  
++<<<<<<< HEAD
 +		sch->qstats.backlog -= qdisc_pkt_len(skb);
 +		qdisc_drop(skb, sch);
++=======
+ 		dropped += qdisc_pkt_len(skb);
+ 		qdisc_qstats_backlog_dec(sch, skb);
+ 		rtnl_qdisc_drop(skb, sch);
++>>>>>>> db4879d93c35 (net_sched: sch_pie: defer skb freeing)
  	}
 -	qdisc_tree_reduce_backlog(sch, qlen - sch->q.qlen, dropped);
 +	qdisc_tree_decrease_qlen(sch, qlen - sch->q.qlen);
  
  	sch_tree_unlock(sch);
  	return 0;
* Unmerged path net/sched/sch_pie.c
