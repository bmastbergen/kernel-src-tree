nvme: fix uninitialized prp2 value on small transfers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [nvme] fix uninitialized prp2 value on small transfers (David Milburn) [1493707]
Rebuild_FUZZ: 94.00%
commit-author Jan H. Schönherr <jschoenh@amazon.de>
commit 5228b3280b9bb8fa6aef59f891cca64a028e9b36
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5228b328.failed

The value of iod->first_dma ends up as prp2 in NVMe commands. In case
there is not enough data to cross a page boundary, iod->first_dma is
never initialized and contains random data.

Comply with the NVMe specification and fill in 0 in that case.

	Signed-off-by: Jan H. Schönherr <jschoenh@amazon.de>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 5228b3280b9bb8fa6aef59f891cca64a028e9b36)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 74de1d1461c5,544805a2421b..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -370,8 -555,10 +370,15 @@@ static bool nvme_setup_prps(struct nvme
  	int nprps, i;
  
  	length -= (page_size - offset);
++<<<<<<< HEAD
 +	if (length <= 0)
 +		return true;
++=======
+ 	if (length <= 0) {
+ 		iod->first_dma = 0;
+ 		return BLK_STS_OK;
+ 	}
++>>>>>>> 5228b3280b9b (nvme: fix uninitialized prp2 value on small transfers)
  
  	dma_len -= (page_size - offset);
  	if (dma_len) {
* Unmerged path drivers/nvme/host/pci.c
