kvm-vfio: Decouple only when we match a group

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Alex Williamson <alex.williamson@redhat.com>
commit e323369b2e204da4dc771bbddceef986f4bf85d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e323369b.failed

Unset-KVM and decrement-assignment only when we find the group in our
list.  Otherwise we can get out of sync if the user triggers this for
groups that aren't currently on our list.

	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
	Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>
	Reviewed-by: Eric Auger <eric.auger@redhat.com>
	Tested-by: Eric Auger <eric.auger@redhat.com>
	Acked-by: Paolo Bonzini <pbonzini@redhat.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit e323369b2e204da4dc771bbddceef986f4bf85d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/vfio.c
diff --cc virt/kvm/vfio.c
index d32f239eb471,6e002d0f3191..000000000000
--- a/virt/kvm/vfio.c
+++ b/virt/kvm/vfio.c
@@@ -207,12 -258,8 +213,13 @@@ static int kvm_vfio_set_group(struct kv
  			break;
  		}
  
- 		kvm_arch_end_assignment(dev->kvm);
- 
  		mutex_unlock(&kv->lock);
  
++<<<<<<< HEAD
 +		kvm_vfio_group_set_kvm(vfio_group, NULL);
 +
++=======
++>>>>>>> e323369b2e20 (kvm-vfio: Decouple only when we match a group)
  		kvm_vfio_group_put_external_user(vfio_group);
  
  		kvm_vfio_update_coherency(dev);
* Unmerged path virt/kvm/vfio.c
