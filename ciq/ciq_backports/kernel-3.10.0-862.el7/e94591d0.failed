proc: Convert proc_mount to use mount_ns.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [fs] proc: Convert proc_mount to use mount_ns ("Eric W. Biederman") [1487751]
Rebuild_FUZZ: 98.77%
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit e94591d0d90c13166cb6eb54ce5f96ed13d81b55
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e94591d0.failed

Move the call of get_pid_ns, the call of proc_parse_options, and
the setting of s_iflags into proc_fill_super so that mount_ns
can be used.

Convert proc_mount to call mount_ns and remove the now unnecessary
code.

	Acked-by: Seth Forshee <seth.forshee@canonical.com>
	Reviewed-by: Djalal Harouni <tixxdz@gmail.com>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit e94591d0d90c13166cb6eb54ce5f96ed13d81b55)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/inode.c
#	fs/proc/root.c
diff --cc fs/proc/inode.c
index 8d35dac92daf,f4817efb25a6..000000000000
--- a/fs/proc/inode.c
+++ b/fs/proc/inode.c
@@@ -411,10 -457,17 +411,19 @@@ struct inode *proc_get_inode(struct sup
  	return inode;
  }
  
- int proc_fill_super(struct super_block *s)
+ int proc_fill_super(struct super_block *s, void *data, int silent)
  {
+ 	struct pid_namespace *ns = get_pid_ns(s->s_fs_info);
  	struct inode *root_inode;
 -	int ret;
  
++<<<<<<< HEAD
++=======
+ 	if (!proc_parse_options(data, ns))
+ 		return -EINVAL;
+ 
+ 	/* User space would break if executables appear on proc */
+ 	s->s_iflags |= SB_I_USERNS_VISIBLE | SB_I_NOEXEC;
++>>>>>>> e94591d0d90c (proc: Convert proc_mount to use mount_ns.)
  	s->s_flags |= MS_NODIRATIME | MS_NOSUID | MS_NOEXEC;
  	s->s_blocksize = 1024;
  	s->s_blocksize_bits = 10;
diff --cc fs/proc/root.c
index 3a48c1b05b1a,8d3e484055a6..000000000000
--- a/fs/proc/root.c
+++ b/fs/proc/root.c
@@@ -98,43 -85,16 +83,46 @@@ int proc_remount(struct super_block *sb
  static struct dentry *proc_mount(struct file_system_type *fs_type,
  	int flags, const char *dev_name, void *data)
  {
- 	int err;
- 	struct super_block *sb;
  	struct pid_namespace *ns;
- 	char *options;
  
  	if (flags & MS_KERNMOUNT) {
- 		ns = (struct pid_namespace *)data;
- 		options = NULL;
+ 		ns = data;
+ 		data = NULL;
  	} else {
  		ns = task_active_pid_ns(current);
++<<<<<<< HEAD
 +		options = data;
 +
 +		if (!current_user_ns()->may_mount_proc ||
 +		    !ns_capable(ns->user_ns, CAP_SYS_ADMIN))
 +			return ERR_PTR(-EPERM);
 +	}
 +
 +	sb = sget(fs_type, proc_test_super, proc_set_super, flags, ns);
 +	if (IS_ERR(sb))
 +		return ERR_CAST(sb);
 +
 +	if (!proc_parse_options(options, ns)) {
 +		deactivate_locked_super(sb);
 +		return ERR_PTR(-EINVAL);
 +	}
 +
 +	if (!sb->s_root) {
 +		err = proc_fill_super(sb);
 +		if (err) {
 +			deactivate_locked_super(sb);
 +			return ERR_PTR(err);
 +		}
 +
 +		sb->s_flags |= MS_ACTIVE;
 +	}
 +
 +	return dget(sb->s_root);
++=======
+ 	}
+ 
+ 	return mount_ns(fs_type, flags, data, ns, ns->user_ns, proc_fill_super);
++>>>>>>> e94591d0d90c (proc: Convert proc_mount to use mount_ns.)
  }
  
  static void proc_kill_sb(struct super_block *sb)
* Unmerged path fs/proc/inode.c
diff --git a/fs/proc/internal.h b/fs/proc/internal.h
index b3afe6cc8f18..7d55eb7c0d06 100644
--- a/fs/proc/internal.h
+++ b/fs/proc/internal.h
@@ -226,7 +226,7 @@ extern const struct inode_operations proc_pid_link_inode_operations;
 
 extern void proc_init_inodecache(void);
 extern struct inode *proc_get_inode(struct super_block *, struct proc_dir_entry *);
-extern int proc_fill_super(struct super_block *);
+extern int proc_fill_super(struct super_block *, void *data, int flags);
 extern void proc_entry_rundown(struct proc_dir_entry *);
 
 /*
@@ -283,6 +283,7 @@ static inline void proc_tty_init(void) {}
  * root.c
  */
 extern struct proc_dir_entry proc_root;
+extern int proc_parse_options(char *options, struct pid_namespace *pid);
 
 extern void proc_self_init(void);
 extern int proc_remount(struct super_block *, int *, char *);
* Unmerged path fs/proc/root.c
