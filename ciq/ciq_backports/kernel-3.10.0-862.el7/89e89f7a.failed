net/mlx5e: Replace multiplication by stride size with a shift

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Replace multiplication by stride size with a shift (Kamal Heib) [1456694]
Rebuild_FUZZ: 96.61%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit 89e89f7a9fded02b81f4ee21e30c64892116cf34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/89e89f7a.failed

In RX data-path, use shift operations instead of a regular multiplication
by stride size, as it is a power of two.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 89e89f7a9fded02b81f4ee21e30c64892116cf34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 819a88f4cbad,44bd8df905ca..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -356,6 -535,8 +356,11 @@@ struct mlx5e_rq 
  		struct {
  			struct mlx5e_mpw_info *info;
  			void                  *mtt_no_align;
++<<<<<<< HEAD
++=======
+ 			u16                    num_strides;
+ 			u8                     log_stride_sz;
++>>>>>>> 89e89f7a9fde (net/mlx5e: Replace multiplication by stride size with a shift)
  		} mpwqe;
  	};
  	struct {
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 582cfccdbde3,7a25d952c922..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -582,13 -601,27 +582,20 @@@ static int mlx5e_create_rq(struct mlx5e
  		rq->alloc_wqe = mlx5e_alloc_rx_mpwqe;
  		rq->dealloc_wqe = mlx5e_dealloc_rx_mpwqe;
  
 -		rq->handle_rx_cqe = c->priv->profile->rx_handlers.handle_rx_cqe_mpwqe;
 -#ifdef CONFIG_MLX5_EN_IPSEC
 -		if (MLX5_IPSEC_DEV(mdev)) {
 -			err = -EINVAL;
 -			netdev_err(c->netdev, "MPWQE RQ with IPSec offload not supported\n");
 -			goto err_rq_wq_destroy;
 -		}
 -#endif
 -		if (!rq->handle_rx_cqe) {
 -			err = -EINVAL;
 -			netdev_err(c->netdev, "RX handler of MPWQE RQ is not set, err %d\n", err);
 -			goto err_rq_wq_destroy;
 -		}
 +		rq->mpwqe_stride_sz = BIT(priv->params.mpwqe_log_stride_sz);
 +		rq->mpwqe_num_strides = BIT(priv->params.mpwqe_log_num_strides);
  
++<<<<<<< HEAD
 +		rq->buff.wqe_sz = rq->mpwqe_stride_sz * rq->mpwqe_num_strides;
++=======
+ 		rq->mpwqe.log_stride_sz = params->mpwqe_log_stride_sz;
+ 		rq->mpwqe.num_strides = BIT(params->mpwqe_log_num_strides);
+ 
+ 		rq->buff.wqe_sz = rq->mpwqe.num_strides << rq->mpwqe.log_stride_sz;
++>>>>>>> 89e89f7a9fde (net/mlx5e: Replace multiplication by stride size with a shift)
  		byte_count = rq->buff.wqe_sz;
  
 -		err = mlx5e_create_rq_umr_mkey(mdev, rq);
 +		err = mlx5e_create_rq_umr_mkey(rq);
  		if (err)
  			goto err_rq_wq_destroy;
  		rq->mkey_be = cpu_to_be32(rq->umr_mkey.key);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 95ed8ecaf735,aa5cc1590859..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -287,7 -304,7 +287,11 @@@ static inline void mlx5e_add_skb_frag_m
  					    u32 page_idx, u32 frag_offset,
  					    u32 len)
  {
++<<<<<<< HEAD
 +	unsigned int truesize =	ALIGN(len, rq->mpwqe_stride_sz);
++=======
+ 	unsigned int truesize = ALIGN(len, BIT(rq->mpwqe.log_stride_sz));
++>>>>>>> 89e89f7a9fde (net/mlx5e: Replace multiplication by stride size with a shift)
  
  	dma_sync_single_for_cpu(rq->pdev,
  				wi->umr.dma_info[page_idx].addr + frag_offset,
@@@ -742,7 -910,7 +746,11 @@@ static inline void mlx5e_mpwqe_fill_rx_
  					   struct sk_buff *skb)
  {
  	u16 stride_ix      = mpwrq_get_cqe_stride_index(cqe);
++<<<<<<< HEAD
 +	u32 wqe_offset     = stride_ix * rq->mpwqe_stride_sz;
++=======
+ 	u32 wqe_offset     = stride_ix << rq->mpwqe.log_stride_sz;
++>>>>>>> 89e89f7a9fde (net/mlx5e: Replace multiplication by stride size with a shift)
  	u32 head_offset    = wqe_offset & (PAGE_SIZE - 1);
  	u32 page_idx       = wqe_offset >> PAGE_SHIFT;
  	u32 head_page_idx  = page_idx;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
