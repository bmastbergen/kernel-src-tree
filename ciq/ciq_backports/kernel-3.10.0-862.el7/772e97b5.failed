geneve: Fix function matching VNI and tunnel ID on big-endian

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Stefano Brivio <sbrivio@redhat.com>
commit 772e97b57a4aa00170ad505a40ffad31d987ce1d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/772e97b5.failed

On big-endian machines, functions converting between tunnel ID
and VNI use the three LSBs of tunnel ID storage to map VNI.

The comparison function eq_tun_id_and_vni(), on the other hand,
attempted to map the VNI from the three MSBs. Fix it by using
the same check implemented on LE, which maps VNI from the three
LSBs of tunnel ID.

Fixes: 2e0b26e10352 ("geneve: Optimize geneve device lookup.")
	Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
	Reviewed-by: Jakub Sitnicki <jkbs@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 772e97b57a4aa00170ad505a40ffad31d987ce1d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/geneve.c
diff --cc drivers/net/geneve.c
index 311107458453,ed51018a813e..000000000000
--- a/drivers/net/geneve.c
+++ b/drivers/net/geneve.c
@@@ -117,6 -97,25 +117,28 @@@ static __be64 vni_to_tunnel_id(const __
  #endif
  }
  
++<<<<<<< HEAD
++=======
+ /* Convert 64 bit tunnel ID to 24 bit VNI. */
+ static void tunnel_id_to_vni(__be64 tun_id, __u8 *vni)
+ {
+ #ifdef __BIG_ENDIAN
+ 	vni[0] = (__force __u8)(tun_id >> 16);
+ 	vni[1] = (__force __u8)(tun_id >> 8);
+ 	vni[2] = (__force __u8)tun_id;
+ #else
+ 	vni[0] = (__force __u8)((__force u64)tun_id >> 40);
+ 	vni[1] = (__force __u8)((__force u64)tun_id >> 48);
+ 	vni[2] = (__force __u8)((__force u64)tun_id >> 56);
+ #endif
+ }
+ 
+ static bool eq_tun_id_and_vni(u8 *tun_id, u8 *vni)
+ {
+ 	return !memcmp(vni, &tun_id[5], 3);
+ }
+ 
++>>>>>>> 772e97b57a4a (geneve: Fix function matching VNI and tunnel ID on big-endian)
  static sa_family_t geneve_get_sk_family(struct geneve_sock *gs)
  {
  	return gs->sock->sk->sk_family;
* Unmerged path drivers/net/geneve.c
