arp: decompose is_garp logic into a separate function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ihar Hrachyshka <ihrachys@redhat.com>
commit 6fd05633bdafc0ae6ec0d55e61af10780d4d3530
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6fd05633.failed

The code is quite involving already to earn a separate function for
itself. If anything, it helps arp_process readability.

	Signed-off-by: Ihar Hrachyshka <ihrachys@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6fd05633bdafc0ae6ec0d55e61af10780d4d3530)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/arp.c
diff --cc net/ipv4/arp.c
index 98def2add661,ca6e1e6c1496..000000000000
--- a/net/ipv4/arp.c
+++ b/net/ipv4/arp.c
@@@ -919,10 -865,12 +940,19 @@@ static int arp_process(struct sock *sk
  		   It is possible, that this option should be enabled for some
  		   devices (strip is candidate)
  		 */
++<<<<<<< HEAD
 +		if (n == NULL &&
 +		    (arp->ar_op == htons(ARPOP_REPLY) ||
 +		     (arp->ar_op == htons(ARPOP_REQUEST) && tip == sip)) &&
 +		    inet_addr_type(net, sip) == RTN_UNICAST)
++=======
+ 		is_garp = arp_is_garp(dev, addr_type, arp->ar_op,
+ 				      sip, tip, sha, tha);
+ 
+ 		if (!n &&
+ 		    ((arp->ar_op == htons(ARPOP_REPLY)  &&
+ 				addr_type == RTN_UNICAST) || is_garp))
++>>>>>>> 6fd05633bdaf (arp: decompose is_garp logic into a separate function)
  			n = __neigh_lookup(&arp_tbl, &sip, dev, 1);
  	}
  
* Unmerged path net/ipv4/arp.c
