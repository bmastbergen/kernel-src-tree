i40e: don't hold RTNL lock while waiting for VF reset to finish

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit 024b05f4246e281ef50e019eff0fc53aedf069ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/024b05f4.failed

We made some effort to reduce the RTNL lock scope when resetting and
rebuilding the PF. Unfortunately we still held the RTNL lock during the
VF reset operation, which meant that multiple PFs could not reset in
parallel due to the global lock. For now, further reduce the scope by
not holding the RTNL lock while resetting VFs. This allows multiple PFs
to reset in a timely manner.

Change-ID: I2fbf823a0063f24dff67676cad09f0bbf83ee4ce
	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 024b05f4246e281ef50e019eff0fc53aedf069ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 7d0c5ae01b6d,5c2ceb247959..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -7214,6 -7120,12 +7218,15 @@@ static void i40e_reset_and_rebuild(stru
  	/* tell the firmware that we're starting */
  	i40e_send_version(pf);
  
++<<<<<<< HEAD
++=======
+ 	/* We've already released the lock, so don't do it again */
+ 	goto end_core_reset;
+ 
+ end_unlock:
+ 	if (!lock_acquired)
+ 		rtnl_unlock();
++>>>>>>> 024b05f4246e (i40e: don't hold RTNL lock while waiting for VF reset to finish)
  end_core_reset:
  	clear_bit(__I40E_RESET_FAILED, &pf->state);
  clear_recovery:
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
