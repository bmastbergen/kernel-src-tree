net/devlink: Add E-Switch encapsulation control

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] devlink: Add E-Switch encapsulation control (Eelco Chaudron) [1497105]
Rebuild_FUZZ: 95.56%
commit-author Roi Dayan <roid@mellanox.com>
commit f43e9b069aeaf0f3d51fa30ddc9c0003e86623b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f43e9b06.failed

This is an e-switch global knob to enable HW support for applying
encapsulation/decapsulation to VF traffic as part of SRIOV e-switch offloading.

The actual encap/decap is carried out (along with the matching and other actions)
per offloaded e-switch rules, e.g as done when offloading the TC tunnel key action.

	Signed-off-by: Roi Dayan <roid@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit f43e9b069aeaf0f3d51fa30ddc9c0003e86623b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/devlink.h
#	net/core/devlink.c
diff --cc include/uapi/linux/devlink.h
index 9014c33d4e77,b0e807ac53bb..000000000000
--- a/include/uapi/linux/devlink.h
+++ b/include/uapi/linux/devlink.h
@@@ -142,6 -157,51 +147,54 @@@ enum devlink_attr 
  	DEVLINK_ATTR_ESWITCH_MODE,		/* u16 */
  	DEVLINK_ATTR_ESWITCH_INLINE_MODE,	/* u8 */
  
++<<<<<<< HEAD
++=======
+ 	DEVLINK_ATTR_DPIPE_TABLES,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_TABLE,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_TABLE_NAME,		/* string */
+ 	DEVLINK_ATTR_DPIPE_TABLE_SIZE,		/* u64 */
+ 	DEVLINK_ATTR_DPIPE_TABLE_MATCHES,	/* nested */
+ 	DEVLINK_ATTR_DPIPE_TABLE_ACTIONS,	/* nested */
+ 	DEVLINK_ATTR_DPIPE_TABLE_COUNTERS_ENABLED,	/* u8 */
+ 
+ 	DEVLINK_ATTR_DPIPE_ENTRIES,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_ENTRY,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_ENTRY_INDEX,		/* u64 */
+ 	DEVLINK_ATTR_DPIPE_ENTRY_MATCH_VALUES,	/* nested */
+ 	DEVLINK_ATTR_DPIPE_ENTRY_ACTION_VALUES,	/* nested */
+ 	DEVLINK_ATTR_DPIPE_ENTRY_COUNTER,	/* u64 */
+ 
+ 	DEVLINK_ATTR_DPIPE_MATCH,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_MATCH_VALUE,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_MATCH_TYPE,		/* u32 */
+ 
+ 	DEVLINK_ATTR_DPIPE_ACTION,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_ACTION_VALUE,	/* nested */
+ 	DEVLINK_ATTR_DPIPE_ACTION_TYPE,		/* u32 */
+ 
+ 	DEVLINK_ATTR_DPIPE_VALUE,
+ 	DEVLINK_ATTR_DPIPE_VALUE_MASK,
+ 	DEVLINK_ATTR_DPIPE_VALUE_MAPPING,	/* u32 */
+ 
+ 	DEVLINK_ATTR_DPIPE_HEADERS,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_HEADER,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_HEADER_NAME,		/* string */
+ 	DEVLINK_ATTR_DPIPE_HEADER_ID,		/* u32 */
+ 	DEVLINK_ATTR_DPIPE_HEADER_FIELDS,	/* nested */
+ 	DEVLINK_ATTR_DPIPE_HEADER_GLOBAL,	/* u8 */
+ 	DEVLINK_ATTR_DPIPE_HEADER_INDEX,	/* u32 */
+ 
+ 	DEVLINK_ATTR_DPIPE_FIELD,		/* nested */
+ 	DEVLINK_ATTR_DPIPE_FIELD_NAME,		/* string */
+ 	DEVLINK_ATTR_DPIPE_FIELD_ID,		/* u32 */
+ 	DEVLINK_ATTR_DPIPE_FIELD_BITWIDTH,	/* u32 */
+ 	DEVLINK_ATTR_DPIPE_FIELD_MAPPING_TYPE,	/* u32 */
+ 
+ 	DEVLINK_ATTR_PAD,
+ 
+ 	DEVLINK_ATTR_ESWITCH_ENCAP_MODE,	/* u8 */
+ 
++>>>>>>> f43e9b069aea (net/devlink: Add E-Switch encapsulation control)
  	/* add new attributes above here, update the policy in devlink.c */
  
  	__DEVLINK_ATTR_MAX,
diff --cc net/core/devlink.c
index a17fcd87f267,b0b87a292e7c..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -1398,11 -1392,12 +1398,12 @@@ static int devlink_nl_cmd_sb_occ_max_cl
  	return -EOPNOTSUPP;
  }
  
 -static int devlink_nl_eswitch_fill(struct sk_buff *msg, struct devlink *devlink,
 -				   enum devlink_command cmd, u32 portid,
 -				   u32 seq, int flags)
 +static int devlink_eswitch_fill(struct sk_buff *msg, struct devlink *devlink,
 +				enum devlink_command cmd, u32 portid,
 +				u32 seq, int flags)
  {
  	const struct devlink_ops *ops = devlink->ops;
+ 	u8 inline_mode, encap_mode;
  	void *hdr;
  	int err = 0;
  	u16 mode;
@@@ -1430,9 -1426,18 +1430,18 @@@
  		err = nla_put_u8(msg, DEVLINK_ATTR_ESWITCH_INLINE_MODE,
  				 inline_mode);
  		if (err)
 -			goto nla_put_failure;
 +			goto out;
  	}
  
+ 	if (ops->eswitch_encap_mode_get) {
+ 		err = ops->eswitch_encap_mode_get(devlink, &encap_mode);
+ 		if (err)
+ 			goto nla_put_failure;
+ 		err = nla_put_u8(msg, DEVLINK_ATTR_ESWITCH_ENCAP_MODE, encap_mode);
+ 		if (err)
+ 			goto nla_put_failure;
+ 	}
+ 
  	genlmsg_end(msg, hdr);
  	return 0;
  
@@@ -1498,6 -1503,15 +1507,18 @@@ static int devlink_nl_cmd_eswitch_mode_
  			return err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (info->attrs[DEVLINK_ATTR_ESWITCH_ENCAP_MODE]) {
+ 		if (!ops->eswitch_encap_mode_set)
+ 			return -EOPNOTSUPP;
+ 		encap_mode = nla_get_u8(info->attrs[DEVLINK_ATTR_ESWITCH_ENCAP_MODE]);
+ 		err = ops->eswitch_encap_mode_set(devlink, encap_mode);
+ 		if (err)
+ 			return err;
+ 	}
+ 
++>>>>>>> f43e9b069aea (net/devlink: Add E-Switch encapsulation control)
  	return 0;
  }
  
@@@ -1516,6 -2209,9 +1537,12 @@@ static const struct nla_policy devlink_
  	[DEVLINK_ATTR_SB_TC_INDEX] = { .type = NLA_U16 },
  	[DEVLINK_ATTR_ESWITCH_MODE] = { .type = NLA_U16 },
  	[DEVLINK_ATTR_ESWITCH_INLINE_MODE] = { .type = NLA_U8 },
++<<<<<<< HEAD
++=======
+ 	[DEVLINK_ATTR_ESWITCH_ENCAP_MODE] = { .type = NLA_U8 },
+ 	[DEVLINK_ATTR_DPIPE_TABLE_NAME] = { .type = NLA_NUL_STRING },
+ 	[DEVLINK_ATTR_DPIPE_TABLE_COUNTERS_ENABLED] = { .type = NLA_U8 },
++>>>>>>> f43e9b069aea (net/devlink: Add E-Switch encapsulation control)
  };
  
  static const struct genl_ops devlink_nl_ops[] = {
diff --git a/include/net/devlink.h b/include/net/devlink.h
index c838fd57d82c..5c25e3631010 100644
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@ -95,6 +95,8 @@ struct devlink_ops {
 	int (*eswitch_mode_set)(struct devlink *devlink, u16 mode);
 	int (*eswitch_inline_mode_get)(struct devlink *devlink, u8 *p_inline_mode);
 	int (*eswitch_inline_mode_set)(struct devlink *devlink, u8 inline_mode);
+	int (*eswitch_encap_mode_get)(struct devlink *devlink, u8 *p_encap_mode);
+	int (*eswitch_encap_mode_set)(struct devlink *devlink, u8 encap_mode);
 };
 
 static inline void *devlink_priv(struct devlink *devlink)
* Unmerged path include/uapi/linux/devlink.h
* Unmerged path net/core/devlink.c
