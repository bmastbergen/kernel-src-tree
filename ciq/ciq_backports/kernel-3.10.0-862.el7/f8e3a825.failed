xfs: factor our a helper to calculate the EOF alignment

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Christoph Hellwig <hch@lst.de>
commit f8e3a8257538af8dbdd15d098c0cfba6ccbabe7a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f8e3a825.failed

And drop the pointless mp argument to xfs_iomap_eof_align_last_fsb,
while we're at it.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>


(cherry picked from commit f8e3a8257538af8dbdd15d098c0cfba6ccbabe7a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_iomap.c
diff --cc fs/xfs/xfs_iomap.c
index 2f3719461cbd,918511ae115c..000000000000
--- a/fs/xfs/xfs_iomap.c
+++ b/fs/xfs/xfs_iomap.c
@@@ -43,15 -44,39 +43,48 @@@
  						<< mp->m_writeio_log)
  #define XFS_WRITE_IMAPS		XFS_BMAP_MAX_NMAP
  
++<<<<<<< HEAD
 +STATIC int
 +xfs_iomap_eof_align_last_fsb(
 +	xfs_mount_t	*mp,
 +	xfs_inode_t	*ip,
 +	xfs_extlen_t	extsize,
 +	xfs_fileoff_t	*last_fsb)
++=======
+ void
+ xfs_bmbt_to_iomap(
+ 	struct xfs_inode	*ip,
+ 	struct iomap		*iomap,
+ 	struct xfs_bmbt_irec	*imap)
+ {
+ 	struct xfs_mount	*mp = ip->i_mount;
+ 
+ 	if (imap->br_startblock == HOLESTARTBLOCK) {
+ 		iomap->blkno = IOMAP_NULL_BLOCK;
+ 		iomap->type = IOMAP_HOLE;
+ 	} else if (imap->br_startblock == DELAYSTARTBLOCK) {
+ 		iomap->blkno = IOMAP_NULL_BLOCK;
+ 		iomap->type = IOMAP_DELALLOC;
+ 	} else {
+ 		iomap->blkno = xfs_fsb_to_db(ip, imap->br_startblock);
+ 		if (imap->br_state == XFS_EXT_UNWRITTEN)
+ 			iomap->type = IOMAP_UNWRITTEN;
+ 		else
+ 			iomap->type = IOMAP_MAPPED;
+ 	}
+ 	iomap->offset = XFS_FSB_TO_B(mp, imap->br_startoff);
+ 	iomap->length = XFS_FSB_TO_B(mp, imap->br_blockcount);
+ 	iomap->bdev = xfs_find_bdev_for_inode(VFS_I(ip));
+ }
+ 
+ static xfs_extlen_t
+ xfs_eof_alignment(
+ 	struct xfs_inode	*ip,
+ 	xfs_extlen_t		extsize)
++>>>>>>> f8e3a8257538 (xfs: factor our a helper to calculate the EOF alignment)
  {
- 	xfs_extlen_t	align = 0;
- 	int		eof, error;
+ 	struct xfs_mount	*mp = ip->i_mount;
+ 	xfs_extlen_t		align = 0;
  
  	if (!XFS_IS_REALTIME_INODE(ip)) {
  		/*
* Unmerged path fs/xfs/xfs_iomap.c
