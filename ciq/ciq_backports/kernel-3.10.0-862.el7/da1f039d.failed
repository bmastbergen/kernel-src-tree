xfs: don't log the entire end of the AGF

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit da1f039d6947b1a49f13b39a6de0df2a3e9e1ed1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/da1f039d.failed

When we're logging the last non-spare field in the AGF, we don't
need to log the spare fields, so plumb in a new AGF logging flag
to help us avoid that.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Dave Chinner <david@fromorbit.com>


(cherry picked from commit da1f039d6947b1a49f13b39a6de0df2a3e9e1ed1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_alloc.c
#	fs/xfs/libxfs/xfs_format.h
diff --cc fs/xfs/libxfs/xfs_alloc.c
index 38fe0753ea05,05b5243d89f6..000000000000
--- a/fs/xfs/libxfs/xfs_alloc.c
+++ b/fs/xfs/libxfs/xfs_alloc.c
@@@ -2154,6 -2277,9 +2154,12 @@@ xfs_alloc_log_agf
  		offsetof(xfs_agf_t, agf_longest),
  		offsetof(xfs_agf_t, agf_btreeblks),
  		offsetof(xfs_agf_t, agf_uuid),
++<<<<<<< HEAD
++=======
+ 		offsetof(xfs_agf_t, agf_rmap_blocks),
+ 		/* needed so that we don't log the whole rest of the structure: */
+ 		offsetof(xfs_agf_t, agf_spare64),
++>>>>>>> da1f039d6947 (xfs: don't log the entire end of the AGF)
  		sizeof(xfs_agf_t)
  	};
  
diff --cc fs/xfs/libxfs/xfs_format.h
index f1ea950ba046,270fb5cf4fa1..000000000000
--- a/fs/xfs/libxfs/xfs_format.h
+++ b/fs/xfs/libxfs/xfs_format.h
@@@ -664,7 -673,9 +664,13 @@@ typedef struct xfs_agf 
  #define	XFS_AGF_LONGEST		0x00000400
  #define	XFS_AGF_BTREEBLKS	0x00000800
  #define	XFS_AGF_UUID		0x00001000
++<<<<<<< HEAD
 +#define	XFS_AGF_NUM_BITS	13
++=======
+ #define	XFS_AGF_RMAP_BLOCKS	0x00002000
+ #define	XFS_AGF_SPARE64		0x00004000
+ #define	XFS_AGF_NUM_BITS	15
++>>>>>>> da1f039d6947 (xfs: don't log the entire end of the AGF)
  #define	XFS_AGF_ALL_BITS	((1 << XFS_AGF_NUM_BITS) - 1)
  
  #define XFS_AGF_FLAGS \
@@@ -680,7 -691,9 +686,13 @@@
  	{ XFS_AGF_FREEBLKS,	"FREEBLKS" }, \
  	{ XFS_AGF_LONGEST,	"LONGEST" }, \
  	{ XFS_AGF_BTREEBLKS,	"BTREEBLKS" }, \
++<<<<<<< HEAD
 +	{ XFS_AGF_UUID,		"UUID" }
++=======
+ 	{ XFS_AGF_UUID,		"UUID" }, \
+ 	{ XFS_AGF_RMAP_BLOCKS,	"RMAP_BLOCKS" }, \
+ 	{ XFS_AGF_SPARE64,	"SPARE64" }
++>>>>>>> da1f039d6947 (xfs: don't log the entire end of the AGF)
  
  /* disk block (xfs_daddr_t) in the AG */
  #define XFS_AGF_DADDR(mp)	((xfs_daddr_t)(1 << (mp)->m_sectbb_log))
* Unmerged path fs/xfs/libxfs/xfs_alloc.c
* Unmerged path fs/xfs/libxfs/xfs_format.h
