drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c: fix build with gcc-4.4.4

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] ethernet/mellanox/mlx5/core/en_ethtool.c: fix build with gcc-4.4.4 (Don Dutile) [1499362]
Rebuild_FUZZ: 91.67%
commit-author Andrew Morton <akpm@linux-foundation.org>
commit e270e966868530d2667ac0a0b1080560b2965408
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e270e966.failed

drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c: In function 'mlx5e_set_rxfh':
drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c:1067: error: unknown field 'rss' specified in initializer
drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c:1067: warning: missing braces around initializer
drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c:1067: warning: (near initialization for 'rrp.<anonymous>')
drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c:1068: error: unknown field 'rss' specified in initializer
drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c:1069: warning: excess elements in struct initializer
drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c:1069: warning: (near initialization for 'rrp')

gcc-4.4.4 has issues with anonymous union initializers.  Work around this.

	Cc: Saeed Mahameed <saeedm@mellanox.com>
	Cc: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e270e966868530d2667ac0a0b1080560b2965408)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 35c9cc1953cf,af039b6c0799..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@@ -1044,11 -1056,31 +1044,34 @@@ static int mlx5e_set_rxfh(struct net_de
  		hash_changed = true;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (indir) {
+ 		memcpy(priv->channels.params.indirection_rqt, indir,
+ 		       sizeof(priv->channels.params.indirection_rqt));
+ 
+ 		if (test_bit(MLX5E_STATE_OPENED, &priv->state)) {
+ 			u32 rqtn = priv->indir_rqt.rqtn;
+ 			struct mlx5e_redirect_rqt_param rrp = {
+ 				.is_rss = true,
+ 				{
+ 					.rss = {
+ 						.hfunc = priv->channels.params.rss_hfunc,
+ 						.channels  = &priv->channels,
+ 					},
+ 				},
+ 			};
+ 
+ 			mlx5e_redirect_rqt(priv, rqtn, MLX5E_INDIR_RQT_SIZE, rrp);
+ 		}
+ 	}
+ 
++>>>>>>> e270e9668685 (drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c: fix build with gcc-4.4.4)
  	if (key) {
 -		memcpy(priv->channels.params.toeplitz_hash_key, key,
 -		       sizeof(priv->channels.params.toeplitz_hash_key));
 +		memcpy(priv->params.toeplitz_hash_key, key,
 +		       sizeof(priv->params.toeplitz_hash_key));
  		hash_changed = hash_changed ||
 -			       priv->channels.params.rss_hfunc == ETH_RSS_HASH_TOP;
 +			       priv->params.rss_hfunc == ETH_RSS_HASH_TOP;
  	}
  
  	if (hash_changed)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
