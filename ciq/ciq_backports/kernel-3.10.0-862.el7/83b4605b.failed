PCI/msi: fix the pci_alloc_irq_vectors_affinity stub

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 83b4605b0c16cde5b00c8cf192408d51eab75402
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/83b4605b.failed

We need to return an error for any call that asks for MSI / MSI-X
vectors only, so that non-trivial fallback logic can work properly.

Also valid dev->irq and use the "correct" errno value based on feedback
from Linus.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reported-by: Steven Rostedt <rostedt@goodmis.org>
Fixes: aff17164 ("PCI: Provide sensible IRQ vector alloc/free routines")
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 83b4605b0c16cde5b00c8cf192408d51eab75402)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index fa38dd95cea5,fc2e832d7b9c..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -1329,8 -1336,47 +1329,42 @@@ static inline int pci_enable_msix_range
  static inline int pci_enable_msix_exact(struct pci_dev *dev,
  		      struct msix_entry *entries, int nvec)
  { return -ENOSYS; }
++<<<<<<< HEAD
++=======
+ 
+ static inline int
+ pci_alloc_irq_vectors_affinity(struct pci_dev *dev, unsigned int min_vecs,
+ 			       unsigned int max_vecs, unsigned int flags,
+ 			       const struct irq_affinity *aff_desc)
+ {
+ 	if ((flags & PCI_IRQ_LEGACY) && min_vecs == 1 && dev->irq)
+ 		return 1;
+ 	return -ENOSPC;
+ }
+ 
+ static inline void pci_free_irq_vectors(struct pci_dev *dev)
+ {
+ }
+ 
+ static inline int pci_irq_vector(struct pci_dev *dev, unsigned int nr)
+ {
+ 	if (WARN_ON_ONCE(nr > 0))
+ 		return -EINVAL;
+ 	return dev->irq;
+ }
+ static inline const struct cpumask *pci_irq_get_affinity(struct pci_dev *pdev,
+ 		int vec)
+ {
+ 	return cpu_possible_mask;
+ }
+ 
+ static inline int pci_irq_get_node(struct pci_dev *pdev, int vec)
+ {
+ 	return first_online_node;
+ }
++>>>>>>> 83b4605b0c16 (PCI/msi: fix the pci_alloc_irq_vectors_affinity stub)
  #endif
  
 -static inline int
 -pci_alloc_irq_vectors(struct pci_dev *dev, unsigned int min_vecs,
 -		      unsigned int max_vecs, unsigned int flags)
 -{
 -	return pci_alloc_irq_vectors_affinity(dev, min_vecs, max_vecs, flags,
 -					      NULL);
 -}
 -
  #ifdef CONFIG_PCIEPORTBUS
  extern bool pcie_ports_disabled;
  extern bool pcie_ports_auto;
* Unmerged path include/linux/pci.h
