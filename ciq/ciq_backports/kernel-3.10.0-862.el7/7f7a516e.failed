cpufreq: intel_pstate: Use CPU load based algorithm for PM_MOBILE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [cpufreq] intel_pstate: Use CPU load based algorithm for PM_MOBILE (Prarit Bhargava) [1465349]
Rebuild_FUZZ: 92.56%
commit-author Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
commit 7f7a516ee30a931fa2d257b39f5ef7b9196c56fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7f7a516e.failed

Use get_target_pstate_use_cpu_load() to calculate target P-State for
devices, with the preferred power management profile in ACPI FADT
set to PM_MOBILE.

This may help in resolving some thermal issues caused by low sustained
cpu bound workloads. The current algorithm tend to over provision in this
case as it doesn't look at the CPU busyness.

Also included the fix from Arnd Bergmann <arnd@arndb.de> to solve compile
issue, when CONFIG_ACPI is not defined.

	Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 7f7a516ee30a931fa2d257b39f5ef7b9196c56fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 2849fe3729b8,f07e591c0e1f..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -1567,7 -1771,20 +1567,24 @@@ static void copy_pid_params(struct psta
  	pid_params.setpoint = policy->setpoint;
  }
  
++<<<<<<< HEAD
 +static void copy_cpu_funcs(struct pstate_funcs *funcs)
++=======
+ #ifdef CONFIG_ACPI
+ static void intel_pstate_use_acpi_profile(void)
+ {
+ 	if (acpi_gbl_FADT.preferred_profile == PM_MOBILE)
+ 		pstate_funcs.get_target_pstate =
+ 				get_target_pstate_use_cpu_load;
+ }
+ #else
+ static void intel_pstate_use_acpi_profile(void)
+ {
+ }
+ #endif
+ 
+ static void __init copy_cpu_funcs(struct pstate_funcs *funcs)
++>>>>>>> 7f7a516ee30a (cpufreq: intel_pstate: Use CPU load based algorithm for PM_MOBILE)
  {
  	pstate_funcs.get_max   = funcs->get_max;
  	pstate_funcs.get_max_physical = funcs->get_max_physical;
* Unmerged path drivers/cpufreq/intel_pstate.c
