vmbus: re-enable channel tasklet

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Stephen Hemminger <stephen@networkplumber.org>
commit 6463a4571ceefc43908df4b016d8d5d8b8e85357
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6463a457.failed

This problem shows up in 4.11 when netvsc driver is removed and reloaded.
The problem is that the channel is closed during module removal and the
tasklet for processing responses is disabled. When module is reloaded
the channel is reopened but the tasklet is marked as disabled.
The fix is to re-enable tasklet at the end of close which gets it back
to the initial state.

The issue is less urgent in 4.12 since network driver now uses NAPI
and not the tasklet; and other VMBUS devices are rarely unloaded/reloaded.

Fixes: dad72a1d2844 ("vmbus: remove hv_event_tasklet_disable/enable")

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6463a4571ceefc43908df4b016d8d5d8b8e85357)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel.c
diff --cc drivers/hv/channel.c
index fe4f1e75543b,e57cc40cb768..000000000000
--- a/drivers/hv/channel.c
+++ b/drivers/hv/channel.c
@@@ -599,8 -606,8 +599,13 @@@ static int vmbus_close_internal(struct 
  		get_order(channel->ringbuffer_pagecount * PAGE_SIZE));
  
  out:
++<<<<<<< HEAD
 +	hv_event_tasklet_enable(channel);
 +
++=======
+ 	/* re-enable tasklet for use on re-open */
+ 	tasklet_enable(&channel->callback_event);
++>>>>>>> 6463a4571cee (vmbus: re-enable channel tasklet)
  	return ret;
  }
  
* Unmerged path drivers/hv/channel.c
