IB/core: Add support for RoCEv2 multicast

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Noa Osherovich <noaos@mellanox.com>
commit 9636a56fa864464896bf7d1272c701f2b9a57737
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9636a56f.failed

When creating address handle from multicast GID, set MAC according to
the appropriate formula instead of searching for it in the GID table:
- For IPv4 multicast GID use ip_eth_mc_map().
- For IPv6 multicast GID use ipv6_eth_mc_map().

	Signed-off-by: Noa Osherovich <noaos@mellanox.com>
	Reviewed-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 9636a56fa864464896bf7d1272c701f2b9a57737)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/verbs.c
diff --cc drivers/infiniband/core/verbs.c
index de690d49ac32,e8006677b01c..000000000000
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@@ -1215,19 -1228,34 +1215,39 @@@ int ib_modify_qp_is_ok(enum ib_qp_stat
  EXPORT_SYMBOL(ib_modify_qp_is_ok);
  
  int ib_resolve_eth_dmac(struct ib_device *device,
 -			struct rdma_ah_attr *ah_attr)
 +			struct ib_ah_attr *ah_attr)
  {
  	int           ret = 0;
 -	struct ib_global_route *grh;
  
 -	if (!rdma_is_port_valid(device, rdma_ah_get_port_num(ah_attr)))
 +	if (!rdma_is_port_valid(device, ah_attr->port_num))
  		return -EINVAL;
  
 -	if (ah_attr->type != RDMA_AH_ATTR_TYPE_ROCE)
 +	if (!rdma_cap_eth_ah(device, ah_attr->port_num))
  		return 0;
  
++<<<<<<< HEAD
 +	if (rdma_link_local_addr((struct in6_addr *)ah_attr->grh.dgid.raw)) {
 +		rdma_get_ll_mac((struct in6_addr *)ah_attr->grh.dgid.raw,
 +				ah_attr->dmac);
++=======
+ 	grh = rdma_ah_retrieve_grh(ah_attr);
+ 
+ 	if (rdma_link_local_addr((struct in6_addr *)grh->dgid.raw)) {
+ 		rdma_get_ll_mac((struct in6_addr *)grh->dgid.raw,
+ 				ah_attr->roce.dmac);
+ 		return 0;
+ 	}
+ 	if (rdma_is_multicast_addr((struct in6_addr *)ah_attr->grh.dgid.raw)) {
+ 		if (ipv6_addr_v4mapped((struct in6_addr *)ah_attr->grh.dgid.raw)) {
+ 			__be32 addr = 0;
+ 
+ 			memcpy(&addr, ah_attr->grh.dgid.raw + 12, 4);
+ 			ip_eth_mc_map(addr, (char *)ah_attr->roce.dmac);
+ 		} else {
+ 			ipv6_eth_mc_map((struct in6_addr *)ah_attr->grh.dgid.raw,
+ 					(char *)ah_attr->roce.dmac);
+ 		}
++>>>>>>> 9636a56fa864 (IB/core: Add support for RoCEv2 multicast)
  	} else {
  		union ib_gid		sgid;
  		struct ib_gid_attr	sgid_attr;
* Unmerged path drivers/infiniband/core/verbs.c
