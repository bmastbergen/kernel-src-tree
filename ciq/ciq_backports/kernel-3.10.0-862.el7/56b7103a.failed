nvme-fc: remove use of FC-specific error codes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author James Smart <jsmart2021@gmail.com>
commit 56b7103a06083b8ce1160f8289460ba2f584e182
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/56b7103a.failed

The FC-NVME transport used the FC-specific error codes in cases where
it had to fabricate an error to go back up stack. Instead of using the
FC-specific values, now use a generic value (NVME_SC_INTERNAL).

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 56b7103a06083b8ce1160f8289460ba2f584e182)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fc.c
diff --cc drivers/nvme/host/fc.c
index 2b14e44b6461,9100779b58c9..000000000000
--- a/drivers/nvme/host/fc.c
+++ b/drivers/nvme/host/fc.c
@@@ -1249,9 -1374,9 +1249,15 @@@ nvme_fc_fcpio_done(struct nvmefc_fcp_re
  				sizeof(op->rsp_iu), DMA_FROM_DEVICE);
  
  	if (atomic_read(&op->state) == FCPOP_STATE_ABORTED)
++<<<<<<< HEAD
 +		status = NVME_SC_ABORT_REQ | NVME_SC_DNR;
 +	else
 +		status = freq->status;
++=======
+ 		status = cpu_to_le16((NVME_SC_ABORT_REQ | NVME_SC_DNR) << 1);
+ 	else if (freq->status)
+ 		status = cpu_to_le16(NVME_SC_INTERNAL << 1);
++>>>>>>> 56b7103a0608 (nvme-fc: remove use of FC-specific error codes)
  
  	/*
  	 * For the linux implementation, if we have an unsuccesful
@@@ -1279,10 -1404,10 +1285,14 @@@
  		 */
  		if (freq->transferred_length !=
  			be32_to_cpu(op->cmd_iu.data_len)) {
++<<<<<<< HEAD
 +			status = -EIO;
++=======
+ 			status = cpu_to_le16(NVME_SC_INTERNAL << 1);
++>>>>>>> 56b7103a0608 (nvme-fc: remove use of FC-specific error codes)
  			goto done;
  		}
 -		result.u64 = 0;
 +		op->nreq.result.u64 = 0;
  		break;
  
  	case sizeof(struct nvme_fc_ersp_iu):
@@@ -1294,16 -1419,17 +1304,26 @@@
  					(freq->rcv_rsplen / 4) ||
  			     be32_to_cpu(op->rsp_iu.xfrd_len) !=
  					freq->transferred_length ||
++<<<<<<< HEAD
 +			     op->rqno != le16_to_cpu(cqe->command_id))) {
 +			status = -EIO;
++=======
+ 			     op->rsp_iu.status_code ||
+ 			     sqe->common.command_id != cqe->command_id)) {
+ 			status = cpu_to_le16(NVME_SC_INTERNAL << 1);
++>>>>>>> 56b7103a0608 (nvme-fc: remove use of FC-specific error codes)
  			goto done;
  		}
 -		result = cqe->result;
 -		status = cqe->status;
 +		op->nreq.result = cqe->result;
 +		status = le16_to_cpu(cqe->status) >> 1;
  		break;
  
  	default:
++<<<<<<< HEAD
 +		status = -EIO;
++=======
+ 		status = cpu_to_le16(NVME_SC_INTERNAL << 1);
++>>>>>>> 56b7103a0608 (nvme-fc: remove use of FC-specific error codes)
  		goto done;
  	}
  
* Unmerged path drivers/nvme/host/fc.c
