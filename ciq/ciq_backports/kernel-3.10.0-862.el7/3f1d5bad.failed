ext4: fix off-by-in in loop termination in ext4_find_unwritten_pgoff()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [fs] ext4: fix off-by-in loop termination in ext4_find_unwritten_pgoff() (Bill O'Donnell) [1469363]
Rebuild_FUZZ: 97.81%
commit-author Jan Kara <jack@suse.cz>
commit 3f1d5bad3fae983da07be01cff2fde13293bb7b9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3f1d5bad.failed

There is an off-by-one error in loop termination conditions in
ext4_find_unwritten_pgoff() since 'end' may index a page beyond end of
desired range if 'endoff' is page aligned. It doesn't have any visible
effects but still it is good to fix it.

	Signed-off-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit 3f1d5bad3fae983da07be01cff2fde13293bb7b9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/file.c
diff --cc fs/ext4/file.c
index b5c54ce20df9,2b00bf84c05b..000000000000
--- a/fs/ext4/file.c
+++ b/fs/ext4/file.c
@@@ -419,8 -473,8 +419,13 @@@ static int ext4_find_unwritten_pgoff(st
  	lastoff = startoff;
  	endoff = (loff_t)end_blk << blkbits;
  
++<<<<<<< HEAD
 +	index = startoff >> PAGE_CACHE_SHIFT;
 +	end = endoff >> PAGE_CACHE_SHIFT;
++=======
+ 	index = startoff >> PAGE_SHIFT;
+ 	end = (endoff - 1) >> PAGE_SHIFT;
++>>>>>>> 3f1d5bad3fae (ext4: fix off-by-in in loop termination in ext4_find_unwritten_pgoff())
  
  	pagevec_init(&pvec, 0);
  	do {
* Unmerged path fs/ext4/file.c
