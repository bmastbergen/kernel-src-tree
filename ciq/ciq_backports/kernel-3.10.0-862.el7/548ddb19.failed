iw_cxgb4: Remove __func__ parameter from pr_debug()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bharat Potnuri <bharat@chelsio.com>
commit 548ddb19afbabf8f7af7a900c19d0f0705d6dc90
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/548ddb19.failed

pr_debug() can be enabled to print function names, So removing the
unwanted __func__ parameters from debug logs.
Realign function parameters.

	Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 548ddb19afbabf8f7af7a900c19d0f0705d6dc90)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/cm.c
#	drivers/infiniband/hw/cxgb4/cq.c
#	drivers/infiniband/hw/cxgb4/device.c
#	drivers/infiniband/hw/cxgb4/iw_cxgb4.h
#	drivers/infiniband/hw/cxgb4/mem.c
#	drivers/infiniband/hw/cxgb4/provider.c
#	drivers/infiniband/hw/cxgb4/qp.c
#	drivers/infiniband/hw/cxgb4/resource.c
#	drivers/infiniband/hw/cxgb4/t4.h
diff --cc drivers/infiniband/hw/cxgb4/cm.c
index 9b70d4724eb7,23cb4af8ce09..000000000000
--- a/drivers/infiniband/hw/cxgb4/cm.c
+++ b/drivers/infiniband/hw/cxgb4/cm.c
@@@ -180,7 -180,7 +180,11 @@@ static void ref_qp(struct c4iw_ep *ep
  
  static void start_ep_timer(struct c4iw_ep *ep)
  {
++<<<<<<< HEAD
 +	PDBG("%s ep %p\n", __func__, ep);
++=======
+ 	pr_debug("ep %p\n", ep);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (timer_pending(&ep->timer)) {
  		pr_err("%s timer already started! ep %p\n",
  		       __func__, ep);
@@@ -196,7 -196,7 +200,11 @@@
  
  static int stop_ep_timer(struct c4iw_ep *ep)
  {
++<<<<<<< HEAD
 +	PDBG("%s ep %p stopping\n", __func__, ep);
++=======
+ 	pr_debug("ep %p stopping\n", ep);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	del_timer_sync(&ep->timer);
  	if (!test_and_set_bit(TIMEOUT, &ep->com.flags)) {
  		c4iw_put_ep(&ep->com);
@@@ -263,10 -263,10 +271,17 @@@ static void set_emss(struct c4iw_ep *ep
  	if (ep->emss < 128)
  		ep->emss = 128;
  	if (ep->emss & 7)
++<<<<<<< HEAD
 +		PDBG("Warning: misaligned mtu idx %u mss %u emss=%u\n",
 +		     TCPOPT_MSS_G(opt), ep->mss, ep->emss);
 +	PDBG("%s mss_idx %u mss %u emss=%u\n", __func__, TCPOPT_MSS_G(opt),
 +	     ep->mss, ep->emss);
++=======
+ 		pr_debug("Warning: misaligned mtu idx %u mss %u emss=%u\n",
+ 			 TCPOPT_MSS_G(opt), ep->mss, ep->emss);
+ 	pr_debug("mss_idx %u mss %u emss=%u\n", TCPOPT_MSS_G(opt), ep->mss,
+ 		 ep->emss);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  }
  
  static enum c4iw_ep_state state_read(struct c4iw_ep_common *epc)
@@@ -287,7 -287,7 +302,11 @@@ static void __state_set(struct c4iw_ep_
  static void state_set(struct c4iw_ep_common *epc, enum c4iw_ep_state new)
  {
  	mutex_lock(&epc->mutex);
++<<<<<<< HEAD
 +	PDBG("%s - %s -> %s\n", __func__, states[epc->state], states[new]);
++=======
+ 	pr_debug("%s -> %s\n", states[epc->state], states[new]);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	__state_set(epc, new);
  	mutex_unlock(&epc->mutex);
  	return;
@@@ -322,7 -322,7 +341,11 @@@ static void *alloc_ep(int size, gfp_t g
  		mutex_init(&epc->mutex);
  		c4iw_init_wr_wait(&epc->wr_wait);
  	}
++<<<<<<< HEAD
 +	PDBG("%s alloc ep %p\n", __func__, epc);
++=======
+ 	pr_debug("alloc ep %p\n", epc);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return epc;
  }
  
@@@ -384,7 -384,7 +407,11 @@@ void _c4iw_free_ep(struct kref *kref
  	struct c4iw_ep *ep;
  
  	ep = container_of(kref, struct c4iw_ep, com.kref);
++<<<<<<< HEAD
 +	PDBG("%s ep %p state %s\n", __func__, ep, states[ep->com.state]);
++=======
+ 	pr_debug("ep %p state %s\n", ep, states[ep->com.state]);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (test_bit(QP_REFERENCED, &ep->com.flags))
  		deref_qp(ep);
  	if (test_bit(RELEASE_RESOURCES, &ep->com.flags)) {
@@@ -570,7 -570,7 +597,11 @@@ static void abort_arp_failure(void *han
  	struct c4iw_rdev *rdev = &ep->com.dev->rdev;
  	struct cpl_abort_req *req = cplhdr(skb);
  
++<<<<<<< HEAD
 +	PDBG("%s rdev %p\n", __func__, rdev);
++=======
+ 	pr_debug("rdev %p\n", rdev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	req->cmd = CPL_ABORT_NO_RST;
  	skb_get(skb);
  	ret = c4iw_ofld_send(rdev, skb);
@@@ -647,7 -647,7 +678,11 @@@ static int send_halfclose(struct c4iw_e
  	struct sk_buff *skb = skb_dequeue(&ep->com.ep_skb_list);
  	u32 wrlen = roundup(sizeof(struct cpl_close_con_req), 16);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (WARN_ON(!skb))
  		return -ENOMEM;
  
@@@ -662,7 -662,7 +697,11 @@@ static int send_abort(struct c4iw_ep *e
  	u32 wrlen = roundup(sizeof(struct cpl_abort_req), 16);
  	struct sk_buff *req_skb = skb_dequeue(&ep->com.ep_skb_list);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (WARN_ON(!req_skb))
  		return -ENOMEM;
  
@@@ -725,7 -725,7 +764,11 @@@ static int send_connect(struct c4iw_ep 
  			roundup(sizev4, 16) :
  			roundup(sizev6, 16);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p atid %u\n", __func__, ep, ep->atid);
++=======
+ 	pr_debug("ep %p atid %u\n", ep, ep->atid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	skb = get_skb(NULL, wrlen, GFP_KERNEL);
  	if (!skb) {
@@@ -827,7 -824,7 +870,11 @@@
  				t5req->params =
  					  cpu_to_be64(FILTER_TUPLE_V(params));
  				t5req->rsvd = cpu_to_be32(isn);
++<<<<<<< HEAD
 +				PDBG("%s snd_isn %u\n", __func__, t5req->rsvd);
++=======
+ 			pr_debug("snd_isn %u\n", t5req->rsvd);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  				t5req->opt2 = cpu_to_be32(opt2);
  			} else {
  				t6req->params =
@@@ -882,7 -877,7 +929,11 @@@
  				t5req6->params =
  					    cpu_to_be64(FILTER_TUPLE_V(params));
  				t5req6->rsvd = cpu_to_be32(isn);
++<<<<<<< HEAD
 +				PDBG("%s snd_isn %u\n", __func__, t5req6->rsvd);
++=======
+ 			pr_debug("snd_isn %u\n", t5req6->rsvd);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  				t5req6->opt2 = cpu_to_be32(opt2);
  			} else {
  				t6req6->params =
@@@ -912,7 -907,8 +963,12 @@@ static int send_mpa_req(struct c4iw_ep 
  	struct mpa_message *mpa;
  	struct mpa_v2_conn_params mpa_v2_params;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u pd_len %d\n", __func__, ep, ep->hwtid, ep->plen);
++=======
+ 	pr_debug("ep %p tid %u pd_len %d\n",
+ 		 ep, ep->hwtid, ep->plen);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	BUG_ON(skb_cloned(skb));
  
@@@ -966,8 -961,8 +1022,13 @@@
  	if (mpa_rev_to_use == 2) {
  		mpa->private_data_size = htons(ntohs(mpa->private_data_size) +
  					       sizeof (struct mpa_v2_conn_params));
++<<<<<<< HEAD
 +		PDBG("%s initiator ird %u ord %u\n", __func__, ep->ird,
 +		     ep->ord);
++=======
+ 		pr_debug("initiator ird %u ord %u\n", ep->ird,
+ 			 ep->ord);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		mpa_v2_params.ird = htons((u16)ep->ird);
  		mpa_v2_params.ord = htons((u16)ep->ord);
  
@@@ -1019,7 -1014,8 +1080,12 @@@ static int send_mpa_reject(struct c4iw_
  	struct sk_buff *skb;
  	struct mpa_v2_conn_params mpa_v2_params;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u pd_len %d\n", __func__, ep, ep->hwtid, ep->plen);
++=======
+ 	pr_debug("ep %p tid %u pd_len %d\n",
+ 		 ep, ep->hwtid, ep->plen);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mpalen = sizeof(*mpa) + plen;
  	if (ep->mpa_attr.version == 2 && ep->mpa_attr.enhanced_rdma_conn)
@@@ -1099,7 -1094,8 +1165,12 @@@ static int send_mpa_reply(struct c4iw_e
  	struct sk_buff *skb;
  	struct mpa_v2_conn_params mpa_v2_params;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u pd_len %d\n", __func__, ep, ep->hwtid, ep->plen);
++=======
+ 	pr_debug("ep %p tid %u pd_len %d\n",
+ 		 ep, ep->hwtid, ep->plen);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mpalen = sizeof(*mpa) + plen;
  	if (ep->mpa_attr.version == 2 && ep->mpa_attr.enhanced_rdma_conn)
@@@ -1190,8 -1185,8 +1261,13 @@@ static int act_establish(struct c4iw_de
  
  	ep = lookup_atid(t, atid);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u snd_isn %u rcv_isn %u\n", __func__, ep, tid,
 +	     be32_to_cpu(req->snd_isn), be32_to_cpu(req->rcv_isn));
++=======
+ 	pr_debug("ep %p tid %u snd_isn %u rcv_isn %u\n", ep, tid,
+ 		 be32_to_cpu(req->snd_isn), be32_to_cpu(req->rcv_isn));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mutex_lock(&ep->com.mutex);
  	dst_confirm(ep->dst);
@@@ -1234,7 -1229,7 +1310,11 @@@ static void close_complete_upcall(struc
  {
  	struct iw_cm_event event;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&event, 0, sizeof(event));
  	event.event = IW_CM_EVENT_CLOSE;
  	event.status = status;
@@@ -1251,7 -1246,7 +1331,11 @@@ static void peer_close_upcall(struct c4
  {
  	struct iw_cm_event event;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&event, 0, sizeof(event));
  	event.event = IW_CM_EVENT_DISCONNECT;
  	if (ep->com.cm_id) {
@@@ -1266,7 -1261,7 +1350,11 @@@ static void peer_abort_upcall(struct c4
  {
  	struct iw_cm_event event;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&event, 0, sizeof(event));
  	event.event = IW_CM_EVENT_CLOSE;
  	event.status = -ECONNRESET;
@@@ -1283,7 -1278,8 +1371,12 @@@ static void connect_reply_upcall(struc
  {
  	struct iw_cm_event event;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u status %d\n", __func__, ep, ep->hwtid, status);
++=======
+ 	pr_debug("ep %p tid %u status %d\n",
+ 		 ep, ep->hwtid, status);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&event, 0, sizeof(event));
  	event.event = IW_CM_EVENT_CONNECT_REPLY;
  	event.status = status;
@@@ -1312,8 -1308,8 +1405,13 @@@
  		}
  	}
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u status %d\n", __func__, ep,
 +	     ep->hwtid, status);
++=======
+ 	pr_debug("ep %p tid %u status %d\n", ep,
+ 		 ep->hwtid, status);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	set_bit(CONN_RPL_UPCALL, &ep->com.history);
  	ep->com.cm_id->event_handler(ep->com.cm_id, &event);
  
@@@ -1326,7 -1322,7 +1424,11 @@@ static int connect_request_upcall(struc
  	struct iw_cm_event event;
  	int ret;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&event, 0, sizeof(event));
  	event.event = IW_CM_EVENT_CONNECT_REQUEST;
  	memcpy(&event.local_addr, &ep->com.local_addr,
@@@ -1363,13 -1359,13 +1465,21 @@@ static void established_upcall(struct c
  {
  	struct iw_cm_event event;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&event, 0, sizeof(event));
  	event.event = IW_CM_EVENT_ESTABLISHED;
  	event.ird = ep->ord;
  	event.ord = ep->ird;
  	if (ep->com.cm_id) {
++<<<<<<< HEAD
 +		PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 		pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		ep->com.cm_id->event_handler(ep->com.cm_id, &event);
  		set_bit(ESTAB_UPCALL, &ep->com.history);
  	}
@@@ -1381,10 -1377,11 +1491,15 @@@ static int update_rx_credits(struct c4i
  	u32 wrlen = roundup(sizeof(struct cpl_rx_data_ack), 16);
  	u32 credit_dack;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u credits %u\n", __func__, ep, ep->hwtid, credits);
++=======
+ 	pr_debug("ep %p tid %u credits %u\n",
+ 		 ep, ep->hwtid, credits);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	skb = get_skb(NULL, wrlen, GFP_KERNEL);
  	if (!skb) {
 -		pr_err("update_rx_credits - cannot alloc skb!\n");
 +		printk(KERN_ERR MOD "update_rx_credits - cannot alloc skb!\n");
  		return 0;
  	}
  
@@@ -1432,7 -1429,7 +1547,11 @@@ static int process_mpa_reply(struct c4i
  	int err;
  	int disconnect = 0;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * If we get more than the supported amount of private data
@@@ -1530,8 -1527,8 +1649,13 @@@
  				MPA_V2_IRD_ORD_MASK;
  			resp_ord = ntohs(mpa_v2_params->ord) &
  				MPA_V2_IRD_ORD_MASK;
++<<<<<<< HEAD
 +			PDBG("%s responder ird %u ord %u ep ird %u ord %u\n",
 +			     __func__, resp_ird, resp_ord, ep->ird, ep->ord);
++=======
+ 			pr_debug("responder ird %u ord %u ep ird %u ord %u\n",
+ 				 resp_ird, resp_ord, ep->ird, ep->ord);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  			/*
  			 * This is a double-check. Ideally, below checks are
@@@ -1575,12 -1572,11 +1699,20 @@@
  		if (peer2peer)
  			ep->mpa_attr.p2p_type = p2p_type;
  
++<<<<<<< HEAD
 +	PDBG("%s - crc_enabled=%d, recv_marker_enabled=%d, "
 +	     "xmit_marker_enabled=%d, version=%d p2p_type=%d local-p2p_type = "
 +	     "%d\n", __func__, ep->mpa_attr.crc_enabled,
 +	     ep->mpa_attr.recv_marker_enabled,
 +	     ep->mpa_attr.xmit_marker_enabled, ep->mpa_attr.version,
 +	     ep->mpa_attr.p2p_type, p2p_type);
++=======
+ 	pr_debug("crc_enabled=%d, recv_marker_enabled=%d, xmit_marker_enabled=%d, version=%d p2p_type=%d local-p2p_type = %d\n",
+ 		 ep->mpa_attr.crc_enabled,
+ 		 ep->mpa_attr.recv_marker_enabled,
+ 		 ep->mpa_attr.xmit_marker_enabled, ep->mpa_attr.version,
+ 		 ep->mpa_attr.p2p_type, p2p_type);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * If responder's RTR does not match with that of initiator, assign
@@@ -1674,7 -1669,7 +1806,11 @@@ static int process_mpa_request(struct c
  	struct mpa_v2_conn_params *mpa_v2_params;
  	u16 plen;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * If we get more than the supported amount of private data
@@@ -1683,7 -1678,7 +1819,11 @@@
  	if (ep->mpa_pkt_len + skb->len > sizeof(ep->mpa_pkt))
  		goto err_stop_timer;
  
++<<<<<<< HEAD
 +	PDBG("%s enter (%s line %u)\n", __func__, __FILE__, __LINE__);
++=======
+ 	pr_debug("enter (%s line %u)\n", __FILE__, __LINE__);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * Copy the new data into our accumulation buffer.
@@@ -1699,7 -1694,7 +1839,11 @@@
  	if (ep->mpa_pkt_len < sizeof(*mpa))
  		return 0;
  
++<<<<<<< HEAD
 +	PDBG("%s enter (%s line %u)\n", __func__, __FILE__, __LINE__);
++=======
+ 	pr_debug("enter (%s line %u)\n", __FILE__, __LINE__);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mpa = (struct mpa_message *) ep->mpa_pkt;
  
  	/*
@@@ -1762,8 -1757,8 +1906,13 @@@
  				MPA_V2_IRD_ORD_MASK;
  			ep->ord = min_t(u32, ep->ord,
  					cur_max_read_depth(ep->com.dev));
++<<<<<<< HEAD
 +			PDBG("%s initiator ird %u ord %u\n", __func__, ep->ird,
 +			     ep->ord);
++=======
+ 			pr_debug("initiator ird %u ord %u\n",
+ 				 ep->ird, ep->ord);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			if (ntohs(mpa_v2_params->ird) & MPA_V2_PEER2PEER_MODEL)
  				if (peer2peer) {
  					if (ntohs(mpa_v2_params->ord) &
@@@ -1780,11 -1775,10 +1929,18 @@@
  		if (peer2peer)
  			ep->mpa_attr.p2p_type = p2p_type;
  
++<<<<<<< HEAD
 +	PDBG("%s - crc_enabled=%d, recv_marker_enabled=%d, "
 +	     "xmit_marker_enabled=%d, version=%d p2p_type=%d\n", __func__,
 +	     ep->mpa_attr.crc_enabled, ep->mpa_attr.recv_marker_enabled,
 +	     ep->mpa_attr.xmit_marker_enabled, ep->mpa_attr.version,
 +	     ep->mpa_attr.p2p_type);
++=======
+ 	pr_debug("crc_enabled=%d, recv_marker_enabled=%d, xmit_marker_enabled=%d, version=%d p2p_type=%d\n",
+ 		 ep->mpa_attr.crc_enabled, ep->mpa_attr.recv_marker_enabled,
+ 		 ep->mpa_attr.xmit_marker_enabled, ep->mpa_attr.version,
+ 		 ep->mpa_attr.p2p_type);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	__state_set(&ep->com, MPA_REQ_RCVD);
  
@@@ -1820,7 -1814,7 +1976,11 @@@ static int rx_data(struct c4iw_dev *dev
  	ep = get_ep_from_tid(dev, tid);
  	if (!ep)
  		return 0;
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u dlen %u\n", __func__, ep, ep->hwtid, dlen);
++=======
+ 	pr_debug("ep %p tid %u dlen %u\n", ep, ep->hwtid, dlen);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	skb_pull(skb, sizeof(*hdr));
  	skb_trim(skb, dlen);
  	mutex_lock(&ep->com.mutex);
@@@ -1871,10 -1865,10 +2031,14 @@@ static int abort_rpl(struct c4iw_dev *d
  
  	ep = get_ep_from_tid(dev, tid);
  	if (!ep) {
 -		pr_warn("Abort rpl to freed endpoint\n");
 +		printk(KERN_WARNING MOD "Abort rpl to freed endpoint\n");
  		return 0;
  	}
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&ep->com.mutex);
  	switch (ep->com.state) {
  	case ABORTING:
@@@ -2000,7 -1992,8 +2164,12 @@@ static void set_tcp_window(struct c4iw_
  {
  	ep->snd_win = snd_win;
  	ep->rcv_win = rcv_win;
++<<<<<<< HEAD
 +	PDBG("%s snd_win %d rcv_win %d\n", __func__, ep->snd_win, ep->rcv_win);
++=======
+ 	pr_debug("snd_win %d rcv_win %d\n",
+ 		 ep->snd_win, ep->rcv_win);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  }
  
  #define ACT_OPEN_RETRY_COUNT 2
@@@ -2104,7 -2098,7 +2273,11 @@@ static int c4iw_reconnect(struct c4iw_e
  	int iptype;
  	__u8 *ra;
  
++<<<<<<< HEAD
 +	PDBG("%s qp %p cm_id %p\n", __func__, ep->com.qp, ep->com.cm_id);
++=======
+ 	pr_debug("qp %p cm_id %p\n", ep->com.qp, ep->com.cm_id);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	init_timer(&ep->timer);
  	c4iw_init_wr_wait(&ep->com.wr_wait);
  
@@@ -2167,9 -2161,9 +2340,15 @@@
  		goto fail4;
  	}
  
++<<<<<<< HEAD
 +	PDBG("%s txq_idx %u tx_chan %u smac_idx %u rss_qid %u l2t_idx %u\n",
 +	     __func__, ep->txq_idx, ep->tx_chan, ep->smac_idx, ep->rss_qid,
 +	     ep->l2t->idx);
++=======
+ 	pr_debug("txq_idx %u tx_chan %u smac_idx %u rss_qid %u l2t_idx %u\n",
+ 		 ep->txq_idx, ep->tx_chan, ep->smac_idx, ep->rss_qid,
+ 		 ep->l2t->idx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	state_set(&ep->com, CONNECTING);
  	ep->tos = ep->com.cm_id->tos;
@@@ -2219,12 -2213,12 +2398,21 @@@ static int act_open_rpl(struct c4iw_de
  	la6 = (struct sockaddr_in6 *)&ep->com.local_addr;
  	ra6 = (struct sockaddr_in6 *)&ep->com.remote_addr;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p atid %u status %u errno %d\n", __func__, ep, atid,
 +	     status, status2errno(status));
 +
 +	if (cxgb_is_neg_adv(status)) {
 +		PDBG("%s Connection problems for atid %u status %u (%s)\n",
 +		     __func__, atid, status, neg_adv_str(status));
++=======
+ 	pr_debug("ep %p atid %u status %u errno %d\n", ep, atid,
+ 		 status, status2errno(status));
+ 
+ 	if (cxgb_is_neg_adv(status)) {
+ 		pr_debug("Connection problems for atid %u status %u (%s)\n",
+ 			 atid, status, neg_adv_str(status));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		ep->stats.connect_neg_adv++;
  		mutex_lock(&dev->rdev.stats.lock);
  		dev->rdev.stats.neg_adv++;
@@@ -2320,11 -2314,11 +2508,16 @@@ static int pass_open_rpl(struct c4iw_de
  	struct c4iw_listen_ep *ep = get_ep_from_stid(dev, stid);
  
  	if (!ep) {
 -		pr_debug("%s stid %d lookup failure!\n", __func__, stid);
 +		PDBG("%s stid %d lookup failure!\n", __func__, stid);
  		goto out;
  	}
++<<<<<<< HEAD
 +	PDBG("%s ep %p status %d error %d\n", __func__, ep,
 +	     rpl->status, status2errno(rpl->status));
++=======
+ 	pr_debug("ep %p status %d error %d\n", ep,
+ 		 rpl->status, status2errno(rpl->status));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	c4iw_wake_up(&ep->com.wr_wait, status2errno(rpl->status));
  	c4iw_put_ep(&ep->com);
  out:
@@@ -2337,9 -2331,14 +2530,17 @@@ static int close_listsrv_rpl(struct c4i
  	unsigned int stid = GET_TID(rpl);
  	struct c4iw_listen_ep *ep = get_ep_from_stid(dev, stid);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p\n", __func__, ep);
++=======
+ 	if (!ep) {
+ 		pr_debug("%s stid %d lookup failure!\n", __func__, stid);
+ 		goto out;
+ 	}
+ 	pr_debug("ep %p\n", ep);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	c4iw_wake_up(&ep->com.wr_wait, status2errno(rpl->status));
  	c4iw_put_ep(&ep->com);
 -out:
  	return 0;
  }
  
@@@ -2355,7 -2354,7 +2556,11 @@@ static int accept_cr(struct c4iw_ep *ep
  	int win;
  	enum chip_type adapter_type = ep->com.dev->rdev.lldi.adapter_type;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	BUG_ON(skb_cloned(skb));
  
  	skb_get(skb);
@@@ -2426,7 -2425,7 +2631,11 @@@
  		if (peer2peer)
  			isn += 4;
  		rpl5->iss = cpu_to_be32(isn);
++<<<<<<< HEAD
 +		PDBG("%s iss %u\n", __func__, be32_to_cpu(rpl5->iss));
++=======
+ 		pr_debug("iss %u\n", be32_to_cpu(rpl5->iss));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	}
  
  	rpl->opt0 = cpu_to_be64(opt0);
@@@ -2439,7 -2438,7 +2648,11 @@@
  
  static void reject_cr(struct c4iw_dev *dev, u32 hwtid, struct sk_buff *skb)
  {
++<<<<<<< HEAD
 +	PDBG("%s c4iw_dev %p tid %u\n", __func__, dev, hwtid);
++=======
+ 	pr_debug("c4iw_dev %p tid %u\n", dev, hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	BUG_ON(skb_cloned(skb));
  	skb_trim(skb, sizeof(struct cpl_tid_release));
  	release_tid(&dev->rdev, hwtid, skb);
@@@ -2479,18 -2479,18 +2692,32 @@@ static int pass_accept_req(struct c4iw_
  
  	/* Find output route */
  	if (iptype == 4)  {
++<<<<<<< HEAD
 +		PDBG("%s parent ep %p hwtid %u laddr %pI4 raddr %pI4 lport %d rport %d peer_mss %d\n"
 +		     , __func__, parent_ep, hwtid,
 +		     local_ip, peer_ip, ntohs(local_port),
 +		     ntohs(peer_port), peer_mss);
++=======
+ 		pr_debug("parent ep %p hwtid %u laddr %pI4 raddr %pI4 lport %d rport %d peer_mss %d\n"
+ 			 , parent_ep, hwtid,
+ 			 local_ip, peer_ip, ntohs(local_port),
+ 			 ntohs(peer_port), peer_mss);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		dst = cxgb_find_route(&dev->rdev.lldi, get_real_dev,
  				      *(__be32 *)local_ip, *(__be32 *)peer_ip,
  				      local_port, peer_port, tos);
  	} else {
++<<<<<<< HEAD
 +		PDBG("%s parent ep %p hwtid %u laddr %pI6 raddr %pI6 lport %d rport %d peer_mss %d\n"
 +		     , __func__, parent_ep, hwtid,
 +		     local_ip, peer_ip, ntohs(local_port),
 +		     ntohs(peer_port), peer_mss);
++=======
+ 		pr_debug("parent ep %p hwtid %u laddr %pI6 raddr %pI6 lport %d rport %d peer_mss %d\n"
+ 			 , parent_ep, hwtid,
+ 			 local_ip, peer_ip, ntohs(local_port),
+ 			 ntohs(peer_port), peer_mss);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		dst = cxgb_find_route6(&dev->rdev.lldi, get_real_dev,
  				local_ip, peer_ip, local_port, peer_port,
  				PASS_OPEN_TOS_G(ntohl(req->tos_stid)),
@@@ -2577,8 -2574,8 +2804,13 @@@
  	child_ep->dst = dst;
  	child_ep->hwtid = hwtid;
  
++<<<<<<< HEAD
 +	PDBG("%s tx_chan %u smac_idx %u rss_qid %u\n", __func__,
 +	     child_ep->tx_chan, child_ep->smac_idx, child_ep->rss_qid);
++=======
+ 	pr_debug("tx_chan %u smac_idx %u rss_qid %u\n",
+ 		 child_ep->tx_chan, child_ep->smac_idx, child_ep->rss_qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	init_timer(&child_ep->timer);
  	cxgb4_insert_tid(t, child_ep, hwtid,
@@@ -2614,12 -2611,12 +2846,21 @@@ static int pass_establish(struct c4iw_d
  	int ret;
  
  	ep = get_ep_from_tid(dev, tid);
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
 +	ep->snd_seq = be32_to_cpu(req->snd_isn);
 +	ep->rcv_seq = be32_to_cpu(req->rcv_isn);
 +
 +	PDBG("%s ep %p hwtid %u tcp_opt 0x%02x\n", __func__, ep, tid,
 +	     ntohs(req->tcp_opt));
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
+ 	ep->snd_seq = be32_to_cpu(req->snd_isn);
+ 	ep->rcv_seq = be32_to_cpu(req->rcv_isn);
+ 
+ 	pr_debug("ep %p hwtid %u tcp_opt 0x%02x\n", ep, tid,
+ 		 ntohs(req->tcp_opt));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	set_emss(ep, ntohs(req->tcp_opt));
  
@@@ -2651,7 -2648,7 +2892,11 @@@ static int peer_close(struct c4iw_dev *
  	if (!ep)
  		return 0;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	dst_confirm(ep->dst);
  
  	set_bit(PEER_CLOSE, &ep->com.history);
@@@ -2751,8 -2748,8 +2996,13 @@@ static int peer_abort(struct c4iw_dev *
  		mutex_unlock(&dev->rdev.stats.lock);
  		goto deref_ep;
  	}
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u state %u\n", __func__, ep, ep->hwtid,
 +	     ep->com.state);
++=======
+ 	pr_debug("ep %p tid %u state %u\n", ep, ep->hwtid,
+ 		 ep->com.state);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	set_bit(PEER_ABORT, &ep->com.history);
  
  	/*
@@@ -2878,8 -2873,7 +3128,12 @@@ static int close_con_rpl(struct c4iw_de
  	if (!ep)
  		return 0;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
 +	BUG_ON(!ep);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/* The cm_id may be null if we failed to connect */
  	mutex_lock(&ep->com.mutex);
@@@ -2954,18 -2948,19 +3208,32 @@@ static int fw4_ack(struct c4iw_dev *dev
  	ep = get_ep_from_tid(dev, tid);
  	if (!ep)
  		return 0;
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u credits %u\n", __func__, ep, ep->hwtid, credits);
 +	if (credits == 0) {
 +		PDBG("%s 0 credit ack ep %p tid %u state %u\n",
 +		     __func__, ep, ep->hwtid, state_read(&ep->com));
++=======
+ 	pr_debug("ep %p tid %u credits %u\n",
+ 		 ep, ep->hwtid, credits);
+ 	if (credits == 0) {
+ 		pr_debug("0 credit ack ep %p tid %u state %u\n",
+ 			 ep, ep->hwtid, state_read(&ep->com));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		goto out;
  	}
  
  	dst_confirm(ep->dst);
  	if (ep->mpa_skb) {
++<<<<<<< HEAD
 +		PDBG("%s last streaming msg ack ep %p tid %u state %u "
 +		     "initiator %u freeing skb\n", __func__, ep, ep->hwtid,
 +		     state_read(&ep->com), ep->mpa_attr.initiator ? 1 : 0);
++=======
+ 		pr_debug("last streaming msg ack ep %p tid %u state %u initiator %u freeing skb\n",
+ 			 ep, ep->hwtid, state_read(&ep->com),
+ 			 ep->mpa_attr.initiator ? 1 : 0);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		mutex_lock(&ep->com.mutex);
  		kfree_skb(ep->mpa_skb);
  		ep->mpa_skb = NULL;
@@@ -2983,7 -2978,7 +3251,11 @@@ int c4iw_reject_cr(struct iw_cm_id *cm_
  	int abort;
  	struct c4iw_ep *ep = to_ep(cm_id);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mutex_lock(&ep->com.mutex);
  	if (ep->com.state != MPA_REQ_RCVD) {
@@@ -3014,7 -3009,7 +3286,11 @@@ int c4iw_accept_cr(struct iw_cm_id *cm_
  	struct c4iw_qp *qp = get_qhp(h, conn_param->qpn);
  	int abort = 0;
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u\n", __func__, ep, ep->hwtid);
++=======
+ 	pr_debug("ep %p tid %u\n", ep, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mutex_lock(&ep->com.mutex);
  	if (ep->com.state != MPA_REQ_RCVD) {
@@@ -3067,7 -3062,7 +3343,11 @@@
  			ep->ird = 1;
  	}
  
++<<<<<<< HEAD
 +	PDBG("%s %d ird %d ord %d\n", __func__, __LINE__, ep->ird, ep->ord);
++=======
+ 	pr_debug("ird %d ord %d\n", ep->ird, ep->ord);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	ep->com.cm_id = cm_id;
  	ref_cm_id(&ep->com);
@@@ -3228,8 -3223,8 +3508,13 @@@ int c4iw_connect(struct iw_cm_id *cm_id
  		goto fail2;
  	}
  	ref_qp(ep);
++<<<<<<< HEAD
 +	PDBG("%s qpn 0x%x qp %p cm_id %p\n", __func__, conn_param->qpn,
 +	     ep->com.qp, cm_id);
++=======
+ 	pr_debug("qpn 0x%x qp %p cm_id %p\n", conn_param->qpn,
+ 		 ep->com.qp, cm_id);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * Allocate an active TID to initiate a TCP connection.
@@@ -3266,9 -3261,9 +3551,15 @@@
  		}
  
  		/* find a route */
++<<<<<<< HEAD
 +		PDBG("%s saddr %pI4 sport 0x%x raddr %pI4 rport 0x%x\n",
 +		     __func__, &laddr->sin_addr, ntohs(laddr->sin_port),
 +		     ra, ntohs(raddr->sin_port));
++=======
+ 		pr_debug("saddr %pI4 sport 0x%x raddr %pI4 rport 0x%x\n",
+ 			 &laddr->sin_addr, ntohs(laddr->sin_port),
+ 			 ra, ntohs(raddr->sin_port));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		ep->dst = cxgb_find_route(&dev->rdev.lldi, get_real_dev,
  					  laddr->sin_addr.s_addr,
  					  raddr->sin_addr.s_addr,
@@@ -3288,10 -3283,10 +3579,17 @@@
  		}
  
  		/* find a route */
++<<<<<<< HEAD
 +		PDBG("%s saddr %pI6 sport 0x%x raddr %pI6 rport 0x%x\n",
 +		     __func__, laddr6->sin6_addr.s6_addr,
 +		     ntohs(laddr6->sin6_port),
 +		     raddr6->sin6_addr.s6_addr, ntohs(raddr6->sin6_port));
++=======
+ 		pr_debug("saddr %pI6 sport 0x%x raddr %pI6 rport 0x%x\n",
+ 			 laddr6->sin6_addr.s6_addr,
+ 			 ntohs(laddr6->sin6_port),
+ 			 raddr6->sin6_addr.s6_addr, ntohs(raddr6->sin6_port));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		ep->dst = cxgb_find_route6(&dev->rdev.lldi, get_real_dev,
  					   laddr6->sin6_addr.s6_addr,
  					   raddr6->sin6_addr.s6_addr,
@@@ -3312,9 -3307,9 +3610,15 @@@
  		goto fail4;
  	}
  
++<<<<<<< HEAD
 +	PDBG("%s txq_idx %u tx_chan %u smac_idx %u rss_qid %u l2t_idx %u\n",
 +		__func__, ep->txq_idx, ep->tx_chan, ep->smac_idx, ep->rss_qid,
 +		ep->l2t->idx);
++=======
+ 	pr_debug("txq_idx %u tx_chan %u smac_idx %u rss_qid %u l2t_idx %u\n",
+ 		 ep->txq_idx, ep->tx_chan, ep->smac_idx, ep->rss_qid,
+ 		 ep->l2t->idx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	state_set(&ep->com, CONNECTING);
  	ep->tos = cm_id->tos;
@@@ -3423,7 -3422,7 +3727,11 @@@ int c4iw_create_listen(struct iw_cm_id 
  		goto fail1;
  	}
  	skb_queue_head_init(&ep->com.ep_skb_list);
++<<<<<<< HEAD
 +	PDBG("%s ep %p\n", __func__, ep);
++=======
+ 	pr_debug("ep %p\n", ep);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	ep->com.cm_id = cm_id;
  	ref_cm_id(&ep->com);
  	ep->com.dev = dev;
@@@ -3477,7 -3476,7 +3785,11 @@@ int c4iw_destroy_listen(struct iw_cm_i
  	int err;
  	struct c4iw_listen_ep *ep = to_listen_ep(cm_id);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p\n", __func__, ep);
++=======
+ 	pr_debug("ep %p\n", ep);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	might_sleep();
  	state_set(&ep->com, DEAD);
@@@ -3518,8 -3517,8 +3830,13 @@@ int c4iw_ep_disconnect(struct c4iw_ep *
  
  	mutex_lock(&ep->com.mutex);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p state %s, abrupt %d\n", __func__, ep,
 +	     states[ep->com.state], abrupt);
++=======
+ 	pr_debug("ep %p state %s, abrupt %d\n", ep,
+ 		 states[ep->com.state], abrupt);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * Ref the ep here in case we have fatal errors causing the
@@@ -3933,9 -3931,9 +4250,15 @@@ static int rx_pkt(struct c4iw_dev *dev
  	skb_set_transport_header(skb, (void *)tcph - (void *)rss);
  	skb_get(skb);
  
++<<<<<<< HEAD
 +	PDBG("%s lip 0x%x lport %u pip 0x%x pport %u tos %d\n", __func__,
 +	     ntohl(iph->daddr), ntohs(tcph->dest), ntohl(iph->saddr),
 +	     ntohs(tcph->source), iph->tos);
++=======
+ 	pr_debug("lip 0x%x lport %u pip 0x%x pport %u tos %d\n",
+ 		 ntohl(iph->daddr), ntohs(tcph->dest), ntohl(iph->saddr),
+ 		 ntohs(tcph->source), iph->tos);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	dst = cxgb_find_route(&dev->rdev.lldi, get_real_dev,
  			      iph->daddr, iph->saddr, tcph->dest,
@@@ -4032,8 -4028,7 +4353,12 @@@ static void process_timeout(struct c4iw
  	int abort = 1;
  
  	mutex_lock(&ep->com.mutex);
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u state %d\n", __func__, ep, ep->hwtid,
 +	     ep->com.state);
++=======
+ 	pr_debug("ep %p tid %u state %d\n", ep, ep->hwtid, ep->com.state);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	set_bit(TIMEDOUT, &ep->com.history);
  	switch (ep->com.state) {
  	case MPA_REQ_SENT:
@@@ -4176,13 -4171,13 +4501,21 @@@ static int fw6_msg(struct c4iw_dev *dev
  	struct c4iw_wr_wait *wr_waitp;
  	int ret;
  
++<<<<<<< HEAD
 +	PDBG("%s type %u\n", __func__, rpl->type);
++=======
+ 	pr_debug("type %u\n", rpl->type);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	switch (rpl->type) {
  	case FW6_TYPE_WR_RPL:
  		ret = (int)((be64_to_cpu(rpl->data[0]) >> 8) & 0xff);
  		wr_waitp = (struct c4iw_wr_wait *)(__force unsigned long) rpl->data[1];
++<<<<<<< HEAD
 +		PDBG("%s wr_waitp %p ret %u\n", __func__, wr_waitp, ret);
++=======
+ 		pr_debug("wr_waitp %p ret %u\n", wr_waitp, ret);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		if (wr_waitp)
  			c4iw_wake_up(wr_waitp, ret ? -ret : 0);
  		kfree_skb(skb);
@@@ -4215,13 -4209,12 +4548,17 @@@ static int peer_abort_intr(struct c4iw_
  		return 0;
  	}
  	if (cxgb_is_neg_adv(req->status)) {
 -		pr_debug("%s Negative advice on abort- tid %u status %d (%s)\n",
 -			 __func__, ep->hwtid, req->status,
 -			 neg_adv_str(req->status));
 +		PDBG("%s Negative advice on abort- tid %u status %d (%s)\n",
 +		     __func__, ep->hwtid, req->status,
 +		     neg_adv_str(req->status));
  		goto out;
  	}
++<<<<<<< HEAD
 +	PDBG("%s ep %p tid %u state %u\n", __func__, ep, ep->hwtid,
 +	     ep->com.state);
++=======
+ 	pr_debug("ep %p tid %u state %u\n", ep, ep->hwtid, ep->com.state);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	c4iw_wake_up(&ep->com.wr_wait, -ECONNRESET);
  out:
diff --cc drivers/infiniband/hw/cxgb4/cq.c
index eb5e910786df,da62535b3252..000000000000
--- a/drivers/infiniband/hw/cxgb4/cq.c
+++ b/drivers/infiniband/hw/cxgb4/cq.c
@@@ -146,7 -144,7 +146,11 @@@ static int create_cq(struct c4iw_rdev *
  	ret = c4iw_ofld_send(rdev, skb);
  	if (ret)
  		goto err4;
++<<<<<<< HEAD
 +	PDBG("%s wait_event wr_wait %p\n", __func__, &wr_wait);
++=======
+ 	pr_debug("wait_event wr_wait %p\n", &wr_wait);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	ret = c4iw_wait_for_reply(rdev, &wr_wait, 0, 0, __func__);
  	if (ret)
  		goto err4;
@@@ -180,8 -178,8 +184,13 @@@ static void insert_recv_cqe(struct t4_w
  {
  	struct t4_cqe cqe;
  
++<<<<<<< HEAD
 +	PDBG("%s wq %p cq %p sw_cidx %u sw_pidx %u\n", __func__,
 +	     wq, cq, cq->sw_cidx, cq->sw_pidx);
++=======
+ 	pr_debug("wq %p cq %p sw_cidx %u sw_pidx %u\n",
+ 		 wq, cq, cq->sw_cidx, cq->sw_pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&cqe, 0, sizeof(cqe));
  	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |
  				 CQE_OPCODE_V(FW_RI_SEND) |
@@@ -199,8 -197,8 +208,13 @@@ int c4iw_flush_rq(struct t4_wq *wq, str
  	int in_use = wq->rq.in_use - count;
  
  	BUG_ON(in_use < 0);
++<<<<<<< HEAD
 +	PDBG("%s wq %p cq %p rq.in_use %u skip count %u\n", __func__,
 +	     wq, cq, wq->rq.in_use, count);
++=======
+ 	pr_debug("wq %p cq %p rq.in_use %u skip count %u\n",
+ 		 wq, cq, wq->rq.in_use, count);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	while (in_use--) {
  		insert_recv_cqe(wq, cq);
  		flushed++;
@@@ -213,8 -211,8 +227,13 @@@ static void insert_sq_cqe(struct t4_wq 
  {
  	struct t4_cqe cqe;
  
++<<<<<<< HEAD
 +	PDBG("%s wq %p cq %p sw_cidx %u sw_pidx %u\n", __func__,
 +	     wq, cq, cq->sw_cidx, cq->sw_pidx);
++=======
+ 	pr_debug("wq %p cq %p sw_cidx %u sw_pidx %u\n",
+ 		 wq, cq, cq->sw_cidx, cq->sw_pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&cqe, 0, sizeof(cqe));
  	cqe.header = cpu_to_be32(CQE_STATUS_V(T4_ERR_SWFLUSH) |
  				 CQE_OPCODE_V(swcqe->opcode) |
@@@ -283,8 -281,8 +302,13 @@@ static void flush_completed_wrs(struct 
  			/*
  			 * Insert this completed cqe into the swcq.
  			 */
++<<<<<<< HEAD
 +			PDBG("%s moving cqe into swcq sq idx %u cq idx %u\n",
 +					__func__, cidx, cq->sw_pidx);
++=======
+ 			pr_debug("moving cqe into swcq sq idx %u cq idx %u\n",
+ 				 cidx, cq->sw_pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			swsqe->cqe.header |= htonl(CQE_SWCQE_V(1));
  			cq->sw_queue[cq->sw_pidx] = swsqe->cqe;
  			t4_swcq_produce(cq);
@@@ -339,7 -337,7 +363,11 @@@ void c4iw_flush_hw_cq(struct c4iw_cq *c
  	struct t4_swsqe *swsqe;
  	int ret;
  
++<<<<<<< HEAD
 +	PDBG("%s  cqid 0x%x\n", __func__, chp->cq.cqid);
++=======
+ 	pr_debug("cqid 0x%x\n", chp->cq.cqid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	ret = t4_next_hw_cqe(&chp->cq, &hw_cqe);
  
  	/*
@@@ -432,7 -430,7 +460,11 @@@ void c4iw_count_rcqes(struct t4_cq *cq
  	u32 ptr;
  
  	*count = 0;
++<<<<<<< HEAD
 +	PDBG("%s count zero %d\n", __func__, *count);
++=======
+ 	pr_debug("count zero %d\n", *count);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	ptr = cq->sw_cidx;
  	while (ptr != cq->sw_pidx) {
  		cqe = &cq->sw_queue[ptr];
@@@ -442,7 -440,7 +474,11 @@@
  		if (++ptr == cq->size)
  			ptr = 0;
  	}
++<<<<<<< HEAD
 +	PDBG("%s cq %p count %d\n", __func__, cq, *count);
++=======
+ 	pr_debug("cq %p count %d\n", cq, *count);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  }
  
  /*
@@@ -473,12 -471,11 +509,20 @@@ static int poll_cq(struct t4_wq *wq, st
  	if (ret)
  		return ret;
  
++<<<<<<< HEAD
 +	PDBG("%s CQE OVF %u qpid 0x%0x genbit %u type %u status 0x%0x"
 +	     " opcode 0x%0x len 0x%0x wrid_hi_stag 0x%x wrid_low_msn 0x%x\n",
 +	     __func__, CQE_OVFBIT(hw_cqe), CQE_QPID(hw_cqe),
 +	     CQE_GENBIT(hw_cqe), CQE_TYPE(hw_cqe), CQE_STATUS(hw_cqe),
 +	     CQE_OPCODE(hw_cqe), CQE_LEN(hw_cqe), CQE_WRID_HI(hw_cqe),
 +	     CQE_WRID_LOW(hw_cqe));
++=======
+ 	pr_debug("CQE OVF %u qpid 0x%0x genbit %u type %u status 0x%0x opcode 0x%0x len 0x%0x wrid_hi_stag 0x%x wrid_low_msn 0x%x\n",
+ 		 CQE_OVFBIT(hw_cqe), CQE_QPID(hw_cqe),
+ 		 CQE_GENBIT(hw_cqe), CQE_TYPE(hw_cqe), CQE_STATUS(hw_cqe),
+ 		 CQE_OPCODE(hw_cqe), CQE_LEN(hw_cqe), CQE_WRID_HI(hw_cqe),
+ 		 CQE_WRID_LOW(hw_cqe));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/*
  	 * skip cqe's not affiliated with a QP.
@@@ -606,8 -603,8 +650,13 @@@
  	if (!SW_CQE(hw_cqe) && (CQE_WRID_SQ_IDX(hw_cqe) != wq->sq.cidx)) {
  		struct t4_swsqe *swsqe;
  
++<<<<<<< HEAD
 +		PDBG("%s out of order completion going in sw_sq at idx %u\n",
 +		     __func__, CQE_WRID_SQ_IDX(hw_cqe));
++=======
+ 		pr_debug("out of order completion going in sw_sq at idx %u\n",
+ 			 CQE_WRID_SQ_IDX(hw_cqe));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		swsqe = &wq->sq.sw_sq[CQE_WRID_SQ_IDX(hw_cqe)];
  		swsqe->cqe = *hw_cqe;
  		swsqe->complete = 1;
@@@ -641,13 -638,13 +690,21 @@@ proc_cqe
  		BUG_ON(wq->sq.in_use <= 0 && wq->sq.in_use >= wq->sq.size);
  
  		wq->sq.cidx = (uint16_t)idx;
++<<<<<<< HEAD
 +		PDBG("%s completing sq idx %u\n", __func__, wq->sq.cidx);
++=======
+ 		pr_debug("completing sq idx %u\n", wq->sq.cidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		*cookie = wq->sq.sw_sq[wq->sq.cidx].wr_id;
  		if (c4iw_wr_log)
  			c4iw_log_wr_stats(wq, hw_cqe);
  		t4_sq_consume(wq);
  	} else {
++<<<<<<< HEAD
 +		PDBG("%s completing rq idx %u\n", __func__, wq->rq.cidx);
++=======
+ 		pr_debug("completing rq idx %u\n", wq->rq.cidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		*cookie = wq->rq.sw_rq[wq->rq.cidx].wr_id;
  		BUG_ON(t4_rq_empty(wq));
  		if (c4iw_wr_log)
@@@ -664,12 -661,12 +721,21 @@@ flush_wq
  
  skip_cqe:
  	if (SW_CQE(hw_cqe)) {
++<<<<<<< HEAD
 +		PDBG("%s cq %p cqid 0x%x skip sw cqe cidx %u\n",
 +		     __func__, cq, cq->cqid, cq->sw_cidx);
 +		t4_swcq_consume(cq);
 +	} else {
 +		PDBG("%s cq %p cqid 0x%x skip hw cqe cidx %u\n",
 +		     __func__, cq, cq->cqid, cq->cidx);
++=======
+ 		pr_debug("cq %p cqid 0x%x skip sw cqe cidx %u\n",
+ 			 cq, cq->cqid, cq->sw_cidx);
+ 		t4_swcq_consume(cq);
+ 	} else {
+ 		pr_debug("cq %p cqid 0x%x skip hw cqe cidx %u\n",
+ 			 cq, cq->cqid, cq->cidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		t4_hwcq_consume(cq);
  	}
  	return ret;
@@@ -715,10 -712,12 +781,19 @@@ static int c4iw_poll_cq_one(struct c4iw
  	wc->vendor_err = CQE_STATUS(&cqe);
  	wc->wc_flags = 0;
  
++<<<<<<< HEAD
 +	PDBG("%s qpid 0x%x type %d opcode %d status 0x%x len %u wrid hi 0x%x "
 +	     "lo 0x%x cookie 0x%llx\n", __func__, CQE_QPID(&cqe),
 +	     CQE_TYPE(&cqe), CQE_OPCODE(&cqe), CQE_STATUS(&cqe), CQE_LEN(&cqe),
 +	     CQE_WRID_HI(&cqe), CQE_WRID_LOW(&cqe), (unsigned long long)cookie);
++=======
+ 	pr_debug("qpid 0x%x type %d opcode %d status 0x%x len %u wrid hi 0x%x lo 0x%x cookie 0x%llx\n",
+ 		 CQE_QPID(&cqe),
+ 		 CQE_TYPE(&cqe), CQE_OPCODE(&cqe),
+ 		 CQE_STATUS(&cqe), CQE_LEN(&cqe),
+ 		 CQE_WRID_HI(&cqe), CQE_WRID_LOW(&cqe),
+ 		 (unsigned long long)cookie);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	if (CQE_TYPE(&cqe) == 0) {
  		if (!CQE_STATUS(&cqe))
@@@ -860,7 -857,7 +935,11 @@@ int c4iw_destroy_cq(struct ib_cq *ib_cq
  	struct c4iw_cq *chp;
  	struct c4iw_ucontext *ucontext;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_cq %p\n", __func__, ib_cq);
++=======
+ 	pr_debug("ib_cq %p\n", ib_cq);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	chp = to_c4iw_cq(ib_cq);
  
  	remove_handle(chp->rhp, &chp->rhp->cqidr, chp->cq.cqid);
@@@ -892,7 -889,7 +971,11 @@@ struct ib_cq *c4iw_create_cq(struct ib_
  	size_t memsize, hwentries;
  	struct c4iw_mm_entry *mm, *mm2;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_dev %p entries %d\n", __func__, ibdev, entries);
++=======
+ 	pr_debug("ib_dev %p entries %d\n", ibdev, entries);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (attr->flags)
  		return ERR_PTR(-EINVAL);
  
@@@ -999,9 -996,9 +1082,15 @@@
  		mm2->len = PAGE_SIZE;
  		insert_mmap(ucontext, mm2);
  	}
++<<<<<<< HEAD
 +	PDBG("%s cqid 0x%0x chp %p size %u memsize %zu, dma_addr 0x%0llx\n",
 +	     __func__, chp->cq.cqid, chp, chp->cq.size,
 +	     chp->cq.memsize, (unsigned long long) chp->cq.dma_addr);
++=======
+ 	pr_debug("cqid 0x%0x chp %p size %u memsize %zu, dma_addr 0x%0llx\n",
+ 		 chp->cq.cqid, chp, chp->cq.size,
+ 		 chp->cq.memsize, (unsigned long long)chp->cq.dma_addr);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return &chp->ibcq;
  err6:
  	kfree(mm2);
diff --cc drivers/infiniband/hw/cxgb4/device.c
index 76898729e469,d19f7fb2966c..000000000000
--- a/drivers/infiniband/hw/cxgb4/device.c
+++ b/drivers/infiniband/hw/cxgb4/device.c
@@@ -826,23 -811,20 +826,40 @@@ static int c4iw_rdev_open(struct c4iw_r
  
  	rdev->qpmask = rdev->lldi.udb_density - 1;
  	rdev->cqmask = rdev->lldi.ucq_density - 1;
++<<<<<<< HEAD
 +	PDBG("%s dev %s stag start 0x%0x size 0x%0x num stags %d "
 +	     "pbl start 0x%0x size 0x%0x rq start 0x%0x size 0x%0x "
 +	     "qp qid start %u size %u cq qid start %u size %u\n",
 +	     __func__, pci_name(rdev->lldi.pdev), rdev->lldi.vr->stag.start,
 +	     rdev->lldi.vr->stag.size, c4iw_num_stags(rdev),
 +	     rdev->lldi.vr->pbl.start,
 +	     rdev->lldi.vr->pbl.size, rdev->lldi.vr->rq.start,
 +	     rdev->lldi.vr->rq.size,
 +	     rdev->lldi.vr->qp.start,
 +	     rdev->lldi.vr->qp.size,
 +	     rdev->lldi.vr->cq.start,
 +	     rdev->lldi.vr->cq.size);
 +	PDBG("udb %pR db_reg %p gts_reg %p "
 +	     "qpmask 0x%x cqmask 0x%x\n",
 +		&rdev->lldi.pdev->resource[2],
 +	     rdev->lldi.db_reg, rdev->lldi.gts_reg,
 +	     rdev->qpmask, rdev->cqmask);
++=======
+ 	pr_debug("dev %s stag start 0x%0x size 0x%0x num stags %d pbl start 0x%0x size 0x%0x rq start 0x%0x size 0x%0x qp qid start %u size %u cq qid start %u size %u\n",
+ 		 pci_name(rdev->lldi.pdev), rdev->lldi.vr->stag.start,
+ 		 rdev->lldi.vr->stag.size, c4iw_num_stags(rdev),
+ 		 rdev->lldi.vr->pbl.start,
+ 		 rdev->lldi.vr->pbl.size, rdev->lldi.vr->rq.start,
+ 		 rdev->lldi.vr->rq.size,
+ 		 rdev->lldi.vr->qp.start,
+ 		 rdev->lldi.vr->qp.size,
+ 		 rdev->lldi.vr->cq.start,
+ 		 rdev->lldi.vr->cq.size);
+ 	pr_debug("udb %pR db_reg %p gts_reg %p qpmask 0x%x cqmask 0x%x\n",
+ 		 &rdev->lldi.pdev->resource[2],
+ 		 rdev->lldi.db_reg, rdev->lldi.gts_reg,
+ 		 rdev->qpmask, rdev->cqmask);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	if (c4iw_num_stags(rdev) == 0)
  		return -EINVAL;
@@@ -950,7 -935,7 +967,11 @@@ static void c4iw_dealloc(struct uld_ct
  
  static void c4iw_remove(struct uld_ctx *ctx)
  {
++<<<<<<< HEAD
 +	PDBG("%s c4iw_dev %p\n", __func__,  ctx->dev);
++=======
+ 	pr_debug("c4iw_dev %p\n", ctx->dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	c4iw_unregister_device(ctx->dev);
  	c4iw_dealloc(ctx);
  }
@@@ -984,9 -969,9 +1005,15 @@@ static struct c4iw_dev *c4iw_alloc(cons
  	devp->rdev.lldi = *infop;
  
  	/* init various hw-queue params based on lld info */
++<<<<<<< HEAD
 +	PDBG("%s: Ing. padding boundary is %d, egrsstatuspagesize = %d\n",
 +	     __func__, devp->rdev.lldi.sge_ingpadboundary,
 +	     devp->rdev.lldi.sge_egrstatuspagesize);
++=======
+ 	pr_debug("Ing. padding boundary is %d, egrsstatuspagesize = %d\n",
+ 		 devp->rdev.lldi.sge_ingpadboundary,
+ 		 devp->rdev.lldi.sge_egrstatuspagesize);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	devp->rdev.hw_queue.t4_eq_status_entries =
  		devp->rdev.lldi.sge_egrstatuspagesize / 64;
@@@ -1085,10 -1069,10 +1112,17 @@@ static void *c4iw_uld_add(const struct 
  	}
  	ctx->lldi = *infop;
  
++<<<<<<< HEAD
 +	PDBG("%s found device %s nchan %u nrxq %u ntxq %u nports %u\n",
 +	     __func__, pci_name(ctx->lldi.pdev),
 +	     ctx->lldi.nchan, ctx->lldi.nrxq,
 +	     ctx->lldi.ntxq, ctx->lldi.nports);
++=======
+ 	pr_debug("found device %s nchan %u nrxq %u ntxq %u nports %u\n",
+ 		 pci_name(ctx->lldi.pdev),
+ 		 ctx->lldi.nchan, ctx->lldi.nrxq,
+ 		 ctx->lldi.ntxq, ctx->lldi.nports);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mutex_lock(&dev_mutex);
  	list_add_tail(&ctx->entry, &uld_ctx_list);
@@@ -1223,10 -1203,10 +1257,14 @@@ static int c4iw_uld_state_change(void *
  {
  	struct uld_ctx *ctx = handle;
  
++<<<<<<< HEAD
 +	PDBG("%s new_state %u\n", __func__, new_state);
++=======
+ 	pr_debug("new_state %u\n", new_state);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	switch (new_state) {
  	case CXGB4_STATE_UP:
 -		pr_info("%s: Up\n", pci_name(ctx->lldi.pdev));
 +		printk(KERN_INFO MOD "%s: Up\n", pci_name(ctx->lldi.pdev));
  		if (!ctx->dev) {
  			int ret;
  
diff --cc drivers/infiniband/hw/cxgb4/iw_cxgb4.h
index eb7973e70423,fafb899fec7c..000000000000
--- a/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
+++ b/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
@@@ -538,8 -537,8 +538,13 @@@ static inline struct c4iw_mm_entry *rem
  		if (mm->key == key && mm->len == len) {
  			list_del_init(&mm->entry);
  			spin_unlock(&ucontext->mmap_lock);
++<<<<<<< HEAD
 +			PDBG("%s key 0x%x addr 0x%llx len %d\n", __func__,
 +			     key, (unsigned long long) mm->addr, mm->len);
++=======
+ 			pr_debug("key 0x%x addr 0x%llx len %d\n", key,
+ 				 (unsigned long long)mm->addr, mm->len);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			return mm;
  		}
  	}
@@@ -551,8 -550,8 +556,13 @@@ static inline void insert_mmap(struct c
  			       struct c4iw_mm_entry *mm)
  {
  	spin_lock(&ucontext->mmap_lock);
++<<<<<<< HEAD
 +	PDBG("%s key 0x%x addr 0x%llx len %d\n", __func__,
 +	     mm->key, (unsigned long long) mm->addr, mm->len);
++=======
+ 	pr_debug("key 0x%x addr 0x%llx len %d\n",
+ 		 mm->key, (unsigned long long)mm->addr, mm->len);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	list_add_tail(&mm->entry, &ucontext->mmaps);
  	spin_unlock(&ucontext->mmap_lock);
  }
@@@ -670,17 -669,17 +680,31 @@@ enum c4iw_mmid_state 
  #define MPA_V2_RDMA_READ_RTR            0x4000
  #define MPA_V2_IRD_ORD_MASK             0x3FFF
  
++<<<<<<< HEAD
 +#define c4iw_put_ep(ep) { \
 +	PDBG("put_ep (via %s:%u) ep %p refcnt %d\n", __func__, __LINE__,  \
 +	     ep, atomic_read(&((ep)->kref.refcount))); \
 +	WARN_ON(atomic_read(&((ep)->kref.refcount)) < 1); \
 +	kref_put(&((ep)->kref), _c4iw_free_ep); \
 +}
 +
 +#define c4iw_get_ep(ep) { \
 +	PDBG("get_ep (via %s:%u) ep %p, refcnt %d\n", __func__, __LINE__, \
 +	     ep, atomic_read(&((ep)->kref.refcount))); \
 +	kref_get(&((ep)->kref));  \
++=======
+ #define c4iw_put_ep(ep) {						\
+ 	pr_debug("put_ep ep %p refcnt %d\n",		\
+ 		 ep, kref_read(&((ep)->kref)));				\
+ 	WARN_ON(kref_read(&((ep)->kref)) < 1);				\
+ 	kref_put(&((ep)->kref), _c4iw_free_ep);				\
+ }
+ 
+ #define c4iw_get_ep(ep) {						\
+ 	pr_debug("get_ep ep %p, refcnt %d\n",		\
+ 		 ep, kref_read(&((ep)->kref)));				\
+ 	kref_get(&((ep)->kref));					\
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  }
  void _c4iw_free_ep(struct kref *kref);
  
diff --cc drivers/infiniband/hw/cxgb4/mem.c
index 39cac5db937e,eeadc69ad4be..000000000000
--- a/drivers/infiniband/hw/cxgb4/mem.c
+++ b/drivers/infiniband/hw/cxgb4/mem.c
@@@ -118,7 -124,7 +118,11 @@@ static int _c4iw_write_mem_inline(struc
  		cmd |= cpu_to_be32(T5_ULP_MEMIO_IMM_F);
  
  	addr &= 0x7FFFFFF;
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x len %u\n", __func__, addr, len);
++=======
+ 	pr_debug("addr 0x%x len %u\n", addr, len);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	num_wqe = DIV_ROUND_UP(len, C4IW_MAX_INLINE_SIZE);
  	c4iw_init_wr_wait(&wr_wait);
  	for (i = 0; i < num_wqe; i++) {
@@@ -282,8 -285,8 +286,13 @@@ static int write_tpt_entry(struct c4iw_
  		mutex_unlock(&rdev->stats.lock);
  		*stag = (stag_idx << 8) | (atomic_inc_return(&key) & 0xff);
  	}
++<<<<<<< HEAD
 +	PDBG("%s stag_state 0x%0x type 0x%0x pdid 0x%0x, stag_idx 0x%x\n",
 +	     __func__, stag_state, type, pdid, stag_idx);
++=======
+ 	pr_debug("stag_state 0x%0x type 0x%0x pdid 0x%0x, stag_idx 0x%x\n",
+ 		 stag_state, type, pdid, stag_idx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/* write TPT entry */
  	if (reset_tpt_entry)
@@@ -324,9 -327,9 +333,15 @@@ static int write_pbl(struct c4iw_rdev *
  {
  	int err;
  
++<<<<<<< HEAD
 +	PDBG("%s *pdb_addr 0x%x, pbl_base 0x%x, pbl_size %d\n",
 +	     __func__, pbl_addr, rdev->lldi.vr->pbl.start,
 +	     pbl_size);
++=======
+ 	pr_debug("*pdb_addr 0x%x, pbl_base 0x%x, pbl_size %d\n",
+ 		 pbl_addr, rdev->lldi.vr->pbl.start,
+ 		 pbl_size);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	err = write_adapter_mem(rdev, pbl_addr >> 5, pbl_size << 3, pbl, NULL);
  	return err;
@@@ -369,7 -372,7 +384,11 @@@ static int finish_mem_reg(struct c4iw_m
  	mhp->attr.stag = stag;
  	mmid = stag >> 8;
  	mhp->ibmr.rkey = mhp->ibmr.lkey = stag;
++<<<<<<< HEAD
 +	PDBG("%s mmid 0x%x mhp %p\n", __func__, mmid, mhp);
++=======
+ 	pr_debug("mmid 0x%x mhp %p\n", mmid, mhp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return insert_handle(mhp->rhp, &mhp->rhp->mmidr, mhp, mmid);
  }
  
@@@ -419,7 -422,7 +438,11 @@@ struct ib_mr *c4iw_get_dma_mr(struct ib
  	int ret;
  	u32 stag = T4_STAG_UNSET;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_pd %p\n", __func__, pd);
++=======
+ 	pr_debug("ib_pd %p\n", pd);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	php = to_c4iw_pd(pd);
  	rhp = php->rhp;
  
@@@ -476,7 -479,7 +499,11 @@@ struct ib_mr *c4iw_reg_user_mr(struct i
  	struct c4iw_pd *php;
  	struct c4iw_mr *mhp;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_pd %p\n", __func__, pd);
++=======
+ 	pr_debug("ib_pd %p\n", pd);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	if (length == ~0ULL)
  		return ERR_PTR(-EINVAL);
@@@ -609,7 -616,7 +636,11 @@@ struct ib_mw *c4iw_alloc_mw(struct ib_p
  		ret = -ENOMEM;
  		goto dealloc_win;
  	}
++<<<<<<< HEAD
 +	PDBG("%s mmid 0x%x mhp %p stag 0x%x\n", __func__, mmid, mhp, stag);
++=======
+ 	pr_debug("mmid 0x%x mhp %p stag 0x%x\n", mmid, mhp, stag);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return &(mhp->ibmw);
  
  dealloc_win:
@@@ -634,7 -641,7 +665,11 @@@ int c4iw_dealloc_mw(struct ib_mw *mw
  	deallocate_window(&rhp->rdev, mhp->attr.stag, mhp->dereg_skb);
  	kfree_skb(mhp->dereg_skb);
  	kfree(mhp);
++<<<<<<< HEAD
 +	PDBG("%s ib_mw %p mmid 0x%x ptr %p\n", __func__, mw, mmid, mhp);
++=======
+ 	pr_debug("ib_mw %p mmid 0x%x ptr %p\n", mw, mmid, mhp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return 0;
  }
  
@@@ -692,7 -699,7 +727,11 @@@ struct ib_mr *c4iw_alloc_mr(struct ib_p
  		goto err3;
  	}
  
++<<<<<<< HEAD
 +	PDBG("%s mmid 0x%x mhp %p stag 0x%x\n", __func__, mmid, mhp, stag);
++=======
+ 	pr_debug("mmid 0x%x mhp %p stag 0x%x\n", mmid, mhp, stag);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return &(mhp->ibmr);
  err3:
  	dereg_mem(&rhp->rdev, stag, mhp->attr.pbl_size,
@@@ -737,7 -744,7 +776,11 @@@ int c4iw_dereg_mr(struct ib_mr *ib_mr
  	struct c4iw_mr *mhp;
  	u32 mmid;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_mr %p\n", __func__, ib_mr);
++=======
+ 	pr_debug("ib_mr %p\n", ib_mr);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mhp = to_c4iw_mr(ib_mr);
  	rhp = mhp->rhp;
@@@ -755,7 -762,7 +798,11 @@@
  		kfree((void *) (unsigned long) mhp->kva);
  	if (mhp->umem)
  		ib_umem_release(mhp->umem);
++<<<<<<< HEAD
 +	PDBG("%s mmid 0x%x ptr %p\n", __func__, mmid, mhp);
++=======
+ 	pr_debug("mmid 0x%x ptr %p\n", mmid, mhp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	kfree(mhp);
  	return 0;
  }
diff --cc drivers/infiniband/hw/cxgb4/provider.c
index 26ed2e0446bd,fb99a05562a3..000000000000
--- a/drivers/infiniband/hw/cxgb4/provider.c
+++ b/drivers/infiniband/hw/cxgb4/provider.c
@@@ -102,7 -102,7 +102,11 @@@ void _c4iw_free_ucontext(struct kref *k
  	ucontext = container_of(kref, struct c4iw_ucontext, kref);
  	rhp = to_c4iw_dev(ucontext->ibucontext.device);
  
++<<<<<<< HEAD
 +	PDBG("%s ucontext %p\n", __func__, ucontext);
++=======
+ 	pr_debug("ucontext %p\n", ucontext);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	list_for_each_entry_safe(mm, tmp, &ucontext->mmaps, entry)
  		kfree(mm);
  	c4iw_release_dev_ucontext(&rhp->rdev, &ucontext->uctx);
@@@ -113,7 -113,7 +117,11 @@@ static int c4iw_dealloc_ucontext(struc
  {
  	struct c4iw_ucontext *ucontext = to_c4iw_ucontext(context);
  
++<<<<<<< HEAD
 +	PDBG("%s context %p\n", __func__, context);
++=======
+ 	pr_debug("context %p\n", context);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	c4iw_put_ucontext(ucontext);
  	return 0;
  }
@@@ -128,7 -127,7 +136,11 @@@ static struct ib_ucontext *c4iw_alloc_u
  	int ret = 0;
  	struct c4iw_mm_entry *mm = NULL;
  
++<<<<<<< HEAD
 +	PDBG("%s ibdev %p\n", __func__, ibdev);
++=======
+ 	pr_debug("ibdev %p\n", ibdev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	context = kzalloc(sizeof(*context), GFP_KERNEL);
  	if (!context) {
  		ret = -ENOMEM;
@@@ -187,8 -185,8 +199,13 @@@ static int c4iw_mmap(struct ib_ucontex
  	struct c4iw_ucontext *ucontext;
  	u64 addr;
  
++<<<<<<< HEAD
 +	PDBG("%s pgoff 0x%lx key 0x%x len %d\n", __func__, vma->vm_pgoff,
 +	     key, len);
++=======
+ 	pr_debug("pgoff 0x%lx key 0x%x len %d\n", vma->vm_pgoff,
+ 		 key, len);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	if (vma->vm_start & (PAGE_SIZE-1))
  		return -EINVAL;
@@@ -253,7 -251,7 +270,11 @@@ static int c4iw_deallocate_pd(struct ib
  
  	php = to_c4iw_pd(pd);
  	rhp = php->rhp;
++<<<<<<< HEAD
 +	PDBG("%s ibpd %p pdid 0x%x\n", __func__, pd, php->pdid);
++=======
+ 	pr_debug("ibpd %p pdid 0x%x\n", pd, php->pdid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	c4iw_put_resource(&rhp->rdev.resource.pdid_table, php->pdid);
  	mutex_lock(&rhp->rdev.stats.lock);
  	rhp->rdev.stats.pd.cur--;
@@@ -270,7 -268,7 +291,11 @@@ static struct ib_pd *c4iw_allocate_pd(s
  	u32 pdid;
  	struct c4iw_dev *rhp;
  
++<<<<<<< HEAD
 +	PDBG("%s ibdev %p\n", __func__, ibdev);
++=======
+ 	pr_debug("ibdev %p\n", ibdev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	rhp = (struct c4iw_dev *) ibdev;
  	pdid =  c4iw_get_resource(&rhp->rdev.resource.pdid_table);
  	if (!pdid)
@@@ -293,14 -291,14 +318,22 @@@
  	if (rhp->rdev.stats.pd.cur > rhp->rdev.stats.pd.max)
  		rhp->rdev.stats.pd.max = rhp->rdev.stats.pd.cur;
  	mutex_unlock(&rhp->rdev.stats.lock);
++<<<<<<< HEAD
 +	PDBG("%s pdid 0x%0x ptr 0x%p\n", __func__, pdid, php);
++=======
+ 	pr_debug("pdid 0x%0x ptr 0x%p\n", pdid, php);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return &php->ibpd;
  }
  
  static int c4iw_query_pkey(struct ib_device *ibdev, u8 port, u16 index,
  			   u16 *pkey)
  {
++<<<<<<< HEAD
 +	PDBG("%s ibdev %p\n", __func__, ibdev);
++=======
+ 	pr_debug("ibdev %p\n", ibdev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	*pkey = 0;
  	return 0;
  }
@@@ -310,8 -308,8 +343,13 @@@ static int c4iw_query_gid(struct ib_dev
  {
  	struct c4iw_dev *dev;
  
++<<<<<<< HEAD
 +	PDBG("%s ibdev %p, port %d, index %d, gid %p\n",
 +	       __func__, ibdev, port, index, gid);
++=======
+ 	pr_debug("ibdev %p, port %d, index %d, gid %p\n",
+ 		 ibdev, port, index, gid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	dev = to_c4iw_dev(ibdev);
  	BUG_ON(port == 0);
  	memset(&(gid->raw[0]), 0, sizeof(gid->raw));
@@@ -325,7 -323,7 +363,11 @@@ static int c4iw_query_device(struct ib_
  
  	struct c4iw_dev *dev;
  
++<<<<<<< HEAD
 +	PDBG("%s ibdev %p\n", __func__, ibdev);
++=======
+ 	pr_debug("ibdev %p\n", ibdev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	if (uhw->inlen || uhw->outlen)
  		return -EINVAL;
@@@ -366,7 -364,7 +408,11 @@@ static int c4iw_query_port(struct ib_de
  	struct net_device *netdev;
  	struct in_device *inetdev;
  
++<<<<<<< HEAD
 +	PDBG("%s ibdev %p\n", __func__, ibdev);
++=======
+ 	pr_debug("ibdev %p\n", ibdev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	dev = to_c4iw_dev(ibdev);
  	netdev = dev->rdev.lldi.ports[port-1];
@@@ -409,7 -406,7 +455,11 @@@ static ssize_t show_rev(struct device *
  {
  	struct c4iw_dev *c4iw_dev = container_of(dev, struct c4iw_dev,
  						 ibdev.dev);
++<<<<<<< HEAD
 +	PDBG("%s dev 0x%p\n", __func__, dev);
++=======
+ 	pr_debug("dev 0x%p\n", dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return sprintf(buf, "%d\n",
  		       CHELSIO_CHIP_RELEASE(c4iw_dev->rdev.lldi.adapter_type));
  }
@@@ -422,7 -419,7 +472,11 @@@ static ssize_t show_hca(struct device *
  	struct ethtool_drvinfo info;
  	struct net_device *lldev = c4iw_dev->rdev.lldi.ports[0];
  
++<<<<<<< HEAD
 +	PDBG("%s dev 0x%p\n", __func__, dev);
++=======
+ 	pr_debug("dev 0x%p\n", dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	lldev->ethtool_ops->get_drvinfo(lldev, &info);
  	return sprintf(buf, "%s\n", info.driver);
  }
@@@ -432,7 -429,7 +486,11 @@@ static ssize_t show_board(struct devic
  {
  	struct c4iw_dev *c4iw_dev = container_of(dev, struct c4iw_dev,
  						 ibdev.dev);
++<<<<<<< HEAD
 +	PDBG("%s dev 0x%p\n", __func__, dev);
++=======
+ 	pr_debug("dev 0x%p\n", dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return sprintf(buf, "%x.%x\n", c4iw_dev->rdev.lldi.pdev->vendor,
  		       c4iw_dev->rdev.lldi.pdev->device);
  }
@@@ -524,9 -521,9 +582,13 @@@ static void get_dev_fw_str(struct ib_de
  {
  	struct c4iw_dev *c4iw_dev = container_of(dev, struct c4iw_dev,
  						 ibdev);
++<<<<<<< HEAD
 +	PDBG("%s dev 0x%p\n", __func__, dev);
++=======
+ 	pr_debug("dev 0x%p\n", dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
 -	snprintf(str, IB_FW_VERSION_NAME_MAX, "%u.%u.%u.%u",
 +	snprintf(str, str_len, "%u.%u.%u.%u",
  		 FW_HDR_FW_VER_MAJOR_G(c4iw_dev->rdev.lldi.fw_vers),
  		 FW_HDR_FW_VER_MINOR_G(c4iw_dev->rdev.lldi.fw_vers),
  		 FW_HDR_FW_VER_MICRO_G(c4iw_dev->rdev.lldi.fw_vers),
@@@ -538,7 -535,7 +600,11 @@@ int c4iw_register_device(struct c4iw_de
  	int ret;
  	int i;
  
++<<<<<<< HEAD
 +	PDBG("%s c4iw_dev %p\n", __func__, dev);
++=======
+ 	pr_debug("c4iw_dev %p\n", dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	BUG_ON(!dev->rdev.lldi.ports[0]);
  	strlcpy(dev->ibdev.name, "cxgb4_%d", IB_DEVICE_NAME_MAX);
  	memset(&dev->ibdev.node_guid, 0, sizeof(dev->ibdev.node_guid));
@@@ -648,7 -645,7 +714,11 @@@ void c4iw_unregister_device(struct c4iw
  {
  	int i;
  
++<<<<<<< HEAD
 +	PDBG("%s c4iw_dev %p\n", __func__, dev);
++=======
+ 	pr_debug("c4iw_dev %p\n", dev);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	for (i = 0; i < ARRAY_SIZE(c4iw_class_attributes); ++i)
  		device_remove_file(&dev->ibdev.dev,
  				   c4iw_class_attributes[i]);
diff --cc drivers/infiniband/hw/cxgb4/qp.c
index 50b8ed44737d,a1bbd2434e5a..000000000000
--- a/drivers/infiniband/hw/cxgb4/qp.c
+++ b/drivers/infiniband/hw/cxgb4/qp.c
@@@ -254,11 -254,11 +254,19 @@@ static int create_qp(struct c4iw_rdev *
  		ret = -ENOMEM;
  		goto free_sq;
  	}
++<<<<<<< HEAD
 +	PDBG("%s sq base va 0x%p pa 0x%llx rq base va 0x%p pa 0x%llx\n",
 +		__func__, wq->sq.queue,
 +		(unsigned long long)virt_to_phys(wq->sq.queue),
 +		wq->rq.queue,
 +		(unsigned long long)virt_to_phys(wq->rq.queue));
++=======
+ 	pr_debug("sq base va 0x%p pa 0x%llx rq base va 0x%p pa 0x%llx\n",
+ 		 wq->sq.queue,
+ 		 (unsigned long long)virt_to_phys(wq->sq.queue),
+ 		 wq->rq.queue,
+ 		 (unsigned long long)virt_to_phys(wq->rq.queue));
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(wq->rq.queue, 0, wq->rq.memsize);
  	dma_unmap_addr_set(&wq->rq, mapping, wq->rq.dma_addr);
  
@@@ -362,9 -361,9 +370,15 @@@
  	if (ret)
  		goto free_dma;
  
++<<<<<<< HEAD
 +	PDBG("%s sqid 0x%x rqid 0x%x kdb 0x%p sq_bar2_addr %p rq_bar2_addr %p\n",
 +	     __func__, wq->sq.qid, wq->rq.qid, wq->db,
 +	     wq->sq.bar2_va, wq->rq.bar2_va);
++=======
+ 	pr_debug("sqid 0x%x rqid 0x%x kdb 0x%p sq_bar2_addr %p rq_bar2_addr %p\n",
+ 		 wq->sq.qid, wq->rq.qid, wq->db,
+ 		 wq->sq.bar2_va, wq->rq.bar2_va);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	return 0;
  free_dma:
@@@ -725,7 -724,7 +739,11 @@@ static void free_qp_work(struct work_st
  	ucontext = qhp->ucontext;
  	rhp = qhp->rhp;
  
++<<<<<<< HEAD
 +	PDBG("%s qhp %p ucontext %p\n", __func__, qhp, ucontext);
++=======
+ 	pr_debug("qhp %p ucontext %p\n", qhp, ucontext);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	destroy_qp(&rhp->rdev, &qhp->wq,
  		   ucontext ? &ucontext->uctx : &rhp->rdev.uctx);
  
@@@ -739,19 -738,19 +757,31 @@@ static void queue_qp_free(struct kref *
  	struct c4iw_qp *qhp;
  
  	qhp = container_of(kref, struct c4iw_qp, kref);
++<<<<<<< HEAD
 +	PDBG("%s qhp %p\n", __func__, qhp);
++=======
+ 	pr_debug("qhp %p\n", qhp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	queue_work(qhp->rhp->rdev.free_workq, &qhp->free_work);
  }
  
  void c4iw_qp_add_ref(struct ib_qp *qp)
  {
++<<<<<<< HEAD
 +	PDBG("%s ib_qp %p\n", __func__, qp);
++=======
+ 	pr_debug("ib_qp %p\n", qp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	kref_get(&to_c4iw_qp(qp)->kref);
  }
  
  void c4iw_qp_rem_ref(struct ib_qp *qp)
  {
++<<<<<<< HEAD
 +	PDBG("%s ib_qp %p\n", __func__, qp);
++=======
+ 	pr_debug("ib_qp %p\n", qp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	kref_put(&to_c4iw_qp(qp)->kref, queue_qp_free);
  }
  
@@@ -981,9 -980,9 +1011,15 @@@ int c4iw_post_send(struct ib_qp *ibqp, 
  
  		init_wr_hdr(wqe, qhp->wq.sq.pidx, fw_opcode, fw_flags, len16);
  
++<<<<<<< HEAD
 +		PDBG("%s cookie 0x%llx pidx 0x%x opcode 0x%x read_len %u\n",
 +		     __func__, (unsigned long long)wr->wr_id, qhp->wq.sq.pidx,
 +		     swsqe->opcode, swsqe->read_len);
++=======
+ 		pr_debug("cookie 0x%llx pidx 0x%x opcode 0x%x read_len %u\n",
+ 			 (unsigned long long)wr->wr_id, qhp->wq.sq.pidx,
+ 			 swsqe->opcode, swsqe->read_len);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		wr = wr->next;
  		num_wrs--;
  		t4_sq_produce(&qhp->wq, len16);
@@@ -1057,8 -1056,8 +1093,13 @@@ int c4iw_post_receive(struct ib_qp *ibq
  		wqe->recv.r2[1] = 0;
  		wqe->recv.r2[2] = 0;
  		wqe->recv.len16 = len16;
++<<<<<<< HEAD
 +		PDBG("%s cookie 0x%llx pidx %u\n", __func__,
 +		     (unsigned long long) wr->wr_id, qhp->wq.rq.pidx);
++=======
+ 		pr_debug("cookie 0x%llx pidx %u\n",
+ 			 (unsigned long long)wr->wr_id, qhp->wq.rq.pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  		t4_rq_produce(&qhp->wq, len16);
  		idx += DIV_ROUND_UP(len16*16, T4_EQ_ENTRY_SIZE);
  		wr = wr->next;
@@@ -1217,8 -1216,8 +1258,13 @@@ static void post_terminate(struct c4iw_
  	struct sk_buff *skb;
  	struct terminate_message *term;
  
++<<<<<<< HEAD
 +	PDBG("%s qhp %p qid 0x%x tid %u\n", __func__, qhp, qhp->wq.sq.qid,
 +	     qhp->ep->hwtid);
++=======
+ 	pr_debug("qhp %p qid 0x%x tid %u\n", qhp, qhp->wq.sq.qid,
+ 		 qhp->ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	skb = skb_dequeue(&qhp->ep->com.ep_skb_list);
  	if (WARN_ON(!skb))
@@@ -1254,7 -1253,7 +1300,11 @@@ static void __flush_qp(struct c4iw_qp *
  	int rq_flushed, sq_flushed;
  	unsigned long flag;
  
++<<<<<<< HEAD
 +	PDBG("%s qhp %p rchp %p schp %p\n", __func__, qhp, rchp, schp);
++=======
+ 	pr_debug("qhp %p rchp %p schp %p\n", qhp, rchp, schp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/* locking hierarchy: cq lock first, then qp lock. */
  	spin_lock_irqsave(&rchp->lock, flag);
@@@ -1339,8 -1338,7 +1389,12 @@@ static int rdma_fini(struct c4iw_dev *r
  	int ret;
  	struct sk_buff *skb;
  
++<<<<<<< HEAD
 +	PDBG("%s qhp %p qid 0x%x tid %u\n", __func__, qhp, qhp->wq.sq.qid,
 +	     ep->hwtid);
++=======
+ 	pr_debug("qhp %p qid 0x%x tid %u\n", qhp, qhp->wq.sq.qid, ep->hwtid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	skb = skb_dequeue(&ep->com.ep_skb_list);
  	if (WARN_ON(!skb))
@@@ -1366,13 -1364,13 +1420,21 @@@
  	ret = c4iw_wait_for_reply(&rhp->rdev, &ep->com.wr_wait, qhp->ep->hwtid,
  			     qhp->wq.sq.qid, __func__);
  out:
++<<<<<<< HEAD
 +	PDBG("%s ret %d\n", __func__, ret);
++=======
+ 	pr_debug("ret %d\n", ret);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return ret;
  }
  
  static void build_rtr_msg(u8 p2p_type, struct fw_ri_init *init)
  {
++<<<<<<< HEAD
 +	PDBG("%s p2p_type = %d\n", __func__, p2p_type);
++=======
+ 	pr_debug("p2p_type = %d\n", p2p_type);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	memset(&init->u, 0, sizeof init->u);
  	switch (p2p_type) {
  	case FW_RI_INIT_P2PTYPE_RDMA_WRITE:
@@@ -1401,8 -1399,8 +1463,13 @@@ static int rdma_init(struct c4iw_dev *r
  	int ret;
  	struct sk_buff *skb;
  
++<<<<<<< HEAD
 +	PDBG("%s qhp %p qid 0x%x tid %u ird %u ord %u\n", __func__, qhp,
 +	     qhp->wq.sq.qid, qhp->ep->hwtid, qhp->ep->ird, qhp->ep->ord);
++=======
+ 	pr_debug("qhp %p qid 0x%x tid %u ird %u ord %u\n", qhp,
+ 		 qhp->wq.sq.qid, qhp->ep->hwtid, qhp->ep->ird, qhp->ep->ord);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	skb = alloc_skb(sizeof *wqe, GFP_KERNEL);
  	if (!skb) {
@@@ -1474,7 -1472,7 +1541,11 @@@
  err1:
  	free_ird(rhp, qhp->attr.max_ird);
  out:
++<<<<<<< HEAD
 +	PDBG("%s ret %d\n", __func__, ret);
++=======
+ 	pr_debug("ret %d\n", ret);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return ret;
  }
  
@@@ -1491,9 -1489,9 +1562,15 @@@ int c4iw_modify_qp(struct c4iw_dev *rhp
  	int free = 0;
  	struct c4iw_ep *ep = NULL;
  
++<<<<<<< HEAD
 +	PDBG("%s qhp %p sqid 0x%x rqid 0x%x ep %p state %d -> %d\n", __func__,
 +	     qhp, qhp->wq.sq.qid, qhp->wq.rq.qid, qhp->ep, qhp->attr.state,
 +	     (mask & C4IW_QP_ATTR_NEXT_STATE) ? attrs->next_state : -1);
++=======
+ 	pr_debug("qhp %p sqid 0x%x rqid 0x%x ep %p state %d -> %d\n",
+ 		 qhp, qhp->wq.sq.qid, qhp->wq.rq.qid, qhp->ep, qhp->attr.state,
+ 		 (mask & C4IW_QP_ATTR_NEXT_STATE) ? attrs->next_state : -1);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	mutex_lock(&qhp->mutex);
  
@@@ -1679,8 -1676,8 +1756,13 @@@
  	}
  	goto out;
  err:
++<<<<<<< HEAD
 +	PDBG("%s disassociating ep %p qpid 0x%x\n", __func__, qhp->ep,
 +	     qhp->wq.sq.qid);
++=======
+ 	pr_debug("disassociating ep %p qpid 0x%x\n", qhp->ep,
+ 		 qhp->wq.sq.qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/* disassociate the LLP connection */
  	qhp->attr.llp_stream_handle = NULL;
@@@ -1716,7 -1713,7 +1798,11 @@@ out
  	 */
  	if (free)
  		c4iw_put_ep(&ep->com);
++<<<<<<< HEAD
 +	PDBG("%s exit state %d\n", __func__, qhp->attr.state);
++=======
+ 	pr_debug("exit state %d\n", qhp->attr.state);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return ret;
  }
  
@@@ -1746,7 -1743,7 +1832,11 @@@ int c4iw_destroy_qp(struct ib_qp *ib_qp
  
  	c4iw_qp_rem_ref(ib_qp);
  
++<<<<<<< HEAD
 +	PDBG("%s ib_qp %p qpid 0x%0x\n", __func__, ib_qp, qhp->wq.sq.qid);
++=======
+ 	pr_debug("ib_qp %p qpid 0x%0x\n", ib_qp, qhp->wq.sq.qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return 0;
  }
  
@@@ -1765,7 -1762,7 +1855,11 @@@ struct ib_qp *c4iw_create_qp(struct ib_
  	struct c4iw_mm_entry *sq_key_mm, *rq_key_mm = NULL, *sq_db_key_mm;
  	struct c4iw_mm_entry *rq_db_key_mm = NULL, *ma_sync_key_mm = NULL;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_pd %p\n", __func__, pd);
++=======
+ 	pr_debug("ib_pd %p\n", pd);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	if (attrs->qp_type != IB_QPT_RC)
  		return ERR_PTR(-EINVAL);
@@@ -1936,11 -1933,10 +2030,18 @@@
  	qhp->ibqp.qp_num = qhp->wq.sq.qid;
  	init_timer(&(qhp->timer));
  	INIT_LIST_HEAD(&qhp->db_fc_entry);
++<<<<<<< HEAD
 +	PDBG("%s sq id %u size %u memsize %zu num_entries %u "
 +	     "rq id %u size %u memsize %zu num_entries %u\n", __func__,
 +	     qhp->wq.sq.qid, qhp->wq.sq.size, qhp->wq.sq.memsize,
 +	     attrs->cap.max_send_wr, qhp->wq.rq.qid, qhp->wq.rq.size,
 +	     qhp->wq.rq.memsize, attrs->cap.max_recv_wr);
++=======
+ 	pr_debug("sq id %u size %u memsize %zu num_entries %u rq id %u size %u memsize %zu num_entries %u\n",
+ 		 qhp->wq.sq.qid, qhp->wq.sq.size, qhp->wq.sq.memsize,
+ 		 attrs->cap.max_send_wr, qhp->wq.rq.qid, qhp->wq.rq.size,
+ 		 qhp->wq.rq.memsize, attrs->cap.max_recv_wr);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return &qhp->ibqp;
  err8:
  	kfree(ma_sync_key_mm);
@@@ -1970,7 -1966,7 +2071,11 @@@ int c4iw_ib_modify_qp(struct ib_qp *ibq
  	enum c4iw_qp_attr_mask mask = 0;
  	struct c4iw_qp_attributes attrs;
  
++<<<<<<< HEAD
 +	PDBG("%s ib_qp %p\n", __func__, ibqp);
++=======
+ 	pr_debug("ib_qp %p\n", ibqp);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  
  	/* iwarp does not support the RTR state */
  	if ((attr_mask & IB_QP_STATE) && (attr->qp_state == IB_QPS_RTR))
@@@ -2016,7 -2012,7 +2121,11 @@@
  
  struct ib_qp *c4iw_get_qp(struct ib_device *dev, int qpn)
  {
++<<<<<<< HEAD
 +	PDBG("%s ib_dev %p qpn 0x%x\n", __func__, dev, qpn);
++=======
+ 	pr_debug("ib_dev %p qpn 0x%x\n", dev, qpn);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	return (struct ib_qp *)get_qhp(to_c4iw_dev(dev), qpn);
  }
  
diff --cc drivers/infiniband/hw/cxgb4/resource.c
index 67df71a7012e,3cf25997ed2b..000000000000
--- a/drivers/infiniband/hw/cxgb4/resource.c
+++ b/drivers/infiniband/hw/cxgb4/resource.c
@@@ -90,7 -90,7 +90,11 @@@ u32 c4iw_get_resource(struct c4iw_id_ta
  
  void c4iw_put_resource(struct c4iw_id_table *id_table, u32 entry)
  {
++<<<<<<< HEAD
 +	PDBG("%s entry 0x%x\n", __func__, entry);
++=======
+ 	pr_debug("entry 0x%x\n", entry);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	c4iw_id_free(id_table, entry);
  }
  
@@@ -141,7 -141,7 +145,11 @@@ u32 c4iw_get_cqid(struct c4iw_rdev *rde
  	}
  out:
  	mutex_unlock(&uctx->lock);
++<<<<<<< HEAD
 +	PDBG("%s qid 0x%x\n", __func__, qid);
++=======
+ 	pr_debug("qid 0x%x\n", qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&rdev->stats.lock);
  	if (rdev->stats.qid.cur > rdev->stats.qid.max)
  		rdev->stats.qid.max = rdev->stats.qid.cur;
@@@ -157,7 -157,7 +165,11 @@@ void c4iw_put_cqid(struct c4iw_rdev *rd
  	entry = kmalloc(sizeof *entry, GFP_KERNEL);
  	if (!entry)
  		return;
++<<<<<<< HEAD
 +	PDBG("%s qid 0x%x\n", __func__, qid);
++=======
+ 	pr_debug("qid 0x%x\n", qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	entry->qid = qid;
  	mutex_lock(&uctx->lock);
  	list_add_tail(&entry->entry, &uctx->cqids);
@@@ -215,7 -215,7 +227,11 @@@ u32 c4iw_get_qpid(struct c4iw_rdev *rde
  	}
  out:
  	mutex_unlock(&uctx->lock);
++<<<<<<< HEAD
 +	PDBG("%s qid 0x%x\n", __func__, qid);
++=======
+ 	pr_debug("qid 0x%x\n", qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&rdev->stats.lock);
  	if (rdev->stats.qid.cur > rdev->stats.qid.max)
  		rdev->stats.qid.max = rdev->stats.qid.cur;
@@@ -231,7 -231,7 +247,11 @@@ void c4iw_put_qpid(struct c4iw_rdev *rd
  	entry = kmalloc(sizeof *entry, GFP_KERNEL);
  	if (!entry)
  		return;
++<<<<<<< HEAD
 +	PDBG("%s qid 0x%x\n", __func__, qid);
++=======
+ 	pr_debug("qid 0x%x\n", qid);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	entry->qid = qid;
  	mutex_lock(&uctx->lock);
  	list_add_tail(&entry->entry, &uctx->qpids);
@@@ -254,7 -254,7 +274,11 @@@ void c4iw_destroy_resource(struct c4iw_
  u32 c4iw_pblpool_alloc(struct c4iw_rdev *rdev, int size)
  {
  	unsigned long addr = gen_pool_alloc(rdev->pbl_pool, size);
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x size %d\n", __func__, (u32)addr, size);
++=======
+ 	pr_debug("addr 0x%x size %d\n", (u32)addr, size);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&rdev->stats.lock);
  	if (addr) {
  		rdev->stats.pbl.cur += roundup(size, 1 << MIN_PBL_SHIFT);
@@@ -268,7 -268,7 +292,11 @@@
  
  void c4iw_pblpool_free(struct c4iw_rdev *rdev, u32 addr, int size)
  {
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x size %d\n", __func__, addr, size);
++=======
+ 	pr_debug("addr 0x%x size %d\n", addr, size);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&rdev->stats.lock);
  	rdev->stats.pbl.cur -= roundup(size, 1 << MIN_PBL_SHIFT);
  	mutex_unlock(&rdev->stats.lock);
@@@ -290,19 -290,17 +318,29 @@@ int c4iw_pblpool_create(struct c4iw_rde
  	while (pbl_start < pbl_top) {
  		pbl_chunk = min(pbl_top - pbl_start + 1, pbl_chunk);
  		if (gen_pool_add(rdev->pbl_pool, pbl_start, pbl_chunk, -1)) {
++<<<<<<< HEAD
 +			PDBG("%s failed to add PBL chunk (%x/%x)\n",
 +			     __func__, pbl_start, pbl_chunk);
++=======
+ 			pr_debug("failed to add PBL chunk (%x/%x)\n",
+ 				 pbl_start, pbl_chunk);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			if (pbl_chunk <= 1024 << MIN_PBL_SHIFT) {
 -				pr_warn("Failed to add all PBL chunks (%x/%x)\n",
 -					pbl_start, pbl_top - pbl_start);
 +				printk(KERN_WARNING MOD
 +				       "Failed to add all PBL chunks (%x/%x)\n",
 +				       pbl_start,
 +				       pbl_top - pbl_start);
  				return 0;
  			}
  			pbl_chunk >>= 1;
  		} else {
++<<<<<<< HEAD
 +			PDBG("%s added PBL chunk (%x/%x)\n",
 +			     __func__, pbl_start, pbl_chunk);
++=======
+ 			pr_debug("added PBL chunk (%x/%x)\n",
+ 				 pbl_start, pbl_chunk);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			pbl_start += pbl_chunk;
  		}
  	}
@@@ -324,9 -322,9 +362,13 @@@ void c4iw_pblpool_destroy(struct c4iw_r
  u32 c4iw_rqtpool_alloc(struct c4iw_rdev *rdev, int size)
  {
  	unsigned long addr = gen_pool_alloc(rdev->rqt_pool, size << 6);
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x size %d\n", __func__, (u32)addr, size << 6);
++=======
+ 	pr_debug("addr 0x%x size %d\n", (u32)addr, size << 6);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (!addr)
 -		pr_warn_ratelimited("%s: Out of RQT memory\n",
 +		pr_warn_ratelimited(MOD "%s: Out of RQT memory\n",
  				    pci_name(rdev->lldi.pdev));
  	mutex_lock(&rdev->stats.lock);
  	if (addr) {
@@@ -341,7 -339,7 +383,11 @@@
  
  void c4iw_rqtpool_free(struct c4iw_rdev *rdev, u32 addr, int size)
  {
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x size %d\n", __func__, addr, size << 6);
++=======
+ 	pr_debug("addr 0x%x size %d\n", addr, size << 6);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&rdev->stats.lock);
  	rdev->stats.rqt.cur -= roundup(size << 6, 1 << MIN_RQT_SHIFT);
  	mutex_unlock(&rdev->stats.lock);
@@@ -363,18 -361,17 +409,28 @@@ int c4iw_rqtpool_create(struct c4iw_rde
  	while (rqt_start < rqt_top) {
  		rqt_chunk = min(rqt_top - rqt_start + 1, rqt_chunk);
  		if (gen_pool_add(rdev->rqt_pool, rqt_start, rqt_chunk, -1)) {
++<<<<<<< HEAD
 +			PDBG("%s failed to add RQT chunk (%x/%x)\n",
 +			     __func__, rqt_start, rqt_chunk);
++=======
+ 			pr_debug("failed to add RQT chunk (%x/%x)\n",
+ 				 rqt_start, rqt_chunk);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			if (rqt_chunk <= 1024 << MIN_RQT_SHIFT) {
 -				pr_warn("Failed to add all RQT chunks (%x/%x)\n",
 -					rqt_start, rqt_top - rqt_start);
 +				printk(KERN_WARNING MOD
 +				       "Failed to add all RQT chunks (%x/%x)\n",
 +				       rqt_start, rqt_top - rqt_start);
  				return 0;
  			}
  			rqt_chunk >>= 1;
  		} else {
++<<<<<<< HEAD
 +			PDBG("%s added RQT chunk (%x/%x)\n",
 +			     __func__, rqt_start, rqt_chunk);
++=======
+ 			pr_debug("added RQT chunk (%x/%x)\n",
+ 				 rqt_start, rqt_chunk);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			rqt_start += rqt_chunk;
  		}
  	}
@@@ -394,7 -391,7 +450,11 @@@ void c4iw_rqtpool_destroy(struct c4iw_r
  u32 c4iw_ocqp_pool_alloc(struct c4iw_rdev *rdev, int size)
  {
  	unsigned long addr = gen_pool_alloc(rdev->ocqp_pool, size);
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x size %d\n", __func__, (u32)addr, size);
++=======
+ 	pr_debug("addr 0x%x size %d\n", (u32)addr, size);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	if (addr) {
  		mutex_lock(&rdev->stats.lock);
  		rdev->stats.ocqp.cur += roundup(size, 1 << MIN_OCQP_SHIFT);
@@@ -407,7 -404,7 +467,11 @@@
  
  void c4iw_ocqp_pool_free(struct c4iw_rdev *rdev, u32 addr, int size)
  {
++<<<<<<< HEAD
 +	PDBG("%s addr 0x%x size %d\n", __func__, addr, size);
++=======
+ 	pr_debug("addr 0x%x size %d\n", addr, size);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  	mutex_lock(&rdev->stats.lock);
  	rdev->stats.ocqp.cur -= roundup(size, 1 << MIN_OCQP_SHIFT);
  	mutex_unlock(&rdev->stats.lock);
@@@ -429,18 -426,17 +493,28 @@@ int c4iw_ocqp_pool_create(struct c4iw_r
  	while (start < top) {
  		chunk = min(top - start + 1, chunk);
  		if (gen_pool_add(rdev->ocqp_pool, start, chunk, -1)) {
++<<<<<<< HEAD
 +			PDBG("%s failed to add OCQP chunk (%x/%x)\n",
 +			     __func__, start, chunk);
++=======
+ 			pr_debug("failed to add OCQP chunk (%x/%x)\n",
+ 				 start, chunk);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			if (chunk <= 1024 << MIN_OCQP_SHIFT) {
 -				pr_warn("Failed to add all OCQP chunks (%x/%x)\n",
 -					start, top - start);
 +				printk(KERN_WARNING MOD
 +				       "Failed to add all OCQP chunks (%x/%x)\n",
 +				       start, top - start);
  				return 0;
  			}
  			chunk >>= 1;
  		} else {
++<<<<<<< HEAD
 +			PDBG("%s added OCQP chunk (%x/%x)\n",
 +			     __func__, start, chunk);
++=======
+ 			pr_debug("added OCQP chunk (%x/%x)\n",
+ 				 start, chunk);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			start += chunk;
  		}
  	}
diff --cc drivers/infiniband/hw/cxgb4/t4.h
index 640d22148a3e,17abe46920d1..000000000000
--- a/drivers/infiniband/hw/cxgb4/t4.h
+++ b/drivers/infiniband/hw/cxgb4/t4.h
@@@ -466,14 -466,12 +466,22 @@@ static inline void t4_ring_sq_db(struc
  	wmb();
  	if (wq->sq.bar2_va) {
  		if (inc == 1 && wq->sq.bar2_qid == 0 && wqe) {
++<<<<<<< HEAD
 +			PDBG("%s: WC wq->sq.pidx = %d\n",
 +			     __func__, wq->sq.pidx);
++=======
+ 			pr_debug("WC wq->sq.pidx = %d\n", wq->sq.pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			pio_copy((u64 __iomem *)
  				 (wq->sq.bar2_va + SGE_UDB_WCDOORBELL),
  				 (u64 *)wqe);
  		} else {
++<<<<<<< HEAD
 +			PDBG("%s: DB wq->sq.pidx = %d\n",
 +			     __func__, wq->sq.pidx);
++=======
+ 			pr_debug("DB wq->sq.pidx = %d\n", wq->sq.pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			writel(PIDX_T5_V(inc) | QID_V(wq->sq.bar2_qid),
  			       wq->sq.bar2_va + SGE_UDB_KDOORBELL);
  		}
@@@ -493,14 -491,12 +501,22 @@@ static inline void t4_ring_rq_db(struc
  	wmb();
  	if (wq->rq.bar2_va) {
  		if (inc == 1 && wq->rq.bar2_qid == 0 && wqe) {
++<<<<<<< HEAD
 +			PDBG("%s: WC wq->rq.pidx = %d\n",
 +			     __func__, wq->rq.pidx);
++=======
+ 			pr_debug("WC wq->rq.pidx = %d\n", wq->rq.pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			pio_copy((u64 __iomem *)
  				 (wq->rq.bar2_va + SGE_UDB_WCDOORBELL),
  				 (void *)wqe);
  		} else {
++<<<<<<< HEAD
 +			PDBG("%s: DB wq->rq.pidx = %d\n",
 +			     __func__, wq->rq.pidx);
++=======
+ 			pr_debug("DB wq->rq.pidx = %d\n", wq->rq.pidx);
++>>>>>>> 548ddb19afba (iw_cxgb4: Remove __func__ parameter from pr_debug())
  			writel(PIDX_T5_V(inc) | QID_V(wq->rq.bar2_qid),
  			       wq->rq.bar2_va + SGE_UDB_KDOORBELL);
  		}
* Unmerged path drivers/infiniband/hw/cxgb4/cm.c
* Unmerged path drivers/infiniband/hw/cxgb4/cq.c
* Unmerged path drivers/infiniband/hw/cxgb4/device.c
* Unmerged path drivers/infiniband/hw/cxgb4/iw_cxgb4.h
* Unmerged path drivers/infiniband/hw/cxgb4/mem.c
* Unmerged path drivers/infiniband/hw/cxgb4/provider.c
* Unmerged path drivers/infiniband/hw/cxgb4/qp.c
* Unmerged path drivers/infiniband/hw/cxgb4/resource.c
* Unmerged path drivers/infiniband/hw/cxgb4/t4.h
