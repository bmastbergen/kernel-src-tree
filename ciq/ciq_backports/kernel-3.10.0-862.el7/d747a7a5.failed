tcp: reset sk_rx_dst in tcp_disconnect()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author WANG Cong <xiyou.wangcong@gmail.com>
commit d747a7a51b00984127a88113cdbbc26f91e9d815
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d747a7a5.failed

We have to reset the sk->sk_rx_dst when we disconnect a TCP
connection, because otherwise when we re-connect it this
dst reference is simply overridden in tcp_finish_connect().

This fixes a dst leak which leads to a loopback dev refcnt
leak. It is a long-standing bug, Kevin reported a very similar
(if not same) bug before. Thanks to Andrei for providing such
a reliable reproducer which greatly narrows down the problem.

Fixes: 41063e9dd119 ("ipv4: Early TCP socket demux.")
	Reported-by: Andrei Vagin <avagin@gmail.com>
	Reported-by: Kevin Xu <kaiwen.xu@hulu.com>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d747a7a51b00984127a88113cdbbc26f91e9d815)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp.c
diff --cc net/ipv4/tcp.c
index dced249d2d22,40aca7803cf2..000000000000
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@@ -2242,6 -2326,17 +2242,16 @@@ int tcp_disconnect(struct sock *sk, in
  	tcp_init_send_head(sk);
  	memset(&tp->rx_opt, 0, sizeof(tp->rx_opt));
  	__sk_dst_reset(sk);
++<<<<<<< HEAD
++=======
+ 	dst_release(sk->sk_rx_dst);
+ 	sk->sk_rx_dst = NULL;
+ 	tcp_saved_syn_free(tp);
+ 
+ 	/* Clean up fastopen related fields */
+ 	tcp_free_fastopen_req(tp);
+ 	inet->defer_connect = 0;
++>>>>>>> d747a7a51b00 (tcp: reset sk_rx_dst in tcp_disconnect())
  
  	WARN_ON(inet->inet_num && !icsk->icsk_bind_hash);
  
* Unmerged path net/ipv4/tcp.c
