macsec: enable GRO and RPS on macsec devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Paolo Abeni <pabeni@redhat.com>
commit 5491e7c6b1a95df39b917e16f2eeddc84f9e8491
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5491e7c6.failed

Use gro_gells to trigger GRO and allow RPS on macsec traffic
after decryption.
Also, be sure to avoid clearing software offload features in
macsec_fix_features().
Overall this increase TCP tput by 30% on recent h/w.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5491e7c6b1a95df39b917e16f2eeddc84f9e8491)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macsec.c
diff --cc drivers/net/macsec.c
index 8665a14a86f9,0cbb935078da..000000000000
--- a/drivers/net/macsec.c
+++ b/drivers/net/macsec.c
@@@ -1246,9 -1196,12 +1249,18 @@@ deliver
  
  	if (rx_sa)
  		macsec_rxsa_put(rx_sa);
++<<<<<<< HEAD
 +	macsec_rxsc_put(rx_sc);
 +
 +	count_rx(dev, skb->len);
++=======
+ 
+ 	ret = gro_cells_receive(&macsec->gro_cells, skb);
+ 	if (ret == NET_RX_SUCCESS)
+ 		count_rx(dev, skb->len);
+ 	else
+ 		macsec->secy.netdev->stats.rx_dropped++;
++>>>>>>> 5491e7c6b1a9 (macsec: enable GRO and RPS on macsec devices)
  
  	rcu_read_unlock();
  
* Unmerged path drivers/net/macsec.c
