PCI: Switch msix_program_entries() to use pci_msix_desc_addr()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [pci] Switch msix_program_entries() to use pci_msix_desc_addr() (Ming Lei) [1389540]
Rebuild_FUZZ: 95.80%
commit-author Christoph Hellwig <hch@lst.de>
commit 12eb21de1f26233ad195ffe991697d61790f4193
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/12eb21de.failed

Instead of relying on the msix_entry structure for the vector number, read
it from the msi_desc.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Alexander Gordeev <agordeev@redhat.com>
(cherry picked from commit 12eb21de1f26233ad195ffe991697d61790f4193)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/msi.c
diff --cc drivers/pci/msi.c
index 3127b0433131,a385f39be6f7..000000000000
--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@@ -707,13 -712,10 +707,20 @@@ static void msix_program_entries(struc
  	struct msi_desc *entry;
  	int i = 0;
  
++<<<<<<< HEAD
 +	list_for_each_entry(entry, &dev->msi_list, list) {
 +		int offset = entries[i].entry * PCI_MSIX_ENTRY_SIZE +
 +						PCI_MSIX_ENTRY_VECTOR_CTRL;
 +
 +		entries[i].vector = entry->irq;
 +		irq_set_msi_desc(entry->irq, entry);
 +		entry->masked = readl(entry->mask_base + offset);
++=======
+ 	for_each_pci_msi_entry(entry, dev) {
+ 		entries[i].vector = entry->irq;
+ 		entry->masked = readl(pci_msix_desc_addr(entry) +
+ 				PCI_MSIX_ENTRY_VECTOR_CTRL);
++>>>>>>> 12eb21de1f26 (PCI: Switch msix_program_entries() to use pci_msix_desc_addr())
  		msix_mask_irq(entry, 1);
  		i++;
  	}
* Unmerged path drivers/pci/msi.c
