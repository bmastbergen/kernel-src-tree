mlxsw: spectrum: Trap IPv4 packets with Router Alert option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 7607dd35fc34893214284cca740d015154d20452
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7607dd35.failed

In case local sockets have the IP_ROUTER_ALERT socket option set, then
they expect to get packets with the Router Alert option.

Trap such packets, so that the kernel could inspect them and potentially
send them to interested sockets.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7607dd35fc34893214284cca740d015154d20452)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
#	drivers/net/ethernet/mellanox/mlxsw/trap.h
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index 48f8ce84f0a1,bc35b400e6f1..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -3365,15 -3332,22 +3365,28 @@@ static const struct mlxsw_listener mlxs
  	MLXSW_SP_RXL_NO_MARK(IGMP_V3_REPORT, TRAP_TO_CPU, IGMP, false),
  	MLXSW_SP_RXL_MARK(ARPBC, MIRROR_TO_CPU, ARP, false),
  	MLXSW_SP_RXL_MARK(ARPUC, MIRROR_TO_CPU, ARP, false),
 -	MLXSW_SP_RXL_NO_MARK(FID_MISS, TRAP_TO_CPU, IP2ME, false),
  	/* L3 traps */
 -	MLXSW_SP_RXL_MARK(MTUERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 -	MLXSW_SP_RXL_MARK(TTLERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 -	MLXSW_SP_RXL_MARK(LBERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 +	MLXSW_SP_RXL_NO_MARK(MTUERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 +	MLXSW_SP_RXL_NO_MARK(TTLERROR, TRAP_TO_CPU, ROUTER_EXP, false),
 +	MLXSW_SP_RXL_NO_MARK(LBERROR, TRAP_TO_CPU, ROUTER_EXP, false),
  	MLXSW_SP_RXL_MARK(OSPF, TRAP_TO_CPU, OSPF, false),
++<<<<<<< HEAD
 +	MLXSW_SP_RXL_NO_MARK(IP2ME, TRAP_TO_CPU, IP2ME, false),
 +	MLXSW_SP_RXL_NO_MARK(RTR_INGRESS0, TRAP_TO_CPU, REMOTE_ROUTE, false),
 +	MLXSW_SP_RXL_NO_MARK(HOST_MISS_IPV4, TRAP_TO_CPU, ARP_MISS, false),
 +	MLXSW_SP_RXL_NO_MARK(BGP_IPV4, TRAP_TO_CPU, BGP_IPV4, false),
++=======
+ 	MLXSW_SP_RXL_MARK(IP2ME, TRAP_TO_CPU, IP2ME, false),
+ 	MLXSW_SP_RXL_MARK(RTR_INGRESS0, TRAP_TO_CPU, REMOTE_ROUTE, false),
+ 	MLXSW_SP_RXL_MARK(HOST_MISS_IPV4, TRAP_TO_CPU, ARP_MISS, false),
+ 	MLXSW_SP_RXL_MARK(BGP_IPV4, TRAP_TO_CPU, BGP_IPV4, false),
+ 	MLXSW_SP_RXL_MARK(ROUTER_ALERT_IPV4, TRAP_TO_CPU, ROUTER_EXP, false),
+ 	/* PKT Sample trap */
+ 	MLXSW_RXL(mlxsw_sp_rx_listener_sample_func, PKT_SAMPLE, MIRROR_TO_CPU,
+ 		  false, SP_IP2ME, DISCARD),
+ 	/* ACL trap */
+ 	MLXSW_SP_RXL_NO_MARK(ACL0, TRAP_TO_CPU, IP2ME, false),
++>>>>>>> 7607dd35fc34 (mlxsw: spectrum: Trap IPv4 packets with Router Alert option)
  };
  
  static int mlxsw_sp_cpu_policers_set(struct mlxsw_core *mlxsw_core)
diff --cc drivers/net/ethernet/mellanox/mlxsw/trap.h
index 7ab275deacac,4946d4e2b3f9..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/trap.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/trap.h
@@@ -64,6 -66,8 +64,11 @@@ enum 
  	MLXSW_TRAP_ID_RTR_INGRESS0 = 0x70,
  	MLXSW_TRAP_ID_BGP_IPV4 = 0x88,
  	MLXSW_TRAP_ID_HOST_MISS_IPV4 = 0x90,
++<<<<<<< HEAD
++=======
+ 	MLXSW_TRAP_ID_ROUTER_ALERT_IPV4 = 0xD6,
+ 	MLXSW_TRAP_ID_ACL0 = 0x1C0,
++>>>>>>> 7607dd35fc34 (mlxsw: spectrum: Trap IPv4 packets with Router Alert option)
  
  	MLXSW_TRAP_ID_MAX = 0x1FF
  };
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/trap.h
