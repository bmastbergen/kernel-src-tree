IB/mlx5: Add port counter support for Receive WQs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Majd Dibbiny <majd@mellanox.com>
commit 23a6964e3adb0796e1633562a574839b92360cb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/23a6964e.failed

Counters weren't updated due to Receive WQs' traffic since the
counter-id was not associated with the RQ.

Added support for associating the q-counter-id with the Receive WQ.
The attachment is done only when changing WQ's state from RESET to
READY in modify-WQ command.

FW support is required for the above, without this support
Receive WQ counters will not count.

	Signed-off-by: Majd Dibbiny <majd@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 23a6964e3adb0796e1633562a574839b92360cb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/qp.c
diff --cc drivers/infiniband/hw/mlx5/qp.c
index 49c23de28351,f395ee9d2fea..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -5027,20 -4910,14 +5027,31 @@@ int mlx5_ib_modify_wq(struct ib_wq *wq
  	MLX5_SET(modify_rq_in, in, rq_state, curr_wq_state);
  	MLX5_SET(rqc, rqc, state, wq_state);
  
++<<<<<<< HEAD
 +	if (wq_attr_mask & IB_WQ_FLAGS) {
 +		if (wq_attr->flags_mask & IB_WQ_FLAGS_CVLAN_STRIPPING) {
 +			if (!(MLX5_CAP_GEN(dev->mdev, eth_net_offloads) &&
 +			      MLX5_CAP_ETH(dev->mdev, vlan_cap))) {
 +				mlx5_ib_dbg(dev, "VLAN offloads are not "
 +					    "supported\n");
 +				err = -EOPNOTSUPP;
 +				goto out;
 +			}
 +			MLX5_SET64(modify_rq_in, in, modify_bitmask,
 +				   MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_VSD);
 +			MLX5_SET(rqc, rqc, vsd,
 +				 (wq_attr->flags & IB_WQ_FLAGS_CVLAN_STRIPPING) ? 0 : 1);
 +		}
++=======
+ 	if (curr_wq_state == IB_WQS_RESET && wq_state == IB_WQS_RDY) {
+ 		if (MLX5_CAP_GEN(dev->mdev, modify_rq_counter_set_id)) {
+ 			MLX5_SET64(modify_rq_in, in, modify_bitmask,
+ 				   MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_RQ_COUNTER_SET_ID);
+ 			MLX5_SET(rqc, rqc, counter_set_id, dev->port->q_cnts.set_id);
+ 		} else
+ 			pr_info_once("%s: Receive WQ counters are not supported on current FW\n",
+ 				     dev->ib_dev.name);
++>>>>>>> 23a6964e3adb (IB/mlx5: Add port counter support for Receive WQs)
  	}
  
  	err = mlx5_core_modify_rq(dev->mdev, rwq->core_qp.qpn, in, inlen);
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
diff --git a/include/linux/mlx5/mlx5_ifc.h b/include/linux/mlx5/mlx5_ifc.h
index 40c097a0af04..4928da5d2ccd 100644
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@ -5011,7 +5011,7 @@ struct mlx5_ifc_modify_rq_out_bits {
 
 enum {
 	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_VSD = 1ULL << 1,
-	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_MODIFY_RQ_COUNTER_SET_ID = 1ULL << 3,
+	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_RQ_COUNTER_SET_ID = 1ULL << 3,
 };
 
 struct mlx5_ifc_modify_rq_in_bits {
