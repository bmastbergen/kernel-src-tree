tpm: silence an array overflow warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 70ea163699b68963e222a905e184f6436e8a290d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/70ea1636.failed

We should check that we're within bounds first before checking that
"chip->active_banks[i] != TPM2_ALG_ERROR" so I've re-ordered the two
checks.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
(cherry picked from commit 70ea163699b68963e222a905e184f6436e8a290d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/tpm/tpm-interface.c
diff --cc drivers/char/tpm/tpm-interface.c
index 5bfdd527b27a,087748b8264f..000000000000
--- a/drivers/char/tpm/tpm-interface.c
+++ b/drivers/char/tpm/tpm-interface.c
@@@ -811,7 -798,16 +811,20 @@@ int tpm_pcr_extend(u32 chip_num, int pc
  		return -ENODEV;
  
  	if (chip->flags & TPM_CHIP_FLAG_TPM2) {
++<<<<<<< HEAD
 +		rc = tpm2_pcr_extend(chip, pcr_idx, hash);
++=======
+ 		memset(digest_list, 0, sizeof(digest_list));
+ 
+ 		for (i = 0; i < ARRAY_SIZE(chip->active_banks) &&
+ 			    chip->active_banks[i] != TPM2_ALG_ERROR; i++) {
+ 			digest_list[i].alg_id = chip->active_banks[i];
+ 			memcpy(digest_list[i].digest, hash, TPM_DIGEST_SIZE);
+ 			count++;
+ 		}
+ 
+ 		rc = tpm2_pcr_extend(chip, pcr_idx, count, digest_list);
++>>>>>>> 70ea163699b6 (tpm: silence an array overflow warning)
  		tpm_put_ops(chip);
  		return rc;
  	}
* Unmerged path drivers/char/tpm/tpm-interface.c
