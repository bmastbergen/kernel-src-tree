iomap: Add IOMAP_F_DATA_INLINE flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 9ca250a5137f3df7ffac58b49660beadd5926ace
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9ca250a5.failed

Add a new IOMAP_F_DATA_INLINE flag to indicate that a mapping is in a
disk area that contains data as well as metadata.  In iomap_fiemap, map
this flag to FIEMAP_EXTENT_DATA_INLINE.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Reviewed-by: Jan Kara <jack@suse.cz>
(cherry picked from commit 9ca250a5137f3df7ffac58b49660beadd5926ace)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/iomap.h
diff --cc include/linux/iomap.h
index c74226a738a3,2b0790dbd6ea..000000000000
--- a/include/linux/iomap.h
+++ b/include/linux/iomap.h
@@@ -15,22 -15,28 +15,33 @@@ struct vm_fault
   */
  #define IOMAP_HOLE	0x01	/* no blocks allocated, need allocation */
  #define IOMAP_DELALLOC	0x02	/* delayed allocation blocks */
 -#define IOMAP_MAPPED	0x03	/* blocks allocated at @addr */
 -#define IOMAP_UNWRITTEN	0x04	/* blocks allocated at @addr in unwritten state */
 +#define IOMAP_MAPPED	0x03	/* blocks allocated @blkno */
 +#define IOMAP_UNWRITTEN	0x04	/* blocks allocated @blkno in unwritten state */
  
  /*
 - * Flags for all iomap mappings:
 + * Flags for iomap mappings:
   */
 -#define IOMAP_F_NEW	0x01	/* blocks have been newly allocated */
 +#define IOMAP_F_MERGED	0x01	/* contains multiple blocks/extents */
 +#define IOMAP_F_SHARED	0x02	/* block shared with another file */
  
  /*
 - * Flags that only need to be reported for IOMAP_REPORT requests:
 + * Magic value for blkno:
   */
++<<<<<<< HEAD
 +#define IOMAP_NULL_BLOCK -1LL	/* blkno is not valid */
++=======
+ #define IOMAP_F_MERGED		0x10	/* contains multiple blocks/extents */
+ #define IOMAP_F_SHARED		0x20	/* block shared with another file */
+ #define IOMAP_F_DATA_INLINE	0x40	/* data inline in the inode */
+ 
+ /*
+  * Magic value for addr:
+  */
+ #define IOMAP_NULL_ADDR -1ULL	/* addr is not valid */
++>>>>>>> 9ca250a5137f (iomap: Add IOMAP_F_DATA_INLINE flag)
  
  struct iomap {
 -	u64			addr; /* disk offset of mapping, bytes */
 +	sector_t		blkno;	/* 1st sector of mapping, 512b units */
  	loff_t			offset;	/* file offset of mapping, bytes */
  	u64			length;	/* length of mapping, bytes */
  	u16			type;	/* type of mapping */
diff --git a/fs/iomap.c b/fs/iomap.c
index f6bfcdf64146..40dc21013e82 100644
--- a/fs/iomap.c
+++ b/fs/iomap.c
@@ -516,6 +516,8 @@ static int iomap_to_fiemap(struct fiemap_extent_info *fi,
 		flags |= FIEMAP_EXTENT_MERGED;
 	if (iomap->flags & IOMAP_F_SHARED)
 		flags |= FIEMAP_EXTENT_SHARED;
+	if (iomap->flags & IOMAP_F_DATA_INLINE)
+		flags |= FIEMAP_EXTENT_DATA_INLINE;
 
 	return fiemap_fill_next_extent(fi, iomap->offset,
 			iomap->blkno != IOMAP_NULL_BLOCK ? iomap->blkno << 9: 0,
* Unmerged path include/linux/iomap.h
