powerpc/mm/hugetlb: Filter out hugepage size not supported by page table layout

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [powerpc] mm/hugetlb: Filter out hugepage size not supported by page table layout (Steve Best) [1495748]
Rebuild_FUZZ: 94.67%
commit-author Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
commit a525108cf1cc14651602d678da38fa627a76a724
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a525108c.failed

Without this if firmware reports 1MB page size support we will crash
trying to use 1MB as hugetlb page size.

echo 300 > /sys/kernel/mm/hugepages/hugepages-1024kB/nr_hugepages

kernel BUG at ./arch/powerpc/include/asm/hugetlb.h:19!
.....
....
[c0000000e2c27b30] c00000000029dae8 .hugetlb_fault+0x638/0xda0
[c0000000e2c27c30] c00000000026fb64 .handle_mm_fault+0x844/0x1d70
[c0000000e2c27d70] c00000000004805c .do_page_fault+0x3dc/0x7c0
[c0000000e2c27e30] c00000000000ac98 handle_page_fault+0x10/0x30

With fix, we don't enable 1MB as hugepage size.

bash-4.2# cd /sys/kernel/mm/hugepages/
bash-4.2# ls
hugepages-16384kB  hugepages-16777216kB

	Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit a525108cf1cc14651602d678da38fa627a76a724)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/mm/hugetlbpage.c
diff --cc arch/powerpc/mm/hugetlbpage.c
index 970c29845301,a4f33de4008e..000000000000
--- a/arch/powerpc/mm/hugetlbpage.c
+++ b/arch/powerpc/mm/hugetlbpage.c
@@@ -808,13 -753,23 +808,33 @@@ static int __init add_huge_page_size(un
  	if ((mmu_psize = shift_to_mmu_psize(shift)) < 0)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +#ifdef CONFIG_SPU_FS_64K_LS
 +	/* Disable support for 64K huge pages when 64K SPU local store
 +	 * support is enabled as the current implementation conflicts.
 +	 */
 +	if (shift == PAGE_SHIFT_64K)
 +		return -EINVAL;
 +#endif /* CONFIG_SPU_FS_64K_LS */
++=======
+ #ifdef CONFIG_PPC_BOOK3S_64
+ 	/*
+ 	 * We need to make sure that for different page sizes reported by
+ 	 * firmware we only add hugetlb support for page sizes that can be
+ 	 * supported by linux page table layout.
+ 	 * For now we have
+ 	 * Radix: 2M
+ 	 * Hash: 16M and 16G
+ 	 */
+ 	if (radix_enabled()) {
+ 		if (mmu_psize != MMU_PAGE_2M)
+ 			return -EINVAL;
+ 	} else {
+ 		if (mmu_psize != MMU_PAGE_16M && mmu_psize != MMU_PAGE_16G)
+ 			return -EINVAL;
+ 	}
+ #endif
++>>>>>>> a525108cf1cc (powerpc/mm/hugetlb: Filter out hugepage size not supported by page table layout)
  
  	BUG_ON(mmu_psize_defs[mmu_psize].shift != shift);
  
* Unmerged path arch/powerpc/mm/hugetlbpage.c
