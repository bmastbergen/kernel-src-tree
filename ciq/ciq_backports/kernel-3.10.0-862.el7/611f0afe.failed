perf tools: Add compress.h for the *_decompress_to_file() headers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 611f0afee0e87eb6d184e7f58aa20d18d291d169
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/611f0afe.failed

Out of util.h, the implementations were already in separate files, that
are built conditionally.

Link: http://lkml.kernel.org/n/tip-0ur7szxsb59f8758kfe63prb@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 611f0afee0e87eb6d184e7f58aa20d18d291d169)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/dso.c
#	tools/perf/util/util.h
diff --cc tools/perf/util/dso.c
index af1b6926a19b,3339ab7cabc5..000000000000
--- a/tools/perf/util/dso.c
+++ b/tools/perf/util/dso.c
@@@ -1,6 -1,10 +1,12 @@@
  #include <asm/bug.h>
 -#include <linux/kernel.h>
  #include <sys/time.h>
  #include <sys/resource.h>
++<<<<<<< HEAD
++=======
+ #include <errno.h>
+ #include "compress.h"
+ #include "path.h"
++>>>>>>> 611f0afee0e8 (perf tools: Add compress.h for the *_decompress_to_file() headers)
  #include "symbol.h"
  #include "dso.h"
  #include "machine.h"
diff --cc tools/perf/util/util.h
index e0eb4eee09b0,5dea8a96cf84..000000000000
--- a/tools/perf/util/util.h
+++ b/tools/perf/util/util.h
@@@ -152,61 -99,20 +152,64 @@@ void mem_bswap_32(void *src, int byte_s
  
  bool find_process(const char *name);
  
 -int get_stack_size(const char *str, unsigned long *_size);
++<<<<<<< HEAD
 +#ifdef HAVE_ZLIB_SUPPORT
 +int gzip_decompress_to_file(const char *input, int output_fd);
 +#endif
  
 -int fetch_kernel_version(unsigned int *puint,
 -			 char *str, size_t str_sz);
 -#define KVER_VERSION(x)		(((x) >> 16) & 0xff)
 -#define KVER_PATCHLEVEL(x)	(((x) >> 8) & 0xff)
 -#define KVER_SUBLEVEL(x)	((x) & 0xff)
 -#define KVER_FMT	"%d.%d.%d"
 -#define KVER_PARAM(x)	KVER_VERSION(x), KVER_PATCHLEVEL(x), KVER_SUBLEVEL(x)
 +#ifdef HAVE_LZMA_SUPPORT
 +int lzma_decompress_to_file(const char *input, int output_fd);
 +#endif
 +
 +char *asprintf_expr_inout_ints(const char *var, bool in, size_t nints, int *ints);
 +
 +static inline char *asprintf_expr_in_ints(const char *var, size_t nints, int *ints)
 +{
 +	return asprintf_expr_inout_ints(var, true, nints, ints);
 +}
 +
 +static inline char *asprintf_expr_not_in_ints(const char *var, size_t nints, int *ints)
 +{
 +	return asprintf_expr_inout_ints(var, false, nints, ints);
 +}
 +
++=======
++>>>>>>> 611f0afee0e8 (perf tools: Add compress.h for the *_decompress_to_file() headers)
 +int get_stack_size(const char *str, unsigned long *_size);
  
  const char *perf_tip(const char *dirpath);
 +bool is_regular_file(const char *file);
 +int fetch_current_timestamp(char *buf, size_t sz);
 +
 +enum binary_printer_ops {
 +	BINARY_PRINT_DATA_BEGIN,
 +	BINARY_PRINT_LINE_BEGIN,
 +	BINARY_PRINT_ADDR,
 +	BINARY_PRINT_NUM_DATA,
 +	BINARY_PRINT_NUM_PAD,
 +	BINARY_PRINT_SEP,
 +	BINARY_PRINT_CHAR_DATA,
 +	BINARY_PRINT_CHAR_PAD,
 +	BINARY_PRINT_LINE_END,
 +	BINARY_PRINT_DATA_END,
 +};
 +
 +typedef void (*print_binary_t)(enum binary_printer_ops,
 +			       unsigned int val,
 +			       void *extra);
  
 -#ifndef HAVE_SCHED_GETCPU_SUPPORT
 -int sched_getcpu(void);
 +void print_binary(unsigned char *data, size_t len,
 +		  size_t bytes_per_line, print_binary_t printer,
 +		  void *extra);
 +
 +#if !defined(__GLIBC__) && !defined(__ANDROID__)
 +extern int sched_getcpu(void);
  #endif
  
 +int is_printable_array(char *p, unsigned int len);
 +
 +int timestamp__scnprintf_usec(u64 timestamp, char *buf, size_t sz);
 +
 +int unit_number__scnprintf(char *buf, size_t size, u64 n);
 +
  #endif /* GIT_COMPAT_UTIL_H */
diff --git a/tools/perf/util/compress.h b/tools/perf/util/compress.h
new file mode 100644
index 000000000000..67fd1bb7c2b7
--- /dev/null
+++ b/tools/perf/util/compress.h
@@ -0,0 +1,12 @@
+#ifndef PERF_COMPRESS_H
+#define PERF_COMPRESS_H
+
+#ifdef HAVE_ZLIB_SUPPORT
+int gzip_decompress_to_file(const char *input, int output_fd);
+#endif
+
+#ifdef HAVE_LZMA_SUPPORT
+int lzma_decompress_to_file(const char *input, int output_fd);
+#endif
+
+#endif /* PERF_COMPRESS_H */
* Unmerged path tools/perf/util/dso.c
diff --git a/tools/perf/util/lzma.c b/tools/perf/util/lzma.c
index 9ddea5cecd94..5531eb680aba 100644
--- a/tools/perf/util/lzma.c
+++ b/tools/perf/util/lzma.c
@@ -1,6 +1,7 @@
 #include <lzma.h>
 #include <stdio.h>
 #include <linux/compiler.h>
+#include "compress.h"
 #include "util.h"
 #include "debug.h"
 
* Unmerged path tools/perf/util/util.h
diff --git a/tools/perf/util/zlib.c b/tools/perf/util/zlib.c
index 495a449fc25c..1329d843eb7b 100644
--- a/tools/perf/util/zlib.c
+++ b/tools/perf/util/zlib.c
@@ -4,6 +4,7 @@
 #include <sys/mman.h>
 #include <zlib.h>
 
+#include "util/compress.h"
 #include "util/util.h"
 #include "util/debug.h"
 
