dm crypt: remove obsolete references to per-CPU state

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Eric Biggers <ebiggers@google.com>
commit 86f917adea2dc0ef440a248601e48154dc48e6d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/86f917ad.failed

dm-crypt used to use separate crypto transforms for each CPU, but this
is no longer the case.  To avoid confusion, fix up obsolete comments and
rename setup_essiv_cpu().

	Signed-off-by: Eric Biggers <ebiggers@google.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 86f917adea2dc0ef440a248601e48154dc48e6d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-crypt.c
diff --cc drivers/md/dm-crypt.c
index 42505e46c965,e2de5715d528..000000000000
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@@ -185,14 -221,20 +185,14 @@@ struct crypt_config 
  
  static void clone_init(struct dm_crypt_io *, struct bio *);
  static void kcryptd_queue_crypt(struct dm_crypt_io *io);
 -static struct scatterlist *crypt_get_sg_data(struct crypt_config *cc,
 -					     struct scatterlist *sg);
 +static u8 *iv_of_dmreq(struct crypt_config *cc, struct dm_crypt_request *dmreq);
  
  /*
-  * Use this to access cipher attributes that are the same for each CPU.
+  * Use this to access cipher attributes that are independent of the key.
   */
 -static struct crypto_skcipher *any_tfm(struct crypt_config *cc)
 +static struct crypto_ablkcipher *any_tfm(struct crypt_config *cc)
  {
 -	return cc->cipher_tfm.tfms[0];
 -}
 -
 -static struct crypto_aead *any_tfm_aead(struct crypt_config *cc)
 -{
 -	return cc->cipher_tfm.tfms_aead[0];
 +	return cc->tfms[0];
  }
  
  /*
@@@ -388,8 -432,8 +389,13 @@@ static int crypt_iv_essiv_ctr(struct cr
  	cc->iv_gen_private.essiv.salt = salt;
  	cc->iv_gen_private.essiv.hash_tfm = hash_tfm;
  
++<<<<<<< HEAD
 +	essiv_tfm = setup_essiv_cpu(cc, ti, salt,
 +				crypto_hash_digestsize(hash_tfm));
++=======
+ 	essiv_tfm = alloc_essiv_cipher(cc, ti, salt,
+ 				       crypto_ahash_digestsize(hash_tfm));
++>>>>>>> 86f917adea2d (dm crypt: remove obsolete references to per-CPU state)
  	if (IS_ERR(essiv_tfm)) {
  		crypt_iv_essiv_dtr(cc);
  		return PTR_ERR(essiv_tfm);
* Unmerged path drivers/md/dm-crypt.c
