iommu/amd: Cleanup error handling in do_fault()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Cleanup error handling in do_fault() (Jerry Snitselaar) [1411581]
Rebuild_FUZZ: 93.18%
commit-author Joerg Roedel <jroedel@suse.de>
commit 492e74594ec6285207f9db02d41c41cad5dbc6ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/492e7459.failed

Get rid of the three error paths that look the same and move
error handling to a single place.

	Reviewed-by: Jesse Barnes <jbarnes@virtuousgeek.org>
Acked-By: David Woodhouse <David.Woodhouse@intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 492e74594ec6285207f9db02d41c41cad5dbc6ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu_v2.c
diff --cc drivers/iommu/amd_iommu_v2.c
index 3a0810ab46d3,6a28b745521d..000000000000
--- a/drivers/iommu/amd_iommu_v2.c
+++ b/drivers/iommu/amd_iommu_v2.c
@@@ -512,43 -513,39 +512,56 @@@ static bool access_error(struct vm_area
  static void do_fault(struct work_struct *work)
  {
  	struct fault *fault = container_of(work, struct fault, work);
++<<<<<<< HEAD
++=======
+ 	struct vm_area_struct *vma;
+ 	int ret = VM_FAULT_ERROR;
+ 	unsigned int flags = 0;
++>>>>>>> 492e74594ec6 (iommu/amd: Cleanup error handling in do_fault())
  	struct mm_struct *mm;
 +	struct vm_area_struct *vma;
  	u64 address;
++<<<<<<< HEAD
 +	int ret, write;
 +
 +	write = !!(fault->flags & PPR_FAULT_WRITE);
++=======
++>>>>>>> 492e74594ec6 (iommu/amd: Cleanup error handling in do_fault())
  
  	mm = fault->state->mm;
  	address = fault->address;
  
 -	if (fault->flags & PPR_FAULT_USER)
 -		flags |= FAULT_FLAG_USER;
 -	if (fault->flags & PPR_FAULT_WRITE)
 -		flags |= FAULT_FLAG_WRITE;
 -
  	down_read(&mm->mmap_sem);
  	vma = find_extend_vma(mm, address);
- 	if (!vma || address < vma->vm_start) {
+ 	if (!vma || address < vma->vm_start)
  		/* failed to get a vma in the right range */
- 		up_read(&mm->mmap_sem);
- 		handle_fault_error(fault);
  		goto out;
- 	}
  
  	/* Check if we have the right permissions on the vma */
- 	if (access_error(vma, fault)) {
- 		up_read(&mm->mmap_sem);
- 		handle_fault_error(fault);
+ 	if (access_error(vma, fault))
  		goto out;
- 	}
  
++<<<<<<< HEAD
 +	ret = handle_mm_fault(mm, vma, address, write);
 +	if (ret & VM_FAULT_ERROR) {
 +		/* failed to service fault */
 +		up_read(&mm->mmap_sem);
 +		handle_fault_error(fault);
 +		goto out;
 +	}
 +
 +	up_read(&mm->mmap_sem);
++=======
+ 	ret = handle_mm_fault(mm, vma, address, flags);
++>>>>>>> 492e74594ec6 (iommu/amd: Cleanup error handling in do_fault())
  
  out:
+ 	up_read(&mm->mmap_sem);
+ 
+ 	if (ret & VM_FAULT_ERROR)
+ 		/* failed to service fault */
+ 		handle_fault_error(fault);
+ 
  	finish_pri_tag(fault->dev_state, fault->state, fault->tag);
  
  	put_pasid_state(fault->state);
* Unmerged path drivers/iommu/amd_iommu_v2.c
