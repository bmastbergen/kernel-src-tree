x86/mm/pkeys: Create an x86 arch_calc_vm_prot_bits() for VMA flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] mm/pkeys: Create an x86 arch_calc_vm_prot_bits() for VMA flags (Rui Wang) [1272615]
Rebuild_FUZZ: 96.88%
commit-author Dave Hansen <dave.hansen@linux.intel.com>
commit 878ba03932d757ce4e954db4defec74a0de0435b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/878ba039.failed

calc_vm_prot_bits() takes PROT_{READ,WRITE,EXECUTE} bits and
turns them in to the vma->vm_flags/VM_* bits.  We need to do a
similar thing for protection keys.

We take a protection key (4 bits) and encode it in to the 4
VM_PKEY_* bits.

Note: this code is not new.  It was simply a part of the
mprotect_pkey() patch in the past.  I broke it out for use
in the execute-only support.

	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Dave Hansen <dave@sr71.net>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: linux-mm@kvack.org
Link: http://lkml.kernel.org/r/20160212210237.CFB94AD5@viggo.jf.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 878ba03932d757ce4e954db4defec74a0de0435b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/uapi/asm/mman.h
diff --cc arch/x86/include/uapi/asm/mman.h
index 513b05f15bb4,39bca7fac087..000000000000
--- a/arch/x86/include/uapi/asm/mman.h
+++ b/arch/x86/include/uapi/asm/mman.h
@@@ -6,6 -6,28 +6,31 @@@
  #define MAP_HUGE_2MB    (21 << MAP_HUGE_SHIFT)
  #define MAP_HUGE_1GB    (30 << MAP_HUGE_SHIFT)
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS
+ /*
+  * Take the 4 protection key bits out of the vma->vm_flags
+  * value and turn them in to the bits that we can put in
+  * to a pte.
+  *
+  * Only override these if Protection Keys are available
+  * (which is only on 64-bit).
+  */
+ #define arch_vm_get_page_prot(vm_flags)	__pgprot(	\
+ 		((vm_flags) & VM_PKEY_BIT0 ? _PAGE_PKEY_BIT0 : 0) |	\
+ 		((vm_flags) & VM_PKEY_BIT1 ? _PAGE_PKEY_BIT1 : 0) |	\
+ 		((vm_flags) & VM_PKEY_BIT2 ? _PAGE_PKEY_BIT2 : 0) |	\
+ 		((vm_flags) & VM_PKEY_BIT3 ? _PAGE_PKEY_BIT3 : 0))
+ 
+ #define arch_calc_vm_prot_bits(prot, key) (		\
+ 		((key) & 0x1 ? VM_PKEY_BIT0 : 0) |      \
+ 		((key) & 0x2 ? VM_PKEY_BIT1 : 0) |      \
+ 		((key) & 0x4 ? VM_PKEY_BIT2 : 0) |      \
+ 		((key) & 0x8 ? VM_PKEY_BIT3 : 0))
+ #endif
+ 
++>>>>>>> 878ba03932d7 (x86/mm/pkeys: Create an x86 arch_calc_vm_prot_bits() for VMA flags)
  #include <asm-generic/mman.h>
  
  #endif /* _ASM_X86_MMAN_H */
* Unmerged path arch/x86/include/uapi/asm/mman.h
