KEYS: Use memzero_explicit() for secret data

jira LE-1907
cve CVE-2017-7472
cve CVE-2015-8539
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 52176603795c2ab7e9faf6bb94820da1b726aabd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/52176603.failed

I don't think GCC has figured out how to optimize the memset() away, but
they might eventually so let's future proof this code a bit.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: David Howells <dhowells@redhat.com>
	Acked-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
	Signed-off-by: James Morris <james.l.morris@oracle.com>
(cherry picked from commit 52176603795c2ab7e9faf6bb94820da1b726aabd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/keys/encrypted-keys/encrypted.c
diff --cc security/keys/encrypted-keys/encrypted.c
index e203ed4069fb,4fb315cddf5b..000000000000
--- a/security/keys/encrypted-keys/encrypted.c
+++ b/security/keys/encrypted-keys/encrypted.c
@@@ -962,8 -985,8 +962,13 @@@ static void encrypted_destroy(struct ke
  	if (!epayload)
  		return;
  
++<<<<<<< HEAD
 +	memset(epayload->decrypted_data, 0, epayload->decrypted_datalen);
 +	kfree(key->payload.data);
++=======
+ 	memzero_explicit(epayload->decrypted_data, epayload->decrypted_datalen);
+ 	kfree(key->payload.data[0]);
++>>>>>>> 52176603795c (KEYS: Use memzero_explicit() for secret data)
  }
  
  struct key_type key_type_encrypted = {
* Unmerged path security/keys/encrypted-keys/encrypted.c
