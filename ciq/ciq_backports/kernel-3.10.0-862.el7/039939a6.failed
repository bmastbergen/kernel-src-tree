mm/swap: enable swap slots cache usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [mm] swap: enable swap slots cache usage (Jerome Marchand) [1400689]
Rebuild_FUZZ: 95.89%
commit-author Tim Chen <tim.c.chen@linux.intel.com>
commit 039939a65059852242c823ece685579370bc574f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/039939a6.failed

Initialize swap slots cache and enable it on swap on.  Drain all swap
slots on swap off.

Link: http://lkml.kernel.org/r/07cbc94882fa95d4ac3cfc50b8dce0b1ec231b93.1484082593.git.tim.c.chen@linux.intel.com
	Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
	Cc: "Huang, Ying" <ying.huang@intel.com>
	Cc: Aaron Lu <aaron.lu@intel.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Andrea Arcangeli <aarcange@redhat.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
	Cc: Huang Ying <ying.huang@intel.com>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Jonathan Corbet <corbet@lwn.net> escreveu:
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Minchan Kim <minchan@kernel.org>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Shaohua Li <shli@kernel.org>
	Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 039939a65059852242c823ece685579370bc574f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/swapfile.c
diff --cc mm/swapfile.c
index 44c2eac6b890,2cac12cc9abe..000000000000
--- a/mm/swapfile.c
+++ b/mm/swapfile.c
@@@ -1661,6 -2203,10 +1664,13 @@@ SYSCALL_DEFINE1(swapoff, const char __u
  		goto out_dput;
  	}
  
++<<<<<<< HEAD
++=======
+ 	reenable_swap_slots_cache_unlock();
+ 
+ 	flush_work(&p->discard_work);
+ 
++>>>>>>> 039939a65059 (mm/swap: enable swap slots cache usage)
  	destroy_swap_extents(p);
  	if (p->flags & SWP_CONTINUED)
  		free_swap_count_continuations(p);
@@@ -2248,7 -2890,9 +2258,13 @@@ out
  	if (name)
  		putname(name);
  	if (inode && S_ISREG(inode->i_mode))
++<<<<<<< HEAD
 +		mutex_unlock(&inode->i_mutex);
++=======
+ 		inode_unlock(inode);
+ 	if (!error)
+ 		enable_swap_slots_cache();
++>>>>>>> 039939a65059 (mm/swap: enable swap slots cache usage)
  	return error;
  }
  
* Unmerged path mm/swapfile.c
