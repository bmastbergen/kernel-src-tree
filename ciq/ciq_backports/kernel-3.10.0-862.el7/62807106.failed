x86/platform/UV: Fix UV4A support on new Intel Processors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] platform/uv: Fix UV4A support on new Intel Processors (Frank Ramsay) [1535031]
Rebuild_FUZZ: 96.36%
commit-author Mike Travis <mike.travis@hpe.com>
commit 62807106c3219d2d6ddbfc778a5ee7e6ba38e58f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/62807106.failed

Upcoming Intel CascadeLake and IceLake processors have some architecture
changes that required fixes in the UV4 HUB bringing that chip to
revision 2.  The nomenclature for that new chip is "UV4A".

This patch fixes the references for the expanded MMR definitions in the
previous (automated) patch.

	Signed-off-by: Mike Travis <mike.travis@hpe.com>
	Acked-by: Andrew Banman <abanman@hpe.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Dimitri Sivanich <sivanich@hpe.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Russ Anderson <rja@hpe.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/1515440405-20880-3-git-send-email-mike.travis@hpe.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 62807106c3219d2d6ddbfc778a5ee7e6ba38e58f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/apic/x2apic_uv_x.c
diff --cc arch/x86/kernel/apic/x2apic_uv_x.c
index cf70e71a6188,ebb7d264bcac..000000000000
--- a/arch/x86/kernel/apic/x2apic_uv_x.c
+++ b/arch/x86/kernel/apic/x2apic_uv_x.c
@@@ -802,8 -828,10 +804,15 @@@ static __init void map_mmioh_high_uv3(i
  
  	id = mmiohs[index].id;
  	overlay.v = uv_read_local_mmr(mmiohs[index].overlay);
++<<<<<<< HEAD
 +	pr_info("UV: %s overlay 0x%lx base:0x%x m_io:%d\n",
 +		id, overlay.v, overlay.s3.base, overlay.s3.m_io);
++=======
+ 	m_overlay = mmiohs[index].overlay;
+ 
+ 	pr_info("UV: %s overlay 0x%lx(@0x%lx) base:0x%x m_io:%d\n",
+ 		id, overlay.v, m_overlay, overlay.s3.base, overlay.s3.m_io);
++>>>>>>> 62807106c321 (x86/platform/UV: Fix UV4A support on new Intel Processors)
  	if (!overlay.s3.enable) {
  		pr_info("UV: %s disabled\n", id);
  		return;
@@@ -823,8 -853,12 +833,15 @@@
  
  		redirect.v = uv_read_local_mmr(mmr + i * 8);
  		nasid = redirect.s3.nasid;
++<<<<<<< HEAD
++=======
+ 		printk_once(KERN_INFO
+ 			"UV: %s redirect 0x%lx(@0x%lx) 0x%04x\n",
+ 			id, redirect.v, m_redirect, nasid);
+ 		/* Invalid NASID: */
++>>>>>>> 62807106c321 (x86/platform/UV: Fix UV4A support on new Intel Processors)
  		if (nasid < min_pnode || max_pnode < nasid)
 -			nasid = -1;
 +			nasid = -1;		/* invalid NASID */
  
  		if (nasid == lnasid) {
  			li = i;
* Unmerged path arch/x86/kernel/apic/x2apic_uv_x.c
