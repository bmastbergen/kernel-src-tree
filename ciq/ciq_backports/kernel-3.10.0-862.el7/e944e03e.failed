dm crypt: replace custom implementation of hex2bin()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Andy Shevchenko <andy.shevchenko@gmail.com>
commit e944e03e336f7ffa02aabc71291933d93dcd077c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e944e03e.failed

There is no need to have a duplication of the generic library, i.e. hex2bin().
Replace the open coded variant.

	Signed-off-by: Andy Shevchenko <andy.shevchenko@gmail.com>
	Tested-by: Milan Broz <gmazyland@gmail.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit e944e03e336f7ffa02aabc71291933d93dcd077c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-crypt.c
diff --cc drivers/md/dm-crypt.c
index 42505e46c965,24f3b9fdeeb6..000000000000
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@@ -1405,31 -1814,21 +1405,49 @@@ static void kcryptd_queue_crypt(struct 
  	queue_work(cc->crypt_queue, &io->work);
  }
  
++<<<<<<< HEAD
 +/*
 + * Decode key from its hex representation
 + */
 +static int crypt_decode_key(u8 *key, char *hex, unsigned int size)
 +{
 +	char buffer[3];
 +	unsigned int i;
 +
 +	buffer[2] = '\0';
 +
 +	for (i = 0; i < size; i++) {
 +		buffer[0] = *hex++;
 +		buffer[1] = *hex++;
 +
 +		if (kstrtou8(buffer, 16, &key[i]))
 +			return -EINVAL;
 +	}
 +
 +	if (*hex != '\0')
 +		return -EINVAL;
 +
 +	return 0;
 +}
 +
 +static void crypt_free_tfms(struct crypt_config *cc)
++=======
+ static void crypt_free_tfms_aead(struct crypt_config *cc)
+ {
+ 	if (!cc->cipher_tfm.tfms_aead)
+ 		return;
+ 
+ 	if (cc->cipher_tfm.tfms_aead[0] && !IS_ERR(cc->cipher_tfm.tfms_aead[0])) {
+ 		crypto_free_aead(cc->cipher_tfm.tfms_aead[0]);
+ 		cc->cipher_tfm.tfms_aead[0] = NULL;
+ 	}
+ 
+ 	kfree(cc->cipher_tfm.tfms_aead);
+ 	cc->cipher_tfm.tfms_aead = NULL;
+ }
+ 
+ static void crypt_free_tfms_skcipher(struct crypt_config *cc)
++>>>>>>> e944e03e336f (dm crypt: replace custom implementation of hex2bin())
  {
  	unsigned i;
  
@@@ -1503,7 -2102,18 +1521,16 @@@ static int crypt_set_key(struct crypt_c
  	/* clear the flag since following operations may invalidate previously valid key */
  	clear_bit(DM_CRYPT_KEY_VALID, &cc->flags);
  
++<<<<<<< HEAD
 +	if (cc->key_size && crypt_decode_key(cc->key, key, cc->key_size) < 0)
++=======
+ 	/* wipe references to any kernel keyring key */
+ 	kzfree(cc->key_string);
+ 	cc->key_string = NULL;
+ 
+ 	/* Decode key from its hex representation. */
+ 	if (cc->key_size && hex2bin(cc->key, key, cc->key_size) < 0)
++>>>>>>> e944e03e336f (dm crypt: replace custom implementation of hex2bin())
  		goto out;
  
  	r = crypt_setkey(cc);
* Unmerged path drivers/md/dm-crypt.c
