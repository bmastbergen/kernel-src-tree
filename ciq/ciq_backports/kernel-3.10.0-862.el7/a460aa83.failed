ipv6: fib: Add helpers to hold / drop a reference on rt6_info

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit a460aa83963b185a32a6377eb486b6e613ac8e38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a460aa83.failed

Similar to commit 1c677b3d2828 ("ipv4: fib: Add fib_info_hold() helper")
and commit b423cb10807b ("ipv4: fib: Export free_fib_info()") add an
helper to hold a reference on rt6_info and export rt6_release() to drop
it and potentially release the route.

This is needed so that drivers capable of FIB offload could hold a
reference on the route before queueing it for offload and drop it after
the route has been programmed to the device's tables.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a460aa83963b185a32a6377eb486b6e613ac8e38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_fib.c
diff --cc net/ipv6/ip6_fib.c
index 4461375cbfa9,69ed0043d117..000000000000
--- a/net/ipv6/ip6_fib.c
+++ b/net/ipv6/ip6_fib.c
@@@ -150,12 -154,7 +150,16 @@@ static void node_free(struct fib6_node 
  	kmem_cache_free(fib6_node_kmem, fn);
  }
  
++<<<<<<< HEAD
 +static void rt6_rcu_free(struct rt6_info *rt)
 +{
 +	call_rcu(&rt->dst.rcu_head, dst_rcu_free);
 +}
 +
 +static void rt6_free_pcpu(struct rt6_info *non_pcpu_rt)
++=======
+ void rt6_free_pcpu(struct rt6_info *non_pcpu_rt)
++>>>>>>> a460aa83963b (ipv6: fib: Add helpers to hold / drop a reference on rt6_info)
  {
  	int cpu;
  
@@@ -177,14 -177,7 +181,18 @@@
  	free_percpu(non_pcpu_rt->rt6i_pcpu);
  	non_pcpu_rt->rt6i_pcpu = NULL;
  }
++<<<<<<< HEAD
 +
 +static void rt6_release(struct rt6_info *rt)
 +{
 +	if (atomic_dec_and_test(&rt->rt6i_ref)) {
 +		rt6_free_pcpu(rt);
 +		rt6_rcu_free(rt);
 +	}
 +}
++=======
+ EXPORT_SYMBOL_GPL(rt6_free_pcpu);
++>>>>>>> a460aa83963b (ipv6: fib: Add helpers to hold / drop a reference on rt6_info)
  
  static void fib6_link_table(struct net *net, struct fib6_table *tb)
  {
diff --git a/include/net/ip6_fib.h b/include/net/ip6_fib.h
index 2ee17a3a8c5d..d7f8c6032b9d 100644
--- a/include/net/ip6_fib.h
+++ b/include/net/ip6_fib.h
@@ -190,6 +190,22 @@ static inline void ip6_rt_put(struct rt6_info *rt)
 	dst_release(&rt->dst);
 }
 
+void rt6_free_pcpu(struct rt6_info *non_pcpu_rt);
+
+static inline void rt6_hold(struct rt6_info *rt)
+{
+	atomic_inc(&rt->rt6i_ref);
+}
+
+static inline void rt6_release(struct rt6_info *rt)
+{
+	if (atomic_dec_and_test(&rt->rt6i_ref)) {
+		rt6_free_pcpu(rt);
+		dst_dev_put(&rt->dst);
+		dst_release(&rt->dst);
+	}
+}
+
 enum fib6_walk_state {
 #ifdef CONFIG_IPV6_SUBTREES
 	FWS_S,
* Unmerged path net/ipv6/ip6_fib.c
