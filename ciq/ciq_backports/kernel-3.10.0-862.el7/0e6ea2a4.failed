mlxsw: spectrum_router: Mark IPv4 specific function accordingly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 0e6ea2a4eaef5dcf30abb5c4e02988b5d0b9342f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0e6ea2a4.failed

The functions to create and destroy a nexthop group are IPv4 specific
and should be renamed accordingly, so that they won't be confused with
the IPv6 specific functions in follow-up patches.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0e6ea2a4eaef5dcf30abb5c4e02988b5d0b9342f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index ba2b4952cadc,5d787c17f306..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -1732,9 -2054,19 +1732,9 @@@ static void mlxsw_sp_nexthop4_group_put
  	list_del(&fib_entry->nexthop_group_node);
  	if (!list_empty(&nh_grp->fib_list))
  		return;
- 	mlxsw_sp_nexthop_group_destroy(mlxsw_sp, nh_grp);
+ 	mlxsw_sp_nexthop4_group_destroy(mlxsw_sp, nh_grp);
  }
  
 -static bool
 -mlxsw_sp_fib4_entry_should_offload(const struct mlxsw_sp_fib_entry *fib_entry)
 -{
 -	struct mlxsw_sp_fib4_entry *fib4_entry;
 -
 -	fib4_entry = container_of(fib_entry, struct mlxsw_sp_fib4_entry,
 -				  common);
 -	return !fib4_entry->tos;
 -}
 -
  static bool
  mlxsw_sp_fib_entry_should_offload(const struct mlxsw_sp_fib_entry *fib_entry)
  {
@@@ -1978,31 -2322,30 +1978,36 @@@ mlxsw_sp_fib4_entry_create(struct mlxsw
  	if (err)
  		goto err_fib4_entry_type_set;
  
- 	err = mlxsw_sp_nexthop_group_get(mlxsw_sp, fib_entry, fen_info->fi);
+ 	err = mlxsw_sp_nexthop4_group_get(mlxsw_sp, fib_entry, fen_info->fi);
  	if (err)
- 		goto err_nexthop_group_get;
+ 		goto err_nexthop4_group_get;
  
 -	fib4_entry->prio = fen_info->fi->fib_priority;
 -	fib4_entry->tb_id = fen_info->tb_id;
 -	fib4_entry->type = fen_info->type;
 -	fib4_entry->tos = fen_info->tos;
 +	fib_entry->params.prio = fen_info->fi->fib_priority;
 +	fib_entry->params.tb_id = fen_info->tb_id;
 +	fib_entry->params.type = fen_info->type;
 +	fib_entry->params.tos = fen_info->tos;
  
  	fib_entry->fib_node = fib_node;
  
 -	return fib4_entry;
 +	return fib_entry;
  
- err_nexthop_group_get:
+ err_nexthop4_group_get:
  err_fib4_entry_type_set:
 -	kfree(fib4_entry);
 +	kfree(fib_entry);
 +err_fib_entry_alloc:
  	return ERR_PTR(err);
  }
  
  static void mlxsw_sp_fib4_entry_destroy(struct mlxsw_sp *mlxsw_sp,
 -					struct mlxsw_sp_fib4_entry *fib4_entry)
 +					struct mlxsw_sp_fib_entry *fib_entry)
  {
++<<<<<<< HEAD
 +	mlxsw_sp_nexthop_group_put(mlxsw_sp, fib_entry);
 +	kfree(fib_entry);
++=======
+ 	mlxsw_sp_nexthop4_group_put(mlxsw_sp, &fib4_entry->common);
+ 	kfree(fib4_entry);
++>>>>>>> 0e6ea2a4eaef (mlxsw: spectrum_router: Mark IPv4 specific function accordingly)
  }
  
  static struct mlxsw_sp_fib_node *
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
