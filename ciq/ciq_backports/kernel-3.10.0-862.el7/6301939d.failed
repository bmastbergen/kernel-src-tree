module: fix types of device tables aliases

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Andrey Ryabinin <a.ryabinin@samsung.com>
commit 6301939d97d079f0d3dbe71e750f4daf5d39fc33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6301939d.failed

MODULE_DEVICE_TABLE() macro used to create aliases to device tables.
Normally alias should have the same type as aliased symbol.

Device tables are arrays, so they have 'struct type##_device_id[x]'
types. Alias created by MODULE_DEVICE_TABLE() will have non-array type -
	'struct type##_device_id'.

This inconsistency confuses compiler, it could make a wrong assumption
about variable's size which leads KASan to produce a false positive report
about out of bounds access.

For every global variable compiler calls __asan_register_globals() passing
information about global variable (address, size, size with redzone, name
...) __asan_register_globals() poison symbols redzone to detect possible
out of bounds accesses.

When symbol has an alias __asan_register_globals() will be called as for
symbol so for alias.  Compiler determines size of variable by size of
variable's type.  Alias and symbol have the same address, so if alias have
the wrong size part of memory that actually belongs to the symbol could be
poisoned as redzone of alias symbol.

By fixing type of alias symbol we will fix size of it, so
__asan_register_globals() will not poison valid memory.

	Signed-off-by: Andrey Ryabinin <a.ryabinin@samsung.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Konstantin Serebryany <kcc@google.com>
	Cc: Dmitry Chernenkov <dmitryc@google.com>
	Signed-off-by: Andrey Konovalov <adech.fo@gmail.com>
	Cc: Yuri Gribov <tetra2005@gmail.com>
	Cc: Konstantin Khlebnikov <koct9i@gmail.com>
	Cc: Sasha Levin <sasha.levin@oracle.com>
	Cc: Christoph Lameter <cl@linux.com>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: Ingo Molnar <mingo@elte.hu>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: Christoph Lameter <cl@linux.com>
	Cc: Pekka Enberg <penberg@kernel.org>
	Cc: David Rientjes <rientjes@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 6301939d97d079f0d3dbe71e750f4daf5d39fc33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/module.h
diff --cc include/linux/module.h
index cb24355b2d5e,42999fe2dbd0..000000000000
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@@ -141,23 -132,31 +141,34 @@@ extern const struct gtype##_id __mod_##
  /* What your module does. */
  #define MODULE_DESCRIPTION(_description) MODULE_INFO(description, _description)
  
++<<<<<<< HEAD
 +#define MODULE_DEVICE_TABLE(type,name)		\
 +  MODULE_GENERIC_TABLE(type##_device,name)
++=======
+ #ifdef MODULE
+ /* Creates an alias so file2alias.c can find device table. */
+ #define MODULE_DEVICE_TABLE(type, name)					\
+ extern const typeof(name) __mod_##type##__##name##_device_table		\
+   __attribute__ ((unused, alias(__stringify(name))))
+ #else  /* !MODULE */
+ #define MODULE_DEVICE_TABLE(type, name)
+ #endif
++>>>>>>> 6301939d97d0 (module: fix types of device tables aliases)
  
  /* Version of form [<epoch>:]<version>[-<extra-version>].
 - * Or for CVS/RCS ID version, everything but the number is stripped.
 - * <epoch>: A (small) unsigned integer which allows you to start versions
 - * anew. If not mentioned, it's zero.  eg. "2:1.0" is after
 - * "1:2.0".
 -
 - * <version>: The <version> may contain only alphanumerics and the
 - * character `.'.  Ordered by numeric sort for numeric parts,
 - * ascii sort for ascii parts (as per RPM or DEB algorithm).
 -
 - * <extraversion>: Like <version>, but inserted for local
 - * customizations, eg "rh3" or "rusty1".
 -
 - * Using this automatically adds a checksum of the .c files and the
 - * local headers in "srcversion".
 - */
 +   Or for CVS/RCS ID version, everything but the number is stripped.
 +  <epoch>: A (small) unsigned integer which allows you to start versions
 +           anew. If not mentioned, it's zero.  eg. "2:1.0" is after
 +	   "1:2.0".
 +  <version>: The <version> may contain only alphanumerics and the
 +           character `.'.  Ordered by numeric sort for numeric parts,
 +	   ascii sort for ascii parts (as per RPM or DEB algorithm).
 +  <extraversion>: Like <version>, but inserted for local
 +           customizations, eg "rh3" or "rusty1".
 +
 +  Using this automatically adds a checksum of the .c files and the
 +  local headers in "srcversion".
 +*/
  
  #if defined(MODULE) || !defined(CONFIG_SYSFS)
  #define MODULE_VERSION(_version) MODULE_INFO(version, _version)
* Unmerged path include/linux/module.h
