ibmvnic: Sanitize entire SCRQ buffer on reset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
commit c8b2ad0a4a9015228874708f83a17b7bdb194f84
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c8b2ad0a.failed

Fixup a typo so that the entire SCRQ buffer is cleaned.

	Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c8b2ad0a4a9015228874708f83a17b7bdb194f84)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index e51abefcc89d,03ddf6e1b5b3..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -1248,6 -1741,45 +1248,48 @@@ static const struct ethtool_ops ibmvnic
  
  /* Routines for managing CRQs/sCRQs  */
  
++<<<<<<< HEAD
++=======
+ static int reset_one_sub_crq_queue(struct ibmvnic_adapter *adapter,
+ 				   struct ibmvnic_sub_crq_queue *scrq)
+ {
+ 	int rc;
+ 
+ 	if (scrq->irq) {
+ 		free_irq(scrq->irq, scrq);
+ 		irq_dispose_mapping(scrq->irq);
+ 		scrq->irq = 0;
+ 	}
+ 
+ 	memset(scrq->msgs, 0, 4 * PAGE_SIZE);
+ 	scrq->cur = 0;
+ 
+ 	rc = h_reg_sub_crq(adapter->vdev->unit_address, scrq->msg_token,
+ 			   4 * PAGE_SIZE, &scrq->crq_num, &scrq->hw_irq);
+ 	return rc;
+ }
+ 
+ static int reset_sub_crq_queues(struct ibmvnic_adapter *adapter)
+ {
+ 	int i, rc;
+ 
+ 	for (i = 0; i < adapter->req_tx_queues; i++) {
+ 		rc = reset_one_sub_crq_queue(adapter, adapter->tx_scrq[i]);
+ 		if (rc)
+ 			return rc;
+ 	}
+ 
+ 	for (i = 0; i < adapter->req_rx_queues; i++) {
+ 		rc = reset_one_sub_crq_queue(adapter, adapter->rx_scrq[i]);
+ 		if (rc)
+ 			return rc;
+ 	}
+ 
+ 	rc = init_sub_crq_irqs(adapter);
+ 	return rc;
+ }
+ 
++>>>>>>> c8b2ad0a4a90 (ibmvnic: Sanitize entire SCRQ buffer on reset)
  static void release_sub_crq_queue(struct ibmvnic_adapter *adapter,
  				  struct ibmvnic_sub_crq_queue *scrq)
  {
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
