don't call file_pos_write() if vfs_{read,write}{,v}() fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [fs] don't call file_pos_write() if vfs_read/write(, v) fails (Ivan Vecera) [1534483]
Rebuild_FUZZ: 92.17%
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 5faf153ebf6128f02ad6ffa2e8bbc9d823ef762c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5faf153e.failed

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 5faf153ebf6128f02ad6ffa2e8bbc9d823ef762c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/read_write.c
diff --cc fs/read_write.c
index 2d07d872ced9,f646c8b565b9..000000000000
--- a/fs/read_write.c
+++ b/fs/read_write.c
@@@ -574,8 -477,9 +574,14 @@@ SYSCALL_DEFINE3(read, unsigned int, fd
  	if (f.file) {
  		loff_t pos = file_pos_read(f.file);
  		ret = vfs_read(f.file, buf, count, &pos);
++<<<<<<< HEAD
 +		file_pos_write(f.file, pos);
 +		fdput_pos(f);
++=======
+ 		if (ret >= 0)
+ 			file_pos_write(f.file, pos);
+ 		fdput(f);
++>>>>>>> 5faf153ebf61 (don't call file_pos_write() if vfs_{read,write}{,v}() fails)
  	}
  	return ret;
  }
@@@ -589,8 -493,9 +595,14 @@@ SYSCALL_DEFINE3(write, unsigned int, fd
  	if (f.file) {
  		loff_t pos = file_pos_read(f.file);
  		ret = vfs_write(f.file, buf, count, &pos);
++<<<<<<< HEAD
 +		file_pos_write(f.file, pos);
 +		fdput_pos(f);
++=======
+ 		if (ret >= 0)
+ 			file_pos_write(f.file, pos);
+ 		fdput(f);
++>>>>>>> 5faf153ebf61 (don't call file_pos_write() if vfs_{read,write}{,v}() fails)
  	}
  
  	return ret;
@@@ -877,8 -782,9 +889,14 @@@ SYSCALL_DEFINE3(readv, unsigned long, f
  	if (f.file) {
  		loff_t pos = file_pos_read(f.file);
  		ret = vfs_readv(f.file, vec, vlen, &pos);
++<<<<<<< HEAD
 +		file_pos_write(f.file, pos);
 +		fdput_pos(f);
++=======
+ 		if (ret >= 0)
+ 			file_pos_write(f.file, pos);
+ 		fdput(f);
++>>>>>>> 5faf153ebf61 (don't call file_pos_write() if vfs_{read,write}{,v}() fails)
  	}
  
  	if (ret > 0)
@@@ -896,8 -802,9 +914,14 @@@ SYSCALL_DEFINE3(writev, unsigned long, 
  	if (f.file) {
  		loff_t pos = file_pos_read(f.file);
  		ret = vfs_writev(f.file, vec, vlen, &pos);
++<<<<<<< HEAD
 +		file_pos_write(f.file, pos);
 +		fdput_pos(f);
++=======
+ 		if (ret >= 0)
+ 			file_pos_write(f.file, pos);
+ 		fdput(f);
++>>>>>>> 5faf153ebf61 (don't call file_pos_write() if vfs_{read,write}{,v}() fails)
  	}
  
  	if (ret > 0)
@@@ -1056,8 -963,9 +1080,14 @@@ COMPAT_SYSCALL_DEFINE3(readv, compat_ul
  		return -EBADF;
  	pos = f.file->f_pos;
  	ret = compat_readv(f.file, vec, vlen, &pos);
++<<<<<<< HEAD
 +	f.file->f_pos = pos;
 +	fdput_pos(f);
++=======
+ 	if (ret >= 0)
+ 		f.file->f_pos = pos;
+ 	fdput(f);
++>>>>>>> 5faf153ebf61 (don't call file_pos_write() if vfs_{read,write}{,v}() fails)
  	return ret;
  }
  
@@@ -1122,8 -1030,9 +1152,14 @@@ COMPAT_SYSCALL_DEFINE3(writev, compat_u
  		return -EBADF;
  	pos = f.file->f_pos;
  	ret = compat_writev(f.file, vec, vlen, &pos);
++<<<<<<< HEAD
 +	f.file->f_pos = pos;
 +	fdput_pos(f);
++=======
+ 	if (ret >= 0)
+ 		f.file->f_pos = pos;
+ 	fdput(f);
++>>>>>>> 5faf153ebf61 (don't call file_pos_write() if vfs_{read,write}{,v}() fails)
  	return ret;
  }
  
* Unmerged path fs/read_write.c
