mlxsw: spectrum_router: Reduce scope of router struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 9011b677e7564ebd27e0bd8379ddd9d1649106b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9011b677.failed

In a similar fashion to previous patch, the router structure
('mlxsw_sp_router') doesn't need to be accessible to anyone, but the
router code located at spectrum_router.c

Make this apparent and reduce its scope by defining it there.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9011b677e7564ebd27e0bd8379ddd9d1649106b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index f8e7036e3f4a,28f7f54c76f9..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -50,7 -52,33 +50,30 @@@
  #include "spectrum.h"
  #include "core.h"
  #include "reg.h"
 -#include "spectrum_cnt.h"
 -#include "spectrum_dpipe.h"
 -#include "spectrum_router.h"
  
+ struct mlxsw_sp_vr;
+ struct mlxsw_sp_lpm_tree;
+ 
+ struct mlxsw_sp_router {
+ 	struct mlxsw_sp *mlxsw_sp;
+ 	struct mlxsw_sp_vr *vrs;
+ 	struct rhashtable neigh_ht;
+ 	struct rhashtable nexthop_group_ht;
+ 	struct rhashtable nexthop_ht;
+ 	struct {
+ 		struct mlxsw_sp_lpm_tree *trees;
+ 		unsigned int tree_count;
+ 	} lpm;
+ 	struct {
+ 		struct delayed_work dw;
+ 		unsigned long interval;	/* ms */
+ 	} neighs_update;
+ 	struct delayed_work nexthop_probe_dw;
+ #define MLXSW_SP_UNRESOLVED_NH_PROBE_INTERVAL 5000 /* ms */
+ 	struct list_head nexthop_neighs_list;
+ 	bool aborted;
+ };
+ 
  struct mlxsw_sp_rif {
  	struct list_head nexthop_list;
  	struct list_head neigh_list;
@@@ -1543,9 -1746,9 +1594,9 @@@ static void mlxsw_sp_nexthop_event(stru
  {
  	struct mlxsw_sp_nexthop_key key;
  	struct mlxsw_sp_nexthop *nh;
 -	struct mlxsw_sp_rif *rif;
 +	struct mlxsw_sp_rif *r;
  
- 	if (mlxsw_sp->router.aborted)
+ 	if (mlxsw_sp->router->aborted)
  		return;
  
  	key.fib_nh = fib_nh;
@@@ -2827,22 -3063,25 +2878,29 @@@ err_vport_rif_sp_op
  }
  
  static void mlxsw_sp_vport_rif_sp_destroy(struct mlxsw_sp_port *mlxsw_sp_vport,
 -					  struct mlxsw_sp_rif *rif)
 +					  struct mlxsw_sp_rif *r)
  {
  	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_vport->mlxsw_sp;
++<<<<<<< HEAD
 +	struct mlxsw_sp_vr *vr = &mlxsw_sp->router.vrs[r->vr_id];
 +	struct net_device *l3_dev = r->dev;
 +	struct mlxsw_sp_fid *f = r->f;
++=======
+ 	struct mlxsw_sp_vr *vr = &mlxsw_sp->router->vrs[rif->vr_id];
+ 	struct net_device *l3_dev = rif->dev;
+ 	struct mlxsw_sp_fid *f = rif->f;
+ 	u16 rif_index = rif->rif_index;
++>>>>>>> 9011b677e756 (mlxsw: spectrum_router: Reduce scope of router struct)
  	u16 fid = f->fid;
 +	u16 rif = r->rif;
  
 -	mlxsw_sp_router_rif_gone_sync(mlxsw_sp, rif);
 -
 -	mlxsw_sp_rif_counter_free(mlxsw_sp, rif, MLXSW_SP_RIF_COUNTER_EGRESS);
 -	mlxsw_sp_rif_counter_free(mlxsw_sp, rif, MLXSW_SP_RIF_COUNTER_INGRESS);
 +	mlxsw_sp_router_rif_gone_sync(mlxsw_sp, r);
  
  	vr->rif_count--;
 -	mlxsw_sp->rifs[rif_index] = NULL;
 -	f->rif = NULL;
 +	mlxsw_sp->rifs[rif] = NULL;
 +	f->r = NULL;
  
 -	kfree(rif);
 +	kfree(r);
  
  	kfree(f);
  
@@@ -3081,20 -3322,20 +3139,27 @@@ err_port_flood_set
  }
  
  void mlxsw_sp_rif_bridge_destroy(struct mlxsw_sp *mlxsw_sp,
 -				 struct mlxsw_sp_rif *rif)
 -{
 +				 struct mlxsw_sp_rif *r)
 +{
++<<<<<<< HEAD
 +	struct mlxsw_sp_vr *vr = &mlxsw_sp->router.vrs[r->vr_id];
 +	struct net_device *l3_dev = r->dev;
 +	struct mlxsw_sp_fid *f = r->f;
 +	u16 rif = r->rif;
++=======
+ 	struct mlxsw_sp_vr *vr = &mlxsw_sp->router->vrs[rif->vr_id];
+ 	struct net_device *l3_dev = rif->dev;
+ 	struct mlxsw_sp_fid *f = rif->f;
+ 	u16 rif_index = rif->rif_index;
++>>>>>>> 9011b677e756 (mlxsw: spectrum_router: Reduce scope of router struct)
  
 -	mlxsw_sp_router_rif_gone_sync(mlxsw_sp, rif);
 +	mlxsw_sp_router_rif_gone_sync(mlxsw_sp, r);
  
  	vr->rif_count--;
 -	mlxsw_sp->rifs[rif_index] = NULL;
 -	f->rif = NULL;
 +	mlxsw_sp->rifs[rif] = NULL;
 +	f->r = NULL;
  
 -	kfree(rif);
 +	kfree(r);
  
  	mlxsw_sp_rif_fdb_op(mlxsw_sp, l3_dev->dev_addr, f->fid, false);
  
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
index bb171d5ff7f7..5176499d63e7 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
@@ -109,33 +109,6 @@ static inline bool mlxsw_sp_fid_is_vfid(u16 fid)
 	return fid >= MLXSW_SP_VFID_BASE && fid < MLXSW_SP_DUMMY_FID;
 }
 
-#define MLXSW_SP_PREFIX_COUNT (sizeof(struct in6_addr) * BITS_PER_BYTE)
-
-struct mlxsw_sp_prefix_usage {
-	DECLARE_BITMAP(b, MLXSW_SP_PREFIX_COUNT);
-};
-
-enum mlxsw_sp_l3proto {
-	MLXSW_SP_L3_PROTO_IPV4,
-	MLXSW_SP_L3_PROTO_IPV6,
-};
-
-struct mlxsw_sp_lpm_tree {
-	u8 id; /* tree ID */
-	unsigned int ref_count;
-	enum mlxsw_sp_l3proto proto;
-	struct mlxsw_sp_prefix_usage prefix_usage;
-};
-
-struct mlxsw_sp_fib;
-
-struct mlxsw_sp_vr {
-	u16 id; /* virtual router ID */
-	u32 tb_id; /* kernel fib table id */
-	unsigned int rif_count;
-	struct mlxsw_sp_fib *fib4;
-};
-
 enum mlxsw_sp_span_type {
 	MLXSW_SP_SPAN_EGRESS,
 	MLXSW_SP_SPAN_INGRESS
@@ -173,26 +146,8 @@ struct mlxsw_sp_port_mall_tc_entry {
 	};
 };
 
-struct mlxsw_sp_router {
-	struct mlxsw_sp_vr *vrs;
-	struct rhashtable neigh_ht;
-	struct rhashtable nexthop_group_ht;
-	struct rhashtable nexthop_ht;
-	struct {
-		struct mlxsw_sp_lpm_tree *trees;
-		unsigned int tree_count;
-	} lpm;
-	struct {
-		struct delayed_work dw;
-		unsigned long interval;	/* ms */
-	} neighs_update;
-	struct delayed_work nexthop_probe_dw;
-#define MLXSW_SP_UNRESOLVED_NH_PROBE_INTERVAL 5000 /* ms */
-	struct list_head nexthop_neighs_list;
-	bool aborted;
-};
-
 struct mlxsw_sp_sb;
+struct mlxsw_sp_router;
 struct mlxsw_sp_acl;
 struct mlxsw_sp_counter_pool;
 
@@ -224,7 +179,7 @@ struct mlxsw_sp {
 	struct mlxsw_sp_upper *lags;
 	u8 *port_to_module;
 	struct mlxsw_sp_sb *sb;
-	struct mlxsw_sp_router router;
+	struct mlxsw_sp_router *router;
 	struct mlxsw_sp_acl *acl;
 	struct {
 		DECLARE_BITMAP(usage, MLXSW_SP_KVD_LINEAR_SIZE);
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
