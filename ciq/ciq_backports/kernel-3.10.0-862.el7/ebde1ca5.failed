target: Fix TAS handling for multi-session se_node_acls

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [target] Fix TAS handling for multi-session se_node_acls (Maurizio Lombardi) [1366062]
Rebuild_FUZZ: 92.16%
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit ebde1ca5a908b10312db4ecd7553e3ba039319ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ebde1ca5.failed

This patch fixes a bug in TMR task aborted status (TAS)
handling when multiple sessions are connected to the
same target WWPN endpoint and se_node_acl descriptor,
resulting in TASK_ABORTED status to not be generated
for aborted se_cmds on the remote port.

This is due to core_tmr_handle_tas_abort() incorrectly
comparing se_node_acl instead of se_session, for which
the multi-session case is expected to be sharing the
same se_node_acl.

Instead, go ahead and update core_tmr_handle_tas_abort()
to compare tmr_sess + cmd->se_sess in order to determine
if the LUN_RESET was received on a different I_T nexus,
and TASK_ABORTED status response needs to be generated.

	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Cc: Quinn Tran <quinn.tran@qlogic.com>
	Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Cc: Sagi Grimberg <sagig@mellanox.com>
	Cc: Hannes Reinecke <hare@suse.de>
	Cc: Andy Grover <agrover@redhat.com>
	Cc: Mike Christie <mchristi@redhat.com>
	Cc: stable@vger.kernel.org # 3.10+
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit ebde1ca5a908b10312db4ecd7553e3ba039319ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_tmr.c
diff --cc drivers/target/target_core_tmr.c
index adb8016955c4,3e0d77a4c7b6..000000000000
--- a/drivers/target/target_core_tmr.c
+++ b/drivers/target/target_core_tmr.c
@@@ -330,16 -361,11 +330,21 @@@ static void core_tmr_drain_state_list
  		 * loop above, but we do it down here given that
  		 * cancel_work_sync may block.
  		 */
 -		cancel_work_sync(&cmd->work);
 -		transport_wait_for_tasks(cmd);
 +		if (cmd->t_state == TRANSPORT_COMPLETE)
 +			cancel_work_sync(&cmd->work);
 +
 +		spin_lock_irqsave(&cmd->t_state_lock, flags);
 +		target_stop_cmd(cmd, &flags);
 +
 +		cmd->transport_state |= CMD_T_ABORTED;
 +		spin_unlock_irqrestore(&cmd->t_state_lock, flags);
  
++<<<<<<< HEAD
 +		core_tmr_handle_tas_abort(tmr_nacl, cmd, tas);
++=======
+ 		core_tmr_handle_tas_abort(tmr_sess, cmd, tas);
+ 		target_put_sess_cmd(cmd);
++>>>>>>> ebde1ca5a908 (target: Fix TAS handling for multi-session se_node_acls)
  	}
  }
  
* Unmerged path drivers/target/target_core_tmr.c
