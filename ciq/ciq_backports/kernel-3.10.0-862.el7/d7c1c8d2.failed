net: sched: move prio into cls_common

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: move prio into cls_common (Ivan Vecera) [1445420]
Rebuild_FUZZ: 92.75%
commit-author Jiri Pirko <jiri@mellanox.com>
commit d7c1c8d2e53be974b5c72e31d7d35f6d9737fe84
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d7c1c8d2.failed

prio is not cls_flower specific, but it is meaningful for all
classifiers. Seems that only mlxsw cares about the value. Obviously,
cls offload in other drivers is broken.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d7c1c8d2e53be974b5c72e31d7d35f6d9737fe84)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/pkt_cls.h
diff --cc include/net/pkt_cls.h
index db4cec05920e,572083af02ac..000000000000
--- a/include/net/pkt_cls.h
+++ b/include/net/pkt_cls.h
@@@ -379,6 -405,23 +379,26 @@@ tcf_match_indev(struct sk_buff *skb, in
  }
  #endif /* CONFIG_NET_CLS_IND */
  
++<<<<<<< HEAD
++=======
+ struct tc_cls_common_offload {
+ 	u32 handle;
+ 	u32 chain_index;
+ 	__be16 protocol;
+ 	u32 prio;
+ };
+ 
+ static inline void
+ tc_cls_common_offload_init(struct tc_cls_common_offload *cls_common,
+ 			   const struct tcf_proto *tp)
+ {
+ 	cls_common->handle = tp->q->handle;
+ 	cls_common->chain_index = tp->chain->index;
+ 	cls_common->protocol = tp->protocol;
+ 	cls_common->prio = tp->prio;
+ }
+ 
++>>>>>>> d7c1c8d2e53b (net: sched: move prio into cls_common)
  struct tc_cls_u32_knode {
  	struct tcf_exts *exts;
  	struct tc_u32_sel *sel;
@@@ -466,8 -515,8 +486,7 @@@ enum tc_fl_command 
  };
  
  struct tc_cls_flower_offload {
 -	struct tc_cls_common_offload common;
  	enum tc_fl_command command;
- 	u32 prio;
  	unsigned long cookie;
  	struct flow_dissector *dissector;
  	struct fl_flow_key *mask;
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
index c668b6dd906d..518576c9861a 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
@@ -176,7 +176,7 @@ static int mlxsw_sp_flower_parse(struct mlxsw_sp *mlxsw_sp,
 		return -EOPNOTSUPP;
 	}
 
-	mlxsw_sp_acl_rulei_priority(rulei, f->prio);
+	mlxsw_sp_acl_rulei_priority(rulei, f->common.prio);
 
 	if (dissector_uses_key(f->dissector, FLOW_DISSECTOR_KEY_CONTROL)) {
 		struct flow_dissector_key_control *key =
* Unmerged path include/net/pkt_cls.h
diff --git a/net/sched/cls_flower.c b/net/sched/cls_flower.c
index 2d81cc7499da..a2690b337ca2 100644
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@ -233,7 +233,6 @@ static void fl_hw_destroy_filter(struct tcf_proto *tp, struct cls_fl_filter *f)
 		return;
 
 	offload.command = TC_CLSFLOWER_DESTROY;
-	offload.prio = tp->prio;
 	offload.cookie = (unsigned long)f;
 
 	tc->type = TC_SETUP_CLSFLOWER;
@@ -265,7 +264,6 @@ static int fl_hw_replace_filter(struct tcf_proto *tp,
 	}
 
 	offload.command = TC_CLSFLOWER_REPLACE;
-	offload.prio = tp->prio;
 	offload.cookie = (unsigned long)f;
 	offload.dissector = dissector;
 	offload.mask = mask;
@@ -295,7 +293,6 @@ static void fl_hw_update_stats(struct tcf_proto *tp, struct cls_fl_filter *f)
 		return;
 
 	offload.command = TC_CLSFLOWER_STATS;
-	offload.prio = tp->prio;
 	offload.cookie = (unsigned long)f;
 	offload.exts = &f->exts;
 
