target: Send UA on ALUA target port group change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [target] Send UA on ALUA target port group change (Maurizio Lombardi) [1366062]
Rebuild_FUZZ: 90.91%
commit-author Hannes Reinecke <hare@suse.de>
commit 3dd348fcaa407181585fcadc04b0cac6e31f9be0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3dd348fc.failed

When the ALUA target port group changes an INQUIRY DATA CHANGE
UA needs to be sent.

	Signed-off-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 3dd348fcaa407181585fcadc04b0cac6e31f9be0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_alua.c
diff --cc drivers/target/target_core_alua.c
index a73542598e96,744f308053e0..000000000000
--- a/drivers/target/target_core_alua.c
+++ b/drivers/target/target_core_alua.c
@@@ -1904,19 -1877,22 +1904,31 @@@ static void core_alua_put_tg_pt_gp_from
  	spin_unlock(&dev->t10_alua.tg_pt_gps_lock);
  }
  
 -static void __target_attach_tg_pt_gp(struct se_lun *lun,
 -		struct t10_alua_tg_pt_gp *tg_pt_gp)
 +/*
 + * Called with struct t10_alua_tg_pt_gp_member->tg_pt_gp_mem_lock held
 + */
 +void __core_alua_attach_tg_pt_gp_mem(
 +	struct t10_alua_tg_pt_gp_member *tg_pt_gp_mem,
 +	struct t10_alua_tg_pt_gp *tg_pt_gp)
  {
++<<<<<<< HEAD
++=======
+ 	struct se_dev_entry *se_deve;
+ 
+ 	assert_spin_locked(&lun->lun_tg_pt_gp_lock);
+ 
++>>>>>>> 3dd348fcaa40 (target: Send UA on ALUA target port group change)
  	spin_lock(&tg_pt_gp->tg_pt_gp_lock);
 -	lun->lun_tg_pt_gp = tg_pt_gp;
 -	list_add_tail(&lun->lun_tg_pt_gp_link, &tg_pt_gp->tg_pt_gp_lun_list);
 +	tg_pt_gp_mem->tg_pt_gp = tg_pt_gp;
 +	tg_pt_gp_mem->tg_pt_gp_assoc = 1;
 +	list_add_tail(&tg_pt_gp_mem->tg_pt_gp_mem_list,
 +			&tg_pt_gp->tg_pt_gp_mem_list);
  	tg_pt_gp->tg_pt_gp_members++;
+ 	spin_lock(&lun->lun_deve_lock);
+ 	list_for_each_entry(se_deve, &lun->lun_deve_list, lun_link)
+ 		core_scsi3_ua_allocate(se_deve, 0x3f,
+ 				       ASCQ_3FH_INQUIRY_DATA_HAS_CHANGED);
+ 	spin_unlock(&lun->lun_deve_lock);
  	spin_unlock(&tg_pt_gp->tg_pt_gp_lock);
  }
  
* Unmerged path drivers/target/target_core_alua.c
diff --git a/drivers/target/target_core_ua.h b/drivers/target/target_core_ua.h
index a6b56b364e7a..960da9c500f5 100644
--- a/drivers/target/target_core_ua.h
+++ b/drivers/target/target_core_ua.h
@@ -25,6 +25,8 @@
 
 #define ASCQ_2CH_PREVIOUS_RESERVATION_CONFLICT_STATUS		0x09
 
+#define ASCQ_3FH_INQUIRY_DATA_HAS_CHANGED			0x03
+
 extern struct kmem_cache *se_ua_cache;
 
 extern sense_reason_t target_scsi3_ua_check(struct se_cmd *);
