scsi: cxlflash: Update debug prints in reset handlers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] cxlflash: Update debug prints in reset handlers (Gustavo Duarte) [1456494]
Rebuild_FUZZ: 94.00%
commit-author Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
commit 5a4d9d7790422c4a92d8ca52e37c1e2b45d42c27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5a4d9d77.failed

The device and host reset handler contain debug prints to help identify
the entities being reset. Today these reset handlers are based on a SCSI
EH design that uses a SCSI command reference as a means of identifying
the target entity. As such, the debug trace includes the SCSI command
pointer and associated CDB. This is not necessary as the SCSI command is
simply the messenger in these scenarios.

Refactor the debug prints in the host and reset handlers to only present
information that is applicable given the function scope.

	Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 5a4d9d7790422c4a92d8ca52e37c1e2b45d42c27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxlflash/main.c
diff --cc drivers/scsi/cxlflash/main.c
index c68badcfa77f,077f62e208aa..000000000000
--- a/drivers/scsi/cxlflash/main.c
+++ b/drivers/scsi/cxlflash/main.c
@@@ -1905,20 -2429,14 +1905,25 @@@ static void drain_ioctls(struct cxlflas
  static int cxlflash_eh_device_reset_handler(struct scsi_cmnd *scp)
  {
  	int rc = SUCCESS;
 -	struct scsi_device *sdev = scp->device;
 -	struct Scsi_Host *host = sdev->host;
 -	struct cxlflash_cfg *cfg = shost_priv(host);
 -	struct device *dev = &cfg->dev->dev;
 +	struct Scsi_Host *host = scp->device->host;
 +	struct cxlflash_cfg *cfg = (struct cxlflash_cfg *)host->hostdata;
 +	struct afu *afu = cfg->afu;
  	int rcr = 0;
  
++<<<<<<< HEAD
 +	pr_debug("%s: (scp=%p) %d/%d/%d/%d "
 +		 "cdb=(%08X-%08X-%08X-%08X)\n", __func__, scp,
 +		 host->host_no, scp->device->channel,
 +		 scp->device->id, scp->device->lun,
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[0]),
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[1]),
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[2]),
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[3]));
 +
++=======
+ 	dev_dbg(dev, "%s: %d/%d/%d/%llu\n", __func__,
+ 		host->host_no, sdev->channel, sdev->id, sdev->lun);
++>>>>>>> 5a4d9d779042 (scsi: cxlflash: Update debug prints in reset handlers)
  retry:
  	switch (cfg->state) {
  	case STATE_NORMAL:
@@@ -1956,16 -2474,10 +1961,20 @@@ static int cxlflash_eh_host_reset_handl
  	int rc = SUCCESS;
  	int rcr = 0;
  	struct Scsi_Host *host = scp->device->host;
 -	struct cxlflash_cfg *cfg = shost_priv(host);
 -	struct device *dev = &cfg->dev->dev;
 -
 +	struct cxlflash_cfg *cfg = (struct cxlflash_cfg *)host->hostdata;
 +
++<<<<<<< HEAD
 +	pr_debug("%s: (scp=%p) %d/%d/%d/%d "
 +		 "cdb=(%08X-%08X-%08X-%08X)\n", __func__, scp,
 +		 host->host_no, scp->device->channel,
 +		 scp->device->id, scp->device->lun,
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[0]),
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[1]),
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[2]),
 +		 get_unaligned_be32(&((u32 *)scp->cmnd)[3]));
++=======
+ 	dev_dbg(dev, "%s: %d\n", __func__, host->host_no);
++>>>>>>> 5a4d9d779042 (scsi: cxlflash: Update debug prints in reset handlers)
  
  	switch (cfg->state) {
  	case STATE_NORMAL:
* Unmerged path drivers/scsi/cxlflash/main.c
