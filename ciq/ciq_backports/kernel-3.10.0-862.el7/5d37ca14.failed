ceph: send LSSNAP request to auth mds of directory inode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 5d37ca1480a70f437e4c425ee5723c760cf6afac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5d37ca14.failed

Snapdir inode has no capability. __choose_mds() should choose mds
base on capabilities of snapdir's parent inode.

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 5d37ca1480a70f437e4c425ee5723c760cf6afac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/mds_client.c
diff --cc fs/ceph/mds_client.c
index 06ecdebe64d7,86ff74424df4..000000000000
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@@ -715,15 -731,29 +715,28 @@@ static int __choose_mds(struct ceph_mds
  
  	inode = NULL;
  	if (req->r_inode) {
++<<<<<<< HEAD
 +		inode = req->r_inode;
 +	} else if (req->r_dentry) {
++=======
+ 		if (ceph_snap(req->r_inode) != CEPH_SNAPDIR) {
+ 			inode = req->r_inode;
+ 			ihold(inode);
+ 		} else {
+ 			/* req->r_dentry is non-null for LSSNAP request.
+ 			 * fall-thru */
+ 			WARN_ON_ONCE(!req->r_dentry);
+ 		}
+ 	}
+ 	if (!inode && req->r_dentry) {
++>>>>>>> 5d37ca1480a7 (ceph: send LSSNAP request to auth mds of directory inode)
  		/* ignore race with rename; old or new d_parent is okay */
 -		struct dentry *parent;
 -		struct inode *dir;
 -
 -		rcu_read_lock();
 -		parent = req->r_dentry->d_parent;
 -		dir = req->r_parent ? : d_inode_rcu(parent);
 -
 -		if (!dir || dir->i_sb != mdsc->fsc->sb) {
 -			/*  not this fs or parent went negative */
 -			inode = d_inode(req->r_dentry);
 -			if (inode)
 -				ihold(inode);
 +		struct dentry *parent = req->r_dentry->d_parent;
 +		struct inode *dir = parent->d_inode;
 +
 +		if (dir->i_sb != mdsc->fsc->sb) {
 +			/* not this fs! */
 +			inode = req->r_dentry->d_inode;
  		} else if (ceph_snap(dir) != CEPH_NOSNAP) {
  			/* direct snapped/virtual snapdir requests
  			 * based on parent dir inode */
diff --git a/fs/ceph/dir.c b/fs/ceph/dir.c
index 5a0d75d7d162..a1d840aee9c4 100644
--- a/fs/ceph/dir.c
+++ b/fs/ceph/dir.c
@@ -323,8 +323,10 @@ more:
 		}
 		/* hints to request -> mds selection code */
 		req->r_direct_mode = USE_AUTH_MDS;
-		req->r_direct_hash = ceph_frag_value(frag);
-		__set_bit(CEPH_MDS_R_DIRECT_IS_HASH, &req->r_req_flags);
+		if (op == CEPH_MDS_OP_READDIR) {
+			req->r_direct_hash = ceph_frag_value(frag);
+			__set_bit(CEPH_MDS_R_DIRECT_IS_HASH, &req->r_req_flags);
+		}
 		if (fi->last_name) {
 			req->r_path2 = kstrdup(fi->last_name, GFP_KERNEL);
 			if (!req->r_path2) {
* Unmerged path fs/ceph/mds_client.c
