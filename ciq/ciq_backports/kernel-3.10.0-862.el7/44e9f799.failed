crypto: chcr - Change cra_flags for cipher algos

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [crypto] chcr - Change cra_flags for cipher algos (Arjun Vynipadath) [1458315]
Rebuild_FUZZ: 90.91%
commit-author Harsh Jain <harsh@chelsio.com>
commit 44e9f79916160f9a69542712e8529ee8da15c410
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/44e9f799.failed

Change cipher algos flags to CRYPTO_ALG_TYPE_ABLKCIPHER.

	Signed-off-by: Harsh Jain <harsh@chelsio.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 44e9f79916160f9a69542712e8529ee8da15c410)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/chelsio/chcr_algo.c
diff --cc drivers/crypto/chelsio/chcr_algo.c
index bda117371c9f,21fc04c6f272..000000000000
--- a/drivers/crypto/chelsio/chcr_algo.c
+++ b/drivers/crypto/chelsio/chcr_algo.c
@@@ -109,7 -155,23 +109,27 @@@ int chcr_handle_resp(struct crypto_asyn
  	unsigned int digestsize, updated_digestsize;
  
  	switch (tfm->__crt_alg->cra_flags & CRYPTO_ALG_TYPE_MASK) {
++<<<<<<< HEAD
 +	case CRYPTO_ALG_TYPE_BLKCIPHER:
++=======
+ 	case CRYPTO_ALG_TYPE_AEAD:
+ 		ctx_req.req.aead_req = (struct aead_request *)req;
+ 		ctx_req.ctx.reqctx = aead_request_ctx(ctx_req.req.aead_req);
+ 		dma_unmap_sg(&u_ctx->lldi.pdev->dev, ctx_req.ctx.reqctx->dst,
+ 			     ctx_req.ctx.reqctx->dst_nents, DMA_FROM_DEVICE);
+ 		if (ctx_req.ctx.reqctx->skb) {
+ 			kfree_skb(ctx_req.ctx.reqctx->skb);
+ 			ctx_req.ctx.reqctx->skb = NULL;
+ 		}
+ 		if (ctx_req.ctx.reqctx->verify == VERIFY_SW) {
+ 			chcr_verify_tag(ctx_req.req.aead_req, input,
+ 					&err);
+ 			ctx_req.ctx.reqctx->verify = VERIFY_HW;
+ 		}
+ 		break;
+ 
+ 	case CRYPTO_ALG_TYPE_ABLKCIPHER:
++>>>>>>> 44e9f7991616 (crypto: chcr - Change cra_flags for cipher algos)
  		ctx_req.req.ablk_req = (struct ablkcipher_request *)req;
  		ctx_req.ctx.ablk_ctx =
  			ablkcipher_request_ctx(ctx_req.req.ablk_req);
@@@ -1267,9 -2490,9 +1287,9 @@@ static struct chcr_alg_template driver_
  		.is_registered = 0,
  		.alg.crypto = {
  			.cra_name		= "cbc(aes)",
 -			.cra_driver_name	= "cbc-aes-chcr",
 +			.cra_driver_name	= "cbc(aes-chcr)",
  			.cra_priority		= CHCR_CRA_PRIORITY,
- 			.cra_flags		= CRYPTO_ALG_TYPE_BLKCIPHER |
+ 			.cra_flags		= CRYPTO_ALG_TYPE_ABLKCIPHER |
  				CRYPTO_ALG_ASYNC,
  			.cra_blocksize		= AES_BLOCK_SIZE,
  			.cra_ctxsize		= sizeof(struct chcr_context)
@@@ -1294,9 -2517,9 +1314,9 @@@
  		.is_registered = 0,
  		.alg.crypto =   {
  			.cra_name		= "xts(aes)",
 -			.cra_driver_name	= "xts-aes-chcr",
 +			.cra_driver_name	= "xts(aes-chcr)",
  			.cra_priority		= CHCR_CRA_PRIORITY,
- 			.cra_flags		= CRYPTO_ALG_TYPE_BLKCIPHER |
+ 			.cra_flags		= CRYPTO_ALG_TYPE_ABLKCIPHER |
  				CRYPTO_ALG_ASYNC,
  			.cra_blocksize		= AES_BLOCK_SIZE,
  			.cra_ctxsize		= sizeof(struct chcr_context) +
* Unmerged path drivers/crypto/chelsio/chcr_algo.c
