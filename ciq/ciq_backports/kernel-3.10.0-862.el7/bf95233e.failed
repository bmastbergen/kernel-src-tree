mlxsw: spectrum: Cosmetic naming change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arkadi Sharshevsky <arkadis@mellanox.com>
commit bf95233e206983d5a05a2e27700d2678ffdef62c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bf95233e.failed

Currently the struct representing router interface "mlxsw_sp_rif"
is reffered as "r" in various places in the driver. Furthermore it
contains a member which specify the index which is called "rif".
This patch change "r" to "rif" and "rif" to "rif_index".

	Signed-off-by: Arkadi Sharshevsky <arkadis@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bf95233e206983d5a05a2e27700d2678ffdef62c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index a483082a16a0,fe4a55e3272b..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -1493,12 -1494,11 +1493,12 @@@ static int mlxsw_sp_nexthop_init(struc
  	if (in_dev && IN_DEV_IGNORE_ROUTES_WITH_LINKDOWN(in_dev) &&
  	    fib_nh->nh_flags & RTNH_F_LINKDOWN)
  		return 0;
 +#endif
  
- 	r = mlxsw_sp_rif_find_by_dev(mlxsw_sp, dev);
- 	if (!r)
+ 	rif = mlxsw_sp_rif_find_by_dev(mlxsw_sp, dev);
+ 	if (!rif)
  		return 0;
- 	mlxsw_sp_nexthop_rif_init(nh, r);
+ 	mlxsw_sp_nexthop_rif_init(nh, rif);
  
  	err = mlxsw_sp_nexthop_neigh_init(mlxsw_sp, nh);
  	if (err)
@@@ -2754,17 -2766,18 +2756,17 @@@ mlxsw_sp_vport_rif_sp_create(struct mlx
  			     struct net_device *l3_dev)
  {
  	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_vport->mlxsw_sp;
 -	u32 tb_id = l3mdev_fib_table(l3_dev);
  	struct mlxsw_sp_vr *vr;
  	struct mlxsw_sp_fid *f;
- 	struct mlxsw_sp_rif *r;
- 	u16 fid, rif;
+ 	struct mlxsw_sp_rif *rif;
+ 	u16 fid, rif_index;
  	int err;
  
- 	rif = mlxsw_sp_avail_rif_get(mlxsw_sp);
- 	if (rif == MLXSW_SP_INVALID_RIF)
+ 	rif_index = mlxsw_sp_avail_rif_get(mlxsw_sp);
+ 	if (rif_index == MLXSW_SP_INVALID_INDEX_RIF)
  		return ERR_PTR(-ERANGE);
  
 -	vr = mlxsw_sp_vr_get(mlxsw_sp, tb_id ? : RT_TABLE_MAIN);
 +	vr = mlxsw_sp_vr_get(mlxsw_sp, RT_TABLE_MAIN);
  	if (IS_ERR(vr))
  		return ERR_CAST(vr);
  
@@@ -3002,16 -3016,17 +3005,20 @@@ static int mlxsw_sp_rif_bridge_create(s
  				      struct net_device *l3_dev,
  				      struct mlxsw_sp_fid *f)
  {
++<<<<<<< HEAD
++=======
+ 	u32 tb_id = l3mdev_fib_table(l3_dev);
+ 	struct mlxsw_sp_rif *rif;
++>>>>>>> bf95233e2069 (mlxsw: spectrum: Cosmetic naming change)
  	struct mlxsw_sp_vr *vr;
- 	struct mlxsw_sp_rif *r;
- 	u16 rif;
+ 	u16 rif_index;
  	int err;
  
- 	rif = mlxsw_sp_avail_rif_get(mlxsw_sp);
- 	if (rif == MLXSW_SP_INVALID_RIF)
+ 	rif_index = mlxsw_sp_avail_rif_get(mlxsw_sp);
+ 	if (rif_index == MLXSW_SP_INVALID_INDEX_RIF)
  		return -ERANGE;
  
 -	vr = mlxsw_sp_vr_get(mlxsw_sp, tb_id ? : RT_TABLE_MAIN);
 +	vr = mlxsw_sp_vr_get(mlxsw_sp, RT_TABLE_MAIN);
  	if (IS_ERR(vr))
  		return PTR_ERR(vr);
  
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index 9f5088039936..fecda849b3d3 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@ -3972,8 +3972,8 @@ static void mlxsw_sp_master_bridge_vlan_unlink(struct mlxsw_sp *mlxsw_sp,
 	struct mlxsw_sp_fid *f;
 
 	f = mlxsw_sp_fid_find(mlxsw_sp, fid);
-	if (f && f->r)
-		mlxsw_sp_rif_bridge_destroy(mlxsw_sp, f->r);
+	if (f && f->rif)
+		mlxsw_sp_rif_bridge_destroy(mlxsw_sp, f->rif);
 	if (f && --f->ref_count == 0)
 		mlxsw_sp_fid_destroy(mlxsw_sp, f);
 }
@@ -4090,8 +4090,8 @@ static void mlxsw_sp_vfid_destroy(struct mlxsw_sp *mlxsw_sp,
 	clear_bit(vfid, mlxsw_sp->vfids.mapped);
 	list_del(&f->list);
 
-	if (f->r)
-		mlxsw_sp_rif_bridge_destroy(mlxsw_sp, f->r);
+	if (f->rif)
+		mlxsw_sp_rif_bridge_destroy(mlxsw_sp, f->rif);
 
 	kfree(f);
 
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
index 609064be4ed8..01c2741e403e 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
@@ -102,7 +102,7 @@ struct mlxsw_sp_fid {
 	struct list_head list;
 	unsigned int ref_count;
 	struct net_device *dev;
-	struct mlxsw_sp_rif *r;
+	struct mlxsw_sp_rif *rif;
 	u16 fid;
 };
 
@@ -567,7 +567,7 @@ int mlxsw_sp_netdevice_router_port_event(struct net_device *dev);
 int mlxsw_sp_inetaddr_event(struct notifier_block *unused,
 			    unsigned long event, void *ptr);
 void mlxsw_sp_rif_bridge_destroy(struct mlxsw_sp *mlxsw_sp,
-				 struct mlxsw_sp_rif *r);
+				 struct mlxsw_sp_rif *rif);
 int mlxsw_sp_vport_vrf_join(struct mlxsw_sp_port *mlxsw_sp_vport);
 void mlxsw_sp_vport_vrf_leave(struct mlxsw_sp_port *mlxsw_sp_vport);
 int mlxsw_sp_port_vrf_join(struct mlxsw_sp_port *mlxsw_sp_port);
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
index ab11d209ee5d..631be3cf7e84 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
@@ -568,8 +568,8 @@ void mlxsw_sp_fid_destroy(struct mlxsw_sp *mlxsw_sp, struct mlxsw_sp_fid *f)
 
 	list_del(&f->list);
 
-	if (f->r)
-		mlxsw_sp_rif_bridge_destroy(mlxsw_sp, f->r);
+	if (f->rif)
+		mlxsw_sp_rif_bridge_destroy(mlxsw_sp, f->rif);
 
 	kfree(f);
 
