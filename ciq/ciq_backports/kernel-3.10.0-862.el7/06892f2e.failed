qed: Flush slowpath tasklet on stop

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Tomer Tayar <Tomer.Tayar@cavium.com>
commit 06892f2ea2bd6b146707e4ab367aa5b20eac0ba7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/06892f2e.failed

Today, driver has a synchronization point while closing
the device which synchronizes its slowpath interrupt line.
However, that's insufficient as that ISR would schedule the
slowpath-tasklet - so even after ISR is over it's possible the
handling of the interrupt has not completed.

By doing a disable/enable on the taskelt we guarantee that all
HW events that should no longer be genereated from that point
onward in the flow are truly behind us.

	Signed-off-by: Tomer Tayar <Tomer.Tayar@cavium.com>
	Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 06892f2ea2bd6b146707e4ab367aa5b20eac0ba7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_main.c
diff --cc drivers/net/ethernet/qlogic/qed/qed_main.c
index 9b9b903184de,3043dcce125c..000000000000
--- a/drivers/net/ethernet/qlogic/qed/qed_main.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_main.c
@@@ -590,6 -606,33 +590,36 @@@ int qed_slowpath_irq_req(struct qed_hwf
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ static void qed_slowpath_tasklet_flush(struct qed_hwfn *p_hwfn)
+ {
+ 	/* Calling the disable function will make sure that any
+ 	 * currently-running function is completed. The following call to the
+ 	 * enable function makes this sequence a flush-like operation.
+ 	 */
+ 	if (p_hwfn->b_sp_dpc_enabled) {
+ 		tasklet_disable(p_hwfn->sp_dpc);
+ 		tasklet_enable(p_hwfn->sp_dpc);
+ 	}
+ }
+ 
+ void qed_slowpath_irq_sync(struct qed_hwfn *p_hwfn)
+ {
+ 	struct qed_dev *cdev = p_hwfn->cdev;
+ 	u8 id = p_hwfn->my_id;
+ 	u32 int_mode;
+ 
+ 	int_mode = cdev->int_params.out.int_mode;
+ 	if (int_mode == QED_INT_MODE_MSIX)
+ 		synchronize_irq(cdev->int_params.msix_table[id].vector);
+ 	else
+ 		synchronize_irq(cdev->pdev->irq);
+ 
+ 	qed_slowpath_tasklet_flush(p_hwfn);
+ }
+ 
++>>>>>>> 06892f2ea2bd (qed: Flush slowpath tasklet on stop)
  static void qed_slowpath_irq_free(struct qed_dev *cdev)
  {
  	int i;
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_main.c
