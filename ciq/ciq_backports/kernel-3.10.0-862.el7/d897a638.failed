sched: add helper for updating statistics on all actions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit d897a638e98c476c56118d0dcc1bc55450504866
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d897a638.failed

Forgetting to disable preemption around tcf_action_stats_update()
seems to be a common mistake.  Add a helper function for updating
stats on all actions of a filter.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d897a638e98c476c56118d0dcc1bc55450504866)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_offload.c
#	include/net/pkt_cls.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index d3c637b0294b,7914a32a3036..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -1304,12 -1882,7 +1303,16 @@@ int mlx5e_stats_flower(struct mlx5e_pri
  
  	mlx5_fc_query_cached(counter, &bytes, &packets, &lastuse);
  
++<<<<<<< HEAD
 +	preempt_disable();
 +
 +	tc_for_each_action(a, f->exts)
 +		tcf_action_stats_update(a, bytes, packets, lastuse);
 +
 +	preempt_enable();
++=======
+ 	tcf_exts_stats_update(f->exts, bytes, packets, lastuse);
++>>>>>>> d897a638e98c (sched: add helper for updating statistics on all actions)
  
  	return 0;
  }
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
index 2942b1009610,13af8e358847..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
@@@ -379,3 -390,39 +379,42 @@@ void mlxsw_sp_flower_destroy(struct mlx
  
  	mlxsw_sp_acl_ruleset_put(mlxsw_sp, ruleset);
  }
++<<<<<<< HEAD
++=======
+ 
+ int mlxsw_sp_flower_stats(struct mlxsw_sp_port *mlxsw_sp_port, bool ingress,
+ 			  struct tc_cls_flower_offload *f)
+ {
+ 	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_port->mlxsw_sp;
+ 	struct mlxsw_sp_acl_ruleset *ruleset;
+ 	struct mlxsw_sp_acl_rule *rule;
+ 	u64 packets;
+ 	u64 lastuse;
+ 	u64 bytes;
+ 	int err;
+ 
+ 	ruleset = mlxsw_sp_acl_ruleset_get(mlxsw_sp, mlxsw_sp_port->dev,
+ 					   ingress,
+ 					   MLXSW_SP_ACL_PROFILE_FLOWER);
+ 	if (WARN_ON(IS_ERR(ruleset)))
+ 		return -EINVAL;
+ 
+ 	rule = mlxsw_sp_acl_rule_lookup(mlxsw_sp, ruleset, f->cookie);
+ 	if (!rule)
+ 		return -EINVAL;
+ 
+ 	err = mlxsw_sp_acl_rule_get_stats(mlxsw_sp, rule, &packets, &bytes,
+ 					  &lastuse);
+ 	if (err)
+ 		goto err_rule_get_stats;
+ 
+ 	tcf_exts_stats_update(f->exts, bytes, packets, lastuse);
+ 
+ 	mlxsw_sp_acl_ruleset_put(mlxsw_sp, ruleset);
+ 	return 0;
+ 
+ err_rule_get_stats:
+ 	mlxsw_sp_acl_ruleset_put(mlxsw_sp, ruleset);
+ 	return err;
+ }
++>>>>>>> d897a638e98c (sched: add helper for updating statistics on all actions)
diff --cc include/net/pkt_cls.h
index db4cec05920e,537d0a0ad4c4..000000000000
--- a/include/net/pkt_cls.h
+++ b/include/net/pkt_cls.h
@@@ -108,6 -143,39 +108,42 @@@ tcf_exts_is_available(struct tcf_exts *
  	return tcf_exts_is_predicative(exts);
  }
  
++<<<<<<< HEAD
++=======
+ static inline void tcf_exts_to_list(const struct tcf_exts *exts,
+ 				    struct list_head *actions)
+ {
+ #ifdef CONFIG_NET_CLS_ACT
+ 	int i;
+ 
+ 	for (i = 0; i < exts->nr_actions; i++) {
+ 		struct tc_action *a = exts->actions[i];
+ 
+ 		list_add_tail(&a->list, actions);
+ 	}
+ #endif
+ }
+ 
+ static inline void
+ tcf_exts_stats_update(const struct tcf_exts *exts,
+ 		      u64 bytes, u64 packets, u64 lastuse)
+ {
+ #ifdef CONFIG_NET_CLS_ACT
+ 	int i;
+ 
+ 	preempt_disable();
+ 
+ 	for (i = 0; i < exts->nr_actions; i++) {
+ 		struct tc_action *a = exts->actions[i];
+ 
+ 		tcf_action_stats_update(a, bytes, packets, lastuse);
+ 	}
+ 
+ 	preempt_enable();
+ #endif
+ }
+ 
++>>>>>>> d897a638e98c (sched: add helper for updating statistics on all actions)
  /**
   * tcf_exts_exec - execute tc filter extensions
   * @skb: socket buffer
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_offload.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_flower.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_offload.c
* Unmerged path include/net/pkt_cls.h
