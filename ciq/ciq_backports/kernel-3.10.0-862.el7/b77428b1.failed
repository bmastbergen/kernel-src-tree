xfs: defer should abort intent items if the trans roll fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit b77428b12b55437b28deae738d9ce8b2e0663b55
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b77428b1.failed

If the deferred ops transaction roll fails, we need to abort the intent
items if we haven't already logged a done item for it, regardless of
whether or not the deferred ops has had a transaction committed.  Dave
found this while running generic/388.

Move the tracepoint to make it easier to track object lifetimes.

	Reported-by: Dave Chinner <david@fromorbit.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit b77428b12b55437b28deae738d9ce8b2e0663b55)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_defer.c
diff --cc fs/xfs/libxfs/xfs_defer.c
index 2809db75e0d3,5c2929f94bd3..000000000000
--- a/fs/xfs/libxfs/xfs_defer.c
+++ b/fs/xfs/libxfs/xfs_defer.c
@@@ -179,20 -220,15 +180,31 @@@ xfs_defer_trans_abort
  {
  	struct xfs_defer_pending	*dfp;
  
++<<<<<<< HEAD
 +	/*
 +	 * If the transaction was committed, drop the intent reference
 +	 * since we're bailing out of here. The other reference is
 +	 * dropped when the intent hits the AIL.  If the transaction
 +	 * was not committed, the intent is freed by the intent item
 +	 * unlock handler on abort.
 +	 */
 +	if (!dop->dop_committed)
 +		return;
++=======
+ 	trace_xfs_defer_trans_abort(tp->t_mountp, dop);
++>>>>>>> b77428b12b55 (xfs: defer should abort intent items if the trans roll fails)
  
- 	/* Abort intent items. */
+ 	/* Abort intent items that don't have a done item. */
  	list_for_each_entry(dfp, &dop->dop_pending, dfp_list) {
++<<<<<<< HEAD
 +		if (dfp->dfp_committed)
++=======
+ 		trace_xfs_defer_pending_abort(tp->t_mountp, dfp);
+ 		if (dfp->dfp_intent && !dfp->dfp_done) {
++>>>>>>> b77428b12b55 (xfs: defer should abort intent items if the trans roll fails)
  			dfp->dfp_type->abort_intent(dfp->dfp_intent);
+ 			dfp->dfp_intent = NULL;
+ 		}
  	}
  
  	/* Shut down FS. */
* Unmerged path fs/xfs/libxfs/xfs_defer.c
