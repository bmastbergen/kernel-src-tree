drm/i915/gen9+: Add has_ipc flag in device info structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Mahesh Kumar <mahesh1.kumar@intel.com>
commit e57f1c02155f4f108b9d3ba2bed687e8e9f95e18
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e57f1c02.failed

New Isochronous Priority Control (IPC) capability is introduced in newer
GEN platforms. This patch adds a device info flag to indicate if platform
supports IPC. Patch also sets this flag in supported platforms.

	Signed-off-by: Mahesh Kumar <mahesh1.kumar@intel.com>
	Cc: Chris Wilson <chris@chris-wilson.co.uk>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20170817134529.2839-7-mahesh1.kumar@intel.com
(cherry picked from commit e57f1c02155f4f108b9d3ba2bed687e8e9f95e18)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_drv.h
#	drivers/gpu/drm/i915/i915_pci.c
diff --cc drivers/gpu/drm/i915/i915_drv.h
index c383dcb3961f,63ca2ffcafef..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -706,7 -799,7 +706,11 @@@ struct intel_csr 
  	func(hws_needs_physical); \
  	func(overlay_needs_physical); \
  	func(supports_tv); \
++<<<<<<< HEAD
 +	func(has_decoupled_mmio)
++=======
+ 	func(has_ipc);
++>>>>>>> e57f1c02155f (drm/i915/gen9+: Add has_ipc flag in device info structure)
  
  struct sseu_dev_info {
  	u8 slice_mask;
diff --cc drivers/gpu/drm/i915/i915_pci.c
index 08e274e16165,129877b94c20..000000000000
--- a/drivers/gpu/drm/i915/i915_pci.c
+++ b/drivers/gpu/drm/i915/i915_pci.c
@@@ -324,69 -425,142 +324,204 @@@ static const struct intel_device_info i
  	CHV_COLORS,
  };
  
++<<<<<<< HEAD
 +static const struct intel_device_info intel_skylake_info = {
++=======
+ #define SKL_PLATFORM \
+ 	BDW_FEATURES, \
+ 	.gen = 9, \
+ 	.platform = INTEL_SKYLAKE, \
+ 	.has_csr = 1, \
+ 	.has_guc = 1, \
+ 	.ddb_size = 896
+ 
+ static const struct intel_device_info intel_skylake_gt1_info __initconst = {
+ 	SKL_PLATFORM,
+ 	.gt = 1,
+ };
+ 
+ static const struct intel_device_info intel_skylake_gt2_info __initconst = {
+ 	SKL_PLATFORM,
+ 	.gt = 2,
+ };
+ 
+ #define SKL_GT3_PLUS_PLATFORM \
+ 	SKL_PLATFORM, \
+ 	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING | BSD2_RING
+ 
+ 
+ static const struct intel_device_info intel_skylake_gt3_info __initconst = {
+ 	SKL_GT3_PLUS_PLATFORM,
+ 	.gt = 3,
+ };
+ 
+ static const struct intel_device_info intel_skylake_gt4_info __initconst = {
+ 	SKL_GT3_PLUS_PLATFORM,
+ 	.gt = 4,
+ };
+ 
+ #define GEN9_LP_FEATURES \
+ 	.gen = 9, \
+ 	.is_lp = 1, \
+ 	.has_hotplug = 1, \
+ 	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING, \
+ 	.num_pipes = 3, \
+ 	.has_64bit_reloc = 1, \
+ 	.has_ddi = 1, \
+ 	.has_fpga_dbg = 1, \
+ 	.has_fbc = 1, \
+ 	.has_runtime_pm = 1, \
+ 	.has_pooled_eu = 0, \
+ 	.has_csr = 1, \
+ 	.has_resource_streamer = 1, \
+ 	.has_rc6 = 1, \
+ 	.has_dp_mst = 1, \
+ 	.has_gmbus_irq = 1, \
+ 	.has_logical_ring_contexts = 1, \
+ 	.has_guc = 1, \
+ 	.has_aliasing_ppgtt = 1, \
+ 	.has_full_ppgtt = 1, \
+ 	.has_full_48bit_ppgtt = 1, \
+ 	.has_reset_engine = 1, \
+ 	.has_snoop = true, \
+ 	.has_ipc = 1, \
+ 	GEN_DEFAULT_PIPEOFFSETS, \
+ 	IVB_CURSOR_OFFSETS, \
+ 	BDW_COLORS
+ 
+ static const struct intel_device_info intel_broxton_info __initconst = {
+ 	GEN9_LP_FEATURES,
+ 	.platform = INTEL_BROXTON,
+ 	.ddb_size = 512,
+ };
+ 
+ static const struct intel_device_info intel_geminilake_info __initconst = {
+ 	GEN9_LP_FEATURES,
+ 	.platform = INTEL_GEMINILAKE,
+ 	.ddb_size = 1024,
+ 	.color = { .degamma_lut_size = 0, .gamma_lut_size = 1024 }
+ };
+ 
+ #define KBL_PLATFORM \
+ 	BDW_FEATURES, \
+ 	.gen = 9, \
+ 	.platform = INTEL_KABYLAKE, \
+ 	.has_csr = 1, \
+ 	.has_guc = 1, \
+ 	.has_ipc = 1, \
+ 	.ddb_size = 896
+ 
+ static const struct intel_device_info intel_kabylake_gt1_info __initconst = {
+ 	KBL_PLATFORM,
+ 	.gt = 1,
+ };
+ 
+ static const struct intel_device_info intel_kabylake_gt2_info __initconst = {
+ 	KBL_PLATFORM,
+ 	.gt = 2,
+ };
+ 
+ static const struct intel_device_info intel_kabylake_gt3_info __initconst = {
+ 	KBL_PLATFORM,
+ 	.gt = 3,
+ 	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING | BSD2_RING,
+ };
+ 
+ #define CFL_PLATFORM \
+ 	.is_alpha_support = 1, \
+ 	BDW_FEATURES, \
+ 	.gen = 9, \
+ 	.platform = INTEL_COFFEELAKE, \
+ 	.has_csr = 1, \
+ 	.has_guc = 1, \
+ 	.has_ipc = 1, \
+ 	.ddb_size = 896
+ 
+ static const struct intel_device_info intel_coffeelake_gt1_info __initconst = {
+ 	CFL_PLATFORM,
+ 	.gt = 1,
+ };
+ 
+ static const struct intel_device_info intel_coffeelake_gt2_info __initconst = {
+ 	CFL_PLATFORM,
+ 	.gt = 2,
+ };
+ 
+ static const struct intel_device_info intel_coffeelake_gt3_info __initconst = {
+ 	CFL_PLATFORM,
+ 	.gt = 3,
+ 	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING | BSD2_RING,
+ };
+ 
+ static const struct intel_device_info intel_cannonlake_gt2_info __initconst = {
++>>>>>>> e57f1c02155f (drm/i915/gen9+: Add has_ipc flag in device info structure)
  	BDW_FEATURES,
 -	.is_alpha_support = 1,
 -	.platform = INTEL_CANNONLAKE,
 -	.gen = 10,
 -	.gt = 2,
 -	.ddb_size = 1024,
 +	.is_skylake = 1,
 +	.gen = 9,
  	.has_csr = 1,
++<<<<<<< HEAD
 +	.has_guc = 1,
 +	.ddb_size = 896,
 +};
 +
 +static const struct intel_device_info intel_skylake_gt3_info = {
 +	BDW_FEATURES,
 +	.is_skylake = 1,
 +	.gen = 9,
 +	.has_csr = 1,
 +	.has_guc = 1,
 +	.ddb_size = 896,
 +	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING | BSD2_RING,
 +};
 +
 +static const struct intel_device_info intel_broxton_info = {
 +	.is_broxton = 1,
 +	.gen = 9,
 +	.has_hotplug = 1,
 +	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING,
 +	.num_pipes = 3,
 +	.has_64bit_reloc = 1,
 +	.has_ddi = 1,
 +	.has_fpga_dbg = 1,
 +	.has_fbc = 1,
 +	.has_runtime_pm = 1,
 +	.has_pooled_eu = 0,
 +	.has_csr = 1,
 +	.has_resource_streamer = 1,
 +	.has_rc6 = 1,
 +	.has_dp_mst = 1,
 +	.has_gmbus_irq = 1,
 +	.has_hw_contexts = 1,
 +	.has_logical_ring_contexts = 1,
 +	.has_guc = 1,
 +	.has_decoupled_mmio = 1,
 +	.ddb_size = 512,
 +	GEN_DEFAULT_PIPEOFFSETS,
 +	IVB_CURSOR_OFFSETS,
 +	BDW_COLORS,
 +};
 +
 +static const struct intel_device_info intel_kabylake_info = {
 +	BDW_FEATURES,
 +	.is_kabylake = 1,
 +	.gen = 9,
 +	.has_csr = 1,
 +	.has_guc = 1,
 +	.ddb_size = 896,
 +};
 +
 +static const struct intel_device_info intel_kabylake_gt3_info = {
 +	BDW_FEATURES,
 +	.is_kabylake = 1,
 +	.gen = 9,
 +	.has_csr = 1,
 +	.has_guc = 1,
 +	.ddb_size = 896,
 +	.ring_mask = RENDER_RING | BSD_RING | BLT_RING | VEBOX_RING | BSD2_RING,
++=======
+ 	.has_ipc = 1,
+ 	.color = { .degamma_lut_size = 0, .gamma_lut_size = 1024 }
++>>>>>>> e57f1c02155f (drm/i915/gen9+: Add has_ipc flag in device info structure)
  };
  
  /*
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
* Unmerged path drivers/gpu/drm/i915/i915_pci.c
