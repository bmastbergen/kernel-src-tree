qed/qede: Enable tunnel offloads based on hw configuration

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Chopra, Manish <Manish.Chopra@cavium.com>
commit 19489c7f0d9040ed2ffc23747e14af95dba479d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/19489c7f.failed

This patch enables tunnel feature offloads based on hw configuration
at initialization time instead of enabling them always.

	Signed-off-by: Manish Chopra <manish.chopra@cavium.com>
	Signed-off-by: Yuval Mintz <yuval.mintz@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 19489c7f0d9040ed2ffc23747e14af95dba479d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qede/qede_filter.c
#	drivers/net/ethernet/qlogic/qede/qede_main.c
diff --cc drivers/net/ethernet/qlogic/qede/qede_filter.c
index c4f04a5e6810,23e0c1696c86..000000000000
--- a/drivers/net/ethernet/qlogic/qede/qede_filter.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_filter.c
@@@ -428,21 -880,43 +428,53 @@@ int qede_set_features(struct net_devic
  	return 0;
  }
  
 -void qede_udp_tunnel_add(struct net_device *dev, struct udp_tunnel_info *ti)
 +#ifdef CONFIG_QEDE_VXLAN
 +void qede_add_vxlan_port(struct net_device *dev,
 +			 sa_family_t sa_family, __be16 port)
  {
  	struct qede_dev *edev = netdev_priv(dev);
 -	u16 t_port = ntohs(ti->port);
 +	u16 t_port = ntohs(port);
  
++<<<<<<< HEAD
 +	if (edev->vxlan_dst_port)
++=======
+ 	switch (ti->type) {
+ 	case UDP_TUNNEL_TYPE_VXLAN:
+ 		if (!edev->dev_info.common.vxlan_enable)
+ 			return;
+ 
+ 		if (edev->vxlan_dst_port)
+ 			return;
+ 
+ 		edev->vxlan_dst_port = t_port;
+ 
+ 		DP_VERBOSE(edev, QED_MSG_DEBUG, "Added vxlan port=%d\n",
+ 			   t_port);
+ 
+ 		set_bit(QEDE_SP_VXLAN_PORT_CONFIG, &edev->sp_flags);
+ 		break;
+ 	case UDP_TUNNEL_TYPE_GENEVE:
+ 		if (!edev->dev_info.common.geneve_enable)
+ 			return;
+ 
+ 		if (edev->geneve_dst_port)
+ 			return;
+ 
+ 		edev->geneve_dst_port = t_port;
+ 
+ 		DP_VERBOSE(edev, QED_MSG_DEBUG, "Added geneve port=%d\n",
+ 			   t_port);
+ 		set_bit(QEDE_SP_GENEVE_PORT_CONFIG, &edev->sp_flags);
+ 		break;
+ 	default:
++>>>>>>> 19489c7f0d90 (qed/qede: Enable tunnel offloads based on hw configuration)
  		return;
 -	}
  
 +	edev->vxlan_dst_port = t_port;
 +
 +	DP_VERBOSE(edev, QED_MSG_DEBUG, "Added vxlan port=%d", t_port);
 +
 +	set_bit(QEDE_SP_VXLAN_PORT_CONFIG, &edev->sp_flags);
  	schedule_delayed_work(&edev->sp_task, 0);
  }
  
diff --cc drivers/net/ethernet/qlogic/qede/qede_main.c
index ca645148d03f,42f043b1524f..000000000000
--- a/drivers/net/ethernet/qlogic/qede/qede_main.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_main.c
@@@ -603,7 -609,8 +603,12 @@@ static void qede_init_ndev(struct qede_
  {
  	struct net_device *ndev = edev->ndev;
  	struct pci_dev *pdev = edev->pdev;
++<<<<<<< HEAD
 +	u32 hw_features;
++=======
+ 	bool udp_tunnel_enable = false;
+ 	netdev_features_t hw_features;
++>>>>>>> 19489c7f0d90 (qed/qede: Enable tunnel offloads based on hw configuration)
  
  	pci_set_drvdata(pdev, ndev);
  
@@@ -625,16 -632,33 +630,46 @@@
  		      NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM |
  		      NETIF_F_TSO | NETIF_F_TSO6;
  
++<<<<<<< HEAD
 +	/* Encap features*/
 +	hw_features |= NETIF_F_GSO_GRE | NETIF_F_GSO_UDP_TUNNEL |
 +		       NETIF_F_TSO_ECN | NETIF_F_GSO_UDP_TUNNEL_CSUM |
 +		       NETIF_F_GSO_GRE_CSUM;
 +	ndev->hw_enc_features = NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM |
 +				NETIF_F_SG | NETIF_F_TSO | NETIF_F_TSO_ECN |
 +				NETIF_F_TSO6 | NETIF_F_GSO_GRE |
 +				NETIF_F_GSO_UDP_TUNNEL | NETIF_F_RXCSUM |
 +				NETIF_F_GSO_UDP_TUNNEL_CSUM |
 +				NETIF_F_GSO_GRE_CSUM;
++=======
+ 	if (!IS_VF(edev) && edev->dev_info.common.num_hwfns == 1)
+ 		hw_features |= NETIF_F_NTUPLE;
+ 
+ 	if (edev->dev_info.common.vxlan_enable ||
+ 	    edev->dev_info.common.geneve_enable)
+ 		udp_tunnel_enable = true;
+ 
+ 	if (udp_tunnel_enable || edev->dev_info.common.gre_enable) {
+ 		hw_features |= NETIF_F_TSO_ECN;
+ 		ndev->hw_enc_features = NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM |
+ 					NETIF_F_SG | NETIF_F_TSO |
+ 					NETIF_F_TSO_ECN | NETIF_F_TSO6 |
+ 					NETIF_F_RXCSUM;
+ 	}
+ 
+ 	if (udp_tunnel_enable) {
+ 		hw_features |= (NETIF_F_GSO_UDP_TUNNEL |
+ 				NETIF_F_GSO_UDP_TUNNEL_CSUM);
+ 		ndev->hw_enc_features |= (NETIF_F_GSO_UDP_TUNNEL |
+ 					  NETIF_F_GSO_UDP_TUNNEL_CSUM);
+ 	}
+ 
+ 	if (edev->dev_info.common.gre_enable) {
+ 		hw_features |= (NETIF_F_GSO_GRE | NETIF_F_GSO_GRE_CSUM);
+ 		ndev->hw_enc_features |= (NETIF_F_GSO_GRE |
+ 					  NETIF_F_GSO_GRE_CSUM);
+ 	}
++>>>>>>> 19489c7f0d90 (qed/qede: Enable tunnel offloads based on hw configuration)
  
  	ndev->vlan_features = hw_features | NETIF_F_RXHASH | NETIF_F_RXCSUM |
  			      NETIF_F_HIGHDMA;
diff --git a/drivers/net/ethernet/qlogic/qed/qed_main.c b/drivers/net/ethernet/qlogic/qed/qed_main.c
index 1702ce0e037b..b6f1530e2d16 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_main.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_main.c
@@ -229,10 +229,25 @@ err0:
 int qed_fill_dev_info(struct qed_dev *cdev,
 		      struct qed_dev_info *dev_info)
 {
+	struct qed_tunnel_info *tun = &cdev->tunnel;
 	struct qed_ptt  *ptt;
 
 	memset(dev_info, 0, sizeof(struct qed_dev_info));
 
+	if (tun->vxlan.tun_cls == QED_TUNN_CLSS_MAC_VLAN &&
+	    tun->vxlan.b_mode_enabled)
+		dev_info->vxlan_enable = true;
+
+	if (tun->l2_gre.b_mode_enabled && tun->ip_gre.b_mode_enabled &&
+	    tun->l2_gre.tun_cls == QED_TUNN_CLSS_MAC_VLAN &&
+	    tun->ip_gre.tun_cls == QED_TUNN_CLSS_MAC_VLAN)
+		dev_info->gre_enable = true;
+
+	if (tun->l2_geneve.b_mode_enabled && tun->ip_geneve.b_mode_enabled &&
+	    tun->l2_geneve.tun_cls == QED_TUNN_CLSS_MAC_VLAN &&
+	    tun->ip_geneve.tun_cls == QED_TUNN_CLSS_MAC_VLAN)
+		dev_info->geneve_enable = true;
+
 	dev_info->num_hwfns = cdev->num_hwfns;
 	dev_info->pci_mem_start = cdev->pci_params.mem_start;
 	dev_info->pci_mem_end = cdev->pci_params.mem_end;
* Unmerged path drivers/net/ethernet/qlogic/qede/qede_filter.c
* Unmerged path drivers/net/ethernet/qlogic/qede/qede_main.c
diff --git a/include/linux/qed/qed_if.h b/include/linux/qed/qed_if.h
index f51c5235e743..722fb37a2076 100644
--- a/include/linux/qed/qed_if.h
+++ b/include/linux/qed/qed_if.h
@@ -332,6 +332,11 @@ struct qed_dev_info {
 	bool wol_support;
 
 	enum qed_dev_type dev_type;
+
+	/* Output parameters for qede */
+	bool		vxlan_enable;
+	bool		gre_enable;
+	bool		geneve_enable;
 };
 
 enum qed_sb_type {
