nfp: report port type in ethtool

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 9f9e0da57ef1207b26b13c243c5f398c9432156c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9f9e0da5.failed

Service process firmware provides us with information about media
and interface (SFP module) plugged in, translate that to Linux's
PORT_* defines and report via ethtool.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Reviewed-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9f9e0da57ef1207b26b13c243c5f398c9432156c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.c
#	drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.h
diff --cc drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.c
index f94361014b87,07b4ded01514..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.c
+++ b/drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.c
@@@ -62,6 -62,10 +62,13 @@@
  #define NSP_ETH_STATE_TX_ENABLED	BIT_ULL(2)
  #define NSP_ETH_STATE_RX_ENABLED	BIT_ULL(3)
  #define NSP_ETH_STATE_RATE		GENMASK_ULL(11, 8)
++<<<<<<< HEAD
++=======
+ #define NSP_ETH_STATE_INTERFACE		GENMASK_ULL(19, 12)
+ #define NSP_ETH_STATE_MEDIA		GENMASK_ULL(21, 20)
+ #define NSP_ETH_STATE_OVRD_CHNG		BIT_ULL(22)
+ #define NSP_ETH_STATE_ANEG		GENMASK_ULL(25, 23)
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
  
  #define NSP_ETH_CTRL_ENABLED		BIT_ULL(1)
  #define NSP_ETH_CTRL_TX_ENABLED		BIT_ULL(2)
@@@ -132,13 -136,59 +139,30 @@@ nfp_eth_port_translate(const struct eth
  	rate = nfp_eth_rate(FIELD_GET(NSP_ETH_STATE_RATE, state));
  	dst->speed = dst->lanes * rate;
  
+ 	dst->interface = FIELD_GET(NSP_ETH_STATE_INTERFACE, state);
+ 	dst->media = FIELD_GET(NSP_ETH_STATE_MEDIA, state);
+ 
  	nfp_eth_copy_mac_reverse(dst->mac_addr, src->mac_addr);
  
 -	dst->label_port = FIELD_GET(NSP_ETH_PORT_PHYLABEL, port);
 -	dst->label_subport = FIELD_GET(NSP_ETH_PORT_LABEL, port);
 -
 -	if (nfp_nsp_get_abi_ver_minor(nsp) < 17)
 -		return;
 -
 -	dst->override_changed = FIELD_GET(NSP_ETH_STATE_OVRD_CHNG, state);
 -	dst->aneg = FIELD_GET(NSP_ETH_STATE_ANEG, state);
 -}
 -
 -static void
 -nfp_eth_mark_split_ports(struct nfp_cpp *cpp, struct nfp_eth_table *table)
 -{
 -	unsigned int i, j;
 -
 -	for (i = 0; i < table->count; i++)
 -		for (j = 0; j < table->count; j++) {
 -			if (i == j)
 -				continue;
 -			if (table->ports[i].label_port !=
 -			    table->ports[j].label_port)
 -				continue;
 -			if (table->ports[i].label_subport ==
 -			    table->ports[j].label_subport)
 -				nfp_warn(cpp,
 -					 "Port %d subport %d is a duplicate\n",
 -					 table->ports[i].label_port,
 -					 table->ports[i].label_subport);
 -
 -			table->ports[i].is_split = true;
 -			break;
 -		}
 +	snprintf(dst->label, sizeof(dst->label) - 1, "%llu.%llu",
 +		 FIELD_GET(NSP_ETH_PORT_PHYLABEL, port),
 +		 FIELD_GET(NSP_ETH_PORT_LABEL, port));
  }
  
+ static void
+ nfp_eth_calc_port_type(struct nfp_cpp *cpp, struct nfp_eth_table_port *entry)
+ {
+ 	if (entry->interface == NFP_INTERFACE_NONE) {
+ 		entry->port_type = PORT_NONE;
+ 		return;
+ 	}
+ 
+ 	if (entry->media == NFP_MEDIA_FIBRE)
+ 		entry->port_type = PORT_FIBRE;
+ 	else
+ 		entry->port_type = PORT_DA;
+ }
+ 
  /**
   * nfp_eth_read_ports() - retrieve port information
   * @cpp:	NFP CPP handle
@@@ -202,9 -252,13 +226,16 @@@ __nfp_eth_read_ports(struct nfp_cpp *cp
  	table->count = cnt;
  	for (i = 0, j = 0; i < NSP_ETH_MAX_COUNT; i++)
  		if (entries[i].port & NSP_ETH_PORT_LANES_MASK)
 -			nfp_eth_port_translate(nsp, &entries[i], i,
 +			nfp_eth_port_translate(&entries[i], i,
  					       &table->ports[j++]);
  
++<<<<<<< HEAD
++=======
+ 	nfp_eth_mark_split_ports(cpp, table);
+ 	for (i = 0; i < table->count; i++)
+ 		nfp_eth_calc_port_type(cpp, &table->ports[i]);
+ 
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
  	kfree(entries);
  
  	return table;
diff --cc drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.h
index edf703d319c8,57eb3cfa6a0a..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.h
+++ b/drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.h
@@@ -37,6 -37,30 +37,33 @@@
  #include <linux/types.h>
  #include <linux/if_ether.h>
  
++<<<<<<< HEAD
++=======
+ enum nfp_eth_interface {
+ 	NFP_INTERFACE_NONE	= 0,
+ 	NFP_INTERFACE_SFP	= 1,
+ 	NFP_INTERFACE_SFPP	= 10,
+ 	NFP_INTERFACE_SFP28	= 28,
+ 	NFP_INTERFACE_QSFP	= 40,
+ 	NFP_INTERFACE_CXP	= 100,
+ 	NFP_INTERFACE_QSFP28	= 112,
+ };
+ 
+ enum nfp_eth_media {
+ 	NFP_MEDIA_DAC_PASSIVE = 0,
+ 	NFP_MEDIA_DAC_ACTIVE,
+ 	NFP_MEDIA_FIBRE,
+ };
+ 
+ enum nfp_eth_aneg {
+ 	NFP_ANEG_AUTO = 0,
+ 	NFP_ANEG_SEARCH,
+ 	NFP_ANEG_25G_CONSORTIUM,
+ 	NFP_ANEG_25G_IEEE,
+ 	NFP_ANEG_DISABLED,
+ };
+ 
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
  /**
   * struct nfp_eth_table - ETH table information
   * @count:	number of table entries
@@@ -48,11 -72,19 +75,24 @@@
   * @base:	first channel index (within NBI)
   * @lanes:	number of channels
   * @speed:	interface speed (in Mbps)
++<<<<<<< HEAD
++=======
+  * @interface:	interface (module) plugged in
+  * @media:	media type of the @interface
+  * @aneg:	auto negotiation mode
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
   * @mac_addr:	interface MAC address
 - * @label_port:	port id
 - * @label_subport:  id of interface within port (for split ports)
 + * @label:	interface id string
   * @enabled:	is enabled?
   * @tx_enabled:	is TX enabled?
   * @rx_enabled:	is RX enabled?
++<<<<<<< HEAD
++=======
+  * @override_changed: is media reconfig pending?
+  *
+  * @port_type:	one of %PORT_* defines for ethtool
+  * @is_split:	is interface part of a split port
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
   */
  struct nfp_eth_table {
  	unsigned int count;
@@@ -64,12 -96,26 +104,30 @@@
  		unsigned int lanes;
  		unsigned int speed;
  
++<<<<<<< HEAD
++=======
+ 		unsigned int interface;
+ 		enum nfp_eth_media media;
+ 
+ 		enum nfp_eth_aneg aneg;
+ 
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
  		u8 mac_addr[ETH_ALEN];
 -
 -		u8 label_port;
 -		u8 label_subport;
 +		char label[8];
  
  		bool enabled;
  		bool tx_enabled;
  		bool rx_enabled;
++<<<<<<< HEAD
++=======
+ 
+ 		bool override_changed;
+ 
+ 		/* Computed fields */
+ 		u8 port_type;
+ 
+ 		bool is_split;
++>>>>>>> 9f9e0da57ef1 (nfp: report port type in ethtool)
  	} ports[0];
  };
  
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
index 023c710a1350..3020dbba1a8d 100644
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
@@ -198,6 +198,7 @@ nfp_net_get_link_ksettings(struct net_device *netdev,
 		nfp_net_refresh_port_config(nn);
 	/* Separate if - on FW error the port could've disappeared from table */
 	if (nn->eth_port) {
+		cmd->base.port = nn->eth_port->port_type;
 		cmd->base.speed = nn->eth_port->speed;
 		cmd->base.duplex = DUPLEX_FULL;
 		return 0;
* Unmerged path drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfpcore/nfp_nsp_eth.h
