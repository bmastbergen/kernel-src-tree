drm/i915: Use bdw_ddi_translations_fdi for Broadwell

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit 1210d3889077653b90b0bfd2cc54e19f4766e4e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/1210d388.failed

The compiler warns:

	drivers/gpu/drm/i915/intel_ddi.c:118:35: warning: ‘bdw_ddi_translations_fdi’ defined but not used

Lo and behold, if we look at intel_ddi_get_buf_trans_fdi(), it uses
hsw_ddi_translations_fdi[] for both Haswell and *Broadwell*

Fixes: 7d1c42e679f9 ("drm/i915: Refactor code to select the DDI buf translation table")
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Cc: David Weinehall <david.weinehall@linux.intel.com>
	Cc: Jani Nikula <jani.nikula@linux.intel.com>
	Cc: <stable@vger.kernel.org> # v4.12+
Link: https://patchwork.freedesktop.org/patch/msgid/20171013154735.27163-1-chris@chris-wilson.co.uk
	Reviewed-by: Jani Nikula <jani.nikula@linux.intel.com>
	Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
(cherry picked from commit 1210d3889077653b90b0bfd2cc54e19f4766e4e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ddi.c
diff --cc drivers/gpu/drm/i915/intel_ddi.c
index 10ec9d4b7d45,8ef65941b8fd..000000000000
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@@ -468,6 -692,59 +468,62 @@@ static int intel_ddi_hdmi_level(struct 
  	return hdmi_level;
  }
  
++<<<<<<< HEAD
++=======
+ static const struct ddi_buf_trans *
+ intel_ddi_get_buf_trans_dp(struct drm_i915_private *dev_priv,
+ 			   int *n_entries)
+ {
+ 	if (IS_KABYLAKE(dev_priv) || IS_COFFEELAKE(dev_priv)) {
+ 		return kbl_get_buf_trans_dp(dev_priv, n_entries);
+ 	} else if (IS_SKYLAKE(dev_priv)) {
+ 		return skl_get_buf_trans_dp(dev_priv, n_entries);
+ 	} else if (IS_BROADWELL(dev_priv)) {
+ 		*n_entries = ARRAY_SIZE(bdw_ddi_translations_dp);
+ 		return  bdw_ddi_translations_dp;
+ 	} else if (IS_HASWELL(dev_priv)) {
+ 		*n_entries = ARRAY_SIZE(hsw_ddi_translations_dp);
+ 		return hsw_ddi_translations_dp;
+ 	}
+ 
+ 	*n_entries = 0;
+ 	return NULL;
+ }
+ 
+ static const struct ddi_buf_trans *
+ intel_ddi_get_buf_trans_edp(struct drm_i915_private *dev_priv,
+ 			    int *n_entries)
+ {
+ 	if (IS_GEN9_BC(dev_priv)) {
+ 		return skl_get_buf_trans_edp(dev_priv, n_entries);
+ 	} else if (IS_BROADWELL(dev_priv)) {
+ 		return bdw_get_buf_trans_edp(dev_priv, n_entries);
+ 	} else if (IS_HASWELL(dev_priv)) {
+ 		*n_entries = ARRAY_SIZE(hsw_ddi_translations_dp);
+ 		return hsw_ddi_translations_dp;
+ 	}
+ 
+ 	*n_entries = 0;
+ 	return NULL;
+ }
+ 
+ static const struct ddi_buf_trans *
+ intel_ddi_get_buf_trans_fdi(struct drm_i915_private *dev_priv,
+ 			    int *n_entries)
+ {
+ 	if (IS_BROADWELL(dev_priv)) {
+ 		*n_entries = ARRAY_SIZE(bdw_ddi_translations_fdi);
+ 		return bdw_ddi_translations_fdi;
+ 	} else if (IS_HASWELL(dev_priv)) {
+ 		*n_entries = ARRAY_SIZE(hsw_ddi_translations_fdi);
+ 		return hsw_ddi_translations_fdi;
+ 	}
+ 
+ 	*n_entries = 0;
+ 	return NULL;
+ }
+ 
++>>>>>>> 1210d3889077 (drm/i915: Use bdw_ddi_translations_fdi for Broadwell)
  /*
   * Starting with Haswell, DDI port buffers must be programmed with correct
   * values in advance. This function programs the correct values for
* Unmerged path drivers/gpu/drm/i915/intel_ddi.c
