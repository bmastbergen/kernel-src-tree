acpi/nfit: Issue Start ARS to retrieve existing records

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Toshi Kani <toshi.kani@hpe.com>
commit 807900395efebf9276178eb6157959f2e81fe013
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/80790039.failed

ACPI 6.2 defines in section 9.20.7.2 that the OSPM may call a Start
ARS with Flags Bit [1] set upon receiving the 0x81 notification.

  Upon receiving the notification, the OSPM may decide to issue
  a Start ARS with Flags Bit [1] set to prepare for the retrieval
  of existing records and issue the Query ARS Status function to
  retrieve the records.

Add support to call a Start ARS from acpi_nfit_uc_error_notify()
with ND_ARS_RETURN_PREV_DATA set when HW_ERROR_SCRUB_ON is not set.

Link: http://www.uefi.org/sites/default/files/resources/ACPI_6_2.pdf
	Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
	Cc: Vishal Verma <vishal.l.verma@intel.com>
	Cc: Linda Knippers <linda.knippers@hpe.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 807900395efebf9276178eb6157959f2e81fe013)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/nfit/core.c
diff --cc drivers/acpi/nfit/core.c
index 883e3b892fa5,1f6bc5065b0d..000000000000
--- a/drivers/acpi/nfit/core.c
+++ b/drivers/acpi/nfit/core.c
@@@ -2700,7 -2705,9 +2703,13 @@@ static int acpi_nfit_register_regions(s
  				return rc;
  		}
  
++<<<<<<< HEAD
 +	queue_work(nfit_wq, &acpi_desc->work);
++=======
+ 	acpi_desc->ars_start_flags = 0;
+ 	if (!acpi_desc->cancel)
+ 		queue_work(nfit_wq, &acpi_desc->work);
++>>>>>>> 807900395efe (acpi/nfit: Issue Start ARS to retrieve existing records)
  	return 0;
  }
  
* Unmerged path drivers/acpi/nfit/core.c
diff --git a/drivers/acpi/nfit/mce.c b/drivers/acpi/nfit/mce.c
index fd86bec98dea..feeb95d574fa 100644
--- a/drivers/acpi/nfit/mce.c
+++ b/drivers/acpi/nfit/mce.c
@@ -79,7 +79,7 @@ static int nfit_handle_mce(struct notifier_block *nb, unsigned long val,
 			 * already in progress, just let that be the last
 			 * authoritative one
 			 */
-			acpi_nfit_ars_rescan(acpi_desc);
+			acpi_nfit_ars_rescan(acpi_desc, 0);
 		}
 		break;
 	}
diff --git a/drivers/acpi/nfit/nfit.h b/drivers/acpi/nfit/nfit.h
index f03ccb697469..23623342b86d 100644
--- a/drivers/acpi/nfit/nfit.h
+++ b/drivers/acpi/nfit/nfit.h
@@ -156,6 +156,7 @@ struct acpi_nfit_desc {
 	struct list_head idts;
 	struct nvdimm_bus *nvdimm_bus;
 	struct device *dev;
+	u8 ars_start_flags;
 	struct nd_cmd_ars_status *ars_status;
 	size_t ars_status_size;
 	struct work_struct work;
@@ -208,7 +209,7 @@ struct nfit_blk {
 
 extern struct list_head acpi_descs;
 extern struct mutex acpi_desc_lock;
-int acpi_nfit_ars_rescan(struct acpi_nfit_desc *acpi_desc);
+int acpi_nfit_ars_rescan(struct acpi_nfit_desc *acpi_desc, u8 flags);
 
 #ifdef CONFIG_X86_MCE
 void nfit_mce_register(void);
diff --git a/include/uapi/linux/ndctl.h b/include/uapi/linux/ndctl.h
index 78267e174803..8489f501b426 100644
--- a/include/uapi/linux/ndctl.h
+++ b/include/uapi/linux/ndctl.h
@@ -203,6 +203,7 @@ enum {
 enum {
 	ND_ARS_VOLATILE = 1,
 	ND_ARS_PERSISTENT = 2,
+	ND_ARS_RETURN_PREV_DATA = 1 << 1,
 	ND_CONFIG_LOCKED = 1,
 };
 
