sched/headers: Prepare for new header dependencies before moving code to <linux/sched/cpufreq.h>

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ingo Molnar <mingo@kernel.org>
commit 55687da166bf51129ed6b110d7711f4c7560abe2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/55687da1.failed

We are going to split <linux/sched/cpufreq.h> out of <linux/sched.h>, which
will have to be picked up from other headers and a couple of .c files.

Create a trivial placeholder <linux/sched/cpufreq.h> file that just
maps to <linux/sched.h> to make this patch obviously correct and
bisectable.

Include the new header in the files that are going to need it.

	Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 55687da166bf51129ed6b110d7711f4c7560abe2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cpufreq_ondemand.c
#	kernel/sched/sched.h
diff --cc drivers/cpufreq/cpufreq_ondemand.c
index ad3f38fd3eb9,3937acf7e026..000000000000
--- a/drivers/cpufreq/cpufreq_ondemand.c
+++ b/drivers/cpufreq/cpufreq_ondemand.c
@@@ -16,7 -16,9 +16,13 @@@
  #include <linux/percpu-defs.h>
  #include <linux/slab.h>
  #include <linux/tick.h>
++<<<<<<< HEAD
 +#include "cpufreq_governor.h"
++=======
+ #include <linux/sched/cpufreq.h>
+ 
+ #include "cpufreq_ondemand.h"
++>>>>>>> 55687da166bf (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/cpufreq.h>)
  
  /* On-demand governor macros */
  #define DEF_FREQUENCY_UP_THRESHOLD		(80)
diff --cc kernel/sched/sched.h
index 3e0ea93b25ef,7dfeb14fa43c..000000000000
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@@ -1,8 -1,17 +1,17 @@@
  
  #include <linux/sched.h>
  #include <linux/sched/sysctl.h>
 -#include <linux/sched/topology.h>
  #include <linux/sched/rt.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/clock.h>
+ #include <linux/sched/wake_q.h>
+ #include <linux/sched/signal.h>
+ #include <linux/sched/mm.h>
+ #include <linux/sched/cpufreq.h>
+ #include <linux/u64_stats_sync.h>
++>>>>>>> 55687da166bf (sched/headers: Prepare for new header dependencies before moving code to <linux/sched/cpufreq.h>)
  #include <linux/sched/deadline.h>
 -#include <linux/kernel_stat.h>
 -#include <linux/binfmts.h>
  #include <linux/mutex.h>
  #include <linux/spinlock.h>
  #include <linux/stop_machine.h>
diff --git a/drivers/cpufreq/cpufreq_governor.h b/drivers/cpufreq/cpufreq_governor.h
index cc401d147e72..78183fee8e61 100644
--- a/drivers/cpufreq/cpufreq_governor.h
+++ b/drivers/cpufreq/cpufreq_governor.h
@@ -18,6 +18,7 @@
 #define _CPUFREQ_GOVERNOR_H
 
 #include <linux/cpufreq.h>
+#include <linux/sched/cpufreq.h>
 #include <linux/kernel_stat.h>
 #include <linux/module.h>
 #include <linux/mutex.h>
* Unmerged path drivers/cpufreq/cpufreq_ondemand.c
diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index b681c02dda0f..2109fe6160c1 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -17,7 +17,7 @@
 #include <linux/hrtimer.h>
 #include <linux/tick.h>
 #include <linux/slab.h>
-#include <linux/sched.h>
+#include <linux/sched/cpufreq.h>
 #include <linux/list.h>
 #include <linux/cpu.h>
 #include <linux/cpufreq.h>
diff --git a/include/linux/sched/cpufreq.h b/include/linux/sched/cpufreq.h
new file mode 100644
index 000000000000..07ed9664fa20
--- /dev/null
+++ b/include/linux/sched/cpufreq.h
@@ -0,0 +1,6 @@
+#ifndef _LINUX_SCHED_CPUFREQ_H
+#define _LINUX_SCHED_CPUFREQ_H
+
+#include <linux/sched.h>
+
+#endif /* _LINUX_SCHED_CPUFREQ_H */
* Unmerged path kernel/sched/sched.h
