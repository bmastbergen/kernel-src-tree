iommu/amd: Detect pre enabled translation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Detect pre enabled translation (Jerry Snitselaar) [1062729]
Rebuild_FUZZ: 92.11%
commit-author Baoquan He <bhe@redhat.com>
commit 4c232a708be1047fe26b7c75ceaa5d73deb6a798
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4c232a70.failed

Add functions to check whether translation is already enabled in IOMMU.

	Signed-off-by: Baoquan He <bhe@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 4c232a708be1047fe26b7c75ceaa5d73deb6a798)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu_types.h
diff --cc drivers/iommu/amd_iommu_types.h
index c9e00df52a4f,0c98b2cf04cc..000000000000
--- a/drivers/iommu/amd_iommu_types.h
+++ b/drivers/iommu/amd_iommu_types.h
@@@ -398,7 -432,11 +398,9 @@@ struct amd_iommu_fault 
  
  
  struct iommu_domain;
 -struct irq_domain;
 -struct amd_irte_ops;
  
+ #define AMD_IOMMU_FLAG_TRANS_PRE_ENABLED      (1 << 0)
+ 
  /*
   * This structure contains generic data for  IOMMU protection domains
   * independent of their use.
@@@ -511,8 -560,26 +513,24 @@@ struct amd_iommu 
  
  	/* The l2 indirect registers */
  	u32 stored_l2[0x83];
++<<<<<<< HEAD
++=======
+ 
+ 	/* The maximum PC banks and counters/bank (PCSup=1) */
+ 	u8 max_banks;
+ 	u8 max_counters;
+ #ifdef CONFIG_IRQ_REMAP
+ 	struct irq_domain *ir_domain;
+ 	struct irq_domain *msi_domain;
+ 
+ 	struct amd_irte_ops *irte_ops;
+ #endif
+ 
+ 	u32 flags;
+ 	volatile u64 __aligned(8) cmd_sem;
++>>>>>>> 4c232a708be1 (iommu/amd: Detect pre enabled translation)
  };
  
 -static inline struct amd_iommu *dev_to_amd_iommu(struct device *dev)
 -{
 -	return container_of(dev, struct amd_iommu, iommu.dev);
 -}
 -
  #define ACPIHID_UID_LEN 256
  #define ACPIHID_HID_LEN 9
  
diff --git a/drivers/iommu/amd_iommu_init.c b/drivers/iommu/amd_iommu_init.c
index 9e54e219b8f7..91e4cba85b28 100644
--- a/drivers/iommu/amd_iommu_init.c
+++ b/drivers/iommu/amd_iommu_init.c
@@ -244,6 +244,25 @@ static int amd_iommu_enable_interrupts(void);
 static int __init iommu_go_to_state(enum iommu_init_state state);
 static void init_device_table_dma(void);
 
+bool translation_pre_enabled(struct amd_iommu *iommu)
+{
+	return (iommu->flags & AMD_IOMMU_FLAG_TRANS_PRE_ENABLED);
+}
+
+static void clear_translation_pre_enabled(struct amd_iommu *iommu)
+{
+	iommu->flags &= ~AMD_IOMMU_FLAG_TRANS_PRE_ENABLED;
+}
+
+static void init_translation_status(struct amd_iommu *iommu)
+{
+	u32 ctrl;
+
+	ctrl = readl(iommu->mmio_base + MMIO_CONTROL_OFFSET);
+	if (ctrl & (1<<CONTROL_IOMMU_EN))
+		iommu->flags |= AMD_IOMMU_FLAG_TRANS_PRE_ENABLED;
+}
+
 static inline void update_last_devid(u16 devid)
 {
 	if (devid > amd_iommu_last_bdf)
@@ -1253,6 +1272,11 @@ static int __init init_iommu_one(struct amd_iommu *iommu, struct ivhd_header *h)
 
 	iommu->int_enabled = false;
 
+	init_translation_status(iommu);
+
+	if (translation_pre_enabled(iommu))
+		pr_warn("Translation is already enabled - trying to copy translation structures\n");
+
 	ret = init_iommu_from_acpi(iommu, h);
 	if (ret)
 		return ret;
diff --git a/drivers/iommu/amd_iommu_proto.h b/drivers/iommu/amd_iommu_proto.h
index a3b5a778d824..2d16799aa690 100644
--- a/drivers/iommu/amd_iommu_proto.h
+++ b/drivers/iommu/amd_iommu_proto.h
@@ -76,4 +76,5 @@ static inline bool iommu_feature(struct amd_iommu *iommu, u64 f)
 	return !!(iommu->features & f);
 }
 
+extern bool translation_pre_enabled(struct amd_iommu *iommu);
 #endif /* _ASM_X86_AMD_IOMMU_PROTO_H  */
* Unmerged path drivers/iommu/amd_iommu_types.h
