Safer ABI for O_TMPFILE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit bb458c644a59dbba3a1fe59b27106c5e68e1c4bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bb458c64.failed

[suggested by Rasmus Villemoes] make O_DIRECTORY | O_RDWR part of O_TMPFILE;
that will fail on old kernels in a lot more cases than what I came up with.
And make sure O_CREAT doesn't get there...

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit bb458c644a59dbba3a1fe59b27106c5e68e1c4bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/alpha/include/uapi/asm/fcntl.h
#	arch/parisc/include/uapi/asm/fcntl.h
#	arch/sparc/include/uapi/asm/fcntl.h
#	fs/namei.c
#	fs/open.c
#	include/uapi/asm-generic/fcntl.h
diff --cc arch/alpha/include/uapi/asm/fcntl.h
index 6d9e805f18a7,09f49a6b87d1..000000000000
--- a/arch/alpha/include/uapi/asm/fcntl.h
+++ b/arch/alpha/include/uapi/asm/fcntl.h
@@@ -32,6 -32,7 +32,10 @@@
  #define O_SYNC		(__O_SYNC|O_DSYNC)
  
  #define O_PATH		040000000
++<<<<<<< HEAD
++=======
+ #define __O_TMPFILE	0100000000
++>>>>>>> bb458c644a59 (Safer ABI for O_TMPFILE)
  
  #define F_GETLK		7
  #define F_SETLK		8
diff --cc arch/parisc/include/uapi/asm/fcntl.h
index 0304b92ccfea,34a46cbc76ed..000000000000
--- a/arch/parisc/include/uapi/asm/fcntl.h
+++ b/arch/parisc/include/uapi/asm/fcntl.h
@@@ -20,6 -20,7 +20,10 @@@
  #define O_INVISIBLE	004000000 /* invisible I/O, for DMAPI/XDSM */
  
  #define O_PATH		020000000
++<<<<<<< HEAD
++=======
+ #define __O_TMPFILE	040000000
++>>>>>>> bb458c644a59 (Safer ABI for O_TMPFILE)
  
  #define F_GETLK64	8
  #define F_SETLK64	9
diff --cc arch/sparc/include/uapi/asm/fcntl.h
index d0b83f66f356,7e8ace5bf760..000000000000
--- a/arch/sparc/include/uapi/asm/fcntl.h
+++ b/arch/sparc/include/uapi/asm/fcntl.h
@@@ -35,6 -35,7 +35,10 @@@
  #define O_SYNC		(__O_SYNC|O_DSYNC)
  
  #define O_PATH		0x1000000
++<<<<<<< HEAD
++=======
+ #define __O_TMPFILE	0x2000000
++>>>>>>> bb458c644a59 (Safer ABI for O_TMPFILE)
  
  #define F_GETOWN	5	/*  for sockets. */
  #define F_SETOWN	6	/*  for sockets. */
diff --cc fs/namei.c
index 01f0ff2e2d1f,8b61d103a8a7..000000000000
--- a/fs/namei.c
+++ b/fs/namei.c
@@@ -3255,6 -2977,11 +3255,14 @@@ static struct file *path_openat(int dfd
  
  	file->f_flags = op->open_flag;
  
++<<<<<<< HEAD
++=======
+ 	if (unlikely(file->f_flags & __O_TMPFILE)) {
+ 		error = do_tmpfile(dfd, pathname, nd, flags, op, file, &opened);
+ 		goto out;
+ 	}
+ 
++>>>>>>> bb458c644a59 (Safer ABI for O_TMPFILE)
  	error = path_init(dfd, pathname->name, flags | LOOKUP_PARENT, nd, &base);
  	if (unlikely(error))
  		goto out;
diff --cc fs/open.c
index d92e96ba4ff5,9156cb050d08..000000000000
--- a/fs/open.c
+++ b/fs/open.c
@@@ -930,11 -840,15 +930,23 @@@ static inline int build_open_flags(int 
  	if (flags & __O_SYNC)
  		flags |= O_DSYNC;
  
++<<<<<<< HEAD
 +	/*
 +	 * If we have O_PATH in the open flag. Then we
 +	 * cannot have anything other than the below set of flags
 +	 */
 +	if (flags & O_PATH) {
++=======
+ 	if (flags & __O_TMPFILE) {
+ 		if ((flags & O_TMPFILE_MASK) != O_TMPFILE)
+ 			return -EINVAL;
+ 		acc_mode = MAY_OPEN | ACC_MODE(flags);
+ 	} else if (flags & O_PATH) {
+ 		/*
+ 		 * If we have O_PATH in the open flag. Then we
+ 		 * cannot have anything other than the below set of flags
+ 		 */
++>>>>>>> bb458c644a59 (Safer ABI for O_TMPFILE)
  		flags &= O_DIRECTORY | O_NOFOLLOW | O_PATH;
  		acc_mode = 0;
  	} else {
diff --cc include/uapi/asm-generic/fcntl.h
index 729af84a016e,05ac354e124d..000000000000
--- a/include/uapi/asm-generic/fcntl.h
+++ b/include/uapi/asm-generic/fcntl.h
@@@ -84,6 -84,14 +84,17 @@@
  #define O_PATH		010000000
  #endif
  
++<<<<<<< HEAD
++=======
+ #ifndef __O_TMPFILE
+ #define __O_TMPFILE	020000000
+ #endif
+ 
+ /* a horrid kludge trying to make sure that this will fail on old kernels */
+ #define O_TMPFILE (__O_TMPFILE | O_DIRECTORY | O_RDWR)
+ #define O_TMPFILE_MASK (__O_TMPFILE | O_DIRECTORY | O_CREAT | O_ACCMODE)      
+ 
++>>>>>>> bb458c644a59 (Safer ABI for O_TMPFILE)
  #ifndef O_NDELAY
  #define O_NDELAY	O_NONBLOCK
  #endif
* Unmerged path arch/alpha/include/uapi/asm/fcntl.h
* Unmerged path arch/parisc/include/uapi/asm/fcntl.h
* Unmerged path arch/sparc/include/uapi/asm/fcntl.h
* Unmerged path fs/namei.c
* Unmerged path fs/open.c
* Unmerged path include/uapi/asm-generic/fcntl.h
