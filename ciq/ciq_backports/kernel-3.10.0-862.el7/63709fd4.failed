uuid: Take const on input of uuid_is_null() and guid_is_null()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 63709fd4296221aa4ebd06230bce3eed70ddd927
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/63709fd4.failed

The null check functions do not and must not modify contents of the UUID
or GUID supplied.

Mark argument explicitly to reflect that.

	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 63709fd4296221aa4ebd06230bce3eed70ddd927)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/uuid.h
diff --cc include/linux/uuid.h
index c057ef20cfda,d1defe4ab167..000000000000
--- a/include/linux/uuid.h
+++ b/include/linux/uuid.h
@@@ -43,14 -35,37 +43,38 @@@ typedef struct 
   */
  #define	UUID_STRING_LEN		36
  
 -extern const guid_t guid_null;
 -extern const uuid_t uuid_null;
 -
 -static inline bool guid_equal(const guid_t *u1, const guid_t *u2)
 +static inline int uuid_le_cmp(const uuid_le u1, const uuid_le u2)
  {
 -	return memcmp(u1, u2, sizeof(guid_t)) == 0;
 +	return memcmp(&u1, &u2, sizeof(uuid_le));
  }
  
 -static inline void guid_copy(guid_t *dst, const guid_t *src)
 +static inline int uuid_be_cmp(const uuid_be u1, const uuid_be u2)
  {
++<<<<<<< HEAD
 +	return memcmp(&u1, &u2, sizeof(uuid_be));
++=======
+ 	memcpy(dst, src, sizeof(guid_t));
+ }
+ 
+ static inline bool guid_is_null(const guid_t *guid)
+ {
+ 	return guid_equal(guid, &guid_null);
+ }
+ 
+ static inline bool uuid_equal(const uuid_t *u1, const uuid_t *u2)
+ {
+ 	return memcmp(u1, u2, sizeof(uuid_t)) == 0;
+ }
+ 
+ static inline void uuid_copy(uuid_t *dst, const uuid_t *src)
+ {
+ 	memcpy(dst, src, sizeof(uuid_t));
+ }
+ 
+ static inline bool uuid_is_null(const uuid_t *uuid)
+ {
+ 	return uuid_equal(uuid, &uuid_null);
++>>>>>>> 63709fd42962 (uuid: Take const on input of uuid_is_null() and guid_is_null())
  }
  
  void generate_random_uuid(unsigned char uuid[16]);
* Unmerged path include/linux/uuid.h
