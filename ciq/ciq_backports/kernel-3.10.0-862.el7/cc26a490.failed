net/mlx4_en: Improve transmit CQ polling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx4_en: Improve transmit CQ polling (Don Dutile) [1499363 1456692]
Rebuild_FUZZ: 94.74%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit cc26a4908682698cafdb5bb917f19840aff1a149
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/cc26a490.failed

Several small performance improvements in TX CQ polling,
including:
- Compiler branch predictor hints.
- Minimize variables scope.
- More proper check of cq type.
- Use boolean instead of int for a binary indication.

Performance tests:
Tested on ConnectX3Pro, Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz

Packet-rate tests for both regular stack and XDP use cases:
No noticeable gain, no degradation.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Reviewed-by: Saeed Mahameed <saeedm@mellanox.com>
	Cc: kernel-team@fb.com
	Cc: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cc26a4908682698cafdb5bb917f19840aff1a149)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/en_tx.c
diff --cc drivers/net/ethernet/mellanox/mlx4/en_tx.c
index 712fae6c9b1c,2d5e0da1de2f..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_tx.c
@@@ -477,6 -492,9 +477,12 @@@ static bool mlx4_en_process_tx_cq(struc
  	ACCESS_ONCE(ring->last_nr_txbb) = last_nr_txbb;
  	ACCESS_ONCE(ring->cons) = ring_cons + txbbs_skipped;
  
++<<<<<<< HEAD
++=======
+ 	if (cq->type == TX_XDP)
+ 		return done < budget;
+ 
++>>>>>>> cc26a4908682 (net/mlx4_en: Improve transmit CQ polling)
  	netdev_tx_completed_queue(ring->tx_queue, packets, bytes);
  
  	/* Wakeup Tx queue if this stopped, and ring is not full.
* Unmerged path drivers/net/ethernet/mellanox/mlx4/en_tx.c
