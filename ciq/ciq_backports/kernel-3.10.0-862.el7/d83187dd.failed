IB/IPoIB: Convert IPoIB to memalloc_noio_* calls

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Leon Romanovsky <leonro@mellanox.com>
commit d83187dda9b930dc268ab05da265f3d5d7eca451
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d83187dd.failed

Commit 21caf2fc1931 ("mm: teach mm by current context info to not do I/O
during memory allocation") added the memalloc_noio_(save|restore) functions
to enable people to modify the MM behavior by disabling I/O during memory
allocation. This was further extended in Fixes: 934f3072c17c ("mm: clear
__GFP_FS when PF_MEMALLOC_NOIO is set"). memalloc_noio_* functions prevent
allocation paths recursing back into the filesystem without explicitly
changing the flags for every allocation site.

However the IPoIB hasn't been keeping up with the changes and missed
completely these memalloc_noio_* calls. This led to update of
allocation site with special QP creation flag, see commit 09b93088d750
("IB: Add a QP creation flag to use GFP_NOIO allocations"), while this
flag is supported by small number of drivers in IB stack.

Let's change it by updating to memalloc_noio_* calls and allow
for every driver underneath enjoy NOIO allocations.

	Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit d83187dda9b930dc268ab05da265f3d5d7eca451)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/ipoib/ipoib_cm.c
diff --cc drivers/infiniband/ulp/ipoib/ipoib_cm.c
index c03f64f15f02,f87d104837dc..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_cm.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_cm.c
@@@ -38,6 -38,8 +38,11 @@@
  #include <linux/slab.h>
  #include <linux/vmalloc.h>
  #include <linux/moduleparam.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/signal.h>
+ #include <linux/sched/mm.h>
++>>>>>>> d83187dda9b9 (IB/IPoIB: Convert IPoIB to memalloc_noio_* calls)
  
  #include "ipoib.h"
  
@@@ -1127,13 -1124,14 +1127,14 @@@ static int ipoib_cm_modify_tx_init(stru
  }
  
  static int ipoib_cm_tx_init(struct ipoib_cm_tx *p, u32 qpn,
 -			    struct sa_path_rec *pathrec)
 +			    struct ib_sa_path_rec *pathrec)
  {
  	struct ipoib_dev_priv *priv = ipoib_priv(p->dev);
+ 	unsigned int noio_flag;
  	int ret;
  
- 	p->tx_ring = __vmalloc(ipoib_sendq_size * sizeof *p->tx_ring,
- 			       GFP_NOIO, PAGE_KERNEL);
+ 	noio_flag = memalloc_noio_save();
+ 	p->tx_ring = vzalloc(ipoib_sendq_size * sizeof(*p->tx_ring));
  	if (!p->tx_ring) {
  		ret = -ENOMEM;
  		goto err_tx;
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_cm.c
