net-tc: make MAX_RECLASSIFY_LOOP local

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] tc: make MAX_RECLASSIFY_LOOP local (Ivan Vecera) [1445420]
Rebuild_FUZZ: 94.44%
commit-author Willem de Bruijn <willemb@google.com>
commit d6264071ce7d100a2b7c1f295167796ab5178caf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d6264071.failed

This field is no longer kept in tc_verd. Remove it from the global
definition of that struct.

	Signed-off-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d6264071ce7d100a2b7c1f295167796ab5178caf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/pkt_cls.h
diff --cc include/uapi/linux/pkt_cls.h
index 0d022fe21c56,bba23dbb3ab6..000000000000
--- a/include/uapi/linux/pkt_cls.h
+++ b/include/uapi/linux/pkt_cls.h
@@@ -16,13 -17,6 +16,16 @@@
  
  /* verdict bit breakdown 
   *
++<<<<<<< HEAD
 +bit 0: when set -> this packet has been munged already
 +
 +bit 1: when set -> It is ok to munge this packet
 +
 +bit 2,3,4,5: Reclassify counter - sort of reverse TTL - if exceeded
 +assume loop
 +
++=======
++>>>>>>> d6264071ce7d (net-tc: make MAX_RECLASSIFY_LOOP local)
  bit 6,7: Where this packet was last seen 
  0: Above the transmit example at the socket level
  1: on the Ingress
@@@ -78,8 -45,7 +81,12 @@@ bits 9,10,11: redirect counter -  redir
  #define G_TC_AT(x)       _TC_GETVALUE(x,S_TC_AT,M_TC_AT)
  #define V_TC_AT(x)       _TC_MAKEVALUE(x,S_TC_AT)
  #define SET_TC_AT(v,n)   ((V_TC_AT(n)) | (v & ~M_TC_AT))
++<<<<<<< HEAD
 +
 +#define TC_COOKIE_MAX_SIZE 16
++=======
+ #endif
++>>>>>>> d6264071ce7d (net-tc: make MAX_RECLASSIFY_LOOP local)
  
  /* Action attributes */
  enum {
* Unmerged path include/uapi/linux/pkt_cls.h
diff --git a/net/sched/sch_api.c b/net/sched/sch_api.c
index adc5ef0f754a..1f240af63f50 100644
--- a/net/sched/sch_api.c
+++ b/net/sched/sch_api.c
@@ -1841,6 +1841,7 @@ int tc_classify(struct sk_buff *skb, const struct tcf_proto *tp,
 {
 	__be16 protocol = tc_skb_protocol(skb);
 #ifdef CONFIG_NET_CLS_ACT
+	const int max_reclassify_loop = 4;
 	const struct tcf_proto *old_tp = tp;
 	int limit = 0;
 
@@ -1865,7 +1866,7 @@ reclassify:
 	return TC_ACT_UNSPEC; /* signal: continue lookup */
 #ifdef CONFIG_NET_CLS_ACT
 reset:
-	if (unlikely(limit++ >= MAX_REC_LOOP)) {
+	if (unlikely(limit++ >= max_reclassify_loop)) {
 		net_notice_ratelimited("%s: reclassify loop, rule prio %u, protocol %02x\n",
 				       tp->q->ops->id, tp->prio & 0xffff,
 				       ntohs(tp->protocol));
