target: Fix spelling + remove set-but-not-used variables

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [target] Fix spelling + remove set-but-not-used variables (Maurizio Lombardi) [1366062]
Rebuild_FUZZ: 92.31%
commit-author Bart Van Assche <bart.vanassche@sandisk.com>
commit ac75d8be9bed40b54be4e98fe6a521322d6cd891
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ac75d8be.failed

	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Reviewed-by: Sagi Grimberg <sagig@mellanox.com>
	Reviewed-by: Andy Grover <agrover@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit ac75d8be9bed40b54be4e98fe6a521322d6cd891)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_pr.c
diff --cc drivers/target/target_core_pr.c
index a255afc452a9,b1795735eafc..000000000000
--- a/drivers/target/target_core_pr.c
+++ b/drivers/target/target_core_pr.c
@@@ -1405,41 -1456,35 +1405,53 @@@ static void core_scsi3_nodeacl_undepend
  
  static int core_scsi3_lunacl_depend_item(struct se_dev_entry *se_deve)
  {
++<<<<<<< HEAD
 +	struct se_lun_acl *lun_acl = se_deve->se_lun_acl;
 +	struct se_node_acl *nacl;
 +	struct se_portal_group *tpg;
++=======
+ 	struct se_lun_acl *lun_acl;
+ 
++>>>>>>> ac75d8be9bed (target: Fix spelling + remove set-but-not-used variables)
  	/*
  	 * For nacl->dynamic_node_acl=1
  	 */
  	if (!lun_acl)
  		return 0;
  
++<<<<<<< HEAD
 +	nacl = lun_acl->se_lun_nacl;
 +	tpg = nacl->se_tpg;
 +
 +	return configfs_depend_item(tpg->se_tpg_tfo->tf_subsys,
 +			&lun_acl->se_lun_group.cg_item);
++=======
+ 	return target_depend_item(&lun_acl->se_lun_group.cg_item);
++>>>>>>> ac75d8be9bed (target: Fix spelling + remove set-but-not-used variables)
  }
  
  static void core_scsi3_lunacl_undepend_item(struct se_dev_entry *se_deve)
  {
++<<<<<<< HEAD
 +	struct se_lun_acl *lun_acl = se_deve->se_lun_acl;
 +	struct se_node_acl *nacl;
 +	struct se_portal_group *tpg;
++=======
+ 	struct se_lun_acl *lun_acl;
+ 
++>>>>>>> ac75d8be9bed (target: Fix spelling + remove set-but-not-used variables)
  	/*
  	 * For nacl->dynamic_node_acl=1
  	 */
 -	lun_acl = rcu_dereference_check(se_deve->se_lun_acl,
 -				atomic_read(&se_deve->pr_kref.refcount) != 0);
  	if (!lun_acl) {
 -		kref_put(&se_deve->pr_kref, target_pr_kref_release);
 +		atomic_dec_mb(&se_deve->pr_ref_count);
  		return;
  	}
- 	nacl = lun_acl->se_lun_nacl;
- 	tpg = nacl->se_tpg;
  
 -	target_undepend_item(&lun_acl->se_lun_group.cg_item);
 -	kref_put(&se_deve->pr_kref, target_pr_kref_release);
 +	configfs_undepend_item(tpg->se_tpg_tfo->tf_subsys,
 +			&lun_acl->se_lun_group.cg_item);
 +
 +	atomic_dec_mb(&se_deve->pr_ref_count);
  }
  
  static sense_reason_t
* Unmerged path drivers/target/target_core_pr.c
diff --git a/drivers/target/target_core_tmr.c b/drivers/target/target_core_tmr.c
index b2e169fba3c6..eb1af706fc94 100644
--- a/drivers/target/target_core_tmr.c
+++ b/drivers/target/target_core_tmr.c
@@ -198,7 +198,7 @@ static void core_tmr_drain_tmr_list(
 		/*
 		 * If this function was called with a valid pr_res_key
 		 * parameter (eg: for PROUT PREEMPT_AND_ABORT service action
-		 * skip non regisration key matching TMRs.
+		 * skip non registration key matching TMRs.
 		 */
 		if (target_check_cdb_and_preempt(preempt_and_abort_list, cmd))
 			continue;
diff --git a/drivers/target/target_core_transport.c b/drivers/target/target_core_transport.c
index c170951cb91c..0daf1aea2f72 100644
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@ -1303,7 +1303,7 @@ EXPORT_SYMBOL(target_setup_cmd_from_cdb);
 
 /*
  * Used by fabric module frontends to queue tasks directly.
- * Many only be used from process context only
+ * May only be used from process context.
  */
 int transport_handle_cdb_direct(
 	struct se_cmd *cmd)
