mlxsw: spectrum: Change signature of FID leave function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit ce95e1545681dd73fa73ac12a06135c4fcdb47cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ce95e154.failed

When a vPort is destroyed, it leaves the FID it's currently mapped to
(if any) and drops the reference. The FID's leave function expects to
get the vPort as its argument, but this will have to change when the
vPort model is retired.

Change the function signature to expect a Port-VLAN struct instead and
patch the call sites accordingly.

The code introduced in this patch will be removed later in the patchset,
but this intermediary step is required in order to ease the code review.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ce95e1545681dd73fa73ac12a06135c4fcdb47cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index 4a2dd98ae919,acc3a1a76d1b..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -1540,16 -1574,11 +1540,16 @@@ static int mlxsw_sp_port_kill_vid(struc
  	 */
  	f = mlxsw_sp_vport_fid_get(mlxsw_sp_vport);
  	if (f && !WARN_ON(!f->leave))
- 		f->leave(mlxsw_sp_vport);
+ 		f->leave(mlxsw_sp_port_vlan);
  
 -	mlxsw_sp_port_vport_destroy(mlxsw_sp_vport);
 +	/* When removing the last VLAN interface on a bridged port we need to
 +	 * transition all active 802.1Q bridge VLANs to use VID to FID
 +	 * mappings and set port's mode to VLAN mode.
 +	 */
 +	if (list_is_singular(&mlxsw_sp_port->vports_list))
 +		mlxsw_sp_port_vlan_mode_trans(mlxsw_sp_port);
  
 -	mlxsw_sp_port_vlan_destroy(mlxsw_sp_port_vlan);
 +	mlxsw_sp_port_vport_destroy(mlxsw_sp_vport);
  
  	return 0;
  }
@@@ -4619,12 -4772,26 +4624,33 @@@ err_vport_flood_set
  	return err;
  }
  
- static void mlxsw_sp_vport_vfid_leave(struct mlxsw_sp_port *mlxsw_sp_vport)
+ static void
+ mlxsw_sp_port_vlan_vfid_leave(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan)
  {
++<<<<<<< HEAD
 +	struct mlxsw_sp_fid *f = mlxsw_sp_vport_fid_get(mlxsw_sp_vport);
 +
 +	netdev_dbg(mlxsw_sp_vport->dev, "Left FID=%d\n", f->fid);
 +
++=======
+ 	struct mlxsw_sp_port *mlxsw_sp_port = mlxsw_sp_port_vlan->mlxsw_sp_port;
+ 	struct mlxsw_sp_port *mlxsw_sp_vport;
+ 	u16 vid = mlxsw_sp_port_vlan->vid;
+ 	struct mlxsw_sp_fid *f;
+ 
+ 	mlxsw_sp_vport = mlxsw_sp_port_vport_find(mlxsw_sp_port, vid);
+ 	f = mlxsw_sp_vport_fid_get(mlxsw_sp_vport);
+ 
+ 	netdev_dbg(mlxsw_sp_vport->dev, "Left FID=%d\n", f->fid);
+ 
+ 	mlxsw_sp_vport_fid_set(mlxsw_sp_vport, NULL);
+ 	f->ref_count--;
+ 
+ 	if (mlxsw_sp_port->nr_port_vid_map == 1)
+ 		mlxsw_sp_port_vlan_mode_trans(mlxsw_sp_port);
+ 	mlxsw_sp_port->nr_port_vid_map--;
+ 
++>>>>>>> ce95e1545681 (mlxsw: spectrum: Change signature of FID leave function)
  	mlxsw_sp_vport_fid_map(mlxsw_sp_vport, f->fid, false);
  
  	mlxsw_sp_vport_flood_set(mlxsw_sp_vport, f->fid, false);
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index f8e7036e3f4a,6a1de24168f3..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -2722,11 -2945,12 +2722,12 @@@ static int mlxsw_sp_vport_rif_sp_op(str
  	return mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(ritr), ritr_pl);
  }
  
- static void mlxsw_sp_vport_rif_sp_leave(struct mlxsw_sp_port *mlxsw_sp_vport);
+ static void
+ mlxsw_sp_port_vlan_rif_sp_leave(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan);
  
 -static u16 mlxsw_sp_rif_sp_to_fid(u16 rif_index)
 +static u16 mlxsw_sp_rif_sp_to_fid(u16 rif)
  {
 -	return MLXSW_SP_RFID_BASE + rif_index;
 +	return MLXSW_SP_RFID_BASE + rif;
  }
  
  static struct mlxsw_sp_fid *
@@@ -2857,32 -3111,76 +2858,55 @@@ static int mlxsw_sp_vport_rif_sp_join(s
  				      struct net_device *l3_dev)
  {
  	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_vport->mlxsw_sp;
 -	u16 vid = mlxsw_sp_vport_vid_get(mlxsw_sp_vport);
 -	struct mlxsw_sp_port *mlxsw_sp_port;
 -	struct mlxsw_sp_rif *rif;
 -	int err;
 +	struct mlxsw_sp_rif *r;
  
 -	rif = mlxsw_sp_rif_find_by_dev(mlxsw_sp, l3_dev);
 -	if (!rif) {
 -		rif = mlxsw_sp_vport_rif_sp_create(mlxsw_sp_vport, l3_dev);
 -		if (IS_ERR(rif))
 -			return PTR_ERR(rif);
 +	r = mlxsw_sp_rif_find_by_dev(mlxsw_sp, l3_dev);
 +	if (!r) {
 +		r = mlxsw_sp_vport_rif_sp_create(mlxsw_sp_vport, l3_dev);
 +		if (IS_ERR(r))
 +			return PTR_ERR(r);
  	}
  
 -	err = mlxsw_sp_port_vid_learning_set(mlxsw_sp_vport, vid, false);
 -	if (err)
 -		goto err_port_vid_learning_set;
 +	mlxsw_sp_vport_fid_set(mlxsw_sp_vport, r->f);
 +	r->f->ref_count++;
  
 -	err = mlxsw_sp_port_vid_stp_set(mlxsw_sp_vport, vid,
 -					BR_STATE_FORWARDING);
 -	if (err)
 -		goto err_port_vid_stp_set;
 -
 -	mlxsw_sp_port = mlxsw_sp_vport_port(mlxsw_sp_vport);
 -	if (mlxsw_sp_port->nr_port_vid_map++ == 0) {
 -		err = mlxsw_sp_port_vp_mode_trans(mlxsw_sp_port);
 -		if (err)
 -			goto err_port_vp_mode_trans;
 -	}
 -
 -	mlxsw_sp_vport_fid_set(mlxsw_sp_vport, rif->f);
 -	rif->f->ref_count++;
 -
 -	netdev_dbg(mlxsw_sp_vport->dev, "Joined FID=%d\n", rif->f->fid);
 +	netdev_dbg(mlxsw_sp_vport->dev, "Joined FID=%d\n", r->f->fid);
  
  	return 0;
 -
 -err_port_vp_mode_trans:
 -	mlxsw_sp_port->nr_port_vid_map--;
 -	mlxsw_sp_port_vid_stp_set(mlxsw_sp_vport, vid, BR_STATE_BLOCKING);
 -err_port_vid_stp_set:
 -	mlxsw_sp_port_vid_learning_set(mlxsw_sp_vport, vid, true);
 -err_port_vid_learning_set:
 -	if (rif->f->ref_count == 0)
 -		mlxsw_sp_vport_rif_sp_destroy(mlxsw_sp_vport, rif);
 -	return err;
  }
  
- static void mlxsw_sp_vport_rif_sp_leave(struct mlxsw_sp_port *mlxsw_sp_vport)
+ static void
+ mlxsw_sp_port_vlan_rif_sp_leave(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan)
  {
++<<<<<<< HEAD
 +	struct mlxsw_sp_fid *f = mlxsw_sp_vport_fid_get(mlxsw_sp_vport);
++=======
+ 	struct mlxsw_sp_port *mlxsw_sp_port = mlxsw_sp_port_vlan->mlxsw_sp_port;
+ 	struct mlxsw_sp_port *mlxsw_sp_vport;
+ 	u16 vid = mlxsw_sp_port_vlan->vid;
+ 	struct mlxsw_sp_fid *f;
+ 
+ 	mlxsw_sp_vport = mlxsw_sp_port_vport_find(mlxsw_sp_port, vid);
+ 	f = mlxsw_sp_vport_fid_get(mlxsw_sp_vport);
++>>>>>>> ce95e1545681 (mlxsw: spectrum: Change signature of FID leave function)
  
  	netdev_dbg(mlxsw_sp_vport->dev, "Left FID=%d\n", f->fid);
  
 -	f->ref_count--;
  	mlxsw_sp_vport_fid_set(mlxsw_sp_vport, NULL);
++<<<<<<< HEAD
 +	if (--f->ref_count == 0)
 +		mlxsw_sp_vport_rif_sp_destroy(mlxsw_sp_vport, f->r);
++=======
+ 
+ 	if (mlxsw_sp_port->nr_port_vid_map == 1)
+ 		mlxsw_sp_port_vlan_mode_trans(mlxsw_sp_port);
+ 	mlxsw_sp_port->nr_port_vid_map--;
+ 	mlxsw_sp_port_vid_stp_set(mlxsw_sp_vport, vid, BR_STATE_BLOCKING);
+ 	mlxsw_sp_port_vid_learning_set(mlxsw_sp_vport, vid, true);
+ 
+ 	if (f->ref_count == 0)
+ 		mlxsw_sp_vport_rif_sp_destroy(mlxsw_sp_vport, f->rif);
++>>>>>>> ce95e1545681 (mlxsw: spectrum: Change signature of FID leave function)
  }
  
  static int mlxsw_sp_inetaddr_vport_event(struct net_device *l3_dev,
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
index 280114e1ebf6..8ccdee5b99aa 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.h
@@ -69,6 +69,7 @@
 #define MLXSW_SP_KVD_LINEAR_SIZE 65536 /* entries */
 #define MLXSW_SP_KVD_GRANULARITY 128
 
+struct mlxsw_sp_port_vlan;
 struct mlxsw_sp_port;
 struct mlxsw_sp_rif;
 
@@ -78,7 +79,7 @@ struct mlxsw_sp_upper {
 };
 
 struct mlxsw_sp_fid {
-	void (*leave)(struct mlxsw_sp_port *mlxsw_sp_vport);
+	void (*leave)(struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan);
 	struct list_head list;
 	unsigned int ref_count;
 	struct net_device *dev;
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
