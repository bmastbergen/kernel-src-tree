net/mlx5e: Fix broken disable 1PPS flow

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Fix broken disable 1PPS flow (Kamal Heib) [1456694]
Rebuild_FUZZ: 94.59%
commit-author Eugenia Emantayev <eugenia@mellanox.com>
commit 49c5031ca6f0628ef973a11b17e463e088bf859e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/49c5031c.failed

Need to disable the MTPPS and unsubscribe from the pulse events
when user disables the 1PPS functionality.

Fixes: ee7f12205abc ('net/mlx5e: Implement 1PPS support')
	Signed-off-by: Eugenia Emantayev <eugenia@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 49c5031ca6f0628ef973a11b17e463e088bf859e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
index 4a787dea75a4,25d43767c888..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
@@@ -263,15 -281,21 +265,24 @@@ static int mlx5e_extts_configure(struc
  		pin = ptp_find_pin(tstamp->ptp, PTP_PF_EXTTS, rq->extts.index);
  		if (pin < 0)
  			return -EBUSY;
+ 		pin_mode = MLX5E_PIN_MODE_IN;
+ 		pattern = !!(rq->extts.flags & PTP_FALLING_EDGE);
+ 		field_select = MLX5E_MTPPS_FS_PIN_MODE |
+ 			       MLX5E_MTPPS_FS_PATTERN |
+ 			       MLX5E_MTPPS_FS_ENABLE;
+ 	} else {
+ 		pin = rq->extts.index;
+ 		field_select = MLX5E_MTPPS_FS_ENABLE;
  	}
  
- 	if (rq->extts.flags & PTP_FALLING_EDGE)
- 		pattern = 1;
- 
  	MLX5_SET(mtpps_reg, in, pin, pin);
- 	MLX5_SET(mtpps_reg, in, pin_mode, MLX5E_PIN_MODE_IN);
+ 	MLX5_SET(mtpps_reg, in, pin_mode, pin_mode);
  	MLX5_SET(mtpps_reg, in, pattern, pattern);
  	MLX5_SET(mtpps_reg, in, enable, on);
++<<<<<<< HEAD
++=======
+ 	MLX5_SET(mtpps_reg, in, field_select, field_select);
++>>>>>>> 49c5031ca6f0 (net/mlx5e: Fix broken disable 1PPS flow)
  
  	err = mlx5_set_mtpps(priv->mdev, in, sizeof(in));
  	if (err)
@@@ -308,30 -335,42 +322,45 @@@ static int mlx5e_perout_configure(struc
  				   rq->perout.index);
  		if (pin < 0)
  			return -EBUSY;
- 	}
  
- 	ts.tv_sec = rq->perout.period.sec;
- 	ts.tv_nsec = rq->perout.period.nsec;
- 	ns = timespec64_to_ns(&ts);
- 	if (on)
+ 		pin_mode = MLX5E_PIN_MODE_OUT;
+ 		pattern = MLX5E_OUT_PATTERN_PERIODIC;
+ 		ts.tv_sec = rq->perout.period.sec;
+ 		ts.tv_nsec = rq->perout.period.nsec;
+ 		ns = timespec64_to_ns(&ts);
+ 
  		if ((ns >> 1) != 500000000LL)
  			return -EINVAL;
- 	ts.tv_sec = rq->perout.start.sec;
- 	ts.tv_nsec = rq->perout.start.nsec;
- 	ns = timespec64_to_ns(&ts);
- 	cycles_now = mlx5_read_internal_timer(tstamp->mdev);
- 	write_lock_irqsave(&tstamp->lock, flags);
- 	nsec_now = timecounter_cyc2time(&tstamp->clock, cycles_now);
- 	nsec_delta = ns - nsec_now;
- 	cycles_delta = div64_u64(nsec_delta << tstamp->cycles.shift,
- 				 tstamp->cycles.mult);
- 	write_unlock_irqrestore(&tstamp->lock, flags);
- 	time_stamp = cycles_now + cycles_delta;
+ 
+ 		ts.tv_sec = rq->perout.start.sec;
+ 		ts.tv_nsec = rq->perout.start.nsec;
+ 		ns = timespec64_to_ns(&ts);
+ 		cycles_now = mlx5_read_internal_timer(tstamp->mdev);
+ 		write_lock_irqsave(&tstamp->lock, flags);
+ 		nsec_now = timecounter_cyc2time(&tstamp->clock, cycles_now);
+ 		nsec_delta = ns - nsec_now;
+ 		cycles_delta = div64_u64(nsec_delta << tstamp->cycles.shift,
+ 					 tstamp->cycles.mult);
+ 		write_unlock_irqrestore(&tstamp->lock, flags);
+ 		time_stamp = cycles_now + cycles_delta;
+ 		field_select = MLX5E_MTPPS_FS_PIN_MODE |
+ 			       MLX5E_MTPPS_FS_PATTERN |
+ 			       MLX5E_MTPPS_FS_ENABLE |
+ 			       MLX5E_MTPPS_FS_TIME_STAMP;
+ 	} else {
+ 		pin = rq->perout.index;
+ 		field_select = MLX5E_MTPPS_FS_ENABLE;
+ 	}
+ 
  	MLX5_SET(mtpps_reg, in, pin, pin);
- 	MLX5_SET(mtpps_reg, in, pin_mode, MLX5E_PIN_MODE_OUT);
- 	MLX5_SET(mtpps_reg, in, pattern, MLX5E_OUT_PATTERN_PERIODIC);
+ 	MLX5_SET(mtpps_reg, in, pin_mode, pin_mode);
+ 	MLX5_SET(mtpps_reg, in, pattern, pattern);
  	MLX5_SET(mtpps_reg, in, enable, on);
  	MLX5_SET64(mtpps_reg, in, time_stamp, time_stamp);
++<<<<<<< HEAD
++=======
+ 	MLX5_SET(mtpps_reg, in, field_select, field_select);
++>>>>>>> 49c5031ca6f0 (net/mlx5e: Fix broken disable 1PPS flow)
  
  	return mlx5_set_mtpps(priv->mdev, in, sizeof(in));
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
