net: sched: propagate classid down to offload drivers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: propagate classid down to offload drivers (Ivan Vecera) [1445420]
Rebuild_FUZZ: 95.05%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 7690f2a51d8afe51ac97e7fae66b081f192a7158
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7690f2a5.failed

Drivers need classid to decide they support this specific qdisc+class
or not. So propagate it down via the tc_cls_common_offload struct.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7690f2a51d8afe51ac97e7fae66b081f192a7158)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/pkt_cls.h
diff --cc include/net/pkt_cls.h
index db4cec05920e,1f1de20e584f..000000000000
--- a/include/net/pkt_cls.h
+++ b/include/net/pkt_cls.h
@@@ -379,6 -405,25 +379,28 @@@ tcf_match_indev(struct sk_buff *skb, in
  }
  #endif /* CONFIG_NET_CLS_IND */
  
++<<<<<<< HEAD
++=======
+ struct tc_cls_common_offload {
+ 	u32 handle;
+ 	u32 chain_index;
+ 	__be16 protocol;
+ 	u32 prio;
+ 	u32 classid;
+ };
+ 
+ static inline void
+ tc_cls_common_offload_init(struct tc_cls_common_offload *cls_common,
+ 			   const struct tcf_proto *tp)
+ {
+ 	cls_common->handle = tp->q->handle;
+ 	cls_common->chain_index = tp->chain->index;
+ 	cls_common->protocol = tp->protocol;
+ 	cls_common->prio = tp->prio;
+ 	cls_common->classid = tp->classid;
+ }
+ 
++>>>>>>> 7690f2a51d8a (net: sched: propagate classid down to offload drivers)
  struct tc_cls_u32_knode {
  	struct tcf_exts *exts;
  	struct tc_u32_sel *sel;
* Unmerged path include/net/pkt_cls.h
