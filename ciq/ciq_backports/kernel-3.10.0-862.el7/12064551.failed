openvswitch: Add eventmask support to CT action.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] openvswitch: Add eventmask support to CT action (Jiri Benc) [1497774]
Rebuild_FUZZ: 98.95%
commit-author Jarno Rajahalme <jarno@ovn.org>
commit 120645513f55a4ac5543120d9e79925d30a0156f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/12064551.failed

Add a new optional conntrack action attribute OVS_CT_ATTR_EVENTMASK,
which can be used in conjunction with the commit flag
(OVS_CT_ATTR_COMMIT) to set the mask of bits specifying which
conntrack events (IPCT_*) should be delivered via the Netfilter
netlink multicast groups.  Default behavior depends on the system
configuration, but typically a lot of events are delivered.  This can be
very chatty for the NFNLGRP_CONNTRACK_UPDATE group, even if only some
types of events are of interest.

Netfilter core init_conntrack() adds the event cache extension, so we
only need to set the ctmask value.  However, if the system is
configured without support for events, the setting will be skipped due
to extension not being found.

	Signed-off-by: Jarno Rajahalme <jarno@ovn.org>
	Reviewed-by: Greg Rose <gvrose8192@gmail.com>
	Acked-by: Joe Stringer <joe@ovn.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 120645513f55a4ac5543120d9e79925d30a0156f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/openvswitch.h
#	net/openvswitch/conntrack.c
diff --cc include/uapi/linux/openvswitch.h
index 7a4a6b3f1382,61b7d36dfe34..000000000000
--- a/include/uapi/linux/openvswitch.h
+++ b/include/uapi/linux/openvswitch.h
@@@ -671,6 -689,21 +671,24 @@@ struct ovs_action_hash 
   * @OVS_CT_ATTR_HELPER: variable length string defining conntrack ALG.
   * @OVS_CT_ATTR_NAT: Nested OVS_NAT_ATTR_* for performing L3 network address
   * translation (NAT) on the packet.
++<<<<<<< HEAD
++=======
+  * @OVS_CT_ATTR_FORCE_COMMIT: Like %OVS_CT_ATTR_COMMIT, but instead of doing
+  * nothing if the connection is already committed will check that the current
+  * packet is in conntrack entry's original direction.  If directionality does
+  * not match, will delete the existing conntrack entry and commit a new one.
+  * @OVS_CT_ATTR_EVENTMASK: Mask of bits indicating which conntrack event types
+  * (enum ip_conntrack_events IPCT_*) should be reported.  For any bit set to
+  * zero, the corresponding event type is not generated.  Default behavior
+  * depends on system configuration, but typically all event types are
+  * generated, hence listening on NFNLGRP_CONNTRACK_UPDATE events may get a lot
+  * of events.  Explicitly passing this attribute allows limiting the updates
+  * received to the events of interest.  The bit 1 << IPCT_NEW, 1 <<
+  * IPCT_RELATED, and 1 << IPCT_DESTROY must be set to ones for those events to
+  * be received on NFNLGRP_CONNTRACK_NEW and NFNLGRP_CONNTRACK_DESTROY groups,
+  * respectively.  Remaining bits control the changes for which an event is
+  * delivered on the NFNLGRP_CONNTRACK_UPDATE group.
++>>>>>>> 120645513f55 (openvswitch: Add eventmask support to CT action.)
   */
  enum ovs_ct_attr {
  	OVS_CT_ATTR_UNSPEC,
@@@ -681,6 -714,8 +699,11 @@@
  	OVS_CT_ATTR_HELPER,     /* netlink helper to assist detection of
  				   related connections. */
  	OVS_CT_ATTR_NAT,        /* Nested OVS_NAT_ATTR_* */
++<<<<<<< HEAD
++=======
+ 	OVS_CT_ATTR_FORCE_COMMIT,  /* No argument */
+ 	OVS_CT_ATTR_EVENTMASK,  /* u32 mask of IPCT_* events. */
++>>>>>>> 120645513f55 (openvswitch: Add eventmask support to CT action.)
  	__OVS_CT_ATTR_MAX
  };
  
diff --cc net/openvswitch/conntrack.c
index 6843f95142f8,4f7c3b5c080b..000000000000
--- a/net/openvswitch/conntrack.c
+++ b/net/openvswitch/conntrack.c
@@@ -65,7 -65,10 +65,13 @@@ struct ovs_conntrack_info 
  	struct nf_conn *ct;
  	u8 commit : 1;
  	u8 nat : 3;                 /* enum ovs_ct_nat */
++<<<<<<< HEAD
++=======
+ 	u8 force : 1;
+ 	u8 have_eventmask : 1;
++>>>>>>> 120645513f55 (openvswitch: Add eventmask support to CT action.)
  	u16 family;
+ 	u32 eventmask;              /* Mask of 1 << IPCT_*. */
  	struct md_mark mark;
  	struct md_labels labels;
  #ifdef CONFIG_NF_NAT_NEEDED
* Unmerged path include/uapi/linux/openvswitch.h
* Unmerged path net/openvswitch/conntrack.c
