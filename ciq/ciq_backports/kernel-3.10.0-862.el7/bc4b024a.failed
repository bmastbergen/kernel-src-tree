PCI: Move pci_dma_* helpers to common code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [pci] Move pci_dma_* helpers to common code (Myron Stowe) [1466891]
Rebuild_FUZZ: 93.67%
commit-author Christoph Hellwig <hch@lst.de>
commit bc4b024a8b8bd7dceb2697299aad2bda57d065e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bc4b024a.failed

For a long time all architectures implement the pci_dma_* functions using
the generic DMA API, and they all use the same header to do so.

Move this header, pci-dma-compat.h, to include/linux and include it from
the generic pci.h instead of having each arch duplicate this include.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit bc4b024a8b8bd7dceb2697299aad2bda57d065e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/alpha/include/asm/pci.h
#	arch/arm/include/asm/pci.h
#	arch/arm64/include/asm/pci.h
#	arch/blackfin/include/asm/pci.h
#	arch/frv/include/asm/pci.h
#	arch/ia64/include/asm/pci.h
#	arch/mn10300/include/asm/pci.h
#	arch/parisc/include/asm/pci.h
#	arch/unicore32/include/asm/pci.h
diff --cc arch/alpha/include/asm/pci.h
index f7f680f7457d,a06c24b3a2e1..000000000000
--- a/arch/alpha/include/asm/pci.h
+++ b/arch/alpha/include/asm/pci.h
@@@ -66,29 -65,6 +66,32 @@@ extern void pcibios_set_master(struct p
     decisions.  */
  #define PCI_DMA_BUS_IS_PHYS  0
  
++<<<<<<< HEAD
 +#ifdef CONFIG_PCI
 +
 +/* implement the pci_ DMA API in terms of the generic device dma_ one */
 +#include <asm-generic/pci-dma-compat.h>
 +
 +static inline void pci_dma_burst_advice(struct pci_dev *pdev,
 +					enum pci_dma_burst_strategy *strat,
 +					unsigned long *strategy_parameter)
 +{
 +	unsigned long cacheline_size;
 +	u8 byte;
 +
 +	pci_read_config_byte(pdev, PCI_CACHE_LINE_SIZE, &byte);
 +	if (byte == 0)
 +		cacheline_size = 1024;
 +	else
 +		cacheline_size = (int) byte * 4;
 +
 +	*strat = PCI_DMA_BURST_BOUNDARY;
 +	*strategy_parameter = cacheline_size;
 +}
 +#endif
 +
++=======
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  /* TODO: integrate with include/asm-generic/pci.h ? */
  static inline int pci_get_legacy_ide_irq(struct pci_dev *dev, int channel)
  {
diff --cc arch/arm/include/asm/pci.h
index 7d68d8d3a611,057d381f4e57..000000000000
--- a/arch/arm/include/asm/pci.h
+++ b/arch/arm/include/asm/pci.h
@@@ -2,9 -2,6 +2,12 @@@
  #define ASMARM_PCI_H
  
  #ifdef __KERNEL__
++<<<<<<< HEAD
 +#include <asm-generic/pci-dma-compat.h>
 +#include <asm-generic/pci-bridge.h>
 +
++=======
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  #include <asm/mach/pci.h> /* for pci_sys_data */
  
  extern unsigned long pcibios_min_io;
diff --cc arch/blackfin/include/asm/pci.h
index c737909fba47,11ea1cb35036..000000000000
--- a/arch/blackfin/include/asm/pci.h
+++ b/arch/blackfin/include/asm/pci.h
@@@ -3,8 -3,7 +3,12 @@@
  #ifndef _ASM_BFIN_PCI_H
  #define _ASM_BFIN_PCI_H
  
++<<<<<<< HEAD
 +#include <asm/scatterlist.h>
 +#include <asm-generic/pci-dma-compat.h>
++=======
+ #include <linux/scatterlist.h>
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  #include <asm-generic/pci.h>
  
  #define PCIBIOS_MIN_IO 0x00001000
diff --cc arch/frv/include/asm/pci.h
index 2035a4d3f9b9,809cfc6707ab..000000000000
--- a/arch/frv/include/asm/pci.h
+++ b/arch/frv/include/asm/pci.h
@@@ -14,8 -14,7 +14,12 @@@
  #define _ASM_FRV_PCI_H
  
  #include <linux/mm.h>
++<<<<<<< HEAD
 +#include <asm/scatterlist.h>
 +#include <asm-generic/pci-dma-compat.h>
++=======
+ #include <linux/scatterlist.h>
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  #include <asm-generic/pci.h>
  
  struct pci_dev;
diff --cc arch/ia64/include/asm/pci.h
index dae13c94b6b5,c0835b0dc722..000000000000
--- a/arch/ia64/include/asm/pci.h
+++ b/arch/ia64/include/asm/pci.h
@@@ -50,27 -50,6 +50,30 @@@ struct pci_dev
  extern unsigned long ia64_max_iommu_merge_mask;
  #define PCI_DMA_BUS_IS_PHYS	(ia64_max_iommu_merge_mask == ~0UL)
  
++<<<<<<< HEAD
 +#include <asm-generic/pci-dma-compat.h>
 +
 +#ifdef CONFIG_PCI
 +static inline void pci_dma_burst_advice(struct pci_dev *pdev,
 +					enum pci_dma_burst_strategy *strat,
 +					unsigned long *strategy_parameter)
 +{
 +	unsigned long cacheline_size;
 +	u8 byte;
 +
 +	pci_read_config_byte(pdev, PCI_CACHE_LINE_SIZE, &byte);
 +	if (byte == 0)
 +		cacheline_size = 1024;
 +	else
 +		cacheline_size = (int) byte * 4;
 +
 +	*strat = PCI_DMA_BURST_MULTIPLE;
 +	*strategy_parameter = cacheline_size;
 +}
 +#endif
 +
++=======
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  #define HAVE_PCI_MMAP
  extern int pci_mmap_page_range (struct pci_dev *dev, struct vm_area_struct *vma,
  				enum pci_mmap_state mmap_state, int write_combine);
diff --cc arch/mn10300/include/asm/pci.h
index 6db436913986,51159fff025a..000000000000
--- a/arch/mn10300/include/asm/pci.h
+++ b/arch/mn10300/include/asm/pci.h
@@@ -81,22 -80,6 +81,25 @@@ extern int pci_mmap_page_range(struct p
  
  #endif /* __KERNEL__ */
  
++<<<<<<< HEAD
 +/* implement the pci_ DMA API in terms of the generic device dma_ one */
 +#include <asm-generic/pci-dma-compat.h>
 +
 +static inline struct resource *
 +pcibios_select_root(struct pci_dev *pdev, struct resource *res)
 +{
 +	struct resource *root = NULL;
 +
 +	if (res->flags & IORESOURCE_IO)
 +		root = &ioport_resource;
 +	if (res->flags & IORESOURCE_MEM)
 +		root = &iomem_resource;
 +
 +	return root;
 +}
 +
++=======
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  static inline int pci_get_legacy_ide_irq(struct pci_dev *dev, int channel)
  {
  	return channel ? 15 : 14;
diff --cc arch/parisc/include/asm/pci.h
index 20df2b04fc09,defebd956585..000000000000
--- a/arch/parisc/include/asm/pci.h
+++ b/arch/parisc/include/asm/pci.h
@@@ -193,28 -194,6 +193,31 @@@ static inline void pcibios_register_hba
  #define PCIBIOS_MIN_IO          0x10
  #define PCIBIOS_MIN_MEM         0x1000 /* NBPG - but pci/setup-res.c dies */
  
++<<<<<<< HEAD
 +/* export the pci_ DMA API in terms of the dma_ one */
 +#include <asm-generic/pci-dma-compat.h>
 +
 +#ifdef CONFIG_PCI
 +static inline void pci_dma_burst_advice(struct pci_dev *pdev,
 +					enum pci_dma_burst_strategy *strat,
 +					unsigned long *strategy_parameter)
 +{
 +	unsigned long cacheline_size;
 +	u8 byte;
 +
 +	pci_read_config_byte(pdev, PCI_CACHE_LINE_SIZE, &byte);
 +	if (byte == 0)
 +		cacheline_size = 1024;
 +	else
 +		cacheline_size = (int) byte * 4;
 +
 +	*strat = PCI_DMA_BURST_MULTIPLE;
 +	*strategy_parameter = cacheline_size;
 +}
 +#endif
 +
++=======
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  static inline int pci_get_legacy_ide_irq(struct pci_dev *dev, int channel)
  {
  	return channel ? 15 : 14;
diff --cc arch/unicore32/include/asm/pci.h
index 654407e98619,37e55d018de5..000000000000
--- a/arch/unicore32/include/asm/pci.h
+++ b/arch/unicore32/include/asm/pci.h
@@@ -13,8 -13,6 +13,11 @@@
  #define __UNICORE_PCI_H__
  
  #ifdef __KERNEL__
++<<<<<<< HEAD
 +#include <asm-generic/pci-dma-compat.h>
 +#include <asm-generic/pci-bridge.h>
++=======
++>>>>>>> bc4b024a8b8b (PCI: Move pci_dma_* helpers to common code)
  #include <asm-generic/pci.h>
  #include <mach/hardware.h> /* for PCIBIOS_MIN_* */
  
* Unmerged path arch/arm64/include/asm/pci.h
* Unmerged path arch/alpha/include/asm/pci.h
* Unmerged path arch/arm/include/asm/pci.h
* Unmerged path arch/arm64/include/asm/pci.h
diff --git a/arch/avr32/include/asm/pci.h b/arch/avr32/include/asm/pci.h
index a32a02372017..0f5f134b896a 100644
--- a/arch/avr32/include/asm/pci.h
+++ b/arch/avr32/include/asm/pci.h
@@ -5,6 +5,4 @@
 
 #define PCI_DMA_BUS_IS_PHYS	(1)
 
-#include <asm-generic/pci-dma-compat.h>
-
 #endif /* __ASM_AVR32_PCI_H__ */
* Unmerged path arch/blackfin/include/asm/pci.h
diff --git a/arch/cris/include/asm/pci.h b/arch/cris/include/asm/pci.h
index e458a9901b7f..a83b06c8024c 100644
--- a/arch/cris/include/asm/pci.h
+++ b/arch/cris/include/asm/pci.h
@@ -49,9 +49,6 @@ extern int pci_mmap_page_range(struct pci_dev *dev, struct vm_area_struct *vma,
 
 #endif /* __KERNEL__ */
 
-/* implement the pci_ DMA API in terms of the generic device dma_ one */
-#include <asm-generic/pci-dma-compat.h>
-
 /* generic pci stuff */
 #include <asm-generic/pci.h>
 
* Unmerged path arch/frv/include/asm/pci.h
* Unmerged path arch/ia64/include/asm/pci.h
diff --git a/arch/m68k/include/asm/pci.h b/arch/m68k/include/asm/pci.h
index 848c3dfaad50..3a3dbcf4051d 100644
--- a/arch/m68k/include/asm/pci.h
+++ b/arch/m68k/include/asm/pci.h
@@ -1,7 +1,6 @@
 #ifndef _ASM_M68K_PCI_H
 #define _ASM_M68K_PCI_H
 
-#include <asm-generic/pci-dma-compat.h>
 #include <asm-generic/pci.h>
 
 /* The PCI address space does equal the physical memory
diff --git a/arch/microblaze/include/asm/pci.h b/arch/microblaze/include/asm/pci.h
index 3c9fe213f791..b2d588c67a30 100644
--- a/arch/microblaze/include/asm/pci.h
+++ b/arch/microblaze/include/asm/pci.h
@@ -22,8 +22,6 @@
 #include <asm/prom.h>
 #include <asm/pci-bridge.h>
 
-#include <asm-generic/pci-dma-compat.h>
-
 #define PCIBIOS_MIN_IO		0x1000
 #define PCIBIOS_MIN_MEM		0x10000000
 
diff --git a/arch/mips/include/asm/pci.h b/arch/mips/include/asm/pci.h
index 984fd260e473..1ba3b898924e 100644
--- a/arch/mips/include/asm/pci.h
+++ b/arch/mips/include/asm/pci.h
@@ -120,9 +120,6 @@ static inline int pci_proc_domain(struct pci_bus *bus)
 
 #endif /* __KERNEL__ */
 
-/* implement the pci_ DMA API in terms of the generic device dma_ one */
-#include <asm-generic/pci-dma-compat.h>
-
 /* Do platform specific device initialization at pci_enable_device() time */
 extern int pcibios_plat_dev_init(struct pci_dev *dev);
 
* Unmerged path arch/mn10300/include/asm/pci.h
* Unmerged path arch/parisc/include/asm/pci.h
diff --git a/arch/powerpc/include/asm/pci.h b/arch/powerpc/include/asm/pci.h
index 88f3285a64e4..6b35ae0d240a 100644
--- a/arch/powerpc/include/asm/pci.h
+++ b/arch/powerpc/include/asm/pci.h
@@ -20,8 +20,6 @@
 #include <asm/prom.h>
 #include <asm/pci-bridge.h>
 
-#include <asm-generic/pci-dma-compat.h>
-
 /* Return values for pci_controller_ops.probe_mode function */
 #define PCI_PROBE_NONE		-1	/* Don't look at this bus at all */
 #define PCI_PROBE_NORMAL	0	/* Do normal PCI probing */
diff --git a/arch/s390/include/asm/pci.h b/arch/s390/include/asm/pci.h
index 1c270f366fe8..fe2a1b8a0f94 100644
--- a/arch/s390/include/asm/pci.h
+++ b/arch/s390/include/asm/pci.h
@@ -8,7 +8,6 @@
 
 #include <linux/pci.h>
 #include <asm-generic/pci.h>
-#include <asm-generic/pci-dma-compat.h>
 #include <asm/pci_clp.h>
 #include <asm/pci_debug.h>
 
diff --git a/arch/sh/include/asm/pci.h b/arch/sh/include/asm/pci.h
index 5b4511552998..be65d05d26b5 100644
--- a/arch/sh/include/asm/pci.h
+++ b/arch/sh/include/asm/pci.h
@@ -123,9 +123,6 @@ static inline int pci_get_legacy_ide_irq(struct pci_dev *dev, int channel)
 	return channel ? 15 : 14;
 }
 
-/* generic DMA-mapping stuff */
-#include <asm-generic/pci-dma-compat.h>
-
 #endif /* __KERNEL__ */
 #endif /* __ASM_SH_PCI_H */
 
diff --git a/arch/sparc/include/asm/pci.h b/arch/sparc/include/asm/pci.h
index d9c031f9910f..6e14fd179335 100644
--- a/arch/sparc/include/asm/pci.h
+++ b/arch/sparc/include/asm/pci.h
@@ -5,7 +5,4 @@
 #else
 #include <asm/pci_32.h>
 #endif
-
-#include <asm-generic/pci-dma-compat.h>
-
 #endif
diff --git a/arch/tile/include/asm/pci.h b/arch/tile/include/asm/pci.h
index 54a924208d3c..362a5e75e870 100644
--- a/arch/tile/include/asm/pci.h
+++ b/arch/tile/include/asm/pci.h
@@ -216,7 +216,4 @@ static inline int pcibios_assign_all_busses(void)
 /* Use any cpu for PCI. */
 #define cpumask_of_pcibus(bus) cpu_online_mask
 
-/* implement the pci_ DMA API in terms of the generic device dma_ one */
-#include <asm-generic/pci-dma-compat.h>
-
 #endif /* _ASM_TILE_PCI_H */
* Unmerged path arch/unicore32/include/asm/pci.h
diff --git a/arch/x86/include/asm/pci.h b/arch/x86/include/asm/pci.h
index d844dbcd7102..fcd212b637c5 100644
--- a/arch/x86/include/asm/pci.h
+++ b/arch/x86/include/asm/pci.h
@@ -124,9 +124,6 @@ int setup_msi_irq(struct pci_dev *dev, struct msi_desc *msidesc,
 #include <asm/pci_64.h>
 #endif
 
-/* implement the pci_ DMA API in terms of the generic device dma_ one */
-#include <asm-generic/pci-dma-compat.h>
-
 /* generic pci stuff */
 #include <asm-generic/pci.h>
 
diff --git a/arch/xtensa/include/asm/pci.h b/arch/xtensa/include/asm/pci.h
index 5d52dc43dfe7..34412fa7b7a5 100644
--- a/arch/xtensa/include/asm/pci.h
+++ b/arch/xtensa/include/asm/pci.h
@@ -55,9 +55,6 @@ int pci_mmap_page_range(struct pci_dev *pdev, struct vm_area_struct *vma,
 
 #endif /* __KERNEL__ */
 
-/* Implement the pci_ DMA API in terms of the generic device dma_ one */
-#include <asm-generic/pci-dma-compat.h>
-
 /* Generic PCI */
 #include <asm-generic/pci.h>
 
diff --git a/include/asm-generic/pci-dma-compat.h b/include/linux/pci-dma-compat.h
similarity index 100%
rename from include/asm-generic/pci-dma-compat.h
rename to include/linux/pci-dma-compat.h
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 20e2942c01d7..cd87a37e2860 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -2033,4 +2033,8 @@ static inline bool pci_ari_enabled(struct pci_bus *bus)
 {
 	return bus->self && bus->self->ari_enabled;
 }
+
+/* provide the legacy pci_dma_* API */
+#include <linux/pci-dma-compat.h>
+
 #endif /* LINUX_PCI_H */
