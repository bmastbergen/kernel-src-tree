ovl: generalize ovl_create_workdir()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Amir Goldstein <amir73il@gmail.com>
commit 6b8aa129dcbe0e9825109b35c4b967f984e8fb13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6b8aa129.failed

Pass in the subdir name to create and specify if subdir is persistent
or if it should be cleaned up on every mount.

Move fallback to readonly mount on failure to create dir and print of error
message into the helper.

This function is going to be used for creating the persistent 'index' dir
under workbasedir.

	Signed-off-by: Amir Goldstein <amir73il@gmail.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 6b8aa129dcbe0e9825109b35c4b967f984e8fb13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/super.c
diff --cc fs/overlayfs/super.c
index aaf06952d88f,fea7bd496f2e..000000000000
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@@ -905,20 -432,18 +909,25 @@@ static struct dentry *ovl_workdir_creat
  
  	err = mnt_want_write(mnt);
  	if (err)
- 		return ERR_PTR(err);
+ 		goto out_err;
  
++<<<<<<< HEAD
 +	mutex_lock_nested(&dir->i_mutex, I_MUTEX_PARENT);
++=======
+ 	inode_lock_nested(dir, I_MUTEX_PARENT);
+ 	locked = true;
+ 
++>>>>>>> 6b8aa129dcbe (ovl: generalize ovl_create_workdir())
  retry:
- 	work = lookup_one_len(OVL_WORKDIR_NAME, dentry,
- 			      strlen(OVL_WORKDIR_NAME));
+ 	work = lookup_one_len(name, dentry, strlen(name));
  
  	if (!IS_ERR(work)) {
 +		struct kstat stat = {
 +			.mode = S_IFDIR | 0,
 +		};
  		struct iattr attr = {
  			.ia_valid = ATTR_MODE,
 -			.ia_mode = S_IFDIR | 0,
 +			.ia_mode = stat.mode,
  		};
  
  		if (work->d_inode) {
@@@ -963,10 -493,14 +975,18 @@@
  		inode_unlock(work->d_inode);
  		if (err)
  			goto out_dput;
+ 	} else {
+ 		err = PTR_ERR(work);
+ 		goto out_err;
  	}
  out_unlock:
++<<<<<<< HEAD
 +	mutex_unlock(&dir->i_mutex);
++=======
++>>>>>>> 6b8aa129dcbe (ovl: generalize ovl_create_workdir())
  	mnt_drop_write(mnt);
+ 	if (locked)
+ 		inode_unlock(dir);
  
  	return work;
  
* Unmerged path fs/overlayfs/super.c
