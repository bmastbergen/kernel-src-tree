net/sched: cls_u32: fix cls_u32 on filter replace

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: cls_u32: fix cls_u32 on filter replace (Ivan Vecera) [1542013]
Rebuild_FUZZ: 95.74%
commit-author Ivan Vecera <ivecera@redhat.com>
commit eb53f7af6f15285e2f6ada97285395343ce9f433
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/eb53f7af.failed

The following sequence is currently broken:

 # tc qdisc add dev foo ingress
 # tc filter replace dev foo protocol all ingress \
   u32 match u8 0 0 action mirred egress mirror dev bar1
 # tc filter replace dev foo protocol all ingress \
   handle 800::800 pref 49152 \
   u32 match u8 0 0 action mirred egress mirror dev bar2
 Error: cls_u32: Key node flags do not match passed flags.
 We have an error talking to the kernel, -1

The error comes from u32_change() when comparing new and
existing flags. The existing ones always contains one of
TCA_CLS_FLAGS_{,NOT}_IN_HW flag depending on offloading state.
These flags cannot be passed from userspace so the condition
(n->flags != flags) in u32_change() always fails.

Fix the condition so the flags TCA_CLS_FLAGS_NOT_IN_HW and
TCA_CLS_FLAGS_IN_HW are not taken into account.

Fixes: 24d3dc6d27ea ("net/sched: cls_u32: Reflect HW offload status")
	Signed-off-by: Ivan Vecera <ivecera@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eb53f7af6f15285e2f6ada97285395343ce9f433)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_u32.c
diff --cc net/sched/cls_u32.c
index 6f9cfce0e098,c75e68e839c7..000000000000
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@@ -931,11 -950,16 +931,17 @@@ static int u32_change(struct net *net, 
  	if (n) {
  		struct tc_u_knode *new;
  
 -		if (TC_U32_KEY(n->handle) == 0) {
 -			NL_SET_ERR_MSG_MOD(extack, "Key node id cannot be zero");
 +		if (TC_U32_KEY(n->handle) == 0)
  			return -EINVAL;
 -		}
  
++<<<<<<< HEAD
 +		if (n->flags != flags)
++=======
+ 		if ((n->flags ^ flags) &
+ 		    ~(TCA_CLS_FLAGS_IN_HW | TCA_CLS_FLAGS_NOT_IN_HW)) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Key node flags do not match passed flags");
++>>>>>>> eb53f7af6f15 (net/sched: cls_u32: fix cls_u32 on filter replace)
  			return -EINVAL;
 -		}
  
  		new = u32_init_knode(tp, n);
  		if (!new)
* Unmerged path net/sched/cls_u32.c
