livepatch: add locking to force and signal functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Miroslav Benes <mbenes@suse.cz>
commit 8869016d3a58cbe7c31c70f4f008a92122b271c7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8869016d.failed

klp_send_signals() and klp_force_transition() do not acquire klp_mutex,
because it seemed to be superfluous. A potential race in
klp_send_signals() was harmless and there was nothing in
klp_force_transition() which needed to be synchronized. That changed
with the addition of klp_forced variable during the review process.

There is a small window now, when klp_complete_transition() does not see
klp_forced set to true while all tasks have been already transitioned to
the target state. module_put() is called and the module can be removed.

Acquire klp_mutex in sysfs callback to prevent it. Do the same for the
signal sending just to be sure. There is no real downside to that.

Fixes: c99a2be790b07 ("livepatch: force transition to finish")
Fixes: 43347d56c8d9d ("livepatch: send a fake signal to all blocking tasks")
	Reported-by: Jason Baron <jbaron@akamai.com>
	Signed-off-by: Miroslav Benes <mbenes@suse.cz>
	Reviewed-by: Petr Mladek <pmladek@suse.com>
	Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 8869016d3a58cbe7c31c70f4f008a92122b271c7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/livepatch/core.c
* Unmerged path kernel/livepatch/core.c
* Unmerged path kernel/livepatch/core.c
