mlxsw: spectrum_router: Allow IPv6 routes to be programmed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 9dbf4d76d07d3b581238149d6e87796c39c94716
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9dbf4d76.failed

Take advantage of previous patch and allow the RALUE register to be
called with IPv6 routes.

In order to re-use as much code as possible between IPv4 and IPv6, only
the lowest-level function that actually does the register packing is
demuxed based on the passed protocol.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9dbf4d76d07d3b581238149d6e87796c39c94716)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index ba2b4952cadc,1141d742468b..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -1838,17 -2181,15 +1859,20 @@@ static int mlxsw_sp_fib_entry_op_remote
  	return mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(ralue), ralue_pl);
  }
  
- static int mlxsw_sp_fib_entry_op4_local(struct mlxsw_sp *mlxsw_sp,
- 					struct mlxsw_sp_fib_entry *fib_entry,
- 					enum mlxsw_reg_ralue_op op)
+ static int mlxsw_sp_fib_entry_op_local(struct mlxsw_sp *mlxsw_sp,
+ 				       struct mlxsw_sp_fib_entry *fib_entry,
+ 				       enum mlxsw_reg_ralue_op op)
  {
++<<<<<<< HEAD
 +	struct mlxsw_sp_rif *r = fib_entry->nh_group->nh_rif;
 +	struct mlxsw_sp_fib *fib = fib_entry->fib_node->fib;
++=======
+ 	struct mlxsw_sp_rif *rif = fib_entry->nh_group->nh_rif;
++>>>>>>> 9dbf4d76d07d (mlxsw: spectrum_router: Allow IPv6 routes to be programmed)
  	enum mlxsw_reg_ralue_trap_action trap_action;
  	char ralue_pl[MLXSW_REG_RALUE_LEN];
- 	u32 *p_dip = (u32 *) fib_entry->fib_node->key.addr;
  	u16 trap_id = 0;
 -	u16 rif_index = 0;
 +	u16 rif = 0;
  
  	if (mlxsw_sp_fib_entry_should_offload(fib_entry)) {
  		trap_action = MLXSW_REG_RALUE_TRAP_ACTION_NOP;
@@@ -1858,11 -2199,9 +1882,17 @@@
  		trap_id = MLXSW_TRAP_ID_RTR_INGRESS0;
  	}
  
++<<<<<<< HEAD
 +	mlxsw_reg_ralue_pack4(ralue_pl,
 +			      (enum mlxsw_reg_ralxx_protocol) fib->proto, op,
 +			      fib->vr->id, fib_entry->fib_node->key.prefix_len,
 +			      *p_dip);
 +	mlxsw_reg_ralue_act_local_pack(ralue_pl, trap_action, trap_id, rif);
++=======
+ 	mlxsw_sp_fib_entry_ralue_pack(ralue_pl, fib_entry, op);
+ 	mlxsw_reg_ralue_act_local_pack(ralue_pl, trap_action, trap_id,
+ 				       rif_index);
++>>>>>>> 9dbf4d76d07d (mlxsw: spectrum_router: Allow IPv6 routes to be programmed)
  	return mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(ralue), ralue_pl);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
