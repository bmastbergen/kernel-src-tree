scsi: fix device handler detach oops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] fix device handler detach oops (Mike Snitzer) [1499107]
Rebuild_FUZZ: 90.91%
commit-author Mike Christie <michaelc@cs.wisc.edu>
commit 28072ad50ca7328bd99f9dba94ac27c723da0053
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/28072ad5.failed

This fixes a regression caused by commit 1d5203 ("scsi: handle more device
handler setup/teardown in common code").

The bug is that the alua detach() callout will try to access the
sddev->scsi_dh_data, but we have already set it to NULL. This patch
moves the clearing of that field to after detach() is called.

	Signed-off-by: Mike Christie <michaelc@cs.wisc.edu>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 28072ad50ca7328bd99f9dba94ac27c723da0053)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/device_handler/scsi_dh.c
diff --cc drivers/scsi/device_handler/scsi_dh.c
index d8a8aac2c3db,1efebc9eedfb..000000000000
--- a/drivers/scsi/device_handler/scsi_dh.c
+++ b/drivers/scsi/device_handler/scsi_dh.c
@@@ -127,8 -134,15 +127,18 @@@ static void __detach_handler (struct kr
  	struct scsi_dh_data *scsi_dh_data =
  		container_of(kref, struct scsi_dh_data, kref);
  	struct scsi_device_handler *scsi_dh = scsi_dh_data->scsi_dh;
 -	struct scsi_device *sdev = scsi_dh_data->sdev;
  
++<<<<<<< HEAD
 +	scsi_dh->detach(scsi_dh_data->sdev);
++=======
+ 	scsi_dh->detach(sdev);
+ 
+ 	spin_lock_irq(sdev->request_queue->queue_lock);
+ 	sdev->scsi_dh_data = NULL;
+ 	spin_unlock_irq(sdev->request_queue->queue_lock);
+ 
+ 	sdev_printk(KERN_NOTICE, sdev, "%s: Detached\n", scsi_dh->name);
++>>>>>>> 28072ad50ca7 (scsi: fix device handler detach oops)
  	module_put(scsi_dh->module);
  }
  
* Unmerged path drivers/scsi/device_handler/scsi_dh.c
