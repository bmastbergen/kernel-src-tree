hv_netvsc: Fix the receive buffer size limit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit 11b2b653102571ac791885324371d9a1a17b900e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/11b2b653.failed

The max should be 31 MB on host with NVSP version > 2.

On legacy hosts (NVSP version <=2) only 15 MB receive buffer is allowed,
otherwise the buffer request will be rejected by the host, resulting
vNIC not coming up.

The NVSP version is only available after negotiation. So, we add the
limit checking for legacy hosts in netvsc_init_buf().

Fixes: 5023a6db73196 ("netvsc: increase default receive buffer size")
	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 11b2b653102571ac791885324371d9a1a17b900e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index 05d0110585ac,e5d16a8cf0d6..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -261,25 -239,45 +261,34 @@@ static void netvsc_destroy_buf(struct h
  	kfree(net_device->send_section_map);
  }
  
 -int netvsc_alloc_recv_comp_ring(struct netvsc_device *net_device, u32 q_idx)
 -{
 -	struct netvsc_channel *nvchan = &net_device->chan_table[q_idx];
 -	int node = cpu_to_node(nvchan->channel->target_cpu);
 -	size_t size;
 -
 -	size = net_device->recv_completion_cnt * sizeof(struct recv_comp_data);
 -	nvchan->mrc.slots = vzalloc_node(size, node);
 -	if (!nvchan->mrc.slots)
 -		nvchan->mrc.slots = vzalloc(size);
 -
 -	return nvchan->mrc.slots ? 0 : -ENOMEM;
 -}
 -
  static int netvsc_init_buf(struct hv_device *device,
 -			   struct netvsc_device *net_device,
 -			   const struct netvsc_device_info *device_info)
 +			   struct netvsc_device *net_device)
  {
 -	struct nvsp_1_message_send_receive_buffer_complete *resp;
 -	struct net_device *ndev = hv_get_drvdata(device);
 +	int ret = 0;
  	struct nvsp_message *init_packet;
 -	unsigned int buf_size;
 +	struct net_device *ndev;
  	size_t map_words;
 -	int ret = 0;
 +	int node;
  
 -	/* Get receive buffer area. */
 -	buf_size = device_info->recv_sections * device_info->recv_section_size;
 -	buf_size = roundup(buf_size, PAGE_SIZE);
 +	ndev = hv_get_drvdata(device);
  
 +	node = cpu_to_node(device->channel->target_cpu);
 +	net_device->recv_buf = vzalloc_node(net_device->recv_buf_size, node);
 +	if (!net_device->recv_buf)
 +		net_device->recv_buf = vzalloc(net_device->recv_buf_size);
 +
++<<<<<<< HEAD
++=======
+ 	/* Legacy hosts only allow smaller receive buffer */
+ 	if (net_device->nvsp_version <= NVSP_PROTOCOL_VERSION_2)
+ 		buf_size = min_t(unsigned int, buf_size,
+ 				 NETVSC_RECEIVE_BUFFER_SIZE_LEGACY);
+ 
+ 	net_device->recv_buf = vzalloc(buf_size);
++>>>>>>> 11b2b6531025 (hv_netvsc: Fix the receive buffer size limit)
  	if (!net_device->recv_buf) {
 -		netdev_err(ndev,
 -			   "unable to allocate receive buffer of size %u\n",
 -			   buf_size);
 +		netdev_err(ndev, "unable to allocate receive "
 +			"buffer of size %d\n", net_device->recv_buf_size);
  		ret = -ENOMEM;
  		goto cleanup;
  	}
diff --git a/drivers/net/hyperv/hyperv_net.h b/drivers/net/hyperv/hyperv_net.h
index a32d7f1b2505..fd960aed94de 100644
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@ -619,9 +619,11 @@ struct nvsp_message {
 #define NETVSC_MTU 65536
 #define NETVSC_MTU_MIN 68
 
-#define NETVSC_RECEIVE_BUFFER_SIZE		(1024*1024*16)	/* 16MB */
-#define NETVSC_RECEIVE_BUFFER_SIZE_LEGACY	(1024*1024*15)  /* 15MB */
+/* Max buffer sizes allowed by a host */
+#define NETVSC_RECEIVE_BUFFER_SIZE		(1024 * 1024 * 31) /* 31MB */
+#define NETVSC_RECEIVE_BUFFER_SIZE_LEGACY	(1024 * 1024 * 15) /* 15MB */
 #define NETVSC_SEND_BUFFER_SIZE			(1024 * 1024 * 15)   /* 15MB */
+
 #define NETVSC_INVALID_INDEX			-1
 
 
* Unmerged path drivers/net/hyperv/netvsc.c
