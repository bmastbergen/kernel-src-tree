md: factor out set_in_sync()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [md] factor out set_in_sync() (Nigel Croxon) [1506338]
Rebuild_FUZZ: 92.31%
commit-author NeilBrown <neilb@suse.com>
commit 6497709b5d1bccce7de1df678d5f147d614551d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6497709b.failed

Three separate places in md.c check if the number of active
writes is zero and, if so, sets mddev->in_sync.

There are a few differences, but there shouldn't be:
- it is always appropriate to notify the change in
  sysfs_state, and there is no need to do this outside a
  spin-locked region.
- we never need to check ->recovery_cp.  The state of resync
  is not relevant for whether there are any pending writes
  or not (which is what ->in_sync reports).

So create set_in_sync() which does the correct tests and
makes the correct changes, and call this in all three
places.

Any behaviour changes here a minor and cosmetic.

	Signed-off-by: NeilBrown <neilb@suse.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit 6497709b5d1bccce7de1df678d5f147d614551d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 4c75b0e4a2a4,5951dea75aba..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -8345,22 -8568,22 +8343,27 @@@ void md_check_recovery(struct mddev *md
  			goto unlock;
  		}
  
++<<<<<<< HEAD
 +		if (!mddev->external) {
 +			int did_change = 0;
- 			spin_lock(&mddev->lock);
- 			if (mddev->safemode &&
- 			    !atomic_read(&mddev->writes_pending) &&
- 			    !mddev->in_sync &&
- 			    mddev->recovery_cp == MaxSector) {
- 				mddev->in_sync = 1;
- 				did_change = 1;
- 				set_bit(MD_SB_CHANGE_CLEAN, &mddev->sb_flags);
++=======
+ 		if (mddev_is_clustered(mddev)) {
+ 			struct md_rdev *rdev;
+ 			/* kick the device if another node issued a
+ 			 * remove disk.
+ 			 */
+ 			rdev_for_each(rdev, mddev) {
+ 				if (test_and_clear_bit(ClusterRemove, &rdev->flags) &&
+ 						rdev->raid_disk < 0)
+ 					md_kick_rdev_from_array(rdev);
  			}
- 			if (mddev->safemode == 1)
- 				mddev->safemode = 0;
+ 		}
+ 
+ 		if (!mddev->external && !mddev->in_sync) {
++>>>>>>> 6497709b5d1b (md: factor out set_in_sync())
+ 			spin_lock(&mddev->lock);
+ 			set_in_sync(mddev);
  			spin_unlock(&mddev->lock);
- 			if (did_change)
- 				sysfs_notify_dirent_safe(mddev->sysfs_state);
  		}
  
  		if (mddev->sb_flags)
* Unmerged path drivers/md/md.c
