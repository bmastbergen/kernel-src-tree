ACPI / CPPC: support for batching CPPC requests

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Prakash, Prashanth <pprakash@codeaurora.org>
commit 80b8286aeec056d21bffed2d1ece3904516e9c91
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/80b8286a.failed

CPPC defined in section 8.4.7 of ACPI 6.0 specification suggests
"To amortize the cost of PCC transactions, OSPM should read or write
all PCC registers via a single read or write command when possible"
This patch enables opportunistic batching of frequency transition
requests whenever the request happen to overlap in time.

Currently the access to pcc is serialized by a spin lock which does
not scale well as we increase the number of cores in the system. This
patch improves the scalability by allowing the differnt CPU cores to
update PCC subspace in parallel and by batching requests which will
reduce the certain types of operation(checking command completion bit,
ringing doorbell) by a significant margin.

Profiling shows significant improvement in the overall effeciency
to service freq. transition requests. With this patch we observe close
to 30% of the frequency transition requests being batched with other
requests while running apache bench on a ARM platform with 6
independent domains(or sets of related cpus).

	Signed-off-by: Prashanth Prakash <pprakash@codeaurora.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 80b8286aeec056d21bffed2d1ece3904516e9c91)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/cppc_acpi.c
#	include/acpi/cppc_acpi.h
* Unmerged path drivers/acpi/cppc_acpi.c
* Unmerged path include/acpi/cppc_acpi.h
* Unmerged path drivers/acpi/cppc_acpi.c
* Unmerged path include/acpi/cppc_acpi.h
