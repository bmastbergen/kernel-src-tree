ipv4: fib: Fix metrics match when deleting a route

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Phil Sutter <phil@nwl.cc>
commit d03a45572efa068fa64db211d6d45222660e76c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d03a4557.failed

The recently added fib_metrics_match() causes a regression for routes
with both RTAX_FEATURES and RTAX_CC_ALGO if the latter has
TCP_CONG_NEEDS_ECN flag set:

| # ip link add d0 type dummy
| # ip link set d0 up
| # ip route add 172.29.29.0/24 dev d0 features ecn congctl dctcp
| # ip route del 172.29.29.0/24 dev d0 features ecn congctl dctcp
| RTNETLINK answers: No such process

During route insertion, fib_convert_metrics() detects that the given CC
algo requires ECN and hence sets DST_FEATURE_ECN_CA bit in
RTAX_FEATURES.

During route deletion though, fib_metrics_match() compares stored
RTAX_FEATURES value with that from userspace (which obviously has no
knowledge about DST_FEATURE_ECN_CA) and fails.

Fixes: 5f9ae3d9e7e4a ("ipv4: do metrics match when looking up and deleting a route")
	Signed-off-by: Phil Sutter <phil@nwl.cc>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d03a45572efa068fa64db211d6d45222660e76c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_semantics.c
diff --cc net/ipv4/fib_semantics.c
index 22ec44cc4020,c586597da20d..000000000000
--- a/net/ipv4/fib_semantics.c
+++ b/net/ipv4/fib_semantics.c
@@@ -661,6 -688,44 +661,47 @@@ int fib_nh_match(struct fib_config *cfg
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ bool fib_metrics_match(struct fib_config *cfg, struct fib_info *fi)
+ {
+ 	struct nlattr *nla;
+ 	int remaining;
+ 
+ 	if (!cfg->fc_mx)
+ 		return true;
+ 
+ 	nla_for_each_attr(nla, cfg->fc_mx, cfg->fc_mx_len, remaining) {
+ 		int type = nla_type(nla);
+ 		u32 fi_val, val;
+ 
+ 		if (!type)
+ 			continue;
+ 		if (type > RTAX_MAX)
+ 			return false;
+ 
+ 		if (type == RTAX_CC_ALGO) {
+ 			char tmp[TCP_CA_NAME_MAX];
+ 			bool ecn_ca = false;
+ 
+ 			nla_strlcpy(tmp, nla, sizeof(tmp));
+ 			val = tcp_ca_get_key_by_name(fi->fib_net, tmp, &ecn_ca);
+ 		} else {
+ 			val = nla_get_u32(nla);
+ 		}
+ 
+ 		fi_val = fi->fib_metrics->metrics[type - 1];
+ 		if (type == RTAX_FEATURES)
+ 			fi_val &= ~DST_FEATURE_ECN_CA;
+ 
+ 		if (fi_val != val)
+ 			return false;
+ 	}
+ 
+ 	return true;
+ }
+ 
++>>>>>>> d03a45572efa (ipv4: fib: Fix metrics match when deleting a route)
  
  /*
   * Picture
* Unmerged path net/ipv4/fib_semantics.c
