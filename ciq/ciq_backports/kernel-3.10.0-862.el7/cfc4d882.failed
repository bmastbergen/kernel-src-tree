selinux: Implement Infiniband PKey "Access" access vector

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Daniel Jurgens <danielj@mellanox.com>
commit cfc4d882d41780d93471066d57d4630995427b29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/cfc4d882.failed

Add a type and access vector for PKeys. Implement the ib_pkey_access
hook to check that the caller has permission to access the PKey on the
given subnet prefix. Add an interface to get the PKey SID. Walk the PKey
ocontexts to find an entry for the given subnet prefix and pkey.

	Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
	Reviewed-by: James Morris <james.l.morris@oracle.com>
	Acked-by: Doug Ledford <dledford@redhat.com>
	Signed-off-by: Paul Moore <paul@paul-moore.com>
(cherry picked from commit cfc4d882d41780d93471066d57d4630995427b29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/lsm_audit.h
#	security/selinux/hooks.c
#	security/selinux/include/classmap.h
diff --cc include/linux/lsm_audit.h
index a3bfbfe0f1ef,0df5639a4ff4..000000000000
--- a/include/linux/lsm_audit.h
+++ b/include/linux/lsm_audit.h
@@@ -40,6 -40,16 +40,19 @@@ struct lsm_network_audit 
  	} fam;
  };
  
++<<<<<<< HEAD
++=======
+ struct lsm_ioctlop_audit {
+ 	struct path path;
+ 	u16 cmd;
+ };
+ 
+ struct lsm_ibpkey_audit {
+ 	u64	subnet_prefix;
+ 	u16	pkey;
+ };
+ 
++>>>>>>> cfc4d882d417 (selinux: Implement Infiniband PKey "Access" access vector)
  /* Auxiliary data to use in generating the audit record. */
  struct common_audit_data {
  	char type;
@@@ -53,7 -63,9 +66,13 @@@
  #define LSM_AUDIT_DATA_KMOD	8
  #define LSM_AUDIT_DATA_INODE	9
  #define LSM_AUDIT_DATA_DENTRY	10
++<<<<<<< HEAD
 +#define LSM_AUDIT_DATA_FILE	11
++=======
+ #define LSM_AUDIT_DATA_IOCTL_OP	11
+ #define LSM_AUDIT_DATA_FILE	12
+ #define LSM_AUDIT_DATA_IBPKEY	13
++>>>>>>> cfc4d882d417 (selinux: Implement Infiniband PKey "Access" access vector)
  	union 	{
  		struct path path;
  		struct dentry *dentry;
@@@ -69,7 -81,9 +88,8 @@@
  		} key_struct;
  #endif
  		char *kmod_name;
 -		struct lsm_ioctlop_audit *op;
  		struct file *file;
+ 		struct lsm_ibpkey_audit *ibpkey;
  	} u;
  	/* this union contains LSM specific data */
  	union {
diff --cc security/selinux/hooks.c
index 7c150cbbfbc6,b59255f86274..000000000000
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@@ -5961,200 -6145,252 +5961,286 @@@ static int selinux_key_getsecurity(stru
  	*_buffer = context;
  	return rc;
  }
 +
  #endif
  
++<<<<<<< HEAD
 +static struct security_operations selinux_ops = {
 +	.name =				"selinux",
++=======
+ #ifdef CONFIG_SECURITY_INFINIBAND
+ static int selinux_ib_pkey_access(void *ib_sec, u64 subnet_prefix, u16 pkey_val)
+ {
+ 	struct common_audit_data ad;
+ 	int err;
+ 	u32 sid = 0;
+ 	struct ib_security_struct *sec = ib_sec;
+ 	struct lsm_ibpkey_audit ibpkey;
+ 
+ 	err = security_ib_pkey_sid(subnet_prefix, pkey_val, &sid);
+ 	if (err)
+ 		return err;
+ 
+ 	ad.type = LSM_AUDIT_DATA_IBPKEY;
+ 	ibpkey.subnet_prefix = subnet_prefix;
+ 	ibpkey.pkey = pkey_val;
+ 	ad.u.ibpkey = &ibpkey;
+ 	return avc_has_perm(sec->sid, sid,
+ 			    SECCLASS_INFINIBAND_PKEY,
+ 			    INFINIBAND_PKEY__ACCESS, &ad);
+ }
+ 
+ static int selinux_ib_alloc_security(void **ib_sec)
+ {
+ 	struct ib_security_struct *sec;
 -
 -	sec = kzalloc(sizeof(*sec), GFP_KERNEL);
 -	if (!sec)
 -		return -ENOMEM;
 -	sec->sid = current_sid();
 -
 -	*ib_sec = sec;
 -	return 0;
 -}
 -
 -static void selinux_ib_free_security(void *ib_sec)
 -{
 -	kfree(ib_sec);
 -}
 -#endif
 -
 -static struct security_hook_list selinux_hooks[] __lsm_ro_after_init = {
 -	LSM_HOOK_INIT(binder_set_context_mgr, selinux_binder_set_context_mgr),
 -	LSM_HOOK_INIT(binder_transaction, selinux_binder_transaction),
 -	LSM_HOOK_INIT(binder_transfer_binder, selinux_binder_transfer_binder),
 -	LSM_HOOK_INIT(binder_transfer_file, selinux_binder_transfer_file),
 -
 -	LSM_HOOK_INIT(ptrace_access_check, selinux_ptrace_access_check),
 -	LSM_HOOK_INIT(ptrace_traceme, selinux_ptrace_traceme),
 -	LSM_HOOK_INIT(capget, selinux_capget),
 -	LSM_HOOK_INIT(capset, selinux_capset),
 -	LSM_HOOK_INIT(capable, selinux_capable),
 -	LSM_HOOK_INIT(quotactl, selinux_quotactl),
 -	LSM_HOOK_INIT(quota_on, selinux_quota_on),
 -	LSM_HOOK_INIT(syslog, selinux_syslog),
 -	LSM_HOOK_INIT(vm_enough_memory, selinux_vm_enough_memory),
 -
 -	LSM_HOOK_INIT(netlink_send, selinux_netlink_send),
 -
 -	LSM_HOOK_INIT(bprm_set_creds, selinux_bprm_set_creds),
 -	LSM_HOOK_INIT(bprm_committing_creds, selinux_bprm_committing_creds),
 -	LSM_HOOK_INIT(bprm_committed_creds, selinux_bprm_committed_creds),
 -	LSM_HOOK_INIT(bprm_secureexec, selinux_bprm_secureexec),
 -
 -	LSM_HOOK_INIT(sb_alloc_security, selinux_sb_alloc_security),
 -	LSM_HOOK_INIT(sb_free_security, selinux_sb_free_security),
 -	LSM_HOOK_INIT(sb_copy_data, selinux_sb_copy_data),
 -	LSM_HOOK_INIT(sb_remount, selinux_sb_remount),
 -	LSM_HOOK_INIT(sb_kern_mount, selinux_sb_kern_mount),
 -	LSM_HOOK_INIT(sb_show_options, selinux_sb_show_options),
 -	LSM_HOOK_INIT(sb_statfs, selinux_sb_statfs),
 -	LSM_HOOK_INIT(sb_mount, selinux_mount),
 -	LSM_HOOK_INIT(sb_umount, selinux_umount),
 -	LSM_HOOK_INIT(sb_set_mnt_opts, selinux_set_mnt_opts),
 -	LSM_HOOK_INIT(sb_clone_mnt_opts, selinux_sb_clone_mnt_opts),
 -	LSM_HOOK_INIT(sb_parse_opts_str, selinux_parse_opts_str),
 -
 -	LSM_HOOK_INIT(dentry_init_security, selinux_dentry_init_security),
 -	LSM_HOOK_INIT(dentry_create_files_as, selinux_dentry_create_files_as),
 -
 -	LSM_HOOK_INIT(inode_alloc_security, selinux_inode_alloc_security),
 -	LSM_HOOK_INIT(inode_free_security, selinux_inode_free_security),
 -	LSM_HOOK_INIT(inode_init_security, selinux_inode_init_security),
 -	LSM_HOOK_INIT(inode_create, selinux_inode_create),
 -	LSM_HOOK_INIT(inode_link, selinux_inode_link),
 -	LSM_HOOK_INIT(inode_unlink, selinux_inode_unlink),
 -	LSM_HOOK_INIT(inode_symlink, selinux_inode_symlink),
 -	LSM_HOOK_INIT(inode_mkdir, selinux_inode_mkdir),
 -	LSM_HOOK_INIT(inode_rmdir, selinux_inode_rmdir),
 -	LSM_HOOK_INIT(inode_mknod, selinux_inode_mknod),
 -	LSM_HOOK_INIT(inode_rename, selinux_inode_rename),
 -	LSM_HOOK_INIT(inode_readlink, selinux_inode_readlink),
 -	LSM_HOOK_INIT(inode_follow_link, selinux_inode_follow_link),
 -	LSM_HOOK_INIT(inode_permission, selinux_inode_permission),
 -	LSM_HOOK_INIT(inode_setattr, selinux_inode_setattr),
 -	LSM_HOOK_INIT(inode_getattr, selinux_inode_getattr),
 -	LSM_HOOK_INIT(inode_setxattr, selinux_inode_setxattr),
 -	LSM_HOOK_INIT(inode_post_setxattr, selinux_inode_post_setxattr),
 -	LSM_HOOK_INIT(inode_getxattr, selinux_inode_getxattr),
 -	LSM_HOOK_INIT(inode_listxattr, selinux_inode_listxattr),
 -	LSM_HOOK_INIT(inode_removexattr, selinux_inode_removexattr),
 -	LSM_HOOK_INIT(inode_getsecurity, selinux_inode_getsecurity),
 -	LSM_HOOK_INIT(inode_setsecurity, selinux_inode_setsecurity),
 -	LSM_HOOK_INIT(inode_listsecurity, selinux_inode_listsecurity),
 -	LSM_HOOK_INIT(inode_getsecid, selinux_inode_getsecid),
 -	LSM_HOOK_INIT(inode_copy_up, selinux_inode_copy_up),
 -	LSM_HOOK_INIT(inode_copy_up_xattr, selinux_inode_copy_up_xattr),
 -
 -	LSM_HOOK_INIT(file_permission, selinux_file_permission),
 -	LSM_HOOK_INIT(file_alloc_security, selinux_file_alloc_security),
 -	LSM_HOOK_INIT(file_free_security, selinux_file_free_security),
 -	LSM_HOOK_INIT(file_ioctl, selinux_file_ioctl),
 -	LSM_HOOK_INIT(mmap_file, selinux_mmap_file),
 -	LSM_HOOK_INIT(mmap_addr, selinux_mmap_addr),
 -	LSM_HOOK_INIT(file_mprotect, selinux_file_mprotect),
 -	LSM_HOOK_INIT(file_lock, selinux_file_lock),
 -	LSM_HOOK_INIT(file_fcntl, selinux_file_fcntl),
 -	LSM_HOOK_INIT(file_set_fowner, selinux_file_set_fowner),
 -	LSM_HOOK_INIT(file_send_sigiotask, selinux_file_send_sigiotask),
 -	LSM_HOOK_INIT(file_receive, selinux_file_receive),
 -
 -	LSM_HOOK_INIT(file_open, selinux_file_open),
 -
 -	LSM_HOOK_INIT(task_alloc, selinux_task_alloc),
 -	LSM_HOOK_INIT(cred_alloc_blank, selinux_cred_alloc_blank),
 -	LSM_HOOK_INIT(cred_free, selinux_cred_free),
 -	LSM_HOOK_INIT(cred_prepare, selinux_cred_prepare),
 -	LSM_HOOK_INIT(cred_transfer, selinux_cred_transfer),
 -	LSM_HOOK_INIT(kernel_act_as, selinux_kernel_act_as),
 -	LSM_HOOK_INIT(kernel_create_files_as, selinux_kernel_create_files_as),
 -	LSM_HOOK_INIT(kernel_module_request, selinux_kernel_module_request),
 -	LSM_HOOK_INIT(kernel_read_file, selinux_kernel_read_file),
 -	LSM_HOOK_INIT(task_setpgid, selinux_task_setpgid),
 -	LSM_HOOK_INIT(task_getpgid, selinux_task_getpgid),
 -	LSM_HOOK_INIT(task_getsid, selinux_task_getsid),
 -	LSM_HOOK_INIT(task_getsecid, selinux_task_getsecid),
 -	LSM_HOOK_INIT(task_setnice, selinux_task_setnice),
 -	LSM_HOOK_INIT(task_setioprio, selinux_task_setioprio),
 -	LSM_HOOK_INIT(task_getioprio, selinux_task_getioprio),
 -	LSM_HOOK_INIT(task_prlimit, selinux_task_prlimit),
 -	LSM_HOOK_INIT(task_setrlimit, selinux_task_setrlimit),
 -	LSM_HOOK_INIT(task_setscheduler, selinux_task_setscheduler),
 -	LSM_HOOK_INIT(task_getscheduler, selinux_task_getscheduler),
 -	LSM_HOOK_INIT(task_movememory, selinux_task_movememory),
 -	LSM_HOOK_INIT(task_kill, selinux_task_kill),
 -	LSM_HOOK_INIT(task_to_inode, selinux_task_to_inode),
 -
 -	LSM_HOOK_INIT(ipc_permission, selinux_ipc_permission),
 -	LSM_HOOK_INIT(ipc_getsecid, selinux_ipc_getsecid),
 -
 -	LSM_HOOK_INIT(msg_msg_alloc_security, selinux_msg_msg_alloc_security),
 -	LSM_HOOK_INIT(msg_msg_free_security, selinux_msg_msg_free_security),
 -
 -	LSM_HOOK_INIT(msg_queue_alloc_security,
 -			selinux_msg_queue_alloc_security),
 -	LSM_HOOK_INIT(msg_queue_free_security, selinux_msg_queue_free_security),
 -	LSM_HOOK_INIT(msg_queue_associate, selinux_msg_queue_associate),
 -	LSM_HOOK_INIT(msg_queue_msgctl, selinux_msg_queue_msgctl),
 -	LSM_HOOK_INIT(msg_queue_msgsnd, selinux_msg_queue_msgsnd),
 -	LSM_HOOK_INIT(msg_queue_msgrcv, selinux_msg_queue_msgrcv),
 -
 -	LSM_HOOK_INIT(shm_alloc_security, selinux_shm_alloc_security),
 -	LSM_HOOK_INIT(shm_free_security, selinux_shm_free_security),
 -	LSM_HOOK_INIT(shm_associate, selinux_shm_associate),
 -	LSM_HOOK_INIT(shm_shmctl, selinux_shm_shmctl),
 -	LSM_HOOK_INIT(shm_shmat, selinux_shm_shmat),
 -
 -	LSM_HOOK_INIT(sem_alloc_security, selinux_sem_alloc_security),
 -	LSM_HOOK_INIT(sem_free_security, selinux_sem_free_security),
 -	LSM_HOOK_INIT(sem_associate, selinux_sem_associate),
 -	LSM_HOOK_INIT(sem_semctl, selinux_sem_semctl),
 -	LSM_HOOK_INIT(sem_semop, selinux_sem_semop),
 -
 -	LSM_HOOK_INIT(d_instantiate, selinux_d_instantiate),
 -
++>>>>>>> cfc4d882d417 (selinux: Implement Infiniband PKey "Access" access vector)
 +
 +	.ptrace_access_check =		selinux_ptrace_access_check,
 +	.ptrace_traceme =		selinux_ptrace_traceme,
 +	.capget =			selinux_capget,
 +	.capset =			selinux_capset,
 +	.capable =			selinux_capable,
 +	.quotactl =			selinux_quotactl,
 +	.quota_on =			selinux_quota_on,
 +	.syslog =			selinux_syslog,
 +	.vm_enough_memory =		selinux_vm_enough_memory,
 +
 +	.netlink_send =			selinux_netlink_send,
 +
 +	.bprm_set_creds =		selinux_bprm_set_creds,
 +	.bprm_committing_creds =	selinux_bprm_committing_creds,
 +	.bprm_committed_creds =		selinux_bprm_committed_creds,
 +	.bprm_secureexec =		selinux_bprm_secureexec,
 +
 +	.sb_alloc_security =		selinux_sb_alloc_security,
 +	.sb_free_security =		selinux_sb_free_security,
 +	.sb_copy_data =			selinux_sb_copy_data,
 +	.sb_remount =			selinux_sb_remount,
 +	.sb_kern_mount =		selinux_sb_kern_mount,
 +	.sb_show_options =		selinux_sb_show_options,
 +	.sb_statfs =			selinux_sb_statfs,
 +	.sb_mount =			selinux_mount,
 +	.sb_umount =			selinux_umount,
 +	.sb_set_mnt_opts =		selinux_set_mnt_opts,
 +	.sb_clone_mnt_opts =		selinux_sb_clone_mnt_opts,
 +	.sb_parse_opts_str = 		selinux_parse_opts_str,
 +
 +	.dentry_init_security =		selinux_dentry_init_security,
 +	.dentry_create_files_as =	selinux_dentry_create_files_as,
 +
 +	.inode_alloc_security =		selinux_inode_alloc_security,
 +	.inode_free_security =		selinux_inode_free_security,
 +	.inode_init_security =		selinux_inode_init_security,
 +	.inode_create =			selinux_inode_create,
 +	.inode_link =			selinux_inode_link,
 +	.inode_unlink =			selinux_inode_unlink,
 +	.inode_symlink =		selinux_inode_symlink,
 +	.inode_mkdir =			selinux_inode_mkdir,
 +	.inode_rmdir =			selinux_inode_rmdir,
 +	.inode_mknod =			selinux_inode_mknod,
 +	.inode_rename =			selinux_inode_rename,
 +	.inode_readlink =		selinux_inode_readlink,
 +	.inode_follow_link =		selinux_inode_follow_link,
 +	.inode_permission =		selinux_inode_permission,
 +	.inode_setattr =		selinux_inode_setattr,
 +	.inode_getattr =		selinux_inode_getattr,
 +	.inode_setxattr =		selinux_inode_setxattr,
 +	.inode_post_setxattr =		selinux_inode_post_setxattr,
 +	.inode_getxattr =		selinux_inode_getxattr,
 +	.inode_listxattr =		selinux_inode_listxattr,
 +	.inode_removexattr =		selinux_inode_removexattr,
 +	.inode_getsecurity =		selinux_inode_getsecurity,
 +	.inode_setsecurity =		selinux_inode_setsecurity,
 +	.inode_listsecurity =		selinux_inode_listsecurity,
 +	.inode_getsecid =		selinux_inode_getsecid,
 +	.inode_copy_up =		selinux_inode_copy_up,
 +	.inode_copy_up_xattr =		selinux_inode_copy_up_xattr,
 +
 +	.file_permission =		selinux_file_permission,
 +	.file_alloc_security =		selinux_file_alloc_security,
 +	.file_free_security =		selinux_file_free_security,
 +	.file_ioctl =			selinux_file_ioctl,
 +	.mmap_file =			selinux_mmap_file,
 +	.mmap_addr =			selinux_mmap_addr,
 +	.file_mprotect =		selinux_file_mprotect,
 +	.file_lock =			selinux_file_lock,
 +	.file_fcntl =			selinux_file_fcntl,
 +	.file_set_fowner =		selinux_file_set_fowner,
 +	.file_send_sigiotask =		selinux_file_send_sigiotask,
 +	.file_receive =			selinux_file_receive,
 +
 +	.file_open =			selinux_file_open,
 +
 +	.task_create =			selinux_task_create,
 +	.cred_alloc_blank =		selinux_cred_alloc_blank,
 +	.cred_free =			selinux_cred_free,
 +	.cred_prepare =			selinux_cred_prepare,
 +	.cred_transfer =		selinux_cred_transfer,
 +	.kernel_act_as =		selinux_kernel_act_as,
 +	.kernel_create_files_as =	selinux_kernel_create_files_as,
 +	.kernel_module_request =	selinux_kernel_module_request,
 +	.task_setpgid =			selinux_task_setpgid,
 +	.task_getpgid =			selinux_task_getpgid,
 +	.task_getsid =			selinux_task_getsid,
 +	.task_getsecid =		selinux_task_getsecid,
 +	.task_setnice =			selinux_task_setnice,
 +	.task_setioprio =		selinux_task_setioprio,
 +	.task_getioprio =		selinux_task_getioprio,
 +	.task_setrlimit =		selinux_task_setrlimit,
 +	.task_setscheduler =		selinux_task_setscheduler,
 +	.task_getscheduler =		selinux_task_getscheduler,
 +	.task_movememory =		selinux_task_movememory,
 +	.task_kill =			selinux_task_kill,
 +	.task_wait =			selinux_task_wait,
 +	.task_to_inode =		selinux_task_to_inode,
 +
 +	.ipc_permission =		selinux_ipc_permission,
 +	.ipc_getsecid =			selinux_ipc_getsecid,
 +
 +	.msg_msg_alloc_security =	selinux_msg_msg_alloc_security,
 +	.msg_msg_free_security =	selinux_msg_msg_free_security,
 +
 +	.msg_queue_alloc_security =	selinux_msg_queue_alloc_security,
 +	.msg_queue_free_security =	selinux_msg_queue_free_security,
 +	.msg_queue_associate =		selinux_msg_queue_associate,
 +	.msg_queue_msgctl =		selinux_msg_queue_msgctl,
 +	.msg_queue_msgsnd =		selinux_msg_queue_msgsnd,
 +	.msg_queue_msgrcv =		selinux_msg_queue_msgrcv,
 +
 +	.shm_alloc_security =		selinux_shm_alloc_security,
 +	.shm_free_security =		selinux_shm_free_security,
 +	.shm_associate =		selinux_shm_associate,
 +	.shm_shmctl =			selinux_shm_shmctl,
 +	.shm_shmat =			selinux_shm_shmat,
 +
 +	.sem_alloc_security =		selinux_sem_alloc_security,
 +	.sem_free_security =		selinux_sem_free_security,
 +	.sem_associate =		selinux_sem_associate,
 +	.sem_semctl =			selinux_sem_semctl,
 +	.sem_semop =			selinux_sem_semop,
 +
 +	.d_instantiate =		selinux_d_instantiate,
 +
 +	.getprocattr =			selinux_getprocattr,
 +	.setprocattr =			selinux_setprocattr,
 +
 +	.ismaclabel =			selinux_ismaclabel,
 +	.secid_to_secctx =		selinux_secid_to_secctx,
 +	.secctx_to_secid =		selinux_secctx_to_secid,
 +	.release_secctx =		selinux_release_secctx,
 +	.inode_invalidate_secctx =	selinux_inode_invalidate_secctx,
 +	.inode_notifysecctx =		selinux_inode_notifysecctx,
 +	.inode_setsecctx =		selinux_inode_setsecctx,
 +	.inode_getsecctx =		selinux_inode_getsecctx,
 +
 +	.unix_stream_connect =		selinux_socket_unix_stream_connect,
 +	.unix_may_send =		selinux_socket_unix_may_send,
 +
 +	.socket_create =		selinux_socket_create,
 +	.socket_post_create =		selinux_socket_post_create,
 +	.socket_bind =			selinux_socket_bind,
 +	.socket_connect =		selinux_socket_connect,
 +	.socket_listen =		selinux_socket_listen,
 +	.socket_accept =		selinux_socket_accept,
 +	.socket_sendmsg =		selinux_socket_sendmsg,
 +	.socket_recvmsg =		selinux_socket_recvmsg,
 +	.socket_getsockname =		selinux_socket_getsockname,
 +	.socket_getpeername =		selinux_socket_getpeername,
 +	.socket_getsockopt =		selinux_socket_getsockopt,
 +	.socket_setsockopt =		selinux_socket_setsockopt,
 +	.socket_shutdown =		selinux_socket_shutdown,
 +	.socket_sock_rcv_skb =		selinux_socket_sock_rcv_skb,
 +	.socket_getpeersec_stream =	selinux_socket_getpeersec_stream,
 +	.socket_getpeersec_dgram =	selinux_socket_getpeersec_dgram,
 +	.sk_alloc_security =		selinux_sk_alloc_security,
 +	.sk_free_security =		selinux_sk_free_security,
 +	.sk_clone_security =		selinux_sk_clone_security,
 +	.sk_getsecid =			selinux_sk_getsecid,
 +	.sock_graft =			selinux_sock_graft,
 +	.inet_conn_request =		selinux_inet_conn_request,
 +	.inet_csk_clone =		selinux_inet_csk_clone,
 +	.inet_conn_established =	selinux_inet_conn_established,
 +	.secmark_relabel_packet =	selinux_secmark_relabel_packet,
 +	.secmark_refcount_inc =		selinux_secmark_refcount_inc,
 +	.secmark_refcount_dec =		selinux_secmark_refcount_dec,
 +	.req_classify_flow =		selinux_req_classify_flow,
 +	.tun_dev_alloc_security =	selinux_tun_dev_alloc_security,
 +	.tun_dev_free_security =	selinux_tun_dev_free_security,
 +	.tun_dev_create =		selinux_tun_dev_create,
 +	.tun_dev_attach_queue =		selinux_tun_dev_attach_queue,
 +	.tun_dev_attach =		selinux_tun_dev_attach,
 +	.tun_dev_open =			selinux_tun_dev_open,
 +	.skb_owned_by =			selinux_skb_owned_by,
 +
++<<<<<<< HEAD
++=======
+ 	LSM_HOOK_INIT(getprocattr, selinux_getprocattr),
+ 	LSM_HOOK_INIT(setprocattr, selinux_setprocattr),
+ 
+ 	LSM_HOOK_INIT(ismaclabel, selinux_ismaclabel),
+ 	LSM_HOOK_INIT(secid_to_secctx, selinux_secid_to_secctx),
+ 	LSM_HOOK_INIT(secctx_to_secid, selinux_secctx_to_secid),
+ 	LSM_HOOK_INIT(release_secctx, selinux_release_secctx),
+ 	LSM_HOOK_INIT(inode_invalidate_secctx, selinux_inode_invalidate_secctx),
+ 	LSM_HOOK_INIT(inode_notifysecctx, selinux_inode_notifysecctx),
+ 	LSM_HOOK_INIT(inode_setsecctx, selinux_inode_setsecctx),
+ 	LSM_HOOK_INIT(inode_getsecctx, selinux_inode_getsecctx),
+ 
+ 	LSM_HOOK_INIT(unix_stream_connect, selinux_socket_unix_stream_connect),
+ 	LSM_HOOK_INIT(unix_may_send, selinux_socket_unix_may_send),
+ 
+ 	LSM_HOOK_INIT(socket_create, selinux_socket_create),
+ 	LSM_HOOK_INIT(socket_post_create, selinux_socket_post_create),
+ 	LSM_HOOK_INIT(socket_bind, selinux_socket_bind),
+ 	LSM_HOOK_INIT(socket_connect, selinux_socket_connect),
+ 	LSM_HOOK_INIT(socket_listen, selinux_socket_listen),
+ 	LSM_HOOK_INIT(socket_accept, selinux_socket_accept),
+ 	LSM_HOOK_INIT(socket_sendmsg, selinux_socket_sendmsg),
+ 	LSM_HOOK_INIT(socket_recvmsg, selinux_socket_recvmsg),
+ 	LSM_HOOK_INIT(socket_getsockname, selinux_socket_getsockname),
+ 	LSM_HOOK_INIT(socket_getpeername, selinux_socket_getpeername),
+ 	LSM_HOOK_INIT(socket_getsockopt, selinux_socket_getsockopt),
+ 	LSM_HOOK_INIT(socket_setsockopt, selinux_socket_setsockopt),
+ 	LSM_HOOK_INIT(socket_shutdown, selinux_socket_shutdown),
+ 	LSM_HOOK_INIT(socket_sock_rcv_skb, selinux_socket_sock_rcv_skb),
+ 	LSM_HOOK_INIT(socket_getpeersec_stream,
+ 			selinux_socket_getpeersec_stream),
+ 	LSM_HOOK_INIT(socket_getpeersec_dgram, selinux_socket_getpeersec_dgram),
+ 	LSM_HOOK_INIT(sk_alloc_security, selinux_sk_alloc_security),
+ 	LSM_HOOK_INIT(sk_free_security, selinux_sk_free_security),
+ 	LSM_HOOK_INIT(sk_clone_security, selinux_sk_clone_security),
+ 	LSM_HOOK_INIT(sk_getsecid, selinux_sk_getsecid),
+ 	LSM_HOOK_INIT(sock_graft, selinux_sock_graft),
+ 	LSM_HOOK_INIT(inet_conn_request, selinux_inet_conn_request),
+ 	LSM_HOOK_INIT(inet_csk_clone, selinux_inet_csk_clone),
+ 	LSM_HOOK_INIT(inet_conn_established, selinux_inet_conn_established),
+ 	LSM_HOOK_INIT(secmark_relabel_packet, selinux_secmark_relabel_packet),
+ 	LSM_HOOK_INIT(secmark_refcount_inc, selinux_secmark_refcount_inc),
+ 	LSM_HOOK_INIT(secmark_refcount_dec, selinux_secmark_refcount_dec),
+ 	LSM_HOOK_INIT(req_classify_flow, selinux_req_classify_flow),
+ 	LSM_HOOK_INIT(tun_dev_alloc_security, selinux_tun_dev_alloc_security),
+ 	LSM_HOOK_INIT(tun_dev_free_security, selinux_tun_dev_free_security),
+ 	LSM_HOOK_INIT(tun_dev_create, selinux_tun_dev_create),
+ 	LSM_HOOK_INIT(tun_dev_attach_queue, selinux_tun_dev_attach_queue),
+ 	LSM_HOOK_INIT(tun_dev_attach, selinux_tun_dev_attach),
+ 	LSM_HOOK_INIT(tun_dev_open, selinux_tun_dev_open),
+ #ifdef CONFIG_SECURITY_INFINIBAND
+ 	LSM_HOOK_INIT(ib_pkey_access, selinux_ib_pkey_access),
+ 	LSM_HOOK_INIT(ib_alloc_security, selinux_ib_alloc_security),
+ 	LSM_HOOK_INIT(ib_free_security, selinux_ib_free_security),
+ #endif
++>>>>>>> cfc4d882d417 (selinux: Implement Infiniband PKey "Access" access vector)
  #ifdef CONFIG_SECURITY_NETWORK_XFRM
 -	LSM_HOOK_INIT(xfrm_policy_alloc_security, selinux_xfrm_policy_alloc),
 -	LSM_HOOK_INIT(xfrm_policy_clone_security, selinux_xfrm_policy_clone),
 -	LSM_HOOK_INIT(xfrm_policy_free_security, selinux_xfrm_policy_free),
 -	LSM_HOOK_INIT(xfrm_policy_delete_security, selinux_xfrm_policy_delete),
 -	LSM_HOOK_INIT(xfrm_state_alloc, selinux_xfrm_state_alloc),
 -	LSM_HOOK_INIT(xfrm_state_alloc_acquire,
 -			selinux_xfrm_state_alloc_acquire),
 -	LSM_HOOK_INIT(xfrm_state_free_security, selinux_xfrm_state_free),
 -	LSM_HOOK_INIT(xfrm_state_delete_security, selinux_xfrm_state_delete),
 -	LSM_HOOK_INIT(xfrm_policy_lookup, selinux_xfrm_policy_lookup),
 -	LSM_HOOK_INIT(xfrm_state_pol_flow_match,
 -			selinux_xfrm_state_pol_flow_match),
 -	LSM_HOOK_INIT(xfrm_decode_session, selinux_xfrm_decode_session),
 +	.xfrm_policy_alloc_security =	selinux_xfrm_policy_alloc,
 +	.xfrm_policy_clone_security =	selinux_xfrm_policy_clone,
 +	.xfrm_policy_free_security =	selinux_xfrm_policy_free,
 +	.xfrm_policy_delete_security =	selinux_xfrm_policy_delete,
 +	.xfrm_state_alloc_security =	selinux_xfrm_state_alloc,
 +	.xfrm_state_free_security =	selinux_xfrm_state_free,
 +	.xfrm_state_delete_security =	selinux_xfrm_state_delete,
 +	.xfrm_policy_lookup =		selinux_xfrm_policy_lookup,
 +	.xfrm_state_pol_flow_match =	selinux_xfrm_state_pol_flow_match,
 +	.xfrm_decode_session =		selinux_xfrm_decode_session,
  #endif
  
  #ifdef CONFIG_KEYS
diff --cc security/selinux/include/classmap.h
index 14d04e63b1f0,0fec1c505f84..000000000000
--- a/security/selinux/include/classmap.h
+++ b/security/selinux/include/classmap.h
@@@ -151,5 -165,77 +151,76 @@@ struct security_class_mapping secclass_
  	{ "kernel_service", { "use_as_override", "create_files_as", NULL } },
  	{ "tun_socket",
  	  { COMMON_SOCK_PERMS, "attach_queue", NULL } },
++<<<<<<< HEAD
++=======
+ 	{ "binder", { "impersonate", "call", "set_context_mgr", "transfer",
+ 		      NULL } },
+ 	{ "cap_userns",
+ 	  { COMMON_CAP_PERMS, NULL } },
+ 	{ "cap2_userns",
+ 	  { COMMON_CAP2_PERMS, NULL } },
+ 	{ "sctp_socket",
+ 	  { COMMON_SOCK_PERMS,
+ 	    "node_bind", NULL } },
+ 	{ "icmp_socket",
+ 	  { COMMON_SOCK_PERMS,
+ 	    "node_bind", NULL } },
+ 	{ "ax25_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "ipx_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "netrom_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "atmpvc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "x25_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "rose_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "decnet_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "atmsvc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "rds_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "irda_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "pppox_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "llc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "can_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "tipc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "bluetooth_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "iucv_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "rxrpc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "isdn_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "phonet_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "ieee802154_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "caif_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "alg_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "nfc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "vsock_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "kcm_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "qipcrtr_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "smc_socket",
+ 	  { COMMON_SOCK_PERMS, NULL } },
+ 	{ "infiniband_pkey",
+ 	  { "access", NULL } },
++>>>>>>> cfc4d882d417 (selinux: Implement Infiniband PKey "Access" access vector)
  	{ NULL }
    };
 -
 -#if PF_MAX > 44
 -#error New address family defined, please update secclass_map.
 -#endif
* Unmerged path include/linux/lsm_audit.h
diff --git a/security/lsm_audit.c b/security/lsm_audit.c
index 1a05fabb6ba5..f3ad23776ac2 100644
--- a/security/lsm_audit.c
+++ b/security/lsm_audit.c
@@ -395,6 +395,17 @@ static void dump_common_audit_data(struct audit_buffer *ab,
 		audit_log_format(ab, " kmod=");
 		audit_log_untrustedstring(ab, a->u.kmod_name);
 		break;
+	case LSM_AUDIT_DATA_IBPKEY: {
+		struct in6_addr sbn_pfx;
+
+		memset(&sbn_pfx.s6_addr, 0,
+		       sizeof(sbn_pfx.s6_addr));
+		memcpy(&sbn_pfx.s6_addr, &a->u.ibpkey->subnet_prefix,
+		       sizeof(a->u.ibpkey->subnet_prefix));
+		audit_log_format(ab, " pkey=0x%x subnet_prefix=%pI6c",
+				 a->u.ibpkey->pkey, &sbn_pfx);
+		break;
+	}
 	} /* switch (a->type) */
 }
 
* Unmerged path security/selinux/hooks.c
* Unmerged path security/selinux/include/classmap.h
diff --git a/security/selinux/include/security.h b/security/selinux/include/security.h
index 227cdabfb447..c79ed24cb995 100644
--- a/security/selinux/include/security.h
+++ b/security/selinux/include/security.h
@@ -143,6 +143,8 @@ int security_get_user_sids(u32 callsid, char *username,
 
 int security_port_sid(u8 protocol, u16 port, u32 *out_sid);
 
+int security_ib_pkey_sid(u64 subnet_prefix, u16 pkey_num, u32 *out_sid);
+
 int security_netif_sid(char *name, u32 *if_sid);
 
 int security_node_sid(u16 domain, void *addr, u32 addrlen,
diff --git a/security/selinux/ss/services.c b/security/selinux/ss/services.c
index 58bcf8516c22..ce0b8d677f57 100644
--- a/security/selinux/ss/services.c
+++ b/security/selinux/ss/services.c
@@ -2018,6 +2018,46 @@ out:
 	return rc;
 }
 
+/**
+ * security_pkey_sid - Obtain the SID for a pkey.
+ * @subnet_prefix: Subnet Prefix
+ * @pkey_num: pkey number
+ * @out_sid: security identifier
+ */
+int security_ib_pkey_sid(u64 subnet_prefix, u16 pkey_num, u32 *out_sid)
+{
+	struct ocontext *c;
+	int rc = 0;
+
+	read_lock(&policy_rwlock);
+
+	c = policydb.ocontexts[OCON_IBPKEY];
+	while (c) {
+		if (c->u.ibpkey.low_pkey <= pkey_num &&
+		    c->u.ibpkey.high_pkey >= pkey_num &&
+		    c->u.ibpkey.subnet_prefix == subnet_prefix)
+			break;
+
+		c = c->next;
+	}
+
+	if (c) {
+		if (!c->sid[0]) {
+			rc = sidtab_context_to_sid(&sidtab,
+						   &c->context[0],
+						   &c->sid[0]);
+			if (rc)
+				goto out;
+		}
+		*out_sid = c->sid[0];
+	} else
+		*out_sid = SECINITSID_UNLABELED;
+
+out:
+	read_unlock(&policy_rwlock);
+	return rc;
+}
+
 /**
  * security_netif_sid - Obtain the SID for a network interface.
  * @name: interface name
