libnvdimm: fix the clear-error check in nsio_rw_bytes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Vishal Verma <vishal.l.verma@intel.com>
commit 7e5a21dfe5524a85705d3bc7b540c849cc13e9a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7e5a21df.failed

A leftover from the 'bandaid' fix that disabled BTT error clearing in
rw_bytes resulted in an incorrect check. After we converted these checks
over to use the NVDIMM_IO_ATOMIC flag, the ndns->claim check was both
redundant, and incorrect. Remove it.

Fixes: 3ae3d67ba705 ("libnvdimm: add an atomic vs process context flag to rw_bytes")
	Cc: <stable@vger.kernel.org>
	Cc: Dave Jiang <dave.jiang@intel.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 7e5a21dfe5524a85705d3bc7b540c849cc13e9a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/claim.c
diff --cc drivers/nvdimm/claim.c
index 961c67033dc8,f8ad92b4dcd2..000000000000
--- a/drivers/nvdimm/claim.c
+++ b/drivers/nvdimm/claim.c
@@@ -287,7 -289,7 +287,11 @@@ static int nsio_rw_bytes(struct nd_name
  		 * work around this collision.
  		 */
  		if (IS_ALIGNED(offset, 512) && IS_ALIGNED(size, 512)
++<<<<<<< HEAD
 +				&& (!ndns->claim || !is_nd_btt(ndns->claim))) {
++=======
+ 				&& !(flags & NVDIMM_IO_ATOMIC)) {
++>>>>>>> 7e5a21dfe552 (libnvdimm: fix the clear-error check in nsio_rw_bytes)
  			long cleared;
  
  			cleared = nvdimm_clear_poison(&ndns->dev,
* Unmerged path drivers/nvdimm/claim.c
