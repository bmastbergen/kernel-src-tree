rt2x00usb: mark device removed when get ENOENT usb error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Stanislaw Gruszka <sgruszka@redhat.com>
commit bfa62a52cad93686bb8d8171ea5288813248a7c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bfa62a52.failed

ENOENT usb error mean "specified interface or endpoint does not exist or
is not enabled". Mark device not present when we encounter this error
similar like we do with ENODEV error.

Otherwise we can have infinite loop in rt2x00usb_work_rxdone(), because
we remove and put again RX entries to the queue infinitely.

We can have similar situation when submit urb will fail all the time
with other error, so we need consider to limit number of entries
processed by rxdone work. But for now, since the patch fixes
reproducible soft lockup issue on single processor systems
and taken ENOENT error meaning, let apply this fix.

Patch adds additional ENOENT check not only in rx kick routine, but
also on other places where we check for ENODEV error.

	Reported-by: Richard Genoud <richard.genoud@gmail.com>
	Debugged-by: Richard Genoud <richard.genoud@gmail.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
	Tested-by: Richard Genoud <richard.genoud@gmail.com>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit bfa62a52cad93686bb8d8171ea5288813248a7c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/ralink/rt2x00/rt2x00usb.c
diff --cc drivers/net/wireless/ralink/rt2x00/rt2x00usb.c
index 7cf26c6124d1,086aad22743d..000000000000
--- a/drivers/net/wireless/ralink/rt2x00/rt2x00usb.c
+++ b/drivers/net/wireless/ralink/rt2x00/rt2x00usb.c
@@@ -319,11 -319,9 +319,15 @@@ static bool rt2x00usb_kick_tx_entry(str
  			  entry->skb->data, length,
  			  rt2x00usb_interrupt_txdone, entry);
  
 +	usb_anchor_urb(entry_priv->urb, rt2x00dev->anchor);
  	status = usb_submit_urb(entry_priv->urb, GFP_ATOMIC);
  	if (status) {
++<<<<<<< HEAD
 +		usb_unanchor_urb(entry_priv->urb);
 +		if (status == -ENODEV)
++=======
+ 		if (status == -ENODEV || status == -ENOENT)
++>>>>>>> bfa62a52cad9 (rt2x00usb: mark device removed when get ENOENT usb error)
  			clear_bit(DEVICE_STATE_PRESENT, &rt2x00dev->flags);
  		set_bit(ENTRY_DATA_IO_FAILED, &entry->flags);
  		rt2x00lib_dmadone(entry);
@@@ -410,11 -408,9 +414,15 @@@ static bool rt2x00usb_kick_rx_entry(str
  			  entry->skb->data, entry->skb->len,
  			  rt2x00usb_interrupt_rxdone, entry);
  
 +	usb_anchor_urb(entry_priv->urb, rt2x00dev->anchor);
  	status = usb_submit_urb(entry_priv->urb, GFP_ATOMIC);
  	if (status) {
++<<<<<<< HEAD
 +		usb_unanchor_urb(entry_priv->urb);
 +		if (status == -ENODEV)
++=======
+ 		if (status == -ENODEV || status == -ENOENT)
++>>>>>>> bfa62a52cad9 (rt2x00usb: mark device removed when get ENOENT usb error)
  			clear_bit(DEVICE_STATE_PRESENT, &rt2x00dev->flags);
  		set_bit(ENTRY_DATA_IO_FAILED, &entry->flags);
  		rt2x00lib_dmadone(entry);
* Unmerged path drivers/net/wireless/ralink/rt2x00/rt2x00usb.c
