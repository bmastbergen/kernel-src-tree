nfnetlink: remove nfnetlink_alloc_skb

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Florian Westphal <fw@strlen.de>
commit 905f0a739ad82c6371fb0cb0e71db14a750702ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/905f0a73.failed

Following mmapped netlink removal this code can be simplified by
removing the alloc wrapper.

	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 905f0a739ad82c6371fb0cb0e71db14a750702ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nfnetlink_log.c
diff --cc net/netfilter/nfnetlink_log.c
index 7f29d45ecc21,11f81c8385fc..000000000000
--- a/net/netfilter/nfnetlink_log.c
+++ b/net/netfilter/nfnetlink_log.c
@@@ -326,17 -330,13 +326,25 @@@ nfulnl_alloc_skb(u32 peer_portid, unsig
  	 * message.  WARNING: has to be <= 128k due to slab restrictions */
  
  	n = max(inst_size, pkt_size);
++<<<<<<< HEAD
 +	skb = nfnetlink_alloc_skb(&init_net, n, peer_portid, GFP_ATOMIC);
++=======
+ 	skb = alloc_skb(n, GFP_ATOMIC);
++>>>>>>> 905f0a739ad8 (nfnetlink: remove nfnetlink_alloc_skb)
  	if (!skb) {
  		if (n > pkt_size) {
  			/* try to allocate only as much as we need for current
  			 * packet */
  
++<<<<<<< HEAD
 +			skb = nfnetlink_alloc_skb(&init_net, pkt_size,
 +						  peer_portid, GFP_ATOMIC);
 +			if (!skb)
 +				pr_err("nfnetlink_log: can't even alloc %u bytes\n",
 +				       pkt_size);
++=======
+ 			skb = alloc_skb(pkt_size, GFP_ATOMIC);
++>>>>>>> 905f0a739ad8 (nfnetlink: remove nfnetlink_alloc_skb)
  		}
  	}
  
diff --git a/include/linux/netfilter/nfnetlink.h b/include/linux/netfilter/nfnetlink.h
index a3cb1592333b..7192383ab277 100644
--- a/include/linux/netfilter/nfnetlink.h
+++ b/include/linux/netfilter/nfnetlink.h
@@ -34,8 +34,6 @@ int nfnetlink_subsys_register(const struct nfnetlink_subsystem *n);
 int nfnetlink_subsys_unregister(const struct nfnetlink_subsystem *n);
 
 int nfnetlink_has_listeners(struct net *net, unsigned int group);
-struct sk_buff *nfnetlink_alloc_skb(struct net *net, unsigned int size,
-				    u32 dst_portid, gfp_t gfp_mask);
 int nfnetlink_send(struct sk_buff *skb, struct net *net, u32 portid,
 		   unsigned int group, int echo, gfp_t flags);
 int nfnetlink_set_err(struct net *net, u32 portid, u32 group, int error);
diff --git a/net/netfilter/nfnetlink.c b/net/netfilter/nfnetlink.c
index e1dfbf8bcc44..03b05eca74dd 100644
--- a/net/netfilter/nfnetlink.c
+++ b/net/netfilter/nfnetlink.c
@@ -121,13 +121,6 @@ int nfnetlink_has_listeners(struct net *net, unsigned int group)
 }
 EXPORT_SYMBOL_GPL(nfnetlink_has_listeners);
 
-struct sk_buff *nfnetlink_alloc_skb(struct net *net, unsigned int size,
-				    u32 dst_portid, gfp_t gfp_mask)
-{
-	return netlink_alloc_skb(net->nfnl, size, dst_portid, gfp_mask);
-}
-EXPORT_SYMBOL_GPL(nfnetlink_alloc_skb);
-
 int nfnetlink_send(struct sk_buff *skb, struct net *net, u32 portid,
 		   unsigned int group, int echo, gfp_t flags)
 {
* Unmerged path net/netfilter/nfnetlink_log.c
