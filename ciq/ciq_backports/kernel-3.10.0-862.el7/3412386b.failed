irq/affinity: Fix extra vecs calculation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Keith Busch <keith.busch@intel.com>
commit 3412386b531244f24a27c79ee003506a52a00848
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3412386b.failed

This fixes a math error calculating the extra_vecs. The error assumed
only 1 cpu per vector, but the value needs to account for the actual
number of cpus per vector in order to get the correct remainder for
extra CPU assignment.

Fixes: 7bf8222b9bd0 ("irq/affinity: Fix CPU spread for unbalanced nodes")
	Reported-by: Xiaolong Ye <xiaolong.ye@intel.com>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
Link: http://lkml.kernel.org/r/1492104492-19943-1-git-send-email-keith.busch@intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 3412386b531244f24a27c79ee003506a52a00848)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/irq/affinity.c
* Unmerged path kernel/irq/affinity.c
* Unmerged path kernel/irq/affinity.c
