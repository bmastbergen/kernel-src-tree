ASoC: Route all bias level updates through the core

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: Route all bias level updates through the core (Jaroslav Kysela) [1463624]
Rebuild_FUZZ: 94.44%
commit-author Lars-Peter Clausen <lars@metafoo.de>
commit bd1204cb51f15d202f95222e873a94ed5d07b784
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bd1204cb.failed

Use the new snd_soc_codec_force_bias_level() helper function to invoke the
bias_level callback of a driver instead of calling the callback by hand.
Currently the effect of this is the same, but having all bias level updates
go through a central place will allow us to move more of the bias level
management into the DAPM core.

	Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit bd1204cb51f15d202f95222e873a94ed5d07b784)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/max98095.c
#	sound/soc/codecs/rt5645.c
#	sound/soc/codecs/rt5677.c
#	sound/soc/codecs/sta32x.c
#	sound/soc/codecs/sta350.c
#	sound/soc/codecs/twl6040.c
#	sound/soc/codecs/wm8731.c
#	sound/soc/codecs/wm8737.c
#	sound/soc/codecs/wm8900.c
#	sound/soc/codecs/wm8940.c
#	sound/soc/codecs/wm8955.c
#	sound/soc/codecs/wm8978.c
#	sound/soc/codecs/wm8990.c
#	sound/soc/codecs/wm8993.c
#	sound/soc/codecs/wm8994.c
#	sound/soc/codecs/wm9712.c
#	sound/soc/codecs/wm9713.c
diff --cc sound/soc/codecs/rt5645.c
index 58bfbc6c39b5,b1e681a3e8db..000000000000
--- a/sound/soc/codecs/rt5645.c
+++ b/sound/soc/codecs/rt5645.c
@@@ -3375,17 -2521,16 +3375,22 @@@ static int rt5645_probe(struct snd_soc_
  	}
  
  	snd_soc_codec_force_bias_level(codec, SND_SOC_BIAS_OFF);
++<<<<<<< HEAD
++=======
+ 
+ 	snd_soc_update_bits(codec, RT5645_CHARGE_PUMP, 0x0300, 0x0200);
++>>>>>>> bd1204cb51f1 (ASoC: Route all bias level updates through the core)
  
  	/* for JD function */
 -	if (rt5645->pdata.en_jd_func) {
 -		snd_soc_dapm_force_enable_pin(&codec->dapm, "JD Power");
 -		snd_soc_dapm_force_enable_pin(&codec->dapm, "LDO2");
 -		snd_soc_dapm_sync(&codec->dapm);
 +	if (rt5645->pdata.jd_mode) {
 +		snd_soc_dapm_force_enable_pin(dapm, "JD Power");
 +		snd_soc_dapm_force_enable_pin(dapm, "LDO2");
 +		snd_soc_dapm_sync(dapm);
  	}
  
 +	rt5645->eq_param = devm_kzalloc(codec->dev,
 +		RT5645_HWEQ_NUM * sizeof(struct rt5645_eq_param_s), GFP_KERNEL);
 +
  	return 0;
  }
  
* Unmerged path sound/soc/codecs/max98095.c
* Unmerged path sound/soc/codecs/rt5677.c
* Unmerged path sound/soc/codecs/sta32x.c
* Unmerged path sound/soc/codecs/sta350.c
* Unmerged path sound/soc/codecs/twl6040.c
* Unmerged path sound/soc/codecs/wm8731.c
* Unmerged path sound/soc/codecs/wm8737.c
* Unmerged path sound/soc/codecs/wm8900.c
* Unmerged path sound/soc/codecs/wm8940.c
* Unmerged path sound/soc/codecs/wm8955.c
* Unmerged path sound/soc/codecs/wm8978.c
* Unmerged path sound/soc/codecs/wm8990.c
* Unmerged path sound/soc/codecs/wm8993.c
* Unmerged path sound/soc/codecs/wm8994.c
* Unmerged path sound/soc/codecs/wm9712.c
* Unmerged path sound/soc/codecs/wm9713.c
* Unmerged path sound/soc/codecs/max98095.c
* Unmerged path sound/soc/codecs/rt5645.c
* Unmerged path sound/soc/codecs/rt5677.c
* Unmerged path sound/soc/codecs/sta32x.c
* Unmerged path sound/soc/codecs/sta350.c
* Unmerged path sound/soc/codecs/twl6040.c
* Unmerged path sound/soc/codecs/wm8731.c
* Unmerged path sound/soc/codecs/wm8737.c
* Unmerged path sound/soc/codecs/wm8900.c
* Unmerged path sound/soc/codecs/wm8940.c
* Unmerged path sound/soc/codecs/wm8955.c
* Unmerged path sound/soc/codecs/wm8978.c
* Unmerged path sound/soc/codecs/wm8990.c
* Unmerged path sound/soc/codecs/wm8993.c
* Unmerged path sound/soc/codecs/wm8994.c
* Unmerged path sound/soc/codecs/wm9712.c
* Unmerged path sound/soc/codecs/wm9713.c
