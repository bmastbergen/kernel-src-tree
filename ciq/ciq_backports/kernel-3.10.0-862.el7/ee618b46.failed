KEYS: trusted: sanitize all key material

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Eric Biggers <ebiggers@google.com>
commit ee618b4619b72527aaed765f0f0b74072b281159
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ee618b46.failed

As the previous patch did for encrypted-keys, zero sensitive any
potentially sensitive data related to the "trusted" key type before it
is freed.  Notably, we were not zeroing the tpm_buf structures in which
the actual key is stored for TPM seal and unseal, nor were we zeroing
the trusted_key_payload in certain error paths.

	Cc: Mimi Zohar <zohar@linux.vnet.ibm.com>
	Cc: David Safford <safford@us.ibm.com>
	Signed-off-by: Eric Biggers <ebiggers@google.com>
	Signed-off-by: David Howells <dhowells@redhat.com>
	Signed-off-by: James Morris <james.l.morris@oracle.com>
(cherry picked from commit ee618b4619b72527aaed765f0f0b74072b281159)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/keys/trusted.c
diff --cc security/keys/trusted.c
index 85c9acff3892,435e86e13879..000000000000
--- a/security/keys/trusted.c
+++ b/security/keys/trusted.c
@@@ -1167,12 -1169,7 +1166,16 @@@ static long trusted_read(const struct k
   */
  static void trusted_destroy(struct key *key)
  {
++<<<<<<< HEAD
 +	struct trusted_key_payload *p = key->payload.data;
 +
 +	if (!p)
 +		return;
 +	memset(p->key, 0, p->key_len);
 +	kfree(key->payload.data);
++=======
+ 	kzfree(key->payload.data[0]);
++>>>>>>> ee618b4619b7 (KEYS: trusted: sanitize all key material)
  }
  
  struct key_type key_type_trusted = {
* Unmerged path security/keys/trusted.c
