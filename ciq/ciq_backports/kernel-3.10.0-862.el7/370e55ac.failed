ovl: rename: simplify handling of lower/merged directory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 370e55ace59c2d3ed8f0ca933155030b9652e04f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/370e55ac.failed

d_is_dir() is safe to call on a negative dentry.  Use this fact to simplify
handling of the lower or merged directories.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 370e55ace59c2d3ed8f0ca933155030b9652e04f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/dir.c
diff --cc fs/overlayfs/dir.c
index a34e45180064,69c3971a9992..000000000000
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@@ -837,8 -782,8 +842,13 @@@ static int ovl_rename(struct inode *old
  	bool new_opaque;
  	bool cleanup_whiteout = false;
  	bool overwrite = !(flags & RENAME_EXCHANGE);
++<<<<<<< HEAD
 +	bool is_dir = S_ISDIR(old->d_inode->i_mode);
 +	bool new_is_dir = false;
++=======
+ 	bool is_dir = d_is_dir(old);
+ 	bool new_is_dir = d_is_dir(new);
++>>>>>>> 370e55ace59c (ovl: rename: simplify handling of lower/merged directory)
  	struct dentry *opaquedir = NULL;
  	const struct cred *old_cred = NULL;
  
@@@ -848,31 -793,12 +858,35 @@@
  
  	flags &= ~RENAME_NOREPLACE;
  
 +	err = ovl_check_sticky(old);
 +	if (err)
 +		goto out;
 +
  	/* Don't copy up directory trees */
- 	old_type = ovl_path_type(old);
  	err = -EXDEV;
- 	if (OVL_TYPE_MERGE_OR_LOWER(old_type) && is_dir)
+ 	if (is_dir && ovl_type_merge_or_lower(old))
+ 		goto out;
+ 	if (!overwrite && new_is_dir && ovl_type_merge_or_lower(new))
  		goto out;
++<<<<<<< HEAD
 +
 +	if (new->d_inode) {
 +		err = ovl_check_sticky(new);
 +		if (err)
 +			goto out;
 +
 +		if (S_ISDIR(new->d_inode->i_mode))
 +			new_is_dir = true;
 +
 +		new_type = ovl_path_type(new);
 +		err = -EXDEV;
 +		if (!overwrite && OVL_TYPE_MERGE_OR_LOWER(new_type) && new_is_dir)
 +			goto out;
 +	} else {
 +		new_type = __OVL_PATH_UPPER;
 +	}
++=======
++>>>>>>> 370e55ace59c (ovl: rename: simplify handling of lower/merged directory)
  
  	err = ovl_want_write(old);
  	if (err)
* Unmerged path fs/overlayfs/dir.c
diff --git a/fs/overlayfs/overlayfs.h b/fs/overlayfs/overlayfs.h
index 6d920ffce215..3b958dcd1bb8 100644
--- a/fs/overlayfs/overlayfs.h
+++ b/fs/overlayfs/overlayfs.h
@@ -18,9 +18,6 @@ enum ovl_path_type {
 
 #define OVL_TYPE_UPPER(type)	((type) & __OVL_PATH_UPPER)
 #define OVL_TYPE_MERGE(type)	((type) & __OVL_PATH_MERGE)
-#define OVL_TYPE_MERGE_OR_LOWER(type) \
-	(OVL_TYPE_MERGE(type) || !OVL_TYPE_UPPER(type))
-
 
 #define OVL_XATTR_PREFIX XATTR_TRUSTED_PREFIX "overlay."
 #define OVL_XATTR_OPAQUE OVL_XATTR_PREFIX "opaque"
