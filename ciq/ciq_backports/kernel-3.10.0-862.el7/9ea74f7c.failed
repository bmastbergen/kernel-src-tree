x86/mce: Enable PPIN for Knights Landing/Mill

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Piotr Luc <piotr.luc@intel.com>
commit 9ea74f7c70cd5e408f1cfbda0e6836929f820d49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9ea74f7c.failed

Intel Xeon Phi processors (KNL and KNM) support PPIN as well, so add their
CPUIDs to the whitelist of supported processors.

	Signed-off-by: Piotr Luc <piotr.luc@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/20170408172004.8463-1-piotr.luc@intel.com
Link: http://lkml.kernel.org/r/20170413201056.10525-1-bp@alien8.de
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 9ea74f7c70cd5e408f1cfbda0e6836929f820d49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_intel.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_intel.c
index 69362d43d2b5,e84db79ef272..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_intel.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_intel.c
@@@ -464,6 -466,43 +464,46 @@@ static void intel_clear_lmce(void
  	wrmsrl(MSR_IA32_MCG_EXT_CTL, val);
  }
  
++<<<<<<< HEAD
++=======
+ static void intel_ppin_init(struct cpuinfo_x86 *c)
+ {
+ 	unsigned long long val;
+ 
+ 	/*
+ 	 * Even if testing the presence of the MSR would be enough, we don't
+ 	 * want to risk the situation where other models reuse this MSR for
+ 	 * other purposes.
+ 	 */
+ 	switch (c->x86_model) {
+ 	case INTEL_FAM6_IVYBRIDGE_X:
+ 	case INTEL_FAM6_HASWELL_X:
+ 	case INTEL_FAM6_BROADWELL_XEON_D:
+ 	case INTEL_FAM6_BROADWELL_X:
+ 	case INTEL_FAM6_SKYLAKE_X:
+ 	case INTEL_FAM6_XEON_PHI_KNL:
+ 	case INTEL_FAM6_XEON_PHI_KNM:
+ 
+ 		if (rdmsrl_safe(MSR_PPIN_CTL, &val))
+ 			return;
+ 
+ 		if ((val & 3UL) == 1UL) {
+ 			/* PPIN available but disabled: */
+ 			return;
+ 		}
+ 
+ 		/* If PPIN is disabled, but not locked, try to enable: */
+ 		if (!(val & 3UL)) {
+ 			wrmsrl_safe(MSR_PPIN_CTL,  val | 2UL);
+ 			rdmsrl_safe(MSR_PPIN_CTL, &val);
+ 		}
+ 
+ 		if ((val & 3UL) == 2UL)
+ 			set_cpu_cap(c, X86_FEATURE_INTEL_PPIN);
+ 	}
+ }
+ 
++>>>>>>> 9ea74f7c70cd (x86/mce: Enable PPIN for Knights Landing/Mill)
  void mce_intel_feature_init(struct cpuinfo_x86 *c)
  {
  	intel_init_thermal(c);
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_intel.c
