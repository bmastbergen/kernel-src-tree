qed: RoCE EDPM to honor PFC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Mintz, Yuval <Yuval.Mintz@cavium.com>
commit 26462ad9c7ea18643f1a37adeab8b7eff6c5f5f4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/26462ad9.failed

Configure device according to DCBx results so that EDPMs
made by RoCE would honor flow-control.

	Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 26462ad9c7ea18643f1a37adeab8b7eff6c5f5f4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_reg_addr.h
diff --cc drivers/net/ethernet/qlogic/qed/qed_reg_addr.h
index 7292b031eba3,0cdb4337b3a0..000000000000
--- a/drivers/net/ethernet/qlogic/qed/qed_reg_addr.h
+++ b/drivers/net/ethernet/qlogic/qed/qed_reg_addr.h
@@@ -1530,4 -1564,18 +1530,21 @@@
  #define NIG_REG_TSGEN_FREECNT_UPDATE_K2 0x509008UL
  #define CNIG_REG_NIG_PORT0_CONF_K2 0x218200UL
  
++<<<<<<< HEAD
++=======
+ #define NIG_REG_TX_EDPM_CTRL 0x501f0cUL
+ #define NIG_REG_TX_EDPM_CTRL_TX_EDPM_EN (0x1 << 0)
+ #define NIG_REG_TX_EDPM_CTRL_TX_EDPM_EN_SHIFT 0
+ #define NIG_REG_TX_EDPM_CTRL_TX_EDPM_TC_EN (0xff << 1)
+ #define NIG_REG_TX_EDPM_CTRL_TX_EDPM_TC_EN_SHIFT 1
+ 
+ #define PRS_REG_SEARCH_GFT 0x1f11bcUL
+ #define PRS_REG_CM_HDR_GFT 0x1f11c8UL
+ #define PRS_REG_GFT_CAM 0x1f1100UL
+ #define PRS_REG_GFT_PROFILE_MASK_RAM 0x1f1000UL
+ #define PRS_REG_CM_HDR_GFT_EVENT_ID_SHIFT 0
+ #define PRS_REG_CM_HDR_GFT_CM_HDR_SHIFT 8
+ #define PRS_REG_LOAD_L2_FILTER 0x1f0198UL
+ 
++>>>>>>> 26462ad9c7ea (qed: RoCE EDPM to honor PFC)
  #endif
diff --git a/drivers/net/ethernet/qlogic/qed/qed_dcbx.c b/drivers/net/ethernet/qlogic/qed/qed_dcbx.c
index de0d40d89388..97b0963c7473 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_dcbx.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_dcbx.c
@@ -896,6 +896,22 @@ qed_dcbx_mib_update_event(struct qed_hwfn *p_hwfn,
 	}
 
 	qed_dcbx_get_params(p_hwfn, &p_hwfn->p_dcbx_info->get, type);
+
+	if (type == QED_DCBX_OPERATIONAL_MIB) {
+		struct qed_dcbx_results *p_data;
+		u16 val;
+
+		/* Configure in NIG which protocols support EDPM and should
+		 * honor PFC.
+		 */
+		p_data = &p_hwfn->p_dcbx_info->results;
+		val = (0x1 << p_data->arr[DCBX_PROTOCOL_ROCE].tc) |
+		      (0x1 << p_data->arr[DCBX_PROTOCOL_ROCE_V2].tc);
+		val <<= NIG_REG_TX_EDPM_CTRL_TX_EDPM_TC_EN_SHIFT;
+		val |= NIG_REG_TX_EDPM_CTRL_TX_EDPM_EN;
+		qed_wr(p_hwfn, p_ptt, NIG_REG_TX_EDPM_CTRL, val);
+	}
+
 	qed_dcbx_aen(p_hwfn, type);
 
 	return rc;
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_reg_addr.h
