s390/cpuinfo: show facilities as reported by stfle

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [s390] cpuinfo: show facilities as reported by stfle (Hendrik Brueckner) [1535082]
Rebuild_FUZZ: 94.74%
commit-author Heiko Carstens <heiko.carstens@de.ibm.com>
commit 157467ba9fb7e379f0540707dd89111de441e45e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/157467ba.failed

Add a new line to /proc/cpuinfo which shows all available facilities
as reported by the stfle instruction:

> cat /proc/cpuinfo
...
facilities      : 0 1 2 3 4 6 7 ...
...

	Reviewed-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 157467ba9fb7e379f0540707dd89111de441e45e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/processor.c
diff --cc arch/s390/kernel/processor.c
index 13721d0de9ed,778cd6536175..000000000000
--- a/arch/s390/kernel/processor.c
+++ b/arch/s390/kernel/processor.c
@@@ -6,11 -6,18 +6,16 @@@
  #define KMSG_COMPONENT "cpu"
  #define pr_fmt(fmt) KMSG_COMPONENT ": " fmt
  
++<<<<<<< HEAD
++=======
+ #include <linux/cpufeature.h>
+ #include <linux/bitops.h>
++>>>>>>> 157467ba9fb7 (s390/cpuinfo: show facilities as reported by stfle)
  #include <linux/kernel.h>
 -#include <linux/sched/mm.h>
  #include <linux/init.h>
  #include <linux/seq_file.h>
 -#include <linux/mm_types.h>
  #include <linux/delay.h>
  #include <linux/cpu.h>
 -
 -#include <asm/diag.h>
 -#include <asm/facility.h>
  #include <asm/elf.h>
  #include <asm/lowcore.h>
  #include <asm/param.h>
@@@ -39,7 -81,73 +44,77 @@@ void cpu_init(void
  	current->active_mm = &init_mm;
  	BUG_ON(current->mm);
  	enter_lazy_tlb(&init_mm, current);
++<<<<<<< HEAD
 +	memset(idle, 0, sizeof(*idle));
++=======
+ }
+ 
+ /*
+  * cpu_have_feature - Test CPU features on module initialization
+  */
+ int cpu_have_feature(unsigned int num)
+ {
+ 	return elf_hwcap & (1UL << num);
+ }
+ EXPORT_SYMBOL(cpu_have_feature);
+ 
+ static void show_facilities(struct seq_file *m)
+ {
+ 	unsigned int bit;
+ 	long *facilities;
+ 
+ 	facilities = (long *)&S390_lowcore.stfle_fac_list;
+ 	seq_puts(m, "facilities      :");
+ 	for_each_set_bit_inv(bit, facilities, MAX_FACILITY_BIT)
+ 		seq_printf(m, " %d", bit);
+ 	seq_putc(m, '\n');
+ }
+ 
+ static void show_cpu_summary(struct seq_file *m, void *v)
+ {
+ 	static const char *hwcap_str[] = {
+ 		"esan3", "zarch", "stfle", "msa", "ldisp", "eimm", "dfp",
+ 		"edat", "etf3eh", "highgprs", "te", "vx", "vxd", "vxe", "gs"
+ 	};
+ 	static const char * const int_hwcap_str[] = {
+ 		"sie"
+ 	};
+ 	int i, cpu;
+ 
+ 	seq_printf(m, "vendor_id       : IBM/S390\n"
+ 		   "# processors    : %i\n"
+ 		   "bogomips per cpu: %lu.%02lu\n",
+ 		   num_online_cpus(), loops_per_jiffy/(500000/HZ),
+ 		   (loops_per_jiffy/(5000/HZ))%100);
+ 	seq_printf(m, "max thread id   : %d\n", smp_cpu_mtid);
+ 	seq_puts(m, "features\t: ");
+ 	for (i = 0; i < ARRAY_SIZE(hwcap_str); i++)
+ 		if (hwcap_str[i] && (elf_hwcap & (1UL << i)))
+ 			seq_printf(m, "%s ", hwcap_str[i]);
+ 	for (i = 0; i < ARRAY_SIZE(int_hwcap_str); i++)
+ 		if (int_hwcap_str[i] && (int_hwcap & (1UL << i)))
+ 			seq_printf(m, "%s ", int_hwcap_str[i]);
+ 	seq_puts(m, "\n");
+ 	show_facilities(m);
+ 	show_cacheinfo(m);
+ 	for_each_online_cpu(cpu) {
+ 		struct cpuid *id = &per_cpu(cpu_info.cpu_id, cpu);
+ 
+ 		seq_printf(m, "processor %d: "
+ 			   "version = %02X,  "
+ 			   "identification = %06X,  "
+ 			   "machine = %04X\n",
+ 			   cpu, id->version, id->ident, id->machine);
+ 	}
+ }
+ 
+ static void show_cpu_mhz(struct seq_file *m, unsigned long n)
+ {
+ 	struct cpu_info *c = per_cpu_ptr(&cpu_info, n);
+ 
+ 	seq_printf(m, "cpu MHz dynamic : %d\n", c->cpu_mhz_dynamic);
+ 	seq_printf(m, "cpu MHz static  : %d\n", c->cpu_mhz_static);
++>>>>>>> 157467ba9fb7 (s390/cpuinfo: show facilities as reported by stfle)
  }
  
  /*
* Unmerged path arch/s390/kernel/processor.c
