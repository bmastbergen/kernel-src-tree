IB/ipoib: Convert timers to use timer_setup()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Kees Cook <keescook@chromium.org>
commit 6d290d69ac52b3b311d2ef0da4825dc6f1ea8997
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6d290d69.failed

In preparation for unconditionally passing the struct timer_list pointer to
all timer callbacks, switch to using the new timer_setup() and from_timer()
to pass the timer pointer explicitly.

	Cc: Doug Ledford <dledford@redhat.com>
	Cc: Sean Hefty <sean.hefty@intel.com>
	Cc: Hal Rosenstock <hal.rosenstock@gmail.com>
	Cc: Leon Romanovsky <leon@kernel.org>
	Cc: Alex Vesker <valex@mellanox.com>
	Cc: Erez Shitrit <erezsh@mellanox.com>
	Cc: Zhu Yanjun <yanjun.zhu@oracle.com>
	Cc: Dasaratharaman Chandramouli <dasaratharaman.chandramouli@intel.com>
	Cc: Paolo Abeni <pabeni@redhat.com>
	Cc: Ira Weiny <ira.weiny@intel.com>
	Cc: Yuval Shaia <yuval.shaia@oracle.com>
	Cc: linux-rdma@vger.kernel.org
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 6d290d69ac52b3b311d2ef0da4825dc6f1ea8997)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/ipoib/ipoib.h
#	drivers/infiniband/ulp/ipoib/ipoib_main.c
diff --cc drivers/infiniband/ulp/ipoib/ipoib.h
index 32268a15c423,7cc2b755413d..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib.h
+++ b/drivers/infiniband/ulp/ipoib/ipoib.h
@@@ -493,10 -498,9 +493,16 @@@ void ipoib_reap_ah(struct work_struct *
  struct ipoib_path *__path_find(struct net_device *dev, void *gid);
  void ipoib_mark_paths_invalid(struct net_device *dev);
  void ipoib_flush_paths(struct net_device *dev);
++<<<<<<< HEAD
 +int ipoib_check_sm_sendonly_fullmember_support(struct ipoib_dev_priv *priv);
 +struct ipoib_dev_priv *ipoib_intf_alloc(const char *format);
 +
 +void ipoib_ib_tx_timer_func(unsigned long ctx);
++=======
+ struct ipoib_dev_priv *ipoib_intf_alloc(struct ib_device *hca, u8 port,
+ 					const char *format);
+ void ipoib_ib_tx_timer_func(struct timer_list *t);
++>>>>>>> 6d290d69ac52 (IB/ipoib: Convert timers to use timer_setup())
  void ipoib_ib_dev_flush_light(struct work_struct *work);
  void ipoib_ib_dev_flush_normal(struct work_struct *work);
  void ipoib_ib_dev_flush_heavy(struct work_struct *work);
diff --cc drivers/infiniband/ulp/ipoib/ipoib_main.c
index d4551f56d0a2,77c1b7adbb40..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_main.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_main.c
@@@ -1719,8 -1661,12 +1719,17 @@@ static int ipoib_dev_init_default(struc
  		goto out_tx_ring_cleanup;
  	}
  
++<<<<<<< HEAD
 +	setup_timer(&priv->poll_timer, ipoib_ib_tx_timer_func,
 +		    (unsigned long)dev);
++=======
+ 	/* after qp created set dev address */
+ 	priv->dev->dev_addr[1] = (priv->qp->qp_num >> 16) & 0xff;
+ 	priv->dev->dev_addr[2] = (priv->qp->qp_num >>  8) & 0xff;
+ 	priv->dev->dev_addr[3] = (priv->qp->qp_num) & 0xff;
+ 
+ 	timer_setup(&priv->poll_timer, ipoib_ib_tx_timer_func, 0);
++>>>>>>> 6d290d69ac52 (IB/ipoib: Convert timers to use timer_setup())
  
  	return 0;
  
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib.h
diff --git a/drivers/infiniband/ulp/ipoib/ipoib_ib.c b/drivers/infiniband/ulp/ipoib/ipoib_ib.c
index 8ad732c639b0..fb77206d5c5d 100644
--- a/drivers/infiniband/ulp/ipoib/ipoib_ib.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_ib.c
@@ -815,9 +815,11 @@ int ipoib_ib_dev_stop(struct net_device *dev)
 	return 0;
 }
 
-void ipoib_ib_tx_timer_func(unsigned long ctx)
+void ipoib_ib_tx_timer_func(struct timer_list *t)
 {
-	drain_tx_cq((struct net_device *)ctx);
+	struct ipoib_dev_priv *priv = from_timer(priv, t, poll_timer);
+
+	drain_tx_cq(priv->dev);
 }
 
 int ipoib_ib_dev_open_default(struct net_device *dev)
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_main.c
