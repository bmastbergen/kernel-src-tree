ASoC: rt5514: Unconfuse the rt5514 at probe / resume time

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: rt5514: Unconfuse the rt5514 at probe / resume time (Jaroslav Kysela) [1463624]
Rebuild_FUZZ: 95.00%
commit-author Douglas Anderson <dianders@chromium.org>
commit 7952b4baff402ddca1a263380bfd142f10290eb8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7952b4ba.failed

The rt5514 can get confused and incorrectly detect a start bit if the
SCL/SDA lines happen to both go low and then high again.  This
situation has been seen to happen at reboot time and is also
theoretically possible during suspend/resume if the rt5514 keeps power
but we shut down the i2c connection.

When this happens the rt5514 is confused about the state of the i2c
bus and won't recognize its own address.  That will lead to the rt5514
incorrectly NAKing the first transfer.

A single i2c transfer to any address should be enough to get the
rt5514 out of this funky state.

It is currently believed that this problem should be fixed in the
rt5514 driver itself because it seems that the i2c controller in the
rt5514 is easily confused.  Most i2c devices wouldn't detect a start
bit in this case.

	Signed-off-by: Douglas Anderson <dianders@chromium.org>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 7952b4baff402ddca1a263380bfd142f10290eb8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/rt5514.c
* Unmerged path sound/soc/codecs/rt5514.c
* Unmerged path sound/soc/codecs/rt5514.c
