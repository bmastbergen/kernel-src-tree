net/mlx5e: Fix min inline value for VF rep SQs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Fix min inline value for VF rep SQs (Don Dutile) [1456694 1499362]
Rebuild_FUZZ: 95.45%
commit-author Chris Mi <chrism@mellanox.com>
commit 5f195c2c5cba60241004146cd12d71451d6b0fc4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5f195c2c.failed

The offending commit only changed the code path for PF/VF, but it
didn't take care of VF representors. As a result, since
params->tx_min_inline_mode for VF representors is kzalloced to 0
(MLX5_INLINE_MODE_NONE), all VF reps SQs were set to that mode.

This actually works on CX5 by default but broke CX4. Fix that by
adding a call to query the min inline mode from the VF rep build up code.

Fixes: a6f402e49901 ("net/mlx5e: Tx, no inline copy on ConnectX-5")
	Signed-off-by: Chris Mi <chrism@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 5f195c2c5cba60241004146cd12d71451d6b0fc4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index abcb1976163d,46984a52a94b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -411,32 -781,18 +411,40 @@@ static void mlx5e_build_rep_netdev_priv
  					 MLX5_CQ_PERIOD_MODE_START_FROM_CQE :
  					 MLX5_CQ_PERIOD_MODE_START_FROM_EQE;
  
 -	params->log_sq_size = MLX5E_PARAMS_MINIMUM_LOG_SQ_SIZE;
 -	params->rq_wq_type  = MLX5_WQ_TYPE_LINKED_LIST;
 -	params->log_rq_size = MLX5E_PARAMS_MINIMUM_LOG_RQ_SIZE;
 +	priv->params.log_sq_size           =
 +		MLX5E_PARAMS_MINIMUM_LOG_SQ_SIZE;
 +	priv->params.rq_wq_type = MLX5_WQ_TYPE_LINKED_LIST;
 +	priv->params.log_rq_size = MLX5E_PARAMS_MINIMUM_LOG_RQ_SIZE;
 +
 +	priv->params.min_rx_wqes = mlx5_min_rx_wqes(priv->params.rq_wq_type,
 +					    BIT(priv->params.log_rq_size));
 +
++<<<<<<< HEAD
 +	priv->params.rx_am_enabled = MLX5_CAP_GEN(mdev, cq_moderation);
 +	mlx5e_set_rx_cq_mode_params(&priv->params, cq_period_mode);
 +
 +	priv->params.tx_max_inline         = mlx5e_get_max_inline_cap(mdev);
 +	priv->params.num_tc                = 1;
 +
 +	priv->params.lro_wqe_sz            =
 +		MLX5E_PARAMS_DEFAULT_LRO_WQE_SZ;
  
 -	params->rx_am_enabled = MLX5_CAP_GEN(mdev, cq_moderation);
 -	mlx5e_set_rx_cq_mode_params(params, cq_period_mode);
 +	priv->mdev                         = mdev;
 +	priv->netdev                       = netdev;
 +	priv->params.num_channels          = profile->max_nch(mdev);
 +	priv->profile                      = profile;
 +	priv->ppriv                        = ppriv;
  
 +	mutex_init(&priv->state_lock);
 +
 +	INIT_DELAYED_WORK(&priv->update_stats_work, mlx5e_update_stats_work);
++=======
+ 	params->tx_max_inline         = mlx5e_get_max_inline_cap(mdev);
+ 	params->num_tc                = 1;
+ 	params->lro_wqe_sz            = MLX5E_PARAMS_DEFAULT_LRO_WQE_SZ;
+ 
+ 	mlx5_query_min_inline(mdev, &params->tx_min_inline_mode);
++>>>>>>> 5f195c2c5cba (net/mlx5e: Fix min inline value for VF rep SQs)
  }
  
  static void mlx5e_build_rep_netdev(struct net_device *netdev)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
