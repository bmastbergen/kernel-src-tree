nfp: move basic eBPF stats to app-specific code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit c66a9cf408037781fc1984bc60785049b453d8a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c66a9cf4.failed

Allow apps to associate private data with vNICs and move
BPF-specific fields of nfp_net to such structure.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c66a9cf408037781fc1984bc60785049b453d8a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/bpf/main.c
#	drivers/net/ethernet/netronome/nfp/bpf/main.h
#	drivers/net/ethernet/netronome/nfp/bpf/offload.c
#	drivers/net/ethernet/netronome/nfp/nfp_net.h
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net.h
index 600c79f39fe0,2e526338f678..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net.h
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net.h
@@@ -432,16 -516,10 +432,20 @@@ static inline bool nfp_net_fw_ver_eq(st
   * @rss_cfg:            RSS configuration
   * @rss_key:            RSS secret key
   * @rss_itbl:           RSS indirection table
++<<<<<<< HEAD
++=======
+  * @max_r_vecs:		Number of allocated interrupt vectors for RX/TX
++>>>>>>> c66a9cf40803 (nfp: move basic eBPF stats to app-specific code)
   * @max_tx_rings:       Maximum number of TX rings supported by the Firmware
   * @max_rx_rings:       Maximum number of RX rings supported by the Firmware
 + * @num_tx_rings:       Currently configured number of TX rings
 + * @num_rx_rings:       Currently configured number of RX rings
 + * @txd_cnt:            Size of the TX ring in number of descriptors
 + * @rxd_cnt:            Size of the RX ring in number of descriptors
 + * @tx_rings:           Array of pre-allocated TX ring structures
 + * @rx_rings:           Array of pre-allocated RX ring structures
 + * @max_r_vecs:	        Number of allocated interrupt vectors for RX/TX
 + * @num_r_vecs:         Number of used ring vectors
   * @r_vecs:             Pre-allocated array of ring vectors
   * @irq_entries:        Pre-allocated array of MSI-X entries
   * @lsc_handler:        Handler for Link State Change interrupt
@@@ -471,25 -547,17 +475,33 @@@
   * @rx_bar:             Pointer to mapped FL/RX queues
   * @debugfs_dir:	Device directory in debugfs
   * @ethtool_dump_flag:	Ethtool dump flag
++<<<<<<< HEAD
 + * @port_list:		Entry on device port list
 + * @cpp:		CPP device handle if available
++=======
+  * @vnic_list:		Entry on device vNIC list
+  * @pdev:		Backpointer to PCI device
+  * @app:		APP handle if available
+  * @port:		Pointer to nfp_port structure if vNIC is a port
+  * @app_priv:		APP private data for this vNIC
++>>>>>>> c66a9cf40803 (nfp: move basic eBPF stats to app-specific code)
   */
  struct nfp_net {
 -	struct nfp_net_dp dp;
 +	struct pci_dev *pdev;
 +	struct net_device *netdev;
  
 -	struct nfp_net_fw_version fw_ver;
 +	unsigned is_vf:1;
 +	unsigned fw_loaded:1;
 +
 +	u32 ctrl;
 +	u32 fl_bufsz;
 +
 +	u32 rx_offset;
 +
 +	struct nfp_net_tx_ring *tx_rings;
 +	struct nfp_net_rx_ring *rx_rings;
  
 +	struct nfp_net_fw_version fw_ver;
  	u32 cap;
  	u32 max_mtu;
  
@@@ -552,16 -612,14 +564,22 @@@
  	struct dentry *debugfs_dir;
  	u32 ethtool_dump_flag;
  
 -	struct list_head vnic_list;
 +	struct list_head port_list;
  
 -	struct pci_dev *pdev;
 -	struct nfp_app *app;
 +	struct nfp_cpp *cpp;
 +};
  
++<<<<<<< HEAD
 +struct nfp_net_ring_set {
 +	unsigned int n_rings;
 +	unsigned int mtu;
 +	unsigned int dcnt;
 +	void *rings;
++=======
+ 	struct nfp_port *port;
+ 
+ 	void *app_priv;
++>>>>>>> c66a9cf40803 (nfp: move basic eBPF stats to app-specific code)
  };
  
  /* Functions to read/write from/to a BAR
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/main.c
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/main.h
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/offload.c
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/main.c
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/main.h
* Unmerged path drivers/net/ethernet/netronome/nfp/bpf/offload.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net.h
