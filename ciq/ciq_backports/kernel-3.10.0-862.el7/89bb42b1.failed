netvsc: whitespace cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author stephen hemminger <stephen@networkplumber.org>
commit 89bb42b11370c2daf19d8820398f7255f8499ab7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/89bb42b1.failed

Fix some minor indentation issues.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 89bb42b11370c2daf19d8820398f7255f8499ab7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index d4dc9c189b85,3219d2e8918f..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -951,32 -998,69 +951,70 @@@ static struct rtnl_link_stats64 *netvsc
  		unsigned int start;
  
  		do {
 -			start = u64_stats_fetch_begin_irq(&stats->syncp);
 -			rx_packets = stats->rx_packets;
 -			tx_packets = stats->tx_packets;
 -			rx_bytes = stats->rx_bytes;
 -			tx_bytes = stats->tx_bytes;
 -		} while (u64_stats_fetch_retry_irq(&stats->syncp, start));
 +			start = u64_stats_fetch_begin_irq(&tx_stats->syncp);
 +			tx_packets = tx_stats->packets;
 +			tx_bytes = tx_stats->bytes;
 +		} while (u64_stats_fetch_retry_irq(&tx_stats->syncp, start));
  
++<<<<<<< HEAD
++=======
+ 		tot->rx_packets += rx_packets;
+ 		tot->tx_packets += tx_packets;
+ 		tot->rx_bytes   += rx_bytes;
+ 		tot->tx_bytes   += tx_bytes;
+ 		tot->tx_dropped += stats->tx_dropped;
+ 	}
+ }
+ 
+ static void netvsc_get_stats64(struct net_device *net,
+ 			       struct rtnl_link_stats64 *t)
+ {
+ 	struct net_device_context *ndev_ctx = netdev_priv(net);
+ 	struct netvsc_device *nvdev = rcu_dereference_rtnl(ndev_ctx->nvdev);
+ 	struct netvsc_vf_pcpu_stats vf_tot;
+ 	int i;
+ 
+ 	if (!nvdev)
+ 		return;
+ 
+ 	netdev_stats_to_stats64(t, &net->stats);
+ 
+ 	netvsc_get_vf_stats(net, &vf_tot);
+ 	t->rx_packets += vf_tot.rx_packets;
+ 	t->tx_packets += vf_tot.tx_packets;
+ 	t->rx_bytes   += vf_tot.rx_bytes;
+ 	t->tx_bytes   += vf_tot.tx_bytes;
+ 	t->tx_dropped += vf_tot.tx_dropped;
+ 
+ 	for (i = 0; i < nvdev->num_chn; i++) {
+ 		const struct netvsc_channel *nvchan = &nvdev->chan_table[i];
+ 		const struct netvsc_stats *stats;
+ 		u64 packets, bytes, multicast;
+ 		unsigned int start;
+ 
+ 		stats = &nvchan->tx_stats;
++>>>>>>> 89bb42b11370 (netvsc: whitespace cleanup)
  		do {
 -			start = u64_stats_fetch_begin_irq(&stats->syncp);
 -			packets = stats->packets;
 -			bytes = stats->bytes;
 -		} while (u64_stats_fetch_retry_irq(&stats->syncp, start));
 +			start = u64_stats_fetch_begin_irq(&rx_stats->syncp);
 +			rx_packets = rx_stats->packets;
 +			rx_bytes = rx_stats->bytes;
 +			rx_multicast = rx_stats->multicast + rx_stats->broadcast;
 +		} while (u64_stats_fetch_retry_irq(&rx_stats->syncp, start));
 +
 +		t->tx_bytes	+= tx_bytes;
 +		t->tx_packets	+= tx_packets;
 +		t->rx_bytes	+= rx_bytes;
 +		t->rx_packets	+= rx_packets;
 +		t->multicast	+= rx_multicast;
 +	}
  
 -		t->tx_bytes	+= bytes;
 -		t->tx_packets	+= packets;
 +	t->tx_dropped	= net->stats.tx_dropped;
 +	t->tx_errors	= net->stats.tx_errors;
  
 -		stats = &nvchan->rx_stats;
 -		do {
 -			start = u64_stats_fetch_begin_irq(&stats->syncp);
 -			packets = stats->packets;
 -			bytes = stats->bytes;
 -			multicast = stats->multicast + stats->broadcast;
 -		} while (u64_stats_fetch_retry_irq(&stats->syncp, start));
 -
 -		t->rx_bytes	+= bytes;
 -		t->rx_packets	+= packets;
 -		t->multicast	+= multicast;
 -	}
 +	t->rx_dropped	= net->stats.rx_dropped;
 +	t->rx_errors	= net->stats.rx_errors;
 +
 +	return t;
  }
  
  static int netvsc_set_mac_addr(struct net_device *ndev, void *p)
* Unmerged path drivers/net/hyperv/netvsc_drv.c
