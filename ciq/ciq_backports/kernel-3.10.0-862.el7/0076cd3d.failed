iommu/amd: Set AMD iommu callbacks for platform bus driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Set AMD iommu callbacks for platform bus driver (Jerry Snitselaar) [1411581]
Rebuild_FUZZ: 94.55%
commit-author Wan Zongshun <Vincent.Wan@amd.com>
commit 0076cd3d063a43f69eba2d0a1d13927897c8ed35
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0076cd3d.failed

AMD has more drivers will use ACPI to platform bus driver later,
all those devices need iommu support, for example: eMMC driver.

For latest AMD eMMC controller, it will utilize sdhci-acpi.c driver,
which will rely on platform bus to match device and driver, where we
will set 'dev' of struct platform_device as map_sg parameter passing
to iommu driver for DMA request, so the iommu-ops are needed on the
platform bus.

	Signed-off-by: Wan Zongshun <Vincent.Wan@amd.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 0076cd3d063a43f69eba2d0a1d13927897c8ed35)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index 11d45c4a1ab5,921111e65c8c..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -19,6 -19,9 +19,12 @@@
  
  #include <linux/ratelimit.h>
  #include <linux/pci.h>
++<<<<<<< HEAD
++=======
+ #include <linux/acpi.h>
+ #include <linux/amba/bus.h>
+ #include <linux/platform_device.h>
++>>>>>>> 0076cd3d063a (iommu/amd: Set AMD iommu callbacks for platform bus driver)
  #include <linux/pci-ats.h>
  #include <linux/bitmap.h>
  #include <linux/slab.h>
@@@ -2871,7 -2949,20 +2877,24 @@@ static struct dma_map_ops amd_iommu_dma
  
  int __init amd_iommu_init_api(void)
  {
++<<<<<<< HEAD
 +	return bus_set_iommu(&pci_bus_type, &amd_iommu_ops);
++=======
+ 	int err = 0;
+ 
+ 	err = bus_set_iommu(&pci_bus_type, &amd_iommu_ops);
+ 	if (err)
+ 		return err;
+ #ifdef CONFIG_ARM_AMBA
+ 	err = bus_set_iommu(&amba_bustype, &amd_iommu_ops);
+ 	if (err)
+ 		return err;
+ #endif
+ 	err = bus_set_iommu(&platform_bus_type, &amd_iommu_ops);
+ 	if (err)
+ 		return err;
+ 	return 0;
++>>>>>>> 0076cd3d063a (iommu/amd: Set AMD iommu callbacks for platform bus driver)
  }
  
  int __init amd_iommu_init_dma_ops(void)
* Unmerged path drivers/iommu/amd_iommu.c
