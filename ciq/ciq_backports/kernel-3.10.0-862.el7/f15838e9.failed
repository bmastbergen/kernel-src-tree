powerpc: Fix dedotify for binutils >= 2.26

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [powerpc] Fix dedotify for binutils >= 2.26 (Gustavo Duarte) [1464009]
Rebuild_FUZZ: 88.00%
commit-author Andreas Schwab <schwab@linux-m68k.org>
commit f15838e9cac8f78f0cc506529bb9d3b9fa589c1f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f15838e9.failed

Since binutils 2.26 BFD is doing suffix merging on STRTAB sections.  But
dedotify modifies the symbol names in place, which can also modify
unrelated symbols with a name that matches a suffix of a dotted name.  To
remove the leading dot of a symbol name we can just increment the pointer
into the STRTAB section instead.

Backport to all stables to avoid breakage when people update their
binutils - mpe.

	Cc: stable@vger.kernel.org
	Signed-off-by: Andreas Schwab <schwab@linux-m68k.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit f15838e9cac8f78f0cc506529bb9d3b9fa589c1f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/module_64.c
diff --cc arch/powerpc/kernel/module_64.c
index d807ee626af9,08b7a40de5f8..000000000000
--- a/arch/powerpc/kernel/module_64.c
+++ b/arch/powerpc/kernel/module_64.c
@@@ -336,8 -337,11 +336,16 @@@ static void dedotify(Elf64_Sym *syms, u
  	for (i = 1; i < numsyms; i++) {
  		if (syms[i].st_shndx == SHN_UNDEF) {
  			char *name = strtab + syms[i].st_name;
++<<<<<<< HEAD
 +			if (name[0] == '.')
 +				memmove(name, name+1, strlen(name));
++=======
+ 			if (name[0] == '.') {
+ 				if (strcmp(name+1, "TOC.") == 0)
+ 					syms[i].st_shndx = SHN_ABS;
+ 				syms[i].st_name++;
+ 			}
++>>>>>>> f15838e9cac8 (powerpc: Fix dedotify for binutils >= 2.26)
  		}
  	}
  }
* Unmerged path arch/powerpc/kernel/module_64.c
