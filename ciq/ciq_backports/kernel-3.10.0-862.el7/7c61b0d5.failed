USB: serial: ch341: change initial line-control settings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [usb] serial: ch341: change initial line-control settings (Torez Smith) [1435752]
Rebuild_FUZZ: 95.33%
commit-author Johan Hovold <johan@kernel.org>
commit 7c61b0d5e82bfe29b8dda55745afbf65b6ccc901
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7c61b0d5.failed

Some CH340 devices appear unable to change the initial LCR settings, so
set a sane 8N1 default during probe to enable basic support for such
devices.

Also drop a redundant LCR read during device initialisation.

	Signed-off-by: Johan Hovold <johan@kernel.org>
(cherry picked from commit 7c61b0d5e82bfe29b8dda55745afbf65b6ccc901)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/serial/ch341.c
diff --cc drivers/usb/serial/ch341.c
index a9ca538a0f68,351745aec0e1..000000000000
--- a/drivers/usb/serial/ch341.c
+++ b/drivers/usb/serial/ch341.c
@@@ -238,20 -238,6 +238,23 @@@ static int ch341_configure(struct usb_d
  	if (r < 0)
  		goto out;
  
++<<<<<<< HEAD
 +	/* expect two bytes 0x56 0x00 */
 +	r = ch341_control_in(dev, CH341_REQ_READ_REG, 0x2518, 0, buffer, size);
 +	if (r < 0)
 +		goto out;
 +
 +	r = ch341_control_out(dev, CH341_REQ_WRITE_REG, 0x2518, 0x0050);
 +	if (r < 0)
 +		goto out;
 +
 +	/* expect 0xff 0xee */
 +	r = ch341_get_status(dev, priv);
 +	if (r < 0)
 +		goto out;
 +
++=======
++>>>>>>> 7c61b0d5e82b (USB: serial: ch341: change initial line-control settings)
  	r = ch341_set_baudrate_lcr(dev, priv, priv->lcr);
  	if (r < 0)
  		goto out;
* Unmerged path drivers/usb/serial/ch341.c
