netvsc: Initialize 64-bit stats seqcount

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit 4a0dee1ffe0e8f4101e704a325e97f8997b0abcc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4a0dee1f.failed

On 32-bit hosts and with CONFIG_DEBUG_LOCK_ALLOC we should be seeing a
lockdep splat indicating this seqcount is not correctly initialized, fix
that. In commit 6c80f3fc2398 ("netvsc: report per-channel stats in
ethtool statistics") netdev_alloc_pcpu_stats() was removed in favor of
open-coding the 64-bits statistics, except that u64_stats_init() was
missed.

Fixes: 6c80f3fc2398 ("netvsc: report per-channel stats in ethtool statistics")
	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4a0dee1ffe0e8f4101e704a325e97f8997b0abcc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index 3170ba757106,96f90c75d1b7..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -1354,7 -1286,29 +1354,33 @@@ int netvsc_device_add(struct hv_device 
  
  	net_device->ring_size = ring_size;
  
++<<<<<<< HEAD
 +	set_per_channel_state(device->channel, net_device->cb_buffer);
++=======
+ 	/* Because the device uses NAPI, all the interrupt batching and
+ 	 * control is done via Net softirq, not the channel handling
+ 	 */
+ 	set_channel_read_mode(device->channel, HV_CALL_ISR);
+ 
+ 	/* If we're reopening the device we may have multiple queues, fill the
+ 	 * chn_table with the default channel to use it before subchannels are
+ 	 * opened.
+ 	 * Initialize the channel state before we open;
+ 	 * we can be interrupted as soon as we open the channel.
+ 	 */
+ 
+ 	for (i = 0; i < VRSS_CHANNEL_MAX; i++) {
+ 		struct netvsc_channel *nvchan = &net_device->chan_table[i];
+ 
+ 		nvchan->channel = device->channel;
+ 		u64_stats_init(&nvchan->tx_stats.syncp);
+ 		u64_stats_init(&nvchan->rx_stats.syncp);
+ 	}
+ 
+ 	/* Enable NAPI handler before init callbacks */
+ 	netif_napi_add(ndev, &net_device->chan_table[0].napi,
+ 		       netvsc_poll, NAPI_POLL_WEIGHT);
++>>>>>>> 4a0dee1ffe0e (netvsc: Initialize 64-bit stats seqcount)
  
  	/* Open the channel */
  	ret = vmbus_open(device->channel, ring_size * PAGE_SIZE,
* Unmerged path drivers/net/hyperv/netvsc.c
