ipv4: Do not allow MAIN to be alias for new LOCAL w/ custom rules

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Alexander Duyck <alexander.h.duyck@intel.com>
commit 5350d54f6cd12eaff623e890744c79b700bd3f17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5350d54f.failed

In the case of custom rules being present we need to handle the case of the
LOCAL table being intialized after the new rule has been added.  To address
that I am adding a new check so that we can make certain we don't use an
alias of MAIN for LOCAL when allocating a new table.

Fixes: 0ddcf43d5d4a ("ipv4: FIB Local/MAIN table collapse")
	Reported-by: Oliver Brunel <jjk@jjacky.com>
	Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5350d54f6cd12eaff623e890744c79b700bd3f17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_frontend.c
diff --cc net/ipv4/fib_frontend.c
index 30f0d2b5e192,eae0332b0e8c..000000000000
--- a/net/ipv4/fib_frontend.c
+++ b/net/ipv4/fib_frontend.c
@@@ -83,7 -85,10 +83,14 @@@ struct fib_table *fib_new_table(struct 
  	if (tb)
  		return tb;
  
++<<<<<<< HEAD
 +	tb = fib_trie_table(id);
++=======
+ 	if (id == RT_TABLE_LOCAL && !net->ipv4.fib_has_custom_rules)
+ 		alias = fib_new_table(net, RT_TABLE_MAIN);
+ 
+ 	tb = fib_trie_table(id, alias);
++>>>>>>> 5350d54f6cd1 (ipv4: Do not allow MAIN to be alias for new LOCAL w/ custom rules)
  	if (!tb)
  		return NULL;
  
* Unmerged path net/ipv4/fib_frontend.c
