nfp: add get/set link settings ndos to representors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dirk van der Merwe <dirk.vandermerwe@netronome.com>
commit a564d30ec2b859205d5fdd521df3fb6d342dc461
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a564d30e.failed

Since it is now safe to modify link settings for representors, we can
attach the get/set link settings ndos to it. The get/set link settings
are nfp_port based operations.

If a port becomes invalid, the representor will be removed in the same
way a vnic would be.

	Signed-off-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
	Signed-off-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a564d30ec2b859205d5fdd521df3fb6d342dc461)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
index 69f458e0de89,d0028894667c..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
@@@ -907,6 -1146,19 +907,22 @@@ static const struct ethtool_ops nfp_net
  	.set_link_ksettings	= nfp_net_set_link_ksettings,
  };
  
++<<<<<<< HEAD
++=======
+ const struct ethtool_ops nfp_port_ethtool_ops = {
+ 	.get_drvinfo		= nfp_app_get_drvinfo,
+ 	.get_link		= ethtool_op_get_link,
+ 	.get_strings		= nfp_port_get_strings,
+ 	.get_ethtool_stats	= nfp_port_get_stats,
+ 	.get_sset_count		= nfp_port_get_sset_count,
+ 	.set_dump		= nfp_app_set_dump,
+ 	.get_dump_flag		= nfp_app_get_dump_flag,
+ 	.get_dump_data		= nfp_app_get_dump_data,
+ 	.get_link_ksettings	= nfp_net_get_link_ksettings,
+ 	.set_link_ksettings	= nfp_net_set_link_ksettings,
+ };
+ 
++>>>>>>> a564d30ec2b8 (nfp: add get/set link settings ndos to representors)
  void nfp_net_set_ethtool_ops(struct net_device *netdev)
  {
  	netdev->ethtool_ops = &nfp_net_ethtool_ops;
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
