mpls: Fix mpls_gso handler.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] mpls: Fix mpls_gso handler (Jiri Benc) [1497774]
Rebuild_FUZZ: 98.11%
commit-author Pravin B Shelar <pshelar@nicira.com>
commit f7065f4bd3fe4ad6bf7e49ba7c68baa2c7046146
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f7065f4b.failed

mpls gso handler needs to pull skb after segmenting skb.

CC: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
	Acked-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f7065f4bd3fe4ad6bf7e49ba7c68baa2c7046146)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mpls/mpls_gso.c
diff --cc net/mpls/mpls_gso.c
index 6d49384bab3c,e3545f21a099..000000000000
--- a/net/mpls/mpls_gso.c
+++ b/net/mpls/mpls_gso.c
@@@ -47,8 -59,8 +47,13 @@@ static struct sk_buff *mpls_gso_segment
  	 * above pulled.  It will be re-pushed after returning
  	 * skb_mac_gso_segment(), an indirect caller of this function.
  	 */
++<<<<<<< HEAD
 +	__skb_push(skb, skb->data - skb_mac_header(skb));
 +
++=======
+ 	__skb_pull(skb, skb->data - skb_mac_header(skb));
+ out:
++>>>>>>> f7065f4bd3fe (mpls: Fix mpls_gso handler.)
  	return segs;
  }
  
* Unmerged path net/mpls/mpls_gso.c
