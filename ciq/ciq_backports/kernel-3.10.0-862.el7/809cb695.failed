IB/ipoib: Fix for notify send CQ failure messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [infiniband] ipoib: Fix for notify send CQ failure messages (Don Dutile) [1528386]
Rebuild_FUZZ: 96.84%
commit-author Alex Estrin <alex.estrin@intel.com>
commit 809cb6955650d892c6ef95f1d55f28fceded0ce1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/809cb695.failed

If IB_CQ_REPORT_MISSED_EVENTS flag is passed in ib_req_notify_cq()
it may return positive value indicating non-empty CQ.
If return code not verified the log might be flooded with false
warning messages "request notify on send CQ failed".

Fixes: 8966e28d2e40 ("IB/ipoib: Use NAPI in UD/TX flows")
	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Alex Estrin <alex.estrin@intel.com>
	Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
(cherry picked from commit 809cb6955650d892c6ef95f1d55f28fceded0ce1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/ipoib/ipoib_cm.c
#	drivers/infiniband/ulp/ipoib/ipoib_ib.c
diff --cc drivers/infiniband/ulp/ipoib/ipoib_cm.c
index c831c3332eea,dfbb8fdda5f6..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_cm.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_cm.c
@@@ -758,9 -760,24 +758,21 @@@ void ipoib_cm_send(struct net_device *d
  	skb_orphan(skb);
  	skb_dst_drop(skb);
  
++<<<<<<< HEAD
++=======
+ 	if (netif_queue_stopped(dev)) {
+ 		rc = ib_req_notify_cq(priv->send_cq, IB_CQ_NEXT_COMP |
+ 				      IB_CQ_REPORT_MISSED_EVENTS);
+ 		if (unlikely(rc < 0))
+ 			ipoib_warn(priv, "IPoIB/CM:request notify on send CQ failed\n");
+ 		else if (rc)
+ 			napi_schedule(&priv->send_napi);
+ 	}
+ 
++>>>>>>> 809cb6955650 (IB/ipoib: Fix for notify send CQ failure messages)
  	rc = post_send(priv, tx, tx->tx_head & (ipoib_sendq_size - 1), tx_req);
  	if (unlikely(rc)) {
 -		ipoib_warn(priv, "IPoIB/CM:post_send failed, error %d\n", rc);
 +		ipoib_warn(priv, "post_send failed, error %d\n", rc);
  		++dev->stats.tx_errors;
  		ipoib_dma_unmap_tx(priv, tx_req);
  		dev_kfree_skb_any(skb);
diff --cc drivers/infiniband/ulp/ipoib/ipoib_ib.c
index 0dbecfe98333,10384ea50bed..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_ib.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_ib.c
@@@ -622,8 -642,13 +622,16 @@@ void ipoib_send(struct net_device *dev
  	skb_orphan(skb);
  	skb_dst_drop(skb);
  
++<<<<<<< HEAD
++=======
+ 	if (netif_queue_stopped(dev))
+ 		if (ib_req_notify_cq(priv->send_cq, IB_CQ_NEXT_COMP |
+ 				     IB_CQ_REPORT_MISSED_EVENTS) < 0)
+ 			ipoib_warn(priv, "request notify on send CQ failed\n");
+ 
++>>>>>>> 809cb6955650 (IB/ipoib: Fix for notify send CQ failure messages)
  	rc = post_send(priv, priv->tx_head & (ipoib_sendq_size - 1),
 -		       address, dqpn, tx_req, phead, hlen);
 +		       address->ah, dqpn, tx_req, phead, hlen);
  	if (unlikely(rc)) {
  		ipoib_warn(priv, "post_send failed, error %d\n", rc);
  		++dev->stats.tx_errors;
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_cm.c
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_ib.c
