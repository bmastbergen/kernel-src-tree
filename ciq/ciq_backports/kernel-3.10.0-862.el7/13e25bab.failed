x86/dumpstack/ftrace: Don't print unreliable addresses in print_context_stack_bp()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit 13e25bab7e51bdd4ba7df1ef2388961294bb565e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/13e25bab.failed

When function graph tracing is enabled, print_context_stack_bp() can
report return_to_handler() as an unreliable address, which is confusing
and misleading: return_to_handler() is really only useful as a hint for
debugging, whereas print_context_stack_bp() users only care about the
actual 'reliable' call path.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Acked-by: Steven Rostedt <rostedt@goodmis.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Byungchul Park <byungchul.park@lge.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Nilay Vaish <nilayvaish@gmail.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/c51aef578d8027791b38d2ad9bac0c7f499fde91.1471607358.git.jpoimboe@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 13e25bab7e51bdd4ba7df1ef2388961294bb565e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/dumpstack.c
diff --cc arch/x86/kernel/dumpstack.c
index 519aaf41a253,01072e9e165e..000000000000
--- a/arch/x86/kernel/dumpstack.c
+++ b/arch/x86/kernel/dumpstack.c
@@@ -135,11 -125,12 +135,18 @@@ print_context_stack_bp(struct thread_in
  		if (!__kernel_text_address(addr))
  			break;
  
++<<<<<<< HEAD
 +		if (ops->address(data, addr, 1))
 +			break;
++=======
+ 		real_addr = ftrace_graph_ret_addr(task, graph, addr, retp);
+ 		if (ops->address(data, real_addr, 1))
+ 			break;
+ 
++>>>>>>> 13e25bab7e51 (x86/dumpstack/ftrace: Don't print unreliable addresses in print_context_stack_bp())
  		frame = frame->next_frame;
 -		retp = &frame->return_address;
 +		ret_addr = &frame->return_address;
 +		print_ftrace_graph_addr(addr, data, ops, tinfo, graph);
  	}
  
  	return (unsigned long)frame;
* Unmerged path arch/x86/kernel/dumpstack.c
