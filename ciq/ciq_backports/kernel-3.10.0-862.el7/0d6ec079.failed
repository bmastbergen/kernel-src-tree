fsnotify: pin both inode and vfsmount mark

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 0d6ec079d6aaa098b978d6395973bb027c752a03
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0d6ec079.failed

We may fail to pin one of the marks in fsnotify_prepare_user_wait() when
dropping the srcu read lock, resulting in use after free at the next
iteration.

Solution is to store both marks in iter_info instead of just the one we'll
be sending the event for.

	Reviewed-by: Amir Goldstein <amir73il@gmail.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
Fixes: 9385a84d7e1f ("fsnotify: Pass fsnotify_iter_info into handle_event handler")
	Cc: <stable@vger.kernel.org> # v4.12
	Signed-off-by: Jan Kara <jack@suse.cz>
(cherry picked from commit 0d6ec079d6aaa098b978d6395973bb027c752a03)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/notify/fsnotify.c
diff --cc fs/notify/fsnotify.c
index 0378955136d1,074716293829..000000000000
--- a/fs/notify/fsnotify.c
+++ b/fs/notify/fsnotify.c
@@@ -272,8 -354,10 +279,12 @@@ int fsnotify(struct inode *to_tell, __u
  				vfsmount_mark = NULL;
  			}
  		}
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> 0d6ec079d6aa (fsnotify: pin both inode and vfsmount mark)
  		ret = send_to_group(to_tell, inode_mark, vfsmount_mark, mask,
 -				    data, data_is, cookie, file_name,
 -				    &iter_info);
 +				    data, data_is, cookie, file_name);
  
  		if (ret && (mask & ALL_FSNOTIFY_PERM_EVENTS))
  			goto out;
* Unmerged path fs/notify/fsnotify.c
