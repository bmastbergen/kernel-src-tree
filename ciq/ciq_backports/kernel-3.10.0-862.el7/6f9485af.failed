net/mlx5e: Fail safe tc setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Fail safe tc setup (Don Dutile) [1499362 1456659]
Rebuild_FUZZ: 92.59%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 6f9485af4020a858ac91adc5286411b6dd3c2f06
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6f9485af.failed

Use the new fail-safe channels switch mechanism to set up new
tc parameters.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
(cherry picked from commit 6f9485af4020a858ac91adc5286411b6dd3c2f06)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index fc92406a15c4,1e29f40d84ca..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2593,17 -2918,21 +2593,25 @@@ static int mlx5e_setup_tc(struct net_de
  
  	mutex_lock(&priv->state_lock);
  
- 	was_opened = test_bit(MLX5E_STATE_OPENED, &priv->state);
- 	if (was_opened)
- 		mlx5e_close_locked(priv->netdev);
+ 	new_channels.params = priv->channels.params;
+ 	new_channels.params.num_tc = tc ? tc : 1;
  
++<<<<<<< HEAD
 +	priv->params.num_tc = tc ? tc : 1;
++=======
+ 	if (test_bit(MLX5E_STATE_OPENED, &priv->state)) {
+ 		priv->channels.params = new_channels.params;
+ 		goto out;
+ 	}
++>>>>>>> 6f9485af4020 (net/mlx5e: Fail safe tc setup)
  
- 	if (was_opened)
- 		err = mlx5e_open_locked(priv->netdev);
+ 	err = mlx5e_open_channels(priv, &new_channels);
+ 	if (err)
+ 		goto out;
  
+ 	mlx5e_switch_priv_channels(priv, &new_channels);
+ out:
  	mutex_unlock(&priv->state_lock);
- 
  	return err;
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
