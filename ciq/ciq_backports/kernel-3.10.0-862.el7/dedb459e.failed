hv_netvsc: Remove unnecessary var link_state from struct netvsc_device_info

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit dedb459e13f05824bc33d2d861e9b576bfc8d0bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/dedb459e.failed

We simply use rndis_device->link_state in the netdev_dbg. The variable,
link_state from struct netvsc_device_info, is not used anywhere else.

	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit dedb459e13f05824bc33d2d861e9b576bfc8d0bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/hyperv_net.h
diff --cc drivers/net/hyperv/hyperv_net.h
index e9be40b62d93,ced947d25793..000000000000
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@@ -171,6 -170,10 +170,13 @@@ struct rndis_device 
  	spinlock_t request_lock;
  	struct list_head req_list;
  
++<<<<<<< HEAD
++=======
+ 	struct work_struct mcast_work;
+ 
+ 	bool link_state;        /* 0 - link up, 1 - link down */
+ 
++>>>>>>> dedb459e13f0 (hv_netvsc: Remove unnecessary var link_state from struct netvsc_device_info)
  	u8 hw_mac_adr[ETH_ALEN];
  	u8 rss_key[NETVSC_HASH_KEYLEN];
  	u16 ind_table[ITAB_NUM];
* Unmerged path drivers/net/hyperv/hyperv_net.h
diff --git a/drivers/net/hyperv/rndis_filter.c b/drivers/net/hyperv/rndis_filter.c
index b6bc44dd1f92..f2901175964f 100644
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@ -1028,11 +1028,9 @@ int rndis_filter_device_add(struct hv_device *dev,
 
 	rndis_filter_query_device_link_status(rndis_device);
 
-	device_info->link_state = rndis_device->link_state;
-
 	netdev_dbg(net, "Device MAC %pM link state %s\n",
 		   rndis_device->hw_mac_adr,
-		   device_info->link_state ? "down" : "up");
+		   rndis_device->link_state ? "down" : "up");
 
 	if (net_device->nvsp_version < NVSP_PROTOCOL_VERSION_5)
 		return 0;
