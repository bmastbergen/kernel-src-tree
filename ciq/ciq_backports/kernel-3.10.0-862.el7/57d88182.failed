vxlan: use a more suitable function when assigning NULL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Mark Bloch <markb@mellanox.com>
commit 57d88182ea3e8763111882671fd7462289272f64
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/57d88182.failed

When stopping the vxlan interface we detach it from the socket.
Use RCU_INIT_POINTER() and not rcu_assign_pointer() to do so.

	Suggested-by: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 57d88182ea3e8763111882671fd7462289272f64)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 54a89c4b5d81,7cb21a088bbc..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1025,11 -1073,14 +1025,20 @@@ static bool __vxlan_sock_release_prep(s
  
  static void vxlan_sock_release(struct vxlan_dev *vxlan)
  {
 -	struct vxlan_sock *sock4 = rtnl_dereference(vxlan->vn4_sock);
 +	bool ipv4 = __vxlan_sock_release_prep(vxlan->vn4_sock);
  #if IS_ENABLED(CONFIG_IPV6)
++<<<<<<< HEAD
 +	bool ipv6 = __vxlan_sock_release_prep(vxlan->vn6_sock);
 +#endif
 +
++=======
+ 	struct vxlan_sock *sock6 = rtnl_dereference(vxlan->vn6_sock);
+ 
+ 	RCU_INIT_POINTER(vxlan->vn6_sock, NULL);
+ #endif
+ 
+ 	RCU_INIT_POINTER(vxlan->vn4_sock, NULL);
++>>>>>>> 57d88182ea3e (vxlan: use a more suitable function when assigning NULL)
  	synchronize_net();
  
  	vxlan_vs_del_dev(vxlan);
* Unmerged path drivers/net/vxlan.c
