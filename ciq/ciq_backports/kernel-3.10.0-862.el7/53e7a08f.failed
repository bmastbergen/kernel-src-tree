nfp: register ports as devlink ports

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 53e7a08f0da16eb67daf616405b0579e98565cdc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/53e7a08f.failed

Extend nfp_port to contain devlink_port structures.  Register the
ports to allow users inspecting device ports.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 53e7a08f0da16eb67daf616405b0579e98565cdc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_devlink.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_main.c
#	drivers/net/ethernet/netronome/nfp/nfp_port.h
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_main.c
index acc8cfe284f3,b733c97677fb..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_main.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_main.c
@@@ -327,8 -352,14 +327,14 @@@ nfp_net_pf_init_port_netdev(struct nfp_
  	if (err)
  		return err;
  
 -	nfp_net_debugfs_vnic_add(nn, pf->ddir, id);
 +	nfp_net_debugfs_port_add(nn, pf->ddir, id);
  
+ 	if (nn->port) {
+ 		err = nfp_devlink_port_register(pf->app, nn->port);
+ 		if (err)
+ 			goto err_dfs_clean;
+ 	}
+ 
  	nfp_net_info(nn);
  
  	return 0;
@@@ -373,13 -429,21 +384,24 @@@ err_free_prev
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static void nfp_net_pf_clean_vnic(struct nfp_pf *pf, struct nfp_net *nn)
+ {
+ 	if (nn->port)
+ 		nfp_devlink_port_unregister(nn->port);
+ 	nfp_net_debugfs_dir_clean(&nn->debugfs_dir);
+ 	nfp_net_clean(nn);
+ }
+ 
++>>>>>>> 53e7a08f0da1 (nfp: register ports as devlink ports)
  static int
 -nfp_net_pf_spawn_vnics(struct nfp_pf *pf,
 -		       void __iomem *ctrl_bar, void __iomem *tx_bar,
 -		       void __iomem *rx_bar, int stride,
 -		       struct nfp_net_fw_version *fw_ver)
 +nfp_net_pf_spawn_netdevs(struct nfp_pf *pf,
 +			 void __iomem *ctrl_bar, void __iomem *tx_bar,
 +			 void __iomem *rx_bar, int stride,
 +			 struct nfp_net_fw_version *fw_ver)
  {
 -	unsigned int id, wanted_irqs, num_irqs, vnics_left, irqs_left;
 +	unsigned int id, wanted_irqs, num_irqs, ports_left, irqs_left;
  	struct nfp_net *nn;
  	int err;
  
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_devlink.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_port.h
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_devlink.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_main.c
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_port.h
