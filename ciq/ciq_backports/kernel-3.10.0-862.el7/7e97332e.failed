rbd: support for data-pool feature

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ilya Dryomov <idryomov@gmail.com>
commit 7e97332ea9caad3b7c6d86bc3b982e17eda2f736
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7e97332e.failed

Add support for RBD_FEATURE_DATA_POOL feature.  rbd_dev->layout.pool_id
now stores the data pool id.

	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
	Reviewed-by: Jason Dillaman <dillaman@redhat.com>
(cherry picked from commit 7e97332ea9caad3b7c6d86bc3b982e17eda2f736)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/rbd.c
diff --cc drivers/block/rbd.c
index 8bf8211233c2,ceac7877b5f4..000000000000
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@@ -962,6 -981,22 +965,25 @@@ static u32 rbd_obj_bytes(struct rbd_ima
  	return 1U << header->obj_order;
  }
  
++<<<<<<< HEAD
++=======
+ static void rbd_init_layout(struct rbd_device *rbd_dev)
+ {
+ 	if (rbd_dev->header.stripe_unit == 0 ||
+ 	    rbd_dev->header.stripe_count == 0) {
+ 		rbd_dev->header.stripe_unit = rbd_obj_bytes(&rbd_dev->header);
+ 		rbd_dev->header.stripe_count = 1;
+ 	}
+ 
+ 	rbd_dev->layout.stripe_unit = rbd_dev->header.stripe_unit;
+ 	rbd_dev->layout.stripe_count = rbd_dev->header.stripe_count;
+ 	rbd_dev->layout.object_size = rbd_obj_bytes(&rbd_dev->header);
+ 	rbd_dev->layout.pool_id = rbd_dev->header.data_pool_id == CEPH_NOPOOL ?
+ 			  rbd_dev->spec->pool_id : rbd_dev->header.data_pool_id;
+ 	RCU_INIT_POINTER(rbd_dev->layout.pool_ns, NULL);
+ }
+ 
++>>>>>>> 7e97332ea9ca (rbd: support for data-pool feature)
  /*
   * Fill an rbd image header with information from the given format 1
   * on-disk header.
@@@ -4872,8 -4801,9 +4894,9 @@@ static struct rbd_device *__rbd_dev_cre
  	INIT_LIST_HEAD(&rbd_dev->node);
  	init_rwsem(&rbd_dev->header_rwsem);
  
+ 	rbd_dev->header.data_pool_id = CEPH_NOPOOL;
  	ceph_oid_init(&rbd_dev->header_oid);
 -	rbd_dev->header_oloc.pool = spec->pool_id;
 +	ceph_oloc_init(&rbd_dev->header_oloc);
  
  	mutex_init(&rbd_dev->watch_mutex);
  	rbd_dev->watch_state = RBD_WATCH_STATE_UNREGISTERED;
@@@ -5938,7 -5881,15 +5979,17 @@@ static int rbd_dev_v2_header_onetime(st
  			goto out_err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (rbd_dev->header.features & RBD_FEATURE_DATA_POOL) {
+ 		ret = rbd_dev_v2_data_pool(rbd_dev);
+ 		if (ret)
+ 			goto out_err;
+ 	}
+ 
+ 	rbd_init_layout(rbd_dev);
++>>>>>>> 7e97332ea9ca (rbd: support for data-pool feature)
  	return 0;
 -
  out_err:
  	rbd_dev->header.features = 0;
  	kfree(rbd_dev->header.object_prefix);
* Unmerged path drivers/block/rbd.c
