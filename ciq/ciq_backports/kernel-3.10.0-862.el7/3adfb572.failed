PCI/MSI: Return failure when msix_setup_entries() fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [pci] msi: Return failure when msix_setup_entries() fails (Ming Lei) [1389540]
Rebuild_FUZZ: 96.23%
commit-author Christophe JAILLET <christophe.jaillet@wanadoo.fr>
commit 3adfb572f2978a980b250a9e1a56f84f3a031001
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3adfb572.failed

If alloc_msi_entry() fails, we free resources and set ret = -ENOMEM.

However, msix_setup_entries() returns 0 unconditionally.  Return the error
code instead.

Fixes: e75eafb9b039 ("genirq/msi: Switch to new irq spreading infrastructure")
	Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 3adfb572f2978a980b250a9e1a56f84f3a031001)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/msi.c
diff --cc drivers/pci/msi.c
index 0a99aff13490,0f77b38f03dd..000000000000
--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@@ -691,15 -717,21 +691,22 @@@ static int msix_setup_entries(struct pc
  
  		entry->msi_attrib.is_msix	= 1;
  		entry->msi_attrib.is_64		= 1;
 -		if (entries)
 -			entry->msi_attrib.entry_nr = entries[i].entry;
 -		else
 -			entry->msi_attrib.entry_nr = i;
 +		entry->msi_attrib.entry_nr	= entries[i].entry;
  		entry->msi_attrib.default_irq	= dev->irq;
  		entry->mask_base		= base;
 +		entry->nvec_used		= 1;
  
 -		list_add_tail(&entry->list, dev_to_msi_list(&dev->dev));
 -		if (masks)
 -			curmsk++;
 +		list_add_tail(&entry->list, &dev->msi_list);
  	}
++<<<<<<< HEAD
 +
 +	return 0;
++=======
+ 	ret = 0;
+ out:
+ 	kfree(masks);
+ 	return ret;
++>>>>>>> 3adfb572f297 (PCI/MSI: Return failure when msix_setup_entries() fails)
  }
  
  static void msix_program_entries(struct pci_dev *dev,
* Unmerged path drivers/pci/msi.c
