lib: introduce crc_t10dif_update()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [lib] introduce crc_t10dif_update() (Maurizio Lombardi) [1366062]
Rebuild_FUZZ: 92.06%
commit-author Akinobu Mita <akinobu.mita@gmail.com>
commit 10081fb532a2a2216b7d8e4ad585c985075b6f60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/10081fb5.failed

This introduces crc_t10dif_update() which enables to calculate CRC
for a block which straddles multiple SG elements by calling multiple
times.  This also converts crc_t10dif() to use crc_t10dif_update() as
they are almost same.

(remove extra function call in crc_t10dif() and crc_t10dif_update -
 Tim + Herbert)

	Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
	Acked-by: Martin K. Petersen <martin.petersen@oracle.com>
	Cc: Tim Chen <tim.c.chen@linux.intel.com>
	Cc: Herbert Xu <herbert@gondor.apana.org.au>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: linux-crypto@vger.kernel.org
	Cc: Nicholas Bellinger <nab@linux-iscsi.org>
	Cc: Sagi Grimberg <sagig@mellanox.com>
	Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>
	Cc: target-devel@vger.kernel.org
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 10081fb532a2a2216b7d8e4ad585c985075b6f60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/crc-t10dif.h
diff --cc include/linux/crc-t10dif.h
index b3cb71f0d3b0,d81961e9e37d..000000000000
--- a/include/linux/crc-t10dif.h
+++ b/include/linux/crc-t10dif.h
@@@ -6,7 -6,9 +6,14 @@@
  #define CRC_T10DIF_DIGEST_SIZE 2
  #define CRC_T10DIF_BLOCK_SIZE 1
  
++<<<<<<< HEAD
 +__u16 crc_t10dif_generic(__u16 crc, const unsigned char *buffer, size_t len);
 +__u16 crc_t10dif(unsigned char const *, size_t);
++=======
+ extern __u16 crc_t10dif_generic(__u16 crc, const unsigned char *buffer,
+ 				size_t len);
+ extern __u16 crc_t10dif(unsigned char const *, size_t);
+ extern __u16 crc_t10dif_update(__u16 crc, unsigned char const *, size_t);
++>>>>>>> 10081fb532a2 (lib: introduce crc_t10dif_update())
  
  #endif
* Unmerged path include/linux/crc-t10dif.h
diff --git a/lib/crc-t10dif.c b/lib/crc-t10dif.c
index dfe6ec17c0a5..1ad33e555805 100644
--- a/lib/crc-t10dif.c
+++ b/lib/crc-t10dif.c
@@ -19,7 +19,7 @@
 static struct crypto_shash *crct10dif_tfm;
 static struct static_key crct10dif_fallback __read_mostly;
 
-__u16 crc_t10dif(const unsigned char *buffer, size_t len)
+__u16 crc_t10dif_update(__u16 crc, const unsigned char *buffer, size_t len)
 {
 	struct {
 		struct shash_desc shash;
@@ -28,17 +28,23 @@ __u16 crc_t10dif(const unsigned char *buffer, size_t len)
 	int err;
 
 	if (static_key_false(&crct10dif_fallback))
-		return crc_t10dif_generic(0, buffer, len);
+		return crc_t10dif_generic(crc, buffer, len);
 
 	desc.shash.tfm = crct10dif_tfm;
 	desc.shash.flags = 0;
-	*(__u16 *)desc.ctx = 0;
+	*(__u16 *)desc.ctx = crc;
 
 	err = crypto_shash_update(&desc.shash, buffer, len);
 	BUG_ON(err);
 
 	return *(__u16 *)desc.ctx;
 }
+EXPORT_SYMBOL(crc_t10dif_update);
+
+__u16 crc_t10dif(const unsigned char *buffer, size_t len)
+{
+	return crc_t10dif_update(0, buffer, len);
+}
 EXPORT_SYMBOL(crc_t10dif);
 
 static int __init crc_t10dif_mod_init(void)
