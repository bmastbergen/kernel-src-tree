livepatch: reuse module loader code to write relocations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jessica Yu <jeyu@redhat.com>
commit 425595a7fc2096ab46c741b5ed5372c5ab5bbeac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/425595a7.failed

Reuse module loader code to write relocations, thereby eliminating the need
for architecture specific relocation code in livepatch. Specifically, reuse
the apply_relocate_add() function in the module loader to write relocations
instead of duplicating functionality in livepatch's arch-dependent
klp_write_module_reloc() function.

In order to accomplish this, livepatch modules manage their own relocation
sections (marked with the SHF_RELA_LIVEPATCH section flag) and
livepatch-specific symbols (marked with SHN_LIVEPATCH symbol section
index). To apply livepatch relocation sections, livepatch symbols
referenced by relocs are resolved and then apply_relocate_add() is called
to apply those relocations.

In addition, remove x86 livepatch relocation code and the s390
klp_write_module_reloc() function stub. They are no longer needed since
relocation work has been offloaded to module loader.

Lastly, mark the module as a livepatch module so that the module loader
canappropriately identify and initialize it.

	Signed-off-by: Jessica Yu <jeyu@redhat.com>
	Reviewed-by: Miroslav Benes <mbenes@suse.cz>
	Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>   # for s390 changes
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 425595a7fc2096ab46c741b5ed5372c5ab5bbeac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/livepatch.h
#	kernel/livepatch/core.c
#	samples/livepatch/livepatch-sample.c
#	tools/objtool/special.h
diff --cc tools/objtool/special.h
index fad1d092f679,a7f9181f63f3..000000000000
--- a/tools/objtool/special.h
+++ b/tools/objtool/special.h
@@@ -15,28 -18,24 +15,38 @@@
   * along with this program; if not, see <http://www.gnu.org/licenses/>.
   */
  
 -#ifndef _ASM_X86_LIVEPATCH_H
 -#define _ASM_X86_LIVEPATCH_H
 +#ifndef _SPECIAL_H
 +#define _SPECIAL_H
  
 -#include <asm/setup.h>
 -#include <linux/module.h>
 -#include <linux/ftrace.h>
 +#include <stdbool.h>
 +#include "elf.h"
  
++<<<<<<< HEAD:tools/objtool/special.h
 +struct special_alt {
 +	struct list_head list;
++=======
+ static inline int klp_check_compiler_support(void)
+ {
+ #ifndef CC_USING_FENTRY
+ 	return 1;
+ #endif
+ 	return 0;
+ }
++>>>>>>> 425595a7fc20 (livepatch: reuse module loader code to write relocations):arch/x86/include/asm/livepatch.h
  
 -static inline void klp_arch_set_pc(struct pt_regs *regs, unsigned long ip)
 -{
 -	regs->ip = ip;
 -}
 +	bool group;
 +	bool skip_orig;
 +	bool jump_or_nop;
 +
 +	struct section *orig_sec;
 +	unsigned long orig_off;
 +
 +	struct section *new_sec;
 +	unsigned long new_off;
 +
 +	unsigned int orig_len, new_len; /* group only */
 +};
 +
 +int special_get_alts(struct elf *elf, struct list_head *alts);
  
 -#endif /* _ASM_X86_LIVEPATCH_H */
 +#endif /* _SPECIAL_H */
* Unmerged path include/linux/livepatch.h
* Unmerged path kernel/livepatch/core.c
* Unmerged path samples/livepatch/livepatch-sample.c
diff --git a/arch/s390/include/asm/livepatch.h b/arch/s390/include/asm/livepatch.h
index 7aa799134a11..e674553fa298 100644
--- a/arch/s390/include/asm/livepatch.h
+++ b/arch/s390/include/asm/livepatch.h
@@ -25,13 +25,6 @@ static inline int klp_check_compiler_support(void)
 	return 0;
 }
 
-static inline int klp_write_module_reloc(struct module *mod, unsigned long
-		type, unsigned long loc, unsigned long value)
-{
-	/* not supported yet */
-	return -ENOSYS;
-}
-
 static inline void klp_arch_set_pc(struct pt_regs *regs, unsigned long ip)
 {
 	regs->psw.addr = ip;
* Unmerged path include/linux/livepatch.h
* Unmerged path kernel/livepatch/core.c
* Unmerged path samples/livepatch/livepatch-sample.c
* Unmerged path tools/objtool/special.h
