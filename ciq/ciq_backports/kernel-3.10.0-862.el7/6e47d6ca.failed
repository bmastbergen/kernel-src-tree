fib_trie: Cleanup ip_fib_net_exit code path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Alexander Duyck <alexander.h.duyck@redhat.com>
commit 6e47d6caff9e8af6db0741ddbd260bdd36d24c13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6e47d6ca.failed

While fixing a recent issue I noticed that we are doing some unnecessary
work inside the loop for ip_fib_net_exit.  As such I am pulling out the
initialization to NULL for the locally stored fib_local, fib_main, and
fib_default.

In addition I am restoring the original code for flushing the table as
there is no need to split up the fib_table_flush and hlist_del work since
the code for packing the tnodes with multiple key vectors was dropped.

	Signed-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6e47d6caff9e8af6db0741ddbd260bdd36d24c13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_frontend.c
diff --cc net/ipv4/fib_frontend.c
index 30f0d2b5e192,718b0a16ea40..000000000000
--- a/net/ipv4/fib_frontend.c
+++ b/net/ipv4/fib_frontend.c
@@@ -1142,30 -1187,9 +1148,19 @@@ static void ip_fib_net_exit(struct net 
  		struct hlist_node *tmp;
  		struct fib_table *tb;
  
++<<<<<<< HEAD
 +		/* this is done in two passes as flushing the table could
 +		 * cause it to be reallocated in order to accommodate new
 +		 * tnodes at the root as the table shrinks.
 +		 */
 +		hlist_for_each_entry_safe(tb, tmp, head, tb_hlist)
 +			fib_table_flush(net, tb);
 +
++=======
++>>>>>>> 6e47d6caff9e (fib_trie: Cleanup ip_fib_net_exit code path)
  		hlist_for_each_entry_safe(tb, tmp, head, tb_hlist) {
- #ifdef CONFIG_IP_MULTIPLE_TABLES
- 			switch (tb->tb_id) {
- 			case RT_TABLE_LOCAL:
- 				RCU_INIT_POINTER(net->ipv4.fib_local, NULL);
- 				break;
- 			case RT_TABLE_MAIN:
- 				RCU_INIT_POINTER(net->ipv4.fib_main, NULL);
- 				break;
- 			case RT_TABLE_DEFAULT:
- 				RCU_INIT_POINTER(net->ipv4.fib_default, NULL);
- 				break;
- 			default:
- 				break;
- 			}
- #endif
  			hlist_del(&tb->tb_hlist);
+ 			fib_table_flush(tb);
  			fib_free_table(tb);
  		}
  	}
* Unmerged path net/ipv4/fib_frontend.c
