block: do not allow updates through sysfs until registration completes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [block] do not allow updates through sysfs until registration completes (Ming Lei) [1458104]
Rebuild_FUZZ: 94.74%
commit-author Tahsin Erdogan <tahsin@google.com>
commit b410aff2bd9f101bc096069612391aecce204cd1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b410aff2.failed

When a new disk shows up, sysfs queue directory is created before elevator
is registered. This allows a user to attempt a scheduler switch even though
the initial registration hasn't completed yet.

In one scenario, blk_register_queue() calls elv_register_queue() and
right before cfq_registered_queue() is called, another process executes
elevator_switch() and replaces q->elevator with deadline scheduler. When
cfq_registered_queue() executes it interprets e->elevator_data as struct
cfq_data even though it is actually struct deadline_data.

Grab q->sysfs_lock in blk_register_queue() to synchronize with sysfs
callers.

	Signed-off-by: Tahsin Erdogan <tahsin@google.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit b410aff2bd9f101bc096069612391aecce204cd1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-sysfs.c
diff --cc block/blk-sysfs.c
index 91f42f273aad,002af836aa87..000000000000
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@@ -618,8 -916,7 +624,12 @@@ int blk_register_queue(struct gendisk *
  
  	kobject_uevent(&q->kobj, KOBJ_ADD);
  
++<<<<<<< HEAD
 +	if (q->mq_ops)
 +		blk_mq_register_disk(disk);
++=======
+ 	blk_wb_init(q);
++>>>>>>> b410aff2bd9f (block: do not allow updates through sysfs until registration completes)
  
  	if (q->request_fn || (q->mq_ops && q->elevator)) {
  		ret = elv_register_queue(q);
* Unmerged path block/blk-sysfs.c
