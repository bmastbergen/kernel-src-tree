powerpc/perf: Factor out event_alternative function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [powerpc] perf: Factor out event_alternative function (Mauricio Oliveira) [1494439]
Rebuild_FUZZ: 91.49%
commit-author Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
commit efe881afdd9996ccbcd2a09c93b724f4ffc25991
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/efe881af.failed

Factor out the power8 event_alternative function to share
the code with power9.

	Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit efe881afdd9996ccbcd2a09c93b724f4ffc25991)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/perf/isa207-common.c
#	arch/powerpc/perf/isa207-common.h
diff --cc arch/powerpc/perf/isa207-common.h
index 03205f5354e9,3e9150f6690a..000000000000
--- a/arch/powerpc/perf/isa207-common.h
+++ b/arch/powerpc/perf/isa207-common.h
@@@ -227,4 -255,13 +227,16 @@@
  #define MAX_ALT				2
  #define MAX_PMU_COUNTERS		6
  
++<<<<<<< HEAD
++=======
+ int isa207_get_constraint(u64 event, unsigned long *maskp, unsigned long *valp);
+ int isa207_compute_mmcr(u64 event[], int n_ev,
+ 				unsigned int hwc[], unsigned long mmcr[],
+ 				struct perf_event *pevents[]);
+ void isa207_disable_pmc(unsigned int pmc, unsigned long mmcr[]);
+ int isa207_get_alternatives(u64 event, u64 alt[],
+ 				const unsigned int ev_alt[][MAX_ALT], int size);
+ 
+ 
++>>>>>>> efe881afdd99 (powerpc/perf: Factor out event_alternative function)
  #endif
* Unmerged path arch/powerpc/perf/isa207-common.c
* Unmerged path arch/powerpc/perf/isa207-common.c
* Unmerged path arch/powerpc/perf/isa207-common.h
diff --git a/arch/powerpc/perf/power8-pmu.c b/arch/powerpc/perf/power8-pmu.c
index 4db4aa43174b..ace635fcdac4 100644
--- a/arch/powerpc/perf/power8-pmu.c
+++ b/arch/powerpc/perf/power8-pmu.c
@@ -289,43 +289,12 @@ static const unsigned int event_alternatives[][MAX_ALT] = {
 	{ PM_RUN_INST_CMPL_ALT,		PM_RUN_INST_CMPL },
 };
 
-/*
- * Scan the alternatives table for a match and return the
- * index into the alternatives table if found, else -1.
- */
-static int find_alternative(u64 event)
-{
-	int i, j;
-
-	for (i = 0; i < ARRAY_SIZE(event_alternatives); ++i) {
-		if (event < event_alternatives[i][0])
-			break;
-
-		for (j = 0; j < MAX_ALT && event_alternatives[i][j]; ++j)
-			if (event == event_alternatives[i][j])
-				return i;
-	}
-
-	return -1;
-}
-
 static int power8_get_alternatives(u64 event, unsigned int flags, u64 alt[])
 {
 	int i, j, num_alt = 0;
-	u64 alt_event;
-
-	alt[num_alt++] = event;
-
-	i = find_alternative(event);
-	if (i >= 0) {
-		/* Filter out the original event, it's already in alt[0] */
-		for (j = 0; j < MAX_ALT; ++j) {
-			alt_event = event_alternatives[i][j];
-			if (alt_event && alt_event != event)
-				alt[num_alt++] = alt_event;
-		}
-	}
 
+	num_alt = isa207_get_alternatives(event, alt, event_alternatives,
+					(int)ARRAY_SIZE(event_alternatives));
 	if (flags & PPMU_ONLY_COUNT_RUN) {
 		/*
 		 * We're only counting in RUN state, so PM_CYC is equivalent to
