cxgb4: Support compressed error vector for T6

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arjun V <arjun@chelsio.com>
commit 8eb9f2f9e4468e0fb86c2c06606a0ad03dd1a043
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8eb9f2f9.failed

t6fw-1.15.15.0 enabled compressed error vector in cpl_rx_pkt for T6.
Updating driver to take care of these changes.

	Signed-off-by: Santosh Rastapur <santosh@chelsio.com>
	Signed-off-by: Arjun V <arjun@chelsio.com>
	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8eb9f2f9e4468e0fb86c2c06606a0ad03dd1a043)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/sge.c
#	drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
diff --cc drivers/net/ethernet/chelsio/cxgb4/sge.c
index 6176fd298010,0fe04b482c38..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/sge.c
@@@ -2040,8 -2090,28 +2047,31 @@@ int t4_ethrx_handler(struct sge_rspq *q
  			skb->ip_summed = CHECKSUM_COMPLETE;
  			rxq->stats.rx_cso++;
  		}
 -	} else {
 +	} else
  		skb_checksum_none_assert(skb);
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_CHELSIO_T4_FCOE
+ #define CPL_RX_PKT_FLAGS (RXF_PSH_F | RXF_SYN_F | RXF_UDP_F | \
+ 			  RXF_TCP_F | RXF_IP_F | RXF_IP6_F | RXF_LRO_F)
+ 
+ 		if (!(pkt->l2info & cpu_to_be32(CPL_RX_PKT_FLAGS))) {
+ 			if ((pkt->l2info & cpu_to_be32(RXF_FCOE_F)) &&
+ 			    (pi->fcoe.flags & CXGB_FCOE_ENABLED)) {
+ 				if (q->adap->params.tp.rx_pkt_encap)
+ 					csum_ok = err_vec &
+ 						  T6_COMPR_RXERR_SUM_F;
+ 				else
+ 					csum_ok = err_vec & RXERR_CSUM_F;
+ 				if (!csum_ok)
+ 					skb->ip_summed = CHECKSUM_UNNECESSARY;
+ 			}
+ 		}
+ 
+ #undef CPL_RX_PKT_FLAGS
+ #endif /* CONFIG_CHELSIO_T4_FCOE */
+ 	}
++>>>>>>> 8eb9f2f9e446 (cxgb4: Support compressed error vector for T6)
  
  	if (unlikely(pkt->vlan_ex)) {
  		__vlan_hwaccel_put_tag(skb, htons(ETH_P_8021Q), ntohs(pkt->vlan));
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
index 2a338f03e217,5043b64805f0..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
@@@ -1158,6 -1170,26 +1158,29 @@@ struct cpl_rx_pkt 
  #define RX_IPHDR_LEN_V(x) ((x) << RX_IPHDR_LEN_S)
  #define RX_IPHDR_LEN_G(x) (((x) >> RX_IPHDR_LEN_S) & RX_IPHDR_LEN_M)
  
++<<<<<<< HEAD
++=======
+ /* rx_pkt.err_vec fields */
+ #define RXERR_CSUM_S    13
+ #define RXERR_CSUM_V(x) ((x) << RXERR_CSUM_S)
+ #define RXERR_CSUM_F    RXERR_CSUM_V(1U)
+ 
+ #define T6_COMPR_RXERR_LEN_S    1
+ #define T6_COMPR_RXERR_LEN_V(x) ((x) << T6_COMPR_RXERR_LEN_S)
+ #define T6_COMPR_RXERR_LEN_F    T6_COMPR_RXERR_LEN_V(1U)
+ 
+ #define T6_COMPR_RXERR_VEC_S    0
+ #define T6_COMPR_RXERR_VEC_M    0x3F
+ #define T6_COMPR_RXERR_VEC_V(x) ((x) << T6_COMPR_RXERR_LEN_S)
+ #define T6_COMPR_RXERR_VEC_G(x) \
+ 		(((x) >> T6_COMPR_RXERR_VEC_S) & T6_COMPR_RXERR_VEC_M)
+ 
+ /* Logical OR of RX_ERROR_CSUM, RX_ERROR_CSIP */
+ #define T6_COMPR_RXERR_SUM_S    4
+ #define T6_COMPR_RXERR_SUM_V(x) ((x) << T6_COMPR_RXERR_SUM_S)
+ #define T6_COMPR_RXERR_SUM_F    T6_COMPR_RXERR_SUM_V(1U)
+ 
++>>>>>>> 8eb9f2f9e446 (cxgb4: Support compressed error vector for T6)
  struct cpl_trace_pkt {
  	u8 opcode;
  	u8 intf;
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
index d87c06ba2d10..4a4c4a1ff787 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4.h
@@ -269,6 +269,11 @@ struct tp_params {
 	u32 vlan_pri_map;               /* cached TP_VLAN_PRI_MAP */
 	u32 ingress_config;             /* cached TP_INGRESS_CONFIG */
 
+	/* cached TP_OUT_CONFIG compressed error vector
+	 * and passing outer header info for encapsulated packets.
+	 */
+	int rx_pkt_encap;
+
 	/* TP_VLAN_PRI_MAP Compressed Filter Tuple field offsets.  This is a
 	 * subset of the set of fields which may be present in the Compressed
 	 * Filter Tuple portion of filters and TCP TCB connections.  The
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/sge.c
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index fa678aab72ab..6a4e1e8ba801 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@ -7896,6 +7896,13 @@ int t4_init_tp_params(struct adapter *adap)
 				 &adap->params.tp.ingress_config, 1,
 				 TP_INGRESS_CONFIG_A);
 	}
+	/* For T6, cache the adapter's compressed error vector
+	 * and passing outer header info for encapsulated packets.
+	 */
+	if (CHELSIO_CHIP_VERSION(adap->params.chip) > CHELSIO_T5) {
+		v = t4_read_reg(adap, TP_OUT_CONFIG_A);
+		adap->params.tp.rx_pkt_encap = (v & CRXPKTENC_F) ? 1 : 0;
+	}
 
 	/* Now that we have TP_VLAN_PRI_MAP cached, we can calculate the field
 	 * shift positions of several elements of the Compressed Filter Tuple
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
index 56b2a5024112..cc4240369aef 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
@@ -1288,6 +1288,10 @@
 #define DBGLARPTR_M    0x7fU
 #define DBGLARPTR_V(x) ((x) << DBGLARPTR_S)
 
+#define CRXPKTENC_S    3
+#define CRXPKTENC_V(x) ((x) << CRXPKTENC_S)
+#define CRXPKTENC_F    CRXPKTENC_V(1U)
+
 #define TP_DBG_LA_DATAL_A	0x7ed8
 #define TP_DBG_LA_CONFIG_A	0x7ed4
 #define TP_OUT_CONFIG_A		0x7d04
