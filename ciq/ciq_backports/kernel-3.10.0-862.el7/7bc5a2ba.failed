ACPI: Support _OSI("Darwin") correctly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [acpi] Support _OSI("Darwin") correctly (Jeremy McNicoll) [1172010]
Rebuild_FUZZ: 91.43%
commit-author Matthew Garrett <matthew.garrett@nebula.com>
commit 7bc5a2bad0b8d9d1ac9f7b8b33150e4ddf197334
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7bc5a2ba.failed

Apple hardware queries _OSI("Darwin") in order to determine whether the
system is running OS X, and changes firmware behaviour based on the
answer.  The most obvious difference in behaviour is that Thunderbolt
hardware is forcibly powered down unless the system is running OS X. The
obvious solution would be to simply add Darwin to the list of supported
_OSI strings, but this causes problems.

Recent Apple hardware includes two separate methods for checking _OSI
strings. The first will check whether Darwin is supported, and if so
will exit. The second will check whether Darwin is supported, but will
then continue to check for further operating systems. If a further
operating system is found then later firmware code will assume that the
OS is not OS X.  This results in the unfortunate situation where the
Thunderbolt controller is available at boot time but remains powered
down after suspend.

The easiest way to handle this is to special-case it in the
Linux-specific OSI handling code. If we see Darwin, we should answer
true and then disable all other _OSI vendor strings.

The next problem is that the Apple PCI _OSC method has the following
code:

if (LEqual (0x01, OSDW ()))
  if (LAnd (LEqual (Arg0, GUID), NEXP)
    (do stuff)
  else
    (fail)
NEXP is a value in high memory and is presumably under the control of
the firmware. No methods sets it. The methods that are called in the "do
stuff" path are dummies. Unless there's some additional firmware call in
early boot, there's no way for this call to succeed - and even if it
does, it doesn't do anything.

The easiest way to handle this is simply to ignore it. We know which
flags would be set, so just set them by hand if the platform is running
in Darwin mode.

	Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
[andreas.noever@gmail.com: merged two patches, do not touch ACPICA]
	Signed-off-by: Andreas Noever <andreas.noever@gmail.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 7bc5a2bad0b8d9d1ac9f7b8b33150e4ddf197334)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/pci_root.c
diff --cc drivers/acpi/pci_root.c
index 9999dbc09d0f,cd4de7e038ea..000000000000
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@@ -33,12 -33,10 +33,17 @@@
  #include <linux/pci.h>
  #include <linux/pci-acpi.h>
  #include <linux/pci-aspm.h>
 +#include <linux/dmar.h>
  #include <linux/acpi.h>
  #include <linux/slab.h>
++<<<<<<< HEAD
 +#include <acpi/acpi_bus.h>
 +#include <acpi/acpi_drivers.h>
 +#include <acpi/apei.h>
++=======
+ #include <linux/dmi.h>
+ #include <acpi/apei.h>	/* for acpi_hest_init() */
++>>>>>>> 7bc5a2bad0b8 (ACPI: Support _OSI("Darwin") correctly)
  
  #include "internal.h"
  
diff --git a/drivers/acpi/osl.c b/drivers/acpi/osl.c
index 167afd5f464f..b44cae202870 100644
--- a/drivers/acpi/osl.c
+++ b/drivers/acpi/osl.c
@@ -156,6 +156,16 @@ static u32 acpi_osi_handler(acpi_string interface, u32 supported)
 			osi_linux.dmi ? " via DMI" : "");
 	}
 
+	if (!strcmp("Darwin", interface)) {
+		/*
+		 * Apple firmware will behave poorly if it receives positive
+		 * answers to "Darwin" and any other OS. Respond positively
+		 * to Darwin and then disable all other vendor strings.
+		 */
+		acpi_update_interfaces(ACPI_DISABLE_ALL_VENDOR_STRINGS);
+		supported = ACPI_UINT32_MAX;
+	}
+
 	return supported;
 }
 
* Unmerged path drivers/acpi/pci_root.c
