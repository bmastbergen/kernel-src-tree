iommu/amd: Free domain id when free a domain of struct dma_ops_domain

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Free domain id when free a domain of struct dma_ops_domain (Jerry Snitselaar) [1411581]
Rebuild_FUZZ: 95.45%
commit-author Baoquan He <bhe@redhat.com>
commit c3db901c54466a9c135d1e6e95fec452e8a42666
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c3db901c.failed

The current code missed freeing domain id when free a domain of
struct dma_ops_domain.

	Signed-off-by: Baoquan He <bhe@redhat.com>
Fixes: ec487d1a110a ('x86, AMD IOMMU: add domain allocation and deallocation functions')
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit c3db901c54466a9c135d1e6e95fec452e8a42666)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index 5ae93c18b82e,b5b117b44026..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -1916,14 -1719,12 +1916,19 @@@ static void dma_ops_domain_free(struct 
  
  	del_domain_from_list(&dom->domain);
  
 -	put_iova_domain(&dom->iovad);
 -
  	free_pagetable(&dom->domain);
  
++<<<<<<< HEAD
 +	for (i = 0; i < APERTURE_MAX_RANGES; ++i) {
 +		if (!dom->aperture[i])
 +			continue;
 +		free_page((unsigned long)dom->aperture[i]->bitmap);
 +		kfree(dom->aperture[i]);
 +	}
++=======
+ 	if (dom->domain.id)
+ 		domain_id_free(dom->domain.id);
++>>>>>>> c3db901c5446 (iommu/amd: Free domain id when free a domain of struct dma_ops_domain)
  
  	kfree(dom);
  }
* Unmerged path drivers/iommu/amd_iommu.c
