x86/hyperv: Check frequency MSRs presence according to the specification

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 2cf0284223a40773bd0ec76a409a7cbf0607ca28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2cf02842.failed

Hyper-V TLFS specifies two bits which should be checked before accessing
frequency MSRs:

- AccessFrequencyMsrs (BIT(11) in EAX) which indicates if we have access to
  frequency MSRs.
- FrequencyMsrsAvailable (BIT(8) in EDX) which indicates is these MSRs are
  present.
  
Rename and specify these bits accordingly.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Stephen Hemminger <sthemmin@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Cc: Ladi Prosek <lprosek@redhat.com>
	Cc: Jork Loeser <jloeser@microsoft.com>
	Cc: devel@linuxdriverproject.org
	Cc: "K. Y. Srinivasan" <kys@microsoft.com>
Link: http://lkml.kernel.org/r/20170622100730.18112-2-vkuznets@redhat.com

(cherry picked from commit 2cf0284223a40773bd0ec76a409a7cbf0607ca28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/uapi/asm/hyperv.h
diff --cc arch/x86/include/uapi/asm/hyperv.h
index c0d21031536f,f4fef5a24ebd..000000000000
--- a/arch/x86/include/uapi/asm/hyperv.h
+++ b/arch/x86/include/uapi/asm/hyperv.h
@@@ -73,6 -67,12 +67,15 @@@
    */
  #define HV_X64_MSR_STAT_PAGES_AVAILABLE		(1 << 8)
  
++<<<<<<< HEAD
++=======
+ /* Frequency MSRs available */
+ #define HV_FEATURE_FREQUENCY_MSRS_AVAILABLE	(1 << 8)
+ 
+ /* Crash MSR available */
+ #define HV_FEATURE_GUEST_CRASH_MSR_AVAILABLE (1 << 10)
+ 
++>>>>>>> 2cf0284223a4 (x86/hyperv: Check frequency MSRs presence according to the specification)
  /*
   * Feature identification: EBX indicates which flags were specified at
   * partition creation. The format is the same as the partition creation
* Unmerged path arch/x86/include/uapi/asm/hyperv.h
diff --git a/arch/x86/kernel/cpu/mshyperv.c b/arch/x86/kernel/cpu/mshyperv.c
index 13eadd65c578..be462a88f76b 100644
--- a/arch/x86/kernel/cpu/mshyperv.c
+++ b/arch/x86/kernel/cpu/mshyperv.c
@@ -174,7 +174,8 @@ static void __init ms_hyperv_init_platform(void)
 	       ms_hyperv.features, ms_hyperv.hints);
 
 #ifdef CONFIG_X86_LOCAL_APIC
-	if (ms_hyperv.features & HV_X64_MSR_APIC_FREQUENCY_AVAILABLE) {
+	if (ms_hyperv.features & HV_X64_ACCESS_FREQUENCY_MSRS &&
+	    ms_hyperv.misc_features & HV_FEATURE_FREQUENCY_MSRS_AVAILABLE) {
 		/*
 		 * Get the APIC frequency.
 		 */
