drm/i915: Enable voltage swing before enabling DDI_BUF_CTL.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [gpu] drm/i915: Enable voltage swing before enabling DDI_BUF_CTL (Rob Clark) [1520639]
Rebuild_FUZZ: 99.15%
commit-author Rodrigo Vivi <rodrigo.vivi@intel.com>
commit 381f957044d0618e52fe47b0af4de54cdccad893
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/381f9570.failed

Sequences for DisplayPort asks us to
" Configure voltage swing and related IO settings.
Refer to DDI Buffer section."

before "Configure and enable DDI_BUF_CTL"

On BXT and CNL this means to execute the ddi vswing sequences.

At this point these sequences calls are getting duplicated for DP
because they are all called from DP link trainning sequences.

However this patch is not yet removing it before a futher discussion
since spec also allows that during link training without disabling
anything:

"
Notes
Changing voltage swing during link training:
Change the swing setting following the DDI Buffer section.
The port does not need to be disabled.
"

	Cc: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
	Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Reviewed-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20170829232230.23051-4-rodrigo.vivi@intel.com
(cherry picked from commit 381f957044d0618e52fe47b0af4de54cdccad893)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ddi.c
diff --cc drivers/gpu/drm/i915/intel_ddi.c
index d42007e133bd,506782c1a62a..000000000000
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@@ -1688,6 -2135,10 +1688,13 @@@ static void intel_ddi_pre_enable_dp(str
  	struct intel_dp *intel_dp = enc_to_intel_dp(&encoder->base);
  	struct drm_i915_private *dev_priv = to_i915(encoder->base.dev);
  	enum port port = intel_ddi_get_encoder_port(encoder);
++<<<<<<< HEAD
++=======
+ 	struct intel_digital_port *dig_port = enc_to_dig_port(&encoder->base);
+ 	uint32_t level = intel_ddi_dp_level(intel_dp);
+ 
+ 	WARN_ON(link_mst && (port == PORT_A || port == PORT_E));
++>>>>>>> 381f957044d0 (drm/i915: Enable voltage swing before enabling DDI_BUF_CTL.)
  
  	intel_dp_set_link_params(intel_dp, link_rate, lane_count,
  				 link_mst);
@@@ -1695,7 -2146,16 +1702,20 @@@
  		intel_edp_panel_on(intel_dp);
  
  	intel_ddi_clk_select(encoder, pll);
++<<<<<<< HEAD
 +	intel_prepare_dp_ddi_buffers(encoder);
++=======
+ 
+ 	intel_display_power_get(dev_priv, dig_port->ddi_io_power_domain);
+ 
+ 	if (IS_CANNONLAKE(dev_priv))
+ 		cnl_ddi_vswing_sequence(encoder, level);
+ 	else if (IS_GEN9_LP(dev_priv))
+ 		bxt_ddi_vswing_sequence(dev_priv, level, port, encoder->type);
+ 	else
+ 		intel_prepare_dp_ddi_buffers(encoder);
+ 
++>>>>>>> 381f957044d0 (drm/i915: Enable voltage swing before enabling DDI_BUF_CTL.)
  	intel_ddi_init_dp_buf_reg(encoder);
  	intel_dp_sink_dpms(intel_dp, DRM_MODE_DPMS_ON);
  	intel_dp_start_link_train(intel_dp);
* Unmerged path drivers/gpu/drm/i915/intel_ddi.c
