bnxt_en: add support for Flower based vxlan encap/decap offload

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Sathya Perla <sathya.perla@broadcom.com>
commit 8c95f773b4a367f7b9bcca7ab5f85675cfc812e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8c95f773.failed

This patch adds IPv4 vxlan encap/decap action support to TC-flower
offload.

For vxlan encap, the driver maintains a tunnel encap hash-table.
When a new flow with a tunnel encap action arrives, this table
is looked up; if an encap entry exists, it uses the already
programmed encap_record_handle as the tunnel_handle in the
hwrm_cfa_flow_alloc cmd. Else, a new encap node is added and the
L2 header fields are queried via a route lookup.
hwrm_cfa_encap_record_alloc cmd is used to create a new encap
record and the encap_record_handle is used as the tunnel_handle
while adding the flow.

For vxlan decap, the driver maintains a tunnel decap hash-table.
When a new flow with a tunnel decap action arrives, this table
is looked up; if a decap entry exists, it uses the already
programmed decap_filter_handle as the tunnel_handle in the
hwrm_cfa_flow_alloc cmd. Else, a new decap node is added and
a decap_filter_handle is alloc'd via the hwrm_cfa_decap_filter_alloc
cmd. This handle is used as the tunnel_handle while adding the flow.

The code to issue the HWRM FW cmds is introduced in a follow-up patch.

	Signed-off-by: Sathya Perla <sathya.perla@broadcom.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8c95f773b4a367f7b9bcca7ab5f85675cfc812e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.h
#	drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
#	drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c
#	drivers/net/ethernet/broadcom/bnxt/bnxt_tc.h
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.h
index db9012ea3731,d88d864db7d4..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
@@@ -905,6 -944,65 +905,68 @@@ struct bnxt_led_info 
  #define BNXT_CAG_REG_LEGACY_INT_STATUS	0x4014
  #define BNXT_CAG_REG_BASE		0x300000
  
++<<<<<<< HEAD
++=======
+ struct bnxt_coal {
+ 	u16			coal_ticks;
+ 	u16			coal_ticks_irq;
+ 	u16			coal_bufs;
+ 	u16			coal_bufs_irq;
+ 			/* RING_IDLE enabled when coal ticks < idle_thresh  */
+ 	u16			idle_thresh;
+ 	u8			bufs_per_record;
+ 	u8			budget;
+ };
+ 
+ struct bnxt_tc_info {
+ 	bool				enabled;
+ 
+ 	/* hash table to store TC offloaded flows */
+ 	struct rhashtable		flow_table;
+ 	struct rhashtable_params	flow_ht_params;
+ 
+ 	/* hash table to store L2 keys of TC flows */
+ 	struct rhashtable		l2_table;
+ 	struct rhashtable_params	l2_ht_params;
+ 	/* hash table to store L2 keys for TC tunnel decap */
+ 	struct rhashtable		decap_l2_table;
+ 	struct rhashtable_params	decap_l2_ht_params;
+ 	/* hash table to store tunnel decap entries */
+ 	struct rhashtable		decap_table;
+ 	struct rhashtable_params	decap_ht_params;
+ 	/* hash table to store tunnel encap entries */
+ 	struct rhashtable		encap_table;
+ 	struct rhashtable_params	encap_ht_params;
+ 
+ 	/* lock to atomically add/del an l2 node when a flow is
+ 	 * added or deleted.
+ 	 */
+ 	struct mutex			lock;
+ 
+ 	/* Stat counter mask (width) */
+ 	u64				bytes_mask;
+ 	u64				packets_mask;
+ };
+ 
+ struct bnxt_vf_rep_stats {
+ 	u64			packets;
+ 	u64			bytes;
+ 	u64			dropped;
+ };
+ 
+ struct bnxt_vf_rep {
+ 	struct bnxt			*bp;
+ 	struct net_device		*dev;
+ 	struct metadata_dst		*dst;
+ 	u16				vf_idx;
+ 	u16				tx_cfa_action;
+ 	u16				rx_cfa_code;
+ 
+ 	struct bnxt_vf_rep_stats	rx_stats;
+ 	struct bnxt_vf_rep_stats	tx_stats;
+ };
+ 
++>>>>>>> 8c95f773b4a3 (bnxt_en: add support for Flower based vxlan encap/decap offload)
  struct bnxt {
  	void __iomem		*bar0;
  	void __iomem		*bar1;
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_tc.h
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.h
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_tc.h
