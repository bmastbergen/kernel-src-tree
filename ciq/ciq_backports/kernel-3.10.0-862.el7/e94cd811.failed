net: remove MTU limits for dummy and ifb device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] remove MTU limits for dummy and ifb device (Ivan Vecera) [1527175]
Rebuild_FUZZ: 94.38%
commit-author Zhang Shengju <zhangshengju@cmss.chinamobile.com>
commit e94cd8113ce63bca34040aae52d0603baf6ec07c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e94cd811.failed

These two drivers (dummy and ifb) call ether_setup(), after commit
61e84623ace3 ("net: centralize net_device min/max MTU checking"), the
range of mtu is [min_mtu, max_mtu], which is [68, 1500] by default.

These two devices should not have limits on MTU. This patch set their
min_mtu/max_mtu to 0. So that dev_set_mtu() will not check the mtu range,
and can be set with any value.

CC: Eric Dumazet <edumazet@google.com>
CC: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Zhang Shengju <zhangshengju@cmss.chinamobile.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e94cd8113ce63bca34040aae52d0603baf6ec07c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ifb.c
diff --cc drivers/net/ifb.c
index c69ebf414c33,0008da7e9d4c..000000000000
--- a/drivers/net/ifb.c
+++ b/drivers/net/ifb.c
@@@ -187,6 -229,11 +187,14 @@@ static void ifb_setup(struct net_devic
  	dev->priv_flags &= ~IFF_TX_SKB_SHARING;
  	netif_keep_dst(dev);
  	eth_hw_addr_random(dev);
++<<<<<<< HEAD
++=======
+ 	dev->needs_free_netdev = true;
+ 	dev->priv_destructor = ifb_dev_free;
+ 
+ 	dev->min_mtu = 0;
+ 	dev->max_mtu = 0;
++>>>>>>> e94cd8113ce6 (net: remove MTU limits for dummy and ifb device)
  }
  
  static netdev_tx_t ifb_xmit(struct sk_buff *skb, struct net_device *dev)
diff --git a/drivers/net/dummy.c b/drivers/net/dummy.c
index db8ccfdb9e5c..a7f863c7cf61 100644
--- a/drivers/net/dummy.c
+++ b/drivers/net/dummy.c
@@ -137,7 +137,7 @@ static void dummy_setup(struct net_device *dev)
 	eth_hw_addr_random(dev);
 
 	dev->min_mtu = 0;
-	dev->max_mtu = ETH_MAX_MTU;
+	dev->max_mtu = 0;
 }
 
 static int dummy_validate(struct nlattr *tb[], struct nlattr *data[])
* Unmerged path drivers/net/ifb.c
