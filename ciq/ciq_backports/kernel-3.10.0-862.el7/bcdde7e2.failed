sysfs: make __sysfs_remove_dir() recursive

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Tejun Heo <tj@kernel.org>
commit bcdde7e221a8750f9b62b6d0bd31b72ea4ad9309
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bcdde7e2.failed

Currently, sysfs directory removal is inconsistent in that it would
remove any files directly under it but wouldn't recurse into
directories.  Thanks to group subdirectories, this doesn't even match
with kobject boundaries.  sysfs is in the process of being separated
out so that it can be used by multiple subsystems and we want to have
a consistent behavior - either removal of a sysfs_dirent should remove
every descendant entries or none instead of something inbetween.

This patch implements proper recursive removal in
__sysfs_remove_dir().  The function now walks its subtree in a
post-order walk to remove all descendants.

This is a behavior change but kobject / driver layer, which currently
is the only consumer, has already been updated to handle duplicate
removal attempts, so nothing should be broken after this change.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit bcdde7e221a8750f9b62b6d0bd31b72ea4ad9309)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/sysfs/dir.c
diff --cc fs/sysfs/dir.c
index fd502d3fc9fc,0cdfd8128d3e..000000000000
--- a/fs/sysfs/dir.c
+++ b/fs/sysfs/dir.c
@@@ -828,17 -853,17 +882,29 @@@ static void __sysfs_remove_dir(struct s
  		return;
  
  	pr_debug("sysfs %s: removing dir\n", dir_sd->s_name);
++<<<<<<< HEAD
 +	sysfs_addrm_start(&acxt, dir_sd);
 +	pos = rb_first(&dir_sd->s_dir.children);
 +	while (pos) {
 +		struct sysfs_dirent *sd = to_sysfs_dirent(pos);
 +		pos = rb_next(pos);
 +		if (sysfs_type(sd) != SYSFS_DIR)
 +			sysfs_remove_one(&acxt, sd);
 +	}
 +	sysfs_addrm_finish(&acxt);
++=======
+ 	sysfs_addrm_start(&acxt);
++>>>>>>> bcdde7e221a8 (sysfs: make __sysfs_remove_dir() recursive)
+ 
+ 	next = NULL;
+ 	do {
+ 		pos = next;
+ 		next = sysfs_next_descendant_post(pos, dir_sd);
+ 		if (pos)
+ 			sysfs_remove_one(&acxt, pos);
+ 	} while (next);
  
- 	remove_dir(dir_sd);
+ 	sysfs_addrm_finish(&acxt);
  }
  
  /**
@@@ -849,8 -874,7 +915,12 @@@
   *	the directory before we remove the directory, and we've inlined
   *	what used to be sysfs_rmdir() below, instead of calling separately.
   */
++<<<<<<< HEAD
 +
 +void sysfs_remove_dir(struct kobject * kobj)
++=======
+ void sysfs_remove_dir(struct kobject *kobj)
++>>>>>>> bcdde7e221a8 (sysfs: make __sysfs_remove_dir() recursive)
  {
  	struct sysfs_dirent *sd = kobj->sd;
  
* Unmerged path fs/sysfs/dir.c
