vxlan: Fix uninitialized variable warnings.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] vxlan: Fix uninitialized variable warnings (Jiri Benc) [1467280]
Rebuild_FUZZ: 98.82%
commit-author David S. Miller <davem@davemloft.net>
commit 8ebd115bb23ac42f14a5e242500be61d8606b82d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8ebd115b.failed

drivers/net/vxlan.c: In function ‘vxlan_xmit_one’:
drivers/net/vxlan.c:2141:10: warning: ‘err’ may be used uninitialized in this function [-Wmaybe-uninitialized]

	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8ebd115bb23ac42f14a5e242500be61d8606b82d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index f909b180e18b,0a3fd675408f..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1995,47 -2066,30 +1995,63 @@@ static void vxlan_xmit_one(struct sk_bu
  				     &src->sin.sin_addr.s_addr,
  				     dst_cache, info);
  		if (IS_ERR(rt)) {
++<<<<<<< HEAD
 +			netdev_dbg(dev, "no route to %pI4\n",
 +				   &dst->sin.sin_addr.s_addr);
 +			dev->stats.tx_carrier_errors++;
 +			goto tx_error;
++=======
+ 			err = PTR_ERR(rt);
+ 			goto tx_error;
+ 		}
+ 
+ 		/* Bypass encapsulation if the destination is local */
+ 		if (!info) {
+ 			err = encap_bypass_if_local(skb, dev, vxlan, dst,
+ 						    dst_port, vni, &rt->dst,
+ 						    rt->rt_flags);
+ 			if (err)
+ 				return;
+ 		} else if (info->key.tun_flags & TUNNEL_DONT_FRAGMENT) {
+ 			df = htons(IP_DF);
++>>>>>>> 8ebd115bb23a (vxlan: Fix uninitialized variable warnings.)
 +		}
 +
 +		if (rt->dst.dev == dev) {
 +			netdev_dbg(dev, "circular route to %pI4\n",
 +				   &dst->sin.sin_addr.s_addr);
 +			dev->stats.collisions++;
 +			goto rt_tx_error;
 +		}
 +
 +		/* Bypass encapsulation if the destination is local */
 +		if (!info && rt->rt_flags & RTCF_LOCAL &&
 +		    !(rt->rt_flags & (RTCF_BROADCAST | RTCF_MULTICAST))) {
 +			struct vxlan_dev *dst_vxlan;
 +
 +			ip_rt_put(rt);
 +			dst_vxlan = vxlan_find_vni(vxlan->net, vni,
 +						   dst->sa.sa_family, dst_port,
 +						   vxlan->flags);
 +			if (!dst_vxlan)
 +				goto tx_error;
 +			vxlan_encap_bypass(skb, vxlan, dst_vxlan);
 +			return;
  		}
  
 -		ndst = &rt->dst;
 +		if (!info)
 +			udp_sum = !(flags & VXLAN_F_UDP_ZERO_CSUM_TX);
 +		else if (info->key.tun_flags & TUNNEL_DONT_FRAGMENT)
 +			df = htons(IP_DF);
 +
  		tos = ip_tunnel_ecn_encap(tos, old_iph, skb);
  		ttl = ttl ? : ip4_dst_hoplimit(&rt->dst);
 -		err = vxlan_build_skb(skb, ndst, sizeof(struct iphdr),
 +		err = vxlan_build_skb(skb, &rt->dst, sizeof(struct iphdr),
  				      vni, md, flags, udp_sum);
  		if (err < 0)
 -			goto tx_error;
 +			goto xmit_tx_error;
  
 -		udp_tunnel_xmit_skb(rt, sock4->sock->sk, skb, src->sin.sin_addr.s_addr,
 +		udp_tunnel_xmit_skb(rt, sk, skb, src->sin.sin_addr.s_addr,
  				    dst->sin.sin_addr.s_addr, tos, ttl, df,
  				    src_port, dst_port, xnet, !udp_sum);
  #if IS_ENABLED(CONFIG_IPV6)
@@@ -2053,9 -2102,8 +2069,14 @@@
  					&src->sin6.sin6_addr,
  					dst_cache, info);
  		if (IS_ERR(ndst)) {
++<<<<<<< HEAD
 +			netdev_dbg(dev, "no route to %pI6\n",
 +				   &dst->sin6.sin6_addr);
 +			dev->stats.tx_carrier_errors++;
++=======
+ 			err = PTR_ERR(ndst);
+ 			ndst = NULL;
++>>>>>>> 8ebd115bb23a (vxlan: Fix uninitialized variable warnings.)
  			goto tx_error;
  		}
  
* Unmerged path drivers/net/vxlan.c
