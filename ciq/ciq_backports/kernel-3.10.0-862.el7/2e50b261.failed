net/mlx5e: Set page to null in case dma mapping fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Set page to null in case dma mapping fails (Kamal Heib) [1456694]
Rebuild_FUZZ: 96.08%
commit-author Inbar Karmy <inbark@mellanox.com>
commit 2e50b2619538ea0224c037f6fa746023089e0654
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2e50b261.failed

Currently, when dma mapping fails, put_page is called,
but the page is not set to null. Later, in the page_reuse treatment in
mlx5e_free_rx_descs(), mlx5e_page_release() is called for the second time,
improperly doing dma_unmap (for a non-mapped address) and an extra put_page.
Prevent this by nullifying the page pointer when dma_map fails.

Fixes: accd58833237 ("net/mlx5e: Introduce RX Page-Reuse")
	Signed-off-by: Inbar Karmy <inbark@mellanox.com>
	Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
	Cc: kernel-team@fb.com
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 2e50b2619538ea0224c037f6fa746023089e0654)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index d6a4d3219a46,91b1b0938931..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -230,19 -218,17 +230,22 @@@ static inline int mlx5e_page_alloc_mapp
  	if (mlx5e_rx_cache_get(rq, dma_info))
  		return 0;
  
- 	page = dev_alloc_pages(rq->buff.page_order);
- 	if (unlikely(!page))
+ 	dma_info->page = dev_alloc_pages(rq->buff.page_order);
+ 	if (unlikely(!dma_info->page))
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	dma_info->addr = dma_map_page(rq->pdev, page, 0,
 +				      RQ_PAGE_SIZE(rq), DMA_FROM_DEVICE);
++=======
+ 	dma_info->addr = dma_map_page(rq->pdev, dma_info->page, 0,
+ 				      RQ_PAGE_SIZE(rq), rq->buff.map_dir);
++>>>>>>> 2e50b2619538 (net/mlx5e: Set page to null in case dma mapping fails)
  	if (unlikely(dma_mapping_error(rq->pdev, dma_info->addr))) {
- 		put_page(page);
+ 		put_page(dma_info->page);
+ 		dma_info->page = NULL;
  		return -ENOMEM;
  	}
- 	dma_info->page = page;
  
  	return 0;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
