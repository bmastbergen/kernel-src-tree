sched: have stub for tcf_destroy_chain in case NET_CLS is not configured

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jiri Pirko <jiri@mellanox.com>
commit 8ae70032552a8082734d0b8550848cf6bf92e1d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8ae70032.failed

This fixes broken build for !NET_CLS:

net/built-in.o: In function `fq_codel_destroy':
/home/sab/linux/net-next/net/sched/sch_fq_codel.c:468: undefined reference to `tcf_destroy_chain'

Fixes: cf1facda2f61 ("sched: move tcf_proto_destroy and tcf_destroy_chain helpers into cls_api")
	Reported-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Tested-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8ae70032552a8082734d0b8550848cf6bf92e1d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/pkt_cls.h
diff --cc include/net/pkt_cls.h
index ddbf01b80b4c,be5c12a5c375..000000000000
--- a/include/net/pkt_cls.h
+++ b/include/net/pkt_cls.h
@@@ -17,6 -17,14 +17,17 @@@ struct tcf_walker 
  int register_tcf_proto_ops(struct tcf_proto_ops *ops);
  int unregister_tcf_proto_ops(struct tcf_proto_ops *ops);
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_NET_CLS
+ void tcf_destroy_chain(struct tcf_proto __rcu **fl);
+ #else
+ static inline void tcf_destroy_chain(struct tcf_proto __rcu **fl)
+ {
+ }
+ #endif
+ 
++>>>>>>> 8ae70032552a (sched: have stub for tcf_destroy_chain in case NET_CLS is not configured)
  static inline unsigned long
  __cls_set_class(unsigned long *clp, unsigned long cl)
  {
* Unmerged path include/net/pkt_cls.h
