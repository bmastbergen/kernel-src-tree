net: constify netif_is_* helpers net_device param

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] constify netif_is_* helpers net_device param (Ivan Vecera) [1500976]
Rebuild_FUZZ: 94.62%
commit-author Jiri Pirko <jiri@mellanox.com>
commit b618aaa91b5870e7bd139987ac4b7bf0851142d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b618aaa9.failed

As suggested by Eric, these helpers should have const dev param.

	Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b618aaa91b5870e7bd139987ac4b7bf0851142d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/if_vlan.h
#	include/linux/netdevice.h
diff --cc include/linux/if_vlan.h
index 3a545ed01b7d,05f5879821b8..000000000000
--- a/include/linux/if_vlan.h
+++ b/include/linux/if_vlan.h
@@@ -73,7 -73,7 +73,11 @@@ static inline struct vlan_ethhdr *vlan_
  /* found in socket.c */
  extern void vlan_ioctl_set(int (*hook)(struct net *, void __user *));
  
++<<<<<<< HEAD
 +static inline int is_vlan_dev(struct net_device *dev)
++=======
+ static inline bool is_vlan_dev(const struct net_device *dev)
++>>>>>>> b618aaa91b58 (net: constify netif_is_* helpers net_device param)
  {
          return dev->priv_flags & IFF_802_1Q_VLAN;
  }
diff --cc include/linux/netdevice.h
index f2e995a93118,1bb21ff0fa64..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -3906,12 -3661,8 +3906,12 @@@ extern u8 netdev_rss_key[NETDEV_RSS_KEY
  void netdev_rss_key_fill(void *buffer, size_t len);
  
  int dev_get_nest_level(struct net_device *dev,
- 		       bool (*type_check)(struct net_device *dev));
+ 		       bool (*type_check)(const struct net_device *dev));
  int skb_checksum_help(struct sk_buff *skb);
 +int skb_crc32c_csum_help(struct sk_buff *skb);
 +int skb_csum_hwoffload_help(struct sk_buff *skb,
 +			    const netdev_features_t features);
 +
  struct sk_buff *__skb_gso_segment(struct sk_buff *skb,
  				  netdev_features_t features, bool tx_path);
  struct sk_buff *skb_mac_gso_segment(struct sk_buff *skb,
@@@ -4123,17 -3863,22 +4123,35 @@@ static inline bool netif_is_macvlan(con
  	return dev->priv_flags & IFF_MACVLAN;
  }
  
++<<<<<<< HEAD
 +static inline bool netif_is_macsec(const struct net_device *dev)
 +{
 +	return dev->priv_flags & IFF_MACSEC;
 +}
 +
 +static inline bool netif_is_macvlan_port(struct net_device *dev)
++=======
+ static inline bool netif_is_macvlan_port(const struct net_device *dev)
++>>>>>>> b618aaa91b58 (net: constify netif_is_* helpers net_device param)
  {
  	return dev->priv_flags & IFF_MACVLAN_PORT;
  }
  
++<<<<<<< HEAD
 +static inline bool netif_is_bond_master(struct net_device *dev)
++=======
+ static inline bool netif_is_ipvlan(const struct net_device *dev)
+ {
+ 	return dev->priv_flags & IFF_IPVLAN_SLAVE;
+ }
+ 
+ static inline bool netif_is_ipvlan_port(const struct net_device *dev)
+ {
+ 	return dev->priv_flags & IFF_IPVLAN_MASTER;
+ }
+ 
+ static inline bool netif_is_bond_master(const struct net_device *dev)
++>>>>>>> b618aaa91b58 (net: constify netif_is_* helpers net_device param)
  {
  	return dev->flags & IFF_MASTER && dev->priv_flags & IFF_BONDING;
  }
@@@ -4158,17 -3908,17 +4176,21 @@@ static inline bool netif_is_bridge_mast
  	return dev->priv_flags & IFF_EBRIDGE;
  }
  
 -static inline bool netif_is_bridge_port(const struct net_device *dev)
 +static inline bool netif_is_ovs_master(const struct net_device *dev)
  {
 -	return dev->priv_flags & IFF_BRIDGE_PORT;
 +	return dev->priv_flags & IFF_OPENVSWITCH;
  }
  
 -static inline bool netif_is_ovs_master(const struct net_device *dev)
++<<<<<<< HEAD
 +static inline bool netif_is_rxfh_configured(const struct net_device *dev)
  {
 -	return dev->priv_flags & IFF_OPENVSWITCH;
 +	return dev->priv_flags & IFF_RXFH_CONFIGURED;
  }
  
 +static inline bool netif_is_team_master(struct net_device *dev)
++=======
+ static inline bool netif_is_team_master(const struct net_device *dev)
++>>>>>>> b618aaa91b58 (net: constify netif_is_* helpers net_device param)
  {
  	return dev->priv_flags & IFF_TEAM;
  }
* Unmerged path include/linux/if_vlan.h
* Unmerged path include/linux/netdevice.h
diff --git a/net/core/dev.c b/net/core/dev.c
index a40c9678b9f6..05b1f7391ca7 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -6119,7 +6119,7 @@ EXPORT_SYMBOL(netdev_lower_dev_get_private);
 
 
 int dev_get_nest_level(struct net_device *dev,
-		       bool (*type_check)(struct net_device *dev))
+		       bool (*type_check)(const struct net_device *dev))
 {
 	struct net_device *lower = NULL;
 	struct list_head *iter;
