IB/core: Don't use is_async in event files to infer events size

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Matan Barak <matanb@mellanox.com>
commit e0fcc61113c17a2eae0dea7e9e67ac71849475b5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e0fcc611.failed

Previously, we inferred the events size in ib_uverbs_event_read by
using the is_async flag. Instead of that, we pass the event size
directly.

Fixes: 1e7710f3f656 ('IB/core: Change completion channel to use the reworked objects schema')
	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Reviewed-by: Sean Hefty <sean.hefty@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e0fcc61113c17a2eae0dea7e9e67ac71849475b5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_main.c
diff --cc drivers/infiniband/core/uverbs_main.c
index 1b7098d63376,4ab0e5d3ce15..000000000000
--- a/drivers/infiniband/core/uverbs_main.c
+++ b/drivers/infiniband/core/uverbs_main.c
@@@ -372,12 -253,13 +372,19 @@@ static void ib_uverbs_release_file(stru
  	kfree(file);
  }
  
++<<<<<<< HEAD
 +static ssize_t ib_uverbs_event_read(struct file *filp, char __user *buf,
 +				    size_t count, loff_t *pos)
++=======
+ static ssize_t ib_uverbs_event_read(struct ib_uverbs_event_file *file,
+ 				    struct ib_uverbs_file *uverbs_file,
+ 				    struct file *filp, char __user *buf,
+ 				    size_t count, loff_t *pos,
+ 				    size_t eventsz)
++>>>>>>> e0fcc61113c1 (IB/core: Don't use is_async in event files to infer events size)
  {
 +	struct ib_uverbs_event_file *file = filp->private_data;
  	struct ib_uverbs_event *event;
- 	int eventsz;
  	int ret = 0;
  
  	spin_lock_irq(&file->lock);
@@@ -407,11 -289,6 +414,14 @@@
  
  	event = list_entry(file->event_list.next, struct ib_uverbs_event, list);
  
++<<<<<<< HEAD
 +	if (file->is_async)
 +		eventsz = sizeof (struct ib_uverbs_async_event_desc);
 +	else
 +		eventsz = sizeof (struct ib_uverbs_comp_event_desc);
 +
++=======
++>>>>>>> e0fcc61113c1 (IB/core: Don't use is_async in event files to infer events size)
  	if (eventsz > count) {
  		ret   = -EINVAL;
  		event = NULL;
@@@ -437,7 -314,30 +447,34 @@@
  	return ret;
  }
  
++<<<<<<< HEAD
 +static unsigned int ib_uverbs_event_poll(struct file *filp,
++=======
+ static ssize_t ib_uverbs_async_event_read(struct file *filp, char __user *buf,
+ 					  size_t count, loff_t *pos)
+ {
+ 	struct ib_uverbs_async_event_file *file = filp->private_data;
+ 
+ 	return ib_uverbs_event_read(&file->ev_file, file->uverbs_file, filp,
+ 				    buf, count, pos,
+ 				    sizeof(struct ib_uverbs_async_event_desc));
+ }
+ 
+ static ssize_t ib_uverbs_comp_event_read(struct file *filp, char __user *buf,
+ 					 size_t count, loff_t *pos)
+ {
+ 	struct ib_uverbs_completion_event_file *comp_ev_file =
+ 		filp->private_data;
+ 
+ 	return ib_uverbs_event_read(&comp_ev_file->ev_file,
+ 				    comp_ev_file->uobj_file.ufile, filp,
+ 				    buf, count, pos,
+ 				    sizeof(struct ib_uverbs_comp_event_desc));
+ }
+ 
+ static unsigned int ib_uverbs_event_poll(struct ib_uverbs_event_file *file,
+ 					 struct file *filp,
++>>>>>>> e0fcc61113c1 (IB/core: Don't use is_async in event files to infer events size)
  					 struct poll_table_struct *wait)
  {
  	unsigned int pollflags = 0;
* Unmerged path drivers/infiniband/core/uverbs_main.c
