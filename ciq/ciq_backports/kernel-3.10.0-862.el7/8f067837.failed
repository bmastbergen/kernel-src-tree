drm/i915: Display WA #1133 WaFbcSkipSegments:cnl, glk

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Rodrigo Vivi <rodrigo.vivi@intel.com>
commit 8f067837c4b713ce2e69be95af7b2a5eb3bd7de8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8f067837.failed

Skip compressing 1 segment at the end of the frame,
avoid a pixel count mismatch nuke event when last active
pixel and dummy pixel has same color for Odd Plane
Width / Height.

For both platforms Gemini Lake and Cannon Lake.

v2: Use function-like macro and also use mask to clean
    to make sure bit 11 is 0. (Suggested by Paulo).
v3: Add Display WA notation and also apply for GLK.
    Both Forgotten on v2.
    Using "GLK_" prefix since GLK came before CNL.
v4: Forgot to "|=" when moving directly macro to masked
    val. (Noticed by Paulo.)
v5: Rebased on top of 0a46ddd57c9e ("drm/i915/cnp: Wa 1181:
    Fix Backlight issue")

	Cc: Imre Deak <imre.deak@intel.com>
	Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
	Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Reviewed-by: Paulo Zanoni <paulo.r.zanoni@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20170905193013.31710-1-rodrigo.vivi@intel.com
(cherry picked from commit 8f067837c4b713ce2e69be95af7b2a5eb3bd7de8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_pm.c
diff --cc drivers/gpu/drm/i915/intel_pm.c
index 52c3abe82e2f,0201816a4229..000000000000
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@@ -99,9 -119,37 +99,43 @@@ static void bxt_init_clock_gating(struc
  	 * Wa: Backlight PWM may stop in the asserted state, causing backlight
  	 * to stay fully on.
  	 */
++<<<<<<< HEAD
 +	if (IS_BXT_REVID(dev_priv, BXT_REVID_B0, REVID_FOREVER))
 +		I915_WRITE(GEN9_CLKGATE_DIS_0, I915_READ(GEN9_CLKGATE_DIS_0) |
 +			   PWM1_GATING_DIS | PWM2_GATING_DIS);
++=======
+ 	I915_WRITE(GEN9_CLKGATE_DIS_0, I915_READ(GEN9_CLKGATE_DIS_0) |
+ 		   PWM1_GATING_DIS | PWM2_GATING_DIS);
+ }
+ 
+ static void glk_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	u32 val;
+ 	gen9_init_clock_gating(dev_priv);
+ 
+ 	/*
+ 	 * WaDisablePWMClockGating:glk
+ 	 * Backlight PWM may stop in the asserted state, causing backlight
+ 	 * to stay fully on.
+ 	 */
+ 	I915_WRITE(GEN9_CLKGATE_DIS_0, I915_READ(GEN9_CLKGATE_DIS_0) |
+ 		   PWM1_GATING_DIS | PWM2_GATING_DIS);
+ 
+ 	/* WaDDIIOTimeout:glk */
+ 	if (IS_GLK_REVID(dev_priv, 0, GLK_REVID_A1)) {
+ 		u32 val = I915_READ(CHICKEN_MISC_2);
+ 		val &= ~(GLK_CL0_PWR_DOWN |
+ 			 GLK_CL1_PWR_DOWN |
+ 			 GLK_CL2_PWR_DOWN);
+ 		I915_WRITE(CHICKEN_MISC_2, val);
+ 	}
+ 
+ 	/* Display WA #1133: WaFbcSkipSegments:glk */
+ 	val = I915_READ(ILK_DPFC_CHICKEN);
+ 	val &= ~GLK_SKIP_SEG_COUNT_MASK;
+ 	val |= GLK_SKIP_SEG_EN | GLK_SKIP_SEG_COUNT(1);
+ 	I915_WRITE(ILK_DPFC_CHICKEN, val);
++>>>>>>> 8f067837c4b7 (drm/i915: Display WA #1133 WaFbcSkipSegments:cnl, glk)
  }
  
  static void i915_pineview_get_mem_freq(struct drm_i915_private *dev_priv)
@@@ -7154,7 -8270,56 +7188,60 @@@ static void gen8_set_l3sqc_credits(stru
  	I915_WRITE(GEN7_MISCCPCTL, misccpctl);
  }
  
++<<<<<<< HEAD
 +static void kabylake_init_clock_gating(struct drm_i915_private *dev_priv)
++=======
+ static void cnp_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	if (!HAS_PCH_CNP(dev_priv))
+ 		return;
+ 
+ 	/* Wa #1181 */
+ 	I915_WRITE(SOUTH_DSPCLK_GATE_D, CNP_PWM_CGE_GATING_DISABLE);
+ }
+ 
+ static void cnl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	u32 val;
+ 	cnp_init_clock_gating(dev_priv);
+ 
+ 	/* This is not an Wa. Enable for better image quality */
+ 	I915_WRITE(_3D_CHICKEN3,
+ 		   _MASKED_BIT_ENABLE(_3D_CHICKEN3_AA_LINE_QUALITY_FIX_ENABLE));
+ 
+ 	/* WaEnableChickenDCPR:cnl */
+ 	I915_WRITE(GEN8_CHICKEN_DCPR_1,
+ 		   I915_READ(GEN8_CHICKEN_DCPR_1) | MASK_WAKEMEM);
+ 
+ 	/* WaFbcWakeMemOn:cnl */
+ 	I915_WRITE(DISP_ARB_CTL, I915_READ(DISP_ARB_CTL) |
+ 		   DISP_FBC_MEMORY_WAKE);
+ 
+ 	/* WaSarbUnitClockGatingDisable:cnl (pre-prod) */
+ 	if (IS_CNL_REVID(dev_priv, CNL_REVID_A0, CNL_REVID_B0))
+ 		I915_WRITE(SLICE_UNIT_LEVEL_CLKGATE,
+ 			   I915_READ(SLICE_UNIT_LEVEL_CLKGATE) |
+ 			   SARBUNIT_CLKGATE_DIS);
+ 
+ 	/* Display WA #1133: WaFbcSkipSegments:cnl */
+ 	val = I915_READ(ILK_DPFC_CHICKEN);
+ 	val &= ~GLK_SKIP_SEG_COUNT_MASK;
+ 	val |= GLK_SKIP_SEG_EN | GLK_SKIP_SEG_COUNT(1);
+ 	I915_WRITE(ILK_DPFC_CHICKEN, val);
+ }
+ 
+ static void cfl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	cnp_init_clock_gating(dev_priv);
+ 	gen9_init_clock_gating(dev_priv);
+ 
+ 	/* WaFbcNukeOnHostModify:cfl */
+ 	I915_WRITE(ILK_DPFC_CHICKEN, I915_READ(ILK_DPFC_CHICKEN) |
+ 		   ILK_DPFC_NUKE_ON_ANY_MODIFICATION);
+ }
+ 
+ static void kbl_init_clock_gating(struct drm_i915_private *dev_priv)
++>>>>>>> 8f067837c4b7 (drm/i915: Display WA #1133 WaFbcSkipSegments:cnl, glk)
  {
  	gen9_init_clock_gating(dev_priv);
  
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index c70c07a7b586..ebc5096cc152 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -2159,6 +2159,9 @@ enum skl_disp_power_wells {
 #define ILK_DPFC_CHICKEN	_MMIO(0x43224)
 #define   ILK_DPFC_DISABLE_DUMMY0 (1<<8)
 #define   ILK_DPFC_NUKE_ON_ANY_MODIFICATION	(1<<23)
+#define   GLK_SKIP_SEG_EN		(1<<12)
+#define   GLK_SKIP_SEG_COUNT_MASK	(3<<10)
+#define   GLK_SKIP_SEG_COUNT(x)		((x)<<10)
 #define ILK_FBC_RT_BASE		_MMIO(0x2128)
 #define   ILK_FBC_RT_VALID	(1<<0)
 #define   SNB_FBC_FRONT_BUFFER	(1<<1)
* Unmerged path drivers/gpu/drm/i915/intel_pm.c
