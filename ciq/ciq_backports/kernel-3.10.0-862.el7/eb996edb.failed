netvsc: fix dereference before null check errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Colin Ian King <colin.king@canonical.com>
commit eb996edb03a665d038de7bc318182412e44c52f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/eb996edb.failed

ndev is being checked to see if it is a null pointer however before
the null check ndev is being dereferenced; hence there is a potential
null pointer dereference bug that needs fixing. Fix this by only
dereferencing ndev after the null check.

Detected by CoverityScan, CID#1420760, CID#140761 ("Dereference
before null check")

	Signed-off-by: Colin Ian King <colin.king@canonical.com>
	Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eb996edb03a665d038de7bc318182412e44c52f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index 1f2fdf8f9b74,f24c2891dd0c..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -1113,10 -1134,13 +1113,15 @@@ static int netvsc_get_rxfh(struct net_d
  			   u8 *hfunc)
  {
  	struct net_device_context *ndc = netdev_priv(dev);
++<<<<<<< HEAD
 +	struct netvsc_device *ndev = ndc->nvdev;
 +	struct rndis_device *rndis_dev = ndev->extension;
++=======
+ 	struct netvsc_device *ndev = rcu_dereference(ndc->nvdev);
+ 	struct rndis_device *rndis_dev;
++>>>>>>> eb996edb03a6 (netvsc: fix dereference before null check errors)
  	int i;
  
 -	if (!ndev)
 -		return -ENODEV;
 -
  	if (hfunc)
  		*hfunc = ETH_RSS_HASH_TOP;	/* Toeplitz */
  
@@@ -1135,10 -1160,13 +1141,15 @@@ static int netvsc_set_rxfh(struct net_d
  			   const u8 *key, const u8 hfunc)
  {
  	struct net_device_context *ndc = netdev_priv(dev);
++<<<<<<< HEAD
 +	struct netvsc_device *ndev = ndc->nvdev;
 +	struct rndis_device *rndis_dev = ndev->extension;
++=======
+ 	struct netvsc_device *ndev = rtnl_dereference(ndc->nvdev);
+ 	struct rndis_device *rndis_dev;
++>>>>>>> eb996edb03a6 (netvsc: fix dereference before null check errors)
  	int i;
  
 -	if (!ndev)
 -		return -ENODEV;
 -
  	if (hfunc != ETH_RSS_HASH_NO_CHANGE && hfunc != ETH_RSS_HASH_TOP)
  		return -EOPNOTSUPP;
  
* Unmerged path drivers/net/hyperv/netvsc_drv.c
