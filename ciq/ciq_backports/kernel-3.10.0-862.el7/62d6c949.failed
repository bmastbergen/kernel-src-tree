blk-mq-debugfs: Rename functions for registering and unregistering the mq directory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bart Van Assche <bart.vanassche@sandisk.com>
commit 62d6c9496a2bded5262ac9f675b27facb3cd4ce8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/62d6c949.failed

Since the blk_mq_debugfs_*register_hctxs() functions register and
unregister all attributes under the "mq" directory, rename these
into blk_mq_debugfs_*register_mq().

	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Reviewed-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 62d6c9496a2bded5262ac9f675b27facb3cd4ce8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq-debugfs.c
#	block/blk-mq-sysfs.c
#	block/blk-mq.h
diff --cc block/blk-mq-sysfs.c
index 44799e473f05,c2cac20d981d..000000000000
--- a/block/blk-mq-sysfs.c
+++ b/block/blk-mq-sysfs.c
@@@ -375,17 -251,14 +375,21 @@@ static int blk_mq_register_hctx(struct 
  static void __blk_mq_unregister_dev(struct device *dev, struct request_queue *q)
  {
  	struct blk_mq_hw_ctx *hctx;
 -	int i;
 -
 -	lockdep_assert_held(&q->sysfs_lock);
 +	struct blk_mq_ctx *ctx;
 +	int i, j;
  
 -	queue_for_each_hw_ctx(q, hctx, i)
 +	queue_for_each_hw_ctx(q, hctx, i) {
  		blk_mq_unregister_hctx(hctx);
  
++<<<<<<< HEAD
 +		hctx_for_each_ctx(hctx, ctx, j)
 +			kobject_put(&ctx->kobj);
 +
 +		kobject_put(&hctx->kobj);
 +	}
++=======
+ 	blk_mq_debugfs_unregister_mq(q);
++>>>>>>> 62d6c9496a2b (blk-mq-debugfs: Rename functions for registering and unregistering the mq directory)
  
  	kobject_uevent(&q->mq_kobj, KOBJ_REMOVE);
  	kobject_del(&q->mq_kobj);
@@@ -458,8 -352,11 +462,14 @@@ void blk_mq_sysfs_unregister(struct req
  	struct blk_mq_hw_ctx *hctx;
  	int i;
  
 -	mutex_lock(&q->sysfs_lock);
  	if (!q->mq_sysfs_init_done)
++<<<<<<< HEAD
 +		return;
++=======
+ 		goto unlock;
+ 
+ 	blk_mq_debugfs_unregister_mq(q);
++>>>>>>> 62d6c9496a2b (blk-mq-debugfs: Rename functions for registering and unregistering the mq directory)
  
  	queue_for_each_hw_ctx(q, hctx, i)
  		blk_mq_unregister_hctx(hctx);
@@@ -470,8 -370,11 +480,14 @@@ int blk_mq_sysfs_register(struct reques
  	struct blk_mq_hw_ctx *hctx;
  	int i, ret = 0;
  
 -	mutex_lock(&q->sysfs_lock);
  	if (!q->mq_sysfs_init_done)
++<<<<<<< HEAD
 +		return ret;
++=======
+ 		goto unlock;
+ 
+ 	blk_mq_debugfs_register_mq(q);
++>>>>>>> 62d6c9496a2b (blk-mq-debugfs: Rename functions for registering and unregistering the mq directory)
  
  	queue_for_each_hw_ctx(q, hctx, i) {
  		ret = blk_mq_register_hctx(hctx);
diff --cc block/blk-mq.h
index 2d50f02667c4,2814a14e529c..000000000000
--- a/block/blk-mq.h
+++ b/block/blk-mq.h
@@@ -61,6 -83,34 +61,37 @@@ extern int blk_mq_sysfs_register(struc
  extern void blk_mq_sysfs_unregister(struct request_queue *q);
  extern void blk_mq_hctx_kobj_init(struct blk_mq_hw_ctx *hctx);
  
++<<<<<<< HEAD
++=======
+ /*
+  * debugfs helpers
+  */
+ #ifdef CONFIG_BLK_DEBUG_FS
+ int blk_mq_debugfs_register(struct request_queue *q);
+ void blk_mq_debugfs_unregister(struct request_queue *q);
+ int blk_mq_debugfs_register_mq(struct request_queue *q);
+ void blk_mq_debugfs_unregister_mq(struct request_queue *q);
+ #else
+ static inline int blk_mq_debugfs_register(struct request_queue *q)
+ {
+ 	return 0;
+ }
+ 
+ static inline void blk_mq_debugfs_unregister(struct request_queue *q)
+ {
+ }
+ 
+ static inline int blk_mq_debugfs_register_mq(struct request_queue *q)
+ {
+ 	return 0;
+ }
+ 
+ static inline void blk_mq_debugfs_unregister_mq(struct request_queue *q)
+ {
+ }
+ #endif
+ 
++>>>>>>> 62d6c9496a2b (blk-mq-debugfs: Rename functions for registering and unregistering the mq directory)
  extern void blk_mq_rq_timed_out(struct request *req, bool reserved);
  
  void blk_mq_release(struct request_queue *q);
* Unmerged path block/blk-mq-debugfs.c
* Unmerged path block/blk-mq-debugfs.c
* Unmerged path block/blk-mq-sysfs.c
* Unmerged path block/blk-mq.h
