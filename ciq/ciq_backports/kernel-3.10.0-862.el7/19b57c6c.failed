IB/core: Convert OPA AH to IB for Extended LIDs only

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Don Hiatt <don.hiatt@intel.com>
commit 19b57c6c449970763bee089466119e09a17199b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/19b57c6c.failed

When deciding to convert an OPA AH to IB we were incorrectly
including the IB multicast range. At this layer, all Extended
LIDs will be larger than IB_LID_PERMISSIVE. Change comparison
accordingly.

Fixes: d541e45500bd ("IB/core: Convert ah_attr from OPA to IB when copying to user")
	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Don Hiatt <don.hiatt@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 19b57c6c449970763bee089466119e09a17199b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/uverbs_marshall.c
diff --cc drivers/infiniband/core/uverbs_marshall.c
index a9739f334562,bb372b4713a4..000000000000
--- a/drivers/infiniband/core/uverbs_marshall.c
+++ b/drivers/infiniband/core/uverbs_marshall.c
@@@ -33,23 -33,62 +33,38 @@@
  #include <linux/export.h>
  #include <rdma/ib_marshall.h>
  
 -#define OPA_DEFAULT_GID_PREFIX cpu_to_be64(0xfe80000000000000ULL)
 -static int rdma_ah_conv_opa_to_ib(struct ib_device *dev,
 -				  struct rdma_ah_attr *ib,
 -				  struct rdma_ah_attr *opa)
 +void ib_copy_ah_attr_to_user(struct ib_uverbs_ah_attr *dst,
 +			     struct ib_ah_attr *src)
  {
 -	struct ib_port_attr port_attr;
 -	int ret = 0;
 -
 -	/* Do structure copy and the over-write fields */
 -	*ib = *opa;
 -
 -	ib->type = RDMA_AH_ATTR_TYPE_IB;
 -	rdma_ah_set_grh(ib, NULL, 0, 0, 1, 0);
 -
 -	if (ib_query_port(dev, opa->port_num, &port_attr)) {
 -		/* Set to default subnet to indicate error */
 -		rdma_ah_set_subnet_prefix(ib, OPA_DEFAULT_GID_PREFIX);
 -		ret = -EINVAL;
 -	} else {
 -		rdma_ah_set_subnet_prefix(ib,
 -					  cpu_to_be64(port_attr.subnet_prefix));
 -	}
 -	rdma_ah_set_interface_id(ib, OPA_MAKE_ID(rdma_ah_get_dlid(opa)));
 -	return ret;
 -}
 -
 -void ib_copy_ah_attr_to_user(struct ib_device *device,
 -			     struct ib_uverbs_ah_attr *dst,
 -			     struct rdma_ah_attr *ah_attr)
 -{
 -	struct rdma_ah_attr *src = ah_attr;
 -	struct rdma_ah_attr conv_ah;
 -
  	memset(&dst->grh.reserved, 0, sizeof(dst->grh.reserved));
++<<<<<<< HEAD
 +	dst->dlid 	    	   = src->dlid;
 +	dst->sl   	    	   = src->sl;
 +	dst->src_path_bits 	   = src->src_path_bits;
 +	dst->static_rate   	   = src->static_rate;
 +	dst->is_global             = src->ah_flags & IB_AH_GRH ? 1 : 0;
++=======
+ 
+ 	if ((ah_attr->type == RDMA_AH_ATTR_TYPE_OPA) &&
+ 	    (rdma_ah_get_dlid(ah_attr) > be16_to_cpu(IB_LID_PERMISSIVE)) &&
+ 	    (!rdma_ah_conv_opa_to_ib(device, &conv_ah, ah_attr)))
+ 		src = &conv_ah;
+ 
+ 	dst->dlid		   = rdma_ah_get_dlid(src);
+ 	dst->sl			   = rdma_ah_get_sl(src);
+ 	dst->src_path_bits	   = rdma_ah_get_path_bits(src);
+ 	dst->static_rate	   = rdma_ah_get_static_rate(src);
+ 	dst->is_global             = rdma_ah_get_ah_flags(src) &
+ 					IB_AH_GRH ? 1 : 0;
++>>>>>>> 19b57c6c4499 (IB/core: Convert OPA AH to IB for Extended LIDs only)
  	if (dst->is_global) {
 -		const struct ib_global_route *grh = rdma_ah_read_grh(src);
 -
 -		memcpy(dst->grh.dgid, grh->dgid.raw, sizeof(grh->dgid));
 -		dst->grh.flow_label        = grh->flow_label;
 -		dst->grh.sgid_index        = grh->sgid_index;
 -		dst->grh.hop_limit         = grh->hop_limit;
 -		dst->grh.traffic_class     = grh->traffic_class;
 +		memcpy(dst->grh.dgid, src->grh.dgid.raw, sizeof(src->grh.dgid));
 +		dst->grh.flow_label        = src->grh.flow_label;
 +		dst->grh.sgid_index        = src->grh.sgid_index;
 +		dst->grh.hop_limit         = src->grh.hop_limit;
 +		dst->grh.traffic_class     = src->grh.traffic_class;
  	}
 -	dst->port_num		   = rdma_ah_get_port_num(src);
 +	dst->port_num 	    	   = src->port_num;
  	dst->reserved 		   = 0;
  }
  EXPORT_SYMBOL(ib_copy_ah_attr_to_user);
* Unmerged path drivers/infiniband/core/uverbs_marshall.c
