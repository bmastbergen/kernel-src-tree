SUNRPC: fix a list corruption issue in xprt_release()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 4c625a974fb81724e60966b677e47fcba782c950
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4c625a97.failed

We remove the request from the receive list before we call
xprt_wait_on_pinned_rqst(), and so we need to use list_del_init().
Otherwise, we will see list corruption when xprt_complete_rqst()
is called.

	Reported-by: Emre Celebi <emre@primarydata.com>
Fixes: ce7c252a8c741 ("SUNRPC: Add a separate spinlock to protect...")
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 4c625a974fb81724e60966b677e47fcba782c950)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprt.c
diff --cc net/sunrpc/xprt.c
index e83aa477fea7,1a39ad14c42f..000000000000
--- a/net/sunrpc/xprt.c
+++ b/net/sunrpc/xprt.c
@@@ -1285,6 -1331,12 +1285,15 @@@ void xprt_release(struct rpc_task *task
  		task->tk_ops->rpc_count_stats(task, task->tk_calldata);
  	else if (task->tk_client)
  		rpc_count_iostats(task, task->tk_client->cl_metrics);
++<<<<<<< HEAD
++=======
+ 	spin_lock(&xprt->recv_lock);
+ 	if (!list_empty(&req->rq_list)) {
+ 		list_del_init(&req->rq_list);
+ 		xprt_wait_on_pinned_rqst(req);
+ 	}
+ 	spin_unlock(&xprt->recv_lock);
++>>>>>>> 4c625a974fb8 (SUNRPC: fix a list corruption issue in xprt_release())
  	spin_lock_bh(&xprt->transport_lock);
  	xprt->ops->release_xprt(xprt, task);
  	if (xprt->ops->release_request)
* Unmerged path net/sunrpc/xprt.c
