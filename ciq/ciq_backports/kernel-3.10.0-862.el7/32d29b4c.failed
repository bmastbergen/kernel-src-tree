scsi: qla2xxx: Remove unused tgt_enable_64bit_addr flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Remove unused tgt_enable_64bit_addr flag (Himanshu Madhani) [1460030]
Rebuild_FUZZ: 94.23%
commit-author Quinn Tran <quinn.tran@cavium.com>
commit 32d29b4ce82785a78d059d89f40fc1cad163e0ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/32d29b4c.failed

By default this flag is forced to true.  Remove this flag and
unneccessary check for this flag.

	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 32d29b4ce82785a78d059d89f40fc1cad163e0ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 7a27b61e2d53,e8aa58dfa93c..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -1660,22 -2453,10 +1650,18 @@@ static void qlt_load_cont_data_segments
  			*dword_ptr++ =
  			    cpu_to_le32(pci_dma_lo32
  				(sg_dma_address(prm->sg)));
- 			if (enable_64bit_addressing) {
- 				*dword_ptr++ =
- 				    cpu_to_le32(pci_dma_hi32
- 					(sg_dma_address
- 					(prm->sg)));
- 			}
+ 			*dword_ptr++ = cpu_to_le32(pci_dma_hi32
+ 			    (sg_dma_address(prm->sg)));
  			*dword_ptr++ = cpu_to_le32(sg_dma_len(prm->sg));
  
 +			ql_dbg(ql_dbg_tgt, vha, 0xe00d,
 +			    "S/G Segment Cont. phys_addr=%llx:%llx, len=%d\n",
 +			    (long long unsigned int)
 +			    pci_dma_hi32(sg_dma_address(prm->sg)),
 +			    (long long unsigned int)
 +			    pci_dma_lo32(sg_dma_address(prm->sg)),
 +			    (int)sg_dma_len(prm->sg));
 +
  			prm->sg = sg_next(prm->sg);
  		}
  	}
@@@ -1690,14 -2470,8 +1675,13 @@@ static void qlt_load_data_segments(stru
  {
  	int cnt;
  	uint32_t *dword_ptr;
- 	int enable_64bit_addressing = prm->tgt->tgt_enable_64bit_addr;
  	struct ctio7_to_24xx *pkt24 = (struct ctio7_to_24xx *)prm->pkt;
  
 +	ql_dbg(ql_dbg_tgt, vha, 0xe00e,
 +	    "iocb->scsi_status=%x, iocb->flags=%x\n",
 +	    le16_to_cpu(pkt24->u.status0.scsi_status),
 +	    le16_to_cpu(pkt24->u.status0.flags));
 +
  	pkt24->u.status0.transfer_length = cpu_to_le32(prm->cmd->bufflen);
  
  	/* Setup packet address segment pointer */
@@@ -1723,21 -2496,12 +1707,20 @@@
  	    cnt++, prm->seg_cnt--) {
  		*dword_ptr++ =
  		    cpu_to_le32(pci_dma_lo32(sg_dma_address(prm->sg)));
- 		if (enable_64bit_addressing) {
- 			*dword_ptr++ =
- 			    cpu_to_le32(pci_dma_hi32(
- 				sg_dma_address(prm->sg)));
- 		}
+ 
+ 		*dword_ptr++ = cpu_to_le32(pci_dma_hi32(
+ 			sg_dma_address(prm->sg)));
+ 
  		*dword_ptr++ = cpu_to_le32(sg_dma_len(prm->sg));
  
 +		ql_dbg(ql_dbg_tgt, vha, 0xe010,
 +		    "S/G Segment phys_addr=%llx:%llx, len=%d\n",
 +		    (long long unsigned int)pci_dma_hi32(sg_dma_address(
 +		    prm->sg)),
 +		    (long long unsigned int)pci_dma_lo32(sg_dma_address(
 +		    prm->sg)),
 +		    (int)sg_dma_len(prm->sg));
 +
  		prm->sg = sg_next(prm->sg);
  	}
  
@@@ -2063,7 -3118,8 +2046,12 @@@ int qlt_xmit_response(struct qla_tgt_cm
  		    cpu_to_le16(CTIO7_FLAGS_DATA_IN |
  			CTIO7_FLAGS_STATUS_MODE_0);
  
++<<<<<<< HEAD
 +		qlt_load_data_segments(&prm, vha);
++=======
+ 		if (cmd->se_cmd.prot_op == TARGET_PROT_NORMAL)
+ 			qlt_load_data_segments(&prm);
++>>>>>>> 32d29b4ce827 (scsi: qla2xxx: Remove unused tgt_enable_64bit_addr flag)
  
  		if (prm.add_status_pkt == 0) {
  			if (xmit_type & QLA_TGT_XMIT_STATUS) {
@@@ -2173,9 -3251,14 +2161,15 @@@ int qlt_rdy_to_xfer(struct qla_tgt_cmd 
  	pkt = (struct ctio7_to_24xx *)prm.pkt;
  	pkt->u.status0.flags |= cpu_to_le16(CTIO7_FLAGS_DATA_OUT |
  	    CTIO7_FLAGS_STATUS_MODE_0);
++<<<<<<< HEAD
 +	qlt_load_data_segments(&prm, vha);
++=======
+ 
+ 	if (cmd->se_cmd.prot_op == TARGET_PROT_NORMAL)
+ 		qlt_load_data_segments(&prm);
++>>>>>>> 32d29b4ce827 (scsi: qla2xxx: Remove unused tgt_enable_64bit_addr flag)
  
  	cmd->state = QLA_TGT_STATE_NEED_DATA;
 -	cmd->cmd_sent_to_fw = 1;
  
  	/* Memory Barrier */
  	wmb();
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
diff --git a/drivers/scsi/qla2xxx/qla_target.h b/drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0..2b9672de8b49 100644
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@ -763,7 +763,6 @@ struct qla_tgt {
 	int datasegs_per_cmd, datasegs_per_cont, sg_tablesize;
 
 	/* Target's flags, serialized by pha->hardware_lock */
-	unsigned int tgt_enable_64bit_addr:1; /* 64-bits PCI addr enabled */
 	unsigned int link_reinit_iocb_pending:1;
 
 	/*
