IB/core: Use __be32 for LIDs in opa_is_extended_lid

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Don Hiatt <don.hiatt@intel.com>
commit a917374e8a20cdfbaaaaaa2b01331dc063d38848
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a917374e.failed

The LIDs passed to opa_extended_lid are in __be32 format,
change function signature accordingly.

This fixes the following sparse warnings:
  drivers/infiniband/core/cm.c:1181:60: warning: incorrect type in
	argument 1 (different ba
  drivers/infiniband/core/cm.c:1182:60: warning: incorrect type in
	argument 2 (different ba
  drivers/infiniband/core/cm.c:1242:68: warning: incorrect type in
	argument 1 (different ba
  drivers/infiniband/core/cm.c:1243:68: warning: incorrect type in
	argument 2 (different ba
  drivers/infiniband/core/cm.c:2922:66: warning: incorrect type in
	argument 1 (different ba
  drivers/infiniband/core/cm.c:2923:66: warning: incorrect type in
	argument 2 (different ba
  include/rdma/opa_addr.h:102:14: warning: cast to restricted __be32

Fixes: e92aa00a5189 ("IB/CM: Add OPA Path record support to CM")
	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Don Hiatt <don.hiatt@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit a917374e8a20cdfbaaaaaa2b01331dc063d38848)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/rdma/opa_addr.h
diff --cc include/rdma/opa_addr.h
index eace28f1555d,f68fca296631..000000000000
--- a/include/rdma/opa_addr.h
+++ b/include/rdma/opa_addr.h
@@@ -76,4 -89,29 +76,32 @@@ static inline u32 opa_get_lid_from_gid(
  {
  	return be64_to_cpu(gid->global.interface_id) & 0xFFFFFFFF;
  }
++<<<<<<< HEAD
++=======
+ 
+ /**
+  * opa_is_extended_lid: Returns true if dlid or slid are
+  * extended.
+  *
+  * @dlid: The DLID
+  * @slid: The SLID
+  */
+ static inline bool opa_is_extended_lid(__be32 dlid, __be32 slid)
+ {
+ 	if ((be32_to_cpu(dlid) >=
+ 	     be16_to_cpu(IB_MULTICAST_LID_BASE)) ||
+ 	    (be32_to_cpu(slid) >=
+ 	     be16_to_cpu(IB_MULTICAST_LID_BASE)))
+ 		return true;
+ 
+ 	return false;
+ }
+ 
+ /* Get multicast lid base */
+ static inline u32 opa_get_mcast_base(u32 nr_top_bits)
+ {
+ 	return (be32_to_cpu(OPA_LID_PERMISSIVE) << (32 - nr_top_bits));
+ }
+ 
++>>>>>>> a917374e8a20 (IB/core: Use __be32 for LIDs in opa_is_extended_lid)
  #endif /* OPA_ADDR_H */
* Unmerged path include/rdma/opa_addr.h
