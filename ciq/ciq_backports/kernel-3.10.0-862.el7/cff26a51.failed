module: remove MODULE_GENERIC_TABLE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Rusty Russell <rusty@rustcorp.com.au>
commit cff26a51da5d206d3baf871e75778da44710219d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/cff26a51.failed

MODULE_DEVICE_TABLE() calles MODULE_GENERIC_TABLE(); make it do the
work directly.  This also removes a wart introduced in the last patch,
where the alias is defined to be an unknown struct type "struct
type##__##name##_device_id" instead of "struct type##_device_id" (it's
an extern so GCC doesn't care, but it's wrong).

The other user of MODULE_GENERIC_TABLE (ISAPNP_CARD_TABLE) is unused,
so delete it.

	Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
(cherry picked from commit cff26a51da5d206d3baf871e75778da44710219d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/module.h
diff --cc include/linux/module.h
index cb24355b2d5e,5686b37e11d6..000000000000
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@@ -82,15 -82,6 +82,18 @@@ void sort_extable(struct exception_tabl
  void sort_main_extable(void);
  void trim_init_extable(struct module *m);
  
++<<<<<<< HEAD
 +#ifdef MODULE
 +#define MODULE_GENERIC_TABLE(gtype,name)			\
 +extern const struct gtype##_id __mod_##gtype##_table		\
 +  __attribute__ ((unused, alias(__stringify(name))))
 +
 +#else  /* !MODULE */
 +#define MODULE_GENERIC_TABLE(gtype,name)
 +#endif
 +
++=======
++>>>>>>> cff26a51da5d (module: remove MODULE_GENERIC_TABLE)
  /* Generic info of form tag = "info" */
  #define MODULE_INFO(tag, info) __MODULE_INFO(tag, tag, info)
  
@@@ -141,23 -132,31 +144,34 @@@
  /* What your module does. */
  #define MODULE_DESCRIPTION(_description) MODULE_INFO(description, _description)
  
++<<<<<<< HEAD
 +#define MODULE_DEVICE_TABLE(type,name)		\
 +  MODULE_GENERIC_TABLE(type##_device,name)
++=======
+ #ifdef MODULE
+ /* Creates an alias so file2alias.c can find device table. */
+ #define MODULE_DEVICE_TABLE(type, name)					\
+   extern const struct type##_device_id __mod_##type##__##name##_device_table \
+   __attribute__ ((unused, alias(__stringify(name))))
+ #else  /* !MODULE */
+ #define MODULE_DEVICE_TABLE(type, name)
+ #endif
++>>>>>>> cff26a51da5d (module: remove MODULE_GENERIC_TABLE)
  
  /* Version of form [<epoch>:]<version>[-<extra-version>].
 - * Or for CVS/RCS ID version, everything but the number is stripped.
 - * <epoch>: A (small) unsigned integer which allows you to start versions
 - * anew. If not mentioned, it's zero.  eg. "2:1.0" is after
 - * "1:2.0".
 -
 - * <version>: The <version> may contain only alphanumerics and the
 - * character `.'.  Ordered by numeric sort for numeric parts,
 - * ascii sort for ascii parts (as per RPM or DEB algorithm).
 -
 - * <extraversion>: Like <version>, but inserted for local
 - * customizations, eg "rh3" or "rusty1".
 -
 - * Using this automatically adds a checksum of the .c files and the
 - * local headers in "srcversion".
 - */
 +   Or for CVS/RCS ID version, everything but the number is stripped.
 +  <epoch>: A (small) unsigned integer which allows you to start versions
 +           anew. If not mentioned, it's zero.  eg. "2:1.0" is after
 +	   "1:2.0".
 +  <version>: The <version> may contain only alphanumerics and the
 +           character `.'.  Ordered by numeric sort for numeric parts,
 +	   ascii sort for ascii parts (as per RPM or DEB algorithm).
 +  <extraversion>: Like <version>, but inserted for local
 +           customizations, eg "rh3" or "rusty1".
 +
 +  Using this automatically adds a checksum of the .c files and the
 +  local headers in "srcversion".
 +*/
  
  #if defined(MODULE) || !defined(CONFIG_SYSFS)
  #define MODULE_VERSION(_version) MODULE_INFO(version, _version)
diff --git a/include/linux/isapnp.h b/include/linux/isapnp.h
index e2d28b026a8c..3c77bf9b1efd 100644
--- a/include/linux/isapnp.h
+++ b/include/linux/isapnp.h
@@ -56,10 +56,6 @@
 #define ISAPNP_DEVICE_ID(_va, _vb, _vc, _function) \
 		{ .vendor = ISAPNP_VENDOR(_va, _vb, _vc), .function = ISAPNP_FUNCTION(_function) }
 
-/* export used IDs outside module */
-#define ISAPNP_CARD_TABLE(name) \
-		MODULE_GENERIC_TABLE(isapnp_card, name)
-
 struct isapnp_card_id {
 	unsigned long driver_data;	/* data private to the driver */
 	unsigned short card_vendor, card_device;
* Unmerged path include/linux/module.h
