x86/topology: Define x86's arch_update_cpu_topology

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] topology: Define x86's arch_update_cpu_topology (Prarit Bhargava) [1465349]
Rebuild_FUZZ: 95.92%
commit-author Tim Chen <tim.c.chen@linux.intel.com>
commit 7d25127cef44924f1013d119ba385095ca4b4a83
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7d25127c.failed

The scheduler calls arch_update_cpu_topology() to check whether the
scheduler domains have to be rebuilt.

So far x86 has no requirement for this, but the upcoming ITMT support
makes this necessary.

Request the rebuild when the x86 internal update flag is set.

	Suggested-by: Morten Rasmussen <morten.rasmussen@arm.com>
	Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
	Cc: linux-pm@vger.kernel.org
	Cc: peterz@infradead.org
	Cc: jolsa@redhat.com
	Cc: rjw@rjwysocki.net
	Cc: linux-acpi@vger.kernel.org
	Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Cc: bp@suse.de
Link: http://lkml.kernel.org/r/bfbf5591276ec60b2af2da798adc1060df1e2a5f.1479844244.git.tim.c.chen@linux.intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 7d25127cef44924f1013d119ba385095ca4b4a83)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/topology.h
#	arch/x86/kernel/smpboot.c
diff --cc arch/x86/include/asm/topology.h
index 93b2cb826344,a5ca88a22ca3..000000000000
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@@ -148,10 -146,5 +148,14 @@@ struct pci_bus
  int x86_pci_root_bus_node(int bus);
  void x86_pci_root_bus_resources(int bus, struct list_head *resources);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_SMP
 +#define mc_capable()	((boot_cpu_data.x86_max_cores > 1) && \
 +			(cpumask_weight(cpu_core_mask(0)) != nr_cpu_ids))
 +#define smt_capable()			(smp_num_siblings > 1)
 +#endif
 +
++=======
+ extern bool x86_topology_update;
++>>>>>>> 7d25127cef44 (x86/topology: Define x86's arch_update_cpu_topology)
  #endif /* _ASM_X86_TOPOLOGY_H */
diff --cc arch/x86/kernel/smpboot.c
index 0e65ae4d69bc,ac61ee71d50e..000000000000
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@@ -115,6 -104,58 +115,61 @@@ static unsigned int max_physical_pkg_i
  unsigned int __max_logical_packages __read_mostly;
  EXPORT_SYMBOL(__max_logical_packages);
  static unsigned int logical_packages __read_mostly;
++<<<<<<< HEAD
++=======
+ static bool logical_packages_frozen __read_mostly;
+ 
+ /* Maximum number of SMT threads on any online core */
+ int __max_smt_threads __read_mostly;
+ 
+ /* Flag to indicate if a complete sched domain rebuild is required */
+ bool x86_topology_update;
+ 
+ int arch_update_cpu_topology(void)
+ {
+ 	int retval = x86_topology_update;
+ 
+ 	x86_topology_update = false;
+ 	return retval;
+ }
+ 
+ static inline void smpboot_setup_warm_reset_vector(unsigned long start_eip)
+ {
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(&rtc_lock, flags);
+ 	CMOS_WRITE(0xa, 0xf);
+ 	spin_unlock_irqrestore(&rtc_lock, flags);
+ 	local_flush_tlb();
+ 	pr_debug("1.\n");
+ 	*((volatile unsigned short *)phys_to_virt(TRAMPOLINE_PHYS_HIGH)) =
+ 							start_eip >> 4;
+ 	pr_debug("2.\n");
+ 	*((volatile unsigned short *)phys_to_virt(TRAMPOLINE_PHYS_LOW)) =
+ 							start_eip & 0xf;
+ 	pr_debug("3.\n");
+ }
+ 
+ static inline void smpboot_restore_warm_reset_vector(void)
+ {
+ 	unsigned long flags;
+ 
+ 	/*
+ 	 * Install writable page 0 entry to set BIOS data area.
+ 	 */
+ 	local_flush_tlb();
+ 
+ 	/*
+ 	 * Paranoid:  Set warm reset code and vector here back
+ 	 * to default values.
+ 	 */
+ 	spin_lock_irqsave(&rtc_lock, flags);
+ 	CMOS_WRITE(0, 0xf);
+ 	spin_unlock_irqrestore(&rtc_lock, flags);
+ 
+ 	*((volatile u32 *)phys_to_virt(TRAMPOLINE_PHYS_LOW)) = 0;
+ }
++>>>>>>> 7d25127cef44 (x86/topology: Define x86's arch_update_cpu_topology)
  
  /*
   * Report back to the Boot Processor during boot time or to the caller processor
* Unmerged path arch/x86/include/asm/topology.h
* Unmerged path arch/x86/kernel/smpboot.c
