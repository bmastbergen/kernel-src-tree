ipv6: addrconf: Fix recursive spin lock call

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author subashab@codeaurora.org <subashab@codeaurora.org>
commit 16186a82de1fdd868255448274e64ae2616e2640
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/16186a82.failed

A rcu stall with the following backtrace was seen on a system with
forwarding, optimistic_dad and use_optimistic set. To reproduce,
set these flags and allow ipv6 autoconf.

This occurs because the device write_lock is acquired while already
holding the read_lock. Back trace below -

INFO: rcu_preempt self-detected stall on CPU { 1}  (t=2100 jiffies
 g=3992 c=3991 q=4471)
<6> Task dump for CPU 1:
<2> kworker/1:0     R  running task    12168    15   2 0x00000002
<2> Workqueue: ipv6_addrconf addrconf_dad_work
<6> Call trace:
<2> [<ffffffc000084da8>] el1_irq+0x68/0xdc
<2> [<ffffffc000cc4e0c>] _raw_write_lock_bh+0x20/0x30
<2> [<ffffffc000bc5dd8>] __ipv6_dev_ac_inc+0x64/0x1b4
<2> [<ffffffc000bcbd2c>] addrconf_join_anycast+0x9c/0xc4
<2> [<ffffffc000bcf9f0>] __ipv6_ifa_notify+0x160/0x29c
<2> [<ffffffc000bcfb7c>] ipv6_ifa_notify+0x50/0x70
<2> [<ffffffc000bd035c>] addrconf_dad_work+0x314/0x334
<2> [<ffffffc0000b64c8>] process_one_work+0x244/0x3fc
<2> [<ffffffc0000b7324>] worker_thread+0x2f8/0x418
<2> [<ffffffc0000bb40c>] kthread+0xe0/0xec

v2: do addrconf_dad_kick inside read lock and then acquire write
lock for ipv6_ifa_notify as suggested by Eric

Fixes: 7fd2561e4ebdd ("net: ipv6: Add a sysctl to make optimistic
addresses useful candidates")

	Cc: Eric Dumazet <edumazet@google.com>
	Cc: Erik Kline <ek@google.com>
	Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
	Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 16186a82de1fdd868255448274e64ae2616e2640)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/addrconf.c
diff --cc net/ipv6/addrconf.c
index abaf198b4f92,9efd9ffdc34c..000000000000
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@@ -3396,7 -3538,7 +3396,11 @@@ static void addrconf_dad_begin(struct i
  {
  	struct inet6_dev *idev = ifp->idev;
  	struct net_device *dev = idev->dev;
++<<<<<<< HEAD
 +	bool bump_id;
++=======
+ 	bool notify = false;
++>>>>>>> 16186a82de1f (ipv6: addrconf: Fix recursive spin lock call)
  
  	addrconf_join_solict(dev, &ifp->addr);
  
@@@ -3437,8 -3578,15 +3441,18 @@@
  	 * Optimistic nodes can start receiving
  	 * Frames right away
  	 */
 -	if (ifp->flags & IFA_F_OPTIMISTIC) {
 +	if (ifp->flags & IFA_F_OPTIMISTIC)
  		ip6_ins_rt(ifp->rt);
++<<<<<<< HEAD
++=======
+ 		if (ipv6_use_optimistic_addr(idev)) {
+ 			/* Because optimistic nodes can use this address,
+ 			 * notify listeners. If DAD fails, RTM_DELADDR is sent.
+ 			 */
+ 			notify = true;
+ 		}
+ 	}
++>>>>>>> 16186a82de1f (ipv6: addrconf: Fix recursive spin lock call)
  
  	addrconf_dad_kick(ifp);
  out:
* Unmerged path net/ipv6/addrconf.c
