ALSA: x86: Fold intel_hdmi_audio_if.c into main file

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit 372d855f87b535005e392094afff9927bc000cf9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/372d855f.failed

As the very last step, we fold intel_hdmi_audio_if.c into the main
file, intel_hdmi_audio.c.  This is merely a cleanup, and no functional
change.

By this move, we can mark all functions and variables as static, which
allows the compiler more optimizations.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 372d855f87b535005e392094afff9927bc000cf9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/x86/Makefile
#	sound/x86/intel_hdmi_audio.c
#	sound/x86/intel_hdmi_audio.h
#	sound/x86/intel_hdmi_audio_if.c
diff --cc sound/x86/Makefile
index 85ea22a2cf28,7ff919808320..000000000000
--- a/sound/x86/Makefile
+++ b/sound/x86/Makefile
@@@ -1,6 -1,4 +1,10 @@@
  snd-hdmi-lpe-audio-objs += \
++<<<<<<< HEAD
 +	intel_hdmi_audio.o \
 +	intel_hdmi_audio_if.o \
 +	intel_hdmi_lpe_audio.o
++=======
+ 	intel_hdmi_audio.o
++>>>>>>> 372d855f87b5 (ALSA: x86: Fold intel_hdmi_audio_if.c into main file)
  
  obj-$(CONFIG_HDMI_LPE_AUDIO) += snd-hdmi-lpe-audio.o
diff --cc sound/x86/intel_hdmi_audio.c
index f2f54691cb43,effe93b58273..000000000000
--- a/sound/x86/intel_hdmi_audio.c
+++ b/sound/x86/intel_hdmi_audio.c
@@@ -168,55 -169,58 +167,57 @@@ static int had_get_hwstate(struct snd_i
  	return 0;
  }
  
 -static inline void
 -mid_hdmi_audio_read(struct snd_intelhad *ctx, u32 reg, u32 *val)
 +int had_get_caps(struct snd_intelhad *intelhaddata,
 +		 enum had_caps_list query, void *caps)
  {
 -	*val = ioread32(ctx->mmio_start + ctx->had_config_offset + reg);
 +	int retval;
 +
 +	retval = had_get_hwstate(intelhaddata);
 +	if (!retval)
 +		retval = mid_hdmi_audio_get_caps(query, caps);
 +
 +	return retval;
  }
  
 -static inline void
 -mid_hdmi_audio_write(struct snd_intelhad *ctx, u32 reg, u32 val)
 +int had_set_caps(struct snd_intelhad *intelhaddata,
 +		 enum had_caps_list set_element, void *caps)
  {
 -	iowrite32(val, ctx->mmio_start + ctx->had_config_offset + reg);
 +	int retval;
 +
 +	retval = had_get_hwstate(intelhaddata);
 +	if (!retval)
 +		retval = mid_hdmi_audio_set_caps(set_element, caps);
 +
 +	return retval;
  }
  
- int had_read_register(struct snd_intelhad *intelhaddata, u32 offset, u32 *data)
+ static int had_read_register(struct snd_intelhad *intelhaddata,
+ 			     u32 offset, u32 *data)
  {
  	int retval;
  
  	retval = had_get_hwstate(intelhaddata);
 -	if (retval)
 -		return retval;
 -
 -	mid_hdmi_audio_read(intelhaddata, offset, data);
 -	return 0;
 -}
 +	if (!retval)
 +		retval = mid_hdmi_audio_read(offset, data);
  
 -static void fixup_dp_config(struct snd_intelhad *intelhaddata,
 -			    u32 offset, u32 *data)
 -{
 -	if (intelhaddata->dp_output) {
 -		if (offset == AUD_CONFIG && (*data & AUD_CONFIG_VALID_BIT))
 -			*data |= AUD_CONFIG_DP_MODE | AUD_CONFIG_BLOCK_BIT;
 -	}
 +	return retval;
  }
  
- int had_write_register(struct snd_intelhad *intelhaddata, u32 offset, u32 data)
+ static int had_write_register(struct snd_intelhad *intelhaddata,
+ 			      u32 offset, u32 data)
  {
  	int retval;
  
  	retval = had_get_hwstate(intelhaddata);
 -	if (retval)
 -		return retval;
 +	if (!retval)
 +		retval = mid_hdmi_audio_write(offset, data);
  
 -	fixup_dp_config(intelhaddata, offset, &data);
 -	mid_hdmi_audio_write(intelhaddata, offset, data);
 -	return 0;
 +	return retval;
  }
  
- int had_read_modify(struct snd_intelhad *intelhaddata, u32 offset,
- 		    u32 data, u32 mask)
+ static int had_read_modify(struct snd_intelhad *intelhaddata, u32 offset,
+ 			   u32 data, u32 mask)
  {
 -	u32 val_tmp;
  	int retval;
  
  	retval = had_get_hwstate(intelhaddata);
@@@ -269,9 -281,23 +270,29 @@@ static int had_read_modify_aud_config_v
  	return had_read_modify(intelhaddata, AUD_CONFIG, data, mask);
  }
  
++<<<<<<< HEAD
 +void snd_intelhad_enable_audio(struct snd_pcm_substream *substream, u8 enable)
 +{
 +	had_read_modify_aud_config_v2(substream, enable, BIT(0));
++=======
+ static void snd_intelhad_enable_audio_int(struct snd_intelhad *ctx, bool enable)
+ {
+ 	u32 status_reg;
+ 
+ 	if (enable) {
+ 		mid_hdmi_audio_read(ctx, AUD_HDMI_STATUS_v2, &status_reg);
+ 		status_reg |= HDMI_AUDIO_BUFFER_DONE | HDMI_AUDIO_UNDERRUN;
+ 		mid_hdmi_audio_write(ctx, AUD_HDMI_STATUS_v2, status_reg);
+ 		mid_hdmi_audio_read(ctx, AUD_HDMI_STATUS_v2, &status_reg);
+ 	}
+ }
+ 
+ static void snd_intelhad_enable_audio(struct snd_intelhad *intelhaddata,
+ 				      bool enable)
+ {
+ 	had_read_modify_aud_config_v2(intelhaddata, enable ? BIT(0) : 0,
+ 				      BIT(0));
++>>>>>>> 372d855f87b5 (ALSA: x86: Fold intel_hdmi_audio_if.c into main file)
  }
  
  static void snd_intelhad_reset_audio(struct snd_intelhad *intelhaddata,
@@@ -1474,32 -1829,7 +1851,36 @@@ static struct snd_pcm_ops snd_intelhad_
  	.mmap =	snd_intelhad_pcm_mmap,
  };
  
++<<<<<<< HEAD
 +/**
 + * snd_intelhad_create - to crete alsa card instance
 + *
 + * @intelhaddata: pointer to internal context
 + * @card: pointer to card
 + *
 + * This function is called when the hdmi cable is plugged in
 + */
 +static int snd_intelhad_create(
 +		struct snd_intelhad *intelhaddata,
 +		struct snd_card *card)
 +{
 +	int retval;
 +	static struct snd_device_ops ops = {
 +	};
 +
 +	pr_debug("snd_intelhad_create called\n");
 +
 +	if (!intelhaddata)
 +		return -EINVAL;
 +
 +	/* ALSA api to register the device */
 +	retval = snd_device_new(card, SNDRV_DEV_LOWLEVEL, intelhaddata, &ops);
 +	return retval;
 +}
 +/**
++=======
+ /*
++>>>>>>> 372d855f87b5 (ALSA: x86: Fold intel_hdmi_audio_if.c into main file)
   * snd_intelhad_pcm_free - to free the memory allocated
   *
   * @pcm: pointer to pcm instance
diff --cc sound/x86/intel_hdmi_audio.h
index 32a2fb766e47,d301c3021375..000000000000
--- a/sound/x86/intel_hdmi_audio.h
+++ b/sound/x86/intel_hdmi_audio.h
@@@ -142,43 -142,16 +142,46 @@@ struct snd_intelhad 
  	unsigned int	*audio_reg_base;
  	unsigned int	audio_cfg_offset;
  	int underrun_count;
 -	enum hdmi_connector_status state;
 -	int tmds_clock_speed;
 -	int link_rate;
 -
 -	/* internal stuff */
 -	int irq;
 -	void __iomem *mmio_start;
 -	unsigned int had_config_offset;
 -	int hdmi_audio_interrupt_mask;
 -	struct work_struct hdmi_audio_wq;
  };
  
++<<<<<<< HEAD
 +int had_event_handler(enum had_event_type event_type, void *data);
 +
 +int hdmi_audio_query(void *drv_data, struct hdmi_audio_event event);
 +int hdmi_audio_suspend(void *drv_data);
 +int hdmi_audio_resume(void *drv_data);
 +int hdmi_audio_mode_change(struct snd_pcm_substream *substream);
 +extern struct snd_pcm_ops snd_intelhad_playback_ops;
 +
 +int snd_intelhad_init_audio_ctrl(struct snd_pcm_substream *substream,
 +					struct snd_intelhad *intelhaddata,
 +					int flag_silence);
 +int snd_intelhad_prog_buffer(struct snd_intelhad *intelhaddata,
 +					int start, int end);
 +int snd_intelhad_invd_buffer(int start, int end);
 +int snd_intelhad_read_len(struct snd_intelhad *intelhaddata);
 +void had_build_channel_allocation_map(struct snd_intelhad *intelhaddata);
 +
 +void snd_intelhad_enable_audio(struct snd_pcm_substream *substream, u8 enable);
 +void snd_intelhad_handle_underrun(struct snd_intelhad *intelhaddata);
 +
 +/* Register access functions */
 +int had_get_hwstate(struct snd_intelhad *intelhaddata);
 +int had_get_caps(struct snd_intelhad *intelhaddata,
 +		 enum had_caps_list query_element, void *capabilties);
 +int had_set_caps(struct snd_intelhad *intelhaddata,
 +		 enum had_caps_list set_element, void *capabilties);
 +int had_read_register(struct snd_intelhad *intelhaddata,
 +		      u32 reg_addr, u32 *data);
 +int had_write_register(struct snd_intelhad *intelhaddata,
 +		       u32 reg_addr, u32 data);
 +int had_read_modify(struct snd_intelhad *intelhaddata,
 +		    u32 reg_addr, u32 data, u32 mask);
 +
 +int hdmi_audio_probe(struct platform_device *devptr,
 +		     struct snd_intelhad **had_ret);
 +int hdmi_audio_remove(struct snd_intelhad *intelhaddata);
 +
++=======
++>>>>>>> 372d855f87b5 (ALSA: x86: Fold intel_hdmi_audio_if.c into main file)
  #endif /* _INTEL_HDMI_AUDIO_ */
* Unmerged path sound/x86/intel_hdmi_audio_if.c
* Unmerged path sound/x86/Makefile
* Unmerged path sound/x86/intel_hdmi_audio.c
* Unmerged path sound/x86/intel_hdmi_audio.h
* Unmerged path sound/x86/intel_hdmi_audio_if.c
