nfp: remove the probe deferral when FW not present

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 26a8985fa52e3c3087794d1329cfdafceae8510c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/26a8985f.failed

We use a hack to defer probe when firmware was not pre-loaded
or found on disk.  This helps in case users forgot to include
firmware in initramfs, the driver will most likely get another
shot at probing after real root is mounted.

This is not for what EPROBE_DEFER is supposed to be used, and
when FW is completely missing every time new device is probed
NFP will reprobe spamming kernel logs.

Remove this hack, users will now have to make sure the right
firmware image is present in initramfs if nfp.ko is placed
there or built in.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 26a8985fa52e3c3087794d1329cfdafceae8510c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net_main.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_main.c
index 092c7d18f2ec,d5e2361f0e86..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_main.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_main.c
@@@ -544,12 -701,16 +544,20 @@@ int nfp_net_pci_probe(struct nfp_pf *pf
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	mutex_lock(&pf->port_lock);
 +	pf->num_ports = nfp_net_pf_get_num_ports(pf);
++=======
+ 	if (!pf->rtbl) {
+ 		nfp_err(pf->cpp, "No %s, giving up.\n",
+ 			pf->fw_loaded ? "symbol table" : "firmware found");
+ 		return -EINVAL;
+ 	}
++>>>>>>> 26a8985fa52e (nfp: remove the probe deferral when FW not present)
  
 -	mutex_lock(&pf->lock);
 -	pf->max_data_vnics = nfp_net_pf_get_num_ports(pf);
 -	if ((int)pf->max_data_vnics < 0) {
 -		err = pf->max_data_vnics;
 +	ctrl_bar = nfp_net_pf_map_ctrl_bar(pf);
 +	if (!ctrl_bar) {
 +		err = pf->fw_loaded ? -EINVAL : -EPROBE_DEFER;
  		goto err_unlock;
  	}
  
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_main.c
