cpuset: fix the WARN_ON() in update_nodemasks_hier()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Li Zefan <lizefan@huawei.com>
commit a13812683f1118ee4deed88d8d9bc2c268358b2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a1381268.failed

The WARN_ON() is used to check if we break the legal hierarchy, on
which the effective mems should be equal to configured mems.

	Reported-by: Mike Qiu <qiudayu@linux.vnet.ibm.com>
	Tested-by: Mike Qiu <qiudayu@linux.vnet.ibm.com>
	Signed-off-by: Li Zefan <lizefan@huawei.com>
(cherry picked from commit a13812683f1118ee4deed88d8d9bc2c268358b2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cpuset.c
diff --cc kernel/cpuset.c
index 8b2647fd13fb,9d7264beb74f..000000000000
--- a/kernel/cpuset.c
+++ b/kernel/cpuset.c
@@@ -1141,7 -1131,14 +1141,18 @@@ static void update_tasks_nodemask_hier(
  			continue;
  		rcu_read_unlock();
  
++<<<<<<< HEAD
 +		update_tasks_nodemask(cp, heap);
++=======
+ 		mutex_lock(&callback_mutex);
+ 		cp->effective_mems = *new_mems;
+ 		mutex_unlock(&callback_mutex);
+ 
+ 		WARN_ON(!cgroup_on_dfl(cp->css.cgroup) &&
+ 			!nodes_equal(cp->mems_allowed, cp->effective_mems));
+ 
+ 		update_tasks_nodemask(cp);
++>>>>>>> a13812683f11 (cpuset: fix the WARN_ON() in update_nodemasks_hier())
  
  		rcu_read_lock();
  		css_put(&cp->css);
* Unmerged path kernel/cpuset.c
