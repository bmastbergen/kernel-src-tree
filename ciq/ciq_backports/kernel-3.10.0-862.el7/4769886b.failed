kvm: nVMX: off by one in vmx_write_pml_buffer()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 4769886baf39b6a307eb8f9e39848823ca6c5939
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4769886b.failed

There are PML_ENTITY_NUM elements in the pml_address[] array so the >
should be >= or we write beyond the end of the array when we do:

	pml_address[vmcs12->guest_pml_index--] = gpa;

Fixes: c5f983f6e845 ("nVMX: Implement emulated Page Modification Logging")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit 4769886baf39b6a307eb8f9e39848823ca6c5939)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index 8426c9cb3bfe,7698e8f321bf..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -10768,6 -11193,46 +10768,49 @@@ static void vmx_flush_log_dirty(struct 
  	kvm_flush_pml_buffers(kvm);
  }
  
++<<<<<<< HEAD
++=======
+ static int vmx_write_pml_buffer(struct kvm_vcpu *vcpu)
+ {
+ 	struct vmcs12 *vmcs12;
+ 	struct vcpu_vmx *vmx = to_vmx(vcpu);
+ 	gpa_t gpa;
+ 	struct page *page = NULL;
+ 	u64 *pml_address;
+ 
+ 	if (is_guest_mode(vcpu)) {
+ 		WARN_ON_ONCE(vmx->nested.pml_full);
+ 
+ 		/*
+ 		 * Check if PML is enabled for the nested guest.
+ 		 * Whether eptp bit 6 is set is already checked
+ 		 * as part of A/D emulation.
+ 		 */
+ 		vmcs12 = get_vmcs12(vcpu);
+ 		if (!nested_cpu_has_pml(vmcs12))
+ 			return 0;
+ 
+ 		if (vmcs12->guest_pml_index >= PML_ENTITY_NUM) {
+ 			vmx->nested.pml_full = true;
+ 			return 1;
+ 		}
+ 
+ 		gpa = vmcs_read64(GUEST_PHYSICAL_ADDRESS) & ~0xFFFull;
+ 
+ 		page = nested_get_page(vcpu, vmcs12->pml_address);
+ 		if (!page)
+ 			return 0;
+ 
+ 		pml_address = kmap(page);
+ 		pml_address[vmcs12->guest_pml_index--] = gpa;
+ 		kunmap(page);
+ 		nested_release_page_clean(page);
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 4769886baf39 (kvm: nVMX: off by one in vmx_write_pml_buffer())
  static void vmx_enable_log_dirty_pt_masked(struct kvm *kvm,
  					   struct kvm_memory_slot *memslot,
  					   gfn_t offset, unsigned long mask)
* Unmerged path arch/x86/kvm/vmx.c
