net/mlx5e: Add support for RXFCS feature flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Add support for RXFCS feature flag (Don Dutile) [1456694 1499362]
Rebuild_FUZZ: 95.35%
commit-author Guy Ergas <guye@mellanox.com>
commit 102722fc6832a16850c05595b98c9232549d99f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/102722fc.failed

Add support for rx-fcs flag from ethtool.
In case this flag is set, update all RQs to scatter the FCS data into
the packet.

	Signed-off-by: Guy Ergas <guye@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 102722fc6832a16850c05595b98c9232549d99f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	include/linux/mlx5/mlx5_ifc.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index fc92406a15c4,83796ce17fc3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -1595,9 -1861,11 +1626,14 @@@ static void mlx5e_build_rq_param(struc
  
  	MLX5_SET(wq, wq, end_padding_mode, MLX5_WQ_END_PAD_MODE_ALIGN);
  	MLX5_SET(wq, wq, log_wq_stride,    ilog2(sizeof(struct mlx5e_rx_wqe)));
 -	MLX5_SET(wq, wq, log_wq_sz,        params->log_rq_size);
 +	MLX5_SET(wq, wq, log_wq_sz,        priv->params.log_rq_size);
  	MLX5_SET(wq, wq, pd,               priv->mdev->mlx5e_res.pdn);
  	MLX5_SET(rqc, rqc, counter_set_id, priv->q_counter);
++<<<<<<< HEAD
++=======
+ 	MLX5_SET(rqc, rqc, vsd,            params->vlan_strip_disable);
+ 	MLX5_SET(rqc, rqc, scatter_fcs,    params->scatter_fcs_en);
++>>>>>>> 102722fc6832 (net/mlx5e: Add support for RXFCS feature flag)
  
  	param->wq.buf_numa_node = dev_to_node(&priv->mdev->pdev->dev);
  	param->wq.linear = 1;
@@@ -2565,7 -2936,21 +2601,25 @@@ void mlx5e_destroy_direct_tirs(struct m
  		mlx5e_destroy_tir(priv->mdev, &priv->direct_tir[i]);
  }
  
++<<<<<<< HEAD
 +int mlx5e_modify_rqs_vsd(struct mlx5e_priv *priv, bool vsd)
++=======
+ static int mlx5e_modify_channels_scatter_fcs(struct mlx5e_channels *chs, bool enable)
+ {
+ 	int err = 0;
+ 	int i;
+ 
+ 	for (i = 0; i < chs->num; i++) {
+ 		err = mlx5e_modify_rq_scatter_fcs(&chs->c[i]->rq, enable);
+ 		if (err)
+ 			return err;
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ int mlx5e_modify_channels_vsd(struct mlx5e_channels *chs, bool vsd)
++>>>>>>> 102722fc6832 (net/mlx5e: Add support for RXFCS feature flag)
  {
  	int err = 0;
  	int i;
@@@ -3456,8 -3973,11 +3529,11 @@@ static void mlx5e_build_nic_netdev(stru
  	if (fcs_supported)
  		netdev->hw_features |= NETIF_F_RXALL;
  
+ 	if (MLX5_CAP_ETH(mdev, scatter_fcs))
+ 		netdev->hw_features |= NETIF_F_RXFCS;
+ 
  	netdev->features          = netdev->hw_features;
 -	if (!priv->channels.params.lro_en)
 +	if (!priv->params.lro_en)
  		netdev->features  &= ~NETIF_F_LRO;
  
  	if (fcs_enabled)
diff --cc include/linux/mlx5/mlx5_ifc.h
index 77df97a1d271,1993adbd2c82..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -5120,7 -5122,8 +5120,12 @@@ struct mlx5_ifc_modify_rq_out_bits 
  
  enum {
  	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_VSD = 1ULL << 1,
++<<<<<<< HEAD
 +	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_MODIFY_RQ_COUNTER_SET_ID = 1ULL << 3,
++=======
+ 	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_SCATTER_FCS = 1ULL << 2,
+ 	MLX5_MODIFY_RQ_IN_MODIFY_BITMASK_RQ_COUNTER_SET_ID = 1ULL << 3,
++>>>>>>> 102722fc6832 (net/mlx5e: Add support for RXFCS feature flag)
  };
  
  struct mlx5_ifc_modify_rq_in_bits {
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index 16c2c2d53ebb..ba3fb44d6128 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -215,6 +215,7 @@ struct mlx5e_params {
 	u8  toeplitz_hash_key[40];
 	u32 indirection_rqt[MLX5E_INDIR_RQT_SIZE];
 	bool vlan_strip_disable;
+	bool scatter_fcs_en;
 	bool rx_am_enabled;
 	u32 lro_timeout;
 	u32 pflags;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path include/linux/mlx5/mlx5_ifc.h
