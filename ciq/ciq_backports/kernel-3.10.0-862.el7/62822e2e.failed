PM / hibernate: Restore processor state before using per-CPU variables

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Thomas Garnier <thgarnie@google.com>
commit 62822e2ec4ad091ba31f823f577ef80db52e3c2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/62822e2e.failed

Restore the processor state before calling any other functions to
ensure per-CPU variables can be used with KASLR memory randomization.

Tracing functions use per-CPU variables (GS based on x86) and one was
called just before restoring the processor state fully. It resulted
in a double fault when both the tracing & the exception handler
functions tried to use a per-CPU variable.

Fixes: bb3632c6101b (PM / sleep: trace events for suspend/resume)
Reported-and-tested-by: Borislav Petkov <bp@suse.de>
	Reported-by: Jiri Kosina <jikos@kernel.org>
	Tested-by: Rafael J. Wysocki <rafael@kernel.org>
	Tested-by: Jiri Kosina <jkosina@suse.cz>
	Signed-off-by: Thomas Garnier <thgarnie@google.com>
	Acked-by: Pavel Machek <pavel@ucw.cz>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 62822e2ec4ad091ba31f823f577ef80db52e3c2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/power/hibernate.c
diff --cc kernel/power/hibernate.c
index 4e7c841a0530,61761aa7cc19..000000000000
--- a/kernel/power/hibernate.c
+++ b/kernel/power/hibernate.c
@@@ -294,16 -298,18 +294,26 @@@ static int create_image(int platform_mo
  
  	in_suspend = 1;
  	save_processor_state();
 -	trace_suspend_resume(TPS("machine_suspend"), PM_EVENT_HIBERNATE, true);
  	error = swsusp_arch_suspend();
++<<<<<<< HEAD
 +	if (error)
 +		printk(KERN_ERR "PM: Error %d creating hibernation image\n",
 +			error);
 +	/* Restore control flow magically appears here */
 +	restore_processor_state();
 +	if (!in_suspend) {
++=======
+ 	/* Restore control flow magically appears here */
+ 	restore_processor_state();
+ 	trace_suspend_resume(TPS("machine_suspend"), PM_EVENT_HIBERNATE, false);
+ 	if (error)
+ 		printk(KERN_ERR "PM: Error %d creating hibernation image\n",
+ 			error);
+ 	if (!in_suspend)
++>>>>>>> 62822e2ec4ad (PM / hibernate: Restore processor state before using per-CPU variables)
  		events_check_enabled = false;
 -
 -	platform_leave(platform_mode);
 +		platform_leave(platform_mode);
 +	}
  
   Power_up:
  	syscore_resume();
* Unmerged path kernel/power/hibernate.c
