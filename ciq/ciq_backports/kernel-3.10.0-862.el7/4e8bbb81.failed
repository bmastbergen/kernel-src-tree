net: Allow tc changes in user namespaces

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] Allow tc changes in user namespaces (Ivan Vecera) [1445420]
Rebuild_FUZZ: 93.33%
commit-author Stéphane Graber <stgraber@ubuntu.com>
commit 4e8bbb819d1594a01f91b1de83321f68d3e6e245
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4e8bbb81.failed

This switches a few remaining capable(CAP_NET_ADMIN) to ns_capable so
that root in a user namespace may set tc rules inside that namespace.

	Signed-off-by: Stéphane Graber <stgraber@ubuntu.com>
	Acked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>
	Cc: "Eric W. Biederman" <ebiederm@xmission.com>
	Cc: Jamal Hadi Salim <jhs@mojatatu.com>
	Cc: "David S. Miller" <davem@davemloft.net>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4e8bbb819d1594a01f91b1de83321f68d3e6e245)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_api.c
#	net/sched/sch_api.c
diff --cc net/sched/cls_api.c
index 5bfdfd2e3b30,1a4a20267787..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -150,7 -134,8 +150,12 @@@ static int tc_ctl_tfilter(struct sk_buf
  	int err;
  	int tp_created = 0;
  
++<<<<<<< HEAD
 +	if ((n->nlmsg_type != RTM_GETTFILTER) && !netlink_capable(skb, CAP_NET_ADMIN))
++=======
+ 	if ((n->nlmsg_type != RTM_GETTFILTER) &&
+ 	    !ns_capable(net->user_ns, CAP_NET_ADMIN))
++>>>>>>> 4e8bbb819d15 (net: Allow tc changes in user namespaces)
  		return -EPERM;
  
  replay:
diff --cc net/sched/sch_api.c
index e09a1b8f4dc8,86f8edfd6b8a..000000000000
--- a/net/sched/sch_api.c
+++ b/net/sched/sch_api.c
@@@ -1112,7 -1084,8 +1112,12 @@@ static int tc_get_qdisc(struct sk_buff 
  	struct Qdisc *p = NULL;
  	int err;
  
++<<<<<<< HEAD
 +	if ((n->nlmsg_type != RTM_GETQDISC) && !netlink_capable(skb, CAP_NET_ADMIN))
++=======
+ 	if ((n->nlmsg_type != RTM_GETQDISC) &&
+ 	    !ns_capable(net->user_ns, CAP_NET_ADMIN))
++>>>>>>> 4e8bbb819d15 (net: Allow tc changes in user namespaces)
  		return -EPERM;
  
  	err = nlmsg_parse(n, sizeof(*tcm), tca, TCA_MAX, NULL);
@@@ -1179,7 -1152,7 +1184,11 @@@ static int tc_modify_qdisc(struct sk_bu
  	struct Qdisc *q, *p;
  	int err;
  
++<<<<<<< HEAD
 +	if (!netlink_capable(skb, CAP_NET_ADMIN))
++=======
+ 	if (!ns_capable(net->user_ns, CAP_NET_ADMIN))
++>>>>>>> 4e8bbb819d15 (net: Allow tc changes in user namespaces)
  		return -EPERM;
  
  replay:
@@@ -1529,7 -1491,8 +1538,12 @@@ static int tc_ctl_tclass(struct sk_buf
  	u32 qid;
  	int err;
  
++<<<<<<< HEAD
 +	if ((n->nlmsg_type != RTM_GETTCLASS) && !netlink_capable(skb, CAP_NET_ADMIN))
++=======
+ 	if ((n->nlmsg_type != RTM_GETTCLASS) &&
+ 	    !ns_capable(net->user_ns, CAP_NET_ADMIN))
++>>>>>>> 4e8bbb819d15 (net: Allow tc changes in user namespaces)
  		return -EPERM;
  
  	err = nlmsg_parse(n, sizeof(*tcm), tca, TCA_MAX, NULL);
* Unmerged path net/sched/cls_api.c
* Unmerged path net/sched/sch_api.c
