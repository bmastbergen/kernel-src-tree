nvme-fc: use blk_mq_delay_run_hw_queue instead of open-coding it

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [nvme] fc: use blk_mq_delay_run_hw_queue instead of open-coding it (David Milburn) [1457880 1456486 1454365]
Rebuild_FUZZ: 95.93%
commit-author Sagi Grimberg <sagi@grimberg.me>
commit e5859d3a0ea07bf948f4538d47fe6547f6e115be
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e5859d3a.failed

	Cc: James Smart <james.smart@broadcom.com>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit e5859d3a0ea07bf948f4538d47fe6547f6e115be)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/fc.c
diff --cc drivers/nvme/host/fc.c
index bff7f964238e,50cc3b2b0e11..000000000000
--- a/drivers/nvme/host/fc.c
+++ b/drivers/nvme/host/fc.c
@@@ -1823,19 -1964,18 +1823,26 @@@ nvme_fc_start_fcp_op(struct nvme_fc_ctr
  		nvme_fc_ctrl_put(ctrl);
  
  		if (ret != -EBUSY)
 -			return BLK_STS_IOERR;
 +			return BLK_MQ_RQ_QUEUE_ERROR;
  
++<<<<<<< HEAD
 +		if (op->rq) {
 +			blk_mq_stop_hw_queues(op->rq->q);
 +			blk_mq_delay_queue(queue->hctx, NVMEFC_QUEUE_DELAY);
 +		}
 +		return BLK_MQ_RQ_QUEUE_BUSY;
++=======
+ 		if (op->rq)
+ 			blk_mq_delay_run_hw_queue(queue->hctx, NVMEFC_QUEUE_DELAY);
+ 
+ 		return BLK_STS_RESOURCE;
++>>>>>>> e5859d3a0ea0 (nvme-fc: use blk_mq_delay_run_hw_queue instead of open-coding it)
  	}
  
 -	return BLK_STS_OK;
 +	return BLK_MQ_RQ_QUEUE_OK;
  }
  
 -static blk_status_t
 +static int
  nvme_fc_queue_rq(struct blk_mq_hw_ctx *hctx,
  			const struct blk_mq_queue_data *bd)
  {
* Unmerged path drivers/nvme/host/fc.c
