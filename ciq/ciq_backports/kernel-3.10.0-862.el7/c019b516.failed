net/sched: cls_flower: Set egress_dev mark when calling into the HW driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: cls_flower: Set egress_dev mark when calling into the HW driver (Ivan Vecera) [1445420]
Rebuild_FUZZ: 97.22%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit c019b5166e11faaf9ed3b64316ed338eaa19de60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c019b516.failed

Commit 7091d8c '(net/sched: cls_flower: Add offload support using egress
Hardware device') made sure (when fl_hw_replace_filter is called) to put
the egress_dev mark on persisent structure instance. Hence, following calls
into the HW driver for stats and deletion will note it and act accordingly.

With commit de4784ca030f this property is lost and hence when called,
the HW driver failes to operate (stats, delete) on the offloaded flow.

Fix it by setting the egress_dev flag whenever the ingress device is
different from the hw device since this is exactly the condition under
which we're calling into the HW driver through the egress port net-device.

Fixes: de4784ca030f ('net: sched: get rid of struct tc_to_netdev')
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Roi Dayan <roid@mellanox.com>
	Acked-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c019b5166e11faaf9ed3b64316ed338eaa19de60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_flower.c
diff --cc net/sched/cls_flower.c
index bef481fd9fe0,b480d7c792ba..000000000000
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@@ -225,21 -225,18 +225,28 @@@ static void fl_destroy_filter(struct rc
  
  static void fl_hw_destroy_filter(struct tcf_proto *tp, struct cls_fl_filter *f)
  {
 -	struct tc_cls_flower_offload cls_flower = {};
 +	struct tc_cls_flower_offload offload = {0};
  	struct net_device *dev = f->hw_dev;
 +	struct tc_to_netdev *tc = &f->tc;
  
 -	if (!tc_can_offload(dev))
 +	if (!tc_can_offload(dev, tp))
  		return;
  
++<<<<<<< HEAD
 +	offload.command = TC_CLSFLOWER_DESTROY;
 +	offload.prio = tp->prio;
 +	offload.cookie = (unsigned long)f;
++=======
+ 	tc_cls_common_offload_init(&cls_flower.common, tp);
+ 	cls_flower.command = TC_CLSFLOWER_DESTROY;
+ 	cls_flower.cookie = (unsigned long) f;
+ 	cls_flower.egress_dev = f->hw_dev != tp->q->dev_queue->dev;
++>>>>>>> c019b5166e11 (net/sched: cls_flower: Set egress_dev mark when calling into the HW driver)
  
 -	dev->netdev_ops->ndo_setup_tc(dev, TC_SETUP_CLSFLOWER, &cls_flower);
 +	tc->type = TC_SETUP_CLSFLOWER;
 +	tc->cls_flower = &offload;
 +
 +	dev->netdev_ops->ndo_setup_tc(dev, tp->q->handle, tp->protocol, tc);
  }
  
  static int fl_hw_replace_filter(struct tcf_proto *tp,
@@@ -287,22 -280,20 +294,30 @@@
  
  static void fl_hw_update_stats(struct tcf_proto *tp, struct cls_fl_filter *f)
  {
 -	struct tc_cls_flower_offload cls_flower = {};
 +	struct tc_cls_flower_offload offload = {0};
  	struct net_device *dev = f->hw_dev;
 +	struct tc_to_netdev *tc = &f->tc;
  
 -	if (!tc_can_offload(dev))
 +	if (!tc_can_offload(dev, tp))
  		return;
  
++<<<<<<< HEAD
 +	offload.command = TC_CLSFLOWER_STATS;
 +	offload.prio = tp->prio;
 +	offload.cookie = (unsigned long)f;
 +	offload.exts = &f->exts;
++=======
+ 	tc_cls_common_offload_init(&cls_flower.common, tp);
+ 	cls_flower.command = TC_CLSFLOWER_STATS;
+ 	cls_flower.cookie = (unsigned long) f;
+ 	cls_flower.exts = &f->exts;
+ 	cls_flower.egress_dev = f->hw_dev != tp->q->dev_queue->dev;
++>>>>>>> c019b5166e11 (net/sched: cls_flower: Set egress_dev mark when calling into the HW driver)
  
 -	dev->netdev_ops->ndo_setup_tc(dev, TC_SETUP_CLSFLOWER,
 -				      &cls_flower);
 +	tc->type = TC_SETUP_CLSFLOWER;
 +	tc->cls_flower = &offload;
 +
 +	dev->netdev_ops->ndo_setup_tc(dev, tp->q->handle, tp->protocol, tc);
  }
  
  static void __fl_delete(struct tcf_proto *tp, struct cls_fl_filter *f)
* Unmerged path net/sched/cls_flower.c
