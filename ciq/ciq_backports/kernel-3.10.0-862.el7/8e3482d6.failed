mlxsw: spectrum_router: Flood packets to router after RIF creation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 8e3482d6adef158d362e46cae1415940bf0f9b07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8e3482d6.failed

If a packet ingress the router but can't be assigned an ingress RIF,
it's dropped.

Therefore, in the case of RIF configured on top of a bridge, it makes
sense to start flooding broadcast packets to the router only after the
RIF was created.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8e3482d6adef158d362e46cae1415940bf0f9b07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
index f8e7036e3f4a,32bf6584e050..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
@@@ -3042,12 -3353,13 +3042,22 @@@ static int mlxsw_sp_rif_bridge_create(s
  	if (IS_ERR(vr))
  		return PTR_ERR(vr);
  
++<<<<<<< HEAD
 +	err = mlxsw_sp_router_port_flood_set(mlxsw_sp, f->fid, true);
 +	if (err)
 +		goto err_port_flood_set;
 +
 +	err = mlxsw_sp_rif_bridge_op(mlxsw_sp, vr->id, l3_dev, f->fid, rif,
 +				     true);
++=======
+ 	rif = mlxsw_sp_rif_alloc(rif_index, vr->id, l3_dev, f, false);
+ 	if (!rif) {
+ 		err = -ENOMEM;
+ 		goto err_rif_alloc;
+ 	}
+ 
+ 	err = mlxsw_sp_rif_bridge_op(mlxsw_sp, rif, true);
++>>>>>>> 8e3482d6adef (mlxsw: spectrum_router: Flood packets to router after RIF creation)
  	if (err)
  		goto err_rif_bridge_op;
  
@@@ -3069,13 -3379,13 +3083,23 @@@
  
  	return 0;
  
++<<<<<<< HEAD
 +err_rif_alloc:
 +	mlxsw_sp_rif_fdb_op(mlxsw_sp, l3_dev->dev_addr, f->fid, false);
 +err_rif_fdb_op:
 +	mlxsw_sp_rif_bridge_op(mlxsw_sp, vr->id, l3_dev, f->fid, rif, false);
 +err_rif_bridge_op:
 +	mlxsw_sp_router_port_flood_set(mlxsw_sp, f->fid, false);
 +err_port_flood_set:
++=======
+ err_rif_fdb_op:
+ 	mlxsw_sp_router_port_flood_set(mlxsw_sp, f->fid, false);
+ err_port_flood_set:
+ 	mlxsw_sp_rif_bridge_op(mlxsw_sp, rif, false);
+ err_rif_bridge_op:
+ 	kfree(rif);
+ err_rif_alloc:
++>>>>>>> 8e3482d6adef (mlxsw: spectrum_router: Flood packets to router after RIF creation)
  	mlxsw_sp_vr_put(vr);
  	return err;
  }
@@@ -3098,13 -3406,15 +3122,19 @@@ void mlxsw_sp_rif_bridge_destroy(struc
  
  	mlxsw_sp_rif_fdb_op(mlxsw_sp, l3_dev->dev_addr, f->fid, false);
  
++<<<<<<< HEAD
 +	mlxsw_sp_rif_bridge_op(mlxsw_sp, vr->id, l3_dev, f->fid, rif, false);
- 
++=======
  	mlxsw_sp_router_port_flood_set(mlxsw_sp, f->fid, false);
  
+ 	mlxsw_sp_rif_bridge_op(mlxsw_sp, rif, false);
+ 
+ 	kfree(rif);
++>>>>>>> 8e3482d6adef (mlxsw: spectrum_router: Flood packets to router after RIF creation)
+ 
  	mlxsw_sp_vr_put(vr);
  
 -	netdev_dbg(l3_dev, "RIF=%d destroyed\n", rif_index);
 +	netdev_dbg(l3_dev, "RIF=%d destroyed\n", rif);
  }
  
  static int mlxsw_sp_inetaddr_bridge_event(struct net_device *l3_dev,
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c
