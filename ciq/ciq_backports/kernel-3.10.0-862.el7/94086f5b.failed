scsi: smartpqi: remove qdepth calculations for logical volumes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] smartpqi: remove qdepth calculations for logical volumes (Don Brace) [1457414]
Rebuild_FUZZ: 94.92%
commit-author Kevin Barnett <kevin.barnett@hpe.com>
commit 94086f5be3f15fc8231e65975e4413c0df3e0203
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/94086f5b.failed

make the queue depth for LVs the same as the maximum
I/Os supported by the controller

	Reviewed-by: Scott Benesh <scott.benesh@microsemi.com>
	Signed-off-by: Kevin Barnett <kevin.barnett@microsemi.com>
	Signed-off-by: Don Brace <don.brace@microsemi.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 94086f5be3f15fc8231e65975e4413c0df3e0203)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/smartpqi/smartpqi_init.c
diff --cc drivers/scsi/smartpqi/smartpqi_init.c
index a3837a6f86ae,23ebe22940fd..000000000000
--- a/drivers/scsi/smartpqi/smartpqi_init.c
+++ b/drivers/scsi/smartpqi/smartpqi_init.c
@@@ -5053,15 -5069,11 +4941,23 @@@ static int pqi_slave_alloc(struct scsi_
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int pqi_slave_configure(struct scsi_device *sdev)
 +{
 +	struct pqi_scsi_dev *device;
 +
 +	device = sdev->hostdata;
 +	if (!device->expose_device)
 +		sdev->no_uld_attach = true;
 +
 +	return 0;
++=======
+ static int pqi_map_queues(struct Scsi_Host *shost)
+ {
+ 	struct pqi_ctrl_info *ctrl_info = shost_to_hba(shost);
+ 
+ 	return blk_mq_pci_map_queues(&shost->tag_set, ctrl_info->pci_dev);
++>>>>>>> 94086f5be3f1 (scsi: smartpqi: remove qdepth calculations for logical volumes)
  }
  
  static int pqi_getpciinfo_ioctl(struct pqi_ctrl_info *ctrl_info,
@@@ -5450,7 -5462,7 +5346,11 @@@ static struct scsi_host_template pqi_dr
  	.eh_device_reset_handler = pqi_eh_device_reset_handler,
  	.ioctl = pqi_ioctl,
  	.slave_alloc = pqi_slave_alloc,
++<<<<<<< HEAD
 +	.slave_configure = pqi_slave_configure,
++=======
+ 	.map_queues = pqi_map_queues,
++>>>>>>> 94086f5be3f1 (scsi: smartpqi: remove qdepth calculations for logical volumes)
  	.sdev_attrs = pqi_sdev_attrs,
  	.shost_attrs = pqi_shost_attrs,
  };
diff --git a/drivers/scsi/smartpqi/smartpqi.h b/drivers/scsi/smartpqi/smartpqi.h
index 5acdb3969532..c33751d3b50c 100644
--- a/drivers/scsi/smartpqi/smartpqi.h
+++ b/drivers/scsi/smartpqi/smartpqi.h
@@ -671,7 +671,6 @@ struct report_phys_lun_extended_entry {
 };
 
 /* for device_flags field of struct report_phys_lun_extended_entry */
-#define REPORT_PHYS_LUN_DEV_FLAG_NON_DISK	0x1
 #define REPORT_PHYS_LUN_DEV_FLAG_AIO_ENABLED	0x8
 
 struct report_phys_lun_extended {
@@ -731,8 +730,6 @@ struct pqi_scsi_dev {
 	u8	is_physical_device : 1;
 	u8	is_external_raid_device : 1;
 	u8	target_lun_valid : 1;
-	u8	expose_device : 1;
-	u8	no_uld_attach : 1;
 	u8	aio_enabled : 1;	/* only valid for physical disks */
 	u8	device_gone : 1;
 	u8	new_device : 1;
@@ -980,9 +977,6 @@ enum pqi_ctrl_mode {
  */
 #define PQI_PHYSICAL_DISK_DEFAULT_MAX_QUEUE_DEPTH	27
 
-/* 0 = no limit */
-#define PQI_LOGICAL_DRIVE_DEFAULT_MAX_QUEUE_DEPTH	0
-
 /* CISS commands */
 #define CISS_READ		0xc0
 #define CISS_REPORT_LOG		0xc2	/* Report Logical LUNs */
* Unmerged path drivers/scsi/smartpqi/smartpqi_init.c
