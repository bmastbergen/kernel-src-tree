drm/i915/cnp: Wa 1181: Fix Backlight issue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Rodrigo Vivi <rodrigo.vivi@intel.com>
commit 0a46ddd57c9ef9fb5376d4bff65d07e0aea30f35
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0a46ddd5.failed

This workaround fixes a CNL PCH bug when changing
backlight from a lower frequency to a higher frequency.

During random reboot cycles, display backlight seems to
be off/ dim for 2-3 mins.

The only functional change on this patch is to
set bit 13 of 0xC2020 for CNL PCH.

The rest of patch is organizing identation around
those bits definitions and re-organizing CFL workarounds.

v2: Only add the bit that matters without touching others
    around (Jani).
    Rebase on top of clock gating functions rename.

	Cc: Jani Nikula <jani.nikula@intel.com>
	Cc: Arthur J Runyan <arthur.j.runyan@intel.com>
	Cc: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
	Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Reviewed-by: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20170831045223.3960-1-rodrigo.vivi@intel.com
(cherry picked from commit 0a46ddd57c9ef9fb5376d4bff65d07e0aea30f35)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_pm.c
diff --cc drivers/gpu/drm/i915/intel_pm.c
index 52c3abe82e2f,f5d77b131b58..000000000000
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@@ -7154,7 -8264,49 +7154,53 @@@ static void gen8_set_l3sqc_credits(stru
  	I915_WRITE(GEN7_MISCCPCTL, misccpctl);
  }
  
++<<<<<<< HEAD
 +static void kabylake_init_clock_gating(struct drm_i915_private *dev_priv)
++=======
+ static void cnp_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	if (!HAS_PCH_CNP(dev_priv))
+ 		return;
+ 
+ 	/* Wa #1181 */
+ 	I915_WRITE(SOUTH_DSPCLK_GATE_D, CNP_PWM_CGE_GATING_DISABLE);
+ }
+ 
+ static void cnl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	cnp_init_clock_gating(dev_priv);
+ 
+ 	/* This is not an Wa. Enable for better image quality */
+ 	I915_WRITE(_3D_CHICKEN3,
+ 		   _MASKED_BIT_ENABLE(_3D_CHICKEN3_AA_LINE_QUALITY_FIX_ENABLE));
+ 
+ 	/* WaEnableChickenDCPR:cnl */
+ 	I915_WRITE(GEN8_CHICKEN_DCPR_1,
+ 		   I915_READ(GEN8_CHICKEN_DCPR_1) | MASK_WAKEMEM);
+ 
+ 	/* WaFbcWakeMemOn:cnl */
+ 	I915_WRITE(DISP_ARB_CTL, I915_READ(DISP_ARB_CTL) |
+ 		   DISP_FBC_MEMORY_WAKE);
+ 
+ 	/* WaSarbUnitClockGatingDisable:cnl (pre-prod) */
+ 	if (IS_CNL_REVID(dev_priv, CNL_REVID_A0, CNL_REVID_B0))
+ 		I915_WRITE(SLICE_UNIT_LEVEL_CLKGATE,
+ 			   I915_READ(SLICE_UNIT_LEVEL_CLKGATE) |
+ 			   SARBUNIT_CLKGATE_DIS);
+ }
+ 
+ static void cfl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	cnp_init_clock_gating(dev_priv);
+ 	gen9_init_clock_gating(dev_priv);
+ 
+ 	/* WaFbcNukeOnHostModify:cfl */
+ 	I915_WRITE(ILK_DPFC_CHICKEN, I915_READ(ILK_DPFC_CHICKEN) |
+ 		   ILK_DPFC_NUKE_ON_ANY_MODIFICATION);
+ }
+ 
+ static void kbl_init_clock_gating(struct drm_i915_private *dev_priv)
++>>>>>>> 0a46ddd57c9e (drm/i915/cnp: Wa 1181: Fix Backlight issue)
  {
  	gen9_init_clock_gating(dev_priv);
  
@@@ -7628,22 -8786,28 +7674,33 @@@ static void nop_init_clock_gating(struc
   */
  void intel_init_clock_gating_hooks(struct drm_i915_private *dev_priv)
  {
++<<<<<<< HEAD
 +	if (IS_SKYLAKE(dev_priv))
 +		dev_priv->display.init_clock_gating = skylake_init_clock_gating;
 +	else if (IS_KABYLAKE(dev_priv))
 +		dev_priv->display.init_clock_gating = kabylake_init_clock_gating;
++=======
+ 	if (IS_CANNONLAKE(dev_priv))
+ 		dev_priv->display.init_clock_gating = cnl_init_clock_gating;
+ 	else if (IS_COFFEELAKE(dev_priv))
+ 		dev_priv->display.init_clock_gating = cfl_init_clock_gating;
+ 	else if (IS_SKYLAKE(dev_priv))
+ 		dev_priv->display.init_clock_gating = skl_init_clock_gating;
+ 	else if (IS_KABYLAKE(dev_priv))
+ 		dev_priv->display.init_clock_gating = kbl_init_clock_gating;
++>>>>>>> 0a46ddd57c9e (drm/i915/cnp: Wa 1181: Fix Backlight issue)
  	else if (IS_BROXTON(dev_priv))
  		dev_priv->display.init_clock_gating = bxt_init_clock_gating;
 -	else if (IS_GEMINILAKE(dev_priv))
 -		dev_priv->display.init_clock_gating = glk_init_clock_gating;
  	else if (IS_BROADWELL(dev_priv))
 -		dev_priv->display.init_clock_gating = bdw_init_clock_gating;
 +		dev_priv->display.init_clock_gating = broadwell_init_clock_gating;
  	else if (IS_CHERRYVIEW(dev_priv))
 -		dev_priv->display.init_clock_gating = chv_init_clock_gating;
 +		dev_priv->display.init_clock_gating = cherryview_init_clock_gating;
  	else if (IS_HASWELL(dev_priv))
 -		dev_priv->display.init_clock_gating = hsw_init_clock_gating;
 +		dev_priv->display.init_clock_gating = haswell_init_clock_gating;
  	else if (IS_IVYBRIDGE(dev_priv))
 -		dev_priv->display.init_clock_gating = ivb_init_clock_gating;
 +		dev_priv->display.init_clock_gating = ivybridge_init_clock_gating;
  	else if (IS_VALLEYVIEW(dev_priv))
 -		dev_priv->display.init_clock_gating = vlv_init_clock_gating;
 +		dev_priv->display.init_clock_gating = valleyview_init_clock_gating;
  	else if (IS_GEN6(dev_priv))
  		dev_priv->display.init_clock_gating = gen6_init_clock_gating;
  	else if (IS_GEN5(dev_priv))
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index c70c07a7b586..0834bb3e5429 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -6605,6 +6605,7 @@ enum {
 #define  PCH_DPLUNIT_CLOCK_GATE_DISABLE (1<<30)
 #define  PCH_DPLSUNIT_CLOCK_GATE_DISABLE (1<<29)
 #define  PCH_CPUNIT_CLOCK_GATE_DISABLE (1<<14)
+#define  CNP_PWM_CGE_GATING_DISABLE (1<<13)
 #define  PCH_LP_PARTITION_LEVEL_DISABLE  (1<<12)
 
 /* CPU: FDI_TX */
* Unmerged path drivers/gpu/drm/i915/intel_pm.c
