CIFS: implement get_dfs_refer for SMB2+

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Aurelien Aptel <aaptel@suse.com>
commit 9d49640a21bffd730a6ebf2a0032e022f7caf84a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9d49640a.failed

in SMB2+ the get_dfs_refer operation uses a FSCTL. The request can be
made on any Tree Connection according to the specs. Since Samba only
accepted it on an IPC connection until recently, try that first.

https://lists.samba.org/archive/samba-technical/2017-February/118859.html

3.2.4.20.3 Application Requests DFS Referral Information:
> The client MUST search for an existing Session and TreeConnect to any
> share on the server identified by ServerName for the user identified by
> UserCredentials. If no Session and TreeConnect are found, the client
> MUST establish a new Session and TreeConnect to IPC$ on the target
> server as described in section 3.2.4.2 using the supplied ServerName and
> UserCredentials.

	Signed-off-by: Aurelien Aptel <aaptel@suse.com>
	Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
	Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit 9d49640a21bffd730a6ebf2a0032e022f7caf84a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2ops.c
diff --cc fs/cifs/smb2ops.c
index f4acb0a6593b,b360c381b00e..000000000000
--- a/fs/cifs/smb2ops.c
+++ b/fs/cifs/smb2ops.c
@@@ -1802,6 -2550,11 +1901,14 @@@ struct smb_version_operations smb30_ope
  	.dir_needs_close = smb2_dir_needs_close,
  	.fallocate = smb3_fallocate,
  	.enum_snapshots = smb3_enum_snapshots,
++<<<<<<< HEAD
++=======
+ 	.init_transform_rq = smb3_init_transform_rq,
+ 	.free_transform_rq = smb3_free_transform_rq,
+ 	.is_transform_hdr = smb3_is_transform_hdr,
+ 	.receive_transform = smb3_receive_transform,
+ 	.get_dfs_refer = smb2_get_dfs_refer,
++>>>>>>> 9d49640a21bf (CIFS: implement get_dfs_refer for SMB2+)
  };
  
  #ifdef CONFIG_CIFS_SMB311
@@@ -1890,6 -2643,11 +1997,14 @@@ struct smb_version_operations smb311_op
  	.dir_needs_close = smb2_dir_needs_close,
  	.fallocate = smb3_fallocate,
  	.enum_snapshots = smb3_enum_snapshots,
++<<<<<<< HEAD
++=======
+ 	.init_transform_rq = smb3_init_transform_rq,
+ 	.free_transform_rq = smb3_free_transform_rq,
+ 	.is_transform_hdr = smb3_is_transform_hdr,
+ 	.receive_transform = smb3_receive_transform,
+ 	.get_dfs_refer = smb2_get_dfs_refer,
++>>>>>>> 9d49640a21bf (CIFS: implement get_dfs_refer for SMB2+)
  };
  #endif /* CIFS_SMB311 */
  
* Unmerged path fs/cifs/smb2ops.c
diff --git a/fs/cifs/smb2pdu.h b/fs/cifs/smb2pdu.h
index 35ff9fae1c27..3ef333cb96fe 100644
--- a/fs/cifs/smb2pdu.h
+++ b/fs/cifs/smb2pdu.h
@@ -692,6 +692,14 @@ struct fsctl_get_integrity_information_rsp {
 /* Integrity flags for above */
 #define FSCTL_INTEGRITY_FLAG_CHECKSUM_ENFORCEMENT_OFF	0x00000001
 
+/* See MS-DFSC 2.2.2 */
+struct fsctl_get_dfs_referral_req {
+	__le16 MaxReferralLevel;
+	__u8 RequestFileName[];
+} __packed;
+
+/* DFS response is struct get_dfs_refer_rsp */
+
 /* See MS-SMB2 2.2.31.3 */
 struct network_resiliency_req {
 	__le32 Timeout;
