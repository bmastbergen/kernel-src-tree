IB/hfi1: Remove duplicate definitions of num_user_pages() function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Harish Chegondi <harish.chegondi@intel.com>
commit ddd3affb50015c3c7ee218b83e73e646aa48e212
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ddd3affb.failed

num_user_pages() function has been defined in both user_exp_rcv.c file
and user_sdma.c file. Move the function definition to a header file so
there is only one definition in the source repo.

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Harish Chegondi <harish.chegondi@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit ddd3affb50015c3c7ee218b83e73e646aa48e212)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/user_exp_rcv.c
#	drivers/infiniband/hw/hfi1/user_exp_rcv.h
#	drivers/infiniband/hw/hfi1/user_sdma.c
diff --cc drivers/infiniband/hw/hfi1/user_exp_rcv.c
index c7f13df471c4,026790ee0e84..000000000000
--- a/drivers/infiniband/hw/hfi1/user_exp_rcv.c
+++ b/drivers/infiniband/hw/hfi1/user_exp_rcv.c
@@@ -75,27 -67,26 +75,39 @@@ struct tid_pageset 
  	u16 count;
  };
  
++<<<<<<< HEAD
 +#define EXP_TID_SET_EMPTY(set) (set.count == 0 && list_empty(&set.list))
 +
 +#define num_user_pages(vaddr, len)				       \
 +	(1 + (((((unsigned long)(vaddr) +			       \
 +		 (unsigned long)(len) - 1) & PAGE_MASK) -	       \
 +	       ((unsigned long)vaddr & PAGE_MASK)) >> PAGE_SHIFT))
 +
 +static void unlock_exp_tids(struct hfi1_ctxtdata *, struct exp_tid_set *,
 +			    struct hfi1_filedata *);
 +static u32 find_phys_blocks(struct page **, unsigned, struct tid_pageset *);
 +static int set_rcvarray_entry(struct file *, unsigned long, u32,
 +			      struct tid_group *, struct page **, unsigned);
 +static int tid_rb_insert(void *, struct mmu_rb_node *);
++=======
+ static void unlock_exp_tids(struct hfi1_ctxtdata *uctxt,
+ 			    struct exp_tid_set *set,
+ 			    struct hfi1_filedata *fd);
+ static u32 find_phys_blocks(struct tid_user_buf *tidbuf, unsigned int npages);
+ static int set_rcvarray_entry(struct hfi1_filedata *fd,
+ 			      struct tid_user_buf *tbuf,
+ 			      u32 rcventry, struct tid_group *grp,
+ 			      u16 pageidx, unsigned int npages);
+ static int tid_rb_insert(void *arg, struct mmu_rb_node *node);
++>>>>>>> ddd3affb5001 (IB/hfi1: Remove duplicate definitions of num_user_pages() function)
  static void cacheless_tid_rb_remove(struct hfi1_filedata *fdata,
  				    struct tid_rb_node *tnode);
 -static void tid_rb_remove(void *arg, struct mmu_rb_node *node);
 -static int tid_rb_invalidate(void *arg, struct mmu_rb_node *mnode);
 -static int program_rcvarray(struct hfi1_filedata *fd, struct tid_user_buf *,
 -			    struct tid_group *grp,
 -			    unsigned int start, u16 count,
 -			    u32 *tidlist, unsigned int *tididx,
 -			    unsigned int *pmapped);
 -static int unprogram_rcvarray(struct hfi1_filedata *fd, u32 tidinfo,
 -			      struct tid_group **grp);
 +static void tid_rb_remove(void *, struct mmu_rb_node *);
 +static int tid_rb_invalidate(void *, struct mmu_rb_node *);
 +static int program_rcvarray(struct file *, unsigned long, struct tid_group *,
 +			    struct tid_pageset *, unsigned, u16, struct page **,
 +			    u32 *, unsigned *, unsigned *);
 +static int unprogram_rcvarray(struct file *, u32, struct tid_group **);
  static void clear_tid_node(struct hfi1_filedata *fd, struct tid_rb_node *node);
  
  static struct mmu_rb_ops tid_rb_ops = {
diff --cc drivers/infiniband/hw/hfi1/user_exp_rcv.h
index d1d7d3d3bd44,7461d11b01c4..000000000000
--- a/drivers/infiniband/hw/hfi1/user_exp_rcv.h
+++ b/drivers/infiniband/hw/hfi1/user_exp_rcv.h
@@@ -49,32 -49,34 +49,53 @@@
  
  #include "hfi.h"
  
 -#include "exp_rcv.h"
 +#define EXP_TID_TIDLEN_MASK   0x7FFULL
 +#define EXP_TID_TIDLEN_SHIFT  0
 +#define EXP_TID_TIDCTRL_MASK  0x3ULL
 +#define EXP_TID_TIDCTRL_SHIFT 20
 +#define EXP_TID_TIDIDX_MASK   0x3FFULL
 +#define EXP_TID_TIDIDX_SHIFT  22
 +#define EXP_TID_GET(tid, field)	\
 +	(((tid) >> EXP_TID_TID##field##_SHIFT) & EXP_TID_TID##field##_MASK)
  
 -struct tid_user_buf {
 -	unsigned long vaddr;
 -	unsigned long length;
 -	unsigned int npages;
 -	struct page **pages;
 -	struct tid_pageset *psets;
 -	unsigned int n_psets;
 -};
 +#define EXP_TID_SET(field, value)			\
 +	(((value) & EXP_TID_TID##field##_MASK) <<	\
 +	 EXP_TID_TID##field##_SHIFT)
 +#define EXP_TID_CLEAR(tid, field) ({					\
 +		(tid) &= ~(EXP_TID_TID##field##_MASK <<			\
 +			   EXP_TID_TID##field##_SHIFT);			\
 +		})
 +#define EXP_TID_RESET(tid, field, value) do {				\
 +		EXP_TID_CLEAR(tid, field);				\
 +		(tid) |= EXP_TID_SET(field, (value));			\
 +	} while (0)
  
++<<<<<<< HEAD
 +void hfi1_user_exp_rcv_grp_free(struct hfi1_ctxtdata *uctxt);
 +int hfi1_user_exp_rcv_init(struct file *);
 +int hfi1_user_exp_rcv_free(struct hfi1_filedata *);
 +int hfi1_user_exp_rcv_setup(struct file *, struct hfi1_tid_info *);
 +int hfi1_user_exp_rcv_clear(struct file *, struct hfi1_tid_info *);
 +int hfi1_user_exp_rcv_invalid(struct file *, struct hfi1_tid_info *);
++=======
+ static inline int num_user_pages(unsigned long addr,
+ 				 unsigned long len)
+ {
+ 	const unsigned long spage = addr & PAGE_MASK;
+ 	const unsigned long epage = (addr + len - 1) & PAGE_MASK;
+ 
+ 	return 1 + ((epage - spage) >> PAGE_SHIFT);
+ }
+ 
+ int hfi1_user_exp_rcv_init(struct hfi1_filedata *fd,
+ 			   struct hfi1_ctxtdata *uctxt);
+ void hfi1_user_exp_rcv_free(struct hfi1_filedata *fd);
+ int hfi1_user_exp_rcv_setup(struct hfi1_filedata *fd,
+ 			    struct hfi1_tid_info *tinfo);
+ int hfi1_user_exp_rcv_clear(struct hfi1_filedata *fd,
+ 			    struct hfi1_tid_info *tinfo);
+ int hfi1_user_exp_rcv_invalid(struct hfi1_filedata *fd,
+ 			      struct hfi1_tid_info *tinfo);
++>>>>>>> ddd3affb5001 (IB/hfi1: Remove duplicate definitions of num_user_pages() function)
  
  #endif /* _HFI1_USER_EXP_RCV_H */
diff --cc drivers/infiniband/hw/hfi1/user_sdma.c
index b5260e7006cc,2837407d4daa..000000000000
--- a/drivers/infiniband/hw/hfi1/user_sdma.c
+++ b/drivers/infiniband/hw/hfi1/user_sdma.c
@@@ -284,25 -244,27 +284,49 @@@ struct user_sdma_txreq 
  	hfi1_cdbg(SDMA, "[%u:%u:%u] " fmt, (pq)->dd->unit, (pq)->ctxt, \
  		 (pq)->subctxt, ##__VA_ARGS__)
  
++<<<<<<< HEAD
 +static int user_sdma_send_pkts(struct user_sdma_request *, unsigned);
 +static int num_user_pages(const struct iovec *);
 +static void user_sdma_txreq_cb(struct sdma_txreq *, int);
 +static inline void pq_update(struct hfi1_user_sdma_pkt_q *);
 +static void user_sdma_free_request(struct user_sdma_request *, bool);
 +static int pin_vector_pages(struct user_sdma_request *,
 +			    struct user_sdma_iovec *);
 +static void unpin_vector_pages(struct mm_struct *, struct page **, unsigned,
 +			       unsigned);
 +static int check_header_template(struct user_sdma_request *,
 +				 struct hfi1_pkt_header *, u32, u32);
 +static int set_txreq_header(struct user_sdma_request *,
 +			    struct user_sdma_txreq *, u32);
 +static int set_txreq_header_ahg(struct user_sdma_request *,
 +				struct user_sdma_txreq *, u32);
 +static inline void set_comp_state(struct hfi1_user_sdma_pkt_q *,
 +				  struct hfi1_user_sdma_comp_q *,
 +				  u16, enum hfi1_sdma_comp_state, int);
 +static inline u32 set_pkt_bth_psn(__be32, u8, u32);
++=======
+ static int user_sdma_send_pkts(struct user_sdma_request *req,
+ 			       unsigned maxpkts);
+ static void user_sdma_txreq_cb(struct sdma_txreq *txreq, int status);
+ static inline void pq_update(struct hfi1_user_sdma_pkt_q *pq);
+ static void user_sdma_free_request(struct user_sdma_request *req, bool unpin);
+ static int pin_vector_pages(struct user_sdma_request *req,
+ 			    struct user_sdma_iovec *iovec);
+ static void unpin_vector_pages(struct mm_struct *mm, struct page **pages,
+ 			       unsigned start, unsigned npages);
+ static int check_header_template(struct user_sdma_request *req,
+ 				 struct hfi1_pkt_header *hdr, u32 lrhlen,
+ 				 u32 datalen);
+ static int set_txreq_header(struct user_sdma_request *req,
+ 			    struct user_sdma_txreq *tx, u32 datalen);
+ static int set_txreq_header_ahg(struct user_sdma_request *req,
+ 				struct user_sdma_txreq *tx, u32 len);
+ static inline void set_comp_state(struct hfi1_user_sdma_pkt_q *pq,
+ 				  struct hfi1_user_sdma_comp_q *cq,
+ 				  u16 idx, enum hfi1_sdma_comp_state state,
+ 				  int ret);
+ static inline u32 set_pkt_bth_psn(__be32 bthpsn, u8 expct, u32 frags);
++>>>>>>> ddd3affb5001 (IB/hfi1: Remove duplicate definitions of num_user_pages() function)
  static inline u32 get_lrh_len(struct hfi1_pkt_header, u32 len);
  
  static int defer_packet_queue(
* Unmerged path drivers/infiniband/hw/hfi1/user_exp_rcv.c
* Unmerged path drivers/infiniband/hw/hfi1/user_exp_rcv.h
* Unmerged path drivers/infiniband/hw/hfi1/user_sdma.c
