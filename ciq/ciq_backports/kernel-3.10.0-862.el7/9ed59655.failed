tcm_fc: Convert to target_alloc_session usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit 9ed5965588603840100fb31e579c2996d81aaea9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9ed59655.failed

This patch converts tcm_fc target mode addition of tf_sess->hash to
port_id hlist_head using the new alloc_session callback().

	Cc: Vasu Dev <vasu.dev@linux.intel.com>
	Cc: Mark Rustad <mark.d.rustad@intel.com>
	Cc: Robert Love <robert.w.love@intel.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 9ed5965588603840100fb31e579c2996d81aaea9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/tcm_fc/tfc_sess.c
diff --cc drivers/target/tcm_fc/tfc_sess.c
index 42573f7a077b,d0c3e1894c61..000000000000
--- a/drivers/target/tcm_fc/tfc_sess.c
+++ b/drivers/target/tcm_fc/tfc_sess.c
@@@ -197,10 -205,14 +211,14 @@@ static int ft_sess_alloc_cb(struct se_p
   * Caller holds ft_lport_lock.
   */
  static struct ft_sess *ft_sess_create(struct ft_tport *tport, u32 port_id,
 -				      struct fc_rport_priv *rdata)
 +				      struct ft_node_acl *acl)
  {
++<<<<<<< HEAD
++=======
+ 	struct se_portal_group *se_tpg = &tport->tpg->se_tpg;
++>>>>>>> 9ed596558860 (tcm_fc: Convert to target_alloc_session usage)
  	struct ft_sess *sess;
  	struct hlist_head *head;
 -	unsigned char initiatorname[TRANSPORT_IQN_LEN];
 -
 -	ft_format_wwn(&initiatorname[0], TRANSPORT_IQN_LEN, rdata->ids.port_name);
  
  	head = &tport->hash[ft_sess_hash(port_id)];
  	hlist_for_each_entry_rcu(sess, head, hash)
@@@ -218,17 -235,6 +241,20 @@@
  		kfree(sess);
  		return NULL;
  	}
++<<<<<<< HEAD
 +	sess->se_sess->se_node_acl = &acl->se_node_acl;
 +	sess->tport = tport;
 +	sess->port_id = port_id;
 +	kref_init(&sess->kref);	/* ref for table entry */
 +	hlist_add_head_rcu(&sess->hash, head);
 +	tport->sess_count++;
 +
 +	pr_debug("port_id %x sess %p\n", port_id, sess);
 +
 +	transport_register_session(&tport->tpg->se_tpg, &acl->se_node_acl,
 +				   sess->se_sess, sess);
++=======
++>>>>>>> 9ed596558860 (tcm_fc: Convert to target_alloc_session usage)
  	return sess;
  }
  
* Unmerged path drivers/target/tcm_fc/tfc_sess.c
