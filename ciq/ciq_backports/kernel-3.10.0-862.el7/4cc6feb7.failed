drm/i915/cnp: Don't touch other PCH clock gating bits.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [gpu] drm/i915/cnp: Don't touch other PCH clock gating bits (Rob Clark) [1520639]
Rebuild_FUZZ: 99.07%
commit-author Rodrigo Vivi <rodrigo.vivi@intel.com>
commit 4cc6feb715c223d59c8cad0dc71bce1a574a2c67
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4cc6feb7.failed

Don't touch other bits. My bad.

I haven't seen any case where those other bits appeard to be
set before we touch it, but it is safe to avoid touching
other bits we weren't told to touch.

Fixes: 0a46ddd57c9e ("drm/i915/cnp: Wa 1181: Fix Backlight issue")
	Cc: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
	Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Reviewed-by: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20170908234534.17986-1-rodrigo.vivi@intel.com
(cherry picked from commit 4cc6feb715c223d59c8cad0dc71bce1a574a2c67)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_pm.c
diff --cc drivers/gpu/drm/i915/intel_pm.c
index 52c3abe82e2f,adfeb7bb8874..000000000000
--- a/drivers/gpu/drm/i915/intel_pm.c
+++ b/drivers/gpu/drm/i915/intel_pm.c
@@@ -7154,7 -8363,57 +7154,61 @@@ static void gen8_set_l3sqc_credits(stru
  	I915_WRITE(GEN7_MISCCPCTL, misccpctl);
  }
  
++<<<<<<< HEAD
 +static void kabylake_init_clock_gating(struct drm_i915_private *dev_priv)
++=======
+ static void cnp_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	if (!HAS_PCH_CNP(dev_priv))
+ 		return;
+ 
+ 	/* Wa #1181 */
+ 	I915_WRITE(SOUTH_DSPCLK_GATE_D, I915_READ(SOUTH_DSPCLK_GATE_D) |
+ 		   CNP_PWM_CGE_GATING_DISABLE);
+ }
+ 
+ static void cnl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	u32 val;
+ 	cnp_init_clock_gating(dev_priv);
+ 
+ 	/* This is not an Wa. Enable for better image quality */
+ 	I915_WRITE(_3D_CHICKEN3,
+ 		   _MASKED_BIT_ENABLE(_3D_CHICKEN3_AA_LINE_QUALITY_FIX_ENABLE));
+ 
+ 	/* WaEnableChickenDCPR:cnl */
+ 	I915_WRITE(GEN8_CHICKEN_DCPR_1,
+ 		   I915_READ(GEN8_CHICKEN_DCPR_1) | MASK_WAKEMEM);
+ 
+ 	/* WaFbcWakeMemOn:cnl */
+ 	I915_WRITE(DISP_ARB_CTL, I915_READ(DISP_ARB_CTL) |
+ 		   DISP_FBC_MEMORY_WAKE);
+ 
+ 	/* WaSarbUnitClockGatingDisable:cnl (pre-prod) */
+ 	if (IS_CNL_REVID(dev_priv, CNL_REVID_A0, CNL_REVID_B0))
+ 		I915_WRITE(SLICE_UNIT_LEVEL_CLKGATE,
+ 			   I915_READ(SLICE_UNIT_LEVEL_CLKGATE) |
+ 			   SARBUNIT_CLKGATE_DIS);
+ 
+ 	/* Display WA #1133: WaFbcSkipSegments:cnl */
+ 	val = I915_READ(ILK_DPFC_CHICKEN);
+ 	val &= ~GLK_SKIP_SEG_COUNT_MASK;
+ 	val |= GLK_SKIP_SEG_EN | GLK_SKIP_SEG_COUNT(1);
+ 	I915_WRITE(ILK_DPFC_CHICKEN, val);
+ }
+ 
+ static void cfl_init_clock_gating(struct drm_i915_private *dev_priv)
+ {
+ 	cnp_init_clock_gating(dev_priv);
+ 	gen9_init_clock_gating(dev_priv);
+ 
+ 	/* WaFbcNukeOnHostModify:cfl */
+ 	I915_WRITE(ILK_DPFC_CHICKEN, I915_READ(ILK_DPFC_CHICKEN) |
+ 		   ILK_DPFC_NUKE_ON_ANY_MODIFICATION);
+ }
+ 
+ static void kbl_init_clock_gating(struct drm_i915_private *dev_priv)
++>>>>>>> 4cc6feb715c2 (drm/i915/cnp: Don't touch other PCH clock gating bits.)
  {
  	gen9_init_clock_gating(dev_priv);
  
* Unmerged path drivers/gpu/drm/i915/intel_pm.c
