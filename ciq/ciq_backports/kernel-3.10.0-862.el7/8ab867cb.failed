s390/mm: fix BUG_ON in crst_table_upgrade

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [s390] mm: fix BUG_ON in crst_table_upgrade (Hendrik Brueckner) [1500580]
Rebuild_FUZZ: 93.51%
commit-author Martin Schwidefsky <schwidefsky@de.ibm.com>
commit 8ab867cb0806a8e195de161fd8883a0578d1d050
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8ab867cb.failed

A 31-bit compat process can force a BUG_ON in crst_table_upgrade
with specific, invalid mmap calls, e.g.

   mmap((void*) 0x7fff8000, 0x10000, 3, 32, -1, 0)

The arch_get_unmapped_area[_topdown] functions miss an if condition
in the decision to do a page table upgrade.

Fixes: 9b11c7912d00 ("s390/mm: simplify arch_get_unmapped_area[_topdown]")
	Cc: <stable@vger.kernel.org>  # v4.12+
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 8ab867cb0806a8e195de161fd8883a0578d1d050)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/mm/mmap.c
diff --cc arch/s390/mm/mmap.c
index 88bf1e650652,5bea139517a2..000000000000
--- a/arch/s390/mm/mmap.c
+++ b/arch/s390/mm/mmap.c
@@@ -116,9 -109,24 +116,25 @@@ arch_get_unmapped_area(struct file *fil
  	info.length = len;
  	info.low_limit = mm->mmap_base;
  	info.high_limit = TASK_SIZE;
 -	if (filp || (flags & MAP_SHARED))
 -		info.align_mask = MMAP_ALIGN_MASK << PAGE_SHIFT;
 -	else
 -		info.align_mask = 0;
 +	info.align_mask = do_color_align ? (mmap_align_mask << PAGE_SHIFT) : 0;
  	info.align_offset = pgoff << PAGE_SHIFT;
++<<<<<<< HEAD
 +	return vm_unmapped_area(&info);
++=======
+ 	addr = vm_unmapped_area(&info);
+ 	if (addr & ~PAGE_MASK)
+ 		return addr;
+ 
+ check_asce_limit:
+ 	if (addr + len > current->mm->context.asce_limit &&
+ 	    addr + len <= TASK_SIZE) {
+ 		rc = crst_table_upgrade(mm, addr + len);
+ 		if (rc)
+ 			return (unsigned long) rc;
+ 	}
+ 
+ 	return addr;
++>>>>>>> 8ab867cb0806 (s390/mm: fix BUG_ON in crst_table_upgrade)
  }
  
  unsigned long
@@@ -172,6 -179,16 +188,19 @@@ arch_get_unmapped_area_topdown(struct f
  		info.low_limit = TASK_UNMAPPED_BASE;
  		info.high_limit = TASK_SIZE;
  		addr = vm_unmapped_area(&info);
++<<<<<<< HEAD
++=======
+ 		if (addr & ~PAGE_MASK)
+ 			return addr;
+ 	}
+ 
+ check_asce_limit:
+ 	if (addr + len > current->mm->context.asce_limit &&
+ 	    addr + len <= TASK_SIZE) {
+ 		rc = crst_table_upgrade(mm, addr + len);
+ 		if (rc)
+ 			return (unsigned long) rc;
++>>>>>>> 8ab867cb0806 (s390/mm: fix BUG_ON in crst_table_upgrade)
  	}
  
  	return addr;
* Unmerged path arch/s390/mm/mmap.c
