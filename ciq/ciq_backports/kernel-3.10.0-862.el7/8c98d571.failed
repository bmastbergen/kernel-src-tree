net: sched: cls_route: no need to call tcf_exts_change for newly allocated struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: cls_route: no need to call tcf_exts_change for newly allocated struct (Ivan Vecera) [1445420]
Rebuild_FUZZ: 96.82%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 8c98d571bb0e9717fd7be7242945e8e0abebbaa3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8c98d571.failed

As the f struct was allocated right before route4_set_parms call,
no need to use tcf_exts_change to do atomic change, and we can just
fill-up the unused exts struct directly by tcf_exts_validate.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8c98d571bb0e9717fd7be7242945e8e0abebbaa3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_route.c
diff --cc net/sched/cls_route.c
index ddc332f8bc11,f1e7d7850b44..000000000000
--- a/net/sched/cls_route.c
+++ b/net/sched/cls_route.c
@@@ -372,10 -372,9 +372,16 @@@ static int route4_set_parms(struct net 
  	struct route4_filter *fp;
  	unsigned int h1;
  	struct route4_bucket *b;
++<<<<<<< HEAD
 +	struct tcf_exts e;
 +
 +	tcf_exts_init(&e, TCA_ROUTE4_ACT, TCA_ROUTE4_POLICE);
 +	err = tcf_exts_validate(net, tp, tb, est, &e, ovr);
++=======
+ 	int err;
+ 
+ 	err = tcf_exts_validate(net, tp, tb, est, &f->exts, ovr);
++>>>>>>> 8c98d571bb0e (net: sched: cls_route: no need to call tcf_exts_change for newly allocated struct)
  	if (err < 0)
  		return err;
  
* Unmerged path net/sched/cls_route.c
