ipv4: Namespecify tcp_keepalive_probes sysctl knob

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nikolay Borisov <kernel@kyup.com>
commit 9bd6861bd4326e3afd3f14a9ec8a723771fb20bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9bd6861b.failed

This is required to have full tcp keepalive mechanism namespace
support.

	Signed-off-by: Nikolay Borisov <kernel@kyup.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9bd6861bd4326e3afd3f14a9ec8a723771fb20bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/netns/ipv4.h
#	include/net/tcp.h
#	net/ipv4/sysctl_net_ipv4.c
#	net/ipv4/tcp_ipv4.c
#	net/ipv4/tcp_timer.c
diff --cc include/net/netns/ipv4.h
index 4b15ee83774e,6e26ea2d0374..000000000000
--- a/include/net/netns/ipv4.h
+++ b/include/net/netns/ipv4.h
@@@ -70,13 -75,35 +70,34 @@@ struct netns_ipv4 
  	int sysctl_icmp_ratemask;
  	int sysctl_icmp_errors_use_inbound_ifaddr;
  
 -	struct local_ports ip_local_ports;
 -
  	int sysctl_tcp_ecn;
 -	int sysctl_tcp_ecn_fallback;
  
++<<<<<<< HEAD
 +	kgid_t sysctl_ping_group_range[2];
 +	long sysctl_tcp_mem[3];
++=======
+ 	int sysctl_ip_no_pmtu_disc;
+ 	int sysctl_ip_fwd_use_pmtu;
+ 	int sysctl_ip_nonlocal_bind;
+ 
+ 	int sysctl_fwmark_reflect;
+ 	int sysctl_tcp_fwmark_accept;
+ #ifdef CONFIG_NET_L3_MASTER_DEV
+ 	int sysctl_tcp_l3mdev_accept;
+ #endif
+ 	int sysctl_tcp_mtu_probing;
+ 	int sysctl_tcp_base_mss;
+ 	int sysctl_tcp_probe_threshold;
+ 	u32 sysctl_tcp_probe_interval;
+ 
+ 	int sysctl_tcp_keepalive_time;
+ 	int sysctl_tcp_keepalive_probes;
+ 
+ 	struct ping_group_range ping_group_range;
++>>>>>>> 9bd6861bd432 (ipv4: Namespecify tcp_keepalive_probes sysctl knob)
  
  	atomic_t dev_addr_genid;
 -
 -#ifdef CONFIG_SYSCTL
 -	unsigned long *sysctl_local_reserved_ports;
 -#endif
 +	RH_KABI_FILL_HOLE(unsigned int	fib_seq)	/* protected by rtnl_mutex */
  
  #ifdef CONFIG_IP_MROUTE
  #ifndef CONFIG_IP_MROUTE_MULTIPLE_TABLES
diff --cc include/net/tcp.h
index 516e6d399627,0646521400bf..000000000000
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@@ -237,8 -240,6 +237,11 @@@ extern int sysctl_tcp_timestamps
  extern int sysctl_tcp_window_scaling;
  extern int sysctl_tcp_sack;
  extern int sysctl_tcp_fin_timeout;
++<<<<<<< HEAD
 +extern int sysctl_tcp_keepalive_time;
 +extern int sysctl_tcp_keepalive_probes;
++=======
++>>>>>>> 9bd6861bd432 (ipv4: Namespecify tcp_keepalive_probes sysctl knob)
  extern int sysctl_tcp_keepalive_intvl;
  extern int sysctl_tcp_syn_retries;
  extern int sysctl_tcp_synack_retries;
diff --cc net/ipv4/sysctl_net_ipv4.c
index d18eb9254a01,e99fbb77dba7..000000000000
--- a/net/ipv4/sysctl_net_ipv4.c
+++ b/net/ipv4/sysctl_net_ipv4.c
@@@ -381,20 -337,6 +381,23 @@@ static struct ctl_table ipv4_table[] = 
  		.proc_handler	= proc_dointvec
  	},
  	{
++<<<<<<< HEAD
 +		.procname	= "tcp_keepalive_time",
 +		.data		= &sysctl_tcp_keepalive_time,
 +		.maxlen		= sizeof(int),
 +		.mode		= 0644,
 +		.proc_handler	= proc_dointvec_jiffies,
 +	},
 +	{
 +		.procname	= "tcp_keepalive_probes",
 +		.data		= &sysctl_tcp_keepalive_probes,
 +		.maxlen		= sizeof(int),
 +		.mode		= 0644,
 +		.proc_handler	= proc_dointvec
 +	},
 +	{
++=======
++>>>>>>> 9bd6861bd432 (ipv4: Namespecify tcp_keepalive_probes sysctl knob)
  		.procname	= "tcp_keepalive_intvl",
  		.data		= &sysctl_tcp_keepalive_intvl,
  		.maxlen		= sizeof(int),
@@@ -919,6 -887,80 +922,83 @@@ static struct ctl_table ipv4_net_table[
  		.mode		= 0644,
  		.proc_handler	= proc_dointvec
  	},
++<<<<<<< HEAD
++=======
+ 	{
+ 		.procname	= "fwmark_reflect",
+ 		.data		= &init_net.ipv4.sysctl_fwmark_reflect,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec,
+ 	},
+ 	{
+ 		.procname	= "tcp_fwmark_accept",
+ 		.data		= &init_net.ipv4.sysctl_tcp_fwmark_accept,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec,
+ 	},
+ #ifdef CONFIG_NET_L3_MASTER_DEV
+ 	{
+ 		.procname	= "tcp_l3mdev_accept",
+ 		.data		= &init_net.ipv4.sysctl_tcp_l3mdev_accept,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec_minmax,
+ 		.extra1		= &zero,
+ 		.extra2		= &one,
+ 	},
+ #endif
+ 	{
+ 		.procname	= "tcp_mtu_probing",
+ 		.data		= &init_net.ipv4.sysctl_tcp_mtu_probing,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec,
+ 	},
+ 	{
+ 		.procname	= "tcp_base_mss",
+ 		.data		= &init_net.ipv4.sysctl_tcp_base_mss,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec,
+ 	},
+ 	{
+ 		.procname	= "tcp_probe_threshold",
+ 		.data		= &init_net.ipv4.sysctl_tcp_probe_threshold,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec,
+ 	},
+ 	{
+ 		.procname	= "tcp_probe_interval",
+ 		.data		= &init_net.ipv4.sysctl_tcp_probe_interval,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec,
+ 	},
+ 	{
+ 		.procname	= "igmp_link_local_mcast_reports",
+ 		.data		= &sysctl_igmp_llm_reports,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec
+ 	},
+ 	{
+ 		.procname	= "tcp_keepalive_time",
+ 		.data		= &init_net.ipv4.sysctl_tcp_keepalive_time,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec_jiffies,
+ 	},
+ 	{
+ 		.procname	= "tcp_keepalive_probes",
+ 		.data		= &init_net.ipv4.sysctl_tcp_keepalive_probes,
+ 		.maxlen		= sizeof(int),
+ 		.mode		= 0644,
+ 		.proc_handler	= proc_dointvec
+ 	},
++>>>>>>> 9bd6861bd432 (ipv4: Namespecify tcp_keepalive_probes sysctl knob)
  	{ }
  };
  
diff --cc net/ipv4/tcp_ipv4.c
index 47a597740e73,ed98de85871e..000000000000
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@@ -2496,11 -2375,20 +2496,23 @@@ static int __net_init tcp_sk_init(struc
  					   IPPROTO_TCP, net);
  		if (res)
  			goto fail;
 -		*per_cpu_ptr(net->ipv4.tcp_sk, cpu) = sk;
 +		*per_cpu_ptr(net->ipv4_tcp_sk, cpu) = sk;
  	}
 -
  	net->ipv4.sysctl_tcp_ecn = 2;
++<<<<<<< HEAD
++=======
+ 	net->ipv4.sysctl_tcp_ecn_fallback = 1;
+ 
+ 	net->ipv4.sysctl_tcp_base_mss = TCP_BASE_MSS;
+ 	net->ipv4.sysctl_tcp_probe_threshold = TCP_PROBE_THRESHOLD;
+ 	net->ipv4.sysctl_tcp_probe_interval = TCP_PROBE_INTERVAL;
+ 
+ 	net->ipv4.sysctl_tcp_keepalive_time = TCP_KEEPALIVE_TIME;
+ 	net->ipv4.sysctl_tcp_keepalive_probes = TCP_KEEPALIVE_PROBES;
+ 
++>>>>>>> 9bd6861bd432 (ipv4: Namespecify tcp_keepalive_probes sysctl knob)
  	return 0;
 +
  fail:
  	tcp_sk_exit(net);
  
diff --cc net/ipv4/tcp_timer.c
index eecdc4f1a8d1,0ccb120d591a..000000000000
--- a/net/ipv4/tcp_timer.c
+++ b/net/ipv4/tcp_timer.c
@@@ -24,8 -24,6 +24,11 @@@
  
  int sysctl_tcp_syn_retries __read_mostly = TCP_SYN_RETRIES;
  int sysctl_tcp_synack_retries __read_mostly = TCP_SYNACK_RETRIES;
++<<<<<<< HEAD
 +int sysctl_tcp_keepalive_time __read_mostly = TCP_KEEPALIVE_TIME;
 +int sysctl_tcp_keepalive_probes __read_mostly = TCP_KEEPALIVE_PROBES;
++=======
++>>>>>>> 9bd6861bd432 (ipv4: Namespecify tcp_keepalive_probes sysctl knob)
  int sysctl_tcp_keepalive_intvl __read_mostly = TCP_KEEPALIVE_INTVL;
  int sysctl_tcp_retries1 __read_mostly = TCP_RETR1;
  int sysctl_tcp_retries2 __read_mostly = TCP_RETR2;
* Unmerged path include/net/netns/ipv4.h
* Unmerged path include/net/tcp.h
* Unmerged path net/ipv4/sysctl_net_ipv4.c
* Unmerged path net/ipv4/tcp_ipv4.c
* Unmerged path net/ipv4/tcp_timer.c
