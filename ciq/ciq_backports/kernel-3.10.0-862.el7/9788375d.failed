x86/efi: Enable runtime call flag checking

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] efi: Enable runtime call flag checking (Bhupesh Sharma) [1102454]
Rebuild_FUZZ: 95.00%
commit-author Mark Rutland <mark.rutland@arm.com>
commit 9788375dc4cdc9c00645028384fb40402eab774f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9788375d.failed

Define ARCH_EFI_IRQ_FLAGS_MASK for x86, which will enable the generic
runtime wrapper code to detect when firmware erroneously modifies flags
over a runtime services function call.

For x86 (both 32-bit and 64-bit), we only need check the interrupt flag.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Ben Hutchings <ben@decadent.org.uk>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Darren Hart <dvhart@infradead.org>
	Cc: David Herrmann <dh.herrmann@gmail.com>
	Cc: David Howells <dhowells@redhat.com>
	Cc: Greg KH <gregkh@linuxfoundation.org>
	Cc: Hannes Reinecke <hare@suse.de>
	Cc: Harald Hoyer harald@redhat.com
	Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
	Cc: Kweh Hock Leong <hock.leong.kweh@intel.com>
	Cc: Leif Lindholm <leif.lindholm@linaro.org>
	Cc: Peter Jones <pjones@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Raphael Hertzog <hertzog@debian.org>
	Cc: Russell King <linux@arm.linux.org.uk>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: linux-efi@vger.kernel.org
Link: http://lkml.kernel.org/r/1461614832-17633-40-git-send-email-matt@codeblueprint.co.uk
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 9788375dc4cdc9c00645028384fb40402eab774f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/efi.h
diff --cc arch/x86/include/asm/efi.h
index d1a2aa8edaf2,78d1e7467eae..000000000000
--- a/arch/x86/include/asm/efi.h
+++ b/arch/x86/include/asm/efi.h
@@@ -1,6 -1,11 +1,14 @@@
  #ifndef _ASM_X86_EFI_H
  #define _ASM_X86_EFI_H
  
++<<<<<<< HEAD
++=======
+ #include <asm/fpu/api.h>
+ #include <asm/pgtable.h>
+ #include <asm/processor-flags.h>
+ #include <asm/tlb.h>
+ 
++>>>>>>> 9788375dc4cd (x86/efi: Enable runtime call flag checking)
  /*
   * We map the EFI regions needed for runtime services non-contiguously,
   * with preserved alignment on virtual addresses starting from -4G down
@@@ -22,8 -27,11 +30,15 @@@
  #define EFI32_LOADER_SIGNATURE	"EL32"
  #define EFI64_LOADER_SIGNATURE	"EL64"
  
++<<<<<<< HEAD
 +#ifdef CONFIG_X86_32
++=======
+ #define MAX_CMDLINE_ADDRESS	UINT_MAX
  
+ #define ARCH_EFI_IRQ_FLAGS_MASK	X86_EFLAGS_IF
++>>>>>>> 9788375dc4cd (x86/efi: Enable runtime call flag checking)
+ 
+ #ifdef CONFIG_X86_32
  
  extern unsigned long asmlinkage efi_call_phys(void *, ...);
  
* Unmerged path arch/x86/include/asm/efi.h
