iommu/amd: Implement apply_dm_region call-back

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Implement apply_dm_region call-back (Jerry Snitselaar) [1411581]
Rebuild_FUZZ: 93.02%
commit-author Joerg Roedel <jroedel@suse.de>
commit 8d54d6c8b8f3e40dadd15b1dad6f190c2ccf7473
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8d54d6c8.failed

It is used to reserve the dm-regions in the iova-tree.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 8d54d6c8b8f3e40dadd15b1dad6f190c2ccf7473)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index 052bec78c73d,4c9063ae442a..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -3203,7 -3385,21 +3203,25 @@@ static void amd_iommu_put_dm_regions(st
  		kfree(entry);
  }
  
++<<<<<<< HEAD
 +static struct iommu_ops amd_iommu_ops = {
++=======
+ static void amd_iommu_apply_dm_region(struct device *dev,
+ 				      struct iommu_domain *domain,
+ 				      struct iommu_dm_region *region)
+ {
+ 	struct protection_domain *pdomain = to_pdomain(domain);
+ 	struct dma_ops_domain *dma_dom = pdomain->priv;
+ 	unsigned long start, end;
+ 
+ 	start = IOVA_PFN(region->start);
+ 	end   = IOVA_PFN(region->start + region->length);
+ 
+ 	WARN_ON_ONCE(reserve_iova(&dma_dom->iovad, start, end) == NULL);
+ }
+ 
+ static const struct iommu_ops amd_iommu_ops = {
++>>>>>>> 8d54d6c8b8f3 (iommu/amd: Implement apply_dm_region call-back)
  	.capable = amd_iommu_capable,
  	.domain_alloc = amd_iommu_domain_alloc,
  	.domain_free  = amd_iommu_domain_free,
* Unmerged path drivers/iommu/amd_iommu.c
