nfp: don't use netdev_warn() before netdev is registered

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit 87232d9615194334df75547db9a433293132d779
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/87232d96.failed

Fix warning which was using netdev_warn() instead of dev_warn()
to early.

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 87232d9615194334df75547db9a433293132d779)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/nfp_net_common.c
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_common.c
index e0a7eb1db7a9,19f9d95faea4..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_common.c
@@@ -330,13 -334,15 +330,21 @@@ nfp_net_irqs_assign(struct nfp_net *nn
  
  	memcpy(nn->irq_entries, irq_entries, sizeof(*irq_entries) * n);
  
++<<<<<<< HEAD
 +	if (nn->num_rx_rings > nn->num_r_vecs ||
 +	    nn->num_tx_rings > nn->num_r_vecs)
 +		nn_warn(nn, "More rings (%d,%d) than vectors (%d).\n",
 +			nn->num_rx_rings, nn->num_tx_rings, nn->num_r_vecs);
++=======
+ 	if (dp->num_rx_rings > dp->num_r_vecs ||
+ 	    dp->num_tx_rings > dp->num_r_vecs)
+ 		dev_warn(nn->dp.dev, "More rings (%d,%d) than vectors (%d).\n",
+ 			 dp->num_rx_rings, dp->num_tx_rings,
+ 			 dp->num_r_vecs);
++>>>>>>> 87232d961519 (nfp: don't use netdev_warn() before netdev is registered)
  
 -	dp->num_rx_rings = min(dp->num_r_vecs, dp->num_rx_rings);
 -	dp->num_tx_rings = min(dp->num_r_vecs, dp->num_tx_rings);
 -	dp->num_stack_tx_rings = dp->num_tx_rings;
 +	nn->num_rx_rings = min(nn->num_r_vecs, nn->num_rx_rings);
 +	nn->num_tx_rings = min(nn->num_r_vecs, nn->num_tx_rings);
  }
  
  /**
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_common.c
