x86/CPU/AMD: Fix Bulldozer topology

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] cpu/amd: Fix Bulldozer topology (Suravee Suthikulpanit) [1477397]
Rebuild_FUZZ: 93.94%
commit-author Borislav Petkov <bp@suse.de>
commit a33d331761bc5dd330499ca5ceceb67f0640a8e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a33d3317.failed

The following commit:

  8196dab4fc15 ("x86/cpu: Get rid of compute_unit_id")

... broke the initial strategy for Bulldozer-based cores' topology,
where we consider each thread of a compute unit a standalone core
and not a HT or SMT thread.

Revert to the firmware-supplied core_id numbering and do not make
them thread siblings as we don't consider them for such even if they
technically are, more or less.

Reported-and-tested-by: Brice Goglin <Brice.Goglin@inria.fr>
	Tested-by: Yazen Ghannam <yazen.ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: <stable@vger.kernel.org> # v4.6+
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Fixes: 8196dab4fc15 ("x86/cpu: Get rid of compute_unit_id")
Link: http://lkml.kernel.org/r/20170105092638.5247-1-bp@alien8.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit a33d331761bc5dd330499ca5ceceb67f0640a8e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/amd.c
diff --cc arch/x86/kernel/cpu/amd.c
index d5b90c4a6937,1d3167269a67..000000000000
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@@ -305,17 -308,9 +305,23 @@@ static void amd_get_topology(struct cpu
  	int cpu = smp_processor_id();
  
  	/* get information required for multi-node processors */
++<<<<<<< HEAD
 +	if (cpu_has_topoext) {
 +		u32 eax, ebx, ecx, edx;
 +
 +		cpuid(0x8000001e, &eax, &ebx, &ecx, &edx);
 +		nodes_per_socket = ((ecx >> 8) & 7) + 1;
 +		node_id = ecx & 7;
 +
 +		/* get compute unit information */
 +		smp_num_siblings = ((ebx >> 8) & 3) + 1;
 +		c->x86_max_cores /= smp_num_siblings;
 +		c->cpu_core_id = ebx & 0xff;
++=======
+ 	if (boot_cpu_has(X86_FEATURE_TOPOEXT)) {
+ 
+ 		node_id = cpuid_ecx(0x8000001e) & 7;
++>>>>>>> a33d331761bc (x86/CPU/AMD: Fix Bulldozer topology)
  
  		/*
  		 * We may have multiple LLCs if L3 caches exist, so check if we
* Unmerged path arch/x86/kernel/cpu/amd.c
