vmbus: expose debug info for drivers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Stephen Hemminger <stephen@networkplumber.org>
commit 4827ee1dca5691c9fc568883170a568db94f9b38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4827ee1d.failed

Allow driver to get debug information about state of the ring.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 4827ee1dca5691c9fc568883170a568db94f9b38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/hyperv_vmbus.h
diff --cc drivers/hv/hyperv_vmbus.h
index c9d5509418bc,6113e915c50e..000000000000
--- a/drivers/hv/hyperv_vmbus.h
+++ b/drivers/hv/hyperv_vmbus.h
@@@ -422,22 -248,6 +422,25 @@@ struct hv_context 
  
  extern struct hv_context hv_context;
  
++<<<<<<< HEAD
 +struct ms_hyperv_tsc_page {
 +	volatile u32 tsc_sequence;
 +	u32 reserved1;
 +	volatile u64 tsc_scale;
 +	volatile s64 tsc_offset;
 +	u64 reserved2[509];
 +};
 +
 +struct hv_ring_buffer_debug_info {
 +	u32 current_interrupt_mask;
 +	u32 current_read_index;
 +	u32 current_write_index;
 +	u32 bytes_avail_toread;
 +	u32 bytes_avail_towrite;
 +};
 +
++=======
++>>>>>>> 4827ee1dca56 (vmbus: expose debug info for drivers)
  /* Hv Interface */
  
  extern int hv_init(void);
@@@ -488,13 -281,6 +491,16 @@@ int hv_ringbuffer_read(struct vmbus_cha
  		       void *buffer, u32 buflen, u32 *buffer_actual_len,
  		       u64 *requestid, bool raw);
  
++<<<<<<< HEAD
 +void hv_ringbuffer_get_debuginfo(struct hv_ring_buffer_info *ring_info,
 +			    struct hv_ring_buffer_debug_info *debug_info);
 +
 +void hv_begin_read(struct hv_ring_buffer_info *rbi);
 +
 +u32 hv_end_read(struct hv_ring_buffer_info *rbi);
 +
++=======
++>>>>>>> 4827ee1dca56 (vmbus: expose debug info for drivers)
  /*
   * Maximum channels is determined by the size of the interrupt page
   * which is PAGE_SIZE. 1/2 of PAGE_SIZE is for send endpoint interrupt
* Unmerged path drivers/hv/hyperv_vmbus.h
diff --git a/drivers/hv/ring_buffer.c b/drivers/hv/ring_buffer.c
index 71b35206ab89..b6d7dd58d431 100644
--- a/drivers/hv/ring_buffer.c
+++ b/drivers/hv/ring_buffer.c
@@ -228,6 +228,7 @@ void hv_ringbuffer_get_debuginfo(struct hv_ring_buffer_info *ring_info,
 			ring_info->ring_buffer->interrupt_mask;
 	}
 }
+EXPORT_SYMBOL_GPL(hv_ringbuffer_get_debuginfo);
 
 /* Initialize the ring buffer. */
 int hv_ringbuffer_init(struct hv_ring_buffer_info *ring_info,
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index 5c0043b7dddc..d0fb8eeeb5b2 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -491,6 +491,12 @@ struct vmbus_channel_rescind_offer {
 	u32 child_relid;
 } __packed;
 
+static inline u32
+hv_ringbuffer_pending_size(const struct hv_ring_buffer_info *rbi)
+{
+	return rbi->ring_buffer->pending_send_sz;
+}
+
 /*
  * Request Offer -- no parameters, SynIC message contains the partition ID
  * Set Snoop -- no parameters, SynIC message contains the partition ID
@@ -1176,6 +1182,17 @@ static inline void *hv_get_drvdata(struct hv_device *dev)
 	return dev_get_drvdata(&dev->device);
 }
 
+struct hv_ring_buffer_debug_info {
+	u32 current_interrupt_mask;
+	u32 current_read_index;
+	u32 current_write_index;
+	u32 bytes_avail_toread;
+	u32 bytes_avail_towrite;
+};
+
+void hv_ringbuffer_get_debuginfo(const struct hv_ring_buffer_info *ring_info,
+			    struct hv_ring_buffer_debug_info *debug_info);
+
 /* Vmbus interface */
 #define vmbus_driver_register(driver)	\
 	__vmbus_driver_register(driver, THIS_MODULE, KBUILD_MODNAME)
