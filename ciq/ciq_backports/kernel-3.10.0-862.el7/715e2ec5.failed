hv_netvsc: Clean up an unused parameter in rndis_filter_set_rss_param()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit 715e2ec532f6bffc8ee1cb9282c9e6cbf8809591
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/715e2ec5.failed

This patch removes the parameter, num_queue in
rndis_filter_set_rss_param(), which is no longer in use.

	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 715e2ec532f6bffc8ee1cb9282c9e6cbf8809591)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/rndis_filter.c
diff --cc drivers/net/hyperv/rndis_filter.c
index b6bc44dd1f92,496fefa7c7c4..000000000000
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@@ -1108,17 -1252,13 +1108,22 @@@ int rndis_filter_device_add(struct hv_d
  	net_device->num_chn = 1 +
  		init_packet->msg.v5_msg.subchn_comp.num_subchannels;
  
 -	/* wait for all sub channels to open */
 -	wait_event(net_device->subchan_open,
 -		   atomic_read(&net_device->open_chn) == net_device->num_chn);
 +	ret = rndis_filter_set_rss_param(rndis_device, netvsc_hash_key,
 +					 net_device->num_chn);
  
 +	/*
 +	 * Set the number of sub-channels to be received.
 +	 */
 +	spin_lock_irqsave(&net_device->sc_lock, flags);
 +	sc_delta = num_rss_qs - (net_device->num_chn - 1);
 +	net_device->num_sc_offered -= sc_delta;
 +	spin_unlock_irqrestore(&net_device->sc_lock, flags);
 +
++<<<<<<< HEAD
++=======
+ 	/* ignore failues from setting rss parameters, still have channels */
+ 	rndis_filter_set_rss_param(rndis_device, netvsc_hash_key);
++>>>>>>> 715e2ec532f6 (hv_netvsc: Clean up an unused parameter in rndis_filter_set_rss_param())
  out:
  	if (ret) {
  		net_device->max_chn = 1;
diff --git a/drivers/net/hyperv/hyperv_net.h b/drivers/net/hyperv/hyperv_net.h
index a32d7f1b2505..e03f0fc660a0 100644
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@ -201,7 +201,7 @@ int rndis_filter_device_add(struct hv_device *dev,
 			void *additional_info);
 void rndis_filter_device_remove(struct hv_device *dev);
 int rndis_filter_set_rss_param(struct rndis_device *rdev,
-			       const u8 *key, int num_queue);
+			       const u8 *key);
 int rndis_filter_receive(struct net_device *ndev,
 			 struct netvsc_device *net_dev,
 			 struct hv_device *dev,
diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index 5103dca8a92e..79dc05911ea2 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -1166,7 +1166,7 @@ static int netvsc_set_rxfh(struct net_device *dev, const u32 *indir,
 		key = rndis_dev->rss_key;
 	}
 
-	return rndis_filter_set_rss_param(rndis_dev, key, ndev->num_chn);
+	return rndis_filter_set_rss_param(rndis_dev, key);
 }
 
 static const struct ethtool_ops ethtool_ops = {
* Unmerged path drivers/net/hyperv/rndis_filter.c
