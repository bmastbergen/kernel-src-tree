iwlwifi: mvm: wake the correct mac80211 queue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Avraham Stern <avraham.stern@intel.com>
commit 8458e48ac7ad86a5ab7f3d1a8cacd9205a9a97ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8458e48a.failed

iwl_mvm_start_mac_queues() takes a bitmap of the queues to wake.
When deferred tx is purged, set the bit of the hw_queue so
the correct queue will be waken up.

Fixes: 7e39a00d5931 ("iwlwifi: mvm: start mac queues when deferred tx frames are purged")
	Signed-off-by: Avraham Stern <avraham.stern@intel.com>
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit 8458e48ac7ad86a5ab7f3d1a8cacd9205a9a97ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
diff --cc drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
index 6dce8b65ecd7,3a6ce4222ff5..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
@@@ -2523,8 -2554,18 +2523,21 @@@ static void iwl_mvm_purge_deferred_tx_f
  	spin_lock_bh(&mvm_sta->lock);
  	for (i = 0; i <= IWL_MAX_TID_COUNT; i++) {
  		tid_data = &mvm_sta->tid_data[i];
++<<<<<<< HEAD
 +		while ((skb = __skb_dequeue(&tid_data->deferred_tx_frames)))
++=======
+ 
+ 		while ((skb = __skb_dequeue(&tid_data->deferred_tx_frames))) {
+ 			struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
+ 
+ 			/*
+ 			 * The first deferred frame should've stopped the MAC
+ 			 * queues, so we should never get a second deferred
+ 			 * frame for the RA/TID.
+ 			 */
+ 			iwl_mvm_start_mac_queues(mvm, BIT(info->hw_queue));
++>>>>>>> 8458e48ac7ad (iwlwifi: mvm: wake the correct mac80211 queue)
  			ieee80211_free_txskb(mvm->hw, skb);
 -		}
  	}
  	spin_unlock_bh(&mvm_sta->lock);
  }
* Unmerged path drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
