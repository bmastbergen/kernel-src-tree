device-dax: fix sysfs duplicate warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit bbb3be170ac2891526ad07b18af7db226879a8e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bbb3be17.failed

Fix warnings of the form...

     WARNING: CPU: 10 PID: 4983 at fs/sysfs/dir.c:31 sysfs_warn_dup+0x62/0x80
     sysfs: cannot create duplicate filename '/class/dax/dax12.0'
     Call Trace:
      dump_stack+0x63/0x86
      __warn+0xcb/0xf0
      warn_slowpath_fmt+0x5a/0x80
      ? kernfs_path_from_node+0x4f/0x60
      sysfs_warn_dup+0x62/0x80
      sysfs_do_create_link_sd.isra.2+0x97/0xb0
      sysfs_create_link+0x25/0x40
      device_add+0x266/0x630
      devm_create_dax_dev+0x2cf/0x340 [dax]
      dax_pmem_probe+0x1f5/0x26e [dax_pmem]
      nvdimm_bus_probe+0x71/0x120

...by reusing the namespace id for the device-dax instance name.

Now that we have decided that there will never by more than one
device-dax instance per libnvdimm-namespace parent device [1], we can
directly reuse the namepace ids. There are some possible follow-on
cleanups, but those are saved for a later patch to simplify the -stable
backport.

[1]: https://lists.01.org/pipermail/linux-nvdimm/2016-December/008266.html

Fixes: 98a29c39dc68 ("libnvdimm, namespace: allow creation of multiple pmem...")
	Cc: Jeff Moyer <jmoyer@redhat.com>
	Cc: <stable@vger.kernel.org>
	Reported-by: Dariusz Dokupil <dariusz.dokupil@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit bbb3be170ac2891526ad07b18af7db226879a8e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dax/device-dax.h
#	drivers/dax/device.c
#	drivers/dax/pmem.c
diff --cc drivers/dax/pmem.c
index 033f49b31fdc,8d8c852ba8f2..000000000000
--- a/drivers/dax/pmem.c
+++ b/drivers/dax/pmem.c
@@@ -58,13 -58,12 +58,15 @@@ static void dax_pmem_percpu_kill(void *
  
  static int dax_pmem_probe(struct device *dev)
  {
- 	int rc;
  	void *addr;
  	struct resource res;
++<<<<<<< HEAD
 +	struct dax_dev *dax_dev;
++=======
+ 	int rc, id, region_id;
++>>>>>>> bbb3be170ac2 (device-dax: fix sysfs duplicate warnings)
  	struct nd_pfn_sb *pfn_sb;
 -	struct dev_dax *dev_dax;
  	struct dax_pmem *dax_pmem;
- 	struct nd_region *nd_region;
  	struct nd_namespace_io *nsio;
  	struct dax_region *dax_region;
  	struct nd_namespace_common *ndns;
@@@ -130,12 -132,12 +135,16 @@@
  		return -ENOMEM;
  
  	/* TODO: support for subdividing a dax region... */
++<<<<<<< HEAD
 +	dax_dev = devm_create_dax_dev(dax_region, &res, 1);
++=======
+ 	dev_dax = devm_create_dev_dax(dax_region, id, &res, 1);
++>>>>>>> bbb3be170ac2 (device-dax: fix sysfs duplicate warnings)
  
 -	/* child dev_dax instances now own the lifetime of the dax_region */
 +	/* child dax_dev instances now own the lifetime of the dax_region */
  	dax_region_put(dax_region);
  
 -	return PTR_ERR_OR_ZERO(dev_dax);
 +	return PTR_ERR_OR_ZERO(dax_dev);
  }
  
  static struct nd_device_driver dax_pmem_driver = {
* Unmerged path drivers/dax/device-dax.h
* Unmerged path drivers/dax/device.c
* Unmerged path drivers/dax/device-dax.h
* Unmerged path drivers/dax/device.c
* Unmerged path drivers/dax/pmem.c
