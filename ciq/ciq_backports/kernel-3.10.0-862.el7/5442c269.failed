x86/cpufeature, kvm/svm: Rename (shorten) the new "virtualized VMSAVE/VMLOAD" CPUID flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] cpufeature,kvm/svm: Rename (shorten) the new virtualized VMSAVE/VMLOAD CPUID flag (Suravee Suthikulpanit) [1135003]
Rebuild_FUZZ: 95.86%
commit-author Borislav Petkov <bp@suse.de>
commit 5442c26995527245c94c4a49e535eae8a60a5299
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5442c269.failed

"virtual_vmload_vmsave" is what is going to land in /proc/cpuinfo now
as per v4.13-rc4, for a single feature bit which is clearly too long.

So rename it to what it is called in the processor manual.
"v_vmsave_vmload" is a bit shorter, after all.

We could go more aggressively here but having it the same as in the
processor manual is advantageous.

	Signed-off-by: Borislav Petkov <bp@suse.de>
	Acked-by: Radim Krčmář <rkrcmar@redhat.com>
	Cc: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
	Cc: Jörg Rödel <joro@8bytes.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: kvm-ML <kvm@vger.kernel.org>
Link: http://lkml.kernel.org/r/20170801185552.GA3743@nazgul.tnic
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5442c26995527245c94c4a49e535eae8a60a5299)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/cpufeatures.h
* Unmerged path arch/x86/include/asm/cpufeatures.h
* Unmerged path arch/x86/include/asm/cpufeatures.h
diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 2903c7585682..42b9d0de45a1 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -1030,7 +1030,7 @@ static __init int svm_hardware_setup(void)
 
 	if (vls) {
 		if (!npt_enabled ||
-		    !boot_cpu_has(X86_FEATURE_VIRTUAL_VMLOAD_VMSAVE) ||
+		    !boot_cpu_has(X86_FEATURE_V_VMSAVE_VMLOAD) ||
 		    !IS_ENABLED(CONFIG_X86_64)) {
 			vls = false;
 		} else {
