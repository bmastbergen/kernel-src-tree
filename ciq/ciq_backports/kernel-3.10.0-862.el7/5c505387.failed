s390/disassembler: add missing end marker for e7 table

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [s390] disassembler: add missing end marker for e7 table (Hendrik Brueckner) [1520837]
Rebuild_FUZZ: 95.15%
commit-author Heiko Carstens <heiko.carstens@de.ibm.com>
commit 5c50538752af7968f53924b22dede8ed4ce4cb3b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5c505387.failed

The e7 opcode table does not have an end marker. Hence when trying to
find an unknown e7 instruction the code will access memory behind the
table until it finds something that matches the opcode, or the kernel
crashes, whatever comes first.

This affects not only the in-kernel disassembler but also uprobes and
kprobes which refuse to set a probe on unknown instructions, and
therefore search the opcode tables to figure out if instructions are
known or not.

	Cc: <stable@vger.kernel.org> # v3.18+
Fixes: 3585cb0280654 ("s390/disassembler: add vector instructions")
	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 5c50538752af7968f53924b22dede8ed4ce4cb3b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/dis.c
diff --cc arch/s390/kernel/dis.c
index 603c6cbad928,d9970c15f79d..000000000000
--- a/arch/s390/kernel/dis.c
+++ b/arch/s390/kernel/dis.c
@@@ -1589,7 -1548,7 +1589,11 @@@ static struct s390_insn opcode_e7[] = 
  	{ "vfsq", 0xce, INSTR_VRR_VV000MM },
  	{ "vfs", 0xe2, INSTR_VRR_VVV00MM },
  	{ "vftci", 0x4a, INSTR_VRI_VVIMM },
++<<<<<<< HEAD
 +#endif
++=======
+ 	{ "", 0, INSTR_INVALID }
++>>>>>>> 5c50538752af (s390/disassembler: add missing end marker for e7 table)
  };
  
  static struct s390_insn opcode_eb[] = {
* Unmerged path arch/s390/kernel/dis.c
