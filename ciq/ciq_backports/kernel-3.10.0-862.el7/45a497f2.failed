net/sched: act_vlan: Introduce TCA_VLAN_ACT_MODIFY vlan action

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: act_vlan: Introduce TCA_VLAN_ACT_MODIFY vlan action (Ivan Vecera) [1445420]
Rebuild_FUZZ: 96.67%
commit-author Shmulik Ladkani <shmulik.ladkani@gmail.com>
commit 45a497f2d149a4a8061c61518a79d59f1f3034b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/45a497f2.failed

TCA_VLAN_ACT_MODIFY allows one to change an existing tag.

It accepts same attributes as TCA_VLAN_ACT_PUSH (protocol, id,
priority).
If packet is vlan tagged, then the tag gets overwritten according to
user specified attributes.

For example, this allows user to replace a tag's vid while preserving
its priority bits (as opposed to "action vlan pop pipe action vlan push").

	Signed-off-by: Shmulik Ladkani <shmulik.ladkani@gmail.com>
	Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 45a497f2d149a4a8061c61518a79d59f1f3034b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_vlan.c
diff --cc net/sched/act_vlan.c
index 2ca3e6093ca9,a95c00b119da..000000000000
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@@ -24,9 -24,13 +24,10 @@@
  static int tcf_vlan(struct sk_buff *skb, const struct tc_action *a,
  		    struct tcf_result *res)
  {
 -	struct tcf_vlan *v = to_vlan(a);
 +	struct tcf_vlan *v = a->priv;
  	int action;
  	int err;
+ 	u16 tci;
  
  	spin_lock(&v->tcf_lock);
  	tcf_lastuse_update(&v->tcf_tm);
@@@ -94,11 -127,18 +119,18 @@@ static int tcf_vlan_init(struct net *ne
  	case TCA_VLAN_ACT_POP:
  		break;
  	case TCA_VLAN_ACT_PUSH:
++<<<<<<< HEAD
 +		if (!tb[TCA_VLAN_PUSH_VLAN_ID])
++=======
+ 	case TCA_VLAN_ACT_MODIFY:
+ 		if (!tb[TCA_VLAN_PUSH_VLAN_ID]) {
+ 			if (exists)
+ 				tcf_hash_release(*a, bind);
++>>>>>>> 45a497f2d149 (net/sched: act_vlan: Introduce TCA_VLAN_ACT_MODIFY vlan action)
  			return -EINVAL;
 -		}
  		push_vid = nla_get_u16(tb[TCA_VLAN_PUSH_VLAN_ID]);
 -		if (push_vid >= VLAN_VID_MASK) {
 -			if (exists)
 -				tcf_hash_release(*a, bind);
 +		if (push_vid >= VLAN_VID_MASK)
  			return -ERANGE;
 -		}
  
  		if (tb[TCA_VLAN_PUSH_VLAN_PROTOCOL]) {
  			push_proto = nla_get_be16(tb[TCA_VLAN_PUSH_VLAN_PROTOCOL]);
diff --git a/include/uapi/linux/tc_act/tc_vlan.h b/include/uapi/linux/tc_act/tc_vlan.h
index be72b6e3843b..bddb272b843f 100644
--- a/include/uapi/linux/tc_act/tc_vlan.h
+++ b/include/uapi/linux/tc_act/tc_vlan.h
@@ -16,6 +16,7 @@
 
 #define TCA_VLAN_ACT_POP	1
 #define TCA_VLAN_ACT_PUSH	2
+#define TCA_VLAN_ACT_MODIFY	3
 
 struct tc_vlan {
 	tc_gen;
* Unmerged path net/sched/act_vlan.c
