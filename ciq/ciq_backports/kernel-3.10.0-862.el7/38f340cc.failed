ceph: fix __choose_mds() for LSSNAP request

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 38f340ccdf9ed5f1350505b46c5689d015967057
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/38f340cc.failed

previous commit 5d37ca14 "ceph: send LSSNAP request to auth mds
of directory inode" is buggy. It makes __choose_mds() choose mds
base on hash of '.snap' dentry.

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 38f340ccdf9ed5f1350505b46c5689d015967057)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/mds_client.c
diff --cc fs/ceph/mds_client.c
index 0c289d36616c,f23c820daaed..000000000000
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@@ -715,15 -730,30 +715,28 @@@ static int __choose_mds(struct ceph_mds
  
  	inode = NULL;
  	if (req->r_inode) {
++<<<<<<< HEAD
 +		inode = req->r_inode;
++=======
+ 		if (ceph_snap(req->r_inode) != CEPH_SNAPDIR) {
+ 			inode = req->r_inode;
+ 			ihold(inode);
+ 		} else {
+ 			/* req->r_dentry is non-null for LSSNAP request */
+ 			rcu_read_lock();
+ 			inode = get_nonsnap_parent(req->r_dentry);
+ 			rcu_read_unlock();
+ 			dout("__choose_mds using snapdir's parent %p\n", inode);
+ 		}
++>>>>>>> 38f340ccdf9e (ceph: fix __choose_mds() for LSSNAP request)
  	} else if (req->r_dentry) {
  		/* ignore race with rename; old or new d_parent is okay */
 -		struct dentry *parent;
 -		struct inode *dir;
 -
 -		rcu_read_lock();
 -		parent = req->r_dentry->d_parent;
 -		dir = req->r_parent ? : d_inode_rcu(parent);
 -
 -		if (!dir || dir->i_sb != mdsc->fsc->sb) {
 -			/*  not this fs or parent went negative */
 -			inode = d_inode(req->r_dentry);
 -			if (inode)
 -				ihold(inode);
 +		struct dentry *parent = req->r_dentry->d_parent;
 +		struct inode *dir = parent->d_inode;
 +
 +		if (dir->i_sb != mdsc->fsc->sb) {
 +			/* not this fs! */
 +			inode = req->r_dentry->d_inode;
  		} else if (ceph_snap(dir) != CEPH_NOSNAP) {
  			/* direct snapped/virtual snapdir requests
  			 * based on parent dir inode */
* Unmerged path fs/ceph/mds_client.c
