cls_matchall: use tcf_exts_get_net() before call_rcu()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Cong Wang <xiyou.wangcong@gmail.com>
commit 57767e785321a427b8cdd282db2b8b33cd218ffa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/57767e78.failed

Hold netns refcnt before call_rcu() and release it after
the tcf_exts_destroy() is done.

	Cc: Lucas Bates <lucasb@mojatatu.com>
	Cc: Jamal Hadi Salim <jhs@mojatatu.com>
	Cc: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 57767e785321a427b8cdd282db2b8b33cd218ffa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_matchall.c
diff --cc net/sched/cls_matchall.c
index 53c9bdfa270d,3684153cd8a9..000000000000
--- a/net/sched/cls_matchall.c
+++ b/net/sched/cls_matchall.c
@@@ -110,18 -110,20 +116,25 @@@ static bool mall_destroy(struct tcf_pro
  	struct net_device *dev = tp->q->dev_queue->dev;
  
  	if (!head)
 -		return;
 +		return true;
  
 -	if (tc_should_offload(dev, head->flags))
 +	if (tc_should_offload(dev, tp, head->flags))
  		mall_destroy_hw_filter(tp, head, (unsigned long) head);
  
++<<<<<<< HEAD
 +	call_rcu(&head->rcu, mall_destroy_rcu);
 +	return true;
++=======
+ 	if (tcf_exts_get_net(&head->exts))
+ 		call_rcu(&head->rcu, mall_destroy_rcu);
+ 	else
+ 		__mall_destroy(head);
++>>>>>>> 57767e785321 (cls_matchall: use tcf_exts_get_net() before call_rcu())
  }
  
 -static void *mall_get(struct tcf_proto *tp, u32 handle)
 +static unsigned long mall_get(struct tcf_proto *tp, u32 handle)
  {
 -	return NULL;
 +	return 0UL;
  }
  
  static const struct nla_policy mall_policy[TCA_MATCHALL_MAX + 1] = {
* Unmerged path net/sched/cls_matchall.c
