treewide: Consolidate set_dma_ops() implementations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bart Van Assche <bart.vanassche@sandisk.com>
commit ca6e8e1031419549f67291ca31b43126f07cecdb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ca6e8e10.failed

Now that all set_dma_ops() implementations are identical (ignoring
BUG_ON() statements), remove the architecture specific definitions
and add a definition in <linux/dma-mapping.h>.

	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Chris Metcalf <cmetcalf@mellanox.com>
	Cc: David Woodhouse <dwmw2@infradead.org>
	Cc: linux-arch@vger.kernel.org
	Cc: linux-arm-kernel@lists.infradead.org
	Cc: linux-kernel@vger.kernel.org
	Cc: linuxppc-dev@lists.ozlabs.org
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Russell King <linux@armlinux.org.uk>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit ca6e8e1031419549f67291ca31b43126f07cecdb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm/include/asm/dma-mapping.h
#	arch/powerpc/include/asm/dma-mapping.h
#	arch/tile/include/asm/dma-mapping.h
diff --cc arch/arm/include/asm/dma-mapping.h
index 5b579b951503,c7432d647e53..000000000000
--- a/arch/arm/include/asm/dma-mapping.h
+++ b/arch/arm/include/asm/dma-mapping.h
@@@ -22,18 -23,16 +22,31 @@@ static inline struct dma_map_ops *get_d
  	return &arm_dma_ops;
  }
  
++<<<<<<< HEAD
 +static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)
 +{
 +	BUG_ON(!dev);
 +	dev->archdata.dma_ops = ops;
 +}
 +
 +#include <asm-generic/dma-mapping-common.h>
 +
 +static inline int dma_set_mask(struct device *dev, u64 mask)
 +{
 +	return get_dma_ops(dev)->set_dma_mask(dev, mask);
 +}
++=======
+ static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
+ {
+ 	if (xen_initial_domain())
+ 		return xen_dma_ops;
+ 	else
+ 		return __generic_dma_ops(dev);
+ }
+ 
+ #define HAVE_ARCH_DMA_SUPPORTED 1
+ extern int dma_supported(struct device *dev, u64 mask);
++>>>>>>> ca6e8e103141 (treewide: Consolidate set_dma_ops() implementations)
  
  #ifdef __arch_page_to_dma
  #error Please update to __arch_pfn_to_dma
diff --cc arch/powerpc/include/asm/dma-mapping.h
index c6f39b7c9f40,8275603ba4d5..000000000000
--- a/arch/powerpc/include/asm/dma-mapping.h
+++ b/arch/powerpc/include/asm/dma-mapping.h
@@@ -87,14 -88,9 +87,17 @@@ static inline struct dma_map_ops *get_d
  	if (unlikely(dev == NULL))
  		return NULL;
  
 -	return dev->dma_ops;
 +	return dev->archdata.dma_ops;
 +}
 +
++<<<<<<< HEAD
 +static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)
 +{
 +	dev->archdata.dma_ops = ops;
  }
  
++=======
++>>>>>>> ca6e8e103141 (treewide: Consolidate set_dma_ops() implementations)
  /*
   * get_dma_offset()
   *
diff --cc arch/tile/include/asm/dma-mapping.h
index f2ff191376b4,2562995a6ac9..000000000000
--- a/arch/tile/include/asm/dma-mapping.h
+++ b/arch/tile/include/asm/dma-mapping.h
@@@ -54,13 -59,6 +54,16 @@@ static inline phys_addr_t dma_to_phys(s
  
  static inline void dma_mark_clean(void *addr, size_t size) {}
  
++<<<<<<< HEAD
 +#include <asm-generic/dma-mapping-common.h>
 +
 +static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)
 +{
 +	dev->archdata.dma_ops = ops;
 +}
 +
++=======
++>>>>>>> ca6e8e103141 (treewide: Consolidate set_dma_ops() implementations)
  static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
  {
  	if (!dev->dma_mask)
* Unmerged path arch/arm/include/asm/dma-mapping.h
* Unmerged path arch/powerpc/include/asm/dma-mapping.h
* Unmerged path arch/tile/include/asm/dma-mapping.h
diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h
index fe4bb5f6dd29..4665d2c57576 100644
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@ -87,6 +87,11 @@ static inline int is_device_dma_capable(struct device *dev)
 
 #ifdef CONFIG_HAS_DMA
 #include <asm/dma-mapping.h>
+static inline void set_dma_ops(struct device *dev,
+			       const struct dma_map_ops *dma_ops)
+{
+	dev->dma_ops = dma_ops;
+}
 #else
 #include <asm-generic/dma-mapping-broken.h>
 #endif
