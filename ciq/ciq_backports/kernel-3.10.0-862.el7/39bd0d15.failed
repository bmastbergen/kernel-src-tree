cpuset: initialize top_cpuset's configured masks at mount

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Li Zefan <lizefan@huawei.com>
commit 39bd0d15eca5af15ee1492964f317ecdb024a9d6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/39bd0d15.failed

We now have to support different behaviors for default hierachy and
legacy hiearchy, top_cpuset's configured masks need to be initialized
accordingly.

Suppose we've offlined cpu1.

On default hierarchy:

	# mount -t cgroup -o __DEVEL__sane_behavior xxx /cpuset
	# cat /cpuset/cpuset.cpus
	0-15

On legacy hierarchy:

	# mount -t cgroup xxx /cpuset
	# cat /cpuset/cpuset.cpus
	0,2-15

	Signed-off-by: Li Zefan <lizefan@huawei.com>
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit 39bd0d15eca5af15ee1492964f317ecdb024a9d6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cpuset.c
diff --cc kernel/cpuset.c
index 650413f2caa8,e4c31e6b8716..000000000000
--- a/kernel/cpuset.c
+++ b/kernel/cpuset.c
@@@ -2014,18 -2015,35 +2014,50 @@@ static void cpuset_css_free(struct cgro
  	kfree(cs);
  }
  
++<<<<<<< HEAD
 +struct cgroup_subsys cpuset_subsys = {
 +	.name = "cpuset",
 +	.css_alloc = cpuset_css_alloc,
 +	.css_online = cpuset_css_online,
 +	.css_offline = cpuset_css_offline,
 +	.css_free = cpuset_css_free,
 +	.can_attach = cpuset_can_attach,
 +	.cancel_attach = cpuset_cancel_attach,
 +	.attach = cpuset_attach,
 +	.subsys_id = cpuset_subsys_id,
 +	.base_cftypes = files,
 +	.early_init = 1,
++=======
+ static void cpuset_bind(struct cgroup_subsys_state *root_css)
+ {
+ 	mutex_lock(&cpuset_mutex);
+ 	mutex_lock(&callback_mutex);
+ 
+ 	if (cgroup_on_dfl(root_css->cgroup)) {
+ 		cpumask_copy(top_cpuset.cpus_allowed, cpu_possible_mask);
+ 		top_cpuset.mems_allowed = node_possible_map;
+ 	} else {
+ 		cpumask_copy(top_cpuset.cpus_allowed,
+ 			     top_cpuset.effective_cpus);
+ 		top_cpuset.mems_allowed = top_cpuset.effective_mems;
+ 	}
+ 
+ 	mutex_unlock(&callback_mutex);
+ 	mutex_unlock(&cpuset_mutex);
+ }
+ 
+ struct cgroup_subsys cpuset_cgrp_subsys = {
+ 	.css_alloc	= cpuset_css_alloc,
+ 	.css_online	= cpuset_css_online,
+ 	.css_offline	= cpuset_css_offline,
+ 	.css_free	= cpuset_css_free,
+ 	.can_attach	= cpuset_can_attach,
+ 	.cancel_attach	= cpuset_cancel_attach,
+ 	.attach		= cpuset_attach,
+ 	.bind		= cpuset_bind,
+ 	.base_cftypes	= files,
+ 	.early_init	= 1,
++>>>>>>> 39bd0d15eca5 (cpuset: initialize top_cpuset's configured masks at mount)
  };
  
  /**
* Unmerged path kernel/cpuset.c
