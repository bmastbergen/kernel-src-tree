nvmet: use NVME_IDENTIFY_DATA_SIZE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [nvme] use NVME_IDENTIFY_DATA_SIZE (David Milburn) [1457880 1456486 1454365]
Rebuild_FUZZ: 88.52%
commit-author Johannes Thumshirn <jthumshirn@suse.de>
commit 0add5e8e588c65c5ac6a3255f624260bf889128d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0add5e8e.failed

Use NVME_IDENTIFY_DATA_SIZE define instead of hard coding the magic
4096 value.

	Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
	Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
[hch: converted three more users]
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 0add5e8e588c65c5ac6a3255f624260bf889128d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/lightnvm.c
#	drivers/nvme/target/admin-cmd.c
#	drivers/nvme/target/discovery.c
diff --cc drivers/nvme/target/admin-cmd.c
index bb7972d0b2b3,96c144325443..000000000000
--- a/drivers/nvme/target/admin-cmd.c
+++ b/drivers/nvme/target/admin-cmd.c
@@@ -507,8 -504,8 +507,13 @@@ int nvmet_parse_admin_cmd(struct nvmet_
  		}
  		break;
  	case nvme_admin_identify:
++<<<<<<< HEAD
 +		req->data_len = 4096;
 +		switch (le32_to_cpu(cmd->identify.cns)) {
++=======
+ 		req->data_len = NVME_IDENTIFY_DATA_SIZE;
+ 		switch (cmd->identify.cns) {
++>>>>>>> 0add5e8e588c (nvmet: use NVME_IDENTIFY_DATA_SIZE)
  		case NVME_ID_CNS_NS:
  			req->execute = nvmet_execute_identify_ns;
  			return 0;
diff --cc drivers/nvme/target/discovery.c
index 12f39eea569f,c7a90384dd75..000000000000
--- a/drivers/nvme/target/discovery.c
+++ b/drivers/nvme/target/discovery.c
@@@ -185,8 -185,8 +185,13 @@@ int nvmet_parse_discovery_cmd(struct nv
  		return NVME_SC_INVALID_OPCODE | NVME_SC_DNR;
  		}
  	case nvme_admin_identify:
++<<<<<<< HEAD
 +		req->data_len = 4096;
 +		switch (le32_to_cpu(cmd->identify.cns)) {
++=======
+ 		req->data_len = NVME_IDENTIFY_DATA_SIZE;
+ 		switch (cmd->identify.cns) {
++>>>>>>> 0add5e8e588c (nvmet: use NVME_IDENTIFY_DATA_SIZE)
  		case NVME_ID_CNS_CTRL:
  			req->execute =
  				nvmet_execute_identify_disc_ctrl;
* Unmerged path drivers/nvme/host/lightnvm.c
* Unmerged path drivers/nvme/host/lightnvm.c
diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
index f136fc3284bb..28dd21694e53 100644
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -165,8 +165,8 @@ static inline void _nvme_check_size(void)
 	BUILD_BUG_ON(sizeof(struct nvme_format_cmd) != 64);
 	BUILD_BUG_ON(sizeof(struct nvme_abort_cmd) != 64);
 	BUILD_BUG_ON(sizeof(struct nvme_command) != 64);
-	BUILD_BUG_ON(sizeof(struct nvme_id_ctrl) != 4096);
-	BUILD_BUG_ON(sizeof(struct nvme_id_ns) != 4096);
+	BUILD_BUG_ON(sizeof(struct nvme_id_ctrl) != NVME_IDENTIFY_DATA_SIZE);
+	BUILD_BUG_ON(sizeof(struct nvme_id_ns) != NVME_IDENTIFY_DATA_SIZE);
 	BUILD_BUG_ON(sizeof(struct nvme_lba_range_type) != 64);
 	BUILD_BUG_ON(sizeof(struct nvme_smart_log) != 512);
 }
* Unmerged path drivers/nvme/target/admin-cmd.c
* Unmerged path drivers/nvme/target/discovery.c
diff --git a/include/linux/nvme.h b/include/linux/nvme.h
index 1f20b70e79e3..9ef834010eee 100644
--- a/include/linux/nvme.h
+++ b/include/linux/nvme.h
@@ -628,6 +628,8 @@ struct nvme_identify {
 	__u32			rsvd11[5];
 };
 
+#define NVME_IDENTIFY_DATA_SIZE 4096
+
 struct nvme_features {
 	__u8			opcode;
 	__u8			flags;
