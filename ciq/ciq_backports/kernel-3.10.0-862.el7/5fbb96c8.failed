scsi: cxlflash: Use cmd_size for private commands

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] cxlflash: Use cmd_size for private commands (Gustavo Duarte) [1456494]
Rebuild_FUZZ: 93.48%
commit-author Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
commit 5fbb96c8f1ba89fb220efb7e4eeed7cb5112becd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5fbb96c8.failed

Instead of using a private pool of AFU commands, use cmd_size to prime
the private pool of SCSI commands such that they are allocated with a
size large enough to contain an aligned AFU command. Use scsi_cmd_priv()
to derive the aligned/zeroed private command on queuecommand and TMF
paths. Remove cmd_checkout() as it is no longer required. The remaining
AFU private command infrastructure will be removed in a cleanup commit.

	Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Acked-by: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 5fbb96c8f1ba89fb220efb7e4eeed7cb5112becd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxlflash/main.c
diff --cc drivers/scsi/cxlflash/main.c
index d8aaf45b8306,43140ce3163d..000000000000
--- a/drivers/scsi/cxlflash/main.c
+++ b/drivers/scsi/cxlflash/main.c
@@@ -502,14 -474,11 +464,20 @@@ static int cxlflash_queuecommand(struc
  		break;
  	}
  
++<<<<<<< HEAD
 +	cmd = cmd_checkout(afu);
 +	if (unlikely(!cmd)) {
 +		dev_err(dev, "%s: could not get a free command\n", __func__);
 +		rc = SCSI_MLQUEUE_HOST_BUSY;
 +		goto out;
 +	}
++=======
+ 	kref_get(&cfg->afu->mapcount);
+ 	kref_got = 1;
++>>>>>>> 5fbb96c8f1ba (scsi: cxlflash: Use cmd_size for private commands)
  
  	cmd->rcb.ctx_id = afu->ctx_hndl;
+ 	cmd->rcb.msi = SISL_MSI_RRQ_UPDATED;
  	cmd->rcb.port_sel = port_sel;
  	cmd->rcb.lun_id = lun_to_lunid(scp->device->lun);
  
@@@ -543,12 -514,12 +513,10 @@@
  
  	/* Send the command */
  	rc = send_cmd(afu, cmd);
- 	if (unlikely(rc)) {
- 		cmd_checkin(cmd);
+ 	if (unlikely(rc))
  		scsi_dma_unmap(scp);
- 	}
  
  out:
 -	if (kref_got)
 -		kref_put(&afu->mapcount, afu_unmap);
  	pr_devel("%s: returning rc=%d\n", __func__, rc);
  	return rc;
  }
diff --git a/drivers/scsi/cxlflash/common.h b/drivers/scsi/cxlflash/common.h
index 811927d91c5c..c080d07a7c9a 100644
--- a/drivers/scsi/cxlflash/common.h
+++ b/drivers/scsi/cxlflash/common.h
@@ -19,6 +19,7 @@
 #include <linux/rwsem.h>
 #include <linux/types.h>
 #include <scsi/scsi.h>
+#include <scsi/scsi_cmnd.h>
 #include <scsi/scsi_device.h>
 
 extern const struct file_operations cxlflash_cxl_fops;
@@ -146,6 +147,19 @@ struct afu_cmd {
 	 */
 } __aligned(cache_line_size());
 
+static inline struct afu_cmd *sc_to_afuc(struct scsi_cmnd *sc)
+{
+	return PTR_ALIGN(scsi_cmd_priv(sc), __alignof__(struct afu_cmd));
+}
+
+static inline struct afu_cmd *sc_to_afucz(struct scsi_cmnd *sc)
+{
+	struct afu_cmd *afuc = sc_to_afuc(sc);
+
+	memset(afuc, 0, sizeof(*afuc));
+	return afuc;
+}
+
 struct afu {
 	/* Stuff requiring alignment go first. */
 
* Unmerged path drivers/scsi/cxlflash/main.c
