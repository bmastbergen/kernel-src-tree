iommu/amd: Correctly set flags for handle_mm_fault call

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Correctly set flags for handle_mm_fault call (Rui Wang) [1272615]
Rebuild_FUZZ: 94.23%
commit-author Joerg Roedel <jroedel@suse.de>
commit 43c0ea20de4de8e2d753dff0e76129c4febafffa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/43c0ea20.failed

Instead of just checking for a write access, calculate the
flags that are passed to handle_mm_fault() more precisly and
use the pre-defined macros.

	Reviewed-by: Jesse Barnes <jbarnes@virtuousgeek.org>
Acked-By: David Woodhouse <David.Woodhouse@intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 43c0ea20de4de8e2d753dff0e76129c4febafffa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu_v2.c
diff --cc drivers/iommu/amd_iommu_v2.c
index 80e04d5cacfc,a7edbd6851c4..000000000000
--- a/drivers/iommu/amd_iommu_v2.c
+++ b/drivers/iommu/amd_iommu_v2.c
@@@ -515,7 -536,14 +519,18 @@@ static void do_fault(struct work_struc
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	ret = handle_mm_fault(mm, vma, address, write);
++=======
+ 	/* Check if we have the right permissions on the vma */
+ 	if (access_error(vma, fault)) {
+ 		up_read(&mm->mmap_sem);
+ 		handle_fault_error(fault);
+ 		goto out;
+ 	}
+ 
+ 	ret = handle_mm_fault(mm, vma, address, flags);
++>>>>>>> 43c0ea20de4d (iommu/amd: Correctly set flags for handle_mm_fault call)
  	if (ret & VM_FAULT_ERROR) {
  		/* failed to service fault */
  		up_read(&mm->mmap_sem);
* Unmerged path drivers/iommu/amd_iommu_v2.c
