qed: Add iWARP support in ll2 connections

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Kalderon, Michal <Michal.Kalderon@cavium.com>
commit cc4ad324e7e247bb4979791dd4f2ff11419d9742
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/cc4ad324.failed

Add a new connection type for iWARP ll2 connections for setting
correct ll2 filters and connection type to FW.

	Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
	Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
	Signed-off-by: Ariel Elior <Ariel.Elior@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cc4ad324e7e247bb4979791dd4f2ff11419d9742)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_ll2.c
#	include/linux/qed/qed_ll2_if.h
diff --cc drivers/net/ethernet/qlogic/qed/qed_ll2.c
index 6b0af0a3aa1a,c06ad4f0758e..000000000000
--- a/drivers/net/ethernet/qlogic/qed/qed_ll2.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_ll2.c
@@@ -1084,14 -890,14 +1084,15 @@@ static int qed_sp_ll2_rx_queue_start(st
  	DMA_REGPAIR_LE(p_ramrod->cqe_pbl_addr,
  		       qed_chain_get_pbl_phys(&p_rx->rcq_chain));
  
 -	p_ramrod->drop_ttl0_flg = p_ll2_conn->input.rx_drop_ttl0_flg;
 -	p_ramrod->inner_vlan_removal_en = p_ll2_conn->input.rx_vlan_removal_en;
 +	p_ramrod->drop_ttl0_flg = p_ll2_conn->conn.rx_drop_ttl0_flg;
 +	p_ramrod->inner_vlan_removal_en = p_ll2_conn->conn.rx_vlan_removal_en;
  	p_ramrod->queue_id = p_ll2_conn->queue_id;
 -	p_ramrod->main_func_queue = (conn_type == QED_LL2_TYPE_OOO) ? 0 : 1;
 +	p_ramrod->main_func_queue = (conn_type == QED_LL2_TYPE_ISCSI_OOO) ? 0
 +									  : 1;
  
  	if ((IS_MF_DEFAULT(p_hwfn) || IS_MF_SI(p_hwfn)) &&
- 	    p_ramrod->main_func_queue && (conn_type != QED_LL2_TYPE_ROCE)) {
+ 	    p_ramrod->main_func_queue && (conn_type != QED_LL2_TYPE_ROCE) &&
+ 	    (conn_type != QED_LL2_TYPE_IWARP)) {
  		p_ramrod->mf_si_bcast_accept_all = 1;
  		p_ramrod->mf_si_mcast_accept_all = 1;
  	} else {
@@@ -1167,7 -973,6 +1168,10 @@@ static int qed_sp_ll2_tx_queue_start(st
  		p_ramrod->conn_type = PROTOCOLID_FCOE;
  		break;
  	case QED_LL2_TYPE_ISCSI:
++<<<<<<< HEAD
 +	case QED_LL2_TYPE_ISCSI_OOO:
++=======
++>>>>>>> cc4ad324e7e2 (qed: Add iWARP support in ll2 connections)
  		p_ramrod->conn_type = PROTOCOLID_ISCSI;
  		break;
  	case QED_LL2_TYPE_ROCE:
diff --cc include/linux/qed/qed_ll2_if.h
index 056ac007dd12,dd7a3b86bb9e..000000000000
--- a/include/linux/qed/qed_ll2_if.h
+++ b/include/linux/qed/qed_ll2_if.h
@@@ -43,6 -43,18 +43,21 @@@
  #include <linux/slab.h>
  #include <linux/qed/qed_if.h>
  
++<<<<<<< HEAD
++=======
+ enum qed_ll2_conn_type {
+ 	QED_LL2_TYPE_FCOE,
+ 	QED_LL2_TYPE_ISCSI,
+ 	QED_LL2_TYPE_TEST,
+ 	QED_LL2_TYPE_OOO,
+ 	QED_LL2_TYPE_RESERVED2,
+ 	QED_LL2_TYPE_ROCE,
+ 	QED_LL2_TYPE_IWARP,
+ 	QED_LL2_TYPE_RESERVED3,
+ 	MAX_QED_LL2_RX_CONN_TYPE
+ };
+ 
++>>>>>>> cc4ad324e7e2 (qed: Add iWARP support in ll2 connections)
  enum qed_ll2_roce_flavor_type {
  	QED_LL2_ROCE,
  	QED_LL2_RROCE,
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_ll2.c
* Unmerged path include/linux/qed/qed_ll2_if.h
