crypto: aead - move aead_request_cast helper to aead.h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [crypto] aead - move aead_request_cast helper to aead.h (Arjun Vynipadath) [1458315]
Rebuild_FUZZ: 92.00%
commit-author Tadeusz Struk <tadeusz.struk@intel.com>
commit 53a0bd7144224ba26b326a16e9eaf8bd7f433220
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/53a0bd71.failed

Move the helper function to common header for everybody to use.

changes in v2:
- move the helper to crypto/internal/aead.h
  instead of crypto/aead.h

	Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 53a0bd7144224ba26b326a16e9eaf8bd7f433220)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/atmel-aes.c
diff --cc drivers/crypto/atmel-aes.c
index c1efd910d97b,949af89cdac3..000000000000
--- a/drivers/crypto/atmel-aes.c
+++ b/drivers/crypto/atmel-aes.c
@@@ -235,7 -338,38 +235,42 @@@ static void atmel_aes_write_n(struct at
  		atmel_aes_write(dd, offset, *value);
  }
  
++<<<<<<< HEAD
 +static struct atmel_aes_dev *atmel_aes_find_dev(struct atmel_aes_ctx *ctx)
++=======
+ static inline void atmel_aes_read_block(struct atmel_aes_dev *dd, u32 offset,
+ 					u32 *value)
+ {
+ 	atmel_aes_read_n(dd, offset, value, SIZE_IN_WORDS(AES_BLOCK_SIZE));
+ }
+ 
+ static inline void atmel_aes_write_block(struct atmel_aes_dev *dd, u32 offset,
+ 					 const u32 *value)
+ {
+ 	atmel_aes_write_n(dd, offset, value, SIZE_IN_WORDS(AES_BLOCK_SIZE));
+ }
+ 
+ static inline int atmel_aes_wait_for_data_ready(struct atmel_aes_dev *dd,
+ 						atmel_aes_fn_t resume)
+ {
+ 	u32 isr = atmel_aes_read(dd, AES_ISR);
+ 
+ 	if (unlikely(isr & AES_INT_DATARDY))
+ 		return resume(dd);
+ 
+ 	dd->resume = resume;
+ 	atmel_aes_write(dd, AES_IER, AES_INT_DATARDY);
+ 	return -EINPROGRESS;
+ }
+ 
+ static inline size_t atmel_aes_padlen(size_t len, size_t block_size)
+ {
+ 	len &= block_size - 1;
+ 	return len ? block_size - len : 0;
+ }
+ 
+ static struct atmel_aes_dev *atmel_aes_find_dev(struct atmel_aes_base_ctx *ctx)
++>>>>>>> 53a0bd714422 (crypto: aead - move aead_request_cast helper to aead.h)
  {
  	struct atmel_aes_dev *aes_dd = NULL;
  	struct atmel_aes_dev *tmp;
* Unmerged path drivers/crypto/atmel-aes.c
diff --git a/include/crypto/internal/aead.h b/include/crypto/internal/aead.h
index 750948cf4621..0120f0fa7620 100644
--- a/include/crypto/internal/aead.h
+++ b/include/crypto/internal/aead.h
@@ -25,6 +25,12 @@ struct crypto_aead_spawn {
 
 extern const struct crypto_type crypto_nivaead_type;
 
+static inline struct aead_request *aead_request_cast(
+	struct crypto_async_request *req)
+{
+	return container_of(req, struct aead_request, base);
+}
+
 static inline void crypto_set_aead_spawn(
 	struct crypto_aead_spawn *spawn, struct crypto_instance *inst)
 {
