tools/power turbostat: if  --debug, print sampling overhead

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [tools] power turbostat: if --debug, print sampling overhead (Prarit Bhargava) [1514290]
Rebuild_FUZZ: 93.69%
commit-author Len Brown <len.brown@intel.com>
commit f4fdf2b474606580b95eed95d06c762d4fd3f57b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f4fdf2b4.failed

The --debug option now pre-pends each row with
the number  of micro-seconds [usec] to collect
the finishing snapshot for that row.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit f4fdf2b474606580b95eed95d06c762d4fd3f57b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index fc47becd6ab4,6f7c64acee23..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -459,41 -526,51 +461,43 @@@ unsigned long long bic_lookup(char *nam
  	return retval;
  }
  
 -
 -void print_header(char *delim)
 +void print_header(void)
  {
  	struct msr_counter *mp;
 -	int printed = 0;
  
+ 	if (debug)
+ 		outp += sprintf(outp, "usec %s", delim);
  	if (DO_BIC(BIC_Package))
 -		outp += sprintf(outp, "%sPackage", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tPackage");
  	if (DO_BIC(BIC_Core))
 -		outp += sprintf(outp, "%sCore", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tCore");
  	if (DO_BIC(BIC_CPU))
 -		outp += sprintf(outp, "%sCPU", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tCPU");
  	if (DO_BIC(BIC_Avg_MHz))
 -		outp += sprintf(outp, "%sAvg_MHz", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tAvg_MHz");
  	if (DO_BIC(BIC_Busy))
 -		outp += sprintf(outp, "%sBusy%%", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tBusy%%");
  	if (DO_BIC(BIC_Bzy_MHz))
 -		outp += sprintf(outp, "%sBzy_MHz", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tBzy_MHz");
  	if (DO_BIC(BIC_TSC_MHz))
 -		outp += sprintf(outp, "%sTSC_MHz", (printed++ ? delim : ""));
 -
 -	if (DO_BIC(BIC_IRQ)) {
 -		if (sums_need_wide_columns)
 -			outp += sprintf(outp, "%s     IRQ", (printed++ ? delim : ""));
 -		else
 -			outp += sprintf(outp, "%sIRQ", (printed++ ? delim : ""));
 -	}
 +		outp += sprintf(outp, "\tTSC_MHz");
  
 +	if (DO_BIC(BIC_IRQ))
 +		outp += sprintf(outp, "\tIRQ");
  	if (DO_BIC(BIC_SMI))
 -		outp += sprintf(outp, "%sSMI", (printed++ ? delim : ""));
 +		outp += sprintf(outp, "\tSMI");
  
 -	for (mp = sys.tp; mp; mp = mp->next) {
 +	if (DO_BIC(BIC_CPU_c1))
 +		outp += sprintf(outp, "\tCPU%%c1");
  
 +	for (mp = sys.tp; mp; mp = mp->next) {
  		if (mp->format == FORMAT_RAW) {
  			if (mp->width == 64)
 -				outp += sprintf(outp, "%s%18.18s", (printed++ ? delim : ""), mp->name);
 +				outp += sprintf(outp, "\t%18.18s", mp->name);
  			else
 -				outp += sprintf(outp, "%s%10.10s", (printed++ ? delim : ""), mp->name);
 +				outp += sprintf(outp, "\t%10.10s", mp->name);
  		} else {
 -			if ((mp->type == COUNTER_ITEMS) && sums_need_wide_columns)
 -				outp += sprintf(outp, "%s%8s", (printed++ ? delim : ""), mp->name);
 -			else
 -				outp += sprintf(outp, "%s%s", (printed++ ? delim : ""), mp->name);
 +			outp += sprintf(outp, "\t%-7.7s", mp->name);
  		}
  	}
  
@@@ -688,8 -781,23 +692,24 @@@ int format_counters(struct thread_data 
  	if (show_pkg_only && !(t->flags & CPU_IS_FIRST_CORE_IN_PACKAGE))
  		return 0;
  
++<<<<<<< HEAD
++=======
+ 	/*if not summary line and --cpu is used */
+ 	if ((t != &average.threads) &&
+ 		(cpu_subset && !CPU_ISSET_S(t->cpu_id, cpu_subset_size, cpu_subset)))
+ 		return 0;
+ 
+ 	if (debug) {
+ 		/* on each row, print how many usec each timestamp took to gather */
+ 		struct timeval tv;
+ 
+ 		timersub(&t->tv_end, &t->tv_begin, &tv);
+ 		outp += sprintf(outp, "%5ld\t", tv.tv_sec * 1000000 + tv.tv_usec);
+ 	}
+ 
++>>>>>>> f4fdf2b47460 (tools/power turbostat: if  --debug, print sampling overhead)
  	interval_float = tv_delta.tv_sec + tv_delta.tv_usec/1000000.0;
  
 -	tsc = t->tsc * tsc_tweak;
 -
  	/* topo columns, print blanks on 1st (average) line */
  	if (t == &average.threads) {
  		if (DO_BIC(BIC_Package))
@@@ -1463,15 -1637,21 +1486,15 @@@ retry
  
  	/* collect package counters only for 1st core in package */
  	if (!(t->flags & CPU_IS_FIRST_CORE_IN_PACKAGE))
- 		return 0;
+ 		goto done;
  
 -	if (DO_BIC(BIC_Totl_c0)) {
 +	if (do_skl_residency) {
  		if (get_msr(cpu, MSR_PKG_WEIGHTED_CORE_C0_RES, &p->pkg_wtd_core_c0))
  			return -10;
 -	}
 -	if (DO_BIC(BIC_Any_c0)) {
  		if (get_msr(cpu, MSR_PKG_ANY_CORE_C0_RES, &p->pkg_any_core_c0))
  			return -11;
 -	}
 -	if (DO_BIC(BIC_GFX_c0)) {
  		if (get_msr(cpu, MSR_PKG_ANY_GFXE_C0_RES, &p->pkg_any_gfxe_c0))
  			return -12;
 -	}
 -	if (DO_BIC(BIC_CPUGFX)) {
  		if (get_msr(cpu, MSR_PKG_BOTH_CORE_GFXE_C0_RES, &p->pkg_both_core_gfxe_c0))
  			return -13;
  	}
* Unmerged path tools/power/x86/turbostat/turbostat.c
