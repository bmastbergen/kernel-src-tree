blk-mq-sched: refactor scheduler initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Omar Sandoval <osandov@fb.com>
commit 6917ff0b5bd4139e08a3f3146529dcb3b95ba7a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6917ff0b.failed

Preparation cleanup for the next couple of fixes, push
blk_mq_sched_setup() and e->ops.mq.init_sched() into a helper.

	Signed-off-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 6917ff0b5bd4139e08a3f3146529dcb3b95ba7a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq-sched.c
#	block/blk-mq-sched.h
#	block/elevator.c
diff --cc block/elevator.c
index c585bf41be5d,f236ef1d2be9..000000000000
--- a/block/elevator.c
+++ b/block/elevator.c
@@@ -230,7 -242,10 +230,14 @@@ int elevator_init(struct request_queue 
  		}
  	}
  
++<<<<<<< HEAD
 +	err = e->ops.elevator_init_fn(q, e);
++=======
+ 	if (e->uses_mq)
+ 		err = blk_mq_init_sched(q, e);
+ 	else
+ 		err = e->ops.sq.elevator_init_fn(q, e);
++>>>>>>> 6917ff0b5bd4 (blk-mq-sched: refactor scheduler initialization)
  	if (err)
  		elevator_put(e);
  	return err;
@@@ -910,22 -965,31 +917,33 @@@ static int elevator_switch(struct reque
  	 * using INSERT_BACK.  All requests have SOFTBARRIER set and no
  	 * merge happens either.
  	 */
 -	if (old) {
 -		old_registered = old->registered;
 -
 -		if (old->uses_mq)
 -			blk_mq_sched_teardown(q);
 +	blk_queue_bypass_start(q);
  
 -		if (!q->mq_ops)
 -			blk_queue_bypass_start(q);
 +	/* unregister and clear all auxiliary data of the old elevator */
 +	if (registered)
 +		elv_unregister_queue(q);
  
 -		/* unregister and clear all auxiliary data of the old elevator */
 -		if (old_registered)
 -			elv_unregister_queue(q);
 -
 -		ioc_clear_queue(q);
 -	}
 +	spin_lock_irq(q->queue_lock);
 +	ioc_clear_queue(q);
 +	spin_unlock_irq(q->queue_lock);
  
  	/* allocate, init and register new elevator */
++<<<<<<< HEAD
 +	err = new_e->ops.elevator_init_fn(q, new_e);
 +	if (err)
 +		goto fail_init;
 +
 +	if (registered) {
++=======
+ 	if (q->mq_ops)
+ 		err = blk_mq_init_sched(q, new_e);
+ 	else
+ 		err = new_e->ops.sq.elevator_init_fn(q, new_e);
+ 	if (err)
+ 		goto fail_init;
+ 
+ 	if (new_e) {
++>>>>>>> 6917ff0b5bd4 (blk-mq-sched: refactor scheduler initialization)
  		err = elv_register_queue(q);
  		if (err)
  			goto fail_register;
* Unmerged path block/blk-mq-sched.c
* Unmerged path block/blk-mq-sched.h
* Unmerged path block/blk-mq-sched.c
* Unmerged path block/blk-mq-sched.h
* Unmerged path block/elevator.c
