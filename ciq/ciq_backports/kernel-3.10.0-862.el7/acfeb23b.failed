scsi: cxlflash: Avoid double free of character device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] cxlflash: Avoid double free of character device (Gustavo Duarte) [1456494]
Rebuild_FUZZ: 94.00%
commit-author Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
commit acfeb23b29894deaee65d63c55bea09183f6b538
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/acfeb23b.failed

The device_unregister() service used when cleaning up the character
device is already responsible for the internal state associated with the
device upon successful creation. As the cxlflash driver does not obtain
a second reference to the character device, the explicit call to
put_device() is not required and can lead to an inconsistent sysfs among
other issues as the reference is no longer valid after the first
put_device() is performed.

Remove the unnecessary put_device() to remedy this issue.

Fixes: a834a36b57d9 ("scsi: cxlflash: Create character device to provide host management interface")
	Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit acfeb23b29894deaee65d63c55bea09183f6b538)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxlflash/main.c
diff --cc drivers/scsi/cxlflash/main.c
index c68badcfa77f,455564fb6c4d..000000000000
--- a/drivers/scsi/cxlflash/main.c
+++ b/drivers/scsi/cxlflash/main.c
@@@ -761,6 -890,46 +761,49 @@@ static void notify_shutdown(struct cxlf
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * cxlflash_get_minor() - gets the first available minor number
+  *
+  * Return: Unique minor number that can be used to create the character device.
+  */
+ static int cxlflash_get_minor(void)
+ {
+ 	int minor;
+ 	long bit;
+ 
+ 	bit = find_first_zero_bit(cxlflash_minor, CXLFLASH_MAX_ADAPTERS);
+ 	if (bit >= CXLFLASH_MAX_ADAPTERS)
+ 		return -1;
+ 
+ 	minor = bit & MINORMASK;
+ 	set_bit(minor, cxlflash_minor);
+ 	return minor;
+ }
+ 
+ /**
+  * cxlflash_put_minor() - releases the minor number
+  * @minor:	Minor number that is no longer needed.
+  */
+ static void cxlflash_put_minor(int minor)
+ {
+ 	clear_bit(minor, cxlflash_minor);
+ }
+ 
+ /**
+  * cxlflash_release_chrdev() - release the character device for the host
+  * @cfg:	Internal structure associated with the host.
+  */
+ static void cxlflash_release_chrdev(struct cxlflash_cfg *cfg)
+ {
+ 	device_unregister(cfg->chardev);
+ 	cfg->chardev = NULL;
+ 	cdev_del(&cfg->cdev);
+ 	cxlflash_put_minor(MINOR(cfg->cdev.dev));
+ }
+ 
+ /**
++>>>>>>> acfeb23b2989 (scsi: cxlflash: Avoid double free of character device)
   * cxlflash_remove() - PCI entry point to tear down host
   * @pdev:	PCI device associated with the host.
   *
* Unmerged path drivers/scsi/cxlflash/main.c
