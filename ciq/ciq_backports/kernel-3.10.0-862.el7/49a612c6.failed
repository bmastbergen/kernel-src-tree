x86/stacktrace: Convert save_stack_trace_*() to use the new unwinder

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] stacktrace: Convert save_stack_trace_*() to use the new unwinder (Josh Poimboeuf) [1430637]
Rebuild_FUZZ: 96.97%
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit 49a612c6b06defbd6e6d334c683fea28006728e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/49a612c6.failed

Convert save_stack_trace_*() to use the new unwinder.  dump_trace() has
been deprecated.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Byungchul Park <byungchul.park@lge.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Nilay Vaish <nilayvaish@gmail.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/815494c627d89887db0ce56ceffd58ad16ee6c21.1474045023.git.jpoimboe@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 49a612c6b06defbd6e6d334c683fea28006728e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/stacktrace.c
diff --cc arch/x86/kernel/stacktrace.c
index 9ee98eefc44d,0653788026e2..000000000000
--- a/arch/x86/kernel/stacktrace.c
+++ b/arch/x86/kernel/stacktrace.c
@@@ -5,25 -5,17 +5,21 @@@
   */
  #include <linux/sched.h>
  #include <linux/stacktrace.h>
 -#include <linux/export.h>
 +#include <linux/module.h>
  #include <linux/uaccess.h>
  #include <asm/stacktrace.h>
+ #include <asm/unwind.h>
  
++<<<<<<< HEAD
 +static int save_stack_stack(void *data, char *name)
++=======
+ static int save_stack_address(struct stack_trace *trace, unsigned long addr,
+ 			      bool nosched)
++>>>>>>> 49a612c6b06d (x86/stacktrace: Convert save_stack_trace_*() to use the new unwinder)
  {
- 	return 0;
- }
- 
- static int
- __save_stack_address(void *data, unsigned long addr, bool reliable, bool nosched)
- {
- 	struct stack_trace *trace = data;
- #ifdef CONFIG_FRAME_POINTER
- 	if (!reliable)
- 		return 0;
- #endif
  	if (nosched && in_sched_functions(addr))
  		return 0;
+ 
  	if (trace->skip > 0) {
  		trace->skip--;
  		return 0;
@@@ -79,9 -65,12 +69,18 @@@ void save_stack_trace_regs(struct pt_re
  
  void save_stack_trace_tsk(struct task_struct *tsk, struct stack_trace *trace)
  {
++<<<<<<< HEAD
 +	dump_trace(tsk, NULL, NULL, 0, &save_stack_ops_nosched, trace);
 +	if (trace->nr_entries < trace->max_entries)
 +		trace->entries[trace->nr_entries++] = ULONG_MAX;
++=======
+ 	if (!try_get_task_stack(tsk))
+ 		return;
+ 
+ 	__save_stack_trace(trace, tsk, NULL, true);
+ 
+ 	put_task_stack(tsk);
++>>>>>>> 49a612c6b06d (x86/stacktrace: Convert save_stack_trace_*() to use the new unwinder)
  }
  EXPORT_SYMBOL_GPL(save_stack_trace_tsk);
  
* Unmerged path arch/x86/kernel/stacktrace.c
