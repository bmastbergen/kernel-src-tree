IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Alex Vesker <valex@mellanox.com>
commit 7c9d9662103ae1c11acc7bfc47d988466cff23cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7c9d9662.failed

Call free_rdma_netdev instead of free_netdev each time we want to
release a netdevice. This call is also relevant for future freeing
of offloaded child interfaces.

This patch also adds a missing call for free netdevice when releasing
a parent interface that has child interfaces using ipoib_remove_one.

Fixes: cd565b4b51e5 ('IB/IPoIB: Support acceleration options callbacks')
	Signed-off-by: Alex Vesker <valex@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 7c9d9662103ae1c11acc7bfc47d988466cff23cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/ipoib/ipoib_main.c
#	drivers/infiniband/ulp/ipoib/ipoib_vlan.c
diff --cc drivers/infiniband/ulp/ipoib/ipoib_main.c
index d4551f56d0a2,dcc77014018d..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_main.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_main.c
@@@ -2167,9 -2180,10 +2167,10 @@@ static struct net_device *ipoib_add_por
  {
  	struct ipoib_dev_priv *priv;
  	struct ib_port_attr attr;
+ 	struct rdma_netdev *rn;
  	int result = -ENOMEM;
  
 -	priv = ipoib_intf_alloc(hca, port, format);
 +	priv = ipoib_intf_alloc(format);
  	if (!priv)
  		goto alloc_mem_failed;
  
@@@ -2273,7 -2280,9 +2274,13 @@@ event_failed
  	ipoib_dev_cleanup(priv->dev);
  
  device_init_failed:
++<<<<<<< HEAD
 +	free_netdev(priv->dev);
++=======
+ 	rn = netdev_priv(priv->dev);
+ 	rn->free_rdma_netdev(priv->dev);
+ 	kfree(priv);
++>>>>>>> 7c9d9662103a (IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev)
  
  alloc_mem_failed:
  	return ERR_PTR(result);
@@@ -2321,6 -2330,8 +2328,11 @@@ static void ipoib_remove_one(struct ib_
  		return;
  
  	list_for_each_entry_safe(priv, tmp, dev_list, list) {
++<<<<<<< HEAD
++=======
+ 		struct rdma_netdev *parent_rn = netdev_priv(priv->dev);
+ 
++>>>>>>> 7c9d9662103a (IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev)
  		ib_unregister_event_handler(&priv->event_handler);
  		flush_workqueue(ipoib_workqueue);
  
@@@ -2336,8 -2347,22 +2348,24 @@@
  		cancel_delayed_work(&priv->neigh_reap_task);
  		flush_workqueue(priv->wq);
  
 -		/* Wrap rtnl_lock/unlock with mutex to protect sysfs calls */
 -		mutex_lock(&priv->sysfs_mutex);
  		unregister_netdev(priv->dev);
++<<<<<<< HEAD
 +		free_netdev(priv->dev);
++=======
+ 		mutex_unlock(&priv->sysfs_mutex);
+ 
+ 		parent_rn->free_rdma_netdev(priv->dev);
+ 
+ 		list_for_each_entry_safe(cpriv, tcpriv, &priv->child_intfs, list) {
+ 			struct rdma_netdev *child_rn;
+ 
+ 			child_rn = netdev_priv(cpriv->dev);
+ 			child_rn->free_rdma_netdev(cpriv->dev);
+ 			kfree(cpriv);
+ 		}
+ 
+ 		kfree(priv);
++>>>>>>> 7c9d9662103a (IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev)
  	}
  
  	kfree(dev_list);
diff --cc drivers/infiniband/ulp/ipoib/ipoib_vlan.c
index a69df126283b,55a9b71ed05a..000000000000
--- a/drivers/infiniband/ulp/ipoib/ipoib_vlan.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_vlan.c
@@@ -162,11 -175,16 +162,21 @@@ int ipoib_vlan_add(struct net_device *p
  
  out:
  	up_write(&ppriv->vlan_rwsem);
 +
++<<<<<<< HEAD
  	rtnl_unlock();
 -	mutex_unlock(&ppriv->sysfs_mutex);
  
 +	if (result)
 +		free_netdev(priv->dev);
++=======
+ 	if (result && priv) {
+ 		struct rdma_netdev *rn;
+ 
+ 		rn = netdev_priv(priv->dev);
+ 		rn->free_rdma_netdev(priv->dev);
+ 		kfree(priv);
+ 	}
++>>>>>>> 7c9d9662103a (IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev)
  
  	return result;
  }
@@@ -204,9 -232,14 +214,17 @@@ int ipoib_vlan_delete(struct net_devic
  	}
  
  	rtnl_unlock();
 -	mutex_unlock(&ppriv->sysfs_mutex);
  
  	if (dev) {
++<<<<<<< HEAD
 +		free_netdev(dev);
++=======
+ 		struct rdma_netdev *rn;
+ 
+ 		rn = netdev_priv(dev);
+ 		rn->free_rdma_netdev(priv->dev);
+ 		kfree(priv);
++>>>>>>> 7c9d9662103a (IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev)
  		return 0;
  	}
  
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_main.c
* Unmerged path drivers/infiniband/ulp/ipoib/ipoib_vlan.c
