ibmvnic: Don't handle RX interrupts when not up.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] ibmvnic: Don't handle RX interrupts when not up (Desnes Augusto Nunes do Rosario) [1532345]
Rebuild_FUZZ: 98.95%
commit-author Nathan Fontenot <nfont@linux.vnet.ibm.com>
commit 09fb35ead58cd557aa9b20576d15816bc91a4deb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/09fb35ea.failed

Initiating a kdump via the command line can cause a pending interrupt
to be handled by the ibmvnic driver when initializing the sub-CRQ
irqs during driver initialization.

NIP [d000000000ca34f0] ibmvnic_interrupt_rx+0x40/0xd0 [ibmvnic]
LR [c000000008132ef0] __handle_irq_event_percpu+0xa0/0x2f0
Call Trace:
[c000000047fcfde0] [c000000008132ef0] __handle_irq_event_percpu+0xa0/0x2f0
[c000000047fcfea0] [c00000000813317c] handle_irq_event_percpu+0x3c/0x90
[c000000047fcfee0] [c00000000813323c] handle_irq_event+0x6c/0xd0
[c000000047fcff10] [c0000000081385e0] handle_fasteoi_irq+0xf0/0x250
[c000000047fcff40] [c0000000081320a0] generic_handle_irq+0x50/0x80
[c000000047fcff60] [c000000008014984] __do_irq+0x84/0x1d0
[c000000047fcff90] [c000000008027564] call_do_irq+0x14/0x24
[c00000003c92af00] [c000000008014b70] do_IRQ+0xa0/0x120
[c00000003c92af50] [c000000008002594] hardware_interrupt_common+0x114/0x180

	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 09fb35ead58cd557aa9b20576d15816bc91a4deb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 569bb2b68f4b,461014b7ccdd..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -1557,6 -2453,14 +1557,17 @@@ static irqreturn_t ibmvnic_interrupt_rx
  	struct ibmvnic_sub_crq_queue *scrq = instance;
  	struct ibmvnic_adapter *adapter = scrq->adapter;
  
++<<<<<<< HEAD
++=======
+ 	/* When booting a kdump kernel we can hit pending interrupts
+ 	 * prior to completing driver initialization.
+ 	 */
+ 	if (unlikely(adapter->state != VNIC_OPEN))
+ 		return IRQ_NONE;
+ 
+ 	adapter->rx_stats_buffers[scrq->scrq_num].interrupts++;
+ 
++>>>>>>> 09fb35ead58c (ibmvnic: Don't handle RX interrupts when not up.)
  	if (napi_schedule_prep(&adapter->napi[scrq->scrq_num])) {
  		disable_scrq_irq(adapter, scrq);
  		__napi_schedule(&adapter->napi[scrq->scrq_num]);
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
