fib_trie: Avoid NULL pointer if local table is not allocated

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Alexander Duyck <alexander.h.duyck@redhat.com>
commit 3c9e9f7320f0138497ef7879c0903246746e0ed3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3c9e9f73.failed

The function fib_unmerge assumed the local table had already been
allocated.  If that is not the case however when custom rules are applied
then this can result in a NULL pointer dereference.

In order to prevent this we must check the value of the local table pointer
and if it is NULL simply return 0 as there is no local table to separate
from the main.

Fixes: 0ddcf43d5 ("ipv4: FIB Local/MAIN table collapse")
	Reported-by: Madhu Challa <challa@noironetworks.com>
	Signed-off-by: Alexander Duyck <alexander.h.duyck@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3c9e9f7320f0138497ef7879c0903246746e0ed3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_frontend.c
diff --cc net/ipv4/fib_frontend.c
index a1edce8ca987,e5b6b0534c5f..000000000000
--- a/net/ipv4/fib_frontend.c
+++ b/net/ipv4/fib_frontend.c
@@@ -126,6 -129,51 +126,54 @@@ struct fib_table *fib_get_table(struct 
  }
  #endif /* CONFIG_IP_MULTIPLE_TABLES */
  
++<<<<<<< HEAD
++=======
+ static void fib_replace_table(struct net *net, struct fib_table *old,
+ 			      struct fib_table *new)
+ {
+ #ifdef CONFIG_IP_MULTIPLE_TABLES
+ 	switch (new->tb_id) {
+ 	case RT_TABLE_LOCAL:
+ 		rcu_assign_pointer(net->ipv4.fib_local, new);
+ 		break;
+ 	case RT_TABLE_MAIN:
+ 		rcu_assign_pointer(net->ipv4.fib_main, new);
+ 		break;
+ 	case RT_TABLE_DEFAULT:
+ 		rcu_assign_pointer(net->ipv4.fib_default, new);
+ 		break;
+ 	default:
+ 		break;
+ 	}
+ 
+ #endif
+ 	/* replace the old table in the hlist */
+ 	hlist_replace_rcu(&old->tb_hlist, &new->tb_hlist);
+ }
+ 
+ int fib_unmerge(struct net *net)
+ {
+ 	struct fib_table *old, *new;
+ 
+ 	/* attempt to fetch local table if it has been allocated */
+ 	old = fib_get_table(net, RT_TABLE_LOCAL);
+ 	if (!old)
+ 		return 0;
+ 
+ 	new = fib_trie_unmerge(old);
+ 	if (!new)
+ 		return -ENOMEM;
+ 
+ 	/* replace merged table with clean table */
+ 	if (new != old) {
+ 		fib_replace_table(net, old, new);
+ 		fib_free_table(old);
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 3c9e9f7320f0 (fib_trie: Avoid NULL pointer if local table is not allocated)
  static void fib_flush(struct net *net)
  {
  	int flushed = 0;
* Unmerged path net/ipv4/fib_frontend.c
