scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Cleanup NPIV host in target mode during config teardown (Himanshu Madhani) [1460030]
Rebuild_FUZZ: 95.52%
commit-author Quinn Tran <quinn.tran@cavium.com>
commit bdbe24de281e2952e6af6eee24bff66bf94b67d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/bdbe24de.failed

When we tear down the NPIV host configuration in target mode, the
qla_tgt struct was left dangling on the global list. This patch cleans
up link list and frees memory.

	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit bdbe24de281e2952e6af6eee24bff66bf94b67d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
#	drivers/scsi/qla2xxx/qla_target.h
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 4244f37d5d93,43113d52893b..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -1004,14 -1523,47 +1004,50 @@@ EXPORT_SYMBOL(qlt_stop_phase2)
  /* Called from qlt_remove_target() -> qla2x00_remove_one() */
  static void qlt_release(struct qla_tgt *tgt)
  {
++<<<<<<< HEAD
 +	struct qla_hw_data *ha = tgt->ha;
++=======
+ 	scsi_qla_host_t *vha = tgt->vha;
+ 	void *node;
+ 	u64 key = 0;
+ 	u16 i;
+ 	struct qla_qpair_hint *h;
+ 	struct qla_hw_data *ha = vha->hw;
++>>>>>>> bdbe24de281e (scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown)
  
 -	if ((vha->vha_tgt.qla_tgt != NULL) && !tgt->tgt_stop &&
 -	    !tgt->tgt_stopped)
 -		qlt_stop_phase1(tgt);
 -
 -	if ((vha->vha_tgt.qla_tgt != NULL) && !tgt->tgt_stopped)
 +	if ((ha->tgt.qla_tgt != NULL) && !tgt->tgt_stopped)
  		qlt_stop_phase2(tgt);
  
 -	for (i = 0; i < vha->hw->max_qpairs + 1; i++) {
 -		unsigned long flags;
 +	ha->tgt.qla_tgt = NULL;
  
++<<<<<<< HEAD
 +	ql_dbg(ql_dbg_tgt_mgt, tgt->vha, 0xf00d,
++=======
+ 		h = &tgt->qphints[i];
+ 		if (h->qpair) {
+ 			spin_lock_irqsave(h->qpair->qp_lock_ptr, flags);
+ 			list_del(&h->hint_elem);
+ 			spin_unlock_irqrestore(h->qpair->qp_lock_ptr, flags);
+ 			h->qpair = NULL;
+ 		}
+ 	}
+ 	kfree(tgt->qphints);
+ 	mutex_lock(&qla_tgt_mutex);
+ 	list_del(&vha->vha_tgt.qla_tgt->tgt_list_entry);
+ 	mutex_unlock(&qla_tgt_mutex);
+ 
+ 	btree_for_each_safe64(&tgt->lun_qpair_map, key, node)
+ 		btree_remove64(&tgt->lun_qpair_map, key);
+ 
+ 	btree_destroy64(&tgt->lun_qpair_map);
+ 
+ 	if (ha->tgt.tgt_ops && ha->tgt.tgt_ops->remove_target)
+ 		ha->tgt.tgt_ops->remove_target(vha);
+ 
+ 	vha->vha_tgt.qla_tgt = NULL;
+ 
+ 	ql_dbg(ql_dbg_tgt_mgt, vha, 0xf00d,
++>>>>>>> bdbe24de281e (scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown)
  	    "Release of tgt %p finished\n", tgt);
  
  	kfree(tgt);
@@@ -4339,12 -6171,16 +4375,22 @@@ int qlt_add_target(struct qla_hw_data *
  /* Must be called under tgt_host_action_mutex */
  int qlt_remove_target(struct qla_hw_data *ha, struct scsi_qla_host *vha)
  {
 -	if (!vha->vha_tgt.qla_tgt)
 +	if (!ha->tgt.qla_tgt)
  		return 0;
  
++<<<<<<< HEAD
 +	mutex_lock(&qla_tgt_mutex);
 +	list_del(&ha->tgt.qla_tgt->tgt_list_entry);
 +	mutex_unlock(&qla_tgt_mutex);
++=======
+ 	if (vha->fc_vport) {
+ 		qlt_release(vha->vha_tgt.qla_tgt);
+ 		return 0;
+ 	}
+ 
+ 	/* free left over qfull cmds */
+ 	qlt_init_term_exchange(vha);
++>>>>>>> bdbe24de281e (scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown)
  
  	ql_dbg(ql_dbg_tgt, vha, 0xe03c, "Unregistering target for host %ld(%p)",
  	    vha->host_no, ha);
diff --cc drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0,aba58d3848a6..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@@ -645,18 -690,22 +645,28 @@@ struct qla_tgt_func_tmpl 
  			uint32_t);
  	void (*free_cmd)(struct qla_tgt_cmd *);
  	void (*free_mcmd)(struct qla_tgt_mgmt_cmd *);
 -	void (*free_session)(struct fc_port *);
 +	void (*free_session)(struct qla_tgt_sess *);
  
  	int (*check_initiator_node_acl)(struct scsi_qla_host *, unsigned char *,
 -					struct fc_port *);
 -	void (*update_sess)(struct fc_port *, port_id_t, uint16_t, bool);
 -	struct fc_port *(*find_sess_by_loop_id)(struct scsi_qla_host *,
 +					void *, uint8_t *, uint16_t);
 +	void (*update_sess)(struct qla_tgt_sess *, port_id_t, uint16_t, bool);
 +	struct qla_tgt_sess *(*find_sess_by_loop_id)(struct scsi_qla_host *,
  						const uint16_t);
 -	struct fc_port *(*find_sess_by_s_id)(struct scsi_qla_host *,
 +	struct qla_tgt_sess *(*find_sess_by_s_id)(struct scsi_qla_host *,
  						const uint8_t *);
++<<<<<<< HEAD
 +	void (*clear_nacl_from_fcport_map)(struct qla_tgt_sess *);
 +	void (*put_sess)(struct qla_tgt_sess *);
 +	void (*shutdown_sess)(struct qla_tgt_sess *);
++=======
+ 	void (*clear_nacl_from_fcport_map)(struct fc_port *);
+ 	void (*put_sess)(struct fc_port *);
+ 	void (*shutdown_sess)(struct fc_port *);
+ 	int (*get_dif_tags)(struct qla_tgt_cmd *cmd, uint16_t *pfw_prot_opts);
+ 	int (*chk_dif_tags)(uint32_t tag);
+ 	void (*add_target)(struct scsi_qla_host *);
+ 	void (*remove_target)(struct scsi_qla_host *);
++>>>>>>> bdbe24de281e (scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown)
  };
  
  int qla2x00_wait_for_hba_online(struct scsi_qla_host *);
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
* Unmerged path drivers/scsi/qla2xxx/qla_target.h
