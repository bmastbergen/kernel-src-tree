KVM: LAPIC: introduce kvm_get_lapic_target_expiration_tsc()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Wanpeng Li <wanpeng.li@hotmail.com>
commit 498f8162191683d9068fd7e14909484027dee194
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/498f8162.failed

Introdce kvm_get_lapic_target_expiration_tsc() to get APIC Timer target
deadline tsc.

	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Cc: Yunhong Jiang <yunhong.jiang@intel.com>
	Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit 498f8162191683d9068fd7e14909484027dee194)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index db49db518a51,83990ad3710e..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -2787,6 -2792,10 +2787,13 @@@ void kvm_arch_vcpu_load(struct kvm_vcp
  			kvm_vcpu_write_tsc_offset(vcpu, offset);
  			vcpu->arch.tsc_catchup = 1;
  		}
++<<<<<<< HEAD
++=======
+ 		if (kvm_lapic_hv_timer_in_use(vcpu) &&
+ 				kvm_x86_ops->set_hv_timer(vcpu,
+ 					kvm_get_lapic_target_expiration_tsc(vcpu)))
+ 			kvm_lapic_switch_to_sw_timer(vcpu);
++>>>>>>> 498f81621916 (KVM: LAPIC: introduce kvm_get_lapic_target_expiration_tsc())
  		/*
  		 * On a host with synchronized TSC, there is no need to update
  		 * kvmclock on vcpu->cpu migration
diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index 0e8704ed991e..5d8de3f46546 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1650,6 +1650,15 @@ void kvm_free_lapic(struct kvm_vcpu *vcpu)
  * LAPIC interface
  *----------------------------------------------------------------------
  */
+u64 kvm_get_lapic_target_expiration_tsc(struct kvm_vcpu *vcpu)
+{
+	struct kvm_lapic *apic = vcpu->arch.apic;
+
+	if (!lapic_in_kernel(vcpu))
+		return 0;
+
+	return apic->lapic_timer.tscdeadline;
+}
 
 u64 kvm_get_lapic_tscdeadline_msr(struct kvm_vcpu *vcpu)
 {
diff --git a/arch/x86/kvm/lapic.h b/arch/x86/kvm/lapic.h
index 5761180667d2..645a6f623e2b 100644
--- a/arch/x86/kvm/lapic.h
+++ b/arch/x86/kvm/lapic.h
@@ -84,6 +84,7 @@ int kvm_apic_get_state(struct kvm_vcpu *vcpu, struct kvm_lapic_state *s);
 int kvm_apic_set_state(struct kvm_vcpu *vcpu, struct kvm_lapic_state *s);
 int kvm_lapic_find_highest_irr(struct kvm_vcpu *vcpu);
 
+u64 kvm_get_lapic_target_expiration_tsc(struct kvm_vcpu *vcpu);
 u64 kvm_get_lapic_tscdeadline_msr(struct kvm_vcpu *vcpu);
 void kvm_set_lapic_tscdeadline_msr(struct kvm_vcpu *vcpu, u64 data);
 
* Unmerged path arch/x86/kvm/x86.c
