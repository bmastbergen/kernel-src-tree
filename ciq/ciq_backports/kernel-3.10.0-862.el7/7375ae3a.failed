compiler-gcc.h: Introduce __nostackprotector function attribute

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Tom Lendacky <thomas.lendacky@amd.com>
commit 7375ae3a0b79ea072f4c672039f08f5db633b9e1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7375ae3a.failed

Create a new function attribute, __nostackprotector, that can used to turn off
stack protection on a per function basis.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Alexander Potapenko <glider@google.com>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brijesh Singh <brijesh.singh@amd.com>
	Cc: Dave Young <dyoung@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Cc: Larry Woodman <lwoodman@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Michael S. Tsirkin <mst@redhat.com>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Toshimitsu Kani <toshi.kani@hpe.com>
	Cc: kasan-dev@googlegroups.com
	Cc: kvm@vger.kernel.org
	Cc: linux-arch@vger.kernel.org
	Cc: linux-doc@vger.kernel.org
	Cc: linux-efi@vger.kernel.org
	Cc: linux-mm@kvack.org
Link: http://lkml.kernel.org/r/0576fd5c74440ad0250f16ac6609ecf587812456.1500319216.git.thomas.lendacky@amd.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 7375ae3a0b79ea072f4c672039f08f5db633b9e1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/compiler.h
diff --cc include/linux/compiler.h
index ffac0d208e75,3f8c88e29a46..000000000000
--- a/include/linux/compiler.h
+++ b/include/linux/compiler.h
@@@ -359,6 -470,18 +359,21 @@@ static __always_inline void __write_onc
  #define __visible
  #endif
  
++<<<<<<< HEAD
++=======
+ #ifndef __nostackprotector
+ # define __nostackprotector
+ #endif
+ 
+ /*
+  * Assume alignment of return value.
+  */
+ #ifndef __assume_aligned
+ #define __assume_aligned(a, ...)
+ #endif
+ 
+ 
++>>>>>>> 7375ae3a0b79 (compiler-gcc.h: Introduce __nostackprotector function attribute)
  /* Are two types/vars the same type (ignoring qualifiers)? */
  #ifndef __same_type
  # define __same_type(a, b) __builtin_types_compatible_p(typeof(a), typeof(b))
diff --git a/include/linux/compiler-gcc.h b/include/linux/compiler-gcc.h
index c6da7445d898..8c27ce12b4f2 100644
--- a/include/linux/compiler-gcc.h
+++ b/include/linux/compiler-gcc.h
@@ -159,6 +159,8 @@
 
 #if GCC_VERSION >= 40100 && GCC_VERSION < 40600
 # define __compiletime_object_size(obj) __builtin_object_size(obj, 0)
+
+#define __nostackprotector	__attribute__((__optimize__("no-stack-protector")))
 #endif
 
 #if GCC_VERSION >= 40300
* Unmerged path include/linux/compiler.h
