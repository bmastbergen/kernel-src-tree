IB/hfi1: Move structure definitions from user_exp_rcv.c to user_exp_rcv.h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Harish Chegondi <harish.chegondi@intel.com>
commit 637f4600a8d3be44146ad7fbb5188484c3b0a1d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/637f4600.failed

Clean up user_exp_rcv.c file by moving structure definitions into header
file user_exp_rcv.h. Since these structure definitions depend on the
structure definitions in mmu_rb.h, move #include "mmu_rb.h" above
the include "user_exp_rcv.h" or include of header files that include
user_exp_rcv.h

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Harish Chegondi <harish.chegondi@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 637f4600a8d3be44146ad7fbb5188484c3b0a1d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/user_exp_rcv.c
#	drivers/infiniband/hw/hfi1/user_exp_rcv.h
diff --cc drivers/infiniband/hw/hfi1/user_exp_rcv.c
index c7f13df471c4,6f6c14df383e..000000000000
--- a/drivers/infiniband/hw/hfi1/user_exp_rcv.c
+++ b/drivers/infiniband/hw/hfi1/user_exp_rcv.c
@@@ -47,55 -47,30 +47,59 @@@
  #include <asm/page.h>
  #include <linux/string.h>
  
+ #include "mmu_rb.h"
  #include "user_exp_rcv.h"
  #include "trace.h"
++<<<<<<< HEAD
 +#include "mmu_rb.h"
  
 -static void unlock_exp_tids(struct hfi1_ctxtdata *uctxt,
 -			    struct exp_tid_set *set,
 -			    struct hfi1_filedata *fd);
 -static u32 find_phys_blocks(struct tid_user_buf *tidbuf, unsigned int npages);
 -static int set_rcvarray_entry(struct hfi1_filedata *fd,
 -			      struct tid_user_buf *tbuf,
 -			      u32 rcventry, struct tid_group *grp,
 -			      u16 pageidx, unsigned int npages);
 -static int tid_rb_insert(void *arg, struct mmu_rb_node *node);
 +struct tid_group {
 +	struct list_head list;
 +	unsigned base;
 +	u8 size;
 +	u8 used;
 +	u8 map;
 +};
 +
 +struct tid_rb_node {
 +	struct mmu_rb_node mmu;
 +	unsigned long phys;
 +	struct tid_group *grp;
 +	u32 rcventry;
 +	dma_addr_t dma_addr;
 +	bool freed;
 +	unsigned npages;
 +	struct page *pages[0];
 +};
 +
 +struct tid_pageset {
 +	u16 idx;
 +	u16 count;
 +};
++=======
++>>>>>>> 637f4600a8d3 (IB/hfi1: Move structure definitions from user_exp_rcv.c to user_exp_rcv.h)
 +
 +#define EXP_TID_SET_EMPTY(set) (set.count == 0 && list_empty(&set.list))
 +
 +#define num_user_pages(vaddr, len)				       \
 +	(1 + (((((unsigned long)(vaddr) +			       \
 +		 (unsigned long)(len) - 1) & PAGE_MASK) -	       \
 +	       ((unsigned long)vaddr & PAGE_MASK)) >> PAGE_SHIFT))
 +
 +static void unlock_exp_tids(struct hfi1_ctxtdata *, struct exp_tid_set *,
 +			    struct hfi1_filedata *);
 +static u32 find_phys_blocks(struct page **, unsigned, struct tid_pageset *);
 +static int set_rcvarray_entry(struct file *, unsigned long, u32,
 +			      struct tid_group *, struct page **, unsigned);
 +static int tid_rb_insert(void *, struct mmu_rb_node *);
  static void cacheless_tid_rb_remove(struct hfi1_filedata *fdata,
  				    struct tid_rb_node *tnode);
 -static void tid_rb_remove(void *arg, struct mmu_rb_node *node);
 -static int tid_rb_invalidate(void *arg, struct mmu_rb_node *mnode);
 -static int program_rcvarray(struct hfi1_filedata *fd, struct tid_user_buf *,
 -			    struct tid_group *grp,
 -			    unsigned int start, u16 count,
 -			    u32 *tidlist, unsigned int *tididx,
 -			    unsigned int *pmapped);
 -static int unprogram_rcvarray(struct hfi1_filedata *fd, u32 tidinfo,
 -			      struct tid_group **grp);
 +static void tid_rb_remove(void *, struct mmu_rb_node *);
 +static int tid_rb_invalidate(void *, struct mmu_rb_node *);
 +static int program_rcvarray(struct file *, unsigned long, struct tid_group *,
 +			    struct tid_pageset *, unsigned, u16, struct page **,
 +			    u32 *, unsigned *, unsigned *);
 +static int unprogram_rcvarray(struct file *, u32, struct tid_group **);
  static void clear_tid_node(struct hfi1_filedata *fd, struct tid_rb_node *node);
  
  static struct mmu_rb_ops tid_rb_ops = {
diff --cc drivers/infiniband/hw/hfi1/user_exp_rcv.h
index d1d7d3d3bd44,e383cc01a2bf..000000000000
--- a/drivers/infiniband/hw/hfi1/user_exp_rcv.h
+++ b/drivers/infiniband/hw/hfi1/user_exp_rcv.h
@@@ -49,32 -49,50 +49,78 @@@
  
  #include "hfi.h"
  
 -#include "exp_rcv.h"
 +#define EXP_TID_TIDLEN_MASK   0x7FFULL
 +#define EXP_TID_TIDLEN_SHIFT  0
 +#define EXP_TID_TIDCTRL_MASK  0x3ULL
 +#define EXP_TID_TIDCTRL_SHIFT 20
 +#define EXP_TID_TIDIDX_MASK   0x3FFULL
 +#define EXP_TID_TIDIDX_SHIFT  22
 +#define EXP_TID_GET(tid, field)	\
 +	(((tid) >> EXP_TID_TID##field##_SHIFT) & EXP_TID_TID##field##_MASK)
  
++<<<<<<< HEAD
 +#define EXP_TID_SET(field, value)			\
 +	(((value) & EXP_TID_TID##field##_MASK) <<	\
 +	 EXP_TID_TID##field##_SHIFT)
 +#define EXP_TID_CLEAR(tid, field) ({					\
 +		(tid) &= ~(EXP_TID_TID##field##_MASK <<			\
 +			   EXP_TID_TID##field##_SHIFT);			\
 +		})
 +#define EXP_TID_RESET(tid, field, value) do {				\
 +		EXP_TID_CLEAR(tid, field);				\
 +		(tid) |= EXP_TID_SET(field, (value));			\
 +	} while (0)
 +
 +void hfi1_user_exp_rcv_grp_free(struct hfi1_ctxtdata *uctxt);
 +int hfi1_user_exp_rcv_init(struct file *);
 +int hfi1_user_exp_rcv_free(struct hfi1_filedata *);
 +int hfi1_user_exp_rcv_setup(struct file *, struct hfi1_tid_info *);
 +int hfi1_user_exp_rcv_clear(struct file *, struct hfi1_tid_info *);
 +int hfi1_user_exp_rcv_invalid(struct file *, struct hfi1_tid_info *);
++=======
+ struct tid_pageset {
+ 	u16 idx;
+ 	u16 count;
+ };
+ 
+ struct tid_user_buf {
+ 	unsigned long vaddr;
+ 	unsigned long length;
+ 	unsigned int npages;
+ 	struct page **pages;
+ 	struct tid_pageset *psets;
+ 	unsigned int n_psets;
+ };
+ 
+ struct tid_rb_node {
+ 	struct mmu_rb_node mmu;
+ 	unsigned long phys;
+ 	struct tid_group *grp;
+ 	u32 rcventry;
+ 	dma_addr_t dma_addr;
+ 	bool freed;
+ 	unsigned int npages;
+ 	struct page *pages[0];
+ };
+ 
+ static inline int num_user_pages(unsigned long addr,
+ 				 unsigned long len)
+ {
+ 	const unsigned long spage = addr & PAGE_MASK;
+ 	const unsigned long epage = (addr + len - 1) & PAGE_MASK;
+ 
+ 	return 1 + ((epage - spage) >> PAGE_SHIFT);
+ }
+ 
+ int hfi1_user_exp_rcv_init(struct hfi1_filedata *fd,
+ 			   struct hfi1_ctxtdata *uctxt);
+ void hfi1_user_exp_rcv_free(struct hfi1_filedata *fd);
+ int hfi1_user_exp_rcv_setup(struct hfi1_filedata *fd,
+ 			    struct hfi1_tid_info *tinfo);
+ int hfi1_user_exp_rcv_clear(struct hfi1_filedata *fd,
+ 			    struct hfi1_tid_info *tinfo);
+ int hfi1_user_exp_rcv_invalid(struct hfi1_filedata *fd,
+ 			      struct hfi1_tid_info *tinfo);
++>>>>>>> 637f4600a8d3 (IB/hfi1: Move structure definitions from user_exp_rcv.c to user_exp_rcv.h)
  
  #endif /* _HFI1_USER_EXP_RCV_H */
diff --git a/drivers/infiniband/hw/hfi1/file_ops.c b/drivers/infiniband/hw/hfi1/file_ops.c
index 8df16f5d7e38..7fadc76da834 100644
--- a/drivers/infiniband/hw/hfi1/file_ops.c
+++ b/drivers/infiniband/hw/hfi1/file_ops.c
@@ -57,10 +57,10 @@
 #include "device.h"
 #include "common.h"
 #include "trace.h"
+#include "mmu_rb.h"
 #include "user_sdma.h"
 #include "user_exp_rcv.h"
 #include "aspm.h"
-#include "mmu_rb.h"
 
 #undef pr_fmt
 #define pr_fmt(fmt) DRIVER_NAME ": " fmt
* Unmerged path drivers/infiniband/hw/hfi1/user_exp_rcv.c
* Unmerged path drivers/infiniband/hw/hfi1/user_exp_rcv.h
diff --git a/drivers/infiniband/hw/hfi1/user_sdma.c b/drivers/infiniband/hw/hfi1/user_sdma.c
index b5260e7006cc..dd4f570113e2 100644
--- a/drivers/infiniband/hw/hfi1/user_sdma.c
+++ b/drivers/infiniband/hw/hfi1/user_sdma.c
@@ -64,11 +64,11 @@
 
 #include "hfi.h"
 #include "sdma.h"
+#include "mmu_rb.h"
 #include "user_sdma.h"
 #include "verbs.h"  /* for the headers */
 #include "common.h" /* for struct hfi1_tid_info */
 #include "trace.h"
-#include "mmu_rb.h"
 
 static uint hfi1_sdma_comp_ring_size = 128;
 module_param_named(sdma_comp_size, hfi1_sdma_comp_ring_size, uint, S_IRUGO);
