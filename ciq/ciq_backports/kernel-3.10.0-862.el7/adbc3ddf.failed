GFS2: flush the log and all pages for jdata as we do for WB_SYNC_ALL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit adbc3ddf28ad9c2742fb9fc82e2aacfd414a16c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/adbc3ddf.failed

In function gfs2_write_inode, starting with patch a9185b41a4f84, we
only flush the log and call filemap_fdatawait if we're passed in a
wbc sync_mode of WB_SYNC_ALL. We also need to do these things if
we're evicting a jdata inode, because we might have jdata pages
still attached to bufdata descriptors that need to be revoked, but
by the time it gets to evict() it's too late to start a new
transaction. This patch changes it to treat jdata inodes as if
WB_SYNC_ALL had been specified.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Acked-by: Abhijith Das <adas@redhat.com>
(cherry picked from commit adbc3ddf28ad9c2742fb9fc82e2aacfd414a16c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/super.c
diff --cc fs/gfs2/super.c
index 4b3d1996eead,9cb5c9a97d69..000000000000
--- a/fs/gfs2/super.c
+++ b/fs/gfs2/super.c
@@@ -755,12 -752,13 +755,19 @@@ static int gfs2_write_inode(struct inod
  	struct gfs2_inode *ip = GFS2_I(inode);
  	struct gfs2_sbd *sdp = GFS2_SB(inode);
  	struct address_space *metamapping = gfs2_glock2aspace(ip->i_gl);
 -	struct backing_dev_info *bdi = inode_to_bdi(metamapping->host);
 +	struct backing_dev_info *bdi = metamapping->backing_dev_info;
  	int ret = 0;
+ 	bool flush_all = (wbc->sync_mode == WB_SYNC_ALL || gfs2_is_jdata(ip));
  
++<<<<<<< HEAD
 +	if (wbc->sync_mode == WB_SYNC_ALL)
 +		gfs2_log_flush(GFS2_SB(inode), ip->i_gl);
 +	if (bdi->dirty_exceeded)
++=======
+ 	if (flush_all)
+ 		gfs2_log_flush(GFS2_SB(inode), ip->i_gl, NORMAL_FLUSH);
+ 	if (bdi->wb.dirty_exceeded)
++>>>>>>> adbc3ddf28ad (GFS2: flush the log and all pages for jdata as we do for WB_SYNC_ALL)
  		gfs2_ail1_flush(sdp, wbc);
  	else
  		filemap_fdatawrite(metamapping);
* Unmerged path fs/gfs2/super.c
