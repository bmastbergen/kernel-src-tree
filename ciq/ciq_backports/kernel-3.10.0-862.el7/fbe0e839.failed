futex: Prevent overflow by strengthen input validation

jira LE-1907
cve CVE-2018-6927
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Li Jinyue <lijinyue@huawei.com>
commit fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/fbe0e839.failed

UBSAN reports signed integer overflow in kernel/futex.c:

 UBSAN: Undefined behaviour in kernel/futex.c:2041:18
 signed integer overflow:
 0 - -2147483648 cannot be represented in type 'int'

Add a sanity check to catch negative values of nr_wake and nr_requeue.

	Signed-off-by: Li Jinyue <lijinyue@huawei.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: peterz@infradead.org
	Cc: dvhart@infradead.org
	Cc: stable@vger.kernel.org
Link: https://lkml.kernel.org/r/1513242294-31786-1-git-send-email-lijinyue@huawei.com

(cherry picked from commit fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/futex.c
diff --cc kernel/futex.c
index 96b663cd803c,8c5424dd5924..000000000000
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@@ -1523,7 -1876,19 +1523,23 @@@ static int futex_requeue(u32 __user *ua
  	struct futex_pi_state *pi_state = NULL;
  	struct futex_hash_bucket *hb1, *hb2;
  	struct futex_q *this, *next;
++<<<<<<< HEAD
 +	WAKE_Q(wake_q);
++=======
+ 	DEFINE_WAKE_Q(wake_q);
+ 
+ 	if (nr_wake < 0 || nr_requeue < 0)
+ 		return -EINVAL;
+ 
+ 	/*
+ 	 * When PI not supported: return -ENOSYS if requeue_pi is true,
+ 	 * consequently the compiler knows requeue_pi is always false past
+ 	 * this point which will optimize away all the conditional code
+ 	 * further down.
+ 	 */
+ 	if (!IS_ENABLED(CONFIG_FUTEX_PI) && requeue_pi)
+ 		return -ENOSYS;
++>>>>>>> fbe0e839d1e2 (futex: Prevent overflow by strengthen input validation)
  
  	if (requeue_pi) {
  		/*
* Unmerged path kernel/futex.c
