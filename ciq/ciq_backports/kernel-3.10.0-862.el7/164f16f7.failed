net/mlx5e: IPSec, Add IPSec ethtool stats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: IPSec, Add IPSec ethtool stats (Kamal Heib) [1456677 1456694]
Rebuild_FUZZ: 94.87%
commit-author Ilan Tayari <ilant@mellanox.com>
commit 164f16f7021406795729916e100c7edd53ae954f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/164f16f7.failed

Add Innova IPSec SBU counters to the ethtool -S stats.
Add IPSec offload error counters to the ethtool -S stats.

	Signed-off-by: Ilan Tayari <ilant@mellanox.com>
	Reviewed-by: Boris Pismenny <borisp@mellanox.com>
	Reviewed-by: Gal Pressman <galp@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 164f16f7021406795729916e100c7edd53ae954f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/Makefile
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/ipsec_stats.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/Makefile
index 9e644615f07a,ca367445f864..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/Makefile
+++ b/drivers/net/ethernet/mellanox/mlx5/core/Makefile
@@@ -12,4 -18,7 +12,11 @@@ mlx5_core-$(CONFIG_MLX5_CORE_EN) += wq.
  
  mlx5_core-$(CONFIG_MLX5_CORE_EN_DCB) +=  en_dcbnl.o
  
++<<<<<<< HEAD
 +mlx5_core-$(CONFIG_MLX5_CORE_IPOIB) += ipoib.o
++=======
+ mlx5_core-$(CONFIG_MLX5_CORE_IPOIB) += ipoib/ipoib.o ipoib/ethtool.o
+ 
+ mlx5_core-$(CONFIG_MLX5_EN_IPSEC) += en_accel/ipsec.o en_accel/ipsec_rxtx.o \
+ 		en_accel/ipsec_stats.o
++>>>>>>> 164f16f70214 (net/mlx5e: IPSec, Add IPSec ethtool stats)
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 5a367b6ed375,a09b11f467a4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -314,14 -327,15 +314,22 @@@ static void mlx5e_update_pcie_counters(
  	out = pcie_stats->pcie_perf_counters;
  	MLX5_SET(mpcnt_reg, in, grp, MLX5_PCIE_PERFORMANCE_COUNTERS_GROUP);
  	mlx5_core_access_reg(mdev, in, sz, out, sz, MLX5_REG_MPCNT, 0, 0);
 +
 +	kvfree(in);
  }
  
 -void mlx5e_update_stats(struct mlx5e_priv *priv, bool full)
 +void mlx5e_update_stats(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	mlx5e_update_pcie_counters(priv);
 +	mlx5e_update_pport_counters(priv);
++=======
+ 	if (full) {
+ 		mlx5e_update_pcie_counters(priv);
+ 		mlx5e_ipsec_update_stats(priv);
+ 	}
+ 	mlx5e_update_pport_counters(priv, full);
++>>>>>>> 164f16f70214 (net/mlx5e: IPSec, Add IPSec ethtool stats)
  	mlx5e_update_vport_counters(priv);
  	mlx5e_update_q_counter(priv);
  	mlx5e_update_sw_counters(priv);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipsec_stats.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/Makefile
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 869954ad016e..97e15ce6a850 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@ -31,6 +31,7 @@
  */
 
 #include "en.h"
+#include "en_accel/ipsec.h"
 
 static void mlx5e_get_drvinfo(struct net_device *dev,
 			      struct ethtool_drvinfo *drvinfo)
@@ -183,7 +184,8 @@ static int mlx5e_get_sset_count(struct net_device *dev, int sset)
 		       MLX5E_NUM_SQ_STATS(priv) +
 		       MLX5E_NUM_PFC_COUNTERS(priv) +
 		       ARRAY_SIZE(mlx5e_pme_status_desc) +
-		       ARRAY_SIZE(mlx5e_pme_error_desc);
+		       ARRAY_SIZE(mlx5e_pme_error_desc) +
+		       mlx5e_ipsec_get_count(priv);
 
 	case ETH_SS_PRIV_FLAGS:
 		return ARRAY_SIZE(mlx5e_priv_flags);
@@ -265,6 +267,9 @@ static void mlx5e_fill_stats_strings(struct mlx5e_priv *priv, uint8_t *data)
 	for (i = 0; i < ARRAY_SIZE(mlx5e_pme_error_desc); i++)
 		strcpy(data + (idx++) * ETH_GSTRING_LEN, mlx5e_pme_error_desc[i].format);
 
+	/* IPSec counters */
+	idx += mlx5e_ipsec_get_strings(priv, data + idx * ETH_GSTRING_LEN);
+
 	if (!test_bit(MLX5E_STATE_OPENED, &priv->state))
 		return;
 
@@ -385,6 +390,9 @@ static void mlx5e_get_ethtool_stats(struct net_device *dev,
 		data[idx++] = MLX5E_READ_CTR64_CPU(mlx5_priv->pme_stats.error_counters,
 						   mlx5e_pme_error_desc, i);
 
+	/* IPSec counters */
+	idx += mlx5e_ipsec_get_stats(priv, data + idx);
+
 	if (!test_bit(MLX5E_STATE_OPENED, &priv->state))
 		return;
 
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipsec_stats.c
