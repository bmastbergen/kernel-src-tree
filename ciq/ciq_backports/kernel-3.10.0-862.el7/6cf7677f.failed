block: move req_set_nomerge to blk.h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [block] move req_set_nomerge to blk.h (Ming Lei) [1458104]
Rebuild_FUZZ: 89.23%
commit-author Christoph Hellwig <hch@lst.de>
commit 6cf7677f1a94546e472658290b3b8bdbb16cc045
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6cf7677f.failed

This makes it available outside of blk-merge.c, and inlining such a trivial
helper seems pretty useful to start with.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 6cf7677f1a94546e472658290b3b8bdbb16cc045)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-merge.c
diff --cc block/blk-merge.c
index 0e8b7f203168,c956d9e7aafd..000000000000
--- a/block/blk-merge.c
+++ b/block/blk-merge.c
@@@ -228,43 -482,6 +228,46 @@@ int blk_rq_map_sg(struct request_queue 
  }
  EXPORT_SYMBOL(blk_rq_map_sg);
  
++<<<<<<< HEAD
 +/**
 + * blk_bio_map_sg - map a bio to a scatterlist
 + * @q: request_queue in question
 + * @bio: bio being mapped
 + * @sglist: scatterlist being mapped
 + *
 + * Note:
 + *    Caller must make sure sg can hold bio->bi_phys_segments entries
 + *
 + * Will return the number of sg entries setup
 + */
 +int blk_bio_map_sg(struct request_queue *q, struct bio *bio,
 +		   struct scatterlist *sglist)
 +{
 +	struct bio_vec *bvec, *bvprv;
 +	struct scatterlist *sg;
 +	int nsegs, cluster;
 +	unsigned long i;
 +
 +	nsegs = 0;
 +	cluster = blk_queue_cluster(q);
 +
 +	bvprv = NULL;
 +	sg = NULL;
 +	bio_for_each_segment(bvec, bio, i) {
 +		__blk_segment_map_sg(q, bvec, sglist, &bvprv, &sg,
 +				     &nsegs, &cluster);
 +	} /* segments in bio */
 +
 +	if (sg)
 +		sg_mark_end(sg);
 +
 +	BUG_ON(bio->bi_phys_segments && nsegs > bio->bi_phys_segments);
 +	return nsegs;
 +}
 +EXPORT_SYMBOL(blk_bio_map_sg);
 +
++=======
++>>>>>>> 6cf7677f1a94 (block: move req_set_nomerge to blk.h)
  static inline int ll_new_hw_segment(struct request_queue *q,
  				    struct request *req,
  				    struct bio *bio)
* Unmerged path block/blk-merge.c
diff --git a/block/blk.h b/block/blk.h
index 4d1760d40372..e75c20d26116 100644
--- a/block/blk.h
+++ b/block/blk.h
@@ -261,6 +261,13 @@ static inline int blk_do_io_stat(struct request *rq)
 		(rq->cmd_type == REQ_TYPE_FS);
 }
 
+static inline void req_set_nomerge(struct request_queue *q, struct request *req)
+{
+	req->cmd_flags |= REQ_NOMERGE;
+	if (req == q->last_merge)
+		q->last_merge = NULL;
+}
+
 /*
  * Internal io_context interface
  */
