iw_cxgb4: change pr_debug to appropriate log level

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bharat Potnuri <bharat@chelsio.com>
commit 4d45b7573ba74a278652b0566d779c2aa7ea3df1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4d45b757.failed

Error logs of iw_cxgb4 needs to be printed by default. This patch
changes the necessary pr_debug() to appropriate pr_<log level>.

	Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 4d45b7573ba74a278652b0566d779c2aa7ea3df1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/cm.c
#	drivers/infiniband/hw/cxgb4/ev.c
#	drivers/infiniband/hw/cxgb4/iw_cxgb4.h
#	drivers/infiniband/hw/cxgb4/qp.c
#	drivers/infiniband/hw/cxgb4/t4.h
diff --cc drivers/infiniband/hw/cxgb4/cm.c
index 9b70d4724eb7,01e3aba19fe9..000000000000
--- a/drivers/infiniband/hw/cxgb4/cm.c
+++ b/drivers/infiniband/hw/cxgb4/cm.c
@@@ -212,7 -212,7 +212,11 @@@ static int c4iw_l2t_send(struct c4iw_rd
  
  	if (c4iw_fatal_error(rdev)) {
  		kfree_skb(skb);
++<<<<<<< HEAD
 +		PDBG("%s - device in error state - dropping\n", __func__);
++=======
+ 		pr_err("%s - device in error state - dropping\n", __func__);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		return -EIO;
  	}
  	error = cxgb4_l2t_send(rdev->lldi.ports[0], skb, l2e);
@@@ -229,7 -229,7 +233,11 @@@ int c4iw_ofld_send(struct c4iw_rdev *rd
  
  	if (c4iw_fatal_error(rdev)) {
  		kfree_skb(skb);
++<<<<<<< HEAD
 +		PDBG("%s - device in error state - dropping\n", __func__);
++=======
+ 		pr_err("%s - device in error state - dropping\n", __func__);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		return -EIO;
  	}
  	error = cxgb4_ofld_send(rdev->lldi.ports[0], skb);
@@@ -263,10 -263,10 +271,17 @@@ static void set_emss(struct c4iw_ep *ep
  	if (ep->emss < 128)
  		ep->emss = 128;
  	if (ep->emss & 7)
++<<<<<<< HEAD
 +		PDBG("Warning: misaligned mtu idx %u mss %u emss=%u\n",
 +		     TCPOPT_MSS_G(opt), ep->mss, ep->emss);
 +	PDBG("%s mss_idx %u mss %u emss=%u\n", __func__, TCPOPT_MSS_G(opt),
 +	     ep->mss, ep->emss);
++=======
+ 		pr_warn("Warning: misaligned mtu idx %u mss %u emss=%u\n",
+ 			TCPOPT_MSS_G(opt), ep->mss, ep->emss);
+ 	pr_debug("mss_idx %u mss %u emss=%u\n", TCPOPT_MSS_G(opt), ep->mss,
+ 		 ep->emss);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  }
  
  static enum c4iw_ep_state state_read(struct c4iw_ep_common *epc)
@@@ -2320,11 -2314,11 +2335,15 @@@ static int pass_open_rpl(struct c4iw_de
  	struct c4iw_listen_ep *ep = get_ep_from_stid(dev, stid);
  
  	if (!ep) {
++<<<<<<< HEAD
 +		PDBG("%s stid %d lookup failure!\n", __func__, stid);
++=======
+ 		pr_warn("%s stid %d lookup failure!\n", __func__, stid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		goto out;
  	}
 -	pr_debug("ep %p status %d error %d\n", ep,
 -		 rpl->status, status2errno(rpl->status));
 +	PDBG("%s ep %p status %d error %d\n", __func__, ep,
 +	     rpl->status, status2errno(rpl->status));
  	c4iw_wake_up(&ep->com.wr_wait, status2errno(rpl->status));
  	c4iw_put_ep(&ep->com);
  out:
@@@ -2337,9 -2331,14 +2356,17 @@@ static int close_listsrv_rpl(struct c4i
  	unsigned int stid = GET_TID(rpl);
  	struct c4iw_listen_ep *ep = get_ep_from_stid(dev, stid);
  
++<<<<<<< HEAD
 +	PDBG("%s ep %p\n", __func__, ep);
++=======
+ 	if (!ep) {
+ 		pr_warn("%s stid %d lookup failure!\n", __func__, stid);
+ 		goto out;
+ 	}
+ 	pr_debug("ep %p\n", ep);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  	c4iw_wake_up(&ep->com.wr_wait, status2errno(rpl->status));
  	c4iw_put_ep(&ep->com);
 -out:
  	return 0;
  }
  
@@@ -2465,12 -2464,13 +2492,21 @@@ static int pass_accept_req(struct c4iw_
  
  	parent_ep = (struct c4iw_ep *)get_ep_from_stid(dev, stid);
  	if (!parent_ep) {
++<<<<<<< HEAD
 +		PDBG("%s connect request on invalid stid %d\n", __func__, stid);
++=======
+ 		pr_err("%s connect request on invalid stid %d\n",
+ 		       __func__, stid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		goto reject;
  	}
  
  	if (state_read(&parent_ep->com) != LISTEN) {
++<<<<<<< HEAD
 +		PDBG("%s - listening ep not in LISTEN\n", __func__);
++=======
+ 		pr_err("%s - listening ep not in LISTEN\n", __func__);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		goto reject;
  	}
  
@@@ -2742,9 -2739,9 +2778,15 @@@ static int peer_abort(struct c4iw_dev *
  		return 0;
  
  	if (cxgb_is_neg_adv(req->status)) {
++<<<<<<< HEAD
 +		PDBG("%s Negative advice on abort- tid %u status %d (%s)\n",
 +		     __func__, ep->hwtid, req->status,
 +		     neg_adv_str(req->status));
++=======
+ 		pr_warn("%s Negative advice on abort- tid %u status %d (%s)\n",
+ 			__func__, ep->hwtid, req->status,
+ 			neg_adv_str(req->status));
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		ep->stats.abort_neg_adv++;
  		mutex_lock(&dev->rdev.stats.lock);
  		dev->rdev.stats.neg_adv++;
@@@ -2784,8 -2781,8 +2826,13 @@@
  			 * do some housekeeping so as to re-initiate the
  			 * connection
  			 */
++<<<<<<< HEAD
 +			PDBG("%s: mpa_rev=%d. Retrying with mpav1\n", __func__,
 +			     mpa_rev);
++=======
+ 			pr_info("%s: mpa_rev=%d. Retrying with mpav1\n",
+ 				__func__, mpa_rev);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  			ep->retry_with_mpa_v1 = 1;
  		}
  		break;
@@@ -2813,7 -2808,7 +2860,11 @@@
  	case ABORTING:
  		break;
  	case DEAD:
++<<<<<<< HEAD
 +		PDBG("%s PEER_ABORT IN DEAD STATE!!!!\n", __func__);
++=======
+ 		pr_warn("%s PEER_ABORT IN DEAD STATE!!!!\n", __func__);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		mutex_unlock(&ep->com.mutex);
  		goto deref_ep;
  	default:
@@@ -3223,7 -3218,7 +3274,11 @@@ int c4iw_connect(struct iw_cm_id *cm_id
  	ep->com.dev = dev;
  	ep->com.qp = get_qhp(dev, conn_param->qpn);
  	if (!ep->com.qp) {
++<<<<<<< HEAD
 +		PDBG("%s qpn 0x%x not found!\n", __func__, conn_param->qpn);
++=======
+ 		pr_warn("%s qpn 0x%x not found!\n", __func__, conn_param->qpn);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		err = -EINVAL;
  		goto fail2;
  	}
@@@ -3572,8 -3571,8 +3627,13 @@@ int c4iw_ep_disconnect(struct c4iw_ep *
  	case MORIBUND:
  	case ABORTING:
  	case DEAD:
++<<<<<<< HEAD
 +		PDBG("%s ignoring disconnect ep %p state %u\n",
 +		     __func__, ep, ep->com.state);
++=======
+ 		pr_info("%s ignoring disconnect ep %p state %u\n",
+ 			__func__, ep, ep->com.state);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		break;
  	default:
  		BUG();
@@@ -3678,7 -3676,7 +3738,11 @@@ static void passive_ofld_conn_reply(str
  	rpl_skb = (struct sk_buff *)(unsigned long)req->cookie;
  	BUG_ON(!rpl_skb);
  	if (req->retval) {
++<<<<<<< HEAD
 +		PDBG("%s passive open failure %d\n", __func__, req->retval);
++=======
+ 		pr_err("%s passive open failure %d\n", __func__, req->retval);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		mutex_lock(&dev->rdev.stats.lock);
  		dev->rdev.stats.pas_ofld_conn_fails++;
  		mutex_unlock(&dev->rdev.stats.lock);
@@@ -3896,7 -3893,8 +3960,12 @@@ static int rx_pkt(struct c4iw_dev *dev
  
  	lep = (struct c4iw_ep *)get_ep_from_stid(dev, stid);
  	if (!lep) {
++<<<<<<< HEAD
 +		PDBG("%s connect request on invalid stid %d\n", __func__, stid);
++=======
+ 		pr_warn("%s connect request on invalid stid %d\n",
+ 			__func__, stid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		goto reject;
  	}
  
@@@ -4215,13 -4209,12 +4284,19 @@@ static int peer_abort_intr(struct c4iw_
  		return 0;
  	}
  	if (cxgb_is_neg_adv(req->status)) {
++<<<<<<< HEAD
 +		PDBG("%s Negative advice on abort- tid %u status %d (%s)\n",
 +		     __func__, ep->hwtid, req->status,
 +		     neg_adv_str(req->status));
++=======
+ 		pr_warn("%s Negative advice on abort- tid %u status %d (%s)\n",
+ 			__func__, ep->hwtid, req->status,
+ 			 neg_adv_str(req->status));
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		goto out;
  	}
 -	pr_debug("ep %p tid %u state %u\n", ep, ep->hwtid, ep->com.state);
 +	PDBG("%s ep %p tid %u state %u\n", __func__, ep, ep->hwtid,
 +	     ep->com.state);
  
  	c4iw_wake_up(&ep->com.wr_wait, -ECONNRESET);
  out:
diff --cc drivers/infiniband/hw/cxgb4/ev.c
index bdfac2ccb704,b8c7cc938bce..000000000000
--- a/drivers/infiniband/hw/cxgb4/ev.c
+++ b/drivers/infiniband/hw/cxgb4/ev.c
@@@ -237,7 -234,7 +237,11 @@@ int c4iw_ev_handler(struct c4iw_dev *de
  		if (atomic_dec_and_test(&chp->refcnt))
  			wake_up(&chp->wait);
  	} else {
++<<<<<<< HEAD
 +		PDBG("%s unknown cqid 0x%x\n", __func__, qid);
++=======
+ 		pr_warn("%s unknown cqid 0x%x\n", __func__, qid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		spin_unlock_irqrestore(&dev->lock, flag);
  	}
  	return 0;
diff --cc drivers/infiniband/hw/cxgb4/iw_cxgb4.h
index eb7973e70423,433e78e5f25b..000000000000
--- a/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
+++ b/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
@@@ -231,8 -230,8 +231,13 @@@ static inline int c4iw_wait_for_reply(s
  
  	ret = wait_for_completion_timeout(&wr_waitp->completion, C4IW_WR_TO);
  	if (!ret) {
++<<<<<<< HEAD
 +		PDBG("%s - Device %s not responding (disabling device) - tid %u qpid %u\n",
 +		     func, pci_name(rdev->lldi.pdev), hwtid, qpid);
++=======
+ 		pr_err("%s - Device %s not responding (disabling device) - tid %u qpid %u\n",
+ 		       func, pci_name(rdev->lldi.pdev), hwtid, qpid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		rdev->flags |= T4_FATAL_ERROR;
  		wr_waitp->ret = -EIO;
  	}
diff --cc drivers/infiniband/hw/cxgb4/qp.c
index 50b8ed44737d,88e045b94773..000000000000
--- a/drivers/infiniband/hw/cxgb4/qp.c
+++ b/drivers/infiniband/hw/cxgb4/qp.c
@@@ -959,8 -958,8 +959,13 @@@ int c4iw_post_send(struct ib_qp *ibqp, 
  			c4iw_invalidate_mr(qhp->rhp, wr->ex.invalidate_rkey);
  			break;
  		default:
++<<<<<<< HEAD
 +			PDBG("%s post of type=%d TBD!\n", __func__,
 +			     wr->opcode);
++=======
+ 			pr_warn("%s post of type=%d TBD!\n", __func__,
+ 				wr->opcode);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  			err = -EINVAL;
  		}
  		if (err) {
diff --cc drivers/infiniband/hw/cxgb4/t4.h
index 640d22148a3e,2b44fa850bbb..000000000000
--- a/drivers/infiniband/hw/cxgb4/t4.h
+++ b/drivers/infiniband/hw/cxgb4/t4.h
@@@ -601,7 -597,8 +601,12 @@@ static inline void t4_swcq_produce(stru
  {
  	cq->sw_in_use++;
  	if (cq->sw_in_use == cq->size) {
++<<<<<<< HEAD
 +		PDBG("%s cxgb4 sw cq overflow cqid %u\n", __func__, cq->cqid);
++=======
+ 		pr_warn("%s cxgb4 sw cq overflow cqid %u\n",
+ 			__func__, cq->cqid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		cq->error = 1;
  		BUG_ON(1);
  	}
@@@ -672,7 -669,8 +677,12 @@@ static inline int t4_next_hw_cqe(struc
  static inline struct t4_cqe *t4_next_sw_cqe(struct t4_cq *cq)
  {
  	if (cq->sw_in_use == cq->size) {
++<<<<<<< HEAD
 +		PDBG("%s cxgb4 sw cq overflow cqid %u\n", __func__, cq->cqid);
++=======
+ 		pr_warn("%s cxgb4 sw cq overflow cqid %u\n",
+ 			__func__, cq->cqid);
++>>>>>>> 4d45b7573ba7 (iw_cxgb4: change pr_debug to appropriate log level)
  		cq->error = 1;
  		BUG_ON(1);
  		return NULL;
* Unmerged path drivers/infiniband/hw/cxgb4/cm.c
* Unmerged path drivers/infiniband/hw/cxgb4/ev.c
* Unmerged path drivers/infiniband/hw/cxgb4/iw_cxgb4.h
* Unmerged path drivers/infiniband/hw/cxgb4/qp.c
* Unmerged path drivers/infiniband/hw/cxgb4/t4.h
