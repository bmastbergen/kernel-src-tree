ibmvnic: Remove VNIC_CLOSING check from pending_scrq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
commit 1cf9cc72bd7024af69419b5adee42c39ad4caf6f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/1cf9cc72.failed

Fix a kernel panic resulting from data access of a NULL
pointer during device close. The pending_scrq routine is
meant to determine whether there is a valid sub-CRQ message
awaiting processing. When the device is closing, however,
there is a possibility that NULL messages can be processed
because pending_scrq will always return 1 even if there
no valid message in the queue.

It's not clear what this closing state check was originally
meant to accomplish, so just remove it.

	Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1cf9cc72bd7024af69419b5adee42c39ad4caf6f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index e51abefcc89d,ebe443fe51db..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -1750,7 -2275,7 +1750,11 @@@ static int pending_scrq(struct ibmvnic_
  {
  	union sub_crq *entry = &scrq->msgs[scrq->cur];
  
++<<<<<<< HEAD
 +	if (entry->generic.first & IBMVNIC_CRQ_CMD_RSP || adapter->closing)
++=======
+ 	if (entry->generic.first & IBMVNIC_CRQ_CMD_RSP)
++>>>>>>> 1cf9cc72bd70 (ibmvnic: Remove VNIC_CLOSING check from pending_scrq)
  		return 1;
  	else
  		return 0;
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
