x86/fpu: Fix get_xsave_addr() behavior under virtualization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] fpu: Fix get_xsave_addr() behavior under virtualization ("Dr. David Alan Gilbert") [1534309]
Rebuild_FUZZ: 96.49%
commit-author Huaitong Han <huaitong.han@intel.com>
commit a05917b6ba9dc9a95fc42bdcbe3a875e8ad83935
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a05917b6.failed

KVM uses the get_xsave_addr() function in a different fashion from
the native kernel, in that the 'xsave' parameter belongs to guest vcpu,
not the currently running task.

But 'xsave' is replaced with current task's (host) xsave structure, so
get_xsave_addr() will incorrectly return the bad xsave address to KVM.

Fix it so that the passed in 'xsave' address is used - as intended
originally.

	Signed-off-by: Huaitong Han <huaitong.han@intel.com>
	Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: <stable@vger.kernel.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Fenghua Yu <fenghua.yu@intel.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Oleg Nesterov <oleg@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: dave.hansen@intel.com
Link: http://lkml.kernel.org/r/1446800423-21622-1-git-send-email-huaitong.han@intel.com
[ Tidied up the changelog. ]
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit a05917b6ba9dc9a95fc42bdcbe3a875e8ad83935)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/fpu/xstate.c
* Unmerged path arch/x86/kernel/fpu/xstate.c
* Unmerged path arch/x86/kernel/fpu/xstate.c
