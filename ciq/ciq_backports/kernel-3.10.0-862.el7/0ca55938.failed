qla2xxx: Remove unused reverse_ini_mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Himanshu Madhani <himanshu.madhani@cavium.com>
commit 0ca55938497412f9ffdbcb5cb7c4f8d6d28356ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0ca55938.failed

With support for dual mode in the driver, this mode becomes
dead code. Remove reverse_ini_mode from code.

	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 0ca55938497412f9ffdbcb5cb7c4f8d6d28356ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.h
diff --cc drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0,a7f90dcaae37..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@@ -958,15 -987,30 +958,34 @@@ static inline bool qla_tgt_mode_enabled
  
  static inline bool qla_ini_mode_enabled(struct scsi_qla_host *ha)
  {
 -	return ha->host->active_mode == MODE_INITIATOR;
 +	return ha->host->active_mode & MODE_INITIATOR;
  }
  
 -static inline bool qla_dual_mode_enabled(struct scsi_qla_host *ha)
++<<<<<<< HEAD
 +static inline void qla_reverse_ini_mode(struct scsi_qla_host *ha)
  {
 -	return (ha->host->active_mode == MODE_DUAL);
 -}
 -
 +	if (ha->host->active_mode & MODE_INITIATOR)
 +		ha->host->active_mode &= ~MODE_INITIATOR;
 +	else
 +		ha->host->active_mode |= MODE_INITIATOR;
++=======
+ static inline uint32_t sid_to_key(const uint8_t *s_id)
+ {
+ 	uint32_t key;
+ 
+ 	key = (((unsigned long)s_id[0] << 16) |
+ 	       ((unsigned long)s_id[1] << 8) |
+ 	       (unsigned long)s_id[2]);
+ 	return key;
+ }
+ 
+ static inline void sid_to_portid(const uint8_t *s_id, port_id_t *p)
+ {
+ 	memset(p, 0, sizeof(*p));
+ 	p->b.domain = s_id[0];
+ 	p->b.area = s_id[1];
+ 	p->b.al_pa = s_id[2];
++>>>>>>> 0ca559384974 (qla2xxx: Remove unused reverse_ini_mode)
  }
  
  /*
diff --git a/drivers/scsi/qla2xxx/qla_def.h b/drivers/scsi/qla2xxx/qla_def.h
index 3f28536dc812..ba211ea0e925 100644
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@ -2939,7 +2939,6 @@ struct qlt_hw_data {
 	/* Protected by hw lock */
 	uint32_t enable_class_2:1;
 	uint32_t enable_explicit_conf:1;
-	uint32_t ini_mode_force_reverse:1;
 	uint32_t node_name_set:1;
 
 	dma_addr_t atio_dma;	/* Physical address. */
diff --git a/drivers/scsi/qla2xxx/qla_target.c b/drivers/scsi/qla2xxx/qla_target.c
index f10c075d97ef..12b729ea7f46 100644
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@ -4478,8 +4478,6 @@ EXPORT_SYMBOL(qlt_lport_deregister);
 /* Must be called under HW lock */
 void qlt_set_mode(struct scsi_qla_host *vha)
 {
-	struct qla_hw_data *ha = vha->hw;
-
 	switch (ql2x_ini_mode) {
 	case QLA2XXX_INI_MODE_DISABLED:
 	case QLA2XXX_INI_MODE_EXCLUSIVE:
@@ -4491,16 +4489,11 @@ void qlt_set_mode(struct scsi_qla_host *vha)
 	default:
 		break;
 	}
-
-	if (ha->tgt.ini_mode_force_reverse)
-		qla_reverse_ini_mode(vha);
 }
 
 /* Must be called under HW lock */
 void qlt_clear_mode(struct scsi_qla_host *vha)
 {
-	struct qla_hw_data *ha = vha->hw;
-
 	switch (ql2x_ini_mode) {
 	case QLA2XXX_INI_MODE_DISABLED:
 		vha->host->active_mode = MODE_UNKNOWN;
@@ -4514,9 +4507,6 @@ void qlt_clear_mode(struct scsi_qla_host *vha)
 	default:
 		break;
 	}
-
-	if (ha->tgt.ini_mode_force_reverse)
-		qla_reverse_ini_mode(vha);
 }
 
 /*
* Unmerged path drivers/scsi/qla2xxx/qla_target.h
