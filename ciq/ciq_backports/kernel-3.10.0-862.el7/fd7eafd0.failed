geneve: fix fill_info when link down

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Hangbin Liu <liuhangbin@gmail.com>
commit fd7eafd02121d6ef501ef1a4a891e6061366c952
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/fd7eafd0.failed

geneve->sock4/6 were added with geneve_open and released with geneve_stop.
So when geneve link down, we will not able to show remote address and
checksum info after commit 11387fe4a98 ("geneve: fix fill_info when using
collect_metadata").

Fix this by avoid passing *_REMOTE{,6} for COLLECT_METADATA since they are
mutually exclusive, and always show UDP_ZERO_CSUM6_RX info.

Fixes: 11387fe4a98 ("geneve: fix fill_info when using collect_metadata")
	Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fd7eafd02121d6ef501ef1a4a891e6061366c952)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/geneve.c
diff --cc drivers/net/geneve.c
index 311107458453,4e16d839c311..000000000000
--- a/drivers/net/geneve.c
+++ b/drivers/net/geneve.c
@@@ -1427,43 -1489,48 +1427,73 @@@ static size_t geneve_get_size(const str
  static int geneve_fill_info(struct sk_buff *skb, const struct net_device *dev)
  {
  	struct geneve_dev *geneve = netdev_priv(dev);
++<<<<<<< HEAD
++=======
+ 	struct ip_tunnel_info *info = &geneve->info;
+ 	bool metadata = geneve->collect_md;
+ 	__u8 tmp_vni[3];
++>>>>>>> fd7eafd02121 (geneve: fix fill_info when link down)
  	__u32 vni;
  
 -	tunnel_id_to_vni(info->key.tun_id, tmp_vni);
 -	vni = (tmp_vni[0] << 16) | (tmp_vni[1] << 8) | tmp_vni[2];
 +	vni = (geneve->vni[0] << 16) | (geneve->vni[1] << 8) | geneve->vni[2];
  	if (nla_put_u32(skb, IFLA_GENEVE_ID, vni))
  		goto nla_put_failure;
  
++<<<<<<< HEAD
 +	if (geneve->remote.sa.sa_family == AF_INET) {
++=======
+ 	if (!metadata && ip_tunnel_info_af(info) == AF_INET) {
++>>>>>>> fd7eafd02121 (geneve: fix fill_info when link down)
  		if (nla_put_in_addr(skb, IFLA_GENEVE_REMOTE,
 -				    info->key.u.ipv4.dst))
 +				    geneve->remote.sin.sin_addr.s_addr))
  			goto nla_put_failure;
++<<<<<<< HEAD
 +#if IS_ENABLED(CONFIG_IPV6)
 +	} else {
++=======
+ 		if (nla_put_u8(skb, IFLA_GENEVE_UDP_CSUM,
+ 			       !!(info->key.tun_flags & TUNNEL_CSUM)))
+ 			goto nla_put_failure;
+ 
+ #if IS_ENABLED(CONFIG_IPV6)
+ 	} else if (!metadata) {
++>>>>>>> fd7eafd02121 (geneve: fix fill_info when link down)
  		if (nla_put_in6_addr(skb, IFLA_GENEVE_REMOTE6,
 -				     &info->key.u.ipv6.dst))
 +				     &geneve->remote.sin6.sin6_addr))
  			goto nla_put_failure;
++<<<<<<< HEAD
++=======
+ 		if (nla_put_u8(skb, IFLA_GENEVE_UDP_ZERO_CSUM6_TX,
+ 			       !(info->key.tun_flags & TUNNEL_CSUM)))
+ 			goto nla_put_failure;
++>>>>>>> fd7eafd02121 (geneve: fix fill_info when link down)
  #endif
  	}
  
 -	if (nla_put_u8(skb, IFLA_GENEVE_TTL, info->key.ttl) ||
 -	    nla_put_u8(skb, IFLA_GENEVE_TOS, info->key.tos) ||
 -	    nla_put_be32(skb, IFLA_GENEVE_LABEL, info->key.label))
 +	if (nla_put_u8(skb, IFLA_GENEVE_TTL, geneve->ttl) ||
 +	    nla_put_u8(skb, IFLA_GENEVE_TOS, geneve->tos) ||
 +	    nla_put_be32(skb, IFLA_GENEVE_LABEL, geneve->label))
  		goto nla_put_failure;
  
 -	if (nla_put_be16(skb, IFLA_GENEVE_PORT, info->key.tp_dst))
 +	if (nla_put_be16(skb, IFLA_GENEVE_PORT, geneve->dst_port))
  		goto nla_put_failure;
  
- 	if (geneve->collect_md) {
- 		if (nla_put_flag(skb, IFLA_GENEVE_COLLECT_METADATA))
+ 	if (metadata && nla_put_flag(skb, IFLA_GENEVE_COLLECT_METADATA))
  			goto nla_put_failure;
++<<<<<<< HEAD
 +	}
 +
 +	if (nla_put_u8(skb, IFLA_GENEVE_UDP_CSUM,
 +		       !(geneve->flags & GENEVE_F_UDP_ZERO_CSUM_TX)) ||
 +	    nla_put_u8(skb, IFLA_GENEVE_UDP_ZERO_CSUM6_TX,
 +		       !!(geneve->flags & GENEVE_F_UDP_ZERO_CSUM6_TX)) ||
 +	    nla_put_u8(skb, IFLA_GENEVE_UDP_ZERO_CSUM6_RX,
 +		       !!(geneve->flags & GENEVE_F_UDP_ZERO_CSUM6_RX)))
++=======
+ 
+ 	if (nla_put_u8(skb, IFLA_GENEVE_UDP_ZERO_CSUM6_RX,
+ 		       !geneve->use_udp6_rx_checksums))
++>>>>>>> fd7eafd02121 (geneve: fix fill_info when link down)
  		goto nla_put_failure;
  
  	return 0;
* Unmerged path drivers/net/geneve.c
