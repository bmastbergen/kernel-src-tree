blk-mq: Avoid that request queue removal can trigger list corruption

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bart Van Assche <bart.vanassche@wdc.com>
commit aba7afc5671c23beade64d10caf86e24a9105dab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/aba7afc5.failed

Avoid that removal of a request queue sporadically triggers the
following warning:

list_del corruption. next->prev should be ffff8807d649b970, but was 6b6b6b6b6b6b6b6b
WARNING: CPU: 3 PID: 342 at lib/list_debug.c:56 __list_del_entry_valid+0x92/0xa0
Call Trace:
 process_one_work+0x11b/0x660
 worker_thread+0x3d/0x3b0
 kthread+0x129/0x140
 ret_from_fork+0x27/0x40

	Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Hannes Reinecke <hare@suse.com>
	Cc: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit aba7afc5671c23beade64d10caf86e24a9105dab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-core.c
diff --cc block/blk-core.c
index df55e6267498,5e81dcf4690a..000000000000
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@@ -249,10 -339,9 +249,15 @@@ void blk_sync_queue(struct request_queu
  		struct blk_mq_hw_ctx *hctx;
  		int i;
  
++<<<<<<< HEAD
 +		queue_for_each_hw_ctx(q, hctx, i) {
++=======
+ 		cancel_delayed_work_sync(&q->requeue_work);
+ 		queue_for_each_hw_ctx(q, hctx, i)
++>>>>>>> aba7afc5671c (blk-mq: Avoid that request queue removal can trigger list corruption)
  			cancel_delayed_work_sync(&hctx->run_work);
 +			cancel_delayed_work_sync(&hctx->delay_work);
 +		}
  	} else {
  		cancel_delayed_work_sync(&q->delay_work);
  	}
* Unmerged path block/blk-core.c
