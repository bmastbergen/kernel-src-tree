mlxsw: spectrum_switchdev: Fix mrouter flag update

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nogah Frankel <nogahf@mellanox.com>
commit 4eb6a3bdb4629b610a39dd222a0170c72ef1c690
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4eb6a3bd.failed

Update the value of the mrouter flag in struct mlxsw_sp_bridge_port when
it is being changed.

Fixes: c57529e1d5d8 ("mlxsw: spectrum: Replace vPorts with Port-VLAN")
	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Reviewed-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4eb6a3bdb4629b610a39dd222a0170c72ef1c690)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
index a7736231096b,d39ffbfcc436..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
@@@ -411,16 -701,66 +411,76 @@@ static int mlxsw_sp_port_attr_br_vlan_s
  
  static int mlxsw_sp_port_attr_mc_router_set(struct mlxsw_sp_port *mlxsw_sp_port,
  					    struct switchdev_trans *trans,
 -					    struct net_device *orig_dev,
  					    bool is_port_mc_router)
  {
++<<<<<<< HEAD
 +	if (switchdev_trans_ph_prepare(trans))
 +		return 0;
 +
 +	mlxsw_sp_port->mc_router = is_port_mc_router;
 +	if (!mlxsw_sp_port->mc_disabled)
 +		return mlxsw_sp_port_flood_table_set(mlxsw_sp_port,
 +						     MLXSW_SP_FLOOD_TABLE_MC,
 +						     is_port_mc_router);
++=======
+ 	struct mlxsw_sp_bridge_port *bridge_port;
+ 	int err;
+ 
+ 	if (switchdev_trans_ph_prepare(trans))
+ 		return 0;
+ 
+ 	bridge_port = mlxsw_sp_bridge_port_find(mlxsw_sp_port->mlxsw_sp->bridge,
+ 						orig_dev);
+ 	if (!bridge_port)
+ 		return 0;
+ 
+ 	if (!bridge_port->bridge_device->multicast_enabled)
+ 		goto out;
+ 
+ 	err = mlxsw_sp_bridge_port_flood_table_set(mlxsw_sp_port, bridge_port,
+ 						   MLXSW_SP_FLOOD_TYPE_MC,
+ 						   is_port_mc_router);
+ 	if (err)
+ 		return err;
+ 
+ out:
+ 	bridge_port->mrouter = is_port_mc_router;
+ 	return 0;
+ }
+ 
+ static int mlxsw_sp_port_mc_disabled_set(struct mlxsw_sp_port *mlxsw_sp_port,
+ 					 struct switchdev_trans *trans,
+ 					 struct net_device *orig_dev,
+ 					 bool mc_disabled)
+ {
+ 	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_port->mlxsw_sp;
+ 	struct mlxsw_sp_bridge_device *bridge_device;
+ 	struct mlxsw_sp_bridge_port *bridge_port;
+ 	int err;
+ 
+ 	if (switchdev_trans_ph_prepare(trans))
+ 		return 0;
+ 
+ 	/* It's possible we failed to enslave the port, yet this
+ 	 * operation is executed due to it being deferred.
+ 	 */
+ 	bridge_device = mlxsw_sp_bridge_device_find(mlxsw_sp->bridge, orig_dev);
+ 	if (!bridge_device)
+ 		return 0;
+ 
+ 	list_for_each_entry(bridge_port, &bridge_device->ports_list, list) {
+ 		enum mlxsw_sp_flood_type packet_type = MLXSW_SP_FLOOD_TYPE_MC;
+ 		bool member = mc_disabled ? true : bridge_port->mrouter;
+ 
+ 		err = mlxsw_sp_bridge_port_flood_table_set(mlxsw_sp_port,
+ 							   bridge_port,
+ 							   packet_type, member);
+ 		if (err)
+ 			return err;
+ 	}
+ 
+ 	bridge_device->multicast_enabled = !mc_disabled;
++>>>>>>> 4eb6a3bdb462 (mlxsw: spectrum_switchdev: Fix mrouter flag update)
  
  	return 0;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum_switchdev.c
