oprofile/x86: Convert x86_backtrace() to use the new unwinder

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit ec2ad9ccf12dc965cad2d367a4063f68d6561a6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ec2ad9cc.failed

Convert oprofile's x86_backtrace() to use the new unwinder.
dump_trace() has been deprecated.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Byungchul Park <byungchul.park@lge.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Nilay Vaish <nilayvaish@gmail.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Robert Richter <rric@kernel.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/412df8927705795e8ea60cffcf89a79e010713b1.1474045023.git.jpoimboe@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ec2ad9ccf12dc965cad2d367a4063f68d6561a6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/oprofile/backtrace.c
diff --cc arch/x86/oprofile/backtrace.c
index 71672f4c4579,a2488b6e27d6..000000000000
--- a/arch/x86/oprofile/backtrace.c
+++ b/arch/x86/oprofile/backtrace.c
@@@ -16,27 -16,7 +16,31 @@@
  
  #include <asm/ptrace.h>
  #include <asm/stacktrace.h>
++<<<<<<< HEAD
 +
 +static int backtrace_stack(void *data, char *name)
 +{
 +	/* Yes, we want all stacks */
 +	return 0;
 +}
 +
 +static int backtrace_address(void *data, unsigned long addr, int reliable)
 +{
 +	unsigned int *depth = data;
 +
 +	if ((*depth)--)
 +		oprofile_add_trace(addr);
 +	return 0;
 +}
 +
 +static struct stacktrace_ops backtrace_ops = {
 +	.stack		= backtrace_stack,
 +	.address	= backtrace_address,
 +	.walk_stack	= print_context_stack,
 +};
++=======
+ #include <asm/unwind.h>
++>>>>>>> ec2ad9ccf12d (oprofile/x86: Convert x86_backtrace() to use the new unwinder)
  
  #ifdef CONFIG_COMPAT
  static struct stack_frame_ia32 *
@@@ -112,8 -92,9 +116,14 @@@ x86_backtrace(struct pt_regs * const re
  {
  	struct stack_frame *head = (struct stack_frame *)frame_pointer(regs);
  
++<<<<<<< HEAD
 +	if (!user_mode_vm(regs)) {
 +		unsigned long stack = kernel_stack_pointer(regs);
++=======
+ 	if (!user_mode(regs)) {
+ 		struct unwind_state state;
+ 		unsigned long addr;
++>>>>>>> ec2ad9ccf12d (oprofile/x86: Convert x86_backtrace() to use the new unwinder)
  
  		if (!depth)
  			return;
@@@ -122,8 -104,18 +133,23 @@@
  		if (!--depth)
  			return;
  
++<<<<<<< HEAD
 +		dump_trace(NULL, regs, (unsigned long *)stack, 0,
 +			   &backtrace_ops, &depth);
++=======
+ 		for (unwind_start(&state, current, regs, NULL);
+ 		     !unwind_done(&state); unwind_next_frame(&state)) {
+ 			addr = unwind_get_return_address(&state);
+ 			if (!addr)
+ 				break;
+ 
+ 			oprofile_add_trace(addr);
+ 
+ 			if (!--depth)
+ 				break;
+ 		}
+ 
++>>>>>>> ec2ad9ccf12d (oprofile/x86: Convert x86_backtrace() to use the new unwinder)
  		return;
  	}
  
* Unmerged path arch/x86/oprofile/backtrace.c
