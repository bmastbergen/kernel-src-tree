qla2xxx: Fix sparse warning in qla_target.c.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Fix sparse warning in qla_target.c (Himanshu Madhani) [1327621]
Rebuild_FUZZ: 98.85%
commit-author Quinn Tran <quinn.tran@qlogic.com>
commit 33a5fcee7f5d4920ff33997169e02cc34cbab6e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/33a5fcee.failed

	Signed-off-by: Quinn Tran <quinn.tran@qlogic.com>
	Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 33a5fcee7f5d4920ff33997169e02cc34cbab6e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 071c8becb9ba,e632e14180cf..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -1222,8 -1125,9 +1222,14 @@@ static void qlt_24xx_retry_term_exchang
  	ctio->initiator_id[1] = entry->fcp_hdr_le.d_id[1];
  	ctio->initiator_id[2] = entry->fcp_hdr_le.d_id[2];
  	ctio->exchange_addr = entry->exchange_addr_to_abort;
++<<<<<<< HEAD
 +	ctio->u.status1.flags = cpu_to_le16(CTIO7_FLAGS_STATUS_MODE_1 |
 +					    CTIO7_FLAGS_TERMINATE);
++=======
+ 	ctio->u.status1.flags =
+ 	    __constant_cpu_to_le16(CTIO7_FLAGS_STATUS_MODE_1 |
+ 		CTIO7_FLAGS_TERMINATE);
++>>>>>>> 33a5fcee7f5d (qla2xxx: Fix sparse warning in qla_target.c.)
  	ctio->u.status1.ox_id = cpu_to_le16(entry->fcp_hdr_le.ox_id);
  
  	qla2x00_start_iocbs(vha, vha->req);
@@@ -1386,11 -1291,13 +1393,18 @@@ static void qlt_24xx_send_task_mgmt_cti
  	ctio->initiator_id[2] = atio->u.isp24.fcp_hdr.s_id[0];
  	ctio->exchange_addr = atio->u.isp24.exchange_addr;
  	ctio->u.status1.flags = (atio->u.isp24.attr << 9) |
++<<<<<<< HEAD
 +	    cpu_to_le16(CTIO7_FLAGS_STATUS_MODE_1 | CTIO7_FLAGS_SEND_STATUS);
 +	ctio->u.status1.ox_id = cpu_to_le16(atio->u.isp24.fcp_hdr.ox_id);
++=======
+ 	    __constant_cpu_to_le16(CTIO7_FLAGS_STATUS_MODE_1 |
+ 		CTIO7_FLAGS_SEND_STATUS);
+ 	temp = be16_to_cpu(atio->u.isp24.fcp_hdr.ox_id);
+ 	ctio->u.status1.ox_id = cpu_to_le16(temp);
++>>>>>>> 33a5fcee7f5d (qla2xxx: Fix sparse warning in qla_target.c.)
  	ctio->u.status1.scsi_status =
 -	    __constant_cpu_to_le16(SS_RESPONSE_INFO_LEN_VALID);
 -	ctio->u.status1.response_len = __constant_cpu_to_le16(8);
 +	    cpu_to_le16(SS_RESPONSE_INFO_LEN_VALID);
 +	ctio->u.status1.response_len = cpu_to_le16(8);
  	ctio->u.status1.sense_data[0] = resp_code;
  
  	qla2x00_start_iocbs(ha, ha->req);
@@@ -2227,9 -2657,10 +2243,10 @@@ static int __qlt_send_term_exchange(str
  	ctio24->initiator_id[2] = atio->u.isp24.fcp_hdr.s_id[0];
  	ctio24->exchange_addr = atio->u.isp24.exchange_addr;
  	ctio24->u.status1.flags = (atio->u.isp24.attr << 9) |
 -	    __constant_cpu_to_le16(CTIO7_FLAGS_STATUS_MODE_1 |
 +	    cpu_to_le16(CTIO7_FLAGS_STATUS_MODE_1 |
  		CTIO7_FLAGS_TERMINATE);
- 	ctio24->u.status1.ox_id = swab16(atio->u.isp24.fcp_hdr.ox_id);
+ 	temp = be16_to_cpu(atio->u.isp24.fcp_hdr.ox_id);
+ 	ctio24->u.status1.ox_id = cpu_to_le16(temp);
  
  	/* Most likely, it isn't needed */
  	ctio24->u.status1.residual = get_unaligned((uint32_t *)
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
diff --git a/drivers/scsi/qla2xxx/qla_target.h b/drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0..02a0160f94f8 100644
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@ -442,7 +442,7 @@ struct ctio7_to_24xx {
 			uint16_t reserved1;
 			uint16_t flags;
 			uint32_t residual;
-			uint16_t ox_id;
+			__le16 ox_id;
 			uint16_t scsi_status;
 			uint32_t relative_offset;
 			uint32_t reserved2;
@@ -457,7 +457,7 @@ struct ctio7_to_24xx {
 			uint16_t sense_length;
 			uint16_t flags;
 			uint32_t residual;
-			uint16_t ox_id;
+			__le16 ox_id;
 			uint16_t scsi_status;
 			uint16_t response_len;
 			uint16_t reserved;
