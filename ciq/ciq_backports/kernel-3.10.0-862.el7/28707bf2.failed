tpm: use tpm2_pcr_read() in tpm2_do_selftest()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Roberto Sassu <roberto.sassu@huawei.com>
commit 28707bf221ce6914a3e414637c8ffc4d27e9648d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/28707bf2.failed

tpm2_do_selftest() performs a PCR read during the TPM initialization phase.
This patch replaces the PCR read code with a call to tpm2_pcr_read().

	Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
	Reviewed-by: Jarkko Sakkinen <jarkko.sakkine@linux.intel.com>
	Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Signed-off-by: James Morris <james.l.morris@oracle.com>
(cherry picked from commit 28707bf221ce6914a3e414637c8ffc4d27e9648d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/tpm/tpm2-cmd.c
diff --cc drivers/char/tpm/tpm2-cmd.c
index bab83b23d39b,f7f34b2aa981..000000000000
--- a/drivers/char/tpm/tpm2-cmd.c
+++ b/drivers/char/tpm/tpm2-cmd.c
@@@ -35,40 -35,6 +35,43 @@@ struct tpm2_self_test_in 
  	u8	full_test;
  } __packed;
  
++<<<<<<< HEAD
 +struct tpm2_pcr_read_in {
 +	__be32	pcr_selects_cnt;
 +	__be16	hash_alg;
 +	u8	pcr_select_size;
 +	u8	pcr_select[TPM2_PCR_SELECT_MIN];
 +} __packed;
 +
 +struct tpm2_pcr_read_out {
 +	__be32	update_cnt;
 +	__be32	pcr_selects_cnt;
 +	__be16	hash_alg;
 +	u8	pcr_select_size;
 +	u8	pcr_select[TPM2_PCR_SELECT_MIN];
 +	__be32	digests_cnt;
 +	__be16	digest_size;
 +	u8	digest[TPM_DIGEST_SIZE];
 +} __packed;
 +
 +struct tpm2_null_auth_area {
 +	__be32			handle;
 +	__be16			nonce_size;
 +	u8			attributes;
 +	__be16			auth_size;
 +} __packed;
 +
 +struct tpm2_pcr_extend_in {
 +	__be32				pcr_idx;
 +	__be32				auth_area_size;
 +	struct tpm2_null_auth_area	auth_area;
 +	__be32				digest_cnt;
 +	__be16				hash_alg;
 +	u8				digest[TPM_DIGEST_SIZE];
 +} __packed;
 +
++=======
++>>>>>>> 28707bf221ce (tpm: use tpm2_pcr_read() in tpm2_do_selftest())
  struct tpm2_get_tpm_pt_in {
  	__be32	cap_id;
  	__be32	property_id;
@@@ -95,9 -61,6 +98,12 @@@ struct tpm2_get_random_out 
  union tpm2_cmd_params {
  	struct	tpm2_startup_in		startup_in;
  	struct	tpm2_self_test_in	selftest_in;
++<<<<<<< HEAD
 +	struct	tpm2_pcr_read_in	pcrread_in;
 +	struct	tpm2_pcr_read_out	pcrread_out;
 +	struct	tpm2_pcr_extend_in	pcrextend_in;
++=======
++>>>>>>> 28707bf221ce (tpm: use tpm2_pcr_read() in tpm2_do_selftest())
  	struct	tpm2_get_tpm_pt_in	get_tpm_pt_in;
  	struct	tpm2_get_tpm_pt_out	get_tpm_pt_out;
  	struct	tpm2_get_random_in	getrandom_in;
@@@ -244,18 -207,16 +250,31 @@@ static const u8 tpm2_ordinal_duration[T
  	TPM_UNDEFINED		/* 18f */
  };
  
++<<<<<<< HEAD
 +#define TPM2_PCR_READ_IN_SIZE \
 +	(sizeof(struct tpm_input_header) + \
 +	 sizeof(struct tpm2_pcr_read_in))
 +
 +#define TPM2_PCR_READ_RESP_BODY_SIZE \
 +	 sizeof(struct tpm2_pcr_read_out)
 +
 +static const struct tpm_input_header tpm2_pcrread_header = {
 +	.tag = cpu_to_be16(TPM2_ST_NO_SESSIONS),
 +	.length = cpu_to_be32(TPM2_PCR_READ_IN_SIZE),
 +	.ordinal = cpu_to_be32(TPM2_CC_PCR_READ)
 +};
++=======
+ struct tpm2_pcr_read_out {
+ 	__be32	update_cnt;
+ 	__be32	pcr_selects_cnt;
+ 	__be16	hash_alg;
+ 	u8	pcr_select_size;
+ 	u8	pcr_select[TPM2_PCR_SELECT_MIN];
+ 	__be32	digests_cnt;
+ 	__be16	digest_size;
+ 	u8	digest[];
+ } __packed;
++>>>>>>> 28707bf221ce (tpm: use tpm2_pcr_read() in tpm2_do_selftest())
  
  /**
   * tpm2_pcr_read() - read a PCR value
@@@ -936,15 -892,7 +954,19 @@@ static int tpm2_do_selftest(struct tpm_
  
  	for (i = 0; i < loops; i++) {
  		/* Attempt to read a PCR value */
++<<<<<<< HEAD
 +		cmd.header.in = tpm2_pcrread_header;
 +		cmd.params.pcrread_in.pcr_selects_cnt = cpu_to_be32(1);
 +		cmd.params.pcrread_in.hash_alg = cpu_to_be16(TPM2_ALG_SHA1);
 +		cmd.params.pcrread_in.pcr_select_size = TPM2_PCR_SELECT_MIN;
 +		cmd.params.pcrread_in.pcr_select[0] = 0x01;
 +		cmd.params.pcrread_in.pcr_select[1] = 0x00;
 +		cmd.params.pcrread_in.pcr_select[2] = 0x00;
 +
 +		rc = tpm_transmit_cmd(chip, &cmd, sizeof(cmd), 0, 0, NULL);
++=======
+ 		rc = tpm2_pcr_read(chip, 0, NULL);
++>>>>>>> 28707bf221ce (tpm: use tpm2_pcr_read() in tpm2_do_selftest())
  		if (rc < 0)
  			break;
  
* Unmerged path drivers/char/tpm/tpm2-cmd.c
