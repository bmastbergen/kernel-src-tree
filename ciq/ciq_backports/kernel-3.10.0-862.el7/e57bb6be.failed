RDMA/qedr: Add 64KB PAGE_SIZE support to user-space queues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ram Amrani <Ram.Amrani@cavium.com>
commit e57bb6be5e095351086d3e6de9853a0763342535
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e57bb6be.failed

Add 64KB PAGE_SIZE support to user-space CQ, SQ and RQ queues.
De-facto it means that code was added to translate 64KB
pages to smaller 4KB pages that the FW can handle. Otherwise,
the FW would wrap (or jump to the next page)  when reaching 4KB
while the user space library will continue on the same large page.

Note that MR code remains as is since the FW supports larger pages
for MRs.

	Signed-off-by: Ram Amrani <Ram.Amrani@cavium.com>
	Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e57bb6be5e095351086d3e6de9853a0763342535)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/qedr/verbs.c
diff --cc drivers/infiniband/hw/qedr/verbs.c
index 37fe28d21ada,d6723c365c7f..000000000000
--- a/drivers/infiniband/hw/qedr/verbs.c
+++ b/drivers/infiniband/hw/qedr/verbs.c
@@@ -681,31 -682,37 +682,49 @@@ static void qedr_populate_pbls(struct q
  
  	pbe_cnt = 0;
  
 -	shift = umem->page_shift;
 +	shift = ilog2(umem->page_size);
  
+ 	fw_pg_per_umem_pg = BIT(umem->page_shift - pg_shift);
+ 
  	for_each_sg(umem->sg_head.sgl, sg, umem->nmap, entry) {
  		pages = sg_dma_len(sg) >> shift;
+ 		pg_addr = sg_dma_address(sg);
  		for (pg_cnt = 0; pg_cnt < pages; pg_cnt++) {
++<<<<<<< HEAD
 +			/* store the page address in pbe */
 +			pbe->lo = cpu_to_le32(sg_dma_address(sg) +
 +					      umem->page_size * pg_cnt);
 +			addr = upper_32_bits(sg_dma_address(sg) +
 +					     umem->page_size * pg_cnt);
 +			pbe->hi = cpu_to_le32(addr);
 +			pbe_cnt++;
 +			total_num_pbes++;
 +			pbe++;
- 
- 			if (total_num_pbes == pbl_info->num_pbes)
- 				return;
- 
- 			/* If the given pbl is full storing the pbes,
- 			 * move to next pbl.
- 			 */
- 			if (pbe_cnt == (pbl_info->pbl_size / sizeof(u64))) {
- 				pbl_tbl++;
- 				pbe = (struct regpair *)pbl_tbl->va;
- 				pbe_cnt = 0;
++=======
+ 			for (fw_pg_cnt = 0; fw_pg_cnt < fw_pg_per_umem_pg;) {
+ 				pbe->lo = cpu_to_le32(pg_addr);
+ 				pbe->hi = cpu_to_le32(upper_32_bits(pg_addr));
++>>>>>>> e57bb6be5e09 (RDMA/qedr: Add 64KB PAGE_SIZE support to user-space queues)
+ 
+ 				pg_addr += BIT(pg_shift);
+ 				pbe_cnt++;
+ 				total_num_pbes++;
+ 				pbe++;
+ 
+ 				if (total_num_pbes == pbl_info->num_pbes)
+ 					return;
+ 
+ 				/* If the given pbl is full storing the pbes,
+ 				 * move to next pbl.
+ 				 */
+ 				if (pbe_cnt ==
+ 				    (pbl_info->pbl_size / sizeof(u64))) {
+ 					pbl_tbl++;
+ 					pbe = (struct regpair *)pbl_tbl->va;
+ 					pbe_cnt = 0;
+ 				}
+ 
+ 				fw_pg_cnt++;
  			}
  		}
  	}
diff --git a/drivers/infiniband/hw/qedr/qedr.h b/drivers/infiniband/hw/qedr/qedr.h
index bf02ae4c8891..12199632b814 100644
--- a/drivers/infiniband/hw/qedr/qedr.h
+++ b/drivers/infiniband/hw/qedr/qedr.h
@@ -58,7 +58,10 @@
 #define QEDR_MSG_QP   "  QP"
 #define QEDR_MSG_GSI  " GSI"
 
-#define QEDR_CQ_MAGIC_NUMBER   (0x11223344)
+#define QEDR_CQ_MAGIC_NUMBER	(0x11223344)
+
+#define FW_PAGE_SIZE		(RDMA_RING_PAGE_SIZE)
+#define FW_PAGE_SHIFT		(12)
 
 struct qedr_dev;
 
* Unmerged path drivers/infiniband/hw/qedr/verbs.c
