block: fix debugfs config conditional in struct request_queue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [block] fix debugfs config conditional in struct request_queue (Ming Lei) [1458104]
Rebuild_FUZZ: 93.91%
commit-author Omar Sandoval <osandov@fb.com>
commit 03796c149a99e14506db9de3adba710c26f83ba9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/03796c14.failed

The debugfs dentries are only used for CONFIG_BLK_DEBUG_FS, so make them
conditional on that instead of CONFIG_DEBUG_FS.

	Signed-off-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 03796c149a99e14506db9de3adba710c26f83ba9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/blkdev.h
diff --cc include/linux/blkdev.h
index ba3405333171,e0bac14347e6..000000000000
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@@ -526,24 -563,22 +526,31 @@@ struct request_queue 
  #endif
  	struct rcu_head		rcu_head;
  	wait_queue_head_t	mq_freeze_wq;
 -	struct percpu_ref	q_usage_counter;
 +	RH_KABI_DEPRECATE(struct percpu_counter, mq_usage_counter)
  	struct list_head	all_q_node;
  
 -	struct blk_mq_tag_set	*tag_set;
 -	struct list_head	tag_set_list;
 -	struct bio_set		*bio_split;
 +	RH_KABI_EXTEND(unprep_rq_fn		*unprep_rq_fn)
  
++<<<<<<< HEAD
 +	RH_KABI_EXTEND(struct blk_mq_tag_set	*tag_set)
 +	RH_KABI_EXTEND(struct list_head		tag_set_list)
++=======
+ #ifdef CONFIG_BLK_DEBUG_FS
+ 	struct dentry		*debugfs_dir;
+ 	struct dentry		*mq_debugfs_dir;
+ #endif
 -
 -	bool			mq_sysfs_init_done;
 -
 -	size_t			cmd_size;
 -	void			*rq_alloc_data;
++>>>>>>> 03796c149a99 (block: fix debugfs config conditional in struct request_queue)
 +
 +	RH_KABI_EXTEND(struct list_head		requeue_list)
 +	RH_KABI_EXTEND(spinlock_t			requeue_lock)
 +	/* requeue_work's type is changed from 'work_struct' to 'delayed_work' below */
 +	RH_KABI_EXTEND(struct work_struct	rh_reserved_requeue_work)
 +	RH_KABI_EXTEND(atomic_t				mq_freeze_depth)
 +	RH_KABI_EXTEND(struct blk_flush_queue   *fq)
 +	RH_KABI_EXTEND(struct percpu_ref	q_usage_counter)
 +	RH_KABI_EXTEND(bool			mq_sysfs_init_done)
 +	RH_KABI_EXTEND(struct work_struct	timeout_work)
 +	RH_KABI_EXTEND(struct delayed_work	requeue_work)
  };
  
  #define QUEUE_FLAG_QUEUED	1	/* uses generic tag queueing */
* Unmerged path include/linux/blkdev.h
