nvmet_fc: fix crashes on bad opcodes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [nvme] fc: fix crashes on bad opcodes (David Milburn) [1457880 1456486 1454365]
Rebuild_FUZZ: 90.91%
commit-author James Smart <jsmart2021@gmail.com>
commit 188f7e8a3789cb2e37b68903e0a40f406091fa97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/188f7e8a.failed

if a nvme command is issued with an opcode that is not supported by
the target (example: opcode 21 - detach namespace), the target
crashes due to a null pointer.

nvmet_req_init() detects the bad opcode and immediately calls the nvme
command done routine with an error status, allowing the transport to
send the response. However, the FC transport was aborting the command
on error, so the abort freed the lldd point, but the rsp transmit path
referenced it psot the free.

Fix by removing the abort call on nvmet_req_init() failure.
The completion response will be sent with an error status code.

As the completion path will terminate the io, ensure the data_sg
lists show an unused state so that teardown paths are successful.

	Signed-off-by: Paul Ely <Paul.Ely@broadcom.com>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 188f7e8a3789cb2e37b68903e0a40f406091fa97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/fc.c
diff --cc drivers/nvme/target/fc.c
index 50b2681138a6,7692a96c9065..000000000000
--- a/drivers/nvme/target/fc.c
+++ b/drivers/nvme/target/fc.c
@@@ -2020,8 -2103,9 +2023,14 @@@ nvmet_fc_handle_fcp_rqst(struct nvmet_f
  				&fod->queue->nvme_cq,
  				&fod->queue->nvme_sq,
  				&nvmet_fc_tgt_fcp_ops);
++<<<<<<< HEAD
 +	if (!ret) {	/* bad SQE content */
 +		nvmet_fc_abort_op(tgtport, fod->fcpreq);
++=======
+ 	if (!ret) {
+ 		/* bad SQE content or invalid ctrl state */
+ 		/* nvmet layer has already called op done to send rsp. */
++>>>>>>> 188f7e8a3789 (nvmet_fc: fix crashes on bad opcodes)
  		return;
  	}
  
* Unmerged path drivers/nvme/target/fc.c
