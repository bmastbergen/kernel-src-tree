brcmfmac: setup passive scan if requested by user-space

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arend Van Spriel <arend.vanspriel@broadcom.com>
commit 35f62727df0ed8e5e4857e162d94fd46d861f1cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/35f62727.failed

The driver was not properly configuring firmware with regard to the
type of scan. It always performed an active scan even when user-space
was requesting for passive scan, ie. the scan request was done without
any SSIDs specified.

	Cc: stable@vger.kernel.org # v4.0.x
	Reported-by: Huang, Jiangyang <Jiangyang.Huang@itron.com>
	Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
	Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
	Reviewed-by: Franky Lin <franky.lin@broadcom.com>
	Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
	Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
(cherry picked from commit 35f62727df0ed8e5e4857e162d94fd46d861f1cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwil_types.h
diff --cc drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwil_types.h
index a4118c0ef6ca,e0d22fedb2b4..000000000000
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwil_types.h
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwil_types.h
@@@ -45,6 -45,14 +45,17 @@@
  #define BRCMF_SCAN_PARAMS_COUNT_MASK	0x0000ffff
  #define BRCMF_SCAN_PARAMS_NSSID_SHIFT	16
  
++<<<<<<< HEAD
++=======
+ /* scan type definitions */
+ #define BRCMF_SCANTYPE_DEFAULT		0xFF
+ #define BRCMF_SCANTYPE_ACTIVE		0
+ #define BRCMF_SCANTYPE_PASSIVE		1
+ 
+ #define BRCMF_WSEC_MAX_PSK_LEN		32
+ #define	BRCMF_WSEC_PASSPHRASE		BIT(0)
+ 
++>>>>>>> 35f62727df0e (brcmfmac: setup passive scan if requested by user-space)
  /* primary (ie tx) key */
  #define BRCMF_PRIMARY_KEY		(1 << 1)
  #define DOT11_BSSTYPE_ANY		2
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
index a423c97c1655..cd6928f9126f 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
@@ -924,7 +924,7 @@ static void brcmf_escan_prep(struct brcmf_cfg80211_info *cfg,
 
 	eth_broadcast_addr(params_le->bssid);
 	params_le->bss_type = DOT11_BSSTYPE_ANY;
-	params_le->scan_type = 0;
+	params_le->scan_type = BRCMF_SCANTYPE_ACTIVE;
 	params_le->channel_num = 0;
 	params_le->nprobes = cpu_to_le32(-1);
 	params_le->active_time = cpu_to_le32(-1);
@@ -932,12 +932,9 @@ static void brcmf_escan_prep(struct brcmf_cfg80211_info *cfg,
 	params_le->home_time = cpu_to_le32(-1);
 	memset(&params_le->ssid_le, 0, sizeof(params_le->ssid_le));
 
-	/* if request is null exit so it will be all channel broadcast scan */
-	if (!request)
-		return;
-
 	n_ssids = request->n_ssids;
 	n_channels = request->n_channels;
+
 	/* Copy channel array if applicable */
 	brcmf_dbg(SCAN, "### List of channelspecs to scan ### %d\n",
 		  n_channels);
@@ -974,16 +971,8 @@ static void brcmf_escan_prep(struct brcmf_cfg80211_info *cfg,
 			ptr += sizeof(ssid_le);
 		}
 	} else {
-		brcmf_dbg(SCAN, "Broadcast scan %p\n", request->ssids);
-		if ((request->ssids) && request->ssids->ssid_len) {
-			brcmf_dbg(SCAN, "SSID %s len=%d\n",
-				  params_le->ssid_le.SSID,
-				  request->ssids->ssid_len);
-			params_le->ssid_le.SSID_len =
-				cpu_to_le32(request->ssids->ssid_len);
-			memcpy(&params_le->ssid_le.SSID, request->ssids->ssid,
-				request->ssids->ssid_len);
-		}
+		brcmf_dbg(SCAN, "Performing passive scan\n");
+		params_le->scan_type = BRCMF_SCANTYPE_PASSIVE;
 	}
 	/* Adding mask to channel numbers */
 	params_le->channel_num =
* Unmerged path drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwil_types.h
