bonding: remove rtmsg_ifinfo called in bond_master_upper_dev_link

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit 4597efe312567591e253248246ef58d77df471c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4597efe3.failed

Since commit 42e52bf9e3ae ("net: add netnotifier event for upper device
change"), netdev_master_upper_dev_link has generated NETDEV_CHANGEUPPER
event which would send a notification to userspace in rtnetlink_event.

There's no need to call rtmsg_ifinfo to send the notification any more.
So this patch is to remove it from bond_master_upper_dev_link as well
as bond_upper_dev_unlink to avoid the redundant notifications.

	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4597efe312567591e253248246ef58d77df471c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 98098af7ca3b,18b58e1376f1..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -1217,38 -1217,21 +1217,45 @@@ static enum netdev_lag_tx_type bond_lag
  	}
  }
  
 -static int bond_master_upper_dev_link(struct bonding *bond, struct slave *slave,
 -				      struct netlink_ext_ack *extack)
 +static int bond_master_upper_dev_link(struct bonding *bond, struct slave *slave)
  {
  	struct netdev_lag_upper_info lag_upper_info;
++<<<<<<< HEAD
 +	char linkname[IFNAMSIZ+7];
 +	int err;
 +
 +	lag_upper_info.tx_type = bond_lag_tx_type(bond);
 +	err = netdev_master_upper_dev_link(slave->dev, bond->dev, slave,
 +					   &lag_upper_info);
 +	if (err)
 +		return err;
 +
 +	sprintf(linkname, "slave_%s", slave->dev->name);
 +	err = sysfs_create_link(&(bond->dev->dev.kobj), &(slave->dev->dev.kobj),
 +				linkname);
 +	if (err) {
 +		netdev_upper_dev_unlink(slave->dev, bond->dev);
 +		return err;
 +	}
 +
 +	rtmsg_ifinfo(RTM_NEWLINK, slave->dev, IFF_SLAVE, GFP_KERNEL);
 +	return 0;
++=======
+ 
+ 	lag_upper_info.tx_type = bond_lag_tx_type(bond);
+ 
+ 	return netdev_master_upper_dev_link(slave->dev, bond->dev, slave,
+ 					    &lag_upper_info, extack);
++>>>>>>> 4597efe31256 (bonding: remove rtmsg_ifinfo called in bond_master_upper_dev_link)
  }
  
  static void bond_upper_dev_unlink(struct bonding *bond, struct slave *slave)
  {
 +	char linkname[IFNAMSIZ+7];
 +	sprintf(linkname, "slave_%s", slave->dev->name);
 +	sysfs_remove_link(&(bond->dev->dev.kobj), linkname);
  	netdev_upper_dev_unlink(slave->dev, bond->dev);
  	slave->dev->flags &= ~IFF_SLAVE;
- 	rtmsg_ifinfo(RTM_NEWLINK, slave->dev, IFF_SLAVE, GFP_KERNEL);
  }
  
  static struct slave *bond_alloc_slave(struct bonding *bond)
* Unmerged path drivers/net/bonding/bond_main.c
