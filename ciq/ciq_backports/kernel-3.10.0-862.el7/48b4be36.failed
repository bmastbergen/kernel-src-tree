scsi: cxlflash: Migrate IOARRIN specific routines to function pointers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] cxlflash: Migrate IOARRIN specific routines to function pointers (Gustavo Duarte) [1456494]
Rebuild_FUZZ: 95.52%
commit-author Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
commit 48b4be36edf8a2cb0dedcb2d28f598e51249e805
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/48b4be36.failed

As staging for supporting hardware with a different queuing mechanism,
move the send_cmd() and context_reset() routines to function pointers
that are configured when the AFU is initialized. In addition, rename
the existing routines to better reflect the queue model they support.

	Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Acked-by: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 48b4be36edf8a2cb0dedcb2d28f598e51249e805)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxlflash/main.c
diff --cc drivers/scsi/cxlflash/main.c
index d8aaf45b8306,d2d2d836c079..000000000000
--- a/drivers/scsi/cxlflash/main.c
+++ b/drivers/scsi/cxlflash/main.c
@@@ -345,10 -269,13 +343,17 @@@ static void wait_resp(struct afu *afu, 
  	ulong timeout = msecs_to_jiffies(cmd->rcb.timeout * 2 * 1000);
  
  	timeout = wait_for_completion_timeout(&cmd->cevent, timeout);
++<<<<<<< HEAD
 +	if (!timeout)
 +		context_reset(cmd);
++=======
+ 	if (!timeout) {
+ 		afu->context_reset(cmd);
+ 		rc = -1;
+ 	}
++>>>>>>> 48b4be36edf8 (scsi: cxlflash: Migrate IOARRIN specific routines to function pointers)
  
 -	if (unlikely(cmd->sa.ioasc != 0)) {
 +	if (unlikely(cmd->sa.ioasc != 0))
  		pr_err("%s: CMD 0x%X failed, IOASC: flags 0x%X, afu_rc 0x%X, "
  		       "scsi_rc 0x%X, fc_rc 0x%X\n", __func__, cmd->rcb.cdb[0],
  		       cmd->sa.rc.flags, cmd->sa.rc.afu_rc, cmd->sa.rc.scsi_rc,
@@@ -391,28 -313,23 +396,32 @@@ static int send_tmf(struct afu *afu, st
  						  !cfg->tmf_active,
  						  cfg->tmf_slock);
  	cfg->tmf_active = true;
 -	spin_unlock_irqrestore(&cfg->tmf_slock, lock_flags);
 -
 -	cmd->rcb.scp = scp;
 -	cmd->parent = afu;
  	cmd->cmd_tmf = true;
 +	spin_unlock_irqrestore(&cfg->tmf_slock, lock_flags);
  
  	cmd->rcb.ctx_id = afu->ctx_hndl;
 -	cmd->rcb.msi = SISL_MSI_RRQ_UPDATED;
  	cmd->rcb.port_sel = port_sel;
  	cmd->rcb.lun_id = lun_to_lunid(scp->device->lun);
 +
 +	lflag = SISL_REQ_FLAGS_TMF_CMD;
 +
  	cmd->rcb.req_flags = (SISL_REQ_FLAGS_PORT_LUN_ID |
 -			      SISL_REQ_FLAGS_SUP_UNDERRUN |
 -			      SISL_REQ_FLAGS_TMF_CMD);
 +			      SISL_REQ_FLAGS_SUP_UNDERRUN | lflag);
 +
 +	/* Stash the scp in the reserved field, for reuse during interrupt */
 +	cmd->rcb.scp = scp;
 +
 +	/* Copy the CDB from the cmd passed in */
  	memcpy(cmd->rcb.cdb, &tmfcmd, sizeof(tmfcmd));
  
++<<<<<<< HEAD
 +	/* Send the command */
 +	rc = send_cmd(afu, cmd);
++=======
+ 	rc = afu->send_cmd(afu, cmd);
++>>>>>>> 48b4be36edf8 (scsi: cxlflash: Migrate IOARRIN specific routines to function pointers)
  	if (unlikely(rc)) {
 +		cmd_checkin(cmd);
  		spin_lock_irqsave(&cfg->tmf_slock, lock_flags);
  		cfg->tmf_active = false;
  		spin_unlock_irqrestore(&cfg->tmf_slock, lock_flags);
@@@ -514,41 -454,17 +523,46 @@@ static int cxlflash_queuecommand(struc
  	cmd->rcb.lun_id = lun_to_lunid(scp->device->lun);
  
  	if (scp->sc_data_direction == DMA_TO_DEVICE)
 -		req_flags |= SISL_REQ_FLAGS_HOST_WRITE;
 +		lflag = SISL_REQ_FLAGS_HOST_WRITE;
 +	else
 +		lflag = SISL_REQ_FLAGS_HOST_READ;
 +
 +	cmd->rcb.req_flags = (SISL_REQ_FLAGS_PORT_LUN_ID |
 +			      SISL_REQ_FLAGS_SUP_UNDERRUN | lflag);
 +
 +	/* Stash the scp in the reserved field, for reuse during interrupt */
 +	cmd->rcb.scp = scp;
 +
 +	nseg = scsi_dma_map(scp);
 +	if (unlikely(nseg < 0)) {
 +		dev_err(dev, "%s: Fail DMA map! nseg=%d\n",
 +			__func__, nseg);
 +		rc = SCSI_MLQUEUE_HOST_BUSY;
 +		goto out;
 +	}
 +
 +	ncount = scsi_sg_count(scp);
 +	scsi_for_each_sg(scp, sg, ncount, i) {
 +		cmd->rcb.data_len = sg_dma_len(sg);
 +		cmd->rcb.data_ea = sg_dma_address(sg);
 +	}
  
 -	cmd->rcb.req_flags = req_flags;
 +	/* Copy the CDB from the scsi_cmnd passed in */
  	memcpy(cmd->rcb.cdb, scp->cmnd, sizeof(cmd->rcb.cdb));
  
++<<<<<<< HEAD
 +	/* Send the command */
 +	rc = send_cmd(afu, cmd);
 +	if (unlikely(rc)) {
 +		cmd_checkin(cmd);
++=======
+ 	rc = afu->send_cmd(afu, cmd);
+ 	if (unlikely(rc))
++>>>>>>> 48b4be36edf8 (scsi: cxlflash: Migrate IOARRIN specific routines to function pointers)
  		scsi_dma_unmap(scp);
 +	}
 +
  out:
 -	if (kref_got)
 -		kref_put(&afu->mapcount, afu_unmap);
  	pr_devel("%s: returning rc=%d\n", __func__, rc);
  	return rc;
  }
@@@ -1746,9 -1626,12 +1760,12 @@@ static int init_afu(struct cxlflash_cf
  		       "interface version 0x%llx\n", afu->version,
  		       afu->interface_version);
  		rc = -EINVAL;
 -		goto err2;
 +		goto err1;
  	}
  
+ 	afu->send_cmd = send_cmd_ioarrin;
+ 	afu->context_reset = context_reset_ioarrin;
+ 
  	pr_debug("%s: afu version %s, interface version 0x%llX\n", __func__,
  		 afu->version, afu->interface_version);
  
diff --git a/drivers/scsi/cxlflash/common.h b/drivers/scsi/cxlflash/common.h
index 811927d91c5c..20503d405bf0 100644
--- a/drivers/scsi/cxlflash/common.h
+++ b/drivers/scsi/cxlflash/common.h
@@ -159,6 +159,9 @@ struct afu {
 	 * fields after this point
 	 */
 
+	int (*send_cmd)(struct afu *, struct afu_cmd *);
+	void (*context_reset)(struct afu_cmd *);
+
 	/* AFU HW */
 	struct cxl_ioctl_start_work work;
 	struct cxlflash_afu_map __iomem *afu_map;	/* entire MMIO map */
* Unmerged path drivers/scsi/cxlflash/main.c
