tools/power turbostat: bugfix: --add u32 was printed as u64

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [tools] power turbostat: bugfix: --add u32 was printed as u64 (Prarit Bhargava) [1514290]
Rebuild_FUZZ: 94.64%
commit-author Len Brown <len.brown@intel.com>
commit 5f3aea57773dc7f788e374994636ffc0234a355f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5f3aea57.failed

When the "u32" keyword is used with --add, it means that
the output should be truncated to 32-bits.  This was not
happening and all 64-bits were printed.

Also, when no column name was used for an added MSR,
The default column name was in deximal, eg. MSR16.
Users report that they tend to use hex MSR numbers,
so print them in hex.  To always fit into the columns,
use the syntax M0x10.  Note that the user can always
supply any column header that they want.

eg --add msr0x10,MY_TSC

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 5f3aea57773dc7f788e374994636ffc0234a355f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 116d972321b7,5216549957f4..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -749,13 -834,19 +749,17 @@@ int format_counters(struct thread_data 
  	for (i = 0, mp = sys.tp; mp; i++, mp = mp->next) {
  		if (mp->format == FORMAT_RAW) {
  			if (mp->width == 32)
++<<<<<<< HEAD
 +				outp += sprintf(outp, "\t0x%08lx", (unsigned long) t->counter[i]);
++=======
+ 				outp += sprintf(outp, "%s0x%08x", (printed++ ? delim : ""), (unsigned int) t->counter[i]);
++>>>>>>> 5f3aea57773d (tools/power turbostat: bugfix: --add u32 was printed as u64)
  			else
 -				outp += sprintf(outp, "%s0x%016llx", (printed++ ? delim : ""), t->counter[i]);
 +				outp += sprintf(outp, "\t0x%016llx", t->counter[i]);
  		} else if (mp->format == FORMAT_DELTA) {
 -			if ((mp->type == COUNTER_ITEMS) && sums_need_wide_columns)
 -				outp += sprintf(outp, "%s%8lld", (printed++ ? delim : ""), t->counter[i]);
 -			else
 -				outp += sprintf(outp, "%s%lld", (printed++ ? delim : ""), t->counter[i]);
 +			outp += sprintf(outp, "\t%lld", t->counter[i]);
  		} else if (mp->format == FORMAT_PERCENT) {
 -			if (mp->type == COUNTER_USEC)
 -				outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), t->counter[i]/interval_float/10000);
 -			else
 -				outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), 100.0 * t->counter[i]/tsc);
 +			outp += sprintf(outp, "\t%.2f", 100.0 * t->counter[i]/t->tsc);
  		}
  	}
  
@@@ -776,13 -876,16 +780,17 @@@
  	for (i = 0, mp = sys.cp; mp; i++, mp = mp->next) {
  		if (mp->format == FORMAT_RAW) {
  			if (mp->width == 32)
++<<<<<<< HEAD
 +				outp += sprintf(outp, "\t0x%08lx", (unsigned long) c->counter[i]);
++=======
+ 				outp += sprintf(outp, "%s0x%08x", (printed++ ? delim : ""), (unsigned int) c->counter[i]);
++>>>>>>> 5f3aea57773d (tools/power turbostat: bugfix: --add u32 was printed as u64)
  			else
 -				outp += sprintf(outp, "%s0x%016llx", (printed++ ? delim : ""), c->counter[i]);
 +				outp += sprintf(outp, "\t0x%016llx", c->counter[i]);
  		} else if (mp->format == FORMAT_DELTA) {
 -			if ((mp->type == COUNTER_ITEMS) && sums_need_wide_columns)
 -				outp += sprintf(outp, "%s%8lld", (printed++ ? delim : ""), c->counter[i]);
 -			else
 -				outp += sprintf(outp, "%s%lld", (printed++ ? delim : ""), c->counter[i]);
 +			outp += sprintf(outp, "\t%lld", c->counter[i]);
  		} else if (mp->format == FORMAT_PERCENT) {
 -			outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), 100.0 * c->counter[i]/tsc);
 +			outp += sprintf(outp, "\t%.2f", 100.0 * c->counter[i]/t->tsc);
  		}
  	}
  
@@@ -864,13 -967,16 +872,17 @@@
  	for (i = 0, mp = sys.pp; mp; i++, mp = mp->next) {
  		if (mp->format == FORMAT_RAW) {
  			if (mp->width == 32)
++<<<<<<< HEAD
 +				outp += sprintf(outp, "\t0x%08lx", (unsigned long) p->counter[i]);
++=======
+ 				outp += sprintf(outp, "%s0x%08x", (printed++ ? delim : ""), (unsigned int) p->counter[i]);
++>>>>>>> 5f3aea57773d (tools/power turbostat: bugfix: --add u32 was printed as u64)
  			else
 -				outp += sprintf(outp, "%s0x%016llx", (printed++ ? delim : ""), p->counter[i]);
 +				outp += sprintf(outp, "\t0x%016llx", p->counter[i]);
  		} else if (mp->format == FORMAT_DELTA) {
 -			if ((mp->type == COUNTER_ITEMS) && sums_need_wide_columns)
 -				outp += sprintf(outp, "%s%8lld", (printed++ ? delim : ""), p->counter[i]);
 -			else
 -				outp += sprintf(outp, "%s%lld", (printed++ ? delim : ""), p->counter[i]);
 +			outp += sprintf(outp, "\t%lld", p->counter[i]);
  		} else if (mp->format == FORMAT_PERCENT) {
 -			outp += sprintf(outp, "%s%.2f", (printed++ ? delim : ""), 100.0 * p->counter[i]/tsc);
 +			outp += sprintf(outp, "\t%.2f", 100.0 * p->counter[i]/t->tsc);
  		}
  	}
  
@@@ -4408,25 -4732,13 +4420,13 @@@ next
  
  	/* generate default column header */
  	if (*name_buffer == '\0') {
- 		if (format == FORMAT_RAW) {
- 			if (width == 32)
- 				sprintf(name_buffer, "msr%d", msr_num);
- 			else
- 				sprintf(name_buffer, "MSR%d", msr_num);
- 		} else if (format == FORMAT_DELTA) {
- 			if (width == 32)
- 				sprintf(name_buffer, "cnt%d", msr_num);
- 			else
- 				sprintf(name_buffer, "CNT%d", msr_num);
- 		} else if (format == FORMAT_PERCENT) {
- 			if (width == 32)
- 				sprintf(name_buffer, "msr%d%%", msr_num);
- 			else
- 				sprintf(name_buffer, "MSR%d%%", msr_num);
- 		}
+ 		if (width == 32)
+ 			sprintf(name_buffer, "M0x%x%s", msr_num, format == FORMAT_PERCENT ? "%" : "");
+ 		else
+ 			sprintf(name_buffer, "M0X%x%s", msr_num, format == FORMAT_PERCENT ? "%" : "");
  	}
  
 -	if (add_counter(msr_num, path, name_buffer, width, scope, type, format, 0))
 +	if (add_counter(msr_num, path, name_buffer, width, scope, type, format))
  		fail++;
  
  	if (fail) {
* Unmerged path tools/power/x86/turbostat/turbostat.c
