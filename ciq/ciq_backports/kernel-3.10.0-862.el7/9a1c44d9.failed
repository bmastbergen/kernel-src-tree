geneve: fix needed_headroom and max_mtu for collect_metadata

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Eric Garver <e@erig.me>
commit 9a1c44d989bff4c992b8b9a112d9fda275ea5515
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9a1c44d9.failed

Since commit 9b4437a5b870 ("geneve: Unify LWT and netdev handling.")
when using COLLECT_METADATA geneve devices are created with too small of
a needed_headroom and too large of a max_mtu. This is because
ip_tunnel_info_af() is not valid with the device level info when using
COLLECT_METADATA and we mistakenly fall into the IPv4 case.

For COLLECT_METADATA, always use the worst case of ipv6 since both
sockets are created.

Fixes: 9b4437a5b870 ("geneve: Unify LWT and netdev handling.")
	Signed-off-by: Eric Garver <e@erig.me>
	Acked-by: Pravin B Shelar <pshelar@ovn.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9a1c44d989bff4c992b8b9a112d9fda275ea5515)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/geneve.c
diff --cc drivers/net/geneve.c
index c4c93ccffa85,6ebb0f559a42..000000000000
--- a/drivers/net/geneve.c
+++ b/drivers/net/geneve.c
@@@ -1295,10 -1133,13 +1295,14 @@@ static int geneve_configure(struct net 
  
  	/* make enough headroom for basic scenario */
  	encap_len = GENEVE_BASE_HLEN + ETH_HLEN;
++<<<<<<< HEAD
 +	if (remote->sa.sa_family == AF_INET)
++=======
+ 	if (!metadata && ip_tunnel_info_af(info) == AF_INET) {
++>>>>>>> 9a1c44d989bf (geneve: fix needed_headroom and max_mtu for collect_metadata)
  		encap_len += sizeof(struct iphdr);
 -		dev->max_mtu -= sizeof(struct iphdr);
 -	} else {
 +	else
  		encap_len += sizeof(struct ipv6hdr);
 -		dev->max_mtu -= sizeof(struct ipv6hdr);
 -	}
  	dev->needed_headroom = encap_len + ETH_HLEN;
  
  	if (metadata) {
* Unmerged path drivers/net/geneve.c
