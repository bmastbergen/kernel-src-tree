nfp: add devlink support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Simon Horman <simon.horman@netronome.com>
commit 1851f93fd2ee3dc0f3a6813385010a5d7ec1aabd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/1851f93f.failed

Add initial devlink support.  This patch simply switches allocation
of per-adapter structure to devlink's priv and register devlink
with empty ops table.  See following patches for implementation
of particular ops.

We should now clear the app pointer on exit, this is how devlink
callbacks will know app is not initialized.

	Signed-off-by: Simon Horman <simon.horman@netronome.com>
	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1851f93fd2ee3dc0f3a6813385010a5d7ec1aabd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/netronome/nfp/Makefile
#	drivers/net/ethernet/netronome/nfp/nfp_main.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_main.c
diff --cc drivers/net/ethernet/netronome/nfp/Makefile
index a30f2e651180,95f6b97b5d71..000000000000
--- a/drivers/net/ethernet/netronome/nfp/Makefile
+++ b/drivers/net/ethernet/netronome/nfp/Makefile
@@@ -14,6 -14,8 +14,11 @@@ nfp-objs := 
  	    nfpcore/nfp_resource.o \
  	    nfpcore/nfp_rtsym.o \
  	    nfpcore/nfp_target.o \
++<<<<<<< HEAD
++=======
+ 	    nfp_app.o \
+ 	    nfp_devlink.o \
++>>>>>>> 1851f93fd2ee (nfp: add devlink support)
  	    nfp_main.o \
  	    nfp_net_common.o \
  	    nfp_net_ethtool.o \
diff --cc drivers/net/ethernet/netronome/nfp/nfp_main.c
index 4a3794c9d3f8,f22f56c9218f..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_main.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_main.c
@@@ -339,7 -343,10 +341,12 @@@ static int nfp_pci_probe(struct pci_de
  		err = -ENOMEM;
  		goto err_rel_regions;
  	}
++<<<<<<< HEAD
++=======
+ 	pf = devlink_priv(devlink);
+ 	INIT_LIST_HEAD(&pf->vnics);
++>>>>>>> 1851f93fd2ee (nfp: add devlink support)
  	INIT_LIST_HEAD(&pf->ports);
 -	mutex_init(&pf->lock);
  	pci_set_drvdata(pdev, pf);
  	pf->pdev = pdev;
  
@@@ -378,7 -391,8 +391,12 @@@ err_cpp_free
  	nfp_cpp_free(pf->cpp);
  err_disable_msix:
  	pci_set_drvdata(pdev, NULL);
++<<<<<<< HEAD
 +	kfree(pf);
++=======
+ 	mutex_destroy(&pf->lock);
+ 	devlink_free(devlink);
++>>>>>>> 1851f93fd2ee (nfp: add devlink support)
  err_rel_regions:
  	pci_release_regions(pdev);
  err_pci_disable:
@@@ -402,7 -421,8 +425,12 @@@ static void nfp_pci_remove(struct pci_d
  	nfp_cpp_free(pf->cpp);
  
  	kfree(pf->eth_tbl);
++<<<<<<< HEAD
 +	kfree(pf);
++=======
+ 	mutex_destroy(&pf->lock);
+ 	devlink_free(devlink);
++>>>>>>> 1851f93fd2ee (nfp: add devlink support)
  	pci_release_regions(pdev);
  	pci_disable_device(pdev);
  }
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_main.c
index acc8cfe284f3,8f5a240c8d2f..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_main.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_main.c
@@@ -447,6 -492,19 +447,22 @@@ err_nn_free
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static int nfp_net_pf_app_init(struct nfp_pf *pf)
+ {
+ 	pf->app = nfp_app_alloc(pf);
+ 
+ 	return PTR_ERR_OR_ZERO(pf->app);
+ }
+ 
+ static void nfp_net_pf_app_clean(struct nfp_pf *pf)
+ {
+ 	nfp_app_free(pf->app);
+ 	pf->app = NULL;
+ }
+ 
++>>>>>>> 1851f93fd2ee (nfp: add devlink support)
  static void nfp_net_pci_remove_finish(struct nfp_pf *pf)
  {
  	nfp_net_debugfs_dir_clean(&pf->ddir);
* Unmerged path drivers/net/ethernet/netronome/nfp/Makefile
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_devlink.c b/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
new file mode 100644
index 000000000000..a8a52b3ff42b
--- /dev/null
+++ b/drivers/net/ethernet/netronome/nfp/nfp_devlink.c
@@ -0,0 +1,39 @@
+/*
+ * Copyright (C) 2017 Netronome Systems, Inc.
+ *
+ * This software is dual licensed under the GNU General License Version 2,
+ * June 1991 as shown in the file COPYING in the top-level directory of this
+ * source tree or the BSD 2-Clause License provided below.  You have the
+ * option to license this software under the complete terms of either license.
+ *
+ * The BSD 2-Clause License:
+ *
+ *     Redistribution and use in source and binary forms, with or
+ *     without modification, are permitted provided that the following
+ *     conditions are met:
+ *
+ *      1. Redistributions of source code must retain the above
+ *         copyright notice, this list of conditions and the following
+ *         disclaimer.
+ *
+ *      2. Redistributions in binary form must reproduce the above
+ *         copyright notice, this list of conditions and the following
+ *         disclaimer in the documentation and/or other materials
+ *         provided with the distribution.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
+ * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+ * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+
+#include <net/devlink.h>
+
+#include "nfp_main.h"
+
+const struct devlink_ops nfp_devlink_ops = {
+};
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_main.c
diff --git a/drivers/net/ethernet/netronome/nfp/nfp_main.h b/drivers/net/ethernet/netronome/nfp/nfp_main.h
index 1ac430fbaa18..1e4921015181 100644
--- a/drivers/net/ethernet/netronome/nfp/nfp_main.h
+++ b/drivers/net/ethernet/netronome/nfp/nfp_main.h
@@ -47,6 +47,7 @@
 #include <linux/workqueue.h>
 
 struct dentry;
+struct devlink_ops;
 struct pci_dev;
 
 struct nfp_cpp;
@@ -99,6 +100,8 @@ struct nfp_pf {
 
 extern struct pci_driver nfp_netvf_pci_driver;
 
+extern const struct devlink_ops nfp_devlink_ops;
+
 int nfp_net_pci_probe(struct nfp_pf *pf);
 void nfp_net_pci_remove(struct nfp_pf *pf);
 
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_main.c
