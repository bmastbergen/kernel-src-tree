intel_pstate: Remove freq calculation from intel_pstate_calc_busy()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Philippe Longepe <philippe.longepe@linux.intel.com>
commit 8fa520af50817d5f30d293f507c937f561b3e6b9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8fa520af.failed

Use a helper function to compute the average pstate and call it only
where it is needed (only when tracing or in intel_pstate_get).

	Signed-off-by: Philippe Longepe <philippe.longepe@linux.intel.com>
	Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 8fa520af50817d5f30d293f507c937f561b3e6b9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 5e3c944b968b,4acb904908d1..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -901,20 -914,10 +895,27 @@@ static inline void intel_pstate_sample(
  	cpu->prev_tsc = tsc;
  }
  
++<<<<<<< HEAD
 +static inline void intel_hwp_set_sample_time(struct cpudata *cpu)
 +{
 +	int delay;
 +
 +	delay = msecs_to_jiffies(50);
 +	mod_timer_pinned(&cpu->timer, jiffies + delay);
 +}
 +
 +static inline void intel_pstate_set_sample_time(struct cpudata *cpu)
 +{
 +	int delay;
 +
 +	delay = msecs_to_jiffies(pid_params.sample_rate_ms);
 +	mod_timer_pinned(&cpu->timer, jiffies + delay);
++=======
+ static inline int32_t get_avg_frequency(struct cpudata *cpu)
+ {
+ 	return div64_u64(cpu->pstate.max_pstate_physical * cpu->sample.aperf *
+ 		cpu->pstate.scaling, cpu->sample.mperf);
++>>>>>>> 8fa520af5081 (intel_pstate: Remove freq calculation from intel_pstate_calc_busy())
  }
  
  static inline int32_t get_target_pstate_use_cpu_load(struct cpudata *cpu)
@@@ -1015,26 -1015,20 +1016,26 @@@ static inline void intel_pstate_adjust_
  		sample->mperf,
  		sample->aperf,
  		sample->tsc,
- 		sample->freq);
+ 		get_avg_frequency(cpu));
  }
  
 -static void intel_pstate_update_util(struct update_util_data *data, u64 time,
 -				     unsigned long util, unsigned long max)
 +static void intel_hwp_timer_func(unsigned long __data)
  {
 -	struct cpudata *cpu = container_of(data, struct cpudata, update_util);
 -	u64 delta_ns = time - cpu->sample.time;
 +	struct cpudata *cpu = (struct cpudata *) __data;
  
 -	if ((s64)delta_ns >= pid_params.sample_rate_ns) {
 -		intel_pstate_sample(cpu, time);
 -		if (!hwp_active)
 -			intel_pstate_adjust_busy_pstate(cpu);
 -	}
 +	intel_pstate_sample(cpu);
 +	intel_hwp_set_sample_time(cpu);
 +}
 +
 +static void intel_pstate_timer_func(unsigned long __data)
 +{
 +	struct cpudata *cpu = (struct cpudata *) __data;
 +
 +	intel_pstate_sample(cpu);
 +
 +	intel_pstate_adjust_busy_pstate(cpu);
 +
 +	intel_pstate_set_sample_time(cpu);
  }
  
  #define ICPU(model, policy) \
* Unmerged path drivers/cpufreq/intel_pstate.c
