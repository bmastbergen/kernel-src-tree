ACPI / CPPC: optimized cpc_read and cpc_write

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Prakash, Prashanth <pprakash@codeaurora.org>
commit 77e3d86f2f8c533c9c72fb5585b623b447d9bd57
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/77e3d86f.failed

cpc_read and cpc_write are used while holding the pcc_lock spin_lock,
so they need to be as fast as possible. acpi_os_read/write_memory
APIs linearly search through a list for cached mapping which is
quite expensive. Since the PCC subspace is already mapped into
virtual address space during initialization, we can just add the
offset and access the necessary CPPC registers.

This patch + similar changes to PCC driver reduce the time per freq.
transition from around 200us to about 20us for the CPPC cpufreq
driver.

	Signed-off-by: Prashanth Prakash <pprakash@codeaurora.org>
	Acked-by: Ashwin Chaugule <ashwin.chaugule@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 77e3d86f2f8c533c9c72fb5585b623b447d9bd57)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/cppc_acpi.c
* Unmerged path drivers/acpi/cppc_acpi.c
* Unmerged path drivers/acpi/cppc_acpi.c
