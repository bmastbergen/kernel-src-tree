net/mlx5e/core/en_fs: fix pointer dereference after free in mlx5e_execute_l2_action

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e/core/en_fs: fix pointer dereference after free in mlx5e_execute_l2_action (Kamal Heib) [1456694]
Rebuild_FUZZ: 97.53%
commit-author Gustavo A. R. Silva <garsilva@embeddedor.com>
commit 39a4b86f0de4ce5024985a56fc39b16194b04313
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/39a4b86f.failed

hn is being kfree'd in mlx5e_del_l2_from_hash and then dereferenced
by accessing hn->ai.addr

Fix this by copying the MAC address into a local variable for its safe use
in all possible execution paths within function mlx5e_execute_l2_action.

Addresses-Coverity-ID: 1417789
Fixes: eeb66cdb6826 ("net/mlx5: Separate between E-Switch and MPFS")
	Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
	Acked-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 39a4b86f0de4ce5024985a56fc39b16194b04313)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
index b408896f4719,4837045ffba3..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
@@@ -365,17 -364,33 +365,45 @@@ static void mlx5e_del_vlan_rules(struc
  static void mlx5e_execute_l2_action(struct mlx5e_priv *priv,
  				    struct mlx5e_l2_hash_node *hn)
  {
++<<<<<<< HEAD
 +	switch (hn->action) {
 +	case MLX5E_ACTION_ADD:
 +		mlx5e_add_l2_flow_rule(priv, &hn->ai, MLX5E_FULLMATCH);
++=======
+ 	u8 action = hn->action;
+ 	u8 mac_addr[ETH_ALEN];
+ 	int l2_err = 0;
+ 
+ 	ether_addr_copy(mac_addr, hn->ai.addr);
+ 
+ 	switch (action) {
+ 	case MLX5E_ACTION_ADD:
+ 		mlx5e_add_l2_flow_rule(priv, &hn->ai, MLX5E_FULLMATCH);
+ 		if (!is_multicast_ether_addr(mac_addr)) {
+ 			l2_err = mlx5_mpfs_add_mac(priv->mdev, mac_addr);
+ 			hn->mpfs = !l2_err;
+ 		}
++>>>>>>> 39a4b86f0de4 (net/mlx5e/core/en_fs: fix pointer dereference after free in mlx5e_execute_l2_action)
  		hn->action = MLX5E_ACTION_NONE;
  		break;
  
  	case MLX5E_ACTION_DEL:
++<<<<<<< HEAD
++=======
+ 		if (!is_multicast_ether_addr(mac_addr) && hn->mpfs)
+ 			l2_err = mlx5_mpfs_del_mac(priv->mdev, mac_addr);
++>>>>>>> 39a4b86f0de4 (net/mlx5e/core/en_fs: fix pointer dereference after free in mlx5e_execute_l2_action)
  		mlx5e_del_l2_flow_rule(priv, &hn->ai);
  		mlx5e_del_l2_from_hash(hn);
  		break;
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	if (l2_err)
+ 		netdev_warn(priv->netdev, "MPFS, failed to %s mac %pM, err(%d)\n",
+ 			    action == MLX5E_ACTION_ADD ? "add" : "del", mac_addr, l2_err);
++>>>>>>> 39a4b86f0de4 (net/mlx5e/core/en_fs: fix pointer dereference after free in mlx5e_execute_l2_action)
  }
  
  static void mlx5e_sync_netdev_addr(struct mlx5e_priv *priv)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
