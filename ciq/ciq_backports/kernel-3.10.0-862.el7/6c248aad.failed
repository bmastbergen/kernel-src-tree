Drivers: hv: Base autoeoi enablement based on hypervisor hints

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [hv] Base autoeoi enablement based on hypervisor hints (Mohammed Gamal) [1467258]
Rebuild_FUZZ: 88.29%
commit-author K. Y. Srinivasan <kys@microsoft.com>
commit 6c248aad81c8903981db9f12fd74189fa01b3789
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6c248aad.failed

Don't enable auto-eoi if the hypervisor recommends otherwise. This will
enable vAPIC functionality if available.

	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6c248aad81c8903981db9f12fd74189fa01b3789)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/uapi/asm/hyperv.h
diff --cc arch/x86/include/uapi/asm/hyperv.h
index c0d21031536f,432df4b1baec..000000000000
--- a/arch/x86/include/uapi/asm/hyperv.h
+++ b/arch/x86/include/uapi/asm/hyperv.h
@@@ -142,6 -147,16 +142,19 @@@
   */
  #define HV_X64_RELAXED_TIMING_RECOMMENDED	(1 << 5)
  
++<<<<<<< HEAD
++=======
+ /*
+  * Virtual APIC support
+  */
+ #define HV_X64_DEPRECATING_AEOI_RECOMMENDED	(1 << 9)
+ 
+ /*
+  * Crash notification flag.
+  */
+ #define HV_CRASH_CTL_CRASH_NOTIFY (1ULL << 63)
+ 
++>>>>>>> 6c248aad81c8 (Drivers: hv: Base autoeoi enablement based on hypervisor hints)
  /* MSR used to identify the guest OS. */
  #define HV_X64_MSR_GUEST_OS_ID			0x40000000
  
* Unmerged path arch/x86/include/uapi/asm/hyperv.h
diff --git a/drivers/hv/hv.c b/drivers/hv/hv.c
index f6a591c69dfd..6e556ce70d24 100644
--- a/drivers/hv/hv.c
+++ b/drivers/hv/hv.c
@@ -462,7 +462,10 @@ int hv_synic_init(unsigned int cpu)
 	shared_sint.as_uint64 = 0;
 	shared_sint.vector = HYPERVISOR_CALLBACK_VECTOR;
 	shared_sint.masked = false;
-	shared_sint.auto_eoi = true;
+	if (ms_hyperv.hints & HV_X64_DEPRECATING_AEOI_RECOMMENDED)
+		shared_sint.auto_eoi = false;
+	else
+		shared_sint.auto_eoi = true;
 
 	wrmsrl(HV_X64_MSR_SINT0 + VMBUS_MESSAGE_SINT, shared_sint.as_uint64);
 
