vxlan: simplify exception handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author pravin shelar <pshelar@ovn.org>
commit c46b7897ad5ba49b215882fa6a1e4c28d21acf4f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c46b7897.failed

vxlan egress path error handling has became complicated, it
need to handle IPv4 and IPv6 tunnel cases.
Earlier patch removes vlan handling from vxlan_build_skb(), so
vxlan_build_skb does not need to free skb and we can simplify
the xmit path by having single error handling for both type of
tunnels.

	Signed-off-by: Pravin B Shelar <pshelar@ovn.org>
	Acked-by: Jiri Benc <jbenc@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c46b7897ad5ba49b215882fa6a1e4c28d21acf4f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index f909b180e18b,40ea9e06d8d1..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1985,9 -2006,12 +1981,16 @@@ static void vxlan_xmit_one(struct sk_bu
  	}
  
  	if (dst->sa.sa_family == AF_INET) {
++<<<<<<< HEAD
 +		if (!vxlan->vn4_sock)
++=======
+ 		struct vxlan_sock *sock4 = rcu_dereference(vxlan->vn4_sock);
+ 		struct rtable *rt;
+ 
+ 		if (!sock4)
++>>>>>>> c46b7897ad5b (vxlan: simplify exception handling)
  			goto drop;
 -		sk = sock4->sock->sk;
 +		sk = vxlan->vn4_sock->sock->sk;
  
  		rt = vxlan_get_route(vxlan, skb,
  				     rdst ? rdst->remote_ifindex : 0, tos,
@@@ -2040,14 -2066,10 +2045,18 @@@
  				    src_port, dst_port, xnet, !udp_sum);
  #if IS_ENABLED(CONFIG_IPV6)
  	} else {
++<<<<<<< HEAD
 +		struct dst_entry *ndst;
++=======
+ 		struct vxlan_sock *sock6 = rcu_dereference(vxlan->vn6_sock);
++>>>>>>> c46b7897ad5b (vxlan: simplify exception handling)
  		u32 rt6i_flags;
  
 -		ndst = vxlan6_get_route(vxlan, sock6, skb,
 +		if (!vxlan->vn6_sock)
 +			goto drop;
 +		sk = vxlan->vn6_sock->sock->sk;
 +
 +		ndst = vxlan6_get_route(vxlan, skb,
  					rdst ? rdst->remote_ifindex : 0, tos,
  					label, &dst->sin6.sin6_addr,
  					&src->sin6.sin6_addr,
* Unmerged path drivers/net/vxlan.c
