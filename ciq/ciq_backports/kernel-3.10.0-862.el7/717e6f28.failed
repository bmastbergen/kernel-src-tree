ceph: avoid panic in create_session_open_msg() if utsname() returns NULL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 717e6f2893eb35ce6728c3cacdc297b78d371b31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/717e6f28.failed

utsname() can return NULL while process is exiting. Kernel releases
file locks during process exits. We send request to mds when releasing
file lock. So it's possible that we open mds session while process is
exiting. utsname() is called in create_session_open_msg().

Link: http://tracker.ceph.com/issues/21275
	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Reviewed-by: Jeff Layton <jlayton@redhat.com>
[idryomov@gmail.com: drop utsname.h include from mds_client.c]
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 717e6f2893eb35ce6728c3cacdc297b78d371b31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/mds_client.h
diff --cc fs/ceph/mds_client.h
index de2a0169112c,636d6b2ec49c..000000000000
--- a/fs/ceph/mds_client.h
+++ b/fs/ceph/mds_client.h
@@@ -7,6 -7,8 +7,11 @@@
  #include <linux/mutex.h>
  #include <linux/rbtree.h>
  #include <linux/spinlock.h>
++<<<<<<< HEAD
++=======
+ #include <linux/refcount.h>
+ #include <linux/utsname.h>
++>>>>>>> 717e6f2893eb (ceph: avoid panic in create_session_open_msg() if utsname() returns NULL)
  
  #include <linux/ceph/types.h>
  #include <linux/ceph/messenger.h>
diff --git a/fs/ceph/mds_client.c b/fs/ceph/mds_client.c
index 0c289d36616c..bf9479c4c7c4 100644
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@ -7,7 +7,6 @@
 #include <linux/sched.h>
 #include <linux/debugfs.h>
 #include <linux/seq_file.h>
-#include <linux/utsname.h>
 #include <linux/ratelimit.h>
 
 #include "super.h"
@@ -849,8 +848,8 @@ static struct ceph_msg *create_session_open_msg(struct ceph_mds_client *mdsc, u6
 	void *p;
 
 	const char* metadata[][2] = {
-		{"hostname", utsname()->nodename},
-		{"kernel_version", utsname()->release},
+		{"hostname", mdsc->nodename},
+		{"kernel_version", init_utsname()->release},
 		{"entity_id", opt->name ? : ""},
 		{"root", fsopt->server_path ? : "/"},
 		{NULL, NULL}
@@ -3528,6 +3527,8 @@ int ceph_mdsc_init(struct ceph_fs_client *fsc)
 	init_rwsem(&mdsc->pool_perm_rwsem);
 	mdsc->pool_perm_tree = RB_ROOT;
 
+	strncpy(mdsc->nodename, utsname()->nodename,
+		sizeof(mdsc->nodename) - 1);
 	return 0;
 }
 
* Unmerged path fs/ceph/mds_client.h
