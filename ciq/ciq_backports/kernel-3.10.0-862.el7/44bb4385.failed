fs_is_visible only needs namespace_sem held shared

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 44bb4385ce1cfb231d37cbc7bb6faf70f98b7b17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/44bb4385.failed

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 44bb4385ce1cfb231d37cbc7bb6faf70f98b7b17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/namespace.c
diff --cc fs/namespace.c
index d21098c35db1,0e54ad6ccd8a..000000000000
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@@ -3255,21 -2864,34 +3255,33 @@@ void update_mnt_policy(struct user_name
  {
  	struct mnt_namespace *ns = current->nsproxy->mnt_ns;
  	struct mount *mnt;
 -	bool visible = false;
  
++<<<<<<< HEAD
++=======
+ 	if (unlikely(!ns))
+ 		return false;
+ 
++>>>>>>> 44bb4385ce1c (fs_is_visible only needs namespace_sem held shared)
  	down_read(&namespace_sem);
  	list_for_each_entry(mnt, &ns->list, mnt_list) {
 -		struct mount *child;
 -		if (mnt->mnt.mnt_sb->s_type != type)
 -			continue;
 -
 -		/* This mount is not fully visible if there are any child mounts
 -		 * that cover anything except for empty directories.
 -		 */
 -		list_for_each_entry(child, &mnt->mnt_mounts, mnt_child) {
 -			struct inode *inode = child->mnt_mountpoint->d_inode;
 -			if (!S_ISDIR(inode->i_mode))
 -				goto next;
 -			if (inode->i_nlink != 2)
 -				goto next;
 +		switch (mnt->mnt.mnt_sb->s_magic) {
 +		case SYSFS_MAGIC:
 +			userns->may_mount_sysfs = true;
 +			break;
 +		case PROC_SUPER_MAGIC:
 +			userns->may_mount_proc = true;
 +			break;
  		}
 -		visible = true;
 -		goto found;
 -	next:	;
 +		if (userns->may_mount_sysfs && userns->may_mount_proc)
 +			break;
  	}
++<<<<<<< HEAD
++	up_read(&namespace_sem);
++=======
+ found:
  	up_read(&namespace_sem);
+ 	return visible;
++>>>>>>> 44bb4385ce1c (fs_is_visible only needs namespace_sem held shared)
  }
  
  static void *mntns_get(struct task_struct *task)
* Unmerged path fs/namespace.c
