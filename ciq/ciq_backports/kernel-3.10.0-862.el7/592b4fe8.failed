netvsc: fold in get_outbound_net_device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author stephen hemminger <stephen@networkplumber.org>
commit 592b4fe895c03315d9917bf0227a165be401ec33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/592b4fe8.failed

No longer need common code to find get_outbound_net_device.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 592b4fe895c03315d9917bf0227a165be401ec33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index 41aec1c37f14,7c5ed8fe7a4f..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -97,30 -92,9 +97,36 @@@ static void free_netvsc_device(struct n
  	kfree(nvdev);
  }
  
++<<<<<<< HEAD
 +static struct netvsc_device *get_outbound_net_device(struct hv_device *device)
 +{
 +	struct netvsc_device *net_device = hv_device_to_netvsc_device(device);
 +
 +	if (net_device && net_device->destroy)
 +		net_device = NULL;
 +
 +	return net_device;
 +}
 +
 +static struct netvsc_device *get_inbound_net_device(struct hv_device *device)
 +{
 +	struct netvsc_device *net_device = hv_device_to_netvsc_device(device);
 +
 +	if (!net_device)
 +		goto get_in_err;
 +
 +	if (net_device->destroy &&
 +	    atomic_read(&net_device->num_outstanding_sends) == 0 &&
 +	    atomic_read(&net_device->num_outstanding_recvs) == 0)
 +		net_device = NULL;
 +
 +get_in_err:
 +	return net_device;
++=======
+ static void free_netvsc_device_rcu(struct netvsc_device *nvdev)
+ {
+ 	call_rcu(&nvdev->rcu, free_netvsc_device);
++>>>>>>> 592b4fe895c0 (netvsc: fold in get_outbound_net_device)
  }
  
  static void netvsc_destroy_buf(struct hv_device *device)
@@@ -857,10 -823,9 +863,10 @@@ int netvsc_send(struct hv_device *devic
  		struct hv_page_buffer **pb,
  		struct sk_buff *skb)
  {
- 	struct netvsc_device *net_device;
+ 	struct netvsc_device *net_device = hv_device_to_netvsc_device(device);
  	int ret = 0;
 -	struct netvsc_channel *nvchan;
 +	struct vmbus_channel *out_channel;
 +	u16 q_idx = packet->q_idx;
  	u32 pktlen = packet->total_data_buflen, msd_len = 0;
  	unsigned int section_index = NETVSC_INVALID_INDEX;
  	struct multi_send_data *msdp;
* Unmerged path drivers/net/hyperv/netvsc.c
