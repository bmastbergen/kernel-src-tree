soreuseport: Resolve merge conflict for v4/v6 ordering fix

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Craig Gallek <kraig@google.com>
commit d296ba60d8e2de23a350796a567a3aa90fe1cb6e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d296ba60.failed

d894ba18d4e4 ("soreuseport: fix ordering for mixed v4/v6 sockets")
was merged as a bug fix to the net tree.  Two conflicting changes
were committed to net-next before the above fix was merged back to
net-next:
ca065d0cf80f ("udp: no longer use SLAB_DESTROY_BY_RCU")
3b24d854cb35 ("tcp/dccp: do not touch listener sk_refcnt under synflood")

These changes switched the datastructure used for TCP and UDP sockets
from hlist_nulls to hlist.  This patch applies the necessary parts
of the net tree fix to net-next which were not automatic as part of the
merge.

Fixes: 1602f49b58ab ("Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net")
	Signed-off-by: Craig Gallek <kraig@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d296ba60d8e2de23a350796a567a3aa90fe1cb6e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/inet_hashtables.c
diff --cc net/ipv4/inet_hashtables.c
index 94ae743db486,b76b0d7e59c1..000000000000
--- a/net/ipv4/inet_hashtables.c
+++ b/net/ipv4/inet_hashtables.c
@@@ -436,18 -474,36 +436,32 @@@ static void __inet_hash(struct sock *sk
  	ilb = &hashinfo->listening_hash[inet_sk_listen_hashfn(sk)];
  
  	spin_lock(&ilb->lock);
++<<<<<<< HEAD
 +	__sk_nulls_add_node_rcu(sk, &ilb->head);
++=======
+ 	if (sk->sk_reuseport) {
+ 		err = inet_reuseport_add_sock(sk, ilb, saddr_same);
+ 		if (err)
+ 			goto unlock;
+ 	}
+ 	if (IS_ENABLED(CONFIG_IPV6) && sk->sk_reuseport &&
+ 		sk->sk_family == AF_INET6)
+ 		hlist_add_tail_rcu(&sk->sk_node, &ilb->head);
+ 	else
+ 		hlist_add_head_rcu(&sk->sk_node, &ilb->head);
+ 	sock_set_flag(sk, SOCK_RCU_FREE);
++>>>>>>> d296ba60d8e2 (soreuseport: Resolve merge conflict for v4/v6 ordering fix)
  	sock_prot_inuse_add(sock_net(sk), sk->sk_prot, 1);
 -unlock:
  	spin_unlock(&ilb->lock);
 -
 -	return err;
  }
 -EXPORT_SYMBOL(__inet_hash);
  
 -int inet_hash(struct sock *sk)
 +void inet_hash(struct sock *sk)
  {
 -	int err = 0;
 -
  	if (sk->sk_state != TCP_CLOSE) {
  		local_bh_disable();
 -		err = __inet_hash(sk, NULL, ipv4_rcv_saddr_equal);
 +		__inet_hash(sk);
  		local_bh_enable();
  	}
 -
 -	return err;
  }
  EXPORT_SYMBOL_GPL(inet_hash);
  
diff --git a/include/net/sock.h b/include/net/sock.h
index f6191ea845e2..c5f073c4a182 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -641,7 +641,11 @@ static inline void sk_add_node(struct sock *sk, struct hlist_head *list)
 static inline void sk_add_node_rcu(struct sock *sk, struct hlist_head *list)
 {
 	sock_hold(sk);
-	hlist_add_head_rcu(&sk->sk_node, list);
+	if (IS_ENABLED(CONFIG_IPV6) && sk->sk_reuseport &&
+	    sk->sk_family == AF_INET6)
+		hlist_add_tail_rcu(&sk->sk_node, list);
+	else
+		hlist_add_head_rcu(&sk->sk_node, list);
 }
 
 static inline void __sk_nulls_add_node_rcu(struct sock *sk, struct hlist_nulls_head *list)
* Unmerged path net/ipv4/inet_hashtables.c
