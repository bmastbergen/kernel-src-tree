scsi: smartpqi: update kexec and power down support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] smartpqi: update kexec and power down support (Don Brace) [1457414]
Rebuild_FUZZ: 93.75%
commit-author Kevin Barnett <kevin.barnett@microsemi.com>
commit b6d478119edeaca964b46796fd26893b81f8a561
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b6d47811.failed

Add PQI reset to driver shutdown callback to work around controller bug.

During an 1.) OS shutdown or 2.) kexec outside of a kdump, the Linux
kernel will clear BME on our controller.

If BME is cleared during a controller/host PCIe transfer, the controller
will lock up.

So we perform a PQI reset in the driver's shutdown callback function to
eliminate the possibility of a controller/host PCIe transfer being
active when the kernel clears BME immediately after calling the driver's
shutdown callback.

	Reviewed-by: Scott Benesh <scott.benesh@microsemi.com>
	Signed-off-by: Kevin Barnett <kevin.barnett@microsemi.com>
	Signed-off-by: Don Brace <don.brace@microsemi.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b6d478119edeaca964b46796fd26893b81f8a561)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/smartpqi/smartpqi_init.c
diff --cc drivers/scsi/smartpqi/smartpqi_init.c
index 63928022276c,afd3eed83044..000000000000
--- a/drivers/scsi/smartpqi/smartpqi_init.c
+++ b/drivers/scsi/smartpqi/smartpqi_init.c
@@@ -6100,7 -6699,8 +6100,12 @@@ static void pqi_shutdown(struct pci_de
  	 * Write all data in the controller's battery-backed cache to
  	 * storage.
  	 */
++<<<<<<< HEAD
 +	rc = pqi_flush_cache(ctrl_info);
++=======
+ 	rc = pqi_flush_cache(ctrl_info, SHUTDOWN);
+ 	pqi_reset(ctrl_info);
++>>>>>>> b6d478119ede (scsi: smartpqi: update kexec and power down support)
  	if (rc == 0)
  		return;
  
* Unmerged path drivers/scsi/smartpqi/smartpqi_init.c
