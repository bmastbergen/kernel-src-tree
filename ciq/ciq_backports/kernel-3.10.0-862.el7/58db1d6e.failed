perf tools: Move units conversion/formatting routines to separate object

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 58db1d6e7d5d24afa2d32e916fd6f6b6d240ba93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/58db1d6e.failed

Out of util.h, to disentangle it a bit more.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-vpksyj3w5fk9t8s6mxmkajyr@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 58db1d6e7d5d24afa2d32e916fd6f6b6d240ba93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/hists.c
#	tools/perf/util/util.c
#	tools/perf/util/util.h
diff --cc tools/perf/ui/browsers/hists.c
index 38be9b0f7fe0,1b12a69740b3..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -19,6 -23,8 +19,11 @@@
  #include "map.h"
  #include "annotate.h"
  #include "srcline.h"
++<<<<<<< HEAD
++=======
+ #include "string2.h"
+ #include "units.h"
++>>>>>>> 58db1d6e7d5d (perf tools: Move units conversion/formatting routines to separate object)
  
  #include "sane_ctype.h"
  
diff --cc tools/perf/util/util.c
index f6c11c5d964f,7741d5f6022b..000000000000
--- a/tools/perf/util/util.c
+++ b/tools/perf/util/util.c
@@@ -658,68 -709,3 +636,71 @@@ int fetch_current_timestamp(char *buf, 
  
  	return 0;
  }
++<<<<<<< HEAD
 +
 +void print_binary(unsigned char *data, size_t len,
 +		  size_t bytes_per_line, print_binary_t printer,
 +		  void *extra)
 +{
 +	size_t i, j, mask;
 +
 +	if (!printer)
 +		return;
 +
 +	bytes_per_line = roundup_pow_of_two(bytes_per_line);
 +	mask = bytes_per_line - 1;
 +
 +	printer(BINARY_PRINT_DATA_BEGIN, 0, extra);
 +	for (i = 0; i < len; i++) {
 +		if ((i & mask) == 0) {
 +			printer(BINARY_PRINT_LINE_BEGIN, -1, extra);
 +			printer(BINARY_PRINT_ADDR, i, extra);
 +		}
 +
 +		printer(BINARY_PRINT_NUM_DATA, data[i], extra);
 +
 +		if (((i & mask) == mask) || i == len - 1) {
 +			for (j = 0; j < mask-(i & mask); j++)
 +				printer(BINARY_PRINT_NUM_PAD, -1, extra);
 +
 +			printer(BINARY_PRINT_SEP, i, extra);
 +			for (j = i & ~mask; j <= i; j++)
 +				printer(BINARY_PRINT_CHAR_DATA, data[j], extra);
 +			for (j = 0; j < mask-(i & mask); j++)
 +				printer(BINARY_PRINT_CHAR_PAD, i, extra);
 +			printer(BINARY_PRINT_LINE_END, -1, extra);
 +		}
 +	}
 +	printer(BINARY_PRINT_DATA_END, -1, extra);
 +}
 +
 +int is_printable_array(char *p, unsigned int len)
 +{
 +	unsigned int i;
 +
 +	if (!p || !len || p[len - 1] != 0)
 +		return 0;
 +
 +	len--;
 +
 +	for (i = 0; i < len; i++) {
 +		if (!isprint(p[i]) && !isspace(p[i]))
 +			return 0;
 +	}
 +	return 1;
 +}
 +
 +int unit_number__scnprintf(char *buf, size_t size, u64 n)
 +{
 +	char unit[4] = "BKMG";
 +	int i = 0;
 +
 +	while (((n / 1024) > 1) && (i < 3)) {
 +		n /= 1024;
 +		i++;
 +	}
 +
 +	return scnprintf(buf, size, "%" PRIu64 "%c", n, unit[i]);
 +}
++=======
++>>>>>>> 58db1d6e7d5d (perf tools: Move units conversion/formatting routines to separate object)
diff --cc tools/perf/util/util.h
index 5f9bec1e16fd,add9e77369a2..000000000000
--- a/tools/perf/util/util.h
+++ b/tools/perf/util/util.h
@@@ -82,19 -73,6 +82,22 @@@ int copyfile(const char *from, const ch
  int copyfile_mode(const char *from, const char *to, mode_t mode);
  int copyfile_offset(int fromfd, loff_t from_ofs, int tofd, loff_t to_ofs, u64 size);
  
++<<<<<<< HEAD
 +s64 perf_atoll(const char *str);
 +char **argv_split(const char *str, int *argcp);
 +void argv_free(char **argv);
 +bool strglobmatch(const char *str, const char *pat);
 +bool strglobmatch_nocase(const char *str, const char *pat);
 +bool strlazymatch(const char *str, const char *pat);
 +static inline bool strisglob(const char *str)
 +{
 +	return strpbrk(str, "*?[") != NULL;
 +}
 +int strtailcmp(const char *s1, const char *s2);
 +char *strxfrchar(char *s, char from, char to);
 +unsigned long convert_unit(unsigned long value, char *unit);
++=======
++>>>>>>> 58db1d6e7d5d (perf tools: Move units conversion/formatting routines to separate object)
  ssize_t readn(int fd, void *buf, size_t n);
  ssize_t writen(int fd, void *buf, size_t n);
  
@@@ -161,53 -114,23 +164,51 @@@ int gzip_decompress_to_file(const char 
  int lzma_decompress_to_file(const char *input, int output_fd);
  #endif
  
 -int get_stack_size(const char *str, unsigned long *_size);
 +char *asprintf_expr_inout_ints(const char *var, bool in, size_t nints, int *ints);
  
 -int fetch_kernel_version(unsigned int *puint,
 -			 char *str, size_t str_sz);
 -#define KVER_VERSION(x)		(((x) >> 16) & 0xff)
 -#define KVER_PATCHLEVEL(x)	(((x) >> 8) & 0xff)
 -#define KVER_SUBLEVEL(x)	((x) & 0xff)
 -#define KVER_FMT	"%d.%d.%d"
 -#define KVER_PARAM(x)	KVER_VERSION(x), KVER_PATCHLEVEL(x), KVER_SUBLEVEL(x)
 +static inline char *asprintf_expr_in_ints(const char *var, size_t nints, int *ints)
 +{
 +	return asprintf_expr_inout_ints(var, true, nints, ints);
 +}
 +
 +static inline char *asprintf_expr_not_in_ints(const char *var, size_t nints, int *ints)
 +{
 +	return asprintf_expr_inout_ints(var, false, nints, ints);
 +}
 +
 +int get_stack_size(const char *str, unsigned long *_size);
  
  const char *perf_tip(const char *dirpath);
 +bool is_regular_file(const char *file);
  int fetch_current_timestamp(char *buf, size_t sz);
  
 -#ifndef HAVE_SCHED_GETCPU_SUPPORT
 -int sched_getcpu(void);
 +enum binary_printer_ops {
 +	BINARY_PRINT_DATA_BEGIN,
 +	BINARY_PRINT_LINE_BEGIN,
 +	BINARY_PRINT_ADDR,
 +	BINARY_PRINT_NUM_DATA,
 +	BINARY_PRINT_NUM_PAD,
 +	BINARY_PRINT_SEP,
 +	BINARY_PRINT_CHAR_DATA,
 +	BINARY_PRINT_CHAR_PAD,
 +	BINARY_PRINT_LINE_END,
 +	BINARY_PRINT_DATA_END,
 +};
 +
 +typedef void (*print_binary_t)(enum binary_printer_ops,
 +			       unsigned int val,
 +			       void *extra);
 +
 +void print_binary(unsigned char *data, size_t len,
 +		  size_t bytes_per_line, print_binary_t printer,
 +		  void *extra);
 +
 +#if !defined(__GLIBC__) && !defined(__ANDROID__)
 +extern int sched_getcpu(void);
  #endif
  
 +int is_printable_array(char *p, unsigned int len);
 +
  int timestamp__scnprintf_usec(u64 timestamp, char *buf, size_t sz);
  
- int unit_number__scnprintf(char *buf, size_t size, u64 n);
- 
  #endif /* GIT_COMPAT_UTIL_H */
diff --git a/tools/perf/builtin-record.c b/tools/perf/builtin-record.c
index 83ef8562c896..782fc8c88b0d 100644
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@ -36,6 +36,7 @@
 #include "util/parse-regs-options.h"
 #include "util/trigger.h"
 #include "util/perf-hooks.h"
+#include "util/units.h"
 #include "asm/bug.h"
 
 #include <unistd.h>
diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c
index 377f119662a3..0769dc2d60fe 100644
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@ -38,6 +38,7 @@
 #include "arch/common.h"
 #include "util/time-utils.h"
 #include "util/auxtrace.h"
+#include "util/units.h"
 
 #include <dlfcn.h>
 #include <linux/bitmap.h>
diff --git a/tools/perf/tests/unit_number__scnprintf.c b/tools/perf/tests/unit_number__scnprintf.c
index 623c2aa53c4a..01a104d07210 100644
--- a/tools/perf/tests/unit_number__scnprintf.c
+++ b/tools/perf/tests/unit_number__scnprintf.c
@@ -1,7 +1,7 @@
 #include <linux/compiler.h>
 #include <linux/types.h>
 #include "tests.h"
-#include "util.h"
+#include "units.h"
 #include "debug.h"
 
 int test__unit_number__scnprint(int subtest __maybe_unused)
* Unmerged path tools/perf/ui/browsers/hists.c
diff --git a/tools/perf/util/Build b/tools/perf/util/Build
index 8c919c1166fc..7ba6ef847af9 100644
--- a/tools/perf/util/Build
+++ b/tools/perf/util/Build
@@ -86,6 +86,7 @@ libperf-y += help-unknown-cmd.o
 libperf-y += mem-events.o
 libperf-y += vsprintf.o
 libperf-y += drv_configs.o
+libperf-y += units.o
 libperf-y += time-utils.o
 libperf-y += expr-bison.o
 
diff --git a/tools/perf/util/evlist.c b/tools/perf/util/evlist.c
index c8ee4e14587e..4b3961117e8f 100644
--- a/tools/perf/util/evlist.c
+++ b/tools/perf/util/evlist.c
@@ -15,6 +15,7 @@
 #include "evlist.h"
 #include "evsel.h"
 #include "debug.h"
+#include "units.h"
 #include "asm/bug.h"
 #include <unistd.h>
 
diff --git a/tools/perf/util/python-ext-sources b/tools/perf/util/python-ext-sources
index 0546a4304347..e1b4c60dee19 100644
--- a/tools/perf/util/python-ext-sources
+++ b/tools/perf/util/python-ext-sources
@@ -26,3 +26,4 @@ util/trace-event.c
 ../lib/rbtree.c
 util/string.c
 util/symbol_fprintf.c
+util/units.c
diff --git a/tools/perf/util/units.c b/tools/perf/util/units.c
new file mode 100644
index 000000000000..f6a2a3d117d5
--- /dev/null
+++ b/tools/perf/util/units.c
@@ -0,0 +1,39 @@
+#include "units.h"
+#include <inttypes.h>
+#include <linux/kernel.h>
+#include <linux/time64.h>
+
+unsigned long convert_unit(unsigned long value, char *unit)
+{
+	*unit = ' ';
+
+	if (value > 1000) {
+		value /= 1000;
+		*unit = 'K';
+	}
+
+	if (value > 1000) {
+		value /= 1000;
+		*unit = 'M';
+	}
+
+	if (value > 1000) {
+		value /= 1000;
+		*unit = 'G';
+	}
+
+	return value;
+}
+
+int unit_number__scnprintf(char *buf, size_t size, u64 n)
+{
+	char unit[4] = "BKMG";
+	int i = 0;
+
+	while (((n / 1024) > 1) && (i < 3)) {
+		n /= 1024;
+		i++;
+	}
+
+	return scnprintf(buf, size, "%" PRIu64 "%c", n, unit[i]);
+}
diff --git a/tools/perf/util/units.h b/tools/perf/util/units.h
new file mode 100644
index 000000000000..3ed7774afaa9
--- /dev/null
+++ b/tools/perf/util/units.h
@@ -0,0 +1,10 @@
+#ifndef PERF_UNIT_H
+#define PERF_UNIT_H
+
+#include <stddef.h>
+#include <linux/types.h>
+
+unsigned long convert_unit(unsigned long value, char *unit);
+int unit_number__scnprintf(char *buf, size_t size, u64 n);
+
+#endif /* PERF_UNIT_H */
* Unmerged path tools/perf/util/util.c
* Unmerged path tools/perf/util/util.h
