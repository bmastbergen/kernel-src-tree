Rebuild_History BUILDABLE
Rebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v3.10~1..master: 848130
Number of commits in rpm: 13051
Number of commits matched with upstream: 12358 (94.69%)
Number of commits in upstream but not in rpm: 836006
Number of commits NOT found in upstream: 693 (5.31%)

Rebuilding Kernel on Branch centos7_rebuild_kernel-3.10.0-862.el7 for kernel-3.10.0-862.el7
Clean Cherry Picks: 6270 (50.74%)
Empty Cherry Picks: 5646 (45.69%)
_______________________________

__EMPTY COMMITS__________________________
6a146f3a5894b751cef16feb3d7903e45e3c445c cxgb4: fix BUG() on interrupt deallocating path of ULD
be66b673659116930f2da2f41ec79c9d1279cd8f PCI: hv: Use page allocation for hbus structure
7dcf90e9e032432e91ce77dd872d2227e9d5b741 PCI: hv: Use vPCI protocol version 1.2
63db7c815bc0997c29e484d2409684fdd9fcd93b xfs: use ->b_state to fix buffer I/O accounting release race
f4781e76f90df7aec400635d73ea4c35ee1d4765 alarmtimer: Prevent overflow of relative timers
1bdb8970392a68489b469c3a330a1adb5ef61beb x86/apic: Handle zero vector gracefully in clear_vector_irq()
687bca8d664ac9b098005b57846773eb62040ae0 x86/vmware: Use tsc_khz value for calibrate_cpu()
daa5ba768b9e15da8867824d2f1e8d455f1acac2 mm/rmap.c: cleanup ttu_flags
b87537d9e2feb30f6a962f27eb32768682698d3b mm: rmap use pte lock not mmap_sem to set PageMlocked
f15838e9cac8f78f0cc506529bb9d3b9fa589c1f powerpc: Fix dedotify for binutils >= 2.26
eae0dfcc44320c79a05637534d59af4643b2ee7b powerpc/fadump: avoid holes in boot memory area when fadump is registered
4aebd0e9ca3776368813239018287021002b8973 KVM: SVM: introduce disable_nmi_singlestep helper
ab2f4d73ebc33487930e7adf1dd8ed671c72827c KVM: nSVM: do not forward NMI window singlestep VM exits to L1
a7ae81952cdab56a1277bd2f9ed7284c0f575120 i2c: i801: Allow ACPI SystemIO OpRegion to conflict with PCI BAR
3f97d5fcf99cb87f590ffe1d9422b2a26a8ef3ed gpio: handle also nested irqchips in the chained handler set-up
193b40c8258f781d8dc395909b2971472aad6796 pinctrl: intel: Add support for multiple GPIO chips sharing the interrupt
b08ea35a3296ee25c4cb53a977b752266dafa2c2 gpio: add a data pointer to gpio_chip
2e862a7bd63f57fcaa4a3a4929f51c56289f1f80 pinctrl: st: use gpiochip data pointer
6cee3821e4e4bd6e6cdf0870b6c72d455460bd39 gpio/pinctrl: sunxi: stop poking around in private vars
e8e2cb234f55355a75a48eab6ef4a26dfe05558d pinctrl: st: Use devm_pinctrl_register() for pinctrl registration
c5cdcba3d54b9bd2443bd0afe9f4828f802a944f pinctrl: intel: fix bug of register offset calculation
1a7d1cb81eb2519de1359d35cbcade4da41b638d pinctrl: intel: Prevent force threading of the interrupt handler
01dabe91b1fef93130207e1a04bdf0a092a9fb21 pinctrl: intel: Configure GPIO chip IRQ as wakeup interrupts
3ae02c14d964499da76b5ef4d8912710902e64f8 pinctrl: intel: set default handler to be handle_bad_irq()
93de6901766c6821538b74a092e47780a9120fac PCI: Check for PCI_HEADER_TYPE_BRIDGE equality, not bitmask
2ac83cccabbc8d264c20ce11931d60e0e6ea3f53 PCI: hotplug: Use list_for_each_entry() to simplify code
4058937a40f73d46502f6042f87bc90f99bc36fe PCI: ibmphp: Remove unneeded NULL test
5bd28338d681dcbde2c4bee4ebea0c4e0dfcd9e4 PCI: Remove includes of empty asm-generic/pci-bridge.h
5f8fc43217a01c98be88aa53794b4d1333a07a5a PCI: Include pci/pcie/Kconfig directly from pci/Kconfig
e7e127e3c767094aca96ee976729dc5f756666df PCI: Include pci/hotplug Kconfig directly from pci/Kconfig
bc4b024a8b8bd7dceb2697299aad2bda57d065e0 PCI: Move pci_dma_* helpers to common code
fe537670eab767157eecc50538bd28e8d9b0ce9f PCI: Consolidate PCI DMA constants and interfaces in linux/pci-dma-compat.h
3e909599215456928e6b42a04f11c2517881570b efi: Move facility flags to struct efi
eeb9db09f738993c63ecb5aedf950a1e4fe4bd3f x86/efi: Move all workarounds to a separate file quirks.c
98a716b66cab993e15001c7ec06f637ca6f1079b x86/efi: Use early_memunmap() to squelch sparse errors
abc93f8eb6e46a480485f19256bdbda36ec78a84 efi: Use early_mem*() instead of early_io*()
b2e0a54a1296a91b800f316df7bef7d1905e4fd0 efi: Move noefi early param code out of x86 arch code
44511fb9e55ada760822b0b0d7be9d150576f17f efi: Use correct type for struct efi_memory_map::phys_map
d394f2d9d8e1e7b4959819344baf67b5995da9b0 x86/platform/UV: Remove EFI memmap quirk for UV2+
022ee6c558fc933679e151f00f84332974147fa2 efi/x86: Move UEFI Runtime Services wrappers to generic code
edc3b9129cecd0f0857112136f5b8b1bc1d45918 x86/mm/pat: Ensure cpa->pfn only contains page frame numbers
08914f436bdd2ed60923f49cbc402307aba20fe4 x86/platform/UV: Bring back the call to map_low_mmrs in uv_system_init
744937b0b12a669f298949c4a810794c59fead98 efi: Clean up the efi_call_phys_[prolog|epilog]() save/restore interaction
c9f2a9a65e4855b74d92cdad688f6ee4a1a323ff x86/efi: Hoist page table switching code into efi_call_virt()
67a9108ed4313b85a9c53406d80dc1ae3f8c3e36 x86/efi: Build our own page table structures
f51c35f291062df14a3e9cc5779e417fe662e50e efi/runtime-wrappers: Add {__,}efi_call_virt() templates
bc25f9dba149a1392b016a6d35300c8d79177298 x86/efi: Move to generic {__,}efi_call_virt()
d9c6e1d0faec6d750b5cc08d036e9c3da6e8e50c efi/runtime-wrappers: Remove redundant #ifdefs
9788375dc4cdc9c00645028384fb40402eab774f x86/efi: Enable runtime call flag checking
80e75596079f0a41f905836ad0ccaac68ba33612 efi: Convert efi_call_virt() to efi_call_virt_pointer()
f9279c968c257ee39b0d7bd2571a4d231a67bcc1 scsi: Add STARGET_CREATED_REMOVE state to scsi_target_state
267f1128583074b575b90a58de4dcb12dd25af96 locks: remove conditional lock release in middle of flock_lock_file
7f3697e24dc3820b10f445a4a7d914fc356012d1 locks: fix unlock when fcntl_setlk races with a close
3c6f46eacd876bd723a9bad3c6882714c052fd8e xfs: sanity check directory inode di_size
b597dd5373a1ccc08218665dc8417433b1c09550 xfs: add missing include dependencies to xfs_dir2.h
fab8eef86c814c3dd46bc5d760b6e4a53d5fc5a6 xfs: sanity check inode mode when creating new dentry
a324cbf10a3c67aaa10c9f47f7b5801562925bc2 xfs: sanity check inode di_mode
005c5db8fd7b2c9fc0b8055fa824ecaa7b15d1bf xfs: rework the inline directory verifiers
49d31c2f389acfe83417083e1208422b4091cd9e dentry name snapshots
c530cd24c23818af8da35fe556f9a7754211e50a ceph: search cache postion for dcache readdir
1cd42a429174689c0df1c37b642654a1ab4d1506 ceph: remove unnecessary checks in __dcache_readdir
a78600e7c4fb47fb5ef34265456b731fde27a9c3 ceph: simplify 'offset in frag'
2a5beea3f1b6544d6c72ea220e860a2eda2f9104 ceph: define struct for dir entry in readdir reply
956d39d631dbcf7b57854873a24e309047f2a7f5 ceph: define 'end/complete' in readdir reply as bit flags
8974eebd38737c9534d81c4131c5fdb1fe24d3e9 ceph: record 'offset' for each entry of readdir result
076c40f18d10489e29c515bf5936952830df5e16 ceph: don't forbid marking directory complete after forward seek
f3c4ebe65ea149ec892f94474233cfebe9cbe299 ceph: using hash value to compose dentry offset
3b33f692c84c28cc8178aaeeb9264d82b48787f1 ceph: make logical calculation functions return bool
4f7e89f6ace0f6cd2f20110efd2d405e26bcbf31 ceph: block non-fatal signals for fault/page_mkwrite
6ce026e411c4f36c9e51189d28a5dd9d08095b9d ceph: make fault/page_mkwrite return VM_FAULT_OOM for -ENOMEM
f0b33df57a5f03c637f75ead7cb4d978c59cc63d ceph: handle -EAGAIN returned by ceph_update_writeable_page()
8aa152c77890abd0731f119e4e6662375503e288 ceph: remove ceph_mdsc_lease_release
14fb9c9efe3570459b6bddd76a990140917237ad ceph: allow dentry_lease_is_valid to work under RCU walk
955818cd5b6c4b58ea574ace4573e7afa4c19c1e ceph: Correctly return NXIO errors from ceph_llseek
0f5aa88a7bb28b73253fb42b3df8202142769f39 ceph: do not modify fi->frag in need_reset_readdir()
5d7eb1a3225309b294275385ece36fee256d5c46 ceph: ignore error from invalidate_inode_pages2_range() in direct write
ce2728aaa82bbebae7d20345324af3f0f49eeb20 ceph: avoid accessing / when mounting a subpath
b9de313cf05fe08fa59efaf19756ec5283af672a fix ceph_write_end()
a380a031cbe4323a3f638a8468c862510ace1919 ceph: fix printing wrong return variable in ceph_direct_read_write()
2b1ac852eb67a6e95595e576371d23519105559f ceph: try getting buffer capability for readahead/fadvise
80e80fbb584dc0d0dc894c4965bc2a199c7cd3f2 ceph: avoid creating orphan object when checking pool permission
30c71233a1d4b5c23ad6652847285bf6b57086e2 ceph: clean up unsafe d_parent access in __choose_mds
c6b0b656ca24ede6657abb4a2cd910fa9c1879ba ceph: clean up unsafe d_parent accesses in build_dentry_path
fd36a71762f3b0fcb9741ed24021afabec7e0c45 ceph: pass parent dir ino info to build_dentry_path
adf0d68701c7f3e50f21308c76f41e60956a6832 ceph: fix unsafe dcache access in ceph_encode_dentry_release
ca6c8ae0f7930dad7e10664e3b5bc657dd75be60 ceph: pass parent inode info to ceph_encode_dentry_release if we have it
24c149ad6914d349d8b64749f20f3f8ea5031fe0 ceph: fix bogus endianness change in ceph_ioctl_set_layout
3dd69aabcef3d835446a9a1e11d2eab0e6e35e95 ceph: add a new flag to indicate whether parent is locked
f5d55f03973f79a008bf8635452849f8ef589c23 ceph: vet the target and parent inodes before updating dentry lease
431a02cd82dd028f650d588f7cedc78643c5c86a rbd: initialize rbd_dev->header_oloc early
263423f8adf4acbdc4fd26ed5b35f4a6408bc0ab rbd: introduce rbd_init_layout()
7e97332ea9caad3b7c6d86bc3b982e17eda2f736 rbd: support for data-pool feature
bc81207ea9fc01896cbc102f025f1ebb2c4bae1d rbd: factor out __rbd_osd_req_create()
a90bb0c1d47dc1195bc6ac753b34a52535089f80 rbd: store and use obj_request->object_no
6c696d8560e74cd42458931375875d62ae88c6ae rbd: kill obj_request->object_name and rbd_segment_name_cache
f107548039807eb890e65ce5cd29d6ac52562f09 ceph: tidy some white space in get_nonsnap_parent()
54ea0046b6fe36ec18e82d282a29a18da6cdea0f libceph, rbd, ceph: WRITE | ONDISK -> WRITE
8767b293a4ab6632f9288f34bcf2ab9ba20dca3a rbd: supported_features bus attribute
633ee407b9d15a75ac9740ba9d3338815e1fcb95 libceph: force GFP_NOIO for socket allocations
8179a101eb5f4ef0ac9a915fcea9a9d3109efa90 ceph: fix recursion between ceph_set_acl() and __ceph_setattr()
79162547b76e4979b21ef80c9629ada94a51a59b ceph: make seeky readdir more efficient
92475f05bdb6daefce3f55f46551153e7ed05f45 ceph: handle epoch barriers in cap messages
26544c623e741ac6445f8b1ae369ee32ae1794ad ceph: when seeing write errors on an inode, switch to sync writes
b50c2de51e611da90cf3cf04c058f7e9bbe79e93 ceph: choose readdir frag based on previous readdir reply
f775ff7d89f33fc9ba63f6f70df3bcc98c2d9828 ceph: fix file open flags on ppc64
105f5528b9bbaa08b526d3405a5bcd2ff0c953c8 ipv6: check raw payload size correctly in ioctl
a0cdfcf39362410d5ea983f4daf67b38de129408 packet: deliver VLAN TPID to userspace
f9ba3501d50317697811ff3c48f623f08d616fc8 sctp: change to save MSG_MORE flag into assoc
08737a3fa30a4c6c10b4c4b682125c7d3c494094 qed: Inform qedi the number of possible CQs
3c5da94278026a4583320f97f6547573fb3a93aa qed: Share additional information with qedf
20675b37ee76d11430fd3d4da0851fc6a4e36abc qed: Support NVM-image reading API
5086435e662c7b6ada6cb5f48a1215fc6f612153 scsi: hpsa: correct queue depth for externals
08ec46f673369f65dfc6fc52fb7fadb39776e81f scsi: hpsa: remove abort handler
880621c2605b82eb5af91a2c94223df6f5a3fb64 packet: Allow packets with only a header (but no payload)
38b7097b55b6cf30adc5ac07cb1055683224393e ipv6: use TOS marks from sockets for routing decision
b5c2d49544e5930c96e2632a7eece3f4325a1888 ip6_tunnel: disable caching when the traffic class is inherited
0e6b5259824e97a0f7e7b450421ff12865d3b0e2 net: l2tp: Make l2tp_ip6 namespace aware
97a6ad13decc16c5adbf181283932daba7e17faf netfilter: reduce direct skb->nfct usage
cb9c68363efb6d1f950ec55fb06e031ee70db5fc skbuff: add and use skb_nfct helper
c74454fadd5ea6fc866ffe2c417a0dba56b2bf1c netfilter: add and use nf_ct_set helper
cc41c84b7e7f2d7f6698bccc84890943fd021265 netfilter: kill the fake untracked conntrack objects
1d325d217c7f190a42fb620ead20bb240fc16af0 ipv6: ip6_fragment: fix headroom tests and skb leak
afce615aaabfbaad02550e75c0bec106dafa1adf ipv6: Don't increase IPSTATS_MIB_FRAGFAILS twice in ip6_fragment()
a5a1d1c2914b5316924c7893eb683a5420ebd3be clocksource: Use a plain u64 instead of cycle_t
8c36e9dfe7527665e286c3ac970c3fb327e6ab24 cifs: avoid unused variable and label
9589995e46d89c70c6fa4723c5f3e5ec04c3c3e3 CIFS: Fix duplicate line introduced by clone_file_range patch
312bbc5946c4b73dfc1d64c1dd5b0f9df8016587 SMB3: Rename clone_range to copychunk_range
620d8745b35daaf507186c26b40c7ea02aed131e Introduce cifs_copy_file_range()
7d0c234fd2e1c9ca3fa032696c0c58b1b74a9e0b Do not return number of bytes written for ioctl CIFS_IOC_COPYCHUNK_FILE
c918d42a27a9be0d78be490997d16d79cd5b9193 locks: make /proc/locks show IS_FILE_PVT locks as type "FLPVT"
5d50ffd7c31dab47c6b828841ca1ec70a1b40169 locks: add new fcntl cmd values for handling file private locks
90478939dce096ed5b239cad16237dca0a59d66f locks: require that flock->l_pid be set to 0 for file-private locks
0d3f7a2dd2f5cf9642982515e020c1aee2cf7af6 locks: rename file-private locks to "open file description locks"
cff2fce58b2b0f59089e7edcdc38803d65057b9f locks: rename FL_FILE_PVT and IS_FILE_PVT to use "*_OFDLCK" instead
cf01f4eef9fe367ec0d85b38dd7214e29e376cdb locks: only validate the lock vs. f_mode in F_SETLK codepaths
0752ba807b04ccd69cb4bc8bbf829a80ee208a3c locks: don't check for race with close when setting OFD lock
d7fd24257aa60316bf81093f7f909dc9475ae974 xfs: Fix off-by-in in loop termination in xfs_find_get_desired_pgoff()
f3dd1649122b9e73f869e5304d5fa8554e128b7a gfs2: Remove gl_spin define
d552a2b9b33eafdb5eb16c643e745deb564dda7f GFS2: Non-recursive delete
961ae1d83d055a4b9ebbfb4cc8ca62ec1a7a3b74 gfs2: Fix glock rhashtable rcu bug
4d7c18c7df89ef549f2de79b0faf873b49dea57a GFS2: Set gl_object in inode lookup only after block type check
240c6235dfe4fe46f2fd0f2b3c15b3a22100a75e GFS2: Clear gl_object when deleting an inode in gfs2_delete_inode
6f6597baae206c544c49ad7f1129d5adc1e9019d gfs2: Protect gl->gl_object by spin lock
6b0c7440bcb4b7e5a64836132caf56bf19a33f6e gfs2: Clean up glock work enqueuing
0515480ad424f2d6853ffe448f444ba3c756c057 gfs2: gfs2_glock_get: Wait on freeing glocks
71c1b2136835c88c231f7a5e3dc618f7568f84f7 gfs2: gfs2_evict_inode: Put glocks asynchronously
f2029b1e47b607619d1dd2cb0bbb77f64ec6b7c2 perf/x86/intel: Add Kaby Lake support
940b2f2fd963c043418ce8af64605783b2b19140 x86/events: Remove last remnants of old filenames
360e071b1822d40357e371357f24f6ec43f0a080 perf tools: Use zfree() to avoid keeping dangling pointers
192614010a5052fe92611c7076ef664fd9bb60e8 tools include: Introduce linux/compiler-gcc.h
e4afd2e5567fc5d59988025f7528f9b4794d86a5 lib/find_bit.c: micro-optimise find_next_*_bit
968ebff1efde6948564308836ecf1ef57de4e106 cgroup, perf_event: make perf_event controller work on cgroup2 hierarchy
0f5e1558306076adec7255b317b89480d8aaa304 scripts/spelling.txt: add "an one" pattern and fix typo instances
85e0d509654c2e2e58b29e50a883acd4c4e8807d perf build: Add special fixdep cleaning rule
99e7138eb7897aa0ccc6661173ae2d7e79721e05 perf tools: Fail on using multiple bits long terms without value
bb963e16507ca7670f0bb47ccaada8874b2ba6a1 perf utils: Check verbose flag properly
63b42fce864a468ee02e6647474c4df9bfdc6166 perf diff: Add -q/--quiet option
b246a9d2671f4f6cfab3f98199568e0b3028f6e5 tools: Provide a definition of WARN_ON
505d3085d7120a9f4cd0d6ffaa876968854b3baa scripts/spelling.txt: add "overide" pattern and fix typo instances
1e9877902dc7e11d2be038371c6fbf2dfcd469d7 mm/gup: Introduce get_user_pages_remote()
35e97790f5f1e5cf2b5522c55e3e31d5c81bd226 x86/mm/pkeys: Add Kconfig option
dfb4a70f20c5b3880da56ee4c9484bdb4e8f1e65 x86/cpufeature, x86/mm/pkeys: Add protection keys related CPUID definitions
c8df40098451ba18a43f22b563c9129182353158 x86/fpu, x86/mm/pkeys: Add PKRU xsave fields and data structures
5c1d90f51027e197e1299ab1235a2fed78910905 x86/mm/pkeys: Add PTE bits for storing protection key
63c17fb8e5a46a16e10e82005748837fd11a2024 mm/core, x86/mm/pkeys: Store protection bits in high VMA flags
8f62c883222c9e3c06d60b5e55e307a3d1f18257 x86/mm/pkeys: Add arch-specific VMA protection bits
33692f27597fcab536d7cbbcc8f52905133e4aa7 vm: add VM_FAULT_SIGSEGV handling support
7b2d0dbac4890c8ca4a8acc57709639fc8b158e9 x86/mm/pkeys: Pass VMA down in to fault signal generation code
cd0ea35ff5511cde299a61c21a95889b4a71464e signals, pkeys: Notify userspace about protection key faults
019132ff3daf36c97a4006655dfd00ee42f2b590 x86/mm/pkeys: Fill in pkey field in siginfo
d4925e00d59698a201231cf99dce47d8b922bb34 mm/gup: Factor out VMA fault permission checking
33a709b25a760b91184bb335cf7d7c32b8123013 mm/gup, x86/mm/pkeys: Check VMAs and PTEs for protection keys
43c0ea20de4de8e2d753dff0e76129c4febafffa iommu/amd: Correctly set flags for handle_mm_fault call
1b2ee1266ea647713dbaf44825967c180dfc8d76 mm/core: Do not enforce PKEY permissions on remote mm access
07f146f53e8de826e4afa3a88ea65bdb13c24959 x86/mm/pkeys: Optimize fault handling in access_error()
d61172b4b695b821388cdb6088a41d431bcbb93b mm/core, x86/mm/pkeys: Differentiate instruction fetches
c0b17b5bd4b7b98e7c6b67c9f69343b64711271b x86/mm/pkeys: Dump PKRU with other kernel registers
c1192f8428414679c8126180e690f8daa1d4d98a x86/mm/pkeys: Dump pkey from VMA in /proc/pid/smaps
284244a9876225eb73102aff41d4492f65cb2868 x86/mm/pkeys: Add Kconfig prompt to existing config option
0697694564c84f4c9320e5d103d0191297a20023 x86/mm/pkeys: Actually enable Memory Protection Keys in the CPU
1fcfd8db7f82fa1f533a6f0e4155614ff4144d56 mm, mpx: add "vm_flags_t vm_flags" arg to do_mmap_pgoff()
e6bfb70959a0ca6ddedb29e779a293c6f71ed0e7 mm/core, arch, powerpc: Pass a protection key in to calc_vm_flag_bits()
66d375709d2c891acc639538fd3179fa0cbb0daf mm/core, x86/mm/pkeys: Add arch_validate_pkey()
39a0526fb3f7d93433d146304278477eb463f8af x86/mm: Factor out LDT init from context init
b8b9b6ba9dec3f155c7555cb208ba4078e97aedb x86/fpu: Allow setting of XSAVE state
8459429693395ca9e8d18101300b120ad9171795 x86/mm/pkeys: Allow kernel to modify user pkey rights register
878ba03932d757ce4e954db4defec74a0de0435b x86/mm/pkeys: Create an x86 arch_calc_vm_prot_bits() for VMA flags
62b5f7d013fc455b8db26cf01e421f4c0d264b92 mm/core, x86/mm/pkeys: Add execute-only protection keys support
e21555436f196c241503c7c6240272e57783235c x86/mm/pkeys: Fix access_error() denial of writes to write-only VMA
49cd53bf14aeb471c4a2682300dfc05ef2fd09f2 mm/pkeys: Fix siginfo ABI breakage caused by new u64 field
0d47638f80a02b15869f1fe1fc09e5bf996750fd x86/mm/pkeys: Fix mismerge of protection keys CPUID bits
b79daf85899215d5ede3641806db2e2a77b776b4 x86/mm/pkeys: Fix compact mode by removing protection keys' XSAVE buffer manipulation
f138556daf62665f19178732ec4daf86c4ca13f4 mm/mprotect.c: don't imply PROT_EXEC on non-exec fs
7d06d9c9bd813fc956b9c7bffc1b9724009983eb mm: Implement new pkey_mprotect() system call
a8502b67d739c1d7a4542c1da0a5d98a6a58c177 x86/pkeys: Make mprotect_key() mask off additional vm_flags
e8c24d3a23a469f1f40d4de24d872ca7023ced0a x86/pkeys: Allocation/free syscalls
f9afc6197e9bba1e2e62e262704f661810cc8bba x86: Wire up protection keys system calls
a60f7b69d92c0142c80a30d669a76b617b7f6879 generic syscalls: Wire up memory protection keys syscalls
acd547b29880800d29222c4632d2c145e401988c x86/pkeys: Default to a restrictive init PKRU
76de993727d22eb29c716abacfae9d9444bb7897 x86/pkeys: Allow configuration of init_pkru
71757904efadefdf5505712f675218ce59483c5d generic syscalls: kill cruft from removed pkey syscalls
e2753293ac4bce8623650bb2d610b7e657bc869f x86/pkeys: Fix pkeys build breakage for some non-x86 arches
12e721964e7feb555c3ee499a3f85c194d3d36ea s390: ignore pkey system calls
18088db042dd9ae25e8a1e069eb3a16db601ef8a parisc: Ignore the pkey system calls for now
eac0ca77e42f0bed4d36c76c8fc056321441c569 x86, pkeys: remove cruft from never-merged syscalls
e8df1a95b685af84a81698199ee206e0e66a8b44 x86/cpufeature, x86/mm/pkeys: Fix broken compile-time disabling of pkeys
ca7202bffa32c6ff0d8abc088f77ff0bf3a5bead perf tools: Update x86's syscall_64.tbl, adding pkey_(alloc,free,mprotect)
65a50c656276b0846bea09dd011c0a3d35b77f3e ftrace/graph: Add ftrace_graph_max_depth kernel parameter
34644524bce91883d5051a7eaf3ec5464ed149bf lib: devres: add a helper function for ioremap_wc
2b83809a5e6d619a780876fcaf68cdc42b50d28c x86/cpu/amd: Derive L3 shared_cpu_map from cpu_llc_shared_mask
9216e0dcb5533a999d544d0af8661118e0588e1d platform/x86: dell-laptop: Add keyboard backlight timeout AC settings
8eabf42ae5237e6b699aeac687b5b629e3537c8d x86/boot/KASLR: Fix kexec crash due to 'virt_addr' calculation bug
3ad38ceb2769f08d0abd132331a7a6130536a36c x86/mm: Remove CONFIG_DEBUG_NX_TEST
e2e8f619adaaa1b31c3739640beb0bd72ac87f4d scsi: qla2xxx: silence -Wformat-security warning
e70beee783d6977d80eede88a3394f02eabddad1 target: Pass in transport supported PI at session initialization
b79fafac70fc9bbe640b8193ed772eb850efdfe6 target: make queue_tm_rsp() return void
131e6abc674edb9f9a59090bb35bf6650569b7e7 target: Add TFO->abort_task for aborted task resources release
0e8cd71ceca4c15ef544e3af01248bc869c28d8f qla2xxx: Enhancements to enable NPIV support for QLOGIC ISPs with TCM/LIO.
49a47f2cafbe4ca3839f8ae99c6fdeffd5fcaf45 qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport
394d62ba4580a74afc90bf0e007e10291bf447cc tcm_qla2xxx: Add NPIV specific enable/disable attribute logic
7474f52a82d51da2e6110e91bba8b000cb9cf803 tcm_qla2xxx: Perform configfs depend/undepend for base_tpg
3c231bdae1e7c8d366eeb133980b81dff2e1e809 qla2xxx: Check + fail when npiv_vports_inuse exists in shutdown
f83adb617f55be13046191d83fa9110ff0689406 qla2xxx: T10-Dif: add T10-PI support
51a07f84649d2be206c4c2ad9a612956db0c2f8c qla2xxx: Convert to percpu_ida session tag pre-allocation
78c2106a50e067f7168ee8c0944baaeb0e988272 qla2xxx: fix kernel NULL pointer access
c7ee3bd4870ef1d96a1202f92ce858f849670a62 qla2xxx: fix sparse warnings introduced by previous target mode t10-dif patch
ddb95145a38eb37b236d4e00f43a75d067922dda qla2xxx: Fix qlt_lport_register base_vha callback race
33a5fcee7f5d4920ff33997169e02cc34cbab6e6 qla2xxx: Fix sparse warning in qla_target.c.
63832aabec12a28a41a221773ab3819d30ba0a67 qla2xxx: Fix schedule_delayed_work() for target timeout calculations
667024a36549186ce334c1027e434b45cf2c943d qla2xxx: Remove verbose messages in target mode.
d154f35029c1f77b589389d2afb1e1766fb80c28 qla2xxx: Enable SLER conditionally in target mode.
d29fb7360ee61ec02257e9c49848c9d2a05345a0 qla2xxx: Add counter for message
c0cb44967b4a934252091557c8e46345f7ef7259 qla2xxx: Add Host reset handling in target mode.
b6a029e1b0aba337ee54de66b1e428dd3bb624ca qla2xxx: Handle chip reset in target mode.
33e7997755936ba92516c6ad69cd012c2e7d4dbb qla2xxx: Add support for QFull throttling and Term Exchange retry
d564a372b0047de8014614fa66f2d071815605ed qla2xxx: Fix hang due to cmd_kref not decrementing
e07f8f6547c246936b489772717b05695af53e35 qla2xxx: Add flags for tracing the target commands.
03f8cebc127fa285874074ec314b76b1333f6c43 nvme: remove unused parameter
68d81f40047cc4f99e86807e1160fb07a7b856c7 scsi: remove MSG_*_TAG defines
59bb0ff5db755a6a833acd633015b406d0894253 tcm_qla2xxx: Set TARGET_PROT_ALL for sup_prot_ops
e5fdee875f7918b37f7c3fce3025197d8f214a27 qla2xxx: adjust debug flags
ba9f6f64a0ff6b7ecaed72144c179061f8eca378 qla2xxx: Fix hardware lock/unlock issue causing kernel panic.
810e30bc4658e9c069577bde52394a5af872803c qla2xxx: release request queue reservation.
6bc85dd595a5438b50ec085668e53ef26058bb90 qla2xxx: Remove msleep in qlt_send_term_exchange
9fce12540cb9f91e7f1f539a80b70f0b388bdae0 qla2xxx: fix command initialization in target mode.
b2032fd567326ad0b2d443bb6d96d2580ec670a5 qla2xxx: kill sessions/log out initiator on RSCN and port down events
8b2f5ff3d05c2c48b722c3cc67b8226f1601042b qla2xxx: cleanup cmd in qla workqueue before processing TMR
a6ca88780dd66b0700d89419abd17b6b4bb49483 qla2xxx: delay plogi/prli ack until existing sessions are deleted
daddf5cf9b5c68b81b2bb7133f1dd0fda4552d0b qla2xxx: Abort stale cmds on qla_tgt_wq when plogi arrives
d20ed91bb60ca54c42e3326251287ec51ed225a1 qla2xxx: disable scsi_transport_fc registration in target mode
e52a8b45b9c782937f74b701f8c656d4e5619eb5 qla2xxx: drop cmds/tmrs arrived while session is being deleted
df673274fa4896f25f0bf348d2a3535d74b4cbec qla2xxx: added sess generations to detect RSCN update races
7359df25a53386dd33c223672bbd12cb49d0ce4f qla2xxx: terminate exchange when command is aborted by LIO
ce1025cd4b8eb7afe07c3625f2ad080d8bee7cc4 qla2xxx: Enable Target counters in DebugFS.
03e8c680d9b3b68ddae648a6e2c91c381e90066f qla2xxx: Add FW resource count in DebugFS.
6eb54715b54bb8324f3293e49635277652730e55 qla2xxx: Added interface to send explicit LOGO.
71cdc07964651db51ddeea05245ac899357f0e71 qla2xxx: Delete session if initiator is gone from FW
b7bd104e6f1c3be2bf881dc1ca7db40da3ee65fd qla2xxx: Wait for all conflicts before ack'ing PLOGI
193b50b9d54a4fcb723a8005b29d8dd5518e3ae2 qla2xxx: Replace QLA_TGT_STATE_ABORTED with a bit.
7560151b6b3c1f4432c1c5b5b6496070d1f38484 qla2xxx: Remove dependency on hardware_lock to reduce lock contention.
2f424b9b36ad7062e9ade41a9fb034d21a9e4e4b qla2xxx: Move atioq to a different lock to reduce lock contention
3bb67df5b5f880a1c9c1086308cf2b981d824da5 qla2xxx: Check for online flag instead of active reset when transmitting responses
fab683eb12e71ac6057dc42dc7d1e5e71e5cba5e scsi: qla2xxxx: avoid type mismatch in comparison
dacb58221805bb72ec46a73826c9e59a587d7d68 qla2xxx: Fix warning reported by static checker
a07100e00ac42a4474530ce17b4978c9e06bde55 qla2xxx: Fix TMR ABORT interaction issue between qla2xxx and TCM
cb43285ff7039fe3c4b0bc476e6d6569c31104f3 qla2xxx: Fix stale pointer access.
36c7845282eef0104ba6ecc6761ba1dce57b2b87 qla2xxx: Add DebugFS node for target sess list.
54a5e73f4d6e31d5628e08b4d575c71d71670e09 tcm_qla2xxx Add SCSI command jammer/discard capability
bb1181c9a8b46b6f10e749d9ed94480336445d7f qla2xxx: Fix wrong IOCB type assumption
c0f6462754f050e9bc960662992c029c5ef88f34 qla2xxx: Reset reserved field in firmware options to 0
5f35509db179ca7ed1feaa4b14f841adb06ed220 qla2xxx: Terminate exchange if corrupted
4f060736f29a960aba8e781a88837464756200a8 qla2xxx: Fix erroneous invalid handle message
be92fc3fde95c94bb54ff471219552a581640a6b qla2xxx: Cleanup TMF code translation from qla_target
1eb42f965cedafb700e9c902ddafb1c51e3117f7 qla2xxx: Make trace flags more readable
2c39b5ca2a8cb99fc463fd622e8ea3b9fbb980a2 qla2xxx: Remove SRR code
b0d6cabd355ae9c13c53680cfe8b5ae58a84d2c1 qla2xxx: Enable Extended Logins support
2f56a7f1b5d8cf3d8bc84cc08dda09c991b698a7 qla2xxx: Enable Exchange offload support.
22f2ac51b6d643666f4db093f13144f773ff3f3a mm: workingset: fix crash in shadow node shrinker caused by replace_page_cache_page()
b936887e8739d3fa83f87d899f68d136735d9816 mm: workingset: turn shadow node shrinker bugs into warnings
c164e038eee805147e95789dddb88ae3b3aca11c mm: fix huge zero page accounting in smaps report
b184b5c38e4640585126e44ef84f2dbdd0d23d5a NFS: remove l_pid field from nfs_lockowner
532d4def2f95623a9b8b2cef7723e14521377911 NFSv4: add flock_owner to open context
29b59f94169374c412cedf60c77073df4e68ce51 NFSv4: change nfs4_do_setattr to take an open_context instead of a nfs4_state.
1739347549653dc2463d208d7039f5e97b8f1e8b NFSv4: change nfs4_select_rw_stateid to take a lock_context inplace of lock_owner
8d42443166a5d3800756db98498a4961a5ea5de7 NFSv4: enhance nfs4_copy_lock_stateid to use a flock stateid if there is one
d51fdb87a611f8ef50518df7187173ae10469fd0 NFS: discard nfs_lockowner structure.
7a0566b38c518e98df2359c8c15c2b3f91a4d67e NFSv4: Add missing nfs_put_lock_context()
ef65aaede23f75977af56a8c330bb9be8c6e125c smb2: Enforce sec= mount option
942b0cddfbf66295effc9fd879ca85ae10638565 GFS2: Withdraw for IO errors writing to the journal or statfs
63ed4e0c67df332681ebfef6eca6852da28d6300 Drivers: hv: vmbus: Consolidate all Hyper-V specific clocksource code
8de8af7e0873c4fdac2205327dff922819e16657 Drivers: hv: vmbus: Move the extracting of Hypervisor version information
73638cddaad861a5ebb2b119d8b318d4bded8f8d Drivers: hv: vmbus: Move the check for hypercall page setup
73667e31a153a66da97feb1584726222504924f8 x86/hyperv: Hide unused label
bd2a9adaadb8defcaf6c284bca7ff41634105f51 x86/hyperv: Implement hv_get_tsc_page()
0733379b512ce36ba0b10942f9597b74f579f063 x86/hyperv: Move TSC reading method to asm/mshyperv.h
90b20432aeb850ef84086a72893cd9411479d896 x86/vdso: Add VCLOCK_HVCLOCK vDSO clock read method
35b8dcf8c3a0be1feb1c8b29b22e1685ba0c2e14 netfilter: ipset: Rename simple macro names to avoid namespace issues.
1785e8f473082aa60d62c7165856cf6484077b99 netfiler: ipset: Add net namespace for ipset
6843bc3c568128e8771ba35cfefe95b7ec1c93a8 netfilter: ipset: move registration message to init from net_init
e3412575488ac2408f737a14296cce34c9d8b4f8 net: ethernet: update drivers to handle HWTSTAMP_FILTER_NTP_ALL
0eab121ef8750a5c8637d51534d5e9143fb0633f net: ping: check minimum size on ICMP header length
0ddcf43d5d4a03ded1ee3f6b3b72a0cbed4e90b1 ipv4: FIB Local/MAIN table collapse
61f0d861fc6924fa673ecf1128a911d49cb10dc8 fib_trie: Fix uninitialized variable warning
654eff45166c7e89d18fc476325c975768b2e347 fib_trie: Only display main table in /proc/net/route
3c9e9f7320f0138497ef7879c0903246746e0ed3 fib_trie: Avoid NULL pointer if local table is not allocated
6e47d6caff9e8af6db0741ddbd260bdd36d24c13 fib_trie: Cleanup ip_fib_net_exit code path
631fee7d70e8eabb642b4bcc58f08bbe880c91aa net: Remove fib_local variable
3b7093346b326e5d3590c7d49f6aefe6fa5b2c9a ipv4: Restore fib_trie_flush_external function and fix call ordering
3114cdfe66c156345b0ae34e2990472f277e0c1b ipv4: Fix memory leak in exception case for splitting tries
5350d54f6cd12eaff623e890744c79b700bd3f17 ipv4: Do not allow MAIN to be alias for new LOCAL w/ custom rules
bc1f44709cf27fb2a5766cadafe7e2ad5e9cb221 net: make ndo_get_stats64 a void function
d747a7a51b00984127a88113cdbbc26f91e9d815 tcp: reset sk_rx_dst in tcp_disconnect()
a52ad514fdf3b8a57ca4322c92d2d8d5c6182485 net: deprecate eth_change_mtu, remove usage
a0e65de71527477b100afe1e9ab2667d70f94d9e net: report right mtu value in error message
7866a621043fbaca3d7389e9b9f69dd1a2e5a855 dev: add per net_device packet type chains
9ff464db50e437eef131f719cc2e9902eea9c607 openvswitch: Use inverted tuple in ovs_ct_find_existing() if NATted.
4c6980462f32b4f282c5d8e5f7ea8070e2937725 net: ip6mr: fix static mfc/dev leaks on table destruction
723b929ca0f79c0796f160c2eeda4597ee98d2b8 ip6mr: fix notification device destruction
155e4a2f28a59e5344dfa7c5d003161fe59a5bf2 Drivers: hv: vmbus: Define APIs to manipulate the message page
8e307bf82d76ab02e95a00d132d926f04db6ccab Drivers: hv: vmbus: Define APIs to manipulate the event page
06d1d98a839f196e94cb726008fb2118e430f356 Drivers: hv: vmbus: Define APIs to manipulate the synthetic interrupt controller
7297ff0ca9db7e2d830841035b95d8b94b529142 Drivers: hv: vmbus: Define an API to retrieve virtual processor index
37e11d5c7052a5ca55ef807731c75218ea341b4c Drivers: hv: vmbus: Define an APIs to manage interrupt state
8e27a236312c4ab6dc8dbd303552b771d3569cf1 Drivers: hv: vmbus: Cleanup hyperv_vmbus.h
5c1bec61fdfcd056df909a712e2a86bbaeb0f942 vmbus: use kernel bitops for traversing interrupt mask
37cdd991fac810a727cd285629d1640fcf53cd19 vmbus: put related per-cpu variable together
631e63a9f346cb657761ae22138f294718696501 vmbus: change to per channel tasklet
b71e328297a3a578c482fb4814e737a0ec185839 vmbus: add direct isr callback mode
5529eaf6e79a61e0ca7ade257f31d2ababc7f6c9 vmbus: remove conditional locking of vmbus_write
6e47dd3e2938f41d75045bbcb64aa9df3a463b2a vmbus: expose hv_begin/end_read
e4165a0fad0963bf8b4a59f54d3360ccb6a6d1ea vmbus: constify parameters where possible
8200f2085abe7f29a016381f3122000cc7b2a760 vmbus: use rcu for per-cpu channel list
dad72a1d28442b03aac86836a42de2d00a1014ab vmbus: remove hv_event_tasklet_disable/enable
ada6eb11137be0baf846e00fca40fc096ba85a28 vmbus: only reschedule tasklet if time limit exceeded
2c616a8b6bd3b51b560d994f3412da998fe7ee48 vmbus: remove unnecessary initialization
4827ee1dca5691c9fc568883170a568db94f9b38 vmbus: expose debug info for drivers
6c248aad81c8903981db9f12fd74189fa01b3789 Drivers: hv: Base autoeoi enablement based on hypervisor hints
e546d778d6bb3e1a80697a6556d870c707e6df82 Drivers: hv: vmbus: Get the current time from the current clocksource
13b9abfc92be7c4454bff912021b9f835dea6e15 Drivers: hv: vmbus: Close timing hole that can corrupt per-cpu page
2cf0284223a40773bd0ec76a409a7cbf0607ca28 x86/hyperv: Check frequency MSRs presence according to the specification
6463a4571ceefc43908df4b016d8d5d8b8e85357 vmbus: re-enable channel tasklet
2adfffa223500b739b17dcf3d710cec344f7608f OF: make of_property_for_each_{u32|string}() use parameters if OF is not enabled
27d50c82714f6477ac690034b37d202f76eb4f70 ACPI / i915: Fix incorrect <acpi/acpi.h> inclusions via <linux/acpi_io.h>
86c22f8c9a3b71d42d38bfcd80372de72f573713 Mailbox: Add support for Platform Communication Channel
05ae797566a66d159cf1e2ee11bf3f6fae40c8eb mailbox: Make mbox_chan_ops const
2d805fc1c6b2ec09f27bcd951c2aee3da919f81a mailbox: Fix up error handling in mbox_request_channel()
337aadff8e4567e39669e07d9a88b789d78458b5 ACPI: Introduce CPU performance controls using CPPC
5477fb3bd1e8e43299761850318fe0057172a24a ACPI / CPPC: Add a CPUFreq driver for use with CPPC
32c0b2f606a4b71fc7b7cfa479cf47648854d9d9 ACPI / CPPC: signedness bug in register_pcc_channel()
4219853aef645d29b122daa8a8b7bd792f1cc7c9 ACPI / CPPC: Fix potential memory leak
efb2d3be53e4343ab6495729b3ec9ffb95261035 cpufreq: CPPC: Delete an unnecessary check before the function call kfree()
d29d67357db8dad08f97162bbeb51e4975ee67fd ACPI / CPPC: Use h/w reduced version of the PCCT structure
9dc17917733f5a53ef970ac95a48d2dfb7dc7202 cpufreq: CPPC: Initialize and check CPUFreq CPU co-ord type correctly
ad62e1e67751d21a3e15bca9d3ededc73de2cfa0 ACPI / CPPC: Optimize PCC Read Write operations
77e3d86f2f8c533c9c72fb5585b623b447d9bd57 ACPI / CPPC: optimized cpc_read and cpc_write
beee23aebc6650609ef1547f6d813fa5065f74aa ACPI / CPPC: replace writeX/readX to PCC with relaxed version
f387e5b901adb8352fcdf031bb2c539e390b92e2 ACPI / CPPC: use MRTT/MPAR to decide if/when a req can be sent
a29a1e76781d112014761ba106ab03e097cc4492 cpufreq: ACPI / CPPC: Add module support for cppc_cpufreq driver
8343c40d3de32ebfe8f48b043964e4ba0e7701f7 ACPI: CPPC: Return error if _CPC is invalid on a CPU
2324d15447a9db168b1f85e3feac635b1ff8edb8 ACPI / CPPC: Prevent cpc_desc_ptr points to the invalid data
5bbb86aa4b8d84395e42cd05448820651d79f349 ACPI / CPPC: restructure read/writes for efficient sys mapped reg ops
850d64a4a63ea58c7d58161989d3bd4035ec6dfd ACPI / CPPC: acquire pcc_lock only while accessing PCC subspace
80b8286aeec056d21bffed2d1ece3904516e9c91 ACPI / CPPC: support for batching CPPC requests
be8b88d7d9877114172b32817d8eb3e85d3d8f99 ACPI / CPPC: set a non-zero value for transition_latency
158c998ea44ba30ae3d1bde535581c4436417530 ACPI / CPPC: add sysfs support to compute delivered performance
8482ef8c6e684a1bba703c330e0bafe2d1d29ef7 ACPI / CPPC: move all PCC related information into pcc_data
139aee73f0c23b95a7e919b8f7e51ccf2d221181 ACPI / CPPC: check for error bit in PCC status field
a6cbcdd5ab5f242d49f511127f0a601b71be2cc4 ACPI / CPPC: Add support for functional fixed hardware address
41dd64038970139c562d07ee7ff4e41245611b4a ACPI / CPPC: Add prefix cppc to cpudata structure name
ad38677df44b67e0f5b6c4d31e9c2734abde8ed9 cpufreq: CPPC: Force reporting values in KHz to fix user space interface
f89f4147f76f91bfff6f32890fc34148178f144d cpufreq: CPPC: Avoid overflow when calculating desired_perf
b59c4b3dcd2e63d7a5483df3460d47278df716f7 ACPI / CPPC: Support PCC with interrupt flag
c197d758036d8c77923ae3f88571cf198283107e cpufreq: CPPC: Correct desired_perf calculation
974f86498ed28d86575cd2327bd83e53abd872da cpufreq / CPPC: Add MODULE_DEVICE_TABLE for cppc_cpufreq driver
ca6d75e6908efbc350d536e0b496ebdac36b20d2 sched: Add struct rq::cpu_capacity_orig
1aaf90a4b88aae26a4535ba01dacab520a310d17 sched: Move CFS tasks to CPUs with higher capacity
afe06efdf07c12fd9370d5cce5383398cedf6c90 sched: Extend scheduler's asym packing
5e76b2ab36b40ca33023e78725bdc69eafd63134 x86: Enable Intel Turbo Boost Max Technology 3.0
7d25127cef44924f1013d119ba385095ca4b4a83 x86/topology: Define x86's arch_update_cpu_topology
f9793e34952cda133caaa35738a4b46053331c96 x86/sysctl: Add sysctl for ITMT scheduling feature
17669006adf64d35a74cb21e3c8dfb6fb8be689f cpufreq/intel_pstate: Use CPPC to get max performance
8b533a0eeefc5861cea57163dd3cec2798a77f6c acpi/bus: Set _OSC for diverse core support
de966cf4a4fa8d4e0357b08204bc791f34deb3fb sched/x86: Change CONFIG_SCHED_ITMT to CONFIG_SCHED_MC_PRIO
501634759d55a5b56967de6d9465acf02bbc3565 ACPI / CPPC: set an error code on probe error path
9e9d68dad58c70f40f50adfeabd2fdaa39a743fd ACPI / CPPC: Fix crash in acpi_cppc_processor_exit()
28076483afac9dd77df269f5d460e51a09dfb19f ACPI / CPPC: Fix per-CPU pointer management in acpi_cppc_processor_probe()
368520a6b2dd232ea5743a6acd9f056bc30e05b4 ACPI / CPPC: Read lowest nonlinear perf in cppc_get_perf_caps()
2c74d8473d19c159a3c3eabaa4819e110c97e8ec ACPI / CPPC: add sysfs entries for CPPC perf capabilities
ad61dd303a0f2439bb104349e2d2ec91a3010ce0 scripts/spelling.txt: add regsiter -> register spelling mistake
73808d0fd26b3d3f0f44cc7c469ad1d3c1b570b8 cpufreq / CPPC: Initialize policy->min to lowest nonlinear performance
a4675fbc4a7abe072ac6ba38c252f22a91ebcd94 cpufreq: intel_pstate: Replace timers with utilization update callbacks
34e2c555f3e13c90e9284e23d00f03be8a6e06c5 cpufreq: Add mechanism for registering utilization update callbacks
8fa520af50817d5f30d293f507c937f561b3e6b9 intel_pstate: Remove freq calculation from intel_pstate_calc_busy()
4fec7ad5f637159525265a45f66482cf8817b45f intel_pstate: Do not skip samples partially
fdfdb2b1301670a69195ba1e5666df4a7f02eb46 intel_pstate: Do not call wrmsrl_on_cpu() with disabled interrupts
bb6ab52f2befe1fb29ac198f27d8a6aadf510f81 intel_pstate: Do not set utilization update hook too early
febce40febcff3ccdb33f63456ffc4cfc61640c8 intel_pstate: Avoid extra invocation of intel_pstate_sample()
adaf9fcd136970e480d7ca834c0cf25ce922ea74 cpufreq: Move scheduler-related code to the sched directory
30a3915385f124a6e3c81df4070f531d4f84299b cpufreq: intel_pstate: fix inconsistency in setting policy limits
22590efb98ae0c84f798a9938c0b6d97bc89adf5 intel_pstate: Avoid pointless FRAC_BITS shifts under div_fp()
4836df173aaed4b93e4d4b5c51e40f12e53ea26f intel_pstate: Use pr_fmt
3be9200d512bfa8d6292f5dce6c02aa151821e09 cpufreq: intel_pstate: Adjust policy->max
ba41e1bc28bd862089b0fc00e8136aa258a62b21 cpufreq: intel_pstate: Fix HWP on boot CPU after system resume
6d45b719cbd51f014bb1b5dd8ed99068d78d36af intel_pstate: Fix intel_pstate_get()
f96fd0c86f081c27a0ba5efadfc13f612b4071d3 intel_pstate: Clean up intel_pstate_get()
4578ee7e1defe534582fe3afdb747b86023207f0 intel_pstate: Avoid unnecessary synchronize_sched() during initialization
a1c9787dc38097d554f9da8372031b3d6f8c140a intel_pstate: Clarify average performance computation
1aa7a6e2b8105f22a5f7d6def281f776459c95ba intel_pstate: Clean up get_target_pstate_use_performance()
c749c64f45fa07d20e11af2e3f3caa9d7650d341 intel_pstate: Simplify conditional in intel_pstate_set_policy()
5ab666e09541e64ce2fd73411c3b5b9e4ad334b1 intel_pstate: Do not clear utilization update hooks on policy changes
2630abc243f8d014767c4eec1deb946bdbbcfc81 cpufreq: intel_pstate: clean remnant struct element
bc95a454b6dcf6aa464deef86e18c1770b8682b8 intel_pstate: Update cpu_frequency tracepoint every time
f00593a4bdd22e0885db89df8ee8afcc6867994f cpufreq: intel_pstate: Clarify comment in get_target_pstate_use_performance()
a6c6ead14183ea4ec8ce7551e1f3451024b9c4db cpufreq: intel_pstate: Set P-state upfront in performance mode
2f1d407adab026b34a105ed27b1d4d7e910c4448 cpufreq: intel_pstate: Always set max P-state in performance mode
eae48f046ffa117afb782cd9b3ae5469df0042e2 cpufreq: intel_pstate: Per CPU P-State limits
5879f877398a2a5e5006c6e16a4288e9d4c308a1 cpufreq: intel_pstate: Reduce impact due to rounding error
a410c03d668122923ab9b17c0c5728b520edddb4 cpufreq: intel_pstate: protect limits variable
7f7a516ee30a931fa2d257b39f5ef7b9196c56fc cpufreq: intel_pstate: Use CPU load based algorithm for PM_MOBILE
a1317e091ab1386812ee8ab4e3bbd89f2811bc74 cpufreq: Rename __cpufreq_governor() to cpufreq_governor()
0a300767e5882ad5b687966c80f9620aa0871be5 cpufreq: Introduce cpufreq_start_governor()
ed757a2c7bf7aa99d219b78349b4a0334851dc38 cpufreq: acpi-cpufreq: Make read and write operations more efficient
b7898fda5bc7e786e76ce24fbd2ec993b08ec518 cpufreq: Support for fast frequency switching
001c76f05b01cc8ceb2098c9ff5de2609bec7f76 cpufreq: intel_pstate: Generic governors support
46992d6b55b558ac4128c1f846de3cfddfa7cf7c cpufreq: intel_pstate: round up min_perf limits
d5dd33d9de0d50db7f3ba221f9c4e4f74e61a69d cpufreq: intel_pstate: increase precision of performance limits
8442885fca09b2d26375b9fe507759879a6f661e cpufreq: intel_pstate: Set EPP/EPB to 0 in performance mode
7a3ba767f6bf9d98f1c823417908719af4a22a65 cpufreq: intel_pstate: fix intel_pstate_exit_perf_limits() prototype
b59fe540539623767cf18045a78fb672b40270d6 cpufreq: intel_pstate: Add locking around HWP requests
984edbdccc6ff01b953492f72296685ce3ea2497 cpufreq: intel_pstate: Support for energy performance hints with HWP
aa439248ab71bcd2d26a01708dead4dd56616499 cpufreq: intel_pstate: Use locking in intel_pstate_resume()
cad30467963267509d5b0d7d3c9bd1af3b91e720 cpufreq: intel_pstate: Use locking in intel_cpufreq_verify_policy()
111b8b3fe4fae35d4a85e9f524b077f5c4951e65 cpufreq: intel_pstate: Always keep all limits settings in sync
1443ebbacfd7f8d84fbbbf629ef66a12dc8a4b4e cpufreq: intel_pstate: Fix sysfs limits enforcement for performance policy
0c30b65b3c8e5b8c72f39497aa8c61a662b6bcc0 cpufreq: intel_pstate: Expose global sysfs attributes upfront
fb1fe1041c04ee5ba362cf239e83a7c559beb0f3 cpufreq: intel_pstate: Operation mode control from sysfs
c3a49c8991212e1ef795c7a46881ac5cc7766993 cpufreq: intel_pstate: Fix limits issue with operation mode switching
55687da166bf51129ed6b110d7711f4c7560abe2 sched/headers: Prepare for new header dependencies before moving code to <linux/sched/cpufreq.h>
2bc756e7dde20972300bb8e2e46dd430d6d2d5db cpufreq: intel_pstate: Do not use performance_limits in passive mode
7f17326fc0b69afbda7aed6c4ce8e2328b74203b cpufreq: intel_pstate: Fix intel_cpufreq_verify_policy()
6407829901f074cf6beef566d6af9a0b0e238f0d cpufreq: intel_pstate: Avoid triggering cpu_frequency tracepoint unnecessarily
cd59b4bed9d11a2aefc4bb44eed9de0e6c1eea06 cpufreq: intel_pstate: Fix global settings in active mode
d74b19929130c9b5395a497030dcf161353cd526 cpufreq: intel_pstate: Fix intel_pstate_verify_policy()
a240c4aa5d0f9c8bb0db380ab9c1ec1f68b923ad cpufreq: intel_pstate: Do not reinit performance limits in ->setpolicy
5f98ced1c95e7706af6895f7b7b0d2216f075d59 cpufreq: intel_pstate: Drop redundant wrapper function
3f8ed54aee491bbb83656592c2d0ad7b78d045ca cpufreq: intel_pstate: Correct frequency setting in the HWP mode
e4c204ced0ac25e02e58679f07096c5bac0b0d96 cpufreq: intel_pstate: Avoid percentages in limits-related computations
7de32556dfc62b9e1203730cc26b71292da8a244 cpufreq: intel_pstate: One set of global limits in active mode
64897b20eed29cee2b998fb5ba362e65523dba3c cpufreq: intel_pstate: Fix policy data management in passive mode
eb5139d1a2272487b223c4879ecd2a1b48c2250e cpufreq: intel_pstate: Support HWP processors in all operation modes
c5a2ee7dde893e0a06044e75c16711f08d5c011d cpufreq: intel_pstate: Active mode P-state limits rework
80b120ca1a75c2df093d15936ab0591d90c99de9 cpufreq: intel_pstate: Avoid transient updates of cpuinfo.max_freq
e14cf8857ebd7486a4e30fa7dad06ba187e6cb04 cpufreq: intel_pstate: Eliminate struct perf_limits
6404367862bb25730e373cb9d443757b76f6abcc cpufreq: intel_pstate: Drop pointless initialization of PID parameters
5c43905369bb85fd518363e743b68e2407d83f7c cpufreq: intel_pstate: Initialize pid_params statically
ff35f02ea1e3ac4e774f2784c1444fba4cf8e16a cpufreq: intel_pstate: Clean up intel_pstate_busy_pid_reset()
7aec5b50e97dd3e2e6ad8a87ccfd62ba8f49a105 cpufreq: intel_pstate: Set HWP sampling interval once
694cb173475a048a05daebf27cc8fdb7865c158b cpufreq: intel_pstate: Skip unnecessary PID resets on init
ee8df89a68f27a7484f1fc71d3d69149dd4dd267 cpufreq: intel_pstate: Drop driver_registered variable
0042b2c0692ade097ef3a6bbffa491da5dc89273 cpufreq: intel_pstate: Modify check in intel_pstate_update_status()
2f49afc2a6f6ec4bacb2e50d5482ecc111b41ab5 cpufreq: intel_pstate: Drop struct cpu_defaults
2bfc4cbb5fd3848669f1b95fea793f63d8e77fa0 cpufreq: intel_pstate: Do not walk policy->cpus
b02aabe8ab9757a7dd5aa50e201a6d970f7e7a2f cpufreq: intel_pstate: Eliminate intel_pstate_get_min_max()
3cedbc5a6d7f7c5539e139f89ec9f6e1ed668418 intel_pstate: use updated msr-index.h HWP.EPP values
57caf4ec2b8bfbcb4f738ab5a12eedf3a8786045 cpufreq: intel_pstate: Avoid division by 0 in min_perf_pct_min()
1a4fe38add8be45eb3873ad756561b9baf6bcaef cpufreq: intel_pstate: Remove max/min fractions to limit performance
d4436c0dba8d4d780588179a2e192a867d266a10 cpufreq: intel_pstate: Fix ratio setting for min_perf_pct
6e34e1f23d780978da65968327cbba6d7013a73f cpufreq: intel_pstate: Correct the busy calculation for KNL
406f74c20dc258f8258b64d16d159c3fff06a506 tcmu: fix sense handling during completion
402242c904432207515e3ccb4126ff0dcfba89ca target: fix SAM_STAT_BUSY/TASK_SET_FULL handling
26e515713342b6f7c553aa3c66b21c6ab7cf82af PCI: Add Downstream Port Containment driver
19128341d6ca748088a9c787e54b2a160cf97a22 selinux: remove AVC init audit log message
e0224418516b4d8a6c2160574bac18447c354ef0 module: keep percpu symbols in module's symtab
d0e4a193c33adaa4f91128d5393aa3589c2f3e9e tools/power/cpupower: allow running without cpu0
2956b5d94a76b596fa5057c2b3ca915cb27d7652 pinctrl / gpio: Introduce .set_config() callback for GPIO chips
919eb4756ef41fd71b5eaae8a2a067fcde9d44d7 pinctrl: intel: Add support for variable size pad groups
19a8a7771770bd593d582e06b75e86499c1cabc8 pinctrl: intel: Add Intel Cannon Lake PCH pin controller support
a663ccf0fea17609b92ecc066ce6e8dda559ca73 pinctrl: intel: Add Intel Cannon Lake PCH-H pin controller support
7d211c81e97ef8505610ef82e14e302ab415bad1 IB/vmw_pvrdma: Don't leak info from alloc_ucontext
ff89b070b7c98eb6782361310ca7a15186f15b2c IB/vmw_pvrdma: Fix incorrect cleanup on pvrdma_pci_probe error path
026e93dc0a3eefb0be060bcb9ecd8d7a7fd5c398 CIFS: Encrypt SMB3 requests before sending
d70b9104b1ca586f73aaf59426756cec3325a40e CIFS: Add copy into pages callback for a read operation
4326ed2f6a16ae9d33e4209b540dc9a371aba840 CIFS: Decrypt and process small encrypted packets
c42a6abe3012832a68a371dabe17c2ced97e62ad CIFS: Add capability to decrypt big read responses
61cfac6f267dabcf2740a7ec8a0295833b28b5f5 CIFS: Fix possible use after free in demultiplex thread
e3cf5d5d9a86df1c5e413bdd3725c25a16ff854c ext4: prepare to drop EXT4_STATE_DELALLOC_RESERVED
754cfed6bbcfdea6afb14f2686f7f8d71e94d4e2 ext4: drop the EXT4_STATE_DELALLOC_RESERVED flag
c4a9d1892f1ce6fe040b717b68bd21e689cc2410 GFS2: Fix non-recursive truncate bug
9c2555835bb3d34dfac52a0be943dcc4bedd650f genirq: Introduce IRQD_AFFINITY_MANAGED flag
06ee6d571f0e350253a8fc3492316b2be007fae2 genirq: Add affinity hint to irq allocation
45ddcecbfa947f1dd8e8019bad9e90d6c9f2665c genirq: Use affinity hint in irqdesc allocation
0972fa57f53525ffa6ced12d703750fc2791e3ce genirq/msi: Make use of affinity aware allocations
5e385a6ef31fbbf2acbda770aecc2bc2ff933d17 genirq: Add a helper to spread an affinity mask for MSI/MSI-X vectors
5eb6d660193ccc471b415d6f31e17312a63de167 PCI: Add pci_msix_desc_addr() helper
12eb21de1f26233ad195ffe991697d61790f4193 PCI: Switch msix_program_entries() to use pci_msix_desc_addr()
3ac020e0ca8beff9b695f9866a06d50c09c602d6 PCI: Make the "entries" argument to pci_enable_msix() optional
aff171641d181ea573380efc3f559c9de4741fc5 PCI: Provide sensible IRQ vector alloc/free routines
4ef33685aa0957d771e068b60a5f3ca6b47ade1c PCI: Spread interrupt vectors in pci_alloc_irq_vectors()
3ee0ce2a54dff07d09440723594df89bc1a12e79 genirq/affinity: Use get/put_online_cpus around cpumask operations
4fe0d154880bb6eb833cbe84fa6f385f400f0b9c PCI: Use positive flags in pci_alloc_irq_vectors()
5d0bdf2867825a92c0a563957a2fb059149ab0d4 PCI: Call pci_intx() when using legacy interrupts in pci_alloc_irq_vectors()
28f4b04143c56135b1ca742fc64b664ed04de6a4 genirq/msi: Add cpumask allocation to alloc_msi_entry
34c3d9819fda464be4f1bec59b63353814f76c73 genirq/affinity: Provide smarter irq spreading infrastructure
e75eafb9b0395c338230b0eef2cc92ca8d20dee2 genirq/msi: Switch to new irq spreading infrastructure
44082fd6702fb12020967fd375f8bf6dd7c111bf genirq/affinity: Remove old irq spread infrastructure
ee8d41e53efe14bfc5ea5866e1178b06d78a7c95 pci/msi: Retrieve affinity for a vector
20e407e195b29a4f5a18d713a61f54a75f992bd5 genirq/affinity: Introduce struct irq_affinity
212bd846223c718b6577d4df16fd8d05a55ad914 genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
67c93c218dc5d1b45d547771f1fdb44a381e1faf genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
61e1c5905290efe48bacda5e342d4af4cb1b923b PCI/MSI: Propagate IRQ affinity description through the MSI code
402723ad5c625ee052432698ae5e56b02d38d4ec PCI/MSI: Provide pci_alloc_irq_vectors_affinity()
bfe130773862bb3a02cdc4d4c2169f7f0210a46b genirq/affinity: Take reserved vectors into account when spreading irqs
b6e5d5b947527558afac4aa0cdfa2ac586332e03 genirq/affinity: Use default affinity mask for reserved vectors
d1d111e073840b8dbc1ae90ba3fc274736451bdc PCI/MSI: Check for NULL affinity mask in pci_irq_get_affinity()
c0af52437254fda8b0cdbaae5a9b6d9327f1fcd5 genirq/affinity: Fix node generation from cpumask
dfef358bd1beb4e7b5c94eca944be9cd23dfc752 PCI/MSI: Don't apply affinity if there aren't enough vectors left
3adfb572f2978a980b250a9e1a56f84f3a031001 PCI/MSI: Return failure when msix_setup_entries() fails
862290f9e23c39051e59bf12ce65707a8ec8b911 PCI/MSI: Check that we have a legacy interrupt line before using it
948b7620c15411444167a62cfc14cdd4b0e44682 PCI/MSI: Return -ENOSPC if pci_enable_msi_range() can't get enough vectors
7bf8222b9bd0ba867e18b7f4537b61ef2e92eee8 irq/affinity: Fix CPU spread for unbalanced nodes
3412386b531244f24a27c79ee003506a52a00848 irq/affinity: Fix extra vecs calculation
b72f8051f34b8164a62391e3676edc34523c5952 genirq/affinity: Fix calculating vectors to assign
0809e3ac62319dc7534b64f95ac37e230d740e8a block: fix plug list flushing for nomerge queues
87c279e613f848c691111b29d49de8df3f4f56da blk-mq: really fix plug list flushing for nomerge queues
7d7e0f90b70f6c5367c2d1c9a7e87dd228bd0816 blk-mq: remove ->map_queue
973c4e372c8f71a15ac39765e657ded70fc87d41 blk-mq: provide a default queue mapping for PCI device
1b157939f92ae22d10b9d52baaa14f826927f5ff blk-mq: get rid of the cpumask in struct blk_mq_tags
9151bcb4fb38aab04cdc67cc3b3e11396db1b8b4 blk-mq: kill unused blk_mq_create_mq_map()
8ec2ef2b66ea2fd00acc28aca8edaad441dbb424 blk_mq: linux/blk-mq.h does not include all the headers it depends on
53c51adbe6f83eba94fd39000f98cf4235a89e4c scsi: qedf: Look at all descriptors when processing a clear virtual link.
cf29116375b7868aabe826ceda6fbe3f2451f8a7 scsi: qedf: Corrent VLAN tag insertion in fallback VLAN case.
fc69d86dcb4999eabe8804ea326994d2def77c0e scsi: megaraid: Replace PCI pool old API
e110861f86094cd78cc85593b873970092deb43a net: add a sysctl to reflect the fwmark on replies
1b3c61dc1aebf5d3d6c3981ba3eedc1e66f3ecda net: Use fwmark reflection in PMTU discovery.
166bd890a3d851b7cfdf3e417917878bfe4671f1 ipv6: data of fwmark_reflect sysctl needs to be updated on netns construction
cc31d43b4154ad5a7d8aa5543255a93b7e89edc2 netfilter: use fwmark_reflect in nf_send_reset
92e55f412cffd016cc245a74278cb4d7b89bb3bc tcp: don't annotate mark on control socket from tcp_v6_send_response()
7906b00f5cd1cd484fced7fcda892176e3202c8a sctp: fix missing wake ups in some situations
217f6974368188fd8bd7804bf5a036aa5762c5e4 net: busy-poll: allow preemption in sk_busy_loop()
364b6055738b4c752c30ccaaf25c624e69d76195 net: busy-poll: return busypolling status to drivers
02c1602ee7b3e3d062c3eacd374d6a6e3a2ebb73 net: remove __napi_complete()
545cd5e5ec5477c325e4098b6fd21213dceda408 net: Busy polling should ignore sender CPUs
fe420d87bbc234015b4195dd239b7d3052b140ea net/core: remove explicit do_softirq() from busy_poll_stop()
8a81252b774b53e628a8a0fe18e2b8fc236d92cc fs/file.c: don't acquire files->file_lock in fd_install()
d81db24056132fe8b83e2fba337e9ea76675e68d net/ena: refactor ena_get_stats64 to be atomic context safe
418df30f7e9e8f4795fb2f3abf9744e5886df5ca net: ena: fix bug that might cause hang after consecutive open/close interface.
7bb1cdbfe2b07d9272b4b132511c82527314b00f s390: wire up memfd_create syscall
977108f89c989b1eeb5c8d938e1e71913391eb5f s390: wire up separate socketcalls system calls
ee71d16d22bb268c1f6a64ef6d3654ace5f1e8c7 s390/mm: make TASK_SIZE independent from the number of page table levels
9b11c7912d00d0e5fe0d7f8973b77dac4f69d3df s390/mm: simplify arch_get_unmapped_area[_topdown]
e0b18ef7189075676ac432954d7920eaa30d8e3e KVM: x86: remove magic number with enum cpuid_leafs
17a511f878505d31f298de443269b3070c134163 KVM, pkeys: add pkeys support for xsave state
1be0e61c1f255faaeab04a390e00c8b9b9042870 KVM, pkeys: save/restore PKRU when guest/host switches
b9baba861489041b37b54fc7ee0b0006b5327151 KVM, pkeys: expose CPUID/CR4 to guest
c469268cd523245cc58255f6696e0c295485cb0b KVM: x86: block guest protection keys unless the host has them enabled
b9dd21e104bcd45e124acfe978a79df71259e59b KVM: x86: simplify handling of PKRU
38cfd5e3df9c4f88e76b547eee2087ee5c042ae2 KVM, pkeys: do not use PKRU value in vcpu->arch.guest_fpu.state
f4c0b0aa58d9b7e30ab0a95e33da84d53b3d764a perf/core: Keep AUX flags in the output handle
ae0c2d995d648d5165545d5e05e2869642009b38 perf/core: Add a flag for partial AUX records
88b0193d9418c00340e45e0a913a0813bc6c8c96 perf/callchain: Force USER_DS when invoking perf_callchain_user()
4900653829175f60356efc279695bb23c59483c3 tools include: Adopt __compiletime_error
3337e682d9f3043bb0b925d976558ed5c41b0a09 tools arch x86: Include asm/cmpxchg.h
120010cb1eea151d38a3e66f5ffc79a0c3110292 tools build: Add test for sched_getcpu()
48d02a1d5c137d362defd11a5d57d0af4a75a983 perf script: Add 'brstackinsn' for branch stacks
430daf2dc7aff16096a137347e6fd03d4af609e9 perf stat: Collapse identically named events
2073ad3326b7e4577af3d6789edd03df79519d21 perf tools: Factor out PMU matching in parser
8255718f4bedbfb3558fba10ff40a70934f2117d perf pmu: Expand PMU events by prefix match
a820e33547aee9fd0460106c1fc577a125c23975 perf pmu: Special case uncore_ prefix
37932c188ef1b471eae29249df045c8e567772d0 perf stat: Output JSON MetricExpr metric
7f372a636d92e21d6fa41aebd6986ef590aefbfc perf list: Support printing MetricExpr with --debug
962848142335e8b35d522be78f58f2011d976b17 perf pmu: Add support for MetricName JSON attribute
bf874fcf9f2fed58510dc83abcee388cee2b427e perf list: Move extra details printing to new option
8e5dc848356ecf6ea8d27d641c4d7ad8d42fe92b perf test: Add a test case for SDT event
0e6ba11511aef91ba8e2528ddc681d88922d7b0b perf tests: Do not assume that readlink() returns a null terminated string
67ef28794d7e30f33936d655f2951e8dcae7cd5a tools include uapi: Grab copies of stat.h and fcntl.h
fd5cead23f54697310bd565aa2a23ae5128080a0 perf trace: Beautify statx syscall 'flag' and 'mask' arguments
6ab11f3a35aa07be2ff167b9de37e6c1eb58396b perf annotate: Process attr and build_id records
e5e992a7c184c2121adf37bdf292a516af81dbbb perf tools: Disable JVMTI if no ELF support available
379d61b1c7d42512cded04d372f15a7e725db9e1 tools include: Introduce linux/bug.h, from the kernel sources
f6441aff8946f7fd6ab730d7eb9eba18a9ebeba4 tools include: Adopt __same_type() and __must_be_array() from the kernel
877a7a11050ee4d465364c57f8fbf78f6b1a2559 perf tools: Add include <linux/kernel.h> where ARRAY_SIZE() is used
fd20e8111cc0e51ce12fb8ee17c863088fe95065 perf tools: Including missing inttypes.h header
aa8cc2f6b5faae3511ea229846d8e54bd8df40d1 perf tools: Replace STR() calls with __stringify()
fea013928cdcf81fbe0bfbf9e2eed1c7da2d62c2 perf tools: Move print_binary definitions to separate files
a067558e2fa72445e8f6e6b2dd372a82afae6e49 perf tools: Move extra string util functions to util/string2.h
a43783aeec5fac8ef372ff8c0a5bbb3056fc0604 perf tools: Include errno.h where needed
8ec20b176c4be72d067fa18e33a4f156d1da9bc8 perf str{filter,list}: Disentangle headers
b0742e90f5ab904aa835350c28bcec48e9109379 perf tools: Don't include terminal handling headers in util.h
9a3993d408bc61b839de1a2c6c783477a04860bb perf tools: Move path related functions to util/path.h
6dcca6df4b73d409628c7b4464c63d4eb9d4d13a perf tools: No need to include bitops.h in util.h
20a9ed280dde6292c529dfdaaf9ce743ef71bb1f perf tools: Use api/fs/tracing_path.h where needed
76b31a29ddaf2fa5f0a70458c214bed02a4a70e9 perf tools: Remove include dirent.h from util.h
1eae20c1d40acf7676aa799b48f747d9b28bf352 perf tools: Remove regex.h and fnmatch.h from util.h
9607ad3a63871b074a57ce1facd04a230c38725c perf tools: Add signal.h to places using its definitions
58db1d6e7d5d24afa2d32e916fd6f6b6d240ba93 perf tools: Move units conversion/formatting routines to separate object
c5e4027e056c3027f682f0d69fe9fd75083b65f8 perf tools: Move timestamp routines from util.h to time-utils.h
8c2b7cac78e17886e8089389a570a290c9b5ca67 perf debug: Move dump_stack() and sighandler_dump_stack() to debug.h
611f0afee0e87eb6d184e7f58aa20d18d291d169 perf tools: Add compress.h for the *_decompress_to_file() headers
56e2e05644a9494e8ba3165182dcdf43d40cc6a2 perf callchain: Move callchain specific routines from util.[ch]
391e42060098a743a87380ed02bf4c8126742b04 perf tools: Include sys/param.h where needed
bf6733432dd8d92ffd687d6ce014a37923ba8105 perf tools: Remove a few more needless includes from util.h
86a5e0c2028899465a129d87f60fe4018c5ae839 perf tools: Remove sys/ioctl.h from util.h
72f7c4d22ccf7c7e78aa80ea3285e77404b31913 perf tools: Remove string.h from util.h
7a8ef4c4b5fd5c578da4dadbcb1c5da650426c74 perf tools: Remove string.h, unistd.h and sys/stat.h from util.h
4208735d8de58f1cbc2e0009d87514ce06681e5a perf tools: Remove poll.h and wait.h from util.h
e7ff8920e62f0188e77b1dc5dc5d9a7322c342d7 perf tools: Use just forward declarations for struct thread where possible
6db81643fe41f51cf9f6fd10558b8b323d9198ba perf buildid: Move prototypes from util.h to build-id.h
5ab8c689f7c0c97e98b8014b7f0ede386bef5aaf perf tools: Move event prototypes from util.h to event.h
98521b3869f8d6b4b9d2fdad8a56059e819ae002 perf memswap: Split the byteswap memory range wrappers from util.[ch]
3caeafce5392a8eba7b36d0d097d403cacc66e2d perf units: Move parse_tag_value() to units.[ch]
96395cbbc7e94cbbe4f76cf64cf122fabc19123d tools lib string: Adopt prefixcmp() from perf and subcmd
1291927a490832a9bbd0158a5d3c05c25a3c7159 perf tools: Fix spelling mistakes
1e6e7eae8a3a66f5fee4f44ef165ffcf31f0c40e tools build: Fixup sched_getcpu feature test
325fbff51f961491adff4037d0e0a94d6132bd9b perf script: Add --inline option for debugging
e67d52d411c3562263735479db2efd2ebd178db9 perf clang: Update test case to use real BPF script
7a759cd8e8272ee18922838ee711219c7c796a31 perf tools: Fix build with ARCH=x86_64
f51c0eaee39e306458d2bf8a30e010615fa451cc procfs: treat parked tasks as sleeping for task state
a33d331761bc5dd330499ca5ceceb67f0640a8e6 x86/CPU/AMD: Fix Bulldozer topology
79a8b9aa388b0620cc1d525d7c0f0d9a8a85e08e x86/CPU/AMD: Bring back Compute Unit ID
a99b646afa8a02571ea298bedca6592d818229cd PCI: Disable PCIe Relaxed Ordering if unsupported
87e09cdec4dae08acdb4aa49beb793c19d73e73e PCI: Disable Relaxed Ordering for some Intel processors
0b307ebd6834012c483b8ee9801164123a54f79a netvsc: remove no longer needed receive staging buffers
23312a3be999c22ec70c0fdf9f01cdee05fac986 netvsc: negotiate checksum and segmentation parameters
2b01888d1b453096b5b13c0d4b73e630411198b4 netvsc: allow more flexible setting of number of channels
b8b835a89b2f7a7fe681983dfe5c489cb9ad9500 netvsc: group all per-channel state together
2c7f83ca713fa0ac5c4698e4134b09a355f60263 netvsc: don't pass void * to internal device_add
2289f0aa706e5160e078f73c32fcbfb56a3ff1e2 netvsc: simplify rndis_filter_remove
46b4f7f5d1f7410de48128540ef2d1aab913a619 netvsc: eliminate per-device outstanding send counter
6c80f3fc2398aef22798e8ac4258454b1062f3fb netvsc: report per-channel stats in ethtool statistics
152669bd3cd2407d6f556009b95ee249c0c1a462 netvsc: fix use-after-free in netvsc_change_mtu()
f3dd3f4797652c311df9c074436d420f1ad3566e vmbus: introduce in-place packet iterator
15a863bf7436124e799ba175a801e25f7b57191e netvsc: implement NAPI
742fe54c7b03c83ce8067822a8739a4091c319ed netvsc: enable GRO
7ce101246655935b014b11d81f815342921f5654 netvsc: handle select_queue when device is being removed
0d6dd35784e76bc3e052ffa13c6839d5c9bcb449 netvsc: need napi scheduled during removal
79cd874c96b38694fb2b4ee3850f6fbbc3015439 netvsc: fix hang on netvsc module removal
6de38af611ca81a970965c06231cd2d5f30b2566 netvsc: avoid race with callback
262b7f142a50badde4032e925902a0d0ad89eb7f netvsc: add comments about callback's and NAPI
f4f1c23d6e41f5ee4973a6da65cba1e1c536ec29 netvsc: fix NAPI performance regression
163891d7d42935e7499daa0646a8eb3c44504300 netvsc: handle offline mtu and channel change
3071ada4916e26a8961c1b99f7766a73b9007bfc netvsc: change max channel calculation
545a8e79bd1cc8774877a26275171a2ec8881c9e netvsc: use RCU to protect inner device structure
a0be450e19d397e9ff215e32ed31bc51339b460a netvsc: uses RCU instead of removal flag
43c7bd1ffcd1621c64cedf1be52156e2f95bba9b netvsc: use refcount_t for keeping track of sub channels
386f57622cc3bbb39b9c00fc8762bc9ab28e0f8d netvsc: Properly initialize the return value
eb996edb03a665d038de7bc318182412e44c52f9 netvsc: fix dereference before null check errors
bffb184247bcc783a40a0e123a9a2de3c5b28157 netvsc: Initialize all channel related state prior to opening the channel
f9645430ef5f53ddf0ddd481e9f70f6fce7ccff2 netvsc: use napi_consume_skb
8db91f6a9b2ff2bb5355ad11c668fe63eb8ae0c3 hv_netvsc: Fix the queue index computation in forwarding case
f72860afa2e32cdc674cbdd7f354f8fb62e908a6 hv_netvsc: Exclude non-TCP port numbers from vRSS hashing
776e726bfb3493f71bb11759f7a60f1b0f6dd2d2 netvsc: fix RCU warning in get_stats
76bb5db5c749dfe19d779aac076133e821b859dd netvsc: fix use after free on module removal
2be0f2644598ee4b8ea0ed6a32913e1ce0212c9c netvsc: make sure napi enabled before vmbus_open
fbd4c7e768f1719bea340e40148800279d230922 netvsc: fix rcu dereference warning from ethtool
4f19c0d8070cd4aa8e85bbf8a19d9ef5bef77c90 netvsc: move filter setting to rndis_device
592b4fe895c03315d9917bf0227a165be401ec33 netvsc: fold in get_outbound_net_device
b92b7d3312033a08cae2c879b9243c42ad7de94b netvsc: don't access netdev->num_rx_queues directly
dedb459e13f05824bc33d2d861e9b576bfc8d0bb hv_netvsc: Remove unnecessary var link_state from struct netvsc_device_info
4a0dee1ffe0e8f4101e704a325e97f8997b0abcc netvsc: Initialize 64-bit stats seqcount
732e49850c5e15231e11a0a464748bcbade5e3c2 netvsc: fix race on sub channel creation
6894258eda2f9badc28c878086c0e54bd5b7fb30 dma-mapping: consolidate dma_{alloc,free}_{attrs,coherent}
590f07874e8e3c83729b919312c65aea2533c8cf x86/pci/dma: Fix gfp flags for coherent DMA memory allocation
298a96c12b2d8fd845ae0c2c21c0a1c0b470f99e x86/dma-mapping: Fix arch_dma_alloc_attrs() oops with NULL dev
1e8937526e2309d48fccd81bb30a590ac21a5516 dma-mapping: consolidate dma_{alloc,free}_noncoherent
efa21e432c7b3c8ae976039d614a017799b6e874 dma-mapping: cosolidate dma_mapping_error
ee196371d5cb1942ebdccc16bdce389812aa265e dma-mapping: consolidate dma_supported
452e06af1f0149b01201f94264d452cd7a95db7a dma-mapping: consolidate dma_set_mask
e1c7e324539ada3b2b13ca2898bcb4948a9ef9db dma-mapping: always provide the dma_map_ops based implementation
8e99469ab0f821bea77625cd4775ca529d4ca7d4 dma-mapping: use offset_in_page macro
d6b7eaeb03421139e32800324ef04ab50bba886d dma-mapping: avoid oops when parameter cpu_addr is null
ba409b31b3d37b52dda4eefcde04f5837c7ee4aa dma-mapping: add {map,unmap}_resource to dma_map_ops
0abdd7a81b7e3fd781d7fabcca49501852bba17e dma-debug: introduce debug_dma_assert_idle()
59f2e7df574c78e952d79435de3f4867349403aa dma-debug: fix overlap detection
3b7a6418c7494b8bf0bf0537ddee1dedbca10f51 dma debug: account for cachelines and read-only mappings in overlap tracking
0354aec19ce3d355c6213b0434064efc25c9b22c dma-debug: Fix dma_debug_entry offset calculation
0e74b34dfc3318bf4c7e51349d453d49fb8e9e16 dma-debug: add support for resource mappings
6f3d87968f9c8b529bc81eff5a1f45e92553493d dma-mapping: add dma_{map,unmap}_resource
0495c3d367944e4af053983ff3cdf256b567b053 dma: add calls for dma_map_page_attrs and dma_unmap_page_attrs
5657933dbb6e25feaf5d8df8c88f96cdade693a3 treewide: Move dma_ops from struct dev_archdata into struct device
ca6e8e1031419549f67291ca31b43126f07cecdb treewide: Consolidate set_dma_ops() implementations
815dd18788fe0d41899f51b91d0560279cf16b0d treewide: Consolidate get_dma_ops() implementations
551199aca1c3102ebed390566d681cc1290284ca lib/dma-virt: Add dma_virt_ops
6532c380bf4099e81e55e0c8c14a13232ead08c0 IB/core: Remove ib_dma_*map_single_attrs()
a62ef9a7d2542fff44f9ca68a730e3d1677b7040 IB/vmw_pvrdma: Switch from dma_device to dev.parent
e3dfa60c0a1804d5934c11cd1680e373384aa0a0 IB/srpt: Modify a debug statement
99db9494035f5b9fbb1d579f89c6fa1beba6dbb7 IB/core: Remove ib_device.dma_device
3be6d9b6da2ca62a4fd73a401b26f4a1dac2a47d dma-virt: remove dma_supported and mapping_error methods
0bbb3b7496eabb6779962a998a8a91f4a8e589ff IB/rxe, IB/rdmavt: Use dma_virt_ops instead of duplicating it
0957c29f78af7d890c4ac506eda8f76bfc5a137a IB/core: Restore I/O MMU, s390 and powerpc support
79e8cbe7a789a0863cc6cd874872b4dd63ec5947 netvsc: add some rtnl_dereference annotations
a5e1ec3833211bc0136649a89ee3a29355c7b43b netvsc: change order of steps in setting queues
ea383bf146be1e190f1d696e7db060afa8c93c31 netvsc: change logic for change mtu and set_queues
9749fed5d43d84b86f1c98b70167c31c296bb6a6 netvsc: use ERR_PTR to avoid dereference issues
2a926f791211b40ba114f45e0e7bfefd2fac5d30 netvsc: need rcu_derefence when accessing internal device info
35fbbccfb417385c1c8cc6f799154ea1ebdc22ef netvsc: save pointer to parent netvsc_device in channel table
3962981f4822aaf284234efd0500041417faea86 netvsc: add rtnl annotations in rndis
1bb79284fcf9ebacff16ea0b81b3d5b86528cfd4 netvsc: fix ptr_ret.cocci warnings
fd763ad96ae5a4aa76ce00b4090b6044c63c18ed netvsc: remove bogus rtnl_unlock
37b9dfa0d833227bc65353eec9dd0b00e1545a00 netvsc: Remove redundant use of ipv6_hdr()
43bf99ce009de710b68473480a611f3b5ddd11d5 netvsc: prefetch the first incoming ring element
7ca4593338e19595cad48fa8dcd1da28c81352d6 netvsc: fix netvsc_set_channels
658677f17c5cbe84ec24fd7be69b4da1ed580596 netvsc: remove no longer used max_num_rss queues
d6aac1f218873f2266de23280bffb909b4a98fbf netvsc: fix return value for set_channels
867047c4512aa65fb4cf66b253b51b830c7fa172 netvsc: fix warnings reported by lockdep
02b6de01af1d116c107d61fa3e8583be3b97ac3c netvsc: remove unnecessary indirection of page_buffer
7426b1a51803ba2d368177363a134b98b0a8d1c0 netvsc: optimize receive completions
493933472d33d3e82d6323842edeb281199ee430 netvsc: fix error unwind on device setup failure
f4e403633bcd290a4db2568364657d07b42ff890 netvsc: signal host if receive ring is emptied
956a25c9f120343a9b6ab6564539158ec7237181 hyperv: netvsc: Neaten netvsc_send_pkt by using a temporary
0c195567a8f6e82ea5535cd9f1d54a1626dd233e netvsc: transparent VF management
fb84af8a4397ee664a51c2da1dd64fb3d582ee24 netvsc: fix rtnl deadlock on unregister of vf
7b83f52047e8a3d551a9495b0267df5d0754c5bf netvsc: make sure and unregister datapath
6123c66854c174e4982f98195100c1d990f9e5e6 netvsc: delay setup of VF device
5e20d55a23a76a876396ba1235bdf019e74d0c6f netvsc: don't signal host twice if empty
16ba3266006be10dc7ec25dd1442f74cef89cb95 netvsc: propagate MAC address change to VF slave
68d715f68541d58033199eea80991394a6886eb7 netvsc: check error return when restoring channels and mtu
958333708f2877d3855e3bc31dad428e2f2c8096 netvsc: no need to allocate send/receive on numa node
89bb42b11370c2daf19d8820398f7255f8499ab7 netvsc: whitespace cleanup
8b5327975ae171ca54dfd93e6c042d1292945867 netvsc: allow controlling send/recv buffer size
cad5c197704d82faf33ffdbef414f15db08d9ef9 netvsc: keep track of some non-fatal overload conditions
9a603b8e1136f2b55f780fefbcbf84d31844ff2b vmbus: remove unused vmbus_sendpacket_multipagebuffer
5a668d8cddbe8bf14379ce110c49ca088a1e9fae vmbus: remove unused vmubs_sendpacket_pagebuffer_ctl
fcba1569a0c87cea40404af9a29b319f4e491839 hv_netvsc: Clean up unused parameter from netvsc_get_hash()
4823eb2f3af44e2b9f7f02bed5a211e9ce79051f hv_netvsc: Add ethtool handler to set and get UDP hash levels
c6f71c418fcc46f59fc87ac93ce9336c12d7898b hv_netvsc: Fix rndis_filter_close error during netvsc_remove
9b4e946ce14e20d7addbfb7d9139e604f9fda107 netvsc: fix deadlock betwen link status and removal
9a0c48df0d77602da3958a4c8fc2abb9521b0ade netvsc: cleanup datapath switch
ec158f77def2df084d9f62565357e3037b04bd3f netvsc: allow driver to be removed even if VF is present
715e2ec532f6bffc8ee1cb9282c9e6cbf8809591 hv_netvsc: Clean up an unused parameter in rndis_filter_set_rss_param()
5c4217d05d3258fa9999ad959c9b6da791b70bfa hv_netvsc: Simplify num_chn checking in rndis_filter_device_add()
06be580ac7b650938cb3f2cf8cd02d73ff96d3e4 hv_netvsc: Simplify the limit check in netvsc_set_channels()
db3cd7af9d0f174475cbcc02c0e96a5408fe2dc2 hv_netvsc: Fix the channel limit in netvsc_set_rxfh()
8195b1396ec86dddbba443c74b2188b423556c74 hv_netvsc: fix deadlock on hotplug
8f2bb1de73344dbedd4195016b782bee7bf3598f hv_netvsc: avoid unnecessary wakeups on subchannel creation
5023a6db73196695f4cc2db1a0eb37957ca27772 netvsc: increase default receive buffer size
0ab09befdbb7ca9b969d6206108629ddff43876e hv_netvsc: fix send buffer failure on MTU change
48d685a2ec2bc5852cf117b558dce9e90da36601 mmc: sdhci-pci: Move a function to avoid later forward declaration
bc55dcd822f98cd7c170d0aeac4ed4fb79c86bda mmc: sdhci-pci: Add support for Intel CNP
2a8f9449343260373398d59228a62a4332ea513a swap: change block allocation algorithm for SSD
815c2c543d3aeb914a361f981440ece552778724 swap: make swap discard async
edfe23dac3e2981277087b05bec7fec7790d1835 swap: fix races exposed by swap discard
ebc2a1a69111eadfeda8487e577f1a5d42ef0dae swap: make cluster allocation per-cpu
6b53491598a4d9694318e6e2b11d8c9988a483d4 mm, swap: add swap_cluster_list
371a096edf43a8c71844cf71c20765c8b21d07d9 mm: don't use radix tree writeback tags for pages in swap cache
6a991fc72d1243b8da0c644d3147d3ec41a0b281 mm/swap: fix kernel message in swap_info_get()
235b62176712b970c815923e36b9a9cc05d4d901 mm/swap: add cluster lock
4b3ef9daa4fc0bba742a79faecb17fdaaead083b mm/swap: split swap cache into 64MB trunks
e8c26ab60598558ec3a626e7925b06e7417d7710 mm/swap: skip readahead for unreferenced swap slots
36005bae205da3eef0016a5c96a34f10a68afa1e mm/swap: allocate swap slots in batches
7c00bafee87c7bac7ed9eced7c161f8e5332cb4e mm/swap: free swap slots in batch
67afa38e012e9581b9b42f2a41dfc56b1280794d mm/swap: add cache for swap slots allocation
039939a65059852242c823ece685579370bc574f mm/swap: enable swap slots cache usage
ba81f83842549871cbd7226fc11530dc464500bb mm/swap: skip readahead only when swap slot cache is enabled
322b8afe4a65906c133102532e63a278775cc5f0 mm, swap: Fix a race in free_swap_and_cache()
0ccfece6ed507738c0e7e4414c3688b78d4e3756 mm/swapfile.c: fix swap space leak in error path of swap_free_entries()
452b94b8c8c7eb7dd0d0fa9a9776e0d02cd73b97 mm/swap: don't BUG_ON() due to uninitialized swap slot cache
093b995e3b55a0ae0670226ddfcb05bfbf0099ae mm, swap: Remove WARN_ON_ONCE() in free_swap_slot()
1c5bd76d17cca6836e9d9913e4a0356cd8a36598 pNFS: Enable layoutreturn operation for return-on-close
53e6fc86abbbd7338f16267846a58de7ee24e839 pNFS: Prevent unnecessary layoutreturns after delegreturn
536585ccf95d34d64e2855f72608095854b8fc0e NFSv4: Don't check file access when reclaiming state
962ff7bcec243dc5ff6dd3cbad6ed585e3177556 mei: replace callback structures used as list head by list_head
394a77d0bb63756871750400068d8b0c3582fba7 mei: drop amthif internal client
efaf30a3357872cf0fc7d555b1f9968ec71535d3 xen/grant: Implement an grant frame array struct (v3).
52519f2af020b6b53b4e0cbb8cff71058ed434cd x86/xen: globalize have_vcpu_info_placement
ad73fd595c2ab168fdd01a266cbe6e4df95f8db0 xen/vcpu: Simplify xen_vcpu related code
0b64ffb8db4e310f77a01079ca752d946a8526b5 xen/pvh*: Support > 32 VCPUs at domain restore
c9b5d98b25161a7ebee6ea59d6424dd9f33c1b99 xen/vcpu: Handle xen_vcpu_setup() failure in hotplug
ae039001054b34c4a624539b32a8b6ff3403aaf9 xen/vcpu: Handle xen_vcpu_setup() failure at boot
3f5a7896a5096fd50030a04d4c3f28a7441e30a5 x86/mce: Include the PPIN in MCE records when available
9ea74f7c70cd5e408f1cfbda0e6836929f820d49 x86/mce: Enable PPIN for Knights Landing/Mill
38bd49064a1ecb67baad33598e3d824448ab11ec Handle mismatched open calls
350be257ea83029daee974c72b1fe2e6f1f8e615 CIFS: Fix null pointer deref during read resp processing
9d49640a21bffd730a6ebf2a0032e022f7caf84a CIFS: implement get_dfs_refer for SMB2+
67b4c889cc835a2a6e2ff4e20544a33e37e2875d [CIFS] Minor cleanup of xattr query function
2f1afe25997fc28027ae95d89ccf03e1eef2dca1 cifs: Use smb 2 - 3 and cifsacl mount options getacl functions
366ed846df607a79b4d9b52b097c01f9d53b9d2a cifs: Use smb 2 - 3 and cifsacl mount options setacl function
95907fea4fd8ccc736e0a428e52159b4d42b9958 cifs: Add support for reading attributes on SMB2+
5517554e43131f542e5f95c94c5cd9a1bb989fab cifs: Add support for writing attributes on SMB2+
4fa8e504e5c0d7db9280ac96a4ac92192f1041f5 CIFS: Fix build failure with smb2
b3230e80a6d115d2eb50fe3f4794ad04d84766de pNFS: Ensure we check layout segment validity in the pg_init() callback
a974deee477af89411e0f80456bfb344ac433c98 NFSv4: Fix memory and state leak in _nfs4_open_and_get_state
82b4e03e01bc8def546b52707962809f04ae5c7a intel_pstate: skip scheduler hook when in "performance" mode
5c71ad17f97e84d6d7e11a8e193d5d96890ed2ed EDAC, pnd2_edac: Add new EDAC driver for Intel SoC platforms
cd1be315ac9766fe83e4fb788d5d9fe032a9b877 EDAC, pnd2_edac: Fix !EDAC_DEBUG build
819f60fb7db169d851186d04e571e9bca27321e8 EDAC, pnd2_edac: Fix reported DIMM number
ee514c7a2379385fcec363f2f5f8db4eb56bc48c EDAC, pnd2: Return proper error value from apl_rd_reg()
77641dacead2cbfe22d10f4e7c07867d86900057 EDAC, pnd2: Make function sbi_send() static
164c29244d4beb9a105102c42821f4925e4a0c7a EDAC, pnd2: Fix Apollo Lake DIMM detection
d84676a9e12817c8435e836911800bdcc67928a0 EDAC, pnd2: Mask off the lower four bits of a BAR
5fd77cb3bac77f690d1d9cf57dc7851fcb3e7945 EDAC, pnd2: Conditionally unhide/hide the P2SB PCI device to read BAR
3e5d2bd19138d6683f69de26a34d7eb9ab3823ed EDAC, pnd2: Build in a minimal sideband driver for Apollo Lake
bc8f10babcc27c1f4d8e80d91cc543eabf9125c4 EDAC, pnd2: Properly toggle hidden state for P2SB PCI device
34b57f40a6a27f45dfa51b46cdbc96b7031652a7 i2c: i801: sort IDs alphabetically
09a1de04d59870b34b2a8106671c7bdea4ca9a90 i2c: i801: Add support for Intel Cannon Lake
e327c225c911529898ec300cb96d2088893de3df cxgb4 : Fix missing initialization of win0_lock
8eb9f2f9e4468e0fb86c2c06606a0ad03dd1a043 cxgb4: Support compressed error vector for T6
8ea4fae926afd81f4d7fd43444562afc8629f77c cxgb4: implement ndo_set_vf_rate()
a456950445a075f5c28a331474dc71e4133ccd3b cxgb4: time stamping interface for PTP
9c33e4208bce512e1708781711b2846f463d2eb4 cxgb4: Add PTP Hardware Clock (PHC) support
40fbbce007cb458da4c15cbf53beacf6b755cedc cxgb4: ptp_clock_register() returns error pointers
fc90adaf05ada86d3fcd145045eac32ad81f41e9 qla2xxx: Properly initialize IO statistics.
37cacc0a13012eee9fa0b07563eb149ec9244b1e qla2xxx: Use d_id instead of s_id for more clarity
5d964837c6a743193c63c8912f98834c7457ba5c qla2xxx: Track I-T nexus as single fc_port struct
726b85487067d7f5b23495bc33c484b8517c4074 qla2xxx: Add framework for async fabric discovery
ead038556f646788e22ad7f0398556d10981ca5f qla2xxx: Add Dual mode support in the driver
0ca55938497412f9ffdbcb5cb7c4f8d6d28356ee qla2xxx: Remove unused reverse_ini_mode
41dc529a4602ac737020f423f84686a81de38e6d qla2xxx: Improve RSCN handling in driver
25ff6af10562cfe30dd29452a8fc04ec022d4f18 qla2xxx: Simplify usage of SRB structure in driver
2fdbc65eae3989b566047b2ce21d66f52fe6bf69 qla2xxx: Avoid using variable-length arrays
6cb3216a7863fd13fb125f0867fce55c2bbd8c8e qla2xxx: Fix a warning reported by the "smatch" static checker
669a311b6ecc4eeb367a269bdd5f4e143caddb9c scsi: qla2xxx: fix spelling mistake: "seperator" -> "separator"
ae940f2c472a62904dc18234de5cf3ed28f195ee qla2xxx: Fix memory leak for abts processing
8b666809e10cda9814af3e8be339d35b83909056 qla2xxx: Fix request queue corruption.
8f6fc8d4e7ae2347d6261d11a7eb2b247d2954d8 qla2xxx: Fix inadequate lock protection for ABTS.
f159b3c7cd45c550d0f73806451a10b6b6bc08ae qla2xxx: Fix sess_lock & hardware_lock lock order problem.
5b33469a055c77001fd2c62b0f985c991b0e5b65 qla2xxx: Allow relogin to proceed if remote login did not finish
be25152c0d9e236076323abbe9def9714234b761 qla2xxx: Improve T10-DIF/PI handling in driver.
54b9993c8cf2d77c0f23be828a22e0817f742442 qla2xxx: Export DIF stats via debugfs
f1443eebca7792b3b8b41b27652d67ddc5d31fa2 qla2xxx: Add async new target notification
15f30a5752287f20c7de428423c34bc51cfbe465 qla2xxx: Use IOCB interface to submit non-critical MBX.
c423437e3ff41b8ca551ab6621baf11538dbfe9d qla2xxx: Add DebugFS node to display Port Database
ec7193e26055112bc824929fd943035f9a30b06f qla2xxx: Fix delayed response to command for loop mode/direct connect.
0ea88662b5c6404a8f7af6b040b3cf1f0e8c3a66 scsi: qla2xxx: Fix NULL pointer access due to redundant fc_host_port_name call
b95b9452aacf80659ea67bf0948cbfa7e28e5e0b scsi: qla2xxx: Fix crash due to mismatch mumber of Q-pair creation for Multi queue
75c9e65f30965a41e570a9f5edaabed812c092ea scsi: qla2xxx: Remove an unused structure member
3c4810ffdc8e4f34d387f59baf0abefcfa4ada6a scsi: qla2xxx: Allow ABTS, PURX, RIDA on ATIOQ for ISP83XX/27XX
8b631d87ba55f43dbd29b9e8b477301539c08815 scsi: qla2xxx: Replace usage of spin_lock with spin_lock_irqsave
383a298b2065a6f39f4ab2c33d84620ccad578f9 scsi: qla2xxx: Retain loop test for fwdump length exceeding buffer length
66ee0fece9a0b91f59a7eb8dd39808a0ef5db02b scsi: qla2xxx: Fix path recovery
ba1758919906b1f04f239532e03b9fc5b49f3aa1 scsi: qla2xxx: Use flag PFLG_DISCONNECTED.
f775bd14e44d23b1761ecdac637164654680111e scsi: qla2xxx: Convert 32-bit LUN usage to 64-bit
b98ae0d748dbc80016c5cc2e926f33648d83353d scsi: qla2xxx: Fix name server relogin
482c9dc79204bb83c3433a59680c787a0b98c000 qla2xxx: Change scsi host lookup method.
83548fe2fcbb78a233e8156feff4e167f1d0831e scsi: qla2xxx: Cleanup debug message IDs
f7e761f56c711907ccf342532120f826d5ccff3f scsi: qla2xxx: Turn on FW option for exchange check
99e1b683c4be3fee5cff824af18411cf8cc568d0 scsi: qla2xxx: Add ql2xiniexchg parameter
3a33dc95b00be33f150bc357ab67331cdba7fc88 scsi: qla2xxx: Remove redundant wait when target is stopped.
2da52737521a2a65eb9b2323a0748047a454e86c scsi: qla2xxx: Accelerate SCSI BUSY status generation in target mode
ba68a63561deb328e1ad0940cea0932e8962ef0e scsi: qla2xxx: Remove unused irq_cmd_count field.
4fae52b5a30b6f2cfc8ecf22524cedc1ece5b774 scsi: qla2xxx: Fix compile warning
49541a04b12ff0f4086c41d71ee5d3000d64a387 scsi: qla2xxx: don't include <generated/utsrelease.h>
c5419e2618b951a73d590e0752810686d52c45cf scsi: qla2xxx: Combine Active command arrays.
82de802ad46e23820f7fcaddc45adde181d95562 scsi: qla2xxx: Preparation for Target MQ.
e326d22af9653dd8eff05d71f0d1bad9174578a3 scsi: qla2xxx: Enable Target Multi Queue
d65237c7f086042b5630d94fe2d151f62c09f723 scsi: qla2xxx: Fix mailbox failure while deleting Queue pairs
4b60c82736d0e2d7f863cba1a320e89bf74a884e scsi: qla2xxx: Add fw_started flags to qpair
7c3f8fd10bab0b4d9021a11f123fd67e81ef3b0e scsi: qla2xxx: move fields from qla_hw_data to qla_qpair
8abfa9e2268337cdcd458e24008345973328e2e2 scsi: qla2xxx: Add function call to qpair for door bell
22d84726e3b82458dee015c56c88dae8c861436e scsi: qla2xxx: Add debug logging routine for qpair
32d29b4ce82785a78d059d89f40fc1cad163e0ad scsi: qla2xxx: Remove unused tgt_enable_64bit_addr flag
b5399f7d80a249fafa870d8da9fcd0d077d943b9 scsi: qla2xxx: Remove datasegs_per_cmd and datasegs_per_cont field
60a9eadb19f33a7b3e183207b5b5e1d01d8a6add scsi: qla2xxx: Move target stat counters from vha to qpair.
b945e777f95aa00c000fd2376bec85618897dd04 scsi: qla2xxx: Include Exchange offload/Extended Login into FW dump
d5ff0eed3a6621f6fd6c14f042c30a6eacfa77f1 scsi: qla2xxx: Fix crash due to NULL pointer dereference of ctx
fb2028a0b24e0823bbc0a28e6f0f1bd9fbbf733c scsi: qla2xxx: Off by one in qlt_ctio_to_cmd()
be37aa4b993bd5d4191f76a7bd43be33f987b972 scsi: qla2xxx: Fix system crash while triggering FW dump
e6373f33a6bba0de9f543f4a7faeaaa536c62997 scsi: qla2xxx: Update fw_started flags at qpair creation.
efdb57607fb0447e05eb0ce404d6a708a76e4ba7 scsi: qla2xxx: Handle PCIe error for driver
fcc5b5cd726c0779cd689362aea82cc9d5a61346 scsi: qla2xxx: Use BIT_6 to acquire FAWWPN from switch
d63b328f0904a1e04368de5cf1d27c0f2d0bc554 scsi: qla2xxx: Remove extra register read
18ada18e5e2dc565731e758785964013cf502650 scsi: qla2xxx: Change ha->wq max_active value to default
b2e8ae3f0e342a3308b4573790bd42528e51885a scsi: qla2xxx: Use fabric name for Get Port Speed command
e4e3a2ce9556cc4da40dadaf94c0d3395b6e91d9 scsi: qla2xxx: Add ability to autodetect SFP type
e0824e69bd557907157e6e1c3649baf8252cf043 scsi: qla2xxx: Prevent sp->free null/uninitialized pointer dereference.
f3caa9905d496ee7afeb7ef7ed22a529c00866bb scsi: qla2xxx: Use sp->free instead of hard coded call.
b85e0957b8a81003511e4b950ec6e6d2e7fc830d scsi: qla2xxx: Add timeout ability to wait_for_sess_deletion().
a14c771125c99bbe7f9075f1da3b1fcd8e3f4d2c scsi: qla2xxx: Allow SNS fabric login to be retried
72fcd4eb3c046cd59cb2ab5a7fc1555e8621a4b0 scsi: qla2xxx: Fix task mgmt handling for NPIV
bdbe24de281e2952e6af6eee24bff66bf94b67d1 scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown
ce0779c7d72c42b5a625850086b60ec3ddbad17e scsi: qla2xxx: Ability to process multiple SGEs in Command SGL for CT passthrough commands.
d61cca60aa79aa5afde29e37e26aff819e5b2f16 scsi: qla2xxx: Do not call abort handler function during chip reset
b5d1531260b9e5819edcaed8b549859e582e4ca4 scsi: qla2xxx: Fix slow mem alloc behind lock
98bf061b0b423a2b6f3c31b7e4b48d947352331c scsi: smartpqi: cleanup interrupt management
061ef06a2d436cea85984cf0b51b452547a5496c scsi: smartpqi: add suspend and resume support
98f876674a6fba3591c342dfbcfdbaa7ecf0a84e scsi: smartpqi: add heartbeat check
d91d7820d39629fc67cea5d6721eac8b180b0451 scsi: smartpqi: make pdev pointer names consistent
d87d5474e2080695ef0cc8c5e6c42a41d6ab961b scsi: smartpqi: cleanup messages
2a71268160b43638e9a6a553b71bc9be1ee7d9c1 scsi: smartpqi: Update copyright
94086f5be3f15fc8231e65975e4413c0df3e0203 scsi: smartpqi: remove qdepth calculations for logical volumes
3c50976f33f30cf00baea9d518bd3e7ddd01ecc4 scsi: smartpqi: add lockup action
376fb880a4fbf6903918a88081b16c167819af3f scsi: smartpqi: correct aio error path
03b288cf3d92202b950245e931576bb573930c70 scsi: smartpqi: update device offline
5f310425c8eabeeb303809898682e5b79c8a9c7e scsi: smartpqi: update rescan worker
6de783f666291763bcc6c3975e146b9b698378b1 scsi: smartpqi: enhance device add and remove messages
588a63fea1c28009fe17f194941fb8d8b101b44e scsi: smartpqi: make ioaccel references consistent
5a259e32ba32c380537f3d186a311e528b9f9c94 scsi: smartpqi: add module parameters
ebaec8e3ee4acda20293db6ba41d3467de5262b5 scsi: smartpqi: remove writeq/readq function definitions
5c146686e32085e76ad9e2957f3dee9b28fe4f22 scsi: smartpqi: mark PM functions as __maybe_unused
336b68193165b1215d21dd05619dc262340e404b scsi: smartpqi: add pqi reset quiesce support
58322fe0069a2ae2a19cf29023cc0b82c7245762 scsi: smartpqi: enhance BMIC cache flush
4f078e24080626764896055d857719cd886e6321 scsi: smartpqi: cleanup doorbell register usage.
b6d478119edeaca964b46796fd26893b81f8a561 scsi: smartpqi: update kexec and power down support
b98117caa0e3d99e4aee1114bcb03ae9ad02bf22 scsi: smartpqi: change driver version to 1.1.2-125
38a7338ab55a1e1e2e86113eb5694350c3a2c865 scsi: smartpqi: cleanup raid map warning message
61c187e46ebb27f51b52bd0eb68b7f534a300184 scsi: smartpqi: update driver version
064be15c525d02e46251fd529d84e5835b0b1339 ima: include the reason for TPM-bypass mode
5efae7d6b07f37939f8f99d0983d5346f0c3e4e6 tpm: cleanup of printk error messages
79eec5b940cffff14c7bd1b9eb856ccb36274cc2 tpm: return -ENODEV if np is not set
0cf577a03f21a988f6dbe8133d07410967b8489a tpm: Fix handling of missing event log
9430066a15d6f55a3d008a6f99bb462480870207 tpm: adjust return value of tpm_read_log
c1f92b4b04ad7006bdcbd1d5bb63f2864b06b7f8 tpm: enhance TPM 2.0 PCR extend to support multiple banks
e46e22f12b19f0068b02afcf6edb716b4f49934f tpm: enhance read_log_of() to support Physical TPM event log
70ea163699b68963e222a905e184f6436e8a290d tpm: silence an array overflow warning
61841be6358c03e864ad4c386c9a102edbba9cb8 tpm: declare tpm2_get_pcr_allocation() as static
4bf4b4ed9de40eb58232a9f576391fdc5e13a7b4 tpm: select CONFIG_CRYPTO
58472f5cd4f6ff02488c8da3cdbf719e9dd21e48 tpm: validate TPM 2.0 commands
745b361e989af21ad40811c2586b60229f870a68 tpm: infrastructure for TPM spaces
ecb38e2f521b01f0fd0b0a3261921b0bcc002dd0 tpm: split out tpm-dev.c into tpm-dev.c and tpm-common-dev.c
fdc915f7f71939ad5a3dda3389b8d2d7a7c5ee66 tpm: expose spaces via a device link /dev/tpmrm<n>
4d57856a21ed2abe33412e0526cc84bdcf67ea08 tpm2: add session handle context saving and restoring to the space code
3b395d67d9d6c20d142f6a1618c44577d3d79347 tpm_crb: remove a cruft constant
8979b02aaf1d6de8d52cc143aa4da961ed32e5a2 tpm: Fix reference count to main device
bff7f90bbe75ae37ba83e4e6566f686e19b99adc ACPICA: Add header support for TPM2 table changes
175d5b2a570cc0f79a23dbaf86e35e660f6f544f tpm: move TPM 1.2 code of tpm_pcr_extend() to tpm1_pcr_extend()
124bdcf4a697f9672d1150de60c5ea489bcad201 tpm: fix byte order related arithmetic inconsistency in tpm_getcap()
5e9fefd26b47205e423b23c3f0a41b068c84fa1d tpm, tpmrm: Mark tpmrm_write as static
402149c6470d9562fe6891e0165df7f5f6bff7a7 tpm: vtpm_proxy: Suppress error logging when in closed state
19cbe4f680b48f950246815b891a66eeb67f7410 tpm: consolidate the TPM startup code
91f7f3d773a469deeab3808d422363138295346e tpm: use tpm_buf functions in tpm2_pcr_read()
28707bf221ce6914a3e414637c8ffc4d27e9648d tpm: use tpm2_pcr_read() in tpm2_do_selftest()
f21fb3ed364bb83533c5efe19354e337ea9ecda9 Add support of Cavium Liquidio ethernet adapters
5b173cf92729b02ff8207abd85bfcbbef3443b94 Fix Cavium Liquidio build related errors and warnings
3dc817d21279ea4663bf32282718e2abbfaa4832 Modify Liquidio Kconfig for crc lib
cbdb97773e906c5c4cafa51816436cdc35b1d1c8 cavium/liquidio: fix some error handling in lio_set_phys_id()
9686f3109a9b2190029cbc9bf3e0ee2e0e224eaf net-Liquidio: Delete unnecessary checks before the function call "vfree"
166e23623e7482070aa124ad805f600672377019 net: cavium: liquidio: constify pci_error_handlers structures
286af315d3f153595ce718fb1e442891f14ed5c0 net: cavium: liquidio: use helpers ns_to_timespec64()
08a965ec93ad0495802462c32b73241d658e189d net: cavium: liquidio: Return correct error code
19a6d156a7bd080f3a855a40a4a08ab475e34b4a net: cavium: liquidio: fix check for in progress flag
7c542772cc5ff061ec3d06658f5d36304bcd5395 net:liquidio: use kmemdup
523a61b488afb51af18729d8300b7f624761370f net: ethernet: cavium: liquidio: response_manager: Remove create_workqueue
aaa76724d7ece87eb5f66e02fac9da036dd20667 net: ethernet: cavium: liquidio: request_manager: Remove create_workqueue
292b9dab403973a8644cdb84d8e46bd4e6b4baa2 net: cavium: liquidio: Remove deprecated create_workqueue
ddc173a688a1ffef8b2a6547faaf68940d4dae0d liquidio: Avoid double free during soft command
26236fa9a13d8f37e7ecf3b2b69c74e57ad6e9d0 liquidio: Host queue mapping changes
fcd2b5e36ca91eae329d33a50977ee976122a3b9 liquidio:Scatter gather list per IQ
96ae48b7faa72260c9d7203f5ad6250e149fb085 liquidio:RX queue alloc changes
cabeb13be9827991915a985d4b5683e59cba2f58 liquidio: RX desc alloc changes
a5b3788881289148ac34e6aeeb678fadee644bc9 liquidio: Consider PTP for packet size calculations
7275ebfc504c068a1250e0fa51f896e493b0edfa liquidio: New driver FW command structure
0cece6c5832b7617c90adbdc14f231f2db23dca6 liquidio: Replace ifidx for FW commands
6a885b60dad25bb687fe779fafe90a24886022f8 liquidio: Introduce new octeon2/3 header
63da84049bac7658286f1c774594fde3e77b8603 liquidio: soft command buffer limits
0da0b77cde2a4d55968457ddee2e987d0783f29b liquidio: Vlan offloads changes
63245f25715c5cff19bfdf15bf28511a5ff90c8f liquidio: Vlan filtering
9a96bde4e1b61705aaa8e769349f5577b94c1fc4 liquidio: Napi rx/tx traffic
d3d7e6c65f75de18ced10a98595a847f9f95f0ce liquidio: Firmware image download
60441888ec9cf5cdf58e43ecf93f403210cf3383 liquidio: New unload state
60b48c5a83eb1a72e514641b8c3939f1795198f9 liquidio: chip reset changes
78e6a9b4a43b2e45c5d0f26d487b2890ffb0f0b5 liquidio: tx rx interrupt moderation
1f164717cb1ee722dc58dc32bbcb01ac506d254f liquidio: New statistics support
9eb60844c8c54c4fb4e26c3e7621c0f85127d9f7 liquidio: New xaui info
178cc10e3d9b577f6fb3c87f1cf215091c339014 liquidio: ptp info
f5a20472e28ffe8810306ec99d4f57b4b62bb09c liquidio: Support priv flag
4b129ae3b692653de1794ff6a5746691ad77c433 liquidio: ddr timeout
2dce5fbfc0fb8941f1df6d08cfd3e749fd7116eb net:liquidio: remove unused including <linux/version.h>
01fb237ac0b0f8c6a5245dfd194ff9f50c308434 liquidio: Vxlan support
a7d5a3dcf71fff3d03e6c2dd3981882a70e78b46 liquidio: Macro replacements
14866ccd8fbb9b1ace953a7fad719b050763426a liquidio: IQ synchronization
55893a63d1495d7154f37f02754fb95390743cec liquidio: softcommand delay
3dcef2ca02f46c469bda7be8890d9f13aa0c7d69 liquidio: iq/oq limits
1e0d30fe2143ae8db342e62be67a12479c3c2a20 liquidio: free resources during shutdown
4c2743f9ac00e6a1c9b61ee59d9648ad9c83d1a8 liquidio: MTU limits
a22b15ce2751bfffa7b585bf426a5738d7a4d75d liquidio: Droq validation
a2c64b67c6226f923ed6ee0b2f611675abc06686 liquidio: Remove redundant code
9fbc48f6a7e17ca34090a4be72f08afe557a6afb liquidio: Response header changes
c41419b091f371d846bc5292c9138a78b7e378fe liquidio: declare liquidio_set_rxcsum_command static
3258124534f65c94423238b41fa72633529878c4 liquidio: Consolidate common functionality
83101ce338fc4448000ed0acb71352c1c2c4331b liquidio: Firmware version management
cd8b1eb4e59e7d20409a1330abe662b996c54b00 liquidio: Common enable irq function
e86b1ab6866690691f19a456f24fef8e633e5546 liquidio: CN23XX queue definitions
72c0091293c0082e78fe6110058f808244bd574d liquidio: CN23XX device init and sriov config
3451b97cce2d7827bd76378ae6e9aeb7e8fc463d liquidio: CN23XX register setup
1b7c55c4538bac0eb850359c955f452a8b56c192 liquidio: CN23XX queue manipulation
5b07aee11227fa4ccbf9b084e4fb44f655b135c0 liquidio: MSIX support for CN23XX
c0eab5b3580af67196b6b4a59db8ed44fc5ed46c liquidio: CN23XX firmware download
7b6b6c9556f9bbad4efd85ca6448ab89993294cf liquidio: link and control commands
afdf841fee732bd89d53530dd06ea8b4748ed8be liquidio: RX control commands
9bdd46095fb9476323c490674b4c5e1ec61f8a53 liquidio: CN23XX IQ access
5b823514ae31dc50a36454a6a14d40d712dbe8d0 liquidio: CN23XX octeon3 instruction
dc3abcbeaeb9593d8c0892718dcfe2bd0882832c liquidio: ethtool and led control support
9ff1a9bad867215e4a7ceeef4e9311d1232902fa liquidio: CN23XX health monitoring
9ded1a512f9de8d47074d208b41dead3c267fcee liquidio: CN23XX napi support
30136395a2f63e1aca9a62bfd631feb3eb213428 liquidio:CN23XX pause frame support
10f6c4d6ab2cdde768e29f41fbfbdde6c91fd1ff liquidio: CN23XX: fix a loop timeout
d13520c7ca7761346d2787fff1b3b112f87da77a liquidio CN23XX: HW config for VF support
ca6139ffc67ee6ef0459f81e37894ed411083855 liquidio CN23XX: sysfs VF config support
8c978d059224deea079f0ee13640bcb99faa8061 liquidio CN23XX: Mailbox support
5d65556beb36682175b6bceaecadae226c7358be liquidio CN23XX: mailbox interrupt processing
86dea55b9aef494b349c5e77e7793a8b2c7d8f1f liquidio CN23XX: VF related operations
515e752d2b877f79eefb9c512d7ab63f082bbe3a liquidio CN23XX: device states
763185a38b7f520d1421eef782b32eec9281b2a1 liquidio CN23XX: code cleanup
50579d3d951f7297e3e5af71832baacaa529de8b liquidio CN23XX: copyrights changes and alignment
97a2532660c41118ba7bf9ddc11f6cb233fd6234 liquidio CN23XX: fix for new check patch errors
c816061d27659cb666f8fd9a67669757f2c04a55 liquidio CN23XX: bitwise vs logical AND typo
111fc64a237f231bc2d3187bdf8358eb7966e6a9 liquidio CN23XX: VF registration
69c69da33d1d01b81eb56ac42142daa01777abd6 liquidio CN23XX: VF config setup
c865cdf13ac83d4e66e9f84f95252830180efb98 liquidio CN23XX: VF queue setup
da15c78b56646137a9827c59a5e9e312f8905417 liquidio CN23XX: VF register access
9003baf09ea6b8226a73bbdbf54952fa4012d7f5 liquidio CN23XX: init VF softcommand queues
f7cdd64bede8af6d86eeae6f640838ba4a039085 liquidio CN23XX: VF mailbox
cf39faf542893652e9f325f21ce757475b7fd9f5 liquidio CN23XX: VF interrupt
b3c35973b8ac0f0906ef38e9b07b0a01a3d357a7 liquidio CN23XX: VF init and destroy
846b46873eeb3baf40f7e6d8fe8f98aec95e7727 liquidio CN23XX: VF offload features
3cd25e48215ff0b2968d00856fcfb0664ad1c495 liquidio CN23XX: VF link status
50f7f94b96a9b9dad1996953b86ece3417cd0983 liquidio CN23XX: VF mac address
beea50a5d56bfff2c3589d1ebff715e46dceffbd liquidio CN23XX: VF scatter gather lists
9981328a8722f0649190fdd7d027ee745fb01189 liquidio CN23XX: VF xmit
9bdca5c66b40e10589b96e70343e9ff11d69531e liquidio CN23XX: VF TX buffers
9217c3cf84d736bffe674a5fc3722cd9a8ef8898 liquidio VF rx data and ctl path
2135f9b112b8d0670f5328486da6047e1b49dd8c liquidio VF vlan support
c05ebcc8a5136a44dc1c5122372ccf725109a13b liquidio VF vxlan
d8ab848c6b4fc2efee14fd37afdc4d27fc237f4f liquidio VF ethtool stats
f625fe620815403676a012b18c3ddc501c73f03d liquidio VF timestamp
b0d66369edcdb35003feceeb05eb39844dab9769 liquidio VF error handling
15d3afcc051f74d04a285c08594629172a1a9131 liquidio: optimize reads from Octeon PCI console
9feb16ae0b2d5246e20a8dd9049441780e59c2a1 liquidio: remove PTP support in 23XX adapters
90028b07a74ddcbaac1c5aee038a7108ae279b2e liquidio VF: fix incorrect struct being used
026b471bfc995ba1429ca45b9157457fb8602f8e liquidio: fix wrong information about channels reported to ethtool
60889869147e3dcd62032005a85eb7693bf828d8 liquidio: simplify octeon_flush_iq()
de28c99d71d91251713b67c545fa05b2b5e0d232 liquidio: store the L4 hash of rx packets in skb
cb2336b5965d95d03e46d145d5e11aea4eaab0ad liquidio: remove unnecessary code
a8ac1a55d0859cf8f53db3275ad4a6480868e80c liquidio VF: reduce load time of module
7410191afcaca3a49bb29bfb5e15f81d7b336984 liquidio: use fallback for selecting txq
4a7c972644c1151f6dd34ff4b5f7eacb239e22ee net: Remove usage of net_device last_rx member
80c8eae6ee66b52e1304c9ffd02b4472d5976608 liquidio: Avoid accessing skb after submitting to input queue
cdb478e5e413864df73096ef4f0e5d518395a92b liquidio: fix for iq and droq cnts going negative
76e0e70e6452b971a69cc9794ff4a6715c11f7f2 liquidio: do not dereference pointer if it's NULL
e3bfc6e7baaac3992f62754228128427ac955e3a net: liquidio: fix build errors when linux/phy*.h is removed from net/dsa.h
67e303e0c7683957eb4e530453705a43a6d4f966 liquidio: improve UDP TX performance
35ae57eae9135f891640f3076fd0a3c990632af0 liquidio: add support for XPS
b3ca9af0fb65098dd2afecca6831c361a585f37f liquidio: optimize DMA in NUMA systems
b229487b36a418c755eab6485aae74582d52d4a4 liquidio: remove/replace invalid code
0c88a76148432097aa9859bcd08ad07c05507725 liquidio: use meaningful names for IRQs
fe723dff0fa4181ddb8116e72bc67d00d4239cb6 liquidio: fix wrong information about link modes reported to ethtool
1f697ab109d60392f14c5e79eb6caf96805e68e9 liquidio: remove duplicate code
c5b71e633da381c299990341ec88694bd00ecad1 liquidio: add debug error messages to report command timeout
9549c6c872beee08ddb5bb92715bfde3b7161a88 liquidio: fix for vf mac addr command sent to nic firmware
58ad3198342bda5eeb97c070dde76335bf0b7203 liquidio: fix Coverity scan errors
031d4f1210a0401e938a27b229de2e9839311cde liquidio: allocate RX buffers in OOM conditions in PF and VF
6069f3fbde03211f4b839e188eba2439f8b8326a liquidio: fix tx completions in napi poll
7cc61db9c7e6c985798d5419207fbd8cdb505c7b liquidio: do not reset Octeon if NIC firmware was preloaded
50c0add534d2f56547201c9f566ad4b4f40c3049 liquidio: refactor interrupt moderation code
781159fb9c61b7a3b197c2046745fec4773806b4 liquidio: clear the correct memory
bb54be589c7a8451a0504924703abdffeb06b79f liquidio: fix Octeon core watchdog timeout false alarm
0c264588b5de50353e4a1ce0c2521576426dd89d liquidio: fix VF incorrectly indicating that it successfully set its VLAN
ca1cb28da00448fdbddc99ee6d410f461bb619b5 liquidio: remove unnecessary variable assignment
77041e89ce3d4efb9e2364b6d27e97d4bbca74fc liquidio: silence a locking static checker warning
e1e3ce623699d0cd594fa69f69371a9dbc55aa9a liquidio: fix insmod failure when multiple NICs are plugged in
0d9a5997842756f859032ae3efcaf79715a51883 liquidio: fix PF falsely indicating success at setting MAC address of a nonexistent VF
4454e8661ffcb707ce1c405b6e112255629562da liquidio: make the spinlock octeon_devices_lock static
d5c7d9b934dc07261e97088681e3753b3f5eba80 liquidio: fix rare pci_driver.probe failure of VF driver
a55667e6f258408f1e7ddcf645d76d67a5ab3d92 liquidio: fix inaccurate count of napi-processed rx packets reported to Octeon
4c1588a27991c9047cbd3a109632597514722e47 liquidio: VF interrupt initialization cleanup
9ae122c62a26ed3022d0affb5b7fffe0292bae16 liquidio: Fix checkpatch errors with references crossing single line
7fa136531e646b0608b08a6afa85030a57a7ff33 liquidio: disallow enabling firmware debug from a VF
0430a26054733de6e7884a4d2872613f9d8b9a66 liquidio: fix VF driver off-by-one bug when setting ethtool -C ethX rx-frames
836d57e5c08e13bb206dcd559d96ee9355e8316e liquidio: implement vlan filter enable and disable
c4ee5d8103ed78502170e9f0c22dc31cb335c412 liquidio: replace info-pointer mode with buffer-pointer-only mode
b381f783baa5b755f065df347f738f303b62e948 liquidio: stop using huge static buffer, save 4096k in .data
05a6b4cae8c0cc1680c9dd33a97a49a13c0f01bc liquidio: fix bug in soft reset failure detection
56c0da495a0b38f8ac0c0c0e3fcc750ea449daea liquidio: fix possible eeprom format string overflow
741912c55365f1a48611e20d3291433b686f6846 liquidio: support new firmware statistic fw_err_pki
689062a18c00f49f9c32ac8d5366c075ab691c30 liquidio: lowmem: do not dereference null ptr
00587f2fa70866a2c3425ee799c91657b4717b7c liquidio: lowmem: init allocated memory to 0
93fe07e52ea1218a78f3886d23479958e14a0eea liquidio: lio_vf_main: remove unnecessary static in setup_io_queues()
eb2b98742641ae544fd16311055789ab7cac62aa liquidio: lio_main: remove unnecessary static in setup_io_queues()
ba3fb1022154d93fe71ee78e28e195207d511bc0 liquidio: fix implicit irq include causing build failures
ade0a79ab11dc18f9ef377472e262ec13597d7ca liquidio: standardization: use min_t instead of custom macro
19d5c35950ad222e7f0cb076b428f0888f3f15f4 liquidio: cleanup: removed cryptic and misleading macro
a847135a56ff5d5994fcaabd36b2a8b581913433 liquidio: bump up driver version to match newer NIC firmware
cf19a8c3d515d8c9d88d804437c6ac291eeaa2aa liquidio: set sriov_totalvfs correctly
9060e6bae61a253f83a39145419f23fc67b401cf liquidio: add missing strings in oct_dev_state_str array
2470f3a2946083fc7b0b9fcbdc6aaee9646733e3 liquidio: moved console_bitmask module param to lio_main.c
c99c287254e1d2816e2f4b01df9049b88b205bc5 liquidio: fix wrong info about vf rx/tx ring parameters reported to ethtool
ea6404c841011a1ed7b6eac64621d5f96e8b7183 liquidio: fix misspelled firmware image filenames
42013e9038225aeaed98abf7ac4973c2a6f4ffc6 liquidio: napi cleanup
c1550fde51482feebeb8e27742672a2614cb1f12 liquidio: rx/tx queue cleanup
35c7ad3567b06593adbddb59674737fd29d388ad liquidio: removed check for queue size alignment
aa69ff9e9c32db8aa84835baffea1b70c39e5112 liquidio: moved ptp_enable to octeon_device structure
da1542b01b38ba29e0d28b1ef980071e7d38d6d4 liquidio: update debug console logging mechanism
b5e7dc47425860172eec6e1116ace7759d13b999 liquidio: fix duplicated code for different branches
e65a8ccb0d89d09b5c096b1ee706eae42c4a6671 liquidio: moved wait_for_pending_requests to octeon_network.h
25d43f182d42b40ba750e2e0516b693e62f8f723 liquidio: moved update_txq_status to lio_core.c
69f9c60e832575fe73cea0387c2d6a079f0fc96c liquidio: moved octeon_setup_droq to lio_core.c
21f0888b5a8a1d42630f2c7bb602a7a348714dd3 liquidio: moved liquidio_push_packet to lio_core.c
d1d97ee6e3a8e337883f203e90b507196e64e5fb liquidio: moved liquidio_napi_drv_callback to lio_core.c
d314ac222829c4e5cf7c0f505f207cb8848e0b8f liquidio: moved liquidio_napi_poll to lio_core.c
8974de1b7dadfea29a4d2182af775cd73df02319 liquidio: moved liquidio_setup_io_queues to lio_core.c
d18ca7df9f2a863cf67645609bb4a97b0b088116 liquidio: added support for ethtool --set-ring feature
d396179c166932e51b3a65c4f766671ac4e48763 liquidio: fix issues with fw_type module parameter
1ff392689f2eee806fad57977488181130c05830 liquidio: moved liquidio_msix_intr_handler to lio_core.c
5ef4ddb3397d95eef2a71b063913dbfef72c6d7b liquidio: moved liquidio_legacy_intr_handler to lio_core.c
14aec73aabcedb6be30f6a541f81295f5df44fbf liquidio: moved octeon_setup_interrupt to lio_core.c
a82457f1b4bd37ab20be956f14bb18e679fde124 liquidio: added support for ethtool --set-channels feature
251564f601a26d01b3b0e5a40889b4efb6823403 liquidio: update VF's netdev->max_mtu if there's a change in PF's MTU
93345c06b74513c1e1c7933aef146e1d03420079 liquidio: fix spelling mistake: "interuupt" -> "interrupt"
70535350e26f9bf8c21de0300728f17f61cdcf77 liquidio: with embedded f/w, don't reload f/w, issue pf flr at exit
3c57f61501c4006f558fc804e0bed11705a3ed45 liquidio: with embedded f/w, issue droq credits before enablement
d2896116dbc7be7cabd5db414e008aef4a5e0a00 liquidio: fix Smatch error
3de42f5617dca6d2e5c8bbc4a07b4cfe270f8764 liquidio: remove support for deprecated f/w cmd OCTNET_CMD_RESET_PF
0c45d7fe12c7e1510bae9dfac189c8b927e4636b liquidio: fix use of pf in pass-through mode in a virtual machine
ad530a1d403a70b5473578e17b65d14132926b86 liquidio: move macro definition to a proper place
ee5b1fac5641515a80ed1b15a84713629b29516d liquidio: make VF driver notify NIC firmware of MTU change
b28547728d4fd42a004df2b662724e16ff778db6 liquidio: change manner of detecting whether or not NIC firmware is loaded
b6eb9d500087a79feab2be8adb84826ffc955690 liquidio: show NIC's U-Boot version in a dev_info() message
acfb98b99647aa7dc7c111db52d5f4199d2b641f liquidio: fix crash in presence of zeroed-out base address regs
4ca2fea6f8277ab381bd08b996d641255b6f7b00 ceph: unify inode i_ctime update
efb0ca765ac6f4985b57ef215e8d55e746b083f4 ceph: update the 'approaching max_size' code
439868812aac01ec5d1b133a51e768280f3fc8d5 ceph: cleanup writepage_nounlock()
62a65f36d016fff32179acdbfcb8b2d8d9e54757 ceph: avoid invalid memory dereference in the middle of umount
ca35ffea898d2cae67820202bd9a494742726b41 libceph: handle non-empty dest in ceph_{oloc,oid}_copy()
2e59ffd1df4aba5289f04d362efc8432fac14949 libceph: encode_{pgid,oloc}() helpers
8cb441c0545dfd4dafeedc1e2d7157e1072413ac libceph: MOSDOp v8 encoding (actual spgid + full hash)
04c7d789e269c2b82bbd08106049a5a979cdb3fd libceph: make sure need_resend targets reflect latest map
00c8ebb360937bbc5da02929d62fcbf6a72801eb libceph: NULL deref on osdmap_apply_incremental() error path
f5cc6898650210a90669437d2d9a3fd564ff7d88 libceph: use alloc_pg_mapping() in __decode_pg_upmap_items()
914902af4f271884968f72c4fa144c723be2a699 libceph: don't call encode_request_finish() on MOSDBackoff messages
986e89898acb3d8f750f259a90cb73afca426b58 libceph: make encode_request_*() work with r_mempool requests
aa187926b739fb391f153335c7552c7a10d60e82 ceph: limit osd read size to CEPH_MSG_MAX_DATA_LEN
95cca2b44e54b00a3ed6ed7dc869717cd6807e81 ceph: limit osd write size
4214fb158cc423ac31b841000e219855be055388 ceph: validate correctness of some mount options
9a86962b35be06c8908028975e2261e4df0f79fd ceph: cleanup ceph_readdir_prepopulate()
5d37ca1480a70f437e4c425ee5723c760cf6afac ceph: send LSSNAP request to auth mds of directory inode
a5cd74ad388c1318554e24820b77ce335a27e0ef ceph: fix -EOLDSNAPC handling
b178cf4304f26551cb05915eb6c6b1736617366b ceph: don't use CEPH_OSD_FLAG_ORDERSNAP
d37b1d9943d5138b9b2630b7b7082629a82a1386 ceph: adjust 36 checks for NULL pointers
717e6f2893eb35ce6728c3cacdc297b78d371b31 ceph: avoid panic in create_session_open_msg() if utsname() returns NULL
38f340ccdf9ed5f1350505b46c5689d015967057 ceph: fix __choose_mds() for LSSNAP request
aac2f1bf14d07c8f13048915f39df4a527350c9a ixgbe: limit combined total of macvlan and SR-IOV VFs
b82b17d929a692df1122fedc0ff4ddcef9cb6ad4 net: ixgbe: add support for tc_u32 offload
db956ae882f4e7aa99c9c242a91ae942d08b6939 net: ixgbe: abort with cls u32 divisor groups greater than 1
176621c964e9279c42c6b641688360e5cd0baedf ixgbe: fix error handling in TC cls_u32 offload routines
ebd83ad818d2d4502d5e343388000d5dc829b7a8 ixgbe: Fix cls_u32 offload support for fields with masks
b5aea3de88e526a46839b7ccf049fab4f8ad7a4b ixgbe: Fix cls_u32 offload support for L4 ports
4ae7834221679bff2d7f75ba80a20673cecb38ad ixgbe: Extend cls_u32 offload to support UDP headers
947f8a4552325458b9cda200238292a6930828a8 ixgbe: Add support for redirect action to cls_u32 offloads
1cdaaf5405ba910275fca720cab7f24a48fbdb14 ixgbe: Match on multiple headers for cls_u32 offloads
1ecedc926be12a91271e41913ebeba8cf32e9a6c ixgbe: Fix deleting link filters for cls_u32 offloads
12746fd21e9fe1bf9103a28f15abbf343a3a66d0 ixgbe: Error handler for duplicate filter locations in hardware for cls_u32 offloads
1cd127fc7d3a6d6a0fc9f9cca47ca3a16ee79679 ixgbe: Flip to the new dev walk API
3ffc1af576550ec61d35668485954e49da29d168 ixgbe: get rid of custom busy polling code
a6ab4eff19ff52d5f1891ef919f7125bbd22b6b3 scripts/spelling.txt: add "applys" pattern and fix typo instances
b5d8acbb8781269cd4e2b986c9b0b884c0ed836a ixgbe: Avoid Tx hang by not allowing more than the number of VFs supported.
5c11f00ddac2c030827cdecf9c2d3678cbd3137b ixgbe: do not use adapter->num_vfs when setting VFs via module parameter
b09457e7a1d6e8d311b5342475d267087c4970a6 ixgbe: initialize u64_stats_sync structures early at ixgbe_probe
93df9465c93e634c49f18271218076ab0b9aaf75 ixgbe: Resolve warnings for -Wimplicit-fallthrough
2550a88d956fb77c34d71b46a0a8e9ebf1c5b4a3 RDMA/cxgb4: Limit MRs to < 8GB for T4/T5 devices
e6b11163d41d288a9c5732b85bf6760eb817d3e1 RDMA/cxgb4: Handle NET_XMIT return codes
700456bd25946ef531773d1ad2dd511e1cc4515e cxgb4: Use more common logging style
211a84e3c188c67bfa22f1e7e1cd228709f6299b cxgb4i : Call into recently added cxgb4 ipv6 api
cff57141456482b410a2312b88467ceb4c26d75d e1000e: add statistic indicating number of skipped Tx timestamps
3aec6412e007b294d4c135f5c7ed5e5ecf37dd2e aquantia: Fix Tx queue hangups
c7545689244b50c562b1fbbc71905fba224c8a05 atlantic: fix iommu errors
3f1d5bad3fae983da07be01cff2fde13293bb7b9 ext4: fix off-by-in in loop termination in ext4_find_unwritten_pgoff()
511c54a2f69195b28afb9dd119f03787b1625bb4 CIFS: Reconnect expired SMB sessions
1bd8d6cd3e413d64e543ec3e69ff43e75a1cf1ea ext4: in ext4_seek_{hole,data}, return -ENXIO for negative offsets
9827f9eb79c56424eac6409197a290601cf78eee i2c: i801: Add support for Intel Gemini Lake
2583b848cad049cf5f3f0a03af8b140668b376f3 s390: report new vector facilities
023f108dcc187e34ef864bf10ed966cf25e14e2a selinux: fix double free in selinux_parse_opts_str()
733f3d1339f91d893584b2afcea18b34148ca125 PCI: Convert Downstream Port Containment driver to use devm_* functions
14a16d57eaeca38b5de9f9e13eff58c887b3a2e1 PCI: Fix whitespace in struct dpc_dev
7e16fd6df178d3395d32c7d325df69062ea6e024 PCI: Bind DPC to Root Ports as well as Downstream Ports
a4959d8c1eaa4893b3f72d505e977ae53bce2f03 PCI: Remove DPC tristate module option
61612e6dd49d08e174e12f9aca58a4aca297609b PCI: Make DPC explicitly non-modular
87b336d003d47876e376d943be3c9d35152f3b86 PCI/DPC: Decode extended reasons
abdbf4d635a9a8c956bb9757a9d4f08c2abe1f97 PCI/DPC: Wait for Root Port busy to clear
993d668183fa49b63939a4f62a558d487fd50c22 PCI/DPC: Skip DPC event if device is not present
69a3025def543b66a9610c86706eebb6b160d3b8 PCI/DPC: Fix control register setting
f20c4ea49ec4708de97248927ac6138c2d14eba9 PCI/DPC: Add eDPC support
9e16b8d68a29a67571ca015faae401ef41e36159 PCI/DPC: Add local struct device pointers
3a99e6db539e53cc9c79282e80f8362b0cb96ac8 perf bench mem: Prepare the x86-64 build for upstream memcpy_mcsafe() changes
1f69bf9c6137602cd028c96b4f8329121ec89231 jump_label: remove bug.h, atomic.h dependencies for HAVE_JUMP_LABEL
153a4334c439cfb62e1d31cee0c790ba4157813d x86/headers: Don't include asm/processor.h in asm/atomic.h
cd4d09ec6f6c12a2cc3db5b7d8876a325a53545b x86/cpufeature: Carve out X86_FEATURE_*
3637efb00864f465baebd49464e58319fd295b65 x86/mce: Add PCI quirks to identify Xeons with machine check recovery
b2f9d678e28ca71ce650eac82f26dd287b47e89a x86/mce: Check for faults tagged in EXTABLE_CLASS_FAULT exception table entries
92b0729c34cab1f46d89aace3e66015f0bb4a682 x86/mm, x86/mce: Add memcpy_mcsafe()
cbf8b5a2b649a501758291cb4d4ba1e5711771ba x86/mm, x86/mce: Fix return type/value for memcpy_mcsafe()
9a6fb28a355d2609ace4dab4e6425442c647894d x86/mce: Improve memcpy_mcsafe()
26a37ab319a26d330bab298770d692bb9c852aff x86/mce: Fix copy/paste error in exception table entries
7d7d1bf1d1dabe435ef50efb051724b8664749cb perf bench: Copy kernel files needed to build mem{cpy,set} x86_64 benchmarks
2371cd90abe3fa1b88e15111abf2cc0a26db6e52 scsi: storvsc: remove unnecessary channel inbound lock
6256ebd5daf93505f12b66916fb1b961b38f4cf2 ACPI / DPTF: Add DPTF power participant driver
c11dd70fd7f50fca7dc05520ec8075f12d93cb63 ACPI / DPTF: move int340x_thermal.c to the DPTF folder
5d2acfc7b974bbd3858b4dd3f2cdc6362dd8843a kconfig: make allnoconfig disable options behind EMBEDDED and EXPERT
bb66fc67192bbd406fe9c22033f1bbbf3e7ec621 kbuild: trivial - use tabs for code indent where possible
09cd75555cd9051bdeac7a29c6ff12d6b9e8341b kconfig: Regenerate shipped zconf.{hash,lex}.c files
237e3ad0f195d8fd34f1299e45f04793832a16fc Kconfig: Introduce the "imply" keyword
32ce5ac867bf4ba8350a751216d087f574a38133 Kconfig: Regenerate *.c_shipped files after previous changes
795818e8bf17dbc791764ba9fb723278ee934676 s390/pci: don't cleanup in arch_setup_msi_irqs
4dfbd3efe3f0cf9ff1325b87491e1b1fe07afaf1 s390/pci: improve error handling during interrupt deregistration
725708349172f00b86e2bac5c03de360b79aaf65 s390/pci: improve unreg_ioat error handling
4e5bd7803bd1e822513d1007bad1527a2ec589b6 s390/pci: improve error handling during fmb (de)registration
623bd44d3f277b7bbe16e0e091bd361e75964b5d s390/pci: improve pci hotplug
01553d9a2ba7c658bf9e9e5c65466508c1bd6db5 s390/pci: fix handling of PEC 306
778f067c185ce56d06aedb5fba5a0e98bb464f7b nvme: add semicolon in nvme_command setting
986994a27587efd8ce4c595cab89b570f7475359 nvme: Use CNS as 8-bit field and avoid endianness conversion
bd4da3abaabffdd2472fb7085fcadd5d1d8c2153 nvme: Add a quirk mechanism that uses identify_ctrl
c5552fde102fcc3f2cf9e502b8ac90e3500d8fdf nvme: Enable autonomous power state transitions
f33447b90e96076483525b21cc4e0a8977cdd07c nvme/core: Fix race kicking freed request_queue
772918524dfb8c8869120728c1b1109a2d49493c nbd: Fix error handling
8f4e8dace3d182132c8ffbcf243dda85def6c209 nvme-rdma: add support for host_traddr
4151dd9a58c6b2758514fc88a1a3b02f9ab8b076 nvmet: Fixed avoided printing nvmet: twice in error logs.
64a0ca88eaa66e3d219296b17aa08b78894e42c8 nvmet: Introduced helper routine for controller status check.
c0e4a6f5941ec3759fd5c7e58fc5e8b135cfee72 nvme-fc: fix module_init (theoretical) error path
77f02a7acd7654cd5944f2120831d1eace94b343 nvme: factor request completion code into a common helper
987f699a8f6c9a724e970c1bb4cde2e2c6a52010 nvme: move ->retries setup to nvme_setup_cmd
f6324b1bb7f8d38c4f8be5509098e4b3ee0194b1 nvme: cleanup nvme_req_needs_retry
83f3aeb386e8cd24ad501a726c33a74422c03591 nvme: mark nvme_max_retries static
44e44b29fb99a299dfaa404a59fa35519a197c6b nvme: move the retries count to struct nvme_request
d663b69ff378e4990e35e274ab0813c4641ab564 nvme-fc: fix status code handling in nvme_fc_fcpio_done
27fa9bc54541dabc3fabe1c520d342f5add0379b nvme: split nvme status from block req->errors
65ba6b54e7c1fe7751388f5da6ad87c2d1bee3ae nvme: make nvme_error_status private
ff5350a86b20de23991e474e006e2ff2732b218e nvme: Adjust the Samsung APST quirk
be56945c4edd5a3da15f8254b68d1ddb1588d0c4 nvme: Quirk APST off on "THNSF5256GPUK TOSHIBA"
f9f38e33389c019ec880f6825119c94867c1fde0 nvme: improve performance for virtual NVMe devices
baee29ac17e6363c9ec843de6b83afc95932e9c4 nvme-fc: mark two symbols static
fb0dc3993b537e12ce63511d535ff86efff13c8f nvme: Display raw APST configuration via DYNAMIC_DEBUG
c35e30b4727b390ce7a6dd7ead31335320c2b83e nvme: Add nvme_core.force_apst to ignore the NO_APST quirk
de41447aac034c4acc8d9d1ddbdcb7ce4e8a3f6f nvme-fc: avoid memory corruption caused by calling nvmf_free_options() twice
2952a879bacbfae8b03fd886754e64fe14b8041e nvme-fc: stop queues on error detection
0ce872bf8b5c4d425a41940a523ff1b8daa0b275 nvme_fc: get rid of local reconnect_delay
5bbecdbc8e7ffaaf47ac1f02014bf3bedda3fd11 nvme_fc: Support ctrl_loss_tmo
a5321aa5efea05ae748dc5b3e8053584213325ca nvme_fc: revise comment on teardown
589ff7753bb54edd3ee4a9399ccc3ac48d9b22d7 nvme_fc: set logging level on resets/deletes
e392e1f1f408fe8baf1046c970d05cbf1f0ec945 nvme_fc: correct nvme status set on abort
2cb657bc0242dfdca20869685bf179774ef1a6fb nvme_fc: remove extra controller reference taken on reconnect
9bdcfb10f221e796c9619fe48655e0f1272f1d92 nvme-pci: consistencly use ctrl->device for logging
d3d5b87ddde09bade512526f6df90e8c06c28230 nvme: replace is_flags field in nvme_ctrl_ops with a flags field
50af47d04ca530544b27affffb0722f158e2bb9c nvme: Quirk APST on Intel 600P/P3100 devices
f874d5d079ec35158fa1a1509554c9d641bd5770 nvme-fc: on lldd/transport io error, terminate association
24b7f0592f738a1127c72dbf5b72a83997dd6997 nvme-fc: fix missing put reference on controller create failure
da87591bea92204fcb921bac927666eb7141908e nvme: only consider exit latency when choosing useful non-op power states
9947d6a09cd71937dade2fc14640e4843ae19802 nvme: relax APST default max latency to 100ms
39673e1995381b09a63cc7e9d0aea7cf871cb359 nvme.h: add struct nvme_host_mem_buf_desc and HMB flags
fe6d53c9c0bb51977521d409a2efe453b7123c39 nvme: save hmpre and hmmin in struct nvme_ctrl
a9a62c9384417545620aee1b5ad1d9357350c17a dma-mapping: introduce the DMA_ATTR_NO_WARN attribute
87ad72a59a38d1df217cfd95bc222a2edfe5d399 nvme-pci: implement host memory buffer support
9a6327d2f25b14cb568ca2c55ccbc8f00aa400e4 nvme: Move transports to use nvme-core workqueue
fdf9dfa85093f9813bc9818b7920fcf5a0eb3580 nvme: move nr_reconnects to nvme_ctrl
97f6ef6464dbd235a4d9bdfc05d949aab24fc927 nvme-pci: remap BAR0 to cover admin CQ doorbell for large stride
d19d4c8eb1c08f5292a5a5619098e498166055c2 nvme-pci: remove redundant includes
0add5e8e588c65c5ac6a3255f624260bf889128d nvmet: use NVME_IDENTIFY_DATA_SIZE
90985b84c42a045c0d3ed2753a839b37edb3a8f1 nvme: rename uuid to nguid in nvme_ns
3b22ba2682b43296b55f5b4e8c2e91b7248db02b nvme: get list of namespace descriptors
d934f9848a77be4afe0ca336ea419dd066c934f3 nvme: provide UUID value to userspace
f0425db00ce4241a635463729317b06406ab6b3f nvme: use ctrl->device consistently for logging
15039efadd3c16307008becb24b0f9e0cebb2e04 hns: Remove a set-but-not-used variable
ebe6d874cdb27d47f506a43ea95f1c0ef03aa246 nvme: move protection information check into nvme_setup_rw
b2a0eb1a0ac72869c910a79d935a0b049ec78ad9 nvme-pci: Remove watchdog timer
d86c4d8ef31b3d99c681c859cb4e936dafc2d7a4 nvme: move reset workqueue handling to common code
39bdc5901f2525de3afab8a30b7acc04f6ce41c3 nvme: no need to wait for the reset when keepalive fails
6b8190d61a622e095f04451437953acd2d74b371 nvme: implement NS Optimal IO Boundary from 1.3 Spec
eb281c8283e87a2d1d6ed406f9c6408c39737b4d nvme-pci: Introduce nvme_ring_cq_doorbell
83a12fb77b941a6735026e46c8ef5f4ec1204e97 nvme-pci: factor out cqe handling into a dedicated routine
920d13a884c0595451658a7b48af8ac16918628f nvme-pci: factor out the cqe reading mechanics from __nvme_process_cq
76a5af841755a0427229a6a77ca83781d61e5b2a nvme: explicitly disable APST on quirked devices
180de0070048340868c7bc841fc12e75556bb629 nvme: read the subsystem NQN from Identify Controller
49d3d50b0d4eb0c86c1dae864586f1b26ccd1f5b nvme: simplify nvme_dev_attrs_are_visible
b4dfd6ee997d6d5d30b8ace5593ad1a9134418d6 nvme_fc: fix double calls to nvme_cleanup_cmd()
36715cf4b36688aa327d77ddb6bc5f740b01de94 nvme_fc: replace ioabort msleep loop with completion
0b5a7669a457dd503b3d9922e931ecb01843a916 nvme_fc: Fix crash when nvme controller connection fails.
188f7e8a3789cb2e37b68903e0a40f406091fa97 nvmet_fc: fix crashes on bad opcodes
69fa964632fe18a11a80ead0d09ef3399b08144a nvme_fc: fix error recovery on link down.
d554b5e1ca64d23e4f839e6531490fee8479fbaf nvme: Quirks for PM1725 controllers
d858e5f04e58a42a6e0c8ec74ea15e3ea4bb45d0 nvme: move queue_count to the nvme_ctrl
20d0dfe65afd3fb59d14720570a6921eb6bf5c1f nvme: move ctrl cap to struct nvme_ctrl
01ad0990467eaa17ae17db7376a4f02739f558c0 nvme-pci: rename to nvme_pci_configure_admin_queue
7314183d1d0c200def4d0f5a6d978d3b29d28813 nvme-fc: don't override opts->nr_io_queues
cda5fd1ac5c2c42d1b2e1847aa0438b229c5c068 nvme-fc: update tagset nr_hw_queues after queues reinit
e5859d3a0ea07bf948f4538d47fe6547f6e115be nvme-fc: use blk_mq_delay_run_hw_queue instead of open-coding it
d09f2b45f346f0a9e5e1b5fcea531b1b393671dc nvme: split nvme_uninit_ctrl into stop and uninit
2ee0e4ed5ca24c0642a7b72d75b4fe6dfc0a8db8 nvme-pci: compile warnings in nvme_alloc_host_mem()
b27c1e683d2c8cd666a042b02096d18237911a37 nvme-pci: add module parameter for io queue depth
86eea2895d11dde9bf43fa2046331e84154e00f4 nvme-pci: Remove nvme_setup_prps BUG_ON
6484f5d16f9d5368afac61091972242f3bd695a9 nvme: also provide a UUID in the WWID sysfs attribute
8b25f351929b5a5216ccb2c8882965134019679d nvme-fc: address target disconnect race conditions in fcp io submit
9c5358e15ca12ed3dc3b1e51671dee5d155de8e0 nvme-fc: revise TRADDR parsing
50cdb7c61b019a732fe34635a7cbf2a7487f5e90 nvme-pci: fix HMB size calculation
0fb228d30b8d72bfee51f57e638d412324d44a11 nvmet_fc: add defer_req callback for deferment of cmd buffer return
634b8325905031eeafa61951623681ebc1329385 nvme: fix nvme reset command timeout handling
16a5a480f067f945fd27bf91ffdce3f959b0d4b6 nvmet-fc: correct use after free on list teardown
369157b41cca435442cf5add9df209aaf951860d nvmet-fc: eliminate incorrect static markers on local variables
e9d8a0fdeacd843c85dcef480cdb2ab76bcdb6e4 nvme-pci: set cqe_seen on polled completions
4033f35d174af4804a79fd5731d9e6be976f9f28 nvme-pci: use dma memory for the host memory buffer descriptors
223694b9ae8bfba99f3528d49d07a740af6ff95a nvme: fix the definition of the doorbell buffer config support bit
1abf71eef32c7f242fe30ea66a635e297b2c1c8d Move platform device creation earlier in the initialization
3f724c408a7bcf25609f6a0102b835d5970cadd3 ipmi_si: use smi_num for init_name
3fb4c22eaaf04b60d8a55f2c6bfa28314ced9df6 csiostor:Remove T4 FCoE Support.
216ce69c7ff56d7fc67d30e0e8a0f80df367249f csiostor:T5 Firmware fix and cleanup.
541c571fa2fdfd4782d840276c5aedb535349075 csiostor:Use firmware version from cxgb4/t4fw_version.h
a351e40b6de550049423a26f7ded7b639e363d89 scsi: csiostor: fix use after free in csio_hw_use_fwconfig()
4bbd458eaa789959f23f4c998d30b972715e1013 scsi: csiostor: add support for Chelsio T6 adapters
96e6c633ec48ca487cc150d77810ac500bab35f8 scsi: csiostor: add check for supported fw version
c455fd9235b6bd2802db86109cfa0ec105992f68 x86/nmi: Use raw lock
e891a32e7ae0c6ba57959799c0ac84681616eeef KVM: x86: remove irq disablement around KVM_SET_CLOCK/KVM_GET_CLOCK
3067eaa7ce2dbcde89d87277cdbc91c211480060 perf test: Add test cases for new data source encoding
173743dd99a49c956b124a74c8aacb0384739a4c audit: ensure that 'audit=1' actually enables audit for PID 1
f990c82c385b1d9ce6acadb668df313c693cf48f qed*: Add support for ndo_set_vf_trust
d5ea2df9cefa9c81a66021b5bb89562d02bbc2f7 IB/mlx5: Add helper mlx5_ib_post_send_wait
7d0cc6edcc7011133c45f62a7796a98b8cb5da0f IB/mlx5: Add MR cache for large UMR regions
d9aaed838765e28234cb700c7d1ac975cadf28c9 {net,IB}/mlx5: Refactor page fault handling
17d2f88f92ce39b348f125f6b2e6eeb6b0906ac7 IB/mlx5: Add ODP atomics support
2f5ff26478adaff5ed9b7ad4079d6a710b5f27e7 mlx5: Fix naming convention with respect to UARs
0b80c14f009758cefeed0edff4f9141957964211 IB/mlx5: Fix retrieval of index to first hi class bfreg
a6d51b68611e98f05042ada662aed5dbe3279c1e net/mlx5: Introduce blue flame register allocator
0118717583cda6f4f36092853ad0345e8150b286 net/mlx5: Add interface to get reference to a UAR
5fe9dec0d045437e48f112b8fa705197bd7bc3c0 IB/mlx5: Use blue flame register allocator in mlx5_ib
b037c29a8056b8e896c4e084ba7cc30d6a1f165f IB/mlx5: Allow future extension of libmlx5 input data
30aa60b3bd12bd79b5324b7b595bd3446ab24b52 IB/mlx5: Support 4k UAR for libmlx5
75c33da827365afa6f3d708ad1f7abe18e0ba4a3 net/mlx5e: TC ipv4 tunnel encap offload cosmetic changes
9a941117fb761dcfb4f698f1f67340484b781b90 net/mlx5e: Maximize ip tunnel key usage on the TC offloading path
b4e029da29ce8244879b607fbf0514d1087dc3f5 net/mlx5e: Reduce memory consumption on kdump kernel
1dd70ea36077f320dadad120d1a611b9ce706ea5 IB/vmw_pvrdma: Remove unused qp_type
5226b7919641f285bf0f8db84deeb3920b160ec7 cxgb4: get rid of custom busy poll code
2b31f7ae5f645edd852addfca445895b5806f3f9 net/mlx5: TX WQE update
a6f402e4990145252ce4fde59b273fa7e4f91e1b net/mlx5e: Tx, no inline copy on ConnectX-5
592e8b3226a2b6d116589908d96c45fa13302ad7 RDMA/bnxt_re: Add bnxt_re driver build support
5abb0da9cd438483d80517b1d5f0a62a2f818426 IB/mlx5: Remove deprecated module parameter
7c16f47779498650e9f11a395f8d63accedf35a3 IB/mlx5: Expose Q counters groups only if they are supported by FW
23a6964e3adb0796e1633562a574839b92360cb6 IB/mlx5: Add port counter support for Receive WQs
49780d42dfc9ec0f4090c32ca59688449da1a1cd IB/mlx5: Expose MR cache for mlx5_ib
81713d3788d2e6bc005f15ee1c59d0eb06050a6b IB/mlx5: Add implicit MR support
d8030b0de03ec6bdf3665e1d915fa0f02e5ec89d IB/mlx5: Fix blue flame buffer size calculation
c78c70fa30e23dc6cdb394f6c13880919499fba5 qed: Add infrastructure for PTP support
c67294b70b5aafa2769e8c677a044243ce974c3a IB/vmw_pvrdma: Expose vendor error to ULPs
885185dfc49bde35b45046bb6b7384eca68e404f qede: Free netdevice only after stoping slowpath
65ed2ffd640578166e4ec149573bcf1d10f81b81 qed*: Fix link indication race
0253f2681f4445e9003fb27dc743ef7d25e8f3b9 net/mlx5e: add IPV6 dependency
1ad9a00ae0efc2e9337148d6c382fad3d27bf99a net/mlx5e: Avoid supporting udp tunnel port ndo for VF reps
6332dee83d8eab80d6d502cc51135b998fe6df79 RDMA/vmw_pvrdma: Cleanup unused variables
e51c2fb0331cb3440d7dc83ee78019ee8c7bb366 RDMA/vmw_pvrdma: Dont hardcode QP header page
b172679b0d3b93a6197b2ff892794e7178e3c448 RDMA/vmw_pvrdma: Activate device on ethernet link up
812755d69efcf7c12fded57983d456647a0bbadd uapi: fix rdma/mlx5-abi.h userspace compilation errors
32f3671f6951836cfe9d84e1a6554908b85c61d7 net/mlx5e: Make sure the FW max encap size is enough for ipv4 tunnels
5ae85b0edaa597b063ee9d8f48b830519a6e0c0f net/mlx5: Fix UAR memory leak
90ec7c9dff07d676c0b9b499286b931005c6b051 scsi: lpfc: use div_u64 for 64-bit division
223b78ea212852726dfa86ef267a9c8a323d5cc2 scsi: lpfc: fix building without debugfs support
ea98ab34c4339bc638fa394bf1bf0c6863fa88f4 scsi: lpfc: fix potential buffer overflow.
a44e4e8b6bf22926be6ed63f99def5e62953ac08 Standardize nvme SGL segment count
975ff31c77348c567b4c12418d456446c50006dd Fix nvme unregister port timeout.
c154e750d38e561e076e9d2fc6ffaa18820f4fa1 Fix log message in completion path.
06909bb91f6477db3dd40d5c5fe0364cd114a918 Remove unused defines for NVME PostBuf.
eafe89f556ef1fe1b07ab8c1b4ce453ca1da1e41 Remove NULL ptr check before kfree.
afbb38fedaa25935b963b07cc10f72a25bb3acbb Fix extra line print in rqpair debug print.
d1f525aaa4d7e575a655365b6ae01a2a1c5fb321 Fix driver unload/reload operation.
4410a67a9e53d3cf8d1b88169c642d91f1292fb2 Fix nvme initiator handling when not enabled.
59c6e13ecd50fdb2d872617d194e05f2c31f26d7 Remove hba lock from NVMET issue WQE.
2b7824d00d9cae2e625dcf6b004c5d738a9c8df4 Fix driver load issues when MRQ=8
9d3d340d19d36b923d768f25c66cedc900d8ad90 Fix crash after issuing lip reset
4d4c4a4ac756e7a0198259a49eeaf0d4a0e9a4fb Fix max_sgl_segments settings for NVME / NVMET
1c5b12f76301b86d0e5828c7d11ec7c36ffd0195 Fix implicit logo and RSCN handling for NVMET
86c6737963e1c6019168512743908c8ee4e80f06 Update ABORT processing for NVMET.
51f397642c890e6c54e2532110c84519f1d12e4c lpfc revison 11.2.0.12
bbe3012b73b592dfe5f4340a14373840f51887b6 lpfc: Fix memory corruption of the lpfc_ncmd->list pointers
0d618cf4f24cebb822eaf57c27985266e4110176 scsi: lpfc: double lock typo in lpfc_ns_rsp()
019c0d66f66a8612bb867caf05e865a4766238a4 scsi: lpfc: ensure els_wq is being checked before destroying it
0c9c6a75141810acade82add4f4708959a5d3a1d scsi: lpfc: Fix system crash when port is reset.
547077a44b3b49f56c0f05c0b46c8c617dea591d scsi: lpfc: Adding additional stats counters for nvme.
61f3d4bf4f8f062cf6be143c9b7adbc3a017ea6e scsi: lpfc: Fix nvmet RQ resource needs for large block writes.
7869da183a7cfc8a2189f6eddd3bc558be40d5e3 scsi: lpfc: Fix NMI watchdog assertions when running nvmet IOPS tests
3c603be9798758dde794daa622e0f7017dbff3a7 scsi: lpfc: Separate NVMET data buffer pool fir ELS/CT.
6c621a2229b084da0d926967f84b059a10c26ede scsi: lpfc: Separate NVMET RQ buffer posting from IO resources SGL/iocbq/context
a8cf5dfeb4d84248c0ad12386ae0cb36ee21589a scsi: lpfc: Added recovery logic for running out of NVMET IO context resources
64eb4dcb140a7c5547f6e965fb471b1b75c01108 scsi: lpfc: Cleanup entry_repost settings on SLI4 queues
dc53a61852279f25909d99dad4638b4aee0b2d82 scsi: lpfc: Fix NVMEI's handling of NVMET's PRLI response attributes
2848e1d503d60955ff51ae9ec8d5eada6bd9ba6d scsi: lpfc: update version to 11.2.0.14
53cf29d3b1bc5b86fcff5fdc52f873d79d908ef4 scsi: lpfc: Fix NULL pointer dereference during PCI error recovery
eeeb51d834d76c66784e7fe1a9ace3ce3f8d2af1 scsi: lpfc: fix build issue if NVME_FC_TARGET is not defined
4b8ba5fa525bc8bdaaed2a5c5433f0f2008d7bc5 nvmet-fc: remove target cpu scheduling flag
9094367a9161858004eacb7373aa2bf48c51c16d scsi: lpfc: nvmet_fc: fix format string
7c9fdfb7000715df2d187df251d11e4850ce94c8 scsi: lpfc: Avoid NULL pointer dereference in lpfc_els_abort()
e6ef6a77f51e403a1400241b9d029ecaba45a834 scsi: lpfc: prevent potential null pointer dereference
20dcf8e244b963a5c64cdda336d00d5169d17985 lpfc debugfs: get rid of pointless access_ok()
39aa23f98a6b9932d6ffa1483639aad865b7ba9a scsi: lpfc: make a couple of functions static
7a06dcd3f8b0d8a89be4c0c573ecf1a1d720474e scsi: lpfc: Add nvme initiator devloss support
80cc004393619a1b3a17aaf4a9e55c5b9f4fc3c1 scsi: lpfc: Fix transition nvme-i rport handling to nport only.
7d790f04d7e4759da238cc6c46796f917af4cec2 scsi: lpfc: Fix nvme port role handling in sysfs and debugfs handlers.
ce1b591c5be11fbe053f009837eccf0c633245f0 scsi: lpfc: Add changes to assist in NVMET debugging
92721c3b97126a712af221635407251e42e58b60 scsi: lpfc: Fix Lun Priority level shown as NA
6599e12428a8b3b182e91818cb7b73ab29e7daff scsi: lpfc: Fix nvmet node ref count handling
2cee7808004b33bd5dc75fccd8d145b5e208ef93 scsi: lpfc: Fix counters so outstandng NVME IO count is accurate
b83d005e63ba2383738c1818691e973761d1e860 scsi: lpfc: Fix System panic after loading the driver
dea37e82fa3423a6c8d1325d44e68b6d03892453 scsi: lpfc: Fix PRLI retry handling when target rejects it.
b57ab7469d2643ef1ff1fc5d82f5db22af60fc46 scsi: lpfc: Fix vports not logging into target
78e1d2009f1c539a23f470728e530a3ce1d527e6 scsi: lpfc: Fix defects reported by Coverity Scan
0cf07f84dd32639394084b9d6794424587a38789 scsi: lpfc: Add auto EQ delay logic
1080f7ec612569e47b747189b38e4b0aa9f14013 scsi: lpfc: update to revision to 11.4.0.0
b4fd681e8a353b1d492c159d6effa070c3c00c23 scsi: lpfc: Fix nvme_info sysfs output to be consistent
810ffa4789c8453caf0b876619c428bf64fef304 scsi: lpfc: Reduce time spent in IRQ for received NVME commands
966bb5b7119607cf3d9a0d668eb67af67c2bab45 scsi: lpfc: Break up IO ctx list into a separate get and put list
09559e81121f9663e8f1f6ed05672c49e31be3db scsi: lpfc: Fix SLI3 drivers attempting NVME ELS commands.
11e644e2a2afa34a4d0ca896cf722572317b21ed scsi: lpfc: Fix crash doing IO with resets
4550f9c75e6abdc1f80170adf74d7610d059afd7 scsi: lpfc: Fix crash in lpfc_sli_ringtxcmpl_put when nvmet gets an abort request.
b609b1c753364c6bf6f8666c82047d239fba6889 scsi: lpfc: update to revision to 11.4.0.1
00cefeb964f525672b5344446e5bb72188b03e38 scsi: lpfc: Fix nvme io stoppage after link bounce
c4031db72b4fd2640ff3a7240701397abaacf048 scsi: lpfc: spin_lock_irq() is not nestable
88e96174206e09e8eef7636067f4e24a9e67139a scsi: lpfc: don't double count abort errors
507384209371fc25cab203b95e7bdf50e58b47d5 lpfc: support nvmet_fc defer_rcv callback
771db5c0e3f5da592a871c4d457ea73df76ded12 scsi: lpfc: Replace PCI pool old API
2877cbffb79ed121a6bcc5edbe629d3aba36cd29 scsi: lpfc: Fix loop mode target discovery
bb6a8a2c24f263cdff78b62ada58cecd8c89c03d scsi: lpfc: Fix oops when NVME Target is discovered in a nonNVME environment
ffb70cd6b64ffcbb5f0fb0d9f2bac29a6dffc81b scsi: lpfc: convert info messages to standard messages
cd22d6057c0cf1d6753a11c19c1cb62ca3f8fb29 scsi: lpfc: Correct return error codes to align with nvme_fc transport
8db1c2b3e7fa1b1a75a8dddc77bf516acfc03e8a scsi: lpfc: Fix handling of FCP and NVME FC4 types in Pt2Pt topology
4b40d02b8b2bd549c7751a3c4629077ea5f9a1fd scsi: lpfc: Fix crash in lpfc nvmet when fc port is reset
991f0c0e33e2a57120970d28c08384c77505bfca scsi: lpfc: Fix NVME PRLI handling during RSCN
e3e2863def0262782aec6745bb4c0a86b3dfdd3b scsi: lpfc: Limit amount of work processed in IRQ
66d7ce93a0f5b991d6bf068f797dec49eb8e5c57 scsi: lpfc: Fix MRQ > 1 context list handling
c6e0c925064cbff2cf36f590d14641cfdf02f473 scsi: lpfc: Fix relative offset error on large nvmet target ios
6b486ce9ee109c7dc3de31b23724f8e3b3c5ff35 scsi: lpfc: Fix bad sgl reposting after 2nd adapter reset
d58734f05ff0aaa787eeedd1e790fee6c9e92af8 scsi: lpfc: remove console log clutter
44fd7fe3dd2ce9dba873a0522e1eeab9ab5d5651 scsi: lpfc: Add Buffer to Buffer credit recovery support
286871a6667c3d4d27a4cf1ee519e629527dfc9d scsi: lpfc: fix "integer constant too large" error on 32bit archs
610448367c8232b951df19136e439558c618fd41 scsi: lpfc: lpfc version bump 11.4.0.3
7362617319fd2273c7fe5a5f8f8b5fb059a85015 scsi: lpfc: avoid an unused function warning
5fe5a6c9acc03bcd98e0d1611b6a0fe17149c6cc scsi: lpfc: avoid false-positive gcc-8 warning
825c6abbc316f496cd2b66e1fa72892cf4b49a9f scsi: lpfc: use proper format string for dma_addr_t
858e51e8cbe11a8c59b24aaf4cb40f7f4e7a2feb scsi: lpfc: remove redundant null check on eqe
df2f7729f23fdab923c913302051997561e1ef07 scsi: lpfc: Cocci spatch "pool_zalloc-simple"
401bb4169da655f3e5d28d0b208182e1ab60bf2a scsi: lpfc: fix pci hot plug crash in list_add call
1234a6d54fed8a00091968c4eb2fb52e1cbb8e2e scsi: lpfc: Fix crash receiving ELS while detaching driver
2b75d0f93451bc6e11cf9af06e1bf770222c271d scsi: lpfc: Fix lpfc nvme host rejecting IO with Not Ready message
2299e4323d2bf6e0728fdc6b9e8e9704978d2dd7 scsi: lpfc: Fix warning messages when NVME_TARGET_FC not defined
c8a4ce0bf3aad1a73d5122a3781a0be83bc0d0a4 scsi: lpfc: Make ktime sampling more accurate
f485c18db27734b37003bf2fafd364234e763633 scsi: lpfc: Move CQ processing to a soft IRQ
8e036a9497c5d565baafda4c648f2f372999a547 scsi: lpfc: Fix FCP hba_wqidx assignment
e3246a123d3b2e90ee2e071e49c2dce191acbab4 scsi: lpfc: Reduce log spew on controller reconnects
c578f6f4b9e8ac50cdde0f075424169f4b5e548f scsi: lpfc: Set missing abort context
cf4c8c861074af050b51f00cac44b24195b2d0d3 scsi: lpfc: Revise NVME module parameter descriptions for better clarity
e7981a2c725f8e237f749fa1358997707d57e32c scsi: lpfc: Fix oops if nvmet_fc_register_targetport fails
b7672ae681f8debe125ecc2ec59ba31d886acf5d scsi: lpfc: Fix crash in lpfc_nvme_fcp_io_submit during LIP
952c303b329c8d8307e90d2d51b74d8df9f82306 scsi: lpfc: Ensure io aborts interlocked with the target.
1abcb3718b082d359647ab67197f3ad3b419f274 scsi: lpfc: Fix oops of nvme host during driver unload.
29bfd55a9c8b8e70c3ecbc5a378cb6c2fc98dc37 scsi: lpfc: correct nvme sg segment count check
f6cab3452b8297cef628f2e9ecb4d0bd2b6b76dc scsi: lpfc: change version to 11.4.0.4
a9e170e28636fd577249f39029d59e4e960a42b8 scsi: qla2xxx: Fix uninitialized work element
905e46acd3272d04566fec49afbd7ad9e2ed9ae3 ALSA: declare snd_kcontrol_new structures as const
111b0cdb97d44cfe5dec1338a78ba8aff65c32e2 ALSA: seq: Allow the modular sequencer registration
88c54cdf61f508ebcf8da2d819f5dfc03e954d1d ALSA: core: Fix unexpected error at replacing user TLV
859b2e374a86482004d1b8b94c1666269e1d7fd6 ALSA: compress: fix documentation errors
e83280f96f108ee7af8c5669080cf664b0c2b8fb ALSA: doc: Fix enum snd_jack_types comments
08a7e621ff81dec64ddf1eab16353c0c217fdd89 scripts/spelling.txt: add "swith" pattern and fix typo instances
03440c4e5e2f167764997a7e0f2dbb279d8078e6 scripts/spelling.txt: add "an union" pattern and fix typo instances
b8a14f3379a637f61deed4ce3e5180f1f34d40d1 scripts/spelling.txt: add "overwriten" pattern and fix typo instances
8272115578ce02566b4c6bbe45f09d0d55f4a1c6 ALSA: synth: Select snd-emux-synth explicitly
44319ab7e0ed13e550bc1714e32f037550c0d858 platform/x86: dell-laptop: import dell_micmute_led_set() from drivers/leds/dell-led.c
fcc88d91cd36d1343a0ccc09444b21f6b0dad2d8 ALSA: hda - Bind with i915 component before codec binding
43f6c8d97bbdc05858b3d64e4c683821ce46c2db ALSA: hda - Minor code refactoring for Intel HDMI codec parsers
dba9b7b6ca1af60fd21137c18795a81a5652c5ae ALSA: hda - Fix doubly initialization of i915 component
fc18282cdcba984ab89c74d7e844c10114ae0795 ALSA: hda - Fix unbalance of i915 module refcount
fa5923cea8da3b5d4eb943651922b327b1df673c ALSA: hda - use dell_micmute_led_set() instead of dell_app_wmi_led_set()
5dba8804e8c40f03c7bcf4f043089edb232a9084 ALSA: hda - rename dell_led_set_func to dell_micmute_led_set_func
62a939477173fabfe9f52114fab878a00b87f9a3 ALSA: hda - Implement mic-mute LED mode enum
5b5e0928f742cfa853b2411400a1b19fa379d758 lib/vsprintf.c: remove %Z support
eef57324d926f0d8c7a40069e7d26e0cb0651b47 drm/i915: setup bridge for HDMI LPE audio driver
46d196ec460b9c45ca225f815c0b05f9de67290d drm/i915: Add support for audio driver notifications
b5f2be9ae5bf88f5751cc9f5813ed28e7f87402d drm/i915: add DP support in LPE audio mode
d5d8c3a19e43ca588555d88e1d43a00aeacd0e56 drm/i915: add DisplayPort amp unmute for LPE audio mode
f95e29b92190607c66dc5c96b7e0de9c332062c2 drm/i915: Pass pipe to LPE audio notification
b1c01f4df20a6376fe6245644225ff9fe97c5f95 drm/i915: Pass platform device to LPE audio notifier
31581b60d4c936fa4c8901c175bcbc5c8839029e drivers: gpu: drm: i915L intel_lpe_audio: Fix kerneldoc comments
48ae80741da4b8a26b6df0f765713912bc7cc480 drm/i915: Fix use after free in lpe_audio_platdev_destroy()
bf8b24f8169096050795b552a778faaac349c73c ALSA: x86: Drop the global platform device reference
dae15a9d960e513d5b60c00c306cddd87465f1c4 ALSA: x86: Move dma_mask debug print into intel_hdmi_lpe_audio.c
5647aec26640ffdf099d51b3403eaeac10d74147 ALSA: x86: Embed snd_intelhad into snd_card
36ec0d99bbd7bb392bf64059cbda1818ee2be5a2 ALSA: x86: Call snd_card_register() at the end
eeb756c5bf7566fd79312798a32f59e594688b79 ALSA: x86: Drop unused hdmi_audio_query()
da8648097497505d05d8cff6892351f99c029791 ALSA: x86: Flatten two abstraction layers
372d855f87b535005e392094afff9927bc000cf9 ALSA: x86: Fold intel_hdmi_audio_if.c into main file
c75b0476245ad01306e4ea510bb3f7591767079f ALSA: x86: Replace pr_xxx() with dev_xxx()
e29c0f967261b0f6a95e05a224341be8f59df2d5 ALSA: x86: Fix for CONFIG_PM=n
df76df12f178642cac616b86a762d2ee749fe402 ALSA: x86: Remove indirect call of snd_pcm_period_elapsed()
e9d65abfa63fad3da372a3852dcade88b5506f4c ALSA: x86: Drop unused fields from snd_intelhad struct
f6a82a0c01e51dd494b6eb68861473368355e58b ALSA: x86: Drop superfluous PCM private_free
99b2ab9d3aa08824dfefd7d9ad9f2b4c19555d05 ALSA: x86: Fix sleep-in-atomic via i915 notification
caa2a61a702a2a391b2fb695fc245ca5b8a4ffd8 ALSA: x86: Remove superfluous check at resume
79f439ea4007b94beeb8ba1e00e71f9d128b0f90 ALSA: x86: Drop had_get_hwstate()
2e52f5e518fb79aca459fcd25c3b8f185aa4bcf7 ALSA: x86: Tidy up codes
4151ee845ad8230d18ac4a0e0bf1037180c6d2d9 ALSA: x86: Remove _v[12] suffices
bcce775ca8d66a5222ac2d28e5388b5a6c2d9ad6 ALSA: x86: Remove superfluous irqsave flags
8f8d1d7fe009c320d80ed1c7b0c1d3d48b538965 ALSA: x86: Fix racy access to chmap
d0e9b1a23ca3dbe24e88c6671218b9031e37db96 ALSA: x86: Drop flag_underrun field
0e9c67d7c88ce7054288e3b61deb09bfa59f8920 ALSA: x86: Drop superfluous state field
fa5dfe6a01481a8fa00469be42ea32beb468a501 ALSA: x86: Drop redundant had_stream_pvt
7d9e79869ba2a8a552f4c2cf1df44cf9a0822f02 ALSA: x86: Drop unused fields from pcm_stream_info
313d9f28c1d5e0254ca16f2df0f1b737e30c0993 ALSA: x86: Properly manage PCM substream lifetype
182cdf23dbf6672954ac646871bf5902050268c7 ALSA: x86: Implement runtime PM
f69bd104b5cded0db547636fddd9512d7e6cfbf3 ALSA: x86: Move stream status into pcm_stream_info
df0435db1db9e385acdc0a354896d2c0e878dbd5 ALSA: x86: Use the standard ELD bytes definitions
7ceba75f21e4ecb520b110ffada72cc0c9f5c072 ALSA: x86: Reduce redundant register field names
03c3437755881a9f6f1b5f8c05e62edf7898a87f ALSA: x86: Clean up unused defines and inclusions
4aedb9465f717a8393bb5f40581eb7942af12506 ALSA: x86: Create ELD control element
36ed34662f1944ebf553b30fcba1abab1703d125 ALSA: x86: Set CA bits for DisplayPort too
44684f61b23c68786834dd2a99d4a68d40a13308 ALSA: x86: Simplify comments
73997b050c995f34f3617d344f1e767d15b2477d ALSA: x86: Yet more tidy-up and clean-ups
91b0cb0cc07bcb5114df2897531f4ea41c148c8e ALSA: x86: Rename drv_status to connected
412bbe7d5b8cdb103af82c3616149138c50d1efa ALSA: x86: Explicit specify 32bit DMA
83af57dd515cf06883f6e954dd0efa9b15b514a6 ALSA: x86: Don't check connection in lowlevel accessors
f4566aa112b86649b74f3d64c21ec2c8a84d5c1d ALSA: x86: Minor cleanup of reset buffer procedure
b556290f9a8386ff6afeec12cae29fbab77321a3 ALSA: x86: Unify local function prefix
e1b239f371c0c745542cb8108d085ec728e8a69c ALSA: x86: Refactor PCM process engine
075a1d46bed386138eb51f92a6a3130c82fdefec ALSA: x86: Rename had_enable_audio_int() to had_ack_irqs()
873ab035752e62a90eaeb1daf88a44dad1da6ea0 ALSA: x86: Fix driver name string overflow
1df989242d3d790aec79e72d12874bf763c958e1 ALSA: x86: mark hdmi suspend/resume functions as __maybe_unused
77531beeb97d079fb422d2b78a0d75c564384310 ALSA: x86: Rearrange defines
40ce4b5d70b0c7e70c3e831e56d2586b57b54915 ALSA: x86: Cache AUD_CONFIG register value
8d48c0163d1ab0f56a18ebe9898a34ebcfdfaa1a ALSA: x86: Allow single period PCM operation
e8de9859e4e834a74da824e13070aa992c32de10 ALSA: x86: Allow no-period-wakeup setup
85bd8748ca23a25f6dc56154d9a61d87ae07a807 ALSA: x86: Support S32 format
3fe2cf7eb21ada0a9683b26c1ae309e7f5e90131 ALSA: x86: Support S16 format
e2acecf2c88370f9d7252e7a05cd7b6d43aed720 ALSA: x86: Handle reset at prepare callback
df42cb499eb1869bfb535f6c6b5ea1406496baf4 ALSA: x86: Drop unused stream.running field
b9bacf275ca2eeb8e8fa85c1705d07e2475f1aaa ALSA: x86: Implement jack control
5def90196b52d0bbec4f662448e25f2a4c06ddbc ALSA: x86: Use snd_pcm_stop_xrun() for connection / disconnection paths
18353192b8f696a27420e2e8f39804c2075f26fb ALSA: x86: Fix memory leak in had_build_channel_allocation_map()
a72ccfbad7fd6f604d8edd068119edb57e7984e1 ALSA: x86: Don't return an error from chmap ctl at disconnected
28ed125b9a07b9ad09ea680628a920427d079af6 ALSA: x86: Avoid register accesses during disconnection
be9a2e933e301bec856d526516801e14247519c5 ALSA: x86: Stop the stream when buffer is processed after disconnection
2d42c033aec9f8e7e175c551ae62ea3f4dc200b9 ALSA: x86: Minor code rearrangement
b1ef30e5ed17a417fc78eaff12da28f9a1c2efcc ALSA: x86: Don't bail out from PCM ops when disconnected
3002b9fb7cbc26e8d29927c9e20e235f38319b24 ALSA: x86: Use runtime PM autosuspend
0b6b524f3915f88eb4562e8d927528224a8eab41 ALSA: x86: Don't enable runtime PM as default
183c00350ccda86781f6695840e6c5f5b22efbd1 drm/i915: Fix runtime PM for LPE audio
8d5c30308d7c5a17db96fa5452c0232f633377c2 ALSA: x86: Clear the pdata.notify_lpe_audio pointer before teardown
bb4ac5a0ecaeeef0229c69f6c935be2ee70abfec ALSA: x86: Prepare LPE audio ctls for multiple PCMs
b4eb0d522fcba0ee819f955fd3279ff4682b8b33 ALSA: x86: Split snd_intelhad into card and PCM specific structures
ebf5f921478b9b55ed4e634b994571dd23a8fca3 drm/i915: Stop pretending to mask/unmask LPE audio interrupts
d2205595800dbd53eba06318e399a1cba1c0fc67 drm/i915: Remove the unused pending_notify from LPE platform data
9c9191f3de5926830346750ce4417d261027ab80 drm/i915: Avoid MST pipe handling for LPE audio
00fd9619120db1d6a19be2f9e3df6f76234b311b of: Fix of_graph_parse_endpoint stub for !CONFIG_OF builds
ee8905963ed0bc9dfc0952dc35e16e233c10e212 of: Add for_each_endpoint_of_node helper macro
bfe446e37c4efd8ade454911e8f80414bcbfc10d of: Add of_graph_get_port_by_id function
8ccd0d0ca04147e91890c373677f1e741dda2631 of: add helper for getting endpoint node of specific identifiers
ce0bdb849ad46e4b4e4cae6913b447ae9938bdcf of: fix a build error to of_graph_get_endpoint_by_regs function
b85ad494098bf881c3713218fbd74193e5d5c488 of: introduce of_graph_get_remote_node
4c9c3d595f1bad021cc126d20879df4016801736 of_graph: add of_graph_get_remote_endpoint()
0ef472a973ebbfc20f2f12769e77a8cfd3612778 of_graph: add of_graph_get_port_parent()
ac1e6958d3be29a28889b09e4eec1798eccc1606 of_graph: add of_graph_get_endpoint_count()
613e97218ccbd7f33895cad4525d861810a9d5d5 device property: Add function to search for named child of device
f028d5242d7ecb0a1bfc80e7bd292201c8612641 ACPI / GPIO: Driver GPIO mappings for ACPI GPIOs
85c73d50e57eb8ad43955fe38714bc5fba1acd92 gpio: acpi: Add managed variant of acpi_dev_add_driver_gpios()
61a7649620d54a037c612f9a713abe5178cddc65 dma: move dw_dmac driver to an own directory
9cade1a46c77dfc96d57a3ea6354e95b2a7fcf61 dma: dw: split driver to library part and platform code
78f3c9d2e0e8c695c7379ed1ed53ea8eaf1da8e6 dma: dw: improve comparison with ~0
3783cef876e0f24e93a11f1a76cc0b3fe7ea8d94 dma: dw: allow shared interrupts
000871ce0336572f5b126a4d7f1ec13fc9adfda2 dma: dw: allocate memory in two stages in probe
97977f7576a89cb9436c000ae703c0d515e748ac dmaengine: dw: went back to plain {request,free}_irq() calls
d2f78e95e42a9130002c76f1a1f76e657a4b4004 dmaengine: dw: enable clock before access
8be4f523b48087765defd18483c66b268b3286e5 dmaengine: dw: fix regression in dw_probe() function
1222934e54b63752b4b1ad305d6a7f632a3ae46d dmaengine: dw: check return code of dma_async_device_register()
8950052029874a6738552debb45077c596e90e6b dmaengine: dw: apply both HS interfaces and remove slave_id usage
4d130de20c3f39fc1a1aecd3969b50d49ff2e358 dmaengine: dw: introduce generic filter function
a15636e83eb0dedefcb1221be729023e4c281748 dmaengine: dw: move clock operations to platform.c
7a83c045435e896db6c689145d752d28b8b99b7b dmaengine: dw: introduce dw_dma_on() helper
fed42c198b45ece0b37eb25d37cbc4a9959c6522 dma: dw: add PCI part of the driver
24066813d55bb4ea058fd4a8fbc3538dfe032782 dma: dw: add a PCI ID for Intel Haswell SoC
4501fe61b286e35be5b372a4f1ffcf5881ceeaed dma: dw: Add suspend and resume handling for PCI mode DW_DMAC.
c31b6ae1b4a75680765ac66d80e2e107e8bf05a0 dmaengine: dw: convert to use SET_LATE_SYSTEM_SLEEP_PM_OPS
b279c4922e9242b4b1a04da7fa5622f2323c85de dmaengine: dw: add PCI IDs for Braswell DMAs
2540f74b187e3ec0fe106b7427c4a84c955dc140 dmaengine: dw: always export dw_dma_{en,dis}able
6dbd80a919db24f5a1c66460838bb10ebe188d21 dmaengine: dw: use dw_dmac autoconfiguration in PCI driver
3efaf2a9a053bce452cec8d4c14f7ad6912215c9 dmaengine: dw: pci: add ID for WildcatPoint PCH
3d598f47e804a77208c6bb0a454123018e2f2281 dmaengine: dw: move dw_dmac.h to where it belongs to
46e8c83c83c06b90ebc000df481c2fdcee79a141 dmaengine: dw: move private definitions to regs.h
3d588f83e4d6a5230d9094b97d38621cbaa9a972 dmaengine: dw: split dma-dw.h to platform and private parts
d8ded50f8b26a224df48f9f93e49440c6a39b77f dmaengine: dw: define DW_DMA_MAX_NR_MASTERS
df5c7386f62d2db95ca48005087195e9a15e2b1f dmaengine: dw: some Intel devices has no memcpy support
2a52f6e49e5e400ed98a79503193d81207009647 dmaengine: dw: export probe()/remove() and Co to users
8abab35f9a58e15b1f90a1371da69a207e40fc3b ASoC: Fixup some small kernel-doc typos
ea09dd3b006b26002802b7b534bdb6531429c8ff ALSA: dice: fix semicolon.cocci warnings
c0a480d1acf7dc184f9f3e7cf724483b0d28dc2e device property: Fix usecount for of_graph_get_port_parent()
8a70b4544ef4f094cc2c52734e097cc358f56603 ASoC: dapm: Add new widget type for constructing DAPM graphs on DSPs.
23c7159a799f3364720b3d250f57bc8e26b17287 ASoC: codec: use enable pin to control dmic start and stop
fc3ba81a5adac413312019413c91b1e6a5d8d1fa ASoC: nau8825: change crosstalk-bypass property to bool type
6d817c0e9fd7536be76690bfdee88e8a81c16f7d ASoC: codecs: Add da7219 codec driver
4e929134eb8271abc9c52c371e056debfea6898b ASoC: da7219: Improve error handling for regulator supplies
b7ebd78d1d142e4e47c3547b08faf51218384583 ASoC: da7219: Use of_match_ptr() when assigning match table
ba856fbd602175d386ab5a4fc0fdd89b912546cb ASoC: da7219: Improve error checking of mclk enable/disable
c5cff89b5f64b4fc7f6fd9be44b1aa7e766a94e4 ASoC: da7219: Fix da7219->alc_en state when enabling ALC
a737447d080929c54c664adc9c62eadab9e86d3e ASoC: da7219: Use logical instead of bitwise OR for boolean expression
fdd50a8086422caa456b5f8abb631dda6c551744 ASoC: da7219: Fix Sidetone to work regardless of DAI capture
9069bf9bc839d97e07fe17c336eab095c1065cec ASoC: da7219: Disable regulators on probe() failure
9ff099790412cb46536efba02039b36d81300976 ASoC: da7219: Update REFERENCES reg default, in-line with HW
d8ef140dccc1645aa37a140ed7585458294210b8 ASoC: da7219: Remove internal LDO features of codec
0aed64c1766d354c819a13a57d8673adaf2266eb ASoC: da7219: Add support for 1.6V micbias level
501f72e9c5205b9d70d5d61e9b186ae7ba873f73 ASoC: da7219: Remove support for 32KHz PLL mode
abd7c894fc41a9a674354e10ed6c55413e1db077 ASoC: da7219: Add regmap patch to support old silicon
4acfa36be618eb8ac3aa39f473e7550710216435 ASoC: da7219: Correct BCLK inversion for DSP DAI format mode
63a450aa4d08ccf4f53e9fa59144e746e2288319 ASoC: da7219: Update PLL ranges and dividers to improve locking
fb137ba64a6415ddf231495f6d1a82de1cd69ed0 ASoC: da7219: Disallow unsupported 32KHz clock setting in set_dai_sysclk()
5181365f5312d67dcdc9e4bc22516c48a83c8754 ASoC: da7219: Add initial ACPI id for device
a01b89336f7a2f3ee1f98a89ba78c88f5547dc70 ASoC: da7219: Convert driver to use generic device/fwnode functions
40585391fc88d6d66dc479efccba973426c004ab ASoC: da7219: Make more efficient use of MCLK within driver
b0d9df4dc5f3a690c460bb1bb0799ed85255448e ASoC: codec duplicated callback function goes to component on da7219
96fc294cf6cb27f01a865959b9637d0aea3b57c2 ASoC: da7219: software reset codec at probe
6a0b87c6e7f664aff8957e0889f9f82e5ee27f65 ASoC: da7219: Support HP detect procedure when MCLK not present
a7f16ea90ecffde4d4915eb7c81b11428e636920 ASoC: da7219: Reset codec gracefully, if still active
bb0c35fcaf8f2ad3383dd43ca8abf5203cd06cc3 ASoC: da7219: Disable AAD if codec is not a wake-up source
a56a569818ea831ed2325dc5d1122dc0b8a229d0 ASoC: da7219: fix inappropriate condition statement
86834511c2acd23e214d5739e9ea58e31b975d1f ASoC: da7219: Improve pop/click performance for sensitive HPs
d64b5bf5b10ad95fd4a2684e1fc39eb7b00d9d0c ASoC: da7219: Connect output enable register to DAIOUT
2a0c2189d8170d52da64543cbf955f0908c15e70 ASoC: da7219: Fix HP detection procedure for all MCLK frequencies
0e826e86726423df5c3841d0a34a2edcd64a93e2 ASoC: add RT5677 CODEC driver
c8cfbec882b408cd933d24882302cacd39985e18 ASoC: rt5677: Convert to use module_i2c_driver
30f14b439f0cc0c7776722c0b1c2836769fe0ce7 ASoC: rt5677: Convert to use rl6231_get_clk_info
9a53581efabec8d9c69933c360e2ab036a1da9bc ASoC: rt5677: Convert to use rl6231_calc_dmic_clk
d0bdcb9181873bc085ca0b7fabefb92eb2d9e708 ASoC: rt5677: Remove unneeded goto in rt5677_i2c_probe
3d0c03d9c6a0cfd7e3a12c29ca5eefed02da16ff ASoC: rt5677: Replace the string "micbias1" to "MICBIAS1"
1b7fd76ad93e7f121ae76d9b3843c873bff50587 ASoC: rt5677: Replace the string "source" to "Source"
80220f29d6b7f4c30aaccbe81058bdc4a83a727a ASoC: rt5677: Replace the string "Gain" to "Volume"
f58c3b915287af02d192cc8fb64ae8689107ec5f ASoC: rt5677: Add a PMD case to MICBIAS1 event
099d334e3d5c0b26480dffc44fe6272c90898237 ASoC: rt5677: Convert to use rl6231_pll_calc
f18803a3758a55feb376490a76c351ab40c3cf03 ASoC: rt5677: Modify the voltage level in the BIAS OFF stage
22e51345a9f272e20cea3d679dca8a0e19a178e1 ASoC: rt5677: correct mismatch widget name
cc6b0ae96239ac77fac569e871704a4f1bf3c595 ASoC: rt5677: Remove the redundant definition in head file
2d15d974618db4ed3adafe9b9fe092db0f5076a0 ASoC: rt5677: Add DMIC2 clock selection
44caf7648064502fd1d37d18443ae92c064ebadd ASoC: rt5677: Add the GPIO function
5d5e63af998026f0340d1081fb15ad3c26d80c81 ASoC: Remove return value checking for gpiochip_remove()
48561afef401876b4b0e35a303d89884c10fe468 ASoC: rt5677: Add the TDM function
90bdbb46f41c9fa670d7b0709e0c8a92ad82bdfe ASoC: rt5677: Add sidetone function
f9f6a592cf4f35e7b614f1fb2e8d73969ee39a6d ASoC: rt5677: Add a configuration option for LDO2_POW pin
6f67c380056ceaf5844f18d3a5d769d233247849 ASoC: rt5677: Add dts properties for input/output differential configuration
40eb90a18e93fbd4fd0e6892b31241356c3c8e43 ASoC: rt5677: Add option to configure gpio as floating/pullup/pulldown
af48f1d08a5474184da9aaf8b77f4a2848b1875e ASoC: rt5677: Support DSP function for VAD application
8a4bd60af4cbdfbdaab6dec6ab86471733197a4f ASoC: rt5677: Print more information if setting DAI clock failed
45b6e1d300b034678c42369aad3b27d37854d1fb ASoC: rt5677: fix build when kernel compiled without GPIOLIB support
5e3363ad1b7b2e1f197a3f56b01e21cb155ad454 ASoC: rt5677: add GPIO IRQ support
2d27deb40db74c751c991e96ca91d675f966a0c5 ASoC: rt5677: rt5677_irq_init() can be static
e6f6ebc1f8f60d6d44f6be22c6386c238d6a9d97 ASoC: rt5677: Add TDM channel mapping function
d65fd3a42e00d322448f2518db6a3f0eb12ce1bd ASoC: rt5677: Minor coding style and typo fix
19ba484d7b15c8650b30377aad6e65b34d3cf3d5 ASoC: rt5677: Use specific r/w function for DSP mode
91159ecaf4401f7b4b0d48f59c877a0779209af5 ASoC: rt5677: Add TDM channel mux in DAC side of IF1 and IF2
86ae04b174152147052adec7b95dba0c9cd7dff0 ASoC: rt5677: Modify the default value of the MX-8E[4] for ASRC function
2dfe2b08d280c15cc7266de40412c2a911643148 ASoC: rt5677: Align the reg_default table with tab character
35d40d10e95f52569570dc4e26da19f072aa256d ASoC: rt5677: Follow the gpio naming rule to rename the irq function
683996cb2255373c2055e7b69584ac153eb49f42 ASoC: rt5677: Set the slow charge of the vref in the end of the power sequences
6fe17da00ba7046db2d3a952a930e127dcd7f06e ASoC: rt5677: Fix the issue that the regmap_range "rt5677_ranges" cannot be accessed
40e3262e425a04743f2a579a379f2f189f084580 ASoC: rt5677: make volume TLV closer to reality
6087fcab7bd5122e7264504854ec77d5be0286ff ASoC: rt5677: fixed rt5677_dsp_vad_put rt5677_dsp_vad_get panic
6800b5ba154df5666f123b7d78161e1a9e6ad8ef ASoC: rt5677: Revise the filter powers
5a8c7c2628f8d12e9bca6ab24f6718fc57728991 ASoC: rt5677: Add the ASRC support
38d595e2e09ede17712b2d4909339e691fff3f85 ASoC: rt5677: Adjust the routing of "PLL1"
277880a356c10adcb43604f6ab9ec9b2d64db8b2 ASoC: rt5677: Add the MICBIAS VDD setting in the platform data
bdfbf2550d85b0e645a0bb9b3abd3b0a5448eacf ASoC: rt5677: Modify the behavior that updates the PLL parameter.
e4b7e6a89955a27ccd608fce895b1b645c08deec ASoC: rt5677: Use the regmap functions instead of the snd_soc functions
9913b9f549330e9b72945ec94cb9c7fe57d78cce ASoC: rt5677: Add the slot_width "25" support in the TDM mode
46f20872bc22c7513027dea09ac8d87f88e7e730 ASoC: rt5677: Replace w->codec snd_soc_dapm_to_codec(w->dapm)
4c121129c9dcb43b33d1cd568c8f2636e72597b0 ASoC: rt5677: fix SPI dependency
70068776c49b37fe0c8f9115cec068d07375c6fb ASoC: rt5677: Correct the routing paths of that after IF1/2 DACx Mux
ab1f70952f61504f60805f13660c8740adcbe14f ASoC: rt5677: Add the chip type to distinguish the setting of the clock source
cbca4076d156c93cedadabb0e463ba0db16bb166 ASoC: rt5677: Keep the LDO2 powered while used in the suspend mode
c36aa0a1929a1f0f0b8c374276e49cc663e8f957 ASoC: rt5677: add API to select ASRC clock source
74d6ea52aeef0236242221c6eff6d892565c5a92 ASoC: rt5677: add register patch for PLL
bd1204cb51f15d202f95222e873a94ed5d07b784 ASoC: Route all bias level updates through the core
60a8d62b8497c23eb3d48149af7e55dac2dd83a2 ASoC: rt5677: fixed wrong DMIC ref clock
16ab6e18c60927e5a9e756c384a1ed7bd9f40871 ASoC: rt5677: add i2s asrc clk src selection
5220f7fb4954d8ca612ea77fb9bee6801c43d031 ASoC: rt5677: Add DMIC ASRC detect function
b3b10e99b73b5e079fdb9bdaa1dad43b53e330cd ASoC: rt5677: Add reset-gpio dts option
6b43c2eb9a7907c3e7ab9210ff6c62322d81e18c ASoC: rt5677: Replace direct snd_soc_codec dapm field access
aa0bcc5c44437457307c8c22e57a67bb57424041 ASoC: rt5677: Prefix hexadecimal ID register value with 0x in error print
80fff6bf65dcae62255bdb592603dfc247c8cacf ASoC: rt5677: Include gpio driver header
efd901ee4bc8312e3bbf5561fdab8e3765e26334 ASoC: rt5677: Switch to use descriptor-based gpiod API
9bfde72157036f4eaa44f3e8982217ce1b3e14b6 ASoC: rt5677: Switch to use unified device property API
f285f1610341af4181791938777e0affb5531278 ASoC: rt5677: Remove NULL test for desc before gpiod_set_value_cansleep call
f8163c8673efaabb361281a2759b3167d181ecf6 ASoC: rt5677: Return error if devm_gpiod_get_optional return ERR_PTR
00a6d6e50ff34aa2351746422e4a1c85c7765b15 ASoC: Add function "rl6231_get_pre_div" to correct the dmic clock calculation
53f28609b0091c1e450105aaef924320aa748082 ASoC: rt5677: Replace TLV_DB_RANGE_HEAD with DECLARE_TLV_DB_RANGE
e29bee098ea1cc9b8537628f3c1cdf60ead83514 ASoC: rt5677: fix rt5677 spi driver build
7d4d443eb4386d6dbd420fa96303dd8fbc1eefc8 ASoC: rt5677: Allow arbitrary block read/write via SPI
c22d7666c5c4473cfffe8c40fcf86bd6e16317df ASoC: rt5677: Avoid the pop sound that comes from the filter power
cdab0d4ecc1a890aece7102c2074bf73175b9935 ASoC: rt5677: use 'active low' logic for reset pin
1aa844cd56c7a2b94824f02495ff7ae5d52a7e91 ASoC: rt5677: Reconfigure PLL1 after resume
d0d1eedd5ad345f16234311b375bf94d6c90e14b ASoC: rt5677: set PLL_CTRL2 non-volatile
2dfadff69e8b1da8f8661e9edb131b208cc389b7 ASoC: rt5677: Avoid duplicate the same test in each switch case
14900363454b8244b41f77f42013a22db20bb2e2 ASoC: rt5677: use gpiochip data pointer
1ec95a5748de5fd448f0b54a3b3c6fcd3b8374c0 ASoC: codec duplicated callback function goes to component on rt5677
89128534f925711eea1653c264683b7d14a46530 ASoC: rt5677: Add ACPI support
7b87463edf3e2c16d72eeea3d1cf3c12bb5487c6 ASoC: rt5677: Add OF device ID table
a36afb0ab6488eaa2c9672d6c20a966a7c08ef65 ASoC: rt5677: Introduce proper table for ACPI enumeration
55e59aa0525a461abcbc226ace7a7eb9d9a07a4a ASoC: rt5677: Move platform code to board file
ddc9e69b9dc23d4c0d8ed829575327746ea77a04 ASoC: rt5677: Hide platform data in the module sources
d4e753d3aa2c278cb1f7b4a61987c4037316e0fd ASoC: rt5677: Refactor code to avoid comparison unsigned >= 0
c0d1cb8366bab9963822c27b0d40cb8b32928cdc ASoC: rt5677: Remove never used variables
e5b2791d2a57e9da369bd75ae2a209bcce2ad4d3 ASoC: rt5677: Revise the wrong name in the header file
3821a065f5672c430a088ae68b4da2a2d2b34106 spi: Drop owner assignment from spi_drivers
e7610743d4f4d54c2de32ae8f28fbd50922463d3 ASoC: da7213: Use params_width() rather than memory format
c99f8b216c39b1fbeb8b6830b95e461db551afa9 ASoC: da7213: Use SOC_ENUM_SINGLE_DECL()
5d6be5aa6becc750c5c2aa0ef8f7209ce19aa328 ASoC: codec: Simplify ASoC probe code.
ea53bf77d147e7e560ac007fdaa30fb98c37c712 ASoC: Add snd_soc_kcontrol_codec() helper function
f4bf8d770b58862c2af9d17adc2fee05bef8f2c0 ASoC: Move bias level update to the core
9c414c62461d09e6dd64887a3db793b5163d82c0 ASoC: da7213: Replace direct snd_soc_codec dapm field access
32e933be3f221723ace230fe1293eb3b3b3466ff ASoC: da7213: Replace TLV_DB_RANGE_HEAD with DECLARE_TLV_DB_RANGE
e90996a3ea224fbeb459b8052ecd366d7990e1f3 ASoC: da7213: Add DT support to codec driver
6e7c444318699496e6e6f30c875cf67534aeccc6 ASoC: da7213: Add support to handle mclk data provided to driver
a0d5caeaebfd00853efa0080afc850e10be7b39a ASoC: da7213: Add DAI DAPM event to control DAI clocks
d575b0b0f01a805508c5cf48b540f004e9b5de07 ASoC: da7213: Add checking of SRM lock status before enabling DAI
7e28fd469624fc41ec326a31abbc63a7afdd10f5 ASoC: da7213: Default PC counter to free-running when DAI disabled
1e62c52ddc2d23a02ac2308cc1bb6ff18f0cf3cd ASoC: da7213: Update PLL ranges to improve locking at frequency boundary
abc189eadf6c12e60f95030e9c84083175526eaf ASoC: da7213: Allow PLL disable/bypass when using 32KHz sysclk
5d764912a0ee6db83e962c1501b5b9e58ba14e15 ASoC: da7213: Default to 64 BCLKs per WCLK to support all formats
f612680fb5cd92a213240d82651a1f56bc38129e ASoC: da7213: Improve driver efficiency with regards to MCLK usage
4c75225aa05753217a81ed10f136b86fb94c5922 ASoC: da7213: Refactor sysclk(), pll() functions to improve handling
d936d527d241b606b0280034b3972b7825d3704c ASoC: da7213: Improve 32KHz mode PLL locking
92d2a233d878c4ddebad805ae4201e8ec335b3af ASoC: codec duplicated callback function goes to component on da7213
8f42c23a9861df7796e019d32fd5c4dea01c8e51 ASoC: da7213: add ACPI support
14f814fbedd749992476bb365b454b2170b3b225 ASoC: da7213: Fix incorrect usage of bitwise '&' operator for SRM check
0e54153b6685712c1e0eaa31c0c199fdce121b28 ASoC: da7213: Update driver to use device_property* FW functions
b8b88b70875af786d9f346d766fa2b0630e2cf41 ASoC: add es8316 codec driver
df7c52168ee15b3951b50078c0c3960598eb0109 ASoC: add rt5663 codec driver
56efaed524dc2c3571f66d296cb1efbd59cb2996 ASoC: rt5663: refine error handling
66d7c2629aa4f2c861b7cca9ff15b6bc38e9c9a8 ASoC: rt5663: fix sparse warnings
c5f1edd405eb874cc2c81e8d62c6b3a73c502529 ASoC: rt5663: fix platform_no_drv_owner.cocci warnings
c975e39ccadf6dc047356c60773a043a2293b8cd ASoC: rt5663: fix a debug statement
7e7e76bd5693dc940dfea7df9e7b58655f0eae00 ASoC: Add jd function for rt5663.
73444723b2b5b53ca2759daeecda90c9c7fa3629 ASoC: rt5663: rename rt5668 as rt5663 v2
af2728e4deb9f08721374f3adc06b1d3e7d133ec ASoC: rt5663: Fix the IRQ issue
17616ce62c84c94e9519574e9d2df6f20e80a285 ASoC: rt5663: Check the JD status in the resume function
9f8f5b5f6c515e0c9d9bc14996fa8b9414c5ce1a ASoC: rt5663: Update the HW default values based on the shipping version
7d8e00c78924d50eb71d3cf991096021eadce641 ASoC: rt5663: Update the calibration funciton
8f24412784bd0f544307bb184e3f264064f68ff0 ASoC: rt5663: Optimize the Jack Type detection
1325734c97c533c2042794f2bd873486b4905cdb ASoC: rt5663: Modify the power sequence for reducing the pop sound
09b8852c759917e3ea10062b374692a5313cbfd8 ASoC: rt5663: add in missing loop counter to avoid infinite loop
450f0f6a8fb499a6ef3d10ab5c29a7c4650a9958 ASoC: rt5663: Add the manual offset field to compensate the DC offset
6ccf3a6d031c47d6319cb56ee35dd4b546905e91 ASoC: rt5663: constify snd_soc_dai_ops structure
d26ed933581d924937aa92251afe1751cf86661c ASoC: rt5663: Modify the default value for ASRC function
1d5c5b6582cf829fc4c0c8eef6b9f9f0dc29c7b2 ASoC: rt5663: Correct the mixer switch setting and remove redundant routing path
1d89147cc3dfef185e701baad437fa91c0977384 ASoC: rt5663: constify acpi_device_id.
c1bbaff6d7dd55314ee453df8dfe00befd7ce1b2 ASoC: rt5663: Add the delay time to correct the calibration
278982b50b28d654ff8cca0efb1ff6e835c6cc4c ASoC: rt5663: Seprate the DC offset between headphone and headset
c5755fbc0702ddb38d2b476a49327b59d4d75a00 ASoC: rt5663: Fine tune for the headphone output pop sound
9c324afe3b90e406b15938acafaa2636a7e85ff3 ASoC: rt5663: Add delay for jack plug in
7c0c2000716e64151b3c0c62026c18f31537ebe9 ASoC: Add support for Maxim Integrated MAX98927 Amplifier
a7e1149b64091ac87dfb18b177abb63ba4cbbd3d ASoC: remove cache_bypass from snd_soc_codec
9c1743ebe0da614517a1b94f171924d5fd758df4 ASoC: max98927: Updated volatile register list
01c6f1b5c832b75af5d34555201050db896285a8 ASoC: max98927: Added missing \\n to end of dev_err messages
848844b87a26265019215dbb7fb588a5fac0a110 ASoC: max98927: Modified chip default register values
f81991ddd001981bbe4ea0d25f88a4f95fb018be ASoC: max98927: Added PM suspend and resume function
607f7777bf0c0224bfadd31a37acc8d1fd25324d ASoC: max98927: Modified DAPM widget and map to enable/disable VI sense path
dea110501745734baf7a90dc1e1b50481ade6191 ASoC: max98927: Changed device property read function
4a6180ea7399b945cd380dc63e2e8118f9b432d3 ASoC: rt5514: add rt5514 codec driver
6eebf35b0e4a02248f7dba5d1719c6896afe41ba ASoC: rt5514: add rt5514 SPI driver
c9506bb84b62917ae88087545ccb756d35655397 ASoC: rt5514: Add the MCLK handling
a3470399bcfcd2ca57b6135f89f48e7e37a499fd ASoC: codec duplicated callback function goes to component on rt5514
a1338a7d4cd401bb71f4562d6896aa2b74eeb1fb ASoC: rt5514: make the volume TLV to match the units 0.01dB
a5461fd6c8f70b3d897f5f76612e890ad47a5b93 ASoC: rt5514: Add the DMIC initial delay to wait it ready.
d0c02e14e48be94dd312ff6edffab9f9e6acd480 ASoC: rt5514: Mark rt5514_i2c_driver as static
0a78b248c3324fbbba49f74e2c93e0f436583788 ASoC: rt5514: Avoid relying on uninitialized "val" value
7952b4baff402ddca1a263380bfd142f10290eb8 ASoC: rt5514: Unconfuse the rt5514 at probe / resume time
03ba791df98d15d07ea74075122af71e35c7611c ASoC: rt5514: fix gcc-7 warning
d60bc8d6c6d7e5f9765852b0be57de639ba65808 ASoC: rt5514: Add more width and channels support in the TDM mode
6d3edf866ffa7a9348cfc30d9f58270e4f8d068e ASoC: rt5514: Add ACPI match ID
ea4daf81fc5a37766a606479f592cd9dfe6f1da8 ASoC: rt5514: Move the auto disable DSP function to set_bias_level()
9894dbafb6f864207f9e6aeaca2c8de949955651 ASoC: rt5514: constify snd_soc_dai_ops structure
e8be3a5ad335316ddf1b90e0386426093187bfc7 ASoC: rt5514: Support the TDM docking mode
1628ef89042fdb90aaea657942455e00e160174d ASoC: rt5514: Add the I2S ASRC support
8a43c2240c862bbf3fc612d0533b891bd75ec771 ASoC: rt5514: constify acpi_device_id.
c2bf252536577db77c719f62a54cad2e4be5c4d7 ASoC: rt5514: Use the IS_ENABLED to supports the module build
ade82fdbae6905e80f107596f2e0b4df84490d28 ASoC: rt5514: Eliminate the noise in the ASRC case
e5e8e6182a3b9514cde41d957684b59ee8f6cf21 ASoC: rt5514: make array rt5514_dai static
d18420b0a0b8f8f51f55fc654b2e0eb86d8b41d7 ASoC: rt5514: expose Hotword Model control
eb33869c720656c16e614ea40a175a014f60007b ASoC: rt5514: Guard Hotword Model bytes loading
b63d4d13ac7b8f947407a7eb44fdc40fadc8c5b8 ASoC: rt5514: Fix the issue that the variable dereferenced before checking
e9802c579399904bfef828e1a77b777b96ea33db ASoC: rt5514-spi: Convert to use devm_* API
6342ad66d117cfdaa3ad02043e9b3a753788a971 ASoC: rt5514: Remove superfluous linux/kthread.h inclusion
e98aa526b4c5eb322b1334b1d7f7051851ed037c ASoC: rt5514-spi: Remove unneeded linux/miscdevice.h include
173f4612690ac569d9f912a31aa69af15b84047c ASoC: rt5514: Support the DSP recording continuously after the hotwording triggered
818010dac09183e99ff02e35836544b2e1d659f3 ASoC: rt5514: Add the sanity checks of the buffer related address
b56bff43a965ffe03b4a994fd1a102059d272807 ASoC: rt5514: reset dma_offset at hw_params
64793047558781330a1d13b159a2bc9385bdf97f ASoC: Constify snd_soc_dai_ops variables
c59b24f87b997f6de6e2511b9ef702685042e089 ASoC: constify gpio_chip structures
6faadbbb7f9da70ce484f98f72223c20125a1009 dmi: Mark all struct dmi_system_id instances const
728c4a87f31d30669a103dac1851a15f4e2af03c ASoC: codecs: constify snd_soc_dai_ops structures
c418a84a8c8f98b1a0f30cd68d0cdf40d77aed01 ASoC: Constify reg_default tables
c8597af855f3e34aaebaff0e5c3dbd07611c87f1 ASoC: topology: Allow bespoke configuration post widget creation
6adcafae6ed20fe380addc8e7c628e529751ade3 ASoC: add rt298 codec driver
5efe58c44312a7f8a1f3ec77c2b88f6d22b74880 ASoC: rt298: remove meanless pr_info
0f7e17740612ca0f3b8baf91645075d07bb52b2c ASoC: rl6347a: Clean up unneeded inclusion of header files
a5fe58fd2836987387a6ee8854c529db7f5be650 ASoC: rt298: set register non-volatile by default
7ba6e4ef76c7e43101bd5e0f8987c11a8ed0d325 ASoC: rt298: correct index default value
3943b9efb381531b99bf9c545736f9e1e2715b9c ASoC: rt298: Make rt298_index_def const
f8f2dc4a7127725383c93b501fcc4e47871b0a9d ASoC: rt298: fix wrong setting of gpio2_en
4bbda49cc40f6c2e5cc3a5dd22cded1d217e074d ASoC: rt298: fix remove unnedded clk setting
4b2fe3822ae16436ed0aba379c500558f7846ce1 ASoC: rt298: enable IRQ for jack detection
0ce58cd6ce5e706c70c7b038ef5ddde0cc7d7385 ASoC: rt298: Don't enable IRQ in i2c_probe
3c9e014c442caefa14c71494ca4473121007f60f ASoC: rt298: reset AD dilter is there is no MCLK
9ff49ce475cfeaf486321a2db8132a9500740faa ASoC: rt298: fix capture doesn't work at some cases
bb7cb54b388d8d0fbb3af27f14b121ee9c92e867 ASoC: rt298: fix null deref on acpi driver data
b9c17f13ba484d8492278c67cd95b7207def776f ASoC: rt298: Add DMI match for Broxton-P reference platform
b5c998b472c25d72fedc1b686faf1fab6dfcbf4c ASoC: codec duplicated callback function goes to component on rt298
f515c3834a4adf8b33f0e7215d434410b1687164 ASoC: rt298: fix jack type detect error
e3d62cb8c70ff5ff946051484b1cdb38523d8b95 ASoC: rt298: disable IRQ when jack is NULL
06a99ddd2049e2697de32a9435c4d5c5b5c78360 ASoC: rt298: Add DMI match for Geminilake reference platform
a180ba45b1cf630b3bd5912ce235b2ee16606b8e ASoC: codecs: add const to snd_soc_codec_driver structures
ef456144da8ef507c8cf504284b6042e9201a05c soreuseport: define reuseport groups
e32ea7e747271a0abcd37e265005e97cc81d9df5 soreuseport: fast reuseport UDP socket selection
ed0dfffd7dcd3f517b1507929642c2aed4ef00fb udp: fix potential infinite loop in SO_REUSEPORT logic
b4ace4f1ae07691b4f6ea9f3e92efbec083df058 soreuseport: fix NULL ptr dereference SO_REUSEPORT after bind
a4298e4522d687a79af8f8fbb7eca68399ab2d81 net: add SOCK_RCU_FREE socket flag
ca065d0cf80fa547724440a8bf37f1e674d917c0 udp: no longer use SLAB_DESTROY_BY_RCU
d296ba60d8e2de23a350796a567a3aa90fe1cb6e soreuseport: Resolve merge conflict for v4/v6 ordering fix
d1e37288c9146dccff830e3253e403af8705b51f udp reuseport: fix packet of same flow hashed to different socket
df560056d960a3e164c179d89770d5a51b798537 udp: inuse checks can quit early for reuseport
5f9ae3d9e7e4ad6db0491abc7c4ae5452dbeadd8 ipv4: do metrics match when looking up and deleting a route
76cc0d3282d4b933fa144fa41fbc5318e0fdca24 ip6_gre: skb_push ipv6hdr before packing the header in ip6gre_header
8605330aac5a5785630aec8f64378a54891937cc tcp: fix SCM_TIMESTAMPING_OPT_STATS for normal skbs
90b602f80397657429373ca009f98aec4dd3c553 net: add function to retrieve original skb device using NAPI ID
aad9c8c470f2a8321a99eb053630ce0e199558d6 net: add new control message for incoming HW-timestamped packets
b50a5c70ffa4fd6b6da324ab54c84adf48fb17d9 net: allow simultaneous SW and HW transmit timestamping
74abc9b18f446d1a9e0602a71a22e5ffe8a2cd23 net: ethernet: update drivers to make both SW and HW TX timestamps
1c4f676a68a502e7bef7d0e49952b042d00aa496 net: Define SCM_TIMESTAMPING_PKTINFO on all architectures.
4d31eef5176df06f218201bc9c0ce40babb41660 netfilter: x_tables: pass xt_counters struct instead of packet counter
f28e15bacedd444608e25421c72eb2cf4527c9ca netfilter: x_tables: pass xt_counters struct to counter allocator
ae0ac0ed6fcf5af3be0f63eb935f483f44a402d2 netfilter: x_tables: pack percpu counter allocations
48dc92b9fc3926844257316e75ba11eb5c742b2c seccomp: add "seccomp" syscall
1d4457f99928a968767f6405b4a1f50845aa15fd sched: move no_new_privs into new atomic flags
c8bee430dc52cfca6c1aab27752a89275d78d50f seccomp: split filter prep from check and apply
dbd952127d11bb44a4ea30b08cc60531b6a23d71 seccomp: introduce writer locking
3ba2530cc06eb4aee4f1f754f43d781e8a12ee09 seccomp: allow mode setting across threads
c2e1f2e30daa551db3c670c0ccfeab20a540b9e1 seccomp: implement SECCOMP_FILTER_FLAG_TSYNC
a2b86f772227bcaf962c8b134f8d187046ac5f0e sched: fix confusing PFA_NO_NEW_PRIVS constant
69f6a34bdeea4fec50bb90619bc9602973119572 seccomp: Replace BUG(!spin_is_locked()) with assert_spin_lock
e0e5070b20e01f0321f97db4e4e174f3f6b49e50 sched: add macros to define bitops for task atomic flags
5dcef694860100fd16885f052591b1268b764d21 intel_idle: add BXT support
1b2e87687d3f951a66900cab6f1583d94099d2f7 x86/intel_idle: add Gemini Lake support
f62995c92a29e4d9331382b8b2461eef3b9c7c6b x86/boot/KASLR: Wrap e820 entries walking code into new function process_e820_entries()
87891b01b54210763117f0a67b022cd94de6cd13 x86/boot/KASLR: Switch to pass struct mem_vector to process_e820_entry()
27aac20574110abfd594175a668dc58b23b2b14a x86/boot/KASLR: Rename process_e820_entry() into process_mem_region()
02e43c2dcd3b3cf7244f6dda65a07e8dacadaf8d efi: Introduce efi_early_memdesc_ptr to get pointer to memmap descriptor
c05cd79750fbe5415cda896bb99350603cc995ed x86/boot/KASLR: Prefer mirrored memory regions for the kernel physical address
e480b745386e3911c45e5b281f3471c7aff8cc3b pinctrl: intel: Add Intel Lewisburg GPIO support
e48322abb061d75096fe52d71886b237e7ae7bfb mm: cma: split cma-reserved in dmesg log
629dc8704b922f0c46f3025bd3486c2bc51eb7a6 NFS store nfs4_deviceid in struct nfs4_filelayout_segment
8d40b0f14846f7d45c7c72d343fe62cb866dda34 NFS filelayout:call GETDEVICEINFO after pnfs_layout_process completes
209aa2308365387bc03905b7b4bb36c52ea1e696 nfs/filelayout: fix NULL pointer dereference in fl_pnfs_update_layout()
1ebf980127924c639e2b85c08468311ba1c95b70 NFS/filelayout: Fix racy setting of fl->dsaddr in filelayout_check_deviceid()
8cc2af7c530e320db442e6efec8c84c125c07c81 s390/zcrypt: fixed ap poll timer behavior
6acbe21f473f5cff8a11546f090967459b63ab3e s390/zcrypt: remove duplicate low level functions
889875a14f0a3205e78613b3e78ecc4efc187d74 s390/zcrypt: fix memory leak with ap configuration data
83e9d5d2d45e518deb8cb843bd2e41548c6bb9b2 s390/zcrypt: fix suspend/resume of AP bus devices
fcd0d1f637e57777fdc742adee6bfbcab5876295 s390/zcrypt: cleanup AP bus timer code
f58fe336009f451748c1c337f35130a320ef923d s390/zcrypt: use explicit return code for flushed requests
3f3007afda8bb731a3422430752ca91ddc102e4d s390/zcrypt: introduce state machine for the AP bus
b96a9e5140d4d6253e499bd18c35a7d085ac46e2 s390/zcrypt: remove support for PCICC and PCICA cards
8139b89d7cc5f53cff63a72c8e226385f34a70a2 s390/zcrypt: use system work queue for ap_scan_bus
e387753c5fb4ae40393ba3f00b7958744670cac2 s390/zcrypt: Fix kernel crash on systems without AP bus support
121a868d05500b9d7e5108cc52474dafbf60e285 s390/zcrypt: Fix initialisation when zcrypt is built-in
2bc53b8046ce9a1543204b6c6da1ab95e4caac76 s390/zcrypt: Fix AP queue handling if queue is full
11d376730384a07568b56ca8d43989d25e585760 s390/crypto: use basic blocks for ap bus inline assemblies
d6d86c57d77d466df2096b134e5f54463d3f0fb8 s390/zcrypt: Fix zcrypt suspend/resume behavior
fc1d3f02544a6fd5f417921b57c663388586a17a s390/zcrypt: Move the ap bus into kernel
236fb2ab95e9832880501d465d64eb2f2935b852 s390/zcrypt: simplify message type handling
0db78559f965a2e652dbe8acf35333f2081bf872 s390/zcrypt: header for the AP inline assmblies
9af3e04ee41e6841b2accb9dc96562bcf4e59916 s390/zcrypt: get rid of ap_poll_requests
34a15167739412750846d4f1a5540d9e592fd815 s390/zcrypt: Introduce workload balancing
e28d2af43614eb86f59812e7221735fc221bbc10 s390/zcrypt: add multi domain support
e47de21dd35bad6d1e71482a66699cd04e83ea40 s390/zcrypt: Fixed attrition of AP adapters and domains
148784246ef2d85f000713cf56e1c90b405228e8 s390/zcrypt: Correct function bits for CEX2x and CEX3x cards.
c1c1368de497648cf532e7f37a407361c70aa638 s390/zcrypt: Fix ap_max_domain_id for older machine types
d03502684b65492339d70f11aa8ed6df3961a3bf s390/zcrypt: add missing memory clobber to ap_qci inline assembly
57c52ae75774c717eb7cd777b5438244ae6b380c s390/zcrypt: get rid of variable length arrays
7fbe5c0f2af3ab82fe6880af557e98a10d711370 s390/zcrypt: use spin_lock_bh for all queue locks and unlocks.
d0360d7b523f150c2ff0ab3c9361dfc3b4185cbf s390/zcrypt: Enable request count reset for cards and queues.
e385050873d1e19e40481d8cd868c9f60ebe46ac s390/zcrypt: Fix blocking queue device after unbind/bind.
cccd85bfb7bf6787302435c669ceec23b5a5301c s390/zcrypt: Rework debug feature invocations.
ac994e80f94f440138774830f2edf148d6ece1f3 s390/zcrypt: Rework ap init in case of out of range domain param.
13b251bdc8b97c45cc8b1d57193ab05ec0fe97e8 s390/zcrypt: tracepoint definitions for zcrypt device driver.
260021e21b8fcc375984ac7733f93509bf9ad100 s390/zcrypt: Removed unneeded debug feature directory creation.
792e0e002298df01df14c704bee045f3b3be0436 s390/zcrypt: Fix missing newlines at some debug feature messages.
c7d4d259b7477866376435155eb0ccdaee880677 s390/crypto: cleanup and move the header with the cpacf definitions
1afd43e0fbba4a92effc22977e3a7e64213ee860 s390/crypto: allow to query all known cpacf functions
edc63a3785b48455e05793e848f0174e21f38d09 s390/crypto: cleanup cpacf function codes
0177db01adf26cf9c5dfe1feaf17087de4b9e40e s390/crypto: simplify return code handling
d863d5945f2be0abfcd9d36b1a7c605f3eaef517 s390/crypto: simplify init / exit functions
69c0e360f990c2dc737681f40a361195066cef02 s390/crypto: cpacf function detection
7bac4f5b8e3a607f7ba1d3a652f5922a657fa9e8 s390/crypto: simplify CPACF encryption / decryption functions
776067080ca070ef38d33a16faedc28a2f413ee7 s390/crypto: Add PCKMO inline function
e80d4af0a320972aac58e2004d0ba4e44ef4c5c7 s390/pkey: Introduce pkey kernel module
ca681ec860d6533b8debda4f6ab2e70e6d519d89 s390/pkey: Fix wrong handling of secure key with old MKVP
e61a6134e7a547939a0b7056bcf6b12d75b6d355 s390/pkey: Introduce new API for secure key verification
0b2e66448ba20eb30ea62345d6beb9ee2a1ce06b VSOCK: Add vsockmon device
cf124db566e6b036b8bcbe8decbed740bdfac8c6 net: Fix inconsistent teardown and release of private netdev state.
ac6a3722fed67c658a435187d0254ae119d845d3 flow dissector: correct size of storage for ARP
3a126f85e015701e56240884f27f97543580d5f7 kernel/params: fix handling of signed integer types
88a88b320a9068294aaa2841464e4809af2ff454 params: improve standard definitions
b4210b810e5040f10a30ba56de6c3faab5c49345 Add module param type 'ullong'
83ad357dee467f63574de35752bc40033deab30e skbuff: make skb_put_zero() return void
b080db585384b9f037e015c0c28d1ad33be41dfc networking: convert many more places to skb_put_zero()
0c7ddf36c29c3ce12f2d2931a357ccaa0861035a net: move pskb_put() to core code
af72868b9070d1b843c829f0d0d0b22c04a20815 networking: make skb_pull & friends return void pointers
d58ff35122847a83ba55394e2ae3a1527b6febf5 networking: make skb_push & __skb_push return void pointers
de77b966ce8adcb4c58d50e2f087320d5479812a net: introduce __skb_put_[zero, data, u8]
219f1d79871257e9603f504dce0fe8ebf47aad08 sk_buff: remove support for csum_bad in sk_buff
ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9 hv_sock: implements Hyper-V transport for Virtual Sockets (AF_VSOCK)
b618aaa91b5870e7bd139987ac4b7bf0851142d0 net: constify netif_is_* helpers net_device param
61b9a047729bb230978178bca6729689d0c50ca2 l2tp: fix race in l2tp_recv_common()
f3c66d4e144a0904ea9b95d23ed9f8eb38c11bfb l2tp: prevent creation of sessions on terminated tunnels
62b982eeb4589b2e6d7c01a90590e3a4c2b2ca19 l2tp: fix race condition in l2tp_tunnel_delete
9ee369a405c57613d7c83a3967780c3e30c52ecc l2tp: initialise session's refcount before making it reachable
138437f591dd9a42d53c6fed1a3c85e02678851c xfrm: move xfrm_garbage_collect out of xfrm_policy_flush
13b35686e8b934ff78f59cef0c65fa3a43f8eeaf wait.[ch]: Introduce the simple waitqueue (swait) implementation
8577370fb0cbe88266b7583d8d3b9f43ced077a0 KVM: Use simple waitqueue for vcpu->wq
35a2897c2a306cca344ca5c0b43416707018f434 sched/wait: Remove the lockless swait_active() check in swake_up*()
cc1b46803a671047be22f7832ef4a2bb3f63dd94 kvm,lapic: Justify use of swait_active()
8cd641e3c7cbf86c7cbd2a17a160dd137d86c860 sched/wait: Add swq_has_sleeper()
b9f67a420b3d76991592558af06e9cf1b8953b3d kvm,async_pf: Use swq_has_sleeper()
5e0018b3e39e9b44dbfb380b83026e55d2f65b91 kvm: Serialize wq active checks in kvm_vcpu_wake_up()
267ad7bc2d3f69af536035b6a3e4a9a2b6ae11dc kvm,powerpc: Serialize wq active checks in ops->vcpu_kick
a575813bfe4bc15aba511a5e91e61d242bff8b9d KVM: x86: Fix load damaged SSEx MXCSR register
ce7a058a2117f0bca2f42f2870a97bfa9aa8e099 KVM: x86: support using the vmx preemption timer for tsc deadline timer
64672c95ea4c2f7096e519e826076867e8ef0938 kvm: vmx: hook preemption timer support
9175d2e97b08e86293e68246020a5c29f88aa674 KVM: vmx: fix underflow in TSC deadline calculation
bd97ad0e7ed6a8870cc691fdfd108dc952fe45eb KVM: x86: introduce cancel_hv_tscdeadline
196f20ca52e8c7281932663c348fa54b82d03914 KVM: vmx: fix missed cancellation of TSC deadline timer
55123e3c862d98dc4fbcade38d158c32c022afd8 KVM: nVMX: avoid incorrect preemption timer vmexit in nested guest
910053002ef1fdc1d42b7015d5b2400172f43e42 KVM: lapic: fix access preemption timer stuff even if kernel_irqchip=off
e12c8f36f3f7a60d55938c5aed5999278fa92bcb KVM: lapic: adjust preemption timer correctly when goes TSC backward
7d7f7da2f1fcd5b63d3b250a9cb4f7618c1f235d KVM: LAPIC: extract start_sw_period() to handle periodic/oneshot mode
498f8162191683d9068fd7e14909484027dee194 KVM: LAPIC: introduce kvm_get_lapic_target_expiration_tsc()
7e810a38e6c7166b91968e83dee4cf7a4ef5dc80 KVM: LAPIC: rename start/cancel_hv_tscdeadline to start/cancel_hv_timer
8003c9ae204e21204e49816c5ea629357e283b06 KVM: LAPIC: add APIC Timer periodic/oneshot mode VMX preemption timer support
5587859fb1e8bea5e3b8a0ab7866526ad7d1d673 KVM: x86: use ktime_get instead of seeking the hrtimer_clock_base
33365e7a454fd40d30d11bf0d9147e059b22e099 kvm: x86: make function static to avoid compiling warning
5acc1ca4fb15f00bfa3d4046e35ca381bc25d580 KVM: X86: Fix preempt the preemption timer cancel
35ee9e48b9df6c7751e8f759a4deec5aed1463c3 KVM: lapic: reorganize start_hv_timer
a749e247f745f609fd1106f1400ea063fe9b18ba KVM: lapic: reorganize restart_apic_timer
c853354429f7ec88f9cdde4e46e69a2c0e3c8310 KVM: LAPIC: Fix lapic timer injection delay
1d518c6820daf4e00d29adfba980aee05f605f0f KVM: LAPIC: Fix reentrancy issues with preempt notifiers
67c9dddc95ac16a09db996e8e4dcacfd94cf2306 KVM: x86: make hwapic_isr_update and hwapic_irr_update look the same
4d82d12b39132e820b9ac4aa058ccc733db98917 KVM: lapic: do not scan IRR when delivering an interrupt
810e6defcca4d05275aa15c2872c0a4949178fcb KVM: x86: preparatory changes for APICv cleanups
76dfafd536730ef9b9d99b1cf596916d52be76d1 KVM: x86: do not scan IRR twice on APICv vmentry
b95234c840045b7c72380fd14c59416af28fcb02 kvm: x86: do not use KVM_REQ_EVENT for APICv interrupt injection
c909e7ca494f397f51648048252d00d3dd61cefd bnxt: Fix typo in comments
9a284e5c9e04a3533f72eda8956162dfc77684a9 scripts/spelling.txt: add "overwritting" pattern and fix typo instances
b476deab8f412bd5441eb161b0fda86a0246de27 igb: make a few local functions static
32652c2ac2f330d2c159d8259f359da0ee2b0aa3 igbvf: add lock around mailbox ops
61289cbaf6c854a493ad0fa405c3dd39e7a384f3 iommu/amd: Remove old alias handling code
ca9cab3a5a9ea2ff03d761494b002897e2e3c4b5 iommu/amd: Align DTE flag definitions
492e74594ec6285207f9db02d41c41cad5dbc6ab iommu/amd: Cleanup error handling in do_fault()
759ce23b62c4ba1aa467fe5eb12bc9f95af606fe iommu/amd: Constify mmu_notifier_ops structures
5f6bed50050625f1b76fa2c0dfd0ce887cb0420a iommu/amd: Make dma_ops_domain->next_index percpu
7b5e25b84eba25e78bce736a5c99649f7ff0f5c2 iommu/amd: Use trylock to aquire bitmap_lock
30861ddc9cca479a7fc6a5efef4e5c69d6b274f4 perf/x86/amd: Add IOMMU Performance Counter resource management
4160cd9e5ef9ac9f1c9c429e1606bf08a56c8a49 iommu/amd: Make a symbol static
d16e0faab911cc0e100a1e8e93635b432566608e iommu: Allow selecting page sizes per domain
e3156048346c28c695f5cf9db67a8cf88c90f947 iommu/amd: Fix checking of pci dma aliases
7aba6cb9ee9db7849d0bf57891d9c7feb4e89457 iommu/amd: Make call-sites of get_device_id aware of its return value
2bf9a0a12749b2c45964020795859d4a1f228a1d iommu/amd: Add iommu support for ACPI HID devices
9a4d3bf56c87be9ad8916e2013af04787d6bac9b iommu/amd: Set AMD iommu callbacks for amba bus
9ee35e4c6f42e792974872ee1ec4115718ce05bc iommu/amd: Don't use IS_ERR_VALUE to check integer values
aa4732406e1290dd18a8d2078977996c152a4be7 iommu/vt-d: per-cpu deferred invalidation queues
367464362591d89b371e2a690638e9bc899d8ebb intel-iommu: integrate DMA CMA
769530e4ba4898748a293592f0920275b40cbb93 iommu/vt-d: only unmap mapped entries
2aac630429d986a43ac59525a4cff47a624dc58e iommu/vt-d: change intel-iommu to use IOVA frame numbers
9257b4a206fc0229dd5f84b78e4d1ebf3f91d270 iommu/iova: introduce per-cpu caching to iova allocation
22e2f9fa63b092923873fc8a52955151f4d83274 iommu/vt-d: Use per-cpu IOVA caching
583248e6620a4726093295e2d6785fcbc2e86428 iommu/iova: Disable preemption around use of this_cpu_ptr()
3bd4f9112f87a9c65fe6e817272806167f0bc9ed iommu/vt-d: Fix overflow of iommu->domains array
0caa7616a6aca449dd68b58cb29bd491d296c2d5 iommu/vt-d: Fix infinite loop in free_all_cpu_cached_iovas
0076cd3d063a43f69eba2d0a1d13927897c8ed35 iommu/amd: Set AMD iommu callbacks for platform bus driver
a72c4225447bae5d435671446168876bcea4de59 iommu/amd: Select IOMMU_IOVA for AMD IOMMU
307d5851ef74c6c06a68f50302bf19809966d345 iommu/amd: Allocate iova_domain for dma_ops_domain
81cd07b9c92ad446fcde18db7de961def0dbcfd3 iommu/amd: Create a list of reserved iova addresses
8d54d6c8b8f3e40dadd15b1dad6f190c2ccf7473 iommu/amd: Implement apply_dm_region call-back
256e4621c21aa1bf704e1a12e643923fdb732d04 iommu/amd: Make use of the generic IOVA allocator
2d4c515bf06c9bce87b546279413621f847ef6a3 iommu/amd: Remove other remains of old address allocator
bda350dbdbc1ad8655ece0ec3d41bebc3ee7a77b iommu/amd: Remove align-parameter from __map_single()
c5b5da9c79bb2d88fa3c5163ccf1a7a9e89cfa49 iommu/amd: Set up data structures for flush queue
b1516a14657acf81a587e9a6e733a881625eee53 iommu/amd: Implement flush queue
bb279475db4d0bb07e4dbc99e060362b9f3b5093 iommu/amd: Implement timeout to flush unmap queues
f37f7f33d561901d599e98a72bbf44af1f162732 iommu/amd: Introduce dir2prot() helper
80187fd39dcb30e3aa39e93a87b2d2f7fc8f4fd5 iommu/amd: Optimize map_sg and unmap_sg
281e8ccbff172899a60579773e72ad63d58b3770 iommu/amd: Flush iova queue before releasing dma_ops_domain
b3311b061de2e51db683a67092546876839df532 iommu/amd: Use container_of to get dma_ops_domain
feccf398db631f3b98c4c6572381517d90b5fd87 iommu: Simplify and fix ida handling
a5604f260e68a45510ef773ce36ce301d1f6d102 iommu/amd: Fix non static symbol warning
4bf5beef578e46393f11eb69dda7d17a065e05ff iommu/amd: Don't put completion-wait semaphore on stack
c3db901c54466a9c135d1e6e95fec452e8a42666 iommu/amd: Free domain id when free a domain of struct dma_ops_domain
7d7d38afb3e8fdfebfd867cc0ff4b5c45c14053c iommu/amd: Adding Extended Feature Register check for PC support
38e45d02ea9f194b89d6bf41e52ccafc8e2c2b47 iommu/amd: Fix boot warning when device 00:00.0 is not iommu covered
3928aa3f5775fc4e40117077e97d73d8526039c9 iommu/amd: Detect and enable guest vAPIC support
a38180bd366f9912a08f52dd6f9a843bf0107d5f iommu/amd: Move and introduce new IRTE-related unions and structures
880ac60e2538337f84d9f76ab7b3c13ee7787804 iommu/amd: Introduce interrupt remapping ops structure
77bdab46f04ffd93140c574f4fbd48ab521fdbe0 iommu/amd: Add support for multiple IRTE formats
8bda0cfbdc1a6278a1bbdba795139da682f296ff iommu/amd: Detect and initialize guest vAPIC log
8dbea3fd7becd4af8ca882c3132be4b1a857e301 iommu/amd: Introduce amd_iommu_update_ga()
b9fc6b56f478b487dc8fc400da73d89ac9137201 iommu/amd: Implements irq_set_vcpu_affinity() hook to setup vapic mode for pass-through devices
d98de49a53e48f51332e97568127e722415e1232 iommu/amd: Enable vAPIC interrupt remapping mode by default
5881f73757cc3dbada878e67c119a801ed0f9a07 svm: Introduce AMD IOMMU avic_ga_log_notifier
adad0d02a7d3c958121a4eb9d126015a2353db94 kvm: svm: fix unsigned compare less than zero comparison
84a21dbdef0b96d773599c33c2afbb002198d303 iommu/amd: Fix interrupt remapping when disable guest_mode
efe6f241602cb61466895f6816b8ea6b90f04d4e iommu/amd: Enable ga_log_intr when enabling guest_mode
4c232a708be1047fe26b7c75ceaa5d73deb6a798 iommu/amd: Detect pre enabled translation
78d313c611adcd354d35295e30f1495e02e005f9 iommu/amd: Add several helper functions
07a80a6b5920873a8b161ac49c5c12db7af30c0f iommu/amd: Define bit fields for DTE particularly
3ac3e5ee5ed56b07448f295902e44916eb6979fc iommu/amd: Copy old trans table from old kernel
53019a9e88cc14bae2780ba807faba87a5829891 iommu/amd: Do sanity check for address translation and irq remap of old dev table entry
df3f7a6e8e855e4ff533508807cd7c3723faa51f iommu/amd: Use is_attach_deferred call-back
daae2d25a4779b272a66ddd01f5810bcee822b9e iommu/amd: Don't copy GCR3 table root pointer
ae162efbf2870c326e06b4f905423fb888f9cd2a iommu/amd: Fix compiler warning in copy_device_table()
ec62b1ab0f4ccbc48aa8b9852cc25b38a1f12d1e iommu/amd: Check if domain is NULL in get_domain() and return -EBUSY
ba714a9c1dea85e0bf2899d02dfeb9c70040427c pinctrl/amd: Use regular interrupt instead of chained
79d2c8bede2c93f9432d7da0bc2f76a195c90fc0 pinctrl/amd: save pin registers over suspend/resume
2793784307688a7a72bd322727a2cb11dede875f s390/crypt: Add protected key AES module
e7c95effcd3a7a0c9535c809141ca499fede2c31 s390/crypt: fix missing unlock in ctr_paes_crypt on error path
284c43e6af415515865d2900d18d1382979c777c s390/crypt: use the correct module alias for paes_s390.
1b568d934eec1c5c99565c41f6c8ca66e9743e96 virtio/s390: rename drivers/s390/kvm -> drivers/s390/virtio
7dccfbc325bb59f94521d544a8ae12148622b4f2 powerpc/book3s: Add a cpu table entry for different POWER9 revs
7ffd948fae4cd4f0207bece20132edd9afb9abcc powerpc/perf: factor out power8 pmu functions
f1fb60bfde65fe4c4372d480d1b5d57bdba20367 powerpc/perf: Export Power9 generic and cache events to sysfs
7c98bd72081c44670e2d0b60aed364180ebc0611 powerpc/sparse: Make a bunch of things static
60b00025641e2921dcfba4d54b6cf7f0c5903677 powerpc/perf: factor out the event format field
520ed5b04f3e807e5bf1b6981ffb50524632fc5f powerpc/perf: update attribute_group data structure
18201b204286a1ef478ef52b00ab9f6c5739b4f6 powerpc/perf: power9 raw event format encoding
c7c3f568beff2b72f02a7807ec48b0bc66a7ead6 powerpc/perf: macros for power9 format encoding
27593d72c4ad451ed13af35354b941bcd0abcec6 powerpc/perf: Use MSR to report privilege level on P9 DD1
efe881afdd9996ccbcd2a09c93b724f4ffc25991 powerpc/perf: Factor out event_alternative function
a114aca57a59cd92189bf3795ac082a5e8fac0f1 powerpc/perf: Add alternative event table and function for power9
8a088542c8f8d0bb458e4db2c01a2534f1adaf47 powerpc/perf: Use PM_INST_DISP for generic instructions sample
8d911904f3ce412b20874a9c95f82009dcbb007c powerpc/perf: Add restrictions to PMC5 in power9 DD1
78a16d9fc1206e1a484b6ac96348756f3846bfea powerpc/perf: Avoid FAB_*_MATCH checks for power9
78b4416aa249365dd3c1b64da4d3a232014320b0 powerpc/perf: Handle sdar_mode for marked event in power9
79e96f8f930d425ab48c511f8a6db16ca7fc68b1 powerpc/perf: Export memory hierarchy info to user space
453ce7a9432ee0bf3199072aa62f4c1895a195b1 powerpc/perf: Support to export SIERs bit in Power8
d148c94c27a87213f995f0a7519b231719cfb919 powerpc/perf: Support to export SIERs bit in Power9
8c218578fcbbbdb10416c8614658bf32e3bf1655 powerpc/perf: Fix Power9 test_adder fields
24bedcb7c811375a962a621613ad152d95bc28ba powerpc/perf: Fix branch event code for power9
20dd4c624d25156d5ec3345bbb690b98175ef879 powerpc/perf: Fix SDAR_MODE value for continous sampling on Power9
3f0bd8dad0db73f5d71b355aec5ab33b374260ba powerpc/perf: Add POWER9 alternate PM_RUN_CYC and PM_RUN_INST_CMPL events
7aa345d84245a75760fc35a385fc5585f5e3336a powerpc/perf: Update default sdar_mode value for power9
70a7e720998d5beaf0c8abd945234e065a49336b powerpc/perf: Factor out PPMU_ONLY_COUNT_RUN check code from power8
91e0bd1e62519bdb50e35775ec37b27a9535b8d7 powerpc/perf: Add PM_LD_MISS_L1 and PM_BR_2PATH to power9 event list
93fc5ca9a0048c17b47582051940bfdcb516f9f2 powerpc/perf: Cleanup of PM_BR_CMPL vs. PM_BRU_CMPL in Power9 event list
5f30fc94ca985974fd54de454c7a6070388443db lib/radix-tree.c: swapoff tmpfs radix_tree: remember to rcu_read_unlock
7c8e0181e6e0b8079c4c2ce902bf52d7a2c6fa5d mm: replace __get_cpu_var uses with this_cpu_ptr
9d2a8da006fcbf2dea663c095f0a0088dfbbec15 radix-tree: replace preallocated node array with linked list
e9256efcc8e390fa4fcf796a0c0b47d642d77d32 radix-tree: introduce radix_tree_empty
3d4d5d618639c3155cfce57101d619a0935434d2 radix tree test suite: Fix build
d42cb1a9fffa9dc760c13302f00cdec25106e2f1 radix tree test suite: add tests for radix_tree_locate_item()
97d778b2de9213c7a7483dad0f533c1af9f0810f radix tree test suite: allow testing other fan-out values
aa1d62d8530d5adf158dd633d360108466f93fcd radix tree test suite: keep regression test runs short
57578c2ea2cb2e0d362a9212ac83cf90221d4883 raxix-tree: introduce CONFIG_RADIX_TREE_MULTIORDER
4f3755d1ae3cd856a5c7da3dea12cced8dc51fbf radix tree test suite: start adding multiorder tests
afe0e395b6d1817fa5393f1ad6fcbf71406b016d radix-tree: fix several shrinking bugs with multiorder entries
7b60e9ad59a31dd98c2f7ef841e2882c2b0e0f3b radix-tree: fix multiorder BUG_ON in radix_tree_insert
21ef533931f73a8e963a6107aa5ec51b192f28be radix-tree: add support for multi-order iterating
643b57d0a9bd4c93625a2f5da4cebc3ceb402b9b radix tree test suite: multi-order iteration test
0fc9b8ca2b1df4948e9516697b1cf12f030968bd radix-tree test suite: add multi-order tag test
8a14f4d8328cc8615f8a5487c4173f36a8314796 radix-tree: fix radix_tree_create for sibling entries
0a2efc6c809b01872321d9c7e7d82d59ac6fde10 radix-tree: rewrite radix_tree_locate_item
eb73f7f3300c144c4b886dd56ea4c3d2b2d58249 radix-tree: add test for radix_tree_locate_item()
070c5ac2740b5db89d381a09fb03b2480b2f7a74 radix-tree: fix radix_tree_range_tag_if_tagged() for multiorder entries
2fcd9005cc03ab09ea2a940515ed728d43df66c4 radix-tree: miscellaneous fixes
0c7fa0a8418cbe0e8963fe36db9575d03b8589f7 radix-tree: split node->path into offset and height
c12e51b07b3ac4c188fd91a82f96840fdb9cca6f radix-tree: replace node->height with node->shift
d0891265bbc988dc91ed8580b38eb3dac128581b radix-tree: remove root->height
30ff46ccb303fb6f6c28b9aa9f2cdc4ba900ed3f radix-tree: rename INDIRECT_PTR to INTERNAL_NODE
a4db4dcea1b3990e8c5dc8a03d11f36a3c0c6d8b radix-tree: rename ptr_to_indirect() to node_to_entry()
4dd6c0987ca43d6544f4f0a3f86f6ea3bfc60fc1 radix-tree: rename indirect_to_ptr() to entry_to_node()
b194d16c27af905d6e3552f4851bc7d9fee4e90f radix-tree: rename radix_tree_is_indirect_ptr()
af49a63e101eb62376cc1d6bd25b97eb8c691d54 radix-tree: change naming conventions in radix_tree_shrink
8c1244de00ef98f73e21eecc42d84b2742fbb4f9 radix-tree: tidy up next_chunk
a8e4da25d3c573a0c3cf2fb33e91ec5cad8d7f16 radix-tree: tidy up range_tag_if_tagged
89148aa40201def3fa552f9d07dd99740d880ab2 radix-tree: tidy up __radix_tree_create()
9e85d811196583126785a0405d0c879ae7a9eb2f radix-tree: make radix_tree_descend() more useful
3bcadd6fa6c4fd07ace3626357c824eb532488a6 radix-tree: free up the bottom bit of exceptional entries for reuse
c78c66d1ddfdbd2353f3fcfeba0268524537b096 radix-tree: implement radix_tree_maybe_preload_order()
a23216a2f1f8a30a3b6588c743681651e4a6aa94 radix-tree: fix comment about "exceptional" bits
62fd5258ebe3ea240371234955a6e2cc99e0b6c3 radix tree test suite: Test radix_tree_replace_slot() for multiorder entries
8d2c0d36d6826ddc3114801c599619d3f2932f0a radix tree: fix sibling entry handling in radix_tree_descend()
eec4852543e4e6edbb6cab512fd1edc70c1f7a18 radix-tree tests: add iteration test
901c04a33f138e5fb935a1621375a1a0997fe7b1 iscsi/iser-target: Add fabric_prot_type attribute support
c3d0a7c21db219ef87679c2a667aba9f138524db target: remove the unused SCF_CMD_XCOPY_PASSTHROUGH flag
2c336e3a2e1728d9b3116422655832184dc7046c target: simplify target_xcopy_init_pt_lun
9ac8928e6a3e1ed02e632e45aa766129fe6b1802 target: simplify the target template registration API
d588cf8f618d7b316743a0bc99fede20f7a01bb7 target: Fix se_tpg_tfo->tf_subsys regression + remove tf_subsystem
7bfea53b5c936d706d0bf60ec218fa72cde77121 target: Move passthrough CDB parsing into a common function
8287fa5fb43c3fa05748560b8e13b91c4e88f586 target/file: Remove fd_prot bounce buffer
c04a6091c951c88636a569cdd29feb65fb5003af iscsi-target: remove support for obsolete markers
e1750d20e69477c0d7b26d6e0ba24c3c9ec47530 target: make the tpg_get_default_depth method optional
c7d6a803926bae9bbf4510a18fc8dd8957cc0e01 target: refactor init/drop_nodeacl methods
e413f4727037e826c55a639c713a221006b6d61d target: refactor node ACL allocation
144bc4c2a42a0f42a32c106d53f5bf2724fbf098 target: move node ACL allocation to core code
2b6eb609b8fab75707ac3557d195a5a99037e39b target/iscsi: stop using se_tpg_fabric_ptr
e4aae5af810eaa61c2cd7ba79d95ebfe0d88fe9b target: change core_tpg_register prototype
2aeeafae6bb9f04dbe17b521bcd8f0d03516c393 target: remove the get_fabric_proto_ident method
10081fb532a2a2216b7d8e4ad585c985075b6f60 lib: introduce crc_t10dif_update()
2650d71e244fb3637b5f58a0080682a8bf9c7091 target: move transport ID handling to the core
649ee05499d1257a3af0e10d961a1c52d9ef95b7 target: Move task tag into struct se_cmd + support 64-bit tags
0dc2e8d1435318dc448ac390d6d31e6cd2516684 target: put struct target_fabric_configfs on a diet
968ebe752035d14a4c2bb69f8ed0ddf7292dd2f9 target: remove struct target_fabric_configfs_template
7ad34a93675e9c5a65711f83c518871317adc2ee target: target_core_configfs.h is not needed in fabric drivers
29a05deebf6c2e3010934fb78ee65cab3d329470 target: Convert se_node_acl->device_list[] to RCU hlist
80bfdfa92481d431b199eff72788588d13a3988f target/pr: Use atomic bitop for se_dev_entry->deve_flags reservation check
79dc9c9e865a7f8c14737453f112ced25deafdef target/pr: Change alloc_registration to avoid pr_reg_tg_pt_lun
9fcb57f39c0cde70bcccdc1d998d3060297e911c target/pr: cleanup core_scsi3_pr_seq_non_holder
6bb826121be244a5a3c8bd8b7d45c47df18810b7 target: Convert se_portal_group->tpg_lun_list[] to RCU hlist
403edd78a2851ef95b24c0bf5151a4ab640898d7 target: Convert se_tpg->acl_node_lock to ->acl_node_mutex
22793de590ca23a1e49b0ce5353911121fcc32be target: Convert core_tpg_deregister to use list splice
84786546b6ff8d50c3e4c1ea877a872cf55d485a target: Drop unused se_lun->lun_acl_list
df9766ca9da5d9c1f2bb4eea9c9f16a2e7e8e1a5 target: Only reset specific dynamic entries during lun_group creation
4624773765699ac3f4e0b918306b638cba385713 target: Drop left-over se_lun->lun_status
0a06d4309dc168dfa70cec3cf0cd9eb7fc15a2fd target: simplify backend driver registration
5873c4d157400ade4052e9d7b6259fa592e1ddbf target: consolidate backend attribute implementations
3effdb9094fd06b9c61ecef08d610ae90805fd98 target: simplify backend attribute implementation
adf653f92f38e80a78bb77e912d49bcc8055330f target: Subsume se_port + t10_alua_tg_pt_gp_member into se_lun
4cc987eaff9144182cde88d6d132420c28d3f81b target: Drop lun_sep_lock for se_lun->lun_se_dev RCU usage
9e37d042cfcb003b885bb4c531cd6f07f62647d1 target: Drop se_lun->lun_active for existing percpu lun_ref
bc0c94b1404b225b19b6b53a0e508f43e269ed1e target: Drop unnecessary core_tpg_register TFO parameter
e34d366273ce17bba902975f7c1e64a24a399024 target: Drop duplicate + unused se_dev_check_wce
196e2e2aa362850bf45bcb14b9517124b23b921e target: Remove TARGET_MAX_LUNS_PER_TRANSPORT
c51c8e7bcac966f209da83630fc8ca7e6cad279b target: use 'se_dev_entry' when allocating UAs
1adff1b3a7f75a1c255b7fcab5676edf29d4a5d8 target: Convert se_lun->lun_deve_lock to normal spinlock
3dd348fcaa407181585fcadc04b0cac6e31f9be0 target: Send UA on ALUA target port group change
7c0d0d51d26497866d2951a35f1736fc765e4fcf target: Send UA when changing LUN inventory
b753d643555e548163adfa2de9d75e0257e4b356 target: implement WRITE_SAME with UNMAP bit using ->execute_unmap
6de2ce5b8cb6ff3562de34ea2584b0e501373f56 target: remove target_core_configfs.h
9b353cc8f199e4bc78023e8300306b5a16b48e75 target/pr: Fix possible uninitialized variable usage
bc1a7d6aff763ea29db6319185327f86b0fe93b6 target: Indicate success if writing 0 to pi_prot_type
c20910264c367a5dfbf6c09e8ec2ff0c5c52857a target/configfs: handle match_int() errors
9450918293b3c35f11883231a53da1aed2c78403 target: Perform RCU callback barrier before backend/fabric unload
9c395170a559d3b23dad100b01fc4a89d661c698 target: REPORT LUNS should return LUN 0 even for dynamic ACLs
0f69a38737538c8a265f75d26996818f98c899e4 target: Fix handling of small allocation lengths in REPORT LUNS
e986a35aba67558381d5cec59a14c4d0b20f0d47 tcm_loop: Send I_T_NEXUS_LOSS_OCCURRED UA
4e4937e8aefde8d49340e803ebbedcdf4b43e5f0 target: Return descriptor format sense data in case the LU spans 64bit sectors
53c46995b6ed7cb32a28bce1f4a25065baf65d8f target: remove unused lun_flags field from se_lun
b6a54b8d895648d915c7e8308f3d3e6bf2505d69 target: remove initiatorname field in se_acl_lun
915270c3cacfc80cb3fe7fdd8130439039a85bbb target: Shrink struct se_cmd by rearranging fields
8f9b565482c537821588444e09ff732c7d65ed6e target/qla2xxx: Honor max_data_sg_nents I/O transfer limit
3ccd6e83df8a0d4a664edeecc453c4fa046395fb target: Fix PR registration + APTPL RCU conversion regression
eeeb9522231118138be418ff527dc8c9050f4707 target: Propigate backend read-only to core_tpg_add_lun
f3bb467ff64b2598d023b3a07592748fa7768b6a target: Fix target_sense_desc_format NULL pointer dereference
8fa3a867486f85df66eba8c4df85804d3309c6ad target: Make TCM_WRITE_PROTECT failure honor D_SENSE bit
9ae0f367df5d0d7be09fad1e2e5b080f6a45ca6b dlm: use per-attribute show and store methods
9ff9d15eddd13ecdd41876c5e1f31ddbb127101c target: Invoke release_cmd() callback without holding a spinlock
2628b352c3d4905adf8129ea50900bd980b6ccef tcm_loop: Show address of tpg in configfs
9a9e3415edd567813d52c8de402042b9720c54f5 fs: configfs: Drop unused parameter from configfs_undepend_item()
ac75d8be9bed40b54be4e98fe6a521322d6cd891 target: Fix spelling + remove set-but-not-used variables
ef8f46b549c2e425513ed568f18c827a37c08727 sbp-target: Remove a superfluous forward declaration
e6f41633cb79b55ead84b023c02035322c7827e7 target/sbc: Add LBPRZ attribute + control CDB emulation
234bdbc49d118431b1ebeee228bd1b3105f89e2a target: fix deprecated attribute names in dmesg
bd5cecea43ef379e82250addd0303e2f9ede6793 bio: use offset_in_page macro
fb3269baf4ecc2ce6d17d4eb537080035bdf6d5b qla2xxx: Add selective command queuing
091b70623e2b9caee1c27190c3a5614b3563a672 target/fcoe: Add tag support to tcm_fc
9b3118ce8a942706f65cf5de82a6de967a9fbe74 target: Fix indentation in target_core_configfs.c
7fbef3d0c2f6063ed12e7f3d74ba2a49111154f9 tcm_fc: Convert acl lookup to modern get_initiator_node_acl usage
d36ad77f702356afb1009d2987b0ab55da4c7d57 target: Convert ACL change queue_depth se_session reference usage
21aaa23b0ebbd19334fa461370c03cbb076b3295 target: Obtain se_node_acl->acl_kref during get_initiator_node_acl
8a9ebe717a133ba7bc90b06047f43cc6b8bcb8b3 target: Fix WRITE_SAME/DISCARD conversion to linux 512b sectors
febe562c20dfa8f33bee7d419c6b517986a5aa33 target: Fix LUN_RESET active I/O handling for ACK_KREF
ebde1ca5a908b10312db4ecd7553e3ba039319ab target: Fix TAS handling for multi-session se_node_acls
0f4a943168f31d29a1701908931acaba518b131a target: Fix remote-port TMR ABORT + se_cmd fabric stop
310d3d314be7f0a84011ebdc4bdccbcae9755a87 target: Fix race with SCF_SEND_DELAYED_TAS handling
57dae19065bde296dfdf08b8e46c102a671ff741 target: Drop legacy se_cmd->task_stop_comp + REQUEST_STOP usage
2e498f25b0daa9dec761e3e880024ff7417f2445 target: Fix incorrect unmap_zeroes_data_store return
9095adaab8c1d82707e4e9961b6ad79b62f3361b target/transport: add flag to indicate CPU Affinity is observed
7861728d42338e1efac9d400c39319c1b5efd05c target: Add target_alloc_session() helper function
fb444abe61f5a943a41870d71eab8c4402bd46ab target: Convert demo-mode only drivers to target_alloc_session
9ed5965588603840100fb31e579c2996d81aaea9 tcm_fc: Convert to target_alloc_session usage
5a3ee221b543100ce3bed5b59bfb155d0ef293b7 sbp-target: Conversion to percpu_ida tag pre-allocation
07b6319687026bdac90a0bb9eeb0509f1ff27179 target/iblock: pass WRITE_SAME to device if possible
03a68b44faff1b3eef5424952044747c9c555f0e target: Remove enum transport_lunflags_table
4347ab5a086efcba449e7a6f0a14d1474060006b target: Avoid DataIN transfers for non-GOOD SAM status
5e47f1985d7107331c3f64fb3ec83d66fd73577e target: Fix target_release_cmd_kref shutdown comp leak
f246c941549c715a66a4477c3053569b2f5b8823 ib_srpt: Convert acl lookup to modern get_initiator_node_acl usage
ce7043fd903eb9722a885b98b53fffe2cedfb047 target: remove ->fabric_cleanup_nodeacl
e6e202edf000004422a901dfa301d600e32f17e3 target: initialize the nacl base CIT begfore init_nodeacl
839559e10601ed4459c802cbfb69747bf1844078 target: add a new add_wwn_groups fabrics method
c17d5d5f51f72f24e0e17a4450ae5010bf6962d9 target: export lio pgr/alua support as device attr
4ec5bf0ea83930b96addf6b78225bf0355459d7f target/user: PGR Support
064cdd2d91c2805d788876082f31cc63506f22c3 target: Fix race between iscsi-target connection shutdown + ABORT_TASK
5e2c956b8aa24d4f33ff7afef92d409eed164746 target: Fix missing complete during ABORT_TASK + CMD_T_FABRIC_STOP
5e0cf5e6c43b9e19fc0284f69e5cd2b4a47523b0 iscsi-target: Always wait for kthread_should_stop() before kthread exit
7401bc18d1ee39e46b668341097e0183975c02eb scsi: qla2xxx: Add FC-NVMe command handling
bcda771b2f7e4f2a7577eef62ddeb61394e03b69 scsi: qla2xxx: avoid unused-function warning
6fcd98fd2c731f87ab5ccd604d61d0ef20a8c5b2 scsi: qla2xxx: Cleanup FC-NVMe code
d7936a96e45c8a5b7ad21113f945b4de0c683a37 scsi: qla2xxx: Fix WWPN/WWNN in debug message
1a28faa01074f1cacc029bcb611690f086b11de2 scsi: qla2xxx: Clear fc4f_nvme flag
92d4408e34667f521cda7192fc8dda3da25d45bc scsi: qla2xxx: Add support for minimum link speed
c955886962a280eb90b6bde87448ee99c467c0b3 scsi: qla2xxx: Add ATIO-Q processing for INTx mode
edd05de1975927b51b4e8e1135ef4d6130dfd17c scsi: qla2xxx: Changes to support N2N logins
9458321750cbfdaf9fd3cb95194f37c52e0cb356 scsi: be2iscsi: Update copyright
0172dc65623e037c90d7dd50d0168e75984427a9 scsi: be2iscsi: Remove A-circumflex character in copyright marking
7ad658b693536741c37b16aeb07840a2ce75f5b9 KVM: nVMX: fix nested EPT detection
9314006db8b781715658cd6a28994d84ccce5dee KVM: nVMX: keep preemption timer enabled during L2 execution
9bc1f09f6fa76fdf31eb7d6a4a4df43574725f93 KVM: async_pf: avoid async pf injection when in guest mode
4c4a6f790ee862ee9f0dc8b35c71f55bcf792b71 KVM: nVMX: track NMI blocking state separately for each VMCS
2d6144e366fb39609aecf7a658e2e10af37627e9 KVM: nVMX: Fix loss of L2's NMI blocking state
210f84b0ca7743f3b2a9acfae81df668dbbb6a12 x86: irq: Define a global vector for nested posted interrupts
06a5524f091b6b41b0007810c74cc9315923a145 KVM: nVMX: Fix posted intr delivery when vcpu is in guest mode
d6321d493319bfd406c484e8359c6101cbda39d3 KVM: x86: generalize guest_cpuid_has_ helpers
1b4d56b86a370a3785a33eba23e2e3009f5a03af KVM: x86: use general helpers for some cpuid manipulation
80154d77c922d0f9bb1e4d115ff760c066c12d8f KVM: VMX: cache secondary exec controls
45ec368c9addbbf3fb25fc33d3f22f838ec91714 kvm: vmx: Raise #UD on unsupported RDRAND
75f4fc8da9bd3b56f08ff8ba4113e5c57a85c24c kvm: vmx: Raise #UD on unsupported RDSEED
2e5b0bd9cc6172edef502dfae28ae790f74a882e kvm: nVMX: Don't validate disabled secondary controls
37b9a671f346a184c4e381b32ee465cf7d248ae8 kvm: nVMX: Correct a VMX instruction error code for VMPTRLD
09f037aa48f34c84e70c5a6ef4870b2dee3aee76 KVM: MMU: speedup update_permission_bitmask
9eec50b8bbe1535c440a1ee88c1958f78fc55957 kvm/x86: Hyper-V HV_X64_MSR_VP_RUNTIME support
72c139bacfa386145d7bbb68c47c8824716153b6 KVM: hyperv: support HV_X64_MSR_TSC_FREQUENCY and HV_X64_MSR_APIC_FREQUENCY
f160c7b7bb322bf079a5bb4dd34c58f17553f193 kvm: x86: mmu: Lockless access tracking for Intel CPUs without EPT A bits.
312b616b30d87581b88d3db54c14ed89610cc97b kvm: x86: mmu: Set SPTE_SPECIAL_MASK within mmu.c
20d65236d01cdbe14a88f0e2c0f985669f8c41fc kvm: x86: mmu: Update comment in mark_spte_for_access_track
d3e328f2cb01f6f09259a5810baae3edf5416076 kvm: x86: mmu: Verify that restored PTE has needed perms in fast page fault
ae1e2d1082ae6969ff8c626ef80804d950bf256b kvm: nVMX: support EPT accessed/dirty bits
c5f983f6e8455bbff8b6b39f3ad470317fcd808e nVMX: Implement emulated Page Modification Logging
03efce6f935f89f90a98997ceea514aeff47b6dc nVMX: Advertise PML to L1 hypervisor
4769886baf39b6a307eb8f9e39848823ca6c5939 kvm: nVMX: off by one in vmx_write_pml_buffer()
0780516a18f87e881e42ed815f189279b0a1743c KVM: nVMX: fix EPT permissions as reported in exit qualification
ce00053b1cfca312c22e2a6465451f1862561eab x86: kvm: mmu: dead code thanks to access tracking
dcdca5fed5f6ef2521f927ba3b5cd6b328054be1 x86: kvm: mmu: make spte mmio mask more explicit
ac8d57e5734389da18633d4e8cc030fe10843da7 kvm: x86: mmu: allow A/D bits to be disabled in an mmu
332518706195007f9fbafa69652aa5b3cf72df24 KVM: nVMX: fix AD condition when handling EPT violation
995f00a619584e65e53eff372d9b73b121a7bad5 x86: kvm: mmu: use ept a/d in vmcs02 iff used in vmcs12
ef1ead0c3b1dfb43d33caa4f50c8d214f86b6bc8 KVM: PPC: Book3S HV: HPT resizing documentation and reserved numbers
db9a290d9c3c596e5325e2a42133594435e5de46 KVM: PPC: Book3S HV: Rename kvm_alloc_hpt() for clarity
3f9d4f5a5f35e402e91bedf0c15e29cef187a29d KVM: PPC: Book3S HV: Gather HPT related variables into sub-structure
3d089f84c6f9b7b0eda993142d73961a44b553d2 KVM: PPC: Book3S HV: Don't store values derivable from HPT order
aae0777f1e8224b4fbb78b2c692060852ee750c8 KVM: PPC: Book3S HV: Split HPT allocation from activation
f98a8bf9ee201b7e22fc05e27150b1e481d4949f KVM: PPC: Book3S HV: Allow KVM_PPC_ALLOCATE_HTAB ioctl() to change HPT size
639e459768845924705933db9142baef545ff5fc KVM: PPC: Book3S HV: Create kvmppc_unmap_hpte_helper()
5e9859699aba74c0e297645e7d1734cd4b964de7 KVM: PPC: Book3S HV: Outline of KVM-HV HPT resizing implementation
b5baa68773150772c275b4af1bb31327200cfc05 KVM: PPC: Book3S HV: KVM-HV HPT resizing implementation
5b73d6347eb82cd2a26698fc339607e25e0ad917 KVM: PPC: Book3S HV: Prevent double-free on HPT resize commit path
dd56af42bd829c6e770ed69812bd65a04eaeb1e4 rcu: Eliminate deadlock between CPU hotplug and expedited grace periods
c8c8b127091b758f5768f906bcdeeb88bc9951ca udp: under rx pressure, try to condense skbs
3174fed9820edc95cff74ad0934c3240c7fb5115 net: skb_condense() can also deal with empty skbs
b451e5d24ba6687c6f0e7319c727a709a1846c06 tcp: avoid fragmenting peculiar skbs in SACK
3fcece12bc1b6dcdf0986f2cd9e8f63b1f9b6aa0 net: store port/representator id in metadata_dst
c78ba6d64c78634a875d1e316676667cabfea256 ipv6: expose RFC4191 route preference via rtnetlink
7487449c86c65202b3b725c4524cb48dd65e4e6f IPv4: early demux can return an error code
bc044e8db7962e727a75b591b9851ff2ac5cf846 udp: perform source validation for mcast early demux
996b44fcef8f216ea0b6b6e74468c5a77b5e341f udp: fix bcast packet reception
86f917adea2dc0ef440a248601e48154dc48e6d0 dm crypt: remove obsolete references to per-CPU state
e944e03e336f7ffa02aabc71291933d93dcd077c dm crypt: replace custom implementation of hex2bin()
3c12016910061c2a19d985fba7f7dec19d6a3a09 dm table: replace while loops with for loops
7083abbbfc4fa706ff72d27d33a5214881979336 dm mpath: avoid that path removal can trigger an infinite loop
23a601248958fa4142d49294352fe8d1fdf3e509 dm rq: check blk_mq_register_dev() return value in dm_mq_init_request_queue()
ca5beb76c32af33e5be4e01c85c8bd5a067c4543 dm mpath: micro-optimize the hot path relative to MPATHF_QUEUE_IF_NO_PATH
9a8ac3ae682e8760afebab71556a9a8d1b18f906 dm mpath: cleanup QUEUE_IF_NO_PATH bit manipulation by introducing assign_bit()
86331f39a5935b092d3ea59446d416563ed05d16 dm mpath: make it easier to detect unintended I/O request flushes
00a0ea33b495ee6149bf5a77ac5807ce87323abb dm thin: do not queue freed thin mapping for next stage processing
1c23484c355ec360ca2f37914f8a4802c6baeead dm mpath: do not lock up a CPU with requeuing activity
dc6364b5170dc446fca076d6523aaebc339d6511 dm rq: do not update rq partially in each ending bio
5916a22b83041b07d63191fe06206ae0fff6ec7a dm: constify argument arrays
41dcf197ad5373a7dd0a4b6572aec2e3ec6a0e49 dm raid: fix incorrect status output at the end of a "recover" process
62e082430ea4bb5b28909ca4375bb683931e22aa dm ioctl: fix alignment of event number in the device list
6eb7bd66830c1e1919aa4006d7eb288873b0f806 Bluetooth: btmrvl: disable platform wakeup interrupt in suspend failure path
12f348b9dcf6d9616c86a049c3c8700f9dc0af55 SELinux: rename SE_SBLABELSUPP to SBLABEL_MNT
cfca0303da0e2c3f570cb5cfc7c373828e6c13a2 SELinux: renumber the superblock options
1ea0ce40690dff38935538e8dab7b12683ded0d3 selinux: allow changing labels for cgroupfs
2651225b5ebcdde60f684c4db8ec7e9e3800a74f selinux: wrap cgroup seclabel support with its own policy capability
901ef845fa2469c211ce3b1e955d9e7245ab5d50 selinux: allow per-file labeling for cgroupfs
af63f4193f9fbbbac50fc766417d74735afd87ef selinux: Generalize support for NNP/nosuid SELinux domain transitions
038e893d78037b5876771f84722b459b3916bfaf tg3: Add the ability to conditionally build w/ HWMON
93e14b6d776e850a371fe4234a06088f210d8651 tun: add device name(iff) field to proc fdinfo entry
5228b3280b9bb8fa6aef59f891cca64a028e9b36 nvme: fix uninitialized prp2 value on small transfers
c12176d3368b9b36ae484d323d41e94be26f9b65 memcg: fix thresholds for 32b architectures.
6693f9f96a0936488dd7876b8079933786e27b1b pinctrl: intel: Add Intel Gemini Lake pin controller support
18f098618aa031f4c8a907c550fcd6785280c977 drivers/hv: Move VMBus hypercall codes into Hyper-V UAPI header
670718161852c6acdb8d6bca6a73510f7b9f4320 hyperv: fix warning about missing prototype
a33fd4c27b3ad11c66bdadc5fe6075297ca87a6d Drivers: hv: Issue explicit EOI when autoeoi is not enabled
79cadff2d92bb8b1448f6dba6861d15adc3dc4cb x86/hyper-v: Include hyperv/ only when CONFIG_HYPERV is set
fc53662f13b889a5a1c069e79ee1e3d4534df132 x86/hyper-v: Make hv_do_hypercall() inline
6a8edbd0c54ae266b12f4f63e406313481c9d4bc x86/hyper-v: Introduce fast hypercall implementation
806c89273bab0c8af0202a6fb6279f36042cb2e6 x86/hyper-v: Implement rep hypercalls
7415aea6072bab15969b6c3c5b2a193d88095326 hyper-v: Globalize vp_index
9e52fc2b50de3a1c08b44f94c610fbe998c0031a x86/mm: Enable RCU based page table freeing (CONFIG_HAVE_RCU_TABLE_FREE=y)
2ffd9e33ce4af4e8cfa3e17bf493defe8474e2eb x86/hyper-v: Use hypercall for remote TLB flush
628f54cc6451d2706ba8a56763dbf93be02aaa80 x86/hyper-v: Support extended CPU ranges for TLB flush hypercalls
773b79f7a7c7839fb9d09c0e206734173a8b0a6b tracing/hyper-v: Trace hyperv_mmu_flush_tlb_others()
a3b7424392924e778b608e30ee321f7b10cc94b8 x86/hyperv: Clear vCPU banks between calls to avoid flushing unneeded vCPUs
60d73a7c96601434dfdb56d5b9167ff3b850d8d7 x86/hyperv: Don't use percpu areas for pcpu_flush/pcpu_flush_ex structures
ab7ff471aa5db670197070760f022622793da7e5 x86/hyperv: Fix hypercalls with extended CPU ranges for TLB flushing
93bf4172481c4b2a8544c83a687946252563edd0 kvm/x86: Hyper-V internal helper to read MSR HV_X64_MSR_TIME_REF_COUNT
0d6dd2ff8206dc1da3428d5b1611f6304d481dab KVM: x86: always fill in vcpu->arch.hv_clock
095cf55df715d14d5dad75326faf5984e7fc0b3a KVM: x86: Hyper-V tsc page setup
3f5ad8be3713572f3946b69eb376206153d0ea2d KVM: hyperv: fix locking of struct kvm_hv fields
28a0bc4120d38a394499382ba21d6965a67a3703 scsi: sd: Implement blacklist option for WRITE SAME w/ UNMAP
48fa362b6c3f4d69bdb6310b46626049092475e0 nvmet-fc: simplify sg list handling
56b7103a06083b8ce1160f8289460ba2f584e182 nvme-fc: remove use of FC-specific error codes
29b3d26ecc8046838de88205b7c4b182ac27ff65 nvmet-fc: remove use of FC-specific error codes
fc9608e8b4dc3c2545fa0bc5d3eef158ca56ccf8 nvmet-fcloop: remove use of FC-specific error codes
8e009ce84683fa124b23ff5cb7fd87c48b331b88 lpfc: remove use of FC-specific error codes
0951338d9677f546e230685d68631dfd3f81cca5 nvme: allow timed-out ios to retry
6b71f9e1e849f82abb4a8d54ce7f4b1c71f19ac4 nvmet-fc: sync header templates with comments
5f5685569ae8fccb0344373d823f2e4c59bb3d8e nvme-fc: create fc class and transport device
469d0ef06debe29ec60350b9976a520c4ad5a1e8 nvme-fc: move remote port get/put/free location
0a02e39fd1eb2ceb3dd0dc765cb2de4d09697a14 nvme-fc: correct io termination handling
8a82dbf19129dde9e6fc9ab25a00dbc7569abe6a nvme-fc: fix iowait hang
17c4dc6eb7e1b2fb1ce6a52467e3be635224606e nvme-fc: retry initial controller connections 3 times
cca678dfbad4954d53e58ca6b132b306c56f4423 scsi: fnic: switch to pci_alloc_irq_vectors
24391c0dc57c3756a219defaa781e68637d6ab7d blk-mq: add tag allocation policy
88459642cba452630326b9cab1c651e09577d4e4 blk-mq: abstract tag allocation out into sbitmap library
48e28166a7b608e19a6aea3acadd81cdfe660f6b sbitmap: allocate wait queues on a specific node
40aabb67464d5aad9ca3d2a5fedee56e2ff45aa0 sbitmap: push per-cpu last_tag into sbitmap_queue
f4a644db86669d938c71f19560aebf69d4720d63 sbitmap: push alloc policy into sbitmap_queue
98d95416dbfaf4910caadfb4ddc75e4aacbdff8c sbitmap: randomize initial alloc_hint values
05fd095d53b979878f016c3a7080d3683cc89d72 sbitmap: re-initialize allocation hints after resize
5c64a8df0ca88c79c9cb74674c2481e5f7ede511 sbitmap: don't update the allocation hint on clear after resize
60658e0dc1df058607990278fdf9d831e0c2c71a sbitmap: initialize weight to zero
841bac2c87fc21c3ecf3bc3354855921735aeec1 blk-mq: get rid of manual run of queue with __blk_mq_run_hw_queue()
63581af3f31e0dbea112b83f77c4fbb6a10e1406 blk-mq: remove non-blocking pass in blk_mq_map_request
2552e3f878c2b43b41d7728a328821d8220c28da blk-mq: get rid of confusing blk_map_ctx structure
72ef799b3f14f4cb4c56ba3af6e6bdcbae6df368 block: do not merge requests without consulting with io scheduler
c51ca6cf545bc51ad38bd50816bde37c647d608d block: move existing elevator ops to union
2c3ad667902ef6f4b60ef0a3c6f7d8c2b007769a blk-mq: export some helpers we need to the scheduling framework
4941115bef2bc891aa00a2f0edeaf06dc982325a blk-mq-tag: cleanup the normal/reserved tag allocation
cc71a6f43886a8af57dbbce2a45b4b2aaf570fe6 blk-mq: abstract out helpers for allocating/freeing tag maps
2af8cbe30531eca73c8f3ba277f155fc0020b01a blk-mq: split tag ->rqs[] into two
bd166ef183c263c5ced656d49ef19c7da4adc774 blk-mq-sched: add framework for MQ capable IO schedulers
d34849913819a5e0cbfbe724dbe79df89278c524 blk-mq-sched: allow setting of default IO scheduler
4d199c6f1c847151ea393d5b9946a17cc57cdf6d blk-cgroup: ensure that we clear the stop bit on quiesced queues
f66227de5924ed0fde1823f5cbc4d8b8f45faaa2 sbitmap: use smp_mb__after_atomic() in sbq_wake_up()
6c0ca7ae292adea09b8bdd33a524bb9326c3e989 sbitmap: fix wakeup hang after sbq resize
38dbb7dd4db184da4d2673f4bb963f7006465c37 blk-cgroup: don't quiesce the queue on policy activate/deactivate
610d886c0c22fa7504e817b6d03c402de64b0264 elevator: fix unnecessary put of elevator in failure case
8cecb07d70e761eb0112f921d939b9ab2ea2171f blk-mq-tag: remove redundant check for 'data->hctx' being non-NULL
70f36b6001bf596eb411c4b302e84c4824ae8730 blk-mq: allow resize of scheduler requests
200e86b3372b51e136a382e007b6b904b1dac7e4 blk-mq: only apply active queue tag throttling for driver tags
5a797e00dc93593c9915841779881b15d9856237 blk-mq: don't lose flags passed in to blk_mq_alloc_request()
b48fda0976a802e0fe4fc0bedefb7cf380ec6426 blk-mq-sched: check for successful allocation before assigning tag
0abad774124351ba211b9053786ebd5a5a722d53 blk-mq: improve scheduler queue sync/async running
3c782d67c16889d753a79a8da5422c583d7cfd51 blk-mq: fix potential race in queue restart and driver tag allocation
99cf1dc580f0766825395aae4f60ec1d8438f011 blk-mq: release driver tag on a requeue event
50e1dab86aa2c10cbca2f754aae9542169403141 blk-mq-sched: fix starvation for multiple hardware queues and shared tags
c13660a08c8b3bb49def4374bfd414aaaa564662 blk-mq-sched: change ->dispatch_requests() to ->dispatch_request()
bd6737f1ae92e2f1c6e8362efe96dbe7f18fa07d blk-mq-sched: add flush insertion into blk_mq_sched_insert_request()
12d70958a2e8d587acaa51dafd5d6620e00b7543 blk-mq: don't fail allocating driver tag for stopped hw queue
b973cb7e89fe3dcc2bc72c5b3aa7a3bfd9d0e6d5 blk-merge: return the merged request
0cacba6cf8252438f8166bd3fa1c3370dd28a769 blk-mq-sched: bypass the scheduler for flushes entirely
e4d750c97794ea2bab793d4c518b1f4006364588 block: free merged request in the caller
e0c723000966ae285295caaa8cda914dfa177fa4 block: factor out req_set_nomerge
6cf7677f1a94546e472658290b3b8bdbb16cc045 block: move req_set_nomerge to blk.h
f1ba82616c3368e1ae9e64ef29cf3edc1be0860d blk-mq: pass bio to blk_mq_sched_get_rq_priv
b410aff2bd9f101bc096069612391aecce204cd1 block: do not allow updates through sysfs until registration completes
c7a571b45055dba740156013fef4a7fdbe3262d9 blk-mq-sched: don't add flushes to the head of requeue queue
0c2a6fe4dc3e8c24bc67cd5d0a36092834027cf0 blk-mq: don't special case flush inserts for blk-mq-sched
64765a75ef258c802f795558d00a5a1864c531fc blk-mq-sched: ask scheduler for work, if we failed dispatching leftovers
415b806de5576b656f3ff94366589af9a161d0c8 blk-mq-sched: Allocate sched reserved tags as specified in the original queue tagset
6d2809d51a5079f01a416d91dd63b0766cb685d0 blk-mq: make blk_mq_alloc_request_hctx() allocate a scheduler request
59748398992c9c3e9d600e56cb2a5c0c546fe129 blk-mq: kill blk_mq_set_alloc_data()
562bef4259776c19cb2423d43af1f99183910a4d blk-mq: move update of tags->rqs to __blk_mq_alloc_request()
9c62110454b088b4914ffe375c2dbc19643eac34 blk-mq-sched: don't run the queue async from blk_mq_try_issue_directly()
3e06eb3dacdff52749df85694cf6bc48283973c6 block: do not put mq context in blk_mq_alloc_request_hctx
81380ca10778b99dce98940cfc993214712df335 blk-mq: use the right hctx when getting a driver tag fails
6917ff0b5bd4139e08a3f3146529dcb3b95ba7a6 blk-mq-sched: refactor scheduler initialization
93252632e828da3e90241a1c0e766556abf71598 blk-mq-sched: set up scheduler tags when bringing up new queues
54d5329d425650fafaf90660a139c771d2d49cae blk-mq-sched: fix crash in switch error path
ebe8bddb6e30d7a02775b9972099271fc5910f37 blk-mq: remap queues when adding/removing hardware queues
7642747d674aff1f7cfe74ad9af7e9b12ab1d5ee blk-mq: remove BLK_MQ_F_DEFER_ISSUE
254d259da0c3cb77f03a2adb8959c293f638a3d2 blk-mq: merge mq and sq make_request instances
5eb6126e1c5c5b69d90003444acc99743881b7b7 blk-mq: improve blk_mq_try_issue_directly
2299722c4b117af867425d097e470c8566e0c82e blk-mq: split the plug and sync cases in blk_mq_make_request
a4d907b6a33ba22adbbfc443e22eb3c1aa2c73f6 blk-mq: streamline blk_mq_make_request
bf4907c05e615f6a1811d61c58d56da52f7e9954 blk-mq: fix schedule-under-preempt for blocking drivers
da55f2cc78418dee88400aafbbaed19d7ac8188e blk-mq: use sbq wait queues instead of restart for driver tags
d38d35155514ceef5efb79f6d5b4f0f1638da5b4 blk-mq-sched: separate mark hctx and queue restart operations
ee056f98126170ca8b16b9a4a6e20aae7c5c184e blk-mq-sched: provide hooks for initializing hardware queue data
807b10417b23f1e1a35fccc7ede2c3886d39c303 blk-mq: make driver tag failure path easier to follow
d945a365a0686a37618503622954f8dc169b8bca blk-mq: use true instead of 1 for blk_mq_queue_data.last
b00c53e8f411a0b2be036c41852c6858541afbf7 blk-mq: fix schedule-while-atomic with scheduler attached
abc25a693091e61537e40dfe24e8ee5deaf08208 blk-mq: Fix preempt count imbalance
b86dd815ff74ab9eda474d1c28428ac0db2c3032 block: get rid of blk-mq default scheduler choice Kconfig entries
dad7a3be4960e5545882a0cd8d7613af22874314 blk-mq: pass correct hctx to blk_mq_try_issue_directly
d964f04a8fde84d978eff0d96561faa6e8de24de blk-mq: fix direct issue
cf43e6be865a582ba66ee4747ae27a0513f6bba1 block: add scalable completion tracking of requests
209200efa3db3d09380ee7c796efa73d900d5f3a blk-stat: fix a typo
7cd54aa8438947602cf68eda1db327822b9b8e6b blk-stat: fix a few cases of missing batch flushing
07e4fead45e6e1932f0b960655ab554b6aab6a08 blk-mq: create debugfs directory tree
9abb2ad21e8b9b7a2555411fbee225a508cf962d blk-mq: add hctx->{state,flags} to debugfs
950cd7e9ffdc44c340b8914126b39cc079f0c844 blk-mq: move hctx->dispatch and ctx->rq_list from sysfs to debugfs
7b3938524cfbd7abd1814d879ecfcd2e2a9aa775 blk-mq: add extra request information to debugfs
24af1ccfe12adddbe17d11801e1689791a4cc282 sbitmap: add helpers for dumping to a seq_file
0bfa5288a78176be8a895ce65dbbf61f63f54b96 blk-mq: export software queue pending map to debugfs
d96b37c0af3e4f42928a1361d5cd9f4f8921b4a8 blk-mq: move tags and sched_tags info from sysfs to debugfs
d7e3621ad1e48f08dc14c34e353af69f7c35cb20 blk-mq: add tags and sched_tags bitmaps to debugfs
be21547318b2c7d9988237b106cc63767b86eae4 blk-mq: move hctx io_poll, stats, and dispatched from sysfs to debugfs
4a46f05ebf9921dcba35770106e42574d323d6dd blk-mq: move hctx and ctx counters from sysfs to debugfs
400f73b23f457a82288814e21af57dbc9f3f2afd blk-mq: fix debugfs compilation issues
f3bcb0e60685acfc258a20caa0607e084271c482 blk-mq-debugfs: Add missing __acquires() / __releases() annotations
a1ae0f74a73fbd113647321c49032a561b3f3781 blk-mq-debug: Avoid that sparse complains about req_flags_t usage
8c0f14eab8f138689e68b3498c0c5fd6ff20a948 blk-mq-debug: Make show() operations interruptible
72f2f8f6929cf680d42ca44f87b7d370aff94d85 blk-mq-debug: Introduce debugfs_create_files()
03796c149a99e14506db9de3adba710c26f83ba9 block: fix debugfs config conditional in struct request_queue
18fbda91c6370d520278db9ee1e768b59ef5c4ab block: use same block debugfs directory for blk-mq and blktrace
62ebce16c0ac2ffac44e32f931a2d8f6e749be4c blk-mq: move debugfs_remove() of disk dir to blk_release_queue()
efd4b81abbe1ac753717f2f10cd3dab8bed6c103 blk-stat: fix blk_stat_sum() if all samples are batched
fa2e39cb9ee78f440d99a1bcfa47462c48a6fc11 blk-stat: use READ and WRITE instead of BLK_STAT_{READ,WRITE}
4875253fddd7b6d322f028ad023d44b6efb7f73b blk-stat: move BLK_RQ_STAT_BATCH definition to blk-stat.c
34dbad5d26e2f4b88e60f0e9ad03f99480802812 blk-stat: convert to callback-based statistics reporting
a83b576c9c25cf771fb0b15ec5eb2e7510ec2f5a block: fix stacked driver stats init and free
0c9539a431bd4e4cbe475eb17e587f3ac06f2ae2 blk-mq: fix leak of q->stats
125c99bc8b6b108d251169a86324a7ed3c6f3cce scsi: add new scsi-command flag for tagged commands
c05e66733788118377c21a913c1bc7b64bccc167 sbitmap: add sbitmap_get_shallow() operation
229a92873f3afc20b0d91aaaec08cbc11689dd8b blk-mq: add shallow depth option for blk_mq_get_tag()
c05f8525f67b7d6489b0502211d4ed35622d9beb blk-mq-sched: make completed_request() callback more useful
00e043936e9a1c274c29366c7ecd9e17c79418e6 blk-mq: introduce Kyber multiqueue I/O scheduler
a37244e4cc5766af68004ad6249fcd0e4694b441 blk-stat: convert blk-stat bucket callback to signed
32825c45ff8f4cce937ab85b030dc693ceb1aa0a blk-mq-sched: fix performance regression of mq-deadline
6d8c6c0f97ad8a3517c42b179c1dc8e77397d0e2 blk-mq: Restart a single queue if tag sets are shared
8e8320c9315c47a6a090188720ccff32a6a6ba18 blk-mq: fix performance regression with shared tags
113285b473824922498d07d7f82459507b9792eb blk-mq: ensure that bd->last is always set correctly
ab42f35d9cb5ac49b5a2a11f940e74f58f207280 blk-mq: merge bio into sw queue before plugging
d278d4a8892f13b6a9eb6102b356402f0e062324 block: add code to track actual device queue depth
91d68905aee08a79b9ba82676c834fc670d722a0 blk-mq: Export queue state through /sys/kernel/debug/block/*/state
f5c0b0910ac4c1bc93474d7593cc73622fdfc822 blk-mq: Show symbolic names for hctx state and flags
2d0364c8c1a97a1d44760895a982221c06af0f35 blk-mq: Register <dev>/queue/mq after having registered <dev>/queue
4c9e4019f1880bea7ae6e9603d14c2ed0f1c4e23 blk-mq: Let blk_mq_debugfs_register() look up the queue name
62d6c9496a2bded5262ac9f675b27facb3cd4ce8 blk-mq-debugfs: Rename functions for registering and unregistering the mq directory
f05d1ba7871a2c20ca9ebb303aac89c9296d1f58 blk-mq: Only unregister hctxs for which registration succeeded
65ca1ca32ca359e9d75a6fd293128d188dfc0d8a blk-mq: Move the "state" debugfs attribute one level down
fd07dc81850e8bf26046bf7ccd7430211c9c5910 blk-mq: Make blk_flags_show() callers append a newline character
8658dca8bd5666f50e02400f844079e520641d8c blk-mq: Show operation, cmd_flags and rq_flags names
bec03d6b92264bb2a06cc3d6f2da5815f0585107 blk-mq-debugfs: separate flags with |
1a435111f8eb30b370e3891caebb1d1ca61f41ec blk-mq-debugfs: clean up flag definitions
c7e4145ae11b45931f117aa64c26be6cf58302df blk-mq-debugfs: error on long write to queue "state" file
71b90511cb170dd3e13b640cc1a453b2dd92e023 blk-mq-debugfs: don't open code strstrip()
88aabbd7e7ace77fb3fbf06d22dd3cc0bfc0ca79 blk-mq-debugfs: rename hw queue directories from <n> to hctx<n>
f57de23ac9019ea84c548a1637d5562ef07a8f7e blk-mq-debugfs: get rid of a bunch of boilerplate
18d4d7d0571f5acc9de638ea3a33e8064deaceca blk-mq: Do not invoke queue operations on a dead queue
d173a25165c124442182f6b21d0c2ec381a0eebe blk-mq: move debugfs declarations to a separate header file
9c1051aacde828073dbbab5e8e59c0fc802efa9a blk-mq: untangle debugfs and sysfs
d332ce091813d11a46144354baa72b755833392f blk-mq-debugfs: allow schedulers to register debugfs attributes
16b738f651c83a01db057e5db02ec4b830af9130 kyber: add debugfs attributes
daaadb3e9453ab89c2e113a2d1df8e19e30944cc mq-deadline: add debugfs attributes
70e62f4bacdf31ea8a59f241c9229120cd06d9d1 blk-mq-debugfs: fix device sched directory for default scheduler
334335d2f7a077a5ff561d86b0ad43bedd83ca05 block: warn if sharing request queue across gendisks
e9a823fb34a8b0fcba6e112aa1003258a1a5af50 block: fix warning when I/O elevator is changed as request_queue is being removed
d78ada4a767a744cad5efa210b8acf57748b91d7 perf tests attr: Do not store failed events
daefd0bc0bd28cea2e6b2f3e1a9da005cd4f58fc perf stat: Add support to measure SMI cost
b7b7c7821d932ba18ef6c8eafc8536066b4c2ef4 perf/x86: Add an MSR PMU driver
19b3340cf58d14decf2898fc795cc2b1fa49e79e perf/x86: Fix MSR PMU driver
82819ffb42fb45197bacf3223191deca31d3eb91 perf/x86/msr: Fix the MSR driver build
7e5560a5648ab2bce7199c73b9c2a51b846f5541 perf/x86: Change test_aperfmperf() and test_intel() to static
78e3c7951021b4e1a554b3d619506b55b0619073 arch/x86/kernel/cpu/perf_event_msr.c: use sign_extend64() for sign extension
65a27a3510c82f16e673548b4c819462fabb12ae perf/x86: Move perf_event_msr.c .............. => x86/events/msr.c
8a22426184774d7ced9c1d3aa4d95d34101fb3be perf/x86/msr: Add AMD PTSC (Performance Time-Stamp Counter) support
3c3116b745c08dc76ccbed7223c4edddcfd9a186 perf/x86/msr: Fix SMI overflow
353bf605a771e3c86b21de017e9525aba7d64770 perf/x86/msr: Use Intel family macros for MSR events code
5134596caee9e834d2486edc45efad4c9e6effc3 perf/x86/msr: Add missing Intel models
e1b8ad8e78301b98363feb0b8c1db199e4877cb2 HID: i2c-hid: Stop querying for init reports
ba1660f1791f31a76da247caebf273b3f3d5071c HID: i2c-hid: fix build
9143059fafd4eebed2d43ffb5455178d4010e60a HID: remove initial reading of reports at connect
2562756dde550901c224e3805102bdfc17e7d13a HID: add Alps I2C HID Touchpad-Stick support
41f61ecc501ca970ae8d9955c57405dc4abfab5a HID: alps: struct u1_dev *priv is internal to the driver
63b3a7d0f933ebf25961e602c2eb11d658fef912 HID: alps: pass correct sizes to hid_hw_raw_request()
819d64e51d6260f8f7ef352cf42fc1ea67a0f7db HID: alps: a few cleanups
04fd4cb0b098789725d04e9d4a7e7dda373b1121 HID: alps: fix stick device not working after resume
46a41b512f6800b531e94bdf5f1ca0e226492d91 HID: alps: fix error return code in alps_input_configured()
9a54cf462d6f3c383a5a4f5fe15c020a03db44e6 HID: alps: fix multitouch cursor issue
504c932c7c47a6b4c572302a13873f7d83af1ff3 HID: multitouch: Support PTP Stick and Touchpad device
7fd2561e4ebdd070ebba6d3326c4c5b13942323f net: ipv6: Add a sysctl to make optimistic addresses useful candidates
16186a82de1fdd868255448274e64ae2616e2640 ipv6: addrconf: Fix recursive spin lock call
35e015e1f5773417952fe91ce8790baf9b4237a2 ipv6: fix net.ipv6.conf.all interface DAD handlers
a2d3f3e33853ef52e5f66b41c3e8ee5710aa3305 ipv6: fix net.ipv6.conf.all.accept_dad behaviour for real
f174cdbe5ba7ff4e25fe20f3801607d648aea8d3 fm10k: Replace ndo_add/del_vxlan_port with ndo_add/del_udp_enc_port
1938ee1fd3de74d761a60806b048df652666afec net: Remove deprecated tunnel specific UDP offload functions
c6fcc4fc5f8b592600c7409e769ab68da0fb1eca vxlan: avoid using stale vxlan socket.
4053ab1bf98dd128344b9e67ef139f931a967ae1 vxlan: hide unused local variable
03dc52a86d58c70577d9f62527f68db9116f61a5 vxlan: avoid checking socket multiple times.
c46b7897ad5ba49b215882fa6a1e4c28d21acf4f vxlan: simplify exception handling
655c3de16540b8496273514658a6ad4cb31e01b4 vxlan: improve vxlan route lookup checks.
fee1fad7c73dd006f50115ddc538a2e20f3b0c6c vxlan: simplify RTF_LOCAL handling.
0770b53bd276a7b7846a185ec8a8f1188f135f7f vxlan: simplify vxlan xmit
8ebd115bb23ac42f14a5e242500be61d8606b82d vxlan: Fix uninitialized variable warnings.
4ecb1d83f6abe8d49163427f4d431ebe98f8bd5f vxlan: Set ports in flow key when doing route lookups
1f6cc07e170364212b6d81321f79f166089a60d9 vxlan: preserve type of dst_port parm for encap_bypass_if_local()
8b3f9337e17aaf710c79e65fd0a3c572a075f498 vxlan: don't flush static fdb entries on admin down
3ad7a4b141ebd6091494913672d7166d5c2764e4 vxlan: support fdb and learning in COLLECT_METADATA mode
98eb253cbde7e860fad83fa759058269ca69916d vxlan: remove vni zero check and drop for COLLECT_METADATA
8bcdc4f3a20be949df54b67e5ae2734daabb5792 vxlan: add changelink support
1158632b5a2dcce0786c1b1b99654e81cc867981 vxlan: don't allow overwrite of config src addr
56de859e9967c070464a9a9f4f18d73f9447298e vxlan: lock RCU on TX path
c80498e36d4ef3e24599d363c622fbf22a1293cc vxlan: fix ovs support
f1fb08f6337ca9e3af371a7994b91a5786ba93f9 vxlan: fix ND proxy when skb doesn't have transport header offset
57d88182ea3e8763111882671fd7462289272f64 vxlan: use a more suitable function when assigning NULL
a985343ba90635cda3f3704f71021254c91cebbd vxlan: refactor verification and application of configuration
dc5321d79697db1b610c25fa4fad1aec7533ea3e vxlan: get rid of redundant vxlan_dev.flags
ce44a4aea5e4203147013759a363c17b2ee5132b vxlan: improve validation of address family configuration
0f22a3c68d5fd1696dbc15c45d7ea375c865b7a1 vxlan: check valid combinations of address scopes
87613de95041a88e426105d05a53acece52fd81e vxlan: fix snooping for link-local IPv6 addresses
49f810f00fa347427fa8cba2197b303234842d25 vxlan: allow multiple VXLANs with same VNI for IPv6 link-local addresses
019b13ae85260cfab9d7ccb6ca58f094d18a24fd vxlan: fix incorrect nlattr access in MTU check
889ce937c98f1f969137a8a2ee78627c1537d4b3 vxlan: correctly set vxlan->net when creating the device in a netns
d764a122cc7af7ab1c40c08745f0fcd33cc2f7db net: add new netdevice feature for offload of RX port for UDP tunnels
7a27fc6d536b36a29c0ed4bfff7035420f4df216 net: check UDP tunnel RX port offload feature before calling tunnel ndo ndo
296d8ee37c50f139d934bdefbab85509b2e4a525 net: add infrastructure to un-offload UDP tunnel port
2d2b13fcfff101daa5388c5edac0ae5e3bcc6878 geneve/vxlan: add support for NETDEV_UDP_TUNNEL_DROP_INFO
04584957b5f9b036caa9603525e12d1840d42d58 geneve/vxlan: offload ports on register/unregister events
155e6f649757c902901e599c268f8b575ddac1f8 ether: add NSH ethertype
56022a8fdd874c56bb61d8c82559e43044d1aa06 ipv4: arp: update neighbour address when a gratuitous arp is received and arp_accept is set
23d268eb240954e6e78f7cfab04f2b1e79f84489 arp: honour gratuitous ARP _replies_
34eb5fe07831458cf8238d54c1fc847dedeaf68c arp: fixed error in a comment
6fd05633bdafc0ae6ec0d55e61af10780d4d3530 arp: decompose is_garp logic into a separate function
d9ef2e7bf99f59179b89d5c1c4d5b4919375daee arp: postpone addr_type calculation to as late as possible
7d472a59c0e5ec117220a05de6b370447fb6cb66 arp: always override existing neigh entries with gratuitous ARP
5990baaa6d7b437dfcf58b7021ca56b1d6b35869 arp: fixed -Wuninitialized compiler warning
568af6de058cb2b0c5b98d98ffcf37cdc6bc38a7 netfilter: nf_tables: set pktinfo->thoff at AH header if found
34d8acd8aabb6e070b6fb718909db80458ef32ec net: bridge: shorten ageing time on topology change
1f90c7f3470580e24da25f6a6c1fb480ed9371ac bridge: modify bridge and port to have often accessed fields in one cache line
f7cdee8a79a1cb03fa9ca71b825e72f880b344e1 bridge: move to workqueue gc
bfd0aeac52f74bfb44c0974131e44abb33a13e78 bridge: fdb: converge fdb searching functions into one
410b3d48f5111a28bb8d4c3d3dc5984c1baf7fc9 bridge: fdb: add proper lock checks in searching functions
5019ab50f26c247abb510a80635b25b64b6c1f4b bridge: fdb: converge fdb_delete_by functions into one
d12c917691b45d9dffcfe7c2362d25caa40905fd bridge: resolve a false alarm of lockdep
0baa10fff2c8a8a0e3bca8fb43112ed93c179c38 net: bridge: Add support for calling FDB external learning under rcu
b74fd306ef2d48781e807dd506cca818bb83d749 bridge: fdb add and delete tracepoints
e3cfddd577e763496c25ddb855cfff48b1174b63 bridge: add tracepoint in br_fdb_update
5491e7c6b1a95df39b917e16f2eeddc84f9e8491 macsec: enable GRO and RPS on macsec devices
e0f841f5cbf2a195c63f3441f3d8ef1cd2bdeeed macsec: Fix header length if SCI is added if explicitly disabled
863483c970e968efd6a119a2118f57977d04cefe macsec: double accounting of dropped rx/tx packets
e23ed762db7ed1950a6408c3be80bc56909ab3d4 netfilter: ipset: pernet ops must be unregistered last
916cda1aa1b412d7cf2991c3af7479544942d121 s390: add a system call for guarded storage
e525f8a6e696210d15f8b8277d4da12fc4add299 s390/gs: add regset for the guarded storage broadcast control block
f5bbd7219891364a6ba1231cb751905045fd4466 s390/ptrace: guarded storage regset for the current task
152125b7a882df36a55a8eadbea6d0edf1461ee7 s390/mm: implement dirty bits for large segment table entries
6a5c1482e2b700e89f174ddb42434b37f15abccd s390/mm: remove change bit override support
cfb0b24143b4f587ff3e3bd829f9f471285d097b s390/mm: make use of ipte range facility
4ccccc522bd22ba8e272f95daca5ab92eb0387a0 s390/pgtable: introduce and use generic csp inline asm
2dffdcbac91c8da1eb0663d6eab92f2e5b56a798 s390/vmem: introduce and use SEGMENT_KERNEL and REGION3_KERNEL
3e76ee99b095e5bee71165fda5edbe6b66b39700 s390/mm: always use PAGE_KERNEL when mapping pages
9e20b4dac1f58921503109ea38f341ff2b0d21f5 s390/pgtable: make pmd and pud helper functions available
e8a97e42dc986a081017b1e77e3a3c7f02a0a638 s390/pageattr: allow kernel page table splitting
bab247ff5f669216e3ed2f9a4034c540187e874c s390/vmem: simplify vmem code for read-only mappings
57d7f939e7bdd746992f5c318a78697ba837c523 s390: add no-execute support
1366def38b6ab574dd0dbf95e308c7d115e73796 s390/pageattr: avoid unnecessary page table splitting
4d81aaa53c2dea220ddf88e19c33033d6cf4f8cb s390/pageattr: handle numpages parameter correctly
7d969d2e8890f546c8cec634b3aa5f57d4eef883 s390/qeth: size calculation outbound buffers
1b030478166cdbdffe9bcffadc32558b4b511869 s390/diag: add diag26c support
ec61bd2fd2a27bf7368261b230ef54fe34d1cce3 s390/qeth: use diag26c to get MAC address on L2
985a9d20daa67e1983910fcf6e4f348ce8eed086 s390/crypto: Renaming PPNO to PRNO.
f75fa65d70e2423a03c1b7391bfca410d554b1c5 s390/crypto: Add new subfunctions to the cpacf PRNO function.
4c637cd8de43416c1b1eef6113e7aa06abacf18d s390/crypto: Provide s390 specific arch random functionality.
bbcb478e3fefa5d9acff6a5311073fae0809a9c3 s390/trng: Introduce s390 TRNG device driver.
10a515ddb5f19a1ff0b9882c430b4427843169f3 hwrng: remember rng chosen by user
2dc9215d7c94f7f9f34ccf8b1710ad73d82f6216 power_supply: Move run-time configuration to separate structure
bc1540561c9ede1efb6d7bf44804676d3d02a3cc power_supply: Add API for safe access of power supply function attrs
297d716f6260cc9421d971b124ca196b957ee458 power_supply: Change ownership from driver to core
1a352462b5377ac68f5955d674b3460c7bac52a3 power_supply: Add power_supply_put for decrementing device reference counter
03e81acce5568c7105dc5bef6984c8b0edfe8d45 power_supply: Increment power supply use counter when obtaining references
8e59c7f23410d5ca6b350a178b861a3d68c49edf power_supply: Fix NULL pointer dereference during bq27x00_battery probe
7f1a57fdd6cb6e7be2ed31878a34655df38e1861 power_supply: Fix possible NULL pointer dereference on early uevent
e380538529e83c5d3fd27e8cbfcc1f9799cb6bbb power_supply: fix return value of get_property
49005b9fd05249d537363ff86cb41f07f48c847a HID: wacom: Refactor button-to-key translation into function
ac2423c975dbd3e8c2afc6dec53ee25be38f723b HID: wacom: generic: add vendor defined touch
4eb220cb35a9c4f69a2438b987bb3d509d56cc80 HID: wacom: generic: add 3 tablet touch keys
4082da80f46a6683439bb0357faadb18f0f5b2a6 HID: wacom: generic: add mode change touch key
d793ff81879a5747109f3106bd18e77662cb5187 HID: wacom: generic: support touch on/off softkey
fc2237a724a9e448599076d7d23497f51e2f7441 HID: introduce hid_is_using_ll_driver
d252f4a10fb9c8f7187c6c936ff530039f8cb799 HID: wacom: Correct coordinate system of touchring and pen twist
a525108cf1cc14651602d678da38fa627a76a724 powerpc/mm/hugetlb: Filter out hugepage size not supported by page table layout
93d87b8fbe6cf17f0ad9552a934b5a6623ccd7d1 net: aquantia: Fixed transient link up/down/up notification
b82ee71a86b0ea66da79a91959d800ffb696a5cb net: aquantia: Enable coalescing management via ethtool interface
0982adc746736a313dac9cb8cc936ca51ca3741a x86/boot/KASLR: Work around firmware bugs by excluding EFI_BOOT_SERVICES_* and EFI_LOADER_* from KASLR's choice
a44cb9449182fd7b25bf5f1cc38b7f19e0b96f6d memcg, slab: never try to merge memcg caches
21f54ddae449f4bdd9f1498124901d67202243d9 Using BUG_ON() as an assert() is _never_ acceptable
3ddf40e8c31964b744ff10abb48c8e36a83ec6e7 mm: filemap: fix mapping->nrpages double accounting in fuse
7a0058ec78602da02b34fa2ae3afc523e90d1ab2 s390/kexec: consolidate crash_map/unmap_reserved_pages() and arch_kexec_protect(unprotect)_crashkres()
caba4cbbd27d755572730801ac34fe063fc40a32 debugobjects: Make kmemleak ignore debug objects
eefa864b701d78dc9753c70a3540a2e9ae192595 mm/page_ext: resurrect struct page extending code for debugging
e30825f1869a75b29a69dc8e0aaaaccc492092cf mm/debug-pagealloc: prepare boottime configurable on/off
031bc5743f158b2d5498294f489e534a31251626 mm/debug-pagealloc: make debug-pagealloc boottime configurable
ea6eabb05b26bd3d6f60b29b77a03bc61479fc0f mm/debug_pagealloc: ask users for default setting of debug_pagealloc
40b44137971c2e5865a78f9f7de274449983ccb5 mm/slab: clean up DEBUG_PAGEALLOC processing code
505f6d22dbc63f333d1178dc80264e40b5c35268 sound: query dynamic DEBUG_PAGEALLOC setting
288cf3c64e4522d28349de5345348574cbe9df83 x86: query dynamic DEBUG_PAGEALLOC setting
a75e1f637cf137f82cf025321e7a53adeeed7029 x86: also use debug_pagealloc_enabled() for free_init_pages
d9ee35acfabbc909c3be4360cd5655a006628b2e x86/mm: Disable 1GB direct mappings when disabling 2MB mappings
10917b8393521b608f26294b3815261d472f7e9b s390: query dynamic DEBUG_PAGEALLOC setting
c1118b3602c2329671ad5ec8bdf8e374323d6343 x86: kvm: use alternatives for VMCALL vs. VMMCALL if kernel text is read-only
8531e283bee66050734fb0e89d53e85fd5ce24a4 PCI: Recognize Thunderbolt devices
3f07c0144132e4f59d88055ac8ff3e691a5fa2b8 sched/headers: Prepare for new header dependencies before moving code to <linux/sched/signal.h>
6e84f31522f931027bf695752087ece278c10d3f sched/headers: Prepare for new header dependencies before moving code to <linux/sched/mm.h>
e601757102cfd3eeae068f53b3bc1234f3a2b2e9 sched/headers: Prepare for new header dependencies before moving code to <linux/sched/clock.h>
ae7e81c077d60507dcec139e40a6d10cf932cf4b sched/headers: Prepare for new header dependencies before moving code to <uapi/linux/sched/types.h>
849f5d894383d25c49132437aa289c9a9c98d5df x86/platform/intel/iosf: Add Braswell PCI ID
23ae2a16bb39d999892a86a65933fe3e9b6b525f x86/platform/iosf_mbi: Move to dedicated folder
528e649b5c79683202a0ccd22e33a41e35f81a0b x86/platform/intel/iosf_mbi: Add a PMIC bus access notifier
5e19b013f55a884c59a14391b22138899d1cc4cc lib: bitmap: add alignment offset for bitmap_find_next_zero_area()
c98ec5ba6cbbaaa98cb4c00888aecf58f7d470c5 drm/i915: Replace tmds_clock_speed and link_rate with just ls_clock
265fa2e18f50cc55c0d0517b29bd5cdd5b4f776f drm/i915: Remove hdmi_connected from LPE audio pdata
a8562e4dec9c835e3c3b77e2ebfcef89dff9efb4 drm/i915: Clean up the LPE audio platform data
8a2d6ae1f737fd22eaeadd0dc32b85c92f239025 ALSA: x86: Register multiple PCM devices for the LPE audio card
3b4477d2dcf2709d0be89e2a8dced3d0f4a017f2 VSOCK: use TCP state constants for sk_state
0b02503384301e4c2db13f1045a1ddbaca2ba0ce VSOCK: add tools/testing/vsock/vsock_diag_test
d764593af924930d5c15685bc5946cb943da1a55 crypto: aesni - AVX and AVX2 version of AESNI-GCM encode and decode
e10f9cb223511cfdc509f5a655f11ff6cbc5508c crypto: aesni - make AVX AES-GCM work with any aadlen
0120af7795c4e526554e7d88f135dd1a028929cf crypto: aesni - make AVX AES-GCM work with all valid auth_tag_len
27352c45c56181b69aa6c2e1aad48f80dd5f9ca8 crypto: aesni - make AVX2 AES-GCM work with any aadlen
2df7e813627622daf1168e30cd2b29467b7e14e5 crypto: aesni - make AVX2 AES-GCM work with all valid auth_tag_len
adf200f31c000d707e4afe238ed1d1199e0cce7c devlink: fix the name of eswitch commands
f43e9b069aeaf0f3d51fa30ddc9c0003e86623b8 net/devlink: Add E-Switch encapsulation control
1555d204e743b6956d2be294a317121f6112238d devlink: Support for pipeline debug (dpipe)
cb6bf9cfdb5e26dfb7eb9b955b2f24d82703e27d devlink: fix return value check in devlink_dpipe_header_put()
6044bd4a7d580d4459b992bc6631c817486a1514 devlink: fix potential memort leak
4456f61cfd2a589c4368fe0b9080b646b9bd470d devlink: allow to fillup eswitch attrs even if mode_get op does not exist
21e3d2dd4a19f842e7d134c341eb584970ff3b32 devlink: rename devlink_eswitch_fill to devlink_nl_eswitch_fill
fceb9c3e38252992bbf1a3028cc2f7b871211533 geneve: avoid using stale geneve socket.
9b4437a5b870cb3875a63beceae5d1984ee19a22 geneve: Unify LWT and netdev handling.
c3ef5aa5e5f853168fe9728f390bfa2141eef4ec geneve: Merge ipv4 and ipv6 geneve_build_skb()
bcceeec3ccc413b11b41bd0559c7e8537ca9916e geneve: Remove redundant socket checks.
2e0b26e1035253bda7587f705f346385352e942d geneve: Optimize geneve device lookup.
31ac1c19455f8aee1872512d62be1f41a497cde0 geneve: fix ip_hdr_len reserved for geneve6 tunnel.
a717e3f740803cc88bd5c9a70c93504f6a368663 geneve: lock RCU on TX path
5e0740c445e6ae4026f5e52456ff8d0be9725183 geneve: fix incorrect setting of UDP checksum flag
11387fe4a98f75d1f4cdb3efe3b42b19205c9df5 geneve: fix fill_info when using collect_metadata
9a1c44d989bff4c992b8b9a112d9fda275ea5515 geneve: fix needed_headroom and max_mtu for collect_metadata
772e97b57a4aa00170ad505a40ffad31d987ce1d geneve: Fix function matching VNI and tunnel ID on big-endian
b8226962b1c49c784aeddb9d2fafbf53dfdc2190 openvswitch: add ct_clear action
2851940ffee313e0ff12540a8e11a8c54dea9c65 netfilter: allow logging from non-init namespaces
1859bac04fb696b858dbbff59503c945ec871bd9 ipv6: remove from fib tree aged out RTF_CACHE dst
d1b3f51ee1eab3a6db1b09a60e61280c48eb0b01 scsi: libfc: fix a deadlock in fc_rport_work
15fd7c74dadc8de5dd6b4a2a146127f035093aa3 scsi: mpt3sas: Adding support for SAS3616 HBA device
6bfe04255d5ed5643ee4c2d9b09b337398f8cb6a nvme: add hostid token to fabric options
3b3387620780fc9699021c85bdce5cb45a763d41 nvme: add duplicate_connect option
36e835f2432d8f16845307b5fb7e88d1e5af041d nvme-rdma: add support for duplicate_connect option
ecad0d2cb8a7997afdc95031ee3328b997aba5c4 nvme-fc: remove NVME_FC_MAX_SEGMENTS
b9637d14dc00d91cef0068cde1f9a8959b051028 scsi: megaraid_sas: Resize MFA frame used for IOC INIT to 4k
2e38a37f23c98d7fad87ff022670060b8a0e2bf5 md/r5cache: disable write back for degraded array
6b6c8110e173ce10f2b169d82a6670001f7184d1 md/raid1, raid10: move rXbio accounting closer to allocation.
37011e3afb0fdc462307dc006246358bddf61e92 md/raid1: stop using bi_phys_segment
78e470c26f524f4706c2555613b9641d85190cbe md: add raid4/5/6 journal mode switching API
0bb0c10500ba634216238c40e1eeddce92b4d488 md/raid5: use consistency_policy to remove journal feature
845b9e229fe0716ab6b4d94b4364c99069667b59 raid5-ppl: use resize_stripes() when enabling or disabling ppl
2214c260c72b0bd94e6c1c19bf451686212025d3 md: don't return -EAGAIN in md_allow_write for external metadata arrays
29efc390b9462582ae95eb9a0b8cd17ab956afc0 md/md0: optimize raid0 discard handling
394ed8e4743b0cfc5496fe49059fbfc2bc8eae35 md: cleanup mddev flag clear for takeover
ddc088238cd6988bb4ac3776f403d7ff9d3c7a63 md: Runtime support for multiple ppls
675dc2ccc27c02449da45e1a03234104c2449f68 raid5-ppl: Recovery support for multiple partial parity logs
588fb2c7e294753d3090a1dc2e7c34e7e3ce5aff capabilities: fix logic for effective root or real root
8c0334697dc37eb3d6d7632304d3a3662248daac sched/topology: Refactor function build_overlap_sched_groups()
c743f0a5c50f2fcbc628526279cfa24f3dabe182 sched/fair, cpumask: Export for_each_cpu_wrap()
0372dd2736e02672ac6e189c31f7d8c02ad543cd sched/topology: Fix building of overlapping sched-groups
91eaed0d61319f58a9f8e43d41a8cbb069b4f73d sched/topology: Simplify build_overlap_sched_groups()
a420b0630362c2c451060e6187e36d72df827134 sched/topology: Verify the first group matches the child domain
f32d782e31bf079f600dcec126ed117b0577e85c sched/topology: Optimize build_group_mask()
c20e1ea4b61c3d99a354d912f2d74822fd2a001d sched/topology: Move comment about asymmetric node setups
af85596c74de2fd9abb87501ae280038ac28a3f4 sched/topology: Remove FORCE_SD_OVERLAP
73bb059f9b8a00c5e1bf2f7ca83138c05d05e600 sched/topology: Fix overlapping sched_group_mask
8d5dc5126bb2bbcebf0b1e061cca2fc02c935620 sched/topology: Small cleanup
1676330ecfa840113a37b25a49afda068380d19c sched/topology: Fix overlapping sched_group_capacity
35a566e6e8a18c3bc16229abeac146a707b8f216 sched/topology: Add a few comments
0c0e776a9b0f21ac41d4c6982c57493928524dba sched/topology: Rewrite get_group()
af218122b103900fa33d408aea0c2468791e698c sched/topology: Simplify sched_group_mask() usage
213c5a459ae0a7ef0a092f576aae2d5db6819360 sched/topology: Fix memory leak in __sdt_alloc()
21bdd17b21b45ea48e06e23918d681afbe0622e9 module: allow multiple calls to MODULE_DEVICE_TABLE() per module
cff26a51da5d206d3baf871e75778da44710219d module: remove MODULE_GENERIC_TABLE
6301939d97d079f0d3dbe71e750f4daf5d39fc33 module: fix types of device tables aliases
0f989f749b51ec1fd94bb5a42f8ad10c8b9f73cb MODULE_DEVICE_TABLE: fix some callsites
f83331bab149e29fa2c49cf102c0cd8c3f1ce9f9 cxgb3: Check and handle the dma mapping errors
d0c2c9973ecd267307543526ae93855e3a3e4b23 net: use core MTU range checking in virt drivers
e1043a4bb9fce6cfc7d55c5767e429a18ac8c4eb xen-netfront, xen-netback: Use correct minimum MTU values
baf64b85445546a38b44052d71782dfe7531e350 perf/x86: Fix incorrect use of do_div() in NMI warning
a75d30c772078546ac00399a94ecdc82df1a4d72 fs/locks: pass kernel struct flock to fcntl_getlk/setlk
52306e882f77d3fd73f91435c41373d634acc5d2 fs/locks: Use allocation rather than the stack in fcntl_getlk()
9d5b86ac13c573795525ecac6ed2db39ab23e2a8 fs/locks: Remove fl_nspid and use fs-specific l_pid for remote locks
6862c44ec5ad0261968c3bc47d23cffb088b6836 gfs2: Fix xattr fsync
c17988a90f92c61164d6b82dd92ce8ade03899c2 net_sched: replace pr_warning with pr_warn
c76f2a2c4c348e2de94b7ba10fcd3640a35d04fa sch_dsmark: use correct func name in print messages
6c80563c2fdd9b32e37e2570e5b1ba9befd591c0 net_sched: act: pick a different type for act_xt
4e8bbb819d1594a01f91b1de83321f68d3e6e245 net: Allow tc changes in user namespaces
4cb28970a23ff209199b0a4358d68efe82c8f493 net: use the new API kvfree()
56b174256b6936ec4c1ed8f3407109ac6929d3ca net: add rbnode to struct sk_buff
22a5dc0e5e3e8fef804230cd73ed7b0afd4c7bae net: sched: Introduce connmark action
d7924450e14ea414568563ec01489f77452b00b4 act_connmark: Add missing dependency on NF_CONNTRACK_MARK
1c1bc6bdb7f529eb3383b6e34a0ea327d7e9f615 net: cls_basic: return from walking on match in basic_get
2dbce096ca3ac18711f72e517ed9674d53310b67 act_connmark: fix dependencies better
30ff54765976e132674e3eae2071ed8ed494665c net: sched: export tc_connmark.h so it is uapi accessible
2b70fe5aba0dd00d81173243c7ab04c66aeb67d8 net: sched: act_connmark: don't zap skb->nfct
e7582bab5d28ea72e07cf2c74632eaf46a6c1a50 net: dev: reduce both ingress hook ifdefs
bd5850d39f10f9d216bff69bcbf5938680b862ae net: sched: pkt_cls: remove unused macros from uapi
a4ffe319ae72034e3f3332698a2fd83b6f063b18 act_connmark: Remember the struct net instead of guessing it.
fdc5432a7b44ab7de17141beec19d946b9344e91 net, sched: add skb_at_tc_ingress helper
1f211a1b929c804100e138c5d3d656992cfd5622 net, sched: add clsact qdisc
3697649ff29e0f647565eed04b27a7779c646a22 bpf: try harder on clones when writing into skb
ddf97ccdd7cb7e00daba465a5c947b8d941dc2a4 net_sched: add network namespace support for tc actions
ef6980b6becb1afd9d82a4f043749a10ae81bf14 introduce IFE action
084e2f6566d2a39c007ed6473f58b551a2eeefeb Support to encoding decoding skb mark on IFE action
200e10f46936d95a553414f249cefb765194b235 Support to encoding decoding skb prio on IFE action
d1491fa54ceecfc32147626375e27937cb54b091 act_ife: fix a typo in kmemdup() parameters
18fcf49f87f4b280d3cd695fc77766004b223af5 net_sched: fix a memory leak in tc action
1d2077ac0165c0d173a2255e37cf4dc5033d92c7 net: add __sock_wfree() helper
d99079e2fbd5ac38884f498ca99435d525152a88 export tc ife uapi header
5026c9b1bafcb309bf467b60494b3bcd6364b99c net sched: vlan action fix late binding
a57f19d30b2d5fb632b73729b39d05bae188eaed net sched: ipt action fix late binding
87dfbdc6c7478018c5489897d4495a27a626cda1 net sched: mirred action fix late binding
0e5538ab2b59ec205411949d839de6dbab663730 net sched: simple action fix late binding
5e1567aeb7fe0ca478bfad5d17791cce3ddd45c9 net sched: skbedit action fix late binding
4e8c861550105f7aaa85a19b2571151cb8eceaa2 net sched: ife action fix late binding
7e2c3aea4398d079745b9faa2c17b6cbd010f221 net: also make sch_handle_egress() drop monitor ready
f9eb8aea2a1e12fc2f584d1627deeb957435a801 net_sched: transform qdisc running bit into a seqcount
a03e6fe569713fb3ff0714f8fd7c8785c0ca9e22 act_police: fix a crash during removal
123b36526592f009bf8eccb7c8833aeda296d9cf net: sched: fix missing doc annotations
a09ceb0e08140a1eec05b49b4c232d3481339cb0 sched: remove qdisc->drop
c8945043cdc687388b7a43fc6f474bddd9607e80 sched: place state, next_sched and gso_skb in same cacheline again
52fbb2907988aa0583c6d9d53a56aee090b2df7e net: sched: fix qdisc->running lockdep annotations
99860208bc62d8ebd5c57495b84856506fe075bc sched: remove NET_XMIT_POLICED
d9fa17ef9f084c755332898c8243a396ea02d73e act_police: rename tcf_act_police_locate() to tcf_act_police_init()
d15eccea69b96a5116169688dcc9baf6d1ce2751 act_ipt: fix a bind refcnt leak
b2313077ed0db35ee186905d8076a737248edd24 net_sched: make tcf_hash_check() boolean
1b5c5493e3e68181be344cb51bf9df192d05ffc2 net_sched: add the ability to defer skb freeing
db4879d93c351cb978db1eb4c963f44d267d63a2 net_sched: sch_pie: defer skb freeing
067a7cd06f7bf860f2e3415394b065b9a0983802 act_ife: only acquire tcf_lock for existing actions
817e9f2c5c262b2716f5d77020d118ad53315f3e act_ife: acquire ife_mod_lock before reading ifeoplist
520ac30f45519b0a82dd92117c181d1d6144677b net_sched: drop packets after root qdisc lock is released
008830bc321c0fc22c0db8d5b0b56f854ed90a5c net_sched: fq_codel: cache skb->truesize into skb->cb
4d202a0d31b96ab3324b21e7500d9a2da9ef57dd net_sched: generalize bulk dequeue
8a6e9c670341db1ee913e3888cb44a08f18e7489 net_sched: netem: do not call qdisc_drop() with a NULL skb
ff202ee1ed8f032f05b80b541664cf02e75d7080 net sched actions: skbedit add support for mod-ing skb pkt_type
61cc535de36838bf4cfe08c8c4eeaad1ca4a89b1 net sched actions: skbedit convert to use more modern nla_put_xxx
0564bf0afae443deeb16f36e2c39fefff89d05f2 net/sched/sch_htb: clamp xstats tokens to fit into 32-bit int
a85a970af265f156740977168b542234511b28a8 net_sched: move tc_action into tcf_common
ec0595cc4495be579309b4bfd5e997af0f2ae6f9 net_sched: get rid of struct tcf_common
59cc1f61f09c26ce82c308e24b76141e1efe99f8 net: sched: convert qdisc linked list to hashtable
824a7e8863b3eb283343f891b11a782b4ec0d0de net_sched: remove an unnecessary list_del()
22dc13c837c33207548c8ee5116b64e2930a6e23 net_sched: convert tcf_exts from list to pointer array
0852e455238f8550fa92b1e40355eb2c6805787e net_sched: unify the init logic for act_police
b5ac851885accffe0485aea2805df8f2d49c95a8 net_sched: allow flushing tc police actions
69012ae425d76ecacc573ecdbd2c360bd8c2b842 net: sched: fix handling of singleton qdiscs with qdisc_hash
ea3274695353127d12155d45be1f2d62ab19c897 net: sched: avoid duplicates in qdisc dump
b9a24bb76bf611a5268ceffe04219e6ad264559b net_sched: properly handle failure case of tcf_exts_init()
28a10c426e81afc88514bca8e73affccf850fdf6 net sched: fix encoding to use real length
86da71b57383d40993cb90baafb3735cffe5d800 net_sched: Introduce skbmod action
97d0678f913369af0dc8b510a682a641654ab743 sched: don't use skb queue helpers
ec323368793b8570c02e723127611a8d906a9b3f sched: remove qdisc arg from __qdisc_dequeue_head
48da34b7a74201f15315cb1fc40bb9a7bd2b4940 sched: add and use qdisc_skb_head helpers
6a5d58b67e205f2ffc62d0a9ee4ef7d237e9a7fb net sched ife action: add 16 bit helpers
408fbc22ef1efb00dd896acd00e9f7d9b641e047 net sched ife action: Introduce skb tcindex metadata encap decap
21641c2e1ffd0b504610a33beaeab8fcc5140677 net_sched: check NULL on error path in route4_change()
45a497f2d149a4a8061c61518a79d59f1f3034b2 net/sched: act_vlan: Introduce TCA_VLAN_ACT_MODIFY vlan action
4b1d488a285a446329825d5fe91f987b7880e6e5 act_ife: Fix external mac header on encode
c006da0be033b6ddcd27ee603d0ee01491236642 act_ife: Fix false encoding
fa5effe7664b1606dfd639dff58686f6dbb119d7 net/sched: pkt_cls: change tc actions order to be as the user sets
ab102b80cef28c20b3ef7794806c3a982c6444fc net_sched: reorder pernet ops and act ops registrations
165779231ff9e9c4ac7baaee84eff91d589f3e22 net/sched: act_mirred: Rename tcfm_ok_push to tcfm_mac_header_xmit and make it a bool
dcf800344a91173802f2ad9c1c6b642f4b302df6 net/sched: act_mirred: Refactor detection whether dev needs xmit at mac header
53592b3640019f2834701093e38272fdfd367ad8 net/sched: act_mirred: Implement ingress actions
4fe77d82ef80c77031c9c6f8554cd0dee2aa423a skbedit: allow the user to specify bitmask for mark
d0a81f67cd6286d32f42a167d19c7a387c23db79 net: make default TX queue length a defined constant
f41cd11d64b2b21012eb4abffbe579bc0b90467f tc_act: Remove tcf_act macro
c491680f8f489926eebfdf2cd006767fc8bdaa49 bpf: reuse dev_is_mac_header_xmit for redirect
faa1fa54fd25a59a6c4b731ac652a2b7cd21ace8 net/sched: Export tc_tunnel_key so its UAPI accessible
ad558858295726cb876b78d1c39d471372f1901a uapi: export tc_skbmod.h
1c0d32fde5bdf1184bc274f864c09799278a1114 net_sched: gen_estimator: complete rewrite of rate estimators
7f7cd56c33937c6afa8a3d1f10a804c314e5b308 net_sched: sch_netem: use rb_entry()
3d48b53fb2ae37158e700ffef3f45461ff15c965 net: dev_weight: TX/RX orthogonality
aec745e2c520bf2d046684a284dac11c25d8e717 net-tc: remove unused tc_verd fields
d6264071ce7d100a2b7c1f295167796ab5178caf net-tc: make MAX_RECLASSIFY_LOOP local
e7246e122aaa99ebbb8ad7da80f35a20577bd8af net-tc: extract skip classify bit from tc_verd
a5135bcfba7345031df45e02cd150a45add47cf8 net-tc: convert tc_verd to integer bitfields
8dc07fdbf2054f157e8333f940a1ad728916c786 net-tc: convert tc_at to tc_at_ingress
6ae0a6286171154661b74f7f550f9441c6008424 net: Introduce psample, a new genetlink channel for packet sampling
1d5e7c859e81a66674d194c346119d154d31e9dc net/sched: act_ife: Unexport ife_tlv_meta_encode
1ce8460496c05379c66edc178c3c55ca4e953044 net: Introduce ife encapsulation module
295a6e06d21e1f469c9f38b00125a13b60ad4e7c net/sched: act_ife: Change to use ife module
71d0ed7079dffbc5cd0941d77d9b84e04109c9bb net/act_pedit: Support using offset relative to the conventional network headers
853a14ba4682f820266469979c9297debc05f60c net/act_pedit: Introduce 'add' operation
cf1facda2f61bc3e9ffd985b6d624dec6ad3f279 sched: move tcf_proto_destroy and tcf_destroy_chain helpers into cls_api
33a48927c193d030c80ecaeb3e021b7ed85f9c78 sched: push TC filter protocol creation into a separate function
6bb16e7ae26095892e8c51de4142d8f344793340 sched: move err set right before goto errout in tc_ctl_tfilter
7215032ced14f9943c8b72b61f4ac52902002158 sched: add missing curly braces in else branch in tc_ctl_tfilter
8ae70032552a8082734d0b8550848cf6bf92e1d5 sched: have stub for tcf_destroy_chain in case NET_CLS is not configured
edb9d1bff4bbe19b8ae0e71b1f38732591a9eeb2 net sched actions: decrement module reference count after table flush.
6c4dc75c251721f517e9daeb5370ea606b5b35ce net/sched: act_skbmod: remove unneeded rcu_read_unlock in tcf_skbmod_dump
49b499718fa1b0d639663cfd03085b9bfd23cdc8 net: sched: make default fifo qdiscs appear in the dump
52491c7607c5527138095edf44c53169dc1ddb82 act_connmark: avoid crashing on malformed nlattrs with null parms
e33cc31630c3ca1de47c2470ec8d41dee0683b11 sch_tbf: Remove bogus semicolon in if() conditional.
5080f39e8c72e01cf37e8359023e7018e2a4901e netem: apply correct delay when rate throttling
2026fecf516bc04df20cb50874957cd8c364fb4e mqprio: Change handling of hw u8 to allow for multiple hardware offload modes
56f36acd215cf7c28372b2fdb4f33f6900e97e05 mqprio: Modify mqprio to pass user parameters via ndo_setup_tc.
4dba87b07394ebf9fa4693d90f4074bda977449b net/sched: act_ife: Staticfy find_decode_metaid()
2c099ccbd093ffce056987a227fcc96e6a77b101 net: sched: choke: remove some dead code
92f9170621a13e4ba4eda6dfb070318d5405a0cf net_sched: check noop_qdisc before qdisc_hash_add()
763dbf6328e41de7a55851baf5ee49e367552531 net_sched: move the empty tp check from ->destroy() to ->delete()
e0ee84ded79623ac063a4e817367d61ab7650b6c net sched actions: Complete the JUMPX opcode
9da3242e6a83b6f315aa9c394c939da8e4ad7774 net: sched: add helpers to handle extended actions
cb395b2010879a8461aa1b1c37025769708c32cf net: sched: optimize class dumps
f6ba8d33cfbb46df569972e64dbb5bb7e929bfd9 netem: fix skb_orphan_partial()
87d83093bfc2f4938ff21524ebb50ecf53c15a64 net: sched: move tc_classify function to cls_api.c
6529eaba33f0465fc6d228e1d05b1745f7d0e8c9 net: sched: introduce tcf block infractructure
fbe9c5b01f97b44b1e4c7d86c092beaf707d4b9d net: sched: rename tcf_destroy_chain helper
9d36d9e545dce53c6fff046b277c261d6568c5b9 net: sched: replace nprio by a bool to make the function more readable
7961973a0087824fdc9d0303b0033ab79b557278 net: sched: move TC_H_MAJ macro call into tcf_auto_prio
2190d1d0944f84c55cdfdb89c7920f8f9311bdde net: sched: introduce helpers to work with filter chains
acb31fae3b352b0b9eba7cefe1f669ad639c41d9 net: sched: push chain dump to a separate function
5bc1701881e395cec51811d07ec6961f3d1b2612 net: sched: introduce multichain support for filters
9fb9f251d229f6cabd9dbe4214eb7f1e6a4e8a9d net: sched: push tp down to action init
db50514f9a9c7ef1f17e9921b1cc0902746872f3 net: sched: add termination action to allow goto chain
31efcc250a1dea96edca6595a9639d898cf99ae5 net/sched: properly assign RCU pointer in tcf_chain_tp_insert/remove
f93e1cdcf42c1218e2a73be477d8ac21135e7f56 net/sched: fix filter flushing
ee538dcea28930bd95606fe00a834935d6fb5613 net: sched: cls_api: make reclassify return all the way back to the original tp
367a8ce896f14018cc2c6cf2681aa440fff274f4 net_sched: only create filter chains for new filters/actions
e25ea21ffa66a029acfa89d2611c0e7ef23e7d8c net: sched: introduce a TRAP control action
5a4d1fee2f844813cb2092b7a06b0e20ed9e2fa4 net: sched: introduce helper to identify gact trap action
a5fcf8a6c968ed8e312ff0b2a55d4c62d821eabb net: propagate tc filter chain index down the ndo_setup_tc call
c4f65b09b459c6f0ec27b1a1a65302f7fea5c96f net/act_pedit: fix an error code
df823b02970172f3e4003063699e333295b9b32d net sched actions: Use proper root attribute table for actions
90825b23a887f06f6c05bdde77b200c5fe9b6217 net sched actions: dump more than TCA_ACT_MAX_PRIO actions per batch
e62e484df04964ac947c679ef4f00c54ae5395aa net sched actions: add time filter for action dumping
4ebc1e3cfcd8778e2150bdb799b19e85348b8efa net: sched: remove unneeded tcf_em_tree_change
3bcc0cec818fa969fe555b44443347211ed787a3 net: sched: change names of action number helpers to be aligned with the rest
af69afc551eb9f9b1f2cc3295e2dfcdaa1dc948d net: sched: use tcf_exts_has_actions in tcf_exts_exec
6fc6d06e5371507e68c6904a3423622b0e465b64 net: sched: remove redundant helpers tcf_exts_is_predicative and tcf_exts_is_available
ec1a9cca0e13391167567964fd04e61a39d6a4ae net: sched: remove check for number of actions in tcf_exts_exec
978dfd8d14a503d20be1f1e2ae328c3eac675a2d net: sched: use tcf_exts_has_actions instead of exts->nr_actions
6a725c481df36b1ad471ea788a5bc64c25bf7af8 net: sched: cls_bpf: rename cls_bpf_modify_existing function
455075292b0d58f708c1afe7011a8b9223b2c9c8 net: sched: cls_flower: no need to call tcf_exts_change for newly allocated struct
94611bff6e1e57c4a74a9242f3fe749aa4a31678 net: sched: cls_fw: no need to call tcf_exts_change for newly allocated struct
a74cb36980c3676c888a87dd66bcd410f7e75c08 net: sched: cls_matchall: no need to call tcf_exts_change for newly allocated struct
ff1f8ca0805ab03c31e14a9356aa2ac81d65c338 net: sched: cls_basic: no need to call tcf_exts_change for newly allocated struct
6839da326dfcb98bf8020d42b416636471f1e462 net: sched: cls_bpf: no need to call tcf_exts_change for newly allocated struct
8cc6251381183191f99ecd6d49931251ebbbe27d net: sched: cls_cgroup: no need to call tcf_exts_change for newly allocated struct
c09fc2e11ed1b7fc8cfa97fb1da544225fc32277 net: sched: cls_flow: no need to call tcf_exts_change for newly allocated struct
8c98d571bb0e9717fd7be7242945e8e0abebbaa3 net: sched: cls_route: no need to call tcf_exts_change for newly allocated struct
705c7091262d02b09eb686c24491de61bf42fdb2 net: sched: cls_u32: no need to call tcf_exts_change for newly allocated struct
9b0d4446b56904b59ae3809913b0ac760fa941a6 net: sched: avoid atomic swap in tcf_exts_change
54df2cf819a23dba4bb2c4134ed62659a7d324f5 net_sched: refactor notification code for RTM_DELTFILTER
8113c095672f6504b23eba6edf4a57b5f7f744af net_sched: use void pointer for filter handle
2572ac53c46f58e500b9d8d0f99785666038c590 net: sched: make type an argument for ndo_setup_tc
ade9b6588420b335851951702ab975c975b0c1b2 net: sched: rename TC_SETUP_MATCHALL to TC_SETUP_CLSMATCHALL
f73230430ac295b14cd1ee162dbf7ccfd90cbf6b cxgb4: push cls_u32 setup_tc processing into a separate function
bc32afdb2b01ae7652cbb829475d270f7d813618 ixgbe: push cls_u32 and mqprio setup_tc processing into separate functions
0cf0f6d3d39672c044393aef71ee782430ca8b13 mlx5e: push cls_flower and mqprio setup_tc processing into separate functions
8c818c27f37f4d847769a38b9d20c1b5ae21075d mlx5e_rep: push cls_flower setup_tc processing into a separate function
fd33f1dfed6141280bc85817e6f79b87a5c7320b mlxsw: spectrum: push cls_flower and cls_matchall setup_tc processing into separate functions
9cbf14ede21e1789f24e87a9ba08bbc92211fe42 mlxsw: spectrum: rename cls arg in matchall processing
5fd9fc4e207dba0c05cafe78417952b4c4ca02dc net: sched: push cls related args into cls_common structure
d7c1c8d2e53be974b5c72e31d7d35f6d9737fe84 net: sched: move prio into cls_common
38cf0426e5178b1c3810bb88e65dd23882e40283 net: sched: change return value of ndo_setup_tc for driver supporting mqprio only
de4784ca030fed17d527dbb2bb4e21328b12de94 net: sched: get rid of struct tc_to_netdev
7120371c8ef1bca709308f6e41130b6fd87b7d15 net_sched: get rid of some forward declarations
ec0acb09313074ba1a4976945791d9c6815f39fb net: sched: set xt_tgchk_param par.net properly in ipt_init_target
96d9703050a0036a3360ec98bb41e107c90664fe net: sched: set xt_tgchk_param par.nft_compat as 0 in ipt_init_target
7690f2a51d8afe51ac97e7fae66b081f192a7158 net: sched: propagate classid down to offload drivers
a2e8da9378cc09e2e922a0b3d481bd9d07c3d245 net: sched: use newly added classid identity helpers
7b06e8aed283081010596c98a67f06c595affe51 net: sched: remove cops->tcf_cl_offload
898904226b5a6dee657f23cf51e385f50da22596 net_sched: reset pointers to tcf blocks in classful qdiscs' destructors
e543002f77f463501d47fab43acf7ba881e9dcaf qdisc: add tracepoint qdisc:qdisc_dequeue for dequeued SKBs
d978db8dbebb60a51492da966689dfc0c9216c44 net: sched: cls_flower: fix ndo_setup_tc type for stats call
4f8a881acc9d1adaf1e552349a0b1df28933a04c net: sched: fix NULL pointer dereference when action calls some targets
acc8b31665b4cc17b35c4fa445427f7e2f6dc86b net: sched: fix p_filter_chain check in tcf_chain_flush
7f3b39dafc6234dc1565fafe6adb15a6c4932182 net/sched: Fix the logic error to decide the ingress qdisc
744a4cf63e528c29840f45811d6fb93fd129b87d net: sched: fix use after free when tcf_chain_destroy is called multiple times
30d65e8f96ad01d9f998039e9af9ce5545e5a4ee net: sched: don't do tcf_chain_flush from tcf_chain_destroy
e457d86ada27cbd2f46ded75d4b4bc06e26d0e2e net: sched: add couple of goto_chain helpers
27d7f07c49de289e2a2d48a6bec3e111ed4b1222 net_sched: get rid of more forward declarations
14546ba1e5653e5dd00d113e98bd21b5b235192b net_sched: introduce tclass_del_notify()
143976ce992fcf3bfc0f4d15d5726bb492dcf262 net_sched: remove tc class reference counting
551143d8d954fe398324a5caa276f518466c428b net_sched: fix a refcount_t issue with noop_qdisc
b522ed6ed665ba6a349d31136fa3f40c408f2b5a act_ife: use registered ife_type as fallback
88c2ace69dbef696edba77712882af03879abc9c sch_htb: fix crash on init failure
3501d059921246ff617b43e86250a719c140bd97 sch_cbq: fix null pointer dereferences on init failure
30c31d746d0eb458ae327f522bc8e4c44cbea0f0 sch_fq_codel: avoid double free on init failure
e232657661242cc8a169595160847b3e66aa7056 sch_sfq: fix null pointer dereference on init failure
07d79fc7d94e3f884b8b1c95aa615b202bb5e4c1 net_sched: add reverse binding for tc class
80532384af4ccb6d6cc965fa9232aaa2c456362c net: sched: fix memleak for chain zero
d7fb60b9cafb982cb2e46a267646a8dfd4f2e5da net_sched: get rid of tcfa_rcu
e2ef75445340ca7ec2c4558f84ae6c8c5d650fc8 net_sched: fix reference counting of tc filter chain
1697c4bb5245649a23f06a144cc38c06715e1b65 net_sched: carefully handle tcf_block_put()
ca558e185972d8ecd308760abf972f5d408bcff0 net_sched: gen_estimator: fix scaling error in bytes/packets samples
c8e1812960eeae42e2183154927028511c4bc566 net_sched: always reset qdisc backlog in qdisc_reset()
c15ab236d69dd6dad24541400f460c47853803f8 net/sched: Change cls_flower to use IDR
65a206c01e8e7ffe971477a36419422099216eff net/sched: Change act_api and act_xxx modules to use IDR
255cd50f207ae8ec7b22663246c833407744e634 net: sched: fix use-after-free in tcf_action_destroy and tcf_del_walker
2c8468dcf8303c68712f11c782d7d8724de07a73 net: sched: don't use GFP_KERNEL under spin lock
c019b5166e11faaf9ed3b64316ed338eaa19de60 net/sched: cls_flower: Set egress_dev mark when calling into the HW driver
c76cb6ed5431756071cc13635db70234597b9cf7 i40e: Drop FCoE code that always evaluates to false or 0
373149fc99a077700339e18839484a852e7b0971 i40e: Decrease the scope of rtnl lock
33512191fee4bb8a154a389ee6087272e8fd898d i40e: clean up historic deprecated flag definitions
024b05f4246e281ef50e019eff0fc53aedf069ac i40e: don't hold RTNL lock while waiting for VF reset to finish
e4b433f4a74196476ccf226e450c4582428641c1 i40e: reset all VFs in parallel when rebuilding PF
47994c119a36e28e1779efabc92d6ab5329a6f75 i40e: remove hw_disabled_flags in favor of using separate flag bits
bbc4e7d273b594debbcccdf588085b3521365c50 i40e: fix race condition with PTP_TX_IN_PROGRESS bits
69077577af5054da8c8adfb6c1ebb565c2f1f158 i40e: avoid permanent lock of *_PTP_TX_IN_PROGRESS
55cdfd48f217533d2eef3e68ccc5b7af098e8640 i40e: use new unified virtchnl header file
260e93820ad6c35d189210b4d86989a1df054e55 virtchnl: move some code to core driver
eedcfef85b15ae02c488625556702594a618c616 virtchnl: convert to new macros
764430ce6f8c38d7ed3b6d2cfe9450b9d3c78809 i40e/virtchnl: refactor code for validate checks
735e35c56bbc91621942dc5111b2970beb00e75a i40e/virtchnl: move function to virtchnl
9e6c9c0f2ce67534fda1fdd305fb5da3defece3e i40e: Fix state flags for bit set and clean operations of PF
6964e53f55837b0c49ed60d36656d2e0ee4fc27b i40e: fix handling of HW ATR eviction
4df864c1d9afb46e2461a9f808d9f11a42d31bad networking: make skb_put & friends return void pointers
5bbb2e2045449706a6daf092e5727998e4984c0b i40e: Add support for OEM firmware version
e588723986845457942e8a1acb1e31cf18e8eb08 i40e: fix disabling overflow promiscuous mode
2e5c26ea0d0843074a1b8c868aae5c828c155569 i40e: clear only cause_ena bit
dfc4ff644674a133878aded9a86ab36c358f3138 i40e: don't hold RTNL lock for the entire reset
7c9ae7f053e9e896c24fd23595ba369a5fe322e1 i40e: Fix for trace found with S4 state
5a433199bfde1b5360bf592184a2b89ce4ee2eda i40e: Fix a bug with VMDq RSS queue allocation
28921a0c2f5d4d051eff3f1db0588dea7cb8fe49 i40e: remove workaround for Open Firmware MAC address
10a955ff62e56fe13dae1f29aabc04bc589eaf46 i40e: Detect ATR HW Evict NVM issue and disable the feature
9a03449d3ea0f6b497ff3a3bf6203a5e72c7e6be i40e: Fix link down message when interface is brought up
c17401a1dd210a5f22ab1ec7c7366037c158a14c i40e: use separate state bit for miscellaneous IRQ setup
401586c2b9bb16147f3dcc64d3596013625e2c44 i40e: don't clear suspended state until we finish resuming
5c499228803a77bd4e878c7119fbd40a1dc6d773 i40e: prevent service task from running while we're suspended
73556269aab30c39cba9cf8efafc402d0deb87b2 virtchnl: Add compile time static asserts to validate structure sizes
a3f5aa907340b5d7b54223ddbaa90410f168864d i40e: Enable VF to negotiate number of allocated queues
d43d60e5eb9504aa6f8f390aa0313cc8e3816b82 i40e: ensure reset occurs when disabling VF
64615b5418bac1d3b3a50a83fb2e42091fe299fe i40e: add private flag to control source pruning
b48be9978e4b21b28b7349f57574dae21378ddd5 i40e: fix flags declaration
6f853d4f8e93eeace504b021e05dfdbeb4d3b40f i40e: allow XPS with QoS enabled
2b9478ffc550f17c6cd8c69057234e91150f5972 i40e: Fix memory leak related filter programming status
8fdb69dd383f1f937f7e2f1f24efe97c5268a84c i40e: fix link reporting
91c527a55664ddf4bee26673a35f91748dae4142 ethernet/intel: use core min/max MTU checking
9eed69a9147c27aeb016c55b30d810b39bf38662 i40e: Drop FCoE code from core driver files
dab86afdbbd1bc5d5a89b67ed141d2f46c3b4191 i40e/i40evf: Change the way we limit the maximum frame size for Rx
bacd75cfac8af9fc91b7fde4b0cad8960c77986f i40e/i40evf: Add capability exchange for outer checksum
98efd69493b9d4b02353a552af8ffaaf30de8af4 i40e/i40evf: Add support for using order 1 pages with a 3K buffer
ca9ec0888d631c446040a7fab9985afdeb4f73f3 i40e/i40evf: Add support for padding start of frames
d19cb64b9222a93498c9dc8447503bfa87863d99 i40e: separate PF and VSI state flags
0da36b9774cc24bac4bff446edf49f31aa98a282 i40e: use DECLARE_BITMAP for state fields
3dfc3eb581645bc503c7940861f494a0d75615da i40evf: hide unused variable
681bdf80cff6844f81216b6b05516d82f69c23fd i40e/i40evf: create and use new unified header file
310a2ad92e3fd9139e3641464f1de113fa89825b virtchnl: rename i40e to generic virtchnl
f0adc6e831baaef16577ea2af5eb3e91fd4efef4 i40evf/virtchnl: whitespace cleanups
ff3f4cc267f6f39c2fc525c8918c929809defbfa virtchnl: finish conversion to virtchnl interface
abf709a1e7316b3f99647bb88c4031b1e62e1c75 i40evf: Add support for Adaptive Virtual Function
c969ef4ed9cbf3662fc8709e2581427c191504fb i40evf: Use le32_to_cpu before evaluating HW desc fields
1e3a5fd5c0492d2cd37d86dce82ac7899136123f i40e/i40evf: adjust packet size to account for double VLANs
d36e41dc78d31322f61952a558b817e15e60a855 i40e: separate hw_features from runtime changing flags
841c950d67c6facde32a8644ced20c04aebb7dd8 i40e/i40evf: use cmpxchg64 when updating private flags in ethtool
8774370d268f2f43d8487d230e0d4fa1647759b3 i40e/i40evf: support for VF VLAN tag stripping control
b980c0634fe56928a45cc3c0f688d96e36705403 i40e: shutdown all IRQs and disable MSI-X when suspended
5b36e8d04b4439c9ceb814bfdfe1284737f9c632 i40evf: Enable VF to request an alternate queue allocation
1b7b7596aeebc21913bad49eb6a2c364c4b2988a i40e: make i40evf_map_rings_to_vectors void
9a858178ef6dfee2b6e6ec65c42b65a129b4df02 i40e: Display error message if module does not meet thermal requirements
0a3b4f702fb1f76b03530d58af9efc5e10392185 i40evf: enable support for VF VLAN tag stripping control
b74f571f59a8a3dae998e3b95e0f88fac39bfef3 i40e/i40evf: organize and re-number feature flags
427025592955d245997b12923111e85f07850d5f i40e/i40evf: fix incorrect default ITR values on driver load
dbadbbe235f82f13224c85d29e65cf859afaa18c i40e/i40evf: always set the CLEARPBA flag when re-enabling interrupts
17a9422de78c3a59b490b400f555635c477f1476 i40e/i40evf: don't trust VF to reset itself
9fa62b1a31c96715aef34f25000e882ed4ac4876 usb-storage: Fix scsi-sd failure "Invalid field in cdb" for USB adapter JMicron
593224ea77b1ca842f45cf76f4deeef44dfbacd1 USB: uas: Fix slave queue_depth not being set
198de51dbc3454d95b015ca0a055b673f85f01bb USB: uas: Limit qdepth at the scsi-host level
a0467a967f347842b30739aae636c44980265265 USB: serial: ch341: fix modem-status handling
beea33d4f94bdd816172f5f554cbabd12c16d909 USB: serial: ch341: rename shadow modem-control register
e8024460354cc1b21e29c879338fd5c5021c8e7d USB: serial: ch341: rename modem-status register
7c61b0d5e82bfe29b8dda55745afbf65b6ccc901 USB: serial: ch341: change initial line-control settings
8a1115ff6b6d90cf1066ec3a0c4e51276553eebe scripts/spelling.txt: add "disble(d)" pattern and fix typo instances
fab9288428ec0fbd09adb67d3a17c51d78196f9c usb: USB Type-C connector class
d2061f9cc32dbb895191833063d9f3366fdaae78 usb: typec: add driver for Intel Whiskey Cove PMIC USB Type-C PHY
a86c309e71dc4f43c68483f7e328b1d4f9fef618 usb: typec: Don't prevent using constant typec_mode_desc initializers
7ee4ce6e933fbb2e5db2c39977b847704589575e usb: typec: update partner power delivery support with opmode
bab3548078237706f53baafe43ae58257225549d usb: typec: Add a sysfs node to manage port type
c1b0bc2dabfa884dea49c02adaf3cd6b52b33d2f usb: typec: Add support for UCSI interface
8243edf44152c08c3efa1d551fc48605d674ad18 usb: typec: ucsi: Add ACPI driver
86be7f7b2d940ddc18143061e77989b017d93bf8 usb: typec: include linux/device.h in ucsi.h
9da5a1092b13468839b1a864b126cacfb72ad016 xhci: Bad Ethernet performance plugged in ASM1042A host
b700e7f03df5d92f85fa5247fe1f557528d3363d livepatch: kernel: add support for live patching
13d1cf7e702596e0cd8ec62afa6bd49c431f2d0c livepatch: samples: add sample live patching module
b5bfc51707f1b56b0b733980bb4fcc0562bf02d8 livepatch: move x86 specific ftrace handler code to arch/x86
33e8612f64d4973ae3617a01224ec02b7b879597 livepatch: use FTRACE_OPS_FL_IPMODIFY
700a3048aaa394b2a6d1468430f892151ce04a01 livepatch: samples: fix usage example comments
83ac237a950e130c974d0170cce30891dcd8f250 livepatch: kconfig: use bool instead of boolean
b9dfe0bed999d23ee8838d389637dd8aef83fafa livepatch: handle ancient compilers with more grace
99590ba565a22c9f58f7528a94881d0455eef018 livepatch: fix deferred module patching order
83a90bb1345767f0cb96d242fd8b9db44b2b0e17 livepatch: enforce patch stacking semantics
3c33f5b99d688deafd21d4a770303691c7c3a320 livepatch: support for repatching a function
32b7eb877165fdb29f1722071c6c64ced1789014 livepatch: change ARCH_HAVE_LIVE_PATCHING to HAVE_LIVE_PATCHING
dbed7ddab967550d1181633e8ac7905808f29a94 livepatch: fix uninitialized return value
12cf89b550d13eb7cb86ef182bd6c04345a33a1f livepatch: rename config to CONFIG_LIVEPATCH
f638f4dc0880d515c807a67b8210885a4a4f18bb livepatch: add missing newline to error message
0937e3b025f70e33f018aa55ee8d32b8731730a7 livepatch: simplify disable error path
e0b561ee78d82a4cc7792aa28fa4b1ea15325dcc livepatch: fix format string in kobject_init_and_add()
4421f8f0fa02bc982b410cd773223cc280791c54 livepatch: remove extern specifier from header files
c4ce0da8ec62d83c96e29db7dadd6d3985344bb3 livepatch: RCU protect struct klp_func all the time when used in klp_ftrace_handler()
c064a0de1bfb07c34a3798822c7e1636eea866e8 livepatch: fix RCU usage in klp_find_external_symbol()
2e3ac940f2754d7dc616aba1643a668954fe892f livepatch: remove unnecessary call to klp_find_object_module()
8cb2c2dc472775479a1a7e78180955f6f1cb0b0a livepatch: Fix subtle race with coming and going modules
5d4351ba654c2f25eb4f6883db742a16bccbb36b livepatch: x86: make kASLR logic more accurate
e76ff06a959336fae64b53c36ec60940ca6ef04f livepatch: match return value to function signature
36e505c16e610403c110bab76a95cbfa0436a928 livepatch: Prevent patch inconsistencies if the coming module notifier fails
cad706df7e4a00a595f2662f32c0fc174aa4e61f livepatch: make kobject in klp_object statically allocated
8cdd043ab32c2ff28d2a77c514a768a9edce244c livepatch: introduce patch/func-walking helpers
26029d88ad1ba6ad7d1f16f22dc67aa8eac0d391 livepatch: annotate klp_init() with __init
9a1bd63cdae4b623494c4ebaf723a91c35ec49fb livepatch: add module locking around kallsyms calls
225f58fbcc02ace232fc49f05036042f9d58263e livepatch: Improve error handling in klp_disable_func()
e2391a2dcaca41c6de0fbc25329969fc7142f20d livepatch: Fix crash with !CONFIG_DEBUG_SET_MODULE_RONX
e41b104c7dba92443e594e6bc86e4b0bf1cdf573 livepatch: x86: fix relocation computation with kASLR
b2b018ef48675a9a524fa9791ea7d67fdac405f7 livepatch: add old_sympos as disambiguator field to klp_func
064c89df6247cd829a7880cc8a87b7ed2cdfccd8 livepatch: add sympos as disambiguator field to klp_reloc
444f9e99a840c4050c0530cfef81801a21a59f4c livepatch: function,sympos scheme in livepatch sysfs directory
b56b36ee6751abe7fb3890681e86fc8de2122953 livepatch: Cleanup module page permission changes
b7ffffbb46f205e7727a18bcc7a46c3c2b534f7c ftrace: Add infrastructure for delayed enabling of module functions
5156dca34a3e1e1edac2d0dabf43d8632909b7aa ftrace: Fix the race between ftrace and insmod
383bf44d1a8b18de5c26ec2a48c6822681b50984 livepatch: change the error message in asm/livepatch.h header files
7dcd182bec271ab341b05b66b6006995795fc0e7 ftrace/module: remove ftrace module notifier
b24b78a113164a84bf242b08ef2165365445ea2b klp: remove superfluous errors in asm/livepatch.h
335e073faacc9d90bee1527fa2550d6df045df63 klp: remove CONFIG_LIVEPATCH dependency from klp headers
f995b5f720a72dfe7a1b33a43f2841b4e72d53b7 livepatch: Fix the error message about unresolvable ambiguity
4c973d1620ae08f5cbe27644c5f5b974c8f594ec modules: split part of complete_formation() into prepare_coming_module()
7e545d6eca20ce8ef7f66a63146cbff82b2ba760 livepatch/module: remove livepatch module notifier
1ce15ef4f60529cf1313f80f4338c88bd65cc572 module: preserve Elf information for livepatch modules
425595a7fc2096ab46c741b5ed5372c5ab5bbeac livepatch: reuse module loader code to write relocations
28e7cbd3e0f5fefec892842d1391ebd508fdb5ce livepatch: Allow architectures to specify an alternate ftrace location
61bf12d3304d78ff499245ea995858c3bedb162e livepatch: robustify klp_register_patch() API error checking
5e4e38446a62a4f50d77b0dd11d4b379dee08988 livepatch: Add some basic livepatch documentation
f09d90864eb7cc00cadbbfd083b4eff84c167981 livepatch: make object/func-walking helpers more robust
da01e18a37a57f360222d3a123b8f6994aa1ad14 x86: avoid avoid passing around 'thread_info' in stack dumping code
9a2e9da3e003112399f2863b7b6b911043c01895 x86/dumpstack: Try harder to get a call trace on stack overflow
255e732c61dbb6a0bf9e0a3d6bc45f202853c880 livepatch: use arch_klp_init_object_loaded() to finish arch-specific tasks
bf255bdaada6d497536aadee5406f6ded318978b x86/dumpstack: Remove show_trace()
b32f96c75d0dcbb9bf9cc7994e8022c8ce20a668 x86/asm/head: Rename 'stack_start' -> 'initial_stack'
daa460a88c09b26b68e8b017de589c217e901afb ftrace: Only allocate the ret_stack 'fp' field when needed
e4a744ef2fef5c803348b650a3a2d01da7797a9b ftrace: Remove CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST from config
9a7c348ba6a46f6270d4fe49577649dad5664fe7 ftrace: Add return address pointer to ftrace_ret_stack
408fe5de2f2767059a9561e0ae6d4385d1b39dac x86/dumpstack/ftrace: Convert dump_trace() callbacks to use ftrace_graph_ret_addr()
471bd10f5e2880bd91a2627d887f6062494cfe9c ftrace/x86: Implement HAVE_FUNCTION_GRAPH_RET_ADDR_PTR
6f727b84e23421721025f4eb1b4f6cea1d4d723a x86/dumpstack/ftrace: Mark function graph handler function as unreliable
13e25bab7e51bdd4ba7df1ef2388961294bb565e x86/dumpstack/ftrace: Don't print unreliable addresses in print_context_stack_bp()
4b8afafbe743be1a81c96ddcd75b19c534d5e262 x86/dumpstack: Add get_stack_pointer() and get_frame_pointer()
cfeeed279dc2fa83a00fbe4856ebd231d56201ab x86/dumpstack: Allow preemption in show_stack_log_lvl() and dump_trace()
9c00390757fd9f5851f7973b2f0e1e41550bb3b8 x86/dumpstack: Simplify in_exception_stack()
cb76c93982404273d746f3ccd5085b47689099a8 x86/dumpstack: Add get_stack_info() interface
5fe599e02e41550c59831613a11c8ae057897c29 x86/dumpstack: Add support for unwinding empty IRQ stacks
fcd709ef20a9d83bdb7524d27cd6719dac8690a0 x86/dumpstack: Add recursion checking for all stacks
a9468df5ad48d06e5237fc2b56fb04c52f79c8c4 x86/boot/64: Use a common function for starting CPUs
59024954a1e7e26b62680e1f2b5725249a6c09f7 Documentation/livepatch: Fix stale link to gmame
372e2db7210df7c45ead46429aeb1443ba148060 livepatch: doc: remove the limitation for schedule() patching
af085d9084b48530153f51e6cad19fd0b1a13ed7 stacktrace/x86: add function for detecting reliable stack traces
46c5a0113f843be5c55b1c40dd486538891156d4 livepatch: create temporary klp_update_patch_state() stub
afb94c9e0b413bbdea779192eaca076c43ede031 livepatch/x86: add TIF_PATCH_PENDING thread flag
0dade9f374f1c15f9b43ab01ab75a3b459bba5f6 livepatch: separate enabled and patched states
aa82dc3e00da63751bb9dfab26983037b79fc39d livepatch: remove unnecessary object loaded check
c349cdcaba589fb49cf105093ebc695eb8b9ff08 livepatch: move patching functions into patch.c
68ae4b2b687c3da59ca1d762646ddece4ea1c438 livepatch: use kstrtobool() in enabled_store()
f5e547f4ac785c65a39211f0b8e4ffc4fe09112d livepatch: store function sizes
d83a7cb375eec21f04c83542395d08b2f6641da2 livepatch: change to a per-task consistency model
7c23b330011690705613a66a8239d2ca64a41d4d livepatch: add /proc/<pid>/patch_state
3ec24776bfd09668079df7dca0c0136d80820ab4 livepatch: allow removal of a disabled patch
10517429b5ac242498d7d847f79f10c21d7eedb0 livepatch: make klp_mutex proper part of API
e679af627fe875a51d40b9a2b17f08fbde36e0e2 livepatch: Cancel transition a safe way for immediate patches
77f8f39a2e463eca89a19b916189d0e4e38f75d8 livepatch: add missing printk newlines
72f04b50d61c81a2cc3065d3b973e83827760515 livepatch: Reduce the time of finding module symbols
5720acf4bfc142ba568d5b6782fceaf62ed15e0b livepatch: Make livepatch dependent on !TRIM_UNUSED_KSYMS
842c08846420baa619fe3cb8c9af538efdb89428 livepatch: Fix stacking of patches with respect to RCU
5a3cf86978a1ac433407704ec280919751aa2699 x86/dumpstack: Fix interrupt and exception stack boundary checks
439e7271dc2b63de379e37971dc2f64d71e24f8a livepatch: introduce shadow variable API
5d9da759f7587c87252ef98e70bc0b4a89e4d036 livepatch: __klp_shadow_get_or_alloc() is local to shadow.c
19205da6a0da701787d42ad754edd1ffb514c956 livepatch: Small shadow variable documentation fixes
ef8daf8eeb5b8ab6bc356656163d19f20fb827ed livepatch: unpatch all klp_objects if klp_module_coming fails
5a8ff54c260ecfed3de9b8d1272eb87826935df8 x86/dumpstack: Remove unnecessary stack pointer arguments
81539169f283329fd8bc58457cc15754f683ba69 x86/dumpstack: Remove NULL task pointer convention
35f4d9b32527c08c3da3982aedae5198dc663ce8 perf/x86: Convert perf_callchain_kernel() to use the new unwinder
49a612c6b06defbd6e6d334c683fea28006728e3 x86/stacktrace: Convert save_stack_trace_*() to use the new unwinder
ec2ad9ccf12dc965cad2d367a4063f68d6561a6b oprofile/x86: Convert x86_backtrace() to use the new unwinder
e18bcccd1a4ecb41e99678e002ef833586185bf1 x86/dumpstack: Convert show_trace_log_lvl() to use the new unwinder
c8fe4609827aedc9c4b45de80e7cdc8ccfa8541b x86/dumpstack: Remove dump_trace() and related callbacks
71f5443ebb1227c22e8decbcd28a1ea6deaf8257 x86/dumpstack: Fix show_stack() task pointer regression
0ee1dd9f5e7eae4e55f95935b72d4beecb03de9c x86/dumpstack: Remove raw stack dump
77072f09eab19326dd2424c8dad0a443341a228f x86/stacktrace: Avoid recording save_stack_trace() wrappers
546fece4eae871f033925ccf0ff2b740725ae915 ftrace: Add more checks for FTRACE_FL_DISABLED in processing ip records
93862e385ded7c60351e09fcd2a541d273650905 livepatch: add (un)patch callbacks
6116c3033a761611b1da980ea664c6ddff3eaed6 livepatch: move transition "complete" notice into klp_complete_transition()
af026796054fb70439e919a925615e61b500ef6b livepatch: add transition notices
5aaf1ab55389aeb6ce5527580a1a4d4dbc0f41ff livepatch: Correctly call klp_post_unpatch_callback() in error paths
89a9a1c1c89cea5f70975c338c011b9f7024dee5 livepatch: __klp_disable_patch() should never be called for disabled patches
223757016837d5bc8546c5683e13fbafe6cb374d block_dev: remove DAX leftovers
68a9f5e7007c1afa2cf6830b690a90d0187c0684 xfs: implement iomap based buffered write path
459f0fbc2a827da37bbfaf3cae8da4ad8884da12 xfs: use iomap infrastructure for DAX zeroing
7bb41db3ea160ea55cc46af07e45f7cb1e2968ba xfs: handle 64-bit length in xfs_iozero
570b6211b85692f408cbe47664ab2378eb9519ff xfs: use xfs_zero_range in xfs_zero_eof
bdb0d04fa66d8d02219ca7c027adf810dd75e9e4 xfs: split xfs_free_file_space in manageable pieces
3c2bdc912a1cc050db7e858aabe564cb382c9c30 xfs: kill xfs_zero_remaining_bytes
b95a21271b30544a9fb992269d79ed1e1978e023 xfs: simplify xfs_file_iomap_begin
1d4795e7bde075588c90df2175349bb2251802d5 xfs: (re-)implement FIEMAP_FLAG_XATTR
e9c4973638beff4b346d802fd9443975b041035d xfs: move xfs_bmbt_to_iomap up
f8e3a8257538af8dbdd15d098c0cfba6ccbabe7a xfs: factor our a helper to calculate the EOF alignment
51446f5ba44874db4d2a93a6eb61b133e5ec1b3e xfs: rewrite and optimize the delalloc write path
ecd50729f772f0b982ddbb76c16ee4bc8f495e17 iomap: add IOMAP_F_NEW flag
befb503ca6e648cc5ed3e3a472d5b5887a60e0f2 iomap: expose iomap_apply outside iomap.c
d33fd776f992332be110f6ceca6dad60cb5d513f iomap: add IOMAP_REPORT
a254e568128804fc2f18490af617197a1d36675e dax: provide an iomap based dax read/write path
a7d73fe6c538fdba42635c0b8e73382fcd4bd667 dax: provide an iomap based fault handler
66642c5c1dea411dd2842159f9f297ce8e914994 xfs: take the ilock shared if possible in xfs_file_iomap_begin
e372843a407ddff1e4c4acc7cdf3df9987bf48cc xfs: refactor xfs_setfilesize
6c31f495d19975b7d2e824ee614934d5db113afe xfs: use iomap to implement DAX
11c59c92f44d9272db7655a462608658a6d95013 dax: correct dax iomap code namespace
333ccc978e1e09af2690e459b6f97d8e91cc01fa dax: add dax_iomap_sector() helper function
1550290b08012637e8d741a6a298ec6320dadda2 dax: dax_iomap_fault() needs to call iomap_end()
642261ac995e01d7837db1f4b90181496f7e6835 dax: add struct iomap based DAX PMD support
862f1b9d67187cf441e713cc77efae682d8ebc45 xfs: use struct iomap based DAX PMD fault path
9484ab1bf4464faae695321dd4fa66365beda74e dax: Introduce IOMAP_FAULT flag
364443cbcfe70f927b6a0dc0d410b4d4318bc1ca ext4: convert DAX reads to iomap infrastructure
213bcd9ccbf04b709e4764ad89aaaa66a47785f0 ext4: factor out checks from ext4_file_write_iter()
776722e85d3b0936253ecc3d14db4fba37f191ba ext4: DAX iomap write support
e2ae766c1b030271b5099b25674e2131d1d1e8c1 ext4: convert DAX faults to iomap infrastructure
0bd2d5ec3d7655a849928f04597a0ceea0329176 ext4: rip out DAX handling from direct IO path
dd936e4313fa3f60abd6e67abb3cb66fc9a018d1 dax: rip out get_block based IO support
0cb80b4847553582830a59da2c022c37a1f4a119 dax: Fix sleep in atomic contex in grab_mapping_entry()
d1908f52557b3230fbd63c0429f3b4b748bf2b6d fs: break out of iomap_file_buffered_write on fatal signals
84358536dc355a9c8978ee425f87e116186bed16 xfs: actually report xattr extents via iomap
742d84290739ae908f1b61b7d17ea382c8c0073a xfs: disable per-inode DAX flag
d20a5e3851969fa685f118a80e4df670255a4e8d xfs: report zeroed or not correctly in xfs_zero_range()
0d5a75e9e23ee39cd0d8a167393dcedb4f0f47b2 xfs: make several functions static
26f1fe858f2744edfc75e92d34a6be0af5e8b45d xfs: reduce lock hold times in buffer writeback
72ccbbe154fc307c98153725822be515fc0326d3 xfs: remove EXPERIMENTAL tag from sparse inode feature
3cd48abcc1f76d6cd5ce61f3540801849a6c82e0 xfs: add tracepoints for the deferred ops mechanism
310a75a3c6c747857ad53dd25f2ede3de13612c9 xfs: change xfs_bmap_{finish,cancel,init,free} -> xfs_defer_*
2c3234d1ef53030ff6a79d55ba1fb291098467c2 xfs: rename flist/free_list to dfops
ba9e780246a15a35f8ebe5b60f4a11bb58e85bda xfs: add tracepoints and error injection for deferred extent freeing
e127fafd1d3c46532903d530dfa69822d3d35d8a xfs: remove unnecessary parentheses from log redo item recovery functions
51ce9d000c0a80bddf9a93a4232283cc9a4564c0 xfs: collapse single use static functions
3481b68285238054be519ad0c8cad5cc2425e26c xfs: move (and rename) the deferred bmap-free tracepoints
da1f039d6947b1a49f13b39a6de0df2a3e9e1ed1 xfs: don't log the entire end of the AGF
ea78d80866ce375defb2fdd1c8a3aafec95e0f85 xfs: track log done items directly in the deferred pending work item
4ed3f68792f6a9c21a290ae777565e7562a09653 xfs: create a standard btree size calculator code
c611cc0360cd924448c23ccd70ce8be703fcb4a6 xfs: count the blocks in a btree
385d655861d221bb43ae69a9cfa9adbefe31ad00 xfs: defer should allow ->finish_item to request a new transaction
69bca80744eef58fa155e8042996b968fec17b26 xfs: Propagate dentry down to inode_change_ok()
292378edcb408c652e841fdc867fc14f8b4995fa xfs: remote attribute blocks aren't really userdata
4453593be6c54e7581467e80f4a2757be098a3a2 xfs: return work remaining at the end of a bunmapi operation
e06259aa08fbc88c824130764c8667a8cc68c4d1 xfs: various swapext cleanups
39aff5fdb91e8fee6a2c28910a263a5228619ba2 xfs: refactor swapext code
f1b8243c55ca6fd2a3898e2f586b8cfcfff684bb xfs: add some 'static' annotations
0ee7a3f6b5b2f22bb69bfc6c60d0ea0777003098 xfs: don't take the IOLOCK exclusive for direct I/O page invalidation
b77428b12b55437b28deae738d9ce8b2e0663b55 xfs: defer should abort intent items if the trans roll fails
fa7f138ac4c70dc00519c124cf7cd4862a0a5b0e xfs: clear delalloc and cache on buffered write failure
9dbddd7b0c649bd6aa9442c717932325ec590303 xfs: resurrect debug mode drop buffered writes mechanism
3dd09d5a8589c640abb49cfcf92b4ed669eafad1 xfs: Honor FALLOC_FL_KEEP_SIZE when punching ends of files
f65e6fad293b3a5793b7fa2044800506490e7a2e xfs: use iomap new flag for newly allocated delalloc blocks
74278da9f70d84d715601fe794567a6d2bfdf078 inode: convert inode_sb_list_lock to per-sb
e97fedb9ef9868ff24d588be781906cf7c1b59ae sync: serialise per-superblock sync operations
c7f5408493aeb01532927b2276316797a03ed6ee inode: rename i_wb_list to i_io_list
6c60d2b5746cf23025ffe71bd7ff9075048fc90c fs/fs-writeback.c: add a new writeback list for sync
070b57fcacc9dfc23a180290079078373fb697e1 cpuset: introduce effective_{cpumask|nodemask}_cpuset()
f047cecf2cfc9595b1f39c9aab383bb0682f5a53 cpuset: fix to migrate mm correctly in a corner case
e2b9a3d7d8f4ab2f3491b8ed2ac6af692a2269b2 cpuset: add cs->effective_cpus and cs->effective_mems
734d45130cb4f668fb33d182f6943523628582ef cpuset: update cs->effective_{cpus, mems} when config changes
554b0d1c845e42ef01d7f6f5f24b3e4c6129ce8f cpuset: inherit ancestor's masks if effective_{cpus, mems} becomes empty
8b5f1c52dcd1accd3a940cfcb148bef6de589524 cpuset: use effective cpumask to build sched domains
39bd0d15eca5af15ee1492964f317ecdb024a9d6 cpuset: initialize top_cpuset's configured masks at mount
ae1c802382f7af60aa54879fb4f5920a9df1ff48 cpuset: apply cs->effective_{cpus,mems}
7e88291beefbb758fa3b27e500ee2e0c888d6e44 cpuset: make cs->{cpus, mems}_allowed as user-configured masks
390a36aadf39e241c83035469aae48ed1a144088 cpuset: refactor cpuset_hotplug_update_tasks()
be4c9dd7aee5ecf3e748da68c27b38bdca70d444 cpuset: enable onlined cpu/node in effective masks
a13812683f1118ee4deed88d8d9bc2c268358b2e cpuset: fix the WARN_ON() in update_nodemasks_hier()
e1cba4b85daa71b710384d451ff6238d5e4d1ff6 cgroup: Add mount flag to enable cpuset to use v2 behavior in v1 cgroup
b8d1b8ee93df8ffbabbeadd65d39853cfad6d698 cpuset: Allow v2 behavior in v1 cgroup
cf8e0fedf0784ef4bc1889380b09eda295e3d109 mm/zsmalloc: simplify zs_max_alloc_size handling
384632e67e0829deb8015ee6ad916b180049d252 userfaultfd: non-cooperative: fix fork use after free
b22823719302e88d0e2a6bb06433bd97b175a8d8 userfaultfd: non-cooperative: notify about unmap of destination during mremap
0f0796945614b7523987f7eea32407421af4b1ee shmem: introduce shmem_inode_acct_block
8d10396342063c79e92c4e46215370ab7b988569 userfaultfd: shmem: add shmem_mfill_zeropage_pte for userfaultfd support
9d4ac934829ac58c5109c49e6dfe677300e5e652 userfaultfd: provide pid in userfault msg
a36985d31a65d5c0559fb582719e32eaf0ccec3b userfaultfd: provide pid in userfault msg - add feat union
6b240306ee1631587a87845127824df54a0a5abe selinux: Perform both commoncap and selinux xattr checks
8db6c34f1dbc8e06aa016a9b829b06902c3e1340 Introduce v3 namespaced file capabilities
cd4386a931b6310b05559d2e28efda04d30ab593 s390/cpcmd,vmcp: avoid GFP_DMA allocations
ba385c0594e723d41790ecfb12c610e6f90c7785 s390/mm: fix write access check in gup_huge_pmd()
b91688f528fe96e09d17e6d87c1b2805eb0c445e x86/vmware: Skip lapic calibration on VMware
854dd54245f7f1b1175b1bada613929396a571be x86/vmware: Skip timer_irq_works() check on VMware
a94685876859be30446357db6d6c4a9c951305b4 xen-netback: handle IPv6 TCP GSO packets from the guest
ed1f50c3a7c1ad1b1b4d584308eab77d57a330f8 net: add skb_checksum_setup
f9708b4302733ca023722fddcf9f501a3cb8c98b consolidate duplicate code is skb_checksum_setup() helpers
d554f73df6bc35ac8f6a65e5560bf1d31dfebed9 xen-netfront: reset skb network header before checksum
5d054964f57ade1adb310313c3cfb8e93e804e8f GFS2: aggressively issue revokes in gfs2_log_flush
022ef4feed0c648aeb72d0c8ad06d266de08f525 GFS2: Move log buffer accounting to transaction
adbc3ddf28ad9c2742fb9fc82e2aacfd414a16c1 GFS2: flush the log and all pages for jdata as we do for WB_SYNC_ALL
cc555b09d8c3817aeebda43a14ab67049a5653f7 GFS2: Take inode off order_write list when setting jdata flag
f39f0d1e1e93145a0e91d9a7a639c42fd037ecc3 ibmvnic: Fix initial MTU settings
bd0b6723139416fd22acd5849b93edbd32d561f3 ibmvnic: Move login and queue negotiation into ibmvnic_open
a57a5d25a56bd9625722d17fecacf21cbe9818d8 ibmvnic: Move login to its own routine
f6ef6408e840f6e1a7c016d6dd1b4341bc1023f6 ibmvnic: Move ibmvnic adapter intialization to its own routine
ea5509f53ce81662eb409c514086734d1ce16207 ibmvnic: Correct ibmvnic handling of device open/close
e704f0434ea60adedc07c847b46910d4840a7ecf ibmvnic: Remove debugfs support
f992887c34a15d40a257c73fe59800826bcaf1a4 ibmvnic: Update main crq initialization and release
f0b8c96cbcc5fbd4f66abcbf4bc442a1066d8899 ibmvnic: Create init and release routines for the bounce buffer
c657e32cd0555e97ae8903f8a5a9d7c2f3579650 ibmvnic: Create init and release routines for the tx pool
0ffe2cb7903b20e74a9f42c53016e61e187ee345 ibmvnic: Create init and release routines for the rx pool
b510888f9639588d30d48eaaa32502cdb1c9e9e0 ibmvnic: Merge the two release_sub_crq_queue routines
7bbc27a4961a7d5f8e4294929ce64d6c6e81e90c ibmvnic: Create init/release routines for stats token
1b8955ee5f6c1575c09b44c8253883394c78bef7 ibmvnic: Cleanup failure path in ibmvnic_open
59af56c25bc34d4e98820c694d48fd5145fb6e4f ibmvnic: Unmap longer term buffer before free
661a26227621b9a602a816fa29451e53c5ba006b ibmvnic: Remove inflight list
3748905599cbbb37bf90f818109151809de5241c ibmvnic: Correct crq and resource releasing
d76e0fec7e03ab29f0dd68a89364225c98bd5568 ibmvnic: Remove unused bouce buffer
7f3c6e6b905018d07228fe0f43f0ef1359e7196d ibmvnic: Set real number of rx queues
2f9de9bac625ae08e9ea132e8dc08cfbe9fb67d2 ibmvnic: Only retrieve error info if present
5d5e84eb7276d30a21257515a83b34d1ef77f99b ibmvnic: Move initialization of the stats token to ibmvnic_open
53da09e92910f675ebb93921007428a3c2a024fb ibmvnic: Add set_link_state routine for setting adapter link state
d346b9bc4f652ddaf29b2d80ec7fc75d3b07124e ibmvnic: Split initialization of scrqs to its own routine
1bb3c739ad2c0030792cd527f30865accc50c460 ibmvnic: Move initialization of sub crqs to ibmvnic_init
bfc32f297337e86bbf16512ea27dd50dadd5959e ibmvnic: Move resource initialization to its own routine
90c8014c2be5e5805d972341b40221da4309d564 ibmvnic: Replace is_closed with state field
ed651a10875f13135a5f59c1bae4d51b377b3925 ibmvnic: Updated reset handling
c7bac00b4056ab951c377aff99bb91b81890c727 ibmvnic: Delete napi's when releasing driver resources
e0ebe942f42952fb23bb0596f8775e50bed0b341 ibmvnic: Whitespace correction in release_rx_pools
b41b83e9a784576b2bcc33bce447f7ce78fb265d ibmvnic: Clean up tx pools when closing
46293b940fede04f90aab18d4bfecc5bd942cf3a ibmvnic: Wait for any pending scrqs entries at driver close
161b8a813877fb7d3deba6b3bd2731d4f4a75c5e ibmvnic: Check for driver reset first in ibmvnic_xmit
6d0af07d5f4579ed8d43eb2de91c84c79c780755 ibmvnic: fix missing unlock on error in __ibmvnic_reset()
d944c3d60ac9ec6968d97ac5704155d0afac5216 ibmvnic: Track state of adapter napis
017892c1ec15d4efcb30edf9fb56a64c889540c3 ibmvnic: Handle failover after failed init crq
2ce9e4efbf4289ce48144ec4986f58033890fb6d ibmvnic: Send gratuitous arp on reset
10f7621588b86d181a167c1535d0754eb5a58ba8 ibmvnic: Fix cleanup of SKB's on driver close
8cb31cfc9448e2ce0bda899eb15f74bc0a875d90 ibmvnic: Non-fatal error handling
28cde751021abb16458b858da3403bd7c511c0d7 ibmvnic: Reset the CRQ queue during driver reset
8c0543adca2bb17808e46a24eb6e6247181a10b1 ibmvnic: Reset tx/rx pools on driver reset
57a49436f4e8a76a9125c44d084d12b2c6e6206c ibmvnic: Reset sub-crqs during driver reset
40c9db8ad8b4b7f87e2f4a5e80cf1732f2825e6b ibmvnic: Client-initiated failover
61d3e1d9bc2a1910d773cbf4ed6f587a7a6166b5 ibmvnic: Remove netdev notify for failover resets
c3e53b9a3efe300a7864ab1ccfbae239d50d0002 ibmvnic: Activate disabled RX buffer pools on reset
4c2687a512b9a6737e86d72f23ad0a1097d56bd5 ibmvnic: Ensure that TX queues are disabled in __ibmvnic_close
c8b2ad0a4a9015228874708f83a17b7bdb194f84 ibmvnic: Sanitize entire SCRQ buffer on reset
1cf9cc72bd7024af69419b5adee42c39ad4caf6f ibmvnic: Remove VNIC_CLOSING check from pending_scrq
6a2fb0e99f9cab349dce0a36862b0cd370036452 ibmvnic: driver initialization for kdump/kexec
f3be0cbc722c8de2f45c5d9f71f1b21da85554fd ibmvnic: Fix error handling when registering long-term-mapped buffers
6d659237657c64e9e2a930865da4c777239b678e ibmvnic: Correct return code checking for ibmvnic_init during probe
5df969c3b0c6df03d72e0e7502c4adc7838442f9 ibmvnic: Fix assignment of RX/TX IRQ's
4d96f12a072c669d48dc3a2c6b539a9faeca138d ibmvnic: Initialize SCRQ's during login renegotiation
3d52b5949d0311c4b7bc4c223918fee0f5c0dc39 ibmvnic: Implement per-queue statistics reporting
52da5c114a884f8245dca5d3a69e1f45c759ba31 ibmvnic: Convert vnic server reported statistics to cpu endian
7c1885ae9aba0d6b3f854dfee099a3c1c796755f ibmvnic: Clean up resources on probe failure
d1cf33d93166f146484659448bda54f1f651379b ibmvnic: Add netdev_dbg output for debugging
35b6f55aa9ba65141f2def0997e23aab13715d3f trace/kprobes: Allow return probes with offsets and absolute addresses
9e52b32567126fe146f198971364f68d3bc5233f tracing/kprobes: Allow to create probe with a module name starting with a digit
06b57e4550d400c2e7dcafbde6fdb1fcb6fcdcee x86/intel_rdt: Init padding only if a device exists
70a1ee92564d079b4c7a375b244a6c849b81f12f x86/intel_rdt: Organize code properly
2545e9f51ea860736c4dc1e90a44ed75e9c91e3b x86/intel_rdt: Cleanup namespace to support multiple resource types
d3e11b4d6ffd363747ac6e6b5522baa9ca5a20c0 x86/intel_rdt: Move CBM specific data into a struct
0921c54769bac209b302027384e9dc081198c8f5 x86/intel_rdt: Add resource specific msr update function
ab66a33b032eb5b8186aeaf648127bce829c9efd x86/intel_rdt/mba: Memory bandwith allocation feature detect
05b93417ce5b924c6652de19fdcc27439ab37c90 x86/intel_rdt/mba: Add primary support for Memory Bandwidth Allocation (MBA)
6a507a6ad8a6955a7d57255377edcef576823749 x86/intel_rdt: Make information files resource specific
db69ef65636e6da135680d75d8646bd7e76136bc x86/intel_rdt/mba: Add info directory files for Memory Bandwidth Allocation
c6ea67de52c29a8b45e5fc7569fc4336bfd557b0 x86/intel_rdt: Make schemata file parsers resource specific
64e8ed3d4a6dcd6139a869a3e760e625cb0d3022 x86/intel_rdt/mba: Add schemata file support for MBA
a83827d04f081b1a73845553c7f60ab9cfd13767 x86/intel_rdt: Get rid of anon union
adcbdd70309dba5a12a9d8158deb6a62a6d5fc98 x86/intel_rdt: Fix padding when resource is enabled via mount
4797b7dfdfcf457075c36743d71e2b0feeaaa20f x86/intel_rdt: Return error for incorrect resource names in schemata
c39a0e2c8850f08249383f2425dbd8dbe4baad69 x86/perf/cqm: Wipe out perf based cqm
f01d7d51f577b5dc0fa5919ab8a9228e2bf49f3e x86/intel_rdt: Introduce a common compile option for RDT
0583020456cea9fcf43b84bb13a41eab059ae0a8 x86/intel_rdt: Change file names to accommodate RDT monitor code
cb2200e967c65519ca6c5426644a49dca65f6294 x86/intel_rdt: Mark rdt_root and closid_alloc as static
1b5c0b7583173b787b5c93ff89838a950d0e23ff x86/intel_rdt: Cleanup namespace to support RDT monitoring
dd131853f3fbc1c3aa051c34a2967c2f76309024 x86/intel_rdt: Make rdt_resources_all more readable
6a445edce657810992594c7b9e679219aaf78ad9 x86/intel_rdt/cqm: Add RDT monitoring initialization
edf6fa1c4a951b3a03e94b63e6483c5d9da3ab11 x86/intel_rdt/cqm: Add RMID (Resource monitoring ID) management
5dc1d5c6bac2cfe3420cf353dfb0ef2e543f7c10 x86/intel_rdt: Simplify info and base file lists
d4ab33201029913b594ae785a9665f45040396ab x86/intel_rdt/cqm: Add info files for RDT monitoring
65b4f403057e32da73c36e33d403890173c4c324 x86/intel_rdt: Prepare for RDT monitoring mkdir support
c7d9aac6131148abe29ed1dc6bd73ad1213d1f56 x86/intel_rdt/cqm: Add mkdir support for RDT monitoring
0734ded1abee9439b0c5d7b62af1ead78aab895b x86/intel_rdt: Change closid type from int to u32
d6aaba615a482ce7d3ec218cf7b8d02d0d5753b8 x86/intel_rdt/cqm: Add tasks file support
b09d981b3f346690dafa3e4ebedfcf3e44b68e83 x86/intel_rdt: Prepare to add RDT monitor cpus file support
a9fcf8627dc01049c390023bbb0323db3c785b91 x86/intel_rdt/cqm: Add cpus file support
90c403e83101c87ee9e6df8c8d30ea8628ff8bfc x86/intel_rdt: Prepare for RDT monitor data support
d89b7379015fc561060a4094676d143e6ed264e7 x86/intel_rdt/cqm: Add mon_data
f9049547f7e72377049d717354b2f56f36a5854a x86/intel_rdt: Separate the ctrl bits from rmdir
f3cbeacaa06e2b8c2f3ce8531e9aa3fe1f2762cd x86/intel_rdt/cqm: Add rmdir support
4af4a88e0c9246990f95c88eeba781265f27c58e x86/intel_rdt/cqm: Add mount,umount support
4be6c078428b08d1a948cc09faca8f1326231866 x86/intel_rdt: Introduce rdt_enable_key for scheduling
748b6b881ccdda8f0663c68605f431279e06f49a x86/intel_rdt/cqm: Add sched_in support
895c663ecef16c8138e20a7d5c052e0fcc400241 x86/intel_rdt/cqm: Add CPU hotplug support
9f52425ba303d91c8370719e91d7e578bfdf309f x86/intel_rdt/mbm: Basic counting of MBM events (total and local)
a4de1dfdd726537e2a78b55759fc646d9b0a0be8 x86/intel_rdt/mbm: Add mbm counter initialization
e33026831bdb5f051499fec6a606f79fe1f94cc8 x86/intel_rdt/mbm: Handle counter overflow
0dd2d7494cd818d06a2ae1cd840cd62124a2d25e x86/intel_rdt: Show bitmask of shareable resource with other executing units
eda61c265f3656be8345fdf0334b3a77829437fc x86/intel_rdt/cqm: Clear the default RMID during hotcpu
a9110b552d44fedbd1221eb0e5bde81da32d9350 x86/intel_rdt: Modify the intel_pqr_state for better performance
bbc4615e0b7df5e21d0991adb4b2798508354924 x86/intel_rdt/mbm: Fix MBM overflow handler during CPU hotplug
24247aeeabe99eab13b798ccccc2dec066dd6f07 x86/intel_rdt/cqm: Improve limbo list processing
5707b46a4206be2068444eb6b514a1ee070651c8 x86/intel_rdt: Remove redundant ternary operator on return
0576113a387e0c8a5d9e24b4cd62605d1c9c0db8 x86/intel_rdt: Move special case code for Haswell to a quirk function
1d9807fc64c131a83a96917f2b2da1c9b00cf127 x86/intel_rdt: Add command line options for resource director technology
d56593eb5eda8f593db92927059697bbf89bc4b3 x86/intel_rdt: Turn off most RDT features on Skylake
e13547bc181ae6c279adf0df054717787f24ee89 IB/bnxt_re: Fix frame stack compilation warning
b80f71f5816fce2da8a0df22719f106c0a3d8dc7 ethernet/mellanox: use core min/max MTU checking
ea3349a03519dcd4f32d949cd80ab995623dc5ac mlx4: xdp: Reserve headroom for receiving packet when XDP prog is active
69ba943151b2e40e201700cf5b3a94e433c6fd83 mlx4: dma_dir is a mlx4_en_priv attribute
159ddfd2ca30a2361324111ef64fdedf43e7dc32 mlx4: remove order field from mlx4_en_frag_info
aaca121dd6cfedc9afb9d0ee23ded9d84e217e20 mlx4: get rid of frag_prefix_size
d85f6c14e967b0bddfa9712daa17d79e297d18b8 mlx4: rx_headroom is a per port attribute
acd7628de05c73118aab7ae4847a5b5b2c6999c9 mlx4: reduce rx ring page_cache size
60c7f5ae5416a8491216bcccf6b3b3d842d69fa4 mlx4: removal of frag_sizes[]
b5a54d9a313645ec9607dc557b67d9325c28884c mlx4: use order-0 pages for RX
34db548bfb9580f33d9a7faecafe4da61a4428a3 mlx4: add page recycling in receive path
7d7bfc6a3f69d2debe104656fadd8d568fda0e5b mlx4: add rx_alloc_pages counter in ethtool -S
9e8c0395a7e87a8f0eb008297df25ffdf3e0e5b3 mlx4: do not access rx_desc from mlx4_en_process_rx_cq()
02e6fd3e5598bace683e05ee783f134722cb21b4 mlx4: factorize page_address() calls
68b8df464406e39925a54955294d5994df46bcf4 mlx4: remove duplicate code in mlx4_en_process_rx_cq()
4ed1eea82a21ba460e53468cc1c73cfdf83d0e00 qed: Revise MFW command locking
2f67af8c596e16760dc7e7d28ee0edd7ce59f2b4 qed: Pass src/dst sizes when interacting with MFW
179910020759bffe8d75f0b69e6307c25e4d660d qed: Correct endian order of MAC passed to MFW
6982ab609768f4e7c84eab053314effa0bc500fc net/mlx5e: Xmit, no write combining
aff2615763f206f897146e0ee1ddae8e22055ae3 net/mlx5e: Single bfreg (UAR) for all mlx5e SQs and netdevs
b5503b994ed5ed8dbfe821317e7b5b38acb065c5 net/mlx5e: XDP TX forwarding support
eba2db2bd2c81140e56f06889781f8ba953af6da net/mlx5e: Move mlx5e_rq struct declaration
864b2d715300d9082747fb5de2bb277359c75bff net/mlx5e: Generalize tx helper functions for different SQ types
3b77235b94347e813e2d4d33363512127d32e899 net/mlx5e: Proper names for SQ/RQ/CQ functions
33ad9711861060d82d5c9c3a5ffb238f4d54b097 net/mlx5e: Generalize SQ create/modify/destroy functions
3139104861d9a8fed13f813237cc998c8272eafc net/mlx5e: Different SQ types
7f859ecfa8d6e647d6c794c8af44d209c8372e77 net/mlx5e: Set SQ max rate on mlx5e_open_txqsq rather on open_channel
ff9c852f91d14d11a35514dda495999cfdb41a7a net/mlx5e: Introduce mlx5e_channels
a5f97fee743cd7ee9932036583dbe05298ff2648 net/mlx5e: Redirect RQT refactoring
b676f653896aaf6b32b496709bd9ebbc771d7ed7 net/mlx5e: Refactor refresh TIRs
acc6c5953af1949fc17c09cacd4842f149b4569d net/mlx5e: Split open/close channels to stages
6a9764efb255f49a91e229799c38d5c1c9361987 net/mlx5e: Isolate open_channels from priv->params
a43b25daef78610ccef025d59f82ce8e0c42ab6c net/mlx5e: CQ and RQ don't need priv pointer
9008ae074885ddaa2470f4c106245ddea4ae2a67 net/mlx5e: Minimize mlx5e_{open/close}_locked
55c2503dae1ac8aed14d261dc02f967b4d6b1f88 net/mlx5e: Introduce switch channels
546f18ed3fb55a6689488993d03b5576982790c3 net/mlx5e: Fail safe ethtool settings
be7e87f92b5802df9302af7856990172091a385f net/mlx5e: Fail safe cqe compressing/moderation mode setting
6f9485af4020a858ac91adc5286411b6dd3c2f06 net/mlx5e: Fail safe tc setup
2e20a151205be8e7efa9644cdb942381e7bec787 net/mlx5e: Fail safe mtu and lro setting
d7e75a325cb2d2b72e7ac9a185abc1cd59bc9922 net/mlx5e: Add offloading of E-Switch TC pedit (header re-write) actions
1226337ad98ffc7982244a67a47faab1eacaca33 qed: Correct HW stop flow
5d24bcf1895cb5095ffb9e06a219a858abaa15da qed: Move to new load request scheme
9c8517c40f6873d5fcdfa0eafdf28c5a921d600b qed: Utilize resource-lock based scheme
282ccf6efb7c5d75b0283b66ed487957163ce8fe drivers: add explicit interrupt.h includes
956327913c2e23048d7a586414bafe7ec0c2a887 drivers/net/ethernet/mellanox/mlx5/core/en_main.c: fix build with gcc-4.4.4
e270e966868530d2667ac0a0b1080560b2965408 drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c: fix build with gcc-4.4.4
c800460086d1db3579b747d9297cecd2bbf70119 qed: Add a missing error code
771addf60ac0a266a023c3e7fcae9a629658b455 IB/core: Refactor idr to be per uverbs_file
3832125624b75b54567be906e9aa67e1343be569 IB/core: Add support for idr types
6be60aed126ccd4dfb4a60d1dc2ecec0bca21b2e IB/core: Add idr based standard types
fd3c7904db6e05043398aee5c1448682acfb025b IB/core: Change idr objects to use the new schema
f48b726920d96dcd1860df06143bdea7d6d7dcc3 IB/core: Add lock to multicast handlers
cf8966b3477d5e6545393bb4499f2051ea554c62 IB/core: Add support for fd objects
1e7710f3f6563940bb6bbc94aa8eadfd344a86af IB/core: Change completion channel to use the reworked objects schema
053ee0a7035781a27eedb2b06cac638c8c65ce83 net/mlx5e: fix build error without CONFIG_SYSFS
102722fc6832a16850c05595b98c9232549d99f3 net/mlx5e: Add support for RXFCS feature flag
f6d96a2092bf448be417575b4725523072f4fc19 net/mlx5e: Make mlx5e_modify_rqs_vsd a static function
95b6c6a519a300dc667960740ebd43b960b32883 net/mlx5e: Reuse alloc cq code for all CQs allocation
457fcd8a11f7f7f2483b2366d8a98f269c085302 net/mlx5e: Set default RX moderation parameters on driver load
10a0176e4e6eb6243c4b1c55e50372e03139d592 qede: Update receive statistic once per NAPI
15ed8a47ff0571dd268e37002511993b47e996bd qede: Add support for ingress headroom
2c3b5beec46ab0d77c94828eb15170b333ae769a net/mlx5e: More generic netdev management API
8f493ffd88eac1b45685f0f21005b65352320b8a net/mlx5e: IPoIB, RX steering RSS RQTs and TIRs
bc81b9d3267c4d23d829e9af88b21eb46d9d388b net/mlx5e: IPoIB, RSS flow steering tables
5426a0b2746a629eed8608397a385f34081f3f66 net/mlx5e: IPoIB, TX TIS creation
603f4a45214d602f27749ad8b3bb6bd767dac2d5 net/mlx5e: IPoIB, Basic netdev ndos open/close
ec8fd927b7a9006425f34dc51880e9fed582c4a7 net/mlx5e: IPoIB, Underlay QP
77bdf8950b3cd17c780b4e5a2803806a9f573f51 net/mlx5e: Xmit flow break down
20fd0c193ff6384717a6d500aa0e737a81c6a1fa net/mlx5e: RX handlers per netdev profile
9d6bd752c63c17419855bce1992e7b75af7370eb net/mlx5e: IPoIB, RX handler
955bc48081805c053aa53943b2904cb68569a364 net/mlx5e: E-switch vport manager is valid for ethernet only
d51e4af5c2092c48a06ceaf2323b13a39a2df4ee qed: aRFS infrastructure support
e4917d46a6537c5bf05acc2e42df3b67d87775e4 qede: Add aRFS support
30004b861afd99aebf34237373cb8ee9e890418e IB/core: Rename write flag to exclusive in rdma_core
f025c48958104868a9fceb04696cdfdb056794c9 IB/core: Don't pass the lock state to _rdma_remove_commit_uobject
d9edfc5a4f81165e64d4ad6e423a8554c88dd0de IB/core: Nullify ib_uobject during allocation
c52d8114d1a58f6fe4bfb9af39d262dd8f21e50e IB/core: A small refactor in destroy WQ handler
e0fcc61113c17a2eae0dea7e9e67ac71849475b5 IB/core: Don't use is_async in event files to infer events size
db1b5ddd53365a07a7754803bdba370ebb84ba19 IB/core: Rename uverbs event file structure
699a2d5b1b880b4e4e1c7d55fa25659322cf5b51 RDMA/uverbs: Initialize cq_context appropriately
2fc77572649163f8d669389e87217cc99942847a IB/opa-vnic: RDMA NETDEV interface
f0ad83ac58468e3807e72e929317519b69bcde1c IB/IPoIB: Introduce RDMA netdev interface and IPoIB structs
cd565b4b51e5fe258d6ce9ddc167ee51f3044ba5 IB/IPoIB: Support acceleration options callbacks
2c935bc57221cc2edc787c72ea0e2d30cdcd3d5e locking/atomic, kref: Add kref_read()
b7b37ee0e137c8384c6cb3a37c4621649d5acdf6 cxgb3: Convert PDBG to pr_debug
f6ca26f26837f90727a1450f010a1638834e34e1 qede: allocate enough data for ->arfs_fltr_bmap
cee2688e3cd60e0d1ab2f049e31cf11fa3f62540 IB/rxe: Offload CRC calculation when possible
4be3a4fa51f432ef045546d16f25c68a1ab525b9 IB/core: Fix kernel crash during fail to initialize device
dd77abf8a03a1ebd4dd3ddebecce312dcb0d1af1 IB/mlx4: Support RAW Ethernet when RoCE is disabled
e1f24a79f424ddb03828de7c0152668c9a30146e IB/mlx5: Support congestion related counters
50f22fd8ecf9001f2813ed0255a26e95f18bb870 IB/mlx5: Set mlx5_query_roce_port's return value to void
f1b65df5a232a2bd39a9b9e48b88a2b87cddef55 IB/mlx5: Add support for active_width and active_speed in RoCE
a7082ef066f022c9bdeaae8d23ec2c119fecf7d9 mlx5: hide unused functions
19489c7f0d9040ed2ffc23747e14af95dba479d2 qed/qede: Enable tunnel offloads based on hw configuration
97379f15c21e7ae27eb1ecf84adcace42c960c87 qed/qede: Add UDP ports in bulletin board
eaf3c0c6b4e307e5c7e6cbeb8c5a17be7feee249 qed - VF tunnelling support [VXLAN/GENEVE/GRE]
4d6f28591fe415fc5233e9148c66a1b81ad17425 {net,IB}/{rxe,usnic}: Utilize generic mac to eui32 function
3e7e1193e28a1428e857f3f44870ec2dbd615e6a IB: Replace ib_umem page_size by page_shift
bd174fc2ca63f1c833a09f930796d789fb1f5361 IB/mlx5: Fix function updating xlt emergency path
438b228e03740957d94198417d28a6ebea6672ed IB/mlx5: Fix UMR size calculation
523791d7c5eb4533ded3ba3de3517431243c0de5 IB/mlx5: Fix implicit MR GC
4df4a5bac3264efa0595b52b2a9cd5274b32f0d4 IB/mlx5: Decrease verbosity level of ODP errors
403cd12e2cf759ead5cbdcb62bf9872b9618d400 IB/umem: Add contiguous ODP support
b2ac91885b9f137fd7ed35593a72bcee9e049ba8 IB/mlx5: Add contiguous ODP support
1b7dbc26fcb4822787d6a183d78384a866508d2f IB/mlx5: Extract page fault code
db570d7deafb47ee635981f403a6531844c18ba5 IB/mlx5: Add ODP support to MW
cc47dd684ee04f9f49f081002a74ef1ba9d14cc8 IB/vmw_pvrdma: Spare annotate imm_data
f470f22cfa3d42f357ed404a06ec77aa09ddb05b qed: Add support for MFW resource locking.
db82f70e4c3e0901ba1e5c0eecbd913133261985 qed: Add support for PTP resource locking.
035744975aecf9b8e02920d93027a432c51062d1 qede: Add support for PTP resource locking.
6a3ff0db13110fad9ecaf9554e0a1f93c5d7b774 qed: Remove the un-needed ptp header file.
d179bd1699fccd9d5b9bc38470bab7343a441ea0 qed: Acquire/release ptt_ptp lock when enabling/disabling PTP.
27b0b83233ced9e6b7448875a40382f7384daccd IB/rxe: fix typo: "algorithmi" -> "algorithm"
218271adca2a3033d6ac9e3a71dcf81d5543afc6 Ib/core: Mark local uverbs_std_types functions to be static
20c7840a77ddcb2ed2fbd66e8197db2868495751 IB/core: If the MGID/MLID pair is not on the list return an error
ee1c60b1bff8f258fa530def3459726f8e922caf IB/SA: Modify SA to implicitly cache Class Port info
461a6946b1f93f6720577fb06aa78e8cbd9291c9 iommu: Remove pci.h include from trace/events/iommu.h
2196f2716292c39b35c86f5238ed16a8978f9ad4 IB/SA: Add support to query opa classport info.
1d447a39142e0eaf8526fcb37699e6b8cce5eaa8 net/mlx5e: Extendable vport representor netdev private data
45247bf2985edd983bb241dfa71f0c17713c8e7b net/mlx5: Remove encap entry pointer from the eswitch flow attributes
c1ae11521b1e87523553ddd3c1aa88be3d710c96 net/mlx5e: Move the encap entry structure from the eswitch header
1a8552bd81af5f4f19b26ac58e8c85866d4f7de8 net/mlx5e: Remove output device parameter from create encap header helpers definition
033354d501862ca1f58caa1e5c5775712e1bff17 net/mlx5e: Read neigh parameters with proper locking
f405df5de3170c00e5c54f8b7cf4766044a032ba refcount_t: Introduce a special purpose refcount type
29dee3c03abce04cd527878ef5f9e5f91b7b83f4 locking/refcounts: Out-of-line everything
318b1dedcd39012624f466d281627553e9fa2570 locking/refcounts: Add missing kernel.h header to have UINT_MAX defined
9dcfe2c75b51f454f39c2de4756e841228865b47 locking/refcounts: Change WARN() to WARN_ONCE()
bd174169c7a12a37b3b4aa2221f084ade010b182 locking/refcount: Add refcount_t API kernel-doc comments
d557d1b58b3546bab2c5bc2d624c5709840e6b10 refcount: change EXPORT_SYMBOL markings
fd25d19f6b8da315332bb75936605fb45d3ea981 locking/refcount: Create unchecked atomic_t implementation
5d6dec6fba38c3e2d408df108bb92ef4ac201f18 locking/refcount: Remove the half-implemented refcount_sub() API
37b498ff238549b30c9e70d4e45f522fd53b8994 net/mlx5e: Add neighbour hash table to the representors
232c001398ae8406dc0daf07b14e6ec9a5562719 net/mlx5e: Add support to neighbour update flow
f6dfb4c3f2161c23ab2939dd1b5f133dcdf147c6 net/mlx5e: Update neighbour 'used' state using HW flow rules counters
a2fa1fe5ad13e7f11b82291fc08bdc654fac741e net/mlx5e: Act on delay probe time updates
1f5b1e47ee08f6c623db599b6c23ce7c20b79458 net/mlx5e: Optimize poll ICOSQ completion queue
0f6e4cf67411631be7f010fdb5c2d82c0c8705c0 net/mlx5e: Disable HW LRO when PCI is slower than link on striding RQ
07ff2ed03bb874a5bb97361a5a07ee28f1afa574 qed: Prevent warning without CONFIG_RFS_ACCEL
90898850ec4e7b3ba0f9a35cc7169ff19ff367a6 IB/core: Rename struct ib_ah_attr to rdma_ah_attr
0a18cfe4f6d7dba135a04dc18633006ba5b51646 IB/core: Rename ib_create_ah to rdma_create_ah
67b985b6c75530bd3dccd55d61d2c9027ab2ca38 IB/core: Rename ib_modify_ah to rdma_modify_ah
bfbfd661c9ea2cceb5bb4de8b280ac8a37cf68c2 IB/core: Rename ib_query_ah to rdma_query_ah
365231593409fb79b11dd9bfcc27a29090bf9de6 IB/core: Rename ib_destroy_ah to rdma_destroy_ah
71d53ab47ee6e1f54f98e03f28ee36353f8c7f31 IB/mlx4: Rename to_ib_ah_attr to to_rdma_ah_attr
38349389fece9dc1509f43791e086009a1b79db4 IB/mlx5: Rename to_ib_ah_attr to to_rdma_ah_attr
766b7f6cf0c0bc3a74403074b78c1a2f26cb3fd1 IB/mthca: Rename to_ib_ah_attr to to_rdma_ah_attr
f988653a6b050bc4f24618222161681bf502b11c IB/PVRDMA: Rename ib_ah_attr related functions
2224c47ace2387610f8cff0c562db2c6e63df026 IB/core: Add accessor functions for rdma_ah_attr fields
d8966fcd4c25708c3a76ea7619644218373df639 IB/core: Use rdma_ah_attr accessor functions
44c58487d51a0dc43d96f1dc864f0461ec6a346a IB/core: Define 'ib' and 'roce' rdma_ah_attr types
64b4646eaf3dab4cc7b3040d10d565a83654446f IB/core: Define 'opa' rdma_ah_attr type
c2f8fc4ec4400901e5561d4815deca19f395deb6 IB/SA: Rename ib_sa_path_rec to sa_path_rec
dfa834e1d97e24c7d6b7c5b102728d69d6361501 IB/SA: Introduce path record specific types
9fdca4da4d8c83caefb9f2fd897d6a7bc355dfe6 IB/SA: Split struct sa_path_rec based on IB and ROCE specific fields
57520751445b837c20a8e658e3dae3a7e7ddf45c IB/SA: Add OPA path record type
4c33bd1926ccbfad362d22208c23cc045c5c82af IB/SA: Add support to query OPA path records
8d3f87d8cd0a16c58ae7e4410938528866c1c0db qed*: Fix issues in the ptp filter config implementation.
f870a3c6727db5fcfeaa42d099f75872e4b17553 qed*: Fix possible overflow for status block id field.
693dfd5a3f19efc44acf3a57217c0480e414f8ee IB/mlx5: Enable IPoIB acceleration
f4cd876529194b2d3f653c645ba203688e9e4ba3 IB/hfi1: Name function prototype parameters
5042cddfd058a2db419ba7aaadc866e8dccca06c IB/hfi1: Use filedata rather than filepointer
5fbded483c699823a7cca001a5c27ddc4d73370f IB/hfi1: Search shared contexts on the opened device, not all devices
9b60d2cbe07486658a32d4ed2fff7085c44bae7a IB/hfi1: Clean up context initialization
8737ce95c463c6d8c4307ab3d6858cbf71cd4fc8 IB/hfi1: Fix an assign/ordering issue with shared context IDs
62239fc6e5545b2e59f83dfbc5db231a81f37a45 IB/hfi1: Clean up on context initialization failure
af5df5fb59ee01e78fd334c3d6202d9e7bcfddd3 IB/rxe: Update caller's CRC for RXE_MEM_TYPE_DMA memory type
8ac1ed791401790968fd00ca63ca4fa814677199 treewide: spelling: correct diffrent[iate] and banlance typos
be47c5555778fa3354950731023deb034a9e445e qede: Split PF/VF ndos.
9078b4eea119c13d633d45af0397c821a517b522 uapi: includes linux/types.h before exporting files
ea6819e1f2d6c30624ea067f4b3a50a3cca79d8a smc_diag.h: fix include from userland
20b6a1c78280dbeb45214c463cf9cbccb3665146 net/mlx5e: Fix setup TC ndo
5360fd473c23f18b42722cdb13a1c6ec7acd96ff net/mlx5e: IPoIB, Only support regular RQ for now
508541146af18e43072e41a31aa62fac2b01aac1 net/mlx5: Use underlay QPN from the root name space
aa4ad88cfcd4ee45f527fb982140576711e3b501 qed: Fix uninitialized data in aRFS infrastructure
2432a3fb5cff026005aaad24e42226402f7fd0aa mlx5e: add CONFIG_INET dependency
cdc5a7f363be34287ac6c2345e5d1d3b37cf4a23 net/mlx5e: Use the correct delete call on offloaded TC encap entry detach
b57fe691961cc8f00541f9a435c70df45d41e514 net/mlx5e: IPoIB, handle RX packet correctly
6e8484c5cf07c7ee632587e98c1a12d319dacb7c RDMA/mlx5: set UMR wqe fence according to HCA cap
f937d93a9122d1510ca6e4bb8d860aedcf9408c3 RDMA/uverbs: Declare local function static and add brackets to sizeof
d3957b86a40612826ef935f474b31359d66cbdca RDMA/SA: Fix kernel panic in CMA request handler flow
e57bb6be5e095351086d3e6de9853a0763342535 RDMA/qedr: Add 64KB PAGE_SIZE support to user-space queues
ab156afd3eeb68ce7b875ec8d9ff4f64d1427776 IB/ipoib: Fix memory leaks for child interfaces priv
022d038a163f9e889428789d681b97bf07730fb7 IB/ipoib: Limit call to free rdma_netdev for capable devices
560b7c3ffec1ca7d5de250d8ca7b1ca2349e98a4 IB/ipoib: Fix access to un-initialized napi struct
4542d66bb26f2d021c70a78e46f183c6675fc4c9 IB/ipoib: Fix memory leak in create child syscall
5f195c2c5cba60241004146cd12d71451d6b0fc4 net/mlx5e: Fix min inline value for VF rep SQs
492d070f2495d4b200124ed44a35ab3d8f74ac93 net: sfc: remove redundant variable start
8861249c740fc4af9ddc5aee321eafefb960d7c6 crypto: x86/sha1 - Fix reads beyond the number of blocks passed
b2ee7d46befc43e355ffaf7bfabb00e7a901b3a0 loop: Add PF_LESS_THROTTLE to block/loop device thread.
e72c9a2a67a6400c8ef3d01d4c461dbbbfa0e1f0 scsi: virtio_scsi: let host do exception handling
e323369b2e204da4dc771bbddceef986f4bf85d5 kvm-vfio: Decouple only when we match a group
5d6dee80a1e94cc284d03e06d930e60e8d3ecf7d vfio: New external user group/file match
83b4605b0c16cde5b00c8cf192408d51eab75402 PCI/msi: fix the pci_alloc_irq_vectors_affinity stub
6f9a22bc5775d231ab8fbe2c2f3c88e45e3e7c28 PCI/MSI: Ignore affinity if pre/post vector count is more than min_vecs
969b0950a188750bd6ad12693fa3b6e8d63036fb drm/i915: Add interface to reserve fence registers for vGPU
d3798ae8c6f3767c726403c2ca6ecc317752c9dd mm: filemap: don't plant shadow entries without radix tree node
13b287e8d1cad951634389f85b8c9b816bd3bb1e ipv4: Namespaceify tcp_keepalive_time sysctl knob
9bd6861bd4326e3afd3f14a9ec8a723771fb20bb ipv4: Namespecify tcp_keepalive_probes sysctl knob
b840d15d39128d08ed4486085e5507d2617b9ae1 ipv4: Namespecify the tcp_keepalive_intvl sysctl knob
579eb62ac35845686a7c4286c0a820b4eb1f96aa ipvs: rerouting to local clients is not needed anymore
39b9722315364121c6e2524515a6e95d52287549 ipvs: handle connections started by real-servers
8fb04d9fc70a67ccabf71dbabf92d7f6fca64a16 ipvs: don't alter conntrack in OPS mode
698e2a8dca98e4de32f3f630e6d9cd93753c52e1 ipvs: make drop_entry protection effective for SIP-pe
3ec10d3a2ba591c87da94219c1e46b02ae97757a ipvs: update real-server binding of outgoing connections in SIP-pe
fb452a1aa3fd4034d7999e309c5466ff2d7005aa Revert "net: use lib/percpu_counter API for fragmentation mem accounting"
75bb10b479c33a8e15ab99d6f35a141e86df8547 pinctrl: intel: Add Intel Denverton pin controller support
28072ad50ca7328bd99f9dba94ac27c723da0053 scsi: fix device handler detach oops
c49c83458f73d9fff7f441fb73268af3d15cfe52 scsi_dh_alua: allocate RTPG buffer separately
43394c67f8d6bb2f452ac25332ca0b271b344d81 scsi_dh_alua: Use separate alua_port_group structure
0047220c6c3641eeaf0460fb1cc8bbb7f81bd47e scsi_dh_alua: use unique device id
a4253fde53fda56c2116a1cf8df9c93ef272eab4 scsi_dh_alua: simplify alua_initialize()
28261402ddae5e6753fc6e25fae9fe492b869898 revert commit a8e5a2d593cb ("[SCSI] scsi_dh_alua: ALUA handler attach should succeed while TPG is transitioning")
aa90f49036a6a9dd917c5f571497a28e6a6e5bcc scsi_dh_alua: move optimize_stpg evaluation
7af33612f4dae69d6a8c79fd9313c618e20b0f7c scsi_dh_alua: remove 'rel_port' from alua_dh_data structure
03197b61c5ec28f5eded69abb54eca699ac9ba0c scsi_dh_alua: Use workqueue for RTPG
00642a1bff0c2bc72d78d13598e26eb44caa1e85 scsi_dh_alua: Allow workqueue to run synchronously
851cde9909dd8b6fb90fab7f4e815c8f86c85a0d scsi_dh_alua: Add new blacklist flag 'BLIST_SYNC_ALUA'
2b35865e7a290d313c3d156c0c2074b4c4ffaf52 scsi_dh_alua: Recheck state on unit attention
c57168a1e15007e59fd2730678c7a6b28e8c7a37 scsi_dh_alua: update all port states
9d2c30395213166e0b5614fe97576a789864e5de scsi_dh_alua: Send TEST UNIT READY to poll for transitioning
d3d328919f278eda489a482541583f79987ad0e2 scsi_dh: add 'rescan' callback
1f275f976fdc04bf1bfd06929d10852b1b05decc scsi_dh_alua: Declare local functions static
a4bd85203190990ad808abbd4a5dc848a950002c scsi_dh_alua: uninitialized variable in alua_rtpg()
fe8b9534a0a0356f8a76467e2c561194bdb53c84 scsi_dh_alua: do not fail for unknown VPD identification
086acff2cf8a6a41f533e5da5f51923db5f68df4 scsi: scsi_dh_alua: Fix memory leak in alua_rtpg()
1fdd14279eab2e9f79745631379f0c53cb8f9a5a scsi: scsi_dh_alua: fix missing kref_put() in alua_rtpg_work()
df3d422cbac685da882e4c239dfda07de33d431b scsi: scsi_dh_alua: Fix a reference counting bug
d29425b065cdab5c5e65a48108adde5ea72d4656 scsi: scsi_dh_alua: Fix RCU annotations
625fe857e4fac6518716f3c0ff5e5deb8ec6d238 scsi: scsi_dh_alua: Check scsi_device_get() return value
7cb689fe42927281b8d98606ae5450173fcc66a9 scsi: scsi_dh_alua: Ensure that alua_activate() calls the completion function
0aeccdfe220c360ab888816da06b8eb67d910ff6 scsi: scsi_dh_alua: Warn if the first argument of alua_rtpg_queue() is NULL
6934be4f016311cf88c316dad5c75e4ccf8a7fc0 scsi: scsi_dh_alua: remove synchronous STPG support
496c91bbc9109ff99907d2a94fccb7d8d4349010 scsi: remove various unused blist flags
d291f1a6523292d916fe1659c67f6db061fbd1b5 IB/core: Enforce PKey security on QPs
8f408ab64be6319cb7736cbc6982838dcc362306 selinux lsm IB/core: Implement LSM notification system
47a2b338fe63200d716d2e24131cdb49f17c77da IB/core: Enforce security on management datagrams
a806f7a1616f29b80749d708115a643c1f4ba056 selinux: Create policydb version for Infiniband support
3a976fa6767f3edebbf43839b686efaf71b8dee1 selinux: Allocate and free infiniband security hooks
cfc4d882d41780d93471066d57d4630995427b29 selinux: Implement Infiniband PKey "Access" access vector
ab861dfca1652aa09b26b7aa2899feb29b33dfd9 selinux: Add IB Port SMP access vector
409dcf31538ae6ae96b3a0a1d3211e668bfefe8b selinux: Add a cache for quicker retreival of PKey SIDs
79d0636ac7f839d57680305a462f0d8ff9bb13ec IB/core: Fix uninitialized variable use in check_qp_port_pkey_settings
a750cfde1397dbbee1efe7737c2e952d6fc2d878 IB/core: Fix static analysis warning in ib_policy_change_task
1b9a07ee25049724ab7f7c32282fbf5452530cea {net, IB}/mlx5: Replace mlx5_vzalloc with kvzalloc
e29341fb3a5b885a4bb5b9a38f2814ca07d3382c net/mlx5: FPGA, Add basic support for Innova
7b6859fbdcc4a590c8ef03bcc00d770b42d41c42 qed: Utilize FW 8.20.0.0
27902f08065ba61514c331b7d6e85635c1655d82 net/mlx5e: Fix possible memory leak
5a052d62ab01cc95446f47cb1f41c3bd99546051 qede: Honor user request for Tx buffers
88fa95278503523df5fbb18b4e98526e61e13218 qed: Correct print in iscsi error-flow
2e7022d64e77dae5972f125f9ce95c012dfe7b3a qede: qedr closure after setting state
b19601bbf1a1a230beb35ea77acbbfb5bbf542fa qed: Fix setting of Management bitfields
48848a0690a36d0248255f6c3b7b6fd2a9948a57 qede: Fix sparse warnings
4f64675fac061746be112047fab5979e86768a08 qed: !main_ptt for tunnel configuration
78cea9ffaa34d289212a2444c2e357f7dabcf674 qed: Drop the 's' from num_ports_in_engines
06892f2ea2bd6b146707e4ab367aa5b20eac0ba7 qed: Flush slowpath tasklet on stop
410ed13cae39df563e31240992fcb32364d186a1 Add the mlxfw module for Mellanox firmware flash process
9831724a08f06f9560fcc3f1132cbd290e5f9149 net/mlxfw: select CONFIG_XZ_DEC
928a759593d21ec184536bde0b4816d21bcd5a86 net/mlxfw: remove redundant goto on error check
f5165a5492237d33239176e7e171c7a8991583cb net/mlxfw: fix a NULL dereference
c2df61376bf68c6532f75916a66c1473e1c99866 mlxfw: Make the module selectable
c1c1d86bdea45880c1843087d40498127d4293c9 net/mlxfw: Properly handle dependancy with non-loadable mlx5
2a351fd9b9ffe4168409e9f6519e048581ba6a41 qed: Support dynamic s-tag change
0ebbd1c8d9424a341a21eb18170f4eff1f1f0670 qed: Get rid of the attention-arrays
d749dd0dc117e7b02fa3a169c431476d59d18950 qed: IGU read revised
d031548e9194714dc2e8cb928d9f671432c8a342 qed: Distinguish between sb_id and igu_sb_id
726fdbe9fa7ebccda1579716f68f8bae6fa9c87a qed: Encapsulate interrupt counters in struct
1ac72433c565c8db38fd1f9db80a73193369e5fc qed: Remove assumption on SB order in IGU
09b6b14749523e3660b72be2ed91b3c0b852f58f qed: Provide auxiliary for getting free VF SB
50a207147fceb64ad24c1e08e4a2a75535922e81 qed: Hold a single array for SBs
ebbdcc669c7f9d8632d358a739d814485f8917dc qed: Reset IGU CAM to default on init
1ee240e31d4c0a5fd37ebaf064ca1f6cb6adcb6f qed: No need to reset SBs on IOV init
0db711bb26209992da375730eab6b3cec1edee7a qed: Create L2 queue database
f604b17d7fdef574792a7e0b39f1b926d6b43d9d qed*: L2 interface to use the SB structures directly
3946497aff655b9bb1807ef7e2ecbe799e6d832a qed: Pass vf_params when creating a queue-cid
bbe3f233ec5ea99049f33471c0c0d0d2a78e2116 qed: Assign a unique per-queue index to queue-cid
3b19f47820756f9905e7ef184747fbb3c8ed062f qed: Make VF legacy a bitfield
007bc37179c14a6d1ff1545695e2492b3a376bc1 qed: IOV db support multiple queues per qzone
08bc8f15e69cbd9f8e3d7bbba4814cec50d51cfe qed: Multiple qzone queues for VFs
1a850bfc9e71871599ddbc0d4d4cffa2dc409855 qed: VFs to try utilizing the doorbell bar
de6ea92382f6d93f73ce1f77b9af5051e3f40798 net/mlx5e: Remove limitation of single NIC offloaded TC action per rule
13c547717231aad7e1635004ae3f698e5e78d6d1 qed: Cleaner seperation of LL2 inputs
58de289807f02122ef7eca96e50365d2c1440902 qed: LL2 code relocations
0518c12f1f79dc2f2020836974c577404e42ae89 qed*: LL2 callback operations
d2201a21598aa6ad47e23272119bc29e48201670 qed: No need for LL2 frags indication
0331402aeaefe858709b0a4d44ade15f82d3a119 qed: Fix an off by one bug
cf97050d547281edc5b813b501d5888c60f23bb2 net/mlx4_en: Remove unused argument in TX datapath function
9bcee89ac4dbafe77b7a2fc68c4a784358d6e4e4 net/mlx4_en: Improve receive data-path
cc26a4908682698cafdb5bb917f19840aff1a149 net/mlx4_en: Improve transmit CQ polling
9573e0d39ff8d7d1e0bcc10e23d18b9cbc4ca14e net/mlx4_en: Replace TXBB_SIZE multiplications with shift operations
4c07c132408a685d31bb6e638aef4d245e30703a net/mlx4_en: Refactor mlx4_en_free_tx_desc
4301ba7b3ed9d3ffbaebc295413fcd3e8ab34949 net/mlx5e: IPoIB, Move to a separate directory
076b0936e5fb8dd5513c1472a2c1d487b64d1580 net/mlx5e: IPoIB, Add ethtool support
7ca42c8094a4e265b8007a6776380f57cf093624 net/mlx5e: Add new profile function update_carrier
b6dc510fac4796a57527667d47c48ef57a578dfc net/mlx5e: IPoIB, Change parameters default values
c139dbfddd2c7848550ed06345060aa87701e818 net/mlx5e: Use hard_mtu as part of the mlx5e_priv struct
807c4415974ff0d0bd101fd99ff6152feb22b0ac net/mlx5e: IPoIB, Handle change_mtu
3844b07ee4c96d0cf8886611c21bb3a367b759e1 net/mlx5e: IPoIB, Add PTP support to IPoIB device driver
1170fbd8ff43ff7808ae4a698054762b8bfae340 net/mlx5e: IPoIB, Add ioctl support to IPoIB device driver
1a4a69751f4d24ffd3530f5a9694636db1566a3b qed: Chain support for external PBL
26462ad9c7ea18643f1a37adeab8b7eff6c5f5f4 qed: RoCE EDPM to honor PFC
b262a06e642cfb1eeb6c2c772f76dad674ada57e qed*: qede_roce.[ch] -> qede_rdma.[ch]
bbfcd1e8e1677b1e692144c5709945e1dfe1ed30 qed*: Set rdma generic functions prefix
6c9e80ea571db545a0baff1e0f48ae75a7ed127d qed: SPQ async callback registration
da2e9cf03b8fccbb69dd1e215bb1e554ce8e8cbe qede: Fix compilation without QED_RDMA
8e8dddba72d81b78742b002bebc3cce1b23d3f84 qed: Cleanup qed_roce before duplicating it
b71b9afdf6d6c1ca728fde2aa14bc71721cab34e qed: Split rdma content between qed_rdma and qed_roce
7003cdd6a121e7bdb8a05eb1931f9549a36ea723 qed*: Rename qed_roce_if.h to qed_rdma_if.h
4717628938423fcba0aa8fa889e9fed4eb6a655f net/mlx5: Add MCC (Management Component Control) register definitions
d2ad488b0073bd1a2c3f5d2ea50a7eb632103e5d net/mlx5: Add helper functions to set/query MCC/MCDA/MCQI registers
62bd22cf326dc4ac5be673c11cef4602dc1f5e47 net/mlx5: Add mlxfw callbacks
3ffaabecd1a1a014a484f293c311b8ecb0545541 net/mlx5e: Support the flash device ethtool callback
e2e086c196b297f84c625d53471e3edc022db565 net/mlx5e: IPoIB, Support the flash device ethtool callback
547eede070eb981f1442e494f08f4567dcf1d1c7 net/mlx5e: IPSec, Innova IPSec offload infrastructure
f21ad61424f7c623eddbcf54425a86afb68ca55f net/mlx4_en: Add dynamic variable to hold the number of user priorities (UP)
ec327f7a4340b635d89ca9667935adefa3905be1 net/mlx4_en: Do not allocate redundant TX queues when TC is disabled
c851a9dc4359c6b19722de568e9f543c1c23481c qed: Introduce iWARP personality
67b40dccc45ff5d488aad17114e80e00029fd854 qed: Implement iWARP initialization, teardown and qp operations
526d1d05e456c9cfc077694d18b5f521e2338f18 qed: Rename some ll2 related defines
cc4ad324e7e247bb4979791dd4f2ff11419d9742 qed: Add iWARP support in ll2 connections
b5c29ca7dab75f29a7df6e82285742f830d8ed1a qed: iWARP CM - setup a ll2 connection for handling SYN packets
65a91a6cdb868a28b919ca133c0f9d9dfd9a635a qed: iWARP CM add listener functions and initial SYN processing
25f4535a94c2b38d09912d7e8bab371c9e97be38 qed: initialize ll2_syn_handle at start of function
456a584947d5b92d5e5a62cc68125ab5f150aa8c qed: iWARP CM add passive side connect
4b0fdd7c8b757125ac7996617d914bbdb9e0348c qed: iWARP CM add active side connect
fc4c6065e661224df3db50780219ac53fee56e2b qed: iWARP implement disconnect flows
9816b614346925feac1198e33d2dc5201c4ef74e qed: iWARP CM add error handling
8e959601996dc645f4ed7004482a1667c27deb39 IB/core, opa_vnic, hfi1, mlx5: Properly free rdma_netdev
13fdd4458ed1b808946fd7baba657b6a51d3c72b IB/srpt: Make a debug statement in srpt_abort_cmd() more informative
91d1ae475b9833097e078c2581c9265d033cdbe4 qed: Fix printk option passed when printing ipv6 addresses
cbd09aebc2d62095b05797af5c9a315e3a71dcea IB/core: Don't resolve IP address to the loopback device
a512c2fbef9c700ee1ee0e045b75e140fef8f5ee IB/core: Introduce modify QP operation with udata
f7c8f2e9ddc71db0ae344f3ffb19df03ef32b719 IB/uverbs: Make use of ib_modify_qp variant to avoid resolving DMAC
98e77d9fd7dff05019436370e78c3ec0f9894e25 IB: Convert msleep below 20ms to usleep_range
d83187dda9b930dc268ab05da265f3d5d7eca451 IB/IPoIB: Convert IPoIB to memalloc_noio_* calls
56012e1cada54460f9e456cd77276e765e06ce6c IB/rxe: Set dma_mask and coherent_dma_mask
266098b841d48f7f0db40424bdbc072e4db14e9b IB/core: Fix sparse warnings
931b3c1a832621b4bdcbaf783096fc267eb36fbe RDMA/mlx5: Fix existence check for extended address vector
a7d2e03928c1936004750c56faf7534c8534f875 RDMA/vmw_pvrdma: Report CQ missed events
06f8174a97822f6befd28fc2dd315b43b82c700f IB/core: Protect sysfs entry on ib_unregister_device
498ca3c82a7b11e152a46c253f6b2087c929ce00 IB/core: Avoid accessing non-allocated memory when inferring port type
d334a5637dfb53f7d07017afc1e491903b482ef8 iommu/amd: Reduce amount of MMIO when submitting commands
23e967e17c58779b38f69f8d41d727f59440d36a iommu/amd: Reduce delay waiting for command buffer space
460c26d05bf7357a4d5b41b3d7a97727f5bdffe1 iommu/amd: Rip out old queue flushing code
d4241a276119bf404e6c0e23f06f84b84c4ecfc0 iommu/amd: Add per-domain flush-queue data structures
fd62190a67d6bdf9b93dea056adfcd7fd29b0f92 iommu/amd: Make use of the per-domain flush queue
e241f8e76c152e000d481fc8334d41d22c013fe8 iommu/amd: Add locking to per-domain flush-queue
a6e3f6f030396c0576c729fd8ca4bfb654d35bfe iommu/amd: Add flush counters to struct dma_ops_domain
fca6af6a5976dfa00182232f666b4f789c98bd0c iommu/amd: Add per-domain timer to flush per-cpu queues
ac3b708ad49f77b44faa104057783f161491e9e4 iommu/amd: Remove queue_release() function
54bd63570484167cb13edf81e31fff107b879981 iommu/amd: Suppress IO_PAGE_FAULTs in kdump kernel
9ce3a72cd7f7e0b9ba1c5952e4461b363824bca9 iommu/amd: Free already flushed ring-buffer entries before full-check
71c691fd06cc2625966620c93ce21bdcce32ed95 nvme-fc: avoid workqueue flush stalls
29c09648734b94e42802f021658a47361169403b nvme-fc: merge __nvme_fc_schedule_delete_work into __nvme_fc_del_ctrl
44c6ec77e12c387aaba420b30a54b94966f0d9e8 nvme-fc: change ctlr state assignments during reset/reconnect
96e24801056467c6483f68ef71d642fb925c3100 nvme-fc: check connectivity before initiating reconnects
2b632970da4f288e6dbdc826c34fbf74f40ec94c nvme-fc: add dev_loss_tmo timeout and remoteport resume support
a96d4bd867129e6124e3cd1006fcbcfea3341179 nvmet: fix fatal_err_work deadlock
158bfb8888c3f2beab747ab4f7a8197639f03e54 nvme-fc: decouple ns references from lldd references
6ddcf0a30adc5080504ca66f474101e7ad247dd7 lpfc: tie in to new dev_loss_tmo interface in nvme transport
41319e4f62f28aeb36ad6b51a58cec5e76884ebb scsi: lpfc: Fix a precedence bug in lpfc_nvme_io_cmd_wqe_cmpl()
5209654a46ee71137ad9b06da99d4ef2794475af x86/ACPI/cstate: Allow ACPI C1 FFH MWAIT use on AMD systems
7dafbab3753fcf59bc81748e5b2c5bf04e1c62c7 IB/hfi1: Add functions to parse BTH/IB headers
9039746cdf39dcbf2ddfcc4a68f729cbbbc853df IB/hfi1: Setup common IB fields in hfi1_packet struct
bb7dde8784913c06ccd1456bed6dcc5ebd0b3c24 IB/hfi1: Replace deprecated pci functions with new API
52d86e72c515ebd4fb0d329470aa50698e28fb36 IB/hfi1: Remove subtraction of uninitialized value
bec7c79cd8f764ba84c8ec6d8c402b8a7cd3a54f IB/hfi1: Modify handling of physical link state by Host Driver
13d84914db56c1afd1c9bf4f41e9bf91f061a7dd IB/hfi1,qib: Do not send QKey trap for UD qps
9c1a99c3882beb9e88ed41d914e75bab2d593926 IB/hfi1: Create common expected receive verbs/PSM code
fe4e74eeb24286c730672e776ac4c2c3caa19137 IB/hfi1: Initialize TID lists to avoid crash on cleanup
f683c80ca68e087b55c6f9ab6ca6beb88ebc6d69 IB/hfi1: Resolve kernel panics by reference counting receive contexts
d41861942fc55c14b6280d9568a0d0112037f065 IB/core: Add generic function to extract IB speed from netdev
e1267b01240ab031a9c9dd84c1ffeb23670b590f RDMA: Remove useless MODULE_VERSION
c85023e153e3824661d07307138fdeff41f6d86a IB/mlx5: Add raw ethernet local loopback support
4a2da0b8c0782816f3ae6846ae7942fcbb0f8172 IB/mlx5: Add debug control parameters for congestion control
246ac9814c5b2c0e9916dca5fbf8d6a40245fad1 net/mlx5: Introduce general notification event
03404e8ae652e02a5e3388224836cef53d7a0988 IB/mlx5: Add support to dropless RQ
fe248c3a5837848717ed566fb4aefe66f43a5e53 IB/mlx5: Add delay drop configuration and statistics
9636a56fa864464896bf7d1272c701f2b9a57737 IB/core: Add support for RoCEv2 multicast
c2e53b2ce1ba351918ede492c0cb207f42e1228f IB/mlx5: Add support for QP with a given source QPN
1d54f89094e2d2067948550ec52aab93e15b4b0c IB/mlx5: Report RX checksum capabilities for IPoIB
4c25b7a39005c9243a492b577c3e940eeac36a25 IB/mlx5: Fix cached MR allocation flow
58dcb60a226ee48cc66c96c27b751f06ec2bc5a9 IB/mlx5: Expose extended error counters
ec9b8dbd825dd3a0667003b5ab56386214f9c648 qede: Add getter APIs support for RX flow classification
3f2a2b8b7aaadd731e688a23cbd23f7eb085c7fb qed/qede: Add setter APIs support for RX flow classification
645874e5807ae5ffa09fba2ccd23f01e4eb16d58 qed: Add support for Energy efficient ethernet.
477f2d1460a636abd08f03eafabe0c51366fa5de qed: Add support for vf coalesce configuration.
bf5a94bfe26a9fcd4af91ae6bccd4f3d600d2262 qed: Read per queue coalesce from hardware
c53df62c7a9a82c7375308af270f90a08e94f6b6 IB/hfi1: Check return values from PCI config API calls
cb51c5d2cda855302910ab352f3d391c1a00aba0 IB/hfi1: Fix bar0 mapping to use write combining
bcad29137a9731bfa5e16d64bf8e8a71a268ac88 IB/hfi1: Serve the most starved iowait entry first
42492011ab23f44c63dad0c7096492313dc207e3 IB/hfi1: Assign context does not clean up file descriptor correctly on error
91d970abe8d756843eaac57da903bf27f834b091 IB/hfi1: Remove unused user context data members
e6f7622df177d594f11d93343c3dda7637c761e0 IB/hfi1: Size rcd array index correctly and consistently
17573972f44d6293ed4fe561816b701241cb0847 IB/hfi1: Use context pointer rather than context index
2250563e2c935d6401a2203be4de4ca2cf0db183 IB/hfi1: Pass the context pointer rather than the index
bf90aadd630c2c9f7f965ba1e90d41b5b46db7c9 IB/hfi1: Send MAD traps until repressed
a618b7e40af2b2b751790d602ffa93800b594eca IB/hfi1: Move saving PCI values to a separate function
e87473bc1b6c2cb08f1b760cfc8cd012822241a6 IB/hfi1: Only set fd pointer when base context is completely initialized
913cc67159bc85a96d94df301ca39c1b2c540dca IB/hfi1: Always perform offline transition
41c8f70f5a3db7e06179186b6525fd9ee1d7d314 xprtrdma: Harden backchannel call decoding
07ff2dd510d8c5b1166827df7686036283be10e0 xprtrdma: Refactor rpcrdma_reply_handler()
264b0cdbcb93e6d7b419fcc82fca9413a13f87ae xprtrdma: Replace rpcrdma_count_chunks()
d541e45500bd269060c26387902e1bec9783c07c IB/core: Convert ah_attr from OPA to IB when copying to user
582faf3150f57b8364ac9d2aa731d7368ada7a4b IB/core: Change port_attr.lid size from 16 to 32 bits
db58540b021a17e0ede64f761b740556d77f1679 IB/core: Change port_attr.sm_lid from 16 to 32 bits
7db20ecd1d9700e2c240dee505162eb56ab55b5b IB/core: Change wc.slid from 16 to 32 bits
e92aa00a518971fca6b79aa87a1a9c5e5aa51f3b IB/CM: Add OPA Path record support to CM
6b3c0e6e6d5abfefb0112cd450e0aee97fcab7a8 IB/CM: Create appropriate path records when handling CM request
ac3a949fb2fff36bebdc4fab90567ed349ea7245 IB/CM: Set appropriate slid and dlid when handling CM request
78249c4215840edb95447ec6867b69a7ac1d7a0d mlx5: convert to generic pci_alloc_irq_vectors
27ddb689909cd0bab30524a5f720ae3a3e55acac PCI: add an API to get node from vector
a435393acafbf0ecff4deb3e3cb554b34f0d0664 mlx5: move affinity hints assignments to generic code
c66cd353bbe6869a059869a7a1518ec619afdc9d RDMA/core: expose affinity mappings per completion vector
40b24403f33ed8e9401b087e25f46d002fc8f396 mlx5: support ->get_vector_affinity
c9901724a2f14128ef6a57986babcbfbcf61a257 RDMA/netlink: Remove netlink clients infrastructure
64401b69b29164c5731018cc44fc9b144ac9c5ae RDMA/netlink: Remove redundant owner option for netlink callbacks
3c3e75d5ff75f9a076cac254fd32476ca80fdffc RDMA/netlink: Avoid double pass for RDMA netlink messages
e3a2b93dddad315f01a4b67faee738954c084072 RDMA/netlink: Add flag to consolidate common handling
ff61c425c1c563f1d688d59caf3b18a395cbf9c4 RDMA/netlink: Simplify and rename ibnl_chk_listeners
3250b4dbd87aa08c21891cabfc6f6b48b36fd7e5 RDMA/netlink: Rename netlink callback struct
ecc82c53f9a4ce08ba7df626a4262c86841ced8f RDMA/core: Add and expose static device index
1830ba21b9a475cfc6159e6cfe532c75fe7682a4 RDMA/netlink: Add and implement doit netlink callback
c729943a77c108253c46b2d50c8a15a888facf4c RDMA/netlink: Reduce indirection access to cb_table
647c75ac59a48a54dafd4475d14a645a0025a4f4 RDMA/netlink: Convert LS to doit callback
1a6e7c31d71db34d1b9bc3acc87eaea6c2ecc997 RDMA/netlink: Add netlink device definitions to UAPI
6c80b41abe22ae3c0d98f39a88f4b8fb501910d3 RDMA/netlink: Add nldev initialization flows
b4c598a67ea19c5784e542c03dd912a0ce36109a RDMA/netlink: Implement nldev device dumpit calback
e5c9469efcb18a6b7aed5e6f32e478b0298ad968 RDMA/netlink: Add nldev device doit implementation
7d02f605f0dce0ef1b76aeffe2d36794738f24a0 RDMA/netlink: Add nldev port dumpit implementation
c3f66f7b0052ea854744372fdaae7817f5358e4f RDMA/netlink: Implement nldev port doit callback
ac50525374315b9b609747f83b07f8dccb06b722 RDMA/netlink: Expose device and port capability masks
9abb0d1bbd9529c574eacd8586e2bf68d17966cd RDMA: Simplify get firmware interface
8621a7e3c1c22e18385c9ced1647363884ea2aa1 RDMA/netlink: Export FW version
1aaff896ca6b968a639e3e1e72ba6146ba332501 RDMA/netlink: Export node_guid and sys_image_guid
12026fbba6af2fc53c3c6cf88bdfc6561986ba82 RDMA/netlink: Advertise IB subnet prefix
80a06dd36f79de7007f21f5cbe42181a4e5c7d6d RDMA/netink: Export lids and sm_lids
34840fea112d36507c19dc6052b8c6d88bdd9c16 RDMA/netlink: Export LID mask control (LMC)
5654e49db0b2d87c12b6e120b6a830abe3d3921b RDMA/netlink: Provide port state and physical link state
1bb77b8c1d57149ed0aa6825255ead80ae584034 RDMA/netlink: Export node_type
a656d34a6e5acc4779c4cb8bad19f4ab040def45 Change Kconfig description
8b62cbd13a245f59282ba27431adf4caa674dd0b IB/rxe: Convert pr_info to pr_warn
660b1de13ce8a56cf8c1700774a962e36222c0f9 IB/rxe: Remove unneeded check
62ede7779904bc75bdd84f1ff0016113956ce3b4 Add OPA extended LID support
e093111ddb6c786e32b882108c1c08ef83d781f4 IB/core: Fix input len in multiple user verbs
02a222c7f6c8d17b5fb6803ca453fcd9d5a3853d IB/hfi1: Remove lstate from hfi1_pportdata
64a296f579303322ebec9edae09cf87240b1ad78 IB/hfi1: Use host_link_state to read state when DC is shut down
f2a3bc00a03c2cc9caa40c8867de973fd4e48c6a IB/hfi1: Protect context array set/clear with spinlock
d295dbeb2a0c93364444e76b3bb30f587a823e0e IB/hf1: User context locking is inconsistent
13c19222889daf91da36b7fb63b5d5d9ce89b377 IB/rdmavt, hfi1, qib: Modify check_ah() to account for extended LIDs
72c07e2b671eda1cf3e8ebabc664f542f673b997 IB/hfi1: Add support to receive 16B bypass packets
30e07416cf48801f127019c1dfece8039f1da8e2 IB/hfi1: Add support to send 16B bypass packets
5786adf3fde7aa22a68eedac9c59e40da76ffbfb IB/hfi1: Add support to process 16B header errors
d98bb7f7e6fa29d45008370084d5cabac7ac69ed IB/hfi1: Determine 9B/16B L2 header type based on Address handle
88733e3b845024cb2324a68469a4a25fdd9c0a6c IB/hfi1: Add 16B UD support
863cf89d472fe7a61305b06de84b9ed2dea02611 IB/hfi1: Add 16B trace support
51e658f5dd362cc8666f3f5ec1986660e3e51047 IB/rdmavt, hfi1, qib: Enhance rdmavt and hfi1 to use 32 bit lids
5b6cabb0db772042906cdc0fc235fe2a4f5a6000 IB/hfi1: Add 16B RC/UC support
566d53a8264452ee75aa6eb1f2f1970391c1a271 IB/hfi1: Enhance PIO/SDMA send for 16B
028e0a67ea679ff958176eac97d1319a8d685fad IB/hfi1: fix spelling mistake: "Maximim" -> "Maximum"
ec0d8b8a63ee760bca1bccc6769d6210e05ded29 IB/hfi1: Stricter bounds checking of MAD trap index
d392a673e718767049824f99c76bb483d893b881 IB/hfi1: Remove pstate from hfi1_pportdata
0c98568c1f00eed16c4b452557ec40f5ac64784d IB/pvrdma: Remove unused function
7be05753ccc27ce056d45f06a50d150927a88ed7 RDMA: Fix return value check for ib_get_eth_speed()
e3bf14bdc17a8e917f337760cc7cacf3232d7dbc rdma: Autoload netlink client modules
89caa0538ecf2114e1badbb1e75120d25bec985e IB/uverbs: Introduce and use helper functions to copy ah attributes
dcc9881e6767559c04faf15804ac145a2ea026cb RDMA/(core, ulp): Convert register/unregister event handler to be void
4a5fd5d2965cb889f30ad94a3bfd83da70aa2c9c IB/mlx5: Add necessary delay drop assignment
69956d83267e29e38cda7d506c4085932789fef2 IB/ipoib: Sync between remove_one to sysfs calls that use rtnl_lock
84305d71d6ca9a2e6a33d9b403639f1cdeeee846 RDMA/mlx5: Limit scope of get vector affinity local function
05297b66ad874f6b650498a39af5a4e353e5ba19 RDMA/vmw_pvrdma: Add RoCEv2 support
a31a2a3b27f18bce0830581057a3fff75b830924 RDMA/vmw_pvrdma: Update device query parameters and port caps
8b7ff7f3b301de52924cb2cf3fed47b181893116 IB/mlx5: Enable UMR for MRs created with reg_create
ff740aefecb98da4605df1cada7904c44eaee161 IB/mlx5: Decouple MR allocation and population flows
5942d8ae411775b76e5e1ab0cce57b0666516f2d IB/mlx5: Fix memory leak in clean_mr error path
7b4cdaae73ee833975a767cf54a3354d355b3f8d IB/mlx5: Fix integer overflow when page_shift == 31
7956371ea48bd00956219a82fd3af655dd216073 IB/hfi1: Improve local kmem_cache_alloc performance
9dc117095570e7a230f8f9229a70713c335d9e2a IB/hfi1: Clean up hfi1_user_exp_rcv_setup function
ddd3affb50015c3c7ee218b83e73e646aa48e212 IB/hfi1: Remove duplicate definitions of num_user_pages() function
637f4600a8d3be44146ad7fbb5188484c3b0a1d4 IB/hfi1: Move structure definitions from user_exp_rcv.c to user_exp_rcv.h
32500f2763906602725006f1dc833c8ea28dfd07 IB/hfi1: Move structure and MACRO definitions in user_sdma.c to user_sdma.h
d68e68e5fb7134427c6d79c58beaaf869543f3f7 IB/hfi1: Fix whitespace alignment issue for MAD
34ab4de77fe512ba3aeabdcdc97504bd19791511 IB/hif1: Remove static tracing from SDMA hot path
dff2fe7e8cd92435a93555b29d9d95fed955c558 IB/hfi1: Convert hfi1_error_port_qps() to use new QP iterator
13eb1e21d6198c9068eab7e7cb68c6d5c6834d1b IB/rxe: Avoid ICRC errors by copying into the skb first
1a56ff6daab1e062aadec582eb10e7090f0b370a IB/core: Separate CQ handle in SRQ context
9c2c849625cf779e0fac41c8be3c163df4b80c14 IB/core: Add new SRQ type IB_SRQT_TM
38eb44fac71729fabdef71166e72bee5964c10d6 IB/uverbs: Add new SRQ type IB_SRQT_TM
3fd3307ef34fc9f7198af9249c763cf7a4ac653f IB/mlx5: Support IB_SRQT_TM
a0aa309c39de58b86b704654434431aeb5a8bdf1 IB/core: Add a generic way to execute an operation on a uobject
f43dbebfa32041826299bdccae0352887fa007ea IB/core: Add support to finalize objects in one transaction
9e4a56139d091713b8dff93632f2149f28494ca8 qed: fix spelling mistake: "calescing" -> "coalescing"
c76161181193985087cd716fdf69b5cb6cf9ee85 IB/cm: Fix sleeping in atomic when RoCE is used
72f9b089ecd2cc2194d27cbb14fd80a0b1472e89 RDMA/vmw_pvrdma: Report network header type in WC
14d6c3a83fbcd9c3d19e24d8d5820a912f2615c9 RDMA/vmw_pvrdma: Fix a signedness
fac9658cabb98afb68ef1630c558864e6f559c07 IB/core: Add new ioctl interface
5009010fbf54bdc27e57baca490e1f9d6a4609e0 IB/core: Declare an object instead of declaring only type attributes
09e3ebf8c193d3f154c4ffb7cb18995df0243bc6 IB/core: Add DEVICE object and root tree structure
118620d3686b2d624f9a5019f2f14c64cf50d21a IB/core: Add uverbs merge trees functionality
3541030650c0ddb5d52163082fee427b2a453799 IB/core: Add macros for declaring methods and attributes
4da70da23e9ba03f7f9e067fbe0eec6ebbfee401 IB/core: Explicitly destroy an object while keeping uobject
64b19e1323e96c34af7ca90d1954e70890c7a98e IB/core: Export ioctl enum types to user-space
d70724f149b107f8e4062320270d3d8b6713a1bb IB/core: Add legacy driver's user-data
9ee79fce364216df35ec46e26d20780c3c1644cc IB/core: Add completion queue (cq) object actions
524271129401ed896dc76e49acdbafc506cb41ac IB/core: Assign root to all drivers
729749bb8da186e68d97d1b0439f0b1e0059c41d SUNRPC: Don't hold the transport lock across socket copy operations
ce7c252a8c741aba7c38f817b86e34361f561e42 SUNRPC: Add a separate spinlock to protect the RPC request receive list
4c625a974fb81724e60966b677e47fcba782c950 SUNRPC: fix a list corruption issue in xprt_release()
9590d083c1bb1419b7992609d1a0a3e3517d3893 xprtrdma: Use xprt_pin_rqst in rpcrdma_reply_handler
8b2c7e7a3cb2093bf3257c146c5822437fdf3124 RDAM/netlink: Fix out-of-bound access while checking message validity
015a9e66b9b8c1f28097ed09bf9350708e26249a RDMA/netlink: clean up message validity array initializer
cbafad87e1507044c7d442087d41d5e3d432cc4e IB/mlx5: fix debugfs cleanup
01df7f5a77b926c2d790cf66d942d2a68d4ad5de RDMA/vmw_pvrdma: Fix reporting correct opcodes for completion
73827a605bbd7cebef4cfd1261e497246a82a0e7 IB/core: Fix qp_sec use after free access
9c6f42e9254150d2772242d9f8bd8d0b7b7431ff IB/ipoib: Fix sysfs Pkey create<->remove possible deadlock
7c9d9662103ae1c11acc7bfc47d988466cff23cf IB/ipoib: Fix inconsistency with free_netdev and free_rdma_netdev
fbcd49838d9094ca45772356e7b33afe4b7c93e7 IB/mlx5: Fix NULL deference on mlx5_ib_update_xlt failure
df5efdd97029f2cff7e5c91ea1c9f2b94d009b0f IB/hfi1: Turn off AOC TX after offline substates
b8f42738acaddf67731c34935c0994e09a588ca7 IB/hfi1: On error, fix use after free during user context setup
828bcbdc975fbcfb27946c33d4b1d1bfab70789b IB/hfi1: Unsuccessful PCIe caps tuning should not fail driver load
e19cd282ebedb801e572efae5df2f88d573932ce IB/mlx5: Fix label order in error path handling
efe63c220e57ce74e240670399912e609ac125d9 RDMA/qedr: Parse VLAN ID correctly and ignore the value of zero
1736b4c99d1c53abec042d41b702aeabeb65d86a RDMA/qedr: Parse vlan priority as sl
b4d91aeb6e120b7e2f207021c31b914895c69bc4 RDMA/netlink: OOPs in rdma_nl_rcv_msg() from misinterpreted flag
287683d027a3ff83feb6c7044430c79881664ecf RDMA/nldev: Enforce device index check for port callback
ebf5926a001fd0d0d3fdfc2c39c0c8ff0c846c1a tools/power turbostat: Replace MSR_NHM_TURBO_RATIO_LIMIT
ddadb8adea76e6168c55850f2066e441880fb3d5 tools/power turbostat: Display HWP OOB status
f5fbf848303c8704d0e1a1e7cabd08fd0a49552f x86/cpu: Rename Merrifield2 to Moorefield
cf4cbe5314884c3123fe4ca137e9d750b6e2b8c9 tools/power turbostat: BYT does not have MSR_MISC_PWR_MGMT
71616c8e936a6dd541f0627d7bf4ff09971d8ccb tools/power turbostat: decode Baytrail CC6 and MC6 demotion configuration
8a34fd0226eaae64d61ff9a113d276e28acb6b5c x86 msr-index.h: Define Atom specific core ratio MSR locations
33148d671cc191fceaca5017e1bb060e9f30fbf7 tools/power turbostat: decode MSR_MISC_FEATURE_CONTROL
96e4715857cf184536ef46e6ea92465f58a7b12d tools/power turbostat: print system config, unless --quiet
0539ba118fe241b0d03202fda0cd19cb758b7fbd tools/power turbostat: Baytrail c-state support
008d396eb219ee5a1c98c9ef01c35752d35f0d6c tools/power turbostat: use tsc_tweak everwhere it is needed
34c7619762f7b4ebbd5157b312e6022b725c031e tools/power turbostat: skip unused counters on SKX
ade0ebacdf03591b3dab642e6e92da60c20ebdb3 tools/power turbostat: skip unused counters on BDX
41618e63f2a869902f8534f0db337e85d6bd04c8 tools/power turbostat: print sysfs C-state stats
1ef7d21afe2197013aefe0e93641aa2c5a9ac3db tools/power turbostat: add --cpu parameter
c8ade3616a1a5cf7767c0338d2b02007796f5d88 tools/power turbostat: Add --list option to show available header names
0de6c0df4ecc32ffaf064fea3a43846ba4474bd0 tools/power turbostat: use wide columns to display large numbers
6168c2e0fb5084d187aa8f3ec4093db5e161d4dc tools/power turbostat: update --list feature
da67e2b9fd1d846a41978690da0a899d8e4378ec tools/power turbostat: turbostat.8 update
4e4e1e7c6eaf387f8ec803f37f154fdd60e303c0 tools/power turbostat: move --Package and --processor into the --cpu option
dd778a5e6bbd0f52f34c61ae9b42b725c5f22398 tools/power turbostat: support "--hide C1" etc.
7293fccdffdec0ab0c36c4e4cffacb3ff114928e tools/power turbostat: dump p-state software config
5f3aea57773dc7f788e374994636ffc0234a355f tools/power turbostat: bugfix: --add u32 was printed as u64
e3942ed8c66bcff496abee5182422cd542962d9e tools/power turbostat: version 17.02.24
ab23d1146a8e7bd045507fe8a380827dc03e056d tools/power turbostat: turbostat.8 add missing column definitions
a99d87306f83d2a97c8c7e854b6583c4037ecf75 tools/power turbostat: hide SKL counters, when not requested
f4fdf2b474606580b95eed95d06c762d4fd3f57b tools/power turbostat: if  --debug, print sampling overhead
c91fc8519d87715a3a173475ea3778794c139996 tools/power turbostat: stop migrating, unless '-m'
5f9bf02a58f0f62d111994805212d0a775499862 tools/power turbostat: update version number
c97cc7dbce2fe6f46e137f4b040f915a0181ee85 Revert "tools/power turbostat: stop migrating, unless \'-m\'"
9118c0cbd44262d0015568266f314e645ed6b9ce mm: factor out functionality to finish page faults
3917048d4572b9cabf6f8f5ad395eb693717367c mm: allow full handling of COW faults in ->fault handlers
b1aa812b21084285e9f6098639be9cd5bf9e05d7 mm: move handling of COW faults into DAX code
38b8cb7fbb892503fe9fcf748ebbed8c9fde7bf8 mm: pass vm_fault structure into do_page_mkwrite()
66a6197c118540d454913eef24d68d7491ab5d5f mm: provide helper for finishing mkwrite faults
a19e25536ed3a20845f642ce531e10c27fb2add5 mm: change return values of finish_mkwrite_fault()
a6abc2c0e77b16480f4d2c1eb7925e5287ae1526 dax: make cache flushing protected by entry lock
2f89dc12a25ddf995b9acd7b6543fe892e3473d6 dax: protect PTE modification on WP fault by radix tree entry lock
4b4bb46d00b386e1c972890dc5785a7966eaa9c0 dax: clear dirty entry tags on cache flush
d3213e8fd4b0f18dfd438268ff480406ba743abb tracing: add __print_flags_u64()
282a8e0391c377b64c7d065b18fc2f6267a24dad dax: add tracepoint infrastructure, PMD tracing
653b2ea3396fda0b5e23a37b3356dd2ca82fe5c1 dax: add tracepoints to dax_pmd_load_hole()
27a7ffaccd915675c88045ba83493804a0267ab7 dax: add tracepoints to dax_pmd_insert_mapping()
c6dcf52c23d2d3fb5235cec42d7dd3f786b87d55 mm: Invalidate DAX radix tree entries only if appropriate
e3fce68cdbed297d927e993b3ea7b8b1cee545da dax: Avoid page invalidation races and unnecessary radix tree traversals
f449b936f1aff7696b24a338f493d5cee8d48d55 dax: Finish fault completely when loading holes
9f141d6ef6258a3a37a045842d9ba7e68f368956 dax: Call ->iomap_begin without entry lock during dax fault
1db175428ee374489448361213e9c3b749d14900 ext4: Simplify DAX fault path
a9c42b33ed80968dd160e3be48c7e84ccf171cf9 dax: add tracepoints to dax_iomap_pte_fault()
c3ff68d7d1e6a24b7ad76d00ee583929858d4001 dax: add tracepoints to dax_pfn_mkwrite()
678c9fd0430a1431bd9901c76f41e04fcb3eac87 dax: add tracepoints to dax_load_hole()
d14a3f48a152b75a1e690d443f509c07c7b06c0e dax: add tracepoints to dax_writeback_mapping_range()
f9bc3a07539bc80b4da9ff2f5d6c13d5c7a4f073 dax: add tracepoint to dax_writeback_one()
b4440734583c3addf80558e8fde2b61e2d76328c dax: add tracepoint to dax_insert_mapping()
5c7fb56e5e3f7035dd798a8e1adee639f87043e5 mm, dax: dax-pmd vs thp-pmd vs hugetlbfs-pmd
c20cd45eb01748f0fba77a504f956b000df4ea73 mm: allow GFP_{FS,IO} for page_cache_read page cache allocation
c046c321cb4a0bdac9fb922db3859893ca556d27 dax: re-enable dax pmd mappings
74d2fad1334d12bac8fe017aba598dd66c86628b thp, dax: add thp_get_unmapped_area for pmd mappings
097963959594c5eccaba42510f7033f703211bda mm: add follow_pte_pmd()
f729c8c9b24f0540a6e6b86e68f3888ba90ef7e7 dax: wrprotect pmd_t in dax_mapping_entry_mkclean
6affb9d7b137fc93d86c926a5587e77b8bc64255 dax: fix build warnings with FS_DAX and !FS_IOMAP
8ff6daa17b6a64e59bbabaa116b9bd854fa4da1f iomap: constify struct iomap_ops
01cddfe99008da87dd4f6b8fbfa31e09257b9133 mm,fs,dax: mark dax_iomap_pmd_fault as const
e11f8b7b6c4ea13bf8af6b8f42b45e15b554a92b dax: fix radix tree insertion race
4636e70bb0a8b871998b6841a2e4b205cf2bc863 dax: prevent invalidation of mapped DAX entries
a41fe02b6bba853a29c864d00fd161bbe6cfc715 Revert "block: use DAX for partition table reads"
cd656375f94632d7b5af57bf67b7b5c0270c591c mm: fix data corruption due to stale mmap reads
fb26a1cbed8c90025572d48bc9eabe59f7571e88 ext4: return to starting transaction in ext4_dax_huge_fault()
13e451fdc1af05568ea379d71c02a126295d2244 dax: fix data corruption when fault races with write
876f29460cbd4086b43475890c1bf2488fa11d40 dax: fix PMD data corruption when fault races with write
e2093926a098a8ccf0f1d10f6df8dad452cb28d3 dax: fix race between colliding PMD & PTE entries
fffa281b48a91ad6dac1a18c5907ece58fa3879b dax: fix deadlock due to misaligned PMD faults
4f8caa60a5a13a78f26198618f21774bd6aa6498 ext4: fix data corruption with EXT4_GET_BLOCKS_ZERO
52176603795c2ab7e9faf6bb94820da1b726aabd KEYS: Use memzero_explicit() for secret data
0837e49ab3fa8d903a499984575d71efee8097ce KEYS: Differentiate uses of rcu_dereference_key() and user_key_payload()
096fe9eaea40a17e125569f9e657e34cdb6d73bd KEYS: Fix handling of stored error in a negatively instantiated user key
5649645d725c73df4302428ee4e02c869248b4c5 KEYS: fix dereferencing NULL payload with nonzero length
757932e6da6de05b91cc4cb85493b17de48c2667 PKCS#7: Handle PKCS#7 messages that contain no X.509 certs
fd19a3d195be23e8d9d0d66576b96ea25eea8323 PKCS#7: Improve and export the X.509 ASN.1 time object decoder
cc25b994acfbc901429da682d0f73c190e960206 X.509: Fix the time validation [ver #2]
ac4cbedfdf55455b4c447f17f0fa027dbf02b2a6 X.509: Fix leap year handling again
da02559c9f864c8d62f524c1e0b64173711a16ab X.509: Support leap seconds
7650cb80e4e90b0fae7854b6008a46d24360515f X.509: Handle midnight alternative notation in GeneralizedTime
47b2c3fff4932e6fc17ce13d51a43c6969714e20 security/keys: add CONFIG_KEYS_COMPAT to Kconfig
0f534e4a13496b02ae284f50fcb0263f6ea37007 KEYS: encrypted: use constant-time HMAC comparison
57070c850a03ee0cea654fc22cb8032fc3139d39 KEYS: sanitize add_key() and keyctl() key payloads
6966c74932b328b3d6df92b11b083bfbcd067986 KEYS: user_defined: sanitize key payloads
a9dd74b252e04b7e41ffe78d418b896b33b70a13 KEYS: encrypted: sanitize all key material
ee618b4619b72527aaed765f0f0b74072b281159 KEYS: trusted: sanitize all key material
da7798a7b6714cf35ea6084ad6b1fe0497566cf2 crypto : asymmetric_keys : verify_pefile:zero memory content before freeing
237bbd29f7a049d310d907f4b2716a7feef9abf3 KEYS: prevent creating a different user's keyrings
910801809b2e40a4baedd080ef5d80b4a180e70e security/keys: properly zero out sensitive key material in big_key
13923d0865ca96312197962522e88bc0aedccd74 KEYS: encrypted: fix dereference of NULL user_key_payload
363b02dab09b3226f3bd1420dad9c72b79a42a76 KEYS: Fix race between updating and finding a negative key
ab5c69f01313c80df948e4f768efe616258f85f4 KEYS: load key flags and expiry time atomically in proc_keys_show()
a3c812f7cfd80cf51e8f5b7034f7418f6beb56c1 KEYS: trusted: fix writing past end of buffer in trusted_read()
dcddffd41d3f1d3bdcc1dce3f1cd142779b6d4c1 mm: do not pass mm_struct into handle_mm_fault
82b0f8c39a3869b6fd2a10e180a862248736ec6f mm: join struct fault_env and vm_fault
d8a849e1bc123790bbbf1facba94452a3aef5736 mm, dax: make pmd_fault() and friends be the same as fault()
f42003917b4569a2f4f0c79c35e1e3df2859f81a mm, dax: change pmd_fault() to take only vmf parameter
a00cc7d9dd93d66a3fb83fc52aa57a4bec51c517 mm, x86: add support for PUD-sized transparent hugepages
9557feee39b75ceb502b4777e08706df1ddf10ed dax: support for transparent PUD pages for device DAX
c791ace1e747371658237f0d30234fef56c39669 mm: replace FAULT_FLAG_SIZE with parameter to huge_fault
dd7b6847670a84b7bb7c38f8e69b2f12059bca66 x86/mm: Honour passed pgprot in track_pfn_insert() and track_pfn_remap()
9049771f7d5490a302589976984810064c83ab40 mm: fix cache mode of dax pmd mappings
956a4cd2c957acf638ff29951aabaa9d8e92bbc2 device-dax: switch to srcu, fix rcu_read_lock() vs pte allocation
1501899a898dfb5477c55534bdfd734c046da06d mm: fix device-dax pud write-faults triggered by get_user_pages()
12c9d70bd5056b3ae84746fca973c286f48384cc mm: fix memory leak in copy_huge_pmd()
628d47ce98d50860d4fc1eef250126dd50622a89 thp: skip file huge pmd on copy_huge_pmd()
684283988f703811b8a05136d0d54f1c31025ad3 huge pagecache: mmap_sem is unlocked when truncation splits pmd
fdb061056f57e849a05cac072a4998c7f33d797e ibmvnic: Enable TSO support
aa0bf8510dac901badc6889b208fc0e7d9225924 ibmvnic: Let users change net device features
c26eba03e4073bd32ef6c0ea2ba2a3ff5eed11da ibmvnic: Update reset infrastructure to support tunable parameters
2a1bf51111975846f412f47449edefdf6fa17ee4 ibmvnic: Fix failover error path for non-fatal resets
e876a8a7e9dd89dc88c12ca2e81beb478dbe9897 ibmvnic: Set state UP
fdeaf7e3eb37c6dbc4b4ac97dbe1945d239eb788 KVM: make pid available for uevents without debugfs
a1c5befc1c24eb9c1ee83f711e0f21ee79cbb556 s390: fix transactional execution control register handling
d0e810eeb3d326978f248b8f0233a2f30f58c72d s390/noexec: execute kexec datamover without DAT
5bae156241e05d25171b18ee43e49f103c3f8097 x86/tsc: Force TSC_ADJUST register to value >= zero
46896c73c1a4dde527c3a3cc43379deeb41985a1 KVM: svm: add support for RDTSCP
cc661fc934a004526a714a7b804ee3f119d27093 DLM: Fix saving of NULL callbacks
1c24285372412b26af4f0f980c115e857fb87c02 dlm: use sock_create_lite inside tcp_accept_from_sock
2ebda74fd6c9d3fc3b9f0234fc519795e23025a5 crypto: acomp - add asynchronous compression api
1ab53a77b772bf7369464a0e4fa6fd6499acf8f1 crypto: acomp - add driver-side scomp interface
3ce5bc72eb88c02b23374c0e4f619ada27e47552 crypto: acomp - allow registration of multiple acomps
3de4f5e1a5dbe1a36d1e8a08ee1978f44c4b739b crypto: scomp - allow registration of multiple scomps
a368f43d6e3a001e684e9191a27df384fbff12f5 crypto: scomp - add support for deflate rfc1950 (zlib)
0fae0c1e1d7991ce0dbefdd1c35c14e9d0025cc2 crypto: testmgr - fix !x==y confusion
72eed063767e131831fa10a0909c39a0254836ec crypto: qat - avoid an uninitialized variable warning
d7db7a882debaffc78f91aabedee973aa1f73390 crypto: acomp - update testmgr with support for acomp
def12888c161e6fec0702e5ec9c3962846e3a21d rtnl: Add support for netdev event to link messages
8c6c918da16f55fd4a5df53aa072ba3238f12fec rtnetlink: use the new rtnl_get_event() interface
ebdcf0450b020748c2dab6bfe44a5ac3c5159fb0 rtnetlink: bring NETDEV_CHANGE_TX_QUEUE_LEN event process back in rtnetlink_event
4597efe312567591e253248246ef58d77df471c6 bonding: remove rtmsg_ifinfo called in bond_master_upper_dev_link
eeda3fb9e132bd5f9592c4c664ba944cf1ac5b9f rtnetlink: bring NETDEV_CHANGELOWERSTATE event process back to rtnetlink_event
ef5201c83d1400570a3b6f004ad7a23d71934411 bonding: remove rtmsg_ifinfo called after bond_lower_state_changed
d199fab63c11998a602205f7ee7ff7c05c97164b packet: fix races in fanout_add()
2bd624b4611ffee36422782d16e1c944d1351e98 packet: Do not call fanout_release from atomic contexts
008ba2a13f2d04c947adc536d19debb8fe66f110 packet: hold bind lock when rebinding to fanout hook
30bb9811856f667042e746d8033883b1091a46ce x86/topology: Avoid wasting 128k for package id array
b4c0a7326f5dc0ef7a64128b0ae7d081f4b2cbd1 x86/smpboot: Fix __max_logical_packages estimate
d1260e2a3f85f4c1010510a15f89597001318b1b dm cache: fix race condition in the writeback mode overwrite_bio optimisation
8e3c3827776fc93728c0c8d7c7b731226dc6ee23 dm cache: pass cache structure to mode functions
9dc112e2daf87b40607fd8d357e2d7de32290d45 dm mpath: remove annoying message of 'blk_get_request() returned -11'
8a74d29d541cd86569139c6f3f44b2d210458071 dm: discard support requires all targets in a table support discards
7dea378b23fdc5003379615fc579dbf987ed8128 dm: do not set 'discards_supported' in targets that do not need it
ee1c244219fd652964710a6cc3e4f922e86aa492 genetlink: synchronize socket closing and family removal
92c14d9b5ee86fd6cf136c01b6a87353522aebdd genetlink: simplify genl_notify
d1b4c689d4130bcfd3532680b64db562300716b6 netlink: remove mmapped netlink support
263ea09084d172cac6e40459a690babe8de8e448 Revert "genl: Add genlmsg_new_unicast() for unicast message allocation"
905f0a739ad82c6371fb0cb0e71db14a750702ad nfnetlink: remove nfnetlink_alloc_skb
c90c39dab3e02ce45427a214746711f33ad13be6 genetlink: introduce and use genl_family_attrbuf()
a07ea4d9941af5a0c6f0be2a71b51ac9c083c5e5 genetlink: no longer support using static family IDs
489111e5c25b93be80340c3113d71903d7c82136 genetlink: statically initialize families
2ae0f17df1cd52aafd1ab0415ea1f1dd56dc0e2a genetlink: use idr to track families
22ca904ad70afc831d8503e80be1b6558a978759 genetlink: fix error return code in genl_register_family()
1d2a6a5e4bf2921531071fcff8538623dce74efa genetlink: fix counting regression on ctrl_dumpfamily()
0e82c7635997a11dbcfa98835c179084447ae2b0 genetlink: Fix generic netlink family unregister
98e4321b97cc790c6aac3fb7c92bbf13212452ee genetlink: Make family a signed integer.
f7065f4bd3fe4ad6bf7e49ba7c68baa2c7046146 mpls: Fix mpls_gso handler.
59b93b41e7fa71138734a911b11b044340dd16bd net: Remove MPLS GSO feature.
cec9166ca4e586de389b0f3c43a8103e728d92ec mpls: Refactor how the mpls module is built
26c459a8072f2bb0680081205376e1371c114b12 mpls: Spelling: s/conceved/conceived/, s/as/a/
8a08919f43d9955d5afc5d6b416964401e3c58d8 mpls: Allow mpls_gso and mpls_router to be built as modules
48d2ab609b6bbecb7698487c8579bc40de9d6dfa net: mpls: Fixups for GSO
9095e10edd28e1e4a10ba5ca61fb54d9f74f8968 mpls: move mpls_hdr to a common location
85de4a2101acb85c3b1dde465e84596ccca99f2c openvswitch: use mpls_hdr
4b048d6d9d0b0b90e1e94f2393796bbf1fa8df4e net: Change pseudohdr argument of inet_proto_csum_replace* to be a bool
fca5fdf67de9e092fda23c9eb059ba968e7b5267 ip_tunnels, bpf: define IP_TUNNEL_OPTS_MAX and use it
91572088e3fdbf4fe31cf397926d8b890fdb3237 net: use core MTU range checking in core net infra
329f45bc4f191c663dc156c510816411a4310578 openvswitch: add mac_proto field to the flow key
e2d9d8358cb961340ef88620b6a25ba4557033d5 openvswitch: pass mac_proto to ovs_vport_send
1560a074df6297e76278e459ca3eb9ff83a6f878 openvswitch: support MPLS push and pop for L3 packets
5108bbaddc37c1c8583f0cf2562d7d3463cd12cb openvswitch: add processing of L3 packets
0a6410fbde597ebcf82dda4a0b0e889e82242678 openvswitch: netlink: support L3 packets
87e159c59d9f325d571689d4027115617adb32e6 openvswitch: Add a missing break statement.
df30f7408b187929dbde72661c7f7c615268f1d0 openvswitch: upcall: Fix vlan handling.
9dd7f8907c3705dc7a7a375d1c6e30b06e6daffc openvswitch: Add original direction conntrack tuple to sw_flow_key.
dd41d33f0b033885211a5d6f3ee19e73238aa9ee openvswitch: Add force commit.
316d4d78cf9b6795b83f97c45368748741df418c openvswitch: Pack struct sw_flow_key.
b768b16de58d5e0b1d7c3f936825b25327ced20c openvswitch: Fix refcount leak on force commit.
6f56f6186c18e3fd54122b73da68e870687b8c59 openvswitch: Fix ovs_flow_key_update()
120645513f55a4ac5543120d9e79925d30a0156f openvswitch: Add eventmask support to CT action.
8b97ac5bda17cfaa257bcab6180af0f43a2e87e0 openvswitch: Fix for force/commit action failures
5829e62ac17a40ab08c1b905565604a4b5fa7af6 openvswitch: Fix an error handling path in 'ovs_nla_init_match_and_action()'
f6c5775ff0bfa62b072face6bf1d40f659f194b2 net: Improve handling of failures on link and route dumps
d0225784be6c9bdfb05149ebc30bf9fc1fdbce3a rtnelink: Move link dump consistency check out of the loop
6621dd29eb9b5e6774ec7a9a75161352fdea47fc dev: advertise the new nsid when the netns iface changes
79e1ad148c844f5c8b9d76b36b26e3886dca95ae rtnetlink: use netnsid to query interface
03ac738d5cf2f97ffa1209f6fd5d4bc211a933de rtnetlink: fix missing size for IFLA_IF_NETNSID
517a6e43c4872c89794af5b377fa085e47345952 CIFS: Fix some return values in case of error in 'crypt_message'
0b6e9ea041e6c932f5b3a86fae2d60cbcfad4dd2 fuse: Add support for pid namespaces
5d6d3a301c4e749e04be6fcdcf4cb1ffa8bae524 fuse: allow server to run in different pid_ns
bb458c644a59dbba3a1fe59b27106c5e68e1c4bd Safer ABI for O_TMPFILE
f9652e10c12b43d9bb957269745cf2fa5682fa92 allow build_open_flags() to return an error
f15133df088ecadd141ea1907f2c96df67c729f0 path_openat(): fix double fput()
af51a2ac36d1f96bee30438ec95a51e4635d1e33 ext4: ->tmpfile() support
e94bd3490f4ef342801cfc76b33d8baf9ccc9437 ext4: fix a BUG when opening a file with O_TMPFILE flag
43ae9e3fc70ca0057ae0a24ef5eedff05e3fae06 ext[34]: fix double put in tmpfile
d540e43b0ab134b22f015f725ce6e070d12b0244 xfs: initialize default acls for ->tmpfile()
6642586b3e5f9e0b559d20352d8d42ad84224d1f ext4: add ext4_should_use_dax()
e9072d859df3e0f2c3ba450f0d1739595c2d5d13 ext4: prevent data corruption with journaling + DAX
559db4c6d784ceedc2a5418ced4d357cb843e221 ext4: prevent data corruption with inline data + DAX
5d829300bee000980a09ac2ccb761cb25867b67c xfs: provide helper for counting extents from if_bytes
93533c7855c3c78c8a900cac65c8d669bb14935d xfs: new inode extent list lookup helpers
0ed3b0d45fd39142e418220f518c8959c1a5f596 vfs: Add iomap_seek_hole and iomap_seek_data helpers
9b2970aacfd9aa5d9bad377a554a002b398f882e xfs: Switch to iomap for SEEK_HOLE / SEEK_DATA
d6ab17f261919d212ec0a9e33d01f46df0ec1fde vfs: in iomap seek_{hole,data}, return -ENXIO for negative offsets
19fe5f643f89f29c1a16bc474d91506b0e9a6232 iomap: Switch from blkno to disk offset
9ca250a5137f3df7ffac58b49660beadd5926ace iomap: Add IOMAP_F_DATA_INLINE flag
20cdc1931ee8e03ce3a26061ff14a05a3f8cbe78 gfs2: Clarify gfs2_block_map
3974320ca6aa68d479051f208d5c95afd1e47a4c GFS2: Implement iomap for block_map
aac1a55b450c623ec236c0635cdb68408f632e9c GFS2: Switch fiemap implementation to use iomap
a056bdaae7a181f7dcc876cfab2f94538e508709 ext4: fix data corruption for mmap writes
9c7fe83530a351845719acf1dda0587e8c743588 GFS2: Add calls to gfs2_holder_uninit in two error handlers
fcfa447062b2061e11f68b846d61cbfe60d0d604 NFS: Revert "NFS: Move the flock open mode check into nfs_flock()"
332391a9935da939319e473b4680e173df75afcf fs: Fix page cache inconsistency when mixing buffered and AIO DIO
ffe51f0142a291a957eebb9687cafb15f2b3fc14 fs: Avoid invalidation in interrupt context in dio_complete()
397e434176bb62bc6068d2210af1d876c6212a7e ext4: preserve i_mode if __ext4_set_acl() fails
a3bb2d5587521eea6dab2d05326abb0afb460abd ext4: Don't clear SGID when inheriting ACLs
10596608c4d62cb8c1c2b806debcbd32fe657e71 netfilter: nf_tables: fix mismatch in big-endian system
a3efd81205b128a802025abb689925177a4607ed netfilter: conntrack: move generation seqcnt out of netns_ct
5e3c61f981756361e7dc74e2c673121028449e35 netfilter: conntrack: fix lookup race during hash resize
64b87639c9cbeb03e26bc65528416c961b1dde96 netfilter: conntrack: fix race between nf_conntrack proc read and hash resize
3c71006d15fd3a99071a2b20d01de3edabc85767 ipv4: fib_rules: Check if rule is a default rule
6a003a5ff29499a94373110202631743663569c6 ipv4: fib_rules: Add notifier info to FIB rules notifications
5d7bfd141924a5ece21eb612ad3c56612f041c1e ipv4: fib_rules: Dump FIB rules when registering FIB notifier
475abbf1ef67fdf35eed0720adcf59ed25ad924e ipv4: fib: Set offload indication according to nexthop flags
04b1d4e50e82536c12da00ee04a77510c459c844 net: core: Make the FIB notification chain generic
64e5e8252d69c68ae76258328ac7e5d2e5e923b0 mlxsw: spectrum_router: Ignore address families other than IPv4
1b2a4440858857f2f93bb2ec5bb3a60f4fcc25be net: fib_rules: Implement notification logic in core
16ab6d7d4d8cc037bb4be12c2b849ac92787e1ff ipv6: fib: Add FIB notifiers callbacks
df77fe4d9865c6354372876632bcbceeda84f6c8 ipv6: fib: Add in-kernel notifications for route add / delete
dcb18f762f6ac83a6dc9cdc26dd694dcc167beb7 ipv6: fib_rules: Dump rules during registration to FIB chain
61e4d01e16acddadb9723143637a20417fa67ac9 ipv6: fib: Add offload indication to routes
a460aa83963b185a32a6377eb486b6e613ac8e38 ipv6: fib: Add helpers to hold / drop a reference on rt6_info
864150dfa31dceab6ec5ca4579a2d35ede985cb7 net: Add module reference to FIB notifiers
e1ee0a5ba35d999caef94d659b4cb842e63aeb68 ipv6: fib: Dump tables during registration to FIB chain
29961b59a51f8c6838a26a45e871a7ed6771809b x86/mm: Remove flush_tlb() and flush_tlb_current_task()
6248f4567442081994ad61c63bd9870e147983e0 x86/boot/64: Optimize fixmap page fixup
c88d71508e36b514413464bd2e01f96f34583a0e x86/boot/64: Rewrite startup_64() in C
26179670a68b7b365fbfe38afb043dcd2e1a4678 x86/boot/64: Put __startup_64() into .head.text
c016ca08f89c6c78ed815f025262bdb87aba3f4c efi: Add NV memory attribute
c262f3b9a3246da87c66ce398cd7e30d8f1529ea x86/cpu/AMD: Document AMD Secure Memory Encryption (SME)
aac7b79eea6118dee3da9b99dcd564471672806d x86/mm/pat: Set write-protect cache mode for full PAT support
f7750a79568788473c5e8092ee58a52248f34329 x86, mpparse, x86/acpi, x86/PCI, x86/dmi, SFI: Use memremap() for RAM mappings
872cbefd2d9c52bd0b1e2c7942c4369e98a5a5ae x86/cpu/AMD: Add the Secure Memory Encryption CPU feature
9af9b94068fb1ea3206a700fc222075966fbef14 x86/cpu/AMD: Handle SME reduction in physical address size
7744ccdbc16f0ac4adae21b3678af93775b3a386 x86/mm: Add Secure Memory Encryption (SME) support
5e9ebbd87a99ecc6abb74325b0ac63c46891f6f3 x86/boot: Micro-optimize reset_early_page_tables()
d0f77d4d04b222a817925d33ba3589b190bfa863 x86/init: Clear 'init_level4_pgt' earlier
6c690ee1039b251e583fc65b28da30e97d6a7385 x86/mm: Split read_cr3() into read_cr3_pa() and __read_cr3()
5868f3651fa0dff96a57f94d49247d3ef320ebe2 x86/mm: Add support to enable SME in early boot processing
fd7e315988b784509ba3f1b42f539bd0b1fca9bb x86/mm: Simplify p[g4um]d_page() macros
2a3746984c98b17b565e6a2c2bbaaaef757db1b4 x86: Use new cache mode type in track_pfn_remap() and track_pfn_insert()
c06814d8419a74528500f85faf5fc01f67f8e7e6 x86: Use new cache mode type in setting page attributes
e00c8cc93c1ac01ecd5049929a50fb47b62bb041 x86: Use new cache mode type in memtype related functions
21729f81ce8ae76a6995681d40e16f7ce8075db4 x86/mm: Provide general kernel support for memory encryption
eef9c4abe77f55b1600f59d8ac5f1d953e2f5384 x86/mm: Add SME support for read_cr3_pa()
f88a68facd9a15b94f8c195d9d2c0b30c76c595a x86/mm: Extend early_memremap() support with additional attrs
7f8b7e7f4ccbbd1fb8badddfabd28c955aea87b4 x86/mm: Add support for early encryption/decryption of memory
b9d05200bc12444c7778a49c9694d8382ed06aa8 x86/mm: Insure that boot memory areas are mapped properly
d68baa3fa6e4d703fd0c7954ee5c739789e7242f x86/boot/e820: Add support to determine the E820 type of an address
a19d66c56af1c52b8b463bf94d21116ae8c1aa5a efi: Add an EFI table address match function
15f003d20782a4079e078d16df57081ebd1fc150 x86/mm/pat: Don't implicitly allow _PAGE_RW in kernel_map_pages_in_pgd()
38eecccdf488e38ee93690cfe9ec1914b73f512f x86/efi: Update EFI pagetable creation to work with SME
c907e0eb43a522de60fb651c011c553f87273222 memremap: add MEMREMAP_WC flag
8f716c9b5febf6ed0f5fedb7c9407cd0c25b2796 x86/mm: Add support to access boot related data in the clear
5997efb967565e858259401af394e8449629c1f0 x86/boot: Use memremap() to map the MPF and MPC data
1de328628cd06b5efff9195b57bdc1a64680814d x86/mm: Add support to access persistent memory in the clear
77bd2342d4304bda7896c953d424d15deb314ca3 x86/mm: Add support for changing the memory encryption attribute
c7753208a94c73d5beb1e4bd843081d6dc7d4678 x86, swiotlb: Add memory encryption support
648babb7078c6310d2af5b8aa01f086030916968 swiotlb: Add warnings for use of bounce buffers with SME
f655e6e6b992a2fb0d0334db2620607b98df39e7 x86/cpu/AMD: Make the microcode level available earlier in the boot
2543a786aa25258451f3418b87a038c7ddaa2e85 iommu/amd: Allow the AMD IOMMU to work with memory encryption
95cf9264d5f36c291c1c50c00349f83348e6f9c7 x86, drm, fbdev: Do not specify encrypted memory for video mappings
d0ec49d4de90806755e17289bd48464a1a515823 kvm/x86/svm: Support Secure Memory Encryption within KVM
bba4ed011a52d494aa7ef5e08cf226709bbf3f60 x86/mm, kexec: Allow kexec to be used with SME
f2f931c6819467af5260a21c59fb787ce2863f92 xen/x86: Remove SME feature in PV guests
8458bf94b0399cd1bca6c437366bcafb29c230c5 x86/mm: Use proper encryption attributes with /dev/mem
6ebcb060713f614c92216482eed501b31cee74ec x86/mm: Add support to encrypt the kernel in-place
7375ae3a0b79ea072f4c672039f08f5db633b9e1 compiler-gcc.h: Introduce __nostackprotector function attribute
aca20d5462149333ba8b24a4a352be5b7a00dfd2 x86/mm: Add support to make use of Secure Memory Encryption
57bd1905b228f2a14d7506b0302f69f425131e57 acpi, x86/mm: Remove encryption mask from ACPI page protection type
6e0b52d406f64d2bd65731968a072387b91b44d2 x86/mm: Fix SME encryption stack ptr handling
21d9bb4a05bac50fb4f850517af4030baecd00f6 x86/mm: Make the SME mask a u64
87df26175e67c26ccdd3a002fbbb8cde78e28a19 x86/mm: Unbreak modules that rely on external PAGE_KERNEL availability
d894be57ca92c8a8819ab544d550809e8731137b ethernet: use net core MTU range checking in more drivers
98d0f7b9acda0cf15259f83ca1758ad6017c0942 mlxsw: spectrum: Add packet sample offloading support
7c1b8eb175b69add8eac105409d2a59723574675 mlxsw: spectrum: Add support for TC flower offload statistics
57837885e3c74e42596a8d8c3e6831be1c0a7974 mlxsw: spectrum_router: Associate RIFs with correct VR
c7f6e6658b771c64a07b69852ac4362a8e781ab6 mlxsw: spectrum_router: Don't abort on l3mdev rules
bf95233e206983d5a05a2e27700d2678ffdef62c mlxsw: spectrum: Cosmetic naming change
c7cd4c9bf8df87027e739fe66d0a55951f6875d8 mlxsw: spectrum: fix swapped order of arguments packets and bytes
e0c0afd8aa4e2f0ecfb7f6d9c4c7f87e07d54132 mlxsw: spectrum: Support for counters on router interfaces
fd1b9d41928824eda4694a1015e7ccf233bfff3e mlxsw: spectrum_router: Add rif helper functions
5be661412762bbef45a55eaf1e6847258d69b3a4 net: add netif_is_ovs_port helper
9d41accc1e917d071497d749e9686ba6db91517e mlxsw: spectrum: Add FID miss trap
b1e455260c9187b16dd4ebc428b817ebac322043 mlxsw: spectrum_router: Simplify VRF enslavement
9011b677e7564ebd27e0bd8379ddd9d1649106b4 mlxsw: spectrum_router: Reduce scope of router struct
5f6935c6a4eafd853489c70d6ef3250296a4d534 mlxsw: spectrum_switchdev: Reduce scope of bridge struct
5f9efffbdb1722631714d7afce793379abd94c1f mlxsw: spectrum_router: Move RIFs array to its rightful place
7e39d1153de244fbdc57623a482f810bcf73a03f mlxsw: spectrum_router: Move FIB notification block to router struct
348b8fc3cf3059ac151c693dac992947a3daa437 mlxsw: spectrum_router: Initialize RIFs in a separate function
6b1206bbbce6092b2ec412125300889e6e551bc2 mlxsw: spectrum_router: Fix rif counter freeing routine
03ea01e9db82203e83b306b6c61d2cc9f0da4199 mlxsw: spectrum_router: Adjust RIF configuration for new firmware versions
4aafc368daac7781576ca6144622254adf469a15 mlxsw: spectrum: Set port's mode according to FID mappings
31a08a523ae453f7eaf5ad6c1da99d6199141b14 mlxsw: spectrum: Introduce Port-VLAN structure
ce95e1545681dd73fa73ac12a06135c4fcdb47cc mlxsw: spectrum: Change signature of FID leave function
7cbecf245ade1739f34e00a10b2cdedd851bd7f4 mlxsw: spectrum_router: Replace vPorts with Port-VLAN
f0cebd81c9cec7395da71b43b9c02c000068907a mlxsw: spectrum: Don't lose bridge port device during enslavement
ed9ddd3aadac36869579d9075dd68067f87878cf mlxsw: spectrum: Don't create FIDs upon creation of VLAN uppers
c57529e1d5d882fbd6383163e2cb2e4ba3118174 mlxsw: spectrum: Replace vPorts with Port-VLAN
caa3ddf8e39022ee2cd87835bc400b9c516fcd95 mlxsw: spectrum_router: Allocate FID prior to RIF configuration
a13a594da06c437afa546888ddba64d3bd2db06d mlxsw: spectrum_router: Allocate RIF prior to its configuration
4d93ceebf09b0e85adc8048752eea39785b300bf mlxsw: spectrum_router: Extend the RIF struct
ab01ae916911d11af9f4375b8276378b9474400c mlxsw: spectrum_router: Configure RIFs based on RIF struct
1b8f09a05f33dbced2e48cd1c6d3ee524739ff63 mlxsw: spectrum_router: Destroy RIF only based on its struct
8e3482d6adef158d362e46cae1415940bf0f9b07 mlxsw: spectrum_router: Flood packets to router after RIF creation
c9ec53f03460b374c5565c09beac2aec5dfc5cbc mlxsw: spectrum_router: Determine VR first when creating RIF
a110748725450adb86cb4b20b24dd8c4e0cc2d8f mlxsw: spectrum: Implement common FID core
e4f3c1c17b6d101af5474e8c72b38aa0baaf719d mlxsw: spectrum_router: Implement common RIF core
d897a638e98c476c56118d0dcc1bc55450504866 sched: add helper for updating statistics on all actions
cb4cc0e0b18ef683eed191707fa812a1719b9723 mlxsw: spectrum: Tidy up header file
da0abcf93fe5353268b0b5b30396fb10dc32bef4 mlxsw: Fix typo inside enumeration
de5ed99e9777a487da4ad9c58e409ed26b640d9e mlxsw: spectrum_router: Align RIF index allocation with existing code
0db7b386f5e779085d5e20ad9d88b8a4b8767c02 mlxsw: spectrum: Introduce ACL trap
a989cdb473c2fd9cd0187fa9f7da8e4a7c989332 mlxsw: spectrum: Remove support for bridge FDB learning sync
10e23eb299fa39c6f343bffc9e3d77c7d9f0492f mlxsw: spectrum: Remove support for bypass bridge port attributes/vlan set
1b40dc3d86724c7f1e69d20020ffa4eb21d119ae mlxsw: spectrum_switchdev: Change switchdev notifier API
af061378924f6d2f368b3769fd59fd95875dc942 mlxsw: spectrum_switchdev: Add support for learning FDB through notification
be7432b952bcbe2d7ac27a9f8545cce4cc74a4df mlxsw: spectrum: Remove support for bridge bypass FDB add/del
5b15385964fab67953df706e1448e1a45db92adf mlxsw: spectrum: Simplify port split flow
2e915e0b68c9213ed16493c8a28aa973d38d0353 mlxsw: spectrum: Pass port argument to module mapping functions
a9265b804dfdfca4e2ce3730fe0528da9c01dbf7 mlxsw: spectrum_switchdev: Remove unused variable
6f497930af73863b32e8c73947a52d1003af31e2 mlxsw: spectrum_switchdev: Check status of memory allocation
0fcc484748c9dcad5238373a4b2e1b2f309392eb mlxsw: spectrum: Mark packets trapped in router
7607dd35fc34893214284cca740d015154d20452 mlxsw: spectrum: Trap IPv4 packets with Router Alert option
588823f97df3d5bf219d8f0bfea1c23ce367b84d mlxsw: spectrum: Add support for IPv6 MLDv1/2 traps
9df552ef3e214e32b7a0458d3bdc430643aa553b mlxsw: spectrum: Improve IPv6 unregistered multicast flooding
8d54814e5233f92bdc2e5185c5dbf4978f7c2742 mlxsw: spectrum: Add support for IPv6 traps
0d284818aff7752c71f1dc5dd6ad8ee64a4adac6 mlxsw: spectrum_router: Flood unregistered multicast packets to router
5ea1237f94906937ded990316c79d3b6d942da2a mlxsw: spectrum_router: Configure RIFs based on IPv6 addresses
d5eb89cf68d674d165e36c49b486b5a487172d1c mlxsw: spectrum_router: Reflect IPv6 neighbours to the device
a6c9b5d1990577eed514110f4ba4d3bc032c57fd mlxsw: spectrum_router: Set activity interval according to both neighbour tables
58adf2c48003d1a7469fe0d0b438300ab6173031 mlxsw: spectrum_router: Don't assume neighbour type
a3d9bc506d6434c5557e8d069a611d1e60a2a62e mlxsw: spectrum_router: Extend virtual routers with IPv6 support
9dbf4d76d07d3b581238149d6e87796c39c94716 mlxsw: spectrum_router: Allow IPv6 routes to be programmed
bc65a8a4f4d214c30c21cba90607c93ac676f6cf mlxsw: spectrum_router: Set abort trap for IPv6
4f1c7f1f2e954cca8230fad4b33b192f84307f50 mlxsw: spectrum_router: Create IPv4 specific entry struct
0e6ea2a4eaef5dcf30abb5c4e02988b5d0b9342f mlxsw: spectrum_router: Mark IPv4 specific function accordingly
9efbee6fead645db2fe8d9e779c36875aa2b98d4 mlxsw: spectrum_router: Drop unnecessary parameter
80c238f91b1f607b32fae54f0462a073c3674140 mlxsw: spectrum_router: Rename functions to add / delete a FIB entry
7dcc18adad31d15d528414bdff12bf98d33d9a20 mlxsw: spectrum_router: Update prefix count for IPv6
4a3c67a6e7cd212fe799ab3d07782c7c8688b4cc mlxsw: spectrum_router: Don't batch neighbour deletion
b5f3e0d430122a551cbc2b88068dae8b2c2c0031 mlxsw: spectrum_router: Fix build when IPv6 isn't enabled
f1b1f273aec0478c17ead69c5f285edd495d3d58 mlxsw: spectrum_router: Simplify a piece of code
1353ee707362478527d54cd0b25d3ac17c47168d mlxsw: spectrum_router: Don't check state when refreshing offload indication
66a5763ac180d43f4a16770791669dc1e085cd5d mlxsw: spectrum_router: Demultiplex FIB event based on family
583419fdf22bd2fc39e49520b29960f206b7ab44 mlxsw: spectrum_router: Sanitize IPv6 FIB rules
428b851f565f11c483cfa62021d674b6fb9d6ddc mlxsw: spectrum_router: Add support for IPv6 routes addition / deletion
f36f5ac677d184a62404169c781339c0cc64ea87 mlxsw: spectrum_router: Abort on source-specific routes
17b334a876fe121abbd6634ace83ca58deea4bc5 mlxsw: spectrum_switchdev: Don't warn about valid situations
852cfeed0ebe93a1c1e0c153c04a57221f72bd7e mlxsw: spectrum_switchdev: Release multicast groups during fini
ba31d3666924adf1b4ad8e19400324a06b99c52c mlxsw: spectrum_router: Prepare nexthop group's hash table for IPv6
e6f3b379c0c599a870bc0e7d8a0cbb0b316502f5 mlxsw: spectrum_router: Add support for nexthop group consolidation for IPv6
df9a21f11f14e393ca48689e1d4b596c4d9200e5 mlxsw: spectrum_router: Use correct config option
4eb6a3bdb4629b610a39dd222a0170c72ef1c690 mlxsw: spectrum_switchdev: Fix mrouter flag update
45b62742df6a27fba71f799cd1a2f721e1c0d584 mlxsw: spectrum: Offload multichain TC rules
dbec8ee95ab3ed231cba59f452531d6ce01fe24f mlxsw: spectrum_acl: Provide helper to lookup ruleset
25cc72a33835ed8a6f53180a822cadab855852ac mlxsw: spectrum: Forbid linking to devices that have uppers
241bc859f6d0f912b8a2246896501a9d934149fa mlxsw: spectrum_router: Set abort trap in all virtual routers
9571e828f460161f76dc3aa24f5857076344b2da mlxsw: reg: Extract mlxsw_reg_ritr_mac_pack()
ff1f06ce9df9deea690a3f16ded77e0b665acffd mlxsw: spectrum_router: Publish mlxsw_sp_l3proto
38ebc0f45474abf4c4229ec3218915576475af85 mlxsw: spectrum_router: Add mlxsw_sp_ipip_ops
010cadf916a5112a2de1642301917f4139104d46 mlxsw: spectrum_router: Support FID-less RIFs
6ddb7426a7d4429c9df9dada9ebc0cc396d31cc4 mlxsw: spectrum_router: Introduce loopback RIFs
9b01451ad5fe09d95aea9cfd5b36cde574651ab4 mlxsw: spectrum_router: Extract mlxsw_sp_fi_is_gateway()
f6050ee6f462e6dbd9dd6a49e5dc3cca7fc0b601 mlxsw: spectrum_router: Extract mlxsw_sp_rt6_is_gateway()
35225e4740baa9707f4063bedb4367185b9d1ae7 mlxsw: spectrum_router: Make nexthops typed
1012b9ac28c6d61f54e0dd9f8744af88427020b7 mlxsw: spectrum_router: Support IPv4 overlay encap
8f28a3097645ae29a7c6835ed9323d6b6b8db169 mlxsw: spectrum_router: Support IPv6 overlay encap
4607f6d26950ffb3c4c8e5b2db42f364f19dd26c mlxsw: spectrum_router: Support IPv4 underlay decap
1cc38fb144ded22b81ef7b53b77d52885f25ecea mlxsw: spectrum_router: Use existing decap route
86484de2c917b6ba5965ef2248d9966424932af4 mlxsw: spectrum: Register for IPIP_DECAP_ERROR trap
92107cfb411f5371bee56d9a13d28ef8b40bbbbc mlxsw: spectrum_router: Add loopback accessors
ee954d1a91b2bb71defb17697f0a2263f46235d2 mlxsw: spectrum_router: Support GRE tunnels
28a04c7b7bbecaab642fcb6a2d7354eb70ea7fbe mlxsw: spectrum_router: Move VRF refcounting
de0f43c01a4b5d408a5c087c8a92ac1739938f8b mlxsw: spectrum_router: Track RIF of IPIP next hops
61e84623ace35ce48975e8f90bbbac7557c43d61 net: centralize net_device min/max MTU checking
cd7df56ed3e60d046ddb3acd987778c00aa9ee33 nfp: add BPF to NFP code translator
7533fdc0f77f207fcc370b10965f4bcee82dfedf nfp: bpf: add hardware bpf offload
66860beb7ed5df11433528cb535d5e9f7dad2302 nfp: bpf: allow offloaded filters to update stats
19d0f54edab6e77b6b73277ac33717be1f858fa8 nfp: bpf: add packet marking support
2d18421debc29a338e6783c06fb75ab7b16fc9ba nfp: bpf: add support for legacy redirect action
e3b8baf0ca2a69f88846b5446234e5647ecd17eb nfp: bpf: add offload of TC direct action mode
b47c62c5de2bc43a26bcaca8d7a93bf9dee66ffe nfp: bpf: improve handling for disabled BPF syscall
6cd80b55471515e0102760b59034ded000c35a09 nfp: bpf: zero extend 4 byte context loads
ecd63a0217d5f1e8a92f7516f5586d1177b95de2 nfp: add XDP support in the driver
2e9d594d50652395f35744ea98624430c57aae2b nfp: remove unnecessary parameters from nfp_net_bpf_offload()
6d6770755f053e0ab2f7c3ffcfeaaf8dbbe89092 nfp: add support for offload of XDP programs
88575199cc65de99a156888629a68180c830eff2 bpf: drop unnecessary context cast from BPF_PROG_RUN
366cbf2f46048d70005c6c33dc289330f24b54b0 bpf, xdp: drop rcu_read_lock from bpf_prog_run_xdp and move to caller
a67edbf4fb6deadcfe57a04a134abed4a5ba3bb5 bpf: add initial bpf tracepoints
d58cebb79b62ff84b537a35423b8d6b7f0746985 nfp: correct DMA direction in XDP DMA sync
c383bdd14f91562babd269aa7c36b46fee7b6c75 nfp: fix potential use after free on xdp prog
9ff304bfaf58c119ef8ba3e20326edeed9983aef nfp: add support for reporting CRC32 hash function
47465aed3220c3b95646bd53d3a6fd11cbf1ebfe nfp: implement .ndo_get_phys_port_name()
43860c1211650ef4f2e03413cacb3420fdb69cde nfp: move more ring debug info to debugfs
fa43d2a895e61defdd32f6ed825740bd2f08106c nfp: store device pointer for the fastpath
b9dcf88a47ebab2743a0c627a95126c4cb3e9883 nfp: add metadata format bit
79c12a752cea61d41fd2f95600eaaaaafb99fe9e nfp: separate data path information from the reset of adapter structure
d2b84397601f370ca11a5a37a40787d31af778b7 nfp: move control BAR pointer into data path structure
783496b0ddc2bd4ad561864138596ebb336a7100 nfp: pass new data path to ring reconfig
512e94dc3229a824190e310c899a3f6d08216477 nfp: use dp to carry number of stack tx rings and vectors
2195c2637f90e97ef8cd8f8e0fe11c1829e7f1f6 nfp: use dp to carry fl_bufsz at reconfig time
76e1e1a89351832ea5d9f7b57677e7420ba6bc92 nfp: use dp to carry mtu at reconfig time
9dc6b116e21b9ff258334c09d78ce26caa5ade45 nfp: use dp to carry xdp_prog at reconfig time
892a7f700b361882105739632ccbd6ceb848c21d nfp: switch to using data path structures for reconfiguration
c487e6b199eab3af14e54406d97cc3c149e591e1 nfp: store dma direction in data path structure
97717aca618a85d9e52327b4509a3b95c2f8f121 nfp: validate rx offset from the BAR and size down it's field
1abae31953996283e1956af0b8ffa72c2b682e77 nfp: reorganize pkt_off variable
b92fb77f27af90d3ee785eedc326f80cb6190597 nfp: prepare metadata handling for xdp_adjust_head()
6fe0c3b43804c9803a4a31c9d2ed8c2014bc0dc3 nfp: add support for xdp_adjust_head()
87232d9615194334df75547db9a433293132d779 nfp: don't use netdev_warn() before netdev is registered
83d08a1d746522c3286c2f52608bea0f79c0e9df nfp: remove RX queue pointers
28b0cfee7b1b62ea214ebc50be5d5a92cbc30d42 nfp: flush xmit_more on error paths
219ad6c1c35c95ff99a0c65cfba0ca9996831af5 nfp: remove defensive checks around ndo_open()/ndo_close()
b9de00770db50ce11f64cd7676dbcaf295a1926f nfp: don't spawn netdevs for reconfigured ports
42b1e6aa4672beba79882673c687985b884f7904 nfp: report auto-negotiation in ethtool
9f9e0da57ef1207b26b13c243c5f398c9432156c nfp: report port type in ethtool
ce22f5a2cbe3c62746da7d3f8272abd03e8c975a nfp: separate high level and low level NSP headers
30a029217de994db889b7e598b54b674b2ad86b4 nfp: allow multi-stage NSP configuration
e890ae8e497a535a8ab692a66f7fc2aee4361728 nfp: turn NSP port entry into a union
85eb97dd2f073e72784505e51b048171ab9bda61 nfp: add extended error messages
5a560832ebf8317eb2af0493b259aba37af05bb1 nfp: NSP backend for link configuration operations
5cd4fbeab21b89e08df4590b2020f2e5f60c0d19 nfp: make use of the DMA_ATTR_SKIP_CPU_SYNC attr
e524a6a9cdc979a45da7532645786469a48de2e3 nfp: parse metadata prepend before XDP runs
ee200a7377fb6ce5ea6d631af0905883f0dca6d2 nfp: fix free list buffer size reporting
90fdc561b08ce292f1d39a62f70012f150583b98 nfp: remove the refresh of all ports optimization
46c505188b788c050d28174c6e726835e057bb28 nfp: replace -ENOTSUPP with -EOPNOTSUPP
d78005a50f306edb000f0994f0470f151915cf90 nfp: drop rx_ring param from buffer allocation
92e68195ebe914ae8b34cfb92148385a50454806 nfp: do simple XDP TX buffer recycling
d38df0d364c3a154065109eb855f8d15ecd0fae2 nfp: avoid reading TX queue indexes from the device
dbf637ff3995bc134187bf64b390feab6125173c nfp: provide 256 bytes of XDP headroom in all configurations
e53fc9fa0ce12df32004dd05b9735a00c4ac5d04 nfp: rename l4_offset in struct nfp_net_tx_desc to lso_hdrlen
28063be693c23340a17164a8e4bb347f0d9d1440 nfp: support LSO2 capability
611bdd4928b0af3906510bb10fc609de1e48d959 nfp: version independent support for chained RSS metadata
ddb98d94e8e7dd9cc1c9dc76d36b5b60c54504c8 nfp: add CHECKSUM_COMPLETE support
abeeec4adf6a6fe71a6a4d8199ff0a533d73a57f nfp: complete the XDP TX ring only when it's full
4aa3b7660aa79bb030aaa887dc16a60e02fa4348 nfp: add a helper for wrapping descriptor index
730b3ab54af4f816cdf541a23c879c9379a480db nfp: eliminate an if statement in calculation of completed frames
beba69ca755542c2581bbb64b2fa79b11047ed8f nfp: make nfp_net alloc/init/cleanup/free not depend on netdevs
d4e7f0928593ac7df9b78410beb90178326a22c0 nfp: rename netdev/port to vNIC
9140b30d318520e6d7dfe3b48aa62e6a7336b510 nfp: add nfp_net_pf_free_vnic() function
7ac9ebd567252d1799002b9282c658f7229ba21c nfp: introduce very minimal nfp_app
d88b0a233fafa4abda3b3aa5a69d46574e4c793e nfp: disallow mixing vNICs with and without NSP port entry
eb488c26d713b2a9ebba6c12bbefd04e01197693 nfp: introduce nfp_port
3d4ed1e70185936ea7cfeec18dd25963c2908871 nfp: update port state in place
6d4f8cba5fbbc83e74ee8a49e5234e446306bac6 nfp: move refresh tracking into the port structure
3eb3b74adb701d575d718df1bbffefa2543a302d nfp: provide linking on port structures
1f60a5815bade268696d57452dfbfcbf0c655a23 nfp: mark port state as stale after reconfig
46b250311dac828bcb79f0807c16d4157059ce7e nfp: mark port state as stale if update failed
1876749da87500c7228f91398e04291389a18634 nfp: refresh port state before reporting autonegotiation
346cfe8482bf491f6e3e88ea89bc0d6be2b02efd nfp: move mutex init out of net code
1851f93fd2ee3dc0f3a6813385010a5d7ec1aabd nfp: add devlink support
71f8a116b5c4b4957c56a2f1a5bd2a7e19d6d400 nfp: add helper for cleaning up vNICs
53e7a08f0da16eb67daf616405b0579e98565cdc nfp: register ports as devlink ports
f0b81195381f0fd9ec84009a0e5a4bb12ccc9637 nfp: calculate total port lanes for split
ec8b1fbe682deb376062c5ed04ef9c78160ffbf0 nfp: support port splitting via devlink
9d3727595b11ab8f2837b54922efd2998f2cade5 nfp: add set_mac_address support while the interface is up
8b3d5a47ae6b93654e39b543e33ded07c06fa8a9 nfp: support long reads and writes with the cpp helpers
193d6218ba801c88a5f3ef1bb2357e39074b3cdc nfp: fix print format for ring pointers in ring dumps
770f0cea19510098cb01ac87370e800b53a6bf5d nfp: don't add ring size to index calculations
9ed9ea7084f34fcb1d962a4fbd012fe8a2942df8 nfp: don't keep count for free buffers delayed kick
5c9143598ea1a5f7a92761966f0c65a459eef7b4 nfp: add missing fall through statements
69394af5de15493fa7bb42ed123d51e713a88b3c nfp: turn reading PCIe RTsym parameters into a helper
8aa0cb00743a1767013a5ee0a581db62620aabd7 nfp: move port init to apps
2707d6f18baa8a8ff2cabddfb324d0be7f512fe5 nfp: report app name in ethtool -i
d9ae7f2bfead4600e85459be93082ca8b1c884f9 nfp: move eBPF offload files to BPF app directory
bb45e51cb0f8fea496eb2d6a9ef2ffb5da564048 nfp: move bpf offload code to the BPF app
c66a9cf408037781fc1984bc60785049b453d8a4 nfp: move basic eBPF stats to app-specific code
d00ca2f3783b97c936f2a3df9dd0fabf4c0a8290 nfp: reorder open and close functions
ee26756d01cbff9e8b9ef9635f58b05b27492a49 nfp: split out the allocation part of open
4621199dbfb188e4871520569233f7c7528ab439 nfp: reuse ring free code on close
cd083ce158cf43f8c26ad9a552ba25b222536e1e nfp: move nfp_net_vecs_init()
c821e617896e99b82fa82777b1ac1263c51eea64 nfp: prepare print macros for use without netdev
042f4ba62ff5fbe1428639187578bae39f513e23 nfp: make sure debug accesses don't depend on netdevs
a7b1ad0875479e7390eb46e1190e50ffc39707b9 nfp: allow allocation and initialization of netdev-less vNICs
5c0dbe9ecf02349490794a4205d61c6603390082 nfp: prepare config and enable for working without netdevs
77ece8d5f1960f82d66b68fbc0c92938cdfa2688 nfp: add control vNIC datapath
c24ca95ff648dd6477d488bb41b9282b67bd22e9 nfp: make vNIC ctrl memory mapping function reusable
73e253f0e5d7557650159ecfac5b2653b6d02cf0 nfp: map all queue controllers at once
21537bc7019a4dfd5c6f615a235e0b171ef3dda8 nfp: don't clutter init code passing fw_ver around
6d4b0d8ed6d2f9e1741b9abd0ce64c641f890d6c nfp: slice the netdev spawning function
2c7e41c0b2f103056f93dd5922c03d6e2021c76d nfp: allow non-equal distribution of IRQs
02082701b974eea3afdb4ac25ab613adabebe41a nfp: create control vNICs and wire up rx/tx
ab832b8de405c640d407b4473c6875210c326255 nfp: make sure to cancel port refresh on the error path
af4fa7eac770720d5edb9337ab0bccb843936364 nfp: remove automatic caching of RTsym table
9baa48859bd31f06b9170e86afd92585ff0bbb1f nfp: remove automatic caching of HWInfo
0be40e66e72a544e2d4a5bca9328463ebf2c55df nfp: keep MIP object around
76abc0f620549d7fdf960bb8c99e502e9b61faae nfp: report application FW build name in ethtool -i
c330182479fa73227c44404d104577580d441458 bpf: nfp: Report bpf_prog ID during XDP_QUERY_PROG
b64052fc9bcb4fa3ca8701e74c1aac0e2847b724 nfp: add VLAN filtering support
c443b5accedaef8e1d6faf7a1bb921670a90a3d0 nfp: xdp: move driver XDP setup into a separate function
9f82fca9422eab3877ab2b697ccc5eef44c63b54 nfp: bpf: don't offload XDP programs in DRV_MODE
6a8ef5428c9fb5b589c2c912889d157abb50dd61 nfp: bpf: release the reference on offloaded programs
cafa92ac255337517ca2466ab05ca9f24c0ca9de nfp: bpf: add support for XDP_FLAGS_HW_MODE
149d7a572ae124385973bf1c8e4d80b3f07d8bd4 nfp: xdp: report if program is offloaded
9daee04ae17fb886008ba222fe8150fcc1d0d8cb nfp: devlink add support for getting eswitch mode
a7ceb9905eed38454d28c293afc2f0acb7915d00 nfp: move physical port init into a helper
a5950182c00eb6d53a68db9f6b6c878f795657f6 nfp: map mac_stats and vf_cfg BARs
5de73ee46704c22097e46bfc276a05360d3a1ba7 nfp: general representor implementation
eadfa4c3be99eaf15670681e6ffa4d995b73594c nfp: add stats and xmit helpers for representors
758238f2e7a645630c3fead7577c3fa5a36c6ad7 nfp: app callbacks for SRIOV
93da7d9660ee6117672a4a9233d80600220de675 nfp: provide nfp_port to of nfp_net_get_mac_addr()
91bf82ca9eed1aa3e700a1b9fcaaa7922df6a4c7 nfp: add support for tx/rx with metadata portid
948faa46c05b5fb48f0bd39df426596197fa5d7e nfp: add support for control messages for flower app
1025351a88a49cb2fed7d023858ce182718c0c43 nfp: add flower app
24a021ed77ef8d090bf15ad1ac24d29fcfe9a410 nfp: add VF and PF representors to flower app
d557ee6bdc6dc4df2ab8e00c2127120b4acbdfca nfp: explicitly check if application FW is loaded
064dc3196ebd2587ad9a4ca2d26629a20f819352 nfp: move area mapping helper into nfpcore
f84730240735b15f725ce59d66a663de82650b46 nfp: add helper for mapping runtime symbols
9ce6bbbb0503e58e8629ae0185e916b271237bc3 nfp: add nfp_app cleanup callback and make flower use it
38edbf6f5da4f87741e73b74dc323706827e83e0 nfp: spawn nfp_ports for PF and VF ports
3238b250b7624a20756667032648263eb3dc1521 nfp: make the representor get stats app-independent
5d7c64a70fa15aef903469b05ca664f7cd17d769 nfp: move representors' struct net_device_ops to shared code
39ae7eb69db3a3daa3aa2f6c66e37dba1975ef00 nfp: allow converting representor's netdev into nfp_port
168c478e107e790456cd6ebb308529756c21de3f nfp: wire get_phys_port_name on representors
e3f28473b8ed348f7c052fa1bf79edfde5efba48 nfp: reorder SR-IOV config and nfp_app SR-IOV callbacks
6d48ceb27af1420882f092495fc796cfcbf92a14 nfp: allocate a private workqueue for driver work
57ae676ee63ec810c64aea67fc451ae0900a05f9 nfp: flower: add Kconfig for flower app
8f15df600dff00c8f28c8588bdd4dca55dff690b nfp: add phys_switch_id support
8a2768732a4dfdaabdbea18603330922fb0ee773 nfp: provide infrastructure for offloading flower based TC filters
af9d842c13549cf306259b7b9c932c6c885ba94b nfp: extend flower add flow offload
5571e8c9f2419c19916d4a707ba359602e0a85d7 nfp: extend flower matching capabilities
1a1e586f54bfe54a0ba7ea0ac9b8c7b1d3e655f6 nfp: add basic action capabilities to flower offloads
43f84b72c50d40c3eb2f59070e40ef51bfd483cc nfp: add metadata to each flow offload
abfcdc1de9bf38cdde6792a165c75d9037ea35fe nfp: add a stats handler for flower offloads
81f3ddf2547d40c3d4878aa66ce837177665ce3c nfp: add control message passing capabilities to flower offloads
2eb333c4b442c4bcab79ada53019d4a47f252e46 nfp: improve order of interfaces in breakout mode
cb2cda484840730f0f7683286fa2a25dc1dbecf0 nfp: remove legacy MAC address lookup
64a919a9440fe080b0ad1814ce86366010d4a9ef nfp: default to chained metadata prepend format
df7c7dd2509f5f8e1f230ac71dfbf2846cc1dc0f nfp: flower: add missing clean up call to avoid memory leaks
88f0f09b3ab7d817b897cedbd7a05a565ff4f75a nfp: freeing the wrong variable
7ceb781a1aa0356086e2bdc76bcd953fcb7ac377 nfp: Initialize RX and TX ring 64-bit stats seqcounts
bb3afda4fc4ea690ff92a36eef4c0afe4d19da04 nfp: do not update MTU from BH in flower app
d6e1ab9ea3514840e4f32957c457b094646c2e9d nfp: don't hold PF lock while enabling SR-IOV
326ce603015eefaa86fc6e490f43638e1010a838 nfp: make sure representors are destroyed before their lower netdev
1691a4c0f4634d50ffeb74373fdeec63495c911e nfp: avoid buffer leak when representor is missing
a7cd39e0c7805a93eaa4256370bcd48c506d46c1 nfp: fix unchecked flow dissector use
74af5975108f54f9443952c0b4d52487031a7569 nfp: fix supported key layers calculation
6afd33e4384060e692705912337b184c1e159aff nfp: remove incorrect mask check for vlan matching
e7562597b46d099a78d45c781ee8d1a7a93c53f1 nfp: double free on error in probe
e1c6dccaf3af291488fbad155d7ee6bc29db262a ethernet/broadcom: use core min/max MTU checking
c61fb99cae51958a9096d8540c8c05e74cfa7e59 bnxt_en: Add RX page mode support.
d1e7925e6d80ce5f9ef6deb8f3cec7526f5c443c bnxt_en: Centralize logic to reserve rings.
5f4492493e75dafc5cbb96eabe0f146c2ffb1e3d bnxt_en: Add a set of TX rings to support XDP.
fa3e93e86cc3d1809fba67cb138883ed4bb74a5f bnxt_en: Refactor tx completion path.
c6d30e8391b85e00eb544e6cf047ee0160ee9938 bnxt_en: Add basic XDP support.
38413406277fd060f46855ad527f6f8d4cf2652d bnxt_en: Add support for XDP_TX action.
3ed3a83e3f3871c57b18cef09b148e96921236ed bnxt_en: Fix DMA unmapping of the RX buffers in XDP mode during shutdown.
eb51365846bc418687af4c4f41b68b6e84cdd449 bnxt_en: Add basic ethtool -t selftest support.
f7dc1ea6c4c1f31371b7098d6fae0d49dc6cdff1 bnxt_en: Add ethtool mac loopback self test.
91725d89b97acea168a94c577d999801c3b3bcfb bnxt_en: Add PHY loopback to ethtool self-test.
67fea463fd873492ab641459a6d1af0e9ea3c9ce bnxt_en: Add interrupt test to ethtool -t selftest.
932dbf83ba18bdb871e0c03a4ffdd9785f7a9c07 bnxt_en: Use short TX BDs for the XDP TX ring.
e605db801bdeb9d94cccbd4a2f641030067ef008 bnxt_en: Support for Short Firmware Message
434c975a8fe2f70b70ac09ea5ddd008e0528adfa bnxt_en: Optimize doorbell write operations for newer chips.
4d172f21cefe896df8477940269b8d52129f8c87 bnxt_en: Implement xmit_more.
ffe406457753a7ca2061ecc8c4d3971623066911 bnxt_en: Fix xmit_more with BQL.
8902965f8cb23bba8aa7f3be293ec2f3067b82c6 bpf: bnxt: Report bpf_prog ID during XDP_QUERY_PROG
f9b76ebd49f97458857568918c305a17fa7c6567 bnxt_en: Fix race conditions in .ndo_get_stats64().
3b6b34df342553a7522561e34288f5bb803aa9aa bnxt_en: Fix bug in ethtool -L.
39d8ba2e71fbdde686d7e31ad141a01994dc0793 bnxt_en: Implement ndo_bridge_{get|set}link methods.
5c8227d0d3b1eb1ad8f98d0b6dc619d70f2cfa04 bnxt_en: Add bnxt_get_num_stats() to centrally get the number of ethtool stats.
9315edca9b1d0daf41f81e1f5d4fb995d3cbc634 bnxt_en: Report firmware DCBX agent.
4ab0c6a8ffd7d25475dd9eb06614eec1ae53a443 bnxt_en: add support to enable VF-representors
ee5c7fb3404724b9e25fe24c81fbcda60f3f2659 bnxt_en: add vf-rep RX/TX and netdev implementation
c124a62ff2dde9eaa9e8083de8206a142535c04e bnxt_en: add support for port_attr_get and and get_phys_port_name
bc88055ab72c0eaa080926c888628b77d2055513 bnxt_en: Use SWITCHDEV_SET_OPS().
d3e3becedc43adc8b8fb12e7507dd4e5aae4d17d bnxt_en: include bnxt_vfr.c code under CONFIG_BNXT_SRIOV switch
e408ebdc41aa53f0aa552132384daaa5f5c6301d bnxt_en: use SWITCHDEV_SET_OPS() for setting vf_rep_switchdev_ops
53f70b8b5aa06db53eb06f092342e6073891729a bnxt_en: fix switchdev port naming for external-port-rep and vf-reps
bd76b87962833f6e55264030a227be0f090b1286 bnxt_en: fix spelling mistake: "swtichdev" -> "switchdev"
98fdbe73bfb809b1f8eec9f27a36e737caed3a44 bnxt_en: Improve tx ring reservation logic.
27573a7d905a49dc756fda9c0e148372136356e6 bnxt: initialize board_info values with proper enums
d5430d31ca72ec37fd539fd1c5230859509be4ef bnxt_en: Reduce default rings on multi-port cards.
70855603e0a129d1c810947a4e4dd7ecd6f4560d bnxt_en: fix clearing devlink ptr from bnxt struct
2ae7408fedfee979e01ed3801223c632bb124c46 bnxt_en: bnxt: add TC flower filter offload support
db1d36a27324d51e62944f702a4d2d50548896ee bnxt_en: add TC flower offload flow_alloc/free FW cmds
d7bc73053024eecb239a5b8644a05c7745fd87a1 bnxt_en: add code to query TC flower offload stats
f143647a02825038d8d6251422e1d0ebdcb6d9ea bnxt_en: add a dummy definition for bnxt_vf_rep_get_fid()
1e3c5ec66119783440ed211ae527674651affa9b bnxt_en: check for ingress qdisc in flower offload
0d7b70e83642f01c451a52faa3908e7b054ff7c6 bnxt_en: don't consider building bnxt_tc.o if option not enabled
c213eae8d3cd4c026f348ce4fd64f4754b3acf2b bnxt_en: Improve VF/PF link change logic.
3c467bf399106030d5a97d844ee119caec04e817 bnxt: Move generic devlink code to new file
431aa1eb20d8ae2674723292adb832b968da868e bnxt_en: Get firmware package version one time.
7eb9bb3a0c7c29741df2249cc3b99f06a7978d61 bnxt_en: Check maximum supported MTU from firmware.
49f7972fd16407b3d1f03c2d447d2f1e1b95e9ba bnxt_en: Add ethtool reset method
18775aa8a91fcd4cd07c722d575b4b852e3624c3 bnxt_en: Reorganize the coalescing parameters.
f8503969d27b2b26ff0adbce4b7d7cf4ba5e43c2 bnxt_en: Refactor and simplify coalescing code.
8c95f773b4a367f7b9bcca7ab5f85675cfc812e9 bnxt_en: add support for Flower based vxlan encap/decap offload
f484f6782e013138946122ae09c100c9e4b547e3 bnxt_en: add hwrm FW cmds for cfa_encap_record and decap_filter
5a84acbebb22f93dfc9ce1e5f0427c45c94acb33 bnxt_en: query cfa flow stats periodically to compute 'lastused' attribute
cd66358e52f74585f043ef63089727273b3421d3 bnxt_en: alloc tc_info{} struct only when tc flower is enabled
952c5719aac6587f1e0add97dca79f9e73887f9b bnxt_en: Fix randconfig build errors.
de4a10ef6eff0eb0ced97a39dc3edd0d3101b6ed bnxt_en: fix typo in bnxt_set_coalesce
b153cbc507946f52d5aa687fd64f45d82cb36a3b bnxt_en: Fix IRQ coalescing regression.
e57f774db1fef3d983fd77db0f48f3f39875c65f RDMA/bnxt_re: add DCB dependency
17f0d42c931b2c43d84440ebc16978bc76ef1201 bnxt_re: add MAY_USE_DEVLINK dependency
6d290d69ac52b3b311d2ef0da4825dc6f1ea8997 IB/ipoib: Convert timers to use timer_setup()
8966e28d2e40cfc9f694bd02dabc49afb78d7160 IB/ipoib: Use NAPI in UD/TX flows
7bf3976d6cfd77c956484186e8bed8f4aab677ce vmw_pvrdma: switch to pci_alloc_irq_vectors
7f5562d5ecc44c757599b201df928ba52fa05047 blk-mq-tag: check for NULL rq when iterating tags
03e0f3a65e4da497c3b7b213c68943cbc73a2e34 nvme-pci: avoid dereference of symbol from unloaded module
aefd80e874e98a864915df5b7d90824a4340b450 hv_netvsc: preserve hw_features on mtu/channels/ringparam changes
0cf737808ae7cb25e952be619db46b9147a92f46 hv_netvsc: netvsc_teardown_gpadl() split
f892760aa66a2d657deaf59538fb69433036767c fs/mpage.c: fix mpage_writepage() for pages with buffers
8f797c288e3a788e9578dd4db08b624a6d4b6a9b mac80211: fix STA_SLOW_THRESHOLD htmldocs failure
0fe8bed6e37c259b85d123ef9667f972305c9d6b iwlwifi: mvm: send all non-bufferable frames on the probe queue
bd800e41a3de5c7e56b2fd27088bdaf5e228d227 iwlwifi: mvm: change state when queueing agg start work
8458e48ac7ad86a5ab7f3d1a8cacd9205a9a97ce iwlwifi: mvm: wake the correct mac80211 queue
35f62727df0ed8e5e4857e162d94fd46d861f1cf brcmfmac: setup passive scan if requested by user-space
6af1de2e4ec49635905aaed31d073a0d92c8d3bf ath10k: mark PM functions as __maybe_unused
baf41bc35f2bdb953da532645fd82009c2d12acf iwlwifi: mvm: do not print security error in monitor mode
1efc3843a4ee1331bc20df685a79b47fa0f547d2 iwlwifi: stop dbgc recording before stopping DMA
d8c73e455d7b973d1346bb5632b4a41819b090c9 iwlwifi: nvm-parse: unify channel flags printing
44fd09dad5d2b78efbabbbbf623774e561e36cca iwlwifi: nvm: set the correct offsets to 3168 series
ad670233c9e1d5feb365d870e30083ef1b889177 nl80211: Define policy for packet pattern attributes
e5f5ce37a7918ed7406c52987c7cc8b670ed5e14 mac80211: validate user rate mask before configuring driver
225937d6ccff3ba49b7065672ce35f21465aaeb9 RDMA/bnxt_re: Implement the alloc/get_hw_stats callback
74828b128115033ff25d4140d732a05a36eaeaf0 bnxt_re: Remove RTNL lock dependency in bnxt_re_query_port
38c53af853069adf87181684370d7b8866d6387b KVM: PPC: Book3S HV: Fix exclusion between HPT resizing and other HPT updates
ef42719814db06fdfa26cd7566de0b64de173320 KVM: PPC: Book3S HV: Fix host crash on changing HPT size
caaee6234d05a58c5b4d05e7bf766131b810a657 ptrace: use fsuid, fsgid, effective creds for fs access checks
197e7e521384a23b9e585178f3f11c9fa08274b9 Sanitize 'move_pages()' permission checks
67a2e213e7e937c41c52ab5bc46bf3f4de469f6e mm: cma: fix incorrect type conversion for size during dma allocation
4e6759be28e4e69c397ab58c1e780b0a15d8a6fd ibmvnic: Feature implementation of Vital Product Data (VPD) for the ibmvnic driver
f743106ec140589b45ecc6ff92bacf48a0e26b05 ibmvnic: fix dma_mapping_error call
2b04e8f6bbb196cab4b232af0f8d48ff2c7a8058 more bio_map_user_iov() leak fixes
350976ae21873b0d36584ea005076356431b8f79 xfs: truncate pagecache before writeback in xfs_setattr_size()
545052e9e35a34af95d2e870ac3fe2894376e6e9 ext4: Switch to iomap for SEEK_HOLE / SEEK_DATA
cf8b84f48a5936f558a7a415f1d2f42161bf73eb kvm: nVMX: Prepare for checkpointing L2 state
ca0bde28f2ed66c2229ecfb7f4bfa0defa3da4b5 kvm: nVMX: Split VMCS checks from nested_vmx_run()
858e25c06fb0bc4b39b2f01c14c990348e3a9b67 kvm: nVMX: Refactor nested_vmx_run()
0234bf885236a41ef05376039f2a8ebe7028a388 KVM: x86: introduce ISA specific SMM entry/exit callbacks
72d7b374b14d67e973bce476e4a75552478cc42d KVM: x86: introduce ISA specific smi_allowed callback
72e9cbdb43384ceacc49e2fb6b8c8fb7c5988778 KVM: nVMX: fix SMI injection in guest mode
05cade71cf3b925042569c3e8dc1fa68a2b26995 KVM: nSVM: fix SMI injection in guest mode
cc3d967f7e32ceeb9b78dc962126ebcf1a2b24b2 KVM: SVM: detect opening of SMI window using STGI intercept
f4474c9f0bba17857b1a47c8dc89c07a0845c2b2 x86/dumpstack: Handle NULL stack pointer in show_trace_log_lvl()
b1c599b8ff80ea79b9f8277a3f9f36a7b0cfedce x86/cpufeature: Add feature bit for Intel's Silicon Debug CPUID bit
5e3d02bbafad38975099b5848f5ebadedcf7bb7e blk-mq-sched: dispatch from scheduler IFF progress is made in ->dispatch
caf8eb0d604a0eaeb8111eb4d36853a6d08eebe7 blk-mq-sched: move actual dispatching into one helper
7930d0a00ff5dbcc80f793d1a7a6b8de4e591f1a sbitmap: introduce __sbitmap_for_each_set()
63ba8e31c3ac6393b07c6e18538814a730478766 block: kyber: check if there are requests in ctx in kyber_has_work()
de1482974080ec9ef414bf048b2646b246b63f6e blk-mq: introduce .get_budget and .put_budget in blk_mq_ops
b347689ffbca745ac457ee27400ce1affd571c6f blk-mq-sched: improve dispatching from sw queue
aeec77629a4ac6f8c248f3a82e80d4170a881f22 scsi: allow passing in null rq to scsi_prep_state_check()
0df21c86bdbfd17dec9ab898312af9bfb74d5d86 scsi: implement .get_budget and .put_budget for blk-mq
1f460b63d4b37f504d8d0affc2cd492eb005ea97 blk-mq: don't restart queue when .get_budget returns BLK_STS_RESOURCE
826a70a08b1210bbfdbda812ab43eb986e25b5c2 SCSI: don't get target/host busy_count in scsi_mq_get_budget()
88022d7201e96b43f1754b0358fc6bcd8dbdcde1 blk-mq: don't handle failure in .get_budget
0c6af1ccd5fd9ac640aef01c8de0043837451a04 blk-mq: put driver tag if dispatch budget can't be got
eb619fdb2d4cb8b3d3419e9113921e87e7daf557 blk-mq: fix issue with shared tag queue re-running
f906a6a0f42684715b552ccff9282b22cfe2b5a2 blk-mq: improve tag waiting setup for non-shared tags
157f377beb710e84bd8bc7a3c4475c0674ebebd7 block: directly insert blk-mq request from blk_insert_cloned_request()
6d6f167ce74158903e7fc20dfbecf89c71aa1c00 blk-mq: put the driver tag of nxt rq before first one is requeued
9c71c83c857e7a84a5be5a56ea88da7098f51db8 blk-flush: don't run queue for requests bypassing flush
b0850297c749ea79a5717d597931366b3d7f4b09 block: pass 'run_queue' to blk_mq_request_bypass_insert
598906f814280762157629ba8833bf5cb11def74 blk-flush: use blk_mq_request_bypass_insert()
a6a252e6491443c1c18eab7e254daee63d4a7a04 blk-mq-sched: decide how to handle flush rq via RQF_FLUSH_SEQ
244c65a3ccaa06fd15cc940315606674d3108b2f blk-mq: move blk_mq_put_driver_tag*() into blk-mq.h
923218f6166a84688973acdc39094f3bee1e9ad4 blk-mq: don't allocate driver tag upfront for flush rq
055f6e18e08f5b7fd98171fce857a0bad87a919d block: Make q_usage_counter also track legacy requests
6a15674d1e90917f1723a814e2e8c949000440f7 block: Introduce blk_get_request_flags()
1b6d65a0bfb5df2a6029c1430e99fcc5d96bb59a block: Introduce BLK_MQ_REQ_PREEMPT
039c635f4e666b647df2100038de276a83fb3fca ide, scsi: Tell the block layer at request allocation time about preempt requests
c9254f2ddb19387ea9714a57ea48463c20333b92 block: Add the QUEUE_FLAG_PREEMPT_ONLY request queue flag
3a0a529971ec4e2d933e9c7798db101dfb6b1aec block, scsi: Make SCSI quiesce and resume work reliably
aba7afc5671c23beade64d10caf86e24a9105dab blk-mq: Avoid that request queue removal can trigger list corruption
b0b91d18e2e97b741b294af9333824ecc3fadfd8 pipe: fix limit checking in pipe_set_size()
09b4d1990094dd22c27fb0163534db419458569c pipe: simplify logic in alloc_pipe_info()
a005ca0e6813e1d796a7422a7e31d8b8d6555df1 pipe: fix limit checking in alloc_pipe_info()
9c87bcf0a31b338dc8a69a5d251a037565a94e13 pipe: make account_pipe_buffers() return a value, and use it
086e774a57fba4695f14383c0818994c0b31da7c pipe: cap initial pipe capacity according to pipe-max-size limit
f4aacea2f5d1a5f7e3154e967d70cf3f711bcd61 sysctl: allow for strict write position handling
41662f5cc55335807d39404371cfcbb1909304c4 sysctl: enable strict writes
a19ac3374995382a994653ff372b98ea7cbad548 sysctl: kdoc'ify sysctl_writes_strict
d383d48470819e86fe30eb72f0e9494e1ee0e2af sysctl: fold sysctl_writes_strict checks into helper
7a8d181949fb2c16be00f8cdb354794a30e46b39 pipe: add proc_dopipe_max_size() to safely assign pipe_max_size
fb910c42ccebf853c29296185c45c11164a56098 sysctl: check for UINT_MAX before unsigned int min/max
27f203f655a2e1dab66598a5b19afb637c587f0b untangle fsnotify_d_instantiate() a bit
affda48410a5bbfd516def60bbc97f2683cd9f7b trim fsnotify hooks a bit
5198adf649a0b7b0f9ddb98b264e57b41516116b fsnotify: Remove unnecessary tests when showing fdinfo
f410ff65548c548fed5f7e38c4ef57a73ebfe3bd audit: Abstract hash key handling
43471d15df0e7c40ca4df1513fc1dcf5765396ac audit_tree: Use mark flags to check whether mark is alive
9dd813c15b2c101168808d4f5941a29985758973 fsnotify: Move mark list head from object into dedicated structure
86ffe245c430f07f95d5d28d3b694ea72f4492e7 fsnotify: Move object pointer to fsnotify_mark_connector
e911d8af87dba7642138f4320ca3db80629989f2 fsnotify: Make fsnotify_mark_connector hold inode reference
755b5bc681eb46de7bfaec196f85e30efd95bd9f fsnotify: Remove indirection from mark list addition
0810b4f9f207910d90aee56d312d25f334796363 fsnotify: Move fsnotify_destroy_marks()
a242677bb1e6faa9bd82bd33afb2621071258231 fsnotify: Move locking into fsnotify_recalc_mask()
f06fd98759451876f51607f60abd74c89b141610 fsnotify: Move locking into fsnotify_find_mark()
a03e2e4f078365428bb4317989cb5d1d6563cfe9 fsnotify: Determine lock in fsnotify_destroy_marks()
8212a6097a720896b4cdbe516487ad47f4296599 fsnotify: Remove indirection from fsnotify_detach_mark()
73cd3c33ab793325ebaae27fa58b4f713c16f12c fsnotify: Avoid double locking in fsnotify_detach_from_object()
2629718dd26f89e064dcdec6c8e5b9713502e1f8 fsnotify: Remove useless list deletion and comment
04662cab59fc3e8421fd7a0539d304d51d2750a4 fsnotify: Lock object list with connector lock
08991e83b7286635167bab40927665a90fb00d81 fsnotify: Free fsnotify_mark_connector when there is no mark attached
6b3f05d24d355f50f3d9814304650fcab0efb482 fsnotify: Detach mark from object list when last reference is dropped
abc77577a669f424c5d0c185b9994f2621c52aa4 fsnotify: Provide framework for dropping SRCU lock in ->handle_event
9385a84d7e1f658bb2d96ab798393e4b16268aaa fsnotify: Pass fsnotify_iter_info into handle_event handler
66d2b81bcb92c14b22a56a9ff936f2b40accc83c fsnotify: Remove fsnotify_set_mark_{,ignored_}mask_locked()
8920d2734d9a1b68e1b53d8c12b289773cdbd971 fsnotify: Remove fsnotify_recalc_{inode|vfsmount}_mask()
416bcdbcbbb4800f11f03e8baf570f9996219f67 fsnotify: Inline fsnotify_clear_{inode|vfsmount}_mark_group()
18f2e0d3a43641889ac2ba9d7508d47359eec063 fsnotify: Rename fsnotify_clear_marks_by_group_flags()
2e37c6ca8d76c362e844c0cf3ebe8ba2e27940cb fsnotify: Remove fsnotify_detach_group_marks()
b1362edfe15b20edd3d116cec521aa420b7afb98 fsnotify: Remove fsnotify_find_{inode|vfsmount}_mark()
ebb3b47e37a4ccef33e6388589a21a5c23d6b40b fsnotify: Drop inode_mark.c
7b1293234084ddb6469c4e9a5ef818f399b5786b fsnotify: Add group pointer in fsnotify_init_mark()
054c636e5c8054884ede889be82ce059879945e6 fsnotify: Move ->free_mark callback to fsnotify_ops
24c20305c7fc8959836211cb8c50aab93ae0e54f fsnotify: clean up fsnotify_prepare/finish_user_wait()
0d6ec079d6aaa098b978d6395973bb027c752a03 fsnotify: pin both inode and vfsmount mark
9a31d7ad997f55768c687974ce36b759065b49e5 fsnotify: fix pinning group in fsnotify_prepare_user_wait()
5c47e6d0ad608987b91affbcf7d1fc12dfbe8fb4 fold try_prune_one_dentry()
03b3b889e79cdb6b806fc0ba9be0d71c186bbfaa fold d_kill() and d_free()
e55fd011549eae01a230e3cace6f4d031b6a3453 split dentry_kill()
ff2fde9929feb2aef45377ce56b8b12df85dda69 expand dentry_kill(dentry, 0) in shrink_dentry_list()
046b961b45f93a92e4c70525a12f3d378bced130 shrink_dentry_list(): take parent's ->d_lock earlier
9f12600fe425bc28f0ccba034a77783c09c15af4 dcache: add missing lockdep annotation
b2b80195d8829921506880f6dccd21cabd163d0d dealing with the rest of shrink_dentry_list() livelock
47be61845c775643f1aa4d2a54343549f943c94c fs/dcache.c: avoid soft-lockup in dput()
62676d10b483a2ff6e8b08c5e7c7d63a831343f5 qxl: alloc & use shadow for dumb buffers
6d281b1f79e194c02125da29ea77316810261ca8 drm/atomic: Unref duplicated drm_atomic_state in drm_atomic_helper_resume()
70a9c6b9010848e101ff67a886f2e75209b2f0d1 drm/amdgpu: fix placement flags in amdgpu_ttm_bind
c02b8fb4073d1b9aa5af909a91b51056b819d946 drm/i915/edp: Increase the T12 delay quirk to 1300ms
0c3767b28186c8129f2a2cfec06a93dcd6102391 drm/i915: Use crtc_state_is_legacy_gamma in intel_color_check
320671f94ada80ff036cc9d5dcd730ba4f3e0f1a drm/i915: Silence compiler warning for hsw_power_well_enable()
8d550824c6f52506754f11cb6be51aa153cc580d drm/i915: Order two completing nop_submit_request
55b4f1ce2f23692c57205b9974fba61baa4b9321 drm/i915: Fix eviction when the GGTT is idle but full
1210d3889077653b90b0bfd2cc54e19f4766e4e6 drm/i915: Use bdw_ddi_translations_fdi for Broadwell
87145d95c3d8297fb74762bd92e022d7f5cc250c drm/i915/cnl: Fix PLL mapping.
614ee07acfbb55f2debfc3223ffae97fee17ed14 drm/i915/cnl: Fix PLL initialization for HDMI.
a6d65e451cc4e7127698384868a4447ee7be7d16 drm/i915: Report -EFAULT before pwrite fast path into shmemfs
930a784d02339be437fec07b3bb7213bde0ed53b drm/i915: Use a mask when applying WaProgramL3SqcReg1Default
d3daa2c7865cbfa830651b11c8ad1df23465b46e drm/amd/amdgpu: Remove workaround check for UVD6 on APUs
191f896085cf3b5d85920d58a759da4eea141721 drm/i915/perf: fix perf enable/disable ioctls with 32bits userspace
8f63fc2bc64716c16e269ab951130eeda78fe37a drm/i915/gvt: properly check per_ctx bb valid state
edee7ecdb4d7311f351feaeb53e269f416bb1b57 drm/i915/gvt: Refine MMIO_RING_F()
20a2bcdec5071f78bebe48c5eecdb89de6e96acb drm/i915/gvt: Extract mmio_read_from_hw() common function
894e287b3dcc8bfc8d974f883dab3b5c66344089 drm/i915/gvt: Adding ACTHD mmio read handler
d324c5bc462d354d337dcf3a14ffd0eb17b4fa38 drm/nouveau/kms/nv50: use the correct state for base channel notifier setup
547da76b5777859f98bb78e6b57f19463f803c04 drm/i915: Hold rcu_read_lock when iterating over the radixtree (vma idr)
1d033beb20d6d5885587a02a393b6598d766a382 drm/i915: Check incoming alignment for unfenced buffers (on i915gm)
ebcaa1ff8b59097805d548fe7a676f194625c033 drm/i915: Reject unknown syncobj flags
5684514ba9dc6d7aa932cc53d97d866b2386221f drm/i915: Deconstruct struct sgt_dma initialiser
2e4c85c6edc80fa532b2c7e1eb3597ef4d4bbb8f IB/core: Avoid unnecessary return value check
877add28178a7fa3c68f29c450d050a8e6513f08 IB/core: Only maintain real QPs in the security lists
315d160c5a4e034a576a13aa21e7235d5c9ec609 IB/core: Only enforce security for InfiniBand
fbb113f773482496d601e0bd934e680b35876016 i40e/i40evf: rename vf_offload_flags to vf_cap_flags in struct virtchnl_vf_resource
a33c83c4353b2efc4d883bad06a86a9ba2dde4fc virtchnl: Add pad fields to a couple of structures
bd5608b3223bc711a5b365f80d4e67866ac7cc44 i40e: restore promiscuous after reset
c7cdff0e864713a089d7cb3a2b1136ba9a54881a virtio_balloon: fix deadlock on OOM
d9e427f6ab8142d6868eb719e6a7851aafea56b6 virtio_balloon: fix increment of vb->num_pfns in fill_balloon()
4bb0f0e73c8c30917d169c4a0f1ac083690c545b tracing: Call clear_boot_tracer() at lateinit_sync
11752adb68a388724b1935d57bf543897c34d80b locking/pvqspinlock: Implement hybrid PV queued/unfair locks
a7c3e901a46ff54c016d040847eda598a9e3e653 mm: introduce kv[mz]alloc helpers
1f5307b1e094bfffa83c65c40ac6e3415c108780 mm, vmalloc: properly track vmalloc users
6c5ab6511f718c3fb19bcc3f78a90b0e0b601675 mm: support __GFP_REPEAT in kvmalloc_node for >32kB
54f180d3c181277457fb003dd9524c2aa1ef8160 mm, swap: use kvzalloc to allocate some swap data structures
752ade68cbd81d0321dfecc188f655a945551b25 treewide: use kv[mz]alloc* rather than opencoded variants
220ced1676c490c3192dd9bc1a06be86dee88a56 mm: fix get_user_pages() vs device-dax pud mappings
5fbb96c8f1ba89fb220efb7e4eeed7cb5112becd scsi: cxlflash: Use cmd_size for private commands
25bced2b61b43b6372a73008dafa2183c5d53c39 scsi: cxlflash: Remove private command pool
de01283baa334b1d938cfd9121198c517ad6dc89 scsi: cxlflash: Wait for active AFU commands to timeout upon tear down
9ba848acbf4fbc6d99a0992df9ef5eb1b4842ba9 scsi: cxlflash: Remove AFU command lock
d4ace35166e55e73afe72a05d166342996063d35 scsi: cxlflash: Cleanup send_tmf()
9d89326c6660bc287b74983b51239460da10e189 scsi: cxlflash: Cleanup queuecommand()
48b4be36edf8a2cb0dedcb2d28f598e51249e805 scsi: cxlflash: Migrate IOARRIN specific routines to function pointers
fe7f96982a4e7103ffab45fba34c57ee19b62639 scsi: cxlflash: Migrate scsi command pointer to AFU command
9c7d1ee5f13a7130f6d3df307ec010e9e003fa98 scsi: cxlflash: Refactor context reset to share reset logic
696d0b0c715360ce28fedd3c8b009d3771a5ddeb scsi: cxlflash: Support SQ Command Mode
fb67d44dfbdf85d984b9b40284e90636a3a7b21d scsi: cxlflash: Cleanup prints
76a6ebbeef26b004c36a0c8ee0496bae5428fc31 scsi: cxlflash: Separate RRQ processing from the RRQ interrupt handler
f918b4a8e6f8bb59c44045f85d10fd9cc7e5a4c0 scsi: cxlflash: Serialize RRQ access and support offlevel processing
cba06e6de4038cd44a3e93a92ad982c372b8a14e scsi: cxlflash: Implement IRQ polling for RRQ processing
3b225cd32a05b627a6ca366f364a824beaabecc5 scsi: cxlflash: Update sysfs helper routines to pass config structure
78ae028e823701148e4915759459ee79597ea8ec scsi: cxlflash: Support dynamic number of FC ports
8fa4f1770d56af6f0a5a862f1fd298a4eeea94f3 scsi: cxlflash: Remove port configuration assumptions
0aa14887c60c27e3385295ee85f5ac079ae2ffb5 scsi: cxlflash: Hide FC internals behind common access routine
565180723294b06b3e60030033847277b9d6d4bb scsi: cxlflash: SISlite updates to support 4 ports
1cd7fabc82eb06c834956113ff287f8848811fb8 scsi: cxlflash: Support up to 4 ports
323e33428ea23bfb1ae5010b18b4540048b2ad51 scsi: cxlflash: Fence EEH during probe
50b787f7235efbd074bbdf4315e0cc261d85b4d7 scsi: cxlflash: Remove unnecessary DMA mapping
cd41e18daf1a21fea5a195a5a74c97c6b183c15a scsi: cxlflash: Fix power-of-two validations
fcc87e74a987dc9c0c85f53546df944ede76486a scsi: cxlflash: Fix warnings/errors
e2ef33fa5958c51ebf0c6f18db19fe927e2185fa scsi: cxlflash: Improve asynchronous interrupt processing
bfc0bab172cabf3bb25c48c4c521b317ff4a909d scsi: cxlflash: Support multiple hardware queues
3065267a80c88d775e8eb34196280e8eee33322f scsi: cxlflash: Add hardware queues attribute
1dd0c0e4fd02dc5e5bfaf89bd4656aabe4ae3cb3 scsi: cxlflash: Introduce hardware queue steering
66ea9bcc392017b6df465b6f5847f6eac966a801 scsi: cxlflash: Combine the send queue locks
539d890cecee6b5d7304914afc51b7f53150163d scsi: cxlflash: Update cxlflash_afu_sync() to return errno
a96851d3372bf8ee7023712163ad3da9a3e30a29 scsi: cxlflash: Reset hardware queue context via specified register
0b09e711189952ff9d411593a8d74ec12a956c57 scsi: cxlflash: Schedule asynchronous reset of the host
c2c292f45029a6850cd14c7c2fa4fc479b8f74aa scsi: cxlflash: Handle AFU sync failures
a002bf830f5df3e622e32fdbde1756bcbb6aedad scsi: cxlflash: Track pending scsi commands in each hardware queue
a1ea04b3ebd9ae5c1cd5bf48be37aba0d93c1acc scsi: cxlflash: Flush pending commands in cleanup path
7c4c41f172b6d5dda1119ce5f59151bef732a058 scsi: cxlflash: Add scsi command abort handler
a834a36b57d93b31f683a5d2cf7d87e3e617cb70 scsi: cxlflash: Create character device to provide host management interface
cf2430279006e4afa67dfa4cf952ded38c7ed5b4 scsi: cxlflash: Separate AFU internal command handling from AFU sync specifics
d6e32f530df9827070c45b55a6c67dfa8562184c scsi: cxlflash: Introduce host ioctl support
efa1c818d3458fe97d8f83f40051518b44183234 scsi: cxlflash: Refactor AFU capability checking
9cf43a360450ddd758b0021d1b55f1cc5643b9ed scsi: cxlflash: Support LUN provisioning
bc88ac47d5cb11c7dd9896781f793fae519d53fa scsi: cxlflash: Support AFU debug
3223c01aa1cec60d59bd218aca5e202b558d225a scsi: cxlflash: Support WS16 unmap
479ad8e9d48c4d82c92417b012193e967fc33b8a scsi: cxlflash: Remove zeroing of private command data
8ba1ddb31f528cb45be39b7f3b600261afaa7920 scsi: cxlflash: Update TMF command processing
acfeb23b29894deaee65d63c55bea09183f6b538 scsi: cxlflash: Avoid double free of character device
32abbedaafde5a0c1edfd07369dde73a4fda2554 scsi: cxlflash: Update send_tmf() parameters
5a4d9d7790422c4a92d8ca52e37c1e2b45d42c27 scsi: cxlflash: Update debug prints in reset handlers
eeac8cda2c957e156093933b860eec09e488fe15 scsi: cxlflash: return -EFAULT if copy_from_user() fails
48a17ad5931c3832eec68411620bc3527021c193 scsi: cxlflash: Remove unnecessary existence check
cfa0327b0d03091e0c47249c080e50e287be762d i2c: support 10 bit and slave addresses in sysfs 'new_device'
2f4fe4cab073c60c1a70cb540662c0a91d133946 net/mlx5e: Add offloading of NIC TC pedit (header re-write) actions
26c02749936f064abf771a0f5f49b280fcfd8b66 net/mlx5e: Allow TC csum offload if applied together with pedit action
513f8f7fc049361976062c770a1ffb43b01c73d1 net/mlx5e: Use short attribute form when adding/deleting offloaded TC flows
1a9527bb17427a330ef9bd1a65e2c15760095b5f net/mlx5e: Use modify header ID cache for offloaded TC E-Switch flows
3099eb5a8ee2e46d57302932165fe4f86232a812 net/mlx5e: Use modify header ID cache for offloaded TC NIC flows
14160ea227a1a6d9099495eadc55a900d371ab3d net/mlx5: Update eqe_type_str() event names
1b9f533a909e6983808e48b94faea58ea561f9f9 net/mlx5: Avoid using multiple blank lines
8963ca45e70c8aa9309f44b463d50bccf7932dac net/mlx5: Avoid blank lines before/after closing/opening braces
e53eef635073e3c945d44009679d0a83f1b31083 net/mlx5: Align to match opening parenthesis
3e432ab6d9eb3671e065cd7a009adefd6dbf4a04 net/mlx5e: Fix typo in warning if CQ moderation is not supported
0883b4f456f691a54df7a9ae5607ade456fa7b97 net/mlx5e: Reduce number of heap allocated buffers for update stats
432609a4cdfb1c3e3a58e6e37b3501e42bfc50ab net/mlx5e: Move and optimize query out of buffer function
3834a5e62617603673474ada9831aa4bda955e03 net/mlx5e: Optimize update stats work
d8bec2b29a82981acb229215e3970d4d50a7e6eb net/mlx5e: Support bpf_xdp_adjust_head()
78aedd327982ddd3cbb6ffc58f6fe0179cb6238b net/mlx5e: Build SKB with exact frag_size
bce2b2bf66825a56f66229980a30884704cba3d2 net/mlx5e: Enhance RX SKB headroom logic
accd58833237d4ad835f7f176303ac2b582704e3 net/mlx5e: Introduce RX Page-Reuse
2a0165a034ac024b60cca49c61e46f4afa2e4d98 net/mlx5: Cancel delayed recovery work when unloading the driver
52ec462eca9b87b8036209483efe1c6cf9c49d9a net/mlx5: Add reserved-gids support
a6f7d2aff623bb7572d4bca1caf5820e0cd5a586 net/mlx5: Add support for multiple RoCE enable
095b0927f0ce74f7211b9046f8493dbba26ca930 IB/mlx5: Respect mlx5_core reserved GIDs
4b67379376b3674c069477aa48fe8923f735247e net/mlx5: Make get_cqe routine not ethernet-specific
3f2b7edd7cf59c1ec886bd478b88cfb5d809040b net/mlx5: Add QP WQ support
9410733c44d768b085af3877ccf63efa298168e9 net/mlx5: FPGA, Move FPGA init/cleanup to init_once
6062118d5cd2b90369278cdf831aeffb84ae3943 net/mlx5: FPGA, Add FW commands for FPGA QPs
537a50574175a2b68b0612ffb48cb044a394c7b4 net/mlx5: FPGA, Add high-speed connection routines
c43051d72a8dc4a00d49db27292a76d26e8df7af net/mlx5: FPGA, Add SBU bypass and reset flows
a9956d35d199beb406727a4496bc5d7f09c82976 net/mlx5: FPGA, Add SBU infrastructure
bebb23e6cb02d2fc752905e39d09ff6152852c6c net/mlx5: Accel, Add IPSec acceleration interface
899a59d301bc0ccd312dd23d58899cfbbc94bead net/mlx5e: IPSec, Add Innova IPSec offload RX data path
2ac9cfe78223bb88be8cff3b59e0e13551b4e29c net/mlx5e: IPSec, Add Innova IPSec offload TX data path
164f16f7021406795729916e100c7edd53ae954f net/mlx5e: IPSec, Add IPSec ethtool stats
4120dab09574e29e7576895342896ccb21b336e7 net/mlx5: fix spelling mistake: "Allodating" -> "Allocating"
6992c6c5dd4756e665824d4bc29f15b85c2907e0 net/mlx5: fix memcpy limit?
aa07b633846db4192e6bb35675fbdaf6e78c98c7 net/mlx5: Add missing include in lib/gid.c
5dfd87b67cd98375896890e01437edefeb45a707 net/mlx5: IPSec, Fix 64-bit division on 32-bit builds
c8af01692e4950504fb2e5c65ca87acbe73027cb net/mlx5: FPGA, make mlx5_fpga_device_brb static
2a41d15b7906e8f749d3656e1bdc2a5ee7dd65ff net/mlx5: FPGA, Fix datatype mismatch
111a676367699dc8e3bc567ab17ab573ade54f0d net/mlx5: Build wq.o even if MLX5_CORE_EN is not selected
fb000f781783867ab442971c63f0005c2547c72b net/mlx5: Add Makefiles for subdirectories
de92cd6cf4899c0876a8f5519769a786ad7cdeea net/mlx5: IPSec, fix 64-bit division correctly
219c81f7d1d5a89656cb3b53d3b4e11e93608d80 net/mlx5: Fix command bad flow on command entry allocation failure
58569ef8f619761548e7d198f59e8ebe3af91d04 net/mlx5e: IPoIB, Modify add/remove underlay QPN flows
fa3676885e3b5be1edfa1b2cc775e20a45b34a19 net/mlx5e: Add field select to MTPPS register
49c5031ca6f0628ef973a11b17e463e088bf859e net/mlx5e: Fix broken disable 1PPS flow
4272f9b88db9223216cdf87314f570f6d81295b4 net/mlx5e: Change 1PPS out scheme
cf5033089b078303b102b65e3ccbbfa3ce0f4367 net/mlx5e: Add missing support for PTP_CLK_REQ_PPS request
f08c39ed0bfb503c7b3e013cd40d036ce6a0941a net/mlx5e: Schedule overflow check work to mlx5e workqueue
10a8d00707082955b177164d4b4e758ffcbd4017 net/mlx5: Remove the flag MLX5_INTERFACE_STATE_SHUTDOWN
5a8e12678c767ccf8bb16d6237569e4a707d655b net/mlx5e: Don't override user RSS upon set channels
1213ad28f9595a08e3877248bbba1a25c40225d6 net/mlx5e: Fix CQ moderation mode not set properly
2c43c5a036be7d03232a2b28f4a440a8cafe699f net/mlx5e: Enable local loopback in loopback selftest
9c2d33d44dccfb0cdac987ddc3716527ebf971e0 net/mlx5: fix spelling mistake: "alloated" -> "allocated"
706b35834820715d122a984eba2369cae7bf3abd net/mlx5e: Rearrange netdevice ops structures
07c9f1e57839c678c867b89aa9dcb2220e579b13 net/mlx5e: NIC netdev init flow cleanup
a9f7705ffd663ff057222e91a86d9bc1d697fd58 net/mlx5: Unify vport manager capability check
eeb66cdb682678bfd1f02a4547e3649b38ffea7e net/mlx5: Separate between E-Switch and MPFS
e80541ecabd57b69726232b89242e28d8123cccc net/mlx5: Add CONFIG_MLX5_ESWITCH Kconfig
97834eba7c194659a72c5bb0f8c19c7055bb69ea net/mlx5: Delay events till ib registration ends
1547f538c14581346c2eb82f8af0071ee6ec2b30 mlx5: ensure 0 is returned when vport is zero
63bfd399de55e09369e5ab344d1fb7f86ed73bab net/mlx5e: Send PAOS command on interface up/down
1d1c3436119a6fb92adb8ae72d9a1bcb7f5d0d6a net/mlx5e: IPoIB, Fix driver name retrieved by ethtool
eb234ee9d5413368c8bef5f4061cd76da0b5dd55 net/mlx5e: IPoIB, Add support for get_link_ksettings in ethtool
5405fa26c25e18ab735daddc46c8a7a78f138f70 net/mlx5: Add PCIe outbound stalls counters infrastructure
efae7f78c45ba37bdc23a95d219b59ac85bdd0a7 net/mlx5e: Add outbound PCI buffer overflow counter
733d6c5149b0fb8628bb0db618edd9bf49b496e6 net/mlx5: Avoid blank lines after/before open/close brace
12148f5ab024f1c899e545b8da0d47d3dc9b80fb net/mlx5e: Avoid using multiple blank lines
c045deef64f389f40f135c71b2ded3405c989fba net/mlx5e: Use kernel types instead of uint*_t in ethtool callbacks
8ebabaa02fe13e534ae5b0a8aa495762c25ef279 net/mlx5: Convert linear search for free index to ida
667cb65ae5ad01523505d48d6cfd92bd1d3c9785 net/mlx5: Don't store reserved part in FTEs and FGs
0d235c3fabb79bddc46527885985f0ae281a89f9 net/mlx5: Add hash table to search FTEs in a flow-group
693c6883bbc4f7649750eb9ce49d0b799d073186 net/mlx5: Add hash table for flow groups in flow table
4c03e69ab1ef31877cef63575a1869b130f9c5ce net/mlx5: Add tracepoints
7b3722fa9ef647eb1ae6a60a5d46f7c67ab09a33 net/mlx5e: Support RSS for GRE tunneled packets
b45d8b50b8264cac7b2f1245ca04a2f009038ac7 net/mlx5e: Reorganize struct mlx5e_rq
89e89f7a9fded02b81f4ee21e30c64892116cf34 net/mlx5e: Replace multiplication by stride size with a shift
b681c481f11bd2839d759f493b00008a6c690e61 net/mlx5e: Remove unnecessary wqe_sz field from RQ buffer
4b7dfc9925143eb4a55bbb97c033d6da03b29bff net/mlx5e: Early-return on empty completion queues
a1eaba4c5c29b6b5196b2237ce3a8d7d97622b2f net/mlx5e: Non-atomic indicator for ring enabled state
a071cb9f25bef32ec309ca9d123022c52175341b net/mlx5e: Non-atomic RQ state indicator for UMR WQE in progress
7cc6d77bb56de3a428ed7cde91a09fffbdbef794 net/mlx5e: Type-specific optimizations for RX post WQEs function
3b56f7b2af86033f421d0f0fd10cf5c3f74872e0 net/mlx5e: Remove unnecessary fields in ICO SQ
70871f1ec4a7e2d52683a53a5ee596790080a2c3 net/mlx5e: Don't recycle page if moved to far NUMA
7b33aaeaae1acfec01cbb0cf41fa8c07aea55609 net/mlx5e: Use kernel's mechanism to avoid missing NAPIs
d4b6c48800dda97f5a0824305d7c8175a127d414 net/mlx5e: Distribute RSS table among all RX rings
38e8a5c040d3ec99a8351c688dcdf0f549611565 net/mlx5e: IPoIB, Fix access to invalid memory address
99d3cd27f755d63fd6cf85169eaa873d90769aa5 net/mlx5: Fix FPGA capability location
ace743214ea205c7d433562c5fa24e33bdfda7ab net/mlx5e: Fix erroneous freeing of encap header buffer
bdd66ac0aeed971d1cb42b3aa0d11b0ea3842e09 net/mlx5e: Disallow TC offloading of unsupported match/action combinations
b281208911a549e391d92ee6cb680dcd3d71783b net/mlx5e: Check encap entry state when offloading tunneled flows
603e1f5bd3ca76f16688e10040545594d2e91ba4 net/mlx5e: Fix calculated checksum offloads counters
480df991b869eff02a004e8fe7707900437cfcd4 net/mlx5: Fix static checker warning on steering tracepoints code
6377ed0bbae6fa28853e1679d068a9106c8a8908 net/mlx5: Fix health work queue spin lock to IRQ safe
4ca637a20a524cd8ddbca696f12bfa92111c96e3 net/mlx5: Delay events till mlx5 interface's add complete for pci resume
3c37745ec614ff048d5dce38f976804b05d307ee net/mlx5e: Properly deal with encap flows add/del under neigh update
39a4b86f0de4ce5024985a56fc39b16194b04313 net/mlx5e/core/en_fs: fix pointer dereference after free in mlx5e_execute_l2_action
b8cce68bf1f1b773ac1a535707f968512b3c1e5f net/mlx5: Loop over temp list to release delay events
d2aa060d40fa060e963f9a356d43481e43ba3dac net/mlx5: Cancel health poll before sending panic teardown command
a8c2eb15797a0f0bf17734d365da7bdc3e263155 net/mlx5e: Stop NAPI when irq balancer changes affinity
2a8d6065e7b90ad9d5540650944d802b0f86bdfe net/mlx5e: Fix napi poll with zero budget
2e50b2619538ea0224c037f6fa746023089e0654 net/mlx5e: Set page to null in case dma mapping fails
b92af5a72ca982f0aa3df22f57a178aa5b0f4357 net/mlx5: Fix creating a new FTE when an existing but full FTE exists
75d1d187b2ac86d1af2f1fd125ec21f104ca34b0 net/mlx5: Move the entry index allocator to flow group
46719d77d5f38b8ef04aa5a5cd91263b11d741d7 net/mlx5: Export building of matched flow groups list
19f100fef4ad46f21cfdfb1eeeb63fc38c2e57f1 net/mlx5: Refactor FTE and FG creation code
c7784b1c8ab3f44dc2e643a8feb77584792c9108 net/mlx5: Replace fs_node mutex with reader/writer semaphore
bd71b08ec2ee4504bcc3b37a9283ce15e93dfacd net/mlx5: Support multiple updates of steering rules in parallel
f5c2ff179f51101893e42e78683b23a487929d6c net/mlx5: Allocate FTE object without lock
a369d4ac4dff92129ea0dfa3d66f45a830e29098 net/mlx5: Add FGs and FTEs memory pool
ae904beaea48d369205c81dbffecc23afcec46de net/mlx5: File renaming towards ptp core implementation
7c39afb394c79e72c3795b4a42d55155b34ee073 net/mlx5: PTP code migration to driver core section
c8249eda7fac00b55eca17ab05207be291d91a3f net/mlx5e: IPoIB, Move underlay QP init/uninit to separate functions
dae37456c8ac3afe8d5f306717f2b75ed5ca38d9 net/mlx5: Support for attaching multiple underlay QPs to root flow table
da34f1a85b78c2220dac1ce4f4c4595dd0cab5a9 net/mlx5e: IPoIB, Support for setting PKEY index to underlay QP
7e7f4780c3402bd181eea82ca6395013623e4fbf net/mlx5e: IPoIB, Use hash-table to map between QPN to child netdev
4c6c615e3f308aee26277abebc7d4ffcd9a6abe2 net/mlx5e: IPoIB, Add PKEY child interface nic profile
af98cebcb3e66d349173c33c0aaef352d108a081 net/mlx5e: IPoIB, Add PKEY child interface ndos
6a910233c1eb19673dd0f37f1d72d7cdc419e176 net/mlx5e: IPoIB, Add PKEY child interface ethtool ops
b5ae577741bec22b584fa704076ccd8221cad19d net/mlx5e: IPoIB, Modify rdma netdev allocate and free to support PKEY
abd80dcbc400fac878202136645e9acf0e0bfbd9 KVM: PPC: Book3S HV: Check for kmalloc errors in ioctl
3073774e638ef18d222465fe92bfc8fccb90d288 KVM: PPC: Book3S HV: Drop prepare_done from struct kvm_resize_hpt
4ed11aeefda439c76ddae3ceebcfa4fad111f149 KVM: PPC: Book3S HV: Fix use after free in case of multiple resize requests
b95a2d831b815189618d18e3e89bcfa5072351a1 nfp: add whitelist of supported flow dissector
c3d64ad4fea66d07e878b248b803ccd12c45e18c nfp: fix ethtool stats gather retry
5f0ca2fb71e28df146f590eebfe32b41171b737f nfp: handle page allocation failures
d309ae5c6a00648198d1932e6db483d612c2e260 nfp: refuse offloading filters that redirects to upper devices
6c3ab204f4ca00374a374bc0fc9a275b64d1bcbb nfp: fix flower offload metadata flag usage
743ba5b47f7961fb29f2e06bb694fb4f068ac58f nfp: inherit the max_mtu from the PF netdev
dcbda2820ff91a692338fed2c99bb9b1af37a05a mlxsw: spectrum_router: Configure TIGCR on init
d86fd113ebbb37726ef7c7cc6fd6d5ce377455d6 mlxsw: spectrum: Fix error return code in mlxsw_sp_port_create()
5c50538752af7968f53924b22dede8ed4ce4cb3b s390/disassembler: add missing end marker for e7 table
b4562ca7925a3bedada87a3dd072dd5bad043288 hv_sock: add locking in the open/close/release code paths
c9d3fe9da094a9a7a3d3cd365b334b822e05f5e8 VSOCK: fix outdated sk_state value in hvs_release()
cf61e2a1487d833e4748dead4096584de70bf742 memremap: don't modify flags
efebc711180f7fed701f6e23f23814fcfda7fbfc device-dax, tools/testing/nvdimm: enable device-dax with mock resources
762026203c0b87b1088342b664e67ca7c45fb7c4 device-dax: improve fault handler debug output
5f0694b300b9fb8409272c550418c22e0e57314a device-dax: rename 'dax_dev' to 'dev_dax'
7b6be8444e0f0dd675b54d059793423d3c9b4c03 dax: refactor dax-fs into a generic provider of 'struct dax_device' instances
fbabd829fe76a72a6444f64361cf8b2a9848639d acpi, nfit: fix module unload vs workqueue shutdown race
72058005411ffddcae6c06f7b691d635489132af dax: add a facility to lookup a dax device by 'host' device name
6568b08b77816cda2a95919c7494108d983d5941 dax: introduce dax_operations
c1d6e828a35df524df2af277eedd1471d05e4f4c pmem: add dax_operations support
1647b9b959c7b1b3c20e8efa2c40529e7dce756a brd: add dax_operations support
1ef97fe4f8abd3317d5c3c860f990e02c2633959 brd: fix uninitialized use of brd->dax_dev
7a2765f6e82063f348ebce78c28eceff741689d4 dcssblk: add dax_operations support
b0686260fecaa924d8eff2ace94bee70506bc308 dax: introduce dax_direct_access()
f26c5719b2d7b00de69eb83eb1c1c831759fdc9b dm: add dax_device and dax_operations support
817bf40265459578abc36c6bd53e27775b5c7ec4 dm: teach dm-targets to use a dax_device + dax_operations
fa5d932c323e8e0d9b24b3517997d15b36d1607d ext2, ext4, xfs: retrieve dax_device for iomap operations
cccbce67158290537cc671cbd4c1564876485a65 filesystem-dax: convert to dax_direct_access()
d4b29fd78ea6fc2be219be3af1a992149b4ff0f6 block: remove block_device_operations ->direct_access()
6abccd1bfee49e491095772fd5aa9e96d915ae52 x86, dax, pmem: remove indirection around memcpy_from_pmem()
565851c972b50612f3a4542e26879ffb3e906fc2 device-dax: fix sysfs attribute deadlock
ef51042472f55b325fd7f2b26a2e29fd89757234 block, dax: move "select DAX" from BLOCK to FS_DAX
cf1e22891bee39f50e058bee0827086fd75a8717 device-dax: kill NR_DEV_DAX
3ae3d67ba705c754a3c91ac009f9ce73a0e7286a libnvdimm: add an atomic vs process context flag to rw_bytes
b177fe85dd27de1ee4c29f59c4e82b3ea3b78784 libnvdimm, btt: ensure that initializing metadata clears poison
e84b83b9ee2187817cf895471675f1ccdf64cd53 filesystem-dax: fix broken __dax_zero_page_range() conversion
9d109081c261d87fc84e0cce245796796ae4c460 dax: fix false CONFIG_BLOCK dependency
2d1f406139ec20320bf38bcd2461aa8e358084b5 x86/MCE: Export memory_error()
b9d39d17e4819ca2e69ad1f14acaad12240a1de5 device-dax: fix 'dax' device filesystem inode destruction crash
bbb3be170ac2891526ad07b18af7db226879a8e7 device-dax: fix sysfs duplicate warnings
f9727a17db9bab71ddae91f74f11a8a2f9a0ece6 uuid: rename uuid types
df33767d9fe0ca93c606cc9042df05e5045c8158 uuid: hoist helpers uuid_equal() and uuid_copy() from xfs
b10bf0e281040f152da93fede1d43ec57caa7cee uuid: don't export guid_index and uuid_index
ef40dda5bbc310f6517082c0ff002913104358cd uuid: hoist uuid_is_null() helper from libnvdimm
41c8bdb3ab10c1fefcac61d081e2fd9aaf8694b8 acpi, nfit: Switch to use new generic UUID API
63709fd4296221aa4ebd06230bce3eed70ddd927 uuid: Take const on input of uuid_is_null() and guid_is_null()
807900395efebf9276178eb6157959f2e81fe013 acpi/nfit: Issue Start ARS to retrieve existing records
43fe51e11c194a6576634585f81ba33e104194a5 device-dax: fix 'passing zero to ERR_PTR()' warning
0dd69643061d78f3f9047c2382d8d77cca1ac943 libnvdimm: Stop using HPAGE_SIZE
14e494542636b7a685c5bf27e695e3bb9ec3fe7d libnvdimm, btt: BTT updates for UEFI 2.7 format
c13c43d54f2c6a3be1c675766778ac1ad8dfbfcc libnvdimm, btt: fix btt_rw_page not returning errors
7e5a21dfe5524a85705d3bc7b540c849cc13e9a1 libnvdimm: fix the clear-error check in nsio_rw_bytes
1db1f3cea1d8886c686832d4618b346ae16c03c8 libnvdimm, btt: fix a missed NVDIMM_IO_ATOMIC case in the write path
1398199d849047c59acef0c04e550b47bb9b4be6 libnvdimm, btt: ensure that flags were also unchanged during a map_read
d9b83c7569536e3255992491737d9f895640ea18 libnvdimm, btt: rework error clearing
3c1cebff23cdca01c421411e953a9e239f2b9ef9 dax, pmem: introduce an optional 'flush' dax_operation
9a60c3ef577beb0376704808949f2c1f8fb0672c dax: convert to bitmask for flags
86652d2eb347080a991968c9d68708dc010ac56c libnvdimm, btt: clean up warning and error messages
ed36b4dba54a421ce5551638f6a9790b2c2116b1 libnvdimm, btt: check memory allocation failure
04c3c982fcc0151ed3574d7ae4f1e62278054d72 libnvdimm, btt: fix format string warnings
33a56086712561b8b9cdc881e0317f4c36861f72 libnvdimm, namespace: fix btt claim class crash
ab1b597ee0e4208a1db227bb7b2c9512c8234b48 mm, devm_memremap_pages: use multi-order radix for ZONE_DEVICE lookups
413a4317aca7d6367d57a5971b0c461f03851207 VSOCK: add sock_diag interface
7aa0045dadb6ef37485ea9f2a7d28278ca588b51 net_sched: introduce a workqueue for RCU callbacks of tc filter
e910af676b565ecc16bcd6c896ecb68157396ecc net_sched: use tcf_queue_work() in bpf filter
0552c8afa077889b4704ef5ee88b03063ad45023 net_sched: use tcf_queue_work() in flower filter
2d132eba1d972ea6c0e47286e4c821b4a3c5b84d net_sched: add rtnl assertion to tcf_exts_destroy()
822e86d997e4d8f942818ea6ac1711f59a66ebef net_sched: remove tcf_block_put_deferred()
a159d3c4b8291998c018f0dbddd4678315264a1e net_sched: acquire RTNL in tc_action_net_exit()
e4b95c41df36befcfd117210900cd790bc2cd048 net_sched: introduce tcf_exts_get_net() and tcf_exts_put_net()
aae2c35ec89252639a97769fa72dbbf8f1cc3107 cls_bpf: use tcf_exts_get_net() before call_rcu()
ed1481681414e4d4264ad46864d5c1da5ff6ccb1 cls_cgroup: use tcf_exts_get_net() before call_rcu()
0dadc117ac8bc78d8144e862ac8ad23f342f9ea8 cls_flower: use tcf_exts_get_net() before call_rcu()
57767e785321a427b8cdd282db2b8b33cd218ffa cls_matchall: use tcf_exts_get_net() before call_rcu()
f2b751053ee9314e82c178f6ca0fee7e160fac95 cls_tcindex: use tcf_exts_get_net() before call_rcu()
d7aa04a5e82b4f254d306926c81eae8df69e5200 net: sched: fix crash when deleting secondary chains
a60b3f515d30d0fe8537c64671926879a3548103 net: sched: crash on blocks with goto chain action
8bff3685a4bbf175a96bc6a528f13455d8d38244 vxlan: fix the issue that neigh proxy blocks all icmpv6 packets
fe4007999599c02598c17b643e8de43e487d48e8 ipv6: fib: Provide offload indication using nexthop flags
90007bca61627bb2fbd63bc3da0277abe4a43550 drm/i915/cnl: Introduce initial Cannonlake Workarounds.
e6d1a4f6b267933f81a9299c80b56cf1a36ca79e drm/i915/cnl: Add WaDisableReplayBufferBankArbitrationOptimization
d1d247543c5626eac1064aafd0a35c231828c211 drm/i915/cnl: WaDisableEnhancedSBEVertexCaching
1a25db65d39cc6c1bdc2bdb999611311f8fec3da drm/i915/cnl: Apply large line width optimization
e0b8acf35d3c4de3d9b4bde18169e0562d748c89 drm/i915/cnl: simplify cnl_procmon_values handling
ade5ee7ea55daab37a300374c73aceb3092ccdd6 drm/i915/cnl: extract cnl_set_procmon_ref_values
eb371933cf4d3495d0899880b2e0e252ce9db517 drm/i915/cfl: Coffee Lake works on Kaby Lake PCH.
2cbecff4122cedff329e3efa32c7f2266125c4a1 drm/i915/cnl: WaPushConstantDereferenceHoldDisable
acfb5554c769ad7e09b9e4e42b572cc297a728e9 drm/i915/cnl: WaForceContextSaveRestoreNonCoherent
dfbd4508326218d63e75715217a495adc0b4a454 drm/i915/cnl: don't hardcode DPCLKA_CFGCR0_DDI_CLK_SEL_SHIFT
91200c09d38bbc959671b91f5801d1016b409969 drm/i915: Stop using long platform names on clock gating functions.
392572feb01c03c9db2f73993bdbff2b5ed45c38 drm/i915/cnl: WA FtrEnableFastAnisoL1BankingFix
86ebb015fa744dd1e265c9b45ade870ac859a4d5 drm/i915/cnl: WaDisableI2mCycleOnWRPort
385db982b277a1eb5998b6316a500a2d6d9592b1 drm/i915/cnl: Avoid ioremap_wc on Cannonlake as well.
d509af6c85bb711f6299043cf43001ab1cdffd62 drm/i915: decouple gen9 and gen10 dp signal levels.
2f7460a75aa44a5cfbc9fcfa2a33b6929ecf2263 drm/i915: Align vswing sequences with old ddi buffer registers.
381f957044d0618e52fe47b0af4de54cdccad893 drm/i915: Enable voltage swing before enabling DDI_BUF_CTL.
cc9cabfdec38d09e6f6a7f750b67043fbfa2eb31 drm/i915/cnl: Move voltage check into ddi buf trans functions.
cf3e0fb48cdb62d6b30ec88eddcbfa82eb3e976a drm/i915/cnl: Move ddi buf trans related functions up.
bf50355645790a385b9ff04f33dea6b316c0dc31 drm/i915/cnl: Fix DDI hdmi level selection.
5fcf34b1c58ea3e341a24c18759b000c38529ed5 drm/i915/cnl: Fix DP max voltage
0a46ddd57c9ef9fb5376d4bff65d07e0aea30f35 drm/i915/cnp: Wa 1181: Fix Backlight issue
8f067837c4b713ce2e69be95af7b2a5eb3bd7de8 drm/i915: Display WA #1133 WaFbcSkipSegments:cnl, glk
aa9f4c4f19131e05323d0d5a068ccb46058e8257 drm/i915/cnl: WaThrottleEUPerfToAvoidTDBackPressure:cnl(pre-prod)
d86ba628ce4bfd83c987e4dab9d917cbb3622854 drm/i915/cnl: Extend WM workaround with IPC for CNL
442aa277c066cec6cfe8508b3edbdda022b10568 drm/i915/cnl: Change the macro name to DPLL_CFGCR0_DCO_FRACTION_SHIFT
4cc6feb715c223d59c8cad0dc71bce1a574a2c67 drm/i915/cnp: Don't touch other PCH clock gating bits.
fb5f4e96fdf9cb7ec5e6a590e1c3fdc3b6fd1e01 drm/i915: Shrink cnl_ddi_buf_trans
7fd0b1a2593647aba4538196dd80314fd134877b drm/i915/cnl: Add Gen10 LRC size
83482ca3b4fe7312bf3d1f25c7a4e9ff66585eab drm/i915: avoid potential uninitialized variable use
3cf1934abe88103fcbeff88bbaee8a094502e6cb drm/i915/cnl: Do not add an extra page for precaution in the Gen10 LRC size
0e005888b833ba65dcf2c7aa12958dad6b2b8618 drm/i915: avoid division by zero on cnl_calc_wrpll_link
378e2d5b504fe0231c557751e58b80fcf717cc20 drm/ttm: fix ttm_bo_cleanup_refs_or_queue once more
39e16ba16c147e662bf9fbcee9a99d70d420382f dma-buf: make reservation_object_copy_fences rcu save
2642cf110d08a403f585a051e4cbf45a90b3adea drm/amdgpu: reserve root PD while releasing it
e1fc12c5d9ad06a2a74e97a91f1b0c5f4c723b50 drm/ttm: Always and only destroy bo->ttm_resv in ttm_bo_release_list
0b28cb4bcb17dcb5fe0763fc3e1a94398b8f6cf6 HID: intel-ish-hid: ISH HID client driver
56ff6be608659ac06d4e3cc5827476efa29d610f iio: hid-sensors: Add API to power on/off
2b89635e9a9e7cae5d137384842c3da7726ed197 iio: hid_sensor_hub: Common PM functions
9030924510a9e7d4b7d218749533840075879f2f iio: hid-sensors: Add api to get poll value
6adc83fca74ab73abcbd3b394cf3a8fd3701db99 HID: hid-sensor-hub: Enhance get feature report API
3950e03389cfc8ee9d7131074d999b5fb6bbc2bf HID: hid-sensor-hub: Enhance feature report set API
1e25aa9641e8f3fa39cd5e46b4afcafd7f12a44b hid-sensor: Fix suspend/resume delay
d23057e0cadc465911968a4d3f8b0b556f545b6e iio: common: hid-sensors: use tab for indention
7f6cf7414538181f4091b06e905d19a23a451108 iio: hid-sensors: use asynchronous resume
2e1f44d8a7724e889f1a4f211aad13320cb80f1f iio: hid-sensors: avoid unused function warning
3bec247474469f769af41e8c80d3a100dd97dd76 iio: hid-sensor-trigger: Change get poll value function order to avoid sensor properties losing after resume from S3
3e729974d67608be773167677478781bc874d369 iio: hid-sensors: Set default unit of measure for report interval
5d9854eaea776441b38a9a45b4e6879524c4f48c iio: hid-sensor: Store restore poll and hysteresis on S3
c94f5806cd0be4c7d4dabb89d1ae1088ed4332e7 iio: hid-sensor: Fix unbalanced pm_runtime_enable error
138bc7969c24c6cbba28e919c2376ad10a46fc60 iio: hid-sensor-hub: Implement batch mode
930fafd9afb435129b49cc91e5a1267d6ddd2b66 HID: hid-sensor-hub: Add ISH quirk
8fb861fa0718c414f42588eb16eb81f1893c3522 MAINTAINERS: Add Intel ISH
5299a92a3b98b91b7230662b8b9b6c64bcf8cae6 HID: intel-ish-hid: format 32-bit integers with %X
318fc2a867bc5bac688cb88f111eb75792675dc2 HID: intel_ish-hid: fix format string for size_t
6497709b5d1bccce7de1df678d5f147d614551d1 md: factor out set_in_sync()
55cc39f345256af241deb6152ff5c06bedd10f11 md: close a race with setting mddev->in_sync
497280509f32340d90feac030bce18006a3e3605 md/raid5: use md_write_start to count stripes, not bios
4ad23a976413aa57fe5ba7a25953dc35ccca5b71 MD: use per-cpu counter for writes_pending
a415c0f10627913793709ddb75add09d2ea334dc md: initialise ->writes_pending in personality modules.
cc27b0c78c79680d128dbac79de0d40556d041bb md: fix deadlock between mddev_suspend() and md_write_start()
393debc23c7820211d1c8253dd6a8408a7628fe7 md: separate request handling
79bf31a3b2a7ca467cfec8ff97d359a77065d01f md: fix a race condition for flush request handling
4d5324f760aacaefeb721b172aa14bf66045c332 md: always hold reconfig_mutex when calling mddev_suspend()
52a0d49de3d592a3118e13f35985e3d99eaf43df md: don't call bitmap_create() while array is quiesced.
b3143b9a38d5039bcd1f2d1c94039651bfba8043 md: move suspend_hi/lo handling into core md code
9e1cc0a54556a6c63dc0cfb7cd7d60d43337bba6 md: use mddev_suspend/resume instead of ->quiesce()
35bfc52187f6df8779d0f1cebdb52b7f797baf4e md: allow metadata update while suspending.
81fe48e9aa00bdd509bd3c37a76d1132da6b9f09 md: fix test in md_write_start()
4596e752db02d47038cd7c965419789ab15d1985 nvme-fc: remove double put reference if admin connect fails
b64581adba467c916590c3922f64ec6c2b59a2c3 IB/hfi1: Mask upper 16Bits of Extended LID prior to rvt_cq_entry
f8195f3b14a046ae33d9c369ffb59b4192f29e08 IB/hfi1: Eliminate allocation while atomic
d0a2f454713a42447ee4007582c0e43c47bcf230 IB/hfi1: Mask out A bit from psn trace
4988be5813ff2afdc0d8bfa315ef34a577d3efbf IB/hfi1: Do not warn on lid conversions for OPA
19b57c6c449970763bee089466119e09a17199b1 IB/core: Convert OPA AH to IB for Extended LIDs only
6588e412fe872ed81f3fb8d9b4561a66ecb763d0 IB/core: Do not warn on lid conversions for OPA
a917374e8a20cdfbaaaaaa2b01331dc063d38848 IB/core: Use __be32 for LIDs in opa_is_extended_lid
4061f3a4da4574b8c9f11a82c767aaaed3ef2aa9 IB/hfi1: Race condition between user notification and driver state
641f348bbdf1dcd30870bef8b0bd663aaf24f2ed IB/hfi1: Allow MgmtAllowed on B2B setups
8935780b9f7bbad0f2eb5dd43f61ba7b509a1575 IB/hfi1: Initialize bth1 in 16B rc ack builder
5a3dc32372439eb9a0d6027c54cbfff64803fce5 IB/cm: Fix memory corruption in handling CM request
89548bcafec7ecfeea58c553f0834b5d575a66eb IB/core: Avoid crash on pkey enforcement failed in received MADs
2d57b5efda511886daa984d5bb3da29759bb157c scsi: qla2xxx: Query FC4 type during RSCN processing
c38d1baff87ffaa0c5966b57c5cfa906b58ce9e6 scsi: qla2xxx: Use ql2xnvmeenable to enable Q-Pair for FC-NVMe
c0c462c8a061658ce5ae53c423b2a14bb280c2ab scsi: qla2xxx: Allow MBC_GET_PORT_DATABASE to query and save the port states
1f4c7c380b2f0cbd060b8582a1723b3a98f354d2 scsi: qla2xxx: Add LR distance support from nvram bit
cf19c45dba19757e5016cb1acc5ef1529005f8c3 scsi: qla2xxx: Add command completion for error path
39a550d2d9eaee8b618084e6011441eac6a2a3b7 qla2xxx: remove use of FC-specific error codes
49b3d5f67c1e5d661b64b77ec37bd9f57cbf720d scsi: qla2xxx: Fix remoteport disconnect for FC-NVMe
5621b0dd74532c09965264c14958de3f85b498a6 scsi: qla2xxx: Simpify unregistration of FC-NVMe local/remote ports
deeae7a69f755c53a68a907f336c5cee54932025 scsi: qla2xxx: Added change to enable ZIO for FC-NVMe devices
0f7e51f6b32a015552f32ce34dac1c452d96293a scsi: qla2xxx: Move function prototype to correct header
c345c6ca13825d1a15de5399226802433dd30f8c qla2xxx: Fix NVMe entry_type for iocb packet on BE system
0bf0efa1f1a5230794618e633e54d68e088dfcf5 scsi: qla2xxx: fix a bunch of typos and spelling mistakes
d3bae931172eb94af7d21b05f6e9bf79cccf8fa0 scsi: qla2xxx: Send FC4 type NVMe to the management server
e84067d7430107a982858f11c5239542b56a8449 scsi: qla2xxx: Add FC-NVMe F/W initialization and transport registration
a5d42f4cffa58d0e80d92dd11c810a22f14d41b3 scsi: qla2xxx: Add FC-NVMe port discovery and PRLI handling
ba57ea64cb1820deb37637de0fdb107f0dc90089 allow O_TMPFILE to work with O_WRONLY
31c3a7069593b072bd57192b63b62f9a7e994e9a Revert "ovl: get_write_access() in truncate"
ca4c8a3a800039c2681d609c5b7491c1bd17c0a7 ovl: treat special files like a regular fs
99f5d08e3640c8319f353e6c883da150c48067f6 ovl: don't check sticky
370e55ace59c2d3ed8f0ca933155030b9652e04f ovl: rename: simplify handling of lower/merged directory
bbb1e54dd53cf83863e856dd5518ce5e58791115 ovl: split super.c
6b2d5fe46fa8f4fc1c5262c73930b9a2a94db2e3 ovl: check namelen
e28edc46b8e29d2a4c10263cd7769e657582fff4 ovl: consolidate lookup for underlying layers
02b69b284cd7815239fabfe895bfef9a9eb5a3ce ovl: lookup redirects
a6c6065511411c57167a6cdae0c33263fb662b51 ovl: redirect on rename-dir
d15951198eaccb92c6b49e62cb72f5ff62da2236 ovl: check for emptiness of redirect dir
688ea0e5a0e2278e2fcd0014324ab1ba68e70ad7 ovl: allow redirect_dir to default to "on"
3ea22a71b65b6743a53e286ff4991a06b9d2597c ovl: allow setting max size of redirect
5cf5b477f0ca33f56a30c7ec00e61a6204da2efb ovl: opaque cleanup
97c684cc911060ba7f97c0925eaf842f159a39e8 ovl: create directories inside merged parent opaque
32a3d848eb91a298334991f1891e12e0362f91db ovl: clean up kstat usage
c3c8699664800a68600f1988302173067eaeaffa ovl: fix reStructuredText syntax errors in documentation
4c7d0c9cb713a28b133b265d595de2a93ee09712 ovl: fix possible use after free on redirect dir lookup
e7f52429b4a5b2e3224948d1737eb264c8f7e15f ovl: check if upperdir fs supports O_TMPFILE
42f269b925405d9dd45014823e5057786d6ca452 ovl: rearrange code in ovl_copy_up_locked()
d8514d8edb5b045cf7f708e14f888ce760d60f0b ovl: copy up regular file using O_TMPFILE
39d3d60a54df05a1a32fa71159d7a26a530dee6c ovl: introduce copy up waitqueue
01ad3eb8a07385bc8849f0ee7c800e7c8bd7287e ovl: concurrent copy up of regular files
b1eaa950f7e905aaffca0454aa05101ce4f6446a ovl: lockdep annotate of nested stacked overlayfs inode lock
33006cdf9c038dca9b3d4c148a509de851a66ea9 ovl: Use designated initializers
4a99f3c83dc493c8ea84693d78cd792839c8aa64 ovl: do not set overlay.opaque on non-dir create
7bcd74b98d7bac3e5149894caaf72de6989af7f0 ovl: check if all layers are on the same fs
3a1e819b4e80216e00ef6a4dfe67fa142450c5e1 ovl: store file handle of lower inode on copy up
c22205d0584bc65cfc9a65db0e15a9b69f5cdf64 ovl: use an auxiliary var for overlay root entry
a9d019573e881472aa62f093fa599ad68cd0fc1e ovl: lookup non-dir copy-up-origin by file handle
595485033db2c24178257698254fd4182fdb4123 ovl: set the ORIGIN type flag
b7a807dc2010334e62e0afd89d6f7a8913eb14ff ovl: persistent inode number for directories
72b608f08528458334218a809d66ea94d924c378 ovl: constant st_ino/st_dev across copy up
5b712091a3a3904b0ae8311e18e6b540a070d464 ovl: merge getattr for dir and nondir
8137ae26d25303e7b5cfb418fd28b976461e5b6e ovl: fix creds leak in copy up error path
82b749b2c65e9d108c1c5598dc0a5f436b525f42 ovl: check on mount time if upper fs supports setting xattr
6266d465bde044a105f6c2d4e244680f951a2d70 ovl: don't fail copy-up if upper doesn't support xattr
21a228781104ae6fed7e720137ab024575071feb ovl: handle rename when upper doesn't support xattr
3d27573ce32b47ba54e6680c77c26a700d67cc16 ovl: remove unused arg from ovl_lookup_temp()
ee1d6d37b6b884383b501089be93ce94f2153028 ovl: mark upper dir with type origin entries "impure"
f3a1568582cc207663a4d5e37da790334372855b ovl: mark upper merge dir with type origin entries "impure"
e85f82ff9b8ef503923a3be8ca6b5fd1908a7f3f ovl: copy-up: don't unlock between lookup and link
fbaf94ee3cd5cfa85fe2d4d04be968820cb00556 ovl: don't set origin on broken lower hardlink
13cf199d0088b77ab08a9594df2e73e775317ed2 ovl: allocate an ovl_inode struct
e6d2ebddbc5205635a021a910f2f0e93bc2aa534 ovl: simplify getting inode
25b7713afe50963e70f98c1c964f60baf1e7e373 ovl: use i_private only as a key
9020df37207867272e590a416c2fb3da0e5383c6 ovl: compare inodes
09d8b586731bf589655c2ac971532c14cf272b63 ovl: move __upperdentry to ovl_inode
cf31c46347e8e54cb53d66255ae3eea045b0a60c ovl: move redirect to ovl_inode
13c72075ac9f5a5cf3f61c85adaafffe48a6f797 ovl: move impure to ovl_inode
a015dafcaf5b0316654a39bc598a76804595af90 ovl: use ovl_inode mutex to synchronize concurrent copy up
04a01ac7ed3c5cd718713ef6341249a143c96b10 ovl: move cache and version to ovl_inode
ad0af7104dadccd55cd2b390271677fac142650f vfs: introduce inode 'inuse' lock
2cac0c00a6cdcc9121de150ed531f652396d1544 ovl: get exclusive ownership on upper/work dirs
f7d3daca7c79d9b77e61f50f718b257b71d07498 ovl: relax same fs constrain for ovl_check_origin()
6b8aa129dcbe0e9825109b35c4b967f984e8fb13 ovl: generalize ovl_create_workdir()
02bcd1577400b0b2eab806ccb9f72d6b5ec7bcca ovl: introduce the inodes index dir feature
8b88a2e6403638b56556ed5b1c60d9318eefea9c ovl: verify upper root dir matches lower root dir
54fb347e836faadaed2a5617fb4dd4a4597d0490 ovl: verify index dir matches upper dir
359f392ca53e9122cafa5fc103545558b0b85d54 ovl: lookup index entry for copy up origin
415543d5c64fe490b4b6a7e21c3ea2f1310c442f ovl: cleanup bad and stale index entries on mount
b9ac5c274b8c9d642567022c0e319bca4db31956 ovl: hash overlay non-dir inodes by copy up origin
15932c415b3ed20bd1c1e05d071b4ad498656280 ovl: defer upper dir lock to tempfile link
7d90b853f932874f0b348858fddbd41f022179ee ovl: extract helper to get temp file in copy up
02209d10709c18d552c2494df74117db09a18e05 ovl: factor out ovl_copy_up_inode() helper
7ab8b1763fd84ff4e7263ed7f5c728e4cb3f364a ovl: base tmpfile in workdir too
23f0ab13eaa69b4a351184cbec448be2aad3a3a9 ovl: use struct copy_up_ctx as function argument
55acc6618259c8ff0a400a131f0f4b613e96010a ovl: add flag for upper in ovl_entry
a6fb235a448b8eb731fd6d4de2c5c6269677cf5b ovl: rearrange copy up
fd210b7d67ee3768bf1ad3e07d55797d4b45fcc1 ovl: move copy up lock out
59be09712ab98a3060f13e31343c7abb9bc4583d ovl: implement index dir copy up
5f8415d6b87ecb4ebf1bbd02c538694ebb7fb57c ovl: persistent overlay inode nlink for indexed inodes
caf70cb2ba5dff85ea90f494a30075af92df13b0 ovl: cleanup orphan index entries
f4439de118283159ff165e52036134a278ebf990 ovl: mark parent impure and restore timestamp on ovl_link_up()
ea3dad18dc5f778cfd931311a91a9315aa0065a3 ovl: mark parent impure on ovl_link()
961af647fc9ebcdb3e98c8f11b399ebe01169fb1 ovl: fix origin verification of index dir
a59f97ff66f0058702ed6f6e26dd8fa3c34caf62 ovl: remove unneeded check for IS_ERR()
1d88f183734c0d916428911df006e645a6162cab ovl: fix xattr get and set with selinux
61b674710cd9afa2a8b17bdd1ac80670c9b79f1d ovl: do not cleanup directory and whiteout index entries
0e082555cec9510d276965fe391f709acb32c0f4 ovl: check for bad and whiteout index on lookup
939ae4efd51c627da270af74ef069db5124cb5b0 ovl: fix false positive ESTALE on lookup
e0082a0f04c432cb6d7128ef60d8e425e45ce025 ovl: fix error value printed in ovl_lookup_index()
9f4ec904dbd4eb1a2db10d5e7dc16eae386fe64d ovl: fix dput() of ERR_PTR in ovl_cleanup_index()
dc7ab6773e8171e07f16fd0df0c5eea28c899503 ovl: fix dentry leak in ovl_indexdir_cleanup()
5820dc0888d302ac05f8b91ffdf7e4e53b4fbf53 ovl: fix missing unlock_rename() in ovl_do_copy_up()
85fdee1eef1a9e48ad5716916677e0c5fbc781e3 ovl: fix regression caused by exclusive upper/work dir protection
b3885bd6edb41b91a0e3976469f72ae31bfb8d95 ovl: add NULL check in ovl_alloc_inode
0ce5cdc9d79277e55c3d80bf7d2b1adea2752078 ovl: Return -ENOMEM if an allocation fails ovl_lookup()
6eaf011144af10cad34c0d46f82e50d382c8e926 ovl: fix EIO from lookup of non-indexed upper
7937a56fdf0b064c2ffa33025210f725a4ebc822 ovl: handle ENOENT on index lookup
fa0096e3bad69ed6f34843fd7ae1c45ca987012a ovl: do not cleanup unsupported index entries
4eae06de482bf370144704e31f65cd6dfbcebe94 ovl: lockdep annotate of nested OVL_I(inode)->lock
5455f92b54e516995a9ca45bbf790d3629c27a93 ovl: Put upperdentry if ovl_check_origin() fails
438c84c2f0c794f75ab55ce65c505b01bfce4480 ovl: don't follow redirects if redirect_dir=off
803d5b6ebfb06a0d2ee3699fea4f1c7593958566 cxgb4: add new T5 pci device id's
fe25cc347959b1efd18ee150165416aa6ed0ecdd tcmu: Recalculate the tcmu_cmd size to save cmd area memories
b3743c71b7c33a126d6d8942bb268775987400ec tcmu: Fix possbile memory leak / OOPs when recalculating cmd base size
9103575ae34e9d60d40940bebf47fc9e9652067a tcmu: make ring buffer timer configurable
c22adc0b0cbe3768619eedc240bf58d88a1d6ed7 tcmu: fix crash when removing the tcmu device
a271eac46a9a2457f4e8c757f9b7fc92a445cf48 target: return SAM_STAT_TASK_SET_FULL for TCM_OUT_OF_RESOURCES
80eb876138a1adc7d30831ce275ea744c050d97e tcmu: allow max block and global max blocks to be settable
801fc54d5d943e8a6a6bc26bc94fb9b90938ff68 tcmu: Make dev_size configurable via userspace
2d76443e02f260d7a5bd0ede1851ae5534f0c68d tcmu: reconfigure netlink attr changes
454be724f6f99cc7e7bbf15067128be9868186c6 block: drain queue before waiting for q_usage_counter becoming zero
7e70aa789d4a0c89dbfbd2c8a974a4df717475ec scsi: core: run queue if SCSI device queue isn't ready and queue is idle
5da4e04ae480aac5274dd020af3dfa21935028f7 misc: rtsx: Add support for RTS5260
51bd7125f740a1bc9e79cd117d7d50f1dc67a446 misc: rtsx: Fix symbol clashes
f9f082a9b948e02742511f626080eb4d84886512 qede: Move all UDP port notifiers to single function
327a2b750c486c8e8f390dcff888881ad54d2f23 qede: Configure UDP ports in local context.
d79e19f564bfbd8017e75878fb2a9fce0af764cf nfp: debug dump ethtool ops
8a925303b695f6319b45a412b6945318e3e8b0da nfp: load debug dump spec
f7852b8e9ee17a286d8462d77d9b6c7bdb97f947 nfp: dump prolog
f3682c78667d1ac6547447492a540ca2e2cc4ea4 nfp: dumpspec TLV traversal
e1e798e3fd93dfbabedea9a5d6bc547ec2892b36 nfp: dump rtsyms
24ff8455aff061c83ebad3471991937a62eece81 nfp: dump all hwinfo
10144de3830a47f65d87a67f3bb5844cec97aa69 nfp: dump single hwinfo field by key
e9364d30d5cb1e7fa95a0d26730d57b87c2d1eaa nfp: dump firmware name
0e6c4955e149dc4733e0265a99c3040bf4f4a164 nfp: dump CPP, XPB and direct ME CSRs
60b84a9b3889a55503c6ffac56d69ecc060ad3b5 nfp: dump indirect ME CSRs
2dff1962242111cc4517119f690587b87573ffc5 nfp: process MTU updates from firmware flower app
9ce4fa548313f585c637aa846f7fc904b676bf43 nfp: flower: restore RTNL locking around representor updates
da762863edd9e3f9b391620b845f2a6ffdc6dd7d nfp: fix absolute rtsym handling in debug dump
28b2d7d04b00150e2f06fa4ba9a99b9d2eb379bf nfp: fix XPB register reads in debug dump
088b8749da1e35b0dd9cb0e6500ca1c94c9bf547 liquidio: allow override of firmware present in flash
b36e48209157fdd98a5589a3dd60ff3fbf51e16d liquidio: verify firmware version when auto-loaded from flash.
429cbf6bde1adff108171ad4b2387e62f851d609 liquidio: update module parameter fw_type to reflect firmware type loaded
b14bec89042ee6f9a43b437f8133cfcbea140f20 liquidio: remove unnecessary NULL check before kfree in delete_glists
48acc9e847ef335f7d3b62926825397c6bf4eab2 liquidio: mark expected switch fall-through in octeon_destroy_resources
e7ad97938eaccb5a9ff4534167b1abafb507935c liquidio: fix timespec64_to_ns typo
907aaa6babe1a606f3da4eb76e76e3ce6286f97f liquidio: pass date and time info to NIC firmware
392209fa833287a1c5532ffbb098bba584a69dbc liquidio: deprecate 1-bit flag indicating watchdog kernel thread is running
c859e21a35ce5604dde0b618169680aa3c7e3bdb liquidio: xmit_more support
aa28667cfbe4ff6f14454dda210b1f2e485f99b5 liquidio: fix kernel panic in VF driver
641da8ed3d8c54a5357d85a0f18d1d537c4205b9 liquidio: get rid of false alarm "Unknown cmd 27" in dmesg
1f233f327913f3dee0602cba9c64df1903772b55 liquidio: switchdev support for LiquidIO NIC
d4be8ebefb449c43b7daa5c9d23b22cd20c17258 liquidio: Configure switchdev with devlink
a666960d182cfb7074640bdb004633ffb2e58f26 liquidio: remove redundant setting of inst_processed to zero
e20f469660ad526fcd9bf865e30ee491ae4e4a86 liquidio: synchronize VF representor names with NIC firmware
25c5f715381e0f52993972567fae653b700126fa liquidio: bump up driver version to 1.7.0 to match newer NIC firmware
bf5345882bd18bc1b4966d170c0491ebe5c9a7d6 liquidio: Fix an issue with multiple switchdev enable disables
952484610cc2f67303be4feedb0e52a519c31470 liquidio: do not consider packets dropped by network stack as driver Rx dropped
bfa62a52cad93686bb8d8171ea5288813248a7c6 rt2x00usb: mark device removed when get ENOENT usb error
c2c48ddfc8b03b9ecb51d2832b586497b37531bc iwlwifi: fix firmware names for 9000 and A000 series hw
f7f5873bbd45a67d3097dfb55237ade2ad520184 iwlwifi: fix wrong struct for a000 device
d048b36b9654c4e0cf0d3576be2d1ed2a3084c6f iwlwifi: add a new a000 device
1105a337375258515ed09b92a83fd7bfd6775958 iwlwifi: pcie: sort IDs for the 9000 series for easier comparisons
57b36f7fcb39c5eae8c1f463699f747af69643ba iwlwifi: add new cards for a000 series
dbc89253a7e15f8f031fb1eeb956de91204655e3 iwlwifi: fix PCI IDs and configuration mapping for 9000 series
6c2d49fdc5d947c5fe89935bd52e69f10000f4cb iwlwifi: mvm: flush queue before deleting ROC
567deca8e72df3ceb6c07c63f8541a4928f64d3b iwlwifi: add new cards for 9260 and 22000 series
b13f43a48571f0cd0fda271b5046b65f1f268db5 iwlwifi: mvm: fix packet injection
5c3de777bdaf48bd0cfb43097c0d0fb85056cab7 brcmfmac: change driver unbind order of the sdio function devices
67bd52386125ce1159c0581cbcd2740addf33cd4 mac80211_hwsim: Fix memory leak in hwsim_new_radio_nl()
dac4df1c5f2c34903f61b1bc4fc722e31b4199e7 iwlwifi: mvm: support version 7 of the SCAN_REQ_UMAC FW command
02445990a96e60a67526510d8b00f7e3d14101c3 arm64: move ELF_ET_DYN_BASE to 4GB / 4MB
c715b72c1ba406f133217b509044c38d8e714a37 mm: revert x86_64 and arm64 ELF_ET_DYN_BASE base changes
a7c5437b0bbec5165df6eb1efc5e37dc40b9e05d debugfs: add debugfs_lookup()
6ac93117ab009d3901ed5d3d0f79056eb5fc0afd blktrace: use existing disk debugfs directory
14d1bbb0ca425c4fdd9a38eaac346c028661b752 NFS: Create a common nfs4_match_client() function
c156618e15101a9cc8c815108fec0300a0ec6637 nfs: fix a deadlock in nfs client initialization
0fbe8f575b15585eec3326e43708fbbc024e8486 IB/core: Don't enforce PKey security on SMI MADs
d0e312fe3d34c1bc014a7f8ec6540d05e8077483 RDMA/netlink: Fix general protection fault
9901abf583683e58f95f822da63cd0e32e7b2f0a IB/mlx4: Use optimal numbers of MTT entries
ed8637d3615b38bd4d12ba5eb8ee6a0c3888e754 IB/mlx4: Add contig support for control objects
8a2f38ddfeb526c30b3ec209468172a30a38d996 ACPI / platform: provide default DMA mask
75f3e8e47f381074801d0034874d20c638d9e3d9 firmware: introduce sysfs driver for QEMU's fw_cfg device
246c46ebaeaef17814dc5a8830d16e7f1b01116b firmware: create directory hierarchy for sysfs fw_cfg entries
9b3ec23ae9e4cd810f754c4cb9bff030a3a9d3ac firmware: qemu_fw_cfg.c: fix typo FW_CFG_DATA_OFF
00411b7b1e3ec477b75bb83ccd417c7609832db6 firmware: fw_cfg register offsets on supported architectures only
e8aabc64d7f5c8702e420c6fa478368f60718ae4 qemu_fw_cfg: don't leak kobj on init error
def7ac806a9ac035abf0e7573ccc8bbfd38e163c firmware: qemu_fw_cfg.c: hold ACPI global lock during device access
d4f6e272f2600bc1295d195a52a9e8bb81656bc7 firmware: qemu_fw_cfg.c: potential unintialized variable
c1d0c3f623ada808904dec676da0126f5b800630 fw_cfg: fix the command line module name
23f1b8d938c861ee0bbb786162f7ce0685f722ec fw_cfg: fix driver remove
14d1824c768d363f78e4b9e8a98b200aacc29c0f fw_cfg: add DMA register
2d6d60a3d3eca50bbb20052278cb11dabcf4dff3 fw_cfg: write vmcoreinfo details
7c9bc0983f890ed9782e755a0e070930cd979333 ima: check signature enforcement against cmdline param instead of CONFIG
9c655be0644429b71396347887b43676ab4f6781 ima: log message to module appraisal error
630e57573efa20b586c808400005d0ebfb93fc6a cpufreq: intel_pstate: Add support for Gemini Lake
14b22ae028de56cca980171db625d1e9925c8fba perf pmu: Add helper function is_pmu_core to detect PMU CORE devices
887843961c4b4681ee993c36d4997bf4b4aa8253 mm: fix bad rss-counter if remap_file_pages raced migration
1c4de1ff4fe50453b968579ee86fac3da80dd783 x86/mm/pti: Allow NX poison to be set in p4d/pgd
385ce0ea4c078517fa51c261882c4e72fba53005 x86/mm/pti: Add Kconfig
1a935bc3d4ea61556461a9e92a68ca3556232efd x86/entry: Move SYSENTER_stack to the beginning of struct tss_struct
0790c9aad84901ca1bdc14746175549c8b5da215 x86/mm: Add the 'nopcid' boot option to turn off PCID
c7ad5ad297e644601747d6dbee978bf85e14f7bc x86/mm/64: Initialize CR4.PCIDE early
c5ce0abeb62845352d7428d6b82e5b52e8728f12 scsi: sas: move scsi_remove_host call into sas_remove_host
cfd2aff711aa9de301258d322a0b5a3c64010220 scsi: mpt: Move scsi_remove_host() out of mptscsih_remove_host()
5c0ba4e0762e6dabd14a5c276652e2defec38de7 [readdir] introduce iterate_dir() and dir_context
bb6f619b3a49f940d7478112500da312d70866eb [readdir] introduce ->iterate(), ctx->pos, dir_emit()
5f99f4e79abc64ed9d93a4b0158b21c64ff7f478 [readdir] switch dcache_readdir() users to ->iterate()
f2b91d8d385d2cef3a1e3b3846f2dde4a6720c43 vfs: delete vfs_readdir function declaration
1b18dc2beb31f588db1c75901b0112324c72124f sysfs: fix up space coding style issues
ddfd6d074e0fadd14b6670394a6a7fb6a955de18 sysfs: fix up 80 column coding style issues
e51db73532955dc5eaba4235e62b74b460709d5b userns: Better restrictions on when proc and sysfs can be mounted
7dc5dbc879bd0779924b5132a48b731a0bc04a1e sysfs: Restrict mounting sysfs
58292cbe6669d74498a5f08db13e57cb3bcfb81d sysfs: make attr namespace interface less convoluted
e34ff4906199d2ebd248ae897ae34f52bea151c9 sysfs: remove ktype->namespace() invocations in directory code
4b30ee58ee64c64f59fd876e4afa6ed82caef3a4 sysfs: remove ktype->namespace() invocations in symlink code
cb26a311578e67769e92a39a0a63476533cb7e12 sysfs: drop kobj_ns_type handling
388975cccaaf11abd47525f664c76891c440481a sysfs: clean up sysfs_get_dirent()
cfec0bc835c84d3d3723d4955587f05a94879b26 sysfs: @name comes before @ns
667b4102b3e63856ca7770521ee74b1c44629df1 sysfs: Allow mounting without CONFIG_NET
d69ac5a0bbcf1d9962883fb23e337caf5b38cec8 sysfs: remove sysfs_addrm_cxt->parent_sd
bcdde7e221a8750f9b62b6d0bd31b72ea4ad9309 sysfs: make __sysfs_remove_dir() recursive
250f7c3fee52b71457b4aa2cafadbd9f8b320b31 sysfs: introduce [__]sysfs_remove()
89e51dab7cb026193714f2858dbce203c98ecdec sysfs: remove unused sysfs_buffer->pos
aea585ef8fa6516395022e9d2fed6ec5014128bc sysfs: remove sysfs_buffer->needs_read_fill
375b611e60f7c1ce6913417ca254efe5523f1a72 sysfs: remove sysfs_buffer->ops
58282d8dc2e7cf2b87c8fee94d7138ed08e0a2e5 sysfs: rename sysfs_buffer to sysfs_open_file
bcafe4eea3e58a60e9c2c63781700a9ab1d70f93 sysfs: add sysfs_open_file->sd and ->file
8ef445f0807457dd7d158e43d9e8f9568c47910d sysfs: use transient write buffer
13c589d5b0ac654d9da7e490a2dd548e6b86b4a5 sysfs: use seq_file when reading regular files
f9b9a6217cf10fd5d3002627cc13c4789a777213 sysfs: prepare path write for unified regular / bin file handling
2f0c6b7593a590eef7fa35344da57380fcee7581 sysfs: add sysfs_bin_read()
73d9714627adced2942e8d53ce0e73d9699a996c sysfs: copy bin mmap support from fs/sysfs/bin.c to fs/sysfs/file.c
49fe604781cbb03eb6ff12a7bc4ad8eef8b830c4 sysfs: prepare open path for unified regular / bin file handling
3124eb1679b28726eacbc8973a891235dca3ed99 sysfs: merge regular and bin file handling
785a162d147a547bc7a577c1c28f6fb9dbeb4f16 sysfs: make sysfs_file_ops() follow ignore_lockdep flag
d723a92dd465d549bf79dd481c09d59f0be02936 sysfs/bin: Fix size handling overflow for bin_attribute
b9c0622516b73170fa9abffece3079920b78ed6f sysfs: fix sysfs_write_file for bin file
56b3f3b884652395e1025a8e4f1c4bd47bc112c4 sysfs: merge sysfs_elem_bin_attr into sysfs_elem_attr
672f76a81ad524359e761d7c863d24aec58e23c5 sysfs: honor bin_attr.attr.ignore_lockdep
7eed6ecb0785681892ab1fe47188fc981241cfd0 sysfs: move sysfs_hash_and_remove() to fs/sysfs/dir.c
d1c1459e45944e336a968acce1e459c9effcde47 sysfs: separate out dup filename warning into a separate function
1c1365e374bfadf908eae02cded7abb9e672c9d4 sysfs: return correct error code on unimplemented mmap()
044e3bc33391b1f2769d5ab2c04f246c3d8e04c3 sysfs: use generic_file_llseek() for sysfs_file_operations
0cae60f91494e34a0c5391f1455f825d5849b05f sysfs: rename sysfs_assoc_lock and explain what it's about
a1212d278c05ca0a38f5cbd7ae90ac2e367228a8 Revert "sysfs: drop kobj_ns_type handling"
027a485d12e089314360d459b8d847104dd28702 sysfs: use a separate locking class for open files depending on mmap
c84a3b27798dfce928b867fa1c9f3c3fd66f0a31 sysfs: drop kobj_ns_type handling, take #2
ae2108ad32f5ca55e9895d5597e6552be1607569 sysfs: make __sysfs_add_one() fail if the parent isn't a directory
7c6e2d362c19f01e6d6c8be59d83a89722032884 sysfs, kernfs: replace sysfs_dirent->s_dir.kobj and ->s_attr.[bin_]attr with ->priv
c2b19daf6760fae9d5db9e9d1683644728888293 sysfs, kernfs: prepare read path for kernfs
50b38ca086e4d9920eede98b871b971e9958d70d sysfs, kernfs: prepare write path for kernfs
fdbffaa478fc77e999cbe2ac0dcfbf609103e675 sysfs, kernfs: prepare mmap path for kernfs
c6fb449515f23edea828fb90a460d3622e261dba sysfs, kernfs: prepare open, release, poll paths for kernfs
471bd7b78bd56c580e91e00a0f656ca922ab3b3c sysfs, kernfs: add sysfs_dirent->s_attr.size
a7dc66dfb4c6d6c1d7c14d5106ce467f1dbd4eba sysfs, kernfs: remove SYSFS_KOBJ_BIN_ATTR
2d0cfbec2a95c16818960fda1dfa815fd1a62070 sysfs, kernfs: remove sysfs_add_one()
2b25a62901a1af654c2604f19592b13742ad1601 sysfs, kernfs: reorganize SYSFS_* constants
51a35e9fd0f229d2f84455ee7e85a5d30fa35594 sysfs, kernfs: make sysfs_super_info->ns const
df394fb56c64244b30b442e9e02de1a2d9c5a98b sysfs, kernfs: make super_blocks bind to different kernfs_roots
a7560a0132cfc93b25d2df1d277a078a05220cf4 sysfs: fix use-after-free in sysfs_kill_sb()
fa4cd451cceb77e97432b91fcf50a7e4a7361e29 sysfs, kobject: add sysfs wrapper for kernfs_enable_ns()
7d568a8383bbb9c1f5167781075906acb2bb1550 kernfs: implement kernfs_root->supers list
f5c16f29bf5e57ba4051fc7785ba7f035f798c71 sysfs: make sure read buffer is zeroed
78e1da627040ca49c41b456db707342ef210ae0f sysfs.h: don't return a void-valued expression in sysfs_remove_file
9f70a40128a4ddceffb6d21dd490f6ab4bc34c97 sysfs: fix attribute_group bin file path on removal
44bb4385ce1cfb231d37cbc7bb6faf70f98b7b17 fs_is_visible only needs namespace_sem held shared
41301ae78a99ead04ea42672a1ab72c6f44cc81d vfs: Fix a regression in mounting proc
7e96c1b0e0f495c5a7450dc4aa7c9a24ba4305bd mnt: Fix fs_fully_visible to verify the root directory is visible
1b852bceb0d111e510d1a15826ecc4a19358d512 mnt: Refactor the logic for mounting sysfs and proc in a user namespace
8c6cf9cc829fcd0b179b59f7fe288941d0e31108 mnt: Modify fs_fully_visible to deal with locked ro nodev and atime
ceeb0e5d39fcdf4dca2c997bf225c7fc49200b37 vfs: Ignore unlocked mounts in fs_fully_visible
eb6d38d5427b3ad42f5268da0f1dd31bb0af1264 proc: Allow creating permanently empty directories that serve as mount points
d66bb1607e2d8d384e53f3d93db5c18483c8c4f7 proc: Fix unbalanced hard link numbers
87d2846fcf88113fae2341da1ca9a71f0d916f2c sysfs: Add support for permanently empty directories to serve as mount points.
f9bb48825a6b5d02f4cabcc78967c75db903dcdc sysfs: Create mountpoints with sysfs_create_mount_point
7236c85e1be51a9e25ba0f6e087a66ca89605a49 mnt: Update fs_fully_visible to test for permanently empty directories
90f8572b0f021fdd1baa68e00a8c30482ee9e5f4 vfs: Commit to never having exectuables on proc and sysfs.
77b1a97d218277d55a15016826d1fd79290f1df2 mnt: fs_fully_visible enforce noexec and nosuid  if !SB_I_NOEXEC
9e8925b67a809bb27ce4b7d352d67f25cf1d7fc5 locks: Allow disabling mandatory locking at compile time
95ace75414f312f9a7b93d873f386987b92a5301 locks: Don't allow mounts in user namespaces to enable mandatory locking
97c1df3e54e811aed484a036a798b4b25d002ecf mnt: If fs_fully_visible fails call put_filesystem.
d71ed6c930ac7d8f88f3cef6624a7e826392d61f mnt: fs_fully_visible test the proper mount for MNT_LOCKED
695e9df010e40f407f4830dc11d53dce957710ba mnt: Account for MS_RDONLY in fs_fully_visible
8654df4e2ac9704905198d63845554c2ddf6a93f mnt: Refactor fs_fully_visible into mount_too_revealing
e94591d0d90c13166cb6eb54ce5f96ed13d81b55 proc: Convert proc_mount to use mount_ns.
6e4eab577a0cae15b3da9b888cff16fe57981b3e fs: Add user namespace member to struct super_block
29a517c232d21a717aecea29838aeb07131f6196 kernfs: The cgroup filesystem also benefits from SB_I_NOEXEC
3ee690143c3c99f6c0e83f08ff17556890bc6027 ipc/mqueue: The mqueue filesystem should never contain executables
a2982cc922c3068783eb9a1f77a5626a1ec36a1f vfs: Generalize filesystem nodev handling.
a1935c1738af53249a02290ff7c10e8a6e650a16 mnt: Simplify mount_too_revealing
67690f937c38bbab1d94cb45f6a32e61612834ae userns: Remove implicit MNT_NODEV fragility.
cc50a07a247e17db76b1f0b0ca06652556e04fa3 userns: Remove the now unnecessary FS_USERNS_DEV_MOUNT flag
d07b846f6200454c50d791796edb82660192513d fs: Limit file caps to the user namespace of the super block
380cf5ba6b0a0b307f4afb62b186ca801defb203 fs: Treat foreign mounts as nosuid
d29216842a85c7970c536108e093963f02714498 mnt: Add a per mount namespace limit on the number of mounts
25ab4c9b1ccb64b1433cecd3f19f28fe300c1576 fs/namespace.c: path_is_under can be boolean
640eb7e7b5242af53c456552a526d0080e6333f8 fs: Constify path_is_under()'s arguments
ca71cf71eeda04dc9ad18271504e499013af5415 namespace.c: constify struct path passed to a bunch of primitives
93faccbbfa958a9668d3ab4e30f38dd205cee8d8 fs: Better permission checking for submounts
1064f874abc0d05eeed8993815f584d847b72486 mnt: Tuck mounts under others instead of creating shadow/side mounts.
93893862fb7ba704ec5a6872a294c9cc2b0d4ca3 path_init(): don't bother with checking MAY_EXEC for LOOKUP_ROOT
4f757f3cbf54edef7b75c68d6d6d2f1a0ca08d2e make sure that mntns_install() doesn't end up with referral for root
570487d3faf2a1d8a220e6ee10f472163123d7da mnt: In umount propagation reparent in a separate pass
99b19d16471e9c3faa85cad38abc9cbbe04c6d55 mnt: In propgate_umount handle visiting mounts in any order
296990deb389c7da21c78030376ba244dc1badf5 mnt: Make propagate_umount less slow for overlapping mount propagation trees
9c1ba5c809381fb9fb779e2cc22a1c878a269ffb netfilter: ipset: Make sure listing doesn't grab a set which is just being destroyed.
596cf3fe5854fe2b1703b0466ed6bf9cfb83c91e netfilter: ipset: fix race condition in ipset save, swap and delete
e5173418ac597cebe9f7a39adf10be470000b518 netfilter: ipset: Fix race between dump and swap
fd7eafd02121d6ef501ef1a4a891e6061366c952 geneve: fix fill_info when link down
f9094b7603c011d27db7ba109e69881c72fa611d geneve: only configure or fill UDP_ZERO_CSUM6_RX/TX info when CONFIG_IPV6
1177009131bee310421f5c04c43d3777cbacbdc8 devlink: Add Ethernet header for dpipe
3fb886ecea93605a8ea14e258ff3158b8966781e devlink: Add IPv4 header for dpipe
ffd3cdccf214cf0df08856a6738544076c4cd548 devlink: Add support for dynamic table size
3580732448f128c39e7325912bc4368ade5dce7d devlink: Move dpipe entry clear function into devlink
1797f5b3cf0b3a73c42b89f7a8fd897417373730 devlink: Add IPv6 header for dpipe
790c6056686cc4dd5b149b330bbd5ae208d4d721 devlink: Fix devlink_dpipe_table_register() stub signature.
4a5def7f6a758aef1a0a3b10e981881c1e914f69 VSOCK: Don't set sk_state to TCP_CLOSE before testing it
094009531612246d9e13f9e0c3ae2205d7f63a0a ipv6: set all.accept_dad to 0 by default
8b1efc0f83f1f75b8f85c70d2211007de8fd7633 net: remove MTU limits on a few ether_setup callers
e94cd8113ce63bca34040aae52d0603baf6ec07c net: remove MTU limits for dummy and ifb device
4c82fd0abb87e20d0d68ef5237e74732352806c8 netfilter: uapi: correct UNTRACKED conntrack state bit number
f859b4af1c52493ec21173ccc73d0b60029b5b88 sit: update frag_off info
3f5a95ad6c6c05e6b00f0c20e30da66c986564d5 xfrm: fix null pointer dereference on state and tmpl sort
70b8301f6b8f7bc053377a9cbd0c4e42e29d9807 x86/topology: Add topology_max_smt_threads()
947134d9b00f342415af7eddd42a5fce7262a1b9 x86/smpboot: Do not use smp_num_siblings in __max_logical_packages calculation
686140a1a9c41d85a4212a1c26d671139b76404b s390: introduce CPU alternatives
c3a536056374ef8412c7ffa13790303ec02d8f46 crypto: cryptd - Add cryptd_max_cpu_qlen module parameter
447e9ebfc19950559ebb9aa08302a7f11ab1508c nfp: set config bit (ifup/ifdown) on netdev open/close
26a8985fa52e3c3087794d1329cfdafceae8510c nfp: remove the probe deferral when FW not present
12acb133ece5a0b25b0984d31d870619966f63fe nfp: send control message when MAC representors are created
b985f870a5f08da0a2d6b45a3ea33f5558cf7e4e nfp: process control messages in workqueue in flower app
06726f30364c38f12519e2c6c046f19b2aa509bc nfp: link basic ethtool ops to representors
9e4c2cfc67816276a80da5888a1d9430b60c2183 nfp: provide ethtool_drvinfo on representors
a2f4c3d9bd4a8a85d7cdd8221f7995fdbc98aa4a nfp: allow retreiving management FW logs on representors
1cfcc97bb1575446016e0c061c0629b1e6572523 nfp: don't report standard netdev statistics in ethtool
634287ba7544f10e81d2ffcb58e934b2a3514ed2 nfp: add helper for printing ethtool strings
325945ede6d49fd94b79c8c243fc3c0f2db2fcdb nfp: split software and hardware vNIC statistics
7344bea1401627cd1b02d19252baa1c40c0fb5e9 nfp: store pointer to MAC statistics in nfp_port
098ce840c9ef7b474437a766a0f9759b5c3e1ae6 nfp: report MAC statistics in ethtool
ef0ec676a7181d418bb9051ccfe1cd13a1f47ab2 nfp: add pointer to vNIC config memory to nfp_port structure
899a37ade8c6dd1619d510c1e3b4b99d508272a9 nfp: add ethtool statistics for representors
825b18ab24a1762a07e8202999cd8eb8eb8d505d nfp: fix copy paste in names and messages regarding vNICs
25528d90f541fa23cb7b862a7e9dc0b9c44d9adc nfp: add basic SR-IOV ndo functions
6abd224b2554cbbb31db62a8b4de7506df553f38 nfp: add basic SR-IOV ndo functions to representors
c496291c5a414bd55bae76880137947d2e8decbe nfp: separate app vNIC init/clean from alloc/free
192e685105097c48ad9f3665af643e1d97bcd2d4 nfp: flower: base lifetime of representors on existence of lower vNIC
9d8b17bed757a3c5edbd6c1d09e52cbff6f2cc78 nfp: move the start/stop app callbacks back
023a928461e9370e73de2d5ef1a7e44a8033d2a6 nfp: be drop monitor friendly
7c8a2d8b366d2dc9e386b96e4555cc5c6932c43d nfp: build the flower offload by default
4cbe94f2af25bf8f4d5dea56c770937d896342bf nfp: wait for board state before talking to the NSP
79ede4ae2d01b0282bfaaf761308a5ac485c8144 nfp: add helper to get flower cmsg length
611aec101ab7c19755e8ea6d480f679aaffed5ad nfp: compile flower vxlan tunnel metadata match fields
b27d6a95a70de551df828de2b658efd949a9864e nfp: compile flower vxlan tunnel set actions
fd0dd1ab1e107369c950796bb9b0e8eab6134bf1 nfp: offload flower vxlan endpoint MAC addresses
2d9ad71a8ce67eea9ee38512a215e1893bd5cf87 nfp: offload vxlan IPv4 endpoints of flower rules
8e6a9046b66a7dfb11ae8be226afaaf417649411 nfp: flower vxlan neighbour offload
856f5b135758ad80053a49f7ce9d1dc0166e3006 nfp: flower vxlan neighbour keep-alive
bb055c198d9b2ba7baf292a440c2d24fe87db494 nfp: add mpls match offloading support
a1e9203cc6e5247f6e7af897252ca92cdf5edb70 nfp: add IPv4 ttl and tos match offloading support
fc53b4a7014aab8c260c2b81ae6c24687dff3045 nfp: add IPv6 ttl and tos match offloading support
da83d8fe5889822691384d2b3edf1716fb6debdb nfp: add set ethernet header action flower offload
c0b1bd9a8b8ac81e4e0985aad4a8de869ab6a668 nfp: add set ipv4 header action flower offload
354b82bb320e04547e4755d2cc2ebab87a6d8abe nfp: add set ipv6 source and destination address
f8b7b0a6b113eea5b528e51a2086e6f93f4e4933 nfp: add set tcp and udp header action flower offload
3a4b0129bf33caca5743891906393f17a2224d44 nfp: output control messages to trace_devlink_hwmsg()
745eaf9afe37238e89244953e2e9727006b4432c nfp: fix vlan receive MAC statistics typo
42d779ffc186f6dd26271fc60a7417cb51aca93e nfp: fix port stats for mac representors
2b52a283907b7f6d439444bfdde7f2241ddde735 net/mlx5e: Rename VLAN related variables and functions
355368d530460aa19b9d4291e2da2c6fd8929c76 net/mlx5e: Add rollback on add VLAN failure
2b621851acb34762ca893b2528823215e0d4b98c IB/mlx5: Fix RoCE Address Path fields
e1f6198e221f472c03b88e352432a01076ec8647 cxgb4: avoid stall while shutting down the adapter
2660d226d9901c2c82c81f0b3dc5e6737eed2dfe net: aquantia: Make local functions static
9f8a2203a542f5f3cdeb17f40250c49bb87aa7e3 net: aquantia: Fill ndev stat couters from hardware
45cc1c7ad47c4d166d15c7bce449d2de4daef0c5 net: aquantia: Fill in multicast counter in ndev stats from hardware
fdb4a0830e74acfbe84d4d4e6772ea09c96786ad net: aquantia: Improve link state and statistics check interval callback
3526ecadc86cc1d485153255498cde7d0275dd37 platform/x86: Use ACPI_FAILURE at appropriate places
a9c37b74fd0242f3c8ce4221bb7a61cb14ccd59b platform/x86: intel-vbtn: reduce unnecessary messages for normal users
95f38fd46cc5e45a0d5224f486e805d17ea3d93f platform/x86: intel-vbtn: Support separate press/release events
4982327ff6755377a8a66e84113f496f3a6c53bc Input: add KEY_ROTATE_LOCK_TOGGLE
1c3fdf125ef416227e43fdedf6b5097c41e8c467 platform/x86: intel-vbtn: Simplify autorelease logic
5d3300a9b8b122b4743aed5a178bf12c87e2b8c9 scsi: qla2xxx: Defer processing of GS IOCB calls
ae2ee627dc87a70910de91b791b3cd0e9c6facdd efifb: Add support for 64-bit frame buffer addresses
0b00de857a648dafe7020878c7a27cf776f5edf4 x86/cpuid: Add generic table for CPUID dependencies
0c2a3913d6f50503f7c59d83a6219e39508cc898 x86/fpu: Parse clearcpuid= as early XSAVE argument
57b8b1a1856adaa849d02d547411a553a531022b x86/cpuid: Prevent out of bound access in do_clear_cpu_cap()
73e3a7d2a7c3be29a5a22b85026f6cfa5664267f x86/fpu: Remove the explicit clearing of XSAVE dependent features
ccb18db2ab9d923df07e7495123fe5fb02329713 x86/fpu: Make XSAVE check the base CPUID features before enabling
6b078f5de7fc0851af4102493c7b5bb07e49c4cb x86, vdso, pvclock: Simplify and speed up the vdso pvclock reader
78fd8c7288e0a4bba3ad1d69caf9396a6b69cb00 x86/vdso/pvclock: Protect STABLE check with the seqcount
abe9efa79be02cf2ba27f643b214b07877bb050b x86: vdso: use __pvclock_read_cycles
a42fb351ca1f340f8307468be765e3f77ddedda9 thunderbolt: Allow loading of module on recent Apple MacBooks with thunderbolt 2 controller
1d111406c6d91f4d7f6cc69a43e59546e8010aae PCI: Add Intel Thunderbolt device IDs
7f7a4d306ff87502dc26860f54e798693cf9b1e1 phy: fix Kconfig dependencies
08a5e4cebec543bfa4a6d119fc18f0ed8fd9d8ce thunderbolt: No need to read UID of the root switch on resume
df1421b5f72979e48096f68c253f59aa7e8e7468 thunderbolt: Do not try to read UID if DROM offset is read as 0
9d3cce0b613689ee849a505ffac179af0ae9fff2 thunderbolt: Introduce thunderbolt bus and connection manager
f53e7676046db175dc6ac78d429dd5077a9afbba thunderbolt: Fail switch adding operation if reading DROM fails
81a54b5e1986d02da33c59133556ce9fe2032049 thunderbolt: Let the connection manager handle all notifications
2c3c4197c9dd878e39e249e1da64bcffceb8a5c4 thunderbolt: Store Thunderbolt generation in the switch structure
3e13676862f90dbf5b00d57d5599e57788289897 thunderbolt: Add support for DMA configuration based mailbox
bdccf295d7cdf6f28ceec1dcc31a79d0a1697d21 thunderbolt: Do not touch the hardware if the NHI is gone on resume
f67cf491175a315ca86c9b349708bfed7b1f40c1 thunderbolt: Add support for Internal Connection Manager (ICM)
e6b245ccd524441f462f1ca1fe726123dcedeeee thunderbolt: Add support for host and device NVM firmware upgrade
00f1d133867f3d0c20eafbcb67088f65947bbc27 rtw89: Fix spelling mistake "Mis-Match" -> "Mismatch"
800161bd0209a8db77f66af283c379ff8d58d88d thunderbolt: Correct access permissions for active NVM contents
1cd65d17612e8b64989f7af20213d4bb7a7f4d91 thunderbolt: Do not enumerate more ports from DROM than the controller has
2cf9f5bcc8d8cb31d6ea7baebac5056f39fb4f40 ACPICA: Add acpi_update_interfaces() public interface
2641f540800b47a1b9e9d8ce9d682fc15df088e2 ACPICA: Fix divergences of the commit - ACPICA: Expose OSI version.
7bc5a2bad0b8d9d1ac9f7b8b33150e4ddf197334 ACPI: Support _OSI("Darwin") correctly
c50f13c672df758b59e026c15b9118f3ed46edc4 ACPICA: Save current masks of enabled GPEs after enable register writes
7c43312af8b363b679d1e7840858ff8d204a4d91 ACPICA: Events: Cleanup GPE dispatcher type obtaining code
09af8e8290deaff821ced01ea83594ee4c21e8df ACPICA: Events: Add support to return both enable/status register values for GPE and fixed event.
eace75cfdcf7d9937d8c1fb226780123c64d72c4 nvmem: Add a simple NVMEM framework for nvmem providers
69aba7948cbe53f2f1827e84e9dd0ae470a5072e nvmem: Add a simple NVMEM framework for consumers
811b0d6538b9f26f3eb0f90fe4e6118f2480ec6f nvmem: Add flag to export NVMEM to root only
b6c217ab9be6895384cf0b284ace84ad79e5c53b nvmem: Add backwards compatibility support for older EEPROM drivers.
dbee890bf69ad62c021e299e24881fdcd1f2c481 ACPI / osi: Cleanup _OSI("Linux") related code before introducing new support
e5f660ebef68e3ed1a988ad06ba23562153cee5c ACPI / osi: Collect _OSI handling into one single file
f4d05266032346531b9f889e26aa31a0cf2a9822 device property: don't bother the drivers with struct property_set
795ddd18d38f9762fbfefceab9aa16caef0cf431 nvmem: core: remove regmap dependency
2af52c2bd20c50e80b121e15cd50a579e364485a ACPICA: Events: Introduce acpi_mask_gpe() to implement GPE masking mechanism
daae45caf5a042a0c7d147749ed1e4c970fc86d8 ACPI / bus: Make acpi_get_first_physical_node() public
46cd4b75cd0edee76e0096225c2d31f8d90e92a2 efi: Add device path parser
9c4aa1eecb48cfac18ed5e3aca9d9ae58fbafc11 ACPI / sysfs: Provide quirk mechanism to prevent GPE flooding
42a6e0996084972574e0a2b23e7326b78b0f64c5 nvmem: include linux/err.h from header
ecc1165b8b743fd1503b9c799ae3a9933b89877b ACPICA: Dispatch active GPEs at init time
1312b7e0caca44e7ff312bc2eaa888943384e3e1 ACPICA: Make it possible to enable runtime GPEs earlier
eb7f43c4adb4a789f99f53916182c3401b4e33c7 ACPI / scan: Enable GPEs before scanning the namespace
3b95bd160547f56a68aeb972c33ae9511e7a8380 ACPI: introduce a function to find the first physical device
f17cc84d1c2f661cb29cb7efc58f9d654ef3c643 mlxsw: spectrum_router: Add helpers for neighbor access
7cfcbc7591e30aeebbfd3f7b0ff615b5ee4f1da7 mlxsw: spectrum_router: Add support for setting counters on neighbors
a481d71323980da1da74bdfd2c7e01040ec66371 mlxsw: spectrum_dpipe: Add support for controlling neighbor counters
cf4f21938e13ea1533ebdcb21c46f1d998a44ee8 kbuild: Allow to specify composite modules with modname-m
10bfec0a2b4b9d3b81e09b43266ebe370bb17760 mlxsw: spectrum: compile-in dpipe support only if devlink is enabled
1d1056d80b8e44efcc05298bfa85fa5ec0998bc9 mlxsw: spectrum_router: Export IPv6 link local address check helper
0250768c6c6e131bded979fd939bc4642a506a07 mlxsw: spectrum_router: Add IPv6 neighbor access helper
1ed5574c6d48c6094bf688aa2cc755ea6ca4007c mlxsw: spectrum_router: Add support for setting counters on IPv6 neighbors
0fb5fe3c886cb808c6a304f3df3336bdd04e18f5 mlxsw: spectrum_dpipe: Add support for controlling IPv6 neighbor counters
dbe4598c1e929a24dc352a7dc523a3cc22a093f2 mlxsw: spectrum_router: Keep nexthops in a linked list
ec2437f42b44edc84054feb943d49e8030154c38 mlxsw: spectrum_router: Use helper to check for last neighbor
c556cd28930661f337d7989fe74ac31871fd3888 mlxsw: spectrum_router: Add helpers for nexthop access
a5390278a5eb573b76d2d28ce576b6b62c2200be mlxsw: spectrum: Add support for setting counters on nexthops
427e652aa34d90960f729c0b902c3c4a8a821b2e mlxsw: spectrum_dpipe: Add support for controlling nexthop counters
a9a42886d0b3b989166472b7ea59b1c157d90f9b cxgb4: Convert PDBG to pr_debug
3c8415cc7aff467faba25841fb859660ac14a04e iw_cxgb4: drop listen destroy replies if no ep found
836daee2df01b79e9cf54b80b985aea6cff05f57 cxgb4: Remove some dead code
548ddb19afbabf8f7af7a900c19d0f0705d6dc90 iw_cxgb4: Remove __func__ parameter from pr_debug()
4d45b7573ba74a278652b0566d779c2aa7ea3df1 iw_cxgb4: change pr_debug to appropriate log level
a3f12da0e99a8d17118ee9e18a1f760a0d427b26 iw_cxgb4: allocate wait object for each memory object
13ce83174afaf4ceb4dddd7b7e421778ee4fcf5e iw_cxgb4: allocate wait object for each cq object
ef885dc66c29dd8e6f6a12f164ed11237323c234 iw_cxgb4: allocate wait object for each ep object
2015f26cfadec126265fabfbb0e6566e2cca94b4 iw_cxgb4: add referencing to wait objects
ba97b749979ef0ebb821e58ee8b16a84412922f6 iw_cxgb4: remove BUG_ON() usage.
1c8f1da5d851b92aeb81dbbb9ebd516f6e2588f5 iw_cxgb4: Fix possible circular dependency locking warning
17748056ce123ee37fb7382bc698fc721e3c4a09 RDMA/vmw_pvrdma: Call ib_umem_release on destroy QP path
e3524b269e451cff68b19f32b15448933a53a4f4 RDMA/vmw_pvrdma: Avoid use after free due to QP/CQ/SRQ destroy
809cb6955650d892c6ef95f1d55f28fceded0ce1 IB/ipoib: Fix for notify send CQ failure messages
4a50881bbac309e6f0684816a180bc3c14e1485d IB/core: Verify that QP is security enabled in create and destroy
231243c82793428467524227ae02ca451e6a98e7 Revert "mlx5: move affinity hints assignments to generic code"
139ed6c6c46aa3d8970a086b8e0cf1f3522f5d4a net/mlx5: Fix steering memory leak
d6b2785cd55ee72e9608762650b3ef299f801b1b net/mlx5: Cleanup IRQs in case of unload failure
a2fba188fd5eadd6061bef4f2f2577a43231ebf3 net/mlx5: Stay in polling mode when command EQ destroy fails
ad9a3668a434faca1339789ed2f043d679199309 IB/mlx5: Serialize access to the VMA list
45be0a02f8110a13502fac6167a893c7c0eff432 s390/sclp: single increment assignment control
ecba8297aafd50db6ae867e90844eead1611ef1c KVM: PPC: Book3S HV: Always flush TLB in kvmppc_alloc_reset_hpt()
309557f558a6f276e364b08d916c0f644b5bd2e1 powercap/rapl: add package reference per domain
efd756daf4ddae3cec2404c4e0b680b7cfdd6a45 ACPI / PCC: Use pr_debug() for debug messages in pcc_init()
31f7dc796998d2967e999a0f9229d8a50c7b348d ACPI / battery: Fix doubly added battery on system suspend
6e53636fe81465d6810f4e0910e7238edf12a133 dm raid: add raid4/5/6 journal write-back support via journal_mode option
1af2048a3e87b4e982c53ad8cfb0c75d1a9c0a73 dm raid: fix deadlock caused by premature md_stop_writes()
67143510a7e3634a23f06a48445d1148b2fdbc4d dm raid: display a consistent copy of the MD status via raid_status()
242ea5ad11a03f2fbdfc2fe422d8e1b0601a8073 dm raid: avoid passing array_in_sync variable to raid_status() callees
4102d9de6d375fc27ec70382c4068f4f9f62ce4f dm raid: fix rs_get_progress() synchronization state/ratio
78a75d10ef869f4fae70f9b86afce28eb1922529 dm raid: small cleanup and remove unsed "struct raid_set" member
b84cf26924cfe405993fc45fa2911cde38f3c3ac dm raid: bump target version to reflect numerous fixes
dc15b943d4651bc13b9737bb27283ad9d3b8eeba dm raid: ensure 'a' chars during reshape
7c29744eccecc2c74c9b4d1ea0a60b4d95229399 dm raid: simplify rs_get_progress()
552aa679f265743163fb440c61370a9c51f66c81 dm raid: use rs_is_raid*()
62807106c3219d2d6ddbfc778a5ee7e6ba38e58f x86/platform/UV: Fix UV4A support on new Intel Processors
09c3ae12b2bf6dc2837d89c1017bf151af610a1f x86/platform/UV: Fix GAM MMR references in the UV x2apic code
3cafad43e2dfb4b9cdabe3bb42bbffccf1e45538 IB/hfi1: Mask the path bits with the LMC for 16B RC Acks
c5c4e40e90b5c714248bcf4e8a63b1a1cd07c11e IB/CM: Change sgid to IB GID when handling CM request
57194fa763bfa1a0908f30d4c77835beaa118fcb IB/hfi1: Prevent a NULL dereference
43347d56c8d9dd732cee2f8efd384ad21dd1f6c4 livepatch: send a fake signal to all blocking tasks
c99a2be790b07752d8cc694434d3450afd4c5a00 livepatch: force transition to finish
8869016d3a58cbe7c31c70f4f008a92122b271c7 livepatch: add locking to force and signal functions
5faf153ebf6128f02ad6ffa2e8bbc9d823ef762c don't call file_pos_write() if vfs_{read,write}{,v}() fails
45f87de57f8fad59302fd263dd81ffa4843b5b24 mm: get rid of radix tree gfp mask for pagecache_get_page
31383c6865a578834dd953d9dbc88e6b19fe3997 mm, hugetlbfs: introduce ->split() to vm_operations_struct
9702cffdbf2129516db679e4467db81e1cd287da device-dax: implement ->split() to catch invalid munmap attempts
2ff2a7d03bbe472ed44a8380dbdbea490d81c59d cgroup: kill css_id
67f2ffe31d1a683170c2ba0ecc643e42a5fdd397 xfs: don't change inode mode if ACL update fails
7ac07fdaf840f9b141c6d5c286805107227c0e68 gfs2: Glock dump performance regression fix
6a25478077d987edc5e2f880590a2bc5fcab4441 gfs2: Use rhashtable walk interface in glock_hash_walk
6b018235b4daabae96d855219fae59c3fb8be417 nvme-fabrics: initialize default host->id in nvmf_host_default()
2527d99789e248576ac8081530cd4fd88730f8c7 elevator: lookup mq vs non-mq elevators
f919dde0772a894c693a1eeabc77df69d6a9b937 ahci: Add Intel Cannon Lake PCH-H PCI ID
06e7e776ca4d36547e503279aeff996cbb292c16 Bluetooth: Prevent stack info leak from the EFS element.
bb431ba26c5cd0a17c941ca6c3a195a3a6d5d461 Thermal: initialize thermal zone device correctly
8fc79766a5b4e33be10f686847ee845c784523f6 cxgb3: assign port id to net_device->dev_port
96378bd2c6cda5f04d0f6da2cd35d4670a982c38 ath10k: fix core PCI suspend when WoWLAN is supported but disabled
943309d4aad6732b905f3f500e6e17e33c211494 iwlwifi: pcie: fix DMA memory mapping / unmapping
fc42bcba97bae738f905b83741134a63af7e6c02 crypto: scatterwalk - Add scatterwalk_ffwd helper
53a0bd7144224ba26b326a16e9eaf8bd7f433220 crypto: aead - move aead_request_cast helper to aead.h
94e1dab1c94715e18bb0bada503de3f3d7593076 crypto: chcr - Fix panic on dma_unmap_sg
7c2cf1c4615cc2f576d0604406cdf0065f00b83b crypto: chcr - Fix key length for RFC4106
8356ea515ba1396d6a24dd1e80f101ee9a20ff3c crypto: chcr - Use cipher instead of Block Cipher in gcm setkey
44e9f79916160f9a69542712e8529ee8da15c410 crypto: chcr - Change cra_flags for cipher algos
e29abda591b517be47df7479962ce6baee302a85 crypto: chcr - Increase priority of AEAD algos.
0a7bd30c1b7fca5f1443f1bc2dfdc2681d315359 crypto: chcr - Set hmac_ctrl bit to use HW register HMAC_CFG[456]
0e93708dabc0e999c7ffcf1e8661b68d96de24fd crypto: chcr - Add fallback for AEAD algos
ec1bca941a36961933484be0fce3e71981815bad crypto: chcr - Fix error handling related to 'chcr_alloc_shash'
2512a62414235be0cf4c2529f468546c57b96f60 crypto: chcr - Pass lcb bit setting to firmware
4dbeae4237c15d3104147ab5f79ecbde9511f49f crypto: chcr - Fix fallback key setting
5fe8c7117d78dea231bc7a546a68c1af9fd37cc0 crypto: chcr - Return correct error code
d600fc8aae746de71631b52ff40d02cf90dd3b74 crypto: chcr - Avoid changing request structure
b8fd1f4170e7e8bda45d7bcc750e909c859ec714 crypto: chcr - Add ctr mode and process large sg entries for cipher
ee0863ba118d37609a795a15c08e9acf6809c038 chcr - Add debug counters
738bff48871902bd37c56e6c6b492bb8e37315d5 crypto: chcr - Ensure Destination sg entry size less than 2k
d3f1d2f7863137c5d71e64041b48968db29b149e crypto: chcr - Avoid algo allocation in softirq.
855615eee9b1989cac8ec5eaae4562db081a239b x86/tsc: Remove the TSC_ADJUST clamp
341102c3ef29c33611586072363cf9982a8bdb77 x86/tsc: Add option that TSC on Socket 0 being non-zero is valid
41e7864ab5ce4ec36e89a9f55d8d9dfe19b0392c x86/tsc: Drastically reduce the number of firmware bug warnings
6c66350d0a482892793b888b07c1177fc6d4b344 x86/tsc: Provide a means to disable TSC ART
97d21003df3e7504c899b1701546f18ff475966f x86/platform/UV: Add check of TSC state set by UV BIOS
b3270a5210229ee543339d34b74ba527f978c55b x86/platform/UV: Mark tsc_check_sync as an init function
157467ba9fb7e379f0540707dd89111de441e45e s390/cpuinfo: show facilities as reported by stfle
e2d5915293ffdff977ddcfc12b817b08c53ffa7a powerpc/pseries: Make RAS IRQ explicitly dependent on DLPAR WQ
f9d32f25084ce7a27f966a0e71eae6ee0fe2f5ab media: core: Don't use i2c_client->driver
47b6e477ed4ecacddd1f82d04d686026e08dc3db i2c: Not all adapters have a parent
a76e9bd89ae70fdfff5fd1ca47756a35d10c5f3f i2c: attach/detach I2C client device to the ACPI power domain
d9a83d62b326574fb4831b64317a82a42642a9a2 i2c: Add message transfer tracepoints for I2C
8a325997d95d446206b204b7859e055a0315e4fa i2c: Add message transfer tracepoints for SMBUS [ver #2]
17f4a5c47f28de9ea59182f48d07f8c44ee5dcc9 i2c: move acpi code back into the core
fc68f42aa737dc15e7665a4101d4168aadb8e4c4 ACPI: fix NULL pointer dereference
4470c725ba7b86481c31466640ab487f927de6b7 i2c: acpi: remove unneeded variable initialization
4b1acc43331d6c716c331a61477660dc20c8b59c i2c: core changes for slave support
393cc1ceb96648f842eb81f41f8f56d1eba9b637 i2c: ACPI: Pick the first address if device has multiple
c680eed5ccd4a1c99ee48cd41f4e5fdfad497dc2 i2c: do not try to load modules for of-registered devices
d5fd120e7860c2b3d4c936a2ebadb6b244bec4c8 i2c: Only include slave support if selected
0c7cab96ec413a69af86965d94fb650f01c5887a i2c: slave: add error messages to slave core
4c1344f105b626c222ea64669dc6dcfe100ccf3b i2c: check for proper length of the reg property
7ef85f5fdd081b982d43b95b06272f8646a98818 i2c: core: Reduce stack size of acpi_i2c_space_handler()
66be6056eba80690bb7fa3d983c21494e1950bea i2c: rename address check functions
c4019b7040eaf88f440ce5212e055a4f19b1b541 i2c: make address check indpendent from client struct
c6909d6f6f1082b8bb4c1b0ef3460a005c9dcb4d i2c: slave: print warning if slave flag not set
01eef96e37d77cd89156e5f51aab81a9d5c96539 i2c: core: Add support for best effort block read emulation
166c2ba398640278ae6037be4aa5562c03cf3d24 i2c / ACPI: Rework I2C device scanning
0f614d834bccd3537881c5d0933803b407ce3283 i2c: Add generic support passing secondary devices addresses
95026658c46ea2d94498d0dac1282e28cd47c64a i2c: do not use internal data from driver core
b980a26d02d1f54be31346666222304fcd27ea33 i2c: immediately mark ourselves as registered
ed1bf03470b8c666d6d0d81e8faa8cbb32a5656e i2c: designware-pci: Make bus number allocation robust
be309c3cd3dcbebbd2b742e9a2a24482c92e01ff i2c: print more info when acpi_i2c_space_handler() fails
44239a5afd7c568047fbaba8f32fb4b4464902b4 i2c: use pr_fmt in the core
10c7e20b2ff3caa5a8c0e7d60aef5a9c86e60ce8 ACPI / scan: fix enumeration (visited) flags for bus rescans
68bdb6773289f8c9a36633f9f6525b127c093258 ACPI: add support for ACPI reconfiguration notifiers
525e6fabeae286848592363bda13bc34b59bb5ac i2c / ACPI: add support for ACPI reconfigure notifications
b6e67145f14903ca430e011db3b771d8de4c3d8a i2c: designware: Enable high speed mode
aec809fc63f61a85e4300bb70081fbe6b492171c i2c: core: Cleanup I2C ACPI namespace, take 2
5853b22d96fa786365ff11fe9f008a68a533f043 i2c: core: Add function for finding the bus speed from ACPI, take 2
33aa69ed8aacd92dea12671e52eb3ca6ac2d7a49 x86/gpu: add CFL to early quirks
78aa02c713fcf19e9bc8511ab61a5fd6c877cc01 drm/amdgpu: Potential uninitialized variable in amdgpu_vm_update_directories()
76d6172b6fab16455af4b67bb18a3f66011592f8 drm/amdgpu: correct reference clock value on vega10
a695e43712242c354748e9bae5d137d4337a7694 drm/amdgpu: fix error handling in amdgpu_bo_do_create
c5066129af4436ab0da8eefe4289774a5409706d drm/amdgpu: Properly allocate VM invalidate eng v2
ab6613b7eaefe85dadfc86025e901c55d71c0379 drm/amdgpu: Remove check which is not valid for certain VBIOS
632c6e4edef17c40bba3be67c980d959790d142f drm/vblank: Fix flip event vblank count
a111fbc4c44d2981f1a8fef64418685be5e30280 drm/vblank: Tune drm_crtc_accurate_vblank_count() WARN down to a debug
52dd06506e9bbc2a37b352df7dfc5468f8da21fd drm/fb_helper: Disable all crtc's when initial setup fails.
9271c0ca573e02a360b636ecd8cb408852f4e9f6 drm/edid: Don't send non-zero YQ in AVI infoframe for HDMI 1.x sinks
b43aaee69d4327d05e7624d9471c17d015b4d67d drm/amdgpu: move UVD/VCE and VCN structure out from union
89ce6e0afee8eafa679093207dabd717af9d09c5 drm/amdgpu: Set adev->vcn.irq.num_types for VCN
ce30560c80dead91e98a03d90fb8791e57a9b69d drm/i915: Fix false-positive assert_rpm_wakelock_held in i915_pmic_bus_access_notifier v2
bedf4d79c3654921839b62246b0965ddb308b201 drm/i915: Re-register PMIC bus access notifier on runtime resume
ad88d7fc6c032ddfb32b8d496a070ab71de3a64f drm/i915/fbdev: Serialise early hotplug events with async fbdev config
fa7c7939b4bf112cd06ba166b739244077898990 drm/amdgpu: Use unsigned ring indices in amdgpu_queue_mgr_map
8fedd64dabc86d0f31a0d1e152be3aa23c323553 drm/i915: Fix vblank timestamp/frame counter jumps on gen2
dce1e131dd4dc68099ff1b70aa03cd2d0acf8639 drm/amdgpu: bypass lru touch for KIQ ring submission
0b4d7cbff2be27c89617e1ca60a546019f7ff276 drm/i915: Fixed point fixed16 wrapper cleanup
7e452fdbfca85cd279ecb0d8e9ab6fdd1e8c97fc drm/i915/skl+: Optimize WM calculation
ca47667f523e588318f89c735e127c256de6cb16 drm/i915/gen10: Calculate and enable transition WM
e57f1c02155f4f108b9d3ba2bed687e8e9f95e18 drm/i915/gen9+: Add has_ipc flag in device info structure
2503a0fef214ddadfdf5844d62453591de35586f drm/i915/bxt+: Enable IPC support
d2d4f39b1e6407323e568c174e17b022b8f98a40 drm/i915/skl+: debugfs entry to control IPC
156961ae7bdf6feb72778e8da83d321b273343fd drm/i915: Disable DC states around GMBUS on GLK
53421c2fe99ce16838639ad89d772d914a119a49 drm/i915: Apply Display WA #1183 on skl, kbl, and cfl
1b5c7ef3d0d0610bda9b63263f7c5b7178d11015 drm/nouveau/disp/gf119: add missing drive vfunc ptr
8a510a5c75261ba0ec39155326982aa786541e29 drm/vmwgfx: fix memory corruption with legacy/sou connectors
f870c1ff65a6d1f3a083f277280802ee09a5b44d vxlan: restore dev->mtu setting based on lower device
1a5f3da20bd966220931239fbd31e6ac6ff42251 net: ethtool: add support for forward error correction modes
c48e74736fccf25fb32bb015426359e1c2016e3b openvswitch: Fix pop_vlan action for double tagged frames
efbf78973978b0d25af59bc26c8013a942af6e64 net_sched: get rid of rcu_barrier() in tcf_block_put_ext()
df45bf84e4f5a48f23d4b1a07d21d566e8b587b2 net: sched: fix use-after-free in tcf_block_put_ext
d03a45572efa068fa64db211d6d45222660e76c5 ipv4: fib: Fix metrics match when deleting a route
896d86959fee58113fc510c70cd8d10e82aa3e6a ibmvnic: Modify buffer size and number of queues on failover
e791380340685698dbdd38c7e3f3fcbf70a3c832 ibmvnic: Revert to previous mtu when unsupported value requested
69d08dcbbe34347cbc044629cf6f25d062593dfe ibmvnic: Allocate and request vpd in init_resources
dd4ea1da12495e1b3c400a28df11528892199f68 bnxt_en: export a common switchdev PARENT_ID for all reps of an adapter
7992894c305eaf504d005529637ff8283d0a849d hv_netvsc: Split netvsc_revoke_buf() and netvsc_teardown_gpadl()
106840c41096a01079d3a2025225029c13713802 crypto: aesni - fix typo in generic_gcmaes_decrypt
d5bf4b7f437c250821d40c3e32158729e6b484ce nvme-rdma: fix concurrent reset and reconnect
c73455e1b5ef165aed82e36ae04e74a71d2d7d5b scsi: lpfc: FLOGI failures are reported when connected to a private loop.
c1dd9111b7f78a90bccd2e4abb9b9bb6319a4c64 scsi: lpfc: Fix SCSI io host reset causing kernel crash
6727bb9c6abe836d88191ce13bfdd7a53c245e15 kernel/module.c: avoid ifdefs for sig_enforce declaration
21b5944350052d2583e82dd59b19a9ba94a007f0 net: Fix double free and memory corruption in get_net_ns_by_id()
01c15e93a78cfcf45cc32d07aa38bdc84250f569 nfp: flower: prioritize stats updates
dc4646a950153242313ed340f0a404de38b21d5c nfp: flower: vxlan - ensure no sleep in atomic context
11b2b653102571ac791885324371d9a1a17b900e hv_netvsc: Fix the receive buffer size limit
4991c09c7c812dba13ea9be79a68b4565bb1fa4e mm/mprotect: add a cond_resched() inside change_pmd_range()
5b999aadbae65696a148f55250d94b6f3d74071e mm: swap: zswap: maybe_preload & refactoring
f23d74f6c66c3697e032550eeef3f640391a3a7d x86/mm: Rework wbinvd, hlt operation in stop_this_cpu()
62822e2ec4ad091ba31f823f577ef80db52e3c2c PM / hibernate: Restore processor state before using per-CPU variables
62a67e123e058a67db58bc6a14354dd037bafd0a x86/cpu: Merge bugs.c and bugs_64.c
87590ce6e373d1a5401f6539f0c59ef92dd924a9 sysfs/cpu: Add vulnerability folder
61dc0f555b5c761cdafb0ba5bd41ecf22d68a4c4 x86/cpu: Implement CPU vulnerabilites sysfs functions
da285121560e769cc31797bba6422eea71d473e0 x86/spectre: Add boot time option to select Spectre v2 mitigation
39b735332cb8b33a27c28592d969e4016c86c3ea objtool: Detect jumps to retpoline thunks
6d01f28bc08814abc7b8f8973cc71195537f4c80 objtool: Support new GCC 6 switch jump table pattern
f005f5d860e0231fe212cfda8c1a3148b99609f4 x86/asm: Make asm/alternative.h safe from assembly
76b043848fd22dbf7f8bf3a1452f8c70d557b860 x86/retpoline: Add initial retpoline support
2641f08bb7fc63a636a2b18173221d7040a3512e x86/retpoline/entry: Convert entry assembler indirect jumps
9351803bd803cdbeb9b5a7850b7b6f464806e3db x86/retpoline/ftrace: Convert ftrace assembler indirect jumps
e70e5892b28c18f517f29ab6e83bd57705104b31 x86/retpoline/hyperv: Convert assembler indirect jumps
ea08816d5b185ab3d09e95e393f265af54560350 x86/retpoline/xen: Convert Xen hypercall indirect jumps
117cc7a908c83697b0b737d15ae1eb5943afe35b x86/retpoline: Fill return stack buffer on vmexit
28d437d550e1e39f805d99f9f8ac399c778827b7 x86/retpoline: Add LFENCE to the retpoline/RSB filling RSB macros
6f41c34d69eb005e7848716bbcafc979b35037d5 x86/mce: Make machine check speculation protected
3f7d875566d8e79c5e0b2c9a413e91b2c29e0854 x86/retpoline: Optimize inline assembler for vmexit_fill_RSB
1a29b5b7f347a1a9230c1e0af5b37e3e571588ab KVM: x86: Make indirect calls in emulator speculation safe
55fa19d3e51f33d9cd4056d25836d93abf9438db x86/bugs: Drop one "mitigation" from dmesg
21db79e8bb054d0351a6b1b464f1c9c47a2e6e8d kexec: add a kexec_crash_loaded() function
097114aa6eb2aa206c8cf136de77ebffe424234c print kdump kernel loaded status in stack dump
50a671d4d15b859f447fa527191073019b6ce9cb KVM: x86: Fix CPUID function for word 6 (80000001_ECX)
a05917b6ba9dc9a95fc42bdcbe3a875e8ad83935 x86/fpu: Fix get_xsave_addr() behavior under virtualization
553953453b4b64fbccba31691257d006cee36613 cpufreq: intel_pstate: Use load-based P-state selection more widely
4e59532541c865c85c92d42be4edf2ba6aa4af64 nfp: don't depend on compiler constant propagation
51ccc37d9d3392884024b272089fd3e864d3cf3c nfp: refactor nfp_app_reprs_set
5fa27d59af2a36c32156e56b6370387f60b67052 nfp: resync repr state when port table sync
a564d30ec2b859205d5fdd521df3fb6d342dc461 nfp: add get/set link settings ndos to representors
b471232e2caa054e006fa4b5fd4bf15544b00b0f nfp: add helpers for FEC support
0d08709383377087bc50825db4b47c058c7ab70a nfp: implement ethtool FEC mode settings
667257e8b2988c0183ba23e2bcd6900e87961606 block: properly protect the 'queue' kobj in blk_unregister_queue
2c2086afc2b8b974fac32cb028e73dc27bfae442 block: Protect less code with sysfs_lock in blk_{un,}register_queue()
fa70d2e2c4a0a54ced98260c6a176cc94c876d27 block: allow gendisk's request_queue registration to be deferred
c100ec49fdd2222836ff8a17c7bfcc7611d2ee2b dm: fix incomplete request_queue initialization
3515832cc61467bfb87191a30401de1700e9956a scsi: qla2xxx: Reset the logo flag, after target re-login.
a2390348c19d0819d525d375414a7cfdacb51a68 scsi: qla2xxx: Fix logo flag for qlt_free_session_done()
2ce87cc5b269510de9ca1185ca8a6e10ec78c069 scsi: qla2xxx: Fix memory corruption during hba reset test
dce2630c7da73b0634686bca557cc8945cc450c8 NFSv4: always set NFS_LOCK_LOST when a lock is lost.
5bffee867df7494ecd32c1e6ec4e8fc934c521b7 dma-buf: fix reservation_object_wait_timeout_rcu once more v2
76ff359249f1e80ff0d6ced3b52b1088c4e61b9b KVM: SVM: Add Virtual VMLOAD VMSAVE feature definition
5442c26995527245c94c4a49e535eae8a60a5299 x86/cpufeature, kvm/svm: Rename (shorten) the new "virtualized VMSAVE/VMLOAD" CPUID flag
d837312dfd5bed79ff6576e83dda3cddbe5c7ec7 KVM: SVM: Add Virtual GIF feature definition
640bd6e5752274f7dbd2a0a6642fe2db85813bd9 KVM: SVM: Enable Virtual GIF feature
8e3f1b1d8255105f31556aacf8aeb6071b00d469 powerpc/powernv/pci: Enable 64-bit devices to access >4GB DMA space
3214d01f139b7544e870fc0b7fcce8da13c1cb51 KVM: PPC: Book3S: Provide information about hardware/firmware CVE workarounds
6502ad5963a5307089bed395f63173e34cb251ea bnxt_en: Add ETH_RESET_AP support
ebd5818cc5d4847897d7fe872e2d9799d7b7fcbb bnxt_en: Fix a variable scoping in bnxt_hwrm_do_send_msg()
e9ecc731a87912d209d6e9b4ed20ed70451c08cb bnxt_en: fix dst/src fid for vxlan encap/decap actions
c8fb7b8259c67b86cd93a71c85e78b34d2c96fdc bnxt_en: wildcard smac while creating tunnel decap filter
92425c40676d498efccae6fecdb8f8e4dcf7e4a4 bnxt_en: Uninitialized variable in bnxt_tc_parse_actions()
7edaeb6841dfb27e362288ab8466ebdc4972e867 kernel/watchdog: Prevent false positives with turbo modes
bdcf0a423ea1c40bbb40e7ee483b50fc8aa3d758 kernel: make groups_sort calling a responsibility group_info allocators
4b27db7e26cdb9deb4a211e963e2993fde0110cb acpi, nfit: add support for the _LSI, _LSR, and _LSW label methods
0e7f0741450b1b800b3acfc2319e7f24e8a20fcf acpi, nfit: validate commands against the device type
16981d763501c0e06e434cf6b59f964c520e0ccc mm: improve readability of transparent_hugepage_enabled()
baabda261424517110ea98c6651f632ebf2561e3 mm: always enable thp for dax mappings
1995266727fa8143897e89b55f5d3c79aa828420 nfsd: auth: Fix gid sorting when rootsquash enabled
da4759c73b0f1aac79f37bdb39ad2124439c30e7 sysfs: Use only return value from is_visible for the file mode
d7cdee5ea8d28ae1b6922deb0c1badaa3aa0ef8c cls_u32: fix use after free in u32_destroy_key()
3d1661304f0b2b51a8a43785b764822611dbdd53 ibmvnic: Fix pending MAC address changes
09fb35ead58cd557aa9b20576d15816bc91a4deb ibmvnic: Don't handle RX interrupts when not up.
f813614f531114db796ad66ced75c5dc8db7aa3a ibmvnic: Wait for device response when changing MAC
acfc587810bea08fdd62c9d5ed7cefe8be874a4f crypto: gf128mul - The x8_ble multiplication functions
de1a00ac7da115ccafb4415364d484834638aa7f crypto: chelsio - Use x8_ble gf multiplication to calculate IV.
1303880179e67c59e801429b7e5d0f6b21137d99 x86/mm: Clean up register saving in the __enc_copy() assembly code
bacf6b499e11760aef73a3bb5ce4e5eea74a3fd4 x86/mm: Use a struct to reduce parameters for SME PGD mapping
2b5d00b6c2cdd94f6d6a494a6f6c0c0fc7b8e711 x86/mm: Centralize PMD flags in sme_encrypt_kernel()
cc5f01e28d6c60f274fd1e33b245f679f79f543c x86/mm: Prepare sme_encrypt_kernel() for PAGE aligned encryption
107cd2532181b96c549e8f224cdcca8631c3076b x86/mm: Encrypt the initrd earlier for BSP microcode update
91cfc88c66bf8ab95937606569670cf67fa73e09 x86: Use __nostackprotect for sme_encrypt_kernel
12c69f1e94c89d40696e83804dd2f0965b5250cd x86/paravirt: Remove 'noreplace-paravirt' cmdline option
8ab867cb0806a8e195de161fd8883a0578d1d050 s390/mm: fix BUG_ON in crst_table_upgrade
c4684f98d3453dd07cc7ce67e0e795330eeec9c5 s390/crypto: fix aes/paes Kconfig dependeny
e63ed0d7a98014fdfc2cfeb3f6dada313dcabb59 [SCSI] fix our current target reap infrastructure
8d7b8fafad87c3404f72ce2d36c79c48be1129a6 nvme: kick requeue list when requeueing a request instead of when starting the queues
556b969a1cfe2686aae149137fa1dfcac0eefe54 PM/hibernate: touch NMI watchdog when creating snapshot
ccd5b3235180eef3cfec337df1c8554ab151b5cc x86/mm: Fix use-after-free of ldt_struct
363a044f739b0f07a8c063b838c5528d10720e02 memcg, slab: kmem_cache_create_memcg(): fix memleak on fail path
1aa13254259bdef0bca723849ab3bab308d2f0c3 memcg, slab: clean up memcg cache initialization/destruction
2edefe1155b3ad3dc92065f6e1018d363525296e memcg, slab: fix races in per-memcg cache creation/destruction
b8529907ba35d625fa4b85d3e4dc8021be97c1f3 memcg, slab: do not destroy children caches if parent has aliases
7deea450eb912f269d999de62c8ab922d1461748 bnxt_en: Fix population of flow_type in bnxt_hwrm_cfa_flow_alloc()
452308de61056a539352a9306c46716d7af8a1f1 x86/efi: Fix boot crash by always mapping boot service regions into new EFI page tables
9d0ca444d0b317d31acf6f8fc18ac6f478518924 s390/gs: add compat regset for the guarded storage broadcast control block
a6f485908d5210a5662f7a031bd1deeb3867e466 xfs: include inobt buffers in ifree tx log reservation
e8341d9f6348640dff01d8c4a33695dc82bab5a3 xfs: fix up agi unlinked list reservations
a606ebdb859e78beb757dfefa08001df366e2ef5 xfs: truncate transaction does not modify the inobt
f03c78f39710995d2766236f229295d91b8de9dd xfs: include an allocfree res for inobt modifications
57af33e451b73f56feb428f5856cdf6e4e0c60cd xfs: refactor inode chunk alloc/free tx reservation
c017cb5ddfd6326032570d5eba83308c8a9c13a9 xfs: eliminate duplicate icreate tx reservation functions
7d1e5cdf01789729aff2da4005f51f58b491040c drm/i915/gvt: Factor intel_vgpu_page_track
4fafba2d73fcaf1b433c26e753a98ad4b231754a drm/i915/gvt: move write protect handler out of mmio emulation function
eb53f7af6f15285e2f6ada97285395343ce9f433 net/sched: cls_u32: fix cls_u32 on filter replace
17af2bce88d31e65ed73d638bb752d2e13c66ced macvtap: add namespace support to the sysfs device class
61fcf8ece9b6b09450250c4ca40cc3b81a96a68d ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform
f9d8adb345d7adbb2d3431eea73beb89c8d6d612 perf evsel: Fix swap for samples with raw data
e959ed9a44c5239863ca6db42cb37130bee3c7a3 scsi_dh: add a common helper to get a scsi_device from a request_queue
857de6e00778738dc3d61f75acbac35bdc48e533 scsi: use 'scsi_device_from_queue()' for scsi_dh
0868b99c214a3d55486c700de7c3f770b7243e7c md: free unused memory after bitmap resize
66ed4cac669cae8870b13511492ff1d41f49179a mailbox: pcc: Drop uninformative output during boot
d7b65aee1e7b4c87922b0232eaba56a8a143a4a0 crypto: algif_skcipher - Remove custom release parent function
0aed55af88345b5d673240f90e671d79662fb01e x86, uaccess: introduce copy_from_iter_flushcache for pmem / cache-bypass operations
c8401dda2f0a00cd25c0af6a95ed50e478d25de4 KVM: x86: fix singlestepping over syscall
89271c65edd599207dd982007900506283c90ae3 s390/qeth: fix underestimated count of buffer elements
a107311d7fdf6b826f3737c4a90fd0e0046e7a3a ibmvnic: fix firmware version when no firmware level has been provided by the VIOS server
21a2545bbea02ce39e91d47c9e3ef0ccd0fb0b14 ibmvnic: fix empty firmware version and errors cleanup
b0992eca00c490c0923044b7d8b853c212b3cacc ibmvnic: Ensure that buffers are NULL after free
faefaa97215a0c05105d7ae180fe1a3b5979ad1f ibmvnic: Reset long term map ID counter
e8b43fe0c1e035a135be7ca3791d465fcb1b501e gfs2: Clean up {lookup,fillup}_metapath
73f576c04b9410ed19660f74f97521bee6e1c546 mm: memcontrol: fix cgroup creation failure after many small jobs
cc85c02edfe48a34865ae00f7d22298a3fdd17aa ibmvnic: Wait until reset is complete to set carrier on
34f0f4e3f48810b0ba080bf2a65370b0cc179c51 ibmvnic: Fix login buffer memory leaks
6e4842ddfc2b08931ebd6c0bc95322dd56e5232b ibmvnic: Fix NAPI structures memory leak
d0869c0071e40c4407d1a4d7c9497653cf47253b ibmvnic: Clean RX pool buffers during device close
95ca0ee8636059ea2800dfbac9ecac6212d6b38f x86/cpufeatures: Add CPUID_7_EDX CPUID leaf
5d10cbc91d9eb5537998b65608441b592eec65e7 x86/cpufeatures: Add AMD feature bits for Speculation Control
fc67dd70adb711a45d2ef34e12d1a8be75edde61 x86/cpufeatures: Add Intel feature bits for Speculation Control
2961298efe1ea1b6fc0d7ee8b76018fa6c0bcef2 x86/cpufeatures: Clean up Spectre v2 related CPUID flags
7fcae1118f5fd44a862aa5c3525248e35ee67c3b x86/cpuid: Fix up "virtual" IBRS/IBPB/STIBP feature bits on Intel
b7b27aa011a1df42728d1768fc181d9ce69e6911 KVM/x86: Update the reverse_cpuid list to include CPUID_7_EDX
1279a6b124e4c93fac161dd3e481a24a423551c0 KVM: nVMX: single function for switching between vmcs
00647b44944a2f7212ac2c3825a465153d6e438f KVM: nVMX: Eliminate vmcs02 pool
f21f165ef922c2146cc5bdc620f542953c41714b KVM: VMX: introduce alloc_loaded_vmcs
904e14fb7cb96401a7dc803ca2863fd5ba32ffe6 KVM: VMX: make MSR bitmaps per-VCPU
15d45071523d89b3fb7372e2135fbd72f6af9506 KVM/x86: Add IBPB support
d28b387fb74da95d69d2615732f50cceb38e9a4d KVM/VMX: Allow direct access to MSR_IA32_SPEC_CTRL
206587a9fb764d71f035dc7f6d3b6488f5d5b304 X86/nVMX: Properly set spec_ctrl and pred_cmd before merging MSRs
74c55931c71352317ae0f5736ee9e4ca07ba4238 KVM: VMX: Cache IA32_DEBUGCTL in memory
fd6e440f20b1a4304553775fc55938848ff617c9 powerpc/64s: Wire up cpu_show_meltdown()
bdcb1aefc5b3f7d0f1dc8b02673602bca2ff7a4b powerpc/64s: Improve RFI L1-D cache flush fallback
236003e6b5443c45c18e613d2b0d776a9f87540e powerpc/64s: Allow control of RFI flush via debugfs
da1e148803e0b98961599b0295418bb7a8fc79f3 dm raid: fix incorrect sync_ratio when degraded
fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a futex: Prevent overflow by strengthen input validation
a1dfb4c48cc1e64eeb7800a27c66a6f7e88d075a media: v4l2-compat-ioctl32.c: refactor compat ioctl32 logic
49edd5bf429c405b3a7f75503845d9f66a47dd4b gfs2: Fixes to "Implement iomap for block_map"
7dd1ab163c17e11473a65b11f7e748db30618ebb nvme: validate admin queue before unquiesce

__CHANGES NOT IN UPSTREAM________________
Apply debranding changes'
ixgbevf: Add check for ixgbe_mbox_api_13 to ixgbevf_probe when setting max_mtu
pti: Disable PTI user page table update in EFI virtual mode
kvm: svm: disable virtual GIF and VMLOAD/VMSAVE
Revert dcache_readdir back to ->readdir()
revert kvmalloc: stress the vmalloc path in the debugging kernel
spec_ctrl: avoid rmb() on full retpoline kernels
spec_ctrl: replace boot_cpu_has with a static key for IBRS checks
spec_ctrl: actually use static key for retpolines
kvm: vmx: optimize IBRS handling at vmenter/vmexit
kvm: vmx: mark RDMSR path as unlikely
kvm: use native_read_msr to read SPEC_CTRL
cpu: Fill in feature word 13, CPUID_8000_0008_EBX
revert perf: Fix swap for samples with raw data
revert cgroup: kill css_id
disable only ghes_edac by default
raid0: remove blank line printk from dump_zones()
kvmalloc: stress the vmalloc path in the debugging kernel
fs: rework do_invalidatepage
netfilter: fix NULL ptr dereference in nf_send_reset()
ipoib: Add ipoib_enhanced module parameter
mlx5e: Fix offloading of E-Switch TC pedit actions
qed: Correct setting the number of completion queues for FCoE functions
paravirt: fix kabi breakage in pv_mmu_ops
spectre: fix the kernel build without CONFIG_RETPOLINE
rng: prevent entry into drbg test path from algif_rng
alsa: seq: Make ioctls race-free (CVE-2018-1000004)
intel_rdt/cqm: avoid negative static key counts
genirq/affinity: avoid deadlock in pci_alloc_irq_vectors_affinity
blk-mq: avoid IO hang during CPU hotplug by freezing queues in order
dual scan thread bug fix
chelsio - Fix memory leak
ixgbe: Set DMA attributes individually
doc change updates expected cur_state behavior
Add PCI ID for Cannon Lake and Coffee Lake
fix collision between DAX PMD and PTEs
lockdep: Increase MAX_STACK_TRACE_ENTRIES for debug kernel
kvm: svm: Fix up enable_smi_window due to out-of-order backport
fpu: Use early_param() for clearcpuid
qla2xxx: Update driver version
intel_pstate: Remove use of get_target_pstate_use_cpu_load(()
Fix intel_pstate driver
hpwdt: remove indirect call in watchdog/hpwdt.c
x86/spec_ctrl: cleanup __ptrace_may_access
spec_ctrl: fix ptrace IBPB optimization
spec_ctrl: Avoid returns in IBRS-disabled regions
spectre/meltdown: avoid the vulnerability directory to weaken kernel security
unwind: fix livepatch regression with CALL_NOSPEC macro
spec_ctrl: Document retpolines and ibrs_enabled=3
spec_ctrl: upgrade GCC retpoline warning to an error
Use IBRS for firmware update path
spec_ctrl: stuff RSB on context switch with SMEP enabled
spec_ctrl: enforce sane combinations of IBRS and retpoline
spec_ctrl: use upstream RSB stuffing function
spec_ctrl: add ibrs_enabled=3 (ibrs_user)
x86/jump_label: warn on failed jump label patch
spec_ctrl: detect unretpolined modules
jump_label: add asm support for static keys
spec_ctrl: print features changed by microcode loading
spec_ctrl: refactor the init and microcode loading paths
spec_ctrl: move initialization of X86_FEATURE_IBPB_SUPPORT
spec_ctrl: remove SPEC_CTRL_PCP_IBPB bit
spec_ctrl: remove ibrs_enabled variable
spec_ctrl: add ibp_disabled variable
spec_ctrl: add X86_FEATURE_IBP_DISABLE
spec_ctrl: remove IBP disable for AMD model 0x16
spec_ctrl: remove performance measurements from documentation
spec_ctrl: make ipbp_enabled read-only
spec_ctrl: remove ibpb_enabled=2 mode
disable ECDH and DH in FIPS mode
pti/mm: Fix trampoline stack problem with XEN PV
rdma/bnxt_re: Fix the RoCE firmware version reported
sysfs: Do not warn about missing kernfs_node if kobj is not active
blk-mq: don't allow write on attributes of .seq_ops
btt: fix uninitialized err_lock
aesni: add wrapper for generic gcm(aes)
hv_netvsc: Change GPADL teardown order according to Hyper-V version
openvswitch: fix list corruption on force commit
support 10 bit and slave
locking/qspinlock: Fix kabi problem in a non-KVM/XEN VM
chcr - Fix Smatch Complaint
chcr - Change algo priority
chcr - Add AEAD algos
Call wait_barrier twice when underlaying device is blocked
blk-mq: set mq-deadline as default scheduler for single queue device
dm mpath: backport blk_path_error()
move split_huge_page_pud/pmd sanity checks under the pte lock
syscall: int80 must not clobber r12-15
syscall: change ia32_syscall() to create the full register frame in ia32_do_call()
dm raid: avoid keeping raid set frozen
power turbostat: Make turbostat quiet by default
rapl: handle missing MSRs
rapl: reduce ipi calls
blk-mq: make sure the variable of 'blk_mq_aux_ops' is per variable of 'blk_mq_ops'
bus: don't warn on deferred probe
rdma/bnxt_re: Make room for mapping HW contexts beyond 32 entries
Mark TB3 as tech_preview
create empty dmi_table
Fix reset response_type
Allow clearing the key
Make key root-only accessible
Remove superfluous check
icm: Ignore mailbox errors in icm_suspend()
use uuid_t instead of uuid_be
Add support for NHI mailbox
Add new Thunderbolt PCI IDs
Rework control channel to be more reliable
Expose make_header() to other files
Expose get_route() to other files
Move control channel messages to tb_msgs.h
Read vendor and device name from DROM
Refactor and fix parsing of port drom entries
Do not fail if DROM data CRC32 is invalid
Convert switch to a device
Allow passing NULL to tb_ctl_free()
Rework capability handling
Add MSI-X support
Do not warn about newer DROM versions
Use const buffer pointer in write operations
Macro rename
Compile on x86 only
efi: Fix Kconfig dependencies harder
Use Device ROM retrieved from EFI
Don't declare Falcon Ridge unsupported
Add support for INTEL_FALCON_RIDGE_2C controller
Fix double free of drom buffer
Support 1st gen Light Ridge controller
Fix typos and magic number
Clear hops before overwriting
Use kcalloc
Correct the size argument to devm_kzalloc
select CRC32 in Kconfig
Make tb_eeprom_get_drom_offset static
Make enum tb_drom_entry_type unsigned
Fix header declaration of tb_find_cap
Add casts to prevent endianness warnings
fix format string for size_t
add PCI dependency
Staticize nhi_ids
Use NULL instead of 0 in nhi.c
Use NULL instead of 0 in ctl.c
Use NULL instead of 0 in switch.c
Fix build error in switch.c
Fix build error in eeprom.c
Fix nontrivial endpoint devices
Read port configuration from eeprom
Add suspend/hibernate support
Read switch uid from EEPROM
Add support for simple pci tunnels
Add path setup code
Handle hotplug events
Scan for downstream switches
Enable plug events
Add thunderbolt capability handling
Initialize root switch and ports
Add tb_regs.h
Setup control channel
Add control channel interface
Add initial cactus ridge NHI support
add .ndo_size to struct i40evf_netdev_ops
mlx4_en: Fix the use of ndo_change_mtu
mlx5e: Fix the use of ndo_change_mtu
firmware: define a facade for request_firmware_direct()
revert "include linux/if.h, linux/ip.h and linux/in6.h"
mlxsw: include explicitly linux/if.h to avoid build failure
hyper-v: do kaiser_add_mapping() for HVCLOCK_TSC_PAGE
spec_ctrl: move vmexit rmb in the last branch before IBRS
spec_ctrl: satisfy the barrier like semantics of IBRS
add ppa to system call and program check path
spinlock: add gmb memory barrier
spinlock: add gmb memory barrier
Prevent Meltdown attack with L1-D$ flush
locking/barriers: prevent speculative execution based on Coverity scan results
x86/spec_ctrl: don't call ptrace_has_cap in the IBPB ctx switch optimization
kaiser/efi: unbreak tboot
cpuidle_idle_call: fix double local_irq_enable()
x86/kaiser/efi: unbreak EFI old_memmap
idr_ext: Refactor idr_alloc_ext(), remove cast from idr_get_next_ext()
preserve behavior of ether_setup and allocate_etherdev_mqs
aesni: fix ivsize for generic gcm(aes)
mnt: Take unprivileged use of the mntns out of tech preview
mnt: Make may_detach_mounts one-way and use it in copy_mnt_ns
kernfs: Now that kernfs has been rebuilt reenable INTEL_RDT
sysfs: Update __compat_only_sysfs_link_entry_to_kobj to it\'s upstream form
kernfs: Temporarily remove kernfs the change from sysfs to kernfs can be replayed
sysfs: Remove namespace handling from __compat_only_sysfs_link_entry_to_kobj
convert sysfs
overlayfs: Replace vfs_readdir with iterate_dir
entry: Invoke TRACE_IRQS_IRETQ in paranoid_userspace_restore_all
cpu: fix get_scattered_cpu_leaf for IBPB feature
spec_ctrl: show added cpuid flags in /proc/cpuinfo after late microcode update
spec_ctrl: svm: spec_ctrl at vmexit needs per-cpu areas functional
mm/kaiser: init_tss is supposed to go in the PAGE_ALIGNED per-cpu section
spec_ctrl: Eliminate redundnat FEATURE Not Present messages
kaiser/mm: skip IBRS/CR3 restore when paranoid exception returns to userland
spec_ctrl: set IBRS during resume from RAM if ibrs_enabled is 2
spec_ctrl: allow use_ibp_disable only if both SPEC_CTRL and IBPB_SUPPORT are missing
spec_ctrl: Documentation spec_ctrl.txt
spec_ctrl: remove irqs_disabled() check from intel_idle()
spec_ctrl: use enum when setting ibrs/ibpb_enabled
spec_ctrl: undo speculation barrier for ibrs_enabled and noibrs_cmdline
spec_ctrl: introduce ibpb_enabled = 2 for IBPB instead of IBRS
spec_ctrl: introduce SPEC_CTRL_PCP_ONLY_IBPB
spec_ctrl: cleanup s/flush/sync/ naming when sending IPIs
spec_ctrl: set IBRS during CPU init if in ibrs_enabled == 2
spec_ctrl: use IBRS_ENABLED instead of 1
spec_ctrl: allow the IBP disable feature to be toggled at runtime
spec_ctrl: always initialize save_reg in ENABLE_IBRS_SAVE_AND_CLOBBER
spec_ctrl: ibrs_enabled() is expected to return > 1
spec_ctrl: issue a __spec_ctrl_ibpb if a credential check isn't possible
ibpb: don't optimize spec_cntrl_ibpb on PREEMPT_RCU
spec_ctrl: clear registers after 32bit syscall stackframe is setup
spec_ctrl: reload spec_ctrl cpuid in all microcode load paths
spec_ctrl: Prevent unwanted speculation without IBRS
entry: Remove trampoline check from paranoid entry path
entry: Fix paranoid_exit() trampoline clobber
entry: Simplify trampoline stack restore code
spec_ctrl: remove SPEC_CTRL_DEBUG code
spec_ctrl: add noibrs noibpb boot options
syscall: Clear unused extra registers on 32-bit compatible syscall entrance
spec_ctrl: cleanup unnecessary ptregscall_common function
spec_ctrl: CLEAR_EXTRA_REGS and extra regs save/restore
syscall: Clear unused extra registers on syscall entrance
spec_ctrl: rescan cpuid after a late microcode update
spec_ctrl: add debugfs ibrs_enabled ibpb_enabled
spec_ctrl: consolidate the spec control boot detection
kvm/spec_ctrl: allow IBRS to stay enabled in host userland
spec_ctrl: add debug aid to test the entry code without microcode
spec_ctrl: move stuff_RSB in spec_ctrl.h
entry: Stuff RSB for entry to kernel for non-SMEP platform
mm: Only set IBPB when the new thread cannot ptrace current thread
mm: Set IBPB upon context switch
idle: Disable IBRS when offlining cpu and re-enable on wakeup
idle: Disable IBRS entering idle and enable it on wakeup
spec_ctrl: implement spec ctrl C methods
spec_ctrl: save IBRS MSR value in save_paranoid for NMI
enter: Use IBRS on syscall and interrupts
spec_ctrl: swap rdx with rsi for nmi nesting detection
spec_ctrl: spec_ctrl_pcp and kaiser_enabled_pcp in same cachline
spec_ctrl: use per-cpu knob instead of ALTERNATIVES for ibpb and ibrs
enter: MACROS to set/clear IBRS and set IBPB
kvm: x86: add SPEC_CTRL to MSR and CPUID lists
kvm: svm: add MSR_IA32_SPEC_CTRL and MSR_IA32_PRED_CMD
svm: Set IBPB when running a different VCPU
kvm: vmx: add MSR_IA32_SPEC_CTRL and MSR_IA32_PRED_CMD
kvm: vmx: Set IBPB when running a different VCPU
kvm: x86: clear registers on VM exit
kvm: Pad RSB on VM transition
cpu/amd: Control indirect branch predictor when SPEC_CTRL not available
feature: Report presence of IBPB and IBRS control
feature: Enable the x86 feature to control Speculation
objtool: Don't print 'call dest' warnings for ignored functions
udf: prevent speculative execution
fs: prevent speculative execution
userns: prevent speculative execution
qla2xxx: prevent speculative execution
p54: prevent speculative execution
carl9170: prevent speculative execution
uvcvideo: prevent speculative execution
cpu/amd: Remove now unused definition of MFENCE_RDTSC feature
cpu/amd: Make the LFENCE instruction serialized
locking/barriers: introduce new memory barrier gmb()
kaiser/mm: consider the init_mm.pgd a kaiser pgd
kaiser/mm: convert userland visible "kpti" name to "pti"
kaiser/mm: __load_cr3 in resume from RAM after kernel gs has been restored
kaiser/mm: fix pgd freeing in error path
mm/kaiser: disable global pages by default with KAISER
revert "x86/mm/kaiser: Disable global pages by default with KAISER"
mm/kaiser: Replace kaiser with kpti to sync with upstream
mm/kaiser: add "kaiser" and "nokaiser" boot options
mm/kaiser: map the trace idt tables in userland shadow pgd
mm/kaiser: fix RESTORE_CR3 crash in kaiser_stop_machine
x86/mm/kaiser: use stop_machine for enable/disable knob
mm/kaiser: use atomic ops to poison/unpoison user pagetables
mm/kaiser: use invpcid to flush the two kaiser PCID AISD
mm/kaiser: use two PCID ASIDs optimize the TLB during enter/exit kernel
mm/kaiser: stop patching flush_tlb_single
mm/kaiser: use PCID feature to make user and kernel switches faster
mm/kaiser: validate trampoline stack
x86/mm/kaiser: isolate the user mapped per cpu areas
mm/kaiser: selective boot time defaults
mm/kaiser: handle call to xen_pv_domain() on PREEMPT_RT
mm/kaiser/xen: Dynamically disable KAISER when running under Xen PV
mm/kaiser: avoid false positives during non-kaiser pgd updates
mm/kaiser: Respect disabled CPU features
mm/kaiser: trampoline stack comments
mm/kaiser: stack trampoline
mm/kaiser: remove paravirt clock warning
mm/kaiser: re-enable vsyscalls
mm/kaiser: allow to build KAISER with KASRL
mm/kaiser: allow KAISER to be enabled/disabled at runtime
mm/kaiser: un-poison PGDs at runtime
mm/kaiser: add a function to check for KAISER being enabled
mm/kaiser: add debugfs file to turn KAISER on/off at runtime
mm/kaiser: disable native VSYSCALL
mm/kaiser: map virtually-addressed performance monitoring buffers
mm/kaiser: map debug IDT tables
mm/kaiser: add kprobes text section
mm/kaiser: map trace interrupt entry
mm/kaiser: map entry stack per-cpu areas
mm/kaiser: map dynamically-allocated LDTs
mm/kaiser: make sure static PGDs are 8k in size
mm/kaiser: unmap kernel from userspace page tables (core patch)
mm/kaiser: mark per-cpu data structures required for entry/exit
mm/kaiser: introduce user-mapped per-cpu areas
mm/kaiser: add cr3 switches to entry code
mm/kaiser: remove scratch registers
mm/kaiser: prepare assembly for entry/exit CR3 switching
mm/kaiser: Disable global pages by default with KAISER
mm: Document X86_CR4_PGE toggling behavior
mm/tlb: Make CR4-based TLB flushes more robust
mm: Do not set _PAGE_USER for init_mm page tables
increase robusteness of bad_iret fixup handler
intel_pstate: Broxton support
fw_cfg: do DMA read operation
nfp: flower: improve hashing of flows
revert I2C updates changeset
ntc_thermistor: Fix dependencies
tcmu: sync up configfs attr setup
tcmu: add io size helpers
qla2xxx: Revert Add FC-NVMe command handling
qla2xxx: Revert avoid unused-function warning
qla2xxx: Revert Cleanup FC-NVMe code
qla2xxx: Revert Fix WWPN/WWNN in debug message
qla2xxx: Revert add missing includes for qla_isr
qla2xxx: Revert Clear fc4f_nvme flag
qla2xxx: Revert Add support for minimum link speed
qla2xxx: Revert Allow SCSI-MQ to be enabled selectively
qla2xxx: Revert Move #include qla_nvme.h to fix compile errors on RHEL 7
qla2xxx: Revert Update driver version to 10.00.00.00.07.5-k
qla2xxx: Revert Add module param ql2xenablemsix
qla2xxx: Revert Add ATIO-Q processing for INTx mode
qla2xxx: Revert Changes to support N2N logins
qla2xxx: Revert Update driver version to 10.00.00.02.07.5-k
ib/opa-vnic: used RHEL extended struct for min/max_mtu params
hpsa: bump driver version to 3.4.20-0-RH2
Mark Cascade Lake as unsupported
fix relationship between wait_barrier and allow_barrier
mddev->writes_pending is incorrect
netfilter: ipset: Fix allocation size of prefixes storage for hash:net, iface.t sets
dm: introduce upstream's cleanup_mapped_device()
Fix device_rh memory leak
revert "cgroup: kill css_id"
wait: fix bit_waitqueue() to allow the use of vmalloc'd memory
fanotify: fix up KABI breakage due to mnt_fsnotify_marks type change
fanotify: fix up KABI breakage due to i_fsnotify_marks type change
blk-mq: move .map_queues into aux_ops
blk-mq: move .reinit_request into aux_ops
blk-mq: introduce blk_mq_aux_ops
blk-mq: allocate space of 'request_aux' for flush rq
Mark Intel Gemini Lake supported
x86/entry: add a few missing unwinder annotations
x86/unwind: fix interrupt unwinding
Do not defer completion for fs without FS_HAS_DIO_IODONE2
shash - Fix has_key setting
iwlwifi: mvm: return -ENODATA when reading the temperature
iwlwifi: mvm: set status before calling
iwlwifi: mvm: initialize status in
Backport mac80211_hwsim driver from linux-4.14-rc2
Backport brcmsmac driver from linux-4.14-rc2
Backport brcmfmac driver from linux-4.14-rc2
Backport rtlwifi driver from linux-4.14-rc2
Backport rtl8187 driver from linux-4.14-rc2
Backport mwl8k driver from linux-4.14-rc2
Backport marvell driver from linux-4.14-rc2
Backport carl9170 driver from linux-4.14-rc2
Backport wil6210 driver from linux-4.14-rc2
Backport ath10k driver from linux-4.14-rc2
Backport ath9k driver from linux-4.14-rc2
Backport iwlegacy driver from linux-4.14-rc2
Backport iwlwifi driver from linux-4.14-rc2
Backport rt2x00 driver from linux-4.14-rc2
Backport mac80211 from linux-4.14-rc2
Backport wireless core from linux-4.14-rc2
Enable -Werror also for s390 builds in the main Makefile
crash_core: Fix warning about CRASH_CORE_NOTE_BYTES redefinition
module: Fix downstream-only compiler warning in find_module_sections()
Wire up seccomp syscall
kernel/ptrace: Move NT_S390_GS_CB/BC hunks to right table
msi: Silence compiler warning about unused variable on s390x
vmbus: Fix bugs in rescind handling
vmbus: Fix rescind handling issues
bnxt: use setup_timer() helper
nfp: convert to use .ndo_setup_tc_rh
nfp: enable CONFIG_NFP_APP_FLOWER
efi: Perform a single memremap() of efi memmap
efi: Mark any EFI boot services areas as encrypted before freeing
mm: Add invalid memory type to memremap_should_map_decrypted()
Use FIXMAP_PAGE_NOCACHE in set_fixmap_nocache()
serial/8250/8250_early: Use set_fixmap_io in serial driver
realmode: Fix decryption of trampoline area
xdp: Build a facade of the driver facing xdp code to ease backports
kabi: Adjust O_TMPFILE support to use kABI safe struct inode_operations_wrapper
Allow do_tmpfile set I_LINKABLE inode state
Implement O_TMPFILE
openvswitch: Avoid using stack larger than 1024
openvswitch: use __u32 from linux/types.h
openvswitch: remove extraneous include
kabi: add RH_KABI_CONST
act_tunnel_key: fix NULL pointer dereference in tunnel_key_release()
act_tunnel_key: fix wrong pointer dereference in tcf_idr_create()
rsa: Disable fips admission of rsa crypto
Add missing chunk from addition of zlib tests
qat - fix indentation
vfs: fix softlockup in shrink_dcache_for_umount()
revert "kvm: introduce guest count uevent"
e1000e: use setup_timer() helper
dax: fix DAX PMD pgoff usage
explicitly set noop_backing_dev_info
fix mock pmem_direct_access() implementation
Remove paravirt ops pmd_updateand pte_update_defer
update with WRITE_ONCE/READ_ONCE
skip VM_HUGETLB and VM_MIXEDMAP VMA for lazy mbind
revert "rhel: device-dax: only support page-sized faults"
fix pud fault fallback handling
fix pmd/pte fault fallback handling
change ->pmd_fault to ->huge_fault
x86/include/asm/pgtable.h: add pmd_for THP
mincore: add support for DAX huge page mappings
fix compilation issues is DAX PMD code
extend struct vm_fault
turbostat: Move functions to correct location
pvrdma: constify pci_device_id
nes: constify pci_device_id
mthca: constify pci_device_id
fixup wwid_show() check for null_uuid
generalize napi_complete_done()
update drivers to handle HWTSTAMP_FILTER_NTP_ALL
scsi_dh: move .rescan to an auxiliary structure
scsi_dh: fix RHEL7 kABI breakage
revert "scsi_dh_alua: Fix memory leak in alua_bus_attach()"
inet_diag: Fix up addresses in v4-mapped SYN-RECV TCP pseudo sockets
Fix panic due to NULL pointer dereference in __memcg_kmem_get_cache()
add addrconf.h to ip6_route.h
uverbs: Fix integer overflows
utilize the new cdev_set_parent function
xprtrdma: fix double include of module.h
vmw_pvrdma: fix [un]register_netdevice_notifier
ibmvnic: generalize napi_complete_done()
ibmvnic: constify vio_device_id
ibmvnic: use net core MTU range checking
zram, ppc64: enable zram on ppc64
cpuset: Add a dummy cgroup_on_dfl() function
xfs: add support for superblock writeback list
xfs: Add buffered IO support back to get_block for splice
x86/unwind: update unwinder for livepatch
x86/entry: annotate entry code call locations for livepatch unwinder
module: Add module_{enable,disable}_ro()
revert "dumpstack: Remove raw stack dump"
usb-storage: enable use of host wide tags for UAS driver
qmi_wwan: add QMI_QUIRK_SET_DTR for Telit PID 0x1201
i40evf: use setup_timer() helper
rename ndo_setup_tc callback and remove it from kABI
idr: implement extended variant of idr
allow configuring default qdisc
replace callings of .ndo_setup_tc by wrapper
kabi: prepare protection for struct Qdisc
kabi: remove RH_KABI_ macros from sch_generic.h
kabi: use different sch_generic.h for checksums generation
kabi: introduce shadow sch_generic.h for generating correct checksums
amd: don't sleep in invalid context
amd: fix pci device ids
revert "fix suspend/write deadlock"
revert "fix single core deadlock"
megaraid_sas: driver version 07.702.06.00-rh2
nvme-fabrics: fixup "nvme: add helper to compare options to controller"
nvme-fabrics: fixup "nvme: add hostid token to fabric options"
nvme-fc: fix backporting error
aesni: add generic gcm(aes)
aesni: fix build on x86 (32bit)
upstream sync to v4.14-rc4
upstream sync to v4.13
ghes: invert logic for enabling GHES
x86: cpufeature: Fix AMD AVIC bit
configs: Enable DEBUG_PAGEALLOC on debug kernels
scsi_dh_alua: Fix memory leak in alua_bus_attach()
module: Fix memory leakage of module_ext structure
ptrace: fix wait_on_bit(JOBCTL_TRAPPING_BIT) on big endian machines
fix deadlock when using dm-thin on loopback device
hid_wacom: revert hid_wacom: temporaly disable power_supply usage from driver
nf_log: Report attempt to load conflicting logger
perf/x86/msr: Merge fixes
move .issue_stat from request to request_aux
disable blk-stat
blk-mq: use rq_aux()->internal_tag
blk-mq: introduce request_aux
blk-tag: don't touch .internal_tag
configs: add CONFIG_BLK_DEBUG_FS
configs: add CONFIG_MQ_IOSCHED_KYBER
configs: add CONFIG_MQ_IOSCHED_DEADLINE
blk-mq-sched: mark_tech_preview on mq-deadline and kyber
blk-mq: fix another kabi warning
blk-mq: fix kabi warning
avoid to break kabi for blk-mq io scheduler backporting
call elevator callback via aux->ops
kyber: pass mq callback to aux->ops.mq
mq-deadline: pass mq callback to aux->ops.mq
cfq: pass new callback to aux->ops.sq
introduce elevator_type_aux for fixing kabi violation
blk-mq: use RH_KABI_EXTEND for sched_data and sched_tags
blk-mq-debugfs: remove poll_stat
scsi_error: fix nasty allocating request on stack
move rq_ioc() to blk.h
revert "blk-mq-tag: fix wakeup hang after tag resize"
mm: add page_cache_get_speculative() protection when .flush_tlb_others is overridden
mm: add IPIs to pmdp_invalidate() when .flush_tlb_others is overridden
rh_taint: Add management approval to documentation
hmm: synchronize hmm with upstream
tg3: use setup_timer() helper
enic: use setup_timer() helper
enic: use setup_timer() helper
hci_bcm: Support platform enumeration
bluecard: use setup_timer
hci_bcm: Fix clock (un)prepare
btqcomsmd: fix compile-test dependency
Add another AR3012 04ca:3018 device
btbcm: Add a delay for module reset
btusb: Add support for 413c:8143
btqcomsmd: Fix module autoload
btusb: add support for 0bb4:0306
i915: Revert "don\'t rcu-sync from shrinker"
cpu/hotplug: Disable prove_locking for cpu_hotplug.mutex
doc: add "an user" pattern and fix typo instances
qla2xxx: Add module param ql2xenablemsix
qla2xxx: Move #include qla_nvme.h to fix compile errors on RHEL 7
qla2xxx: Allow SCSI-MQ to be enabled selectively
configfs: make configfs compatible with new API
Remove no-op conditional
Bump core version to v5.0
consolidate version defines
simplify UNMAP handling
use 64-bit LUNs
Simplify LUN shutdown code
remove ->put_session method
don't copy fabric ops
fix DPO and FUA bit checks
Correct a comment
Add missing parentheses
Fix bidi command handling
Update fabric_ops to latest code
radix-tree: RHEL-only kABI patch
perf: Support to export MMCRAfield to userspace
perf: Power9 PMU support
Add POWER9 cputable entry
Add HWCAP bits for Power9
Fix suspend/resume
Use irte_ops->set_affinity() function hook
Handle 32 and 128-bit interrupt remapping table entry
x86/irq: Add struct amd_ir_data pointer in struct irq_2_irte
Simplify init function
Add MMIO mapping type
iova: Export symbols
netxen_nic: netxen_netdev_ops fields for MTU range checking
generalize napi_complete_done()
bnx2x: use setup_timer() helper
bnx2x: use core min/max MTU checking
bnx2x: make a couple of const arrays static
bnx2x: spelling: correct diffrentand banlance typos
bnx2x: generalize napi_complete_done()
kvm/x86: Avoid async PF to end RCU read-side critical section early in PREEMPT=n kernel
fix hot-unplug races in VT-d posted interrupt patches
use is_vlan_dev() helper function
hyper-v: hv_sock mark as Tech Preview
add and use skb_put_u8()
introduce and use skb_put_data()
skbuff: introduce skb_put_zero()
ether: MAC address helpers
ap_bus: remove 31 bit support
alsa - fix saa7134-alsa module unload oops
kaslr: Enable KASLR by default
udp: force symbol checksum change for lookup functions
revert: "udp_offload: put sk before returning"
sock: introduce sk_destruct()
udp6: Drop SCORE2_MAX optimization in socket lookup
alsa: SoC - codecs - regmap fix
alsa: SoC - codecs - fix the  of header files
alsa: SoC - Intel SST Haswell - add missing trace header file
alsa: asoc: da7213: Fix setting dmic_samplephase and dmic_clk_rate
alsa: asoc: codecs: Add da7213 codec
alsa: asoc: da7129: Add missing of acpi.h
alsa: asoc: intel: sst: remove unused 'ret_val'
alsa: revert "alsa: dmaengine: dw: pass platform data via struct dw_dma_chip"
alsa: of: errno.h in of_graph.h
alsa: of: Explicitly linux/types.h in of_graph.h
alsa: of: move common endpoint parsing to of
alsa: of: move graph helpers from media/v4l2-core to of
qla2xxx: Move initialization of work element earlier
lpfc: lpfc_get_wwpn at wrong offset
lpfc: Fix rejected nvme LS Req
lpfc version bump for rhel7.5 nvme to 11.2.0.11
Update lpfc version to 11.2.0.8 for rhel7.5 with NVME support
rhel-only: Add CONFIG_INFINIBAND_BNXT_RE
s390, ppc: Remove dma_supported for s390 and powerpc
Cleanup arch/s390/Kconfig DMA_ATTRS
lib: export udelay_simple for systemtap
page_cgroup: Fix Kernel bug during boot with memory cgroups enabled
fc: revise Create Association descriptor length
add sg_zero_buffer() helper
Fix APST comment
loop: remove unneeded
fix build with gcc-4.4.4
pci: correct hotplug related issues
stk1160: Remove '.' from Kconfig
x86/mm: add mcsafe exception table mechanism
libata: Fix device_rh removal warning
aquantia: use centralized core mtu check
aquantia: set net_device mtu when mtu is changed
aquantia: Fixes for aq_ndev_change_mtu
aquantia: Fix for multicast filter handling
aquantia: Fix for incorrect speed index
aquantia: Workaround for HW checksum bug
aquantia: Fix for number of RSS queues
aquantia: Extra spinlocks removed
update drivers to make both SW and HW TX timestamps
cxgbi: fix build with EXTRA_CFLAGS
bnx2: use setup_timer() helper
generalize napi_complete_done()
bnx2: RHEL only patch to use new min/max MTU code without breaking KABI
libceph: pg_upmapinfrastructure
liquidio: fix build errors when CONFIG_DYNAMIC_DEBUG=y and both PF and VF drivers are built as loadable modules
liquidio: handle HWTSTAMP_FILTER_NTP_ALL
liquidio: add explicit interrupt.h includes
liquidio: generalize napi_complete_done()
liquidio: use core min/max MTU checking
liquidio: replace netdev->trans_start update with helper
liquidio: use kzalloc in setup_glist()
reference new cavium directory in Makefile and Kconfig
smartpqi: remove sanitize_inquiry_string
i801: Cleanup Intel Kaby Lake support
rh_taint: Document functions
add definition of ETH_MAX_MTU
netvsc: rtnetlink.h
platform: Allocate rh extension to device struct earlier
x86/mm/kaslr: Do not adapt the size of the direct mapping section for SGI UV system
x86/uv: Introduce a helper function to check UV system at earlier stage
rcutree: Fix panic_on_rcu_stall()
ena: implement RHEL7.5 version of change_mtu
solve a NAPI race
megaraid: remove DRIVER_ATTR() usage
genirq: introduce _affinity version of irq_alloc_hwirq
cifs: RHEL 7 Changes to replace bvec iter
cifs: Add a modified cifs_read_page_from_socket()
cifs: RHEL 7 Changes to replace kvec iter
cifs: RHEL 7 modifications for aead differences
export alua support in configfs
l2cap: prevent stack overflow on incoming bluetooth packet
intel_pstate: Adjust _PSSfreqeuency if needed
handle empty message in tx_tick
vmbus: Fix rescind handling
vmbus: Don't leak channel ids
Fix the bug in generating the guest ID
Log the negotiated IC versions
vmbus: Get rid of an unsused variable
vmbus: Restructure the clockevents code
vmbus: Move the code to signal end of message
util: backup: Fix a rescind processing issue
util: fcopy: Fix a rescind processing issue
util: kvp: Fix a rescind processing issue
vmbus: Get rid of the unused irq variable
vmbus: Fix a rescind handling bug
add a postfix to old ndo_change_mtu
blk-mq-tag: fix wakeup hang after tag resize
sunrpc: fix regression in connection error reporting
add a comment on netdev->last_rx
restore TSC page cleanup before kexec
restore hypervcall page cleanup before kexec
vmbus: Move the crash notification function
gfs2: stuffed directories not setting nfs cookies
tcm_qla2xxx: Mark Target Mode operation as Tech Preview
Add missing vmalloc.h inclusion
improve qlt_unmap_sg()
make some global functions static
Remove TF_CIT_TMPL macro
remove qlt_check_fcport_exist
qla2xxx: Enable CONFIG_TCM_QLA2XXX
revert "boot/kaslr: Skip kernel text relocation if no kaslr action is done"
page_alloc: ratelimit PFNs busy info message
Fix source include in drivers/pci/Kconfig
Disable KVM code in the s390x kernel
sched: fix typo on topology error message
gfs2: Introduce helpers for setting and clearing gl_object
cifs: Add new system calls to cifs in kABI compatible way
vfs: pull btrfs clone API to vfs layer(cifs_only)
qedi: Add support for offload iSCSI Boot
af_iucv: correctly copy SKB data (add missing hunk from 04d0ec)
6lowpan: fix fragmentation hash locking
6lowpan: re-enable support for the secret rebuild timer
fix mistake with TCP cgroup memory pressure check
ceph: use pd to print dentry
Test unit Ready broken for nvme drvices
Simplify module TOC handling
proc: revert /proc/<pid>/maps annotation
Free bio_aux struct when done with bio
