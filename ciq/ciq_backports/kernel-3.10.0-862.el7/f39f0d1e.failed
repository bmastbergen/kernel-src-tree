ibmvnic: Fix initial MTU settings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
commit f39f0d1e1e93145a0e91d9a7a639c42fd037ecc3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f39f0d1e.failed

In the current driver, the MTU is set to the maximum value
capable for the backing device. This decision turned out to
be a mistake as it led to confusion among users. The expected
initial MTU value used for other IBM vNIC capable operating
systems is 1500, with the maximum value (9000) reserved for
when Jumbo frames are enabled. This patch sets the MTU to
the default value for a net device.

It also corrects a discrepancy between MTU values received from
firmware, which includes the ethernet header length, and net
device MTU values.

Finally, it removes redundant min/max MTU assignments after device
initialization.

	Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f39f0d1e1e93145a0e91d9a7a639c42fd037ecc3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmvnic.c
diff --cc drivers/net/ethernet/ibm/ibmvnic.c
index 449f89de5031,5b66b4fd1767..000000000000
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@@ -2639,10 -2627,12 +2639,18 @@@ static void handle_query_cap_rsp(union 
  		break;
  	case MIN_MTU:
  		adapter->min_mtu = be64_to_cpu(crq->query_capability.number);
++<<<<<<< HEAD
++=======
+ 		netdev->min_mtu = adapter->min_mtu - ETH_HLEN;
++>>>>>>> f39f0d1e1e93 (ibmvnic: Fix initial MTU settings)
  		netdev_dbg(netdev, "min_mtu = %lld\n", adapter->min_mtu);
  		break;
  	case MAX_MTU:
  		adapter->max_mtu = be64_to_cpu(crq->query_capability.number);
++<<<<<<< HEAD
++=======
+ 		netdev->max_mtu = adapter->max_mtu - ETH_HLEN;
++>>>>>>> f39f0d1e1e93 (ibmvnic: Fix initial MTU settings)
  		netdev_dbg(netdev, "max_mtu = %lld\n", adapter->max_mtu);
  		break;
  	case MAX_MULTICAST_FILTERS:
@@@ -3667,7 -3657,7 +3675,11 @@@ static void handle_crq_init_rsp(struct 
  		goto task_failed;
  
  	netdev->real_num_tx_queues = adapter->req_tx_queues;
++<<<<<<< HEAD
 +	netdev->mtu = adapter->req_mtu;
++=======
+ 	netdev->mtu = adapter->req_mtu - ETH_HLEN;
++>>>>>>> f39f0d1e1e93 (ibmvnic: Fix initial MTU settings)
  
  	if (adapter->failover) {
  		adapter->failover = false;
* Unmerged path drivers/net/ethernet/ibm/ibmvnic.c
