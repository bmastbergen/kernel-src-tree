bridge: fdb: converge fdb_delete_by functions into one

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit 5019ab50f26c247abb510a80635b25b64b6c1f4b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5019ab50.failed

We can simplify the logic of entries pointing to the bridge by
converging the fdb_delete_by functions, this would allow us to use the
same function for both cases since the fdb's dst is set to NULL if it is
pointing to the bridge thus we can always check for a port match.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5019ab50f26c247abb510a80635b25b64b6c1f4b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_fdb.c
diff --cc net/bridge/br_fdb.c
index 9836c1e87ee0,4ac11574117c..000000000000
--- a/net/bridge/br_fdb.c
+++ b/net/bridge/br_fdb.c
@@@ -932,40 -930,13 +932,47 @@@ out
  	return err;
  }
  
++<<<<<<< HEAD
 +static int fdb_delete_by_addr(struct net_bridge *br, const u8 *addr,
 +			      u16 vid)
 +{
 +	struct hlist_head *head = &br->hash[br_mac_hash(addr, vid)];
 +	struct net_bridge_fdb_entry *fdb;
 +
 +	fdb = fdb_find(head, addr, vid);
 +	if (!fdb)
 +		return -ENOENT;
 +
 +	fdb_delete(br, fdb);
 +	return 0;
 +}
 +
 +static int __br_fdb_delete_by_addr(struct net_bridge *br,
 +				   const unsigned char *addr, u16 vid)
 +{
 +	int err;
 +
 +	spin_lock_bh(&br->hash_lock);
 +	err = fdb_delete_by_addr(br, addr, vid);
 +	spin_unlock_bh(&br->hash_lock);
 +
 +	return err;
 +}
 +
 +static int fdb_delete_by_addr_and_port(struct net_bridge_port *p,
 +				       const u8 *addr, u16 vlan)
 +{
 +	struct net_bridge *br = p->br;
 +	struct hlist_head *head = &br->hash[br_mac_hash(addr, vlan)];
++=======
+ static int fdb_delete_by_addr_and_port(struct net_bridge *br,
+ 				       const struct net_bridge_port *p,
+ 				       const u8 *addr, u16 vlan)
+ {
++>>>>>>> 5019ab50f26c (bridge: fdb: converge fdb_delete_by functions into one)
  	struct net_bridge_fdb_entry *fdb;
  
 -	fdb = br_fdb_find(br, addr, vlan);
 +	fdb = fdb_find(head, addr, vlan);
  	if (!fdb || fdb->dst != p)
  		return -ENOENT;
  
* Unmerged path net/bridge/br_fdb.c
