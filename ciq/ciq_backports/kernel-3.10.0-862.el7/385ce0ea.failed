x86/mm/pti: Add Kconfig

jira LE-1907
cve CVE-2017-5754
cve CVE-2017-5753
cve CVE-2017-5715
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [security] x86/mm/kaiser: add Kconfig (Andrea Arcangeli) [1519801 1519798 1519786] {CVE-2017-5715 CVE-2017-5753 CVE-2017-5754}
Rebuild_FUZZ: 85.71%
commit-author Dave Hansen <dave.hansen@linux.intel.com>
commit 385ce0ea4c078517fa51c261882c4e72fba53005
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/385ce0ea.failed

Finally allow CONFIG_PAGE_TABLE_ISOLATION to be enabled.

PARAVIRT generally requires that the kernel not manage its own page tables.
It also means that the hypervisor and kernel must agree wholeheartedly
about what format the page tables are in and what they contain.
PAGE_TABLE_ISOLATION, unfortunately, changes the rules and they
can not be used together.

I've seen conflicting feedback from maintainers lately about whether they
want the Kconfig magic to go first or last in a patch series.  It's going
last here because the partially-applied series leads to kernels that can
not boot in a bunch of cases.  I did a run through the entire series with
CONFIG_PAGE_TABLE_ISOLATION=y to look for build errors, though.

[ tglx: Removed SMP and !PARAVIRT dependencies as they not longer exist ]

	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: David Laight <David.Laight@aculab.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Eduardo Valentin <eduval@amazon.com>
	Cc: Greg KH <gregkh@linuxfoundation.org>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Will Deacon <will.deacon@arm.com>
	Cc: aliguori@amazon.com
	Cc: daniel.gruss@iaik.tugraz.at
	Cc: hughd@google.com
	Cc: keescook@google.com
	Cc: linux-mm@kvack.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 385ce0ea4c078517fa51c261882c4e72fba53005)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/Kconfig
diff --cc security/Kconfig
index 3605d24112d7,a623d13bf288..000000000000
--- a/security/Kconfig
+++ b/security/Kconfig
@@@ -48,6 -54,25 +48,28 @@@ config SECURITY_NETWOR
  	  implement socket and networking access controls.
  	  If you are unsure how to answer this question, answer N.
  
++<<<<<<< HEAD
++=======
+ config PAGE_TABLE_ISOLATION
+ 	bool "Remove the kernel mapping in user mode"
+ 	depends on X86_64 && !UML
+ 	help
+ 	  This feature reduces the number of hardware side channels by
+ 	  ensuring that the majority of kernel addresses are not mapped
+ 	  into userspace.
+ 
+ 	  See Documentation/x86/pagetable-isolation.txt for more details.
+ 
+ config SECURITY_INFINIBAND
+ 	bool "Infiniband Security Hooks"
+ 	depends on SECURITY && INFINIBAND
+ 	help
+ 	  This enables the Infiniband security hooks.
+ 	  If enabled, a security module can use these hooks to
+ 	  implement Infiniband access controls.
+ 	  If you are unsure how to answer this question, answer N.
+ 
++>>>>>>> 385ce0ea4c07 (x86/mm/pti: Add Kconfig)
  config SECURITY_NETWORK_XFRM
  	bool "XFRM (IPSec) Networking Security Hooks"
  	depends on XFRM && SECURITY_NETWORK
* Unmerged path security/Kconfig
