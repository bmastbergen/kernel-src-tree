scsi: qla2xxx: Fix crash due to NULL pointer dereference of ctx

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Fix crash due to NULL pointer dereference of ctx (Himanshu Madhani) [1460030]
Rebuild_FUZZ: 95.00%
commit-author Joe Carnuccio <joe.carnuccio@cavium.com>
commit d5ff0eed3a6621f6fd6c14f042c30a6eacfa77f1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d5ff0eed.failed

Fixes following signature in the stack trace:

BUG: unable to handle kernel NULL pointer dereference at 0000000000000374
IP: [<ffffffffa06ec8eb>] qla2x00_sp_free_dma+0xeb/0x2a0 [qla2xxx]

	Cc: <stable@vger.kernel.org> # v4.10+
	Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit d5ff0eed3a6621f6fd6c14f042c30a6eacfa77f1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_inline.h
#	drivers/scsi/qla2xxx/qla_os.c
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_inline.h
index 0ac13772fc47,c61a6a871c8e..000000000000
--- a/drivers/scsi/qla2xxx/qla_inline.h
+++ b/drivers/scsi/qla2xxx/qla_inline.h
@@@ -128,20 -129,16 +128,25 @@@ qla2x00_clear_loop_id(fc_port_t *fcport
  }
  
  static inline void
++<<<<<<< HEAD
 +qla2x00_clean_dsd_pool(struct qla_hw_data *ha, srb_t *sp)
 +{
 +	struct dsd_dma *dsd_ptr, *tdsd_ptr;
 +	struct crc_context *ctx;
 +
 +	ctx = (struct crc_context *)GET_CMD_CTX_SP(sp);
++=======
+ qla2x00_clean_dsd_pool(struct qla_hw_data *ha, struct crc_context *ctx)
+ {
+ 	struct dsd_dma *dsd, *tdsd;
++>>>>>>> d5ff0eed3a66 (scsi: qla2xxx: Fix crash due to NULL pointer dereference of ctx)
  
  	/* clean up allocated prev pool */
- 	list_for_each_entry_safe(dsd_ptr, tdsd_ptr,
- 	    &ctx->dsd_list, list) {
- 		dma_pool_free(ha->dl_dma_pool, dsd_ptr->dsd_addr,
- 		    dsd_ptr->dsd_list_dma);
- 		list_del(&dsd_ptr->list);
- 		kfree(dsd_ptr);
+ 	list_for_each_entry_safe(dsd, tdsd, &ctx->dsd_list, list) {
+ 		dma_pool_free(ha->dl_dma_pool, dsd->dsd_addr,
+ 		    dsd->dsd_list_dma);
+ 		list_del(&dsd->list);
+ 		kfree(dsd);
  	}
  	INIT_LIST_HEAD(&ctx->dsd_list);
  }
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 4e0d0a2f9461,2a2ce7476339..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -602,9 -630,12 +602,16 @@@ qla2x00_sp_free_dma(void *vha, void *pt
  		sp->flags &= ~SRB_CRC_PROT_DMA_VALID;
  	}
  
+ 	if (!ctx)
+ 		goto end;
+ 
  	if (sp->flags & SRB_CRC_CTX_DSD_VALID) {
  		/* List assured to be having elements */
++<<<<<<< HEAD
 +		qla2x00_clean_dsd_pool(ha, sp);
++=======
+ 		qla2x00_clean_dsd_pool(ha, ctx);
++>>>>>>> d5ff0eed3a66 (scsi: qla2xxx: Fix crash due to NULL pointer dereference of ctx)
  		sp->flags &= ~SRB_CRC_CTX_DSD_VALID;
  	}
  
@@@ -625,8 -657,9 +633,9 @@@
  		mempool_free(ctx1, ha->ctx_mempool);
  	}
  
+ end:
  	CMD_SP(cmd) = NULL;
 -	qla2x00_rel_sp(sp);
 +	qla2x00_rel_sp(sp->fcport->vha, sp);
  }
  
  void
@@@ -672,9 -704,12 +681,16 @@@ qla2xxx_qpair_sp_free_dma(void *vha, vo
  		sp->flags &= ~SRB_CRC_PROT_DMA_VALID;
  	}
  
+ 	if (!ctx)
+ 		goto end;
+ 
  	if (sp->flags & SRB_CRC_CTX_DSD_VALID) {
  		/* List assured to be having elements */
++<<<<<<< HEAD
 +		qla2x00_clean_dsd_pool(ha, sp);
++=======
+ 		qla2x00_clean_dsd_pool(ha, ctx);
++>>>>>>> d5ff0eed3a66 (scsi: qla2xxx: Fix crash due to NULL pointer dereference of ctx)
  		sp->flags &= ~SRB_CRC_CTX_DSD_VALID;
  	}
  
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 7a27b61e2d53,e766d8412384..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -1486,9 -2235,23 +1486,24 @@@ static inline void qlt_unmap_sg(struct 
  {
  	struct qla_hw_data *ha = vha->hw;
  
 -	if (!cmd->sg_mapped)
 -		return;
 -
 +	BUG_ON(!cmd->sg_mapped);
  	pci_unmap_sg(ha->pdev, cmd->sg, cmd->sg_cnt, cmd->dma_data_direction);
  	cmd->sg_mapped = 0;
++<<<<<<< HEAD
++=======
+ 
+ 	if (cmd->prot_sg_cnt)
+ 		pci_unmap_sg(ha->pdev, cmd->prot_sg, cmd->prot_sg_cnt,
+ 			cmd->dma_data_direction);
+ 
+ 	if (!cmd->ctx)
+ 		return;
+ 
+ 	if (cmd->ctx_dsd_alloced)
+ 		qla2x00_clean_dsd_pool(ha, cmd->ctx);
+ 
+ 	dma_pool_free(ha->dl_dma_pool, cmd->ctx, cmd->ctx->crc_ctx_dma);
++>>>>>>> d5ff0eed3a66 (scsi: qla2xxx: Fix crash due to NULL pointer dereference of ctx)
  }
  
  static int qlt_check_reserve_free_req(struct scsi_qla_host *vha,
* Unmerged path drivers/scsi/qla2xxx/qla_inline.h
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
