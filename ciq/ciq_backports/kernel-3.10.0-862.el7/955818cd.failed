ceph: Correctly return NXIO errors from ceph_llseek

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Phil Turnbull <phil.turnbull@oracle.com>
commit 955818cd5b6c4b58ea574ace4573e7afa4c19c1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/955818cd.failed

ceph_llseek does not correctly return NXIO errors because the 'out' path
always returns 'offset'.

Fixes: 06222e491e66 ("fs: handle SEEK_HOLE/SEEK_DATA properly in all fs's that define their own llseek")
	Signed-off-by: Phil Turnbull <phil.turnbull@oracle.com>
	Signed-off-by: Yan, Zheng <zyan@redhat.com>
(cherry picked from commit 955818cd5b6c4b58ea574ace4573e7afa4c19c1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/file.c
diff --cc fs/ceph/file.c
index 7e050b424b59,0f5375d8e030..000000000000
--- a/fs/ceph/file.c
+++ b/fs/ceph/file.c
@@@ -1573,9 -1499,9 +1573,9 @@@ static loff_t ceph_llseek(struct file *
  {
  	struct inode *inode = file->f_mapping->host;
  	loff_t i_size;
- 	int ret;
+ 	loff_t ret;
  
 -	inode_lock(inode);
 +	mutex_lock(&inode->i_mutex);
  
  	if (whence == SEEK_END || whence == SEEK_DATA || whence == SEEK_HOLE) {
  		ret = ceph_do_getattr(inode, CEPH_STAT_CAP_SIZE, false);
@@@ -1618,11 -1542,11 +1616,16 @@@
  		break;
  	}
  
- 	offset = vfs_setpos(file, offset, inode->i_sb->s_maxbytes);
+ 	ret = vfs_setpos(file, offset, inode->i_sb->s_maxbytes);
  
  out:
++<<<<<<< HEAD
 +	mutex_unlock(&inode->i_mutex);
 +	return offset;
++=======
+ 	inode_unlock(inode);
+ 	return ret;
++>>>>>>> 955818cd5b6c (ceph: Correctly return NXIO errors from ceph_llseek)
  }
  
  static inline void ceph_zero_partial_page(
* Unmerged path fs/ceph/file.c
