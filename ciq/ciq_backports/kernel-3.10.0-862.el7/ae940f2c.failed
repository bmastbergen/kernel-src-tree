qla2xxx: Fix memory leak for abts processing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Quinn Tran <quinn.tran@cavium.com>
commit ae940f2c472a62904dc18234de5cf3ed28f195ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ae940f2c.failed

	Cc: <stable@vger.kernel.org>
	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit ae940f2c472a62904dc18234de5cf3ed28f195ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index f10c075d97ef,ecf97c5993e8..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -4963,6 -6623,52 +4963,55 @@@ qla83xx_msix_atio_q(int irq, void *dev_
  	return IRQ_HANDLED;
  }
  
++<<<<<<< HEAD
++=======
+ static void
+ qlt_handle_abts_recv_work(struct work_struct *work)
+ {
+ 	struct qla_tgt_sess_op *op = container_of(work,
+ 		struct qla_tgt_sess_op, work);
+ 	scsi_qla_host_t *vha = op->vha;
+ 	struct qla_hw_data *ha = vha->hw;
+ 	unsigned long flags;
+ 
+ 	if (qla2x00_reset_active(vha) || (op->chip_reset != ha->chip_reset))
+ 		return;
+ 
+ 	spin_lock_irqsave(&ha->tgt.atio_lock, flags);
+ 	qlt_24xx_process_atio_queue(vha, 0);
+ 	spin_unlock_irqrestore(&ha->tgt.atio_lock, flags);
+ 
+ 	spin_lock_irqsave(&ha->hardware_lock, flags);
+ 	qlt_response_pkt_all_vps(vha, (response_t *)&op->atio);
+ 	spin_unlock_irqrestore(&ha->hardware_lock, flags);
+ 
+ 	kfree(op);
+ }
+ 
+ void
+ qlt_handle_abts_recv(struct scsi_qla_host *vha, response_t *pkt)
+ {
+ 	struct qla_tgt_sess_op *op;
+ 
+ 	op = kzalloc(sizeof(*op), GFP_ATOMIC);
+ 
+ 	if (!op) {
+ 		/* do not reach for ATIO queue here.  This is best effort err
+ 		 * recovery at this point.
+ 		 */
+ 		qlt_response_pkt_all_vps(vha, pkt);
+ 		return;
+ 	}
+ 
+ 	memcpy(&op->atio, pkt, sizeof(*pkt));
+ 	op->vha = vha;
+ 	op->chip_reset = vha->hw->chip_reset;
+ 	INIT_WORK(&op->work, qlt_handle_abts_recv_work);
+ 	queue_work(qla_tgt_wq, &op->work);
+ 	return;
+ }
+ 
++>>>>>>> ae940f2c472a (qla2xxx: Fix memory leak for abts processing)
  int
  qlt_mem_alloc(struct qla_hw_data *ha)
  {
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
