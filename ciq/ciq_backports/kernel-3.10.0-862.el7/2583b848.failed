s390: report new vector facilities

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [s390] report new vector facilities (Hendrik Brueckner) [1375265]
Rebuild_FUZZ: 90.32%
commit-author Martin Schwidefsky <schwidefsky@de.ibm.com>
commit 2583b848cad049cf5f3f0a03af8b140668b376f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2583b848.failed

Add hardware capability bits and feature tags to /proc/cpuinfo for
the "Vector Packed Decimal Facility" (tag "vxd" / hwcap bit 2^12)
and the "Vector Enhancements Facility 1" (tag "vxe" / hwcap bit 2^13).

	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 2583b848cad049cf5f3f0a03af8b140668b376f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/setup.c
diff --cc arch/s390/kernel/setup.c
index adf01b023e73,8d59f20a658f..000000000000
--- a/arch/s390/kernel/setup.c
+++ b/arch/s390/kernel/setup.c
@@@ -928,25 -765,24 +928,35 @@@ static void __init setup_hwcaps(void
  		elf_hwcap |= HWCAP_S390_TE;
  
  	/*
 -	 * Vector extension HWCAP_S390_VXRS is bit 11. The Vector extension
 -	 * can be disabled with the "novx" parameter. Use MACHINE_HAS_VX
 -	 * instead of facility bit 129.
 +	 * Vector extension HWCAP_S390_VXRS is bit 11.
  	 */
++<<<<<<< HEAD
 +	if (test_facility(129))
 +		elf_hwcap |= HWCAP_S390_VXRS;
 +#endif
++=======
+ 	if (MACHINE_HAS_VX) {
+ 		elf_hwcap |= HWCAP_S390_VXRS;
+ 		if (test_facility(134))
+ 			elf_hwcap |= HWCAP_S390_VXRS_EXT;
+ 		if (test_facility(135))
+ 			elf_hwcap |= HWCAP_S390_VXRS_BCD;
+ 	}
++>>>>>>> 2583b848cad0 (s390: report new vector facilities)
  
  	get_cpu_id(&cpu_id);
 -	add_device_randomness(&cpu_id, sizeof(cpu_id));
  	switch (cpu_id.machine) {
 +	case 0x9672:
 +#if !defined(CONFIG_64BIT)
 +	default:	/* Use "g5" as default for 31 bit kernels. */
 +#endif
 +		strcpy(elf_platform, "g5");
 +		break;
  	case 0x2064:
  	case 0x2066:
 +#if defined(CONFIG_64BIT)
  	default:	/* Use "z900" as default for 64 bit kernels. */
 +#endif
  		strcpy(elf_platform, "z900");
  		break;
  	case 0x2084:
diff --git a/arch/s390/include/asm/elf.h b/arch/s390/include/asm/elf.h
index a0d33f39d65a..8c454c157002 100644
--- a/arch/s390/include/asm/elf.h
+++ b/arch/s390/include/asm/elf.h
@@ -103,6 +103,8 @@
 #define HWCAP_S390_HIGH_GPRS	512
 #define HWCAP_S390_TE		1024
 #define HWCAP_S390_VXRS		2048
+#define HWCAP_S390_VXRS_BCD	4096
+#define HWCAP_S390_VXRS_EXT	8192
 
 /* Internal bits, not exposed via elf */
 #define HWCAP_INT_SIE		1UL
diff --git a/arch/s390/kernel/processor.c b/arch/s390/kernel/processor.c
index 13721d0de9ed..7d7d4a10c316 100644
--- a/arch/s390/kernel/processor.c
+++ b/arch/s390/kernel/processor.c
@@ -49,7 +49,7 @@ static int show_cpuinfo(struct seq_file *m, void *v)
 {
 	static const char *hwcap_str[] = {
 		"esan3", "zarch", "stfle", "msa", "ldisp", "eimm", "dfp",
-		"edat", "etf3eh", "highgprs", "te", "vx"
+		"edat", "etf3eh", "highgprs", "te", "vx", "vxd", "vxe"
 	};
 	static const char * const int_hwcap_str[] = {
 		"sie"
* Unmerged path arch/s390/kernel/setup.c
