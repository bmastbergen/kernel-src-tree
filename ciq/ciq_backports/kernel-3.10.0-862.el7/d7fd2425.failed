xfs: Fix off-by-in in loop termination in xfs_find_get_desired_pgoff()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jan Kara <jack@suse.cz>
commit d7fd24257aa60316bf81093f7f909dc9475ae974
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d7fd2425.failed

There is an off-by-one error in loop termination conditions in
xfs_find_get_desired_pgoff() since 'end' may index a page beyond end of
desired range if 'endoff' is page aligned. It doesn't have any visible
effects but still it is good to fix it.

	Signed-off-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
(cherry picked from commit d7fd24257aa60316bf81093f7f909dc9475ae974)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_file.c
diff --cc fs/xfs/xfs_file.c
index 88a314000000,dc0e4cb7029b..000000000000
--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@@ -1393,9 -1041,9 +1393,13 @@@ xfs_find_get_desired_pgoff
  
  	pagevec_init(&pvec, 0);
  
 -	index = startoff >> PAGE_SHIFT;
 +	index = startoff >> PAGE_CACHE_SHIFT;
  	endoff = XFS_FSB_TO_B(mp, map->br_startoff + map->br_blockcount);
++<<<<<<< HEAD
 +	end = endoff >> PAGE_CACHE_SHIFT;
++=======
+ 	end = (endoff - 1) >> PAGE_SHIFT;
++>>>>>>> d7fd24257aa6 (xfs: Fix off-by-in in loop termination in xfs_find_get_desired_pgoff())
  	do {
  		int		want;
  		unsigned	nr_pages;
* Unmerged path fs/xfs/xfs_file.c
