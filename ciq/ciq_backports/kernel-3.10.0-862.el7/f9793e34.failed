x86/sysctl: Add sysctl for ITMT scheduling feature

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] sysctl: Add sysctl for ITMT scheduling feature (Prarit Bhargava) [1465349]
Rebuild_FUZZ: 95.83%
commit-author Tim Chen <tim.c.chen@linux.intel.com>
commit f9793e34952cda133caaa35738a4b46053331c96
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f9793e34.failed

Intel Turbo Boost Max Technology 3.0 (ITMT) feature
allows some cores to be boosted to higher turbo
frequency than others.

Add /proc/sys/kernel/sched_itmt_enabled so operator
can enable/disable scheduling of tasks that favor cores
with higher turbo boost frequency potential.

By default, system that is ITMT capable and single
socket has this feature turned on.  It is more likely
to be lightly loaded and operates in Turbo range.

When there is a change in the ITMT scheduling operation
desired, a rebuild of the sched domain is initiated
so the scheduler can set up sched domains with appropriate
flag to enable/disable ITMT scheduling operations.

Co-developed-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Co-developed-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
	Cc: linux-pm@vger.kernel.org
	Cc: peterz@infradead.org
	Cc: jolsa@redhat.com
	Cc: rjw@rjwysocki.net
	Cc: linux-acpi@vger.kernel.org
	Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Cc: bp@suse.de
Link: http://lkml.kernel.org/r/07cc62426a28bad57b01ab16bb903a9c84fa5421.1479844244.git.tim.c.chen@linux.intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit f9793e34952cda133caaa35738a4b46053331c96)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/topology.h
#	arch/x86/kernel/itmt.c
diff --cc arch/x86/include/asm/topology.h
index 93b2cb826344,4813df5c21f0..000000000000
--- a/arch/x86/include/asm/topology.h
+++ b/arch/x86/include/asm/topology.h
@@@ -148,10 -146,36 +148,44 @@@ struct pci_bus
  int x86_pci_root_bus_node(int bus);
  void x86_pci_root_bus_resources(int bus, struct list_head *resources);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_SMP
 +#define mc_capable()	((boot_cpu_data.x86_max_cores > 1) && \
 +			(cpumask_weight(cpu_core_mask(0)) != nr_cpu_ids))
 +#define smt_capable()			(smp_num_siblings > 1)
 +#endif
++=======
+ extern bool x86_topology_update;
+ 
+ #ifdef CONFIG_SCHED_ITMT
+ #include <asm/percpu.h>
+ 
+ DECLARE_PER_CPU_READ_MOSTLY(int, sched_core_priority);
+ extern unsigned int __read_mostly sysctl_sched_itmt_enabled;
+ 
+ /* Interface to set priority of a cpu */
+ void sched_set_itmt_core_prio(int prio, int core_cpu);
+ 
+ /* Interface to notify scheduler that system supports ITMT */
+ int sched_set_itmt_support(void);
+ 
+ /* Interface to notify scheduler that system revokes ITMT support */
+ void sched_clear_itmt_support(void);
+ 
+ #else /* CONFIG_SCHED_ITMT */
+ 
+ #define sysctl_sched_itmt_enabled	0
+ static inline void sched_set_itmt_core_prio(int prio, int core_cpu)
+ {
+ }
+ static inline int sched_set_itmt_support(void)
+ {
+ 	return 0;
+ }
+ static inline void sched_clear_itmt_support(void)
+ {
+ }
+ #endif /* CONFIG_SCHED_ITMT */
++>>>>>>> f9793e34952c (x86/sysctl: Add sysctl for ITMT scheduling feature)
  
  #endif /* _ASM_X86_TOPOLOGY_H */
* Unmerged path arch/x86/kernel/itmt.c
* Unmerged path arch/x86/include/asm/topology.h
* Unmerged path arch/x86/kernel/itmt.c
