x86/intel_rdt: Make rdt_resources_all more readable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] intel_rdt: Make rdt_resources_all more readable (Jiri Olsa) [1457533]
Rebuild_FUZZ: 95.92%
commit-author Vikas Shivappa <vikas.shivappa@linux.intel.com>
commit dd131853f3fbc1c3aa051c34a2967c2f76309024
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/dd131853.failed

Change the format of the global rdt_resources_all. This holds all the
RDT resource structure initialization values. Make this more readable by
using the format:

rdt_resources_all[] = {
	[<resource_index>] =
            {...
	    }
	...
}

	Signed-off-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: ravi.v.shankar@intel.com
	Cc: tony.luck@intel.com
	Cc: fenghua.yu@intel.com
	Cc: peterz@infradead.org
	Cc: eranian@google.com
	Cc: vikas.shivappa@intel.com
	Cc: ak@linux.intel.com
	Cc: davidcc@google.com
	Cc: reinette.chatre@intel.com
Link: http://lkml.kernel.org/r/1501017287-28083-8-git-send-email-vikas.shivappa@linux.intel.com

(cherry picked from commit dd131853f3fbc1c3aa051c34a2967c2f76309024)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/intel_rdt.c
diff --cc arch/x86/kernel/cpu/intel_rdt.c
index ad087dd4421e,98715c50ee4c..000000000000
--- a/arch/x86/kernel/cpu/intel_rdt.c
+++ b/arch/x86/kernel/cpu/intel_rdt.c
@@@ -45,42 -55,83 +45,71 @@@ DEFINE_PER_CPU_READ_MOSTLY(int, cpu_clo
   */
  int max_name_width, max_data_width;
  
 -static void
 -mba_wrmsr(struct rdt_domain *d, struct msr_param *m, struct rdt_resource *r);
 -static void
 -cat_wrmsr(struct rdt_domain *d, struct msr_param *m, struct rdt_resource *r);
 -
 -#define domain_init(id) LIST_HEAD_INIT(rdt_resources_all[id].domains)
 -
  struct rdt_resource rdt_resources_all[] = {
+ 	[RDT_RESOURCE_L3] =
  	{
 -		.name			= "L3",
 -		.domains		= domain_init(RDT_RESOURCE_L3),
 -		.msr_base		= IA32_L3_CBM_BASE,
 -		.msr_update		= cat_wrmsr,
 -		.cache_level		= 3,
 -		.cache = {
 -			.min_cbm_bits	= 1,
 -			.cbm_idx_mult	= 1,
 -			.cbm_idx_offset	= 0,
 -		},
 -		.parse_ctrlval		= parse_cbm,
 -		.format_str		= "%d=%0*x",
 +		.name		= "L3",
 +		.domains	= domain_init(RDT_RESOURCE_L3),
 +		.msr_base	= IA32_L3_CBM_BASE,
 +		.min_cbm_bits	= 1,
 +		.cache_level	= 3,
 +		.cbm_idx_multi	= 1,
 +		.cbm_idx_offset	= 0
  	},
+ 	[RDT_RESOURCE_L3DATA] =
  	{
 -		.name			= "L3DATA",
 -		.domains		= domain_init(RDT_RESOURCE_L3DATA),
 -		.msr_base		= IA32_L3_CBM_BASE,
 -		.msr_update		= cat_wrmsr,
 -		.cache_level		= 3,
 -		.cache = {
 -			.min_cbm_bits	= 1,
 -			.cbm_idx_mult	= 2,
 -			.cbm_idx_offset	= 0,
 -		},
 -		.parse_ctrlval		= parse_cbm,
 -		.format_str		= "%d=%0*x",
 +		.name		= "L3DATA",
 +		.domains	= domain_init(RDT_RESOURCE_L3DATA),
 +		.msr_base	= IA32_L3_CBM_BASE,
 +		.min_cbm_bits	= 1,
 +		.cache_level	= 3,
 +		.cbm_idx_multi	= 2,
 +		.cbm_idx_offset	= 0
  	},
+ 	[RDT_RESOURCE_L3CODE] =
  	{
 -		.name			= "L3CODE",
 -		.domains		= domain_init(RDT_RESOURCE_L3CODE),
 -		.msr_base		= IA32_L3_CBM_BASE,
 -		.msr_update		= cat_wrmsr,
 -		.cache_level		= 3,
 -		.cache = {
 -			.min_cbm_bits	= 1,
 -			.cbm_idx_mult	= 2,
 -			.cbm_idx_offset	= 1,
 -		},
 -		.parse_ctrlval		= parse_cbm,
 -		.format_str		= "%d=%0*x",
 +		.name		= "L3CODE",
 +		.domains	= domain_init(RDT_RESOURCE_L3CODE),
 +		.msr_base	= IA32_L3_CBM_BASE,
 +		.min_cbm_bits	= 1,
 +		.cache_level	= 3,
 +		.cbm_idx_multi	= 2,
 +		.cbm_idx_offset	= 1
  	},
+ 	[RDT_RESOURCE_L2] =
  	{
++<<<<<<< HEAD
 +		.name		= "L2",
 +		.domains	= domain_init(RDT_RESOURCE_L2),
 +		.msr_base	= IA32_L2_CBM_BASE,
 +		.min_cbm_bits	= 1,
 +		.cache_level	= 2,
 +		.cbm_idx_multi	= 1,
 +		.cbm_idx_offset	= 0
++=======
+ 		.name			= "L2",
+ 		.domains		= domain_init(RDT_RESOURCE_L2),
+ 		.msr_base		= IA32_L2_CBM_BASE,
+ 		.msr_update		= cat_wrmsr,
+ 		.cache_level		= 2,
+ 		.cache = {
+ 			.min_cbm_bits	= 1,
+ 			.cbm_idx_mult	= 1,
+ 			.cbm_idx_offset	= 0,
+ 		},
+ 		.parse_ctrlval		= parse_cbm,
+ 		.format_str		= "%d=%0*x",
+ 	},
+ 	[RDT_RESOURCE_MBA] =
+ 	{
+ 		.name			= "MB",
+ 		.domains		= domain_init(RDT_RESOURCE_MBA),
+ 		.msr_base		= IA32_MBA_THRTL_BASE,
+ 		.msr_update		= mba_wrmsr,
+ 		.cache_level		= 3,
+ 		.parse_ctrlval		= parse_bw,
+ 		.format_str		= "%d=%*d",
++>>>>>>> dd131853f3fb (x86/intel_rdt: Make rdt_resources_all more readable)
  	},
  };
  
* Unmerged path arch/x86/kernel/cpu/intel_rdt.c
