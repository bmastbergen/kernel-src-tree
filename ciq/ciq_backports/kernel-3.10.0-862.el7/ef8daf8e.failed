livepatch: unpatch all klp_objects if klp_module_coming fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Joe Lawrence <joe.lawrence@redhat.com>
commit ef8daf8eeb5b8ab6bc356656163d19f20fb827ed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ef8daf8e.failed

When an incoming module is considered for livepatching by
klp_module_coming(), it iterates over multiple patches and multiple
kernel objects in this order:

	list_for_each_entry(patch, &klp_patches, list) {
		klp_for_each_object(patch, obj) {

which means that if one of the kernel objects fails to patch,
klp_module_coming()'s error path needs to unpatch and cleanup any kernel
objects that were already patched by a previous patch.

	Reported-by: Miroslav Benes <mbenes@suse.cz>
	Suggested-by: Petr Mladek <pmladek@suse.com>
	Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
	Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Reviewed-by: Petr Mladek <pmladek@suse.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit ef8daf8eeb5b8ab6bc356656163d19f20fb827ed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/livepatch/core.c
* Unmerged path kernel/livepatch/core.c
* Unmerged path kernel/livepatch/core.c
