x86/nmi: Use raw lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] nmi: Use raw lock (Scott Wood) [1465546]
Rebuild_FUZZ: 89.47%
commit-author Scott Wood <swood@redhat.com>
commit c455fd9235b6bd2802db86109cfa0ec105992f68
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c455fd92.failed

register_nmi_handler() can be called from PREEMPT_RT atomic context
(e.g. wakeup_cpu_via_init_nmi() or native_stop_other_cpus()), and thus
ordinary spinlocks cannot be used.

	Signed-off-by: Scott Wood <swood@redhat.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Don Zickus <dzickus@redhat.com>
Link: http://lkml.kernel.org/r/20170724213242.27598-1-swood@redhat.com

(cherry picked from commit c455fd9235b6bd2802db86109cfa0ec105992f68)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/nmi.c
diff --cc arch/x86/kernel/nmi.c
index 1a36028022e7,35aafc95e4b8..000000000000
--- a/arch/x86/kernel/nmi.c
+++ b/arch/x86/kernel/nmi.c
@@@ -30,9 -33,13 +30,9 @@@
  #include <asm/nmi.h>
  #include <asm/x86_init.h>
  #include <asm/reboot.h>
 -#include <asm/cache.h>
 -
 -#define CREATE_TRACE_POINTS
 -#include <trace/events/nmi.h>
  
  struct nmi_desc {
- 	spinlock_t lock;
+ 	raw_spinlock_t lock;
  	struct list_head head;
  };
  
@@@ -141,7 -161,9 +141,13 @@@ int __register_nmi_handler(unsigned in
  	if (!action->handler)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	spin_lock_irqsave(&desc->lock, flags);
++=======
+ 	init_irq_work(&action->irq_work, nmi_max_handler);
+ 
+ 	raw_spin_lock_irqsave(&desc->lock, flags);
++>>>>>>> c455fd9235b6 (x86/nmi: Use raw lock)
  
  	/*
  	 * Indicate if there are multiple registrations on the
* Unmerged path arch/x86/kernel/nmi.c
