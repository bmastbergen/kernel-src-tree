mlxsw: spectrum: Pass port argument to module mapping functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 2e915e0b68c9213ed16493c8a28aa973d38d0353
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2e915e0b.failed

Previous patch made it unnecessary to map ports to modules before we
allocate their struct. We can now therefore pass the port struct to
these functions, thereby making them consistent with other functions
that operate on ports.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2e915e0b68c9213ed16493c8a28aa973d38d0353)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index 4d14e78f2e24,0e51c3693243..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -2731,6 -2710,13 +2733,16 @@@ static int __mlxsw_sp_port_create(struc
  	dev->netdev_ops = &mlxsw_sp_port_netdev_ops;
  	dev->ethtool_ops = &mlxsw_sp_port_ethtool_ops;
  
++<<<<<<< HEAD
++=======
+ 	err = mlxsw_sp_port_module_map(mlxsw_sp_port, module, width, lane);
+ 	if (err) {
+ 		dev_err(mlxsw_sp->bus_info->dev, "Port %d: Failed to map module\n",
+ 			mlxsw_sp_port->local_port);
+ 		goto err_port_module_map;
+ 	}
+ 
++>>>>>>> 2e915e0b68c9 (mlxsw: spectrum: Pass port argument to module mapping functions)
  	err = mlxsw_sp_port_swid_set(mlxsw_sp_port, 0);
  	if (err) {
  		dev_err(mlxsw_sp->bus_info->dev, "Port %d: Failed to set SWID\n",
@@@ -2849,36 -2839,16 +2861,41 @@@ err_port_system_port_mapping_set
  err_dev_addr_init:
  	mlxsw_sp_port_swid_set(mlxsw_sp_port, MLXSW_PORT_SWID_DISABLED_PORT);
  err_port_swid_set:
++<<<<<<< HEAD
++=======
+ 	mlxsw_sp_port_module_unmap(mlxsw_sp_port);
+ err_port_module_map:
++>>>>>>> 2e915e0b68c9 (mlxsw: spectrum: Pass port argument to module mapping functions)
  	kfree(mlxsw_sp_port->hw_stats.cache);
  err_alloc_hw_stats:
 -	kfree(mlxsw_sp_port->sample);
 -err_alloc_sample:
  	free_percpu(mlxsw_sp_port->pcpu_stats);
  err_alloc_stats:
 +	kfree(mlxsw_sp_port->untagged_vlans);
 +err_port_untagged_vlans_alloc:
 +	kfree(mlxsw_sp_port->active_vlans);
 +err_port_active_vlans_alloc:
  	free_netdev(dev);
 -err_alloc_etherdev:
 +	return err;
 +}
 +
 +static int mlxsw_sp_port_create(struct mlxsw_sp *mlxsw_sp, u8 local_port,
 +				bool split, u8 module, u8 width, u8 lane)
 +{
 +	int err;
 +
 +	err = mlxsw_core_port_init(mlxsw_sp->core, local_port);
 +	if (err) {
 +		dev_err(mlxsw_sp->bus_info->dev, "Port %d: Failed to init core port\n",
 +			local_port);
 +		return err;
 +	}
 +	err = __mlxsw_sp_port_create(mlxsw_sp, local_port, split,
 +				     module, width, lane);
 +	if (err)
 +		goto err_port_create;
 +	return 0;
 +
 +err_port_create:
  	mlxsw_core_port_fini(mlxsw_sp->core, local_port);
  	return err;
  }
@@@ -2892,21 -2862,16 +2909,21 @@@ static void __mlxsw_sp_port_remove(stru
  	unregister_netdev(mlxsw_sp_port->dev); /* This calls ndo_stop */
  	mlxsw_sp->ports[local_port] = NULL;
  	mlxsw_sp_port_switchdev_fini(mlxsw_sp_port);
 -	mlxsw_sp_port_vlan_flush(mlxsw_sp_port);
 -	mlxsw_sp_port_fids_fini(mlxsw_sp_port);
 +	mlxsw_sp_port_pvid_vport_destroy(mlxsw_sp_port);
  	mlxsw_sp_port_dcb_fini(mlxsw_sp_port);
  	mlxsw_sp_port_swid_set(mlxsw_sp_port, MLXSW_PORT_SWID_DISABLED_PORT);
- 	mlxsw_sp_port_module_unmap(mlxsw_sp, mlxsw_sp_port->local_port);
+ 	mlxsw_sp_port_module_unmap(mlxsw_sp_port);
  	kfree(mlxsw_sp_port->hw_stats.cache);
 -	kfree(mlxsw_sp_port->sample);
  	free_percpu(mlxsw_sp_port->pcpu_stats);
 -	WARN_ON_ONCE(!list_empty(&mlxsw_sp_port->vlans_list));
 +	kfree(mlxsw_sp_port->untagged_vlans);
 +	kfree(mlxsw_sp_port->active_vlans);
 +	WARN_ON_ONCE(!list_empty(&mlxsw_sp_port->vports_list));
  	free_netdev(mlxsw_sp_port->dev);
 +}
 +
 +static void mlxsw_sp_port_remove(struct mlxsw_sp *mlxsw_sp, u8 local_port)
 +{
 +	__mlxsw_sp_port_remove(mlxsw_sp, local_port);
  	mlxsw_core_port_fini(mlxsw_sp->core, local_port);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
