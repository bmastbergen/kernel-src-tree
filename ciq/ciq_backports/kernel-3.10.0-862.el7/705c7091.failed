net: sched: cls_u32: no need to call tcf_exts_change for newly allocated struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: cls_u32: no need to call tcf_exts_change for newly allocated struct (Ivan Vecera) [1445420]
Rebuild_FUZZ: 96.73%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 705c7091262d02b09eb686c24491de61bf42fdb2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/705c7091.failed

As the n struct was allocated right before u32_set_parms call,
no need to use tcf_exts_change to do atomic change, and we can just
fill-up the unused exts struct directly by tcf_exts_validate.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 705c7091262d02b09eb686c24491de61bf42fdb2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_u32.c
diff --cc net/sched/cls_u32.c
index dfc76f51e07c,9fd243799fe7..000000000000
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@@ -709,10 -724,8 +709,14 @@@ static int u32_set_parms(struct net *ne
  			 struct nlattr *est, bool ovr)
  {
  	int err;
 +	struct tcf_exts e;
  
++<<<<<<< HEAD
 +	tcf_exts_init(&e, TCA_U32_ACT, TCA_U32_POLICE);
 +	err = tcf_exts_validate(net, tp, tb, est, &e, ovr);
++=======
+ 	err = tcf_exts_validate(net, tp, tb, est, &n->exts, ovr);
++>>>>>>> 705c7091262d (net: sched: cls_u32: no need to call tcf_exts_change for newly allocated struct)
  	if (err < 0)
  		return err;
  
* Unmerged path net/sched/cls_u32.c
