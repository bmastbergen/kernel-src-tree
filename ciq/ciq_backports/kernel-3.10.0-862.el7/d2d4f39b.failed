drm/i915/skl+: debugfs entry to control IPC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Kumar, Mahesh <mahesh1.kumar@intel.com>
commit d2d4f39b1e6407323e568c174e17b022b8f98a40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d2d4f39b.failed

This patch creates an entry in debugfs to check the status of IPC.
This can also be used to enable/disable IPC in supported platforms.

Changes since V1:
 - fix use of HAS_IPC
 - use kstrtobool_from_user (Maarten)
 - drm_info log, while enabling IPC (Maarten)

	Signed-off-by: Mahesh Kumar <mahesh1.kumar@intel.com>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20170817134529.2839-9-mahesh1.kumar@intel.com
[mlankhorst: enableddisabled -> yesno to match ipc write]
(cherry picked from commit d2d4f39b1e6407323e568c174e17b022b8f98a40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_debugfs.c
diff --cc drivers/gpu/drm/i915/i915_debugfs.c
index 791bfc760075,8d432e50a196..000000000000
--- a/drivers/gpu/drm/i915/i915_debugfs.c
+++ b/drivers/gpu/drm/i915/i915_debugfs.c
@@@ -5446,22 -4908,11 +5497,28 @@@ static const struct i915_debugfs_files 
  	{"i915_dp_test_data", &i915_displayport_test_data_fops},
  	{"i915_dp_test_type", &i915_displayport_test_type_fops},
  	{"i915_dp_test_active", &i915_displayport_test_active_fops},
++<<<<<<< HEAD
 +	{"i915_guc_log_control", &i915_guc_log_control_fops}
++=======
+ 	{"i915_guc_log_control", &i915_guc_log_control_fops},
+ 	{"i915_hpd_storm_ctl", &i915_hpd_storm_ctl_fops},
+ 	{"i915_ipc_status", &i915_ipc_status_fops}
++>>>>>>> d2d4f39b1e64 (drm/i915/skl+: debugfs entry to control IPC)
  };
  
 +void intel_display_crc_init(struct drm_i915_private *dev_priv)
 +{
 +	enum pipe pipe;
 +
 +	for_each_pipe(dev_priv, pipe) {
 +		struct intel_pipe_crc *pipe_crc = &dev_priv->pipe_crc[pipe];
 +
 +		pipe_crc->opened = false;
 +		spin_lock_init(&pipe_crc->lock);
 +		init_waitqueue_head(&pipe_crc->wq);
 +	}
 +}
 +
  int i915_debugfs_register(struct drm_i915_private *dev_priv)
  {
  	struct drm_minor *minor = dev_priv->drm.primary;
* Unmerged path drivers/gpu/drm/i915/i915_debugfs.c
