fix ceph_write_end()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit b9de313cf05fe08fa59efaf19756ec5283af672a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b9de313c.failed

don't zero on short copies; if the page was uptodate it's just plain
wrong, and if it wasn't we'll be better off just returning 0 and
buggering off.

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit b9de313cf05fe08fa59efaf19756ec5283af672a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/addr.c
diff --cc fs/ceph/addr.c
index ebba52064896,834be0943a26..000000000000
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@@ -1247,7 -1276,6 +1247,10 @@@ static int ceph_write_end(struct file *
  			  struct page *page, void *fsdata)
  {
  	struct inode *inode = file_inode(file);
++<<<<<<< HEAD
 +	unsigned from = pos & (PAGE_CACHE_SIZE - 1);
++=======
++>>>>>>> b9de313cf05f (fix ceph_write_end())
  	int check_cap = 0;
  
  	dout("write_end file %p inode %p page %p %d~%d (%d)\n", file,
@@@ -1261,13 -1294,11 +1269,11 @@@
  	if (pos+copied > i_size_read(inode))
  		check_cap = ceph_inode_set_size(inode, pos+copied);
  
- 	if (!PageUptodate(page))
- 		SetPageUptodate(page);
- 
  	set_page_dirty(page);
  
+ out:
  	unlock_page(page);
 -	put_page(page);
 +	page_cache_release(page);
  
  	if (check_cap)
  		ceph_check_caps(ceph_inode(inode), CHECK_CAPS_AUTHONLY, NULL);
* Unmerged path fs/ceph/addr.c
