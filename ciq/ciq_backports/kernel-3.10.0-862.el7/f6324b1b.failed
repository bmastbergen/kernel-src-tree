nvme: cleanup nvme_req_needs_retry

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [nvme] cleanup nvme_req_needs_retry (David Milburn) [1457880 1456486 1454365]
Rebuild_FUZZ: 90.32%
commit-author Christoph Hellwig <hch@lst.de>
commit f6324b1bb7f8d38c4f8be5509098e4b3ee0194b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f6324b1b.failed

Don't pass the status explicitly but derive it from the requeust,
and unwind the complex condition to be more readable.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit f6324b1bb7f8d38c4f8be5509098e4b3ee0194b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index bd223cb63595,b225aacf4b89..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -61,6 -67,41 +61,44 @@@ static DEFINE_SPINLOCK(dev_list_lock)
  
  static struct class *nvme_class;
  
++<<<<<<< HEAD
++=======
+ static inline bool nvme_req_needs_retry(struct request *req)
+ {
+ 	if (blk_noretry_request(req))
+ 		return false;
+ 	if (req->errors & NVME_SC_DNR)
+ 		return false;
+ 	if (jiffies - req->start_time >= req->timeout)
+ 		return false;
+ 	if (req->retries >= nvme_max_retries)
+ 		return false;
+ 	return true;
+ }
+ 
+ void nvme_complete_rq(struct request *req)
+ {
+ 	int error = 0;
+ 
+ 	if (unlikely(req->errors)) {
+ 		if (nvme_req_needs_retry(req)) {
+ 			req->retries++;
+ 			blk_mq_requeue_request(req,
+ 					!blk_mq_queue_stopped(req->q));
+ 			return;
+ 		}
+ 
+ 		if (blk_rq_is_passthrough(req))
+ 			error = req->errors;
+ 		else
+ 			error = nvme_error_status(req->errors);
+ 	}
+ 
+ 	blk_mq_end_request(req, error);
+ }
+ EXPORT_SYMBOL_GPL(nvme_complete_rq);
+ 
++>>>>>>> f6324b1bb7f8 (nvme: cleanup nvme_req_needs_retry)
  void nvme_cancel_request(struct request *req, void *data, bool reserved)
  {
  	int status;
* Unmerged path drivers/nvme/host/core.c
