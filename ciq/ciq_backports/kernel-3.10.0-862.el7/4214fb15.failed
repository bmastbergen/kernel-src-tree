ceph: validate correctness of some mount options

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 4214fb158cc423ac31b841000e219855be055388
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4214fb15.failed

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 4214fb158cc423ac31b841000e219855be055388)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/super.c
diff --cc fs/ceph/super.c
index a004bf036482,1deb8810d7c7..000000000000
--- a/fs/ceph/super.c
+++ b/fs/ceph/super.c
@@@ -227,17 -223,33 +227,21 @@@ static int parse_fsopt_token(char *c, v
  		if (!fsopt->mds_namespace)
  			return -ENOMEM;
  		break;
 -	case Opt_fscache_uniq:
 -		fsopt->fscache_uniq = kstrndup(argstr[0].from,
 -					       argstr[0].to-argstr[0].from,
 -					       GFP_KERNEL);
 -		if (!fsopt->fscache_uniq)
 -			return -ENOMEM;
 -		fsopt->flags |= CEPH_MOUNT_OPT_FSCACHE;
 -		break;
  		/* misc */
  	case Opt_wsize:
 -		if (intval < PAGE_SIZE || intval > CEPH_MAX_WRITE_SIZE)
 -			return -EINVAL;
 -		fsopt->wsize = ALIGN(intval, PAGE_SIZE);
 +		fsopt->wsize = intval;
  		break;
  	case Opt_rsize:
 -		if (intval < PAGE_SIZE || intval > CEPH_MAX_READ_SIZE)
 -			return -EINVAL;
 -		fsopt->rsize = ALIGN(intval, PAGE_SIZE);
 +		fsopt->rsize = intval;
  		break;
  	case Opt_rasize:
- 		fsopt->rasize = intval;
+ 		if (intval < 0)
+ 			return -EINVAL;
+ 		fsopt->rasize = ALIGN(intval + PAGE_SIZE - 1, PAGE_SIZE);
  		break;
  	case Opt_caps_wanted_delay_min:
+ 		if (intval < 1)
+ 			return -EINVAL;
  		fsopt->caps_wanted_delay_min = intval;
  		break;
  	case Opt_caps_wanted_delay_max:
@@@ -921,20 -952,18 +933,24 @@@ static int ceph_register_bdi(struct sup
  {
  	int err;
  
 -	err = super_setup_bdi_name(sb, "ceph-%ld",
 -				   atomic_long_inc_return(&bdi_seq));
 -	if (err)
 -		return err;
 -
  	/* set ra_pages based on rasize mount option? */
++<<<<<<< HEAD
 +	if (fsc->mount_options->rasize >= PAGE_CACHE_SIZE)
 +		fsc->backing_dev_info.ra_pages =
 +			(fsc->mount_options->rasize + PAGE_CACHE_SIZE - 1)
 +			>> PAGE_SHIFT;
 +	else
 +		fsc->backing_dev_info.ra_pages =
 +			default_backing_dev_info.ra_pages;
++=======
+ 	sb->s_bdi->ra_pages = fsc->mount_options->rasize >> PAGE_SHIFT;
++>>>>>>> 4214fb158cc4 (ceph: validate correctness of some mount options)
  
 -	/* set io_pages based on max osd read size */
 -	sb->s_bdi->io_pages = fsc->mount_options->rsize >> PAGE_SHIFT;
 -
 -	return 0;
 +	err = bdi_register(&fsc->backing_dev_info, NULL, "ceph-%ld",
 +			   atomic_long_inc_return(&bdi_seq));
 +	if (!err)
 +		sb->s_bdi = &fsc->backing_dev_info;
 +	return err;
  }
  
  static struct dentry *ceph_mount(struct file_system_type *fs_type,
* Unmerged path fs/ceph/super.c
diff --git a/fs/ceph/super.h b/fs/ceph/super.h
index 94689dd0d932..4b9f183e45be 100644
--- a/fs/ceph/super.h
+++ b/fs/ceph/super.h
@@ -46,6 +46,15 @@
 #define CEPH_MAX_READDIR_BYTES_DEFAULT  (512*1024)
 #define CEPH_SNAPDIRNAME_DEFAULT        ".snap"
 
+/*
+ * Delay telling the MDS we no longer want caps, in case we reopen
+ * the file.  Delay a minimum amount of time, even if we send a cap
+ * message for some other reason.  Otherwise, take the oppotunity to
+ * update the mds to avoid sending another message later.
+ */
+#define CEPH_CAPS_WANTED_DELAY_MIN_DEFAULT      5  /* cap release delay */
+#define CEPH_CAPS_WANTED_DELAY_MAX_DEFAULT     60  /* cap release delay */
+
 struct ceph_mount_options {
 	int flags;
 	int sb_flags;
diff --git a/include/linux/ceph/libceph.h b/include/linux/ceph/libceph.h
index 828363fc9fdd..b1501eb00aa1 100644
--- a/include/linux/ceph/libceph.h
+++ b/include/linux/ceph/libceph.h
@@ -82,16 +82,6 @@ struct ceph_options {
 
 #define CEPH_AUTH_NAME_DEFAULT   "guest"
 
-/*
- * Delay telling the MDS we no longer want caps, in case we reopen
- * the file.  Delay a minimum amount of time, even if we send a cap
- * message for some other reason.  Otherwise, take the oppotunity to
- * update the mds to avoid sending another message later.
- */
-#define CEPH_CAPS_WANTED_DELAY_MIN_DEFAULT      5  /* cap release delay */
-#define CEPH_CAPS_WANTED_DELAY_MAX_DEFAULT     60  /* cap release delay */
-
-
 /* mount state */
 enum {
 	CEPH_MOUNT_MOUNTING,
