sysfs: make __sysfs_add_one() fail if the parent isn't a directory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [fs] sysfs: make __sysfs_add_one() fail if the parent isn't a directory ("Eric W. Biederman") [1487751]
Rebuild_FUZZ: 99.25%
commit-author Tejun Heo <tj@kernel.org>
commit ae2108ad32f5ca55e9895d5597e6552be1607569
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ae2108ad.failed

Currently the kobject based interface guarantees that a parent
sysfs_dirent is always a directory; however, the planned kernfs
interface will be directly based on sysfs_dirents and the caller may
specify non-directory node as the parent.  Add an explicit check in
__sysfs_add_one() so that such attempts fail with -EINVAL.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ae2108ad32f5ca55e9895d5597e6552be1607569)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/sysfs/dir.c
diff --cc fs/sysfs/dir.c
index fd502d3fc9fc,98701c00b9b0..000000000000
--- a/fs/sysfs/dir.c
+++ b/fs/sysfs/dir.c
@@@ -444,8 -429,11 +444,16 @@@ int __sysfs_add_one(struct sysfs_addrm_
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	sd->s_hash = sysfs_name_hash(sd->s_ns, sd->s_name);
 +	sd->s_parent = sysfs_get(acxt->parent_sd);
++=======
+ 	if (sysfs_type(parent_sd) != SYSFS_DIR)
+ 		return -EINVAL;
+ 
+ 	sd->s_hash = sysfs_name_hash(sd->s_name, sd->s_ns);
+ 	sd->s_parent = sysfs_get(parent_sd);
++>>>>>>> ae2108ad32f5 (sysfs: make __sysfs_add_one() fail if the parent isn't a directory)
  
  	ret = sysfs_link_sibling(sd);
  	if (ret)
* Unmerged path fs/sysfs/dir.c
