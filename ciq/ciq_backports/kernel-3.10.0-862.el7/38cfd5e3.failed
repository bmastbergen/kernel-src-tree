KVM, pkeys: do not use PKRU value in vcpu->arch.guest_fpu.state

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 38cfd5e3df9c4f88e76b547eee2087ee5c042ae2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/38cfd5e3.failed

The host pkru is restored right after vcpu exit (commit 1be0e61), so
KVM_GET_XSAVE will return the host PKRU value instead.  Fix this by
using the guest PKRU explicitly in fill_xsave and load_xsave.  This
part is based on a patch by Junkang Fu.

The host PKRU data may also not match the value in vcpu->arch.guest_fpu.state,
because it could have been changed by userspace since the last time
it was saved, so skip loading it in kvm_load_guest_fpu.

	Reported-by: Junkang Fu <junkang.fjk@alibaba-inc.com>
	Cc: Yang Zhang <zy107165@alibaba-inc.com>
Fixes: 1be0e61c1f255faaeab04a390e00c8b9b9042870
	Cc: stable@vger.kernel.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 38cfd5e3df9c4f88e76b547eee2087ee5c042ae2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/fpu/internal.h
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index c4ed332ff031,05a5e57c6f39..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -7402,7 -7642,9 +7411,13 @@@ void kvm_load_guest_fpu(struct kvm_vcp
  	 */
  	vcpu->guest_fpu_loaded = 1;
  	__kernel_fpu_begin();
++<<<<<<< HEAD
 +	fpu_restore_checking(&vcpu->arch.guest_fpu);
++=======
+ 	/* PKRU is separately restored in kvm_x86_ops->run.  */
+ 	__copy_kernel_to_fpregs(&vcpu->arch.guest_fpu.state,
+ 				~XFEATURE_MASK_PKRU);
++>>>>>>> 38cfd5e3df9c (KVM, pkeys: do not use PKRU value in vcpu->arch.guest_fpu.state)
  	trace_kvm_fpu(1);
  }
  
* Unmerged path arch/x86/include/asm/fpu/internal.h
* Unmerged path arch/x86/include/asm/fpu/internal.h
* Unmerged path arch/x86/kvm/x86.c
