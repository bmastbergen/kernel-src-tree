x86/ACPI/cstate: Allow ACPI C1 FFH MWAIT use on AMD systems

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] acpi/cstate: Allow ACPI C1 FFH MWAIT use on AMD systems (Suravee Suthikulpanit) [1508650]
Rebuild_FUZZ: 96.49%
commit-author Yazen Ghannam <yazen.ghannam@amd.com>
commit 5209654a46ee71137ad9b06da99d4ef2794475af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5209654a.failed

AMD systems support the Monitor/Mwait instructions and these can be used
for ACPI C1 in the same way as on Intel systems.

Three things are needed:
 1) This patch.
 2) BIOS that declares a C1 state in _CST to use FFH, with correct values.
 3) CPUID_Fn00000005_EDX is non-zero on the system.

The BIOS on AMD systems have historically not defined a C1 state in _CST,
so the acpi_idle driver uses HALT for ACPI C1.

Currently released systems have CPUID_Fn00000005_EDX as reserved/RAZ. If a
BIOS is released for these systems that requests a C1 state with FFH, the
FFH implementation in Linux will fail since CPUID_Fn00000005_EDX is 0. The
acpi_idle driver will then fallback to using HALT for ACPI C1.

Future systems are expected to have non-zero CPUID_Fn00000005_EDX and BIOS
support for using FFH for ACPI C1.

Allow ffh_cstate_init() to succeed on AMD systems.

Tested on Fam15h and Fam17h systems.

	Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
	Acked-by: Borislav Petkov <bp@suse.de>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 5209654a46ee71137ad9b06da99d4ef2794475af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/acpi/cstate.c
diff --cc arch/x86/kernel/acpi/cstate.c
index 2c2a9cfdcb8a,dde437f5d14f..000000000000
--- a/arch/x86/kernel/acpi/cstate.c
+++ b/arch/x86/kernel/acpi/cstate.c
@@@ -164,7 -166,9 +164,13 @@@ EXPORT_SYMBOL_GPL(acpi_processor_ffh_cs
  static int __init ffh_cstate_init(void)
  {
  	struct cpuinfo_x86 *c = &boot_cpu_data;
++<<<<<<< HEAD
 +	if (c->x86_vendor != X86_VENDOR_INTEL)
++=======
+ 
+ 	if (c->x86_vendor != X86_VENDOR_INTEL &&
+ 	    c->x86_vendor != X86_VENDOR_AMD)
++>>>>>>> 5209654a46ee (x86/ACPI/cstate: Allow ACPI C1 FFH MWAIT use on AMD systems)
  		return -1;
  
  	cpu_cstate_entry = alloc_percpu(struct cstate_entry);
* Unmerged path arch/x86/kernel/acpi/cstate.c
