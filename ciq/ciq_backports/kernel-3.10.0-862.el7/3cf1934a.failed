drm/i915/cnl: Do not add an extra page for precaution in the Gen10 LRC size

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Oscar Mateo <oscar.mateo@intel.com>
commit 3cf1934abe88103fcbeff88bbaee8a094502e6cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3cf1934a.failed

BSpec indicates exactly 16752 DWORDs (17 pages), plus one page for PPHWSP. Please
notice that, when looking at the BSpec context image table, the right filter has
to be applied (e.g. "CNL") as some rows are excluded for specific GENs.

BSpec: 1383

v2: Update count and add BSpec tag (Joonas)
v3: Warning about filters in the commit message (Joonas)

	Suggested-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Fixes: 7fd0b1a ("drm/i915/cnl: Add Gen10 LRC size")
	Signed-off-by: Oscar Mateo <oscar.mateo@intel.com>
	Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
	Cc: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
	Cc: Ben Widawsky <ben@bwidawsk.net>
	Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/1507131592-29209-1-git-send-email-oscar.mateo@intel.com
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
(cherry picked from commit 3cf1934abe88103fcbeff88bbaee8a094502e6cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_engine_cs.c
diff --cc drivers/gpu/drm/i915/intel_engine_cs.c
index 958176de4eb5,807a7aafc089..000000000000
--- a/drivers/gpu/drm/i915/intel_engine_cs.c
+++ b/drivers/gpu/drm/i915/intel_engine_cs.c
@@@ -26,59 -26,101 +26,80 @@@
  #include "intel_ringbuffer.h"
  #include "intel_lrc.h"
  
++<<<<<<< HEAD
 +static const struct engine_info {
++=======
+ /* Haswell does have the CXT_SIZE register however it does not appear to be
+  * valid. Now, docs explain in dwords what is in the context object. The full
+  * size is 70720 bytes, however, the power context and execlist context will
+  * never be saved (power context is stored elsewhere, and execlists don't work
+  * on HSW) - so the final size, including the extra state required for the
+  * Resource Streamer, is 66944 bytes, which rounds to 17 pages.
+  */
+ #define HSW_CXT_TOTAL_SIZE		(17 * PAGE_SIZE)
+ /* Same as Haswell, but 72064 bytes now. */
+ #define GEN8_CXT_TOTAL_SIZE		(18 * PAGE_SIZE)
+ 
+ #define GEN8_LR_CONTEXT_RENDER_SIZE	(20 * PAGE_SIZE)
+ #define GEN9_LR_CONTEXT_RENDER_SIZE	(22 * PAGE_SIZE)
+ #define GEN10_LR_CONTEXT_RENDER_SIZE	(18 * PAGE_SIZE)
+ 
+ #define GEN8_LR_CONTEXT_OTHER_SIZE	( 2 * PAGE_SIZE)
+ 
+ struct engine_class_info {
++>>>>>>> 3cf1934abe88 (drm/i915/cnl: Do not add an extra page for precaution in the Gen10 LRC size)
  	const char *name;
 -	int (*init_legacy)(struct intel_engine_cs *engine);
 -	int (*init_execlists)(struct intel_engine_cs *engine);
 -};
 -
 -static const struct engine_class_info intel_engine_classes[] = {
 -	[RENDER_CLASS] = {
 -		.name = "rcs",
 -		.init_execlists = logical_render_ring_init,
 -		.init_legacy = intel_init_render_ring_buffer,
 -	},
 -	[COPY_ENGINE_CLASS] = {
 -		.name = "bcs",
 -		.init_execlists = logical_xcs_ring_init,
 -		.init_legacy = intel_init_blt_ring_buffer,
 -	},
 -	[VIDEO_DECODE_CLASS] = {
 -		.name = "vcs",
 -		.init_execlists = logical_xcs_ring_init,
 -		.init_legacy = intel_init_bsd_ring_buffer,
 -	},
 -	[VIDEO_ENHANCEMENT_CLASS] = {
 -		.name = "vecs",
 -		.init_execlists = logical_xcs_ring_init,
 -		.init_legacy = intel_init_vebox_ring_buffer,
 -	},
 -};
 -
 -struct engine_info {
 -	unsigned int hw_id;
 -	unsigned int uabi_id;
 -	u8 class;
 -	u8 instance;
 +	unsigned exec_id;
 +	enum intel_engine_hw_id hw_id;
  	u32 mmio_base;
  	unsigned irq_shift;
 -};
 -
 -static const struct engine_info intel_engines[] = {
 +	int (*init_legacy)(struct intel_engine_cs *engine);
 +	int (*init_execlists)(struct intel_engine_cs *engine);
 +} intel_engines[] = {
  	[RCS] = {
 +		.name = "render ring",
 +		.exec_id = I915_EXEC_RENDER,
  		.hw_id = RCS_HW,
 -		.uabi_id = I915_EXEC_RENDER,
 -		.class = RENDER_CLASS,
 -		.instance = 0,
  		.mmio_base = RENDER_RING_BASE,
  		.irq_shift = GEN8_RCS_IRQ_SHIFT,
 +		.init_execlists = logical_render_ring_init,
 +		.init_legacy = intel_init_render_ring_buffer,
  	},
  	[BCS] = {
 +		.name = "blitter ring",
 +		.exec_id = I915_EXEC_BLT,
  		.hw_id = BCS_HW,
 -		.uabi_id = I915_EXEC_BLT,
 -		.class = COPY_ENGINE_CLASS,
 -		.instance = 0,
  		.mmio_base = BLT_RING_BASE,
  		.irq_shift = GEN8_BCS_IRQ_SHIFT,
 +		.init_execlists = logical_xcs_ring_init,
 +		.init_legacy = intel_init_blt_ring_buffer,
  	},
  	[VCS] = {
 +		.name = "bsd ring",
 +		.exec_id = I915_EXEC_BSD,
  		.hw_id = VCS_HW,
 -		.uabi_id = I915_EXEC_BSD,
 -		.class = VIDEO_DECODE_CLASS,
 -		.instance = 0,
  		.mmio_base = GEN6_BSD_RING_BASE,
  		.irq_shift = GEN8_VCS1_IRQ_SHIFT,
 +		.init_execlists = logical_xcs_ring_init,
 +		.init_legacy = intel_init_bsd_ring_buffer,
  	},
  	[VCS2] = {
 +		.name = "bsd2 ring",
 +		.exec_id = I915_EXEC_BSD,
  		.hw_id = VCS2_HW,
 -		.uabi_id = I915_EXEC_BSD,
 -		.class = VIDEO_DECODE_CLASS,
 -		.instance = 1,
  		.mmio_base = GEN8_BSD2_RING_BASE,
  		.irq_shift = GEN8_VCS2_IRQ_SHIFT,
 +		.init_execlists = logical_xcs_ring_init,
 +		.init_legacy = intel_init_bsd2_ring_buffer,
  	},
  	[VECS] = {
 +		.name = "video enhancement ring",
 +		.exec_id = I915_EXEC_VEBOX,
  		.hw_id = VECS_HW,
 -		.uabi_id = I915_EXEC_VEBOX,
 -		.class = VIDEO_ENHANCEMENT_CLASS,
 -		.instance = 0,
  		.mmio_base = VEBOX_RING_BASE,
  		.irq_shift = GEN8_VECS_IRQ_SHIFT,
 +		.init_execlists = logical_xcs_ring_init,
 +		.init_legacy = intel_init_vebox_ring_buffer,
  	},
  };
  
* Unmerged path drivers/gpu/drm/i915/intel_engine_cs.c
