platform/x86: intel-vbtn: Support separate press/release events

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [platform] x86: intel-vbtn: Support separate press/release events (Scott Wood) [1445052]
Rebuild_FUZZ: 92.31%
commit-author Stefan Brüns <stefan.bruens@rwth-aachen.de>
commit 95f38fd46cc5e45a0d5224f486e805d17ea3d93f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/95f38fd4.failed

Currently all key events use autorelease, but this forbids use as a
modifier key.

As all event codes come in even/odd pairs, we can lookup the key type
(KE_KEY/KE_IGNORE) for the key up event corresponding to the currently
handled key down event. If the key up is ignored, we keep setting the
autorelease flag for the key down.

	Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
	Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
(cherry picked from commit 95f38fd46cc5e45a0d5224f486e805d17ea3d93f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/intel-vbtn.c
diff --cc drivers/platform/x86/intel-vbtn.c
index b0d6805ca405,e3f6375af85c..000000000000
--- a/drivers/platform/x86/intel-vbtn.c
+++ b/drivers/platform/x86/intel-vbtn.c
@@@ -74,10 -76,29 +74,35 @@@ static void notify_handler(acpi_handle 
  {
  	struct platform_device *device = context;
  	struct intel_vbtn_priv *priv = dev_get_drvdata(&device->dev);
+ 	const struct key_entry *ke_rel;
+ 	bool autorelease;
  
++<<<<<<< HEAD
 +	if (!sparse_keymap_report_event(priv->input_dev, event, 1, true))
 +		dev_info(&device->dev, "unknown event index 0x%x\n",
 +			 event);
++=======
+ 	if (priv->wakeup_mode) {
+ 		if (sparse_keymap_entry_from_scancode(priv->input_dev, event)) {
+ 			pm_wakeup_hard_event(&device->dev);
+ 			return;
+ 		}
+ 	} else {
+ 		/* Use the fact press/release come in even/odd pairs */
+ 		if ((event & 1) && sparse_keymap_report_event(priv->input_dev,
+ 							      event, 0, false))
+ 			return;
+ 
+ 		ke_rel = sparse_keymap_entry_from_scancode(priv->input_dev,
+ 							   event | 1);
+ 		autorelease = !ke_rel || ke_rel->type == KE_IGNORE;
+ 
+ 		if (sparse_keymap_report_event(priv->input_dev, event, 1,
+ 					       autorelease))
+ 			return;
+ 	}
+ 	dev_dbg(&device->dev, "unknown event index 0x%x\n", event);
++>>>>>>> 95f38fd46cc5 (platform/x86: intel-vbtn: Support separate press/release events)
  }
  
  static int intel_vbtn_probe(struct platform_device *device)
* Unmerged path drivers/platform/x86/intel-vbtn.c
