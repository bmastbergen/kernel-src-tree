kvm,lapic: Justify use of swait_active()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Davidlohr Bueso <dave@stgolabs.net>
commit cc1b46803a671047be22f7832ef4a2bb3f63dd94
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/cc1b4680.failed

A comment might serve future readers.

	Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit cc1b46803a671047be22f7832ef4a2bb3f63dd94)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/lapic.c
diff --cc arch/x86/kvm/lapic.c
index 7dda91466410,69c5612be786..000000000000
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@@ -1264,6 -1301,40 +1264,43 @@@ static void update_divide_count(struct 
  				   apic->divide_count);
  }
  
++<<<<<<< HEAD
++=======
+ static void apic_update_lvtt(struct kvm_lapic *apic)
+ {
+ 	u32 timer_mode = kvm_lapic_get_reg(apic, APIC_LVTT) &
+ 			apic->lapic_timer.timer_mode_mask;
+ 
+ 	if (apic->lapic_timer.timer_mode != timer_mode) {
+ 		apic->lapic_timer.timer_mode = timer_mode;
+ 		hrtimer_cancel(&apic->lapic_timer.timer);
+ 	}
+ }
+ 
+ static void apic_timer_expired(struct kvm_lapic *apic)
+ {
+ 	struct kvm_vcpu *vcpu = apic->vcpu;
+ 	struct swait_queue_head *q = &vcpu->wq;
+ 	struct kvm_timer *ktimer = &apic->lapic_timer;
+ 
+ 	if (atomic_read(&apic->lapic_timer.pending))
+ 		return;
+ 
+ 	atomic_inc(&apic->lapic_timer.pending);
+ 	kvm_set_pending_timer(vcpu);
+ 
+ 	/*
+ 	 * For x86, the atomic_inc() is serialized, thus
+ 	 * using swait_active() is safe.
+ 	 */
+ 	if (swait_active(q))
+ 		swake_up(q);
+ 
+ 	if (apic_lvtt_tscdeadline(apic))
+ 		ktimer->expired_tscdeadline = ktimer->tscdeadline;
+ }
+ 
++>>>>>>> cc1b46803a67 (kvm,lapic: Justify use of swait_active())
  /*
   * On APICv, this test will cause a busy wait
   * during a higher-priority task.
* Unmerged path arch/x86/kvm/lapic.c
