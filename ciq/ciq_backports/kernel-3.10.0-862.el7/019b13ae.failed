vxlan: fix incorrect nlattr access in MTU check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Matthias Schiffer <mschiffer@universe-factory.net>
commit 019b13ae85260cfab9d7ccb6ca58f094d18a24fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/019b13ae.failed

The access to the wrong variable could lead to a NULL dereference and
possibly other invalid memory reads in vxlan newlink/changelink requests
with a IFLA_MTU attribute.

Fixes: a985343ba906 "vxlan: refactor verification and application of configuration"
	Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 019b13ae85260cfab9d7ccb6ca58f094d18a24fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 740e6d79f5f2,fd0ff97e3d81..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -2615,6 -2726,13 +2615,16 @@@ static int vxlan_validate(struct nlatt
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (tb[IFLA_MTU]) {
+ 		u32 mtu = nla_get_u32(tb[IFLA_MTU]);
+ 
+ 		if (mtu < ETH_MIN_MTU || mtu > ETH_MAX_MTU)
+ 			return -EINVAL;
+ 	}
+ 
++>>>>>>> 019b13ae8526 (vxlan: fix incorrect nlattr access in MTU check)
  	if (!data)
  		return -EINVAL;
  
* Unmerged path drivers/net/vxlan.c
