dma-debug: add support for resource mappings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
commit 0e74b34dfc3318bf4c7e51349d453d49fb8e9e16
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0e74b34d.failed

A MMIO mapped resource can not be represented by a struct page so a new
debug type is needed to handle this. This patch add such type and
functionality to add/remove entries and how to translate them to a
physical address.

	Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
	Acked-by: Arnd Bergmann <arnd@arndb.de>
	Signed-off-by: Vinod Koul <vinod.koul@intel.com>
(cherry picked from commit 0e74b34dfc3318bf4c7e51349d453d49fb8e9e16)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/dma-debug.c
diff --cc lib/dma-debug.c
index 050a97ad50b2,2ba086b0d3e7..000000000000
--- a/lib/dma-debug.c
+++ b/lib/dma-debug.c
@@@ -380,6 -399,14 +382,17 @@@ static void hash_bucket_del(struct dma_
  	list_del(&entry->list);
  }
  
++<<<<<<< HEAD
++=======
+ static unsigned long long phys_addr(struct dma_debug_entry *entry)
+ {
+ 	if (entry->type == dma_debug_resource)
+ 		return __pfn_to_phys(entry->pfn) + entry->offset;
+ 
+ 	return page_to_phys(pfn_to_page(entry->pfn)) + entry->offset;
+ }
+ 
++>>>>>>> 0e74b34dfc33 (dma-debug: add support for resource mappings)
  /*
   * Dump mapping entries for debugging purposes
   */
diff --git a/include/linux/dma-debug.h b/include/linux/dma-debug.h
index fc0e34ce038f..73b23d5cdbab 100644
--- a/include/linux/dma-debug.h
+++ b/include/linux/dma-debug.h
@@ -56,6 +56,13 @@ extern void debug_dma_alloc_coherent(struct device *dev, size_t size,
 extern void debug_dma_free_coherent(struct device *dev, size_t size,
 				    void *virt, dma_addr_t addr);
 
+extern void debug_dma_map_resource(struct device *dev, phys_addr_t addr,
+				   size_t size, int direction,
+				   dma_addr_t dma_addr);
+
+extern void debug_dma_unmap_resource(struct device *dev, dma_addr_t dma_addr,
+				     size_t size, int direction);
+
 extern void debug_dma_sync_single_for_cpu(struct device *dev,
 					  dma_addr_t dma_handle, size_t size,
 					  int direction);
@@ -139,6 +146,18 @@ static inline void debug_dma_free_coherent(struct device *dev, size_t size,
 {
 }
 
+static inline void debug_dma_map_resource(struct device *dev, phys_addr_t addr,
+					  size_t size, int direction,
+					  dma_addr_t dma_addr)
+{
+}
+
+static inline void debug_dma_unmap_resource(struct device *dev,
+					    dma_addr_t dma_addr, size_t size,
+					    int direction)
+{
+}
+
 static inline void debug_dma_sync_single_for_cpu(struct device *dev,
 						 dma_addr_t dma_handle,
 						 size_t size, int direction)
* Unmerged path lib/dma-debug.c
