tools/power turbostat: add --cpu parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [tools] power turbostat: add --cpu parameter (Prarit Bhargava) [1514290]
Rebuild_FUZZ: 92.31%
commit-author Len Brown <len.brown@intel.com>
commit 1ef7d21afe2197013aefe0e93641aa2c5a9ac3db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/1ef7d21a.failed

With the --cpu parameter, turbostat prints only lines
for the specified set of CPUs:

sudo ./turbostat --quiet --show Core,CPU --cpu 0,1,3..5,6-7
	Core	CPU
	-	-
	0	0
	0	4
	1	1
	1	5
	2	6
	3	3
	3	7

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 1ef7d21afe2197013aefe0e93641aa2c5a9ac3db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.8
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.8
index 0863a08025ac,efe6a7147ff2..000000000000
--- a/tools/power/x86/turbostat/turbostat.8
+++ b/tools/power/x86/turbostat/turbostat.8
@@@ -47,9 -47,11 +47,15 @@@ name as necessary to disambiguate it fr
  		default: delta
  .fi
  .PP
++<<<<<<< HEAD
 +\fB--hide column\fP do not show the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.
++=======
+ \fB--cpu cpu-set\fP limit output to system summary plus the specified cpu-set.  cpu-set is a comma delimited list of cpu ranges. cpu ranges can be individual cpu numbers or start and end numbers, separated by ".." or '-'.  eg. 1,2,8,14..17,21-44
+ .PP
+ \fB--hide column\fP do not show the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.  Use "--hide sysfs" to hide the sysfs statistics columns as a group.
++>>>>>>> 1ef7d21afe21 (tools/power turbostat: add --cpu parameter)
  .PP
 -\fB--show column\fP show only the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.  Use "--show sysfs" to show the sysfs statistics columns as a group.
 +\fB--show column\fP show only the specified columns.  May be invoked multiple times, or with a comma-separated list of column names.
  .PP
  \fB--Dump\fP displays the raw counter values.
  .PP
diff --cc tools/power/x86/turbostat/turbostat.c
index e3fa4dd37e21,8c965bb2f461..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -688,8 -701,15 +689,13 @@@ int format_counters(struct thread_data 
  	if (show_pkg_only && !(t->flags & CPU_IS_FIRST_CORE_IN_PACKAGE))
  		return 0;
  
+ 	/*if not summary line and --cpu is used */
+ 	if ((t != &average.threads) &&
+ 		(cpu_subset && !CPU_ISSET_S(t->cpu_id, cpu_subset_size, cpu_subset)))
+ 		return 0;
+ 
  	interval_float = tv_delta.tv_sec + tv_delta.tv_usec/1000000.0;
  
 -	tsc = t->tsc * tsc_tweak;
 -
  	/* topo columns, print blanks on 1st (average) line */
  	if (t == &average.threads) {
  		if (DO_BIC(BIC_Package))
@@@ -3914,7 -4102,8 +3920,12 @@@ void help(
  	"to print statistics, until interrupted.\n"
  	"--add		add a counter\n"
  	"		eg. --add msr0x10,u64,cpu,delta,MY_TSC\n"
++<<<<<<< HEAD
 +	"--debug	run in \"debug\" mode\n"
++=======
+ 	"--cpu	cpu-set	limit output to summary plus cpu-set cpu-set\n"
+ 	"--quiet	skip decoding system configuration header\n"
++>>>>>>> 1ef7d21afe21 (tools/power turbostat: add --cpu parameter)
  	"--interval sec	Override default 5-second measurement interval\n"
  	"--help		print this help message\n"
  	"--out file	create or truncate \"file\" for all output\n"
@@@ -4429,6 -4632,136 +4449,139 @@@ next
  		exit(1);
  	}
  }
++<<<<<<< HEAD
++=======
+ 
+ void probe_sysfs(void)
+ {
+ 	char path[64];
+ 	char name_buf[16];
+ 	FILE *input;
+ 	int state;
+ 	char *sp;
+ 
+ 	if (!DO_BIC(BIC_sysfs))
+ 		return;
+ 
+ 	for (state = 10; state > 0; --state) {
+ 
+ 		sprintf(path, "/sys/devices/system/cpu/cpu%d/cpuidle/state%d/name",
+ 			base_cpu, state);
+ 		input = fopen(path, "r");
+ 		if (input == NULL)
+ 			continue;
+ 		fgets(name_buf, sizeof(name_buf), input);
+ 
+ 		 /* truncate "C1-HSW\n" to "C1", or truncate "C1\n" to "C1" */
+ 		sp = strchr(name_buf, '-');
+ 		if (!sp)
+ 			sp = strchrnul(name_buf, '\n');
+ 		*sp = '%';
+ 		*(sp + 1) = '\0';
+ 
+ 		fclose(input);
+ 
+ 		sprintf(path, "cpuidle/state%d/time", state);
+ 
+ 		add_counter(0, path, name_buf, 64, SCOPE_CPU, COUNTER_USEC,
+ 				FORMAT_PERCENT, SYSFS_PERCPU);
+ 	}
+ 
+ 	for (state = 10; state > 0; --state) {
+ 
+ 		sprintf(path, "/sys/devices/system/cpu/cpu%d/cpuidle/state%d/name",
+ 			base_cpu, state);
+ 		input = fopen(path, "r");
+ 		if (input == NULL)
+ 			continue;
+ 		fgets(name_buf, sizeof(name_buf), input);
+ 		 /* truncate "C1-HSW\n" to "C1", or truncate "C1\n" to "C1" */
+ 		sp = strchr(name_buf, '-');
+ 		if (!sp)
+ 			sp = strchrnul(name_buf, '\n');
+ 		*sp = '\0';
+ 		fclose(input);
+ 
+ 		sprintf(path, "cpuidle/state%d/usage", state);
+ 
+ 		add_counter(0, path, name_buf, 64, SCOPE_CPU, COUNTER_ITEMS,
+ 				FORMAT_DELTA, SYSFS_PERCPU);
+ 	}
+ 
+ }
+ 
+ 
+ /*
+  * parse cpuset with following syntax
+  * 1,2,4..6,8-10 and set bits in cpu_subset
+  */
+ void parse_cpu_command(char *optarg)
+ {
+ 	unsigned int start, end;
+ 	char *next;
+ 
+ 	cpu_subset = CPU_ALLOC(CPU_SUBSET_MAXCPUS);
+ 	if (cpu_subset == NULL)
+ 		err(3, "CPU_ALLOC");
+ 	cpu_subset_size = CPU_ALLOC_SIZE(CPU_SUBSET_MAXCPUS);
+ 
+ 	CPU_ZERO_S(cpu_subset_size, cpu_subset);
+ 
+ 	next = optarg;
+ 
+ 	while (next && *next) {
+ 
+ 		if (*next == '-')	/* no negative cpu numbers */
+ 			goto error;
+ 
+ 		start = strtoul(next, &next, 10);
+ 
+ 		if (start >= CPU_SUBSET_MAXCPUS)
+ 			goto error;
+ 		CPU_SET_S(start, cpu_subset_size, cpu_subset);
+ 
+ 		if (*next == '\0')
+ 			break;
+ 
+ 		if (*next == ',') {
+ 			next += 1;
+ 			continue;
+ 		}
+ 
+ 		if (*next == '-') {
+ 			next += 1;	/* start range */
+ 		} else if (*next == '.') {
+ 			next += 1;
+ 			if (*next == '.')
+ 				next += 1;	/* start range */
+ 			else
+ 				goto error;
+ 		}
+ 
+ 		end = strtoul(next, &next, 10);
+ 		if (end <= start)
+ 			goto error;
+ 
+ 		while (++start <= end) {
+ 			if (start >= CPU_SUBSET_MAXCPUS)
+ 				goto error;
+ 			CPU_SET_S(start, cpu_subset_size, cpu_subset);
+ 		}
+ 
+ 		if (*next == ',')
+ 			next += 1;
+ 		else if (*next != '\0')
+ 			goto error;
+ 	}
+ 
+ 	return;
+ 
+ error:
+ 	fprintf(stderr, "'--cpu %s' malformed\n", optarg);
+ 	exit(-1);
+ }
+ 
++>>>>>>> 1ef7d21afe21 (tools/power turbostat: add --cpu parameter)
  /*
   * HIDE_LIST - hide this list of counters, show the rest [default]
   * SHOW_LIST - show this list of counters, hide the rest
@@@ -4469,9 -4803,9 +4622,10 @@@ void cmdline(int argc, char **argv
  	int option_index = 0;
  	static struct option long_options[] = {
  		{"add",		required_argument,	0, 'a'},
+ 		{"cpu",		required_argument,	0, 'c'},
  		{"Dump",	no_argument,		0, 'D'},
 -		{"debug",	no_argument,		0, 'd'},	/* internal, not documented */
 +		{"debug",	no_argument,		0, 'd'},
 +		{"verbose",	no_argument,		0, 'v'},
  		{"interval",	required_argument,	0, 'i'},
  		{"help",	no_argument,		0, 'h'},
  		{"hide",	required_argument,	0, 'H'},	// meh, -h taken by --help
* Unmerged path tools/power/x86/turbostat/turbostat.8
* Unmerged path tools/power/x86/turbostat/turbostat.c
