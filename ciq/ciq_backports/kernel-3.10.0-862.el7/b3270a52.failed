x86/platform/UV: Mark tsc_check_sync as an init function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] platform/uv: Mark tsc_check_sync as an init function (Frank Ramsay) [1526066]
Rebuild_FUZZ: 96.30%
commit-author mike.travis@hpe.com <mike.travis@hpe.com>
commit b3270a5210229ee543339d34b74ba527f978c55b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b3270a52.failed

Fix build problem:

>> WARNING: vmlinux.o(.text+0x4223a): Section mismatch in
   reference from the function uv_tsc_check_sync() to the function
   .init.text:uv_early_read_mmr() The function uv_tsc_check_sync()
   references the function __init uv_early_read_mmr().  This is often
   because uv_tsc_check_sync lacks a __init

	Signed-off-by: Mike Travis <mike.travis@hpe.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Prarit Bhargava <prarit@redhat.com>
	Cc: Dimitri Sivanich <dimitri.sivanich@hpe.com>
	Cc: Russ Anderson <russ.anderson@hpe.com>
	Cc: Andrew Banman <andrew.banman@hpe.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Bin Gao <bin.gao@linux.intel.com>
Link: https://lkml.kernel.org/r/20171023191841.985614692@stormcage.americas.sgi.com

(cherry picked from commit b3270a5210229ee543339d34b74ba527f978c55b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/apic/x2apic_uv_x.c
diff --cc arch/x86/kernel/apic/x2apic_uv_x.c
index dd27b8dad976,5eda48a72617..000000000000
--- a/arch/x86/kernel/apic/x2apic_uv_x.c
+++ b/arch/x86/kernel/apic/x2apic_uv_x.c
@@@ -152,11 -154,54 +152,62 @@@ static int __init early_get_pnodeid(voi
  	return pnode;
  }
  
++<<<<<<< HEAD
 +/* [copied from arch/x86/kernel/cpu/topology.c:detect_extended_topology()] */
 +#define SMT_LEVEL	0	/* leaf 0xb SMT level */
 +#define INVALID_TYPE	0	/* leaf 0xb sub-leaf types */
 +#define SMT_TYPE	1
 +#define CORE_TYPE	2
++=======
+ static void __init uv_tsc_check_sync(void)
+ {
+ 	u64 mmr;
+ 	int sync_state;
+ 	int mmr_shift;
+ 	char *state;
+ 	bool valid;
+ 
+ 	/* Accommodate different UV arch BIOSes */
+ 	mmr = uv_early_read_mmr(UVH_TSC_SYNC_MMR);
+ 	mmr_shift =
+ 		is_uv1_hub() ? 0 :
+ 		is_uv2_hub() ? UVH_TSC_SYNC_SHIFT_UV2K : UVH_TSC_SYNC_SHIFT;
+ 	if (mmr_shift)
+ 		sync_state = (mmr >> mmr_shift) & UVH_TSC_SYNC_MASK;
+ 	else
+ 		sync_state = 0;
+ 
+ 	switch (sync_state) {
+ 	case UVH_TSC_SYNC_VALID:
+ 		state = "in sync";
+ 		valid = true;
+ 		break;
+ 
+ 	case UVH_TSC_SYNC_INVALID:
+ 		state = "unstable";
+ 		valid = false;
+ 		break;
+ 	default:
+ 		state = "unknown: assuming valid";
+ 		valid = true;
+ 		break;
+ 	}
+ 	pr_info("UV: TSC sync state from BIOS:0%d(%s)\n", sync_state, state);
+ 
+ 	/* Mark flag that says TSC != 0 is valid for socket 0 */
+ 	if (valid)
+ 		mark_tsc_async_resets("UV BIOS");
+ 	else
+ 		mark_tsc_unstable("UV BIOS");
+ }
+ 
+ /* [Copied from arch/x86/kernel/cpu/topology.c:detect_extended_topology()] */
+ 
+ #define SMT_LEVEL			0	/* Leaf 0xb SMT level */
+ #define INVALID_TYPE			0	/* Leaf 0xb sub-leaf types */
+ #define SMT_TYPE			1
+ #define CORE_TYPE			2
++>>>>>>> b3270a521022 (x86/platform/UV: Mark tsc_check_sync as an init function)
  #define LEAFB_SUBTYPE(ecx)		(((ecx) >> 8) & 0xff)
  #define BITS_SHIFT_NEXT_LEVEL(eax)	((eax) & 0x1f)
  
* Unmerged path arch/x86/kernel/apic/x2apic_uv_x.c
