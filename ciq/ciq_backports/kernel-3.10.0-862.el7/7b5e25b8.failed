iommu/amd: Use trylock to aquire bitmap_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [iommu] amd: Use trylock to aquire bitmap_lock (Jerry Snitselaar) [1411581]
Rebuild_FUZZ: 92.68%
commit-author Joerg Roedel <jroedel@suse.de>
commit 7b5e25b84eba25e78bce736a5c99649f7ff0f5c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7b5e25b8.failed

First search for a non-contended aperture with trylock
before spinning.

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 7b5e25b84eba25e78bce736a5c99649f7ff0f5c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index 7b0ec864f647,eed355c5211d..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -1680,11 -1591,22 +1687,30 @@@ static unsigned long dma_ops_area_alloc
  {
  	unsigned long boundary_size, mask;
  	unsigned long address = -1;
++<<<<<<< HEAD
 +	int start = dom->next_index;
 +	int i;
 +
 +	mask = dma_get_seg_boundary(dev);
 +
++=======
+ 	bool first = true;
+ 	u32 start, i;
+ 
+ 	preempt_disable();
+ 
+ 	mask = dma_get_seg_boundary(dev);
+ 
+ again:
+ 	start = this_cpu_read(*dom->next_index);
+ 
+ 	/* Sanity check - is it really necessary? */
+ 	if (unlikely(start > APERTURE_MAX_RANGES)) {
+ 		start = 0;
+ 		this_cpu_write(*dom->next_index, 0);
+ 	}
+ 
++>>>>>>> 7b5e25b84eba (iommu/amd: Use trylock to aquire bitmap_lock)
  	boundary_size = mask + 1 ? ALIGN(mask + 1, PAGE_SIZE) >> PAGE_SHIFT :
  				   1UL << (BITS_PER_LONG - PAGE_SHIFT);
  
@@@ -1698,14 -1623,21 +1724,24 @@@
  
  		address = dma_ops_aperture_alloc(dom, range, pages,
  						 dma_mask, boundary_size,
- 						 align_mask);
+ 						 align_mask, first);
  		if (address != -1) {
  			address = range->offset + (address << PAGE_SHIFT);
 -			this_cpu_write(*dom->next_index, index);
 +			dom->next_index = i;
  			break;
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (address == -1 && first) {
+ 		first = false;
+ 		goto again;
+ 	}
+ 
+ 	preempt_enable();
+ 
++>>>>>>> 7b5e25b84eba (iommu/amd: Use trylock to aquire bitmap_lock)
  	return address;
  }
  
* Unmerged path drivers/iommu/amd_iommu.c
