iscsi/iser-target: Add fabric_prot_type attribute support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit 901c04a33f138e5fb935a1621375a1a0997fe7b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/901c04a3.failed

This patch updates iscsi/iser-target to add a new fabric_prot_type
TPG attribute for iser-target, used for controlling LLD level
protection into LIO when the backend device does not support T10-PI.

This is required for ib_isert to enable WRITE_STRIP + READ_INSERT
hardware offloads.

It's disabled by default and controls which se_sesion->sess_prot_type
are set at iscsi_target_locate_portal() session registration time.

	Cc: Sagi Grimberg <sagig@mellanox.com>
	Cc: Martin Petersen <martin.petersen@oracle.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 901c04a33f138e5fb935a1621375a1a0997fe7b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/iscsi/iscsi_target_configfs.c
#	drivers/target/iscsi/iscsi_target_tpg.c
#	drivers/target/iscsi/iscsi_target_tpg.h
#	include/target/iscsi/iscsi_target_core.h
diff --cc drivers/target/iscsi/iscsi_target_configfs.c
index e02616d0c024,9cb5ab472a52..000000000000
--- a/drivers/target/iscsi/iscsi_target_configfs.c
+++ b/drivers/target/iscsi/iscsi_target_configfs.c
@@@ -1138,10 -1053,10 +1138,17 @@@ TPG_ATTR(default_erl, S_IRUGO | S_IWUSR
  DEF_TPG_ATTRIB(t10_pi);
  TPG_ATTR(t10_pi, S_IRUGO | S_IWUSR);
  /*
++<<<<<<< HEAD
 + * Define iscsi_tpg_attrib_s_tpg_enabled_sendtargets
 + */
 +DEF_TPG_ATTRIB(tpg_enabled_sendtargets);
 +TPG_ATTR(tpg_enabled_sendtargets, S_IRUGO | S_IWUSR);
++=======
+  * Define iscsi_tpg_attrib_s_fabric_prot_type
+  */
+ DEF_TPG_ATTRIB(fabric_prot_type);
+ TPG_ATTR(fabric_prot_type, S_IRUGO | S_IWUSR);
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  
  static struct configfs_attribute *lio_target_tpg_attrib_attrs[] = {
  	&iscsi_tpg_attrib_authentication.attr,
@@@ -1155,7 -1070,7 +1162,11 @@@
  	&iscsi_tpg_attrib_demo_mode_discovery.attr,
  	&iscsi_tpg_attrib_default_erl.attr,
  	&iscsi_tpg_attrib_t10_pi.attr,
++<<<<<<< HEAD
 +	&iscsi_tpg_attrib_tpg_enabled_sendtargets.attr,
++=======
+ 	&iscsi_tpg_attrib_fabric_prot_type.attr,
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  	NULL,
  };
  
diff --cc drivers/target/iscsi/iscsi_target_tpg.c
index 2426b0bae643,3076e6f3a831..000000000000
--- a/drivers/target/iscsi/iscsi_target_tpg.c
+++ b/drivers/target/iscsi/iscsi_target_tpg.c
@@@ -228,7 -228,7 +228,11 @@@ static void iscsit_set_default_tpg_attr
  	a->demo_mode_discovery = TA_DEMO_MODE_DISCOVERY;
  	a->default_erl = TA_DEFAULT_ERL;
  	a->t10_pi = TA_DEFAULT_T10_PI;
++<<<<<<< HEAD
 +	a->tpg_enabled_sendtargets = TA_DEFAULT_TPG_ENABLED_SENDTARGETS;
++=======
+ 	a->fabric_prot_type = TA_DEFAULT_FABRIC_PROT_TYPE;
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  }
  
  int iscsit_tpg_add_portal_group(struct iscsi_tiqn *tiqn, struct iscsi_portal_group *tpg)
@@@ -879,20 -880,20 +883,37 @@@ int iscsit_ta_t10_pi
  	return 0;
  }
  
++<<<<<<< HEAD
 +int iscsit_ta_tpg_enabled_sendtargets(
 +	struct iscsi_portal_group *tpg,
 +	u32 flag)
 +{
 +	struct iscsi_tpg_attrib *a = &tpg->tpg_attrib;
 +
 +	if ((flag != 0) && (flag != 1)) {
 +		pr_err("Illegal value %d\n", flag);
 +		return -EINVAL;
 +	}
 +
 +	a->tpg_enabled_sendtargets = flag;
 +	pr_debug("iSCSI_TPG[%hu] - TPG enabled bit required for SendTargets:"
 +		" %s\n", tpg->tpgt, (a->tpg_enabled_sendtargets) ? "ON" : "OFF");
++=======
+ int iscsit_ta_fabric_prot_type(
+ 	struct iscsi_portal_group *tpg,
+ 	u32 prot_type)
+ {
+ 	struct iscsi_tpg_attrib *a = &tpg->tpg_attrib;
+ 
+ 	if ((prot_type != 0) && (prot_type != 1) && (prot_type != 3)) {
+ 		pr_err("Illegal value for fabric_prot_type: %u\n", prot_type);
+ 		return -EINVAL;
+ 	}
+ 
+ 	a->fabric_prot_type = prot_type;
+ 	pr_debug("iSCSI_TPG[%hu] - T10 Fabric Protection Type: %u\n",
+ 		 tpg->tpgt, prot_type);
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  
  	return 0;
  }
diff --cc drivers/target/iscsi/iscsi_target_tpg.h
index b2f49c0fd13a,95ff5bdecd71..000000000000
--- a/drivers/target/iscsi/iscsi_target_tpg.h
+++ b/drivers/target/iscsi/iscsi_target_tpg.h
@@@ -39,6 -39,6 +39,10 @@@ extern int iscsit_ta_prod_mode_write_pr
  extern int iscsit_ta_demo_mode_discovery(struct iscsi_portal_group *, u32);
  extern int iscsit_ta_default_erl(struct iscsi_portal_group *, u32);
  extern int iscsit_ta_t10_pi(struct iscsi_portal_group *, u32);
++<<<<<<< HEAD
 +extern int iscsit_ta_tpg_enabled_sendtargets(struct iscsi_portal_group *, u32);
++=======
+ extern int iscsit_ta_fabric_prot_type(struct iscsi_portal_group *, u32);
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  
  #endif /* ISCSI_TARGET_TPG_H */
diff --cc include/target/iscsi/iscsi_target_core.h
index 85a93f1e5dc5,54e7af301888..000000000000
--- a/include/target/iscsi/iscsi_target_core.h
+++ b/include/target/iscsi/iscsi_target_core.h
@@@ -62,8 -62,7 +62,12 @@@
  #define TA_CACHE_CORE_NPS		0
  /* T10 protection information disabled by default */
  #define TA_DEFAULT_T10_PI		0
++<<<<<<< HEAD
 +/* TPG status needs to be enabled to return sendtargets discovery endpoint info */
 +#define TA_DEFAULT_TPG_ENABLED_SENDTARGETS 1
++=======
+ #define TA_DEFAULT_FABRIC_PROT_TYPE	0
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  
  #define ISCSI_IOV_DATA_BUFFER		5
  
@@@ -774,7 -773,7 +778,11 @@@ struct iscsi_tpg_attrib 
  	u32			demo_mode_discovery;
  	u32			default_erl;
  	u8			t10_pi;
++<<<<<<< HEAD
 +	u32			tpg_enabled_sendtargets;
++=======
+ 	u32			fabric_prot_type;
++>>>>>>> 901c04a33f13 (iscsi/iser-target: Add fabric_prot_type attribute support)
  	struct iscsi_portal_group *tpg;
  };
  
* Unmerged path drivers/target/iscsi/iscsi_target_configfs.c
* Unmerged path drivers/target/iscsi/iscsi_target_tpg.c
* Unmerged path drivers/target/iscsi/iscsi_target_tpg.h
* Unmerged path include/target/iscsi/iscsi_target_core.h
