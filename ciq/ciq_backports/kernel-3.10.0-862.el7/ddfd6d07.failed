sysfs: fix up 80 column coding style issues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit ddfd6d074e0fadd14b6670394a6a7fb6a955de18
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ddfd6d07.failed

This fixes up the 80 column coding style issues in the sysfs .c files.

	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ddfd6d074e0fadd14b6670394a6a7fb6a955de18)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/sysfs/file.c
diff --cc fs/sysfs/file.c
index 65052df09485,62bdcefbac6c..000000000000
--- a/fs/sysfs/file.c
+++ b/fs/sysfs/file.c
@@@ -185,8 -185,8 +185,13 @@@ static int fill_write_buffer(struct sys
   *	dealing with, then call the store() method for the attribute,
   *	passing the buffer that we acquired in fill_write_buffer().
   */
++<<<<<<< HEAD
 +static int
 +flush_write_buffer(struct dentry * dentry, struct sysfs_buffer * buffer, size_t count)
++=======
+ static int flush_write_buffer(struct dentry *dentry,
+ 			      struct sysfs_buffer *buffer, size_t count)
++>>>>>>> ddfd6d074e0f (sysfs: fix up 80 column coding style issues)
  {
  	struct sysfs_dirent *attr_sd = dentry->d_fsdata;
  	struct kobject *kobj = attr_sd->s_parent->s_dir.kobj;
@@@ -221,11 -221,10 +226,10 @@@
   *	Hint: if you're writing a value, first read the file, modify only the
   *	the value you're changing, then write entire buffer back.
   */
- 
- static ssize_t
- sysfs_write_file(struct file *file, const char __user *buf, size_t count, loff_t *ppos)
+ static ssize_t sysfs_write_file(struct file *file, const char __user *buf,
+ 				size_t count, loff_t *ppos)
  {
 -	struct sysfs_buffer *buffer = file->private_data;
 +	struct sysfs_buffer * buffer = file->private_data;
  	ssize_t len;
  
  	mutex_lock(&buffer->mutex);
diff --git a/fs/sysfs/dir.c b/fs/sysfs/dir.c
index 2c6121841f59..0f13cea0386a 100644
--- a/fs/sysfs/dir.c
+++ b/fs/sysfs/dir.c
@@ -889,7 +889,9 @@ int sysfs_rename(struct sysfs_dirent *sd,
 		sd->s_name = new_name;
 	}
 
-	/* Move to the appropriate place in the appropriate directories rbtree. */
+	/*
+	 * Move to the appropriate place in the appropriate directories rbtree.
+	 */
 	sysfs_unlink_sibling(sd);
 	sysfs_get(new_parent_sd);
 	sysfs_put(sd->s_parent);
* Unmerged path fs/sysfs/file.c
diff --git a/fs/sysfs/inode.c b/fs/sysfs/inode.c
index 15a606d56f5d..3a9f8469197c 100644
--- a/fs/sysfs/inode.c
+++ b/fs/sysfs/inode.c
@@ -128,7 +128,8 @@ out:
 	return error;
 }
 
-static int sysfs_sd_setsecdata(struct sysfs_dirent *sd, void **secdata, u32 *secdata_len)
+static int sysfs_sd_setsecdata(struct sysfs_dirent *sd, void **secdata,
+			       u32 *secdata_len)
 {
 	struct sysfs_inode_attrs *iattrs;
 	void *old_secdata;
@@ -220,7 +221,8 @@ static void sysfs_refresh_inode(struct sysfs_dirent *sd, struct inode *inode)
 		set_nlink(inode, sd->s_dir.subdirs + 2);
 }
 
-int sysfs_getattr(struct vfsmount *mnt, struct dentry *dentry, struct kstat *stat)
+int sysfs_getattr(struct vfsmount *mnt, struct dentry *dentry,
+		  struct kstat *stat)
 {
 	struct sysfs_dirent *sd = dentry->d_fsdata;
 	struct inode *inode = dentry->d_inode;
@@ -312,7 +314,8 @@ void sysfs_evict_inode(struct inode *inode)
 	sysfs_put(sd);
 }
 
-int sysfs_hash_and_remove(struct sysfs_dirent *dir_sd, const void *ns, const char *name)
+int sysfs_hash_and_remove(struct sysfs_dirent *dir_sd, const void *ns,
+			  const char *name)
 {
 	struct sysfs_addrm_cxt acxt;
 	struct sysfs_dirent *sd;
diff --git a/fs/sysfs/symlink.c b/fs/sysfs/symlink.c
index 9fab2e7f7357..aee4d66411e0 100644
--- a/fs/sysfs/symlink.c
+++ b/fs/sysfs/symlink.c
@@ -305,7 +305,8 @@ static void *sysfs_follow_link(struct dentry *dentry, struct nameidata *nd)
 	return NULL;
 }
 
-static void sysfs_put_link(struct dentry *dentry, struct nameidata *nd, void *cookie)
+static void sysfs_put_link(struct dentry *dentry, struct nameidata *nd,
+			   void *cookie)
 {
 	char *page = nd_get_link(nd);
 	if (!IS_ERR(page))
