ceph: handle -EAGAIN returned by ceph_update_writeable_page()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit f0b33df57a5f03c637f75ead7cb4d978c59cc63d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f0b33df5.failed

when ceph_update_writeable_page() return -EAGAIN, caller should
lock the page and call ceph_update_writeable_page() again.

	Signed-off-by: Yan, Zheng <zyan@redhat.com>
(cherry picked from commit f0b33df57a5f03c637f75ead7cb4d978c59cc63d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/addr.c
diff --cc fs/ceph/addr.c
index 49a4dc035844,97ee5d1fbb61..000000000000
--- a/fs/ceph/addr.c
+++ b/fs/ceph/addr.c
@@@ -1435,27 -1475,23 +1435,45 @@@ static int ceph_page_mkwrite(struct vm_
  	/* Update time before taking page lock */
  	file_update_time(vma->vm_file);
  
- 	lock_page(page);
+ 	do {
+ 		lock_page(page);
  
++<<<<<<< HEAD
 +	ret = VM_FAULT_NOPAGE;
 +	if ((off > size) ||
 +	    (page->mapping != inode->i_mapping)) {
 +		unlock_page(page);
 +		goto out;
 +	}
 +
 +	ret = ceph_update_writeable_page(vma->vm_file, off, len, page);
 +	if (ret >= 0) {
 +		/* success.  we'll keep the page locked. */
 +		set_page_dirty(page);
 +		ret = VM_FAULT_LOCKED;
 +	} else {
 +		if (ret == -ENOMEM)
 +			ret = VM_FAULT_OOM;
 +		else
 +			ret = VM_FAULT_SIGBUS;
 +	}
 +out:
++=======
+ 		if ((off > size) || (page->mapping != inode->i_mapping)) {
+ 			unlock_page(page);
+ 			ret = VM_FAULT_NOPAGE;
+ 			break;
+ 		}
+ 
+ 		ret = ceph_update_writeable_page(vma->vm_file, off, len, page);
+ 		if (ret >= 0) {
+ 			/* success.  we'll keep the page locked. */
+ 			set_page_dirty(page);
+ 			ret = VM_FAULT_LOCKED;
+ 		}
+ 	} while (ret == -EAGAIN);
+ 
++>>>>>>> f0b33df57a5f (ceph: handle -EAGAIN returned by ceph_update_writeable_page())
  	if (ret == VM_FAULT_LOCKED ||
  	    ci->i_inline_version != CEPH_INLINE_NONE) {
  		int dirty;
* Unmerged path fs/ceph/addr.c
