ALSA: x86: Drop redundant had_stream_pvt

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit fa5dfe6a01481a8fa00469be42ea32beb468a501
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/fa5dfe6a.failed

The had_stream_pvt struct assigned to PCM runtime private data tracks
merely the stream running status, and the very same information is
carried by had_stream->stream_type.  Kill it.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit fa5dfe6a01481a8fa00469be42ea32beb468a501)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/x86/intel_hdmi_audio.c
#	sound/x86/intel_hdmi_audio.h
diff --cc sound/x86/intel_hdmi_audio.c
index 063e2be94d05,88e9a91f28a0..000000000000
--- a/sound/x86/intel_hdmi_audio.c
+++ b/sound/x86/intel_hdmi_audio.c
@@@ -955,29 -953,21 +955,37 @@@ static int snd_intelhad_open(struct snd
  {
  	struct snd_intelhad *intelhaddata;
  	struct snd_pcm_runtime *runtime;
++<<<<<<< HEAD
 +	struct had_stream_pvt *stream;
 +	struct had_pvt_data *had_stream;
++=======
+ 	struct had_stream_data *had_stream;
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  	int retval;
  
 +	pr_debug("snd_intelhad_open called\n");
  	intelhaddata = snd_pcm_substream_chip(substream);
 -	had_stream = &intelhaddata->stream_data;
 +	had_stream = intelhaddata->private_data;
  	runtime = substream->runtime;
  	intelhaddata->underrun_count = 0;
  
  	pm_runtime_get(intelhaddata->dev);
  
 -	if (intelhaddata->drv_status == HAD_DRV_DISCONNECTED) {
 -		dev_dbg(intelhaddata->dev, "%s: HDMI cable plugged-out\n",
 -			__func__);
 +	if (had_get_hwstate(intelhaddata)) {
 +		pr_err("%s: HDMI cable plugged-out\n", __func__);
  		retval = -ENODEV;
++<<<<<<< HEAD
 +		goto exit_put_handle;
 +	}
 +
 +	/* Check, if device already in use */
 +	if (runtime->private_data) {
 +		pr_err("Device already in use\n");
 +		retval = -EBUSY;
 +		goto exit_put_handle;
++=======
+ 		goto error;
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  	}
  
  	/* set the runtime hw parameter with local snd_pcm_hardware struct */
@@@ -1002,8 -984,9 +1002,14 @@@
  	retval = snd_pcm_hw_constraint_step(substream->runtime, 0,
  			SNDRV_PCM_HW_PARAM_PERIOD_BYTES, 64);
  	if (retval < 0) {
++<<<<<<< HEAD
 +		pr_err("%s:step_size=64 failed,err=%d\n", __func__, retval);
 +		goto exit_err;
++=======
+ 		dev_dbg(intelhaddata->dev, "%s:step_size=64 failed,err=%d\n",
+ 			__func__, retval);
+ 		goto error;
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  	}
  
  	return retval;
@@@ -1014,27 -995,14 +1018,23 @@@
  	return retval;
  }
  
 -/*
 +/**
   * had_period_elapsed - updates the hardware pointer status
 - * @had_substream: substream for which the stream function is called
 + * @had_substream:substream for which the stream function is called
 + *
   */
 -static void had_period_elapsed(struct snd_pcm_substream *substream)
 +static void had_period_elapsed(void *had_substream)
  {
++<<<<<<< HEAD
 +	struct snd_pcm_substream *substream = had_substream;
 +	struct had_stream_pvt *stream;
 +
 +	/* pr_debug("had_period_elapsed called\n"); */
 +
++=======
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  	if (!substream || !substream->runtime)
  		return;
- 	stream = substream->runtime->private_data;
- 	if (!stream)
- 		return;
- 
- 	if (stream->stream_status != STREAM_RUNNING)
- 		return;
  	snd_pcm_period_elapsed(substream);
  }
  
@@@ -1068,17 -1015,8 +1068,19 @@@ static int snd_intelhad_init_stream(str
  static int snd_intelhad_close(struct snd_pcm_substream *substream)
  {
  	struct snd_intelhad *intelhaddata;
- 	struct snd_pcm_runtime *runtime;
  
 +	pr_debug("snd_intelhad_close called\n");
 +
  	intelhaddata = snd_pcm_substream_chip(substream);
++<<<<<<< HEAD
 +	runtime = substream->runtime;
 +
 +	if (!runtime->private_data) {
 +		pr_debug("close() might have called after failed open");
 +		return 0;
 +	}
++=======
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  
  	intelhaddata->stream_info.buffer_rendered = 0;
  	intelhaddata->stream_info.buffer_ptr = 0;
@@@ -1088,11 -1026,10 +1090,9 @@@
  	/* Check if following drv_status modification is required - VA */
  	if (intelhaddata->drv_status != HAD_DRV_DISCONNECTED) {
  		intelhaddata->drv_status = HAD_DRV_CONNECTED;
 -		dev_dbg(intelhaddata->dev,
 -			"%s @ %d:DEBUG PLUG/UNPLUG : HAD_DRV_CONNECTED\n",
 +		pr_debug("%s @ %d:DEBUG PLUG/UNPLUG : HAD_DRV_CONNECTED\n",
  			__func__, __LINE__);
  	}
- 	kfree(runtime->private_data);
- 	runtime->private_data = NULL;
  	pm_runtime_put(intelhaddata->dev);
  	return 0;
  }
@@@ -1171,17 -1106,12 +1171,24 @@@ static int snd_intelhad_hw_free(struct 
  static int snd_intelhad_pcm_trigger(struct snd_pcm_substream *substream,
  					int cmd)
  {
 -	int retval = 0;
 +	int caps, retval = 0;
 +	unsigned long flag_irq;
  	struct snd_intelhad *intelhaddata;
++<<<<<<< HEAD
 +	struct had_stream_pvt *stream;
 +	struct had_pvt_data *had_stream;
 +
 +	pr_debug("snd_intelhad_pcm_trigger called\n");
 +
 +	intelhaddata = snd_pcm_substream_chip(substream);
 +	stream = substream->runtime->private_data;
 +	had_stream = intelhaddata->private_data;
++=======
+ 	struct had_stream_data *had_stream;
+ 
+ 	intelhaddata = snd_pcm_substream_chip(substream);
+ 	had_stream = &intelhaddata->stream_data;
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  
  	switch (cmd) {
  	case SNDRV_PCM_TRIGGER_START:
@@@ -1233,8 -1145,7 +1239,12 @@@
  		/* Reset buffer pointers */
  		snd_intelhad_reset_audio(intelhaddata, 1);
  		snd_intelhad_reset_audio(intelhaddata, 0);
++<<<<<<< HEAD
 +		stream->stream_status = STREAM_DROPPED;
 +		had_set_caps(intelhaddata, HAD_SET_DISABLE_AUDIO, NULL);
++=======
+ 		snd_intelhad_enable_audio_int(intelhaddata, false);
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  		break;
  
  	default:
diff --cc sound/x86/intel_hdmi_audio.h
index 32a2fb766e47,3bd2bb60f1f1..000000000000
--- a/sound/x86/intel_hdmi_audio.h
+++ b/sound/x86/intel_hdmi_audio.h
@@@ -89,13 -86,7 +89,17 @@@ struct ring_buf_info 
  	u8	is_valid;
  };
  
++<<<<<<< HEAD
 +struct had_stream_pvt {
 +	enum had_stream_status		stream_status;
 +	int				stream_ops;
 +	ssize_t				dbg_cum_bytes;
 +};
 +
 +struct had_pvt_data {
++=======
+ struct had_stream_data {
++>>>>>>> fa5dfe6a0148 (ALSA: x86: Drop redundant had_stream_pvt)
  	enum had_status_stream		stream_type;
  };
  
* Unmerged path sound/x86/intel_hdmi_audio.c
* Unmerged path sound/x86/intel_hdmi_audio.h
diff --git a/sound/x86/intel_hdmi_lpe_audio.h b/sound/x86/intel_hdmi_lpe_audio.h
index a1c3aa0fbc57..bcf49d1c7f39 100644
--- a/sound/x86/intel_hdmi_lpe_audio.h
+++ b/sound/x86/intel_hdmi_lpe_audio.h
@@ -222,21 +222,6 @@ union otm_hdmi_eld_t {
 	} __packed;
 };
 
-/**
- * enum had_status - Audio stream states
- *
- * @STREAM_INIT: Stream initialized
- * @STREAM_RUNNING: Stream running
- * @STREAM_PAUSED: Stream paused
- * @STREAM_DROPPED: Stream dropped
- */
-enum had_stream_status {
-	STREAM_INIT = 0,
-	STREAM_RUNNING = 1,
-	STREAM_PAUSED = 2,
-	STREAM_DROPPED = 3
-};
-
 /**
  * enum had_status_stream - HAD stream states
  */
