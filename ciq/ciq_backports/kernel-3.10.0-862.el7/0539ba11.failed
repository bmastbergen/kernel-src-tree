tools/power turbostat: Baytrail c-state support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [tools] power turbostat: Baytrail c-state support (Prarit Bhargava) [1514290]
Rebuild_FUZZ: 93.18%
commit-author Len Brown <len.brown@intel.com>
commit 0539ba118fe241b0d03202fda0cd19cb758b7fbd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0539ba11.failed

The Baytrail SOC, with its Silvermont core, has some unique properties:

1. a hardware CC1 residency counter
2. a module-c6 residency counter
3. a package-c6 counter at traditional package-c7 counter address.

The SOC does not support c3, pc3, c7 or pc7 counters.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 0539ba118fe241b0d03202fda0cd19cb758b7fbd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 0bd5262fcaf9,19802be6dc02..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -396,22 -401,20 +398,39 @@@ struct msr_counter bic[] = 
  #define	BIC_Pkgpc3	(1ULL << 18)
  #define	BIC_Pkgpc6	(1ULL << 19)
  #define	BIC_Pkgpc7	(1ULL << 20)
++<<<<<<< HEAD
 +#define	BIC_Pkgpc8	(1ULL << 21)
 +#define	BIC_Pkgpc9	(1ULL << 22)
 +#define	BIC_Pkgpc10	(1ULL << 23)
 +#define	BIC_PkgWatt	(1ULL << 24)
 +#define	BIC_CorWatt	(1ULL << 25)
 +#define	BIC_GFXWatt	(1ULL << 26)
 +#define	BIC_PkgCnt	(1ULL << 27)
 +#define	BIC_RAMWatt	(1ULL << 28)
 +#define	BIC_PKG__	(1ULL << 29)
 +#define	BIC_RAM__	(1ULL << 30)
 +#define	BIC_Pkg_J	(1ULL << 31)
 +#define	BIC_Cor_J	(1ULL << 32)
 +#define	BIC_GFX_J	(1ULL << 33)
 +#define	BIC_RAM_J	(1ULL << 34)
 +#define	BIC_Core	(1ULL << 35)
 +#define	BIC_CPU		(1ULL << 36)
++=======
+ #define	BIC_PkgWatt	(1ULL << 21)
+ #define	BIC_CorWatt	(1ULL << 22)
+ #define	BIC_GFXWatt	(1ULL << 23)
+ #define	BIC_PkgCnt	(1ULL << 24)
+ #define	BIC_RAMWatt	(1ULL << 27)
+ #define	BIC_PKG__	(1ULL << 28)
+ #define	BIC_RAM__	(1ULL << 29)
+ #define	BIC_Pkg_J	(1ULL << 30)
+ #define	BIC_Cor_J	(1ULL << 31)
+ #define	BIC_GFX_J	(1ULL << 30)
+ #define	BIC_RAM_J	(1ULL << 31)
+ #define	BIC_Core	(1ULL << 32)
+ #define	BIC_CPU		(1ULL << 33)
+ #define	BIC_Mod_c6	(1ULL << 34)
++>>>>>>> 0539ba118fe2 (tools/power turbostat: Baytrail c-state support)
  
  unsigned long long bic_enabled = 0xFFFFFFFFFFFFFFFFULL;
  unsigned long long bic_present;
@@@ -1429,27 -1451,33 +1462,41 @@@ retry
  		if (get_msr(cpu, MSR_PKG_BOTH_CORE_GFXE_C0_RES, &p->pkg_both_core_gfxe_c0))
  			return -13;
  	}
 -	if (do_pc3)
 +	if (DO_BIC(BIC_Pkgpc3))
  		if (get_msr(cpu, MSR_PKG_C3_RESIDENCY, &p->pc3))
  			return -9;
++<<<<<<< HEAD
 +	if (DO_BIC(BIC_Pkgpc6))
 +		if (get_msr(cpu, MSR_PKG_C6_RESIDENCY, &p->pc6))
 +			return -10;
 +	if (DO_BIC(BIC_Pkgpc2))
++=======
+ 	if (do_pc6) {
+ 		if (do_slm_cstates) {
+ 			if (get_msr(cpu, MSR_ATOM_PKG_C6_RESIDENCY, &p->pc6))
+ 				return -10;
+ 		} else {
+ 			if (get_msr(cpu, MSR_PKG_C6_RESIDENCY, &p->pc6))
+ 				return -10;
+ 		}
+ 	}
+ 
+ 	if (do_pc2)
++>>>>>>> 0539ba118fe2 (tools/power turbostat: Baytrail c-state support)
  		if (get_msr(cpu, MSR_PKG_C2_RESIDENCY, &p->pc2))
  			return -11;
 -	if (do_pc7)
 +	if (DO_BIC(BIC_Pkgpc7))
  		if (get_msr(cpu, MSR_PKG_C7_RESIDENCY, &p->pc7))
  			return -12;
 -	if (do_c8_c9_c10) {
 +	if (DO_BIC(BIC_Pkgpc8))
  		if (get_msr(cpu, MSR_PKG_C8_RESIDENCY, &p->pc8))
  			return -13;
 +	if (DO_BIC(BIC_Pkgpc9))
  		if (get_msr(cpu, MSR_PKG_C9_RESIDENCY, &p->pc9))
  			return -13;
 +	if (DO_BIC(BIC_Pkgpc10))
  		if (get_msr(cpu, MSR_PKG_C10_RESIDENCY, &p->pc10))
  			return -13;
 -	}
  	if (do_rapl & RAPL_PKG) {
  		if (get_msr(cpu, MSR_PKG_ENERGY_STATUS, &msr))
  			return -13;
@@@ -3776,27 -3749,17 +3821,41 @@@ void process_cpuid(
  		BIC_PRESENT(BIC_CPU_c7);
  
  	do_irtl_snb = has_snb_msrs(family, model);
++<<<<<<< HEAD
 +	if (do_snb_cstates && (pkg_cstate_limit >= PCL__2))
 +		BIC_PRESENT(BIC_Pkgpc2);
 +	if (pkg_cstate_limit >= PCL__3)
 +		BIC_PRESENT(BIC_Pkgpc3);
 +	if (pkg_cstate_limit >= PCL__6)
 +		BIC_PRESENT(BIC_Pkgpc6);
 +	if (do_snb_cstates && (pkg_cstate_limit >= PCL__7))
 +		BIC_PRESENT(BIC_Pkgpc7);
 +	if (is_dnv(family, model)) {
 +		BIC_PRESENT(BIC_CPU_c1);
 +		BIC_NOT_PRESENT(BIC_CPU_c3);
 +		BIC_NOT_PRESENT(BIC_Pkgpc3);
 +		BIC_NOT_PRESENT(BIC_CPU_c7);
 +		BIC_NOT_PRESENT(BIC_Pkgpc7);
 +		use_c1_residency_msr = 1;
 +	}
 +	if (has_hsw_msrs(family, model)) {
 +		BIC_PRESENT(BIC_Pkgpc8);
 +		BIC_PRESENT(BIC_Pkgpc9);
 +		BIC_PRESENT(BIC_Pkgpc10);
 +	}
++=======
+ 	do_pc2 = do_snb_cstates && (pkg_cstate_limit >= PCL__2);
+ 	do_pc3 = (pkg_cstate_limit >= PCL__3);
+ 	do_pc6 = (pkg_cstate_limit >= PCL__6);
+ 	do_pc7 = do_snb_cstates && (pkg_cstate_limit >= PCL__7);
+ 	if (has_slv_msrs(family, model)) {
+ 		do_pc2 = do_pc3 = do_pc7 = 0;
+ 		do_pc6 = 1;
+ 		BIC_PRESENT(BIC_Mod_c6);
+ 		use_c1_residency_msr = 1;
+ 	}
+ 	do_c8_c9_c10 = has_hsw_msrs(family, model);
++>>>>>>> 0539ba118fe2 (tools/power turbostat: Baytrail c-state support)
  	do_irtl_hsw = has_hsw_msrs(family, model);
  	do_skl_residency = has_skl_msrs(family, model);
  	do_slm_cstates = is_slm(family, model);
@@@ -4174,7 -4140,7 +4233,11 @@@ int get_and_dump_counters(void
  }
  
  void print_version() {
++<<<<<<< HEAD
 +	fprintf(outf, "turbostat version 4.16 24 Dec 2016"
++=======
+ 	fprintf(outf, "turbostat version 4.17 10 Jan 2017"
++>>>>>>> 0539ba118fe2 (tools/power turbostat: Baytrail c-state support)
  		" - Len Brown <lenb@kernel.org>\n");
  }
  
diff --git a/arch/x86/include/asm/msr-index.h b/arch/x86/include/asm/msr-index.h
index 300680defb07..21bbb63eb1cd 100644
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@ -145,6 +145,7 @@
 /* C-state Residency Counters */
 #define MSR_PKG_C3_RESIDENCY		0x000003f8
 #define MSR_PKG_C6_RESIDENCY		0x000003f9
+#define MSR_ATOM_PKG_C6_RESIDENCY	0x000003fa
 #define MSR_PKG_C7_RESIDENCY		0x000003fa
 #define MSR_CORE_C3_RESIDENCY		0x000003fc
 #define MSR_CORE_C6_RESIDENCY		0x000003fd
@@ -200,6 +201,7 @@
 #define MSR_PKG_BOTH_CORE_GFXE_C0_RES	0x0000065B
 
 #define MSR_CORE_C1_RES			0x00000660
+#define MSR_MODULE_C6_RES_MS		0x00000664
 
 #define MSR_CC6_DEMOTION_POLICY_CONFIG	0x00000668
 #define MSR_MC6_DEMOTION_POLICY_CONFIG	0x00000669
* Unmerged path tools/power/x86/turbostat/turbostat.c
