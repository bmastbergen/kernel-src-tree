IB/mlx5: Fix integer overflow when page_shift == 31

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ilya Lesokhin <ilyal@mellanox.com>
commit 7b4cdaae73ee833975a767cf54a3354d355b3f8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7b4cdaae.failed

Fix a bug where MR registration fails when mlx5_ib_cont_pages
indicates that the MR can be mapped using 2GB pages (page_shift == 31).

Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
	Signed-off-by: Ilya Lesokhin <ilyal@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 7b4cdaae73ee833975a767cf54a3354d355b3f8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mr.c
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 41cc30b2cbb2,0e2789d9bb4d..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -1161,11 -1148,13 +1162,18 @@@ static struct mlx5_ib_mr *reg_create(st
  	MLX5_SET(mkc, mkc, pd, to_mpd(pd)->pdn);
  	MLX5_SET(mkc, mkc, bsf_octword_size, 0);
  	MLX5_SET(mkc, mkc, translations_octword_size,
- 		 get_octo_len(virt_addr, length, 1 << page_shift));
+ 		 get_octo_len(virt_addr, length, page_shift));
  	MLX5_SET(mkc, mkc, log_page_size, page_shift);
  	MLX5_SET(mkc, mkc, qpn, 0xffffff);
++<<<<<<< HEAD
 +	MLX5_SET(create_mkey_in, in, translations_octword_actual_size,
 +		 get_octo_len(virt_addr, length, 1 << page_shift));
++=======
+ 	if (populate) {
+ 		MLX5_SET(create_mkey_in, in, translations_octword_actual_size,
+ 			 get_octo_len(virt_addr, length, page_shift));
+ 	}
++>>>>>>> 7b4cdaae73ee (IB/mlx5: Fix integer overflow when page_shift == 31)
  
  	err = mlx5_core_create_mkey(dev->mdev, &mr->mmkey, in, inlen);
  	if (err) {
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
