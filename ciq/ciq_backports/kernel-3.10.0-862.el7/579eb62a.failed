ipvs: rerouting to local clients is not needed anymore

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Julian Anastasov <ja@ssi.bg>
commit 579eb62ac35845686a7c4286c0a820b4eb1f96aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/579eb62a.failed

commit f5a41847acc5 ("ipvs: move ip_route_me_harder for ICMP")
from 2.6.37 introduced ip_route_me_harder() call for responses to
local clients, so that we can provide valid rt_src after SNAT.
It was used by TCP to provide valid daddr for ip_send_reply().
After commit 0a5ebb8000c5 ("ipv4: Pass explicit daddr arg to
ip_send_reply()." from 3.0 this rerouting is not needed anymore
and should be avoided, especially in LOCAL_IN.

Fixes 3.12.33 crash in xfrm reported by Florian Wiessner:
"3.12.33 - BUG xfrm_selector_match+0x25/0x2f6"

	Reported-by: Smart Weblications GmbH - Florian Wiessner <f.wiessner@smart-weblications.de>
	Tested-by: Smart Weblications GmbH - Florian Wiessner <f.wiessner@smart-weblications.de>
	Signed-off-by: Julian Anastasov <ja@ssi.bg>
	Signed-off-by: Simon Horman <horms@verge.net.au>
(cherry picked from commit 579eb62ac35845686a7c4286c0a820b4eb1f96aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/ipvs/ip_vs_core.c
diff --cc net/netfilter/ipvs/ip_vs_core.c
index f1576576eb85,b87ca32efa0b..000000000000
--- a/net/netfilter/ipvs/ip_vs_core.c
+++ b/net/netfilter/ipvs/ip_vs_core.c
@@@ -973,9 -988,10 +982,14 @@@ static int ip_vs_out_icmp_v6(struct sk_
  		return NF_ACCEPT;
  
  	snet.in6 = ciph.saddr.in6;
 -	writable = ciph.len;
 +	offset = ciph.len;
  	return handle_response_icmp(AF_INET6, skb, &snet, ciph.protocol, cp,
++<<<<<<< HEAD
 +				    pp, offset, sizeof(struct ipv6hdr));
++=======
+ 				    pp, writable, sizeof(struct ipv6hdr),
+ 				    hooknum);
++>>>>>>> 579eb62ac358 (ipvs: rerouting to local clients is not needed anymore)
  }
  #endif
  
@@@ -1093,10 -1089,10 +1108,10 @@@ handle_response(int af, struct sk_buff 
  	 * if it came from this machine itself.  So re-compute
  	 * the routing information.
  	 */
- 	if (ip_vs_route_me_harder(af, skb))
+ 	if (ip_vs_route_me_harder(af, skb, hooknum))
  		goto drop;
  
 -	IP_VS_DBG_PKT(10, af, pp, skb, 0, "After SNAT");
 +	IP_VS_DBG_PKT(10, af, pp, skb, iph->off, "After SNAT");
  
  	ip_vs_out_stats(cp, skb);
  	ip_vs_set_state(cp, IP_VS_DIR_OUTPUT, skb, pd);
* Unmerged path net/netfilter/ipvs/ip_vs_core.c
