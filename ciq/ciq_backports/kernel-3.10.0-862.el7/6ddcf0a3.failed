lpfc: tie in to new dev_loss_tmo interface in nvme transport

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author James Smart <jsmart2021@gmail.com>
commit 6ddcf0a30adc5080504ca66f474101e7ad247dd7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6ddcf0a3.failed

This patch calls the new nvme transport routine for dev_loss_tmo
whenever the SCSI fc transport calls the lldd to make a dynamic
change to a remote ports dev_loss_tmo.

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 6ddcf0a30adc5080504ca66f474101e7ad247dd7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_attr.c
diff --cc drivers/scsi/lpfc/lpfc_attr.c
index e030a290e43b,3e02bc3a7c3f..000000000000
--- a/drivers/scsi/lpfc/lpfc_attr.c
+++ b/drivers/scsi/lpfc/lpfc_attr.c
@@@ -2937,9 -3241,17 +2937,18 @@@ lpfc_update_rport_devloss_tmo(struct lp
  
  	shost = lpfc_shost_from_vport(vport);
  	spin_lock_irq(shost->host_lock);
 -	list_for_each_entry(ndlp, &vport->fc_nodes, nlp_listp) {
 -		if (!NLP_CHK_NODE_ACT(ndlp))
 -			continue;
 -		if (ndlp->rport)
 +	list_for_each_entry(ndlp, &vport->fc_nodes, nlp_listp)
 +		if (NLP_CHK_NODE_ACT(ndlp) && ndlp->rport)
  			ndlp->rport->dev_loss_tmo = vport->cfg_devloss_tmo;
++<<<<<<< HEAD
++=======
+ #if (IS_ENABLED(CONFIG_NVME_FC))
+ 		if (ndlp->nrport)
+ 			nvme_fc_set_remoteport_devloss(ndlp->nrport->remoteport,
+ 						       vport->cfg_devloss_tmo);
+ #endif
+ 	}
++>>>>>>> 6ddcf0a30adc (lpfc: tie in to new dev_loss_tmo interface in nvme transport)
  	spin_unlock_irq(shost->host_lock);
  }
  
* Unmerged path drivers/scsi/lpfc/lpfc_attr.c
