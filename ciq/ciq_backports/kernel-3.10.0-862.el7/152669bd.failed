netvsc: fix use-after-free in netvsc_change_mtu()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dexuan Cui <decui@microsoft.com>
commit 152669bd3cd2407d6f556009b95ee249c0c1a462
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/152669bd.failed

'nvdev' is freed in rndis_filter_device_remove -> netvsc_device_remove ->
free_netvsc_device, so we mustn't access it, before it's re-created in
rndis_filter_device_add -> netvsc_device_add.

	Signed-off-by: Dexuan Cui <decui@microsoft.com>
	Cc: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Cc: Stephen Hemminger <sthemmin@microsoft.com>
	Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 152669bd3cd2407d6f556009b95ee249c0c1a462)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index 8539eb924b13,bc05c895d958..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -908,17 -859,22 +908,36 @@@ static int netvsc_change_mtu(struct net
  	if (ret)
  		goto out;
  
++<<<<<<< HEAD
 +	num_chn = nvdev->num_chn;
 +
 +	ndevctx->start_remove = true;
 +	rndis_filter_device_remove(hdev);
 +
 +	ndev->mtu = mtu;
 +
 +	memset(&device_info, 0, sizeof(device_info));
 +	device_info.ring_size = ring_size;
 +	device_info.num_chn = num_chn;
 +	device_info.max_num_vrss_chns = max_num_vrss_chns;
++=======
+ 	memset(&device_info, 0, sizeof(device_info));
+ 	device_info.ring_size = ring_size;
+ 	device_info.num_chn = nvdev->num_chn;
+ 	device_info.max_num_vrss_chns = nvdev->num_chn;
+ 
+ 	ndevctx->start_remove = true;
+ 	rndis_filter_device_remove(hdev, nvdev);
+ 
+ 	/* 'nvdev' has been freed in rndis_filter_device_remove() ->
+ 	 * netvsc_device_remove () -> free_netvsc_device().
+ 	 * We mustn't access it before it's re-created in
+ 	 * rndis_filter_device_add() -> netvsc_device_add().
+ 	 */
+ 
+ 	ndev->mtu = mtu;
+ 
++>>>>>>> 152669bd3cd2 (netvsc: fix use-after-free in netvsc_change_mtu())
  	rndis_filter_device_add(hdev, &device_info);
  
  out:
* Unmerged path drivers/net/hyperv/netvsc_drv.c
