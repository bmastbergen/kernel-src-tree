powerpc/perf: Update default sdar_mode value for power9

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [powerpc] perf: Update default sdar_mode value for power9 (Mauricio Oliveira) [1494439]
Rebuild_FUZZ: 92.16%
commit-author Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
commit 7aa345d84245a75760fc35a385fc5585f5e3336a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7aa345d8.failed

Commit 20dd4c624d251 ('powerpc/perf: Fix SDAR_MODE value for continous
sampling on Power9') set the default sdar_mode value in MMCRA[SDAR_MODE]
to be used as 0b01 (Update on TLB miss). And this value is set if sdar_mode
from event is zero, or we are in continous sampling mode in power9 dd1.

But it is preferred to have the sdar_mode value for power9 as
0b10 (Update on dcache miss) for better sampling updates instead
of 0b01 (Update on TLB miss).

From Anton:

Using a bandwidth test case with a 1MB footprint, I profiled cycles and
chose TLB updates of the SDAR:

  $ perf record -d -e r000400000000001E:u ./bw2001 1M
                        ^
                        SDAR TLB

  $ perf report -D | grep PERF_RECORD_SAMPLE | sed 's/.*addr: //' | sort -u | wc -l
  4

  I get 4 unique addresses. If I ran with dcache misses:

  $ perf record -d -e r000800000000001E:u ./bw2001 1M
                        ^
                        SDAR dcache miss

  $ perf report -D|grep PERF_RECORD_SAMPLE| sed 's/.*addr: //'|sort -u | wc -l
  5217

I get 5217 unique addresses. No surprises here, but it does show why
TLB misses is the wrong event to default to - we get very little useful
information out of it.

	Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
	Acked-by: Anton Blanchard <anton@samba.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 7aa345d84245a75760fc35a385fc5585f5e3336a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/perf/isa207-common.c
#	arch/powerpc/perf/isa207-common.h
diff --cc arch/powerpc/perf/isa207-common.h
index 03205f5354e9,7a0228bf283c..000000000000
--- a/arch/powerpc/perf/isa207-common.h
+++ b/arch/powerpc/perf/isa207-common.h
@@@ -216,8 -244,23 +216,15 @@@
  #define MMCRA_THR_CTL_SHIFT		8
  #define MMCRA_THR_SEL_SHIFT		16
  #define MMCRA_THR_CMP_SHIFT		32
++<<<<<<< HEAD
 +#define MMCRA_SDAR_MODE_TLB		(1ull << 42)
++=======
+ #define MMCRA_SDAR_MODE_SHIFT		42
+ #define MMCRA_SDAR_MODE_TLB		(1ull << MMCRA_SDAR_MODE_SHIFT)
+ #define MMCRA_SDAR_MODE_NO_UPDATES	~(0x3ull << MMCRA_SDAR_MODE_SHIFT)
+ #define MMCRA_SDAR_MODE_DCACHE		(2ull << MMCRA_SDAR_MODE_SHIFT)
++>>>>>>> 7aa345d84245 (powerpc/perf: Update default sdar_mode value for power9)
  #define MMCRA_IFM_SHIFT			30
 -#define MMCRA_THR_CTR_MANT_SHIFT	19
 -#define MMCRA_THR_CTR_MANT_MASK		0x7Ful
 -#define MMCRA_THR_CTR_MANT(v)		(((v) >> MMCRA_THR_CTR_MANT_SHIFT) &\
 -						MMCRA_THR_CTR_MANT_MASK)
 -
 -#define MMCRA_THR_CTR_EXP_SHIFT		27
 -#define MMCRA_THR_CTR_EXP_MASK		0x7ul
 -#define MMCRA_THR_CTR_EXP(v)		(((v) >> MMCRA_THR_CTR_EXP_SHIFT) &\
 -						MMCRA_THR_CTR_EXP_MASK)
 -
 -/* MMCR1 Threshold Compare bit constant for power9 */
 -#define p9_MMCRA_THR_CMP_SHIFT	45
  
  /* Bits in MMCR2 for PowerISA v2.07 */
  #define MMCR2_FCS(pmc)			(1ull << (63 - (((pmc) - 1) * 9)))
* Unmerged path arch/powerpc/perf/isa207-common.c
* Unmerged path arch/powerpc/perf/isa207-common.c
* Unmerged path arch/powerpc/perf/isa207-common.h
