openvswitch: support MPLS push and pop for L3 packets

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jiri Benc <jbenc@redhat.com>
commit 1560a074df6297e76278e459ca3eb9ff83a6f878
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/1560a074.failed

Update Ethernet header only if there is one.

	Signed-off-by: Jiri Benc <jbenc@redhat.com>
	Acked-by: Pravin B Shelar <pshelar@ovn.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1560a074df6297e76278e459ca3eb9ff83a6f878)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/actions.c
diff --cc net/openvswitch/actions.c
index 3e99057f11b4,064cbcb7b0c5..000000000000
--- a/net/openvswitch/actions.c
+++ b/net/openvswitch/actions.c
@@@ -181,9 -187,8 +181,14 @@@ static int push_mpls(struct sk_buff *sk
  
  	skb_postpush_rcsum(skb, new_mpls_lse, MPLS_HLEN);
  
++<<<<<<< HEAD
 +	update_ethertype(skb, eth_hdr(skb), mpls->mpls_ethertype);
 +	if (!skb->inner_protocol)
 +		skb_set_inner_protocol(skb, skb->protocol);
++=======
+ 	if (ovs_key_mac_proto(key) == MAC_PROTO_ETHERNET)
+ 		update_ethertype(skb, eth_hdr(skb), mpls->mpls_ethertype);
++>>>>>>> 1560a074df62 (openvswitch: support MPLS push and pop for L3 packets)
  	skb->protocol = mpls->mpls_ethertype;
  
  	invalidate_flow_key(key);
@@@ -207,12 -211,17 +211,24 @@@ static int pop_mpls(struct sk_buff *skb
  
  	__skb_pull(skb, MPLS_HLEN);
  	skb_reset_mac_header(skb);
 -	skb_set_network_header(skb, skb->mac_len);
  
++<<<<<<< HEAD
 +	/* skb_mpls_header() is used to locate the ethertype
 +	 * field correctly in the presence of VLAN tags.
 +	 */
 +	hdr = (struct ethhdr *)(skb_mpls_header(skb) - ETH_HLEN);
 +	update_ethertype(skb, hdr, ethertype);
++=======
+ 	if (ovs_key_mac_proto(key) == MAC_PROTO_ETHERNET) {
+ 		struct ethhdr *hdr;
+ 
+ 		/* mpls_hdr() is used to locate the ethertype field correctly in the
+ 		 * presence of VLAN tags.
+ 		 */
+ 		hdr = (struct ethhdr *)((void *)mpls_hdr(skb) - ETH_HLEN);
+ 		update_ethertype(skb, hdr, ethertype);
+ 	}
++>>>>>>> 1560a074df62 (openvswitch: support MPLS push and pop for L3 packets)
  	if (eth_p_mpls(skb->protocol))
  		skb->protocol = ethertype;
  
* Unmerged path net/openvswitch/actions.c
