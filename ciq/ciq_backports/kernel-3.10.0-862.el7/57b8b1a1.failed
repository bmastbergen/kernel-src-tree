x86/cpuid: Prevent out of bound access in do_clear_cpu_cap()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] cpuid: Prevent out of bound access in do_clear_cpu_cap() (Scott Wood) [1457543]
Rebuild_FUZZ: 96.55%
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 57b8b1a1856adaa849d02d547411a553a531022b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/57b8b1a1.failed

do_clear_cpu_cap() allocates a bitmap to keep track of disabled feature
dependencies. That bitmap is sized NCAPINTS * BITS_PER_INIT. The possible
'features' which can be handed in are larger than this, because after the
capabilities the bug 'feature' bits occupy another 32bit. Not really
obvious...

So clearing any of the misfeature bits, as 32bit does for the F00F bug,
accesses that bitmap out of bounds thereby corrupting the stack.

Size the bitmap proper and add a sanity check to catch accidental out of
bound access.

Fixes: 0b00de857a64 ("x86/cpuid: Add generic table for CPUID dependencies")
	Reported-by: kernel test robot <xiaolong.ye@intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Borislav Petkov <bp@alien8.de>
Link: https://lkml.kernel.org/r/20171018022023.GA12058@yexl-desktop
(cherry picked from commit 57b8b1a1856adaa849d02d547411a553a531022b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/cpuid-deps.c
* Unmerged path arch/x86/kernel/cpu/cpuid-deps.c
* Unmerged path arch/x86/kernel/cpu/cpuid-deps.c
