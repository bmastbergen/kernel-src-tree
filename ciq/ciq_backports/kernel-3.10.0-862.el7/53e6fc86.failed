pNFS: Prevent unnecessary layoutreturns after delegreturn

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 53e6fc86abbbd7338f16267846a58de7ee24e839
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/53e6fc86.failed

If we cannot grab the inode or superblock, then we cannot pin the
layout header, and so we cannot send a layoutreturn as part of an
async delegreturn call. In this case, we currently end up sending
an extra layoutreturn after the delegreturn. Since the layout was
implicitly returned by the delegreturn, that just gets a BAD_STATEID.

The fix is to simply complete the return-on-close immediately.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 53e6fc86abbbd7338f16267846a58de7ee24e839)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index 3b8bf7e61088,5593b088c561..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -5739,9 -5744,17 +5739,22 @@@ static int _nfs4_proc_delegreturn(struc
  	nfs_fattr_init(data->res.fattr);
  	data->timestamp = jiffies;
  	data->rpc_status = 0;
+ 	data->lr.roc = pnfs_roc(inode, &data->lr.arg, &data->lr.res, cred);
  	data->inode = nfs_igrab_and_active(inode);
++<<<<<<< HEAD
 +	if (data->inode)
 +		data->lr.roc = nfs4_roc(inode);
++=======
+ 	if (data->inode) {
+ 		if (data->lr.roc) {
+ 			data->args.lr_args = &data->lr.arg;
+ 			data->res.lr_res = &data->lr.res;
+ 		}
+ 	} else if (data->lr.roc) {
+ 		pnfs_roc_release(&data->lr.arg, &data->lr.res, 0);
+ 		data->lr.roc = false;
+ 	}
++>>>>>>> 53e6fc86abbb (pNFS: Prevent unnecessary layoutreturns after delegreturn)
  
  	task_setup_data.callback_data = data;
  	msg.rpc_argp = &data->args;
* Unmerged path fs/nfs/nfs4proc.c
