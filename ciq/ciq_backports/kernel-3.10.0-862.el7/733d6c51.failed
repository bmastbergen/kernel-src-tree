net/mlx5: Avoid blank lines after/before open/close brace

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5: Avoid blank lines after/before open/close brace (Kamal Heib) [1456694]
Rebuild_FUZZ: 96.36%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 733d6c5149b0fb8628bb0db618edd9bf49b496e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/733d6c51.failed

To fix these checkpatch complaints:

CHECK: Blank lines aren't necessary after an open brace '{'
CHECK: Blank lines aren't necessary before a close brace '}'

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 733d6c5149b0fb8628bb0db618edd9bf49b496e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index e84222bf1480,a75ac4d11c5b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@@ -169,10 -174,8 +169,13 @@@ static bool mlx5e_query_global_pause_co
  	((mlx5e_query_global_pause_combined(priv) + hweight8(mlx5e_query_pfc_combined(priv))) * \
  	  NUM_PPORT_PER_PRIO_PFC_COUNTERS)
  
 -int mlx5e_ethtool_get_sset_count(struct mlx5e_priv *priv, int sset)
 +static int mlx5e_get_sset_count(struct net_device *dev, int sset)
  {
++<<<<<<< HEAD
 +	struct mlx5e_priv *priv = netdev_priv(dev);
 +
++=======
++>>>>>>> 733d6c5149b0 (net/mlx5: Avoid blank lines after/before open/close brace)
  	switch (sset) {
  	case ETH_SS_STATS:
  		return NUM_SW_COUNTERS +
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/sriov.c b/drivers/net/ethernet/mellanox/mlx5/core/sriov.c
index 28d8472b36f1..80b672d1bee5 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/sriov.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/sriov.c
@@ -117,7 +117,6 @@ static int mlx5_device_enable_sriov(struct mlx5_core_dev *dev, int num_vfs)
 			}
 		}
 		mlx5_core_dbg(dev, "successfully enabled VF* %d\n", vf);
-
 	}
 
 	return 0;
