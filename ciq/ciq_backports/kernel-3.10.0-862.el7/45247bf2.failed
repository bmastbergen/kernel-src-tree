net/mlx5: Remove encap entry pointer from the eswitch flow attributes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5: Remove encap entry pointer from the eswitch flow attributes (Don Dutile) [1456694 1499362]
Rebuild_FUZZ: 97.01%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 45247bf2985edd983bb241dfa71f0c17713c8e7b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/45247bf2.failed

Encap wise, the tc eswitch flow attribute struct needs to have
only the encap ID which is programmed later to the HW and none
of the higher level encap params, fix that.

This patch doesn't change any functionality.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 45247bf2985edd983bb241dfa71f0c17713c8e7b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index 29674f9689a9,c7b034eeb149..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -1028,10 -1362,14 +1028,17 @@@ out
  static int mlx5e_attach_encap(struct mlx5e_priv *priv,
  			      struct ip_tunnel_info *tun_info,
  			      struct net_device *mirred_dev,
- 			      struct mlx5_esw_flow_attr *attr)
+ 			      struct net_device **encap_dev,
+ 			      struct mlx5e_tc_flow *flow)
  {
  	struct mlx5_eswitch *esw = priv->mdev->priv.eswitch;
++<<<<<<< HEAD
++=======
+ 	struct net_device *up_dev = mlx5_eswitch_get_uplink_netdev(esw);
++>>>>>>> 45247bf2985e (net/mlx5: Remove encap entry pointer from the eswitch flow attributes)
  	unsigned short family = ip_tunnel_info_af(tun_info);
+ 	struct mlx5e_priv *up_priv = netdev_priv(up_dev);
+ 	struct mlx5_esw_flow_attr *attr = flow->esw_attr;
  	struct ip_tunnel_key *key = &tun_info->key;
  	struct mlx5_encap_entry *e;
  	struct net_device *out_dev;
@@@ -1123,9 -1467,19 +1132,9 @@@ static int parse_tc_fdb_actions(struct 
  			continue;
  		}
  
 -		if (is_tcf_pedit(a)) {
 -			err = parse_tc_pedit_action(priv, a, MLX5_FLOW_NAMESPACE_FDB,
 -						    parse_attr);
 -			if (err)
 -				return err;
 -
 -			attr->action |= MLX5_FLOW_CONTEXT_ACTION_MOD_HDR;
 -			continue;
 -		}
 -
  		if (is_tcf_mirred_egress_redirect(a)) {
  			int ifindex = tcf_mirred_ifindex(a);
- 			struct net_device *out_dev;
+ 			struct net_device *out_dev, *encap_dev = NULL;
  			struct mlx5e_priv *out_priv;
  
  			out_dev = __dev_get_by_index(dev_net(priv->netdev), ifindex);
@@@ -1135,18 -1489,19 +1144,23 @@@
  				attr->action |= MLX5_FLOW_CONTEXT_ACTION_FWD_DEST |
  					MLX5_FLOW_CONTEXT_ACTION_COUNT;
  				out_priv = netdev_priv(out_dev);
 -				rpriv = out_priv->ppriv;
 -				attr->out_rep = rpriv->rep;
 +				attr->out_rep = out_priv->ppriv;
  			} else if (encap) {
  				err = mlx5e_attach_encap(priv, info,
- 							 out_dev, attr);
+ 							 out_dev, &encap_dev, flow);
  				if (err)
  					return err;
- 				list_add(&flow->encap, &attr->encap->flows);
  				attr->action |= MLX5_FLOW_CONTEXT_ACTION_ENCAP |
  					MLX5_FLOW_CONTEXT_ACTION_FWD_DEST |
  					MLX5_FLOW_CONTEXT_ACTION_COUNT;
++<<<<<<< HEAD
 +				out_priv = netdev_priv(attr->encap->out_dev);
 +				attr->out_rep = out_priv->ppriv;
++=======
+ 				out_priv = netdev_priv(encap_dev);
+ 				rpriv = out_priv->ppriv;
+ 				attr->out_rep = rpriv->rep;
++>>>>>>> 45247bf2985e (net/mlx5: Remove encap entry pointer from the eswitch flow attributes)
  			} else {
  				pr_err("devices %s %s not on same switch HW, can't offload forwarding\n",
  				       priv->netdev->name, out_dev->name);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index c62f318c62ef,9056961689fa..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@@ -309,7 -308,8 +309,12 @@@ struct mlx5_esw_flow_attr 
  	int	action;
  	u16	vlan;
  	bool	vlan_handled;
++<<<<<<< HEAD
 +	struct mlx5_encap_entry *encap;
++=======
+ 	u32	encap_id;
+ 	u32	mod_hdr_id;
++>>>>>>> 45247bf2985e (net/mlx5: Remove encap entry pointer from the eswitch flow attributes)
  };
  
  int mlx5_eswitch_sqs2vport_start(struct mlx5_eswitch *esw,
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 730e205ee6c9,f991f669047e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -88,8 -88,11 +88,16 @@@ mlx5_eswitch_add_offloaded_rule(struct 
  	if (flow_act.action & MLX5_FLOW_CONTEXT_ACTION_DECAP)
  		spec->match_criteria_enable |= MLX5_MATCH_INNER_HEADERS;
  
++<<<<<<< HEAD
 +	if (attr->encap)
 +		flow_act.encap_id = attr->encap->encap_id;
++=======
+ 	if (attr->action & MLX5_FLOW_CONTEXT_ACTION_MOD_HDR)
+ 		flow_act.modify_id = attr->mod_hdr_id;
+ 
+ 	if (attr->action & MLX5_FLOW_CONTEXT_ACTION_ENCAP)
+ 		flow_act.encap_id = attr->encap_id;
++>>>>>>> 45247bf2985e (net/mlx5: Remove encap entry pointer from the eswitch flow attributes)
  
  	rule = mlx5_add_flow_rules((struct mlx5_flow_table *)esw->fdb_table.fdb,
  				   spec, &flow_act, dest, i);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
