i2c: core changes for slave support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [i2c] core changes for slave support (Gopal Tiwari) [1456705]
Rebuild_FUZZ: 92.31%
commit-author Wolfram Sang <wsa+renesas@sang-engineering.com>
commit 4b1acc43331d6c716c331a61477660dc20c8b59c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4b1acc43.failed

Finally(!), make Linux support being an I2C slave. Most of the existing
infrastructure is reused. We mainly add i2c_slave_register/unregister()
calls which tells i2c bus drivers to activate the slave mode. Then, they
also get a callback to report slave events to.

	Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
(cherry picked from commit 4b1acc43331d6c716c331a61477660dc20c8b59c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/i2c-core.c
#	include/linux/i2c.h
diff --cc drivers/i2c/i2c-core.c
index dc4010bd2179,c09d06bf4d9b..000000000000
--- a/drivers/i2c/i2c-core.c
+++ b/drivers/i2c/i2c-core.c
@@@ -22,6 -22,9 +22,12 @@@
     OF support is copyright (c) 2008 Jochen Friedrich <jochen@scram.de>
     (based on a previous patch from Jon Smirl <jonsmirl@gmail.com>) and
     (c) 2013  Wolfram Sang <wsa@the-dreams.de>
++<<<<<<< HEAD
++=======
+    I2C ACPI code Copyright (C) 2014 Intel Corp
+    Author: Lan Tianyu <tianyu.lan@intel.com>
+    I2C slave support (c) 2014 by Wolfram Sang <wsa@sang-engineering.com>
++>>>>>>> 4b1acc43331d (i2c: core changes for slave support)
   */
  
  #include <linux/module.h>
diff --cc include/linux/i2c.h
index 021a03407cda,a720d9921b47..000000000000
--- a/include/linux/i2c.h
+++ b/include/linux/i2c.h
@@@ -342,7 -366,19 +366,23 @@@ i2c_register_board_info(int busnum, str
  }
  #endif /* I2C_BOARDINFO */
  
++<<<<<<< HEAD
 +/*
++=======
+ /**
+  * struct i2c_algorithm - represent I2C transfer method
+  * @master_xfer: Issue a set of i2c transactions to the given I2C adapter
+  *   defined by the msgs array, with num messages available to transfer via
+  *   the adapter specified by adap.
+  * @smbus_xfer: Issue smbus transactions to the given I2C adapter. If this
+  *   is not present, then the bus layer will try and convert the SMBus calls
+  *   into I2C transfers instead.
+  * @functionality: Return the flags that this algorithm/adapter pair supports
+  *   from the I2C_FUNC_* flags.
+  * @reg_slave: Register given client to I2C slave mode of this adapter
+  * @unreg_slave: Unregister given client from I2C slave mode of this adapter
+  *
++>>>>>>> 4b1acc43331d (i2c: core changes for slave support)
   * The following structs are for those who like to implement new bus drivers:
   * i2c_algorithm is the interface to a class of hardware solutions which can
   * be addressed using the same bus algorithms - i.e. bit-banging or the PCF8584
* Unmerged path drivers/i2c/i2c-core.c
* Unmerged path include/linux/i2c.h
