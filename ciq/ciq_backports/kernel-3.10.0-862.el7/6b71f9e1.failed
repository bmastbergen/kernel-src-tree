nvmet-fc: sync header templates with comments

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author James Smart <jsmart2021@gmail.com>
commit 6b71f9e1e849f82abb4a8d54ce7f4b1c71f19ac4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/6b71f9e1.failed

Comments were incorrect:
- defer_rcv was in host port template. moved to target port template
- Added Mandatory statements for target port template items

	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 6b71f9e1e849f82abb4a8d54ce7f4b1c71f19ac4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/nvme-fc-driver.h
diff --cc include/linux/nvme-fc-driver.h
index 977e25414837,a726f96010d5..000000000000
--- a/include/linux/nvme-fc-driver.h
+++ b/include/linux/nvme-fc-driver.h
@@@ -786,6 -791,30 +786,33 @@@ struct nvmet_fc_target_port 
   *       Returns 0 on success, -<errno> on failure (Ex: -EIO)
   *       Entrypoint is Mandatory.
   *
++<<<<<<< HEAD
++=======
+  * @fcp_abort:  Called by the transport to abort an active command.
+  *       The command may be in-between operations (nothing active in LLDD)
+  *       or may have an active WRITEDATA operation pending. The LLDD is to
+  *       initiate the ABTS process for the command and return from the
+  *       callback. The ABTS does not need to be complete on the command.
+  *       The fcp_abort callback inherently cannot fail. After the
+  *       fcp_abort() callback completes, the transport will wait for any
+  *       outstanding operation (if there was one) to complete, then will
+  *       call the fcp_req_release() callback to return the command's
+  *       exchange context back to the LLDD.
+  *       Entrypoint is Mandatory.
+  *
+  * @fcp_req_release:  Called by the transport to return a nvmefc_tgt_fcp_req
+  *       to the LLDD after all operations on the fcp operation are complete.
+  *       This may be due to the command completing or upon completion of
+  *       abort cleanup.
+  *       Entrypoint is Mandatory.
+  *
+  * @defer_rcv:  Called by the transport to signal the LLLD that it has
+  *       begun processing of a previously received NVME CMD IU. The LLDD
+  *       is now free to re-use the rcv buffer associated with the
+  *       nvmefc_tgt_fcp_req.
+  *       Entrypoint is Optional.
+  *
++>>>>>>> 6b71f9e1e849 (nvmet-fc: sync header templates with comments)
   * @max_hw_queues:  indicates the maximum number of hw queues the LLDD
   *       supports for cpu affinitization.
   *       Value is Mandatory. Must be at least 1.
* Unmerged path include/linux/nvme-fc-driver.h
