locks: make /proc/locks show IS_FILE_PVT locks as type "FLPVT"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jeff Layton <jlayton@redhat.com>
commit c918d42a27a9be0d78be490997d16d79cd5b9193
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c918d42a.failed

In a later patch, we'll be adding a new type of lock that's owned by
the struct file instead of the files_struct. Those sorts of locks
will be flagged with a new FL_FILE_PVT flag.

Report these types of locks as "FLPVT" in /proc/locks to distinguish
them from "classic" POSIX locks.

	Acked-by: J. Bruce Fields <bfields@fieldses.org>
	Signed-off-by: Jeff Layton <jlayton@redhat.com>
(cherry picked from commit c918d42a27a9be0d78be490997d16d79cd5b9193)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/locks.c
#	include/linux/fs.h
diff --cc fs/locks.c
index 0affd72992d2,0e1f0df8de12..000000000000
--- a/fs/locks.c
+++ b/fs/locks.c
@@@ -137,12 -134,8 +137,17 @@@
  
  #define IS_POSIX(fl)	(fl->fl_flags & FL_POSIX)
  #define IS_FLOCK(fl)	(fl->fl_flags & FL_FLOCK)
++<<<<<<< HEAD
 +#define IS_LEASE(fl)	(fl->fl_flags & (FL_LEASE|FL_DELEG|FL_LAYOUT))
 +
 +static inline bool is_remote_lock(struct file *filp)
 +{
 +	return likely(!(filp->f_path.dentry->d_sb->s_flags & MS_NOREMOTELOCK));
 +}
++=======
+ #define IS_LEASE(fl)	(fl->fl_flags & (FL_LEASE|FL_DELEG))
+ #define IS_FILE_PVT(fl)	(fl->fl_flags & FL_FILE_PVT)
++>>>>>>> c918d42a27a9 (locks: make /proc/locks show IS_FILE_PVT locks as type "FLPVT")
  
  static bool lease_breaking(struct file_lock *fl)
  {
diff --cc include/linux/fs.h
index f63715208d0c,5ddeb8de5e77..000000000000
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@@ -993,10 -888,7 +993,14 @@@ static inline int file_check_writeable(
  #define FL_SLEEP	128	/* A blocking lock */
  #define FL_DOWNGRADE_PENDING	256 /* Lease is being downgraded */
  #define FL_UNLOCK_PENDING	512 /* Lease is being broken */
++<<<<<<< HEAD
 +#define FL_LAYOUT	2048	/* outstanding pNFS layout */
 +#define FL_LM_OPS_EXTEND	65536 /* safe to use lock_manager_operations_extend */
 +
 +#define FL_CLOSE_POSIX (FL_POSIX | FL_CLOSE)
++=======
+ #define FL_FILE_PVT	1024	/* lock is private to the file */
++>>>>>>> c918d42a27a9 (locks: make /proc/locks show IS_FILE_PVT locks as type "FLPVT")
  
  /*
   * Special return value from posix_lock_file() and vfs_lock_file() for
* Unmerged path fs/locks.c
* Unmerged path include/linux/fs.h
