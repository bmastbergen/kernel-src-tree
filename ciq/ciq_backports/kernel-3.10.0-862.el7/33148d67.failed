tools/power turbostat: decode MSR_MISC_FEATURE_CONTROL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [tools] power turbostat: decode MSR_MISC_FEATURE_CONTROL (Prarit Bhargava) [1514290]
Rebuild_FUZZ: 94.12%
commit-author Len Brown <len.brown@intel.com>
commit 33148d671cc191fceaca5017e1bb060e9f30fbf7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/33148d67.failed

useful for observing if the BIOS disabled prefetch
Not architectural, but docuemented as present on NHM, SNB
and is present on others.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 33148d671cc191fceaca5017e1bb060e9f30fbf7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 0bd5262fcaf9,2f033f3d2a21..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -2483,8 -2517,10 +2487,9 @@@ int probe_nhm_msrs(unsigned int family
  		break;
  	case INTEL_FAM6_SKYLAKE_X:	/* SKX */
  		pkg_cstate_limits = skx_pkg_cstate_limits;
+ 		has_misc_feature_control = 1;
  		break;
  	case INTEL_FAM6_ATOM_SILVERMONT1:	/* BYT */
 -		no_MSR_MISC_PWR_MGMT = 1;
  	case INTEL_FAM6_ATOM_SILVERMONT2:	/* AVN */
  		pkg_cstate_limits = slv_pkg_cstate_limits;
  		break;
@@@ -3575,11 -3575,71 +3580,77 @@@ void decode_misc_enable_msr(void
  	unsigned long long msr;
  
  	if (!get_msr(base_cpu, MSR_IA32_MISC_ENABLE, &msr))
 -		fprintf(outf, "cpu%d: MSR_IA32_MISC_ENABLE: 0x%08llx (%sTCC %sEIST %sMWAIT %sPREFETCH %sTURBO)\n",
 +		fprintf(outf, "cpu%d: MSR_IA32_MISC_ENABLE: 0x%08llx (%s %s %s)\n",
  			base_cpu, msr,
++<<<<<<< HEAD
 +			msr & (1 << 3) ? "TCC" : "",
 +			msr & (1 << 16) ? "EIST" : "",
 +			msr & (1 << 18) ? "MONITOR" : "");
++=======
+ 			msr & MSR_IA32_MISC_ENABLE_TM1 ? "" : "No-",
+ 			msr & MSR_IA32_MISC_ENABLE_ENHANCED_SPEEDSTEP ? "" : "No-",
+ 			msr & MSR_IA32_MISC_ENABLE_MWAIT ? "No-" : "",
+ 			msr & MSR_IA32_MISC_ENABLE_PREFETCH_DISABLE ? "No-" : "",
+ 			msr & MSR_IA32_MISC_ENABLE_TURBO_DISABLE ? "No-" : "");
+ }
+ 
+ void decode_misc_feature_control(void)
+ {
+ 	unsigned long long msr;
+ 
+ 	if (!has_misc_feature_control)
+ 		return;
+ 
+ 	if (!get_msr(base_cpu, MSR_MISC_FEATURE_CONTROL, &msr))
+ 		fprintf(outf, "cpu%d: MSR_MISC_FEATURE_CONTROL: 0x%08llx (%sL2-Prefetch %sL2-Prefetch-pair %sL1-Prefetch %sL1-IP-Prefetch)\n",
+ 			base_cpu, msr,
+ 			msr & (0 << 0) ? "No-" : "",
+ 			msr & (1 << 0) ? "No-" : "",
+ 			msr & (2 << 0) ? "No-" : "",
+ 			msr & (3 << 0) ? "No-" : "");
+ }
+ /*
+  * Decode MSR_MISC_PWR_MGMT
+  *
+  * Decode the bits according to the Nehalem documentation
+  * bit[0] seems to continue to have same meaning going forward
+  * bit[1] less so...
+  */
+ void decode_misc_pwr_mgmt_msr(void)
+ {
+ 	unsigned long long msr;
+ 
+ 	if (!do_nhm_platform_info)
+ 		return;
+ 
+ 	if (no_MSR_MISC_PWR_MGMT)
+ 		return;
+ 
+ 	if (!get_msr(base_cpu, MSR_MISC_PWR_MGMT, &msr))
+ 		fprintf(outf, "cpu%d: MSR_MISC_PWR_MGMT: 0x%08llx (%sable-EIST_Coordination %sable-EPB %sable-OOB)\n",
+ 			base_cpu, msr,
+ 			msr & (1 << 0) ? "DIS" : "EN",
+ 			msr & (1 << 1) ? "EN" : "DIS",
+ 			msr & (1 << 8) ? "EN" : "DIS");
+ }
+ /*
+  * Decode MSR_CC6_DEMOTION_POLICY_CONFIG, MSR_MC6_DEMOTION_POLICY_CONFIG
+  *
+  * This MSRs are present on Silvermont processors,
+  * Intel Atom processor E3000 series (Baytrail), and friends.
+  */
+ void decode_c6_demotion_policy_msr(void)
+ {
+ 	unsigned long long msr;
+ 
+ 	if (!get_msr(base_cpu, MSR_CC6_DEMOTION_POLICY_CONFIG, &msr))
+ 		fprintf(outf, "cpu%d: MSR_CC6_DEMOTION_POLICY_CONFIG: 0x%08llx (%sable-CC6-Demotion)\n",
+ 			base_cpu, msr, msr & (1 << 0) ? "EN" : "DIS");
+ 
+ 	if (!get_msr(base_cpu, MSR_MC6_DEMOTION_POLICY_CONFIG, &msr))
+ 		fprintf(outf, "cpu%d: MSR_MC6_DEMOTION_POLICY_CONFIG: 0x%08llx (%sable-MC6-Demotion)\n",
+ 			base_cpu, msr, msr & (1 << 0) ? "EN" : "DIS");
++>>>>>>> 33148d671cc1 (tools/power turbostat: decode MSR_MISC_FEATURE_CONTROL)
  }
  
  void process_cpuid()
* Unmerged path tools/power/x86/turbostat/turbostat.c
