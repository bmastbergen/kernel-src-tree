hyperv: netvsc: Neaten netvsc_send_pkt by using a temporary

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Joe Perches <joe@perches.com>
commit 956a25c9f120343a9b6ab6564539158ec7237181
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/956a25c9.failed

Repeated dereference of nvmsg.msg.v1_msg.send_rndis_pkt can be
shortened by using a temporary.  Do so.

No change in object code.

Miscellanea:

o Use * const for rpkt and nvchan

	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 956a25c9f120343a9b6ab6564539158ec7237181)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index 52667f48ba1c,9598220b3bcc..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -765,12 -747,15 +765,20 @@@ static inline int netvsc_send_pkt
  	struct sk_buff *skb)
  {
  	struct nvsp_message nvmsg;
++<<<<<<< HEAD
 +	u16 q_idx = packet->q_idx;
 +	struct vmbus_channel *out_channel = net_device->chn_table[q_idx];
++=======
+ 	struct nvsp_1_message_send_rndis_packet * const rpkt =
+ 		&nvmsg.msg.v1_msg.send_rndis_pkt;
+ 	struct netvsc_channel * const nvchan =
+ 		&net_device->chan_table[packet->q_idx];
+ 	struct vmbus_channel *out_channel = nvchan->channel;
++>>>>>>> 956a25c9f120 (hyperv: netvsc: Neaten netvsc_send_pkt by using a temporary)
  	struct net_device *ndev = hv_get_drvdata(device);
 -	struct netdev_queue *txq = netdev_get_tx_queue(ndev, packet->q_idx);
  	u64 req_id;
  	int ret;
 +	struct hv_page_buffer *pgbuf;
  	u32 ring_avail = hv_ringbuf_avail_percent(&out_channel->outbound);
  
  	nvmsg.hdr.msg_type = NVSP_MSG1_TYPE_SEND_RNDIS_PKT;
* Unmerged path drivers/net/hyperv/netvsc.c
