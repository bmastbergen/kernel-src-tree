xfs: return work remaining at the end of a bunmapi operation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit 4453593be6c54e7581467e80f4a2757be098a3a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4453593b.failed

Return the range of file blocks that bunmapi didn't free.  This hint
is used by CoW and reflink to figure out what part of an extent
actually got freed so that it can set up the appropriate atomic
remapping of just the freed range.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 4453593be6c54e7581467e80f4a2757be098a3a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_bmap.c
#	fs/xfs/libxfs/xfs_bmap.h
diff --cc fs/xfs/libxfs/xfs_bmap.c
index e335b368ac04,2be1fd3fac47..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.c
+++ b/fs/xfs/libxfs/xfs_bmap.c
@@@ -5089,8 -5107,7 +5089,12 @@@ __xfs_bunmapi
  	xfs_extnum_t		nexts,		/* number of extents max */
  	xfs_fsblock_t		*firstblock,	/* first allocated block
  						   controls a.g. for allocs */
++<<<<<<< HEAD
 +	xfs_bmap_free_t		*flist,		/* i/o: list extents to free */
 +	int			*done)		/* set if not done yet */
++=======
+ 	struct xfs_defer_ops	*dfops)		/* i/o: deferred updates */
++>>>>>>> 4453593be6c5 (xfs: return work remaining at the end of a bunmapi operation)
  {
  	xfs_btree_cur_t		*cur;		/* bmap btree cursor */
  	xfs_bmbt_irec_t		del;		/* extent being deleted */
diff --cc fs/xfs/libxfs/xfs_bmap.h
index 2c95d141b01f,85e3b9d91ade..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.h
+++ b/fs/xfs/libxfs/xfs_bmap.h
@@@ -181,7 -196,11 +181,15 @@@ int	xfs_bmapi_write(struct xfs_trans *t
  		xfs_fileoff_t bno, xfs_filblks_t len, int flags,
  		xfs_fsblock_t *firstblock, xfs_extlen_t total,
  		struct xfs_bmbt_irec *mval, int *nmap,
++<<<<<<< HEAD
 +		struct xfs_bmap_free *flist);
++=======
+ 		struct xfs_defer_ops *dfops);
+ int	__xfs_bunmapi(struct xfs_trans *tp, struct xfs_inode *ip,
+ 		xfs_fileoff_t bno, xfs_filblks_t *rlen, int flags,
+ 		xfs_extnum_t nexts, xfs_fsblock_t *firstblock,
+ 		struct xfs_defer_ops *dfops);
++>>>>>>> 4453593be6c5 (xfs: return work remaining at the end of a bunmapi operation)
  int	xfs_bunmapi(struct xfs_trans *tp, struct xfs_inode *ip,
  		xfs_fileoff_t bno, xfs_filblks_t len, int flags,
  		xfs_extnum_t nexts, xfs_fsblock_t *firstblock,
* Unmerged path fs/xfs/libxfs/xfs_bmap.c
* Unmerged path fs/xfs/libxfs/xfs_bmap.h
