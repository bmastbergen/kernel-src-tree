perf/core: Add a flag for partial AUX records

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Alexander Shishkin <alexander.shishkin@linux.intel.com>
commit ae0c2d995d648d5165545d5e05e2869642009b38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/ae0c2d99.failed

The Intel PT driver needs to be able to communicate partial AUX transactions,
that is, transactions with gaps in data for reasons other than no room
left in the buffer (i.e. truncated transactions). Therefore, this condition
does not imply a wakeup for the consumer.

To this end, add a new "partial" AUX flag.

	Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Cc: vince@deater.net
Link: http://lkml.kernel.org/r/20170220133352.17995-4-alexander.shishkin@linux.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ae0c2d995d648d5165545d5e05e2869642009b38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/ring_buffer.c
diff --cc kernel/events/ring_buffer.c
index 3d8f17d5a505,2831480c63a2..000000000000
--- a/kernel/events/ring_buffer.c
+++ b/kernel/events/ring_buffer.c
@@@ -408,16 -422,11 +408,20 @@@ err
   * of the AUX buffer management code is that after pmu::stop(), the AUX
   * transaction must be stopped and therefore drop the AUX reference count.
   */
 -void perf_aux_output_end(struct perf_output_handle *handle, unsigned long size)
 +void perf_aux_output_end(struct perf_output_handle *handle, unsigned long size,
 +			 bool truncated)
  {
+ 	bool wakeup = !!(handle->aux_flags & PERF_AUX_FLAG_TRUNCATED);
  	struct ring_buffer *rb = handle->rb;
++<<<<<<< HEAD
 +	bool wakeup = truncated;
++=======
++>>>>>>> ae0c2d995d64 (perf/core: Add a flag for partial AUX records)
  	unsigned long aux_head;
 +	u64 flags = 0;
 +
 +	if (truncated)
 +		flags |= PERF_AUX_FLAG_TRUNCATED;
  
  	/* in overwrite mode, driver provides aux_head via handle */
  	if (rb->aux_overwrite) {
diff --git a/include/uapi/linux/perf_event.h b/include/uapi/linux/perf_event.h
index 7b447b9e0bb8..68c4a1ea13af 100644
--- a/include/uapi/linux/perf_event.h
+++ b/include/uapi/linux/perf_event.h
@@ -891,6 +891,7 @@ enum perf_callchain_context {
  */
 #define PERF_AUX_FLAG_TRUNCATED		0x01	/* record was truncated to fit */
 #define PERF_AUX_FLAG_OVERWRITE		0x02	/* snapshot from overwrite mode */
+#define PERF_AUX_FLAG_PARTIAL		0x04	/* record contains gaps */
 
 #define PERF_FLAG_FD_NO_GROUP		(1UL << 0)
 #define PERF_FLAG_FD_OUTPUT		(1UL << 1)
* Unmerged path kernel/events/ring_buffer.c
