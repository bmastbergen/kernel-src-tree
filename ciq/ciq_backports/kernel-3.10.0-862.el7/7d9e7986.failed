ALSA: x86: Drop unused fields from pcm_stream_info

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit 7d9e79869ba2a8a552f4c2cf1df44cf9a0822f02
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7d9e7986.failed

The struct pcm_stream_info contains a few unused or useless fields.
str_id is always zero, buffer_ptr is volatile, never read, and sfreq
is nowhere referred.  Kill them.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 7d9e79869ba2a8a552f4c2cf1df44cf9a0822f02)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/x86/intel_hdmi_audio.c
#	sound/x86/intel_hdmi_audio.h
diff --cc sound/x86/intel_hdmi_audio.c
index 063e2be94d05,907e420cd90d..000000000000
--- a/sound/x86/intel_hdmi_audio.c
+++ b/sound/x86/intel_hdmi_audio.c
@@@ -1068,21 -1015,10 +1068,19 @@@ static int snd_intelhad_init_stream(str
  static int snd_intelhad_close(struct snd_pcm_substream *substream)
  {
  	struct snd_intelhad *intelhaddata;
 +	struct snd_pcm_runtime *runtime;
 +
 +	pr_debug("snd_intelhad_close called\n");
  
  	intelhaddata = snd_pcm_substream_chip(substream);
 +	runtime = substream->runtime;
 +
 +	if (!runtime->private_data) {
 +		pr_debug("close() might have called after failed open");
 +		return 0;
 +	}
  
  	intelhaddata->stream_info.buffer_rendered = 0;
- 	intelhaddata->stream_info.buffer_ptr = 0;
- 	intelhaddata->stream_info.str_id = 0;
  	intelhaddata->stream_info.had_substream = NULL;
  
  	/* Check if following drv_status modification is required - VA */
@@@ -1213,23 -1129,16 +1211,27 @@@ static int snd_intelhad_pcm_trigger(str
  		break;
  
  	case SNDRV_PCM_TRIGGER_STOP:
++<<<<<<< HEAD
 +		pr_debug("Trigger Stop\n");
 +		spin_lock_irqsave(&intelhaddata->had_spinlock, flag_irq);
 +		intelhaddata->stream_info.str_id = 0;
++=======
+ 		spin_lock(&intelhaddata->had_spinlock);
++>>>>>>> 7d9e79869ba2 (ALSA: x86: Drop unused fields from pcm_stream_info)
  		intelhaddata->curr_buf = 0;
  
 -		/* Stop reporting BUFFER_DONE/UNDERRUN to above layers */
 +		/* Stop reporting BUFFER_DONE/UNDERRUN to above layers*/
  
  		had_stream->stream_type = HAD_INIT;
 -		spin_unlock(&intelhaddata->had_spinlock);
 +		spin_unlock_irqrestore(&intelhaddata->had_spinlock, flag_irq);
  		/* Disable Audio */
 -		snd_intelhad_enable_audio_int(intelhaddata, false);
 -		snd_intelhad_enable_audio(intelhaddata, false);
 +		/*
 +		 * ToDo: Need to disable UNDERRUN interrupts as well
 +		 *   caps = HDMI_AUDIO_UNDERRUN | HDMI_AUDIO_BUFFER_DONE;
 +		 */
 +		caps = HDMI_AUDIO_BUFFER_DONE;
 +		had_set_caps(intelhaddata, HAD_SET_DISABLE_AUDIO_INT, &caps);
 +		snd_intelhad_enable_audio(substream, 0);
  		/* Reset buffer pointers */
  		snd_intelhad_reset_audio(intelhaddata, 1);
  		snd_intelhad_reset_audio(intelhaddata, 0);
@@@ -1271,36 -1177,19 +1273,41 @@@ static int snd_intelhad_pcm_prepare(str
  		goto prep_end;
  	}
  
 -	dev_dbg(intelhaddata->dev, "period_size=%d\n",
 +	pr_debug("period_size=%d\n",
  		(int)frames_to_bytes(runtime, runtime->period_size));
 -	dev_dbg(intelhaddata->dev, "periods=%d\n", runtime->periods);
 -	dev_dbg(intelhaddata->dev, "buffer_size=%d\n",
 -		(int)snd_pcm_lib_buffer_bytes(substream));
 -	dev_dbg(intelhaddata->dev, "rate=%d\n", runtime->rate);
 -	dev_dbg(intelhaddata->dev, "channels=%d\n", runtime->channels);
 +	pr_debug("periods=%d\n", runtime->periods);
 +	pr_debug("buffer_size=%d\n", (int)snd_pcm_lib_buffer_bytes(substream));
 +	pr_debug("rate=%d\n", runtime->rate);
 +	pr_debug("channels=%d\n", runtime->channels);
 +
++<<<<<<< HEAD
 +	if (intelhaddata->stream_info.str_id) {
 +		pr_debug("_prepare is called for existing str_id#%d\n",
 +					intelhaddata->stream_info.str_id);
 +		retval = snd_intelhad_pcm_trigger(substream,
 +						SNDRV_PCM_TRIGGER_STOP);
 +		return retval;
 +	}
 +
 +	retval = snd_intelhad_init_stream(substream);
 +	if (retval)
 +		goto prep_end;
  
++=======
+ 	intelhaddata->stream_info.had_substream = substream;
+ 	intelhaddata->stream_info.buffer_rendered = 0;
++>>>>>>> 7d9e79869ba2 (ALSA: x86: Drop unused fields from pcm_stream_info)
  
  	/* Get N value in KHz */
 -	disp_samp_freq = intelhaddata->tmds_clock_speed;
 +	retval = had_get_caps(intelhaddata, HAD_GET_DISPLAY_RATE,
 +			      &disp_samp_freq);
 +	if (retval) {
 +		pr_err("querying display sampling freq failed %#x\n", retval);
 +		goto prep_end;
 +	}
 +
 +	had_get_caps(intelhaddata, HAD_GET_ELD, &intelhaddata->eeld);
 +	had_get_caps(intelhaddata, HAD_GET_DP_OUTPUT, &intelhaddata->dp_output);
  
  	retval = snd_intelhad_prog_n(substream->runtime->rate, &n_param,
  				     intelhaddata);
@@@ -1392,17 -1278,13 +1399,14 @@@ static snd_pcm_uframes_t snd_intelhad_p
  			intelhaddata->stream_info.ring_buf_size,
  			&(bytes_rendered));
  
- 	intelhaddata->stream_info.buffer_ptr = bytes_to_frames(
- 						substream->runtime,
- 						bytes_rendered + t);
- 	return intelhaddata->stream_info.buffer_ptr;
+ 	return bytes_to_frames(substream->runtime, bytes_rendered + t);
  }
  
 -/*
 +/**
   * snd_intelhad_pcm_mmap- mmaps a kernel buffer to user space for copying data
 - * @substream: substream for which the function is called
 - * @vma: struct instance of memory VMM memory area
 + *
 + * @substream:  substream for which the function is called
 + * @vma:		struct instance of memory VMM memory area
   *
   * This function is called by OS when a user space component
   * tries to get mmap memory from driver
diff --cc sound/x86/intel_hdmi_audio.h
index 32a2fb766e47,7bd273ec3275..000000000000
--- a/sound/x86/intel_hdmi_audio.h
+++ b/sound/x86/intel_hdmi_audio.h
@@@ -71,16 -69,12 +71,19 @@@ struct platform_device
  #define LAYOUT0			0
  #define LAYOUT1			1
  #define SWAP_LFE_CENTER		0x00fac4c8
 -#define AUD_CONFIG_CH_MASK	0x70
 +#define AUD_CONFIG_CH_MASK_V2	0x70
  
  struct pcm_stream_info {
++<<<<<<< HEAD
 +	int		str_id;
 +	void	*had_substream;
 +	void	(*period_elapsed)(void *had_substream);
 +	u32		buffer_ptr;
++=======
+ 	struct snd_pcm_substream	*had_substream;
++>>>>>>> 7d9e79869ba2 (ALSA: x86: Drop unused fields from pcm_stream_info)
  	u64		buffer_rendered;
  	u32		ring_buf_size;
- 	int		sfreq;
  };
  
  struct ring_buf_info {
* Unmerged path sound/x86/intel_hdmi_audio.c
* Unmerged path sound/x86/intel_hdmi_audio.h
