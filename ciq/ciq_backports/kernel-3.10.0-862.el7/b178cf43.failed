ceph: don't use CEPH_OSD_FLAG_ORDERSNAP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit b178cf4304f26551cb05915eb6c6b1736617366b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b178cf43.failed

Inode can be moved between snap realms. It's possible inode is moved
into a snap realm whose seq number is smaller than old snap realm's.
So there is no guarantee that seq number inode's snap context always
increases.

	Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit b178cf4304f26551cb05915eb6c6b1736617366b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/file.c
diff --cc fs/ceph/file.c
index 63802ddb0731,2eb43a54e2d6..000000000000
--- a/fs/ceph/file.c
+++ b/fs/ceph/file.c
@@@ -758,9 -787,7 +758,13 @@@ static void ceph_aio_retry_work(struct 
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	req->r_flags =	CEPH_OSD_FLAG_ORDERSNAP |
 +			CEPH_OSD_FLAG_ONDISK |
 +			CEPH_OSD_FLAG_WRITE;
++=======
+ 	req->r_flags = /* CEPH_OSD_FLAG_ORDERSNAP | */ CEPH_OSD_FLAG_WRITE;
++>>>>>>> b178cf4304f2 (ceph: don't use CEPH_OSD_FLAG_ORDERSNAP)
  	ceph_oloc_copy(&req->r_base_oloc, &orig_req->r_base_oloc);
  	ceph_oid_copy(&req->r_base_oid, &orig_req->r_base_oid);
  
@@@ -827,15 -854,13 +831,19 @@@ ceph_direct_read_write(struct kiocb *io
  		return ret;
  
  	if (write) {
 -		int ret2 = invalidate_inode_pages2_range(inode->i_mapping,
 -					pos >> PAGE_SHIFT,
 -					(pos + count) >> PAGE_SHIFT);
 -		if (ret2 < 0)
 -			dout("invalidate_inode_pages2_range returned %d\n", ret2);
 +		ret = invalidate_inode_pages2_range(inode->i_mapping,
 +					pos >> PAGE_CACHE_SHIFT,
 +					(pos + count) >> PAGE_CACHE_SHIFT);
 +		if (ret < 0)
 +			dout("invalidate_inode_pages2_range returned %d\n", ret);
  
++<<<<<<< HEAD
 +		flags = CEPH_OSD_FLAG_ORDERSNAP |
 +			CEPH_OSD_FLAG_ONDISK |
 +			CEPH_OSD_FLAG_WRITE;
++=======
+ 		flags = /* CEPH_OSD_FLAG_ORDERSNAP | */ CEPH_OSD_FLAG_WRITE;
++>>>>>>> b178cf4304f2 (ceph: don't use CEPH_OSD_FLAG_ORDERSNAP)
  	} else {
  		flags = CEPH_OSD_FLAG_READ;
  	}
@@@ -1034,11 -1063,9 +1042,15 @@@ static ssize_t ceph_sync_write(struct k
  	if (ret < 0)
  		dout("invalidate_inode_pages2_range returned %d\n", ret);
  
++<<<<<<< HEAD
 +	flags = CEPH_OSD_FLAG_ORDERSNAP |
 +		CEPH_OSD_FLAG_ONDISK |
 +		CEPH_OSD_FLAG_WRITE;
++=======
+ 	flags = /* CEPH_OSD_FLAG_ORDERSNAP | */ CEPH_OSD_FLAG_WRITE;
++>>>>>>> b178cf4304f2 (ceph: don't use CEPH_OSD_FLAG_ORDERSNAP)
  
 -	while ((len = iov_iter_count(from)) > 0) {
 +	while ((len = iov_iter_count(i)) > 0) {
  		size_t left;
  		int n;
  
* Unmerged path fs/ceph/file.c
