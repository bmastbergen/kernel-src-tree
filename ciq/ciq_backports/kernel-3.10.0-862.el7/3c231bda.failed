qla2xxx: Check + fail when npiv_vports_inuse exists in shutdown

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit 3c231bdae1e7c8d366eeb133980b81dff2e1e809
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3c231bda.failed

This patch adds an check to qlt_stop_phase1() to avoid shutdown
when the base_vha contains a non-zero fc_host->npiv_vports_inuse
count.

This includes holding qla_tgt_mutex in qlt_stop_phase1() between
the fc_host->npiv_vports_inuse check + setting of tgt->tgt_stop to
avoid a possible race between qlt_lport_register() -> tcm_qla2xxx
-> tcm_qla2xxx_lport_register_npiv_cb() calling fc_vport_create().

	Cc: Sawan Chandak <sawan.chandak@qlogic.com>
	Cc: Quinn Tran <quinn.tran@qlogic.com>
	Cc: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Cc: Giridhar Malavali <giridhar.malavali@qlogic.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 3c231bdae1e7c8d366eeb133980b81dff2e1e809)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index d382e957457a,f2e1c5a5fdbb..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -937,7 -829,8 +952,12 @@@ int qlt_stop_phase1(struct qla_tgt *tgt
  	tgt->tgt_stop = 1;
  	qlt_clear_tgt_db(tgt, true);
  	spin_unlock_irqrestore(&ha->hardware_lock, flags);
++<<<<<<< HEAD
 +	mutex_unlock(&ha->tgt.tgt_mutex);
++=======
+ 	mutex_unlock(&vha->vha_tgt.tgt_mutex);
+ 	mutex_unlock(&qla_tgt_mutex);
++>>>>>>> 3c231bdae1e7 (qla2xxx: Check + fail when npiv_vports_inuse exists in shutdown)
  
  	flush_delayed_work(&tgt->sess_del_work);
  
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
diff --git a/drivers/scsi/qla2xxx/qla_target.h b/drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0..7fdf8ac697ce 100644
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@ -1002,7 +1002,7 @@ extern void qlt_modify_vp_config(struct scsi_qla_host *,
 extern void qlt_probe_one_stage1(struct scsi_qla_host *, struct qla_hw_data *);
 extern int qlt_mem_alloc(struct qla_hw_data *);
 extern void qlt_mem_free(struct qla_hw_data *);
-extern void qlt_stop_phase1(struct qla_tgt *);
+extern int qlt_stop_phase1(struct qla_tgt *);
 extern void qlt_stop_phase2(struct qla_tgt *);
 extern irqreturn_t qla83xx_msix_atio_q(int, void *);
 extern void qlt_83xx_iospace_config(struct qla_hw_data *);
