target: return SAM_STAT_TASK_SET_FULL for TCM_OUT_OF_RESOURCES

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [target] return SAM_STAT_TASK_SET_FULL for TCM_OUT_OF_RESOURCES (Mike Christie) [1480721 1480434]
Rebuild_FUZZ: 93.10%
commit-author Mike Christie <mchristi@redhat.com>
commit a271eac46a9a2457f4e8c757f9b7fc92a445cf48
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a271eac4.failed

TCM_OUT_OF_RESOURCES is getting translated to
TCM_LOGICAL_UNIT_COMMUNICATION_FAILURE which seems like a heavy
error when we just cannot allocate a resource that may be
allocatable later. This has us translate TCM_OUT_OF_RESOURCES
to SAM_STAT_TASK_SET_FULL instead.

	Signed-off-by: Mike Christie <mchristi@redhat.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit a271eac46a9a2457f4e8c757f9b7fc92a445cf48)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_transport.c
diff --cc drivers/target/target_core_transport.c
index 68bc47c2e404,e791a7b63382..000000000000
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@@ -1687,10 -1765,15 +1687,10 @@@ void transport_generic_request_failure(
  	case TCM_LOGICAL_BLOCK_GUARD_CHECK_FAILED:
  	case TCM_LOGICAL_BLOCK_APP_TAG_CHECK_FAILED:
  	case TCM_LOGICAL_BLOCK_REF_TAG_CHECK_FAILED:
 -	case TCM_COPY_TARGET_DEVICE_NOT_REACHABLE:
 -	case TCM_TOO_MANY_TARGET_DESCS:
 -	case TCM_UNSUPPORTED_TARGET_DESC_TYPE_CODE:
 -	case TCM_TOO_MANY_SEGMENT_DESCS:
 -	case TCM_UNSUPPORTED_SEGMENT_DESC_TYPE_CODE:
  		break;
  	case TCM_OUT_OF_RESOURCES:
- 		sense_reason = TCM_LOGICAL_UNIT_COMMUNICATION_FAILURE;
- 		break;
+ 		cmd->scsi_status = SAM_STAT_TASK_SET_FULL;
+ 		goto queue_status;
  	case TCM_RESERVATION_CONFLICT:
  		/*
  		 * No SENSE Data payload for this case, set SCSI Status
@@@ -1707,16 -1790,13 +1707,26 @@@
  		 * See spc4r17, section 7.4.6 Control Mode Page, Table 349
  		 */
  		if (cmd->se_sess &&
++<<<<<<< HEAD
 +		    cmd->se_dev->dev_attrib.emulate_ua_intlck_ctrl == 2)
 +			core_scsi3_ua_allocate(cmd->se_sess->se_node_acl,
 +				cmd->orig_fe_lun, 0x2C,
 +				ASCQ_2CH_PREVIOUS_RESERVATION_CONFLICT_STATUS);
 +
 +		trace_target_cmd_complete(cmd);
 +		ret = cmd->se_tfo-> queue_status(cmd);
 +		if (ret)
 +			goto queue_full;
 +		goto check_stop;
++=======
+ 		    cmd->se_dev->dev_attrib.emulate_ua_intlck_ctrl == 2) {
+ 			target_ua_allocate_lun(cmd->se_sess->se_node_acl,
+ 					       cmd->orig_fe_lun, 0x2C,
+ 					ASCQ_2CH_PREVIOUS_RESERVATION_CONFLICT_STATUS);
+ 		}
+ 
+ 		goto queue_status;
++>>>>>>> a271eac46a9a (target: return SAM_STAT_TASK_SET_FULL for TCM_OUT_OF_RESOURCES)
  	default:
  		pr_err("Unknown transport error for CDB 0x%02x: %d\n",
  			cmd->t_task_cdb[0], sense_reason);
@@@ -1730,10 -1810,14 +1740,15 @@@
  
  check_stop:
  	transport_lun_remove_cmd(cmd);
 -	transport_cmd_check_stop_to_fabric(cmd);
 +	if (!transport_cmd_check_stop_to_fabric(cmd))
 +		;
  	return;
  
+ queue_status:
+ 	trace_target_cmd_complete(cmd);
+ 	ret = cmd->se_tfo->queue_status(cmd);
+ 	if (!ret)
+ 		goto check_stop;
  queue_full:
  	transport_handle_queue_full(cmd, cmd->se_dev, ret, false);
  }
* Unmerged path drivers/target/target_core_transport.c
