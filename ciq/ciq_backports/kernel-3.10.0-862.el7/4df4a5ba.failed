IB/mlx5: Decrease verbosity level of ODP errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Artemy Kovalyov <artemyko@mellanox.com>
commit 4df4a5bac3264efa0595b52b2a9cd5274b32f0d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4df4a5ba.failed

Decrease verbosity level of ODP error flows messages to debug level.
Remove one redundant print since debug level message already exists in
this flow.

Fixes: d9aaed838765 ('{net,IB}/mlx5: Refactor page fault handling')
	Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 4df4a5bac3264efa0595b52b2a9cd5274b32f0d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/odp.c
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 25e3fb5efdf9,0d52b72ff99b..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -587,14 -981,13 +587,17 @@@ static void mlx5_ib_mr_wqe_pfault_handl
  		goto resolve_page_fault;
  	}
  
 -	ret = pagefault_data_segments(dev, pfault, qp, wqe, wqe_end,
 -				      &bytes_mapped, &total_wqe_bytes,
 -				      !requestor);
 +	ret = pagefault_data_segments(qp, pfault, wqe, wqe_end, &bytes_mapped,
 +				      &total_wqe_bytes, !requestor);
  	if (ret == -EAGAIN) {
 -		resume_with_error = 0;
  		goto resolve_page_fault;
  	} else if (ret < 0 || total_wqe_bytes > bytes_mapped) {
++<<<<<<< HEAD
 +		mlx5_ib_err(dev, "Error getting user pages for page fault. Error: 0x%x\n",
 +			    -ret);
 +		resume_with_error = 1;
++=======
++>>>>>>> 4df4a5bac326 (IB/mlx5: Decrease verbosity level of ODP errors)
  		goto resolve_page_fault;
  	}
  
@@@ -657,7 -1045,10 +660,14 @@@ static void mlx5_ib_mr_rdma_pfault_hand
  		/* We're racing with an invalidation, don't prefetch */
  		prefetch_activated = 0;
  	} else if (ret < 0 || pages_in_range(address, length) > ret) {
++<<<<<<< HEAD
 +		mlx5_ib_page_fault_resume(qp, pfault, 1);
++=======
+ 		mlx5_ib_page_fault_resume(dev, pfault, 1);
+ 		if (ret != -ENOENT)
+ 			mlx5_ib_dbg(dev, "PAGE FAULT error %d. QP 0x%x, type: 0x%x\n",
+ 				    ret, pfault->token, pfault->type);
++>>>>>>> 4df4a5bac326 (IB/mlx5: Decrease verbosity level of ODP errors)
  		return;
  	}
  
@@@ -669,14 -1063,14 +679,21 @@@
  	 * work-queue is being fenced. */
  
  	if (prefetch_activated) {
 -		u32 bytes_committed = 0;
 -
 -		ret = pagefault_single_data_segment(dev, rkey, address,
 +		ret = pagefault_single_data_segment(qp, &dummy_pfault, rkey,
 +						    address,
  						    prefetch_len,
++<<<<<<< HEAD
 +						    NULL);
 +		if (ret < 0) {
 +			pr_warn("Prefetch failed (ret = %d, prefetch_activated = %d) for QPN %d, address: 0x%.16llx, length = 0x%.16x\n",
 +				ret, prefetch_activated,
 +				qp->ibqp.qp_num, address, prefetch_len);
++=======
+ 						    &bytes_committed, NULL);
+ 		if (ret < 0 && ret != -EAGAIN) {
+ 			mlx5_ib_dbg(dev, "Prefetch failed. ret: %d, QP 0x%x, address: 0x%.16llx, length = 0x%.16x\n",
+ 				    ret, pfault->token, address, prefetch_len);
++>>>>>>> 4df4a5bac326 (IB/mlx5: Decrease verbosity level of ODP errors)
  		}
  	}
  }
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
