qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit 49a47f2cafbe4ca3839f8ae99c6fdeffd5fcaf45
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/49a47f2c.failed

This patch changes qla2xxx qlt_lport_register() code to accept
target_lport_ptr + npiv_wwpn + npiv_wwnn parameters, and updates
tcm_qla2xxx to use the new tcm_qla2xxx_lport_register_npiv_cb()
callback for invoking fc_vport_create() from configfs context
via tcm_qla2xxx_npiv_make_lport() code.

In order for this to work, the qlt_lport_register() callback is
now called without holding qla_tgt_mutex, as the fc_vport creation
process will call qlt_vport_create() -> qlt_add_target(), which
already expects to acquire it.

It enforces /sys/kernel/config/target/qla2xxx_npiv/$NPIV_WWPN
naming in the following format:

     $PHYSICAL_WWPN@$NPIV_WWPN:$NPIV_WWNN

and assumes the $PHYSICAL_WWPN in question has already had been
configured for target mode in non NPIV mode.

Finally, it updates existing tcm_qla2xxx_lport_register_cb() logic
to setup the non NPIV assignments that have now been moved out of
qlt_lport_register() code.

	Cc: Sawan Chandak <sawan.chandak@qlogic.com>
	Cc: Quinn Tran <quinn.tran@qlogic.com>
	Cc: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 49a47f2cafbe4ca3839f8ae99c6fdeffd5fcaf45)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
#	drivers/scsi/qla2xxx/tcm_qla2xxx.c
diff --cc drivers/scsi/qla2xxx/qla_target.c
index d382e957457a,b596f8b2cfc0..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -4401,17 -4280,12 +4402,25 @@@ int qlt_lport_register(void *target_lpo
  			scsi_host_put(host);
  			continue;
  		}
++<<<<<<< HEAD
 +		/*
 +		 * Setup passed parameters ahead of invoking callback
 +		 */
 +		ha->tgt.tgt_ops = qla_tgt_ops;
 +		ha->tgt.target_lport_ptr = target_lport_ptr;
 +		rc = (*callback)(vha);
 +		if (rc != 0) {
 +			ha->tgt.tgt_ops = NULL;
 +			ha->tgt.target_lport_ptr = NULL;
 +		}
++=======
++>>>>>>> 49a47f2cafbe (qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport)
  		mutex_unlock(&qla_tgt_mutex);
+ 
+ 		rc = (*callback)(vha, target_lport_ptr, npiv_wwpn, npiv_wwnn);
+ 		if (rc != 0)
+ 			scsi_host_put(host);
+ 
  		return rc;
  	}
  	mutex_unlock(&qla_tgt_mutex);
diff --cc drivers/scsi/qla2xxx/tcm_qla2xxx.c
index e9c7bfd1510c,75a141bbe74d..000000000000
--- a/drivers/scsi/qla2xxx/tcm_qla2xxx.c
+++ b/drivers/scsi/qla2xxx/tcm_qla2xxx.c
@@@ -1596,15 -1559,18 +1596,26 @@@ static int tcm_qla2xxx_init_lport(struc
  	return 0;
  }
  
- static int tcm_qla2xxx_lport_register_cb(struct scsi_qla_host *vha)
+ static int tcm_qla2xxx_lport_register_cb(struct scsi_qla_host *vha,
+ 					 void *target_lport_ptr,
+ 					 u64 npiv_wwpn, u64 npiv_wwnn)
  {
  	struct qla_hw_data *ha = vha->hw;
++<<<<<<< HEAD
 +	struct tcm_qla2xxx_lport *lport;
++=======
+ 	struct tcm_qla2xxx_lport *lport =
+ 			(struct tcm_qla2xxx_lport *)target_lport_ptr;
++>>>>>>> 49a47f2cafbe (qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport)
  	/*
- 	 * Setup local pointer to vha, NPIV VP pointer (if present) and
- 	 * vha->tcm_lport pointer
+ 	 * Setup tgt_ops, local pointer to vha and target_lport_ptr
  	 */
++<<<<<<< HEAD
 +	lport = (struct tcm_qla2xxx_lport *)ha->tgt.target_lport_ptr;
++=======
+ 	ha->tgt.tgt_ops = &tcm_qla2xxx_template;
+ 	vha->vha_tgt.target_lport_ptr = target_lport_ptr;
++>>>>>>> 49a47f2cafbe (qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport)
  	lport->qla_vha = vha;
  
  	return 0;
@@@ -1705,7 -1722,15 +1769,15 @@@ static struct se_wwn *tcm_qla2xxx_npiv_
  	if (ret != 0)
  		goto out;
  
++<<<<<<< HEAD
++=======
+ 	ret = qlt_lport_register(lport, phys_wwpn, npiv_wwpn, npiv_wwnn,
+ 				 tcm_qla2xxx_lport_register_npiv_cb);
+ 	if (ret != 0)
+ 		goto out_lport;
+ 
++>>>>>>> 49a47f2cafbe (qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport)
  	return &lport->lport_wwn;
 -out_lport:
 -	vfree(lport->lport_loopid_map);
 -	btree_destroy32(&lport->lport_fcport_map);
  out:
  	kfree(lport);
  	return ERR_PTR(ret);
@@@ -1715,14 -1740,16 +1787,22 @@@ static void tcm_qla2xxx_npiv_drop_lport
  {
  	struct tcm_qla2xxx_lport *lport = container_of(wwn,
  			struct tcm_qla2xxx_lport, lport_wwn);
- 	struct scsi_qla_host *vha = lport->qla_vha;
- 	struct Scsi_Host *sh = vha->host;
+ 	struct scsi_qla_host *npiv_vha = lport->qla_vha;
+ 	struct qla_hw_data *ha = npiv_vha->hw;
+ 	scsi_qla_host_t *base_vha = pci_get_drvdata(ha->pdev);
+ 
+ 	scsi_host_put(npiv_vha->host);
  	/*
 -	 * Notify libfc that we want to release the vha->fc_vport
 +	 * Notify libfc that we want to release the lport->npiv_vport
  	 */
++<<<<<<< HEAD
 +	fc_vport_terminate(lport->npiv_vport);
 +
 +	scsi_host_put(sh);
++=======
+ 	fc_vport_terminate(npiv_vha->fc_vport);
+ 	scsi_host_put(base_vha->host);
++>>>>>>> 49a47f2cafbe (qla2xxx: Configure NPIV fc_vport via tcm_qla2xxx_npiv_make_lport)
  	kfree(lport);
  }
  
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
diff --git a/drivers/scsi/qla2xxx/qla_target.h b/drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0..1d10eecad499 100644
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@ -932,8 +932,8 @@ void qlt_disable_vha(struct scsi_qla_host *);
  */
 extern int qlt_add_target(struct qla_hw_data *, struct scsi_qla_host *);
 extern int qlt_remove_target(struct qla_hw_data *, struct scsi_qla_host *);
-extern int qlt_lport_register(struct qla_tgt_func_tmpl *, u64,
-			int (*callback)(struct scsi_qla_host *), void *);
+extern int qlt_lport_register(void *, u64, u64, u64,
+			int (*callback)(struct scsi_qla_host *, void *, u64, u64));
 extern void qlt_lport_deregister(struct scsi_qla_host *);
 extern void qlt_unreg_sess(struct qla_tgt_sess *);
 extern void qlt_fc_port_added(struct scsi_qla_host *, fc_port_t *);
* Unmerged path drivers/scsi/qla2xxx/tcm_qla2xxx.c
