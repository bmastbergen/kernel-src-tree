x86/vmware: Use tsc_khz value for calibrate_cpu()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] vmware: Use tsc_khz value for calibrate_cpu() (Prarit Bhargava) [1475716]
Rebuild_FUZZ: 95.74%
commit-author Alexey Makhalov <amakhalov@vmware.com>
commit 687bca8d664ac9b098005b57846773eb62040ae0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/687bca8d.failed

Commit aa297292d708 ("x86/tsc: Enumerate SKL cpu_khz and tsc_khz via
CPUID") separated the calibration mechanisms for cpu_khz and tsc_khz.

Since the vmware hypervisor provides a constant frequency TSC to the guest,
this change can lead to divergence between the tsc and the cpu frequency
after vmotion, which might confuse the user.

Solve this by overriding the x86 platform cpu calibration callback with the
vmware specific tsc calibration function.

	Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
	Acked-by: Alok N Kataria <akataria@vmware.com>
	Cc: linux-doc@vger.kernel.org
	Cc: pv-drivers@vmware.com
	Cc: corbet@lwn.net
	Cc: virtualization@lists.linux-foundation.org
Link: http://lkml.kernel.org/r/20161028075432.90579-2-amakhalov@vmware.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 687bca8d664ac9b098005b57846773eb62040ae0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/vmware.c
diff --cc arch/x86/kernel/cpu/vmware.c
index 628a059a9a06,480790fe2463..000000000000
--- a/arch/x86/kernel/cpu/vmware.c
+++ b/arch/x86/kernel/cpu/vmware.c
@@@ -81,11 -67,33 +81,25 @@@ static void __init vmware_platform_setu
  
  	VMWARE_PORT(GETHZ, eax, ebx, ecx, edx);
  
 -	if (ebx != UINT_MAX) {
 -		lpj = tsc_khz = eax | (((uint64_t)ebx) << 32);
 -		do_div(tsc_khz, 1000);
 -		WARN_ON(tsc_khz >> 32);
 -		pr_info("TSC freq read from hypervisor : %lu.%03lu MHz\n",
 -			(unsigned long) tsc_khz / 1000,
 -			(unsigned long) tsc_khz % 1000);
 -
 -		if (!preset_lpj) {
 -			do_div(lpj, HZ);
 -			preset_lpj = lpj;
 -		}
 -
 -		vmware_tsc_khz = tsc_khz;
 +	if (ebx != UINT_MAX)
  		x86_platform.calibrate_tsc = vmware_get_tsc_khz;
++<<<<<<< HEAD
 +	else
 +		printk(KERN_WARNING
 +		       "Failed to get TSC freq from the hypervisor\n");
++=======
+ 		x86_platform.calibrate_cpu = vmware_get_tsc_khz;
+ 
+ #ifdef CONFIG_X86_LOCAL_APIC
+ 		/* Skip lapic calibration since we know the bus frequency. */
+ 		lapic_timer_frequency = ecx / HZ;
+ 		pr_info("Host bus clock speed read from hypervisor : %u Hz\n",
+ 			ecx);
+ #endif
+ 	} else {
+ 		pr_warn("Failed to get TSC freq from the hypervisor\n");
+ 	}
++>>>>>>> 687bca8d664a (x86/vmware: Use tsc_khz value for calibrate_cpu())
  }
  
  /*
* Unmerged path arch/x86/kernel/cpu/vmware.c
