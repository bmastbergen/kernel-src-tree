qla2xxx: Cleanup TMF code translation from qla_target

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Quinn Tran <quinn.tran@cavium.com>
commit be92fc3fde95c94bb54ff471219552a581640a6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/be92fc3f.failed

Move code code which converts Task Mgmt Command flags for
ATIO to TCM #defines, from qla2xxx driver to tcm_qla2xxx
driver.

	Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit be92fc3fde95c94bb54ff471219552a581640a6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_target.c
#	drivers/scsi/qla2xxx/qla_target.h
diff --cc drivers/scsi/qla2xxx/qla_target.c
index 7d14b62f83a6,fcdd5c9ed3bf..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.c
+++ b/drivers/scsi/qla2xxx/qla_target.c
@@@ -2764,8 -4050,8 +2765,7 @@@ static int qlt_issue_task_mgmt(struct q
  	struct scsi_qla_host *vha = sess->vha;
  	struct qla_hw_data *ha = vha->hw;
  	struct qla_tgt_mgmt_cmd *mcmd;
 -	struct atio_from_isp *a = (struct atio_from_isp *)iocb;
  	int res;
- 	uint8_t tmr_func;
  
  	mcmd = mempool_alloc(qla_tgt_mgmt_cmd_mempool, GFP_ATOMIC);
  	if (!mcmd) {
@@@ -2784,75 -4070,15 +2784,67 @@@
  	}
  	mcmd->tmr_func = fn;
  	mcmd->flags = flags;
 -	mcmd->reset_count = vha->hw->chip_reset;
  
  	switch (fn) {
- 	case QLA_TGT_CLEAR_ACA:
- 		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10000,
- 		    "qla_target(%d): CLEAR_ACA received\n", sess->vha->vp_idx);
- 		tmr_func = TMR_CLEAR_ACA;
- 		break;
- 
- 	case QLA_TGT_TARGET_RESET:
- 		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10001,
- 		    "qla_target(%d): TARGET_RESET received\n",
- 		    sess->vha->vp_idx);
- 		tmr_func = TMR_TARGET_WARM_RESET;
- 		break;
- 
  	case QLA_TGT_LUN_RESET:
++<<<<<<< HEAD
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10002,
 +		    "qla_target(%d): LUN_RESET received\n", sess->vha->vp_idx);
 +		tmr_func = TMR_LUN_RESET;
 +		break;
 +
 +	case QLA_TGT_CLEAR_TS:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10003,
 +		    "qla_target(%d): CLEAR_TS received\n", sess->vha->vp_idx);
 +		tmr_func = TMR_CLEAR_TASK_SET;
 +		break;
 +
 +	case QLA_TGT_ABORT_TS:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10004,
 +		    "qla_target(%d): ABORT_TS received\n", sess->vha->vp_idx);
 +		tmr_func = TMR_ABORT_TASK_SET;
 +		break;
 +#if 0
 +	case QLA_TGT_ABORT_ALL:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10005,
 +		    "qla_target(%d): Doing ABORT_ALL_TASKS\n",
 +		    sess->vha->vp_idx);
 +		tmr_func = 0;
 +		break;
 +
 +	case QLA_TGT_ABORT_ALL_SESS:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10006,
 +		    "qla_target(%d): Doing ABORT_ALL_TASKS_SESS\n",
 +		    sess->vha->vp_idx);
 +		tmr_func = 0;
 +		break;
 +
 +	case QLA_TGT_NEXUS_LOSS_SESS:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10007,
 +		    "qla_target(%d): Doing NEXUS_LOSS_SESS\n",
 +		    sess->vha->vp_idx);
 +		tmr_func = 0;
 +		break;
 +
 +	case QLA_TGT_NEXUS_LOSS:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x10008,
 +		    "qla_target(%d): Doing NEXUS_LOSS\n", sess->vha->vp_idx);
 +		tmr_func = 0;
 +		break;
 +#endif
 +	default:
 +		ql_dbg(ql_dbg_tgt_tmr, vha, 0x1000a,
 +		    "qla_target(%d): Unknown task mgmt fn 0x%x\n",
 +		    sess->vha->vp_idx, fn);
 +		mempool_free(mcmd, qla_tgt_mgmt_cmd_mempool);
 +		return -ENOSYS;
++=======
+ 	    abort_cmds_for_lun(vha, lun, a->u.isp24.fcp_hdr.s_id);
+ 	    break;
++>>>>>>> be92fc3fde95 (qla2xxx: Cleanup TMF code translation from qla_target)
  	}
  
- 	res = ha->tgt.tgt_ops->handle_tmr(mcmd, lun, tmr_func, 0);
+ 	res = ha->tgt.tgt_ops->handle_tmr(mcmd, lun, mcmd->tmr_func, 0);
  	if (res != 0) {
  		ql_dbg(ql_dbg_tgt_tmr, vha, 0x1000b,
  		    "qla_target(%d): tgt.tgt_ops->handle_tmr() failed: %d\n",
diff --cc drivers/scsi/qla2xxx/qla_target.h
index b33e411f28a0,14f2e241db8c..000000000000
--- a/drivers/scsi/qla2xxx/qla_target.h
+++ b/drivers/scsi/qla2xxx/qla_target.h
@@@ -641,7 -743,8 +641,12 @@@ struct qla_tgt_func_tmpl 
  	int (*handle_cmd)(struct scsi_qla_host *, struct qla_tgt_cmd *,
  			unsigned char *, uint32_t, int, int, int);
  	void (*handle_data)(struct qla_tgt_cmd *);
++<<<<<<< HEAD
 +	int (*handle_tmr)(struct qla_tgt_mgmt_cmd *, uint32_t, uint8_t,
++=======
+ 	void (*handle_dif_err)(struct qla_tgt_cmd *);
+ 	int (*handle_tmr)(struct qla_tgt_mgmt_cmd *, uint32_t, uint16_t,
++>>>>>>> be92fc3fde95 (qla2xxx: Cleanup TMF code translation from qla_target)
  			uint32_t);
  	void (*free_cmd)(struct qla_tgt_cmd *);
  	void (*free_mcmd)(struct qla_tgt_mgmt_cmd *);
* Unmerged path drivers/scsi/qla2xxx/qla_target.c
* Unmerged path drivers/scsi/qla2xxx/qla_target.h
diff --git a/drivers/scsi/qla2xxx/tcm_qla2xxx.c b/drivers/scsi/qla2xxx/tcm_qla2xxx.c
index 45ec37d3095c..bedfb8c59897 100644
--- a/drivers/scsi/qla2xxx/tcm_qla2xxx.c
+++ b/drivers/scsi/qla2xxx/tcm_qla2xxx.c
@@ -636,13 +636,49 @@ static void tcm_qla2xxx_handle_data(struct qla_tgt_cmd *cmd)
  * Called from qla_target.c:qlt_issue_task_mgmt()
  */
 static int tcm_qla2xxx_handle_tmr(struct qla_tgt_mgmt_cmd *mcmd, uint32_t lun,
-	uint8_t tmr_func, uint32_t tag)
+	uint16_t tmr_func, uint32_t tag)
 {
 	struct qla_tgt_sess *sess = mcmd->sess;
 	struct se_cmd *se_cmd = &mcmd->se_cmd;
+	int transl_tmr_func = 0;
+
+	switch (tmr_func) {
+	case QLA_TGT_ABTS:
+		pr_debug("%ld: ABTS received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_ABORT_TASK;
+		break;
+	case QLA_TGT_2G_ABORT_TASK:
+		pr_debug("%ld: 2G Abort Task received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_ABORT_TASK;
+		break;
+	case QLA_TGT_CLEAR_ACA:
+		pr_debug("%ld: CLEAR_ACA received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_CLEAR_ACA;
+		break;
+	case QLA_TGT_TARGET_RESET:
+		pr_debug("%ld: TARGET_RESET received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_TARGET_WARM_RESET;
+		break;
+	case QLA_TGT_LUN_RESET:
+		pr_debug("%ld: LUN_RESET received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_LUN_RESET;
+		break;
+	case QLA_TGT_CLEAR_TS:
+		pr_debug("%ld: CLEAR_TS received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_CLEAR_TASK_SET;
+		break;
+	case QLA_TGT_ABORT_TS:
+		pr_debug("%ld: ABORT_TS received\n", sess->vha->host_no);
+		transl_tmr_func = TMR_ABORT_TASK_SET;
+		break;
+	default:
+		pr_debug("%ld: Unknown task mgmt fn 0x%x\n",
+		    sess->vha->host_no, tmr_func);
+		return -ENOSYS;
+	}
 
 	return target_submit_tmr(se_cmd, sess->se_sess, NULL, lun, mcmd,
-			tmr_func, GFP_ATOMIC, tag, TARGET_SCF_ACK_KREF);
+	    transl_tmr_func, GFP_ATOMIC, tag, TARGET_SCF_ACK_KREF);
 }
 
 static int tcm_qla2xxx_queue_data_in(struct se_cmd *se_cmd)
