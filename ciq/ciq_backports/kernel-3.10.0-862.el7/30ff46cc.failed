radix-tree: rename INDIRECT_PTR to INTERNAL_NODE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Matthew Wilcox <willy@linux.intel.com>
commit 30ff46ccb303fb6f6c28b9aa9f2cdc4ba900ed3f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/30ff46cc.failed

The name RADIX_TREE_INDIRECT_PTR doesn't really match the meaning.
RADIX_TREE_INTERNAL_NODE is a better name.

	Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
	Cc: Konstantin Khlebnikov <koct9i@gmail.com>
	Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Jan Kara <jack@suse.com>
	Cc: Neil Brown <neilb@suse.de>
	Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 30ff46ccb303fb6f6c28b9aa9f2cdc4ba900ed3f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/radix-tree.h
diff --cc include/linux/radix-tree.h
index f94b73d0f147,c8cc879046c7..000000000000
--- a/include/linux/radix-tree.h
+++ b/include/linux/radix-tree.h
@@@ -52,9 -48,18 +48,9 @@@
  #define RADIX_TREE_EXCEPTIONAL_ENTRY	2
  #define RADIX_TREE_EXCEPTIONAL_SHIFT	2
  
 -#define RADIX_DAX_MASK	0xf
 -#define RADIX_DAX_SHIFT	4
 -#define RADIX_DAX_PTE  (0x4 | RADIX_TREE_EXCEPTIONAL_ENTRY)
 -#define RADIX_DAX_PMD  (0x8 | RADIX_TREE_EXCEPTIONAL_ENTRY)
 -#define RADIX_DAX_TYPE(entry) ((unsigned long)entry & RADIX_DAX_MASK)
 -#define RADIX_DAX_SECTOR(entry) (((unsigned long)entry >> RADIX_DAX_SHIFT))
 -#define RADIX_DAX_ENTRY(sector, pmd) ((void *)((unsigned long)sector << \
 -		RADIX_DAX_SHIFT | (pmd ? RADIX_DAX_PMD : RADIX_DAX_PTE)))
 -
  static inline int radix_tree_is_indirect_ptr(void *ptr)
  {
- 	return (int)((unsigned long)ptr & RADIX_TREE_INDIRECT_PTR);
+ 	return (int)((unsigned long)ptr & RADIX_TREE_INTERNAL_NODE);
  }
  
  /*** radix-tree API starts here ***/
@@@ -418,7 -439,12 +414,16 @@@ void **radix_tree_iter_next(struct radi
  static __always_inline long
  radix_tree_chunk_size(struct radix_tree_iter *iter)
  {
++<<<<<<< HEAD
 +	return iter->next_index - iter->index;
++=======
+ 	return (iter->next_index - iter->index) >> iter_shift(iter);
+ }
+ 
+ static inline void *indirect_to_ptr(void *ptr)
+ {
+ 	return (void *)((unsigned long)ptr & ~RADIX_TREE_INTERNAL_NODE);
++>>>>>>> 30ff46ccb303 (radix-tree: rename INDIRECT_PTR to INTERNAL_NODE)
  }
  
  /**
* Unmerged path include/linux/radix-tree.h
diff --git a/lib/radix-tree.c b/lib/radix-tree.c
index 467d6e0a3a58..f7a338791f94 100644
--- a/lib/radix-tree.c
+++ b/lib/radix-tree.c
@@ -72,7 +72,7 @@ static DEFINE_PER_CPU(struct radix_tree_preload, radix_tree_preloads) = { 0, };
 
 static inline void *ptr_to_indirect(void *ptr)
 {
-	return (void *)((unsigned long)ptr | RADIX_TREE_INDIRECT_PTR);
+	return (void *)((unsigned long)ptr | RADIX_TREE_INTERNAL_NODE);
 }
 
 static inline void *indirect_to_ptr(void *ptr)
