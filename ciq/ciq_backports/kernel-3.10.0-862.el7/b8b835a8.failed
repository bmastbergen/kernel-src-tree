netvsc: group all per-channel state together

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author stephen hemminger <stephen@networkplumber.org>
commit b8b835a89b2f7a7fe681983dfe5c489cb9ad9500
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/b8b835a8.failed

Put all the per-channel state together in one data struct.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b8b835a89b2f7a7fe681983dfe5c489cb9ad9500)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/hyperv_net.h
#	drivers/net/hyperv/netvsc.c
#	drivers/net/hyperv/rndis_filter.c
diff --cc drivers/net/hyperv/hyperv_net.h
index 9dd0bf9e300e,fb73caad0965..000000000000
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@@ -755,12 -763,6 +761,15 @@@ struct netvsc_device 
  
  	int ring_size;
  
++<<<<<<< HEAD
 +	/* The primary channel callback buffer */
 +	unsigned char *cb_buffer;
 +	/* The sub channel callback buffer */
 +	unsigned char *sub_cb_buf;
 +
 +	struct multi_send_data msd[VRSS_CHANNEL_MAX];
++=======
++>>>>>>> b8b835a89b2f (netvsc: group all per-channel state together)
  	u32 max_pkt; /* max number of pkt in one send, e.g. 8 */
  	u32 pkt_align; /* alignment bytes, e.g. 8 */
  
diff --cc drivers/net/hyperv/netvsc.c
index cb389c806d3e,4dd2a1f2da11..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -67,14 -67,8 +67,19 @@@ static struct netvsc_device *alloc_net_
  	if (!net_device)
  		return NULL;
  
++<<<<<<< HEAD
 +	net_device->cb_buffer = kzalloc(NETVSC_PACKET_SIZE, GFP_KERNEL);
 +	if (!net_device->cb_buffer) {
 +		kfree(net_device);
 +		return NULL;
 +	}
 +
 +	net_device->mrc[0].buf = vzalloc(NETVSC_RECVSLOT_MAX *
 +					 sizeof(struct recv_comp_data));
++=======
+ 	net_device->chan_table[0].mrc.buf
+ 		= vzalloc(NETVSC_RECVSLOT_MAX * sizeof(struct recv_comp_data));
++>>>>>>> b8b835a89b2f (netvsc: group all per-channel state together)
  
  	init_waitqueue_head(&net_device->wait_drain);
  	net_device->destroy = false;
@@@ -91,9 -85,8 +96,9 @@@ static void free_netvsc_device(struct n
  	int i;
  
  	for (i = 0; i < VRSS_CHANNEL_MAX; i++)
- 		vfree(nvdev->mrc[i].buf);
+ 		vfree(nvdev->chan_table[i].mrc.buf);
  
 +	kfree(nvdev->cb_buffer);
  	kfree(nvdev);
  }
  
diff --cc drivers/net/hyperv/rndis_filter.c
index 00a45f0e3fe0,0df02c9808e8..000000000000
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@@ -946,11 -1012,8 +946,16 @@@ static void netvsc_sc_open(struct vmbus
  	if (chn_index >= nvscdev->num_chn)
  		return;
  
++<<<<<<< HEAD
 +	set_per_channel_state(new_sc, nvscdev->sub_cb_buf + (chn_index - 1) *
 +			      NETVSC_PACKET_SIZE);
 +
 +	nvscdev->mrc[chn_index].buf = vzalloc(NETVSC_RECVSLOT_MAX *
 +					      sizeof(struct recv_comp_data));
++=======
+ 	nvscdev->chan_table[chn_index].mrc.buf
+ 		= vzalloc(NETVSC_RECVSLOT_MAX * sizeof(struct recv_comp_data));
++>>>>>>> b8b835a89b2f (netvsc: group all per-channel state together)
  
  	ret = vmbus_open(new_sc, nvscdev->ring_size * PAGE_SIZE,
  			 nvscdev->ring_size * PAGE_SIZE, NULL, 0,
* Unmerged path drivers/net/hyperv/hyperv_net.h
* Unmerged path drivers/net/hyperv/netvsc.c
diff --git a/drivers/net/hyperv/netvsc_drv.c b/drivers/net/hyperv/netvsc_drv.c
index c7884ce02c4d..1ae0d5ea9383 100644
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@ -146,7 +146,7 @@ static int netvsc_close(struct net_device *net)
 	while (true) {
 		aread = 0;
 		for (i = 0; i < nvdev->num_chn; i++) {
-			chn = nvdev->chn_table[i];
+			chn = nvdev->chan_table[i].channel;
 			if (!chn)
 				continue;
 
@@ -236,7 +236,7 @@ static u16 netvsc_select_queue(struct net_device *ndev, struct sk_buff *skb,
 		q_idx = new_idx;
 	}
 
-	if (unlikely(!nvsc_dev->chn_table[q_idx]))
+	if (unlikely(!nvsc_dev->chan_table[q_idx].channel))
 		q_idx = 0;
 
 	return q_idx;
@@ -561,7 +561,6 @@ no_memory:
 	++net_device_ctx->eth_stats.tx_no_memory;
 	goto drop;
 }
-
 /*
  * netvsc_linkstatus_callback - Link up/down notification
  */
* Unmerged path drivers/net/hyperv/rndis_filter.c
