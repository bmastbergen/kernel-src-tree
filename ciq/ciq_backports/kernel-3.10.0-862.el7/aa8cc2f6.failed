perf tools: Replace STR() calls with __stringify()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit aa8cc2f6b5faae3511ea229846d8e54bd8df40d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/aa8cc2f6.failed

Both do the same thing, the later is the one we get from
linux/stringify.h, i.e. we now use the same function name/practice as
the kernel sources.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-w2sxa5o4bfx7fjrd5mu4zmke@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit aa8cc2f6b5faae3511ea229846d8e54bd8df40d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/arch/arm64/util/dwarf-regs.c
#	tools/perf/util/cgroup.c
diff --cc tools/perf/arch/arm64/util/dwarf-regs.c
index d49efeb8172e,aea610c292e6..000000000000
--- a/tools/perf/arch/arm64/util/dwarf-regs.c
+++ b/tools/perf/arch/arm64/util/dwarf-regs.c
@@@ -10,17 -10,21 +10,23 @@@
  
  #include <stddef.h>
  #include <dwarf-regs.h>
++<<<<<<< HEAD
++=======
+ #include <linux/ptrace.h> /* for struct user_pt_regs */
+ #include <linux/stringify.h>
+ #include "util.h"
++>>>>>>> aa8cc2f6b5fa (perf tools: Replace STR() calls with __stringify())
  
  struct pt_regs_dwarfnum {
  	const char *name;
  	unsigned int dwarfnum;
  };
  
 +#define STR(s) #s
  #define REG_DWARFNUM_NAME(r, num) {.name = r, .dwarfnum = num}
  #define GPR_DWARFNUM_NAME(num) \
- 	{.name = STR(%x##num), .dwarfnum = num}
+ 	{.name = __stringify(%x##num), .dwarfnum = num}
  #define REG_DWARFNUM_END {.name = NULL, .dwarfnum = 0}
 -#define DWARFNUM2OFFSET(index) \
 -	(index * sizeof((struct user_pt_regs *)0)->regs[0])
  
  /*
   * Reference:
diff --cc tools/perf/util/cgroup.c
index 87b9659c3f9f,03347748f3fa..000000000000
--- a/tools/perf/util/cgroup.c
+++ b/tools/perf/util/cgroup.c
@@@ -24,11 -25,14 +25,19 @@@ cgroupfs_find_mountpoint(char *buf, siz
  	 * and inspect every cgroupfs mount point to find one that has
  	 * perf_event subsystem
  	 */
++<<<<<<< HEAD
 +	while (fscanf(fp, "%*s %"STR(PATH_MAX)"s %"STR(PATH_MAX)"s %"
 +				STR(PATH_MAX)"s %*d %*d\n",
++=======
+ 	path_v1[0] = '\0';
+ 	path_v2[0] = '\0';
+ 
+ 	while (fscanf(fp, "%*s %"__stringify(PATH_MAX)"s %"__stringify(PATH_MAX)"s %"
+ 				__stringify(PATH_MAX)"s %*d %*d\n",
++>>>>>>> aa8cc2f6b5fa (perf tools: Replace STR() calls with __stringify())
  				mountpoint, type, tokens) == 3) {
  
 -		if (!path_v1[0] && !strcmp(type, "cgroup")) {
 +		if (!strcmp(type, "cgroup")) {
  
  			token = strtok_r(tokens, ",", &saved_ptr);
  
diff --git a/tools/perf/arch/arm/util/dwarf-regs.c b/tools/perf/arch/arm/util/dwarf-regs.c
index 33ec5b339da8..8bb176a37990 100644
--- a/tools/perf/arch/arm/util/dwarf-regs.c
+++ b/tools/perf/arch/arm/util/dwarf-regs.c
@@ -9,6 +9,7 @@
  */
 
 #include <stddef.h>
+#include <linux/stringify.h>
 #include <dwarf-regs.h>
 
 struct pt_regs_dwarfnum {
@@ -16,10 +17,9 @@ struct pt_regs_dwarfnum {
 	unsigned int dwarfnum;
 };
 
-#define STR(s) #s
 #define REG_DWARFNUM_NAME(r, num) {.name = r, .dwarfnum = num}
 #define GPR_DWARFNUM_NAME(num) \
-	{.name = STR(%r##num), .dwarfnum = num}
+	{.name = __stringify(%r##num), .dwarfnum = num}
 #define REG_DWARFNUM_END {.name = NULL, .dwarfnum = 0}
 
 /*
* Unmerged path tools/perf/arch/arm64/util/dwarf-regs.c
diff --git a/tools/perf/arch/powerpc/util/dwarf-regs.c b/tools/perf/arch/powerpc/util/dwarf-regs.c
index 41bdf9530d82..98ac87052a74 100644
--- a/tools/perf/arch/powerpc/util/dwarf-regs.c
+++ b/tools/perf/arch/powerpc/util/dwarf-regs.c
@@ -15,6 +15,7 @@
 #include <dwarf-regs.h>
 #include <linux/ptrace.h>
 #include <linux/kernel.h>
+#include <linux/stringify.h>
 #include "util.h"
 
 struct pt_regs_dwarfnum {
@@ -24,10 +25,10 @@ struct pt_regs_dwarfnum {
 };
 
 #define REG_DWARFNUM_NAME(r, num)					\
-		{.name = STR(%)STR(r), .dwarfnum = num,			\
+		{.name = __stringify(%)__stringify(r), .dwarfnum = num,			\
 		.ptregs_offset = offsetof(struct pt_regs, r)}
 #define GPR_DWARFNUM_NAME(num)						\
-		{.name = STR(%gpr##num), .dwarfnum = num,		\
+		{.name = __stringify(%gpr##num), .dwarfnum = num,		\
 		.ptregs_offset = offsetof(struct pt_regs, gpr[num])}
 #define REG_DWARFNUM_END {.name = NULL, .dwarfnum = 0, .ptregs_offset = 0}
 
* Unmerged path tools/perf/util/cgroup.c
diff --git a/tools/perf/util/jitdump.c b/tools/perf/util/jitdump.c
index 5562c1dced58..fe46e4bdc781 100644
--- a/tools/perf/util/jitdump.c
+++ b/tools/perf/util/jitdump.c
@@ -9,6 +9,7 @@
 #include <byteswap.h>
 #include <sys/stat.h>
 #include <sys/mman.h>
+#include <linux/stringify.h>
 
 #include "util.h"
 #include "event.h"
@@ -190,7 +191,7 @@ jit_open(struct jit_buf_desc *jd, const char *name)
 			jd->use_arch_timestamp);
 
 	if (header.version > JITHEADER_VERSION) {
-		pr_err("wrong jitdump version %u, expected " STR(JITHEADER_VERSION),
+		pr_err("wrong jitdump version %u, expected " __stringify(JITHEADER_VERSION),
 			header.version);
 		goto error;
 	}
diff --git a/tools/perf/util/util.h b/tools/perf/util/util.h
index dc25ed819d4d..18ece12f9f19 100644
--- a/tools/perf/util/util.h
+++ b/tools/perf/util/util.h
@@ -180,9 +180,6 @@ struct perf_event_attr;
 
 void event_attr_init(struct perf_event_attr *attr);
 
-#define _STR(x) #x
-#define STR(x) _STR(x)
-
 size_t hex_width(u64 v);
 int hex2u64(const char *ptr, u64 *val);
 
