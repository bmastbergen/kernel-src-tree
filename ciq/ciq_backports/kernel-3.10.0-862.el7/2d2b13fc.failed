geneve/vxlan: add support for NETDEV_UDP_TUNNEL_DROP_INFO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Sabrina Dubroca <sd@queasysnail.net>
commit 2d2b13fcfff101daa5388c5edac0ae5e3bcc6878
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2d2b13fc.failed

	Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2d2b13fcfff101daa5388c5edac0ae5e3bcc6878)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/geneve.c
#	drivers/net/vxlan.c
diff --cc drivers/net/geneve.c
index c4c93ccffa85,74545ecb9431..000000000000
--- a/drivers/net/geneve.c
+++ b/drivers/net/geneve.c
@@@ -1144,11 -1012,11 +1144,11 @@@ static struct device_type geneve_type 
  	.name = "geneve",
  };
  
 -/* Calls the ndo_udp_tunnel_add of the caller in order to
 +/* Calls the ndo_add_udp_enc_port of the caller in order to
   * supply the listening GENEVE udp ports. Callers are expected
 - * to implement the ndo_udp_tunnel_add.
 + * to implement the ndo_add_udp_enc_port.
   */
- static void geneve_push_rx_ports(struct net_device *dev)
+ static void geneve_offload_rx_ports(struct net_device *dev, bool push)
  {
  	struct net *net = dev_net(dev);
  	struct geneve_net *gn = net_generic(net, geneve_net_id);
@@@ -1520,9 -1566,9 +1526,15 @@@ static int geneve_netdevice_event(struc
  {
  	struct net_device *dev = netdev_notifier_info_to_dev(ptr);
  
++<<<<<<< HEAD
 +	if (event == NETDEV_OFFLOAD_PUSH_GENEVE ||
 +	    event == NETDEV_UDP_TUNNEL_PUSH_INFO)
 +		geneve_push_rx_ports(dev);
++=======
+ 	if (event == NETDEV_UDP_TUNNEL_PUSH_INFO ||
+ 	    event == NETDEV_UDP_TUNNEL_DROP_INFO)
+ 		geneve_offload_rx_ports(dev, event == NETDEV_UDP_TUNNEL_PUSH_INFO);
++>>>>>>> 2d2b13fcfff1 (geneve/vxlan: add support for NETDEV_UDP_TUNNEL_DROP_INFO)
  
  	return NOTIFY_DONE;
  }
diff --cc drivers/net/vxlan.c
index 740e6d79f5f2,4642d5be2fa0..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -2492,11 -2604,11 +2492,11 @@@ static struct device_type vxlan_type = 
  	.name = "vxlan",
  };
  
 -/* Calls the ndo_udp_tunnel_add of the caller in order to
 +/* Calls the ndo_add_udp_enc_port of the caller in order to
   * supply the listening VXLAN udp ports. Callers are expected
 - * to implement the ndo_udp_tunnel_add.
 + * to implement the ndo_add_udp_enc_port.
   */
- static void vxlan_push_rx_ports(struct net_device *dev)
+ static void vxlan_offload_rx_ports(struct net_device *dev, bool push)
  {
  	struct vxlan_sock *vs;
  	struct net *net = dev_net(dev);
@@@ -3263,9 -3640,9 +3271,15 @@@ static int vxlan_netdevice_event(struc
  
  	if (event == NETDEV_UNREGISTER)
  		vxlan_handle_lowerdev_unregister(vn, dev);
++<<<<<<< HEAD
 +	else if (event == NETDEV_OFFLOAD_PUSH_VXLAN ||
 +		 event == NETDEV_UDP_TUNNEL_PUSH_INFO)
 +		vxlan_push_rx_ports(dev);
++=======
+ 	else if (event == NETDEV_UDP_TUNNEL_PUSH_INFO ||
+ 		 event == NETDEV_UDP_TUNNEL_DROP_INFO)
+ 		vxlan_offload_rx_ports(dev, event == NETDEV_UDP_TUNNEL_PUSH_INFO);
++>>>>>>> 2d2b13fcfff1 (geneve/vxlan: add support for NETDEV_UDP_TUNNEL_DROP_INFO)
  
  	return NOTIFY_DONE;
  }
* Unmerged path drivers/net/geneve.c
* Unmerged path drivers/net/vxlan.c
