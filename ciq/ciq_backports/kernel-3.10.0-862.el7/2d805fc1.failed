mailbox: Fix up error handling in mbox_request_channel()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [mailbox] Fix up error handling in mbox_request_channel() (Prarit Bhargava) [1465349]
Rebuild_FUZZ: 91.26%
commit-author Benson Leung <bleung@chromium.org>
commit 2d805fc1c6b2ec09f27bcd951c2aee3da919f81a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2d805fc1.failed

mbox_request_channel() currently returns EBUSY in the event the controller
is not present or if of_xlate() fails, but in neither case is EBUSY really
appropriate.  Return EPROBE_DEFER if the controller is not yet present
and change of_xlate() to return an ERR_PTR instead of NULL so that the
error can be propagated back to the caller of mbox_request_channel().

	Signed-off-by: Benson Leung <bleung@chromium.org>
	Signed-off-by: Andrew Bresticker <abrestic@chromium.org>
	Acked-by: Suman Anna <s-anna@ti.com>
	Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
	Tested-by: Jon Hunter <jonathanh@nvidia.com>
	Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
(cherry picked from commit 2d805fc1c6b2ec09f27bcd951c2aee3da919f81a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mailbox/omap-mailbox.c
* Unmerged path drivers/mailbox/omap-mailbox.c
diff --git a/drivers/mailbox/mailbox.c b/drivers/mailbox/mailbox.c
index 4f56acfe337b..1067d9df5b90 100644
--- a/drivers/mailbox/mailbox.c
+++ b/drivers/mailbox/mailbox.c
@@ -320,7 +320,7 @@ struct mbox_chan *mbox_request_channel(struct mbox_client *cl, int index)
 		return ERR_PTR(-ENODEV);
 	}
 
-	chan = NULL;
+	chan = ERR_PTR(-EPROBE_DEFER);
 	list_for_each_entry(mbox, &mbox_cons, node)
 		if (mbox->dev->of_node == spec.np) {
 			chan = mbox->of_xlate(mbox, &spec);
@@ -329,7 +329,12 @@ struct mbox_chan *mbox_request_channel(struct mbox_client *cl, int index)
 
 	of_node_put(spec.np);
 
-	if (!chan || chan->cl || !try_module_get(mbox->dev->driver->owner)) {
+	if (IS_ERR(chan)) {
+		mutex_unlock(&con_mutex);
+		return chan;
+	}
+
+	if (chan->cl || !try_module_get(mbox->dev->driver->owner)) {
 		dev_dbg(dev, "%s: mailbox not free\n", __func__);
 		mutex_unlock(&con_mutex);
 		return ERR_PTR(-EBUSY);
@@ -392,7 +397,7 @@ of_mbox_index_xlate(struct mbox_controller *mbox,
 	int ind = sp->args[0];
 
 	if (ind >= mbox->num_chans)
-		return NULL;
+		return ERR_PTR(-EINVAL);
 
 	return &mbox->chans[ind];
 }
* Unmerged path drivers/mailbox/omap-mailbox.c
