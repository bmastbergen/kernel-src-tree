qed: iWARP CM add listener functions and initial SYN processing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Kalderon, Michal <Michal.Kalderon@cavium.com>
commit 65a91a6cdb868a28b919ca133c0f9d9dfd9a635a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/65a91a6c.failed

This patch adds the ability to add and remove listeners and identify
whether the SYN packet received is intended for iWARP or not. If
a listener is not found the SYN packet is posted back to the chip.

	Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
	Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
	Signed-off-by: Ariel Elior <Ariel.Elior@cavium.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 65a91a6cdb868a28b919ca133c0f9d9dfd9a635a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_iwarp.c
#	drivers/net/ethernet/qlogic/qed/qed_iwarp.h
#	include/linux/qed/qed_roce_if.h
diff --cc include/linux/qed/qed_roce_if.h
index cbb2ff0ce4bc,28df5688ad0c..000000000000
--- a/include/linux/qed/qed_roce_if.h
+++ b/include/linux/qed/qed_roce_if.h
@@@ -585,20 -595,39 +631,55 @@@ struct qed_rdma_ops 
  	int (*rdma_deregister_tid)(void *rdma_cxt, u32 itid);
  	int (*rdma_alloc_tid)(void *rdma_cxt, u32 *itid);
  	void (*rdma_free_tid)(void *rdma_cxt, u32 itid);
++<<<<<<< HEAD:include/linux/qed/qed_roce_if.h
 +	int (*roce_ll2_start)(struct qed_dev *cdev,
 +			      struct qed_roce_ll2_params *params);
 +	int (*roce_ll2_stop)(struct qed_dev *cdev);
 +	int (*roce_ll2_tx)(struct qed_dev *cdev,
 +			   struct qed_roce_ll2_packet *packet,
 +			   struct qed_roce_ll2_tx_params *params);
 +	int (*roce_ll2_post_rx_buffer)(struct qed_dev *cdev,
 +				       struct qed_roce_ll2_buffer *buf,
 +				       u64 cookie, u8 notify_fw);
 +	int (*roce_ll2_set_mac_filter)(struct qed_dev *cdev,
 +				       u8 *old_mac_address,
 +				       u8 *new_mac_address);
 +	int (*roce_ll2_stats)(struct qed_dev *cdev,
 +			      struct qed_ll2_stats *stats);
++=======
+ 
+ 	int (*ll2_acquire_connection)(void *rdma_cxt,
+ 				      struct qed_ll2_acquire_data *data);
+ 
+ 	int (*ll2_establish_connection)(void *rdma_cxt, u8 connection_handle);
+ 	int (*ll2_terminate_connection)(void *rdma_cxt, u8 connection_handle);
+ 	void (*ll2_release_connection)(void *rdma_cxt, u8 connection_handle);
+ 
+ 	int (*ll2_prepare_tx_packet)(void *rdma_cxt,
+ 				     u8 connection_handle,
+ 				     struct qed_ll2_tx_pkt_info *pkt,
+ 				     bool notify_fw);
+ 
+ 	int (*ll2_set_fragment_of_tx_packet)(void *rdma_cxt,
+ 					     u8 connection_handle,
+ 					     dma_addr_t addr,
+ 					     u16 nbytes);
+ 	int (*ll2_post_rx_buffer)(void *rdma_cxt, u8 connection_handle,
+ 				  dma_addr_t addr, u16 buf_len, void *cookie,
+ 				  u8 notify_fw);
+ 	int (*ll2_get_stats)(void *rdma_cxt,
+ 			     u8 connection_handle,
+ 			     struct qed_ll2_stats *p_stats);
+ 	int (*ll2_set_mac_filter)(struct qed_dev *cdev,
+ 				  u8 *old_mac_address, u8 *new_mac_address);
+ 
+ 	int (*iwarp_create_listen)(void *rdma_cxt,
+ 				   struct qed_iwarp_listen_in *iparams,
+ 				   struct qed_iwarp_listen_out *oparams);
+ 
+ 	int (*iwarp_destroy_listen)(void *rdma_cxt, void *handle);
+ 
++>>>>>>> 65a91a6cdb86 (qed: iWARP CM add listener functions and initial SYN processing):include/linux/qed/qed_rdma_if.h
  };
  
  const struct qed_rdma_ops *qed_get_rdma_ops(void);
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_iwarp.c
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_iwarp.h
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_iwarp.c
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_iwarp.h
diff --git a/drivers/net/ethernet/qlogic/qed/qed_rdma.c b/drivers/net/ethernet/qlogic/qed/qed_rdma.c
index 9dc41a899ef2..4242bb3bffcc 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_rdma.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_rdma.c
@@ -2796,6 +2796,8 @@ static const struct qed_rdma_ops qed_rdma_ops_pass = {
 	.ll2_set_fragment_of_tx_packet = &qed_ll2_set_fragment_of_tx_packet,
 	.ll2_set_mac_filter = &qed_roce_ll2_set_mac_filter,
 	.ll2_get_stats = &qed_ll2_get_stats,
+	.iwarp_create_listen = &qed_iwarp_create_listen,
+	.iwarp_destroy_listen = &qed_iwarp_destroy_listen,
 };
 
 const struct qed_rdma_ops *qed_get_rdma_ops(void)
* Unmerged path include/linux/qed/qed_roce_if.h
