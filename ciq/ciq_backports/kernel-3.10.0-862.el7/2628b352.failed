tcm_loop: Show address of tpg in configfs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Sheng Yang <sheng@yasker.org>
commit 2628b352c3d4905adf8129ea50900bd980b6ccef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2628b352.failed

In the past, the scsi_host's number wasn't shown anywhere, user have
to depends on vpg_83 to find the block device, which is also depends
on backstore implementation.

It's better for tcm_loop to provide necessary straightforward
information on locate the block device it created.

This patch would help to locate the block device created by tcm_loop.
The address would be shown at e.g.

  /sys/kernel/config/target/loopback/naa.60014059436855c1/tpgt_1/address

which would looks like "2:0:1", and the lun number can be found at
"/tpgt_1/lun/lun_0".  Altogether they formated the scsi address of
device as "2:0:1:0", which can be used to locate the device easily
through 'lsscsi'.

(Update to >= v4.4-rc1 configfs attribute usage - nab)

	Signed-off-by: Sheng Yang <sheng@yasker.org>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 2628b352c3d4905adf8129ea50900bd980b6ccef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/loopback/tcm_loop.c
diff --cc drivers/target/loopback/tcm_loop.c
index 9f83e2336f48,d41a5c300e31..000000000000
--- a/drivers/target/loopback/tcm_loop.c
+++ b/drivers/target/loopback/tcm_loop.c
@@@ -1222,11 -1036,26 +1222,34 @@@ static ssize_t tcm_loop_tpg_store_trans
  	return -EINVAL;
  }
  
++<<<<<<< HEAD
 +TF_TPG_BASE_ATTR(tcm_loop, transport_status, S_IRUGO | S_IWUSR);
 +
 +static struct configfs_attribute *tcm_loop_tpg_attrs[] = {
 +	&tcm_loop_tpg_nexus.attr,
 +	&tcm_loop_tpg_transport_status.attr,
++=======
+ static ssize_t tcm_loop_tpg_address_show(struct config_item *item,
+ 					 char *page)
+ {
+ 	struct se_portal_group *se_tpg = to_tpg(item);
+ 	struct tcm_loop_tpg *tl_tpg = container_of(se_tpg,
+ 			struct tcm_loop_tpg, tl_se_tpg);
+ 	struct tcm_loop_hba *tl_hba = tl_tpg->tl_hba;
+ 
+ 	return snprintf(page, PAGE_SIZE, "%d:0:%d\n",
+ 			tl_hba->sh->host_no, tl_tpg->tl_tpgt);
+ }
+ 
+ CONFIGFS_ATTR(tcm_loop_tpg_, nexus);
+ CONFIGFS_ATTR(tcm_loop_tpg_, transport_status);
+ CONFIGFS_ATTR_RO(tcm_loop_tpg_, address);
+ 
+ static struct configfs_attribute *tcm_loop_tpg_attrs[] = {
+ 	&tcm_loop_tpg_attr_nexus,
+ 	&tcm_loop_tpg_attr_transport_status,
+ 	&tcm_loop_tpg_attr_address,
++>>>>>>> 2628b352c3d4 (tcm_loop: Show address of tpg in configfs)
  	NULL,
  };
  
* Unmerged path drivers/target/loopback/tcm_loop.c
