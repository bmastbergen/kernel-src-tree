s390: query dynamic DEBUG_PAGEALLOC setting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Christian Borntraeger <borntraeger@de.ibm.com>
commit 10917b8393521b608f26294b3815261d472f7e9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/10917b83.failed

We can use debug_pagealloc_enabled() to check if we can map the identity
mapping with 1MB/2GB pages as well as to print the current setting in
dump_stack.

	Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
	Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: David Rientjes <rientjes@google.com>
	Cc: Laura Abbott <labbott@fedoraproject.org>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 10917b8393521b608f26294b3815261d472f7e9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/mm/vmem.c
diff --cc arch/s390/mm/vmem.c
index c109b6bb46f8,d27fccbad7c1..000000000000
--- a/arch/s390/mm/vmem.c
+++ b/arch/s390/mm/vmem.c
@@@ -98,9 -94,9 +98,13 @@@ static int vmem_add_mem(unsigned long s
  			pgd_populate(&init_mm, pg_dir, pu_dir);
  		}
  		pu_dir = pud_offset(pg_dir, address);
++<<<<<<< HEAD
 +#if defined(CONFIG_64BIT) && !defined(CONFIG_DEBUG_PAGEALLOC)
++=======
++>>>>>>> 10917b839352 (s390: query dynamic DEBUG_PAGEALLOC setting)
  		if (MACHINE_HAS_EDAT2 && pud_none(*pu_dir) && address &&
- 		    !(address & ~PUD_MASK) && (address + PUD_SIZE <= end)) {
+ 		    !(address & ~PUD_MASK) && (address + PUD_SIZE <= end) &&
+ 		     !debug_pagealloc_enabled()) {
  			pud_val(*pu_dir) = __pa(address) |
  				_REGION_ENTRY_TYPE_R3 | _REGION3_ENTRY_LARGE |
  				(ro ? _REGION_ENTRY_PROTECT : 0);
@@@ -115,9 -110,9 +118,13 @@@
  			pud_populate(&init_mm, pu_dir, pm_dir);
  		}
  		pm_dir = pmd_offset(pu_dir, address);
++<<<<<<< HEAD
 +#if defined(CONFIG_64BIT) && !defined(CONFIG_DEBUG_PAGEALLOC)
++=======
++>>>>>>> 10917b839352 (s390: query dynamic DEBUG_PAGEALLOC setting)
  		if (MACHINE_HAS_EDAT1 && pmd_none(*pm_dir) && address &&
- 		    !(address & ~PMD_MASK) && (address + PMD_SIZE <= end)) {
+ 		    !(address & ~PMD_MASK) && (address + PMD_SIZE <= end) &&
+ 		    !debug_pagealloc_enabled()) {
  			pmd_val(*pm_dir) = __pa(address) |
  				_SEGMENT_ENTRY | _SEGMENT_ENTRY_LARGE |
  				_SEGMENT_ENTRY_YOUNG |
diff --git a/arch/s390/kernel/dumpstack.c b/arch/s390/kernel/dumpstack.c
index 042626dd8e87..c4b9aeaef122 100644
--- a/arch/s390/kernel/dumpstack.c
+++ b/arch/s390/kernel/dumpstack.c
@@ -11,6 +11,7 @@
 #include <linux/export.h>
 #include <linux/kdebug.h>
 #include <linux/ptrace.h>
+#include <linux/mm.h>
 #include <linux/module.h>
 #include <linux/sched.h>
 #include <asm/processor.h>
@@ -198,9 +199,8 @@ void die(struct pt_regs *regs, const char *str)
 #ifdef CONFIG_SMP
 	printk("SMP ");
 #endif
-#ifdef CONFIG_DEBUG_PAGEALLOC
-	printk("DEBUG_PAGEALLOC");
-#endif
+	if (debug_pagealloc_enabled())
+		printk("DEBUG_PAGEALLOC");
 	printk("\n");
 	notify_die(DIE_OOPS, str, regs, 0, regs->int_code & 0xffff, SIGSEGV);
 	print_modules();
* Unmerged path arch/s390/mm/vmem.c
