scsi: lpfc: spin_lock_irq() is not nestable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] lpfc: spin_lock_irq() is not nestable (Dick Kennedy) [1385844 1461977 1387768]
Rebuild_FUZZ: 92.50%
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit c4031db72b4fd2640ff3a7240701397abaacf048
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/c4031db7.failed

We're calling spin_lock_irq() multiple times, the problem is that on the
first spin_unlock_irq() then we will re-enable IRQs and we don't want
that.

Fixes: 966bb5b71196 ("scsi: lpfc: Break up IO ctx list into a separate get and put list")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Acked-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit c4031db72b4fd2640ff3a7240701397abaacf048)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_nvmet.c
* Unmerged path drivers/scsi/lpfc/lpfc_nvmet.c
* Unmerged path drivers/scsi/lpfc/lpfc_nvmet.c
