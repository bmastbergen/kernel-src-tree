perf/x86: Convert perf_callchain_kernel() to use the new unwinder

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit 35f4d9b32527c08c3da3982aedae5198dc663ce8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/35f4d9b3.failed

Convert perf_callchain_kernel() to use the new unwinder.  dump_trace()
has been deprecated.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Byungchul Park <byungchul.park@lge.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Nilay Vaish <nilayvaish@gmail.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/a2df0c4f09b3d438e11b41681f10b0775a819a7f.1474045023.git.jpoimboe@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 35f4d9b32527c08c3da3982aedae5198dc663ce8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/core.c
diff --cc arch/x86/events/core.c
index 2b8e3be4ddc9,0a8bd7fcdbed..000000000000
--- a/arch/x86/events/core.c
+++ b/arch/x86/events/core.c
@@@ -2182,31 -2248,12 +2183,37 @@@ void arch_perf_update_userpage(struct p
  	cyc2ns_read_end(data);
  }
  
++<<<<<<< HEAD
 +/*
 + * callchain support
 + */
 +
 +static int backtrace_stack(void *data, char *name)
 +{
 +	return 0;
 +}
 +
 +static int backtrace_address(void *data, unsigned long addr, int reliable)
 +{
 +	struct perf_callchain_entry *entry = data;
 +
 +	return perf_callchain_store(entry, addr);
 +}
 +
 +static const struct stacktrace_ops backtrace_ops = {
 +	.stack			= backtrace_stack,
 +	.address		= backtrace_address,
 +	.walk_stack		= print_context_stack_bp,
 +};
 +
++=======
++>>>>>>> 35f4d9b32527 (perf/x86: Convert perf_callchain_kernel() to use the new unwinder)
  void
 -perf_callchain_kernel(struct perf_callchain_entry_ctx *entry, struct pt_regs *regs)
 +perf_callchain_kernel(struct perf_callchain_entry *entry, struct pt_regs *regs)
  {
+ 	struct unwind_state state;
+ 	unsigned long addr;
+ 
  	if (perf_guest_cbs && perf_guest_cbs->is_in_guest()) {
  		/* TODO: We don't support guest os callchain now */
  		return;
* Unmerged path arch/x86/events/core.c
