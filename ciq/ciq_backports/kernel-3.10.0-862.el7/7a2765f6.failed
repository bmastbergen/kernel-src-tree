dcssblk: add dax_operations support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 7a2765f6e82063f348ebce78c28eceff741689d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7a2765f6.failed

Setup a dax_dev to have the same lifetime as the dcssblk block device
and add a ->direct_access() method that is equivalent to
dcssblk_direct_access(). Once fs/dax.c has been converted to use
dax_operations the old dcssblk_direct_access() will be removed.

	Reported-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
	Acked-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 7a2765f6e82063f348ebce78c28eceff741689d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/block/dcssblk.c
diff --cc drivers/s390/block/dcssblk.c
index 9b09806c7f1c,dc84cfd4e438..000000000000
--- a/drivers/s390/block/dcssblk.c
+++ b/drivers/s390/block/dcssblk.c
@@@ -28,9 -29,12 +29,18 @@@
  
  static int dcssblk_open(struct block_device *bdev, fmode_t mode);
  static void dcssblk_release(struct gendisk *disk, fmode_t mode);
++<<<<<<< HEAD
 +static void dcssblk_make_request(struct request_queue *q, struct bio *bio);
 +static long dcssblk_direct_access(struct block_device *bdev, sector_t secnum,
 +			void **kaddr, pfn_t *pfn, long size);
++=======
+ static blk_qc_t dcssblk_make_request(struct request_queue *q,
+ 						struct bio *bio);
+ static long dcssblk_blk_direct_access(struct block_device *bdev, sector_t secnum,
+ 			 void **kaddr, pfn_t *pfn, long size);
+ static long dcssblk_dax_direct_access(struct dax_device *dax_dev, pgoff_t pgoff,
+ 		long nr_pages, void **kaddr, pfn_t *pfn);
++>>>>>>> 7a2765f6e820 (dcssblk: add dax_operations support)
  
  static char dcssblk_segments[DCSSBLK_PARM_LEN] = "\0";
  
@@@ -648,8 -664,15 +665,15 @@@ dcssblk_add_store(struct device *dev, s
  	if (rc)
  		goto put_dev;
  
+ 	dev_info->dax_dev = alloc_dax(dev_info, dev_info->gd->disk_name,
+ 			&dcssblk_dax_ops);
+ 	if (!dev_info->dax_dev) {
+ 		rc = -ENOMEM;
+ 		goto put_dev;
+ 	}
+ 
  	get_device(&dev_info->dev);
 -	device_add_disk(&dev_info->dev, dev_info->gd);
 +	add_disk(dev_info->gd);
  
  	switch (dev_info->segment_type) {
  		case SEG_TYPE_SR:
diff --git a/drivers/s390/block/Kconfig b/drivers/s390/block/Kconfig
index 4a3b62326183..0acb8c2f9475 100644
--- a/drivers/s390/block/Kconfig
+++ b/drivers/s390/block/Kconfig
@@ -14,6 +14,7 @@ config BLK_DEV_XPRAM
 
 config DCSSBLK
 	def_tristate m
+	select DAX
 	prompt "DCSSBLK support"
 	depends on S390 && BLOCK
 	help
* Unmerged path drivers/s390/block/dcssblk.c
