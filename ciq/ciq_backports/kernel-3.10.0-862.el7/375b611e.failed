sysfs: remove sysfs_buffer->ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Tejun Heo <tj@kernel.org>
commit 375b611e60f7c1ce6913417ca254efe5523f1a72
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/375b611e.failed

Currently, sysfs_ops is fetched during sysfs_open_file() and cached in
sysfs_buffer->ops to be used while the file is open.  This patch
removes the caching and makes each operation directly fetch sysfs_ops.

This patch doesn't introduce any behavior difference and is to prepare
for merging regular and bin file supports.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 375b611e60f7c1ce6913417ca254efe5523f1a72)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/sysfs/file.c
diff --cc fs/sysfs/file.c
index 3de7949b1b72,7dfcc3317490..000000000000
--- a/fs/sysfs/file.c
+++ b/fs/sysfs/file.c
@@@ -44,11 -44,8 +44,15 @@@ struct sysfs_open_dirent 
  
  struct sysfs_buffer {
  	size_t			count;
++<<<<<<< HEAD
 +	loff_t			pos;
 +	char			* page;
 +	const struct sysfs_ops	* ops;
++=======
+ 	char			*page;
++>>>>>>> 375b611e60f7 (sysfs: remove sysfs_buffer->ops)
  	struct mutex		mutex;
 +	int			needs_read_fill;
  	int			event;
  	struct list_head	list;
  };
@@@ -68,7 -77,7 +84,11 @@@ static int fill_read_buffer(struct dent
  {
  	struct sysfs_dirent *attr_sd = dentry->d_fsdata;
  	struct kobject *kobj = attr_sd->s_parent->s_dir.kobj;
++<<<<<<< HEAD
 +	const struct sysfs_ops * ops = buffer->ops;
++=======
+ 	const struct sysfs_ops *ops;
++>>>>>>> 375b611e60f7 (sysfs: remove sysfs_buffer->ops)
  	int ret = 0;
  	ssize_t count;
  
@@@ -190,7 -204,7 +212,11 @@@ flush_write_buffer(struct dentry * dent
  {
  	struct sysfs_dirent *attr_sd = dentry->d_fsdata;
  	struct kobject *kobj = attr_sd->s_parent->s_dir.kobj;
++<<<<<<< HEAD
 +	const struct sysfs_ops * ops = buffer->ops;
++=======
+ 	const struct sysfs_ops *ops;
++>>>>>>> 375b611e60f7 (sysfs: remove sysfs_buffer->ops)
  	int rc;
  
  	/* need attr_sd for attr and ops, its parent for kobj */
@@@ -370,8 -380,6 +393,11 @@@ static int sysfs_open_file(struct inod
  		goto err_out;
  
  	mutex_init(&buffer->mutex);
++<<<<<<< HEAD
 +	buffer->needs_read_fill = 1;
 +	buffer->ops = ops;
++=======
++>>>>>>> 375b611e60f7 (sysfs: remove sysfs_buffer->ops)
  	file->private_data = buffer;
  
  	/* make sure we have open dirent struct */
* Unmerged path fs/sysfs/file.c
