path_openat(): fix double fput()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit f15133df088ecadd141ea1907f2c96df67c729f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/f15133df.failed

path_openat() jumps to the wrong place after do_tmpfile() - it has
already done path_cleanup() (as part of path_lookupat() called by
do_tmpfile()), so doing that again can lead to double fput().

	Cc: stable@vger.kernel.org	# v3.11+
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit f15133df088ecadd141ea1907f2c96df67c729f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/namei.c
diff --cc fs/namei.c
index 01f0ff2e2d1f,fe30d3be43a8..000000000000
--- a/fs/namei.c
+++ b/fs/namei.c
@@@ -3255,12 -3231,12 +3255,19 @@@ static struct file *path_openat(int dfd
  
  	file->f_flags = op->open_flag;
  
++<<<<<<< HEAD
 +	error = path_init(dfd, pathname->name, flags | LOOKUP_PARENT, nd, &base);
 +	if (unlikely(error))
 +		goto out;
++=======
+ 	if (unlikely(file->f_flags & __O_TMPFILE)) {
+ 		error = do_tmpfile(dfd, pathname, nd, flags, op, file, &opened);
+ 		goto out2;
+ 	}
++>>>>>>> f15133df088e (path_openat(): fix double fput())
  
 -	error = path_init(dfd, pathname, flags, nd);
 +	current->total_link_count = 0;
 +	error = link_path_walk(pathname->name, nd);
  	if (unlikely(error))
  		goto out;
  
@@@ -3286,10 -3262,8 +3293,15 @@@
  		put_link(nd, &link, cookie);
  	}
  out:
++<<<<<<< HEAD
 +	if (nd->root.mnt && !(nd->flags & LOOKUP_ROOT))
 +		path_put(&nd->root);
 +	if (base)
 +		fput(base);
++=======
+ 	path_cleanup(nd);
+ out2:
++>>>>>>> f15133df088e (path_openat(): fix double fput())
  	if (!(opened & FILE_OPENED)) {
  		BUG_ON(!error);
  		put_filp(file);
* Unmerged path fs/namei.c
