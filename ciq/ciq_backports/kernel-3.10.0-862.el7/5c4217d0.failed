hv_netvsc: Simplify num_chn checking in rndis_filter_device_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit 5c4217d05d3258fa9999ad959c9b6da791b70bfa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5c4217d0.failed

The minus one and assignment to a local variable is not necessary.
This patch simplifies it.

	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5c4217d05d3258fa9999ad959c9b6da791b70bfa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/rndis_filter.c
diff --cc drivers/net/hyperv/rndis_filter.c
index b6bc44dd1f92,69c40b8fccc3..000000000000
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@@ -951,12 -1066,10 +951,17 @@@ int rndis_filter_device_add(struct hv_d
  	struct nvsp_message *init_packet;
  	struct ndis_recv_scale_cap rsscap;
  	u32 rsscap_size = sizeof(struct ndis_recv_scale_cap);
++<<<<<<< HEAD
 +	u32 mtu, size;
 +	u32 num_rss_qs;
 +	u32 sc_delta;
++=======
+ 	unsigned int gso_max_size = GSO_MAX_SIZE;
+ 	u32 mtu, size;
++>>>>>>> 5c4217d05d32 (hv_netvsc: Simplify num_chn checking in rndis_filter_device_add())
  	const struct cpumask *node_cpu_mask;
  	u32 num_possible_rss_qs;
 +	unsigned long flags;
  	int i, ret;
  
  	rndis_device = get_rndis_device();
@@@ -1070,17 -1214,18 +1075,24 @@@
  		rndis_device->ind_table[i] = ethtool_rxfh_indir_default(i,
  							net_device->num_chn);
  
++<<<<<<< HEAD
 +	net_device->num_sc_offered = num_rss_qs;
++=======
+ 	atomic_set(&net_device->open_chn, 1);
+ 
+ 	if (net_device->num_chn == 1)
+ 		return net_device;
++>>>>>>> 5c4217d05d32 (hv_netvsc: Simplify num_chn checking in rndis_filter_device_add())
  
 -	for (i = 1; i < net_device->num_chn; i++) {
 -		ret = netvsc_alloc_recv_comp_ring(net_device, i);
 -		if (ret) {
 -			while (--i != 0)
 -				vfree(net_device->chan_table[i].mrc.slots);
 -			goto out;
 -		}
 +	if (net_device->num_chn == 1)
 +		goto out;
 +
 +	net_device->sub_cb_buf = vzalloc((net_device->num_chn - 1) *
 +					 NETVSC_PACKET_SIZE);
 +	if (!net_device->sub_cb_buf) {
 +		net_device->num_chn = 1;
 +		dev_info(&dev->device, "No memory for subchannels.\n");
 +		goto out;
  	}
  
  	vmbus_set_sc_create_callback(dev->channel, netvsc_sc_open);
* Unmerged path drivers/net/hyperv/rndis_filter.c
