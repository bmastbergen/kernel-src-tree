iw_cxgb4: allocate wait object for each cq object

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Steve Wise <swise@opengridcomputing.com>
commit 13ce83174afaf4ceb4dddd7b7e421778ee4fcf5e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/13ce8317.failed

Remove the local stack allocated c4iw_wr_wait object in preparation for
correctly handling timeouts.

Also cleaned up some error path unwind logic to make it more readable.

	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 13ce83174afaf4ceb4dddd7b7e421778ee4fcf5e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/cq.c
diff --cc drivers/infiniband/hw/cxgb4/cq.c
index eb5e910786df,020216f5c37f..000000000000
--- a/drivers/infiniband/hw/cxgb4/cq.c
+++ b/drivers/infiniband/hw/cxgb4/cq.c
@@@ -146,8 -144,8 +146,13 @@@ static int create_cq(struct c4iw_rdev *
  	ret = c4iw_ofld_send(rdev, skb);
  	if (ret)
  		goto err4;
++<<<<<<< HEAD
 +	PDBG("%s wait_event wr_wait %p\n", __func__, &wr_wait);
 +	ret = c4iw_wait_for_reply(rdev, &wr_wait, 0, 0, __func__);
++=======
+ 	pr_debug("wait_event wr_wait %p\n", wr_waitp);
+ 	ret = c4iw_wait_for_reply(rdev, wr_waitp, 0, 0, __func__);
++>>>>>>> 13ce83174afa (iw_cxgb4: allocate wait object for each cq object)
  	if (ret)
  		goto err4;
  
@@@ -999,23 -1003,25 +1011,25 @@@ struct ib_cq *c4iw_create_cq(struct ib_
  		mm2->len = PAGE_SIZE;
  		insert_mmap(ucontext, mm2);
  	}
 -	pr_debug("cqid 0x%0x chp %p size %u memsize %zu, dma_addr 0x%0llx\n",
 -		 chp->cq.cqid, chp, chp->cq.size,
 -		 chp->cq.memsize, (unsigned long long)chp->cq.dma_addr);
 +	PDBG("%s cqid 0x%0x chp %p size %u memsize %zu, dma_addr 0x%0llx\n",
 +	     __func__, chp->cq.cqid, chp, chp->cq.size,
 +	     chp->cq.memsize, (unsigned long long) chp->cq.dma_addr);
  	return &chp->ibcq;
- err6:
+ err_free_mm2:
  	kfree(mm2);
- err5:
+ err_free_mm:
  	kfree(mm);
- err4:
+ err_remove_handle:
  	remove_handle(rhp, &rhp->cqidr, chp->cq.cqid);
- err3:
+ err_destroy_cq:
  	destroy_cq(&chp->rhp->rdev, &chp->cq,
  		   ucontext ? &ucontext->uctx : &rhp->rdev.uctx,
- 		   chp->destroy_skb);
- err2:
+ 		   chp->destroy_skb, chp->wr_waitp);
+ err_free_skb:
  	kfree_skb(chp->destroy_skb);
- err1:
+ err_free_wr_wait:
+ 	kfree(chp->wr_waitp);
+ err_free_chp:
  	kfree(chp);
  	return ERR_PTR(ret);
  }
* Unmerged path drivers/infiniband/hw/cxgb4/cq.c
diff --git a/drivers/infiniband/hw/cxgb4/iw_cxgb4.h b/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
index eb7973e70423..fcf5f02b2503 100644
--- a/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
+++ b/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
@@ -424,6 +424,7 @@ struct c4iw_cq {
 	spinlock_t comp_handler_lock;
 	atomic_t refcnt;
 	wait_queue_head_t wait;
+	struct c4iw_wr_wait *wr_waitp;
 };
 
 static inline struct c4iw_cq *to_c4iw_cq(struct ib_cq *ibcq)
