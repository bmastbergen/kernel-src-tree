net_sched: add rtnl assertion to tcf_exts_destroy()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Cong Wang <xiyou.wangcong@gmail.com>
commit 2d132eba1d972ea6c0e47286e4c821b4a3c5b84d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2d132eba.failed

After previous patches, it is now safe to claim that
tcf_exts_destroy() is always called with RTNL lock.

	Cc: Daniel Borkmann <daniel@iogearbox.net>
	Cc: Jiri Pirko <jiri@resnulli.us>
	Cc: John Fastabend <john.fastabend@gmail.com>
	Cc: Jamal Hadi Salim <jhs@mojatatu.com>
	Cc: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>
	Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2d132eba1d972ea6c0e47286e4c821b4a3c5b84d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_api.c
diff --cc net/sched/cls_api.c
index 1dc6d123ed94,231181c602ed..000000000000
--- a/net/sched/cls_api.c
+++ b/net/sched/cls_api.c
@@@ -548,8 -907,13 +548,18 @@@ out
  void tcf_exts_destroy(struct tcf_exts *exts)
  {
  #ifdef CONFIG_NET_CLS_ACT
++<<<<<<< HEAD
 +	tcf_action_destroy(&exts->actions, TCA_ACT_UNBIND);
 +	INIT_LIST_HEAD(&exts->actions);
++=======
+ 	LIST_HEAD(actions);
+ 
+ 	ASSERT_RTNL();
+ 	tcf_exts_to_list(exts, &actions);
+ 	tcf_action_destroy(&actions, TCA_ACT_UNBIND);
+ 	kfree(exts->actions);
+ 	exts->nr_actions = 0;
++>>>>>>> 2d132eba1d97 (net_sched: add rtnl assertion to tcf_exts_destroy())
  #endif
  }
  EXPORT_SYMBOL(tcf_exts_destroy);
* Unmerged path net/sched/cls_api.c
