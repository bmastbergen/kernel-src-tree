cpuset: make cs->{cpus, mems}_allowed as user-configured masks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Li Zefan <lizefan@huawei.com>
commit 7e88291beefbb758fa3b27e500ee2e0c888d6e44
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7e88291b.failed

Now we've used effective cpumasks to enforce hierarchical manner,
we can use cs->{cpus,mems}_allowed as configured masks.

Configured masks can be changed by writing cpuset.cpus and cpuset.mems
only. The new behaviors are:

- They won't be changed by hotplug anymore.
- They won't be limited by its parent's masks.

This ia a behavior change, but won't take effect unless mount with
sane_behavior.

v2:
- Add comments to explain the differences between configured masks and
effective masks.

	Signed-off-by: Li Zefan <lizefan@huawei.com>
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit 7e88291beefbb758fa3b27e500ee2e0c888d6e44)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cpuset.c
diff --cc kernel/cpuset.c
index 650413f2caa8,4b409d2ecbb9..000000000000
--- a/kernel/cpuset.c
+++ b/kernel/cpuset.c
@@@ -85,8 -76,34 +85,39 @@@ struct cpuset 
  	struct cgroup_subsys_state css;
  
  	unsigned long flags;		/* "unsigned long" so bitops work */
++<<<<<<< HEAD
 +	cpumask_var_t cpus_allowed;	/* CPUs allowed to tasks in cpuset */
 +	nodemask_t mems_allowed;	/* Memory Nodes allowed to tasks */
++=======
+ 
+ 	/*
+ 	 * On default hierarchy:
+ 	 *
+ 	 * The user-configured masks can only be changed by writing to
+ 	 * cpuset.cpus and cpuset.mems, and won't be limited by the
+ 	 * parent masks.
+ 	 *
+ 	 * The effective masks is the real masks that apply to the tasks
+ 	 * in the cpuset. They may be changed if the configured masks are
+ 	 * changed or hotplug happens.
+ 	 *
+ 	 * effective_mask == configured_mask & parent's effective_mask,
+ 	 * and if it ends up empty, it will inherit the parent's mask.
+ 	 *
+ 	 *
+ 	 * On legacy hierachy:
+ 	 *
+ 	 * The user-configured masks are always the same with effective masks.
+ 	 */
+ 
+ 	/* user-configured CPUs and Memory Nodes allow to tasks */
+ 	cpumask_var_t cpus_allowed;
+ 	nodemask_t mems_allowed;
+ 
+ 	/* effective CPUs and Memory Nodes allow to tasks */
+ 	cpumask_var_t effective_cpus;
+ 	nodemask_t effective_mems;
++>>>>>>> 7e88291beefb (cpuset: make cs->{cpus, mems}_allowed as user-configured masks)
  
  	/*
  	 * This is old Memory Nodes tasks took on.
@@@ -2204,10 -2211,11 +2237,11 @@@ static void cpuset_hotplug_workfn(struc
  	/* synchronize mems_allowed to N_MEMORY */
  	if (mems_updated) {
  		mutex_lock(&callback_mutex);
- 		top_cpuset.mems_allowed = new_mems;
+ 		if (!on_dfl)
+ 			top_cpuset.mems_allowed = new_mems;
  		top_cpuset.effective_mems = new_mems;
  		mutex_unlock(&callback_mutex);
 -		update_tasks_nodemask(&top_cpuset);
 +		update_tasks_nodemask(&top_cpuset, NULL);
  	}
  
  	mutex_unlock(&cpuset_mutex);
* Unmerged path kernel/cpuset.c
