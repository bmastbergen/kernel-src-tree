ALSA: hda - Implement mic-mute LED mode enum

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Takashi Iwai <tiwai@suse.de>
commit 62a939477173fabfe9f52114fab878a00b87f9a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/62a93947.failed

Dell laptops have another LED for mic-mute in addition to the master
mute.  The former is tied with the capture switch (in a reverse way)
while the latter is tied with the master playback switch.  We already
have an enum control to change the behavior for the master mute LED in
different ways, e.g. keeping always off or turning off at mute.  But,
the mic-mute LED has no such management but its behavior is
hard-coded.

This patch implements an enum control to change the mic-mute LED
behavior like what we have for the master mute LED.  The ctl provides
four modes: keep-on, keep-off, follow-capture and follow-mute.  The
default mode is the last one, follow-mute, which follows the capture
mute, i.e. LED turning on when the capture is off, and turning off
when the capture is active.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 62a939477173fabfe9f52114fab878a00b87f9a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/dell_wmi_helper.c
diff --cc sound/pci/hda/dell_wmi_helper.c
index 19d41da79f93,44b1e15682b9..000000000000
--- a/sound/pci/hda/dell_wmi_helper.c
+++ b/sound/pci/hda/dell_wmi_helper.c
@@@ -2,11 -2,20 +2,20 @@@
   * to be included from codec driver
   */
  
 -#if IS_ENABLED(CONFIG_DELL_LAPTOP)
 +#if IS_ENABLED(CONFIG_LEDS_DELL_NETBOOKS)
  #include <linux/dell-led.h>
  
+ enum {
+ 	MICMUTE_LED_ON,
+ 	MICMUTE_LED_OFF,
+ 	MICMUTE_LED_FOLLOW_CAPTURE,
+ 	MICMUTE_LED_FOLLOW_MUTE,
+ };
+ 
+ static int dell_led_mode = MICMUTE_LED_FOLLOW_MUTE;
+ static int dell_capture;
  static int dell_led_value;
 -static int (*dell_micmute_led_set_func)(int);
 +static int (*dell_led_set_func)(int, int);
  static void (*dell_old_cap_hook)(struct hda_codec *,
  			         struct snd_kcontrol *,
  				 struct snd_ctl_elem_value *);
@@@ -22,12 -57,9 +57,18 @@@ static void update_dell_wmi_micmute_led
  		return;
  	if (strcmp("Capture Switch", ucontrol->id.name) == 0 && ucontrol->id.index == 0) {
  		/* TODO: How do I verify if it's a mono or stereo here? */
++<<<<<<< HEAD
 +		int val = (ucontrol->value.integer.value[0] || ucontrol->value.integer.value[1]) ? 0 : 1;
 +		if (val == dell_led_value)
 +			return;
 +		dell_led_value = val;
 +		if (dell_led_set_func)
 +			dell_led_set_func(DELL_LED_MICMUTE, dell_led_value);
++=======
+ 		dell_capture = (ucontrol->value.integer.value[0] ||
+ 				ucontrol->value.integer.value[1]);
+ 		call_micmute_led_update();
++>>>>>>> 62a939477173 (ALSA: hda - Implement mic-mute LED mode enum)
  	}
  }
  
* Unmerged path sound/pci/hda/dell_wmi_helper.c
