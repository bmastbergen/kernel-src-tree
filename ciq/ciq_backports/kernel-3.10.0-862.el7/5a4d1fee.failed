net: sched: introduce helper to identify gact trap action

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [net] sched: introduce helper to identify gact trap action (Ivan Vecera) [1445420]
Rebuild_FUZZ: 95.41%
commit-author Jiri Pirko <jiri@mellanox.com>
commit 5a4d1fee2f844813cb2092b7a06b0e20ed9e2fa4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5a4d1fee.failed

Introduce a helper called is_tcf_gact_trap which could be used to
tell if the action is gact trap or not.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: Yotam Gigi <yotamg@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5a4d1fee2f844813cb2092b7a06b0e20ed9e2fa4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/tc_act/tc_gact.h
diff --cc include/net/tc_act/tc_gact.h
index 93c520b83d10,d576374c4d6f..000000000000
--- a/include/net/tc_act/tc_gact.h
+++ b/include/net/tc_act/tc_gact.h
@@@ -13,10 -13,9 +13,10 @@@ struct tcf_gact 
  	atomic_t		packets;
  #endif
  };
 -#define to_gact(a) ((struct tcf_gact *)a)
 +#define to_gact(a) \
 +	container_of(a->priv, struct tcf_gact, common)
  
- static inline bool is_tcf_gact_shot(const struct tc_action *a)
+ static inline bool __is_tcf_gact_act(const struct tc_action *a, int act)
  {
  #ifdef CONFIG_NET_CLS_ACT
  	struct tcf_gact *gact;
@@@ -24,8 -23,8 +24,13 @@@
  	if (a->ops && a->ops->type != TCA_ACT_GACT)
  		return false;
  
++<<<<<<< HEAD
 +	gact = a->priv;
 +	if (gact->tcf_action == TC_ACT_SHOT)
++=======
+ 	gact = to_gact(a);
+ 	if (gact->tcf_action == act)
++>>>>>>> 5a4d1fee2f84 (net: sched: introduce helper to identify gact trap action)
  		return true;
  
  #endif
* Unmerged path include/net/tc_act/tc_gact.h
