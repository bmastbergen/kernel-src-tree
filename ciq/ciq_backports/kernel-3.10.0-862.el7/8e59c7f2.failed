power_supply: Fix NULL pointer dereference during bq27x00_battery probe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Krzysztof Kozlowski <k.kozlowski@samsung.com>
commit 8e59c7f23410d5ca6b350a178b861a3d68c49edf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/8e59c7f2.failed

Power supply is often registered during probe of a driver. The
power_supply_register() returns pointer to newly allocated structure as
return value. However before returning the power_supply_register()
calls back the get_property() method provided by the driver through
uevent.

In that time the driver probe is still in progress and driver did not
assigned pointer to power supply to its local variables. This leads to
NULL pointer dereference from get_property() function.
Starting from bq27x00_battery_probe():
  di->bat = power_supply_register()
    device_add()
      kobject_uevent()
        power_supply_uevent()
          power_supply_show_property()
            power_supply_get_property()
              bq27x00_battery_get_property()
                dereference of (di->bat) which is NULL here

The first uevent of power supply (the one coming from device creation)
should not call back to the driver. To prevent that from happening,
increment the atomic use counter at the end of power_supply_register().
This means that power_supply_get_property() will return -ENODEV.

IMPORTANT:
The patch has impact on this first uevent sent from power supply because
it will not contain properties from power supply.

The uevent with properties will be sent later after indicating that
power supply has changed. This also has a race now, but will be fixed in
other patches.

	Reported-by: H. Nikolaus Schaller <hns@goldelico.com>
	Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
Fixes: 297d716f6260 ("power_supply: Change ownership from driver to core")
Tested-By: Dr. H. Nikolaus Schaller <hns@goldelico.com>
	Signed-off-by: Sebastian Reichel <sre@kernel.org>
(cherry picked from commit 8e59c7f23410d5ca6b350a178b861a3d68c49edf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/power/power_supply_core.c
diff --cc drivers/power/power_supply_core.c
index 0d8164e2f763,15da277e0e8d..000000000000
--- a/drivers/power/power_supply_core.c
+++ b/drivers/power/power_supply_core.c
@@@ -505,7 -658,17 +505,21 @@@ int __power_supply_register(struct devi
  	dev->parent = parent;
  	dev->release = power_supply_dev_release;
  	dev_set_drvdata(dev, psy);
++<<<<<<< HEAD
 +	psy->dev = dev;
++=======
+ 	psy->desc = desc;
+ 	if (cfg) {
+ 		psy->drv_data = cfg->drv_data;
+ 		psy->of_node = cfg->of_node;
+ 		psy->supplied_to = cfg->supplied_to;
+ 		psy->num_supplicants = cfg->num_supplicants;
+ 	}
+ 
+ 	rc = dev_set_name(dev, "%s", desc->name);
+ 	if (rc)
+ 		goto dev_set_name_failed;
++>>>>>>> 8e59c7f23410 (power_supply: Fix NULL pointer dereference during bq27x00_battery probe)
  
  	INIT_WORK(&psy->changed_work, power_supply_changed_work);
  
@@@ -540,9 -699,19 +554,19 @@@
  	if (rc)
  		goto create_triggers_failed;
  
+ 	/*
+ 	 * Update use_cnt after any uevents (most notably from device_add()).
+ 	 * We are here still during driver's probe but
+ 	 * the power_supply_uevent() calls back driver's get_property
+ 	 * method so:
+ 	 * 1. Driver did not assigned the returned struct power_supply,
+ 	 * 2. Driver could not finish initialization (anything in its probe
+ 	 *    after calling power_supply_register()).
+ 	 */
+ 	atomic_inc(&psy->use_cnt);
  	power_supply_changed(psy);
  
 -	return psy;
 +	goto success;
  
  create_triggers_failed:
  	psy_unregister_cooler(psy);
* Unmerged path drivers/power/power_supply_core.c
