xfs: various swapext cleanups

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Darrick J. Wong <darrick.wong@oracle.com>
commit e06259aa08fbc88c824130764c8667a8cc68c4d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/e06259aa.failed

Replace structure typedefs with struct expressions and fix some
whitespace issues that result.

	Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit e06259aa08fbc88c824130764c8667a8cc68c4d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_bmap_util.c
diff --cc fs/xfs/xfs_bmap_util.c
index e68409b0c53f,9481e5fc247a..000000000000
--- a/fs/xfs/xfs_bmap_util.c
+++ b/fs/xfs/xfs_bmap_util.c
@@@ -1533,21 -1651,26 +1533,40 @@@ xfs_swap_extent_flush
  
  int
  xfs_swap_extents(
- 	xfs_inode_t	*ip,	/* target inode */
- 	xfs_inode_t	*tip,	/* tmp inode */
- 	xfs_swapext_t	*sxp)
+ 	struct xfs_inode	*ip,	/* target inode */
+ 	struct xfs_inode	*tip,	/* tmp inode */
+ 	struct xfs_swapext	*sxp)
  {
++<<<<<<< HEAD
 +	xfs_mount_t	*mp = ip->i_mount;
 +	xfs_trans_t	*tp;
 +	xfs_bstat_t	*sbp = &sxp->sx_stat;
 +	xfs_ifork_t	*tempifp, *ifp, *tifp;
 +	int		src_log_flags, target_log_flags;
 +	int		error = 0;
 +	int		aforkblks = 0;
 +	int		taforkblks = 0;
 +	xfs_extnum_t	nextents;
 +	__uint64_t	tmp;
 +	int		lock_flags;
++=======
+ 	struct xfs_mount	*mp = ip->i_mount;
+ 	struct xfs_trans	*tp;
+ 	struct xfs_bstat	*sbp = &sxp->sx_stat;
+ 	struct xfs_ifork	*tempifp, *ifp, *tifp;
+ 	int			src_log_flags, target_log_flags;
+ 	int			error = 0;
+ 	int			aforkblks = 0;
+ 	int			taforkblks = 0;
+ 	__uint64_t		tmp;
+ 	int			lock_flags;
+ 	struct xfs_ifork	*cowfp;
+ 	__uint64_t		f;
+ 
+ 	/* XXX: we can't do this with rmap, will fix later */
+ 	if (xfs_sb_version_hasrmapbt(&mp->m_sb))
+ 		return -EOPNOTSUPP;
++>>>>>>> e06259aa08fb (xfs: various swapext cleanups)
  
  	tempifp = kmem_alloc(sizeof(xfs_ifork_t), KM_MAYFAIL);
  	if (!tempifp) {
* Unmerged path fs/xfs/xfs_bmap_util.c
