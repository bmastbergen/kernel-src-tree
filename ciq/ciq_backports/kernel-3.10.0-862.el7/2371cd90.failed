scsi: storvsc: remove unnecessary channel inbound lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] storvsc: remove unnecessary channel inbound lock (Cathy Avery) [1469095]
Rebuild_FUZZ: 94.12%
commit-author Stephen Hemminger <stephen@networkplumber.org>
commit 2371cd90abe3fa1b88e15111abf2cc0a26db6e52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2371cd90.failed

In storvsc driver, inbound messages do not go through inbound lock.  The
only effect of this lock was is to provide a barrier for connect and
remove logic.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 2371cd90abe3fa1b88e15111abf2cc0a26db6e52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel_mgmt.c
diff --cc drivers/hv/channel_mgmt.c
index 90f4e9b9f259,685572bae1f0..000000000000
--- a/drivers/hv/channel_mgmt.c
+++ b/drivers/hv/channel_mgmt.c
@@@ -308,8 -332,6 +308,11 @@@ static struct vmbus_channel *alloc_chan
  	if (!channel)
  		return NULL;
  
++<<<<<<< HEAD
 +	channel->acquire_ring_lock = true;
 +	spin_lock_init(&channel->inbound_lock);
++=======
++>>>>>>> 2371cd90abe3 (scsi: storvsc: remove unnecessary channel inbound lock)
  	spin_lock_init(&channel->lock);
  
  	INIT_LIST_HEAD(&channel->sc_list);
* Unmerged path drivers/hv/channel_mgmt.c
diff --git a/drivers/scsi/storvsc_drv.c b/drivers/scsi/storvsc_drv.c
index f4280ddf585a..08b8e978f2c5 100644
--- a/drivers/scsi/storvsc_drv.c
+++ b/drivers/scsi/storvsc_drv.c
@@ -1206,13 +1206,13 @@ static int storvsc_connect_to_vsp(struct hv_device *device, u32 ring_size,
 static int storvsc_dev_remove(struct hv_device *device)
 {
 	struct storvsc_device *stor_device;
-	unsigned long flags;
 
 	stor_device = hv_get_drvdata(device);
 
-	spin_lock_irqsave(&device->channel->inbound_lock, flags);
 	stor_device->destroy = true;
-	spin_unlock_irqrestore(&device->channel->inbound_lock, flags);
+
+	/* Make sure flag is set before waiting */
+	wmb();
 
 	/*
 	 * At this point, all outbound traffic should be disable. We
@@ -1229,9 +1229,7 @@ static int storvsc_dev_remove(struct hv_device *device)
 	 * we have drained - to drain the outgoing packets, we need to
 	 * allow incoming packets.
 	 */
-	spin_lock_irqsave(&device->channel->inbound_lock, flags);
 	hv_set_drvdata(device, NULL);
-	spin_unlock_irqrestore(&device->channel->inbound_lock, flags);
 
 	/* Close the channel */
 	vmbus_close(device->channel);
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index e2e6e00c51a8..78b048af4995 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -742,7 +742,6 @@ struct vmbus_channel {
 	u32 ringbuffer_pagecount;
 	struct hv_ring_buffer_info outbound;	/* send to parent */
 	struct hv_ring_buffer_info inbound;	/* receive from parent */
-	spinlock_t inbound_lock;
 
 	struct vmbus_close_msg close_msg;
 
