net/mlx5e: IPoIB, Add ioctl support to IPoIB device driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: IPoIB, Add ioctl support to IPoIB device driver (Don Dutile) [1499363 1385325]
Rebuild_FUZZ: 96.43%
commit-author Feras Daoud <ferasda@mellanox.com>
commit 1170fbd8ff43ff7808ae4a698054762b8bfae340
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/1170fbd8.failed

Add ioctl support to IPoIB device driver. For now, this
ioctl will support timestamp get and set.

	Signed-off-by: Feras Daoud <ferasda@mellanox.com>
	Signed-off-by: Eitan Rabin <rabin@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 1170fbd8ff43ff7808ae4a698054762b8bfae340)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
#	drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index efce1dc691aa,5d9ace493d85..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -777,9 -853,9 +777,15 @@@ void mlx5e_timestamp_init(struct mlx5e_
  void mlx5e_timestamp_cleanup(struct mlx5e_priv *priv);
  void mlx5e_pps_event_handler(struct mlx5e_priv *priv,
  			     struct ptp_clock_event *event);
++<<<<<<< HEAD
 +int mlx5e_hwstamp_set(struct net_device *dev, struct ifreq *ifr);
 +int mlx5e_hwstamp_get(struct net_device *dev, struct ifreq *ifr);
 +void mlx5e_modify_rx_cqe_compression_locked(struct mlx5e_priv *priv, bool val);
++=======
+ int mlx5e_hwstamp_set(struct mlx5e_priv *priv, struct ifreq *ifr);
+ int mlx5e_hwstamp_get(struct mlx5e_priv *priv, struct ifreq *ifr);
+ int mlx5e_modify_rx_cqe_compression_locked(struct mlx5e_priv *priv, bool val);
++>>>>>>> 1170fbd8ff43 (net/mlx5e: IPoIB, Add ioctl support to IPoIB device driver)
  
  int mlx5e_vlan_rx_add_vid(struct net_device *dev, __always_unused __be16 proto,
  			  u16 vid);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
index 4a787dea75a4,66f432385dbb..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
@@@ -86,10 -86,10 +86,9 @@@ static void mlx5e_timestamp_overflow(st
  	schedule_delayed_work(&tstamp->overflow_work, tstamp->overflow_period);
  }
  
- int mlx5e_hwstamp_set(struct net_device *dev, struct ifreq *ifr)
+ int mlx5e_hwstamp_set(struct mlx5e_priv *priv, struct ifreq *ifr)
  {
- 	struct mlx5e_priv *priv = netdev_priv(dev);
  	struct hwtstamp_config config;
 -	int err;
  
  	if (!MLX5_CAP_GEN(priv->mdev, device_frequency_khz))
  		return -EOPNOTSUPP;
@@@ -127,9 -127,15 +126,19 @@@
  	case HWTSTAMP_FILTER_PTP_V2_EVENT:
  	case HWTSTAMP_FILTER_PTP_V2_SYNC:
  	case HWTSTAMP_FILTER_PTP_V2_DELAY_REQ:
 -	case HWTSTAMP_FILTER_NTP_ALL:
  		/* Disable CQE compression */
++<<<<<<< HEAD
 +		netdev_warn(dev, "Disabling cqe compression");
 +		mlx5e_modify_rx_cqe_compression_locked(priv, false);
++=======
+ 		netdev_warn(priv->netdev, "Disabling cqe compression");
+ 		err = mlx5e_modify_rx_cqe_compression_locked(priv, false);
+ 		if (err) {
+ 			netdev_err(priv->netdev, "Failed disabling cqe compression err=%d\n", err);
+ 			mutex_unlock(&priv->state_lock);
+ 			return err;
+ 		}
++>>>>>>> 1170fbd8ff43 (net/mlx5e: IPoIB, Add ioctl support to IPoIB device driver)
  		config.rx_filter = HWTSTAMP_FILTER_ALL;
  		break;
  	default:
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index e2c448703ea8..72cd21ac09ab 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -2902,11 +2902,13 @@ static int mlx5e_change_mtu(struct net_device *netdev, int new_mtu)
 
 static int mlx5e_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
 {
+	struct mlx5e_priv *priv = netdev_priv(dev);
+
 	switch (cmd) {
 	case SIOCSHWTSTAMP:
-		return mlx5e_hwstamp_set(dev, ifr);
+		return mlx5e_hwstamp_set(priv, ifr);
 	case SIOCGHWTSTAMP:
-		return mlx5e_hwstamp_get(dev, ifr);
+		return mlx5e_hwstamp_get(priv, ifr);
 	default:
 		return -EOPNOTSUPP;
 	}
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
