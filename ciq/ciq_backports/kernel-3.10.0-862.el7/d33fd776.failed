iomap: add IOMAP_REPORT

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Christoph Hellwig <hch@lst.de>
commit d33fd776f992332be110f6ceca6dad60cb5d513f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d33fd776.failed

This allows the file system to tell a FIEMAP from a read operation, and thus
avoids the need to report flags that aren't actually used in the read path.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>


(cherry picked from commit d33fd776f992332be110f6ceca6dad60cb5d513f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/iomap.h
diff --cc include/linux/iomap.h
index c74226a738a3,7892f55a1866..000000000000
--- a/include/linux/iomap.h
+++ b/include/linux/iomap.h
@@@ -19,10 -19,15 +19,20 @@@ struct vm_fault
  #define IOMAP_UNWRITTEN	0x04	/* blocks allocated @blkno in unwritten state */
  
  /*
-  * Flags for iomap mappings:
+  * Flags for all iomap mappings:
   */
++<<<<<<< HEAD
 +#define IOMAP_F_MERGED	0x01	/* contains multiple blocks/extents */
 +#define IOMAP_F_SHARED	0x02	/* block shared with another file */
++=======
+ #define IOMAP_F_NEW	0x01	/* blocks have been newly allocated */
+ 
+ /*
+  * Flags that only need to be reported for IOMAP_REPORT requests:
+  */
+ #define IOMAP_F_MERGED	0x10	/* contains multiple blocks/extents */
+ #define IOMAP_F_SHARED	0x20	/* block shared with another file */
++>>>>>>> d33fd776f992 (iomap: add IOMAP_REPORT)
  
  /*
   * Magic value for blkno:
diff --git a/fs/iomap.c b/fs/iomap.c
index 3be51de876d2..ca2444cf3ae4 100644
--- a/fs/iomap.c
+++ b/fs/iomap.c
@@ -567,7 +567,7 @@ int iomap_fiemap(struct inode *inode, struct fiemap_extent_info *fi,
 	}
 
 	while (len > 0) {
-		ret = iomap_apply(inode, start, len, 0, ops, &ctx,
+		ret = iomap_apply(inode, start, len, IOMAP_REPORT, ops, &ctx,
 				iomap_fiemap_actor);
 		/* inode with no (attribute) mapping will give ENOENT */
 		if (ret == -ENOENT)
* Unmerged path include/linux/iomap.h
