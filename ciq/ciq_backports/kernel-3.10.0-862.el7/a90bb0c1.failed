rbd: store and use obj_request->object_no

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ilya Dryomov <idryomov@gmail.com>
commit a90bb0c1d47dc1195bc6ac753b34a52535089f80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a90bb0c1.failed

object_no can be trivially formatted into an object name.  We already
store object names in OSD requests with special care to avoid dynamic
allocations for short names.  Storing a name in obj_request, obtained
as below (!), is a waste and will be removed in the next commit.

    name = kmem_cache_alloc(rbd_segment_name_cache, ...);
    snprintf(name, ...);
    obj_request->object_name = kstrdup(name);
    kmem_cache_free(rbd_segment_name_cache, name);
    ...
    ceph_oid_aprintf(..., "%s", obj_request->object_name);

	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
	Reviewed-by: Jason Dillaman <dillaman@redhat.com>
(cherry picked from commit a90bb0c1d47dc1195bc6ac753b34a52535089f80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/rbd.c
diff --cc drivers/block/rbd.c
index b73b90551b4e,6c094b580eae..000000000000
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@@ -1974,6 -1951,40 +1975,43 @@@ static void rbd_osd_req_format_write(st
  	osd_req->r_data_offset = obj_request->offset;
  }
  
++<<<<<<< HEAD
++=======
+ static struct ceph_osd_request *
+ __rbd_osd_req_create(struct rbd_device *rbd_dev,
+ 		     struct ceph_snap_context *snapc,
+ 		     int num_ops, unsigned int flags,
+ 		     struct rbd_obj_request *obj_request)
+ {
+ 	struct ceph_osd_client *osdc = &rbd_dev->rbd_client->client->osdc;
+ 	struct ceph_osd_request *req;
+ 	const char *name_format = rbd_dev->image_format == 1 ?
+ 				      RBD_V1_DATA_FORMAT : RBD_V2_DATA_FORMAT;
+ 
+ 	req = ceph_osdc_alloc_request(osdc, snapc, num_ops, false, GFP_NOIO);
+ 	if (!req)
+ 		return NULL;
+ 
+ 	req->r_flags = flags;
+ 	req->r_callback = rbd_osd_req_callback;
+ 	req->r_priv = obj_request;
+ 
+ 	req->r_base_oloc.pool = rbd_dev->layout.pool_id;
+ 	if (ceph_oid_aprintf(&req->r_base_oid, GFP_NOIO, name_format,
+ 			rbd_dev->header.object_prefix, obj_request->object_no))
+ 		goto err_req;
+ 
+ 	if (ceph_osdc_alloc_messages(req, GFP_NOIO))
+ 		goto err_req;
+ 
+ 	return req;
+ 
+ err_req:
+ 	ceph_osdc_put_request(req);
+ 	return NULL;
+ }
+ 
++>>>>>>> a90bb0c1d47d (rbd: store and use obj_request->object_no)
  /*
   * Create an osd request.  A read request has one osd op (read).
   * A write request has either one (watch) or two (hint+write) osd ops.
* Unmerged path drivers/block/rbd.c
