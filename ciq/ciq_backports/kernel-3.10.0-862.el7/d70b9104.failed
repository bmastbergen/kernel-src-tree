CIFS: Add copy into pages callback for a read operation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Pavel Shilovsky <pshilov@microsoft.com>
commit d70b9104b1ca586f73aaf59426756cec3325a40e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/d70b9104.failed

Since we have two different types of reads (pagecache and direct)
we need to process such responses differently after decryption of
a packet. The change allows to specify a callback that copies a read
payload data into preallocated pages.

	Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
(cherry picked from commit d70b9104b1ca586f73aaf59426756cec3325a40e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/file.c
diff --cc fs/cifs/file.c
index 0d24363f04d2,98dc842e7245..000000000000
--- a/fs/cifs/file.c
+++ b/fs/cifs/file.c
@@@ -2970,9 -2932,20 +2971,26 @@@ uncached_fill_pages(struct TCP_Server_I
  			put_page(page);
  			continue;
  		}
++<<<<<<< HEAD
 +
 +		result = cifs_readv_from_socket(server, &iov, 1, iov.iov_len);
 +		kunmap(page);
++=======
+ 		n = len;
+ 		if (len >= PAGE_SIZE) {
+ 			/* enough data to fill the page */
+ 			n = PAGE_SIZE;
+ 			len -= n;
+ 		} else {
+ 			zero_user(page, len, PAGE_SIZE - len);
+ 			rdata->tailsz = len;
+ 			len = 0;
+ 		}
+ 		if (iter)
+ 			result = copy_page_from_iter(page, 0, n, iter);
+ 		else
+ 			result = cifs_read_page_from_socket(server, page, n);
++>>>>>>> d70b9104b1ca (CIFS: Add copy into pages callback for a read operation)
  		if (result < 0)
  			break;
  
@@@ -3456,8 -3425,10 +3491,15 @@@ readpages_fill_pages(struct TCP_Server_
  			continue;
  		}
  
++<<<<<<< HEAD
 +		result = cifs_readv_from_socket(server, &iov, 1, iov.iov_len);
 +		kunmap(page);
++=======
+ 		if (iter)
+ 			result = copy_page_from_iter(page, 0, n, iter);
+ 		else
+ 			result = cifs_read_page_from_socket(server, page, n);
++>>>>>>> d70b9104b1ca (CIFS: Add copy into pages callback for a read operation)
  		if (result < 0)
  			break;
  
diff --git a/fs/cifs/cifsglob.h b/fs/cifs/cifsglob.h
index a92adb62c498..660fb709249a 100644
--- a/fs/cifs/cifsglob.h
+++ b/fs/cifs/cifsglob.h
@@ -1130,6 +1130,9 @@ struct cifs_readdata {
 	int (*read_into_pages)(struct TCP_Server_Info *server,
 				struct cifs_readdata *rdata,
 				unsigned int len);
+	int (*copy_into_pages)(struct TCP_Server_Info *server,
+				struct cifs_readdata *rdata,
+				struct iov_iter *iter);
 	struct kvec			iov[2];
 	unsigned int			pagesz;
 	unsigned int			tailsz;
* Unmerged path fs/cifs/file.c
