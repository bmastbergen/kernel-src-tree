perf memswap: Split the byteswap memory range wrappers from util.[ch]

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 98521b3869f8d6b4b9d2fdad8a56059e819ae002
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/98521b38.failed

Just one more step into splitting util.[ch] to reduce the includes hell.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-navarr9mijkgwgbzu464dwam@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 98521b3869f8d6b4b9d2fdad8a56059e819ae002)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/util.h
diff --cc tools/perf/util/util.h
index e0eb4eee09b0,6855c454e5bc..000000000000
--- a/tools/perf/util/util.h
+++ b/tools/perf/util/util.h
@@@ -130,83 -69,20 +130,86 @@@ struct parse_tag 
  
  unsigned long parse_tag_value(const char *str, struct parse_tag *tags);
  
++<<<<<<< HEAD
 +static inline int path__join(char *bf, size_t size,
 +			     const char *path1, const char *path2)
 +{
 +	return scnprintf(bf, size, "%s%s%s", path1, path1[0] ? "/" : "", path2);
 +}
 +
 +static inline int path__join3(char *bf, size_t size,
 +			      const char *path1, const char *path2,
 +			      const char *path3)
 +{
 +	return scnprintf(bf, size, "%s%s%s%s%s",
 +			 path1, path1[0] ? "/" : "",
 +			 path2, path2[0] ? "/" : "", path3);
 +}
 +
 +int perf_event_paranoid(void);
 +
 +void mem_bswap_64(void *src, int byte_size);
 +void mem_bswap_32(void *src, int byte_size);
 +
++=======
++>>>>>>> 98521b3869f8 (perf memswap: Split the byteswap memory range wrappers from util.[ch])
  bool find_process(const char *name);
  
 -int fetch_kernel_version(unsigned int *puint,
 -			 char *str, size_t str_sz);
 -#define KVER_VERSION(x)		(((x) >> 16) & 0xff)
 -#define KVER_PATCHLEVEL(x)	(((x) >> 8) & 0xff)
 -#define KVER_SUBLEVEL(x)	((x) & 0xff)
 -#define KVER_FMT	"%d.%d.%d"
 -#define KVER_PARAM(x)	KVER_VERSION(x), KVER_PATCHLEVEL(x), KVER_SUBLEVEL(x)
 +#ifdef HAVE_ZLIB_SUPPORT
 +int gzip_decompress_to_file(const char *input, int output_fd);
 +#endif
 +
 +#ifdef HAVE_LZMA_SUPPORT
 +int lzma_decompress_to_file(const char *input, int output_fd);
 +#endif
 +
 +char *asprintf_expr_inout_ints(const char *var, bool in, size_t nints, int *ints);
 +
 +static inline char *asprintf_expr_in_ints(const char *var, size_t nints, int *ints)
 +{
 +	return asprintf_expr_inout_ints(var, true, nints, ints);
 +}
 +
 +static inline char *asprintf_expr_not_in_ints(const char *var, size_t nints, int *ints)
 +{
 +	return asprintf_expr_inout_ints(var, false, nints, ints);
 +}
 +
 +int get_stack_size(const char *str, unsigned long *_size);
  
  const char *perf_tip(const char *dirpath);
 +bool is_regular_file(const char *file);
 +int fetch_current_timestamp(char *buf, size_t sz);
 +
 +enum binary_printer_ops {
 +	BINARY_PRINT_DATA_BEGIN,
 +	BINARY_PRINT_LINE_BEGIN,
 +	BINARY_PRINT_ADDR,
 +	BINARY_PRINT_NUM_DATA,
 +	BINARY_PRINT_NUM_PAD,
 +	BINARY_PRINT_SEP,
 +	BINARY_PRINT_CHAR_DATA,
 +	BINARY_PRINT_CHAR_PAD,
 +	BINARY_PRINT_LINE_END,
 +	BINARY_PRINT_DATA_END,
 +};
 +
 +typedef void (*print_binary_t)(enum binary_printer_ops,
 +			       unsigned int val,
 +			       void *extra);
  
 -#ifndef HAVE_SCHED_GETCPU_SUPPORT
 -int sched_getcpu(void);
 +void print_binary(unsigned char *data, size_t len,
 +		  size_t bytes_per_line, print_binary_t printer,
 +		  void *extra);
 +
 +#if !defined(__GLIBC__) && !defined(__ANDROID__)
 +extern int sched_getcpu(void);
  #endif
  
 +int is_printable_array(char *p, unsigned int len);
 +
 +int timestamp__scnprintf_usec(u64 timestamp, char *buf, size_t sz);
 +
 +int unit_number__scnprintf(char *buf, size_t size, u64 n);
 +
  #endif /* GIT_COMPAT_UTIL_H */
diff --git a/tools/perf/util/Build b/tools/perf/util/Build
index 8c919c1166fc..3889c26055b7 100644
--- a/tools/perf/util/Build
+++ b/tools/perf/util/Build
@@ -13,6 +13,7 @@ libperf-y += find_bit.o
 libperf-y += kallsyms.o
 libperf-y += levenshtein.o
 libperf-y += llvm-utils.o
+libperf-y += memswap.o
 libperf-y += parse-events.o
 libperf-y += perf_regs.o
 libperf-y += path.o
diff --git a/tools/perf/util/header.c b/tools/perf/util/header.c
index a211fb91144a..2a50db1eca37 100644
--- a/tools/perf/util/header.c
+++ b/tools/perf/util/header.c
@@ -12,6 +12,7 @@
 #include "evlist.h"
 #include "evsel.h"
 #include "header.h"
+#include "memswap.h"
 #include "../perf.h"
 #include "trace-event.h"
 #include "session.h"
diff --git a/tools/perf/util/intel-pt.c b/tools/perf/util/intel-pt.c
index da20cd5612e9..63ba4df71810 100644
--- a/tools/perf/util/intel-pt.c
+++ b/tools/perf/util/intel-pt.c
@@ -22,6 +22,7 @@
 #include "../perf.h"
 #include "session.h"
 #include "machine.h"
+#include "memswap.h"
 #include "sort.h"
 #include "tool.h"
 #include "event.h"
diff --git a/tools/perf/util/memswap.c b/tools/perf/util/memswap.c
new file mode 100644
index 000000000000..55f7faa8d9ec
--- /dev/null
+++ b/tools/perf/util/memswap.c
@@ -0,0 +1,24 @@
+#include <byteswap.h>
+#include "memswap.h"
+#include <linux/types.h>
+
+void mem_bswap_32(void *src, int byte_size)
+{
+	u32 *m = src;
+	while (byte_size > 0) {
+		*m = bswap_32(*m);
+		byte_size -= sizeof(u32);
+		++m;
+	}
+}
+
+void mem_bswap_64(void *src, int byte_size)
+{
+	u64 *m = src;
+
+	while (byte_size > 0) {
+		*m = bswap_64(*m);
+		byte_size -= sizeof(u64);
+		++m;
+	}
+}
diff --git a/tools/perf/util/memswap.h b/tools/perf/util/memswap.h
new file mode 100644
index 000000000000..7d1b1c34bb57
--- /dev/null
+++ b/tools/perf/util/memswap.h
@@ -0,0 +1,7 @@
+#ifndef PERF_MEMSWAP_H_
+#define PERF_MEMSWAP_H_
+
+void mem_bswap_64(void *src, int byte_size);
+void mem_bswap_32(void *src, int byte_size);
+
+#endif /* PERF_MEMSWAP_H_ */
diff --git a/tools/perf/util/session.c b/tools/perf/util/session.c
index 8e3315a99f0c..07e584b4d130 100644
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@ -9,6 +9,7 @@
 
 #include "evlist.h"
 #include "evsel.h"
+#include "memswap.h"
 #include "session.h"
 #include "tool.h"
 #include "sort.h"
diff --git a/tools/perf/util/util.c b/tools/perf/util/util.c
index dc59646111f8..a589cf25a5e4 100644
--- a/tools/perf/util/util.c
+++ b/tools/perf/util/util.c
@@ -11,7 +11,6 @@
 #include <string.h>
 #include <errno.h>
 #include <limits.h>
-#include <byteswap.h>
 #include <linux/kernel.h>
 #include <linux/log2.h>
 #include <linux/time64.h>
@@ -533,27 +532,6 @@ int perf_event_paranoid(void)
 	return value;
 }
 
-void mem_bswap_32(void *src, int byte_size)
-{
-	u32 *m = src;
-	while (byte_size > 0) {
-		*m = bswap_32(*m);
-		byte_size -= sizeof(u32);
-		++m;
-	}
-}
-
-void mem_bswap_64(void *src, int byte_size)
-{
-	u64 *m = src;
-
-	while (byte_size > 0) {
-		*m = bswap_64(*m);
-		byte_size -= sizeof(u64);
-		++m;
-	}
-}
-
 bool find_process(const char *name)
 {
 	size_t len = strlen(name);
* Unmerged path tools/perf/util/util.h
