dmaengine: dw: move private definitions to regs.h

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [sound] alsa: dmaengine: dw: move private definitions to regs.h (Jaroslav Kysela) [1463624]
Rebuild_FUZZ: 94.23%
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit 46e8c83c83c06b90ebc000df481c2fdcee79a141
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/46e8c83c.failed

Since we don't allow user to set registers directly through private slave
configuration we may move definitions to the regs.h because they are not used
anywhere except core.c part.

	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Vinod Koul <vinod.koul@intel.com>
(cherry picked from commit 46e8c83c83c06b90ebc000df481c2fdcee79a141)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dma/dw_dmac_regs.h
diff --cc drivers/dma/dw_dmac_regs.h
index 9d417200bd57,e8f92b28ffc2..000000000000
--- a/drivers/dma/dw_dmac_regs.h
+++ b/drivers/dma/dw_dmac_regs.h
@@@ -9,8 -9,8 +9,11 @@@
   * published by the Free Software Foundation.
   */
  
 -#include <linux/interrupt.h>
  #include <linux/dmaengine.h>
++<<<<<<< HEAD:drivers/dma/dw_dmac_regs.h
 +#include <linux/dw_dmac.h>
++=======
++>>>>>>> 46e8c83c83c0 (dmaengine: dw: move private definitions to regs.h):drivers/dma/dw/regs.h
  
  #define DW_DMA_MAX_NR_CHANNELS	8
  #define DW_DMA_MAX_NR_REQUESTS	16
@@@ -154,7 -172,7 +169,11 @@@ enum dw_dma_msize 
  #define DWC_CTLH_DONE		0x00001000
  #define DWC_CTLH_BLOCK_TS_MASK	0x00000fff
  
++<<<<<<< HEAD:drivers/dma/dw_dmac_regs.h
 +/* Bitfields in CFG_LO. Platform-configurable bits are in <linux/dw_dmac.h> */
++=======
+ /* Bitfields in CFG_LO */
++>>>>>>> 46e8c83c83c0 (dmaengine: dw: move private definitions to regs.h):drivers/dma/dw/regs.h
  #define DWC_CFGL_CH_PRIOR_MASK	(0x7 << 5)	/* priority mask */
  #define DWC_CFGL_CH_PRIOR(x)	((x) << 5)	/* priority */
  #define DWC_CFGL_CH_SUSP	(1 << 8)	/* pause xfer */
@@@ -165,9 -193,14 +194,18 @@@
  #define DWC_CFGL_RELOAD_SAR	(1 << 30)
  #define DWC_CFGL_RELOAD_DAR	(1 << 31)
  
++<<<<<<< HEAD:drivers/dma/dw_dmac_regs.h
 +/* Bitfields in CFG_HI. Platform-configurable bits are in <linux/dw_dmac.h> */
++=======
+ /* Bitfields in CFG_HI */
+ #define DWC_CFGH_FCMODE		(1 << 0)
+ #define DWC_CFGH_FIFO_MODE	(1 << 1)
+ #define DWC_CFGH_PROTCTL(x)	((x) << 2)
++>>>>>>> 46e8c83c83c0 (dmaengine: dw: move private definitions to regs.h):drivers/dma/dw/regs.h
  #define DWC_CFGH_DS_UPD_EN	(1 << 5)
  #define DWC_CFGH_SS_UPD_EN	(1 << 6)
+ #define DWC_CFGH_SRC_PER(x)	((x) << 7)
+ #define DWC_CFGH_DST_PER(x)	((x) << 11)
  
  /* Bitfields in SGR */
  #define DWC_SGR_SGI(x)		((x) << 0)
* Unmerged path drivers/dma/dw_dmac_regs.h
diff --git a/include/linux/dw_dmac.h b/include/linux/dw_dmac.h
index bc411a1bf8e7..d0c97da66e22 100644
--- a/include/linux/dw_dmac.h
+++ b/include/linux/dw_dmac.h
@@ -56,37 +56,6 @@ struct dw_dma_platform_data {
 	unsigned char	data_width[4];
 };
 
-/* bursts size */
-enum dw_dma_msize {
-	DW_DMA_MSIZE_1,
-	DW_DMA_MSIZE_4,
-	DW_DMA_MSIZE_8,
-	DW_DMA_MSIZE_16,
-	DW_DMA_MSIZE_32,
-	DW_DMA_MSIZE_64,
-	DW_DMA_MSIZE_128,
-	DW_DMA_MSIZE_256,
-};
-
-/* Platform-configurable bits in CFG_HI */
-#define DWC_CFGH_FCMODE		(1 << 0)
-#define DWC_CFGH_FIFO_MODE	(1 << 1)
-#define DWC_CFGH_PROTCTL(x)	((x) << 2)
-#define DWC_CFGH_SRC_PER(x)	((x) << 7)
-#define DWC_CFGH_DST_PER(x)	((x) << 11)
-
-/* Platform-configurable bits in CFG_LO */
-#define DWC_CFGL_LOCK_CH_XFER	(0 << 12)	/* scope of LOCK_CH */
-#define DWC_CFGL_LOCK_CH_BLOCK	(1 << 12)
-#define DWC_CFGL_LOCK_CH_XACT	(2 << 12)
-#define DWC_CFGL_LOCK_BUS_XFER	(0 << 14)	/* scope of LOCK_BUS */
-#define DWC_CFGL_LOCK_BUS_BLOCK	(1 << 14)
-#define DWC_CFGL_LOCK_BUS_XACT	(2 << 14)
-#define DWC_CFGL_LOCK_CH	(1 << 15)	/* channel lockout */
-#define DWC_CFGL_LOCK_BUS	(1 << 16)	/* busmaster lockout */
-#define DWC_CFGL_HS_DST_POL	(1 << 18)	/* dst handshake active low */
-#define DWC_CFGL_HS_SRC_POL	(1 << 19)	/* src handshake active low */
-
 /* DMA API extensions */
 struct dw_cyclic_desc {
 	struct dw_desc	**desc;
