net/mlx5e: NIC netdev init flow cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: NIC netdev init flow cleanup (Kamal Heib) [1456694]
Rebuild_FUZZ: 94.59%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 07c9f1e57839c678c867b89aa9dcb2220e579b13
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/07c9f1e5.failed

Remove redundant call to unregister vport representor in mlx5e_add error
flow.

Hide the representor priv and eswitch internal structures from en_main.c
as preparation step for downstream patches which would allow building
the driver without support for  representors and eswitch.

Fixes: 6f08a22c5fb2 ("net/mlx5e: Register/unregister vport representors on interface attach/detach")
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com>
(cherry picked from commit 07c9f1e57839c678c867b89aa9dcb2220e579b13)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 5a367b6ed375,b44d6f677845..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -3848,25 -4428,27 +3848,41 @@@ static void mlx5e_detach(struct mlx5_co
  
  static void *mlx5e_add(struct mlx5_core_dev *mdev)
  {
++<<<<<<< HEAD
 +	struct mlx5_eswitch *esw = mdev->priv.eswitch;
 +	int total_vfs = MLX5_TOTAL_VPORTS(mdev);
 +	void *ppriv = NULL;
 +	void *priv;
 +	int vport;
 +	int err;
++=======
++>>>>>>> 07c9f1e57839 (net/mlx5e: NIC netdev init flow cleanup)
  	struct net_device *netdev;
+ 	void *rpriv = NULL;
+ 	void *priv;
+ 	int err;
  
  	err = mlx5e_check_required_hca_cap(mdev);
  	if (err)
  		return NULL;
  
++<<<<<<< HEAD
 +	if (MLX5_CAP_GEN(mdev, vport_group_manager))
 +		ppriv = &esw->offloads.vport_reps[0];
++=======
+ 	if (MLX5_CAP_GEN(mdev, vport_group_manager)) {
+ 		rpriv = mlx5e_alloc_nic_rep_priv(mdev);
+ 		if (!rpriv) {
+ 			mlx5_core_warn(mdev, "Failed to alloc NIC rep priv data\n");
+ 			return NULL;
+ 		}
+ 	}
++>>>>>>> 07c9f1e57839 (net/mlx5e: NIC netdev init flow cleanup)
  
 -	netdev = mlx5e_create_netdev(mdev, &mlx5e_nic_profile, rpriv);
 +	netdev = mlx5e_create_netdev(mdev, &mlx5e_nic_profile, ppriv);
  	if (!netdev) {
  		mlx5_core_err(mdev, "mlx5e_create_netdev failed\n");
- 		goto err_unregister_reps;
+ 		goto err_free_rpriv;
  	}
  
  	priv = netdev_priv(netdev);
@@@ -3887,14 -4469,10 +3903,19 @@@
  
  err_detach:
  	mlx5e_detach(mdev, priv);
- 
  err_destroy_netdev:
++<<<<<<< HEAD
 +	mlx5e_destroy_netdev(mdev, priv);
 +
 +err_unregister_reps:
 +	for (vport = 1; vport < total_vfs; vport++)
 +		mlx5_eswitch_unregister_vport_rep(esw, vport);
 +
++=======
+ 	mlx5e_destroy_netdev(priv);
+ err_free_rpriv:
+ 	kfree(rpriv);
++>>>>>>> 07c9f1e57839 (net/mlx5e: NIC netdev init flow cleanup)
  	return NULL;
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index abcb1976163d..f5193596dc38 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@ -603,3 +603,16 @@ void mlx5e_vport_rep_unload(struct mlx5_eswitch *esw,
 	mlx5e_detach_netdev(esw->dev, netdev);
 	mlx5e_destroy_netdev(esw->dev, netdev_priv(netdev));
 }
+
+void *mlx5e_alloc_nic_rep_priv(struct mlx5_core_dev *mdev)
+{
+	struct mlx5_eswitch *esw = mdev->priv.eswitch;
+	struct mlx5e_rep_priv *rpriv;
+
+	rpriv = kzalloc(sizeof(*rpriv), GFP_KERNEL);
+	if (!rpriv)
+		return NULL;
+
+	rpriv->rep = &esw->offloads.vport_reps[0];
+	return rpriv;
+}
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
