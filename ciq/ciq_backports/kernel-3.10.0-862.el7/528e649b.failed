x86/platform/intel/iosf_mbi: Add a PMIC bus access notifier

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] platform/intel/iosf_mbi: Add a PMIC bus access notifier (Rob Clark) [1470097]
Rebuild_FUZZ: 96.49%
commit-author Hans de Goede <hdegoede@redhat.com>
commit 528e649b5c79683202a0ccd22e33a41e35f81a0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/528e649b.failed

Some drivers may need to acquire P-Unit managed resources from interrupt
context, where they cannot call iosf_mbi_punit_acquire().

This commit adds a notifier chain which allows a driver to get notified
(in a process context) before other drivers start accessing the PMIC bus,
so that the driver can acquire any resources, which it may need during
the window the other driver is accessing the PMIC, before hand.

BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=155241
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
	Tested-by: tagorereddy <tagore.chandan@gmail.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit 528e649b5c79683202a0ccd22e33a41e35f81a0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/iosf_mbi.h
diff --cc arch/x86/include/asm/iosf_mbi.h
index 081210c9becd,c313cac36f56..000000000000
--- a/arch/x86/include/asm/iosf_mbi.h
+++ b/arch/x86/include/asm/iosf_mbi.h
@@@ -55,22 -47,11 +57,28 @@@
  #define QRK_MBI_UNIT_HB		0x03
  #define QRK_MBI_UNIT_RMU	0x04
  #define QRK_MBI_UNIT_MM		0x05
 +#define QRK_MBI_UNIT_MMESRAM	0x05
  #define QRK_MBI_UNIT_SOC	0x31
  
++<<<<<<< HEAD
 +/* Quark read/write opcodes */
 +#define QRK_MBI_HBA_READ	0x10
 +#define QRK_MBI_HBA_WRITE	0x11
 +#define QRK_MBI_HB_READ		0x10
 +#define QRK_MBI_HB_WRITE	0x11
 +#define QRK_MBI_RMU_READ	0x10
 +#define QRK_MBI_RMU_WRITE	0x11
 +#define QRK_MBI_MM_READ		0x10
 +#define QRK_MBI_MM_WRITE	0x11
 +#define QRK_MBI_MMESRAM_READ	0x12
 +#define QRK_MBI_MMESRAM_WRITE	0x13
 +#define QRK_MBI_SOC_READ	0x06
 +#define QRK_MBI_SOC_WRITE	0x07
++=======
+ /* Action values for the pmic_bus_access_notifier functions */
+ #define MBI_PMIC_BUS_ACCESS_BEGIN	1
+ #define MBI_PMIC_BUS_ACCESS_END		2
++>>>>>>> 528e649b5c79 (x86/platform/intel/iosf_mbi: Add a PMIC bus access notifier)
  
  #if IS_ENABLED(CONFIG_IOSF_MBI)
  
* Unmerged path arch/x86/include/asm/iosf_mbi.h
diff --git a/arch/x86/kernel/iosf_mbi.c b/arch/x86/kernel/iosf_mbi.c
index 2256ca3b782b..6e6f1eac917d 100644
--- a/arch/x86/kernel/iosf_mbi.c
+++ b/arch/x86/kernel/iosf_mbi.c
@@ -33,6 +33,7 @@
 static struct pci_dev *mbi_pdev;
 static DEFINE_SPINLOCK(iosf_mbi_lock);
 static DEFINE_MUTEX(iosf_mbi_punit_mutex);
+static BLOCKING_NOTIFIER_HEAD(iosf_mbi_pmic_bus_access_notifier);
 
 static inline u32 iosf_mbi_form_mcr(u8 op, u8 port, u8 offset)
 {
@@ -201,6 +202,41 @@ void iosf_mbi_punit_release(void)
 }
 EXPORT_SYMBOL(iosf_mbi_punit_release);
 
+int iosf_mbi_register_pmic_bus_access_notifier(struct notifier_block *nb)
+{
+	int ret;
+
+	/* Wait for the bus to go inactive before registering */
+	mutex_lock(&iosf_mbi_punit_mutex);
+	ret = blocking_notifier_chain_register(
+				&iosf_mbi_pmic_bus_access_notifier, nb);
+	mutex_unlock(&iosf_mbi_punit_mutex);
+
+	return ret;
+}
+EXPORT_SYMBOL(iosf_mbi_register_pmic_bus_access_notifier);
+
+int iosf_mbi_unregister_pmic_bus_access_notifier(struct notifier_block *nb)
+{
+	int ret;
+
+	/* Wait for the bus to go inactive before unregistering */
+	mutex_lock(&iosf_mbi_punit_mutex);
+	ret = blocking_notifier_chain_unregister(
+				&iosf_mbi_pmic_bus_access_notifier, nb);
+	mutex_unlock(&iosf_mbi_punit_mutex);
+
+	return ret;
+}
+EXPORT_SYMBOL(iosf_mbi_unregister_pmic_bus_access_notifier);
+
+int iosf_mbi_call_pmic_bus_access_notifier_chain(unsigned long val, void *v)
+{
+	return blocking_notifier_call_chain(
+				&iosf_mbi_pmic_bus_access_notifier, val, v);
+}
+EXPORT_SYMBOL(iosf_mbi_call_pmic_bus_access_notifier_chain);
+
 #ifdef CONFIG_IOSF_MBI_DEBUG
 static u32	dbg_mdr;
 static u32	dbg_mcr;
