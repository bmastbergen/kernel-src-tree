cpufreq: intel_pstate: Add support for Gemini Lake

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [cpufreq] intel_pstate: Add support for Gemini Lake (Steve Best) [1456555]
Rebuild_FUZZ: 90.11%
commit-author Box, David E <david.e.box@intel.com>
commit 630e57573efa20b586c808400005d0ebfb93fc6a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/630e5757.failed

Use same parameters as INTEL_FAM6_ATOM_GOLDMONT to enable
Gemini Lake.

	Signed-off-by: Box, David E <david.e.box@intel.com>
	Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 630e57573efa20b586c808400005d0ebfb93fc6a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index c8ed8841fcf2,c31b72b16c2b..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -1339,23 -1842,26 +1339,46 @@@ static void intel_pstate_timer_func(uns
  			(unsigned long)&policy }
  
  static const struct x86_cpu_id intel_pstate_cpu_ids[] = {
++<<<<<<< HEAD
 +	ICPU(INTEL_FAM6_SANDYBRIDGE, 		core_params),
 +	ICPU(INTEL_FAM6_SANDYBRIDGE_X,		core_params),
 +	ICPU(INTEL_FAM6_ATOM_SILVERMONT1,	atom_params),
 +	ICPU(INTEL_FAM6_IVYBRIDGE,		core_params),
 +	ICPU(INTEL_FAM6_HASWELL_CORE,		core_params),
 +	ICPU(INTEL_FAM6_BROADWELL_CORE,		core_params),
 +	ICPU(INTEL_FAM6_IVYBRIDGE_X,		core_params),
 +	ICPU(INTEL_FAM6_HASWELL_X,		core_params),
 +	ICPU(INTEL_FAM6_HASWELL_ULT,		core_params),
 +	ICPU(INTEL_FAM6_HASWELL_GT3E,		core_params),
 +	ICPU(INTEL_FAM6_BROADWELL_GT3E,		core_params),
 +	ICPU(INTEL_FAM6_SKYLAKE_MOBILE,		core_params),
 +	ICPU(INTEL_FAM6_BROADWELL_X,		core_params),
 +	ICPU(INTEL_FAM6_SKYLAKE_DESKTOP,	core_params),
 +	ICPU(INTEL_FAM6_BROADWELL_XEON_D,	core_params),
 +	ICPU(INTEL_FAM6_XEON_PHI_KNL,		knl_params),
 +	ICPU(INTEL_FAM6_XEON_PHI_KNM,		knl_params),
++=======
+ 	ICPU(INTEL_FAM6_SANDYBRIDGE, 		core_funcs),
+ 	ICPU(INTEL_FAM6_SANDYBRIDGE_X,		core_funcs),
+ 	ICPU(INTEL_FAM6_ATOM_SILVERMONT1,	silvermont_funcs),
+ 	ICPU(INTEL_FAM6_IVYBRIDGE,		core_funcs),
+ 	ICPU(INTEL_FAM6_HASWELL_CORE,		core_funcs),
+ 	ICPU(INTEL_FAM6_BROADWELL_CORE,		core_funcs),
+ 	ICPU(INTEL_FAM6_IVYBRIDGE_X,		core_funcs),
+ 	ICPU(INTEL_FAM6_HASWELL_X,		core_funcs),
+ 	ICPU(INTEL_FAM6_HASWELL_ULT,		core_funcs),
+ 	ICPU(INTEL_FAM6_HASWELL_GT3E,		core_funcs),
+ 	ICPU(INTEL_FAM6_BROADWELL_GT3E,		core_funcs),
+ 	ICPU(INTEL_FAM6_ATOM_AIRMONT,		airmont_funcs),
+ 	ICPU(INTEL_FAM6_SKYLAKE_MOBILE,		core_funcs),
+ 	ICPU(INTEL_FAM6_BROADWELL_X,		core_funcs),
+ 	ICPU(INTEL_FAM6_SKYLAKE_DESKTOP,	core_funcs),
+ 	ICPU(INTEL_FAM6_BROADWELL_XEON_D,	core_funcs),
+ 	ICPU(INTEL_FAM6_XEON_PHI_KNL,		knl_funcs),
+ 	ICPU(INTEL_FAM6_XEON_PHI_KNM,		knl_funcs),
+ 	ICPU(INTEL_FAM6_ATOM_GOLDMONT,		bxt_funcs),
+ 	ICPU(INTEL_FAM6_ATOM_GEMINI_LAKE,       bxt_funcs),
++>>>>>>> 630e57573efa (cpufreq: intel_pstate: Add support for Gemini Lake)
  	{}
  };
  MODULE_DEVICE_TABLE(x86cpu, intel_pstate_cpu_ids);
* Unmerged path drivers/cpufreq/intel_pstate.c
