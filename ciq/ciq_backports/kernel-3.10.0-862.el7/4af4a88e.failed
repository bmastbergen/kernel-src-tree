x86/intel_rdt/cqm: Add mount,umount support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] intel_rdt/cqm: Add mount,umount support (Jiri Olsa) [1457533]
Rebuild_FUZZ: 95.12%
commit-author Vikas Shivappa <vikas.shivappa@linux.intel.com>
commit 4af4a88e0c9246990f95c88eeba781265f27c58e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/4af4a88e.failed

Add monitoring support during mount and unmount. Since root directory is
a "ctrl_mon" directory which can control and monitor resources create
the "mon_groups" directory which can hold monitor groups and a
"mon_data" directory which would hold all monitoring data like the rest
of resource groups.

The mount succeeds if either of monitoring or control/allocation is
enabled. If only monitoring is enabled user can still create monitor
groups under the "/sys/fs/resctrl/mon_groups/" and any mkdir under root
would fail. If only control/allocation is enabled all of the monitoring
related directories/files would not exist and resctrl would work in
legacy mode.

	Signed-off-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: ravi.v.shankar@intel.com
	Cc: tony.luck@intel.com
	Cc: fenghua.yu@intel.com
	Cc: peterz@infradead.org
	Cc: eranian@google.com
	Cc: vikas.shivappa@intel.com
	Cc: ak@linux.intel.com
	Cc: davidcc@google.com
	Cc: reinette.chatre@intel.com
Link: http://lkml.kernel.org/r/1501017287-28083-23-git-send-email-vikas.shivappa@linux.intel.com

(cherry picked from commit 4af4a88e0c9246990f95c88eeba781265f27c58e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/intel_rdt.h
#	arch/x86/kernel/cpu/intel_rdt_monitor.c
#	arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
diff --cc arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
index 1c3603d97e9d,0a7be9b7a201..000000000000
--- a/arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
+++ b/arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
@@@ -31,11 -32,13 +31,18 @@@
  
  #include <uapi/linux/magic.h>
  
 -#include <asm/intel_rdt_sched.h>
 -#include "intel_rdt.h"
 +#include <asm/intel_rdt.h>
 +#include <asm/intel_rdt_common.h>
  
++<<<<<<< HEAD
 +struct static_key rdt_enable_key;
 +struct kernfs_root *rdt_root;
++=======
+ DEFINE_STATIC_KEY_FALSE(rdt_enable_key);
+ DEFINE_STATIC_KEY_FALSE(rdt_mon_enable_key);
+ DEFINE_STATIC_KEY_FALSE(rdt_alloc_enable_key);
+ static struct kernfs_root *rdt_root;
++>>>>>>> 4af4a88e0c92 (x86/intel_rdt/cqm: Add mount,umount support)
  struct rdtgroup rdtgroup_default;
  LIST_HEAD(rdt_all_groups);
  
@@@ -765,7 -1067,7 +782,11 @@@ static struct dentry *rdt_mount(struct 
  	/*
  	 * resctrl file system can only be mounted once.
  	 */
++<<<<<<< HEAD
 +	if (static_key_false(&rdt_enable_key)) {
++=======
+ 	if (static_branch_unlikely(&rdt_enable_key)) {
++>>>>>>> 4af4a88e0c92 (x86/intel_rdt/cqm: Add mount,umount support)
  		dentry = ERR_PTR(-EBUSY);
  		goto out;
  	}
@@@ -787,12 -1109,24 +828,28 @@@
  	dentry = kernfs_mount(fs_type, flags, rdt_root,
  			      RDTGROUP_SUPER_MAGIC, NULL);
  	if (IS_ERR(dentry))
- 		goto out_destroy;
+ 		goto out_mondata;
  
++<<<<<<< HEAD
 +	static_key_slow_inc(&rdt_enable_key);
++=======
+ 	if (rdt_alloc_capable)
+ 		static_branch_enable(&rdt_alloc_enable_key);
+ 	if (rdt_mon_capable)
+ 		static_branch_enable(&rdt_mon_enable_key);
+ 
+ 	if (rdt_alloc_capable || rdt_mon_capable)
+ 		static_branch_enable(&rdt_enable_key);
++>>>>>>> 4af4a88e0c92 (x86/intel_rdt/cqm: Add mount,umount support)
  	goto out;
  
- out_destroy:
+ out_mondata:
+ 	if (rdt_mon_capable)
+ 		kernfs_remove(kn_mondata);
+ out_mongrp:
+ 	if (rdt_mon_capable)
+ 		kernfs_remove(kn_mongrp);
+ out_info:
  	kernfs_remove(kn_info);
  out_cdp:
  	cdp_disable();
@@@ -917,11 -1286,13 +981,17 @@@ static void rdt_kill_sb(struct super_bl
  	mutex_lock(&rdtgroup_mutex);
  
  	/*Put everything back to default values. */
 -	for_each_alloc_enabled_rdt_resource(r)
 -		reset_all_ctrls(r);
 +	for_each_enabled_rdt_resource(r)
 +		reset_all_cbms(r);
  	cdp_disable();
  	rmdir_all_sub();
++<<<<<<< HEAD
 +	static_key_slow_dec(&rdt_enable_key);
++=======
+ 	static_branch_disable(&rdt_alloc_enable_key);
+ 	static_branch_disable(&rdt_mon_enable_key);
+ 	static_branch_disable(&rdt_enable_key);
++>>>>>>> 4af4a88e0c92 (x86/intel_rdt/cqm: Add mount,umount support)
  	kernfs_kill_sb(sb);
  	mutex_unlock(&rdtgroup_mutex);
  }
* Unmerged path arch/x86/kernel/cpu/intel_rdt.h
* Unmerged path arch/x86/kernel/cpu/intel_rdt_monitor.c
* Unmerged path arch/x86/kernel/cpu/intel_rdt.h
* Unmerged path arch/x86/kernel/cpu/intel_rdt_monitor.c
* Unmerged path arch/x86/kernel/cpu/intel_rdt_rdtgroup.c
