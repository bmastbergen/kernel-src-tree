ASoC: codec: use enable pin to control dmic start and stop

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: codec: use enable pin to control dmic start and stop (Jaroslav Kysela) [1463624]
Rebuild_FUZZ: 95.08%
commit-author huang lin <hl@rock-chips.com>
commit 23c7159a799f3364720b3d250f57bc8e26b17287
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/23c7159a.failed

on some board use enable pin to control dmic start and stop,
so add this feature in dmic driver.

	Signed-off-by: Lin Huang <hl@rock-chips.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 23c7159a799f3364720b3d250f57bc8e26b17287)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/Kconfig
diff --cc sound/soc/codecs/Kconfig
index bec1671f0a76,952c44dd5e90..000000000000
--- a/sound/soc/codecs/Kconfig
+++ b/sound/soc/codecs/Kconfig
@@@ -13,11 -13,112 +13,78 @@@ menu "CODEC drivers
  config SND_SOC_ALL_CODECS
  	tristate "Build all ASoC CODEC drivers"
  	depends on COMPILE_TEST
++<<<<<<< HEAD
 +	select SND_SOC_DMIC
++=======
+ 	select SND_SOC_88PM860X if MFD_88PM860X
+ 	select SND_SOC_L3
+ 	select SND_SOC_AB8500_CODEC if ABX500_CORE
+ 	select SND_SOC_AC97_CODEC
+ 	select SND_SOC_AD1836 if SPI_MASTER
+ 	select SND_SOC_AD193X_SPI if SPI_MASTER
+ 	select SND_SOC_AD193X_I2C if I2C
+ 	select SND_SOC_AD1980 if SND_SOC_AC97_BUS
+ 	select SND_SOC_AD73311
+ 	select SND_SOC_ADAU1373 if I2C
+ 	select SND_SOC_ADAU1761_I2C if I2C
+ 	select SND_SOC_ADAU1761_SPI if SPI
+ 	select SND_SOC_ADAU1781_I2C if I2C
+ 	select SND_SOC_ADAU1781_SPI if SPI
+ 	select SND_SOC_ADAV801 if SPI_MASTER
+ 	select SND_SOC_ADAV803 if I2C
+ 	select SND_SOC_ADAU1977_SPI if SPI_MASTER
+ 	select SND_SOC_ADAU1977_I2C if I2C
+ 	select SND_SOC_ADAU1701 if I2C
+ 	select SND_SOC_ADAU7002
+ 	select SND_SOC_ADS117X
+ 	select SND_SOC_AK4104 if SPI_MASTER
+ 	select SND_SOC_AK4535 if I2C
+ 	select SND_SOC_AK4554
+ 	select SND_SOC_AK4613 if I2C
+ 	select SND_SOC_AK4641 if I2C
+ 	select SND_SOC_AK4642 if I2C
+ 	select SND_SOC_AK4671 if I2C
+ 	select SND_SOC_AK5386
+ 	select SND_SOC_ALC5623 if I2C
+ 	select SND_SOC_ALC5632 if I2C
+ 	select SND_SOC_BT_SCO
+ 	select SND_SOC_CQ0093VC
+ 	select SND_SOC_CS35L32 if I2C
+ 	select SND_SOC_CS35L33 if I2C
+ 	select SND_SOC_CS35L34 if I2C
+ 	select SND_SOC_CS35L35 if I2C
+ 	select SND_SOC_CS42L42 if I2C
+ 	select SND_SOC_CS42L51_I2C if I2C
+ 	select SND_SOC_CS42L52 if I2C && INPUT
+ 	select SND_SOC_CS42L56 if I2C && INPUT
+ 	select SND_SOC_CS42L73 if I2C
+ 	select SND_SOC_CS4265 if I2C
+ 	select SND_SOC_CS4270 if I2C
+ 	select SND_SOC_CS4271_I2C if I2C
+ 	select SND_SOC_CS4271_SPI if SPI_MASTER
+ 	select SND_SOC_CS42XX8_I2C if I2C
+ 	select SND_SOC_CS4349 if I2C
+ 	select SND_SOC_CS47L24 if MFD_CS47L24
+ 	select SND_SOC_CS53L30 if I2C
+ 	select SND_SOC_CX20442 if TTY
+ 	select SND_SOC_DA7210 if SND_SOC_I2C_AND_SPI
+ 	select SND_SOC_DA7213 if I2C
+ 	select SND_SOC_DA7218 if I2C
+ 	select SND_SOC_DA7219 if I2C
+ 	select SND_SOC_DA732X if I2C
+ 	select SND_SOC_DA9055 if I2C
+ 	select SND_SOC_DIO2125
+ 	select SND_SOC_DMIC if GPIOLIB
+ 	select SND_SOC_ES8316 if I2C
+ 	select SND_SOC_ES8328_SPI if SPI_MASTER
+ 	select SND_SOC_ES8328_I2C if I2C
+ 	select SND_SOC_ES7134
+ 	select SND_SOC_GTM601
++>>>>>>> 23c7159a799f (ASoC: codec: use enable pin to control dmic start and stop)
  	select SND_SOC_HDAC_HDMI
 -	select SND_SOC_ICS43432
 -	select SND_SOC_INNO_RK3036
 -	select SND_SOC_ISABELLE if I2C
 -	select SND_SOC_JZ4740_CODEC
 -	select SND_SOC_LM4857 if I2C
 -	select SND_SOC_LM49453 if I2C
 -	select SND_SOC_MAX98088 if I2C
  	select SND_SOC_MAX98090 if I2C
 -	select SND_SOC_MAX98095 if I2C
  	select SND_SOC_MAX98357A if GPIOLIB
 -	select SND_SOC_MAX98371 if I2C
 -	select SND_SOC_MAX98504 if I2C
 -	select SND_SOC_MAX9867 if I2C
 -	select SND_SOC_MAX98925 if I2C
 -	select SND_SOC_MAX98926 if I2C
 -	select SND_SOC_MAX98927 if I2C
 -	select SND_SOC_MAX9850 if I2C
 -	select SND_SOC_MAX9860 if I2C
 -	select SND_SOC_MAX9768 if I2C
 -	select SND_SOC_MAX9877 if I2C
 -	select SND_SOC_MC13783 if MFD_MC13XXX
 -	select SND_SOC_ML26124 if I2C
 -	select SND_SOC_NAU8540 if I2C
 -	select SND_SOC_NAU8810 if I2C
 -	select SND_SOC_NAU8824 if I2C
  	select SND_SOC_NAU8825 if I2C
 -	select SND_SOC_HDMI_CODEC
 -	select SND_SOC_PCM1681 if I2C
 -	select SND_SOC_PCM179X_I2C if I2C
 -	select SND_SOC_PCM179X_SPI if SPI_MASTER
 -	select SND_SOC_PCM3008
 -	select SND_SOC_PCM3168A_I2C if I2C
 -	select SND_SOC_PCM3168A_SPI if SPI_MASTER
 -	select SND_SOC_PCM5102A
 -	select SND_SOC_PCM512x_I2C if I2C
 -	select SND_SOC_PCM512x_SPI if SPI_MASTER
 -	select SND_SOC_RT286 if I2C
 -	select SND_SOC_RT298 if I2C
 -	select SND_SOC_RT5514 if I2C
 -	select SND_SOC_RT5616 if I2C
 -	select SND_SOC_RT5631 if I2C
  	select SND_SOC_RT5640 if I2C
  	select SND_SOC_RT5645 if I2C
  	select SND_SOC_RT5651 if I2C
* Unmerged path sound/soc/codecs/Kconfig
diff --git a/sound/soc/codecs/dmic.c b/sound/soc/codecs/dmic.c
index d50f142e2972..b88a1ee66f80 100644
--- a/sound/soc/codecs/dmic.c
+++ b/sound/soc/codecs/dmic.c
@@ -19,6 +19,8 @@
  *
  */
 
+#include <linux/gpio.h>
+#include <linux/gpio/consumer.h>
 #include <linux/platform_device.h>
 #include <linux/slab.h>
 #include <linux/module.h>
@@ -27,6 +29,34 @@
 #include <sound/soc.h>
 #include <sound/soc-dapm.h>
 
+static int dmic_daiops_trigger(struct snd_pcm_substream *substream,
+		int cmd, struct snd_soc_dai *dai)
+{
+	struct gpio_desc *dmic_en = snd_soc_dai_get_drvdata(dai);
+
+	if (!dmic_en)
+		return 0;
+
+	switch (cmd) {
+	case SNDRV_PCM_TRIGGER_START:
+	case SNDRV_PCM_TRIGGER_RESUME:
+	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
+		gpiod_set_value(dmic_en, 1);
+		break;
+	case SNDRV_PCM_TRIGGER_STOP:
+	case SNDRV_PCM_TRIGGER_SUSPEND:
+	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
+		gpiod_set_value(dmic_en, 0);
+		break;
+	}
+
+	return 0;
+}
+
+static const struct snd_soc_dai_ops dmic_dai_ops = {
+	.trigger	= dmic_daiops_trigger,
+};
+
 static struct snd_soc_dai_driver dmic_dai = {
 	.name = "dmic-hifi",
 	.capture = {
@@ -38,8 +68,23 @@ static struct snd_soc_dai_driver dmic_dai = {
 			| SNDRV_PCM_FMTBIT_S24_LE
 			| SNDRV_PCM_FMTBIT_S16_LE,
 	},
+	.ops    = &dmic_dai_ops,
 };
 
+static int dmic_codec_probe(struct snd_soc_codec *codec)
+{
+	struct gpio_desc *dmic_en;
+
+	dmic_en = devm_gpiod_get_optional(codec->dev,
+					"dmicen", GPIOD_OUT_LOW);
+	if (IS_ERR(dmic_en))
+		return PTR_ERR(dmic_en);
+
+	snd_soc_codec_set_drvdata(codec, dmic_en);
+
+	return 0;
+}
+
 static const struct snd_soc_dapm_widget dmic_dapm_widgets[] = {
 	SND_SOC_DAPM_AIF_OUT("DMIC AIF", "Capture", 0,
 			     SND_SOC_NOPM, 0, 0),
@@ -50,7 +95,8 @@ static const struct snd_soc_dapm_route intercon[] = {
 	{"DMIC AIF", NULL, "DMic"},
 };
 
-static struct snd_soc_codec_driver soc_dmic = {
+static const struct snd_soc_codec_driver soc_dmic = {
+	.probe = dmic_codec_probe,
 	.component_driver = {
 		.dapm_widgets		= dmic_dapm_widgets,
 		.num_dapm_widgets	= ARRAY_SIZE(dmic_dapm_widgets),
