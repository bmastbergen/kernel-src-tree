s390/mm: always use PAGE_KERNEL when mapping pages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [s390] mm: always use PAGE_KERNEL when mapping pages (Hendrik Brueckner) [1489742]
Rebuild_FUZZ: 94.74%
commit-author Heiko Carstens <heiko.carstens@de.ibm.com>
commit 3e76ee99b095e5bee71165fda5edbe6b66b39700
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3e76ee99.failed

Always use PAGE_KERNEL when re-enabling pages within the kernel
mapping due to debug pagealloc. Without using this pgprot value
pte_mkwrite() and pte_wrprotect() won't work on such mappings after an
unmap -> map cycle anymore.

	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 3e76ee99b095e5bee71165fda5edbe6b66b39700)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/mm/pageattr.c
diff --cc arch/s390/mm/pageattr.c
index 954cfcf38d1b,e67a8f712e19..000000000000
--- a/arch/s390/mm/pageattr.c
+++ b/arch/s390/mm/pageattr.c
@@@ -116,12 -133,19 +116,26 @@@ void kernel_map_pages(struct page *page
  		pud = pud_offset(pgd, address);
  		pmd = pmd_offset(pud, address);
  		pte = pte_offset_kernel(pmd, address);
++<<<<<<< HEAD
 +		if (!enable) {
 +			__ptep_ipte(address, pte);
 +			pte_val(*pte) = _PAGE_INVALID;
 +			continue;
++=======
+ 		nr = (unsigned long)pte >> ilog2(sizeof(long));
+ 		nr = PTRS_PER_PTE - (nr & (PTRS_PER_PTE - 1));
+ 		nr = min(numpages - i, nr);
+ 		if (enable) {
+ 			for (j = 0; j < nr; j++) {
+ 				pte_val(*pte) = address | pgprot_val(PAGE_KERNEL);
+ 				address += PAGE_SIZE;
+ 				pte++;
+ 			}
+ 		} else {
+ 			ipte_range(pte, address, nr);
++>>>>>>> 3e76ee99b095 (s390/mm: always use PAGE_KERNEL when mapping pages)
  		}
 -		i += nr;
 +		pte_val(*pte) = __pa(address);
  	}
  }
  
* Unmerged path arch/s390/mm/pageattr.c
