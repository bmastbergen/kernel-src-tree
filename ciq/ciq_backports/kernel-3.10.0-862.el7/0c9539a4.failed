blk-mq: fix leak of q->stats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Omar Sandoval <osandov@fb.com>
commit 0c9539a431bd4e4cbe475eb17e587f3ac06f2ae2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/0c9539a4.failed

blk_alloc_queue_node() already allocates q->stats, so
blk_mq_init_allocated_queue() is overwriting it with a new allocation.

Fixes: a83b576c9c25 ("block: fix stacked driver stats init and free")
	Reviewed-by: Ming Lei <tom.leiming@gmail.com>
	Signed-off-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 0c9539a431bd4e4cbe475eb17e587f3ac06f2ae2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 1b06c94aa73d,182776877a55..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -2175,6 -2234,11 +2175,14 @@@ struct request_queue *blk_mq_init_alloc
  	/* mark the queue as mq asap */
  	q->mq_ops = set->ops;
  
++<<<<<<< HEAD
++=======
+ 	q->poll_cb = blk_stat_alloc_callback(blk_mq_poll_stats_fn,
+ 					     blk_stat_rq_ddir, 2, q);
+ 	if (!q->poll_cb)
+ 		goto err_exit;
+ 
++>>>>>>> 0c9539a431bd (blk-mq: fix leak of q->stats)
  	q->queue_ctx = alloc_percpu(struct blk_mq_ctx);
  	if (!q->queue_ctx)
  		goto err_exit;
* Unmerged path block/blk-mq.c
