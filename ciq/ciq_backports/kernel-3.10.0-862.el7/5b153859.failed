mlxsw: spectrum: Simplify port split flow

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ido Schimmel <idosch@mellanox.com>
commit 5b15385964fab67953df706e1448e1a45db92adf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5b153859.failed

In commit be94535f9531 ("mlxsw: spectrum: Make split flow match firmware
requirements") we had to modify the port split flow to overcome quirks
in the device's firmware. This resulted in asymmetrical code with
regards to port creation and removal.

The problem in the firmware is long gone and since we can now enforce a
minimal firmware version, we can simplify the code and make it symmetric
again.

	Signed-off-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5b15385964fab67953df706e1448e1a45db92adf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlxsw/spectrum.c
diff --cc drivers/net/ethernet/mellanox/mlxsw/spectrum.c
index 4d14e78f2e24,39e57c858258..000000000000
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum.c
@@@ -852,22 -863,13 +852,14 @@@ static int mlxsw_sp_port_mtu_set(struc
  static int mlxsw_sp_port_swid_set(struct mlxsw_sp_port *mlxsw_sp_port, u8 swid)
  {
  	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_port->mlxsw_sp;
+ 	char pspa_pl[MLXSW_REG_PSPA_LEN];
  
- 	return __mlxsw_sp_port_swid_set(mlxsw_sp, mlxsw_sp_port->local_port,
- 					swid);
+ 	mlxsw_reg_pspa_pack(pspa_pl, swid, mlxsw_sp_port->local_port);
+ 	return mlxsw_reg_write(mlxsw_sp->core, MLXSW_REG(pspa), pspa_pl);
  }
  
 -int mlxsw_sp_port_vp_mode_set(struct mlxsw_sp_port *mlxsw_sp_port, bool enable)
 +static int mlxsw_sp_port_vp_mode_set(struct mlxsw_sp_port *mlxsw_sp_port,
 +				     bool enable)
  {
  	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_port->mlxsw_sp;
  	char svpe_pl[MLXSW_REG_SVPE_LEN];
@@@ -2664,29 -2647,26 +2656,43 @@@ static int mlxsw_sp_port_ets_init(struc
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int mlxsw_sp_port_pvid_vport_create(struct mlxsw_sp_port *mlxsw_sp_port)
 +{
 +	mlxsw_sp_port->pvid = 1;
 +
 +	return mlxsw_sp_port_add_vid(mlxsw_sp_port->dev, 0, 1);
 +}
 +
 +static int mlxsw_sp_port_pvid_vport_destroy(struct mlxsw_sp_port *mlxsw_sp_port)
 +{
 +	return mlxsw_sp_port_kill_vid(mlxsw_sp_port->dev, 0, 1);
 +}
 +
 +static int __mlxsw_sp_port_create(struct mlxsw_sp *mlxsw_sp, u8 local_port,
 +				  bool split, u8 module, u8 width, u8 lane)
++=======
+ static int mlxsw_sp_port_create(struct mlxsw_sp *mlxsw_sp, u8 local_port,
+ 				bool split, u8 module, u8 width, u8 lane)
++>>>>>>> 5b15385964fa (mlxsw: spectrum: Simplify port split flow)
  {
 -	struct mlxsw_sp_port_vlan *mlxsw_sp_port_vlan;
  	struct mlxsw_sp_port *mlxsw_sp_port;
  	struct net_device *dev;
 +	size_t bytes;
  	int err;
  
+ 	err = mlxsw_core_port_init(mlxsw_sp->core, local_port);
+ 	if (err) {
+ 		dev_err(mlxsw_sp->bus_info->dev, "Port %d: Failed to init core port\n",
+ 			local_port);
+ 		return err;
+ 	}
+ 
  	dev = alloc_etherdev(sizeof(struct mlxsw_sp_port));
- 	if (!dev)
- 		return -ENOMEM;
+ 	if (!dev) {
+ 		err = -ENOMEM;
+ 		goto err_alloc_etherdev;
+ 	}
  	SET_NETDEV_DEV(dev, mlxsw_sp->bus_info->dev);
  	mlxsw_sp_port = netdev_priv(dev);
  	mlxsw_sp_port->dev = dev;
@@@ -2849,36 -2838,16 +2863,18 @@@ err_port_system_port_mapping_set
  err_dev_addr_init:
  	mlxsw_sp_port_swid_set(mlxsw_sp_port, MLXSW_PORT_SWID_DISABLED_PORT);
  err_port_swid_set:
+ 	mlxsw_sp_port_module_unmap(mlxsw_sp, local_port);
+ err_port_module_map:
  	kfree(mlxsw_sp_port->hw_stats.cache);
  err_alloc_hw_stats:
 -	kfree(mlxsw_sp_port->sample);
 -err_alloc_sample:
  	free_percpu(mlxsw_sp_port->pcpu_stats);
  err_alloc_stats:
 +	kfree(mlxsw_sp_port->untagged_vlans);
 +err_port_untagged_vlans_alloc:
 +	kfree(mlxsw_sp_port->active_vlans);
 +err_port_active_vlans_alloc:
  	free_netdev(dev);
- 	return err;
- }
- 
- static int mlxsw_sp_port_create(struct mlxsw_sp *mlxsw_sp, u8 local_port,
- 				bool split, u8 module, u8 width, u8 lane)
- {
- 	int err;
- 
- 	err = mlxsw_core_port_init(mlxsw_sp->core, local_port);
- 	if (err) {
- 		dev_err(mlxsw_sp->bus_info->dev, "Port %d: Failed to init core port\n",
- 			local_port);
- 		return err;
- 	}
- 	err = __mlxsw_sp_port_create(mlxsw_sp, local_port, split,
- 				     module, width, lane);
- 	if (err)
- 		goto err_port_create;
- 	return 0;
- 
- err_port_create:
+ err_alloc_etherdev:
  	mlxsw_core_port_fini(mlxsw_sp->core, local_port);
  	return err;
  }
@@@ -2897,16 -2867,10 +2893,11 @@@ static void mlxsw_sp_port_remove(struc
  	mlxsw_sp_port_swid_set(mlxsw_sp_port, MLXSW_PORT_SWID_DISABLED_PORT);
  	mlxsw_sp_port_module_unmap(mlxsw_sp, mlxsw_sp_port->local_port);
  	kfree(mlxsw_sp_port->hw_stats.cache);
 -	kfree(mlxsw_sp_port->sample);
  	free_percpu(mlxsw_sp_port->pcpu_stats);
 -	WARN_ON_ONCE(!list_empty(&mlxsw_sp_port->vlans_list));
 +	kfree(mlxsw_sp_port->untagged_vlans);
 +	kfree(mlxsw_sp_port->active_vlans);
 +	WARN_ON_ONCE(!list_empty(&mlxsw_sp_port->vports_list));
  	free_netdev(mlxsw_sp_port->dev);
- }
- 
- static void mlxsw_sp_port_remove(struct mlxsw_sp *mlxsw_sp, u8 local_port)
- {
- 	__mlxsw_sp_port_remove(mlxsw_sp, local_port);
  	mlxsw_core_port_fini(mlxsw_sp->core, local_port);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlxsw/spectrum.c
