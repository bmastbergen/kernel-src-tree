blk-mq: remove BLK_MQ_F_DEFER_ISSUE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 7642747d674aff1f7cfe74ad9af7e9b12ab1d5ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/7642747d.failed

This flag was never used since it was introduced.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 7642747d674aff1f7cfe74ad9af7e9b12ab1d5ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/blk-mq.h
diff --cc include/linux/blk-mq.h
index e0a594c33528,5b3e201c8d4f..000000000000
--- a/include/linux/blk-mq.h
+++ b/include/linux/blk-mq.h
@@@ -200,11 -150,12 +200,20 @@@ enum 
  	BLK_MQ_RQ_QUEUE_ERROR	= 2,	/* end IO with error */
  
  	BLK_MQ_F_SHOULD_MERGE	= 1 << 0,
++<<<<<<< HEAD
 +	BLK_MQ_F_SHOULD_SORT	= 1 << 1,
 +	BLK_MQ_F_TAG_SHARED	= 1 << 2,
 +	BLK_MQ_F_SG_MERGE	= 1 << 3,
 +	BLK_MQ_F_DEFER_ISSUE	= 1 << 5,
 +	BLK_MQ_F_BLOCKING	= 1 << 6,
++=======
+ 	BLK_MQ_F_TAG_SHARED	= 1 << 1,
+ 	BLK_MQ_F_SG_MERGE	= 1 << 2,
+ 	BLK_MQ_F_BLOCKING	= 1 << 5,
+ 	BLK_MQ_F_NO_SCHED	= 1 << 6,
+ 	BLK_MQ_F_ALLOC_POLICY_START_BIT = 8,
+ 	BLK_MQ_F_ALLOC_POLICY_BITS = 1,
++>>>>>>> 7642747d674a (blk-mq: remove BLK_MQ_F_DEFER_ISSUE)
  
  	BLK_MQ_S_STOPPED	= 0,
  	BLK_MQ_S_TAG_ACTIVE	= 1,
diff --git a/block/blk-mq.c b/block/blk-mq.c
index 2fc32e51aab4..88fb92060659 100644
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -1421,13 +1421,7 @@ static void blk_mq_make_request(struct request_queue *q, struct bio *bio)
 	}
 
 	plug = current->plug;
-	/*
-	 * If the driver supports defer issued based on 'last', then
-	 * queue it up like normal since we can potentially save some
-	 * CPU this way.
-	 */
-	if (((plug && !blk_queue_nomerges(q)) || is_sync) &&
-	    !(data.hctx->flags & BLK_MQ_F_DEFER_ISSUE)) {
+	if (((plug && !blk_queue_nomerges(q)) || is_sync)) {
 		struct request *old_rq = NULL;
 
 		blk_mq_bio_to_request(rq, bio);
* Unmerged path include/linux/blk-mq.h
