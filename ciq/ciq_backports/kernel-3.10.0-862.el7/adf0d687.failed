ceph: fix unsafe dcache access in ceph_encode_dentry_release

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Jeff Layton <jlayton@redhat.com>
commit adf0d68701c7f3e50f21308c76f41e60956a6832
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/adf0d687.failed

Accessing d_parent requires some sort of locking or it could vanish
out from under us. Since we take the d_lock anyway, use that to fetch
d_parent and take a reference to it, and then use that reference to
call ceph_encode_inode_release.

Link: http://tracker.ceph.com/issues/18148
	Signed-off-by: Jeff Layton <jlayton@redhat.com>
	Reviewed-by: Yan, Zheng <zyan@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit adf0d68701c7f3e50f21308c76f41e60956a6832)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/caps.c
diff --cc fs/ceph/caps.c
index 7d842b52f549,d1b4c543cab1..000000000000
--- a/fs/ceph/caps.c
+++ b/fs/ceph/caps.c
@@@ -3886,7 -3926,7 +3886,11 @@@ int ceph_encode_inode_release(void **p
  int ceph_encode_dentry_release(void **p, struct dentry *dentry,
  			       int mds, int drop, int unless)
  {
++<<<<<<< HEAD
 +	struct inode *dir = dentry->d_parent->d_inode;
++=======
+ 	struct dentry *parent;
++>>>>>>> adf0d68701c7 (ceph: fix unsafe dcache access in ceph_encode_dentry_release)
  	struct ceph_mds_request_release *rel = *p;
  	struct ceph_dentry_info *di = ceph_dentry(dentry);
  	int force = 0;
* Unmerged path fs/ceph/caps.c
