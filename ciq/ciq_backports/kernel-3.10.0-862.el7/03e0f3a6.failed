nvme-pci: avoid dereference of symbol from unloaded module

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ming Lei <ming.lei@redhat.com>
commit 03e0f3a65e4da497c3b7b213c68943cbc73a2e34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/03e0f3a6.failed

The 'remove_work' may be scheduled to run after nvme_remove()
returns since we can't simply cancel it in nvme_remove() for
avoiding deadlock. Once nvme_remove() returns, this module(nvme)
can be unloaded.

On the other hand, nvme_put_ctrl() calls ctr->ops->free_ctrl
which may point to nvme_pci_free_ctrl() in unloaded module.

This patch avoids this issue by queuing 'remove_work' via 'nvme_wq',
and flush this worqueue in nvme_exit() as suggested by Sagi.

	Suggested-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 03e0f3a65e4da497c3b7b213c68943cbc73a2e34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 74de1d1461c5,762b8402e04c..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1666,9 -2278,9 +1666,9 @@@ static void nvme_remove_dead_ctrl(struc
  {
  	dev_warn(dev->ctrl.device, "Removing after probe failure status: %d\n", status);
  
 -	nvme_get_ctrl(&dev->ctrl);
 +	kref_get(&dev->ctrl.kref);
  	nvme_dev_disable(dev, false);
- 	if (!schedule_work(&dev->remove_work))
+ 	if (!queue_work(nvme_wq, &dev->remove_work))
  		nvme_put_ctrl(&dev->ctrl);
  }
  
@@@ -2075,7 -2703,7 +2075,11 @@@ static int __init nvme_init(void
  static void __exit nvme_exit(void)
  {
  	pci_unregister_driver(&nvme_driver);
++<<<<<<< HEAD
 +	destroy_workqueue(nvme_workq);
++=======
+ 	flush_workqueue(nvme_wq);
++>>>>>>> 03e0f3a65e4d (nvme-pci: avoid dereference of symbol from unloaded module)
  	_nvme_check_size();
  }
  
* Unmerged path drivers/nvme/host/pci.c
