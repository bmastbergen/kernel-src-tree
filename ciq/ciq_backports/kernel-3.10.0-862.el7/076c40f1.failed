ceph: don't forbid marking directory complete after forward seek

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 076c40f18d10489e29c515bf5936952830df5e16
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/076c40f1.failed

Forward seek within same frag does not update fi->last_name, it will
not affect contents of later readdir reply. So there is no need to
forbid marking directory complete

	Signed-off-by: Yan, Zheng <zyan@redhat.com>
(cherry picked from commit 076c40f18d10489e29c515bf5936952830df5e16)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/dir.c
diff --cc fs/ceph/dir.c
index f5abab663b08,e954ea2fb710..000000000000
--- a/fs/ceph/dir.c
+++ b/fs/ceph/dir.c
@@@ -489,10 -546,9 +489,9 @@@ static loff_t ceph_dir_llseek(struct fi
  {
  	struct ceph_file_info *fi = file->private_data;
  	struct inode *inode = file->f_mapping->host;
- 	loff_t old_offset = ceph_make_fpos(fi->frag, fi->next_offset);
  	loff_t retval;
  
 -	inode_lock(inode);
 +	mutex_lock(&inode->i_mutex);
  	retval = -EINVAL;
  	switch (whence) {
  	case SEEK_CUR:
@@@ -513,17 -569,9 +512,21 @@@
  		}
  		retval = offset;
  
 -		if (need_reset_readdir(fi, offset)) {
 +		if (offset == 0 ||
 +		    fpos_frag(offset) != fi->frag ||
 +		    fpos_off(offset) < fi->offset) {
 +			/* discard buffered readdir content on seekdir(0), or
 +			 * seek to new frag, or seek prior to current chunk */
  			dout("dir_llseek dropping %p content\n", file);
++<<<<<<< HEAD
 +			reset_readdir(fi, fpos_frag(offset));
 +		} else if (fpos_cmp(offset, old_offset) > 0) {
 +			/* reset dir_release_count if we did a forward seek */
 +			fi->dir_release_count = 0;
 +			fi->readdir_cache_idx = -1;
++=======
+ 			reset_readdir(fi);
++>>>>>>> 076c40f18d10 (ceph: don't forbid marking directory complete after forward seek)
  		}
  	}
  out:
* Unmerged path fs/ceph/dir.c
