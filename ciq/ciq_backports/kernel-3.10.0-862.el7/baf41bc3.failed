iwlwifi: mvm: do not print security error in monitor mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Shaul Triebitz <shaul.triebitz@intel.com>
commit baf41bc35f2bdb953da532645fd82009c2d12acf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/baf41bc3.failed

In monitor mode we are not expected to decrypt encrypted
packets (not having the keys).
Hence we are expected to get an unknown rx security status.
Keeping the print in monitor mode causes a print for each
captured packet flooding the dmesg.

	Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
	Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
(cherry picked from commit baf41bc35f2bdb953da532645fd82009c2d12acf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
#	drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
diff --cc drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
index 40374ff2ff7d,a9ac872226fd..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
@@@ -1070,7 -1076,8 +1070,12 @@@ static void iwl_mvm_restart_cleanup(str
  
  	mvm->vif_count = 0;
  	mvm->rx_ba_sessions = 0;
++<<<<<<< HEAD
 +	mvm->fw_dbg_conf = FW_DBG_INVALID;
++=======
+ 	mvm->fwrt.dump.conf = FW_DBG_INVALID;
+ 	mvm->monitor_on = false;
++>>>>>>> baf41bc35f2b (iwlwifi: mvm: do not print security error in monitor mode)
  
  	/* keep statistics ticking */
  	iwl_mvm_accu_radio_stats(mvm);
@@@ -1534,8 -1530,10 +1542,11 @@@ static void iwl_mvm_mac_remove_interfac
  	iwl_mvm_power_update_mac(mvm);
  	iwl_mvm_mac_ctxt_remove(mvm, vif);
  
+ 	if (vif->type == NL80211_IFTYPE_MONITOR)
+ 		mvm->monitor_on = false;
+ 
  out_release:
 +	iwl_mvm_mac_ctxt_release(mvm, vif);
  	mutex_unlock(&mvm->mutex);
  }
  
diff --cc drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
index 73a216524af2,d75da37a79f3..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
@@@ -1035,6 -1015,13 +1035,16 @@@ struct iwl_mvm 
  	bool drop_bcn_ap_mode;
  
  	struct delayed_work cs_tx_unblock_dwork;
++<<<<<<< HEAD
++=======
+ 
+ 	/* does a monitor vif exist (only one can exist hence bool) */
+ 	bool monitor_on;
+ #ifdef CONFIG_ACPI
+ 	struct iwl_mvm_sar_profile sar_profiles[IWL_MVM_SAR_PROFILE_NUM];
+ 	struct iwl_mvm_geo_profile geo_profiles[IWL_NUM_GEO_PROFILES];
+ #endif
++>>>>>>> baf41bc35f2b (iwlwifi: mvm: do not print security error in monitor mode)
  };
  
  /* Extract MVM priv from op_mode and _hw */
* Unmerged path drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
* Unmerged path drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rx.c b/drivers/net/wireless/intel/iwlwifi/mvm/rx.c
index 20473df79c94..f50a0731dddf 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rx.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rx.c
@@ -233,7 +233,9 @@ static u32 iwl_mvm_set_mac80211_rx_flag(struct iwl_mvm *mvm,
 		return 0;
 
 	default:
-		IWL_ERR(mvm, "Unhandled alg: 0x%x\n", rx_pkt_status);
+		/* Expected in monitor (not having the keys) */
+		if (!mvm->monitor_on)
+			IWL_ERR(mvm, "Unhandled alg: 0x%x\n", rx_pkt_status);
 	}
 
 	return 0;
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c b/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c
index f845dd3e659e..ea8d1d0c203f 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c
@@ -279,7 +279,9 @@ static int iwl_mvm_rx_crypto(struct iwl_mvm *mvm, struct ieee80211_hdr *hdr,
 		stats->flag |= RX_FLAG_DECRYPTED;
 		return 0;
 	default:
-		IWL_ERR(mvm, "Unhandled alg: 0x%x\n", status);
+		/* Expected in monitor (not having the keys) */
+		if (!mvm->monitor_on)
+			IWL_ERR(mvm, "Unhandled alg: 0x%x\n", status);
 	}
 
 	return 0;
