IB/mlx5: Add ODP atomics support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Artemy Kovalyov <artemyko@mellanox.com>
commit 17d2f88f92ce39b348f125f6b2e6eeb6b0906ac7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/17d2f88f.failed

Handle ODP atomic operations. When initiator of RDMA atomic
operation use ODP MR to provide source data handle pagefault properly.

	Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 17d2f88f92ce39b348f125f6b2e6eeb6b0906ac7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/odp.c
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 1e73c127feb7,971b2885f474..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -389,12 -405,13 +403,18 @@@ static const u32 mlx5_ib_odp_opcode_cap
   * scatter-gather list, and set wqe_end to the end of the WQE.
   */
  static int mlx5_ib_mr_initiator_pfault_handler(
 -	struct mlx5_ib_dev *dev, struct mlx5_pagefault *pfault,
 -	struct mlx5_ib_qp *qp, void **wqe, void **wqe_end, int wqe_length)
 +	struct mlx5_ib_qp *qp, struct mlx5_ib_pfault *pfault,
 +	void **wqe, void **wqe_end, int wqe_length)
  {
 +	struct mlx5_ib_dev *dev = to_mdev(qp->ibqp.pd->device);
  	struct mlx5_wqe_ctrl_seg *ctrl = *wqe;
++<<<<<<< HEAD
 +	u16 wqe_index = pfault->mpfault.wqe.wqe_index;
++=======
+ 	u16 wqe_index = pfault->wqe.wqe_index;
+ 	u32 transport_caps;
+ 	struct mlx5_base_av *av;
++>>>>>>> 17d2f88f92ce (IB/mlx5: Add ODP atomics support)
  	unsigned ds, opcode;
  #if defined(DEBUG)
  	u32 ctrl_wqe_index, ctrl_qpn;
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
diff --git a/include/linux/mlx5/mlx5_ifc.h b/include/linux/mlx5/mlx5_ifc.h
index d74550b4aa93..a2e191362104 100644
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@ -328,7 +328,7 @@ struct mlx5_ifc_odp_per_transport_service_cap_bits {
 	u8         receive[0x1];
 	u8         write[0x1];
 	u8         read[0x1];
-	u8         reserved_at_4[0x1];
+	u8         atomic[0x1];
 	u8         srq_receive[0x1];
 	u8         reserved_at_6[0x1a];
 };
diff --git a/include/linux/mlx5/qp.h b/include/linux/mlx5/qp.h
index 693811e0cb24..7ba1b75b5146 100644
--- a/include/linux/mlx5/qp.h
+++ b/include/linux/mlx5/qp.h
@@ -215,6 +215,7 @@ struct mlx5_wqe_ctrl_seg {
 #define MLX5_WQE_CTRL_OPCODE_MASK 0xff
 #define MLX5_WQE_CTRL_WQE_INDEX_MASK 0x00ffff00
 #define MLX5_WQE_CTRL_WQE_INDEX_SHIFT 8
+#define MLX5_WQE_AV_EXT 0x80000000
 
 enum {
 	MLX5_ETH_WQE_L3_INNER_CSUM      = 1 << 4,
@@ -245,6 +246,23 @@ struct mlx5_wqe_masked_atomic_seg {
 	__be64			compare_mask;
 };
 
+struct mlx5_base_av {
+	union {
+		struct {
+			__be32	qkey;
+			__be32	reserved;
+		} qkey;
+		__be64	dc_key;
+	} key;
+	__be32	dqp_dct;
+	u8	stat_rate_sl;
+	u8	fl_mlid;
+	union {
+		__be16	rlid;
+		__be16  udp_sport;
+	};
+};
+
 struct mlx5_av {
 	union {
 		struct {
