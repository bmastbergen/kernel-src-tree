tcm_qla2xxx Add SCSI command jammer/discard capability

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [scsi] tcm_qla2xxx: Add SCSI command jammer/discard capability (Himanshu Madhani) [1327621]
Rebuild_FUZZ: 99.08%
commit-author Laurence Oberman <loberman@redhat.com>
commit 54a5e73f4d6e31d5628e08b4d575c71d71670e09
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/54a5e73f.failed

This patch introduces support for TCM_QLA2XXX_DEBUG and
associated tcm_qla2xxx_tpg->tpg_attrib.jam_host checking
used to test dropped packets to FC host environments.

Tested by: Laurence Oberman <loberman@redhat.com>
	Signed-off-by: Laurence Oberman <loberman@redhat.com>
	Acked-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 54a5e73f4d6e31d5628e08b4d575c71d71670e09)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/Kconfig
#	drivers/scsi/qla2xxx/tcm_qla2xxx.c
#	drivers/scsi/qla2xxx/tcm_qla2xxx.h
diff --cc drivers/scsi/qla2xxx/Kconfig
index 0cb90d65b74b,67c0d5aa3212..000000000000
--- a/drivers/scsi/qla2xxx/Kconfig
+++ b/drivers/scsi/qla2xxx/Kconfig
@@@ -38,4 -35,13 +38,17 @@@ config TCM_QLA2XX
  	select BTREE
  	default n
  	---help---
++<<<<<<< HEAD
 +	Say Y here to enable the TCM_QLA2XXX fabric module for Qlogic 2xxx series target mode HBAs
++=======
+ 	Say Y here to enable the TCM_QLA2XXX fabric module for QLogic 24xx+ series target mode HBAs
+ 
+ if TCM_QLA2XXX
+ config TCM_QLA2XXX_DEBUG
+ 	bool "TCM_QLA2XXX fabric module DEBUG mode for QLogic 24xx+ series target mode HBAs"
+ 	default n
+ 	---help---
+ 	Say Y here to enable the TCM_QLA2XXX fabric module DEBUG for QLogic 24xx+ series target mode HBAs
+ 	This will include code to enable the SCSI command jammer
+ endif
++>>>>>>> 54a5e73f4d6e (tcm_qla2xxx Add SCSI command jammer/discard capability)
diff --cc drivers/scsi/qla2xxx/tcm_qla2xxx.c
index 8e939971fec1,6643f6fc7795..000000000000
--- a/drivers/scsi/qla2xxx/tcm_qla2xxx.c
+++ b/drivers/scsi/qla2xxx/tcm_qla2xxx.c
@@@ -592,6 -466,16 +596,19 @@@ static int tcm_qla2xxx_handle_cmd(scsi_
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_TCM_QLA2XXX_DEBUG
+ 	se_tpg = se_sess->se_tpg;
+ 	tpg = container_of(se_tpg, struct tcm_qla2xxx_tpg, se_tpg);
+ 	if (unlikely(tpg->tpg_attrib.jam_host)) {
+ 		/* return, and dont run target_submit_cmd,discarding command */
+ 		return 0;
+ 	}
+ #endif
+ 
+ 	cmd->vha->tgt_counters.qla_core_sbt_cmd++;
++>>>>>>> 54a5e73f4d6e (tcm_qla2xxx Add SCSI command jammer/discard capability)
  	return target_submit_cmd(se_cmd, se_sess, cdb, &cmd->sense_buffer[0],
  				cmd->unpacked_lun, data_length, fcp_task_attr,
  				data_dir, flags);
@@@ -895,54 -814,30 +912,70 @@@ static int tcm_qla2xxx_set_attrib_##_na
  		return -EINVAL;						\
  	}								\
  									\
 -	a->name = val;							\
 -									\
 -	return count;							\
 -}									\
 -CONFIGFS_ATTR(tcm_qla2xxx_tpg_attrib_, name)
 +	a->_name = val;							\
 +	return 0;							\
 +}
  
 +#define QLA_TPG_ATTR(_name, _mode) \
 +	TF_TPG_ATTRIB_ATTR(tcm_qla2xxx, _name, _mode);
 +
 +/*
 + * Define tcm_qla2xxx_tpg_attrib_s_generate_node_acls
 + */
 +DEF_QLA_TPG_ATTR_BOOL(generate_node_acls);
  DEF_QLA_TPG_ATTRIB(generate_node_acls);
 +QLA_TPG_ATTR(generate_node_acls, S_IRUGO | S_IWUSR);
 +
 +/*
 + Define tcm_qla2xxx_attrib_s_cache_dynamic_acls
 + */
 +DEF_QLA_TPG_ATTR_BOOL(cache_dynamic_acls);
  DEF_QLA_TPG_ATTRIB(cache_dynamic_acls);
 +QLA_TPG_ATTR(cache_dynamic_acls, S_IRUGO | S_IWUSR);
 +
 +/*
 + * Define tcm_qla2xxx_tpg_attrib_s_demo_mode_write_protect
 + */
 +DEF_QLA_TPG_ATTR_BOOL(demo_mode_write_protect);
  DEF_QLA_TPG_ATTRIB(demo_mode_write_protect);
 +QLA_TPG_ATTR(demo_mode_write_protect, S_IRUGO | S_IWUSR);
 +
 +/*
 + * Define tcm_qla2xxx_tpg_attrib_s_prod_mode_write_protect
 + */
 +DEF_QLA_TPG_ATTR_BOOL(prod_mode_write_protect);
  DEF_QLA_TPG_ATTRIB(prod_mode_write_protect);
 +QLA_TPG_ATTR(prod_mode_write_protect, S_IRUGO | S_IWUSR);
 +
 +/*
 + * Define tcm_qla2xxx_tpg_attrib_s_demo_mode_login_only
 + */
 +DEF_QLA_TPG_ATTR_BOOL(demo_mode_login_only);
  DEF_QLA_TPG_ATTRIB(demo_mode_login_only);
++<<<<<<< HEAD
 +QLA_TPG_ATTR(demo_mode_login_only, S_IRUGO | S_IWUSR);
 +
 +static struct configfs_attribute *tcm_qla2xxx_tpg_attrib_attrs[] = {
 +	&tcm_qla2xxx_tpg_attrib_generate_node_acls.attr,
 +	&tcm_qla2xxx_tpg_attrib_cache_dynamic_acls.attr,
 +	&tcm_qla2xxx_tpg_attrib_demo_mode_write_protect.attr,
 +	&tcm_qla2xxx_tpg_attrib_prod_mode_write_protect.attr,
 +	&tcm_qla2xxx_tpg_attrib_demo_mode_login_only.attr,
++=======
+ #ifdef CONFIG_TCM_QLA2XXX_DEBUG
+ DEF_QLA_TPG_ATTRIB(jam_host);
+ #endif
+ 
+ static struct configfs_attribute *tcm_qla2xxx_tpg_attrib_attrs[] = {
+ 	&tcm_qla2xxx_tpg_attrib_attr_generate_node_acls,
+ 	&tcm_qla2xxx_tpg_attrib_attr_cache_dynamic_acls,
+ 	&tcm_qla2xxx_tpg_attrib_attr_demo_mode_write_protect,
+ 	&tcm_qla2xxx_tpg_attrib_attr_prod_mode_write_protect,
+ 	&tcm_qla2xxx_tpg_attrib_attr_demo_mode_login_only,
+ #ifdef CONFIG_TCM_QLA2XXX_DEBUG
+ 	&tcm_qla2xxx_tpg_attrib_attr_jam_host,
+ #endif
++>>>>>>> 54a5e73f4d6e (tcm_qla2xxx Add SCSI command jammer/discard capability)
  	NULL,
  };
  
@@@ -1042,9 -1010,9 +1075,10 @@@ static struct se_portal_group *tcm_qla2
  	tpg->tpg_attrib.demo_mode_write_protect = 1;
  	tpg->tpg_attrib.cache_dynamic_acls = 1;
  	tpg->tpg_attrib.demo_mode_login_only = 1;
+ 	tpg->tpg_attrib.jam_host = 0;
  
 -	ret = core_tpg_register(wwn, &tpg->se_tpg, SCSI_PROTOCOL_FCP);
 +	ret = core_tpg_register(&tcm_qla2xxx_fabric_configfs->tf_ops, wwn,
 +				&tpg->se_tpg, tpg, TRANSPORT_TPG_TYPE_NORMAL);
  	if (ret < 0) {
  		kfree(tpg);
  		return NULL;
diff --cc drivers/scsi/qla2xxx/tcm_qla2xxx.h
index cd2453b8f3ee,37e026a4823d..000000000000
--- a/drivers/scsi/qla2xxx/tcm_qla2xxx.h
+++ b/drivers/scsi/qla2xxx/tcm_qla2xxx.h
@@@ -28,6 -33,8 +28,11 @@@ struct tcm_qla2xxx_tpg_attrib 
  	int demo_mode_write_protect;
  	int prod_mode_write_protect;
  	int demo_mode_login_only;
++<<<<<<< HEAD
++=======
+ 	int fabric_prot_type;
+ 	int jam_host;
++>>>>>>> 54a5e73f4d6e (tcm_qla2xxx Add SCSI command jammer/discard capability)
  };
  
  struct tcm_qla2xxx_tpg {
diff --git a/Documentation/scsi/tcm_qla2xxx.txt b/Documentation/scsi/tcm_qla2xxx.txt
new file mode 100644
index 000000000000..c3a670a25e2b
--- /dev/null
+++ b/Documentation/scsi/tcm_qla2xxx.txt
@@ -0,0 +1,22 @@
+tcm_qla2xxx jam_host attribute
+------------------------------
+There is now a new module endpoint atribute called jam_host
+attribute: jam_host: boolean=0/1
+This attribute and accompanying code is only included if the
+Kconfig parameter TCM_QLA2XXX_DEBUG is set to Y
+By default this jammer code and functionality is disabled
+
+Use this attribute to control the discarding of SCSI commands to a
+selected host.
+This may be useful for testing error handling and simulating slow drain
+and other fabric issues.
+
+Setting a boolean of 1 for the jam_host attribute for a particular host
+ will discard the commands for that host.
+Reset back to 0 to stop the jamming.
+
+Enable host 4 to be jammed
+echo 1 > /sys/kernel/config/target/qla2xxx/21:00:00:24:ff:27:8f:ae/tpgt_1/attrib/jam_host
+
+Disable jamming on host 4
+echo 0 > /sys/kernel/config/target/qla2xxx/21:00:00:24:ff:27:8f:ae/tpgt_1/attrib/jam_host
* Unmerged path drivers/scsi/qla2xxx/Kconfig
* Unmerged path drivers/scsi/qla2xxx/tcm_qla2xxx.c
* Unmerged path drivers/scsi/qla2xxx/tcm_qla2xxx.h
