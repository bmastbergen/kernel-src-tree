sysctl: kdoc'ify sysctl_writes_strict

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Luis R. Rodriguez <mcgrof@kernel.org>
commit a19ac3374995382a994653ff372b98ea7cbad548
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a19ac337.failed

Document the different sysctl_writes_strict modes in code.

Link: http://lkml.kernel.org/r/20170519033554.18592-3-mcgrof@kernel.org
	Signed-off-by: Luis R. Rodriguez <mcgrof@kernel.org>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: "Eric W. Biederman" <ebiederm@xmission.com>
	Cc: Alexey Dobriyan <adobriyan@gmail.com>
	Cc: Kees Cook <keescook@chromium.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit a19ac3374995382a994653ff372b98ea7cbad548)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sysctl.c
diff --cc kernel/sysctl.c
index a652717610c7,02725178694a..000000000000
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@@ -172,6 -173,34 +172,37 @@@ extern int no_unaligned_warning
  #endif
  
  #ifdef CONFIG_PROC_SYSCTL
++<<<<<<< HEAD
++=======
+ 
+ /**
+  * enum sysctl_writes_mode - supported sysctl write modes
+  *
+  * @SYSCTL_WRITES_LEGACY: each write syscall must fully contain the sysctl value
+  * 	to be written, and multiple writes on the same sysctl file descriptor
+  * 	will rewrite the sysctl value, regardless of file position. No warning
+  * 	is issued when the initial position is not 0.
+  * @SYSCTL_WRITES_WARN: same as above but warn when the initial file position is
+  * 	not 0.
+  * @SYSCTL_WRITES_STRICT: writes to numeric sysctl entries must always be at
+  * 	file position 0 and the value must be fully contained in the buffer
+  * 	sent to the write syscall. If dealing with strings respect the file
+  * 	position, but restrict this to the max length of the buffer, anything
+  * 	passed the max lenght will be ignored. Multiple writes will append
+  * 	to the buffer.
+  *
+  * These write modes control how current file position affects the behavior of
+  * updating sysctl values through the proc interface on each write.
+  */
+ enum sysctl_writes_mode {
+ 	SYSCTL_WRITES_LEGACY		= -1,
+ 	SYSCTL_WRITES_WARN		= 0,
+ 	SYSCTL_WRITES_STRICT		= 1,
+ };
+ 
+ static enum sysctl_writes_mode sysctl_writes_strict = SYSCTL_WRITES_STRICT;
+ 
++>>>>>>> a19ac3374995 (sysctl: kdoc'ify sysctl_writes_strict)
  static int proc_do_cad_pid(struct ctl_table *table, int write,
  		  void __user *buffer, size_t *lenp, loff_t *ppos);
  static int proc_taint(struct ctl_table *table, int write,
* Unmerged path kernel/sysctl.c
