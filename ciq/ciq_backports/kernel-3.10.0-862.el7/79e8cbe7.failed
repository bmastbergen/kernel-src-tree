netvsc: add some rtnl_dereference annotations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author stephen hemminger <stephen@networkplumber.org>
commit 79e8cbe7a789a0863cc6cd874872b4dd63ec5947
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/79e8cbe7.failed

In a couple places RTNL is held, and the netvsc_device pointer
is acquired without annotation.

	Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 79e8cbe7a789a0863cc6cd874872b4dd63ec5947)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc.c
index 3170ba757106,e202ec5d6f63..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -575,7 -549,9 +575,13 @@@ void netvsc_device_remove(struct hv_dev
  {
  	struct net_device *ndev = hv_get_drvdata(device);
  	struct net_device_context *net_device_ctx = netdev_priv(ndev);
++<<<<<<< HEAD
 +	struct netvsc_device *net_device = net_device_ctx->nvdev;
++=======
+ 	struct netvsc_device *net_device
+ 		= rtnl_dereference(net_device_ctx->nvdev);
+ 	int i;
++>>>>>>> 79e8cbe7a789 (netvsc: add some rtnl_dereference annotations)
  
  	netvsc_disconnect_vsp(device);
  
diff --cc drivers/net/hyperv/netvsc_drv.c
index d4dc9c189b85,e8e82a6a4b1a..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -1570,30 -1580,24 +1570,35 @@@ static int netvsc_remove(struct hv_devi
  
  	ndev_ctx = netdev_priv(net);
  
 -	netif_device_detach(net);
 -
 -	cancel_delayed_work_sync(&ndev_ctx->dwork);
 -
 -	/*
 -	 * Call to the vsc driver to let it know that the device is being
 -	 * removed. Also blocks mtu and channel changes.
 +	/* Avoid racing with netvsc_change_mtu()/netvsc_set_channels()
 +	 * removing the device.
  	 */
  	rtnl_lock();
++<<<<<<< HEAD
 +	ndev_ctx->start_remove = true;
++=======
+ 	rndis_filter_device_remove(dev,
+ 				   rtnl_dereference(ndev_ctx->nvdev));
++>>>>>>> 79e8cbe7a789 (netvsc: add some rtnl_dereference annotations)
  	rtnl_unlock();
  
 +	cancel_delayed_work_sync(&ndev_ctx->dwork);
 +	cancel_work_sync(&ndev_ctx->work);
 +
 +	/* Stop outbound asap */
 +	netif_tx_disable(net);
 +
  	unregister_netdev(net);
  
 +	/*
 +	 * Call to the vsc driver to let it know that the device is being
 +	 * removed
 +	 */
 +	rndis_filter_device_remove(dev);
 +
  	hv_set_drvdata(dev, NULL);
  
 -	free_netdev(net);
 +	netvsc_free_netdev(net);
  	return 0;
  }
  
* Unmerged path drivers/net/hyperv/netvsc.c
* Unmerged path drivers/net/hyperv/netvsc_drv.c
