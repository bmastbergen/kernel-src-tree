i2c: use pr_fmt in the core

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [i2c] use pr_fmt in the core (Gopal Tiwari) [1456705]
Rebuild_FUZZ: 89.80%
commit-author Wolfram Sang <wsa-dev@sang-engineering.com>
commit 44239a5afd7c568047fbaba8f32fb4b4464902b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/44239a5a.failed

Now that we revisited all error messages, we can use pr_fmt for the
remaining pr_* messages to ensure consistent output.

	Signed-off-by: Wolfram Sang <wsa-dev@sang-engineering.com>
	Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
(cherry picked from commit 44239a5afd7c568047fbaba8f32fb4b4464902b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/i2c-core.c
diff --cc drivers/i2c/i2c-core.c
index f8cf59d9b563,b2b34a0a35a1..000000000000
--- a/drivers/i2c/i2c-core.c
+++ b/drivers/i2c/i2c-core.c
@@@ -22,28 -22,40 +22,38 @@@
     OF support is copyright (c) 2008 Jochen Friedrich <jochen@scram.de>
     (based on a previous patch from Jon Smirl <jonsmirl@gmail.com>) and
     (c) 2013  Wolfram Sang <wsa@the-dreams.de>
 -   I2C ACPI code Copyright (C) 2014 Intel Corp
 -   Author: Lan Tianyu <tianyu.lan@intel.com>
 -   I2C slave support (c) 2014 by Wolfram Sang <wsa@sang-engineering.com>
   */
  
++<<<<<<< HEAD
 +#include <linux/module.h>
 +#include <linux/kernel.h>
++=======
+ #define pr_fmt(fmt) "i2c-core: " fmt
+ 
+ #include <dt-bindings/i2c/i2c.h>
+ #include <asm/uaccess.h>
+ #include <linux/acpi.h>
+ #include <linux/clk/clk-conf.h>
+ #include <linux/completion.h>
++>>>>>>> 44239a5afd7c (i2c: use pr_fmt in the core)
  #include <linux/delay.h>
 -#include <linux/err.h>
  #include <linux/errno.h>
  #include <linux/gpio.h>
 -#include <linux/hardirq.h>
 +#include <linux/slab.h>
  #include <linux/i2c.h>
 -#include <linux/idr.h>
  #include <linux/init.h>
 -#include <linux/irqflags.h>
 -#include <linux/jump_label.h>
 -#include <linux/kernel.h>
 -#include <linux/module.h>
 +#include <linux/idr.h>
  #include <linux/mutex.h>
 -#include <linux/of_device.h>
  #include <linux/of.h>
 +#include <linux/of_device.h>
  #include <linux/of_irq.h>
 -#include <linux/pm_domain.h>
 -#include <linux/pm_runtime.h>
 -#include <linux/pm_wakeirq.h>
 -#include <linux/property.h>
 +#include <linux/completion.h>
 +#include <linux/hardirq.h>
 +#include <linux/irqflags.h>
  #include <linux/rwsem.h>
 -#include <linux/slab.h>
 +#include <linux/pm_runtime.h>
 +#include <linux/acpi.h>
 +#include <asm/uaccess.h>
  
  #include "i2c-core.h"
  
@@@ -1603,16 -1986,9 +1611,20 @@@ int i2c_register_driver(struct module *
  	if (res)
  		return res;
  
++<<<<<<< HEAD
 +	/* Drivers should switch to dev_pm_ops instead. */
 +	if (driver->suspend)
 +		pr_warn("i2c-core: driver [%s] using legacy suspend method\n",
 +			driver->driver.name);
 +	if (driver->resume)
 +		pr_warn("i2c-core: driver [%s] using legacy resume method\n",
 +			driver->driver.name);
 +
 +	pr_debug("i2c-core: driver [%s] registered\n", driver->driver.name);
++=======
+ 	pr_debug("driver [%s] registered\n", driver->driver.name);
++>>>>>>> 44239a5afd7c (i2c: use pr_fmt in the core)
  
 -	INIT_LIST_HEAD(&driver->clients);
  	/* Walk the adapters that are already present */
  	i2c_for_each_dev(driver, __process_new_driver);
  
* Unmerged path drivers/i2c/i2c-core.c
