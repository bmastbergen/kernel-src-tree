xen-netback: handle IPv6 TCP GSO packets from the guest

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Paul Durrant <Paul.Durrant@citrix.com>
commit a94685876859be30446357db6d6c4a9c951305b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/a9468587.failed

This patch adds a xenstore feature flag, festure-gso-tcpv6, to advertise
that netback can handle IPv6 TCP GSO packets. It creates SKB_GSO_TCPV6 skbs
if the frontend passes an extra segment with the new type
XEN_NETIF_GSO_TYPE_TCPV6 added to netif.h.

	Signed-off-by: Paul Durrant <paul.durrant@citrix.com>
	Cc: Wei Liu <wei.liu2@citrix.com>
	Cc: David Vrabel <david.vrabel@citrix.com>
	Acked-by: Ian Campbell <ian.campbell@citrix.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a94685876859be30446357db6d6c4a9c951305b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/xen-netback/xenbus.c
#	include/xen/interface/io/netif.h
diff --cc drivers/net/xen-netback/xenbus.c
index 8a9e8750703f,02cb00bebdc9..000000000000
--- a/drivers/net/xen-netback/xenbus.c
+++ b/drivers/net/xen-netback/xenbus.c
@@@ -105,6 -105,22 +105,25 @@@ static int netback_probe(struct xenbus_
  			goto abort_transaction;
  		}
  
++<<<<<<< HEAD
++=======
+ 		err = xenbus_printf(xbt, dev->nodename, "feature-gso-tcpv6",
+ 				    "%d", sg);
+ 		if (err) {
+ 			message = "writing feature-gso-tcpv6";
+ 			goto abort_transaction;
+ 		}
+ 
+ 		/* We support partial checksum setup for IPv6 packets */
+ 		err = xenbus_printf(xbt, dev->nodename,
+ 				    "feature-ipv6-csum-offload",
+ 				    "%d", 1);
+ 		if (err) {
+ 			message = "writing feature-ipv6-csum-offload";
+ 			goto abort_transaction;
+ 		}
+ 
++>>>>>>> a94685876859 (xen-netback: handle IPv6 TCP GSO packets from the guest)
  		/* We support rx-copy path. */
  		err = xenbus_printf(xbt, dev->nodename,
  				    "feature-rx-copy", "%d", 1);
diff --cc include/xen/interface/io/netif.h
index eb262e3324d2,5e766ebe77f6..000000000000
--- a/include/xen/interface/io/netif.h
+++ b/include/xen/interface/io/netif.h
@@@ -51,6 -51,20 +51,23 @@@
   */
  
  /*
++<<<<<<< HEAD
++=======
+  * "feature-no-csum-offload" should be used to turn IPv4 TCP/UDP checksum
+  * offload off or on. If it is missing then the feature is assumed to be on.
+  * "feature-ipv6-csum-offload" should be used to turn IPv6 TCP/UDP checksum
+  * offload on or off. If it is missing then the feature is assumed to be off.
+  */
+ 
+ /*
+  * "feature-gso-tcpv4" and "feature-gso-tcpv6" advertise the capability to
+  * handle large TCP packets (in IPv4 or IPv6 form respectively). Neither
+  * frontends nor backends are assumed to be capable unless the flags are
+  * present.
+  */
+ 
+ /*
++>>>>>>> a94685876859 (xen-netback: handle IPv6 TCP GSO packets from the guest)
   * This is the 'wire' format for packets:
   *  Request 1: xen_netif_tx_request  -- XEN_NETTXF_* (any flags)
   * [Request 2: xen_netif_extra_info]    (only if request 1 has XEN_NETTXF_extra_info)
diff --git a/drivers/net/xen-netback/netback.c b/drivers/net/xen-netback/netback.c
index 9039f043a913..8d2b24de0e44 100644
--- a/drivers/net/xen-netback/netback.c
+++ b/drivers/net/xen-netback/netback.c
@@ -1339,15 +1339,20 @@ static int netbk_set_skb_gso(struct xenvif *vif,
 		return -EINVAL;
 	}
 
-	/* Currently only TCPv4 S.O. is supported. */
-	if (gso->u.gso.type != XEN_NETIF_GSO_TYPE_TCPV4) {
+	switch (gso->u.gso.type) {
+	case XEN_NETIF_GSO_TYPE_TCPV4:
+		skb_shinfo(skb)->gso_type = SKB_GSO_TCPV4;
+		break;
+	case XEN_NETIF_GSO_TYPE_TCPV6:
+		skb_shinfo(skb)->gso_type = SKB_GSO_TCPV6;
+		break;
+	default:
 		netdev_err(vif->dev, "Bad GSO type %d.\n", gso->u.gso.type);
 		netbk_fatal_tx_err(vif);
 		return -EINVAL;
 	}
 
 	skb_shinfo(skb)->gso_size = gso->u.gso.size;
-	skb_shinfo(skb)->gso_type = SKB_GSO_TCPV4;
 
 	/* Header must be checked, and gso_segs computed. */
 	skb_shinfo(skb)->gso_type |= SKB_GSO_DODGY;
* Unmerged path drivers/net/xen-netback/xenbus.c
* Unmerged path include/xen/interface/io/netif.h
