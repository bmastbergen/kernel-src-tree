NFS store nfs4_deviceid in struct nfs4_filelayout_segment

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Andy Adamson <andros@netapp.com>
commit 629dc8704b922f0c46f3025bd3486c2bc51eb7a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/629dc870.failed

In preparation for moving the filelayout getdeviceinfo call from
filelayout_alloc_lseg called by pnfs_process_layout

	Signed-off-by: Andy Adamson <andros@netapp.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 629dc8704b922f0c46f3025bd3486c2bc51eb7a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/filelayout/filelayout.h
diff --cc fs/nfs/filelayout/filelayout.h
index 2896cb833a11,79323b5dab0c..000000000000
--- a/fs/nfs/filelayout/filelayout.h
+++ b/fs/nfs/filelayout/filelayout.h
@@@ -55,15 -55,16 +55,28 @@@ struct nfs4_file_layout_dsaddr 
  };
  
  struct nfs4_filelayout_segment {
++<<<<<<< HEAD
 +	struct pnfs_layout_segment generic_hdr;
 +	u32 stripe_type;
 +	u32 commit_through_mds;
 +	u32 stripe_unit;
 +	u32 first_stripe_index;
 +	u64 pattern_offset;
 +	struct nfs4_file_layout_dsaddr *dsaddr; /* Point to GETDEVINFO data */
 +	unsigned int num_fh;
 +	struct nfs_fh **fh_array;
++=======
+ 	struct pnfs_layout_segment	generic_hdr;
+ 	u32				stripe_type;
+ 	u32				commit_through_mds;
+ 	u32				stripe_unit;
+ 	u32				first_stripe_index;
+ 	u64				pattern_offset;
+ 	struct nfs4_deviceid		deviceid;
+ 	struct nfs4_file_layout_dsaddr	*dsaddr; /* Point to GETDEVINFO data */
+ 	unsigned int			num_fh;
+ 	struct nfs_fh			**fh_array;
++>>>>>>> 629dc8704b92 (NFS store nfs4_deviceid in struct nfs4_filelayout_segment)
  };
  
  struct nfs4_filelayout {
diff --git a/fs/nfs/filelayout/filelayout.c b/fs/nfs/filelayout/filelayout.c
index b859b153da3d..1a45cdf2f0a6 100644
--- a/fs/nfs/filelayout/filelayout.c
+++ b/fs/nfs/filelayout/filelayout.c
@@ -544,7 +544,6 @@ static int
 filelayout_check_layout(struct pnfs_layout_hdr *lo,
 			struct nfs4_filelayout_segment *fl,
 			struct nfs4_layoutget_res *lgr,
-			struct nfs4_deviceid *id,
 			gfp_t gfp_flags)
 {
 	struct nfs4_deviceid_node *d;
@@ -574,7 +573,7 @@ filelayout_check_layout(struct pnfs_layout_hdr *lo,
 	}
 
 	/* find and reference the deviceid */
-	d = nfs4_find_get_deviceid(NFS_SERVER(lo->plh_inode), id,
+	d = nfs4_find_get_deviceid(NFS_SERVER(lo->plh_inode), &fl->deviceid,
 			lo->plh_lc_cred, gfp_flags);
 	if (d == NULL)
 		goto out;
@@ -629,7 +628,6 @@ static int
 filelayout_decode_layout(struct pnfs_layout_hdr *flo,
 			 struct nfs4_filelayout_segment *fl,
 			 struct nfs4_layoutget_res *lgr,
-			 struct nfs4_deviceid *id,
 			 gfp_t gfp_flags)
 {
 	struct xdr_stream stream;
@@ -654,9 +652,9 @@ filelayout_decode_layout(struct pnfs_layout_hdr *flo,
 	if (unlikely(!p))
 		goto out_err;
 
-	memcpy(id, p, sizeof(*id));
+	memcpy(&fl->deviceid, p, sizeof(fl->deviceid));
 	p += XDR_QUADLEN(NFS4_DEVICEID4_SIZE);
-	nfs4_print_deviceid(id);
+	nfs4_print_deviceid(&fl->deviceid);
 
 	nfl_util = be32_to_cpup(p++);
 	if (nfl_util & NFL4_UFLG_COMMIT_THRU_MDS)
@@ -803,15 +801,14 @@ filelayout_alloc_lseg(struct pnfs_layout_hdr *layoutid,
 {
 	struct nfs4_filelayout_segment *fl;
 	int rc;
-	struct nfs4_deviceid id;
 
 	dprintk("--> %s\n", __func__);
 	fl = kzalloc(sizeof(*fl), gfp_flags);
 	if (!fl)
 		return NULL;
 
-	rc = filelayout_decode_layout(layoutid, fl, lgr, &id, gfp_flags);
-	if (rc != 0 || filelayout_check_layout(layoutid, fl, lgr, &id, gfp_flags)) {
+	rc = filelayout_decode_layout(layoutid, fl, lgr, gfp_flags);
+	if (rc != 0 || filelayout_check_layout(layoutid, fl, lgr, gfp_flags)) {
 		_filelayout_free_lseg(fl);
 		return NULL;
 	}
* Unmerged path fs/nfs/filelayout/filelayout.h
