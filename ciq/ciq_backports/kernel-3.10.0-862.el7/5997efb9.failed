x86/boot: Use memremap() to map the MPF and MPC data

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [x86] boot: Use memremap() to map the MPF and MPC data (Suravee Suthikulpanit) [1361287]
Rebuild_FUZZ: 96.00%
commit-author Tom Lendacky <thomas.lendacky@amd.com>
commit 5997efb967565e858259401af394e8449629c1f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/5997efb9.failed

The SMP MP-table is built by UEFI and placed in memory in a decrypted
state. These tables are accessed using a mix of early_memremap(),
early_memunmap(), phys_to_virt() and virt_to_phys(). Change all accesses
to use early_memremap()/early_memunmap(). This allows for proper setting
of the encryption mask so that the data can be successfully accessed when
SME is active.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Cc: Alexander Potapenko <glider@google.com>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brijesh Singh <brijesh.singh@amd.com>
	Cc: Dave Young <dyoung@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Cc: Larry Woodman <lwoodman@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Michael S. Tsirkin <mst@redhat.com>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Toshimitsu Kani <toshi.kani@hpe.com>
	Cc: kasan-dev@googlegroups.com
	Cc: kvm@vger.kernel.org
	Cc: linux-arch@vger.kernel.org
	Cc: linux-doc@vger.kernel.org
	Cc: linux-efi@vger.kernel.org
	Cc: linux-mm@kvack.org
Link: http://lkml.kernel.org/r/d9464b0d7c861021ed8f494e4a40d6cd10f1eddd.1500319216.git.thomas.lendacky@amd.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5997efb967565e858259401af394e8449629c1f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/mpparse.c
diff --cc arch/x86/kernel/mpparse.c
index fde86d2b79f8,5cbb3177ed17..000000000000
--- a/arch/x86/kernel/mpparse.c
+++ b/arch/x86/kernel/mpparse.c
@@@ -459,7 -450,8 +459,12 @@@ static int __init check_physptr(struct 
  	unsigned long size;
  
  	size = get_mpc_size(mpf->physptr);
++<<<<<<< HEAD
 +	mpc = early_ioremap(mpf->physptr, size);
++=======
+ 	mpc = early_memremap(mpf->physptr, size);
+ 
++>>>>>>> 5997efb96756 (x86/boot: Use memremap() to map the MPF and MPC data)
  	/*
  	 * Read the physical hardware table.  Anything here will
  	 * override the defaults.
@@@ -506,9 -498,12 +511,16 @@@
   */
  void __init default_get_smp_config(unsigned int early)
  {
- 	struct mpf_intel *mpf = mpf_found;
+ 	struct mpf_intel *mpf;
  
++<<<<<<< HEAD
 +	if (!mpf)
++=======
+ 	if (!smp_found_config)
+ 		return;
+ 
+ 	if (!mpf_base)
++>>>>>>> 5997efb96756 (x86/boot: Use memremap() to map the MPF and MPC data)
  		return;
  
  	if (acpi_lapic && early)
* Unmerged path arch/x86/kernel/mpparse.c
