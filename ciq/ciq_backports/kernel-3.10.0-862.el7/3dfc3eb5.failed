i40evf: hide unused variable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit 3dfc3eb581645bc503c7940861f494a0d75615da
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/3dfc3eb5.failed

On architectures with larger pages, we get a warning about an unused variable:

drivers/net/ethernet/intel/i40evf/i40evf_main.c: In function 'i40evf_configure_rx':
drivers/net/ethernet/intel/i40evf/i40evf_main.c:690:21: error: unused variable 'netdev' [-Werror=unused-variable]

This moves the declaration into the #ifdef to avoid the warning.

Fixes: dab86afdbbd1 ("i40e/i40evf: Change the way we limit the maximum frame size for Rx")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Acked-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 3dfc3eb581645bc503c7940861f494a0d75615da)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40evf/i40evf_main.c
diff --cc drivers/net/ethernet/intel/i40evf/i40evf_main.c
index 92233e4beca5,ea110a730e16..000000000000
--- a/drivers/net/ethernet/intel/i40evf/i40evf_main.c
+++ b/drivers/net/ethernet/intel/i40evf/i40evf_main.c
@@@ -693,12 -693,39 +693,40 @@@ static void i40evf_configure_tx(struct 
   **/
  static void i40evf_configure_rx(struct i40evf_adapter *adapter)
  {
++<<<<<<< HEAD
 +	struct i40e_hw *hw = &adapter->hw;
 +	int i;
 +
++=======
+ 	unsigned int rx_buf_len = I40E_RXBUFFER_2048;
+ 	struct i40e_hw *hw = &adapter->hw;
+ 	int i;
+ 
+ 	/* Legacy Rx will always default to a 2048 buffer size. */
+ #if (PAGE_SIZE < 8192)
+ 	if (!(adapter->flags & I40EVF_FLAG_LEGACY_RX)) {
+ 		struct net_device *netdev = adapter->netdev;
+ 
+ 		/* For jumbo frames on systems with 4K pages we have to use
+ 		 * an order 1 page, so we might as well increase the size
+ 		 * of our Rx buffer to make better use of the available space
+ 		 */
+ 		rx_buf_len = I40E_RXBUFFER_3072;
+ 
+ 		/* We use a 1536 buffer size for configurations with
+ 		 * standard Ethernet mtu.  On x86 this gives us enough room
+ 		 * for shared info and 192 bytes of padding.
+ 		 */
+ 		if (!I40E_2K_TOO_SMALL_WITH_PADDING &&
+ 		    (netdev->mtu <= ETH_DATA_LEN))
+ 			rx_buf_len = I40E_RXBUFFER_1536 - NET_IP_ALIGN;
+ 	}
+ #endif
+ 
++>>>>>>> 3dfc3eb58164 (i40evf: hide unused variable)
  	for (i = 0; i < adapter->num_active_queues; i++) {
  		adapter->rx_rings[i].tail = hw->hw_addr + I40E_QRX_TAIL1(i);
 -		adapter->rx_rings[i].rx_buf_len = rx_buf_len;
 -
 -		if (adapter->flags & I40EVF_FLAG_LEGACY_RX)
 -			clear_ring_build_skb_enabled(&adapter->rx_rings[i]);
 -		else
 -			set_ring_build_skb_enabled(&adapter->rx_rings[i]);
 +		adapter->rx_rings[i].rx_buf_len = I40EVF_RXBUFFER_2048;
  	}
  }
  
* Unmerged path drivers/net/ethernet/intel/i40evf/i40evf_main.c
