powerpc/perf: Export memory hierarchy info to user space

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [powerpc] perf: Export memory hierarchy info to user space (Mauricio Oliveira) [1494439]
Rebuild_FUZZ: 92.31%
commit-author Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
commit 79e96f8f930d425ab48c511f8a6db16ca7fc68b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/79e96f8f.failed

The LDST field and DATA_SRC in SIER identifies the memory hierarchy level
(eg: L1, L2 etc), from which a data-cache miss for a marked instruction
was satisfied. Use the 'perf_mem_data_src' object to export this
hierarchy level to user space.

	Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
	Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 79e96f8f930d425ab48c511f8a6db16ca7fc68b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/perf/isa207-common.c
#	arch/powerpc/perf/isa207-common.h
diff --cc arch/powerpc/perf/isa207-common.h
index 03205f5354e9,f711f337e358..000000000000
--- a/arch/powerpc/perf/isa207-common.h
+++ b/arch/powerpc/perf/isa207-common.h
@@@ -227,4 -260,27 +227,30 @@@
  #define MAX_ALT				2
  #define MAX_PMU_COUNTERS		6
  
++<<<<<<< HEAD
++=======
+ #define ISA207_SIER_TYPE_SHIFT		15
+ #define ISA207_SIER_TYPE_MASK		(0x7ull << ISA207_SIER_TYPE_SHIFT)
+ 
+ #define ISA207_SIER_LDST_SHIFT		1
+ #define ISA207_SIER_LDST_MASK		(0x7ull << ISA207_SIER_LDST_SHIFT)
+ 
+ #define ISA207_SIER_DATA_SRC_SHIFT	53
+ #define ISA207_SIER_DATA_SRC_MASK	(0x7ull << ISA207_SIER_DATA_SRC_SHIFT)
+ 
+ #define P(a, b)				PERF_MEM_S(a, b)
+ #define PH(a, b)			(P(LVL, HIT) | P(a, b))
+ #define PM(a, b)			(P(LVL, MISS) | P(a, b))
+ 
+ int isa207_get_constraint(u64 event, unsigned long *maskp, unsigned long *valp);
+ int isa207_compute_mmcr(u64 event[], int n_ev,
+ 				unsigned int hwc[], unsigned long mmcr[],
+ 				struct perf_event *pevents[]);
+ void isa207_disable_pmc(unsigned int pmc, unsigned long mmcr[]);
+ int isa207_get_alternatives(u64 event, u64 alt[],
+ 				const unsigned int ev_alt[][MAX_ALT], int size);
+ void isa207_get_mem_data_src(union perf_mem_data_src *dsrc, u32 flags,
+ 							struct pt_regs *regs);
+ 
++>>>>>>> 79e96f8f930d (powerpc/perf: Export memory hierarchy info to user space)
  #endif
* Unmerged path arch/powerpc/perf/isa207-common.c
diff --git a/arch/powerpc/include/asm/perf_event_server.h b/arch/powerpc/include/asm/perf_event_server.h
index e157489ee7a1..386a951934b1 100644
--- a/arch/powerpc/include/asm/perf_event_server.h
+++ b/arch/powerpc/include/asm/perf_event_server.h
@@ -38,6 +38,8 @@ struct power_pmu {
 				unsigned long *valp);
 	int		(*get_alternatives)(u64 event_id, unsigned int flags,
 				u64 alt[]);
+	void		(*get_mem_data_src)(union perf_mem_data_src *dsrc,
+				u32 flags, struct pt_regs *regs);
 	u64             (*bhrb_filter_map)(u64 branch_sample_type);
 	void            (*config_bhrb)(u64 pmu_bhrb_filter);
 	void		(*disable_pmc)(unsigned int pmc, unsigned long mmcr[]);
diff --git a/arch/powerpc/perf/core-book3s.c b/arch/powerpc/perf/core-book3s.c
index 7160684f9eb5..df64e052e7c9 100644
--- a/arch/powerpc/perf/core-book3s.c
+++ b/arch/powerpc/perf/core-book3s.c
@@ -2047,6 +2047,10 @@ static void record_and_restart(struct perf_event *event, unsigned long val,
 			data.br_stack = &cpuhw->bhrb_stack;
 		}
 
+		if (event->attr.sample_type & PERF_SAMPLE_DATA_SRC &&
+						ppmu->get_mem_data_src)
+			ppmu->get_mem_data_src(&data.data_src, ppmu->flags, regs);
+
 		if (perf_event_overflow(event, &data, regs))
 			power_pmu_stop(event, 0);
 	}
* Unmerged path arch/powerpc/perf/isa207-common.c
* Unmerged path arch/powerpc/perf/isa207-common.h
