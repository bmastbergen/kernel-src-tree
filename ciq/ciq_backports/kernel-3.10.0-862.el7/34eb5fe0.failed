arp: fixed error in a comment

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Ihar Hrachyshka <ihrachys@redhat.com>
commit 34eb5fe07831458cf8238d54c1fc847dedeaf68c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/34eb5fe0.failed

the is_garp code deals just with gratuitous ARP packets, not every
unsolicited packet.

This patch is a result of a discussion in netdev:
http://marc.info/?l=linux-netdev&m=149506354216994

	Suggested-by: Julian Anastasov <ja@ssi.bg>
	Signed-off-by: Ihar Hrachyshka <ihrachys@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 34eb5fe07831458cf8238d54c1fc847dedeaf68c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/arp.c
diff --cc net/ipv4/arp.c
index 98def2add661,053492af8a6e..000000000000
--- a/net/ipv4/arp.c
+++ b/net/ipv4/arp.c
@@@ -919,10 -844,22 +919,29 @@@ static int arp_process(struct sock *sk
  		   It is possible, that this option should be enabled for some
  		   devices (strip is candidate)
  		 */
++<<<<<<< HEAD
 +		if (n == NULL &&
 +		    (arp->ar_op == htons(ARPOP_REPLY) ||
 +		     (arp->ar_op == htons(ARPOP_REQUEST) && tip == sip)) &&
 +		    inet_addr_type(net, sip) == RTN_UNICAST)
++=======
+ 		is_garp = tip == sip && addr_type == RTN_UNICAST;
+ 
+ 		/* Gratuitous ARP _replies_ also require target hwaddr to be
+ 		 * the same as source.
+ 		 */
+ 		if (is_garp && arp->ar_op == htons(ARPOP_REPLY))
+ 			is_garp =
+ 				/* IPv4 over IEEE 1394 doesn't provide target
+ 				 * hardware address field in its ARP payload.
+ 				 */
+ 				tha &&
+ 				!memcmp(tha, sha, dev->addr_len);
+ 
+ 		if (!n &&
+ 		    ((arp->ar_op == htons(ARPOP_REPLY)  &&
+ 				addr_type == RTN_UNICAST) || is_garp))
++>>>>>>> 34eb5fe07831 (arp: fixed error in a comment)
  			n = __neigh_lookup(&arp_tbl, &sip, dev, 1);
  	}
  
* Unmerged path net/ipv4/arp.c
