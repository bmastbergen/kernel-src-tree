net/mlx5e: Maximize ip tunnel key usage on the TC offloading path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [infiniband] lx5e: Maximize ip tunnel key usage on the TC offloading path (Don Dutile) [1385309 1385649 1386645 1409099 1456667 1456687]
Rebuild_FUZZ: 96.00%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit 9a941117fb761dcfb4f698f1f67340484b781b90
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/9a941117.failed

Use more fields out of the tunnel key (e.g the tunnel source IP address)
provided by upper layers for the route lookup done on the encap offload path.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Reviewed-by: Hadar Hen Zion <hadarh@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
(cherry picked from commit 9a941117fb761dcfb4f698f1f67340484b781b90)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index bc3738eb176f,3d0dbfb018ca..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -708,13 -684,10 +708,12 @@@ static int mlx5e_route_lookup_ipv4(stru
  				   struct net_device **out_dev,
  				   struct flowi4 *fl4,
  				   struct neighbour **out_n,
- 				   __be32 *saddr,
  				   int *out_ttl)
  {
 +	struct mlx5_eswitch *esw = priv->mdev->priv.eswitch;
  	struct rtable *rt;
  	struct neighbour *n = NULL;
 +	int ttl;
  
  #if IS_ENABLED(CONFIG_INET)
  	int ret;
@@@ -739,8 -713,7 +738,12 @@@
  		return -ENOMEM;
  
  	*out_n = n;
++<<<<<<< HEAD
 +	*saddr = fl4->saddr;
 +	*out_ttl = ttl;
++=======
+ 	*out_dev = rt->dst.dev;
++>>>>>>> 9a941117fb76 (net/mlx5e: Maximize ip tunnel key usage on the TC offloading path)
  
  	return 0;
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
