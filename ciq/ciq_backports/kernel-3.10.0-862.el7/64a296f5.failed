IB/hfi1: Use host_link_state to read state when DC is shut down

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
commit-author Bartlomiej Dudek <bartlomiej.dudek@intel.com>
commit 64a296f579303322ebec9edae09cf87240b1ad78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/64a296f5.failed

When DC is shut down (by e.g.  disconnecting the cable), the
driver should use host_link_state to get port's current
physical state. This is due to the fact that physical state
is read from DC's CSRs and when DC is shut down and state is
changed, its registers are not impacted.

	Reviewed-by: Jakub Byczkowski <jakub.byczkowski@intel.com>
	Signed-off-by: Bartlomiej Dudek <bartlomiej.dudek@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 64a296f579303322ebec9edae09cf87240b1ad78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/hfi.h
diff --cc drivers/infiniband/hw/hfi1/hfi.h
index 9719cf207532,728ed457e447..000000000000
--- a/drivers/infiniband/hw/hfi1/hfi.h
+++ b/drivers/infiniband/hw/hfi1/hfi.h
@@@ -1314,19 -1294,27 +1314,33 @@@ static inline __le32 *get_rhf_addr(stru
  
  int hfi1_reset_device(int);
  
 -/* return the driver's idea of the physical OPA port state */
 -static inline u32 driver_pstate(struct hfi1_pportdata *ppd)
 +/* return the driver's idea of the logical OPA port state */
 +static inline u32 driver_lstate(struct hfi1_pportdata *ppd)
  {
  	/*
++<<<<<<< HEAD
 +	 * The driver does some processing from the time the logical
 +	 * link state is at INIT to the time the SM can be notified
 +	 * as such. Return IB_PORT_DOWN until the software state
 +	 * is ready.
++=======
+ 	 * When DC is shut down and state is changed, its CSRs are not
+ 	 * impacted, therefore host_link_state should be used to get
+ 	 * current physical state.
+ 	 */
+ 	if (ppd->dd->dc_shutdown)
+ 		return driver_physical_state(ppd);
+ 	/*
+ 	 * The driver does some processing from the time the physical
+ 	 * link state is at LINKUP to the time the SM can be notified
+ 	 * as such. Return IB_PORTPHYSSTATE_TRAINING until the software
+ 	 * state is ready.
++>>>>>>> 64a296f57930 (IB/hfi1: Use host_link_state to read state when DC is shut down)
  	 */
 -	if (ppd->pstate == PLS_LINKUP &&
 -	    !(ppd->host_link_state & HLS_UP))
 -		return IB_PORTPHYSSTATE_TRAINING;
 +	if (ppd->lstate == IB_PORT_INIT && !(ppd->host_link_state & HLS_UP))
 +		return IB_PORT_DOWN;
  	else
 -		return chip_to_opa_pstate(ppd->dd, ppd->pstate);
 +		return ppd->lstate;
  }
  
  void receive_interrupt_work(struct work_struct *work);
* Unmerged path drivers/infiniband/hw/hfi1/hfi.h
