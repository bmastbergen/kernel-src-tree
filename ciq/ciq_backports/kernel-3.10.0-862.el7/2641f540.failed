ACPICA: Fix divergences of the commit - ACPICA: Expose OSI version.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-862.el7
Rebuild_CHGLOG: - [acpi] acpica: fix divergences of the commit - acpica: Expose OSI version (Jeremy McNicoll) [1172010]
Rebuild_FUZZ: 99.25%
commit-author Lv Zheng <lv.zheng@intel.com>
commit 2641f540800b47a1b9e9d8ce9d682fc15df088e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-862.el7/2641f540.failed

The original commit 242b2287cd7f27521c8b54a4101d569e53e7a0ca "ACPICA:
expose OSI version" triggers build errors in ACPICA when it is back
ported.  The patch removes the divergences between Linux and upstream
ACPICA resulting from that.

	Signed-off-by: Lv Zheng <lv.zheng@intel.com>
	Signed-off-by: Bob Moore <robert.moore@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 2641f540800b47a1b9e9d8ce9d682fc15df088e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpica/utglobal.c
#	include/acpi/actypes.h
diff --cc drivers/acpi/acpica/utglobal.c
index 48955b89c256,d6f26bf8a062..000000000000
--- a/drivers/acpi/acpica/utglobal.c
+++ b/drivers/acpi/acpica/utglobal.c
@@@ -239,6 -239,141 +239,144 @@@ struct acpi_fixed_event_info acpi_gbl_f
  };
  #endif				/* !ACPI_REDUCED_HARDWARE */
  
++<<<<<<< HEAD
++=======
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_ut_init_globals
+  *
+  * PARAMETERS:  None
+  *
+  * RETURN:      Status
+  *
+  * DESCRIPTION: Initialize ACPICA globals. All globals that require specific
+  *              initialization should be initialized here. This allows for
+  *              a warm restart.
+  *
+  ******************************************************************************/
+ 
+ acpi_status acpi_ut_init_globals(void)
+ {
+ 	acpi_status status;
+ 	u32 i;
+ 
+ 	ACPI_FUNCTION_TRACE(ut_init_globals);
+ 
+ 	/* Create all memory caches */
+ 
+ 	status = acpi_ut_create_caches();
+ 	if (ACPI_FAILURE(status)) {
+ 		return_ACPI_STATUS(status);
+ 	}
+ 
+ 	/* Address Range lists */
+ 
+ 	for (i = 0; i < ACPI_ADDRESS_RANGE_MAX; i++) {
+ 		acpi_gbl_address_range_list[i] = NULL;
+ 	}
+ 
+ 	/* Mutex locked flags */
+ 
+ 	for (i = 0; i < ACPI_NUM_MUTEX; i++) {
+ 		acpi_gbl_mutex_info[i].mutex = NULL;
+ 		acpi_gbl_mutex_info[i].thread_id = ACPI_MUTEX_NOT_ACQUIRED;
+ 		acpi_gbl_mutex_info[i].use_count = 0;
+ 	}
+ 
+ 	for (i = 0; i < ACPI_NUM_OWNERID_MASKS; i++) {
+ 		acpi_gbl_owner_id_mask[i] = 0;
+ 	}
+ 
+ 	/* Last owner_ID is never valid */
+ 
+ 	acpi_gbl_owner_id_mask[ACPI_NUM_OWNERID_MASKS - 1] = 0x80000000;
+ 
+ #if (!ACPI_REDUCED_HARDWARE)
+ 
+ 	/* GPE support */
+ 
+ 	acpi_gbl_all_gpes_initialized = FALSE;
+ 	acpi_gbl_gpe_xrupt_list_head = NULL;
+ 	acpi_gbl_gpe_fadt_blocks[0] = NULL;
+ 	acpi_gbl_gpe_fadt_blocks[1] = NULL;
+ 	acpi_current_gpe_count = 0;
+ 
+ 	acpi_gbl_global_event_handler = NULL;
+ 
+ #endif				/* !ACPI_REDUCED_HARDWARE */
+ 
+ 	/* Global handlers */
+ 
+ 	acpi_gbl_global_notify[0].handler = NULL;
+ 	acpi_gbl_global_notify[1].handler = NULL;
+ 	acpi_gbl_exception_handler = NULL;
+ 	acpi_gbl_init_handler = NULL;
+ 	acpi_gbl_table_handler = NULL;
+ 	acpi_gbl_interface_handler = NULL;
+ 
+ 	/* Global Lock support */
+ 
+ 	acpi_gbl_global_lock_semaphore = NULL;
+ 	acpi_gbl_global_lock_mutex = NULL;
+ 	acpi_gbl_global_lock_acquired = FALSE;
+ 	acpi_gbl_global_lock_handle = 0;
+ 	acpi_gbl_global_lock_present = FALSE;
+ 
+ 	/* Miscellaneous variables */
+ 
+ 	acpi_gbl_DSDT = NULL;
+ 	acpi_gbl_cm_single_step = FALSE;
+ 	acpi_gbl_db_terminate_threads = FALSE;
+ 	acpi_gbl_shutdown = FALSE;
+ 	acpi_gbl_ns_lookup_count = 0;
+ 	acpi_gbl_ps_find_count = 0;
+ 	acpi_gbl_acpi_hardware_present = TRUE;
+ 	acpi_gbl_last_owner_id_index = 0;
+ 	acpi_gbl_next_owner_id_offset = 0;
+ 	acpi_gbl_trace_method_name = 0;
+ 	acpi_gbl_trace_dbg_level = 0;
+ 	acpi_gbl_trace_dbg_layer = 0;
+ 	acpi_gbl_debugger_configuration = DEBUGGER_THREADING;
+ 	acpi_gbl_db_output_flags = ACPI_DB_CONSOLE_OUTPUT;
+ 	acpi_gbl_osi_mutex = NULL;
+ 	acpi_gbl_reg_methods_executed = FALSE;
+ 
+ 	/* Hardware oriented */
+ 
+ 	acpi_gbl_events_initialized = FALSE;
+ 	acpi_gbl_system_awake_and_running = TRUE;
+ 
+ 	/* Namespace */
+ 
+ 	acpi_gbl_module_code_list = NULL;
+ 	acpi_gbl_root_node = NULL;
+ 	acpi_gbl_root_node_struct.name.integer = ACPI_ROOT_NAME;
+ 	acpi_gbl_root_node_struct.descriptor_type = ACPI_DESC_TYPE_NAMED;
+ 	acpi_gbl_root_node_struct.type = ACPI_TYPE_DEVICE;
+ 	acpi_gbl_root_node_struct.parent = NULL;
+ 	acpi_gbl_root_node_struct.child = NULL;
+ 	acpi_gbl_root_node_struct.peer = NULL;
+ 	acpi_gbl_root_node_struct.object = NULL;
+ 
+ #ifdef ACPI_DISASSEMBLER
+ 	acpi_gbl_external_list = NULL;
+ 	acpi_gbl_num_external_methods = 0;
+ 	acpi_gbl_resolved_external_methods = 0;
+ #endif
+ 
+ #ifdef ACPI_DEBUG_OUTPUT
+ 	acpi_gbl_lowest_stack_pointer = ACPI_CAST_PTR(acpi_size, ACPI_SIZE_MAX);
+ #endif
+ 
+ #ifdef ACPI_DBG_TRACK_ALLOCATIONS
+ 	acpi_gbl_display_final_mem_stats = FALSE;
+ 	acpi_gbl_disable_mem_tracking = FALSE;
+ #endif
+ 
+ 	return_ACPI_STATUS(AE_OK);
+ }
+ 
++>>>>>>> 2641f540800b (ACPICA: Fix divergences of the commit - ACPICA: Expose OSI version.)
  /* Public globals */
  
  ACPI_EXPORT_SYMBOL(acpi_gbl_FADT)
diff --cc include/acpi/actypes.h
index 50e47dab668a,b748aefce929..000000000000
--- a/include/acpi/actypes.h
+++ b/include/acpi/actypes.h
@@@ -1206,10 -1163,5 +1218,13 @@@ struct acpi_memory_list 
  #define ACPI_OSI_WIN_VISTA_SP2          0x0A
  #define ACPI_OSI_WIN_7                  0x0B
  #define ACPI_OSI_WIN_8                  0x0C
 +#define ACPI_OSI_WIN_10                 0x0D
 +
++<<<<<<< HEAD
 +/* Definitions of getopt */
 +
 +#define ACPI_OPT_END                    -1
  
++=======
++>>>>>>> 2641f540800b (ACPICA: Fix divergences of the commit - ACPICA: Expose OSI version.)
  #endif				/* __ACTYPES_H__ */
diff --git a/drivers/acpi/acpica/acglobal.h b/drivers/acpi/acpica/acglobal.h
index 09046449f2c3..11fd743f1e25 100644
--- a/drivers/acpi/acpica/acglobal.h
+++ b/drivers/acpi/acpica/acglobal.h
@@ -155,6 +155,12 @@ u8 ACPI_INIT_GLOBAL(acpi_gbl_disable_auto_repair, FALSE);
  */
 u8 ACPI_INIT_GLOBAL(acpi_gbl_disable_ssdt_table_install, FALSE);
 
+/*
+ * We keep track of the latest version of Windows that has been requested by
+ * the BIOS.
+ */
+u8 ACPI_INIT_GLOBAL(acpi_gbl_osi_data, 0);
+
 /* acpi_gbl_FADT is a local copy of the FADT, converted to a common format. */
 
 struct acpi_table_fadt acpi_gbl_FADT;
@@ -302,7 +308,6 @@ ACPI_EXTERN u8 acpi_gbl_debugger_configuration;
 ACPI_EXTERN u8 acpi_gbl_step_to_next_call;
 ACPI_EXTERN u8 acpi_gbl_acpi_hardware_present;
 ACPI_EXTERN u8 acpi_gbl_events_initialized;
-ACPI_EXTERN u8 acpi_gbl_osi_data;
 ACPI_EXTERN struct acpi_interface_info *acpi_gbl_supported_interfaces;
 ACPI_EXTERN struct acpi_address_range
     *acpi_gbl_address_range_list[ACPI_ADDRESS_RANGE_MAX];
* Unmerged path drivers/acpi/acpica/utglobal.c
* Unmerged path include/acpi/actypes.h
