futex: Replace pointless printk in fixup_owner()

jira LE-1907
cve CVE-2021-3347
Rebuild_History Non-Buildable kernel-3.10.0-1160.31.1.el7
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 04b79c55201f02ffd675e1231d731365e335c307
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-1160.31.1.el7/04b79c55.failed

If that unexpected case of inconsistent arguments ever happens then the
futex state is left completely inconsistent and the printk is not really
helpful. Replace it with a warning and make the state consistent.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: stable@vger.kernel.org
(cherry picked from commit 04b79c55201f02ffd675e1231d731365e335c307)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/futex.c
diff --cc kernel/futex.c
index 877831775d7a,5dc8f893d523..000000000000
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@@ -2060,16 -2550,12 +2060,21 @@@ static int fixup_owner(u32 __user *uadd
  
  	/*
  	 * Paranoia check. If we did not take the lock, then we should not be
- 	 * the owner of the rt_mutex.
+ 	 * the owner of the rt_mutex. Warn and establish consistent state.
  	 */
++<<<<<<< HEAD
 +	if (rt_mutex_owner(&q->pi_state->pi_mutex) == current)
 +		printk(KERN_ERR "fixup_owner: ret = %d pi-mutex: %p "
 +				"pi-state %p\n", ret,
 +				q->pi_state->pi_mutex.owner,
 +				q->pi_state->owner);
++=======
+ 	if (WARN_ON_ONCE(rt_mutex_owner(&q->pi_state->pi_mutex) == current))
+ 		return fixup_pi_state_owner(uaddr, q, current);
++>>>>>>> 04b79c55201f (futex: Replace pointless printk in fixup_owner())
  
 -	return 0;
 +out:
 +	return ret ? ret : locked;
  }
  
  /**
* Unmerged path kernel/futex.c
