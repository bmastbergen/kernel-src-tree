powerpc: bpf: Use correct mask while accessing the VLAN tag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] bpf: Use correct mask while accessing the VLAN tag (Don Zickus) [1127366]
Rebuild_FUZZ: 91.74%
commit-author Denis Kirjanov <kda@linux-powerpc.org>
commit 3fc60aa097b8eb0f701c5bf755bc8f7d3ffeb0bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/3fc60aa0.failed

To get a full tag (and not just a VID) we should access the TCI
except the VLAN_TAG_PRESENT field (which means that 802.1q header
is present). Also ensure that the VLAN_TAG_PRESENT stay on its place

	Signed-off-by: Denis Kirjanov <kda@linux-powerpc.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3fc60aa097b8eb0f701c5bf755bc8f7d3ffeb0bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/net/bpf_jit_comp.c
diff --cc arch/powerpc/net/bpf_jit_comp.c
index 9e212f9c1d48,892167b0a4bc..000000000000
--- a/arch/powerpc/net/bpf_jit_comp.c
+++ b/arch/powerpc/net/bpf_jit_comp.c
@@@ -368,18 -382,20 +368,25 @@@ static int bpf_jit_build_body(struct sk
  			PPC_LWZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
  							  mark));
  			break;
 -		case BPF_ANC | SKF_AD_RXHASH:
 -			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff, hash) != 4);
 +		case BPF_S_ANC_RXHASH:
 +			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff, rxhash) != 4);
  			PPC_LWZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
 -							  hash));
 +							  rxhash));
  			break;
 -		case BPF_ANC | SKF_AD_VLAN_TAG:
 -		case BPF_ANC | SKF_AD_VLAN_TAG_PRESENT:
 +		case BPF_S_ANC_VLAN_TAG:
 +		case BPF_S_ANC_VLAN_TAG_PRESENT:
  			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff, vlan_tci) != 2);
+ 			BUILD_BUG_ON(VLAN_TAG_PRESENT != 0x1000);
+ 
  			PPC_LHZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
  							  vlan_tci));
++<<<<<<< HEAD
 +			if (filter[i].code == BPF_S_ANC_VLAN_TAG)
 +				PPC_ANDI(r_A, r_A, VLAN_VID_MASK);
++=======
+ 			if (code == (BPF_ANC | SKF_AD_VLAN_TAG))
+ 				PPC_ANDI(r_A, r_A, ~VLAN_TAG_PRESENT);
++>>>>>>> 3fc60aa097b8 (powerpc: bpf: Use correct mask while accessing the VLAN tag)
  			else
  				PPC_ANDI(r_A, r_A, VLAN_TAG_PRESENT);
  			break;
* Unmerged path arch/powerpc/net/bpf_jit_comp.c
