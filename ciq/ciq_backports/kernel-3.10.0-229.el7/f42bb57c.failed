cxgb4i : Fix -Wunused-function warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [scsi] cxgb4i: Fix -Wunused-function warning (Sai Vemuri) [1153834]
Rebuild_FUZZ: 98.67%
commit-author Anish Bhatt <anish@chelsio.com>
commit f42bb57c61fd21fb7e30a2b99dbeb1671666bc47
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f42bb57c.failed

A bunch of ipv6 related code is left on by default. While this causes no
compilation issues, there is no need to have this enabled by default. Guard
with an ipv6 check, which also takes care of a -Wunused-function warning.

	Signed-off-by: Anish Bhatt <anish@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f42bb57c61fd21fb7e30a2b99dbeb1671666bc47)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxgbi/libcxgbi.c
diff --cc drivers/scsi/cxgbi/libcxgbi.c
index 3d5322d59f15,54fa6e0bc1bb..000000000000
--- a/drivers/scsi/cxgbi/libcxgbi.c
+++ b/drivers/scsi/cxgbi/libcxgbi.c
@@@ -230,6 -242,40 +230,43 @@@ struct cxgbi_device *cxgbi_device_find_
  }
  EXPORT_SYMBOL_GPL(cxgbi_device_find_by_netdev);
  
++<<<<<<< HEAD
++=======
+ struct cxgbi_device *cxgbi_device_find_by_netdev_rcu(struct net_device *ndev,
+ 						     int *port)
+ {
+ 	struct net_device *vdev = NULL;
+ 	struct cxgbi_device *cdev;
+ 	int i;
+ 
+ 	if (ndev->priv_flags & IFF_802_1Q_VLAN) {
+ 		vdev = ndev;
+ 		ndev = vlan_dev_real_dev(ndev);
+ 		pr_info("vlan dev %s -> %s.\n", vdev->name, ndev->name);
+ 	}
+ 
+ 	rcu_read_lock();
+ 	list_for_each_entry_rcu(cdev, &cdev_rcu_list, rcu_node) {
+ 		for (i = 0; i < cdev->nports; i++) {
+ 			if (ndev == cdev->ports[i]) {
+ 				cdev->hbas[i]->vdev = vdev;
+ 				rcu_read_unlock();
+ 				if (port)
+ 					*port = i;
+ 				return cdev;
+ 			}
+ 		}
+ 	}
+ 	rcu_read_unlock();
+ 
+ 	log_debug(1 << CXGBI_DBG_DEV,
+ 		  "ndev 0x%p, %s, NO match found.\n", ndev, ndev->name);
+ 	return NULL;
+ }
+ EXPORT_SYMBOL_GPL(cxgbi_device_find_by_netdev_rcu);
+ 
+ #if IS_ENABLED(CONFIG_IPV6)
++>>>>>>> f42bb57c61fd (cxgb4i : Fix -Wunused-function warning)
  static struct cxgbi_device *cxgbi_device_find_by_mac(struct net_device *ndev,
  						     int *port)
  {
diff --git a/drivers/scsi/cxgbi/cxgb4i/cxgb4i.c b/drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
index 7f7833819b99..9beb130dc7ff 100644
--- a/drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
+++ b/drivers/scsi/cxgbi/cxgb4i/cxgb4i.c
@@ -304,6 +304,7 @@ static void send_act_open_req(struct cxgbi_sock *csk, struct sk_buff *skb,
 	cxgb4_l2t_send(csk->cdev->ports[csk->port_id], skb, csk->l2t);
 }
 
+#if IS_ENABLED(CONFIG_IPV6)
 static void send_act_open_req6(struct cxgbi_sock *csk, struct sk_buff *skb,
 			       struct l2t_entry *e)
 {
@@ -389,6 +390,7 @@ static void send_act_open_req6(struct cxgbi_sock *csk, struct sk_buff *skb,
 
 	cxgb4_l2t_send(csk->cdev->ports[csk->port_id], skb, csk->l2t);
 }
+#endif
 
 static void send_close_req(struct cxgbi_sock *csk)
 {
@@ -826,9 +828,11 @@ static void csk_act_open_retry_timer(unsigned long data)
 	if (csk->csk_family == AF_INET) {
 		send_act_open_func = send_act_open_req;
 		skb = alloc_wr(size, 0, GFP_ATOMIC);
+#if IS_ENABLED(CONFIG_IPV6)
 	} else {
 		send_act_open_func = send_act_open_req6;
 		skb = alloc_wr(size6, 0, GFP_ATOMIC);
+#endif
 	}
 
 	if (!skb)
@@ -1380,8 +1384,10 @@ static int init_act_open(struct cxgbi_sock *csk)
 
 	if (csk->csk_family == AF_INET)
 		skb = alloc_wr(size, 0, GFP_NOIO);
+#if IS_ENABLED(CONFIG_IPV6)
 	else
 		skb = alloc_wr(size6, 0, GFP_NOIO);
+#endif
 
 	if (!skb)
 		goto rel_resource;
@@ -1415,8 +1421,10 @@ static int init_act_open(struct cxgbi_sock *csk)
 	cxgbi_sock_set_state(csk, CTP_ACTIVE_OPEN);
 	if (csk->csk_family == AF_INET)
 		send_act_open_req(csk, skb, csk->l2t);
+#if IS_ENABLED(CONFIG_IPV6)
 	else
 		send_act_open_req6(csk, skb, csk->l2t);
+#endif
 	neigh_release(n);
 
 	return 0;
* Unmerged path drivers/scsi/cxgbi/libcxgbi.c
