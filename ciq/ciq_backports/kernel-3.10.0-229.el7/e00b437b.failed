netfilter: connlimit: move lock array out of struct connlimit_data

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Florian Westphal <fw@strlen.de>
commit e00b437b3d6d4d26ecd95108b575ee1bcfcb478f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e00b437b.failed

Eric points out that the locks can be global.
Moreover, both Jesper and Eric note that using only 32 locks increases
false sharing as only two cache lines are used.

This increases locks to 256 (16 cache lines assuming 64byte cacheline and
4 bytes per spinlock).

	Suggested-by: Jesper Dangaard Brouer <brouer@redhat.com>
	Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit e00b437b3d6d4d26ecd95108b575ee1bcfcb478f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/xt_connlimit.c
diff --cc net/netfilter/xt_connlimit.c
index 458464e7bd7a,fbc66bb250d5..000000000000
--- a/net/netfilter/xt_connlimit.c
+++ b/net/netfilter/xt_connlimit.c
@@@ -377,9 -384,6 +384,12 @@@ static int connlimit_mt_check(const str
  		return -ENOMEM;
  	}
  
++<<<<<<< HEAD
 +	for (i = 0; i < ARRAY_SIZE(info->data->locks); ++i)
 +		spin_lock_init(&info->data->locks[i]);
 +
++=======
++>>>>>>> e00b437b3d6d (netfilter: connlimit: move lock array out of struct connlimit_data)
  	for (i = 0; i < ARRAY_SIZE(info->data->climit_root4); ++i)
  		info->data->climit_root4[i] = RB_ROOT;
  	for (i = 0; i < ARRAY_SIZE(info->data->climit_root6); ++i)
* Unmerged path net/netfilter/xt_connlimit.c
