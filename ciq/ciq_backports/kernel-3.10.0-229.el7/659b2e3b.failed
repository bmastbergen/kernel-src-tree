block: Convert last uses of __FUNCTION__ to __func__

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] Convert last uses of __FUNCTION__ to __func__ (Don Zickus) [1127366]
Rebuild_FUZZ: 92.78%
commit-author Joe Perches <joe@perches.com>
commit 659b2e3bb8b149f5f7e2f8551599044b715bcc21
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/659b2e3b.failed

Just about all of these have been converted to __func__,
so convert the last uses.

	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
(cherry picked from commit 659b2e3bb8b149f5f7e2f8551599044b715bcc21)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/drbd/drbd_int.h
diff --cc drivers/block/drbd/drbd_int.h
index f943aacfdad8,b0ab358c39e6..000000000000
--- a/drivers/block/drbd/drbd_int.h
+++ b/drivers/block/drbd/drbd_int.h
@@@ -1973,16 -1862,16 +1973,21 @@@ static inline void inc_ap_pending(struc
  }
  
  #define ERR_IF_CNT_IS_NEGATIVE(which, func, line)			\
 -	if (atomic_read(&device->which) < 0)				\
 -		drbd_err(device, "in %s:%d: " #which " = %d < 0 !\n",	\
 +	if (atomic_read(&mdev->which) < 0)				\
 +		dev_err(DEV, "in %s:%d: " #which " = %d < 0 !\n",	\
  			func, line,					\
 -			atomic_read(&device->which))
 +			atomic_read(&mdev->which))
  
++<<<<<<< HEAD
 +#define dec_ap_pending(mdev) _dec_ap_pending(mdev, __FUNCTION__, __LINE__)
 +static inline void _dec_ap_pending(struct drbd_conf *mdev, const char *func, int line)
++=======
+ #define dec_ap_pending(device) _dec_ap_pending(device, __func__, __LINE__)
+ static inline void _dec_ap_pending(struct drbd_device *device, const char *func, int line)
++>>>>>>> 659b2e3bb8b1 (block: Convert last uses of __FUNCTION__ to __func__)
  {
 -	if (atomic_dec_and_test(&device->ap_pending_cnt))
 -		wake_up(&device->misc_wait);
 +	if (atomic_dec_and_test(&mdev->ap_pending_cnt))
 +		wake_up(&mdev->misc_wait);
  	ERR_IF_CNT_IS_NEGATIVE(ap_pending_cnt, func, line);
  }
  
@@@ -1992,15 -1881,15 +1997,20 @@@
   * C_SYNC_SOURCE sends P_RS_DATA_REPLY   (and expects P_WRITE_ACK with ID_SYNCER)
   *					   (or P_NEG_ACK with ID_SYNCER)
   */
 -static inline void inc_rs_pending(struct drbd_device *device)
 +static inline void inc_rs_pending(struct drbd_conf *mdev)
  {
 -	atomic_inc(&device->rs_pending_cnt);
 +	atomic_inc(&mdev->rs_pending_cnt);
  }
  
++<<<<<<< HEAD
 +#define dec_rs_pending(mdev) _dec_rs_pending(mdev, __FUNCTION__, __LINE__)
 +static inline void _dec_rs_pending(struct drbd_conf *mdev, const char *func, int line)
++=======
+ #define dec_rs_pending(device) _dec_rs_pending(device, __func__, __LINE__)
+ static inline void _dec_rs_pending(struct drbd_device *device, const char *func, int line)
++>>>>>>> 659b2e3bb8b1 (block: Convert last uses of __FUNCTION__ to __func__)
  {
 -	atomic_dec(&device->rs_pending_cnt);
 +	atomic_dec(&mdev->rs_pending_cnt);
  	ERR_IF_CNT_IS_NEGATIVE(rs_pending_cnt, func, line);
  }
  
@@@ -2013,22 -1902,22 +2023,32 @@@
   *  receive_DataRequest (receive_RSDataRequest) we need to send back P_DATA
   *  receive_Barrier_*	we need to send a P_BARRIER_ACK
   */
 -static inline void inc_unacked(struct drbd_device *device)
 +static inline void inc_unacked(struct drbd_conf *mdev)
  {
 -	atomic_inc(&device->unacked_cnt);
 +	atomic_inc(&mdev->unacked_cnt);
  }
  
++<<<<<<< HEAD
 +#define dec_unacked(mdev) _dec_unacked(mdev, __FUNCTION__, __LINE__)
 +static inline void _dec_unacked(struct drbd_conf *mdev, const char *func, int line)
++=======
+ #define dec_unacked(device) _dec_unacked(device, __func__, __LINE__)
+ static inline void _dec_unacked(struct drbd_device *device, const char *func, int line)
++>>>>>>> 659b2e3bb8b1 (block: Convert last uses of __FUNCTION__ to __func__)
  {
 -	atomic_dec(&device->unacked_cnt);
 +	atomic_dec(&mdev->unacked_cnt);
  	ERR_IF_CNT_IS_NEGATIVE(unacked_cnt, func, line);
  }
  
++<<<<<<< HEAD
 +#define sub_unacked(mdev, n) _sub_unacked(mdev, n, __FUNCTION__, __LINE__)
 +static inline void _sub_unacked(struct drbd_conf *mdev, int n, const char *func, int line)
++=======
+ #define sub_unacked(device, n) _sub_unacked(device, n, __func__, __LINE__)
+ static inline void _sub_unacked(struct drbd_device *device, int n, const char *func, int line)
++>>>>>>> 659b2e3bb8b1 (block: Convert last uses of __FUNCTION__ to __func__)
  {
 -	atomic_sub(n, &device->unacked_cnt);
 +	atomic_sub(n, &mdev->unacked_cnt);
  	ERR_IF_CNT_IS_NEGATIVE(unacked_cnt, func, line);
  }
  
* Unmerged path drivers/block/drbd/drbd_int.h
