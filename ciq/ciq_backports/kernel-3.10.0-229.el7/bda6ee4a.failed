perf tools: Add global count of opened dso objects

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf: Add global count of opened dso objects (Jiri Olsa) [1134356]
Rebuild_FUZZ: 93.62%
commit-author Jiri Olsa <jolsa@kernel.org>
commit bda6ee4a94d1e1be0c1428d37bc0d3da2e5793ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/bda6ee4a.failed

Adding global count of opened dso objects so we could
properly limit the number of opened dso data file
descriptors.

	Acked-by: Namhyung Kim <namhyung@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Jean Pihet <jean.pihet@linaro.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1401892622-30848-6-git-send-email-jolsa@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit bda6ee4a94d1e1be0c1428d37bc0d3da2e5793ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/dso.c
diff --cc tools/perf/util/dso.c
index ffd3d5ede878,76e5c13afc8f..000000000000
--- a/tools/perf/util/dso.c
+++ b/tools/perf/util/dso.c
@@@ -135,13 -137,32 +136,37 @@@ int dso__binary_type_file(struct dso *d
  	return ret;
  }
  
++<<<<<<< HEAD
 +static int open_dso(struct dso *dso, struct machine *machine)
++=======
+ /*
+  * Global list of open DSOs and the counter.
+  */
+ static LIST_HEAD(dso__data_open);
+ static long dso__data_open_cnt;
+ 
+ static void dso__list_add(struct dso *dso)
+ {
+ 	list_add_tail(&dso->data.open_entry, &dso__data_open);
+ 	dso__data_open_cnt++;
+ }
+ 
+ static void dso__list_del(struct dso *dso)
+ {
+ 	list_del(&dso->data.open_entry);
+ 	WARN_ONCE(dso__data_open_cnt <= 0,
+ 		  "DSO data fd counter out of bounds.");
+ 	dso__data_open_cnt--;
+ }
+ 
+ static int __open_dso(struct dso *dso, struct machine *machine)
++>>>>>>> bda6ee4a94d1 (perf tools: Add global count of opened dso objects)
  {
 +	char *root_dir = (char *) "";
 +	char *name;
  	int fd;
 -	char *root_dir = (char *)"";
 -	char *name = malloc(PATH_MAX);
  
 +	name = malloc(PATH_MAX);
  	if (!name)
  		return -ENOMEM;
  
* Unmerged path tools/perf/util/dso.c
