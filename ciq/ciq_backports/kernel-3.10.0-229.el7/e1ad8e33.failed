be2net: Fix invocation of be_close() after be_clear()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Kalesh AP <kalesh.purayil@emulex.com>
commit e1ad8e33d2e57ca64d9862b63d986fc296a7b876
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e1ad8e33.failed

In the EEH error recovery path, when a permanent failure occurs,
we clean up adapter structure (i.e. destroy queues etc) by calling
be_clear() and return PCI_ERS_RESULT_DISCONNECT.
After this the stack tries to remove device from bus and calls
be_remove() which invokes netdev_unregister()->be_close().
be_close() operating on destroyed queues results in a
NULL dereference.

This patch fixes this problem by introducing a flag to keep track
of the setup state.

	Signed-off-by: Kalesh AP <kalesh.purayil@emulex.com>
	Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e1ad8e33d2e57ca64d9862b63d986fc296a7b876)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/emulex/benet/be.h
diff --cc drivers/net/ethernet/emulex/benet/be.h
index eaf292cab06b,97db5a7179df..000000000000
--- a/drivers/net/ethernet/emulex/benet/be.h
+++ b/drivers/net/ethernet/emulex/benet/be.h
@@@ -368,10 -372,12 +368,15 @@@ enum vf_state 
  #define BE_FLAGS_WORKER_SCHEDULED		(1 << 3)
  #define BE_FLAGS_VLAN_PROMISC			(1 << 4)
  #define BE_FLAGS_NAPI_ENABLED			(1 << 9)
 +#define BE_UC_PMAC_COUNT		30
 +#define BE_VF_UC_PMAC_COUNT		2
  #define BE_FLAGS_QNQ_ASYNC_EVT_RCVD		(1 << 11)
++<<<<<<< HEAD
++=======
+ #define BE_FLAGS_VXLAN_OFFLOADS			(1 << 12)
+ #define BE_FLAGS_SETUP_DONE			(1 << 13)
++>>>>>>> e1ad8e33d2e5 (be2net: Fix invocation of be_close() after be_clear())
  
 -#define BE_UC_PMAC_COUNT			30
 -#define BE_VF_UC_PMAC_COUNT			2
  /* Ethtool set_dump flags */
  #define LANCER_INITIATE_FW_DUMP			0x1
  
* Unmerged path drivers/net/ethernet/emulex/benet/be.h
diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index 31ed3a0ec959..154e19e9bd54 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -2651,6 +2651,12 @@ static int be_close(struct net_device *netdev)
 	struct be_eq_obj *eqo;
 	int i;
 
+	/* This protection is needed as be_close() may be called even when the
+	 * adapter is in cleared state (after eeh perm failure)
+	 */
+	if (!(adapter->flags & BE_FLAGS_SETUP_DONE))
+		return 0;
+
 	be_roce_dev_close(adapter);
 
 	if (adapter->flags & BE_FLAGS_NAPI_ENABLED) {
@@ -2957,6 +2963,7 @@ static int be_clear(struct be_adapter *adapter)
 	be_clear_queues(adapter);
 
 	be_msix_disable(adapter);
+	adapter->flags &= ~BE_FLAGS_SETUP_DONE;
 	return 0;
 }
 
@@ -3426,6 +3433,7 @@ static int be_setup(struct be_adapter *adapter)
 		adapter->phy.fc_autoneg = 1;
 
 	be_schedule_worker(adapter);
+	adapter->flags |= BE_FLAGS_SETUP_DONE;
 	return 0;
 err:
 	be_clear(adapter);
