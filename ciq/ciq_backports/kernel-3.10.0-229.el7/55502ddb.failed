ACPI / hotplug / PCI: Do not check SLOT_ENABLED in enable_device()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] hotplug/pci: Do not check SLOT_ENABLED in enable_device() (Myron Stowe) [1114228]
Rebuild_FUZZ: 92.68%
commit-author Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
commit 55502ddb2d83ada0661733361ec14b9cbef157a5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/55502ddb.failed

With Thunderbolt you can daisy chain devices: connect new devices to
an already plugged one.  In that case the "hotplug slot" is already
enabled, but we still want to look for new PCI devices behind it.

Reuse enable_device() to scan for new PCI devices on enabled slots
and push the SLOT_ENABLED check up into acpiphp_enable_slot().

[rjw: Rebased, modified the changelog]
	Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 55502ddb2d83ada0661733361ec14b9cbef157a5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/acpiphp_glue.c
diff --cc drivers/pci/hotplug/acpiphp_glue.c
index d210006fa4ad,c7a668e1fc12..000000000000
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@@ -684,11 -545,8 +684,8 @@@ static int __ref enable_device(struct a
  	int num, max, pass;
  	LIST_HEAD(add_list);
  
- 	if (slot->flags & SLOT_ENABLED)
- 		goto err_exit;
- 
  	list_for_each_entry(func, &slot->funcs, sibling)
 -		acpiphp_bus_add(func_to_handle(func));
 +		acpiphp_bus_add(func);
  
  	num = pci_scan_slot(bus, PCI_DEVFN(slot->device, 0));
  	if (num == 0) {
@@@ -1232,22 -1025,10 +1229,29 @@@ int acpiphp_enable_slot(struct acpiphp_
  
  	mutex_lock(&slot->crit_sect);
  
++<<<<<<< HEAD
 +	/* wake up all functions */
 +	retval = power_on_slot(slot);
 +	if (retval)
 +		goto err_exit;
 +
 +	if (get_slot_status(slot) == ACPI_STA_ALL) {
 +		/* configure all functions */
 +		retval = enable_device(slot);
 +		if (retval)
 +			power_off_slot(slot);
 +	} else {
 +		pr_debug("%s: Slot status is not ACPI_STA_ALL\n", __func__);
 +		power_off_slot(slot);
 +	}
 +
 + err_exit:
++=======
+ 	/* configure all functions */
+ 	if (!(slot->flags & SLOT_ENABLED))
+ 		retval = enable_device(slot);
+ 
++>>>>>>> 55502ddb2d83 (ACPI / hotplug / PCI: Do not check SLOT_ENABLED in enable_device())
  	mutex_unlock(&slot->crit_sect);
  	return retval;
  }
* Unmerged path drivers/pci/hotplug/acpiphp_glue.c
