perf tools: Warn the user about how to enable libunwind support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf: Warn the user about how to enable libunwind support (Jiri Olsa) [1134356]
Rebuild_FUZZ: 95.00%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 7a0447d61d2d754988add992be2b46d4587ae86a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/7a0447d6.failed

When one has libunwind installed somewhere the perf tools build process
doesn't expects it to be, this happens:

  [acme@ssdandy linux]$ make O=/tmp/build/perf -C tools/perf/ install-bin
  make: Entering directory `/home/acme/git/linux/tools/perf'
    BUILD:   Doing 'make -j8' parallel build
  config/Makefile:312: No libunwind found, disabling post unwind support.  Please install libunwind-dev[el] >= 1.1

  Auto-detecting system features:
  <SNIP>
  ...                     libunwind: [ OFF ]

Change the message so that it tells how to use a non-standard libunwind
install directory:

  config/Makefile:312: No libunwind found, disabling post unwind support.  Please install libunwind-dev[el] >= 1.1 and/or set LIBUNWIND_DIR

  [acme@ssdandy linux]$ make LIBUNWIND_DIR=/opt/libunwind-git/ O=/tmp/build/perf -C tools/perf/ install-bin
  make: Entering directory `/home/acme/git/linux/tools/perf'
    BUILD:   Doing 'make -j8' parallel build

  Auto-detecting system features:
  <SNIP>
  ...                     libunwind: [ on  ]

	Acked-by: Jiri Olsa <jolsa@redhat.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-huoxnou7sw85lm58k3pi1xhw@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 7a0447d61d2d754988add992be2b46d4587ae86a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
diff --cc tools/perf/config/Makefile
index 374f88fe17c5,9429805f395c..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -232,69 -282,56 +232,118 @@@ els
  endif # NO_LIBELF
  
  ifndef NO_LIBELF
++<<<<<<< HEAD
 +CFLAGS += -DLIBELF_SUPPORT
 +FLAGS_LIBELF=$(CFLAGS) $(LDFLAGS) $(EXTLIBS)
 +ifeq ($(call try-cc,$(SOURCE_ELF_MMAP),$(FLAGS_LIBELF),-DLIBELF_MMAP),y)
 +  CFLAGS += -DLIBELF_MMAP
 +endif
 +ifeq ($(call try-cc,$(SOURCE_ELF_GETPHDRNUM),$(FLAGS_LIBELF),-DHAVE_ELF_GETPHDRNUM),y)
 +  CFLAGS += -DHAVE_ELF_GETPHDRNUM
++=======
+   CFLAGS += -DHAVE_LIBELF_SUPPORT
+ 
+   ifeq ($(feature-libelf-mmap), 1)
+     CFLAGS += -DHAVE_LIBELF_MMAP_SUPPORT
+   endif
+ 
+   ifeq ($(feature-libelf-getphdrnum), 1)
+     CFLAGS += -DHAVE_ELF_GETPHDRNUM_SUPPORT
+   endif
+ 
+   # include ARCH specific config
+   -include $(src-perf)/arch/$(ARCH)/Makefile
+ 
+   ifndef NO_DWARF
+     ifeq ($(origin PERF_HAVE_DWARF_REGS), undefined)
+       msg := $(warning DWARF register mappings have not been defined for architecture $(ARCH), DWARF support disabled);
+       NO_DWARF := 1
+     else
+       CFLAGS += -DHAVE_DWARF_SUPPORT $(LIBDW_CFLAGS)
+       LDFLAGS += $(LIBDW_LDFLAGS)
+       EXTLIBS += -lelf -ldw
+     endif # PERF_HAVE_DWARF_REGS
+   endif # NO_DWARF
+ endif # NO_LIBELF
+ 
+ ifndef NO_LIBUNWIND
+   ifneq ($(feature-libunwind), 1)
+     msg := $(warning No libunwind found, disabling post unwind support. Please install libunwind-dev[el] >= 1.1 and/or set LIBUNWIND_DIR);
+     NO_LIBUNWIND := 1
+   else
+     ifeq ($(ARCH),arm)
+       $(call feature_check,libunwind-debug-frame)
+       ifneq ($(feature-libunwind-debug-frame), 1)
+         msg := $(warning No debug_frame support found in libunwind);
+         CFLAGS += -DNO_LIBUNWIND_DEBUG_FRAME
+       endif
+     else
+       # non-ARM has no dwarf_find_debug_frame() function:
+       CFLAGS += -DNO_LIBUNWIND_DEBUG_FRAME
+     endif
+ 
+     CFLAGS += -DHAVE_DWARF_UNWIND_SUPPORT -DHAVE_LIBUNWIND_SUPPORT
+     EXTLIBS += $(LIBUNWIND_LIBS)
+     CFLAGS += $(LIBUNWIND_CFLAGS)
+     LDFLAGS += $(LIBUNWIND_LDFLAGS)
+   endif # ifneq ($(feature-libunwind), 1)
++>>>>>>> 7a0447d61d2d (perf tools: Warn the user about how to enable libunwind support)
  endif
  
 +# include ARCH specific config
 +-include $(src-perf)/arch/$(ARCH)/Makefile
 +
 +ifndef NO_DWARF
 +ifeq ($(origin PERF_HAVE_DWARF_REGS), undefined)
 +  msg := $(warning DWARF register mappings have not been defined for architecture $(ARCH), DWARF support disabled);
 +  NO_DWARF := 1
 +else
 +  CFLAGS += -DDWARF_SUPPORT $(LIBDW_CFLAGS)
 +  LDFLAGS += $(LIBDW_LDFLAGS)
 +  EXTLIBS += -lelf -ldw
 +endif # PERF_HAVE_DWARF_REGS
 +endif # NO_DWARF
 +
 +endif # NO_LIBELF
 +
 +ifndef NO_LIBELF
 +CFLAGS += -DLIBELF_SUPPORT
 +FLAGS_LIBELF=$(CFLAGS) $(LDFLAGS) $(EXTLIBS)
 +ifeq ($(call try-cc,$(SOURCE_ELF_MMAP),$(FLAGS_LIBELF),-DLIBELF_MMAP),y)
 +  CFLAGS += -DLIBELF_MMAP
 +endif # try-cc
 +endif # NO_LIBELF
 +
 +# There's only x86 (both 32 and 64) support for CFI unwind so far
 +ifneq ($(ARCH),x86)
 +  NO_LIBUNWIND := 1
 +endif
 +
 +ifndef NO_LIBUNWIND
 +  # for linking with debug library, run like:
 +  # make DEBUG=1 LIBUNWIND_DIR=/opt/libunwind/
 +  ifdef LIBUNWIND_DIR
 +    LIBUNWIND_CFLAGS  := -I$(LIBUNWIND_DIR)/include
 +    LIBUNWIND_LDFLAGS := -L$(LIBUNWIND_DIR)/lib
 +  endif
 +
 +  FLAGS_UNWIND=$(LIBUNWIND_CFLAGS) $(CFLAGS) $(LIBUNWIND_LDFLAGS) $(LDFLAGS) $(EXTLIBS) $(LIBUNWIND_LIBS)
 +  ifneq ($(call try-cc,$(SOURCE_LIBUNWIND),$(FLAGS_UNWIND),libunwind),y)
 +    msg := $(warning No libunwind found, disabling post unwind support. Please install libunwind-dev[el] >= 0.99);
 +    NO_LIBUNWIND := 1
 +  endif
 +endif
 +
 +ifndef NO_LIBUNWIND
 +  CFLAGS += -DLIBUNWIND_SUPPORT
 +  EXTLIBS += $(LIBUNWIND_LIBS)
 +  CFLAGS += $(LIBUNWIND_CFLAGS)
 +  LDFLAGS += $(LIBUNWIND_LDFLAGS)
 +endif # NO_LIBUNWIND
 +
  ifndef NO_LIBAUDIT
 -  ifneq ($(feature-libaudit), 1)
 +  FLAGS_LIBAUDIT = $(CFLAGS) $(LDFLAGS) -laudit
 +  ifneq ($(call try-cc,$(SOURCE_LIBAUDIT),$(FLAGS_LIBAUDIT),libaudit),y)
      msg := $(warning No libaudit.h found, disables 'trace' tool, please install audit-libs-devel or libaudit-dev);
      NO_LIBAUDIT := 1
    else
* Unmerged path tools/perf/config/Makefile
