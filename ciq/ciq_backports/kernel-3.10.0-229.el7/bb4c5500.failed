tools/perf/build: Fix timerfd feature check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/build: Fix timerfd feature check (Jiri Olsa) [1131394]
Rebuild_FUZZ: 92.50%
commit-author Ingo Molnar <mingo@kernel.org>
commit bb4c5500c9c5b809696eee212843e731721a6e15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/bb4c5500.failed

'feature_timerfd' is checked all the time and calculated explicitly,
in a serial fashion. Add it to CORE_FEATURE_TESTS which causes it to
be built in parallel, using the newfangled parallel build autodetection
code.

This shaves 137 msecs off the perf build time on my system, which
speeds up the common case cached build by 43%:

Before:

  comet:~/tip> perf stat --null --repeat 5 make -C tools/perf/
  [...]
         0,453771441 seconds time elapsed                                          ( +-  0,09% )

After:

  comet:~/tip> perf stat --null --repeat 5 make -C tools/perf/
  [...]
         0,316290185 seconds time elapsed                                          ( +-  0,24% )

	Cc: David Ahern <dsahern@gmail.com>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: http://lkml.kernel.org/n/tip-bb92CmexihopoSyqnkqepvsy@git.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit bb4c5500c9c5b809696eee212843e731721a6e15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
diff --cc tools/perf/config/Makefile
index 6aeff9d0cb98,861379ec7632..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -102,20 -113,48 +102,36 @@@ ende
  #
  # Build the feature check binaries in parallel, ignore errors, ignore return value and suppress output:
  #
 +$(info )
 +$(info Auto-detecting system features:)
  
 -#
 -# Note that this is not a complete list of all feature tests, just
 -# those that are typically built on a fully configured system.
 -#
 -# [ Feature tests not mentioned here have to be built explicitly in
 -#   the rule that uses them - an example for that is the 'bionic'
 -#   feature check. ]
 -#
 -CORE_FEATURE_TESTS =			\
 -	backtrace			\
 -	dwarf				\
 +FEATURE_TESTS =				\
 +	hello				\
 +	stackprotector-all		\
 +	stackprotector			\
++<<<<<<< HEAD
 +	volatile-register-var		\
  	fortify-source			\
 -	glibc				\
 -	gtk2				\
 -	gtk2-infobar			\
 -	libaudit			\
 -	libbfd				\
 +	bionic				\
  	libelf				\
 -	libelf-getphdrnum		\
 -	libelf-mmap			\
 -	libnuma				\
 -	libperl				\
 -	libpython			\
 -	libpython-version		\
 -	libslang			\
 -	libunwind			\
 -	on-exit				\
 -	stackprotector			\
 +	glibc				\
 +	dwarf				\
 +	libnuma
++=======
+ 	stackprotector-all		\
+ 	timerfd
+ 
+ #
+ # So here we detect whether test-all was rebuilt, to be able
+ # to skip the print-out of the long features list if the file
+ # existed before and after it was built:
+ #
+ ifeq ($(wildcard $(OUTPUT)config/feature-checks/test-all),)
+   test-all-failed := 1
+ else
+   test-all-failed := 0
+ endif
++>>>>>>> bb4c5500c9c5 (tools/perf/build: Fix timerfd feature check)
  
  #
  # Special fast-path for the 'all features are available' case:
@@@ -356,6 -406,12 +372,15 @@@ els
    endif
  endif
  
++<<<<<<< HEAD
++=======
+ ifeq ($(feature-timerfd), 1)
+   CFLAGS += -DHAVE_TIMERFD_SUPPORT
+ else
+   msg := $(warning No timerfd support. Disables 'perf kvm stat live');
+ endif
+ 
++>>>>>>> bb4c5500c9c5 (tools/perf/build: Fix timerfd feature check)
  disable-python = $(eval $(disable-python_code))
  define disable-python_code
    CFLAGS += -DNO_LIBPYTHON
* Unmerged path tools/perf/config/Makefile
