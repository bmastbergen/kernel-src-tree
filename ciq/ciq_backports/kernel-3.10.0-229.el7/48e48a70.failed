openvswitch: make generic netlink group const

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author stephen hemminger <stephen@networkplumber.org>
commit 48e48a70c08a8a68f8697f8b30cb83775bda8001
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/48e48a70.failed

Generic netlink tables can be const.

	Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 48e48a70c08a8a68f8697f8b30cb83775bda8001)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/datapath.c
diff --cc net/openvswitch/datapath.c
index 18b658c8c6ae,20f59b62721a..000000000000
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@@ -62,11 -62,36 +62,34 @@@
  
  int ovs_net_id __read_mostly;
  
++<<<<<<< HEAD
 +static void ovs_notify(struct sk_buff *skb, struct genl_info *info,
 +		       struct genl_multicast_group *grp)
++=======
+ static struct genl_family dp_packet_genl_family;
+ static struct genl_family dp_flow_genl_family;
+ static struct genl_family dp_datapath_genl_family;
+ 
+ static const struct genl_multicast_group ovs_dp_flow_multicast_group = {
+ 	.name = OVS_FLOW_MCGROUP,
+ };
+ 
+ static const struct genl_multicast_group ovs_dp_datapath_multicast_group = {
+ 	.name = OVS_DATAPATH_MCGROUP,
+ };
+ 
+ static const struct genl_multicast_group ovs_dp_vport_multicast_group = {
+ 	.name = OVS_VPORT_MCGROUP,
+ };
+ 
+ /* Check if need to build a reply message.
+  * OVS userspace sets the NLM_F_ECHO flag if it needs the reply. */
+ static bool ovs_must_notify(struct genl_info *info,
+ 			    const struct genl_multicast_group *grp)
++>>>>>>> 48e48a70c08a (openvswitch: make generic netlink group const)
  {
 -	return info->nlhdr->nlmsg_flags & NLM_F_ECHO ||
 -		netlink_has_listeners(genl_info_net(info)->genl_sock, 0);
 -}
 -
 -static void ovs_notify(struct genl_family *family,
 -		       struct sk_buff *skb, struct genl_info *info)
 -{
 -	genl_notify(family, skb, genl_info_net(info), info->snd_portid,
 -		    0, info->nlhdr, GFP_KERNEL);
 +	genl_notify(skb, genl_info_net(info), info->snd_portid,
 +		    grp->id, info->nlhdr, GFP_KERNEL);
  }
  
  /**
@@@ -1037,7 -1183,13 +1060,17 @@@ static int ovs_flow_cmd_dump(struct sk_
  	return skb->len;
  }
  
++<<<<<<< HEAD
 +static struct genl_ops dp_flow_genl_ops[] = {
++=======
+ static const struct nla_policy flow_policy[OVS_FLOW_ATTR_MAX + 1] = {
+ 	[OVS_FLOW_ATTR_KEY] = { .type = NLA_NESTED },
+ 	[OVS_FLOW_ATTR_ACTIONS] = { .type = NLA_NESTED },
+ 	[OVS_FLOW_ATTR_CLEAR] = { .type = NLA_FLAG },
+ };
+ 
+ static const struct genl_ops dp_flow_genl_ops[] = {
++>>>>>>> 48e48a70c08a (openvswitch: make generic netlink group const)
  	{ .cmd = OVS_FLOW_CMD_NEW,
  	  .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
  	  .policy = flow_policy,
@@@ -1428,7 -1571,13 +1461,17 @@@ static int ovs_dp_cmd_dump(struct sk_bu
  	return skb->len;
  }
  
++<<<<<<< HEAD
 +static struct genl_ops dp_datapath_genl_ops[] = {
++=======
+ static const struct nla_policy datapath_policy[OVS_DP_ATTR_MAX + 1] = {
+ 	[OVS_DP_ATTR_NAME] = { .type = NLA_NUL_STRING, .len = IFNAMSIZ - 1 },
+ 	[OVS_DP_ATTR_UPCALL_PID] = { .type = NLA_U32 },
+ 	[OVS_DP_ATTR_USER_FEATURES] = { .type = NLA_U32 },
+ };
+ 
+ static const struct genl_ops dp_datapath_genl_ops[] = {
++>>>>>>> 48e48a70c08a (openvswitch: make generic netlink group const)
  	{ .cmd = OVS_DP_CMD_NEW,
  	  .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
  	  .policy = datapath_policy,
@@@ -1790,7 -1935,16 +1833,20 @@@ out
  	return skb->len;
  }
  
++<<<<<<< HEAD
 +static struct genl_ops dp_vport_genl_ops[] = {
++=======
+ static const struct nla_policy vport_policy[OVS_VPORT_ATTR_MAX + 1] = {
+ 	[OVS_VPORT_ATTR_NAME] = { .type = NLA_NUL_STRING, .len = IFNAMSIZ - 1 },
+ 	[OVS_VPORT_ATTR_STATS] = { .len = sizeof(struct ovs_vport_stats) },
+ 	[OVS_VPORT_ATTR_PORT_NO] = { .type = NLA_U32 },
+ 	[OVS_VPORT_ATTR_TYPE] = { .type = NLA_U32 },
+ 	[OVS_VPORT_ATTR_UPCALL_PID] = { .type = NLA_U32 },
+ 	[OVS_VPORT_ATTR_OPTIONS] = { .type = NLA_NESTED },
+ };
+ 
+ static const struct genl_ops dp_vport_genl_ops[] = {
++>>>>>>> 48e48a70c08a (openvswitch: make generic netlink group const)
  	{ .cmd = OVS_VPORT_CMD_NEW,
  	  .flags = GENL_ADMIN_PERM, /* Requires CAP_NET_ADMIN privilege. */
  	  .policy = vport_policy,
* Unmerged path net/openvswitch/datapath.c
