drm/crtc: add interface to reinitialise the legacy mode group

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] crtc: add interface to reinitialise the legacy mode group (Dave Airlie) [1140440]
Rebuild_FUZZ: 96.61%
commit-author Dave Airlie <airlied@redhat.com>
commit 2390cd11bfbe8d2b1b28c4e0f01fe7e122f7196d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2390cd11.failed

This can be called to update things after dynamic connectors/encoders
are created/deleted.

	Reviewed-by: Todd Previte <tprevite@gmail.com>
	Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit 2390cd11bfbe8d2b1b28c4e0f01fe7e122f7196d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/drm/drm_crtc.h
diff --cc include/drm/drm_crtc.h
index 24f499569a2f,eb0f6f36385e..000000000000
--- a/include/drm/drm_crtc.h
+++ b/include/drm/drm_crtc.h
@@@ -961,6 -941,8 +961,11 @@@ extern const char *drm_get_tv_subconnec
  extern const char *drm_get_tv_select_name(int val);
  extern void drm_fb_release(struct drm_file *file_priv);
  extern int drm_mode_group_init_legacy_group(struct drm_device *dev, struct drm_mode_group *group);
++<<<<<<< HEAD
++=======
+ extern void drm_mode_group_destroy(struct drm_mode_group *group);
+ extern void drm_reinit_primary_mode_group(struct drm_device *dev);
++>>>>>>> 2390cd11bfbe (drm/crtc: add interface to reinitialise the legacy mode group)
  extern bool drm_probe_ddc(struct i2c_adapter *adapter);
  extern struct edid *drm_get_edid(struct drm_connector *connector,
  				 struct i2c_adapter *adapter);
diff --git a/drivers/gpu/drm/drm_crtc.c b/drivers/gpu/drm/drm_crtc.c
index bff2fa941f60..b17e5d81cd32 100644
--- a/drivers/gpu/drm/drm_crtc.c
+++ b/drivers/gpu/drm/drm_crtc.c
@@ -1264,6 +1264,15 @@ int drm_mode_group_init_legacy_group(struct drm_device *dev,
 }
 EXPORT_SYMBOL(drm_mode_group_init_legacy_group);
 
+void drm_reinit_primary_mode_group(struct drm_device *dev)
+{
+	drm_modeset_lock_all(dev);
+	drm_mode_group_destroy(&dev->primary->mode_group);
+	drm_mode_group_init_legacy_group(dev, &dev->primary->mode_group);
+	drm_modeset_unlock_all(dev);
+}
+EXPORT_SYMBOL(drm_reinit_primary_mode_group);
+
 /**
  * drm_crtc_convert_to_umode - convert a drm_display_mode into a modeinfo
  * @out: drm_mode_modeinfo struct to return to the user
* Unmerged path include/drm/drm_crtc.h
