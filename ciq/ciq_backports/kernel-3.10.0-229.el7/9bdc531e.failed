iommu/vt-d: free all resources if failed to initialize DMARs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [iommu] vt-d: free all resources if failed to initialize DMARs (Myron Stowe) [1129808]
Rebuild_FUZZ: 94.74%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit 9bdc531ec63bf894c5e3b7b5a766ce342eb2f52e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9bdc531e.failed

Enhance intel_iommu_init() to free all resources if failed to
initialize DMAR hardware.

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Signed-off-by: Joerg Roedel <joro@8bytes.org>
(cherry picked from commit 9bdc531ec63bf894c5e3b7b5a766ce342eb2f52e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 5870e7b70c8a,5ac7efc70ca9..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -2670,12 -2622,9 +2670,18 @@@ static int __init init_dmars(void
  
  	return 0;
  error:
++<<<<<<< HEAD
 +	for_each_drhd_unit(drhd) {
 +		if (drhd->ignored)
 +			continue;
 +		iommu = drhd->iommu;
 +		free_iommu(iommu);
 +	}
++=======
+ 	for_each_active_iommu(iommu, drhd)
+ 		free_dmar_iommu(iommu);
+ 	kfree(deferred_flush);
++>>>>>>> 9bdc531ec63b (iommu/vt-d: free all resources if failed to initialize DMARs)
  	kfree(g_iommus);
  	return ret;
  }
@@@ -3672,8 -3631,9 +3688,8 @@@ static struct notifier_block device_nb 
  
  int __init intel_iommu_init(void)
  {
- 	int ret = 0;
+ 	int ret = -ENODEV;
  	struct dmar_drhd_unit *drhd;
 -	struct intel_iommu *iommu;
  
  	/* VT-d is required for a TXT/tboot launch, so enforce that */
  	force_on = tboot_force_iommu();
* Unmerged path drivers/iommu/intel-iommu.c
