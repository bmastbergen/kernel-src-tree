perf hists: Add support for accumulated stat of hist entry

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/hists: Add support for accumulated stat of hist entry (Jiri Olsa) [1134356]
Rebuild_FUZZ: 98.28%
commit-author Namhyung Kim <namhyung@kernel.org>
commit f8be1c8c48c8469d1ce95ccdc77b1e2c6a29700e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f8be1c8c.failed

Maintain accumulated stat information in hist_entry->stat_acc if
symbol_conf.cumulate_callchain is set.  Fields in ->stat_acc have same
vaules initially, and will be updated as callchain is processed later.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Tested-by: Arun Sharma <asharma@fb.com>
	Tested-by: Rodrigo Campos <rodrigo@sdfg.com.ar>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
Link: http://lkml.kernel.org/r/1401335910-16832-4-git-send-email-namhyung@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit f8be1c8c48c8469d1ce95ccdc77b1e2c6a29700e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.c
diff --cc tools/perf/util/hist.c
index 9820956c30b9,dfff2ee8effb..000000000000
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@@ -370,12 -376,14 +387,14 @@@ static struct hist_entry *add_hist_entr
  
  		if (!cmp) {
  			he_stat__add_period(&he->stat, period, weight);
+ 			if (symbol_conf.cumulate_callchain)
+ 				he_stat__add_period(he->stat_acc, period, weight);
  
  			/*
 -			 * This mem info was allocated from sample__resolve_mem
 +			 * This mem info was allocated from machine__resolve_mem
  			 * and will not be used anymore.
  			 */
 -			zfree(&entry->mem_info);
 +			free(entry->mem_info);
  
  			/* If the map of an existing hist_entry has
  			 * become out-of-date due to an exec() or
@@@ -473,8 -787,9 +494,14 @@@ hist_entry__collapse(struct hist_entry 
  
  void hist_entry__free(struct hist_entry *he)
  {
++<<<<<<< HEAD
 +	free(he->branch_info);
 +	free(he->mem_info);
++=======
+ 	zfree(&he->branch_info);
+ 	zfree(&he->mem_info);
+ 	zfree(&he->stat_acc);
++>>>>>>> f8be1c8c48c8 (perf hists: Add support for accumulated stat of hist entry)
  	free_srcline(he->srcline);
  	free(he);
  }
* Unmerged path tools/perf/util/hist.c
diff --git a/tools/perf/util/sort.h b/tools/perf/util/sort.h
index d43ebef70364..a4edd84c29bf 100644
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@ -81,6 +81,7 @@ struct hist_entry {
 		struct list_head head;
 	} pairs;
 	struct he_stat		stat;
+	struct he_stat		*stat_acc;
 	struct map_symbol	ms;
 	struct thread		*thread;
 	struct comm		*comm;
diff --git a/tools/perf/util/symbol.h b/tools/perf/util/symbol.h
index c6584b6656af..2ae8417fb68b 100644
--- a/tools/perf/util/symbol.h
+++ b/tools/perf/util/symbol.h
@@ -93,6 +93,7 @@ struct symbol_conf {
 			show_nr_samples,
 			show_total_period,
 			use_callchain,
+			cumulate_callchain,
 			exclude_other,
 			show_cpu_utilization,
 			initialized,
