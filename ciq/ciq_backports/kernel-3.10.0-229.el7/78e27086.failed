cpufreq: intel_pstate: Remove core_pct rounding

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [cpufreq] intel_pstate: Remove core_pct rounding (Prarit Bhargava) [1134369]
Rebuild_FUZZ: 89.41%
commit-author Stratos Karafotis <stratosk@semaphore.gr>
commit 78e2708691e9289f97750eb71aca31b5a2973d94
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/78e27086.failed

The specific rounding adds conditionally only 1/256 to fractional
part of core_pct.

We can safely remove it without any noticeable impact in
calculations.

Use div64_u64 instead of div_u64 to avoid possible overflow of
sample->mperf as divisor

	Signed-off-by: Stratos Karafotis <stratosk@semaphore.gr>
	Signed-off-by: Dirk Brandewie <dirk.j.brandewie@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 78e2708691e9289f97750eb71aca31b5a2973d94)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index f542ca22df8a,c5eac949760d..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -545,10 -544,10 +545,17 @@@ static void intel_pstate_get_cpu_pstate
  static inline void intel_pstate_calc_busy(struct cpudata *cpu)
  {
  	struct sample *sample = &cpu->sample;
++<<<<<<< HEAD
 +	int32_t core_pct;
 +
 +	core_pct = div_fp(int_tofp(sample->aperf), int_tofp(sample->mperf));
 +	core_pct = mul_fp(core_pct, int_tofp(100));
++=======
+ 	int64_t core_pct;
+ 
+ 	core_pct = int_tofp(sample->aperf) * int_tofp(100);
+ 	core_pct = div64_u64(core_pct, int_tofp(sample->mperf));
++>>>>>>> 78e2708691e9 (cpufreq: intel_pstate: Remove core_pct rounding)
  
  	sample->freq = fp_toint(
  		mul_fp(int_tofp(cpu->pstate.max_pstate * 1000), core_pct));
* Unmerged path drivers/cpufreq/intel_pstate.c
