openvswitch: Minimize ovs_flow_cmd_del critical section.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] openvswitch: Minimize ovs_flow_cmd_del critical section (Jiri Benc) [1110384]
Rebuild_FUZZ: 99.10%
commit-author Jarno Rajahalme <jrajahalme@nicira.com>
commit aed067783e505bf66dcafa8647d08619eb5b1c55
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/aed06778.failed

ovs_flow_cmd_del() now allocates reply (if needed) after the flow has
already been removed from the flow table.  If the reply allocation
fails, a netlink error is signaled with netlink_set_err(), as is
already done in ovs_flow_cmd_new_or_set() in the similar situation.

	Signed-off-by: Jarno Rajahalme <jrajahalme@nicira.com>
	Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
(cherry picked from commit aed067783e505bf66dcafa8647d08619eb5b1c55)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/datapath.c
diff --cc net/openvswitch/datapath.c
index d01b30b9528a,f28beda8426f..000000000000
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@@ -978,22 -1009,28 +980,47 @@@ static int ovs_flow_cmd_del(struct sk_b
  		goto unlock;
  	}
  
++<<<<<<< HEAD
 +	reply = ovs_flow_cmd_alloc_info(flow, info);
 +	if (!reply) {
 +		err = -ENOMEM;
 +		goto unlock;
 +	}
 +
 +	ovs_flow_tbl_remove(&dp->table, flow);
 +
 +	err = ovs_flow_cmd_fill_info(flow, dp, reply, info->snd_portid,
 +				     info->snd_seq, 0, OVS_FLOW_CMD_DEL);
 +	BUG_ON(err < 0);
 +
 +	ovs_flow_free(flow, true);
 +	ovs_unlock();
 +
 +	ovs_notify(reply, info, &ovs_dp_flow_multicast_group);
++=======
+ 	ovs_flow_tbl_remove(&dp->table, flow);
+ 	ovs_unlock();
+ 
+ 	reply = ovs_flow_cmd_alloc_info((const struct sw_flow_actions __force *) flow->sf_acts,
+ 					info, false);
+ 	if (likely(reply)) {
+ 		if (likely(!IS_ERR(reply))) {
+ 			rcu_read_lock();	/*To keep RCU checker happy. */
+ 			err = ovs_flow_cmd_fill_info(flow, ovs_header->dp_ifindex,
+ 						     reply, info->snd_portid,
+ 						     info->snd_seq, 0,
+ 						     OVS_FLOW_CMD_DEL);
+ 			rcu_read_unlock();
+ 			BUG_ON(err < 0);
+ 
+ 			ovs_notify(&dp_flow_genl_family, reply, info);
+ 		} else {
+ 			netlink_set_err(sock_net(skb->sk)->genl_sock, 0, 0, PTR_ERR(reply));
+ 		}
+ 	}
+ 
+ 	ovs_flow_free(flow, true);
++>>>>>>> aed067783e50 (openvswitch: Minimize ovs_flow_cmd_del critical section.)
  	return 0;
  unlock:
  	ovs_unlock();
* Unmerged path net/openvswitch/datapath.c
