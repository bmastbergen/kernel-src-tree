ACPI: simplify acpiphp driver with new helper functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] simplify acpiphp driver with new helper functions (Myron Stowe) [1114228]
Rebuild_FUZZ: 94.23%
commit-author Jiang Liu <jiang.liu@huawei.com>
commit ecd046da57d3327367b930478234e58f01bc9f0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/ecd046da.failed

Use the new helper functions introduced previously to simplify the
ACPI-based PCI hotplug (acpiphp) driver.

[rjw: Changelog]
	Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit ecd046da57d3327367b930478234e58f01bc9f0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/acpiphp_glue.c
diff --cc drivers/pci/hotplug/acpiphp_glue.c
index 7d4cb0d082b8,a0a7133a1d12..000000000000
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@@ -850,17 -847,9 +846,21 @@@ int acpiphp_eject_slot(struct acpiphp_s
  	list_for_each_entry(func, &slot->funcs, sibling) {
  		/* We don't want to call _EJ0 on non-existing functions. */
  		if ((func->flags & FUNC_HAS_EJ0)) {
++<<<<<<< HEAD
 +			/* _EJ0 method take one argument */
 +			arg_list.count = 1;
 +			arg_list.pointer = &arg;
 +			arg.type = ACPI_TYPE_INTEGER;
 +			arg.integer.value = 1;
 +
 +			status = acpi_evaluate_object(func->handle, "_EJ0", &arg_list, NULL);
 +			if (ACPI_FAILURE(status)) {
 +				pr_warn("%s: _EJ0 failed\n", __func__);
++=======
+ 			if (ACPI_FAILURE(acpi_evaluate_ej0(func->handle)))
++>>>>>>> ecd046da57d3 (ACPI: simplify acpiphp driver with new helper functions)
  				return -1;
- 			} else
+ 			else
  				break;
  		}
  	}
@@@ -1200,9 -1187,8 +1199,14 @@@ void acpiphp_enumerate_slots(struct pci
  	get_device(&bus->dev);
  
  	if (!pci_is_root_bus(bridge->pci_bus) &&
++<<<<<<< HEAD
 +	    ACPI_SUCCESS(acpi_get_handle(bridge->handle,
 +					"_EJ0", &dummy_handle))) {
 +		pr_debug("found ejectable p2p bridge\n");
++=======
+ 	    acpi_has_method(bridge->handle, "_EJ0")) {
+ 		dbg("found ejectable p2p bridge\n");
++>>>>>>> ecd046da57d3 (ACPI: simplify acpiphp driver with new helper functions)
  		bridge->flags |= BRIDGE_HAS_EJ0;
  		bridge->func = acpiphp_bridge_handle_to_function(handle);
  	}
* Unmerged path drivers/pci/hotplug/acpiphp_glue.c
