rbd: tolerate -ENOENT for discard operations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Josh Durgin <josh.durgin@inktank.com>
commit d0265de7c358d71a494dcd1ee28206b32754bb0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/d0265de7.failed

Discard may try to delete an object from a non-layered image that does not exist.
If this occurs, the image already has no data in that range, so change the
result to success.

	Signed-off-by: Josh Durgin <josh.durgin@inktank.com>
(cherry picked from commit d0265de7c358d71a494dcd1ee28206b32754bb0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/rbd.c
diff --cc drivers/block/rbd.c
index 68c860a6a368,835a96a09a6b..000000000000
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@@ -1751,6 -1758,21 +1751,24 @@@ static void rbd_osd_write_callback(stru
  	obj_request_done_set(obj_request);
  }
  
++<<<<<<< HEAD
++=======
+ static void rbd_osd_discard_callback(struct rbd_obj_request *obj_request)
+ {
+ 	dout("%s: obj %p result %d %llu\n", __func__, obj_request,
+ 		obj_request->result, obj_request->length);
+ 	/*
+ 	 * There is no such thing as a successful short discard.  Set
+ 	 * it to our originally-requested length.
+ 	 */
+ 	obj_request->xferred = obj_request->length;
+ 	/* discarding a non-existent object is not a problem */
+ 	if (obj_request->result == -ENOENT)
+ 		obj_request->result = 0;
+ 	obj_request_done_set(obj_request);
+ }
+ 
++>>>>>>> d0265de7c358 (rbd: tolerate -ENOENT for discard operations)
  /*
   * For a simple stat call there's nothing to do.  We'll do more if
   * this is part of a write sequence for a layered image.
* Unmerged path drivers/block/rbd.c
