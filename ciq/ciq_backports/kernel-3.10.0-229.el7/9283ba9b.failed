perf hists: Add a couple of hists stat helper functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/hists: Add a couple of hists stat helper functions (Jiri Olsa) [1134356]
Rebuild_FUZZ: 98.18%
commit-author Namhyung Kim <namhyung@kernel.org>
commit 9283ba9bd77a6940ecad8721429131d773c704b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9283ba9b.failed

Add hists__{reset,inc}_[filter_]stats() functions to cleanup accesses
to hist stats (for output).  Note that number of samples in the stat
is not handled here since it belongs to the input stage.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/1398327843-31845-5-git-send-email-namhyung@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit 9283ba9bd77a6940ecad8721429131d773c704b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.c
#	tools/perf/util/hist.h
diff --cc tools/perf/util/hist.c
index dac7beaabd9c,b675857883a2..000000000000
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@@ -318,17 -317,6 +318,20 @@@ static struct hist_entry *hist_entry__n
  	return he;
  }
  
++<<<<<<< HEAD
 +void hists__inc_nr_entries(struct hists *hists, struct hist_entry *h)
 +{
 +	if (!h->filtered) {
 +		hists__calc_col_len(hists, h);
 +		hists->nr_non_filtered_entries++;
 +		hists->stats.total_non_filtered_period += h->stat.period;
 +	}
 +	hists->nr_entries++;
 +	hists->stats.total_period += h->stat.period;
 +}
 +
++=======
++>>>>>>> 9283ba9bd77a (perf hists: Add a couple of hists stat helper functions)
  static u8 symbol__parent_filter(const struct symbol *parent)
  {
  	if (symbol_conf.exclude_other && parent == NULL)
diff --cc tools/perf/util/hist.h
index a496262fcc29,ef1ad7a948c0..000000000000
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@@ -115,8 -116,9 +115,14 @@@ void hists__decay_entries(struct hists 
  void hists__output_recalc_col_len(struct hists *hists, int max_rows);
  
  u64 hists__total_period(struct hists *hists);
++<<<<<<< HEAD
 +void hists__inc_nr_entries(struct hists *hists, struct hist_entry *h);
 +void hists__inc_nr_events(struct hists *self, u32 type);
++=======
+ void hists__reset_stats(struct hists *hists);
+ void hists__inc_stats(struct hists *hists, struct hist_entry *h);
+ void hists__inc_nr_events(struct hists *hists, u32 type);
++>>>>>>> 9283ba9bd77a (perf hists: Add a couple of hists stat helper functions)
  void events_stats__inc(struct events_stats *stats, u32 type);
  size_t events_stats__fprintf(struct events_stats *stats, FILE *fp);
  
diff --git a/tools/perf/builtin-diff.c b/tools/perf/builtin-diff.c
index 891f993f523b..7a74e9f7387f 100644
--- a/tools/perf/builtin-diff.c
+++ b/tools/perf/builtin-diff.c
@@ -572,10 +572,7 @@ static void hists__compute_resort(struct hists *hists)
 	hists->entries = RB_ROOT;
 	next = rb_first(root);
 
-	hists->nr_entries = 0;
-	hists->nr_non_filtered_entries = 0;
-	hists->stats.total_period = 0;
-	hists->stats.total_non_filtered_period = 0;
+	hists__reset_stats(hists);
 	hists__reset_col_len(hists);
 
 	while (next != NULL) {
* Unmerged path tools/perf/util/hist.c
* Unmerged path tools/perf/util/hist.h
