qlge: Fix TSO for non-accelerated vlan traffic

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Vlad Yasevich <vyasevich@gmail.com>
commit 1ee1cfe7d3df00bff11dd28576eeac1875d7d51f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1ee1cfe7.failed

This device claims TSO support for vlans.  It also allows a user to
control vlan acceleration offloading.  As such, it is possible to turn
off vlan acceleration and configure a vlan which will continue to send
TSO traffic.

In such situation the packet passed down the the device will contain
a vlan header and skb->protocol will be set to ETH_P_8021Q.
The device assumes that skb->protocol contains network protocol
value and uses that value to set up TSO information.
This results in corrupted frames sent on the wire.

This patch extracts the protocol value correctly by using a
vlan_get_protocol() helper and corrects corrupt TSO frames.

CC: Shahed Shaikh <shahed.shaikh@qlogic.com>
CC: Jitendra Kalsaria <jitendra.kalsaria@qlogic.com>
CC: Ron Mercer <ron.mercer@qlogic.com>
CC: linux-driver@qlogic.com
	Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>
	Acked-by: Shahed Shaikh <shahed.shaikh@qlogic.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1ee1cfe7d3df00bff11dd28576eeac1875d7d51f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qlge/qlge_main.c
diff --cc drivers/net/ethernet/qlogic/qlge/qlge_main.c
index f87cc216045b,3e96f269150d..000000000000
--- a/drivers/net/ethernet/qlogic/qlge/qlge_main.c
+++ b/drivers/net/ethernet/qlogic/qlge/qlge_main.c
@@@ -2497,11 -2556,11 +2497,19 @@@ static int ql_tso(struct sk_buff *skb, 
  
  	if (skb_is_gso(skb)) {
  		int err;
++<<<<<<< HEAD
 +		if (skb_header_cloned(skb)) {
 +			err = pskb_expand_head(skb, 0, 0, GFP_ATOMIC);
 +			if (err)
 +				return err;
 +		}
++=======
+ 		__be16 l3_proto = vlan_get_protocol(skb);
+ 
+ 		err = skb_cow_head(skb, 0);
+ 		if (err < 0)
+ 			return err;
++>>>>>>> 1ee1cfe7d3df (qlge: Fix TSO for non-accelerated vlan traffic)
  
  		mac_iocb_ptr->opcode = OPCODE_OB_MAC_TSO_IOCB;
  		mac_iocb_ptr->flags3 |= OB_MAC_TSO_IOCB_IC;
* Unmerged path drivers/net/ethernet/qlogic/qlge/qlge_main.c
