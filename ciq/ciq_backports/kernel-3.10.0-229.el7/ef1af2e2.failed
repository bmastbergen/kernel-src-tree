KVM: PPC: Book3S PR: Take SRCU read lock around RTAS kvm_read_guest() call

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/ppc: book3s/pr - Take SRCU read lock around RTAS kvm_read_guest() call (David Gibson) [1123145 1123133 1123367]
Rebuild_FUZZ: 94.59%
commit-author Paul Mackerras <paulus@samba.org>
commit ef1af2e29622ff3403926ae801a2b10da075a2de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/ef1af2e2.failed

This does for PR KVM what c9438092cae4 ("KVM: PPC: Book3S HV: Take SRCU
read lock around kvm_read_guest() call") did for HV KVM, that is,
eliminate a "suspicious rcu_dereference_check() usage!" warning by
taking the SRCU lock around the call to kvmppc_rtas_hcall().

It also fixes a return of RESUME_HOST to return EMULATE_FAIL instead,
since kvmppc_h_pr() is supposed to return EMULATE_* values.

	Signed-off-by: Paul Mackerras <paulus@samba.org>
	Cc: stable@vger.kernel.org
	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit ef1af2e29622ff3403926ae801a2b10da075a2de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_pr_papr.c
diff --cc arch/powerpc/kvm/book3s_pr_papr.c
index 5efa97b993d8,ce3c893d509b..000000000000
--- a/arch/powerpc/kvm/book3s_pr_papr.c
+++ b/arch/powerpc/kvm/book3s_pr_papr.c
@@@ -258,6 -267,12 +258,15 @@@ static int kvmppc_h_pr_xics_hcall(struc
  
  int kvmppc_h_pr(struct kvm_vcpu *vcpu, unsigned long cmd)
  {
++<<<<<<< HEAD
++=======
+ 	int rc, idx;
+ 
+ 	if (cmd <= MAX_HCALL_OPCODE &&
+ 	    !test_bit(cmd/4, vcpu->kvm->arch.enabled_hcalls))
+ 		return EMULATE_FAIL;
+ 
++>>>>>>> ef1af2e29622 (KVM: PPC: Book3S PR: Take SRCU read lock around RTAS kvm_read_guest() call)
  	switch (cmd) {
  	case H_ENTER:
  		return kvmppc_h_pr_enter(vcpu);
* Unmerged path arch/powerpc/kvm/book3s_pr_papr.c
