qlcnic: Update poll controller code path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Manish chopra <manish.chopra@qlogic.com>
commit 2b018ad9fe26de71c56c9cfdec164cdf89cb6a1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2b018ad9.failed

Add support for MSI/MSI-X mode in poll controller routine.

	Signed-off-by: Manish Chopra <manish.chopra@qlogic.com>
	Signed-off-by: Shahed Shaikh <shahed.shaikh@qlogic.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2b018ad9fe26de71c56c9cfdec164cdf89cb6a1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
index ecd8d1df8016,0cfa8a3344ac..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
@@@ -2845,17 -2925,39 +2845,44 @@@ static irqreturn_t qlcnic_msix_tx_intr(
  #ifdef CONFIG_NET_POLL_CONTROLLER
  static void qlcnic_poll_controller(struct net_device *netdev)
  {
- 	int ring;
- 	struct qlcnic_host_sds_ring *sds_ring;
  	struct qlcnic_adapter *adapter = netdev_priv(netdev);
- 	struct qlcnic_recv_context *recv_ctx = adapter->recv_ctx;
+ 	struct qlcnic_host_sds_ring *sds_ring;
+ 	struct qlcnic_recv_context *recv_ctx;
+ 	struct qlcnic_host_tx_ring *tx_ring;
+ 	int ring;
+ 
+ 	if (!test_bit(__QLCNIC_DEV_UP, &adapter->state))
+ 		return;
+ 
+ 	recv_ctx = adapter->recv_ctx;
  
++<<<<<<< HEAD
 +	disable_irq(adapter->irq);
 +	for (ring = 0; ring < adapter->max_sds_rings; ring++) {
++=======
+ 	for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
++>>>>>>> 2b018ad9fe26 (qlcnic: Update poll controller code path)
  		sds_ring = &recv_ctx->sds_rings[ring];
- 		qlcnic_intr(adapter->irq, sds_ring);
+ 		qlcnic_disable_sds_intr(adapter, sds_ring);
+ 		napi_schedule(&sds_ring->napi);
+ 	}
+ 
+ 	if (adapter->flags & QLCNIC_MSIX_ENABLED) {
+ 		/* Only Multi-Tx queue capable devices need to
+ 		 * schedule NAPI for TX rings
+ 		 */
+ 		if ((qlcnic_83xx_check(adapter) &&
+ 		     (adapter->flags & QLCNIC_TX_INTR_SHARED)) ||
+ 		    (qlcnic_82xx_check(adapter) &&
+ 		     !qlcnic_check_multi_tx(adapter)))
+ 			return;
+ 
+ 		for (ring = 0; ring < adapter->drv_tx_rings; ring++) {
+ 			tx_ring = &adapter->tx_ring[ring];
+ 			qlcnic_disable_tx_intr(adapter, tx_ring);
+ 			napi_schedule(&tx_ring->napi);
+ 		}
  	}
- 	enable_irq(adapter->irq);
  }
  #endif
  
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
