s390/uaccess: introduce 'uaccesspt' kernel parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [s390] uaccess: introduce 'uaccesspt' kernel parameter (Hendrik Brueckner) [1099147]
Rebuild_FUZZ: 94.95%
commit-author Heiko Carstens <heiko.carstens@de.ibm.com>
commit 56f15e518cfdc732bd4e4da90e0c9cf2fc4e7c1b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/56f15e51.failed

The uaccesspt kernel parameter allows to enforce using the uaccess page
table walk variant. This is mainly for debugging purposes, so this mode
can also be enabled on machines which support the mvcos instruction.

	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 56f15e518cfdc732bd4e4da90e0c9cf2fc4e7c1b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/lib/uaccess_mvcos.c
diff --cc arch/s390/lib/uaccess_mvcos.c
index 1829742bf479,ae97b8df11aa..000000000000
--- a/arch/s390/lib/uaccess_mvcos.c
+++ b/arch/s390/lib/uaccess_mvcos.c
@@@ -200,28 -233,31 +200,51 @@@ static size_t strncpy_from_user_mvcos(s
  	return done;
  }
  
 -long __strncpy_from_user(char *dst, const char __user *src, long count)
 -{
 -	if (static_key_true(&have_mvcos))
 -		return strncpy_from_user_mvcos(dst, src, count);
 -	return strncpy_from_user_pt(dst, src, count);
 -}
 -EXPORT_SYMBOL(__strncpy_from_user);
 -
 +struct uaccess_ops uaccess_mvcos = {
 +	.copy_from_user = copy_from_user_mvcos_check,
 +	.copy_from_user_small = copy_from_user_std,
 +	.copy_to_user = copy_to_user_mvcos_check,
 +	.copy_to_user_small = copy_to_user_std,
 +	.copy_in_user = copy_in_user_mvcos,
 +	.clear_user = clear_user_mvcos,
 +	.strnlen_user = strnlen_user_std,
 +	.strncpy_from_user = strncpy_from_user_std,
 +	.futex_atomic_op = futex_atomic_op_std,
 +	.futex_atomic_cmpxchg = futex_atomic_cmpxchg_std,
 +};
 +
++<<<<<<< HEAD
 +struct uaccess_ops uaccess_mvcos_switch = {
 +	.copy_from_user = copy_from_user_mvcos,
 +	.copy_from_user_small = copy_from_user_mvcos,
 +	.copy_to_user = copy_to_user_mvcos,
 +	.copy_to_user_small = copy_to_user_mvcos,
 +	.copy_in_user = copy_in_user_mvcos,
 +	.clear_user = clear_user_mvcos,
 +	.strnlen_user = strnlen_user_mvcos,
 +	.strncpy_from_user = strncpy_from_user_mvcos,
 +	.futex_atomic_op = futex_atomic_op_pt,
 +	.futex_atomic_cmpxchg = futex_atomic_cmpxchg_pt,
 +};
++=======
+ /*
+  * The uaccess page tabe walk variant can be enforced with the "uaccesspt"
+  * kernel parameter. This is mainly for debugging purposes.
+  */
+ static int force_uaccess_pt __initdata;
+ 
+ static int __init parse_uaccess_pt(char *__unused)
+ {
+ 	force_uaccess_pt = 1;
+ 	return 0;
+ }
+ early_param("uaccesspt", parse_uaccess_pt);
+ 
+ static int __init uaccess_init(void)
+ {
+ 	if (IS_ENABLED(CONFIG_32BIT) || force_uaccess_pt || !test_facility(27))
+ 		static_key_slow_dec(&have_mvcos);
+ 	return 0;
+ }
+ early_initcall(uaccess_init);
++>>>>>>> 56f15e518cfd (s390/uaccess: introduce 'uaccesspt' kernel parameter)
* Unmerged path arch/s390/lib/uaccess_mvcos.c
