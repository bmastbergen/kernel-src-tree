perf/x86: Fix RAPL rdmsrl_safe() usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [x86] perf: Fix RAPL rdmsrl_safe() usage (Jiri Olsa) [1134356]
Rebuild_FUZZ: 94.44%
commit-author Stephane Eranian <eranian@google.com>
commit 9f7ff8931e3c5ddc8535476971ec9501e9555c05
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9f7ff893.failed

This patch fixes a bug introduced by:

  24223657806a ("perf/x86/intel: Use rdmsrl_safe() when initializing RAPL PMU")

The rdmsrl_safe() function returns 0 on success.
The current code was failing to detect the RAPL PMU
on real hardware  (missing /sys/devices/power) because
the return value of rdmsrl_safe() was misinterpreted.

	Signed-off-by: Stephane Eranian <eranian@google.com>
	Acked-by: Borislav Petkov <bp@suse.de>
	Acked-by: Venkatesh Srinivas <venkateshs@google.com>
	Cc: peterz@infradead.org
	Cc: zheng.z.yan@intel.com
Link: http://lkml.kernel.org/r/20140423170418.GA12767@quad
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 9f7ff8931e3c5ddc8535476971ec9501e9555c05)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_rapl.c
diff --cc arch/x86/kernel/cpu/perf_event_intel_rapl.c
index 264c7c792061,619f7699487a..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_rapl.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_rapl.c
@@@ -518,6 -543,10 +518,13 @@@ static int rapl_cpu_prepare(int cpu
  	if (phys_id < 0)
  		return -1;
  
++<<<<<<< HEAD
++=======
+ 	/* protect rdmsrl() to handle virtualization */
+ 	if (rdmsrl_safe(MSR_RAPL_POWER_UNIT, &msr_rapl_power_unit_bits))
+ 		return -1;
+ 
++>>>>>>> 9f7ff8931e3c (perf/x86: Fix RAPL rdmsrl_safe() usage)
  	pmu = kzalloc_node(sizeof(*pmu), GFP_KERNEL, cpu_to_node(cpu));
  	if (!pmu)
  		return -1;
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_rapl.c
