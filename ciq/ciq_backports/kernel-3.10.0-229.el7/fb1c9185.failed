tools/perf: Turn strlcpy() into a __weak function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf: Turn strlcpy() into a __weak function (Jiri Olsa) [1131394]
Rebuild_FUZZ: 93.48%
commit-author Ingo Molnar <mingo@kernel.org>
commit fb1c9185e36cf9c616ac15f54e54a01f052672bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/fb1c9185.failed

The strlcpy() feature check slows every build unnecessarily - so make it
a __weak function so it does not have to be auto-detected.

If the libc (or any other library) has an strlcpy() implementation it will
be used - otherwise our fallback is active.

	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
Link: http://lkml.kernel.org/n/tip-zjbrcupapu08ePsyYhhhxiwk@git.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit fb1c9185e36cf9c616ac15f54e54a01f052672bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
#	tools/perf/config/feature-checks/Makefile
#	tools/perf/util/cache.h
#	tools/perf/util/path.c
diff --cc tools/perf/config/Makefile
index 3d5ba297ad91,3207c25b15f0..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -111,6 -111,19 +111,22 @@@ FEATURE_TESTS =				
  	libelf				\
  	glibc				\
  	dwarf				\
++<<<<<<< HEAD
++=======
+ 	libelf-mmap			\
+ 	libelf-getphdrnum		\
+ 	libunwind			\
+ 	libaudit			\
+ 	libslang			\
+ 	gtk2				\
+ 	gtk2-infobar			\
+ 	libperl				\
+ 	libpython			\
+ 	libpython-version		\
+ 	libbfd				\
+ 	on-exit				\
+ 	backtrace			\
++>>>>>>> fb1c9185e36c (tools/perf: Turn strlcpy() into a __weak function)
  	libnuma
  
  $(foreach test,$(FEATURE_TESTS),$(call feature_check,$(test),$(test)))
@@@ -423,15 -435,9 +439,18 @@@ els
    endif
  endif
  
++<<<<<<< HEAD
 +ifndef NO_STRLCPY
 +  ifeq ($(call try-cc,$(SOURCE_STRLCPY),,-DHAVE_STRLCPY),y)
 +    CFLAGS += -DHAVE_STRLCPY
 +  endif
 +endif
 +
++=======
++>>>>>>> fb1c9185e36c (tools/perf: Turn strlcpy() into a __weak function)
  ifndef NO_ON_EXIT
 -  ifeq ($(feature-on-exit), 1)
 -    CFLAGS += -DHAVE_ON_EXIT_SUPPORT
 +  ifeq ($(call try-cc,$(SOURCE_ON_EXIT),,-DHAVE_ON_EXIT),y)
 +    CFLAGS += -DHAVE_ON_EXIT
    endif
  endif
  
diff --cc tools/perf/config/feature-checks/Makefile
index 566a71dd6168,c65bdac0ebe2..000000000000
--- a/tools/perf/config/feature-checks/Makefile
+++ b/tools/perf/config/feature-checks/Makefile
@@@ -9,6 -9,19 +9,22 @@@ FILES=					
  	test-libelf			\
  	test-glibc			\
  	test-dwarf			\
++<<<<<<< HEAD
++=======
+ 	test-libelf-mmap		\
+ 	test-libelf-getphdrnum		\
+ 	test-libunwind			\
+ 	test-libaudit			\
+ 	test-libslang			\
+ 	test-gtk2			\
+ 	test-gtk2-infobar		\
+ 	test-libperl			\
+ 	test-libpython			\
+ 	test-libpython-version		\
+ 	test-libbfd			\
+ 	test-on-exit			\
+ 	test-backtrace			\
++>>>>>>> fb1c9185e36c (tools/perf: Turn strlcpy() into a __weak function)
  	test-libnuma
  
  CC := $(CC) -MD
@@@ -49,6 -62,68 +65,65 @@@ test-dwarf
  test-libnuma:
  	$(BUILD) -lnuma
  
++<<<<<<< HEAD
++=======
+ test-libunwind:
+ 	$(BUILD) -lunwind -lunwind-x86_64 -lelf
+ 
+ test-libaudit:
+ 	$(BUILD) -laudit
+ 
+ test-libslang:
+ 	$(BUILD) -I/usr/include/slang -lslang
+ 
+ test-gtk2:
+ 	$(BUILD) $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null)
+ 
+ test-gtk2-infobar:
+ 	$(BUILD) $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null)
+ 
+ grep-libs  = $(filter -l%,$(1))
+ strip-libs = $(filter-out -l%,$(1))
+ 
+ PERL_EMBED_LDOPTS = $(shell perl -MExtUtils::Embed -e ldopts 2>/dev/null)
+ PERL_EMBED_LDFLAGS = $(call strip-libs,$(PERL_EMBED_LDOPTS))
+ PERL_EMBED_LIBADD = $(call grep-libs,$(PERL_EMBED_LDOPTS))
+ PERL_EMBED_CCOPTS = `perl -MExtUtils::Embed -e ccopts 2>/dev/null`
+ FLAGS_PERL_EMBED=$(PERL_EMBED_CCOPTS) $(PERL_EMBED_LDOPTS)
+ 
+ test-libperl:
+ 	$(BUILD) $(FLAGS_PERL_EMBED)
+ 
+ override PYTHON := python
+ override PYTHON_CONFIG := python-config
+ 
+ escape-for-shell-sq =  $(subst ','\'',$(1))
+ shell-sq = '$(escape-for-shell-sq)'
+ 
+ PYTHON_CONFIG_SQ = $(call shell-sq,$(PYTHON_CONFIG))
+ 
+ PYTHON_EMBED_LDOPTS = $(shell $(PYTHON_CONFIG_SQ) --ldflags 2>/dev/null)
+ PYTHON_EMBED_LDFLAGS = $(call strip-libs,$(PYTHON_EMBED_LDOPTS))
+ PYTHON_EMBED_LIBADD = $(call grep-libs,$(PYTHON_EMBED_LDOPTS))
+ PYTHON_EMBED_CCOPTS = $(shell $(PYTHON_CONFIG_SQ) --cflags 2>/dev/null)
+ FLAGS_PYTHON_EMBED = $(PYTHON_EMBED_CCOPTS) $(PYTHON_EMBED_LDOPTS)
+ 
+ test-libpython:
+ 	$(BUILD) $(FLAGS_PYTHON_EMBED)
+ 
+ test-libpython-version:
+ 	$(BUILD) $(FLAGS_PYTHON_EMBED)
+ 
+ test-libbfd:
+ 	$(BUILD) -DPACKAGE='perf' -DPACKAGE=perf -lbfd -ldl
+ 
+ test-on-exit:
+ 	$(BUILD)
+ 
+ test-backtrace:
+ 	$(BUILD)
+ 
++>>>>>>> fb1c9185e36c (tools/perf: Turn strlcpy() into a __weak function)
  -include *.d */*.d
  
  ###############################
diff --cc tools/perf/util/cache.h
index 26e367239873,7b176dd02e1a..000000000000
--- a/tools/perf/util/cache.h
+++ b/tools/perf/util/cache.h
@@@ -70,8 -70,7 +70,11 @@@ extern char *perf_path(const char *fmt
  extern char *perf_pathdup(const char *fmt, ...)
  	__attribute__((format (printf, 1, 2)));
  
++<<<<<<< HEAD
 +#ifndef HAVE_STRLCPY
++=======
+ /* Matches the libc/libbsd function attribute so we declare this unconditionally: */
++>>>>>>> fb1c9185e36c (tools/perf: Turn strlcpy() into a __weak function)
  extern size_t strlcpy(char *dest, const char *src, size_t size);
- #endif
  
  #endif /* __PERF_CACHE_H */
diff --cc tools/perf/util/path.c
index a8c49548ca48,5d13cb45b317..000000000000
--- a/tools/perf/util/path.c
+++ b/tools/perf/util/path.c
@@@ -22,8 -22,11 +22,16 @@@ static const char *get_perf_dir(void
  	return ".";
  }
  
++<<<<<<< HEAD
 +#ifndef HAVE_STRLCPY
 +size_t strlcpy(char *dest, const char *src, size_t size)
++=======
+ /*
+  * If libc has strlcpy() then that version will override this
+  * implementation:
+  */
+ size_t __weak strlcpy(char *dest, const char *src, size_t size)
++>>>>>>> fb1c9185e36c (tools/perf: Turn strlcpy() into a __weak function)
  {
  	size_t ret = strlen(src);
  
* Unmerged path tools/perf/config/Makefile
* Unmerged path tools/perf/config/feature-checks/Makefile
* Unmerged path tools/perf/util/cache.h
diff --git a/tools/perf/util/include/linux/compiler.h b/tools/perf/util/include/linux/compiler.h
index bef4d3ddc493..b003ad7200b2 100644
--- a/tools/perf/util/include/linux/compiler.h
+++ b/tools/perf/util/include/linux/compiler.h
@@ -23,4 +23,8 @@
 # define __force
 #endif
 
+#ifndef __weak
+# define __weak			__attribute__((weak))
+#endif
+
 #endif
* Unmerged path tools/perf/util/path.c
