igb: Fix queue allocation method to accommodate changing during runtime

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Carolyn Wyborny <carolyn.wyborny@intel.com>
commit 02ef6e1d0b00233a89d2c8bced880d8ea39603b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/02ef6e1d.failed

When changing number of queues using ethtool's set_channels during runtime,
a queue allocation could fail, which can leave the device in a down state.
In order to preserve the usability of the device in this scenario, this patch
changes the driver to allocate the  number of queues only if they have not
been allocated already. The first allocation is then done for the max number
of queues, which is the default queues for this driver.   With this change,
queue quantity changes are not subject to queue allocation failures.

	Signed-off-by: Carolyn Wyborny <carolyn.wyborny@intel.com>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 02ef6e1d0b00233a89d2c8bced880d8ea39603b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/igb/igb_main.c
diff --cc drivers/net/ethernet/intel/igb/igb_main.c
index 7436ed1f84b3,db040d6e0f22..000000000000
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@@ -8028,4 -8049,26 +8050,29 @@@ s32 igb_write_i2c_byte(struct e1000_hw 
  		return E1000_SUCCESS;
  
  }
++<<<<<<< HEAD
++=======
+ 
+ int igb_reinit_queues(struct igb_adapter *adapter)
+ {
+ 	struct net_device *netdev = adapter->netdev;
+ 	struct pci_dev *pdev = adapter->pdev;
+ 	int err = 0;
+ 
+ 	if (netif_running(netdev))
+ 		igb_close(netdev);
+ 
+ 	igb_reset_interrupt_capability(adapter);
+ 
+ 	if (igb_init_interrupt_scheme(adapter, true)) {
+ 		dev_err(&pdev->dev, "Unable to allocate memory for queues\n");
+ 		return -ENOMEM;
+ 	}
+ 
+ 	if (netif_running(netdev))
+ 		err = igb_open(netdev);
+ 
+ 	return err;
+ }
++>>>>>>> 02ef6e1d0b00 (igb: Fix queue allocation method to accommodate changing during runtime)
  /* igb_main.c */
* Unmerged path drivers/net/ethernet/intel/igb/igb_main.c
