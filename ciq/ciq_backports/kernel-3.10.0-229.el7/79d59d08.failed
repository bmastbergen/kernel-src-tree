iscsi-target: Fix wrong buffer / buffer overrun in iscsi_change_param_value()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [target] iscsi: Fix wrong buffer / buffer overrun in iscsi_change_param_value() (Andy Grover) [1129387]
Rebuild_FUZZ: 95.24%
commit-author Roland Dreier <roland@purestorage.com>
commit 79d59d08082dd0a0a18f8ceb78c99f9f321d72aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/79d59d08.failed

In non-leading connection login, iscsi_login_non_zero_tsih_s1() calls
iscsi_change_param_value() with the buffer it uses to hold the login
PDU, not a temporary buffer.  This leads to the login header getting
corrupted and login failing for non-leading connections in MC/S.

Fix this by adding a wrapper iscsi_change_param_sprintf() that handles
the temporary buffer itself to avoid confusion.  Also handle sending a
reject in case of failure in the wrapper, which lets the calling code
get quite a bit smaller and easier to read.

Finally, bump the size of the temporary buffer from 32 to 64 bytes to be
safe, since "MaxRecvDataSegmentLength=" by itself is 25 bytes; with a
trailing NUL, a value >= 1M will lead to a buffer overrun.  (This isn't
the default but we don't need to run right at the ragged edge here)

	Reported-by: Santosh Kulkarni <santosh.kulkarni@calsoftinc.com>
	Signed-off-by: Roland Dreier <roland@purestorage.com>
	Cc: stable@vger.kernel.org # 3.10+
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 79d59d08082dd0a0a18f8ceb78c99f9f321d72aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/iscsi/iscsi_target_login.c
diff --cc drivers/target/iscsi/iscsi_target_login.c
index 75c270765182,d9b1d88e1ad3..000000000000
--- a/drivers/target/iscsi/iscsi_target_login.c
+++ b/drivers/target/iscsi/iscsi_target_login.c
@@@ -380,13 -401,8 +401,16 @@@ static int iscsi_login_zero_tsih_s2
  	 *
  	 * In our case, we have already located the struct iscsi_tiqn at this point.
  	 */
++<<<<<<< HEAD
 +	memset(buf, 0, 32);
 +	sprintf(buf, "TargetPortalGroupTag=%hu", ISCSI_TPG_S(sess)->tpgt);
 +	if (iscsi_change_param_value(buf, conn->param_list, 0) < 0) {
 +		iscsit_tx_login_rsp(conn, ISCSI_STATUS_CLS_TARGET_ERR,
 +				ISCSI_LOGIN_STATUS_NO_RESOURCES);
++=======
+ 	if (iscsi_change_param_sprintf(conn, "TargetPortalGroupTag=%hu", sess->tpg->tpgt))
++>>>>>>> 79d59d08082d (iscsi-target: Fix wrong buffer / buffer overrun in iscsi_change_param_value())
  		return -1;
- 	}
  
  	/*
  	 * Workaround for Initiators that have broken connection recovery logic.
@@@ -446,11 -454,25 +462,28 @@@
  		pr_warn("Aligning ISER MaxRecvDataSegmentLength: %lu down"
  			" to PAGE_SIZE\n", mrdsl);
  
- 		sprintf(buf, "MaxRecvDataSegmentLength=%lu\n", mrdsl);
- 		if (iscsi_change_param_value(buf, conn->param_list, 0) < 0) {
- 			iscsit_tx_login_rsp(conn, ISCSI_STATUS_CLS_TARGET_ERR,
- 				ISCSI_LOGIN_STATUS_NO_RESOURCES);
+ 		if (iscsi_change_param_sprintf(conn, "MaxRecvDataSegmentLength=%lu\n", mrdsl))
  			return -1;
++<<<<<<< HEAD
++=======
+ 		/*
+ 		 * ISER currently requires that ImmediateData + Unsolicited
+ 		 * Data be disabled when protection / signature MRs are enabled.
+ 		 */
+ check_prot:
+ 		if (sess->se_sess->sup_prot_ops &
+ 		   (TARGET_PROT_DOUT_STRIP | TARGET_PROT_DOUT_PASS |
+ 		    TARGET_PROT_DOUT_INSERT)) {
+ 
+ 			if (iscsi_change_param_sprintf(conn, "ImmediateData=No"))
+ 				return -1;
+ 
+ 			if (iscsi_change_param_sprintf(conn, "InitialR2T=Yes"))
+ 				return -1;
+ 
+ 			pr_debug("Forcing ImmediateData=No + InitialR2T=Yes for"
+ 				 " T10-PI enabled ISER session\n");
++>>>>>>> 79d59d08082d (iscsi-target: Fix wrong buffer / buffer overrun in iscsi_change_param_value())
  		}
  	}
  
@@@ -593,13 -615,8 +626,16 @@@ static int iscsi_login_non_zero_tsih_s2
  	 *
  	 * In our case, we have already located the struct iscsi_tiqn at this point.
  	 */
++<<<<<<< HEAD
 +	memset(buf, 0, 32);
 +	sprintf(buf, "TargetPortalGroupTag=%hu", ISCSI_TPG_S(sess)->tpgt);
 +	if (iscsi_change_param_value(buf, conn->param_list, 0) < 0) {
 +		iscsit_tx_login_rsp(conn, ISCSI_STATUS_CLS_TARGET_ERR,
 +				ISCSI_LOGIN_STATUS_NO_RESOURCES);
++=======
+ 	if (iscsi_change_param_sprintf(conn, "TargetPortalGroupTag=%hu", sess->tpg->tpgt))
++>>>>>>> 79d59d08082d (iscsi-target: Fix wrong buffer / buffer overrun in iscsi_change_param_value())
  		return -1;
- 	}
  
  	return iscsi_login_disable_FIM_keys(conn->param_list, conn);
  }
* Unmerged path drivers/target/iscsi/iscsi_target_login.c
