turbostat: Don't attempt to printf an off_t with %zx

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] turbostat: Don't attempt to printf an off_t with zx (Prarit Bhargava) [1133893]
Rebuild_FUZZ: 99.03%
commit-author Josh Triplett <josh@joshtriplett.org>
commit 2e9c6bc7fb6ffc32d83bc133e4a7389125e8eb0a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2e9c6bc7.failed

turbostat uses the format %zx to print an off_t.  However, %zx wants a
size_t, not an off_t.  On 32-bit targets, those refer to different
types, potentially even with different sizes.  Use %llx and a cast
instead, since printf does not have a length modifier for off_t.

Without this patch, when compiling for a 32-bit target:

turbostat.c: In function 'get_msr':
turbostat.c:231:3: warning: format '%zx' expects argument of type 'size_t', but argument 4 has type 'off_t' [-Wformat]

	Signed-off-by: Josh Triplett <josh@joshtriplett.org>
	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 2e9c6bc7fb6ffc32d83bc133e4a7389125e8eb0a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 025793f4bc0d,dbcbf27a4d8b..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -253,9 -234,7 +253,13 @@@ int _get_msr(int cpu, off_t offset, uns
  	close(fd);
  
  	if (retval != sizeof *msr) {
++<<<<<<< HEAD
 +		if (warn)
 +			fprintf(stderr, "%s offset 0x%zx read failed\n",
 +				pathname, offset);
++=======
+ 		fprintf(stderr, "%s offset 0x%llx read failed\n", pathname, (unsigned long long)offset);
++>>>>>>> 2e9c6bc7fb6f (turbostat: Don't attempt to printf an off_t with %zx)
  		return -1;
  	}
  
* Unmerged path tools/power/x86/turbostat/turbostat.c
