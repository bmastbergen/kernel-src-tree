net: Preserve CHECKSUM_COMPLETE at validation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] Preserve CHECKSUM_COMPLETE at validation (Florian Westphal) [1131999]
Rebuild_FUZZ: 94.12%
commit-author Tom Herbert <therbert@google.com>
commit 5d0c2b95bc57cf8fdc0e7b3e9d7e751eb65ad052
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/5d0c2b95.failed

Currently when the first checksum in a packet is validated using
CHECKSUM_COMPLETE, ip_summed is overwritten to be CHECKSUM_UNNECESSARY
so that any subsequent checksums in the packet are not correctly
validated.

This patch adds csum_valid flag in sk_buff and uses that to indicate
validated checksum instead of setting CHECKSUM_UNNECESSARY. The bit
is set accordingly in the skb_checksum_validate_* functions. The flag
is checked in skb_checksum_complete, so that validation is communicated
between checksum_init and checksum_complete sequence in TCP and UDP.

	Signed-off-by: Tom Herbert <therbert@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5d0c2b95bc57cf8fdc0e7b3e9d7e751eb65ad052)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
diff --cc include/linux/skbuff.h
index 637a677d0d31,72a53805858a..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -497,7 -571,9 +497,13 @@@ struct sk_buff 
  	 * headers if needed
  	 */
  	__u8			encapsulation:1;
++<<<<<<< HEAD
 +	/* 7/9 bit hole (depending on ndisc_nodetype presence) */
++=======
+ 	__u8			encap_hdr_csum:1;
+ 	__u8			csum_valid:1;
+ 	/* 4/6 bit hole (depending on ndisc_nodetype presence) */
++>>>>>>> 5d0c2b95bc57 (net: Preserve CHECKSUM_COMPLETE at validation)
  	kmemcheck_bitfield_end(flags2);
  
  #if defined CONFIG_NET_DMA || defined CONFIG_NET_RX_BUSY_POLL
* Unmerged path include/linux/skbuff.h
