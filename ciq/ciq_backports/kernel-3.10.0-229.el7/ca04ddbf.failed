s390/setup: get rid of MACHINE_HAS_MVCOS machine flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [s390] setup: get rid of MACHINE_HAS_MVCOS machine flag (Hendrik Brueckner) [1099147]
Rebuild_FUZZ: 95.05%
commit-author Heiko Carstens <heiko.carstens@de.ibm.com>
commit ca04ddbf537d30b25f6e240b70f19be35fac4313
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/ca04ddbf.failed

MACHINE_HAS_MVCOS is used exactly once when the machine is brought up.
There is no need to cache the flag in the machine_flags.

	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit ca04ddbf537d30b25f6e240b70f19be35fac4313)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/lib/uaccess_mvcos.c
diff --cc arch/s390/lib/uaccess_mvcos.c
index 1829742bf479,e2685ff2ec4b..000000000000
--- a/arch/s390/lib/uaccess_mvcos.c
+++ b/arch/s390/lib/uaccess_mvcos.c
@@@ -6,8 -6,11 +6,9 @@@
   *		 Gerald Schaefer (gerald.schaefer@de.ibm.com)
   */
  
 -#include <linux/jump_label.h>
  #include <linux/errno.h>
 -#include <linux/init.h>
  #include <linux/mm.h>
+ #include <asm/facility.h>
  #include <asm/uaccess.h>
  #include <asm/futex.h>
  #include "uaccess.h"
@@@ -200,28 -233,18 +201,38 @@@ static size_t strncpy_from_user_mvcos(s
  	return done;
  }
  
 -long __strncpy_from_user(char *dst, const char __user *src, long count)
 -{
 -	if (static_key_true(&have_mvcos))
 -		return strncpy_from_user_mvcos(dst, src, count);
 -	return strncpy_from_user_pt(dst, src, count);
 -}
 -EXPORT_SYMBOL(__strncpy_from_user);
 -
 +struct uaccess_ops uaccess_mvcos = {
 +	.copy_from_user = copy_from_user_mvcos_check,
 +	.copy_from_user_small = copy_from_user_std,
 +	.copy_to_user = copy_to_user_mvcos_check,
 +	.copy_to_user_small = copy_to_user_std,
 +	.copy_in_user = copy_in_user_mvcos,
 +	.clear_user = clear_user_mvcos,
 +	.strnlen_user = strnlen_user_std,
 +	.strncpy_from_user = strncpy_from_user_std,
 +	.futex_atomic_op = futex_atomic_op_std,
 +	.futex_atomic_cmpxchg = futex_atomic_cmpxchg_std,
 +};
 +
++<<<<<<< HEAD
 +struct uaccess_ops uaccess_mvcos_switch = {
 +	.copy_from_user = copy_from_user_mvcos,
 +	.copy_from_user_small = copy_from_user_mvcos,
 +	.copy_to_user = copy_to_user_mvcos,
 +	.copy_to_user_small = copy_to_user_mvcos,
 +	.copy_in_user = copy_in_user_mvcos,
 +	.clear_user = clear_user_mvcos,
 +	.strnlen_user = strnlen_user_mvcos,
 +	.strncpy_from_user = strncpy_from_user_mvcos,
 +	.futex_atomic_op = futex_atomic_op_pt,
 +	.futex_atomic_cmpxchg = futex_atomic_cmpxchg_pt,
 +};
++=======
+ static int __init uaccess_init(void)
+ {
+ 	if (IS_ENABLED(CONFIG_32BIT) || !test_facility(27))
+ 		static_key_slow_dec(&have_mvcos);
+ 	return 0;
+ }
+ early_initcall(uaccess_init);
++>>>>>>> ca04ddbf537d (s390/setup: get rid of MACHINE_HAS_MVCOS machine flag)
diff --git a/arch/s390/include/asm/setup.h b/arch/s390/include/asm/setup.h
index 28cda86bf38e..89b51b2137e9 100644
--- a/arch/s390/include/asm/setup.h
+++ b/arch/s390/include/asm/setup.h
@@ -66,7 +66,6 @@ extern unsigned int s390_user_mode;
 #define MACHINE_FLAG_DIAG44	(1UL << 4)
 #define MACHINE_FLAG_IDTE	(1UL << 5)
 #define MACHINE_FLAG_DIAG9C	(1UL << 6)
-#define MACHINE_FLAG_MVCOS	(1UL << 7)
 #define MACHINE_FLAG_KVM	(1UL << 8)
 #define MACHINE_FLAG_ESOP	(1UL << 9)
 #define MACHINE_FLAG_EDAT1	(1UL << 10)
@@ -92,7 +91,6 @@ extern unsigned int s390_user_mode;
 #define MACHINE_HAS_IDTE	(0)
 #define MACHINE_HAS_DIAG44	(1)
 #define MACHINE_HAS_MVPG	(S390_lowcore.machine_flags & MACHINE_FLAG_MVPG)
-#define MACHINE_HAS_MVCOS	(0)
 #define MACHINE_HAS_EDAT1	(0)
 #define MACHINE_HAS_EDAT2	(0)
 #define MACHINE_HAS_LPP		(0)
@@ -105,7 +103,6 @@ extern unsigned int s390_user_mode;
 #define MACHINE_HAS_IDTE	(S390_lowcore.machine_flags & MACHINE_FLAG_IDTE)
 #define MACHINE_HAS_DIAG44	(S390_lowcore.machine_flags & MACHINE_FLAG_DIAG44)
 #define MACHINE_HAS_MVPG	(1)
-#define MACHINE_HAS_MVCOS	(S390_lowcore.machine_flags & MACHINE_FLAG_MVCOS)
 #define MACHINE_HAS_EDAT1	(S390_lowcore.machine_flags & MACHINE_FLAG_EDAT1)
 #define MACHINE_HAS_EDAT2	(S390_lowcore.machine_flags & MACHINE_FLAG_EDAT2)
 #define MACHINE_HAS_LPP		(S390_lowcore.machine_flags & MACHINE_FLAG_LPP)
diff --git a/arch/s390/kernel/early.c b/arch/s390/kernel/early.c
index 7e16350e01f6..74b1c989fdfa 100644
--- a/arch/s390/kernel/early.c
+++ b/arch/s390/kernel/early.c
@@ -378,8 +378,6 @@ static __init void detect_machine_facilities(void)
 		S390_lowcore.machine_flags |= MACHINE_FLAG_EDAT2;
 	if (test_facility(3))
 		S390_lowcore.machine_flags |= MACHINE_FLAG_IDTE;
-	if (test_facility(27))
-		S390_lowcore.machine_flags |= MACHINE_FLAG_MVCOS;
 	if (test_facility(40))
 		S390_lowcore.machine_flags |= MACHINE_FLAG_LPP;
 	if (test_facility(50) && test_facility(73))
* Unmerged path arch/s390/lib/uaccess_mvcos.c
