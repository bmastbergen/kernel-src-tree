perf/x86/intel: Use rdmsrl_safe() when initializing RAPL PMU

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [x86] perf/intel: Use rdmsrl_safe() when initializing RAPL PMU (Jiri Olsa) [1134356]
Rebuild_FUZZ: 96.55%
commit-author Venkatesh Srinivas <venkateshs@google.com>
commit 24223657806a0ebd0ae5c9caaf7b021091889cf2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/24223657.failed

CPUs which should support the RAPL counters according to
Family/Model/Stepping may still issue #GP when attempting to access
the RAPL MSRs. This may happen when Linux is running under KVM and
we are passing-through host F/M/S data, for example. Use rdmsrl_safe
to first access the RAPL_POWER_UNIT MSR; if this fails, do not
attempt to use this PMU.

	Signed-off-by: Venkatesh Srinivas <venkateshs@google.com>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1394739386-22260-1-git-send-email-venkateshs@google.com
	Cc: zheng.z.yan@intel.com
	Cc: eranian@google.com
	Cc: ak@linux.intel.com
	Cc: linux-kernel@vger.kernel.org
[ The patch also silently fixes another bug: rapl_pmu_init() didn't handle the memory alloc failure case previously. ]
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 24223657806a0ebd0ae5c9caaf7b021091889cf2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_rapl.c
diff --cc arch/x86/kernel/cpu/perf_event_intel_rapl.c
index 264c7c792061,7c87424d4140..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_rapl.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_rapl.c
@@@ -645,10 -676,13 +648,12 @@@ static int __init rapl_pmu_init(void
  		/* unsupported */
  		return 0;
  	}
 -
 -	cpu_notifier_register_begin();
 +	get_online_cpus();
  
  	for_each_online_cpu(cpu) {
- 		rapl_cpu_prepare(cpu);
+ 		ret = rapl_cpu_prepare(cpu);
+ 		if (ret)
+ 			goto out;
  		rapl_cpu_init(cpu);
  	}
  
@@@ -671,7 -705,8 +676,12 @@@
  		hweight32(rapl_cntr_mask),
  		ktime_to_ms(pmu->timer_interval));
  
++<<<<<<< HEAD
 +	put_online_cpus();
++=======
+ out:
+ 	cpu_notifier_register_done();
++>>>>>>> 24223657806a (perf/x86/intel: Use rdmsrl_safe() when initializing RAPL PMU)
  
  	return 0;
  }
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_rapl.c
