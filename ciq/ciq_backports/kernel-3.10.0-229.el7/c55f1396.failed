Btrfs: fix deadlock when mounting a degraded fs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Miao Xie <miaox@cn.fujitsu.com>
commit c55f13964008bfea7c5bee268f28b699cbad7f00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/c55f1396.failed

The deadlock happened when we mount degraded filesystem, the reproduced
steps are following:
 # mkfs.btrfs -f -m raid1 -d raid1 <dev0> <dev1>
 # echo 1 > /sys/block/`basename <dev0>`/device/delete
 # mount -o degraded <dev1> <mnt>

The reason was that the counter -- bi_remaining was wrong. If the missing
or unwriteable device was the last device in the mapping array, we would
not submit the original bio, so we shouldn't increase bi_remaining of it
in btrfs_end_bio(), or we would skip the final endio handle.

Fix this problem by adding a flag into btrfs bio structure. If we submit
the original bio, we will set the flag, and we increase bi_remaining counter,
or we don't.

Though there is another way to fix it -- decrease bi_remaining counter of the
original bio when we make sure the original bio is not submitted, this method
need add more check and is easy to make mistake.

	Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
	Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit c55f13964008bfea7c5bee268f28b699cbad7f00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/volumes.c
diff --cc fs/btrfs/volumes.c
index 3a8df8758f39,4ca3c92a54b3..000000000000
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@@ -5414,9 -5415,12 +5414,17 @@@ static void btrfs_end_bio(struct bio *b
  			set_bit(BIO_UPTODATE, &bio->bi_flags);
  			err = 0;
  		}
+ 
+ 		if (likely(bbio->flags & BTRFS_BIO_ORIG_BIO_SUBMITTED))
+ 			bio_endio_nodec(bio, err);
+ 		else
+ 			bio_endio(bio, err);
  		kfree(bbio);
++<<<<<<< HEAD
 +
 +		bio_endio(bio, err);
++=======
++>>>>>>> c55f13964008 (Btrfs: fix deadlock when mounting a degraded fs)
  	} else if (!is_orig_bio) {
  		bio_put(bio);
  	}
* Unmerged path fs/btrfs/volumes.c
diff --git a/fs/btrfs/volumes.h b/fs/btrfs/volumes.h
index 1a15bbeb65e2..2aaa00c47816 100644
--- a/fs/btrfs/volumes.h
+++ b/fs/btrfs/volumes.h
@@ -190,11 +190,14 @@ struct btrfs_bio_stripe {
 struct btrfs_bio;
 typedef void (btrfs_bio_end_io_t) (struct btrfs_bio *bio, int err);
 
+#define BTRFS_BIO_ORIG_BIO_SUBMITTED	0x1
+
 struct btrfs_bio {
 	atomic_t stripes_pending;
 	struct btrfs_fs_info *fs_info;
 	bio_end_io_t *end_io;
 	struct bio *orig_bio;
+	unsigned long flags;
 	void *private;
 	atomic_t error;
 	int max_errors;
