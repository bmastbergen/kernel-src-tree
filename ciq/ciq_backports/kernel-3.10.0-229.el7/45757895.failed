perf tools: Add feature check for libdw dwarf unwind

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf: Add feature check for libdw dwarf unwind (Jiri Olsa) [1134356]
Rebuild_FUZZ: 93.88%
commit-author Jiri Olsa <jolsa@redhat.com>
commit 45757895c785e0a4c10afd5670cdc26cea2bbc97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/45757895.failed

Adding feature check test code for libdw dwarf unwind.

	Signed-off-by: Jiri Olsa <jolsa@redhat.com>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Jean Pihet <jean.pihet@linaro.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1392825179-5228-4-git-send-email-jolsa@redhat.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 45757895c785e0a4c10afd5670cdc26cea2bbc97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/feature-checks/Makefile
#	tools/perf/config/feature-checks/test-all.c
diff --cc tools/perf/config/feature-checks/Makefile
index 5910d275aba0,2b492f5480e2..000000000000
--- a/tools/perf/config/feature-checks/Makefile
+++ b/tools/perf/config/feature-checks/Makefile
@@@ -1,17 -1,36 +1,48 @@@
  
  FILES=					\
++<<<<<<< HEAD
 +	test-hello			\
 +	test-stackprotector-all		\
 +	test-stackprotector		\
 +	test-volatile-register-var	\
 +	test-fortify-source		\
 +	test-bionic			\
 +	test-libelf			\
 +	test-glibc			\
 +	test-dwarf			\
 +	test-libnuma
++=======
+ 	test-all.bin			\
+ 	test-backtrace.bin		\
+ 	test-bionic.bin			\
+ 	test-dwarf.bin			\
+ 	test-fortify-source.bin		\
+ 	test-glibc.bin			\
+ 	test-gtk2.bin			\
+ 	test-gtk2-infobar.bin		\
+ 	test-hello.bin			\
+ 	test-libaudit.bin		\
+ 	test-libbfd.bin			\
+ 	test-liberty.bin		\
+ 	test-liberty-z.bin		\
+ 	test-cplus-demangle.bin		\
+ 	test-libelf.bin			\
+ 	test-libelf-getphdrnum.bin	\
+ 	test-libelf-mmap.bin		\
+ 	test-libnuma.bin		\
+ 	test-libperl.bin		\
+ 	test-libpython.bin		\
+ 	test-libpython-version.bin	\
+ 	test-libslang.bin		\
+ 	test-libunwind.bin		\
+ 	test-libunwind-debug-frame.bin	\
+ 	test-on-exit.bin		\
+ 	test-stackprotector-all.bin	\
+ 	test-timerfd.bin		\
+ 	test-libdw-dwarf-unwind.bin
++>>>>>>> 45757895c785 (perf tools: Add feature check for libdw dwarf unwind)
  
 -CC := $(CROSS_COMPILE)gcc -MD
 -PKG_CONFIG := $(CROSS_COMPILE)pkg-config
 +CC := $(CC) -MD
  
  all: $(FILES)
  
@@@ -19,40 -38,114 +50,118 @@@ BUILD = $(CC) -o $(OUTPUT)$@ $@.
  
  ###############################
  
 -test-all.bin:
 -	$(BUILD) -Werror -fstack-protector-all -O2 -Werror -D_FORTIFY_SOURCE=2 -ldw -lelf -lnuma -lelf -laudit -I/usr/include/slang -lslang $(shell $(PKG_CONFIG) --libs --cflags gtk+-2.0 2>/dev/null) $(FLAGS_PERL_EMBED) $(FLAGS_PYTHON_EMBED) -DPACKAGE='"perf"' -lbfd -ldl
 +test-all:
 +	$(BUILD) -Werror -fstack-protector -fstack-protector-all -Wvolatile-register-var -O2 -Werror -D_FORTIFY_SOURCE=2 -ldw -lelf -lnuma -lunwind -lunwind-x86_64 -lelf -laudit -I/usr/include/slang -lslang $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null) $(FLAGS_PERL_EMBED) $(FLAGS_PYTHON_EMBED) -DPACKAGE='perf' -DPACKAGE=perf -lbfd -ldl
  
 -test-hello.bin:
 +test-hello:
  	$(BUILD)
  
 -test-stackprotector-all.bin:
 +test-stackprotector-all:
  	$(BUILD) -Werror -fstack-protector-all
  
 -test-fortify-source.bin:
 +test-stackprotector:
 +	$(BUILD) -Werror -fstack-protector -Wstack-protector
 +
 +test-volatile-register-var:
 +	$(BUILD) -Werror -Wvolatile-register-var
 +
 +test-fortify-source:
  	$(BUILD) -O2 -Werror -D_FORTIFY_SOURCE=2
  
 -test-bionic.bin:
 +test-bionic:
  	$(BUILD)
  
 -test-libelf.bin:
 +test-libelf:
  	$(BUILD) -lelf
  
 -test-glibc.bin:
 +test-glibc:
  	$(BUILD)
  
 -test-dwarf.bin:
 +test-dwarf:
  	$(BUILD) -ldw
  
 -test-libelf-mmap.bin:
 -	$(BUILD) -lelf
 -
 -test-libelf-getphdrnum.bin:
 -	$(BUILD) -lelf
 -
 -test-libnuma.bin:
 +test-libnuma:
  	$(BUILD) -lnuma
  
++<<<<<<< HEAD
 +-include *.d */*.d
++=======
+ test-libunwind.bin:
+ 	$(BUILD) -lelf
+ 
+ test-libunwind-debug-frame.bin:
+ 	$(BUILD) -lelf
+ 
+ test-libaudit.bin:
+ 	$(BUILD) -laudit
+ 
+ test-libslang.bin:
+ 	$(BUILD) -I/usr/include/slang -lslang
+ 
+ test-gtk2.bin:
+ 	$(BUILD) $(shell $(PKG_CONFIG) --libs --cflags gtk+-2.0 2>/dev/null)
+ 
+ test-gtk2-infobar.bin:
+ 	$(BUILD) $(shell $(PKG_CONFIG) --libs --cflags gtk+-2.0 2>/dev/null)
+ 
+ grep-libs  = $(filter -l%,$(1))
+ strip-libs = $(filter-out -l%,$(1))
+ 
+ PERL_EMBED_LDOPTS = $(shell perl -MExtUtils::Embed -e ldopts 2>/dev/null)
+ PERL_EMBED_LDFLAGS = $(call strip-libs,$(PERL_EMBED_LDOPTS))
+ PERL_EMBED_LIBADD = $(call grep-libs,$(PERL_EMBED_LDOPTS))
+ PERL_EMBED_CCOPTS = `perl -MExtUtils::Embed -e ccopts 2>/dev/null`
+ FLAGS_PERL_EMBED=$(PERL_EMBED_CCOPTS) $(PERL_EMBED_LDOPTS)
+ 
+ test-libperl.bin:
+ 	$(BUILD) $(FLAGS_PERL_EMBED)
+ 
+ override PYTHON := python
+ override PYTHON_CONFIG := python-config
+ 
+ escape-for-shell-sq =  $(subst ','\'',$(1))
+ shell-sq = '$(escape-for-shell-sq)'
+ 
+ PYTHON_CONFIG_SQ = $(call shell-sq,$(PYTHON_CONFIG))
+ 
+ PYTHON_EMBED_LDOPTS = $(shell $(PYTHON_CONFIG_SQ) --ldflags 2>/dev/null)
+ PYTHON_EMBED_LDFLAGS = $(call strip-libs,$(PYTHON_EMBED_LDOPTS))
+ PYTHON_EMBED_LIBADD = $(call grep-libs,$(PYTHON_EMBED_LDOPTS))
+ PYTHON_EMBED_CCOPTS = $(shell $(PYTHON_CONFIG_SQ) --cflags 2>/dev/null)
+ FLAGS_PYTHON_EMBED = $(PYTHON_EMBED_CCOPTS) $(PYTHON_EMBED_LDOPTS)
+ 
+ test-libpython.bin:
+ 	$(BUILD) $(FLAGS_PYTHON_EMBED)
+ 
+ test-libpython-version.bin:
+ 	$(BUILD) $(FLAGS_PYTHON_EMBED)
+ 
+ test-libbfd.bin:
+ 	$(BUILD) -DPACKAGE='"perf"' -lbfd -ldl
+ 
+ test-liberty.bin:
+ 	$(CC) -o $(OUTPUT)$@ test-libbfd.c -DPACKAGE='"perf"' -lbfd -ldl -liberty
+ 
+ test-liberty-z.bin:
+ 	$(CC) -o $(OUTPUT)$@ test-libbfd.c -DPACKAGE='"perf"' -lbfd -ldl -liberty -lz
+ 
+ test-cplus-demangle.bin:
+ 	$(BUILD) -liberty
+ 
+ test-on-exit.bin:
+ 	$(BUILD)
+ 
+ test-backtrace.bin:
+ 	$(BUILD)
+ 
+ test-timerfd.bin:
+ 	$(BUILD)
+ 
+ test-libdw-dwarf-unwind.bin:
+ 	$(BUILD)
+ 
+ -include *.d
++>>>>>>> 45757895c785 (perf tools: Add feature check for libdw dwarf unwind)
  
  ###############################
  
diff --cc tools/perf/config/feature-checks/test-all.c
index 50d431892a0c,fc37eb3ca17b..000000000000
--- a/tools/perf/config/feature-checks/test-all.c
+++ b/tools/perf/config/feature-checks/test-all.c
@@@ -81,6 -81,18 +81,21 @@@
  # include "test-libnuma.c"
  #undef main
  
++<<<<<<< HEAD
++=======
+ #define main main_test_timerfd
+ # include "test-timerfd.c"
+ #undef main
+ 
+ #define main main_test_stackprotector_all
+ # include "test-stackprotector-all.c"
+ #undef main
+ 
+ #define main main_test_libdw_dwarf_unwind
+ # include "test-libdw-dwarf-unwind.c"
+ #undef main
+ 
++>>>>>>> 45757895c785 (perf tools: Add feature check for libdw dwarf unwind)
  int main(int argc, char *argv[])
  {
  	main_test_libpython();
@@@ -101,6 -113,9 +116,12 @@@
  	main_test_on_exit();
  	main_test_backtrace();
  	main_test_libnuma();
++<<<<<<< HEAD
++=======
+ 	main_test_timerfd();
+ 	main_test_stackprotector_all();
+ 	main_test_libdw_dwarf_unwind();
++>>>>>>> 45757895c785 (perf tools: Add feature check for libdw dwarf unwind)
  
  	return 0;
  }
diff --git a/tools/perf/config/Makefile b/tools/perf/config/Makefile
index 374f88fe17c5..6c15f6b360e0 100644
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@ -48,6 +48,18 @@ endif
 
 LIB_INCLUDE := $(srctree)/tools/lib/
 
+ifndef NO_LIBELF
+  # for linking with debug library, run like:
+  # make DEBUG=1 LIBDW_DIR=/opt/libdw/
+  ifdef LIBDW_DIR
+    LIBDW_CFLAGS  := -I$(LIBDW_DIR)/include
+    LIBDW_LDFLAGS := -L$(LIBDW_DIR)/lib
+
+    FEATURE_CHECK_CFLAGS-libdw-dwarf-unwind := $(LIBDW_CFLAGS)
+    FEATURE_CHECK_LDFLAGS-libdw-dwarf-unwind := $(LIBDW_LDFLAGS) -ldw
+  endif
+endif
+
 # include ARCH specific config
 -include $(src-perf)/arch/$(ARCH)/Makefile
 
@@ -217,13 +229,6 @@ else
       msg := $(error No gnu/libc-version.h found, please install glibc-dev[el]/glibc-static);
     endif
   else
-    # for linking with debug library, run like:
-    # make DEBUG=1 LIBDW_DIR=/opt/libdw/
-    ifdef LIBDW_DIR
-      LIBDW_CFLAGS  := -I$(LIBDW_DIR)/include
-      LIBDW_LDFLAGS := -L$(LIBDW_DIR)/lib
-    endif
-
     ifneq ($(feature-dwarf), 1)
       msg := $(warning No libdw.h found or old libdw.h found or elfutils is older than 0.138, disables dwarf support. Please install new elfutils-devel/libdw-dev);
       NO_DWARF := 1
* Unmerged path tools/perf/config/feature-checks/Makefile
* Unmerged path tools/perf/config/feature-checks/test-all.c
diff --git a/tools/perf/config/feature-checks/test-libdw-dwarf-unwind.c b/tools/perf/config/feature-checks/test-libdw-dwarf-unwind.c
new file mode 100644
index 000000000000..f676a3ff442a
--- /dev/null
+++ b/tools/perf/config/feature-checks/test-libdw-dwarf-unwind.c
@@ -0,0 +1,13 @@
+
+#include <elfutils/libdwfl.h>
+
+int main(void)
+{
+	/*
+	 * This function is guarded via: __nonnull_attribute__ (1, 2).
+	 * Passing '1' as arguments value. This code is never executed,
+	 * only compiled.
+	 */
+	dwfl_thread_getframes((void *) 1, (void *) 1, NULL);
+	return 0;
+}
