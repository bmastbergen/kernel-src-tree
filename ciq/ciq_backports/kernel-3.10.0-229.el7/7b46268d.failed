KVM: trace kvm_ple_window grow/shrink

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit 7b46268d29543e313e731606d845e65c17f232e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/7b46268d.failed

Tracepoint for dynamic PLE window, fired on every potential change.

	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 7b46268d29543e313e731606d845e65c17f232e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index 178f134d3e73,661abc2f7049..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -5628,6 -5701,76 +5628,79 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static int __grow_ple_window(int val)
+ {
+ 	if (ple_window_grow < 1)
+ 		return ple_window;
+ 
+ 	val = min(val, ple_window_actual_max);
+ 
+ 	if (ple_window_grow < ple_window)
+ 		val *= ple_window_grow;
+ 	else
+ 		val += ple_window_grow;
+ 
+ 	return val;
+ }
+ 
+ static int __shrink_ple_window(int val, int modifier, int minimum)
+ {
+ 	if (modifier < 1)
+ 		return ple_window;
+ 
+ 	if (modifier < ple_window)
+ 		val /= modifier;
+ 	else
+ 		val -= modifier;
+ 
+ 	return max(val, minimum);
+ }
+ 
+ static void grow_ple_window(struct kvm_vcpu *vcpu)
+ {
+ 	struct vcpu_vmx *vmx = to_vmx(vcpu);
+ 	int old = vmx->ple_window;
+ 
+ 	vmx->ple_window = __grow_ple_window(old);
+ 
+ 	if (vmx->ple_window != old)
+ 		vmx->ple_window_dirty = true;
+ 
+ 	trace_kvm_ple_window_grow(vcpu->vcpu_id, vmx->ple_window, old);
+ }
+ 
+ static void shrink_ple_window(struct kvm_vcpu *vcpu)
+ {
+ 	struct vcpu_vmx *vmx = to_vmx(vcpu);
+ 	int old = vmx->ple_window;
+ 
+ 	vmx->ple_window = __shrink_ple_window(old,
+ 	                                      ple_window_shrink, ple_window);
+ 
+ 	if (vmx->ple_window != old)
+ 		vmx->ple_window_dirty = true;
+ 
+ 	trace_kvm_ple_window_shrink(vcpu->vcpu_id, vmx->ple_window, old);
+ }
+ 
+ /*
+  * ple_window_actual_max is computed to be one grow_ple_window() below
+  * ple_window_max. (See __grow_ple_window for the reason.)
+  * This prevents overflows, because ple_window_max is int.
+  * ple_window_max effectively rounded down to a multiple of ple_window_grow in
+  * this process.
+  * ple_window_max is also prevented from setting vmx->ple_window < ple_window.
+  */
+ static void update_ple_window_actual_max(void)
+ {
+ 	ple_window_actual_max =
+ 			__shrink_ple_window(max(ple_window_max, ple_window),
+ 			                    ple_window_grow, INT_MIN);
+ }
+ 
++>>>>>>> 7b46268d2954 (KVM: trace kvm_ple_window grow/shrink)
  /*
   * Indicate a busy-waiting vcpu in spinlock. We do not enable the PAUSE
   * exiting, so only get here on cpu with PAUSE-Loop-Exiting.
diff --git a/arch/x86/kvm/trace.h b/arch/x86/kvm/trace.h
index 33574c95220d..23246cfd6b01 100644
--- a/arch/x86/kvm/trace.h
+++ b/arch/x86/kvm/trace.h
@@ -848,6 +848,36 @@ TRACE_EVENT(kvm_track_tsc,
 		  __print_symbolic(__entry->host_clock, host_clocks))
 );
 
+TRACE_EVENT(kvm_ple_window,
+	TP_PROTO(bool grow, unsigned int vcpu_id, int new, int old),
+	TP_ARGS(grow, vcpu_id, new, old),
+
+	TP_STRUCT__entry(
+		__field(                bool,      grow         )
+		__field(        unsigned int,   vcpu_id         )
+		__field(                 int,       new         )
+		__field(                 int,       old         )
+	),
+
+	TP_fast_assign(
+		__entry->grow           = grow;
+		__entry->vcpu_id        = vcpu_id;
+		__entry->new            = new;
+		__entry->old            = old;
+	),
+
+	TP_printk("vcpu %u: ple_window %d (%s %d)",
+	          __entry->vcpu_id,
+	          __entry->new,
+	          __entry->grow ? "grow" : "shrink",
+	          __entry->old)
+);
+
+#define trace_kvm_ple_window_grow(vcpu_id, new, old) \
+	trace_kvm_ple_window(true, vcpu_id, new, old)
+#define trace_kvm_ple_window_shrink(vcpu_id, new, old) \
+	trace_kvm_ple_window(false, vcpu_id, new, old)
+
 #endif /* CONFIG_X86_64 */
 
 #endif /* _TRACE_KVM_H */
* Unmerged path arch/x86/kvm/vmx.c
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 374a65f4180b..4b3787a23330 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7555,3 +7555,4 @@ EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_invlpga);
 EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_skinit);
 EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_nested_intercepts);
 EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_write_tsc_offset);
+EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_ple_window);
