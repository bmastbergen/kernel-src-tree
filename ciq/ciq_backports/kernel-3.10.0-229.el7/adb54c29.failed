iser-target: Add support for ISCSI_OP_TEXT opcode + payload handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [iser-target] Add support for ISCSI_OP_TEXT opcode + payload handling (Andy Grover) [1058736]
Rebuild_FUZZ: 89.43%
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit adb54c29310e8785e4f2eb0dc76e0e2fde943b11
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/adb54c29.failed

This patch adds isert_handle_text_cmd() to handle incoming
ISCSI_OP_TEXT PDU processing, along with isert_put_text_rsp()
for posting ISCSI_OP_TEXT_RSP ib_send_wr response.

It copies ISCSI_OP_TEXT payload using unsolicited payload at
&iser_rx_desc->data[0] into iscsi_cmd->text_in_ptr for usage
with outgoing isert_put_text_rsp() -> iscsit_build_text_rsp()

v2 changes:
  - Let iscsit_build_text_rsp() determine any extra padding

	Reported-by: Or Gerlitz <ogerlitz@mellanox.com>
	Cc: Or Gerlitz <ogerlitz@mellanox.com>
	Cc: Mike Christie <michaelc@cs.wisc.edu>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit adb54c29310e8785e4f2eb0dc76e0e2fde943b11)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/isert/ib_isert.c
diff --cc drivers/infiniband/ulp/isert/ib_isert.c
index ec71464a2b6f,f02bfcc282e5..000000000000
--- a/drivers/infiniband/ulp/isert/ib_isert.c
+++ b/drivers/infiniband/ulp/isert/ib_isert.c
@@@ -1029,6 -1014,52 +1029,55 @@@ isert_handle_iscsi_dataout(struct isert
  }
  
  static int
++<<<<<<< HEAD
++=======
+ isert_handle_nop_out(struct isert_conn *isert_conn, struct isert_cmd *isert_cmd,
+ 		     struct iser_rx_desc *rx_desc, unsigned char *buf)
+ {
+ 	struct iscsi_cmd *cmd = &isert_cmd->iscsi_cmd;
+ 	struct iscsi_conn *conn = isert_conn->conn;
+ 	struct iscsi_nopout *hdr = (struct iscsi_nopout *)buf;
+ 	int rc;
+ 
+ 	rc = iscsit_setup_nop_out(conn, cmd, hdr);
+ 	if (rc < 0)
+ 		return rc;
+ 	/*
+ 	 * FIXME: Add support for NOPOUT payload using unsolicited RDMA payload
+ 	 */
+ 
+ 	return iscsit_process_nop_out(conn, cmd, hdr);
+ }
+ 
+ static int
+ isert_handle_text_cmd(struct isert_conn *isert_conn, struct isert_cmd *isert_cmd,
+ 		      struct iser_rx_desc *rx_desc, struct iscsi_text *hdr)
+ {
+ 	struct iscsi_cmd *cmd = &isert_cmd->iscsi_cmd;
+ 	struct iscsi_conn *conn = isert_conn->conn;
+ 	u32 payload_length = ntoh24(hdr->dlength);
+ 	int rc;
+ 	unsigned char *text_in;
+ 
+ 	rc = iscsit_setup_text_cmd(conn, cmd, hdr);
+ 	if (rc < 0)
+ 		return rc;
+ 
+ 	text_in = kzalloc(payload_length, GFP_KERNEL);
+ 	if (!text_in) {
+ 		pr_err("Unable to allocate text_in of payload_length: %u\n",
+ 		       payload_length);
+ 		return -ENOMEM;
+ 	}
+ 	cmd->text_in_ptr = text_in;
+ 
+ 	memcpy(cmd->text_in_ptr, &rx_desc->data[0], payload_length);
+ 
+ 	return iscsit_process_text_cmd(conn, cmd, hdr);
+ }
+ 
+ static int
++>>>>>>> adb54c29310e (iser-target: Add support for ISCSI_OP_TEXT opcode + payload handling)
  isert_rx_opcode(struct isert_conn *isert_conn, struct iser_rx_desc *rx_desc,
  		uint32_t read_stag, uint64_t read_va,
  		uint32_t write_stag, uint64_t write_va)
* Unmerged path drivers/infiniband/ulp/isert/ib_isert.c
