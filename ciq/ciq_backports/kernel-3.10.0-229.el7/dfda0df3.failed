drm/mst: rework payload table allocation to conform better.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] mst: rework payload table allocation to conform better (Dave Airlie) [1140440]
Rebuild_FUZZ: 95.58%
commit-author Dave Airlie <airlied@redhat.com>
commit dfda0df3426483cf5fc7441f23f318edbabecb03
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/dfda0df3.failed

The old code has problems with the Dell MST monitors due to some
assumptions I made that weren't true.

I initially thought the Virtual Channel Payload IDs had to be in
the DPCD table in ascending order, however it appears that assumption
is bogus.

The old code also assumed it was possible to insert a member
into the table and it would move other members up, like it does
when you remove table entries, however reality has shown this
isn't true.

So the new code allocates VCPIs separate from entries in the payload
tracking table, and when we remove an entry from the DPCD table,
I shuffle the tracking payload entries around in the struct.

This appears to make VT switch more robust (still not perfect)
with an MST enabled Dell monitor.

	Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit dfda0df3426483cf5fc7441f23f318edbabecb03)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/drm_dp_mst_topology.c
#	include/drm/drm_dp_mst_helper.h
* Unmerged path drivers/gpu/drm/drm_dp_mst_topology.c
* Unmerged path include/drm/drm_dp_mst_helper.h
* Unmerged path drivers/gpu/drm/drm_dp_mst_topology.c
* Unmerged path include/drm/drm_dp_mst_helper.h
