drm/i915: Flush the PTEs after updating them before suspend

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] i915: Flush the PTEs after updating them before suspend (Rob Clark) [1153301]
Rebuild_FUZZ: 96.49%
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit 91e56499304f3d612053a9cf17f350868182c7d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/91e56499.failed

As we use WC updates of the PTE, we are responsible for notifying the
hardware when to flush its TLBs. Do so after we zap all the PTEs before
suspend (and the BIOS tries to read our GTT).

Fixes a regression from

commit 828c79087cec61eaf4c76bb32c222fbe35ac3930
Author: Ben Widawsky <benjamin.widawsky@intel.com>
Date:   Wed Oct 16 09:21:30 2013 -0700

    drm/i915: Disable GGTT PTEs on GEN6+ suspend

that survived and continue to cause harm even after

commit e568af1c626031925465a5caaab7cca1303d55c7
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Mar 26 20:08:20 2014 +0100

    drm/i915: Undo gtt scratch pte unmapping again

v2: Trivial rebase.
v3: Fixes requires pointer dances.

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=82340
	Tested-by: ming.yao@intel.com
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Cc: stable@vger.kernel.org
	Cc: Takashi Iwai <tiwai@suse.de>
	Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
	Cc: Todd Previte <tprevite@gmail.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
(cherry picked from commit 91e56499304f3d612053a9cf17f350868182c7d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_gem_gtt.c
diff --cc drivers/gpu/drm/i915/i915_gem_gtt.c
index 1f7b4caefb6e,e42925f76b4b..000000000000
--- a/drivers/gpu/drm/i915/i915_gem_gtt.c
+++ b/drivers/gpu/drm/i915/i915_gem_gtt.c
@@@ -534,9 -1333,11 +544,17 @@@ void i915_gem_suspend_gtt_mappings(stru
  	i915_check_and_clear_faults(dev);
  
  	dev_priv->gtt.base.clear_range(&dev_priv->gtt.base,
++<<<<<<< HEAD
 +				       dev_priv->gtt.base.start / PAGE_SIZE,
 +				       dev_priv->gtt.base.total / PAGE_SIZE,
 +				       false);
++=======
+ 				       dev_priv->gtt.base.start,
+ 				       dev_priv->gtt.base.total,
+ 				       true);
+ 
+ 	i915_ggtt_flush(dev_priv);
++>>>>>>> 91e56499304f (drm/i915: Flush the PTEs after updating them before suspend)
  }
  
  void i915_gem_restore_gtt_mappings(struct drm_device *dev)
@@@ -553,11 -1355,42 +571,11 @@@
  				       true);
  
  	list_for_each_entry(obj, &dev_priv->mm.bound_list, global_list) {
 -		struct i915_vma *vma = i915_gem_obj_to_vma(obj,
 -							   &dev_priv->gtt.base);
 -		if (!vma)
 -			continue;
 -
  		i915_gem_clflush_object(obj, obj->pin_display);
 -		/* The bind_vma code tries to be smart about tracking mappings.
 -		 * Unfortunately above, we've just wiped out the mappings
 -		 * without telling our object about it. So we need to fake it.
 -		 */
 -		obj->has_global_gtt_mapping = 0;
 -		vma->bind_vma(vma, obj->cache_level, GLOBAL_BIND);
 -	}
 -
 -
 -	if (INTEL_INFO(dev)->gen >= 8) {
 -		if (IS_CHERRYVIEW(dev))
 -			chv_setup_private_ppat(dev_priv);
 -		else
 -			bdw_setup_private_ppat(dev_priv);
 -
 -		return;
 -	}
 -
 -	list_for_each_entry(vm, &dev_priv->vm_list, global_link) {
 -		/* TODO: Perhaps it shouldn't be gen6 specific */
 -		if (i915_is_ggtt(vm)) {
 -			if (dev_priv->mm.aliasing_ppgtt)
 -				gen6_write_pdes(dev_priv->mm.aliasing_ppgtt);
 -			continue;
 -		}
 -
 -		gen6_write_pdes(container_of(vm, struct i915_hw_ppgtt, base));
 +		i915_gem_gtt_bind_object(obj, obj->cache_level);
  	}
  
- 	i915_gem_chipset_flush(dev);
+ 	i915_ggtt_flush(dev_priv);
  }
  
  int i915_gem_gtt_prepare_object(struct drm_i915_gem_object *obj)
* Unmerged path drivers/gpu/drm/i915/i915_gem_gtt.c
