cpufreq: create another field .flags in cpufreq_frequency_table

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [cpufreq] create another field .flags in cpufreq_frequency_table (Prarit Bhargava) [1134369]
Rebuild_FUZZ: 92.31%
commit-author Viresh Kumar <viresh.kumar@linaro.org>
commit 7f4b04614a273089ad65654f53771c033fadc65e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/7f4b0461.failed

Currently cpufreq frequency table has two fields: frequency and driver_data.
driver_data is only for drivers' internal use and cpufreq core shouldn't use
it at all. But with the introduction of BOOST frequencies, this assumption
was broken and we started using it as a flag instead.

There are two problems due to this:
- It is against the description of this field, as driver's data is used by
  the core now.
- if drivers fill it with -3 for any frequency, then those frequencies are
  never considered by cpufreq core as it is exactly same as value of
  CPUFREQ_BOOST_FREQ, i.e. ~2.

The best way to get this fixed is by creating another field flags which
will be used for such flags. This patch does that. Along with that various
drivers need modifications due to the change of struct cpufreq_frequency_table.

	Reviewed-by: Gautham R Shenoy <ego@linux.vnet.ibm.com>
	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 7f4b04614a273089ad65654f53771c033fadc65e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/exynos4x12-cpufreq.c
#	drivers/cpufreq/freq_table.c
#	drivers/cpufreq/powernow-k6.c
#	include/linux/cpufreq.h
diff --cc drivers/cpufreq/exynos4x12-cpufreq.c
index 08b7477b0aa2,466c76ad335b..000000000000
--- a/drivers/cpufreq/exynos4x12-cpufreq.c
+++ b/drivers/cpufreq/exynos4x12-cpufreq.c
@@@ -32,21 -30,21 +32,39 @@@ static unsigned int exynos4x12_volt_tab
  };
  
  static struct cpufreq_frequency_table exynos4x12_freq_table[] = {
++<<<<<<< HEAD
 +	{L0, CPUFREQ_ENTRY_INVALID},
 +	{L1, 1400 * 1000},
 +	{L2, 1300 * 1000},
 +	{L3, 1200 * 1000},
 +	{L4, 1100 * 1000},
 +	{L5, 1000 * 1000},
 +	{L6,  900 * 1000},
 +	{L7,  800 * 1000},
 +	{L8,  700 * 1000},
 +	{L9,  600 * 1000},
 +	{L10, 500 * 1000},
 +	{L11, 400 * 1000},
 +	{L12, 300 * 1000},
 +	{L13, 200 * 1000},
 +	{0, CPUFREQ_TABLE_END},
++=======
+ 	{CPUFREQ_BOOST_FREQ, L0, 1500 * 1000},
+ 	{0, L1, 1400 * 1000},
+ 	{0, L2, 1300 * 1000},
+ 	{0, L3, 1200 * 1000},
+ 	{0, L4, 1100 * 1000},
+ 	{0, L5, 1000 * 1000},
+ 	{0, L6,  900 * 1000},
+ 	{0, L7,  800 * 1000},
+ 	{0, L8,  700 * 1000},
+ 	{0, L9,  600 * 1000},
+ 	{0, L10, 500 * 1000},
+ 	{0, L11, 400 * 1000},
+ 	{0, L12, 300 * 1000},
+ 	{0, L13, 200 * 1000},
+ 	{0, 0, CPUFREQ_TABLE_END},
++>>>>>>> 7f4b04614a27 (cpufreq: create another field .flags in cpufreq_frequency_table)
  };
  
  static struct apll_freq *apll_freq_4x12;
diff --cc drivers/cpufreq/freq_table.c
index 8962d53f6e56,08e7bbcf6d73..000000000000
--- a/drivers/cpufreq/freq_table.c
+++ b/drivers/cpufreq/freq_table.c
@@@ -32,8 -32,11 +32,16 @@@ int cpufreq_frequency_table_cpuinfo(str
  
  			continue;
  		}
++<<<<<<< HEAD
 +		pr_debug("table entry %u: %u kHz, %u driver_data\n",
 +					i, freq, table[i].driver_data);
++=======
+ 		if (!cpufreq_boost_enabled()
+ 		    && (table[i].flags & CPUFREQ_BOOST_FREQ))
+ 			continue;
+ 
+ 		pr_debug("table entry %u: %u kHz\n", i, freq);
++>>>>>>> 7f4b04614a27 (cpufreq: create another field .flags in cpufreq_frequency_table)
  		if (freq < min_freq)
  			min_freq = freq;
  		if (freq > max_freq)
@@@ -205,6 -218,20 +213,23 @@@ static ssize_t show_available_freqs(str
  	for (i = 0; (table[i].frequency != CPUFREQ_TABLE_END); i++) {
  		if (table[i].frequency == CPUFREQ_ENTRY_INVALID)
  			continue;
++<<<<<<< HEAD
++=======
+ 		/*
+ 		 * show_boost = true and driver_data = BOOST freq
+ 		 * display BOOST freqs
+ 		 *
+ 		 * show_boost = false and driver_data = BOOST freq
+ 		 * show_boost = true and driver_data != BOOST freq
+ 		 * continue - do not display anything
+ 		 *
+ 		 * show_boost = false and driver_data != BOOST freq
+ 		 * display NON BOOST freqs
+ 		 */
+ 		if (show_boost ^ (table[i].flags & CPUFREQ_BOOST_FREQ))
+ 			continue;
+ 
++>>>>>>> 7f4b04614a27 (cpufreq: create another field .flags in cpufreq_frequency_table)
  		count += sprintf(&buf[count], "%d ", table[i].frequency);
  	}
  	count += sprintf(&buf[count], "\n");
diff --cc drivers/cpufreq/powernow-k6.c
index a5b23da513dc,49f120e1bc7b..000000000000
--- a/drivers/cpufreq/powernow-k6.c
+++ b/drivers/cpufreq/powernow-k6.c
@@@ -29,17 -29,49 +29,29 @@@ static unsigned in
  
  /* Clock ratio multiplied by 10 - see table 27 in AMD#23446 */
  static struct cpufreq_frequency_table clock_ratio[] = {
++<<<<<<< HEAD
 +	{45,  /* 000 -> 4.5x */ 0},
 +	{50,  /* 001 -> 5.0x */ 0},
 +	{40,  /* 010 -> 4.0x */ 0},
 +	{55,  /* 011 -> 5.5x */ 0},
 +	{20,  /* 100 -> 2.0x */ 0},
 +	{30,  /* 101 -> 3.0x */ 0},
 +	{60,  /* 110 -> 6.0x */ 0},
 +	{35,  /* 111 -> 3.5x */ 0},
 +	{0, CPUFREQ_TABLE_END}
++=======
+ 	{0, 60,  /* 110 -> 6.0x */ 0},
+ 	{0, 55,  /* 011 -> 5.5x */ 0},
+ 	{0, 50,  /* 001 -> 5.0x */ 0},
+ 	{0, 45,  /* 000 -> 4.5x */ 0},
+ 	{0, 40,  /* 010 -> 4.0x */ 0},
+ 	{0, 35,  /* 111 -> 3.5x */ 0},
+ 	{0, 30,  /* 101 -> 3.0x */ 0},
+ 	{0, 20,  /* 100 -> 2.0x */ 0},
+ 	{0, 0, CPUFREQ_TABLE_END}
++>>>>>>> 7f4b04614a27 (cpufreq: create another field .flags in cpufreq_frequency_table)
  };
  
 -static const u8 index_to_register[8] = { 6, 3, 1, 0, 2, 7, 5, 4 };
 -static const u8 register_to_index[8] = { 3, 2, 4, 1, 7, 6, 0, 5 };
 -
 -static const struct {
 -	unsigned freq;
 -	unsigned mult;
 -} usual_frequency_table[] = {
 -	{ 400000, 40 },	// 100   * 4
 -	{ 450000, 45 }, // 100   * 4.5
 -	{ 475000, 50 }, //  95   * 5
 -	{ 500000, 50 }, // 100   * 5
 -	{ 506250, 45 }, // 112.5 * 4.5
 -	{ 533500, 55 }, //  97   * 5.5
 -	{ 550000, 55 }, // 100   * 5.5
 -	{ 562500, 50 }, // 112.5 * 5
 -	{ 570000, 60 }, //  95   * 6
 -	{ 600000, 60 }, // 100   * 6
 -	{ 618750, 55 }, // 112.5 * 5.5
 -	{ 660000, 55 }, // 120   * 5.5
 -	{ 675000, 60 }, // 112.5 * 6
 -	{ 720000, 60 }, // 120   * 6
 -};
 -
 -#define FREQ_RANGE		3000
  
  /**
   * powernow_k6_get_cpu_multiplier - returns the current FSB multiplier
diff --cc include/linux/cpufreq.h
index 4d87da0ff71a,5ae5100c1f24..000000000000
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@@ -404,10 -455,14 +404,19 @@@ extern struct cpufreq_governor cpufreq_
   *                     FREQUENCY TABLE HELPERS                       *
   *********************************************************************/
  
++<<<<<<< HEAD
 +#define CPUFREQ_ENTRY_INVALID ~0
 +#define CPUFREQ_TABLE_END     ~1
++=======
+ /* Special Values of .frequency field */
+ #define CPUFREQ_ENTRY_INVALID	~0
+ #define CPUFREQ_TABLE_END	~1
+ /* Special Values of .flags field */
+ #define CPUFREQ_BOOST_FREQ	(1 << 0)
++>>>>>>> 7f4b04614a27 (cpufreq: create another field .flags in cpufreq_frequency_table)
  
  struct cpufreq_frequency_table {
+ 	unsigned int	flags;
  	unsigned int	driver_data; /* driver specific data, not used by core */
  	unsigned int	frequency; /* kHz - doesn't need to be in ascending
  				    * order */
diff --git a/arch/mips/loongson/lemote-2f/clock.c b/arch/mips/loongson/lemote-2f/clock.c
index bc739d4bab2e..1d075d80fbbe 100644
--- a/arch/mips/loongson/lemote-2f/clock.c
+++ b/arch/mips/loongson/lemote-2f/clock.c
@@ -29,16 +29,16 @@ enum {
 };
 
 struct cpufreq_frequency_table loongson2_clockmod_table[] = {
-	{DC_RESV, CPUFREQ_ENTRY_INVALID},
-	{DC_ZERO, CPUFREQ_ENTRY_INVALID},
-	{DC_25PT, 0},
-	{DC_37PT, 0},
-	{DC_50PT, 0},
-	{DC_62PT, 0},
-	{DC_75PT, 0},
-	{DC_87PT, 0},
-	{DC_DISABLE, 0},
-	{DC_RESV, CPUFREQ_TABLE_END},
+	{0, DC_RESV, CPUFREQ_ENTRY_INVALID},
+	{0, DC_ZERO, CPUFREQ_ENTRY_INVALID},
+	{0, DC_25PT, 0},
+	{0, DC_37PT, 0},
+	{0, DC_50PT, 0},
+	{0, DC_62PT, 0},
+	{0, DC_75PT, 0},
+	{0, DC_87PT, 0},
+	{0, DC_DISABLE, 0},
+	{0, DC_RESV, CPUFREQ_TABLE_END},
 };
 EXPORT_SYMBOL_GPL(loongson2_clockmod_table);
 
diff --git a/drivers/cpufreq/cris-artpec3-cpufreq.c b/drivers/cpufreq/cris-artpec3-cpufreq.c
index ee142c490575..0c67bf527e9b 100644
--- a/drivers/cpufreq/cris-artpec3-cpufreq.c
+++ b/drivers/cpufreq/cris-artpec3-cpufreq.c
@@ -15,9 +15,9 @@ static struct notifier_block cris_sdram_freq_notifier_block = {
 };
 
 static struct cpufreq_frequency_table cris_freq_table[] = {
-	{0x01,	6000},
-	{0x02,	200000},
-	{0,	CPUFREQ_TABLE_END},
+	{0, 0x01, 6000},
+	{0, 0x02, 200000},
+	{0, 0, CPUFREQ_TABLE_END},
 };
 
 static unsigned int cris_freq_get_cpu_frequency(unsigned int cpu)
diff --git a/drivers/cpufreq/cris-etraxfs-cpufreq.c b/drivers/cpufreq/cris-etraxfs-cpufreq.c
index 12952235d5db..c570a8a6f295 100644
--- a/drivers/cpufreq/cris-etraxfs-cpufreq.c
+++ b/drivers/cpufreq/cris-etraxfs-cpufreq.c
@@ -15,9 +15,9 @@ static struct notifier_block cris_sdram_freq_notifier_block = {
 };
 
 static struct cpufreq_frequency_table cris_freq_table[] = {
-	{0x01, 6000},
-	{0x02, 200000},
-	{0, CPUFREQ_TABLE_END},
+	{0, 0x01, 6000},
+	{0, 0x02, 200000},
+	{0, 0, CPUFREQ_TABLE_END},
 };
 
 static unsigned int cris_freq_get_cpu_frequency(unsigned int cpu)
diff --git a/drivers/cpufreq/elanfreq.c b/drivers/cpufreq/elanfreq.c
index 658d860344b0..348a29e809be 100644
--- a/drivers/cpufreq/elanfreq.c
+++ b/drivers/cpufreq/elanfreq.c
@@ -56,15 +56,15 @@ static struct s_elan_multiplier elan_multiplier[] = {
 };
 
 static struct cpufreq_frequency_table elanfreq_table[] = {
-	{0,	1000},
-	{1,	2000},
-	{2,	4000},
-	{3,	8000},
-	{4,	16000},
-	{5,	33000},
-	{6,	66000},
-	{7,	99000},
-	{0,	CPUFREQ_TABLE_END},
+	{0, 0,	1000},
+	{0, 1,	2000},
+	{0, 2,	4000},
+	{0, 3,	8000},
+	{0, 4,	16000},
+	{0, 5,	33000},
+	{0, 6,	66000},
+	{0, 7,	99000},
+	{0, 0,	CPUFREQ_TABLE_END},
 };
 
 
diff --git a/drivers/cpufreq/exynos4210-cpufreq.c b/drivers/cpufreq/exynos4210-cpufreq.c
index add7fbec4fc9..511995aeb8ba 100644
--- a/drivers/cpufreq/exynos4210-cpufreq.c
+++ b/drivers/cpufreq/exynos4210-cpufreq.c
@@ -31,12 +31,12 @@ static unsigned int exynos4210_volt_table[] = {
 };
 
 static struct cpufreq_frequency_table exynos4210_freq_table[] = {
-	{L0, 1200 * 1000},
-	{L1, 1000 * 1000},
-	{L2,  800 * 1000},
-	{L3,  500 * 1000},
-	{L4,  200 * 1000},
-	{0, CPUFREQ_TABLE_END},
+	{0, L0, 1200 * 1000},
+	{0, L1, 1000 * 1000},
+	{0, L2,  800 * 1000},
+	{0, L3,  500 * 1000},
+	{0, L4,  200 * 1000},
+	{0, 0, CPUFREQ_TABLE_END},
 };
 
 static struct apll_freq apll_freq_4210[] = {
* Unmerged path drivers/cpufreq/exynos4x12-cpufreq.c
diff --git a/drivers/cpufreq/exynos5250-cpufreq.c b/drivers/cpufreq/exynos5250-cpufreq.c
index 9fae466d7746..e07a6201af36 100644
--- a/drivers/cpufreq/exynos5250-cpufreq.c
+++ b/drivers/cpufreq/exynos5250-cpufreq.c
@@ -35,23 +35,23 @@ static unsigned int exynos5250_volt_table[] = {
 };
 
 static struct cpufreq_frequency_table exynos5250_freq_table[] = {
-	{L0, 1700 * 1000},
-	{L1, 1600 * 1000},
-	{L2, 1500 * 1000},
-	{L3, 1400 * 1000},
-	{L4, 1300 * 1000},
-	{L5, 1200 * 1000},
-	{L6, 1100 * 1000},
-	{L7, 1000 * 1000},
-	{L8,  900 * 1000},
-	{L9,  800 * 1000},
-	{L10, 700 * 1000},
-	{L11, 600 * 1000},
-	{L12, 500 * 1000},
-	{L13, 400 * 1000},
-	{L14, 300 * 1000},
-	{L15, 200 * 1000},
-	{0, CPUFREQ_TABLE_END},
+	{0, L0, 1700 * 1000},
+	{0, L1, 1600 * 1000},
+	{0, L2, 1500 * 1000},
+	{0, L3, 1400 * 1000},
+	{0, L4, 1300 * 1000},
+	{0, L5, 1200 * 1000},
+	{0, L6, 1100 * 1000},
+	{0, L7, 1000 * 1000},
+	{0, L8,  900 * 1000},
+	{0, L9,  800 * 1000},
+	{0, L10, 700 * 1000},
+	{0, L11, 600 * 1000},
+	{0, L12, 500 * 1000},
+	{0, L13, 400 * 1000},
+	{0, L14, 300 * 1000},
+	{0, L15, 200 * 1000},
+	{0, 0, CPUFREQ_TABLE_END},
 };
 
 static struct apll_freq apll_freq_5250[] = {
* Unmerged path drivers/cpufreq/freq_table.c
diff --git a/drivers/cpufreq/kirkwood-cpufreq.c b/drivers/cpufreq/kirkwood-cpufreq.c
index b2644af985ec..b4ed0b1bc498 100644
--- a/drivers/cpufreq/kirkwood-cpufreq.c
+++ b/drivers/cpufreq/kirkwood-cpufreq.c
@@ -43,9 +43,9 @@ static struct priv
  * table.
  */
 static struct cpufreq_frequency_table kirkwood_freq_table[] = {
-	{STATE_CPU_FREQ,	0}, /* CPU uses cpuclk */
-	{STATE_DDR_FREQ,	0}, /* CPU uses ddrclk */
-	{0,			CPUFREQ_TABLE_END},
+	{0, STATE_CPU_FREQ,	0}, /* CPU uses cpuclk */
+	{0, STATE_DDR_FREQ,	0}, /* CPU uses ddrclk */
+	{0, 0,			CPUFREQ_TABLE_END},
 };
 
 static unsigned int kirkwood_cpufreq_get_cpu_frequency(unsigned int cpu)
diff --git a/drivers/cpufreq/maple-cpufreq.c b/drivers/cpufreq/maple-cpufreq.c
index cdd62915efaf..5ac76c5c562e 100644
--- a/drivers/cpufreq/maple-cpufreq.c
+++ b/drivers/cpufreq/maple-cpufreq.c
@@ -59,9 +59,9 @@
 #define CPUFREQ_LOW                   1
 
 static struct cpufreq_frequency_table maple_cpu_freqs[] = {
-	{CPUFREQ_HIGH,		0},
-	{CPUFREQ_LOW,		0},
-	{0,			CPUFREQ_TABLE_END},
+	{0, CPUFREQ_HIGH,		0},
+	{0, CPUFREQ_LOW,		0},
+	{0, 0,				CPUFREQ_TABLE_END},
 };
 
 static struct freq_attr *maple_cpu_freqs_attr[] = {
diff --git a/drivers/cpufreq/p4-clockmod.c b/drivers/cpufreq/p4-clockmod.c
index 6164c1cca504..54ad4434085e 100644
--- a/drivers/cpufreq/p4-clockmod.c
+++ b/drivers/cpufreq/p4-clockmod.c
@@ -92,16 +92,16 @@ static int cpufreq_p4_setdc(unsigned int cpu, unsigned int newstate)
 
 
 static struct cpufreq_frequency_table p4clockmod_table[] = {
-	{DC_RESV, CPUFREQ_ENTRY_INVALID},
-	{DC_DFLT, 0},
-	{DC_25PT, 0},
-	{DC_38PT, 0},
-	{DC_50PT, 0},
-	{DC_64PT, 0},
-	{DC_75PT, 0},
-	{DC_88PT, 0},
-	{DC_DISABLE, 0},
-	{DC_RESV, CPUFREQ_TABLE_END},
+	{0, DC_RESV, CPUFREQ_ENTRY_INVALID},
+	{0, DC_DFLT, 0},
+	{0, DC_25PT, 0},
+	{0, DC_38PT, 0},
+	{0, DC_50PT, 0},
+	{0, DC_64PT, 0},
+	{0, DC_75PT, 0},
+	{0, DC_88PT, 0},
+	{0, DC_DISABLE, 0},
+	{0, DC_RESV, CPUFREQ_TABLE_END},
 };
 
 
diff --git a/drivers/cpufreq/pasemi-cpufreq.c b/drivers/cpufreq/pasemi-cpufreq.c
index b704da404067..913707a52420 100644
--- a/drivers/cpufreq/pasemi-cpufreq.c
+++ b/drivers/cpufreq/pasemi-cpufreq.c
@@ -61,12 +61,12 @@ static int current_astate;
 
 /* We support 5(A0-A4) power states excluding turbo(A5-A6) modes */
 static struct cpufreq_frequency_table pas_freqs[] = {
-	{0,	0},
-	{1,	0},
-	{2,	0},
-	{3,	0},
-	{4,	0},
-	{0,	CPUFREQ_TABLE_END},
+	{0, 0,	0},
+	{0, 1,	0},
+	{0, 2,	0},
+	{0, 3,	0},
+	{0, 4,	0},
+	{0, 0,	CPUFREQ_TABLE_END},
 };
 
 static struct freq_attr *pas_cpu_freqs_attr[] = {
diff --git a/drivers/cpufreq/pmac32-cpufreq.c b/drivers/cpufreq/pmac32-cpufreq.c
index 3104fad82480..07b3f090c127 100644
--- a/drivers/cpufreq/pmac32-cpufreq.c
+++ b/drivers/cpufreq/pmac32-cpufreq.c
@@ -80,9 +80,9 @@ static int is_pmu_based;
 #define CPUFREQ_LOW                   1
 
 static struct cpufreq_frequency_table pmac_cpu_freqs[] = {
-	{CPUFREQ_HIGH, 		0},
-	{CPUFREQ_LOW,		0},
-	{0,			CPUFREQ_TABLE_END},
+	{0, CPUFREQ_HIGH,	0},
+	{0, CPUFREQ_LOW,	0},
+	{0, 0,			CPUFREQ_TABLE_END},
 };
 
 static struct freq_attr* pmac_cpu_freqs_attr[] = {
diff --git a/drivers/cpufreq/pmac64-cpufreq.c b/drivers/cpufreq/pmac64-cpufreq.c
index 7ba423431cfe..ac7a0db25da5 100644
--- a/drivers/cpufreq/pmac64-cpufreq.c
+++ b/drivers/cpufreq/pmac64-cpufreq.c
@@ -64,9 +64,9 @@
 #define CPUFREQ_LOW                   1
 
 static struct cpufreq_frequency_table g5_cpu_freqs[] = {
-	{CPUFREQ_HIGH, 		0},
-	{CPUFREQ_LOW,		0},
-	{0,			CPUFREQ_TABLE_END},
+	{0, CPUFREQ_HIGH,	0},
+	{0, CPUFREQ_LOW,	0},
+	{0, 0,			CPUFREQ_TABLE_END},
 };
 
 static struct freq_attr* g5_cpu_freqs_attr[] = {
* Unmerged path drivers/cpufreq/powernow-k6.c
diff --git a/drivers/cpufreq/ppc_cbe_cpufreq.c b/drivers/cpufreq/ppc_cbe_cpufreq.c
index 5936f8d6f2cc..0b65fac3c4fe 100644
--- a/drivers/cpufreq/ppc_cbe_cpufreq.c
+++ b/drivers/cpufreq/ppc_cbe_cpufreq.c
@@ -35,15 +35,15 @@ static DEFINE_MUTEX(cbe_switch_mutex);
 
 /* the CBE supports an 8 step frequency scaling */
 static struct cpufreq_frequency_table cbe_freqs[] = {
-	{1,	0},
-	{2,	0},
-	{3,	0},
-	{4,	0},
-	{5,	0},
-	{6,	0},
-	{8,	0},
-	{10,	0},
-	{0,	CPUFREQ_TABLE_END},
+	{0, 1,	0},
+	{0, 2,	0},
+	{0, 3,	0},
+	{0, 4,	0},
+	{0, 5,	0},
+	{0, 6,	0},
+	{0, 8,	0},
+	{0, 10,	0},
+	{0, 0,	CPUFREQ_TABLE_END},
 };
 
 /*
diff --git a/drivers/cpufreq/s3c2416-cpufreq.c b/drivers/cpufreq/s3c2416-cpufreq.c
index 4f1881eee3f1..e01a681c8f0b 100644
--- a/drivers/cpufreq/s3c2416-cpufreq.c
+++ b/drivers/cpufreq/s3c2416-cpufreq.c
@@ -72,19 +72,19 @@ static struct s3c2416_dvfs s3c2416_dvfs_table[] = {
 #endif
 
 static struct cpufreq_frequency_table s3c2416_freq_table[] = {
-	{ SOURCE_HCLK, FREQ_DVS },
-	{ SOURCE_ARMDIV, 133333 },
-	{ SOURCE_ARMDIV, 266666 },
-	{ SOURCE_ARMDIV, 400000 },
-	{ 0, CPUFREQ_TABLE_END },
+	{ 0, SOURCE_HCLK, FREQ_DVS },
+	{ 0, SOURCE_ARMDIV, 133333 },
+	{ 0, SOURCE_ARMDIV, 266666 },
+	{ 0, SOURCE_ARMDIV, 400000 },
+	{ 0, 0, CPUFREQ_TABLE_END },
 };
 
 static struct cpufreq_frequency_table s3c2450_freq_table[] = {
-	{ SOURCE_HCLK, FREQ_DVS },
-	{ SOURCE_ARMDIV, 133500 },
-	{ SOURCE_ARMDIV, 267000 },
-	{ SOURCE_ARMDIV, 534000 },
-	{ 0, CPUFREQ_TABLE_END },
+	{ 0, SOURCE_HCLK, FREQ_DVS },
+	{ 0, SOURCE_ARMDIV, 133500 },
+	{ 0, SOURCE_ARMDIV, 267000 },
+	{ 0, SOURCE_ARMDIV, 534000 },
+	{ 0, 0, CPUFREQ_TABLE_END },
 };
 
 static int s3c2416_cpufreq_verify_speed(struct cpufreq_policy *policy)
diff --git a/drivers/cpufreq/s3c64xx-cpufreq.c b/drivers/cpufreq/s3c64xx-cpufreq.c
index 27cacb524796..0300e9937901 100644
--- a/drivers/cpufreq/s3c64xx-cpufreq.c
+++ b/drivers/cpufreq/s3c64xx-cpufreq.c
@@ -38,19 +38,19 @@ static struct s3c64xx_dvfs s3c64xx_dvfs_table[] = {
 };
 
 static struct cpufreq_frequency_table s3c64xx_freq_table[] = {
-	{ 0,  66000 },
-	{ 0, 100000 },
-	{ 0, 133000 },
-	{ 1, 200000 },
-	{ 1, 222000 },
-	{ 1, 266000 },
-	{ 2, 333000 },
-	{ 2, 400000 },
-	{ 2, 532000 },
-	{ 2, 533000 },
-	{ 3, 667000 },
-	{ 4, 800000 },
-	{ 0, CPUFREQ_TABLE_END },
+	{ 0, 0,  66000 },
+	{ 0, 0, 100000 },
+	{ 0, 0, 133000 },
+	{ 0, 1, 200000 },
+	{ 0, 1, 222000 },
+	{ 0, 1, 266000 },
+	{ 0, 2, 333000 },
+	{ 0, 2, 400000 },
+	{ 0, 2, 532000 },
+	{ 0, 2, 533000 },
+	{ 0, 3, 667000 },
+	{ 0, 4, 800000 },
+	{ 0, 0, CPUFREQ_TABLE_END },
 };
 #endif
 
diff --git a/drivers/cpufreq/s5pv210-cpufreq.c b/drivers/cpufreq/s5pv210-cpufreq.c
index 5c7757073793..4adda4c01c58 100644
--- a/drivers/cpufreq/s5pv210-cpufreq.c
+++ b/drivers/cpufreq/s5pv210-cpufreq.c
@@ -76,12 +76,12 @@ enum s5pv210_dmc_port {
 };
 
 static struct cpufreq_frequency_table s5pv210_freq_table[] = {
-	{L0, 1000*1000},
-	{L1, 800*1000},
-	{L2, 400*1000},
-	{L3, 200*1000},
-	{L4, 100*1000},
-	{0, CPUFREQ_TABLE_END},
+	{0, L0, 1000*1000},
+	{0, L1, 800*1000},
+	{0, L2, 400*1000},
+	{0, L3, 200*1000},
+	{0, L4, 100*1000},
+	{0, 0, CPUFREQ_TABLE_END},
 };
 
 static struct regulator *arm_regulator;
diff --git a/drivers/cpufreq/sc520_freq.c b/drivers/cpufreq/sc520_freq.c
index 77a210975fc4..f6cb11f5f656 100644
--- a/drivers/cpufreq/sc520_freq.c
+++ b/drivers/cpufreq/sc520_freq.c
@@ -33,9 +33,9 @@ static __u8 __iomem *cpuctl;
 #define PFX "sc520_freq: "
 
 static struct cpufreq_frequency_table sc520_freq_table[] = {
-	{0x01,	100000},
-	{0x02,	133000},
-	{0,	CPUFREQ_TABLE_END},
+	{0, 0x01,	100000},
+	{0, 0x02,	133000},
+	{0, 0,	CPUFREQ_TABLE_END},
 };
 
 static unsigned int sc520_freq_get_cpu_frequency(unsigned int cpu)
diff --git a/drivers/cpufreq/speedstep-ich.c b/drivers/cpufreq/speedstep-ich.c
index 5355abb69afc..510d3e509a14 100644
--- a/drivers/cpufreq/speedstep-ich.c
+++ b/drivers/cpufreq/speedstep-ich.c
@@ -49,9 +49,9 @@ static u32 pmbase;
  * are in kHz for the time being.
  */
 static struct cpufreq_frequency_table speedstep_freqs[] = {
-	{SPEEDSTEP_HIGH,	0},
-	{SPEEDSTEP_LOW,		0},
-	{0,			CPUFREQ_TABLE_END},
+	{0, SPEEDSTEP_HIGH,	0},
+	{0, SPEEDSTEP_LOW,	0},
+	{0, 0,			CPUFREQ_TABLE_END},
 };
 
 
diff --git a/drivers/cpufreq/speedstep-smi.c b/drivers/cpufreq/speedstep-smi.c
index abfba4f731eb..8d7bddaa92ae 100644
--- a/drivers/cpufreq/speedstep-smi.c
+++ b/drivers/cpufreq/speedstep-smi.c
@@ -42,9 +42,9 @@ static enum speedstep_processor speedstep_processor;
  * are in kHz for the time being.
  */
 static struct cpufreq_frequency_table speedstep_freqs[] = {
-	{SPEEDSTEP_HIGH,	0},
-	{SPEEDSTEP_LOW,		0},
-	{0,			CPUFREQ_TABLE_END},
+	{0, SPEEDSTEP_HIGH,	0},
+	{0, SPEEDSTEP_LOW,	0},
+	{0, 0,			CPUFREQ_TABLE_END},
 };
 
 #define GET_SPEEDSTEP_OWNER 0
* Unmerged path include/linux/cpufreq.h
