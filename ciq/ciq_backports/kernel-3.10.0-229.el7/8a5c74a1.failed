cpufreq: Mark function as static in cpufreq.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [cpufreq] Mark function as static in cpufreq.c (Prarit Bhargava) [1134369]
Rebuild_FUZZ: 88.89%
commit-author Rashika Kheria <rashika.kheria@gmail.com>
commit 8a5c74a175ac117e55a50b489ee041f40ff8866b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/8a5c74a1.failed

Mark function as static in cpufreq.c because it is not
used outside this file.

This eliminates the following warning in cpufreq.c:
drivers/cpufreq/cpufreq.c:355:9: warning: no previous prototype for ‘show_boost’ [-Wmissing-prototypes]

	Signed-off-by: Rashika Kheria <rashika.kheria@gmail.com>
	Reviewed-by: Josh Triplett <josh@joshtriplett.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 8a5c74a175ac117e55a50b489ee041f40ff8866b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cpufreq.c
diff --cc drivers/cpufreq/cpufreq.c
index c8bc717e8458,5815af50d3de..000000000000
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@@ -343,6 -352,33 +343,36 @@@ EXPORT_SYMBOL_GPL(cpufreq_notify_transi
  /*********************************************************************
   *                          SYSFS INTERFACE                          *
   *********************************************************************/
++<<<<<<< HEAD
++=======
+ static ssize_t show_boost(struct kobject *kobj,
+ 				 struct attribute *attr, char *buf)
+ {
+ 	return sprintf(buf, "%d\n", cpufreq_driver->boost_enabled);
+ }
+ 
+ static ssize_t store_boost(struct kobject *kobj, struct attribute *attr,
+ 				  const char *buf, size_t count)
+ {
+ 	int ret, enable;
+ 
+ 	ret = sscanf(buf, "%d", &enable);
+ 	if (ret != 1 || enable < 0 || enable > 1)
+ 		return -EINVAL;
+ 
+ 	if (cpufreq_boost_trigger_state(enable)) {
+ 		pr_err("%s: Cannot %s BOOST!\n", __func__,
+ 		       enable ? "enable" : "disable");
+ 		return -EINVAL;
+ 	}
+ 
+ 	pr_debug("%s: cpufreq BOOST %s\n", __func__,
+ 		 enable ? "enabled" : "disabled");
+ 
+ 	return count;
+ }
+ define_one_global_rw(boost);
++>>>>>>> 8a5c74a175ac (cpufreq: Mark function as static in cpufreq.c)
  
  static struct cpufreq_governor *__find_governor(const char *str_governor)
  {
* Unmerged path drivers/cpufreq/cpufreq.c
