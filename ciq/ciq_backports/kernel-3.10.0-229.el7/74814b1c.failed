blk-mq: remove extra requeue trace

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jens Axboe <axboe@fb.com>
commit 74814b1c5569f5503727cf3052a52e2349818409
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/74814b1c.failed

We already issue a blktrace requeue event in
__blk_mq_requeue_request(), don't do it from the original caller
as well.

	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 74814b1c5569f5503727cf3052a52e2349818409)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 8cc24e349f65,0d379830a278..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -400,6 -425,22 +400,25 @@@ static void blk_mq_requeue_request(stru
  		rq->nr_phys_segments--;
  }
  
++<<<<<<< HEAD
++=======
+ void blk_mq_requeue_request(struct request *rq)
+ {
+ 	__blk_mq_requeue_request(rq);
+ 	blk_clear_rq_complete(rq);
+ 
+ 	BUG_ON(blk_queued_rq(rq));
+ 	blk_mq_insert_request(rq, true, true, false);
+ }
+ EXPORT_SYMBOL(blk_mq_requeue_request);
+ 
+ struct request *blk_mq_tag_to_rq(struct blk_mq_tags *tags, unsigned int tag)
+ {
+ 	return tags->rqs[tag];
+ }
+ EXPORT_SYMBOL(blk_mq_tag_to_rq);
+ 
++>>>>>>> 74814b1c5569 (blk-mq: remove extra requeue trace)
  struct blk_mq_timeout_data {
  	struct blk_mq_hw_ctx *hctx;
  	unsigned long *next;
* Unmerged path block/blk-mq.c
