bonding: allow to add vlans on top of empty bond

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit 763e0ecd72fe90fdd73bb1aa1b72caf8381d2fff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/763e0ecd.failed

This limitation maybe had some reason in the past, but now there is not
one -> removing this.

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Acked-by: Veaceslav Falico <vfalico@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 763e0ecd72fe90fdd73bb1aa1b72caf8381d2fff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 2ac0e58bf5b7,ffefb704b529..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -1318,21 -994,13 +1318,24 @@@ static void bond_netpoll_cleanup(struc
  /*---------------------------------- IOCTL ----------------------------------*/
  
  static netdev_features_t bond_fix_features(struct net_device *dev,
 -					   netdev_features_t features)
 +	netdev_features_t features)
  {
 +	struct slave *slave;
  	struct bonding *bond = netdev_priv(dev);
 -	struct list_head *iter;
  	netdev_features_t mask;
 -	struct slave *slave;
 +	int i;
  
++<<<<<<< HEAD
 +	read_lock(&bond->lock);
 +
 +	if (!bond->first_slave) {
 +		/* Disable adding VLANs to empty bond. But why? --mq */
 +		features |= NETIF_F_VLAN_CHALLENGED;
 +		goto out;
 +	}
 +
++=======
++>>>>>>> 763e0ecd72fe (bonding: allow to add vlans on top of empty bond)
  	mask = features;
  	features &= ~NETIF_F_ONE_FOR_ALL;
  	features |= NETIF_F_ALL_FOR_ALL;
@@@ -4377,16 -3947,9 +4380,9 @@@ static void bond_setup(struct net_devic
  	/* Initialize the device options */
  	bond_dev->tx_queue_len = 0;
  	bond_dev->flags |= IFF_MASTER|IFF_MULTICAST;
 -	bond_dev->priv_flags |= IFF_BONDING | IFF_UNICAST_FLT;
 +	bond_dev->priv_flags |= IFF_BONDING;
  	bond_dev->priv_flags &= ~(IFF_XMIT_DST_RELEASE | IFF_TX_SKB_SHARING);
  
- 	/* At first, we block adding VLANs. That's the only way to
- 	 * prevent problems that occur when adding VLANs over an
- 	 * empty bond. The block will be removed once non-challenged
- 	 * slaves are enslaved.
- 	 */
- 	bond_dev->features |= NETIF_F_VLAN_CHALLENGED;
- 
  	/* don't acquire bond device's netif_tx_lock when
  	 * transmitting */
  	bond_dev->features |= NETIF_F_LLTX;
* Unmerged path drivers/net/bonding/bond_main.c
