Drivers: net: hyperv: Allocate memory for all possible per-pecket information

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] hyperv/net: Allocate memory for all possible per-pecket information (Jason Wang) [1146357]
Rebuild_FUZZ: 87.50%
commit-author KY Srinivasan <kys@microsoft.com>
commit 4276372f0dcb191639fa79a171737f4239ded869
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/4276372f.failed

An outgoing packet can potentially need per-packet information for
all the offloads and VLAN tagging. Fix this issue.

	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4276372f0dcb191639fa79a171737f4239ded869)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index 854b31f1a85a,6f39baa67a5f..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -155,9 -317,11 +155,17 @@@ static int netvsc_start_xmit(struct sk_
  
  	/* Allocate a netvsc packet based on # of frags. */
  	packet = kzalloc(sizeof(struct hv_netvsc_packet) +
++<<<<<<< HEAD
 +			 (num_pages * sizeof(struct hv_page_buffer)) +
 +			 sizeof(struct rndis_filter_packet) +
 +			 NDIS_VLAN_PPI_SIZE, GFP_ATOMIC);
++=======
+ 			 (num_data_pgs * sizeof(struct hv_page_buffer)) +
+ 			 sizeof(struct rndis_message) +
+ 			 NDIS_VLAN_PPI_SIZE +
+ 			 NDIS_CSUM_PPI_SIZE +
+ 			 NDIS_LSO_PPI_SIZE, GFP_ATOMIC);
++>>>>>>> 4276372f0dcb (Drivers: net: hyperv: Allocate memory for all possible per-pecket information)
  	if (!packet) {
  		/* out of memory, drop packet */
  		netdev_err(net, "unable to allocate hv_netvsc_packet\n");
* Unmerged path drivers/net/hyperv/netvsc_drv.c
