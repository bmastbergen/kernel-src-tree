ACPI / hotplug / PCI: Pass hotplug context objects to event handlers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] hotplug/pci: Pass hotplug context objects to event handlers (Myron Stowe) [1114228]
Rebuild_FUZZ: 92.91%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit c8ebcf1ff91a8f64b09c4df0ee21ae80a953c39c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/c8ebcf1f.failed

Modify handle_hotplug_event() to pass the entire context object
(instead of its fields individually) to work functions started by it.

This change makes the subsequent consolidation of the event handling
work functions a bit more straightforward.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
(cherry picked from commit c8ebcf1ff91a8f64b09c4df0ee21ae80a953c39c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/acpiphp_glue.c
diff --cc drivers/pci/hotplug/acpiphp_glue.c
index b5069ad47c47,b5a98f4baa3a..000000000000
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@@ -1150,10 -1129,24 +1152,29 @@@ static void _handle_hotplug_event_func(
   *
   * Handles ACPI event notification on slots.
   */
 -static void handle_hotplug_event(acpi_handle handle, u32 type, void *data)
 +static void handle_hotplug_event_func(acpi_handle handle, u32 type,
 +				      void *context)
  {
++<<<<<<< HEAD
 +	struct acpiphp_func *func = context;
++=======
+ 	struct acpiphp_context *context;
+ 	void (*work_func)(struct work_struct *work) = NULL;
+ 
+ 	mutex_lock(&acpiphp_context_lock);
+ 	context = acpiphp_get_context(handle);
+ 	if (context) {
+ 		if (context->bridge) {
+ 			get_bridge(context->bridge);
+ 			work_func = _handle_hotplug_event_bridge;
+ 		} else if (context->func) {
+ 			get_bridge(context->func->slot->bridge);
+ 			work_func = _handle_hotplug_event_func;
+ 		}
+ 		acpiphp_put_context(context);
+ 	}
+ 	mutex_unlock(&acpiphp_context_lock);
++>>>>>>> c8ebcf1ff91a (ACPI / hotplug / PCI: Pass hotplug context objects to event handlers)
  
  	/*
  	 * Currently the code adds all hotplug events to the kacpid_wq
@@@ -1163,8 -1156,8 +1184,13 @@@
  	 * For now just re-add this work to the kacpi_hotplug_wq so we
  	 * don't deadlock on hotplug actions.
  	 */
++<<<<<<< HEAD
 +	get_bridge(func->slot->bridge);
 +	alloc_acpi_hp_work(handle, type, context, _handle_hotplug_event_func);
++=======
+ 	if (work_func)
+ 		alloc_acpi_hp_work(handle, type, context, work_func);
++>>>>>>> c8ebcf1ff91a (ACPI / hotplug / PCI: Pass hotplug context objects to event handlers)
  }
  
  /*
* Unmerged path drivers/pci/hotplug/acpiphp_glue.c
