drm/i915: read HEAD register back in init_ring_common() to enforce ordering

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] i915: read HEAD register back in init_ring_common() to enforce ordering (Rob Clark) [1153301]
Rebuild_FUZZ: 97.26%
commit-author Jiri Kosina <jkosina@suse.cz>
commit ece4a17d237a79f63fbfaf3f724a12b6d500555c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/ece4a17d.failed

Withtout this, ring initialization fails reliabily during resume with

	[drm:init_ring_common] *ERROR* render ring initialization failed ctl 0001f001 head ffffff8804 tail 00000000 start 000e4000

This is not a complete fix, but it is verified to make the ring
initialization failures during resume much less likely.

We were not able to root-cause this bug (likely HW-specific to Gen4 chips)
yet. This is therefore used as a ducttape before problem is fully
understood and proper fix created, so that people don't suffer from
completely unusable systems in the meantime.

The discussion and debugging is happening at

	https://bugs.freedesktop.org/show_bug.cgi?id=76554

	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
	Cc: stable@vger.kernel.org
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit ece4a17d237a79f63fbfaf3f724a12b6d500555c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ringbuffer.c
diff --cc drivers/gpu/drm/i915/intel_ringbuffer.c
index 460ee1026fca,16371a444426..000000000000
--- a/drivers/gpu/drm/i915/intel_ringbuffer.c
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.c
@@@ -423,6 -525,16 +423,17 @@@ static int init_ring_common(struct inte
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (I915_NEED_GFX_HWS(dev))
+ 		intel_ring_setup_status_page(ring);
+ 	else
+ 		ring_setup_phys_status_page(ring);
+ 
+ 	/* Enforce ordering by reading HEAD register back */
+ 	I915_READ_HEAD(ring);
+ 
++>>>>>>> ece4a17d237a (drm/i915: read HEAD register back in init_ring_common() to enforce ordering)
  	/* Initialize the ring. This must happen _after_ we've cleared the ring
  	 * registers with the above sequence (the readback of the HEAD registers
  	 * also enforces ordering), otherwise the hw might lose the new ring
* Unmerged path drivers/gpu/drm/i915/intel_ringbuffer.c
