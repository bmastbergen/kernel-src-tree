workqueue: apply __WQ_ORDERED to create_singlethread_workqueue()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Tejun Heo <tj@kernel.org>
commit e09c2c295468476a239d13324ce9042ec4de05eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e09c2c29.failed

create_singlethread_workqueue() is a compat interface for single
threaded workqueue which maps to ordered workqueue w/ rescuer in the
current implementation.  create_singlethread_workqueue() currently
implemented by invoking alloc_workqueue() w/ appropriate parameters.

8719dceae2f9 ("workqueue: reject adjusting max_active or applying
attrs to ordered workqueues") introduced __WQ_ORDERED to protect
ordered workqueues against dynamic attribute changes which can break
ordering guarantees but forgot to apply it to
create_singlethread_workqueue().  This in itself is okay as nobody
currently uses dynamic attribute change on workqueues created with
create_singlethread_workqueue().

However, 4c16bd327c ("workqueue: implement NUMA affinity for unbound
workqueues") broke singlethreaded guarantee for ordered workqueues
through allocating a separate pool_workqueue on each NUMA node by
default.  A later change 8a2b75384444 ("workqueue: fix ordered
workqueues in NUMA setups") fixed it by allocating only one global
pool_workqueue if __WQ_ORDERED is set.

Combined, the __WQ_ORDERED omission in create_singlethread_workqueue()
became critical breaking its single threadedness and ordering
guarantee.

Let's make create_singlethread_workqueue() wrap
alloc_ordered_workqueue() instead so that it inherits __WQ_ORDERED and
can implicitly track future ordered_workqueue changes.

v2: I missed that __WQ_ORDERED now protects against pwq splitting
    across NUMA nodes and incorrectly described the patch as a
    nice-to-have fix to protect against future dynamic attribute
    usages.  Oleg pointed out that this is actually a critical
    breakage due to 8a2b75384444 ("workqueue: fix ordered workqueues
    in NUMA setups").

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Reported-by: Mike Anderson <mike.anderson@us.ibm.com>
	Cc: Oleg Nesterov <onestero@redhat.com>
	Cc: Gustavo Luiz Duarte <gduarte@redhat.com>
	Cc: Tomas Henzl <thenzl@redhat.com>
	Cc: stable@vger.kernel.org
Fixes: 4c16bd327c ("workqueue: implement NUMA affinity for unbound workqueues")
(cherry picked from commit e09c2c295468476a239d13324ce9042ec4de05eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/workqueue.h
diff --cc include/linux/workqueue.h
index 623488fdc1f5,b996e6cde6bb..000000000000
--- a/include/linux/workqueue.h
+++ b/include/linux/workqueue.h
@@@ -410,11 -414,12 +410,15 @@@ __alloc_workqueue_key(const char *fmt, 
  	alloc_workqueue(fmt, WQ_UNBOUND | __WQ_ORDERED | (flags), 1, ##args)
  
  #define create_workqueue(name)						\
 -	alloc_workqueue("%s", WQ_MEM_RECLAIM, 1, (name))
 +	alloc_workqueue((name), WQ_MEM_RECLAIM, 1)
  #define create_freezable_workqueue(name)				\
 -	alloc_workqueue("%s", WQ_FREEZABLE | WQ_UNBOUND | WQ_MEM_RECLAIM, \
 -			1, (name))
 +	alloc_workqueue((name), WQ_FREEZABLE | WQ_UNBOUND | WQ_MEM_RECLAIM, 1)
  #define create_singlethread_workqueue(name)				\
++<<<<<<< HEAD
 +	alloc_workqueue((name), WQ_UNBOUND | WQ_MEM_RECLAIM, 1)
++=======
+ 	alloc_ordered_workqueue("%s", WQ_MEM_RECLAIM, name)
++>>>>>>> e09c2c295468 (workqueue: apply __WQ_ORDERED to create_singlethread_workqueue())
  
  extern void destroy_workqueue(struct workqueue_struct *wq);
  
* Unmerged path include/linux/workqueue.h
