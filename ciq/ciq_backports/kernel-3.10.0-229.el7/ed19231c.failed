ixgbe: add ixgbe_write_pci_cfg_word with ixgbe_removed check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit ed19231c760a5103d75d285ca5a5ba4177ec09eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/ed19231c.failed

Inline with the current use for ixgbe_read_pci_cfg_word, create a
similar function for writing PCI config, which checks whether the
adapter has been removed first, if Live Error Recovery has been enabled.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit ed19231c760a5103d75d285ca5a5ba4177ec09eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
#	drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
#	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
index 062f4b699a96,7fe22542e404..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
@@@ -80,11 -82,9 +79,14 @@@ static void ixgbe_set_pcie_completion_t
  	 * directly in order to set the completion timeout value for
  	 * 16ms to 55ms
  	 */
++<<<<<<< HEAD
 +	pci_read_config_word(adapter->pdev,
 +	                     IXGBE_PCI_DEVICE_CONTROL2, &pcie_devctl2);
++=======
+ 	pcie_devctl2 = ixgbe_read_pci_cfg_word(hw, IXGBE_PCI_DEVICE_CONTROL2);
++>>>>>>> ed19231c760a (ixgbe: add ixgbe_write_pci_cfg_word with ixgbe_removed check)
  	pcie_devctl2 |= IXGBE_PCI_DEVICE_CONTROL2_16ms;
- 	pci_write_config_word(adapter->pdev,
- 	                      IXGBE_PCI_DEVICE_CONTROL2, pcie_devctl2);
+ 	ixgbe_write_pci_cfg_word(hw, IXGBE_PCI_DEVICE_CONTROL2, pcie_devctl2);
  out:
  	/* disable completion timeout resend */
  	gcr &= ~IXGBE_GCR_CMPL_TMOUT_RESEND;
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
index 3fac74a63d30,afa1cda90c2e..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
@@@ -126,6 -129,11 +126,14 @@@ s32 ixgbe_get_thermal_sensor_data_gener
  s32 ixgbe_init_thermal_sensor_thresh_generic(struct ixgbe_hw *hw);
  
  #define IXGBE_FAILED_READ_REG 0xffffffffU
++<<<<<<< HEAD
++=======
+ #define IXGBE_FAILED_READ_CFG_DWORD 0xffffffffU
+ #define IXGBE_FAILED_READ_CFG_WORD 0xffffU
+ 
+ u16 ixgbe_read_pci_cfg_word(struct ixgbe_hw *hw, u32 reg);
+ void ixgbe_write_pci_cfg_word(struct ixgbe_hw *hw, u32 reg, u16 value);
++>>>>>>> ed19231c760a (ixgbe: add ixgbe_write_pci_cfg_word with ixgbe_removed check)
  
  static inline bool ixgbe_removed(void __iomem *addr)
  {
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index d8a1a744e5ae,c773d6cb6063..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@@ -313,6 -319,57 +313,60 @@@ void ixgbe_check_remove(struct ixgbe_h
  		ixgbe_remove_adapter(hw);
  }
  
++<<<<<<< HEAD
++=======
+ static bool ixgbe_check_cfg_remove(struct ixgbe_hw *hw, struct pci_dev *pdev)
+ {
+ 	u16 value;
+ 
+ 	pci_read_config_word(pdev, PCI_VENDOR_ID, &value);
+ 	if (value == IXGBE_FAILED_READ_CFG_WORD) {
+ 		ixgbe_remove_adapter(hw);
+ 		return true;
+ 	}
+ 	return false;
+ }
+ 
+ u16 ixgbe_read_pci_cfg_word(struct ixgbe_hw *hw, u32 reg)
+ {
+ 	struct ixgbe_adapter *adapter = hw->back;
+ 	u16 value;
+ 
+ 	if (ixgbe_removed(hw->hw_addr))
+ 		return IXGBE_FAILED_READ_CFG_WORD;
+ 	pci_read_config_word(adapter->pdev, reg, &value);
+ 	if (value == IXGBE_FAILED_READ_CFG_WORD &&
+ 	    ixgbe_check_cfg_remove(hw, adapter->pdev))
+ 		return IXGBE_FAILED_READ_CFG_WORD;
+ 	return value;
+ }
+ 
+ #ifdef CONFIG_PCI_IOV
+ static u32 ixgbe_read_pci_cfg_dword(struct ixgbe_hw *hw, u32 reg)
+ {
+ 	struct ixgbe_adapter *adapter = hw->back;
+ 	u32 value;
+ 
+ 	if (ixgbe_removed(hw->hw_addr))
+ 		return IXGBE_FAILED_READ_CFG_DWORD;
+ 	pci_read_config_dword(adapter->pdev, reg, &value);
+ 	if (value == IXGBE_FAILED_READ_CFG_DWORD &&
+ 	    ixgbe_check_cfg_remove(hw, adapter->pdev))
+ 		return IXGBE_FAILED_READ_CFG_DWORD;
+ 	return value;
+ }
+ #endif /* CONFIG_PCI_IOV */
+ 
+ void ixgbe_write_pci_cfg_word(struct ixgbe_hw *hw, u32 reg, u16 value)
+ {
+ 	struct ixgbe_adapter *adapter = hw->back;
+ 
+ 	if (ixgbe_removed(hw->hw_addr))
+ 		return;
+ 	pci_write_config_word(adapter->pdev, reg, value);
+ }
+ 
++>>>>>>> ed19231c760a (ixgbe: add ixgbe_write_pci_cfg_word with ixgbe_removed check)
  static void ixgbe_service_event_complete(struct ixgbe_adapter *adapter)
  {
  	BUG_ON(!test_bit(__IXGBE_SERVICE_SCHED, &adapter->state));
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
