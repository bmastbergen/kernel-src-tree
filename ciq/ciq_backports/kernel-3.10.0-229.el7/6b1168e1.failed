CIFS: Fix wrong pos argument of cifs_find_lock_conflict

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Pavel Shilovsky <piastry@etersoft.ru>
commit 6b1168e1617d9d4db73ef5276490627abf5adec4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/6b1168e1.failed

and use generic_file_aio_write rather than __generic_file_aio_write
in cifs_writev.

	Signed-off-by: Pavel Shilovsky <piastry@etersoft.ru>
	Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
	Signed-off-by: Steve French <smfrench@gmail.com>
(cherry picked from commit 6b1168e1617d9d4db73ef5276490627abf5adec4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/file.c
diff --cc fs/cifs/file.c
index 049a583932c8,834fce759d80..000000000000
--- a/fs/cifs/file.c
+++ b/fs/cifs/file.c
@@@ -2587,23 -2588,10 +2588,28 @@@ cifs_writev(struct kiocb *iocb, const s
  	 * with a brlock that prevents writing.
  	 */
  	down_read(&cinode->lock_sem);
- 	if (!cifs_find_lock_conflict(cfile, pos, iov_length(iov, nr_segs),
+ 	if (!cifs_find_lock_conflict(cfile, lock_pos, iov_length(iov, nr_segs),
  				     server->vals->exclusive_lock_type, NULL,
++<<<<<<< HEAD
 +				     CIFS_WRITE_OP)) {
 +		mutex_lock(&inode->i_mutex);
 +		rc = __generic_file_aio_write(iocb, iov, nr_segs,
 +					       &iocb->ki_pos);
 +		mutex_unlock(&inode->i_mutex);
 +	}
 +
 +	if (rc > 0 || rc == -EIOCBQUEUED) {
 +		ssize_t err;
 +
 +		err = generic_write_sync(file, pos, rc);
 +		if (err < 0 && rc > 0)
 +			rc = err;
 +	}
 +
++=======
+ 				     CIFS_WRITE_OP))
+ 		rc = generic_file_aio_write(iocb, iov, nr_segs, pos);
++>>>>>>> 6b1168e1617d (CIFS: Fix wrong pos argument of cifs_find_lock_conflict)
  	up_read(&cinode->lock_sem);
  	return rc;
  }
* Unmerged path fs/cifs/file.c
