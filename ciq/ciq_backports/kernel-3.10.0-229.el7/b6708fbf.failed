ACPI / hotplug / PCI: Drop acpiphp_bus_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] hotplug/pci: Drop acpiphp_bus_add() (Prarit Bhargava) [1141846]
Rebuild_FUZZ: 88.61%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit b6708fbf98ac01d27c8d4d7f7b4fa87583b658cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/b6708fbf.failed

acpiphp_bus_add() is only called from one place, so move the code out
of it into that place and drop it.  Also make that code use
func_to_acpi_device() to get the struct acpi_device pointer it needs
instead of calling acpi_bus_get_device() which may be costly.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
(cherry picked from commit b6708fbf98ac01d27c8d4d7f7b4fa87583b658cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/acpiphp_glue.c
diff --cc drivers/pci/hotplug/acpiphp_glue.c
index 0f3f960473bc,27abd501c258..000000000000
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@@ -585,54 -491,6 +585,57 @@@ static unsigned char acpiphp_max_busnr(
  	return max;
  }
  
++<<<<<<< HEAD
 +
 +/**
 + * acpiphp_bus_add - add a new bus to acpi subsystem
 + * @func: acpiphp_func of the bridge
 + */
 +static int acpiphp_bus_add(struct acpiphp_func *func)
 +{
 +	struct acpi_device *device;
 +	int ret_val;
 +
 +	if (!acpi_bus_get_device(func->handle, &device)) {
 +		pr_debug("bus exists... trim\n");
 +		/* this shouldn't be in here, so remove
 +		 * the bus then re-add it...
 +		 */
 +		acpi_bus_trim(device);
 +	}
 +
 +	ret_val = acpi_bus_scan(func->handle);
 +	if (!ret_val)
 +		ret_val = acpi_bus_get_device(func->handle, &device);
 +
 +	if (ret_val)
 +		pr_debug("error adding bus, %x\n", -ret_val);
 +
 +	return ret_val;
 +}
 +
 +
 +/**
 + * acpiphp_bus_trim - trim a bus from acpi subsystem
 + * @handle: handle to acpi namespace
 + */
 +static int acpiphp_bus_trim(acpi_handle handle)
 +{
 +	struct acpi_device *device;
 +	int retval;
 +
 +	retval = acpi_bus_get_device(handle, &device);
 +	if (retval) {
 +		pr_debug("acpi_device not found\n");
 +		return retval;
 +	}
 +
 +	acpi_bus_trim(device);
 +	return 0;
 +}
 +
++=======
++>>>>>>> b6708fbf98ac (ACPI / hotplug / PCI: Drop acpiphp_bus_add())
  static void acpiphp_set_acpi_region(struct acpiphp_slot *slot)
  {
  	struct acpiphp_func *func;
@@@ -669,8 -526,22 +672,25 @@@ static void check_hotplug_bridge(struc
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static int acpiphp_rescan_slot(struct acpiphp_slot *slot)
+ {
+ 	struct acpiphp_func *func;
+ 
+ 	list_for_each_entry(func, &slot->funcs, sibling) {
+ 		struct acpi_device *adev = func_to_acpi_device(func);
+ 
+ 		acpi_bus_scan(adev->handle);
+ 		if (acpi_device_enumerated(adev))
+ 			acpi_device_set_power(adev, ACPI_STATE_D0);
+ 	}
+ 	return pci_scan_slot(slot->bus, PCI_DEVFN(slot->device, 0));
+ }
+ 
++>>>>>>> b6708fbf98ac (ACPI / hotplug / PCI: Drop acpiphp_bus_add())
  /**
 - * enable_slot - enable, configure a slot
 + * enable_device - enable, configure a slot
   * @slot: slot to be enabled
   *
   * This function should be called per *physical slot*,
* Unmerged path drivers/pci/hotplug/acpiphp_glue.c
