etherdevice: Use ether_addr_copy to copy an Ethernet address

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Joe Perches <joe@perches.com>
commit 286ab723d4b83d37deb4017008ef1444a95cfb0d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/286ab723.failed

Some systems can use the normally known u16 alignment of
Ethernet addresses to save some code/text bytes and cycles.

This does not change currently emitted code on x86 by gcc 4.8.

	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 286ab723d4b83d37deb4017008ef1444a95cfb0d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/etherdevice.h
diff --cc include/linux/etherdevice.h
index c623861964e4,9c5529dc6d07..000000000000
--- a/include/linux/etherdevice.h
+++ b/include/linux/etherdevice.h
@@@ -199,20 -218,40 +199,53 @@@ static inline void eth_hw_addr_random(s
  }
  
  /**
++<<<<<<< HEAD
 + * compare_ether_addr - Compare two Ethernet addresses
 + * @addr1: Pointer to a six-byte array containing the Ethernet address
 + * @addr2: Pointer other six-byte array containing the Ethernet address
++=======
+  * ether_addr_copy - Copy an Ethernet address
+  * @dst: Pointer to a six-byte array Ethernet address destination
+  * @src: Pointer to a six-byte array Ethernet address source
+  *
+  * Please note: dst & src must both be aligned to u16.
+  */
+ static inline void ether_addr_copy(u8 *dst, const u8 *src)
+ {
+ #if defined(CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS)
+ 	*(u32 *)dst = *(const u32 *)src;
+ 	*(u16 *)(dst + 4) = *(const u16 *)(src + 4);
+ #else
+ 	u16 *a = (u16 *)dst;
+ 	const u16 *b = (const u16 *)src;
+ 
+ 	a[0] = b[0];
+ 	a[1] = b[1];
+ 	a[2] = b[2];
+ #endif
+ }
+ 
+ /**
+  * eth_hw_addr_inherit - Copy dev_addr from another net_device
+  * @dst: pointer to net_device to copy dev_addr to
+  * @src: pointer to net_device to copy dev_addr from
++>>>>>>> 286ab723d4b8 (etherdevice: Use ether_addr_copy to copy an Ethernet address)
   *
 - * Copy the Ethernet address from one net_device to another along with
 - * the address attributes (addr_assign_type).
 + * Compare two Ethernet addresses, returns 0 if equal, non-zero otherwise.
 + * Unlike memcmp(), it doesn't return a value suitable for sorting.
   */
 -static inline void eth_hw_addr_inherit(struct net_device *dst,
 -				       struct net_device *src)
 +static inline unsigned compare_ether_addr(const u8 *addr1, const u8 *addr2)
  {
++<<<<<<< HEAD
 +	const u16 *a = (const u16 *) addr1;
 +	const u16 *b = (const u16 *) addr2;
 +
 +	BUILD_BUG_ON(ETH_ALEN != 6);
 +	return ((a[0] ^ b[0]) | (a[1] ^ b[1]) | (a[2] ^ b[2])) != 0;
++=======
+ 	dst->addr_assign_type = src->addr_assign_type;
+ 	ether_addr_copy(dst->dev_addr, src->dev_addr);
++>>>>>>> 286ab723d4b8 (etherdevice: Use ether_addr_copy to copy an Ethernet address)
  }
  
  /**
* Unmerged path include/linux/etherdevice.h
