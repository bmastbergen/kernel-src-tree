blk-mq: ->timeout should be cleared in blk_mq_rq_ctx_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jens Axboe <axboe@fb.com>
commit f6be4fb4bcb396fc3b1c134b7863351972de081f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f6be4fb4.failed

It'll be used in blk_mq_start_request() to set a potential timeout
for the request, so clear it to zero at alloc time to ensure that
we know if someone has set it or not.

Fixes random early timeouts on NVMe testing.

	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit f6be4fb4bcb396fc3b1c134b7863351972de081f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index d5f8ac70935d,fafea52281ac..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -172,10 -174,42 +172,35 @@@ static void blk_mq_rq_ctx_init(struct r
  	if (blk_queue_io_stat(q))
  		rw_flags |= REQ_IO_STAT;
  
 -	INIT_LIST_HEAD(&rq->queuelist);
 -	/* csd/requeue_work/fifo_time is initialized before use */
 -	rq->q = q;
  	rq->mq_ctx = ctx;
 -	rq->cmd_flags |= rw_flags;
 -	/* do not touch atomic flags, it needs atomic ops against the timer */
 -	rq->cpu = -1;
 -	INIT_HLIST_NODE(&rq->hash);
 -	RB_CLEAR_NODE(&rq->rb_node);
 -	rq->rq_disk = NULL;
 -	rq->part = NULL;
 -#ifdef CONFIG_BLK_CGROUP
 -	rq->rl = NULL;
 +	rq->cmd_flags = rw_flags;
 +	rq->start_time = jiffies;
  	set_start_time_ns(rq);
++<<<<<<< HEAD
++=======
+ 	rq->io_start_time_ns = 0;
+ #endif
+ 	rq->nr_phys_segments = 0;
+ #if defined(CONFIG_BLK_DEV_INTEGRITY)
+ 	rq->nr_integrity_segments = 0;
+ #endif
+ 	rq->special = NULL;
+ 	/* tag was already set */
+ 	rq->errors = 0;
+ 
+ 	rq->extra_len = 0;
+ 	rq->sense_len = 0;
+ 	rq->resid_len = 0;
+ 	rq->sense = NULL;
+ 
+ 	INIT_LIST_HEAD(&rq->timeout_list);
+ 	rq->timeout = 0;
+ 
+ 	rq->end_io = NULL;
+ 	rq->end_io_data = NULL;
+ 	rq->next_rq = NULL;
+ 
++>>>>>>> f6be4fb4bcb3 (blk-mq: ->timeout should be cleared in blk_mq_rq_ctx_init())
  	ctx->rq_dispatched[rw_is_sync(rw_flags)]++;
  }
  
* Unmerged path block/blk-mq.c
