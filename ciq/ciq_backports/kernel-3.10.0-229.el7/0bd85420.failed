mem-hotplug: reset node present pages when hot-adding a new pgdat

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Tang Chen <tangchen@cn.fujitsu.com>
commit 0bd854200873894a76f32603ff2c4c988ad6b5b5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/0bd85420.failed

When memory is hot-added, all the memory is in offline state.  So clear
all zones' present_pages because they will be updated in online_pages()
and offline_pages().  Otherwise, /proc/zoneinfo will corrupt:

When the memory of node2 is offline:

  # cat /proc/zoneinfo
  ......
  Node 2, zone   Movable
  ......
        spanned  8388608
        present  8388608
        managed  0

When we online memory on node2:

  # cat /proc/zoneinfo
  ......
  Node 2, zone   Movable
  ......
        spanned  8388608
        present  16777216
        managed  8388608

	Signed-off-by: Tang Chen <tangchen@cn.fujitsu.com>
	Reviewed-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
	Cc: <stable@vger.kernel.org>	[3.16+]
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0bd854200873894a76f32603ff2c4c988ad6b5b5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memory_hotplug.c
diff --cc mm/memory_hotplug.c
index e6fc3780a847,1bf4807cb21e..000000000000
--- a/mm/memory_hotplug.c
+++ b/mm/memory_hotplug.c
@@@ -1038,6 -1107,21 +1048,24 @@@ static pg_data_t __ref *hotadd_new_pgda
  	build_all_zonelists(pgdat, NULL);
  	mutex_unlock(&zonelists_mutex);
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * zone->managed_pages is set to an approximate value in
+ 	 * free_area_init_core(), which will cause
+ 	 * /sys/device/system/node/nodeX/meminfo has wrong data.
+ 	 * So reset it to 0 before any memory is onlined.
+ 	 */
+ 	reset_node_managed_pages(pgdat);
+ 
+ 	/*
+ 	 * When memory is hot-added, all the memory is in offline state. So
+ 	 * clear all zones' present_pages because they will be updated in
+ 	 * online_pages() and offline_pages().
+ 	 */
+ 	reset_node_present_pages(pgdat);
+ 
++>>>>>>> 0bd854200873 (mem-hotplug: reset node present pages when hot-adding a new pgdat)
  	return pgdat;
  }
  
* Unmerged path mm/memory_hotplug.c
