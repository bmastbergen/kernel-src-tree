powerpc: bpf: Fix the broken LD_VLAN_TAG_PRESENT test

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] bpf: Fix the broken LD_VLAN_TAG_PRESENT test (Don Zickus) [1127366]
Rebuild_FUZZ: 90.72%
commit-author Denis Kirjanov <kda@linux-powerpc.org>
commit dba63115ce0c888fcb4cdec3f8a4ba97d144afaf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/dba63115.failed

We have to return the boolean here if the tag presents
or not, not just ANDing the TCI with the mask which results to:

[  709.412097] test_bpf: #18 LD_VLAN_TAG_PRESENT
[  709.412245] ret 4096 != 1
[  709.412332] ret 4096 != 1
[  709.412333] FAIL (2 times)

	Signed-off-by: Denis Kirjanov <kda@linux-powerpc.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit dba63115ce0c888fcb4cdec3f8a4ba97d144afaf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/net/bpf_jit_comp.c
diff --cc arch/powerpc/net/bpf_jit_comp.c
index 9e212f9c1d48,82e82cadcde5..000000000000
--- a/arch/powerpc/net/bpf_jit_comp.c
+++ b/arch/powerpc/net/bpf_jit_comp.c
@@@ -368,22 -382,26 +368,30 @@@ static int bpf_jit_build_body(struct sk
  			PPC_LWZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
  							  mark));
  			break;
 -		case BPF_ANC | SKF_AD_RXHASH:
 -			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff, hash) != 4);
 +		case BPF_S_ANC_RXHASH:
 +			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff, rxhash) != 4);
  			PPC_LWZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
 -							  hash));
 +							  rxhash));
  			break;
 -		case BPF_ANC | SKF_AD_VLAN_TAG:
 -		case BPF_ANC | SKF_AD_VLAN_TAG_PRESENT:
 +		case BPF_S_ANC_VLAN_TAG:
 +		case BPF_S_ANC_VLAN_TAG_PRESENT:
  			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff, vlan_tci) != 2);
 -			BUILD_BUG_ON(VLAN_TAG_PRESENT != 0x1000);
 -
  			PPC_LHZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
  							  vlan_tci));
++<<<<<<< HEAD
 +			if (filter[i].code == BPF_S_ANC_VLAN_TAG)
 +				PPC_ANDI(r_A, r_A, VLAN_VID_MASK);
 +			else
++=======
+ 			if (code == (BPF_ANC | SKF_AD_VLAN_TAG)) {
+ 				PPC_ANDI(r_A, r_A, ~VLAN_TAG_PRESENT);
+ 			} else {
++>>>>>>> dba63115ce0c (powerpc: bpf: Fix the broken LD_VLAN_TAG_PRESENT test)
  				PPC_ANDI(r_A, r_A, VLAN_TAG_PRESENT);
+ 				PPC_SRWI(r_A, r_A, 12);
+ 			}
  			break;
 -		case BPF_ANC | SKF_AD_QUEUE:
 +		case BPF_S_ANC_QUEUE:
  			BUILD_BUG_ON(FIELD_SIZEOF(struct sk_buff,
  						  queue_mapping) != 2);
  			PPC_LHZ_OFFS(r_A, r_skb, offsetof(struct sk_buff,
* Unmerged path arch/powerpc/net/bpf_jit_comp.c
