block: mq flush: clear flush_rq's tag in flush_end_io()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [block] blk-flush: clear flush_rq's tag in flush_end_io() (Mike Snitzer) [1105204]
Rebuild_FUZZ: 92.31%
commit-author Ming Lei <tom.leiming@gmail.com>
commit 14b83e172f0bc83b8dcf78ee8b1844beeffb418d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/14b83e17.failed

blk_mq_tag_to_rq() needs to be able to tell if it should return
the original request, or the flush request if we are doing a flush
sequence. Clear the flush tag when IO completes for a flush, since
that is what we are comparing against.

	Signed-off-by: Ming Lei <tom.leiming@gmail.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 14b83e172f0bc83b8dcf78ee8b1844beeffb418d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-flush.c
diff --cc block/blk-flush.c
index 1c9013bca5a0,8ffee4b5f93d..000000000000
--- a/block/blk-flush.c
+++ b/block/blk-flush.c
@@@ -231,8 -223,10 +231,13 @@@ static void flush_end_io(struct reques
  	struct request *rq, *n;
  	unsigned long flags = 0;
  
 -	if (q->mq_ops) {
 +	if (q->mq_ops)
  		spin_lock_irqsave(&q->mq_flush_lock, flags);
++<<<<<<< HEAD
++=======
+ 		q->flush_rq->tag = -1;
+ 	}
++>>>>>>> 14b83e172f0b (block: mq flush: clear flush_rq's tag in flush_end_io())
  
  	running = &q->flush_queue[q->flush_running_idx];
  	BUG_ON(q->flush_pending_idx == q->flush_running_idx);
* Unmerged path block/blk-flush.c
