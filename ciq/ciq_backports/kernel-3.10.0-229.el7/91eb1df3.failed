IB/iser: Allow bind only when connection state is UP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [infiniband] iser: Allow bind only when connection state is UP (Amir Vadai) [1107622]
Rebuild_FUZZ: 97.03%
commit-author Sagi Grimberg <sagig@mellanox.com>
commit 91eb1df39a1fba21bbc28895a84630782cd442ed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/91eb1df3.failed

We need to fail the bind operation if the iser connection state != UP
(started teardown) and this should be done under the state lock.

	Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Roland Dreier <roland@purestorage.com>
(cherry picked from commit 91eb1df39a1fba21bbc28895a84630782cd442ed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/iser/iscsi_iser.c
diff --cc drivers/infiniband/ulp/iser/iscsi_iser.c
index ed0eb50fd5e9,93ce62fe1594..000000000000
--- a/drivers/infiniband/ulp/iser/iscsi_iser.c
+++ b/drivers/infiniband/ulp/iser/iscsi_iser.c
@@@ -368,8 -344,6 +368,11 @@@ iscsi_iser_conn_bind(struct iscsi_cls_s
  		     int is_leading)
  {
  	struct iscsi_conn *conn = cls_conn->dd_data;
++<<<<<<< HEAD
 +	struct iscsi_iser_conn *iser_conn;
 +	struct iscsi_session *session;
++=======
++>>>>>>> 91eb1df39a1f (IB/iser: Allow bind only when connection state is UP)
  	struct iser_conn *ib_conn;
  	struct iscsi_endpoint *ep;
  	int error;
@@@ -395,13 -377,27 +406,24 @@@
  	/* binds the iSER connection retrieved from the previously
  	 * connected ep_handle to the iSCSI layer connection. exchanges
  	 * connection pointers */
++<<<<<<< HEAD
 +	iser_info("binding iscsi/iser conn %p %p to ib_conn %p\n",
 +		  conn, conn->dd_data, ib_conn);
 +	iser_conn = conn->dd_data;
 +	ib_conn->iser_conn = iser_conn;
 +	iser_conn->ib_conn  = ib_conn;
 +	iser_conn_get(ib_conn); /* ref iscsi/ib conn binding */
 +	return 0;
++=======
+ 	iser_info("binding iscsi conn %p to ib_conn %p\n", conn, ib_conn);
+ 
+ 	conn->dd_data = ib_conn;
+ 	ib_conn->iscsi_conn = conn;
+ 
+ out:
+ 	mutex_unlock(&ib_conn->state_mutex);
+ 	return error;
 -}
 -
 -static int
 -iscsi_iser_conn_start(struct iscsi_cls_conn *cls_conn)
 -{
 -	struct iscsi_conn *iscsi_conn;
 -	struct iser_conn *ib_conn;
 -
 -	iscsi_conn = cls_conn->dd_data;
 -	ib_conn = iscsi_conn->dd_data;
 -	reinit_completion(&ib_conn->stop_completion);
 -
 -	return iscsi_conn_start(cls_conn);
++>>>>>>> 91eb1df39a1f (IB/iser: Allow bind only when connection state is UP)
  }
  
  static void
* Unmerged path drivers/infiniband/ulp/iser/iscsi_iser.c
