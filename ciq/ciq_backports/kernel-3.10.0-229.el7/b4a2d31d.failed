KVM: VMX: dynamise PLE window

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/vmx: dynamise PLE window (Radim Krcmar) [1163296]
Rebuild_FUZZ: 94.74%
commit-author Radim Krčmář <rkrcmar@redhat.com>
commit b4a2d31da812ce03efaf5d30c6b9d39c1cbd18d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/b4a2d31d.failed

Window is increased on every PLE exit and decreased on every sched_in.
The idea is that we don't want to PLE exit if there is no preemption
going on.
We do this with sched_in() because it does not hold rq lock.

There are two new kernel parameters for changing the window:
 ple_window_grow and ple_window_shrink
ple_window_grow affects the window on PLE exit and ple_window_shrink
does it on sched_in;  depending on their value, the window is modifier
like this: (ple_window is kvm_intel's global)

  ple_window_shrink/ |
  ple_window_grow    | PLE exit           | sched_in
  -------------------+--------------------+---------------------
  < 1                |  = ple_window      |  = ple_window
  < ple_window       | *= ple_window_grow | /= ple_window_shrink
  otherwise          | += ple_window_grow | -= ple_window_shrink

A third new parameter, ple_window_max, controls the maximal ple_window;
it is internally rounded down to a closest multiple of ple_window_grow.

VCPU's PLE window is never allowed below ple_window.

	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit b4a2d31da812ce03efaf5d30c6b9d39c1cbd18d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index 178f134d3e73,baeac7f580a7..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -8623,6 -8945,12 +8710,15 @@@ static int vmx_check_intercept(struct k
  	return X86EMUL_CONTINUE;
  }
  
++<<<<<<< HEAD
++=======
+ void vmx_sched_in(struct kvm_vcpu *vcpu, int cpu)
+ {
+ 	if (ple_gap)
+ 		shrink_ple_window(vcpu);
+ }
+ 
++>>>>>>> b4a2d31da812 (KVM: VMX: dynamise PLE window)
  static struct kvm_x86_ops vmx_x86_ops = {
  	.cpu_has_kvm_support = cpu_has_kvm_support,
  	.disabled_by_bios = vmx_disabled_by_bios,
* Unmerged path arch/x86/kvm/vmx.c
