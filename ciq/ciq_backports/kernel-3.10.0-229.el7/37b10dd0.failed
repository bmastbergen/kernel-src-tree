ext4: use generic_file_fsync() in ext4_file_fsync() in nojournal mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jan Kara <jack@suse.cz>
commit 37b10dd06334ebc89f551d405a0fe27e1a622458
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/37b10dd0.failed

Just use the generic function instead of duplicating it.  We only need
to reshuffle the read-only check a bit (which is there to prevent
writing to a filesystem which has been remounted read-only after error
I assume).

	Reviewed-by: Zheng Liu <wenqing.lz@taobao.com>
	Signed-off-by: Jan Kara <jack@suse.cz>
	Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
(cherry picked from commit 37b10dd06334ebc89f551d405a0fe27e1a622458)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/fsync.c
diff --cc fs/ext4/fsync.c
index 427b22866c38,6019bd449576..000000000000
--- a/fs/ext4/fsync.c
+++ b/fs/ext4/fsync.c
@@@ -129,25 -113,6 +113,28 @@@ int ext4_sync_file(struct file *file, l
  		return ret;
  	mutex_lock(&inode->i_mutex);
  
++<<<<<<< HEAD
 +	if (inode->i_sb->s_flags & MS_RDONLY) {
 +		/* Make sure that we read updated s_mount_flags value */
 +		smp_rmb();
 +		if (EXT4_SB(inode->i_sb)->s_mount_flags & EXT4_MF_FS_ABORTED)
 +			ret = -EROFS;
 +		goto out;
 +	}
 +
 +	ret = ext4_flush_unwritten_io(inode);
 +	if (ret < 0)
 +		goto out;
 +
 +	if (!journal) {
 +		ret = __sync_inode(inode, datasync);
 +		if (!ret && !hlist_empty(&inode->i_dentry))
 +			ret = ext4_sync_parent(inode);
 +		goto out;
 +	}
 +
++=======
++>>>>>>> 37b10dd06334 (ext4: use generic_file_fsync() in ext4_file_fsync() in nojournal mode)
  	/*
  	 * data=writeback,ordered:
  	 *  The caller's filemap_fdatawrite()/wait will sync the data.
* Unmerged path fs/ext4/fsync.c
