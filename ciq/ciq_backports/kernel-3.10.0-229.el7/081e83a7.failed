macvlan: Initialize vlan_features to turn on offload support.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] macvlan: Initialize vlan_features to turn on offload support (Vlad Yasevich) [1135619]
Rebuild_FUZZ: 99.17%
commit-author Vlad Yasevich <vyasevic@redhat.com>
commit 081e83a78db9b0ae1f5eabc2dedecc865f509b98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/081e83a7.failed

Macvlan devices do not initialize vlan_features.  As a result,
any vlan devices configured on top of macvlans perform very poorly.
Initialize vlan_features based on the vlan features of the lower-level
device.

	Signed-off-by: Vlad Yasevich <vyasevic@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 081e83a78db9b0ae1f5eabc2dedecc865f509b98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macvlan.c
diff --cc drivers/net/macvlan.c
index e2135f30eac2,ef8a5c20236a..000000000000
--- a/drivers/net/macvlan.c
+++ b/drivers/net/macvlan.c
@@@ -497,7 -645,8 +497,12 @@@ static int macvlan_init(struct net_devi
  	dev->state		= (dev->state & ~MACVLAN_STATE_MASK) |
  				  (lowerdev->state & MACVLAN_STATE_MASK);
  	dev->features 		= lowerdev->features & MACVLAN_FEATURES;
++<<<<<<< HEAD
 +	dev->features		|= NETIF_F_LLTX;
++=======
+ 	dev->features		|= ALWAYS_ON_FEATURES;
+ 	dev->vlan_features	= lowerdev->vlan_features & MACVLAN_FEATURES;
++>>>>>>> 081e83a78db9 (macvlan: Initialize vlan_features to turn on offload support.)
  	dev->gso_max_size	= lowerdev->gso_max_size;
  	dev->iflink		= lowerdev->ifindex;
  	dev->hard_header_len	= lowerdev->hard_header_len;
* Unmerged path drivers/net/macvlan.c
