GFS2: Request demote when a "try" flock fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit 2ddfbdd6848d496d8088b28992d257fd02e58c9d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2ddfbdd6.failed

This patch changes the flock code so that it uses the TRY_1CB flag
instead of the TRY flag on the first attempt. That forces any holding
nodes to issue a dlm callback, which requests a demote of the glock.
Then, if the "try" failed, it sleeps a small amount of time for the
demote to occur. Then it tries again, for an increasing amount of time.
Subsequent attempts to gain the "try" lock don't use "_1CB" so that
only one callback is issued.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

(cherry picked from commit 2ddfbdd6848d496d8088b28992d257fd02e58c9d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/file.c
diff --cc fs/gfs2/file.c
index 3cd6d2e361d9,7f4ed3daa38c..000000000000
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@@ -987,9 -980,10 +988,14 @@@ static int do_flock(struct file *file, 
  	unsigned int state;
  	int flags;
  	int error = 0;
+ 	int sleeptime;
  
  	state = (fl->fl_type == F_WRLCK) ? LM_ST_EXCLUSIVE : LM_ST_SHARED;
++<<<<<<< HEAD
 +	flags = (IS_SETLKW(cmd) ? 0 : LM_FLAG_TRY) | GL_EXACT | GL_NOCACHE;
++=======
+ 	flags = (IS_SETLKW(cmd) ? 0 : LM_FLAG_TRY_1CB) | GL_EXACT;
++>>>>>>> 2ddfbdd6848d (GFS2: Request demote when a "try" flock fails)
  
  	mutex_lock(&fp->f_fl_mutex);
  
* Unmerged path fs/gfs2/file.c
