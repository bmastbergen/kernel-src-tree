powerpc/eeh: Escalate error on non-existing PE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] eeh: Escalate error on non-existing PE (Don Zickus) [1127366]
Rebuild_FUZZ: 90.48%
commit-author Gavin Shan <shangw@linux.vnet.ibm.com>
commit cb5b242c8c14a4b1dcd358400da28208fde78947
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/cb5b242c.failed

Sometimes, especially in sinario of loading another kernel with kdump,
we got EEH error on non-existing PE. That means the PEEV / PEST in
the corresponding PHB would be messy and we can't handle that case.
The patch escalates the error to fenced PHB so that the PHB could be
rested in order to revoer the errors on non-existing PEs.

	Reported-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
	Signed-off-by: Gavin Shan <shangw@linux.vnet.ibm.com>
	Tested-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit cb5b242c8c14a4b1dcd358400da28208fde78947)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/eeh-ioda.c
diff --cc arch/powerpc/platforms/powernv/eeh-ioda.c
index be33a16408be,e1e71618b70c..000000000000
--- a/arch/powerpc/platforms/powernv/eeh-ioda.c
+++ b/arch/powerpc/platforms/powernv/eeh-ioda.c
@@@ -847,18 -827,43 +843,43 @@@ static int ioda_eeh_next_error(struct e
  
  			break;
  		case OPAL_EEH_PE_ERROR:
- 			if (ioda_eeh_get_pe(hose, frozen_pe_no, pe))
- 				break;
+ 			/*
+ 			 * If we can't find the corresponding PE, the
+ 			 * PEEV / PEST would be messy. So we force an
+ 			 * fenced PHB so that it can be recovered.
+ 			 */
+ 			if (ioda_eeh_get_pe(hose, frozen_pe_no, pe)) {
+ 				if (!ioda_eeh_get_phb_pe(hose, pe)) {
+ 					pr_err("EEH: Escalated fenced PHB#%x "
+ 					       "detected for PE#%llx\n",
+ 						hose->global_number,
+ 						frozen_pe_no);
+ 					ret = EEH_NEXT_ERR_FENCED_PHB;
+ 				} else {
+ 					ret = EEH_NEXT_ERR_NONE;
+ 				}
+ 			} else {
+ 				pr_err("EEH: Frozen PE#%x on PHB#%x detected\n",
+ 					(*pe)->addr, (*pe)->phb->global_number);
+ 				ret = EEH_NEXT_ERR_FROZEN_PE;
+ 			}
  
++<<<<<<< HEAD
 +			pr_err("EEH: Frozen PE#%x on PHB#%x detected\n",
 +				(*pe)->addr, (*pe)->phb->global_number);
 +			ret = 1;
 +			goto out;
++=======
+ 			break;
+ 		default:
+ 			pr_warn("%s: Unexpected error type %d\n",
+ 				__func__, err_type);
++>>>>>>> cb5b242c8c14 (powerpc/eeh: Escalate error on non-existing PE)
  		}
 -
 -		/*
 -		 * If we have no errors on the specific PHB or only
 -		 * informative error there, we continue poking it.
 -		 * Otherwise, we need actions to be taken by upper
 -		 * layer.
 -		 */
 -		if (ret > EEH_NEXT_ERR_INF)
 -			break;
  	}
  
 +	ret = 0;
 +out:
  	return ret;
  }
  
* Unmerged path arch/powerpc/platforms/powernv/eeh-ioda.c
