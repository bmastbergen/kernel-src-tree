commoncap: don't alloc the credential unless needed in cap_task_prctl

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
commit 6d6f3328422a3bc56b0d8dd026a5de845d2abfa7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/6d6f3328.failed

In function cap_task_prctl(), we would allocate a credential
unconditionally and then check if we support the requested function.
If not we would release this credential with abort_creds() by using
RCU method. But on some archs such as powerpc, the sys_prctl is heavily
used to get/set the floating point exception mode. So the unnecessary
allocating/releasing of credential not only introduce runtime overhead
but also do cause OOM due to the RCU implementation.

This patch removes abort_creds() from cap_task_prctl() by calling
prepare_creds() only when we need to modify it.

	Reported-by: Kevin Hao <haokexin@gmail.com>
	Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Reviewed-by: Paul Moore <paul@paul-moore.com>
	Acked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: James Morris <james.l.morris@oracle.com>
(cherry picked from commit 6d6f3328422a3bc56b0d8dd026a5de845d2abfa7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/commoncap.c
diff --cc security/commoncap.c
index c9219a66b7c6,9fe46e22c7f2..000000000000
--- a/security/commoncap.c
+++ b/security/commoncap.c
@@@ -825,9 -822,11 +825,15 @@@ int cap_task_setnice(struct task_struc
   * Implement PR_CAPBSET_DROP.  Attempt to remove the specified capability from
   * the current task's bounding set.  Returns 0 on success, -ve on error.
   */
- static long cap_prctl_drop(struct cred *new, unsigned long cap)
+ static int cap_prctl_drop(unsigned long cap)
  {
++<<<<<<< HEAD
 +	if (!capable(CAP_SETPCAP))
++=======
+ 	struct cred *new;
+ 
+ 	if (!ns_capable(current_user_ns(), CAP_SETPCAP))
++>>>>>>> 6d6f3328422a (commoncap: don't alloc the credential unless needed in cap_task_prctl)
  		return -EPERM;
  	if (!cap_valid(cap))
  		return -EINVAL;
* Unmerged path security/commoncap.c
