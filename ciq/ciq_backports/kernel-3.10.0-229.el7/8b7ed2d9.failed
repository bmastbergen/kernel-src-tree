iptunnels: remove net arg from iptunnel_xmit()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit 8b7ed2d91d6afb0b55ba75f94b66e51f70783a46
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/8b7ed2d9.failed

This argument is not used, let's remove it.

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8b7ed2d91d6afb0b55ba75f94b66e51f70783a46)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ip_tunnel.c
#	net/ipv6/sit.c
diff --cc net/ipv4/ip_tunnel.c
index 26bb30d12002,0a6cf0e69478..000000000000
--- a/net/ipv4/ip_tunnel.c
+++ b/net/ipv4/ip_tunnel.c
@@@ -655,8 -654,7 +655,12 @@@ void ip_tunnel_xmit(struct sk_buff *skb
  		}
  	}
  
++<<<<<<< HEAD
 +	err = iptunnel_xmit(dev_net(dev), rt, skb,
 +			    fl4.saddr, fl4.daddr, protocol,
++=======
+ 	err = iptunnel_xmit(rt, skb, fl4.saddr, fl4.daddr, protocol,
++>>>>>>> 8b7ed2d91d6a (iptunnels: remove net arg from iptunnel_xmit())
  			    ip_tunnel_ecn_encap(tos, inner_iph, skb), ttl, df);
  	iptunnel_xmit_stats(err, &dev->stats, dev->tstats);
  
diff --cc net/ipv6/sit.c
index aff21b3145f9,1d1458a3b7c4..000000000000
--- a/net/ipv6/sit.c
+++ b/net/ipv6/sit.c
@@@ -886,14 -888,8 +886,19 @@@ static netdev_tx_t ipip6_tunnel_xmit(st
  		ttl = iph6->hop_limit;
  	tos = INET_ECN_encapsulate(tos, ipv6_get_dsfield(iph6));
  
++<<<<<<< HEAD
 +	skb = iptunnel_handle_offloads(skb, false, SKB_GSO_SIT);
 +	if (IS_ERR(skb)) {
 +		ip_rt_put(rt);
 +		goto out;
 +	}
 +
 +	err = iptunnel_xmit(dev_net(dev), rt, skb, fl4.saddr, fl4.daddr,
 +			    IPPROTO_IPV6, tos, ttl, df);
++=======
+ 	err = iptunnel_xmit(rt, skb, fl4.saddr, fl4.daddr, IPPROTO_IPV6, tos,
+ 			    ttl, df);
++>>>>>>> 8b7ed2d91d6a (iptunnels: remove net arg from iptunnel_xmit())
  	iptunnel_xmit_stats(err, &dev->stats, dev->tstats);
  	return NETDEV_TX_OK;
  
diff --git a/drivers/net/vxlan.c b/drivers/net/vxlan.c
index 33559a1aa9f1..e506e5697709 100644
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@ -1645,8 +1645,7 @@ int vxlan_xmit_skb(struct net *net, struct vxlan_sock *vs,
 	if (err)
 		return err;
 
-	return iptunnel_xmit(net, rt, skb, src, dst,
-			IPPROTO_UDP, tos, ttl, df);
+	return iptunnel_xmit(rt, skb, src, dst, IPPROTO_UDP, tos, ttl, df);
 }
 EXPORT_SYMBOL_GPL(vxlan_xmit_skb);
 
diff --git a/include/net/ip_tunnels.h b/include/net/ip_tunnels.h
index 8f3d6c1c1802..556ceb20890d 100644
--- a/include/net/ip_tunnels.h
+++ b/include/net/ip_tunnels.h
@@ -156,8 +156,7 @@ static inline u8 ip_tunnel_ecn_encap(u8 tos, const struct iphdr *iph,
 }
 
 int iptunnel_pull_header(struct sk_buff *skb, int hdr_len, __be16 inner_proto);
-int iptunnel_xmit(struct net *net, struct rtable *rt,
-		  struct sk_buff *skb,
+int iptunnel_xmit(struct rtable *rt, struct sk_buff *skb,
 		  __be32 src, __be32 dst, __u8 proto,
 		  __u8 tos, __u8 ttl, __be16 df);
 
* Unmerged path net/ipv4/ip_tunnel.c
diff --git a/net/ipv4/ip_tunnel_core.c b/net/ipv4/ip_tunnel_core.c
index 88e0d3412e71..18f76d1b2d64 100644
--- a/net/ipv4/ip_tunnel_core.c
+++ b/net/ipv4/ip_tunnel_core.c
@@ -46,8 +46,7 @@
 #include <net/netns/generic.h>
 #include <net/rtnetlink.h>
 
-int iptunnel_xmit(struct net *net, struct rtable *rt,
-		  struct sk_buff *skb,
+int iptunnel_xmit(struct rtable *rt, struct sk_buff *skb,
 		  __be32 src, __be32 dst, __u8 proto,
 		  __u8 tos, __u8 ttl, __be16 df)
 {
* Unmerged path net/ipv6/sit.c
diff --git a/net/openvswitch/vport-gre.c b/net/openvswitch/vport-gre.c
index 98c14288f964..3d147bd10d82 100644
--- a/net/openvswitch/vport-gre.c
+++ b/net/openvswitch/vport-gre.c
@@ -175,7 +175,7 @@ static int gre_tnl_send(struct vport *vport, struct sk_buff *skb)
 
 	skb->local_df = 1;
 
-	return iptunnel_xmit(net, rt, skb, fl.saddr,
+	return iptunnel_xmit(rt, skb, fl.saddr,
 			     OVS_CB(skb)->tun_key->ipv4_dst, IPPROTO_GRE,
 			     OVS_CB(skb)->tun_key->ipv4_tos,
 			     OVS_CB(skb)->tun_key->ipv4_ttl, df);
