qla2xxx: Introduce fw_dump_flag to track fw dump progress.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Introduce fw_dump_flag to track fw dump progress (Chad Dupuis) [1089346]
Rebuild_FUZZ: 99.13%
commit-author Hiral Patel <hiral.patel@qlogic.com>
commit 61f098dde16c6b535124d3acc8851bacd3d7e0d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/61f098dd.failed

	Signed-off-by: Hiral Patel <hiral.patel@qlogic.com>
	Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 61f098dde16c6b535124d3acc8851bacd3d7e0d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_dbg.c
#	drivers/scsi/qla2xxx/qla_dbg.h
#	drivers/scsi/qla2xxx/qla_init.c
#	drivers/scsi/qla2xxx/qla_tmpl.c
diff --cc drivers/scsi/qla2xxx/qla_dbg.c
index 87b75bfa0c9c,b063c3928f88..000000000000
--- a/drivers/scsi/qla2xxx/qla_dbg.c
+++ b/drivers/scsi/qla2xxx/qla_dbg.c
@@@ -208,26 -302,18 +214,38 @@@ qla24xx_read_window(struct device_reg_2
  	return buf;
  }
  
++<<<<<<< HEAD
 +static inline int
 +qla24xx_pause_risc(struct device_reg_24xx __iomem *reg)
++=======
+ void
+ qla24xx_pause_risc(struct device_reg_24xx __iomem *reg, struct qla_hw_data *ha)
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  {
 +	int rval = QLA_SUCCESS;
 +	uint32_t cnt;
 +
++<<<<<<< HEAD
  	WRT_REG_DWORD(&reg->hccr, HCCRX_SET_RISC_PAUSE);
 +	for (cnt = 30000;
 +	    ((RD_REG_DWORD(&reg->host_status) & HSRX_RISC_PAUSED) == 0) &&
 +	    rval == QLA_SUCCESS; cnt--) {
 +		if (cnt)
 +			udelay(100);
 +		else
 +			rval = QLA_FUNCTION_TIMEOUT;
 +	}
  
 +	return rval;
++=======
+ 	/* 100 usec delay is sufficient enough for hardware to pause RISC */
+ 	udelay(100);
+ 	if (RD_REG_DWORD(&reg->host_status) & HSRX_RISC_PAUSED)
+ 		set_bit(RISC_PAUSE_CMPL, &ha->fw_dump_cap_flags);
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  }
  
 -int
 +static int
  qla24xx_soft_reset(struct qla_hw_data *ha)
  {
  	int rval = QLA_SUCCESS;
@@@ -987,10 -1079,11 +1014,18 @@@ qla24xx_fw_dump(scsi_qla_host_t *vha, i
  
  	fw->host_status = htonl(RD_REG_DWORD(&reg->host_status));
  
++<<<<<<< HEAD
 +	/* Pause RISC. */
 +	rval = qla24xx_pause_risc(reg);
 +	if (rval != QLA_SUCCESS)
 +		goto qla24xx_fw_dump_failed_0;
++=======
+ 	/*
+ 	 * Pause RISC. No need to track timeout, as resetting the chip
+ 	 * is the right approach incase of pause timeout
+ 	 */
+ 	qla24xx_pause_risc(reg, ha);
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  
  	/* Host interface registers. */
  	dmp_reg = &reg->flash_addr;
@@@ -1237,10 -1331,11 +1273,18 @@@ qla25xx_fw_dump(scsi_qla_host_t *vha, i
  
  	fw->host_status = htonl(RD_REG_DWORD(&reg->host_status));
  
++<<<<<<< HEAD
 +	/* Pause RISC. */
 +	rval = qla24xx_pause_risc(reg);
 +	if (rval != QLA_SUCCESS)
 +		goto qla25xx_fw_dump_failed_0;
++=======
+ 	/*
+ 	 * Pause RISC. No need to track timeout, as resetting the chip
+ 	 * is the right approach incase of pause timeout
+ 	 */
+ 	qla24xx_pause_risc(reg, ha);
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  
  	/* Host/Risc registers. */
  	iter_reg = fw->host_risc_reg;
@@@ -1553,10 -1649,11 +1598,18 @@@ qla81xx_fw_dump(scsi_qla_host_t *vha, i
  
  	fw->host_status = htonl(RD_REG_DWORD(&reg->host_status));
  
++<<<<<<< HEAD
 +	/* Pause RISC. */
 +	rval = qla24xx_pause_risc(reg);
 +	if (rval != QLA_SUCCESS)
 +		goto qla81xx_fw_dump_failed_0;
++=======
+ 	/*
+ 	 * Pause RISC. No need to track timeout, as resetting the chip
+ 	 * is the right approach incase of pause timeout
+ 	 */
+ 	qla24xx_pause_risc(reg, ha);
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  
  	/* Host/Risc registers. */
  	iter_reg = fw->host_risc_reg;
@@@ -1871,10 -1969,11 +1925,18 @@@ qla83xx_fw_dump(scsi_qla_host_t *vha, i
  
  	fw->host_status = htonl(RD_REG_DWORD(&reg->host_status));
  
++<<<<<<< HEAD
 +	/* Pause RISC. */
 +	rval = qla24xx_pause_risc(reg);
 +	if (rval != QLA_SUCCESS)
 +		goto qla83xx_fw_dump_failed_0;
++=======
+ 	/*
+ 	 * Pause RISC. No need to track timeout, as resetting the chip
+ 	 * is the right approach incase of pause timeout
+ 	 */
+ 	qla24xx_pause_risc(reg, ha);
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  
  	WRT_REG_DWORD(&reg->iobase_addr, 0x6000);
  	dmp_reg = &reg->iobase_window;
diff --cc drivers/scsi/qla2xxx/qla_dbg.h
index 35e20b4f8b6c,feae593ac297..000000000000
--- a/drivers/scsi/qla2xxx/qla_dbg.h
+++ b/drivers/scsi/qla2xxx/qla_dbg.h
@@@ -348,3 -348,11 +348,14 @@@ ql_log_pci(uint32_t, struct pci_dev *pd
  #define ql_dbg_tgt	0x00004000 /* Target mode */
  #define ql_dbg_tgt_mgt	0x00002000 /* Target mode management */
  #define ql_dbg_tgt_tmr	0x00001000 /* Target mode task management */
++<<<<<<< HEAD
++=======
+ 
+ extern int qla27xx_dump_mpi_ram(struct qla_hw_data *, uint32_t, uint32_t *,
+ 	uint32_t, void **);
+ extern int qla24xx_dump_ram(struct qla_hw_data *, uint32_t, uint32_t *,
+ 	uint32_t, void **);
+ extern void qla24xx_pause_risc(struct device_reg_24xx __iomem *,
+ 	struct qla_hw_data *);
+ extern int qla24xx_soft_reset(struct qla_hw_data *);
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
diff --cc drivers/scsi/qla2xxx/qla_init.c
index 3090bddf0eb4,ec6c8f5ea517..000000000000
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@@ -1476,7 -1476,13 +1476,17 @@@ qla2x00_alloc_fw_dump(scsi_qla_host_t *
  	}
  
  	ha->fw_dumped = 0;
++<<<<<<< HEAD
 +	fixed_size = mem_size = eft_size = fce_size = mq_size = 0;
++=======
+ 	ha->fw_dump_cap_flags = 0;
+ 	dump_size = fixed_size = mem_size = eft_size = fce_size = mq_size = 0;
+ 	req_q_size = rsp_q_size = 0;
+ 
+ 	if (IS_QLA27XX(ha))
+ 		goto try_fce;
+ 
++>>>>>>> 61f098dde16c (qla2xxx: Introduce fw_dump_flag to track fw dump progress.)
  	if (IS_QLA2100(ha) || IS_QLA2200(ha)) {
  		fixed_size = sizeof(struct qla2100_fw_dump);
  	} else if (IS_QLA23XX(ha)) {
* Unmerged path drivers/scsi/qla2xxx/qla_tmpl.c
* Unmerged path drivers/scsi/qla2xxx/qla_dbg.c
* Unmerged path drivers/scsi/qla2xxx/qla_dbg.h
diff --git a/drivers/scsi/qla2xxx/qla_def.h b/drivers/scsi/qla2xxx/qla_def.h
index df869f7ee008..fd3f499984e8 100644
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@ -3119,6 +3119,13 @@ struct qla_hw_data {
 	struct qla2xxx_fw_dump *fw_dump;
 	uint32_t	fw_dump_len;
 	int		fw_dumped;
+	unsigned long	fw_dump_cap_flags;
+#define RISC_PAUSE_CMPL		0
+#define DMA_SHUTDOWN_CMPL	1
+#define ISP_RESET_CMPL		2
+#define RISC_RDY_AFT_RESET	3
+#define RISC_SRAM_DUMP_CMPL	4
+#define RISC_EXT_MEM_DUMP_CMPL	5
 	int		fw_dump_reading;
 	int		prev_minidump_failed;
 	dma_addr_t	eft_dma;
* Unmerged path drivers/scsi/qla2xxx/qla_init.c
diff --git a/drivers/scsi/qla2xxx/qla_os.c b/drivers/scsi/qla2xxx/qla_os.c
index c00dbfc9c88c..15be1055d21e 100644
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@ -3585,6 +3585,7 @@ qla2x00_free_fw_dump(struct qla_hw_data *ha)
 	ha->eft_dma = 0;
 	ha->fw_dump = NULL;
 	ha->fw_dumped = 0;
+	ha->fw_dump_cap_flags = 0;
 	ha->fw_dump_reading = 0;
 }
 
* Unmerged path drivers/scsi/qla2xxx/qla_tmpl.c
