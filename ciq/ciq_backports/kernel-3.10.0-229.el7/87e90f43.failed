perf hists: Collapse expanded callchains after filter is applied

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/hists: Collapse expanded callchains after filter is applied (Jiri Olsa) [1134356]
Rebuild_FUZZ: 98.44%
commit-author Namhyung Kim <namhyung@kernel.org>
commit 87e90f43285f4096e9ba5fc18b05c2e04caf3fab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/87e90f43.failed

When a filter is applied a hist entry checks whether its callchain was
folded and account it to the output stat.  But this is rather hacky
and only TUI-specific.  Simply fold the callchains for the entry looks
like a simpler and more generic solution IMHO.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/1398327843-31845-6-git-send-email-namhyung@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit 87e90f43285f4096e9ba5fc18b05c2e04caf3fab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.c
diff --cc tools/perf/util/hist.c
index dac7beaabd9c,8d5cfcc3bc63..000000000000
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@@ -695,13 -716,13 +695,18 @@@ static void hists__remove_entry_filter(
  	if (h->filtered)
  		return;
  
++<<<<<<< HEAD
 +	++hists->nr_non_filtered_entries;
 +	if (h->ms.unfolded)
 +		hists->nr_non_filtered_entries += h->nr_rows;
++=======
+ 	/* force fold unfiltered entry for simplicity */
+ 	h->ms.unfolded = false;
++>>>>>>> 87e90f43285f (perf hists: Collapse expanded callchains after filter is applied)
  	h->row_offset = 0;
 -
 +	hists->stats.total_non_filtered_period += h->stat.period;
  	hists->stats.nr_non_filtered_samples += h->stat.nr_events;
  
 -	hists__inc_filter_stats(hists, h);
  	hists__calc_col_len(hists, h);
  }
  
* Unmerged path tools/perf/util/hist.c
