bridge: Introduce BR_PROMISC flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Vlad Yasevich <vyasevic@redhat.com>
commit f3a6ddf15209cfad90b83e04168f42a5d9c8cc17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f3a6ddf1.failed

Introduce a BR_PROMISC per-port flag that will help us track if the
current port is supposed to be in promiscuous mode or not.  For now,
always start in promiscuous mode.

	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: Vlad Yasevich <vyasevic@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f3a6ddf15209cfad90b83e04168f42a5d9c8cc17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_private.h
diff --cc net/bridge/br_private.h
index 10b5654d52ef,00922a4fa795..000000000000
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@@ -173,6 -174,8 +173,11 @@@ struct net_bridge_por
  #define BR_ADMIN_COST		0x00000010
  #define BR_LEARNING		0x00000020
  #define BR_FLOOD		0x00000040
++<<<<<<< HEAD
++=======
+ #define BR_AUTO_MASK (BR_FLOOD | BR_LEARNING)
+ #define BR_PROMISC		0x00000080
++>>>>>>> f3a6ddf15209 (bridge: Introduce BR_PROMISC flag)
  
  #ifdef CONFIG_BRIDGE_IGMP_SNOOPING
  	struct bridge_mcast_query	ip4_query;
@@@ -197,6 -200,9 +202,12 @@@
  #endif
  };
  
++<<<<<<< HEAD
++=======
+ #define br_auto_port(p) ((p)->flags & BR_AUTO_MASK)
+ #define br_promisc_port(p) ((p)->flags & BR_PROMISC)
+ 
++>>>>>>> f3a6ddf15209 (bridge: Introduce BR_PROMISC flag)
  #define br_port_exists(dev) (dev->priv_flags & IFF_BRIDGE_PORT)
  
  static inline struct net_bridge_port *br_port_get_rcu(const struct net_device *dev)
diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index 2f236b5d13fb..07829b07e43e 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -224,7 +224,7 @@ static struct net_bridge_port *new_nbp(struct net_bridge *br,
 	p->path_cost = port_cost(dev);
 	p->priority = 0x8000 >> BR_PORT_BITS;
 	p->port_no = index;
-	p->flags = BR_LEARNING | BR_FLOOD;
+	p->flags = BR_LEARNING | BR_FLOOD | BR_PROMISC;
 	br_init_port(p);
 	p->state = BR_STATE_DISABLED;
 	br_stp_port_timer_init(p);
* Unmerged path net/bridge/br_private.h
