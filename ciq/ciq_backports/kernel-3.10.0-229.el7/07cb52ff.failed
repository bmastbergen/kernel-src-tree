iommu/vt-d: Allocate space for ACPI devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [iommu] vt-d: Allocate space for ACPI devices (Myron Stowe) [1129880 1087643]
Rebuild_FUZZ: 92.50%
commit-author David Woodhouse <David.Woodhouse@intel.com>
commit 07cb52ff6aadac0ad68b29be2ef73dba3111c5ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/07cb52ff.failed

	Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
(cherry picked from commit 07cb52ff6aadac0ad68b29be2ef73dba3111c5ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/dmar.c
diff --cc drivers/iommu/dmar.c
index af997da05f06,4c6297d1b421..000000000000
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@@ -199,9 -343,18 +200,24 @@@ dmar_parse_one_drhd(struct acpi_dmar_he
  	dmaru->reg_base_addr = drhd->address;
  	dmaru->segment = drhd->segment;
  	dmaru->include_all = drhd->flags & 0x1; /* BIT0: INCLUDE_ALL */
++<<<<<<< HEAD
++
++	ret = alloc_iommu(dmaru);
++	if (ret) {
++=======
+ 	dmaru->devices = dmar_alloc_dev_scope((void *)(drhd + 1),
+ 					      ((void *)drhd) + drhd->header.length,
+ 					      &dmaru->devices_cnt);
+ 	if (dmaru->devices_cnt && dmaru->devices == NULL) {
+ 		kfree(dmaru);
+ 		return -ENOMEM;
+ 	}
  
  	ret = alloc_iommu(dmaru);
  	if (ret) {
+ 		dmar_free_dev_scope(&dmaru->devices,
+ 				    &dmaru->devices_cnt);
++>>>>>>> 07cb52ff6aad (iommu/vt-d: Allocate space for ACPI devices)
  		kfree(dmaru);
  		return ret;
  	}
* Unmerged path drivers/iommu/dmar.c
