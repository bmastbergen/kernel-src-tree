net: Remove unlikely() for WARN_ON() conditions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] openvswitch: Remove unlikely() for WARN_ON() conditions (Jiri Benc) [1110384]
Rebuild_FUZZ: 90.20%
commit-author Thomas Graf <tgraf@suug.ch>
commit 80019d310f9fb4f8c9eeda0a5d76144ad3132fdf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/80019d31.failed

No need for the unlikely(), WARN_ON() and BUG_ON() internally use
unlikely() on the condition.

	Signed-off-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 80019d310f9fb4f8c9eeda0a5d76144ad3132fdf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/dev.c
diff --cc net/core/dev.c
index 7c7615547be2,b370230fe1d3..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -2255,17 -2320,34 +2255,34 @@@ __be16 skb_network_protocol(struct sk_b
  		type = eth->h_proto;
  	}
  
++<<<<<<< HEAD
 +	while (type == htons(ETH_P_8021Q) || type == htons(ETH_P_8021AD)) {
 +		struct vlan_hdr *vh;
++=======
+ 	/* if skb->protocol is 802.1Q/AD then the header should already be
+ 	 * present at mac_len - VLAN_HLEN (if mac_len > 0), or at
+ 	 * ETH_HLEN otherwise
+ 	 */
+ 	if (type == htons(ETH_P_8021Q) || type == htons(ETH_P_8021AD)) {
+ 		if (vlan_depth) {
+ 			if (WARN_ON(vlan_depth < VLAN_HLEN))
+ 				return 0;
+ 			vlan_depth -= VLAN_HLEN;
+ 		} else {
+ 			vlan_depth = ETH_HLEN;
+ 		}
+ 		do {
+ 			struct vlan_hdr *vh;
++>>>>>>> 80019d310f9f (net: Remove unlikely() for WARN_ON() conditions)
  
 -			if (unlikely(!pskb_may_pull(skb,
 -						    vlan_depth + VLAN_HLEN)))
 -				return 0;
 +		if (unlikely(!pskb_may_pull(skb, vlan_depth + VLAN_HLEN)))
 +			return 0;
  
 -			vh = (struct vlan_hdr *)(skb->data + vlan_depth);
 -			type = vh->h_vlan_encapsulated_proto;
 -			vlan_depth += VLAN_HLEN;
 -		} while (type == htons(ETH_P_8021Q) ||
 -			 type == htons(ETH_P_8021AD));
 +		vh = (struct vlan_hdr *)(skb->data + vlan_depth);
 +		type = vh->h_vlan_encapsulated_proto;
 +		vlan_depth += VLAN_HLEN;
  	}
  
 -	*depth = vlan_depth;
 -
  	return type;
  }
  
* Unmerged path net/core/dev.c
diff --git a/net/openvswitch/datapath.h b/net/openvswitch/datapath.h
index f1006f02fff2..6bc4465dc4a6 100644
--- a/net/openvswitch/datapath.h
+++ b/net/openvswitch/datapath.h
@@ -144,7 +144,7 @@ int lockdep_ovsl_is_held(void);
 #define lockdep_ovsl_is_held()	1
 #endif
 
-#define ASSERT_OVSL()		WARN_ON(unlikely(!lockdep_ovsl_is_held()))
+#define ASSERT_OVSL()		WARN_ON(!lockdep_ovsl_is_held())
 #define ovsl_dereference(p)					\
 	rcu_dereference_protected(p, lockdep_ovsl_is_held())
 #define rcu_dereference_ovsl(p)					\
