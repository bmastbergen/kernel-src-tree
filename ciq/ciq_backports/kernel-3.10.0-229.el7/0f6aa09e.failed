ACPI / container: Fix error code path in container_device_attach()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] container: Fix error code path in container_device_attach() (Prarit Bhargava) [1128634]
Rebuild_FUZZ: 94.40%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 0f6aa09e40c38d734f5d70762056116ca4a76126
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/0f6aa09e.failed

To avoid leaking memory on errors from device_register(), do a
put_device() on the device object in question in the error code
path of container_device_attach().

Fixes: caa73ea158de (ACPI / hotplug / driver core: Handle containers in a special way)
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
(cherry picked from commit 0f6aa09e40c38d734f5d70762056116ca4a76126)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/container.c
diff --cc drivers/acpi/container.c
index e23151667655,368f9ddb8480..000000000000
--- a/drivers/acpi/container.c
+++ b/drivers/acpi/container.c
@@@ -44,10 -43,47 +44,33 @@@ static const struct acpi_device_id cont
  	{"", 0},
  };
  
 -static int acpi_container_offline(struct container_dev *cdev)
 -{
 -	struct acpi_device *adev = ACPI_COMPANION(&cdev->dev);
 -	struct acpi_device *child;
 -
 -	/* Check all of the dependent devices' physical companions. */
 -	list_for_each_entry(child, &adev->children, node)
 -		if (!acpi_scan_is_offline(child, false))
 -			return -EBUSY;
 -
 -	return 0;
 -}
 -
 -static void acpi_container_release(struct device *dev)
 -{
 -	kfree(to_container_dev(dev));
 -}
 -
 -static int container_device_attach(struct acpi_device *adev,
 +static int container_device_attach(struct acpi_device *device,
  				   const struct acpi_device_id *not_used)
  {
++<<<<<<< HEAD
 +	/* This is necessary for container hotplug to work. */
++=======
+ 	struct container_dev *cdev;
+ 	struct device *dev;
+ 	int ret;
+ 
+ 	cdev = kzalloc(sizeof(*cdev), GFP_KERNEL);
+ 	if (!cdev)
+ 		return -ENOMEM;
+ 
+ 	cdev->offline = acpi_container_offline;
+ 	dev = &cdev->dev;
+ 	dev->bus = &container_subsys;
+ 	dev_set_name(dev, "%s", dev_name(&adev->dev));
+ 	ACPI_COMPANION_SET(dev, adev);
+ 	dev->release = acpi_container_release;
+ 	ret = device_register(dev);
+ 	if (ret) {
+ 		put_device(dev);
+ 		return ret;
+ 	}
+ 	adev->driver_data = dev;
++>>>>>>> 0f6aa09e40c3 (ACPI / container: Fix error code path in container_device_attach())
  	return 1;
  }
  
* Unmerged path drivers/acpi/container.c
