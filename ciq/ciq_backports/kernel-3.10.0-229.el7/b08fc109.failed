ATA / ACPI: remove power dependent device handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [ata] libata: remove power dependent device handling (Prarit Bhargava) [1141846]
Rebuild_FUZZ: 89.58%
commit-author Aaron Lu <aaron.lu@intel.com>
commit b08fc109ce4a32ce2f73f6e0437abc94ab1dd023
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/b08fc109.failed

Previously, we wanted SCSI devices corrsponding to ATA devices to
be runtime resumed when the power resource for those ATA device was
turned on by some other device, so we added the SCSI device to the
dependent device list of the ATA device's ACPI node.  However, this
code has no effect after commit 41863fc (ACPI / power: Drop automaitc
resume of power resource dependent devices) and the mechanism it was
supposed to implement is regarded as a bad idea now, so drop it.

[rjw: Changelog]
	Signed-off-by: Aaron Lu <aaron.lu@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit b08fc109ce4a32ce2f73f6e0437abc94ab1dd023)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ata/libata-acpi.c
#	drivers/ata/libata-scsi.c
#	drivers/ata/libata.h
diff --cc drivers/ata/libata-acpi.c
index da8170dfc90f,ab714d2ad978..000000000000
--- a/drivers/ata/libata-acpi.c
+++ b/drivers/ata/libata-acpi.c
@@@ -1062,110 -1035,3 +1062,113 @@@ void ata_acpi_on_disable(struct ata_dev
  {
  	ata_acpi_clear_gtf(dev);
  }
++<<<<<<< HEAD
 +
 +static int compat_pci_ata(struct ata_port *ap)
 +{
 +	struct device *dev = ap->tdev.parent;
 +	struct pci_dev *pdev;
 +
 +	if (!is_pci_dev(dev))
 +		return 0;
 +
 +	pdev = to_pci_dev(dev);
 +
 +	if ((pdev->class >> 8) != PCI_CLASS_STORAGE_SATA &&
 +	    (pdev->class >> 8) != PCI_CLASS_STORAGE_IDE)
 +		return 0;
 +
 +	return 1;
 +}
 +
 +static int ata_acpi_bind_host(struct ata_port *ap, acpi_handle *handle)
 +{
 +	if (libata_noacpi || ap->flags & ATA_FLAG_ACPI_SATA)
 +		return -ENODEV;
 +
 +	*handle = acpi_get_child(DEVICE_ACPI_HANDLE(ap->tdev.parent),
 +			ap->port_no);
 +
 +	if (!*handle)
 +		return -ENODEV;
 +
 +	if (__ata_acpi_gtm(ap, *handle, &ap->__acpi_init_gtm) == 0)
 +		ap->pflags |= ATA_PFLAG_INIT_GTM_VALID;
 +
 +	return 0;
 +}
 +
 +static int ata_acpi_bind_device(struct ata_port *ap, struct scsi_device *sdev,
 +				acpi_handle *handle)
 +{
 +	struct ata_device *ata_dev;
 +
 +	if (ap->flags & ATA_FLAG_ACPI_SATA) {
 +		if (!sata_pmp_attached(ap))
 +			ata_dev = &ap->link.device[sdev->id];
 +		else
 +			ata_dev = &ap->pmp_link[sdev->channel].device[sdev->id];
 +	}
 +	else {
 +		ata_dev = &ap->link.device[sdev->id];
 +	}
 +
 +	*handle = ata_dev_acpi_handle(ata_dev);
 +
 +	if (!*handle)
 +		return -ENODEV;
 +
 +	return 0;
 +}
 +
 +static int is_ata_port(const struct device *dev)
 +{
 +	return dev->type == &ata_port_type;
 +}
 +
 +static struct ata_port *dev_to_ata_port(struct device *dev)
 +{
 +	while (!is_ata_port(dev)) {
 +		if (!dev->parent)
 +			return NULL;
 +		dev = dev->parent;
 +	}
 +	return to_ata_port(dev);
 +}
 +
 +static int ata_acpi_find_device(struct device *dev, acpi_handle *handle)
 +{
 +	struct ata_port *ap = dev_to_ata_port(dev);
 +
 +	if (!ap)
 +		return -ENODEV;
 +
 +	if (!compat_pci_ata(ap))
 +		return -ENODEV;
 +
 +	if (scsi_is_host_device(dev))
 +		return ata_acpi_bind_host(ap, handle);
 +	else if (scsi_is_sdev_device(dev)) {
 +		struct scsi_device *sdev = to_scsi_device(dev);
 +
 +		return ata_acpi_bind_device(ap, sdev, handle);
 +	} else
 +		return -ENODEV;
 +}
 +
 +static struct acpi_bus_type ata_acpi_bus = {
 +	.name = "ATA",
 +	.find_device = ata_acpi_find_device,
 +};
 +
 +int ata_acpi_register(void)
 +{
 +	return scsi_register_acpi_bus_type(&ata_acpi_bus);
 +}
 +
 +void ata_acpi_unregister(void)
 +{
 +	scsi_unregister_acpi_bus_type(&ata_acpi_bus);
 +}
++=======
++>>>>>>> b08fc109ce4a (ATA / ACPI: remove power dependent device handling)
diff --cc drivers/ata/libata-scsi.c
index 44a48d2c7bb0,db6dfcfa3e2e..000000000000
--- a/drivers/ata/libata-scsi.c
+++ b/drivers/ata/libata-scsi.c
@@@ -3673,9 -3679,6 +3673,12 @@@ void ata_scsi_scan_host(struct ata_por
  			if (!IS_ERR(sdev)) {
  				dev->sdev = sdev;
  				scsi_device_put(sdev);
++<<<<<<< HEAD
 +				if (zpodd_dev_enabled(dev))
 +					dev_pm_qos_expose_flags(
 +							&sdev->sdev_gendev, 0);
++=======
++>>>>>>> b08fc109ce4a (ATA / ACPI: remove power dependent device handling)
  			} else {
  				dev->sdev = NULL;
  			}
diff --cc drivers/ata/libata.h
index 577d902bc4de,45b5ab3a95d5..000000000000
--- a/drivers/ata/libata.h
+++ b/drivers/ata/libata.h
@@@ -118,11 -118,9 +118,17 @@@ extern void ata_acpi_on_resume(struct a
  extern int ata_acpi_on_devcfg(struct ata_device *dev);
  extern void ata_acpi_on_disable(struct ata_device *dev);
  extern void ata_acpi_set_state(struct ata_port *ap, pm_message_t state);
++<<<<<<< HEAD
 +extern int ata_acpi_register(void);
 +extern void ata_acpi_unregister(void);
 +extern void ata_acpi_bind(struct ata_device *dev);
 +extern void ata_acpi_unbind(struct ata_device *dev);
 +extern void ata_acpi_hotplug_init(struct ata_host *host);
++=======
+ extern void ata_acpi_bind_port(struct ata_port *ap);
+ extern void ata_acpi_bind_dev(struct ata_device *dev);
+ extern acpi_handle ata_dev_acpi_handle(struct ata_device *dev);
++>>>>>>> b08fc109ce4a (ATA / ACPI: remove power dependent device handling)
  #else
  static inline void ata_acpi_dissociate(struct ata_host *host) { }
  static inline int ata_acpi_on_suspend(struct ata_port *ap) { return 0; }
@@@ -131,11 -129,8 +137,16 @@@ static inline int ata_acpi_on_devcfg(st
  static inline void ata_acpi_on_disable(struct ata_device *dev) { }
  static inline void ata_acpi_set_state(struct ata_port *ap,
  				      pm_message_t state) { }
++<<<<<<< HEAD
 +static inline int ata_acpi_register(void) { return 0; }
 +static inline void ata_acpi_unregister(void) { }
 +static inline void ata_acpi_bind(struct ata_device *dev) { }
 +static inline void ata_acpi_unbind(struct ata_device *dev) { }
 +static inline void ata_acpi_hotplug_init(struct ata_host *host) {}
++=======
+ static inline void ata_acpi_bind_port(struct ata_port *ap) {}
+ static inline void ata_acpi_bind_dev(struct ata_device *dev) {}
++>>>>>>> b08fc109ce4a (ATA / ACPI: remove power dependent device handling)
  #endif
  
  /* libata-scsi.c */
* Unmerged path drivers/ata/libata-acpi.c
* Unmerged path drivers/ata/libata-scsi.c
* Unmerged path drivers/ata/libata.h
