perf hists/tui: Count callchain rows separately

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/hists/tui: Count callchain rows separately (Jiri Olsa) [1134356]
Rebuild_FUZZ: 97.87%
commit-author Namhyung Kim <namhyung@kernel.org>
commit c3b789527b236873557f53740ceac47747e0e1cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/c3b78952.failed

When TUI hist browser expands/collapses callchains it accounted number
of callchain nodes into total entries to show.  However this code
ignores filtering so that it can make the cursor go to out of screen.

Thanks to Jiri Olsa for pointing out a bug (and a fix) in the code.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/1398327843-31845-12-git-send-email-namhyung@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit c3b789527b236873557f53740ceac47747e0e1cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/hists.c
diff --cc tools/perf/ui/browsers/hists.c
index b931d5d00a11,b0861e3e50a5..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -35,6 -36,27 +36,30 @@@ static int hists__browser_title(struct 
  				const char *ev_name);
  static void hist_browser__update_nr_entries(struct hist_browser *hb);
  
++<<<<<<< HEAD
++=======
+ static struct rb_node *hists__filter_entries(struct rb_node *nd,
+ 					     struct hists *hists,
+ 					     float min_pcnt);
+ 
+ static bool hist_browser__has_filter(struct hist_browser *hb)
+ {
+ 	return hists__has_filter(hb->hists) || hb->min_pcnt;
+ }
+ 
+ static u32 hist_browser__nr_entries(struct hist_browser *hb)
+ {
+ 	u32 nr_entries;
+ 
+ 	if (hist_browser__has_filter(hb))
+ 		nr_entries = hb->nr_non_filtered_entries;
+ 	else
+ 		nr_entries = hb->hists->nr_entries;
+ 
+ 	return nr_entries + hb->nr_callchain_rows;
+ }
+ 
++>>>>>>> c3b789527b23 (perf hists/tui: Count callchain rows separately)
  static void hist_browser__refresh_dimensions(struct hist_browser *browser)
  {
  	/* 3 == +/- toggle symbol before actual hist_entry rendering */
@@@ -44,7 -66,14 +69,18 @@@
  
  static void hist_browser__reset(struct hist_browser *browser)
  {
++<<<<<<< HEAD
 +	browser->b.nr_entries = browser->hists->nr_entries;
++=======
+ 	/*
+ 	 * The hists__remove_entry_filter() already folds non-filtered
+ 	 * entries so we can assume it has 0 callchain rows.
+ 	 */
+ 	browser->nr_callchain_rows = 0;
+ 
+ 	hist_browser__update_nr_entries(browser);
+ 	browser->b.nr_entries = hist_browser__nr_entries(browser);
++>>>>>>> c3b789527b23 (perf hists/tui: Count callchain rows separately)
  	hist_browser__refresh_dimensions(browser);
  	ui_browser__reset_index(&browser->b);
  }
@@@ -319,9 -354,7 +361,13 @@@ static int hist_browser__run(struct his
  	int delay_secs = hbt ? hbt->refresh : 0;
  
  	browser->b.entries = &browser->hists->entries;
++<<<<<<< HEAD
 +	browser->b.nr_entries = browser->hists->nr_entries;
 +	if (browser->min_pcnt)
 +		browser->b.nr_entries = browser->nr_non_filtered_entries;
++=======
+ 	browser->b.nr_entries = hist_browser__nr_entries(browser);
++>>>>>>> c3b789527b23 (perf hists/tui: Count callchain rows separately)
  
  	hist_browser__refresh_dimensions(browser);
  	hists__browser_title(browser->hists, title, sizeof(title), ev_name);
@@@ -338,13 -371,10 +384,14 @@@
  			u64 nr_entries;
  			hbt->timer(hbt->arg);
  
++<<<<<<< HEAD
 +			if (browser->min_pcnt) {
++=======
+ 			if (hist_browser__has_filter(browser))
++>>>>>>> c3b789527b23 (perf hists/tui: Count callchain rows separately)
  				hist_browser__update_nr_entries(browser);
- 				nr_entries = browser->nr_non_filtered_entries;
- 			} else {
- 				nr_entries = browser->hists->nr_entries;
- 			}
  
+ 			nr_entries = hist_browser__nr_entries(browser);
  			ui_browser__update_nr_entries(&browser->b, nr_entries);
  
  			if (browser->hists->stats.nr_lost_warned !=
* Unmerged path tools/perf/ui/browsers/hists.c
