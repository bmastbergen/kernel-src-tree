USB: UHCI: check for wakeup/suspend race

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [usb] uhci: check for wakeup/suspend race (Don Zickus) [1110939]
Rebuild_FUZZ: 93.33%
commit-author Alan Stern <stern@rowland.harvard.edu>
commit 1c124c9962b4ee6555fd6179ca318c2ad3a30354
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1c124c99.failed

hcd-pci.c in usbcore contains a check for wakeup requests racing with
controller suspend.  This check is going to be moved out of usbcore
and into the individual controller drivers, where it can apply to all
platforms, not just PCI.

This patch adds the check to uhci-hcd.  Ironically, none of the
non-PCI platform drivers for uhci-hcd implement suspend/resume.
Nevertheless, this change is needed to accomodate the upcoming change
to usbcore.

The patch also removes an outdated check of the root hub state.  For
one thing, the PM layer has long been quite reliable about suspending
root hubs before controllers.  For another, virtually the same check
is also made in hcd-pci.c; there's no point in repeating it.

	Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 1c124c9962b4ee6555fd6179ca318c2ad3a30354)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/uhci-pci.c
diff --cc drivers/usb/host/uhci-pci.c
index d89c78dc70c0,4cd79888804b..000000000000
--- a/drivers/usb/host/uhci-pci.c
+++ b/drivers/usb/host/uhci-pci.c
@@@ -174,12 -176,6 +176,15 @@@ static int uhci_pci_suspend(struct usb_
  	if (!HCD_HW_ACCESSIBLE(hcd) || uhci->dead)
  		goto done_okay;		/* Already suspended or dead */
  
++<<<<<<< HEAD
 +	if (uhci->rh_state > UHCI_RH_SUSPENDED) {
 +		dev_warn(uhci_dev(uhci), "Root hub isn't suspended!\n");
 +		rc = -EBUSY;
 +		goto done;
 +	};
 +
++=======
++>>>>>>> 1c124c9962b4 (USB: UHCI: check for wakeup/suspend race)
  	/* All PCI host controllers are required to disable IRQ generation
  	 * at the source, so we must turn off PIRQ.
  	 */
* Unmerged path drivers/usb/host/uhci-pci.c
