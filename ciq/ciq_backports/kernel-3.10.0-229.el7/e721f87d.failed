bonding: remove no longer relevant vlan warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jiri Pirko <jiri@resnulli.us>
commit e721f87d806f2a959d6a530be18dabee6097aa79
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e721f87d.failed

These warnings are no longer relevant. Even when last slave is
removed, there is a valid address assigned to bond (random).
The correct functionality of vlans is ensured by maintaining unicast
list in vlan_sync_address().

	Suggested-by: Jay Vosburgh <jay.vosburgh@canonical.com>
	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Acked-by: Veaceslav Falico <vfalico@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e721f87d806f2a959d6a530be18dabee6097aa79)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 2ac0e58bf5b7,09dc3ef771a7..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2056,26 -1749,18 +2056,29 @@@ static int __bond_release_one(struct ne
  		bond_select_active_slave(bond);
  
  		write_unlock_bh(&bond->curr_slave_lock);
 +		read_unlock(&bond->lock);
 +		write_lock_bh(&bond->lock);
  	}
  
 -	if (!bond_has_slaves(bond)) {
 +	if (bond->slave_cnt == 0) {
  		bond_set_carrier(bond);
  		eth_hw_addr_random(bond_dev);
++<<<<<<< HEAD
 +
 +		if (bond_vlan_used(bond)) {
 +			pr_warning("%s: Warning: clearing HW address of %s while it still has VLANs.\n",
 +				   bond_dev->name, bond_dev->name);
 +			pr_warning("%s: When re-adding slaves, make sure the bond's HW address matches its VLANs'.\n",
 +				   bond_dev->name);
 +		}
++=======
++>>>>>>> e721f87d806f (bonding: remove no longer relevant vlan warnings)
  	}
  
 +	write_unlock_bh(&bond->lock);
  	unblock_netpoll_tx();
 -	synchronize_rcu();
 -	bond->slave_cnt--;
  
 -	if (!bond_has_slaves(bond)) {
 +	if (bond->slave_cnt == 0) {
  		call_netdevice_notifiers(NETDEV_CHANGEADDR, bond->dev);
  		call_netdevice_notifiers(NETDEV_RELEASE, bond->dev);
  	}
* Unmerged path drivers/net/bonding/bond_main.c
