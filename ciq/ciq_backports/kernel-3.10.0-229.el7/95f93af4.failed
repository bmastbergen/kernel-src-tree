KVM: mmu: unify destroy_kvm_mmu with kvm_mmu_unload

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/mmu: unify destroy_kvm_mmu with kvm_mmu_unload (Paolo Bonzini) [1116936]
Rebuild_FUZZ: 97.03%
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 95f93af4add9047f7d1ae4f43d12e66f2ba2d6f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/95f93af4.failed

They do the same thing, and destroy_kvm_mmu can be confused with
kvm_mmu_destroy.

	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Gleb Natapov <gleb@redhat.com>
(cherry picked from commit 95f93af4add9047f7d1ae4f43d12e66f2ba2d6f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu.c
diff --cc arch/x86/kvm/mmu.c
index 94dde056e31c,d318d4274b27..000000000000
--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@@ -3830,17 -3861,11 +3830,22 @@@ static int init_kvm_mmu(struct kvm_vcp
  		return init_kvm_softmmu(vcpu);
  }
  
++<<<<<<< HEAD
 +static void destroy_kvm_mmu(struct kvm_vcpu *vcpu)
 +{
 +	ASSERT(vcpu);
 +	if (VALID_PAGE(vcpu->arch.mmu.root_hpa))
 +		/* mmu.free() should set root_hpa = INVALID_PAGE */
 +		vcpu->arch.mmu.free(vcpu);
 +}
 +
++=======
++>>>>>>> 95f93af4add9 (KVM: mmu: unify destroy_kvm_mmu with kvm_mmu_unload)
  int kvm_mmu_reset_context(struct kvm_vcpu *vcpu)
  {
- 	destroy_kvm_mmu(vcpu);
+ 	ASSERT(vcpu);
+ 
+ 	kvm_mmu_unload(vcpu);
  	return init_kvm_mmu(vcpu);
  }
  EXPORT_SYMBOL_GPL(kvm_mmu_reset_context);
* Unmerged path arch/x86/kvm/mmu.c
