ceph: fix __dcache_readdir()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Yan, Zheng <zheng.z.yan@intel.com>
commit 4d5f5df673ee673851986b5a492a9752fbb39dc5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/4d5f5df6.failed

If directory is fragmented, readdir() read its dirfrags one by one.
After reading all dirfrags, the corresponding dentries are sorted in
(frag_t, off) order in the dcache. If dentries of a directory are all
cached, __dcache_readdir() can use the cached dentries to satisfy
readdir syscall. But when checking if a given dentry is after the
position of readdir, __dcache_readdir() compares numerical value of
frag_t directly. This is wrong, it should use ceph_frag_compare().

	Signed-off-by: Yan, Zheng <zheng.z.yan@intel.com>
(cherry picked from commit 4d5f5df673ee673851986b5a492a9752fbb39dc5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/dir.c
diff --cc fs/ceph/dir.c
index e9a0fd2a195f,45eda6d7a40c..000000000000
--- a/fs/ceph/dir.c
+++ b/fs/ceph/dir.c
@@@ -157,7 -164,7 +165,11 @@@ more
  		if (!d_unhashed(dentry) && dentry->d_inode &&
  		    ceph_snap(dentry->d_inode) != CEPH_SNAPDIR &&
  		    ceph_ino(dentry->d_inode) != CEPH_INO_CEPH &&
++<<<<<<< HEAD
 +		    filp->f_pos <= di->offset)
++=======
+ 		    fpos_cmp(ctx->pos, di->offset) <= 0)
++>>>>>>> 4d5f5df673ee (ceph: fix __dcache_readdir())
  			break;
  		dout(" skipping %p %.*s at %llu (%llu)%s%s\n", dentry,
  		     dentry->d_name.len, dentry->d_name.name, di->offset,
* Unmerged path fs/ceph/dir.c
