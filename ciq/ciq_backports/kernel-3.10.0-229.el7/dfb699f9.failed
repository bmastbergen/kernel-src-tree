i40e: use stored base_queue value

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Shannon Nelson <shannon.nelson@intel.com>
commit dfb699f970b24c47e526ccdecc460f7b88441f7c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/dfb699f9.failed

No need to read the PCI register for the PF's base queue on every single Tx
queue enable and disable as we already have the value stored from reading
the capability features at startup.

Change-ID: Ic02fb622757742f43cb8269369c3d972d4f66555
	Signed-off-by: Shannon Nelson <shannon.nelson@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit dfb699f970b24c47e526ccdecc460f7b88441f7c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_common.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_common.c
index e59b2c5839c8,6e65f19dd6e5..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_common.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_common.c
@@@ -287,6 -655,36 +287,39 @@@ i40e_status i40e_get_mac_addr(struct i4
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * i40e_pre_tx_queue_cfg - pre tx queue configure
+  * @hw: pointer to the HW structure
+  * @queue: target pf queue index
+  * @enable: state change request
+  *
+  * Handles hw requirement to indicate intention to enable
+  * or disable target queue.
+  **/
+ void i40e_pre_tx_queue_cfg(struct i40e_hw *hw, u32 queue, bool enable)
+ {
+ 	u32 abs_queue_idx = hw->func_caps.base_queue + queue;
+ 	u32 reg_block = 0;
+ 	u32 reg_val;
+ 
+ 	if (abs_queue_idx >= 128)
+ 		reg_block = abs_queue_idx / 128;
+ 
+ 	reg_val = rd32(hw, I40E_GLLAN_TXPRE_QDIS(reg_block));
+ 	reg_val &= ~I40E_GLLAN_TXPRE_QDIS_QINDX_MASK;
+ 	reg_val |= (abs_queue_idx << I40E_GLLAN_TXPRE_QDIS_QINDX_SHIFT);
+ 
+ 	if (enable)
+ 		reg_val |= I40E_GLLAN_TXPRE_QDIS_CLEAR_QDIS_MASK;
+ 	else
+ 		reg_val |= I40E_GLLAN_TXPRE_QDIS_SET_QDIS_MASK;
+ 
+ 	wr32(hw, I40E_GLLAN_TXPRE_QDIS(reg_block), reg_val);
+ }
+ 
+ /**
++>>>>>>> dfb699f970b2 (i40e: use stored base_queue value)
   * i40e_get_media_type - Gets media type
   * @hw: pointer to the hardware structure
   **/
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_common.c
