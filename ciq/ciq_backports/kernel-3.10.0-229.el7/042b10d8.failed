tracing: Remove unused function ftrace_off_permanent()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [kernel] trace: Remove unused function ftrace_off_permanent() (Josh Poimboeuf) [1113829]
Rebuild_FUZZ: 96.23%
commit-author Steven Rostedt (Red Hat) <rostedt@goodmis.org>
commit 042b10d83d05174e50ee861ee3aca55fd6204324
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/042b10d8.failed

In the past, ftrace_off_permanent() was called if something
strange was detected. But the ftrace_bug() now handles all the
anomolies that can happen with ftrace (function tracing), and there
are no uses of ftrace_off_permanent(). Get rid of it.

	Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
(cherry picked from commit 042b10d83d05174e50ee861ee3aca55fd6204324)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/kernel.h
diff --cc include/linux/kernel.h
index 8f8582c55584,d4e98d13eff4..000000000000
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@@ -650,8 -638,7 +649,12 @@@ extern void ftrace_dump(enum ftrace_dum
  #else
  static inline void tracing_start(void) { }
  static inline void tracing_stop(void) { }
++<<<<<<< HEAD
 +static inline void ftrace_off_permanent(void) { }
 +static inline void trace_dump_stack(void) { }
++=======
+ static inline void trace_dump_stack(int skip) { }
++>>>>>>> 042b10d83d05 (tracing: Remove unused function ftrace_off_permanent())
  
  static inline void tracing_on(void) { }
  static inline void tracing_off(void) { }
* Unmerged path include/linux/kernel.h
diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index 618792e7f0c8..cf12eaa9cec6 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -1246,21 +1246,6 @@ int is_tracing_stopped(void)
 	return global_trace.stop_count;
 }
 
-/**
- * ftrace_off_permanent - disable all ftrace code permanently
- *
- * This should only be called when a serious anomally has
- * been detected.  This will turn off the function tracing,
- * ring buffers, and other tracing utilites. It takes no
- * locks and can be called from any context.
- */
-void ftrace_off_permanent(void)
-{
-	tracing_disabled = 1;
-	ftrace_stop();
-	tracing_off_permanent();
-}
-
 /**
  * tracing_start - quick start of the tracer
  *
