ext4: fix mmap data corruption when blocksize < pagesize

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jan Kara <jack@suse.cz>
commit d6320cbfc92910a3e5f10c42d98c231c98db4f60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/d6320cbf.failed

Use truncate_isize_extended() when hole is being created in a file so that
->page_mkwrite() will get called for the partial tail page if it is
mmaped (see the first patch in the series for details).

	Signed-off-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Cc: stable@vger.kernel.org
(cherry picked from commit d6320cbfc92910a3e5f10c42d98c231c98db4f60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/inode.c
diff --cc fs/ext4/inode.c
index 266821ebfcd2,091845298f48..000000000000
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@@ -4440,9 -4514,13 +4440,17 @@@ int ext4_setattr(struct dentry *dentry
  				ext4_orphan_del(NULL, inode);
  				goto err_out;
  			}
++<<<<<<< HEAD
++=======
+ 		} else {
+ 			loff_t oldsize = inode->i_size;
+ 
+ 			i_size_write(inode, attr->ia_size);
+ 			pagecache_isize_extended(inode, oldsize, inode->i_size);
++>>>>>>> d6320cbfc929 (ext4: fix mmap data corruption when blocksize < pagesize)
  		}
  
 +		i_size_write(inode, attr->ia_size);
  		/*
  		 * Blocks are going to be removed from the inode. Wait
  		 * for dio in flight.  Temporarily disable
* Unmerged path fs/ext4/inode.c
