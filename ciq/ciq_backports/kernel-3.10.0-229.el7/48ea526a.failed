net/mlx4: Use is_kdump_kernel() to detect kdump kernel

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [ethernet] mlx4: Use is_kdump_kernel() to detect kdump kernel (Amir Vadai) [1107617 1107618 1107619 1107620]
Rebuild_FUZZ: 96.15%
commit-author Amir Vadai <amirv@mellanox.com>
commit 48ea526a6877d605c961aa37fae33f3227b29424
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/48ea526a.failed

Use is_kdump_kernel() to detect kdump kernel, instead of reset_devices.

	Signed-off-by: Amir Vadai <amirv@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 48ea526a6877d605c961aa37fae33f3227b29424)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx4/device.h
diff --cc include/linux/mlx4/device.h
index 7922f70c69ce,783dd099abd1..000000000000
--- a/include/linux/mlx4/device.h
+++ b/include/linux/mlx4/device.h
@@@ -1248,4 -1253,30 +1249,33 @@@ int mlx4_phys_to_slave_port(struct mlx4
  int mlx4_get_base_gid_ix(struct mlx4_dev *dev, int slave, int port);
  
  int mlx4_config_vxlan_port(struct mlx4_dev *dev, __be16 udp_port);
++<<<<<<< HEAD
++=======
+ int mlx4_vf_smi_enabled(struct mlx4_dev *dev, int slave, int port);
+ int mlx4_vf_get_enable_smi_admin(struct mlx4_dev *dev, int slave, int port);
+ int mlx4_vf_set_enable_smi_admin(struct mlx4_dev *dev, int slave, int port,
+ 				 int enable);
+ int mlx4_mr_hw_get_mpt(struct mlx4_dev *dev, struct mlx4_mr *mmr,
+ 		       struct mlx4_mpt_entry ***mpt_entry);
+ int mlx4_mr_hw_write_mpt(struct mlx4_dev *dev, struct mlx4_mr *mmr,
+ 			 struct mlx4_mpt_entry **mpt_entry);
+ int mlx4_mr_hw_change_pd(struct mlx4_dev *dev, struct mlx4_mpt_entry *mpt_entry,
+ 			 u32 pdn);
+ int mlx4_mr_hw_change_access(struct mlx4_dev *dev,
+ 			     struct mlx4_mpt_entry *mpt_entry,
+ 			     u32 access);
+ void mlx4_mr_hw_put_mpt(struct mlx4_dev *dev,
+ 			struct mlx4_mpt_entry **mpt_entry);
+ void mlx4_mr_rereg_mem_cleanup(struct mlx4_dev *dev, struct mlx4_mr *mr);
+ int mlx4_mr_rereg_mem_write(struct mlx4_dev *dev, struct mlx4_mr *mr,
+ 			    u64 iova, u64 size, int npages,
+ 			    int page_shift, struct mlx4_mpt_entry *mpt_entry);
+ 
+ /* Returns true if running in low memory profile (kdump kernel) */
+ static inline bool mlx4_low_memory_profile(void)
+ {
+ 	return is_kdump_kernel();
+ }
+ 
++>>>>>>> 48ea526a6877 (net/mlx4: Use is_kdump_kernel() to detect kdump kernel)
  #endif /* MLX4_DEVICE_H */
* Unmerged path include/linux/mlx4/device.h
