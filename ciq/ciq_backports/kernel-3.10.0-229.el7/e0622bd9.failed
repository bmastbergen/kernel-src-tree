KVM: PPC: Book3S HV: Handle new LPCR bits on POWER8

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/ppc: book3s hv - Handle new LPCR bits on POWER8 (Don Zickus) [1127366]
Rebuild_FUZZ: 94.12%
commit-author Paul Mackerras <paulus@samba.org>
commit e0622bd9f2fccc8a801fa7aaf4fa6d7c728c3a78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e0622bd9.failed

POWER8 has a bit in the LPCR to enable or disable the PURR and SPURR
registers to count when in the guest.  Set this bit.

POWER8 has a field in the LPCR called AIL (Alternate Interrupt Location)
which is used to enable relocation-on interrupts.  Allow userspace to
set this field.

	Signed-off-by: Paul Mackerras <paulus@samba.org>
	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit e0622bd9f2fccc8a801fa7aaf4fa6d7c728c3a78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/reg.h
diff --cc arch/powerpc/include/asm/reg.h
index e983e00762dc,05ecb072540c..000000000000
--- a/arch/powerpc/include/asm/reg.h
+++ b/arch/powerpc/include/asm/reg.h
@@@ -298,9 -305,13 +298,17 @@@
  #define   LPCR_RMLS    0x1C000000      /* impl dependent rmo limit sel */
  #define	  LPCR_RMLS_SH	(63-37)
  #define   LPCR_ILE     0x02000000      /* !HV irqs set MSR:LE */
+ #define   LPCR_AIL	0x01800000	/* Alternate interrupt location */
  #define   LPCR_AIL_0	0x00000000	/* MMU off exception offset 0x0 */
  #define   LPCR_AIL_3	0x01800000	/* MMU on exception offset 0xc00...4xxx */
++<<<<<<< HEAD
 +#define   LPCR_PECE	0x00007000	/* powersave exit cause enable */
++=======
+ #define   LPCR_ONL	0x00040000	/* online - PURR/SPURR count */
+ #define   LPCR_PECE	0x0001f000	/* powersave exit cause enable */
+ #define     LPCR_PECEDP	0x00010000	/* directed priv dbells cause exit */
+ #define     LPCR_PECEDH	0x00008000	/* directed hyp dbells cause exit */
++>>>>>>> e0622bd9f2fc (KVM: PPC: Book3S HV: Handle new LPCR bits on POWER8)
  #define     LPCR_PECE0	0x00004000	/* ext. exceptions can cause exit */
  #define     LPCR_PECE1	0x00002000	/* decrementer can cause exit */
  #define     LPCR_PECE2	0x00001000	/* machine check etc can cause exit */
* Unmerged path arch/powerpc/include/asm/reg.h
diff --git a/arch/powerpc/kvm/book3s_hv.c b/arch/powerpc/kvm/book3s_hv.c
index bd4792543205..1d9df3c3cea0 100644
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@ -786,8 +786,11 @@ static void kvmppc_set_lpcr(struct kvm_vcpu *vcpu, u64 new_lpcr)
 	/*
 	 * Userspace can only modify DPFD (default prefetch depth),
 	 * ILE (interrupt little-endian) and TC (translation control).
+	 * On POWER8 userspace can also modify AIL (alt. interrupt loc.)
 	 */
 	mask = LPCR_DPFD | LPCR_ILE | LPCR_TC;
+	if (cpu_has_feature(CPU_FTR_ARCH_207S))
+		mask |= LPCR_AIL;
 	vc->lpcr = (vc->lpcr & ~mask) | (new_lpcr & mask);
 	spin_unlock(&vc->lock);
 }
@@ -2018,6 +2021,9 @@ int kvmppc_core_init_vm(struct kvm *kvm)
 			LPCR_VPM0 | LPCR_VPM1;
 		kvm->arch.vrma_slb_v = SLB_VSID_B_1T |
 			(VRMA_VSID << SLB_VSID_SHIFT_1T);
+		/* On POWER8 turn on online bit to enable PURR/SPURR */
+		if (cpu_has_feature(CPU_FTR_ARCH_207S))
+			lpcr |= LPCR_ONL;
 	}
 	kvm->arch.lpcr = lpcr;
 
