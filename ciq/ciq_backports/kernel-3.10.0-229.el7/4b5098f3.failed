drm/nouveau/kms: take more care when pulling down accelerated fbcon

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] nouveau/kms: take more care when pulling down accelerated fbcon (Rob Clark) [1173317]
Rebuild_FUZZ: 96.92%
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 4b5098f3597195e9faf17e5a0cfca905d9a04d9f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/4b5098f3.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 4b5098f3597195e9faf17e5a0cfca905d9a04d9f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nouveau_fbcon.c
#	drivers/gpu/drm/nouveau/nouveau_fbcon.h
diff --cc drivers/gpu/drm/nouveau/nouveau_fbcon.c
index fa81047bd1be,ba004932435a..000000000000
--- a/drivers/gpu/drm/nouveau/nouveau_fbcon.c
+++ b/drivers/gpu/drm/nouveau/nouveau_fbcon.c
@@@ -528,11 -551,13 +550,21 @@@ nouveau_fbcon_set_suspend(struct drm_de
  	struct nouveau_drm *drm = nouveau_drm(dev);
  	if (drm->fbcon) {
  		console_lock();
++<<<<<<< HEAD
 +		if (state == 0)
 +			nouveau_fbcon_save_disable_accel(dev);
 +		fb_set_suspend(drm->fbcon->helper.fbdev, state);
 +		if (state == 1)
 +			nouveau_fbcon_restore_accel(dev);
++=======
+ 		if (state == 1)
+ 			nouveau_fbcon_accel_save_disable(dev);
+ 		fb_set_suspend(drm->fbcon->helper.fbdev, state);
+ 		if (state == 0) {
+ 			nouveau_fbcon_accel_restore(dev);
+ 			nouveau_fbcon_zfill(dev, drm->fbcon);
+ 		}
++>>>>>>> 4b5098f35971 (drm/nouveau/kms: take more care when pulling down accelerated fbcon)
  		console_unlock();
  	}
  }
diff --cc drivers/gpu/drm/nouveau/nouveau_fbcon.h
index fdfc0c94fbcc,6d857e2869c9..000000000000
--- a/drivers/gpu/drm/nouveau/nouveau_fbcon.h
+++ b/drivers/gpu/drm/nouveau/nouveau_fbcon.h
@@@ -61,9 -61,8 +61,14 @@@ void nouveau_fbcon_gpu_lockup(struct fb
  int nouveau_fbcon_init(struct drm_device *dev);
  void nouveau_fbcon_fini(struct drm_device *dev);
  void nouveau_fbcon_set_suspend(struct drm_device *dev, int state);
++<<<<<<< HEAD
 +void nouveau_fbcon_zfill_all(struct drm_device *dev);
 +void nouveau_fbcon_save_disable_accel(struct drm_device *dev);
 +void nouveau_fbcon_restore_accel(struct drm_device *dev);
++=======
+ void nouveau_fbcon_accel_save_disable(struct drm_device *dev);
+ void nouveau_fbcon_accel_restore(struct drm_device *dev);
++>>>>>>> 4b5098f35971 (drm/nouveau/kms: take more care when pulling down accelerated fbcon)
  
  void nouveau_fbcon_output_poll_changed(struct drm_device *dev);
  #endif /* __NV50_FBCON_H__ */
diff --git a/drivers/gpu/drm/nouveau/dispnv04/crtc.c b/drivers/gpu/drm/nouveau/dispnv04/crtc.c
index d4fbf11360fe..86dd71f3fd5f 100644
--- a/drivers/gpu/drm/nouveau/dispnv04/crtc.c
+++ b/drivers/gpu/drm/nouveau/dispnv04/crtc.c
@@ -917,9 +917,9 @@ nv04_crtc_mode_set_base_atomic(struct drm_crtc *crtc,
 	struct drm_device *dev = drm->dev;
 
 	if (state == ENTER_ATOMIC_MODE_SET)
-		nouveau_fbcon_save_disable_accel(dev);
+		nouveau_fbcon_accel_save_disable(dev);
 	else
-		nouveau_fbcon_restore_accel(dev);
+		nouveau_fbcon_accel_restore(dev);
 
 	return nv04_crtc_do_mode_set_base(crtc, fb, x, y, true);
 }
* Unmerged path drivers/gpu/drm/nouveau/nouveau_fbcon.c
* Unmerged path drivers/gpu/drm/nouveau/nouveau_fbcon.h
