ixgbevf: Indicate removal state explicitly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Mark Rustad <mark.d.rustad@intel.com>
commit 2e7cfbdde8412a95ea4b003a68c2737434f543bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2e7cfbdd.failed

Add a bit, __IXGBEVF_REMOVING, to indicate that the module is being
removed. The __IXGBEVF_DOWN bit had been overloaded for this purpose,
but that leads to trouble. A few places now check both __IXGBEVF_DOWN
and __IXGBEVF_REMOVING.

	Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
	Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 2e7cfbdde8412a95ea4b003a68c2737434f543bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
diff --cc drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index b7abede97f9e,940d9244df62..000000000000
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@@ -836,37 -830,13 +837,43 @@@ static void ixgbevf_set_itr(struct ixgb
  static irqreturn_t ixgbevf_msix_other(int irq, void *data)
  {
  	struct ixgbevf_adapter *adapter = data;
 +	struct pci_dev *pdev = adapter->pdev;
  	struct ixgbe_hw *hw = &adapter->hw;
 +	u32 msg;
 +	bool got_ack = false;
  
  	hw->mac.get_link_status = 1;
 +	if (!hw->mbx.ops.check_for_ack(hw))
 +		got_ack = true;
 +
++<<<<<<< HEAD
 +	if (!hw->mbx.ops.check_for_msg(hw)) {
 +		hw->mbx.ops.read(hw, &msg, 1);
  
 +		if ((msg & IXGBE_MBVFICR_VFREQ_MASK) == IXGBE_PF_CONTROL_MSG) {
 +			mod_timer(&adapter->watchdog_timer,
 +				  round_jiffies(jiffies + 1));
 +			adapter->link_up = false;
 +		}
 +
 +		if (msg & IXGBE_VT_MSGTYPE_NACK)
 +			dev_info(&pdev->dev,
 +				 "Last Request of type %2.2x to PF Nacked\n",
 +				 msg & 0xFF);
 +		hw->mbx.v2p_mailbox |= IXGBE_VFMAILBOX_PFSTS;
 +	}
 +
 +	/* checking for the ack clears the PFACK bit.  Place
 +	 * it back in the v2p_mailbox cache so that anyone
 +	 * polling for an ack will not miss it
 +	 */
 +	if (got_ack)
 +		hw->mbx.v2p_mailbox |= IXGBE_VFMAILBOX_PFACK;
++=======
+ 	if (!test_bit(__IXGBEVF_DOWN, &adapter->state) &&
+ 	    !test_bit(__IXGBEVF_REMOVING, &adapter->state))
+ 		mod_timer(&adapter->watchdog_timer, jiffies);
++>>>>>>> 2e7cfbdde841 (ixgbevf: Indicate removal state explicitly)
  
  	IXGBE_WRITE_REG(hw, IXGBE_VTEIMS, adapter->eims_other);
  
diff --git a/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h b/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
index 6cd25be73db7..28cb8173c08e 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
@@ -1,7 +1,7 @@
 /*******************************************************************************
 
   Intel 82599 Virtual Function driver
-  Copyright(c) 1999 - 2012 Intel Corporation.
+  Copyright(c) 1999 - 2014 Intel Corporation.
 
   This program is free software; you can redistribute it and/or modify it
   under the terms and conditions of the GNU General Public License,
@@ -395,7 +395,8 @@ struct ixgbevf_adapter {
 enum ixbgevf_state_t {
 	__IXGBEVF_TESTING,
 	__IXGBEVF_RESETTING,
-	__IXGBEVF_DOWN
+	__IXGBEVF_DOWN,
+	__IXGBEVF_REMOVING,
 };
 
 struct ixgbevf_cb {
* Unmerged path drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
