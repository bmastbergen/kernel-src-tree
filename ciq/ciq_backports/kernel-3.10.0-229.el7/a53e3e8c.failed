net/mlx4_core: Add ethernet backplane autoneg device capability

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [ethernet] mlx4: Add ethernet backplane autoneg device capability (Amir Vadai) [1060221]
Rebuild_FUZZ: 92.31%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit a53e3e8c1db547981e13d1ebf24a659bd4e87710
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/a53e3e8c.failed

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Amir Vadai <amirv@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a53e3e8c1db547981e13d1ebf24a659bd4e87710)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/fw.c
#	include/linux/mlx4/device.h
diff --cc drivers/net/ethernet/mellanox/mlx4/fw.c
index 352765311b33,72289ef5ebbe..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/fw.c
+++ b/drivers/net/ethernet/mellanox/mlx4/fw.c
@@@ -136,7 -136,12 +136,16 @@@ static void dump_dev_cap_flags2(struct 
  		[7] = "FSM (MAC anti-spoofing) support",
  		[8] = "Dynamic QP updates support",
  		[9] = "Device managed flow steering IPoIB support",
++<<<<<<< HEAD
 +		[10] = "TCP/IP offloads/flow-steering for VXLAN support"
++=======
+ 		[10] = "TCP/IP offloads/flow-steering for VXLAN support",
+ 		[11] = "MAD DEMUX (Secure-Host) support",
+ 		[12] = "Large cache line (>64B) CQE stride support",
+ 		[13] = "Large cache line (>64B) EQE stride support",
+ 		[14] = "Ethernet protocol control support",
+ 		[15] = "Ethernet Backplane autoneg support"
++>>>>>>> a53e3e8c1db5 (net/mlx4_core: Add ethernet backplane autoneg device capability)
  	};
  	int i;
  
@@@ -553,8 -576,10 +562,9 @@@ int mlx4_QUERY_DEV_CAP(struct mlx4_dev 
  #define QUERY_DEV_CAP_BMME_FLAGS_OFFSET		0x94
  #define QUERY_DEV_CAP_RSVD_LKEY_OFFSET		0x98
  #define QUERY_DEV_CAP_MAX_ICM_SZ_OFFSET		0xa0
+ #define QUERY_DEV_CAP_ETH_BACKPL_OFFSET		0x9c
  #define QUERY_DEV_CAP_FW_REASSIGN_MAC		0x9d
  #define QUERY_DEV_CAP_VXLAN			0x9e
 -#define QUERY_DEV_CAP_MAD_DEMUX_OFFSET		0xb0
  
  	dev_cap->flags2 = 0;
  	mailbox = mlx4_alloc_cmd_mailbox(dev);
diff --cc include/linux/mlx4/device.h
index e8e5c83cafc9,e4c136ebe79b..000000000000
--- a/include/linux/mlx4/device.h
+++ b/include/linux/mlx4/device.h
@@@ -180,8 -182,13 +180,18 @@@ enum 
  	MLX4_DEV_CAP_FLAG2_VLAN_CONTROL		= 1LL <<  6,
  	MLX4_DEV_CAP_FLAG2_FSM			= 1LL <<  7,
  	MLX4_DEV_CAP_FLAG2_UPDATE_QP		= 1LL <<  8,
++<<<<<<< HEAD
 +	MLX4_DEV_CAP_FLAG2_VXLAN_OFFLOADS	= 1LL <<  9,
 +	MLX4_DEV_CAP_FLAG2_DMFS_IPOIB		= 1LL << 10
++=======
+ 	MLX4_DEV_CAP_FLAG2_DMFS_IPOIB		= 1LL <<  9,
+ 	MLX4_DEV_CAP_FLAG2_VXLAN_OFFLOADS	= 1LL <<  10,
+ 	MLX4_DEV_CAP_FLAG2_MAD_DEMUX		= 1LL <<  11,
+ 	MLX4_DEV_CAP_FLAG2_CQE_STRIDE		= 1LL <<  12,
+ 	MLX4_DEV_CAP_FLAG2_EQE_STRIDE		= 1LL <<  13,
+ 	MLX4_DEV_CAP_FLAG2_ETH_PROT_CTRL        = 1LL <<  14,
+ 	MLX4_DEV_CAP_FLAG2_ETH_BACKPL_AN_REP	= 1LL <<  15
++>>>>>>> a53e3e8c1db5 (net/mlx4_core: Add ethernet backplane autoneg device capability)
  };
  
  enum {
* Unmerged path drivers/net/ethernet/mellanox/mlx4/fw.c
* Unmerged path include/linux/mlx4/device.h
