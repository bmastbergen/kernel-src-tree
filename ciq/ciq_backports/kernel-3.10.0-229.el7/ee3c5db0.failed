blk-mq: blk_mq_unregister_hctx() can be static

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Fengguang Wu <fengguang.wu@intel.com>
commit ee3c5db0896d85187b5f31b5482ed8fd308d31ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/ee3c5db0.failed

CC: Jens Axboe <axboe@kernel.dk>
	Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit ee3c5db0896d85187b5f31b5482ed8fd308d31ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq-sysfs.c
diff --cc block/blk-mq-sysfs.c
index 8145b5b25b4b,ed5217867555..000000000000
--- a/block/blk-mq-sysfs.c
+++ b/block/blk-mq-sysfs.c
@@@ -317,6 -327,42 +317,45 @@@ static struct kobj_type blk_mq_hw_ktyp
  	.release	= blk_mq_sysfs_release,
  };
  
++<<<<<<< HEAD
++=======
+ static void blk_mq_unregister_hctx(struct blk_mq_hw_ctx *hctx)
+ {
+ 	struct blk_mq_ctx *ctx;
+ 	int i;
+ 
+ 	if (!hctx->nr_ctx || !(hctx->flags & BLK_MQ_F_SYSFS_UP))
+ 		return;
+ 
+ 	hctx_for_each_ctx(hctx, ctx, i)
+ 		kobject_del(&ctx->kobj);
+ 
+ 	kobject_del(&hctx->kobj);
+ }
+ 
+ static int blk_mq_register_hctx(struct blk_mq_hw_ctx *hctx)
+ {
+ 	struct request_queue *q = hctx->queue;
+ 	struct blk_mq_ctx *ctx;
+ 	int i, ret;
+ 
+ 	if (!hctx->nr_ctx || !(hctx->flags & BLK_MQ_F_SYSFS_UP))
+ 		return 0;
+ 
+ 	ret = kobject_add(&hctx->kobj, &q->mq_kobj, "%u", hctx->queue_num);
+ 	if (ret)
+ 		return ret;
+ 
+ 	hctx_for_each_ctx(hctx, ctx, i) {
+ 		ret = kobject_add(&ctx->kobj, &hctx->kobj, "cpu%u", ctx->cpu);
+ 		if (ret)
+ 			break;
+ 	}
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> ee3c5db0896d (blk-mq: blk_mq_unregister_hctx() can be static)
  void blk_mq_unregister_disk(struct gendisk *disk)
  {
  	struct request_queue *q = disk->queue;
* Unmerged path block/blk-mq-sysfs.c
