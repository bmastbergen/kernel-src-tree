brcmfmac: handle IF event for P2P_DEVICE interface

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Arend van Spriel <arend@broadcom.com>
commit 87c4790330810fe5caf0172d9320cf24ef19cebe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/87c47903.failed

The firmware notifies about interface changes through the IF event
which has a NO_IF flag that means host can ignore the event. This
behaviour was introduced in the driver by:

  commit 2ee8382fc6c763c76396a6aaff77a27089eed3aa
  Author: Arend van Spriel <arend@broadcom.com>
  Date:   Sat Aug 10 12:27:24 2013 +0200

      brcmfmac: ignore IF event if firmware indicates it

It turns out that the IF event for the P2P_DEVICE also has this
flag set, but the event should not be ignored in this scenario.
The mentioned commit caused a regression in 3.12 kernel in creation
of the P2P_DEVICE interface.

	Cc: <stable@vger.kernel.org> # 3.14, 3.16
	Reviewed-by: Hante Meuleman <meuleman@broadcom.com>
	Reviewed-by: Franky (Zhenhui) Lin <frankyl@broadcom.com>
	Reviewed-by: Daniel (Deognyoun) Kim <dekim@broadcom.com>
	Reviewed-by: Pieter-Paul Giesberts <pieterpg@broadcom.com>
	Signed-off-by: Arend van Spriel <arend@broadcom.com>
	Signed-off-by: John W. Linville <linville@tuxdriver.com>
(cherry picked from commit 87c4790330810fe5caf0172d9320cf24ef19cebe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/brcm80211/brcmfmac/fweh.c
#	drivers/net/wireless/brcm80211/brcmfmac/fweh.h
diff --cc drivers/net/wireless/brcm80211/brcmfmac/fweh.c
index 83ee53a7c76e,44fc85f68f7a..000000000000
--- a/drivers/net/wireless/brcm80211/brcmfmac/fweh.c
+++ b/drivers/net/wireless/brcm80211/brcmfmac/fweh.c
@@@ -185,6 -185,16 +185,19 @@@ static void brcmf_fweh_handle_if_event(
  		  ifevent->action, ifevent->ifidx, ifevent->bssidx,
  		  ifevent->flags, ifevent->role);
  
++<<<<<<< HEAD
++=======
+ 	/* The P2P Device interface event must not be ignored
+ 	 * contrary to what firmware tells us. The only way to
+ 	 * distinguish the P2P Device is by looking at the ifidx
+ 	 * and bssidx received.
+ 	 */
+ 	if (!(ifevent->ifidx == 0 && ifevent->bssidx == 1) &&
+ 	    (ifevent->flags & BRCMF_E_IF_FLAG_NOIF)) {
+ 		brcmf_dbg(EVENT, "event can be ignored\n");
+ 		return;
+ 	}
++>>>>>>> 87c479033081 (brcmfmac: handle IF event for P2P_DEVICE interface)
  	if (ifevent->ifidx >= BRCMF_MAX_IFS) {
  		brcmf_err("invalid interface index: %u\n",
  			  ifevent->ifidx);
diff --cc drivers/net/wireless/brcm80211/brcmfmac/fweh.h
index 6ec5db9c60a5,cbf033f59109..000000000000
--- a/drivers/net/wireless/brcm80211/brcmfmac/fweh.h
+++ b/drivers/net/wireless/brcm80211/brcmfmac/fweh.h
@@@ -118,6 -123,58 +118,61 @@@ enum brcmf_fweh_event_code 
  #define BRCMF_EVENT_MSG_FLUSHTXQ	0x02
  #define BRCMF_EVENT_MSG_GROUP		0x04
  
++<<<<<<< HEAD
++=======
+ /* status field values in struct brcmf_event_msg */
+ #define BRCMF_E_STATUS_SUCCESS			0
+ #define BRCMF_E_STATUS_FAIL			1
+ #define BRCMF_E_STATUS_TIMEOUT			2
+ #define BRCMF_E_STATUS_NO_NETWORKS		3
+ #define BRCMF_E_STATUS_ABORT			4
+ #define BRCMF_E_STATUS_NO_ACK			5
+ #define BRCMF_E_STATUS_UNSOLICITED		6
+ #define BRCMF_E_STATUS_ATTEMPT			7
+ #define BRCMF_E_STATUS_PARTIAL			8
+ #define BRCMF_E_STATUS_NEWSCAN			9
+ #define BRCMF_E_STATUS_NEWASSOC			10
+ #define BRCMF_E_STATUS_11HQUIET			11
+ #define BRCMF_E_STATUS_SUPPRESS			12
+ #define BRCMF_E_STATUS_NOCHANS			13
+ #define BRCMF_E_STATUS_CS_ABORT			15
+ #define BRCMF_E_STATUS_ERROR			16
+ 
+ /* reason field values in struct brcmf_event_msg */
+ #define BRCMF_E_REASON_INITIAL_ASSOC		0
+ #define BRCMF_E_REASON_LOW_RSSI			1
+ #define BRCMF_E_REASON_DEAUTH			2
+ #define BRCMF_E_REASON_DISASSOC			3
+ #define BRCMF_E_REASON_BCNS_LOST		4
+ #define BRCMF_E_REASON_MINTXRATE		9
+ #define BRCMF_E_REASON_TXFAIL			10
+ 
+ #define BRCMF_E_REASON_LINK_BSSCFG_DIS		4
+ #define BRCMF_E_REASON_FAST_ROAM_FAILED		5
+ #define BRCMF_E_REASON_DIRECTED_ROAM		6
+ #define BRCMF_E_REASON_TSPEC_REJECTED		7
+ #define BRCMF_E_REASON_BETTER_AP		8
+ 
+ #define BRCMF_E_REASON_TDLS_PEER_DISCOVERED	0
+ #define BRCMF_E_REASON_TDLS_PEER_CONNECTED	1
+ #define BRCMF_E_REASON_TDLS_PEER_DISCONNECTED	2
+ 
+ /* action field values for brcmf_ifevent */
+ #define BRCMF_E_IF_ADD				1
+ #define BRCMF_E_IF_DEL				2
+ #define BRCMF_E_IF_CHANGE			3
+ 
+ /* flag field values for brcmf_ifevent */
+ #define BRCMF_E_IF_FLAG_NOIF			1
+ 
+ /* role field values for brcmf_ifevent */
+ #define BRCMF_E_IF_ROLE_STA			0
+ #define BRCMF_E_IF_ROLE_AP			1
+ #define BRCMF_E_IF_ROLE_WDS			2
+ #define BRCMF_E_IF_ROLE_P2P_GO			3
+ #define BRCMF_E_IF_ROLE_P2P_CLIENT		4
+ 
++>>>>>>> 87c479033081 (brcmfmac: handle IF event for P2P_DEVICE interface)
  /**
   * definitions for event packet validation.
   */
* Unmerged path drivers/net/wireless/brcm80211/brcmfmac/fweh.c
* Unmerged path drivers/net/wireless/brcm80211/brcmfmac/fweh.h
