ixgbevf: fix skb->pkt_type checks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Florian Fainelli <f.fainelli@gmail.com>
commit bd9d55929df54b67708460d7eda84a7d7924009d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/bd9d5592.failed

skb->pkt_type is not a bitmask, but contains only value at a time from
the range defined in include/uapi/linux/if_packet.h.

Checking it like if it was a bitmask of values would also cause
PACKET_OTHERHOST, PACKET_LOOPBACK and PACKET_FASTROUTE to be matched by
this check since their lower 2 bits are also set, although that does not
fix a real bug, it is still potentially confusing.

This bogus check was introduced in commit 815cccbf ("ixgbe: add setlink,
getlink support to ixgbe and ixgbevf").

	Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
	Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit bd9d55929df54b67708460d7eda84a7d7924009d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
diff --cc drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index fc33173807a0,6ac5da219150..000000000000
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@@ -523,9 -516,10 +523,16 @@@ static int ixgbevf_clean_rx_irq(struct 
  		/* Workaround hardware that can't do proper VEPA multicast
  		 * source pruning.
  		 */
++<<<<<<< HEAD
 +		if ((skb->pkt_type & (PACKET_BROADCAST | PACKET_MULTICAST)) &&
 +		    !(compare_ether_addr(adapter->netdev->dev_addr,
 +					eth_hdr(skb)->h_source))) {
++=======
+ 		if ((skb->pkt_type == PACKET_BROADCAST ||
+ 		    skb->pkt_type == PACKET_MULTICAST) &&
+ 		    ether_addr_equal(rx_ring->netdev->dev_addr,
+ 				     eth_hdr(skb)->h_source)) {
++>>>>>>> bd9d55929df5 (ixgbevf: fix skb->pkt_type checks)
  			dev_kfree_skb_irq(skb);
  			goto next_desc;
  		}
* Unmerged path drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
