powerpc: Fill in si_addr_lsb siginfo field

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] Fill in si_addr_lsb siginfo field (Gustavo Duarte) [1173267]
Rebuild_FUZZ: 88.00%
commit-author Anton Blanchard <anton@samba.org>
commit 9d57472f61acd7c3a33ebf5a79361e316d8ffbef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9d57472f.failed

Fill in the si_addr_lsb siginfo field so the hwpoison code can
pass to userspace the length of memory that has been corrupted.

	Signed-off-by: Anton Blanchard <anton@samba.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 9d57472f61acd7c3a33ebf5a79361e316d8ffbef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/mm/fault.c
diff --cc arch/powerpc/mm/fault.c
index 2dd69bf4af46,24b3f4949df4..000000000000
--- a/arch/powerpc/mm/fault.c
+++ b/arch/powerpc/mm/fault.c
@@@ -114,22 -115,37 +115,35 @@@ static int store_updates_sp(struct pt_r
  #define MM_FAULT_CONTINUE	-1
  #define MM_FAULT_ERR(sig)	(sig)
  
 -static int do_sigbus(struct pt_regs *regs, unsigned long address,
 -		     unsigned int fault)
 +static int do_sigbus(struct pt_regs *regs, unsigned long address)
  {
  	siginfo_t info;
+ 	unsigned int lsb = 0;
  
  	up_read(&current->mm->mmap_sem);
  
 -	if (!user_mode(regs))
 -		return MM_FAULT_ERR(SIGBUS);
 -
 -	current->thread.trap_nr = BUS_ADRERR;
 -	info.si_signo = SIGBUS;
 -	info.si_errno = 0;
 -	info.si_code = BUS_ADRERR;
 -	info.si_addr = (void __user *)address;
 -#ifdef CONFIG_MEMORY_FAILURE
 -	if (fault & (VM_FAULT_HWPOISON|VM_FAULT_HWPOISON_LARGE)) {
 -		pr_err("MCE: Killing %s:%d due to hardware memory corruption fault at %lx\n",
 -			current->comm, current->pid, address);
 -		info.si_code = BUS_MCEERR_AR;
 +	if (user_mode(regs)) {
 +		current->thread.trap_nr = BUS_ADRERR;
 +		info.si_signo = SIGBUS;
 +		info.si_errno = 0;
 +		info.si_code = BUS_ADRERR;
 +		info.si_addr = (void __user *)address;
 +		force_sig_info(SIGBUS, &info, current);
 +		return MM_FAULT_RETURN;
  	}
++<<<<<<< HEAD
 +	return MM_FAULT_ERR(SIGBUS);
++=======
+ 
+ 	if (fault & VM_FAULT_HWPOISON_LARGE)
+ 		lsb = hstate_index_to_shift(VM_FAULT_GET_HINDEX(fault));
+ 	if (fault & VM_FAULT_HWPOISON)
+ 		lsb = PAGE_SHIFT;
+ #endif
+ 	info.si_addr_lsb = lsb;
+ 	force_sig_info(SIGBUS, &info, current);
+ 	return MM_FAULT_RETURN;
++>>>>>>> 9d57472f61ac (powerpc: Fill in si_addr_lsb siginfo field)
  }
  
  static int mm_fault_error(struct pt_regs *regs, unsigned long addr, int fault)
* Unmerged path arch/powerpc/mm/fault.c
