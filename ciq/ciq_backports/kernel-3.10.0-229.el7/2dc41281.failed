ACPI / hotplug / PCI: Avoid doing too much for spurious notifies

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] hotplug/pci: Avoid doing too much for spurious notifies (Myron Stowe) [1114228]
Rebuild_FUZZ: 92.44%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 2dc41281b1d1178befe4b76adf817570a7f45ec1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2dc41281.failed

Sometimes we may get a spurious device check or bus check notify for
a hotplug device and in those cases we should avoid doing all of the
configuration work needed when something actually changes.  To that
end, check the return value of pci_scan_slot() in enable_slot() and
bail out early if it is 0.

This turns out to help reduce the amount of diagnostic output from
the ACPIPHP subsystem and speed up boot on at least one system that
generates multiple device check notifies for PCIe devices on the root
bus during boot.

Reported-and-tested-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 2dc41281b1d1178befe4b76adf817570a7f45ec1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/hotplug/acpiphp_glue.c
diff --cc drivers/pci/hotplug/acpiphp_glue.c
index d210006fa4ad,65290226e5dd..000000000000
--- a/drivers/pci/hotplug/acpiphp_glue.c
+++ b/drivers/pci/hotplug/acpiphp_glue.c
@@@ -676,27 -535,19 +676,32 @@@ static void check_hotplug_bridge(struc
   * This function should be called per *physical slot*,
   * not per each slot object in ACPI namespace.
   */
 -static void __ref enable_slot(struct acpiphp_slot *slot)
 +static int __ref enable_device(struct acpiphp_slot *slot)
  {
  	struct pci_dev *dev;
 -	struct pci_bus *bus = slot->bus;
 +	struct pci_bus *bus = slot->bridge->pci_bus;
  	struct acpiphp_func *func;
 -	int max, pass;
 +	int num, max, pass;
  	LIST_HEAD(add_list);
+ 	int nr_found;
  
 +	if (slot->flags & SLOT_ENABLED)
 +		goto err_exit;
 +
++<<<<<<< HEAD
  	list_for_each_entry(func, &slot->funcs, sibling)
 -		acpiphp_bus_add(func_to_handle(func));
 +		acpiphp_bus_add(func);
 +
 +	num = pci_scan_slot(bus, PCI_DEVFN(slot->device, 0));
 +	if (num == 0) {
 +		/* Maybe only part of funcs are added. */
 +		pr_debug("No new device found\n");
 +		goto err_exit;
 +	}
  
++=======
+ 	nr_found = pci_scan_slot(bus, PCI_DEVFN(slot->device, 0));
++>>>>>>> 2dc41281b1d1 (ACPI / hotplug / PCI: Avoid doing too much for spurious notifies)
  	max = acpiphp_max_busnr(bus);
  	for (pass = 0; pass < 2; pass++) {
  		list_for_each_entry(dev, &bus->devices, bus_list) {
* Unmerged path drivers/pci/hotplug/acpiphp_glue.c
