i40e: expose debug_write_register request

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Shannon Nelson <shannon.nelson@intel.com>
commit 53db45cd9ae5f39163054d55051a5a9ad0f5b821
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/53db45cd.failed

Now that the HW registers are no longer in debug mode and many are
locked down for writes, we need to expose the Firmware API request
used to do writes on the driver's behalf.

Change-ID: I09a05c4dc9ea0b24c00193faac34d7799eaa8496
	Signed-off-by: Shannon Nelson <shannon.nelson@intel.com>
	Tested-by: Jim Young <jamesx.m.young>
	Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 53db45cd9ae5f39163054d55051a5a9ad0f5b821)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_prototype.h
diff --cc drivers/net/ethernet/intel/i40e/i40e_prototype.h
index 1a6e9030a1f0,949a9a01778b..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_prototype.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_prototype.h
@@@ -70,7 -70,10 +70,14 @@@ i40e_status i40e_aq_get_firmware_versio
  				u16 *fw_major_version, u16 *fw_minor_version,
  				u16 *api_major_version, u16 *api_minor_version,
  				struct i40e_asq_cmd_details *cmd_details);
++<<<<<<< HEAD
 +i40e_status i40e_aq_set_phy_reset(struct i40e_hw *hw,
++=======
+ i40e_status i40e_aq_debug_write_register(struct i40e_hw *hw,
+ 					u32 reg_addr, u64 reg_val,
+ 					struct i40e_asq_cmd_details *cmd_details);
+ i40e_status i40e_aq_set_phy_debug(struct i40e_hw *hw, u8 cmd_flags,
++>>>>>>> 53db45cd9ae5 (i40e: expose debug_write_register request)
  				struct i40e_asq_cmd_details *cmd_details);
  i40e_status i40e_aq_set_default_vsi(struct i40e_hw *hw, u16 vsi_id,
  				struct i40e_asq_cmd_details *cmd_details);
diff --git a/drivers/net/ethernet/intel/i40e/i40e_common.c b/drivers/net/ethernet/intel/i40e/i40e_common.c
index 1866f4096b38..78be79edbd46 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_common.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_common.c
@@ -1335,6 +1335,35 @@ i40e_status i40e_aq_send_msg_to_vf(struct i40e_hw *hw, u16 vfid,
 	return status;
 }
 
+/**
+ * i40e_aq_debug_write_register
+ * @hw: pointer to the hw struct
+ * @reg_addr: register address
+ * @reg_val: register value
+ * @cmd_details: pointer to command details structure or NULL
+ *
+ * Write to a register using the admin queue commands
+ **/
+i40e_status i40e_aq_debug_write_register(struct i40e_hw *hw,
+					u32 reg_addr, u64 reg_val,
+					struct i40e_asq_cmd_details *cmd_details)
+{
+	struct i40e_aq_desc desc;
+	struct i40e_aqc_debug_reg_read_write *cmd =
+		(struct i40e_aqc_debug_reg_read_write *)&desc.params.raw;
+	i40e_status status;
+
+	i40e_fill_default_direct_cmd_desc(&desc, i40e_aqc_opc_debug_write_reg);
+
+	cmd->address = cpu_to_le32(reg_addr);
+	cmd->value_high = cpu_to_le32((u32)(reg_val >> 32));
+	cmd->value_low = cpu_to_le32((u32)(reg_val & 0xFFFFFFFF));
+
+	status = i40e_asq_send_command(hw, &desc, NULL, 0, cmd_details);
+
+	return status;
+}
+
 /**
  * i40e_aq_set_hmc_resource_profile
  * @hw: pointer to the hw struct
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_prototype.h
