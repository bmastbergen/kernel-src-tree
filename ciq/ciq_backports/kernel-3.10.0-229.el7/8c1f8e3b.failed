crypto: qat - change slice->regions to slice->region

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [crypto] qat: change slice->regions to slice->region (Nikolay Aleksandrov) [1091130]
Rebuild_FUZZ: 88.42%
commit-author Tadeusz Struk <tadeusz.struk@intel.com>
commit 8c1f8e3bbf60d0d06190be81f55d5199d52a463f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/8c1f8e3b.failed

Change ptr name slice->regions to slice->region to reflect the same
in the page struct.

	Signed-off-by: Pingchao Yang <pingchao.yang@intel.com>
	Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 8c1f8e3bbf60d0d06190be81f55d5199d52a463f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/qat_uclo.c
diff --cc drivers/crypto/qat/qat_common/qat_uclo.c
index a698d07ef97b,557fa606da89..000000000000
--- a/drivers/crypto/qat/qat_common/qat_uclo.c
+++ b/drivers/crypto/qat/qat_common/qat_uclo.c
@@@ -79,11 -79,11 +79,16 @@@ static int qat_uclo_init_ae_data(struc
  	} else {
  		ae_slice->ctx_mask_assigned = 0;
  	}
++<<<<<<< HEAD
 +	ae_slice->regions = kzalloc(sizeof(*(ae_slice->regions)), GFP_KERNEL);
 +	if (!(ae_slice->regions))
++=======
+ 	ae_slice->region = kzalloc(sizeof(*ae_slice->region), GFP_KERNEL);
+ 	if (!ae_slice->region)
++>>>>>>> 8c1f8e3bbf60 (crypto: qat - change slice->regions to slice->region)
  		return -ENOMEM;
 -	ae_slice->page = kzalloc(sizeof(*ae_slice->page), GFP_KERNEL);
 -	if (!ae_slice->page)
 +	ae_slice->page = kzalloc(sizeof(*(ae_slice->page)), GFP_KERNEL);
 +	if (!(ae_slice->page))
  		goto out_err;
  	page = ae_slice->page;
  	page->encap_page = encap_image->page;
diff --git a/drivers/crypto/qat/qat_common/icp_qat_uclo.h b/drivers/crypto/qat/qat_common/icp_qat_uclo.h
index 120fbce517a9..2132a8cbc4ec 100644
--- a/drivers/crypto/qat/qat_common/icp_qat_uclo.h
+++ b/drivers/crypto/qat/qat_common/icp_qat_uclo.h
@@ -124,7 +124,7 @@ struct icp_qat_uclo_region {
 };
 
 struct icp_qat_uclo_aeslice {
-	struct icp_qat_uclo_region *regions;
+	struct icp_qat_uclo_region *region;
 	struct icp_qat_uclo_page *page;
 	struct icp_qat_uclo_page *cur_page[ICP_QAT_UCLO_MAX_CTX];
 	struct icp_qat_uclo_encapme *encap_image;
* Unmerged path drivers/crypto/qat/qat_common/qat_uclo.c
