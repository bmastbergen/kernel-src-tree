cpufreq: propagate error returned by kobject_move()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [cpufreq] propagate error returned by kobject_move() (Prarit Bhargava) [1134369]
Rebuild_FUZZ: 90.32%
commit-author Viresh Kumar <viresh.kumar@linaro.org>
commit 41dfd908fc09e0e57f8f44fdcf543348cd5f249c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/41dfd908.failed

We are returning -EINVAL instead of the error returned from kobject_move() when
it fails. Propagate the actual error number.

Also add a meaningful print when sysfs_create_link() fails.

	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 41dfd908fc09e0e57f8f44fdcf543348cd5f249c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cpufreq.c
diff --cc drivers/cpufreq/cpufreq.c
index a029f5bcbc1e,ec25ca607679..000000000000
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@@ -1144,25 -1316,18 +1144,33 @@@ static int cpufreq_nominate_new_policy_
  	int ret;
  
  	/* first sibling now owns the new sysfs dir */
 -	cpu_dev = get_cpu_device(cpumask_any_but(policy->cpus, old_cpu));
 -
 +	cpu_dev = get_cpu_device(cpumask_first(data->cpus));
  	sysfs_remove_link(&cpu_dev->kobj, "cpufreq");
 -	ret = kobject_move(&policy->kobj, &cpu_dev->kobj);
 +	ret = kobject_move(&data->kobj, &cpu_dev->kobj);
  	if (ret) {
++<<<<<<< HEAD
 +		pr_err("%s: Failed to move kobj: %d", __func__, ret);
 +
 +		WARN_ON(lock_policy_rwsem_write(old_cpu));
 +		cpumask_set_cpu(old_cpu, data->cpus);
 +
 +		write_lock_irqsave(&cpufreq_driver_lock, flags);
 +		per_cpu(cpufreq_cpu_data, old_cpu) = data;
 +		write_unlock_irqrestore(&cpufreq_driver_lock, flags);
 +
 +		unlock_policy_rwsem_write(old_cpu);
 +
 +		ret = sysfs_create_link(&cpu_dev->kobj, &data->kobj,
 +					"cpufreq");
++=======
+ 		pr_err("%s: Failed to move kobj: %d\n", __func__, ret);
++>>>>>>> 41dfd908fc09 (cpufreq: propagate error returned by kobject_move())
  
- 		return -EINVAL;
+ 		if (sysfs_create_link(&cpu_dev->kobj, &policy->kobj, "cpufreq"))
+ 			pr_err("%s: Failed to restore kobj link to cpu:%d\n",
+ 			       __func__, cpu_dev->id);
+ 
+ 		return ret;
  	}
  
  	return cpu_dev->id;
* Unmerged path drivers/cpufreq/cpufreq.c
