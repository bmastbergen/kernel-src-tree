drm/i915: only hook up hpd pulse for DP outputs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] i915: only hook up hpd pulse for DP outputs (Dave Airlie) [1140440]
Rebuild_FUZZ: 95.56%
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit f68d697eaf3278200a7fc3c8b1d95d72837b84d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f68d697e.failed

On HSW+, the digital encoders are shared between HDMI and DP outputs,
with one encoder masquerading as both. The VBT should tell us if we need
to have DP or HDMI support on a particular port, but if we don't have DP
support and we enable the DP hpd pulse handler then we cause an oops.

Don't hook up the DP hpd handling if we don't have a DP port.

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=81856
	Reported-by: Intel QA Team.
	Signed-off-by: Dave Airlie <airlied@redhat.com> # v1
[ickle: Fix the error handling after a malloc failure]
	Reviewed-by: Dave Airlie <airlied@redhat.com>
	Cc: Paulo Zanoni <przanoni@gmail.com>
	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Signed-off-by: Dave Airlie <airlied@redhat.com>
(cherry picked from commit f68d697eaf3278200a7fc3c8b1d95d72837b84d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ddi.c
diff --cc drivers/gpu/drm/i915/intel_ddi.c
index a069b5e2a2d2,2d73430a0d27..000000000000
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@@ -1340,10 -1515,19 +1340,26 @@@ void intel_ddi_init(struct drm_device *
  	struct intel_digital_port *intel_dig_port;
  	struct intel_encoder *intel_encoder;
  	struct drm_encoder *encoder;
++<<<<<<< HEAD
 +	struct intel_connector *hdmi_connector = NULL;
 +	struct intel_connector *dp_connector = NULL;
 +
 +	intel_dig_port = kzalloc(sizeof(struct intel_digital_port), GFP_KERNEL);
++=======
+ 	bool init_hdmi, init_dp;
+ 
+ 	init_hdmi = (dev_priv->vbt.ddi_port_info[port].supports_dvi ||
+ 		     dev_priv->vbt.ddi_port_info[port].supports_hdmi);
+ 	init_dp = dev_priv->vbt.ddi_port_info[port].supports_dp;
+ 	if (!init_dp && !init_hdmi) {
+ 		DRM_DEBUG_KMS("VBT says port %c is not DVI/HDMI/DP compatible, assuming it is\n",
+ 			      port_name(port));
+ 		init_hdmi = true;
+ 		init_dp = true;
+ 	}
+ 
+ 	intel_dig_port = kzalloc(sizeof(*intel_dig_port), GFP_KERNEL);
++>>>>>>> f68d697eaf32 (drm/i915: only hook up hpd pulse for DP outputs)
  	if (!intel_dig_port)
  		return;
  
@@@ -1372,28 -1549,30 +1388,54 @@@
  	intel_dig_port->saved_port_bits = I915_READ(DDI_BUF_CTL(port)) &
  					  (DDI_BUF_PORT_REVERSAL |
  					   DDI_A_4_LANES);
 +	intel_dig_port->dp.output_reg = DDI_BUF_CTL(port);
  
  	intel_encoder->type = INTEL_OUTPUT_UNKNOWN;
++<<<<<<< HEAD
 +	intel_encoder->crtc_mask =  (1 << 0) | (1 << 1) | (1 << 2);
 +	intel_encoder->cloneable = false;
 +	intel_encoder->hot_plug = intel_ddi_hot_plug;
 +
 +	if (!intel_dp_init_connector(intel_dig_port, dp_connector)) {
 +		drm_encoder_cleanup(encoder);
 +		kfree(intel_dig_port);
 +		kfree(dp_connector);
 +		return;
 +	}
 +
 +	if (intel_encoder->type != INTEL_OUTPUT_EDP) {
 +		hdmi_connector = kzalloc(sizeof(struct intel_connector),
 +					 GFP_KERNEL);
 +		if (!hdmi_connector) {
 +			return;
 +		}
 +
 +		intel_dig_port->hdmi.hdmi_reg = DDI_BUF_CTL(port);
 +		intel_hdmi_init_connector(intel_dig_port, hdmi_connector);
++=======
+ 	intel_encoder->crtc_mask = (1 << 0) | (1 << 1) | (1 << 2);
+ 	intel_encoder->cloneable = 0;
+ 	intel_encoder->hot_plug = intel_ddi_hot_plug;
+ 
+ 	if (init_dp) {
+ 		if (!intel_ddi_init_dp_connector(intel_dig_port))
+ 			goto err;
+ 
+ 		intel_dig_port->hpd_pulse = intel_dp_hpd_pulse;
+ 		dev_priv->hpd_irq_port[port] = intel_dig_port;
  	}
+ 
+ 	/* In theory we don't need the encoder->type check, but leave it just in
+ 	 * case we have some really bad VBTs... */
+ 	if (intel_encoder->type != INTEL_OUTPUT_EDP && init_hdmi) {
+ 		if (!intel_ddi_init_hdmi_connector(intel_dig_port))
+ 			goto err;
++>>>>>>> f68d697eaf32 (drm/i915: only hook up hpd pulse for DP outputs)
+ 	}
+ 
+ 	return;
+ 
+ err:
+ 	drm_encoder_cleanup(encoder);
+ 	kfree(intel_dig_port);
  }
* Unmerged path drivers/gpu/drm/i915/intel_ddi.c
