perf report: Remove some needless container_of usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/report: Remove some needless container_of usage (Jiri Olsa) [1134356]
Rebuild_FUZZ: 98.08%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 106395dfda0397a6a88cc309bb7beb1fdf2ed798
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/106395df.failed

Since all it wants is to get the 'struct record' from the received
'struct perf_tool', and this is already done at the callers of these
functions, short circuit it.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-xz8p659sjpad396vye5t24gx@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 106395dfda0397a6a88cc309bb7beb1fdf2ed798)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-report.c
diff --cc tools/perf/builtin-report.c
index e3b253d3e27e,d882b6f96411..000000000000
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@@ -74,31 -75,10 +74,35 @@@ static int report__config(const char *v
  	return perf_default_config(var, value, cb);
  }
  
++<<<<<<< HEAD
 +static int report__resolve_callchain(struct report *rep, struct symbol **parent,
 +				     struct perf_evsel *evsel, struct addr_location *al,
 +				     struct perf_sample *sample, struct machine *machine)
 +{
 +	if ((sort__has_parent || symbol_conf.use_callchain) && sample->callchain) {
 +		return machine__resolve_callchain(machine, evsel, al->thread, sample,
 +						  parent, al, rep->max_stack);
 +	}
 +	return 0;
 +}
 +
 +static int hist_entry__append_callchain(struct hist_entry *he, struct perf_sample *sample)
 +{
 +	if (!symbol_conf.use_callchain)
 +		return 0;
 +	return callchain_append(he->callchain, &callchain_cursor, sample->period);
 +}
 +
 +static int report__add_mem_hist_entry(struct perf_tool *tool, struct addr_location *al,
 +				      struct perf_sample *sample, struct perf_evsel *evsel,
 +				      struct machine *machine, union perf_event *event)
++=======
+ static int report__add_mem_hist_entry(struct report *rep, struct addr_location *al,
+ 				      struct perf_sample *sample, struct perf_evsel *evsel)
++>>>>>>> 106395dfda03 (perf report: Remove some needless container_of usage)
  {
- 	struct report *rep = container_of(tool, struct report, tool);
  	struct symbol *parent = NULL;
 +	u8 cpumode = event->header.misc & PERF_RECORD_MISC_CPUMODE_MASK;
  	struct hist_entry *he;
  	struct mem_info *mi, *mx;
  	uint64_t cost;
@@@ -146,11 -126,9 +150,15 @@@ out
  	return err;
  }
  
++<<<<<<< HEAD
 +static int report__add_branch_hist_entry(struct perf_tool *tool, struct addr_location *al,
 +					 struct perf_sample *sample, struct perf_evsel *evsel,
 +					 struct machine *machine)
++=======
+ static int report__add_branch_hist_entry(struct report *rep, struct addr_location *al,
+ 					 struct perf_sample *sample, struct perf_evsel *evsel)
++>>>>>>> 106395dfda03 (perf report: Remove some needless container_of usage)
  {
- 	struct report *rep = container_of(tool, struct report, tool);
  	struct symbol *parent = NULL;
  	unsigned i;
  	struct hist_entry *he;
@@@ -202,14 -179,12 +210,18 @@@ out
  	return err;
  }
  
++<<<<<<< HEAD
 +static int report__add_hist_entry(struct perf_tool *tool, struct perf_evsel *evsel,
 +				  struct addr_location *al, struct perf_sample *sample,
 +				  struct machine *machine)
++=======
+ static int report__add_hist_entry(struct report *rep, struct perf_evsel *evsel,
+ 				  struct addr_location *al, struct perf_sample *sample)
++>>>>>>> 106395dfda03 (perf report: Remove some needless container_of usage)
  {
- 	struct report *rep = container_of(tool, struct report, tool);
  	struct symbol *parent = NULL;
  	struct hist_entry *he;
 -	int err = sample__resolve_callchain(sample, &parent, evsel, al, rep->max_stack);
 +	int err = report__resolve_callchain(rep, &parent, evsel, al, sample, machine);
  
  	if (err)
  		return err;
@@@ -255,18 -230,18 +267,30 @@@ static int process_sample_event(struct 
  		return 0;
  
  	if (sort__mode == SORT_MODE__BRANCH) {
++<<<<<<< HEAD
 +		ret = report__add_branch_hist_entry(tool, &al, sample, evsel, machine);
 +		if (ret < 0)
 +			pr_debug("problem adding lbr entry, skipping event\n");
 +	} else if (rep->mem_mode == 1) {
 +		ret = report__add_mem_hist_entry(tool, &al, sample, evsel, machine, event);
++=======
+ 		ret = report__add_branch_hist_entry(rep, &al, sample, evsel);
+ 		if (ret < 0)
+ 			pr_debug("problem adding lbr entry, skipping event\n");
+ 	} else if (rep->mem_mode == 1) {
+ 		ret = report__add_mem_hist_entry(rep, &al, sample, evsel);
++>>>>>>> 106395dfda03 (perf report: Remove some needless container_of usage)
  		if (ret < 0)
  			pr_debug("problem adding mem entry, skipping event\n");
  	} else {
  		if (al.map != NULL)
  			al.map->dso->hit = 1;
  
++<<<<<<< HEAD
 +		ret = report__add_hist_entry(tool, evsel, &al, sample, machine);
++=======
+ 		ret = report__add_hist_entry(rep, evsel, &al, sample);
++>>>>>>> 106395dfda03 (perf report: Remove some needless container_of usage)
  		if (ret < 0)
  			pr_debug("problem incrementing symbol period, skipping event\n");
  	}
* Unmerged path tools/perf/builtin-report.c
