nfs: fix comment and add warn_on for PG_INODE_REF

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Weston Andros Adamson <dros@primarydata.com>
commit b412ddf0661e11485876a202c48868143e3a01cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/b412ddf0.failed

Fix the comment in nfs_page.h for PG_INODE_REF to reflect that it's no longer
set only on head requests. Also add a WARN_ON_ONCE in nfs_inode_remove_request
as PG_INODE_REF should always be set.

	Suggested-by: Peng Tao <tao.peng@primarydata.com>
	Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit b412ddf0661e11485876a202c48868143e3a01cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/write.c
#	include/linux/nfs_page.h
diff --cc fs/nfs/write.c
index a89cdd72f163,e6bc5b51f325..000000000000
--- a/fs/nfs/write.c
+++ b/fs/nfs/write.c
@@@ -526,16 -690,25 +526,24 @@@ static void nfs_inode_remove_request(st
  {
  	struct inode *inode = req->wb_context->dentry->d_inode;
  	struct nfs_inode *nfsi = NFS_I(inode);
 -	struct nfs_page *head;
 -
 -	if (nfs_page_group_sync_on_bit(req, PG_REMOVE)) {
 -		head = req->wb_head;
  
 -		spin_lock(&inode->i_lock);
 -		if (likely(!PageSwapCache(head->wb_page))) {
 -			set_page_private(head->wb_page, 0);
 -			ClearPagePrivate(head->wb_page);
 -			clear_bit(PG_MAPPED, &head->wb_flags);
 -		}
 -		nfsi->npages--;
 -		spin_unlock(&inode->i_lock);
 +	spin_lock(&inode->i_lock);
 +	if (likely(!PageSwapCache(req->wb_page))) {
 +		set_page_private(req->wb_page, 0);
 +		ClearPagePrivate(req->wb_page);
 +		clear_bit(PG_MAPPED, &req->wb_flags);
  	}
++<<<<<<< HEAD
 +	nfsi->npages--;
 +	spin_unlock(&inode->i_lock);
 +	nfs_release_request(req);
++=======
+ 
+ 	if (test_and_clear_bit(PG_INODE_REF, &req->wb_flags))
+ 		nfs_release_request(req);
+ 	else
+ 		WARN_ON_ONCE(1);
++>>>>>>> b412ddf0661e (nfs: fix comment and add warn_on for PG_INODE_REF)
  }
  
  static void
diff --cc include/linux/nfs_page.h
index 214e09851870,6ad2bbcad405..000000000000
--- a/include/linux/nfs_page.h
+++ b/include/linux/nfs_page.h
@@@ -26,6 -26,13 +26,16 @@@ enum 
  	PG_MAPPED,		/* page private set for buffered io */
  	PG_CLEAN,		/* write succeeded */
  	PG_COMMIT_TO_DS,	/* used by pnfs layouts */
++<<<<<<< HEAD
++=======
+ 	PG_INODE_REF,		/* extra ref held by inode when in writeback */
+ 	PG_HEADLOCK,		/* page group lock of wb_head */
+ 	PG_TEARDOWN,		/* page group sync for destroy */
+ 	PG_UNLOCKPAGE,		/* page group sync bit in read path */
+ 	PG_UPTODATE,		/* page group sync bit in read path */
+ 	PG_WB_END,		/* page group sync bit in write path */
+ 	PG_REMOVE,		/* page group sync bit in write path */
++>>>>>>> b412ddf0661e (nfs: fix comment and add warn_on for PG_INODE_REF)
  };
  
  struct nfs_inode;
* Unmerged path fs/nfs/write.c
* Unmerged path include/linux/nfs_page.h
