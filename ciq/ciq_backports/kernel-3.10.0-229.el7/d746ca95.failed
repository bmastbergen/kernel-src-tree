ibmveth: Fix endian issues with MAC addresses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Anton Blanchard <anton@samba.org>
commit d746ca9561440685edb62614d1bcbbc27ff50e66
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/d746ca95.failed

The code to load a MAC address into a u64 for passing to the
hypervisor via a register is broken on little endian.

Create a helper function called ibmveth_encode_mac_addr
which does the right thing in both big and little endian.

We were storing the MAC address in a long in struct ibmveth_adapter.
It's never used so remove it - we don't need another place in the
driver where we create endian issues with MAC addresses.

	Signed-off-by: Anton Blanchard <anton@samba.org>
	Cc: stable@vger.kernel.org
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d746ca9561440685edb62614d1bcbbc27ff50e66)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/ibm/ibmveth.c
diff --cc drivers/net/ethernet/ibm/ibmveth.c
index e7dfb812456d,1fc8334fc181..000000000000
--- a/drivers/net/ethernet/ibm/ibmveth.c
+++ b/drivers/net/ethernet/ibm/ibmveth.c
@@@ -1184,8 -1193,8 +1194,13 @@@ static void ibmveth_set_multicast_list(
  		/* add the addresses to the filter table */
  		netdev_for_each_mc_addr(ha, netdev) {
  			/* add the multicast address to the filter table */
++<<<<<<< HEAD
 +			unsigned long mcast_addr = 0;
 +			memcpy(((char *)&mcast_addr)+2, ha->addr, 6);
++=======
+ 			u64 mcast_addr;
+ 			mcast_addr = ibmveth_encode_mac_addr(ha->addr);
++>>>>>>> d746ca956144 (ibmveth: Fix endian issues with MAC addresses)
  			lpar_rc = h_multicast_ctrl(adapter->vdev->unit_address,
  						   IbmVethMcastAddFilter,
  						   mcast_addr);
@@@ -1373,9 -1382,6 +1388,12 @@@ static int ibmveth_probe(struct vio_de
  
  	netif_napi_add(netdev, &adapter->napi, ibmveth_poll, 16);
  
++<<<<<<< HEAD
 +	adapter->mac_addr = 0;
 +	memcpy(&adapter->mac_addr, mac_addr_p, 6);
 +
++=======
++>>>>>>> d746ca956144 (ibmveth: Fix endian issues with MAC addresses)
  	netdev->irq = dev->irq;
  	netdev->netdev_ops = &ibmveth_netdev_ops;
  	netdev->ethtool_ops = &netdev_ethtool_ops;
* Unmerged path drivers/net/ethernet/ibm/ibmveth.c
diff --git a/drivers/net/ethernet/ibm/ibmveth.h b/drivers/net/ethernet/ibm/ibmveth.h
index 84066bafe057..2c636cbf1341 100644
--- a/drivers/net/ethernet/ibm/ibmveth.h
+++ b/drivers/net/ethernet/ibm/ibmveth.h
@@ -139,7 +139,6 @@ struct ibmveth_adapter {
     struct napi_struct napi;
     struct net_device_stats stats;
     unsigned int mcastFilterSize;
-    unsigned long mac_addr;
     void * buffer_list_addr;
     void * filter_list_addr;
     dma_addr_t buffer_list_dma;
