perf tools: Add variable display for VF make output

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf: Add variable display for VF make output (Jiri Olsa) [1134356]
Rebuild_FUZZ: 93.75%
commit-author Jiri Olsa <jolsa@redhat.com>
commit 8d79076a3c5dbe45109fd15d2489168fbbb28a3d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/8d79076a.failed

Adding dump of interesting build directories to the make VF=1 output.

  $ make VF=1
    BUILD:   Doing 'make -j4' parallel build

  Auto-detecting system features:
  ...                         dwarf: [ on  ]
  ...                         glibc: [ on  ]
  ...                          gtk2: [ on  ]
  ...                      libaudit: [ on  ]
  ...                        libbfd: [ on  ]
  ...                        libelf: [ on  ]
  ...                       libnuma: [ on  ]
  ...                       libperl: [ on  ]
  ...                     libpython: [ on  ]
  ...                      libslang: [ on  ]
  ...                     libunwind: [ on  ]
  ...                     backtrace: [ on  ]
  ...                fortify-source: [ on  ]
  ...                  gtk2-infobar: [ on  ]
  ...             libelf-getphdrnum: [ on  ]
  ...                   libelf-mmap: [ on  ]
  ...             libpython-version: [ on  ]
  ...                       on-exit: [ on  ]
  ...            stackprotector-all: [ on  ]
  ...                       timerfd: [ on  ]
  ...         libunwind-debug-frame: [ OFF ]
  ...                        bionic: [ OFF ]

  ...                        prefix: /home/jolsa
  ...                        bindir: /home/jolsa/bin
  ...                        libdir: /home/jolsa/lib64
  ...                    sysconfdir: /home/jolsa/etc

Adding functions to print variable/text in features display -
feature_print_var/feature_print_text (feature_print_text is used in next
patches).

	Signed-off-by: Jiri Olsa <jolsa@redhat.com>
	Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Jean Pihet <jean.pihet@linaro.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1392825179-5228-3-git-send-email-jolsa@redhat.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 8d79076a3c5dbe45109fd15d2489168fbbb28a3d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
diff --cc tools/perf/config/Makefile
index 374f88fe17c5,97a64c4631d3..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -539,3 -579,82 +539,85 @@@ els
  perfexec_instdir = $(prefix)/$(perfexecdir)
  endif
  perfexec_instdir_SQ = $(subst ','\'',$(perfexec_instdir))
++<<<<<<< HEAD
++=======
+ 
+ # If we install to $(HOME) we keep the traceevent default:
+ # $(HOME)/.traceevent/plugins
+ # Otherwise we install plugins into the global $(libdir).
+ ifdef DESTDIR
+ plugindir=$(libdir)/traceevent/plugins
+ plugindir_SQ= $(subst ','\'',$(plugindir))
+ endif
+ 
+ #
+ # Print the result of the feature test:
+ #
+ feature_print_status = $(eval $(feature_print_status_code)) $(info $(MSG))
+ 
+ define feature_print_status_code
+   ifeq ($(feature-$(1)), 1)
+     MSG = $(shell printf '...%30s: [ \033[32mon\033[m  ]' $(1))
+   else
+     MSG = $(shell printf '...%30s: [ \033[31mOFF\033[m ]' $(1))
+   endif
+ endef
+ 
+ feature_print_var = $(eval $(feature_print_var_code)) $(info $(MSG))
+ define feature_print_var_code
+     MSG = $(shell printf '...%30s: %s' $(1) $($(1)))
+ endef
+ 
+ feature_print_text = $(eval $(feature_print_text_code)) $(info $(MSG))
+ define feature_print_text_code
+     MSG = $(shell printf '...%30s: %s' $(1) $(2))
+ endef
+ 
+ PERF_FEATURES := $(foreach feat,$(LIB_FEATURE_TESTS),feature-$(feat)($(feature-$(feat))))
+ PERF_FEATURES_FILE := $(shell touch $(OUTPUT)PERF-FEATURES; cat $(OUTPUT)PERF-FEATURES)
+ 
+ # The $(display_lib) controls the default detection message
+ # output. It's set if:
+ # - detected features differes from stored features from
+ #   last build (in PERF-FEATURES file)
+ # - one of the $(LIB_FEATURE_TESTS) is not detected
+ # - VF is enabled
+ 
+ ifneq ("$(PERF_FEATURES)","$(PERF_FEATURES_FILE)")
+   $(shell echo "$(PERF_FEATURES)" > $(OUTPUT)PERF-FEATURES)
+   display_lib := 1
+ endif
+ 
+ feature_check = $(eval $(feature_check_code))
+ define feature_check_code
+   ifneq ($(feature-$(1)), 1)
+     display_lib := 1
+   endif
+ endef
+ 
+ $(foreach feat,$(LIB_FEATURE_TESTS),$(call feature_check,$(feat)))
+ 
+ ifeq ($(VF),1)
+   display_lib := 1
+   display_vf := 1
+ endif
+ 
+ ifeq ($(display_lib),1)
+   $(info )
+   $(info Auto-detecting system features:)
+   $(foreach feat,$(LIB_FEATURE_TESTS),$(call feature_print_status,$(feat),))
+ endif
+ 
+ ifeq ($(display_vf),1)
+   $(foreach feat,$(VF_FEATURE_TESTS),$(call feature_print_status,$(feat),))
+   $(info )
+   $(call feature_print_var,prefix)
+   $(call feature_print_var,bindir)
+   $(call feature_print_var,libdir)
+   $(call feature_print_var,sysconfdir)
+ endif
+ 
+ ifeq ($(display_lib),1)
+   $(info )
+ endif
++>>>>>>> 8d79076a3c5d (perf tools: Add variable display for VF make output)
* Unmerged path tools/perf/config/Makefile
