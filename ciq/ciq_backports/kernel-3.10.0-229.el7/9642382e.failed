KVM: PPC: Book3S HV: Add H_SET_MODE hcall handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/ppc: book3s/hv - Add H_SET_MODE hcall handling (David Gibson) [1123145 1123133 1123367]
Rebuild_FUZZ: 92.00%
commit-author Michael Neuling <mikey@neuling.org>
commit 9642382e826066c2d30d1b23d1b45410cdd8e07d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9642382e.failed

This adds support for the H_SET_MODE hcall.  This hcall is a
multiplexer that has several functions, some of which are called
rarely, and some which are potentially called very frequently.
Here we add support for the functions that set the debug registers
CIABR (Completed Instruction Address Breakpoint Register) and
DAWR/DAWRX (Data Address Watchpoint Register and eXtension),
since they could be updated by the guest as often as every context
switch.

This also adds a kvmppc_power8_compatible() function to test to see
if a guest is compatible with POWER8 or not.  The CIABR and DAWR/X
only exist on POWER8.

	Signed-off-by: Michael Neuling <mikey@neuling.org>
	Signed-off-by: Paul Mackerras <paulus@samba.org>
	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit 9642382e826066c2d30d1b23d1b45410cdd8e07d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv.c
diff --cc arch/powerpc/kvm/book3s_hv.c
index 25619035861f,7db9df2ac211..000000000000
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@@ -632,8 -694,31 +681,36 @@@ int kvmppc_pseries_do_hcall(struct kvm_
  	return RESUME_GUEST;
  }
  
++<<<<<<< HEAD
 +static int kvmppc_handle_exit(struct kvm_run *run, struct kvm_vcpu *vcpu,
 +			      struct task_struct *tsk)
++=======
+ static int kvmppc_hcall_impl_hv(unsigned long cmd)
+ {
+ 	switch (cmd) {
+ 	case H_CEDE:
+ 	case H_PROD:
+ 	case H_CONFER:
+ 	case H_REGISTER_VPA:
+ 	case H_SET_MODE:
+ #ifdef CONFIG_KVM_XICS
+ 	case H_XIRR:
+ 	case H_CPPR:
+ 	case H_EOI:
+ 	case H_IPI:
+ 	case H_IPOLL:
+ 	case H_XIRR_X:
+ #endif
+ 		return 1;
+ 	}
+ 
+ 	/* See if it's in the real-mode table */
+ 	return kvmppc_hcall_impl_hv_realmode(cmd);
+ }
+ 
+ static int kvmppc_handle_exit_hv(struct kvm_run *run, struct kvm_vcpu *vcpu,
+ 				 struct task_struct *tsk)
++>>>>>>> 9642382e8260 (KVM: PPC: Book3S HV: Add H_SET_MODE hcall handling)
  {
  	int r = RESUME_HOST;
  
diff --git a/arch/powerpc/include/asm/hvcall.h b/arch/powerpc/include/asm/hvcall.h
index 5dbbb29f5c3e..85bc8c0d257b 100644
--- a/arch/powerpc/include/asm/hvcall.h
+++ b/arch/powerpc/include/asm/hvcall.h
@@ -279,6 +279,12 @@
 #define H_GET_24X7_DATA		0xF07C
 #define H_GET_PERF_COUNTER_INFO	0xF080
 
+/* Values for 2nd argument to H_SET_MODE */
+#define H_SET_MODE_RESOURCE_SET_CIABR		1
+#define H_SET_MODE_RESOURCE_SET_DAWR		2
+#define H_SET_MODE_RESOURCE_ADDR_TRANS_MODE	3
+#define H_SET_MODE_RESOURCE_LE			4
+
 #ifndef __ASSEMBLY__
 
 /**
* Unmerged path arch/powerpc/kvm/book3s_hv.c
