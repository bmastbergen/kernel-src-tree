iommu/vt-d: Suppress compiler warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [iommu] vt-d: Suppress compiler warnings (Myron Stowe) [1136537]
Rebuild_FUZZ: 91.43%
commit-author Yijing Wang <wangyijing@huawei.com>
commit aa4d066a2a8041b7e73cee68ce5499aca29f265e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/aa4d066a.failed

suppress compiler warnings:
drivers/iommu/intel-iommu.c: In function ‘device_to_iommu’:
drivers/iommu/intel-iommu.c:673: warning: ‘segment’ may be used uninitialized in this function
drivers/iommu/intel-iommu.c: In function ‘get_domain_for_dev.clone.3’:
drivers/iommu/intel-iommu.c:2217: warning: ‘bridge_bus’ may be used uninitialized in this function
drivers/iommu/intel-iommu.c:2217: warning: ‘bridge_devfn’ may be used uninitialized in this function

	Signed-off-by: Yijing Wang <wangyijing@huawei.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit aa4d066a2a8041b7e73cee68ce5499aca29f265e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 45626ce6c39f,c03d4b44bb92..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -686,34 -665,56 +686,41 @@@ static void domain_update_iommu_cap(str
  	domain_update_iommu_superpage(domain);
  }
  
 -static struct intel_iommu *device_to_iommu(struct device *dev, u8 *bus, u8 *devfn)
 +static struct intel_iommu *device_to_iommu(int segment, u8 bus, u8 devfn)
  {
  	struct dmar_drhd_unit *drhd = NULL;
++<<<<<<< HEAD
++=======
+ 	struct intel_iommu *iommu;
+ 	struct device *tmp;
+ 	struct pci_dev *ptmp, *pdev = NULL;
+ 	u16 segment = 0;
++>>>>>>> aa4d066a2a80 (iommu/vt-d: Suppress compiler warnings)
  	int i;
  
 -	if (dev_is_pci(dev)) {
 -		pdev = to_pci_dev(dev);
 -		segment = pci_domain_nr(pdev->bus);
 -	} else if (ACPI_COMPANION(dev))
 -		dev = &ACPI_COMPANION(dev)->dev;
 -
 -	rcu_read_lock();
 -	for_each_active_iommu(iommu, drhd) {
 -		if (pdev && segment != drhd->segment)
 +	for_each_drhd_unit(drhd) {
 +		if (drhd->ignored)
 +			continue;
 +		if (segment != drhd->segment)
  			continue;
  
 -		for_each_active_dev_scope(drhd->devices,
 -					  drhd->devices_cnt, i, tmp) {
 -			if (tmp == dev) {
 -				*bus = drhd->devices[i].bus;
 -				*devfn = drhd->devices[i].devfn;
 -				goto out;
 -			}
 -
 -			if (!pdev || !dev_is_pci(tmp))
 -				continue;
 -
 -			ptmp = to_pci_dev(tmp);
 -			if (ptmp->subordinate &&
 -			    ptmp->subordinate->number <= pdev->bus->number &&
 -			    ptmp->subordinate->busn_res.end >= pdev->bus->number)
 -				goto got_pdev;
 +		for (i = 0; i < drhd->devices_cnt; i++) {
 +			if (drhd->devices[i] &&
 +			    drhd->devices[i]->bus->number == bus &&
 +			    drhd->devices[i]->devfn == devfn)
 +				return drhd->iommu;
 +			if (drhd->devices[i] &&
 +			    drhd->devices[i]->subordinate &&
 +			    drhd->devices[i]->subordinate->number <= bus &&
 +			    drhd->devices[i]->subordinate->busn_res.end >= bus)
 +				return drhd->iommu;
  		}
  
 -		if (pdev && drhd->include_all) {
 -		got_pdev:
 -			*bus = pdev->bus->number;
 -			*devfn = pdev->devfn;
 -			goto out;
 -		}
 +		if (drhd->include_all)
 +			return drhd->iommu;
  	}
 -	iommu = NULL;
 - out:
 -	rcu_read_unlock();
  
 -	return iommu;
 +	return NULL;
  }
  
  static void domain_flush_cache(struct dmar_domain *domain,
@@@ -2079,17 -2206,17 +2086,22 @@@ static int dmar_insert_dev_info(int seg
  }
  
  /* domain is initialized */
 -static struct dmar_domain *get_domain_for_dev(struct device *dev, int gaw)
 +static struct dmar_domain *get_domain_for_dev(struct pci_dev *pdev, int gaw)
  {
  	struct dmar_domain *domain, *free = NULL;
 -	struct intel_iommu *iommu = NULL;
 -	struct device_domain_info *info;
 -	struct pci_dev *dev_tmp = NULL;
 +	struct intel_iommu *iommu;
 +	struct dmar_drhd_unit *drhd;
 +	struct pci_dev *dev_tmp;
  	unsigned long flags;
++<<<<<<< HEAD
 +	int bus = 0, devfn = 0;
 +	int segment;
++=======
+ 	u8 bus, devfn;
+ 	u8 bridge_bus = 0, bridge_devfn = 0;
++>>>>>>> aa4d066a2a80 (iommu/vt-d: Suppress compiler warnings)
  
 -	domain = find_domain(dev);
 +	domain = find_domain(&pdev->dev);
  	if (domain)
  		return domain;
  
* Unmerged path drivers/iommu/intel-iommu.c
