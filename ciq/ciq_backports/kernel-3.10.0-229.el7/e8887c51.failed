qla2xxx: Add ISP8044 serdes bsg interface.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Add ISP8044 serdes bsg interface (Chad Dupuis) [1089346]
Rebuild_FUZZ: 98.80%
commit-author Joe Carnuccio <joe.carnuccio@qlogic.com>
commit e8887c51f01911f3063e65c229e1f3be102031ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e8887c51.failed

	Signed-off-by: Joe Carnuccio <joe.carnuccio@qlogic.com>
	Signed-off-by: Saurav Kashyap <saurav.kashyap@qlogic.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit e8887c51f01911f3063e65c229e1f3be102031ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_bsg.c
#	drivers/scsi/qla2xxx/qla_bsg.h
#	drivers/scsi/qla2xxx/qla_dbg.c
#	drivers/scsi/qla2xxx/qla_gbl.h
#	drivers/scsi/qla2xxx/qla_mbx.c
diff --cc drivers/scsi/qla2xxx/qla_bsg.c
index 67d88d3cd83e,467c694e6f2e..000000000000
--- a/drivers/scsi/qla2xxx/qla_bsg.c
+++ b/drivers/scsi/qla2xxx/qla_bsg.c
@@@ -2030,6 -2030,86 +2030,89 @@@ done
  }
  
  static int
++<<<<<<< HEAD
++=======
+ qla26xx_serdes_op(struct fc_bsg_job *bsg_job)
+ {
+ 	struct Scsi_Host *host = bsg_job->shost;
+ 	scsi_qla_host_t *vha = shost_priv(host);
+ 	int rval = 0;
+ 	struct qla_serdes_reg sr;
+ 
+ 	memset(&sr, 0, sizeof(sr));
+ 
+ 	sg_copy_to_buffer(bsg_job->request_payload.sg_list,
+ 	    bsg_job->request_payload.sg_cnt, &sr, sizeof(sr));
+ 
+ 	switch (sr.cmd) {
+ 	case INT_SC_SERDES_WRITE_REG:
+ 		rval = qla2x00_write_serdes_word(vha, sr.addr, sr.val);
+ 		bsg_job->reply->reply_payload_rcv_len = 0;
+ 		break;
+ 	case INT_SC_SERDES_READ_REG:
+ 		rval = qla2x00_read_serdes_word(vha, sr.addr, &sr.val);
+ 		sg_copy_from_buffer(bsg_job->reply_payload.sg_list,
+ 		    bsg_job->reply_payload.sg_cnt, &sr, sizeof(sr));
+ 		bsg_job->reply->reply_payload_rcv_len = sizeof(sr);
+ 		break;
+ 	default:
+ 		ql_dbg(ql_dbg_user, vha, 0x708c,
+ 		    "Unknown serdes cmd %x.\n", sr.cmd);
+ 		rval = -EINVAL;
+ 		break;
+ 	}
+ 
+ 	bsg_job->reply->reply_data.vendor_reply.vendor_rsp[0] =
+ 	    rval ? EXT_STATUS_MAILBOX : 0;
+ 
+ 	bsg_job->reply_len = sizeof(struct fc_bsg_reply);
+ 	bsg_job->reply->result = DID_OK << 16;
+ 	bsg_job->job_done(bsg_job);
+ 	return 0;
+ }
+ 
+ static int
+ qla8044_serdes_op(struct fc_bsg_job *bsg_job)
+ {
+ 	struct Scsi_Host *host = bsg_job->shost;
+ 	scsi_qla_host_t *vha = shost_priv(host);
+ 	int rval = 0;
+ 	struct qla_serdes_reg_ex sr;
+ 
+ 	memset(&sr, 0, sizeof(sr));
+ 
+ 	sg_copy_to_buffer(bsg_job->request_payload.sg_list,
+ 	    bsg_job->request_payload.sg_cnt, &sr, sizeof(sr));
+ 
+ 	switch (sr.cmd) {
+ 	case INT_SC_SERDES_WRITE_REG:
+ 		rval = qla8044_write_serdes_word(vha, sr.addr, sr.val);
+ 		bsg_job->reply->reply_payload_rcv_len = 0;
+ 		break;
+ 	case INT_SC_SERDES_READ_REG:
+ 		rval = qla8044_read_serdes_word(vha, sr.addr, &sr.val);
+ 		sg_copy_from_buffer(bsg_job->reply_payload.sg_list,
+ 		    bsg_job->reply_payload.sg_cnt, &sr, sizeof(sr));
+ 		bsg_job->reply->reply_payload_rcv_len = sizeof(sr);
+ 		break;
+ 	default:
+ 		ql_dbg(ql_dbg_user, vha, 0x70cf,
+ 		    "Unknown serdes cmd %x.\n", sr.cmd);
+ 		rval = -EINVAL;
+ 		break;
+ 	}
+ 
+ 	bsg_job->reply->reply_data.vendor_reply.vendor_rsp[0] =
+ 	    rval ? EXT_STATUS_MAILBOX : 0;
+ 
+ 	bsg_job->reply_len = sizeof(struct fc_bsg_reply);
+ 	bsg_job->reply->result = DID_OK << 16;
+ 	bsg_job->job_done(bsg_job);
+ 	return 0;
+ }
+ 
+ static int
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
  qla2x00_process_vendor_specific(struct fc_bsg_job *bsg_job)
  {
  	switch (bsg_job->request->rqst_data.h_vendor.vendor_cmd[0]) {
@@@ -2077,6 -2157,13 +2160,16 @@@
  
  	case QL_VND_FX00_MGMT_CMD:
  		return qlafx00_mgmt_cmd(bsg_job);
++<<<<<<< HEAD
++=======
+ 
+ 	case QL_VND_SERDES_OP:
+ 		return qla26xx_serdes_op(bsg_job);
+ 
+ 	case QL_VND_SERDES_OP_EX:
+ 		return qla8044_serdes_op(bsg_job);
+ 
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
  	default:
  		return -ENOSYS;
  	}
diff --cc drivers/scsi/qla2xxx/qla_bsg.h
index 04f770332c2b,4e49d0a41faa..000000000000
--- a/drivers/scsi/qla2xxx/qla_bsg.h
+++ b/drivers/scsi/qla2xxx/qla_bsg.h
@@@ -23,6 -23,8 +23,11 @@@
  #define QL_VND_WRITE_I2C	0x10
  #define QL_VND_READ_I2C		0x11
  #define QL_VND_FX00_MGMT_CMD	0x12
++<<<<<<< HEAD
++=======
+ #define QL_VND_SERDES_OP	0x13
+ #define	QL_VND_SERDES_OP_EX	0x14
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
  
  /* BSG Vendor specific subcode returns */
  #define EXT_STATUS_OK			0
@@@ -212,4 -214,22 +217,25 @@@ struct qla_i2c_access 
  	uint8_t  buffer[0x40];
  } __packed;
  
++<<<<<<< HEAD
++=======
+ /* 26xx serdes register interface */
+ 
+ /* serdes reg commands */
+ #define INT_SC_SERDES_READ_REG		1
+ #define INT_SC_SERDES_WRITE_REG		2
+ 
+ struct qla_serdes_reg {
+ 	uint16_t cmd;
+ 	uint16_t addr;
+ 	uint16_t val;
+ } __packed;
+ 
+ struct qla_serdes_reg_ex {
+ 	uint16_t cmd;
+ 	uint32_t addr;
+ 	uint32_t val;
+ } __packed;
+ 
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
  #endif
diff --cc drivers/scsi/qla2xxx/qla_dbg.c
index 87b75bfa0c9c,ba72e1675599..000000000000
--- a/drivers/scsi/qla2xxx/qla_dbg.c
+++ b/drivers/scsi/qla2xxx/qla_dbg.c
@@@ -11,12 -11,15 +11,23 @@@
   * ----------------------------------------------------------------------
   * |             Level            |   Last Value Used  |     Holes	|
   * ----------------------------------------------------------------------
++<<<<<<< HEAD
 + * | Module Init and Probe        |       0x015a       | 0x4b,0xba,0xfa |
 + * | Mailbox commands             |       0x1181       | 0x111a-0x111b  |
++=======
+  * | Module Init and Probe        |       0x017d       | 0x004b,0x0141	|
+  * |                              |                    | 0x0144,0x0146	|
+  * |                              |                    | 0x015b-0x0160	|
+  * |                              |                    | 0x016e-0x0170	|
+  * | Mailbox commands             |       0x118d       | 0x1018-0x1019	|
+  * |                              |                    | 0x10ca         |
+  * |                              |                    | 0x1115-0x1116  |
+  * |                              |                    | 0x111a-0x111b	|
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
   * |                              |                    | 0x1155-0x1158  |
 + * |                              |                    | 0x1018-0x1019  |
 + * |                              |                    | 0x1115-0x1116  |
 + * |                              |                    | 0x10ca		|
   * | Device Discovery             |       0x2095       | 0x2020-0x2022, |
   * |                              |                    | 0x2011-0x2012, |
   * |                              |                    | 0x2016         |
diff --cc drivers/scsi/qla2xxx/qla_gbl.h
index 485428a86413,b66710ba06ab..000000000000
--- a/drivers/scsi/qla2xxx/qla_gbl.h
+++ b/drivers/scsi/qla2xxx/qla_gbl.h
@@@ -339,6 -342,16 +339,19 @@@ extern in
  qla2x00_system_error(scsi_qla_host_t *);
  
  extern int
++<<<<<<< HEAD
++=======
+ qla2x00_write_serdes_word(scsi_qla_host_t *, uint16_t, uint16_t);
+ extern int
+ qla2x00_read_serdes_word(scsi_qla_host_t *, uint16_t, uint16_t *);
+ 
+ extern int
+ qla8044_write_serdes_word(scsi_qla_host_t *, uint32_t, uint32_t);
+ extern int
+ qla8044_read_serdes_word(scsi_qla_host_t *, uint32_t, uint32_t *);
+ 
+ extern int
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
  qla2x00_set_serdes_params(scsi_qla_host_t *, uint16_t, uint16_t, uint16_t);
  
  extern int
diff --cc drivers/scsi/qla2xxx/qla_mbx.c
index eec6ecad6fd3,0f7887dd7f3f..000000000000
--- a/drivers/scsi/qla2xxx/qla_mbx.c
+++ b/drivers/scsi/qla2xxx/qla_mbx.c
@@@ -2806,6 -2810,147 +2806,150 @@@ qla2x00_system_error(scsi_qla_host_t *v
  	return rval;
  }
  
++<<<<<<< HEAD
++=======
+ int
+ qla2x00_write_serdes_word(scsi_qla_host_t *vha, uint16_t addr, uint16_t data)
+ {
+ 	int rval;
+ 	mbx_cmd_t mc;
+ 	mbx_cmd_t *mcp = &mc;
+ 
+ 	if (!IS_QLA2031(vha->hw))
+ 		return QLA_FUNCTION_FAILED;
+ 
+ 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1182,
+ 	    "Entered %s.\n", __func__);
+ 
+ 	mcp->mb[0] = MBC_WRITE_SERDES;
+ 	mcp->mb[1] = addr;
+ 	mcp->mb[2] = data & 0xff;
+ 	mcp->mb[3] = 0;
+ 	mcp->out_mb = MBX_3|MBX_2|MBX_1|MBX_0;
+ 	mcp->in_mb = MBX_0;
+ 	mcp->tov = MBX_TOV_SECONDS;
+ 	mcp->flags = 0;
+ 	rval = qla2x00_mailbox_command(vha, mcp);
+ 
+ 	if (rval != QLA_SUCCESS) {
+ 		ql_dbg(ql_dbg_mbx, vha, 0x1183,
+ 		    "Failed=%x mb[0]=%x.\n", rval, mcp->mb[0]);
+ 	} else {
+ 		ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1184,
+ 		    "Done %s.\n", __func__);
+ 	}
+ 
+ 	return rval;
+ }
+ 
+ int
+ qla2x00_read_serdes_word(scsi_qla_host_t *vha, uint16_t addr, uint16_t *data)
+ {
+ 	int rval;
+ 	mbx_cmd_t mc;
+ 	mbx_cmd_t *mcp = &mc;
+ 
+ 	if (!IS_QLA2031(vha->hw))
+ 		return QLA_FUNCTION_FAILED;
+ 
+ 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1185,
+ 	    "Entered %s.\n", __func__);
+ 
+ 	mcp->mb[0] = MBC_READ_SERDES;
+ 	mcp->mb[1] = addr;
+ 	mcp->mb[3] = 0;
+ 	mcp->out_mb = MBX_3|MBX_1|MBX_0;
+ 	mcp->in_mb = MBX_1|MBX_0;
+ 	mcp->tov = MBX_TOV_SECONDS;
+ 	mcp->flags = 0;
+ 	rval = qla2x00_mailbox_command(vha, mcp);
+ 
+ 	*data = mcp->mb[1] & 0xff;
+ 
+ 	if (rval != QLA_SUCCESS) {
+ 		ql_dbg(ql_dbg_mbx, vha, 0x1186,
+ 		    "Failed=%x mb[0]=%x.\n", rval, mcp->mb[0]);
+ 	} else {
+ 		ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1187,
+ 		    "Done %s.\n", __func__);
+ 	}
+ 
+ 	return rval;
+ }
+ 
+ int
+ qla8044_write_serdes_word(scsi_qla_host_t *vha, uint32_t addr, uint32_t data)
+ {
+ 	int rval;
+ 	mbx_cmd_t mc;
+ 	mbx_cmd_t *mcp = &mc;
+ 
+ 	if (!IS_QLA8044(vha->hw))
+ 		return QLA_FUNCTION_FAILED;
+ 
+ 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1186,
+ 	    "Entered %s.\n", __func__);
+ 
+ 	mcp->mb[0] = MBC_SET_GET_ETH_SERDES_REG;
+ 	mcp->mb[1] = HCS_WRITE_SERDES;
+ 	mcp->mb[3] = LSW(addr);
+ 	mcp->mb[4] = MSW(addr);
+ 	mcp->mb[5] = LSW(data);
+ 	mcp->mb[6] = MSW(data);
+ 	mcp->out_mb = MBX_6|MBX_5|MBX_4|MBX_3|MBX_1|MBX_0;
+ 	mcp->in_mb = MBX_0;
+ 	mcp->tov = MBX_TOV_SECONDS;
+ 	mcp->flags = 0;
+ 	rval = qla2x00_mailbox_command(vha, mcp);
+ 
+ 	if (rval != QLA_SUCCESS) {
+ 		ql_dbg(ql_dbg_mbx, vha, 0x1187,
+ 		    "Failed=%x mb[0]=%x.\n", rval, mcp->mb[0]);
+ 	} else {
+ 		ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1188,
+ 		    "Done %s.\n", __func__);
+ 	}
+ 
+ 	return rval;
+ }
+ 
+ int
+ qla8044_read_serdes_word(scsi_qla_host_t *vha, uint32_t addr, uint32_t *data)
+ {
+ 	int rval;
+ 	mbx_cmd_t mc;
+ 	mbx_cmd_t *mcp = &mc;
+ 
+ 	if (!IS_QLA8044(vha->hw))
+ 		return QLA_FUNCTION_FAILED;
+ 
+ 	ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x1189,
+ 	    "Entered %s.\n", __func__);
+ 
+ 	mcp->mb[0] = MBC_SET_GET_ETH_SERDES_REG;
+ 	mcp->mb[1] = HCS_READ_SERDES;
+ 	mcp->mb[3] = LSW(addr);
+ 	mcp->mb[4] = MSW(addr);
+ 	mcp->out_mb = MBX_4|MBX_3|MBX_1|MBX_0;
+ 	mcp->in_mb = MBX_2|MBX_1|MBX_0;
+ 	mcp->tov = MBX_TOV_SECONDS;
+ 	mcp->flags = 0;
+ 	rval = qla2x00_mailbox_command(vha, mcp);
+ 
+ 	*data = mcp->mb[2] << 16 | mcp->mb[1];
+ 
+ 	if (rval != QLA_SUCCESS) {
+ 		ql_dbg(ql_dbg_mbx, vha, 0x118a,
+ 		    "Failed=%x mb[0]=%x.\n", rval, mcp->mb[0]);
+ 	} else {
+ 		ql_dbg(ql_dbg_mbx + ql_dbg_verbose, vha, 0x118b,
+ 		    "Done %s.\n", __func__);
+ 	}
+ 
+ 	return rval;
+ }
+ 
++>>>>>>> e8887c51f019 (qla2xxx: Add ISP8044 serdes bsg interface.)
  /**
   * qla2x00_set_serdes_params() -
   * @ha: HA context
* Unmerged path drivers/scsi/qla2xxx/qla_bsg.c
* Unmerged path drivers/scsi/qla2xxx/qla_bsg.h
* Unmerged path drivers/scsi/qla2xxx/qla_dbg.c
diff --git a/drivers/scsi/qla2xxx/qla_def.h b/drivers/scsi/qla2xxx/qla_def.h
index df869f7ee008..c6defcf33748 100644
--- a/drivers/scsi/qla2xxx/qla_def.h
+++ b/drivers/scsi/qla2xxx/qla_def.h
@@ -963,6 +963,13 @@ struct mbx_cmd_32 {
  */
 #define MBC_WRITE_MPI_REGISTER		0x01    /* Write MPI Register. */
 
+/*
+ * ISP8044 mailbox commands
+ */
+#define MBC_SET_GET_ETH_SERDES_REG	0x150
+#define HCS_WRITE_SERDES		0x3
+#define HCS_READ_SERDES			0x4
+
 /* Firmware return data sizes */
 #define FCAL_MAP_SIZE	128
 
* Unmerged path drivers/scsi/qla2xxx/qla_gbl.h
* Unmerged path drivers/scsi/qla2xxx/qla_mbx.c
