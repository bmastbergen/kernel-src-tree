ACPI / bind: Move acpi_get_child() to drivers/ide/ide-acpi.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [acpi] bind: Move acpi_get_child() to drivers/ide/ide-acpi.c (Prarit Bhargava) [1141846]
Rebuild_FUZZ: 93.81%
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit bfecc2b3e34c6751343bacd317c4dfd1d695142c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/bfecc2b3.failed

Since drivers/ide/ide-acpi.c is the only remaining user of
acpi_get_child(), move that function into that file as a static
routine.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit bfecc2b3e34c6751343bacd317c4dfd1d695142c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/glue.c
#	include/acpi/acpi_bus.h
diff --cc drivers/acpi/glue.c
index 7b82e04a359a,0c789224d40d..000000000000
--- a/drivers/acpi/glue.c
+++ b/drivers/acpi/glue.c
@@@ -149,19 -149,8 +149,22 @@@ struct acpi_device *acpi_find_child_dev
  	}
  	return ret;
  }
 -EXPORT_SYMBOL_GPL(acpi_find_child_device);
  
++<<<<<<< HEAD
 +acpi_handle acpi_find_child(acpi_handle handle, u64 addr, bool is_bridge)
 +{
 +	struct acpi_device *adev;
 +
 +	if (!handle || acpi_bus_get_device(handle, &adev))
 +		return NULL;
 +
 +	adev = acpi_find_child_device(adev, addr, is_bridge);
 +	return adev ? adev->handle : NULL;
 +}
 +EXPORT_SYMBOL_GPL(acpi_find_child);
 +
++=======
++>>>>>>> bfecc2b3e34c (ACPI / bind: Move acpi_get_child() to drivers/ide/ide-acpi.c)
  static void acpi_physnode_link_name(char *buf, unsigned int node_id)
  {
  	if (node_id > 0)
diff --cc include/acpi/acpi_bus.h
index f5d6e1e4030e,7135fe3d6daa..000000000000
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@@ -440,14 -434,8 +440,17 @@@ struct acpi_pci_root 
  
  struct acpi_device *acpi_find_child_device(struct acpi_device *parent,
  					   u64 address, bool check_children);
++<<<<<<< HEAD
 +acpi_handle acpi_find_child(acpi_handle, u64, bool);
 +static inline acpi_handle acpi_get_child(acpi_handle handle, u64 addr)
 +{
 +	return acpi_find_child(handle, addr, false);
 +}
++=======
++>>>>>>> bfecc2b3e34c (ACPI / bind: Move acpi_get_child() to drivers/ide/ide-acpi.c)
  int acpi_is_root_bridge(acpi_handle);
  struct acpi_pci_root *acpi_pci_find_root(acpi_handle handle);
 +#define DEVICE_ACPI_HANDLE(dev) ((acpi_handle)ACPI_HANDLE(dev))
  
  int acpi_enable_wakeup_device_power(struct acpi_device *dev, int state);
  int acpi_disable_wakeup_device_power(struct acpi_device *dev);
* Unmerged path drivers/acpi/glue.c
diff --git a/drivers/ide/ide-acpi.c b/drivers/ide/ide-acpi.c
index 140c8ef50529..fc7517facf6a 100644
--- a/drivers/ide/ide-acpi.c
+++ b/drivers/ide/ide-acpi.c
@@ -99,6 +99,17 @@ bool ide_port_acpi(ide_hwif_t *hwif)
 	return ide_noacpi == 0 && hwif->acpidata;
 }
 
+static acpi_handle acpi_get_child(acpi_handle handle, u64 addr)
+{
+	struct acpi_device *adev;
+
+	if (!handle || acpi_bus_get_device(handle, &adev))
+		return NULL;
+
+	adev = acpi_find_child_device(adev, addr, false);
+	return adev ? adev->handle : NULL;
+}
+
 /**
  * ide_get_dev_handle - finds acpi_handle and PCI device.function
  * @dev: device to locate
* Unmerged path include/acpi/acpi_bus.h
