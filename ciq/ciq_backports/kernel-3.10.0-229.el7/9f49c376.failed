drm/i915: save/restore GMBUS freq across suspend/resume on gen4

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] i915: save/restore GMBUS freq across suspend/resume on gen4 (Rob Clark) [1173317]
Rebuild_FUZZ: 96.72%
commit-author Jesse Barnes <jbarnes@virtuousgeek.org>
commit 9f49c37635d5c2a801f7670d5fbf0b25ec461f2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9f49c376.failed

Should probably just init this in the GMbus code all the time, based on
the cdclk and HPLL like we do on newer platforms.  Ville has code for
that in a rework branch, but until then we can fix this bug fairly
easily.

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=76301
	Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
	Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Tested-by: Nikolay <mar.kolya@gmail.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
(cherry picked from commit 9f49c37635d5c2a801f7670d5fbf0b25ec461f2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_reg.h
#	drivers/gpu/drm/i915/i915_suspend.c
diff --cc drivers/gpu/drm/i915/i915_reg.h
index 269f2604b9ba,eefdc238f70b..000000000000
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@@ -72,11 -85,12 +72,17 @@@
  #define   I915_GC_RENDER_CLOCK_166_MHZ	(0 << 0)
  #define   I915_GC_RENDER_CLOCK_200_MHZ	(1 << 0)
  #define   I915_GC_RENDER_CLOCK_333_MHZ	(4 << 0)
++<<<<<<< HEAD
 +#define LBB	0xf4
++=======
+ #define GCDGMBUS 0xcc
+ #define PCI_LBPC 0xf4 /* legacy/combination backlight modes, also called LBB */
+ 
++>>>>>>> 9f49c37635d5 (drm/i915: save/restore GMBUS freq across suspend/resume on gen4)
  
  /* Graphics reset regs */
 -#define I915_GDRST 0xc0 /* PCI config register */
 +#define I965_GDRST 0xc0 /* PCI config register */
 +#define ILK_GDSR 0x2ca4 /* MCHBAR offset */
  #define  GRDOM_FULL	(0<<2)
  #define  GRDOM_RENDER	(1<<2)
  #define  GRDOM_MEDIA	(3<<2)
diff --cc drivers/gpu/drm/i915/i915_suspend.c
index 70db618989c4,26368822a33f..000000000000
--- a/drivers/gpu/drm/i915/i915_suspend.c
+++ b/drivers/gpu/drm/i915/i915_suspend.c
@@@ -364,10 -303,13 +364,16 @@@ int i915_save_state(struct drm_device *
  		}
  	}
  
++<<<<<<< HEAD
 +	intel_disable_gt_powersave(dev);
++=======
+ 	if (IS_GEN4(dev))
+ 		pci_read_config_word(dev->pdev, GCDGMBUS,
+ 				     &dev_priv->regfile.saveGCDGMBUS);
++>>>>>>> 9f49c37635d5 (drm/i915: save/restore GMBUS freq across suspend/resume on gen4)
  
  	/* Cache mode state */
 -	if (INTEL_INFO(dev)->gen < 7)
 -		dev_priv->regfile.saveCACHE_MODE_0 = I915_READ(CACHE_MODE_0);
 +	dev_priv->regfile.saveCACHE_MODE_0 = I915_READ(CACHE_MODE_0);
  
  	/* Memory Arbitration state */
  	dev_priv->regfile.saveMI_ARB_STATE = I915_READ(MI_ARB_STATE);
diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index ab0f2c0a440c..fcdd5ce71f37 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -816,6 +816,7 @@ struct i915_suspend_saved_registers {
 	u32 savePIPEB_LINK_N1;
 	u32 saveMCHBAR_RENDER_STANDBY;
 	u32 savePCH_PORT_HOTPLUG;
+	u16 saveGCDGMBUS;
 };
 
 struct intel_gen6_power_mgmt {
* Unmerged path drivers/gpu/drm/i915/i915_reg.h
* Unmerged path drivers/gpu/drm/i915/i915_suspend.c
