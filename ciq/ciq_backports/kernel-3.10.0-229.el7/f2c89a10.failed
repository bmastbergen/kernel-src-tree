crypto: drbg - Use Kconfig to ensure at least one RNG option is set

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [crypto] drbg: Use Kconfig to ensure at least one RNG option is set (Herbert Xu) [1011562]
Rebuild_FUZZ: 91.20%
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit f2c89a10de4fd123a3d15223d26994f2fe1b95d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f2c89a10.failed

This patch removes the build-time test that ensures at least one RNG
is set.  Instead we will simply not build drbg if no options are set
through Kconfig.

This also fixes a typo in the name of the Kconfig option CRYTPO_DRBG
(should be CRYPTO_DRBG).

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit f2c89a10de4fd123a3d15223d26994f2fe1b95d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	crypto/Kconfig
#	crypto/Makefile
diff --cc crypto/Kconfig
index 04ecfee7e0ea,6345c470650d..000000000000
--- a/crypto/Kconfig
+++ b/crypto/Kconfig
@@@ -23,7 -23,8 +23,12 @@@ comment "Crypto core or helper
  
  config CRYPTO_FIPS
  	bool "FIPS 200 compliance"
++<<<<<<< HEAD
 +	depends on CRYPTO_ANSI_CPRNG && !CRYPTO_MANAGER_DISABLE_TESTS
++=======
+ 	depends on (CRYPTO_ANSI_CPRNG || CRYPTO_DRBG) && !CRYPTO_MANAGER_DISABLE_TESTS
+ 	depends on MODULE_SIG
++>>>>>>> f2c89a10de4f (crypto: drbg - Use Kconfig to ensure at least one RNG option is set)
  	help
  	  This options enables the fips boot option which is
  	  required if you want to system to operate in a FIPS 200
@@@ -1393,6 -1394,40 +1398,43 @@@ config CRYPTO_ANSI_CPRN
  	  ANSI X9.31 A.2.4. Note that this option must be enabled if
  	  CRYPTO_FIPS is selected
  
++<<<<<<< HEAD
++=======
+ menuconfig CRYPTO_DRBG_MENU
+ 	tristate "NIST SP800-90A DRBG"
+ 	help
+ 	  NIST SP800-90A compliant DRBG. In the following submenu, one or
+ 	  more of the DRBG types must be selected.
+ 
+ if CRYPTO_DRBG_MENU
+ 
+ config CRYPTO_DRBG_HMAC
+ 	bool "Enable HMAC DRBG"
+ 	default y
+ 	select CRYPTO_HMAC
+ 	help
+ 	  Enable the HMAC DRBG variant as defined in NIST SP800-90A.
+ 
+ config CRYPTO_DRBG_HASH
+ 	bool "Enable Hash DRBG"
+ 	select CRYPTO_HASH
+ 	help
+ 	  Enable the Hash DRBG variant as defined in NIST SP800-90A.
+ 
+ config CRYPTO_DRBG_CTR
+ 	bool "Enable CTR DRBG"
+ 	select CRYPTO_AES
+ 	help
+ 	  Enable the CTR DRBG variant as defined in NIST SP800-90A.
+ 
+ config CRYPTO_DRBG
+ 	tristate
+ 	default CRYPTO_DRBG_MENU if (CRYPTO_DRBG_HMAC || CRYPTO_DRBG_HASH || CRYPTO_DRBG_CTR)
+ 	select CRYPTO_RNG
+ 
+ endif	# if CRYPTO_DRBG_MENU
+ 
++>>>>>>> f2c89a10de4f (crypto: drbg - Use Kconfig to ensure at least one RNG option is set)
  config CRYPTO_USER_API
  	tristate
  
diff --cc crypto/Makefile
index 53f65d3473ee,cfa57b3f5a4d..000000000000
--- a/crypto/Makefile
+++ b/crypto/Makefile
@@@ -90,6 -92,7 +90,10 @@@ obj-$(CONFIG_CRYPTO_842) += 842.
  obj-$(CONFIG_CRYPTO_RNG2) += rng.o
  obj-$(CONFIG_CRYPTO_RNG2) += krng.o
  obj-$(CONFIG_CRYPTO_ANSI_CPRNG) += ansi_cprng.o
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_CRYPTO_DRBG) += drbg.o
++>>>>>>> f2c89a10de4f (crypto: drbg - Use Kconfig to ensure at least one RNG option is set)
  obj-$(CONFIG_CRYPTO_TEST) += tcrypt.o
  obj-$(CONFIG_CRYPTO_GHASH) += ghash-generic.o
  obj-$(CONFIG_CRYPTO_USER_API) += af_alg.o
* Unmerged path crypto/Kconfig
* Unmerged path crypto/Makefile
diff --git a/crypto/drbg.c b/crypto/drbg.c
index 99fa8f89fb3e..5bb0d1a92b1c 100644
--- a/crypto/drbg.c
+++ b/crypto/drbg.c
@@ -99,12 +99,6 @@
 
 #include <crypto/drbg.h>
 
-#if !defined(CONFIG_CRYPTO_DRBG_HASH) && \
-	!defined(CONFIG_CRYPTO_DRBG_HMAC) && \
-	!defined(CONFIG_CRYPTO_DRBG_CTR)
-#warning "The DRBG code is useless without compiling at least one DRBG type"
-#endif
-
 /***************************************************************
  * Backend cipher definitions available to DRBG
  ***************************************************************/
