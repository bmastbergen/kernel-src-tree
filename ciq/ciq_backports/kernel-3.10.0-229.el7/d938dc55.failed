KVM: Add per-vm capability enablement.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm: Add per-vm capability enablement (David Gibson) [1123145 1123133 1123367]
Rebuild_FUZZ: 98.67%
commit-author Cornelia Huck <cornelia.huck@de.ibm.com>
commit d938dc55225a7212e7f31c5a8571da304cc3de16
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/d938dc55.failed

Allow KVM_ENABLE_CAP to act on a vm as well as on a vcpu. This makes more
sense when the caller wants to enable a vm-related capability.

s390 will be the first user; wire it up.

	Reviewed-by: Thomas Huth <thuth@linux.vnet.ibm.com>
	Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
	Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>
(cherry picked from commit d938dc55225a7212e7f31c5a8571da304cc3de16)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kvm/kvm-s390.c
diff --cc arch/s390/kvm/kvm-s390.c
index 4975fcbb6a2a,9f1e99f12d4f..000000000000
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@@ -157,6 -158,8 +157,11 @@@ int kvm_dev_ioctl_check_extension(long 
  	case KVM_CAP_ENABLE_CAP:
  	case KVM_CAP_S390_CSS_SUPPORT:
  	case KVM_CAP_IOEVENTFD:
++<<<<<<< HEAD
++=======
+ 	case KVM_CAP_DEVICE_CTRL:
+ 	case KVM_CAP_ENABLE_CAP_VM:
++>>>>>>> d938dc55225a (KVM: Add per-vm capability enablement.)
  		r = 1;
  		break;
  	case KVM_CAP_NR_VCPUS:
diff --git a/Documentation/virtual/kvm/api.txt b/Documentation/virtual/kvm/api.txt
index b2bc745240b2..4b960947ddb1 100644
--- a/Documentation/virtual/kvm/api.txt
+++ b/Documentation/virtual/kvm/api.txt
@@ -931,9 +931,9 @@ documentation when it pops into existence).
 
 4.37 KVM_ENABLE_CAP
 
-Capability: KVM_CAP_ENABLE_CAP
+Capability: KVM_CAP_ENABLE_CAP, KVM_CAP_ENABLE_CAP_VM
 Architectures: ppc, s390
-Type: vcpu ioctl
+Type: vcpu ioctl, vm ioctl (with KVM_CAP_ENABLE_CAP_VM)
 Parameters: struct kvm_enable_cap (in)
 Returns: 0 on success; -1 on error
 
@@ -964,6 +964,8 @@ function properly, this is the place to put them.
        __u8  pad[64];
 };
 
+The vcpu ioctl should be used for vcpu-specific capabilities, the vm ioctl
+for vm-wide capabilities.
 
 4.38 KVM_GET_MP_STATE
 
* Unmerged path arch/s390/kvm/kvm-s390.c
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index 1ba9af99e2bc..c6ea3bea7a72 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -669,6 +669,7 @@ struct kvm_ppc_smmu_info {
 #define KVM_CAP_IRQ_XICS 92
 #define KVM_CAP_HYPERV_TIME 96
 #define KVM_CAP_IOAPIC_POLARITY_IGNORED 97
+#define KVM_CAP_ENABLE_CAP_VM 98
 
 #ifdef KVM_CAP_IRQ_ROUTING
 
@@ -1001,6 +1002,10 @@ struct kvm_s390_ucas_mapping {
 /* Available with KVM_CAP_DEBUGREGS */
 #define KVM_GET_DEBUGREGS         _IOR(KVMIO,  0xa1, struct kvm_debugregs)
 #define KVM_SET_DEBUGREGS         _IOW(KVMIO,  0xa2, struct kvm_debugregs)
+/*
+ * vcpu version available with KVM_ENABLE_CAP
+ * vm version available with KVM_CAP_ENABLE_CAP_VM
+ */
 #define KVM_ENABLE_CAP            _IOW(KVMIO,  0xa3, struct kvm_enable_cap)
 /* Available with KVM_CAP_XSAVE */
 #define KVM_GET_XSAVE		  _IOR(KVMIO,  0xa4, struct kvm_xsave)
