icmp6: Call skb_checksum_validate

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Tom Herbert <therbert@google.com>
commit 39471ac8dde690bf944248e06bec32a4568cdd45
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/39471ac8.failed

Use skb_checksum_validate to verify checksum.

	Signed-off-by: Tom Herbert <therbert@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 39471ac8dde690bf944248e06bec32a4568cdd45)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/icmp.c
diff --cc net/ipv6/icmp.c
index 11a2a7436b53,8d3952796d39..000000000000
--- a/net/ipv6/icmp.c
+++ b/net/ipv6/icmp.c
@@@ -686,21 -692,11 +686,29 @@@ static int icmpv6_rcv(struct sk_buff *s
  	saddr = &ipv6_hdr(skb)->saddr;
  	daddr = &ipv6_hdr(skb)->daddr;
  
++<<<<<<< HEAD
 +	/* Perform checksum. */
 +	switch (skb->ip_summed) {
 +	case CHECKSUM_COMPLETE:
 +		if (!csum_ipv6_magic(saddr, daddr, skb->len, IPPROTO_ICMPV6,
 +				     skb->csum))
 +			break;
 +		/* fall through */
 +	case CHECKSUM_NONE:
 +		skb->csum = ~csum_unfold(csum_ipv6_magic(saddr, daddr, skb->len,
 +					     IPPROTO_ICMPV6, 0));
 +		if (__skb_checksum_complete(skb)) {
 +			LIMIT_NETDEBUG(KERN_DEBUG "ICMPv6 checksum failed [%pI6 > %pI6]\n",
 +				       saddr, daddr);
 +			goto csum_error;
 +		}
++=======
+ 	if (skb_checksum_validate(skb, IPPROTO_ICMPV6, ip6_compute_pseudo)) {
+ 		LIMIT_NETDEBUG(KERN_DEBUG
+ 			       "ICMPv6 checksum failed [%pI6c > %pI6c]\n",
+ 			       saddr, daddr);
+ 		goto csum_error;
++>>>>>>> 39471ac8dde6 (icmp6: Call skb_checksum_validate)
  	}
  
  	if (!pskb_pull(skb, sizeof(*hdr)))
* Unmerged path net/ipv6/icmp.c
