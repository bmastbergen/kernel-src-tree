ixgbevf: remove counters for Tx/Rx checksum offload

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Emil Tantilov <emil.s.tantilov@intel.com>
commit 9703192219f3687547dd4196b0df29dc66966721
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/97031922.failed

This patch removes the Tx/Rx counters for checksum offload.

The Tx counter was never updated and the Rx counter is of limited use.
This is in effort to clean up the counters and make them consistent
with the counters shown by ixgbe.

Also this patch removes some members of the adapter structure that were
never used and shuffles others to reduce number of holes.

before:
	/* size: 1568, cachelines: 25, members: 48 */
	/* sum members: 1519, holes: 10, sum holes: 43 */
	/* padding: 6 */
	/* last cacheline: 32 bytes */

after:
	/* size: 1480, cachelines: 24, members: 43 */
	/* sum members: 1479, holes: 1, sum holes: 1 */
	/* last cacheline: 8 bytes */

	Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
	Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
	Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
	Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9703192219f3687547dd4196b0df29dc66966721)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
diff --cc drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
index 3e25b305045b,006842813640..000000000000
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
@@@ -76,16 -98,14 +76,19 @@@ struct ixgbevf_ring 
  		struct ixgbevf_rx_buffer *rx_buffer_info;
  	};
  
 -	struct ixgbevf_stats stats;
 -	struct u64_stats_sync syncp;
 -	union {
 -		struct ixgbevf_tx_queue_stats tx_stats;
 -		struct ixgbevf_rx_queue_stats rx_stats;
 -	};
 -
 +	u64			total_bytes;
 +	u64			total_packets;
 +	struct u64_stats_sync	syncp;
  	u64 hw_csum_rx_error;
++<<<<<<< HEAD
 +	u64 hw_csum_rx_good;
 +#ifdef BP_EXTENDED_STATS
 +	u64 bp_yields;
 +	u64 bp_misses;
 +	u64 bp_cleaned;
 +#endif
++=======
++>>>>>>> 9703192219f3 (ixgbevf: remove counters for Tx/Rx checksum offload)
  	u8 __iomem *tail;
  
  	u16 reg_idx; /* holds the special value that gets the hardware register
diff --git a/drivers/net/ethernet/intel/ixgbevf/ethtool.c b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
index 57df176038cf..e790ebbb163f 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ethtool.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
@@ -79,9 +79,7 @@ static const struct ixgbe_stats ixgbe_gstrings_stats[] = {
 	{"tx_busy", IXGBEVF_ZSTAT(tx_busy)},
 	{"multicast", IXGBEVF_STAT(stats.vfmprc, stats.base_vfmprc,
 				   stats.saved_reset_vfmprc)},
-	{"rx_csum_offload_good", IXGBEVF_ZSTAT(hw_csum_rx_good)},
 	{"rx_csum_offload_errors", IXGBEVF_ZSTAT(hw_csum_rx_error)},
-	{"tx_csum_offload_ctxt", IXGBEVF_ZSTAT(hw_csum_tx_good)},
 #ifdef BP_EXTENDED_STATS
 	{"rx_bp_poll_yield", IXGBEVF_ZSTAT(bp_rx_yields)},
 	{"rx_bp_cleaned", IXGBEVF_ZSTAT(bp_rx_cleaned)},
* Unmerged path drivers/net/ethernet/intel/ixgbevf/ixgbevf.h
diff --git a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
index c3c1b820ee64..172d66d2617c 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c
@@ -357,7 +357,6 @@ static inline void ixgbevf_rx_checksum(struct ixgbevf_ring *ring,
 
 	/* It must be a TCP or UDP packet with a valid checksum */
 	skb->ip_summed = CHECKSUM_UNNECESSARY;
-	ring->hw_csum_rx_good++;
 }
 
 /**
@@ -2300,10 +2299,7 @@ void ixgbevf_update_stats(struct ixgbevf_adapter *adapter)
 	for (i = 0;  i  < adapter->num_rx_queues;  i++) {
 		adapter->hw_csum_rx_error +=
 			adapter->rx_ring[i]->hw_csum_rx_error;
-		adapter->hw_csum_rx_good +=
-			adapter->rx_ring[i]->hw_csum_rx_good;
 		adapter->rx_ring[i]->hw_csum_rx_error = 0;
-		adapter->rx_ring[i]->hw_csum_rx_good = 0;
 	}
 }
 
