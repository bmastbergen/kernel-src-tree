cpufreq: Introduce new relation for freq selection

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [cpufreq] Introduce new relation for freq selection (Prarit Bhargava) [1134369]
Rebuild_FUZZ: 90.11%
commit-author Stratos Karafotis <stratosk@semaphore.gr>
commit 5b0c0b16d48d20e26859907df4dd449e3b3c7f4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/5b0c0b16.failed

Introduce CPUFREQ_RELATION_C for frequency selection.
It selects the frequency with the minimum euclidean distance to target.
In case of equal distance between 2 frequencies, it will select the
greater frequency.

	Signed-off-by: Stratos Karafotis <stratosk@semaphore.gr>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 5b0c0b16d48d20e26859907df4dd449e3b3c7f4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/freq_table.c
diff --cc drivers/cpufreq/freq_table.c
index e0883d852927,df14766a8e06..000000000000
--- a/drivers/cpufreq/freq_table.c
+++ b/drivers/cpufreq/freq_table.c
@@@ -101,7 -116,8 +101,12 @@@ int cpufreq_frequency_table_target(stru
  		.driver_data = ~0,
  		.frequency = 0,
  	};
++<<<<<<< HEAD
 +	unsigned int i;
++=======
+ 	struct cpufreq_frequency_table *pos;
+ 	unsigned int freq, diff, i = 0;
++>>>>>>> 5b0c0b16d48d (cpufreq: Introduce new relation for freq selection)
  
  	pr_debug("request for target %u kHz (relation: %u) for cpu %u\n",
  					target_freq, relation, policy->cpu);
* Unmerged path drivers/cpufreq/freq_table.c
diff --git a/include/linux/cpufreq.h b/include/linux/cpufreq.h
index 3972fb457f19..62e237a1b7be 100644
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@ -220,6 +220,7 @@ void cpufreq_unregister_governor(struct cpufreq_governor *governor);
 
 #define CPUFREQ_RELATION_L 0  /* lowest frequency at or above target */
 #define CPUFREQ_RELATION_H 1  /* highest frequency below or at target */
+#define CPUFREQ_RELATION_C 2  /* closest frequency to target */
 
 struct freq_attr;
 
