perf probe: Fix build when DWARF support libraries not present

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/probe: Fix build when DWARF support libraries not present (Jiri Olsa) [1133083]
Rebuild_FUZZ: 98.39%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 1d027ee9b80c30e83769ef306ccfafe483dd1672
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1d027ee9.failed

On a freshly installed system, after libelf-dev is installed we get:

    CC       /tmp/build/perf/util/probe-event.o
  util/probe-event.c: In function ‘try_to_find_probe_trace_events’:
  util/probe-event.c:753:46: error: unused parameter ‘target’ [-Werror=unused-parameter]
       int max_tevs __maybe_unused, const char *target)
                                                ^
    CC       /tmp/build/perf/util/cgroup.o
  util/probe-event.c: At top level:
  util/probe-event.c:193:12: error: ‘get_text_start_address’ defined but not used [-Werror=unused-function]
   static int get_text_start_address(const char *exec, unsigned long *address)
            ^
  cc1: all warnings being treated as errors
  make[1]: *** [/tmp/build/perf/util/probe-event.o] Error 1
  make[1]: *** Waiting for unfinished jobs....
  make: *** [install] Error 2

Fix it by enclosing functions only used when those libraries are installed
under the suitable preprocessor define and using __maybe_unused to a function
that is only built when DWARF support is disabled.

Problem introduced in this changeset:

  commit fb7345bbf7fad9bf72ef63a19c707970b9685812
  Author: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
  Date:   Thu Dec 26 05:41:53 2013 +0000

      perf probe: Support basic dwarf-based operations on uprobe events

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lkml.kernel.org/n/tip-73kc2fopt81517hrdgdra18o@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 1d027ee9b80c30e83769ef306ccfafe483dd1672)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/probe-event.c
diff --cc tools/perf/util/probe-event.c
index f7c60643a8f7,a4ee6b4a840f..000000000000
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@@ -172,6 -172,54 +172,57 @@@ const char *kernel_get_module_path(cons
  	return (dso) ? dso->long_name : NULL;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef HAVE_DWARF_SUPPORT
+ /* Copied from unwind.c */
+ static Elf_Scn *elf_section_by_name(Elf *elf, GElf_Ehdr *ep,
+ 				    GElf_Shdr *shp, const char *name)
+ {
+ 	Elf_Scn *sec = NULL;
+ 
+ 	while ((sec = elf_nextscn(elf, sec)) != NULL) {
+ 		char *str;
+ 
+ 		gelf_getshdr(sec, shp);
+ 		str = elf_strptr(elf, ep->e_shstrndx, shp->sh_name);
+ 		if (!strcmp(name, str))
+ 			break;
+ 	}
+ 
+ 	return sec;
+ }
+ 
+ static int get_text_start_address(const char *exec, unsigned long *address)
+ {
+ 	Elf *elf;
+ 	GElf_Ehdr ehdr;
+ 	GElf_Shdr shdr;
+ 	int fd, ret = -ENOENT;
+ 
+ 	fd = open(exec, O_RDONLY);
+ 	if (fd < 0)
+ 		return -errno;
+ 
+ 	elf = elf_begin(fd, PERF_ELF_C_READ_MMAP, NULL);
+ 	if (elf == NULL)
+ 		return -EINVAL;
+ 
+ 	if (gelf_getehdr(elf, &ehdr) == NULL)
+ 		goto out;
+ 
+ 	if (!elf_section_by_name(elf, &ehdr, &shdr, ".text"))
+ 		goto out;
+ 
+ 	*address = shdr.sh_addr - shdr.sh_offset;
+ 	ret = 0;
+ out:
+ 	elf_end(elf);
+ 	return ret;
+ }
+ #endif
+ 
++>>>>>>> 1d027ee9b80c (perf probe: Fix build when DWARF support libraries not present)
  static int init_user_exec(void)
  {
  	int ret = 0;
* Unmerged path tools/perf/util/probe-event.c
