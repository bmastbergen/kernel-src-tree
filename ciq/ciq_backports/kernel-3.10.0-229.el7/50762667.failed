be2net: fix some log messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Vasundhara Volam <vasundhara.volam@emulex.com>
commit 50762667f78e346c343544f88270c0a831789e7d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/50762667.failed

This patch fixes the following minor issues with log messages in be2net:
  1) Period is not required at the end of log message.
  2) Remove "Unknown grp5 event" logs to reduce noise. The driver can safely
     ignore async events from FW it's not interested in.
  3) Reword a log message for better readability to say that SRIOV
     "is disabled" rather than "not supported".

	Signed-off-by: Vasundhara Volam <vasundhara.volam@emulex.com>
	Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 50762667f78e346c343544f88270c0a831789e7d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/emulex/benet/be_main.c
diff --cc drivers/net/ethernet/emulex/benet/be_main.c
index 9923bf6b69c7,f059b62d29b5..000000000000
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@@ -3335,6 -3368,51 +3334,54 @@@ static void be_setup_init(struct be_ada
  		adapter->cmd_privileges = MIN_PRIVILEGES;
  }
  
++<<<<<<< HEAD
++=======
+ static int be_get_sriov_config(struct be_adapter *adapter)
+ {
+ 	struct device *dev = &adapter->pdev->dev;
+ 	struct be_resources res = {0};
+ 	int max_vfs, old_vfs;
+ 
+ 	/* Some old versions of BE3 FW don't report max_vfs value */
+ 	be_cmd_get_profile_config(adapter, &res, 0);
+ 
+ 	if (BE3_chip(adapter) && !res.max_vfs) {
+ 		max_vfs = pci_sriov_get_totalvfs(adapter->pdev);
+ 		res.max_vfs = max_vfs > 0 ? min(MAX_VFS, max_vfs) : 0;
+ 	}
+ 
+ 	adapter->pool_res = res;
+ 
+ 	if (!be_max_vfs(adapter)) {
+ 		if (num_vfs)
+ 			dev_warn(dev, "SRIOV is disabled. Ignoring num_vfs\n");
+ 		adapter->num_vfs = 0;
+ 		return 0;
+ 	}
+ 
+ 	pci_sriov_set_totalvfs(adapter->pdev, be_max_vfs(adapter));
+ 
+ 	/* validate num_vfs module param */
+ 	old_vfs = pci_num_vf(adapter->pdev);
+ 	if (old_vfs) {
+ 		dev_info(dev, "%d VFs are already enabled\n", old_vfs);
+ 		if (old_vfs != num_vfs)
+ 			dev_warn(dev, "Ignoring num_vfs=%d setting\n", num_vfs);
+ 		adapter->num_vfs = old_vfs;
+ 	} else {
+ 		if (num_vfs > be_max_vfs(adapter)) {
+ 			dev_info(dev, "Resources unavailable to init %d VFs\n",
+ 				 num_vfs);
+ 			dev_info(dev, "Limiting to %d VFs\n",
+ 				 be_max_vfs(adapter));
+ 		}
+ 		adapter->num_vfs = min_t(u16, num_vfs, be_max_vfs(adapter));
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 50762667f78e (be2net: fix some log messages)
  static int be_get_resources(struct be_adapter *adapter)
  {
  	struct device *dev = &adapter->pdev->dev;
@@@ -3556,9 -3657,10 +3603,9 @@@ static int be_setup(struct be_adapter *
  		goto err;
  
  	be_cmd_get_fw_ver(adapter);
 -	dev_info(dev, "FW version is %s\n", adapter->fw_ver);
  
  	if (BE2_chip(adapter) && fw_major_num(adapter->fw_ver) < 4) {
- 		dev_err(dev, "Firmware on card is old(%s), IRQs may not work.",
+ 		dev_err(dev, "Firmware on card is old(%s), IRQs may not work",
  			adapter->fw_ver);
  		dev_err(dev, "Please upgrade firmware to version >= 4.0\n");
  	}
diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.c b/drivers/net/ethernet/emulex/benet/be_cmds.c
index a93f7100da06..8e3fb9fe29ba 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@ -309,8 +309,6 @@ static void be_async_grp5_evt_process(struct be_adapter *adapter,
 		be_async_grp5_pvid_state_process(adapter, compl);
 		break;
 	default:
-		dev_warn(&adapter->pdev->dev, "Unknown grp5 event 0x%x!\n",
-			 event_type);
 		break;
 	}
 }
diff --git a/drivers/net/ethernet/emulex/benet/be_ethtool.c b/drivers/net/ethernet/emulex/benet/be_ethtool.c
index 207ce14f1c9c..59365582869b 100644
--- a/drivers/net/ethernet/emulex/benet/be_ethtool.c
+++ b/drivers/net/ethernet/emulex/benet/be_ethtool.c
@@ -676,7 +676,7 @@ be_set_pauseparam(struct net_device *netdev, struct ethtool_pauseparam *ecmd)
 	status = be_cmd_set_flow_control(adapter,
 					 adapter->tx_fc, adapter->rx_fc);
 	if (status)
-		dev_warn(&adapter->pdev->dev, "Pause param set failed.\n");
+		dev_warn(&adapter->pdev->dev, "Pause param set failed\n");
 
 	return be_cmd_status(status);
 }
* Unmerged path drivers/net/ethernet/emulex/benet/be_main.c
