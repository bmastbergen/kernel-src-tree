net: add gro_compute_pseudo functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] add gro_compute_pseudo functions (Florian Westphal) [1131999]
Rebuild_FUZZ: 92.75%
commit-author Tom Herbert <therbert@google.com>
commit 1933a7852ce6a81349855431b25122d7666bbfca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1933a785.failed

Add inet_gro_compute_pseudo and ip6_gro_compute_pseudo. These are
the logical equivalents of inet_compute_pseudo and ip6_compute_pseudo
for GRO path. The IP header is taken from skb_gro_network_header.

	Signed-off-by: Tom Herbert <therbert@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1933a7852ce6a81349855431b25122d7666bbfca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/ip.h
#	include/net/ip6_checksum.h
diff --cc include/net/ip.h
index dd8e98fbd424,c8fd6112bd0b..000000000000
--- a/include/net/ip.h
+++ b/include/net/ip.h
@@@ -314,6 -351,27 +314,30 @@@ static inline __wsum inet_compute_pseud
  				  skb->len, proto, 0);
  }
  
++<<<<<<< HEAD
++=======
+ static inline void inet_set_txhash(struct sock *sk)
+ {
+ 	struct inet_sock *inet = inet_sk(sk);
+ 	struct flow_keys keys;
+ 
+ 	keys.src = inet->inet_saddr;
+ 	keys.dst = inet->inet_daddr;
+ 	keys.port16[0] = inet->inet_sport;
+ 	keys.port16[1] = inet->inet_dport;
+ 
+ 	sk->sk_txhash = flow_hash_from_keys(&keys);
+ }
+ 
+ static inline __wsum inet_gro_compute_pseudo(struct sk_buff *skb, int proto)
+ {
+ 	const struct iphdr *iph = skb_gro_network_header(skb);
+ 
+ 	return csum_tcpudp_nofold(iph->saddr, iph->daddr,
+ 				  skb_gro_len(skb), proto, 0);
+ }
+ 
++>>>>>>> 1933a7852ce6 (net: add gro_compute_pseudo functions)
  /*
   *	Map a multicast IP onto multicast MAC for type ethernet.
   */
diff --cc include/net/ip6_checksum.h
index ed00fce9db34,1a49b73f7f6e..000000000000
--- a/include/net/ip6_checksum.h
+++ b/include/net/ip6_checksum.h
@@@ -41,6 -41,21 +41,24 @@@ __sum16 csum_ipv6_magic(const struct in
  			__wsum csum);
  #endif
  
++<<<<<<< HEAD
++=======
+ static inline __wsum ip6_compute_pseudo(struct sk_buff *skb, int proto)
+ {
+ 	return ~csum_unfold(csum_ipv6_magic(&ipv6_hdr(skb)->saddr,
+ 					    &ipv6_hdr(skb)->daddr,
+ 					    skb->len, proto, 0));
+ }
+ 
+ static inline __wsum ip6_gro_compute_pseudo(struct sk_buff *skb, int proto)
+ {
+ 	const struct ipv6hdr *iph = skb_gro_network_header(skb);
+ 
+ 	return ~csum_unfold(csum_ipv6_magic(&iph->saddr, &iph->daddr,
+ 					    skb_gro_len(skb), proto, 0));
+ }
+ 
++>>>>>>> 1933a7852ce6 (net: add gro_compute_pseudo functions)
  static __inline__ __sum16 tcp_v6_check(int len,
  				   const struct in6_addr *saddr,
  				   const struct in6_addr *daddr,
* Unmerged path include/net/ip.h
* Unmerged path include/net/ip6_checksum.h
