ethtool, be2net: constify array pointer parameters to ethtool_ops::set_rxfh

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] ethtool: constify array pointer parameters to ethtool_ops::set_rxfh (Ivan Vecera) [1138823]
Rebuild_FUZZ: 94.37%
commit-author Ben Hutchings <ben@decadent.org.uk>
commit 33cb0fa7888510b5bd2096352b200cfe29db10fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/33cb0fa7.failed

	Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
(cherry picked from commit 33cb0fa7888510b5bd2096352b200cfe29db10fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/emulex/benet/be_cmds.c
#	drivers/net/ethernet/emulex/benet/be_cmds.h
#	drivers/net/ethernet/emulex/benet/be_ethtool.c
diff --cc drivers/net/ethernet/emulex/benet/be_cmds.c
index 48076a6370c3,7b59da241ccb..000000000000
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@@ -2013,7 -2033,7 +2013,11 @@@ int be_cmd_reset_function(struct be_ada
  }
  
  int be_cmd_rss_config(struct be_adapter *adapter, u8 *rsstable,
++<<<<<<< HEAD
 +			u32 rss_hash_opts, u16 table_size)
++=======
+ 		      u32 rss_hash_opts, u16 table_size, const u8 *rss_hkey)
++>>>>>>> 33cb0fa78885 (ethtool, be2net: constify array pointer parameters to ethtool_ops::set_rxfh)
  {
  	struct be_mcc_wrb *wrb;
  	struct be_cmd_req_rss_config *req;
diff --cc drivers/net/ethernet/emulex/benet/be_cmds.h
index fc4e076dc202,451f3138b8fb..000000000000
--- a/drivers/net/ethernet/emulex/benet/be_cmds.h
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.h
@@@ -2012,7 -2068,7 +2012,11 @@@ int be_cmd_query_fw_cfg(struct be_adapt
  			u32 *function_mode, u32 *function_caps, u16 *asic_rev);
  int be_cmd_reset_function(struct be_adapter *adapter);
  int be_cmd_rss_config(struct be_adapter *adapter, u8 *rsstable,
++<<<<<<< HEAD
 +		      u32 rss_hash_opts, u16 table_size);
++=======
+ 		      u32 rss_hash_opts, u16 table_size, const u8 *rss_hkey);
++>>>>>>> 33cb0fa78885 (ethtool, be2net: constify array pointer parameters to ethtool_ops::set_rxfh)
  int be_process_mcc(struct be_adapter *adapter);
  int be_cmd_set_beacon_state(struct be_adapter *adapter, u8 port_num, u8 beacon,
  			    u8 status, u8 state);
diff --cc drivers/net/ethernet/emulex/benet/be_ethtool.c
index b79d8aa2b4b3,e2da4d20dd3d..000000000000
--- a/drivers/net/ethernet/emulex/benet/be_ethtool.c
+++ b/drivers/net/ethernet/emulex/benet/be_ethtool.c
@@@ -1103,6 -1090,69 +1103,72 @@@ static int be_set_channels(struct net_d
  	return be_update_queues(adapter);
  }
  
++<<<<<<< HEAD
++=======
+ static u32 be_get_rxfh_indir_size(struct net_device *netdev)
+ {
+ 	return RSS_INDIR_TABLE_LEN;
+ }
+ 
+ static u32 be_get_rxfh_key_size(struct net_device *netdev)
+ {
+ 	return RSS_HASH_KEY_LEN;
+ }
+ 
+ static int be_get_rxfh(struct net_device *netdev, u32 *indir, u8 *hkey)
+ {
+ 	struct be_adapter *adapter = netdev_priv(netdev);
+ 	int i;
+ 	struct rss_info *rss = &adapter->rss_info;
+ 
+ 	if (indir) {
+ 		for (i = 0; i < RSS_INDIR_TABLE_LEN; i++)
+ 			indir[i] = rss->rss_queue[i];
+ 	}
+ 
+ 	if (hkey)
+ 		memcpy(hkey, rss->rss_hkey, RSS_HASH_KEY_LEN);
+ 
+ 	return 0;
+ }
+ 
+ static int be_set_rxfh(struct net_device *netdev, const u32 *indir,
+ 		       const u8 *hkey)
+ {
+ 	int rc = 0, i, j;
+ 	struct be_adapter *adapter = netdev_priv(netdev);
+ 	u8 rsstable[RSS_INDIR_TABLE_LEN];
+ 
+ 	if (indir) {
+ 		struct be_rx_obj *rxo;
+ 		for (i = 0; i < RSS_INDIR_TABLE_LEN; i++) {
+ 			j = indir[i];
+ 			rxo = &adapter->rx_obj[j];
+ 			rsstable[i] = rxo->rss_id;
+ 			adapter->rss_info.rss_queue[i] = j;
+ 		}
+ 	} else {
+ 		memcpy(rsstable, adapter->rss_info.rsstable,
+ 		       RSS_INDIR_TABLE_LEN);
+ 	}
+ 
+ 	if (!hkey)
+ 		hkey =  adapter->rss_info.rss_hkey;
+ 
+ 	rc = be_cmd_rss_config(adapter, rsstable,
+ 			adapter->rss_info.rss_flags,
+ 			RSS_INDIR_TABLE_LEN, hkey);
+ 	if (rc) {
+ 		adapter->rss_info.rss_flags = RSS_ENABLE_NONE;
+ 		return -EIO;
+ 	}
+ 	memcpy(adapter->rss_info.rss_hkey, hkey, RSS_HASH_KEY_LEN);
+ 	memcpy(adapter->rss_info.rsstable, rsstable,
+ 	       RSS_INDIR_TABLE_LEN);
+ 	return 0;
+ }
+ 
++>>>>>>> 33cb0fa78885 (ethtool, be2net: constify array pointer parameters to ethtool_ops::set_rxfh)
  const struct ethtool_ops be_ethtool_ops = {
  	.get_settings = be_get_settings,
  	.get_drvinfo = be_get_drvinfo,
* Unmerged path drivers/net/ethernet/emulex/benet/be_cmds.c
* Unmerged path drivers/net/ethernet/emulex/benet/be_cmds.h
* Unmerged path drivers/net/ethernet/emulex/benet/be_ethtool.c
diff --git a/include/linux/ethtool.h b/include/linux/ethtool.h
index 491bcb1f2bf2..832cb0a1bbc4 100644
--- a/include/linux/ethtool.h
+++ b/include/linux/ethtool.h
@@ -243,7 +243,8 @@ struct ethtool_ops {
 	u32	(*get_rxfh_key_size)(struct net_device *);
 	u32	(*get_rxfh_indir_size)(struct net_device *);
 	int	(*get_rxfh)(struct net_device *, u32 *indir, u8 *key);
-	int	(*set_rxfh)(struct net_device *, u32 *indir, u8 *key);
+	int	(*set_rxfh)(struct net_device *, const u32 *indir,
+			    const u8 *key);
 	int	(*get_rxfh_indir)(struct net_device *, u32 *);
 	int	(*set_rxfh_indir)(struct net_device *, const u32 *);
 	void	(*get_channels)(struct net_device *, struct ethtool_channels *);
