storage: accept some UAS devices if streams are unavailable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Oliver Neukum <oneukum@suse.de>
commit 14aec589327a6fc4035f5327d90ac5548f501c4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/14aec589.failed

On some older XHCIs streams are not supported and the UAS driver
will fail at probe time. For those devices storage should try
to bind to UAS devices.
This patch adds a flag for stream support to HCDs and evaluates
it.

[Note: Sarah fixed a bug where the USB 2.0 root hub, not USB 3.0 root
hub would get marked as being able to support streams.]

	Signed-off-by: Oliver Neukum <oliver@neukum.org>
	Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit 14aec589327a6fc4035f5327d90ac5548f501c4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/xhci-pci.c
diff --cc drivers/usb/host/xhci-pci.c
index 3c898c12a06b,cbf0c5cffc92..000000000000
--- a/drivers/usb/host/xhci-pci.c
+++ b/drivers/usb/host/xhci-pci.c
@@@ -217,11 -222,8 +217,16 @@@ static int xhci_pci_probe(struct pci_de
  		goto put_usb3_hcd;
  	/* Roothub already marked as USB 3.0 speed */
  
++<<<<<<< HEAD
 +	/* We know the LPM timeout algorithms for this host, let the USB core
 +	 * enable and disable LPM for devices under the USB 3.0 roothub.
 +	 */
 +	if (xhci->quirks & XHCI_LPM_SUPPORT)
 +		hcd_to_bus(xhci->shared_hcd)->root_hub->lpm_capable = 1;
++=======
+ 	if (HCC_MAX_PSA(xhci->hcc_params) >= 4)
+ 		xhci->shared_hcd->can_do_streams = 1;
++>>>>>>> 14aec589327a (storage: accept some UAS devices if streams are unavailable)
  
  	return 0;
  
* Unmerged path drivers/usb/host/xhci-pci.c
diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 780cd3e0ceed..30ae396646cd 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -157,6 +157,9 @@ static int xhci_plat_probe(struct platform_device *pdev)
 	 */
 	*((struct xhci_hcd **) xhci->shared_hcd->hcd_priv) = xhci;
 
+	if (HCC_MAX_PSA(xhci->hcc_params) >= 4)
+		xhci->shared_hcd->can_do_streams = 1;
+
 	ret = usb_add_hcd(xhci->shared_hcd, irq, IRQF_SHARED);
 	if (ret)
 		goto put_usb3_hcd;
diff --git a/drivers/usb/storage/uas-detect.h b/drivers/usb/storage/uas-detect.h
index b8a02e12a8a2..bb05b984d5f6 100644
--- a/drivers/usb/storage/uas-detect.h
+++ b/drivers/usb/storage/uas-detect.h
@@ -72,6 +72,7 @@ static int uas_use_uas_driver(struct usb_interface *intf,
 {
 	struct usb_host_endpoint *eps[4] = { };
 	struct usb_device *udev = interface_to_usbdev(intf);
+	struct usb_hcd *hcd = bus_to_hcd(udev->bus);
 	unsigned long flags = id->driver_info;
 	int r, alt;
 
@@ -80,6 +81,9 @@ static int uas_use_uas_driver(struct usb_interface *intf,
 	if (flags & US_FL_IGNORE_UAS)
 		return 0;
 
+	if (udev->speed >= USB_SPEED_SUPER && !hcd->can_do_streams)
+		return 0;
+
 	alt = uas_find_uas_alt_setting(intf);
 	if (alt < 0)
 		return 0;
diff --git a/include/linux/usb/hcd.h b/include/linux/usb/hcd.h
index 7613e91d98e1..e3ba28bd02dc 100644
--- a/include/linux/usb/hcd.h
+++ b/include/linux/usb/hcd.h
@@ -142,6 +142,7 @@ struct usb_hcd {
 	unsigned		authorized_default:1;
 	unsigned		has_tt:1;	/* Integrated TT in root hub */
 	unsigned		amd_resume_bug:1; /* AMD remote wakeup quirk */
+	unsigned		can_do_streams:1; /* HC supports streams */
 
 	unsigned int		irq;		/* irq allocated */
 	void __iomem		*regs;		/* device memory/io */
