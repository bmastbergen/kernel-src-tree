net: fix setting csum_start in skb_segment()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] fix setting csum_start in skb_segment() (Florian Westphal) [1131999]
Rebuild_FUZZ: 93.98%
commit-author Tom Herbert <therbert@google.com>
commit de843723f9b989178762196fb24dd050cbe20ca3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/de843723.failed

Dave Jones reported that a crash is occurring in

csum_partial
tcp_gso_segment
inet_gso_segment
? update_dl_migration
skb_mac_gso_segment
__skb_gso_segment
dev_hard_start_xmit
sch_direct_xmit
__dev_queue_xmit
? dev_hard_start_xmit
dev_queue_xmit
ip_finish_output
? ip_output
ip_output
ip_forward_finish
ip_forward
ip_rcv_finish
ip_rcv
__netif_receive_skb_core
? __netif_receive_skb_core
? trace_hardirqs_on
__netif_receive_skb
netif_receive_skb_internal
napi_gro_complete
? napi_gro_complete
dev_gro_receive
? dev_gro_receive
napi_gro_receive

It looks like a likely culprit is that SKB_GSO_CB()->csum_start is
not set correctly when doing non-scatter gather. We are using
offset as opposed to doffset.

	Reported-by: Dave Jones <davej@redhat.com>
	Tested-by: Dave Jones <davej@redhat.com>
	Signed-off-by: Tom Herbert <therbert@google.com>
	Signed-off-by: Eric Dumazet <edumazet@google.com>
Fixes: 7e2b10c1e52ca ("net: Support for multiple checksums with gso")
	Acked-by: Tom Herbert <therbert@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit de843723f9b989178762196fb24dd050cbe20ca3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index 25fb6ef7b10e,c1a33033cbe2..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -2950,6 -2992,8 +2950,11 @@@ struct sk_buff *skb_segment(struct sk_b
  			nskb->csum = skb_copy_and_csum_bits(head_skb, offset,
  							    skb_put(nskb, len),
  							    len, 0);
++<<<<<<< HEAD
++=======
+ 			SKB_GSO_CB(nskb)->csum_start =
+ 			    skb_headroom(nskb) + doffset;
++>>>>>>> de843723f9b9 (net: fix setting csum_start in skb_segment())
  			continue;
  		}
  
* Unmerged path net/core/skbuff.c
