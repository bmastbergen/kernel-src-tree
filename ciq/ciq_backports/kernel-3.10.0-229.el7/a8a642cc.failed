mtip32xx: blk_mq_init_queue() returns an ERR_PTR

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit a8a642ccd2e86248ae23c5d762dac67eaea02423
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/a8a642cc.failed

We changed this from blk_alloc_queue_node() to blk_mq_init_queue() so
the check needs to be updated as well.

Fixes: ffc771b3ca8b2 ('mtip32xx: convert to use blk-mq')
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit a8a642ccd2e86248ae23c5d762dac67eaea02423)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/mtip32xx/mtip32xx.c
diff --cc drivers/block/mtip32xx/mtip32xx.c
index ab3b42d18772,5979ab3afd81..000000000000
--- a/drivers/block/mtip32xx/mtip32xx.c
+++ b/drivers/block/mtip32xx/mtip32xx.c
@@@ -4185,17 -3869,28 +4185,22 @@@ static int mtip_block_initialize(struc
  
  	mtip_hw_debugfs_init(dd);
  
 -skip_create_disk:
 -	memset(&dd->tags, 0, sizeof(dd->tags));
 -	dd->tags.ops = &mtip_mq_ops;
 -	dd->tags.nr_hw_queues = 1;
 -	dd->tags.queue_depth = MTIP_MAX_COMMAND_SLOTS;
 -	dd->tags.reserved_tags = 1;
 -	dd->tags.cmd_size = sizeof(struct mtip_cmd);
 -	dd->tags.numa_node = dd->numa_node;
 -	dd->tags.flags = BLK_MQ_F_SHOULD_MERGE;
 -	dd->tags.driver_data = dd;
 -
 -	rv = blk_mq_alloc_tag_set(&dd->tags);
 -	if (rv) {
 -		dev_err(&dd->pdev->dev,
 -			"Unable to allocate request queue\n");
 -		rv = -ENOMEM;
 -		goto block_queue_alloc_init_error;
 -	}
 +	/*
 +	 * if rebuild pending, start the service thread, and delay the block
 +	 * queue creation and add_disk()
 +	 */
 +	if (wait_for_rebuild == MTIP_FTL_REBUILD_MAGIC)
 +		goto start_service_thread;
  
 +skip_create_disk:
  	/* Allocate the request queue. */
++<<<<<<< HEAD
 +	dd->queue = blk_alloc_queue_node(GFP_KERNEL, dd->numa_node);
 +	if (dd->queue == NULL) {
++=======
+ 	dd->queue = blk_mq_init_queue(&dd->tags);
+ 	if (IS_ERR(dd->queue)) {
++>>>>>>> a8a642ccd2e8 (mtip32xx: blk_mq_init_queue() returns an ERR_PTR)
  		dev_err(&dd->pdev->dev,
  			"Unable to allocate request queue\n");
  		rv = -ENOMEM;
* Unmerged path drivers/block/mtip32xx/mtip32xx.c
