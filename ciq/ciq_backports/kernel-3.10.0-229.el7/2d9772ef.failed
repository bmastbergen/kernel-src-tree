ALSA: hda - Add NULL check to all PM ops in hda_intel.c

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [alsa] hda: Add NULL check to all PM ops in hda_intel.c (Jaroslav Kysela) [1112200]
Rebuild_FUZZ: 91.26%
commit-author Takashi Iwai <tiwai@suse.de>
commit 2d9772ef653ccf2d5213603e371bbdfe7573df93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2d9772ef.failed

Since devptr can be NULL due to asynchronous probe, all PM ops should
have NULL checks at the beginning.

	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 2d9772ef653ccf2d5213603e371bbdfe7573df93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/hda_intel.c
diff --cc sound/pci/hda/hda_intel.c
index 0fb65e46e7dc,387fc73a5c89..000000000000
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@@ -2562,10 -772,16 +2562,23 @@@ static int azx_suspend(struct device *d
  {
  	struct pci_dev *pci = to_pci_dev(dev);
  	struct snd_card *card = dev_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct azx *chip = card->private_data;
 +	struct azx_pcm *p;
 +
 +	if (chip->disabled || chip->init_failed)
++=======
+ 	struct azx *chip;
+ 	struct hda_intel *hda;
+ 	struct azx_pcm *p;
+ 
+ 	if (!card)
+ 		return 0;
+ 
+ 	chip = card->private_data;
+ 	hda = container_of(chip, struct hda_intel, chip);
+ 	if (chip->disabled || hda->init_failed)
++>>>>>>> 2d9772ef653c (ALSA: hda - Add NULL check to all PM ops in hda_intel.c)
  		return 0;
  
  	snd_power_change_state(card, SNDRV_CTL_POWER_D3hot);
@@@ -2594,13 -811,21 +2607,25 @@@ static int azx_resume(struct device *de
  {
  	struct pci_dev *pci = to_pci_dev(dev);
  	struct snd_card *card = dev_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct azx *chip = card->private_data;
 +
 +	if (chip->disabled || chip->init_failed)
++=======
+ 	struct azx *chip;
+ 	struct hda_intel *hda;
+ 
+ 	if (!card)
+ 		return 0;
+ 
+ 	chip = card->private_data;
+ 	hda = container_of(chip, struct hda_intel, chip);
+ 	if (chip->disabled || hda->init_failed)
++>>>>>>> 2d9772ef653c (ALSA: hda - Add NULL check to all PM ops in hda_intel.c)
  		return 0;
  
 -	if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL) {
 +	if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL)
  		hda_display_power(true);
 -		haswell_set_bclk(chip);
 -	}
  	pci_set_power_state(pci, PCI_D0);
  	pci_restore_state(pci);
  	if (pci_enable_device(pci) < 0) {
@@@ -2629,9 -854,15 +2654,21 @@@
  static int azx_runtime_suspend(struct device *dev)
  {
  	struct snd_card *card = dev_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct azx *chip = card->private_data;
 +
 +	if (chip->disabled || chip->init_failed)
++=======
+ 	struct azx *chip;
+ 	struct hda_intel *hda;
+ 
+ 	if (!card)
+ 		return 0;
+ 
+ 	chip = card->private_data;
+ 	hda = container_of(chip, struct hda_intel, chip);
+ 	if (chip->disabled || hda->init_failed)
++>>>>>>> 2d9772ef653c (ALSA: hda - Add NULL check to all PM ops in hda_intel.c)
  		return 0;
  
  	if (!(chip->driver_caps & AZX_DCAPS_PM_RUNTIME))
@@@ -2652,12 -884,18 +2689,26 @@@
  static int azx_runtime_resume(struct device *dev)
  {
  	struct snd_card *card = dev_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct azx *chip = card->private_data;
++=======
+ 	struct azx *chip;
+ 	struct hda_intel *hda;
++>>>>>>> 2d9772ef653c (ALSA: hda - Add NULL check to all PM ops in hda_intel.c)
  	struct hda_bus *bus;
  	struct hda_codec *codec;
  	int status;
  
++<<<<<<< HEAD
 +	if (chip->disabled || chip->init_failed)
++=======
+ 	if (!card)
+ 		return 0;
+ 
+ 	chip = card->private_data;
+ 	hda = container_of(chip, struct hda_intel, chip);
+ 	if (chip->disabled || hda->init_failed)
++>>>>>>> 2d9772ef653c (ALSA: hda - Add NULL check to all PM ops in hda_intel.c)
  		return 0;
  
  	if (!(chip->driver_caps & AZX_DCAPS_PM_RUNTIME))
@@@ -2690,9 -930,15 +2741,21 @@@
  static int azx_runtime_idle(struct device *dev)
  {
  	struct snd_card *card = dev_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct azx *chip = card->private_data;
 +
 +	if (chip->disabled || chip->init_failed)
++=======
+ 	struct azx *chip;
+ 	struct hda_intel *hda;
+ 
+ 	if (!card)
+ 		return 0;
+ 
+ 	chip = card->private_data;
+ 	hda = container_of(chip, struct hda_intel, chip);
+ 	if (chip->disabled || hda->init_failed)
++>>>>>>> 2d9772ef653c (ALSA: hda - Add NULL check to all PM ops in hda_intel.c)
  		return 0;
  
  	if (!power_save_controller ||
* Unmerged path sound/pci/hda/hda_intel.c
