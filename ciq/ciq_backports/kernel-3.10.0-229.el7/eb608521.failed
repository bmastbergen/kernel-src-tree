cpufreq: Use cpufreq_policy_list for iterating over policies

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [cpufreq] Use cpufreq_policy_list for iterating over policies (Prarit Bhargava) [1134369]
Rebuild_FUZZ: 91.89%
commit-author Viresh Kumar <viresh.kumar@linaro.org>
commit eb608521f1e25a8c14295b6d9a3853c3cd8c6cf8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/eb608521.failed

To iterate over all policies we currently iterate over all CPUs and
then get the policy for each of them.  Let's use the newly created
cpufreq_policy_list for this purpose.

[rjw: Changelog]
	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit eb608521f1e25a8c14295b6d9a3853c3cd8c6cf8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cpufreq.c
diff --cc drivers/cpufreq/cpufreq.c
index 7ca34bc0090e,37af929746af..000000000000
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@@ -944,13 -1006,11 +944,17 @@@ static int cpufreq_add_dev(struct devic
  #ifdef CONFIG_HOTPLUG_CPU
  	/* Check if this cpu was hot-unplugged earlier and has siblings */
  	read_lock_irqsave(&cpufreq_driver_lock, flags);
- 	for_each_online_cpu(sibling) {
- 		struct cpufreq_policy *cp = per_cpu(cpufreq_cpu_data, sibling);
- 		if (cp && cpumask_test_cpu(cpu, cp->related_cpus)) {
+ 	list_for_each_entry(tpolicy, &cpufreq_policy_list, policy_list) {
+ 		if (cpumask_test_cpu(cpu, tpolicy->related_cpus)) {
  			read_unlock_irqrestore(&cpufreq_driver_lock, flags);
++<<<<<<< HEAD
 +			ret = cpufreq_add_policy_cpu(cpu, sibling, dev);
 +			up_read(&cpufreq_rwsem);
 +			return ret;
++=======
+ 			return cpufreq_add_policy_cpu(tpolicy, cpu, dev,
+ 					frozen);
++>>>>>>> eb608521f1e2 (cpufreq: Use cpufreq_policy_list for iterating over policies)
  		}
  	}
  	read_unlock_irqrestore(&cpufreq_driver_lock, flags);
* Unmerged path drivers/cpufreq/cpufreq.c
