dm bufio: when done scanning return from __scan immediately

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [md] dm-bufio: when done scanning return from __scan immediately (Mike Snitzer) [1156161]
Rebuild_FUZZ: 98.31%
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit 0e825862f3c04cee40e25f55680333728a4ffa9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/0e825862.failed

When __scan frees the required number of buffer entries that the
shrinker requested (nr_to_scan becomes zero) it must return.  Before
this fix the __scan code exited only the inner loop and continued in the
outer loop -- which could result in reduced performance due to extra
buffers being freed (e.g. unnecessarily evicted thinp metadata needing
to be synchronously re-read into bufio's cache).

Also, move dm_bufio_cond_resched to __scan's inner loop, so that
iterating the bufio client's lru lists doesn't result in scheduling
latency.

	Reported-by: Joe Thornber <thornber@redhat.com>
	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
	Cc: stable@vger.kernel.org # 3.2+
(cherry picked from commit 0e825862f3c04cee40e25f55680333728a4ffa9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-bufio.c
diff --cc drivers/md/dm-bufio.c
index 34a4845bf0ba,9ea5b6041eb2..000000000000
--- a/drivers/md/dm-bufio.c
+++ b/drivers/md/dm-bufio.c
@@@ -1480,23 -1467,26 +1480,32 @@@ static void __scan(struct dm_bufio_clie
  {
  	int l;
  	struct dm_buffer *b, *tmp;
 -	long freed = 0;
  
  	for (l = 0; l < LIST_SIZE; l++) {
++<<<<<<< HEAD
 +		list_for_each_entry_safe_reverse(b, tmp, &c->lru[l], lru_list)
 +			if (!__cleanup_old_buffer(b, sc->gfp_mask, 0) &&
 +			    !--nr_to_scan)
 +				return;
 +		dm_bufio_cond_resched();
++=======
+ 		list_for_each_entry_safe_reverse(b, tmp, &c->lru[l], lru_list) {
+ 			freed += __cleanup_old_buffer(b, gfp_mask, 0);
+ 			if (!--nr_to_scan)
+ 				return freed;
+ 			dm_bufio_cond_resched();
+ 		}
++>>>>>>> 0e825862f3c0 (dm bufio: when done scanning return from __scan immediately)
  	}
 -	return freed;
  }
  
 -static unsigned long
 -dm_bufio_shrink_scan(struct shrinker *shrink, struct shrink_control *sc)
 +static int shrink(struct shrinker *shrinker, struct shrink_control *sc)
  {
 -	struct dm_bufio_client *c;
 -	unsigned long freed;
 +	struct dm_bufio_client *c =
 +	    container_of(shrinker, struct dm_bufio_client, shrinker);
 +	unsigned long r;
 +	unsigned long nr_to_scan = sc->nr_to_scan;
  
 -	c = container_of(shrink, struct dm_bufio_client, shrinker);
  	if (sc->gfp_mask & __GFP_IO)
  		dm_bufio_lock(c);
  	else if (!dm_bufio_trylock(c))
* Unmerged path drivers/md/dm-bufio.c
