drm/radeon: fix semaphore value init

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] radeon: fix semaphore value init (Rob Clark) [1173317]
Rebuild_FUZZ: 94.12%
commit-author Christian König <christian.koenig@amd.com>
commit f229407da79315c18a2f25f485e1a1b9fdda1e92
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f229407d.failed

Semaphore values have 64 bits, not 32. This fixes a very subtle bug
that disables synchronization when the upper 32bits wasn't zero.

	Signed-off-by: Christian König <christian.koenig@amd.com>
	Cc: stable@vger.kernel.org
Reviewed-By: Grigori Goronzy <greg@chown.ath.cx>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit f229407da79315c18a2f25f485e1a1b9fdda1e92)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/radeon/radeon_semaphore.c
diff --cc drivers/gpu/drm/radeon/radeon_semaphore.c
index 8dcc20f53d73,abd6753a570a..000000000000
--- a/drivers/gpu/drm/radeon/radeon_semaphore.c
+++ b/drivers/gpu/drm/radeon/radeon_semaphore.c
@@@ -34,7 -34,8 +34,12 @@@
  int radeon_semaphore_create(struct radeon_device *rdev,
  			    struct radeon_semaphore **semaphore)
  {
++<<<<<<< HEAD
 +	int r;
++=======
+ 	uint64_t *cpu_addr;
+ 	int i, r;
++>>>>>>> f229407da793 (drm/radeon: fix semaphore value init)
  
  	*semaphore = kmalloc(sizeof(struct radeon_semaphore), GFP_KERNEL);
  	if (*semaphore == NULL) {
* Unmerged path drivers/gpu/drm/radeon/radeon_semaphore.c
