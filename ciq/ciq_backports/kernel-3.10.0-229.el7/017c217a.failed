arch/x86/mm/numa.c: initialize numa_kernel_nodes in numa_clear_kernel_node_hotplug()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [x86] mm/numa: initialize numa_kernel_nodes in numa_clear_kernel_node_hotplug() (Motohiro Kosaki) [810042]
Rebuild_FUZZ: 92.99%
commit-author Tang Chen <tangchen@cn.fujitsu.com>
commit 017c217a26e9bf6948482f751b30d0507e30a7d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/017c217a.failed

On-stack variable numa_kernel_nodes in numa_clear_kernel_node_hotplug()
was not initialized.  So we need to initialize it.

[akpm@linux-foundation.org: use NODE_MASK_NONE, per David]
	Signed-off-by: Tang Chen <tangchen@cn.fujitsu.com>
	Tested-by: Gu Zheng <guz.fnst@cn.fujitsu.com>
	Reported-by: Dave Jones <davej@redhat.com>
	Reported-by: David Rientjes <rientjes@google.com>
	Tested-by: Dave Jones <davej@redhat.com>
	Cc: Ingo Molnar <mingo@elte.hu>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 017c217a26e9bf6948482f751b30d0507e30a7d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/numa.c
diff --cc arch/x86/mm/numa.c
index ad1a142a317e,45ec9d72b6dd..000000000000
--- a/arch/x86/mm/numa.c
+++ b/arch/x86/mm/numa.c
@@@ -550,6 -562,30 +550,33 @@@ static void __init numa_init_array(void
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void __init numa_clear_kernel_node_hotplug(void)
+ {
+ 	int i, nid;
+ 	nodemask_t numa_kernel_nodes = NODE_MASK_NONE;
+ 	unsigned long start, end;
+ 	struct memblock_type *type = &memblock.reserved;
+ 
+ 	/* Mark all kernel nodes. */
+ 	for (i = 0; i < type->cnt; i++)
+ 		node_set(type->regions[i].nid, numa_kernel_nodes);
+ 
+ 	/* Clear MEMBLOCK_HOTPLUG flag for memory in kernel nodes. */
+ 	for (i = 0; i < numa_meminfo.nr_blks; i++) {
+ 		nid = numa_meminfo.blk[i].nid;
+ 		if (!node_isset(nid, numa_kernel_nodes))
+ 			continue;
+ 
+ 		start = numa_meminfo.blk[i].start;
+ 		end = numa_meminfo.blk[i].end;
+ 
+ 		memblock_clear_hotplug(start, end - start);
+ 	}
+ }
+ 
++>>>>>>> 017c217a26e9 (arch/x86/mm/numa.c: initialize numa_kernel_nodes in numa_clear_kernel_node_hotplug())
  static int __init numa_init(int (*init_func)(void))
  {
  	int i;
* Unmerged path arch/x86/mm/numa.c
