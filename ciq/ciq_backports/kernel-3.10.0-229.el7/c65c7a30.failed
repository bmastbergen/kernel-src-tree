bridge: notify user space after fdb update

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jon Maxwell <jmaxwell37@gmail.com>
commit c65c7a306610ee7c13669a8f5601b472c19dc6f1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/c65c7a30.failed

There has been a number incidents recently where customers running KVM have
reported that VM hosts on different Hypervisors are unreachable. Based on
pcap traces we found that the bridge was broadcasting the ARP request out
onto the network. However some NICs have an inbuilt switch which on occasions
were broadcasting the VMs ARP request back through the physical NIC on the
Hypervisor. This resulted in the bridge changing ports and incorrectly learning
that the VMs mac address was external. As a result the ARP reply was directed
back onto the external network and VM never updated it's ARP cache. This patch
will notify the bridge command, after a fdb has been updated to identify such
port toggling.

	Signed-off-by: Jon Maxwell <jmaxwell37@gmail.com>
	Reviewed-by: Jiri Pirko <jiri@resnulli.us>
	Acked-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
	Acked-by: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c65c7a306610ee7c13669a8f5601b472c19dc6f1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_fdb.c
diff --cc net/bridge/br_fdb.c
index 8e14532d83db,474d36f93342..000000000000
--- a/net/bridge/br_fdb.c
+++ b/net/bridge/br_fdb.c
@@@ -520,8 -508,15 +521,18 @@@ void br_fdb_update(struct net_bridge *b
  					source->dev->name);
  		} else {
  			/* fastpath: update of existing entry */
- 			fdb->dst = source;
+ 			if (unlikely(source != fdb->dst)) {
+ 				fdb->dst = source;
+ 				fdb_modified = true;
+ 			}
  			fdb->updated = jiffies;
++<<<<<<< HEAD
++=======
+ 			if (unlikely(added_by_user))
+ 				fdb->added_by_user = 1;
+ 			if (unlikely(fdb_modified))
+ 				fdb_notify(br, fdb, RTM_NEWNEIGH);
++>>>>>>> c65c7a306610 (bridge: notify user space after fdb update)
  		}
  	} else {
  		spin_lock(&br->hash_lock);
* Unmerged path net/bridge/br_fdb.c
