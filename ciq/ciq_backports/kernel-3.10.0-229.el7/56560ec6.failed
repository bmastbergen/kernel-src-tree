perf config: Ignore generated files in feature-checks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/config: Ignore generated files in feature-checks (Jiri Olsa) [1133083]
Rebuild_FUZZ: 98.11%
commit-author Chunwei Chen <tuxoko@gmail.com>
commit 56560ec692c142bb9ee404764e3b67999031ad19
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/56560ec6.failed

1. Rename the test-* binary files to test-*.bin for easier pattern matching as
   suggested by Ingo.
2. Ignore *.bin and *.d files.

	Signed-off-by: Chunwei Chen <tuxoko@gmail.com>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Jiri Olsa <jolsa@redhat.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Jiri Olsa <jolsa@redhat.com>
Link: http://lkml.kernel.org/r/52B52B9B.50708@gmail.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 56560ec692c142bb9ee404764e3b67999031ad19)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
#	tools/perf/config/feature-checks/Makefile
diff --cc tools/perf/config/Makefile
index 374f88fe17c5,14faeeb0d752..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -89,9 -119,14 +89,13 @@@ CFLAGS += -std=gnu9
  
  EXTLIBS = -lelf -lpthread -lrt -lm -ldl
  
 -ifneq ($(OUTPUT),)
 -  OUTPUT_FEATURES = $(OUTPUT)config/feature-checks/
 -  $(shell mkdir -p $(OUTPUT_FEATURES))
 -endif
 -
  feature_check = $(eval $(feature_check_code))
  define feature_check_code
++<<<<<<< HEAD
 +  feature-$(1) := $(shell $(MAKE) -C config/feature-checks test-$1 >/dev/null 2>/dev/null && echo 1 || echo 0)
++=======
+   feature-$(1) := $(shell $(MAKE) OUTPUT=$(OUTPUT_FEATURES) CFLAGS="$(EXTRA_CFLAGS) $(FEATURE_CHECK_CFLAGS-$(1))" LDFLAGS="$(LDFLAGS) $(FEATURE_CHECK_LDFLAGS-$(1))" -C config/feature-checks test-$1.bin >/dev/null 2>/dev/null && echo 1 || echo 0)
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
  endef
  
  feature_set = $(eval $(feature_set_code))
@@@ -102,35 -137,76 +106,55 @@@ ende
  #
  # Build the feature check binaries in parallel, ignore errors, ignore return value and suppress output:
  #
 +$(info )
 +$(info Auto-detecting system features:)
  
 -#
 -# Note that this is not a complete list of all feature tests, just
 -# those that are typically built on a fully configured system.
 -#
 -# [ Feature tests not mentioned here have to be built explicitly in
 -#   the rule that uses them - an example for that is the 'bionic'
 -#   feature check. ]
 -#
 -CORE_FEATURE_TESTS =			\
 -	backtrace			\
 -	dwarf				\
 +FEATURE_TESTS =				\
 +	hello				\
 +	stackprotector-all		\
++<<<<<<< HEAD
 +	stackprotector			\
 +	volatile-register-var		\
  	fortify-source			\
 -	glibc				\
 -	gtk2				\
 -	gtk2-infobar			\
 -	libaudit			\
 -	libbfd				\
 +	bionic				\
  	libelf				\
 -	libelf-getphdrnum		\
 -	libelf-mmap			\
 -	libnuma				\
 -	libperl				\
 -	libpython			\
 -	libpython-version		\
 -	libslang			\
 -	libunwind			\
 -	on-exit				\
 -	stackprotector-all		\
 +	glibc				\
 +	dwarf				\
 +	libnuma
++=======
+ 	timerfd
+ 
+ #
+ # So here we detect whether test-all was rebuilt, to be able
+ # to skip the print-out of the long features list if the file
+ # existed before and after it was built:
+ #
+ ifeq ($(wildcard $(OUTPUT)config/feature-checks/test-all.bin),)
+   test-all-failed := 1
+ else
+   test-all-failed := 0
+ endif
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
  
  #
  # Special fast-path for the 'all features are available' case:
  #
 -$(call feature_check,all,$(MSG))
 -
 -#
 -# Just in case the build freshly failed, make sure we print the
 -# feature matrix:
 -#
 -ifeq ($(feature-all), 0)
 -  test-all-failed := 1
 -endif
 -
 -ifeq ($(test-all-failed),1)
 -  $(info )
 -  $(info Auto-detecting system features:)
 -endif
 +$(call feature_check,all)
  
  ifeq ($(feature-all), 1)
 -  #
 -  # test-all.c passed - just set all the core feature flags to 1:
 -  #
 -  $(foreach feat,$(CORE_FEATURE_TESTS),$(call feature_set,$(feat)))
 +  $(foreach feat,$(FEATURE_TESTS),$(call feature_set,$(feat)))
  else
++<<<<<<< HEAD
 +  $(shell $(MAKE) -i -j -C config/feature-checks >/dev/null 2>&1)
 +  $(foreach feat,$(FEATURE_TESTS),$(call feature_check,$(feat)))
++=======
+   $(shell $(MAKE) OUTPUT=$(OUTPUT_FEATURES) CFLAGS="$(EXTRA_CFLAGS)" LDFLAGS=$(LDFLAGS) -i -j -C config/feature-checks $(addsuffix .bin,$(CORE_FEATURE_TESTS)) >/dev/null 2>&1)
+   $(foreach feat,$(CORE_FEATURE_TESTS),$(call feature_check,$(feat)))
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
  endif
  
 +feature_print = $(eval $(feature_print_code))
 +
  #
  # Print the result of the feature test:
  #
diff --cc tools/perf/config/feature-checks/Makefile
index 5910d275aba0,7cf6fcdacebe..000000000000
--- a/tools/perf/config/feature-checks/Makefile
+++ b/tools/perf/config/feature-checks/Makefile
@@@ -1,58 -1,146 +1,185 @@@
  
  FILES=					\
++<<<<<<< HEAD
 +	test-hello			\
 +	test-stackprotector-all		\
 +	test-stackprotector		\
 +	test-volatile-register-var	\
 +	test-fortify-source		\
 +	test-bionic			\
 +	test-libelf			\
 +	test-glibc			\
 +	test-dwarf			\
 +	test-libnuma
++=======
+ 	test-all.bin			\
+ 	test-backtrace.bin		\
+ 	test-bionic.bin			\
+ 	test-dwarf.bin			\
+ 	test-fortify-source.bin		\
+ 	test-glibc.bin			\
+ 	test-gtk2.bin			\
+ 	test-gtk2-infobar.bin		\
+ 	test-hello.bin			\
+ 	test-libaudit.bin		\
+ 	test-libbfd.bin			\
+ 	test-liberty.bin		\
+ 	test-liberty-z.bin		\
+ 	test-cplus-demangle.bin		\
+ 	test-libelf.bin			\
+ 	test-libelf-getphdrnum.bin	\
+ 	test-libelf-mmap.bin		\
+ 	test-libnuma.bin		\
+ 	test-libperl.bin		\
+ 	test-libpython.bin		\
+ 	test-libpython-version.bin	\
+ 	test-libslang.bin		\
+ 	test-libunwind.bin		\
+ 	test-libunwind-debug-frame.bin	\
+ 	test-on-exit.bin		\
+ 	test-stackprotector-all.bin	\
+ 	test-timerfd.bin
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
  
  CC := $(CC) -MD
  
  all: $(FILES)
  
++<<<<<<< HEAD
 +BUILD = $(CC) -o $(OUTPUT)$@ $@.c
 +
 +###############################
 +
 +test-all:
 +	$(BUILD) -Werror -fstack-protector -fstack-protector-all -Wvolatile-register-var -O2 -Werror -D_FORTIFY_SOURCE=2 -ldw -lelf -lnuma -lunwind -lunwind-x86_64 -lelf -laudit -I/usr/include/slang -lslang $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null) $(FLAGS_PERL_EMBED) $(FLAGS_PYTHON_EMBED) -DPACKAGE='perf' -DPACKAGE=perf -lbfd -ldl
++=======
+ BUILD = $(CC) $(CFLAGS) -o $(OUTPUT)$@ $(patsubst %.bin,%.c,$@) $(LDFLAGS)
  
- test-hello:
+ ###############################
+ 
+ test-all.bin:
+ 	$(BUILD) -Werror -fstack-protector-all -O2 -Werror -D_FORTIFY_SOURCE=2 -ldw -lelf -lnuma -lelf -laudit -I/usr/include/slang -lslang $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null) $(FLAGS_PERL_EMBED) $(FLAGS_PYTHON_EMBED) -DPACKAGE='"perf"' -lbfd -ldl
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
+ 
+ test-hello.bin:
  	$(BUILD)
  
- test-stackprotector-all:
+ test-stackprotector-all.bin:
  	$(BUILD) -Werror -fstack-protector-all
  
++<<<<<<< HEAD
 +test-stackprotector:
 +	$(BUILD) -Werror -fstack-protector -Wstack-protector
 +
 +test-volatile-register-var:
 +	$(BUILD) -Werror -Wvolatile-register-var
 +
 +test-fortify-source:
++=======
+ test-fortify-source.bin:
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
  	$(BUILD) -O2 -Werror -D_FORTIFY_SOURCE=2
  
- test-bionic:
+ test-bionic.bin:
  	$(BUILD)
  
- test-libelf:
+ test-libelf.bin:
  	$(BUILD) -lelf
  
- test-glibc:
+ test-glibc.bin:
  	$(BUILD)
  
- test-dwarf:
+ test-dwarf.bin:
  	$(BUILD) -ldw
  
++<<<<<<< HEAD
 +test-libnuma:
 +	$(BUILD) -lnuma
 +
 +-include *.d */*.d
++=======
+ test-libelf-mmap.bin:
+ 	$(BUILD) -lelf
+ 
+ test-libelf-getphdrnum.bin:
+ 	$(BUILD) -lelf
+ 
+ test-libnuma.bin:
+ 	$(BUILD) -lnuma
+ 
+ test-libunwind.bin:
+ 	$(BUILD) -lelf
+ 
+ test-libunwind-debug-frame.bin:
+ 	$(BUILD) -lelf
+ 
+ test-libaudit.bin:
+ 	$(BUILD) -laudit
+ 
+ test-libslang.bin:
+ 	$(BUILD) -I/usr/include/slang -lslang
+ 
+ test-gtk2.bin:
+ 	$(BUILD) $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null)
+ 
+ test-gtk2-infobar.bin:
+ 	$(BUILD) $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null)
+ 
+ grep-libs  = $(filter -l%,$(1))
+ strip-libs = $(filter-out -l%,$(1))
+ 
+ PERL_EMBED_LDOPTS = $(shell perl -MExtUtils::Embed -e ldopts 2>/dev/null)
+ PERL_EMBED_LDFLAGS = $(call strip-libs,$(PERL_EMBED_LDOPTS))
+ PERL_EMBED_LIBADD = $(call grep-libs,$(PERL_EMBED_LDOPTS))
+ PERL_EMBED_CCOPTS = `perl -MExtUtils::Embed -e ccopts 2>/dev/null`
+ FLAGS_PERL_EMBED=$(PERL_EMBED_CCOPTS) $(PERL_EMBED_LDOPTS)
+ 
+ test-libperl.bin:
+ 	$(BUILD) $(FLAGS_PERL_EMBED)
+ 
+ override PYTHON := python
+ override PYTHON_CONFIG := python-config
+ 
+ escape-for-shell-sq =  $(subst ','\'',$(1))
+ shell-sq = '$(escape-for-shell-sq)'
+ 
+ PYTHON_CONFIG_SQ = $(call shell-sq,$(PYTHON_CONFIG))
+ 
+ PYTHON_EMBED_LDOPTS = $(shell $(PYTHON_CONFIG_SQ) --ldflags 2>/dev/null)
+ PYTHON_EMBED_LDFLAGS = $(call strip-libs,$(PYTHON_EMBED_LDOPTS))
+ PYTHON_EMBED_LIBADD = $(call grep-libs,$(PYTHON_EMBED_LDOPTS))
+ PYTHON_EMBED_CCOPTS = $(shell $(PYTHON_CONFIG_SQ) --cflags 2>/dev/null)
+ FLAGS_PYTHON_EMBED = $(PYTHON_EMBED_CCOPTS) $(PYTHON_EMBED_LDOPTS)
+ 
+ test-libpython.bin:
+ 	$(BUILD) $(FLAGS_PYTHON_EMBED)
+ 
+ test-libpython-version.bin:
+ 	$(BUILD) $(FLAGS_PYTHON_EMBED)
+ 
+ test-libbfd.bin:
+ 	$(BUILD) -DPACKAGE='"perf"' -lbfd -ldl
+ 
+ test-liberty.bin:
+ 	$(CC) -o $(OUTPUT)$@ test-libbfd.c -DPACKAGE='"perf"' -lbfd -ldl -liberty
+ 
+ test-liberty-z.bin:
+ 	$(CC) -o $(OUTPUT)$@ test-libbfd.c -DPACKAGE='"perf"' -lbfd -ldl -liberty -lz
+ 
+ test-cplus-demangle.bin:
+ 	$(BUILD) -liberty
+ 
+ test-on-exit.bin:
+ 	$(BUILD)
+ 
+ test-backtrace.bin:
+ 	$(BUILD)
+ 
+ test-timerfd.bin:
+ 	$(BUILD)
+ 
+ -include *.d
++>>>>>>> 56560ec692c1 (perf config: Ignore generated files in feature-checks)
  
  ###############################
  
* Unmerged path tools/perf/config/Makefile
diff --git a/tools/perf/config/feature-checks/.gitignore b/tools/perf/config/feature-checks/.gitignore
new file mode 100644
index 000000000000..80f3da0c3515
--- /dev/null
+++ b/tools/perf/config/feature-checks/.gitignore
@@ -0,0 +1,2 @@
+*.d
+*.bin
* Unmerged path tools/perf/config/feature-checks/Makefile
