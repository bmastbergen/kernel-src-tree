ALSA: hda - move alloc_cmd_io to hda_controller

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [alsa] hda: move alloc_cmd_io to hda_controller (Jaroslav Kysela) [1112200]
Rebuild_FUZZ: 89.66%
commit-author Dylan Reid <dgreid@chromium.org>
commit f19c3ec21bef658b48df78c82cec7fd78681d653
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f19c3ec2.failed

Combining the call to alloc_cmd_io with the allocate pages function
removes an extra interface between hda_intel and hda_controller.

	Signed-off-by: Dylan Reid <dgreid@chromium.org>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit f19c3ec21bef658b48df78c82cec7fd78681d653)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/hda_controller.c
#	sound/pci/hda/hda_controller.h
#	sound/pci/hda/hda_intel.c
diff --cc sound/pci/hda/hda_intel.c
index f803cf3b4c64,3d6ccb8ef86e..000000000000
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@@ -3355,29 -1806,7 +3355,33 @@@ static int azx_first_init(struct azx *c
  		return -ENOMEM;
  	}
  
++<<<<<<< HEAD
 +	for (i = 0; i < chip->num_streams; i++) {
 +		dsp_lock_init(&chip->azx_dev[i]);
 +		/* allocate memory for the BDL for each stream */
 +		err = snd_dma_alloc_pages(SNDRV_DMA_TYPE_DEV,
 +					  chip->card->dev,
 +					  BDL_SIZE, &chip->azx_dev[i].bdl);
 +		if (err < 0) {
 +			snd_printk(KERN_ERR SFX "%s: cannot allocate BDL\n", pci_name(chip->pci));
 +			return -ENOMEM;
 +		}
 +		mark_pages_wc(chip, &chip->azx_dev[i].bdl, true);
 +	}
 +	/* allocate memory for the position buffer */
 +	err = snd_dma_alloc_pages(SNDRV_DMA_TYPE_DEV,
 +				  chip->card->dev,
 +				  chip->num_streams * 8, &chip->posbuf);
 +	if (err < 0) {
 +		snd_printk(KERN_ERR SFX "%s: cannot allocate posbuf\n", pci_name(chip->pci));
 +		return -ENOMEM;
 +	}
 +	mark_pages_wc(chip, &chip->posbuf, true);
 +	/* allocate CORB/RIRB */
 +	err = azx_alloc_cmd_io(chip);
++=======
+ 	err = azx_alloc_stream_pages(chip);
++>>>>>>> f19c3ec21bef (ALSA: hda - move alloc_cmd_io to hda_controller)
  	if (err < 0)
  		return err;
  
* Unmerged path sound/pci/hda/hda_controller.c
* Unmerged path sound/pci/hda/hda_controller.h
* Unmerged path sound/pci/hda/hda_controller.c
* Unmerged path sound/pci/hda/hda_controller.h
* Unmerged path sound/pci/hda/hda_intel.c
