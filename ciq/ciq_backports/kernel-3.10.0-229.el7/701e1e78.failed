drm/radeon: properly document reloc priority mask

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] radeon: properly document reloc priority mask (Rob Clark) [1173317]
Rebuild_FUZZ: 95.74%
commit-author Christian König <christian.koenig@amd.com>
commit 701e1e789142042144c8cc10b8f6d1554e960144
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/701e1e78.failed

Instead of hard coding the value properly document
that this is an userspace interface.

No intended functional change.

	Signed-off-by: Christian König <christian.koenig@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 701e1e789142042144c8cc10b8f6d1554e960144)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/radeon/radeon_cs.c
diff --cc drivers/gpu/drm/radeon/radeon_cs.c
index 80285e35bc65,cb12df784d83..000000000000
--- a/drivers/gpu/drm/radeon/radeon_cs.c
+++ b/drivers/gpu/drm/radeon/radeon_cs.c
@@@ -78,8 -125,15 +78,20 @@@ static int radeon_cs_parser_relocs(stru
  		}
  		p->relocs_ptr[i] = &p->relocs[i];
  		p->relocs[i].robj = gem_to_radeon_bo(p->relocs[i].gobj);
++<<<<<<< HEAD
 +		p->relocs[i].lobj.bo = p->relocs[i].robj;
 +		p->relocs[i].lobj.written = !!r->write_domain;
++=======
+ 
+ 		/* The userspace buffer priorities are from 0 to 15. A higher
+ 		 * number means the buffer is more important.
+ 		 * Also, the buffers used for write have a higher priority than
+ 		 * the buffers used for read only, which doubles the range
+ 		 * to 0 to 31. 32 is reserved for the kernel driver.
+ 		 */
+ 		priority = (r->flags & RADEON_RELOC_PRIO_MASK) * 2
+ 			   + !!r->write_domain;
++>>>>>>> 701e1e789142 (drm/radeon: properly document reloc priority mask)
  
  		/* the first reloc of an UVD job is the msg and that must be in
  		   VRAM, also but everything into VRAM on AGP cards to avoid
* Unmerged path drivers/gpu/drm/radeon/radeon_cs.c
diff --git a/include/uapi/drm/radeon_drm.h b/include/uapi/drm/radeon_drm.h
index a71442bd7ec9..3577ddaa5aec 100644
--- a/include/uapi/drm/radeon_drm.h
+++ b/include/uapi/drm/radeon_drm.h
@@ -929,6 +929,7 @@ struct drm_radeon_cs_chunk {
 };
 
 /* drm_radeon_cs_reloc.flags */
+#define RADEON_RELOC_PRIO_MASK		(0xf << 0)
 
 struct drm_radeon_cs_reloc {
 	uint32_t		handle;
