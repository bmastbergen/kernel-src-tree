KVM: PPC: BOOK3S: PR: Enable Little Endian PR guest

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/ppc: book3s/pr - Enable Little Endian PR guest (David Gibson) [1123145 1123133 1123367]
Rebuild_FUZZ: 91.09%
commit-author Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
commit e5ee5422f8867d8b8108f8e1f0f47dc59b043f5b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e5ee5422.failed

This patch make sure we inherit the LE bit correctly in different case
so that we can run Little Endian distro in PR mode

	Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit e5ee5422f8867d8b8108f8e1f0f47dc59b043f5b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_pr.c
diff --cc arch/powerpc/kvm/book3s_pr.c
index f1ca7598818d,8c05cb5877a9..000000000000
--- a/arch/powerpc/kvm/book3s_pr.c
+++ b/arch/powerpc/kvm/book3s_pr.c
@@@ -1107,7 -1127,16 +1116,20 @@@ int kvmppc_get_one_reg(struct kvm_vcpu 
  	return r;
  }
  
++<<<<<<< HEAD
 +int kvmppc_set_one_reg(struct kvm_vcpu *vcpu, u64 id, union kvmppc_one_reg *val)
++=======
+ static void kvmppc_set_lpcr_pr(struct kvm_vcpu *vcpu, u64 new_lpcr)
+ {
+ 	if (new_lpcr & LPCR_ILE)
+ 		vcpu->arch.intr_msr |= MSR_LE;
+ 	else
+ 		vcpu->arch.intr_msr &= ~MSR_LE;
+ }
+ 
+ static int kvmppc_set_one_reg_pr(struct kvm_vcpu *vcpu, u64 id,
+ 				 union kvmppc_one_reg *val)
++>>>>>>> e5ee5422f886 (KVM: PPC: BOOK3S: PR: Enable Little Endian PR guest)
  {
  	int r = 0;
  
diff --git a/arch/powerpc/include/asm/kvm_host.h b/arch/powerpc/include/asm/kvm_host.h
index db69ef15e5ee..1ce4546bdbd1 100644
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@ -528,6 +528,7 @@ struct kvm_vcpu_arch {
 #ifdef CONFIG_PPC_BOOK3S
 	ulong fault_dar;
 	u32 fault_dsisr;
+	unsigned long intr_msr;
 #endif
 
 #ifdef CONFIG_BOOKE
diff --git a/arch/powerpc/kernel/asm-offsets.c b/arch/powerpc/kernel/asm-offsets.c
index 79fa5c26d629..2f052124be67 100644
--- a/arch/powerpc/kernel/asm-offsets.c
+++ b/arch/powerpc/kernel/asm-offsets.c
@@ -509,6 +509,7 @@ int main(void)
 	DEFINE(VCPU_SLB_NR, offsetof(struct kvm_vcpu, arch.slb_nr));
 	DEFINE(VCPU_FAULT_DSISR, offsetof(struct kvm_vcpu, arch.fault_dsisr));
 	DEFINE(VCPU_FAULT_DAR, offsetof(struct kvm_vcpu, arch.fault_dar));
+	DEFINE(VCPU_INTR_MSR, offsetof(struct kvm_vcpu, arch.intr_msr));
 	DEFINE(VCPU_LAST_INST, offsetof(struct kvm_vcpu, arch.last_inst));
 	DEFINE(VCPU_TRAP, offsetof(struct kvm_vcpu, arch.trap));
 	DEFINE(VCPU_PTID, offsetof(struct kvm_vcpu, arch.ptid));
diff --git a/arch/powerpc/kvm/book3s_64_mmu.c b/arch/powerpc/kvm/book3s_64_mmu.c
index 83da1f868fd5..8231b83c493b 100644
--- a/arch/powerpc/kvm/book3s_64_mmu.c
+++ b/arch/powerpc/kvm/book3s_64_mmu.c
@@ -38,7 +38,7 @@
 
 static void kvmppc_mmu_book3s_64_reset_msr(struct kvm_vcpu *vcpu)
 {
-	kvmppc_set_msr(vcpu, MSR_SF);
+	kvmppc_set_msr(vcpu, vcpu->arch.intr_msr);
 }
 
 static struct kvmppc_slb *kvmppc_mmu_book3s_64_find_slbe(
* Unmerged path arch/powerpc/kvm/book3s_pr.c
