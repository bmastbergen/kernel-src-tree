blk-mq: initialize q->nr_requests after calling blk_queue_make_request()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jens Axboe <axboe@fb.com>
commit eba7176826ddab1d04c51bb2d5f2bbf22865444c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/eba71768.failed

blk_queue_make_requests() overwrites our set value for q->nr_requests,
turning it into the default of 128. Set this appropriately after
initializing queue values in blk_queue_make_request().

	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit eba7176826ddab1d04c51bb2d5f2bbf22865444c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index 16306cf3ce81,fec8fcc4f8a4..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -1357,18 -1619,24 +1357,28 @@@ struct request_queue *blk_mq_init_queue
  	q->sg_reserved_size = INT_MAX;
  
  	blk_queue_make_request(q, blk_mq_make_request);
 -	blk_queue_rq_timed_out(q, blk_mq_rq_timed_out);
 -	if (set->timeout)
 -		blk_queue_rq_timeout(q, set->timeout);
 -
 +	blk_queue_rq_timed_out(q, reg->ops->timeout);
 +	if (reg->timeout)
 +		blk_queue_rq_timeout(q, reg->timeout);
 +
++<<<<<<< HEAD
 +	if (reg->ops->complete)
 +		blk_queue_softirq_done(q, reg->ops->complete);
++=======
+ 	/*
+ 	 * Do this after blk_queue_make_request() overrides it...
+ 	 */
+ 	q->nr_requests = set->queue_depth;
+ 
+ 	if (set->ops->complete)
+ 		blk_queue_softirq_done(q, set->ops->complete);
++>>>>>>> eba7176826dd (blk-mq: initialize q->nr_requests after calling blk_queue_make_request())
  
  	blk_mq_init_flush(q);
 -	blk_mq_init_cpu_queues(q, set->nr_hw_queues);
 +	blk_mq_init_cpu_queues(q, reg->nr_hw_queues);
  
 -	q->flush_rq = kzalloc(round_up(sizeof(struct request) +
 -				set->cmd_size, cache_line_size()),
 -				GFP_KERNEL);
 +	q->flush_rq = kzalloc(round_up(sizeof(struct request) + reg->cmd_size,
 +				cache_line_size()), GFP_KERNEL);
  	if (!q->flush_rq)
  		goto err_hw;
  
* Unmerged path block/blk-mq.c
