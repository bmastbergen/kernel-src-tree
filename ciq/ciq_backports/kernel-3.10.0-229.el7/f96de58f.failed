drm/i915: Handle failure to kick out a conflicting fb driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [drm] i915: Handle failure to kick out a conflicting fb driver (Rob Clark) [1173317]
Rebuild_FUZZ: 96.55%
commit-author Chris Wilson <chris@chris-wilson.co.uk>
commit f96de58fc7e7d3d717c7c63975c3b896c906b5e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/f96de58f.failed

	Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit f96de58fc7e7d3d717c7c63975c3b896c906b5e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_dma.c
diff --cc drivers/gpu/drm/i915/i915_dma.c
index 661cf9b87340,eb3d9c0b83dd..000000000000
--- a/drivers/gpu/drm/i915/i915_dma.c
+++ b/drivers/gpu/drm/i915/i915_dma.c
@@@ -1406,7 -1426,8 +1406,12 @@@ void i915_master_destroy(struct drm_dev
  	master->driver_priv = NULL;
  }
  
++<<<<<<< HEAD
 +static void i915_kick_out_firmware_fb(struct drm_i915_private *dev_priv)
++=======
+ #if IS_ENABLED(CONFIG_FB)
+ static int i915_kick_out_firmware_fb(struct drm_i915_private *dev_priv)
++>>>>>>> f96de58fc7e7 (drm/i915: Handle failure to kick out a conflicting fb driver)
  {
  	struct apertures_struct *ap;
  	struct pci_dev *pdev = dev_priv->dev->pdev;
@@@ -1422,10 -1444,50 +1428,53 @@@
  	primary =
  		pdev->resource[PCI_ROM_RESOURCE].flags & IORESOURCE_ROM_SHADOW;
  
- 	remove_conflicting_framebuffers(ap, "inteldrmfb", primary);
+ 	ret = remove_conflicting_framebuffers(ap, "inteldrmfb", primary);
  
  	kfree(ap);
+ 
+ 	return ret;
+ }
++<<<<<<< HEAD
++=======
+ #else
+ static int i915_kick_out_firmware_fb(struct drm_i915_private *dev_priv)
+ {
+ 	return 0;
+ }
+ #endif
+ 
+ #if !defined(CONFIG_VGA_CONSOLE)
+ static int i915_kick_out_vgacon(struct drm_i915_private *dev_priv)
+ {
+ 	return 0;
+ }
+ #elif !defined(CONFIG_DUMMY_CONSOLE)
+ static int i915_kick_out_vgacon(struct drm_i915_private *dev_priv)
+ {
+ 	return -ENODEV;
+ }
+ #else
+ static int i915_kick_out_vgacon(struct drm_i915_private *dev_priv)
+ {
+ 	int ret;
+ 
+ 	DRM_INFO("Replacing VGA console driver\n");
+ 
+ 	console_lock();
+ 	ret = do_take_over_console(&dummy_con, 0, MAX_NR_CONSOLES - 1, 1);
+ 	if (ret == 0) {
+ 		ret = do_unregister_con_driver(&vga_con);
+ 
+ 		/* Ignore "already unregistered". */
+ 		if (ret == -ENODEV)
+ 			ret = 0;
+ 	}
+ 	console_unlock();
+ 
+ 	return ret;
  }
+ #endif
++>>>>>>> f96de58fc7e7 (drm/i915: Handle failure to kick out a conflicting fb driver)
  
  static void i915_dump_device_info(struct drm_i915_private *dev_priv)
  {
@@@ -1551,10 -1662,21 +1600,19 @@@ int i915_driver_load(struct drm_device 
  
  	ret = i915_gem_gtt_init(dev);
  	if (ret)
 -		goto out_regs;
 -
 -	if (drm_core_check_feature(dev, DRIVER_MODESET)) {
 -		ret = i915_kick_out_vgacon(dev_priv);
 -		if (ret) {
 -			DRM_ERROR("failed to remove conflicting VGA console\n");
 -			goto out_gtt;
 -		}
 +		goto put_bridge;
  
++<<<<<<< HEAD
 +	if (drm_core_check_feature(dev, DRIVER_MODESET))
 +		i915_kick_out_firmware_fb(dev_priv);
++=======
+ 		ret = i915_kick_out_firmware_fb(dev_priv);
+ 		if (ret) {
+ 			DRM_ERROR("failed to remove conflicting framebuffer drivers\n");
+ 			goto out_gtt;
+ 		}
+ 	}
++>>>>>>> f96de58fc7e7 (drm/i915: Handle failure to kick out a conflicting fb driver)
  
  	pci_set_master(dev->pdev);
  
* Unmerged path drivers/gpu/drm/i915/i915_dma.c
