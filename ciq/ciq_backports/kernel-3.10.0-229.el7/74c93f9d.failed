x86/uv/nmi: Fix Sparse warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [x86] uv/nmi: Fix Sparse warnings (George Beshers) [1138519]
Rebuild_FUZZ: 93.10%
commit-author Mike Travis <travis@sgi.com>
commit 74c93f9d39b556ff9ac2340d568ad5caf8446c65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/74c93f9d.failed

Make uv_register_nmi_notifier() and uv_handle_nmi_ping() static
to address sparse warnings.

Fix problem where uv_nmi_kexec_failed is unused when
CONFIG_KEXEC is not defined.

	Signed-off-by: Mike Travis <travis@sgi.com>
	Reviewed-by: Hedi Berriche <hedi@sgi.com>
	Cc: Russ Anderson <rja@sgi.com>
	Cc: Jason Wessel <jason.wessel@windriver.com>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
Link: http://lkml.kernel.org/r/20140114162551.480872353@asylum.americas.sgi.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 74c93f9d39b556ff9ac2340d568ad5caf8446c65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/platform/uv/uv_nmi.c
diff --cc arch/x86/platform/uv/uv_nmi.c
index d61dfb77d1c5,3a3c425275a0..000000000000
--- a/arch/x86/platform/uv/uv_nmi.c
+++ b/arch/x86/platform/uv/uv_nmi.c
@@@ -694,8 -694,6 +694,11 @@@ void uv_nmi_setup(void
  		}
  		uv_hub_nmi_per(cpu) = uv_hub_nmi_list[nid];
  	}
++<<<<<<< HEAD
 +	alloc_cpumask_var(&uv_nmi_cpu_mask, GFP_KERNEL);
 +	BUG_ON(!uv_nmi_cpu_mask);
++=======
+ 	BUG_ON(!alloc_cpumask_var(&uv_nmi_cpu_mask, GFP_KERNEL));
+ 	uv_register_nmi_notifier();
++>>>>>>> 74c93f9d39b5 (x86/uv/nmi: Fix Sparse warnings)
  }
- 
- 
diff --git a/arch/x86/include/asm/uv/uv.h b/arch/x86/include/asm/uv/uv.h
index 6b964a0b86d1..062921ef34e9 100644
--- a/arch/x86/include/asm/uv/uv.h
+++ b/arch/x86/include/asm/uv/uv.h
@@ -12,7 +12,6 @@ extern enum uv_system_type get_uv_system_type(void);
 extern int is_uv_system(void);
 extern void uv_cpu_init(void);
 extern void uv_nmi_init(void);
-extern void uv_register_nmi_notifier(void);
 extern void uv_system_init(void);
 extern const struct cpumask *uv_flush_tlb_others(const struct cpumask *cpumask,
 						 struct mm_struct *mm,
@@ -26,7 +25,6 @@ static inline enum uv_system_type get_uv_system_type(void) { return UV_NONE; }
 static inline int is_uv_system(void)	{ return 0; }
 static inline void uv_cpu_init(void)	{ }
 static inline void uv_system_init(void)	{ }
-static inline void uv_register_nmi_notifier(void) { }
 static inline const struct cpumask *
 uv_flush_tlb_others(const struct cpumask *cpumask, struct mm_struct *mm,
 		    unsigned long start, unsigned long end, unsigned int cpu)
diff --git a/arch/x86/kernel/apic/x2apic_uv_x.c b/arch/x86/kernel/apic/x2apic_uv_x.c
index 4176d9a75576..c10fe324057d 100644
--- a/arch/x86/kernel/apic/x2apic_uv_x.c
+++ b/arch/x86/kernel/apic/x2apic_uv_x.c
@@ -996,7 +996,6 @@ void __init uv_system_init(void)
 	uv_nmi_setup();
 	uv_cpu_init();
 	uv_scir_register_cpu_notifier();
-	uv_register_nmi_notifier();
 	proc_mkdir("sgi_uv", NULL);
 
 	/* register Legacy VGA I/O redirection handler */
* Unmerged path arch/x86/platform/uv/uv_nmi.c
