qlcnic: Enhance Tx timeout debugging.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [ethernet] qlcnic: Enhance Tx timeout debugging (Chad Dupuis) [1089352]
Rebuild_FUZZ: 98.63%
commit-author Himanshu Madhani <himanshu.madhani@qlogic.com>
commit 95b3890ae39f60ad1d446b02f9439d12f01066be
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/95b3890a.failed

o Dump each Tx queue details with all descriptors, queue indices
  and Tx queue stats to imporve data colletion in situations
  where Tx timeout occurs.

	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 95b3890ae39f60ad1d446b02f9439d12f01066be)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
index ecd8d1df8016,39b631049b77..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
@@@ -2720,22 -2811,7 +2766,26 @@@ static void qlcnic_tx_timeout(struct ne
  						      QLCNIC_FORCE_FW_DUMP_KEY);
  	} else {
  		netdev_info(netdev, "Tx timeout, reset adapter context.\n");
++<<<<<<< HEAD
 +		for (ring = 0; ring < adapter->max_drv_tx_rings; ring++) {
 +			tx_ring = &adapter->tx_ring[ring];
 +			netdev_info(netdev, "Tx ring=%d\n", ring);
 +			netdev_info(netdev,
 +				    "crb_intr_mask=%d, producer=%d, sw_consumer=%d, hw_consumer=%d\n",
 +				    readl(tx_ring->crb_intr_mask),
 +				    readl(tx_ring->crb_cmd_producer),
 +				    tx_ring->sw_consumer,
 +				    le32_to_cpu(*(tx_ring->hw_consumer)));
 +			netdev_info(netdev,
 +				    "xmit_finished=%llu, xmit_called=%llu, xmit_on=%llu, xmit_off=%llu\n",
 +				    tx_ring->tx_stats.xmit_finished,
 +				    tx_ring->tx_stats.xmit_called,
 +				    tx_ring->tx_stats.xmit_on,
 +				    tx_ring->tx_stats.xmit_off);
 +		}
++=======
+ 		qlcnic_dump_tx_rings(adapter);
++>>>>>>> 95b3890ae39f (qlcnic: Enhance Tx timeout debugging.)
  		adapter->ahw->reset_context = 1;
  	}
  }
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c
index 3336ea68efae..7e52870b2e06 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_init.c
@@ -380,7 +380,7 @@ static int qlcnic_83xx_idc_tx_soft_reset(struct qlcnic_adapter *adapter)
 	qlcnic_up(adapter, netdev);
 	netif_device_attach(netdev);
 	clear_bit(__QLCNIC_RESETTING, &adapter->state);
-	dev_err(&adapter->pdev->dev, "%s:\n", __func__);
+	netdev_info(adapter->netdev, "%s: soft reset complete.\n", __func__);
 
 	return 0;
 }
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
