perf x86: Fix perf to use non-executable stack, again

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/x86: Fix perf to use non-executable stack, again (Jiri Olsa) [1134356]
Rebuild_FUZZ: 98.11%
commit-author Mathias Krause <minipli@googlemail.com>
commit 6392b4ebdc1acfbed605d68c437ff5597d0a8d95
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/6392b4eb.failed

arch/x86/tests/regs_load.S is missing the linker note about the stack
requirements, therefore making the linker fall back to an executable
stack. As this object gets linked against the final perf binary, it'll
needlessly end up with an executable stack. Fix this by adding the
appropriate linker note.

Also add a global linker flag to prevent future regressions, as
suggested by Jiri. This way perf won't get an executable stack even if
we fail to add the .GNU-stack linker note to future assembler files.
Though, doing so might create regressions the other way around, when
(statically) linking against libraries needing an executable stack.
But, apparently, regressing in that direction is wanted as it is an
indicator of poor code quality -- or just missing linker notes.

Fixes: 3c8b06f981 ("perf tests x86: Introduce perf_regs_load function")

	Signed-off-by: Mathias Krause <minipli@googlemail.com>
	Acked-by: Ingo Molnar <mingo@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1398617466-22749-1-git-send-email-minipli@googlemail.com
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit 6392b4ebdc1acfbed605d68c437ff5597d0a8d95)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/arch/x86/tests/regs_load.S
* Unmerged path tools/perf/arch/x86/tests/regs_load.S
* Unmerged path tools/perf/arch/x86/tests/regs_load.S
diff --git a/tools/perf/config/Makefile b/tools/perf/config/Makefile
index 8a0483155189..8160d993b94e 100644
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@ -87,6 +87,10 @@ CFLAGS += -Wall
 CFLAGS += -Wextra
 CFLAGS += -std=gnu99
 
+# Enforce a non-executable stack, as we may regress (again) in the future by
+# adding assembler files missing the .GNU-stack linker note.
+LDFLAGS += -Wl,-z,noexecstack
+
 EXTLIBS = -lelf -lpthread -lrt -lm -ldl
 
 feature_check = $(eval $(feature_check_code))
