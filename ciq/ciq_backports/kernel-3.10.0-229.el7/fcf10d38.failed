GFS2: replace kmalloc - __vmalloc / memset 0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Fabian Frederick <fabf@skynet.be>
commit fcf10d38afd2d39d08bf76c48ff9c12345770678
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/fcf10d38.failed

Use kzalloc and __vmalloc __GFP_ZERO for clean sd_quota_bitmap allocation.

	Signed-off-by: Fabian Frederick <fabf@skynet.be>
	Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>
(cherry picked from commit fcf10d38afd2d39d08bf76c48ff9c12345770678)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/quota.c
diff --cc fs/gfs2/quota.c
index 679b366e073c,a5cccf694e3f..000000000000
--- a/fs/gfs2/quota.c
+++ b/fs/gfs2/quota.c
@@@ -1221,23 -1239,19 +1221,33 @@@ int gfs2_quota_init(struct gfs2_sbd *sd
  		return -EIO;
  
  	sdp->sd_quota_slots = blocks * sdp->sd_qc_per_block;
 -	bm_size = DIV_ROUND_UP(sdp->sd_quota_slots, 8 * sizeof(unsigned long));
 -	bm_size *= sizeof(unsigned long);
 +	sdp->sd_quota_chunks = DIV_ROUND_UP(sdp->sd_quota_slots, 8 * PAGE_SIZE);
 +
  	error = -ENOMEM;
++<<<<<<< HEAD
 +
 +	sdp->sd_quota_bitmap = kcalloc(sdp->sd_quota_chunks,
 +				       sizeof(unsigned char *), GFP_NOFS);
 +	if (!sdp->sd_quota_bitmap)
 +		return error;
 +
 +	for (x = 0; x < sdp->sd_quota_chunks; x++) {
 +		sdp->sd_quota_bitmap[x] = kzalloc(PAGE_SIZE, GFP_NOFS);
 +		if (!sdp->sd_quota_bitmap[x])
 +			goto fail;
 +	}
 +
++=======
+ 	sdp->sd_quota_bitmap = kzalloc(bm_size, GFP_NOFS | __GFP_NOWARN);
+ 	if (sdp->sd_quota_bitmap == NULL)
+ 		sdp->sd_quota_bitmap = __vmalloc(bm_size, GFP_NOFS |
+ 						 __GFP_ZERO, PAGE_KERNEL);
+ 	if (!sdp->sd_quota_bitmap)
+ 		return error;
+ 
++>>>>>>> fcf10d38afd2 (GFS2: replace kmalloc - __vmalloc / memset 0)
  	for (x = 0; x < blocks; x++) {
  		struct buffer_head *bh;
 -		const struct gfs2_quota_change *qc;
  		unsigned int y;
  
  		if (!extlen) {
* Unmerged path fs/gfs2/quota.c
