target/rd: Refactor rd_build_device_space + rd_release_device_space

jira LE-1907
cve CVE-2014-4027
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [target] rd: Refactor rd_build_device_space + rd_release_device_space (Denys Vlasenko) [1108755] {CVE-2014-4027}
Rebuild_FUZZ: 94.49%
commit-author Nicholas Bellinger <nab@linux-iscsi.org>
commit 4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/4442dc8a.failed

This patch refactors rd_build_device_space() + rd_release_device_space()
into rd_allocate_sgl_table() + rd_release_device_space() so that they
may be used seperatly for setup + release of protection information
scatterlists.

Also add explicit memset of pages within rd_allocate_sgl_table() based
upon passed 'init_payload' value.

v2 changes:
  - Drop unused sg_table from rd_release_device_space (Wei)

	Cc: Martin K. Petersen <martin.petersen@oracle.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Hannes Reinecke <hare@suse.de>
	Cc: Sagi Grimberg <sagig@mellanox.com>
	Cc: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_rd.c
diff --cc drivers/target/target_core_rd.c
index 0921a64b5550,e9fa879ac27f..000000000000
--- a/drivers/target/target_core_rd.c
+++ b/drivers/target/target_core_rd.c
@@@ -125,33 -127,15 +128,37 @@@ static void rd_release_device_space(str
   *
   *
   */
- static int rd_build_device_space(struct rd_dev *rd_dev)
+ static int rd_allocate_sgl_table(struct rd_dev *rd_dev, struct rd_dev_sg_table *sg_table,
+ 				 u32 total_sg_needed, unsigned char init_payload)
  {
- 	u32 i = 0, j, page_offset = 0, sg_per_table, sg_tables, total_sg_needed;
+ 	u32 i = 0, j, page_offset = 0, sg_per_table;
  	u32 max_sg_per_table = (RD_MAX_ALLOCATION_SIZE /
  				sizeof(struct scatterlist));
- 	struct rd_dev_sg_table *sg_table;
  	struct page *pg;
  	struct scatterlist *sg;
++<<<<<<< HEAD
 +
 +	if (rd_dev->rd_page_count <= 0) {
 +		pr_err("Illegal page count: %u for Ramdisk device\n",
 +			rd_dev->rd_page_count);
 +		return -EINVAL;
 +	}
 +	total_sg_needed = rd_dev->rd_page_count;
 +
 +	sg_tables = (total_sg_needed / max_sg_per_table) + 1;
 +
 +	sg_table = kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL);
 +	if (!sg_table) {
 +		pr_err("Unable to allocate memory for Ramdisk"
 +			" scatterlist tables\n");
 +		return -ENOMEM;
 +	}
 +
 +	rd_dev->sg_table_array = sg_table;
 +	rd_dev->sg_table_count = sg_tables;
++=======
+ 	unsigned char *p;
++>>>>>>> 4442dc8a92b8 (target/rd: Refactor rd_build_device_space + rd_release_device_space)
  
  	while (total_sg_needed) {
  		sg_per_table = (total_sg_needed > max_sg_per_table) ?
* Unmerged path drivers/target/target_core_rd.c
