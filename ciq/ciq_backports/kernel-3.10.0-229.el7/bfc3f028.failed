cputime: Default implementation of nsecs -> cputime conversion

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Frederic Weisbecker <fweisbec@gmail.com>
commit bfc3f0281e08066fa8111c3972cff6edc1049864
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/bfc3f028.failed

The architectures that override cputime_t (s390, ppc) don't provide
any version of nsecs_to_cputime(). Indeed this cputime_t implementation
by backend only happens when CONFIG_VIRT_CPU_ACCOUNTING_NATIVE=y under
which the core code doesn't make any use of nsecs_to_cputime().

At least for now.

We are going to make a broader use of it so lets provide a default
version with a per usecs granularity. It should be good enough for most
usecases.

	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Marcelo Tosatti <mtosatti@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Rik van Riel <riel@redhat.com>
	Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
(cherry picked from commit bfc3f0281e08066fa8111c3972cff6edc1049864)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cpufreq_stats.c
diff --cc drivers/cpufreq/cpufreq_stats.c
index d37568c5ca9c,79911a27a48a..000000000000
--- a/drivers/cpufreq/cpufreq_stats.c
+++ b/drivers/cpufreq/cpufreq_stats.c
@@@ -9,18 -9,11 +9,23 @@@
   * published by the Free Software Foundation.
   */
  
 +#include <linux/kernel.h>
 +#include <linux/slab.h>
  #include <linux/cpu.h>
 +#include <linux/sysfs.h>
  #include <linux/cpufreq.h>
  #include <linux/module.h>
++<<<<<<< HEAD
 +#include <linux/jiffies.h>
 +#include <linux/percpu.h>
 +#include <linux/kobject.h>
 +#include <linux/spinlock.h>
 +#include <linux/notifier.h>
 +#include <asm/cputime.h>
++=======
+ #include <linux/slab.h>
+ #include <linux/cputime.h>
++>>>>>>> bfc3f0281e08 (cputime: Default implementation of nsecs -> cputime conversion)
  
  static spinlock_t cpufreq_stats_lock;
  
* Unmerged path drivers/cpufreq/cpufreq_stats.c
diff --git a/drivers/s390/cio/cio.c b/drivers/s390/cio/cio.c
index 15043785e7ca..174fc177a305 100644
--- a/drivers/s390/cio/cio.c
+++ b/drivers/s390/cio/cio.c
@@ -28,7 +28,7 @@
 #include <asm/chpid.h>
 #include <asm/airq.h>
 #include <asm/isc.h>
-#include <asm/cputime.h>
+#include <linux/cputime.h>
 #include <asm/fcx.h>
 #include <asm/nmi.h>
 #include <asm/crw.h>
diff --git a/fs/proc/stat.c b/fs/proc/stat.c
index 1cf86c0e8689..8f011ac3c1b5 100644
--- a/fs/proc/stat.c
+++ b/fs/proc/stat.c
@@ -9,7 +9,7 @@
 #include <linux/slab.h>
 #include <linux/time.h>
 #include <linux/irqnr.h>
-#include <asm/cputime.h>
+#include <linux/cputime.h>
 #include <linux/tick.h>
 
 #ifndef arch_irq_stat_cpu
diff --git a/fs/proc/uptime.c b/fs/proc/uptime.c
index 9610ac772d7e..5d9dd12af655 100644
--- a/fs/proc/uptime.c
+++ b/fs/proc/uptime.c
@@ -5,7 +5,7 @@
 #include <linux/seq_file.h>
 #include <linux/time.h>
 #include <linux/kernel_stat.h>
-#include <asm/cputime.h>
+#include <linux/cputime.h>
 
 static int uptime_proc_show(struct seq_file *m, void *v)
 {
diff --git a/include/linux/cputime.h b/include/linux/cputime.h
new file mode 100644
index 000000000000..2842ebe2844d
--- /dev/null
+++ b/include/linux/cputime.h
@@ -0,0 +1,11 @@
+#ifndef __LINUX_CPUTIME_H
+#define __LINUX_CPUTIME_H
+
+#include <asm/cputime.h>
+
+#ifndef nsecs_to_cputime
+# define nsecs_to_cputime(__nsecs)	\
+	usecs_to_cputime((__nsecs) / NSEC_PER_USEC)
+#endif
+
+#endif /* __LINUX_CPUTIME_H */
diff --git a/include/linux/kernel_stat.h b/include/linux/kernel_stat.h
index ed5f6ed6eb77..09685d041d2b 100644
--- a/include/linux/kernel_stat.h
+++ b/include/linux/kernel_stat.h
@@ -9,7 +9,7 @@
 #include <linux/sched.h>
 #include <linux/vtime.h>
 #include <asm/irq.h>
-#include <asm/cputime.h>
+#include <linux/cputime.h>
 
 /*
  * 'kernel_stat.h' contains the definitions needed for doing
diff --git a/include/linux/sched.h b/include/linux/sched.h
index 049829c4cf84..e080dd732eda 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -25,7 +25,7 @@ struct sched_param {
 
 #include <asm/page.h>
 #include <asm/ptrace.h>
-#include <asm/cputime.h>
+#include <linux/cputime.h>
 
 #include <linux/smp.h>
 #include <linux/sem.h>
