x86: Tell about irq stack coverage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] Tell about irq stack coverage (Don Zickus) [1127366]
Rebuild_FUZZ: 92.06%
commit-author Frederic Weisbecker <fweisbec@gmail.com>
commit a2cd11f7d58a3a5390ee4cbcd8cff634a4d59173
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/a2cd11f7.failed

x86-64 runs irq_exit() under the irq stack. So it can afford
to run softirqs in hardirq exit without the need to switch
the stacks. The hardirq stack is good enough for that.

Now x86-64 runs softirqs in the hardirq stack anyway, so what we
mostly skip is some needless per cpu refcounting updates there.

x86-32 is not concerned because it only runs the irq handler on
the irq stack.

	Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Paul Mackerras <paulus@au1.ibm.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Paul Mackerras <paulus@au1.ibm.com>
	Cc: James Hogan <james.hogan@imgtec.com>
	Cc: James E.J. Bottomley <jejb@parisc-linux.org>
	Cc: Helge Deller <deller@gmx.de>
	Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
	Cc: David S. Miller <davem@davemloft.net>
	Cc: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit a2cd11f7d58a3a5390ee4cbcd8cff634a4d59173)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
diff --cc arch/x86/Kconfig
index 36b6a88bc87c,99eb1cc30dac..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -122,7 -122,8 +122,12 @@@ config X8
  	select OLD_SIGACTION if X86_32
  	select COMPAT_OLD_SIGACTION if IA32_EMULATION
  	select RTC_LIB
++<<<<<<< HEAD
 +	select HAVE_CC_STACKPROTECTOR
++=======
+ 	select HAVE_DEBUG_STACKOVERFLOW
+ 	select HAVE_IRQ_EXIT_ON_IRQ_STACK if X86_64
++>>>>>>> a2cd11f7d58a (x86: Tell about irq stack coverage)
  
  config INSTRUCTION_DECODER
  	def_bool y
* Unmerged path arch/x86/Kconfig
