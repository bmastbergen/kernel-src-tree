Input: serio - add firmware_id sysfs attribute

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [input] serio: add firmware_id sysfs attribute (Benjamin Tissoires) [1093449]
Rebuild_FUZZ: 88.10%
commit-author Hans de Goede <hdegoede@redhat.com>
commit 0456c66f4e905e1ca839318219c770988b47975c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/0456c66f.failed

serio devices exposed via platform firmware interfaces such as ACPI may
provide additional identifying information of use to userspace.

We don't associate the serio devices with the firmware device (we don't
set it as parent), so there's no way for userspace to make use of this
information.

We cannot change the parent for serio devices instantiated though a
firmware interface as that would break suspend / resume ordering.

Therefore this patch adds a new firmware_id sysfs attribute so that
userspace can get a string from there with any additional identifying
information the firmware interface may provide.

	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
	Acked-by: Peter Hutterer <peter.hutterer@who-t.net>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 0456c66f4e905e1ca839318219c770988b47975c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/serio/serio.c
diff --cc drivers/input/serio/serio.c
index 25fc5971f426,b29134de983b..000000000000
--- a/drivers/input/serio/serio.c
+++ b/drivers/input/serio/serio.c
@@@ -474,14 -451,55 +474,66 @@@ static ssize_t serio_set_bind_mode(stru
  	return retval;
  }
  
++<<<<<<< HEAD
 +static struct device_attribute serio_device_attrs[] = {
 +	__ATTR(description, S_IRUGO, serio_show_description, NULL),
 +	__ATTR(modalias, S_IRUGO, serio_show_modalias, NULL),
 +	__ATTR(drvctl, S_IWUSR, NULL, serio_rebind_driver),
 +	__ATTR(bind_mode, S_IWUSR | S_IRUGO, serio_show_bind_mode, serio_set_bind_mode),
 +	__ATTR_NULL
 +};
 +
++=======
+ static ssize_t firmware_id_show(struct device *dev, struct device_attribute *attr, char *buf)
+ {
+ 	struct serio *serio = to_serio_port(dev);
+ 
+ 	return sprintf(buf, "%s\n", serio->firmware_id);
+ }
+ 
+ static DEVICE_ATTR_RO(type);
+ static DEVICE_ATTR_RO(proto);
+ static DEVICE_ATTR_RO(id);
+ static DEVICE_ATTR_RO(extra);
+ 
+ static struct attribute *serio_device_id_attrs[] = {
+ 	&dev_attr_type.attr,
+ 	&dev_attr_proto.attr,
+ 	&dev_attr_id.attr,
+ 	&dev_attr_extra.attr,
+ 	NULL
+ };
+ 
+ static struct attribute_group serio_id_attr_group = {
+ 	.name	= "id",
+ 	.attrs	= serio_device_id_attrs,
+ };
+ 
+ static DEVICE_ATTR_RO(modalias);
+ static DEVICE_ATTR_WO(drvctl);
+ static DEVICE_ATTR(description, S_IRUGO, serio_show_description, NULL);
+ static DEVICE_ATTR(bind_mode, S_IWUSR | S_IRUGO, serio_show_bind_mode, serio_set_bind_mode);
+ static DEVICE_ATTR_RO(firmware_id);
+ 
+ static struct attribute *serio_device_attrs[] = {
+ 	&dev_attr_modalias.attr,
+ 	&dev_attr_description.attr,
+ 	&dev_attr_drvctl.attr,
+ 	&dev_attr_bind_mode.attr,
+ 	&dev_attr_firmware_id.attr,
+ 	NULL
+ };
+ 
+ static struct attribute_group serio_device_attr_group = {
+ 	.attrs	= serio_device_attrs,
+ };
+ 
+ static const struct attribute_group *serio_device_attr_groups[] = {
+ 	&serio_id_attr_group,
+ 	&serio_device_attr_group,
+ 	NULL
+ };
++>>>>>>> 0456c66f4e90 (Input: serio - add firmware_id sysfs attribute)
  
  static void serio_release_port(struct device *dev)
  {
* Unmerged path drivers/input/serio/serio.c
diff --git a/include/linux/serio.h b/include/linux/serio.h
index 36aac733840a..9f779c7a2da4 100644
--- a/include/linux/serio.h
+++ b/include/linux/serio.h
@@ -23,6 +23,7 @@ struct serio {
 
 	char name[32];
 	char phys[32];
+	char firmware_id[128];
 
 	bool manual_bind;
 
