qlcnic: Interrupt code cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Manish chopra <manish.chopra@qlogic.com>
commit 2cc5752e49d72e955277231e6f462a7f6263aa22
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/2cc5752e.failed

o Added hardware ops for interrupt enable/disable functions

	Signed-off-by: Manish Chopra <manish.chopra@qlogic.com>
	Signed-off-by: Shahed Shaikh <shahed.shaikh@qlogic.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2cc5752e49d72e955277231e6f462a7f6263aa22)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic.h
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
#	drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic.h
index 3c9a8d64fa52,26b53b5543ca..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic.h
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic.h
@@@ -1752,6 -1755,15 +1752,18 @@@ struct qlcnic_hardware_ops 
  					       pci_channel_state_t);
  	pci_ers_result_t (*io_slot_reset) (struct pci_dev *);
  	void (*io_resume) (struct pci_dev *);
++<<<<<<< HEAD
++=======
+ 	void (*get_beacon_state)(struct qlcnic_adapter *);
+ 	void (*enable_sds_intr) (struct qlcnic_adapter *,
+ 				 struct qlcnic_host_sds_ring *);
+ 	void (*disable_sds_intr) (struct qlcnic_adapter *,
+ 				  struct qlcnic_host_sds_ring *);
+ 	void (*enable_tx_intr) (struct qlcnic_adapter *,
+ 				struct qlcnic_host_tx_ring *);
+ 	void (*disable_tx_intr) (struct qlcnic_adapter *,
+ 				 struct qlcnic_host_tx_ring *);
++>>>>>>> 2cc5752e49d7 (qlcnic: Interrupt code cleanup)
  };
  
  extern struct qlcnic_nic_template qlcnic_vf_ops;
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
index f3a48cd31299,f4e267197aa1..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
@@@ -182,6 -198,11 +182,14 @@@ static struct qlcnic_hardware_ops qlcni
  	.io_error_detected		= qlcnic_83xx_io_error_detected,
  	.io_slot_reset			= qlcnic_83xx_io_slot_reset,
  	.io_resume			= qlcnic_83xx_io_resume,
++<<<<<<< HEAD
++=======
+ 	.get_beacon_state		= qlcnic_83xx_get_beacon_state,
+ 	.enable_sds_intr		= qlcnic_83xx_enable_sds_intr,
+ 	.disable_sds_intr		= qlcnic_83xx_disable_sds_intr,
+ 	.enable_tx_intr			= qlcnic_83xx_enable_tx_intr,
+ 	.disable_tx_intr		= qlcnic_83xx_disable_tx_intr,
++>>>>>>> 2cc5752e49d7 (qlcnic: Interrupt code cleanup)
  
  };
  
@@@ -330,21 -350,7 +338,25 @@@ inline void qlcnic_83xx_set_legacy_intr
  		writel(1, adapter->tgt_mask_reg);
  }
  
++<<<<<<< HEAD
 +/* Enable MSI-x and INT-x interrupts */
 +void qlcnic_83xx_enable_intr(struct qlcnic_adapter *adapter,
 +			     struct qlcnic_host_sds_ring *sds_ring)
 +{
 +	writel(0, sds_ring->crb_intr_mask);
 +}
 +
 +/* Disable MSI-x and INT-x interrupts */
 +void qlcnic_83xx_disable_intr(struct qlcnic_adapter *adapter,
 +			      struct qlcnic_host_sds_ring *sds_ring)
 +{
 +	writel(1, sds_ring->crb_intr_mask);
 +}
 +
 +inline void qlcnic_83xx_enable_legacy_msix_mbx_intr(struct qlcnic_adapter
++=======
+ static inline void qlcnic_83xx_enable_legacy_msix_mbx_intr(struct qlcnic_adapter
++>>>>>>> 2cc5752e49d7 (qlcnic: Interrupt code cleanup)
  						    *adapter)
  {
  	u32 mask;
@@@ -1342,9 -1349,9 +1354,9 @@@ static int qlcnic_83xx_diag_alloc_res(s
  	}
  
  	if (adapter->ahw->diag_test == QLCNIC_INTERRUPT_TEST) {
 -		for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  			sds_ring = &adapter->recv_ctx->sds_rings[ring];
- 			qlcnic_83xx_enable_intr(adapter, sds_ring);
+ 			qlcnic_enable_sds_intr(adapter, sds_ring);
  		}
  	}
  
@@@ -1366,10 -1373,10 +1378,10 @@@ static void qlcnic_83xx_diag_free_res(s
  
  	clear_bit(__QLCNIC_DEV_UP, &adapter->state);
  	if (adapter->ahw->diag_test == QLCNIC_INTERRUPT_TEST) {
 -		for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  			sds_ring = &adapter->recv_ctx->sds_rings[ring];
  			if (adapter->flags & QLCNIC_MSIX_ENABLED)
- 				qlcnic_83xx_disable_intr(adapter, sds_ring);
+ 				qlcnic_disable_sds_intr(adapter, sds_ring);
  		}
  	}
  
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
index e2bca36e1fd5,30874cda8476..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
@@@ -124,37 -124,12 +124,43 @@@
  #define qlcnic_83xx_is_ip_align(sts)	(((sts) >> 46) & 1)
  #define qlcnic_83xx_has_vlan_tag(sts)	(((sts) >> 47) & 1)
  
 -static int qlcnic_process_rcv_ring(struct qlcnic_host_sds_ring *sds_ring,
 -				   int max);
 +struct sk_buff *qlcnic_process_rxbuf(struct qlcnic_adapter *,
 +				     struct qlcnic_host_rds_ring *, u16, u16);
  
++<<<<<<< HEAD
 +inline void qlcnic_enable_tx_intr(struct qlcnic_adapter *adapter,
 +				  struct qlcnic_host_tx_ring *tx_ring)
 +{
 +	if (qlcnic_check_multi_tx(adapter) &&
 +	    !adapter->ahw->diag_test)
 +		writel(0x0, tx_ring->crb_intr_mask);
 +}
 +
 +
 +static inline void qlcnic_disable_tx_int(struct qlcnic_adapter *adapter,
 +					 struct qlcnic_host_tx_ring *tx_ring)
 +{
 +	if (qlcnic_check_multi_tx(adapter) &&
 +	    !adapter->ahw->diag_test)
 +		writel(1, tx_ring->crb_intr_mask);
 +}
 +
 +inline void qlcnic_83xx_enable_tx_intr(struct qlcnic_adapter *adapter,
 +				       struct qlcnic_host_tx_ring *tx_ring)
 +{
 +	writel(0, tx_ring->crb_intr_mask);
 +}
 +
 +inline void qlcnic_83xx_disable_tx_intr(struct qlcnic_adapter *adapter,
 +					struct qlcnic_host_tx_ring *tx_ring)
 +{
 +	writel(1, tx_ring->crb_intr_mask);
 +}
++=======
+ static struct sk_buff *qlcnic_process_rxbuf(struct qlcnic_adapter *,
+ 					    struct qlcnic_host_rds_ring *,
+ 					    u16, u16);
++>>>>>>> 2cc5752e49d7 (qlcnic: Interrupt code cleanup)
  
  static inline u8 qlcnic_mac_hash(u64 mac, u16 vlan)
  {
@@@ -1553,10 -1525,10 +1559,10 @@@ void qlcnic_82xx_napi_enable(struct qlc
  	if (adapter->is_up != QLCNIC_ADAPTER_UP_MAGIC)
  		return;
  
 -	for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +	for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  		sds_ring = &recv_ctx->sds_rings[ring];
  		napi_enable(&sds_ring->napi);
- 		qlcnic_enable_int(sds_ring);
+ 		qlcnic_enable_sds_intr(adapter, sds_ring);
  	}
  
  	if (qlcnic_check_multi_tx(adapter) &&
@@@ -1581,9 -1552,9 +1587,9 @@@ void qlcnic_82xx_napi_disable(struct ql
  	if (adapter->is_up != QLCNIC_ADAPTER_UP_MAGIC)
  		return;
  
 -	for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +	for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  		sds_ring = &recv_ctx->sds_rings[ring];
- 		qlcnic_disable_int(sds_ring);
+ 		qlcnic_disable_sds_intr(adapter, sds_ring);
  		napi_synchronize(&sds_ring->napi);
  		napi_disable(&sds_ring->napi);
  	}
@@@ -1591,9 -1562,9 +1597,9 @@@
  	if ((adapter->flags & QLCNIC_MSIX_ENABLED) &&
  	    !adapter->ahw->diag_test &&
  	    qlcnic_check_multi_tx(adapter)) {
 -		for (ring = 0; ring < adapter->drv_tx_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_drv_tx_rings; ring++) {
  			tx_ring = &adapter->tx_ring[ring];
- 			qlcnic_disable_tx_int(adapter, tx_ring);
+ 			qlcnic_disable_tx_intr(adapter, tx_ring);
  			napi_synchronize(&tx_ring->napi);
  			napi_disable(&tx_ring->napi);
  		}
@@@ -1941,10 -1912,10 +1947,10 @@@ void qlcnic_83xx_napi_enable(struct qlc
  
  	if ((adapter->flags & QLCNIC_MSIX_ENABLED) &&
  	    !(adapter->flags & QLCNIC_TX_INTR_SHARED)) {
 -		for (ring = 0; ring < adapter->drv_tx_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_drv_tx_rings; ring++) {
  			tx_ring = &adapter->tx_ring[ring];
  			napi_enable(&tx_ring->napi);
- 			qlcnic_83xx_enable_tx_intr(adapter, tx_ring);
+ 			qlcnic_enable_tx_intr(adapter, tx_ring);
  		}
  	}
  }
@@@ -1959,19 -1930,19 +1965,19 @@@ void qlcnic_83xx_napi_disable(struct ql
  	if (adapter->is_up != QLCNIC_ADAPTER_UP_MAGIC)
  		return;
  
 -	for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +	for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  		sds_ring = &recv_ctx->sds_rings[ring];
  		if (adapter->flags & QLCNIC_MSIX_ENABLED)
- 			qlcnic_83xx_disable_intr(adapter, sds_ring);
+ 			qlcnic_disable_sds_intr(adapter, sds_ring);
  		napi_synchronize(&sds_ring->napi);
  		napi_disable(&sds_ring->napi);
  	}
  
  	if ((adapter->flags & QLCNIC_MSIX_ENABLED) &&
  	    !(adapter->flags & QLCNIC_TX_INTR_SHARED)) {
 -		for (ring = 0; ring < adapter->drv_tx_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_drv_tx_rings; ring++) {
  			tx_ring = &adapter->tx_ring[ring];
- 			qlcnic_83xx_disable_tx_intr(adapter, tx_ring);
+ 			qlcnic_disable_tx_intr(adapter, tx_ring);
  			napi_synchronize(&tx_ring->napi);
  			napi_disable(&tx_ring->napi);
  		}
diff --cc drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
index ecd8d1df8016,b9c1e37a1a20..000000000000
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
@@@ -546,24 -556,23 +546,32 @@@ static struct qlcnic_hardware_ops qlcni
  	.io_error_detected		= qlcnic_82xx_io_error_detected,
  	.io_slot_reset			= qlcnic_82xx_io_slot_reset,
  	.io_resume			= qlcnic_82xx_io_resume,
++<<<<<<< HEAD
++=======
+ 	.get_beacon_state		= qlcnic_82xx_get_beacon_state,
+ 	.enable_sds_intr		= qlcnic_82xx_enable_sds_intr,
+ 	.disable_sds_intr		= qlcnic_82xx_disable_sds_intr,
+ 	.enable_tx_intr			= qlcnic_82xx_enable_tx_intr,
+ 	.disable_tx_intr		= qlcnic_82xx_disable_tx_intr,
++>>>>>>> 2cc5752e49d7 (qlcnic: Interrupt code cleanup)
  };
  
 -static int qlcnic_check_multi_tx_capability(struct qlcnic_adapter *adapter)
 +static void qlcnic_get_multiq_capability(struct qlcnic_adapter *adapter)
  {
  	struct qlcnic_hardware_context *ahw = adapter->ahw;
 +	int num_tx_q;
  
 -	if (qlcnic_82xx_check(adapter) &&
 +	if (ahw->msix_supported &&
  	    (ahw->extra_capability[0] & QLCNIC_FW_CAPABILITY_2_MULTI_TX)) {
 -		test_and_set_bit(__QLCNIC_MULTI_TX_UNIQUE, &adapter->state);
 -		return 0;
 +		num_tx_q = min_t(int, QLCNIC_DEF_NUM_TX_RINGS,
 +				 num_online_cpus());
 +		if (num_tx_q > 1) {
 +			test_and_set_bit(__QLCNIC_MULTI_TX_UNIQUE,
 +					 &adapter->state);
 +			adapter->max_drv_tx_rings = num_tx_q;
 +		}
  	} else {
 -		return 1;
 +		adapter->max_drv_tx_rings = 1;
  	}
  }
  
@@@ -1828,9 -1876,9 +1836,9 @@@ void qlcnic_diag_free_res(struct net_de
  
  	clear_bit(__QLCNIC_DEV_UP, &adapter->state);
  	if (adapter->ahw->diag_test == QLCNIC_INTERRUPT_TEST) {
 -		for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  			sds_ring = &adapter->recv_ctx->sds_rings[ring];
- 			qlcnic_disable_int(sds_ring);
+ 			qlcnic_disable_sds_intr(adapter, sds_ring);
  		}
  	}
  
@@@ -1929,9 -1977,9 +1937,9 @@@ int qlcnic_diag_alloc_res(struct net_de
  	}
  
  	if (adapter->ahw->diag_test == QLCNIC_INTERRUPT_TEST) {
 -		for (ring = 0; ring < adapter->drv_sds_rings; ring++) {
 +		for (ring = 0; ring < adapter->max_sds_rings; ring++) {
  			sds_ring = &adapter->recv_ctx->sds_rings[ring];
- 			qlcnic_enable_int(sds_ring);
+ 			qlcnic_enable_sds_intr(adapter, sds_ring);
  		}
  	}
  
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic.h
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h
index bf20c3aeeeb2..c171b7f1491e 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.h
@@ -591,10 +591,6 @@ void qlcnic_83xx_disable_mbx_intr(struct qlcnic_adapter *);
 irqreturn_t qlcnic_83xx_clear_legacy_intr(struct qlcnic_adapter *);
 irqreturn_t qlcnic_83xx_intr(int, void *);
 irqreturn_t qlcnic_83xx_tmp_intr(int, void *);
-void qlcnic_83xx_enable_intr(struct qlcnic_adapter *,
-			     struct qlcnic_host_sds_ring *);
-void qlcnic_83xx_disable_intr(struct qlcnic_adapter *,
-			     struct qlcnic_host_sds_ring *);
 void qlcnic_83xx_check_vf(struct qlcnic_adapter *,
 			  const struct pci_device_id *);
 void __qlcnic_83xx_process_aen(struct qlcnic_adapter *);
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
* Unmerged path drivers/net/ethernet/qlogic/qlcnic/qlcnic_main.c
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_common.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_common.c
index cc7e0f6ff529..fba8288464a8 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_common.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_common.c
@@ -68,6 +68,8 @@ static struct qlcnic_hardware_ops qlcnic_sriov_vf_hw_ops = {
 	.change_l2_filter		= qlcnic_83xx_change_l2_filter,
 	.get_board_info			= qlcnic_83xx_get_port_info,
 	.free_mac_list			= qlcnic_sriov_vf_free_mac_list,
+	.enable_sds_intr		= qlcnic_83xx_enable_sds_intr,
+	.disable_sds_intr		= qlcnic_83xx_disable_sds_intr,
 };
 
 static struct qlcnic_nic_template qlcnic_sriov_vf_ops = {
