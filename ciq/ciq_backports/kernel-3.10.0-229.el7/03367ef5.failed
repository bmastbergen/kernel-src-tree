Drivers: hv: vmbus: Negotiate version 3.0 when running on ws2012r2 hosts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] hyperv/vmbus: Negotiate version 3.0 when running on ws2012r2 hosts (Vivek Goyal) [1037957]
Rebuild_FUZZ: 89.86%
commit-author K. Y. Srinivasan <kys@microsoft.com>
commit 03367ef5ea811475187a0732aada068919e14d61
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/03367ef5.failed

Only ws2012r2 hosts support the ability to reconnect to the host on VMBUS. This functionality
is needed by kexec in Linux. To use this functionality we need to negotiate version 3.0 of the
VMBUS protocol.

	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Cc: <stable@vger.kernel.org>        [3.9+]
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 03367ef5ea811475187a0732aada068919e14d61)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/connection.c
diff --cc drivers/hv/connection.c
index d6b1e29b0ad2,2e7801af466e..000000000000
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@@ -75,11 -78,9 +78,17 @@@ static int vmbus_negotiate_version(stru
  	msg->header.msgtype = CHANNELMSG_INITIATE_CONTACT;
  	msg->vmbus_version_requested = version;
  	msg->interrupt_page = virt_to_phys(vmbus_connection.int_page);
++<<<<<<< HEAD
 +	msg->monitor_page1 = virt_to_phys(vmbus_connection.monitor_pages);
 +	msg->monitor_page2 = virt_to_phys(
 +			(void *)((unsigned long)vmbus_connection.monitor_pages +
 +				 PAGE_SIZE));
 +	if (version == VERSION_WIN8)
++=======
+ 	msg->monitor_page1 = virt_to_phys(vmbus_connection.monitor_pages[0]);
+ 	msg->monitor_page2 = virt_to_phys(vmbus_connection.monitor_pages[1]);
+ 	if (version == VERSION_WIN8_1)
++>>>>>>> 03367ef5ea81 (Drivers: hv: vmbus: Negotiate version 3.0 when running on ws2012r2 hosts)
  		msg->target_vcpu = hv_context.vp_index[smp_processor_id()];
  
  	/*
* Unmerged path drivers/hv/connection.c
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index d15d298a0cd4..4274bddb4f68 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -473,15 +473,17 @@ hv_get_ringbuffer_availbytes(struct hv_ring_buffer_info *rbi,
  * 0 . 13 (Windows Server 2008)
  * 1 . 1  (Windows 7)
  * 2 . 4  (Windows 8)
+ * 3 . 0  (Windows 8 R2)
  */
 
 #define VERSION_WS2008  ((0 << 16) | (13))
 #define VERSION_WIN7    ((1 << 16) | (1))
 #define VERSION_WIN8    ((2 << 16) | (4))
+#define VERSION_WIN8_1    ((3 << 16) | (0))
 
 #define VERSION_INVAL -1
 
-#define VERSION_CURRENT VERSION_WIN8
+#define VERSION_CURRENT VERSION_WIN8_1
 
 /* Make maximum size of pipe payload of 16K */
 #define MAX_PIPE_DATA_PAYLOAD		(sizeof(u8) * 16384)
