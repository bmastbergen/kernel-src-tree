blk-mq: request deadline must be visible before marking rq as started

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jens Axboe <axboe@fb.com>
commit 538b75341835e3c2041ff066408de10d24fdc830
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/538b7534.failed

When we start the request, we set the deadline and flip the bits
marking the request as started and non-complete. However, it's
important that the deadline store is ordered before flipping the
bits, otherwise we could have a small window where the request is
marked started but with an invalid deadline. This can confuse the
timeout handling.

	Suggested-by: Ming Lei <tom.leiming@gmail.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 538b75341835e3c2041ff066408de10d24fdc830)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index e7914e35b358,a13c40ca8230..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -338,14 -387,27 +338,27 @@@ static void blk_mq_start_request(struc
  	trace_block_rq_issue(q, rq);
  
  	rq->resid_len = blk_rq_bytes(rq);
 -	if (unlikely(blk_bidi_rq(rq)))
 -		rq->next_rq->resid_len = blk_rq_bytes(rq->next_rq);
 -
 -	blk_add_timer(rq);
  
  	/*
++<<<<<<< HEAD
 +	 * Just mark start time and set the started bit. Due to memory
 +	 * ordering, we know we'll see the correct deadline as long as
 +	 * REQ_ATOMIC_STARTED is seen.
++=======
+ 	 * Ensure that ->deadline is visible before set the started
+ 	 * flag and clear the completed flag.
+ 	 */
+ 	smp_mb__before_atomic();
+ 
+ 	/*
+ 	 * Mark us as started and clear complete. Complete might have been
+ 	 * set if requeue raced with timeout, which then marked it as
+ 	 * complete. So be sure to clear complete again when we start
+ 	 * the request, otherwise we'll ignore the completion event.
++>>>>>>> 538b75341835 (blk-mq: request deadline must be visible before marking rq as started)
  	 */
 -	if (!test_bit(REQ_ATOM_STARTED, &rq->atomic_flags))
 -		set_bit(REQ_ATOM_STARTED, &rq->atomic_flags);
 -	if (test_bit(REQ_ATOM_COMPLETE, &rq->atomic_flags))
 -		clear_bit(REQ_ATOM_COMPLETE, &rq->atomic_flags);
 +	rq->deadline = jiffies + q->rq_timeout;
 +	set_bit(REQ_ATOM_STARTED, &rq->atomic_flags);
  
  	if (q->dma_drain_size && blk_rq_bytes(rq)) {
  		/*
* Unmerged path block/blk-mq.c
