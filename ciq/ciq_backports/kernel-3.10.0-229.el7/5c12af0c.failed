x86/efi: parse_efi_setup() build fix

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [x86] efi: parse_efi_setup() build fix (Dave Young) [1080109]
Rebuild_FUZZ: 94.12%
commit-author Dave Young <dyoung@redhat.com>
commit 5c12af0c41e3417e1939095325920463b5f8e726
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/5c12af0c.failed

In case without CONFIG_EFI, there will be below build error:

   arch/x86/built-in.o: In function `setup_arch':
  (.init.text+0x9dc): undefined reference to `parse_efi_setup'

Thus fix it by adding blank inline function in asm/efi.h
Also remove an unused declaration for variable efi_data_len.

	Signed-off-by: Dave Young <dyoung@redhat.com>
	Signed-off-by: Matt Fleming <matt.fleming@intel.com>
(cherry picked from commit 5c12af0c41e3417e1939095325920463b5f8e726)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/efi.h
diff --cc arch/x86/include/asm/efi.h
index 0062a0125041,3b978c472d08..000000000000
--- a/arch/x86/include/asm/efi.h
+++ b/arch/x86/include/asm/efi.h
@@@ -101,6 -127,21 +101,24 @@@ extern void efi_call_phys_prelog(void)
  extern void efi_call_phys_epilog(void);
  extern void efi_unmap_memmap(void);
  extern void efi_memory_uc(u64 addr, unsigned long size);
++<<<<<<< HEAD
++=======
+ extern void __init efi_map_region(efi_memory_desc_t *md);
+ extern void __init efi_map_region_fixed(efi_memory_desc_t *md);
+ extern void efi_sync_low_kernel_mappings(void);
+ extern void efi_setup_page_tables(void);
+ extern void __init old_map_region(efi_memory_desc_t *md);
+ 
+ struct efi_setup_data {
+ 	u64 fw_vendor;
+ 	u64 runtime;
+ 	u64 tables;
+ 	u64 smbios;
+ 	u64 reserved[8];
+ };
+ 
+ extern u64 efi_setup;
++>>>>>>> 5c12af0c41e3 (x86/efi: parse_efi_setup() build fix)
  
  #ifdef CONFIG_EFI
  
@@@ -109,6 -150,8 +127,11 @@@ static inline bool efi_is_native(void
  	return IS_ENABLED(CONFIG_X86_64) == efi_enabled(EFI_64BIT);
  }
  
++<<<<<<< HEAD
++=======
+ extern struct console early_efi_console;
+ extern void parse_efi_setup(u64 phys_addr, u32 data_len);
++>>>>>>> 5c12af0c41e3 (x86/efi: parse_efi_setup() build fix)
  #else
  /*
   * IF EFI is not configured, have the EFI calls return -ENOSYS.
* Unmerged path arch/x86/include/asm/efi.h
