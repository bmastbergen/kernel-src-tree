xprtrdma: Remove RPCRDMA_PERSISTENT_REGISTRATION macro

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit a779ca5fa766e270b9e11c162d877295e2904f4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/a779ca5f.failed

Clean up.

RPCRDMA_PERSISTENT_REGISTRATION was a compile-time switch between
RPCRDMA_REGISTER mode and RPCRDMA_ALLPHYSICAL mode.  Since
RPCRDMA_REGISTER has been removed, there's no need for the extra
conditional compilation.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Tested-by: Steve Wise <swise@opengridcomputing.com>
	Tested-by: Shirley Ma <shirley.ma@oracle.com>
	Tested-by: Devesh Sharma <devesh.sharma@emulex.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit a779ca5fa766e270b9e11c162d877295e2904f4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/verbs.c
diff --cc net/sunrpc/xprtrdma/verbs.c
index 499e0d7e7773,c2253d4c64df..000000000000
--- a/net/sunrpc/xprtrdma/verbs.c
+++ b/net/sunrpc/xprtrdma/verbs.c
@@@ -545,7 -556,13 +545,17 @@@ rpcrdma_ia_open(struct rpcrdma_xprt *xp
  				RPCRDMA_MAX_DATA_SEGS,
  				devattr.max_fast_reg_page_list_len);
  		}
++<<<<<<< HEAD
 +		break;
++=======
+ 	}
+ 	if (memreg == RPCRDMA_MTHCAFMR) {
+ 		if (!ia->ri_id->device->alloc_fmr) {
+ 			dprintk("RPC:       %s: MTHCAFMR registration "
+ 				"not supported by HCA\n", __func__);
+ 			memreg = RPCRDMA_ALLPHYSICAL;
+ 		}
++>>>>>>> a779ca5fa766 (xprtrdma: Remove RPCRDMA_PERSISTENT_REGISTRATION macro)
  	}
  
  	/*
@@@ -557,21 -574,13 +567,23 @@@
  	 * adapter.
  	 */
  	switch (memreg) {
 +	case RPCRDMA_REGISTER:
  	case RPCRDMA_FRMR:
  		break;
- #if RPCRDMA_PERSISTENT_REGISTRATION
  	case RPCRDMA_ALLPHYSICAL:
  		mem_priv = IB_ACCESS_LOCAL_WRITE |
  				IB_ACCESS_REMOTE_WRITE |
  				IB_ACCESS_REMOTE_READ;
  		goto register_setup;
++<<<<<<< HEAD
 +#endif
 +	case RPCRDMA_MEMWINDOWS_ASYNC:
 +	case RPCRDMA_MEMWINDOWS:
 +		mem_priv = IB_ACCESS_LOCAL_WRITE |
 +				IB_ACCESS_MW_BIND;
 +		goto register_setup;
++=======
++>>>>>>> a779ca5fa766 (xprtrdma: Remove RPCRDMA_PERSISTENT_REGISTRATION macro)
  	case RPCRDMA_MTHCAFMR:
  		if (ia->ri_have_dma_lkey)
  			break;
diff --git a/include/linux/sunrpc/xprtrdma.h b/include/linux/sunrpc/xprtrdma.h
index c2f04e1ae159..64a0a0a97b23 100644
--- a/include/linux/sunrpc/xprtrdma.h
+++ b/include/linux/sunrpc/xprtrdma.h
@@ -62,8 +62,6 @@
 #define RPCRDMA_INLINE_PAD_THRESH  (512)/* payload threshold to pad (bytes) */
 
 /* memory registration strategies */
-#define RPCRDMA_PERSISTENT_REGISTRATION (1)
-
 enum rpcrdma_memreg {
 	RPCRDMA_BOUNCEBUFFERS = 0,
 	RPCRDMA_REGISTER,
* Unmerged path net/sunrpc/xprtrdma/verbs.c
