powerpc: Create DOTSYM to wrap dot symbol usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] Create DOTSYM to wrap dot symbol usage (Don Zickus) [1127366]
Rebuild_FUZZ: 89.41%
commit-author Anton Blanchard <anton@samba.org>
commit c1fb019477c27bfe309be282d178a08e56f05249
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/c1fb0194.failed

There are a few places we have to use dot symbols with the
current ABI - the syscall table and the kvm hcall table.

Wrap both of these with a new macro called DOTSYM so it will
be easy to transition away from dot symbols in a future ABI.

	Signed-off-by: Anton Blanchard <anton@samba.org>
(cherry picked from commit c1fb019477c27bfe309be282d178a08e56f05249)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv_rmhandlers.S
diff --cc arch/powerpc/kvm/book3s_hv_rmhandlers.S
index 0ae4c28ae4b6,e9593f58a501..000000000000
--- a/arch/powerpc/kvm/book3s_hv_rmhandlers.S
+++ b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
@@@ -1535,16 -1795,16 +1535,22 @@@ hcall_real_fallback
  	.globl	hcall_real_table
  hcall_real_table:
  	.long	0		/* 0 - unused */
- 	.long	.kvmppc_h_remove - hcall_real_table
- 	.long	.kvmppc_h_enter - hcall_real_table
- 	.long	.kvmppc_h_read - hcall_real_table
+ 	.long	DOTSYM(kvmppc_h_remove) - hcall_real_table
+ 	.long	DOTSYM(kvmppc_h_enter) - hcall_real_table
+ 	.long	DOTSYM(kvmppc_h_read) - hcall_real_table
  	.long	0		/* 0x10 - H_CLEAR_MOD */
  	.long	0		/* 0x14 - H_CLEAR_REF */
++<<<<<<< HEAD
 +	.long	.kvmppc_h_protect - hcall_real_table
 +	.long	0		/* 0x1c - H_GET_TCE */
 +	.long	.kvmppc_h_put_tce - hcall_real_table
++=======
+ 	.long	DOTSYM(kvmppc_h_protect) - hcall_real_table
+ 	.long	DOTSYM(kvmppc_h_get_tce) - hcall_real_table
+ 	.long	DOTSYM(kvmppc_h_put_tce) - hcall_real_table
++>>>>>>> c1fb019477c2 (powerpc: Create DOTSYM to wrap dot symbol usage)
  	.long	0		/* 0x24 - H_SET_SPRG0 */
- 	.long	.kvmppc_h_set_dabr - hcall_real_table
+ 	.long	DOTSYM(kvmppc_h_set_dabr) - hcall_real_table
  	.long	0		/* 0x2c */
  	.long	0		/* 0x30 */
  	.long	0		/* 0x34 */
@@@ -1615,7 -1875,11 +1621,15 @@@
  	.long	0		/* 0x118 */
  	.long	0		/* 0x11c */
  	.long	0		/* 0x120 */
++<<<<<<< HEAD
 +	.long	.kvmppc_h_bulk_remove - hcall_real_table
++=======
+ 	.long	DOTSYM(kvmppc_h_bulk_remove) - hcall_real_table
+ 	.long	0		/* 0x128 */
+ 	.long	0		/* 0x12c */
+ 	.long	0		/* 0x130 */
+ 	.long	DOTSYM(kvmppc_h_set_xdabr) - hcall_real_table
++>>>>>>> c1fb019477c2 (powerpc: Create DOTSYM to wrap dot symbol usage)
  hcall_real_table_end:
  
  ignore_hdec:
diff --git a/arch/powerpc/include/asm/ppc_asm.h b/arch/powerpc/include/asm/ppc_asm.h
index f627f8c74b2a..5eabf0e60cdb 100644
--- a/arch/powerpc/include/asm/ppc_asm.h
+++ b/arch/powerpc/include/asm/ppc_asm.h
@@ -238,6 +238,8 @@ name: \
 	.type GLUE(.,name),@function; \
 GLUE(.,name):
 
+#define DOTSYM(a)	GLUE(.,a)
+
 #else /* 32-bit */
 
 #define _ENTRY(n)	\
diff --git a/arch/powerpc/include/asm/systbl.h b/arch/powerpc/include/asm/systbl.h
index 43523fe0d8b4..16180333aa21 100644
--- a/arch/powerpc/include/asm/systbl.h
+++ b/arch/powerpc/include/asm/systbl.h
@@ -62,7 +62,7 @@ COMPAT_SYS_SPU(fcntl)
 SYSCALL(ni_syscall)
 SYSCALL_SPU(setpgid)
 SYSCALL(ni_syscall)
-SYSX(sys_ni_syscall,sys_olduname, sys_olduname)
+SYSX(sys_ni_syscall,sys_olduname,sys_olduname)
 SYSCALL_SPU(umask)
 SYSCALL_SPU(chroot)
 COMPAT_SYS(ustat)
@@ -258,7 +258,7 @@ SYSCALL_SPU(tgkill)
 COMPAT_SYS_SPU(utimes)
 COMPAT_SYS_SPU(statfs64)
 COMPAT_SYS_SPU(fstatfs64)
-SYSX(sys_ni_syscall, ppc_fadvise64_64, ppc_fadvise64_64)
+SYSX(sys_ni_syscall,ppc_fadvise64_64,ppc_fadvise64_64)
 PPC_SYS_SPU(rtas)
 OLDSYS(debug_setcontext)
 SYSCALL(ni_syscall)
@@ -295,7 +295,7 @@ SYSCALL_SPU(mkdirat)
 SYSCALL_SPU(mknodat)
 SYSCALL_SPU(fchownat)
 COMPAT_SYS_SPU(futimesat)
-SYSX_SPU(sys_newfstatat, sys_fstatat64, sys_fstatat64)
+SYSX_SPU(sys_newfstatat,sys_fstatat64,sys_fstatat64)
 SYSCALL_SPU(unlinkat)
 SYSCALL_SPU(renameat)
 SYSCALL_SPU(linkat)
diff --git a/arch/powerpc/kernel/systbl.S b/arch/powerpc/kernel/systbl.S
index 75822f97bfea..895c50ca943c 100644
--- a/arch/powerpc/kernel/systbl.S
+++ b/arch/powerpc/kernel/systbl.S
@@ -17,12 +17,12 @@
 #include <asm/ppc_asm.h>
 
 #ifdef CONFIG_PPC64
-#define SYSCALL(func)		.llong	.sys_##func,.sys_##func
-#define COMPAT_SYS(func)	.llong	.sys_##func,.compat_sys_##func
-#define PPC_SYS(func)		.llong	.ppc_##func,.ppc_##func
-#define OLDSYS(func)		.llong	.sys_ni_syscall,.sys_ni_syscall
-#define SYS32ONLY(func)		.llong	.sys_ni_syscall,.compat_sys_##func
-#define SYSX(f, f3264, f32)	.llong	.f,.f3264
+#define SYSCALL(func)		.llong	DOTSYM(sys_##func),DOTSYM(sys_##func)
+#define COMPAT_SYS(func)	.llong	DOTSYM(sys_##func),DOTSYM(compat_sys_##func)
+#define PPC_SYS(func)		.llong	DOTSYM(ppc_##func),DOTSYM(ppc_##func)
+#define OLDSYS(func)		.llong	DOTSYM(sys_ni_syscall),DOTSYM(sys_ni_syscall)
+#define SYS32ONLY(func)		.llong	DOTSYM(sys_ni_syscall),DOTSYM(compat_sys_##func)
+#define SYSX(f, f3264, f32)	.llong	DOTSYM(f),DOTSYM(f3264)
 #else
 #define SYSCALL(func)		.long	sys_##func
 #define COMPAT_SYS(func)	.long	sys_##func
* Unmerged path arch/powerpc/kvm/book3s_hv_rmhandlers.S
