perf tools: Introduce reset_output_field()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf: Introduce reset_output_field() (Jiri Olsa) [1134356]
Rebuild_FUZZ: 92.31%
commit-author Namhyung Kim <namhyung@kernel.org>
commit 1c89fe9b0447f0ce393325e51911f8073432b7b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1c89fe9b.failed

The reset_output_field() function is for clearing output field
settings and will be used for test code in later patch.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
Link: http://lkml.kernel.org/r/1400480762-22852-19-git-send-email-namhyung@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit 1c89fe9b0447f0ce393325e51911f8073432b7b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.h
#	tools/perf/util/sort.h
diff --cc tools/perf/util/hist.h
index 4b860e6a25f0,a8418d19808d..000000000000
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@@ -192,6 -203,13 +198,16 @@@ void perf_hpp__column_register(struct p
  void perf_hpp__column_enable(unsigned col);
  void perf_hpp__register_sort_field(struct perf_hpp_fmt *format);
  void perf_hpp__setup_output_field(void);
++<<<<<<< HEAD
++=======
+ void perf_hpp__reset_output_field(void);
+ void perf_hpp__append_sort_keys(void);
+ 
+ bool perf_hpp__is_sort_entry(struct perf_hpp_fmt *format);
+ bool perf_hpp__same_sort_entry(struct perf_hpp_fmt *a, struct perf_hpp_fmt *b);
+ bool perf_hpp__should_skip(struct perf_hpp_fmt *format);
+ void perf_hpp__reset_width(struct perf_hpp_fmt *fmt, struct hists *hists);
++>>>>>>> 1c89fe9b0447 (perf tools: Introduce reset_output_field())
  
  typedef u64 (*hpp_field_fn)(struct hist_entry *he);
  typedef int (*hpp_callback_fn)(struct perf_hpp *hpp, bool front);
diff --cc tools/perf/util/sort.h
index d43ebef70364,5f38d925e92f..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -189,6 -193,8 +189,11 @@@ extern struct sort_entry sort_thread
  extern struct list_head hist_entry__sort_list;
  
  int setup_sorting(void);
++<<<<<<< HEAD
++=======
+ int setup_output_field(void);
+ void reset_output_field(void);
++>>>>>>> 1c89fe9b0447 (perf tools: Introduce reset_output_field())
  extern int sort_dimension__add(const char *);
  void sort__setup_elide(FILE *fp);
  
diff --git a/tools/perf/ui/hist.c b/tools/perf/ui/hist.c
index 24116a48298f..f086b0dfdb48 100644
--- a/tools/perf/ui/hist.c
+++ b/tools/perf/ui/hist.c
@@ -427,6 +427,23 @@ int hist_entry__sort_snprintf(struct hist_entry *he, char *s, size_t size,
 	return ret;
 }
 
+void perf_hpp__reset_output_field(void)
+{
+	struct perf_hpp_fmt *fmt, *tmp;
+
+	/* reset output fields */
+	perf_hpp__for_each_format_safe(fmt, tmp) {
+		list_del_init(&fmt->list);
+		list_del_init(&fmt->sort_list);
+	}
+
+	/* reset sort keys */
+	perf_hpp__for_each_sort_list_safe(fmt, tmp) {
+		list_del_init(&fmt->list);
+		list_del_init(&fmt->sort_list);
+	}
+}
+
 /*
  * See hists__fprintf to match the column widths
  */
* Unmerged path tools/perf/util/hist.h
diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index 916652af8304..1dbac8335727 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -1307,3 +1307,14 @@ void sort__setup_elide(FILE *output)
 	list_for_each_entry(se, &hist_entry__sort_list, list)
 		se->elide = false;
 }
+
+void reset_output_field(void)
+{
+	sort__need_collapse = 0;
+	sort__has_parent = 0;
+	sort__has_sym = 0;
+	sort__has_dso = 0;
+
+	reset_dimensions();
+	perf_hpp__reset_output_field();
+}
* Unmerged path tools/perf/util/sort.h
