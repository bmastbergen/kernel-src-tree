perf probe: Do not add offset twice to uprobe address

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/probe: Do not add offset twice to uprobe address (Jiri Olsa) [1133083]
Rebuild_FUZZ: 98.11%
commit-author Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
commit 981a23792cd02631f8cd5dd65753208a44de5ae1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/981a2379.failed

Fix perf-probe not to add offset value twice to uprobe probe address
when post processing.

The tevs[i].point.address struct member is the address of symbol+offset,
but current perf-probe adjusts the point.address by adding the offset.

As a result, the probe address becomes symbol+offset+offset. This may
cause unexpected code corruption. Urgent fix is needed.

Without this fix:
  ---
  # ./perf probe -x ./perf dso__load_vmlinux+4
  # ./perf probe -l
    probe_perf:dso__load_vmlinux (on 0x000000000006d2b8)
  # nm ./perf.orig | grep dso__load_vmlinux\$
  000000000046d0a0 T dso__load_vmlinux
  ---

You can see the given offset is 3 but the actual probed address is
dso__load_vmlinux+8.

With this fix:
  ---
  # ./perf probe -x ./perf dso__load_vmlinux+4
  # ./perf probe -l
    probe_perf:dso__load_vmlinux (on 0x000000000006d2b4)
  ---

Now the problem is fixed.

Note: This bug is introduced by
	commit fb7345bbf7fad9bf72ef63a19c707970b9685812

	Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: "David A. Long" <dave.long@linaro.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Oleg Nesterov <oleg@redhat.com>
	Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: yrl.pp-manager.tt@hitachi.com
Link: http://lkml.kernel.org/r/20140205051858.6519.27314.stgit@kbuild-fedora.yrl.intra.hitachi.co.jp
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 981a23792cd02631f8cd5dd65753208a44de5ae1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/probe-event.c
diff --cc tools/perf/util/probe-event.c
index d71337318fcb,d8b048c20cde..000000000000
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@@ -261,6 -293,68 +261,71 @@@ static int kprobe_convert_to_perf_probe
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static int get_text_start_address(const char *exec, unsigned long *address)
+ {
+ 	Elf *elf;
+ 	GElf_Ehdr ehdr;
+ 	GElf_Shdr shdr;
+ 	int fd, ret = -ENOENT;
+ 
+ 	fd = open(exec, O_RDONLY);
+ 	if (fd < 0)
+ 		return -errno;
+ 
+ 	elf = elf_begin(fd, PERF_ELF_C_READ_MMAP, NULL);
+ 	if (elf == NULL)
+ 		return -EINVAL;
+ 
+ 	if (gelf_getehdr(elf, &ehdr) == NULL)
+ 		goto out;
+ 
+ 	if (!elf_section_by_name(elf, &ehdr, &shdr, ".text", NULL))
+ 		goto out;
+ 
+ 	*address = shdr.sh_addr - shdr.sh_offset;
+ 	ret = 0;
+ out:
+ 	elf_end(elf);
+ 	return ret;
+ }
+ 
+ static int add_exec_to_probe_trace_events(struct probe_trace_event *tevs,
+ 					  int ntevs, const char *exec)
+ {
+ 	int i, ret = 0;
+ 	unsigned long offset, stext = 0;
+ 	char buf[32];
+ 
+ 	if (!exec)
+ 		return 0;
+ 
+ 	ret = get_text_start_address(exec, &stext);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	for (i = 0; i < ntevs && ret >= 0; i++) {
+ 		/* point.address is the addres of point.symbol + point.offset */
+ 		offset = tevs[i].point.address - stext;
+ 		tevs[i].point.offset = 0;
+ 		zfree(&tevs[i].point.symbol);
+ 		ret = e_snprintf(buf, 32, "0x%lx", offset);
+ 		if (ret < 0)
+ 			break;
+ 		tevs[i].point.module = strdup(exec);
+ 		tevs[i].point.symbol = strdup(buf);
+ 		if (!tevs[i].point.symbol || !tevs[i].point.module) {
+ 			ret = -ENOMEM;
+ 			break;
+ 		}
+ 		tevs[i].uprobes = true;
+ 	}
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> 981a23792cd0 (perf probe: Do not add offset twice to uprobe address)
  static int add_module_to_probe_trace_events(struct probe_trace_event *tevs,
  					    int ntevs, const char *module)
  {
* Unmerged path tools/perf/util/probe-event.c
