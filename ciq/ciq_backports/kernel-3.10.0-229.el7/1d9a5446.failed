powerpc/powernv: Use EEH PCI config accessors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] powernv: Use EEH PCI config accessors (Don Zickus) [1127366]
Rebuild_FUZZ: 90.24%
commit-author Gavin Shan <gwshan@linux.vnet.ibm.com>
commit 1d9a544646cd0c2c9367aea6d3a7b6f42c9467ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1d9a5446.failed

For EEH PowerNV backends, they need use their own PCI config
accesors as the normal one could be blocked during PE reset.
The patch also removes necessary parameter "hose" for the
function ioda_eeh_bridge_reset().

	Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit 1d9a544646cd0c2c9367aea6d3a7b6f42c9467ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/eeh-ioda.c
diff --cc arch/powerpc/platforms/powernv/eeh-ioda.c
index be33a16408be,ed6c68634c9c..000000000000
--- a/arch/powerpc/platforms/powernv/eeh-ioda.c
+++ b/arch/powerpc/platforms/powernv/eeh-ioda.c
@@@ -530,31 -549,11 +531,35 @@@ static int ioda_eeh_reset(struct eeh_p
  	if (pe->type & EEH_PE_PHB) {
  		ret = ioda_eeh_phb_reset(hose, option);
  	} else {
 -		bus = eeh_pe_bus_get(pe);
 -		if (pci_is_root_bus(bus))
 +		if (pe->type & EEH_PE_DEVICE) {
 +			/*
 +			 * If it's device PE, we didn't refer to the parent
 +			 * PCI bus yet. So we have to figure it out indirectly.
 +			 */
 +			edev = list_first_entry(&pe->edevs,
 +					struct eeh_dev, list);
 +			dev = eeh_dev_to_pci_dev(edev);
 +			dev = dev->bus->self;
 +		} else {
 +			/*
 +			 * If it's bus PE, the parent PCI bus is already there
 +			 * and just pick it up.
 +			 */
 +			dev = pe->bus->self;
 +		}
 +
 +		/*
 +		 * Do reset based on the fact that the direct upstream bridge
 +		 * is root bridge (port) or not.
 +		 */
 +		if (dev->bus->number == 0)
  			ret = ioda_eeh_root_reset(hose, option);
  		else
++<<<<<<< HEAD
 +			ret = ioda_eeh_bridge_reset(hose, dev, option);
++=======
+ 			ret = ioda_eeh_bridge_reset(bus->self, option);
++>>>>>>> 1d9a544646cd (powerpc/powernv: Use EEH PCI config accessors)
  	}
  
  	return ret;
* Unmerged path arch/powerpc/platforms/powernv/eeh-ioda.c
