KVM: PPC: Book3S: Move vcore definition to end of kvm_arch struct

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [virt] kvm/ppc: book3s - Move vcore definition to end of kvm_arch struct (David Gibson) [1123145 1123133 1123367]
Rebuild_FUZZ: 95.38%
commit-author Alexander Graf <agraf@suse.de>
commit 1287cb3fa85cd4a0d18402f6a23e1d4c6a9d7b8b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1287cb3f.failed

When building KVM with a lot of vcores (NR_CPUS is big), we can potentially
get out of the ld immediate range for dereferences inside that struct.

Move the array to the end of our kvm_arch struct. This fixes compilation
issues with NR_CPUS=2048 for me.

	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit 1287cb3fa85cd4a0d18402f6a23e1d4c6a9d7b8b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/kvm_host.h
diff --cc arch/powerpc/include/asm/kvm_host.h
index 80c8a73bb706,855ba4d9539d..000000000000
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@@ -275,6 -271,11 +274,14 @@@ struct kvm_arch 
  #ifdef CONFIG_KVM_XICS
  	struct kvmppc_xics *xics;
  #endif
++<<<<<<< HEAD
++=======
+ 	struct kvmppc_ops *kvm_ops;
+ #ifdef CONFIG_KVM_BOOK3S_HV_POSSIBLE
+ 	/* This array can grow quite large, keep it at the end */
+ 	struct kvmppc_vcore *vcores[KVM_MAX_VCORES];
+ #endif
++>>>>>>> 1287cb3fa85c (KVM: PPC: Book3S: Move vcore definition to end of kvm_arch struct)
  };
  
  /*
* Unmerged path arch/powerpc/include/asm/kvm_host.h
