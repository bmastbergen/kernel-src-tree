perf probe: Release allocated probe_trace_event if failed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/probe: Release allocated probe_trace_event if failed (Jiri Olsa) [1133083]
Rebuild_FUZZ: 98.25%
commit-author Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
commit 981d05adf2e2acc328abb929a6ed3536c0d41c5f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/981d05ad.failed

To fix a memory leak, release all allocated probe_trace_event on the
error path of try_to_find_probe_trace_events.

	Reported-by: David Ahern <dsahern@gmail.com>
	Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: "David A. Long" <dave.long@linaro.org>
	Cc: "Steven Rostedt (Red Hat)" <rostedt@goodmis.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Oleg Nesterov <oleg@redhat.com>
	Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Cc: yrl.pp-manager.tt@hitachi.com
Link: http://lkml.kernel.org/r/20140116093944.24403.30228.stgit@kbuild-fedora.novalocal
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 981d05adf2e2acc328abb929a6ed3536c0d41c5f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/probe-event.c
diff --cc tools/perf/util/probe-event.c
index f7c60643a8f7,579b655c0f93..000000000000
--- a/tools/perf/util/probe-event.c
+++ b/tools/perf/util/probe-event.c
@@@ -330,9 -443,18 +339,24 @@@ static int try_to_find_probe_trace_even
  
  	if (ntevs > 0) {	/* Succeeded to find trace events */
  		pr_debug("find %d probe_trace_events.\n", ntevs);
++<<<<<<< HEAD
 +		if (target)
 +			ret = add_module_to_probe_trace_events(*tevs, ntevs,
 +							       target);
++=======
+ 		if (target) {
+ 			if (pev->uprobes)
+ 				ret = add_exec_to_probe_trace_events(*tevs,
+ 						 ntevs, target);
+ 			else
+ 				ret = add_module_to_probe_trace_events(*tevs,
+ 						 ntevs, target);
+ 		}
+ 		if (ret < 0) {
+ 			clear_probe_trace_events(*tevs, ntevs);
+ 			zfree(tevs);
+ 		}
++>>>>>>> 981d05adf2e2 (perf probe: Release allocated probe_trace_event if failed)
  		return ret < 0 ? ret : ntevs;
  	}
  
* Unmerged path tools/perf/util/probe-event.c
