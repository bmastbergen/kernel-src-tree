ixgbe: Stop cacheing if the MNG FW enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Don Skidmore <donald.c.skidmore@intel.com>
commit 7155d051077c94d972cc77ac68e45f3ec890763e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/7155d051.failed

We use to cache whether the MNG FW was enabled, how since this isn't
static we really need to verify with each check.  This patch makes that
change.

CC: Arun Sharma <asharma@fb.com>
	Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com>
	Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 7155d051077c94d972cc77ac68e45f3ec890763e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
#	drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
#	drivers/net/ethernet/intel/ixgbe/ixgbe_x540.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
index 062f4b699a96,4c78ea8946c1..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
@@@ -1313,7 -1315,8 +1313,12 @@@ static struct ixgbe_mac_operations mac_
  	.release_swfw_sync      = &ixgbe_release_swfw_sync,
  	.get_thermal_sensor_data = NULL,
  	.init_thermal_sensor_thresh = NULL,
++<<<<<<< HEAD
 +	.mng_fw_enabled		= NULL,
++=======
+ 	.prot_autoc_read	= &prot_autoc_read_generic,
+ 	.prot_autoc_write	= &prot_autoc_write_generic,
++>>>>>>> 7155d051077c (ixgbe: Stop cacheing if the MNG FW enabled)
  };
  
  static struct ixgbe_eeprom_operations eeprom_ops_82598 = {
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
index a800baf9ca93,f32b3dd1ba8e..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
@@@ -64,8 -64,10 +64,8 @@@ static s32 ixgbe_read_i2c_byte_82599(st
  				     u8 dev_addr, u8 *data);
  static s32 ixgbe_write_i2c_byte_82599(struct ixgbe_hw *hw, u8 byte_offset,
  				      u8 dev_addr, u8 data);
 -static s32 ixgbe_reset_pipeline_82599(struct ixgbe_hw *hw);
 -static bool ixgbe_verify_lesm_fw_enabled_82599(struct ixgbe_hw *hw);
  
- static bool ixgbe_mng_enabled(struct ixgbe_hw *hw)
+ bool ixgbe_mng_enabled(struct ixgbe_hw *hw)
  {
  	u32 fwsm, manc, factps;
  
@@@ -2545,7 -2500,8 +2545,12 @@@ static struct ixgbe_mac_operations mac_
  	.release_swfw_sync      = &ixgbe_release_swfw_sync,
  	.get_thermal_sensor_data = &ixgbe_get_thermal_sensor_data_generic,
  	.init_thermal_sensor_thresh = &ixgbe_init_thermal_sensor_thresh_generic,
++<<<<<<< HEAD
 +	.mng_fw_enabled		= &ixgbe_mng_enabled,
++=======
+ 	.prot_autoc_read	= &prot_autoc_read_82599,
+ 	.prot_autoc_write	= &prot_autoc_write_82599,
++>>>>>>> 7155d051077c (ixgbe: Stop cacheing if the MNG FW enabled)
  };
  
  static struct ixgbe_eeprom_operations eeprom_ops_82599 = {
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_x540.c
index a8d589a1246b,188a5974b85c..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_x540.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_x540.c
@@@ -855,7 -855,8 +855,12 @@@ static struct ixgbe_mac_operations mac_
  	.enable_rx_buff		= &ixgbe_enable_rx_buff_generic,
  	.get_thermal_sensor_data = NULL,
  	.init_thermal_sensor_thresh = NULL,
++<<<<<<< HEAD
 +	.mng_fw_enabled		= NULL,
++=======
+ 	.prot_autoc_read	= &prot_autoc_read_generic,
+ 	.prot_autoc_write	= &prot_autoc_write_generic,
++>>>>>>> 7155d051077c (ixgbe: Stop cacheing if the MNG FW enabled)
  };
  
  static struct ixgbe_eeprom_operations eeprom_ops_X540 = {
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_82599.c
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
index 3fac74a63d30..f5406a17d7ed 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_common.h
@@ -107,6 +107,7 @@ s32 ixgbe_get_device_caps_generic(struct ixgbe_hw *hw, u16 *device_caps);
 s32 ixgbe_set_fw_drv_ver_generic(struct ixgbe_hw *hw, u8 maj, u8 min,
 				 u8 build, u8 ver);
 void ixgbe_clear_tx_pending(struct ixgbe_hw *hw);
+bool ixgbe_mng_enabled(struct ixgbe_hw *hw);
 
 void ixgbe_set_rxpba_generic(struct ixgbe_hw *hw, int num_pb,
 			     u32 headroom, int strategy);
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index 24f9c1c3d80b..62c0f745057a 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -7613,10 +7613,6 @@ static int ixgbe_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	if (err)
 		goto err_sw_init;
 
-	/* Cache if MNG FW is up so we don't have to read the REG later */
-	if (hw->mac.ops.mng_fw_enabled)
-		hw->mng_fw_enabled = hw->mac.ops.mng_fw_enabled(hw);
-
 	/* Make it possible the adapter to be woken up via WOL */
 	switch (adapter->hw.mac.type) {
 	case ixgbe_mac_82599EB:
@@ -7877,7 +7873,7 @@ skip_sriov:
 	ixgbe_dbg_adapter_init(adapter);
 
 	/* Need link setup for MNG FW, else wait for IXGBE_UP */
-	if (hw->mng_fw_enabled && hw->mac.ops.setup_link)
+	if (ixgbe_mng_enabled(hw) && hw->mac.ops.setup_link)
 		hw->mac.ops.setup_link(hw,
 			IXGBE_LINK_SPEED_10GB_FULL | IXGBE_LINK_SPEED_1GB_FULL,
 			true);
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_type.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_type.h
index 1a3e7f63308b..51a2d931a2da 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_type.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_type.h
@@ -2902,7 +2902,6 @@ struct ixgbe_mac_operations {
 	s32 (*set_fw_drv_ver)(struct ixgbe_hw *, u8, u8, u8, u8);
 	s32 (*get_thermal_sensor_data)(struct ixgbe_hw *);
 	s32 (*init_thermal_sensor_thresh)(struct ixgbe_hw *hw);
-	bool (*mng_fw_enabled)(struct ixgbe_hw *hw);
 };
 
 struct ixgbe_phy_operations {
@@ -3034,7 +3033,6 @@ struct ixgbe_hw {
 	bool				adapter_stopped;
 	bool				force_full_reset;
 	bool				allow_unsupported_sfp;
-	bool				mng_fw_enabled;
 	bool				wol_enabled;
 };
 
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_x540.c
