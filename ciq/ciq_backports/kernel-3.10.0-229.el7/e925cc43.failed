scsi: call device handler for failed TUR command

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [scsi] call device handler for failed TUR command (Ewan Milne) [1153738]
Rebuild_FUZZ: 93.33%
commit-author Christoph Hellwig <hch@infradead.org>
commit e925cc431ac8285ad6e8b3fe09f6e3d8b3c30d56
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e925cc43.failed

Multipath devices using the TUR path checker need to see the sense
code for a failed TUR command in their device handler.  Since commit
14216561e164671ce147458653b1fea06a we always return success for mid
layer issued TUR commands before calling the device handler, which
stopped the TUR path checker from working.

Move the call to the device handler check sense method before the early
return for TUR commands to give the device handler a chance to intercept
them.

	Signed-off-by: Christoph Hellwig <hch@infradead.org>
	Tested-by: Wen Xiong <wenxiong@linux.vnet.ibm.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
(cherry picked from commit e925cc431ac8285ad6e8b3fe09f6e3d8b3c30d56)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_error.c
diff --cc drivers/scsi/scsi_error.c
index b20bc2c52007,bc5ff6ff9c79..000000000000
--- a/drivers/scsi/scsi_error.c
+++ b/drivers/scsi/scsi_error.c
@@@ -460,14 -461,6 +460,17 @@@ static int scsi_check_sense(struct scsi
  
  	scsi_report_sense(sdev, &sshdr);
  
++<<<<<<< HEAD
 +	if (scmd->cmnd[0] == TEST_UNIT_READY && scmd->scsi_done != scsi_eh_done)
 +		/*
 +		 * nasty: for mid-layer issued TURs, we need to return the
 +		 * actual sense data without any recovery attempt.  For eh
 +		 * issued ones, we need to try to recover and interpret
 +		 */
 +		return SUCCESS;
 +
++=======
++>>>>>>> e925cc431ac8 (scsi: call device handler for failed TUR command)
  	if (scsi_sense_is_deferred(&sshdr))
  		return NEEDS_RETRY;
  
* Unmerged path drivers/scsi/scsi_error.c
