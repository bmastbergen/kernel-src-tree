tools/perf/build: Improve printout-of auto-detected features

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/build: Improve printout-of auto-detected features (Jiri Olsa) [1131394]
Rebuild_FUZZ: 94.74%
commit-author Ingo Molnar <mingo@kernel.org>
commit b3b64a12239e758573316df19cbbaf0126887440
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/b3b64a12.failed

Change the print-out of auto-detected features by making sure that
repeat invocations of 'make' when all features are successfully
detected do not produce the (rather lengthy) autodetection printout.

( When one or more features are missing then we still print out the
  feature detection table, to make sure people are aware of the
  resulting limitations. )

	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
Link: http://lkml.kernel.org/n/tip-qd8sMsshcjomxqx9bQcufmaa@git.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit b3b64a12239e758573316df19cbbaf0126887440)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
diff --cc tools/perf/config/Makefile
index 5de26b96afcf,fb6ec069f541..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -102,35 -102,77 +102,55 @@@ ende
  #
  # Build the feature check binaries in parallel, ignore errors, ignore return value and suppress output:
  #
- $(info )
- $(info Auto-detecting system features:)
  
 -#
 -# Note that this is not a complete list of all feature tests, just
 -# those that are typically built on a fully configured system.
 -#
 -# [ Feature tests not mentioned here have to be built explicitly in
 -#   the rule that uses them - an example for that is the 'bionic'
 -#   feature check. ]
 -#
 -CORE_FEATURE_TESTS =			\
 -	backtrace			\
 -	dwarf				\
 +FEATURE_TESTS =				\
 +	hello				\
 +	stackprotector-all		\
 +	stackprotector			\
 +	volatile-register-var		\
  	fortify-source			\
 -	glibc				\
 -	gtk2				\
 -	gtk2-infobar			\
 -	libaudit			\
 -	libbfd				\
 +	bionic				\
  	libelf				\
 -	libelf-getphdrnum		\
 -	libelf-mmap			\
 -	libnuma				\
 -	libperl				\
 -	libpython			\
 -	libpython-version		\
 -	libslang			\
 -	libunwind			\
 -	on-exit				\
 -	stackprotector			\
 -	stackprotector-all		\
 -	volatile-register-var
 +	glibc				\
 +	dwarf				\
 +	libnuma
  
+ #
+ # So here we detect whether test-all was rebuilt, to be able
+ # to skip the print-out of the long features list if the file
+ # existed before and after it was built:
+ #
+ ifeq ($(wildcard config/feature-checks/test-all),)
+   test-all-failed := 1
+ else
+   test-all-failed := 0
+ endif
+ 
  #
  # Special fast-path for the 'all features are available' case:
  #
- $(call feature_check,all)
+ $(call feature_check,all,$(MSG))
+ 
+ #
+ # Just in case the build freshly failed, make sure we print the
+ # feature matrix:
+ #
+ ifeq ($(feature-all), 0)
+   test-all-failed := 1
+ endif
+ 
+ ifeq ($(test-all-failed),1)
+   $(info )
+   $(info Auto-detecting system features:)
+ endif
  
  ifeq ($(feature-all), 1)
 -  #
 -  # test-all.c passed - just set all the core feature flags to 1:
 -  #
 -  $(foreach feat,$(CORE_FEATURE_TESTS),$(call feature_set,$(feat)))
 +  $(foreach feat,$(FEATURE_TESTS),$(call feature_set,$(feat)))
  else
 -  $(shell $(MAKE) -i -j -C config/feature-checks $(CORE_FEATURE_TESTS) >/dev/null 2>&1)
 -  $(foreach feat,$(CORE_FEATURE_TESTS),$(call feature_check,$(feat)))
 +  $(shell $(MAKE) -i -j -C config/feature-checks >/dev/null 2>&1)
 +  $(foreach feat,$(FEATURE_TESTS),$(call feature_check,$(feat)))
  endif
  
- feature_print = $(eval $(feature_print_code))
- 
  #
  # Print the result of the feature test:
  #
@@@ -143,10 -186,13 +164,20 @@@ define feature_print_cod
    $(info $(MSG))
  endef
  
++<<<<<<< HEAD
 +$(foreach feat,$(FEATURE_TESTS) DUMMY,$(call feature_print,$(feat)))
 +
 +# newline at the end of the feature printouts:
 +$(info )
++=======
+ #
+ # Only print out our features if we rebuilt the testcases or if a test failed:
+ #
+ ifeq ($(test-all-failed), 1)
+   $(foreach feat,$(CORE_FEATURE_TESTS) DUMMY,$(call feature_print,$(feat)))
+   $(info )
+ endif
++>>>>>>> b3b64a12239e (tools/perf/build: Improve printout-of auto-detected features)
  
  ifeq ($(feature-stackprotector-all), 1)
    CFLAGS += -fstack-protector-all
* Unmerged path tools/perf/config/Makefile
