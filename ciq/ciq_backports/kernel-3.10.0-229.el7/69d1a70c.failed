i40e: rename i40e_ptp_enable to i40e_ptp_feature_enable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit 69d1a70c3f0046d06f5520a230eee9a829ee6689
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/69d1a70c.failed

Reduces possible confusion and ambiguity in purpose of the ancillary
feature control entry point function.

Change-ID: I21d773c1a86878f6d061505185b596c788d1b7cc
	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 69d1a70c3f0046d06f5520a230eee9a829ee6689)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_ptp.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_ptp.c
index 3e6b6c92f4a6,6f7d73b6affb..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_ptp.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ptp.c
@@@ -216,41 -216,7 +216,45 @@@ static int i40e_ptp_settime(struct ptp_
  }
  
  /**
++<<<<<<< HEAD
 + * i40e_ptp_tx_work
 + * @work: pointer to work struct
 + *
 + * This work function polls the PRTTSYN_STAT_0.TXTIME bit to determine when a
 + * Tx timestamp event has occurred, in order to pass the Tx timestamp value up
 + * the stack in the skb.
 + */
 +static void i40e_ptp_tx_work(struct work_struct *work)
 +{
 +	struct i40e_pf *pf = container_of(work, struct i40e_pf,
 +					  ptp_tx_work);
 +	struct i40e_hw *hw = &pf->hw;
 +	u32 prttsyn_stat_0;
 +
 +	if (!pf->ptp_tx_skb)
 +		return;
 +
 +	if (time_is_before_jiffies(pf->ptp_tx_start +
 +				   I40E_PTP_TX_TIMEOUT)) {
 +		dev_kfree_skb_any(pf->ptp_tx_skb);
 +		pf->ptp_tx_skb = NULL;
 +		pf->tx_hwtstamp_timeouts++;
 +		dev_warn(&pf->pdev->dev, "clearing Tx timestamp hang");
 +		return;
 +	}
 +
 +	prttsyn_stat_0 = rd32(hw, I40E_PRTTSYN_STAT_0);
 +	if (prttsyn_stat_0 & I40E_PRTTSYN_STAT_0_TXTIME_MASK)
 +		i40e_ptp_tx_hwtstamp(pf);
 +	else
 +		schedule_work(&pf->ptp_tx_work);
 +}
 +
 +/**
 + * i40e_ptp_enable - Enable/disable ancillary features of the PHC subsystem
++=======
+  * i40e_ptp_feature_enable - Enable/disable ancillary features of the PHC subsystem
++>>>>>>> 69d1a70c3f00 (i40e: rename i40e_ptp_enable to i40e_ptp_feature_enable)
   * @ptp: The PTP clock structure
   * @rq: The requested feature to change
   * @on: Enable/disable flag
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_ptp.c
