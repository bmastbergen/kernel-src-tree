tools/power turbostat: tweak whitespace in output format

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] turbostat: tweak whitespace in output format (Prarit Bhargava) [1133893]
Rebuild_FUZZ: 88.00%
commit-author Len Brown <len.brown@intel.com>
commit e7c95ff32d0075736cbdd8d38d954fb4ed6ced9b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/e7c95ff3.failed

turbostat -S
output was off by 1 space before this patch.

	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit e7c95ff32d0075736cbdd8d38d954fb4ed6ced9b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index ce6d943b2b0c,5b1b807265a1..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -265,35 -264,30 +265,61 @@@ int _get_msr(int cpu, off_t offset, uns
  	return 0;
  }
  
++<<<<<<< HEAD
 +int get_msr(int cpu, off_t offset, unsigned long long *msr)
 +{
 +	return _get_msr(cpu, offset, msr, 1);
 +}
 +
 +int get_msr_nowarn(int cpu, off_t offset, unsigned long long *msr)
 +{
 +	return _get_msr(cpu, offset, msr, 0);
 +}
++=======
+ /*
+  * Example Format w/ field column widths:
+  *
+  *  Package    Core     CPU Avg_MHz Bzy_MHz TSC_MHz     SMI   %Busy CPU_%c1 CPU_%c3 CPU_%c6 CPU_%c7 CoreTmp  PkgTmp Pkg%pc2 Pkg%pc3 Pkg%pc6 Pkg%pc7 PkgWatt CorWatt GFXWatt
+  * 123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678
+  */
++>>>>>>> e7c95ff32d00 (tools/power turbostat: tweak whitespace in output format)
  
  void print_header(void)
  {
  	if (show_pkg)
++<<<<<<< HEAD
 +		outp += sprintf(outp, "pk");
 +	if (show_pkg)
 +		outp += sprintf(outp, " ");
 +	if (show_core)
 +		outp += sprintf(outp, "cor");
 +	if (show_cpu)
 +		outp += sprintf(outp, " CPU");
 +	if (show_pkg || show_core || show_cpu)
 +		outp += sprintf(outp, " ");
 +	if (do_nhm_cstates)
 +		outp += sprintf(outp, "   %%c0");
 +	if (has_aperf)
 +		outp += sprintf(outp, "  GHz");
 +	outp += sprintf(outp, "  TSC");
 +	if (do_smi)
 +		outp += sprintf(outp, " SMI");
++=======
+ 		outp += sprintf(outp, " Package");
+ 	if (show_core)
+ 		outp += sprintf(outp, "    Core");
+ 	if (show_cpu)
+ 		outp += sprintf(outp, "     CPU");
+ 	if (has_aperf)
+ 		outp += sprintf(outp, " Avg_MHz");
+ 	if (do_nhm_cstates)
+ 		outp += sprintf(outp, "   %%Busy");
+ 	if (has_aperf)
+ 		outp += sprintf(outp, " Bzy_MHz");
+ 	outp += sprintf(outp, " TSC_MHz");
+ 	if (do_smi)
+ 		outp += sprintf(outp, "     SMI");
++>>>>>>> e7c95ff32d00 (tools/power turbostat: tweak whitespace in output format)
  	if (extra_delta_offset32)
  		outp += sprintf(outp, "  count 0x%03X", extra_delta_offset32);
  	if (extra_delta_offset64)
@@@ -303,60 -297,60 +329,116 @@@
  	if (extra_msr_offset64)
  		outp += sprintf(outp, "           MSR 0x%03X", extra_msr_offset64);
  	if (do_nhm_cstates)
++<<<<<<< HEAD
 +		outp += sprintf(outp, "    %%c1");
 +	if (do_nhm_cstates && !do_slm_cstates)
 +		outp += sprintf(outp, "    %%c3");
 +	if (do_nhm_cstates)
 +		outp += sprintf(outp, "    %%c6");
 +	if (do_snb_cstates)
 +		outp += sprintf(outp, "    %%c7");
 +
 +	if (do_dts)
 +		outp += sprintf(outp, " CTMP");
 +	if (do_ptm)
 +		outp += sprintf(outp, " PTMP");
 +
 +	if (do_snb_cstates)
 +		outp += sprintf(outp, "   %%pc2");
 +	if (do_nhm_cstates && !do_slm_cstates)
 +		outp += sprintf(outp, "   %%pc3");
 +	if (do_nhm_cstates && !do_slm_cstates)
 +		outp += sprintf(outp, "   %%pc6");
 +	if (do_snb_cstates)
 +		outp += sprintf(outp, "   %%pc7");
 +	if (do_c8_c9_c10) {
 +		outp += sprintf(outp, "   %%pc8");
 +		outp += sprintf(outp, "   %%pc9");
 +		outp += sprintf(outp, "  %%pc10");
++=======
+ 		outp += sprintf(outp, "  CPU%%c1");
+ 	if (do_nhm_cstates && !do_slm_cstates)
+ 		outp += sprintf(outp, "  CPU%%c3");
+ 	if (do_nhm_cstates)
+ 		outp += sprintf(outp, "  CPU%%c6");
+ 	if (do_snb_cstates)
+ 		outp += sprintf(outp, "  CPU%%c7");
+ 
+ 	if (do_dts)
+ 		outp += sprintf(outp, " CoreTmp");
+ 	if (do_ptm)
+ 		outp += sprintf(outp, "  PkgTmp");
+ 
+ 	if (do_snb_cstates)
+ 		outp += sprintf(outp, " Pkg%%pc2");
+ 	if (do_nhm_cstates && !do_slm_cstates)
+ 		outp += sprintf(outp, " Pkg%%pc3");
+ 	if (do_nhm_cstates && !do_slm_cstates)
+ 		outp += sprintf(outp, " Pkg%%pc6");
+ 	if (do_snb_cstates)
+ 		outp += sprintf(outp, " Pkg%%pc7");
+ 	if (do_c8_c9_c10) {
+ 		outp += sprintf(outp, " Pkg%%pc8");
+ 		outp += sprintf(outp, " Pkg%%pc9");
+ 		outp += sprintf(outp, " Pk%%pc10");
++>>>>>>> e7c95ff32d00 (tools/power turbostat: tweak whitespace in output format)
  	}
  
  	if (do_rapl && !rapl_joules) {
  		if (do_rapl & RAPL_PKG)
++<<<<<<< HEAD
 +			outp += sprintf(outp, "  Pkg_W");
 +		if (do_rapl & RAPL_CORES)
 +			outp += sprintf(outp, "  Cor_W");
 +		if (do_rapl & RAPL_GFX)
 +			outp += sprintf(outp, " GFX_W");
 +		if (do_rapl & RAPL_DRAM)
 +			outp += sprintf(outp, " RAM_W");
 +		if (do_rapl & RAPL_PKG_PERF_STATUS)
 +			outp += sprintf(outp, " PKG_%%");
 +		if (do_rapl & RAPL_DRAM_PERF_STATUS)
 +			outp += sprintf(outp, " RAM_%%");
 +	} else {
 +		if (do_rapl & RAPL_PKG)
 +			outp += sprintf(outp, "  Pkg_J");
 +		if (do_rapl & RAPL_CORES)
 +			outp += sprintf(outp, "  Cor_J");
 +		if (do_rapl & RAPL_GFX)
 +			outp += sprintf(outp, " GFX_J");
 +		if (do_rapl & RAPL_DRAM)
 +			outp += sprintf(outp, " RAM_W");
 +		if (do_rapl & RAPL_PKG_PERF_STATUS)
 +			outp += sprintf(outp, " PKG_%%");
 +		if (do_rapl & RAPL_DRAM_PERF_STATUS)
 +			outp += sprintf(outp, " RAM_%%");
 +		outp += sprintf(outp, " time");
++=======
+ 			outp += sprintf(outp, " PkgWatt");
+ 		if (do_rapl & RAPL_CORES)
+ 			outp += sprintf(outp, " CorWatt");
+ 		if (do_rapl & RAPL_GFX)
+ 			outp += sprintf(outp, " GFXWatt");
+ 		if (do_rapl & RAPL_DRAM)
+ 			outp += sprintf(outp, " RAMWatt");
+ 		if (do_rapl & RAPL_PKG_PERF_STATUS)
+ 			outp += sprintf(outp, "   PKG_%%");
+ 		if (do_rapl & RAPL_DRAM_PERF_STATUS)
+ 			outp += sprintf(outp, "   RAM_%%");
+ 	} else {
+ 		if (do_rapl & RAPL_PKG)
+ 			outp += sprintf(outp, "   Pkg_J");
+ 		if (do_rapl & RAPL_CORES)
+ 			outp += sprintf(outp, "   Cor_J");
+ 		if (do_rapl & RAPL_GFX)
+ 			outp += sprintf(outp, "   GFX_J");
+ 		if (do_rapl & RAPL_DRAM)
+ 			outp += sprintf(outp, "   RAM_W");
+ 		if (do_rapl & RAPL_PKG_PERF_STATUS)
+ 			outp += sprintf(outp, "   PKG_%%");
+ 		if (do_rapl & RAPL_DRAM_PERF_STATUS)
+ 			outp += sprintf(outp, "   RAM_%%");
+ 		outp += sprintf(outp, "   time");
++>>>>>>> e7c95ff32d00 (tools/power turbostat: tweak whitespace in output format)
  
  	}
  	outp += sprintf(outp, "\n");
* Unmerged path tools/power/x86/turbostat/turbostat.c
