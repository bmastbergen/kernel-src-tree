ib_srpt: convert printk's to pr_* functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [infiniband] srpt: convert printk's to pr_* functions (Doug Ledford) [1174910]
Rebuild_FUZZ: 96.39%
commit-author Doug Ledford <dledford@redhat.com>
commit 9f5d32af09b9a36ca1476c9932aac675051670c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/9f5d32af.failed

The driver already defined the pr_format, it just hadn't
been converted to use pr_info, pr_warn, and pr_err instead
of the equivalent printks.  Convert so that messages from
the driver are now properly tagged with their driver name
and can be more easily debugged.

In addition, a number of these printk's were not newline
terminated, so fix that at the same time.

	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 9f5d32af09b9a36ca1476c9932aac675051670c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srpt/ib_srpt.c
diff --cc drivers/infiniband/ulp/srpt/ib_srpt.c
index 4400f726f735,4b9b866e6b0d..000000000000
--- a/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c
@@@ -1501,13 -1493,9 +1500,12 @@@ static void srpt_handle_rdma_err_comp(s
  			       __func__, __LINE__, state);
  		break;
  	case SRPT_RDMA_WRITE_LAST:
 +		spin_lock_irqsave(&ioctx->cmd.t_state_lock, flags);
 +		ioctx->cmd.transport_state |= CMD_T_LUN_STOP;
 +		spin_unlock_irqrestore(&ioctx->cmd.t_state_lock, flags);
  		break;
  	default:
- 		printk(KERN_ERR "%s[%d]: opcode = %u\n", __func__,
- 		       __LINE__, opcode);
+ 		pr_err("%s[%d]: opcode = %u\n", __func__, __LINE__, opcode);
  		break;
  	}
  }
@@@ -2125,7 -2113,14 +2122,18 @@@ static int srpt_create_ch_ib(struct srp
  	ch->qp = ib_create_qp(sdev->pd, qp_init);
  	if (IS_ERR(ch->qp)) {
  		ret = PTR_ERR(ch->qp);
++<<<<<<< HEAD
 +		printk(KERN_ERR "failed to create_qp ret= %d\n", ret);
++=======
+ 		if (ret == -ENOMEM) {
+ 			srp_sq_size /= 2;
+ 			if (srp_sq_size >= MIN_SRPT_SQ_SIZE) {
+ 				ib_destroy_cq(ch->cq);
+ 				goto retry;
+ 			}
+ 		}
+ 		pr_err("failed to create_qp ret= %d\n", ret);
++>>>>>>> 9f5d32af09b9 (ib_srpt: convert printk's to pr_* functions)
  		goto err_destroy_cq;
  	}
  
@@@ -3062,9 -3053,9 +3068,9 @@@ static int srpt_queue_response(struct s
  	    !ioctx->queue_status_only) {
  		ret = srpt_xfer_data(ch, ioctx);
  		if (ret) {
- 			printk(KERN_ERR "xfer_data failed for tag %llu\n",
+ 			pr_err("xfer_data failed for tag %llu\n",
  			       ioctx->tag);
 -			return;
 +			goto out;
  		}
  	}
  
@@@ -3801,9 -3808,9 +3806,9 @@@ static ssize_t srpt_tpg_store_enable
  	unsigned long tmp;
          int ret;
  
 -	ret = kstrtoul(page, 0, &tmp);
 +	ret = strict_strtoul(page, 0, &tmp);
  	if (ret < 0) {
- 		printk(KERN_ERR "Unable to extract srpt_tpg_store_enable\n");
+ 		pr_err("Unable to extract srpt_tpg_store_enable\n");
  		return -EINVAL;
  	}
  
* Unmerged path drivers/infiniband/ulp/srpt/ib_srpt.c
