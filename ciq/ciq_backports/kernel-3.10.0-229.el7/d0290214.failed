net: add busy_poll device feature

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [net] add busy_poll device feature (Jiri Pirko) [1080093]
Rebuild_FUZZ: 91.80%
commit-author Jiri Pirko <jiri@resnulli.us>
commit d0290214de712150b118a532ded378a29255893b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/d0290214.failed

Currently there is no way how to find out if a device supports busy
polling. So add a feature and make it dependent on ndo_busy_poll
existence.

	Signed-off-by: Jiri Pirko <jiri@resnulli.us>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d0290214de712150b118a532ded378a29255893b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdev_features.h
#	net/core/ethtool.c
diff --cc include/linux/netdev_features.h
index b05a4b501ab5,c26d0ec2ef3a..000000000000
--- a/include/linux/netdev_features.h
+++ b/include/linux/netdev_features.h
@@@ -62,6 -62,8 +62,11 @@@ enum 
  	NETIF_F_HW_VLAN_STAG_TX_BIT,	/* Transmit VLAN STAG HW acceleration */
  	NETIF_F_HW_VLAN_STAG_RX_BIT,	/* Receive VLAN STAG HW acceleration */
  	NETIF_F_HW_VLAN_STAG_FILTER_BIT,/* Receive filtering on VLAN STAGs */
++<<<<<<< HEAD
++=======
+ 	NETIF_F_HW_L2FW_DOFFLOAD_BIT,	/* Allow L2 Forwarding in Hardware */
+ 	NETIF_F_BUSY_POLL_BIT,		/* Busy poll */
++>>>>>>> d0290214de71 (net: add busy_poll device feature)
  
  	/*
  	 * Add your fresh new feature above and remember to update
@@@ -116,6 -118,8 +121,11 @@@
  #define NETIF_F_HW_VLAN_STAG_FILTER __NETIF_F(HW_VLAN_STAG_FILTER)
  #define NETIF_F_HW_VLAN_STAG_RX	__NETIF_F(HW_VLAN_STAG_RX)
  #define NETIF_F_HW_VLAN_STAG_TX	__NETIF_F(HW_VLAN_STAG_TX)
++<<<<<<< HEAD
++=======
+ #define NETIF_F_HW_L2FW_DOFFLOAD	__NETIF_F(HW_L2FW_DOFFLOAD)
+ #define NETIF_F_BUSY_POLL	__NETIF_F(BUSY_POLL)
++>>>>>>> d0290214de71 (net: add busy_poll device feature)
  
  /* Features valid for ethtool to change */
  /* = all defined minus driver/device-class-related */
diff --cc net/core/ethtool.c
index de5130268175,640ba0e5831c..000000000000
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@@ -96,6 -96,8 +96,11 @@@ static const char netdev_features_strin
  	[NETIF_F_LOOPBACK_BIT] =         "loopback",
  	[NETIF_F_RXFCS_BIT] =            "rx-fcs",
  	[NETIF_F_RXALL_BIT] =            "rx-all",
++<<<<<<< HEAD
++=======
+ 	[NETIF_F_HW_L2FW_DOFFLOAD_BIT] = "l2-fwd-offload",
+ 	[NETIF_F_BUSY_POLL_BIT] =        "busy-poll",
++>>>>>>> d0290214de71 (net: add busy_poll device feature)
  };
  
  static int ethtool_get_features(struct net_device *dev, void __user *useraddr)
* Unmerged path include/linux/netdev_features.h
diff --git a/net/core/dev.c b/net/core/dev.c
index d06cd723bba7..561bbc621ada 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -5104,6 +5104,13 @@ static netdev_features_t netdev_fix_features(struct net_device *dev,
 		}
 	}
 
+#ifdef CONFIG_NET_RX_BUSY_POLL
+	if (dev->netdev_ops->ndo_busy_poll)
+		features |= NETIF_F_BUSY_POLL;
+	else
+#endif
+		features &= ~NETIF_F_BUSY_POLL;
+
 	return features;
 }
 
* Unmerged path net/core/ethtool.c
