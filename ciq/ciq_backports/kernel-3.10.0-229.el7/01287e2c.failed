tools/perf/build: Remove the volatile-register-var feature check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/build: Remove the volatile-register-var feature check (Jiri Olsa) [1131394]
Rebuild_FUZZ: 95.08%
commit-author Ingo Molnar <mingo@kernel.org>
commit 01287e2cb7ad17b3d77751888d458a6b6a2bba15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/01287e2c.failed

Namhyung Kim noticed that the volatile-register-var feature check
is superfluous:

 > The gcc manpage says this warning is enabled by -Wall, and we add -Wall
 > to CFLAGS before doing feature checks.  So all gcc versions that support
 > -Wvolatile-register-var enables it by default without this check and
 > older gcc versions will always fail the feature check.

Remove it - this will further speed up feature checks.

	Reported-by: Namhyung Kim <namhyung@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 01287e2cb7ad17b3d77751888d458a6b6a2bba15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/config/Makefile
#	tools/perf/config/feature-checks/Makefile
diff --cc tools/perf/config/Makefile
index 111386e0ab08,c516d6ba6716..000000000000
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@@ -98,20 -103,47 +98,63 @@@ ende
  #
  # Build the feature check binaries in parallel, ignore errors, ignore return value and suppress output:
  #
 +$(info )
 +$(info Auto-detecting system features:)
  
++<<<<<<< HEAD
 +FEATURE_TESTS =				\
 +	hello				\
 +	stackprotector-all		\
 +	stackprotector			\
 +	volatile-register-var		\
 +	fortify-source			\
 +	bionic				\
 +	libelf				\
 +	glibc				\
 +	dwarf				\
 +	libnuma
++=======
+ #
+ # Note that this is not a complete list of all feature tests, just
+ # those that are typically built on a fully configured system.
+ #
+ # [ Feature tests not mentioned here have to be built explicitly in
+ #   the rule that uses them - an example for that is the 'bionic'
+ #   feature check. ]
+ #
+ CORE_FEATURE_TESTS =			\
+ 	backtrace			\
+ 	dwarf				\
+ 	fortify-source			\
+ 	glibc				\
+ 	gtk2				\
+ 	gtk2-infobar			\
+ 	libaudit			\
+ 	libbfd				\
+ 	libelf				\
+ 	libelf-getphdrnum		\
+ 	libelf-mmap			\
+ 	libnuma				\
+ 	libperl				\
+ 	libpython			\
+ 	libpython-version		\
+ 	libslang			\
+ 	libunwind			\
+ 	on-exit				\
+ 	stackprotector			\
+ 	stackprotector-all
+ 
+ #
+ # So here we detect whether test-all was rebuilt, to be able
+ # to skip the print-out of the long features list if the file
+ # existed before and after it was built:
+ #
+ ifeq ($(wildcard $(OUTPUT)config/feature-checks/test-all),)
+   test-all-failed := 1
+ else
+   test-all-failed := 0
+ endif
++>>>>>>> 01287e2cb7ad (tools/perf/build: Remove the volatile-register-var feature check)
  
  #
  # Special fast-path for the 'all features are available' case:
diff --cc tools/perf/config/feature-checks/Makefile
index 19082b9c3ca6,2eb83467cca2..000000000000
--- a/tools/perf/config/feature-checks/Makefile
+++ b/tools/perf/config/feature-checks/Makefile
@@@ -1,15 -1,31 +1,19 @@@
  
  FILES=					\
 -	test-all			\
 -	test-backtrace			\
 -	test-bionic			\
 -	test-dwarf			\
 -	test-fortify-source		\
 -	test-glibc			\
 -	test-gtk2			\
 -	test-gtk2-infobar		\
  	test-hello			\
 -	test-libaudit			\
 -	test-libbfd			\
 -	test-liberty			\
 -	test-liberty-z			\
 -	test-cplus-demangle		\
 -	test-libelf			\
 -	test-libelf-getphdrnum		\
 -	test-libelf-mmap		\
 -	test-libnuma			\
 -	test-libperl			\
 -	test-libpython			\
 -	test-libpython-version		\
 -	test-libslang			\
 -	test-libunwind			\
 -	test-on-exit			\
  	test-stackprotector-all		\
++<<<<<<< HEAD
 +	test-stackprotector		\
 +	test-volatile-register-var	\
 +	test-fortify-source		\
 +	test-bionic			\
 +	test-libelf			\
 +	test-glibc			\
 +	test-dwarf			\
 +	test-libnuma
++=======
+ 	test-stackprotector
++>>>>>>> 01287e2cb7ad (tools/perf/build: Remove the volatile-register-var feature check)
  
  CC := $(CC) -MD
  
@@@ -20,7 -36,7 +24,11 @@@ BUILD = $(CC) -o $(OUTPUT)$@ $@.
  ###############################
  
  test-all:
++<<<<<<< HEAD
 +	$(BUILD) -Werror -fstack-protector -fstack-protector-all -Wvolatile-register-var -O2 -Werror -D_FORTIFY_SOURCE=2 -ldw -lelf -lnuma -lunwind -lunwind-x86_64 -lelf -laudit -I/usr/include/slang -lslang $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null) $(FLAGS_PERL_EMBED) $(FLAGS_PYTHON_EMBED) -DPACKAGE='perf' -DPACKAGE=perf -lbfd -ldl
++=======
+ 	$(BUILD) -Werror -fstack-protector -fstack-protector-all -O2 -Werror -D_FORTIFY_SOURCE=2 -ldw -lelf -lnuma -lunwind -lunwind-x86_64 -lelf -laudit -I/usr/include/slang -lslang $(shell pkg-config --libs --cflags gtk+-2.0 2>/dev/null) $(FLAGS_PERL_EMBED) $(FLAGS_PYTHON_EMBED) -DPACKAGE='"perf"' -lbfd -ldl
++>>>>>>> 01287e2cb7ad (tools/perf/build: Remove the volatile-register-var feature check)
  
  test-hello:
  	$(BUILD)
* Unmerged path tools/perf/config/Makefile
* Unmerged path tools/perf/config/feature-checks/Makefile
