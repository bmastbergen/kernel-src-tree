rbd: read image size for discard check safely

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Josh Durgin <josh.durgin@inktank.com>
commit 3c5df89367761d09d76454a2c4301a73bf2d46ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/3c5df893.failed

In rbd_img_request_fill() the image size is only checked to determine
whether we can truncate an object instead of zeroing it for discard
requests. Take rbd_dev->header_rwsem while reading the image size, and
move this read into the discard check, so that non-discard ops don't
need to take the semaphore in this function.

	Signed-off-by: Josh Durgin <josh.durgin@inktank.com>
(cherry picked from commit 3c5df89367761d09d76454a2c4301a73bf2d46ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/rbd.c
diff --cc drivers/block/rbd.c
index 3b1e147d1a7c,31ace3dd33e4..000000000000
--- a/drivers/block/rbd.c
+++ b/drivers/block/rbd.c
@@@ -2354,7 -2391,26 +2354,30 @@@ static int rbd_img_request_fill(struct 
  			pages += page_count;
  		}
  
++<<<<<<< HEAD
 +		if (img_request_write_test(img_request)) {
++=======
+ 		if (img_request_discard_test(img_request)) {
+ 			op_type = OBJ_OP_DISCARD;
+ 			if (!offset && (length == object_size)
+ 				&& (!img_request_layered_test(img_request) ||
+ 					(rbd_dev->parent_overlap <=
+ 						obj_request->img_offset))) {
+ 				opcode = CEPH_OSD_OP_DELETE;
+ 			} else if ((offset + length == object_size)) {
+ 				opcode = CEPH_OSD_OP_TRUNCATE;
+ 			} else {
+ 				down_read(&rbd_dev->header_rwsem);
+ 				img_end = rbd_dev->header.image_size;
+ 				up_read(&rbd_dev->header_rwsem);
+ 
+ 				if (obj_request->img_offset + length == img_end)
+ 					opcode = CEPH_OSD_OP_TRUNCATE;
+ 				else
+ 					opcode = CEPH_OSD_OP_ZERO;
+ 			}
+ 		} else if (img_request_write_test(img_request)) {
++>>>>>>> 3c5df8936776 (rbd: read image size for discard check safely)
  			op_type = OBJ_OP_WRITE;
  			opcode = CEPH_OSD_OP_WRITE;
  		} else {
* Unmerged path drivers/block/rbd.c
