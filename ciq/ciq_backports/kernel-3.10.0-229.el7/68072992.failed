nfs: support page groups in nfs_read_completion

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Weston Andros Adamson <dros@primarydata.com>
commit 68072992c8f6ace57fe80b6fb5d57b3ae887a09d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/68072992.failed

nfs_read_completion relied on the fact that there was a 1:1 mapping
of page to nfs_request, but this has now changed.

Regions not covered by a request have already been zeroed elsewhere.

	Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 68072992c8f6ace57fe80b6fb5d57b3ae887a09d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/read.c
diff --cc fs/nfs/read.c
index d58a7ae6152b,e818a475ca64..000000000000
--- a/fs/nfs/read.c
+++ b/fs/nfs/read.c
@@@ -179,7 -124,12 +179,16 @@@ static void nfs_readpage_release(struc
  	nfs_release_request(req);
  }
  
++<<<<<<< HEAD
 +/* Note io was page aligned */
++=======
+ static void nfs_page_group_set_uptodate(struct nfs_page *req)
+ {
+ 	if (nfs_page_group_sync_on_bit(req, PG_UPTODATE))
+ 		SetPageUptodate(req->wb_page);
+ }
+ 
++>>>>>>> 68072992c8f6 (nfs: support page groups in nfs_read_completion)
  static void nfs_read_completion(struct nfs_pgio_header *hdr)
  {
  	unsigned long bytes = 0;
* Unmerged path fs/nfs/read.c
