perf top: Add --children option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [tools] perf/top: Add --children option (Jiri Olsa) [1134356]
Rebuild_FUZZ: 96.77%
commit-author Namhyung Kim <namhyung@kernel.org>
commit 1432ec342ece6a7ef78825ae3a9ba1c91686f71d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/1432ec34.failed

The --children option is for showing accumulated overhead (period)
value as well as self overhead.  It should be used with one of -g or
--call-graph option.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Tested-by: Arun Sharma <asharma@fb.com>
	Tested-by: Rodrigo Campos <rodrigo@sdfg.com.ar>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
Link: http://lkml.kernel.org/r/1401335910-16832-21-git-send-email-namhyung@kernel.org
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
(cherry picked from commit 1432ec342ece6a7ef78825ae3a9ba1c91686f71d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-top.txt
#	tools/perf/builtin-top.c
diff --cc tools/perf/Documentation/perf-top.txt
index 4f15a524d84b,180ae02137a5..000000000000
--- a/tools/perf/Documentation/perf-top.txt
+++ b/tools/perf/Documentation/perf-top.txt
@@@ -116,6 -116,15 +116,18 @@@ Default is to monitor all CPUS
  	local_weight, abort, in_tx, transaction, overhead, sample, period.
  	Please see description of --sort in the perf-report man page.
  
++<<<<<<< HEAD
++=======
+ --fields=::
+ 	Specify output field - multiple keys can be specified in CSV format.
+ 	Following fields are available:
+ 	overhead, overhead_sys, overhead_us, overhead_children, sample and period.
+ 	Also it can contain any sort key(s).
+ 
+ 	By default, every sort keys not specified in --field will be appended
+ 	automatically.
+ 
++>>>>>>> 1432ec342ece (perf top: Add --children option)
  -n::
  --show-nr-samples::
  	Show a column with the number of samples.
@@@ -149,6 -161,20 +161,23 @@@
  	Setup and enable call-graph (stack chain/backtrace) recording,
  	implies -g.
  
++<<<<<<< HEAD
++=======
+ --children::
+ 	Accumulate callchain of children to parent entry so that then can
+ 	show up in the output.  The output will have a new "Children" column
+ 	and will be sorted on the data.  It requires -g/--call-graph option
+ 	enabled.
+ 
+ --max-stack::
+ 	Set the stack depth limit when parsing the callchain, anything
+ 	beyond the specified depth will be ignored. This is a trade-off
+ 	between information loss and faster processing especially for
+ 	workloads that can have a very long callchain stack.
+ 
+ 	Default: 127
+ 
++>>>>>>> 1432ec342ece (perf top: Add --children option)
  --ignore-callees=<regex>::
          Ignore callees of the function(s) matching the given regex.
          This has the effect of collecting the callers of each such
diff --cc tools/perf/builtin-top.c
index 610f8ed9ce3e,fea55e3fc931..000000000000
--- a/tools/perf/builtin-top.c
+++ b/tools/perf/builtin-top.c
@@@ -1099,6 -1098,11 +1099,14 @@@ int cmd_top(int argc, const char **argv
  	OPT_CALLBACK(0, "call-graph", &top.record_opts,
  		     "mode[,dump_size]", record_callchain_help,
  		     &parse_callchain_opt),
++<<<<<<< HEAD
++=======
+ 	OPT_BOOLEAN(0, "children", &symbol_conf.cumulate_callchain,
+ 		    "Accumulate callchains of children and show total overhead as well"),
+ 	OPT_INTEGER(0, "max-stack", &top.max_stack,
+ 		    "Set the maximum stack depth when parsing the callchain. "
+ 		    "Default: " __stringify(PERF_MAX_STACK_DEPTH)),
++>>>>>>> 1432ec342ece (perf top: Add --children option)
  	OPT_CALLBACK(0, "ignore-callees", NULL, "regex",
  		   "ignore callees of these functions in call graphs",
  		   report_parse_ignore_callees_opt),
* Unmerged path tools/perf/Documentation/perf-top.txt
* Unmerged path tools/perf/builtin-top.c
