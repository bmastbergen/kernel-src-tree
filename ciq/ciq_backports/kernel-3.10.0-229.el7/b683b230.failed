iommu/vt-d: Introduce macro for_each_dev_scope() to walk device scope entries

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [iommu] vt-d: Introduce macro for_each_dev_scope() to walk device scope entrie (Myron Stowe) [1129880 1087643]
Rebuild_FUZZ: 95.24%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit b683b230a244c3b2b3f6f3292e59d4a63298528b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/b683b230.failed

Introduce for_each_dev_scope()/for_each_active_dev_scope() to walk
{active} device scope entries. This will help following RCU lock
related patches.

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Signed-off-by: Joerg Roedel <joro@8bytes.org>
(cherry picked from commit b683b230a244c3b2b3f6f3292e59d4a63298528b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/dmar.c
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/dmar.c
index 54da61577318,4ae6df27ad5d..000000000000
--- a/drivers/iommu/dmar.c
+++ b/drivers/iommu/dmar.c
@@@ -448,7 -456,7 +452,11 @@@ int __init dmar_dev_scope_init(void
  	if (list_empty(&dmar_drhd_units))
  		goto fail;
  
++<<<<<<< HEAD
 +	list_for_each_entry_safe(drhd, drhd_n, &dmar_drhd_units, list) {
++=======
+ 	for_each_drhd_unit(drhd) {
++>>>>>>> b683b230a244 (iommu/vt-d: Introduce macro for_each_dev_scope() to walk device scope entries)
  		ret = dmar_parse_dev(drhd);
  		if (ret)
  			goto fail;
diff --cc drivers/iommu/intel-iommu.c
index 1e823b20bbdc,bb98e37f2cf7..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -675,11 -654,11 +675,17 @@@ static void domain_update_iommu_cap(str
  static struct intel_iommu *device_to_iommu(int segment, u8 bus, u8 devfn)
  {
  	struct dmar_drhd_unit *drhd = NULL;
+ 	struct intel_iommu *iommu;
+ 	struct pci_dev *dev;
  	int i;
  
++<<<<<<< HEAD
 +	for_each_drhd_unit(drhd) {
 +		if (drhd->ignored)
 +			continue;
++=======
+ 	for_each_active_iommu(iommu, drhd) {
++>>>>>>> b683b230a244 (iommu/vt-d: Introduce macro for_each_dev_scope() to walk device scope entries)
  		if (segment != drhd->segment)
  			continue;
  
@@@ -3344,16 -3301,14 +3348,20 @@@ static void __init init_no_remapping_de
  		}
  	}
  
++<<<<<<< HEAD
 +	for_each_drhd_unit(drhd) {
 +		int i;
 +		if (drhd->ignored || drhd->include_all)
++=======
+ 	for_each_active_drhd_unit(drhd) {
+ 		if (drhd->include_all)
++>>>>>>> b683b230a244 (iommu/vt-d: Introduce macro for_each_dev_scope() to walk device scope entries)
  			continue;
  
- 		for (i = 0; i < drhd->devices_cnt; i++)
- 			if (drhd->devices[i] &&
- 			    !IS_GFX_DEVICE(drhd->devices[i]))
+ 		for_each_active_dev_scope(drhd->devices,
+ 					  drhd->devices_cnt, i, dev)
+ 			if (!IS_GFX_DEVICE(dev))
  				break;
- 
  		if (i < drhd->devices_cnt)
  			continue;
  
@@@ -3629,11 -3594,11 +3637,17 @@@ out
  
  int __init dmar_parse_rmrr_atsr_dev(void)
  {
++<<<<<<< HEAD
 +	struct dmar_rmrr_unit *rmrr, *rmrr_n;
 +	struct dmar_atsr_unit *atsr, *atsr_n;
 +	int ret = 0;
++=======
+ 	struct dmar_rmrr_unit *rmrr;
+ 	struct dmar_atsr_unit *atsr;
+ 	int ret;
++>>>>>>> b683b230a244 (iommu/vt-d: Introduce macro for_each_dev_scope() to walk device scope entries)
  
 -	list_for_each_entry(rmrr, &dmar_rmrr_units, list) {
 +	list_for_each_entry_safe(rmrr, rmrr_n, &dmar_rmrr_units, list) {
  		ret = rmrr_parse_dev(rmrr);
  		if (ret)
  			return ret;
* Unmerged path drivers/iommu/dmar.c
* Unmerged path drivers/iommu/intel-iommu.c
diff --git a/include/linux/dmar.h b/include/linux/dmar.h
index b6fb978dad27..276106914d0b 100644
--- a/include/linux/dmar.h
+++ b/include/linux/dmar.h
@@ -61,6 +61,12 @@ extern struct list_head dmar_drhd_units;
 	list_for_each_entry(drhd, &dmar_drhd_units, list)		\
 		if (i=drhd->iommu, 0) {} else 
 
+#define	for_each_dev_scope(a, c, p, d)	\
+	for ((p) = 0; ((d) = (p) < (c) ? (a)[(p)] : NULL, (p) < (c)); (p)++)
+
+#define	for_each_active_dev_scope(a, c, p, d)	\
+	for_each_dev_scope((a), (c), (p), (d))	if (!(d)) { continue; } else
+
 extern int dmar_table_init(void);
 extern int dmar_dev_scope_init(void);
 extern int dmar_parse_dev_scope(void *start, void *end, int *cnt,
