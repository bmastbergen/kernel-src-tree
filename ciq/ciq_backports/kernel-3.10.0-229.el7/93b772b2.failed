GenWQE: Improve hardware error recovery

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
commit 93b772b25fa905c9158ee73c11c87b48668eabd0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/93b772b2.failed

Currently, in the event of a fatal hardware error, the driver tries a
recovery procedure that calls pci_reset_function() to reset the card.
This is not sufficient in some cases, needing a fundamental reset to
bring the card back.

This patch implements a call to the platform fundamental reset procedure
on the error recovery path if GENWQE_PLATFORM_ERROR_RECOVERY is enabled.
This is implemented by default only on PPC64, since this can cause
problems on other archs, e.g. zSeries, where the platform has its own
recovery procedures, leading to a potencial race conditition. For these
cases, the recovery is kept as it was before.

	Signed-off-by: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
	Acked-by: Frank Haverkamp <haver@linux.vnet.ibm.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 93b772b25fa905c9158ee73c11c87b48668eabd0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/genwqe/card_base.c
diff --cc drivers/misc/genwqe/card_base.c
index e6cc3e1e7326,abb796187ceb..000000000000
--- a/drivers/misc/genwqe/card_base.c
+++ b/drivers/misc/genwqe/card_base.c
@@@ -943,6 -985,28 +979,31 @@@ static int genwqe_health_thread(void *d
  	return 0;
  
   fatal_error:
++<<<<<<< HEAD
++=======
+ 	if (cd->use_platform_recovery) {
+ 		/*
+ 		 * Since we use raw accessors, EEH errors won't be detected
+ 		 * by the platform until we do a non-raw MMIO or config space
+ 		 * read
+ 		 */
+ 		readq(cd->mmio + IO_SLC_CFGREG_GFIR);
+ 
+ 		/* We do nothing if the card is going over PCI recovery */
+ 		if (pci_channel_offline(pci_dev))
+ 			return -EIO;
+ 
+ 		/*
+ 		 * If it's supported by the platform, we try a fundamental reset
+ 		 * to recover from a fatal error. Otherwise, we continue to wait
+ 		 * for an external recovery procedure to take care of it.
+ 		 */
+ 		rc = genwqe_platform_recovery(cd);
+ 		if (!rc)
+ 			goto health_thread_begin;
+ 	}
+ 
++>>>>>>> 93b772b25fa9 (GenWQE: Improve hardware error recovery)
  	dev_err(&pci_dev->dev,
  		"[%s] card unusable. Please trigger unbind!\n", __func__);
  
* Unmerged path drivers/misc/genwqe/card_base.c
