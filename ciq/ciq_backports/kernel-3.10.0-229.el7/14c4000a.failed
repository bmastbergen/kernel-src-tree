printk: Add function to return log buffer address and size

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
commit-author Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
commit 14c4000a88afaaa2d0877cc86d42a74fde0f35e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/14c4000a.failed

Platforms like IBM Power Systems supports service processor
assisted dump. It provides interface to add memory region to
be captured when system is crashed.

During initialization/running we can add kernel memory region
to be collected.

Presently we don't have a way to get the log buffer base address
and size. This patch adds support to return log buffer address
and size.

	Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Acked-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit 14c4000a88afaaa2d0877cc86d42a74fde0f35e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/printk.c
diff --cc kernel/printk.c
index d37d45c90ae6,e04c455a0e38..000000000000
--- a/kernel/printk.c
+++ b/kernel/printk.c
@@@ -255,13 -272,22 +255,27 @@@ static char __log_buf[__LOG_BUF_LEN] __
  static char *log_buf = __log_buf;
  static u32 log_buf_len = __LOG_BUF_LEN;
  
++<<<<<<< HEAD:kernel/printk.c
 +/* cpu currently holding logbuf_lock */
 +static volatile unsigned int logbuf_cpu = UINT_MAX;
++=======
+ /* Return log buffer address */
+ char *log_buf_addr_get(void)
+ {
+ 	return log_buf;
+ }
+ 
+ /* Return log buffer size */
+ u32 log_buf_len_get(void)
+ {
+ 	return log_buf_len;
+ }
++>>>>>>> 14c4000a88af (printk: Add function to return log buffer address and size):kernel/printk/printk.c
  
  /* human readable text of the record */
 -static char *log_text(const struct printk_log *msg)
 +static char *log_text(const struct log *msg)
  {
 -	return (char *)msg + sizeof(struct printk_log);
 +	return (char *)msg + sizeof(struct log);
  }
  
  /* optional key/value pair dictionary attached to the record */
diff --git a/include/linux/printk.h b/include/linux/printk.h
index 22c7052e9372..2deb0b0f3cd4 100644
--- a/include/linux/printk.h
+++ b/include/linux/printk.h
@@ -9,6 +9,9 @@
 extern const char linux_banner[];
 extern const char linux_proc_banner[];
 
+extern char *log_buf_addr_get(void);
+extern u32 log_buf_len_get(void);
+
 static inline int printk_get_level(const char *buffer)
 {
 	if (buffer[0] == KERN_SOH_ASCII && buffer[1]) {
* Unmerged path kernel/printk.c
