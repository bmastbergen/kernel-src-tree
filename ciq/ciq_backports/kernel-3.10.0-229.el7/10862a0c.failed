powerpc: Revert c6102609 and replace it with the correct fix for vio dma mask setting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-229.el7
Rebuild_CHGLOG: - [powerpc] Revert c6102609 and replace it with the correct fix for vio dma mask setting (Don Zickus) [1127366]
Rebuild_FUZZ: 94.41%
commit-author Li Zhong <zhong@linux.vnet.ibm.com>
commit 10862a0c71bff5c7b88812d6a9a9c0be56bc659a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-229.el7/10862a0c.failed

This patch reverts my previous "fix", and replace it with the correct
fix from Russell.

And as Russell pointed out -- dma_set_mask_and_coherent() (and the other
dma_set_mask() functions) are really supposed to be used by drivers
only.

	Signed-off-by: Li Zhong <zhong@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit 10862a0c71bff5c7b88812d6a9a9c0be56bc659a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/vio.c
diff --cc arch/powerpc/kernel/vio.c
index 44889c8ca30d,904c66128fae..000000000000
--- a/arch/powerpc/kernel/vio.c
+++ b/arch/powerpc/kernel/vio.c
@@@ -1426,8 -1432,8 +1426,13 @@@ struct vio_dev *vio_register_device_nod
  
  		/* needed to ensure proper operation of coherent allocations
  		 * later, in case driver doesn't set it explicitly */
++<<<<<<< HEAD
 +		dma_set_mask(&viodev->dev, DMA_BIT_MASK(64));
 +		dma_set_coherent_mask(&viodev->dev, DMA_BIT_MASK(64));
++=======
+ 		viodev->dev.coherent_dma_mask = DMA_BIT_MASK(64);
+ 		viodev->dev.dma_mask = &viodev->dev.coherent_dma_mask;
++>>>>>>> 10862a0c71bf (powerpc: Revert c6102609 and replace it with the correct fix for vio dma mask setting)
  	}
  
  	/* register with generic device framework */
* Unmerged path arch/powerpc/kernel/vio.c
