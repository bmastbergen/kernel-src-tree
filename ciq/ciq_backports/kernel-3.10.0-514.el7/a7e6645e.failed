HID: wacom: Add missing ABS_MISC event and feature declaration for 27QHD

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ping Cheng <pinglinux@gmail.com>
commit a7e6645ee3fef358fb1d88b4a2729d29a467c61a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a7e6645e.failed

27QHD has the same x_min/y_min (WACOM_CINTIQ_OFFSET) as other Cintiqs.

ABS_MISC event is required for PAD packet to work properly with
xf86-input-wacom.

	Signed-off-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit a7e6645ee3fef358fb1d88b4a2729d29a467c61a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/input/tablet/wacom_wac.c
diff --cc drivers/input/tablet/wacom_wac.c
index 1148f237b068,046351cf17f3..000000000000
--- a/drivers/input/tablet/wacom_wac.c
+++ b/drivers/input/tablet/wacom_wac.c
@@@ -628,6 -770,41 +628,44 @@@ static int wacom_intuos_irq(struct waco
  			} else {
  				input_report_abs(input, ABS_MISC, 0);
  			}
++<<<<<<< HEAD:drivers/input/tablet/wacom_wac.c
++=======
+ 		} else if (features->type == WACOM_27QHD) {
+ 			input_report_key(input, KEY_PROG1, data[2] & 0x01);
+ 			input_report_key(input, KEY_PROG2, data[2] & 0x02);
+ 			input_report_key(input, KEY_PROG3, data[2] & 0x04);
+ 
+ 			input_report_abs(input, ABS_X, be16_to_cpup((__be16 *)&data[4]));
+ 			input_report_abs(input, ABS_Y, be16_to_cpup((__be16 *)&data[6]));
+ 			input_report_abs(input, ABS_Z, be16_to_cpup((__be16 *)&data[8]));
+ 			if ((data[2] & 0x07) | data[4] | data[5] | data[6] | data[7] | data[8] | data[9]) {
+ 				input_report_abs(input, ABS_MISC, PAD_DEVICE_ID);
+ 			} else {
+ 				input_report_abs(input, ABS_MISC, 0);
+ 			}
+ 		} else if (features->type == CINTIQ_HYBRID) {
+ 			/*
+ 			 * Do not send hardware buttons under Android. They
+ 			 * are already sent to the system through GPIO (and
+ 			 * have different meaning).
+ 			 */
+ 			input_report_key(input, BTN_1, (data[4] & 0x01));
+ 			input_report_key(input, BTN_2, (data[4] & 0x02));
+ 			input_report_key(input, BTN_3, (data[4] & 0x04));
+ 			input_report_key(input, BTN_4, (data[4] & 0x08));
+ 
+ 			input_report_key(input, BTN_5, (data[4] & 0x10));  /* Right  */
+ 			input_report_key(input, BTN_6, (data[4] & 0x20));  /* Up     */
+ 			input_report_key(input, BTN_7, (data[4] & 0x40));  /* Left   */
+ 			input_report_key(input, BTN_8, (data[4] & 0x80));  /* Down   */
+ 			input_report_key(input, BTN_0, (data[3] & 0x01));  /* Center */
+ 
+ 			if (data[4] | (data[3] & 0x01)) {
+ 				input_report_abs(input, ABS_MISC, PAD_DEVICE_ID);
+ 			} else {
+ 				input_report_abs(input, ABS_MISC, 0);
+ 			}
++>>>>>>> a7e6645ee3fe (HID: wacom: Add missing ABS_MISC event and feature declaration for 27QHD):drivers/hid/wacom_wac.c
  		} else if (features->type >= INTUOS5S && features->type <= INTUOSPL) {
  			int i;
  
@@@ -1998,34 -2727,59 +2036,51 @@@ static const struct wacom_features waco
  	  .oVid = USB_VENDOR_ID_WACOM, .oPid = 0xf6 };
  static const struct wacom_features wacom_features_0xF6 =
  	{ "Wacom Cintiq 24HD touch", .type = WACOM_24HDT, /* Touch */
++<<<<<<< HEAD:drivers/input/tablet/wacom_wac.c
 +	  .oVid = USB_VENDOR_ID_WACOM, .oPid = 0xf8, .touch_max = 10 };
++=======
+ 	  .oVid = USB_VENDOR_ID_WACOM, .oPid = 0xf8, .touch_max = 10,
+ 	  .check_for_hid_type = true, .hid_type = HID_TYPE_USBNONE };
+ static const struct wacom_features wacom_features_0x32A =
+ 	{ "Wacom Cintiq 27QHD", 119740, 67520, 2047, 63,
+ 	  WACOM_27QHD, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES,
+ 	  WACOM_CINTIQ_OFFSET, WACOM_CINTIQ_OFFSET };
+ static const struct wacom_features wacom_features_0x32B =
+ 	{ "Wacom Cintiq 27QHD touch", 119740, 67520, 2047, 63,
+ 	  WACOM_27QHD, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES,
+ 	  WACOM_CINTIQ_OFFSET, WACOM_CINTIQ_OFFSET,
+ 	  .oVid = USB_VENDOR_ID_WACOM, .oPid = 0x32C };
+ static const struct wacom_features wacom_features_0x32C =
+ 	{ "Wacom Cintiq 27QHD touch", .type = WACOM_27QHDT,
+ 	  .oVid = USB_VENDOR_ID_WACOM, .oPid = 0x32B, .touch_max = 10 };
++>>>>>>> a7e6645ee3fe (HID: wacom: Add missing ABS_MISC event and feature declaration for 27QHD):drivers/hid/wacom_wac.c
  static const struct wacom_features wacom_features_0x3F =
 -	{ "Wacom Cintiq 21UX", 87200, 65600, 1023, 63,
 -	  CINTIQ, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
 +	{ "Wacom Cintiq 21UX",    WACOM_PKGLEN_INTUOS,    87200, 65600, 1023,
 +	  63, CINTIQ, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
  static const struct wacom_features wacom_features_0xC5 =
 -	{ "Wacom Cintiq 20WSX", 86680, 54180, 1023, 63,
 -	  WACOM_BEE, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
 +	{ "Wacom Cintiq 20WSX",   WACOM_PKGLEN_INTUOS,    86680, 54180, 1023,
 +	  63, WACOM_BEE, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
  static const struct wacom_features wacom_features_0xC6 =
 -	{ "Wacom Cintiq 12WX", 53020, 33440, 1023, 63,
 -	  WACOM_BEE, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
 +	{ "Wacom Cintiq 12WX",    WACOM_PKGLEN_INTUOS,    53020, 33440, 1023,
 +	  63, WACOM_BEE, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
  static const struct wacom_features wacom_features_0x304 =
 -	{ "Wacom Cintiq 13HD", 59152, 33448, 1023, 63,
 -	  WACOM_13HD, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES,
 -	  WACOM_CINTIQ_OFFSET, WACOM_CINTIQ_OFFSET };
 +	{ "Wacom Cintiq 13HD",    WACOM_PKGLEN_INTUOS,    59552, 33848, 1023,
 +	  63, WACOM_13HD, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES };
  static const struct wacom_features wacom_features_0xC7 =
 -	{ "Wacom DTU1931", 37832, 30305, 511, 0,
 -	  PL, WACOM_INTUOS_RES, WACOM_INTUOS_RES };
 +	{ "Wacom DTU1931",        WACOM_PKGLEN_GRAPHIRE,  37832, 30305,  511,
 +	  0, PL, WACOM_INTUOS_RES, WACOM_INTUOS_RES };
  static const struct wacom_features wacom_features_0xCE =
 -	{ "Wacom DTU2231", 47864, 27011, 511, 0,
 -	  DTU, WACOM_INTUOS_RES, WACOM_INTUOS_RES,
 -	  .check_for_hid_type = true, .hid_type = HID_TYPE_USBMOUSE };
 +	{ "Wacom DTU2231",        WACOM_PKGLEN_GRAPHIRE,  47864, 27011,  511,
 +	  0, DTU, WACOM_INTUOS_RES, WACOM_INTUOS_RES };
  static const struct wacom_features wacom_features_0xF0 =
 -	{ "Wacom DTU1631", 34623, 19553, 511, 0,
 -	  DTU, WACOM_INTUOS_RES, WACOM_INTUOS_RES };
 -static const struct wacom_features wacom_features_0xFB =
 -	{ "Wacom DTU1031", 21896, 13760, 511, 0,
 -	  DTUS, WACOM_INTUOS_RES, WACOM_INTUOS_RES,
 -	  WACOM_DTU_OFFSET, WACOM_DTU_OFFSET };
 -static const struct wacom_features wacom_features_0x32F =
 -	{ "Wacom DTU1031X", 22472, 12728, 511, 0,
 -	  DTUSX, WACOM_INTUOS_RES, WACOM_INTUOS_RES,
 -	  WACOM_DTU_OFFSET, WACOM_DTU_OFFSET };
 +	{ "Wacom DTU1631",        WACOM_PKGLEN_GRAPHIRE,  34623, 19553,  511,
 +	  0, DTU, WACOM_INTUOS_RES, WACOM_INTUOS_RES };
  static const struct wacom_features wacom_features_0x57 =
 -	{ "Wacom DTK2241", 95640, 54060, 2047, 63,
 -	  DTK, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES,
 -	  WACOM_CINTIQ_OFFSET, WACOM_CINTIQ_OFFSET };
 +	{ "Wacom DTK2241",        WACOM_PKGLEN_INTUOS,    95840, 54260, 2047,
 +	  63, DTK, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES};
  static const struct wacom_features wacom_features_0x59 = /* Pen */
 -	{ "Wacom DTH2242", 95640, 54060, 2047, 63,
 -	  DTK, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES,
 -	  WACOM_CINTIQ_OFFSET, WACOM_CINTIQ_OFFSET,
 +	{ "Wacom DTH2242",        WACOM_PKGLEN_INTUOS,    95840, 54260, 2047,
 +	  63, DTK, WACOM_INTUOS3_RES, WACOM_INTUOS3_RES,
  	  .oVid = USB_VENDOR_ID_WACOM, .oPid = 0x5D };
  static const struct wacom_features wacom_features_0x5D = /* Touch */
  	{ "Wacom DTH2242",       .type = WACOM_24HDT,
* Unmerged path drivers/input/tablet/wacom_wac.c
