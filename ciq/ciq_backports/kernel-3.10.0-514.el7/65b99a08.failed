xfs: refactor unmount record detection into helper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Brian Foster <bfoster@redhat.com>
commit 65b99a08b350876e8835fc0e7173598165f64dee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/65b99a08.failed

Once the mount sequence has identified the head and tail blocks of the
physical log, the record at the head of the log is located and examined
for an unmount record to determine if the log is clean. This currently
occurs after torn write verification of the head region of the log.

This must ultimately be separated from torn write verification and may
need to be called again if the log head is walked back due to a torn
write (to determine whether the new head record is an unmount record).
Separate this logic into a new helper function. This patch does not
change behavior.

	Signed-off-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>


(cherry picked from commit 65b99a08b350876e8835fc0e7173598165f64dee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_log_recover.c
diff --cc fs/xfs/xfs_log_recover.c
index 9a0cd900d9ce,1aae75608453..000000000000
--- a/fs/xfs/xfs_log_recover.c
+++ b/fs/xfs/xfs_log_recover.c
@@@ -1221,16 -1299,13 +1299,18 @@@ xlog_find_tail
  	xfs_daddr_t		*tail_blk)
  {
  	xlog_rec_header_t	*rhead;
++<<<<<<< HEAD
 +	xlog_op_header_t	*op_head;
 +	xfs_caddr_t		offset = NULL;
++=======
+ 	char			*offset = NULL;
++>>>>>>> 65b99a08b350 (xfs: refactor unmount record detection into helper)
  	xfs_buf_t		*bp;
  	int			error;
- 	xfs_daddr_t		umount_data_blk;
- 	xfs_daddr_t		after_umount_blk;
  	xfs_daddr_t		rhead_blk;
  	xfs_lsn_t		tail_lsn;
- 	int			hblks;
  	bool			wrapped = false;
+ 	bool			clean = false;
  
  	/*
  	 * Find previous log record
* Unmerged path fs/xfs/xfs_log_recover.c
