nfsd: switch unsigned char flags in svc_fh to bools

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jeff Layton <jlayton@poochiereds.net>
commit aaf91ec148910e0c2bfd135ea19f870e7196e64f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/aaf91ec1.failed

...just for clarity.

	Signed-off-by: Jeff Layton <jeff.layton@primarydata.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit aaf91ec148910e0c2bfd135ea19f870e7196e64f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfsfh.h
#	fs/nfsd/xdr4.h
diff --cc fs/nfsd/nfsfh.h
index 032fd965fe88,2087bae17582..000000000000
--- a/fs/nfsd/nfsfh.h
+++ b/fs/nfsd/nfsfh.h
@@@ -264,10 -264,10 +264,10 @@@ fh_lock_nested(struct svc_fh *fhp, unsi
  		return;
  	}
  
 -	inode = d_inode(dentry);
 +	inode = dentry->d_inode;
  	mutex_lock_nested(&inode->i_mutex, subclass);
  	fill_pre_wcc(fhp);
- 	fhp->fh_locked = 1;
+ 	fhp->fh_locked = true;
  }
  
  static inline void
@@@ -284,8 -284,8 +284,13 @@@ fh_unlock(struct svc_fh *fhp
  {
  	if (fhp->fh_locked) {
  		fill_post_wcc(fhp);
++<<<<<<< HEAD
 +		mutex_unlock(&fhp->fh_dentry->d_inode->i_mutex);
 +		fhp->fh_locked = 0;
++=======
+ 		mutex_unlock(&d_inode(fhp->fh_dentry)->i_mutex);
+ 		fhp->fh_locked = false;
++>>>>>>> aaf91ec14891 (nfsd: switch unsigned char flags in svc_fh to bools)
  	}
  }
  
diff --cc fs/nfsd/xdr4.h
index 556ce2e47555,ce7362c88b48..000000000000
--- a/fs/nfsd/xdr4.h
+++ b/fs/nfsd/xdr4.h
@@@ -630,8 -632,8 +630,13 @@@ static inline voi
  set_change_info(struct nfsd4_change_info *cinfo, struct svc_fh *fhp)
  {
  	BUG_ON(!fhp->fh_pre_saved);
++<<<<<<< HEAD
 +	cinfo->atomic = fhp->fh_post_saved;
 +	cinfo->change_supported = IS_I_VERSION(fhp->fh_dentry->d_inode);
++=======
+ 	cinfo->atomic = (u32)fhp->fh_post_saved;
+ 	cinfo->change_supported = IS_I_VERSION(d_inode(fhp->fh_dentry));
++>>>>>>> aaf91ec14891 (nfsd: switch unsigned char flags in svc_fh to bools)
  
  	cinfo->before_change = fhp->fh_pre_change;
  	cinfo->after_change = fhp->fh_post_change;
diff --git a/fs/nfsd/nfs3xdr.c b/fs/nfsd/nfs3xdr.c
index 158d6f1a83c7..aa3a5fedd875 100644
--- a/fs/nfsd/nfs3xdr.c
+++ b/fs/nfsd/nfs3xdr.c
@@ -262,11 +262,11 @@ void fill_post_wcc(struct svc_fh *fhp)
 	err = fh_getattr(fhp, &fhp->fh_post_attr);
 	fhp->fh_post_change = fhp->fh_dentry->d_inode->i_version;
 	if (err) {
-		fhp->fh_post_saved = 0;
+		fhp->fh_post_saved = false;
 		/* Grab the ctime anyway - set_change_info might use it */
 		fhp->fh_post_attr.ctime = fhp->fh_dentry->d_inode->i_ctime;
 	} else
-		fhp->fh_post_saved = 1;
+		fhp->fh_post_saved = true;
 }
 
 /*
diff --git a/fs/nfsd/nfsfh.c b/fs/nfsd/nfsfh.c
index 88026fc6a981..85fa453f5d08 100644
--- a/fs/nfsd/nfsfh.c
+++ b/fs/nfsd/nfsfh.c
@@ -631,10 +631,7 @@ fh_put(struct svc_fh *fhp)
 		fh_unlock(fhp);
 		fhp->fh_dentry = NULL;
 		dput(dentry);
-#ifdef CONFIG_NFSD_V3
-		fhp->fh_pre_saved = 0;
-		fhp->fh_post_saved = 0;
-#endif
+		fh_clear_wcc(fhp);
 	}
 	fh_drop_write(fhp);
 	if (exp) {
* Unmerged path fs/nfsd/nfsfh.h
diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
index 9d5f27fbf3f5..4df45d8c368a 100644
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@ -1807,7 +1807,7 @@ nfsd_rename(struct svc_rqst *rqstp, struct svc_fh *ffhp, char *fname, int flen,
 	/* cannot use fh_lock as we need deadlock protective ordering
 	 * so do it by hand */
 	trap = lock_rename(tdentry, fdentry);
-	ffhp->fh_locked = tfhp->fh_locked = 1;
+	ffhp->fh_locked = tfhp->fh_locked = true;
 	fill_pre_wcc(ffhp);
 	fill_pre_wcc(tfhp);
 
@@ -1857,7 +1857,7 @@ nfsd_rename(struct svc_rqst *rqstp, struct svc_fh *ffhp, char *fname, int flen,
 	fill_post_wcc(ffhp);
 	fill_post_wcc(tfhp);
 	unlock_rename(tdentry, fdentry);
-	ffhp->fh_locked = tfhp->fh_locked = 0;
+	ffhp->fh_locked = tfhp->fh_locked = false;
 	fh_drop_write(ffhp);
 
 out:
diff --git a/fs/nfsd/vfs.h b/fs/nfsd/vfs.h
index d3bc6fc9dda9..8a3d54e75fd5 100644
--- a/fs/nfsd/vfs.h
+++ b/fs/nfsd/vfs.h
@@ -116,14 +116,14 @@ static inline int fh_want_write(struct svc_fh *fh)
 	int ret = mnt_want_write(fh->fh_export->ex_path.mnt);
 
 	if (!ret)
-		fh->fh_want_write = 1;
+		fh->fh_want_write = true;
 	return ret;
 }
 
 static inline void fh_drop_write(struct svc_fh *fh)
 {
 	if (fh->fh_want_write) {
-		fh->fh_want_write = 0;
+		fh->fh_want_write = false;
 		mnt_drop_write(fh->fh_export->ex_path.mnt);
 	}
 }
* Unmerged path fs/nfsd/xdr4.h
