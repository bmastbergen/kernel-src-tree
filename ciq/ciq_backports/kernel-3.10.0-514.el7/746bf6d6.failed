capabilities: add a securebit to disable PR_CAP_AMBIENT_RAISE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andy Lutomirski <luto@kernel.org>
commit 746bf6d64275be0c65b0631d8a72b16f1454cfa1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/746bf6d6.failed

Per Andrew Morgan's request, add a securebit to allow admins to disable
PR_CAP_AMBIENT_RAISE.  This securebit will prevent processes from adding
capabilities to their ambient set.

For simplicity, this disables PR_CAP_AMBIENT_RAISE entirely rather than
just disabling setting previously cleared bits.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Acked-by: Andrew G. Morgan <morgan@kernel.org>
	Acked-by: Serge Hallyn <serge.hallyn@canonical.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Christoph Lameter <cl@linux.com>
	Cc: Serge Hallyn <serge.hallyn@canonical.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Aaron Jones <aaronmdjones@gmail.com>
	Cc: Ted Ts'o <tytso@mit.edu>
	Cc: Andrew G. Morgan <morgan@kernel.org>
	Cc: Mimi Zohar <zohar@linux.vnet.ibm.com>
	Cc: Austin S Hemmelgarn <ahferroin7@gmail.com>
	Cc: Markku Savela <msa@moth.iki.fi>
	Cc: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Cc: Michael Kerrisk <mtk.manpages@gmail.com>
	Cc: James Morris <james.l.morris@oracle.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 746bf6d64275be0c65b0631d8a72b16f1454cfa1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/commoncap.c
diff --cc security/commoncap.c
index fb44c5b39c1d,1832cf701c3d..000000000000
--- a/security/commoncap.c
+++ b/security/commoncap.c
@@@ -933,6 -969,44 +933,47 @@@ int cap_task_prctl(int option, unsigne
  			new->securebits &= ~issecure_mask(SECURE_KEEP_CAPS);
  		return commit_creds(new);
  
++<<<<<<< HEAD
++=======
+ 	case PR_CAP_AMBIENT:
+ 		if (arg2 == PR_CAP_AMBIENT_CLEAR_ALL) {
+ 			if (arg3 | arg4 | arg5)
+ 				return -EINVAL;
+ 
+ 			new = prepare_creds();
+ 			if (!new)
+ 				return -ENOMEM;
+ 			cap_clear(new->cap_ambient);
+ 			return commit_creds(new);
+ 		}
+ 
+ 		if (((!cap_valid(arg3)) | arg4 | arg5))
+ 			return -EINVAL;
+ 
+ 		if (arg2 == PR_CAP_AMBIENT_IS_SET) {
+ 			return !!cap_raised(current_cred()->cap_ambient, arg3);
+ 		} else if (arg2 != PR_CAP_AMBIENT_RAISE &&
+ 			   arg2 != PR_CAP_AMBIENT_LOWER) {
+ 			return -EINVAL;
+ 		} else {
+ 			if (arg2 == PR_CAP_AMBIENT_RAISE &&
+ 			    (!cap_raised(current_cred()->cap_permitted, arg3) ||
+ 			     !cap_raised(current_cred()->cap_inheritable,
+ 					 arg3) ||
+ 			     issecure(SECURE_NO_CAP_AMBIENT_RAISE)))
+ 				return -EPERM;
+ 
+ 			new = prepare_creds();
+ 			if (!new)
+ 				return -ENOMEM;
+ 			if (arg2 == PR_CAP_AMBIENT_RAISE)
+ 				cap_raise(new->cap_ambient, arg3);
+ 			else
+ 				cap_lower(new->cap_ambient, arg3);
+ 			return commit_creds(new);
+ 		}
+ 
++>>>>>>> 746bf6d64275 (capabilities: add a securebit to disable PR_CAP_AMBIENT_RAISE)
  	default:
  		/* No functionality available - continue with default */
  		return -ENOSYS;
diff --git a/include/uapi/linux/securebits.h b/include/uapi/linux/securebits.h
index 985aac9e6bf8..35ac35cef217 100644
--- a/include/uapi/linux/securebits.h
+++ b/include/uapi/linux/securebits.h
@@ -43,9 +43,18 @@
 #define SECBIT_KEEP_CAPS	(issecure_mask(SECURE_KEEP_CAPS))
 #define SECBIT_KEEP_CAPS_LOCKED (issecure_mask(SECURE_KEEP_CAPS_LOCKED))
 
+/* When set, a process cannot add new capabilities to its ambient set. */
+#define SECURE_NO_CAP_AMBIENT_RAISE		6
+#define SECURE_NO_CAP_AMBIENT_RAISE_LOCKED	7  /* make bit-6 immutable */
+
+#define SECBIT_NO_CAP_AMBIENT_RAISE (issecure_mask(SECURE_NO_CAP_AMBIENT_RAISE))
+#define SECBIT_NO_CAP_AMBIENT_RAISE_LOCKED \
+			(issecure_mask(SECURE_NO_CAP_AMBIENT_RAISE_LOCKED))
+
 #define SECURE_ALL_BITS		(issecure_mask(SECURE_NOROOT) | \
 				 issecure_mask(SECURE_NO_SETUID_FIXUP) | \
-				 issecure_mask(SECURE_KEEP_CAPS))
+				 issecure_mask(SECURE_KEEP_CAPS) | \
+				 issecure_mask(SECURE_NO_CAP_AMBIENT_RAISE))
 #define SECURE_ALL_LOCKS	(SECURE_ALL_BITS << 1)
 
 #endif /* _UAPI_LINUX_SECUREBITS_H */
* Unmerged path security/commoncap.c
