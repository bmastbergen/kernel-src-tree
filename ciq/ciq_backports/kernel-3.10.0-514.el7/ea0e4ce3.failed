IB/rdmavt,hfi1,qib: Fix memory leak

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [infiniband] ib/rdmavt, hfi1, qib: Fix memory leak (Alex Estrin) [1272062 1273170]
Rebuild_FUZZ: 97.22%
commit-author Jubin John <jubin.john@intel.com>
commit ea0e4ce3bcccef360e1aa69d17a210d1221ab80c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ea0e4ce3.failed

rdi->ports has memory allocated in rvt_alloc_device(), but does not get
freed because the hfi1 and qib drivers drivers call ib_dealloc_device()
directly instead of going through rdmavt. Add a rvt_dealloc_device()
that frees rdi->ports and then calls ib_dealloc_device(). Switch hfi1
and qib drivers to calling rvt_dealloc_device() instead of
ib_dealloc_device() directly.

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Reviewed-by: Brian Welty <brian.welty@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit ea0e4ce3bcccef360e1aa69d17a210d1221ab80c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/init.c
diff --cc drivers/staging/hfi1/init.c
index 9c4bb834cbe9,00edd500a69a..000000000000
--- a/drivers/staging/hfi1/init.c
+++ b/drivers/staging/hfi1/init.c
@@@ -989,7 -1005,9 +989,13 @@@ void hfi1_free_devdata(struct hfi1_devd
  	rcu_barrier(); /* wait for rcu callbacks to complete */
  	free_percpu(dd->int_counter);
  	free_percpu(dd->rcv_limit);
++<<<<<<< HEAD:drivers/staging/hfi1/init.c
 +	ib_dealloc_device(&dd->verbs_dev.ibdev);
++=======
+ 	hfi1_dev_affinity_free(dd);
+ 	free_percpu(dd->send_schedule);
+ 	rvt_dealloc_device(&dd->verbs_dev.rdi);
++>>>>>>> ea0e4ce3bccc (IB/rdmavt,hfi1,qib: Fix memory leak):drivers/staging/rdma/hfi1/init.c
  }
  
  /*
@@@ -1088,7 -1110,7 +1094,11 @@@ struct hfi1_devdata *hfi1_alloc_devdata
  bail:
  	if (!list_empty(&dd->list))
  		list_del_init(&dd->list);
++<<<<<<< HEAD:drivers/staging/hfi1/init.c
 +	ib_dealloc_device(&dd->verbs_dev.ibdev);
++=======
+ 	rvt_dealloc_device(&dd->verbs_dev.rdi);
++>>>>>>> ea0e4ce3bccc (IB/rdmavt,hfi1,qib: Fix memory leak):drivers/staging/rdma/hfi1/init.c
  	return ERR_PTR(ret);
  }
  
diff --git a/drivers/infiniband/hw/qib/qib_init.c b/drivers/infiniband/hw/qib/qib_init.c
index 58a08168816a..610872c4c08e 100644
--- a/drivers/infiniband/hw/qib/qib_init.c
+++ b/drivers/infiniband/hw/qib/qib_init.c
@@ -1091,7 +1091,7 @@ void qib_free_devdata(struct qib_devdata *dd)
 	qib_dbg_ibdev_exit(&dd->verbs_dev);
 #endif
 	free_percpu(dd->int_counter);
-	ib_dealloc_device(&dd->verbs_dev.rdi.ibdev);
+	rvt_dealloc_device(&dd->verbs_dev.rdi);
 }
 
 u64 qib_int_counter(struct qib_devdata *dd)
@@ -1184,7 +1184,7 @@ struct qib_devdata *qib_alloc_devdata(struct pci_dev *pdev, size_t extra)
 bail:
 	if (!list_empty(&dd->list))
 		list_del_init(&dd->list);
-	ib_dealloc_device(&dd->verbs_dev.rdi.ibdev);
+	rvt_dealloc_device(&dd->verbs_dev.rdi);
 	return ERR_PTR(ret);
 }
 
diff --git a/drivers/infiniband/sw/rdmavt/vt.c b/drivers/infiniband/sw/rdmavt/vt.c
index f5cb09b718be..5f585e7d7507 100644
--- a/drivers/infiniband/sw/rdmavt/vt.c
+++ b/drivers/infiniband/sw/rdmavt/vt.c
@@ -106,6 +106,19 @@ struct rvt_dev_info *rvt_alloc_device(size_t size, int nports)
 }
 EXPORT_SYMBOL(rvt_alloc_device);
 
+/**
+ * rvt_dealloc_device - deallocate rdi
+ * @rdi: structure to free
+ *
+ * Free a structure allocated with rvt_alloc_device()
+ */
+void rvt_dealloc_device(struct rvt_dev_info *rdi)
+{
+	kfree(rdi->ports);
+	ib_dealloc_device(&rdi->ibdev);
+}
+EXPORT_SYMBOL(rvt_dealloc_device);
+
 static int rvt_query_device(struct ib_device *ibdev,
 			    struct ib_device_attr *props,
 			    struct ib_udata *uhw)
* Unmerged path drivers/staging/hfi1/init.c
diff --git a/include/rdma/rdma_vt.h b/include/rdma/rdma_vt.h
index 5e630eec7292..3556e1a181f6 100644
--- a/include/rdma/rdma_vt.h
+++ b/include/rdma/rdma_vt.h
@@ -369,6 +369,7 @@ static inline struct rvt_qp *rvt_lookup_qpn(struct rvt_dev_info *rdi,
 }
 
 struct rvt_dev_info *rvt_alloc_device(size_t size, int nports);
+void rvt_dealloc_device(struct rvt_dev_info *rdi);
 int rvt_register_device(struct rvt_dev_info *rvd);
 void rvt_unregister_device(struct rvt_dev_info *rvd);
 int rvt_check_ah(struct ib_device *ibdev, struct ib_ah_attr *ah_attr);
