perf cpu_map: Add perf_event__fprintf_cpu_map function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit eb12a1afdc02e59fc09934743490549c77327b1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eb12a1af.failed

To display a cpu_map event for raw dump.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Kan Liang <kan.liang@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1445784728-21732-11-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit eb12a1afdc02e59fc09934743490549c77327b1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/event.c
#	tools/perf/util/event.h
diff --cc tools/perf/util/event.c
index 763fbcde76fc,f31ab3b8f918..000000000000
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@@ -763,6 -952,38 +763,41 @@@ size_t perf_event__fprintf_mmap2(union 
  		       event->mmap2.filename);
  }
  
++<<<<<<< HEAD
++=======
+ size_t perf_event__fprintf_thread_map(union perf_event *event, FILE *fp)
+ {
+ 	struct thread_map *threads = thread_map__new_event(&event->thread_map);
+ 	size_t ret;
+ 
+ 	ret = fprintf(fp, " nr: ");
+ 
+ 	if (threads)
+ 		ret += thread_map__fprintf(threads, fp);
+ 	else
+ 		ret += fprintf(fp, "failed to get threads from event\n");
+ 
+ 	thread_map__put(threads);
+ 	return ret;
+ }
+ 
+ size_t perf_event__fprintf_cpu_map(union perf_event *event, FILE *fp)
+ {
+ 	struct cpu_map *cpus = cpu_map__new_data(&event->cpu_map.data);
+ 	size_t ret;
+ 
+ 	ret = fprintf(fp, " nr: ");
+ 
+ 	if (cpus)
+ 		ret += cpu_map__fprintf(cpus, fp);
+ 	else
+ 		ret += fprintf(fp, "failed to get cpumap from event\n");
+ 
+ 	cpu_map__put(cpus);
+ 	return ret;
+ }
+ 
++>>>>>>> eb12a1afdc02 (perf cpu_map: Add perf_event__fprintf_cpu_map function)
  int perf_event__process_mmap(struct perf_tool *tool __maybe_unused,
  			     union perf_event *event,
  			     struct perf_sample *sample,
diff --cc tools/perf/util/event.h
index 9400ef1c1335,74a434116b2c..000000000000
--- a/tools/perf/util/event.h
+++ b/tools/perf/util/event.h
@@@ -484,6 -548,9 +484,12 @@@ size_t perf_event__fprintf_mmap2(union 
  size_t perf_event__fprintf_task(union perf_event *event, FILE *fp);
  size_t perf_event__fprintf_aux(union perf_event *event, FILE *fp);
  size_t perf_event__fprintf_itrace_start(union perf_event *event, FILE *fp);
++<<<<<<< HEAD
++=======
+ size_t perf_event__fprintf_switch(union perf_event *event, FILE *fp);
+ size_t perf_event__fprintf_thread_map(union perf_event *event, FILE *fp);
+ size_t perf_event__fprintf_cpu_map(union perf_event *event, FILE *fp);
++>>>>>>> eb12a1afdc02 (perf cpu_map: Add perf_event__fprintf_cpu_map function)
  size_t perf_event__fprintf(union perf_event *event, FILE *fp);
  
  u64 kallsyms__get_function_start(const char *kallsyms_filename,
* Unmerged path tools/perf/util/event.c
* Unmerged path tools/perf/util/event.h
