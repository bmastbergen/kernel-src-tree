libceph: add an ONSTACK initializer for oids

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ilya Dryomov <idryomov@gmail.com>
commit 281dbe5db81c6137def9757e07a7aea14b1ed86e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/281dbe5d.failed

An on-stack oid in ceph_ioctl_get_dataloc() is not initialized,
resulting in a WARN and a NULL pointer dereference later on.  We will
have more of these on-stack in the future, so fix it with a convenience
macro.

Fixes: d30291b985d1 ("libceph: variable-sized ceph_object_id")
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 281dbe5db81c6137def9757e07a7aea14b1ed86e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/ceph/osdmap.h
diff --cc include/linux/ceph/osdmap.h
index e8bf68758dc4,21d7f048959f..000000000000
--- a/include/linux/ceph/osdmap.h
+++ b/include/linux/ceph/osdmap.h
@@@ -74,6 -109,31 +74,34 @@@ struct ceph_object_id 
  	int name_len;
  };
  
++<<<<<<< HEAD
++=======
+ static inline void ceph_oid_init(struct ceph_object_id *oid)
+ {
+ 	oid->name = oid->inline_name;
+ 	oid->name_len = 0;
+ }
+ 
+ #define CEPH_OID_INIT_ONSTACK(oid)					\
+     ({ ceph_oid_init(&oid); oid; })
+ #define CEPH_DEFINE_OID_ONSTACK(oid)					\
+ 	struct ceph_object_id oid = CEPH_OID_INIT_ONSTACK(oid)
+ 
+ static inline bool ceph_oid_empty(const struct ceph_object_id *oid)
+ {
+ 	return oid->name == oid->inline_name && !oid->name_len;
+ }
+ 
+ void ceph_oid_copy(struct ceph_object_id *dest,
+ 		   const struct ceph_object_id *src);
+ __printf(2, 3)
+ void ceph_oid_printf(struct ceph_object_id *oid, const char *fmt, ...);
+ __printf(3, 4)
+ int ceph_oid_aprintf(struct ceph_object_id *oid, gfp_t gfp,
+ 		     const char *fmt, ...);
+ void ceph_oid_destroy(struct ceph_object_id *oid);
+ 
++>>>>>>> 281dbe5db81c (libceph: add an ONSTACK initializer for oids)
  struct ceph_pg_mapping {
  	struct rb_node node;
  	struct ceph_pg pgid;
diff --git a/fs/ceph/ioctl.c b/fs/ceph/ioctl.c
index 50e76de28353..e32c44dbcffe 100644
--- a/fs/ceph/ioctl.c
+++ b/fs/ceph/ioctl.c
@@ -183,7 +183,7 @@ static long ceph_ioctl_get_dataloc(struct file *file, void __user *arg)
 	struct ceph_osd_client *osdc =
 		&ceph_sb_to_client(inode->i_sb)->client->osdc;
 	struct ceph_object_locator oloc;
-	struct ceph_object_id oid;
+	CEPH_DEFINE_OID_ONSTACK(oid);
 	u64 len = 1, olen;
 	u64 tmp;
 	struct ceph_pg pgid;
* Unmerged path include/linux/ceph/osdmap.h
