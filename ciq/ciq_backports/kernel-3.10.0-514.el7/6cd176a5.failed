vfs,ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [fs] vfs, ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX (Eric Sandeen) [1274459]
Rebuild_FUZZ: 99.35%
commit-author Matthew Wilcox <matthew.r.wilcox@intel.com>
commit 6cd176a51e52e5218b1aa97e1ec916bac25a9b7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6cd176a5.failed

The fewer Kconfig options we have the better.  Use the generic
CONFIG_FS_DAX to enable XIP support in ext2 as well as in the core.

	Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
	Cc: Andreas Dilger <andreas.dilger@intel.com>
	Cc: Boaz Harrosh <boaz@plexistor.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Dave Chinner <david@fromorbit.com>
	Cc: Jan Kara <jack@suse.cz>
	Cc: Jens Axboe <axboe@kernel.dk>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
	Cc: Theodore Ts'o <tytso@mit.edu>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 6cd176a51e52e5218b1aa97e1ec916bac25a9b7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/Makefile
#	fs/ext2/ext2.h
#	fs/ext2/file.c
#	include/linux/fs.h
diff --cc fs/Makefile
index 295424de5616,0f4635f7c49c..000000000000
--- a/fs/Makefile
+++ b/fs/Makefile
@@@ -28,8 -27,8 +28,12 @@@ obj-$(CONFIG_ANON_INODES)	+= anon_inode
  obj-$(CONFIG_SIGNALFD)		+= signalfd.o
  obj-$(CONFIG_TIMERFD)		+= timerfd.o
  obj-$(CONFIG_EVENTFD)		+= eventfd.o
 +obj-$(CONFIG_USERFAULTFD)	+= userfaultfd.o
  obj-$(CONFIG_AIO)               += aio.o
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_FS_DAX)		+= dax.o
++>>>>>>> 6cd176a51e52 (vfs,ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX)
  obj-$(CONFIG_FILE_LOCKING)      += locks.o
  obj-$(CONFIG_COMPAT)		+= compat.o compat_ioctl.o
  obj-$(CONFIG_BINFMT_AOUT)	+= binfmt_aout.o
diff --cc fs/ext2/ext2.h
index d9a17d0b124d,6854038c09ae..000000000000
--- a/fs/ext2/ext2.h
+++ b/fs/ext2/ext2.h
@@@ -380,7 -380,11 +380,11 @@@ struct ext2_inode 
  #define EXT2_MOUNT_NO_UID32		0x000200  /* Disable 32-bit UIDs */
  #define EXT2_MOUNT_XATTR_USER		0x004000  /* Extended user attributes */
  #define EXT2_MOUNT_POSIX_ACL		0x008000  /* POSIX Access Control Lists */
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_FS_DAX
++>>>>>>> 6cd176a51e52 (vfs,ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX)
  #define EXT2_MOUNT_XIP			0x010000  /* Execute in place */
 -#else
 -#define EXT2_MOUNT_XIP			0
 -#endif
  #define EXT2_MOUNT_USRQUOTA		0x020000  /* user quota */
  #define EXT2_MOUNT_GRPQUOTA		0x040000  /* group quota */
  #define EXT2_MOUNT_RESERVATION		0x080000  /* Preallocation */
diff --cc fs/ext2/file.c
index a5b3a5db3120,de8174d1e973..000000000000
--- a/fs/ext2/file.c
+++ b/fs/ext2/file.c
@@@ -25,6 -25,36 +25,39 @@@
  #include "xattr.h"
  #include "acl.h"
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_FS_DAX
+ static int ext2_dax_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
+ {
+ 	return dax_fault(vma, vmf, ext2_get_block);
+ }
+ 
+ static int ext2_dax_mkwrite(struct vm_area_struct *vma, struct vm_fault *vmf)
+ {
+ 	return dax_mkwrite(vma, vmf, ext2_get_block);
+ }
+ 
+ static const struct vm_operations_struct ext2_dax_vm_ops = {
+ 	.fault		= ext2_dax_fault,
+ 	.page_mkwrite	= ext2_dax_mkwrite,
+ };
+ 
+ static int ext2_file_mmap(struct file *file, struct vm_area_struct *vma)
+ {
+ 	if (!IS_DAX(file_inode(file)))
+ 		return generic_file_mmap(file, vma);
+ 
+ 	file_accessed(file);
+ 	vma->vm_ops = &ext2_dax_vm_ops;
+ 	vma->vm_flags |= VM_MIXEDMAP;
+ 	return 0;
+ }
+ #else
+ #define ext2_file_mmap	generic_file_mmap
+ #endif
+ 
++>>>>>>> 6cd176a51e52 (vfs,ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX)
  /*
   * Called when filp is released. This happens when all file descriptors
   * for a single struct file are closed. Note that different open() calls
@@@ -75,14 -105,16 +108,14 @@@ const struct file_operations ext2_file_
  	.release	= ext2_release_file,
  	.fsync		= ext2_fsync,
  	.splice_read	= generic_file_splice_read,
 -	.splice_write	= iter_file_splice_write,
 +	.splice_write	= generic_file_splice_write,
  };
  
- #ifdef CONFIG_EXT2_FS_XIP
+ #ifdef CONFIG_FS_DAX
  const struct file_operations ext2_xip_file_operations = {
  	.llseek		= generic_file_llseek,
 -	.read		= new_sync_read,
 -	.write		= new_sync_write,
 -	.read_iter	= generic_file_read_iter,
 -	.write_iter	= generic_file_write_iter,
 +	.read		= xip_file_read,
 +	.write		= xip_file_write,
  	.unlocked_ioctl = ext2_ioctl,
  #ifdef CONFIG_COMPAT
  	.compat_ioctl	= ext2_compat_ioctl,
diff --cc include/linux/fs.h
index 37d4ac39152e,d46f8fe6a0ea..000000000000
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@@ -1797,7 -1676,11 +1797,15 @@@ struct super_operations 
  #define S_IMA		1024	/* Inode has an associated IMA struct */
  #define S_AUTOMOUNT	2048	/* Automount/referral quasi-directory */
  #define S_NOSEC		4096	/* no suid or xattr security attributes */
++<<<<<<< HEAD
 +#define S_IOPS_WRAPPER	8192	/* i_op points to struct inode_operations_wrapper */
++=======
+ #ifdef CONFIG_FS_DAX
+ #define S_DAX		8192	/* Direct Access, avoiding the page cache */
+ #else
+ #define S_DAX		0	/* Make all the DAX code disappear */
+ #endif
++>>>>>>> 6cd176a51e52 (vfs,ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX)
  
  /*
   * Note that nosuid etc flags are inode-specific: setting some file-system
diff --git a/fs/Kconfig b/fs/Kconfig
index 308e01b49774..553bfc6edcf1 100644
--- a/fs/Kconfig
+++ b/fs/Kconfig
@@ -13,13 +13,6 @@ if BLOCK
 source "fs/ext2/Kconfig"
 source "fs/ext3/Kconfig"
 source "fs/ext4/Kconfig"
-
-config FS_XIP
-# execute in place
-	bool
-	depends on EXT2_FS_XIP
-	default y
-
 source "fs/jbd/Kconfig"
 source "fs/jbd2/Kconfig"
 
@@ -40,6 +33,20 @@ source "fs/ocfs2/Kconfig"
 source "fs/btrfs/Kconfig"
 source "fs/nilfs2/Kconfig"
 
+config FS_DAX
+	bool "Direct Access (DAX) support"
+	depends on MMU
+	help
+	  Direct Access (DAX) can be used on memory-backed block devices.
+	  If the block device supports DAX and the filesystem supports DAX,
+	  then you can avoid using the pagecache to buffer I/Os.  Turning
+	  on this option will compile in support for DAX; you will need to
+	  mount the filesystem using the -o dax option.
+
+	  If you do not have a block device that is capable of using this,
+	  or if unsure, say N.  Saying Y will increase the size of the kernel
+	  by about 5kB.
+
 endif # BLOCK
 
 # Posix ACL utility routines
* Unmerged path fs/Makefile
diff --git a/fs/ext2/Kconfig b/fs/ext2/Kconfig
index 14a6780fd034..c634874e12d9 100644
--- a/fs/ext2/Kconfig
+++ b/fs/ext2/Kconfig
@@ -42,14 +42,3 @@ config EXT2_FS_SECURITY
 
 	  If you are not using a security module that requires using
 	  extended attributes for file security labels, say N.
-
-config EXT2_FS_XIP
-	bool "Ext2 execute in place support"
-	depends on EXT2_FS && MMU
-	help
-	  Execute in place can be used on memory-backed block devices. If you
-	  enable this option, you can select to mount block devices which are
-	  capable of this feature without using the page cache.
-
-	  If you do not use a block device that is capable of using this,
-	  or if unsure, say N.
* Unmerged path fs/ext2/ext2.h
* Unmerged path fs/ext2/file.c
diff --git a/fs/ext2/super.c b/fs/ext2/super.c
index a47e9381bae0..e27e07b876a7 100644
--- a/fs/ext2/super.c
+++ b/fs/ext2/super.c
@@ -288,7 +288,7 @@ static int ext2_show_options(struct seq_file *seq, struct dentry *root)
 		seq_puts(seq, ",grpquota");
 #endif
 
-#if defined(CONFIG_EXT2_FS_XIP)
+#ifdef CONFIG_FS_DAX
 	if (sbi->s_mount_opt & EXT2_MOUNT_XIP)
 		seq_puts(seq, ",xip");
 #endif
@@ -550,7 +550,7 @@ static int parse_options(char *options, struct super_block *sb)
 			break;
 #endif
 		case Opt_xip:
-#ifdef CONFIG_EXT2_FS_XIP
+#ifdef CONFIG_FS_DAX
 			set_opt (sbi->s_mount_opt, XIP);
 #else
 			ext2_msg(sb, KERN_INFO, "xip option not supported");
* Unmerged path include/linux/fs.h
diff --git a/scripts/diffconfig b/scripts/diffconfig
index b91f3e34d44d..f9503ec41060 100755
--- a/scripts/diffconfig
+++ b/scripts/diffconfig
@@ -28,7 +28,6 @@ If no config files are specified, .config and .config.old are used.
 Example usage:
  $ diffconfig .config config-with-some-changes
 -EXT2_FS_XATTR  n
--EXT2_FS_XIP  n
  CRAMFS  n -> y
  EXT2_FS  y -> n
  LOG_BUF_SHIFT  14 -> 16
