megaraid_sas: task management code optimizations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sumit Saxena <sumit.saxena@broadcom.com>
commit bd23d4abe5edf09dfba086d44b7972cf73c14b0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bd23d4ab.failed

This patch will do code optmization for task management functions.
Below are key changes:

1. Remove reset_device hook as it was not being used and driver was
setting this to NULL.

2. Create wrapper functions for task abort and target reset and inside
   these functions adapter specific calls be made. e.g. fusion adapters
   support task abort and target reset so task abort and target reset
   should be issued to fusion adapters only and for MFI adapters, print
   a message saying feature not supported.

	Signed-off-by: Sumit Saxena <sumit.saxena@broadcom.com>
	Reviewed-by: Hannes Reinicke <hare@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit bd23d4abe5edf09dfba086d44b7972cf73c14b0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_base.c
diff --cc drivers/scsi/megaraid/megaraid_sas_base.c
index 154bb3479f01,b84756c1d230..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@@ -2583,21 -2670,6 +2583,24 @@@ blk_eh_timer_return megasas_reset_timer
  }
  
  /**
++<<<<<<< HEAD
 + * megasas_reset_device -	Device reset handler entry point
 + */
 +static int megasas_reset_device(struct scsi_cmnd *scmd)
 +{
 +	int ret;
 +
 +	/*
 +	 * First wait for all commands to complete
 +	 */
 +	ret = megasas_generic_reset(scmd);
 +
 +	return ret;
 +}
 +
 +/**
++=======
++>>>>>>> bd23d4abe5ed (megaraid_sas: task management code optimizations)
   * megasas_reset_bus_host -	Bus & host reset handler entry point
   */
  static int megasas_reset_bus_host(struct scsi_cmnd *scmd)
@@@ -2620,9 -2690,53 +2623,53 @@@
  	return ret;
  }
  
+ /**
+  * megasas_task_abort - Issues task abort request to firmware
+  *			(supported only for fusion adapters)
+  * @scmd:		SCSI command pointer
+  */
+ static int megasas_task_abort(struct scsi_cmnd *scmd)
+ {
+ 	int ret;
+ 	struct megasas_instance *instance;
+ 
+ 	instance = (struct megasas_instance *)scmd->device->host->hostdata;
+ 
+ 	if (instance->ctrl_context)
+ 		ret = megasas_task_abort_fusion(scmd);
+ 	else {
+ 		sdev_printk(KERN_NOTICE, scmd->device, "TASK ABORT not supported\n");
+ 		ret = FAILED;
+ 	}
+ 
+ 	return ret;
+ }
+ 
+ /**
+  * megasas_reset_target:  Issues target reset request to firmware
+  *                        (supported only for fusion adapters)
+  * @scmd:                 SCSI command pointer
+  */
+ static int megasas_reset_target(struct scsi_cmnd *scmd)
+ {
+ 	int ret;
+ 	struct megasas_instance *instance;
+ 
+ 	instance = (struct megasas_instance *)scmd->device->host->hostdata;
+ 
+ 	if (instance->ctrl_context)
+ 		ret = megasas_reset_target_fusion(scmd);
+ 	else {
+ 		sdev_printk(KERN_NOTICE, scmd->device, "TARGET RESET not supported\n");
+ 		ret = FAILED;
+ 	}
+ 
+ 	return ret;
+ }
+ 
  /**
   * megasas_bios_param - Returns disk geometry for a disk
 - * @sdev:		device handle
 + * @sdev: 		device handle
   * @bdev:		block device
   * @capacity:		drive capacity
   * @geom:		geometry parameters
@@@ -2884,9 -3000,10 +2931,9 @@@ static struct scsi_host_template megasa
  	.proc_name = "megaraid_sas",
  	.slave_configure = megasas_slave_configure,
  	.slave_alloc = megasas_slave_alloc,
 -	.slave_destroy = megasas_slave_destroy,
  	.queuecommand = megasas_queue_command,
- 	.eh_device_reset_handler = megasas_reset_device,
- 	.eh_bus_reset_handler = megasas_reset_bus_host,
+ 	.eh_target_reset_handler = megasas_reset_target,
+ 	.eh_abort_handler = megasas_task_abort,
  	.eh_host_reset_handler = megasas_reset_bus_host,
  	.eh_timed_out = megasas_reset_timer,
  	.shost_attrs = megaraid_host_attrs,
@@@ -5305,22 -5631,6 +5352,25 @@@ static int megasas_io_attach(struct meg
  	host->max_lun = MEGASAS_MAX_LUN;
  	host->max_cmd_len = 16;
  
++<<<<<<< HEAD
 +	/* Fusion only supports host reset */
 +	if ((instance->pdev->device == PCI_DEVICE_ID_LSI_FUSION) ||
 +	    (instance->pdev->device == PCI_DEVICE_ID_LSI_PLASMA) ||
 +	    (instance->pdev->device == PCI_DEVICE_ID_LSI_INVADER) ||
 +	    (instance->pdev->device == PCI_DEVICE_ID_LSI_FURY)) {
 +		host->hostt->eh_device_reset_handler = NULL;
 +		host->hostt->eh_bus_reset_handler = NULL;
 +	}
 +	error = scsi_init_shared_tag_map(host, host->can_queue);
 +	if (error) {
 +		dev_err(&instance->pdev->dev,
 +			"Failed to shared tag from %s %d\n",
 +			__func__, __LINE__);
 +		return -ENODEV;
 +	}
 +
++=======
++>>>>>>> bd23d4abe5ed (megaraid_sas: task management code optimizations)
  	/*
  	 * Notify the mid-layer about the new controller
  	 */
* Unmerged path drivers/scsi/megaraid/megaraid_sas_base.c
