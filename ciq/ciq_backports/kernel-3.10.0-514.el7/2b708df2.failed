mmc: dw_mmc: remove the unused blk_setting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jaehoon Chung <jh80.chung@samsung.com>
commit 2b708df2b3edf6e91a4c8d89e7aedb0f861d0e41
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2b708df2.failed

"blk_setting" doesn't use anywhere.

	Signed-off-by: Jaehoon Chung <jh80.chung@samsung.com>
(cherry picked from commit 2b708df2b3edf6e91a4c8d89e7aedb0f861d0e41)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/dw_mmc.c
diff --cc drivers/mmc/host/dw_mmc.c
index bc4f99ee919c,091df65f7813..000000000000
--- a/drivers/mmc/host/dw_mmc.c
+++ b/drivers/mmc/host/dw_mmc.c
@@@ -2036,44 -2430,26 +2036,54 @@@ static int dw_mci_init_slot(struct dw_m
  	if (host->pdata->caps2)
  		mmc->caps2 = host->pdata->caps2;
  
 -	dw_mci_slot_of_parse(slot);
 +	if (host->pdata->get_bus_wd)
 +		bus_width = host->pdata->get_bus_wd(slot->id);
 +	else if (host->dev->of_node)
 +		bus_width = dw_mci_of_get_bus_wd(host->dev, slot->id);
 +	else
 +		bus_width = 1;
  
 -	ret = mmc_of_parse(mmc);
 -	if (ret)
 -		goto err_host_allocated;
 +	switch (bus_width) {
 +	case 8:
 +		mmc->caps |= MMC_CAP_8_BIT_DATA;
 +	case 4:
 +		mmc->caps |= MMC_CAP_4_BIT_DATA;
 +	}
 +
 +	if (host->pdata->quirks & DW_MCI_QUIRK_HIGHSPEED)
 +		mmc->caps |= MMC_CAP_SD_HIGHSPEED | MMC_CAP_MMC_HIGHSPEED;
  
- 	if (host->pdata->blk_settings) {
- 		mmc->max_segs = host->pdata->blk_settings->max_segs;
- 		mmc->max_blk_size = host->pdata->blk_settings->max_blk_size;
- 		mmc->max_blk_count = host->pdata->blk_settings->max_blk_count;
- 		mmc->max_req_size = host->pdata->blk_settings->max_req_size;
- 		mmc->max_seg_size = host->pdata->blk_settings->max_seg_size;
+ 	/* Useful defaults if platform data is unset. */
+ 	if (host->use_dma) {
+ 		mmc->max_segs = host->ring_size;
+ 		mmc->max_blk_size = 65536;
+ 		mmc->max_seg_size = 0x1000;
+ 		mmc->max_req_size = mmc->max_seg_size * host->ring_size;
+ 		mmc->max_blk_count = mmc->max_req_size / 512;
  	} else {
++<<<<<<< HEAD
 +		/* Useful defaults if platform data is unset. */
 +#ifdef CONFIG_MMC_DW_IDMAC
 +		mmc->max_segs = host->ring_size;
 +		mmc->max_blk_size = 65536;
 +		mmc->max_blk_count = host->ring_size;
 +		mmc->max_seg_size = 0x1000;
 +		mmc->max_req_size = mmc->max_seg_size * mmc->max_blk_count;
 +#else
 +		mmc->max_segs = 64;
 +		mmc->max_blk_size = 65536; /* BLKSIZ is 16 bits */
 +		mmc->max_blk_count = 512;
 +		mmc->max_req_size = mmc->max_blk_size * mmc->max_blk_count;
 +		mmc->max_seg_size = mmc->max_req_size;
 +#endif /* CONFIG_MMC_DW_IDMAC */
++=======
+ 		mmc->max_segs = 64;
+ 		mmc->max_blk_size = 65536; /* BLKSIZ is 16 bits */
+ 		mmc->max_blk_count = 512;
+ 		mmc->max_req_size = mmc->max_blk_size *
+ 				    mmc->max_blk_count;
+ 		mmc->max_seg_size = mmc->max_req_size;
++>>>>>>> 2b708df2b3ed (mmc: dw_mmc: remove the unused blk_setting)
  	}
  
  	if (dw_mci_get_cd(mmc))
* Unmerged path drivers/mmc/host/dw_mmc.c
diff --git a/include/linux/mmc/dw_mmc.h b/include/linux/mmc/dw_mmc.h
index a2d9a022a8fd..b2a9e512011e 100644
--- a/include/linux/mmc/dw_mmc.h
+++ b/include/linux/mmc/dw_mmc.h
@@ -264,7 +264,6 @@ struct dw_mci_board {
 
 	struct dw_mci_dma_ops *dma_ops;
 	struct dma_pdata *data;
-	struct block_settings *blk_settings;
 };
 
 #endif /* LINUX_MMC_DW_MMC_H */
