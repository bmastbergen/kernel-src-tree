cxgb4: add definitions for iSCSI target ULD

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Varun Prakash <varun@chelsio.com>
commit b96c5cbb200533efff7b83873f43f0994b5b4ce2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b96c5cbb.failed

add structure, macro and constant definitions
for iSCSI Tx and Rx.

	Signed-off-by: Varun Prakash <varun@chelsio.com>
	Acked-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit b96c5cbb200533efff7b83873f43f0994b5b4ce2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
index 22de86a60073,03da7a7e6eaf..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
@@@ -770,6 -900,110 +771,113 @@@ struct cpl_iscsi_hdr 
  #define ISCSI_DDP_V(x) ((x) << ISCSI_DDP_S)
  #define ISCSI_DDP_F    ISCSI_DDP_V(1U)
  
++<<<<<<< HEAD
++=======
+ struct cpl_rx_data_ddp {
+ 	union opcode_tid ot;
+ 	__be16 urg;
+ 	__be16 len;
+ 	__be32 seq;
+ 	union {
+ 		__be32 nxt_seq;
+ 		__be32 ddp_report;
+ 	};
+ 	__be32 ulp_crc;
+ 	__be32 ddpvld;
+ };
+ 
+ #define cpl_rx_iscsi_ddp cpl_rx_data_ddp
+ 
+ struct cpl_iscsi_data {
+ 	union opcode_tid ot;
+ 	__u8 rsvd0[2];
+ 	__be16 len;
+ 	__be32 seq;
+ 	__be16 urg;
+ 	__u8 rsvd1;
+ 	__u8 status;
+ };
+ 
+ struct cpl_tx_data_iso {
+ 	__be32 op_to_scsi;
+ 	__u8   reserved1;
+ 	__u8   ahs_len;
+ 	__be16 mpdu;
+ 	__be32 burst_size;
+ 	__be32 len;
+ 	__be32 reserved2_seglen_offset;
+ 	__be32 datasn_offset;
+ 	__be32 buffer_offset;
+ 	__be32 reserved3;
+ 
+ 	/* encapsulated CPL_TX_DATA follows here */
+ };
+ 
+ /* cpl_tx_data_iso.op_to_scsi fields */
+ #define CPL_TX_DATA_ISO_OP_S	24
+ #define CPL_TX_DATA_ISO_OP_M	0xff
+ #define CPL_TX_DATA_ISO_OP_V(x)	((x) << CPL_TX_DATA_ISO_OP_S)
+ #define CPL_TX_DATA_ISO_OP_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_OP_S) & CPL_TX_DATA_ISO_OP_M)
+ 
+ #define CPL_TX_DATA_ISO_FIRST_S		23
+ #define CPL_TX_DATA_ISO_FIRST_M		0x1
+ #define CPL_TX_DATA_ISO_FIRST_V(x)	((x) << CPL_TX_DATA_ISO_FIRST_S)
+ #define CPL_TX_DATA_ISO_FIRST_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_FIRST_S) & CPL_TX_DATA_ISO_FIRST_M)
+ #define CPL_TX_DATA_ISO_FIRST_F	CPL_TX_DATA_ISO_FIRST_V(1U)
+ 
+ #define CPL_TX_DATA_ISO_LAST_S		22
+ #define CPL_TX_DATA_ISO_LAST_M		0x1
+ #define CPL_TX_DATA_ISO_LAST_V(x)	((x) << CPL_TX_DATA_ISO_LAST_S)
+ #define CPL_TX_DATA_ISO_LAST_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_LAST_S) & CPL_TX_DATA_ISO_LAST_M)
+ #define CPL_TX_DATA_ISO_LAST_F	CPL_TX_DATA_ISO_LAST_V(1U)
+ 
+ #define CPL_TX_DATA_ISO_CPLHDRLEN_S	21
+ #define CPL_TX_DATA_ISO_CPLHDRLEN_M	0x1
+ #define CPL_TX_DATA_ISO_CPLHDRLEN_V(x)	((x) << CPL_TX_DATA_ISO_CPLHDRLEN_S)
+ #define CPL_TX_DATA_ISO_CPLHDRLEN_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_CPLHDRLEN_S) & CPL_TX_DATA_ISO_CPLHDRLEN_M)
+ #define CPL_TX_DATA_ISO_CPLHDRLEN_F	CPL_TX_DATA_ISO_CPLHDRLEN_V(1U)
+ 
+ #define CPL_TX_DATA_ISO_HDRCRC_S	20
+ #define CPL_TX_DATA_ISO_HDRCRC_M	0x1
+ #define CPL_TX_DATA_ISO_HDRCRC_V(x)	((x) << CPL_TX_DATA_ISO_HDRCRC_S)
+ #define CPL_TX_DATA_ISO_HDRCRC_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_HDRCRC_S) & CPL_TX_DATA_ISO_HDRCRC_M)
+ #define CPL_TX_DATA_ISO_HDRCRC_F	CPL_TX_DATA_ISO_HDRCRC_V(1U)
+ 
+ #define CPL_TX_DATA_ISO_PLDCRC_S	19
+ #define CPL_TX_DATA_ISO_PLDCRC_M	0x1
+ #define CPL_TX_DATA_ISO_PLDCRC_V(x)	((x) << CPL_TX_DATA_ISO_PLDCRC_S)
+ #define CPL_TX_DATA_ISO_PLDCRC_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_PLDCRC_S) & CPL_TX_DATA_ISO_PLDCRC_M)
+ #define CPL_TX_DATA_ISO_PLDCRC_F	CPL_TX_DATA_ISO_PLDCRC_V(1U)
+ 
+ #define CPL_TX_DATA_ISO_IMMEDIATE_S	18
+ #define CPL_TX_DATA_ISO_IMMEDIATE_M	0x1
+ #define CPL_TX_DATA_ISO_IMMEDIATE_V(x)	((x) << CPL_TX_DATA_ISO_IMMEDIATE_S)
+ #define CPL_TX_DATA_ISO_IMMEDIATE_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_IMMEDIATE_S) & CPL_TX_DATA_ISO_IMMEDIATE_M)
+ #define CPL_TX_DATA_ISO_IMMEDIATE_F	CPL_TX_DATA_ISO_IMMEDIATE_V(1U)
+ 
+ #define CPL_TX_DATA_ISO_SCSI_S		16
+ #define CPL_TX_DATA_ISO_SCSI_M		0x3
+ #define CPL_TX_DATA_ISO_SCSI_V(x)	((x) << CPL_TX_DATA_ISO_SCSI_S)
+ #define CPL_TX_DATA_ISO_SCSI_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_SCSI_S) & CPL_TX_DATA_ISO_SCSI_M)
+ 
+ /* cpl_tx_data_iso.reserved2_seglen_offset fields */
+ #define CPL_TX_DATA_ISO_SEGLEN_OFFSET_S		0
+ #define CPL_TX_DATA_ISO_SEGLEN_OFFSET_M		0xffffff
+ #define CPL_TX_DATA_ISO_SEGLEN_OFFSET_V(x)	\
+ 	((x) << CPL_TX_DATA_ISO_SEGLEN_OFFSET_S)
+ #define CPL_TX_DATA_ISO_SEGLEN_OFFSET_G(x)	\
+ 	(((x) >> CPL_TX_DATA_ISO_SEGLEN_OFFSET_S) & \
+ 	 CPL_TX_DATA_ISO_SEGLEN_OFFSET_M)
+ 
++>>>>>>> b96c5cbb2005 (cxgb4: add definitions for iSCSI target ULD)
  struct cpl_rx_data {
  	union opcode_tid ot;
  	__be16 rsvd;
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_msg.h
diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h b/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
index ae0f72f6ace9..628c2cf5583d 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4fw_api.h
@@ -101,6 +101,7 @@ enum fw_wr_opcodes {
 	FW_RI_BIND_MW_WR               = 0x18,
 	FW_RI_FR_NSMR_WR               = 0x19,
 	FW_RI_INV_LSTAG_WR             = 0x1a,
+	FW_ISCSI_TX_DATA_WR	       = 0x45,
 	FW_LASTC2E_WR                  = 0x70
 };
 
@@ -561,6 +562,12 @@ enum fw_flowc_mnem {
 	FW_FLOWC_MNEM_SNDBUF,
 	FW_FLOWC_MNEM_MSS,
 	FW_FLOWC_MNEM_TXDATAPLEN_MAX,
+	FW_FLOWC_MNEM_TCPSTATE,
+	FW_FLOWC_MNEM_EOSTATE,
+	FW_FLOWC_MNEM_SCHEDCLASS,
+	FW_FLOWC_MNEM_DCBPRIO,
+	FW_FLOWC_MNEM_SND_SCALE,
+	FW_FLOWC_MNEM_RCV_SCALE,
 };
 
 struct fw_flowc_mnemval {
