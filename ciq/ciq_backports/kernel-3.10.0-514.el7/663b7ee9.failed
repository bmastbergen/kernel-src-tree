mei: me: release hw from reset only during the reset flow

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit 663b7ee9517eec6deea9a48c7a1392a9a34f7809
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/663b7ee9.failed

We might enter the interrupt handler with hw_ready already set,
but prior we actually started the reset flow.
To soleve this we move the reset release from the interrupt handler
to the HW start wait function which is part of the reset sequence.

	Cc: <stable@vger.kernel.org> #3.10+
	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 663b7ee9517eec6deea9a48c7a1392a9a34f7809)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/hw-me.c
diff --cc drivers/misc/mei/hw-me.c
index 1707fa5ea02a,f8fd503dfbd6..000000000000
--- a/drivers/misc/mei/hw-me.c
+++ b/drivers/misc/mei/hw-me.c
@@@ -663,9 -732,7 +664,13 @@@ irqreturn_t mei_me_irq_thread_handler(i
  	/*  check if we need to start the dev */
  	if (!mei_host_is_ready(dev)) {
  		if (mei_hw_is_ready(dev)) {
++<<<<<<< HEAD
 +			mei_me_hw_reset_release(dev);
 +			dev_dbg(&dev->pdev->dev, "we need to start the dev.\n");
 +
++=======
+ 			dev_dbg(dev->dev, "we need to start the dev.\n");
++>>>>>>> 663b7ee9517e (mei: me: release hw from reset only during the reset flow)
  			dev->recvd_hw_ready = true;
  			wake_up(&dev->wait_hw_ready);
  		} else {
* Unmerged path drivers/misc/mei/hw-me.c
