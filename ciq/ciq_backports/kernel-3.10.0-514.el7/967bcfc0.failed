IB/qib: Improve ipoib UD performance

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mike Marciniszyn <mike.marciniszyn@intel.com>
commit 967bcfc0f5744c1553545883bbb43df1d41cbb5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/967bcfc0.failed

Based on profiling, UD performance drops in case of processes
in a single client due to excess context switches when
the progress workqueue is scheduled.

This is solved by modifying the heuristic to select the
direct progress instead of the scheduling progress via
the workqueue when UD-like situations are detected in
the heuristic.

	Reviewed-by: Vinit Agnihotri <vinit.abhay.agnihotri@intel.com>
	Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 967bcfc0f5744c1553545883bbb43df1d41cbb5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/qib/qib_verbs.c
diff --cc drivers/infiniband/hw/qib/qib_verbs.c
index 3dcc4985b60f,baf1e42b6896..000000000000
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@@ -422,11 -439,15 +423,20 @@@ static int qib_post_one_send(struct qib
  	    qp->ibqp.qp_type == IB_QPT_RC) {
  		if (wqe->length > 0x80000000U)
  			goto bail_inval_free;
+ 		if (wqe->length <= qp->pmtu)
+ 			avoid_schedule = 1;
  	} else if (wqe->length > (dd_from_ibdev(qp->ibqp.device)->pport +
- 				  qp->port_num - 1)->ibmtu)
+ 				  qp->port_num - 1)->ibmtu) {
  		goto bail_inval_free;
++<<<<<<< HEAD
 +	else
 +		atomic_inc(&to_iah(wr->wr.ud.ah)->refcount);
++=======
+ 	} else {
+ 		atomic_inc(&to_iah(ud_wr(wr)->ah)->refcount);
+ 		avoid_schedule = 1;
+ 	}
++>>>>>>> 967bcfc0f574 (IB/qib: Improve ipoib UD performance)
  	wqe->ssn = qp->s_ssn++;
  	qp->s_head = next;
  
* Unmerged path drivers/infiniband/hw/qib/qib_verbs.c
