cxl: Parse device tree and create cxl device(s) at boot

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Frederic Barrat <fbarrat@linux.vnet.ibm.com>
commit b40844aa55bb325de7509003c7529c75b0532412
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b40844aa.failed

Add new entry point to scan the device tree at boot in a guest,
looking for cxl devices.

Co-authored-by: Christophe Lombard <clombard@linux.vnet.ibm.com>
	Signed-off-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
	Signed-off-by: Christophe Lombard <clombard@linux.vnet.ibm.com>
	Reviewed-by: Manoj Kumar <manoj@linux.vnet.ibm.com>
	Acked-by: Ian Munsie <imunsie@au1.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit b40844aa55bb325de7509003c7529c75b0532412)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/cxl/base.c
diff --cc drivers/misc/cxl/base.c
index a9f0dd3255a2,9b90ec6c07cd..000000000000
--- a/drivers/misc/cxl/base.c
+++ b/drivers/misc/cxl/base.c
@@@ -84,3 -85,34 +85,37 @@@ void unregister_cxl_calls(struct cxl_ca
  	synchronize_rcu();
  }
  EXPORT_SYMBOL_GPL(unregister_cxl_calls);
++<<<<<<< HEAD
++=======
+ 
+ int cxl_update_properties(struct device_node *dn,
+ 			  struct property *new_prop)
+ {
+ 	return of_update_property(dn, new_prop);
+ }
+ EXPORT_SYMBOL_GPL(cxl_update_properties);
+ 
+ static int __init cxl_base_init(void)
+ {
+ 	struct device_node *np = NULL;
+ 	struct platform_device *dev;
+ 	int count = 0;
+ 
+ 	/*
+ 	 * Scan for compatible devices in guest only
+ 	 */
+ 	if (cpu_has_feature(CPU_FTR_HVMODE))
+ 		return 0;
+ 
+ 	while ((np = of_find_compatible_node(np, NULL,
+ 				     "ibm,coherent-platform-facility"))) {
+ 		dev = of_platform_device_create(np, NULL, NULL);
+ 		if (dev)
+ 			count++;
+ 	}
+ 	pr_devel("Found %d cxl device(s)\n", count);
+ 	return 0;
+ }
+ 
+ module_init(cxl_base_init);
++>>>>>>> b40844aa55bb (cxl: Parse device tree and create cxl device(s) at boot)
* Unmerged path drivers/misc/cxl/base.c
