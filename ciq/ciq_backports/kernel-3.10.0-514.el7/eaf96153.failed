libnvdimm, nfit: add interleave-set state-tracking infrastructure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit eaf961536e1622ad21247ac8d44acd48ba65566e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eaf96153.failed

On platforms that have firmware support for reading/writing per-dimm
label space, a portion of the dimm may be accessible via an interleave
set PMEM mapping in addition to the dimm's BLK (block-data-window
aperture(s)) interface.  A label, stored in a "configuration data
region" on the dimm, disambiguates which dimm addresses are accessed
through which exclusive interface.

Add infrastructure that allows the kernel to block modifications to a
label in the set while any member dimm is active.  Note that this is
meant only for enforcing "no modifications of active labels" via the
coarse ioctl command.  Adding/deleting namespaces from an active
interleave set is always possible via sysfs.

Another aspect of tracking interleave sets is tracking their integrity
when DIMMs in a set are physically re-ordered.  For this purpose we
generate an "interleave-set cookie" that can be recorded in a label and
validated against the current configuration.  It is the bus provider
implementation's responsibility to calculate the interleave set cookie
and attach it to a given region.

	Cc: Neil Brown <neilb@suse.de>
	Cc: <linux-acpi@vger.kernel.org>
	Cc: Greg KH <gregkh@linuxfoundation.org>
	Cc: Robert Moore <robert.moore@intel.com>
	Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Acked-by: Christoph Hellwig <hch@lst.de>
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit eaf961536e1622ad21247ac8d44acd48ba65566e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/nfit.c
#	drivers/nvdimm/bus.c
#	drivers/nvdimm/core.c
#	drivers/nvdimm/dimm_devs.c
#	drivers/nvdimm/nd-core.h
#	drivers/nvdimm/nd.h
#	drivers/nvdimm/region_devs.c
#	include/linux/libnvdimm.h
* Unmerged path drivers/acpi/nfit.c
* Unmerged path drivers/nvdimm/bus.c
* Unmerged path drivers/nvdimm/core.c
* Unmerged path drivers/nvdimm/dimm_devs.c
* Unmerged path drivers/nvdimm/nd-core.h
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/region_devs.c
* Unmerged path include/linux/libnvdimm.h
* Unmerged path drivers/acpi/nfit.c
* Unmerged path drivers/nvdimm/bus.c
* Unmerged path drivers/nvdimm/core.c
* Unmerged path drivers/nvdimm/dimm_devs.c
* Unmerged path drivers/nvdimm/nd-core.h
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/region_devs.c
* Unmerged path include/linux/libnvdimm.h
