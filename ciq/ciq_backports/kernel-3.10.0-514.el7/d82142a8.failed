Bluetooth: hci_core: cancel power off delayed work properly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Wei-Ning Huang <wnhuang@chromium.org>
commit d82142a8b1338e6a4339920863423379c27b0b16
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d82142a8.failed

When the HCI_AUTO_OFF flag is cleared, the power_off delayed work need
to be cancel or HCI will be powered off even if it's managed.

	Signed-off-by: Wei-Ning Huang <wnhuang@chromium.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit d82142a8b1338e6a4339920863423379c27b0b16)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_core.c
diff --cc net/bluetooth/hci_core.c
index 7c88f5f83598,2713fc86e85a..000000000000
--- a/net/bluetooth/hci_core.c
+++ b/net/bluetooth/hci_core.c
@@@ -1571,9 -2018,22 +1571,24 @@@ static void hci_power_on(struct work_st
  
  	BT_DBG("%s", hdev->name);
  
++<<<<<<< HEAD
 +	err = hci_dev_open(hdev->id);
++=======
+ 	if (test_bit(HCI_UP, &hdev->flags) &&
+ 	    hci_dev_test_flag(hdev, HCI_MGMT) &&
+ 	    hci_dev_test_and_clear_flag(hdev, HCI_AUTO_OFF)) {
+ 		cancel_delayed_work(&hdev->power_off);
+ 		hci_req_sync_lock(hdev);
+ 		err = __hci_req_hci_power_on(hdev);
+ 		hci_req_sync_unlock(hdev);
+ 		mgmt_power_on(hdev, err);
+ 		return;
+ 	}
+ 
+ 	err = hci_dev_do_open(hdev);
++>>>>>>> d82142a8b133 (Bluetooth: hci_core: cancel power off delayed work properly)
  	if (err < 0) {
 -		hci_dev_lock(hdev);
  		mgmt_set_powered_failed(hdev, err);
 -		hci_dev_unlock(hdev);
  		return;
  	}
  
* Unmerged path net/bluetooth/hci_core.c
