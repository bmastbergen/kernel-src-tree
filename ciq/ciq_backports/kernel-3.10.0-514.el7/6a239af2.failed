ACPI / resources: Change pr_info() to pr_debug() for debug information

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 6a239af2a3698c488aee798670eca772eb74890b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6a239af2.failed

Annoying and noisy ACPI debug messages are printed with pr_info()
after the recent ACPI resources handling rework.  Replace the
pr_info() with pr_debug() to reduce to noise level.

	Reported-by: Borislav Petkov <bp@alien8.de>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 6a239af2a3698c488aee798670eca772eb74890b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/resource.c
diff --cc drivers/acpi/resource.c
index 1203700d74b8,c723668e3e27..000000000000
--- a/drivers/acpi/resource.c
+++ b/drivers/acpi/resource.c
@@@ -34,21 -34,34 +34,45 @@@
  #define valid_IRQ(i) (true)
  #endif
  
 -static bool acpi_dev_resource_len_valid(u64 start, u64 end, u64 len, bool io)
 +static unsigned long acpi_dev_memresource_flags(u64 len, u8 write_protect,
 +						bool window)
  {
 -	u64 reslen = end - start + 1;
 +	unsigned long flags = IORESOURCE_MEM;
  
++<<<<<<< HEAD
 +	if (len == 0)
 +		flags |= IORESOURCE_DISABLED;
++=======
+ 	/*
+ 	 * CHECKME: len might be required to check versus a minimum
+ 	 * length as well. 1 for io is fine, but for memory it does
+ 	 * not make any sense at all.
+ 	 */
+ 	if (len && reslen && reslen == len && start <= end)
+ 		return true;
+ 
+ 	pr_debug("ACPI: invalid or unassigned resource %s [%016llx - %016llx] length [%016llx]\n",
+ 		io ? "io" : "mem", start, end, len);
+ 
+ 	return false;
+ }
+ 
+ static void acpi_dev_memresource_flags(struct resource *res, u64 len,
+ 				       u8 write_protect)
+ {
+ 	res->flags = IORESOURCE_MEM;
+ 
+ 	if (!acpi_dev_resource_len_valid(res->start, res->end, len, false))
+ 		res->flags |= IORESOURCE_DISABLED | IORESOURCE_UNSET;
++>>>>>>> 6a239af2a369 (ACPI / resources: Change pr_info() to pr_debug() for debug information)
  
  	if (write_protect == ACPI_READ_WRITE_MEMORY)
 -		res->flags |= IORESOURCE_MEM_WRITEABLE;
 +		flags |= IORESOURCE_MEM_WRITEABLE;
 +
 +	if (window)
 +		flags |= IORESOURCE_WINDOW;
 +
 +	return flags;
  }
  
  static void acpi_dev_get_memresource(struct resource *res, u64 start, u64 len,
* Unmerged path drivers/acpi/resource.c
