kernel: use the gnu89 standard explicitly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [kernel] makefile: use the gnu89 standard explicitly (Lance Richardson) [1227950]
Rebuild_FUZZ: 90.48%
commit-author Kirill A. Shutemov <kirill@shutemov.name>
commit 51b97e354ba9fce1890cf38ecc754aa49677fc89
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/51b97e35.failed

Sasha Levin reports:
 "gcc5 changes the default standard to c11, which makes kernel build
  unhappy

  Explicitly define the kernel standard to be gnu89 which should keep
  everything working exactly like it was before gcc5"

There are multiple small issues with the new default, but the biggest
issue seems to be that the old - and very useful - GNU extension to
allow a cast in front of an initializer has gone away.

Patch updated by Kirill:
 "I'm pretty sure all gcc versions you can build kernel with supports
  -std=gnu89.  cc-option is redunrant.

  We also need to adjust HOSTCFLAGS otherwise allmodconfig fails for me"

Note by Andrew Pinski:
 "Yes it was reported and both problems relating to this extension has
  been added to gnu99 and gnu11.  Though there are other issues with the
  kernel dealing with extern inline have different semantics between
  gnu89 and gnu99/11"

End result: we may be able to move up to a newer stdc model eventually,
but right now the newer models have some annoying deficiencies, so the
traditional "gnu89" model ends up being the preferred one.

	Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
Singed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 51b97e354ba9fce1890cf38ecc754aa49677fc89)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Makefile
diff --cc Makefile
index 3dadade7b979,6e1b8e76dfb5..000000000000
--- a/Makefile
+++ b/Makefile
@@@ -247,9 -297,14 +247,9 @@@ CONFIG_SHELL := $(shell if [ -x "$$BASH
  
  HOSTCC       = gcc
  HOSTCXX      = g++
- HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer
+ HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-pointer -std=gnu89
  HOSTCXXFLAGS = -O2
  
 -ifeq ($(shell $(HOSTCC) -v 2>&1 | grep -c "clang version"), 1)
 -HOSTCFLAGS  += -Wno-unused-value -Wno-unused-parameter \
 -		-Wno-missing-field-initializers -fno-delete-null-pointer-checks
 -endif
 -
  # Decide whether to build built-in, modular, or both.
  # Normally, just do built-in.
  
@@@ -379,20 -402,7 +379,24 @@@ KBUILD_CFLAGS   := -Wall -Wundef -Wstri
  		   -fno-strict-aliasing -fno-common \
  		   -Werror-implicit-function-declaration \
  		   -Wno-format-security \
++<<<<<<< HEAD
 +		   -fno-delete-null-pointer-checks
 +
 +ifneq ($(WITH_GCOV),1)
 +ifeq ($(KBUILD_EXTMOD),)
 +ifneq (,$(filter $(ARCH), x86 x86_64 powerpc))
 +KBUILD_CFLAGS   += $(call cc-ifversion, -eq, 0408, -Werror)
 +endif
 +# powerpc is compiled with -O3 and gcc 4.8 has some known problems
 +# with compiler warnings when using -O3, so let's disable them:
 +ifeq ($(ARCH)-$(call cc-version),powerpc-0408)
 +KBUILD_CFLAGS += -Wno-error=maybe-uninitialized -Wno-error=array-bounds
 +endif
 +endif
 +endif
++=======
+ 		   -std=gnu89
++>>>>>>> 51b97e354ba9 (kernel: use the gnu89 standard explicitly)
  
  KBUILD_AFLAGS_KERNEL :=
  KBUILD_CFLAGS_KERNEL :=
* Unmerged path Makefile
