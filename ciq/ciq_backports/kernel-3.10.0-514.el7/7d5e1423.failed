net/mlx5: Update mlx5_ifc hardware features

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [include] mlx5: Update mlx5_ifc hardware features (kamal heib) [1275159 1296272 1296405 1298421 1298422 1298423 1298424 1298425]
Rebuild_FUZZ: 95.12%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 7d5e14237a551a5de3d287f2e8db2d044ee81a1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7d5e1423.failed

Adding the needed mlx5_ifc hardware bits and structs
for the following feature:

* Add vport to steering commands for SRIOV ACL support
* Add mlcr, pcmr and mcia registers for dump module EEPROM
* Add support for FCS, baeacon led and disable_link bits to
  hca caps
* Add CQE period mode bit in  CQ context for CQE based CQ
  moderation support
* Add umr SQ bit for fragmented memory registration
* Add needed bits and caps for Striding RQ support

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7d5e14237a551a5de3d287f2e8db2d044ee81a1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 08e2b9ad01d1,4ce4ea422a10..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -504,15 -507,17 +504,21 @@@ struct mlx5_ifc_per_protocol_networking
  	u8         lro_cap[0x1];
  	u8         lro_psh_flag[0x1];
  	u8         lro_time_stamp[0x1];
 -	u8         reserved_at_5[0x3];
 +	u8         reserved_0[0x3];
  	u8         self_lb_en_modifiable[0x1];
 -	u8         reserved_at_9[0x2];
 +	u8         reserved_1[0x2];
  	u8         max_lso_cap[0x5];
 -	u8         reserved_at_10[0x4];
 +	u8         reserved_2[0x4];
  	u8         rss_ind_tbl_cap[0x4];
++<<<<<<< HEAD
 +	u8         reserved_3[0x3];
++=======
+ 	u8         reg_umr_sq[0x1];
+ 	u8         scatter_fcs[0x1];
+ 	u8         reserved_at_1a[0x1];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         tunnel_lso_const_out_ip_id[0x1];
 -	u8         reserved_at_1c[0x2];
 +	u8         reserved_4[0x2];
  	u8         tunnel_statless_gre[0x1];
  	u8         tunnel_stateless_vxlan[0x1];
  
@@@ -720,10 -752,14 +726,18 @@@ struct mlx5_ifc_cmd_hca_cap_bits 
  	u8         ets[0x1];
  	u8         nic_flow_table[0x1];
  	u8         eswitch_flow_table[0x1];
 -	u8	   early_vf_enable[0x1];
 -	u8         reserved_at_1a9[0x2];
 +	u8	   early_vf_enable;
 +	u8         reserved_18[0x2];
  	u8         local_ca_ack_delay[0x5];
++<<<<<<< HEAD
 +	u8         reserved_19[0x6];
++=======
+ 	u8         reserved_at_1af[0x2];
+ 	u8         ports_check[0x1];
+ 	u8         reserved_at_1b2[0x1];
+ 	u8         disable_link_up[0x1];
+ 	u8         beacon_led[0x1];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         port_type[0x2];
  	u8         num_ports[0x8];
  
@@@ -736,7 -784,10 +750,14 @@@
  	u8         cqe_version[0x4];
  
  	u8         compact_address_vector[0x1];
++<<<<<<< HEAD
 +	u8         reserved_23[0xe];
++=======
+ 	u8         striding_rq[0x1];
+ 	u8         reserved_at_201[0x2];
+ 	u8         ipoib_basic_offloads[0x1];
+ 	u8         reserved_at_205[0xa];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         drain_sigerr[0x1];
  	u8         cmdif_checksum[0x2];
  	u8         sigerr_cqe[0x1];
@@@ -761,16 -812,20 +782,27 @@@
  	u8         cq_eq_remap[0x1];
  	u8         pg[0x1];
  	u8         block_lb_mc[0x1];
 -	u8         reserved_at_229[0x1];
 +	u8         reserved_29[0x1];
  	u8         scqe_break_moderation[0x1];
++<<<<<<< HEAD
 +	u8         reserved_30[0x1];
++=======
+ 	u8         cq_period_start_from_cqe[0x1];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         cd[0x1];
 -	u8         reserved_at_22d[0x1];
 +	u8         reserved_31[0x1];
  	u8         apm[0x1];
++<<<<<<< HEAD
 +	u8         reserved_32[0x7];
++=======
+ 	u8         vector_calc[0x1];
+ 	u8         umr_ptr_rlky[0x1];
+ 	u8	   imaicl[0x1];
+ 	u8         reserved_at_232[0x4];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         qkv[0x1];
  	u8         pkv[0x1];
 -	u8         set_deth_sqpn[0x1];
 -	u8         reserved_at_239[0x3];
 +	u8         reserved_33[0x4];
  	u8         xrc[0x1];
  	u8         ud[0x1];
  	u8         uc[0x1];
@@@ -844,29 -899,33 +876,36 @@@
  	u8         log_max_wq_sz[0x5];
  
  	u8         nic_vport_change_event[0x1];
 -	u8         reserved_at_3e1[0xa];
 +	u8         reserved_61[0xa];
  	u8         log_max_vlan_list[0x5];
 -	u8         reserved_at_3f0[0x3];
 +	u8         reserved_62[0x3];
  	u8         log_max_current_mc_list[0x5];
 -	u8         reserved_at_3f8[0x3];
 +	u8         reserved_63[0x3];
  	u8         log_max_current_uc_list[0x5];
  
 -	u8         reserved_at_400[0x80];
 +	u8         reserved_64[0x80];
  
 -	u8         reserved_at_480[0x3];
 +	u8         reserved_65[0x3];
  	u8         log_max_l2_table[0x5];
 -	u8         reserved_at_488[0x8];
 +	u8         reserved_66[0x8];
  	u8         log_uar_page_sz[0x10];
  
 -	u8         reserved_at_4a0[0x20];
 -	u8         device_frequency_mhz[0x20];
 -	u8         device_frequency_khz[0x20];
 +	u8         reserved_67[0xe0];
  
++<<<<<<< HEAD
 +	u8         reserved_68[0x1f];
 +	u8         cqe_zip[0x1];
++=======
+ 	u8         reserved_at_500[0x80];
  
- 	u8         cqe_zip_timeout[0x10];
- 	u8         cqe_zip_max_num[0x10];
+ 	u8         reserved_at_580[0x3f];
+ 	u8         cqe_compression[0x1];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
+ 
+ 	u8         cqe_compression_timeout[0x10];
+ 	u8         cqe_compression_max_num[0x10];
  
 -	u8         reserved_at_5e0[0x220];
 +	u8         reserved_69[0x220];
  };
  
  enum mlx5_flow_destination_type {
@@@ -941,14 -1000,20 +980,24 @@@ struct mlx5_ifc_wq_bits 
  
  	u8         sw_counter[0x20];
  
 -	u8         reserved_at_100[0xc];
 +	u8         reserved_4[0xc];
  	u8         log_wq_stride[0x4];
 -	u8         reserved_at_110[0x3];
 +	u8         reserved_5[0x3];
  	u8         log_wq_pg_sz[0x5];
 -	u8         reserved_at_118[0x3];
 +	u8         reserved_6[0x3];
  	u8         log_wq_sz[0x5];
  
++<<<<<<< HEAD
 +	u8         reserved_7[0x4e0];
++=======
+ 	u8         reserved_at_120[0x15];
+ 	u8         log_wqe_num_of_strides[0x3];
+ 	u8         two_byte_shift_en[0x1];
+ 	u8         reserved_at_139[0x4];
+ 	u8         log_wqe_stride_size[0x3];
+ 
+ 	u8         reserved_at_140[0x4c0];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	struct mlx5_ifc_cmd_pas_bits pas[0];
  };
@@@ -2144,24 -2210,25 +2193,29 @@@ struct mlx5_ifc_sqc_bits 
  	u8         cd_master[0x1];
  	u8         fre[0x1];
  	u8         flush_in_error_en[0x1];
 -	u8         reserved_at_4[0x4];
 +	u8         reserved_0[0x4];
  	u8         state[0x4];
++<<<<<<< HEAD
 +	u8         reserved_1[0x14];
++=======
+ 	u8         reg_umr[0x1];
+ 	u8         reserved_at_d[0x13];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
 -	u8         reserved_at_20[0x8];
 +	u8         reserved_2[0x8];
  	u8         user_index[0x18];
  
 -	u8         reserved_at_40[0x8];
 +	u8         reserved_3[0x8];
  	u8         cqn[0x18];
  
 -	u8         reserved_at_60[0xa0];
 +	u8         reserved_4[0xa0];
  
  	u8         tis_lst_sz[0x10];
 -	u8         reserved_at_110[0x10];
 +	u8         reserved_5[0x10];
  
 -	u8         reserved_at_120[0x40];
 +	u8         reserved_6[0x40];
  
 -	u8         reserved_at_160[0x8];
 +	u8         reserved_7[0x8];
  	u8         tis_num_0[0x18];
  
  	struct mlx5_ifc_wq_bits wq;
@@@ -2194,7 -2261,8 +2248,12 @@@ enum 
  
  struct mlx5_ifc_rqc_bits {
  	u8         rlky[0x1];
++<<<<<<< HEAD
 +	u8         reserved_0[0x2];
++=======
+ 	u8         reserved_at_1[0x1];
+ 	u8         scatter_fcs[0x1];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         vsd[0x1];
  	u8         mem_rq_type[0x4];
  	u8         state[0x4];
@@@ -2545,27 -2619,32 +2604,37 @@@ enum 
  	MLX5_CQC_ST_FIRED                                 = 0xa,
  };
  
+ enum {
+ 	MLX5_CQ_PERIOD_MODE_START_FROM_EQE = 0x0,
+ 	MLX5_CQ_PERIOD_MODE_START_FROM_CQE = 0x1,
+ };
+ 
  struct mlx5_ifc_cqc_bits {
  	u8         status[0x4];
 -	u8         reserved_at_4[0x4];
 +	u8         reserved_0[0x4];
  	u8         cqe_sz[0x3];
  	u8         cc[0x1];
 -	u8         reserved_at_c[0x1];
 +	u8         reserved_1[0x1];
  	u8         scqe_break_moderation_en[0x1];
  	u8         oi[0x1];
++<<<<<<< HEAD
 +	u8         reserved_2[0x2];
 +	u8         cqe_zip_en[0x1];
++=======
+ 	u8         cq_period_mode[0x2];
+ 	u8         cqe_comp_en[0x1];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  	u8         mini_cqe_res_format[0x2];
  	u8         st[0x4];
 -	u8         reserved_at_18[0x8];
 +	u8         reserved_3[0x8];
  
 -	u8         reserved_at_20[0x20];
 +	u8         reserved_4[0x20];
  
 -	u8         reserved_at_40[0x14];
 +	u8         reserved_5[0x14];
  	u8         page_offset[0x6];
 -	u8         reserved_at_5a[0x6];
 +	u8         reserved_6[0x6];
  
 -	u8         reserved_at_60[0x3];
 +	u8         reserved_7[0x3];
  	u8         log_cq_size[0x5];
  	u8         uar_page[0x18];
  
@@@ -2923,23 -3002,27 +2992,31 @@@ struct mlx5_ifc_set_fte_out_bits 
  
  struct mlx5_ifc_set_fte_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_4[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x18];
 +	u8         reserved_5[0x18];
  	u8         modify_enable_mask[0x8];
  
 -	u8         reserved_at_e0[0x20];
 +	u8         reserved_6[0x20];
  
  	u8         flow_index[0x20];
  
@@@ -5108,20 -5200,24 +5185,28 @@@ struct mlx5_ifc_destroy_flow_table_out_
  
  struct mlx5_ifc_destroy_flow_table_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_4[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x140];
 +	u8         reserved_5[0x140];
  };
  
  struct mlx5_ifc_destroy_flow_group_out_bits {
@@@ -5135,17 -5231,21 +5220,25 @@@
  
  struct mlx5_ifc_destroy_flow_group_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_4[0x8];
  	u8         table_id[0x18];
  
  	u8         group_id[0x20];
@@@ -5276,20 -5376,24 +5369,28 @@@ struct mlx5_ifc_delete_fte_out_bits 
  
  struct mlx5_ifc_delete_fte_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_4[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x40];
 +	u8         reserved_5[0x40];
  
  	u8         flow_index[0x20];
  
@@@ -5722,28 -5826,32 +5823,36 @@@ struct mlx5_ifc_create_flow_table_out_b
  
  struct mlx5_ifc_create_flow_table_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x20];
 +	u8         reserved_4[0x20];
  
 -	u8         reserved_at_c0[0x4];
 +	u8         reserved_5[0x4];
  	u8         table_miss_mode[0x4];
  	u8         level[0x8];
 -	u8         reserved_at_d0[0x8];
 +	u8         reserved_6[0x8];
  	u8         log_size[0x8];
  
 -	u8         reserved_at_e0[0x8];
 +	u8         reserved_7[0x8];
  	u8         table_miss_id[0x18];
  
 -	u8         reserved_at_100[0x100];
 +	u8         reserved_8[0x100];
  };
  
  struct mlx5_ifc_create_flow_group_out_bits {
@@@ -5766,20 -5874,24 +5875,28 @@@ enum 
  
  struct mlx5_ifc_create_flow_group_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_4[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x20];
 +	u8         reserved_5[0x20];
  
  	u8         start_flow_index[0x20];
  
@@@ -6301,14 -6413,25 +6418,25 @@@ struct mlx5_ifc_ptys_reg_bits 
  
  	u8         eth_proto_lp_advertise[0x20];
  
 -	u8         reserved_at_1a0[0x60];
 +	u8         reserved_6[0x60];
  };
  
+ struct mlx5_ifc_mlcr_reg_bits {
+ 	u8         reserved_at_0[0x8];
+ 	u8         local_port[0x8];
+ 	u8         reserved_at_10[0x20];
+ 
+ 	u8         beacon_duration[0x10];
+ 	u8         reserved_at_40[0x10];
+ 
+ 	u8         beacon_remain[0x10];
+ };
+ 
  struct mlx5_ifc_ptas_reg_bits {
 -	u8         reserved_at_0[0x20];
 +	u8         reserved_0[0x20];
  
  	u8         algorithm_options[0x10];
 -	u8         reserved_at_30[0x4];
 +	u8         reserved_1[0x4];
  	u8         repetitions_mode[0x4];
  	u8         num_of_repetitions[0x8];
  
@@@ -6713,12 -6836,22 +6841,22 @@@ struct mlx5_ifc_pamp_reg_bits 
  	u8         index_data[18][0x10];
  };
  
+ struct mlx5_ifc_pcmr_reg_bits {
+ 	u8         reserved_at_0[0x8];
+ 	u8         local_port[0x8];
+ 	u8         reserved_at_10[0x2e];
+ 	u8         fcs_cap[0x1];
+ 	u8         reserved_at_3f[0x1f];
+ 	u8         fcs_chk[0x1];
+ 	u8         reserved_at_5f[0x1];
+ };
+ 
  struct mlx5_ifc_lane_2_module_mapping_bits {
 -	u8         reserved_at_0[0x6];
 +	u8         reserved_0[0x6];
  	u8         rx_lane[0x2];
 -	u8         reserved_at_8[0x6];
 +	u8         reserved_1[0x6];
  	u8         tx_lane[0x2];
 -	u8         reserved_at_10[0x8];
 +	u8         reserved_2[0x8];
  	u8         module[0x8];
  };
  
@@@ -7029,20 -7211,24 +7168,28 @@@ struct mlx5_ifc_set_flow_table_root_out
  
  struct mlx5_ifc_set_flow_table_root_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x40];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_3[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_4[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x140];
 +	u8         reserved_5[0x140];
  };
  
  enum {
@@@ -7060,30 -7246,107 +7207,66 @@@ struct mlx5_ifc_modify_flow_table_out_b
  
  struct mlx5_ifc_modify_flow_table_in_bits {
  	u8         opcode[0x10];
 -	u8         reserved_at_10[0x10];
 +	u8         reserved_0[0x10];
  
 -	u8         reserved_at_20[0x10];
 +	u8         reserved_1[0x10];
  	u8         op_mod[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_2[0x20];
++=======
+ 	u8         other_vport[0x1];
+ 	u8         reserved_at_41[0xf];
+ 	u8         vport_number[0x10];
++>>>>>>> 7d5e14237a55 (net/mlx5: Update mlx5_ifc hardware features)
  
 -	u8         reserved_at_60[0x10];
 +	u8         reserved_3[0x10];
  	u8         modify_field_select[0x10];
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_4[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_5[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x4];
 +	u8         reserved_6[0x4];
  	u8         table_miss_mode[0x4];
 -	u8         reserved_at_c8[0x18];
 +	u8         reserved_7[0x18];
  
 -	u8         reserved_at_e0[0x8];
 +	u8         reserved_8[0x8];
  	u8         table_miss_id[0x18];
  
 -	u8         reserved_at_100[0x100];
 -};
 -
 -struct mlx5_ifc_ets_tcn_config_reg_bits {
 -	u8         g[0x1];
 -	u8         b[0x1];
 -	u8         r[0x1];
 -	u8         reserved_at_3[0x9];
 -	u8         group[0x4];
 -	u8         reserved_at_10[0x9];
 -	u8         bw_allocation[0x7];
 -
 -	u8         reserved_at_20[0xc];
 -	u8         max_bw_units[0x4];
 -	u8         reserved_at_30[0x8];
 -	u8         max_bw_value[0x8];
 -};
 -
 -struct mlx5_ifc_ets_global_config_reg_bits {
 -	u8         reserved_at_0[0x2];
 -	u8         r[0x1];
 -	u8         reserved_at_3[0x1d];
 -
 -	u8         reserved_at_20[0xc];
 -	u8         max_bw_units[0x4];
 -	u8         reserved_at_30[0x8];
 -	u8         max_bw_value[0x8];
 -};
 -
 -struct mlx5_ifc_qetc_reg_bits {
 -	u8                                         reserved_at_0[0x8];
 -	u8                                         port_number[0x8];
 -	u8                                         reserved_at_10[0x30];
 -
 -	struct mlx5_ifc_ets_tcn_config_reg_bits    tc_configuration[0x8];
 -	struct mlx5_ifc_ets_global_config_reg_bits global_configuration;
 -};
 -
 -struct mlx5_ifc_qtct_reg_bits {
 -	u8         reserved_at_0[0x8];
 -	u8         port_number[0x8];
 -	u8         reserved_at_10[0xd];
 -	u8         prio[0x3];
 -
 -	u8         reserved_at_20[0x1d];
 -	u8         tclass[0x3];
 +	u8         reserved_9[0x100];
  };
  
+ struct mlx5_ifc_mcia_reg_bits {
+ 	u8         l[0x1];
+ 	u8         reserved_at_1[0x7];
+ 	u8         module[0x8];
+ 	u8         reserved_at_10[0x8];
+ 	u8         status[0x8];
+ 
+ 	u8         i2c_device_address[0x8];
+ 	u8         page_number[0x8];
+ 	u8         device_address[0x10];
+ 
+ 	u8         reserved_at_40[0x10];
+ 	u8         size[0x10];
+ 
+ 	u8         reserved_at_60[0x20];
+ 
+ 	u8         dword_0[0x20];
+ 	u8         dword_1[0x20];
+ 	u8         dword_2[0x20];
+ 	u8         dword_3[0x20];
+ 	u8         dword_4[0x20];
+ 	u8         dword_5[0x20];
+ 	u8         dword_6[0x20];
+ 	u8         dword_7[0x20];
+ 	u8         dword_8[0x20];
+ 	u8         dword_9[0x20];
+ 	u8         dword_10[0x20];
+ 	u8         dword_11[0x20];
+ };
+ 
  #endif /* MLX5_IFC_H */
* Unmerged path include/linux/mlx5/mlx5_ifc.h
