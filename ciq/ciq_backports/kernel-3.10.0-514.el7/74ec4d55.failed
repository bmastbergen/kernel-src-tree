netfilter: fix xt_TEE and xt_TPROXY dependencies

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit 74ec4d55c4d243330d93fc52e23e37d2e76548ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/74ec4d55.failed

Kconfig is too smart for its own good: a Kconfig line that states

	select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES

means that if IP6_NF_IPTABLES is set to 'm', then NF_DEFRAG_IPV6 will
also be set to 'm', regardless of the state of the symbol from which
it is selected. When the xt_TEE driver is built-in and nothing else
forces NF_DEFRAG_IPV6 to be built-in, this causes a link-time error:

net/built-in.o: In function `tee_tg6':
net/netfilter/xt_TEE.c:46: undefined reference to `nf_dup_ipv6'

This works around that behavior by changing the dependency to
'if IP6_NF_IPTABLES != n', which is interpreted as boolean expression
rather than a tristate and causes the NF_DEFRAG_IPV6 symbol to
be built-in as well.

The bug only occurs once in thousands of 'randconfig' builds and
does not really impact real users. From inspecting the other
surrounding Kconfig symbols, I am guessing that NETFILTER_XT_TARGET_TPROXY
and NETFILTER_XT_MATCH_SOCKET have the same issue. If not, this
change should still be harmless.

	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 74ec4d55c4d243330d93fc52e23e37d2e76548ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/Kconfig
diff --cc net/netfilter/Kconfig
index 5b77f171d80e,4692782b5280..000000000000
--- a/net/netfilter/Kconfig
+++ b/net/netfilter/Kconfig
@@@ -863,8 -866,10 +863,13 @@@ config NETFILTER_XT_TARGET_REDIREC
  config NETFILTER_XT_TARGET_TEE
  	tristate '"TEE" - packet cloning to alternate destination'
  	depends on NETFILTER_ADVANCED
 -	depends on IPV6 || IPV6=n
 +	depends on (IPV6 || IPV6=n)
  	depends on !NF_CONNTRACK || NF_CONNTRACK
++<<<<<<< HEAD
++=======
+ 	select NF_DUP_IPV4
+ 	select NF_DUP_IPV6 if IP6_NF_IPTABLES != n
++>>>>>>> 74ec4d55c4d2 (netfilter: fix xt_TEE and xt_TPROXY dependencies)
  	---help---
  	This option adds a "TEE" target with which a packet can be cloned and
  	this clone be rerouted to another nexthop.
@@@ -873,9 -878,11 +878,9 @@@ config NETFILTER_XT_TARGET_TPROX
  	tristate '"TPROXY" target transparent proxying support'
  	depends on NETFILTER_XTABLES
  	depends on NETFILTER_ADVANCED
 -	depends on IPV6 || IPV6=n
 -	depends on IP6_NF_IPTABLES || IP6_NF_IPTABLES=n
  	depends on IP_NF_MANGLE
  	select NF_DEFRAG_IPV4
- 	select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES
+ 	select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES != n
  	help
  	  This option adds a `TPROXY' target, which is somewhat similar to
  	  REDIRECT.  It can only be used in the mangle table and is useful
@@@ -1346,9 -1372,10 +1351,9 @@@ config NETFILTER_XT_MATCH_SOCKE
  	depends on NETFILTER_XTABLES
  	depends on NETFILTER_ADVANCED
  	depends on !NF_CONNTRACK || NF_CONNTRACK
 -	depends on IPV6 || IPV6=n
 -	depends on IP6_NF_IPTABLES || IP6_NF_IPTABLES=n
 +	depends on (IPV6 || IPV6=n)
  	select NF_DEFRAG_IPV4
- 	select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES
+ 	select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES != n
  	help
  	  This option adds a `socket' match, which can be used to match
  	  packets for which a TCP or UDP socket lookup finds a valid socket.
* Unmerged path net/netfilter/Kconfig
