megaraid_sas: IO throttling support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sumit Saxena <sumit.saxena@avagotech.com>
commit 52b62ac7c66e1a11eb8b3e3b0212847749af3b2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/52b62ac7.failed

This patch will add capability in driver to tell firmware that it can
throttle IOs in case controller's queue depth is downgraded post OFU
(online firmware upgrade). This feature will ensure firmware can be
downgraded from higher queue depth to lower queue depth without needing
system reboot. Added throttling code in IO path of driver, in case OS
tries to send more IOs than post OFU firmware's queue depth.

	Signed-off-by: Sumit Saxena <sumit.saxena@avagotech.com>
	Signed-off-by: Kashyap Desai <kashyap.desai@avagotech.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 52b62ac7c66e1a11eb8b3e3b0212847749af3b2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas.h
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
diff --cc drivers/scsi/megaraid/megaraid_sas.h
index d4c399b43165,c8d25a739d38..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas.h
+++ b/drivers/scsi/megaraid/megaraid_sas.h
@@@ -1266,7 -1537,10 +1266,14 @@@ union megasas_sgl_frame 
  typedef union _MFI_CAPABILITIES {
  	struct {
  #if   defined(__BIG_ENDIAN_BITFIELD)
++<<<<<<< HEAD
 +		u32     reserved:23;
++=======
+ 		u32     reserved:20;
+ 		u32     support_qd_throttling:1;
+ 		u32     support_fp_rlbypass:1;
+ 		u32     support_vfid_in_ioframe:1;
++>>>>>>> 52b62ac7c66e (megaraid_sas: IO throttling support)
  		u32     support_ext_io_size:1;
  		u32	support_ext_queue_depth:1;
  		u32     security_protocol_cmds_fw:1;
@@@ -1286,7 -1560,10 +1293,14 @@@
  		u32     security_protocol_cmds_fw:1;
  		u32	support_ext_queue_depth:1;
  		u32     support_ext_io_size:1;
++<<<<<<< HEAD
 +		u32     reserved:23;
++=======
+ 		u32     support_vfid_in_ioframe:1;
+ 		u32     support_fp_rlbypass:1;
+ 		u32     support_qd_throttling:1;
+ 		u32     reserved:20;
++>>>>>>> 52b62ac7c66e (megaraid_sas: IO throttling support)
  #endif
  	} mfi_capabilities;
  	__le32		reg;
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index a09ae37a613c,2c4912f68225..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -668,6 -799,11 +668,14 @@@ megasas_ioc_init_fusion(struct megasas_
  	if (instance->max_chain_frame_sz > MEGASAS_CHAIN_FRAME_SZ_MIN)
  		drv_ops->mfi_capabilities.support_ext_io_size = 1;
  
++<<<<<<< HEAD
++=======
+ 	drv_ops->mfi_capabilities.support_fp_rlbypass = 1;
+ 	if (!dual_qdepth_disable)
+ 		drv_ops->mfi_capabilities.support_ext_queue_depth = 1;
+ 
+ 	drv_ops->mfi_capabilities.support_qd_throttling = 1;
++>>>>>>> 52b62ac7c66e (megaraid_sas: IO throttling support)
  	/* Convert capability to LE32 */
  	cpu_to_le32s((u32 *)&init_frame->driver_operations.mfi_capabilities);
  
* Unmerged path drivers/scsi/megaraid/megaraid_sas.h
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
