sched: Disallow sched_attr::sched_policy < 0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit dbdb22754fde671dc93d2fae06f8be113d47f2fb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/dbdb2275.failed

The scheduler uses policy=-1 to preserve the current policy state to
implement sys_sched_setparam(), this got exposed to userspace by
accident through sys_sched_setattr(), cure this.

	Reported-by: Michael Kerrisk <mtk.manpages@gmail.com>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Acked-by: Michael Kerrisk <mtk.manpages@gmail.com>
	Cc: <stable@vger.kernel.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: http://lkml.kernel.org/r/20140509085311.GJ30445@twins.programming.kicks-ass.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit dbdb22754fde671dc93d2fae06f8be113d47f2fb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/core.c
diff --cc kernel/sched/core.c
index 8f3f375de9d1,cdefcf7c5925..000000000000
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@@ -4366,6 -3643,39 +4366,42 @@@ SYSCALL_DEFINE2(sched_setparam, pid_t, 
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * sys_sched_setattr - same as above, but with extended sched_attr
+  * @pid: the pid in question.
+  * @uattr: structure containing the extended parameters.
+  * @flags: for future extension.
+  */
+ SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
+ 			       unsigned int, flags)
+ {
+ 	struct sched_attr attr;
+ 	struct task_struct *p;
+ 	int retval;
+ 
+ 	if (!uattr || pid < 0 || flags)
+ 		return -EINVAL;
+ 
+ 	retval = sched_copy_attr(uattr, &attr);
+ 	if (retval)
+ 		return retval;
+ 
+ 	if (attr.sched_policy < 0)
+ 		return -EINVAL;
+ 
+ 	rcu_read_lock();
+ 	retval = -ESRCH;
+ 	p = find_process_by_pid(pid);
+ 	if (p != NULL)
+ 		retval = sched_setattr(p, &attr);
+ 	rcu_read_unlock();
+ 
+ 	return retval;
+ }
+ 
+ /**
++>>>>>>> dbdb22754fde (sched: Disallow sched_attr::sched_policy < 0)
   * sys_sched_getscheduler - get the policy (scheduling class) of a thread
   * @pid: the pid in question.
   *
* Unmerged path kernel/sched/core.c
