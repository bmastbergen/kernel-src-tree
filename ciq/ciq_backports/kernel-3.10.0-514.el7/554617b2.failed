target/user: Return an error if cmd data size is too large

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andy Grover <agrover@redhat.com>
commit 554617b2bbe25c3fb3c80c28fe7a465884bb40b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/554617b2.failed

Userspace should be implementing VPD B0 (Block Limits) to inform the
initiator of max data size, but just in case we do get a too-large request,
do what the spec says and return INVALID_CDB_FIELD.

Make sure to unlock udev->cmdr_lock before returning.

	Signed-off-by: Andy Grover <agrover@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Mike Christie <mchristi@redhat.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 554617b2bbe25c3fb3c80c28fe7a465884bb40b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_user.c
diff --cc drivers/target/target_core_user.c
index 1a1bcf71ec9d,5de1eac17fed..000000000000
--- a/drivers/target/target_core_user.c
+++ b/drivers/target/target_core_user.c
@@@ -311,13 -428,21 +311,28 @@@ static int tcmu_queue_cmd_ring(struct t
  
  	mb = udev->mb_addr;
  	cmd_head = mb->cmd_head % udev->cmdr_size; /* UAM */
++<<<<<<< HEAD
 +	if ((command_size > (udev->cmdr_size / 2))
 +	    || tcmu_cmd->data_length > (udev->data_size - 1))
 +		pr_warn("TCMU: Request of size %zu/%zu may be too big for %u/%zu "
 +			"cmd/data ring buffers\n", command_size, tcmu_cmd->data_length,
++=======
+ 	data_length = se_cmd->data_length;
+ 	if (se_cmd->se_cmd_flags & SCF_BIDI) {
+ 		BUG_ON(!(se_cmd->t_bidi_data_sg && se_cmd->t_bidi_data_nents));
+ 		data_length += se_cmd->t_bidi_data_sg->length;
+ 	}
+ 	if ((command_size > (udev->cmdr_size / 2)) ||
+ 	    data_length > udev->data_size) {
+ 		pr_warn("TCMU: Request of size %zu/%zu is too big for %u/%zu "
+ 			"cmd/data ring buffers\n", command_size, data_length,
++>>>>>>> 554617b2bbe2 (target/user: Return an error if cmd data size is too large)
  			udev->cmdr_size, udev->data_size);
+ 		spin_unlock_irq(&udev->cmdr_lock);
+ 		return TCM_INVALID_CDB_FIELD;
+ 	}
  
 -	while (!is_ring_space_avail(udev, command_size, data_length)) {
 +	while (!is_ring_space_avail(udev, command_size, tcmu_cmd->data_length)) {
  		int ret;
  		DEFINE_WAIT(__wait);
  
* Unmerged path drivers/target/target_core_user.c
