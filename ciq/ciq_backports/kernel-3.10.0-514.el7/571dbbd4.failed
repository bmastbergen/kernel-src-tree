iommu/vt-d: Don't disable IR when it was previously enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] vt-d: Don't disable IR when it was previously enabled (Myron Stowe) [1050021]
Rebuild_FUZZ: 94.64%
commit-author Joerg Roedel <jroedel@suse.de>
commit 571dbbd4d044e11c78bc077acb3ccef4c77b096e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/571dbbd4.failed

Keep it enabled in kdump kernel to guarantee interrupt
delivery.

	Tested-by: ZhenHua Li <zhen-hual@hp.com>
	Tested-by: Baoquan He <bhe@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 571dbbd4d044e11c78bc077acb3ccef4c77b096e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel_irq_remapping.c
diff --cc drivers/iommu/intel_irq_remapping.c
index 085a116a8b0a,47fcebf39e9e..000000000000
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@@ -615,10 -728,34 +615,38 @@@ static int __init intel_prepare_irq_rem
  		if (!ecap_ir_support(iommu->ecap))
  			goto error;
  
++<<<<<<< HEAD
 +	/* Do the allocations early */
 +	for_each_iommu(iommu, drhd)
 +		if (intel_setup_irq_remapping(iommu))
++=======
+ 	/* Detect remapping mode: lapic or x2apic */
+ 	if (x2apic_supported()) {
+ 		eim = !dmar_x2apic_optout();
+ 		if (!eim) {
+ 			pr_info("x2apic is disabled because BIOS sets x2apic opt out bit.");
+ 			pr_info("Use 'intremap=no_x2apic_optout' to override the BIOS setting.\n");
+ 		}
+ 	}
+ 
+ 	for_each_iommu(iommu, drhd) {
+ 		if (eim && !ecap_eim_support(iommu->ecap)) {
+ 			pr_info("%s does not support EIM\n", iommu->name);
+ 			eim = 0;
+ 		}
+ 	}
+ 
+ 	eim_mode = eim;
+ 	if (eim)
+ 		pr_info("Queued invalidation will be enabled to support x2apic and Intr-remapping.\n");
+ 
+ 	/* Do the initializations early */
+ 	for_each_iommu(iommu, drhd) {
+ 		if (intel_setup_irq_remapping(iommu)) {
+ 			pr_err("Failed to setup irq remapping for %s\n",
+ 			       iommu->name);
++>>>>>>> 571dbbd4d044 (iommu/vt-d: Don't disable IR when it was previously enabled)
  			goto error;
 -		}
 -	}
  
  	return 0;
  
@@@ -693,7 -774,8 +721,12 @@@ static int __init intel_enable_irq_rema
  	 * Setup Interrupt-remapping for all the DRHD's now.
  	 */
  	for_each_iommu(iommu, drhd) {
++<<<<<<< HEAD
 +		iommu_set_irq_remapping(iommu, eim);
++=======
+ 		if (!ir_pre_enabled(iommu))
+ 			iommu_enable_irq_remapping(iommu);
++>>>>>>> 571dbbd4d044 (iommu/vt-d: Don't disable IR when it was previously enabled)
  		setup = true;
  	}
  
* Unmerged path drivers/iommu/intel_irq_remapping.c
