Add way to query server fs info for smb3

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Steve French <steve.french@primarydata.com>
commit 0de1f4c6f6c028249579d8d80fa0a4f6322b2227
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0de1f4c6.failed

The server exports information about the share and underlying
device under an SMB3 export, including its attributes and
capabilities, which is stored by cifs.ko when first connecting
to the share.

Add ioctl to cifs.ko to allow user space smb3 helper utilities
(in cifs-utils) to display this (e.g. via smb3util).

This information is also useful for debugging and for
resolving configuration errors.

	Signed-off-by: Steve French <steve.french@primarydata.com>
(cherry picked from commit 0de1f4c6f6c028249579d8d80fa0a4f6322b2227)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/ioctl.c
diff --cc fs/cifs/ioctl.c
index 64a9bca976d0,c63f5227b681..000000000000
--- a/fs/cifs/ioctl.c
+++ b/fs/cifs/ioctl.c
@@@ -31,12 -31,12 +31,18 @@@
  #include "cifsproto.h"
  #include "cifs_debug.h"
  #include "cifsfs.h"
++<<<<<<< HEAD
 +
 +#define CIFS_IOCTL_MAGIC	0xCF
 +#define CIFS_IOC_COPYCHUNK_FILE	_IOW(CIFS_IOCTL_MAGIC, 3, int)
 +
++=======
+ #include "cifs_ioctl.h"
+ #include <linux/btrfs.h>
+ 
++>>>>>>> 0de1f4c6f6c0 (Add way to query server fs info for smb3)
  static long cifs_ioctl_clone(unsigned int xid, struct file *dst_file,
 -			unsigned long srcfd, u64 off, u64 len, u64 destoff,
 -			bool dup_extents)
 +			unsigned long srcfd, u64 off, u64 len, u64 destoff)
  {
  	int rc;
  	struct cifsFileInfo *smb_file_target = dst_file->private_data;
@@@ -211,8 -245,25 +252,12 @@@ long cifs_ioctl(struct file *filep, uns
  			}
  			break;
  		case CIFS_IOC_COPYCHUNK_FILE:
 -			rc = cifs_ioctl_clone(xid, filep, arg, 0, 0, 0, false);
 -			break;
 -		case BTRFS_IOC_CLONE:
 -			rc = cifs_ioctl_clone(xid, filep, arg, 0, 0, 0, true);
 -			break;
 -		case CIFS_IOC_SET_INTEGRITY:
 -			if (pSMBFile == NULL)
 -				break;
 -			tcon = tlink_tcon(pSMBFile->tlink);
 -			if (tcon->ses->server->ops->set_integrity)
 -				rc = tcon->ses->server->ops->set_integrity(xid,
 -						tcon, pSMBFile);
 -			else
 -				rc = -EOPNOTSUPP;
 +			rc = cifs_ioctl_clone(xid, filep, arg, 0, 0, 0);
  			break;
+ 		case CIFS_IOC_GET_MNT_INFO:
+ 			tcon = tlink_tcon(pSMBFile->tlink);
+ 			rc = smb_mnt_get_fsinfo(xid, tcon, (void __user *)arg);
+ 			break;
  		default:
  			cifs_dbg(FYI, "unsupported ioctl\n");
  			break;
diff --git a/fs/cifs/cifs_ioctl.h b/fs/cifs/cifs_ioctl.h
new file mode 100644
index 000000000000..0065256881d8
--- /dev/null
+++ b/fs/cifs/cifs_ioctl.h
@@ -0,0 +1,42 @@
+/*
+ *   fs/cifs/cifs_ioctl.h
+ *
+ *   Structure definitions for io control for cifs/smb3
+ *
+ *   Copyright (c) 2015 Steve French <steve.french@primarydata.com>
+ *
+ *   This library is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU Lesser General Public License as published
+ *   by the Free Software Foundation; either version 2.1 of the License, or
+ *   (at your option) any later version.
+ *
+ *   This library is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+ *   the GNU Lesser General Public License for more details.
+ *
+ */
+
+struct smb_mnt_fs_info {
+	__u32	version; /* 0001 */
+	__u16	protocol_id;
+	__u16	tcon_flags;
+	__u32	vol_serial_number;
+	__u32	vol_create_time;
+	__u32	share_caps;
+	__u32	share_flags;
+	__u32	sector_flags;
+	__u32	optimal_sector_size;
+	__u32	max_bytes_chunk;
+	__u32	fs_attributes;
+	__u32	max_path_component;
+	__u32	device_type;
+	__u32	device_characteristics;
+	__u32	maximal_access;
+	__u64   cifs_posix_caps;
+} __packed;
+
+#define CIFS_IOCTL_MAGIC	0xCF
+#define CIFS_IOC_COPYCHUNK_FILE	_IOW(CIFS_IOCTL_MAGIC, 3, int)
+#define CIFS_IOC_SET_INTEGRITY  _IO(CIFS_IOCTL_MAGIC, 4)
+#define CIFS_IOC_GET_MNT_INFO _IOR(CIFS_IOCTL_MAGIC, 5, struct smb_mnt_fs_info)
diff --git a/fs/cifs/cifspdu.h b/fs/cifs/cifspdu.h
index f0e4f7a9d2a7..34796442d8cc 100644
--- a/fs/cifs/cifspdu.h
+++ b/fs/cifs/cifspdu.h
@@ -2245,6 +2245,20 @@ typedef struct {
 #define FILE_DEVICE_VIRTUAL_DISK        0x00000024
 #define FILE_DEVICE_NETWORK_REDIRECTOR  0x00000028
 
+/* Device Characteristics */
+#define FILE_REMOVABLE_MEDIA			0x00000001
+#define FILE_READ_ONLY_DEVICE			0x00000002
+#define FILE_FLOPPY_DISKETTE			0x00000004
+#define FILE_WRITE_ONCE_MEDIA			0x00000008
+#define FILE_REMOTE_DEVICE			0x00000010
+#define FILE_DEVICE_IS_MOUNTED			0x00000020
+#define FILE_VIRTUAL_VOLUME			0x00000040
+#define FILE_DEVICE_SECURE_OPEN			0x00000100
+#define FILE_CHARACTERISTIC_TS_DEVICE		0x00001000
+#define FILE_CHARACTERISTIC_WEBDAV_DEVICE	0x00002000
+#define FILE_PORTABLE_DEVICE			0x00004000
+#define FILE_DEVICE_ALLOW_APPCONTAINER_TRAVERSAL 0x00020000
+
 typedef struct {
 	__le32 DeviceType;
 	__le32 DeviceCharacteristics;
* Unmerged path fs/cifs/ioctl.c
