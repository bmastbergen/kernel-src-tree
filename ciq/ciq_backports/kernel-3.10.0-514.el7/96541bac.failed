Revert "mmc: core: Convert mmc_driver to device_driver"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit 96541bac0b4e62efa42e7900d9b32e6baa9a214c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/96541bac.failed

This reverts commit 6685ac62b2f0 ("mmc: core: Convert mmc_driver to
device_driver")

The reverted commit went too far in simplifing the device driver parts
for mmc.

Let's restore the old mmc_driver to enable driver core to sooner
or later to remove the ->probe(), ->remove() and ->shutdown() callbacks
from the struct device_driver.

Note that, the old ->suspend|resume() callbacks in the struct
mmc_driver don't need to be restored, since the mmc block layer has
converted to the modern system PM ops.

Fixes: 6685ac62b2f0 ("mmc: core: Convert mmc_driver to device_driver")
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
	Acked-by: Jaehoon Chung <jh80.chung@samsung.com>
(cherry picked from commit 96541bac0b4e62efa42e7900d9b32e6baa9a214c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/card/block.c
#	drivers/mmc/core/bus.c
#	include/linux/mmc/card.h
diff --cc drivers/mmc/card/block.c
index b0824eca2773,2c25271f8c41..000000000000
--- a/drivers/mmc/card/block.c
+++ b/drivers/mmc/card/block.c
@@@ -2443,7 -2444,7 +2443,11 @@@ static int mmc_blk_probe(struct mmc_car
  	if (mmc_blk_alloc_parts(card, md))
  		goto out;
  
++<<<<<<< HEAD
 +	mmc_set_drvdata(card, md);
++=======
+ 	dev_set_drvdata(&card->dev, md);
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  
  	if (mmc_add_disk(md))
  		goto out;
@@@ -2475,7 -2476,7 +2479,11 @@@
  
  static void mmc_blk_remove(struct mmc_card *card)
  {
++<<<<<<< HEAD
 +	struct mmc_blk_data *md = mmc_get_drvdata(card);
++=======
+ 	struct mmc_blk_data *md = dev_get_drvdata(&card->dev);
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  
  	mmc_blk_remove_parts(card, md);
  	pm_runtime_get_sync(&card->dev);
@@@ -2486,13 -2487,13 +2494,21 @@@
  		pm_runtime_disable(&card->dev);
  	pm_runtime_put_noidle(&card->dev);
  	mmc_blk_remove_req(md);
++<<<<<<< HEAD
 +	mmc_set_drvdata(card, NULL);
++=======
+ 	dev_set_drvdata(&card->dev, NULL);
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  }
  
  static int _mmc_blk_suspend(struct mmc_card *card)
  {
  	struct mmc_blk_data *part_md;
++<<<<<<< HEAD
 +	struct mmc_blk_data *md = mmc_get_drvdata(card);
++=======
+ 	struct mmc_blk_data *md = dev_get_drvdata(&card->dev);
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  
  	if (md) {
  		mmc_queue_suspend(&md->queue);
@@@ -2512,6 -2513,7 +2528,10 @@@ static void mmc_blk_shutdown(struct mmc
  static int mmc_blk_suspend(struct device *dev)
  {
  	struct mmc_card *card = mmc_dev_to_card(dev);
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  	return _mmc_blk_suspend(card);
  }
  
diff --cc drivers/mmc/core/bus.c
index 052c2b79b1b4,972ff844cf5a..000000000000
--- a/drivers/mmc/core/bus.c
+++ b/drivers/mmc/core/bus.c
@@@ -28,7 -28,7 +28,11 @@@
  
  #define to_mmc_driver(d)	container_of(d, struct mmc_driver, drv)
  
++<<<<<<< HEAD
 +static ssize_t mmc_type_show(struct device *dev,
++=======
+ static ssize_t type_show(struct device *dev,
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  	struct device_attribute *attr, char *buf)
  {
  	struct mmc_card *card = mmc_dev_to_card(dev);
diff --cc include/linux/mmc/card.h
index e849091ca5d8,19f0175c0afa..000000000000
--- a/include/linux/mmc/card.h
+++ b/include/linux/mmc/card.h
@@@ -518,10 -512,6 +518,13 @@@ static inline int mmc_card_broken_irq_p
  
  #define mmc_dev_to_card(d)	container_of(d, struct mmc_card, dev)
  
++<<<<<<< HEAD
 +#define mmc_list_to_card(l)	container_of(l, struct mmc_card, node)
 +#define mmc_get_drvdata(c)	dev_get_drvdata(&(c)->dev)
 +#define mmc_set_drvdata(c,d)	dev_set_drvdata(&(c)->dev, d)
 +
++=======
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  /*
   * MMC device driver (e.g., Flash card, I/O card...)
   */
@@@ -529,8 -519,6 +532,11 @@@ struct mmc_driver 
  	struct device_driver drv;
  	int (*probe)(struct mmc_card *);
  	void (*remove)(struct mmc_card *);
++<<<<<<< HEAD
 +	int (*suspend)(struct mmc_card *);
 +	int (*resume)(struct mmc_card *);
++=======
++>>>>>>> 96541bac0b4e (Revert "mmc: core: Convert mmc_driver to device_driver")
  	void (*shutdown)(struct mmc_card *);
  };
  
* Unmerged path drivers/mmc/card/block.c
* Unmerged path drivers/mmc/core/bus.c
* Unmerged path include/linux/mmc/card.h
