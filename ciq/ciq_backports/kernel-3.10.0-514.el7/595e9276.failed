HID: do not init input reports for Win 8 multitouch devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hid] do not init input reports for Win 8 multitouch devices (Benjamin Tissoires) [1311883]
Rebuild_FUZZ: 95.58%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit 595e9276ce68791317484ec7f0f9f2e0457c3b34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/595e9276.failed

Some multitouch screens do not like to be polled for input reports.
However, the Win8 spec says that all touches should be sent during
each report, making the initialization of reports unnecessary.
The Win7 spec is less precise, so do not use this for those devices.

Add the quirk HID_QUIRK_NO_INIT_INPUT_REPORTS so that we do not have to
introduce a quirk for each problematic device. This quirk makes the driver
behave the same way the Win 8 does. It actually retrieves the features,
but not the inputs.

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Reviewed-by: Henrik Rydberg <rydberg@euromail.se>
	Tested-by: Srinivas Pandruvada<srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 595e9276ce68791317484ec7f0f9f2e0457c3b34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/hid.h
diff --cc include/linux/hid.h
index 2705057dad99,bc132d2a20aa..000000000000
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@@ -283,7 -283,7 +283,11 @@@ struct hid_item 
  #define HID_QUIRK_MULTI_INPUT			0x00000040
  #define HID_QUIRK_HIDINPUT_FORCE		0x00000080
  #define HID_QUIRK_NO_EMPTY_INPUT		0x00000100
++<<<<<<< HEAD
 +#define HID_QUIRK_ALWAYS_POLL			0x00000400
++=======
+ #define HID_QUIRK_NO_INIT_INPUT_REPORTS		0x00000200
++>>>>>>> 595e9276ce68 (HID: do not init input reports for Win 8 multitouch devices)
  #define HID_QUIRK_SKIP_OUTPUT_REPORTS		0x00010000
  #define HID_QUIRK_FULLSPEED_INTERVAL		0x10000000
  #define HID_QUIRK_NO_INIT_REPORTS		0x20000000
diff --git a/drivers/hid/hid-multitouch.c b/drivers/hid/hid-multitouch.c
index 31b9ee991944..5ea10cc257a9 100644
--- a/drivers/hid/hid-multitouch.c
+++ b/drivers/hid/hid-multitouch.c
@@ -960,6 +960,18 @@ static int mt_probe(struct hid_device *hdev, const struct hid_device_id *id)
 	hdev->quirks |= HID_QUIRK_MULTI_INPUT;
 	hdev->quirks |= HID_QUIRK_NO_EMPTY_INPUT;
 
+	/*
+	 * Handle special quirks for Windows 8 certified devices.
+	 */
+	if (id->group == HID_GROUP_MULTITOUCH_WIN_8)
+		/*
+		 * Some multitouch screens do not like to be polled for input
+		 * reports. Fortunately, the Win8 spec says that all touches
+		 * should be sent during each report, making the initialization
+		 * of input reports unnecessary.
+		 */
+		hdev->quirks |= HID_QUIRK_NO_INIT_INPUT_REPORTS;
+
 	td = devm_kzalloc(&hdev->dev, sizeof(struct mt_device), GFP_KERNEL);
 	if (!td) {
 		dev_err(&hdev->dev, "cannot allocate multitouch data\n");
diff --git a/drivers/hid/usbhid/hid-core.c b/drivers/hid/usbhid/hid-core.c
index 9935a6472507..5cbbcc297942 100644
--- a/drivers/hid/usbhid/hid-core.c
+++ b/drivers/hid/usbhid/hid-core.c
@@ -806,12 +806,17 @@ void usbhid_init_reports(struct hid_device *hid)
 {
 	struct hid_report *report;
 	struct usbhid_device *usbhid = hid->driver_data;
+	struct hid_report_enum *report_enum;
 	int err, ret;
 
-	list_for_each_entry(report, &hid->report_enum[HID_INPUT_REPORT].report_list, list)
-		usbhid_submit_report(hid, report, USB_DIR_IN);
+	if (!(hid->quirks & HID_QUIRK_NO_INIT_INPUT_REPORTS)) {
+		report_enum = &hid->report_enum[HID_INPUT_REPORT];
+		list_for_each_entry(report, &report_enum->report_list, list)
+			usbhid_submit_report(hid, report, USB_DIR_IN);
+	}
 
-	list_for_each_entry(report, &hid->report_enum[HID_FEATURE_REPORT].report_list, list)
+	report_enum = &hid->report_enum[HID_FEATURE_REPORT];
+	list_for_each_entry(report, &report_enum->report_list, list)
 		usbhid_submit_report(hid, report, USB_DIR_IN);
 
 	err = 0;
* Unmerged path include/linux/hid.h
