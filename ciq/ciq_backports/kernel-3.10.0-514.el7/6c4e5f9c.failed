Drivers: hv: vmbus:Update preferred vmbus protocol version to windows 10.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hv] vmbus: Update preferred vmbus protocol version to windows 10 (Cathy Avery) [1287037]
Rebuild_FUZZ: 88.72%
commit-author Keith Mange <keith.mange@microsoft.com>
commit 6c4e5f9c9ff41ea997fd0f345b3b2b88c113eb68
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6c4e5f9c.failed

Add support for Windows 10.

	Signed-off-by: Keith Mange <keith.mange@microsoft.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6c4e5f9c9ff41ea997fd0f345b3b2b88c113eb68)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/connection.c
diff --cc drivers/hv/connection.c
index e5f44b40968e,4fc2e8836e60..000000000000
--- a/drivers/hv/connection.c
+++ b/drivers/hv/connection.c
@@@ -80,8 -83,10 +83,15 @@@ static int vmbus_negotiate_version(stru
  	msg->interrupt_page = virt_to_phys(vmbus_connection.int_page);
  	msg->monitor_page1 = virt_to_phys(vmbus_connection.monitor_pages[0]);
  	msg->monitor_page2 = virt_to_phys(vmbus_connection.monitor_pages[1]);
++<<<<<<< HEAD
 +	if (version == VERSION_WIN8_1)
 +		msg->target_vcpu = hv_context.vp_index[smp_processor_id()];
++=======
+ 	if (version >= VERSION_WIN8_1) {
+ 		msg->target_vcpu = hv_context.vp_index[get_cpu()];
+ 		put_cpu();
+ 	}
++>>>>>>> 6c4e5f9c9ff4 (Drivers: hv: vmbus:Update preferred vmbus protocol version to windows 10.)
  
  	/*
  	 * Add to list before we send the request since we may
* Unmerged path drivers/hv/connection.c
diff --git a/include/linux/hyperv.h b/include/linux/hyperv.h
index f949ba4137bb..d132d3d2d79c 100644
--- a/include/linux/hyperv.h
+++ b/include/linux/hyperv.h
@@ -148,16 +148,18 @@ hv_get_ringbuffer_availbytes(struct hv_ring_buffer_info *rbi,
  * 1 . 1  (Windows 7)
  * 2 . 4  (Windows 8)
  * 3 . 0  (Windows 8 R2)
+ * 4 . 0  (Windows 10)
  */
 
 #define VERSION_WS2008  ((0 << 16) | (13))
 #define VERSION_WIN7    ((1 << 16) | (1))
 #define VERSION_WIN8    ((2 << 16) | (4))
 #define VERSION_WIN8_1    ((3 << 16) | (0))
+#define VERSION_WIN10	((4 << 16) | (0))
 
 #define VERSION_INVAL -1
 
-#define VERSION_CURRENT VERSION_WIN8_1
+#define VERSION_CURRENT VERSION_WIN10
 
 /* Make maximum size of pipe payload of 16K */
 #define MAX_PIPE_DATA_PAYLOAD		(sizeof(u8) * 16384)
