xfs: add initial DAX support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit cbe4dab119f211ff6642d617f541087894e99e4f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/cbe4dab1.failed

Add initial DAX support to XFS. To do this we need a new mount
option to turn DAX on filesystem, and we need to propagate this into
the inode flags whenever an inode is instantiated so that the
per-inode checks throughout the code Do The Right Thing.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit cbe4dab119f211ff6642d617f541087894e99e4f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_super.c
diff --cc fs/xfs/xfs_super.c
index 5385dfd365ef,1fb16562c159..000000000000
--- a/fs/xfs/xfs_super.c
+++ b/fs/xfs/xfs_super.c
@@@ -363,18 -365,10 +365,25 @@@ xfs_parseargs
  			mp->m_flags |= XFS_MOUNT_DISCARD;
  		} else if (!strcmp(this_char, MNTOPT_NODISCARD)) {
  			mp->m_flags &= ~XFS_MOUNT_DISCARD;
++<<<<<<< HEAD
 +		} else if (!strcmp(this_char, "ihashsize")) {
 +			xfs_warn(mp,
 +	"ihashsize no longer used, option is deprecated.");
 +		} else if (!strcmp(this_char, "osyncisdsync")) {
 +			xfs_warn(mp,
 +	"osyncisdsync has no effect, option is deprecated.");
 +		} else if (!strcmp(this_char, "osyncisosync")) {
 +			xfs_warn(mp,
 +	"osyncisosync has no effect, option is deprecated.");
 +		} else if (!strcmp(this_char, "irixsgid")) {
 +			xfs_warn(mp,
 +	"irixsgid is now a sysctl(2) variable, option is deprecated.");
++=======
+ #ifdef CONFIG_FS_DAX
+ 		} else if (!strcmp(this_char, MNTOPT_DAX)) {
+ 			mp->m_flags |= XFS_MOUNT_DAX;
+ #endif
++>>>>>>> cbe4dab119f2 (xfs: add initial DAX support)
  		} else {
  			xfs_warn(mp, "unknown mount option [%s].", this_char);
  			return -EINVAL;
diff --git a/fs/xfs/xfs_iops.c b/fs/xfs/xfs_iops.c
index dad796405688..4b58b8857260 100644
--- a/fs/xfs/xfs_iops.c
+++ b/fs/xfs/xfs_iops.c
@@ -1185,22 +1185,22 @@ xfs_diflags_to_iflags(
 	struct inode		*inode,
 	struct xfs_inode	*ip)
 {
-	if (ip->i_d.di_flags & XFS_DIFLAG_IMMUTABLE)
+	uint16_t		flags = ip->i_d.di_flags;
+
+	inode->i_flags &= ~(S_IMMUTABLE | S_APPEND | S_SYNC |
+			    S_NOATIME | S_DAX);
+
+	if (flags & XFS_DIFLAG_IMMUTABLE)
 		inode->i_flags |= S_IMMUTABLE;
-	else
-		inode->i_flags &= ~S_IMMUTABLE;
-	if (ip->i_d.di_flags & XFS_DIFLAG_APPEND)
+	if (flags & XFS_DIFLAG_APPEND)
 		inode->i_flags |= S_APPEND;
-	else
-		inode->i_flags &= ~S_APPEND;
-	if (ip->i_d.di_flags & XFS_DIFLAG_SYNC)
+	if (flags & XFS_DIFLAG_SYNC)
 		inode->i_flags |= S_SYNC;
-	else
-		inode->i_flags &= ~S_SYNC;
-	if (ip->i_d.di_flags & XFS_DIFLAG_NOATIME)
+	if (flags & XFS_DIFLAG_NOATIME)
 		inode->i_flags |= S_NOATIME;
-	else
-		inode->i_flags &= ~S_NOATIME;
+	/* XXX: Also needs an on-disk per inode flag! */
+	if (ip->i_mount->m_flags & XFS_MOUNT_DAX)
+		inode->i_flags |= S_DAX;
 }
 
 /*
diff --git a/fs/xfs/xfs_mount.h b/fs/xfs/xfs_mount.h
index fe5c55265429..6db5fc041d4f 100644
--- a/fs/xfs/xfs_mount.h
+++ b/fs/xfs/xfs_mount.h
@@ -182,6 +182,8 @@ typedef struct xfs_mount {
 						   allocator */
 #define XFS_MOUNT_NOATTR2	(1ULL << 25)	/* disable use of attr2 format */
 
+#define XFS_MOUNT_DAX		(1ULL << 62)	/* TEST ONLY! */
+
 
 /*
  * Default minimum read and write sizes.
* Unmerged path fs/xfs/xfs_super.c
