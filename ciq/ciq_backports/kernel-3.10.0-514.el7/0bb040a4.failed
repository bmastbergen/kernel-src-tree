sched: Fix up attr::sched_priority warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit 0bb040a44381261c0729636abbe03caeedb7d72e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0bb040a4.failed

Fengguang Wu reported the following build warning:

  > kernel/sched/core.c:3067 __sched_setscheduler() warn: unsigned 'attr->sched_priority' is never less than zero.

Since it doesn't make sense for attr::sched_priority to be negative,
remove the check, since we already test for an upper limit any actual
negative values passed in through the old param::sched_priority field
will still be detected.

	Reported-by: Fengguang Wu <fengguang.wu@intel.com>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Juri Lelli <juri.lelli@gmail.com>
	Cc: Dario Faggioli <raistlin@linux.it>
Fixes: d50dde5a10f3 ("sched: Add new scheduler syscalls to support an extended scheduling parameters ABI")
Link: http://lkml.kernel.org/n/tip-fid9nalzii2r5voxtf4eh5kz@git.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 0bb040a44381261c0729636abbe03caeedb7d72e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/core.c
diff --cc kernel/sched/core.c
index f167fdc57a94,5a6ccdf4b39d..000000000000
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@@ -4146,11 -3282,11 +4146,16 @@@ recheck
  	 * 1..MAX_USER_RT_PRIO-1, valid priority for SCHED_NORMAL,
  	 * SCHED_BATCH and SCHED_IDLE is 0.
  	 */
++<<<<<<< HEAD
 +	if (param->sched_priority < 0 ||
 +	    (p->mm && param->sched_priority > MAX_USER_RT_PRIO-1) ||
 +	    (!p->mm && param->sched_priority > MAX_RT_PRIO-1))
++=======
+ 	if ((p->mm && attr->sched_priority > MAX_USER_RT_PRIO-1) ||
+ 	    (!p->mm && attr->sched_priority > MAX_RT_PRIO-1))
++>>>>>>> 0bb040a44381 (sched: Fix up attr::sched_priority warning)
  		return -EINVAL;
 -	if ((dl_policy(policy) && !__checkparam_dl(attr)) ||
 -	    (rt_policy(policy) != (attr->sched_priority != 0)))
 +	if (rt_policy(policy) != (param->sched_priority != 0))
  		return -EINVAL;
  
  	/*
* Unmerged path kernel/sched/core.c
