lwtunnel: fix memory leak

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Benc <jbenc@redhat.com>
commit df383e6240ef222703648072dafd2a1ae21b0d2a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/df383e62.failed

The built lwtunnel_state struct has to be freed after comparison.

Fixes: 571e722676fe3 ("ipv4: support for fib route lwtunnel encap attributes")
	Signed-off-by: Jiri Benc <jbenc@redhat.com>
	Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit df383e6240ef222703648072dafd2a1ae21b0d2a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/lwtunnel.h
#	net/ipv4/fib_semantics.c
diff --cc net/ipv4/fib_semantics.c
index 1938e2490ebe,d5253071f71f..000000000000
--- a/net/ipv4/fib_semantics.c
+++ b/net/ipv4/fib_semantics.c
@@@ -484,8 -533,32 +484,34 @@@ static int fib_get_nhs(struct fib_info 
  
  #endif
  
++<<<<<<< HEAD
++=======
+ int fib_encap_match(struct net *net, u16 encap_type,
+ 		    struct nlattr *encap,
+ 		    int oif, const struct fib_nh *nh)
+ {
+ 	struct lwtunnel_state *lwtstate;
+ 	struct net_device *dev = NULL;
+ 	int ret, result = 0;
+ 
+ 	if (encap_type == LWTUNNEL_ENCAP_NONE)
+ 		return 0;
+ 
+ 	if (oif)
+ 		dev = __dev_get_by_index(net, oif);
+ 	ret = lwtunnel_build_state(dev, encap_type,
+ 				   encap, &lwtstate);
+ 	if (!ret) {
+ 		result = lwtunnel_cmp_encap(lwtstate, nh->nh_lwtstate);
+ 		lwtstate_free(lwtstate);
+ 	}
+ 
+ 	return result;
+ }
+ 
++>>>>>>> df383e6240ef (lwtunnel: fix memory leak)
  int fib_nh_match(struct fib_config *cfg, struct fib_info *fi)
  {
 -	struct net *net = cfg->fc_nlinfo.nl_net;
  #ifdef CONFIG_IP_ROUTE_MULTIPATH
  	struct rtnexthop *rtnh;
  	int remaining;
* Unmerged path include/net/lwtunnel.h
* Unmerged path include/net/lwtunnel.h
* Unmerged path net/ipv4/fib_semantics.c
