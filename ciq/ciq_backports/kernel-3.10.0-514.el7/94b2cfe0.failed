ipv6: minor fib6 cleanups like type safety, bool conversion, inline removal

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hannes Frederic Sowa <hannes@stressinduktion.org>
commit 94b2cfe02bfe3f1918d91bd6f498e308c5605cbc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/94b2cfe0.failed

Also renamed struct fib6_walker_t to fib6_walker and enum fib_walk_state_t
to fib6_walk_state as recommended by Cong Wang.

	Cc: Cong Wang <cwang@twopensource.com>
	Cc: YOSHIFUJI Hideaki <hideaki@yoshifuji.org>
	Cc: Martin Lau <kafai@fb.com>
	Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 94b2cfe02bfe3f1918d91bd6f498e308c5605cbc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_fib.c
diff --cc net/ipv6/ip6_fib.c
index 8695f0809e6d,e8d7465b1597..000000000000
--- a/net/ipv6/ip6_fib.c
+++ b/net/ipv6/ip6_fib.c
@@@ -46,22 -44,10 +46,27 @@@
  #define RT6_TRACE(x...) do { ; } while (0)
  #endif
  
 -static struct kmem_cache *fib6_node_kmem __read_mostly;
 +static struct kmem_cache * fib6_node_kmem __read_mostly;
 +
++<<<<<<< HEAD
 +enum fib_walk_state_t
 +{
 +#ifdef CONFIG_IPV6_SUBTREES
 +	FWS_S,
 +#endif
 +	FWS_L,
 +	FWS_R,
 +	FWS_C,
 +	FWS_U
 +};
  
 +struct fib6_cleaner_t
 +{
 +	struct fib6_walker_t w;
++=======
+ struct fib6_cleaner {
+ 	struct fib6_walker w;
++>>>>>>> 94b2cfe02bfe (ipv6: minor fib6 cleanups like type safety, bool conversion, inline removal)
  	struct net *net;
  	int (*func)(struct rt6_info *, void *arg);
  	void *arg;
@@@ -146,7 -133,7 +152,11 @@@ static __be32 addr_bit_set(const void *
  	       addr[fn_bit >> 5];
  }
  
++<<<<<<< HEAD
 +static __inline__ struct fib6_node * node_alloc(void)
++=======
+ static struct fib6_node *node_alloc(void)
++>>>>>>> 94b2cfe02bfe (ipv6: minor fib6 cleanups like type safety, bool conversion, inline removal)
  {
  	struct fib6_node *fn;
  
@@@ -155,7 -142,7 +165,11 @@@
  	return fn;
  }
  
++<<<<<<< HEAD
 +static __inline__ void node_free(struct fib6_node * fn)
++=======
+ static void node_free(struct fib6_node *fn)
++>>>>>>> 94b2cfe02bfe (ipv6: minor fib6 cleanups like type safety, bool conversion, inline removal)
  {
  	kmem_cache_free(fib6_node_kmem, fn);
  }
@@@ -301,7 -278,7 +315,11 @@@ static int fib6_dump_node(struct fib6_w
  
  static void fib6_dump_end(struct netlink_callback *cb)
  {
++<<<<<<< HEAD
 +	struct fib6_walker_t *w = (void*)cb->args[2];
++=======
+ 	struct fib6_walker *w = (void *)cb->args[2];
++>>>>>>> 94b2cfe02bfe (ipv6: minor fib6 cleanups like type safety, bool conversion, inline removal)
  
  	if (w) {
  		if (cb->args[4]) {
@@@ -1843,9 -1819,10 +1861,9 @@@ void fib6_gc_cleanup(void
  
  struct ipv6_route_iter {
  	struct seq_net_private p;
- 	struct fib6_walker_t w;
+ 	struct fib6_walker w;
  	loff_t skip;
  	struct fib6_table *tbl;
 -	__u32 sernum;
  };
  
  static int ipv6_route_seq_show(struct seq_file *seq, void *v)
diff --git a/include/net/ip6_fib.h b/include/net/ip6_fib.h
index 3a818e1c0aa8..8a7e839b1d8b 100644
--- a/include/net/ip6_fib.h
+++ b/include/net/ip6_fib.h
@@ -214,15 +214,25 @@ static inline void ip6_rt_put(struct rt6_info *rt)
 	dst_release(&rt->dst);
 }
 
-struct fib6_walker_t {
+enum fib6_walk_state {
+#ifdef CONFIG_IPV6_SUBTREES
+	FWS_S,
+#endif
+	FWS_L,
+	FWS_R,
+	FWS_C,
+	FWS_U
+};
+
+struct fib6_walker {
 	struct list_head lh;
 	struct fib6_node *root, *node;
 	struct rt6_info *leaf;
-	unsigned char state;
-	unsigned char prune;
+	enum fib6_walk_state state;
+	bool prune;
 	unsigned int skip;
 	unsigned int count;
-	int (*func)(struct fib6_walker_t *);
+	int (*func)(struct fib6_walker *);
 	void *args;
 };
 
* Unmerged path net/ipv6/ip6_fib.c
