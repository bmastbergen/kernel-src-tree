hv_netvsc: Fix VF register on bonding devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit e2b9f1f7af1dfe20df8e68849ebb4bbafed5727a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e2b9f1f7.failed

Added a condition to avoid bonding devices with same MAC registering
as VF.

	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e2b9f1f7af1dfe20df8e68849ebb4bbafed5727a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/netvsc_drv.c
index 822e657fcee7,41bd952cc28d..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -973,8 -1482,43 +973,45 @@@ static struct  hv_driver netvsc_drv = 
  	.remove = netvsc_remove,
  };
  
++<<<<<<< HEAD
++=======
+ 
+ /*
+  * On Hyper-V, every VF interface is matched with a corresponding
+  * synthetic interface. The synthetic interface is presented first
+  * to the guest. When the corresponding VF instance is registered,
+  * we will take care of switching the data path.
+  */
+ static int netvsc_netdev_event(struct notifier_block *this,
+ 			       unsigned long event, void *ptr)
+ {
+ 	struct net_device *event_dev = netdev_notifier_info_to_dev(ptr);
+ 
+ 	/* Avoid Vlan, Bonding dev with same MAC registering as VF */
+ 	if (event_dev->priv_flags & (IFF_802_1Q_VLAN | IFF_BONDING))
+ 		return NOTIFY_DONE;
+ 
+ 	switch (event) {
+ 	case NETDEV_REGISTER:
+ 		return netvsc_register_vf(event_dev);
+ 	case NETDEV_UNREGISTER:
+ 		return netvsc_unregister_vf(event_dev);
+ 	case NETDEV_UP:
+ 		return netvsc_vf_up(event_dev);
+ 	case NETDEV_DOWN:
+ 		return netvsc_vf_down(event_dev);
+ 	default:
+ 		return NOTIFY_DONE;
+ 	}
+ }
+ 
+ static struct notifier_block netvsc_netdev_notifier = {
+ 	.notifier_call = netvsc_netdev_event,
+ };
+ 
++>>>>>>> e2b9f1f7af1d (hv_netvsc: Fix VF register on bonding devices)
  static void __exit netvsc_drv_exit(void)
  {
 -	unregister_netdevice_notifier(&netvsc_netdev_notifier);
  	vmbus_driver_unregister(&netvsc_drv);
  }
  
* Unmerged path drivers/net/hyperv/netvsc_drv.c
