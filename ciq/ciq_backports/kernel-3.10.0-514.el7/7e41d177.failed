perf: Fix cgroup event scheduling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit 7e41d17753e6e0da55d343997454dd4fbe8d28a8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7e41d177.failed

There appears to be a problem in __perf_event_task_sched_in() wrt
cgroup event scheduling.

The normal event scheduling order is:

	CPU pinned
	Task pinned
	CPU flexible
	Task flexible

And since perf_cgroup_sched*() only schedules the cpu context, we must
call this _before_ adding the task events.

Note: double check what happens on the ctx switch optimization where
the task ctx isn't scheduled.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 7e41d17753e6e0da55d343997454dd4fbe8d28a8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/core.c
diff --cc kernel/events/core.c
index 4038d54962c2,9d1195af819c..000000000000
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@@ -2789,13 -2823,9 +2799,16 @@@ void __perf_event_task_sched_in(struct 
  
  		perf_event_context_sched_in(ctx, task);
  	}
 -
 -	if (atomic_read(&nr_switch_events))
 -		perf_event_switch(task, prev, true);
++<<<<<<< HEAD
 +	/*
 +	 * if cgroup events exist on this CPU, then we need
 +	 * to check if we have to switch in PMU state.
 +	 * cgroup event are system-wide mode only
 +	 */
 +	if (atomic_read(&__get_cpu_var(perf_cgroup_events)))
 +		perf_cgroup_sched_in(prev, task);
++=======
++>>>>>>> 7e41d17753e6 (perf: Fix cgroup event scheduling)
  
  	if (__this_cpu_read(perf_sched_cb_usages))
  		perf_pmu_sched_task(prev, task, true);
* Unmerged path kernel/events/core.c
