mpt3sas - remove unused fw_event_work elements

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Joe Lawrence <joe.lawrence@stratus.com>
commit b8ac0cc78b56e798851f1435bc673761d3fb877e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b8ac0cc7.failed

Firmware events are queued up using the fw_event_work's struct work, not
its delayed_work member.  The initial driver for SAS2 controllers had
handled firmware reset using the rescan barrier and was later redesigned
through "mpt2sas: [Resend] Host Reset code cleanup".  The delayed_work
variables are now unused and may provoke CONFIG_DEBUG_OBJECTS_TIMERS
"assert_init not available" false warnings in
_scsih_fw_event_cleanup_queue.

Cleanup fw_event_work's unused entries, update its kerneldoc, and
update _scsih_fw_event_cleanup_queue accordingly.

Fixes: 146b16c8071f (mpt3sas: Refcount fw_events and fix unsafe list usage)
	Signed-off-by: Joe Lawrence <joe.lawrence@stratus.com>
	Acked-by: Chaitra P B <chaitra.basappa@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b8ac0cc78b56e798851f1435bc673761d3fb877e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/mpt3sas/mpt3sas_scsih.c
diff --cc drivers/scsi/mpt3sas/mpt3sas_scsih.c
index e2ac78ed7f2b,f2139e5604a3..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_scsih.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_scsih.c
@@@ -2658,11 -2798,19 +2656,27 @@@ _scsih_fw_event_cleanup_queue(struct MP
  	     !ioc->firmware_event_thread || in_interrupt())
  		return;
  
++<<<<<<< HEAD
 +	list_for_each_entry_safe(fw_event, next, &ioc->fw_event_list, list) {
 +		if (cancel_delayed_work_sync(&fw_event->delayed_work)) {
 +			_scsih_fw_event_free(ioc, fw_event);
 +			continue;
 +		}
++=======
+ 	while ((fw_event = dequeue_next_fw_event(ioc))) {
+ 		/*
+ 		 * Wait on the fw_event to complete. If this returns 1, then
+ 		 * the event was never executed, and we need a put for the
+ 		 * reference the work had on the fw_event.
+ 		 *
+ 		 * If it did execute, we wait for it to finish, and the put will
+ 		 * happen from _firmware_event_work()
+ 		 */
+ 		if (cancel_work_sync(&fw_event->work))
+ 			fw_event_work_put(fw_event);
+ 
+ 		fw_event_work_put(fw_event);
++>>>>>>> b8ac0cc78b56 (mpt3sas - remove unused fw_event_work elements)
  	}
  }
  
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_scsih.c
