ACPI / utils: Rename acpi_dev_present()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [sound] alsa: acpi / utils: Rename acpi_dev_present() (Jaroslav Kysela) [1220299]
Rebuild_FUZZ: 92.86%
commit-author Lukas Wunner <lukas@wunner.de>
commit c68ae33e7fb4a010f9a48af3e4b87089dca96551
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c68ae33e.failed

acpi_dev_present() was originally named after pci_dev_present()
to signify the similarity of the two functions.

However Rafael J. Wysocki pointed out that the exported function
acpi_dev_present() is easily confused with the non-exported
acpi_device_is_present(). Additionally in ACPI parlance the term
"present" usually refers to the "device is present" bit returned
by the _STA control method, yet acpi_dev_present() merely checks
presence in the namespace. It does not invoke _STA at all, let
alone check the "device is present" bit.

As suggested by Rafael, rename the function to acpi_dev_found()
and adjust all existing call sites.

	Signed-off-by: Lukas Wunner <lukas@wunner.de>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit c68ae33e7fb4a010f9a48af3e4b87089dca96551)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/utils.c
#	include/acpi/acpi_bus.h
#	include/linux/apple-gmux.h
#	sound/soc/intel/boards/cht_bsw_max98090_ti.c
#	sound/soc/intel/boards/cht_bsw_rt5645.c
diff --cc drivers/acpi/utils.c
index 86bd259e9e99,ac832bf6f8c9..000000000000
--- a/drivers/acpi/utils.c
+++ b/drivers/acpi/utils.c
@@@ -656,3 -705,48 +656,51 @@@ bool acpi_check_dsm(acpi_handle handle
  	return false;
  }
  EXPORT_SYMBOL(acpi_check_dsm);
++<<<<<<< HEAD
++=======
+ 
+ /**
+  * acpi_dev_found - Detect presence of a given ACPI device in the namespace.
+  * @hid: Hardware ID of the device.
+  *
+  * Return %true if the device was present at the moment of invocation.
+  * Note that if the device is pluggable, it may since have disappeared.
+  *
+  * For this function to work, acpi_bus_scan() must have been executed
+  * which happens in the subsys_initcall() subsection. Hence, do not
+  * call from a subsys_initcall() or earlier (use acpi_get_devices()
+  * instead). Calling from module_init() is fine (which is synonymous
+  * with device_initcall()).
+  */
+ bool acpi_dev_found(const char *hid)
+ {
+ 	struct acpi_device_bus_id *acpi_device_bus_id;
+ 	bool found = false;
+ 
+ 	mutex_lock(&acpi_device_lock);
+ 	list_for_each_entry(acpi_device_bus_id, &acpi_bus_id_list, node)
+ 		if (!strcmp(acpi_device_bus_id->bus_id, hid)) {
+ 			found = true;
+ 			break;
+ 		}
+ 	mutex_unlock(&acpi_device_lock);
+ 
+ 	return found;
+ }
+ EXPORT_SYMBOL(acpi_dev_found);
+ 
+ /*
+  * acpi_backlight= handling, this is done here rather then in video_detect.c
+  * because __setup cannot be used in modules.
+  */
+ char acpi_video_backlight_string[16];
+ EXPORT_SYMBOL(acpi_video_backlight_string);
+ 
+ static int __init acpi_backlight(char *str)
+ {
+ 	strlcpy(acpi_video_backlight_string, str,
+ 		sizeof(acpi_video_backlight_string));
+ 	return 1;
+ }
+ __setup("acpi_backlight=", acpi_backlight);
++>>>>>>> c68ae33e7fb4 (ACPI / utils: Rename acpi_dev_present())
diff --cc include/acpi/acpi_bus.h
index 8bcd3caab412,a84fd1533e24..000000000000
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@@ -92,6 -87,8 +92,11 @@@ acpi_evaluate_dsm_typed(acpi_handle han
  	  .package.elements = (eles)			\
  	}
  
++<<<<<<< HEAD
++=======
+ bool acpi_dev_found(const char *hid);
+ 
++>>>>>>> c68ae33e7fb4 (ACPI / utils: Rename acpi_dev_present())
  #ifdef CONFIG_ACPI
  
  #include <linux/proc_fs.h>
* Unmerged path include/linux/apple-gmux.h
* Unmerged path sound/soc/intel/boards/cht_bsw_max98090_ti.c
* Unmerged path sound/soc/intel/boards/cht_bsw_rt5645.c
* Unmerged path drivers/acpi/utils.c
* Unmerged path include/acpi/acpi_bus.h
* Unmerged path include/linux/apple-gmux.h
diff --git a/sound/pci/hda/thinkpad_helper.c b/sound/pci/hda/thinkpad_helper.c
index 59ab6cee1ad8..f0955fd7a2e7 100644
--- a/sound/pci/hda/thinkpad_helper.c
+++ b/sound/pci/hda/thinkpad_helper.c
@@ -13,7 +13,7 @@ static void (*old_vmaster_hook)(void *, int);
 static bool is_thinkpad(struct hda_codec *codec)
 {
 	return (codec->core.subsystem_id >> 16 == 0x17aa) &&
-	       (acpi_dev_present("LEN0068") || acpi_dev_present("IBM0068"));
+	       (acpi_dev_found("LEN0068") || acpi_dev_found("IBM0068"));
 }
 
 static void update_tpacpi_mute_led(void *private_data, int enabled)
* Unmerged path sound/soc/intel/boards/cht_bsw_max98090_ti.c
* Unmerged path sound/soc/intel/boards/cht_bsw_rt5645.c
