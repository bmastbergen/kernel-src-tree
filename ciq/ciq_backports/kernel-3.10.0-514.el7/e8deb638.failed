raid5-cache: use a mempool for the metadata block

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit e8deb6381051bf3ce9d817020e8ba972b405a070
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e8deb638.failed

We only have a limited number in flight, so use a page based mempool.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: NeilBrown <neilb@suse.com>
(cherry picked from commit e8deb6381051bf3ce9d817020e8ba972b405a070)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5-cache.c
diff --cc drivers/md/raid5-cache.c
index 32663089824b,fa2d6321f3a4..000000000000
--- a/drivers/md/raid5-cache.c
+++ b/drivers/md/raid5-cache.c
@@@ -223,9 -217,7 +224,13 @@@ static void r5l_log_endio(struct bio *b
  		md_error(log->rdev->mddev, log->rdev);
  
  	bio_put(bio);
++<<<<<<< HEAD
 +
 +	if (!atomic_dec_and_test(&io->pending_io))
 +		return;
++=======
+ 	mempool_free(io->meta_page, log->meta_pool);
++>>>>>>> e8deb6381051 (raid5-cache: use a mempool for the metadata block)
  
  	spin_lock_irqsave(&log->io_list_lock, flags);
  	__r5l_set_io_unit_state(io, IO_UNIT_IO_END);
@@@ -1187,8 -1190,9 +1197,9 @@@ int r5l_init_log(struct r5conf *conf, s
  	if (r5l_load_log(log))
  		goto error;
  
 -	rcu_assign_pointer(conf->log, log);
 +	conf->log = log;
  	return 0;
+ 
  error:
  	md_unregister_thread(&log->reclaim_thread);
  reclaim_thread:
* Unmerged path drivers/md/raid5-cache.c
