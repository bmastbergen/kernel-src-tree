s390/dasd: fix incorrect locking order for LCU device add/remove

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [s390] dasd: fix incorrect locking order for LCU device add/remove (Hendrik Brueckner) [1330095]
Rebuild_FUZZ: 95.93%
commit-author Stefan Haberland <stefan.haberland@de.ibm.com>
commit 9bfefde718c1352d9499125bce50b2a0e8a3db4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9bfefde7.failed

The correct lock order for LCU lock and cdev lock is to take the cdev
lock first and afterwards the LCU lock. This is caused by the fact
that LCU functions are called in an interrupt context with the cdev
lock implicitly hold by CIO.

To assure the right locking order but also be able to iterate over
devices in a LCU introduce a trylock block that can be called with
the device lock for one device hold and then takes the LCU lock and
try to lock all devices accounted to this LCU. Afterwards all devices
and the LCU itself are locked.

	Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 9bfefde718c1352d9499125bce50b2a0e8a3db4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/block/dasd_alias.c
diff --cc drivers/s390/block/dasd_alias.c
index bc082a86bc97,cbbdd3e7fea1..000000000000
--- a/drivers/s390/block/dasd_alias.c
+++ b/drivers/s390/block/dasd_alias.c
@@@ -930,6 -1003,8 +995,11 @@@ static void summary_unit_check_handling
  	/* 3. read new alias configuration */
  	_schedule_lcu_update(lcu, device);
  	lcu->suc_data.device = NULL;
++<<<<<<< HEAD
++=======
+ 	dasd_put_device(device);
+ 	_unlock_all_devices_on_lcu(lcu, NULL, NULL);
++>>>>>>> 9bfefde718c1 (s390/dasd: fix incorrect locking order for LCU device add/remove)
  	spin_unlock_irqrestore(&lcu->lock, flags);
  }
  
@@@ -987,8 -1061,14 +1056,16 @@@ void dasd_alias_handle_summary_unit_che
  		spin_unlock(&lcu->lock);
  		return ;
  	}
+ 	_stop_all_devices_on_lcu(lcu);
+ 	/* prepare for lcu_update */
+ 	private->lcu->flags |= NEED_UAC_UPDATE | UPDATE_PENDING;
  	lcu->suc_data.reason = reason;
  	lcu->suc_data.device = device;
++<<<<<<< HEAD
++=======
+ 	dasd_get_device(device);
+ 	_unlock_all_devices_on_lcu(lcu, device, NULL);
++>>>>>>> 9bfefde718c1 (s390/dasd: fix incorrect locking order for LCU device add/remove)
  	spin_unlock(&lcu->lock);
 -	if (!schedule_work(&lcu->suc_data.worker))
 -		dasd_put_device(device);
 +	schedule_work(&lcu->suc_data.worker);
  };
* Unmerged path drivers/s390/block/dasd_alias.c
