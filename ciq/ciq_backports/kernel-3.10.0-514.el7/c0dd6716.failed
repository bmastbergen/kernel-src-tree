objtool: Mark non-standard object files and directories

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [scripts] revert "objtool: Mark non-standard object files and directories" (Josh Poimboeuf) [1347232]
Rebuild_FUZZ: 92.44%
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit c0dd671686b2229e888ede77682ab0633b2a0dd7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c0dd6716.failed

Code which runs outside the kernel's normal mode of operation often does
unusual things which can cause a static analysis tool like objtool to
emit false positive warnings:

 - boot image
 - vdso image
 - relocation
 - realmode
 - efi
 - head
 - purgatory
 - modpost

Set OBJECT_FILES_NON_STANDARD for their related files and directories,
which will tell objtool to skip checking them.  It's ok to skip them
because they don't affect runtime stack traces.

Also skip the following code which does the right thing with respect to
frame pointers, but is too "special" to be validated by a tool:

 - entry
 - mcount

Also skip the test_nx module because it modifies its exception handling
table at runtime, which objtool can't understand.  Fortunately it's
just a test module so it doesn't matter much.

Currently objtool is the only user of OBJECT_FILES_NON_STANDARD, but it
might eventually be useful for other tools.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Bernd Petrovitsch <bernd@petrovitsch.priv.at>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Chris J Arges <chris.j.arges@canonical.com>
	Cc: Jiri Slaby <jslaby@suse.cz>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Michal Marek <mmarek@suse.cz>
	Cc: Namhyung Kim <namhyung@gmail.com>
	Cc: Pedro Alves <palves@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: live-patching@vger.kernel.org
Link: http://lkml.kernel.org/r/366c080e3844e8a5b6a0327dc7e8c2b90ca3baeb.1456719558.git.jpoimboe@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit c0dd671686b2229e888ede77682ab0633b2a0dd7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/Makefile
#	arch/x86/boot/compressed/Makefile
#	arch/x86/entry/Makefile
#	arch/x86/entry/vdso/Makefile
#	arch/x86/kernel/Makefile
#	arch/x86/platform/efi/Makefile
#	arch/x86/realmode/Makefile
#	arch/x86/realmode/rm/Makefile
#	drivers/firmware/efi/libstub/Makefile
diff --cc arch/x86/boot/Makefile
index a4d0154bb0d6,0bf6749522d9..000000000000
--- a/arch/x86/boot/Makefile
+++ b/arch/x86/boot/Makefile
@@@ -9,6 -9,9 +9,12 @@@
  # Changed by many, many contributors over the years.
  #
  
++<<<<<<< HEAD
++=======
+ KASAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
+ 
++>>>>>>> c0dd671686b2 (objtool: Mark non-standard object files and directories)
  # If you want to preset the SVGA mode, uncomment the next line and
  # set SVGA_MODE to whatever number you want.
  # Set it to -DSVGA_MODE=NORMAL_VGA if you just want the EGA/VGA mode.
diff --cc arch/x86/boot/compressed/Makefile
index 7194d9f094bc,5e1d26e09407..000000000000
--- a/arch/x86/boot/compressed/Makefile
+++ b/arch/x86/boot/compressed/Makefile
@@@ -3,8 -3,24 +3,16 @@@
  #
  # create a compressed vmlinux image from the original vmlinux
  #
 -# vmlinuz is:
 -#	decompression code (*.o)
 -#	asm globals (piggy.S), including:
 -#		vmlinux.bin.(gz|bz2|lzma|...)
 -#
 -# vmlinux.bin is:
 -#	vmlinux stripped of debugging and comments
 -# vmlinux.bin.all is:
 -#	vmlinux.bin + vmlinux.relocs
 -# vmlinux.bin.(gz|bz2|lzma|...) is:
 -#	(see scripts/Makefile.lib size_append)
 -#	compressed vmlinux.bin.all + u32 size of vmlinux.bin.all
  
++<<<<<<< HEAD
 +targets := vmlinux vmlinux.bin vmlinux.bin.gz vmlinux.bin.bz2 vmlinux.bin.lzma vmlinux.bin.xz vmlinux.bin.lzo
++=======
+ KASAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
+ 
+ targets := vmlinux vmlinux.bin vmlinux.bin.gz vmlinux.bin.bz2 vmlinux.bin.lzma \
+ 	vmlinux.bin.xz vmlinux.bin.lzo vmlinux.bin.lz4
++>>>>>>> c0dd671686b2 (objtool: Mark non-standard object files and directories)
  
  KBUILD_CFLAGS := -m$(BITS) -D__KERNEL__ $(LINUX_INCLUDE) -O2
  KBUILD_CFLAGS += -fno-strict-aliasing -fPIC
diff --cc arch/x86/kernel/Makefile
index 4b39aa99fe27,d5fb0871aba3..000000000000
--- a/arch/x86/kernel/Makefile
+++ b/arch/x86/kernel/Makefile
@@@ -16,11 -16,22 +16,23 @@@ CFLAGS_REMOVE_ftrace.o = -p
  CFLAGS_REMOVE_early_printk.o = -pg
  endif
  
++<<<<<<< HEAD
++=======
+ KASAN_SANITIZE_head$(BITS).o				:= n
+ KASAN_SANITIZE_dumpstack.o				:= n
+ KASAN_SANITIZE_dumpstack_$(BITS).o			:= n
+ 
+ OBJECT_FILES_NON_STANDARD_head_$(BITS).o		:= y
+ OBJECT_FILES_NON_STANDARD_relocate_kernel_$(BITS).o	:= y
+ OBJECT_FILES_NON_STANDARD_mcount_$(BITS).o		:= y
+ OBJECT_FILES_NON_STANDARD_test_nx.o			:= y
+ 
++>>>>>>> c0dd671686b2 (objtool: Mark non-standard object files and directories)
  CFLAGS_irq.o := -I$(src)/../include/asm/trace
  
 -obj-y			:= process_$(BITS).o signal.o
 -obj-$(CONFIG_COMPAT)	+= signal_compat.o
 +obj-y			:= process_$(BITS).o signal.o entry_$(BITS).o
  obj-y			+= traps.o irq.o irq_$(BITS).o dumpstack_$(BITS).o
 -obj-y			+= time.o ioport.o dumpstack.o nmi.o
 -obj-$(CONFIG_MODIFY_LDT_SYSCALL)	+= ldt.o
 +obj-y			+= time.o ioport.o ldt.o dumpstack.o nmi.o
  obj-y			+= setup.o x86_init.o i8259.o irqinit.o jump_label.o
  obj-$(CONFIG_IRQ_WORK)  += irq_work.o
  obj-y			+= probe_roms.o
diff --cc arch/x86/platform/efi/Makefile
index b7b0b35c1981,066619b0700c..000000000000
--- a/arch/x86/platform/efi/Makefile
+++ b/arch/x86/platform/efi/Makefile
@@@ -1,3 -1,6 +1,9 @@@
++<<<<<<< HEAD
 +obj-$(CONFIG_EFI) 		+= efi.o efi_$(BITS).o efi_stub_$(BITS).o
++=======
+ OBJECT_FILES_NON_STANDARD_efi_thunk_$(BITS).o := y
+ 
+ obj-$(CONFIG_EFI) 		+= quirks.o efi.o efi_$(BITS).o efi_stub_$(BITS).o
++>>>>>>> c0dd671686b2 (objtool: Mark non-standard object files and directories)
  obj-$(CONFIG_ACPI_BGRT) += efi-bgrt.o
  obj-$(CONFIG_EARLY_PRINTK_EFI)	+= early_printk.o
 -obj-$(CONFIG_EFI_MIXED)		+= efi_thunk_$(BITS).o
diff --cc arch/x86/realmode/Makefile
index 94f7fbe97b08,682c895753d9..000000000000
--- a/arch/x86/realmode/Makefile
+++ b/arch/x86/realmode/Makefile
@@@ -6,6 -6,8 +6,11 @@@
  # for more details.
  #
  #
++<<<<<<< HEAD
++=======
+ KASAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
++>>>>>>> c0dd671686b2 (objtool: Mark non-standard object files and directories)
  
  subdir- := rm
  
diff --cc arch/x86/realmode/rm/Makefile
index 9cac82588cbc,053abe7b0ef7..000000000000
--- a/arch/x86/realmode/rm/Makefile
+++ b/arch/x86/realmode/rm/Makefile
@@@ -6,6 -6,8 +6,11 @@@
  # for more details.
  #
  #
++<<<<<<< HEAD
++=======
+ KASAN_SANITIZE			:= n
+ OBJECT_FILES_NON_STANDARD	:= y
++>>>>>>> c0dd671686b2 (objtool: Mark non-standard object files and directories)
  
  always := realmode.bin realmode.relocs
  
* Unmerged path arch/x86/entry/Makefile
* Unmerged path arch/x86/entry/vdso/Makefile
* Unmerged path drivers/firmware/efi/libstub/Makefile
* Unmerged path arch/x86/boot/Makefile
* Unmerged path arch/x86/boot/compressed/Makefile
* Unmerged path arch/x86/entry/Makefile
* Unmerged path arch/x86/entry/vdso/Makefile
* Unmerged path arch/x86/kernel/Makefile
* Unmerged path arch/x86/platform/efi/Makefile
diff --git a/arch/x86/purgatory/Makefile b/arch/x86/purgatory/Makefile
index 899dd2454256..02d5386737cd 100644
--- a/arch/x86/purgatory/Makefile
+++ b/arch/x86/purgatory/Makefile
@@ -1,3 +1,5 @@
+OBJECT_FILES_NON_STANDARD := y
+
 purgatory-y := purgatory.o stack.o setup-x86_$(BITS).o sha256.o entry64.o string.o
 
 targets += $(purgatory-y)
* Unmerged path arch/x86/realmode/Makefile
* Unmerged path arch/x86/realmode/rm/Makefile
* Unmerged path drivers/firmware/efi/libstub/Makefile
diff --git a/scripts/mod/Makefile b/scripts/mod/Makefile
index 75d59fcd48b8..d36fbfc859bd 100644
--- a/scripts/mod/Makefile
+++ b/scripts/mod/Makefile
@@ -1,3 +1,5 @@
+OBJECT_FILES_NON_STANDARD := y
+
 hostprogs-y	:= modpost mk_elfconfig
 always		:= $(hostprogs-y) empty.o
 
