IB/iser: Use helper for container_of

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sagi Grimberg <sagig@mellanox.com>
commit 7edc5a999d6bec1b5ef4d363b78578c0a723ef69
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7edc5a99.failed

Nicer this way.

	Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 7edc5a999d6bec1b5ef4d363b78578c0a723ef69)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/iser/iscsi_iser.h
diff --cc drivers/infiniband/ulp/iser/iscsi_iser.h
index 144a3278337e,87030799270a..000000000000
--- a/drivers/infiniband/ulp/iser/iscsi_iser.h
+++ b/drivers/infiniband/ulp/iser/iscsi_iser.h
@@@ -688,4 -715,26 +688,29 @@@ iser_reg_desc_get_fmr(struct ib_conn *i
  void
  iser_reg_desc_put_fmr(struct ib_conn *ib_conn,
  		      struct iser_fr_desc *desc);
++<<<<<<< HEAD
++=======
+ 
+ static inline struct ib_send_wr *
+ iser_tx_next_wr(struct iser_tx_desc *tx_desc)
+ {
+ 	struct ib_send_wr *cur_wr = &tx_desc->wrs[tx_desc->wr_idx].send;
+ 	struct ib_send_wr *last_wr;
+ 
+ 	if (tx_desc->wr_idx) {
+ 		last_wr = &tx_desc->wrs[tx_desc->wr_idx - 1].send;
+ 		last_wr->next = cur_wr;
+ 	}
+ 	tx_desc->wr_idx++;
+ 
+ 	return cur_wr;
+ }
+ 
+ static inline struct iser_conn *
+ to_iser_conn(struct ib_conn *ib_conn)
+ {
+ 	return container_of(ib_conn, struct iser_conn, ib_conn);
+ }
+ 
++>>>>>>> 7edc5a999d6b (IB/iser: Use helper for container_of)
  #endif
* Unmerged path drivers/infiniband/ulp/iser/iscsi_iser.h
diff --git a/drivers/infiniband/ulp/iser/iser_initiator.c b/drivers/infiniband/ulp/iser/iser_initiator.c
index 5458fffc8b40..543b24147018 100644
--- a/drivers/infiniband/ulp/iser/iser_initiator.c
+++ b/drivers/infiniband/ulp/iser/iser_initiator.c
@@ -561,8 +561,7 @@ void iser_rcv_completion(struct iser_rx_desc *rx_desc,
 			 unsigned long rx_xfer_len,
 			 struct ib_conn *ib_conn)
 {
-	struct iser_conn *iser_conn = container_of(ib_conn, struct iser_conn,
-						   ib_conn);
+	struct iser_conn *iser_conn = to_iser_conn(ib_conn);
 	struct iscsi_hdr *hdr;
 	char *data;
 	u64 rx_dma;
diff --git a/drivers/infiniband/ulp/iser/iser_verbs.c b/drivers/infiniband/ulp/iser/iser_verbs.c
index 862a581a4df5..b14f77deb374 100644
--- a/drivers/infiniband/ulp/iser/iser_verbs.c
+++ b/drivers/infiniband/ulp/iser/iser_verbs.c
@@ -470,8 +470,7 @@ void iser_free_fastreg_pool(struct ib_conn *ib_conn)
  */
 static int iser_create_ib_conn_res(struct ib_conn *ib_conn)
 {
-	struct iser_conn *iser_conn = container_of(ib_conn, struct iser_conn,
-						   ib_conn);
+	struct iser_conn *iser_conn = to_iser_conn(ib_conn);
 	struct iser_device	*device;
 	struct ib_device_attr *dev_attr;
 	struct ib_qp_init_attr	init_attr;
@@ -1148,9 +1147,8 @@ static void
 iser_handle_comp_error(struct ib_conn *ib_conn,
 		       struct ib_wc *wc)
 {
+	struct iser_conn *iser_conn = to_iser_conn(ib_conn);
 	void *wr_id = (void *)(uintptr_t)wc->wr_id;
-	struct iser_conn *iser_conn = container_of(ib_conn, struct iser_conn,
-						   ib_conn);
 
 	if (wc->status != IB_WC_WR_FLUSH_ERR)
 		if (iser_conn->iscsi_conn)
