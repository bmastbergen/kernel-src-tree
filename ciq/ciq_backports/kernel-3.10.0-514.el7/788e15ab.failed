NVMe: Always use MSI/MSI-x interrupts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [nvme] host: Always use MSI/MSI-x interrupts (David Milburn) [1334462]
Rebuild_FUZZ: 89.19%
commit-author Keith Busch <keith.busch@intel.com>
commit 788e15abbb9408c9399d7e3445ac9afb3b2fd7d6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/788e15ab.failed

Multiple users have reported device initialization failure due the driver
not receiving legacy PCI interrupts. This is not unique to any particular
controller, but has been observed on multiple platforms.

There have been no issues reported or observed when with message signaled
interrupts, so this patch attempts to use MSI-x during initialization,
falling back to MSI. If that fails, legacy would become the default.

The setup_io_queues error handling had to change as a result: the admin
queue's msix_entry used to be initialized to the legacy IRQ. The case
where nr_io_queues is 0 would fail request_irq when setting up the admin
queue's interrupt since re-enabling MSI-x fails with 0 vectors, leaving
the admin queue's msix_entry invalid. Instead, return success immediately.

	Reported-by: Tim Muhlemmer <muhlemmer@gmail.com>
	Reported-by: Jon Derrick <jonathan.derrick@intel.com>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 788e15abbb9408c9399d7e3445ac9afb3b2fd7d6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
* Unmerged path drivers/nvme/host/pci.c
* Unmerged path drivers/nvme/host/pci.c
