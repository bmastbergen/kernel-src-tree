fs/file.c: __const_max is actually __const_min :-)

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [fs] file.c: __const_max is actually __const_min (Mateusz Guzik) [1346114]
Rebuild_FUZZ: 92.47%
commit-author Rasmus Villemoes <linux@rasmusvillemoes.dk>
commit 752343be63d90c84d275f046e43371febe217863
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/752343be.failed

7f4b36f9bb930 "get rid of files_defer_init()" inexplicably changed a
min() to a __const_max() - but the __const_max macro actually gives
the minimum... So no functional change, just less confusing naming.

	Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 752343be63d90c84d275f046e43371febe217863)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/file.c
diff --cc fs/file.c
index 4a78f981557a,1aed0add16a2..000000000000
--- a/fs/file.c
+++ b/fs/file.c
@@@ -25,7 -25,10 +25,14 @@@
  
  int sysctl_nr_open __read_mostly = 1024*1024;
  int sysctl_nr_open_min = BITS_PER_LONG;
++<<<<<<< HEAD
 +int sysctl_nr_open_max = 1024 * 1024; /* raised later */
++=======
+ /* our min() is unusable in constant expressions ;-/ */
+ #define __const_min(x, y) ((x) < (y) ? (x) : (y))
+ int sysctl_nr_open_max = __const_min(INT_MAX, ~(size_t)0/sizeof(void *)) &
+ 			 -BITS_PER_LONG;
++>>>>>>> 752343be63d9 (fs/file.c: __const_max is actually __const_min :-))
  
  static void *alloc_fdmem(size_t size)
  {
* Unmerged path fs/file.c
