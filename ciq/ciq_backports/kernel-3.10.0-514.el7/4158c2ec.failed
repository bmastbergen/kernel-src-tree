iommu/vt-d: Detect pre enabled translation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] vt-d: Detect pre enabled translation (Myron Stowe) [1050021]
Rebuild_FUZZ: 92.31%
commit-author Joerg Roedel <jroedel@suse.de>
commit 4158c2eca3c77ed3cccdcaeab153aad4e433369c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4158c2ec.failed

Add code to detect whether translation is already enabled in
the IOMMU. Save this state in a flags field added to
struct intel_iommu.

	Tested-by: ZhenHua Li <zhen-hual@hp.com>
	Tested-by: Baoquan He <bhe@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 4158c2eca3c77ed3cccdcaeab153aad4e433369c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 2dab075cf283,39b90621a1a1..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -438,7 -441,27 +438,31 @@@ EXPORT_SYMBOL_GPL(intel_iommu_gfx_mappe
  static DEFINE_SPINLOCK(device_domain_lock);
  static LIST_HEAD(device_domain_list);
  
++<<<<<<< HEAD
 +static struct iommu_ops intel_iommu_ops;
++=======
+ static const struct iommu_ops intel_iommu_ops;
+ 
+ static bool translation_pre_enabled(struct intel_iommu *iommu)
+ {
+ 	return (iommu->flags & VTD_FLAG_TRANS_PRE_ENABLED);
+ }
+ 
+ static void init_translation_status(struct intel_iommu *iommu)
+ {
+ 	u32 gsts;
+ 
+ 	gsts = readl(iommu->reg + DMAR_GSTS_REG);
+ 	if (gsts & DMA_GSTS_TES)
+ 		iommu->flags |= VTD_FLAG_TRANS_PRE_ENABLED;
+ }
+ 
+ /* Convert generic 'struct iommu_domain to private struct dmar_domain */
+ static struct dmar_domain *to_dmar_domain(struct iommu_domain *dom)
+ {
+ 	return container_of(dom, struct dmar_domain, domain);
+ }
++>>>>>>> 4158c2eca3c7 (iommu/vt-d: Detect pre enabled translation)
  
  static int __init intel_iommu_setup(char *str)
  {
* Unmerged path drivers/iommu/intel-iommu.c
diff --git a/include/linux/intel-iommu.h b/include/linux/intel-iommu.h
index a240e61a7700..b85b81ad5eba 100644
--- a/include/linux/intel-iommu.h
+++ b/include/linux/intel-iommu.h
@@ -320,6 +320,9 @@ enum {
 	MAX_SR_DMAR_REGS
 };
 
+#define VTD_FLAG_TRANS_PRE_ENABLED	(1 << 0)
+#define VTD_FLAG_IRQ_REMAP_PRE_ENABLED	(1 << 1)
+
 struct intel_iommu {
 	void __iomem	*reg; /* Pointer to hardware regs, virtual addr */
 	u64 		reg_phys; /* physical address of hw register set */
@@ -351,6 +354,7 @@ struct intel_iommu {
 #endif
 	struct device	*iommu_dev; /* IOMMU-sysfs device */
 	int		node;
+	u32		flags;      /* Software defined flags */
 };
 
 static inline void __iommu_flush_cache(
