uapi: define DIV_ROUND_UP for userland

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [include] define DIV_ROUND_UP for userland (Ivan Vecera) [1268334]
Rebuild_FUZZ: 91.43%
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit b5d3755a22e0cc4c369c0985aef0c52c2477c1e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b5d3755a.failed

DIV_ROUND_UP is defined in linux/kernel.h only for the kernel.
When ethtool.h is included by a userland app, we got the following error:

include/linux/ethtool.h:1218:8: error: variably modified 'queue_mask' at file scope
  __u32 queue_mask[DIV_ROUND_UP(MAX_NUM_QUEUE, 32)];
        ^

Let's add a common definition in uapi and use it everywhere.

Fixes: ac2c7ad0e5d6 ("net/ethtool: introduce a new ioctl for per queue setting")
CC: Kan Liang <kan.liang@intel.com>
	Suggested-by: Ben Hutchings <ben@decadent.org.uk>
	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b5d3755a22e0cc4c369c0985aef0c52c2477c1e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/ethtool.h
diff --cc include/uapi/linux/ethtool.h
index ab64b71b9520,9c22249ebf35..000000000000
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@@ -1178,10 -1204,29 +1179,28 @@@ enum ethtool_sfeatures_retval_bits 
  #define ETHTOOL_F_WISH          (1 << ETHTOOL_F_WISH__BIT)
  #define ETHTOOL_F_COMPAT        (1 << ETHTOOL_F_COMPAT__BIT)
  
++<<<<<<< HEAD
++=======
+ #define MAX_NUM_QUEUE		4096
+ 
+ /**
+  * struct ethtool_per_queue_op - apply sub command to the queues in mask.
+  * @cmd: ETHTOOL_PERQUEUE
+  * @sub_command: the sub command which apply to each queues
+  * @queue_mask: Bitmap of the queues which sub command apply to
+  * @data: A complete command structure following for each of the queues addressed
+  */
+ struct ethtool_per_queue_op {
+ 	__u32	cmd;
+ 	__u32	sub_command;
+ 	__u32	queue_mask[__KERNEL_DIV_ROUND_UP(MAX_NUM_QUEUE, 32)];
+ 	char	data[];
+ };
++>>>>>>> b5d3755a22e0 (uapi: define DIV_ROUND_UP for userland)
  
  /* CMDs currently supported */
 -#define ETHTOOL_GSET		0x00000001 /* DEPRECATED, Get settings.
 -					    * Please use ETHTOOL_GLINKSETTINGS
 -					    */
 -#define ETHTOOL_SSET		0x00000002 /* DEPRECATED, Set settings.
 -					    * Please use ETHTOOL_SLINKSETTINGS
 -					    */
 +#define ETHTOOL_GSET		0x00000001 /* Get settings. */
 +#define ETHTOOL_SSET		0x00000002 /* Set settings. */
  #define ETHTOOL_GDRVINFO	0x00000003 /* Get driver info. */
  #define ETHTOOL_GREGS		0x00000004 /* Get NIC registers. */
  #define ETHTOOL_GWOL		0x00000005 /* Get wake-on-lan options. */
diff --git a/include/linux/kernel.h b/include/linux/kernel.h
index affdfe63bfe4..76e33dd21a5c 100644
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@ -64,7 +64,7 @@
 #define round_down(x, y) ((x) & ~__round_mask(x, y))
 
 #define FIELD_SIZEOF(t, f) (sizeof(((t*)0)->f))
-#define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))
+#define DIV_ROUND_UP __KERNEL_DIV_ROUND_UP
 #define DIV_ROUND_UP_ULL(ll,d) \
 	({ unsigned long long _tmp = (ll)+(d)-1; do_div(_tmp, d); _tmp; })
 
* Unmerged path include/uapi/linux/ethtool.h
diff --git a/include/uapi/linux/kernel.h b/include/uapi/linux/kernel.h
index 321e399457f5..466073f0ce46 100644
--- a/include/uapi/linux/kernel.h
+++ b/include/uapi/linux/kernel.h
@@ -9,5 +9,6 @@
 #define __ALIGN_KERNEL(x, a)		__ALIGN_KERNEL_MASK(x, (typeof(x))(a) - 1)
 #define __ALIGN_KERNEL_MASK(x, mask)	(((x) + (mask)) & ~(mask))
 
+#define __KERNEL_DIV_ROUND_UP(n, d) (((n) + (d) - 1) / (d))
 
 #endif /* _UAPI_LINUX_KERNEL_H */
diff --git a/include/uapi/linux/mroute6.h b/include/uapi/linux/mroute6.h
index ce91215cf7e6..5062fb5751e1 100644
--- a/include/uapi/linux/mroute6.h
+++ b/include/uapi/linux/mroute6.h
@@ -1,6 +1,7 @@
 #ifndef _UAPI__LINUX_MROUTE6_H
 #define _UAPI__LINUX_MROUTE6_H
 
+#include <linux/kernel.h>
 #include <linux/types.h>
 #include <linux/sockios.h>
 
@@ -46,14 +47,8 @@ typedef unsigned short mifi_t;
 typedef	__u32		if_mask;
 #define NIFBITS (sizeof(if_mask) * 8)        /* bits per mask */
 
-#if !defined(__KERNEL__)
-#if !defined(DIV_ROUND_UP)
-#define	DIV_ROUND_UP(x,y)	(((x) + ((y) - 1)) / (y))
-#endif
-#endif
-
 typedef struct if_set {
-	if_mask ifs_bits[DIV_ROUND_UP(IF_SETSIZE, NIFBITS)];
+	if_mask ifs_bits[__KERNEL_DIV_ROUND_UP(IF_SETSIZE, NIFBITS)];
 } if_set;
 
 #define IF_SET(n, p)    ((p)->ifs_bits[(n)/NIFBITS] |= (1 << ((n) % NIFBITS)))
