s390/stacktrace: save full stack traces

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [s390] stacktrace: save full stack traces (Pratyush Anand) [1297488]
Rebuild_FUZZ: 93.15%
commit-author Heiko Carstens <heiko.carstens@de.ibm.com>
commit 66adce8f1f9f3bcd743a0e72c10aa850df8c5fa7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/66adce8f.failed

save_stack_trace() only saves the stack trace of the current context
(interrupt or process context). This is different to what other
architectures like x86 do, which save the full stack trace across
different contexts.

Also extract a __save_stack_trace() helper function which will be used
by a follow on patch.

	Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
	Tested-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 66adce8f1f9f3bcd743a0e72c10aa850df8c5fa7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/stacktrace.c
diff --cc arch/s390/kernel/stacktrace.c
index 744df296cb25,e0fec2d8ac40..000000000000
--- a/arch/s390/kernel/stacktrace.c
+++ b/arch/s390/kernel/stacktrace.c
@@@ -60,22 -59,17 +60,34 @@@ static unsigned long save_context_stack
  	}
  }
  
- void save_stack_trace(struct stack_trace *trace)
+ static void __save_stack_trace(struct stack_trace *trace, unsigned long sp)
  {
++<<<<<<< HEAD
 +	register unsigned long sp asm ("15");
 +	unsigned long orig_sp, new_sp;
 +
 +	orig_sp = sp & PSW_ADDR_INSN;
 +	new_sp = save_context_stack(trace, orig_sp,
 +				    S390_lowcore.panic_stack - PAGE_SIZE,
 +				    S390_lowcore.panic_stack, 1);
 +	if (new_sp != orig_sp)
 +		return;
 +	new_sp = save_context_stack(trace, new_sp,
 +				    S390_lowcore.async_stack - ASYNC_SIZE,
 +				    S390_lowcore.async_stack, 1);
 +	if (new_sp != orig_sp)
 +		return;
++=======
+ 	unsigned long new_sp, frame_size;
+ 
+ 	frame_size = STACK_FRAME_OVERHEAD + sizeof(struct pt_regs);
+ 	new_sp = save_context_stack(trace, sp,
+ 			S390_lowcore.panic_stack + frame_size - PAGE_SIZE,
+ 			S390_lowcore.panic_stack + frame_size, 1);
+ 	new_sp = save_context_stack(trace, new_sp,
+ 			S390_lowcore.async_stack + frame_size - ASYNC_SIZE,
+ 			S390_lowcore.async_stack + frame_size, 1);
++>>>>>>> 66adce8f1f9f (s390/stacktrace: save full stack traces)
  	save_context_stack(trace, new_sp,
  			   S390_lowcore.thread_info,
  			   S390_lowcore.thread_info + THREAD_SIZE, 1);
* Unmerged path arch/s390/kernel/stacktrace.c
