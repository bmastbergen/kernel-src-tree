tty: Retry failed reopen if tty teardown in-progress

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [tty] Retry failed reopen if tty teardown in-progress ("Herton R. Krzesinski") [1327403]
Rebuild_FUZZ: 94.95%
commit-author Peter Hurley <peter@hurleysoftware.com>
commit 7f22f6c935cda600660e623a411fe380015d28d9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7f22f6c9.failed

A small window exists where a tty reopen will observe the tty
just prior to imminent teardown (tty->count == 0); in this case, open()
returns EIO to userspace.

Instead, retry the open after checking for signals and yielding;
this interruptible retry loop allows teardown to commence and initialize
a new tty on retry. Never retry the BSD master pty reopen; there is no
guarantee the pty pair teardown is imminent since the slave file
descriptors may remain open indefinitely.

	Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
	Cc: stable <stable@vger.kernel.org> # 4.4
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 7f22f6c935cda600660e623a411fe380015d28d9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/tty_io.c
diff --cc drivers/tty/tty_io.c
index cccabebf8268,a1b36bf545e8..000000000000
--- a/drivers/tty/tty_io.c
+++ b/drivers/tty/tty_io.c
@@@ -1394,10 -1463,6 +1394,13 @@@ static int tty_reopen(struct tty_struc
  {
  	struct tty_driver *driver = tty->driver;
  
++<<<<<<< HEAD
 +	if (test_bit(TTY_CLOSING, &tty->flags) ||
 +			test_bit(TTY_HUPPING, &tty->flags))
 +		return -EIO;
 +
++=======
++>>>>>>> 7f22f6c935cd (tty: Retry failed reopen if tty teardown in-progress)
  	if (driver->type == TTY_DRIVER_TYPE_PTY &&
  	    driver->subtype == PTY_TYPE_MASTER)
  		return -EIO;
* Unmerged path drivers/tty/tty_io.c
