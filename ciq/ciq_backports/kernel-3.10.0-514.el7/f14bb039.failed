uio: Export definition of struct uio_device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [uio] Export definition of struct uio_device (Andy Grover) [1367873]
Rebuild_FUZZ: 93.83%
commit-author Andy Grover <agrover@redhat.com>
commit f14bb039a4e8206439d3e9abd92bc76bd142f243
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f14bb039.failed

In order to prevent a O(n) search of the filesystem to link up its uio
node with its target configuration, TCMU needs to know the minor number
that UIO assigned. Expose the definition of this struct so TCMU can
access this field.

	Signed-off-by: Andy Grover <agrover@redhat.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit f14bb039a4e8206439d3e9abd92bc76bd142f243)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/uio/uio.c
diff --cc drivers/uio/uio.c
index 2d57a00dc173,60fa6278fbce..000000000000
--- a/drivers/uio/uio.c
+++ b/drivers/uio/uio.c
@@@ -28,19 -28,6 +28,22 @@@
  
  #define UIO_MAX_DEVICES		(1U << MINORBITS)
  
++<<<<<<< HEAD
 +struct uio_device {
 +	struct module		*owner;
 +	struct device		*dev;
 +	int			minor;
 +	atomic_t		event;
 +	struct fasync_struct	*async_queue;
 +	wait_queue_head_t	wait;
 +	int			vma_count;
 +	struct uio_info		*info;
 +	struct kobject		*map_dir;
 +	struct kobject		*portio_dir;
 +};
 +
++=======
++>>>>>>> f14bb039a4e8 (uio: Export definition of struct uio_device)
  static int uio_major;
  static struct cdev *uio_cdev;
  static DEFINE_IDR(uio_idr);
* Unmerged path drivers/uio/uio.c
diff --git a/include/linux/uio_driver.h b/include/linux/uio_driver.h
index 1ad4724458de..baa81718d985 100644
--- a/include/linux/uio_driver.h
+++ b/include/linux/uio_driver.h
@@ -63,7 +63,17 @@ struct uio_port {
 
 #define MAX_UIO_PORT_REGIONS	5
 
-struct uio_device;
+struct uio_device {
+        struct module           *owner;
+        struct device           *dev;
+        int                     minor;
+        atomic_t                event;
+        struct fasync_struct    *async_queue;
+        wait_queue_head_t       wait;
+        struct uio_info         *info;
+        struct kobject          *map_dir;
+        struct kobject          *portio_dir;
+};
 
 /**
  * struct uio_info - UIO device capabilities
