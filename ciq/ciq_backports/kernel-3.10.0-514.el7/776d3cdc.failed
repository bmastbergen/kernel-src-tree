x86/microcode/intel: Check if microcode was found before applying

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] microcode/intel: Check if microcode was found before applying (Prarit Bhargava) [1253762]
Rebuild_FUZZ: 96.83%
commit-author Borislav Petkov <bp@suse.de>
commit 776d3cdc93d83808bf5929d716a56c69bbe01d2f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/776d3cdc.failed

We should check the return value of the routines fishing out the proper
microcode and not try to apply if we haven't found a suitable blob.

	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 776d3cdc93d83808bf5929d716a56c69bbe01d2f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/microcode/intel_early.c
diff --cc arch/x86/kernel/cpu/microcode/intel_early.c
index e2cc626ea816,d515ff3feb8b..000000000000
--- a/arch/x86/kernel/cpu/microcode/intel_early.c
+++ b/arch/x86/kernel/cpu/microcode/intel_early.c
@@@ -719,9 -722,15 +719,19 @@@ _load_ucode_intel_bsp(struct mc_saved_d
  	collect_cpu_info_early(uci);
  	scan_microcode(initrd_start_early, initrd_end_early, mc_saved_data,
  		       mc_saved_in_initrd, uci);
++<<<<<<< HEAD
 +	load_microcode(mc_saved_data, mc_saved_in_initrd,
 +		       initrd_start_early, uci);
 +	apply_microcode_early(uci);
++=======
+ 
+ 	ret = load_microcode(mc_saved_data, mc_saved_in_initrd,
+ 			     initrd_start_early, uci);
+ 	if (ret != UCODE_OK)
+ 		return;
+ 
+ 	apply_microcode_early(uci, true);
++>>>>>>> 776d3cdc93d8 (x86/microcode/intel: Check if microcode was found before applying)
  }
  
  void __init
@@@ -782,7 -793,29 +793,35 @@@ void load_ucode_intel_ap(void
  		return;
  
  	collect_cpu_info_early(&uci);
++<<<<<<< HEAD
 +	load_microcode(mc_saved_data_p, mc_saved_in_initrd_p,
 +		       initrd_start_addr, &uci);
 +	apply_microcode_early(&uci);
++=======
+ 	ret = load_microcode(mc_saved_data_p, mc_saved_in_initrd_p,
+ 			     initrd_start_addr, &uci);
+ 
+ 	if (ret != UCODE_OK)
+ 		return;
+ 
+ 	apply_microcode_early(&uci, true);
+ }
+ 
+ void reload_ucode_intel(void)
+ {
+ 	struct ucode_cpu_info uci;
+ 	enum ucode_state ret;
+ 
+ 	if (!mc_saved_data.mc_saved_count)
+ 		return;
+ 
+ 	collect_cpu_info_early(&uci);
+ 
+ 	ret = generic_load_microcode_early(mc_saved_data.mc_saved,
+ 					   mc_saved_data.mc_saved_count, &uci);
+ 	if (ret != UCODE_OK)
+ 		return;
+ 
+ 	apply_microcode_early(&uci, false);
++>>>>>>> 776d3cdc93d8 (x86/microcode/intel: Check if microcode was found before applying)
  }
* Unmerged path arch/x86/kernel/cpu/microcode/intel_early.c
