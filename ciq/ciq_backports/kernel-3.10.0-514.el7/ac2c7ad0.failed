net/ethtool: introduce a new ioctl for per queue setting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] ethtool: introduce a new ioctl for per queue setting (Ivan Vecera) [1268334]
Rebuild_FUZZ: 96.30%
commit-author Kan Liang <kan.liang@intel.com>
commit ac2c7ad0e5d6030452c9af2fafd192e17fd04264
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ac2c7ad0.failed

Introduce a new ioctl ETHTOOL_PERQUEUE for per queue parameters setting.
The following patches will enable some SUB_COMMANDs for per queue
setting.

	Signed-off-by: Kan Liang <kan.liang@intel.com>
	Reviewed-by: Ben Hutchings <ben@decadent.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ac2c7ad0e5d6030452c9af2fafd192e17fd04264)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/ethtool.c
diff --cc net/core/ethtool.c
index 1ed11f1c82d9,d640ecf71e74..000000000000
--- a/net/core/ethtool.c
+++ b/net/core/ethtool.c
@@@ -1974,6 -2152,12 +1994,15 @@@ int dev_ethtool(struct net *net, struc
  	case ETHTOOL_STUNABLE:
  		rc = ethtool_set_tunable(dev, useraddr);
  		break;
++<<<<<<< HEAD
++=======
+ 	case ETHTOOL_GPHYSTATS:
+ 		rc = ethtool_get_phy_stats(dev, useraddr);
+ 		break;
+ 	case ETHTOOL_PERQUEUE:
+ 		rc = ethtool_set_per_queue(dev, useraddr);
+ 		break;
++>>>>>>> ac2c7ad0e5d6 (net/ethtool: introduce a new ioctl for per queue setting)
  	default:
  		rc = -EOPNOTSUPP;
  	}
diff --git a/include/uapi/linux/ethtool.h b/include/uapi/linux/ethtool.h
index ab64b71b9520..5f208edcb9d8 100644
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@ -1178,6 +1178,21 @@ enum ethtool_sfeatures_retval_bits {
 #define ETHTOOL_F_WISH          (1 << ETHTOOL_F_WISH__BIT)
 #define ETHTOOL_F_COMPAT        (1 << ETHTOOL_F_COMPAT__BIT)
 
+#define MAX_NUM_QUEUE		4096
+
+/**
+ * struct ethtool_per_queue_op - apply sub command to the queues in mask.
+ * @cmd: ETHTOOL_PERQUEUE
+ * @sub_command: the sub command which apply to each queues
+ * @queue_mask: Bitmap of the queues which sub command apply to
+ * @data: A complete command structure following for each of the queues addressed
+ */
+struct ethtool_per_queue_op {
+	__u32	cmd;
+	__u32	sub_command;
+	__u32	queue_mask[DIV_ROUND_UP(MAX_NUM_QUEUE, 32)];
+	char	data[];
+};
 
 /* CMDs currently supported */
 #define ETHTOOL_GSET		0x00000001 /* Get settings. */
@@ -1260,6 +1275,8 @@ enum ethtool_sfeatures_retval_bits {
 #define ETHTOOL_GTUNABLE	0x00000048 /* Get tunable configuration */
 #define ETHTOOL_STUNABLE	0x00000049 /* Set tunable configuration */
 
+#define ETHTOOL_PERQUEUE	0x0000004b /* Set per queue options */
+
 /* compatibility with older code */
 #define SPARC_ETH_GSET		ETHTOOL_GSET
 #define SPARC_ETH_SSET		ETHTOOL_SSET
* Unmerged path net/core/ethtool.c
