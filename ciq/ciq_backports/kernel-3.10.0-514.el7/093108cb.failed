RDMA/iw_cxgb4: Always wake up waiter in c4iw_peer_abort_intr()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hariprasad S <hariprasad@chelsio.com>
commit 093108cb3640844cfdabb0f506fa6b592b64272d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/093108cb.failed

Currently c4iw_peer_abort_intr() does not wake up the waiter if the
endpoint state indicates we're using MPAv2 and we're currently trying to
connect. This was introduced with commit 7c0a33d61187a ("RDMA/cxgb4:
Don't wakeup threads for MPAv2")

However, this original fix is flawed because it introduces a race that
can cause a deadlock of the iwarp stack.  Here is the race:

->local side sets up an active offload connection.

->local side sends MPA_START request.

->peer sends MPA_START response.

->local side ingress cpl thread begins processing the MPA_START response,
but before it changes the state from MPA_REQ_SENT to FPDU_MODE:

->peer sends a RST which results in a ABORT_REQ_RSS.  This triggers
peer_abort_intr() which sees the state in MPA_REQ_SENT and since mpa_rev
is 2, it will avoid waking up the endpoint with -ECONNRESET, assuming the
stack will re-attempt the connection using MPAv1.

->Meanwhile, the cpl thread moves the state to FPDU_MODE and calls
c4iw_modify_rc_qp() which calls rdma_init() which sends a RI_WR/INIT WR
to firmware.  But since HW sent an abort, FW correctly drops the RI_WR/INIT
WR.

->So the cpl thread is stuck waiting for a reply and cannot process the
ABORT_REQ_RSS cpl sitting in its input queue. Thus everything comes to a
halt because no more ingress cpls are processed by the stack...

The correct fix for the issue is to always do the wake up in
c4iw_abort_intr() but reinitialize the wait object in c4iw_reconnect().

Fixes: 7c0a33d61187a ("RDMA/cxgb4: Don't wakeup threads for MPAv2")
	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 093108cb3640844cfdabb0f506fa6b592b64272d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/cm.c
diff --cc drivers/infiniband/hw/cxgb4/cm.c
index 59084dc17b06,4f8afa2b8e21..000000000000
--- a/drivers/infiniband/hw/cxgb4/cm.c
+++ b/drivers/infiniband/hw/cxgb4/cm.c
@@@ -4073,16 -4240,8 +4074,21 @@@ static int peer_abort_intr(struct c4iw_
  	PDBG("%s ep %p tid %u state %u\n", __func__, ep, ep->hwtid,
  	     ep->com.state);
  
++<<<<<<< HEAD
 +	/*
 +	 * Wake up any threads in rdma_init() or rdma_fini().
 +	 * However, if we are on MPAv2 and want to retry with MPAv1
 +	 * then, don't wake up yet.
 +	 */
 +	if (mpa_rev == 2 && !ep->tried_with_mpa_v1) {
 +		if (ep->com.state != MPA_REQ_SENT)
 +			c4iw_wake_up(&ep->com.wr_wait, -ECONNRESET);
 +	} else
 +		c4iw_wake_up(&ep->com.wr_wait, -ECONNRESET);
++=======
+ 	c4iw_wake_up(&ep->com.wr_wait, -ECONNRESET);
+ out:
++>>>>>>> 093108cb3640 (RDMA/iw_cxgb4: Always wake up waiter in c4iw_peer_abort_intr())
  	sched(dev, skb);
  	return 0;
  }
* Unmerged path drivers/infiniband/hw/cxgb4/cm.c
