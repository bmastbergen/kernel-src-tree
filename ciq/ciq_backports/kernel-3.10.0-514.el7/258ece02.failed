btrfs: remove shadowing variables in __btrfs_map_block

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author David Sterba <dsterba@suse.cz>
commit 258ece02126a67af263746e1ae5f8ddf0d492e14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/258ece02.failed

1) We can safely use the function's 'i'. Fixes warning

fs/btrfs/volumes.c:5257:7: warning: declaration of 'i' shadows a previous local
fs/btrfs/volumes.c:4951:6: warning: shadowed declaration is here

2) A local variable duplicates name of an argument, we can use the value
directly. Fixes warning

fs/btrfs/volumes.c:5433:8: warning: declaration of 'length' shadows a parameter
fs/btrfs/volumes.c:4935:27: warning: shadowed declaration is here

	Signed-off-by: David Sterba <dsterba@suse.cz>
(cherry picked from commit 258ece02126a67af263746e1ae5f8ddf0d492e14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/volumes.c
diff --cc fs/btrfs/volumes.c
index 0455a2c06b77,64ec2fd624da..000000000000
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@@ -5241,9 -5257,36 +5241,39 @@@ static int __btrfs_map_block(struct btr
  	if (dev_replace_is_ongoing)
  		bbio->tgtdev_map = (int *)(bbio->stripes + num_alloc_stripes);
  
++<<<<<<< HEAD
++=======
+ 	/* build raid_map */
+ 	if (map->type & BTRFS_BLOCK_GROUP_RAID56_MASK &&
+ 	    need_raid_map && ((rw & (REQ_WRITE | REQ_GET_READ_MIRRORS)) ||
+ 	    mirror_num > 1)) {
+ 		u64 tmp;
+ 		unsigned rot;
+ 
+ 		bbio->raid_map = (u64 *)((void *)bbio->stripes +
+ 				 sizeof(struct btrfs_bio_stripe) *
+ 				 num_alloc_stripes +
+ 				 sizeof(int) * tgtdev_indexes);
+ 
+ 		/* Work out the disk rotation on this stripe-set */
+ 		div_u64_rem(stripe_nr, num_stripes, &rot);
+ 
+ 		/* Fill in the logical address of each stripe */
+ 		tmp = stripe_nr * nr_data_stripes(map);
+ 		for (i = 0; i < nr_data_stripes(map); i++)
+ 			bbio->raid_map[(i+rot) % num_stripes] =
+ 				em->start + (tmp + i) * map->stripe_len;
+ 
+ 		bbio->raid_map[(i+rot) % map->num_stripes] = RAID5_P_STRIPE;
+ 		if (map->type & BTRFS_BLOCK_GROUP_RAID6)
+ 			bbio->raid_map[(i+rot+1) % num_stripes] =
+ 				RAID6_Q_STRIPE;
+ 	}
+ 
++>>>>>>> 258ece02126a (btrfs: remove shadowing variables in __btrfs_map_block)
  	if (rw & REQ_DISCARD) {
 -		u32 factor = 0;
 -		u32 sub_stripes = 0;
 +		int factor = 0;
 +		int sub_stripes = 0;
  		u64 stripes_per_dev = 0;
  		u32 remaining_stripes = 0;
  		u32 last_stripe = 0;
* Unmerged path fs/btrfs/volumes.c
