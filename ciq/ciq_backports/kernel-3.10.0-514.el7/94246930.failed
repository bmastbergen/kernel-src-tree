i2c: i801: Create iTCO device on newer Intel PCHs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mika Westerberg <mika.westerberg@linux.intel.com>
commit 9424693035a57961a8eb09e96aab315a7096535d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/94246930.failed

Starting from Intel Sunrisepoint (Skylake PCH) the iTCO watchdog resources
have been moved to reside under the i801 SMBus host controller whereas
previously they were under the LPC device.

In order to support the iTCO watchdog on newer PCHs we need to create the
platform device here in the SMBus driver and pass all known resources using
platform data.

	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Matt Fleming <matt.fleming@intel.com>
	Reviewed-by: Guenter Roeck <linux@roeck-us.net>
	Acked-by: Wolfram Sang <wsa@the-dreams.de>
	Signed-off-by: Lee Jones <lee.jones@linaro.org>
(cherry picked from commit 9424693035a57961a8eb09e96aab315a7096535d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/i2c/busses/i2c-i801.c
diff --cc drivers/i2c/busses/i2c-i801.c
index f35240566cfa,eaef9bc9d88c..000000000000
--- a/drivers/i2c/busses/i2c-i801.c
+++ b/drivers/i2c/busses/i2c-i801.c
@@@ -220,10 -235,9 +234,11 @@@ struct i801_priv 
  	const struct i801_mux_config *mux_drvdata;
  	struct platform_device *mux_pdev;
  #endif
+ 	struct platform_device *tco_pdev;
  };
  
 +static struct pci_driver i801_driver;
 +
  #define FEATURE_SMBUS_PEC	(1 << 0)
  #define FEATURE_BLOCK_BUFFER	(1 << 1)
  #define FEATURE_BLOCK_PROC	(1 << 2)
@@@ -1303,11 -1412,8 +1419,16 @@@ static void i801_remove(struct pci_dev 
  	i2c_del_adapter(&priv->adapter);
  	pci_write_config_byte(dev, SMBHSTCFG, priv->original_hstcfg);
  
++<<<<<<< HEAD
 +	if (priv->features & FEATURE_IRQ)
 +		free_irq(dev->irq, priv);
 +	pci_release_region(dev, SMBBAR);
 +
 +	kfree(priv);
++=======
+ 	platform_device_unregister(priv->tco_pdev);
+ 
++>>>>>>> 9424693035a5 (i2c: i801: Create iTCO device on newer Intel PCHs)
  	/*
  	 * do not call pci_disable_device(dev) since it can cause hard hangs on
  	 * some systems during power-off (eg. Fujitsu-Siemens Lifebook E8010)
* Unmerged path drivers/i2c/busses/i2c-i801.c
