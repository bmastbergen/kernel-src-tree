KVM: VMX: Enable and initialize VMX TSC scaling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Haozhong Zhang <haozhong.zhang@intel.com>
commit 64903d6195cbfb051ce339d30848cc64babdba12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/64903d61.failed

This patch exhances kvm-intel module to enable VMX TSC scaling and
collects information of TSC scaling ratio during initialization.

	Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 64903d6195cbfb051ce339d30848cc64babdba12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/vmx.h
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/include/asm/vmx.h
index b963514887da,14c63c7e8337..000000000000
--- a/arch/x86/include/asm/vmx.h
+++ b/arch/x86/include/asm/vmx.h
@@@ -71,7 -71,9 +71,13 @@@
  #define SECONDARY_EXEC_ENABLE_INVPCID		0x00001000
  #define SECONDARY_EXEC_SHADOW_VMCS              0x00004000
  #define SECONDARY_EXEC_ENABLE_PML               0x00020000
++<<<<<<< HEAD
 +
++=======
+ #define SECONDARY_EXEC_XSAVES			0x00100000
+ #define SECONDARY_EXEC_PCOMMIT			0x00200000
+ #define SECONDARY_EXEC_TSC_SCALING              0x02000000
++>>>>>>> 64903d6195cb (KVM: VMX: Enable and initialize VMX TSC scaling)
  
  #define PIN_BASED_EXT_INTR_MASK                 0x00000001
  #define PIN_BASED_NMI_EXITING                   0x00000008
@@@ -164,6 -166,10 +170,13 @@@ enum vmcs_field 
  	EOI_EXIT_BITMAP3_HIGH           = 0x00002023,
  	VMREAD_BITMAP                   = 0x00002026,
  	VMWRITE_BITMAP                  = 0x00002028,
++<<<<<<< HEAD
++=======
+ 	XSS_EXIT_BITMAP                 = 0x0000202C,
+ 	XSS_EXIT_BITMAP_HIGH            = 0x0000202D,
+ 	TSC_MULTIPLIER                  = 0x00002032,
+ 	TSC_MULTIPLIER_HIGH             = 0x00002033,
++>>>>>>> 64903d6195cb (KVM: VMX: Enable and initialize VMX TSC scaling)
  	GUEST_PHYSICAL_ADDRESS          = 0x00002400,
  	GUEST_PHYSICAL_ADDRESS_HIGH     = 0x00002401,
  	VMCS_LINK_POINTER               = 0x00002800,
diff --cc arch/x86/kvm/vmx.c
index 2e741a634171,e45b03ed5c52..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -2942,7 -3139,10 +2950,14 @@@ static __init int setup_vmcs_config(str
  			SECONDARY_EXEC_APIC_REGISTER_VIRT |
  			SECONDARY_EXEC_VIRTUAL_INTR_DELIVERY |
  			SECONDARY_EXEC_SHADOW_VMCS |
++<<<<<<< HEAD
 +			SECONDARY_EXEC_ENABLE_PML;
++=======
+ 			SECONDARY_EXEC_XSAVES |
+ 			SECONDARY_EXEC_ENABLE_PML |
+ 			SECONDARY_EXEC_PCOMMIT |
+ 			SECONDARY_EXEC_TSC_SCALING;
++>>>>>>> 64903d6195cb (KVM: VMX: Enable and initialize VMX TSC scaling)
  		if (adjust_vmx_controls(min2, opt2,
  					MSR_IA32_VMX_PROCBASED_CTLS2,
  					&_cpu_based_2nd_exec_control) < 0)
* Unmerged path arch/x86/include/asm/vmx.h
* Unmerged path arch/x86/kvm/vmx.c
