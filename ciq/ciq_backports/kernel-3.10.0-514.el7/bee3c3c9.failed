IB/cma: Join and leave multicast groups with IGMP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Moni Shoua <monis@mellanox.com>
commit bee3c3c91865d520cb692689500df051e4ca3dd6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bee3c3c9.failed

Since RoCEv2 is a protocol over IP header it is required to send IGMP
join and leave requests to the network when joining and leaving
multicast groups.

	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit bee3c3c91865d520cb692689500df051e4ca3dd6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/cma.c
#	drivers/infiniband/core/multicast.c
diff --cc drivers/infiniband/core/cma.c
index 0523e8efcdf1,559ee3d27b4a..000000000000
--- a/drivers/infiniband/core/cma.c
+++ b/drivers/infiniband/core/cma.c
@@@ -342,8 -402,28 +344,33 @@@ static inline void cma_set_ip_ver(struc
  	hdr->ip_version = (ip_ver << 4) | (hdr->ip_version & 0xF);
  }
  
++<<<<<<< HEAD
 +static void cma_attach_to_dev(struct rdma_id_private *id_priv,
 +			      struct cma_device *cma_dev)
++=======
+ static int cma_igmp_send(struct net_device *ndev, union ib_gid *mgid, bool join)
+ {
+ 	struct in_device *in_dev = NULL;
+ 
+ 	if (ndev) {
+ 		rtnl_lock();
+ 		in_dev = __in_dev_get_rtnl(ndev);
+ 		if (in_dev) {
+ 			if (join)
+ 				ip_mc_inc_group(in_dev,
+ 						*(__be32 *)(mgid->raw + 12));
+ 			else
+ 				ip_mc_dec_group(in_dev,
+ 						*(__be32 *)(mgid->raw + 12));
+ 		}
+ 		rtnl_unlock();
+ 	}
+ 	return (in_dev) ? 0 : -ENODEV;
+ }
+ 
+ static void _cma_attach_to_dev(struct rdma_id_private *id_priv,
+ 			       struct cma_device *cma_dev)
++>>>>>>> bee3c3c91865 (IB/cma: Join and leave multicast groups with IGMP)
  {
  	cma_ref_dev(cma_dev);
  	id_priv->cma_dev = cma_dev;
diff --cc drivers/infiniband/core/multicast.c
index d38d8b2b2979,250937cb9a1a..000000000000
--- a/drivers/infiniband/core/multicast.c
+++ b/drivers/infiniband/core/multicast.c
@@@ -729,7 -731,19 +731,23 @@@ int ib_init_ah_from_mcmember(struct ib_
  	u16 gid_index;
  	u8 p;
  
++<<<<<<< HEAD
 +	ret = ib_find_cached_gid(device, &rec->port_gid, &p, &gid_index);
++=======
+ 	if (rdma_protocol_roce(device, port_num)) {
+ 		ret = ib_find_cached_gid_by_port(device, &rec->port_gid,
+ 						 gid_type, port_num,
+ 						 ndev,
+ 						 &gid_index);
+ 	} else if (rdma_protocol_ib(device, port_num)) {
+ 		ret = ib_find_cached_gid(device, &rec->port_gid,
+ 					 IB_GID_TYPE_IB, NULL, &p,
+ 					 &gid_index);
+ 	} else {
+ 		ret = -EINVAL;
+ 	}
+ 
++>>>>>>> bee3c3c91865 (IB/cma: Join and leave multicast groups with IGMP)
  	if (ret)
  		return ret;
  
* Unmerged path drivers/infiniband/core/cma.c
* Unmerged path drivers/infiniband/core/multicast.c
diff --git a/include/rdma/ib_sa.h b/include/rdma/ib_sa.h
index 7e071a6abb34..7073a972505f 100644
--- a/include/rdma/ib_sa.h
+++ b/include/rdma/ib_sa.h
@@ -394,6 +394,8 @@ int ib_sa_get_mcmember_rec(struct ib_device *device, u8 port_num,
  */
 int ib_init_ah_from_mcmember(struct ib_device *device, u8 port_num,
 			     struct ib_sa_mcmember_rec *rec,
+			     struct net_device *ndev,
+			     enum ib_gid_type gid_type,
 			     struct ib_ah_attr *ah_attr);
 
 /**
