x86/mce: Do not enter deferred errors into the generic pool twice

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] mce: Do not enter deferred errors into the generic pool twice (Prarit Bhargava) [1301710]
Rebuild_FUZZ: 96.83%
commit-author Tony Luck <tony.luck@intel.com>
commit 8b38937b7ab55e93065a14c88753b1fe83e93c60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8b38937b.failed

We used to have a special ring buffer for deferred errors that
was used to mark problem pages. We replaced that with a generic
pool. Then later converted mce_log() to also use the same pool.
As a result, we end up adding all deferred errors to the pool
twice.

Rearrange this code. Make sure to set the m.severity and
m.usable_addr fields for deferred errors. Then if flags and
mca_cfg.dont_log_ce mean we call mce_log() we are done, because
that will add this entry to the generic pool.

If we skipped mce_log(), then we still want to take action for
the deferred error, so add to the pool.

Change the name of the boolean "error_logged" to "error_seen",
we should set it whether of not we logged an error because the
return value from machine_check_poll() is used to decide whether
storms have subsided or not.

	Reported-by: Gong Chen <gong.chen@linux.intel.com>
	Signed-off-by: Tony Luck <tony.luck@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/1448350880-5573-2-git-send-email-bp@alien8.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 8b38937b7ab55e93065a14c88753b1fe83e93c60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce.c
diff --cc arch/x86/kernel/cpu/mcheck/mce.c
index d16e95b8ee4c,6531cb46803c..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce.c
+++ b/arch/x86/kernel/cpu/mcheck/mce.c
@@@ -664,14 -610,10 +666,15 @@@ bool machine_check_poll(enum mcp_flags 
  
  		severity = mce_severity(&m, mca_cfg.tolerant, NULL, false);
  
- 		/*
- 		 * In the cases where we don't have a valid address after all,
- 		 * do not add it into the ring buffer.
- 		 */
  		if (severity == MCE_DEFERRED_SEVERITY && memory_error(&m)) {
  			if (m.status & MCI_STATUS_ADDRV) {
++<<<<<<< HEAD
 +				mce_ring_add(m.addr >> PAGE_SHIFT);
 +				mce_schedule_work();
++=======
+ 				m.severity = severity;
+ 				m.usable_addr = mce_usable_address(&m);
++>>>>>>> 8b38937b7ab5 (x86/mce: Do not enter deferred errors into the generic pool twice)
  			}
  		}
  
* Unmerged path arch/x86/kernel/cpu/mcheck/mce.c
