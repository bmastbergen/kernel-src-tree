powerpc: Remove MSI-related PCI controller ops from ppc_md

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] Remove MSI-related PCI controller ops from ppc_md (Gustavo Duarte) [1275657]
Rebuild_FUZZ: 91.59%
commit-author Daniel Axtens <dja@axtens.net>
commit 1f88d5860e0b8244b28e21b63a521915e5c15313
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1f88d586.failed

Remove unneeded ppc_md functions. Patch callsites to use pci_controller_ops
functions exclusively.

	Signed-off-by: Daniel Axtens <dja@axtens.net>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 1f88d5860e0b8244b28e21b63a521915e5c15313)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/machdep.h
#	arch/powerpc/kernel/msi.c
diff --cc arch/powerpc/include/asm/machdep.h
index bafb79c3e5aa,0d387d0570cd..000000000000
--- a/arch/powerpc/include/asm/machdep.h
+++ b/arch/powerpc/include/asm/machdep.h
@@@ -110,16 -131,7 +110,19 @@@ struct machdep_calls 
  	/* To setup PHBs when using automatic OF platform driver for PCI */
  	int		(*pci_setup_phb)(struct pci_controller *host);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_PCI_MSI
 +	int		(*msi_check_device)(struct pci_dev* dev,
 +					    int nvec, int type);
 +	int		(*setup_msi_irqs)(struct pci_dev *dev,
 +					  int nvec, int type);
 +	void		(*teardown_msi_irqs)(struct pci_dev *dev);
 +#endif
 +
++=======
++>>>>>>> 1f88d5860e0b (powerpc: Remove MSI-related PCI controller ops from ppc_md)
  	void		(*restart)(char *cmd);
 +	void		(*power_off)(void);
  	void		(*halt)(void);
  	void		(*panic)(char *str);
  	void		(*cpu_die)(void);
diff --cc arch/powerpc/kernel/msi.c
index 8bbc12d20f5c,dab616a33b8d..000000000000
--- a/arch/powerpc/kernel/msi.c
+++ b/arch/powerpc/kernel/msi.c
@@@ -13,9 -13,12 +13,16 @@@
  
  #include <asm/machdep.h>
  
 -int arch_setup_msi_irqs(struct pci_dev *dev, int nvec, int type)
 +int arch_msi_check_device(struct pci_dev* dev, int nvec, int type)
  {
++<<<<<<< HEAD
 +	if (!ppc_md.setup_msi_irqs || !ppc_md.teardown_msi_irqs) {
++=======
+ 	struct pci_controller *phb = pci_bus_to_host(dev->bus);
+ 
+ 	if (!phb->controller_ops.setup_msi_irqs ||
+ 	    !phb->controller_ops.teardown_msi_irqs) {
++>>>>>>> 1f88d5860e0b (powerpc: Remove MSI-related PCI controller ops from ppc_md)
  		pr_debug("msi: Platform doesn't provide MSI callbacks.\n");
  		return -ENOSYS;
  	}
@@@ -24,20 -27,12 +31,30 @@@
  	if (type == PCI_CAP_ID_MSI && nvec > 1)
  		return 1;
  
++<<<<<<< HEAD
 +	if (ppc_md.msi_check_device) {
 +		pr_debug("msi: Using platform check routine.\n");
 +		return ppc_md.msi_check_device(dev, nvec, type);
 +	}
 +
 +        return 0;
 +}
 +
 +int arch_setup_msi_irqs(struct pci_dev *dev, int nvec, int type)
 +{
 +	return ppc_md.setup_msi_irqs(dev, nvec, type);
++=======
+ 	return phb->controller_ops.setup_msi_irqs(dev, nvec, type);
++>>>>>>> 1f88d5860e0b (powerpc: Remove MSI-related PCI controller ops from ppc_md)
  }
  
  void arch_teardown_msi_irqs(struct pci_dev *dev)
  {
++<<<<<<< HEAD
 +	ppc_md.teardown_msi_irqs(dev);
++=======
+ 	struct pci_controller *phb = pci_bus_to_host(dev->bus);
+ 
+ 	phb->controller_ops.teardown_msi_irqs(dev);
++>>>>>>> 1f88d5860e0b (powerpc: Remove MSI-related PCI controller ops from ppc_md)
  }
* Unmerged path arch/powerpc/include/asm/machdep.h
* Unmerged path arch/powerpc/kernel/msi.c
