Rebuild_History BUILDABLE
Rebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v3.10~1..master: 848130
Number of commits in rpm: 16528
Number of commits matched with upstream: 15995 (96.78%)
Number of commits in upstream but not in rpm: 832465
Number of commits NOT found in upstream: 533 (3.22%)

Rebuilding Kernel on Branch centos7_rebuild_kernel-3.10.0-514.el7 for kernel-3.10.0-514.el7
Clean Cherry Picks: 10169 (63.58%)
Empty Cherry Picks: 5423 (33.90%)
_______________________________

__EMPTY COMMITS__________________________
0dfc70c33409afc232ef0b9ec210535dfbf9bc61 NVMe: Fix memory leak on retried commands
a4bd6eb07ca72d21a7a34499ad34cfef6f527d4e KVM: PPC: Book3S HV: Add helpers for lock/unlock hpte
e23a808b1681d398a983ebc51179efc51c4a1eaf KVM: PPC: Book3S HV: Create debugfs file for each guest's HPT
29c4afc4e98f4dc0ea9df22c631841f9c220b944 sctp: Fix race between OOTB responce and route removal
ad12695f177c3403a64348b42718faf9727fe358 ksm: add cond_resched() to the rmap_walks
cbdb967af3d54993f5814f1cee0ed311a055377d KVM: svm: unconditionally intercept #DB
c07543431e9f3d126d083808efa0e76461d8833b net/mlx5e: Disable VLAN filter in promiscuous mode
2951d5c031a3aaefa31b688fbf229e75692f4786 tick: broadcast: Prevent livelock from event handler
488ca7d72d974e3c00ae73ed9f947590680bdf00 x86/cpufeatures: Enable cpuid for Intel SHA extensions
9b6e6a8334d56354853f9c255d1395c2ba570e0a x86/nmi/64: Switch stacks on userspace NMI entry
0b22930ebad563ae97ff3f8d7b9f12060b4c6e6b x86/nmi/64: Improve nested NMI comments
a27507ca2d796cfa8d907de31ad730359c8a6d06 x86/nmi/64: Reorder nested NMI checks
810bc075f78ff2c221536eb3008eac6a492dba2d x86/nmi/64: Use DF to avoid userspace RSP confusing nested NMI detection
83c133cf11fb0e68a51681447e372489f052d40e x86/nmi/64: Fix a paravirt stack-clobbering bug in the NMI code
fc57a7c68020dcf954428869eafd934c0ab1536f x86/paravirt: Replace the paravirt nop with a bona fide empty function
c9eb256eda4420c06bb10f5e8fbdbe1a34bc98e0 xfs: return errors from partial I/O failures to files
ff6d6af2351caea7db681f4539d0d893e400557a xfs: per-filesystem stats counter implementation
6cc7e908362a9dfec3c821f77ec98b6758592060 SUNRPC: Ensure xs_reset_transport() resets the close connection flags
de84d89030fa4efa44c02c96c8b4a8176042c4ff SUNRPC: TCP/UDP always close the old socket before reconnecting
9cbc94fb06f98de0e8d393eaff09c790f4c3ba46 SUNRPC: Remove TCP socket linger code
505936f59f1e4cd0ff92ae5abc7aae64fb74dbdb SUNRPC: Cleanup to remove remaining uses of XPRT_CONNECTION_ABORT
9e2b9f37760e129cee053cc7b6e7288acc2a7134 SUNRPC: Remove the redundant XPRT_CONNECTION_CLOSE flag
b70ae915e4282854fb7864519e5ec559ab2de7c3 SUNRPC: Handle connection reset more efficiently.
45fef5b88d1f2f47ecdefae6354372d440ca5c84 ACPI: add dynamic_debug support
719d359dc7b6be3e43d6661f192ceb980b10ee26 x86/asm: Add support for the pcommit instruction
ca7d9b795e6bc78c80a1771ada867994fabcfc01 x86/mm: Add kerneldoc comments for pcommit_sfence()
d9dc64f30abe42f71bc7e9eb9d38c41006cf39f9 x86/asm: Add support for the CLWB instruction
49a18d86f66d33a20144ecb5a34bba0d1856b260 ipv6: update ip6_rt_last_gc every time GC is run
600e19afc5f8a6c18ea49cee9511c5797db02391 mm: use only per-device readahead limit
5a530ff0d88a366736ae4d1021e7358b52e55756 thermal/powerclamp: add id for braswell cpu
c17b98cf6028704e1f953d6a25ed6140425ccfd0 KVM: PPC: Book3S HV: Remove code for PPC970 processors
31037ecad275e9ad9bc671c34f72b495cf708ca3 KVM: PPC: Book3S HV: Remove RMA-related variables from code
8478f53946f01b8365a206ac58a2640e3e408fb2 cpufreq: intel_pstate: Fix limits->max_policy_pct rounding error
785ee27881411bd971d5e37a7fd72a5063fc1237 cpufreq: intel_pstate: Fix limits->max_perf rounding error
ccc0e7dc708ce1bd2e1c4a2b6a180ae7459374de s390/dasd: fix disconnected device with valid path mask
f08bb472bff3c0397fb7d6f47bc5cec41dad76e3 ACPI / table: Add new function to get table entries
9b3fedde27d3d63055c43c05e8254e252e58ba48 ACPI / tables: Add acpi_subtable_proc to ACPI table parsers
362414d9d2824ee0f4910a73e880860a90e75c3c ACPI / tables: test the correct variable
381aa07a9b4e1f82969203e9e4863da2a157781d x86: Introduce disabled-features
9298b815efe500b272e4084ed05eeae7a92b5340 x86: Add more disabled features
6ba48ff46f764414f979d2eacb23c4e6296bcc95 x86: Remove arbitrary instruction size limit in instruction decoder
c04e051cccd2446d9ca373628d14b7e732462f5d x86: mpx: Give bndX registers actual names
57319d80e1d328e34cb24868a4f4405661485e30 x86, mpx: Add MPX-specific mmap interface
62e7759b1bdaf9b753c3724a56fcbe3235ebd5f3 x86, mpx: Rename cfg_reg_u and status_reg
95290cf13e561b52dceadb9a8b8ee8ff2464b142 x86, mpx: Add MPX to disabled features
fcc7ffd67991b63029ca54925644753d534ddc5f x86, mpx: Decode MPX instruction to get bound violation information
fe3d197f84319d3bce379a9c0dc17b1f48ad358c x86, mpx: On-demand kernel allocation of bounds tables
1de4fa14ee25a8edf287855513b61c3945c8878a x86, mpx: Cleanup unused bound tables
62e88b1c00de9cb30d937841ed5debed871070b8 mm: Make arch_unmap()/bprm_mm_init() available to all architectures
68c009c4137927fd4ffd3e653bb5209d752c1d42 x86 mpx: Change return type of get_reg_offset()
e10abb2f770eeb673d23c19980216b0fb62b4f50 x86_64/traps: Fix always true condition
814564a0a1d2faee11ff9de43245d78cb79c85ac x86, mpx: Explicitly disable 32-bit MPX support on 64-bit kernels
394838c96013ba414a24ffe7a2a593a9154daadf x86/asm/entry/32: Fix user_mode() misuses
0f363b250b15af0f218bb2876d101fe5cd413f8b x86: Fix off-by-one in instruction decoder
0c4109bec0a6cde471bef3a21cd6f8384a614469 x86/fpu/xstate: Fix up bad get_xsave_addr() assumptions
04cd027bcba1ead7bfe39e7f1c6f4d993c4c3323 x86/fpu/xstate: Wrap get_xsave_addr() to make it safer
a84eeaa96b36a03188e1423349669c108d3a4bd7 x86/mpx: Use the new get_xsave_field_ptr()API
46a6e0cf1c6665a8e867d8f7798d7a3538633f03 x86/mpx: Clean up the code by not passing a task pointer around when unnecessary
3c1d32300920a446c67d697cd6b80f012ad06028 x86/mpx: Remove redundant MPX_BNDCFG_ADDR_MASK
eb099e5bc5457c42043e57cf0f4ce574669b9697 x86/mpx: Restrict the mmap() size check to bounds tables
8c3641e957a948f41f0174290096ed7a3b95e703 x86/mpx: Introduce a boot-time disable flag
e7126cf5f10aef1555cb99eddb7efff41bdf9566 x86/mpx: Trace #BR exceptions
97efebf1bc30a80122af3295ebdb726dbc040ca6 x86/mpx: Trace entry to bounds exception paths
2a1dcb1f796ad37028df37d96fc7c5b6b1705a43 x86/mpx: Trace the attempts to find bounds tables
cd4996dce18b619bd7b3acf75c91f49c77f05a97 x86/mpx: Trace allocation of new bounds tables
b0e9b09b3bd64e67bba862e238d3757b2482b6de x86: Make is_64bit_mm() widely available
a1149fc83a1f97612e72ec24a0bdbabff7b85e77 x86/mpx: Add temporary variable to reduce masking
54587653904c552c56b9dec153d7a89063394b09 x86/mpx: Introduce new 'directory entry' to 'addr' helper function
6ac52bb4913eadfa327138b91aab5d37234a2c3b x86/mpx: Use 32-bit-only cmpxchg() for 32-bit apps
613fcb7d3c79ec25b5913a6aa974c9047c31e68c x86/mpx: Support 32-bit binaries on 64-bit kernels
3ceaccdf92073d193f0bfbe24280dd736e3fed86 x86/mpx: Rewrite the unmap code
bea03c50b871a2fa922f31ad7c9993bb4fc7b192 x86/mpx: Do not count MPX VMAs as neighbors when unmapping
97ac46a5087eaf87fd76ff7bb31ec9c896010442 x86/mpx: Allow 32-bit binaries on 64-bit kernels again
a89652769470d12cd484ee3d3f7bde0742be8d96 x86/mpx: Do not set ->vm_ops on MPX VMAs
c36b97e9430defab4b52ee370c18745343d92f6d GFS2: Protect freeing directory hash table with i_lock spin_lock
f94fe119f2e53362a3038ee856fa58412f728bc9 x86, CPU: Fix trivial printk formatting issues with dmesg
cc904f9cf26dc455cffbdf6e7eb86717e047d8ff hwmon: (coretemp) Increase limit of maximum core ID from 32 to 128.
d474a4d365aaa5c7aabcf11a74ea43aa23f6f2e9 powercap / RAPL: handle domains with different energy units
ea85dbcaec0ff29f2c3f84be4c8a01a94e8bd449 powercap / RAPL: mark rapl_ids array as __initconst
51b63409b75980753f52edb45da7d1b3e2b9405d powercap / RAPL: Floor frequency setting in Atom SoC
9a4fc4eaf111ca960c9f524b850598e9dbc9697f powerpc/kvm: Create proper names for the kvm_host_state PMU fields
b0221556dbd3c31c47f37703f856aeeffc78abd3 KVM: PPC: Book3S HV: Move virtual mode ICP functions to real-mode
6e0365b782739eb41b03bcfd23abeefacbf0817a KVM: PPC: Book3S HV: Add ICP real mode counters
b6c295df3131c6fa25f8f29625ee0609506150ad KVM: PPC: Book3S HV: Accumulate timing information for real-mode code
5e1d44aef1673b504dde475aa714b1bdb9b875c4 KVM: PPC: Use READ_ONCE when dereferencing pte_t pointer
5358a96341a7fba23cbf0eaf01ce1ab4d738fc90 KVM: PPC: Fix warnings from sparse
891121e6c02c6242487aa4ea1d5c75b7ecdc45ee powerpc/mm: Differentiate between hugetlb and THP during page walk
93b7aca35dd7bf0c3ba7ea0542b556bcfdb28e76 lib/idr.c: fix out-of-bounds pointer dereference
939c7a4f04fcd2162109744e8bf88194948a6e65 tracing: Introduce saved_cmdlines_size file
a6af8fbf17989e41fef5cacf3988a724fb687d78 tracing: Cleanup saved_cmdlines_size changes
d7e29933969e5ca7c112ce1368a07911f4485dc2 rcu: Make rcu_barrier() understand about missing rcuo kthreads
dcd93ed4cd1669b2c1510e801fe5f1132390761c netfilter: nf_conntrack: remove dead code
308ac9143ee2208f54d061eca54a89da509b5d92 netfilter: nf_conntrack: push zone object into functions
deedb59039f111c41aa5a54ee384c8e7c08bc78a netfilter: nf_conntrack: add direction support for zones
5e8018fc61423e677398d4ad4d72df70b9788e77 netfilter: nf_conntrack: add efficient mark to zone mapping
62da98656b62a5ca57f22263705175af8ded5aa1 netfilter: nf_conntrack: make nf_ct_zone_dflt built-in
49d16b23cd1e61c028ee088c5a64e9ac6a9c6147 bridge_netfilter: No ICMP packet on IPv4 fragmentation error
c5501eb3406d0f88b3efb2c437c4c40b35f865d8 net: ipv4: avoid repeated calls to ip_skb_dst_mtu helper
d6b915e29f4adea94bc02ba7675bb4f84e6a1abd ip_fragment: don't forward defragmented DF packet
be4ace6e6b1bc12e18b25fe764917e09a1f96d7b openvswitch: Move dev pointer into vport itself
7f8a436eaa2c3ddd8e1ff2fbca267e6275085536 openvswitch: Add conntrack action
182e3042e15de759e81618d11fe4f62f5259d982 openvswitch: Allow matching on conntrack mark
c2ac667358708d7cce64c78f58af6adf4c1e848b openvswitch: Allow matching on conntrack label
cae3a2627520c3795b54533c5328b77af3405dbe openvswitch: Allow attaching helpers to ct action
f88f69dd17f150e2abcc7e2d95f895f2546fa381 openvswitch: Remove conntrack Kconfig option.
38c089d1d8d058f5dff018a811568aa8e8bc47fc openvswitch: Fix dependency on IPv6 defrag.
9723e6abc70a472c726d5d5ac6402a2d1bb10882 openswitch: fix typo CONFIG_NF_CONNTRACK_LABEL
33db4125ec745426c3483d6817d8f7ea5324cd05 openvswitch: Rename LABEL->LABELS
cc5706056baa3002b844ff240a1cc2199a978795 openvswitch: Fix IPv6 exthdr handling with ct helpers.
0a7cc172a01e4a203667fb601cd80131db8d0c9a openvswitch: Fix typos in CT headers
b8f2257069f179c7bdedc9501c1623070c4c37bb openvswitch: Fix skb leak in ovs_fragment()
ec0d043d05e6e3c0c2fac5de922c800c027c6386 openvswitch: Ensure flow is valid before executing ct
6f225952461b5e9b5520d0dc6e2ff0af57874fbb openvswitch: Reject ct_state unsupported bits
fbccce5965a58d56aaed9e9acd1bec75d8a66e87 openvswitch: Extend ct_state match field to 32 bits
ab38a7b5a4493a3658d891a8e91f9ffcb3d2defb openvswitch: Change CT_ATTR_FLAGS to CT_ATTR_COMMIT
9e384715e9e702704c6941c575f0e6b322132a3a openvswitch: Reject ct_state masks for unknown bits
1d008a1df927846788b9dc02e770f65951f98ddc openvswitch: Clarify conntrack COMMIT behaviour
4f0909ee3d8e3514a274121f3bf217a4920fa12d openvswitch: Mark connections new when not confirmed.
e754ec69ab69601420eb2ed58ece803d77c93f61 openvswitch: Serialize nested ct actions if provided
0848f6428ba3a2e42db124d41ac6f548655735bf inet: frags: fix defragmented packet's IP header for af_packet
74c16618137f1505b0a32dea3ec73a2ef6f8f842 openvswitch: Fix double-free on ip_defrag() errors
6f5cadee44d83395dcd78d557b577e1021e192e4 openvswitch: Fix skb leak using IPv6 defrag
2f3ab9f9fc23811188b9d07d86e4d99ffee887f4 openvswitch: Fix helper reference leak
d110986c5ddb1caf576e8576044c0c831e3e7fa4 openvswitch: Respect conntrack zone even if invalid
90c7afc96cbbd77f44094b5b651261968e97de67 openvswitch: Fix template leak in error cases.
79462ad02e861803b3840cc782248c7359451cd9 net: add validation for the socket syscall protocol argument
3705ad64f123271b2b88dbff0c9891b7b90299d2 sunrpc: add new tracepoints in xprt handling code
66d7a56a6254389587d0999dcaab1d2634cd4e24 SUNRPC: Refactor TCP receive
1a867a0898b2e366a1eb5b7fe21413a2b2b1629f sunrpc: add tracepoints in xs_tcp_data_recv
edc1b01cd3b20a5fff049e98f82a2b0d24a34c89 SUNRPC: Move TCP receive data path into a workqueue context
f9b2ee714c5c945cda27e9cbca5f60d5199fb93f SUNRPC: Move UDP receive data path into a workqueue context
a26480942c99d84a7682ea4c00f47a3a42ed41d2 SUNRPC: Move AF_LOCAL receive data path into a workqueue context
471f3db2786bc32011d6693413eb93b0c3da2579 gfs2: change gfs2 readdir cookie
17652c6336fdca0f48906f0a1d9b5ac77b29e5a7 i40e: remove unused argument
a75cdaa915e42ef0e6f38dc7f2a6a1deca91d648 sched: Set an initial value of runnable avg for new forked task
147c5fc2bad780d8093b547f2baa204e78107faf sched/fair: Shrink sg_lb_stats and play memset games
b72ff13ce6021b37459afacbccc0bc9b16989013 sched/fair: Reduce local_group logic
3029ede39373c368f402a76896600d85a4f7121b sched/balancing: Fix 'local->avg_load > busiest->avg_load' case in fix_small_imbalance()
7e3115ef5149fc502e3a2e80719dba54a8e7409d sched/balancing: Fix cfs_rq->task_h_load calculation
380c9077b38df2962a22f00f21f6cd0db62d3390 sched/fair: Clean up update_sg_lb_stats() a bit
52a08ef1f13a11289c9e18cd4cfb4e51c024058b sched: Fix the rq->next_balance logic in rebalance_domains() and idle_balance()
1b6a7495d343fcfe22ff3a8285544bb8e40f1920 sched/fair: Change "has_capacity" to "has_free_capacity"
0fedc6c8e34f4ce0b37b1f25c3619b4a8faa244c sched/fair: Disambiguate existing/remaining "capacity" usage
caeb178c60f4f93f1b45c0bc056b5cf6d217b67f sched/fair: Make update_sd_pick_busiest() return 'true' on a busier sd
9a5d9ba6a3631d55c358fe1bdbaa162a97471a05 sched/fair: Allow calculate_imbalance() to move idle cpus
65fdac08c264506ff95ee1e34ae066e308c9e6e3 sched: Fix avg_load computation
51b97e354ba9fce1890cf38ecc754aa49677fc89 kernel: use the gnu89 standard explicitly
c5c9f25b98a568451d665afe4aeefe17bf9f2995 NVMe: default to 4k device page size
4985c32ee4241d1aba1beeac72294faa46aaff10 ACPI / processor: Fix failure of loading acpi-cpufreq driver
0d5501c1c828fb97d02af50aa9d2b1a5498b94e4 net: Always untag vlan-tagged traffic on input.
a6e18ff111701b4ff6947605bfbe9594ec42a6e8 vlan: Fix untag operations of stacked vlans with REORDER_HEADER off
28f9ee22bcdd84726dbf6267d0b58f254166b900 vlan: Do not put vlan headers back on bridge and macvlan ports
f654861569872d10dcb79d9d7ca219b316f94ff0 skbuff: Fix offset error in skb_reorder_vlan_header
b7b0b1d290cc89c39607dd47f8047e1071e65692 ipv6: recreate ipv6 link-local addresses when increasing MTU over IPV6_MIN_MTU
b22f6434cf48af001330e370e9d781aeb668f98c iommu: Constify struct iommu_ops
ab636481863a1039f5ca3643cfb04d4ae0c965cd iommu/amd: Convert to iommu_capable() API function
5d587b8de56eec6c6a31b452a177cd8c066b267e iommu/vt-d: Convert to iommu_capable() API function
fb3e306515ba6a012364b698b8ca71c337424ed3 iommu: Fix bus notifier breakage
be257c61306750d11c20d2ac567bf63304c696a3 zram: do not pass rw argument to __zram_make_request()
f4659d8e620d08bd1a84a8aec5d2f5294a242764 zram: support REQ_DISCARD
38515c73398a4c58059ecf1087e844561b58ee0f zram: correct offset usage in zram_bio_discard
d2d5e762c8990c4031890e03565983a05febd64a zram: replace global tb_lock with fine grain lock
015254daf1753003c19c46b90ee85a963260d270 zram: use notify_free to account all free notifications
b627cff3d308d3ccb3ec73a89260f5c7872e46a4 zram: remove bio parameter from zram_bvec_rw()
54850e73e86e3bc092680d1bdb84eb322f982ab1 zram: change parameter from vaild_io_request()
d49b1c254c997195872a9e8913660a788298921e mm/zram: correct ZRAM_ZERO flag bit position
ba6b17d68c8e3aa8d55d0474299cb931965c5ea5 zram: fix umount-reset_store-mount race condition
a096cafc31862c54da0b56c8441dc14023437008 zram: rework reset and destroy path
08eee69fcf6baea543a2b4d2a2fcba0e61aa3160 zram: remove init_lock in zram_make_request
ee98016010ae036a5b27300d83bd99ef3fd5776e zram: remove request_queue from struct zram
3eba0c6a56c04f2b017b43641a821f1ebfb7fb4c mm/zpool: add name argument to create zpool
2f6a3bed7347ee94fe57b3501fddaa646a26d890 zram: export new 'io_stat' sysfs attrs
4f2109f60881585dc04fa0b5657a60556576625c zram: export new 'mm_stat' sysfs attrs
d7ad41a1c498729b7584c257710b1b437a0c1470 zram: clear disk io accounting when reset zram device
9e65bf68a8f14f1b3fb16dc85dbbaff79da4bfeb zram: remove obsolete ZRAM_DEBUG option
85508ec6cbc21645927b6ac05e3b2748119a3e23 zram: use idr instead of `zram_devices' array
522698d7cadb5d208429c934f673713b7a42e925 zram: reorganize code layout
c3cdb40e66344553898daa3ccd068c03173a3f42 zram: remove max_num_devices limitation
d12b63c927e0e90de4b55d5084f947707c6d8cf4 zram: report every added and removed device
b31177f2a9d5b2cfb1da7a06a4a98273b40975a8 zram: trivial: correct flag operations comment
92ff15288747b80730f0132e9c98403370c27b34 zram: return zram device_id from zram_add()
f405c445a4866caa43101c231721123805a23bbf zram: close race by open overriding
6566d1a32bf725a4fa9119f16270505451ad01ac zram: add dynamic device add/remove functionality
708649694a8699ff91d395c4aef5ecea3ade14bc zram: unify error reporting
17ec4cd985780a7e30aa45bb8f272237c12502a4 zram: don't call idr_remove() from zram_remove()
bc2bebe8de8ed4ba6482c9cc370b0dd72ffe8cd2 alx: remove WoL support
b54629e226d196e802abdd30c5e34f2a47cddcf2 alx: Reset phy speed after resume
b7e6ce18cb361064c35394cdb81def8c293732a0 alx: add stats to ethtool
e824de8ae2a00ee71c5bfbadd004d12c6dd85561 net/qlcnic: fix mac address restore in bond mode 5/6
880a6fab8f6ba5b5abe59ea68533202ddea1012c xfrm: configure policy hash table thresholds by netlink
4682a0358639b29cf69437ed909c6221f8c89847 netlink: Always copy on mmap TX.
f53de1e9a4aaf8cbe08845da6f7ff26a078ac507 net: ipv6: use common fib_default_rule_pref
05f00505a89acd21f5d0d20f5797dfbc4cf85243 ipvs: fix crash if scheduler is changed
66f1c44887ba4f47d617f8ae21cf8e04e1892bd7 bridge: include in6.h in if_bridge.h for struct in6_addr
e5c3ea5c668033b303e7ac835d7d91da32d97958 bridge: implement rtnl_link_ops->get_size and rtnl_link_ops->fill_info
0e884c78ee19e902f300ed147083c28a0c6302f0 ipv4: L3 hash-based multipath
79a131592dbb81a2dba208622a2ffbfc53f28bc0 ipv4: ICMP packet inspection for multipath
0a837fe4724713ef701e47d6bfab98a5efaff3eb ipv4: Fix compilation errors in fib_rebalance
0c26ed1c07f13ca27e2638ffdd1951013ed96c48 netfilter: nf_log: Introduce nft_log_dereference() macro
264640fc2c5f4f913db5c73fa3eb1ead2c45e9d7 ipv6: distinguish frag queues by device for multicast and link-local packets
93efac3f2e03321129de67a3c0ba53048bb53e31 ipv6: Fix IPsec pre-encap fragmentation check
0690cbd2e55a72a8eae557c389d1a136ed9fa142 powerpc/iommu: Rename iommu_[un]map_sg functions
315786ebbf4ad6552b6fd8e0e7b2ea220fcbfdbd iommu: Add iommu_map_sg() function
38ec010d9b04ed94845f8ff6f10d33eb6bbfe180 iommu: Do more input validation in iommu_map_sg()
d7da6bdc322bb79c4326dff7c2727236a48c4be9 iommu: Improve error handling when setting bus iommu
cfdeec22e459e3c5081c8fc6d956c8ee68943397 iommu/amd: remove compiler warning due to IOMMU_CAP_NOEXEC
18f23409909a9547ac7c149013286f36fcffa433 iommu: Decouple iommu_map_sg from CPU page size
1cd076bf67793942ed921b766f7d461de2ebc0a2 iommu: provide early initialisation hook for IOMMU drivers
24fd78a81f6d3fe7f7a440c8629f9c52cd5f830e x86/mce/amd: Introduce deferred error interrupt handler
3490c0e45f7e5a5b1e5c62e4c60b0e55b2e75e71 x86/mce/amd: Zap changelog
061120aed7081b9a4393fbe07b558192f40ad911 x86/mce: Don't use percpu workqueues
fd4cf79fcc4b5130ced8fd8c40378d3cec2e5fa8 x86/mce: Remove the MCE ring for Action Optional errors
f29a7aff4bd60ebc3da4982f80144a4158c4c74a x86/mce: Avoid potential deadlock due to printk() in MCE context
eef4dfa0cb83899c782935ac5345532f47073cea x86/mce: Kill drain_mcelog_buffer()
8838eb6c0bf3b6a6494a163947ab3d1700ab45d2 x86/mce: Clear Local MCE opt-in before kexec
1b48465500611a2dc5e75800c61ac352e22d41c3 x86/mce: Reenable CMCI banks when swiching back to interrupt mode
a79da38494ec23f1a7d6ee734e07e9575fd18b58 x86/mce: Add a wrapper around mce_log() for injection
8b38937b7ab55e93065a14c88753b1fe83e93c60 x86/mce: Do not enter deferred errors into the generic pool twice
c0ec382e1928402031e754ad0391ecbdabb18c43 x86/RAS: Remove mce.usable_addr
feab21f8356bde572663e29c9d9e48c964292e05 x86/mce: Make usable address checks Intel-only
d90167a941f62860f35eb960e1012aa2d30e7e94 x86/mce: Ensure offline CPUs don't participate in rendezvous process
bbb78b8f3f4ea8eca14937b693bfe244838e1d4d kexec: align crash_notes allocation to make it be inside one physical page
35a4933a895927990772ae96fdcfd2f806929ee2 time: Avoid signed overflow in timekeeping_get_ns()
9babcd7929bc8967ae3bb6093f603b93c2f9958f sched, tracing: Stop/start critical timings around the idle=poll idle loop
f6db8347993256b58bd4746b0c4c5b935c32210d sched/stat: Simplify the sched_info accounting dependency
5968cecedd7a09f23e9fcb5f9fb4e893712f35ba sched/stat: Expose /proc/pid/schedstat if CONFIG_SCHED_INFO=y
399235dc6e95400a1322a9999e92073bc572f0c8 tpm, tpm_tis: fix tpm_tis ACPI detection issue with TPM 2.0
420b54de25828c45f3fc1f12d52d9657f5e90a53 mfd: watchdog: iTCO_wdt: Expose watchdog properties using platform data
9424693035a57961a8eb09e96aab315a7096535d i2c: i801: Create iTCO device on newer Intel PCHs
2c653d0ee2ae78ff3a174cc877a057c8afac7069 ksm: introduce ksm_max_page_sharing per page deduplication limit
a35bb4458e5e5c9dc19a0daa0629409285f3b25e scsi: report 'INQUIRY result too short' once per host
fd6ddfa4c1ddfb4a149b31845144b4cf3cbef54d fnic: check pci_map_single() return value
cdc5a3110e7c3ae793f367285789a6bc39c962dc i2c: i801: add Intel Lewisburg device IDs
6223a30935852369fd797f44eeafac445e422ac4 mfd: lpc_ich: Intel device IDs for PCH
1a1503c5396eb7f2edf4b8ef6067853014478c0c i2c: i801: Adding Intel Lewisburg support for iTCO
32bc201e1974976b7d3fea9a9b17bb7392ca6394 ipv6: allow routes to be configured with expire values
1d0ab253872cdd3d8e7913f59c266c7fd01771d0 net: add sk_fullsock() helper
b1f0a0e99c58fbd7ea053ca36ba623718272b618 net: add inet_sk_transparent() helper
271c3b9b7bdae09c7da467ac1ae96e3298754977 tcp: honour SO_BINDTODEVICE for TW_RST case too
1a24e04e4b50939daa3041682b38b82c896ca438 net: fix sk_mem_reclaim_partial()
a6c5ea4ccf0033591e6e476d7a273c0074c07aa7 tcp: rename sk_forced_wmem_schedule() to sk_forced_mem_schedule()
b8da51ebb1aa93908350f95efae73aecbc2e266c tcp: introduce tcp_under_memory_pressure()
197c949e7798fbf28cfadc69d9ca0c2abbf93191 udp: properly support MSG_PEEK with truncated buffers
114150d8f4fc9e7a003be2bdb0efd31796d241ff iommu: Allow building iova.c independently
1372324b328cd5dabaef5e345e37ad48c63df2a9 Update my email address
8539c7c16b970258e14761d8a1f7d10fe798031a iommu: Introduce iommu domain types
3f4b87b959eab362b89fce6ceb9d1badd102e5ea iommu/amd: Make use of domain_alloc and domain_free
00a77deb0f2f2c35cfeba183df98f92487d2e88b iommu/vt-d: Make use of domain_alloc and domain_free
89be34a1ced886880a3219f9d2ba2192dc738ef2 iommu: Remove domain_init and domain_free iommu_ops
4df4eab168c1c4058603be55a3169d4a45779cc0 iommu/vt-d: Really use upper context table when necessary
8da30142a21e2d7595510892a4c99cf294f7e6f1 iommu: Clean up after a failed bus initialization
53723dc59ff3ab504c739000b287ded49aeb2019 iommu: Allocate a default domain for iommu groups
e39cb8a3aa988a74433a3f26443b454cca033651 iommu: Make sure a device is always attached to a domain
35cf248f8860b8d2956516d6cdf7e57ff4ed4cbb iommu/amd: Implement dm_region call-backs
aafd8ba0ca74894b9397e412bbd7f8ea2662ead8 iommu/amd: Implement add_device and remove_device
0bb6e243d7fbb39fced5bd4a4c83eb49c6e820ce iommu/amd: Support IOMMU_DOMAIN_DMA type allocation
07f643a35d6b50f0f091444f07db1353188e787e iommu/amd: Support IOMMU_DOMAIN_IDENTITY type allocation
07ee86948c9111d49583be462500042fedfecb4a iommu/amd: Put IOMMUv2 devices in a direct mapped domain
343e9cac9c4a2715e8fa6b89b04e31e9fcbae5e3 iommu/amd: Get rid of device_dma_ops_init()
3a18404cd952ae529651f72a13e5d6ffee824c2e iommu/amd: Propagate errors from amd_iommu_init_api
657d32efe04197736ed328a34ba659b5172c8cce spi: checking for NULL instead of IS_ERR
4d58b8a6de6b8c3611f10124f83e90e5a2406437 iommu/amd: Handle errors returned from iommu_init_device
9f10e5bf62f7b9937afeee8ff0a491f87438e2a2 iommu/vt-d: Cleanup log messages
4158c2eca3c77ed3cccdcaeab153aad4e433369c iommu/vt-d: Detect pre enabled translation
091d42e43d21b6ca7ec39bf5f9e17bc0bd8d4312 iommu/vt-d: Copy translation tables from old kernel
dbcd861f252d727ac856a3da2cba8a480a36ab2e iommu/vt-d: Do not re-use domain-ids from the old kernel
cf484d0e6939ce287e65880ffe48860165fe5cb5 iommu/vt-d: Mark copied context entries
a87f491890e994dca4bee64690d7e5183a19264e iommu/vt-d: Don't do early domain assignment if kdump kernel
c3361f2f6e1d64bc7e7b8148bbd1c66b8007a898 iommu/vt-d: Don't copy translation tables if RTT bit needs to be changed
23256d0b350014a05c1edf0f355546aa1ff2eb55 iommu/vt-d: Move EIM detection to intel_prepare_irq_remapping
9e4e49dfde3bfac48d431893863ac3b9d3f3774a iommu/vt-d: Move QI initializationt to intel_setup_irq_remapping
c676f5876bc088ace35ece98042a3be6d8329530 iommu/vt-d: Disable IRQ remapping in intel_prepare_irq_remapping
d4d1c0f3d6a9558fe3857853afdf2f93e1679c03 iommu/vt-d: Set IRTA in intel_setup_irq_remapping
af3b358e48115588d905cc07a47b3f356e0d01d1 iommu/vt-d: Copy IR table from old kernel when in kdump mode
7c3c9876d98a76b97d16c0f46cb108e95542b212 iommu/vt-d: Make sure copied over IR entries are not reused
571dbbd4d044e11c78bc077acb3ccef4c77b096e iommu/vt-d: Don't disable IR when it was previously enabled
38667f18900afe172a4fe44279b132b4140f920f iommu: Ignore -ENODEV errors from add_device call-back
7a5a566eab48da7522f601f96aef3af102178046 iommu/amd: Introduce protection_domain_init() function
1e6a7b04c033fe76ec7fe746ef6a3b22ab9502b2 iommu/amd: Use iommu core for passthrough mode
323023245771589c53869396e3297c703d347852 iommu/amd: Use swiotlb in passthrough mode
6a716c90a51338009c3bc1f460829afaed8f922d hung_task debugging: Add tracepoint to report the hang
c6e5ca35c4685cd920b1d5279dbc9f4483d7dfd4 x86/asm/tsc: Inline native_read_tsc() and remove __native_read_tsc()
87be28aaf1458445d5f648688c2eec0f13b8f3b9 x86/asm/tsc: Replace rdtscll() with native_read_tsc()
ec69de52c648b1d9416a810943e68dbe9fe519f4 x86/asm/tsc: Remove the rdtscp() and rdtscpll() macros
4ea1636b04dbd66536fa387bae2eea463efc705b x86/asm/tsc: Rename native_read_tsc() to rdtsc()
03b9730b769fc4d87e40f6104f4c5b2e43889f19 x86/asm/tsc: Add rdtsc_ordered() and use it in trivial call sites
502dfeff239e8313bfbe906ca0a1a6827ac8481b x86/asm/tsc, x86/kvm: Drop open-coded barrier and use rdtsc_ordered() in kvmclock
ce3161106ab57afbfbe1c33d95bf4a569405983a i2c: i801: Fix the alignment of the device table
ce0d9f04699706843e8a494d12cf6c7663d478c7 audit: refactor audit_receive_msg() to clarify AUDIT_*_RULE* cases
e85322d21cfebeac64f58a204e9adc0bc5c1e46f audit: cull redundancy in audit_rule_change
7053aee26a3548ebaba046ae2e52396ccf56ac6c fsnotify: do not share events between notification groups
83c4c4b0a3aadc1ce7b5b2870ce1fc1f65498da0 fsnotify: remove .should_send_event callback
56b27cf6030dd36c56a5542ab8bfa406d337f083 fsnotify: remove pointless NULL initializers
13116dfd13c8c9d60ea04ece13419af2de8e2e37 fanotify: Fix use after free in mask checking
83c0e1b442b488571f4fef4a91c2fe52eed6c705 fsnotify: Do not return merged event from fsnotify_add_notify_event()
85816794240b9659e66e4d9b0df7c6e814e5f603 fanotify: Fix use after free for permission events
45a22f4c11fef4ecd5c61c0a299cd3f23d77be8e inotify: Fix reporting of cookies for inotify events
2513190a926f093dbdc301c68e6ade0bcf293f9a fsnotify: Fix detection whether overflow event is queued
482ef06c5e946aae360f247dc69471ec031e09d2 fanotify: Handle overflow in case of permission events
ff57cd5863cf3014c1c5ed62ce2715294f065b17 fsnotify: Allocate overflow events with proper type
34d99af52ad40bd498ba66970579a5bc1fb1a3bc audit: implement audit by executable
15ce414b82b07acb99afda6e4d9bd14f317b6011 fixup: audit: implement audit by executable
2df6f47150b6afbb258ed1d5c9ed78c23df05053 GFS2: Fix direct IO write rounding error
0b456f04bcdf5b1151136adaada158bfc26f1be7 cifs: convert printk(LEVEL...) to pr_<level>
ec7147a99e33a9e4abad6fc6e1b40d15df045d53 cifs: Ratelimit kernel log messages
bf4e6b4e757488dee1b6a581f49c7ac34cd217f8 block: Always check queue limits for cloned requests
f5bdd66c705484b4bc77eb914be15c1b7881fae7 Adding Intel Lewisburg device IDs for SATA
45bfb2e50471abbbfd83d40d28c986078b0d24ff perf: Add AUX area to ring buffer for raw data streams
0a4e38e64f5e91ce131cc42ee5bb3925377ec840 perf: Support high-order allocations for AUX space
6a279230391b63130070e0219b0ad09d34d28c89 perf: Add a capability for AUX_NO_SG pmus to do software double buffering
bed5b25ad9c8a2f5d735ef0bc746ec870c01c1b0 perf: Add a pmu capability for "exclusive" events
fdc2670666f40ab3e03143f04d1ebf4a05e2c24a perf: Add API for PMUs to write to the AUX area
2023a0d2829e521fe6ad6b9907f3f90bfbf57142 perf: Support overwrite mode for the AUX area
1a5941312414c71dece6717da9a0fa1303127afa perf: Add wakeup watermark control to the AUX area
ec0d7729bbaed4b9d2d3fada693278e13a3d1368 perf: Add ITRACE_START record to indicate that tracing has started
52ca9ced3f70779589e6ecc329baffe69d8f5f7a perf/x86/intel/pt: Add Intel PT PMU driver
8062382c8dbe2dc11d37e7f0b139508cf10de9d4 perf/x86/intel/bts: Add BTS PMU driver
2e54a5bdba107f80a9ba90065fb43bba0498147d perf/x86/intel/pt: Fix the 32-bit build
066450be419fa48007a9f29e19828f2a86198754 perf/x86/intel/pt: Clean up the control flow in pt_pmu_hw_init()
0c99241c93b8060441f3c8434848e54b5338f922 perf/x86/intel/pt: Fix and clean up error handling in pt_event_add()
f73ec48c90016f89d05726f6c48e66991a790fd7 perf/x86/intel/pt: Untangle pt_buffer_reset_markers()
74387bcb711b7b2ed65c0ed08953e13d4e31969e perf/x86/intel/pt: Kill an unused variable
cf302bfdf3039853fce812ae1ffd0ac24f5b468f perf/x86/intel/pt: Document pt_buffer_reset_markers()
5b1dbd17c0dee679b154ce47f534677b7e0f7ad6 perf/x86/intel/pt: Document pt_buffer_reset_offsets()
0a487aad2dfd088bcbbe1766944280b40ff969a5 perf/x86/intel/pt: Kill pt_is_running()
a82d24edfeaf1ed244cf8b969916840c6feb5165 perf/x86/intel/pt: Remove redundant variable declaration
aa319bcd366349c6f72fcd331da89d3d06090651 perf: Disallow sparse AUX allocations for non-SG PMUs in overwrite mode
b44a2b53becf2485f484bd6bb6c1d963ebc339f8 perf/x86/intel/pt: Fix a refactoring bug
ca41d24cf56458a699b44e918c5a19b7077df422 x86: perf_event_intel_bts.c: use arch_initcall to hook in enabling
5b00c1eb94e5936e5bf5cdd9ad1ddfbed0c39159 x86: perf_event_intel_pt.c: use arch_initcall to hook in enabling
6b099d9b040b0f3d0aec05b560d7caf879af5077 perf/x86/intel/bts: Fix DS area sharing with x86_pmu events
1b7b938f181742f899a2f31c280f79dabef6ddb6 perf/x86/intel: Fix PMI handling for Intel PT
45ac1403f564f411c6a383a2448688ba8dd705a4 perf: Add PERF_RECORD_SWITCH to indicate context switches
e9b3bd379c283577e102529bfb22484238be7c91 perf/x86/intel/bts: Drop redundant declarations
9a6694cfa2390181dec936a17c0d9d21ef7b08d9 perf/x86/intel/pt: Do not force sync packets on every schedule-in
b1bf72d6691cc33fc7763fc8ec77df42ca1a8702 perf/x86/intel/pt: Add new timing packet enables
d249872939bfa86c9cce44a56a8cbdbc7086519b perf/x86/intel/bts: Set event->hw.itrace_started in pmu::start to match the new logic
709bc871923c12b284424f9d47b99dc975ba8b29 perf/x86/intel/pt: Clean up files of Intel Processor Trace
d2878d642a4edd1d57c691dc3e4d7847cbf9d442 perf/x86/intel/bts: Disallow use by unprivileged users on paranoid systems
73fdeb66592ee80dffb16fb8a9b7378a00c1a826 perf/x86/intel/pt: Fix KVM warning due to doing rdmsr() before the CPUID test
24cc12b17679f8e9046746f92fd377f589efc163 perf/x86/intel/pt: Add interface to stop Intel PT logging
da06a43d3f3f3df87416f654fe15d29fecb5e321 perf, x86: Stop Intel PT before kdump starts
b064d0d88ae5280c7e878f79d0c9a8e2876a4d14 ovs: limit ovs recursions in ovs_execute_actions to not corrupt stack
45f6fad84cc305103b28d73482b344d7f5b76f39 ipv6: add complete rcu protection around np->opt
3e4006f0b86a5ae5eb0e8215f9a9e1db24506977 ipv6: tcp: add rcu locking in tcp_v6_send_synack()
6e7333d315a768170a59ac771297ee0551bdddbf net: add rx_nohandler stat counter
bdd1f9edacb5f5835d1e6276571bbbe5b88ded48 tcp: add tcpi_bytes_received to tcp_info
2efd055c53c06b7e89c167c98069bab9afce7e59 tcp: add tcpi_segs_in and tcpi_segs_out to tcp_info
d654976cbf852ee20612ee10dbe57cdacda9f452 tcp: fix a potential deadlock in tcp_get_info()
635682a14427d241bab7bbdeebb48a7d7b91638e sctp: Prevent soft lockup when sctp_accept() is called during a timeout event
415e3d3e90ce9e18727e8843ae343eda5a58fad6 unix: correctly track in-flight fds in sending process user_struct
7d267278a9ece963d77eefec61630223fce08c6c unix: avoid use-after-free in ep_remove_wait_queue
a5527dda344fff0514b7989ef7a755729769daa1 af_unix: Guard against other == sk in unix_dgram_sendmsg
7131799b145aa67984cc57e52d6379862c78afa3 mei: deprecate the mei_wd_state_independence_msg
180ea05bcedbd67bb22a426bb8d831075727e34a mei: me: add runtime pm framework
e13fa90ce42d8e7ee501426ea414c8ae4a5366ef mei: me: use runtime PG pm domain for non wakeable devices
f3d8e8788b4efbd13b6e888e85af51385d87d306 mei: move from misc to char device
d5d83f8abea13d0b50ee762276c6c900d1946264 mei: don't schedule suspend in pm idle
7efceb559579f11a05160ff92c12fc4c59a531d8 mei: fix comments
d320832f64666089a06778782e42fac29abd7bf7 mei: me_client lookup function to return me_client object
5ca2d3882d60c040285d0b45df731e11f5da7c64 mei: use list for me clients book keeping
25ca6472b590e87efba314892a76bd5629c8c989 mei: add me client remove functions
d880f3294d0576e79dfab4e2cd5a2eb62fe188f0 mei: add mei_me_cl_by_uuid_id function
89778d6e2a39027977e2de822808bd82afd6ea46 mei: add hbm commands return status values
2af89db1d61a872e5f2f1fb18d44cf5d8f5f6a2a mei: simplify handling of hbm client events
c44952003fc949e81ae0a0297e91894d8724f7fe mei: debugfs: adjust print buffer
2fbab57698051e68e59586bd20c17a1a487dfa63 mei: debugfs: add single buffer indicator
92db1555f3b9c9be257ef4070d87eb9410493cf3 mei: fix style warning: Missing a blank line after declarations
2190fe2a3f4a4e76f6c5ebfc1070b86b34f0345c mei: move mei_hbm_hdr function from hbm.h the hbm.c
3a7e9b6c661a23429b4a106d1ffa8aa5ce6c62bb mei: push all standard settings into mei_device_init
2bf94cabb199f73402a5ddefa4a7bf1a82aaeda5 mei: get rid of most of the pci dependencies in mei
1bd30b6a42610466bae2c133e68a8feb1004929c mei: move fw_status back to hw ops handlers
d08b8fc0dbdbe9bf7edeb46f7a856f993630664f mei: remove the reference to pdev from mei_device
4ad96db6ccdd8b777cff5fd4aa74ec1e86f1afce mei: push pci cfg structure me hw
1f180359f42fc6fda4600175c63f2a84f444cc92 mei: remove include to pci header from mei module files
0a01e97432a6ee5c5b78c0425dd7518a80f87b54 mei: trivial: fix errors in prints in comments
764c065a65c31a09340e71d2c41652e7e05bf083 mei: drop me_client_presentation_num
a8605ea2c20c2b97a54d7746c16ebef5ba29632a mei: fix KDoc documentation formatting
ce23139c6c2ee92d5eace20f6f10d716cf295a5b mei: fix kernel-doc warnings
480bd3c4ad30558dd26c16e3f8358e36522d9af0 mei: mei_txe_fw_sts can be static
ec83305032d9b29e439a9e56ca3644f97f638565 spi: Replace CONFIG_PM_RUNTIME with CONFIG_PM
140c7553231dcd119ebda8c27dec7f06aef7e323 mei: drop unneeded client NULL check in cb structure
3d32cf02241e307d3be92046a8cbd3deb8cda307 mei: use local cl variables in wd and amthif
4ade435214a59ac1f7b3dc97fb5486c74bd37c79 mei: debugfs: display also connectionless clients
d512c2098b1af6069e47ca457d7034d7cc82d420 mei: hbm: use client specific print functions
a176c24dc9a82b3304a31233bfc37e97c42de09b mei: nfc: clean nfc internal struct on host exit
18caeb70f3aa694a3147709e6425f749bfd04ea7 mei: kill cached host and me csr values
e88281edd4b4496600f2ab423ee2a2363a5e27f7 mei: txe: add cherrytrail device id
edca5ea3ff3323b4526d70642d115992df73c9bc mei: read and print all six FW status registers
55c4e6405d434e2db1e3fb3618b84741bb17d862 mei: export fw status registers through sysfs
39db74ce1aa83626a0a70ed2abf29a17598fff49 mei: bus: use ssize_t as the return type for send and receive
2e5df413becf6bd3854d1eb4f96542a53848bb27 mei: use uuid, me_addr tuple addressing also for flow control credits
79563db9ddd37908343103debf20da716ccc5ce4 mei: add reference counting for me clients
663b7ee9517eec6deea9a48c7a1392a9a34f7809 mei: me: release hw from reset only during the reset flow
b7d885145538ddedb1ae23b782ab7c7c0a856e9f mei: revamp me clients list handling
381a58c70985ca1256b0f51aa6694f79662bb166 mei: me: use io register wrappers consistently
a0a927d06d79d59c55ae7ac0b2fd7f3c0ea3c14c mei: me: add io register tracing
2d1995fce3f9b9a0bdb88d47144509e3b84db0f9 mei: me: change power gating function name conventions
3d33ff2457355a9dd3c3178b04ab6669882b306c mei: fix device reset on mei_cl_irq_read_msg allocation failure
db4756fd2f16efae8469dd1e37710919a0af9370 mei: iamthif: fix device reset on mei_amthif_irq_read_msg
4e097bc5d5c948ff8a60ac38a5826f5b6699603d mei: iamthif: remove useless iamthif_ioctl variable
c54bf3ab7536e062b507b625bfd2befb9b2cb841 mei: iamthif: send flow control as a regular client
8660172e1d6528be02eba78516ff8282e694bb26 mei: iamthif: use client write functions
331e4187017e5dc12fddfcca3f8041e5610ea23b mei: iamthif: use regular client read functions
5db7514d9333c920791538c850cfb9dbd19025f7 mei: use only one buffer in callback
bca67d681c4864b74fa5fae9ee47e562d1e272b1 mei: always initialize the callback with the intended operation type
03b8d3419fdfc02d1984a0db51c8b74426e12605 mei: add mei_cl_alloc_linked function
928fa6664b362aad70c16f04483414f60743e15e mei: simplify io callback disposal
a9bed61053af13c0768f82c9d1c8793515dd067c mei: allow read concurrency
b3de8e3719e582f3182bb504295e4a8e43c8c96f mei: bus: call device disable handler prior to disconnection
b43baf694fde30dc2db2386c347324d1a013f3d1 mei: free me client references on host init
d2b5851d8583e690eeb5ac8dfff5da92e1f1468f mei: trace: fix missing include to linux/device.h
1d9013f09203c694e2cba478b05afc6484d55180 mei: fix mei_poll operation
f3de9b635d93a3d268adda428e1df94091506a42 mei: use mei_cl_is_connected consistently
6a84d63d22a0ac79ab422b69ef2b4d75002c5641 mei: replace check for connection instead of transitioning
ea5505fabd3b59608750bfd3721d0f8bc5c8b0bb mei: trace: remove unused TRACE_SYSTEM_STRING
fe292283c23329218e384bffc6cb4bfa3fd92277 mei: txe: reduce suspend/resume time
3c66618295ca5fb0fde32e60e5f26557a5fcad5e mei: revamp client disconnection flow
0c53357ca4b3a03aafc211de663e84dba7c628e2 mei: revamp client connection
d49ed64a6e3f73975b7eb570c4ea8f37e87d7e5d mei: add a reference from the host client to the me client
a03d77f6ed7dc74d6244e4d8681ba669d7c414aa mei: fix flow control for single buffer clients
1df629ef4d553cc2bebde565462b36465521284f mei: support for fixed address clients
eeabfcf5a92ae3316b23f2da6a2bb5ba60a1b072 mei: connection to fixed address clients from user-space
9e23936279ad339bb1eeb73d298d95b4d986459e mei: drop iamthif_mtu from device structure
292f82c86c94c3d419c799e5e3e94e8cf34c69de mei: debug prints with client info in read
b8b730357967ac2ec49dcffd2dc2b354f0fdd011 mei: consume flow control on the first chunk of writing
a1809d38900cff016b2bac9d82766f7420f8eb5d mei: request autosuspend at the end of write
41c95b04385863f694fcf96e08994ebc722b7b9f mei: add also write waiting list to runtime pm blockers
c93b76b34b4d8dbe8e3443eb27e49ac60034342b mei: bus: report also uuid in module alias
007d64eb2232b91aa86b51abc1742936807e0bd4 mei: bus: add name and uuid into device attributes
be9b720a0ccba096d669bc86634f900b82b9bf71 NFC: mei_phy: move all nfc logic from mei driver to nfc
d4b78c7290dd0aa41596ad527877a6d70bf64110 mei: bus: kill mei_cl_ops
dbac993f6a6df24d5edc362667e524ba43543472 mei: export mei client device struct to external use
b144ce2d37619e05afdb0a15676500d76a64b1be mei: fix up uuid matching
c241e9b1d9ee7292d708d2298bc87f1455aad0c7 mei: reset flow control on the last client disconnection
3dc196eae1db548f05e53e5875ff87b8ff79f249 mei: me: wait for power gating exit confirmation
4f273959b850569253299987eee611927f048de7 mei: nfc: fix deadlock on shutdown/suspend path
154322f47376fed6ab1e4b350aa45fffa15a61aa mei: prevent unloading mei hw modules while the device is opened.
23253c31c6a7a3c5a437ec31830e2100484c0748 mei: do not access freed cb in blocking write
b37719c31f8448ba36abc218a96663b4a6c66eb6 mei: bus: fix drivers and devices names confusion
6238299774377b12c3e24507b100b2687eb5ea32 mei: bus: move driver api functions at the start of the file
7e280ab694e2885ee300de9cf5e7047c68230148 mei: bus: don't enable events implicitly in device enable
48168f4561f479403dbd38379dc8793488a22a6a mei: bus: report if event registration failed
688a9cce0c8e9116038586ae1cd6adabb10fa5aa mei: bus: revamp device matching
feb8cd0fe7d63fd259c28f8a52fc88745717c9ec mei: bus: revamp probe and remove functions
512f64d9f7467597388ffbd5a21589ee3f375d8b mei: bus: add reference to bus device in struct mei_cl_client
0ff0a8d853039aa60bba3ca3e04e4fb74584a736 mei: bus: add me client device list infrastructure
71ce789115f878a07e4a6c43d6006cea6aee1078 mei: bus: enable running fixup routines before device registration
5b6dca29b416d8992d52d814aa4be5d7fc97799d mei: bus: blacklist the nfc info client
dd070a1694c563bd7ba5239dd3038ff1420cf856 mei: bus: blacklist clients by number of connections
b39910c2e0ac7c3d0e2f1999b04308c771b1d8fc mei: bus: simplify how we build nfc bus name
6009595a66e460af0b170d736398c49395cb4499 mei: bus: link client devices instead of host clients
70ef835c84b3b88e274a53bf80a70940ae178a91 mei: support for dynamic clients
18901357e70ae29e3fd1c58712a6847c2ae52eae mei: disconnect on connection request timeout
d3c1c809c476ba248175a89156f7d625caf5f9a6 mei: define async notification hbm commands
965ae37ab86eb8cd327c5752dc9e2190d33db25c mei: implement async notification hbm messages
4d99877d871da0bbb924b2d7aa4ccb27e1ffa93a mei: enable async event notifications only from hbm version 2.0
51678ccb7b12dd428a84d466ff379a5e2d717f1f mei: add mei_cl_notify_request command
b38a362fad6686dd580a50590053a76ded601a0b mei: add a handler that waits for notification on event
3c7c8468e5d993dfe377a67e41cbb23cda93af9e mei: add async event notification ioctls
2c84c2970c1acf83827aa97ab0e6addc3d2aa960 mei: support polling for event notification
237092bf034a648611f61eb1f0965e9ba1b08871 mei: implement fasync for event notification
bb2ef9c39db2e3c2562b4e439b2b00dc42e2c026 mei: bus: add and call callback on notify event
71e117f28a6782fa2d31cce63340a9f18417afa4 mei: hbm: add new error code MEI_CL_CONN_NOT_ALLOWED
bb9f4d26dda7d2a875cadc0f7eedee3d65d3d1f5 mei: me: d0i3: add flag to indicate D0i3 support
1fa55b4e0e161b3d16b52f5bab1b39b39607bc27 mei: me: d0i3: enable d0i3 interrupts
63f75232dbb17badc31c3cc6cc1434763d5a6009 mei: hbm: reorganize the power gating responses
859ef2ffbfa785d273567467088cc8743f80b5bd mei: me: d0i3: add d0i3 enter/exit state machine
ebad6b945ee2e7e93454ba52030b93e08290317c mei: me: d0i3: move mei_me_hw_reset down in the file
b9a1fc99588c2861d4dc26d53b0f47b495cc2964 mei: me: d0i3: exit d0i3 on driver start and enter it on stop
1625c7ec96942b87eee1463aed6ec0595698b931 mei: me: add sunrise point device ids
eead035a35b59df9f956139cb2c73141751a246e mei: remove check on pm_runtime_active in __mei_cl_disconnect
84dfe03ae2112b817d5221575d59ba616dc0c3e2 mei: hbm: fix error in state check logic
59796edcf21c7c19d58a223001f9ed13746c51c2 mei: make modules.alias UUID information easier to read
40b7320ee413d0d1cc89c32c2a757fda56d27708 mei: bus: export client protocol version
b26864cad1c9f66f4966726ba7bc81d2b9b8f990 mei: bus: add client protocol version to the device alias
baeacd0376975bee0fdf6378e1c24587ab0b6ad4 mei: bus: export uuid and protocol version to mei_cl bus drivers
01a14edeaf0456c28e2b9af3afdc0807ec6c20bd mei: bus: export mei_cldev_enabled function
d49dc5e76fc917e5dfef76cb56fe3b3868deed5d mei: bus: use mei_cldev_ prefix for the API functions
ae48d74dfcb55d508404135ce2807d59e93bd46f mei: bus: use mei_cl_bus_ prefix consistently
cf094ebe4d8b9efbc83c8f13b1b8453a573cbb66 mei: me: fix d0i3 register offset in tracing
97ccf63f42721e758bb3cd1aa8967a89d26ed0bb mei: cancel driver workers only after client devices were removed
34af19132ed77b51f84274c23cef4ed520542319 mei: keep the device awake during reads in chunks
99c2658f00eafe1b7f7c38aeb487239b014867f9 mei: fix the KDoc formating
df7f5447d7b56c08684c7d285621e15e5c3c06b7 mei: bus: fix c&p issue in the kdoc
edf5600870121f83a20157d102ad12211c226ee0 mei: amthif: Do not compare bool to 0/1
2be7010cad9ed7a3b67a84c274db1e7bc70e0556 mei: Fix debugfs filename in error output
2da55cfd603d1c08dd1a396f943d6205eca47227 mei: bus: use correct lock ordering
213dd193fab8288e2b0b96dc93f974ec33ba2298 mei: bus: set the device name before running fixup
7b7a8665edd8db733980389b098530f9e4f630b2 direct-io: Implement generic deferred AIO completions
02afc27faec94c9e068517a22acf55400976c698 direct-io: Handle O_(D)SYNC AIO
2ba66237029d1ad6c1a5e2241b0ffbbfff55f750 xfs: don't allocate an ioend for direct I/O completions
a719370be52d1152a5f6e19c4af3b73280e25475 xfs: factor DIO write mapping from get_blocks
1fdca9c21198b2c2869086ac3629612492476f28 xfs: move DIO mapping size calculation
d5cc2e3f968ff60f247fdef15b04fac788ef46d2 xfs: DIO needs an ioend for writes
6dfa1b67e3b3a9bf536e2fb9ed99001c219822a5 xfs: handle DIO overwrite EOF update completion correctly
a06c277a13c3620c8ee9304891758f2fcff9c4a4 xfs: DIO writes within EOF don't need an ioend
4906e21545814e4129595118287a2f1415483c0b xfs: remove the flags argument to xfs_trans_cancel
70393313dd0b26a6a79e2737b6dff1f1937b936d xfs: saner xfs_trans_commit interface
f78c3901074e113a04150230087f1d76033bb0a4 xfs: fix xfs_log_done interface
b2a922cd6c2e3b9c2e36d48683ceb87a5bce8bb8 xfs: remove xfs_caddr_t
a6de82cab123beaf9406024943caa0242f0618b0 xfs: Correctly lock inode when removing suid and file capabilities
f41febd2eb5bdaa1c5685fe8a9b09276645013bc xfs: Use consistent logging message prefixes
d6077aa339d6580d12bd1089231eea2940383e32 xfs: Remove duplicate jumps to the same label
d43ac29be7a174f93a3d26cc1e68668fe86b782f xfs: return committed status from xfs_trans_roll()
6bc43af3d5f507254b8de2058ea51f6ec998ae52 xfs: ensure EFD trans aborts on log recovery extent free failure
d4a97a04227d5ba91b91888a016e2300861cfbc7 xfs: add missing bmap cancel calls in error paths
1b867d3ab562b6b03e46113fad3e87b05fbfbb85 xfs: relocate sparse inode mount warning
dbad7c993053d8f482a5f76270a93307537efd8e xfs: stop holding ILOCK over filldir callbacks
1a7ccad88d1bcebabc011b54a2f8615175e523fc xfs: fix error gotos in xfs_setattr_nonsize
5cb13dcd0fac071b45c4bebe1801a08ff0d89cad cancel the setfilesize transation when io error happen
67d8e04e345eafcb2940066f435815032eec467d xfs: invalidate cached acl if set directly via xattr
47e1bf640558237b79d3009fb7dfe157f12f4f7a xfs: invalidate cached acl if set via ioctl
edfb8ebce225a0638cf62591d4ccb502f052ffd4 xfs: Fix error path in xfs_get_acl
7a29ac474a47eb8cf212b45917683ae89d6fa13b xfs: give all workqueues rescuer threads
b94fb2d1780d7cd9d55b21e2bb879a54ed3074cc xfs: refactor and open code log record crc check
d7f37692e38798797d415153bc186afb2bbac645 xfs: return start block of first bad log record during recovery
6528250b712102a7481c28db535ef251459d1868 xfs: support a crc verification only log record pass
f6106efae5f4144b32f6c10de0dc3e7efc9181e3 xfs: eliminate committed arg from xfs_bmap_finish
b79f4a1c68bb99152d0785ee4ea3ab4396cdacc6 xfs: inode recovery readahead can race with inode buffer creation
7d6a13f023567d573ac362502bb702eda716e654 xfs: handle dquot buffer readahead in log recovery correctly
85bec5460ad8e05e0a8d70fb0f6750eb719ad092 xfs: log mount failures don't wait for buffers to be released
8e0bd4925bf693520295de403483efad4dc5cc16 xfs: fix endianness error when checking log block crc on big endian platforms
af055e37a91d215d7174d0b84c86795ca81086a7 xfs: fix xfs_log_ticket leak in xfs_end_io() after fs shutdown
0e2c4a00547a406aeb3bb5a3007cc90a62104980 net: cdc_ncm: remove ethtool ops
296e81f84c7ef7272cca1636386d55acc1af3238 net: cdc_ncm: improve bind error debug messages
64b8c8e573f614853c6cb828b2853da8e285377f net: cdc_ncm: cleanup a type issue in cdc_ncm_setup()
5aa73d5d72bddfcac253d06f84e80e38c5bb430c net: cdc_ncm: split out rx_max/tx_max update of setup
f8afb73da3758a9543f4b7c70caa59a18d864c9b net: cdc_ncm: factor out one-time device initialization
08c74fc901a2e91de762d99ba3d493281862e29a net: cdc_ncm: split .bind device initialization
68864abf08f06d7cbbabd03740beb383ccf5e5d5 net: cdc_ncm: support rx_max/tx_max updates when running
6c4e548ff36672eeb78f8288a2920d66fa4a6a66 net: cdc_ncm: use ethtool to tune coalescing settings
70559b8970e52aa9962dc823fd4498af06809544 net: cdc_ncm: use true max dgram count for header estimates
43e4c6dfc0fd781e68f20caf563a06f5c6ece995 net: cdc_ncm: set reasonable padding limits
beeecd42c3b41d17d0bf1d839db99274c287f514 net: cdc_ncm/cdc_mbim: adding NCM protocol statistics
50f1cb1cc8f50fa88dbeaf990ae2bae91b9ff306 net: cdc_ncm: use sane defaults for rx/tx buffers
fa83dbeee55865678025b6c1637ca08860209f87 net: cdc_ncm: remove redundant "disconnected" flag
7d10d2610cc02d432168ca0c5d964cd9e85c1b06 net: cdc_ncm: fix 64bit division build error
d22adbfb39d190adb43c954ed308f2865f5e481f net: cdc_ncm: fix typo in test for supported formats
1ba5d0ff36f765a571c83b55b13ec44f4050fb5b net: cdc_ncm: always reallocate tx_curr_skb when tx_max increases
f42763dbdf043c9996dfabf6d167eab28e016eb8 net: cdc_ncm: inform usbnet when rx buffers are reduced
289507d3364f96f4b8814726917d572f71350d87 net: cdc_ncm: use sysfs for rx/tx aggregation tuning
e368d27ff007f7405cf668679f48ab3174a53922 net: cdc_ncm: drop ethtool coalesce support
871578c90a9de5b785a815596dc7f8f0c147be19 net: cdc_ncm: export NCM Transfer Block (NTB) parameters
39eb7e0e8c88dee58f83df8aa9f7a58559fa45ee net: cdc_ncm: allow tuning min_tx_pkt
4a0e3e989d66bb7204b163d9cfaa7fa96d0f2023 cdc_ncm: Add support for moving NDP to end of NCM frame
7126cac426137633e470167524e7bcb590fd49b3 clockevents: Simplify locking
8c53daf63f56791ed47fc585206ef3049489612f clockevents: Move the tick_notify() switch case to clockevents_notify()
03e13cf5ee60584fe0c831682c67212effb7fca4 clockevents: Implement unbind functionality
521c42990e9d561ed5ed9f501f07639d0512b3c9 tick-common: Fix wrong check in tick_check_replacement()
32a158325acf12842764b1681f53903673f2f22e clockevents: export clockevents_unbind_device instead of clockevents_unbind
e086748c655ab99bac91b87d1bb59d9cc45867b9 Drivers: hv: vmbus: Teardown clockevent devices on module unload
2fdd8c8c5304901fa7dbb2ce5dbc90a1984cee3d parport: Add support for the WCH382 2S/1P multi-IO card
72a3c0e4e6624a77ee6eee0903f209185fe20647 tty: Add support for the WCH384 4S multi-IO card
7dde55787b43a8f2b4021916db38d90c03a2ec64 tty: Add support for PCIe WCH382 2S multi-IO card
93472aff802fd7b61f2209335207e9bd793012f7 perf/x86: Fix 'active_events' imbalance
665ca9187c4087736fa57b0e00bcf33ea601fb6f s390/stacktrace: fix save_stack_trace_tsk() for current task
9900c48c46d8bcf497972024c5fe366e6d9771f3 s390/stacktrace: fix address ranges for asynchronous and panic stack
66adce8f1f9f3bcd743a0e72c10aa850df8c5fa7 s390/stacktrace: save full stack traces
72d38b19781de457def0a62dfaa50134fc6e15f0 s390/vtime: correct scaled cputime of partially idle CPUs
0fbcf4af7c8362d4691f9388efa57d0b14b34225 ipmi: Convert the IPMI SI ACPI handling to a platform device
a7930899ca0082a33350b253c6ed34f67255f98e ipmi: Delete an unnecessary check before the function call "cleanup_one_si"
81d02b7f8c507f06299476a0e5b2aa677c5eaecb ipmi: Make some data const that was only read
82802f968bd3118af04eaeb3814c21d9813be527 ipmi: Don't flush messages in sender() in run-to-completion mode
acbd9ae70a94bdc626508f444879e19ebe1c421f ipmi: add of_device_id in MODULE_DEVICE_TABLE
66f44018300c5e6f53c9d30d6920332cf0e6a8f9 char: ipmi: Move MODULE_DEVICE_TABLE() to follow struct
99ee67351bedf23fe6b969dd94cc2847b397cd20 ipmi: constify some struct and char arrays
2155971a66f89924edb37c213251c4fe9f7776c0 iio: Drop owner assignment from i2c_driver
032c5e82847a2214c3196a90f0aeba0ce252de58 Driver for IBM System i/p VNIC protocol
6b2fd7efeb888fa781c1f767de6c36497ac1596b PCI/MSI/PPC: Remove arch_msi_check_device()
4b82ab18033a7e8434e568a6485e6e5c2e5adb02 powerpc/powernv: Initialize M64 PE in time
a113de373bcb7651196e29a49483c8e24e1e6aa9 powerpc/powernv: Remove pnv_pci_probe_mode()
38ae9ec40f06f3aef5c25314f432113cf2c1340a powerpc/pseries: Move controller ops from ppc_md to controller_ops
65ebf4b6370e8eabbf31076de022e49926dd4573 powerpc/powernv: Move controller ops from ppc_md to controller_ops
d28a0d94d752354d9830f8cc0426e9119f9f227d powerpc/pasemi: Move controller ops from ppc_md to controller_ops
467efc2e4fdc44e6cd4be7dd4adf01c14b3d148e powerpc: Remove shims for pci_controller_ops operations
771e569e8200ab6f5cdbcd6513f7a476718bb44d powerpc: dart_iommu: Remove check for controller_ops == NULL case
d33047fd7e7d93662622888681861ba84d43c506 powerpc/powernv: Fix early pci_controller_ops loading.
e059b105d157d0231e2f0a7fba996724d856114b powerpc: Add MSI operations to pci_controller_ops struct
d6381119a415316c5602710cf7fbf388d15d6d3c powerpc/powernv: Move MSI-related ops to pci_controller_ops
7e3d6c5a4be45769a9d439a4b62ad85cfe9e6754 powerpc/cell: Move MSI-related ops to pci_controller_ops
1d14b8755f0a7d8110f0bdc5b74987f8cc96c18e powerpc/pseries: Move MSI-related ops to pci_controller_ops
00e25397032f590d0a4d0ee89e236a4d1f8c0580 powerpc/fsl_msi: Move MSI-related ops to pci_controller_ops
b7eba2ffccb51d7676a4ddc26658687331feb6a3 powerpc/ppc4xx_msi: Move MSI-related ops to pci_controller_ops
14f95acda2f3238f3470beea0ddbf78081b3268d powerpc/mpic_u3msi: Move MSI-related ops to pci_controller_ops
1f88d5860e0b8244b28e21b63a521915e5c15313 powerpc: Remove MSI-related PCI controller ops from ppc_md
92ae03532619dc24fdb7a5ae8ea63785fbd39f86 powerpc/powernv: Specialise pci_controller_ops for each controller type
3405c2570fd68fc5ccc703c8de9c23abf5e95819 powerpc/pci: add dma_set_mask to pci_controller_ops
763d2d8df1ee2b92ff09cd58f6034021e2cabf6d powerpc/powernv: Move dma_set_mask() from pnv_phb to pci_controller_ops
7a8e6bbf8593a9395dd6c61f7c5f421570600017 powerpc/pci: Add shutdown hook to pci_controller_ops
5d2aa710e697244f5504125e4aa6e2cfcf6c4791 powerpc/powernv: Add support for Nvlink NPUs
419dbd5e1ff0e45a6e1d28c1f7b74d121d2a56e7 powerpc/powernv: Fix update of NVLink DMA mask
b521549a09ddfac3bed38e261168cda92d04ce81 powerpc/powernv: Change NPU PE# assignment
08f48f3234a79bca86c2283a166aec83bf52b265 powerpc/powernv: Reserve PE#0 on NPU
360743814c4082515581aa23ab1d8e699e1fbe88 powerpc/powernv: Honor the generic "no_64bit_msi" flag
2ae416b142b625c58c9ccb039aa3ef48ad0e9bae mm: new mm hook framework
4abad2ca4a4dbdd4a218c12451231ab628f2e60c mm: new arch_remap() hook
10183a69551f76702ac68bc74a437b25419c6de0 ceph: check OSD caps before read/write
7b06a826e7c52d77ce801e5960ecf0338eafe886 ceph: use empty snap context for uninline_data and get_pool_perm
5dda377cf0a6bd43f64a3c1efb670d7c668e7b29 ceph: set i_head_snapc when getting CEPH_CAP_FILE_WR reference
860560904962d08fd38666207c910065fe53e074 ceph: avoid sending unnessesary FLUSHSNAP message
a319bf56a617354e62cf5f774d2ca4e1a8a3bff3 libceph: store timeouts in jiffies, verify user input
5be73034771c8f18b241f1974803865a4de2cad1 ceph: simplify two mount_timeout sites
da819c8150c5b6e6a6a21ee41135b88f6cd18c3e ceph: fix directory fsync
f66fd9f0952187d274c13c136b74548f792c1925 ceph: pre-allocate data structure that tracks caps flushing
687265e5a885d6308f5d73e738efe3c2674fa218 ceph: switch some GFP_NOFS memory allocation to GFP_KERNEL
23078637e05460428f803be7d0f46908df8a970a ceph: fix queuing inode to mdsdir's snaprealm
e36d571d70c7f46b20c28d81025fd5fc044a8e22 ceph: no need to get parent inode in ceph_open
55b0b31cbc09f80db384671e22cdc94b2aa26b29 ceph: get inode size for each append write
5e804ac4824302efc3038e086cb21f2e93ab8900 ceph: don't invalidate page cache when inode is no longer used
68cd5b4b7612c2956d8553dfb39490b29f32566d ceph: make fsync() wait unsafe requests that created/modified inode
af5c269799feaef110e59ce55b497cdd08712b0c GFS2: Clean up reservation removal
b54e9a0b92d44843f6719ae22b0f6daf5b9b23b4 GFS2: Extract quota data from reservations structure (revert 5407e24)
a097dc7e24cba7980bc5e2df461a4ef228e97e59 GFS2: Make rgrp reservations part of the gfs2_inode structure
b58bf407ca4669a2dfcc00f5888ee719d9c34150 GFS2: Reduce size of incore inode
3218a3ec87f7d0063b48b10cf3d649ce75966223 quota: remove unused cmd argument from quota_quotaon()
8b37524962b9c54423374717786198f5c0820a28 quota: add new quotactl Q_XGETNEXTQUOTA
926132c0257a5a8d149a6a395cc3405e55420566 quota: add new quotactl Q_GETNEXTQUOTA
296c24e26ee3af2dbfecb482e6bc9560bd34c455 xfs: wire up Q_XGETNEXTQUOTA / get_nextdqblk
ba58148b6f0408b791e097ab2967c8f6da959fd9 quota: Fixup comments about return value of Q_[X]GETNEXTQUOTA
be6079461abf796e29d02b450a16908f4bf58f6c xfs: Split default quota limits by quota type
710585d4922fd315f2cada8fbe550ae8ed23e994 fs/proc: use a rb tree for the directory entries
2fc1e948e820bddf8a686c6e2989219b471d7982 fs/proc.c: use rb_entry_safe() instead of rb_entry()
b208d54b75399b276b05f9e70cce8d3a59a42547 procfs: fix error handling of proc_register()
4bacc9c9234c7c8eec44f5ed4e960d9f96fa0f01 overlayfs: Make f_path always point to the overlay and f_inode to the underlay
a068acf2ee77693e0bf39d6e07139ba704f461c3 fs: create and use seq_show_option for escaping
1c8a47df36d72ace8cf78eb6c228aa0f8027d3c2 ovl: fix open in stacked overlay
0f7ff2dabbc95ed7a8019d142274f0c7e083577d ovl: get rid of the dead code left from broken (and disabled) optimizations
cf9a6784f7c1b5ee2b9159a1246e327c331c5697 ovl: setattr: check permissions before copy-up
efec4b90f1a9b4c80827e4b8c0863334e13b0bf1 scsi: add support for multiple hardware queues
ba88d4338f226766f510e207911dde8c1875e072 intel_pstate: enable HWP per CPU
539342f60b93c9f98c47f75b63fe5b8b13c1d226 intel_pstate: decrease number of "HWP enabled" messages
c6148f8f8ceb18fd6ae3b637c56e8327b73873eb mei: me: remove artificial singleton requirement
04091142826e5823e31cc6418942ac447b3edb0a bridge: netfilter: Use ether_addr_copy
aff09ce303f83bd370772349238482ae422a2341 bridge: superfluous skb->nfct check in br_nf_dev_queue_xmit
960649d1923c31a7f771162fa0eef00210044262 netfilter: bridge: add generic packet logger
34666d467cbf1e2e3c7bb15a63eccfb582cdd71f netfilter: bridge: move br_netfilter out of the core
57f5877c11b244ff2315f4ba0e57b54fe013581f netfilter: bridge: build br_nf_core only if required
1109a90c01177e8f4a5fd95c5b685ad02f1fe9bb netfilter: use IS_ENABLED(CONFIG_BRIDGE_NETFILTER)
93fdd47e52f3f869a437319db9da1ea409acc07e bridge: Save frag_max_size between PRE_ROUTING and POST_ROUTING
56768644317c7746cb63f61573fcdc2355885707 netfilter: fix various sparse warnings
1b63d4b9b54cee6002757a8d20b537aa4037ae8f netfilter: nf_tables_bridge: set the pktinfo for IPv4/IPv6 traffic
9672723973f1e70189b8409eb2da189a980481c5 bridge: netfilter: Move sysctl-specific error code inside #ifdef
8bd63cf1a426e69bf4f611b08978f721e46c194f bridge: move mac header copying into br_netfilter
4a9d2f200862683d6680d5565f30c126625afe65 netfilter: bridge: move nf_bridge_update_protocol to where its used
7a8d831df5811f49957cc9b7976319973d088c34 netfilter: bridge: refactor conditional in br_nf_dev_queue_xmit
e5de75bf88858f5b3ab11e2504b86ec059f03102 netfilter: bridge: move DNAT helper to br_netfilter
1a4ba64d16a42c1b31d52b671accd7f9103e2626 netfilter: bridge: use rcu hook to resolve br_netfilter dependency
8d0451638ad3f7ccd5250c1dd90e06ad487b2703 netfilter: bridge: kill nf_bridge_pad
e70deecbf8e1562cac0b19f23848919e2f5d65aa netfilter: bridge: don't use nf_bridge_info data to store mac header
c737b7c4510026c200e14de51eb0006adea0fb2f netfilter: bridge: add helpers for fetching physin/outdev
383307838d41935841ba6b2e939b968326e2dea1 netfilter: bridge: add and use nf_bridge_info_get helper
3eaf402502e49ad9c58c73e8599c7c4f345d62da netfilter: bridge: start splitting mask into public/private chunks
a1e67951e6c0b11bb11c256f8e1c45ed51fcd760 netfilter: bridge: make BRNF_PKT_TYPE flag a bool
faecbb45ebefb20260ad4a631e011e93c896cb73 Revert "netfilter: bridge: query conntrack about skb dnat"
7fb48c5bc3100f7674a8e26f42c1518196500728 netfilter: bridge: neigh_head and physoutdev can't be used at same time
a9fcc6a41de947108898bc9807f25fa326467365 netfilter: bridge: free nf_bridge info on xmit
d39a33ed9b9ac0939a5b2ddc4dd3d283373bbe89 netfilter: bridge: refactor clearing BRNF_NF_BRIDGE_PREROUTING
8cae308d2bc81f95c320e7a345b92be6c238f510 netfilter: bridge: re-order br_nf_pre_routing_finish_ipv6()
72b31f7271df34c6aab36c01305287924826678f netfilter: bridge: detect NAT66 correctly and change MAC address
411ffb4fde80705a9a8db4c2d38dbeef6f5bd689 netfilter: bridge: refactor frag_max_size
77d574e7283cfcbb2c134f4431f77dff1c54423e netfilter: bridge: rename br_parse_ip_options
a4611d3b74b56658438ad1de4737a61a46be0fc0 netfilter: bridge: re-order check_hbh_len()
efb6de9b4ba0092b2c55f6a52d16294a8a698edd netfilter: bridge: forward IPv6 fragmented packets
33b1f31392861947fa2a2a57c3a39ab63b8c9f9d net: ip_fragment: remove BRIDGE_NETFILTER mtu special handling
d7b597421519d6f680eb8e152a0d8447466ee2d6 netfilter: bridge: restore vlan tag when refragmenting
c4e70a87d975d1f561a00abfe2d3cefa2a486c95 netfilter: bridge: rename br_netfilter.c to br_netfilter_hooks.c
230ac490f7fba2aea52914c69d14b15dd515e49c netfilter: bridge: split ipv6 code into separated file
a1bc1b356a9d21bf29bc7c873718b5cacdf119b4 netfilter: bridge: fix CONFIG_NF_DEFRAG_IPV4/6 related warnings/errors
dd302b59bde0149c20df7278c0d36c765e66afbd netfilter: bridge: don't leak skb in error paths
72b1e5e4cac72efa6b739b47e41f53e4520b4194 netfilter: bridge: reduce nf_bridge_info to 32 bytes again
63cdbc06b357dcb3a7104a421ee4a4550d7fadfd netfilter: bridge: fix routing of bridge frames with call-iptables=1
8d4df0b9300a2623559a8f616a152312454cada1 bridge: Pass net into br_nf_ip_fragment
6532948b2e7b75895c1264967342ae61dc97b4a6 bridge: Pass net into br_nf_push_frag_xmit
f2d74cf88c625bfa723c5ffb79885c852ee1f46b bridge: Cache net in br_nf_pre_routing_finish
c9322458119ecf2e5cf41dcb204aaf67238b2147 netfilter: bridge: avoid unused label warning
547c4b547e07dcc60874b6ef6252dd49ff74aec1 netfilter: bridge: fix NULL deref in physin/out ifindex helpers
86e8971800381c3a8d8d9327f83b1f97ccb04a4f netfilter: bridge: Use __in6_dev_get rather than in6_dev_get in br_validate_ipv6
df356d5e81b04dd51dd9f23f2bce7d73dd929899 bridge: Fix network header pointer for vlan tagged packets
9490f886b192964796285907d777ff00fba1fa0f af-unix: passcred support for sendpage
fb05e7a89f500cfc06ae277bdc911b281928995d net: don't wait for order-3 page allocation
07f4c90062f8fc7c8c26f8f95324cbe8fa3145a5 tcp/dccp: try to not exhaust ip_local_port_range in connect()
ed2dfd900992aa7b6b3d0abd8ec9a7e9d2c7f827 tcp/dccp: warn user for preferred ip_local_port_range
deed49df7390d5239024199e249190328f1651e7 route: check and remove route cache when we get route
0315e382704817b279e5693dca8ab9d89aa20b3f net: Fix behaviour of unreachable, blackhole and prohibit routes
6c4e5f9c9ff41ea997fd0f345b3b2b88c113eb68 Drivers: hv: vmbus:Update preferred vmbus protocol version to windows 10.
6ee5c61535a2df807069145970d3e7fa492a3fac storvsc: Rather than look for sets of specific protocol versions, make decisions based on ranges.
cb11feada9c049bc633831d3a5dcc50163f13b5e storvsc: use correct defaults for values determined by protocol negotiation
e6c4bc66842752110a66746e2d044fafc01e4800 storvsc: use storage protocol version to determine storage capabilities
f38b0dbb491a6987e198aa6b428db8692a6480f8 perf/x86/intel: Introduce PERF_RECORD_LOST_SAMPLES
a3d86542de8850be52e8589da22b24002941dfb7 perf/x86/intel/pebs: Add PEBSv3 decoding
57ffc5ca679f499f4704fd9b6a372916f59930ee perf: Fix AUX buffer refcounting
ee9397a6fb9bc4e52677f5e33eed4abee0f515e6 perf: Fix double-free of the AUX buffer
e9db1310d95c9d02763643108d51e47d9eb79ac9 perf record: Extend -m option for AUX area tracing mmap pages
2dd6d8a10a942c5fd8950d1046e172237d009c8e perf record: Add AUX area tracing Snapshot Mode support
9d9cad763ca79dd3697e9f2d1df648e37496582b perf tools: Configurable per thread proc map processing time out
2f7ebf2ec2a7b311318aae10b8373b0bd93001a7 perf/x86/intel: Add support for PEBSv3 profiling
a7b58d211ba18c9175b139e18b68c86a6bcc3c3f perf/x86/intel/lbr: Allow time stamp for free running PEBSv3
75f80859b130a1cc84e59e71295ce2dd51fe1c81 perf/x86/intel/pebs: Robustify PEBS buffer drain
c2ad6b51efc5f27d70ce952decd2a15679b83600 perf/ring-buffer: Clarify the use of page::private for high-order AUX allocations
f55fc2a57cc9ca3b1bb4fb8eb25b6e1989e5b993 perf: Restructure perf syscall point of no return
a723968c0ed36db676478c3d26078f13484fe01c perf: Fix u16 overflows
0286039f777ec0b6684868c34f7b16f97a069d6e perf tools: Add new PERF_RECORD_SWITCH event
b757bb09134f479a087ece08d2cd2a6ba31c9210 perf record: Add option --switch-events to select PERF_RECORD_SWITCH events
930a2e29758f865e3a7b34b8b3b37c08d40f0254 perf tools: Add support for event post configuration
ee4c75887d12bcd6ecd897291797d969256f39ca perf tools: Force period term to overload global settings
320677123905fd1dd122895cd5fb870ee9e1380b perf tools: Per-event time support
a18b027efe1a2a502d98a8d0ea0391a72bf3f696 perf top: Add branch annotation code to top
ab35a7d0ee59a36c9c567defe43c1adb72e9240c perf tools: Unset perf_event_attr::freq when period term is set
09af2a553577a6e53e40011a910be0f27ce56f3e perf record: Support per-event freq term
d457c96392bb418bd998f3ccf93e0e4c958fcd0f perf callchain: Per-event type selection support
f9db0d0f1b2cf030083c83d3ed3a4bbae6bdc8b7 perf callchain: Allow disabling call graphs per event
9e207ddfa20781e56465ce9a537f0a377c9d34fb perf report: Show call graph from reference events
835095653ebfe4b16596a30db1c4e7c414014b5e perf tools: Add a helper function to probe whether cpu-wide tracing is possible
b0063dbfb031a7c728ed0d9533257e8329292cf1 tools build: Add test for presence of __get_cpuid() gcc builtin
98e4619f2b2bb80d310feaac5589b44c000aecc1 perf tools: Add a test for decoding of new x86 instructions
3fe78d6af9e2f08c4014fd3ccbf9e1ff312dedf1 x86/insn: perf tools: Add new SHA instructions
ac1c8859a81e2fc45db1dbff30bdc572005734ca x86/insn: perf tools: Add new memory instructions
978260cdbec3e34a3dfb2277ffc0aa1809457362 x86/insn: perf tools: Add new memory protection keys instructions
f83b6b64eba155cfb43ab8a5d9c422c3e7f603e6 x86/insn: perf tools: Add new xsave instructions
c84974ed9fb672930929e0d20ea3c366635a54aa perf test: Add entry to test cpu topology
2e7ea3ab8282f6bb1d211d8af760a734c055f493 perf tools: Introduce new sort type "socket" for the processor socket
21394d948a0c7c451d4a4d68afed9a06c4969636 perf report: Introduce --socket-filter option
84734b06b63093cd44533f4caa43d4452fb11ec3 perf hists browser: Zoom in/out for processor socket
045b80dd03403b8e61a29460987c231317ebfbd4 perf hists browser: Use the map to determine if a DSO is being used as a kernel
ab6201d09b1840c7ffcd6606c1d3dae68b8b3048 tools build: Add Makefile.include
7c422f5572667fef0db38d2046ecce69dcf0afc8 tools build: Build fixdep helper from perf and basic libs
0b8891a8e62cb537b65ebc55cfbbb4ec22333c44 perf tools: Adds the config_term callback for different type events
ffeb883e5662e94b14948078e85812261277ad67 perf tools: Show proper error message for wrong terms of hw/sw events
e637d17757a10732fa5d573c18f20b3cd4d31245 perf tools: Enable event_config terms to tracepoint events
272ed29a91aea4397c05157dea7210dd7e81557a perf tools: Fix shadowed declaration in parse-events.c
208e7607459477432d3df52c32d4b961a96d4a94 perf report: Fix a bug on "--call-graph none" option
7f94af7a489fada17d28cc60e8f4409ce216bd6d perf tools: Introduce 'P' modifier to request max precision
d8b167f9d8af817073ee35cf904e2e527465dbc1 perf tests: Move x86 tests into arch directory
035827e9f2bd71a280f4eb58c65811d377ab2217 perf tests: Add Intel CQM test
27bf90bf0690f55c3679bcc4c325823cf1cfd19d perf tools: Fail properly in case pattern matching fails to find tracepoint
7727a92544b2a507b83fdc7d3e4b6f4545c9f364 perf ui browsers: Remove help messages about use of right and arrow keys
31eb4360546b4bd890f349db01295a173c09b0fb perf hists browser: Add 'm' key for context menu display
3a70fcd3a4db56731f67f0189514953c74257944 tools build: Fix cross compile build
1fe7a30028eeccd92e6fccfbeb8c5c3811b11b64 perf cpu_map: Add data arg to cpu_map__build_map callback
c71183697250b356be6c7c1abc2e9a74073e1dca perf tools: Introduce usage_with_options_msg()
1e5a29318ba8506f52a8d727b5c6a53143f9882a perf stat: Cache aggregated map entries in extra cpumap
374ce938aaeb481114b2a8fdedd261f9b2ff9b2b perf tools: Enable pre-event inherit setting by config terms
597bdeb4ab7396c43935eded15f82e3e100b3ff3 perf test: Keep test result clean if '-v' not set
e0547311133159bf95f7998726e4e4932d78d8ce perf stat: Make stat options global
b7f294b58adb02d928dccb04bd39cb789db09e1f perf hists browser: The dso can be obtained from popup_action->ms.map->dso
3e32cb2e0a12b6915056ff04601cf1bb9b44f967 mm: memcontrol: lockless page counters
71f87bee38edddb21d97895fa938744cf3f477bb mm: hugetlb_cgroup: convert to lockless page counters
5b1efc027c0b51ca3e76f4e00c83358f8349f543 kernel: res_counter: remove the unused API
24d404dc10b903da271e943a0f6b032dcbd177d8 mm: memcontrol: switch soft limit default back to infinity
cfe28c5d63d86b558a1bf1990db7a0aa55b2dec9 x86: mm: Remove x86 version of huge_pmd_share.
53313b2c9130a54dece8595c5a77fd787f340433 x86: mm: Remove general hugetlb code from x86.
e632a938d914d271bec26e570d36c755a1e35e4c mm: migrate: add hugepage migration code to move_pages()
c8721bbbdd36382de51cd6b7a56322e0acca2414 mm: memory-hotplug: enable memory hotplug to handle hugepage
83467efbdb7948146581a56cbd683a22a0684bbb mm: migrate: check movability of hugepage in unmap_and_move_huge_page()
86cdb465cf3a9d81058b517af05074157fa9dcdd mm: prepare to remove /proc/sys/vm/hugepages_treat_as_movable
32665f2bbfed2e325d37236d9b0071a11a69124e mm/migrate: correct failure handling if !hugepage_migration_support()
c177c81e09e517bbf75b67762cdab1b83aba6976 hugetlb: restrict hugepage_migration_support() to x86_64
100873d7a777b67ad35197c5a998b5e778f8bf3f hugetlb: rename hugepage_migration_support() to ..._supported()
4a705fef986231a3e7a6b1a6d3c37025f021f49f hugetlb: fix copy_hugetlb_page_range() to handle migration/hwpoisoned entry
a0f7a756c2f7543585657cdeeefdfcc11b567293 mm/rmap.c: fix pgoff calculation to handle hugepage correctly
b258d860652934b5e014408302335430b81bd7ce mm/rmap: calculate page offset when needed
0253d634e0803a8376a0d88efee0bf523d8673f9 mm: hugetlb: fix copy_hugetlb_page_range()
2ebba6b7e1d98724d266ae048d8af4f7ca95cafd mm: unmapped page migration avoid unmap+remap overhead
61f77eda9bbf0d2e922197ed2dcf88638a639ce5 mm/hugetlb: reduce arch dependent code around follow_huge_*
cbef8478bee55775ac312a574aad48af7bb9cf9f mm/hugetlb: pmd_huge() returns true for non-present hugepage
e66f17ff71772b209eed39de35aaa99ba819c93d mm/hugetlb: take page table lock in follow_huge_pmd()
97534127012f0e396eddea4691f4c9b170aed74b mm/hugetlb: use pmd_page() in follow_huge_pmd()
a88c769548047b21f76fd71e04b6a3300ff17160 mm: hugetlb: fix hugepage memory leak caused by wrong reserve count
3aaa76e125c1dd58c9b599baa8c6021896874c12 mm: migrate: hugetlb: putback destination hugepage to active list
099730d67417dfee273e9b10ac2560ca7fac7eb9 mm, hugetlb: use memory policy when available
e0ec90ee7e6f6cbaa6d59ffb48d2a7af5e80e61d mm, hugetlbfs: optimize when NUMA=n
7960aedde8cfa72e4caf488806ea7ea7d2fa8dba mm: remove duplicated call of get_pfn_range_for_nid
560dca27a6b36015e4f69a4ceba0ee5be0707c17 mm/memblock: use WARN_ONCE when MAX_NUMNODES passed as input parameter
f1af9d3af308145478749194346f11efad1134b2 mm/memblock: Do some refactoring, enhance API
6ccc72b87b83ece31c2a75bbe07f440b0378f7a9 lib: Add a generic cmdline parse function parse_option_str
febd5949e134e279bde927353dc705ce41b18e2d mm/memory hotplug: init the zone's size when calculating node totalpages
fc6daaf93151877748f8096af6b3fddb147f22d6 mm/memblock: add extra "flags" to memblock to allow selection of memory based on attribute
a3f5bafcc04aaf62990e0cf3ced1cc6d8dc6fe95 mm/memblock: allocate boot time data structures from mirrored memory
d91749c1dda71a7030c054a5ab8dc5419bc6730b mm/page_alloc.c: calculate zone_start_pfn at zone_spanned_pages_in_node()
342332e6a925e9ed015e5465062c38d2b86ec8f9 mm/page_alloc.c: introduce kernelcore=mirror option
b72d0ffb5dbc4070089b36230b98687ca4577cbc mm/page_alloc.c: rework code layout in memmap_init_zone()
3942d29918522ba6a393c19388301ec04df429cd mm/slab_common: allow NULL cache pointer in kmem_cache_destroy()
44d7175da6ea10e353e69b586bb68bbfef89e403 mm/dmapool: allow NULL `pool' pointer in dma_pool_destroy()
3dcc0571cd64816309765b7c7e4691a4cadf2ee7 mm: correctly update zone->managed_pages
d6d86c0a7f8ddc5b38cf089222cb1d9540762dc2 mm/balloon_compaction: redesign ballooned pages management
9d1ba8056474a208ed9efb7e58cd014795d9f818 mm/balloon_compaction: remove balloon mapping and flag AS_BALLOON_MAP
09316c09dde33aae14f34489d9e3d243ec0d5938 mm/balloon_compaction: add vmstat counters and kpageflags bit
b4d34037329f46ed818d3b0a6e1e23b9c8721f79 virtio_ballon: change stub of release_pages_by_pfn
997e120843e82609c8d99a9d5714e6cf91e14cbe virtio_balloon: do not change memory amount visible via /proc/meminfo
4d88e6f7d5ffc84e6094a47925870f4a130555c2 mm/balloon_compaction: fix deflation when compaction is disabled
f68b992bbb474641881932c61c92dcfa6f5b3689 virtio_balloon: fix race by fill and leak
722773afd83209d4088d30946bc274f547528a0b sysrq,rcu: suppress RCU stall warnings while sysrq runs
9fc5f24e43da17df75af75d446c9d89a4bcfce8c USB: EHCI: make ehci-tegra a separate driver
58d5b72088ccee4eafb12b5b4433471e7438c453 USB: Check for ARCH_EXYNOS separately
a1606c7dc64d8449676d7e840dd2cd0c4e0a0c57 net: Move MII out from under NET_CORE and hide it
d1e183c8dd38bfdd07e38a79577fe78124e63ab1 console/font: Refactor font support code selection logic
3fa4d7344be0afebd80382ffeea6b1787cccf971 usb: phy: rename nop_usb_xceiv => usb_phy_gen_xceiv
2cdcec4fedd6a5ee77bd551e6be7505f2230cd43 usb: host: add has_tdi_phy_lpm capability bit
7367d0b573d149550d2ae25c402984b98f8f422e drivers/net: Convert uses of compare_ether_addr to ether_addr_equal
a60f4f81e4738d1b20cdb9369060211278f177a5 USB: EHCI: make ehci-w90X900 a separate driver
de57a1547a4865d31094de95a029fed69edf760d USB: OHCI: make ohci-omap a separate driver
3a48fef18daa9c2db6ca66958da702eeba3dcef5 USB: OHCI: make ohci-omap3 a separate driver
1cc6ac59ffaa164c12003c5c3ce9590b0cba3b50 USB: OHCI: make ohci-spear a separate driver
e3825b48e2cc8014b3088f8bff1c5f35652f298d USB: OHCI: make ohci-at91 a separate driver
f23b71f3fe63b760a665406f453fa479ff90aad5 USB: OHCI: make ohci-s3c2410 a separate driver
30330b8fedba32e6bfeda8040311a11b84053c97 USB: OHCI: make ohci-nxp a separate driver
e2404434b6c2f98e6accc3fb220a508edb5ee87a USB: OHCI: make ohci-ep93xx a separate driver
b8ad5c370640886792487be7835810f204388c95 USB: OHCI: make ohci-pxa27x a separate driver
2d77f343343c4f38b8f94be1964bbbc6456a147f net: qmi_wwan: fix Cinterion PLXX product ID
29824c167bead38986d5e8d33008680c62478777 USB: host: Rename ehci-s5p to ehci-exynos
8c88126bbbb1c1e6c499fb3c211dba93656f02b5 treewide: Fix typo in Kconfig
ce97fef4235378108ed3bd96e1b3eab8fd0a1fbd net: qmi_wwan: Olivetti Olicard 200 support
e55f7cd2467631980f749fb0aef197c06ce38d6a usb: ohci: remove ep93xx bus glue platform driver
16735d022f72b20ddbb2274b8e109f69575e9b2b tree-wide: use reinit_completion instead of INIT_COMPLETION
2edb90ae421a0f65edcdef65ef9dd08e3228abbf ARM: at91: move at91_pmc.h to include/linux/clk/at91_pmc.h
103e127d1f8f985e8a662da6537ebc5e08902ee3 usb: hcd: Remove USB phy if needed
3c9740a117d40a74412775b5d3fe2b88a7635a0e usb: hcd: move controller wakeup setting initialization to individual driver
845c071b7853c0046693022f4e95c9cdd043e2db usb: musb: Rework USB and USB_GADGET dependency
44d942a908641e6486e66eb33e7ba9e6a969678a r8152: change the descriptor
a81ab36bf52d0ca3a32251a923be1dbced726141 drivers/net: delete non-required instances of include <linux/init.h>
b7945b77cd03094458f3624bc82a27e0d36e75d0 staging: usbip: convert usbip-host driver to usb_device_driver
a4aeb2117571292f4e002c54b3f91e138722bf7a ehci-platform: Add support for clks and phy passed through devicetree
915974c34ee056be918b7ea287a870766a0db6ba ehci-platform: Change compatible string from usb-ehci to generic-ehci
9b2b6a2d669c909dd0b125fc834da94bcfc0aee7 net: qmi_wwan: add support for Cinterion PXS8 and PHS8
e227867f12302633737bd2a48a10a9a72c0630cb treewide: Fix typo in Documentation/DocBook
c7dcec7dd463907c451048b04f30d1870fe5cacc Kconfig: Remove useless "default N" lines
77fa83cf7478202fac1520ca082ab8f9658d63b4 usb: don't use PREPARE_DELAYED_WORK
6080cd0e9239469524d2aa07250ad4b9f383960d staging: usbip: claim ports used by shared devices
9b6f0c4b98171f2a354e1e461fefa90ec2baafa6 usbcore: rename struct dev_state to struct usb_dev_state
4f1d4d54f99e9302058764833028712c3454266b r8152: support dumping the hw counters
4525beeb9aadbb9e1cb3e9e135f4371553f26a70 usb: phy: rename usb_nop_xceiv to usb_phy_generic
d7078df6be6e9e5e3ac354859f5b8d60114391b4 usb: phy: rename <linux/usb/usb_phy_gen_xceiv.h> to <linux/usb/usb_phy_generic.h>
2f36ff6915c6c00df8b9962d9c6c7992befcf8ce usb: phy: generic: allow multiples calls to usb_phy_generic_register()
42b59eba718a145e991ae02437f38d8aa8efe207 USB: OHCI: Export the OHCI hub control and status_data functions
37769939082ae0749405133e09eac2c3ccb8fcf0 USB: EHCI: Export the ehci_hub_control function
efc0b25c3add97717ece57bf5319792ca98f348e net: qmi_wwan: add Olivetti Olicard 500
6f10c5d1b1aeddb63d33070abb8bc5a177beeb1f net: qmi_wwan: add a number of Dell devices
c5ab571f81905568a59dce306df0181f33e00932 usb: phy: msm: reset controller is mandatory now
1dfa91aa5ba9650acf59b6310d8e78a162d56410 usb: common: rename phy-fsm-usb.c to usb-otg-fsm.c
973747928514bb636e3fe6a13b7ec6d6d73100f0 usb: host: xhci-plat: add support for the Armada 375/38x XHCI controllers
068413e9b7beb0843704ebaee3fb20f31c9a4cdf usb: ohci-da8xx can only be built-in
38e0c109404506266e33c29c77c2da39630954a4 usb: ohci: sort out dependencies for lpc32xx and omap
ba6de0f5304ccdc45ae260e7e0feb6e0ef2dd558 net: qmi_wwan: add Olivetti Olicard modems
f2af74123f8c5a735248547f4286a3adc28633c1 tools: ffs-test: convert to new descriptor format fixing compilation error
9ad7860450ea65c6bbcbd52a9a25b54b07e35941 Revert "tools: ffs-test: convert to new descriptor format fixing compilation error"
0b0302449110ca5ca4350458ed57b971fcb78ec1 r8152: wake up the device before dumping the hw counter
4ac8918f3a737c21d81e250e4194c12ea2b7eb04 usb: host: xhci-plat: add support for the R-Car H2 and M2 xHCI controllers
69b4b7a4148e94a3fe7f06f72ee70113a6c61837 r8152: support jumbo frame for RTL8153
c309b35171ddb5384cc3f2f9dc82a96dccc6b7f6 scsi: Remove CONFIG_SCSI_MULTI_LUN
16fae052074aa44ffa8c15b789719bd9611a1278 staging: keucr: remove driver
f54619f28fb6829612eb90a31cc55caf14c5fcca treewide: Fix typos in Kconfig
445f7f4d62628cb2971db884084d162ecb622ec7 r8152: fix the carrier off when autoresuming
df35d283e5a98b654a06301c5668fe85ab538452 r8152: support ethtool eee
905e300e1043f5ff513840d342df5c985b3dc08c USB: host: st: fix ehci/ohci driver selection
3d46e73dfdb840f460e5b06416965d132570ec33 usb: rename phy to usb_phy in HCD
0043325495222139daa0696db736f67658dc7770 usb: hcd: add generic PHY support
204c8704128943bf3f8b605f4b40bdc2b6bd89dc r8152: remove clearing bp
4ed9a3d455558406cad83d38764ee659de25851c USB: host: st: fix typo 'CONFIG_USB_EHCI_HCD_ST'
9d31a7b9f9963e97e067e72ef13492e6ace7d345 r8152: nway reset after setting eee
b54032736dbba2ae18995b930d0176bd8b0386c8 r8152: add mutex for hw settings
6cc69f2a404dea8641d6cf97c0fbe8d24579e259 r8152: return -EBUSY for runtime suspend
f37119c57ba7591b365b41697f971ca3e1f16ed1 r8152: rename tx_underun
e3bd1a81cd1e3f8ed961e642e97206d715db06c4 r8152: check WORK_ENABLE in suspend function
e47d92545c2972bcf3711e7db80f481e402163c7 usb: move the OTG state from the USB PHY to the OTG structure
19c1eac2685b62640ca2386a0a885ac2152668c8 usb: rename phy to usb_phy in OTG
48bcc18076df4e07ef86226ac6ce795f64c84f7f usb: add support to the generic PHY framework in OTG
ef44cb4226d132146e44f8ea562a16b27ff61126 usb: allow to supply the PHY in the drivers when using HCD
cd6e245a2d061a8367e37aaece32cf3fc922de80 usb: Remove references to non-existent PLAT_S5P symbol
01ed67dc70834d00d62b6e754ee0f76301fbc140 usb: core: need to call usb_phy_notify_connect after device setup
b2108f1e519e983e5dd5712b3a44f7366ab509e4 usb: core: notify disconnection when core detects disconnect
93ffbeab77ca6a49e075235faa04c8b032c9fdc1 r8152: disable the tasklet by default
55b6547547f9a6719b62fb07d656863142e028a8 r8152: modify rtl_ops_init
a1f83feecc9e754eac5286844e7d7dcc58a0aceb r8152: check RTL8152_UNPLUG and netif_running before autoresume
bb2bdeb83fb125c95e47fc7eca2a3e8f868e2a74 qmi_wwan: Add support for HP lt4112 LTE/HSPA+ Gobi 4G Modem
a32c99e7ab8410bae7c276a7e94ca84d108de034 HID: yet another buggy ELAN touchscreen
6774def6422f6eac53f1828c317bf3b08a8f5a60 treewide: fix typo in printk and Kconfig
7bcf4f605b4592452fba1e421b930909f7842310 r8152: adjust rtl_start_rx
2193dda5eec60373c7a061c129c6ab9d658f78e9 USB: host: Remove ehci-octeon and ohci-octeon drivers
ceb6c9c862c86423f41c1e20ecf8d454f837f519 USB / PM: Drop CONFIG_PM_RUNTIME from the USB core
d9a28c5b4c9a69f3036743bed36902b45dd39f1d r8152: redefine REALTEK_USB_DEVICE
1b3e3aa6c5c7a86ae09459f5734283b991dd7939 PM / Kconfig: Replace PM_RUNTIME with PM in dependencies
531ad4282e5105db984f1706e1a21799157655a3 qmi_wwan: Set random MAC on devices with buggy fw
6341e62b212a2541efb0160c470e90bd226d5496 kconfig: use bool instead of boolean for type definition attributes
314b41b16a71ee824f55e2791fcb92997672da37 USB: ehci-platform: Support ehci reset after resume quirk
7acc9973e3c42de9926b28eec8ae3434dfdde3be usb: phy: generic: add vbus support
aa2e092671c84b149ba0f9ad7185ace357fb4a33 r8152: call rtl_start_rx after netif_carrier_on
d823ab68fbb0fa504a2490bd499ac921bdf497d8 r8152: replace tasklet with NAPI
c99e76c55f68eaa0c307ba25803c4e59c2fca1ca USB: host: Introduce flag to enable use of 64-bit dma_mask for ehci-platform
4b1a577d41c99f2aa548e8de3effe1033d9ca40b usb: isp1760: Move core code to isp1760-core.c
0316ca6319b98e485325be98a47d08fed07ead43 usb: isp1760: Add device controller support
e1a2ca92727500ea8d25326216d700bed6176117 r8152: adjust rx_bottom
51d979faa274d2a924907bdf59f88a216dcc19a9 r8152: check linking status with netif_carrier_ok
f6a55884d76c5f493538866793fddd47b4ecf646 USB / PM: Remove unneeded #ifdef and associated dead code
9e763e0f4f94d5f9ac8928867a4399ec3b3c7e33 mm: use %*pb[l] to print bitmaps including cpumasks and nodemasks
396e2e235af79b39d605ad6259f366e502e21959 r8152: change rx early size when the mtu is changed
efb3dd88f4490b752e3c26bbc3e40391758426d6 r8152: support setting rx coalesce
6588af614e7b79294fbcd4a666a7422c0c854e80 usbnet: Fix tx_packets stat for FLAG_MULTI_FRAME drivers
519983b129477cb8e0bbea334c72ecd4486b2d21 net: usb: Use eth_<foo>_addr instead of memset
a886bd92267c9e3d5c912860c6fb5a68479a7643 usb: common: otg-fsm: only signal connect after switching to peripheral
2f8a467a11aeec61f5077cd337b4efe74847e1d3 usb: otg-fsm: move 2 otg fsm timers definition to otg_fsm_timer
7a1e890e2168e33fb62d84528e996b8b4b478fea usbnet: Fix tx_bytes statistic running backward in cdc_ncm
347eec348a9b0ba6968145cc7b1995d2475ae31b net/usb/r8152: add device id for Lenovo TP USB 3.0 Ethernet
1006da19ea6603135773a79f09e4e931be460429 drivers/net/usb: Add support for 'Lenovo OneLink Pro Dock'
44f6731d8b68fa02f5ed65eaceac41f8c3c9279e cdc_ncm: Fix tx_bytes statistics
b4af279a7cba5cc1f665485e8ecdf272f1ba0cc5 powerpc/pseries: Limit EPOW reset event warnings
fbbe07011581990ef74dfac06dc8511b1a14badb perf/core: Add a 'flags' parameter to the PMU transactional interfaces
4a00c16e552ea5e71756cd29cd2df7557ec9cac4 perf/core: Define PERF_PMU_TXN_READ interface
8f3e5684d3fbd91ead283916676fa3dac22615e5 perf/core: Drop PERF_EVENT_TXN
8ba559fd09bcf4e87faad3efa465dacf04c076c9 AHCI: Remove obsolete Intel Lewisburg SATA RAID device IDs
43717aadd2bc87fb10fbf1cd815c1cbae9bb95b3 intel_pstate: Fix user input of min/max to legal policy region
6a35fc2d6c22bafe45117cdc5d8cee332244edbb cpufreq: intel_pstate: get P1 from TAR when available
51443fbf3d2cde16011b994252c8004ebcd66fb0 cpufreq: intel_pstate: Fix intel_pstate powersave min_perf_pct value
938d21a2a6370241c86d515ca574aaaa9e8812f2 cpufreq: intel_pstate: Replace BYT with ATOM
584ee3dcb1d6232857c1e38bb28d9f6bf0ec89f5 intel_pstate: Fix "performance" mode behavior with HWP enabled
157386b6fc1465f292b66c4133409033650ad335 cpufreq: intel_pstate: Configurable algorithm to get target pstate
e70eed2b64545ab5c9d2f4d43372d79762f1b985 cpufreq: intel_pstate: Account for non C0 time
88b7b7c0c2ba2c1f2c589ee883050717fe91af22 cpufreq: intel_pstate: Minor cleanup for FRAC_BITS
b7ce2277f087fd052e7e1bbf432f7fecbee82bb6 sched/cputime: Convert vtime_seqlock to seqcount
ff9a9b4c4334b53b52ee9279f30bd5dd92ea9bdd sched, time: Switch VIRT_CPU_ACCOUNTING_GEN to jiffy granularity
bbd3e064362e5057cc4799ba2e4d68c7593e490b block: add an API for Persistent Reservations
d6d55f0b9d900673548515614b56ab55aa2c51f8 perf/x86/amd: AMD support for bp_len > HW_BREAKPOINT_LEN_8
ad33bb04b2a6cee6c1f99fabb15cddbf93ff0433 mm: thp: fix SMP race condition between THP page fault and MADV_DONTNEED
97defe1ecf868b8127f8e62395499d6a06e4c4b1 rhashtable: Per bucket locks & deferred expansion/shrinking
f89bd6f87a53ce5a7d60662429591ebac2745c10 rhashtable: Supports for nulls marker
86b35b64ed7b6b38305dee67a0f2ddff2ca5455d rhashtable: fix missing header
efb975a67ea7846b966080f999589de570686aa0 rhashtable: optimize rhashtable_lookup routine
54c5b7d311c8e1801f9dcce9f388a7420a25fa90 rhashtable: introduce rhashtable_wakeup_worker helper function
db30485408326a6f466a843b291b23535f63eda0 rhashtable: involve rhashtable_lookup_insert routine
bd6d4db552ceb52fb19890a454836dcda59743ce rhashtable: future table needs to be traversed when remove an object
c0c09bfdc4150b3918526660768585cd477adf35 rhashtable: avoid unnecessary wakeup for worker queue
545a148e43bed67618cc90b66f9864fba0878890 rhashtable: initialize atomic nelems variable
7a868d1e9ab3c534c5ad44e3e5dc46753a1e5636 rhashtable: involve rhashtable_lookup_compare_insert routine
c5adde9468b0714a051eac7f9666f23eb10b61f7 netlink: eliminate nl_sk_hash_lock
6f73d3b13dc5e16ae06025cd1b12a36b2857caa2 rhashtable: add a note for grow and shrink decision functions
80ca8c3a84c74a87977558861bb8eef650732912 rhashtable: Lower/upper bucket may map to same lock while shrinking
57699a40b4f2694d3ee63fd5e6465ec8f600b620 rhashtable: Fix race in rhashtable_destroy() and use regular work_struct
919d9db9521862d01712d9be25cd6ebfcc353eed netlink: Fix netlink_insert EADDRINUSE error
607954b084d4ad5e6a2e0f795de7803d9c6ae37f rhashtable: fix rht_for_each_entry_safe() endless loop
fe6a043c535acfec8f8e554536c87923dcb45097 rhashtable: rhashtable_remove() must unlink in both tbl and future_tbl
8ea65f4a2dfaaf494ef42a16cbf2fea39b07450f netlink: Kill redundant net argument in netlink_insert
9d6dbe1bbaf8bf03804c164fb67a98646bf2f622 rhashtable: Make selftest modular
28134a53d624ae7e90fff8500b25b3add4d40b92 rhashtable: Fix potential crash on destroy in rhashtable_shrink
f2dba9c6ff0d9a515b4c3f1b037cd65c8b2a868c rhashtable: Introduce rhashtable_walk_*
c88455ce50ae4224d84960ce2baa53e61580df27 rhashtable: key_hashfn() must return full hash value
a5ec68e3b8f2c95ea1a5d23dd543abbe0c8d0624 rhashtable: Use a single bucket lock for sibling buckets
a03eaec0df52a0f1fd37ebf7dcb2dc505d891255 rhashtable: Dump bucket tables on locking violation under PROVE_LOCKING
7cd10db8de2b6a32ccabef2e0e01c7444faa49d4 rhashtable: Add more lock verification
cf52d52f9ccb9966ac019d9f79824195583e3e6c rhashtable: Avoid bucket cross reference after removal
020219a69d40a205dad12b0ea1e6a46153793368 rhashtable: Fix remove logic to avoid cross references between buckets
342100d937ed6e5faf1e7ee7dcd7b3935fec8877 rhashtable: don't test for shrink on insert, expansion on delete
6dd0c1655be26345960a6bae574c7dc4648611d3 rhashtable: allow to unload test module
b9ebafbe8cfeeddec881504c446cccd0d87a51b6 rhashtable: ensure cache line alignment on bucket_table
b7f5e5c7f8cedf6b69c9702d448cdf78ffc45c7b rhashtable: don't allocate ht structure on stack in test_rht_init
71bb0012c38fbd090a56b3cb96e9f626c415d264 rhashtable: initialize all rhashtable walker members
8331de75cb13fc907ceba78e698c42150e61dda9 rhashtable: unconditionally grow when max_shift is not specified
4c4b52d9b2df45e8216d3e30b5452e4a364d2cac rhashtable: remove indirection for grow/shrink decision functions
5beb5c90c1f54d745da040aa05634a5830ba4a4c rhashtable: use cond_resched()
988dfbd795cf08b00576c1ced4210281b2bccffc rhashtable: Move hash_rnd into bucket_table
aa34a6cb0478842452bac58edb50d3ef9e178c92 rhashtable: Add arbitrary rehash function
84ed82b74dcb23d96cee2987612a677ffd2b5470 rhashtable: Add annotation to nested lock
8d2b18793d16e4186f00b07d031a25537c4cefb9 rhashtable: Move masking back into key_hashfn
eca849333017cab1cd02c8fc9187962fa629b27d rhashtable: Use head_hashfn instead of obj_raw_hashfn
cffaa9cb922472936b269017afdd3f147cb6f380 rhashtable: Remove key length argument to key_hashfn
ec9f71c59e00388efc1337307511b59cc4c48394 rhashtable: Remove obj_raw_hashfn
9497df88ab5567daa001829051c5f87161a81ff0 rhashtable: Fix reader/rehash race
a5b6846f9e1a080493210013385c28faecee36f0 rhashtable: kill ht->shift atomic operations
393619474ec0ba2a16dee12ec78fd43164f1e9b7 rhashtable: Fix read-side crash during rehash
eddee5ba34eb6c9890ef106f19ead2b370e5342f rhashtable: Fix walker behaviour during rehash
8f2484bdb55daa53ecaddb5fa4c298e3d262b69e rhashtable: Use SINGLE_DEPTH_NESTING
5269b53da4d432b0fbf755bd423c807bf6bd4aa0 rhashtable: Move seed init into bucket_table_alloc
9d901bc05153bbf33b5da2cd6266865e531f0545 rhashtable: Free bucket tables asynchronously after rehash
63d512d0cffcae40505d9448abd509972465e846 rhashtable: Add rehash counter to bucket_table
c4db8848af6af92f90462258603be844baeab44d rhashtable: Move future_tbl into struct bucket_table
963ecbd41a1026d99ec7537c050867428c397b89 rhashtable: Fix use-after-free in rhashtable_walk_stop
565e86404e4c40e03f602ef0d6d490328f28c493 rhashtable: Fix rhashtable_remove failures
617011e7d5559046e4fc8f87793c8a5d9c3431b0 rhashtable: Avoid calculating hash again to unlock
db4374f48a6c31c02f6ad1d19b257c186b443c0c rhashtable: Annotate RCU locking of walkers
6aebd940840a4d3a0a8ffc5883d3892f4bd61e90 rhashtable: Remove shift from bucket_table
c2e213cff701fce71a0aba8de82f2c2a4acf52ae rhashtable: Introduce max_size/min_size
b06eee59b1e547f0f401820388ca68c624298a64 netlink: Use rhashtable max_size instead of max_shift
4f509df4f50e72cba65c3b58241a17639b2d9b49 test_rhashtable: Use rhashtable max_size instead of max_shift
e2e21c1c5808e5dfd88d3606cd6386cf85f6f5b1 rhashtable: Remove max_shift and min_shift
a998f712f77ea4892d3fcf24e0a67603e63da128 rhashtable: Round up/down min/max_size to ensure we respect limit
488fb86ee91d3b1182c2e30a9f9b45da14eda46f rhashtable: Make rhashtable_init params argument const
02fd97c3d4a8a14e222b0021c366db7041d28743 rhashtable: Allow hash/comparison functions to be inlined
c428ecd1a21f1457ca3beb4df71b8a079c410e41 netlink: Move namespace into hash key
fa3773211eb61f2a08ffc399a98af53594ba1509 netfilter: Convert nft_hash to inlined rhashtable
b182aa6e967e8272a3ba718a89697f661915be7a test_rhashtable: Use inlined rhashtable interface
dc0ee268d85026530720d8c874716287b7ede25b rhashtable: Rip out obsolete out-of-line interface
6626af692692b52c8f9e20ad8201a3255e5ab25b rhashtable: Fix undeclared EEXIST build error on ia64
d88252f9bb74d266653542b753f9ab404e8b88db rhashtable: Add barrier to ensure we see new tables in walker
de91b25c8011089f5dd99b9d24743db1f550ca4b rhashtable: Eliminate unnecessary branch in rht_key_hashfn
31ccde2dacea8375c3a7d6fffbf0060ee0d40214 rhashtable: Allow hashfn to be unset
11b58ba146ccd7b105c4962c75f2e744053c85bc netlink: Use default rhashtable hashfn
18093d1c0d1e032142ee24825678b0a8977d74ba rhashtable: Shrink to fit
b824478b2145be78ac19e1cf44e2b9036c7a9608 rhashtable: Add multiple rehash support
b9ecfdaa1090b5988422eaf5348ea1954d2d7219 rhashtable: Allow GFP_ATOMIC bucket table allocation
ccd57b1bd32460d27bbb9c599e795628a3c66983 rhashtable: Add immediate rehash during insertion
ba7c95ea3870fe7b847466d39a049ab6f156aa2c rhashtable: Fix sleeping inside RCU critical section in walk_stop
27ed44a5d6d88897002b75f53004d4c565a5aab6 rhashtable: Add comment on choice of elasticity value
58be8a583d8d316448bafa5926414cfb83c02dec rhashtable: Extend RCU read lock into rhashtable_insert_rehash()
299e5c32a37a6bca8175db177117467bd1ce970a rhashtable: Use 'unsigned int' consistently
ac833bddb591b9c7a0609f440f196375be184044 rhashtable: Mark internal/private inline functions as such
6b6f302ceda7a052dab545d6c69abf5f0d4a6cab rhashtable: Add rhashtable_free_and_destroy()
b5e2c150ac914f28a28833b57397bec0b0a2bd5f rhashtable: Disable automatic shrinking by default
49f7b33e63fec9d16e7ee62ba8f8ab4159cbdc26 rhashtable: provide len to obj_hashfn
b81b7be6ae830a507d15cf4fc626be02cc9ab79b test_rhashtable: Remove bogus max_size setting
e2307ed6cbe71c74e291681aaa7e92ab98bc3177 rhashtable: Schedule async resize when sync realloc fails
a87b9ebf1709687ff213091d0fdb4254b1564803 rhashtable: Do not schedule more than one rehash if we can't grow further
1d8dc3d3c8f1d8ee1da9d54c5d7c8694419ade42 rhashtable: don't attempt to grow when at max_size
f54e84b6e9f07a93a5f27f55bf28982c06f45109 rhashtable-test: Remove unused TEST_NEXPANDS
1aa661f5c3df15432530f01f1023d556fa81b95d rhashtable-test: Measure time to insert, remove & traverse entries
c2c8a901660dcc647ffe5f6dcb1e4c500a5442aa rhashtable-test: Get rid of ptr in test_obj structure
fcc570207c1e7c485050adbab1e5d7808eab0fd4 rhashtable-test: Do not allocate individual test objects
246b23a7695bd5a457aa51a36a948cce53d1d477 rhashtable-test: Use walker to test bucket statistics
67b7cbf4203f7e6682a2dc17fc83a6a6cd5a3376 rhashtable-test: Detect insertion failures
c936a79fc01ef1115a46f940944ebe7385845673 rhashtable: Simplify iterator code
6decd63acacb3b8de81ccc435cf9acea8b6bdfeb rhashtable-test: Fix 64bit division
07ee0722bf941960fb3888f9c9b5839473372fd1 rhashtable: Add cap on number of elements in hash table
c0bb07df7d981e4091432754e30c9c720e2c0c78 netlink: Reset portid after netlink_insert failure
142b942a75cb10ede1b42bf85368d41449ab4e3b rhashtable: fix for resize events during table walk
685a015e44dcd4db50ada60a9a2806659c165d9e rhashtable: Allow other tasks to be scheduled in large lookup loops
f4a3e90ba5739cfd761b6befadae9728bd3641ed rhashtable-test: extend to test concurrency
7def0f952eccdd0edb3c504f4dab35ee0d3aba1f lib: fix data race in rhashtable_rehash_one
3cf92222a39cc7842c373dd90a0c204fa7d7cced rhashtable: Prevent spurious EBUSY errors on insertion
46c749eac979c0bf280f760971367e9babe4d05f rhashtable: Remove unnecessary wmb for future_tbl
3502cad73c4bbf8f6365d539e814159275252c59 rhashtable: add function to replace an element
c6ff5268293ef98e48a99597e765ffc417e39fa5 rhashtable: Fix walker list corruption
3a324606bbabfc30084ce9d08169910773ba9a92 rhashtable: Enforce minimum size on initial hash table
179ccc0a73641ffd24e44ff10a7bd494efe98d8d rhashtable: Kill harmless RCU warning in rhashtable_walk_init
1f770c0a09da855a2b51af6d19de97fb955eca85 netlink: Fix autobind race condition that leads to zero port ID
4f520900522fd596e336c07e9aafd5b7a9564235 netlink: have netlink per-protocol bind function return an error code.
da314c9923fed553a007785a901fd395b7eb6c19 netlink: Replace rhash_portid with bound
6251edd932ce3faadbfe27b0a0fe79780e0972e9 netlink: Properly unbind in error conditions.
64bdcbc449105377dd60c8da97cfc1663b39562c scsi: add use_cmd_list flag
e80d1c805a3b2f0ad2081369be5dc5deedd5ee59 dm: do not override error code returned from dm_get_device()
6f65985e2636c0b170eade6a72d216632f065e26 dm: drop NULL test before kmem_cache_destroy() and mempool_destroy()
00272c854ee17b804ce81ef706f611dac17f4f89 dm linear: remove redundant target name from error messages
fe3265b180d6282648f03bc6ac3958c733df01c2 dm: don't save and restore bi_private
86bad0c7071c24efee0a395d8b622764bdd24320 dm bufio: store stacktrace in buffers to help find buffer leaks
6dbeda3469ced777bc3138ed5918f7ae79670b7b dm verity: clean up duplicate hashing code
ffa393807cd69656d5b6bc9d9622e205071cbab8 dm verity: factor out structures and functions useful to separate object
e56f81e0b01ef4e45292d8c1e19edd4d09724e14 dm: refactor ioctl handling
5bbbfdf685657771fda05b926b28ca0f79163a28 dm: fix ioctl retry termination with signal
647a20d5cad7477033bc021ec9dd75edf4bbf9a0 dm: do not reuse dm_blk_ioctl block_device input as local variable
43e43c9ea60a7a1831ec823773e924d2dadefd44 dm mpath: fix infinite recursion in ioctl when no paths and !queue_if_no_path
664820265d70a759dceca87b6eb200cd2b93cda8 dm: do not return target from dm_get_live_table_for_ioctl()
956a4025808df4abfe2fe25a11feb4c8f33fc336 dm: fix sparse "unexpected unlock" warnings in ioctl code
e522c039059b0fdf5ecd15d7007026326fffc9be dm: cleanup dm_any_congested()
1c357a1e86a4227a6b6059f2de118ae47659cebc dm: allocate blk_mq_tag_set rather than embed in mapped_device
c5248f79f39e5254977a3916b2149c3ccffa2722 dm: remove support for stacking dm-mq on .request_fn device(s)
eca7ee6dc01b21c669bce8c39d3d368509fb65e8 dm: distinquish old .request_fn (dm-old) vs dm-mq request-based DM
30187e1d48a258e304af184c45c3140c8509d219 dm: rename target's per_bio_data_size to per_io_data_size
591ddcfc4bfad28e096787b1159942124d49cd1e dm: allow immutable request-based targets to use blk-mq pdu
78ce23b51802f5e917d89e8fc9a56dec6cc2fd5b dm mpath: use blk_mq_alloc_request() and blk_mq_free_request() directly
115485e83f497fdf9b4bf779038cfe4e141292a9 dm: add 'dm_numa_node' module parameter
e233d800a9648f2c0802aa23250d9c8af57bab43 dm: drop unnecessary assignment of md->queue
9ed84698fdda63de93c68150c4f63673cc3d7b54 dm cache: make the 'mq' policy an alias for 'smq'
c80914e81ec5b08fec0bae531e3445268c8820f4 dm: return error if bio_integrity_clone() fails in clone_bio()
7dd85bb0e98836bd61a619b59dcfc0f2ad3f5172 dm cache policy smq: clarify that mq registration failure was for 'mq'
3f0680402c2d0da58a8b06f7e55d387591b55e61 dm: add missing newline between DM_DEBUG_BLOCK_STACK_TRACING and DM_BUFIO
a01e72fbc41e322ed229465de8b595a7e3ec6549 tools/power turbostat: fix parameter passing for forked command
569d6557ab957d6ae7e97a46ae669174be4189e6 x86: Use preempt_disable_notrace() in cycles_2_ns()
b20112edeadf0b8a1416de061caa4beb11539902 perf/x86: Improve accuracy of perf/sched clock
b9511cd761faafca7a1acc059e792c1399f9d7c6 perf/x86: Fix time_shift in perf_event_mmap_page
7524a5d88b94afef8397a79f1e664af5b7052c22 net/mlx5e: Don't try to modify CQ moderation if it is not supported
2fcb92fbd04eef26dfe7e67839da6262d83d6b65 net/mlx5e: Don't modify CQ before it was created
f458aada75891e6e9aff391f8f12a2cb2aac7d58 scsi: storvsc: Size the queue depth based on the ringbuffer size
7fa2955ff70ce4532f144d26b8a087095f9c9ffc sh_eth: Fix sleeping function called from invalid context
ed6dc538e5a36a331b6256d54f435c80f6715460 mei: fix fasync return value on error
989561de9b5112999475b406557d9c7e9e59c041 PM / Domains: add setter for dev.pm_domain
6b9cb42752dafba3761dde0002ca58ca518b6311 device core: add device_is_bound()
7326fffb712f09a315bc73cc1ee63843f59b8bd4 mei: validate request value in client notify request ioctl
e79aee49bcf9ad005b3f2f4cf68b17dc2c22d9c2 PM: Avoid false-positive warnings in dev_pm_domain_set()
3ded91041a762423bd49bb932ae2e36b65c6ae4b driver core: Avoid NULL pointer dereferences in device_is_bound()
bd0f889536f80630c1c4a414f2de90744d2c87d0 perf evsel: Disable branch flags/cycles for --callgraph lbr
e9d1593d4e9311bca040ecf6ec7599e6f235140c cifs: fold cifs_iovec_write() into the only caller
65b99a08b350876e8835fc0e7173598165f64dee xfs: refactor unmount record detection into helper
717bc0ebca0bce9cb3edfc31b49b384a1d55db1c xfs: refactor in-core log state update to helper
7f6aff3a29b08fc4234c8136eb1ac31b4897522c xfs: only run torn log write detection on dirty logs
15562c439d0a1850b71aa1c0d92d1f4fb9503c8d GFS2: Move glock superblock pointer to field gl_name
88ffbf3e037e67b52c46d528aca1618489c21f68 GFS2: Use resizable hash table for glocks
5445b1fbd123420bffed5e629a420aa2a16bf849 NFSv4: Respect the server imposed limit on how many changes we may cache
4a00e9df293d010acbea118b9521e08cb85016c6 prctl: more prctl(PR_SET_MM_*) checks
04ee1a3b8f0584099370f8501ac785fd5d2ed6ff audit: get rid of *NO* daemon at audit_pid=0 message
f12835276c3182f2b998d93dfd60100cf4b60c05 audit: remove stray newlines from audit_log_lost messages
32a1dbaece7e37cea415e03cd426172249aa859e audit: try harder to send to auditd upon netlink failure
17f41571bb2c4a398785452ac2718a6c5d77180e kprobes/x86: Call out into INT3 handler directly instead of using notifier
98e1b60ecc441625c91013e88f14cbd1b3c1fa08 dlm: try other IPs when sctp init assoc fails
ee44b4bc054afc586c92558a225055ef9fd25d17 dlm: use sctp 1-to-1 API
acee4e527d5f069351f835602b23602d01de5e1f dlm: replace BUG_ON with a less severe handling
18df8a87badac0ab05679df9bd44b5033e30d97c dlm: sctp_accept_from_sock() can be static
6de20eb0dee4c802d9d228d6c08d00386e172e52 GFS2: Set s_mode before parsing mount options
7e47682ea555e7c1edef1d8fd96e2aa4c12abe59 cgroup: allow a cgroup subsystem to reject a fork
49b786ea146f69c371df18e81ce0a2d5839f865c cgroup: implement the PIDs subsystem
ce52399520e4b97466165737e00c7b528ae8c8f5 cgroup: pids: fix invalid get/put usage
682b1a9d3f9686ee43fd66b48605daff00522157 ipv6: no CHECKSUM_PARTIAL on MSG_MORE corked sockets
405c92f7a5417274419192ad134d6dc71aedaaa4 ipv6: add defensive check for CHECKSUM_PARTIAL skbs in ip_fragment
4f0087812648b7611157ae22954acfaed820d24e sctp: apply rhashtable api to send/recv path
39f66a7dce3213fb0a0c6256929c816df27c7548 sctp: apply rhashtable api to sctp procfs
b5eff7128366c4a7a9b502097a968ec9cae2bea2 sctp: drop the old assoc hashtable of sctp
c79c0666915418f9c0f01a6d0e93179416fb0c9e sctp: remove the local_bh_disable/enable in sctp_endpoint_lookup_assoc
fb3311853c0f23391fc3441d49a46d076de57757 net: sctp: Move sequence start handling into sctp_transport_get_idx()
dd7445ad6be3809565272b0e724f2f00c2de1989 sctp: the temp asoc's transports should not be hashed/unhashed
1eed677933b816978abc4e3e18ecae5f254cb9be sctp: fix the transport dead race check by using atomic_add_unless on refcnt
fba4c330c5b9d1beeae08a42ed4430f5055e7f27 sctp: hold transport before we access t->asoc in sctp proc
47faa1e4c50ec26e6e75dcd1ce53f064bd45f729 sctp: remove the dead field of sctp_transport
3d73e8fac8f84942f15307d6d9cb1dba843d3fb2 sctp: sctp_remaddr_seq_show use the wrong variable to dump transport info
a4b816d8ba1c1917842dc3de97cbf8ef116e043e bridge: Change local fdb entries whenever mac address of bridge device changes
38ee8fb67c3457f36f5137073c4b8ac2436d2393 sctp: convert sack_needed and sack_generation to bits
8a0d19c5ed417c78d03f4e0fa7215e58c40896d8 sctp: start t5 timer only when peer rwnd is 0 and local state is SHUTDOWN_PENDING
2061dcd6bff8b774b4fac8b0739b6be3f87bc9f2 net: sctp: fix race for one-to-many sockets in sendmsg's auto associate
49a601589caaf0e93194c0cc9b4ecddbe75dd2d5 net/ipv4: bind ip_nonlocal_bind to current netns
35a256fee52c7c207796302681fa95189c85b408 ipv6: Nonlocal bind
8e5cfb55d3f7dc764cd7f4c966d4c2687eaf7569 Btrfs: Make raid_map array be inlined in btrfs_bio structure
6e9606d2a2dce098c1739fb3cd82a1c34fd73d3a Btrfs: add ref_count and free function for btrfs_bio
be50a8ddaae1d07135fd7e1c7017c1611075a560 Btrfs: Simplify scrub_setup_recheck_block()'s argument
10f11900167a83e0c229c4c27e73e720ebd55b5c Btrfs: Include map_type in raid_bio
ffe2d2034bbb34f49f76c808550fdfbea2ea1659 Btrfs: Introduce BTRFS_BLOCK_GROUP_RAID56_MASK to check raid56 simply
e57cf21e9787c081db4db6afa02e6e70112ee410 Btrfs: fix allocation size calculations in alloc_btrfs_bio
c7abe829c04dc8ce0ecd1c07bf3bc97d2bb9655e btrfs: cleanup 64bit/32bit divs, provably bounded values
35b850f16d9adbb833775105ec942fbc818ee6a0 btrfs: replace remaining do_div calls with div_u64 variants
29cf342b8f1056486557015aba4538804a872dc1 btrfs: cleanup, use correct type in div_u64_rem
258ece02126a67af263746e1ae5f8ddf0d492e14 btrfs: remove shadowing variables in __btrfs_map_block
2f2ff0ee5e4303e727cfd7abd4133d1a8ee68394 Btrfs: fix metadata inconsistencies after directory fsync
1262133b8d6f10f5ca7621cd4cf65ddf6254126a Btrfs: account for crcs in delayed ref processing
28f75a0e6cdfbce8115487ecbc0968a2c4e01806 Btrfs: refill block reserves during truncate
cb723e491955ac11a1591ae25cada7c3b1470609 Btrfs: reserve space for block groups
1bbc621ef28462456131c035eaeb5567a1a2a2fe Btrfs: allow block group cache writeout outside critical section in commit
85db36cfb3de1422aeafb4e2ce83396333b744bb Btrfs: fix inode cache writeout
a3bdccc4e683f0ac69230707ed3fa20e7cf73a79 Btrfs: prevent list corruption during free space cache processing
b58d1a9ef92031a6fc2f418c01abafb4458ba009 Btrfs: fix race between start dirty bg cache writeout and bg deletion
e43699d4b4c5d9ecbcb5998cdcbada060981171f Btrfs: fix crash after inode cache writeback failure
ff1f8250a9e47c1032eb5c86ababff461a11f3a0 Btrfs: fix race between block group creation and their cache writeout
062c19e9dd692b8a78e3532f71c290520a2ab437 Btrfs: fix race when reusing stale extent buffers that leads to BUG_ON
153c35b6cccc0c72de9fae06c8e2c8b2c47d79d4 Btrfs: fix regression in raid level conversion
35c766425adc8e6cd1bdc8554fa540364f218fb7 Btrfs: fix mutex unlock without prior lock on space cache truncation
155e35d4daa804582f75acaa2c74ec797a89c615 VFS: Introduce inode-getting helpers for layered/unioned fs environments
bb289b7be62db84b9630ce00367444c810cada2c Btrfs: fail on mismatched subvol and subvolid mount options
05dbe6837b60465db6a61d1f0cabe745e20aadc9 Btrfs: unify subvol= and subvolid= mounting
18aa09229741364280d0a1670597b5207fc05b8d Btrfs: fix stale dir entries after removing a link and fsync
f2f66a2f886383fb76aca8ecc1bcc116c5d1f6fe btrfs: Check cancel and pause in interval of scrub operation
a0dd59de3c73fbb3b738eaf333732f2f27254a2c btrfs: Fix calculate typo caused by ambiguous meaning of logic_end
d7cad2389560f3249435ac928bc13e9408ae467e btrfs: Bypass unrelated items before accessing its contents in scrub
868f401ae38acb439005626c04d575e64c5ae760 btrfs: Use ref_cnt for set_block_group_ro()
277fb5fc177dc4674ef6151a7697f5396bbdff11 btrfs: use __GFP_NOFAIL in alloc_btrfs_bio
7955323bdcab307bd8b1d5ef7a031e4a3d059da3 btrfs: Update out-of-date "skip parity stripe" comment
2b9dbef272b63c561aab0a5be34fd428f7b710f5 Btrfs: keep dropped roots in cache until transaction commit
ecaeb14b912a3be55530aeec4e81c7243f5ceb5d btrfs: switch message printers to _in_rcu variants
0305cd5f7fca85dae392b9ba85b116896eb7c1c7 Btrfs: fix truncation of compressed and inlined extents
a099d0fdb34f00cee346703036a0a90d267e77d7 btrfs: memset cur_trans->delayed_refs to zero
f64d5ca868214f9beb60108c82fcb96940132bfb btrfs: delayed_ref: Add new function to record reserved space into delayed ref
3204d33cda40d9bc97f257c441225d3713916661 Btrfs: add a flags field to btrfs_transaction
2968b1f48bd7366dd7310acde1ee6d1bf7791142 Btrfs: don't continue setting up space cache when enospc
b06c4bf5c874a57254b197f53ddf588e7a24a2bf Btrfs: fix regression running delayed references when using qgroups
5846a3c26873e86b034c702a8bc202aa76082369 btrfs: qgroup: Fix a race in delayed_ref which leads to abort trans
349c7037b15927eed3cc8a5dbc08639dea654ea5 fs/9p: remove unnecessary new_valid_dev() checks
4734b7ed79e1230602927a38bc4d04dbe9dd09c1 btrfs: scrub: setup all fields for sblock_to_check
036a9348dcd0060e3df8f5b5db2a59e7d7eaf1f5 Btrfs: fix race between cleaner kthread and space cache writeout
348a0013d54acec35c22958480af054b97b5e4fe Btrfs: fix unprotected list move from unused_bgs to deleted_bgs list
bc4ef7592f657ae81b017207a1098817126ad4cb btrfs: properly set the termination value of ctx->pos in readdir
546bed631203344611f42b2af1d224d2eedb4e6b btrfs: initialize the seq counter in struct btrfs_device
c2d6cb1636d235257086f939a8194ef0bf93af6e Btrfs: fix deadlock running delayed iputs at transaction commit time
f2b93280edee5c7e95eecba48707a4e4a19b17c8 KVM: nVMX: Enable nested virtualize x2apic mode
b9c237bb1db61f107b5d7cee5008e4a6b96ff800 KVM: nVMX: Make nested control MSRs per-cpu
82f0dd4b2749ece2e48509cbd768e9bcf44d2124 KVM: nVMX: Enable nested apic register virtualization
608406e290ca31d8f217cb765ee50152b41a7c9c KVM: nVMX: Enable nested virtual interrupt delivery
705699a139948a671cd66b915e8095c95fdf44d9 KVM: nVMX: Enable nested posted interrupt processing
0efb04406de834d820f7ba150a00d1d3194aa8a6 KVM: x86: removing redundant eflags bits definitions
b32a99180027ec980af971d548781eac1f6bb9b5 KVM: x86: Remove redundant definitions
2f729b10bb74f97797beb310113f6182f262d36a KVM: remove useless check of "ret" variable prior to returning the same value
5a4f55cde81f1633cb7ae9f0963b722e47acdc36 KVM: x86: cache maxphyaddr CPUID leaf in struct kvm_vcpu
9090422f1ca5270795738549cf91a4ae7cb47662 KVM: nVMX: checks for address bits beyond MAXPHYADDR on VM-entry
0097d12e504b3ce57b68810737ad6a5a64a98c68 KVM: provide irq_unsafe kvm_guest_{enter|exit}
ccf73aaf5adfa37f45be12459c17f534e8f2c2c5 KVM: arm/mips/x86/power use __kvm_guest_{enter|exit}
d28bc9dd25ce023270d2e039e7c98d38ecbf7758 KVM: x86: INIT and reset sequences are different
5690891bcec5fcfda38da974ffa5488e36a59811 kvm: x86: zero EFER on INIT
d1ebdbf99a3ce90f3b886c2cf0dfd7da17703d2a kvm: x86: Deliver MSI IRQ to only lowest prio cpu if msi_redir_hint is true
74545705cb2e398efc3cd751628c58f021323434 KVM: x86: fix initial PAT value
52eb5a6d576b5bca14797a4085abdd68ad8c0b3f KVM: x86: For the symbols used locally only should be static type
b3a2a9076d3149781c8622d6a98a51045ff946e4 KVM: nVMX: Add support for rdtscp
62bea5bff486644ecf363fe8a1a2f6f32c614a49 KVM: add halt_attempted_poll to VCPU stats
e9ea5069d9e569c32ab913c39467df32e056b3a7 kvm: add capability for any-length ioeventfds
79a8059d244e99454e474902e4325ee9b50e9178 KVM: svm: do not call kvm_set_cr0 from init_vmcb
6092d3d3e6db983048469d424a8f2221915a8dd3 kvm: svm: Only propagate next_rip when guest supports it
8b3e34e46aca9b6d349b331cd9cf71ccbdc91b2e KVM: x86: add pcommit support
f36201e5f44b55faf44ddc820929548e51ec841b KVM: VMX: simplify rdtscp handling in vmx_cpuid_update()
8b97265a1516819d54c2d24b3874489a52f269d4 KVM: VMX: align vmx->nested.nested_vmx_secondary_ctls_high to vmx->rdtscp_enabled
feda805fe7c4ed9cf78158e73b1218752e3b4314 KVM: VMX: unify SECONDARY_VM_EXEC_CONTROL update
a3eaa8649e4c6a6afdafaa04b9114fb230617bb1 KVM: VMX: Fix commit which broke PML
1cea0ce68ed76490ffa64a9e2a7a40104efe9352 KVM: VMX: drop rdtscp_enabled field
81b1b9ca6d5ca5f3ce91c0095402def657cf5db3 KVM: VMX: Fix host initiated access to guest MSR_TSC_AUX
3d9b98f4ec17ba8d555f1972a3870035a87574a0 iommu, x86: Setup Posted-Interrupts capability for Intel iommu
0a4377de305684c883bf90ad21e3cbdeead70f5c genirq: Introduce irq_set_vcpu_affinity() to target an interrupt to a VCPU
2705a3d2a690c3dd9f58c7d788bc0f432acdeceb iommu, x86: Save the mode (posted or remapped) of an IRTE
d75f152fc389cdd73a6c17f1247fce9052fd579c iommu, x86: Avoid migrating VT-d posted interrupts
8541186faf3b59623c86022cc5f21ce9bd1332c5 iommu, x86: Implement irq_set_vcpu_affinity for intel_ir_chip
f6b3c72c23661e5534cd2eede16e9bac7ebb761c x86/irq: Define a global vector for VT-d Posted-Interrupts
37d9fe4783ffcaddcc4afe67626691e62c5ab30e virt: Add virt directory to the top Makefile
6d7425f109d2629d1f4b4b146eca8e43701bf966 vfio: Register/unregister irq_bypass_producer
1a02b27035f82091d51ecafcb9ccaac1f31d4eb2 KVM: introduce kvm_arch functions for IRQ bypass
f70c20aaf141adb715a2d750c55154073b02a9c3 KVM: Add an arch specific hooks in 'struct kvm_kernel_irqfd'
efc644048ecde54f016011fe10110addd0de348f KVM: x86: Update IRTE for posted-interrupts
21bc8dc5b729dbeecb43adff23b74b51321e1897 KVM: VMX: fix build without CONFIG_SMP
28b835d60fcc2498e717cf5e6f0c3691c24546f7 KVM: Update Posted-Interrupts Descriptor when vCPU is preempted
bf9f6ac8d74969690df1485b33b7c238ca9f2269 KVM: Update Posted-Interrupts Descriptor when vCPU is blocked
99b83ac893b84ed1a62ad6d1f2b6cc32026b9e85 KVM: nVMX: emulate the INVVPID instruction
5c614b3583e7b6dab0c86356fa36c2bcbb8322a0 KVM: nVMX: nested VPID emulation
089d7b6ec5151ad06a2cd524bc0580d311b641ad KVM: nVMX: expose VPID capability to L1
b2467e744f89fcb2e723143c2b78bcbaf391828a KVM: nVMX: remove incorrect vpid check in nested invvpid emulation
0669a51015c58b1f036030743a0c0781eb63867f KVM: x86: zero apic_arb_prio on reset
89cbc76768c2fa4ed95545bf961f3a14ddfeed21 x86: Replace __get_cpu_var uses
ad721883e9c5f46cc5fa9496bc12c097c6238b4a KVM: x86: Add a common TSC scaling ratio field in kvm_vcpu_arch
35181e86df97e4223f4a28fb33e2bcf3b73de141 KVM: x86: Add a common TSC scaling function
381d585c80e34988269bd7901ad910981e900be1 KVM: x86: Replace call-back set_tsc_khz() with a common function
07c1419a32bbba08cf1efb6d1ecaf24f174fa4c3 KVM: x86: Replace call-back compute_tsc_offset() with a common function
58ea6767874e791a6c4f5c96c7d9155de4b1af28 KVM: x86: Move TSC scaling logic out of call-back adjust_tsc_offset()
4ba76538dd52dd9b18b464e509cb8f3ed4ed993f KVM: x86: Move TSC scaling logic out of call-back read_l1_tsc()
64903d6195cbfb051ce339d30848cc64babdba12 KVM: VMX: Enable and initialize VMX TSC scaling
2680d6da455b636dd006636780c0f235c6561d70 kvm: x86: Update tsc multiplier on change.
a96036b8ef7df9f10cd575c0d78359bd33188e8e KVM: x86: rename update_db_bp_intercept to update_bp_intercept
8b89fe1f6c430589122542f228a802d34995bebd kvm: x86: move tracepoints outside extended quiescent state
344cb4e0b6f3a0dbef0643eacb4946338eb228c0 iommu/vt-d: Use cmpxchg16b to update posted format IRTE atomically
45bdbcfdf241149642fb6c25ab0c209d59c371b7 kvm: x86: Fix vmwrite to SECONDARY_VM_EXEC_CONTROL
996e0a97ebd7b11cb785794e2a83c20c1add9d92 evm: Fix build warnings
a13e8bbe851a96a0e78c2bd599bc34082fa697cd Drivers: hv: vmbus: Use a round-robin algorithm for picking the outgoing channel
f38e7dd72337d83cced910cfbf6016475ef85bf7 Drivers: hv: vmbus: move init_vp_index() call to vmbus_process_offer()
1f656ff3fdddc2f59649cc84b633b799908f1f7b Drivers: hv: vmbus: Implement NUMA aware CPU affinity for channels
7f163a6fd957a85f7f66a129db1ad243a44399ee drivers:hv: Modify hv_vmbus to search for all MMIO ranges available.
3546448338e76a52d4f86eb3680cb2934e22d89b drivers:hv: Move MMIO range picking from hyper_fb to hv_vmbus
9f01ec53458d9e9b68f1c555e773b5d1a1f66e94 Drivers: hv: vmbus: Improve the CPU affiliation for channels
ca1c4b745779e20711322b3338f3a942a3c1224a Drivers: hv: vmbus: fix init_vp_index() for reloading hv_netvsc
619848bd074343ff2bdeeafca0be39748f6da372 drivers:hv: Export a function that maps Linux CPU num onto Hyper-V proc num
a108393dbf764efb2405f21ca759806c65b8bc16 drivers:hv: Export the API to invoke a hypercall on Hyper-V
3053c762444a83ec6a8777f9476668b23b8ab180 drivers:hv: Define the channel type for Hyper-V PCI Express pass-through
34c6801e3310ad286c7bb42bc88d42926b8f99bf Drivers: hv: vmbus: fix rescind-offer handling for device without a driver
d6f591e339d23f434efda11917da511870891472 Drivers: hv: vmbus: channge vmbus_connection.channel_lock to mutex
b282e4c06fe89fc750fb26791c0bd7b25315973a Drivers: hv: vmbus: Force all channel messages to be delivered on CPU 0
b5f53dde8d8e84a6ee200dbd0bd90a400a8fe1a1 Drivers: hv: ring_buffer: remove code duplication from hv_ringbuffer_peek/read()
d81274aae61c0a045cd0f34191c51fa64ba58bc4 Drivers: hv: vmbus: Support handling messages on multiple CPUs
16ab8a5cbea463e4d14bf0ce698f11fa64b70ae1 vfio/noiommu: Don't use iommu_present() to track fake groups
8160c4e455820d5008a1116d2dca35f0363bb062 vfio: fix ioctl error handling
18e94a3384368340d438cf67fcaebd72084f34f8 PCI: Make a shareable UUID for PCI firmware ACPI _DSM
3390e0850b711d163b35508464cfbe0a4477dfe2 PCI: Export pci_find_host_bridge() for use inside PCI core
e33caa82e221b0bbeba373b507e3f134dc2efa1a PCI/ACPI: Optimize device state transition delays
84d7f2ebd70d36e9d83e0973d2f4dac56a671f4f i2c: i801: Add support for Intel DNV
2b0a9f017548f05e42fbf7e67c4a626c1ebd5e12 pagemap: introduce pagemap_entry_t without pmshift bits
0f8975ec4db2c8b5bd111b211292ca9be0feb6b8 mm: soft-dirty bits for user memory changes tracking
541c237c0923f567c9c4cabb8a81635baadc713f pagemap: prepare to reuse constant bits with page-shift
179ef71cbc085252e3fe6b8159263a7ed1d88ea4 mm: save soft-dirty bits on swapped pages
41bb3476b361ef38576cf9d539b19bae2ac93167 mm: save soft-dirty bits on file pages
6dec97dc92946eb479e6ebb54a61f8226cceefec mm: move_ptes -- Set soft dirty bit depending on pte type
c3d16e16522fe3fe8759735850a0676da18f4b1d mm: migration: do not lose soft dirty bit if page is in migration state
d9104d1ca9662498339c0de975b4666c30485f4e mm: track vma changes with VM_SOFTDIRTY bit
e9cdd6e771580e6ff872e5c64e8b766972c7d1bc mm: /proc/pid/pagemap: inspect _PAGE_SOFT_DIRTY only on present pages
24f91eba18bbfdb27e71a1aae5b3a61b67fcd091 mm: don't lose the SOFT_DIRTY flag on mprotect
0bf073315cb29d2e9e68b6c5da97862a519e3320 mm: softdirty: make freshly remapped file pages being softdirty unconditionally
b43790eedd31e9535b89bbfa45793919e9504c34 mm: softdirty: don't forget to save file map softdiry bit on unmap
9aed8614af5a05cdaa32a0b78b0f1a424754a958 mm/memory.c: don't forget to set softdirty on file mapped fault
c86c97ff42cd6c6d1bd29eca4dfabeaf2b7f1020 mm: softdirty: clear VM_SOFTDIRTY flag inside clear_refs_write() instead of clear_soft_dirty()
64e455079e1bd7787cc47be30b7f601ce682a5f6 mm: softdirty: enable write notifications on VMAs after VM_SOFTDIRTY cleared
e0a8400c6923a163265d52798cdd4c33f3f8ab5a memory-hotplug: Remove "weak" from memory_block_size_bytes() declaration
cc4e2575cc96b1aac910f56e1d7ef45d219b40b2 iommu/vt-d: Move context-mapping into dmar_insert_dev_info
d66ce54b4664a0d66429a4de996741581d71cf90 iommu/vt-d: Split iommu_prepare_identity_map
b1ce5b79aec8d8cd8bcd076d8cce8bc3cd690051 iommu/vt-d: Create RMRR mappings in newly allocated domains
743162013d40ca612b4cb53d3a200dff2d9ab26e sched: Remove proliferation of wait_on_bit() action functions
c1221321b7c25b53204447cff9949a6d5a7ddddc sched: Allow wait_on_bit_action() functions to support a timeout
cbbce82209490df8b68da9aec0d642451fe0a668 SCHED: add some "wait..on_bit...timeout()" interfaces.
68985633bccb6066bf1803e316fbc6c1f5b796d6 sched/wait: Fix signal handling in bit wait helpers
dfd01f026058a59a513f8a365b439a0681b803af sched/wait: Fix the signal handling fix
7e41d17753e6e0da55d343997454dd4fbe8d28a8 perf: Fix cgroup event scheduling
70a0165752944e0be0b1de4a9020473079962c18 perf: Fix cgroup scheduling in perf_enable_on_exec()
45c815f06b80031659c63d7b93e580015d6024dd perf: Synchronously free aux pages in case of allocation failure
957ea1fdbcdb909e1540f06f06f1a9ce6e696efa perf/x86: Remove warning for zero PEBS status
01330d7288e0050c5aaabc558059ff91589e67cd perf/x86: Allow zero PEBS status with only single active event
724697648eec540b2a7561089b1c87cb33e6a0eb perf/x86: Use INST_RETIRED.PREC_DIST for cycles: ppp
8f04b8536f0c94f8999b65cd1c6c7523116a00ae perf/x86: De-obfuscate code
fa9cbf320e996eaa3d219344b6f7013b096cafd9 perf/x86: Move perf_event.c ............... => x86/events/core.c
39b0332a215832ce3a8f8f57344da4a64370e3ca perf/x86: Move perf_event_amd.c ........... => x86/events/amd/core.c
218cfe4ed8885f988d67ac5f52efeff7233ae1f2 perf/x86: Move perf_event_amd_ibs.c ....... => x86/events/amd/ibs.c
d0af1c0525d561fe3ab6d7a767cdd52704da25cd perf/x86: Move perf_event_amd_uncore.c .... => x86/events/amd/uncore.c
af5d3aabc04a4b7732b1d3404feebadfe5ae9362 perf/x86: Move perf_event_intel_bts.c ........ => x86/events/intel/bts.c
e1069839dd6893d2135b2fc4d96e5d03d73c2c3d perf/x86: Move perf_event_intel.c ............ => x86/events/intel/core.c
5c781a3daa3053c355259894f9e7a478deb0cb46 perf/x86: Move perf_event_intel_cqm.c ........ => x86/events/intel/cqm.c
7010d129137aa44a79a6a1911881e07e1cd5da60 perf/x86: Move perf_event_intel_ds.c ......... => x86/events/intel/ds.c
c85cc4497f823b83379a23e798018d69fe566185 perf/x86: Move perf_event_intel_lbr.c ........ => x86/events/intel/lbr.c
fd1c601c25785ef38d698ff0091b5fe253074715 perf/x86: Move perf_event_intel_pt.[ch] ...... => x86/events/intel/pt.[ch]
609d809f832ddda20f03029c865dd052596ea394 perf/x86: Move perf_event_intel_rapl.c ....... => x86/events/intel/rapl.c
6bcb2db547be8263a98ae9413127df9385b38763 perf/x86: Move perf_event_intel_uncore.[ch] .. => x86/events/intel/uncore.[ch]
35bf705c25e875f40ff8ed6af415315335973977 perf/x86: Move perf_event_intel_uncore_nhmex.c => x86/events/intel/uncore_nmhex.c
92553e40c6292408faa069b34a6db0dab4055080 perf/x86: Move perf_event_intel_uncore_snb.c   => x86/events/intel/uncore_snb.c
ed367e6ca42716a11a6d1b5162fdd378f9494eff perf/x86: Move perf_event_intel_uncore_snbep.c => x86/events/intel/uncore_snbep.c
edbb591870dc8d1fd855014ea5360475f7bc46af perf/x86: Move perf_event_knc.c .............. => x86/events/intel/knc.c
f03e97dbd2bb7d9436400fb6946502268ab33542 perf/x86: Move perf_event_p4.c ............... => x86/events/intel/p4.c
5e865ed44b39fa991a8fb1d7d9c0338f8fedac33 perf/x86: Move perf_event_p6.c ............... => x86/events/intel/p6.c
27f6d22b037b2be6685e0e27cce929779d634119 perf/x86: Move perf_event.h to its new home
721a1f53df6aad3ea941f5fe95519d0d8e02bd65 perf tests: Pass the subtest index to each test routine
5bcf2fe05318deb6fec209b4028d8a31f9f47221 perf test: Mute test cases error messages if verbose == 0
5725dd8fa888b4dcdff58241f9d3d3ac42a048e2 tools build: Clean CFLAGS and LDFLAGS for fixdep
b49a8fe52626814968b9a9d27d7ad1cadc5532ed perf callchain: Honor hide_unresolved
c03d5184f0e92fa696e4b57f54ffc3b19a92f704 perf machine: Adjust dso->long_name for offline module
5e50426d5d9049dfdb8b2b18e761717e7e80a6ad tools build: Use fixdep with OUTPUT path prefix
5dcf16df3ce48b2e4f798b1a11b5de2fc3cfd73a perf machine: Pass correct string to dso__adjust_kmod_long_name
3f86eb6b0771d785099c91354838d3f8d8126630 perf tools: Get rid of exit_browser() from usage_with_options()
b6847d2c2a50e96680e233ce4b2784981b6f309e perf test: Dump the stack when test segfaults when in verbose mode
212e984a07d19c2e6b83da4ebac4e965dd92efd3 perf build: Rename LIB_PATH -> API_PATH
48e1cab1ba4db84fbc26379b887ba94a180347fe perf tools: Make options always available, even if required libs not linked
1925459b4d92d92e62d67ddc763cda650d2aa79c tools build: Fix feature Makefile issues with 'O='
901421a5bdf605d24c278825cdd032cd6038bcb8 perf tools: Remove subcmd dependencies on strbuf
46113a54be53aea50a4f5926b87e86e2e66c4266 perf tools: Remove 'perf' from subcmd function and variable names
2f4ce5ec1d447beb42143a9653716a2ab025161e perf tools: Finalize subcmd independence
4b6ab94eabe4f55371cff4569750bb3996c55db6 perf subcmd: Create subcmd library
1843b4e057b7717db21a3ad96fa16d6b4ee8f6c4 tools subcmd: Rename subcmd header include guards
5f3339d2e83ca587c2e13c3e37e1b5fb7c68ebe5 perf thread_map: Add thread_map user level event
99471c967a00c875bb5d61f377d4267904545499 perf thread_map: Add thread_map event sythesize function
59660942397b57b37eccba014544623cf4beb12b perf thread_map: Add thread_map__new_event function
ec7fa596f514b76a5f1003ffe9e6dfb50cb9e811 perf thread_map: Add perf_event__fprintf_thread_map function
6640b6c227fc85fd8bdcc4a31239a04450487f6a perf cpu_map: Add cpu_map user level event
6c872901af07c41745f1abf5ceac9b3b4d9cdbb6 perf cpu_map: Add cpu_map event synthesize function
f77b57ad4fc42a074eae564bbb6660f0a3ff5503 perf cpu_map: Add cpu_map__new_event function
eb12a1afdc02e59fc09934743490549c77327b1a perf cpu_map: Add perf_event__fprintf_cpu_map function
374fb9e362f64e730388abc1de9bb93829670a54 perf tools: Add stat config user level event
6742434261158ad9678bf15b165304e0200cc324 perf tools: Add stat config event synthesize function
8e381596b67af53564a69f16440d3e5d5a73d034 perf tools: Add stat config event read function
d80518c90bb2b4af9755d79af5dfe9d44e04cdb9 perf tools: Add stat user level event
5796f8f073fe50171376f058376dde93ec5f3785 perf tools: Add stat event synthesize function
2d8f0f18a5c37cf0322cb385b99adb1167b7cf78 perf tools: Add stat round user level event
d4c2259195f538505d2570e78555532372fb4ad2 perf tools: Add stat round event synthesize function
ffe777254cce24fb5fde3f0aa91fc755cfb1b812 perf tools: Add event_update user level event
a6e5281780d1da65c15ce529707f43eb4a6df856 perf tools: Add event_update event unit type
daeecbc0c431f15f492fb8d704080a02de6e2918 perf tools: Add event_update event scale type
802c9048b824eaa3c75d875e2d107460ad586439 perf tools: Add event_update event name type
86ebb09f96fe6886e1e5d53b648df5537ba859ca perf tools: Add event_update event cpus type
c853f9394b7bc189632673cac802bdbf6537463b perf tools: Add perf_event__fprintf_event_update function
2d2aea6ae736503d3896c4997b494760ed8febc1 perf report: Display newly added events in raw dump
4979d0c7d0c73a3e799d4dcfbacd3cd11cc55638 perf stat record: Add record command
3ba78bd00e508bf46a6aa2b8e296dc8287ea4c29 perf stat record: Initialize record features
8b99b1a4e0b082ea6a277766982dac84483d4d3c perf stat record: Synthesize stat record data
2af4646d1041ee590b0032d2b0103fa81aa43174 perf stat record: Store events IDs in perf data file
664c98d4e1c2ff60627d78d4c8ae81cd2df13783 perf stat record: Add pipe support for record command
5a6ea81b8f9ce2736759d256ac4d63be65751199 perf stat record: Write stat events on record
7aad0c32bb6aaa39aab596264ddc49d44c8088f3 perf stat record: Write stat round events on record
e9d6db8e8df42a38f79f264ab58c104e1678b12c perf stat record: Do not allow record with multiple runs mode
7b60a7e3a687481553d2b6ec7e6390a6e82f1849 perf stat record: Synthesize event update events
ba6039b6c8fcc24de7d6ab7b0bada4becaf84a2c perf stat report: Add report command
1975d36e14b3314d1d0c7a428946ec0c27fd6e95 perf stat report: Process cpu/threads maps
62ba18ba938a8740ab18e02342b282d7378986f7 perf stat report: Process stat config event
68d702f7a1202dd39d9fa01b7bea92ba9e5785d9 perf stat report: Add support to initialize aggr_map from file
6edb78a2178fd85d07b1a7fbb3629be56b860224 perf stat report: Move csv_sep initialization before report command
a56f9390aa9d9b1c782c3dbd5ca2c4245eb265fc perf stat report: Process stat and stat round events
fa6ea7817db3839b58d46649b7834320257e7702 perf stat report: Process event update events
89af4e05c21d68f22e07fe66940ea675615a49ed perf stat report: Allow to override aggr_mode
a34bb6a08d6020bde0475bc901793771858a1112 perf tools: Add 'trace' sort key
053a3989e12fdf3be45c00ec1cb0ce09fba0ee4a perf report/top: Add --raw-trace option
5d0cff93bb7aa85349230d4e29902b2648640c53 perf tools: Support shortcuts for events in dynamic sort keys
3b099bf5898ac1bf44d822f0bc15a7517e6fa117 perf tools: Support '<event>.*' dynamic sort key
361459f163fa1ec7ff4700ec876c3b7ff5f36cc6 perf tools: Skip dynamic fields not defined for current event
2e422fd1e4b0a1c0ca11d360be2147c87911dd1a perf tools: Add 'trace_fields' dynamic sort key
9735be24ec086fbccee321471cc21dedefa956a6 perf tools: Add all matching dynamic sort keys for field name
6db1a5c190d6abe416ea36aa28a6c53e0b3bbd5e perf stat record: Keep sample_type 0 for pipe session
15d2b9956b41ffb5961b897bf61cdc09f722dfbf perf cpumap: Fix cpu conversion in cpu_map__from_entries
a831e67913e356be63d5bb0509fc1af3c4e6ceb4 perf tests: Give a bit more information on the CQM test failure path
552eb975b83756e3d95aeb5edaeb5c3c032b0021 tools lib: Move find_next_bit.c to tools/lib/
64af4e0da419ef9e9db0d34a3b5836adbf90a5e8 tools lib: Sync tools/lib/find_bit.c with the kernel
915b0882c3108a21e9b3b5e176d3151ad522242d tools lib: Move bitmap.[ch] from tools/perf/ to tools/{lib,include}/
685c84154cef61dd7d961f36ab92f13c3ef5d354 perf tools: Include all tools/lib directory for tags/cscope/TAGS targets
14cbfbeb76540cc0c53fbb0ba34b3a4900ebe40f perf report: Show random usage tip on the help line
3238ba01c235e3e9e12fc7bc6ac3f7d513e26a31 perf tools: Add missing sources to perf's MANIFEST
8a59f3ccbc11fcb222b046a64929dd473f7dff54 perf stat: Fix recort_usage typo
6156681b73f2fffe56493e9a50518c0cbfcd8ba3 perf record: Add --buildid-all option
09f1985404aa99b9d1ad435fcb0dabd20d4ed498 perf tools: Add more usage tips
84cfac7f05e110e803a45d99cff0ba0949cc8d58 perf tools: Set and pass DOCDIR to builtin-report.c
34b7b0f95d41d2351a080e774d71085171db90e6 perf tools: Fallback to srcdir/Documentation/tips.txt
96b9e70b8e6cd65f71ee71889143976f3afb038a perf build: Introduce FEATURES_DUMP make variable
cf89813a5b514bff9b3b5e7eaf2090f22fba62e0 perf tests: Remove wrong semicolon in while loop in CQM test
462d8083fb2da951ad6edb9e8000c1f2578d27a9 powercap: intel_rapl: Add missing Haswell model
ec53e594c65ab099ca784d62b6f4c191e3a4d7cc tools/power turbostat: initial SKX support
1ee8e889d946b3b1c2cc8b99e29eac47d1581dfd scsi: add support for multiple hardware queues in scsi_(host_)find_tag
967f7bab0eaaa74d7d01a56d45aa309f78fb87dd ses: add enclosure logical id
08024885a2a3ed432716e9d50046a620a5b2df05 ses: Add power_status to SES device slot
8b094cd03b4a3793220d8d8d86a173bfea8c285b time: Consolidate the time accessor prototypes
f519b1a2e08c913375324a927992bb328387f169 timekeeping: Provide ktime_get_raw()
d28ede83791defee9a81e558540699dc46dbbe13 timekeeping: Create struct tk_read_base and use it in struct timekeeper
0e5ac3a8b100469ea154f87dd57b685fbdd356f6 timekeeping: Use tk_read_base as argument for timekeeping_get_ns()
876e78818def2983be55878b21f7152fbaebbd36 time: Rename timekeeper::tkr to timekeeper::tkr_mono
4a4ad80d32cea69ee93bd4589f24dc478804cd80 time: Add timerkeeper::tkr_raw
6bd58f09e1d8cc6c50a824c00bf0d617919986a1 time: Add cycles to nanoseconds translation
9da0f49c8767cc0ef6101cb21156cf4380ed50dd time: Add timekeeping snapshot code capturing system time and counter
ba26621e63ce6dc481d90ab9f6902e058d4ea39a time: Remove duplicated code in ktime_get_raw_and_real()
8006c24595cab106bcb9da12d35e32e14ff492df time: Add driver cross timestamp interface for higher precision time synchronization
2c756feb18d9ec258dbb3a3d11c47e28820690d7 time: Add history to cross timestamp interface supporting slower devices
f9677e0f83080bb4186865868c359e72e1fac1ea x86/tsc: Always Running Timer (ART) correlated clocksource
719f1aa4a67199a3c4c68a03f94e5ec44d9d5f82 ptp: Add PTP_SYS_OFFSET_PRECISE for driver crosstimestamping
3a505845cd58a7ff3bc75f96572045d8de34e34e NFS: Enforce an upper limit on the number of cached access call
bae6746ff356478e1a2706072edbfb514072e0ff SUNRPC: Enforce an upper limit on the number of cached credentials
fe0bf1185ddf7e9d193cfe397ed1414d91526e19 NFS: Deletion of unnecessary checks before the function call "nfs_put_client"
6a74c0c9402b85647793da70edc9d6b097d54472 pnfs/blocklayout: fix end calculation in pnfs_num_cont_bytes
ceb3a16c070c403f5f9ca46b46cf2bb79ea11750 NFSv4: Cache the NFSv4/v4.1 client owner_id in the struct nfs_client
40dd4b7aee1a8c3b8dac7b67ba710692d7691b77 NFSv4.1: Optimise layout return-on-close
d15bc38df607c893c36f4962dca0f57174c6a5c9 nfs: Provide and use helper functions for marking a page as unstable
487b9b8afde60986b606b3ee05169fb893adc153 nfs: Can call nfs_clear_page_commit() instead
2854475f6c612d59901d51c358abd05643278b53 nfs: clean up nfs_direct_IO
0d2a970d0ae55086520e1e58e572a7acd519429c SUNRPC: Fix a backchannel race
89e0d11258e9a69d550fd4bfb4609e955bdd84ee xprtrdma: Use ib_device pointer safely
fc7fbb59e70c65e2bd6170a6de139d5de62dd2be xprtrdma: Acquire FMRs in rpcrdma_fmr_register_external()
c14d86e5913564a6e9313a78604a7caf899c063f xprtrdma: Acquire MRs in rpcrdma_register_external()
06b00880b0abd60c595088ae0bd7d210ee953f15 xprtrdma: Remove unused LOCAL_INV recovery logic
3269a94b6206d4fe10dd96cb37e6b0035ee42cd2 xprtrdma: Remove ->ro_reset
acb9da7a57d7905c46d0b69d30fcf944eae261de xprtrdma: Stack relief in fmr_op_map()
40c6ed0c8a7f2c5d67f5d6774bbce230a42176db xprtrdma: Reduce per-transport MR allocation
a319268891089386bd303bb90ace89d75e47102f nfs: make nfs4_init_nonuniform_client_string use a dynamically allocated buffer
873e385116b2cc5c7daca8f51881371fadb90970 nfs: make nfs4_init_uniform_client_string use a dynamically allocated buffer
4876cc779ff525b9c2376d8076edf47815e71f2c SUNRPC: Ensure we release the TCP socket once it has been closed
be3a5d233922d73f27002ce2767f6ec03c3f473d NFSv.2/pnfs Add a LAYOUTSTATS rpc function
1b4a4bd82c308aed36f13fff4beb33d3840cfa0e pNFS: fill in nfs42_layoutstat_ops
8733408d6ed713d080c325262d7b51a780136d41 pnfs: add pnfs_report_layoutstat helper function
1bfe3b259ff2e579b2acb190f874397d53274497 nfs42: serialize LAYOUTSTATS calls of the same file
865a7ecb2131a3ba26cc1d49daf18275375109f0 nfs: provide pnfs_report_layoutstat when NFS42 is disabled
da2e8127510525eb4bce0fe34aff06192e042c8f NFSv4.2: Fix up a decoding error in layoutstats
6c5a0d891543873aefc3aaf846c1e7afe0982ff9 NFSv4.2: LAYOUTSTATS is optional to implement
68514471ceceac63c7fa9ad684d882f41be5b2d8 SUNRPC: Fix a backchannel deadlock
1980bd4d829a87ccd21b949f8a11ff1b426f5b0b SUNRPC: xprt_complete_bc_request must also decrement the free slot count
e531dcabec8dc2ee141aab01ddf20ca87c52d916 xprtrdma: Remove last ib_reg_phys_mr() call site
d1ed857e5707e073973cfb1b8df801053a356518 xprtrdma: Clean up rpcrdma_ia_open()
b3221d6a53c44cd572a3a400abdd1e2a24bea587 xprtrdma: Remove logic that constructs RDMA_MSGP type calls
33943b2974734ca5e5bef583d09ddd1eded6a77b xprtrdma: Don't provide a reply chunk when expecting a short reply
677eb17e94edfbbea3b7e628d8aa046930f102c3 xprtrdma: Fix XDR tail buffer marshalling
86d80f973434de24d8a807a92cd59d5ced7bd519 NFSv4.1/pnfs: Fix atomicity of commit list updates
c8ad8894e92b853df5a766061ee9cde7e10e682f NFSv4.2/pnfs: Use GFP_NOIO for layoutstat reporting in the writeback path
5c4a79fb2b1cd80cb58986f6acf402721901c545 NFSv4.1/pnfs: Don't prevent layoutgets when doing return-on-close
99b1a4c32ad22024ac6198a4337aaec5ea23168f SUNRPC: Fix a thinko in xs_connect()
e755d638e91be254d441602e8d7d9f1d9c944556 NFS41: make sure sending LAYOUTRETURN before close if marked so
3976143b063e3c42fe5471d87860f6ae118e0eee NFS41: remove NFS_LAYOUT_ROC flag
0b7baf9433d4e0a0c83eecbadc1f035d5370c6dc NFSv4.1/flexfiles: Remove mirror backpointer to lseg.
266d12d42ebd2587d3d0e8c4a4e54bfb5ed29543 NFSv4.1/flexfile: Ensure uniqueness of mirrors across layout segments
bbf58bf3488e41f346536aa89d62bdf2fe771128 NFSv4.2/pnfs: Make the layoutstats timer configurable
e3b1df2dbd7bcda807a94db131fda6c2bbd1480a NFSv4.1/flexfile: ff_layout_remove_mirror can be static
0762ed2ced40bfe648378ef0e1635cf4d3a6fb76 NFSv4.1/flexfiles: Allow coalescing of new layout segments and existing ones
19cf6335134d82be792831e14aae9d037d0cb30b nfs42: decode_layoutstats does not need res parameter
1090c3bf81ef12eb22383d4b6627d372ce5115d9 nfs42: remove unused declaration
4a70316caef7d158445e672e146eb9f1b8c1aeee nfs: Fix truncated client owner id without proto type
4a3e5779cf6c6d557682b499c2190ad04c80c6fd nfs: Remove unneeded checking of the return value from scnprintf
5cf9d70659594e1a75b34d18619d0bb6e0cbbafa NFS: Optimise away the close-to-open getattr if there is no cached data
0fdea1e8a2853f79d39b8555cc9de16a7e0ab26f SUNRPC: Ensure that we wait for connections to complete before retrying
4b0ab51db32eba0f48b7618254742f143364a28d SUNRPC: xs_sock_mark_closed() does not need to trigger socket autoclose
500d701f336b2771d34e46da7875a4782515a652 NFS41: make close wait for layoutreturn
72c021738252dde5849d575a650239d6404930ee xprtrdma: disconnect and flush cqs before freeing buffers
36022770de6cf9a403c40a68712ed2d2ea2746be nfs42: add CLONE xdr functions
e5341f3a5762d17be9cdd06257c02c0098bdcab8 nfs42: add CLONE proc functions
bea51b30b281039f0f43fb4f42028ddf33fb601f nfs42: add NFS_IOC_CLONE ioctl
811b7b85d6641df580a6c43184cf13d6fcc7498d nfs42: respect clone_blksize
a340abcf4173461f688292a6879b4d5bc781c2b1 nfs42: add NFS_IOC_CLONE_RANGE ioctl
275058a2188903786e42b380ea5889ef0a7cdf95 NFS: Fix an 'unused variable' complaint when #ifndef CONFIG_NFS_V4_2
9494b2ce4b511e6d285afc0a5006b6cf5ea2b115 nfs: pass on count for CLONE operations
3a2e176905b1a8d1b51cbfda719058f5ce893efd nfs: offer native ioctls even if CONFIG_COMPAT is set
21fad313d5890b674432fe3ad0c7bcf040320340 nfs: allow intra-file CLONE
0f42a6a9b807b092841f7e1b381f8c7e80a0d86a nfs: use btrfs ioctl defintions for clone
6b7153da2c1a58b0e809a8c50bcc3bab7374ce7b nfs: reduce the amount of ifdefs for v4.2 in nfs4file.c
291e1b9459936c7e86951736d432e223b0710225 NFS: Properly set NFS v4.2 NFSDBG_FACILITY
3e11e530415027a57936545957126aff49267b76 GFS2: ignore unlock failures after withdraw
072623de1f964c7ff01c46a9101af1c822fd2873 dm: fix dm_target_io leak if clone_bio() returns an error
be577fabf3ec2c9593f4d3c044283be783b88c3b nvme: Use pci_enable_msi_range() and pci_enable_msix_range()
8d38821cbcf51292cd5a23469d03bd38932a3ba9 resources: Add device-managed request/release_resource()
ce0529843a505d09f5809a7db6288d2f038f64c4 PCI: Add device flag helper functions
bee3f304435a9c8c70b135083e23516872a17c98 PCI: Remove unused pci_find_upstream_pcie_bridge()
ad975ebad4c3ce8dcc7d0bb4db26ea5aca4cfc99 PCI/MSI: Remove arch_msi_check_device()
27e20603c54ba633ed259284d006275f13c9f95b PCI/MSI: Move D0 check into pci_msi_check_device()
a06cd74cefe754341f747ddc4cf7b0058fa9bff8 PCI/MSI: Rename pci_msi_check_device() to pci_msi_supported()
48c3c38f003c25d50a09d3da558667c5ecd530aa PCI/MSI: Remove "pos" from the struct msi_desc msi_attrib
75f2a4ead5d5890ada9c2663a70fb58613c0d9f2 devres: Add devm_kasprintf and devm_kvasprintf API
ca1bb4ee4c3a017bb66840d11d5efdf4e8f3f66d leds: Introduce devres helper for led_classdev_register
8a8d91817aec6b9ca7a289891f9e6f721100ec09 powerpc/powernv: Add OPAL interfaces for accessing and modifying system LED states
84ad6e5cd3e8b365c893f31787864cae5500610b leds/powernv: Add driver for PowerNV platform
5d53be7d8c7ccf8eec1ce66c6b3573c01d16b755 powerpc/powernv: Fix mis-merge of OPAL support for LEDS driver
5a7c536f26186c313e521502f942d5cdaf05b8ee leds: powernv: removing NULL check
97bf16cd309805ebf82ffcc4063a65e06169651f Drivers: hv: kvp: switch to using the hvutil_device_state state machine
086a6f68d6933d3c48b3898752cd6ca1a0e02aec Drivers: hv: vss: switch to using the hvutil_device_state state machine
25ef06fe27a292ad33155045ef7a123be4c0b6ab Drivers: hv: fcopy: dynamically allocate smsg_out in fcopy_send_data()
9dd6a06430c94299651d74b9ed5ca8396ab8ff1f hv: util: checking the wrong variable
3cace4a616108539e2730f8dc21a636474395e0f Drivers: hv: utils: run polling callback always in interrupt context
b4ed5d1682c6613988c2eb1de55df5ac9988afcc tools: hv: report ENOSPC errors in hv_fcopy_daemon
2d0c3b5ad739697a68dc8a444f5b9f4817cf8f8f Drivers: hv: utils: Invoke the poll function after handshake
a15025660d4703a8b37290a14734cb4a84875770 Drivers: hv: utils: introduce HVUTIL_TRANSPORT_DESTROY mode
9420098adc50a88d4a441e0f92d54bfa7af44448 Drivers: hv: utils: fix crash when device is removed from host side
77b744a598d604de49df79cf161bbd1809a6948a Drivers: hv: utils: fix hvt_op_poll() return value on transport destroy
e66853b09017a788dc384dadce9323396dae3293 Drivers: hv: utils: Remove util transport handler from list if registration fails
e75ec752d725b7b612c0b2db1bca50a9e53c0879 nvme: store a struct device pointer in struct nvme_dev
d29ec8241c10eacf59c23b3828a88dbae06e7e3f nvme: submit internal commands through the block layer
a0a931d6a2c1fbc5d5966ebf0e7a043748692c22 NVMe: Fix obtaining command result
fec558b5f178d9eb35d2ed76f15489c60e3590bd NVMe: fix type warning on 32-bit
f4ff414aeb472397d3b4fc15c22ca65bab219ec8 NVMe: Use requested sync command timeout
75619bfa904d0f2840b4274eb92ce47b2e1c472e NVMe: End sync requests immediately on failure
e112af0dc9f55099b948e55077504a44b4162c79 nvme: don't overwrite req->cmd_flags on sync cmd
71feb364e7faadc681e714f7fdc2bede208ba26c NVMe: Fix IO for extended metadata formats
51ef72bda70841fddd595142ed0e7e0fc571c500 block: nvme-scsi: Catch kcalloc failure
17188bb403e9098a815dd850aedb6c150d2a3a6b NVMe: Don't use fake status on cancelled command
498c43949c7b8f57e0afb8195019cf5a7ba72de0 NVMe: Unify SQ entry writing and doorbell ringing
8ffaadf7429270914b8f146ec13cf305e01df20d NVMe: Use CMB for the IO SQes if available
c45f5c9943ce0b16b299b543c2aae12408039027 nvme: Fixes u64 division which breaks i386 builds
b2b1ec9b55ed0840956db15f823c4a73383c08be NVMe: removed unused nn var from nvme_dev_add
e19b127f5b76ec03b9c52b64f117dc75bb39eda1 NVMe: Using PRACT bit to generate and verify PI by controller
bda4e0fb3126aca15586d165b5a15a37edc0a984 NVMe: Set affinity after allocating request queues
0a7385ad69f0f210c5cfbfd334b42423a6e05e5a NVMe: Simplify device resume on io queue failure
201cf1ecdfe5ea2774cbb21d4214c98ec8b418de nvme: delete dev from dev_list in nvme_reset
77b50d9e15e113fdb871218aa0f2e3bed12ee731 nvme: merge nvme_dev_reset into nvme_reset_failed_dev
90667892c5a78b47080359883a569a260e9e87ed nvme: factor reset code into a common helper
3cf519b5a8d4d067e3de19736283c9414402d3a2 nvme: merge nvme_dev_start, nvme_dev_resume and nvme_async_probe
2659e57b906562bb020fb093b0c1b670b9700314 nvme: properly handle partially initialized queues in nvme_create_io_queues
f11bb3e244c4b14e2d0a3b9d7e41895752997170 nvme: add a local nvme.h header
9d99a8dda154f38307d43d9c9aa504bd3703d596 nvme: move hardware structures out of the uapi version of nvme.h
08c69640cfcbdcc7aaed31c05bbfaf03bb60611c nvme.h: add missing nvme_id_ctrl endianess annotations
57dacad5f2288e3de91f99b29f07b4a2793446d2 nvme: move to a new drivers/nvme/host directory
2812dfe370516ef958b5c9e2eca1b2f002236d2d nvme: include <linux/types.\xc4\xa5> in <linux/nvme.h>
11feb18f4edb1423ed6091908c45de7ade30d5b7 NVMe: Add explicit block config dependency
3d42e67fe5ebc1e5c3aae9b1037e38ec99a362cc nvme: fix 32-bit build warning
f4829a9b7a61e159367350008a608b062c4f6840 blk-mq: fix racy updates of rq->errors
1951feae88c5a39105a704188ccf910faf1d0c50 nvme: use an integer value to Linux errno values
ef658fc2a6809b42dd7002229fd174a9a1645707 NVMe: initialize error to '0'
4cfc766e07a5ed709a9d5289c8644fe78e9f24de nvme: suspend i/o during runtime blk_integrity_unregister
a310acd7a7ea53533886c11bb7edd11ffd61a036 NVMe: use split lo_hi_{read,write}q
b094f89ca42fbb8ce40174d5f85ca8430e499da6 blk-mq: fix calling unplug callbacks with preempt disabled
bf508e910b02a6107a5aa054e03c6fc8a65dae1e nvme: add missing unmaps in nvme_queue_rq
21d34711e1b5970acfb22bddf1fefbfbd7e0123b nvme: split command submission helpers out of pci.c
7a67cbea653e444d04d7e850ab9631a14a196422 nvme: use offset instead of a struct for registers
bf7d3ebbd219d8ad948e812d03e1decfd96c97d0 nvme: split nvme_trans_device_id_page
01fec28a6f3ba96d4f46a538eae089dd92189fd1 nvme: use vendor it from identify
1c63dc66580d4bbb6d2b75bf184b5aa105ba5bdb nvme: split a new struct nvme_ctrl out of struct nvme_dev
69d2b571746d1c3fa10b7a0aa00859b296a98d12 nvme: simplify nvme_setup_prps calling convention
ba1ca37ea4e320c108c356eb8c91ac652afc57dd nvme: refactor nvme_queue_rq
d4f6c3aba5b496a2cb80a8e8e082ae51e46579f3 nvme: factor out a nvme_unmap_data helper
15a190f7f57a2e46717490c35ac09882042a200b nvme: move nvme_error_status to common code
22944e9981db1e496d983298fd420a8c6b758c80 nvme: move nvme_setup_flush and nvme_setup_rw to common code
4160982e7594481d6b7f90aa693638a37d20ea17 nvme: split __nvme_submit_sync_cmd
0b7f1f26f95a51ab11d4dc0adee230212b3cd675 nvme: use the block layer for userspace passthrough metadata
1673f1f08c8876f3942b4fa5e8f6a40215f15a94 nvme: move block_device_operations and ns/ctrl freeing to common code
106198edb74cdf3fe1aefa6ad1e199b58ab7c4cb nvme: add explicit quirk handling
1b2eb374651f0496b86ed5f095d4c448bff214fa nvme: move remaining CC setup into nvme_enable_ctrl
5fd4ce1b005bd6ede913763f65efae9af6f7f386 nvme: move nvme_{enable,disable,shutdown}_ctrl to common code
7fd8930f26be4c9078684b2fef14da0503771bf2 nvme: add a common helper to read Identify Controller data
ce4541f40a949cd9a9c9f308b1a6a86914ce6e1a nvme: move the call to nvme_init_identify earlier
5bae7f73d378a986671a3cad717c721b38f80d9e nvme: move namespace scanning to common code
f3ca80fc11c3af566eacd99cf821c1a48035c63b nvme: move chardev and sysfs interface to common code
9a0be7abb62ff2a7dc3360ab45c31f29b3faf642 nvme: refactor set_queue_count
8c0b39155048d5a24f25c6c60aa83729927b04cd nvme: precedence bug in nvme_pr_clear()
749941f2365db8198b5d75c83a575ee6e55bf03b nvme: only ignore hardware errors in nvme_create_io_queues
7385014c073263b077442439299fad013edd4409 nvme: only add a controller to dev_list after it's been fully initialized
77bf25ea70200cddf083f74b7f617e5f07fac8bd nvme: protect against simultaneous shutdown invocations
4c9f748f0ee88447b28546991f60f43a7319aafd nvme: don't take the I/O queue q_lock in nvme_timeout
31c7c7d2c9f17dc98a98c59c17e184bf164ee760 nvme: merge nvme_abort_req and nvme_timeout
297465c873ae8c99180617ca904dc1a4a738f25d nvme: add NVME_SC_CANCELLED
846cc05f95d599801f296d8599e82686ebd395f0 nvme: simplify resets
e1569a16180aef4311ff5fc54f54b23ae9e8a03e nvme: do not restart the request timeout if we're resetting the controller
fd634f4142861e533ac57e88ece8e98ab5851edb nvme: merge probe_work and reset_work
5c8809e650772be87ba04595a8ccf278bab7b543 nvme: remove dead controllers from a work item
6bf25d16410d8d95e3552f31c6a99e3fc3d31752 nvme: switch abort_limit to an atomic_t
540c801c65eb58e05e0ca38b6fd644a83d7e2b33 NVMe: Implement namespace list scanning
92f7a1624bbc2361b96db81de89aee1baae40da9 NVMe: Use unbounded work queue for all work
53029b0441bbd263dbb2ee6429572b1732dad4de NVMe: Remove device management handles on remove
4b9d5b151046ff717819864f93cb8e012b347bce NVMe: Simplify metadata setup
4680072003df14230e9eeeeefb617401012234a5 nvme: fix admin queue depth
7688faa6dd2c99ce5d66571d9ad65535ec39e8cb nvme: factor out a few helpers from req_completion
d8f32166a9c587e87a3a86f654c73d40b6b5df00 nvme: switch delete SQ/CQ to blk_execute_rq_nowait
adf68f21c15572c68d9fadae618a09cf324b9814 nvme: special case AEN requests
e7a2a87d5938bbebe1637c82fbde94ea6be3ef78 nvme: switch abort to blk_execute_rq_nowait
aae239e1910ebc27ec9f7e8b25904a69626cf28c nvme: simplify completion handling
eee417b0697827a6e120199b126b447af3c81b47 nvme: properly free resources for cancelled command
71bd150c71072014d98bff6dc2db3229306ece35 nvme: move struct nvme_iod to pci.c
f4800d6d1548e0d5ab94f2216d41d94282e2588c nvme: merge iod and cmd_info
a0a3408ee614848c27b0d36c2fe490da3b387b8d NVMe: Add pci error handlers
2b9b6e86bca7209de02754fc84acf7ab3e78734e NVMe: Export namespace attributes to sysfs
363c9aacb6c59bb63148dd115632880a4aed4d88 nvme: Move nvme_freeze/unfreeze_queues to nvme core
69d3b8ac15a5eb938e6a01909f6cc8ae4b5d3a17 nvme: synchronize access to ctrl->namespaces
bfd8947194b2e2a53db82bbc7eb7c15d028c46db nvme: fixes for NVME_IOCTL_IO_CMD on the char device
e3e9d50cd6ed392bb716e35c134d1e82707c51b4 NVMe: Fix admin queue ring wrap
1d49c38c4865c596b01b31a52540275c1bb383e7 NVMe: Use a retryable error code on reset
25646264e15af96c5c630fc742708b1eb3339222 NVMe: Remove queue freezing on resets
db3cbfff5bcc0b9a82d8c71f00b9d60fad215871 NVMe: IO queue deletion re-write
a5cdb68c2c10f0865122656833cd07636a4143ee NVMe: Shutdown controller only for power-off
779ff75617099f4defe14e20443b95019a4c5ae8 NVMe: Export NVMe attributes to sysfs group
a59e0f5795fe52dad42a99c00287e3766153b312 blk-mq: End unstarted requests on dying queue
4f76d0e49835d3da33aa54811157421f7061805e NVMe: Fix io incapable return values
ef2d4615c59efb312e531a5e949970f37ca1c841 NVMe: Allow request merges
ae1fba20015bca7401db2422fe18c9c049184163 NVMe: Requeue requests on suspended queues
ff23a2a15a2117245b4599c1352343c8b8fb4c43 NVMe: Poll device while still active during remove
f8e68a7c9af5f8047f7f8295874bedf306063709 NVMe: Rate limit nvme IO warnings
b00a726a9fd82ddd4c10344e46f0d371e1674303 NVMe: Don't unmap controller registers on reset
075790ebba4a1eb297f9875e581b55c0382b1f3d NVMe: Use IDA for namespace disk naming
646017a612e72f19bd9f991fe25287a149c5f627 NVMe: Fix namespace removal deadlock
f58944e265d4ebe47216a5d7488aee3928823d30 NVMe: Simplify device reset failure
69d9a99c258eb1d6478fd9608a2070890797eed7 NVMe: Move error handling to failed reset handler
63088ec7c8eadfe08b96127a41b385ec9742dace NVMe: Don't allow unsupported flags
e9fc63d682dbbef17921aeb00d03fd52d6735ffd NVMe: Fix 0-length integrity payload
da35825d9a091a7a1d5824c8468168e2658333ff nvme: set queue limits for the admin queue
45686b6198bd824f083ff5293f191d78db9d708a nvme: fix max_segments integer truncation
949928c1c731417cc0f070912c63878b62b544f4 NVMe: Fix possible queue use after freed
20e61da7ffcfd84a1b6f797e745608572e5bc218 ipv4: fail early when creating netdev named all or default
87e57399e9d3606b08b0e1b2dd0f4aaa1d8ba365 sit: set rtnl_link_ops before calling register_netdevice
ff0387c3777f2438bad2088abe442c9f231b0be4 PCI: Delete unnecessary NULL pointer checks
4efe874aace57dba967624ce1c48322da2447b75 PCI: Don\'t read past the end of sysfs "driver_override" buffer
e2c6544829f8df396a0a233c86d5ee78f405ffef e1000e: Move pm_qos_req to e1000e adapter
69cfbc95bdbfa2bd9a82f27dc131b08c48542f19 e1000e: i219 - increase IPG for speed 10/100 full duplex
5a5e889c80cef7513a40143ee1e474acccdee13b e1000e: clean up the local variable
822b3b2ebfff8e9b3d006086c527738a7ca00cd0 net: Add max rate tx queue attribute
42e52bf9e3ae80fd44b21ddfcd64c54e6db2ff76 net: add netnotifier event for upper device change
5d261913ca3daf6c2d21d38924235667b3d07c40 net: add lower_dev_list to net_device and make a full mesh
620f3186caa8124e0efaf329751cf51c5d55c731 net: remove search_list from netdev_adjacent
8b5be8561b804edf6b58fc27edbccf1d45863e08 net: add netdev_for_each_upper_dev_rcu()
7863c054d1b4fd35f76c13e2e918f7f483fe48f4 net: use lists as arguments instead of bool upper
2f268f129c2d1a05d297fe3ee34d393f862d2b22 net: add adj_list to save only neighbours
5249dec7380cb64928d2ae6201028b4da1dceb1e net: add RCU variant to search for netdev_adjacent link
402dae9614557296e84543008a8e582c28fb1db3 net: add netdev_adjacent->private and allow to use it
46bb4807b5d95a049b008efd639ff8942970d815 bonding: modify bond_get_slave_by_dev() to use neighbours
31088a113c2a948856ed2047d8c21c217b13e85d net: add for_each iterators through neighbour lower link's private
b6ccba4c681fdaf0070e580bf951badf7edc860b net: add a possibility to get private from netdev_adjacent->list
5a52405a30abf70a60312ad4231385699f09cb85 bonding: convert first/last slave logic to use neighbours
344f3297629e409675120998d1cfe4d21c34fbaa bonding: use neighbours for bond_next_slave()
4fee991a4689ca64abea90814e0b3c6d30a3c62f bonding: remove slave lists
842d67a7b34ea735155812ecf0671a481284f358 net: expose the master link to sysfs, and remove it from bond
5831d66e8097aedfa3bc35941cf265ada2352317 net: create sysfs symlinks for neighbour devices
4085ebe8c31face855fd01ee40372cb4aab1df3a net: Find the nesting level of a given device by type.
44a4085538c844e79d6ee6bcf46fabf7c57a9a38 bonding: Fix stacked device detection in arp monitoring
fbe168ba91f7c327856f205699404284c2f09e36 net: generic dev_disable_lro() stacked device handling
2f064f3485cd29633ad1b3cfb00cc519509a3d72 mm: make page pfmemalloc check more robust
2bd82484bb4c5db1d5dc983ac7c409b2782e0154 xps: fix xps for stacked devices
f663dd9aaf9ed124f25f0f8452edf238f087ad50 net: core: explicitly select a txq before doing l2 forwarding
99932d4fc03a13bb3e94938fe25458fabc8f2fc3 netdevice: add queue selection fallback handler for ndo_select_queue
8fc54f68919298ff9689d980efb495707ef43f30 net: use reciprocal_scale() helper
b9507bdaf40e91fea2b1c0c1ee7dc627c8ee6fd6 netdevice: move netdev_cap_txqueue for shared usage to header
638b2a699fd3ec926d6dda2d2bd96e8f1c49e463 net: move netdev_pick_tx and dependencies to net/core/dev.c
52bd2d62ce6758d811edcbd2256eb9ea7f6a56cb net: better skb->sender_cpu and skb->napi_id cohabitation
93f93a4404159ecf7e9148f5ad0718ec702ac4cb net: move skb_mark_napi_id() into core networking stack
d64b5e85bfe2fe4c790abcbd16d9ae32391ddd7e net: add netif_tx_napi_add()
6180d9de61a5c461f9e3efef5417a844701dbbb2 net: move napi_hash[] into read mostly section
93d05d4a320cb16712bb3d57a9658f395d8cecb9 net: provide generic busy polling to all NAPI drivers
53692b1de419c1b59106909c7f6b4dd3dbc768ac sctp: Rename NETIF_F_SCTP_CSUM to NETIF_F_SCTP_CRC
a188222b6ed29404ac2d4232d35d1fe0e77af370 net: Rename NETIF_F_ALL_CSUM to NETIF_F_CSUM_MASK
f6f6424ba773da6221ecaaa70973eb4dacfa03b2 net: make vid as a parameter for ndo_fdb_add/ndo_fdb_del
fe5df1b91ec35fb80159874670e6bc81c8851c04 ethtool: Expand documentation of string set types
4456ed04ea44b800d691b18c14a68ec9894d2aca ethtool: future-proof interface for speed extensions
d4ab4286276fcd6c155bafdf4422b712068d2516 ethtool: correctly ensure {GS}CHANNELS doesn't conflict with GS{RXFH}
8bf3686204861d39803797ebbd1e264442421907 ethtool: ensure channel counts are within bounds during SCHANNELS
e4c6734eaab90695db0ea8456307790cb0c1ccb5 net: rework ndo tc op to consume additional qdisc handle parameter
16e5cc647173a97e33b3e3ba81f73eb455561794 net: rework setup_tc ndo op to consume general tc operand
e52bc7c28ac9f54db6f86b19ed65c599def18c98 lib/bitmap.c: conversion routines to/from u32 array
ac2c7ad0e5d6030452c9af2fafd192e17fd04264 net/ethtool: introduce a new ioctl for per queue setting
b5d3755a22e0cc4c369c0985aef0c52c2477c1e7 uapi: define DIV_ROUND_UP for userland
421797b1aa363cb897f29f7d365e068dc9d9db81 net/ethtool: support get coalesce per queue
f38d138a7da6510a1184e3bc5f425deb187c3265 net/ethtool: support set coalesce per queue
3f1ac7a700d039c61d8d8b99f28d605d489a60cf net: ethtool: add new ETHTOOL_xLINKSETTINGS API
793cf87de9d1a62dc9079c3ec5fcc01cfc62fafb ethtool: Set cmd field in ETHTOOL_GLINKSETTINGS response to wrong nwords
4847f04982c360ffb233a10e8ef79a16e8be5c28 bonding: Don't segment multiple tagged packets on bonding device
266b495f11d6706018f66250cb02a788ff2490d7 bonding: don't use stale speed and duplex information
1098cee6e1b11e4fe80b2765eb54d412d4294f03 bonding: remove duplicate set of flag IFF_MULTICAST
fe30937b65354c7fec244caebbdaae68e28ca797 bonding: fix bond_get_stats()
7c3877f275ee6b479fa828947811c76d431501ca hv_netvsc: Implement batching in send buffer
cbacec76bcd03ff21b37ac331e652b5a8f3ea644 hv_netvsc: Cleanup the test for freeing skb when we use sendbuf mechanism
b08cc79155fc26d0d112b1470d1ece5034651a4b hv_netvsc: Eliminate memory allocation in the packet send path
721514222db13498613706709409c21c105e0f4a hv_netvsc: Define a macro RNDIS_AND_PPI_SIZE
ee90b81203a91d4e5385622811ee7872b5bcfe76 hv_netvsc: Fix the packet free when it is in skb headroom
981a1bd85a959bb3b44e07c212ebc61c62ad7cf9 hv_netvsc: use single existing drop path in netvsc_start_xmit
e88f7e078e47d4261a22e6f20a574620cbfc7a4b hv_netvsc: try linearizing big SKBs before dropping them
aa0a34be68290aa9aa071c0691fb8b6edda38358 hv_netvsc: Implement partial copy into send buffer
3f300ff41d89fe9674b8dbab950ba2572639ee8d hv_netvsc: introduce netif-msg into netvsc module
b56fc3c536541c8081cd5f1f1d101a16c002a365 hv_netvsc: Fix a bug in netvsc_start_xmit()
7aab5159fa0100ee3f80d1b0f55cd7e9b5823270 hv_netvsc: remove unused variable in netvsc_send()
82fa3c776e5abba7ed6e4b4f4983d14731c37d6a hv_netvsc: Use the xmit_more skb flag to optimize signaling the host
7eafd9b4005643cfc24f1daf78f4dd56ff71f559 hv_netvsc: use per_cpu stats to calculate TX/RX data
4b02b58b52fab385e120c4b4f0d90f5f3076352d hv_netvsc: change member name of struct netvsc_stats
e01ec2199ef22e2cabd7d6e68a192f3eb728029f hv_netvsc: Properly size the vrss queues
b3e6b82a0099dfef038e40c630a554ed1e402504 hv_netvsc: Wait for sub-channels to be processed during probe
71790a2792c8772e29bf5aa726215d9256ef93dc hv_netvsc: Add structs and handlers for VF messages
8ebdcc52b9b8a53e3ba2643f515d41fff44d4743 hv_netvsc: Set vRSS with num_chn in RNDIS filter
b5960e6e2b5c52520cec5888c3feb71b71ba1980 hv_netvsc: Implement set_channels ethtool op
954591b9f3b43e7015bdd83acaa317658a9b7048 hv_netvsc: Fix dereference of nvdev before check
27a70af3f4cf633a1b86c0ac7b426e2fe16ad2e5 hv_netvsc: rework link status change handling
22e9dd249bd4bcf338c282d90df08ccf5dbfbee2 hv_netvsc: Resize some of the variables in hv_netvsc_packet
934d202255ecd03d1f48b1031a2e03cb647e73d9 hv_netvsc: Rearrange the hv_negtvsc_packet to be space efficient
25b85ee890530f70de850f15660ed41abbee1172 hv_netvsc: Eliminate the channel field in hv_netvsc_packet structure
24476760ef0b45bab75ea6731d081aeb48113e6a hv_netvsc: Eliminate rndis_msg pointer from hv_netvsc_packet structure
c4b20c6370aa5cdbe11536125d86f31378d4b702 hv_netvsc: Eliminatte the data field from struct hv_netvsc_packet
09215ef5dfd5a2c6c169733162091ca7e56a4890 hv_netvsc: Eliminate send_completion from struct hv_netvsc_packet
074c2fe5ef3d09e9a1008d307a22ab5086e22728 hv_netvsc: Eliminate send_completion_ctx from struct hv_netvsc_packet
c0eb454034aab783dc602739237a63b30867f5bd hv_netvsc: Don't ask for additional head room in the skb
8b9fbe1ac390689f01153d6af8485caec5423ccc hv_netvsc: move subchannel existence check to netvsc_select_queue()
2a04ae8acb144996eba6e3d69ab2a7156c775416 hv_netvsc: remove locking in netvsc_send()
a9f2e2d6569d00ae8f9f832f1b56bc7702dfd2d3 hv_netvsc: Eliminate page_buf from struct hv_netvsc_packet
3a3d9a0a731add5afaafd9c714e7efe11820fe5b hv_netvsc: Eliminate send_completion_tid from struct hv_netvsc_packet
694a9fb0263dddfb07bc490a02e59d6962602fe8 hv_netvsc: Eliminate is_data_pkt from struct hv_netvsc_packet
a429bda374a640b05a8f949fed080af7512be49a hv_netvsc: Eliminate completion_func from struct hv_netvsc_packet
bde79be529c43b5a5a877b3e0b93607d22a8b01e hv_netvsc: Eliminate xmit_more from struct hv_netvsc_packet
10082f98878a9dff1563745f9f1dd9d1ff142700 hv_netvsc: Eliminate status from struct hv_netvsc_packet
760d1e36cc16fa6444dd2000ac645455de1ecd51 hv_netvsc: Eliminate vlan_tci from struct hv_netvsc_packet
cf8190e4c26c8ccf87d80793f8f1f7fe150cdf8c hv_netvsc: Fix race condition on Multi-Send Data field
757647e10e55c01fb7a9c4356529442e316a7c72 hv_netvsc: use skb_get_hash() instead of a homegrown implementation
c85e4924452ae8225c8829f3fa8a2f7baa34bc5c hv_netvsc: Fix book keeping of skb during batching process
a060679c6b3da17dc9e95d0500f811de118ec901 hv_netvsc: cleanup netdev feature flags for netvsc
76d13b568776fdef646c70878de406c90aef46a9 hv_netvsc: add software transmit timestamp support
49eb93892d8dfcf5dc5088e640f486d08572d8bf hv_netvsc: add ethtool support for set and get of settings
d66ab51442211158b677c2f12310c314d9587f74 hv_netvsc: Move subchannel waiting to rndis_filter_device_remove()
d212b4633c3a99561939f2d423eacf3263850bcd hv_netvsc: Fix accessing freed memory in netvsc_change_mtu()
9efc2f7dcd06e04d7b6a3032ae65bfd628b1aebe hv_netvsc: Fix the array sizes to be max supported channels
0520336afe5de76324c73f793bc40732e5c13359 cxl: Export file ops for use by API
1a8782e59ff9bb0ed4b75d6a346a2ed212bd2031 fm10k: fold fm10k_pull_tail into fm10k_add_rx_frag
887a79f4a8cce981bb74bf56e1ee25786f235e66 e1000: e1000_ethertool.c coding style fixes
13809609610ae2ab4a7730982c3e067d8edb5a67 e1000: convert to build_skb
de591c783ae739f6fb41e12f3371575edcb62af0 e1000: switch to napi_gro_frags api
008e56d200225321371748d95908e6222436f06d mtip32xx: Cleanup queued requests after surprise removal
0f70b66975ce4331e9002b792d5aa6787a110181 Drivers: hv: vmbus: remove code duplication in message handling
fa8187c96471c49419c25d4ec3299d17d3f274b2 net: declare new net_device priv_flag IFF_NO_QUEUE
25f929fbff0d1bcebf2e92656d33025cd330cbf8 net: allow setting mac address of loopback device
e65db2b724a2758ede002cb995bee1470f805b1a net: loopback: convert to using IFF_NO_QUEUE
b0e010c527de742cb18e8d50a06dfd1a995b5382 ipvs: replace ip_vs_fill_ip4hdr with ip_vs_fill_iph_skb_off
3f20efba41916ee17ce82f0fdd02581ada2872b2 ipvs: handle ip_vs_fill_iph_skb_off failure
f719e3754ee2f7275437e61a6afd520181fdd43b ipvs: drop first packet to redirect conntrack
4f7d2cdfdde71ffe962399b7020c674050329423 rtnetlink: verify IFLA_VF_INFO attributes before passing them to driver
dd461d6aa894761fe67c30ddf81eec0d08be216b if_link: Add control trust VF
3ba3458fb9c050718b95275a3310b74415e767e2 ipv6: Count in extension headers in skb->network_header
b22fbf22f8469d8cacb6fcf5d266426826e1137d bridge: fdb: rearrange net_bridge_fdb_entry
fbd40ea0180a2d328c5adc61414dc8bab9335ce2 ipv4: Don't do expensive useless work during inetdev destroy.
391a20333b8393ef2e13014e6e59d192c5594471 ipv4/fib: don't warn when primary address is missing if in_dev is dead
3d44d51bd339766f0178f0cf2e8d048b4a4872aa x86/entry/compat: Add missing CLAC to entry_INT80_32
c89f2682a39192433c296bf97b834fd2815a758b cpufreq: powernv: Replace pr_info with trace print for throttle event
3e5963bc343b3fb4ca045e9d1c14cb9ce89234b8 cpufreq: powernv: Define per_cpu chip pointer to optimize hot-path
84b6d3e6149c5280bc18b42e2f12efdaf354e49c ftrace: Make ftrace_hash_rec_enable return update bool
7f50d06bb6b825d34f069c6c7a1aab96ad0b94d9 ftrace: Update dynamic ftrace calls only if necessary
5be587b1110132b4f05e0bc3515a145365e910fe cxl: Introduce implementation-specific API
2b04cf310ba8c123e9957cfab80274e7606bf53c cxl: Rename some bare-metal specific functions
73d55c3b59f7d9cadc1dbc07d75ccee6c81fdf5b cxl: IRQ allocation for guests
cbffa3a5146a90f46806cef3a98b8be5833727e8 cxl: Separate bare-metal fields in adapter and AFU data structures
14baf4d9c739e6e69150512d2eb23c71fffcc192 cxl: Add guest-specific code
4752876c71701b7663a5ded789058ab2c05f7d0f cxl: sysfs support for guests
594ff7d067ca42676e27e2a7b5dcc0ff039d08ca cxl: Support to flash a new image on the adapter from a guest
b40844aa55bb325de7509003c7529c75b0532412 cxl: Parse device tree and create cxl device(s) at boot
d601ea918b878582e60b773f2f943d8d292b2abf cxl: Support the cxl kernel API from a guest
0d400f77c19e8d2606f8194846bcf18ebdc9df2a cxl: Adapter failure handling
17eb3eef19f2c0541a7f04ad37c4a7fec89f0822 cxl: Ignore probes for virtual afu pci devices
3dc8fc083dbfeede7b63a0c07581192e97711365 HID: Use hid_parser for pre-scanning the report descriptors
f961bd3516e4f699bbacff5d7f5247d6d87c59f0 HID: detect Win 8 multitouch devices in core
595e9276ce68791317484ec7f0f9f2e0457c3b34 HID: do not init input reports for Win 8 multitouch devices
cafebc058bf86e63fff5354864781d3de11e41d3 HID: remove hid_get_raw_report in struct hid_device
7e845d46b13e7730a3720e978c28117ce422edf9 HID: introduce helper to access hid_output_raw_report()
2ebaebcf31096f83401c850393e93bc8f28db0e9 HID: input: hid-input remove hid_output_raw_report call
3c86726cfe38952f0366f86acfbbb025813ec1c2 HID: make .raw_request mandatory
b0dd72aafd785785bedbb6db932955807e454a65 HID: replace hid_output_raw_report with hid_hw_raw_request for feature requests
c63e0e370028d7e4033bd40165f18499872b5183 HID: Revert "Revert "HID: Fix logitech-dj: missing Unifying device issue""
bd27e202c640d19fbf948a56914c230dcbaee6d0 HID: logitech-dj: remove hid_output_raw_report call
7e0bc880fce51ba3bd9128b8df9dc59567c5f73a HID: wiimote: replace hid_output_raw_report with hid_hw_output_report for output requests
0fa9c61618fe996c153d186e4087a61ca4e7b2ed HID: multitouch: remove registered devices with default behavior
6aef704e38293524067505eeafec9c811b18d66a HID: multitouch: add support of other generic collections in hid-mt
e24d0d399b2fce71b627043e900ef28283850482 HID: core: do not scan constant input report
7c7606a2464fee1cf50efef34aa44aee1edf453a HID: multitouch: add support of EliteGroup 05D8 panels
66e5482752386786c4346f4f4b214b0998639702 HID: usbhid: quirk for PM1610 and PM1640 Touchscreen.
dabb05c6670e6e4415d7b56cd5864a5dbd90207f HID: make hid_report_len as a static inline function in hid.h
2c6e0277e1eab3df5db81c59e408b7b1c14b1b72 HID: multitouch: Add support for button type usage
1cc1cc92c4c4891abc48a777fb9fbc69077d5673 HID: multitouch: Fix fields from pen report ID being interpreted for multitouch
b2c68a2f1bab3e3d3bf4ab2b5fcd94cd37f61b41 HID: hid-input: allow input_configured callback return errors
dc425a1c8c02b45fbab8b3ba522649d238cf84db HID: multitouch: Add suffix for HID_DG_TOUCHPAD
6d4f5440a3a2bb2e9d0d582bbf98234e9e9bb095 HID: multitouch: Fetch feature reports on demand for Win8 devices
d8ce9bf5551bfea431893bdd0a943f24a5170828 HID: move to_hid_device() to hid.h
ee79a8f840a45d331bc33e55cbcc89bba417671c HID: use to_hid_device()
3a75b24949a8d34d2014866006e30dc69dd567c8 HID: hidraw: replace hid_output_raw_report() calls by appropriates ones
e534a9352237e84263cecedff283387b144b3ed8 HID: sony: do not rely on hid_output_raw_report
9b5a9ae88573884224a26fda0e3eb6a6ec48686d HID: i2c-hid: implement ll_driver transport-layer callbacks
649f94790314b502bc4e905e005d89c3b693d60a HID: i2c-hid: use generic .request() implementation
6fd182028c43baf1c7d017d52b0134ecadbdc447 HID: remove hid_output_raw_report transport implementations
c90570d9511d42421c85709b46bffd366185d835 PCI: Assign resources before drivers claim devices (pci_scan_bus())
b97ea289cf6aff8d4cbcefe2b707bb9b00a73c73 PCI: Assign resources before drivers claim devices (pci_scan_root_bus())
4449f079722c86d2f6925da039835acdd8e973a8 PCI: Calculate maximum number of buses required for VFs
ea9a8854161d9580cfabe011c0ae296ecc0e1d4f PCI: Set SR-IOV NumVFs to zero after enumeration
7f16d7e787b731d9db273b822b4b8069102e57a6 s390: show virtualization support in /proc/cpuinfo
07197fd05fa3eb2e8a5aae92938ca5d07bcac9fc KVM: s390: don't load kvm without virtualization support
8dfd523f8523779210038264259546299a8398e9 s390/sclp: introduce check for SIE
affddff69c55eb68969448f35f59054a370bc7c1 powerpc/powernv: Add a kmsg_dumper that flushes console output on panic
c88c5d43732a0356f99e5e4d1ad62ab1ea516b81 powerpc/powernv: Fix OPAL_CONSOLE_FLUSH prototype and usages
289fcff4bcdb1dcc0ce8788b7ea0f58a9e4a495f usb: add bus type for USB ULPI
ca07e1c1e4a6aed2b2576256b1fdc53a9f87bb40 drivers:usb:fsl:Make fsl ehci drv an independent driver module
a09e23f53e2c14a65a3b14a00060fea163081e1f usb: gadget: net2280: check interrupts for all endpoints
c65c4f052bc3b67989bf54914798513685c54988 usb: gadget: net2280: fix use of GPEP in both directions
e842b84c8e7221c45c8dbd7de09185c6149e1cf9 usb: phy: Add interface to get phy give of device_node.
138c3f03b017e261316a4f1ec793e1ff74516def drivers:usb:fsl: Add support for USB controller version-2.5
74db22cb3a16dcd782a31236eb139f5865804ae6 drivers:usb:fsl: Fix compilation error for fsl ehci drv
0317a65b94770c953480970f67db0a716778c6a7 usb, HID: Remove Vernier devices from lsusb and hid_ignore_list
df115f3ee9ea703e1209392cd08f8d6783244721 MIPS: Octeon: Set OHCI and EHCI MMIO byte order to match CPU
d065c3c17dae95832badf6329512dd057c905890 drivers/net/usb: add device id for NVIDIA Tegra USB 3.0 Ethernet
4696b8874d7de39850931888bc9f2aa12d29fb46 usb: ulpi: ulpi_init should be executed in subsys_initcall
b214396fb5890af58ff04b42deba7de5a2686338 r8152: fix the issue about U1/U2
7daed8dc2a4b48c5a7ea5b3243d01837ec1aed0a r8152: fix wakeup settings
41cec84cf2858b59121a1cec5e9b09fc1bf1d882 r8152: don't enable napi before rx ready
37608f3e57dda037a230afb7dc8da9a63f100e06 r8152: reset device when tx timeout
a8079092c1bbf9aec3756b35256c7816b8845af7 net: qmi_wwan: add HP lt4111 LTE/EV-DO/HSPA+ Gobi 4G Module
2070c48cf2b78af89ba529c00992eaaa18df8ef7 qmi_wwan: Add support for Dell Wireless 5809e 4G Modem
fb02eb4a29303295f2fed8a69d9aa703792c834b r8152: support the new RTL8153 chip
655fe4effe0f1f40e4f6ca6b3cc64a7fe0032183 usbcore: add sysfs support to xHCI usb3 hardware LPM
38aa420096e565fe9c98f9d9475fd168114501a9 drivers:usb:fsl: Replace macros with enumerated type
f4fdfaa280a284be8a056d6840cdbbf42c05bf95 drivers: usb: fsl: Modify phy clk valid bit checking
f8786a91548df6930643a052e40e5c0b7a8403a5 drivers: usb: fsl: Workaround for USB erratum-A005275
be12be546baa26a1eeb59b78e2a616cd946e850a USB: host: ohci-at91: depend on OF
a1b93ab71587b8b44d45d114937cb4e75f9a5f27 Revert "usb: interface authorization: Use a flag for the default device authorization"
d0942473e3ca4629a40bbf0c9fd74fc0c7ff2a79 r8152: split DRIVER_VERSION
2dd49e0f16fb0e07c6fcc1322ebba310f5827072 r8152: fix the runtime suspend issues
77b0a099674ac1c43b631445d8d50453e4805b29 cdc-ncm: use common parser
45b6a73f62ebcf3ff067895fb8030e67f4c7b67f usb-gadget: use per-attribute show and store methods
70910791731b5956171e1bfcad707766b8e18fee qmi_wwan: fix entry for HP lt4112 LTE/HSPA+ Gobi 4G Module
68242a5a1e2edce39b069385cbafb82304eac0f1 net: qmi_wwan: add XS Stick W100-2 from 4G Systems
6527f833bf3fa34ed53e10b8010760fff42169f0 net: cdc_ncm: fix NULL pointer deref in cdc_ncm_bind_common
f8c0cfa5eca902d388c0b57c7ca29a1ff2e6d8c6 net: cdc_mbim: add "NDP to end" quirk for Huawei E3372
90186af404ada5a47b875bf3c16d0b02bb023ea0 r8152: fix lockup when runtime PM is enabled
1dfddff5fcd869fcab0c52fafae099dfa435a935 net: cdc_ncm: avoid changing RX/TX buffers on MTU changes
e439bd4a4fdeb29488f48f14845ad35607e6302c net: qmi_wwan: Add WeTelecom-WPD600N
0cbd4b34cda9dfd36b6c26b692dee181e0100b67 xhci: mediatek: support MTK xHCI host controller
84c1eeb02353ffcafe039e892410cad835334ba9 usb : replace dma_pool_alloc and memset with dma_pool_zalloc
097a9ea0e48fa33159ad47d1dc9ef3b215bfc090 usb: make "nousb" a clear module parameter
93725149794d3d418cf1eddcae60c7b536c5faa1 net: qmi_wwan: MDM9x30 specific power management
5ee3c60c8d3b88cab6496c9b7d49a01576dd9cf9 r8152: fix the wake event
216a8349d3a0dd1bc2afbcc821e374c8f929bd62 r8152: use test_and_clear_bit
cda9fb01dc3cafd718b2865b447e869bf6624ddd r8152: adjust ALDPS function
18715b261541f35ccede9b8686ee3ebaac697d38 net: qmi_wwan: Add SIMCom 7230E
7e70cbffe236721051bbaff965e477df06dcb190 usb: xhci: add a quirk bit for ssic port unused
b765a16a11fad6b9c94fea7718c22692581e8d18 usb: xhci-mtk: fix bpkts value of LS/HS periodic eps not behind TT
882fa27f488ed3c4b67699d99e8c5ff64c7a9cd1 usb: xhci-mtk: fix AHB bus hang up caused by roothubs polling
fb5eb24cdd5cdb83be77d3e4b2f16e92e06bd9e9 Add Dell Wireless 5809e Gobi 4G HSPA+ Mobile Broadband Card (rev3) to qmi_wwan
4d06dd537f95683aba3651098ae288b7cbff8274 cdc_ncm: do not call usbnet_link_change from cdc_ncm_bind
d0751b98dfa391f862e02dc36a233a54615e3f1d PCI: Add dev->has_secondary_link to track downstream PCIe links
0824965140fff1bf640a987dc790d1594a8e0699 PCI: Propagate the "ignore hotplug" setting to parent
cd11433eda42815ab53c8be44580a0009000b761 PCI: Include <linux/pci.h>, not <asm/pci.h>
01d72a95188880b22190e937ed8718ed4b45bdce PCI: Remove unused pci_dma_burst_advice()
b35b1df5e6c213b0b0322e6c231b7111efe4a390 PCI: Tolerate hierarchies with no Root Port
21126b296e6f5f172e72da7cebb42b87fbd19b3a ACPICA: Remove extraneous error message for large number of GPEs.
ac503e4a309a3993a069750f95c2815ee5db5aa5 nfsd: use short read as well as i_size to set eof
f25e8e79bdb269b47de28ac263af09b9e29c775a lpfc: Update copyright to 2015
506115777af017bfc0968ee1c6aed024cdb6e43b lpfc: Update modified file copyrights
3ff51a199f9e85aed843471bc10dae9e94dbb0fc tty: Remove TTY_HUPPING
216030ec55e08646be629ee32725c0189ad74c9a tty: Check tty->count instead of TTY_CLOSING in tty_reopen()
55199ea3bd2e53007715d544fb9094cbbdda1597 pty: Always return -EIO if slave BSD pty opened first
04980706c8febe41ec598116b174bd3a2dc82355 tty: Remove TTY_CLOSING
2aff5e2bc62db43e05c814461a08aff0fc2b7fe5 tty: Change tty lock order to master->slave
2febdb632bb96235b94b8fccaf882a78f8f4b2bb tty: Preset lock subclass for nested tty locks
eef15e2a54fad4c2ce3f0a81485dc591ce678f4f tty: Remove warning in tty_lock_slave()
fef062cbf2a90fd926a6fff9eb06dde1b699f1b3 tty: Remove ASYNC_CLOSING checks in open()/hangup() methods
f148d6d7b79adb42a8e7fa95bf6be5b607015f26 tty: Remove wait_event_interruptible_tty()
7f22f6c935cda600660e623a411fe380015d28d9 tty: Retry failed reopen if tty teardown in-progress
b721ca0d192754deccb89fb01c77e41e6fd91ad9 thermal/powerclamp: remove cpu whitelist
195daf665a6299de98a4da3843fed2dd9de19d3a watchdog: enable the new user interface of the watchdog mechanism
b2f57c3a0df9d168220be8848a303a32ef4d2e7d watchdog: clean up some function names and arguments
692297d8f96887f836d9049a653ed05a71cf48fb watchdog: introduce the hardlockup_detector_disable() function
b5242e98c1cb834feb1e84026f09a4796b49eb4d smpboot: allow excluding cpus from the smpboot threads
fe4ba3c34352b7e8068b7f18eb233444aed17011 watchdog: add watchdog_cpumask sysctl to assist nohz
aacfbe6a9724bb6d66a656a5abcc681d5649ed92 kernel/watchdog: move NMI function header declarations from watchdog.h to nmi.h
8c073d27d7ad293bf734cc8475689413afadab81 watchdog: introduce watchdog_suspend() and watchdog_resume()
d4bdd0b21c7652a8271f873cc755486b255c1bbd watchdog: use park/unpark functions in update_watchdog_all_cpus()
999bbe49ea0118b70ddf3f5d679f51dc7a97ae55 watchdog: use suspend/resume interface in fixup_ht_bug()
ec6a90661a0d6ce1461d05c7a58a0a151154e14a watchdog: rename watchdog_suspend() and watchdog_resume()
b43cb43cb85b91d79d9f0719ff581e8cb6dfbb8f watchdog: implement error handling in update_watchdog_all_cpus() and callers
c993590c6ae6273681d9fb2a8d26dce03bf9d96c watchdog: implement error handling in lockup_detector_suspend()
55537871ef666b4153fd1ef8782e4a13fee142cc kernel/watchdog.c: perform all-CPU backtrace in case of hard lockup
ee89e71eb091d3ef8ca2be8bd4ec77ccfa91334c kernel/watchdog.c: avoid race between lockup detector suspend/resume and CPU hotplug
39d2da2161d35de301ec5397ce9103c68b883054 kernel/watchdog.c: fix race between proc_watchdog_thresh() and watchdog_timer_fn()
03e0d4610bf4d4a93bfa16b2474ed4fd5243aa71 watchdog: introduce touch_softlockup_watchdog_sched()
82607adcf9cdf40fb7b5331269780c8f70ec6e35 workqueue: implement lockup detector
1717f2096b543cede7a380c858c765c41936bc35 panic, x86: Fix re-entrance problem due to panic on NMI
58c5661f2144c089bbc2e5d87c9ec1dc1d2964fe panic, x86: Allow CPUs to save registers even if looping in NMI context
7bbee5ca3896f69f09c68be549cb8997abe6bca6 kexec: Fix race between panic() and crash_kexec()
b279d67df88a49c6ca32b3eebd195660254be394 x86/nmi: Save regs in crash dump on external NMI
ebc41f20d77f6ad91f1f2d2af5147dc9bb6b5eea panic: change nmi_panic from macro to function
2a01bd1bd3d28d1eef26d5509c95d0923f7dc75c s390/pci: use pci_rescan_remove_lock
69eea95c48857c9dfcac120d6acea43027627b28 s390/pci_dma: fix DMA table corruption with > 4 TB main memory
66728eeea6d80060e4b9df55c7845c838ff2799f s390/pci_dma: handle dma table failures
52d43d8184b1840c7cf6136724223585f51a1074 s390/pci_dma: improve debugging of errors during dma map
9a99649f2a89fdfc9dde5d5401675561567bf99a s390/pci: remove pdev pointer from arch data
80c544ded25ac14d7cc3e555abb8ed2c2da99b84 s390/pci: enforce fmb page boundary rule
9d89d9e61d361f3adb75e1aebe4bb367faf16cfa s390/pci: add extra padding to function measurement block
6cdb18ad98a49f7e9b95d538a0614cde827404b8 mm/vmstat: fix overflow in mod_zone_page_state()
7162a1e87b3e380133dadc7909081bb70d0a7041 mm: fix mlock accouting
fe1b806f4f7172b1eae18ddeebb7d8fb351043f7 [SCSI] qla2xxx: Refactor shutdown code so some functionality can be reused.
db7157d4cfce6edf052452fb1d327d4d11b67f4c qla2xxx: Fix shost use-after-free on device removal
f3ddac1918fe963bcbf8d407a3a3c0881b47248b [SCSI] qla2xxx: Disable adapter when we encounter a PCI disconnect.
c821e0d5b20006acdaca7aa378097a084986e37b qla2xxx: Collect PCI register checks and board_disable scheduling
232792b6b43b1420324e432a0498602b9c8d5a8c qla2xxx: Schedule board_disable only once
beb9e315e6e0d8d1d7d3a79d2e5d4664aa8f8796 qla2xxx: Prevent removal and board_disable race
6b3839790b16adffbbe2f5967e149562a5a603e8 qla2xxx: Prevent probe and board_disable race
8d2b21db49f1b8bfc882586932bdb3f707420b43 qla2xxx: Fix indentation
52c82823cc686d4faf9e9bc4feec4bf48c36fded qla2xxx: Remove set-but-not-used variables
ad950360eebb5f5f7610b13cfd08c0185ca3f146 qla2xxx: Remove __constant_ prefix
17cac3a175a02cd1ae21f9183b09f30a719832df qla2xxx: Handle AEN8014 incoming port logout.
0a583e4531897c715ab7b0d7efd52deca8d7d520 qla2xxx: Remove unneeded link offline message.
f198cafaa41a23274b88dbed7cd909fa5e91b1ee qla2xxx: Allow fw to hold status before sending ABTS response.
4243c115f47757761b85e1ca7f2cfe71bb9d2c4d qla2xxx: Add support for online flash update for ISP27XX.
969a619966d84ec0d2b8392df83cd2693411e46e qla2xxx: Add support for buffer to buffer credit value for ISP27XX.
243de6768db50266f595ec62c5ae34783edb72ea qla2xxx: Add support for Private link statistics counters.
da08ef5c30a28745cc789f024a2095f85a4b2b12 qla2xxx: Avoid side effects when using endianizer macros.
c73191b83be3ab8b7f402045a57c27cc5bc4f672 qla2xxx: Provide mbx info in BBCR data after mbx failure
d224fe0d609734888af63656ddaf3a8352f0a7b5 mpt2sas: Refcount sas_device objects and fix unsafe list usage
8a7e4c24e08fceb94887eb6d8123d6059dc5ddcd mpt3sas: Added mpt2sas driver definitions
7497392a1193ea5b32d8a8a2b8d77888e7fe8221 mpt3sas: Move Gen3 HBA's device registration to a separate file
09ec55ed74ebb8a61859609011d28ab0bcb15e08 mpt2sas: Remove .c and .h files from mpt2sas driver
d357e84d65dfcdb502fdb1aaab2873a82a828db5 mpt3sas: Define 'hba_mpi_version_belonged' IOC variable
42081173c74e0867b996f5fd6b46d3c1606377c7 mpt3sas: Manage MSI-X vectors according to HBA device type
7786ab6aff9cea97eb0a8d67705c68e97a664bf3 mpt3sas: Ported WarpDrive product SSS6200 support
d1cb5e495e5384f6d90a8573f1be9cc79b85c862 mpt3sas: Refcount sas_device objects and fix unsafe list usage
146b16c8071f5f6c67895d15beeee1163f5107c4 mpt3sas: Refcount fw_events and fix unsafe list usage
08c4d550c5797d842b1f1bb85d474a8b54f02382 mpt3sas: setpci reset kernel oops fix
d0c627afb7a6753488b9e8948b307941880b1b9e mpt2sas, mpt3sas: Update the driver versions
c84b06a48c4d8ac8270624453132f3fa1a4a0f9d mpt3sas: Single driver module which supports both SAS 2.0 & SAS 3.0 HBAs
abc01f7d54da8c77d650e730bcaef1c6c3982a5a mpt3sas: Bump mpt3sas driver version to 09.102.00.00
0a5149ba02bdf75281b8bc94cf6dfa94c527fa6f mpt3sas: fix inline markers on non inline function declarations
15de0de29f7ba5cce9699a8cc2344ca137beb25a mpt3sas: Fix use sas_is_tlr_enabled API before enabling MPI2_SCSIIO_CONTROL_TLR_ON flag
b130b0d56fa97ef17796314995a9dc5dda0edaa5 mpt3sas: Added support for high port count HBA variants.
fd0331b32826dd440bdcad2ff4c1668e0224e625 mpt3sas: Make use of additional HighPriority credit message frames for sending SCSI IO's
5c739b6157bd090942e5847ddd12bfb99cd4240d mpt3sas: Updated MPI Header to 2.00.42
d867b655eadf01fd5231ad9f41010c4d3b002a16 mpt3sas: Updating mpt3sas driver version to 12.100.00.00
8ff045c92708a595b7e39d68bdc0bd7edc08a073 mpt3sas: Free memory pools before retrying to allocate with different value.
b8ac0cc78b56e798851f1435bc673761d3fb877e mpt3sas - remove unused fw_event_work elements
05545c92db9637318a98d3d59d400beb819decc7 st: implement tape statistics
442d75628a3040bbfeb4a1f743b70a8afec0adbc st: convert to using driver attr groups for sysfs
1be1825453f6d75ea9c9ea0c8549ca481d94a7ab megaraid_sas: use dev_printk when possible
da0dc9fb4e6b0ad5a947c27a3c48985f6a2377eb megaraid_sas: fix whitespace errors
609fb07b2bdebe5d2c6a9da7e9d8e05155086418 megaraid_sas: Version update
0d5b47a724bab0ebaaa933d6ff5e584957aaa188 megaraid_sas: Expose TAPE drives unconditionally
5a8cb85b569b2349493aadb81a747e077766907d megaraid_sas: Remove PCI id checks
aed335eecf8f09c28588b01c7f7e24ee78156e28 megaraid_sas: Make tape drives visible on PERC5 controllers
11c71cb4ab7cd901b9d6f0ff267c102778c1c8ef megaraid_sas: Do not allow PCI access during OCR
6d40afbc7d13359b30a5cd783e3db6ebefa5f40a megaraid_sas: MFI IO timeout handling
18365b138508bfbce0405f9904639fa3b7caf3c9 megaraid_sas: Task management support
2216c30523b0a1835b6d522ffe73ca167f199f00 megaraid_sas: Update device queue depth based on interface type
8f05024cd3dbd3ec85923f3e8da05bf6db187d57 megaraid_sas: Fastpath region lock bypass
179ac14291a0e1cf8c2b2dfedce7c5af66696cc9 megaraid_sas: Reply Descriptor Post Queue (RDPQ) support
f9a9dee6a1fd8570884a0ab6f19c6b5cca05bd49 megaraid_sas: Code optimization build_and_issue_cmd return-type
308ec459bc1975d9856cfeb3d1cd6461794a3976 megaraid_sas: Dual queue depth support
52b62ac7c66e1a11eb8b3e3b0212847749af3b2d megaraid_sas: IO throttling support
8a01a41d864771fbc3cfc80a9629e06189479cce megaraid_sas: Make adprecovery variable atomic
ccc7507de27a639c9e1327d6e56ef1f357962b09 megaraid_sas: MFI adapter OCR changes
e3d178ca773ff997c6c94989d0b14a2c0eae761c megaraid_sas: Introduce module parameter for SCSI command timeout
3885c26b773750bf2e7e071a5b0b72f079196d60 megaraid_sas: SPERC OCR changes
8f67c8c518f324874e8caf93d1f4468d25754333 megaraid_sas: Fix for IO failing post OCR in SRIOV environment
3084558658c2f9a48d7c460d57aeb30964c06b7e megaraid_sas: Don't issue kill adapter for MFI controllers in case of PD list DCMD failure
c3e385a1b985a9202ba7fbd0bdbdcb909905d00c megaraid_sas: reduce memory footprints in kdump mode
64d0b8e4a6f7e9a3c366c2df93ec1f003d180ca3 megaraid_sas: call ISR function to clean up pending replies in OCR path
bd23d4abe5edf09dfba086d44b7972cf73c14b0b megaraid_sas: task management code optimizations
d92ca9d3de862cb123d7ef0fd42dc1e9867dd590 megaraid_sas: driver version upgrade
13f307711b127d30fcf333a04365a217baf9ca2b megaraid_sas: Downgrade two success messages to info
bcd7f78d078ff6197715c1ed070c92aca57ec12c locks: have flock_lock_file take an inode pointer instead of a filp
29d01b22eaa18d8b46091d3c98c6001c49f78e4a locks: new helpers - flock_lock_inode_wait and posix_lock_inode_wait
ee296d7c5709440f8abd36b5b65c6b3e388538d9 locks: inline posix_lock_file_wait and flock_lock_file_wait
1f12e32f4cd5243ae46d8b933181be0d022c6793 x86/topology: Create logical package id
b5d5f27d938fb6fc8d3202704e699d2694a02da6 x86/topology: Fix logical package mapping
bf926731e1585ccad029ca2fad1444fee082b78d perf/x86/intel/cqm: Add storage for 'closid' and clean up 'struct intel_pqr_state'
33c3cc7acfd95968d74247f1a4e1b0727a07ed43 perf/x86/mbm: Add Intel Memory B/W Monitoring enumeration and init
e7ee3e8cb550ce43752ae1d1b190d6b5c4150a43 perf/x86/mbm: Add support for MBM counter overflow handling
97eac21babe47e1a8ed4cac4f8874c5746cf6e36 x86/setup: Cleanup crashkernel reservation functions
606134f77ce22997fd2800d5937698d85c6990d9 x86/setup/crash: Remove alignment variable
f56d55781c1ff5663874775d0672ba954fe5634c x86/setup/crash: Cleanup some more
6f3760570e26eefc214e641b6daeddb7106240bb x86/setup/crash: Check memblock_reserve() retval
f6870ee9e53430f2a318ccf0dd5e66bb46194e43 KVM: VMX: avoid guest hang on invalid invvpid instruction
ef697a712a6165aea7779c295604b099e8bfae2e KVM: VMX: fix nested vpid for old KVM guests
3edcf2ff7ae50d1096030fab9a1bafb421e07d4c x86/platform/UV: Allocate common per node hub info structs on local node
906f3b20da8c6ec3eeef81753b4af9b6780e2edc x86/platform/UV: Fold blade info into per node hub info structs
1de329c10d9fbac4031f8eb30c4921c6efbf9faa x86/platform/UV: Support UV4 socket address changes
6e27b91cf46834391c59062d3f26d277cc299f4b x86/platform/UV: Build GAM reference tables
c85375cd19966d5dd854cd8b8eada9be8f21fac1 x86/platform/UV: Update physical address conversions for UV4
f68376fc9e6dc15a08e16f08c95e503f19ad8e34 x86/platform/UV: Fix incorrect nodes and pnodes for cpuless and memoryless nodes
2bc79ffcbb817873cc43d63118008ab75181b73d cxl: Poll for outstanding IRQs when detaching a context
788e15abbb9408c9399d7e3445ac9afb3b2fd7d6 NVMe: Always use MSI/MSI-x interrupts
a017784f1b236cbc42ce83b4345a667c21113481 kprobes/ftrace: Recover original IP if pre_handler doesn't change it
f8b8be8a310a55856fd2c369dade08088d85df3b ftrace, kprobes: Support IPMODIFY flag to find IP modify conflict
41cfd64cf49fc84837341732a142f3d4cdc1e83a intel_pstate: Update frequencies of policy->cpus only from ->set_policy()
3ee32707560955e92d30f7f6e5138cb92a3b1a7e net: add sysfs helpers for netdev_adjacent logic
5bb025fae53889cc99a21058c5dd369bf8cce820 net: rename sysfs symlinks on device name change
d75b1ade567ffab085e8adbbdacf0092d10cd09c net: less interrupt masking in NAPI
726ce70e9e4050409243f3a1d735dc86bc6e6e57 net: Move napi polling code out of net_rx_action
001ce546bb537bb5b7821f05633556a0c9787e32 net: Detect drivers that reschedule NAPI and exhaust budget
6bd373ebbac4b13ecd39ddc37a0dc5ad4c5e4585 net: Always poll at least one device in net_rx_action
ceb8d5bf17d366534f32d2f60f41d905a5bc864b net: Rearrange loop in net_rx_action
eb64e2923a886441c7b322f138b36029f3fa6a36 bgmac: leave interrupts disabled as long as there is work to do
e580267df97eda407c525dbaee5430e0d51a0edb bgmac: fix requests for extra polling calls from NAPI
8acdf999accfd95093db17f33a58429a38782060 virtio_net: Fix napi poll list corruption
6a6dc08ff6395f58be3ee568cb970ea956f16819 xen-netfront: use napi_complete() correctly to prevent Rx stalling
c21e0bbfc48509a776ec4a39bd9a0fb45a9c315b cxlflash: Base support for IBM CXL Flash Adapter
5cdac81a870f3bb65c50d3f5566a86fb086118d2 cxlflash: Base error recovery support
65be2c79acc3aa0f9c0e8d4871f5a451d854465a cxlflash: Superpipe support
2cb79266d6b229dbebd31fe114af1bdab25c8076 cxlflash: Virtual LUN support
46c6d45d7875a0328258a574e376ae75f7b2a64b cxlflash: off by one bug in cxlflash_show_port_status()
4da74db0d9a6ffe053d3a3efa756906e0afc4cf7 cxlflash: shift wrapping bug in afu_link_reset()
89576205de8a5b6c19a4b3bb25bd16484a567b4e cxlflash: Remove unused variable from queuecommand
fa4aa632da19fba0154b66a50329acd738304291 cxlflash: Fix to avoid invalid port_sel value
3ebf203093b4ee07d62ef1a02dbbf7a293770388 cxlflash: Replace magic numbers with literals
471a5a60aaf13b2323d2b63d212bbdd6ce2bef28 cxlflash: Fix read capacity timeout
22fe1ae80fd14cb64be61d004b5e6c324bb6e984 cxlflash: Fix potential oops following LUN removal
2843fdbddd188edb4d7e60f72f513ad8b82d1a54 cxlflash: Fix data corruption when vLUN used over multiple cards
e568e23f3c6d7bf60ce00a4e8f1331a5b38bbea0 cxlflash: Fix to avoid sizeof(bool)
a76df368beb31f55aca03c6cd34c272b86e49470 cxlflash: Fix context encode mask width
0a27ae514740b4d64b586043d6b837ad5d0c40f8 cxlflash: Fix to avoid CXL services during EEH
439e85c1e89bd1ed8c99f8b46f87f495a675d95e cxlflash: Correct naming of limbo state and waitq
15305514184875728a545204db893a3c5157fc65 cxlflash: Make functions static
e0f01a21c423c9e58874a9392a69354b7927fca2 cxlflash: Refine host/device attributes
4392ba49eb248868afb412ea147ab16e2e606d66 cxlflash: Fix to avoid spamming the kernel log
018d1dc9558e748e271cd1600c698f68cba3fb09 cxlflash: Fix to avoid stall while waiting on TMF
8396012ff77affe4def5f0e5757b6c4e8107b33e cxlflash: Fix location of setting resid
ef51074a4efef50873fb8939e7feba5dd55488da cxlflash: Fix host link up event handling
16798d3448d33af336e89f8cc6e72a0a3d04e230 cxlflash: Fix async interrupt bypass logic
964497b3bf3fed0a1db9dabe9fe080853230e5a7 cxlflash: Remove dual port online dependency
e5ce067b7b6e123a88929a18a8a58811ffcec279 cxlflash: Fix AFU version access/storage and add check
8b5b1e871a736e93e6ef1b048c276975e7421e04 cxlflash: Correct usage of scsi_host_put()
d804621d0275da84caedcf2d6cf03fbe3c9ac3aa cxlflash: Fix to prevent workq from accessing freed memory
ed486daad27afdcb24cee4ea0b1c9f44281e74fc cxlflash: Correct behavior in device reset handler following EEH
6ef6f94060dc435742a4ff5feae2b2c4b2e57077 cxlflash: Remove unnecessary scsi_block_requests
1284fb0cff10fcc3df1e9a50a795868d346fa647 cxlflash: Fix function prolog parameters and return codes
1786f4a0933198632c5e4d27f25e1d467e1fd032 cxlflash: Fix MMIO and endianness errors
8e78262328ecfbe9d72ac40328ecf5e7ff6fc3bf cxlflash: Fix to prevent EEH recovery failure
f15fbf8d4eb0c20b7c70096788161d69e23f1a9d cxlflash: Correct spelling, grammar, and alignment mistakes
af10483e5e1201e1dcf5836207879e6eb5eb9fd5 cxlflash: Fix to prevent stale AFU RRQ
b22b4037a013e9ce77cec79d95fdcdc9bece0955 cxlflash: Fix to double the delay each time
17ead26f23e99ab0bb14e0876adab0ee151711f7 cxlflash: Fix to avoid corrupting adapter fops
fa3f2c6eb1eb69a9023d648c5bafbf4f062ab84d cxlflash: Correct trace string
aacb4ff69eea4ac47a7389f90ea7a896abbe92f5 cxlflash: Fix to avoid potential deadlock on EEH
ee3491ba8f1f7e7cc1302d727ee7055e5c748524 cxlflash: Fix to avoid leaving dangling interrupt resources
e6e6df3f71a0b567e55d17b08f5bad8f1043afa3 cxlflash: Fix to escalate to LINK_RESET on login timeout
1a47401bb397183e0500db2c7d5f8d2a3506598e cxlflash: Fix to avoid corrupting port selection mask
0d73122c3229a332286f3a256ba098d124aba066 cxlflash: Fix to avoid lock instrumentation rejection
a82544c7baccf2d8a12cee46110cc7d356d3edf0 cxlflash: Fix to avoid bypassing context cleanup
e37390bee6fe7dfbe507a9d50cdc11344b53fa08 cxlflash: a couple off by one bugs
21891a452a42afc2313f1e3a69040e46c1d068c1 cxlflash: drop unlikely before IS_ERR_OR_NULL
a9be294ecb3b9dc82b15625631b153f871181d16 cxlflash: Fix to escalate LINK_RESET also on port 1
d5e26bb1d812ba74f29b6bcbc88c3dbfb3eed824 cxlflash: Fix to avoid virtual LUN failover failure
85599218914dadad3347eaa4337e71f09f39e78f cxlflash: Removed driver date print
ee91e332a6e6e9b939f60f6e1bd72fb2def5290d cxlflash: Fix to resolve cmd leak after host reset
b45cdbaf9f7f0486847c52f60747fb108724652a cxlflash: Resolve oops in wait_port_offline
a2746fb16e41b7c8f02aa4d2605ecce97abbebbd cxlflash: Enable device id for future IBM CXL adapter
961487e46a87079a573348896a0d39c1cb10947d cxlflash: Simplify PCI registration
6ded8b3cbd9a6254da5a38f35e20aa3c316d9092 cxlflash: Unmap problem state area before detaching master context
5e6632d19ea2fafaec1b7c4cda7f7157ee8ad983 cxlflash: Split out context initialization
8a96b52af58721caf4f7496d0737e8ec6b63c86e cxlflash: Simplify attach path error cleanup
5d1952acd0d56f6b6835aa45bea763ee97b9e66f cxlflash: Reorder user context initialization
603ecce95f4817074a724a889cd88c3c8210f933 cxlflash: Fix to avoid unnecessary scan with internal LUNs
83430833b4d4a9c9b23964babbeb1f36450f8136 cxlflash: Increase cmd_per_lun for better throughput
ca946d4e4a390a5121bfc9076d85be0ddd55c266 cxlflash: Use new cxl_pci_read_adapter_vpd() API
9526f36026f778e82b5175249443854c03b2e660 cxlflash: Fix regression issue with re-ordering patch
ea76543127da32dec28af0a13ea1b06625fc085e cxlflash: Move to exponential back-off when cmd_room is not available
1e8ce83cd17fd0f549a7ad145ddd2bfcdd7dfe37 mm: meminit: move page initialization into a separate function
0a313a998adbae19c1309f80a3ad79107fff7c4e mem-hotplug: let memblock skip the hotpluggable memory regions in __next_mem_range()
8e7a7f8619f1f93736d9bb7e31caf4721bdc739d memblock: introduce a for_each_reserved_mem_region iterator
92923ca3aacef63c92dc297a75ad0c6dfe4eab37 mm: meminit: only set page reserved in the memblock region
d70ddd7a5d9aa335f9b4b0c3d879e1e70ee1e4e3 mm: page_alloc: pass PFN to __free_pages_bootmem
8a942fdea560d4ac0e9d9fabcd5201ad20e0c382 mm: meminit: make __early_pfn_to_nid SMP-safe and introduce meminit_pfn_in_nid
75a592a47129dcfc1aec40e7d3cdf239a767d441 mm: meminit: inline some helper functions
3a80a7fa7989fbb6aa56bb6ad31811b62cf99e60 mm: meminit: initialise a subset of struct pages if CONFIG_DEFERRED_STRUCT_PAGE_INIT is set
7e18adb4f80bea90d30b62158694d97c31f71d37 mm: meminit: initialise remaining struct pages in parallel with kswapd
54608c3f3a448f1e042f5d9f3b873cc8dc022f27 mm: meminit: minimise number of pfn->page lookups during initialisation
3b242c66ccbd60cf47ab0e8992119d9617548c23 x86: mm: enable deferred struct page initialisation on x86-64
a4de83dd3377eb43ad95387cc16c27a11aae2feb mm: meminit: free pages in large chunks where possible
ac5d2539b2382689b1cdb90bd60dcd49f61c2773 mm: meminit: reduce number of times pageblocks are set during struct page init
74033a798f5a5db368126ee6f690111cf019bf7a mm: meminit: remove mminit_verify_page_links
0e1cc95b4cc7293bb7b39175035e7f7e45c90977 mm: meminit: finish initialisation of struct pages before basic setup
ae026b2aa19350f3c863df2dce7e0511dd78ff49 mm, meminit: suppress unused memory variable warning
7ace99170789bc53cbb7e9e352d7a3851208fbcf mm, meminit: allow early_pfn_to_nid to be used during runtime
d3cd131d935ab3bab700491edbbd7cad4040ce50 mm, meminit: replace rwsem with completion
4248b0da460839e30eaaad78992b9a1dd3e63e21 fs, file table: reinit files_stat.max_files after deferred memory initialisation
72b252aed506b8f1a03f7abd29caef4cdf6a043b mm: send one IPI per CPU to TLB flush all entries after unmapping pages
d950c9477d51f0cefc2ed3cf76e695d46af0d9c1 mm: defer flush of writable TLB entries
a9730fca9946f3697410479e0ef1bd759ba00a77 Fix kmalloc slab creation sequence
b84106b4e2290c081cdab521fa832596cdfea246 PCI: Disable IO/MEM decoding for devices with non-compliant BARs
cdc57272ea0a0e952c4609b56e157e4d0ec8e956 tools/power turbostat: initial KBL support
6c51cc0203de25aeaff9d0236d6c2b497be93e3b powercap/intel_rapl: Add support for Kabylake
58319057b7847667f0c9585b9de0e8932b0fdb08 capabilities: ambient capabilities
746bf6d64275be0c65b0631d8a72b16f1454cfa1 capabilities: add a securebit to disable PR_CAP_AMBIENT_RAISE
21bfd1aa9527811408d6073d45e5ac8283a28b72 ahci: Store irq number in struct ahci_host_priv
d684a90d38e24dcaf95fdb32c83efe05f80d152a ahci: per-port msix support
a6b7fb764ed2a6b7bb1ac96d93c06787aa589092 ahci: switch from 'threaded' to 'hardirq' interrupt handling
55f2890f0726fe4a1f41a3a0e72ca1a263f095c3 perf/x86/intel/rapl: Add proper error handling
b8b3319a471b2df35ae0a8fe94223638468e9ca4 perf/x86/intel/rapl: Sanitize the quirk handling
75c7003fbf419f05215d4ca09bf3964d0b1c99e9 perf/x86/intel/rapl: Calculate timing once
512089d98457b7913d2e4762a44af52fbcd87470 perf/x86/intel/rapl: Clean up the printk output
7162b8fea63061b6231bc5e8a0fed55167e71b4c perf/x86/intel/rapl: Refactor the code some more
a208749c642618b6c106874153906b53f8e2ded9 perf/x86/intel/rapl: Make PMU lock raw
8a6d2f8f73caa8b8eb596a9e2d2e0b15d64751a4 perf/x86/intel/rapl: Utilize event->pmu_private
9de8d686955b0e8e27847ed4edbbcd280f3fd853 perf/x86/intel/rapl: Convert it to a per package facility
7a8698058ae493ae53b1a8a2fa23d2e37000d73e perf/x86/intel/rapl: Simplify quirk handling even more
7b0fd56930399d87241ad2f49d48c315307471ee perf/x86/intel/rapl: Add missing Broadwell models
1c5ac21a0e9bab7fc45d0ba9e11623e9ad99d02e perf/x86/intel/pt: Don't die on VMXON
5fbe4788b55540a6c4fe2c47e05482ac356eaf74 perf/x86/intel/pt: Generate PMI in the STOP region as well
3f56e687a138481894a1088d5aa7d41951bdb020 perf/core: Disable the event on a truncated AUX record
403567217d3fa5d4801f820317ada52e5c5f0e53 perf symbols: Do not read symbols/data from device files
1f7c254132f098d19ff3fd452ba9f826cd85c4c0 perf hists: Cleanup filtering functions
cfd92dadc5e830268036efb25ff41618f29c3306 perf sort: Provide a way to find out if per-thread bucketing is in place
b1447a54f5b41eaf1cc469d9bd3834caa2ff9afb perf hists browser: Offer 'Zoom into DSO'/'Map details' only when sort order has 'dso'
d9695d9f93649ecc00877ec2c847739c54a4cbb3 perf hists browser: Be a bit more strict about presenting CPU socket zoom
37b20151efe002a4a43532d3791d11d39d080248 perf tools: Move timestamp creation to util
d2db9a98c3058a45780f7fcd0cc8584858cf6b29 perf record: Use OPT_BOOLEAN_SET for buildid cache related options
744070e0e4ac691bb43608f7bf46a9641a9cf342 perf hists: Fix min callchain hits calculation
01441af5df438a171bce36bc3c7cfb588bc98a7a perf hists: Factor output_resort from hists__output_resort
452ce03b1e686f0b2da6c1644dce7cdc71e3c69c perf hists: Introduce perf_evsel__output_resort function
97358084b91e94e5f8fcf0379f0430c0ea16bd3b perf hists: Add 'equal' method to perf_hpp_fmt struct
3f931f2c4274565fd6c6a642b16387358cbe6266 perf hists: Make hpp setup function generic
1945c3e734cd1f01535dc76de47c38bbe9a87352 perf hists: Allocate output sort field
564132f3116cf376fdc04b2380e621f35efbb6c7 perf hists: Properly release format fields
07600027fb7114bf7bcabdd121e5178f200d8a44 perf hists: Pass perf_hpp_list all the way through setup_output_list
cf094045d718437e3d5cd42ac09d77561cb2f368 perf hists: Introduce perf_hpp_list__for_each_format macro
7a1799e0a276069d8b903ba17179b4983b98c04b perf hists: Introduce perf_hpp_list__for_each_format_safe macro
d29a497090845002ee449c8dc682dd59ad8bab42 perf hists: Introduce perf_hpp_list__for_each_sort_list macro
43e0a68f13047750a3728c983a539c61fb4121c5 perf hists: Add struct perf_hpp_list argument to helper functions
5b65855e20348a9e2772a1cb7c1e6ab477859ba6 perf tools: Add hpp_list into struct hists object
f0786af536bb0ba54cb516eee493af03cefdbaa3 perf hists: Introduce hists__for_each_format macro
aa6f50af822a552b579252ecd42224e09e11e879 perf hists: Introduce hists__for_each_sort_list macro
b62e8dfcda8cb133c062c0e1207afea2476eb7fd perf hists browser: Add 'L' hotkey to change percent limit
8ee4646038e47d065d35703e3e343136c4cd42aa perf build: Add libcrypto feature detection
89fee70943232d73e3cc328634e0da253b6de9b5 perf hists: Do column alignment on the format iterator
85723885feb823b4fc352b727ece0b6d00306c4d perf record: Add --all-user/--all-kernel options
26dee028d365fbc0e3326606a8520260b4462381 perf tools: Fix checking asprintf return value
17cb5f84b89fd39a143f1c899836f40420a6b799 perf tools: Create config_term_names array
1669e509ea25e4e3e871d913d21b1cac4a96d1e8 perf stat: Bail out on unsupported event config modifiers
e814fddde18fec43fa41a27ae94c09b54772697e perf tools: Rename and move pmu_event_name to get_config_name
1d55e8ef340dad1ccd5aaf53071de41fc3d8dba4 perf tools: Introduce opt_event_config nonterminal
10bf358a1b79fa1311eb05ee31f2cefdcad01741 perf tools: Enable config raw and numeric events
43d0b97817a41b274aaec0476e912dae3ae1f93d perf tools: Enable config and setting names for legacy cache events
467ef10c68b90b940412390dcd14bbfe8cc40e73 perf hists browser: Fix percentage update on key press
5b2ea6f2f6ac81a230e6cc68e1473e796a583f00 perf report: Check error during report__collapse_hists()
2c97b0d4a757eec7b83acfe3895d94ad4db13827 perf tools: Fix build on older systems
58de6ed0a9a32e4b1cf22cc0c46ca16056763f19 perf tools: Remove duplicate typedef config_term_func_t definition
665aa75700edda07bd7f05acab86cef1a1a1ea66 perf tools: Fix segfault on dynamic entries
2960ed6f8d6794dcb39ba48c3e515e5be18ee9e1 perf tools: Fix alignment on some sort keys
0c0af78d472f96efe04daaaccede7522b2394b76 perf tools: Fix column width setting on 'trace' sort key
acbe613e0c03d59cab21aec3565cdb28c7df98c3 perf tools: Add monitored events array
ce1e22b08f0728e840614d3d0fc43fd1d6b7f7a2 perf mem: Add -e record option
54fbad54ebcde9db9c7459e9e379f2350c25e1f1 perf mem record: Check for memory events support
2ba7ac5814a6952aad647ce31696b893772cbe83 perf mem: Introduce perf_mem_events__name function
0c877d759d3a62a01d75dc6de4a923a686bb285a perf tools: Introduce perf_mem__tlb_scnprintf function
071e9a1e12dceaec6f9d3ffe6e77ee68364166d6 perf tools: Introduce perf_mem__lvl_scnprintf function
2c07af13dcd4d971578041b50598f1269b33e68a perf tools: Introduce perf_mem__snp_scnprintf function
69a77275926ccd0c08fde103de52b59f18370f5a perf tools: Introduce perf_mem__lck_scnprintf function
b1a5fbea3d69511e445b8d9efe6dc605edb508c8 perf tools: Change perf_mem__tlb_scnprintf to return nb of displayed bytes
969075630e3abd1c740ac4f3183949cbf54b410d perf tools: Change perf_mem__lvl_scnprintf to return nb of displayed bytes
149d75076778d3b14e13b79d683b4f4fdd4fdb01 perf tools: Change perf_mem__snp_scnprintf to return nb of displayed bytes
8b0819c8a3c97279b815581b606407c0387cc26f perf tools: Change perf_mem__lck_scnprintf to return nb of displayed bytes
c19ac91245a2f8d26aafd7f23256f3b76314d5d4 perf script: Display data_src values
c339b1a90e6cd638a1d99cbbf49d870ce233198e perf tools: Make binary data printer code in trace_event public available
a9c6e46c04ba38925e94c4c2fa9217460338db43 perf tools: Add helper functions for some sort keys
aef810ec4e6b638facb6c81803c019906f34f014 perf hists: Basic support of hierarchical report view
8c01872fe3c17fde1ce74eecf523d6d7fce5ffec perf hists: Add helper functions for hierarchy mode
54430101d2af260dba2d129cc9d9b7c7e60087b0 perf hists: Introduce hist_entry__filter()
155e9afff77916931f615a394cef187b342530dc perf hists: Support filtering in hierarchy mode
70642850fa581df219d7bc03cd7aca6e1956968c perf hists: Resort after filtering hierarchy
ef86d68a088c324e4bd85f82387d1f9a571affd0 perf ui/stdio: Implement hierarchy output mode
8e2fc44f46ba4d3d1ee8b6ba0839a282a9f3fdd7 perf ui/stdio: Align column header for hierarchy output
492b1010606e9222690992ad8e4898a88a696856 perf hists browser: Support collapsing/expanding whole entries in hierarchy
d0506edbec7d04dcca632fddfc162faa78d5527a perf hists browser: Implement hierarchy output
4251446d778e669db5ac9f86b02d38064bdbbf9a perf report: Add --hierarchy option
c92fcfde3486fb4b9e476ee5ad5995a62e401cce perf top: Add --hierarchy option
a7b5895b91fb97f2b0dcc2e3ce47413c18d19ca5 perf hists: Add more helper functions for the hierarchy mode
bd4abd39db92225dde8335c37d6f4efb319f9cf2 perf report: Show message for percent limit on stdio
201fde73b111e7c31fdc0e9fa6bc4b73dfef699d perf hists browser: Cleanup hist_browser__update_percent_limit()
79dded8776c2dc4d6e1229de69f4027e84d63673 perf hists browser: Show message for percent limit
84b6ee8ea36ff797afa13c297a86ed0144482bee perf hists: Fix comparing of dynamic entries
d3a72fd8187b7fa0014394c9dec95ba349b3301e perf report: Fix indentation of dynamic entries in hierarchy
cb1fab917206f822d1f905cbc45971eefdef361d perf report: Left align dynamic entries in hierarchy
e049d4a3fa194c8aa0d3ca29a9b11b32387ca6e3 perf hists: Fix dynamic entry display in hierarchy
abab5e7fcec16e526968f8a5448cd81c635705ce perf report: Update column width of dynamic entries
b8cbb349061edda648463b086cfa869a7ab583af perf config: Bring perf_default_config to the very beginning at main()
d8871ea71281ed689dc3303d1b50eb00c5d06141 perf record: Use WARN_ONCE to replace 'if' condition
c45c86eb70964615bd13b4c1e647bf9ee60c3db9 perf record: Extract synthesize code to record__synthesize()
e1ab48ba63ee6b2494a67bb60bf99692ecdaca7c perf record: Introduce record__finish_output() to finish a perf.data
9b240637eb9b9677a9e9bc2dc568f5e0811e04d6 perf test: Fix hists related entries
fb4605ba47e772ff9d62d1d54218a832ec8b3e1d perf stat: Check for frontend stalled for metrics
5fb0ac16c5091f48eecf1a77e461f6957a463d61 perf session: Simplify tool stubs
4b633eba14627bcb1ef5c7a498e7dc308cd6a5d6 perf hists: Add level field to struct perf_hpp_fmt
c3bc0c436899d01c3a09fddb308d487cc032fbd2 perf hists: Introduce perf_hpp__setup_hists_formats()
1b2dbbf41a0f4cf7a5662bccb9a18128d16e5ffb perf hists: Use own hpp_list for hierarchy mode
a23f37e864609f0887c1cb77c4d5b62586484a61 perf hists: Support multiple sort keys in a hierarchy level
2dbbe9f26c082be5aa0e8ba5480e7bac43b2c4f0 perf hists: Fix indent for multiple hierarchy sort key
f58c95e344c26223c6503e6ecb0c1e11806d91e0 perf report: Use hierarchy hpp list on stdio
a61a22f6845f9e86e0ca60d1d256a35ca12312ef perf hists browser: Use hierarchy hpp list
58ecd33be90647724a78ce5e0b42f5bc482771fd perf report: Use hierarchy hpp list on gtk
d7b617f51be4fffa3cbb5adf6d4258e616dce294 perf tools: Pass perf_hpp_list all the way through setup_sort_list
e12b202f8fb9b62a3997cad8e93401f85293390c perf jitdump: Build only on supported archs
f4954cfb1cda4cf0abf36d23213c702e94666c3f perf tools: Fix hist_entry__filter() for hierarchy
4945cf2aa1ed61994c158f22f26ea6101059a8d4 perf tools: Add more sort entry check functions
aec13a7ec78d9322a348fb26940097b0bdfef1bd perf tools: Fix command line filters in hierarchy mode
a515d8ff7085d5e9fde867f2048b8da36b95dc51 perf tools: Remove hist_entry->fmt field
325a62834e81452d2a6e253444022cf493bbabfc perf hists browser: Cleanup hist_browser__fprintf_hierarchy_entry()
86e3ee5224c17b7967aac39aa15539393c144de7 perf tools: Remove nr_sort_keys field
f7fb538afea55383a9383dac5c56887c601af5f4 perf tools: Recalc total periods using top-level entries in hierarchy
078b8d4a406fa8ce4a3c9d5145c27be1ed2b1dfd perf tools: Add sort__has_comm variable
6962ccb37b50366014074aec6fd14497cf719642 perf hists browser: Allow thread filtering for comm sort key
599a2f38a989a79df99838f22cb607f5e2b5b56c perf hists browser: Check sort keys before hot key actions
54b5091606c18f68a7fc8b4ab03ac4592c7d2922 perf stat: Implement --metric-only mode
206cab651d07563d766c7f4cb73f858c5df3dec5 perf stat: Add --metric-only support for -A
14e0a214d62d284ff40b1fd7d687cb66fca9fc67 tools, perf: make gfp_compact_table up to date
ca70c24fb17b161a6096c584238cf81f664db45d tools: Move utilities.mak from perf to tools/scripts/
b8f8eb84f4834b5232faf57559adbc80dbcf85da perf tools: Remove misplaced __maybe_unused
a3dff304ca50cbfbe3f0e76ee49c439990932ed5 perf script: Remove lots of unused arguments
3938bad44ed2fea41328e4be2ae04a8e94540813 perf tools: Remove needless 'extern' from function prototypes
531d2410635ce290bee215f4bf9ec8ca98cf7302 perf tools: Do not include stringify.h from the kernel sources
cf47a8aede9febee21cbd21d40a9c47244773a6c perf tools: Remove unused perf_pathdup, xstrdup functions
0741208a7cd4fc651316f1f861ad9e83495765fc perf tools: Unexport some methods unused outside strbuf.c
379649cfeafef29b77d29860741f4d1c5870b65f perf tools: Fix build break on powerpc
bd0419e2a5a9fd9396cb7dc69044f961f52e19f0 perf probe: Check if dwarf_getlocations() is available
18258f7239a61d8929b8e0c7b6d46c446459074c genirq: Provide synchronize_hardirq()
63f57cd45b0811de9663edf4af6b170c5bd3860d gpio: pcf857x: Add OF support
e01f440a689aeb2d0e81c696fe2069f8d01d5d49 gpiolib / ACPI: allow passing GPIOF_ACTIVE_LOW for GpioInt resources
53e7cac35db5941f42221314c33693e71ffa496b gpiolib: use dedicated flags for GPIO properties
11fc7d5a0a2d458cae8ce5d5ee3ebfdabe2cb35a tun: fix memory leak in error path
9fb1f39eb2d6707d265087ee186376e24995f55a gpio/pinctrl: make gpio_chip members typed boolean
f9244ae5dce18b73ac42f5979116050da3a5c4d5 gpiolib: convert gpiod_lookup description to kernel-doc
664e3e5ac64c8a1999e2d94bc307e5bcd17d3646 gpio / ACPI: register to ACPI events automatically
5ccff85276addfdaad0046390bc5624f7e44e614 gpio / ACPI: get rid of acpi_gpio.h
c9faff6cbb3d2b37b3aa356ce455848f91685b24 mmc: sdhci-pci: add support for eMMC hardware reset for BYT eMMC.
c73e41c898bb59aaf50098c2c672c7132a88fdbc mmc: dw_mmc-pltfm: add Rockchip variant
dcaff04d36fd7f22973bf4fc108912ce19bcef4f mmc: esdhc: Fix bug when writing to SDHCI_HOST_CONTROL register
30d025c0f7234409e8ee1bf22d1729055e640ec6 mmc: sdhci-pci: add another device id
214fc309d1387e822d606a33a10e31cacfe83520 mmc: slot-gpio: Add debouncing capability to mmc_gpio_request_cd()
967bcb77177cda1a426fdb2350e6ec61bcf5b5eb mmc: sh_mmcif: revision-specific Command Completion Signal handling
6d6fd3674259d16b735c961743ff28870c46cedc mmc: sh_mmcif: revision-specific CLK_CTRL2 handling
90c2143a8f6d0cd1dbae1ea32fcd1befb81e4b0d mmc: dw_mmc: guarantee stop-abort cmd in data errors
8776a165d152d57a3a58895d55204614abe93d7f mmc: sdhci-pci: add Intel Merrifield support
d052068a0ba43273eb9cfe32460e9445ef75fdc5 mmc: sdhci-pci: Add SDIO/MMC device ID support for Intel Clovertrail
3b159a6e955c8d468f4ffa212c8b5d68d8323a8d mmc: tmio: bus_shift become tmio_mmc_data member
5d60e500541ed154112809627f12d86056ac5f09 mmc: tmio: add new TMIO_MMC_HAVE_HIGH_REG flags
13868bf20f2f2c305f96e23620b024e167d6f9cb mmc: sdhci: add quirk for broken HS200 support
390145f9adcf2730fcee81c8a51fd7c6c08f705f mmc: sdhci-pci: add broken HS200 quirk for Intel Merrifield
9107ebbf9652c033eb5dd10a6ea34a132db3cde1 mmc: sdhci: add support for realtek rts5250
47a1f522d7ff5105c7efa56fe7fd41d46202f8cc mmc: dw_mmc-socfpga: Remove the SOCFPGA specific platform for dw_mmc
26652671338a443fd33cf47b50658dd8b095d54a mmc: slot-gpio: Split out CD IRQ request into a separate function
740a221ef0e579dc7c675cf6b90f5313509788f7 mmc: slot-gpio: Add GPIO descriptor based CD GPIO API
907abd51012b9b0b0b687e97d5ebadbddbc682fe mmc: dw_mmc: remove unused member variable.
cdc991790c51c693d0c347a5286af017826a5d01 mmc: drop the speed mode of card's state
2415c0ef618b3cd95581c7f633cbab78b29b7ab0 mmc: identify available device type to select
577fb13199b11d8cd75609183649be4b5561243f mmc: rework selection of bus speed mode
0a5b6438ee482696360bb013e67b8488f63d3e9e mmc: add support for HS400 mode of eMMC5.0
bf3b5ec66bd03d66e9ea729aaca013ea1047a797 mmc: sdio_irq: rework sdio irq handling
be138554a7923658ded799b0e8794d9c1d08a6e5 mmc: sdhci: allow sdio interrupts while sdhci runtime suspended
b537f94ce19583de1882f539a5cc49aa99260aca mmc: sdhci: more efficient interrupt enable register handling
5b4f1f6c496aa3a90b617d1319274bf2017e639d mmc: sdhci: plug hole in disabling card detection interrupts
2317f56c055fcad524bf6a873df48a754e7ebc4d mmc: sdhci: convert generic bus width setup to library function
03231f9b781f24205c0af0398ce3cbef70090939 mmc: sdhci: convert reset into a library function
0718e59ae259f7c48155b4e852d8b0632d59028e mmc: sdhci: move FSL ESDHC reset handling quirk into esdhc code
373073efd06528867df963724a93f29c7d5534d0 mmc: sdhci: move setting host->clock into sdhci_do_set_ios()
1650d0c71a209c7d6bdddda8a7e187c537ceb71a mmc: sdhci: move setting mmc->actual_clock into set_clock handlers
1771059cf5f9c09e37ef6315df8acf120f2642fc mmc: sdhci: convert sdhci_set_clock() into a library function
13e645012dff774895906058163ae244f47b9b81 mmc: sdhci: set_uhs_signaling() need not return a value
96d7b78cfc2fd6b1539704e2d33239dbaa097cc4 mmc: sdhci: convert sdhci_set_uhs_signaling() into a library function
d975f121011a58223c7936ab483c3374a83236c3 mmc: sdhci: cache timing information locally
4b6f37d3a379b09840c482bc4dcb9c3b4f7246c1 mmc: sdhci: clean up sdhci_execute_tuning() decision
43e968cec79b6334cf7cb3e11184cce720541712 mmc: sdhci-pci: SDIO host controller support for Intel Quark X1000
f25c33724d1512a72554c0ad4cb70b43ba15374e mmc: sdhci: add DDR50 1.8V mode support for BayTrail eMMC Controller
9cb15142d0e336874ecc753e9a4e5696c46a67d9 mmc: mmci: Add qcom dml support to the driver.
dea67c4ec8218b301d7cac7ee6e63dac0bc566cb mmc: core: sdio: Fix unconditional wake_up_process() on sdio thread
4f0eb5d7efe375859b15c97f453113a242bf057b phy: remove .owner field for drivers using module_platform_driver
384b2cbd56a02efb16358ed7c0c039e4afca5ed0 mmc: tmio: care about DMA tx/rx addr offset
b8d11962c2d83c984d5afd091e5b725ad2fd5607 mmc: tmio: control multiple block transfer mode
6b98757e53cb0e93b02db4067c14afcb32c90615 mmc: tmio: add TMIO_MMC_SDIO_STATUS_QUIRK
e85dd04ea8c8d32ba8eae278959d28df34338e9d mmc: tmio: remove Renesas specific #ifdef
da29fe2bf573f0ae56fdc2e790387cb73fc8c6f8 mmc: tmio: add actual clock support as option
4cdc2ec1da322776215c4d6bca0717a7a103a4dd mmc: dw_mmc: move rockchip related code to a separate file
066173b6436dfc57a96b2d940f4e727fe8131261 mmc: sdhci: Add PCI IDs for Intel Braswell
51da2240906cb94e8f6ba55e403b6206df6fb2dd mmc: dw_mmc: use mmc_regulator_get_supply to handle regulators
0173055842cd1d9ed3984e70891c22dbf2f29372 mmc: dw_mmc: Support voltage changes
a6ff5aeb9b31f7b71a8566f8e130ad66bd103d20 mmc: sdhci: add platform get_max_timeout_count hook
b45e668af4439bfc52ed92af44b6400661ba7ec8 mmc: sdhci: add platform set_timeout hook
28aab053396125c8e191537ec2b9781ec0174b04 mmc: sdhci: calculate timeout_clk conditionally in sdhci_add_host
03d6f5ffc5c469e66bfe0a7d8120d29d4c3c07c9 mmc: sdhci: move timeout_clk dynamically calculation code into common code
f1b55a55e4ee6fe6d791cff994f6e4d990f69c1e mmc: sdhci-pci: enable runtime pm for Intel Merrifield platform
312449efd16bb06a1e4fda94793d3eb8b8bb16f6 mmc: core: Fix sequence for I/O voltage in DDR mode for eMMC
adc828556dfc3f87a5c1338fc5412cbec3c0b529 mmc: sdhci: check 1.2v IO capability for SDHC host
b7574bad80f773dcc4c17950181cde9fb6701501 mmc: sdhci-pci: disable preset register for Baytrail and Merrifield
9d2fa2428ae149ba3a5b7a4ceb0a9e11f1882b3b mmc: slot-gpio: add gpiod variant to get wp GPIO
98e90de99a0c43bd434da814c882c4332441871e mmc: host: switch OF parser to use gpio descriptors
d4d11449088ee9aca16fd1884b852b8b73a4bda1 mmc: don't request CD IRQ until mmc_start_host()
48d11e067fc90ec9fc9c8f7ab982e5a83bf1887b mmc: Consolidate emmc tuning blocks
598d80914e84fa79580850530f5d4a50a99bf4f5 mm: convert pr_warning to pr_warn
6800754c3674fb36350b2df9c3f84676e7e7a8f7 mmc: Fix use of wrong device in mmc_gpiod_free_cd()
89168b48991537bec2573b3b6a8841df74465b12 mmc: core: restore detect line inversion semantics
615413979487a1e25a3b76abbaa316280ca19d26 mmc: sdhci: Add quirk for always getting TC with stop cmd
e58e4a0d14a5b8b6ab2aa2942cb2440e45c1f8c9 mmc: sdhci-pci: Set SDHCI_QUIRK2_STOP_WITH_TC for Intel BYT host controllers
f5fa92e58bce2cbcce99c2c5260c0b338a1ef201 mmc: sdhci: Let a driver override timeout clock frequency
a06586b62db5c63752e2e68daffec4baa275d594 mmc: sdhci-pci: Fix Braswell eMMC timeout clock frequency
566e0269e58cb95aa759c3f11c831536ae3858d2 usb: host: drop owner assignment from platform_drivers
a31b0c6c19bf28c54999c3cd8cc3a7c8ba565a45 mmc: core: fix card detection regression
4b75bffc77c40ac3c17a3ea9bbdc3a733c34591b mmc: core: Fix error paths and messages in mmc_init_card
6685ac62b2f08fcff77dc35c6b8bff1b74aaa408 mmc: core: Convert mmc_driver to device_driver
fc95e30ba33b9f4faa8630d0762af2548031dc00 mmc: block: Use dev_set|get_drvdata()
390e316c606de2f839389698f4531004cfe1bafd mmc: core: Remove unused mmc_list_to_card() macro
0f762426769a517d5b278e4e5d579fcea6801734 mmc: core: Report firmware version for eMMC 5.0 devices.
6130e7a9c34d01afbd4e7e215846d1f2d70333bb mmc: dw_mmc: Remove old card detect infrastructure
9e304d67ad4768585e4c7002341aac81272799ec mmc: core: Remove redundant check of max_dtr while selecting timings
148bcab28f51c80f13e5ad678fe840e8a34af46f mmc: core: Add helper function for EXT_CSD support
c197787ced5b42bde224d9ee70473d87a824119a mmc: core: Let's callers of from mmc_get_ext_csd() do error handling
2fd322a58ed17b9159aa369e7c9ea01eb6a5d5ae mmc: core: Don't panic when fetching EXT_CSD
e21aa519ee3667d0fabda5d806cc68826e9899e0 mmc: core: Export mmc_get_ext_csd()
2fc91e8b0e1cd89094677d1c9dfba1b26979e48b mmc: core: Remove the redundant mmc_send_ext_csd() API
22b787007faed44456414f7ed88331e39f0df387 mmc: core: Convert to use kzalloc() for CXD register buffers
76fe379acaeb857f91705f3bd5c6f69ec13872a9 mmc: sdhci: Parameterize ADMA sizes and alignment
4fb213f81fe51ace7dea7d2f7cc2417fa2a2dd9e mmc: sdhci: Define maximum segments
739d46dcc24d9fabeed1dea6705d2c7f444b092c mmc: sdhci: Define ADMA constants
0545230f1764bc639e14eea3fe944d9d16e91a92 mmc: sdhci: Define ADMA descriptor structure
e57a5f61eae7e145aeeda18ccb22576822f534bf mmc: sdhci: Add 64-bit ADMA support
9b8ffea6efb0d0edcac265a1ca422188fc1b6dfb mmc: sdhci: Add a quirk for AMD SDHC transfer mode register need to be cleared for cmd without data
d44f88da42d2a75eeac02f87455043f44e10d7cc mmc: sdhci-pci: enable the clear transfer mode register quirk for AMD sdhci
e765bfa22a8f06f0964a97e3e81148511d75140a mmc: sdhci-pci: enable sdhci doesn't support hs200 quirk for AMD sdhci
69d99fdcfd7815dfb2318f0777a46181d5bf42dc mmc: dw_mmc: Add IDMAC 64-bit address mode support
549c0b18485d10bb419a81b24efe719df75089bd mmc: sdhci: Clear also HS400 1.2V capability if 1.2V is not supported
e9fb05d5bca7428f2749d059559e9657c710fe53 mmc: sdhci: Add HS400 support to SDHCI driver
2d079c43bc5ade7b41610b356bf117e14037a584 mmc: core: consistent handling of initial values
767562348b72cb2612f5991ad35a5c0448254939 mmc: dw_mmc: add support for the other bit of sdio interrupt
996903de92f0c7a32d8c83f37d7ebcea0def8660 mmc: core: add core-level function for sending tuning commands
db6e8cdfcde84be556baa6d6b2424668ca21a36c mmc: sdhci-pci: Add SDHCI_QUIRK_NO_ENDATTR_IN_NOPDESC to BYT
6aab23a8f79667e500883adb3bee76ceec9fceb6 mmc: sdhci-pci: Add two host capabilities for BYT
9d65cb88e5979d43f47c899601353ca61973ba90 mmc: sdhci-acpi: Add two host capabilities for Intel
162d6f98005fce408efc5af73956c434ae08ef73 MMC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM
fdb409f636cd6fc3ac4e2f9c880402860e738554 mmc: queue: Improve error handling during allocation of bounce buffers
fe5afb13d46e76b07ab7e732f2b694dcafef4d9d mmc: core: Let mmc_send_tuning() to take struct mmc_host* as parameter
1c2d26e379fc8d37d55befd8589c4c252186ee58 mmc: core: stop trying to switch width when only one bit is supported
d519c863fc198f43c979e9d6a74b53d9c53d55aa mmc: sdhci: Add out_unlock to sdhci_execute_tuning
38e40bf5db9d5b8cbaeca9a78ee17f38473dd78d mmc: sdhci: Simplify use of tuning timer
b5540ce1512eede3bed68ab1e9949df9ad556091 mmc: sdhci: Disable re-tuning for HS400
1f7f26528fb159e71f081df1d1050c218ff1d74d mmc: sdhci-pci: Add support for Intel SPT
6c09bb851e572bf45a3418af5f57148a31e33f9b mmc: sunxi: Convert MMC driver to the standard clock phase API
9116752f51d7cce9b555ea87a7ee78846e315751 mmc: core: Return error at failure of request CD/WP in mmc_of_parse()
eddbc3abc5bf11bdfc92ef84fd97ec4d379b7278 mmc: slot-gpio: Remove option to explicitly free requested CD/WP GPIOs
b4cc580bb6fcd9f4f86483d566601984febc1d31 mmc: slot-gpio: Use the parent device while allocating data
df8aca162e5ff2b20c7a4de3e64e5b96ff838ab0 mmc: slot-gpio: Rework how to handle allocation of slot-gpio data
106276bbc98bd0bac554edce0869d356596ff9ae mmc: sdhci-pci: Remove redundant runtime PM idle callback
04cdbbfa73ebac57a30ec2ebebfd7e9342bbdc44 mmc: core: Make tuning block patterns static
f855a3717eaff1179837060c4796f1cd706331e7 mmc: core: refactor the hw_reset routines
c7ea834d81904b71505093f7ec50d036132cf628 mmc: slot-gpio: Allow host driver to provide isr for card-detect interrupts
63e415c64003fd62a302a1dc19f082e2c6f1b7cc mmc: core: Simplify by adding mmc_execute_tuning()
c63705e185210ce262f78bcc24fd98a2d0ed817c mmc: host: sdhci: Added a space before (
67d0d04a762db4bd610fd628ad683b5d7dc905e7 mmc: sdhci: add a quirk for tuning work around
d3fc5d71ac4dfd28a66689cfd1eea84c4dba8bde mmc: sdhci: add a quirk for single block transactions
94b110aff8679b14f46fd6653ea87b42fe1555be mmc: tmio: add tmio_mmc_host_alloc/free()
7ecc09bab1e856e6730a4dd8a3bc1c28bb6ab3be mmc: tmio: tmio_mmc_host has .dma
dfe9a229e0a66b6a00439cea2885ad3b5d3e0840 mmc: tmio: tmio_mmc_host has .write16_hook
4fe2ec57a15f98c232536cf04e7c139d830955d4 mmc: tmio: tmio_mmc_host has .clk_enable
00452c11ea0e4e5822edf0ac46853933860d0f53 mmc: tmio: tmio_mmc_host has .clk_disable
85c02ddd591e5252eb1cbe8743a839638d7415fd mmc: tmio: tmio_mmc_host has .multi_io_quirk
7445bf9e6f4e5d7755e22c7c9b06f4ae0d6160c6 mmc: tmio: tmio_mmc_host has .bus_shift
e471df0bcaa137f1bbe7c5f75db6ce7566caa292 mmc: tmio: tmio_mmc_data has .alignment_shift
8b4c8f32da91681c0dcd321c9e3cd14f866c5517 mmc: tmio: tmio_mmc_data has .dma_rx_offset
010f4aa758f437647799b1fd677a5e2cf31714e9 mmc: sh_mobile_sdhi: remove .init/.cleanup
de122cb1745313f331dc7c7923b484343d455e64 mmc: tmio: remove TMIO_MMC_HAVE_CTL_DMA_REG flag
f33c9d655893d8632460696bbbdee737cb315711 mmc: tmio: mmc: tmio: tmio_mmc_data has .chan_priv_?x
83eacdfa2529b4ee97fe16a3a3a41d1b03465e13 mmc: sdhci: disable the clock in sdhci_pltfm_unregister()
3bfa6f030a01870a43e2a0652437a20b59bc3412 mmc: sdhci: add quirk for ACMD23 broken
83f13cc9af9822cacc6644ee3c63c81f3930ddad mmc: sdhci: Remove the sdhci exported header file
bbd7f0a20f76d079199d6d749cb3da07d345bae3 mmc: sdhci-spear: Simplify by adding build dependency to CONFIG_OF
03a6d291047da60d56514c28fa1314235bdf2037 mmc: sdhci-spear: Remove exported header
5c935165da79644df90a647ecc140fb77b40dee5 mmc: dw_mmc: Add a timeout for sending CMD11
e30b978f17446d10dcb92c6979b4da9991a18005 mmc: sdhci-pci: fix 64 BIT DMA quirks for rtsx
96541bac0b4e62efa42e7900d9b32e6baa9a214c Revert "mmc: core: Convert mmc_driver to device_driver"
a1b0b977d2b2b9248ae26df0c7987d1696028309 mmc: sdhci-sirf: fake version and capbility registers
dfa13ebbe3340e538b988f5608efd9ff2ca7fc35 mmc: host: Add facility to support re-tuning
79d5a65aeea43920bf3ff60791f317570dd6f54f mmc: core: Enable / disable re-tuning
ed16f58dc00d47439c201ab18ca4d981210bcafd mmc: core: Separate out the mmc_switch status check so it can be re-used
6376f69d20a6905c1d83be451065f70200490b98 mmc: core: Add support for HS400 re-tuning
66c39dfc92f9d35ed9f713833156547842086891 mmc: sdhci: Change to new way of doing re-tuning
0250fdf257b1e5febba19b7cc536a3c9431e50bf mmc: core: Don't print reset warning if reset is not supported
9f6e0bff2afb52a4c29f5ca8a4db01810357974e mmc: Add support for disabling write-protect detection
19f4424677455a01b93163975cfbcffa9adb3336 mmc: dt: Allow to specify that no write protect signal is present
eff8f2f5df1c509c873cdc70c84eb2ee75b41e65 mmc: dw_mmc: Use core to handle absent write protect line
75e8a2288c4fabd6c2f752e8fd3bf7f60be7d3a4 mmc: core: Reset driver type to default
b4f30a174e1fda8118eda038b5d8d5260db36ad5 mmc: core: Allow card drive strength to be different to host
fa021cef1af64cb4ba11c3c0910ef45085c58016 mmc: core: Simplify card drive strength mask
f168359efbb99d6f8591bb666d6510bb78df2d07 mmc: core: Add 'card' to drive strength selection callback
e23350b35deb77ef8e33c35dbb0ed1dab9e8ab86 mmc: core: Factor out common code in drive strength selection
3853a042325e8f497c199020979c4fc824528c6e mmc: core: Record card drive strength
cc4f414c885cd04f7227ad9bcd6b18fd78d718d9 mmc: mmc: Add driver strength selection
e1bfad6d936d7149a83423e2a7244dd5771f27e7 mmc: sdhci-pci: Add support for drive strength selection for SPT
b69587e2d5b09a192c45c604ea1f9e8d51f4c3a1 mmc: sdhci-pci: Enable HS400 for some Intel host controllers
364549ddc29dd5490e81039cb85fbf0123365754 mmc: core: Remove redundant ->power_restore() callback for MMC
3056c49c35c1e8cc303e79c7085579ff0729a83b mmc: core: Remove redundant ->power_restore() callback for SD
b5e97d6e58617b9d6a3838ede6ccd3883035dbf3 mmc: sdhci-pci: Change AMD SDHCI quirk application scope
2bb4cd5cc472b191a46938becb7dafdd44644329 block: have drivers use blk_queue_max_discard_sectors()
7ac020366b0a436d726408841160b5dc32c19214 mmc: sdhci check parameters before call dma_free_coherent
5924175755a0ed902d91f2f2660e914032fa63e5 mmc: sdhci: make max-frequency property in device tree work
d1955c3a9a1d89c53c9e7ce3b87799f8db1855c1 mmc: sdhci: add quirk SDHCI_QUIRK_CLOCK_DIV_ZERO_BROKEN
135b0a284d9c2bcfb64a5f7d90c439ede8bc5e06 mmc: sdhci: properly check card present state when quirk NO_CARD_NO_RESET is set
575c319dfe872fc8bf1d57b244fb40f497ab3a47 mmc: dw_mmc: fix pio mode when internal dmac is enabled
2b708df2b3edf6e91a4c8d89e7aedb0f861d0e41 mmc: dw_mmc: remove the unused blk_setting
57e104864bc4874a36796fd222d8d084dbf90b9b mmc: dw_mmc: add quirk for broken data transfer over scheme
90614cd9045dc7003913ee58cbc77950351485a0 mmc: host: use of_property_read_bool()
d31911b9374a76560d2c8ea4aa6ce5781621e81d mmc: sdhci: fix dma memory leak in sdhci_pre_req()
0dafa60eb2506617e6968b97cc5a44914a7fb1a6 mmc: sdhci: also get preset value and driver type for MMC_DDR52
43934ece2ea72c1dd279c0b0478c1a036d5d77ee mmc: core: Don't return an error for CD/WP GPIOs when GPIOLIB is unset
af951761d01c89eea8f1dcccf8010218e4b55817 mmc: sdhci: add quirk SDHCI_QUIRK2_NEED_DELAY_AFTER_INT_CLK_RST
08b137d90eec51b0e90c42e123ca8ceb118d233f mmc: core: Fix init_card in 52Mhz
8d1ffc8c982e4480059ef735e8f15f631e40e80c mmc: core: Keep host claimed while invoking mmc_power_off|up()
f90d2e4035d456cb20c0b784725d556eb4de4d8a mmc: core: Convert __mmc_switch() into an internal core function
4324f6de6d2eb9b232410eb0d67bfafdde8ba711 mmc: core: enable CMD19 tuning for DDR50 mode
9faac7b95ea4f9e83b7a914084cc81ef1632fd91 mmc: sdhci: enable tuning for DDR50
06bf9c565444643ce2732f8a297f76b953acde6b mmc: sdhci-pci: Add another PCI ID for an Intel eMMC host controller
2ca635242ec40c8d575e337a0b2b0a1928ad6581 mmc: kconfig: reconfigure MMC_SDHCI_OF_ESDHC option
9eadcc0581a8ccaf4c2378aa1c193fb164304f1d mmc: core: Remove MMC_CLKGATE
3fc7eaef44dbcbcd602b6bcd0ac6efba7a30b108 mmc: dw_mmc: Add external dma interface support
4fd4c0655b82b0f81841b915ef1e70e2141d4a38 mmc: sdhci-pci: Add more PCI IDs for Intel controllers
794f15782d9f12aa5a43f796680a5fc4f2c424e3 mmc: core: Add DT bindings for eMMC hardware reset support
9979dbe5158899b556eb772b7335e29417ac0ddd mmc: mmc: extend the mmc_send_tuning()
1815e61b1a7efe81017a883e817292daf7d2f922 mmc: mmc: Improve reliability of mmc_select_hs200()
51b12f7764fa8bb464cbd0f7bbd3a408d21ade16 mmc: mmc: Fix HS setting in mmc_select_hs400()
974007aaf240aa195b31c34cfdb013524a2dcfca mmc: mmc: Move mmc_switch_status()
d23029332c3d51fb5ac117ba5cde4dc0a3ec3fa6 mmc: mmc: Improve reliability of mmc_select_hs400()
0dbcdc0622ea77fae87732c485ca13a1f9375571 mmc: core: enable support for the standard "wakeup-source" property
c29536e85b5f7cf42b2e761f7ff35bc97de7cf95 mmc: core: Make runtime resume default behavior for MMC/SD
7b6471a968bf95e8d526393de125df3bc0c6a73a mmc: core: Remove MMC_CAP_RUNTIME_RESUME as it's redundant
8dede18e2e86c8e272cd74e66b0e86872cbe7e02 mmc: core: Refactor code to register the MMC PM notifier
fb0229dfec3df9247190f001f1b51d767f2ee035 mmc: fix mmc_{un,}register_pm_notifier prototypes
17da678368fac22375f0854c811034e311be23b5 mmc: mvsdio: delete platform data code path
100a606d54a087cfec54efbedba72f36e5a9cdf0 mmc: core: Introduce MMC_CAP2_NO_SDIO cap
adb24d42a516bca8b9741ed21206509daaab5b13 mmc: mmc: Fix incorrect use of driver strength switching HS200 and HS400
1ca896856281d3f1ad4f6f7d4e32e2943452de23 mmc: sdhci-pci: Do not default to 33 Ohm driver strength for Intel SPT
347ea32dc118326c4f2636928239a29d192cc9b8 mmc: sdhci: Fix DMA descriptor with zero data length
04a5ae6fdd018af29675eb8b6c2550c87f471570 mmc: sdhci: 64-bit DMA actually has 4-byte alignment
260b31643691e8a58683a4ccc3bdf7abfd86f54a mmc: dw_mmc: use resource_size_t to store physical address
520322d92eab66b6fee562557fdd201b01cd6240 mmc: It is not an error for the card to be removed while suspended
01a999e48995a35faaa513f811c335bce72917d6 mmc: dw_mmc: remove the unused quirks
e10c321977091f163eceedec0650e0ef4b3cf4bb mmc: core: Enable tuning according to the actual timing
bf60e592a1af4d6f65dd54593250183f14360eed mmc: sdhci: Allow override of mmc host operations
163cbe31e5163459908a41a2b4e0d33a28fd557a mmc: sdhci-pci: Fix card detect race for Intel BXT/APL
fbae4ba8c4a387e306adc9c710e5c225cece7678 x86, microcode: Reload microcode on resume
25cdb9c86826f8d035d8aaa07fc36832e76bd8a0 x86/microcode/intel: Fish out the stashed microcode for the BSP
776d3cdc93d83808bf5929d716a56c69bbe01d2f x86/microcode/intel: Check if microcode was found before applying
2d48bb9b6ec6fb0f28e5135fd080edc23152ae45 x86/microcode/intel: Get rid of last arg to load_ucode_intel_bsp()
02f35177fb00ee0d73f9af2d6006af6b75b58c11 x86/microcode/intel: Simplify load_ucode_intel_bsp()
58ce8d6d3a7616014dc70fd8d8f945176d74957c x86/microcode: Consolidate family,model, ... code
9e02bb46d366b3635da966e29c5a53920ee7fde8 x86/microcode/intel: Simplify generic_load_microcode_early()
e3d8f6747663b468ccedb8af0f38f2be82874c63 x86/microcode/intel: Move mc arg last in get_matching_{microcode|sig}
4f1f605cfe3046c4c9f07920c47d3f801d31c0ba x86/microcode/intel: Check scan_microcode()'s retval
a1a32d29f941b7219be07f9e76455a5e4ce4e9c4 x86/microcode/intel: Get rid of revision_is_newer()
da9b50765e6ea3e9113df3a14a63700e47a670b7 x86/microcode/intel: Remove unused @rev arg of get_matching_sig()
760d765b2bb662be177d4b5b271ced8debc803ac x86/microcode: Parse built-in microcode early
8de3eafc161022dd094fa009346509c712e9c4b0 x86/microcode/intel: Rename get_matching_microcode
e774eaa9f6069b70b5208aa50539a09f41cf7e73 x86/microcode/intel: Rename get_matching_sig()
ee38a90709084b1c91279cde8f783e90f85285a1 x86/microcode: Disable builtin microcode loading on 32-bit for now
7b179b8feba3b887be5ddd501c25d924cf44d70a x86/microcode: Correct CPU family related variable types
71db87ba570038497db1227b7dc61113c4156565 bus: subsys: update return type of ->remove_dev() to void
2eff73c0a11f19ff082a566e3429fbaaca7b8e7b x86/microcode/amd: Extract current patch level read to a function
0399f73299f1b7e04de329050f7111b362b7eeb5 x86/microcode/amd: Do not overwrite final patch levels
9a2bc335f100a0f6ee6392b9f97ac4188d84db1d x86/microcode: Unmodularize the microcode driver
fe055896c040df571e4ff56fb196d6845130057b x86/microcode: Merge the early microcode loader
6b26e1bf66bb4bf1b1b9b4f27d1f324875689cf0 x86/microcode: Remove modularization leftovers
6f7fc44bf1eef6768f9dcb527c737ab24a3203ac x86/microcode/amd: Remove maintainers from comments
c595ac2bac930ce79f336c7a7e45e1ea38abfe16 x86/microcode/intel: Move #ifdef DEBUG inside the function
2d5be37d686c4dae8e60d20283d6f44ac2c44f65 x86/microcode: Initialize the driver late when facilities are up
99f925ce927e4ac313d9af8bd1bf55796e2cdcb1 x86/cpu: Unify CPU family, model, stepping calculation
5f9c01aa7c49a2d74474d6d879a797b8badf29e6 x86/microcode: Untangle from BLK_DEV_INITRD
264285ac01673e70557c43ecee338ce97c4c0672 x86/microcode/intel: Make early loader look for builtin microcode too
e8c8165ecfb1cfd6650777c193361d33b0f7f59e x86/microcode: Remove redundant __setup() param parsing
b7f500aedd4551a9bf29c617804c13f0ff18c879 x86/microcode: Issue update message only once
a58017c62b5fa23e532b731e70a63ded54cc2c02 x86/microcode/AMD: Drop redundant printk prefix
bd6fe58d8e60d45c80ed664a55ef0df5fa076014 x86/microcode/intel: Rename local variables of type struct mc_saved_data
4fe9349fc3b042b481692b577bda97cde4d6f517 x86/microcode/intel: Rename mc_saved_count to num_saved
de778275c295825e6638f3f74103f40642d45caa x86/microcode/intel: Rename mc_intel variable to mc
58b5f2cc4bdbc9b616e68639f5a84886aa5be590 x86/microcode/intel: Move the BUG_ON up and turn it into WARN_ON
26cbaa4dc676a444aa626cbc642c4c8181ef1378 x86/microcode/intel: Cleanup apply_microcode_intel()
c416e6117575213a5a962149620684a09f9e4ece x86/microcode/intel: Use *wrmsrl variants
f8bb45e2c4acf1395bb6e61a135ce8c9107388cf x86/microcode/intel: Rename mc_saved_in_initrd
2f303c524ed021825671cfa9b1934338bc04f8ab x86/microcode/intel: Remove unused arg of get_matching_model_microcode()
f96fde531946524b26d25d4eed9625695837f524 x86/microcode/intel: Cleanup get_matching_model_microcode()
f7eb59dda129e46be5e195a46bfd0dde76db9bbd x86/microcode/AMD: Issue microcode updated message later
9cc6f743c7724eb9abaf27904194c169db85dd31 x86/microcode: Use kmemdup() rather than duplicating its implementation
d15156138dad40205c9fdd9abe85c9e1479ae272 block SG_IO: add SG_FLAG_Q_AT_HEAD flag
c1d40a527e885a40bb9ea6c46a1b1145d42b66a0 scsi: add a blacklist flag which enables VPD page inquiries
45341ca3fcacc8720c425e757a627ef81b65b1ee scsi: fix the type for well known LUs
e27829dc92e549486b8248cdfa53e108abb6acfb scsi: serialize ->rescan against ->remove
3d9a1f530e508ff6fc9ab8220016b02f1bce255b sd: don't grab a device references from driver methods
ef10b16948bc0db51a0140be5109ad73b170a011 scsi_scan: fix queue depth initialisation problem
804ff603d2fe98c48aac4e2d6e4f5db687d78812 [SCSI] Fix printk typos in drivers/scsi
ca369d51b3e1649be4a72addd6d6a168cfb3f537 block/sd: Fix device-imposed transfer length limits
09e2b0b14690fb13ccfc04af49f156df3e25b152 scsi: rescan VPD attributes
9c1d9c207bb800498347a2716da298043ee280c5 sd: Reject optimal transfer length smaller than page size
d0eb20a863ba7dc1d3f4b841639671f134560be2 sd: Optimal I/O size is in bytes, not sectors
f08bb1e0dbdd0297258d0b8cd4dbfcc057e57b2a sd: Fix excessive capacity printing on devices with blocks bigger than 512 bytes
5ddfe0858ea7848c5d4efe3f4319e7543522e0ee scsi: Do not attach VPD to devices that don't support it
596103cf8fb0a258e1a5ed3e895860764490934d crypto: drivers - Fix Kconfig selects
28cfaf67e5c1f5b6b0d549eea398f8401a40e566 crypto: qat - add MMP FW support to accel engine
a990532023b903b10cf14736241cdd138e4bc92c crypto: qat - Add support for RSA algorithm
319382a6970899f02f18da4b0083a6e55942456d crypto: api - Add instance free function to crypto_type
28a4618ad14cf17009a87d8b5718132a5d4ef852 crypto: akcipher - add akcipher declarations needed by templates.
3cf080a7b747d800efc231d29bd3a07659c6aeb6 crypto: qat - fix invalid check for RSA keylen in fips mode
8f5ea2df02fb0a50d81701e0c5dc8a5f00381147 crypto: qat - Don't attempt to register algorithm multiple times
5995752eadfd64edece5810b6fb0639806726594 crypto: qat - remove redundant struct elem
a57331394cf5228555dbf4bca21abb2fc1597f04 crypto: qat - Move adf admin and adf hw arbitrer to common code
8669f34e122bad56e4d3ecde5f4720c40261bf4c crypto: qat - fix simple_return.cocci warnings
0a139416eed5f05118cb05aba37470de68c55272 crypto: qat - Remove reference to crypto_aead_crt
c1ae632ad2608d0214291a64ca719f900ffef14b crypto: qat - Don't move data inside output buffer
114fc1afb2de7dec40da137dc2a55cd38fc220f2 hexdump: make it return number of bytes placed in buffer
37607102c4426cf92aeb5da1b1d9a79ba6d95e3f seq_file: provide an analogue of print_hex_dump()
3cc43a0a5cea4fe2a2107e77500d6032b9bcafde crypto: qat - Add load balancing across devices
be2cfac07619a8f97fe3aae39f095e9e33decd99 crypto: qat - remove empty functions and turn qat_uregister fn to void
def14bfaf30d5d5a4a8fe5bf600ce09232e688c0 crypto: qat - add support for ctr(aes) and xts(aes)
22287b0b5988b603b5f0daa282c89aaf2b877313 crypto: akcipher - Changes to asymmetric key API
c52b67338937ffee7a4d7225d9cb334ace4279dd crypto: qat - remove superfluous check from adf_probe
9809ebcd0e8cacb20a938e7a9fab68ea47e80f82 crypto: qat - add new device definitions
b0272276d903d87160df37f0f56af56cbda59801 crypto: qat - add support for new devices to FW loader
1a72d3a6d1d9a08705546eba14f0390c565ccd24 crypto: qat - move isr files to qat common so that they can be reused
890c55f4dc0e60a4ba71ab9b6877f69ff7053213 crypto: qat - add support for c3xxx accel type
a6dabee6c8ba770bab7a3ec63b6a5c1059331d5c crypto: qat - add support for c62x accel type
8b206f2d666f41f0aa83dec83504801ee945d3dc crypto: qat - add support for c3xxxvf accel type
3771df3cff7536da19cba2b4755ad628dc4bf371 crypto: qat - add support for c62xvf accel type
75910d375ecb2079b3418f8b304fd775916025e2 crypto: qat - select PCI_IOV when VF are enabled
81b312f11dfd7466462d94667f0a8df14a412d2a crypto: qat - uint8_t is not large enough for accel_id
46621e6f84908bb9df494d5fc2bcd145041810d5 crypto: qat - fix CTX_ENABLES bits shift direction issue
dc2c632272d5614b77359b24f77c0a80ddc3a962 crypto: qat - use list_for_each_entry*
a239c36e527e003ff15ad4335c2596de692aa2f4 crypto: qat - Rename dh895xcc mmp firmware
1fa844e2ff914370a1c7f14bb854f220bfe87c73 crypto: qat - Fix random config build issue
2a5de720dcecbc7ba998bc1ae8f7b9cd7cb81654 crypto: qat - fix SKU definiftion for c3xxx dev
91a93eafea3310e7e4ab482327d34b68ad7bfdaa crypto: qat - remove to call get_sram_bar_id for qat_c3xxx
e2f9dc3bd213792ac006e83f50a5453f23b8c354 net: avoid NULL deref in napi_get_frags()
5eb4dce3b3471ec9d1ea2945fa3d2bab4ac7e100 net: relax setup_tc ndo op handle restriction
351638e7deeed2ec8ce451b53d33921b3da68f83 net: pass info struct via netdevice notifier
be9efd3653284f2827fd82861e8e9db9a8f726e1 net: pass changed flags along with NETDEV_CHANGE event
75538c2b85cf22eb9af6adfaf26ed7219025adeb net: always pass struct netdev_notifier_info to netdevice notifiers
6859e7df6d9045a461412777e63bd8cef12f9705 netdev: remove potentially harmful checks
0e4ead9d7b3655d76371604abb9b0dcc4e79bb7d net: introduce change upper device notifier change info
b03804e7c3ad41c265c0ca21ddb306b252b4f99f net: Check CHANGEUPPER notifier return value
83a093b486ecfd25e7b04b82f6a388f24bd274b2 net: etherdevice: add address inherit helper
1d486bfb66971ebacc2a46a23431ace9af70dc66 net: add NETDEV_PRECHANGEMTU to notify before mtu change happens
2ea2f62c8bda242433809c7f4e9eae1c52c40bbe net: fix crash in build_skb()
b63ae8ca096dfdbfeef6a209c30a93a966518853 mm/net: Rename and move page fragment handling from net/ to mm/
484748f0b65a1950b2b93f444a2287e8dd2cedd6 slab: infrastructure for bulk object allocation and freeing
994eb764ec5ad57c9b7c5e72b892205039a84b69 slub bulk alloc: extract objects from the per cpu slab
ebe909e0fdb34b980c5cf636c495e4f0bb0dfda8 slub: improve bulk alloc strategy
fbd02630c6e3c60feecc4688f5f98b015d264516 slub: initial bulk free implementation
3eed034d045ce93a40e232a6bd5f86127342053a slub: add support for kmem_cache_debug in bulk calls
a380a3c75529a5c42b78c0d64a46404f8cb0c0d1 slub: create new ___slab_alloc function that can be called with irqs disabled
87098373e244840e00bd1c93884c1d917411597e slub: avoid irqoff/on in bulk allocation
81084651d73737988355f167065fab8a73574db1 slub: support for bulk free with SLUB freelists
d0ecd894e3d5f768a84403b34019c4a7daa05882 slub: optimize bulk slowpath free by detached freelist
03ec0ed57ffc77720b811dbb6d44733b58360d9f slub: fix kmem cgroup bug in kmem_cache_alloc_bulk
033745189b1bae3fc931beeaf48604ee7c259309 slub: add missing kmem cgroup support to kmem_cache_free_bulk
865762a8119e74b5f0e236d2d8eaaf8be9292a06 slab/slub: adjust kmem_cache_alloc_bulk API
795bb1c00dd338aa0d12f9a7f1f4776fb3160416 net: bulk free infrastructure for NAPI context, use napi_consume_skb
fe896d1878949ea92ba547587bc3075cc688fb8f mm: introduce page reference manipulation functions
376bf125ac781d32e202760ed7deb1ae4ed35d31 slub: clean up code for kmem cgroup support to kmem_cache_free_bulk
abbdb5a74cead60e20b79c960c1772955f0b6b81 net: remove a dubious unlikely() clause
15fad714be86eab13e7568fecaf475b2a9730d3e net: bulk free SKBs that were delay free'ed due to IRQ context
ef951599074ba4fad2d0efa0a977129b41e6d203 lib: move strtobool() to kstrtobool()
a81a5a17d44b26521fb1199f8ccf27f4af337a67 lib: add "on"/"off" support to kstrtobool
4cc7ecb7f2a60e8deb783b8fbf7c1ae467acb920 param: convert some "on"/"off" users to strtobool
8279e49531f427ae7e8db894072d91bc42d3eeb5 i40e: Change some messages from info to debug only
3b6c2179eebf4536d08cf966c9f585dd95c72367 i40e: Remove 100M SGMII unless hw is X722
48becae60f7e461b4b204e6608dc6beebe6c8aff i40e: Recognize 1000Base_T_Optical phy type when link is up
8589af70d0879a68c93ef77505a6234d22b1b1a7 i40e: fix for PHY NVM interaction problem
1c2df9e5a763d6d88f9aea8ca76d0ca75753fbd5 i40e: Bump version to 1.4.2
acd65448f2e6b3407b8bb28b57d711ca417ea679 i40e: rename rss_size to alloc_rss_size in i40e_pf
e36b0b111bcc651ce030e88e042f83b015dd04b8 i40e: fix confusing message
ea02e90b4b49782462d06a425e05c776909fbae4 i40e: propagate properly
95db239f4fc664d9ce4ba9a6a3e87d2a3d856a23 i40e: Remove separate functions gathering XOFF Rx stats
48b1804ee3cdad7bf115666eb35edf12a734710f i40e: Replace X722 mac check in ethtool get_settings
8eed76fa4885f1ed9f19f4d3a16dd24cebf09c19 i40e: Cleanup the code with respect to restarting autoneg
4f9e697ebbf40ba482ad0481da1e978440f2a53e i40e: bump version to 1.4.10
35dae51de3e99db10f355642f5fc67719b93f558 i40e: add new device IDs for X722
6dfae3892473e91080accdb2da8476481393f769 i40e: Limit DCB FW version checks to X710/XL710 devices
f8db54cc4df7b065b0028f8c919e2f47983f2043 i40e: add 100Mb ethtool reporting
2eccf1d611c09edb80cf5805041a34805a3e3b43 i40e: remove VF device IDs from PF
c40918c3ad80e550ec68339d6816059e11648012 i40e: count allocation errors
72b748698076b4609186e9554a5a890cd435b172 i40e: add priv flag for automatic rule eviction
2818ccd95684d39cc3bdad579e02ae56c0d6de88 i40e: move sync_vsi_filters up in service_task
f1bbad339cdd74cea945e33d758200d42310be17 i40e: Make the DCB firmware checks for X710/XL710 only
a16ae2d59c290b0c545edb9bf41ac9cf88352ee0 i40e: Do not disable queues in the Legacy/MSI Interrupt handler
6e93d0c90fb2e20fc5b9dbdf28b45e91a16b4353 i40e: better error reporting for nvmupdate
84d5946d49cf9552d0f1740ad62d0f126cb3b6a9 i40e: Do not drop support for IPv6 VXLAN or GENEVE tunnels
31b606d0c40a1435c54bff18e4d3d3c33af1c3cf i40e: Fix led blink capability for 10GBaseT PHY
a75e8005d506f374554b17383c39aa82db0ea860 i40e: queue-specific settings for interrupt moderation
be280bad15fafc0f7e7b90bdbd99170366f5e9bf i40e/ethtool: support coalesce getting by queue
f3757a4d9e823c43ccfe4db02b6cda77414e25f7 i40e/ethtool: support coalesce setting by queue
e3219ce6a775468368fb270fae3eb82a6787b436 i40e: Add support for client interface for IWARP driver
08ca38742b63ae3825096e943de371a3b372c4a0 i40e: call ndo_stop() instead of dev_close() when running offline selftest
618290262e960469758d4ab67457fcb2ea356d51 i40e: Fix up return code
442b25e455f5e693c23f9d3a32b208ca9ab25cf0 i40e: Remove unused variable
24d41e5e2c9afe99b0584832206ba8779dfb783e i40e/i40evf: Fix TSO checksum pseudo-header adjustment
14c5f5d264c3ee28e8ec9fd4dffb29f5d1ea1d02 i40e: Restrict VF poll mode to only single function mode devices
bab2fb60dcdd0f9d8715749d056ddd6c465b1875 i40e: Move NVM event wait check to NVM code
8e2cc0e67f4aa33931cd15a553938163a19dcab3 i40e: fix errant PCIe bandwidth message
c4e1868c3aa1992de1cba600e7083fcd49bd20b8 i40e: Add support for configuring VF RSS
5676a8b9cd9a1c9822cdb3d88109f449eb2126c1 i40e: Add VF promiscuous mode driver support
692fb0a75e816d2676f222c9db33e91f46ea1e03 i40e: Change the default for VFs to be not privileged
5f527ba962e277963b08f4c7f12fbeeac3f34e3c i40e: Limit the number of MAC and VLAN addresses that can be added for VFs
3ed439c56e0d82fd08275fff2c21278f92ed8ec5 i40e: Fix uninitialized variable
a3aa5036cf3798c18fe22041fbfbac01642657e0 i40e: Update device ids for X722
0a862b43acc6c5d38fd462baa9c76f9197907d73 i40e/i40evf: Add module_types and update_link_info
e1c227919548fb9d8ee771e715d2764f1d41e8e0 i40e/i40evf: Bump i40e version to 1.4.4 and i40evf to 1.4.1
1e590660cb7ac675c735dd74d99dbca2103abf41 i40e/i40evf: Bump version to 1.4.7 for i40e and 1.4.3 for i40evf
69ebe955be358fe8f8c73b3aa7395760f337845f i40evf: change version string generation
c9c9f1ba75fa1260a9087ba229559175cd4a2b40 i40e/i40evf: Bump i40e to 1.4.8 and i40evf to 1.4.4
82f399c9350dd2531acaf2fb25a701f58a49f936 i40e/i40evf: Bump i40e to 1.4.11 and i40evf to 1.4.7
4580de0de484a33814ccf0f4ae9c91dcd828a140 i40e/i40evf: bump version to 1.4.12/1.4.8
dd353109e41c1e92e0cea9954404a6f5a7d46218 i40e: Add a SW workaround for lost interrupts
8888fd8843ed501a26d9b74de0975b1ace663231 i40e/i40evf: Bump i40e to 1.4.15 and i40evf to 1.4.11.
a9c9a81f5892eb984234223399ee624f7dbd15e8 i40e/i40evf: Drop outer checksum offload that was not requested
b96b78f2b789ab8398e7ec0111bb8b4588ed42bf i40e/i40evf: Replace header pointers with unions of pointers in Tx checksum path
a0064728f8a34f7a5afd9df86d9cdd8210977c8d i40e/i40evf: Add support for IPv4 encapsulated in IPv6
a3fd9d8876a589f05725237aced606b995956860 i40e/i40evf: Handle IPv6 extension headers in checksum offload
475b4205aa52c16feef08d55c8fd76e815b6bee7 i40e/i40evf: Do not write to descriptor unless we complete
529f1f652e3c3c6db6ab5a6e3a35469ddfd9575d i40e/i40evf: Add exception handling for Tx checksum
fad57330b6d0710fdf39dc1c2b28ccebb97ae8a1 i40e/i40evf: Clean-up Rx packet checksum handling
5453205cd0975b845f6f8837f0c2b7c8cb80fcf8 i40e/i40evf: Enable support for SKB_GSO_UDP_TUNNEL_CSUM
4ec441df25a686518fb369086e2b34a1cedaa6c9 i40e/i40evf: Break up xmit_descriptor_count from maybe_stop_tx
2d37490b82afe1d1b745811e6ce0a4d16bc5e996 i40e/i40evf: Rewrite logic for 8 descriptor per packet check
3bc67973e81d5104908a4ba7c2aab98a4f7bd64e i40e/i40evf: Move Tx checksum closer to TSO
b8f1343a13c669aaa3d475ed8513a32154ae5ffd i40e/i40evf: Bump i40e to 1.4.25 and i40evf to 1.4.15
5c4654daf2e2f25dfbd7fa572c59937ea6d4198b i40e/i40evf: Allow up to 12K bytes of data per Tx descriptor instead of 8K
f2edaaaa392bc21c24f532ea9bcc952a54a22367 i40e/i40evf: Fix handling of boolean logic in polling routines
a619afe814453300684f1d5a6478d67f791bc723 i40e/i40evf: Add support for bulk free in Tx cleanup
4ea623922d1d73c162da53e02cce1d0d3fd55893 i40e/i40evf: Fix casting in transmit code
50f26a507664499ccef017607a29cc1456695343 i40e/i40evf: Bump patch from 1.4.25 to 1.5.1
d6bf58c2e88f9e0cfc029c158e1182eb1f07d7eb i40e: Add new device ID for X722
066439ce791b5d8533556a89836c0849589c2b41 i40e/i40evf: Bump patch from 1.5.1 to 1.5.2
d1bd743b5b4d675e739b574284d1412ba996fe07 i40e/i40evf: Move stack var deeper
1f15d66712bb64e39fe2c23b1b32f68f9e1d4ee7 i40e/i40evf: Faster RX via avoiding FCoE
585954f8b808def857771037392c1621f167fa92 i40e: Add RSS configuration to virtual channel
47c46778e1905721433a413b2522a8e2b3d6c354 i40e/i40evf: Bump patch from 1.5.2 to 1.5.5
3f3f7cb875c0f621485644d4fd7453b0d37f00e4 i40e/i40evf: Limit TSO to 7 descriptors for payload instead of 8 per packet
b0fe3306432796c8f7adbede8ccd479bb7b53d0a i40e/i40evf: Clean up feature flags
577389a5db766c44400e75e6a79f39d9b0d585f8 i40e/i40evf: Add support for IPIP and SIT offloads
fed2db99824334b3a7219da6b45d70f448449d7d i40e: Specify AQ event opcode to wait for
bccf474435b668312e9fc8bd9586c2e256b66841 i40e: Add DeviceID for X722 QSFP+
47d3483988f649739ad8d6462eaa1723e5d077c3 i40evf: Add driver support for promiscuous mode
5a6fc256e7b64b3073688cc72fae357612cf31c6 i40e/i40evf : Bump driver version from 1.5.5 to 1.5.10
8b99aba70c5f581860736855e211cf981f438ad2 ALSA: hda - Fix audio crackles on Dell Latitude E7x40
831bfdf9520e389357cfeee42a6174a73ce7bdb7 ALSA: hda - restore the MIC FIXUP for some Dell machines
3a05d12f46cb95a6a685114819363a56e6170996 ALSA: hda - Apply a fixup to Dell Vostro 5480
24d9b755ab2b44ec56723cd8e6b578985a1f1c76 ALSA: hda: Delete an unnecessary check before the function call "kobject_put"
b25cf30a013195a69c167209d13c19b90a7450f2 ALSA: hda - Remove superfluous pcm NULL check
da23ac1e40ce844d1a9553906bdacce160af76f6 ALSA: hda - Add hduadio support to DEVTABLE
6ed1131fe196ad7ffc13acc1a1eadc08a1db0303 ALSA: hda/realtek - Dell XPS one ALC3260 speaker no sound after resume back
86f799b82f5c011404ddef54600bc5e99b7e0cf2 ALSA: hda - Fix noise on Dell Latitude E6440
8c69729b4439bbda88c3073df7243f755cc418ed ALSA: hda - Fix headphone noise after Dell XPS 13 resume back from S3
23adc192b862b69ad80a40bd5206e337f41264ac ALSA: hda - Fixing speaker noise on the two latest thinkpad models
c04017ea81dc1eccae87be7ac7b82b2972f9931f ALSA: hda - Fix headphone mic input on a few Dell ALC293 machines
3694cb2947db50753caf432db067487eafae7b9b ALSA: hda - Add mic mute hotkey quirk for Lenovo ThinkCentre AIO
c7b60a89516beb20a352ec85c73a8fccd5becf26 ALSA: hda - Add keycode map for alc input device
56f27013482c0803d978b667fe85de04ce9357cd ALSA: hda - Fixup inverted internal mic for Lenovo E50-80
cf52103a218744f3fd18111325c28e95aa9cd226 ALSA: hda - Add fixup for Dell Latitidue E6540
fe0d128c57bf927a713159f60a18d9f315d4d91d ALSA: jack: Allow building the jack layer without input device
3b43b71f05d3ecd01c4116254666d9492301697d ALSA: hda - Fixing background noise on Dell Inspiron 3162
2ae955774f29bbd7d16149cb0ae8d0319bf2ecc4 ALSA: hda - Fixup speaker pass-through control for nid 0x14 on ALC225
f883982dc1b117f04579f0896821cd9f2e397f94 ALSA: hda - Fix headset support and noise on HP EliteBook 755 G2
6ef2f68fa38bf415830f67903d87180d933e0f47 ALSA: hda - fix the mic mute button and led problem for a Lenovo AIO
790b415c98de62602810b0eedce26f0f9d6ddd78 ALSA: hda - hdmi defer to register acomp eld notifier
a686632fd9a857776798f3479e2b58b07d938076 ALSA: hda - Split out Intel-specific codes from patch_generic_hdmi()
2c1c9b86c6b22dc0cbac3f4ca2c8272c472dc463 ALSA: hda - Override HDMI setup_stream ops for Intel HSW+
4846a67eb5a1d7cac76e1b22f66e88a8cbbdff3f ALSA: hda - Introduce pin_cvt_fixup() ops to hdmi parser
e85015a3797f2665cc6f0339e6407adc00ac4245 ALSA: hda - Use eld notifier for Intel SandyBridge and IvyBridge HDMI/DP
d745f5e7b8b2961f68b0b9093a0f914a8a83c2ae ALSA: hda - Add the pin / port mapping on Intel ILK and VLV
7ff652ffc06afc7f81839fb1780c57470ac09db6 ALSA: hda - Enable i915 ELD notifier for Intel IronLake and Baytrail
44fde3b89ba1e154b3cec7d711703fff53852983 ALSA: hda - Update chmap tlv to report sink's capability
4926c8046549cc3c9689e8050e303c016a0b0cba ALSA: intel8x0: Drop superfluous VM checks
2da2dc9ead232f25601404335cca13c0f722d41b ALSA: hda - Fix white noise on Asus UX501VW headset
e549d190f7b5f94e9ab36bd965028112914d010d ALSA: hda - fix front mic problem for a HP desktop
c636b95ec5980345674ad7960a3c67135a84b687 ALSA: hda/realtek - Enable the ALC292 dock fixup on the Thinkpad T460s
afecb146d8d8a60a1dde9cdf570c278649617fde ALSA: hda/realtek - Add ALC3234 headset mode for Optiplex 9020m
037e119738120c1cdc460c6ae33871c3000531f3 ALSA: hda - Add dock support for ThinkPad X260
4a21ef7d1d2b19fdd986783e9ef53bd15fdc87bf drm/i915: implement sync_audio_rate callback
7e8275c2f2bbb384e18af37066b8b2f32b7d092f drm/i915: set proper N/CTS in modeset
cae666ceb8c3f154351f7df29c522f7a7016bdc0 drm/i915: Add get_eld audio component
2d12b6b381ba059d5f92798f5ea739672a2f5fcf ACPI / utils: Add acpi_dev_present()
89f8b33ca1ea881d1d84542282cb85d07d02e78d block: remove old blk_iopoll_enabled variable
511cbce2ff8b9d322077909ee90c5d4b67b29b75 irq_poll: make blk-iopoll available outside the block layer
78d0264eb7a938f1eaf59fcb2d3f7da2567369d3 irq_poll: don't disable new irq_poll instances
ea51190c03150fce4d9e428bfb608abbe0991db8 irq_poll: fold irq_poll_sched_prep into irq_poll_sched
0bc92ace52ef3ed1c8eb9bcf36cd3d7ca72d5d14 irq_poll: fold irq_poll_disable_pending into irq_poll_softirq
6c197093847e8cdec844df39a373bfe1f9a1ac8a mpt3sas: Set maximum transfer length per IO to 4MB for VDs
4fe6bc97efebdc5083aa749850928fad1740a60d mpt3sas: Update MPI header to 2.00.42
b2500d76a0dbaa8993cd6b43941d23d31a312831 mpt3sas: Updating mpt3sas driver version to 13.100.00.00
bf9683d6990589390b5178dafe8fd06808869293 mm, documentation: clarify /proc/pid/status VmSwap limitations for shmem
c261e7d94f0dd33a34b6cf98686e8b9699b62340 mm, proc: account for shmem swap in /proc/pid/smaps
6a15a37097c7e02390bb08d83dac433c9f10144f mm, proc: reduce cost of /proc/pid/smaps for shmem mappings
48131e03ca4ed71d73fbe55c311a258c6fa2a090 mm, proc: reduce cost of /proc/pid/smaps for unpopulated shmem mappings
eca56ff906bdd0239485e8b47154a6e73dd9a2f3 mm, shmem: add internal shmem resident memory accounting
8cee852ec53fb530f10ccabf1596734209ae336b mm, procfs: breakdown RSS for anon, shmem and file in /proc/pid/status
87c9403b0d1de4676b0bd273eea68fcf6de68e68 virtio_balloon: fix PFN format for virtio-1
e009a7e858fed215cb4eed5174a31cadd42d8797 cxl: Allow initialization on timebase sync failures
266eab8f32cc43b688c2e9aaab63c2565a3998c2 cxl: Check periodically the coherent platform function's state
c0c050c58d840994ba842ad1c338a98e7c12b764 bnxt_en: New Broadcom ethernet driver.
379a80a1d048dcacfc2011d5d32e16d5c804b9f4 bnxt_en: Fix compile errors when CONFIG_BNXT_SRIOV is not set.
d1611c3aba11ffa281bdd027aace52f5a370b8c5 bnxt_en: Fix compile warnings when CONFIG_INET is not set.
c5d7774db350e77f2506e36e1797c958d1b118c8 bnxt_en: Change sp events definitions to represent bit position.
614388ce39f3d61ad7f95db65f409d35d5943616 bnxt_en: Determine tcp/ipv6 RSS hash type correctly.
11809490ac17810cff90c12e9f2f3e0303a72121 bnxt_en: map CAG_REG_LEGACY_INT_STATUS_MASK to GRC window #4
84e86b98f6515aaeaac053b234be158b25457184 bnxt_en: Fix comparison of u16 sw_id against negative value.
4bb6cdce386d620d10d2588ea5bf4093a3b21ab9 bnxt_en: More robust SRIOV cleanup sequence.
1fc2cfd03bbf8f1f8b6b90f0858faba8bd6631c4 bnxt_en: Fixed incorrect implementation of ndo_set_mac_address
bdd4347b33f480187b44699cf1caac9400496d6d bnxt_en: enforce proper storing of MAC address
b664f008b0d885db1d5617ed1c51d29a8c04da93 bnxt_en: Setup uc_list mac filters after resetting the chip.
de68f5de56512a2ff5d5810ef4d54c53470c3c45 bnxt_en: Fix bitmap declaration to work on 32-bit arches.
caefe526d7b5af11d9b5977b2862eb144fa45537 bnxt_en: Change bp->state to bitmap.
4cebdcec0933bf39c0ab42e8ce8c9d72f803fbe9 bnxt_en: Don't cancel sp_task from bnxt_close_nic().
028de140ffdf481d4948de663b33dae78e1e9cc8 bnxt_en: Implement missing tx timeout reset logic.
be58a0da1672391b246880450e990fe36d7ba24d bnxt_en: support hwrm_func_drv_unrgtr command
edd0c2cc2b73ff21f356d6cbd3b5bf83e692ea9d bnxt_en: Optimize ring alloc and ring free functions.
2731d70fa9cbb62e45743171bf979784fb36778c bnxt_en: Add support for upgrading APE/NC-SI firmware via Ethtool FLASHDEV
665e350ddbfde88c5c18142dfd7b8c64556bc964 bnxt_en: Increment checksum error counter only if NETIF_F_RXCSUM is set.
45019a180358c3cf290c3f3dc953c44f978d5527 bnxt_en: Allocate rx_cpu_rmap only if Accelerated RFS is enabled.
27e241896f2e21c96200df711659117923dec8a2 bnxt_en: Don't treat single segment rx frames as GRO frames.
2bcfa6f6e7cf867e4aa623f84caea4bc413d38c9 bnxt_en: Check hardware resources before enabling NTUPLE.
92268c328a8dae4635b3deaca52a8ed329642219 bnxt_en: Cleanup bnxt_hwrm_func_cfg().
4a21b49b34c01137a67bf0fe185c5d0fff747e4d bnxt_en: Improve VF resource accounting.
b72d4a68c443e29cb59e15a1a9b2c2f4bf802831 bnxt_en: Keep track of the ring group resource.
c193554ecd050e63753aa0ec99c188800843bca2 bnxt_en: Update to Firmware interface spec 1.0.0.
fbc9a5237a767cada312cb07877d0992b1e34242 bnxt_en: Add BCM57301 & BCM57402 devices.
9f5545905fbcc069f6fa8030b866e967ec6a5c73 bnxt_en: Refactor bnxt_dbg_dump_states().
b6ab4b01f53b5f9e17dbd4f91c95fa5049fa2101 bnxt_en: Separate bnxt_{rx|tx}_ring_info structs from bnxt_napi struct.
3b2b7d9db74adb95aa0bd029298a741333eb847e bnxt_en: Check for NULL rx or tx ring.
b81a90d3028af92da61a61e2efd231a585180044 bnxt_en: Re-structure ring indexing and mapping.
6e6c5a57fbe1c77c2c55e266f87a83429adc3de7 bnxt_en: Modify bnxt_get_max_rings() to support shared or non shared rings.
01657bcd078b924e4599a83acd402ea6f85a1e45 bnxt_en: Modify init sequence to support shared or non shared rings.
068c9ec62906b626a30526638fd36189b80b6464 bnxt_en: Modify ethtool -l|-L to support combined or rx/tx rings.
d79979a103f7820d3107cdc04096e87b37f90008 bnxt_en: Zero pad firmware messages to 128 bytes.
d2d6318cb996f39112ba24ff23abe67578a611bc bnxt_en: Reset embedded processor after applying firmware upgrade
415b6f19e87e350b13585591859d4fdf50772229 net: bnxt: always return values from _bnxt_get_max_rings
74608fc98d2856fa7201a498b61c9dd9455b504a bnxt_en: Ring free response from close path should use completion ring
8a4d4c8dde7a4119bce3fd8287dca193ff6356da bnxt_en: Exclude rx_drop_pkts hw counter from the stack's rx_dropped counter.
d612a579771385e08f7b665063b36bfa52c03ea3 bnxt_en: Fix crash in bnxt_free_tx_skbs() during tx timeout.
b763499ee16b74707af0fb26ab0a26bd9719870b bnxt_en: Fix ethtool autoneg logic.
0d8abf020199b0cbc5fb3aa309d36f0ac1b91631 bnxt_en: Cleanup and Fix flow control setup logic
1c49c421f3ec446f1e0eda6d965a6cb23214d7a1 bnxt_en: Remove 20G support and advertise only 40GbaseCR4.
4419dbe6a0f031ddb2df4cd993805546a566d20e bnxt_en: Fix implementation of tx push operation.
51dd55b5688e81f9f13fb520a59900d4c3959a9a bnxt_en: Reduce default ring sizes.
035a1539ab63bfdb284bdf6e8459e35897c60564 bnxt_en: Poll link at the end of __bnxt_open_nic().
de73018fb5474b33dc4f6d6b8d889e40232e325b bnxt_en: Remove unnecessary call to update PHY settings.
ba41d46fe03223279054e58d570069fdc62fb768 bnxt_en: Failure to update PHY is not fatal condition.
fbb0fa8b48892a3db8f5b89fb591c741fbd2fe7a bnxt_en: Fix zero padding of tx push data.
3874d6a8b61966a77aa743b4160ba96bf3081ce5 bnxt_en: Improve bnxt_vf_update_mac().
19241368443ff976b1924019d29eef8e972158e7 bnxt_en: Send PF driver unload notification to all VFs.
dfb5b894f87cb78168e04283e8d15626dc3e6d5a bnxt_en: Store irq coalescing timer values in micro seconds.
877edb347323b669c5c9511cc9e097e1192dd31b bnxt_en: Refactor bnxt_hwrm_set_coal()
dfc9c94a83909f4be80e5d0c67e79793830aa312 bnxt_en: Add coalescing support for tx rings.
ff4fe81d2d49e3cad3bb45c8c5b9a49ca90ee10b bnxt_en: Use firmware provided message timeout value.
a8643e1604c1f39a675c6b10a7f84260fa13590c bnxt_en: Fix dmesg log firmware error messages.
3ebf6f0a09a284adef62111c7cfca29f56d6cce7 bnxt_en: Add installed-package firmware version reporting via Ethtool GDRVINFO
fbfbc4851dd709cf1327afc283f9cca00235dcb3 bnxt_en: Refactor _hwrm_send_message().
90e209213096110bce06ef580e1c73702fe4a288 bnxt_en: Add hwrm_send_message_silent().
27c4d578600c401c119c012a90920805fab05cc9 bnxt_en: Refactor bnxt_fw_to_ethtool_advertised_spds().
3277360eb29c6e482391975717d983060ecbd28d bnxt_en: Add reporting of link partner advertisement.
4b32cacca28fe8b29bf266feff19b6fc2180402e bnxt_en: Use common function to get ethtool supported flags.
f1a082a6f79fd5f06b27ef05a5ba7ec8d6e83b4c bnxt_en: Extend autoneg to all speeds.
3bdf56c47dfcd819ab1e73644c2eb9c72c08f29e bnxt_en: Add port statistics support.
9947f83fb79ca501f5ab24c370211bfb78b6b364 bnxt_en: Include some hardware port statistics in ndo_get_stats64().
8ddc9aaa725a9337fc7bbe95fe1d1499769fb9b2 bnxt_en: Include hardware port statistics in ethtool -S.
6316ea6db93d875df333e7ab205bf1aa3b3616d7 bnxt_en: Enable AER support.
33e52d888d0c84a0c66f13357a53113fd9710bd6 bnxt_en: Initialize CP doorbell value before ring allocation
e6ef26991a46e20879bebb8298080eb7ceed4ae8 bnxt_en: Implement proper firmware message padding.
49b5c7a125201bb42c25831fda3a50305c29ef50 bnxt_en: Fix typo in bnxt_hwrm_set_pause_common().
3c02d1bb32347d0674714ee170772d771d513469 bnxt_en: Fix ethtool -a reporting.
11f15ed394782dd018d60a0bb550616a8571b43c bnxt_en: Update to Firmware 1.2.2 spec.
c9ee9516c161da2d072e035907aa35a35dfa68a8 bnxt_en: Improve flow control autoneg with Firmware 1.2.1 interface.
170ce01301a2a1a87808765531d938fa0b023641 bnxt_en: Add basic EEE support.
939f7f0ca442187db2a4ec7a40979c711b0c939e bnxt_en: Add EEE setup code.
72b34f04e0b00956dd679ae18bf2163669df8b56 bnxt_en: Add get_eee() and set_eee() ethtool support.
25be862370031056989ee76e3c48c3ac8ff67fd4 bnxt_en: Set async event bits when registering with the firmware.
4bb13abf208cb484a9b9d1af9233b0ef850c2fe7 bnxt_en: Add unsupported SFP+ module warnings.
9d9cee08fc9f5c4df84ef314158fd19c013bcec6 bnxt_en: Check for valid forced speed during ethtool -s.
29c262fed4067c52977ba279cf71520f9991a050 bnxt_en: Improve ethtool .get_settings().
03efbec03198a0f505c2a6c93268c3c5df321c90 bnxt_en: Disallow forced speed for 10GBaseT devices.
33f7d55f07ab964055d73d38774346f8d4821f00 bnxt_en: Shutdown link when device is closed.
84c33dd342ad596a271a61da0119bf34e80bb1c5 bnxt_en: Call firmware to approve VF MAC address change.
8cbde1175e3c8565edbb777cd09cbfdb93c78397 bnxt_en: Add async event handling for speed config changes.
1fa72e29e14d97fbda15437c648d7cc4eb00bff8 bnxt_en: Don't fallback to INTA on VF.
2839f28bd5bf8fd2ab4a1ea3a5589c8f94364cbb bnxt_en: Limit RX BD pages to be no bigger than 32K.
89d0a06c516339c0a2b3d02677f5d6310b3319fb bnxt_en: Divide a page into 32K buffers for the aggregation ring if necessary.
67a95e2022c7f0405408fb1f910283785ece354a bnxt_en: Need memory barrier when processing the completion ring.
7d2837dd7a3239e8201d9bef75c1a708e451e123 bnxt_en: Setup multicast properly after resetting device.
376a5b8647d6c56cb8f104d7ad0390b4f4057e70 bnxt_en: Add workaround to detect bad opaque in rx completion (part 1)
fa7e28127a5ad9fd55ac9c7707d8c8b835113a7c bnxt_en: Add workaround to detect bad opaque in rx completion (part 2)
18d6e4e2d800cbd44a7d7d215a49f99c6508e4a5 bnxt_en: Fix invalid max channel parameter in ethtool -l.
42ee18fe4ca2a12b8370bb1c53fa6b9f9300c70c bnxt_en: Add Support for ETHTOOL_GMODULEINFO and ETHTOOL_GMODULEEEPRO
90c4f788f6c08aaa52edbb47a817403376523375 bnxt_en: Report PCIe link speed and width during driver load
d0a42d6fc8eaf1b64f62b0bbc3b829b756eacf57 bnxt_en: Reduce maximum ring pages if page size is 64K.
a11fa2be6d1564375dc57530680268ad569c2632 bnxt_en: Improve the delay logic for firmware response.
8578d6c19a308dea3daf3d03acdf18724ec05590 bnxt_en: Fix length value in dmesg log firmware error message.
10289bec0072b13f629a654d94faf1dadd44f335 bnxt_en: Simplify and improve unsupported SFP+ module reporting.
5049e33b559a44e9f216d86c58c7c7fce6f5df2f bnxt_en: Add BCM57314 device ID.
b67daab033293b3882ba4dc926ffb084d70044e0 bnxt_en: Use dma_rmb() instead of rmb().
2a47fa45d4dfbc54659d28de311a1f764b296a3c ixgbe: enable l2 forwarding acceleration for macvlans
3f207800a998fb1b0b36df251e826ee7682294f7 ixgbe: add VXLAN offload support for X550 devices
f467bc06022d4d37de459f9498ff4fbc7e9b0fca ixgbe: Add support for UDP-encapsulated tx checksum offload
67359c3c9fc8e9fbed991bbe0cfeda55c7e0a64c ixgbe: Add support for VXLAN RX offloads
21dd560162d4bbf98cc81b303bfa19740ae5b964 ixgbe: Advance version to 4.2.1
a9763f3cb54c7f1c6a47962c814935654476d09f ixgbe: Update PTP to support X550EM_x devices
36a92d7190e68e9387347695fe4625eb2c9e7e1c ixgbe: Handle extended IPv6 headers in Tx path
cf78959c0d7afbde31498afc4212294c28e2c278 ixgbe: fix inconsistent clearing of the multicast table
16369564915a9777217244678ee6160f8f1acac7 ixgbe: Add support for VLAN promiscuous with SR-IOV
fb8ad4a592c627783dc18cc147c7f4de55cf318d ixgbe: Clean up redundancy in hw_enc_features
d469251bfd06d15289c9dd5dd60b8ebf65785b03 ixgbe: Correct handling of any outer UDP checksum setting
e19dcdeb3527e996a96ea49d86cccce768b1079a ixgbe: Make ATR recognize IPv6 extended headers
9f12df906cd807a05d71aa53a951532d1dd3b888 ixgbe: Store VXLAN port number in network order
e2873d43f9c607e9d855b8ae120d5990ba1722df ixgbe: Fix ATR so that it correctly handles IPv6 extension headers
6e2a60b57a83ea134c06c5226aaff20e7e9ce221 ixgbe: make __ixgbe_setup_tc static
37689010da28c6dfd9f59e60d7f42c47b775171c ixgbe: Make all unchanging ops structures const
49763de0425560eed50a186428010189eae69372 ixgbe: Add support for generic Tx checksums
0c5a616650a08b766e529511348274c1914ef4bf ixgbe: Add support for toggling VLAN filtering flag via ethtool
49425dfc74512bef9cf15eafb5de0fc98f024e20 ixgbe: Add support for x550em_a 10G MAC type
d31afc8f5ca11249a3b15dafa5972fc76e4099cf ixgbe: Use new methods for PHY access
2d40cd1720cb6eb4406b80866c08d97b92595dfe ixgbe: Add support for SFPs with retimer
200157c2e31a5931d0d825e9fddb44d10888e6b3 ixgbe: Add support for SGMII backplane interface
f572b2c4c86dcebe6b8684cbab03d9b2ea0d2ad6 ixgbe: Add KR backplane support for x550em_a
b1f99a787e8239da3ea859709f5fb60b3fd02c13 ixgbe: protect vxlan_get_rx_port in ixgbe_service_task with rtnl_lock
4695886c644e48a02ca9d4c146a7ec4de8f2d2d8 ixgbe: fix default mac->ops.setup_link for X550EM
a0254a70b4f91396ad04b1225dd7c10a680d38ff ixgbe: Use correct FC setup function for x550em_a
b4f47a483045a6e6b31be8ade76cdfef7091f18b ixgbe: use BIT() macro
d4f90d9dca26efef7a1112a8f4258c90b73bb37f ixgbe: use msleep for long delays
8829009d2fd5683ed29418420b4883cf4782c85c ixgbe: Disable DCB and FCoE for X550EM_x and x550em_a
4d0e965732db6f7cce78e6b8f5d3073249004c3a drivers: replace dev->trans_start accesses with dev_trans_start
5d170139eb10ae12e1bd076245c42b35453d8324 vga_switcheroo: Constify vga_switcheroo_handler
c62d25556be6c965dc14288e796a576e8e39a7e9 mm, fs: introduce mapping_gfp_constraint()
7c65bbc7dcface00b295bbd18bce82fe1db3d633 tracing: Add trace_<tracepoint>_enabled() function
1f7717552ef1306be3b7ed28c66c6eff550e3a23 drm/i915: Fix race condition in intel_dp_destroy_mst_connector()
7779c5e23c5132c22a219f1f5554ef81dd15ee91 drm/dp: move hw_mutex up the call stack
e1083ff35157185b01bc0a99cb19b7cbae0fc9fa drm/dp_helper: Always wait before retrying native aux transactions
82922da39190199260a726d7081a8ea4873e5fd6 drm/dp_helper: Retry aux transactions on all errors
9f085ebb1a50f2728946028548c08860a9005c27 drm/i915: Get rid of intel_dp_dpcd_read_wake()
a16b7658f4e0d4aec9bc3e75a5f0cc3f7a3a0422 drm/i915: Call intel_dp_mst_resume() before resuming displays
deba0a2af9592b2022a0bce7b085a318b53ce1db drm/dp/mst: Validate port in drm_dp_payload_send_msg()
5a8f97ea04c98201deeb973c3f711c3c156115e9 Revert "drm/i915: start adding dp mst audio"
61ada528dea028331e99e8ceaed87c683ad25de2 sched/wait: Provide infrastructure to deal with nested blocking
cb6538e740d7543cd989128625cf8cac4b471e0a sched/wait: Fix a kthread race with wait_woken()
662372e42e46d9bbfcb83e1cce81f6b33cebaddd of: restructure for_each macros to fix compile warnings
98a18b6ffc79baa69f4a0d1bae58faf2a8aef4c8 netdevice: add ieee802154_ptr to net_device
599018a71013386119c057a64183e49240c8b4e6 6lowpan: add helper to get 6lowpan namespace
7e65eac8e36f3f4e2553e83249e3d9bdf055456d 6lowpan: nuke net_ieee802154_lowpan() accessor when 6lowpan is disabled
44fc0e5eec00db5fba748803c95920098089c4cc sched/wait: Introduce wait_on_bit_timeout()
8790c71a18e5d2d93532ae250bcf5eddbba729cd mm/mempolicy.c: fix mempolicy printing in numa_maps
405e1d834807e51b2ebd3dea81cb51e53fb61504 ftrace: Synchronize setting function_trace_op with ftrace_trace_function
a4c35ed241129dd142be4cadb1e5a474a56d5464 ftrace: Fix synchronization location disabling and freeing ftrace_ops
23a8e8441a0a74dd612edf81dc89d1600bc0a3d1 ftrace: Have function graph only trace based on global_ops filters
04005f6011e3b504cd4d791d9769f7cb9a3b2eae timekeeping: Fix CLOCK_TAI timer/nanosleep delays
ecc736fc3c71c411a9d201d8588c9e7e049e5d8c memcg: fix endless loop caused by mem_cgroup_iter
45ab2813d40d88fc575e753c38478de242d03f88 tracing: Do not add event files for modules that fail tracepoints
4fb1a86fb5e4209a7d4426d4e586c58e9edc74ac memcg: reparent charges of children before processing parent
26cdfedf6a902345f8604ea8e0b7dd2566b37a46 rcu: Reject memory-order-induced stall-warning false positives
6193c76aba8ec3cc5f083c35efbab9ed924125f6 rcu: Kick CPU halfway to RCU CPU stall warning
4fc5b75537d4f56577ad00355b4cd09627deb3c3 rcu: Protect uses of jiffies_stall field with ACCESS_ONCE()
6ccd2ecd422644277b7d8b37222e3af3f43ea9ae rcu: Improve diagnostics for spurious RCU CPU stall warnings
d8537548c924db3c44afde7646b6e220c7beb79d drivers: avoid format strings in names passed to alloc_workqueue()
f0af9593372abfde34460aa1250e670cc535a7d8 PCI: Add pci_add_dma_alias() to abstract implementation
48c830809ce6e143781172c03a9794cb66802b31 PCI: Move informational printk to pci_add_dma_alias()
338c3149a221527e202ee26b1e35f76c965bb6c0 PCI: Add support for multiple DMA aliases
b1a928cdb477037fb7c10fbf94c47f65f2bcce77 PCI: Add DMA alias quirk for mic_x200_dma
e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3 IB/security: Restrict use of the write() interface
b9f4cf7531ac7a0c99db9e08d0a83cb559251bea team: Don't segment multiple tagged packets on team device
3268e5cb494d8778a5a67a9fa2b1bdb0243b77ad team: Advertise tunneling offload features
3bfe049807c240344b407e3cfb74544927359817 netfilter: nfnetlink_{log,queue}: Register pernet in first place
639e077b43d9c54ffb1e1b54a2de54597ceae1d8 netfilter: nfnetlink_queue: Unregister pernet subsys in case of init failure
93a714d6b53d87872e552dbb273544bdeaaf6e12 multicast: Extend ip address command to enable multicast group join/leave on
f6988cb63a4e698d8a62a1d085d263d1fcc351ea team: don't call netdev_change_features under team->lock
06931e62246844c73fba24d7aeb4a5dc897a2739 sched/topology: Rename topology_thread_cpumask() to topology_sibling_cpumask()
23a1c2579b575b228a6c685dfe93f296d3d5e0e1 KVM: Recover IRTE to remapped mode if the interrupt is not single-destination
520040146a0af36f7875ec06b58f44b19a0edf53 KVM: x86: Use vector-hashing to deliver lowest-priority interrupts
b6ce978067e75187d3c30f59b60d390a29374fab KVM/VMX: Add host irq information in trace event when updating IRTE for posted interrupts
de89e854bcc71ebaf30d415a0c015d1cb6c68856 ibmvnic: Fix ibmvnic_capability struct
ad7775dc7b8b0b5585ff114b04d5ad50737c423e ibmvnic: map L2/L3/L4 header descriptors to firmware
9be02cdfa601776f9e65013d9f1b949d5024f457 ibmvnic: enable RX checksum offload
498cd8e49509c761b39dab26be7f739d95940e16 ibmvnic: Enable use of multiple tx/rx scrqs
6e033700887bf29d4e59f6978a02d989787be620 igb: Add support for generic Tx checksums
7f0ba845607364c76009e396a31651fa3a24bd1c igb: Add support for bulk Tx cleanup & cleanup boolean logic
9ad3d6f7eb300d464bfce2c80e7b1594f5e5eff9 ixgbevf: minor cleanups for ixgbevf_set_itr()
bba3a87e982ad5992e776ca1fc409326915d6b44 firmware: Introduce request_firmware_direct()
ee6825c80e870fff1a370c718ec77022ade0889b x86/topology: Fix AMD core count
63d1e995be455ae9196270eb4b789de21afd42ed x86/topology: Fix Intel HT disable
3e8db2246b434c6b18a6a9f09904038bddcf76c7 x86/topology: Use total_cpus not nr_cpu_ids for logical packages
e22cf8ca6f75a6c4fccf2d6ee818bdb1205f32e6 s390/cpumf: rework program parameter setting to detect guest samples
b1685ab9bd3ae14830acac8ffdc7aafc0fb416e3 s390/cpumf: Improve guest detection heuristics
7a76aa95f6f6682db5629449d763251d1c9f8c4e s390/cpumf: Fix lpp detection
3446c13b268af86391d06611327006b059b8bab1 s390/mm: four page table levels vs. fork
2800b8e7d9dfca1fd9d044dcf7a046b5de5a7239 NVMe: Allocate queues only for online cpus
afdc34a3d3b823a12a93b822ee1efb566f884032 printk: Add per_cpu printk func to allow printk to be diverted
a9edc88093287183ac934be44f295f183b2c62dd x86/nmi: Perform a safe NMI stack trace on all CPUs
db0865543739b3edb2ee9bf340380cf4986b58ff x86/nmi: Fix use of unallocated cpumask_var_t
40f26f3168bf7a4da490db308dc0bd9f9923f41f drivers:hv: Allow for MMIO claims that span ACPI _CRS records
4daace0d8ce851f8f8f91563c835e3000c954d5e PCI: hv: Add paravirtual PCI front-end for Microsoft Hyper-V VMs
97fb77dc87582300fa3c141b63699f853576cab1 drivers:hv: Make a function to free mmio regions through vmbus
696ca5e82c057a272381ae6064d59eb97a578397 drivers:hv: Use new vmbus_mmio_free() from client drivers.
be000f93e5d71f5d43dd722f8eb110b069f9d8a2 drivers:hv: Track allocations of children of hv_vmbus in private resource tree
ea37a6b8a0b9fbe3f85b4b9da3206c28f1de6f8e drivers:hv: Separate out frame buffer logic when picking MMIO range
deb22e5c84c884a129d801cf3bfde7411536998d PCI: hv: Report resources release after stopping the bus
bdd74440d9e887b1fa648eefa17421def5f5243c PCI: hv: Add explicit barriers to config space access
84bf9cefb162b197da20a0f4388929f4b5ba5db4 hv_netvsc: Implement support for VF drivers on Hyper-V
15cfd40771e18a4e9b788c64c9db2606f958b93d hv_netvsc: Fix the list processing for network change event
f580aec4bfd7babe51f086e599400027def08ed8 hv_netvsc: move start_remove flag to net_device_context
1bdcec8a5f05445752a0639edd603ac09ae6c553 hv_netvsc: use start_remove flag to protect netvsc_link_change()
3d541ac5a92af708d0085925d136f875f3a58d57 hv_netvsc: untangle the pointer mess
0a1275ca5128b84ffffc149960969ed351ae00eb hv_netvsc: get rid of struct net_device pointer in struct netvsc_device
6da7225f5a95ba68e3c6225c4051182bef30eed4 hv_netvsc: synchronize netvsc_change_mtu()/netvsc_set_channels() with netvsc_remove()
88098834827025cc04c15f1b4b0d9bbef3cf55af hv_netvsc: set nvdev link after populating chn_table
80d7ef66142b0b4358223790e7a4cb153b48a05c mm: rename __do_fault() -> do_fault()
7eae74af32d2048d27c38bad1c767a8f3ce4ddb6 mm: do_fault(): extract to call vm_ops->do_fault() to separate function
e655fb29074a7aa471bfc9f51a0139c6f636a649 mm: introduce do_read_fault()
ec47c3b9543054f6f255d027100fa8214e637003 mm: introduce do_cow_fault()
f0c6d4d295e4ea9a47375304420baa38ca279542 mm: introduce do_shared_fault() and drop do_fault()
fb09a46425823604bf337d2c9999756f9b753cf1 mm: consolidate code to call vm_ops->page_mkwrite()
3bb977946998ae0d756279c5a108435d04636e2b mm: consolidate code to setup pte
1b938c0827478df268d2336469ec48d400a2eb3e fs/buffer.c: remove block_write_full_page_endio()
57d998456ae8680ed446aa1993f45f4d8a9a5973 fs/mpage.c: factor page_endio() out of mpage_end_io()
cb389b9c0e00c30c9daf20287f7d91e2466edbb1 dax: drop size parameter to ->direct_access()
283307c7607de2a06d3bfae4cfbf5a566d457090 mm: fix XIP fault vs truncate race
2e4cdab0584fa884e0a81c4f45b93ce875c9fcaa mm: allow page fault handlers to perform the COW
fbbbad4bc2101e452b24e6e65d3d5e11314a0b5f vfs,ext2: introduce IS_DAX(inode)
d475c6346a38aef3058eba96867bfa726a3cc940 dax,ext2: replace XIP read and write with DAX I/O
289c6aedac981533331428bc933fff21ae332c9e dax,ext2: replace ext2_clear_xip_target with dax_clear_blocks
f7ca90b160307d63aaedab8bd451c24a182db20f dax,ext2: replace the XIP page fault handler with the DAX page fault handler
4c0ccfef2e9f7418a6eb0bf07a2fc8f216365b18 dax,ext2: replace xip_truncate_page with dax_truncate_page
95ec8daba310b44302d2977dd54b16886527b681 dax: replace XIP documentation with DAX documentation
e748dcd095ddee50e7a7deda2e26247715318a2e vfs: remove get_xip_mem
0de4830fd49f60d04ba37e8b32f95100f3953c39 ext2: remove ext2_xip_verify_sb()
ed87e9202035c8564472f5d84e7d5e10f1014029 ext2: remove ext2_use_xip
07642381d5ad800d021bb80842bfebb100b12fc2 ext2: remove xip.c and xip.h
6cd176a51e52e5218b1aa97e1ec916bac25a9b7e vfs,ext2: remove CONFIG_EXT2_FS_XIP and rename CONFIG_FS_XIP to CONFIG_FS_DAX
97443aa809a142b1e6db2ccfb046c3a962907204 ext2: remove ext2_aops_xip
9c3ce9ec58716733232b97771b10f31901caf62e ext2: get rid of most mentions of XIP in ext2
25726bc15731d42112b579cf73f30edbc43d3973 dax: add dax_zero_page_range
923ae0ff9250430133b3310fe62c47538cf1cbc1 ext4: add DAX functionality
d92576f1167cacf7844e5993f343eed4a6d8a147 dax: does not work correctly with virtual aliasing caches
4e047f897771222215ee572e1c0b25e9417376eb mm: refactor do_wp_page, extract the reuse case
28766805275c12c2298883cece3f98505ac764b4 mm: refactor do_wp_page - rewrite the unlock flow
2f38ab2c3c7fef04dca0313fd89d91f142ca9281 mm: refactor do_wp_page, extract the page copy flow
93e478d4c36ecaf15b942988b8272102d661d44e mm: refactor do_wp_page handling of shared vma into a function
dd9061846a3ba01b0fa45423aaa087e4a69187fa mm: new pfn_mkwrite same as page_mkwrite for VM_PFNMAP
0e3b210ce1722168227cb3bc7746256d0c0afece dax: use pfn_mkwrite to update c/mtime + freeze protection
be64f884bed729b5d127db6a737155a4e514d286 dax: unify ext2/4_{dax,}_file_operations
0f616be120c632c818faaea9adcb8f05a7a8601f mm: change __get_vm_area_node() to use fls_long()
0ddab1d2ed664c85c95488eef569786a84aedf37 lib/ioremap.c: add huge I/O map capability interfaces
6b6378355b925050eb6fa966742d8c2d65ff0d83 x86, mm: support huge KVA mappings on x86
04f8e38497b02cd5596ff9af278e62cd057fff68 ACPICA: ACPI 6.0: Add support for NFIT table.
6c0d14680e247849cdb870c995a332781bdb93f2 ACPICA: acpihelp: Update for new NFIT table GUIDs.
f3b6ced236259a87829b829e8e542ff53bfb9a4f ACPICA: Fix for ill-formed GUID strings for NFIT tables.
3d3ca416d9b0784cfcf244eeeba1bcaf421bc64d x86/mm/mtrr: Use symbolic define as a retval for disabled MTRRs
0cc705f56e400764a171055f727d28a48260bb4b x86/mm/mtrr: Clean up mtrr_type_lookup()
b73522e0c1be58d3c69b124985b8ccf94e3677f7 x86/mm/mtrr: Enhance MTRR checks in kernel mapping helpers
ad5fb870c486d932a1749d7853dd70f436a7e03f e820, efi: add ACPI 6.0 persistent memory types
e842f2903908934187af7232fb5b21da527d1757 dax: don't abuse get_block mapping for endio callbacks
ce5c5d554dc47a4fb4360c84b72231fea081e7a0 dax: expose __dax_fault for filesystems with locking constraints
6b698edeeef00c127d73501b386590299f01327a xfs: add DAX file operations support
6e1ba0bcb84b3f97616feb07c27f974509ba57be xfs: add DAX IO path support
cbe4dab119f211ff6642d617f541087894e99e4f xfs: add initial DAX support
b94d5230d06eb930be82e67fb1a9a58271e78297 libnvdimm, nfit: initial libnvdimm infrastructure and NFIT support
45def22c1fab85764646746ce38d45b2f3281fa5 libnvdimm: control character device and nvdimm_bus sysfs attributes
e6dfb2de47768efe8cc37c9a1863d2aff81440fb libnvdimm, nfit: dimm/memory-devices
62232e45f4a265abb43f0acf16e58f5d0b6e1ec9 libnvdimm: control (ioctl) messages for nvdimm_bus and nvdimm devices
4d88a97aa9e8cfa6460aab119c5da60ad2267423 libnvdimm, nvdimm: dimm driver and base libnvdimm device-driver infrastructure
1f7df6f88b9245a7f2d0f8ecbc97dc88c8d0d8e1 libnvdimm, nfit: regions (block-data-window, persistent memory, volatile memory)
3d88002e4a7bd40f355550284c6cd140e6fe29dc libnvdimm: support for legacy (non-aliasing) nvdimms
18da2c9ee41a036bf470dbad73c18a815725d36e libnvdimm, pmem: move pmem to drivers/nvdimm/
eaf961536e1622ad21247ac8d44acd48ba65566e libnvdimm, nfit: add interleave-set state-tracking infrastructure
4a826c83db4edc040da3a66dbefd53f0cfcf457d libnvdimm: namespace indices: read and validate
bf9bccc14c05dae8caba29df6187c731710f5380 libnvdimm: pmem label sets and namespace instantiation.
1b40e09a1232de537b193fa1b6b3ef16d3a1e397 libnvdimm: blk labels and namespace instantiation
f524bf271a5cf12a44253194abcf8b6688ff5b9d libnvdimm: write pmem label set
0ba1c634892b3590779803a701bcb82e8c32cc7a libnvdimm: write blk label set
8c2f7e8658df1d3b7cbfa62706941d14c715823a libnvdimm: infrastructure for btt devices
5212e11fde4d40fa627668b4f2222d20db488f71 nd_btt: atomic sector updates
047fc8a1f9a6330eacc80374dff087e20dc2304b libnvdimm, nfit, nd_blk: driver for BLK-mode access persistent memory
6bc756193ff61bf5e7b3cfedfbb0873bf40f8055 tools/testing/nvdimm: libnvdimm unit test infrastructure
bc30196f715ed3a94d050ef8bc465e567a6050be libnvdimm: Non-Volatile Devices
41cd8b70c37ace40077c8d6ec0b74b983178c192 libnvdimm, btt: add support for blk integrity
fcae695737fca0849c18db814d9d8de05c0fd2a2 libnvdimm, blk: add support for blk integrity
f0dc089ce217e7b98e0d2077c548ff08129e7911 libnvdimm: enable iostat
581388209405902b56d055f644b4dd124a206112 libnvdimm, nfit: handle unarmed dimms, mark namespaces read-only
99759869faf15471cfce251bc138848d8af7d162 acpi: Add acpi_map_pxm_to_online_node()
41d7a6d637e1440f5410cb43c25a3c41255540c5 libnvdimm: Set numa_node to NVDIMM devices
74ae66c3b14ffa94c8d2dea201cdf8e6203d13d5 libnvdimm: Add sysfs numa_node to NVDIMM devices
61031952f4c89dba1065f7a5b9419badb112554c arch, x86: pmem api for ensuring durability of persistent memory updates
af834d457d9ed69e14836b63d0da198fdd2ec706 libnvdimm: smatch cleanups in __nd_ioctl
daa1dee405d7d3d3e816b84a692e838a5647a02a nvdimm: Fix return value of nvdimm_bus_init() if class_create() fails
193ccca43850d2355e7690a93ab9d7d78d38f905 nfit: fix smatch "use after null check" report
872eb127e3a6cddcfca1410bb808d9b9bc773dc1 dax: Use copy_from_iter_nocache
bbab37ddc20bae4709bca8745c128c4f46fe63c5 block: Add support for DAX reads/writes to block devices
b864bc17f1c326783f2388057e15d3e153125ab9 pmem: add maintainer for include/linux/pmem.h
f7ec83684af020c961d7fab801f8e3ef7ce5de33 tools/testing/nvdimm: fix return code for unimplemented commands
9d27a87ec9e1317d368b1e5e3f4808078baa8c4c tools/testing/nvdimm: add mock acpi_nfit_flush_address entries to nfit_test
c2ad29540cb913bd9e526fae77c35c7fb45f24a3 nfit: update block I/O path to use PMEM API
f0f2c072cf530d5b8890be5051cc8b36b0c54cce nfit: add support for NVDIMM "latch" flag
8ca243536d21ae2d08f61b1c5af4ac3d4bb697e4 libnvdimm: fix namespace seed creation
b2442c5a7fe92cca08437070c8a45a7aa0d1703e xfs: call dax_fault on read page faults for DAX
de4a196c02a2a2631b516d90da6e8d052ccb07e8 nfit, nd_blk: BLK status register is only 32 bits
402bae597ec68b84498432f5a0069f28bfb807d6 nfit: Clarify memory device state flags strings
e94f5a2285fc94202a9efb2c687481f29b64132c dax: fix O_DIRECT I/O to the last block of a blockdev
c2227a39a078473115910512aa0f8d53bd915e60 nfsd: Drop BUG_ON and ignore SECLABEL on absent filesystem
b81171cb6869111dbaf9fb642f4434514c21d696 DLM: Save and restore socket callbacks properly
525d27b23555419e0e7b73fb6e78d4d678cb4f32 VFS: Add owner-filesystem positive/negative dentry checks
2b0143b5c986be1ce8408b3aadc4709e0a94429d VFS: normal filesystems (and lustre): d_inode() annotations
5f7fbf733c9dd6b58d40fa394313a5949b696f84 Allow parsing vers=3.11 on cifs mount
aab1893d5fbeb7c931e97189f54a71ab0ecbf4c7 Add SMB3.11 mount option synonym for new dialect
02b1666544c08e245cb4e2253ed575f8128943d6 Add reflink copy over SMB3.11 with new FSCTL_DUPLICATE_EXTENTS
b3152e2c7aa9ad0c50085738d048fbf16d01d32d Add ioctl to set integrity
0de1f4c6f6c028249579d8d80fa0a4f6322b2227 Add way to query server fs info for smb3
a1c83681d52704c766d576bea2d7f2f99e8dde23 fs: Drop unlikely before IS_ERR(_OR_NULL)
f43a033d44c3f2f6b153c9c63fff0132f4314f24 Update cifs version number
ca9e7a1c85594f61d7ffb414071e6cae82eae23a Allow duplicate extents in SMB3 not just SMB3.1.1
b618f001a20e44f691dd0e2ffea651a40a651871 [SMB3] Enable checking for continuous availability and persistent handle support
592fafe644bf3a48b9e00e182a67d301493634fc Add resilienthandles mount parm
01b9b0b28626db4a47d7f48744d70abca9914ef1 cifs_dbg() outputs an uninitialized buffer in cifs_readdir()
192852be8b5fb14268c2133fe9ce5312e4745963 xfs: configurable error behavior via sysfs
ffd40ef697dfd3e06f44b1bb5fea93079de8c77d xfs: introduce metadata IO error class
df3093907ccc718459c54c99da29dd774af41186 xfs: add configurable error support to metadata buffers
ef6a50fbb1bba7951aa23adcfb40e99ca72dc51c xfs: introduce table-based init for error behaviors
a5ea70d25d76950e11690110b526374307d05d81 xfs: add configuration of error failure speed
e0a431b3a3cc3d0a4c38ccfca8c7320fde40efb6 xfs: add configuration handlers for specific errors
e6b3bb78962e65c4ad125598755cfbf2a8779e86 xfs: add "fail at unmount" error handling configuration
fb56dfef4e31f214cfbfa0eb8a1949591c20b118 md: Export and rename kick_rdev_from_array
25eafe1a813681849ad3fb9effdfdce3e1b4335a md: simplify get_bitmap_file now that "file" is zeroed.
3cb5edf45457948347b5ae8cc9650c000cef4391 md/raid5: switch to use conf->chunk_sectors in place of mddev->chunk_sectors where possible
34a6f80e1639b124f24b5fadc1d45d69417cbace md/raid5: use bio_list for the list of bios to return.
c3cce6cda162eb2b2960a85d9c8992f4f3be85d0 md/raid5: ensure device failure recorded before write request returns.
ebda780bce8d58ec0abab157397c9e099c41a05f raid5: update analysis state for failed stripe
2910ff17d154baa5eb50e362a91104e831eb2bb6 md: remove_and_add_spares() to activate specific rdev
c7bfced9a6716ff66c9d61f934bb60af08d4688c md: suspend i/o during runtime blk_integrity_unregister
bac624f3f86a8c7db395c7f85ccad6a504b9c4b4 MD: add a new disk role to present write journal device
3069aa8def32b0c2b83cd27d1c37ed30b47ce879 md: override md superblock recovery_offset for journal device
713cf5a63954bdc1cd4bed0a81e98cbd8fc5928c raid5: don't allow resize/reshape with cache(log) support
5c7e81c3de9eb3db01e16190a1da0899efee645b raid5: enable log for raid array with cache disk
bd18f6462f3d167a9b3ec27851c98f82694b2adf md: skip resync for raid array with journal
9efdca16e0182eca489a519f576019fd9c0c1b25 MD: fix info output for journal disk
a97b7896447a89749d9258fbb9d8c3faf48a7a4e MD: add new bit to indicate raid array with journal
f2076e7d0643d15b11db979acc7cffd2e8d69e77 MD: set journal disk ->raid_disk
77d84ff87e9d38072abcca665ca22cb1da41cb86 treewide: Fix typos in printk
cc57858831e3e9678291de730c4b4d2e52a19f59 md/raid10: fix data corruption and crash during resync
9b15603dbd98ad1003355ef6ac7d682c75df81c1 MD: change journal disk role to disk 0
f6b6ec5cfac306c1eea66f074050864efcb11851 raid5-cache: add journal hot add/remove support
e8deb6381051bf3ce9d817020e8ba972b405a070 raid5-cache: use a mempool for the metadata block
5036c3902054358ee293b8cecfea13342d8019e8 raid5: allow r5l_io_unit allocations to fail
a62ab49eb502a07814f9942770893118c6281223 md: set MD_HAS_JOURNAL in correct places
1501efadc524a0c99494b576923091589a52d2a4 md/raid: only permit hot-add of compatible integrity profiles
849674e4fb175e47b7504249f7367367b18fe6a1 MD: rename some functions
e3837e74a06dc38ab79529758a3667fbff2fdc17 tpm_tis: Refactor the interrupt setup
b8ba1e744445d65dad7dd61db909e7f2b89df35e tpm_tis: Tighten IRQ auto-probing
9005694e4043be76299916356723d5dc9c772ab0 ACPICA: Update definitions for the TCPA and TPM2 ACPI tables
413d4a6defe0467cd22d97bfc5c274f8e3220124 ACPICA: Update TPM2 ACPI table
55a889c2cb138f8f10164539c6d290a1cefaa863 tpm_crb: Use the common ACPI definition of struct acpi_tpm2
ef7b81dc78642e1a33c890acf3214d1e04c90a8f tpm_tis: Disable interrupt auto probing on a per-device basis
4d627e672bd0e8af4e734fef93e806499d1e1277 tpm_tis: Do not fall back to a hardcoded address for TPM2
51dd43dff74b0547ad844638f6910ca29c956819 tpm_tis: Use devm_ioremap_resource
00194826e6be333083ba9ddbd6e83fb423206f8a tpm_tis: Clean up the force=1 module parameter
1bd047be37d95bf65a219f4931215f71878ac060 tpm_crb: Use devm_ioremap_resource
30f9c8c9e2ea37473a51354e9e492580a40661ce tpm_crb/tis: fix: use dev_name() for /proc/iomem
14ddfbf488a0223b19abf7e4634e6e676a91a12d tpm_crb: drop struct resource res from struct crb_priv
422eac3f7deae34dbaffd08e03e27f37a5394a56 tpm_crb: fix mapping of the buffers
6d061f9f6136d477932088c24ce155d7dc785746 mm/page_ref: use page_ref helper instead of direct modification of _count
0139aa7b7fa12ceef095d99dc36606a5b10ab83a mm: rename _count, field of the struct page, to _refcount
c4f39bdaf40e2651f4fb3e6944e05166f1ab1d38 be2iscsi: Revert ownership to Emulex
53aefe2552e6efadb0e1a12c2c3adb12105a64f9 be2iscsi: Fix to handle misconfigured optics events
4570f1618ec045ade994237d3f4f5644181845cc be2iscsi: Add FW config validation
1094cf68e801cdde7b65dc91fb8e9276af736176 be2iscsi: Fix IOPOLL implementation
048084c26830f714e8eadef3f90ae793a4904545 be2iscsi: Fix to process 25G link speed info from FW
9c4f8b01731c4ccf369a34f40f5eb384548af46a be2iscsi: Fix async link event processing
1db1194f1f6ebb6fef0f5d82d5025e049ccb77a1 be2iscsi: Update the driver version
2e4e8f6574ab14937ca6aac9c9551876e744154d be2iscsi: Remove redundant MCC processing code
88840332a0f05833b2fea6c69584b5d20eb19ad8 be2iscsi: Rename MCC and BMBX processing functions
a264f5e80d56ae675e25f0e4158e12f4df5efb9d be2iscsi: Remove be_mbox_notify_wait function
69fd6d7b42374400f311d2eff59fc37cc184b6b2 be2iscsi: Fix be_mcc_compl_poll to use tag_state
c448427b96ed1a71700728a67323e3e5c76563d2 be2iscsi: Cleanup processing of BMBX completion
090e2184ba8fedff44b65e480d0f30229bb85621 be2iscsi: Couple MCC tag and WRB alloc and free
8270b8624365887a716615294d0ac28af07c9287 hpsa: add sysfs entry path_info to show box and bay information
b9092b79ccaf4404509d6aeb2c76eb7cbfa57bf1 Change how controllers in mixed mode are handled.
8aa60681dbc0a501697663af0cd9c31df046d709 hpsa: remove unused parameter hostno
853633e85996cb661e7aed5b3ae8823b12f265cf hpsa: allow driver requested rescans
683fc444697a388f17cbc3bd7e64191ce000b6b4 hpsa: abandon rescans on memory alloaction failures.
f2039b03290b3b1e0556b85b7018273e116d17c3 hpsa: correct check for non-disk devices
2a168208a35515b8ca54fbf1a17581ad2a852a3f hpsa: simplify check for device exposure
04fa2f44461dd90a00b514cd75ce82f829924826 hpsa: simplify update scsi devices
f3f017305d4da61b64098f3d89cb64563c95087a hpsa: add function is_logical_device
096ccff47e152aef8e9ef318c02781daedc433b7 hpsa: move scsi_add_device and scsi_remove_device calls to new function
66749d0d617a9cda967f168802f1fb1a6e598a92 hpsa: generalize external arrays
2d62a33e05d471bef6b2e5478f57d05b9baded85 hpsa: eliminate fake lun0 enclosures
34592254c13324add1972e6a7d5f6636d95ade33 hpsa: add discovery polling for PT RAID devices.
c2adae44e9161612c89e52d233c83086195f454c hpsa: disable report lun data caching
1faf072c0e3ab0bc41fc1d343883dac704b82946 hpsa: fix multiple issues in path_info_show
d04e62b9d63a7498735761dc40eaed88b7fd9d80 hpsa: add in sas transport class
ec2c3aa94d9207fd2557203f36677da8be75b354 hpsa: bump the driver version
d8a080c3746c0b60905a88ca56e83a8239c184e0 hpsa: logical vs bitwise AND typo
2708f2957ce70037d3eab8a45523d4445404ecb4 hpsa: fix path_info_show
cca8f13b4fdaf3583e103ae7f96fda948839b265 hpsa: Add box and bay information for enclosure devices
17a9e54a99e68feb083b5ea0e6843686b7b327b8 hpsa: do not get enclosure info for external devices
d9e52fb1627b1f6fe5810941f2e1641a3d394641 hpsa: correct lun data caching bitmap definition
1d64508810d8d15867251c75a68d7250278ce2bd scsi: disable automatic target scan
efb48ccfcda4dbb9fce39c5c8df19644a08121c0 rtnetlink.h: Remove extern from function prototypes
509aba3b0d366b7f16a9a2eebac1156b25f5f622 IPv6: add the option to use anycast addresses as source addresses in echo reply
d76ed22b225c02228c643ae336f76e086fdc32f0 ipv6: move IPV6_TCLASS_SHIFT into ipv6.h and define a helper
73f156a6e8c1074ac6327e0abd1169e95eb66463 inetpeer: get rid of ip_id_count
04ca6973f7c1a0d8537f2d9906a0cf8e69886d75 ip: make IP identifiers less predictable
14909664e4e192f4c6f6fcdccd9919af7cf783ab sit: Setup and TX path for sit/UDP foo-over-udp encapsulation
0508c07f5e0c94f38afd5434e8b2a55b84553077 ipv6: Select fragment id during UFO segmentation if not set.
51f30770e50eb787200f30a79105e2615b379334 ipv6: Fix fragment id assignment on LE arches.
8381eacf5c3b35cf7755f4bc521c4d56d24c1cd9 ipv6: Make __ipv6_select_ident static
8e199dfd82ee097b522b00344af6448715d8ee0c ipv6: call ipv6_proxy_select_ident instead of ipv6_select_ident in udp6_ufo_fragment
78ebb0d00b49125ea03a1adcaa4db39de38be41c rtnetlink: Mark name argument of rtnl_create_link() const
4b32b5ad31a68a661f761c76dfd0d076636d3ae9 ipv6: Stop rt6_info from using inet_peer's metrics
2647a9b07032c5a95ddee1fcb65d95bddbc6b7f9 ipv6: Remove external dependency on rt6i_gateway and RTF_ANYCAST
83a09abd1a8badbbb715f928d07c65ac47709c47 ipv6: Break up ip6_rt_copy()
a0d9a8604f29ee3340126ec3f90c9421f930aa50 rtnetlink: introduce new RTA_ENCAP_TYPE and RTA_ENCAP attributes
499a24256862714539e902c0499b67da2bb3ab72 lwtunnel: infrastructure for handling light weight tunnels like mpls
571e722676fe386bb66f72a75b64a6ebf535c077 ipv4: support for fib route lwtunnel encap attributes
19e42e45150672124b6a4341e2bc7982d247f0ac ipv6: support for fib route lwtunnel encap attributes
ffce41962ef64b8e685e5b621caf24bf381addd9 lwtunnel: support dst output redirect function
74a0f2fe8ed51e3adbb1c882be04672fe7bb6996 ipv6: rt6_info output redirect to tunnel output
f38a9eb1f77b296ff07e000823884a0f64d67b2a dst: Metadata destinations
0accfc268f4d3345693d3af3d5780aae3ad93d8d arp: Inherit metadata dst when creating ARP requests
ee122c79d4227f6ec642157834b6a90fcffa4382 vxlan: Flow based tunneling
1b7179d3adff0ab71f85ee24d7de28ccb7734b89 route: Extend flow representation with tunnel key
3093fbe7ff4bc7d1571fc217dade1cf80330a714 route: Per route IP tunnel metadata via lightweight tunnel
e7030878fc8448492b6e5cecd574043f63271298 fib: Add fib rule match on tunnel id
0dfbdf4102b9303d3ddf2177c0220098ff99f6de vxlan: Factor out device configuration
c9db965c524ea27451e60d5ddcd242f6c33a70fd openvswitch: Abstract vport name through ovs_vport_name()
614732eaa12dd462c0ab274700bed14f36afea5e openvswitch: Use regular VXLAN net_device device
052831879945be0d9fad2216b127147c565ec1b1 ip_tunnel: Provide tunnel metadata API for CONFIG_INET=n
045a0fa0c5f5ea0f16c009f924ea579634afbba8 ip_tunnel: Call ip_tunnel_core_init() from inet_init()
6b6948dda798637aea237df0d0c8bcba8fa653bc vxlan: Use proper endian type for vni in vxlan[6]_xmit_skb
6673a9f4e35c1f0e9976cd4e88042f87674a6b02 ipv6: use lwtunnel_output6() only if flag redirect is set
d943659508a4fb883507fdd3f998329e70a8f922 ipv6: copy lwtstate in ip6_rt_copy_init()
5a6228a0b472062646434cd2536d109c102b606e lwtunnel: change prototype of lwtunnel_state_get()
e11f40b9352f75d924cb216abcc5413b38d9288b lwtunnel: use kfree_skb() instead of vanilla kfree()
92a99bf3bae7c1267db87bb3e3babda2c6dcc8a7 lwtunnel: Make lwtun_encaps[] static
dcc38c033b32b81b88b798f0c0b8453839ac996b openvswitch: Re-add CONFIG_OPENVSWITCH_VXLAN
343d60aada5a358ca186d6e9e353230379c426d8 ipv6: change ipv6_stub_impl.ipv6_dst_lookup to take net argument
f8a9b1bc1b238eed9987da747a0e52f5bb009980 vxlan: expose COLLECT_METADATA flag to user space
abf7c1c540f8330fead5d50730d92606dcbe7a7e lwtunnel: set skb protocol and dev
da8b43c0e1dcea3bcac5f37ea59934ddaa137aed vxlan: combine VXLAN_FLOWBASED into VXLAN_COLLECT_METADATA
a9020fde67a6eb77f8130feff633189f99264db1 openvswitch: Move tunnel destroy function to oppenvswitch module.
2e15ea390e6f4466655066d97e22ec66870a042c ip_gre: Add support to collect tunnel metadata.
b2acd1dc3949cd60c571844d495594f05f0351f4 openvswitch: Use regular GRE net_device instead of vport
9f57c67c379d88a10e8ad676426fee5ae7341b14 gre: Remove support for sharing GRE protocol hook.
a1c234f95cae2d293047bb6c36e7a4840dbac815 lwtunnel: rename ip lwtunnel attributes
2536862311d2276454ddef9dc36d6551a4b400fd lwt: Add support to redirect dst.input
df383e6240ef222703648072dafd2a1ae21b0d2a lwtunnel: fix memory leak
2d79849903e00fb445038ddd8afb2acfbf89eb7f lwtunnel: ip tunnel: fix multiple routes with different encap
824e7383e92815cb591793c74cc836aa5165f7f8 lwtunnel: Fix the sparse warnings in fib_encap_match
e01286ef03a9c7b1d4937309f923c226ab05bc4d ipv4: Make fib_encap_match static
c1ea5d672aaff08da337dee735dbb548e3415585 ip_tunnels: add IPv6 addresses to ip_tunnel_key
7c383fb2254c44e096427470da6a36380169b548 ip_tunnels: use tos and ttl fields also for IPv6
61adedf3e3f1d3f032c5a6a299978d91eff6d555 route: move lwtunnel state to dst_entry
a725e514dbb444f2a39c2bc5de72eb5efbeb7d5e vxlan: metadata based tunneling for IPv6
904af04d30f303d96902584206457128c3051d8d ipv6: route: extend flow representation with tunnel key
32a2b002ce615eadd3bfaddabde290f70a1dd17b ipv6: route: per route IP tunnel metadata via lightweight tunnel
58ce31cca1ffe057f4744c3f671e3e84606d3d4a vxlan: GRO support at tunnel layer
127eb7cd3c210afead788991a30950a9e36759ea lwt: Add cfg argument to build_state
e252b3d1a1744af1431aca30e091420734c2b012 route: fix a use-after-free
c29a70d2cadfea443c027d23481f820530b70057 tunnel: introduce udp_tun_rx_dst()
6b001e682e90d7edf21f93687f5c3b39d412ad6c openvswitch: Use Geneve device.
46fa062ad63146dd138ec0f017e71224471e8ea5 ip_tunnels: convert the mode field of ip_tunnel_info to flags
7f9562a1f405306eacb97f95d78cb996e33f27f5 ip_tunnels: record IP version in tunnel info
a43a9ef6a2e510fec61176ff2c34fab3e7d581da vxlan: do not receive IPv4 packets on IPv6 socket
24d43f32d86026a0e318fee736380e164d85eefa openvswitch: Remove vport get_name()
3eedb41fb43461b5fde3f72fd00a7706f0b90103 openvswitch: Remove egress_tun_info.
8c876639c98501b049269b554bf4ecbb8f9c012f openvswitch: Remove vport stats.
a581b96dbfc52b6b498552525ec929aa635680ed openvswitch: Remove vport-net
4c22279848c531fc7f555d463daf3d0df963bd41 ip-tunnel: Use API to access tunnel metadata options.
0f1b7354e0d65ad528b820a8a46c15d70954f699 vxlan: Refactor vxlan_udp_encap_recv() to kill compiler warning
982b527004826b40de1e821b123c70f05b41496c openvswitch: Fix mask generation for nested attributes.
057ba29bbe85e9587635e3128b26fa30fe849af9 vxlan: reject IPv6 addresses if IPv6 is not configured
63d008a4e9ee86614ca5671b7f3ba447df007190 ipv4: send arp replies to the correct tunnel
b194f30c61efb0767a98f47a64530baa8b731670 lwtunnel: remove source and destination UDP port config option
205f356d165033443793a97a668a203a79a8723a vxlan: make vxlan_sock_add and vxlan_sock_release complementary
b1be00a6c39fda2ec380e168d7bcf96fb8c9da42 vxlan: support both IPv4 and IPv6 sockets in a single vxlan device
181a4224acdfb993a21f987f8617b5c8d7bc654e ipv4: fix reply_dst leakage on arp reply
83ffe99f52b8f269b31b21524adcd13b165f7703 openvswitch: Fix ovs_vport_get_stats()
00a93babd06aaad31d23384cda576ede0f586a8c openvswitch: add tunnel protocol to sw_flow_key
6b26ba3a7d952e611dcde1f3f77ce63bcc70540a openvswitch: netlink attributes for IPv6 tunneling
740dbc289155fdeed32438396370e70b684cd45e openvswitch: Scrub skb between namespaces
e277de5f3f7d6eed2a41920983c44c4df386b871 tunnels: Don't require remote endpoint or ID during creation.
1241365f1aeb24ef0ffe82970f7c558022ddc85f openvswitch: Allocate memory for ovs internal device stats.
99e28f18e3f4daa2091802e07ebeb4f541631320 openvswitch: Fix incorrect type use.
aec15924740edc9886051593bc7769873be9498b openvswitch: Use dev_queue_xmit for vport send.
fc4099f17240767554ff3a73977acb78ef615404 openvswitch: Fix egress tunnel info.
8ed66f0e8235118a31720acdab3bbbe9debd0f6a geneve: implement support for IPv6-based tunnels
3a56f86f1be6a381345800d69999eaff87e0161d geneve: handle ipv6 priority like ipv4 tos
b8812fa88371ae567c907448d9a7ba62d09b90c9 geneve: add IPv6 bits to geneve_fill_metadata_dst
f63ce5b6fa5e9a0faf7a0e1ef2993a502878c78a tun_dst: Fix potential NULL dereference
83e4bf7a7486532df2dc3db27e0e07a250990ed2 openvswitch: properly refcount vport-vxlan module
13175303024c8f4cd09e51079a8fcbbe572111ec openvswitch: fix hangup on vxlan/gre/geneve device deletion
e5d4b29fe86a911f447d2f1e95383e04c7cfb465 vxlan: move IPv6 outpute route calculation to a function
239e944ff532de6e9579b3913d7f76b4f01c7e2f vxlan: support ndo_fill_metadata_dst also for IPv6
ce212d0f6f5523ca9eb8020267f1aa4eb6869ba8 vxlan: interpret IP headers for ECN correctly
a322a1bcf32900e9c9f4f9d3e09717513d918cdc geneve: Fix IPv6 xmit stats update.
abe492b4f50c3ae2ebcfaa2f5c16176aebaa1c68 geneve: UDP checksum configuration via netlink
a8170d2b9e8d38a1f3fa3b40b6f8cd34a87d5382 geneve: Add geneve udp port offload for ethernet devices
e905eabc90a5b787d8708df164543ee295bea5f2 openvswitch: correct encoding of set tunnel action attributes
039f50629b7f860f36644ed1f34b27da9aa62f43 ip_tunnel: Move stats update to iptunnel_xmit()
30d3d83a7dcef7a26c5c48e548bdd6a76754cbcd ipv4: fix endianness warnings in ip_tunnel_core.c
07b9b37c227cb8d88d478b4a9c5634fee514ede1 vxlan: fix test which detect duplicate vxlan iface
2f7066ada15c865eeab5a3f6c69dcf58d196e349 openvswitch: fix struct geneve_port member name
ce87fc6ce3f9f4488546187e3757cf666d9d4a2a gro: Make GRO aware of lightweight tunnels.
35e2d1152b22eae99c961affbe85374bef05a775 tunnels: Allow IPv6 UDP checksums to be correctly controlled.
0e715d6fbd2a4a1dcd215d6d51091346e6a3d3fa vxlan: cleanup types
828788ac99d5de6bae10b333d1e8ddf25928ac12 vxlan: restructure vxlan.h definitions
1a8496ba409132afb3b407599061c34847de42d3 vxlan: consolidate output route calculation
b4ed5cad24c1072033efbffa680c84c9ba19c798 vxlan: consolidate csum flag handling
f491e56dba511d318f52efa4c226471bf5943e88 vxlan: consolidate vxlan_xmit_skb and vxlan6_xmit_skb
55e5bfb53cff286c1c1ff49f51325dc15c7fea63 geneve: Relax MTU constraints
7e059158d57b79159eaf1f504825d19866ef2c42 vxlan, gre, geneve: Set a large MTU on ovs-created tunnel devices
d4ac05ff3697e036dcb0e2e284c5f7eb77cc0966 vxlan: introduce vxlan_hdr
54bfd872bf16d40b61bd0cd9b769b2fef67dd272 vxlan: keep flags and vni in network byte order
be5cfeab8f95995d5590ab919b9f4dde19d50ea7 vxlan: simplify vxlan_remcsum
3288af0892e322b019a4c98810959b2a1c6dae7b vxlan: move GBP header parsing to a separate function
f14ecebb3a4e83eb6233e0167aa4ba675c99e514 vxlan: clean up extension handling on rx
288b01c8c46eda01cd3921c6e3aca6293e57cee8 vxlan: clean up rx error path
b9167b2e775999d267874b5a1a3a79020f54753a vxlan: treat vni in metadata based tunnels consistently
07dabf20d9867710b90b91108b2adcd448773e25 vxlan: tun_id is 64bit, not 32bit
aeee0e66c6b46cee311be22cb82735763eceb7c3 geneve: Refine MTU limit
1e9f12ec92ab7307ac7386924e343905f7f12205 geneve: implement geneve_get_sk_family helper
9fc4754582bf46b0998a64fce74f570cea720e18 geneve: move geneve device lookup before iptunnel_pull_header
c9e78efb6f668c42e0e0f47398e814b758b95336 vxlan: move vxlan device lookup before iptunnel_pull_header
7f290c94352e59b1d720055fce760a69a63bd0a1 iptunnel: scrub packet in iptunnel_pull_header
f468a729a2ddb1a26f8c4b98a82050e4030fe458 vxlan: do not use fdb in metadata mode
c868ee7063bdb53f3ef9eac7bcec84960980b471 lwt: fix rx checksum setting for lwt devices tunneling over ipv6
14f1f724355206dea1cf3f23ee87993bfd47c70c GENEVE: Support outer IPv4 Tx checksums by default
64f87d3616a01c53262c6e0e948d62df15923f1c vxlan: consolidate GBP handling even more
1ab016e237e7d0734fb7adbbfe6d4cacb3520421 vxlan: move inner L2 header processing to a separate function
760c68054e9ed1c6e43b06f916f6efc2c8a1adcc vxlan: move ECN decapsulation to a separate function
f2d1968ec85e85def98fdea0cf325851433bb60a vxlan: consolidate rx handling to a single function
10a5af238cd29b7e43af0dc0690ae9baa0650c36 vxlan: simplify metadata_dst usage in vxlan_rcv
4024fcf70556311521e7b6cf79fa50e16f31013a vxlan: fix missing options_len update on RX with collect metadata
1400615d64cf5afee533aff8234c837da465841b vxlan: allow setting ipv6 traffic class
134611446dc657e1bbc73ca0e4e6b599df687db0 ip_tunnel: add support for setting flow label via collect metadata
e7f70af111f086a20800ad2e17f544b2e3e0f375 vxlan: support setting IPv6 flow label
8eb3b99554b82da968d1fbc00df9f3156c5e2d63 geneve: support setting IPv6 flow label
eaa93bf4c6090809395605d1775a0db9970eda5e vxlan: fix populating tclass in vxlan6_get_route
95caf6f71a9998b5382e3fb9abbca34c02e8f74f geneve: fix populating tclass in geneve_get_v6_dst
995096a0a438396a570104e9c240a2a26623a5a1 Fix returned tc and hoplimit values for route with IPv6 encapsulation
49e261a8a21e0960a3f7ff187a453ba1c1149053 openvswitch: Orphan skbs before IPv6 defrag
2090714e1d6e80979dd6926be22b0de9ca432273 gre: build header correctly for collect metadata tunnels
969439016d2cf61fef53a973d7e6d2061c3793b1 can: add missing initialisations in CAN related skbuffs
36c01245eb8046c16eee6431e7dbfbb302635fa8 can: fix loss of CAN frames in raw_rcv
d3b58c47d330de8c29898fe9746f7530408f8a59 can: replace timestamp as unique skb attribute
f8ffad69c9f8b8dfb0b633425d4ef4d2493ba61a bpf: add skb_postpush_rcsum and fix dev_forward_skb occasions
6b83d28a55a891a9d70fc61ccb1c138e47dcbe74 net: use skb_postpush_rcsum instead of own implementations
9241e2df4fbc648a92ea0752918e05c26255649e vlan: pull on __vlan_insert_tag error path and fix csum correction
871b642adebe300be2e50aa5f65a418510f636ec netdev: introduce ndo_set_rx_headroom
3a927bc7cf9d0fbe8f4a8189dd5f8440228f64e7 ovs: propagate per dp max headroom to all vports
eaea34b23c46bf17b4a5638be69ab3561854f34b net/tun: implement ndo_set_rx_headroom
163e529200af7b7521fbde5dbcc653cf3ce597df veth: implement ndo_set_rx_headroom
e014e8468552236f0f0cb64c7c341c1dce506070 ovs: internal_set_rx_headroom() can be static
7c3b00e06d731a28fc3d17ed02ba250642b15b81 ptrace: make wait_on_bit(JOBCTL_TRAPPING_BIT) in ptrace_attach() killable
4729583006772b9530404bc1bb7c3aa4a10ffd4d cpuset: fix a locking issue in cpuset_migrate_mm()
80df28476505ed4e6701c3448c63c9229a50c655 hung_task: check the value of "sysctl_hung_task_timeout_sec"
d3132e4b83e6bd383c74d716f7281d7c3136089c mm: compaction: reset cached scanner pfn's before reading them
b800c91a0517071156e772d4fb329ad33590da62 mm: fix corner case in anon_vma endless growing prevention
3fe89b3e2a7bbf3e97657104b9b33a9d81b950b3 mm: fix anon_vma->degree underflow in anon_vma endless growing prevention
0eb77e9880321915322d42913c3b53241739c8aa vmstat: make vmstat_updater deferrable again and shut down on idle
f01f17d3705bb6081c9e5728078f64067982be36 mm, vmstat: make quiet_vmstat lighter
cfae7529b525c3fa86deb71cf2036659240a865e dm: remove unused mapped_device argument from free_tio()
518257b13276d07a19e6ae0608b8e5ee73383ce4 dm mpath: switch to using bitops for state flags
91e968aa6015d7366281b532dad2e48855b91fe3 dm mpath: use atomic_t for counting members of 'struct multipath'
20800cb3450ee44ec1827d7e8bbfd5a9dc02e6cd dm mpath: move trigger_event member to the end of 'struct multipath'
2da1610ae20e995e53658c3b10166d2ad74e30bd dm mpath: eliminate use of spinlock in IO fast-paths
0ef5a50c1658d4d96a44f145bcb92ff3310c75b1 block: make bio_inc_remaining() interface accessible again
d38374142b2560f233961ed3756416c68af6c6cb powerpc/kernel: Change the do_syscall_trace_enter() API
2449acc5348b94325e9374056b2cc3ed55816e96 powerpc/kernel: Enable seccomp filter
b52f3ed02221252d8ee2c7d756e76fad4a5e84f6 irqbypass: Disallow NULL token
14717e2031862d9aa2512b24a7df42cf68a977ec kvm: Conditionally register IRQ bypass consumer
c7fb93ec51d462ec3540a729ba446663c26a0505 x86/efi: Include a .bss section within the PE/COFF headers
2e39e0f608c130411f52c9fe5648dbcda5e28528 nvme: add missing lock nesting notation
723cacbd9dc79582e562c123a0bacf8bfc69e72a s390/mm: fix asce_bits handling with dynamic pagetable levels
7d727869c7b86da0874436ac5675dcdadaf3a0a1 ALSA: hda/realtek - Add support for ALC295/ALC3254
62eb4b07f0803d0426eb695bfe6755dd6a2cafb2 ACPI / scan: Allow platform device creation without any IO resources
d2fe7251a36012bc552a4c95246d486a8e284043 ACPI / scan: Drop unnecessary label from acpi_create_platform_device()
b4d6d336762aea282921a3283f2a00c7e95d2bef acpi-dma: remove ugly conversion
a45de93eb10ae44446aec2c73d722562ab46092a ACPICA: Resources: Provide common part for struct acpi_resource_address structures.
c420dbd13ef7f399a865498496ac9ce2755b8007 ACPI: Implement proper length checks for mem resources
1d0420f1cfc4763a8c5bfc617e0a40f710c2f74d ACPI: Use the length check for io resources as well
eb76d55e66a9bed2359cc5a0f08168b287c4dea8 ACPI: Unify the parsing of address_space and ext_address_space
72e26b0d487fc494f40aa61e10a0757791e62e36 ACPI: Move the window flag logic to the combined parser
fcb29bbcd5404494eb46ad24908a4843b5a32060 ACPI: Add prefetch decoding to the address space parser
8515f9368161730655b64ddaf8b11a3d20049610 ACPI: Fix a bug in parsing ACPI Memory24 resource
581c19f3a72ae9ff7f24f2a6c2e67f269ed4392a ACPI: Normalize return value of resource parser functions
c78b688561e684098a11012ca21a6d578f9dfb67 ACPI: Set flag IORESOURCE_UNSET for unassigned resources
a274019fc332d7b4dcb85735978c2018522be312 ACPI: Enforce stricter checks for address space descriptors
a49170b552423a3e85fc4f0d778c707402ee4863 ACPI: Return translation offset when parsing ACPI address space resources
2ea3d266bab3b497238113b20136f7c3f69ad9c0 ACPI: Translate resource into master side address for bridge window resources
93286f4798590e711aa395503401f8632fb74f9a ACPI: Add field offset to struct resource_list_entry
90e97820619dc912b52cc9d103272819d8b51259 resources: Move struct resource_list_entry from ACPI into resource core
14d76b68f2819a1d0b50236a7e9e9f2ea69869d9 PCI: Use common resource list management code instead of private implementation
593669c2ac0fe18baee04a3cd5539a148aa48574 x86/PCI/ACPI: Use common ACPI resource interfaces to simplify implementation
6a239af2a3698c488aee798670eca772eb74890b ACPI / resources: Change pr_info() to pr_debug() for debug information
63f1789ec71677dd285d43d6c79ca44808f16945 x86/PCI/ACPI: Ignore resources consumed by host bridge itself
aa714d286f2ea5fae3ca8c75acd03d8694fb657e x86/PCI/ACPI: Relax ACPI resource descriptor checks to work around BIOS bugs
2c62e8492ed7358bbe7da51666c7e0f6da9474ee x86/PCI/ACPI: Make all resources except [io 0xcf8-0xcff] available on PCI bus
13e4f8a695aa1dc7c94525047fc2ffb9abc8125e dm thin: remove __bio_inc_remaining() and switch to using bio_inc_remaining()
a389fcfd2cb57793931a9fb98fed076aae50bb6c Drivers: hv: vmbus: Fix signaling logic in hv_need_to_signal_on_read()
a6341f000024cdf1ec14dc26743a409a17378db5 Drivers: hv: vmbus: Introduce functions for estimating room in the ring buffer
d45faaeedb762a3965a0246cf831e55045dd6ef8 Drivers: hv: vmbus: Use READ_ONCE() to read variables that are volatile
0f1b1ff54b386926ef1a524e60ef89ae7738bbd5 s390: pass march flag to assembly files as well
b6a7719aedd7e5c0f2df7641aa47386111682df4 ipv4: hash net ptr into fragmentation bucket selection
5a352dd0a3aac03b443c94828dfd7144261c8636 ipv6: hash net ptr into fragmentation bucket selection
926a882f6916fd76b6f8ee858d45a2241c5e7999 ipv4: ip_tunnel: use net namespace from rtable not socket
d27fc78208b53ccdfd6a57d4ac44a459ca66806f sctp: Don't lookup dst if transport dst is still valid
e82435341ff08769b70400b72a7a8efda83c5014 ipv6: namespace cleanups
94b2cfe02bfe3f1918d91bd6f498e308c5605cbc ipv6: minor fib6 cleanups like type safety, bool conversion, inline removal
7996c799ae329fab1b9c8d475fd08883f0499ed9 ipv6: use ipv6_addr_any() helper
4ece9009774596ee3df0acba65a324b7ea79387c sit: fix sit0 percpu double allocations
286c2349f6665c3e67f464a5faa14a0e28be4842 ipv6: Clean up ipv6_select_ident() and ip6_fragment()
fd0273d7939f2ce3247f6aac5f6b9a0135d4cd39 ipv6: Remove external dependency on rt6i_dst and rt6i_src
45e4fd26683c9a5f88600d91b08a484f7f09226a ipv6: Only create RTF_CACHE routes after encountering pmtu exception
b197df4f0f3782782e9ea8996e91b65ae33e8dd9 ipv6: Add rt6_get_cookie() function
3da59bd94583d1239e4fbdee452265a160b9cd71 ipv6: Create RTF_CACHE clone when FLOWI_FLAG_KNOWN_NH is set
8d0b94afdca84598912347e61defa846a0988d04 ipv6: Keep track of DST_NOCACHE routes in case of iface down/unregister
d52d3997f843ffefaa8d8462790ffcaca6c74192 ipv6: Create percpu rt6_info
ebfa45f0d952e5e7bb30a7f9daaad681de138728 ipv6: Move common init code for rt6_info to a new function rt6_info_init()
ad706862890171e02df1d7391b05599fb676ec18 ipv6: Remove un-used argument from ip6_dst_alloc()
a73e4195636c17f310b8530643a576f42b82385f ipv6: Add rt6_make_pcpu_route()
9c7370a166b4e157137bfbfe2ad296d57147547c ipv6: Fix a potential deadlock when creating pcpu rt
80fbdb208f37740774652ba095a5b2045205ed59 ipv6: datagram: Refactor flowi6 init codes to a new function
7e2040db1539a904924b997a14ebd3de53172100 ipv6: datagram: Refactor dst lookup and update codes to a new function
33c162a980fe03498fcecb917f618ad7e7c55e61 ipv6: datagram: Update dst cache of a connected datagram sk during pmtu update
e646b657f6983017783914a951039e323120dc55 ipv6: udp: Do a route lookup and update during release_cb
7f1598678d4c05e3e085bf780a5ab3119637ac3c ipv6: ipv6_select_ident() returns a __be32
8a8c35fadfaf55629a37ef1a8ead1b8fb32581d2 mm: kmemleak_alloc_percpu() should follow the gfp from per_alloc()
e332bc67cf5e5e5b71a1aec9750d0791aac65183 ipv6: Don't call with rt6_uncached_list_flush_dev
0d3f6d297bfb7af24d0508460fdb3d1ec4903fa3 ipv6: Avoid creating RTF_CACHE from a rt that is not managed by fib6 tree
cdf3464e6c6bd764277cbbe992cd12da735b92fb ipv6: Fix dst_entry refcnt bugs in ip6_tunnel
70da5b5c532f0ec8aa76b4f46158da5f010f34b3 ipv6: Replace spinlock with seqlock and rcu in ip6_tunnel
206b49500df558dbc15d8836b09f6397ec5ed8bb net/ip6_tunnel: fix dst leak
02bcf4e082e4dc634409a6a6cb7def8806d6e5e6 ipv6: Check rt->dst.from for the DST_NOCACHE route
5973fb1e245086071bf71994c8b54d99526ded03 ipv6: Check expire on DST_NOCACHE route
911362c70df5b766c243dc297fadeaced786ffd8 net: add dst_cache support
607f725f6f7d5ec3759fbc16224afb60e2152a5b net: replace dst_cache ip6_tunnel implementation with the generic one
e09acddf873bf775b208b452a4c3a3fd26fa9427 ip_tunnel: replace dst_cache with generic implementation
0c1d70af924b966cc71e9e48920b2b635441aa50 net: use dst_cache for vxlan device
d71785ffc7e7cae3fbdc4ea8a9d05b7a1c59f7b8 net: add dst_cache to ovs vxlan lwtunnel
468dfffcd762cbb2777ec5a76bc21e3748ebf47e geneve: add dst caching support
3c1cb4d2604c03779a6c9485204e2a80be6c28f0 net/ipv4: add dst cache support for gre lwtunnels
9b246841f4041f85265dec5f769c017fc36a0d33 Make DST_CACHE a silent config option
f27337e16f2d0e52a8d05ea599ed13cd266ac291 ip_tunnel: fix preempt warning in ip tunnel creation/updating
e31c5e0e486226e0808a2e90a7af40daa084ed09 inet_diag: cleanups
34160ea3f9c96b5ae71a11459f9b9f6c298b8930 inet_diag: add const to inet_diag_req_v2
a4458343ac5986d010290915df6ab884afacbdb7 inet_diag: factorize code in new inet_diag_msg_common_fill() helper
3fd22af808f4d7455ba91596d334438c7ee0f889 sock_diag: specify info_size per inet protocol
626d16f50f39bb9c44f98fd256cae2b864900a01 sctp: export some apis or variables for sctp_diag and reuse some for proc
cb2050a7b8131a9a9f3f97276df1feaae8987dc8 sctp: export some functions for sctp_diag in inet_diag
b5e2f4e6998a2b999da8fa0290b692f0bd85c8b7 sctp: merge the seq_start/next/exits in remaddrs and assocs
53fa10369c45a51947f06e8b622d2fa2cc64fda1 sctp: fix some rhashtable functions using in sctp proc/diag
cdba2ec538d9843c42cac15ff4ec54dc2ac53f8a time: Expose getrawmonotonic64 for in-kernel uses
e8f1f02e7125220b99af8047703b63c11a7081d6 drm/i915: Reorganize WM structs/unions in CRTC state
e7649b54777ba6491204acbe1f1a34fce78637d5 drm/i915: Rename s/skl_compute_pipe_wm/skl_build_pipe_wm/
a1de91e5f3039dfc32ac2b77ffb280a68646cbc7 drm/i915/gen9: Cache plane data rates in CRTC state
9c74d82621c553f0da1f41bd5d90f5eab5659fdb drm/i915/gen9: Allow calculation of data rate for in-flight state (v2)
86a2100a8b96594902bb59b90614377df4f64ce0 drm/i915/gen9: Store plane minimum blocks in CRTC wm state (v2)
8b4a7d0597cd9910d7127ffae6ae91d21853a8a2 drm/i915: Track whether an atomic transaction changes the active CRTC's
c107acfeb03187873657ccc8af4fc5c704b3626b drm/i915/gen9: Allow skl_allocate_pipe_ddb() to operate on in-flight state (v3)
279e99d76e6097ee7b531114777fa9b030496d81 drm/i915: Add distrust_bios_wm flag to dev_priv (v2)
98d39494d3759f84ce50e505059bc80f54c1c47b drm/i915/gen9: Compute DDB allocation at atomic check time (v4)
a6d3460e62d17098a815a53f23e44d814cb347e0 drm/i915/gen9: Drop re-allocation of DDB at atomic commit (v2)
33815fa55b31a5de4b197c09926ecab3dfb79732 drm/i915/gen9: Calculate plane WM's from state
f4a967523ec7215a3ec867b7ed2e916bd34840e1 drm/i915/gen9: Allow watermark calculation on in-flight atomic state (v3)
2b4b9f35d94b1b533bc23110b040b04316480b28 drm/i915/gen9: Use a bitmask to track dirty pipe watermarks
55994c2c38a1101f84cdf277b228f830af8a9c1b drm/i915/gen9: Propagate watermark calculation failures up the call chain
734fa01f3a17ac80d2d53cee0b05b246c03df0e4 drm/i915/gen9: Calculate watermarks during atomic 'check' (v2)
6b6bada7d476b586d85b1f9df43125804877e09f drm/i915/gen9: Reject display updates that exceed wm limitations (v2)
5b483747a92570176259bb896dcf2468291f3e42 drm/i915: Remove wm_config from dev_priv/intel_atomic_state
121b78e679ee3ffab780115e260b2775d0cc1f73 drm/amdkfd: unbind only existing processes
bc4755a4bd1845ef6e88ac8c62f12e05bb530256 drm/amdkfd: destroy dbgmgr in notifier release
d3922b69617b62bb2509936b68301f837229d9f0 drm/mgag200: Black screen fix for G200e rev 4
a8953c52b95167b5d21a66f0859751570271d834 drm/nouveau/disp/sor/gf119: both links use the same training register
4691409b3e2250ed66aa8dcefa23fe765daf7add drm/nouveau/disp/sor/gm107: training pattern registers are like gm200
c7f7e2feffb0294302041507dfd5fc15f01afccc drm/i915/fbc: Disable on HSW by default for now
b790ceeb0fd94725150219abd8c13b08a17a32e3 thinkpad_acpi: Add adaptive_kbd_mode sysfs attr
0118c2d3eac0545d4095877e5a015b5dc763b3c2 thinkpad_acpi: Add support for HKEY version 0x200
d50dde5a10f305253cbc3855307f608f8a3c5f73 sched: Add new scheduler syscalls to support an extended scheduling parameters ABI
aab03e05e8f7e26f51dee792beddcb5cca9215a5 sched/deadline: Add SCHED_DEADLINE structures & implementation
cc9684d3c1188ac5f1cf0ee9f8be7ba456099d7b sched: deadline: Use hrtimer_start()
1baca4ce16b8cc7d4f50be1f7914799af30a2861 sched/deadline: Add SCHED_DEADLINE SMP-related data structures & logic
239be4a982154ea0c979fca5846349bb68973aed sched/deadline: Add SCHED_DEADLINE avg_update accounting
755378a47192a3d1f7c3a8ca6c15c1cf76de0af2 sched/deadline: Add period support for SCHED_DEADLINE tasks
fb00aca474405f4fa8a8519c3179fed722eabd83 rtmutex: Turn the plist into an rb-tree
2d3d891d3344159d5b452a645e355bbe29591e8b sched/deadline: Add SCHED_DEADLINE inheritance logic
332ac17ef5bfcff4766dfdfd3b4cdf10b8f8f155 sched/deadline: Add bandwidth management for SCHED_DEADLINE tasks
6bfd6d72f51c51177676f2b1ba113fe0a85fdae4 sched/deadline: speed up SCHED_DEADLINE pushes with a push-heap
e4099a5e929435cd6349343f002583f29868c900 sched/deadline: Fix up the smp-affinity mask tests
1724813d9f2c7ff702b46d3e4a4f6d9b10a8f8c2 sched/deadline: Remove the sysctl_sched_dl knobs
de212f18e92c952533d57c5510d2790199c75734 sched/deadline: Fix hotplug admission control
88f1ebbc256e93bc029ec70b366612801f2c98ad sched/deadline: Fix sparse static warnings
82b95800b256205cff2eeab5bbd03430d2d0f20d sched/deadline: Test for CPU's presence explicitly
eec751ed41a0ae7e92a43c33a458d7bd1b941631 sched/deadline: Switch CPU's presence test order
6a7cd273dc4bc3246f37ebe874754a54ccb29141 sched/deadline: Fix memory leak
944770ab54babaef29d9d1dc8189898b3ee8afcf sched/deadline: Replace NR_CPUS arrays
fded4329da9e8486b434d6c4aceab1ab3f433d8a s390: wire up sys_sched_setattr/sys_sched_getattr
d8bf52311ecefd9b11a5af2b28ed7f41c6023516 sched/deadline: Remove unused variables
39fd8fd22b3224ec6819d33b3e34ae4da6a35f05 sched: Fix up scheduler syscall LTP fails
0bb040a44381261c0729636abbe03caeedb7d72e sched: Fix up attr::sched_priority warning
71362650b555a5b24c732e455484cc7cac1c8588 sched/deadline: No need to check p if dl_se is valid
390f3258cb2d031f1c17aa32e771ebd336e89073 sched/deadline: Skip in switched_to_dl() if task is current
3d5f35bdfdef5fd627afe9b4bf9c4f32d17f4593 sched/deadline: Fix bad accounting of nr_running
4df1638cfaf9b2b7ad993979a41965acab9cd156 sched/deadline: Fix overflow to handle period==0 and deadline!=0
495163420ab5398c84af96ca3eae2c6aa4a140da sched/core: Make dl_b->lock IRQ safe
995b9ea440862def83e8fcb1b498e68f93d4af59 sched/deadline: Remove useless dl_nr_total
3908ac13b550c93f97d8db136ff572be5495bc06 sched/deadline: Cleanup RT leftovers from {inc/dec}_dl_migration
faa5993736d9b44b508cab4f1f3a77d66641c6f4 sched/deadline: Prevent rt_time growth to infinity
5bfd126e80dca70431aef8fdbc1cf14535f3c338 sched/deadline: Fix sched_yield() behavior
b0827819b0da4acfbc1df1e05edcf50efd07cbd1 sched/deadline: Restrict user params max value to 2^63 ns
0f397f2c90ce68821ee864c2c53baafe78de765d sched/dl: Fix race in dl_task_timer()
f602d0632755be4f7eddfdd6c0af13216790177b sched/deadline: Delete extraneous extern for to_ratio()
177ef2a6315ea7bf173653182324e1dcd08ffeaa sched/deadline: Fix a precision problem in the microseconds range
1ba93d42727c44001aa8ccffd39c8ab5705379e2 sched/dl: Simplify pick_dl_task()
a5e7be3b28a235108c59561bea55eea1072b23b0 sched/deadline: Clear dl_entity params when setscheduling to different class
91ec6778ec4f963fcb2c2793610919b572f633b0 sched/deadline: Fix inter- exclusive cpusets migrations
66339c31bc3978d5fff9c4b4cb590a861def4db2 sched: Use dl_bw_of() under RCU read lock
f10e00f4bf360c36edbe6bf18a6c75b171cbe012 sched/dl: Use dl_bw_of() under rcu_read_lock_sched()
64be6f1f5f710f5995d41caf8a1767fe6d2b5a87 sched/deadline: Don't replenish from a !SCHED_DEADLINE entity
aee38ea95419c818dfdde52b115aeffe9cbb259b sched/deadline: Fix races between rt_mutex_setprio() and dl_task_timer()
f3a7e1a9c464a32ee186ab91388313c82e7ce018 sched/dl: Fix preemption checks
d9aade7ae1d283097a3f626790e7c325a5c69007 sched/deadline: Do not try to push tasks if pinned task switches to dl
7f51412a415d87ea8598d14722fb31e4f5701257 sched/deadline: Fix bandwidth check/update when migrating tasks between exclusive cpusets
f82f80426f7afcf55953924e71555984a4bd6ce6 sched/deadline: Ensure that updates to exclusive cpusets don't break AC
1d7e974cbf2fce2683f34ff33c173fd7ef5478c7 sched/deadline: Don't check SD_BALANCE_FORK
f4e9d94a5bf60193d45f92b136e3d166be3ec8d5 sched/deadline: Don't balance during wakeup if wakee is pinned
67dfa1b756f250972bde31d65e3f8fde6aeddc5b sched/deadline: Implement cancel_dl_timer() to use in switched_from_dl()
75e23e49dbdd86aace375f599062aa67483a001b sched/core: Use dl_bw_of() under rcu_read_lock_sched()
804968809c321066cca028d4cbd533a420f964bc sched/deadline: Fix artificial overrun introduced by yield_task_dl()
6b0a563f3a534827c1b56e53c3fd0fccec3c7895 sched/deadline: Push task away if the deadline is equal to curr during wakeup
cd66091162d34f589631a23bbe0ed214798245b4 sched/deadline: Reschedule from switched_from_dl() after a successful pull
cad3bb32e181c286c46ec12b2deb1f26a6f9835d sched/deadline: Don't check CONFIG_SMP in switched_from_dl()
c51b8ab5ad972df26fd9c0ffad34870e98273c4c sched/deadline: Fix rq->dl.pushable_tasks bug in push_dl_task()
36ce98818a4df66c8134c31fd6e768b4119c7a90 sched/deadline: Introduce start_hrtick_dl() for !CONFIG_SCHED_HRTICK
269ad8015a6b2bb1cf9e684da4921eb6fa0a0c88 sched/deadline: Avoid double-accounting in case of missed deadlines
bb2bc55a694d45cdeda91b6f28ab2adec28125ef sched: Fix crash if cpuset_cpumask_can_shrink() is passed an empty cpumask
16b269436b7213ebc01dcfcc9dafa8535b676ccb sched/deadline: Modify cpudl::free_cpus to reflect rd->online
40767b0dc768060266d261b4a330164b4be53f7c sched/deadline: Fix deadline parameter modification handling
a7bebf488791aa1036f3e6629daf01d01f705dcb sched/deadline: Fix hrtick for a non-leftmost task
1019a359d3dc4b64d0e1e5a5efcb725d5e83994d sched/deadline: Fix stale yield state
868933359a3bdda25b562e9d41bce7071edc1b08 sched: Fix hrtick_start() on UP
9659e1eeee28f7025b6545934d644d19e9c6e603 sched/deadline: Remove cpu_active_mask from cpudl_find()
3960c8c0c7891dfc0f7be687cbdabb0d6916d614 sched: Make dl_task_time() use task_rq_lock()
a79ec89fd8459f0de850898f432a2a57d60e64de sched/dl: Prevent enqueue of a sleeping task in dl_task_timer()
6f1607f1bdb4f9991a8123675a03c1764b2932fe sched/dl: Do update_rq_clock() in yield_task_dl()
44fb085bfa17628c6d2aaa6af6b292a8499e9cbd sched/deadline: Add rq->clock update skip for dl task yield
bd4bde14b93cce8fa77765ff709e0be55abdba2c sched/deadline: Avoid a superfluous check
a1963b81deec54c113e770b0020e5f1c3188a087 sched/deadline: Fix rt runtime corruption when dl fails its global constraints
4cd57f97135840f637431c92380c8da3edbe44ed sched/deadline: Always enqueue on previous rq when dl_task_timer() fires
fa9c9d10e97e38d9903fad1829535175ad261f45 sched/deadline: Support DL task migration during CPU hotplug
a649f237db18450de767d70f40a41d5dbd0291de sched,dl: Fix sched class hopping CBS hole
8b5e770ed7c05a65ffd2d33a83c14572696236dc sched/deadline: Optimize pull_dl_task()
a6c0e746fb8f4ea6508f274314378325a6e1ec9b sched/deadline: Make init_sched_dl_class() __init
9d514262425691dddf942edea8bc9919e66fe140 sched/deadline: Reduce rq lock contention by eliminating locking of non-feasible target
6713c3aa7f63626c0cecf9c509fb48d885b2dd12 sched: Remove superfluous resetting of the p->dl_throttled flag
6fab54101923044712baee429ff573f03b99fc47 sched/deadline: Remove needless parameter in dl_runtime_exceeded()
3fe33bcdd358dd8c641cf4d92c9d2d9972ca94dd sched/deadline: Remove a redundant condition from task_woken_dl()
2726d6ce389788c7fe724961a6e1bfe569560088 sched/deadline: Unify dl_time_before() usage
f52405757e4e9bddd868d6b8ca501d58f292969f sched/deadline, locking/rtmutex: Fix open coded check in rt_mutex_waiter_less()
6a503c3be937d275113b702e0421e5b0720abe8a sched/deadline: Fix migration of SCHED_DEADLINE tasks
7d92de3a8285ab3dfd68aa3a99823acd5b190444 sched/deadline: Fix the earliest_dl.next logic
c219b7ddb6a3524a61a89438d86e4a8639706308 sched/deadline: Fix trivial typo in printk() message
48be3a67da7413d62e5efbcf2c73a9dddf61fb96 sched/deadline: Always calculate end of period on sched_yield()
72f9f3fdc928dc3ecd223e801b32d930b662b6ed sched/deadline: Remove dl_new from struct sched_dl_entity
8295c69925ad53ec32ca54ac9fc194ff21bc40e2 sched/core: Clear the root_domain cpumasks in init_rootdomain()
e3de300d1212b42aa9d0d6031b12fca06ac00dd9 sched: Preserve the nice level over sched_setscheduler() and sched_setparam() calls
7479f3c9cf67edf5e8a76b21ea3726757f35cf53 sched: Move SCHED_RESET_ON_FORK into attr::sched_flags
d8d28c8f00e84a72e8bee39a85835635417bee49 sched: Fix sched_setparam() policy == -1 logic
608b9977260f67d8b032ea170666a6174a48e2f1 tun: use per cpu variables for stats accounting
4c47af4d5eb2c2f78f886079a3920a7078a6f0a0 net: sctp: rework multihoming retransmission path selection to rfc4960
433131ba03c511a84e1fda5669c70cf8b44702e1 net: sctp: remove NULL check in sctp_assoc_update_retran_path
b82e8f31acc7d799638692e65ff017f3e1b6a43d net: sctp: refactor active path selection
e575235fc6026bb75e166ff68f84118c62d73f94 net: sctp: migrate most recently used transport to ktime
a7288c4dd5094b3878b7ad817b0cd130a6f8e916 net: sctp: improve sctp_select_active_and_retran_path selection
ea4f19c1f81d4bf709c74e3789ec785828bc6e51 net: sctp: spare unnecessary comparison in sctp_trans_elect_best
aa4a83ee8bbc08342c4acfd59ef234cac51a1eef net: sctp: fix suboptimal edge-case on non-active active/retrans path selection
39d2adebf137de5f900843f69f5e500932e31047 sctp: fix the transports round robin issue when init is retransmitted
0d5cdef8d5dd0a6819fd85305adb448f5ba56f24 openvswitch: Fix conntrack compilation without mark.
c8cd0989bd151fda87bbf10887b3df18021284bc net: Eliminate NETIF_F_GEN_CSUM and NETIF_F_V[46]_CSUM
b6a0e72ad3cffabaf30b856deb58fbe64a0f36a8 net: Fix typo in netdev_intersect_features
bfa3f9d7f3b349acea8982d2248e33a0ed84c687 netfilter: Remove IP_CT_NEW_REPLY definition.
264619055bd52bc2278af848472176642d759874 netfilter: Allow calling into nat helper without skb_dst.
9f13ded8d3c715147c4759f937cfb712c185ca13 openvswitch: Add commentary to conntrack.c
394e910e909b174270b8231fd51942eb2f541fb9 openvswitch: Update the CT state key only after nf_conntrack_in().
289f225349cb2a97448fd14599ab34b741f706f3 openvswitch: Find existing conntrack entry after upcall.
5b6b929376a621e2bd3367f5de563d7123506597 openvswitch: Handle NF_REPEAT in conntrack action.
28b6e0c1ace45779c60e7cefe6d469b7ecb520b8 openvswitch: Delay conntrack helper call for new connections.
05752523e56502cd9975aec0a2ded465d51a71f3 openvswitch: Interface with NAT.
ac71b46efd2838c02ec193987c8f61c3ba33b495 openvswitch: Use proper buffer size in nla_memcpy
5745b0be05a0f8ccbc92a36b69f3a6bc58e91954 openvswitch: Fix checking for new expected connections.
99b7248e2ad57ca93ada10c6598affb267ffc99a openvswitch: call only into reachable nf-nat code
3b78155b1b3688dbe910fecdc3e003f431b46630 openvswitch: __nf_ct_l{3,4}proto_find() always return a valid pointer
16ec3d4fbb967bd0e1c8d9dce9ef70e915a86615 openvswitch: Fix cached ct with helper.
61bd3857ff2c7daf756d49b41e6277bbdaa8f789 net/core: Add event for a change in slave state
885eb0a516e4d686849b91c5a1ba25c70b7a6540 net: adjust napi_consume_skb to handle non-NAPI callers
cc8e27cc97318471b7e707932d5b93b0d5f70830 net/core: Add support for configuring VF GUIDs
897994e32b2b0a41ce4222c3b38a05bd2d1ee9fa timekeeping: Provide ktime_get[*]_ns() helpers
add511b38266aa10c1079f9248854e6a415c4dc2 bridge: add flags argument to ndo_bridge_setlink and ndo_bridge_dellink
02637fce3e0103ba086b9c33b6d529e69460e4b6 net: rename netdev_phys_port_id to more generic name
46c264daaaa569e24f8aba877d0fd8167c42a9a4 bridge/nl: remove wrong use of NLM_F_MULTI
47ea0325337b166c1c8695119aa6e83cdc035ef5 drivers/net: get rid of unnecessary initializations in .get_drvinfo()
bfcd3a46617209454cfc0947ab093e37fd1e84ef Introduce devlink infrastructure
10755d3f47a9b28639f2e3d29a09ff2a0969657d bnx2fc: Add driver tunables.
3f12f76ee83b3388d2e6f97a9e8c4c642656e277 bnx2fc: Print when we send a fip keep alive.
ab07ead53327ba574b84547a9c403fabab9e5a64 be2net: bump up the driver version to 11.0.0.0
defc0b2fb5221bca847a9adb8159b88bc3c93904 i2c: designware: make HCNT/LCNT values configurable
e1c7481797542f4d2039d5a458ef80603298ad78 ACPI / LPSS: Add Intel BayTrail ACPI mode PWM
1b31e9b76ef8c62291e698dfdb973499986a7f68 i2c: i801: enable Intel BayTrail SMBUS
41d09df1e08bf18316d08cb73c5d08b5346c0c5d net: rfkill: gpio: add ACPI IDs for a Broadcom bluetooth chip
c439c33d85e252d3b2b454ab7ba38b62d6e0a830 8250_dw: Support all baudrates on baytrail
04725ad59474d24553d526fa774179ecd2922342 x86, iosf: Add PCI ID macros for better readability
47bb27e78867997040a228328f2a631c3c7f2c82 i2c: designware: Mask all interrupts during i2c controller enable
4e26b134bd17234e373376b561d2fc5cba3fccb2 serial: 8250_dw: clock rate handling for all ACPI platforms
8c058d53f6f2eb0b9cd3bc4ce5c053a64dded671 intel_idle: Disable Baytrail Core and Module C6 auto-demotion
03f09f73bbd805f918fdc76888a1a83cdc28f28b ACPI / LPSS: support for 133MHz I2C source clock on Baytrail
41939e699c507a3441625862d125eb348f5319e0 pinctrl: baytrail: resolve unbalanced IRQ wake disable warning
5fae8b86fdf083bc43bf759abad6661be9d0b9ac pinctrl: Move Intel Baytrail pinctrl driver under intel directory
083bf668cb70e47b84db64856606e94beac87f01 ACPI: make acpi_create_platform_device() an external API
3230bbfce8a9270acc77fafd0d9ff90e94f28993 ACPI: introduce ACPI int340x thermal scan handler
816cab931f288c92a3404b1b984576f4822b0445 Thermal: introduce int3400 thermal driver
b81e5962af2c9453167d7be2efc46f42c42f63d2 Thermal/int340x: avoid unnecessary pointer casting
e413ad7cca9f541659ac0ddf8f37e2bcfade365a Thermal/int340x: Clear the error value of the last acpi_bus_get_device() call
7b09406390e76df97c9f5f29c23a4f56d982f22c Thermal/int340x: Handle properly the case when _trt or _art acpi entry is missing
48628e4015dbd77b676c5a9b5bd145a284f8bb93 ACPI/int340x_thermal: enumerate INT340X devices even if they're not in _ART/_TRT
014d9d5d0cc1da79bbe48fbc5e1068c5616238d2 ACPI/int340x_thermal: enumerate INT3401 for Intel SoC DTS thermal driver
cf3a51059efd653aa38667db799e85d77231af9d ACPI: int340x_thermal: add missing CONFIG_ prefix
bcb2b0b2bae2de744223c68521cd51c57feb486c ACPI: Eliminate CONFIG_.*{, _MODULE} #ifdef in favor of IS_ENABLED()
c0601d285efe063def984f91b04de2d227f89526 i2c: designware: Add i2c bus locking support
9136c5463f990d51c9f9361cd6be27f7f4d8fca7 i2c: designware-baytrail: use proper Kconfig dependencies
3293c7b8ec213a640f5ea2e5efeaa2b7559b1e19 ACPI / LPSS: Always disable I2C host controllers
b4ad0510f5d9099487acf2c748b99081ab6ab869 i2c: designware-baytrail: another fixup for proper Kconfig dependencies
31e4329f99062a06dca5a493bb4495a63b2dc6ba pinctrl: baytrail: Rework interrupt handling
fcc18deb7682dafcf6176b4af81d1554ffabd8b1 pinctrl: baytrail: Save pin context over system sleep
9b5c9f043e7a70665b2eb092f316d5d5cd238d49 i2c: designware-baytrail: describe magic numbers
259aada436e13ec75a8b0f252a78e6577879008e i2c: designware-baytrail: fix typo in error path
c8e043e6f717b0256b1cfc55d03c232e8a5c8cbd i2c: designware-baytrail: fix sparse warnings
30be774b38d845791b1acbd750f19e56c57f0185 i2c: designware-baytrail: cross-check lock functions
ebf2ef8f613433aaffac53aef2f6703445821fc6 i2c: designware-baytrail: baytrail_i2c_acquire() might sleep
718987d695adc991eb94501209fe5353136c8c16 intel_idle: support Bay Trail
d7ef76717322c8e2df7d4360b33faa9466cb1a0d intel_idle: Update support for Silvermont Core in Baytrail SOC
80313b3078fcd2ca51970880d90757f05879a193 x86/reboot: Add ASRock Q1900DC-ITX mainboard reboot quirk
a89d977cc04c77d9aa45d426dbf8de9dd1326c77 usb: dwc3: pci: add quirk for Baytrails
dccf7369652f3934456345aab6a92fa905177886 spi: pxa2xx: Prepare for new Intel LPSS SPI type
39ce8150a079e3ae6ed9abf26d7918a558ef7c19 pinctrl: baytrail: Serialize all register access
78e1c896932df5b8bcdff7bf5417d8e72a4d0d6b pinctrl: baytrail: Use raw_spinlock for locking
ec879f1272283c040bc70e1a1fff5edbb547be59 pinctrl: baytrail: Fix compilation warnings when !CONFIG_PM
3bde87714e79c7ff342e98ccafca07d69d91c7b8 pinctrl: baytrail: Be sure to clamp return value
1f8e5afdb28510eda75700e5c12af03550c10a8d usb: host: ehci-dbg: convert macro to inline function
1586ba0c218b10cce1de57c45f599dd8831a2d12 USB: EHCI: fix compiler warning introduced by commit 2a40f324541e
828638e91915e347f0721ae2a2cb137c910dc592 usb: add HAS_IOMEM dependency to USB_XHCI_MVEBU
eaa86229ff32a9aea80d7aa24289754e2eed8a76 usb: add HAS_IOMEM dependency to USB_FOTG210_HCD
1043960c982b7478d3f235767632c752370aa95e usb: add HAS_IOMEM dependency to USB_OHCI_HCD
f4a5d7028a20ee87e128a0e5fec5321fc831d1de usb: add HAS_IOMEM dependency to USB_OXU210HP_HCD
4a6d9f87209908fb5909c9957597e4df9c3c56fc usb: add HAS_IOMEM dependency to USB_ISP1362_HCD
6edd87f589cf1cd4c93ee07b8f8c72a5af427b10 usb: host: xhci-rcar: Use ARCH_RENESAS
cf34be7a223b7702e61668e0e3e64ceab4fdd06e usb: host: Host drivers relying on DMA should depend on HAS_DMA
7b0378f517fa1a32b5c8384248d2f8bf79c7c2ae asix: Rename remaining and size for clarity
c88d4df217f9a32415d63c1259a45da7f50ac38e usb: host: unhide suspend/resume declarations
3bfc69abf802f56901ffd83bb66b7dd7644ddcc3 asix: Tidy-up 32-bit header word synchronisation
8dac5300c251263cc91f49713d64b5ca85a76d53 usb: xhci-mtk: use __maybe_unused to hide pm functions
9a5ccd8e039eef53336e45d01c7d8a1acbd36b47 asix: Simplify asix_rx_fixup_internal() netdev alloc
6a570814cd430fa5ef4f278e8046dcf12ee63f13 asix: Continue processing URB if no RX netdev buffer
ae57e97a95211397b46a40f8cb0a23966c054bc5 usb: common: otg-fsm: add HNP polling support
9c527f49a7312450923222941ff50e5940004e97 usb: otg-fsm: add B_AIDL_BDIS timer
34e51ba6b65b5db4e35426759b1fbdf608545238 usb-host: Remove fusbh200 driver
bd9e33508c5e1eb5d807d11d7bfc52125fcdb04e qmi_wwan: Added support for Gemalto's Cinterion PHxx WWAN interface
0a380be8233dbf8dd20795b801c5d5d5ef3992f7 usb: host: xhci: add a new quirk XHCI_NO_64BIT_SUPPORT
c5b5343cfbc9f46af65033fa4f407d7b7d98371d cdc_mbim: apply "NDP to end" quirk to all Huawei devices
bf5ce5bf3cc7136fd7fe5e8999a580bc93a9c8f6 usb: core: lpm: fix usb3_hardware_lpm sysfs node
498378d9d2c12d97318028f1a648d98ee7568430 usb: core: lpm: remove usb3_lpm_enabled in usb_device
404814af69d4732276319b90886b81fb2884ae1b net: cdc_ncm: add "ndp_to_end" sysfs attribute
8055555fc4590fbda32d4bbf7888bdb2cd4b2b74 usb: musb: core: Fix handling of the phy notifications
b70183db83552cf63cac51406aaf76a2cf5fca73 asix: silence log message from oversize packet
b25472f9b96159cc0b9b7ed449448805973cd789 new helpers: no_seek_end_llseek{,_size}()
e4953910aee0c1a8f7f0fff598354948c2702900 lan78xx: change to use updated phy-ignore-interrupts
7dd9cba5bb90ffa9c60c1533b715dc91c5082cd9 usb: sysfs: make locking interruptible
b4a90d04ac79349799f65dfd7fa30b2aac6b2a4d usb: no locking for reading descriptors in sysfs
f7d34b445abc00e979b7cf36b9580ac3d1a47cd8 USB: Add support for usbfs zerocopy.
87177ba6e47e4e3268b999843399ee1566f682ac lan78xx: replace devid to chipid & chiprev
349e0c5e2237744d2acc1bdb52526a69c5fdcd52 lan78xx: add ethtool set & get pause functions
d0fc35bc0889c7157527ed5758f54101ec015839 usb: fsl: drop USB_FSL_MPH_DR_OF Kconfig symbol
20ff55655a93554611fb7790c8a2d29ee4598d24 lan78xx: handle statistics counter rollover
d883f52e1f6d2eca8378e3795f333c1396943873 usb: devio: Add ioctl to disallow detaching kernel USB drivers.
3e3dc25fe7d5e33026bdfca5e8fab08be6a8729c crypto: Resolve shadow warnings
be34c62ddf39d1931780b07a6f4241393e4ba2ee scsi_transport_srp: Introduce srp_wait_for_queuecommand()
93079162bf0ed2934c7b0c3ee93ba894df8fb3cd scsi_transport_srp: Fix a race condition
2ecb204d07ac8debe3893c362415919bc78bebd6 scsi: always assign block layer tags if enabled
afc16604c06414223478df3e42301ab630b9960a target: Remove first argument of target_{get,put}_sess_cmd()
c1e9af0ca1f8adb7f3badfc027fa42ecfcb34956 cxgb4: Use FW LDST cmd to access TP_PIO_{ADDR, DATA} register first
2f1b6b7d9a815f341b18dfd26a363f37d4d3c96a iser-target: release stale iser connections
66cf188eba524e19f1d2bd654a9d656d7432db80 cxgb4: Support for user mode bar2 mappings with T4
76357c715f32b61ce4d6b0c9daaf85a356498dfd xprtrdma, svcrdma: Switch to generic logging helpers
21a447637d28eb824a1163c1fc5f41ffa4b28e33 cxgb4: missing curly braces in t4_setup_debugfs()
a44e7b73118b21176bdf6376c620d778a0ff0ee2 cxgb4 : Only pass app selector of 0 or 3 to firmware
0b2c2a931a051e75f9df429b520bb2c2f2bb056b cxgb4: Add debugfs entry to enable backdoor access
5888111cb8f7368304db42787c9495d4b2b82e06 cxgb4: Add debugfs support to dump meminfo
d86bd29e0b31f30d5d85ab21385b59703ecc6464 cxgb4/cxgb4vf: read the correct bits of PL Who Am I register
467fa15356acfb7b2efa38839c3e76caa4e6e0ea RDS-TCP: Support multiple RDS-TCP listen endpoints, one per netns.
9a1bb9f64e31febbcf289809343bc7bbbac15519 cxgb4: Differentiates between TIDs being used in TCAM and HASH
a4011fd470d334253a425942b29e65844642d0ff cxgb4: Add debugfs support to dump tid info
8e3d04fd7d70679eed631ba5889f81b2d9415404 cxgb4: Add MPS tracing support
6a3c2f838c69406688ed0dbae473c3a08eeb5519 enic: use netdev_<foo> or dev_<foo> instead of pr_<foo>
c938a003448063382e0575aee2d381d4cd7aec34 cxgb4: memory corruption in debugfs
dc58f760e2e1f8f2265b581d35f211415c4fee0c target/iscsi: Replace conn->login_ip with login_sockaddr
13a3cf08fa1e4b3a252f24202d47a556242aea03 target/iscsi: Replace __kernel_sockaddr_storage with sockaddr_storage
84cc6ac62d4386f5b6d9ccf2900686b5648e230f iw_cxgb4: Add support for clip
5da0354726e4a6ae2e25c1fa2feb77585d997b05 net/mlx4_en: Port aggregation configuration
79857cd31fe70145ff007d4e968557af342c8ccd net/mlx4: Postpone the registration of net_device
5070cd2239bd4b382c55c212f10b845ec2de31fc IB/mlx4: Replace mechanism for RoCE GID management
db0a6cbd21d6ece6587c157b3d183521bc8a2781 IB/iser: Change some module parameters to be RO
32467c420bb68776ebaa53ddf6712e1dba7bb5da IB/iser: Unify fast memory registration flows
df749cdc45d9f97cb0a5e6ceab80e2e00ee9bf85 IB/iser: Support up to 8MB data transfer in a single command
7332bed085c68fc76462583a1003c6dca2c31e11 IB/iser: Chain all iser transaction send work requests
8f384c0177a03640312b9cb3638c998b32243b63 RDS: rds_conn_lookup() should factor in the struct net for a match
46cdc9be0841b30ba612aec1878cb746faf280a4 cxgb4: fix usage of uninitialized variable
f2be053c83ee93888fc09d90df2bded0deb28947 cxgb4: changes for new firmware 1.14.4.0
ed8cb0a4378c0e7035db047987fe0e7309020ab5 iser-target: Remove np_ prefix from isert_np members
bd3792205aaeb79b994338af2e5499fa503d79c7 iser-target: Fix pending connections handling in target stack shutdown sequnce
bb6c96d72879fe1f674a804eb95b891def4ace61 xprtrdma: Replace global lkey with lkey local to PD
3cffd930171518821595839c5ce7036894ef0d74 IB/iser: Add module parameter for always register memory
5e2a5ebc3f94027d0f2ffd33d3f3adbc856775d3 cxgb4: Add HW timesptamp support for RX
3b20fc389705a4c959adebc494578cb99bb8be9e RDS: Use a single TCP socket for both send and receive.
f4f943c958a2869b0601092857c1cf0e485d3ce8 RDS: IB: ack more receive completions to improve performance
0c28c04500cf956c82d542c199f5bddabd590af3 RDS: IB: split send completion handling and do batch ack
9441c973e1e0e9885537a3a86020fe8e121e9a98 RDS: IB: handle rds_ibdev release case instead of crashing the kernel
e622f2f4ad2142d2a613a57fb85f8cf737935ef5 IB: split struct ib_send_wr
5eae15927b3bccca6497506c8da38895da029b98 IB/ipath: Remove fast registration from the code
25556ae6b965321c7e7469faa06ddbeae50dac91 IB: remove xrc_remote_srq_num from struct ib_send_wr
931cf9a3e55c7a4c0d7340140643ce6fdf7b6e96 ib_pack.h: Fix commentary IBA reference for CNP in IB opcode enum
279998059729422fc0d551b5deb266a174cbab47 cxgb4: T6 adapter lld support for iw_cxgb4 driver
963cab508296a06ed8063c848f32d74f2b4b4c26 iw_cxgb4: Adds support for T6 adapter
55ee3ab2e49a9ead850722ef47698243dd226d16 IB/core: Add netdev and gid attributes paramteres to cache
d300ec528b799ca87935b3667f5563f397f00f85 IB/core: Expose and rename ib_find_cached_gid_by_port cache API
ba36e37fd3ca3dc8f215b14bcfdccf9f41b65767 IB/core: Add netdev to path record
c2c6ff134596e2691de7506667b712bef93cb1f0 IB/cm: cm_init_av_by_path should find a GID by its netdevice
abae1b71dd37bab506b14a6cf6ba7148f4d57232 IB/cma: cma_validate_port should verify the port and netdevice
99b27e3b5da0871cb43980960fb14ff625adffad IB/cache: Add ib_find_gid_by_filter cache API
dbf727de7440f73c4b92be4b958cbc24977e8ca2 IB/core: Use GID table in AH creation and dmac resolution
10e07f13c06690488087f5d3f2c59a9728def339 IB/core: Remove smac and vlan id from path record
dd0107a08996c0ab8cac2b98ddbed5313e118e81 IB/iser: set block queue_virt_boundary
630c3183cec33b502e80846e728c3ff165d1c84d IB/iser: Enable SG clustering
565edd1d555513ab5d67a847d50d7c14c82ef6c3 IB/addr: Pass network namespace as a parameter
fa20105e09e97e81aadf02f722c31195e4a75c84 IB/cma: Add support for network namespaces
95893dde99d9d14f8a6ac99ea3103792a8da5f25 IB/ucma: Take the network namespace from the process
4c67e2bfc8b7121d51434362fa7c2d012f8bcf1b IB/core: Introduce new fast registration API
1b2cd0fc673c0bf9a37c6456267a7246fdd6a816 IB/mlx4: Support the new memory registration API
14fb4171ab1c298101697fe844dbf062ff6f4adf RDMA/cxgb3: Support the new memory registration API
8376b86de7d35d43cf1a33a1f43bc015b5a095d9 iw_cxgb4: Support the new memory registration API
38071a461f0a87a86ece011356bdac991795ce04 IB/qib: Support the new memory registration API
39405885005a8b01e3523d3351ea74ae3b965842 IB/iser: Port to new fast registration API
16c2d702f2c76892f47944a53d9e1ce42023046d iser-target: Port to new memory registration API
4143f34e01e9cdf1882f98c54d9073e4de8c28fb xprtrdma: Port to new memory registration API
412a15c0fe537c59c794d4e8134580b9cb984a0c svcrdma: Port to new memory registration API
9ddc87374af90ee694bcc8d3412c6f2b51df1fea RDS/IW: Convert to new memory registration API
26630e8a09b72e8783e8963781d39e7edb2a60b9 IB/srp: Split srp_map_sg
f7f7aab1a5c0a495ae9a2d604badd1e3f9f20795 IB/srp: Convert to new registration API
51c2b8e2ac872cd90a12c5e606eeb0daf1a91e25 IB/srp: Remove srp_finish_mapping
dd01e66a6c532a8cd183cbc02ebaef99f186345f IB/mlx5: Remove old FRWR API support
e761c67fbf20d60175750ce2994822f30f2edf6a IB/mlx4: Remove old FRWR API support
191cfed565c0435aeced5f11f6cf9b03ec380d5b RDMA/ocrdma: Remove old FRWR API
94e585cb7467a3e4cecb7267cd8303d2b693a8b9 RDMA/cxgb3: Remove old FRWR API
d3cfd002e6586d715515c2f293cf04cf72b33002 iw_cxgb4: Remove old FRWR API
b8533eccc8eadabc559ed25e4b848c71a2433c18 IB/qib: Remove old FRWR API
13d3e895faf68ab5f1981298198897a20b35827a RDMA/nes: Remove old FRWR API
349abd059ed195c75b5f787102a333a4dae10775 IB/hfi1: Remove fast registration from the code
39bfc271bd687be2c8e396e976c0fb9a97963400 IB/core: Remove old fast registration API
8610586d820aa75dc7da470d77fc23492c2492f8 xprtrdma: don't log warnings for flushed completions
4220a07264c0517006a534aed201e29c8d297306 xprtrdma: Prevent loss of completion signals
b0e178a2d8ad4bd6c6bbf5d3f3cf50ca8907581b xprtrdma: Refactor reply handler error handling
1e465fd4ff475cc29c866ee75496c941b3908e69 xprtrdma: Replace send and receive arrays
fe97b47cd623ebbaa55a163c336abc47153526d1 xprtrdma: Use workqueue to process RPC/RDMA replies
2da9ab3008f359857eb594b0b4b0fee62f2a73c2 xprtrdma: Remove reply tasklet
a5b027e1897c811401862877d0ba4ca26fabc4da xprtrdma: Saving IRQs no longer needed for rb_lock
f531a5dbc451afb66e9d6c71a69e8358d1847969 xprtrdma: Pre-allocate backward rpc_rqst and send/receive buffers
124fa17d3e33060fbb28e995a42c7f5c8b31b345 xprtrdma: Pre-allocate Work Requests for backchannel
83128a60ca74e996c5e0336c4fff0579f4a8c909 xprtrdma: Add support for sending backward direction RPC replies
63cae47005af51c937f4cdcc4835f29075add2ba xprtrdma: Handle incoming backward direction RPC calls
76566773a1f1c2295ed901b6f1241cfe10d99029 NFS: Enable client side NFSv4.1 backchannel to use other transports
64d513ac31bd02a3c9b69ef04444f36c196f9a9d scsi: use host wide tags by default
d4e28cbd24c8cb004960ddb8b22124953f6c220c net/mlx5e: Use the right DMA free function on TX path
785f742223c03ec70f9dcf36b87f59e9df2067e0 IB/qib: Fix qib_mr structure
1d784b890c0101db2556b981e864c2282a3c1b02 IB/core: Fix user mode post wr corruption
fc925518aa04ee9f03c4e0cadd9c59f1ef48bcfa IB/srp: Initialize dma_length in srp_map_idb
57b0be9c0fb0ba3a35683c6ce21db7162d6758c5 IB/srp: Fix srp_map_sg_fr()
8f5ba10ed40a9d3ffe84854984227d011a7428bd IB core: Fix ib_sg_to_pages()
c6002d5602ab36c19ef4fe0e20ecfa28aaabf028 RDMA/ocrdma: Fix vlan-id assignment in qp parameters
49efd866193253f8b0322b73791b473e8e4eb688 staging/rdma/hfi1: Remove unnecessary include files
701e441d82689c21afd699b229d338783f3463b1 staging/rdma/hfi1: Move macros to a common header
b8759e917e9c78ef35c10a79ce47c5889306aaa8 cxgb4/cxgb4vf: update Kconfig file to include T6 adapter
59fae4deaad388351c690422b88787e6fd5f45ab IB/srpt: chain RDMA READ/WRITE requests
1dc7b1f10dcbbaf875a0770b2b26d63bc326d92a IB/srp: use the new CQ API
7edc5a999d6bec1b5ef4d363b78578c0a723ef69 IB/iser: Use helper for container_of
cfeb91b375ad5f52665e00d374a4e403d2e6063e IB/iser: Convert to CQ abstraction
38b95bcf122545db7035a06d79ec9e851be2e011 xprtrdma: clean up some curly braces
abfb689711aaebd14d893236c6ea4bcdfb61e74c xprtrdma: checking for NULL instead of IS_ERR()
9b06688bc3b9f13f8de90f832c455fddec3d4e8a xprtrdma: Fix additional uses of spin_lock_irqsave(rb_lock)
c8bbe0c7fec3a6fd01d445eea11e72e902403ea9 xprtrdma: Disable RPC/RDMA backchannel debugging messages
3cf4e169be95e1a3a70a063b6bd8103fbd5911f3 xprtrdma: Move struct ib_send_wr off the stack
c9918ff56dfb175ce427140c641280d0b4522dbe xprtrdma: Add ro_unmap_sync method for FRWR
5d9157aafb16bed45e3bf167baa16f1fbe1090cd staging/rdma/hfi1: Read EFI variable for device description
4a061b287b1eb58676875cc45929679911d1ca38 IB/ulps: Avoid calling ib_query_device
e3e45b1b43988b99007a9908ca0ba738b3fbd0ff xprtrdma: Avoid calling ib_query_device
9c584f04959620e587b3b3d358076dab48a8893c IB/core: Change per-entry lock in RoCE GID table to one lock
cee3c4d0c56876f46f4584385603adb30a7cacf7 IB/core: don't search the GID table twice
b39ffa1df505378336a85064ad9ec403765bbb0b IB/core: Add gid_type to gid attribute
cb57bb849effcaa83addd739595d3dea3a5905fb IB/cm: Use the source GID index type
7766a99fdcd30c78fc8299db9102e3624232007c IB/core: Add ROCE_UDP_ENCAP (RoCE V2) type
c865f24628b9310e1815d59f723a34ea3df4890f IB/core: Add rdma_network_type to wc
200298326b276d8dbeff204f7d407432100d9963 IB/core: Validate route when we init ah
045959db65c67d7189dc89ecddb5fa10aafa449d IB/cma: Add configfs for rdma_cm
25f40220e56b507fce186985c0ed2967b7f04596 IB/core: Initialize UD header structure with IP and UDP headers
bee3c3c91865d520cb692689500df051e4ca3dd6 IB/cma: Join and leave multicast groups with IGMP
0de60af649533ad8d9aaeab1df710e6a728d45ea net/mlx5_core: Introduce access functions to enable/disable RoCE
9efa75254593d6ca3ae54bac8153f47e1a7cbcda net/mlx5_core: Introduce access functions to query vport RoCE fields
b7d3e0a94fe128912bbebf0ae68551c85fd2d429 IB: remove support for phys MRs
feb7c1e38bccfd18cc06677cb648ed2340788fe8 IB: remove in-kernel support for memory windows
f64054d850720cf60dc4365249cfa0c9fd03ed65 nes: simplify nes_reg_phys_mr calling conventions
7cf9ff643b7f709173ca6ff6376fdff5b8d16124 IB: remove the struct ib_phys_buf definition
ab67ed8de0250e9ad7956ff4d98c3c98858b6c3c IB: remove the write-only usecnt field from struct ib_mr
44588560d95c105cc9dfa82180a6f542adea9ac9 cxgb4: Update pm_stats for T6 adapter family
115b56af88b538147cf241d0f75a370a73009ed9 cxgb4: Update mps_tcam output to include T6 fields
2216d01432cb1589d1bfbd2722f2ec05cb26ea51 cxgb4: Update SGE context congestion map change for T6 adapter
301a721e1fcb890afc29997f46de9561686ed391 IB/core: Add ib_is_udata_cleared
7c60bcbb68122b39fe3e92143abce01be75f3fa6 IB/mlx5: Add support for hca_core_clock and timestamp_mask
bfe066e256d55562b00c2d4897ae52e1545a084e IB/iser: Reuse ib_sg_to_pages
b5f04b00f73d8f5d7755f5be7d05258641d99126 IB/iser: Don't register memory for all immediate data writes
1caa70d8a7c0e8427cb8381f29e759bda4ea2dcd IB/iser: set intuitive values for mr_valid
d3cf81f9c805d599e91d1dcaebdd82ec17c299a6 IB/iser,isert: Create and use new shared header
c64941533f8bbb724d9f1cb99ba7c429d19a69a4 IB/isert: Remove unused file iser_proto.h
422bd0acb062cd0c14f2af61db76c4f598903ad3 IB/isert: Support the remote invalidation exception
e26d2d21ff8e3e4f9768960a83e4b7be43f0aeed IB/iser: Change the increment rkey flow logic
59caaed7a72a0e3750dfb84636dae6b781559310 IB/iser: Support the remote invalidation exception
34802a42b3528b0e18ea4517c8b23e1214a09332 net/mlx5e: Do not modify the TX SKB
b0844444590e18704644f707ea88bff1b976b0e7 net/mlx5_core: Introduce access function to read internal timer
ef9814deafd0c83a358d49e3709c3e16cc352118 net/mlx5e: Add HW timestamping (TS) support
3d8c38af149309feb2541b995b3a45df170d6da3 net/mlx5e: Add PTP Hardware Clock (PHC) support
89e7a154e01cffa325874e90cbb124057416de02 cxgb4: Fixes static checker warning in mps_tcam_show()
649367735ee5dedb128d9fac0b86ba7e0fe7ae3b IB/cma: Fix RDMA port validation for iWarp
bc1251e6d9420fec4c6b328bcf9ea4e5bdecd30d RDMA/nes: checking for NULL instead of IS_ERR
82b1df1b083ff1b1c45fcdf5a844351cdca03ed8 iw_cxgb4: Fixes static checker warning in c4iw_rdev_open()
4275a5b20043005ec6ceee67c1d352e798b0f5a1 iw_cxgb4: Fixes GW-Basic labels to meaningful error names
28de1f74374da4f0f628b14bbccb07e5637d00b1 iw_cxgb4: Take clip reference before starting IPv6 listen
1049f138166ad6ca2e1c8edd2317a71f5b21b9fe IB/mlx4: Take source mac from AH instead from the port
0ee28e31553a6f2ed13223e565ae5a4d7a376942 qed: Replace memset with eth_zero_addr
d53e11fdf0538a972ad4f1e5ec315d3e35c1aae9 IB/mad: use CQ abstraction
b6aeb980f1e143f3237365710290b199e9363eeb IB/core: Remove set-but-not-used variable from ib_sg_to_pages()
9506902b7be2d8ccc235c14ccaec7f07b2c7d520 IB/core: Fix dereference before check
19f57298f03825e36aefc866d8472b43780538d4 IB/srpt: Fix the RDMA completion handlers
f7f4b23e27f7561330ef13f93dbe8f2dc410efa7 IB/core: Rename rdma_addr_find_dmac_by_grh
c3efe7500add077f79d37b18e9c66df6621409b6 IB/core: Use hop-limit from IP stack for RoCE
3d61677c4d5f40529fb26c8f45c0d3a1bba47c66 svcrdma: Clean up rdma_create_xprt()
71810ef3271d1a06f7002c55c7e354d8c3233762 svcrdma: Remove unused req_map and ctxt kmem_caches
03fe9931536fe4782e9e34f7f499d588acd2015b svcrdma: Define maximum number of backchannel requests
5d252f90a800cee5bc57c76d636ae60464f7a887 svcrdma: Add class for RDMA backwards direction transport
5fe1043da84887369d32459514f2c7d98ff37936 svc_rdma: use local_dma_lkey
b699a859d17b3a7a8edc5441ee99d245dfd9f86c IB/mlx4: Add gid_type to GID properties
7ead4bcb1b788732516755ef84ef1272d3e152eb IB/core: Add definition for the standard RoCE V2 UDP port
3b5daf28ac4bb9354b7d2f10ce5942cad23e979a IB/mlx4: Support modify_qp for RoCE v2
71a39bbbfc5931310073ecbbdbe6d0fa92501fe4 IB/mlx4: Enable RoCE v2 when the IB device is added
3ef967a4affeef7bb3b7713dcfed6518b99737c6 IB/mlx4: Enable send of RoCE QP1 packets with IP/UDP headers
967bcfc0f5744c1553545883bbb43df1d41cbb5c IB/qib: Improve ipoib UD performance
19098df2da784c851532c78bd570cb1c8f4aff52 IB/mlx5: Refactor mlx5_ib_qp to accommodate other QP types
0fb2ed66a14c8c34096d6a8cff5112356c5e9ea2 IB/mlx5: Add create and destroy functionality for Raw Packet QP
427c1e7bcd7e5cd62160fcda0ce215ebbe0da3a1 {IB, net}/mlx5: Move the modify QP operation table to mlx5_ib
ad5f8e964cd0a88c746577aab2c6ea26e3b26673 IB/mlx5: Expose Raw Packet QP to user space consumers
09f16cf59fbf825130c216c3af189253505dc9d9 IB/mlx5: Fix use of null pointer PD
01581fb89e5a6d41d06132aefe105a506f04ce1e IB/mlx5: Use MLX5_GET to correctly get end of padding mode
1c5e08099022942cd530c99f5f292c735acc288f IB/core: Set correct payload length for RoCEv2 over IPv6
b4ff3a36d3e409d365a09b6b783ff895063ff4ef net/mlx5: Use offset based reserved field names in the IFC header file
b0eed40ea15235b1dd138093901569077ba532ee net/mlx5e: Use static constant netdevice ndos
9f74660bcf1e4cca577be99e54bc77b5df62b508 xprtrdma: rpcrdma_bc_receive_call() should init rq_private_buf.len
0ad9b20415a461332611666301e7812900a15ad4 net/mlx5e: Fix soft lockup when HW Timestamping is enabled
bdfc028de1b3cd59490d5413a5c87b0fa50040c2 net/mlx5e: Fix ethtool RX hash func configuration change
b081da5ee1860d1874381a413a1b71d8f9f67e83 net/mlx5e: Add rx/tx bytes software counters
11d8d645343efba0c975aefe7c2cf3b33c836c75 IB/core: Use GRH when the path hop-limit > 0
ce9113bbcbf45a57c082d6603b9a9f342be3ef74 ovl: fix getcwd() failure after unsuccessful rmdir
b81de061fa59f17d2730aabb1b84419ef3913810 ovl: copy new uid/gid into overlayfs runtime inode
11f3710417d026ea2f4fcf362d866342c5274185 ovl: verify upper dentry before unlink and rename
6986c012faa480fb0fda74eaae9abb22f7ad1004 ovl: cleanup unused var in rename2
54d5ca871e72f2bb172ec9323497f01cd5091ec7 vfs: add vfs_select_inode() helper
3c9fe8cdff1b889a059a30d22f130372f2b3885f vfs: add lookup_hash() helper
38b78a5f18584db6fa7441e0f4531b283b0e6725 ovl: ignore permissions on underlying lookup
216639dd5091de4f4d7ad19b0b8dde11fad18286 libceph: a couple tweaks for wait loops
fdd4e15838e59c394a1ec4963b57c22c12608685 ceph: rework dcache readdir
757856d2b9568a701df9ea6a4be68effbb9d6f44 libceph: enable ceph in a non-default network namespace
d920ff6fc7c1ec3d7bd80432bff5575c0ebe426c libceph: Avoid holding the zero page on ceph_msgr_slab_init errors
8b9558aab853e98ba6e3fee0dd8545544966958c libceph: use keepalive2 to verify the mon session is alive
7f61f545657281a3a1b0faf68993165ebdecc51b libceph: don't access invalid memory in keepalive2 path
bae818ee1577c27356093901a0ea48f672eda514 rbd: require stable pages if message data CRCs are enabled
b5b98989dc7ed2093aeb76f2d0db79888582b0a2 ceph: combine as many iovec as possile into one OSD request
859bff51dc5e92ddfb5eb6f17b8040d9311095bb libceph: stop duplicating client fields in messenger
583d0fef756a7615e50f0f68ea0892a497d03971 libceph: clear msg->con in ceph_msg_release() only
c8fe9b17d055fe80e1a1591f5900ce41fbf6b796 ceph: Asynchronous IO support
5be0389dac662995eade757ec678931f0be23d33 ceph: re-send AIO write request when getting -EOLDSNAP error
99c88e6900fb05d267ae9f6d5e15dc7192ba6f8d ceph: use i_size_{read,write} to get/set i_size
1418bf076d08edd47a610ea3844c6f6012949a51 ceph: checking for IS_ERR instead of NULL
db6aed70235b35a113e1b0e81cb293fd2e92de0f ceph: fix snap context leak in error path
5ea5c5e0a7f70b256417d3b6e36bd9851504babd ceph: initial CEPH_FEATURE_FS_FILE_LAYOUT_V2 support
82dcabad750a36a2b749889bc89c5a3188775b2e libceph: revamp subs code, switch to SUBSCRIBE2 protocol
0e04dc26cc594d31ee6b1382b452b6bc83b57937 libceph: pick a different monitor when reconnecting
58d81b1294f02262a141687cd62529c1ec8e6484 libceph: monc ping rate is 10s
168b9090c739c4b5556023a3f08789b349ca7339 libceph: monc hunt rate is 3s with backoff up to 30s
1752b50ca240a7f722f57e81ba04496eb15c466f libceph: introduce and switch to reopen_session()
bee3a37c470e4febcb05556ceafcb70929268edd libceph: reschedule tick in mon_fault()
b5d91704f53efc5a2a93e88e323877e6889b0f5b libceph: behave in mon_fault() if cur_mon < 0
a587d71b0a4b222762e9c3a2352f076532685d9f ceph: remove useless BUG_ON
8bbd47140cf0d3f1cef882cc553778f417087606 ceph: replace CURRENT_TIME by current_fs_time()
34b759b4a22b0acb82423389a24699357798cf3c ceph: kill ceph_empty_snapc
af5e5eb574776cdf1b756a27cc437bff257e22fe ceph: fix race during filling readdir cache
a3d714c33632ef6bfdfaacc74ae6ba297b4c5820 ceph: avoid updating directory inode's i_size accidentally
7221fe4c2ed72804b28633c8e0217d65abb0023f ceph: add acl for cephfs
7a92d64760541e66bf5d1131f029b82773ce3922 ceph: fix ceph_set_acl()
c969d9bf91e1868d823351993216cd64dfab6a4c ceph: make ceph_forget_all_cached_acls() static inline
979d4c1895474aafa473f441846dd3b6f7276202 ceph: remove useless ACL check
b20a95a0dd47c56c5d20e1c9e260293d0b87abe0 ceph: add missing init_acl() for mkdir() and atomic_open()
b1ee94aa593abd03634bc3887b8e189840e42c12 ceph: include the initial ACL in create/mkdir/mknod MDS requests
45195e42c78ea91135108207dbcaf75e5556a309 ceph: add acl, noacl options for cephfs mount
315f24088048a51eed341c53be66ea477a3c7d16 ceph: fix security xattr deadlock
641235d8f823574961d225bdbfaef299842aa38c ceph: kill ceph_get_dentry_parent_inode()
99ec269779f1fde25356e14299419551cdb54443 ceph: use kmem_cache_zalloc
3ed97d6345a36a0a61e6af62ad8a66ca40f1aa2e libceph: make ceph_osdc_put_request() accept NULL
13d1ad16d05eebb4db977eb955716b9da2c19fbd libceph: move message allocation out of ceph_osdc_alloc_request()
711da55d36a6f1eddcd340969be7223110d2f6b0 libceph: change how osd_op_reply message size is calculated
d30291b985d1854565d7f2c82a4457869d5265e8 libceph: variable-sized ceph_object_id
42a2c09f2b0b95fa147bcdb56cdc02b980b9ac5e libceph: open-code remove_{all,old}_osds()
d9591f5e28686277d9312d3c7422faf1368b305e libceph: rename ceph_oloc_oid_to_pg()
63244fa123a755e4bbaee03022b68613c71d1332 libceph: introduce ceph_osd_request_target, calc_target()
a66dd38309f5d9c66ec9bc7911ff8da8cc37bb9f libceph: switch to calc_target(), part 1
bb873b539154ab51893430b4ad6ba4051775276a libceph: switch to calc_target(), part 2
85e084feb47349d62989efe1713a8723af95f4ea libceph: drop msg argument from ceph_osdc_callback_t
fe5da05e979830b43b115d8a18ead521d507c783 libceph: redo callbacks and factor out MOSDOpReply decoding
b37ee1b9b840a6da63e78865f97a9a78b7534477 libceph: move schedule_delayed_work() in ceph_osdc_init()
fbca963532eba779bffa14c70d1dc619e6bfa16d libceph: schedule tick from ceph_osdc_init()
e5253a7bde13788d9dc75f42eb47ea119af5609f libceph: allocate dummy osdmap in ceph_osdc_init()
42c1b1240326cbea86f15f5d4ce565d8b54be31f libceph: handle_one_map()
9dd2845ccb40452d4ac943231ea34aade4a02c68 libceph: protect osdc->osd_lru list with a spinlock
5aea3dcd50215fa9563270251ad7323e2f2490ee libceph: a major OSD client update
3540bfdb30fcb423a92cc959708e71bc39eb18c3 libceph: request_init() and request_release_checks()
42b0696527c49a109e9558162b8d109ae257d402 libceph: wait_request_timeout()
922dab6134178cae317ae00de86376cba59f3147 libceph, rbd: ceph_osd_linger_request, watch/notify v2
1907920324f1f3ebb6618344417c03a2863bba01 libceph: support for sending notifies
b07d3c4bd7270c74e2b6803af8ac8a00cb3e5ed2 libceph: support for checking on status of watch
4609245e2670e3698b083bcd9cc69a65b2b6f9a6 libceph: pool deletion detection
7cca78c9dcd1afa243e46edc31896730df85d2b5 libceph: replace ceph_monc_request_next_osdmap()
737cc81ead34bcef0b1f6ea8322228e4378cf21a libceph: support for subscribing to "mdsmap.<id>" maps
235a09821c2bc71d9d07f12217ce2ac00db99eba ceph: multiple filesystem support
224a7542b8fdde3cc7c600f8b0870c5541a9f678 ceph: tolerate bad i_size for symlink inode
b7ec35b304b64af2830027350cc99d31e6e537c2 libceph: change ceph_osdmap_flag() to take osdc
dc045a9168c83b2dc590930a0565e066346de382 libceph: put request only if it's done in handle_reply()
4a3262b17c96b6ff332134c9e57f193a20226eb2 libceph: use %s instead of %pE in dout()s
8edc6e1688fc8f02c8c1f53a2ec4928cb1055f4d fanotify: fix notification of groups with inode & mount marks
36e4ad0316c017d5b271378ed9a1c9a4b77fab5f GFS2: don't set rgrp gl_object until it's inserted into rgrp tree
7791e4aa59ad724e0b4c8b4dea547a5735108972 cpufreq: intel_pstate: Enable HWP by default
0080d65b7719fc58e60b5595fc61acded330004f idle_intel: Add Denverton
f7ad26ff952b3ca2702d7da03aad0ab1f6c01d7c virtio: make find_vqs() checkpatch.pl-friendly
e4c36ad756ec2de36b05c66bb50ed4ff47b0fdb0 scsi: vpd pages are mandatory for SPC-2
31143e2933d1675c4c1ba6ce125cdd95870edd85 brcmfmac: add eth_type_trans back for PCIe full dongle
af09d1a73aed4e83ee095f2dabdc09386e31f2ea xen: remove deprecated IRQF_DISABLED
8d5999df35314607c38fbd6bdd709e25c3a4eeab x86/xen: resume timer irqs early
60fcdac8136b4275da42d6edf9ddb10439350289 PCI: hv: Don't leak buffer in hv_pci_onchannelcallback()
837d741ea2e6bb23da9cad1667776fc6f0cb67dd PCI: hv: Handle all pending messages in hv_pci_onchannelcallback()
16671c1e1cac2dbb995feb4bc55082fd939b5c2c tools build: Fix Makefile(s) to properly invoke tools build
e17cf3a80d4ba0c4e40bf1a89deb1354c2e10e14 tools: Support relative directory path for 'O='
9148494c59f53bb6c9233df07447777dc533db33 tools/power/turbostat: split core MSR support into status + limit
a6415cddc4e6e1675a5648e7785aef716980c90c iscsi-target: Add tpg_enabled_sendtargets for disabled discovery
0308813724606549436d30efd877a80c8e00790e vhost_net: basic polling support
1556b8746e52501fdfaadd65837baaa63a9fa937 net/mlx4_en: Use the new tx_copybreak to set inline threshold
d237baa1cbb3a2335357484c1d63a810a01947e2 net/mlx4_core: Add basic elements for QCN
a7d0e959fab832d0614d0e144cb01cbb87d36258 IB/cma: allocating too much memory in make_cma_ports()
4f3961eeafe0aca8f6b0933899ef0d91f561352d net/mlx5: Introduce physical port TC/prio access functions
08fb1dacdd763431436d648fd9dc4246e3d5517e net/mlx5e: Support DCBNL IEEE ETS
ef9184335e4da720b374a66fe4f80a32982519ca net/mlx5e: Support DCBNL IEEE PFC
d8880795dabf2381ed1e98348f6d9c7ea6fab950 net/mlx5e: Implement DCBNL IEEE max rate
928cfe8745a62e60c1e8e06676a74724e7786024 net/mlx5e: Wake On LAN support
5f6d12d10f0c835fcd821f883f05c1107127986e net/mlx5e: Move to checksum complete
b3f63c3d5e2cbb9c800516ef47e32d8cb0cf237b net/mlx5e: Add netdev support for VXLAN tunneling
9879515895ffe46a424d00ad5ce92e32fd61790b net/mlx5e: Add TX stateless offloads for tunneling
89db09eb5979b74f1f50ee2fb2ce519ee8414c48 net/mlx5e: Add TX inner packet counters
b54ba2772b7af82a07eb48f88c88f7cadfb33401 net/mlx5_core: Add helper function to read virtual port counters
1015c2e8ca2b94d8964f8ab30d925b6f678fd9d2 IB/mlx5: Define interface bits for IPoIB offloads
b11a4f9cde1c06e0073662882b60c1fb95a1d597 IB/mlx5: Add support for setting source QP number
d16e91daf446c605a92112889552f9df757186bc IB/mlx5: Add GSI QP wrapper
ebab41cff4db96c42dfc9939d1c1715496bcf961 IB/mlx5: Create multiple transmission GSI QPs
7722f47e71e58592a2ba4437d27c802ba1c64e08 IB/mlx5: Create GSI transmission QPs when P_Key table is changed
25361e02c44873a17e0148d9d5c42fa2e938a019 IB/mlx5: Generate completions in software
ea6dc2036224aaee887f391a1ee8833bea18c68b IB/mlx5: Reorder GSI completions
83cae2aff53960ab6cf5bb82654201ce43b77fb6 IB/mlx5: Pick the right GSI transmission QP for sending
ebe6ccc53ff06a3782b95547eecb393222de057f IB/mlx5: Eliminate GSI RX QP's send buffers
a606b0f6691daf861482f8b77326f672238ffbfd net/mlx5: Refactor mlx5_core_mr to mkey
b2a239df4e65fe35240ddf3e5f9f31335c90589b IB/core: Add vendor's specific data to alloc mw
d2370e0a573e5c5ea9c96373558727abb3ea71f7 IB/mlx5: Add memory windows allocation support
daa21560a29673f63263e907045f513a8d66dc33 net/mlx5e: Replace async events spinlock with synchronize_irq()
ce89ef36d2544b4180fdb9ce9e2918196b0082f8 net/mlx5e: Placement changed for carrier state updates
c89fb18b657b07d6c98810182057f844e71d3eee net/mlx5e: Move common case counters within sq_stats struct
0ba422410bbf7081c3c7d7b2dcc10e9eb5cb46f7 net/mlx5: Fix global UAR mapping
db9314cd351ebd734970c7afc2995a743e34aa02 IB/core: Replace memset with eth_zero_addr
aba25a3e96563083389fc7b9f7d35be6bdfe6579 IB/core: trivial prink cleanup.
add08d765e942eab8eb15a592baeb372a3dd6831 IB/mlx5: Convert UMR CQ to new CQ API
0025b0bdeae7c13b8ab1dce64b0108ed9c071e2e IB/mlx5: Make coding style more consistent
f5aa9159a418726d74b67c8815ffd2739afb4c7a IB/core: Add arbitrary sg_list support
b005d316471374b1ff26df8c8460cc1ea9186647 mlx5: Add arbitrary sg list support
b3638e1a76648dbd482cc5a8f27eb6948cc3bc86 net/mlx5_core: Introduce forward to next priority action
67ba422e95edfbd42f1d9782868880b364eea173 net/mlx5e: Relax ndo_setup_tc handle restriction
8ec736e556e3340b4b4295c7567b0766d6629702 mlx5: use napi_consume_skb API to get bulk free operations
3f0393a57509c200aeecc5e3984bf1a47bffc578 net/mlx5_core: Introduce offload arithmetic hardware capabilities
50174a7f2c24d13cdeec435ee1ba70b1e0b1318f IB/core: Add interfaces to control VF attributes
2a4826fe746e01712ca53902ee75c1a1f6c0a4aa net/mlx5_core: Add VF param when querying vport counter
1f324bff9ba3db276f074169d5b4af9e9c117ba1 net/mlx5_core: Implement modify HCA vport command
eff901d30e6cebd940072637f112ce4d0090ac12 IB/mlx5: Implement callbacks for manipulating VFs
9967c70abc929e9b910be8d419fdf6a85411a066 IB/mlx5: fix VFs callback function prototypes
851b10d60879539bec8acecb35ed361393399282 net/mlx4_en: do batched put_page using atomic_sub
d29c9ab1a2c81ce404883baba91e15ae35411900 IB/core: Fix oops in ib_cache_gid_set_default_gid
c3f9bf628bc7edda298897d952f5e761137229c9 net/mlx5_core: Fix soft lockup in steering error flow
cd255efff9baadd654d6160e52d17ae7c568c9d3 net/mlx5e: Use vport MTU rather than physical port MTU
5fc7197d3a256d9c5de3134870304b24892a4908 net/mlx5: Add pci shutdown callback
5f8a02a441b861fd3b1b5135a1a6e1c13ee4bb33 net/mlx5: Unmap only the relevant IO memory mapping
7bb2975599210097115021e542b6137781a09588 net/mlx5e: Implement a mlx5e workqueue
d8cf2dda3de6e6293fb01539fb4e180a7ab42afd net/mlx5e: Use workqueue for vxlan ops
7dbb29172d415ccccad1166700d6be78dee9f2bc net/mlx5e: make VXLAN support conditional
e1c9c62b9a3a761b56359a7437215ae2e9253821 net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets
7d5e14237a551a5de3d287f2e8db2d044ee81a1a net/mlx5: Update mlx5_ifc hardware features
593cf33829adfd3d5c75d42879cc42afded1b626 net/mlx5e: Allocate set of queue counters per netdev
d8c9660dac6287490ef450bc892593f05d364531 net/mlx5e: Use only close NUMA node for default RSS
2f48af128d9aa64dd4e8c6fe97491b0bde3681b2 net/mlx5e: Use function pointers for RX data path handling
461017cb006aa1b39b0f647ae0ee2d9d84eef05b net/mlx5e: Support RX multi-packet WQE (Striding RQ)
bc77b240b3c57236cdcc08d64ca390655d3a16ff net/mlx5e: Add fragmented memory support for RX multi packet WQE
c5adb96f6c4a22aceff2e8220612c5b9239ffeb2 net/mlx5e: Use napi_alloc_skb for RX SKB allocations
e20a0db30454a07f03f3a34a79e9f35881cfaa9d net/mlx5e: Delay skb->data access
54984407564ef6b35488f52654f828c17b9d6fa8 net/mlx5e: Add ethtool counter for RX buffer allocation failures
9218b44dcc059e08e249f6f7614b8e391eb041d8 net/mlx5e: Statistics handling refactoring
8075cb72382bf854a3a95f74ea4f9d19ebe29fd5 net/mlx5e: Rename VPort counters
cf678570d5a1022c4c4dbda7792f2a36f0b9fec0 net/mlx5e: Add per priority group to PPort counters
121fcdc84d8240d4dfe1f737befd5814b12623ee net/mlx5e: Add link down events counter
0e405443e803a3ce9ba22f11be37e2a74f3fb9ad net/mlx5e: Improve set features ndo resiliency
94cb1ebbafd509210887eea6ced55c40da7b4baa net/mlx5e: Add support for RXALL netdev feature
da54d24ec3ef736de04c61a01653776a9750334f net/mlx5e: Add ethtool support for interface identify (LED blinking)
bb64143eee8c036a89b31daa4e9bf8360a8bded1 net/mlx5e: Add ethtool support for dump module EEPROM
363501145e3faa650193722fe7047b767ed87172 net/mlx5e: Add ethtool support for rxvlan-offload (vlan stripping)
1b223dd391622fde05e03829d813c3c6cc998685 net/mlx5e: Fix checksum handling for non-stripped vlan packets
45686f2d6535525a9875e4a77a35da013814de82 IB/core: Add Raw Scatter FCS device capability
358e42ea66e26d30a7a3e2c967c78f01ec31fe4f IB/mlx5: Add Scatter FCS support for Raw Packet QP
94c6825e0ff75829207af6246782811b7c7af2c0 net/mlx5_core: Use tasklet for user-space CQ completion events
811afeaa3797bdf4eabed286100811b33005c9e0 net/mlx5e: Use ndo_stop explicitly at shutdown flow
8e787646fbce895c20c4433973e90af90e1c6a28 IB/core: Fix removal of default GID cache entry
47355b3cd7d3c9c5226bff7c449b9d269fb17fa6 IB/core: Fix bit curruption in ib_device_cap_flags structure
c7e162a417488f3c79eb09f3c4f1d36f1e042463 IB/core: Make all casts in ib_device_cap_flags enum consistent
e327f4e193b6a176f4dc3b19faf6371a8917588d cisco: enic: Update logging macros and uses
162607ea20fafb4a76234ebe4314cd733345482e perf kvm/{x86,s390}: Remove dependency on uapi/kvm_perf.h
48deaa74fcdad516a94fe38a4af706747d9e4745 perf kvm/{x86,s390}: Remove const from kvm_events_tp
d1bfcdb8ce0ea6eb6034daa7ff02548e0bc9c21b mm: hide per-cpu lists in output of show_mem()
761b06771adeeb734e9eebc6f70f916cb9e2f643 mm: completely remove dumping per-cpu lists from show_mem()
424a5da6919073392c11345d1b7baa9f31c62734 crypto: testmgr - limit IV copy length in aead tests
abfa7f4357e3640fdee87dfc276fd0f379fb5ae6 crypto: testmgr - fix out of bound read in __test_aead()
a4bb1e43e22d3cade8f942fc6f95920248eb2fd0 mm/util: add kstrdup_const
8a0662d9ed2968e1186208336a8e1fab3fdfea63 Driver core: Unified interface for firmware node properties
45c42a7f582cc07259bc78910de8b0b1c94094d5 ACPI: Provide acpi_dev_name accessor for struct acpi_device device name
c68ae33e7fb4a010f9a48af3e4b87089dca96551 ACPI / utils: Rename acpi_dev_present()
a87fa1d81a9fb5e9adca9820e16008c40ad09f33 of: Fix overflow bug in string property parsing functions
0a8198094da895c8d5db95812fe9de7027d808e4 regmap: Simplify the initiation of async I/O
29a1f2333e07bbbecb920cc78fd035fe8f53207a gpio: Add helpers for optional GPIOs
39b2bbe3d715cf5013b5c48695ccdd25bd3bf120 gpio: add flags argument to gpiod_get*() functions
0dbc8b7afef6e4fddcfebcbacbeb269a0a3b06d5 gpio: move varargs hack outside #ifdef GPIOLIB
58b84f6a97f7f8811e0636836734809ff52cad43 gpio: move GPIOD flags outside #ifdef
5a267953baca23c49f78a2e365aa0f44f762b0c1 staging: rdma: Use kcalloc instead of kzalloc
94b397cd253396c601d871f250cd93362618bdf6 staging: rdma: hfi1: Replace kmalloc and memcpy with kmemdup
f727a0c324ce2c7e7cbe478d22895bf7bc8ed0a6 staging/hfi1: Add function stubs for TID caching
b8abe346737215c6ee6b50c01771b4ca1746801d staging/hfi1: TID group definitions and support funcs
f88e0c8a139dc737b997876203885a3168c32e95 staging/hfi1: Add building blocks for TID caching
3abb33ac652135da9c3c36d9def73ede67e4ba03 staging/hfi1: Add TID cache receive init and free funcs
b5eb3b2ffd1bf5be17df08565f4ab56c3fdae43e staging/hfi1: Add MMU notifier callback function
455d7f1ab86b7b1703898c75c4bc01df869da4a6 staging/hfi1: Add TID free/clear function bodies
7e7a436ecb6e703a232df0613b5f24accbe3d7d2 staging/hfi1: Add TID entry program function body
0b091fb32c5ae4737bf606a313e6625dad34bbc6 staging/hfi1: Enable TID caching feature
f44728d69a8ac8552fe3f0c8aa898014fa6f3b9c IB/qib: Use rdmavt protection domain
9ff198f5f2c251fc33dab45a7fc1b79c138d51b5 IB/qib: Remove most uses of QIB_PERMISSIVE_LID and QIB_MULTICAST_LID_BASE
7c2e11fe2dbe69ba78c7a363f83474ad2c11ede7 IB/qib: Remove qp and mr functionality from qib
96ab1ac13f444e72d353fdd94b2cfacaaaef9de9 IB/qib: Use address handle in rdmavt and remove from qib
894c727b6af8cfd29fcb2b9db4520533d9e8d6a5 IB/qib: Remove srq from qib
f24a6d4887668cc2925b1e908c72b96a2604a814 IB/qib: Remove ibport and use rdmavt version
5418a5abc96f908d31bfecee143fbf330ded60c1 IB/qib: Implement qib support for AH notification
cd18201f5ec8b04a8eb9ef3f3b559cba55955598 IB/qib: Remove mmap from qib
76fec3e08c1205c4b57bd934727cbbf7223b8dac IB/qib: Use rdmavt pkey verbs function
898fa52b4ac3bb3ba306e1aa94bc7fbc79bfd2bd IB/qib: Remove qpn, qp tables and related variables from qib
1da0f7e2041ec54657eea25ed84612819c7a2cba IB/qib: Delete QIB user context allocation and de-alloction functions
0aeddea29c78299e4b022aa0bb978ed87e33f678 IB/qib: Remove qib_query_device function
01ba79d4dddcf4ca3669f8dc4658322342793fee IB/qib: Use rdmavt send and receive flags
47c7ea6d8e70510c3b3e311cfc20943cd3fe786a IB/qib: Remove create qp and create qp table functionality
5196aa96e18a7b3ccbf5ec4705fe7981aee03771 IB/qib: Remove create and free mad agents
4bb88e5f84326ff6343bc64a33040850f45b44d8 IB/qib: Remove completion queue data structures and functions from qib
db3ef0eb84947e341b923c435ace2520d097d014 IB/qib: Use rdmavt version of post_send
a7d34a47f212ae6bd7f4748aebcc4f1192a048d1 IB/qib: Remove qib_post_receive and use rdmavt version
18f6c582b366d3ec76317458f498e24a4379c299 IB/qib: Remove qib multicast verbs functions
034a3e7079aabc028783755d0ea1406fe9453d52 IB/qib: Remove qib_query_qp function
fd0bf5bedfbd898bddc9ea8e646b4cb3779ec9ab IB/qib: Remove srq functionality
9e804b1f2d9790ba69d7e27a44500bd4448215dc IB/qib: Clean up register_ib_device
1cefc2cd20f1d2b4e84bba14d5a5bf5d44936dc6 IB/qib: Remove qib_lookup_qpn and use rvt_lookup_qpn instead
70696ea75b0b9d2cb220a09ea19d72a49f501d8e IB/qib: Remove modify queue pair code
8e4c066634aa35e7da08981439f4f1b6693fd9fb IB/qib: Remove destroy queue pair code
2366754632d3e52a97bf607a22bcca592a46f3f9 IB/qib: Support query gid in rdmavt
530a5d8ebd0d80c52aa7cbdb2127ff45b0db97ae IB/qib: Remove modify_port and port_immutable functions
ec3f2c12a1e6bea48fd58f2dfa97d7373263b39a staging/rdma/hfi1: Begin to use rdmavt for verbs
583be13cde4f90aeac5d3c7ba555fb4909553c16 staging/rdma/hfi1: Add basic rdmavt capability flags for hfi1
f326674ae374e08b34d8b02b2357bad4ef07317c staging/rdma/hfi1: Consolidate dma ops for hfi1
49dbb6cf1739e1eefa7ed3849430144bb817fdc6 staging/rdma/hfi1: Add device specific info prints
8859b4a6d08bcbd804459274c6f4134aaf6ace8a staging/rdma/hfi1: Use correct rdmavt header files after move.
15723f06fb9d80cbfd895c32c6023881c7d0e0b4 staging/rdma/hfi1: Use address handle in rdmavt and remove from hfi1
8f1764fa2ba5a39c651316998f40631e8492081d staging/rdma/hfi1: Implement hfi1 support for AH notification
895420ddc8b35099ddd25132f5707306e70f0d6a staging/rdma/hfi1: Remove hfi1 MR and hfi1 specific qp type
39db3e66fa5f7d489f3eb9b0359d6d7e7bf0cd45 staging/rdma/hfi1: Remove srq from hfi1
4eb068824abb0fb335f87f268681a55a147a176f staging/rdma/hfi1: Remove ibport and use rdmavt version
92c24be1e8a1a9110428130271c7dc670fb1e0a2 staging/rdma/hfi1: Remove mmap from hfi1
90963ad735efd191d9e31c0720238406afd89e19 staging/rdma/hfi1: Remove user context allocation and de-alloction functions
54d10c1eb1dc381e62361213bbd100a433b733c9 staging/rdma/hfi1: Use rdmavt send flags and recv flags
1c4b7d971d6679277844cefc0f5c191c800bf955 staging/rdma/hfi1: Remove qpdev and qpn table from hfi1
a2c2d608957c1b6f444e092fa7f49c1f1ac7fa0a staging/rdma/hfi1: Remove create_qp functionality
94d5171cf2d10174e0ee9c3df463607cb0f4dd53 staging/rdma/hfi1: Remove query_device function
abd712daeeb4461aee5ca5a2bfe2717dc22577ea staging/rdma/hfi1: Remove CQ data structures and functions from hfi1
83693bd146063e6843efafbedf302014511fee25 staging/rdma/hfi1: Use rdmavt version of post_send
0facc5a1635252a45ab2fdb119309a3c24e9be82 staging/rdma/hfi1: Remove multicast verbs functions
ec4274f1aeb5e5012c1e46ba11ceef7767af8b3d staging/rdma/hfi1: Remove modify queue pair from hfi1
75261cc6ab663e0d44f6f5a02a46d3e197cbe639 staging/rdma/hfi1: Remove destroy qp verb
1897ce219143cae13a87e0544b3b467ad3932964 staging/rdma/hfi1: Remove post_recv and use rdmavt version
4331629f57c4def899e560a7e3cb87fda577fb4b staging/rdma/hfi1: Clean up register device
9c4a311e6ca03db4e16c4c06bb37a1189ba0bc03 staging/rdma/hfi1: Remove create and free mad agents
07336db4003fd911681e37b0523529fbd04fa604 staging/rdma/hfi1: Remove hfi1_query_qp function
9cd70e1bbf9393633904b1cb71925c40e1839d68 staging/rdma/hfi1: Remove srq functionality
8ebd4cf1852afb56773ce8818da22157bfffa900 staging/rdma/hfi1: Add active and optical cable support
845f876d0819e2b941b1dbe92e0d219df8010035 staging/rdma/hfi1: Only warn when board description is not found
715c430ca5b21c22648665045fc3718b4547d5c8 staging/rdma/hfi1: Don't attempt to qualify or tune loopback plugs
6c9e50f894458810591f7883bdd6f0f8474b06a0 staging/rdma/hfi1: Method to toggle "fast ECN" detection
affa48de8417ccdde467b075577f6e5154ff9943 staging/rdma/hfi1: Add support for enabling/disabling PCIe ASPM
31e7af1c5bcd9617c68f1bbd78a85e896caf87e4 staging/rdma/hfi1: Fix SL->SC checks
2780739262e32b9c283b6b04f7899f9803993ebc staging/rdma/hfi1: Remove unnecessary duplicated variable
957558c9668f06b04530b7ddbfd2dbea86630496 staging/rdma/hfi1: Consolidate CPU/IRQ affinity support
377f111ee81bcef1a788a396f6d813a6b966acbb staging/rdma/hfi1: Verbs Mem affinity support
89abfc8d64dd1ad32e6d96404eb0a1ea6cbb4ca4 staging/rdma/hfi1: Change send_schedule counter to a per cpu counter
23cd4716b7e2792f1fdc31b83feb9e9a9812c25f staging/rdma/hfi1: Allow a fair scheduling of QPs
a92ba6d628d362811c8112280826de0e8b178e67 staging/rdma/hfi1: Improve performance of TID cache look up
7b0b01aa8f48cd237322cbffa05662a9c6b156f8 staging/rdma/hfi1: Split last 8 bytes of copy to user buffer
251314635ad5043e9438a18b2de17ddf86309641 staging/rdma/hfi1: Support query gid in rdmavt
45b59eefcca95a3dc75b68e063390f7a1aedd90b staging/rdma/hfi1: Remove modify_port and port_immutable functions
e1bf0d5ecdc49cd4e2014da0d60efa74f5714fba staging/rdma/hfi1, IB/core: Fix LinkDownReason define for consistency
e154f12716ffbbd7bab52b48b8e78142a22a59c0 staging/rdma/hfi1: Make EPROM check per device
7580fc31dfbfcacab2a3243342d4b5de4b494cbf staging/rdma/hfi1: Remove unused variable nsbr
cd93a9e8c5a58e451c834e48f1278383fbfa1072 staging/rdma/hfi1: Removing unused struct hfi1_verbs_counters
9171bfdd363304713a5a82ae03da6ec55a0cae39 staging/rdma/hfi1: centralize timer routines into rc
e6f8c2b31f107f39e7301a02b5a6808d79c9f1f0 staging/rdma/hfi1: use new timer routines
633d27399514e7726633c9029e3947f0526d2565 staging/rdma/hfi1: use mod_timer when appropriate
3c9d149bdc797a7dfb48bcf327f9ceeb6060a512 staging/rdma/hfi1: add unique rnr timer
08279d5c9424afd710c90d0b6df95612d2bb5a3f staging/rdma/hfi1: use new RNR timer
0940e0f68e59fca500cbad6f5f58bddefdb6dc53 staging/rdma/hfi1: remove duplicate timeout print
20658661bc0712c51ad9798914f5eb3e28cb8121 staging/rdma/hfi1: add s_retry to diagnostics
6c2ab0b857d1b674c5f710d2cbf06a0f3ac52313 staging/rdma/hfi1: Insure last cursor is updated prior to complete
ee84541ad11e70d372670160e727680051801517 IB/qib: Insure last cursor is updated prior to complete
045277cf1548ab04a114bf560a01e38cf33b91b4 IB/qib,staging/rdma/hfi1: use setup_timer api
c3838b396b425b4242bfe627bfabefc4c1af56f2 staging/rdma/hfi1: Fetch platform configuration data from EFI variable
97167e8134150eb5104e19fd7208e3ac3525f48b staging/rdma/hfi1: Tune for unknown channel if configuration file is absent
34cee28f0bb067f4210271c4d7c4febe34bad2d3 staging/rdma/hfi1: actually use new RNR timer API in loopback path
bfee5e32e701b98634b380a9eef8b5820feb7488 IB/rdmavt, staging/rdma/hfi1: use qps to dynamically scale timeout value
20f333b61300fa658952713ca9b8b4b72bbaed9f IB/qib: Rename several functions by adding a "qib_" prefix
46a80d62e6e0ccfc9d8a05c5b773405b84a4afd7 IB/qib, staging/rdma/hfi1: add s_hlock for use in post send
e16689e49216d08336da2d96cbc8c4b6b914dc99 IB/rdmavt: Add trace and error print statements in post_one_wr
0ec79e875ada58bd6598d8965f9079fe1a662950 staging/rdma/hfi1: Put QPs into error state after SL->SC table changes
1348d706f254fe7030221251a5e1685ff3d9f86a IB/rdmavt: Add per verb driver callback checking
611ac099289736176e16aedd75f980f21b00d974 IB/qib: Setup notify free/create mad agent callbacks for rdmavt
4eadd8ff21bffcaf3338267dcca571accc612c8e IB/qib,rdmavt: Move smi_ah to qib
79a225be38932b17707009767e85d6edf450e7cc IB/rdmavt: Remove unnecessary exported functions
21cfca33587d45ccdc5aaaedf97a909ccc4a0a27 IB/qib: Destroy SMI AH before de-allocating the protection domain
3585254d56b0c474a50f911295710e786b33d9ca staging/rdma/hfi1: add s_avail to qp_stats
45842abbb292338d7d328c40bae411218242d2cd staging/rdma/hfi1: move txreq header code
bb5df5f9eea6b9efb5911a5fef63b4614af01c89 staging/rdma/hfi1: Remove header memcpy from sdma send path.
721d04273a8265847612a420174bb6e9a13d8d4f staging/rdma/hfi1: Add s_sendcontext priv field
1235bef8f04bf020b03f32e083e34bc91fc51343 staging/rdma/hfi1: avoid passing pmtu
711e104ddca7b609889e1edf0a8482673ea4a7cc staging/rdma/hfi1: fix panic in send engine
14553ca11039732bcba3c160a26d702dbe71dd49 staging/rdma/hfi1: Adaptive PIO for short messages
91702b4a39fb566b78f2ef1cea8bf6ed3fe9f4a6 IB/qib, staging/rdma/hfi1, IB/rdmavt: progress selection changes
a545f5308b6cf476def8a9326f7e82f89623bb03 staging/rdma/hfi: fix CQ completion order issue
35f6befc8441d20724a41bafc810b7c8f5a92986 staging/rdma/hfi1: Add qp to send context mapping for PIO
77e7639fd782f5432c87ed7143b3e50be76c8500 staging/rdma/hfi1: Add send context sw index
0358a440c2e7401238372316565b654fd95e5142 staging/rdma/hfi1: add cq head and tail information to qpstats
8638b77f13d2b11a4e356916526d6303e1002fe9 staging/rdma/hfi1: Add spaces around binary operators
74182acd7f6b5782d72bf608db233348d2120af0 staging/rdma/hfi1: Remove multiple blank lines
50e5dcbed6b36212c40e8fee18a7f5c7bb0aca13 staging/rdma/hfi1: Remove space after cast
d125a6c66b972e8c6768707c2814107df5963f5f staging/rdma/hfi1: Fix comparison to NULL
458e86ab471b44a28a736cb8b0d364f3ec0d3e3e staging/rdma/hfi1: Remove blank line after an open brace
5161fc3ef60260343c2ffc1b42c9a92ba954d846 staging/rdma/hfi1: Remove blank line before close brace
d0d236ea34e6ce2d9106a8f61f92b6af3995d6ad staging/rdma/hfi1: Fix logical continuations
d17c0cada704d6d5a291425192fb5148fb99cca1 staging/rdma/hfi1: Remove void function return statement
6a14c5ea380c1260772c70b9fd0a1492131f6116 staging/rdma/hfi1: Add comment for spinlock_t definition
4d114fdd90ab4152a1477593edd9375be71d282d staging/rdma/hfi1: Fix block comments
17fb4f2923d7fc7ee778dedc0aa60ab6f402f56c staging/rdma/hfi1: Fix code alignment
e490974e675e8ddec795137c1db7f38e0308cbcd staging/rdma/hfi1: Add braces on all arms of statement
edddfca00eecd0949a9adccf8dd490478f641cbc staging/rdma/hfi1: Remove else after break
6b5c5213e57453c228f7695d5d889aa4c84272c3 staging/rdma/hfi1: fix 0-day syntax error
e8aa284ba0cd2a1b6bfb3181a5b3b7f0bdefbe1a staging/rdma/hfi1: Cleanup comments and logs in PHY code
ed6f653fe430ed4912aebec10a1b9d57813fe44c staging/rdma/hfi1: Fix debugfs access race
9debaaecb9070c05bbc3b5d2257d6aea416ccab6 IB/rdamvt: fix cross build with rdmavt
aa0ad411e51763f95afdae11d6ee684915faecef staging/rdma/hfi1: Fix header size calculation for RC/UC QPs with GRH enabled
bf400235f392eabf60c865c95da823727cb00def staging/rdma/hfi1: Avoid using upstream component if it is not accessible
24487dd39cb24c23560c2dc726c6d3375f42a697 staging/rdma/hfi1: Check interrupt registers mapping
409b146225cdefcc76d9956e323e84e510208884 staging/rdma/hfi1: Fix reporting of LED status in Get(LedInfo) and Get(PortInfo)
a4fe1bc16411c4d3f8cbc0dbecb7b5dff80cd143 staging: rdma: hfi1: Remove casts of pointer to same type
acc17d671c6282bd720b234fd59830cd2fa012a4 staging: rdma: hfi1: Remove unnecessary parantheses
42d6ec19c918cb5bc6d14769e24240dce8f81687 IB/hfi1: Add the break statement that was removed in an earlier patch
bf640096e670a35e3a7ba1336216664f89a2bcf1 IB/hfi1: Move constant to the right in bitwise operations
78eb129d47f553e6f0607c393ebf4e9851edd73e IB/hfi1: Add shared ASIC structure
60c708285c0d3877a78dd8ede24238bc68c09651 IB/hfi1: Change EPROM handling to use resource reservation
765a6fac9132da203347525032bb40b1e9055104 IB/hfi1: Change QSFP functions to use resource reservation
7a8f28ca3daa61dc48046b4f1fa73139fb47bbfe IB/hfi1: Remove unused HFI1_DO_INIT_ASIC flag
8fefef125ed4b9347068d782aa5439f3da3dca32 IB/hfi1: Handle host handshake timeout
528ee9fbf0244406a76cb5e37406eef303b09a46 IB/hfi1: Add adaptive cacheless verbs copy
831464ce4b74eaec723bad51ea48fe3879732f66 IB/hfi1: Don't call cond_resched in atomic mode when sending packets
2243472e9d98c3ca0cb735f96ad48a7b59bdb34d IB/hfi1: Improve LED beaconing
ef086c0d5dd9a151578c72b6f257e5b0e77d65eb IB/hfi1: Report pid in qp_stats to aid debug
ef6d8c4ec86f03b1e40791a804c746e5efacaf86 IB/hfi1: Fix issues with qp_stats print
1db78eeebee7cde877194ddc8691f192e6279609 IB/hfi1: Add unique trace point for pio and sdma send
5326dfbf005ca8589d709209a81d145c5b87b23d IB/hfi1: Fix ordering of trace for accuracy
cef504c5c019ea4f59cf3a69e7341b2b34091cda IB/hfi1: Fix panic in adaptive pio
47177f1bac9ca2b65eefdc9b0b63d0505bd4e11e IB/hfi1: Fix adaptive pio packet corruption
d0e859c32801f6793790d71dc41a9330da0da371 IB/hfi1: Enable adaptive pio by default
06e0ffa69312ce33484bf5c63aa5fc576fde13a8 IB/hfi1: Re-factor MMU notification code
c81e1f6452406a633b7c4ea3e0a12e5deaf57f5c IB/hfi1: Allow MMU function execution in IRQ context
eef9c896a94e715fcf8eb41e98b2469319641c73 IB/hfi1: Allow remove MMU callbacks to free nodes
368f2b59d024fbb58015dfd0e09c54c424cda979 IB/hfi1: Remove the use of add/remove RB function pointers
909e2cd004b639276678c195760efeea6c173626 IB/hfi1: Notify remove MMU/RB callback of calling context
df5a00f81dab36b3479a2b84c836e98e701c78bc IB/hfi1: Use interval RB trees
353b71c7c08ed75fe83843a382e5ca53376d07ca IB/hfi1: Add MMU tracing
b8718e2e2e4702dfbe0d9a15d527e0531807e871 IB/hfi1: Remove compare callback
0f310a00e02094ea7a2a7d2ae45bd51d97706caa IB/hfi1: Add filter callback
a489876010377481823ae5dbbd83fa32792a2e16 IB/hfi1: Adjust last address values for intervals
5cd3a88d7f2b050164dc1df59a398294515126d9 IB/hfi1: Implement SDMA-side buffer caching
2c97ce4f3c292e9ab75c7b6b4d9f69f0a9ee241d IB/hfi1: Add pin query function
bd3a8947de916534722b0861d865d3a809c0743c IB/hfi1: Specify mm when releasing pages
a7922f7ddf023c93b0c409d7a3557fdf0b5ce343 IB/hfi1: Switch to using the pin query function
5511d7810752f426f0a9f999100fd249d352c2ef IB/hfi1: Add SDMA cache eviction algorithm
f19bd643dbded8672bfeffe9e51322464e4a9239 IB/hfi1: Prevent NULL pointer deferences in caching code
de82bdff62a9078a6e4f1452e2f2604686e51e49 IB/hfi1: Fix deadlock caused by locking with wrong scope
849e3e9398608c26a7c54bf9fbf3288f7ced6bfb IB/hfi1: Prevent unpinning of wrong pages
e6d2e0176e1f3c1e1534851b66c0b972f03ff069 IB/rdmavt: Fix send scheduling
b9b06cb6fedab10665a2d527464b45f332d17465 IB/hfi1: Fix missing lock/unlock in verbs drain callback
94158442eb0c66bbb0b733999e108fa26a7673ef IB/hfi1: Don't attempt to free resources if initialization failed
747f4d7a9d1bc07e3f9f22c84201ffb0abee1634 IB/qib, IB/hfi1: Fix up UD loopback use of irq flags
4787bc5e1783e94f6b9518664609f3034dc799eb IB/hfi1: Don't remove list entries if they are not in a list
0ad2d3d05b4a597d1f2e239dcc6ab537cc3eeacb IB/hfi1: Fix memory leak in user ExpRcv and SDMA
782f6697d20d180843565ac93726f5ec6c7ec8ce IB/hfi1: Protect the interval RB tree when cleaning up
de79093b284888faedb826d8ecd326e5b6843d88 IB/hfi1: Correctly compute node interval
f53af85e4735514a572996fb551968da78657639 IB/hfi1: Extract and reinsert MMU RB node on lookup
e88c9271d9f8db79d8104f7f7bd14cb8d88cc187 IB/hfi1: Fix buffer cache races which may cause corruption
ea0e4ce3bcccef360e1aa69d17a210d1221ab80c IB/rdmavt,hfi1,qib: Fix memory leak
f9c82a0b75a120ca3e9542a7a6e60244d04c915a IB/hfi1: Fix i2c resource reservation checks
33a9eb527172cb46711705c858ccd605e32c82f9 IB/hfi1: Fix QOS rule mappings
ef699e849c081d8123d574b3aa279f4e550de4ad IB/hfi1: Adjust default MTU to be 10KB
e38d1e4f5099d533a833afee89f439853c94f272 IB/hfi1: Check P_KEY for all sent packets from user mode
145dd2b3995830ab4bf14f1dc7d44dc5d2b7cb10 IB/hfi1: Always turn on CDRs for low power QSFP modules
623bba2d92a32572e21758a17718eeec65594f7d IB/hfi1: Remove module presence check outside pre-LNI checks
e4e0e39c8d41d5f6cb664a34ac7b2c6388b1b523 IB/hfi1: Fix double QSFP resource acquire on cache refresh
87717f0a75432e078bb894ba230dd236be7a31a7 IB/hfi1: Remove unreachable code
b218f786adc215509e806fe4eb98725e33e8d784 IB/hfi1: Use global defines for upper bits in opcode
0852d241f48463d80764f841f2e06c0f3c4da923 IB/hfi1: Change default number of user contexts
44306f15f0575bff67a923c28aff6e7b2d33021f IB/hfi1: Reduce kernel context pio buffer allocation
372cc85a13c97d6c743cb8df25b52fa5e93d73f6 IB/hfi1: Extract RSM map table init from QOS
4a818bedf7b6087f4bbf875847b11f1946775934 IB/hfi1: Move QOS decision logic into its own function
b12349ae13e13b9d07dfda4c1484f91c44c4b469 IB/hfi1: Create a routine to set a receive side mapping rule
8f000f7f6e0ad8973f76cc64ecbc4d84099ff959 IB/hfi1: Add RSM rule for user FECN handling
feb831ddf2f2cfbc4d26d9df3a982790f6fbbf6a IB/hfi1: Use the neighbor link down reason only when valid
9775a991f9bdbdde3cc38e553326755af5b2b2a9 IB/hfi1: Wait for QSFP modules to initialize
27a340f6b206dd2a0208d3bc4605c0708b55d7b4 IB/hfi1: Correct external device configuration shift
1ebe79c9484bb1b9bd51b3dd6e82b8ff87ebaeba IB/hfi1: Remove no-op QSFP reset code
17f15bf66884b9e33c5005ee0149b039af8f7af2 IB/hfi1: Fix pio wait counter double increment
b96b040445f5d84fb8aa2ff986be71f5069c976e IB/hfi1: Fix potential panic with sdma drained mechanism
67caea1fec85266590dddfa431e1cb000bc942f4 IB/hfi1: Improve performance of interval RB trees
63d0b4a5fc5f589c6e980fc5d43c220e74a6f06c IB/hfi1: Remove unnecessary header
02ba00c0bbfbbe8abd81abd38302d400b59e220f IB/hfi1: Fix hfi_rcvhdr tracepoint
cde10afa6c8d0db75a3dc038ec46ae901c51cfab IB/hfi1: Correct log message strings
f036780be8ac7abee912bd1eeb459230e6bcc878 IB/hfi1: Immediately apply congestion setting MAD
859b527f00ad1364a4152c0365e2e5ef5a6bf20a IB/hfi1: Keep SC_USER as the last send context type
3923979e9bc6aa6f168a644314d6729e9f98eccc IB/hfi1: Change hfi1_init loop to preserve error returns
9565c6a37a9d69f00e2a7dabbee2b4f6d20dc1ae IB/hfi1: Fix an interval RB node reference count leak
46aa5baf96107bb35cc549ad1d19cf312dd5fb58 IB/hfi1: Remove unnecessary comment
7312f29d8ee5518c71572d7bfcbfcd5800b12d16 IB/hfi1: Remove UI char device
d079031742023a00e1deda0fa847d403b4b91c76 IB/hfi1: Remove EPROM functionality from data device
0f7b1f917ca84493d40e4fce32db29e3f7afd5ad IB/hfi1: Remove snoop/diag interface
8d970cf991a6c38a5566572979487b906d643740 IB/hfi1: Add ioctl() interface for user commands
380fb942888e7afc3420ce195a5188ff73b5a782 IB/hfi1: Remove write(), use ioctl() for user cmds
8a1882ebd4b593df0e36ba0b72e4e2f632573274 IB/hfi1: Add trace message in user IOCTL handling
e11ffbd57520c3832e05f2f5f19e9ff6adbb7cdc IB/hfi1: Do not free hfi1 cdev parent structure early
7049de65c9e520886f06d6f9deceaaed5d93fb7c IB/hfi1: Fix hard lockup due to not using save/restore spin lock
bdd8a98ce465df31b07ff6314db9ed31a7c6bb0d IB/hfi1: Add tracing support for send with invalidate opcode
8b103e9cdee5f381bc20a8a9f9bb5be11de8e68f IB/rdamvt: Fix rdmavt s_ack_queue sizing
ce8b2fd0950ccc14440b02f05d2c7023608cfa76 IB/hfi1: Update pkey table properly after link down or FM start
f6de3d39cfc30387ce7dadb8542e4a635c706670 IB/hfi1: Correct 8051 link parameter settings
f158486527ebfb4c1fe4dcb69b12479090d66b72 IB/hfi1: Fix pio map initialization
23f7d0d29e842360cc20bf03460f52f14ced915d IB/hfi1, qib: Add ieth to the packet header definitions
f48ad614c100783be1e7e777dc36328001b83999 IB/hfi1: Move driver out of staging
4cfafd3082afc707653aeb82e9f8e7b596fbbfd6 sched,perf: Fix periodic timers
3e349507d12de93b08b0aa814fc2aa0dee91c5ba perf: Fix perf_enable_on_exec() event scheduling
25432ae96a9889774a05bf5f0f6fd8dbcdec5e72 perf: Optimize perf_sched_events() usage
39a4364076921511e212bc42f94fbf062c989576 perf: Fix task context scheduling
fae3fde65138b6071b1b0e0b567d4058a8b6a88c perf: Collapse and fix event_function_call() users
63b6da39bb38e8f1a1ef3180d32a39d6baf9da84 perf: Fix perf_event_exit_task() race
6a3351b612b72c558910c88a43e2ef6d7d68bc97 perf: Fix race in perf_event_exit_task_context()
a0733e695b83a9c31f779e41dcaec8ef924716b5 perf: Remove __free_event()
6e801e016917989ab8a7ddfc4229a15a5621622a perf: Fix STATE_EXIT usage
f47c02c0c8403963fbb8c3484e285727305d0f73 perf: Robustify event->owner usage and SMP ordering
8ba289b8d4e4dbd1f971fbf0d2085e4776a4ba25 perf: Clean up sync_child_event()
45a0e07abf4933490a2d2f81b1a31fe267bd3561 perf: Add flags argument to perf_remove_from_context()
60beda849343494b2a598b927630bbe293c1cc6e perf: Untangle 'owner' confusion
c6e5b73242d2d9172ea880483bc4ba7ffca0cfb2 perf: Synchronously clean up child events
5fa7c8ec57f70a7b5c6fe269fa9c51b9e465989c perf: Remove/simplify lockdep annotation
84c4e620d35f49f486a900af214ad12276afb386 perf: Close install vs. exit race
a4f4bb6d0c69d0bb573f1d9e6f1b806f9b038b19 perf: Allow perf_release() with !event->ctx
6f932e5be1503ab0783699e843db325d44c2fabb perf: Only update context time when active
a69b0ca4ac3bf5427b571f11cbf33f0a32b728d5 perf: Fix cloning
3cbaa59069677920186dcf502632ca1df4329f80 perf: Fix ctx time tracking by introducing EVENT_TIME
7fce250915efca0f8f51dddee3ae89bf30d86ca5 perf: Fix scaling vs. perf_event_enable_on_exec()
bd2afa49d194c6412c333e9fdd48bc5d06bb465d perf: Fix scaling vs. perf_event_enable()
a096309bc4677f60caa8e93fcc613a55073c51d4 perf: Fix scaling vs. perf_install_in_context()
0da4cf3e0a68c97ef811569804616a811f786729 perf: Robustify task_function_call()
91a612eea9a316c464cc170ff8492ec09e7d1c69 perf/core: Fix dynamic interrupt throttle
8fdc65391c6ad16461526a685f03262b3b01bfde perf/core: Fix time tracking bug with multiplexing
b303e7c15d53cd8ef6b349b702e07eee3f102792 perf/core: Make sysctl_perf_cpu_time_max_percent conform to documentation
cb2517653fccaf9f9b4ae968c7ee005c1bbacdc5 sched/debug: Make schedstats a runtime tunable that is disabled by default
9c57259117b9c25472a3fa6d5a14d6bb3b647e87 sched/debug: Fix /proc/sched_debug regression
4698f88c06b893f2acc0b443004a53bf490fde7c sched/debug: Fix 'schedstats=enable' cmdline option
eda8dca519269c92a0771668b3d5678792de7b78 sched/debug: Fix deadlock when enabling sched events
b9a8460a08a1e0150073cda3e7a0dd23cb888052 bnxt_en: Fix tx push race condition.
567b2abe68551781b725b3b739672da41cb92ef0 bnxt_en: Enable NPAR (NIC Partitioning) Support.
ebcd4eeb2a0b4859d7aaa3308b222a30d51a643f bnxt_en: Add PCI device ID for 57404 NPAR devices.
659c805cc01b3c5a6d972db0408164371a2bab4b bnxt_en: Define the supported chip numbers.
309369c9b3f6a8665e581d9014f222b602f6845a bnxt_en: Refactor bnxt_gro_skb().
94758f8de037cf5c62eb56287f5d5e937cda8c9b bnxt_en: Add GRO logic for BCM5731X chips.
b24eb6ae7058ca1a42b0532489e5f5796c107d65 bnxt_en: Add BCM5731X and BCM5741X device IDs.
6a5fe770d32811ffacefaa2a430cc067ecc7336c efi: Fix types in EFI calls to match EFI function definitions.
099240ac111aac454962e6399c0cc51d1511504a x86/efi: Delete dead code when checking for non-native
54b52d87268034859191d671505bb1cfce6bd74d x86/efi: Build our own EFI services pointer table
c116e8d60adabfd545a269fccab85e77febc1643 x86/efi: Split the boot stub into 32/64 code paths
b8ff87a6158886771677e6dc8139bac6e3cba717 x86/efi: Firmware agnostic handover entry points
4f9dbcfc40299ddaa780fe8c1cd74998c1be3af5 x86/efi: Add mixed runtime services support
7d453eee36ae4cf30fc2f2faae54f634c4f863b7 x86/efi: Wire up CONFIG_EFI_MIXED
3db4cafdfd05717dc939780134e53023a3c1f15f x86/boot: Fix non-EFI build
3f4a7836e33134d4ac34fa7c99788f0c6a79fa1c x86/efi: Rip out phys_efi_get_time()
9a11040ff962304c1838aa9a9f33be78784eae47 x86/efi: Restore 'attr' argument to query_variable_info()
204b0a1a4b92612c957a042df1a3be0e9cc79391 x86, efi: Abstract x86 efi_early calls
396f1a08db212138418b38f784e4bbe516d2fdb2 x86/efi: Fix boot failure with EFI stub
7e8213c1f3acc064aef37813a39f13cbfe7c3ce7 x86/efi: Correct EFI boot stub use of code32_start
47514c996fac5e6f13ef3a4c5e23f1c5cffabb7b efi: Pass correct file handle to efi_file_{read,close}
9403e462fb5ffa9eeaa9663cb23ded02b7e603a3 efi: efi-stub-helper cleanup
f966ea021f947b20c22b31194d7e3042375c7f24 efi: Add shared printk wrapper for consistent prefixing
62fa6e69a436f662090f3996538adb9e568817f6 x86/efi: Delete most of the efi_call* macros
982e239cd2c73d2c70e14615a42c0c7391415a44 x86/efi: Implement a __efi_call_virt macro
96738c69a7fcdbf0d7c9df0c8a27660011e82a7b x86/efi: Avoid triple faults during EFI mixed mode calls
00bc0ef5880dc7b82f9c320dead4afaad48e47be ipv6: Skip XFRM lookup if dst_entry in socket cache is valid
fc04733a1a71af26bf30830571b71f5f2a354a06 netfilter: nfnetlink: use original skbuff when committing/aborting
c8d7b98bec43faaa6583c3135030be5eb4693acb netfilter: move nf_send_resetX() code to nf_reject_ipvX modules
91c1a09b33c902e20e09d9742560cc238a714de5 netfilter: kill nf_send_reset6() from include/net/netfilter/ipv6/nf_reject.h
ab2d7251d666995740da17b2a51ca545ac5dd037 netfilter: missing module license in the nf_reject_ipvX modules
052b9498eea532deb5de75277a53f6e0623215dc netfilter: nf_reject_ipv4: split nf_send_reset() in smaller functions
8bfcdf6671b1c8006c52c3eaf9fd1b5dfcf41c3d netfilter: nf_reject_ipv6: split nf_send_reset6() in smaller functions
c1207c049b204b0a96535dc5416aee331b51e0e1 netfilter: nft_reject_bridge: Fix powerpc build error
9a7766288274ef765245ed65e6176a2727b96706 netfilter: Use rhashtable walk iterator
ee586bbc28fb7128133457cf711880d13a3b7ce4 netfilter: reject: don't send icmp error if csum is invalid
a03a8dbe20eff6d57aae3147577bf84b52aba4e6 netfilter: fix sparse warnings in reject handling
d8bdff59cea141d2e5f7e98c1b11d3e0271640bd netfilter: Fix potential crash in nft_hash walker
a8399231f0b6e72bc140bcc4fecb0c622298a6bd netfilter: use sk_fullsock() helper
4017a7ee693d1cae6735c0dac21594a7c6416c4c netfilter: restore rule tracing via nfnetlink_log
745f5450d5190e8bd02301b8d42f06999af3f5f8 netfilter: nft_hash: restore struct nft_hash
45d84751fb310fe0063cf005ffd6593b4c2321a8 netfilter: nft_hash: indent rhashtable parameters
bfd6e327e118d2fe443047829047862b49012457 netfilter: nft_hash: convert to use rhashtable callbacks
fe2811ebeb97a7a76de0b2b35f13600169508393 netfilter: nf_tables: convert hash and rbtree to set extensions
61edafbb47e9f46fb850035b1f8f062564445704 netfilter: nf_tables: consolide set element destruction
b2832dd6621bf73eb8ad38389a94bd83a5983886 netfilter: nf_tables: return set extensions from ->lookup()
cc02e457bb86f7b6ffee3651bab22d104b60effb netfilter: nf_tables: implement set transaction support
c3e1b005ed1cc068fc9d454a6e745830d55d251d netfilter: nf_tables: add set element timeout support
6908665826d56ddd024f3e131a9ee36f0d140943 netfilter: nf_tables: add GC synchronization helpers
9d0982927e79049675cb6c6c04a0ebb3dad5a434 netfilter: nft_hash: add support for timeouts
3dd0673ac3cd7d05cde103396ec7ec410a901de2 netfilter: nf_tables: prepare set element accounting for async updates
22fe54d5fefcfa98c58cc2f4607dd26d9648b3f5 netfilter: nf_tables: add support for dynamic set updates
68e942e88add0ac8576fc8397e86495edf3dcea7 netfilter: nf_tables: support optional userdata for set elements
45d9bcda21f4c13be75e3571b0f0ef39e77934b5 netfilter: nf_tables: validate len in nft_validate_data_load()
1ec10212f9bc62645932b0ca39bab0eb57d5331a netfilter: nf_tables: rename nft_validate_data_load()
58f40ab6e2427532881a79e139a4aaae7fbe1826 netfilter: nft_lookup: use nft_validate_register_store() to validate types
27e6d2017abdfbdb8b790c34c93d65ee10ce2fc5 netfilter: nf_tables: kill nft_validate_output_register()
d07db9884a5fba8c8020166c86183c79a18d066a netfilter: nf_tables: introduce nft_validate_register_load()
a55e22e92f1a31018e6dc8fce35380900f022c24 netfilter: nf_tables: get rid of NFT_REG_VERDICT usage
1ca2e1702c050aff352cb3efc8a649363dbaeab2 netfilter: nf_tables: use struct nft_verdict within struct nft_data
fad136ea0d32ead1f62e3e2a3d436c26d74e5289 netfilter: nf_tables: convert expressions to u32 register pointers
e562d860d7c8ad28f83dc4c9094fd3ae648ea0d6 netfilter: nf_tables: kill nft_data_cmp()
8cd8937ac0d68435b4ca9bd3c987c3cfea269b4f netfilter: nf_tables: convert sets to u32 data pointers
b1c96ed37ceeef5573402d4af202897edaf1e4b8 netfilter: nf_tables: add register parsing/dumping helpers
49499c3e6e18b7677a63316f3ff54a16533dc28f netfilter: nf_tables: switch registers to 32 bit addressing
d0a11fc3dc4ab4c717642c9c15c8ad1cbc00d2ec netfilter: nf_tables: support variable sized data in nft_data_init()
7d7402642eaf385aef0772eff5a35e34fc4995d7 netfilter: nf_tables: variable sized set element keys / data
f25ad2e907f110378159fe5e088aa13176faaa5b netfilter: nf_tables: prepare for expressions associated to set elements
7c6c6e95a12e46f499749bdd496e53d03950f377 netfilter: nf_tables: add flag to indicate set contains expressions
3e135cd499bfbec15684fe9c756162d58df4dc77 netfilter: nft_dynset: dynamic stateful expression instantiation
4c4ed0748f82e26d8b884383e6737cf5a861ed6f netfilter: nf_tables: fix wrong length for jump/goto verdicts
f04e599e20d7ee9b9e5069c7d1ff59c21b9bf4c2 netfilter: nf_tables: consolidate Kconfig options
bbde9fc1824aab58bc78c084163007dd6c03fe5b netfilter: factor out packet duplication for IPv4/IPv6
a82b0e63917f597c546cd479acc938e08ac54f2d netfilter: nf_dup{4, 6}: fix build error when nf_conntrack disabled
45efccdbec3cd465c4776ed9ca1d7b1bba1b7e34 netfilter: xt_TEE: fix NULL dereference
116984a316c3a3200f8a7912110cc4a6d6c0989e netfilter: xt_TEE: use IS_ENABLED(CONFIG_NF_DUP_IPV6)
74ec4d55c4d243330d93fc52e23e37d2e76548ba netfilter: fix xt_TEE and xt_TPROXY dependencies
08a7f5d3f5c38ed745c3e99ee91975f20562d272 netfilter: tee: select NF_DUP_IPV6 unconditionally
d877f07112f1e5a247c6b585c971a93895c9f738 netfilter: nf_tables: add nft_dup expression
6742b9e310bcf511b876532846e5302b07b7fedc netfilter: nfnetlink: keep going batch handling on missing modules
09e4e42a00b99e94cfce27e63b06daca0c26e841 netfilter: nft_limit: rename to nft_limit_pkts
f8d3a6bc76011bb86d2515ebd0b3b300641f2f8c netfilter: nft_limit: factor out shared code with per-byte limiting
3e87baafa4f476017b2453e52a1ca7308b4e6ad5 netfilter: nft_limit: add burst parameter
8bdf3626425520e9bc55996d5d46f60e12dd3ad7 netfilter: nft_limit: constant token cost per packet
d2168e849ebf617b2b7feae44c0c0baf739cb610 netfilter: nft_limit: add per-byte limiting
8cfd23e6740158817d2045915f6ea5a2daf11bce netfilter: nft_payload: work around vlan header stripping
59e26423e00263b6b06b39d219147f22610ce5d6 netfilter: nf_dup: fix sparse warnings
6aa187f21ca2d8ade791f01fd8fab908b1f27673 netfilter: nf_tables: kill nft_pktinfo.ops
7695495d5a838995befd59796772c5348125c92b netfilter: ipv6: code indentation
aabc92bbe3cfe4c545f8ccdaaeeea012a46f0abf net: add __netdev_alloc_pcpu_stats() to indicate gfp flags
326fcfa5acca446b3f71e99f6d19881145556e5c net: remove unnecessary semicolon in netdev_alloc_pcpu_stats()
086f332167d64b645d37405854f049b9ad7371ab netfilter: nf_tables: add clone interface to expression operations
a9ecfbe7fcf2f600718c3f995cbb46043f7a7a5d netfilter: nf_tables: remove unused struct members
33d5a7b14bfd02e60af9d223db8dfff0cbcabe6b netfilter: nf_tables: extend tracing infrastructure
e639f7ab079b5256660018511d87aa34b54f1a9d netfilter: nf_tables: wrap tracing with a static key
9fb0b519c7e094e741a3fc3fd4d854a8bc74b6dc netfilter: nf_tables: fix nf_log_trace based tracing
bd678e09dc1797bc0e2e536b6b268e7cf46e0184 netfilter: nfnetlink: fix splat due to incorrect socket memory accounting in skbuff clones
df05ef874b284d833c2d9795a6350c6a373ab6c9 netfilter: nf_tables: release objects on netns destruction
c7862a5f0de5f521c545f3436f0aa190964342dd netfilter: nft_limit: allow to invert matching criteria
7c7bdf35991bb8f7cfaeaf22ea3a2f2d1967c166 netfilter: nfnetlink: use original skbuff when acking batches
5cc6ce9ff27565949a1001a2889a8dd9fd09e772 netfilter: nft_counter: fix erroneous return values
8a6bf5da1aefdafd60b73d9122c7af9fd2d7bb9c netfilter: nft_masq: support port range
83170f3beccccd7ceb4f9a0ac0c4dc736afde90c netfilter: nf_dup_ipv6: set again FLOWI_FLAG_KNOWN_NH at flowi6_flags
d2e3ae6f3abad839214f7b05c34075a1a7c82470 crypto: vmx - Enabling VMX module for PPC64
42cb0c7bdf9ddd33b33d195414f9171e7fa7472c crypto: vmx - fix two mistyped texts
0903e435ba45e312a9e1f34257d6a2b87a3af2d9 crypto: vmx - Remove duplicate PPC64 dependency
4beb106045976b785a05e77ab5430ad04b6038b7 crypto: vmx - Reindent to kernel style
2d6f0600b2cd755959527230ef5a6fba97bb762a crypto: vmx - Adding enable_kernel_vsx() to access VSX instructions
1d4aa0b4c1816e8ca92a6aadb0d8f6b43c56c0d0 crypto: vmx - Fixing AES-CTR counter bug
1552cd703cf5a07caeb17ccd82f80e20a23b1707 crypto: vmx: Only call enable_kernel_vsx()
0d3d054b43719ef33232677ba27ba6097afdafbc crypto: vmx - IV size failing on skcipher API
2feb55f89096b22e2de066e411a3263647211987 fs: allow no_seek_end_llseek to actually seek
a118084432d642eeccb961c7c8cc61525a941fcb vfs: add d_real_inode() helper
eb0a4a47ae89aaa0674ab3180de6a162f3be2ddf af_unix: fix hard linked sockets on overlay
5b095e99928cc13332d364f7cca7a9ca684369b4 nfsd: convert nfs4_file searches to use RCU
4d152e2c9a6a3e3556ce5da7782a9e2836edbe0f sunrpc: add a generic rq_flags field to svc_rqst and move rq_secure to it
7501cc2bcf9a71cc1f19e38775c234815ee44578 sunrpc: move rq_local field to rq_flags
30660e04b0d4bbbd15fd21098681f45a9f4080b9 sunrpc: move rq_usedeferral flag to rq_flags
78b65eb3fda95c6d131c4bbb0536e21f0bd7a7d4 sunrpc: move rq_dropme flag into rq_flags
779fb0f3af3089daa2e88cf8ef0ef0c5d2fecb40 sunrpc: move rq_splice_ok flag into rq_flags
62978b3c619422d0ea17dbd39efdb2328295bcfb sunrpc: move rq_cachetype field to better optimize space
0b5707e4524eb817b7b02863887820d27b56910a sunrpc: require svc_create callers to pass in meaningful shutdown routine
812443865c5fc255363d4a684a62c086af1addca sunrpc: add a rcu_head to svc_rqst and use kfree_rcu to free it
b1691bc03d4eddb959234409167bef9be9e62d74 sunrpc: convert to lockless lookup of queued server threads
83a712e0afefaf68555f816ea78ecd2862c6cf30 sunrpc: add some tracepoints around enqueue and dequeue of svc_xprt
8287f009bd95a5e548059dba62a67727bb9549cd nfsd: fix pNFS return on close semantics
e749a4621e414c36a54ac8b3205955e267f00db3 nfsd: clean up raparams handling
a0649b2d3fffb1cde8745568c767f3a55a3462bc nfsd: refactor nfs4_preprocess_stateid_op
af90f707fa6d54dbb725c4b919c976cd23cd07f2 nfsd: take struct file setup fully into nfs4_preprocess_stateid_op
96bcad506457cfa0c26680446eedefb616c6b079 nfsd: fput rd_file from XDR encode context
68e8bb0334dbad55285573682c38d8f6664fce68 nfsd: wrap too long lines in nfsd4_encode_read
4691b271ac3a3bdc0d7d886e4715163eb4fb4bc7 nfsd: Fix a memory leak in nfsd4_list_rec_dir()
faf996a654ac60983a24a9cdc5e0f3324e8a2b32 nfsd: Drop including client's header file nfs_fs.h
7b8f4586532f36c5541a15d072576e7e89a5df75 nfsd: Add macro NFS_ACL_MASK for ACL
8fcd461db7c09337b6d2e22d25eb411123f379e3 nfsd: do nfs4_check_fh in nfs4_check_file instead of nfs4_check_olstateid
ea126e74353453d15fc0a181910ae1e25162f2a1 nfsd/sunrpc: add a new svc_serv_ops struct and move sv_shutdown into it
c369014f1776367269c8fbb5ea8932826d89ce2f nfsd/sunrpc: move sv_function into sv_ops
758f62fff9ad630f05866a1dd6ae9453a7730c2e nfsd/sunrpc: move sv_module parm into sv_ops
b9e13cdfac70e38ade17b53810a36968c5842339 nfsd/sunrpc: turn enqueueing a svc_xprt into a svc_serv operation
598e2359090d393b01a8e10386dc3056ccfa47ae nfsd/sunrpc: abstract out svc_set_num_threads to sv_ops
1b6dc1dffbb142de60eb65f6155276ac31ff5474 nfsd/sunrpc: factor svc_rqst allocation and freeing from sv_nrthreads refcounting
35a92fe8770ce54c5eb275cd76128645bea2d200 nfsd: serialize state seqid morphing operations
aaf91ec148910e0c2bfd135ea19f870e7196e64f nfsd: switch unsigned char flags in svc_fh to bools
9767feb2c64b29775f1ea683130b44f95f67d169 nfsd: ensure that seqid morphing operations are atomic wrt to copies
34ed9872e745fa56f10e9bef2cf3d2336c6c8816 nfsd: eliminate sending duplicate and repeated delegations
7fc0564e3a8d16df096f48c9c6425ba84d945c6e nfsd: fix race with open / open upgrade stateids
aa0d6aed45ff48bd41439211f2bda1d54585aba3 nfsd: Pass filehandle to nfs4_preprocess_stateid_op()
be20aa00c67102aaa54599518c086a2338b19f4c nfsd: don't hold ls_mutex across a layout recall
bbddca8e8fac07ece3938e03526b5d00fa791a4c nfsd: don't hold i_mutex over userspace upcalls
6e8b50d16a757d53f8817acecba97c5d4aa1cf65 nfsd: add new io class tracepoint
2f6fc056e899bd0144a08da5cacaecbe8997cd74 nfsd: fix deadlock secinfo+readdir compound
3298cf37bee59c66a51da0cea8bae0d0418e27fd fanotify: remove useless bypass_perm check
f083441ba86acb9e2ef9c1d1747725e488c8b1ff fanotify: use fanotify event structure for permission response processing
9573f79355ff3711c98227d14a9b7f4cb3222b97 fanotify: convert access_mutex to spinlock
8ba8fa917093510cdcb4ec8ff8b9603e1b525658 fsnotify: rename event handling functions
5838d4442bd5971687b72221736222637e03140d fanotify: fix double free of pending permission events
5fa8e0a1c6a762857ae67d1628c58b9a02362003 fs: Rename file_remove_suid() to file_remove_privs()
dbfae0cdcd87602737101d4417811f4323156b54 fs: Provide function telling whether file_remove_privs() will do anything
45f147a1bc97c743c6101a8d2741c69a51f583e4 fs: Call security_ops->inode_killpriv on truncate
072017b41e49e2a8e8a4e0258837a614bb5daa8d net: sctp: Add rudimentary infrastructure to account for control chunks
3822a5ff4bc32043fa9c7b6d6f125bcdca6da39c sctp: align MTU to a word
cea8768f333e3f0bc231d8b815aa4a9e63fa990c sctp: allow sctp_transmit_packet and others to use gfp
b1c20f0b97b4e565fa50cde1e6b44c2fd327a1e0 netdev_features: Fold NETIF_F_ALL_TSO into NETIF_F_GSO_SOFTWARE
5c7cdf339af560f980b12eb6b0b5aa5f68ac6658 gso: Remove arbitrary checks for unsupported GSO
ae7ef81ef000adeee7a87585b9135ff8a8064acc skbuff: introduce skb_gso_validate_mtu
90017accff61ae89283ad9a51f9ac46ca01633fb sctp: Add GSO support
942b3235bf77e5600a05d6e85f0415bdeb8068bb sctp: improve debug message to also log curr pkt and new chunk size
3b55a537d028ccc3e423e74a2037476318918341 sctp: Fix warning in sctp_packet_transmit_chunk()
ba6f5e33bdbb9ed2014b778fbbaecf20060ca989 sctp: avoid refreshing heartbeat timer too often
250eb1f8815303f71c94a5680f8e4f2dcfa25cf5 sctp: compress bit-wide flags to a bitfield on sctp_sock
fb586f25300f4587c7ebd097a604bf269b25bfa7 sctp: delay calls to sk_data_ready() as much as possible
311b21774f1389f9c34eac4da90c43c95fc2b62b sctp: simplify sk_receive_queue locking
0970f5b3665933f5f0d069607c78fb10bd918b62 sctp: signal sk_data_ready earlier on data chunks reception
939cfa75a0cea97aa60cb88e3722baefdceb4e72 net: sctp: get rid of t_new macro for kzalloc
dda9192851dcf904b4d1095480834f2a4f814ae3 net: sctp: remove SCTP_STATIC macro
bb33381d0c97cdee25f2cdab540b6e2bd16fa03b net: sctp: rework debugging framework to use pr_debug and friends
e02010adeeb21ef56d6b9b68c785ed1ecc832aee net: sctp: get rid of SCTP_DBG_TSNS entirely
26ac8e5fe1562831e68ccd9f7057aade37aab2a3 sctp: fix checkpatch errors with (foo*)|foo * bar|foo* bar
619a60ee04be33238721a15c1f9704a2a515a33e sctp: Remove outqueue empty state
79b91130a2679ea5063d49c021d97346a09eb0a5 sctp: remove macros sctp_local_bh_{disable|enable}
3c8e43ba9fe93b2670decc119f82f072a8d2459f sctp: remove macros sctp_spin_[un]lock
387602dfdc3332f786f6195c74d53f9e8f7af402 sctp: remove macros sctp_write_[un]_lock
1b0de194f11450d1c1e164bf2826fe80a38e1f62 sctp: remove macros sctp_read_[un]lock
5bc1d1b4a261a865cbde65b1561748df5b9c724b sctp: remove macros sctp_bh_[un]lock_sock
2103d6b818fcdae15ffa04cf385f770e6c3892c3 net: sctp: Don't use 64 kilobyte lookup table for four elements
8b570dc9f7b634e853866ce40097c0342ac5bb81 sctp: only drop the reference on the datamsg after sending a msg
27f7ed2b11d42ab6d796e96533c2076ec220affc sctp: allow setting SCTP_SACK_IMMEDIATELY by the application
1cd4d5c4326a7ed3bb0e346bd7d20f5057a80ae6 sctp: remove the unused sctp_datamsg_free()
f46c7011b062726b798fa3326b5b0c2711ead2a0 sctp: move rcu_read_lock from __sctp_lookup_association to sctp_lookup_association
d9749fb5942f51555dc9ce1ac0dbb1806960a975 sctp: Fix port hash table size computation
489ce5f441e4094a3419d7e8e29fd756b7f391d4 sctp: consolidate local_bh_disable/enable + spin_lock/unlock to _bh variant
09067122db3b7fb9cd329fcc16cee12e8f6babcf net/mlx4_en: Add support for inner IPv6 checksum offloads and TSO
23898c763f4af6f5c80b0230b1ea788a0ce3cf73 net/mlx5: E-Switch, Modify node guid on vf set MAC
0f087ee3f3b86a4507db4ff1d2d5a3880e4cfd16 ALSA: hda / realtek - add two more Thinkpad IDs (5050,5053) for tpt460 fixup
6b7e9cde49691e04314342b7dce90c67ad567fcc sd: Fix rw_max for devices that report an optimal xfer size
316314cae15fb0e3869b76b468f59a0c83ac3d4e KVM: x86: mask CPUID(0xD,0x1).EAX against host value
14ebda3394fd3e5388747e742e510b0802a65d24 KVM: x86: reduce default value of halt_poll_ns parameter
f24632475d4ffed5626abbfab7ef30a128dd1474 KVM: x86: fix ordering of cr0 initialization code in vmx_cpu_reset
c43203cab1e2e193c43f8295f01dfb2a0721d9e5 KVM: x86: avoid simultaneous queueing of both IRQ and SMI
ee2cd4b7555e3a629f399c3ef228ceb42067e7af KVM: x86: rename process_smi to enter_smm, process_smi_request to process_smi
6f05485d3a161caebc0fc7a73d641fa42a0dd263 KVM: VMX: Fix guest debugging while in L2
4efd805fca5590af181f89ad122b8695c63b5f2c KVM: x86: fix *NULL on invalid low-prio irq
e83d58874ba1de74c13d3c6b05f95a023c860d25 kvm/x86: move Hyper-V MSR's/hypercall code into hyperv.c file
bdaffe1d93e7eddbcc71d074a5d49eba7fe1c765 KVM: x86: set TMR when the interrupt is accepted
3bb345f387dd26beb097cf776e342bc0d96d805a KVM: x86: store IOAPIC-handled vectors in each VCPU
d50ab6c1a2b24e12d3012d7beb343eba5b94a6ca KVM: x86: replace vm_has_apicv hook with cpu_uses_apicv
35754c987f252e859bfa390a6816e85563afe79d KVM: x86: introduce lapic_in_kernel
4ca7dd8ce4b24e18f94eed90e80c6eb80fb48c9a KVM: x86: unify handling of interrupt window
49df6397edfc5a8ba8ca813b51fb9729d8e94b40 KVM: x86: Split the APIC from the rest of IRQCHIP.
7543a635aa09eb138b2cbf60ac3ff19503ae6954 KVM: x86: Add KVM exit for IOAPIC EOIs
b053b2aef25d00773fa6762dcd4b7f5c9c42d171 KVM: x86: Add EOI exit bitmap inference
1c1a9ce973a7863dd46767226bce2a5f12d48bc6 KVM: x86: Add support for local interrupt requests from userspace
127a457acb2131fdb31c68c98cf11eda8ba7b380 KVM: x86: fix interrupt window handling in split IRQ chip case
782d422bcaee4680c640fbc8ce8c45524fd11790 KVM: x86: split kvm_vcpu_ready_for_interrupt_injection out of dm_request_for_irq_injection
934bf65354227981df15bbc755d33f4ba3443ff2 KVM: x86: set KVM_REQ_EVENT on local interrupt request from user space
62a193edaf90df38356e292f47a17f28e0cee3f1 KVM: x86: request interrupt window when IRQ chip is split
13db77347db175a68edd58a79963cdf5cb3a9607 KVM: x86: don't notify userspace IOAPIC on edge EOI
bce87cce88c71957c56479809db8316a836ec8b1 KVM: x86: consolidate different ways to test for in-kernel LAPIC
a87036add09283e6c4f4103a15c596c67b86ab86 KVM: x86: disable MPX if host did not enable MPX XSAVE features
5a5fbdc0e3f1159a734f1890da60fce70e98271d KVM: x86: remove eager_fpu field of struct kvm_vcpu_arch
2e4682ba2ed79d8082b78d292b3b80f54d970b7a KVM: add missing memory barrier in kvm_{make,check}_request
adfedd9a32e4e3490c0060576fd824881572b72a dmaengine: use DMA_COMPLETE for dma completion status
52870786ff5d06540efacc64ca8faa74221f10dd ACPI: Use ACPI companion to match only the first physical device
ceacbdbf65c4cf48a130db6152c6e03432c85ed1 dmaengine: Make the destination abbreviation coherent
2568999835d7797afce3dcc3a3f368051ffcaf1f clkdev: add clkdev_create() helper
13b2c4a0c3b1cd37ee6bcfbb5b6e2b94e9a75364 PM / QoS: Make it possible to expose device latency tolerance to userspace
712e960f0ee9337f3473ba3de2bcfc7e87b7c5a4 ACPI / PM: Attach ACPI power domain only once
ddef08dd00f5548f943422c86e4ffe67dd040b6c Driver core: wakeup the parent device before trying probe
667dfed98615ae1fc4cc05b0763078435598c0f5 dmaengine: add a driver for Intel integrated DMA 64-bit
4b45efe8526359a11ca60a299bef3aebf413fd77 mfd: Add support for Intel Sunrisepoint LPSS devices
60ba032ed76e851d30d4fa514847285252147d07 ACPI / property: Drop size_prop from acpi_dev_get_property_reference()
ce793486e23e0162a732c605189c8028e0910e86 driver core / ACPI: Represent ACPI companions using fwnode_handle
5c0acf3b4f96abbd1fad40af7fdf0ed94cf523b7 driver core: Add comments about returning array counts
7036cd46c8239a520abf69720de9a8538a9011d5 Driver core: Fix missing whitespace in function argument
f42712a92e660fbee2193c5dde672470d099f63f driver core: property: Update fwnode_property_read_string_array()
9017f25254e474f2cc05df489e4f83b972d3d6fd driver core: Implement device property accessors through fwnode ones
97badf873ab60e841243b66133ff9eff2a46ef29 device property: Make it possible to use secondary firmware nodes
16ba08d5c9ec44f89ec03c67ecf7a9c5e2d204fd device property: Introduce firmware node type for platform data
733e625139fe455b4d910ac63c18c90f7cbe2d6f ACPI: Allow drivers to match using Device Tree compatible property
5c53b262c861dc99aefb215eec579ae438d64fdd ACPI / property: Refine consistency check for PRP0001
e1acdeb0e7707f4220aa14ad6739102ba26e07c0 ACPI / scan: Simplify acpi_match_device()
8765c5ba19490c9167fe0c4e05c2dfdcc39873a3 ACPI / scan: Rework modalias creation when "compatible" is present
ee89209402e0b9a733169901063afdf0ae7909db ACPI / property: Define a symbol for PRP0001
c181fb3e723351e2f7a1f76b6c0627a4b8ad1723 ACPI / OF: Rename of_node() and acpi_node() to to_of_node() and to_acpi_node()
ecc87eed7beeb50c0be0b73322d62135277ea2b0 device property: fix potential NULL pointer dereference
8a2fe56e8827f2b1eb1766702f0215074dd2767e net: phy: re-design phy_modes to be self-contained
4c96b7dc0d393f12c17e0d81db15aa4a820a6ab3 Add a matching set of device_ functions for determining mac/phy
2f710a3a8089c12dfe3c0cf04bb0a3dee3dea019 device property: Add ETH_ALEN check, update comments.
4f73b0654d8a954540d49bb0a300f31663423db9 device property: fallback to pset when gettng one string
4fa7508e9f1c64ae39516e40ee5495aaa4616ad7 device property: Return -ENXIO if there is no suitable FW interface
5b902d6f97f573fde911338e5d943e6b07fac7f9 device property: Don't overwrite addr when failing in device_get_mac_address
bd8191cc8a74018e255eb3efff5e02dc305a5ed1 ACPI / property: Add routine for extraction of _DSD properties
445b0eb058f5f31c844a731cb82e7441d0d9e578 ACPI / property: Add support for data-only subnodes
c2efefb33abfb245395199137ece3c1e3df47f51 ACPI / scan: Move sysfs-related device code to a separate file
263b4c1a64bc12470684aeaf7c44f03d31716819 ACPI / property: Expose data-only subnodes via sysfs
3a7a2ab839ad18c2d542b40f4a647c98d068e55a ACPI / property: Extend fwnode_property_* to data-only subnodes
504a33749971c36c54ba5ccb1364872dee1f17a7 ACPI / property: Extend device_get_next_child_node() to data-only nodes
3f5c8d3187852b1cbed8546169e6293d6d421751 device property: Add fwnode_property_match_string()
205ad97fc5a6386214323641dd28b822cb6fc624 ACPI / property: Fix subnode lookup scope for data-only subnodes
e5e558644bbb23cad03c586703331b8bcd9e0e6c device property: Adding DMA Attribute APIs for Generic Devices
e3f9e299bf94298ddd8beb63c0786a4d7766dc86 device property: always check for fwnode type
61f5e294b89a90e8520c9eaf9a4af787db8911ea device property: rename helper functions
318a1971826103ecf560875b17236dd4a93e8c88 device property: refactor built-in properties support
66586baba56679baa2da1a10a96ccf15b1e96b95 device property: keep single value inplace
a85f420475334caed12b057ddcaa0b58e0b1ebb7 device property: helper macros for property entry creation
1d656fb757c17e48a8a01bd576d14918701ba55c device property: improve readability of macros
3c60f1149a2fee9ac4ef3cc27bd830e3bd8d2654 device property: return -EINVAL when property isn't found in ACPI
362c0b30249e8639489b428ff5acc4a9d81c087f device property: Fallback to secondary fwnode if primary misses the property
13141e1cb842ad6286c1cfa9a6b7c1577478d03b device property: Take a copy of the property set
d76eebfa175e86383324ad2bbaf472866950398b include/linux/property.h: fix build issues with gcc-4.4.4
aace7367bf83aef7baa021c7bcc9d2e331b040aa device property: add spaces to PROPERTY_ENTRY_STRING macro
0fb5902f2f9ec7996a0846087f3e69165ea9ce1e device property: the secondary fwnode needs to depend on the primary
f6740c1899d2ee2c4c9ec5301d4b712d4e706a79 device property: avoid allocations of 0 length
7781203416ffc4e731619f8a8b93a37599a8f502 device property: fwnode->secondary may contain ERR_PTR(-ENODEV)
0d67e0fa1664ad6aaba0552e170608bafb4b6196 device property: fix for a case of use-after-free
bf4703fdd166fffd5b2e4c42d2ebbf708b94748e ACPI / property: fix data node parsing in acpi_get_next_subnode()
00bbc1d8e46a92ce7bd80622cf4b09c3b727a741 driver core: platform: Add support for built-in device properties
55f89a8a4538803195395bdf347cbba51dcb1906 driver core: Do not overwrite secondary fwnode with NULL if it is set
e15ad2154b6166804fc04487e0398c9aef9e7c97 mfd: intel-lpss: Add support for passing device properties
028af5941dd870afd5eb6a95c39f25564dcca79a mfd: intel-lpss: Pass SDA hold time to I2C host controller driver
9803f868944e879c4623c0d910e81f1ae89ccfb4 i2c-designware: make SDA hold time configurable
97191d734f6ac028e5e6dcd574378c1544a16c0b i2c-designware: use div_u64 to fix link
6468276b22069d4442aafcd8c59e5d8ccae23f5f i2c: designware: make SCL and SDA falling time configurable
8e5f6b2a289c4374456fb785900b0b7445b719e6 i2c: designware: add support of I2C standard mode
4bcfda09936da647b0a3b49d5dcb3c6c6ebb0395 i2c: designware: add support of platform data to set I2C mode
925ddb240d6c76e56dd3aa22493f5755c452ba61 i2c: designware: Rework probe() to get clock a bit later
a445900c906092f3b49ee40a7365d0d54acc568e i2c: designware: Add support for AMD I2C controller
ca5b74d2675a44f54aacb919c1cf022463e2f738 ACPI: Introduce has_acpi_companion()
d80d134182ba536ececab8d5fca50d779befc9a6 i2c: designware: Move common probe code into i2c_dw_probe()
3eddad96c4395280d5f6f13c958b276c11d3f575 i2c: designware: reverts "i2c: designware: Add support for AMD I2C controller"
8eb5c87a92c065aaca39ac3e841b07906a4959a2 i2c: add ACPI support for I2C mux ports
4c5301abbf81f4351416cec1e8a02647d96e6fd1 i2c: designware: Convert to use unified device property API
ec14c5395dfbc1d40a49c9f19d2bfde6739d89d5 mfd: intel-lpss: Pass HSUART configuration via properties
6ab3430129e258ea31dd214adf1c760dfafde67a mfd: Add ACPI support
90452e61137a3e88aa705d3efcb3874f3ce8d390 cpufreq: Fix formatting issues in 'struct cpufreq_driver'
1b0289848d5dcea74a6e5115d6c9892b0dbe9c8f cpufreq: powernv: Add sysfs attributes to show throttle stats
7c45cf31b3ab9be270a7bf6af2926631dc566436 cpufreq: Introduce ->ready() callback for cpufreq drivers
2920e9ce8f43a946e3c257a7c0ee35b02149fca7 cpufreq: powernv: Remove flag use-case of policy->driver_data
5bc016f1abaa1c5ac0e3af23aa79faec4634a074 x86/fpu: Disable dependent CPU features on "noxsave"
d05004944206cbbf1c453e179768163731c7c6f1 x86/cpufeature: Enable new AVX-512 features
608873cacb9d0d2811586fcc79a38b64eabd6d32 printk: release lockbuf_lock before calling console_trylock_for_printk()
458df9fd4815b47809875d57f42e16401674b621 printk: remove separate printk_sched buffers and use printk buf instead
81954606265ab8f04b41154bd00576013affcf5b printk: disable preemption for printk_sched
c224815dac9c739b79050d3cc67443ff500bc478 printk: Add printk_deferred_once
aac74dc495456412c4130a1167ce4beb6c1f0b38 printk: rename printk_sched to printk_deferred
6d9bcb621b0b0a20604cbdb298c4487e44dd0da2 timekeeping: use printk_deferred when holding timekeeping seqlock
939f04bec1a4ef6ba4370b0f34b01decc844b1b1 printk: enable interrupts before calling console_trylock_for_printk()
6d5d2ee63cee7025badda3b74ae2ef7ab097acfa Bluetooth: add LED trigger for indicating HCI is powered up
b6e402fc84a76c0238b64de497920aeeaa495026 Bluetooth: Use managed version of led_trigger_register in LED trigger
ad750fa142747f3f42b66ae051a0f275bd2035df Bluetooth: btbcm: Fix handling of firmware not found
d82142a8b1338e6a4339920863423379c27b0b16 Bluetooth: hci_core: cancel power off delayed work properly
34bf1912bfc06bd9200893916078eb0f16480a95 Bluetooth: hci_uart: Add diag and address support for Intel/AG6xx
c5fd9cbb9dc40e0d273d6731030e65096adceeda Bluetooth: hci_bcm: Add BCM2E55 ACPI ID used in Lenovo ThinkPad Tablet 8
eec7a01dc8366f7e43fc0417f4aee70eaeaca9a9 Bluetooth: Move memset closer to where it's needed
d43efbd0d545f476be0bbef30cbe18234f8a9631 Bluetooth: Fix adding discoverable to adv instance flags
82a37adeedd38880940e2772ec1ae27a09353e5a Bluetooth: Add support for limited privacy mode
6a19cc8c892b113fb84947207346f783de76dbd1 Bluetooth: Fix setting correct flags in AD
6a0e78072c2ae7b20b14e0249d8108441ea928d2 Bluetooth: Fix potential buffer overflow with Add Advertising
55441070ca1cbd47ce1ad2959bbf4b47aed9b83b Bluetooth: 6lowpan: Fix memory corruption of ipv6 destination address
a0af53b511423cca93900066512379e21586d7dd Bluetooth: Add support for Intel Bluetooth device 8265 [8087:0a2b]
439e65d3998c0b9501638cc0c2190e936c0caaf2 Bluetooth: Add support for Intel Bluetooth device 3168 [8087:0aa7]
230b04ac8f439d0797ab85fb356f069f0472306f Bluetooth: Replace constant hw_variant from Intel Bluetooth firmware filename
3da40c7b089810ac9cf2bb1e59633f619f3a7312 ext4: only call ext4_truncate when size <= isize
44f52122a22004de9c3bae288bbc6dff3624fe9c GFS2: Check rs_free with rd_rsspin protection
d9186c03976506cde2c2b1219028bed449c948ed nfs/blocklayout: add SCSI layout support
522e5cb76d0663c88f96b6a8301451c8efa37207 iommu/amd: Fix unity mapping initialization race
ac414da37f88ddbc04617d883539113f27c75f56 Input: wacom - process outbound for newer Cintiqs
fa770340286bffddf65f2322a2ca10d65c3e38e4 HID: wacom: add defines for new Cintiq and DTU outbound tracking
500d4160abe9a2e88b12e319c13ae3ebd1e18108 HID: wacom: add support for Cintiq 27QHD and 27QHD touch
a7e6645ee3fef358fb1d88b4a2729d29a467c61a HID: wacom: Add missing ABS_MISC event and feature declaration for 27QHD
19576c9478682a398276c994ea0d2696474df32b netfilter: cttimeout: add netns support
ae78dbfa40c629f79c72ab93525508ef49e798b6 net: Add trace events for all receive entry points, exposing more skb fields
d88270eef4b56bd7973841dd1fed387ccfa83709 tcp: fix tcp_mark_head_lost to check skb len before fragmenting
903ce4abdf374e3365d93bcb3df56c62008835ba ipv6: Fix mem leak in rt6i_pcpu
5e32940621eb62064d98f42c9889db71b0368bde libnvdimm, btt: sparse fix
ec92777f2ba93c00387b8fe53780c25adc57c744 libnvdimm: Update name of the ars_status_record mask field
39c686b862cdb2049b90e095b6c6c727b2a7ab60 libnvdimm: Add DSM support for Address Range Scrub commands
60e95f43fc8573e81f54b0c1e0bc542c2260d956 nfit: Don't check _STA on NVDIMM devices
f6ef5a2a50816b58e3126206de13d0b9fdf89df5 nvdimm: fix inline function return type warning
50690762cfe32abadbaa5b22bebe3855e5b8ede8 iommu/vt-d: Fix leaked ioremap mapping
e836a256e8fd579c9d7a3685f22981225a1ca451 pmem: convert to generic memremap
fbde1414acc0440024083bf0c391b259bcfc4826 libnvdimm, btt: clean up internal interfaces
ab45e7632717b811e0786e46ca5ad279cb731b66 libnvdimm, btt: consolidate arena validation
6ec689542b5bc516187917d49b112847dfb75b0b libnvdimm, btt: write and validate parent_uuid
708ab62bef1ed3a3cf065a4138bd87f5d083cfeb pmem: switch to devm_ allocations
7a67832c7e44c20935c5d6f2264035a0f7bf0d8f libnvdimm, e820: make CONFIG_X86_PMEM_LEGACY a tristate option
40603526569b304dd92f720f2f8ab11e828ea145 pmem, x86: move x86 PMEM API to new pmem.h header
18279b467a9d89afe44afbc19d768e834dbf4545 pmem: remove layer when calling arch_has_wmb_pmem()
4a370df5534ef727cba9a9d74bf22e0609f91d6e pmem, x86: clean up conditional pmem includes
5de490daec8b6354b90d5c9d3e2415b195f5adb6 pmem: add copy_from_iter_pmem() and clear_pmem()
2765cfbb342c727c3fd47b165196cb16da158022 dax: update I/O path to do proper PMEM flushing
e2e05394e4a3420dab96f728df4531893494e15d pmem, dax: have direct_access use __pmem annotation
d5dc861bd601b546ae6b36af54485142cca36a5e x86/mm/pat: Add comments to cachemode translation tables
a06a7576526e10a99ea7721533e7f2df3e26baad nvdimm: change to use generic kvfree()
67a3e8fe90156d41cd480d3dfbb40f3bc007c262 nd_blk: change aperture mapping from WC to WB
033fbae988fcb67e5077203512181890848b8e90 mm: ZONE_DEVICE for "device memory"
41e94a851304f7acac840adec4004f8aeee53ad4 add devm_memremap_pages
96601adb745186ccbcf5b078d4756f13381ec2af x86, pmem: clarify that ARCH_HAS_PMEM_API implies PMEM mapped WB
e1455744b27c9e6115c3508a7b2902157c2c4347 libnvdimm, pfn: 'struct page' provider infrastructure
32ab0a3f51701cb37ab960635254d5f84ec3de0a libnvdimm, pmem: 'struct page' for pmem
004f1afbe199e6ab20805b95aefd83ccd24bc5c7 libnvdimm, pmem: direct map legacy pmem by default
4bbd4c776a63a063546552de42f6a535395f6d9e mm: move get_user_pages()-related code to separate file
1027e4436b6a5c413c95d95e50d0f26348a602ac mm: make GUP handle pfn mapping unless FOLL_GET is requested
c94c2acf84dc16cf4b989bb0bc849785b7ff52f5 dax: move DAX-related functions to a new header
4897c7655d9419ba7e62bac145ec6a1847134d93 thp: prepare for DAX huge pages
b96375f74a6d4f39fc6cbdc0bce5175115c7f96f mm: add a pmd_fault handler
fc43704437ebe40f642ac53f7ee73661fe74e6b8 mm: export various functions for the benefit of DAX
844f35db1088dd1a9de37b53d4d823626232bd19 dax: add huge page fault support
e7b1ea2ad6581b83f63246db48aa2c2c9bf2ec8d ext2: huge page fault support
11bd1a9ecdd687b8a4b9b360b7e4b74a1a5e2bd5 ext4: huge page fault support
acd76e74d80f961553861d9cf49a62cbcf496d28 xfs: huge page fault support
dd8a2b6c29a3221c19ab475c8408fc2b914ccfab fs/dax.c: fix typo in #endif comment
e676a4c191653787c3fe851fe3b9f1f33d49dac2 ext4: use ext4_get_block_write() for DAX
84c4e5e675408b6fb7d74eec7da9a4a5698b50af dax: improve comment about truncate race
ed923b5776a2d2e949bd5b20f3956d68f3c826b7 ext4: add ext4_get_block_dax()
01a33b4ace68bc35679a347f21d5ed6e222e30dc ext4: start transaction before calling into DAX
843172978bb92997310d2f7fbc172ece423cfc02 dax: fix race between simultaneous faults
5b701b846aad7909d20693bcced2522d0ce8d1bc thp: decrement refcount on huge zero page if it is split
da146769004e1dd5ed06853e6d009be8ca675d5f thp: fix zap_huge_pmd() for DAX
d295e3415a88ae63a37a22652808b20c7fcb970e dax: don't use set_huge_zero_page()
73a6ec47f68787df1b41869def52915da2f4a6b7 dax: ensure that zero pages are removed from other processes
3fdd1b479dbc03347e98f904f54133a9cef5521f dax: use linear_page_index()
46c043ede4711e8d598b9d63c5616c1fedb0605e mm: take i_mmap_lock in unmap_mapping_range() for DAX
d77e92e270edd79a2218ce0ba5b6179ad0c93175 dax: update PMD fault handler with PMEM API
4be9c1fc3df9c3b03c9bde8aec5e44fc73996a3f libnvdimm: btt_devs: Fix locking in namespace_store
4ca8b57a0af145f4e791f21dbca6ad789da9ee8b libnvdimm: pfn_devs: Fix locking in namespace_store
ba8fe0f85e15d047686caf8a42463b592c63c98c pmem: add proper fencing to pmem_rw_page()
8346c416d17bf5b4ea1508662959bb62e73fd6a5 dax: fix NULL pointer in __dax_pmd_fault()
0f90cc6609c72b0bdf2aad0cb0456194dd896e19 mm, dax: fix DAX deadlocks
86fb449b07b8215443a30782dca5755d5b8b0577 pNFS/flexfiles: Fix an Oopsable typo in ff_mirror_match_fh()
d600ad1f2bdbf97c4818dcc85b174f72c90c21bd NFS41: pop some layoutget errors to application
c18b96a1b8629db8cf5ac9f8974ccb4abcc209ab nfs: clean up rest of reqs when failing to add one
2bff2288579f1e4af2f05a7f7443c85b7766d5ac nfs: centralize pgio error cleanup
0bcbf039f6b2bcefe4f5dada76079080edf9ecd0 nfs: handle request add failure properly
d6c843b96e1cb5199147e3281a724e3c0b69a9ab nfs: only remove page from mapping if launder_page fails
6ca7d910121af4dd8c83294b50546f4664b2a932 locks: Use more file_inode and fix a comment
6343a2120862f7023006c8091ad95c1f16a32077 locks: use file_inode()
783013c0f5c7263a31703b15aeebbac279b4d4fe GFS2: Release iopen glock in gfs2_create_inode error cases
a4923865ea071b0bd708339df7a83c76732fa2db GFS2: Prevent delete work from occurring on glocks used for create
73b462d2808d7cbca4d7886cf6aaed850640e6cd GFS2: Eliminate parameter non_block on gfs2_inode_lookup
3ce37b2cb4917674fa5b776e857dcea94c0e0835 gfs2: Fix gfs2_lookup_by_inum lock inversion
ec5ec66ba48bd3163110599359797858ac38e79b gfs2: Get rid of gfs2_ilookup
cda9dd4207aeb29d0aa2298085cc2d1ebcb87e04 gfs2: Large-filesystem fix for 32-bit systems
6df9f9a253c7dc9f8ed18bf89d762de350a31813 gfs2: Lock holder cleanup
b4bba38909c21689de21355e84259cb7b38f25ac fs: export __block_write_full_page
102f4d900c9c8f5ed89ae4746d493fe3ebd7ba64 FS-Cache: Handle a write to the page immediately beyond the EOF marker
a39d4a857d4bb0a62d6655c0d69f7387fe1ad160 printk: add and use LOGLEVEL_<level> defines for KERN_<LEVEL> equivalents
d5df731ab804e0d917f44099bfeb88a5f1488a3d block: Initialize max_dev_sectors to 0
03100aada96f0645bbcb89aea24c01f02d0ef1fa block: Replace SG_GAPS with new queue limits mask
2ca495ac27d245513c11fed70591b1838250e240 blk: Fix bio_io_vec index when checking bvec gaps
0cb6c969ed9de43687abdfc63714b6fe4385d2fc net, lib: kill arch_fast_hash library bits
c3c7f14a116c24d6fba185c95cd7454f3764f8a9 x86/jump-label: Use best default nops for inital jump label calls
997963edd912a6d77d68b2bbc19f40ce8facabd7 x86/asm: Clean up frame pointer macros
ec5186557abbe711dfd34e1863735dfecb0602cc x86/asm: Add C versions of frame pointer macros
c0dd671686b2229e888ede77682ab0633b2a0dd7 objtool: Mark non-standard object files and directories
442f04c34a1a467759d024a1d2c1df0f744dcb06 objtool: Add tool to perform compile-time stack metadata validation
b9ab5ebb14ec389bd80f66613f1fe3f8f65f2521 objtool: Add CONFIG_STACK_VALIDATION option
d4883d5d6b146fd65f762c462b2c6d4a327c7d50 objtool: Enable stack metadata validation on 64-bit x86
19072f23d1d785c093b7f81cb1fb161e7a13ecc0 x86/asm/decoder: Use explicitly signed chars
c1d45c3abd49b5bf9447e435099c1b000dcde752 objtool: Support CROSS_COMPILE
3b27a0c85d7068130ed8e3977a2e977ade986841 objtool: Detect and warn if libelf is missing and don't break the build
81bfafca1332869160e9da789252276e2f34a14e objtool: Prevent infinite recursion in noreturn detection
b1e03249510b32645826bbf61a1452dd766c2e5c objtool: Detect infinite recursion
d435fb5ef74c31909ca58f93aa87ad09b17bbe9a objtool: Compile with debugging symbols
d8d1b2cb58540b0cf572be4715167c473193888e objtool: Fix false positive warnings related to sibling calls
74aec058beb0bdaf64454291ef4ba176932bfad3 objtool: Add helper macros for traversing instructions
e2a5f18a1ba11e8b1e9ee53b6fca4be12bb5749e objtool: Remove superflous INIT_LIST_HEAD
a196e17198224cacd2d992f12cb6d81d354de82f objtool: Rename some variables and functions
8133fbb4240ae2918d993defa0f6824864412f56 objtool: Fix false positive warnings for functions with multiple switch statements
042ba73fe7eb63872ee2d6ac86410052210c1f16 objtool: Add several performance improvements
1bcb58a099938c33acda78b212ed67b06b3359ef objtool: Only print one warning per function
7e578441a4a3bba2a79426ca0f709c801210d08e objtool: Add workaround for GCC switch jump table bug
b1547d3101e74e809b9790174b27f1080747b009 objtool: Detect falling through to the next function
2e51f26245701cb28f154552836b7807159088a8 objtool: Allow building with older libelf
87aaff2ae09036cf699fde20dfd52ce7d3c8eabe x86/kprobes: Mark kretprobe_trampoline() stack frame as non-standard
983bb6d254c77aaec581473e11c2eb859294f1f2 x86/xen: Mark xen_cpuid() stack frame as non-standard
8e05e96ac949c80704d0a38420bf60dcf18c938f sched: Mark __schedule() stack frame as non-standard
69e8544cd0056e02965ffb5e8414fb7501a2ee2e x86/asm/64: Open-code register save/restore in trace_hardirqs*() thunks
058fb73274f9e7eb72acc9836cbb2c4a9f9659a0 x86/asm/entry: Create stack frames in thunk functions
d4bf7078c43e11097e0d6f04d3fb999bf92c4fb0 x86/entry/64: Fix stack return address retrieval in thunk
d21001cc15ba9f63b0334d60942278587471a451 x86/asm/bpf: Create stack frames in bpf_jit.S
f66f61919eb38c5f20e8a978cae7ecdede4c23b9 x86/asm/crypto: Move jump_table to .rodata section
f05058c4d652b619adfda6c78d8f5b341169c264 x86/uaccess: Add stack frame output operand in get_user() inline asm
3387a535ce629906d849864ef6a3c3437a645cb5 x86/asm: Create stack frames in rwsem functions
6b93b7dd85dc0788eedc6ad30ff0b01ad9d4c657 aacraid: Fundamental reset support for Series 7
548f0e65a38f36976260a63ff4acfa9f3b17307d aacraid: add missing curly braces
dece8d2b78d19df7fe5e4e965f1f0d1a3e188d1b uapi: add MACsec bits
3c17578473b9be5a6e7680a45ea97e1d56e13249 net: add MACsec netdevice priv_flags and helper
748164802c1bd2c52937d20782b07d8c68dd9a4f macsec: add missing macsec prefix in uapi
8acca6acebd07b238af2e61e4f7d55e6232c7e3a macsec: key identifier is 128 bits, not 64
1968a0b8b6ca088bc029bd99ee696f1aca4090d0 macsec: fix netlink attribute for key id
ae5f2fb1d51fa128a460bcfbe3c56d7ab8bf6a43 openvswitch: Zero flows on allocation.
18e8e5c7a9f9aef1b45e0729dc340989d5a954d0 mm: Drop unlikely before IS_ERR(_OR_NULL)
e5f5d74747afa799bff109644be04b00af36043e openvswitch: fix trivial comment typo
6f15cdbf8a8ac2e22767cc8b1eae225702733c95 ovs: allow nl 'flow set' to use ufid without flow key
35d4e1725202e6656fcfa8b88447327ad3ae0c0c net: add netif_is_ovs_master helper with IFF_OPENVSWITCH private flag
4272cc51a6dcf2c086863372fd593809ffced7d5 openvswitch: Convert to using IFF_NO_QUEUE
adff6c65600000ec2bb71840c943ee12668080f5 netfilter: connlabels: change nf_connlabels_get bit arg to 'highest used'
106da663ff495e0aea3ac15b8317aa410754fcac ovs/gre,geneve: fix error path when creating an iface
cf5da330bbdd0c06b05c525a3d1d58ccd82c87a6 ovs/vxlan: fix rtnl notifications on iface deletion
da6f1da819d4b9c081a477dec74dc468a0b44290 ovs/gre: fix rtnl notifications on iface deletion
41009481b690493c169ce85f591b9d32c6fd9422 ovs/geneve: fix rtnl notifications on iface deletion
472681d57a5dde7c6d16b05469be57f1c4ed9d99 net: ndo_fdb_dump should report -EMSGSIZE to rtnl_fdb_dump.
7d34fa75d3ee99a90ebb33c2917aa9152fb36a9c vxlan: fix too large pskb_may_pull with remote checksum
fac8e0f579695a3ecbc4d3cac369139d7f819971 tunnels: Don't apply GRO to multiple layers of encapsulation.
a09a4c8dd1ec7f830e1fb9e59eb72bddc965d168 tunnels: Remove encapsulation offloads on decap.
0c867c9bf84ce2a998f83725bd363f66ce84d548 vxlan: move Ethernet initialization to a separate function
47e5d1b06305e73afc917f47b65490adb06c7194 vxlan: move fdb code to common location in vxlan_xmit
a6d5bbf34efa8330af7b0b1dba0f38148516ed97 ip_tunnel: implement __iptunnel_pull_header
e1e5314de08ba6003b358125eafc9ad9e75a950c vxlan: implement GPE
421b3885bf6d56391297844f43fb7154a6396e12 udp: ipv4: Add udp early demux
f69b923a758f598fd6bb69e57564b59506f4f1fc udp: fix a typo in __udp4_lib_mcast_demux_lookup
8afdd99a1315e759de04ad6e2344f0c5f17ecb1b udp: ipv4: fix an use after free in __udp4_lib_rcv()
610438b74496b2986a9025f8e23c134cb638e338 udp: ipv4: fix potential use after free in udp_v4_early_demux()
975022310233fb0f0193873d79a7b8438070fa82 udp: ipv4: must add synchronization in udp_sk_rx_dst_set()
e47eb5dfb296bf217e9ebee7b2f07486670b9c1b udp: ipv4: do not use sk_dst_lock from softirq context
63c6f81cdde58c41da62a8d8a209592e42a0203e udp: ipv4: do not waste time in __udp4_lib_mcast_demux_lookup
6e540309326188f769e03bb4c6dd8ff6752930c2 ipv4/udp: Verify multicast group is ours in upd_v4_early_demux()
ad0ea1989cc4d5905941d0a9e62c63ad6d859cef ipv4: fix broadcast packets reception
82eabd9eb2ec1603282a2c3f74dfcb6fe0aaea0e net: merge cases where sock_efree and sock_edemux are the same function
10e2eb878f3ca07ac2f05fa5ca5e6c4c9174a27a udp: fix dst races with multicast early demux
5cf3d46192fccf68b4a4759e4d7346e41c669a76 udp: Simplify __udp*_lib_mcast_deliver.
2dc41cff7545d55c6294525c811594576f8e119c udp: Use hash2 for long hash1 chains in __udp*_lib_mcast_deliver.
33b4b015e1a1ca7a8fdce40af5e71642a8ea355c net/ipv6/udp: Fix ipv6 multicast socket filter regression
63058308cd55182bbfd7a87970bd57883fcfbd2e udp: Add udp6_lib_lookup_skb and udp4_lib_lookup_skb
a6024562ffd7e0f31bc6671817840ad1e91de7b4 udp: Add GRO functions to UDP socket
5602c48cf87562c2f95b831d690631935e834295 vxlan: change vxlan to use UDP socket GRO
4a0090a98e5f6e7813d807c883abf362df4b0507 geneve: change to use UDP socket GRO
46aa2f30aa7fe03a4dcd732b009284c02ff4f093 udp: Remove udp_offloads
ed7cbbce544856b20e5811de373cf92e92499771 udp: Resolve NULL pointer dereference over flow-based vxlan device
61618eeac3e6165684895481c4f58ea879c3d616 vxlan: fix incorrect type
0412bd931f5f94d1054e958415c4a945d8ee62f4 vxlan: synchronously and race-free destruction of vxlan sockets
544a773a01828e3cc3b553721f68d880d0d27a97 vxlan: reduce usage of synchronize_net in ndo_stop
41419b9303f085e8912406140355e45230fed22f fm10k: protect fm10k_open in fm10k_io_resume with rtnl_lock
b7aade15485a660cbf5161962c284131324a9534 vxlan: break dependency with netdev drivers
681e683ff30ada19f73c17c38a528528dd8824f1 geneve: break dependency with netdev drivers
65226ef8ea167c773de4c5b31a0fd3cb3a08f5b4 vxlan: fix initialization with custom link parameters
996e802187889f1cd412e6929c9344b92ccb78c4 net: Disable segmentation if checksumming is not supported
af67eb9e7e1ab37880459f83153d34b3c42b0075 vxlan: Add checksum check to the features check function
8be0cfa4d352167df508acd571eb19afd8a2ce93 vxlan: set mac_header correctly in GPE mode
e5aed006be918af163eb397e45aa5ea6cefd5e01 udp: prevent skbs lingering in tunnel socket queues
ce577668a426c6a9e2470a09dcd07fbd6e45272a vxlan: Accept user specified MTU value when create new vxlan link
01a14098d3374e1b931d605da666300ee248d3d9 net/mlx5e: Call vxlan_get_rx_port() with rtnl lock
a59b679ab85635737947310323f2f2bcfa0664a7 ACPICA: acpi_get_sleep_type_data: Reduce warnings
eaad45132c564ce377e6dce05e78e08e456d5315 sched: Fix __sched_setscheduler() nice test
4efbc454ba68def5ef285b26ebfcfdb605b52755 sched: Fix information leak in sys_sched_getattr()
6d35ab48090b10c5ea5604ed5d6e91f302dc6060 sched: Add 'flags' argument to sched_{set,get}attr() syscalls
143cf23df25b7082cd706c3c53188e741e7881c3 sched: Make sched_setattr() correctly return -EFBIG
dbdb22754fde671dc93d2fae06f8be113d47f2fb sched: Disallow sched_attr::sched_policy < 0
b14ed2c273f8ab872ae4e6735fe5ab09cb14b8c3 sched: Fix sched_policy < 0 comparison
5778fccf361c9ba443b45d822f3d875f64c80084 sched/core: Fix htmldocs warnings
db66d756c74acb886c51f11b501c2fe622018a0a sched/docbook: Fix 'make htmldocs' warnings caused by missing description
685207963be973fbb73550db6edaf920a283e1a7 sched: Move h_load calculation to task_h_load()
72a4cf20cb71a327c636c7042fdacc25abffc87c sched: Change cfs_rq load avg to unsigned long
b92486cbf2aa230d00f160664858495c81d2b37b sched: Compute runnable load avg in cpu_load and cpu_avg_load_per_task
9396dec916c052855dbb5b876c13d163df397319 nvme: use a work item to submit async event requests
79f2b358c9ba373943a9284be2861fde58291c4e nvme: don't poll the CQ from the kthread
2d55cd5f511d6fc377734473b237ac50820bfb9f nvme: replace the kthread with a per-device watchdog timer
9bf2b972afeaffd173fe2ce211ebc555ea7e8a87 NVMe: Fix reset/remove race
c875a7093f0479215cf9bf51356d7638f2ec5746 nvme: Avoid reset work on watchdog timer function during error recovery
08095e70783f1d8296f858d37a9e1878f5da0623 NVMe: Create discard zero quirk white list
54adc01055b75ec8769c5a36574c7a0895c0c0b2 nvme/quirk: Add a delay before checking for adapter readiness
023954351fae0e34ba247cff4d798c98290b20a4 dax: fix offset overflow in dax_io
7f4b36f9bb930b3b2105a9a2cb0121fa7028c432 get rid of files_defer_init()
752343be63d90c84d275f046e43371febe217863 fs/file.c: __const_max is actually __const_min :-)
64ce60cab24603ac0fcd59c9fbc3be78f4c4d229 hpsa: correct skipping masked peripherals
2d3b479df41a10e2f41f9259fcba775bd34de6e4 net-sysfs: expose number of carrier on/off changes
053c095a82cf773075e83d7233b5cc19a1f73ece netlink: make nlmsg_end() and genlmsg_end() void
f5d258e60722142e88cb6f0f337d78bca67cf973 sctp: reorder sctp_ulpevent and shrink msg_flags
1f45f78f8e511203f03138f2ccde3d2cf90d2cbf sctp: allow GSO frags to access the chunk too
d9cef42529402f9fce10376b6e427a5137d90c3d sctp: do not clear chunk->ecn_ce_done flag
f1533cce60d1f84378c1dd925f9ef1038fa93507 sctp: fix panic when sending auth chunks
f7010e61442c80333b38aa026a551043a341fb8d sctp: fix checkpatch errors with indent
28aa4c26fce2202db8d42ae76b639ca1d9a23d25 sctp: add SCTP_PR_SUPPORTED on sctp sockopt
f959fb442c35f4b61fea341401b8463dd0a1b959 sctp: add SCTP_DEFAULT_PRINFO into sctp sockopt
826d253d57b11f69add81c8086d2e7f1dce5ec77 sctp: add SCTP_PR_ASSOC_STATUS on sctp sockopt
a6c2f792873aff332a4689717c3cd6104f46684c sctp: implement prsctp TTL policy
01aadb3af6e1b10970c1f7e510b5097c8f725d64 sctp: implement prsctp RTX policy
8dbdf1f5b09cb22560e7c7173b52fe3c631046bd sctp: implement prsctp PRIO policy
75ff39ccc1bd5d3c455b6822ab09e533c551f758 tcp: make challenge acks less predictable
083ae308280d13d187512b9babe3454342a7987e tcp: enable per-socket rate limiting of all 'challenge acks'
ba9cee6aa67dd67ad1bf121ee20efc00241f086f cxgb4/iw_cxgb4: TOS support
e7fddaf0caf50784a00930f9838bcd4260aa1cfa iw_cxgb4: Cleanup register defines/MACROS defined in t4fw_ri_api.h
edadad80d65bf9c7aa9f2605dbd2eef94ccd47c0 cxgb4/cxgb4vf: For T6 adapter, set FBMIN to 64 bytes
9dec900c20d95ef1f3c40bc5d5901499f5d63381 RDMA/iw_cxgb4: release ep resources on accept arp failure
8d1f1a6b3fccfce5d95ee0d6456b1437e93f2bba RDMA/iw_cxgb4: parent_ep has to be dereferenced in case of passive accept failure
e4b76a2a2619e95deb1ae2b088c0aa4f24a0bbee RDMA/iw_cxgb4: stop_ep_timer() after MPA negotiation
8a70f812b16ea4523938749a168817ffed232df9 RDMA/iw_cxgb4: in process_timeout() don't move ep state to ABORTING
944661dd97f4f257cd914fffec7eb80832ff9141 RDMA/iw_cxgb4: atomically lookup ep and get a reference
ceb110a8c1518f54913568bf84f84df573db99e4 RDMA/iw_cxgb4: Release ep for for FPDU_MODE and MPA_REQ_RCVD in process_timeout
f86fac79afecb41682886785364b15cb13f22280 RDMA/iw_cxgb4: atomic find and reference for listening endpoints
4a4dd8db9dc15579edc62631326f37c43fda0942 RDMA/iw_cxgb4: Handle ret value of process_mpa_reply() in rx_data
093108cb3640844cfdabb0f506fa6b592b64272d RDMA/iw_cxgb4: Always wake up waiter in c4iw_peer_abort_intr()
64bec74a9b3ccc0e9795161427ea49864462f612 RDMA/iw_cxgb4: Add arp failure handlers to send_mpa_reply/reject()
765d67748bcf802c4642a49cd0139787d0d80783 IB: new common API for draining queues
170003c894d93332e1b4162aa06864ad83eb302d iw_cxgb4: remove port mapper related code
42235f80ab205bf5020cf33cb3e94455410abe36 IB/core: Don't drain non-existent rq queue-pair
f48e72318aa6f6ac792eaf74f3b77491a5c43891 rds: duplicate include net/tcp.h
dcdede0406d30e14a6ed727dce69dfac0518371d RDS: Drop stale iWARP RDMA transport
dcfd041c8710320d59fce322fd901bddaf912ae8 RDS: IB: Remove the RDS_IB_SEND_OP dependency
f6df683f32f09f8c0c440bdd3741a1e7dc7927fe RDS: IB: Re-organise ibmr code
a69365a39cd35d0ad11be7d4a896b2f76a8fde44 RDS: IB: create struct rds_ib_fmr
490ea5967b0d94b84747d3327903d31f287f30e5 RDS: IB: move FMR code to its own file
d4de76da5c39582aa14a94186c35b4aec6ef292c RDS: IB: add connection info to ibmr
2cb2912d65633e751d3f8397377174501412aa47 RDS: IB: add Fastreg MR (FRMR) detection support
ad6832f950d35df8c70b577993a24b31b34d88e4 RDS: IB: allocate extra space on queues for FRMR support
1659185fb4d0025835eb2058a141f0746c5cab00 RDS: IB: Support Fastreg MR (FRMR) memory registration mode
c6a58ffed53612be86b758df1cdb0b0f4305e9cb RDS: TCP: Add sysctl tunables for sndbuf/rcvbuf on rds-tcp socket
a3382e408b645b4f68ec01f9c048e356c62598fb RDS: TCP: Remove unused constant
eb192840266fab3e3da644018121eed30153355d RDS:TCP: Synchronize rds_tcp_accept_one with rds_send_xmit when resetting t_sock
bd7c5f983f3185b75cc23bdd5dbc3a676aef3d1e RDS: TCP: Synchronize accept() and connect() paths on t_conn_lock.
fffb0383cf0b433ad029d19e6e9d6f1f46523ace IB/core: add a simple MR pool
d4a85c309b33f93cb211f2fa9d26fa77d0bb7b5e IB/core: add a need_inval flag to struct ib_mr
a060b5629ab066dd1d321430eeb96f70939a1790 IB/core: generic RDMA READ/WRITE API
0e353e34e1e740fe575eb479ca0f2a723a4ef51c IB/core: add RW API support for signature MRs
2fa2d4fb1166d1ef35f0aacac6165d53ab1b89c7 IB/core: Fix a potential array overrun in CMA and SA agent
e3f20f02864f6da1509c523bfa1e928619e59095 IB/core: Integrate IB address resolution module into core
4c2cb4220431cbf92233dc12733ee8962abb9081 IB/MAD: Integrate ib_mad module into ib_core module
c2e49c92326f9baaa490492c48bea5a7f49d3244 IB/SA: Integrate ib_sa module into ib_core module
735c631ae99d4b6cffc9e2774258329c526daa65 IB/core: Register SA ibnl client during ib_core initialization
ae43f8286730d1f2d241c34601df59f6d2286ac4 IB/core: Add IP to GID netlink offload
561392d42d42c0fefad179a07b6dd1e6e261a572 IB/srp: Use ib_drain_rq()
e012f3639c95498d4e8d7a9f44e33f1cd2f241b0 IB/srp: Fix srp_map_data() error paths
ffc548bb3601f0250474afcfa10ceb0b8b8b9764 IB/srp: Avoid that mapping failure triggers an infinite loop
3b59b7a693b0e5b2dc244bcd78899aa2585a434b IB/srp: Move code out of a loop
3849e44d1c4b11c9e0f0f0343a0360b5e9594fb6 IB/srp: Move common code into the caller
9d8e7d0dacf09ddac7e617d17dbeec6af56e81e8 IB/srp: Fix a memory descriptor leak in an error path
f83b2561a6d4ff12959660ad597580097b744941 IB/srp: Fix srp_create_target() error handling
835ee624c99d0b63797babf25abe208182bb88bf IB/srp: Swap two code blocks in srp_add_one()
509c5f33f4f6dc328d96bf4099ef6589739f22d4 IB/srp: Prevent mapping failures
c222a39f0d2652ff32e10a95979af9bf906b9844 IB/srp: Do not register memory if never_register has been set
54f5c9c52d69afa55abf2b034df8d45f588466c3 IB/srp: Fix a debug kernel crash
249f06561fc333581e48e6d388a56e3d100d23b6 IB/srp: Always initialize use_fast_reg and use_fmr
9edba790fc52322051fd7b6589421021f0726483 IB/srp: Fix srp_map_sg_dma()
51093254bf879bc9ce96590400a87897c7498463 IB/srpt: Simplify srpt_handle_tsk_mgmt()
0147ebcf8927f09e1923114092f6b14c1de75a95 IB/core: fix null pointer deref and mem leak in error handling
41aaa99fab6ceaa4b533c2b6ad4913987ddb3ddc IB/core: Fix array length allocation
495fbae6e2c115099921ba33b1e1bea1190b5280 IB/core: fix error unwind in sysfs hw counters code
8aec013afe6d9665eb478396026ebd4384dbe934 IB/core: Initialize sysfs attributes before sysfs create group
0ad17a8f7fa000cbfc51eedd7fddd20f7664e4b6 IB/mlx5: Add port protocol stats
0837e86a7a3422b85aa45c6f4631f6a3f74cbd01 IB/mlx5: Add per port counters
321a9e3ebccb5e6b61bd4efbb98ae259c6b8609b IB/mlx5: Fix port counter ID association to QP offset
0fbd050a7d262b74527a289ae75a33626d1060a8 virtio_net: add gro capability
340991e30ccef7b983cf2814ecea610504f5d059 crypto: sha512_ssse3 - add sha384 support
a710f761fc9ae5728765a5917f8beabb49f98483 crypto: sha256_ssse3 - add sha224 support
7d444909a25ed4a9dbc546bf9528c8d2e3bf3752 crypto: sha256_ssse3 - use correct module alias for sha224
a6326ba025a4bc025c8c9a15ea2f307936a93843 crypto: sha - replace memset by memzero_explicit
1631030ae63aef0a54fe08813e0f4e26c8ef9c78 crypto: x86/sha256_ssse3 - move SHA-224/256 SSSE3 implementation to base layer
e68410ebf62676dfb93aafff7c55b76644f37072 crypto: x86/sha512_ssse3 - move SHA-384/512 SSSE3 implementation to base layer
95fca7df0b4964fbe3fe159e3d6e681e6b5b7a53 crypto: x86/sha - glue code for Intel SHA extensions optimized SHA1 & SHA256
e38b6b7fcfd11fb83dcac54a33cbca3739c45a09 crypto: x86/sha - Add build support for Intel SHA Extensions optimized SHA1 and SHA256
a7c58ac06224b83dba93eaafde88535d5da60aef crypto: crc32 - Rename generic implementation
a6d7bfd0ff21f258913dd5e626d2bd70ab3942df crypto: rsa-pkcs1pad - fix rsa-pkcs1pad request struct
bd9f55ea1cf6e14eb054b06ea877d2d1fa339514 dm: fix second blk_delay_queue() parameter to be in msec units not jiffies
38f252553300ee1d3346a5273e95fe1dd60ca50a block: add __blkdev_issue_discard
05bd92dddc595d74ea645e793c1f3bd4b1fc251a block: missing bio_put following submit_bio_wait
0a7b818892e27f6a6ac728a525bd0d8a307fe2bc dm raid: the sync_page_io() metadata_op argument is bool
9c72bad1f31af96d9012025639552cd5732bb0a5 dm: call PR reserve/unreserve on each underlying device
eaa2c3aeef83f096cd1ec73df1310712e423337b cpufreq: powernv: Ramp-down global pstate slower than local-pstate
1fd3ff2874f79c04354f3e80e583afbe6fa6eaa2 cpufreq: powernv: Move smp_call_function_any() out of irq safe block
0bc10b93f2d9c6089ce968681ef9febecdc9b8e0 cpufreq: powernv: del_timer_sync when global and local pstate are equal
bcf4dd5f9ee096bd1510f838dd4750c35df4e38b s390: fix test_fp_ctl inline assembly contraints
00839ee3b299303c6a5e26a0a2485427a3afcbbf x86/mm: Move swap offset/type up in PTE to work around erratum
97e3c602ccbdd7db54e92fe05675c664c052a466 x86/mm: Ignore A/D bits in pte/pmd/pud_none()
e4a84be6f05eab4778732d799f63b3cd15427885 x86/mm: Disallow running with 32-bit PTEs to work around erratum
e4568d3803852d00effd41dcdd489e726b998879 mm, meminit: always return a valid node from early_pfn_to_nid
ef70b6f41cda6270165a6f27b2548ed31cfa3cb2 mm, meminit: ensure node is online before checking whether pages are uninitialised
e97f6c545f963abd7de56a58a29ba73a9edee015 xfs: fix xfs_error_get_cfg for negative errnos
0b4db5dff3599b46957bfd8a4c66945c915e26d3 xfs: remove extraneous buffer flag changes
5539d36752eb789f4067a9f88e72177895d56317 xfs: don't reset b_retries to 0 on every failure
b581755b1c565391c72d03b157ba2dd0b18e9d15 ovl: xattr filter fix
03bea60409328de54e4ff7ec41672e12a9cb0908 ovl: get_write_access() in truncate
b99c2d913810e56682a538c9f2394d76fca808f8 ovl: handle ATTR_KILL*
c8d577038449a718ad0027d1790b6ef4441715d4 gfs2: Extended attribute readahead
39b0555f7a1f96ecd303103df15596db49c36c65 gfs2: Extended attribute readahead optimization
98f179a5eaf77eaac49df3d0c217c6eaaba8c0db IB/hfi1: Fix sleep inside atomic issue in init_asic_data
cb2911fed61497e4d0383355f1c865fcdaa94061 hv_netvsc: Fix VF register on vlan devices
e2b9f1f7af1dfe20df8e68849ebb4bbafed5727a hv_netvsc: Fix VF register on bonding devices
e9e7cb38c21c80c82af4b16608bb4c8c5ec6a28e sched/core: Fix sched_rt_global_validate
5057dcd0f1aaad57e07e728ba20a99e205c6b9de virtio_balloon: export 'available' memory to balloon statistics
9e50bc14a7f58b5d8a55973b2d69355852ae2dae ACPI / battery: Accelerate battery resume callback
9bfefde718c1352d9499125bce50b2a0e8a3db4c s390/dasd: fix incorrect locking order for LCU device add/remove
c0b124054f9e42eb6da545a10fe9122a7d7c3f72 mm/hmm/mirror: mirror process address space on device with HMM helpers
b8da344b74c822e966c6d19d6b2321efe82c5d97 cifs: dynamic allocation of ntlmssp blob
9c7504aa72b6e2104ba6dcef518c15672ec51175 xfs: track and serialize in-flight async buffers against unmount
48c9579a1afe4315be4576ec4c0b24c2715da0e0 Adding stateid information to tracepoints
2e5b29f0448be9ea8da3ee0412a2043fee59e131 pNFS/flexfiles: Don't prevent flexfiles client from retrying LAYOUTGET
849dc3244c916545790bfb9055625a3719061c92 nfs4: nfs4_ff_layout_prepare_ds should return NULL if connection failed
90a0be00e9d29d9baac27c0c63a5e71ca1334001 nfs: get a reference to the credential in ff_layout_alloc_lseg
3064b6861d00b7124558cdf79f9387f948361be3 nfs: have flexfiles mirror keep creds for both ro and rw layouts
93b717fd81bf6b9a73c3702e9b079b4de8148b34 NFSv4: Label stateids with the type
8487c479e2668dd1231e9c3c77a203d744aec081 NFSv4: Allow retry of operations that used a returned delegation stateid
4ae770bf58ce6315e0f4a1bd4b7e574bdfa59ca9 {pktgen, xfrm} Correct xfrm_state_lock usage in xfrm_stateonly_find
8c0cba22e196122d26c92980943474eb53db8deb xfrm: Take xfrm_state_lock in xfrm_migrate_state_find
f4dc77713f8016d2e8a3295e1c9c53a21f296def netfilter: x_tables: speed up jump target validation
c5c4e45c4b79acb23f07e43dac1348e67b4ddf91 sctp: fix GSO for IPv6
2ccbe2cb79f2f74ab739252299b6f9ff27586f2c macsec: limit ICV length to 16 octets
34aedfee22967236adc3d9147c8b47b7f5bad26c macsec: fix error codes when a SA is created
96183182ad05d1ce31b9048921c12bf4ad621eaf ibmvnic: fix to use list_for_each_safe() when delete items
b8efb894e672bd0080126c68a076ddcacfcbc0ef ibmvnic: properly start and stop tx queues
88eb98a0178219e1d6e9037b71d293f19b89eef2 ibmvnic: dispose irq mappings
ea22d51a7831b062978fcf07c3c5ac7ecbb6cbeb ibmvnic: simplify and improve driver probe function
65dc689182ec5117896d876cc03405ac51427314 ibmvnic: Fix passive VNIC server login process
efc151c33b971148894789dc7c5589dec46d4348 rcu: Convert rcutree_plugin.h printk calls
f4579fc57cf4244057b713b1f73f4dc9f0b11e97 rcu: Fix attempt to avoid unsolicited offloading of callbacks
d4f1b06d685d11ebdaccf11c0db1cb3c78736862 Input: vmmouse - fix absolute device registration
60842ef8128e7bf58c024814cd0dc14319232b6c Input: vmmouse - remove port reservation
635f6b0893cff193a1774881ebb1e4a4b9a7fead cxlflash: Fix to resolve dead-lock during EEH recovery
a430739009384ba2c4804f3a427334ff395433cd cxl: Make vPHB device node match adapter's
f411396d9492761ab4f9fb58aa363a2926b94af8 cxlflash: Fix to drain operations from previous reset
96e1b660faa44c958d19ccf064b939a00bed6c90 cxlflash: Add device dependent flags
704c4b0ddc03fc8a6575086070a823d3ef6e5fc4 cxlflash: Shutdown notify support for CXL Flash cards
1bd2b2823e5aa219b2442fd4568a075efe81de5f cxlflash: Verify problem state area is mapped before notifying shutdown
a639315d6c536c806724c9328941a2517507e3e3 pmem: kill memremap_pmem()
b36f47617f6ce7c5e8e7c264b9d9ea0654d9f20a devm_memremap: convert to return ERR_PTR
7eff93b7c99f5d0024aee677c6c92e32af22e1d2 devm_memremap_pages: use numa_mem_id
538ea4aa44737127ce2b5c8511c7349d2abdcf9c pmem, memremap: convert to numa aware allocations
5726b27b09cc92452b543764899a07e7c8037edd ext2: Add locking for DAX faults
4ecd4fef3a074c8bb43c391a57742c422469ebbd block: use an atomic_t for mq_freeze_depth
3ef28e83ab15799742e55fd13243a5f678b04242 block: generic request_queue reference counting
ca321d1ca6723ed0e04edd09de49c92b24e3648e ACPICA: Update NFIT table to rename a flags field
564d501187317f8df79ddda173cf23735cbddd16 nfit: in acpi_nfit_init, break on a 0-length table
209851649dc4f7900a6bfe1de5e2640ab2c7d931 acpi: nfit: Add support for hot-add
3e12dbbdbd8809f0455920e42fdbf9eddc002651 xfs: fix inode size update overflow in xfs_map_direct()
1ca191576fc862b4766f58e41aa362b28a7c1866 xfs: Don't use unwritten extents for DAX
01a155e6cf7db1a8ff2aa73162d7d9ec05ad298f xfs: DAX does not use IO completion callbacks
3af49285854df66260a263198cc15abb07b95287 xfs: add ->pfn_mkwrite support for DAX
13ad4fe3e087ab66a140f1e00d98f28aa4e3bb28 xfs: xfs_filemap_pmd_fault treats read faults as write faults
f42957967fb435aef6fc700fbbd9df89533b9a2e tools/testing/nvdimm, acpica: fix flag rename build breakage
f7256dc0cdbc68903502997bde619f555a910f50 libnvdimm, e820: fix numa node for e820-type-12 pmem ranges
589e75d15702dc720b363a92f984876704864946 libnvdimm, pmem: fix size trim in pmem_direct_access()
8de5dff8bae634497f4413bc3067389f2ed267da libnvdimm: documentation clarifications
152d7bd80dca5ce77ec2d7313149a2ab990e808e dax: fix __dax_pmd_fault crash
ef83b6e8f40bb24b92ad73b5889732346e54a793 ext2, ext4: warn when mounting with dax enabled
ee82c9ed41e896bd47e121d87e4628de0f2656a3 dax: disable pmd mappings
2e6edc95382cc36423aff18a237173ad62d5ab52 block: protect rw_page against device teardown
bc0d0d093b379b0b379c429e3348498287c8a9ca libnvdimm, e820: skip module loading when no type-12
826c416f3c9493b69630a811832cfb7c9007f840 nfit: Account for table size length variation
ff5a55f89c6690a0b292f1a7e0cd4532961588d5 nfit: Fix the check for a successful NFIT merge
6b577c9d772c45448aec784ec235cea228b4d3ad nfit: Adjust for different _FIT and NFIT headers
d91e892825ae6f0ed4f8b07ae5d348eff86ab2ea nfit: acpi_nfit_notify(): Do not leave device locked
ea3d7209ca01da209cda6f0dea8be9cc4b7a933b ext4: fix races between page faults and hole punching
17048e8a083fec7ad841d88ef0812707fbc7e39f ext4: move unlocked dio protection from ext4_alloc_file_blocks()
32ebffd3bbb4162da5ff88f9a35dd32d0a28ea70 ext4: fix races between buffered IO and collapse / insert range
011278485ecc3cd2a3954b5d4c73101d919bf1fa ext4: fix races of writeback with punch hole and zero range
2dcba4781fa3842e28f47ab23056d58cd283fca6 ext4: get rid of EXT4_GET_BLOCKS_NO_LOCK flag
53085fac02d12fcd29a9cb074ec480ff0f77ae5c ext4: provide ext4_issue_zeroout()
c86d8db33a922da808a5560aa15ed663a9569b37 ext4: implement allocation of pre-zeroed blocks
ba5843f51d468644b094674c0317c9ab95632caa ext4: use pre-zeroed blocks for DAX page faults
bd26d0d0ce7434a86dde61a7c65c94fe3801d8f6 nvdimm: improve diagnosibility of namespaces
6bb691ac089c39bb0aa73bdcc21ffd8c846e4ba5 nvdimm: do not show pfn_seed for non pmem regions
9f1e8cee7742cadbe6b97f2c80b787b4ee067bae libnvdimm, pfn: kill ND_PFN_ALIGN
f7c6ab80fa5fee3daccb83a3c1b3a9f39d7b931c libnvdimm, pfn: clean up pfn create parameters
315c562536c42aa4da9b6c5a2135dd6715a5e0b5 libnvdimm, pfn: add 'align' attribute, default to HPAGE_SIZE
a34d5e8a6ad1a31b186019c9c351777626698863 libnvdimm, pfn: add parent uuid validation
2dc43331e34fa992a67f42ed44e5111cafafd6f3 libnvdimm, pfn: fix pfn seed creation
979fccfb7348dbd968daf0249aa484a0297f83df libnvdimm, pfn: enable pfn sysfs interface unit testing
3fa962686568a1617d174e3d2f5d522e963077c5 libnvdimm, pfn: fix nd_pfn_validate() return value handling
9bfa84969dd52bf0aa635c4c8a67c81d75ffca37 tools/testing/libnvdimm: cleanup mock resource lookup
0731de0dd95b251ed6cfb5f132486e52357fce53 libnvdimm, pfn: move 'memory mode' indication to sysfs
3b0fe47805802216087259b07de691ef47ff6fbc xfs: Don't use reserved blocks for data blocks with DAX
a6d7636e8d0fd94fd1937db91d5b06a91fa85dde xfs: fix recursive splice read locking with DAX
58f88ca2df7270881de2034c8286233a89efe71c xfs: introduce per-inode DAX enablement
2039e6acaf94d83ec6b6d9f3d0bce7ea1f099918 x86/mm/pat: Change free_memtype() to support shrinking case
e07ecd76d4db7bda1e9495395b2110a3fe28845a libnvdimm: fix namespace object confusion in is_uuid_busy()
4ebb16ca9a06a54cdb2e7f2ce1e506fa4d432445 block: introduce bdev_file_inode()
9e0e252a048b0ba5066f0dc15c3b2468ffe5c422 badblocks: Add core badblock management code
fc974ee2bffdde47d1e4b220cf326952cc2c4794 md: convert to use the generic badblocks code
d26f73f083ed6fbea7fd3fdbacb527b7f3e75ac0 nfit_test: Enable DSMs for all test NFITs
0caeef63e6d2f866d85bb507bf63e0ce8ec91cef libnvdimm: Add a poison list and export badblocks
ad9a8bde2cb19f6876f964fc48acc8b6a2f325ff libnvdimm, pmem: move definition of nvdimm_namespace_add_poison to nd.h
d3b407fb3f782bd915db64e266010ea30a2d381e badblocks: rename badblocks_free to badblocks_exit
20a308f09e0d29ce6f5a4114cc476a998d569bfb block: clarify badblocks lifetime
16263ff6c72eb4cc00aa287230144dda12ccad12 block, badblocks: introduce devm_init_badblocks
87ba05dff3510f9e058b35d3c3fa222b6f406ecc libnvdimm: don't fail init for full badblocks list
b95f5f4391fad65f1819c2404080b05ca95bdd92 libnvdimm: convert to statically allocated badblocks
e10624f8c09710b3b0740ea3847627ea02f55c39 pmem: fail io-requests to known bad blocks
710d69cc99507803ed91b4ec7368fbd66d59f014 libnvdimm, pmem: nvdimm_read_bytes() badblocks support
52db400fcd50216dd8511a0880b936235755836f pmem, dax: clean up clear_pmem()
0e749e54244eec87b2a3cd0a4314e60bc6781115 dax: increase granularity of dax_clear_blocks() operations
fe683adabfe6629c0b6db32bbbc1ce6cacbf2117 dax: guarantee page aligned results from bdev_direct_access()
b2e0d1625e193b40cbbd45b799f82d54d34e015c dax: fix lifetime of in-kernel dax mappings with dax_map_atomic()
ba049e93aef7e8c571567088b1b73f4f5b99272a kvm: rename pfn_t to kvm_pfn_t
34c0fd540e79fb49ef9ce864dae1058cca265780 mm, dax, pmem: introduce pfn_t
9476df7d80dfc425b37bfecf1d89edf8ec81fcb6 mm: introduce find_dev_pagemap()
4b94ffdc4163bae1ec73b6e977ffb7a7da3d06d3 x86, mm: introduce vmem_altmap to augment vmemmap_populate()
d2c0f041e1bb1260629ecea2161adb9778945aa3 libnvdimm, pfn, pmem: allocate memmap array in persistent memory
69660fd797c3e52f7f20478a27687f293d1a41be x86, mm: introduce _PAGE_DEVMAP
01c8f1c44b83a0825b573e7c723b033cece37b86 mm, dax, gpu: convert vm_insert_mixed to pfn_t
f25748e3c34eb8bb54853e9adba2d3dcf030503c mm, dax: convert vmf_insert_pfn_pmd() to pfn_t
468ded03c07e0f2b5f05332bc255add47b1b0dee libnvdimm, pmem: move request_queue allocation earlier in probe
5c2c2587b13235bf8b5c9027589f22eff68bdf49 mm, dax, pmem: introduce {get|put}_dev_pagemap() for dax-gup
3565fce3a6597e91b8dee3e8e36ebf70f8b7ef9b mm, x86: get_user_pages() for dax mappings
3f4a2670deea53e3765e24a7f46aafe6f077cb68 pmem: add wb_cache_pmem() to the PMEM API
f9fe48bece3af2d60e1bad65db4825f5a025dd36 dax: support dirty DAX entries in radix tree
7e7f774984cd88c45c18e7ffaf0256c3e9118043 mm: add find_get_entries_tag()
9973c98ecfda3a1dfcab981665b5f1e39bcde64a dax: add support for fsync/sync
80b4adcafc076d4179431656b7e83afea99ddec8 ext2: call dax_pfn_mkwrite() for DAX fsync/msync
d5be7a03b002a0faec136687ec03dbee6c579930 ext4: call dax_pfn_mkwrite() for DAX fsync/msync
5eb88dca9ce4546bdfca6e5defcd50fbe8ea8411 xfs: call dax_pfn_mkwrite() for DAX fsync/msync
eab95db69d334745d3034072f4a7204084136c88 dax: never rely on bh.b_dev being set by get_block()
9c41242817f4b6d908886c0fdb036d9246c50630 libnvdimm: fix mode determination for e820 devices
45eb570a0db3391c88cba04510a20fe7e4125497 libnvdimm, pfn: fix restoring memmap location
eb7d78c9e7f6418932bd5fbee45eb46d5ab05002 devm_memremap_pages: fix vmem_altmap lifetime + alignment handling
65f87ee71852a754f7981d0653e7136039b8798a fs, block: force direct-I/O for dax-enabled block devices
d1a5f2b4d8a125943dcb6b032fc7eaefc2c78296 block: use DAX for partition table reads
03fc2da63b9a33dce784a2075c7e068bb97cbf69 mm: fix pfn_t to page conversion in vm_insert_mixed
76e9f0ee52b0be5761e29847e0ef01f23f24f1df phys_to_pfn_t: use phys_addr_t
d2b2a28e640489df64cc50123f4c3c47d9ad7d13 dax: dirty inode only if required
db78c22230d0bcc8b27b81f05b39f104f08232c5 mm: fix pfn_t vs highmem
ee9737c924706aaa72c2ead93e3ad5644681dc1c x86/uaccess/64: Make the __copy_user_nocache() assembly code more readable
a82eee7424525e34e98d821dd059ce14560a1e35 x86/uaccess/64: Handle the caching of 4-byte nocache copies properly in __copy_user_nocache()
457a98b0809fa6cde7aab8c314a59d99772b445e mm, x86: fix pte_page() crash in gup_pte_range()
6697b2cf69d4363266ca47eaebc49ef13dabc1c9 nfit: fix multi-interface dimm handling, acpi6.1 compatibility
747ffe11b440ef9ea752888806d3aac677ca52a4 libnvdimm, tools/testing/nvdimm: fix 'ars_status' output buffer sizing
4577b0665515e0abc7bc72562d6328d179598815 nfit: update address range scrub commands to the acpi 6.1 format
03cdadb04077b9311bbc67d98cc5401aff76482d block: disable block device DAX by default
0a6cf9137ded4856b41910a4336677ee0ffa6736 ext2, ext4: only set S_DAX for regular inodes
20a90f58997245749c2bdfaea9e51f785ec90d0b dax: give DAX clearing code correct bdev
7f6d5b529b7dfe2fca30cbf4bc81e16575090025 dax: move writeback calls into the filesystems
1e9d180ba39f42e8ca4a808baef3a3ef034b1c2c ext2, ext4: fix issue with missing journal entry in ext4_dax_mkwrite()
6e2452dff4441e3dc24d415c8b2cda8a3ba52116 nfit: Continue init even if ARS commands are unimplemented
d77a117e6871ff78a06def46583d23752593de60 list: kill list_force_poison()
5f29a77cd95771edebbf41e5800fdd557c69302a mm: fix mixed zone detection in devm_memremap_pages
30f471fd88e0304bee2c17ef1a4651e705870817 dax: check return value of dax_radix_entry()
6e4de8660a54aad084534332f4708fe4a743c058 i40iw: changes for build of i40iw module
ff2ba9936591a1364ae21adf18366dca7608395a IB/core: Add passing an offset into the SG to ib_map_mr_sg
9aa8b3217ed3c13d4e3496020b140da0e6f49a08 IB/core: Enhance ib_map_mr_sg()
93d17397e4e2182fdaad503e2f9da46202c0f1c3 KVM: PPC: Book3S HV: Save/restore TM state in H_CEDE
81dc0365cfa7bc7c08a0e44d9ee04964df782e19 crypto: qat - make qat_asym_algs.o depend on asn1 headers
14e85c0e69d5c7fdbd963edbbec1dc5cdd385200 gpio: remove gpio_descs global array
426577bd8846d67b735b3a4e8926ef00abb15297 gpio: sysfs: rename gpiochip registration functions
ef7c7553039b3d1c847b38b0f1ea208f8d5d8370 gpiolib: improve overlap check of range of gpio
e28ecca6eac40646780b83edab81a496cea3d220 gpio: fix warning about iterator
96098df125c0a966631ec114081d8f5630a0e4b8 gpiolib: fix chip order in gpio list
ff2b1359229927563addbf2f5ad480660c350903 gpio: make the gpiochip a real device
fdeb8e1547cb9dd39d5d7223b33f3565cf86c28e gpio: reflect base and ngpio into gpio_device
a961f9b472de93e770d53b7340a58dbff64b4075 gpiolib: rewrite gpiodev_add_to_list
969f07b445d1c30479f53ce6818e1263043b999a gpio: use kzalloc to allocate gpio_device
185a383ada2e7794b0e82e040223e741b24d2bf8 x86/PCI: Add driver for Intel Volume Management Device (VMD)
83cc54a608b66d3fffa7355503263d20f491bb44 x86/PCI: VMD: Document code for maintainability
d068c350c0486ba9011abb6f91cdc0c12b522155 x86/PCI: VMD: Set bus resource start to 0
2c2c5c5cd213aea38c850bb6edc9b7f77f29802f x86/PCI: VMD: Attach VMD resources to parent domain's resource tree
2fa843512bb5bbc0e876e4f55e22f26a3a8d3edb nvme: avoid crashes when node 0 is memoryless node.
202bae52934d4eb79ffaebf49f49b1cc64d8e40b dm thin: unroll issue_discard() to create longer discard bio chains
3dba53a958a758fe7bed5002f6a2846e1acefe8e dm thin: use __blkdev_issue_discard for async discard support
bbd848e0fade51ae51dab86a0683069cef89953f block: reinstate early return of -EOPNOTSUPP from blkdev_issue_discard
c5a130325f13b219438cb100e2da71a3e31199f3 ACPI/APEI: Add parameter check before error injection
3482fb5e0c1c20ce0dbcfc5ca3b6558a8c455b10 ACPI, APEI, EINJ: Changes to the ACPI/APEI/EINJ debugfs interface
4650bac1fc45d64aef62ab99aa4db93d41dedbd9 ACPI/EINJ: Allow memory error injection to NVDIMM
4e0d8f7eff3fbfa3e3ac5782669c078f590dc9e2 resource: Change __request_region to inherit from immediate parent
af1996ef59dbcb36fe4878df7c717a02eb89d07a ACPI: Change NFIT driver to insert new resource
1f681688aaf1126df981615064a68a0dced458ef bnxt_en: Add new NPAR and dual media device IDs.
3f85f2aaabf785e53bbcd242cb92aeda28990ef5 IB/mlx4: Add diagnostic hardware counters
82ec2ba2b18109e134f0d4ace69b0c9c253b6d17 ARM: 8522/1: drivers: nvdimm: ensure no negative value gets returned on positive match
be26f9ae022ad09967be7a83c58ce605014e939a nfit, tools/testing/nvdimm: add format interface code definitions
aef25338226660cdd4df908c2eff1abdcfca65e5 libnvdimm, nfit: centralize command status translation
5faecf4eb0d7d67e809a4bc9059c764c27670832 libnvdimm: protect nvdimm_{bus|namespace}_add_poison() with nvdimm_bus_lock()
719994660c249a086a7493205c7f1562e30c38cb libnvdimm: async notification support
a61fe6f7902ecaa89d5e6c709490fc4324927134 nfit, tools/testing/nvdimm: unify common init for acpi_nfit_desc
7ae0fa439faff000744b234d04cb470bfd83593b nfit, libnvdimm: async region scrub workqueue
1cf03c00e7c17d3cf13a267dac83b3162a16ba8c nfit: scrub and register regions in a workqueue
87bf572e19a092cc9cc77d5a00d543a2b628c142 nfit: disable userspace initiated ars during scrub
4dc0e7be884e0f99211107dd75e6e1884b7b3754 libnvdimm: Clean-up access mode check.
07accfa9d1a8bac8262f6d24a94a54d2d1f35149 libnvdimm: Fix security issue with DSM IOCTL.
d9cbe09d39aa13f6924dc5fb88325de7ef01a72e libnvdimm, pmem: fix 'pfn' support for section-misaligned namespaces
cfe30b872058f211630eda7f65fb19d83beaaa3c libnvdimm, pmem: adjust for section collisions with 'System RAM'
f6ed58c70d14572d0272ee129579dbfc97b97f50 libnvdimm, pfn: 'resource'-address and 'size' attributes for pfn devices
3b87356f50aa12ae7f9bd60f630eb17fe9b4b253 nfit, tools/testing/nvdimm: test multiple control regions per-dimm
f471f1a7d0aa58c609e665514010650b2afa24b6 tools/testing/nvdimm: expand ars unit testing
d4f323672aa63713b7ca26da418f66cc30d3a41a nfit, libnvdimm: clear poison command support
45f68802f2542a6ad1550dab9c07004de6e0df40 libnvdimm, pmem: fix ia64 build, use PHYS_PFN
55155291b32d24371256adbcc67f9f53cf3f314f pmem: don't allocate unused major device number
ec56151d382c2140851b4f25203af9016ba84fea nvdimm/blk: don't allocate unused major device number
ff8e92d5d94b99aab39f439d532cba435947dfc0 nvdimm/btt: don't allocate unused major device number
b5ebc8ec693281c3c1efff7459a069cbd8b9a149 libnvdimm, pmem: fix kmap_atomic() leak in error path
59e6473980f321c16299e12db69d1fabc2644a6f libnvdimm, pmem: clear poison on write
b11a7b94100cba5ec926a181894c2897a22651b9 mm: exclude ZONE_DEVICE from GFP_ZONE_TABLE
99490f16f8b287a028306e4092cc85393907075f mm: ZONE_DEVICE depends on SPARSEMEM_VMEMMAP
211291126698c8f047617565b2e2e7f822f86354 libnvdimm: fix smart data retrieval
e5670563f588ed1c0603819350c0f02cec23f5c5 libnvdimm, pfn: fix uuid validation
a390180291dd9a2392bbab4242cde712c326efc6 libnvdimm, pfn: fix nvdimm_namespace_add_poison() vs section alignment
8cc6ddfcafbb7e32ff025f7d9551ecf9649c12cd libnvdimm, nfit: report multiple interface codes per-dimm
baa51277cf5dc844089ea2f6e0f78b1c5ca665d8 libnvdimm, test: add mock SMART data payload
8259542348d93da6a04eed979047b1fd1ca72abe libnvdimm, nfit: Use ACPI_SIG_NFIT instead of hard coded string
0a370d261c805286cbdfa1f96661322a28cce860 libnvdimm, pmem: clarify the write+clear_poison+write flow
298f2bc5db3851cf2e839a0025425256ef852139 libnvdimm, pmem: kill pmem->ndns
bd032943b5b2b336994171dcebc11531a38b45ba libnvdimm, pfn, convert nd_pfn_probe() to devm
e32bc729a3a486e20443db3379ecf67240b20616 libnvdimm, btt, convert nd_btt_probe() to devm
9dec4892ca9afd6aad3c9c9e6c17480ecbd04440 libnvdimm, btt: add btt startup debug
d29cee120eb890027c69f5fe7cce8bd6a663900a libnvdimm, blk: use devm_add_action to release bdev resources
d44077a7cddce18fc8d83194bb4c83a0225f0f40 libnvdimm, blk: use ->queuedata for driver private data
bd842b8ca7f207b99a5476a8174e62c29a2ff80e libnvdimm, pmem: use ->queuedata for driver private data
8378af17a4021f01b3bed20c1bd19c3921c1f5ac libnvdimm, blk: quiet i/o error reporting
9d90725ddca347450c4ab177ad680ed76063afd4 libnvdimm, blk: move i/o infrastructure to nd_namespace_blk
030b99e39cad33b104474fbe688e0eb23d8209b4 libnvdimm, pmem: use devm_add_action to release bdev resources
947df02d255a6a81a3832e831c5ca02078cfd529 libnvdimm, pmem: clean up resource print / request
200c79da824c978fcf6eec1dc9c0a1e521133267 libnvdimm, pmem, pfn: make pmem_rw_bytes generic and refactor pfn setup
ac515c084be9b3995f7aef0ae87797e75e0260f0 libnvdimm, pmem, pfn: move pfn setup to the core
5a92289f41311a54ededb5e4ed474cc38f5d85de libnvdimm, pmem: kill ->pmem_queue and ->pmem_disk
0bfb8dd3edd6e423b5053c86e10c97e92cf205ea libnvdimm: cleanup nvdimm_namespace_common_probe(), kill 'host'
5ad9a7fde07a95b326da9e650b4f0a41b85e47b5 acpi/nfit: Update nfit driver to comply with ACPI 6.1
138a95547ab04f5f9d49bfb12bd764f7a7edbcf4 ACPICA: ACPI 6.1: Update NFIT table for additional new fields
38a879ba9c0a6849fe26c36e325f754a89848da7 acpi/nfit: Add sysfs "id" for NVDIMM ID
40abf9be8f52d440e442206182916e3dcc68f722 libnvdimm: increase max envelope size for ioctl
e3654eca70d63704c94a60a2aafc0b3c7b46a00b nfit, libnvdimm: clarify "commands" vs "_DSMs"
31eca76ba2fc988bf88f16fcf763a0ec4068cd30 nfit, libnvdimm: limited/whitelisted dimm command marshaling mechanism
30ec5fd464d51876247302da276db082e5675c35 nfit: fix format interface code byte order per ACPI6.1
6ca7208569550de43d64db6cf873706c371284a5 nfit: export subsystem ids as attributes
658922e57b847bb7112aa67f6441b6bbc6554412 libnvdimm, pfn: fix memmap reservation sizing
2eea65829dc6c20dccbe79726fd0f3fe7f8aa43b nfit: fix translation of command status results
87554098fec74a6c4a8cbea0d9adea2e8868e9e4 nfit: disable vendor specific commands
6634fb06906f52a3a3125e88681a7fa6e353f31d tools/testing/nvdimm: ND_CMD_CALL support
a94e3fbe4d53d4e512c4ea88a475e605b8d8dccb nfit: add sysfs dimm 'family' and 'dsm_mask' attributes
1b8d2afde54fade94339f573c4e05644f9ae9866 libnvdimm, pfn: fix ARCH=alpha allmodconfig build failure
cd03412a51ac4cb3001a8cdfae4560c9602f3387 libnvdimm, dax: introduce device-dax infrastructure
52ac23b25eb26511f8dea2382534eeada2fa8244 libnvdimm, dax: reserve space to store labels for device-dax
45a0dac0451136fa7ae34a6fea53ef6a136287ce libnvdimm, dax: record the specified alignment of a dax-device instance
6cf9c5babd980ec1959e0dd45e3036474c6a294f libnvdimm: stop requiring a driver ->remove() method
b354aba0165519a74f540f2ba89d7ec78efca21d libnvdimm: release ida resources
c5ed9268643c7c4c9f2aaa0fd4c936095e6480ef libnvdimm, dax: autodetect support
5e24c9fd36285535c704e84748d6c890be870fb6 libnvdimm, dax: fix alignment validation
03dca343afe080968d90c4d9196404b5bbbc8461 libnvdimm, dax: fix deletion
e02fb7264d8a31dddb9a80fbde603feb502d6478 nfit: add Microsoft NVDIMM DSM command set to white list
1ee6667cd8d183b2fed12f97285f184431d2caf9 libnvdimm, pfn, dax: fix initialization vs autodetect for mode + alignment
4995734e973a2c2e9c6f6413cbad9913fc4df0dc acpi, nfit: fix acpi_check_dsm() vs zero functions implemented
f295e53b60eb93ee53ed5ac610374ed293caa57b libnvdimm, pmem: allow nfit_test to override pmem_direct_access()
ee8520fe8cd4cd2658ca555781eefeb4914c4ef9 tools/testing/nvdimm: replace CONFIG_DMA_CMA dependency with vmalloc()
1bcbf42d2732b3fdaa8559b0dfc91567769e23c8 nfit: fix format interface code byte order
a72255983f12f31f0c8d8275fb1a781546cfacb7 nfit: make DIMM DSMs optional
ab15c95a17b3fe8c0e01bb7ce1dd0b657598eb61 IB/core: Support for CMA multicast join flags
64aa47bfc45323040d5db8f30cbd6851f2606c7d KVM: x86: add kvm_apic_map_get_dest_lapic
e45115b62f9abb143a03036dbde05faf5864aa01 KVM: x86: use physical LAPIC array for logical x2APIC
0ca52e7b81a37260c7edb823c8ac6a49c6280b5e KVM: x86: dynamic kvm_apic_map
3159d36ad799a117eb2f898de4c6b7777e4dc045 KVM: x86: use generic function for MSI parsing
a92e2543d6a8653a8ab45cf5df7ef07dafcf3f3e KVM: x86: use hardware-compatible format for APIC ID register
c63cf538eb4bf6a5ffd3750366d8d56f023645a5 KVM: pass struct kvm to kvm_set_routing_entry
3713131345fbea291cbd859d248e06ed77815962 KVM: x86: add KVM_CAP_X2APIC_API
c519265f2aa348b2f1b9ecf8fbe20bb7c0fb102e KVM: x86: add a flag to disable KVM x2apic broadcast quirk
ca8a8fabb10459753fba73cac0382076f0aab058 x86/PCI: VMD: Select device dma ops to override
3f57ff4f9c78ee0fafb010287019126ce8c1fc01 x86/PCI: VMD: Use lock save/restore in interrupt enable path
9c2053040ca7ae52f1143a47ae84502aa7970438 x86/PCI: VMD: Separate MSI and MSI-X vector sharing
da413eec729dae5dcb150e2eb34c5e7e5e4e1b49 packet: Fixed TPACKET V3 to signal poll when block is closed rather than every packet
1aa25ec227a4be21515594f485b0f4985109f0d8 sctp: fix the issue sctp requeue auth chunk incorrectly
3f66b083a5b7f1a63540c24df3679c24f2e935a9 inet: introduce ireq_family
0144a81cccf7532bead90f0542f517bd028d3b3c tcp: fix ipv4 mapped request socks
0e0eee2465df77bcec2e8ff75432b8e57897b143 net: correct error path in rtnl_newlink()
e51fb152318ee6502a2d224771b0bbbbda046128 rtnetlink: fix a memory leak when ->newlink fails
c78ebe1df01f4ef3fb07be1359bc34df6708d99c macsec: fix reference counting on RXSC in macsec_handle_frame
6bd4f355df2eae80b8a5c7b097371cd1e05f20d5 ipv6: kill sk_dst_lock
a84f0e1379d978ed736cd242e196be723fbdd604 cxgb4, iw_cxgb4: move definitions to common header file
40c466358fcc21b508b38e790ac39353048b112f cxgb4, iw_cxgb4, cxgb4i: remove duplicate definitions
76c144bd8ebd5839e36d30c931586510ae0e736e cxgb4, cxgb4i: move struct cpl_rx_data_ddp definition
b96c5cbb200533efff7b83873f43f0994b5b4ce2 cxgb4: add definitions for iSCSI target ULD
cb6a8ff07068977fa5e952a539f38474dbf9770a cxgb4, iw_cxgb4: move delayed ack macro definitions
2994a75183173defc21f0d26ce23b63232211b88 cxgb4: update Kconfig and Makefile
69110e3cedbb8aad1c70d91ed58a9f4f0ed9eec6 iscsi-target: Use shash and ahash
2854bb23cd5bef39fd845b7bdfac7799438bb920 iscsi-target: add int (*iscsit_xmit_pdu)()
7ec811a8e9c3b8289a863d0dac717e08a5093403 iscsi-target: add void (*iscsit_release_cmd)()
187e84f7c2e4fa0028241c253c24658ef658e5d3 iscsi-target: add void (*iscsit_get_rx_pdu)()
ca82c2bded29b38d36140bfa1e76a7bbfcade390 iscsi-target: Fix rx_login_comp hang after login failure
e8205cca0abd126418c18030fb8c9ef272080d70 iscsi-target: split iscsi_target_rx_thread()
42bc3e57877f2357ccbbc3ad6e6c7d9be44579f9 iscsi-target: add int (*iscsit_validate_params)()
8567270d8de6192eb2632b45421b1fde9bcda2f2 iscsi-target: add void (*iscsit_get_r2t_ttt)()
864e504ae2bbdd7efcd6923075047a7a6b5ade02 iscsi-target: use conn_transport->transport_type in text rsp
1c50ff424e3d9a392ec2df797c3b6083ed70fca6 iscsi-target: clear tx_thread_active
d2faaefb8d4c63fbc680512b04f9eb57667e2682 iscsi-target: export symbols
bd027d856d3d7260017d0dc932201ce5fd7561f9 iscsi-target: Convert transport drivers to signal rdma_shutdown
c31df25f20e35add6a453328c61eca15434fae18 md/raid10: make sync_request_write() call bio_copy_data()
bf36387ad394ad4fc93ad85fdd4a95dfa583556a svcrdma: svc_rdma_post_recv() should close connection on error
a6081b82c533d78041acb76738716aa7dafb339a svcrdma: Make RDMA_ERROR messages work
f3ea53fb3bc3908b6e9ef39e53a75b55df7f78f8 svcrdma: Use correct XID in error replies
0be5b96cd8400aeb4bf3f8c5e7f5efaa38ae5055 e1000e: factor out systim sanitization
c6d2ee09c2fffd3efdd31be2b2811d081a45bb99 cxl: Set psl_fir_cntl to production environment value
6c223761eb5482dca2bd981d0a800c4aba3c9009 smartpqi: initial commit of Microsemi smartpqi driver
d913d3a763a6f66a862a6eafcf6da89a7905832a openvswitch: fix conntrack netlink event delivery
1fe323aa1b2390a0c57fb0b06a782f128d49094c sctp: use event->chunk when it's valid
4b5b9ba553f9aa5f484ab972fc9b58061885ceca openvswitch: do not ignore netdev errors when creating tunnel vports
4cc96131afce3eaae7c13dff41c6ba771cf10e96 dm: move request-based code out to dm-rq.[hc]
1814f2e3fb95b58490e56a38fefe462ffe8fb9ad dm mpath: add locking to multipath_resume and must_push_back
7d9595d848cdff5c7939f68eec39e0c5d36a1d67 dm rq: fix the starting and stopping of blk-mq queues
71b3c126e61177eb693423f2e18a1914205b165e x86/mm: Add barriers and document switch_mm()-vs-flush synchronization
4eaffdd5a5fe6ff9f95e1ab4de1ac904d5e0fa8b x86/mm: Improve switch_mm() barrier comments
7b0501b1e7cddd32b265178e32d332bdfbb532d4 x86/smp: Fix __max_logical_packages value setup
054f621fd5b1c7245710f5d3935c94ce6ae4b3b7 x86/platform/UV: Fix problem with UV4 Socket IDs not being contiguous
22ac2bca92f2d92c6495248d65ff648182df428d x86/platform/UV: Fix problem with UV4 BIOS providing incorrect PXM values
5a52e8f822374bebc702bb2688ed8b5515bbb55b x86/platform/UV: Fix kernel panic running RHEL kdump kernel on UV systems
d68921f9bd148359e6d01c84aaa2e32bfbd82970 x86/smp/boot: Add cmdline "cpu_init_udelay=N" to specify cpu_up() delay
1a744cb356c57303fc97eb15a298032170f841fa x86/smp/boot: Remove 10ms delay from cpu_up() on modern processors
7cb685982157567dcc55eb92d1c38d237465203b x86/smp/boot: Fix legacy SMP bootup slow-boot bug
a9bcaa02a5104ace6a9d9e4a9cd9192a9e7744d6 x86/smpboot: Remove SIPI delays from cpu_up()
f1ccd249319efca4ee4faf1d904f5a362cac7c81 x86/smpboot: Fix cpu_init_udelay=10000 corner case boot parameter misbehavior
656279a1f3b210cf48ccc572fd7c6b8e2250be77 x86 smpboot: Re-enable init_udelay=0 by default on modern CPUs
3e358ac2bb5bb9c9f4842145ca0da2384d13fd98 firmware: Be a bit more verbose about direct firmware loading failure
40998193560dab6c3ce8d25f4fa58a23e252ef38 scsi: restart list search after unlock in scsi_remove_target
d101a125954eae1d397adda94ca6319485a50493 fs: add file_dentry()
2d902671ce1cd98cdc88d78c481889a1b2996101 vfs: merge .d_select_inode() into .d_real()
e698b8a43659f9ece192fcab215abcadac8f88d7 vfs: document ->d_real()
be62a1a8fd116f5cd9e53726601f970e16e17558 nfs: use file_dentry()
de17e793b104d690e1d007dfc5cb6b4f649598ca btrfs: fix crash/invalid memory access on fsync when using overlayfs
1f1735cb75ab31ed948a7fce65beaaa6c0ed4ed4 cifs: Use file_dentry()
c1892c37769cf89c7e7ba57528ae2ccb5d153c9b vfs: fix deadlock in file_remove_privs() on overlayfs
c1b2cc1a765aff4df7b22abe6b66014236f73eba ovl: check mounter creds on underlying lookup
58ed4e70f253d80ed72faba7873dc11603b398bc ovl: store ovl_entry in inode->i_private for all inodes
39a25b2b37629f65e5a1eba1b353d0b47687c2ca ovl: define ->get_acl() for overlay inodes
c0ca3d70e8d3cf81e2255a217f7ca402f5ed0862 ovl: modify ovl_permission() to do checks on two inodes
1175b6b8d96331676f1d436b089b965807f23b4a ovl: do operations on underlying file system in mounter's context
754f8cb72b42a3a6100d2bbb1cb885361a7310dd ovl: do not require mounter to have MAY_WRITE on lower
9c630ebefeeee4363ffd29f2f9b18eddafc6479c ovl: simplify permission checking
39b681f8026c170a73972517269efc830db0d7ce ovl: store real inode pointer in ->i_private
e29841a0ab3d03e77313abd8fb4c16e80fb26e29 ovl: dilute permission checks on lower only if not special file
500cac3ccee65526d5075da3af2674101305bf8c ovl: append MAY_READ when diluting write checks
dba715f0c8b5daa1fca041c1c9011632c7a83105 IB/hfi1: Use built-in i2c bit-shift bus adapter
e014991d0735ce4ca7473f9430ce71847fdc7e2f IB/hfi1: Remove TWSI references
72720ddfc6d2256d62c4d8a644cf2ac54a27af90 IB/hfi1: Fix minor format error
fc87879ae237785704a6b6a54c1c5a47c395662c IB/hfi1: Remove unused function hfi1_mmu_rb_search
ac335e7e8079d08441aba46ce2c07398b603719f IB/hfi1: Add parameter names to function declarations
862548dace34690b6a477f32e8ce68b50f7cbdf6 IB/hfi1: Add parameter names to callback declarations
c0946642e574181e00cf8561579e495d08d18988 IB/hfi1: Always expect ops functions
3c1091aa94d6c973cfb3eab17afdb4565f8a4ae6 IB/hfi1: Consolidate __mmu_rb_remove and hfi1_mmu_rb_remove
5ed3b15b05449a2e2cc2e4d4698d420a37b092ea IB/hfi1: Remove unused sub-context parameter
639297b4f0ea3cf14290ec4e188ec6cd0cb50db9 IB/hfi1: Use "false" not 0
ff4ce9bde9b2a88984c3ee359b952e35fe49c474 IB/hfi1: Make iovec loop index easy to understand
ea3a0ee52db0c2ec8d1d0ecdd21e650e6e183085 IB/hfi1: Restructure hfi1_file_open
20a42d08331c888207d81d8e4713e18250ac49cf IB/hfi1: Remove unneeded empty check in hfi1_mmu_rb_unregister()
a7cd2dc5d494e92871e7b6734b72ef5451ff026d IB/hfi1: Rename TID mmu_rb_* functions
bdf7752e072f91fbeb1739da3938d4392ea8a51f IB/hfi1: Use the same capability state for all shared contexts
a383f8ec552c9af5066eb488cc7a2d8b3994151d IB/hfi1: Release node on insert failure
7b3256e331270c7de43ccf3879b7c289cdc3ff28 IB/hfi1: Fix user SDMA racy user request claim
3faa3d9a308e539cc48355b1f419a5ed9f8274a2 IB/hfi1: Make use of mm consistent
e0b09ac55d51bb9bf6a4a320bf4029e40bdabd6c IB/hfi1: Make the cache handler own its rb tree root
622c202c4a4697636334761d7ca295ebd35074e4 IB/hfi1: Fix TID caching actions
1034599805009394cc42e6c538575d12d8dc57fa IB/hfi1: Add evict operation to the mmu rb handler
b7df192f74a8cde22f6dc0680a2daa40540ed72f IB/hfi1: Use evict mmu rb operation
b85ced91511f6c3add9a74ae13e12ba568bfa1af IB/hfi1: Consistently call ops->remove outside spinlock
082b3532915395ea6620ba691138baf151a543b0 IB/hfi1: Remove unneeded mm argument in remove function
2677a7680e773195a4fdabd163d756cac1b9abd7 IB/hfi1: Fix memory leak during unexpected shutdown
0636e9ab8355c82ff7e9d6bb8aa2ded834b1f88d IB/hfi1: Add cache evict LRU list
e0cf75deab8155334c8228eb7f097b15127d0a49 IB/hfi1: Fix mm_struct use after free
94abd778a7bb00ed5d00f56d9fbfcbf5b7c02a5c brcmfmac: add fallback for devices that do not report per-chain values
6fe04128f158c5ad27e7504bfdf1b12e63331bc9 mac80211: fix fast_tx header alignment
fee48cf8374569a3888fd8c8536283e6067f0cfb ath10k: fix deadlock when peer cannot be created
8d0a0710ea0d22881fdb40eb79d346a98cc64ae6 ath10k: fix crash related to printing features
6cbf6236d54c24b9a29e6892549c25b6902b44ce cfg80211: remove get/set antenna and tx power warnings
06a84db74c3572cde79eb1b04f301399eafb8226 iwlwifi: mvm: increase scan timeout to 20 seconds
7d6a1ab6a2db180122dee8db6c201f2dcf677813 iwlwifi: mvm: fix RCU splat in TKIP's update_key
1f9788f335d7c3145bcb59bd570c5b9ef7203ef4 iwlwifi: mvm: fix potential NULL-dereference in iwl_mvm_reorder()
280a3efa82fccc9532c968a77e5162cb9f0af497 iwlwifi: mvm: fix a few firmware capability checks
e50525bef593c3dd0564df676c567d77f7c20322 ath10k: fix deadlock while processing rx_in_ord_ind
e024111f6946f45cf1559a8c6fd48d2d0f696d07 ath9k: fix GPIO mask for AR9462 and AR9565
c041778c966c92c964033f1cdfee60a9f2b5e465 cfg80211: fix proto in ieee80211_data_to_8023 for frames without LLC header
6e8ef842223b90a33efd570128bb566a9ae6f5ad nl80211: Move ACL parsing later to avoid a possible memory leak
16a910a6722b7a8680409e634c7c0dac073c01e4 cfg80211: handle failed skb allocation
2aabdbdc17b7c53490337bfc58de3409c84d85d2 iwlwifi: pcie: enable interrupts before releasing the NIC's CPU
f16c3ebfa64fdf0e2dc88e6baa72da95ab70ffd7 iwlwifi: pcie: fix a race in firmware loading flow
f24bbae565d279cd90c904fe55b539a45631705e iwlwifi: add new 8265
0582b964ece795fa2810eace82bf9b2233403d65 i40e: move i40e_vsi_config_rss below i40e_get_rss_aq
552b996256241198a08005a91a206b402ac234f6 i40e: use configured RSS key and lookup table in i40e_vsi_config_rss
3851112e4737cd52aaeda0ce8d084be9ee128106 ethtool: add support for 25G/50G/100G speed modes
8d09e6b8b9c9969ac59496dc21e10b67fe727e7e cxgb4/cxgb4vf: Fixes regression in perf when tx vlan offload is disabled
abf76d76c5e716a0129180b8f464b1b293823adf ixgbe: fix setup_fc for x550em
f38ff2ee7727994685494bcc4d7c274b35b5418a i40e: Change some init flow for the client
aa297292d708e89773b3b2cdcaf33f01bfa095d8 x86/tsc: Enumerate SKL cpu_khz and tsc_khz via CPUID
95e435afefe98b8ef6ae8b764879a064cd931a5c rhashtable-test: calculate max_entries value by default
af4739c281621017a8a84dd6ba3471bba2dd6c6a HID: i2c-hid: Call device suspend callback before disabling irq
d1c48038b849e9df0475621a52193a62424a4e87 HID: i2c-hid: Only disable irq wake if it was successfully enabled during suspend
01714a6f5fa59a313d8f44dcf017911dfcb25831 HID: i2c-hid: Fix suspend/resume when already runtime suspended
dbd3ca50753e70e09cad747dce23b1a7683a3342 fs/block_dev.c: Remove WARN_ON() when inode writeback fails
cd3be169a5ffe6a289255e11123abe933e16f112 i40e: Move the mutex lock in i40e_client_unregister
70df973b5eb48b19ba29105ecfecb3e50efe3c6d i40e: Force register writes to mitigate sync issues with iwarp VF driver
91cdca4faa3e4085b37cc084b15955bb20ca2e31 i40e: Check client is open before calling client ops
682d11d7001e61710b282df51a51250a57514772 i40e: Initialize pointer in client_release function
0d8ab54a4119880bb9cb4680da1f5e9068d0d333 i40e: Correcting mutex usage in client code
f14bb039a4e8206439d3e9abd92bc76bd142f243 uio: Export definition of struct uio_device
02eb924fabc5b699c0d9d354491e6f0767e3c139 target/user: Use sense_reason_t in tcmu_queue_cmd_ring
554617b2bbe25c3fb3c80c28fe7a465884bb40b1 target/user: Return an error if cmd data size is too large
3d9b95558f5874ac5d63a057813dc66b480de7e1 target/user: Fix comments to not refer to data ring
dca3f53c02e325bb19dfc05b1571b9a706226fea sctp: Export struct sctp_info to userspace
4c2f2454964477c66ef57745daab203b71783f66 sctp: linearize early if it's not GSO
9d05041679904b12c12421cbcf9cb5f4860a8d7b x86/nmi: Enable nested do_nmi() handling for 64-bit kernels
93cd16817ae5ddcfc548784b51c76bf6d7923442 drm/vmwgfx: Kill some lockdep warnings
6b8812eb004ee2b24aac8b1a711a0e8e797df3ce drm/amdgpu: use drm_mode_vrefresh() rather than mode->vrefresh
9d746ab68163d642dae13756b2b3145b2e38cb65 drm/amdgpu: Fix hdmi deep color support.
50db139018f9c94376d5f4db94a3bae65fdfac14 drm/i915/psr: Try to program link training times correctly
b1ba124d8e95cca48d33502a4a76b1ed09d213ce drm/i915: Respect DP++ adaptor TMDS clock limit
b2ccb822d376d1bbbe5d1f9118d1488b25e6bc6d drm/i915: Enable/disable TMDS output buffers in DP++ adaptor as needed
caed361d83b204b7766924b80463bf7502ee7986 drm/i915: Fix watermarks for VLV/CHV
ede53344dbfd1dd43bfd73eb6af743d37c56a7c3 drm: Add helper for DP++ adaptors
9f6151c9039084e18c118831779a99ac8f29e39c drm/i915: Pass the correct crtc state to .update_plane()
f2d580b9a8149735cbc4b59c4a8df60173658140 drm/core: Do not preserve framebuffer on rmfb, v4.
579de73b048a0a4c66c25a033ac76a2836e0cf73 drm/i915: Exit cherryview_irq_handler() after one pass
22dea0be50b2eb0bafd3c82e1fb080113e0c889e drm/i915: Introduce Kabypoint PCH for Kabylake H/DT.
6bb6285582e0cf9b3a8440e0e714aae5f66d9ce2 drm/i915/gen9: Add WaVFEStateAfterPipeControlwithMediaStateClear
eee8efb02a0f9284d85e6b3688f944ca765d7ad3 drm/i915/skl: Add WaDisableGafsUnitClkGating
950b2aaeea6960561425fc80adfb5b2fc0ac020f drm/i915/gen9: add WaClearFlowControlGpgpuContextSave
bfd8ad4e4a180b95d500c76280ddc01f23f92b9d drm/i915/gen9: implement WaEnableSamplerGPGPUPreemptionSupport
e5f81d65ac5a04020d790caf63b2324730ba0277 drm/i915/kbl: Init gen9 workarounds
6e4f10c33a8bd0df4412bc31c0f11930e0228123 drm/i915/kbl: Add WaSkipStolenMemoryFirstPage for A0
5b0e3659296cc4a1484e60640ef10780194a195b drm/i915/gen9: Always apply WaForceContextSaveRestoreNonCoherent
bbaefe72a00c93c6ec12e029019681e3f7d7de7a drm/i915: Mimic skl with WaForceEnableNonCoherent
e587f6cb0af140f3c0ea794d8616eb9a29969983 drm/i915/kbl: Add WaEnableGapsTsvCreditFix
8401d42fd5adf709281e1700194805f393b49573 drm/i915/kbl: Add WaDisableFenceDestinationToSLM for A0
fe90581987cd5fadd2942f59f8511bcb39fdec34 drm/i915/kbl: Add WaDisableLSQCROPERFforOCL
c0b730d572ea00d427f6112b17982c6b9d5e97bb drm/i915/kbl: Add WaDisableDynamicCreditSharing
ad2bdb44b19529ba992bd0b7667e91b14fe9a9ee drm/i915: Add WaInsertDummyPushConstP for bxt and kbl
0b2d0934edceff9905b1202d0e7e91f1b6228485 drm/i915/kbl: Add WaForGAMHang
4de5d7ccbccc88d2f7b1bcdc2180196ded7db8b8 drm/i915/kbl: Add WaDisableGafsUnitClkGating
954337aa96a31f6d4baf1e40ac219fbb1b1d92f4 drm/i915/kbl: Add WaDisableSbeCacheDispatchPortSharing
066d462888514af727008a450f4078b1a23d5cbe drm/i915/kbl: Add WaClearSlmSpaceAtContextSwitch
b1e429fe3ba7b10b8c6875b6dec1d62e1c252729 drm/i915: implement WaClearTdlStateAckDirtyBits
a8ab5ed5e1bf856eceaab5579236de6f92822b9f drm/i915/gen9: implement WaConextSwitchWithConcurrentTLBInvalidate
e7968531f86983a8f199818a7ffcaa380d1b4399 drm/i915/bxt: Reject DMC firmware versions with known bugs
4922d4919596219864686be1e70dcd92c685ec9f drm/i915/kbl: Introduce the first official DMC for Kabylake.
33d9391d3020e069dca98fa87a604c037beb2b9e drm/i915: Add more Kabylake PCI IDs.
a922eb8d4581c883c37ce6e12dca9ff2cb1ea723 drm/i915: Removing PCI IDs that are no longer listed as Kabylake.
8b18300c13a1e08e152f6b6a430faac84f986231 drm/amdgpu/gfx7: fix broken condition check
0b10029d826ed8c18a5f9d2f4abfa415d15cd1d3 drm/amdgpu: fix num_rbs exposed to userspace (v2)
29b9c528b8c295911e8b1e515273e89a2b7fa2d8 drm/amdgpu: initialize amdgpu_cgs_acpi_eval_object result value
fd2d2bac6e79b0be91ab86a6075a0c46ffda658a drm/dp/mst: Always clear proposed vcpi table for port.
bc9139d23f6b038e32bcd2dffdee70a8d76b3976 drm/nouveau/bios/disp: fix handling of "match any protocol" entries
383d0a419f8e63e3d65e706c3c515fa9505ce364 drm/nouveau/gr/gf100-: update sm error decoding from gk20a nvgpu headers
9057c8d75018f05bbc769d7b4602de3b8b20f8aa drm/nouveau/ltc/gm107-: fix typo in the address of NV_PLTCG_LTC0_LTS0_INTR
217215041b9285af2193a755b56a8f3ed408bfe2 drm/nouveau/disp/sor/gf119: select correct sor when poking training pattern
b201e743f42d143f4bcdcb14587caf7cb1d99229 drm: add missing drm_mode_set_crtcinfo call
6709887c448d1cff51b52d09763c7b834ea5f0be drm: make drm_atomic_set_mode_prop_for_crtc() more reliable
576b4401b1971fe40be4cfd379430a61cd8426b2 drm/amd/powerplay: fix bug that function parameter was incorect.
0a4fef559b69ae2e682c98f31d53a225fbda78bd drm/amd/powerplay: need to notify system bios pcie device ready
1d7b84d12af8312b52316029f1fa0fa4eac3c9e4 drm/amd/powerplay: fix logic error.
4b2427605e5325eafb5cfc2698f517db68e41075 drm/amd/powerplay: incorrectly use of the function return value
1dfefee8939b07dd65a35bb78f6a06df85578301 drm/amd/powerplay: fix incorrect voltage table value for tonga
81e257e964268d050f8e9188becd44d50f241d72 drm/atomic: Make drm_atomic_legacy_backoff reset crtc->acquire_ctx
04319d89fbec72dfd60738003c3813b97c1d5f5a drm/vmwgfx: Add an option to change assumed FB bpp
7c20d213dd3cd6295bf9162730e7a368af957854 drm/vmwgfx: Work around mode set failure in 2D VMs
4ed7e2242b637bc4af0416e4aa9f945db30fb44a drm/vmwgfx: Check pin count before attempting to move a buffer
d5f1a291e32309324a8c481ed84b5c118d1360ea drm/vmwgfx: Delay pinning fbdev framebuffer until after mode set
beca4cf55323147ca9c8a98de1871be6e4fe8f34 drm/vmwgfx: Fix corner case screen target management
58541f7a6458e17ab417321b284f0090f530aa91 drm/vmwgfx: Fix error paths when mapping framebuffer
91df09d92ad82c8778ca218097bf827f154292ca drm/i915: Revert DisplayPort fast link training feature
23a1a9e54e71593fe5657e883662995d181d2d6b drm/amdgpu: Disable RPM helpers while reprobing connectors on resume
f9a7da9130ef0143eb900794c7863dc5c9051fbc hv_netvsc: don't lose VF information
d072218f214929194db06069564495b6b9fff34a hv_netvsc: avoid deadlocks between rtnl lock and vf_use_cnt wait
57c1826b991244d2144eb6e3d5d1b13a53cbea63 hv_netvsc: reset vf_inject on VF removal
0f20d795f78d182c4b743d880a5e8dc4d39892fe hv_netvsc: protect module refcount by checking net_device_ctx->vf_netdev
0dbff144a1e7310e2f8b7a957352c4be9aeb38e4 hv_netvsc: fix bonding devices check in netvsc_netdev_event()
ebfcd0fd90b88088e4d3841c4be9a8c5753d3993 sfc: Add efx_nic member with fixed netdev features
eb7cfd8c9b6e28edf339b89bf19322c11514d286 sfc: Disable VLAN filtering by default if not strictly required
d29e33d6d087ef66a70f94791504579366cf3d09 sfc: update MCDI protocol headers
61e8a0d5a0270b91581f6c715036844b2ea98da1 powerpc/pci: Fix endian bug in fixed PHB numbering
4491ed5042f0419b22a4b08331adb54af31e2caa usb: dwc3: pci: add Intel Kabylake PCI ID
77fc5ff64f1834976abbf499b2adc95a4589ea86 mfd: lpss: Add Intel Kaby Lake PCH-H PCI IDs
31158763ef2dba9393ddd205248b9c95d2b5b87c i2c: i801: Add support for Kaby Lake PCH-H
7ac504472263180745ac94242f1d253eb7284e48 raid1/raid10: slow down resync if there is non-resync activity pending
8f182270dfec432e93fae14f9208a6b9af01009f mm/swap.c: flush lru pvecs on compound page arrival
281dbe5db81c6137def9757e07a7aea14b1ed86e libceph: add an ONSTACK initializer for oids
c22e853a2ed19321d00c1eae339ffdc4f5e7757e libceph: fix return value check in alloc_msg_with_page_vector()
a4ed38d7a180f184a6e7aedd09db9ca4b1e6a71c libceph: support for CEPH_OSD_OP_LIST_WATCHERS
99d1694310df3ffef66902f5bc1a23e95a724aa3 rbd: retry watch re-registration periodically
ed95b21a4b0a71ef89306cdeb427d53cc9cb343f rbd: support for exclusive-lock feature
0d6d1e9c2e970c26e8a1ec4932ffffacec90e0b4 rbd: add 'config_info' sysfs rbd device attribute
0276dca6c1ecb9a665645ff573e70685a57759af rbd: add force close option
a60eec0251fe1bfc0cd549c073591e6657761158 scsi: smartpqi: change aio sg processing
b17f048658c9b1bc8ac1d9a54b223f740c70f8fd scsi: smartpqi: change tmf macro names
77668f412dbcd6a9dd04c92f0b170c5b5182a5fb scsi: smartpqi: simplify spanning
e58081a714275d1490e470bdaf1b5dc23043cf2a scsi: smartpqi: enhance drive offline informational message
14bb215d09de98a8e95fa2bb1b8f35b79672c5df scsi: smartpqi: enhance reset logic
ff6abb7383d2eec6c8c988ff661352e66f245686 scsi: smartpqi: add kdump support
e57a1f9b2fa4326ec289f1d03c658184ed6addb8 scsi: smartpqi: correct controller offline issue
5e6429df9c8b3ab9e0a8d18af5248692ebe41871 scsi: smartpqi: correct event acknowledgment timeout issue
df7a1fcfc4761e658b60739e2ff4cd148afcae89 scsi: smartpqi: minor function reformating
4fbebf1a779d9f6890ddc1df90c497b161dfb34c scsi: smartpqi: minor tweaks to update time support
7d81d2b8714ec72462a99875acbf2f976402f3f1 scsi: smartpqi: scsi queuecommand cleanup
d48f8fad1e435eff26c29e8e109c1a50c441e533 scsi: smartpqi: remove timeout for cache flush operations
e8a31ebae1669f05254430d2fced99d77c63fc10 scsi: smartpqi: update Kconfig
425b490b2aa745740ea3618e1cdcc2bc37c0d996 scsi: smartpqi: add smartpqi.txt
699bed758b1313f97a5ac78848090e8357d12ab1 scsi: smartpqi: bump driver version
b28f08ce500a54ac86e3c391817507bc1e7d217c tools/testing/nvdimm: remove __wrap_devm_memremap_pages placeholder
ad9ac5e1957531a826ff6d71dc105f01fa665d2e nfit: always associate flush hints
81ed4e3670853e4cebad88aeffc0ba1d90d4d6ed nfit: don't override return value of nfit_mem_init
29b9aa0aa3837c93ecd804dd3ada39b8cc75607d libnvdimm: introduce devm_nvdimm_memremap(), convert nfit_spa_map() users
a8a6d2e04c4ffda055db70814c50bd106e44730f libnvdimm, nfit: remove nfit_spa_map() infrastructure
e5ae3b252c6732f838f5695170bbf2ea9fb5b9ff libnvdimm, nfit: move flush hint mapping to region-device driver-data
85d3fa02e4f8b4f59b9ae3f6f7d8312a1dcf28c8 tools/testing/nvdimm: simulate multiple flush hints per-dimm
a8f720224eff09ea684b7f74aa1c0dff3da03170 libnvdimm: keep region data alive over namespace removal
f284a4f23752d0334e482d04e0a584d19c9c8cd0 libnvdimm: introduce nvdimm_flush() and nvdimm_has_flush()
0c27af60d1bbd33c7d3dffb46a4c9f6aa103d754 libnvdimm: cycle flush hints
7e267a8c790edfde9b697cbe944ee566f41219c3 libnvdimm, pmem: use REQ_FUA, REQ_FLUSH for nvdimm_flush()
476f848aaee466fd5d74f123fa652e757f2baeba libnvdimm, pmem: flush posted-write queues on shutdown
14df6a4e7eba62442aed70dfd5bbd76d2e491d50 fs/dax: remove wmb_pmem()
91131dbd1d50637dc338526502a1a2ec5a7f97df libnvdimm, pmem: use nvdimm_flush() for namespace I/O writes
7c8a6a71904d57ae5fb24140f9661ec22ca9ee85 pmem: kill wmb_pmem()
7a9eb20666317794d0279843fbd091af93907780 pmem: kill __pmem address space
dfa169bbee00671288df25f8ef8a2f6e13fe2581 Revert "KVM: x86: add pcommit support"
fd1d961dd681d58308456049a817cbf4c0662018 x86/insn: remove pcommit
2af3a8159cd204fc8437ed2f75863f0fb930f0d0 block: Add vfs_msg() interface
2d96afc8f70ef86c66a0b5d80c24a27d6dd13df3 block: Add bdev_dax_supported() for dax mount checks
87eefeb4e80b1526be83e670a08d059a003b7d0e ext4: Add alignment check for DAX mount
1e937cddd1ff4b823fc9d148ebabd443f105211e xfs: Add alignment check for DAX mount
43761473c254b45883a64441dd0bc85a42f3645c audit: fix a double fetch in audit_log_single_execve_arg()
55e16d30bd99510900caec913c90f53bc2b35cba sched/fair: Rework throttle_count sync
b8922125e4790fa237a8a4204562ecf457ef54bb sched/fair: Fix typo in sync_throttle()
a30c2a3bf8571c6748dd16edc10b32d45ed71a72 qla2xxx: prevent board_disable from running during EEH
088d09d465a1a31929b98f3363965c91e8ab4c65 qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode.
13c3dde23f571072ef8c427ba18ec77e7b5bf5aa qla2xxx: Update the driver version to 8.07.00.08-k.
5ef9f289c4e698054e5687edb54f0da3cdc9173a OVS: Ignore negative headroom value
f9126ab9241f66562debf69c2c9d8fee32ddcc53 memory-hotplug: fix wrong edge when hot add a new node
7f36e3e56db1ae75d1e157011b3cb2e0957f0a7e memory-hotplug: add hot-added memory ranges to memblock before allocate node_data for a node.
eece30b9f0046cee810a2c7caa2247f3f8dc85e2 Drivers: hv: balloon: replace ha_region_mutex with spinlock
99466e708ddce8904c8635c213f2deb523ef4fb9 NVMe: Add device ID's with stripe quirk
99770737ca7e3ebc14e66460a69b7032de9421e1 x86/asm/tsc: Add rdtscll() merge helper
7d78cbefaa465bbf36e2b4b90d3c196a00f54008 serial: 8250_dw: add ability to handle the peripheral clock
23e5671a79be00b2f1c895aa93ff40fb75a4647e gfs2: Fix extended attribute readahead optimization
800b2694f890cc35a1bda63501fc71c94389d517 xfs: prevent dropping ioend completions during buftarg wait
4dd3fd7197303739094183b139bae3142a3d55e6 xfs: don't assert fail on non-async buffers on ioacct decrement
7915a861c01839a05eb7346023741742c4d2135e ext4: print ext4 mount option data_err=abort correctly
0e585ccc13b3edbb187fb4f1b7cc9397f17d64a9 ovl: Switch to generic_removexattr
ce31513a9114f74fe3e9caa6534d201bdac7238d ovl: copyattr after setting POSIX ACL
bb0d2b8ad29630b580ac903f989e704e23462357 ovl: fix sgid on directory
38b256973ea90fc7c2b7e1b734fa0e8b83538d50 ovl: handle umask and posix_acl_default correctly on creation
51f7e52dc943468c6929fa0a82d4afac3c8e9636 ovl: share inode for hard link
dbc816d05ddcfb189af8784d04fc84c812db3747 ovl: clear nlink on rmdir
725fc629ff2545b061407305ae51016c9f928fce kernek/fork.c: allocate idle task for a CPU always on its local node
a41bd25ae67d3e4052c7f00ee9f2b4ba9219309e sunrpc: fix UDP memory accounting
0173ca0544b682b7b313269dc0600d4774098a14 nfs/blocklayout: use proper fmode for opening block devices
d702d41ed41328487bd3b270467721222f8036e4 nfs/blocklayout: refactor open-by-wwn
11487ddbdb12c36e094bedcc5c906ff219905a03 nfs/blocklayout: support RH/Fedora dm-mpath device nodes
297fae4d0bee5d683533f3324baf1b363e7b48bf Fix NULL pointer dereference in bl_free_device().
28cf71ce3e206db1c3f30b3da31e7b48b2269e4c drm/i915/vlv: Make intel_crt_reset() per-encoder
9504a89247595b6c066c68aea0c34af1fc78d021 drm/i915/vlv: Reset the ADPA in vlv_display_power_well_init()
b236d7c8421969ac0693fc571e47ee5c2a62fb90 drm/i915/vlv: Disable HPD in valleyview_crt_detect_hotplug()
19625e85c6ec56038368aa72c44f5f55b221f0fc drm/i915: Enable polling when we don't have hpd
ff4c86635ee12461fd3bd911d7d5253394da8f9d x86/tsc: Enumerate BXT tsc_khz via CPUID
33da54fa86e29b87fe1e83bd0f15b4ef2be53ecb perf tools mem: Fix -t store option for record command
87660502f1a4d51fb043e89a45d30c9917787c22 drm/i915/gen6+: Interpret mailbox error flags
656d1b89e5ffb83036ab0e2a24be7558f34365c7 drm/i915/skl: Add support for the SAGV, fix underrun hangs
2722efb90b3420dee54b4cb3cdc7917efacc2dce drm/i915/gen9: Only copy WM results for changed pipes to skl_hw
62e0fb880123c98793e5c3ba8355501b0305e92e drm/i915/skl: Update plane watermarks atomically during plane updates
05a76d3d6ad1ee9f9814f88949cc9305fc165460 drm/i915/skl: Ensure pipes with changed wms get added to the state
896e5bb022bce64e29ce2e1b2fc2a7476d311a15 drm/i915: Move CRTC updating in atomic_commit into it's own hook
27082493e9c6371b05370a619ab9d2877c5f4726 drm/i915/skl: Update DDB values atomically with wms/plane attrs
ccebc23b57c313229526dc76383ce82f5e0b9001 drm/i915/skl: Don't try to update plane watermarks if they haven't changed
1186fa85eb9b3cc0589990fbc39617e50e38759a drm/i915/gen9: minimum scanlines for Y tile is not always 4
7a1a8aed67e0a60772defe3f6499eb340da48634 drm/i915/gen9: fix plane_blocks_per_line on watermarks calculations
75676ed423a6acf9e2b1df52fbc036a51e11fb7a drm/i915/gen9: fix the watermark res_blocks value
7850d1c35344c7bd6a357240f2f9f60fc2c097b5 drm/i915: Add GEN7_PCODE_MIN_FREQ_TABLE_GT_RATIO_OUT_OF_RANGE to SNB
6b0626679d81626eac47cba7940f1435ec480b2e RDMA/ocrdma: Support RoCE-v2 in the UD path
287922eb0b186e2a5bf54fdd04b734c25c90035c block: defer timeouts to a workqueue
71f79fb3179e69b0c1448a2101a866d871c66e7f blk-mq: Allow timeouts to run while queue is freezing
7303a1475008bee5c3e82a06a282568415690d72 sctp: identify chunks that need to be fragmented at IP level
bb016b84164554725899aef544331085e08cb402 mm/sparse: use memblock apis for early memory allocations
34a75b0f63356097ae9f706d64a793934891002f KVM: PPC: Implement kvm_arch_intc_initialized() for PPC
90f31d0ea88880f780574f3d0bb1a227c4c66ca3 mm: rcu-protected get_mm_exe_file()
6e399cd144d8500ffb5d40fa6848890e2580a80a prctl: avoid using mmap_sem for exe_file serialization
5efc244346f9f338765da3d592f7947b0afdc4b5 audit: fix exe_file access in audit_exe_compare
b0ffeb537f3a726931d962ab6d03e34a2f070ea4 IB/mlx5: Fix iteration overrun in GSI qps
56402d63eefe22179f7311a51ff2094731420406 x86/topology: Handle CPUID bogosity gracefully
d7c436cd605eb203ecf64c40f9b18aa610ac0248 gfs2: Update file times after grabbing glock
a408235726aa82c0358c9ec68124b6f4bc0a79df xfs: rework buffer dispose list tracking
ddeb14f4fb2fa1242829a76edc821f087e50bcdf xfs: quiesce the filesystem after recovery on readonly mount
fcd91dd449867c6bfe56a81cabba76b829fd05cd net: add recursion limit to GRO
12818d24db8ab01836bf423a7c1be639c3135572 xfs: rework log recovery to submit buffers on LSN boundaries
60a4a22251568063c9289eb65099d7c61b4a54b0 xfs: update metadata LSN in buffers during log recovery
12735f881952c32b31bc4e433768f18489f79ec9 ext4: pre-zero allocated blocks for DAX IO
19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619 mm: remove gup_flags FOLL_WRITE games from __get_user_pages()

__CHANGES NOT IN UPSTREAM________________
Apply i686 Mods'
Apply debranding changes'
perf/uncore: Disable uncore on kdump kernel
cgroup: fix hugetlb_cgroup_read()
dm-raid: reverse validation of nosync+rebuild flags
thp: harden the debug kernel with a strict check for thp_mmu_gather
thp: initialize thp_mmu_gather for newly allocated migrated pages
thp: put_huge_zero_page() with MMU gather #2
ipv6: gro: fix forwarding of tunneled packets
btrfs: set S_IOPS_WRAPPER consistently
readahead: Move readahead limit outside of readahead, and advisory syscalls
mm: Fix regression panic at boot time seen on some NUMA systems
mm: non-linear virtual memory fix for KNL4 erratum
vt-d: Disable passthrough mode on Kexec kernel
balloon: account for gaps in hot add regions
balloon: keep track of where ha_region starts
rtc-rx8581: Mark tech preview
rtc-rx8581.c: remove empty function
Restore original checksums of pci symbols
reserve kABI fields in struct packet_type
revert "pci: Fix endian bug in fixed PHB numbering"
dax: disable dax on ext2 and ext3
dax: mark tech preview
pmem: disable dax mounting in the prsence of media errors
lio: assume a maximum of 1024 iovecs
smartpqi: update maintainers
Mark Intel Purley 2 socket processor as supported
bluetooth: Fix kabi breakage in struct hci_core
makefile: update DRM version
i915/hsw: Disable PSR by default
target/user: Fix failure to unlock a spinlock upon function return
Backport tcm-user from 4.6
Block HPET on Purley 4S
rdma/ocrdma: display ocrdma tech preview status
ib/rdma_cm: fix panic when trying access default_roce_mode configfs
xfs: copy correct inode info in xfs_qm_scall_getqstat
qla2xxx: Remove double scsi_host_put() from qla2x00_remove_one()
revert "Introduce request_firmware_direct()"
smpboot: Fix CPU
Add support for Kabylake H/S
revert "userfaultfd: call mark_tech_preview"
dax,kabi: add special handling for ZONE_DEVICE
smartpqi: add config files
smartpqi: port to RHEL73
smartpqi: add smartpqi to drivers/scsi/Makefile
smartpqi: add smartpqi to scsi Kconfig
smartpqi: add smartpqi to MAINTAINERS
udp_offload: put sk before returning
svcrdma: Backport merge conflict resolution ab9f2faf
iscsi-target: Rework the configfs of cxgbit
pci: vmd: Remove development dev_info(s)
pci: vmd: Compose MSI message with correct IRQ index and clear useless data member
pci: vmd: Fix teardown_msi_irqs to upstream msi_free
pci: vmd: Add irq_mask/irq_unmaks ops
testing/nvdimm: open code dma_coerce_mask_and_coherent()
resource: Add region_intersects_pmem()
resource: Add @flags to region_intersects()
revert "remove struct bio_batch"
revert "add __blkdev_issue_discard"
revert "missing bio_put following submit_bio_wait"
hmm: select mmu-notifier
PCI bus specific MSI operations
i40iw: mark as tech-preview
i40iw: fix for missing commit 2f8e2c877784a0b23f02b41550170a24e14f5c95
vfs: prevent buffered I/O reads to DAX inodes
xfs, ext4, splice: avoid the page cache for DAX
use 'u64' for pfn flags
Enable VMMOUSE support
add vmmouse driver
watchdog, sysctl: fix pointer to watch_cpumask in kernel_table
geneve: fixup netdevice_notifier registration
convert to use netdev_notifier_info
hyperv: convert to use netdev_notifier_info
netfilter: nf_nat: on-stack struct netdev_notifier_info
ovl: fix copy-up warning
xfs: fix duplicate buffer flag bits
Fix iser explicit logout TX kthread leak
Fix iscsit_start_kthreads failure OOPs
Fix use-after-free during TPG session shutdown
hmm: adjust HMM backport to work properly with rhel7 mm context
hmm: only allow use of HMM through a kernel parameter
hmm: migration through heterogeneous memory management
hmm: helper to walk CPU page table in parallel with generic table
hmm: heterogeneous memory management support
gpt: generic page table structure
device: export device_rh_alloc() with EXPORT_SYMBOL
libceph: use s instead of pE in seq_printf() in dump_target()
don't leak memory in vmbus_establish_gpadl()
avoid vfree() on crash
hyper-v: Fix crash in interrupt cleanup path
sched: CONFIG_SCHEDSTATS kabi fix
Wire up sys_userfaultfd()
remove struct bio_batch
gcm - Fix rfc4543 decryption crash
ib core sysfs: Add port_xmit_wait_counter V2
include/net/ip_fib: add missing semi-colon
remove incorrect assignment to skb->sender_cpu
ext4: add remap_file_pages support for dax mounts
dax: fix partial completions for readv/writev
avoid walking hugetlb pages in stratus memory tracking
revert "sched: Fix cfs_rq->task_h_load calculation"
platform: Move device_remove_property_set() before device_del()
libata: alloc device_rh for ata_port elements
Revert "libata: Allocate device_rh() before use"
vxlan: change VXLAN_F_UDP_CSUM to VXLAN_F_UDP_ZERO_CSUM_TX
asm: Add several arch/x86/lib files to objtool whitelist
asm/efi: Add efi stub code to objtool whitelist
skb: preserve value for head_frag and xmit more
kvm: set vector hashing default to false
libata: Allocate device_rh() before use
i2c-core: Allocate device_rh() before use
wacom: Fix a Cintiq 27QHD touch issue
replace some read_lock(&tasklist_lock)'s with tasklist_read_lock()
replace write_lock_irq(&tasklist_lock) with tasklist_write_lock_irq()
introduce tasklist_read_lock() and tasklist_write_lock_irq()
jit: Disable classic BPF JIT on ppc64le
nfsd: allow SCSI layout support without Block layout
nfs: Mark block and SCSI layouts as tech preview on client
vhci: Fix race at creating hci device
vhci: purge unhandled skbs
vhci: fix open_timeout vs. hdev race
btusb: Add a new AR3012 ID 13d3:3472
btusb: Add a new AR3012 ID 04ca:3014
hci_uart: Add Intel/AG6xx support
Add new AR3012 ID 0489:e095
hci_bcm: Add BCM2E7C ACPI ID
hci_bcm: Add new ACPI ID for bcm43241
btusb: Add new AR3012 ID 13d3:3395
hci_intel: Fix a wrong comparison
Mark Kabylake-U/Y client processors as supported
Mark Intel Knights Landing-F processor as supported
introduce get_rh_dev_fwnode() and set_rh_dev_fwnode()
rhel: remove temporary device_dma_is_coherent()
rhel: add device_dma_is_coherent()
device, add device_rh_alloc()
perf: Add Goldmont support
Mark Intel Denverton processor as supported
dcb: fix accessing to extended ops
ipv4: test for IPSKB_FORWARDED in ip_finish_output_gso
ext4: set S_IOPS_WRAPPER flag in ext4_mkdir()
revert "make "nousb" a clear module parameter"
vmx - Fixing opcode issue
vmx - Fix assembler perl to use _GLOBAL
configs: enable nft dup
i40e: enable geneve offloading
build: Restore efi_stub_entry in arch/x86/boot/zoffset.h
mntns: drop namespace reference if !CAP_SYS_ADMIN
sched/core: Rearrange schedstats code to more closely match upstream
ib/hfi1: affinity.c backport for RHEL7.3
rdma/hfi1: select CRC32
rdma/hfi1: Fix memory leaks
rdma/hfi1: Fix header
rdma/hfi1: Remove CamelCase
rdma/hfi1: Fix misspellings
rdma/hfi1: use u8 for vl/sl
rdma/hfi1: remove s_rdma_mr
hfi1: Clean up comments
hfi1: Change default krcvqs
hfi1: Use BIT macro
hfi1: Convert lock to mutex
rdma: hfi1: Remove header file
rdma: hfi1: Use DIV_ROUND_UP
rdma/hfi1: add dd_dev_dbg
alsa: enable Intel SST audio
alsa: revert "asoc: intel: switch from ioremap_cache to memremap"
alsa: ALSA SoC tree cleanup - update the build files (Kconfig / Makefile)
alsa: SoC tree cleanup - remove all old and unmaintaned files
alsa: ALSA SoC tree sync from upstream v4.6 for intel sst
Simplify directory creation
protect pinctrl_list add
qede: use proper notifier registration function
mlx5: Fix typos in printk
mlx5: Fix typos in printk
mlx4: fix errors in printk
Fix DocBook build with relative $(srctree)
Remove old rtl818x directory
Backport rtl818x driver from linux-4.7-rc1
configs: add new rtlwifi drivers
Remove old rtlwifi directory
Backport rtlwifi drivers from linux-4.7-rc1
Remove old mwifiex directory and mwl8k.c file
Backport marvell drivers to code from linux-4.7-rc1
configs: add new brcmfmac_pcie driver
Remove old brcm80211 directory
Backport brcm80211 drivers to code from linux-4.7-rc1
Backport BCMA bus driver from linux-4.7-rc1
Backport SSB bus driver from linux-4.7-rc1
Remove old rt2x00 directory
Backport rt2x00 driver from linux-4.7-rc1
Backport wil6210 driver from linux-4.7-rc1
Backport carl9170 driver from linux-4.7-rc1
configs: add new ath10k driver
Backport ath10k driver from linux-4.7-rc1
Backport ath9k driver from linux-4.7-rc1
Remove old iwlegacy directory
Backport iwlegacy from linux-4.7-rc1
Remove old iwlwifi directory
Backport iwlwifi driver from linux-4.7-rc1
Backport mac80211 from linux-4.7-rc1
Backport wireless core from linux-4.7-rc1
Wire up sys_memfd_create()
rapl: add support for Denverton
rapl: Add Skylake Server model number
rapl: Reorder CPU detection table
rapl: Use Intel model macros intead of open-coding
fix virtio backport
rh_taint: introduce mark_hardware_deprecated()
Work around MPX erratum SKD046
overlayfs: Warn instead of error if upper filesystem does not support d_type
dcache: d_walk/dentry_free race
bio: Need to free integrity payload if the split bio gets memory by itself
configs: enable ceph filesystem ACL support
ib/ipath: use kmalloc_array instead of kmalloc
ipath: Remove unneeded vairable
ib/ipath: remove sched.h header
ib/ipath: ipath_eeprom: Remove useless intialisation
ib/ipath: ipath_init_chip: Remove useless initialisation
ib/path: Use kcalloc instead of kzalloc to allocate array
ib/ipath: Use memdup_user
ib/srp: Allow activation of scsi-mq for SRP in driver
hfi1: sdma: Use setup_timer
hfi1: driver: Use setup_timer
rdma: mad: Remove explicit cast
usb/plusb.c: Fix typo
baytrail: Clear DIRECT_IRQ bit
Add IS_REACHABLE macro
add SKB_GSO_TUNNEL_REMCSUM to SKB_GSO2_MASK
leave space to allow adding new GSO bits
sctp: retran_path not set properly after transports recovering
sched/deadline: Disable SCHED_DEADLINE programmatically
sched/deadline: Remove superfluous call to
sched/deadline: Optimize sequential update_curr_dl()
sched/deadline: sched/deadline: Add deadline documentation
sched/deadline: Provide update_curr callback for dl_sched_class
drm/atomic: Verify connector->funcs != NULL when clearing states
drm/i915: Discard previous atomic state on resume if connectors change
drm/i915: Change WARN_ON(!wm_changed) to I915_STATE_WARN_ON()
upstream sync to v4.6
revert "asm: Clean up frame pointer macros"
revert "asm: Add C versions of frame pointer macros"
revert "objtool: Support CROSS_COMPILE"
revert "asm/efi: Add efi stub code to objtool whitelist"
revert "asm: Add several arch/x86/lib files to objtool whitelist"
revert "asm/bpf: Annotate callable functions"
revert "asm/bpf: Create stack frames in bpf_jit.S"
revert "asm/crypto: Don\'t use RBP as a scratch register"
revert "kvm: Make test_cc() always inline"
revert "asm/xen: Create stack frames in xen-asm.S"
revert "asm: Create stack frames in rwsem functions"
revert "hpwdt: Create stack frame in asminline_call()"
revert "kvm: Add stack frame dependency to vmcs_readl()"
fix INET_DIAG_MAX value
vxlan: allow setting ipv6 traffic class (dst_cache part)
tunnels: fix usage of dst_cache on xmit
kvm: Add stack frame dependency to vmcs_readl()
asm: Add several arch/x86/lib files to objtool whitelist
asm/efi: Add efi stub code to objtool whitelist
isci: Fix a infinite loop
pci: hda/ca0132 - use generic parser for some models
pci: Mark Intel Grangeville ixgbe variant 0x15AC as supported
Hide broken INTx support from user
Drop unused syscall_get_error()
kernel: Switch to using MAX_ERRNO (0/9)
ndo: consolidate reserved fields
move ndo_set_vf_trust to net_device_ops_extended
move ndo_dfwd_add/del_station to net_device_ops_extended
move ndo_set_tx_maxrate to net_device_ops_extended
fix wrong merge of ndo_set_vf_rate documentation
introduce net_device_ops_extended
bnx2x: conversion of smp_mb__*()
netfilter: fix oops with metadata dst
ipv6: add ipv6_proxy_select_ident()
revert "rhel: use dummy net_device for tunnels"
hpsa: Update revision to reflect Red Hat version
be2iscsi: change email domain
be2iscsi: revert: Update the copyright year
rhel-only: EXPORT_SYMBOL(md_update_sb)
Missing null tcon check
fix null pointer check
iovec.c: add memcpy_fromiovecend_nocache
fix pfn_mkwrite KABI
Record MMIO range in use by frame buffer
Reverse order of resources in hyperv_mmio
Lock access to hyperv_mmio resource tree
export __ioapic_set_affinity to modules
export x86_msi to modules
seq: Add minimal support for seq_buf
compat: correct sign-extension of the brk() compat system call
ixgbevf: update driver versions to indicate RHEL7.3
igb: don't give up
uv: Disable UV BAU by default
coretemp: Allow format checking
ip-sysctl.txt: clarify secure_redirects
Add compatible kAPI for skb_get_rxhash
balloon: reset host_specified_ha_region
bluetooth: KABI cleanups
802154 and 6lowpan: Rebase to v4.5
intel: Use request_firmware instead
bluetooth: Rebase to v4.5
upstream sync to v4.5
ixgbe: update driver versions to indicate RHEL7.3
bnxt: rewrite flow dissector bits for RHEL 7.3
bnxt_en: Backport bnxt portions of upstream commit 93d05d4a320c
bnxt_en: Backport bnxt portions of upstream commit 5eb4dce3b347
bnxt_en: Backport bnxt portions of upstream commit 16e5cc647173
bnxt_en: Backport bnxt portions of upstream commit e4c6734eaab9
rapl: add support for skx
move MM_SHMEMPAGES counter into reserved slot of {task, mm}_struct
Fix irq_poll_sched()
remove unused data and max fields
mark __irq_poll_complete static
gfs2: Cache ACLs read from disk
i40evf: use napi_complete_done()
i40e: add inline csum_replace_by_diff workaround
thp: put_huge_zero_page() with MMU gather
thp: introduce thp_mmu_gather to pin tail pages during MMU gather
fix for_each_netdev_feature
qat - fix timeout issues
qat - don't check for iommu
qat - enable legacy VFs
qat - Add FW const table
qat - Add support for SRIOV
qat - remove unused define
qat - Set max request size
qat - add driver version
sg.c: mark VMA as VM_IO to prevent migration
scsi_transport_fc: Introduce scsi_host_get, scsi_host_put
revert "kernel: microcode, amd, avoid allocating with vmalloc & GFP_KERNEL when IRQs are disabled"
regulator: Sync regulator/consumer.h with v4.5
mm: update memory tracking for criu soft dirty
meminit: initialize enough pages for struct page
meminit: use early_pfn_to_nid for page_cgroup_init
Include file needed for next patch to compile
remove ifdef condition
cxlflash: scsi_change_queue_depth backport
cxlflash: lun size in scsi_device
virtio-pci: use possible fallback queue size
perf: Fix uncore build
mpt3sas: create two binaries from a single source
sched: Fix potential kabi breakage on wait_bit_queue
watchdog: keep rhel7 old-behaviour compatibility
re-enable fixup_ht_bug
Fix use-after-free in pty_common_install
Merge alloc_tty_struct and initialize_tty_struct
Only hangup once
3w-9xxx: version string touch
lpfc: update version for rhel7.3 to 11.1.0.2
vmscan: catch and fix shrinker overflows
kdump: fix wrong BUG_ON() statement
zcrypt: HWRNG registration cause kernel panic on CEX hotplug
hcd: use USB_DT_*
Delete XHCI command timer if necessary
change TRACE_EVENT(writeback_dirty_page) to check bdi->dev != NULL
sclp: correctly set eca siif bit
rmi: remove hdev->hid_output_raw_report() stubs
Mark Intel Knights Landing-F processor as not supported
sysfs/blk-sysfs: fix uninitialized var usage
vmbus: handle various crash scenarios
vmbus: Support kexec on ws2012 r2 and above
vmbus: avoid wait_for_completion() on crash
e1000: Use napi_alloc_skb
e1000: Use eth_skb_pad and skb_put_padto helpers
pci: Export symbols for CXL
ethtool: Added port speed macros
revert "bonding: propagate LRO disable to slave devices"
e1000e: Use napi_alloc_skb
e1000e: fix 32-bit DMA mask handling
hfi1: Move hfi1 driver to match upstream tree
nvme-core: fix build with gcc-4.4.4
kvp: fix IP Failover
utils: rename outmsg_lock
utils: fix memory leak on on_msg() failure
vss: run only on supported host versions
utils: use memdup_user in hvt_op_write
utils: catch allocation errors
utils: Increase the timeout for util services
kvp: check kzalloc return value
utils: unify driver registration reporting
fcopy: full handshake support
vss: full handshake support
kvp: convert to hv_utils_transport
fcopy: convert to hv_utils_transport
vss: convert to hv_utils_transport
utils: introduce hv_utils_transport abstraction
utils: introduce state machine for util drivers
kvp: rename kvp_work -> kvp_timeout_work
kvp: move poll_channel() to hyperv_vmbus.h
kvp: reset kvp_context
Restore inode_dio_done declaration
Reinstate pv_cpu_ops.read_tsc()
tsc: Restore rdtsc_barrier()
ceph: don't increase filp->f_pos when readdir run out of buffer
Align TOC to 256 bytes
timekeeping: Add timekeeping_get_delta()
hpsa: update rev to 3.4.10-0-RH3
mm: suitable memory should go to ZONE_MOVABLE
Add prototype declaration to the header file
Revert the PAGE_BIT_SOFTDIRTY part from "mm: add memory tracking hooks"
mlx4_en: Fix IRQ affinity on s390x
acpi: Disable ACPI table override if securelevel is set
Enable No-IOMMU option for RHEL
vmbus: avoid infinite loop in init_vp_index()
vmbus: Add vendor and device atttributes
vmbus: Cleanup vmbus_set_event()
replace enum hv_message_type by u32
ring_buffer: eliminate hv_ringbuffer_peek()
ring_buffer: fix comment style
vmbus: Fix a Host signaling bug
vmbus: briefly comment num_sc and next_oc
vmbus: Use uuid_le_cmp() for comparing GUIDs
vmbus: Use uuid_le type consistently
vmbus: Fix signal to host condition
vmbus: Further improve CPU affiliation logic
vmbus: fix typo in hv_port_info struct
vmbus: distribute subchannels among all vcpus
vmbus: decrease num_sc on subchannel removal
vmbus: unify calls to percpu_channel_enq()
vmbus: remove the redundant free_channel()
vmbus: Fix a siganlling host signalling issue
vmbus: Add support for the NetworkDirect GUID
make uuid_le const
correct tsc page sequence invalid value
kABI fix
kvm: make struct kvm_irq_routing_table public
IRQ bypass manager
x86: cache IRTE in struct irq_2_iommu
revert "ipv6: don\'t use CHECKSUM_PARTIAL on MSG_MORE/UDP_CORK sockets"
cgroup: pids: rhel-specific hack to fix zombie accounting
cgroup: pids: fix kABI breakage
cgroup: pids: adapt cgroup_pids.c to RHEL7
cgroup: implement task_get_css()
xfs: fix splice/direct-IO deadlock
vfs: split generic splice code from i_mutex locking
cifs: Fix warning
cifs: Fix coverity warning
cifs: kill f_dentry uses
Mark Intel Knights Landing processor as supported
Workaround Cisco Systems _DSM ACPI bug
kernel: Initialize multiplier to 0
Rewrite cyc2ns() to avoid the need to disable IRQs
Move some cyc2ns() code around
Use mul_u64_u32_shr() for native_sched_clock()
dm: use RHEL7's old blk_mq_alloc_request and blk_mq_complete_request interfaces
cleanup blkdev_ioctl
eeh: Fix PE location code
revert "write to force_empty will cause soft lockup"
Add DDR4 flag
usb: Add phy/phy.h to help keep files in sync
drm: Remove now duplicated usage of system_power_efficient_wq
Miscellaneous conversions to ETH_ALEN
virtio_balloon: include linux/virtio_types.h
balloon_compaction: fix race between migration and ballooning
mmu_notifier: fix memory corruption
write to force_empty will cause soft lockup
shm: Add memory sealing support memfd_create
add VM_WARN_ON() and VM_WARN_ON_ONCE()
proc: fix for infinite loop in proc_device_tree_update_prop
Restore export.h
vmbus: Use get_cpu() to get the current CPU
fix __copy_skb_header()
kernel: inadvertent free of the vector register save area
mm: tracking vDSO remap
Enable sys_kcmp() for CRIU
Add __raw_rm_writeq() function
Add PVR for POWER8NVL processor
Disable F71868 and F81866
Add support for f81768d
Add support for F81866 and F71868
hpwdt: HP rebranding
vmbus: restore hv_synic_clockevents_cleanup() call in hv_kexec_handler()
vmbus: Implement a clockevent device
mei: Fix parent of watchdog_device
pnfs: adjust backport for bit_wait check API change
revert "inotify: don\'t add consecutive overflow events to the queue"
tsc: Add native_read_tsc() to maintain KABI
tsc: Remove rdtsc_barrier()
tsc: Remove rdtscl()
tsc: Use the full 64-bit TSC to detect the 2.6.2 bug
paravirt: Remove read_tsc() and read_tscp() paravirt hooks
kvm: Remove vget_cycles()
intel_pstate: Fix divide by zero on Knights Landing
Disable on !MMU builds
ipv6: Fix regression in udp_v6_mcast_next()
tcp: implement sk_forced_wmem_schedule
hpsa: Update driver revision to RH2
megaraid_sas: touch version string
iscsi: make mutex for target scanning and unbinding per-session
Revert "report \'INQUIRY result too short\' once"
Fix parent of watchdog_devices
itco_wdt: Fix the parent device
ksm: add reschedule points to unmerge_and_remove_all_rmap_items
Broadwell EP and EX have the same cpuid
nx-842: Mask XERS0 bit in return value
rh_kabi: add RH_KABI_DEPRECATE_FN
module: Add missing 'T' in /proc/modules when a module has the TAINT_TECH_PREVIEW bit set
rapl: fix BIOS lock check
alx: sanitize buffer sizing and padding
alx: add Killer E2400 device ID
Add a function to check macvlan port
sched/fair: Disable tg load_avg/runnable_avg update for root_task_group
sched/fair: Move hot load_avg/runnable_avg into separate cacheline
sched: Fix redo label position
sched: Keep upstream 'local' namespace
kvm: Fix alignment bug in powerpc kvm_cma_declare_contiguous()
scsi_error: fix stray switch detected by smatch in scsi_noretry_cmd
rhel: use dummy net_device for tunnels
netfilter: provide v6ops->fragment to forward IPv6 fragmented packets
netfilter: bridge: simplify test with nf_bridge_in_prerouting
rcu: create rcu threads only for online cpus at boot time
kvm: book3s: Minor cleanups
lib: Export __spin_yield
rapl: Enable Broxton RAPL support
rapl: Add support for Broadwell-H
rapl: Add support for Skylake H/S
rapl: Support Knights Landing
rapl: add ID for Broadwell server
rapl: add IDs for future Xeon CPUs
rapl: add new model ids
rapl: handle atom and core differences
rapl: abstract per cpu type functions
fix KABI wreckage in xsave_hdr_struct
remove trailing slash from define to please debugedit
bonding: propagate LRO disable to slave devices
revert "intel_pstate: fix rounding error in max_freq_pct"
Add POWER8 CPU selection
kernel: Set X86_FEATURE_EXTD_APICID for future processors
kernel: Use larger chunks in mtrr_cleanup
kernel: correct uc_sigmask of the compat signal frame
intel_pstate: fix rounding error in max_freq_pct
virt: guest to host DoS by triggering an infinite loop in microcode
revert "intel_pstate: add quirk to disable HWP on Skylake-S processors"
revert "intel_pstate: disable Skylake processors"
pci: initialize hybrid_dma_data before use
