mmc: core: Don't panic when fetching EXT_CSD

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] core: Don't panic when fetching EXT_CSD (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 93.98%
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit 2fd322a58ed17b9159aa369e7c9ea01eb6a5d5ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2fd322a5.failed

Instead of doing BUG_ON(), return an error code.

	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 2fd322a58ed17b9159aa369e7c9ea01eb6a5d5ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/mmc.c
diff --cc drivers/mmc/core/mmc.c
index c3e6ecc69da0,efaa9f8f07b0..000000000000
--- a/drivers/mmc/core/mmc.c
+++ b/drivers/mmc/core/mmc.c
@@@ -185,13 -185,11 +185,13 @@@ static int mmc_get_ext_csd(struct mmc_c
  	int err;
  	u8 *ext_csd;
  
- 	BUG_ON(!card);
- 	BUG_ON(!new_ext_csd);
+ 	if (!card || !new_ext_csd)
+ 		return -EINVAL;
  
 -	if (!mmc_can_ext_csd(card))
 -		return -EOPNOTSUPP;
 +	*new_ext_csd = NULL;
 +
 +	if (card->csd.mmca_vsn < CSD_SPEC_VER_4)
 +		return 0;
  
  	/*
  	 * As the ext_csd is so large and mostly unused, we don't store the
@@@ -364,11 -368,6 +364,14 @@@ static int mmc_decode_ext_csd(struct mm
  	int err = 0, idx;
  	unsigned int part_size;
  
++<<<<<<< HEAD
 +	BUG_ON(!card);
 +
 +	if (!ext_csd)
 +		return 0;
 +
++=======
++>>>>>>> 2fd322a58ed1 (mmc: core: Don't panic when fetching EXT_CSD)
  	/* Version is coded in the CSD_STRUCTURE byte in the EXT_CSD register */
  	card->ext_csd.raw_ext_csd_structure = ext_csd[EXT_CSD_STRUCTURE];
  	if (card->csd.structure == 3) {
* Unmerged path drivers/mmc/core/mmc.c
