net: Disable segmentation if checksumming is not supported

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] Disable segmentation if checksumming is not supported (Jiri Benc) [1297504]
Rebuild_FUZZ: 95.50%
commit-author Alexander Duyck <aduyck@mirantis.com>
commit 996e802187889f1cd412e6929c9344b92ccb78c4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/996e8021.failed

In the case of the mlx4 and mlx5 driver they do not support IPv6 checksum
offload for tunnels.  With this being the case we should disable GSO in
addition to the checksum offload features when we find that a device cannot
perform a checksum on a given packet type.

	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 996e802187889f1cd412e6929c9344b92ccb78c4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/dev.c
diff --cc net/core/dev.c
index 2ce9ccdd4029,5c925ac50b95..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -2482,7 -2802,7 +2482,11 @@@ static netdev_features_t harmonize_feat
  
  	if (skb->ip_summed != CHECKSUM_NONE &&
  	    !can_checksum_protocol(features, type)) {
++<<<<<<< HEAD
 +		features &= ~NETIF_F_ALL_CSUM;
++=======
+ 		features &= ~(NETIF_F_CSUM_MASK | NETIF_F_GSO_MASK);
++>>>>>>> 996e80218788 (net: Disable segmentation if checksumming is not supported)
  	} else if (illegal_highdma(skb->dev, skb)) {
  		features &= ~NETIF_F_SG;
  	}
* Unmerged path net/core/dev.c
