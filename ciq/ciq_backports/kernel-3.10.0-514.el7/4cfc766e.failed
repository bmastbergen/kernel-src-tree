nvme: suspend i/o during runtime blk_integrity_unregister

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 4cfc766e07a5ed709a9d5289c8644fe78e9f24de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4cfc766e.failed

Synchronize pending i/o against a change in the integrity profile to
avoid the possibility of spurious integrity errors.

	Cc: Matthew Wilcox <willy@linux.intel.com>
	Acked-by: Keith Busch <keith.busch@intel.com>
[keith: also protect dynamic integrity registration]
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 4cfc766e07a5ed709a9d5289c8644fe78e9f24de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index f5099f908371,4757a2c9366e..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -1929,7 -2031,13 +1929,17 @@@ static int nvme_revalidate_disk(struct 
  		ns->lba_shift = 9;
  	bs = 1 << ns->lba_shift;
  
++<<<<<<< HEAD:drivers/block/nvme-core.c
 +	if (blk_get_integrity(disk) && (ns->ms != old_ms ||
++=======
+ 	/* XXX: PI implementation requires metadata equal t10 pi tuple size */
+ 	pi_type = ns->ms == sizeof(struct t10_pi_tuple) ?
+ 					id->dps & NVME_NS_DPS_PI_MASK : 0;
+ 
+ 	blk_mq_freeze_queue(disk->queue);
+ 	if (blk_get_integrity(disk) && (ns->pi_type != pi_type ||
+ 				ns->ms != old_ms ||
++>>>>>>> 4cfc766e07a5 (nvme: suspend i/o during runtime blk_integrity_unregister):drivers/nvme/host/pci.c
  				bs != queue_logical_block_size(disk->queue) ||
  				(ns->ms && ns->ext)))
  		blk_integrity_unregister(disk);
@@@ -1949,8 -2055,9 +1959,9 @@@
  
  	if (dev->oncs & NVME_CTRL_ONCS_DSM)
  		nvme_config_discard(ns);
+ 	blk_mq_unfreeze_queue(disk->queue);
  
 -	kfree(id);
 +	dma_free_coherent(&dev->pci_dev->dev, 4096, id, dma_addr);
  	return 0;
  }
  
* Unmerged path drivers/block/nvme-core.c
