ipv6: recreate ipv6 link-local addresses when increasing MTU over IPV6_MIN_MTU

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Duyck <aduyck@mirantis.com>
commit b7b0b1d290cc89c39607dd47f8047e1071e65692
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b7b0b1d2.failed

This change makes it so that we reinitialize the interface if the MTU is
increased back above IPV6_MIN_MTU and the interface is up.

	Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b7b0b1d290cc89c39607dd47f8047e1071e65692)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/addrconf.c
diff --cc net/ipv6/addrconf.c
index 782de01fd7f0,d72fa90d6feb..000000000000
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@@ -2928,24 -3261,6 +2954,27 @@@ static int addrconf_notify(struct notif
  		}
  		break;
  
++<<<<<<< HEAD
 +	case NETDEV_CHANGEMTU:
 +		if (idev && dev->mtu >= IPV6_MIN_MTU) {
 +			rt6_mtu_change(dev, dev->mtu);
 +			idev->cnf.mtu6 = dev->mtu;
 +			break;
 +		}
 +
 +		if (!idev && dev->mtu >= IPV6_MIN_MTU) {
 +			idev = ipv6_add_dev(dev);
 +			if (idev)
 +				break;
 +		}
 +
 +		/*
 +		 * if MTU under IPV6_MIN_MTU.
 +		 * Stop IPv6 on this interface.
 +		 */
 +
++=======
++>>>>>>> b7b0b1d290cc (ipv6: recreate ipv6 link-local addresses when increasing MTU over IPV6_MIN_MTU)
  	case NETDEV_DOWN:
  	case NETDEV_UNREGISTER:
  		/*
* Unmerged path net/ipv6/addrconf.c
