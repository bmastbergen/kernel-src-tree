drm/dp_helper: Always wait before retrying native aux transactions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] dp_helper: Always wait before retrying native aux transactions (Rob Clark) [1072036 1115530 1202702 1211398 1235963 1272159]
Rebuild_FUZZ: 96.88%
commit-author Lyude <cpaul@redhat.com>
commit e1083ff35157185b01bc0a99cb19b7cbae0fc9fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e1083ff3.failed

This is part of a patch series to migrate all of the workarounds for
commonly seen behavior from bad sinks in intel_dp_dpcd_read_wake() to
drm's DP helper.

Some sinks need some time during the process of resuming the system from
sleep before they're ready to handle transactions. While it would be
nice if they responded with NACKs in these scenarios, this isn't always
the case as a few sinks will just timeout on all of the transactions
they receive until they're ready.

	Signed-off-by: Lyude <cpaul@redhat.com>
	Tested-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Link: http://patchwork.freedesktop.org/patch/msgid/1460559513-32280-2-git-send-email-cpaul@redhat.com
(cherry picked from commit e1083ff35157185b01bc0a99cb19b7cbae0fc9fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/drm_dp_helper.c
diff --cc drivers/gpu/drm/drm_dp_helper.c
index 61035778ac4a,7dd330ae0e81..000000000000
--- a/drivers/gpu/drm/drm_dp_helper.c
+++ b/drivers/gpu/drm/drm_dp_helper.c
@@@ -191,30 -196,28 +191,38 @@@ static int drm_dp_dpcd_access(struct dr
  	 * sufficient, bump to 32 which makes Dell 4k monitors happier.
  	 */
  	for (retry = 0; retry < 32; retry++) {
+ 		if (err != 0 && err != -ETIMEDOUT) {
+ 			usleep_range(AUX_RETRY_INTERVAL,
+ 				     AUX_RETRY_INTERVAL + 100);
+ 		}
  
 +		mutex_lock(&aux->hw_mutex);
  		err = aux->transfer(aux, &msg);
 +		mutex_unlock(&aux->hw_mutex);
  		if (err < 0) {
  			if (err == -EBUSY)
  				continue;
  
 -			goto unlock;
 +			return err;
  		}
  
- 
  		switch (msg.reply & DP_AUX_NATIVE_REPLY_MASK) {
  		case DP_AUX_NATIVE_REPLY_ACK:
  			if (err < size)
 -				err = -EPROTO;
 -			goto unlock;
 +				return -EPROTO;
 +			return err;
  
  		case DP_AUX_NATIVE_REPLY_NACK:
++<<<<<<< HEAD
 +			return -EIO;
 +
 +		case DP_AUX_NATIVE_REPLY_DEFER:
 +			usleep_range(400, 500);
 +			break;
++=======
+ 			err = -EIO;
+ 			goto unlock;
++>>>>>>> e1083ff35157 (drm/dp_helper: Always wait before retrying native aux transactions)
  		}
  	}
  
* Unmerged path drivers/gpu/drm/drm_dp_helper.c
