intel_idle: Disable Baytrail Core and Module C6 auto-demotion

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Len Brown <len.brown@intel.com>
commit 8c058d53f6f2eb0b9cd3bc4ce5c053a64dded671
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8c058d53.failed

Power efficiency improves on Baytrail (Intel Atom Processor E3000)
when Linux disables C6 auto-demotion.

Based on work by Srinidhi Kasagar <srinidhi.kasagar@intel.com>.

	Signed-off-by: Len Brown <len.brown@intel.com>
	Cc: x86@kernel.org
(cherry picked from commit 8c058d53f6f2eb0b9cd3bc4ce5c053a64dded671)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/msr-index.h
#	drivers/idle/intel_idle.c
diff --cc arch/x86/include/asm/msr-index.h
index cf77409a99ed,4a7aecd2ea13..000000000000
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@@ -160,57 -147,10 +160,62 @@@
  #define MSR_PP1_ENERGY_STATUS		0x00000641
  #define MSR_PP1_POLICY			0x00000642
  
 +#define MSR_CONFIG_TDP_NOMINAL		0x00000648
 +#define MSR_CONFIG_TDP_LEVEL_1		0x00000649
 +#define MSR_CONFIG_TDP_LEVEL_2		0x0000064A
 +#define MSR_CONFIG_TDP_CONTROL		0x0000064B
 +#define MSR_TURBO_ACTIVATION_RATIO	0x0000064C
 +
 +#define MSR_PKG_WEIGHTED_CORE_C0_RES	0x00000658
 +#define MSR_PKG_ANY_CORE_C0_RES		0x00000659
 +#define MSR_PKG_ANY_GFXE_C0_RES		0x0000065A
 +#define MSR_PKG_BOTH_CORE_GFXE_C0_RES	0x0000065B
 +
  #define MSR_CORE_C1_RES			0x00000660
  
++<<<<<<< HEAD:arch/x86/include/asm/msr-index.h
 +/* Hardware P state interface */
 +#define MSR_PPERF			0x0000064e
 +#define MSR_PERF_LIMIT_REASONS		0x0000064f
 +#define MSR_PM_ENABLE			0x00000770
 +#define MSR_HWP_CAPABILITIES		0x00000771
 +#define MSR_HWP_REQUEST_PKG		0x00000772
 +#define MSR_HWP_INTERRUPT		0x00000773
 +#define MSR_HWP_REQUEST 		0x00000774
 +#define MSR_HWP_STATUS			0x00000777
 +
 +/* CPUID.6.EAX */
 +#define HWP_BASE_BIT			(1<<7)
 +#define HWP_NOTIFICATIONS_BIT		(1<<8)
 +#define HWP_ACTIVITY_WINDOW_BIT		(1<<9)
 +#define HWP_ENERGY_PERF_PREFERENCE_BIT	(1<<10)
 +#define HWP_PACKAGE_LEVEL_REQUEST_BIT	(1<<11)
 +
 +/* IA32_HWP_CAPABILITIES */
 +#define HWP_HIGHEST_PERF(x)		(x & 0xff)
 +#define HWP_GUARANTEED_PERF(x)		((x & (0xff << 8)) >>8)
 +#define HWP_MOSTEFFICIENT_PERF(x)	((x & (0xff << 16)) >>16)
 +#define HWP_LOWEST_PERF(x)		((x & (0xff << 24)) >>24)
 +
 +/* IA32_HWP_REQUEST */
 +#define HWP_MIN_PERF(x) 		(x & 0xff)
 +#define HWP_MAX_PERF(x) 		((x & 0xff) << 8)
 +#define HWP_DESIRED_PERF(x)		((x & 0xff) << 16)
 +#define HWP_ENERGY_PERF_PREFERENCE(x)	((x & 0xff) << 24)
 +#define HWP_ACTIVITY_WINDOW(x)		((x & 0xff3) << 32)
 +#define HWP_PACKAGE_CONTROL(x)		((x & 0x1) << 42)
 +
 +/* IA32_HWP_STATUS */
 +#define HWP_GUARANTEED_CHANGE(x)	(x & 0x1)
 +#define HWP_EXCURSION_TO_MINIMUM(x)	(x & 0x4)
 +
 +/* IA32_HWP_INTERRUPT */
 +#define HWP_CHANGE_TO_GUARANTEED_INT(x)	(x & 0x1)
 +#define HWP_EXCURSION_TO_MINIMUM_INT(x)	(x & 0x2)
++=======
+ #define MSR_CC6_DEMOTION_POLICY_CONFIG	0x00000668
+ #define MSR_MC6_DEMOTION_POLICY_CONFIG	0x00000669
++>>>>>>> 8c058d53f6f2 (intel_idle: Disable Baytrail Core and Module C6 auto-demotion):arch/x86/include/uapi/asm/msr-index.h
  
  #define MSR_AMD64_MC0_MASK		0xc0010044
  
diff --cc drivers/idle/intel_idle.c
index ebe5090f66aa,2d23cf8279f0..000000000000
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@@ -734,6 -611,12 +735,15 @@@ static const struct idle_cpu idle_cpu_s
  	.disable_promotion_to_c1e = true,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct idle_cpu idle_cpu_byt = {
+ 	.state_table = byt_cstates,
+ 	.disable_promotion_to_c1e = true,
+ 	.byt_auto_demotion_disable_flag = true,
+ };
+ 
++>>>>>>> 8c058d53f6f2 (intel_idle: Disable Baytrail Core and Module C6 auto-demotion)
  static const struct idle_cpu idle_cpu_ivb = {
  	.state_table = ivb_cstates,
  	.disable_promotion_to_c1e = true,
* Unmerged path arch/x86/include/asm/msr-index.h
* Unmerged path drivers/idle/intel_idle.c
