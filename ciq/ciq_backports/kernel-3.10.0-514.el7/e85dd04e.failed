mmc: tmio: remove Renesas specific #ifdef

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit e85dd04ea8c8d32ba8eae278959d28df34338e9d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e85dd04e.failed

This patch adds new TMIO_MMC_HAVE_CTL_DMA_REG flag,
and remove Renesas specific #ifdef from tmio driver

	Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
	Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit e85dd04ea8c8d32ba8eae278959d28df34338e9d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mobile_sdhi.c
#	include/linux/mfd/tmio.h
diff --cc drivers/mmc/host/sh_mobile_sdhi.c
index 79ee6f0c45bd,a077da02bb8e..000000000000
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@@ -196,6 -225,21 +196,24 @@@ static int sh_mobile_sdhi_probe(struct 
  	 */
  	mmc_data->flags |= TMIO_MMC_SDIO_IRQ;
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * All SDHI have CMD12 controll bit
+ 	 */
+ 	mmc_data->flags |= TMIO_MMC_HAVE_CMD12_CTRL;
+ 
+ 	/*
+ 	 * All SDHI need SDIO_INFO1 reserved bit
+ 	 */
+ 	mmc_data->flags |= TMIO_MMC_SDIO_STATUS_QUIRK;
+ 
+ 	/*
+ 	 * All SDHI have DMA control register
+ 	 */
+ 	mmc_data->flags |= TMIO_MMC_HAVE_CTL_DMA_REG;
+ 
++>>>>>>> e85dd04ea8c8 (mmc: tmio: remove Renesas specific #ifdef)
  	if (of_id && of_id->data) {
  		const struct sh_mobile_sdhi_of_data *of_data = of_id->data;
  		mmc_data->flags |= of_data->tmio_flags;
diff --cc include/linux/mfd/tmio.h
index b22883d60500,adcb0cdb2fdb..000000000000
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@@ -76,6 -76,29 +76,32 @@@
   */
  #define TMIO_MMC_USE_GPIO_CD		(1 << 5)
  
++<<<<<<< HEAD
++=======
+ /*
+  * Some controllers doesn't have over 0x100 register.
+  * it is used to checking accessibility of
+  * CTL_SD_CARD_CLK_CTL / CTL_CLK_AND_WAIT_CTL
+  */
+ #define TMIO_MMC_HAVE_HIGH_REG		(1 << 6)
+ 
+ /*
+  * Some controllers have CMD12 automatically
+  * issue/non-issue register
+  */
+ #define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
+ 
+ /*
+  * Some controllers needs to set 1 on SDIO status reserved bits
+  */
+ #define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
+ 
+ /*
+  * Some controllers have DMA enable/disable register
+  */
+ #define TMIO_MMC_HAVE_CTL_DMA_REG	(1 << 9)
+ 
++>>>>>>> e85dd04ea8c8 (mmc: tmio: remove Renesas specific #ifdef)
  int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
  int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
  void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
* Unmerged path drivers/mmc/host/sh_mobile_sdhi.c
diff --git a/drivers/mmc/host/tmio_mmc_dma.c b/drivers/mmc/host/tmio_mmc_dma.c
index a8aaa7871c0d..3bc66930d093 100644
--- a/drivers/mmc/host/tmio_mmc_dma.c
+++ b/drivers/mmc/host/tmio_mmc_dma.c
@@ -28,10 +28,8 @@ void tmio_mmc_enable_dma(struct tmio_mmc_host *host, bool enable)
 	if (!host->chan_tx || !host->chan_rx)
 		return;
 
-#if defined(CONFIG_SUPERH) || defined(CONFIG_ARCH_SHMOBILE)
-	/* Switch DMA mode on or off - SuperH specific? */
-	sd_ctrl_write16(host, CTL_DMA_ENABLE, enable ? 2 : 0);
-#endif
+	if (host->pdata->flags & TMIO_MMC_HAVE_CTL_DMA_REG)
+		sd_ctrl_write16(host, CTL_DMA_ENABLE, enable ? 2 : 0);
 }
 
 void tmio_mmc_abort_dma(struct tmio_mmc_host *host)
* Unmerged path include/linux/mfd/tmio.h
