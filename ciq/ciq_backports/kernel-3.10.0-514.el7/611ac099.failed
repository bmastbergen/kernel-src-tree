IB/qib: Setup notify free/create mad agent callbacks for rdmavt

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dennis Dalessandro <dennis.dalessandro@intel.com>
commit 611ac099289736176e16aedd75f980f21b00d974
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/611ac099.failed

Qib needs to be notified when mad agents are created and freed, there is
some counter maintenance that needs to be performed. Add those callbacks at
registration time with rdmavt.

	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Reviewed-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 611ac099289736176e16aedd75f980f21b00d974)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/qib/qib_verbs.c
diff --cc drivers/infiniband/hw/qib/qib_verbs.c
index c4417a1f33be,cbf6200e6afc..000000000000
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@@ -2283,11 -1661,64 +2283,39 @@@ int qib_register_ib_device(struct qib_d
  	dd->verbs_dev.rdi.driver_f.port_callback = qib_create_port_files;
  	dd->verbs_dev.rdi.driver_f.get_card_name = qib_get_card_name;
  	dd->verbs_dev.rdi.driver_f.get_pci_dev = qib_get_pci_dev;
++<<<<<<< HEAD
 +	dd->verbs_dev.rdi.dparms.props.max_pd = ib_qib_max_pds;
 +	dd->verbs_dev.rdi.flags = (RVT_FLAG_MR_INIT_DRIVER |
 +				   RVT_FLAG_QP_INIT_DRIVER |
 +				   RVT_FLAG_CQ_INIT_DRIVER);
++=======
+ 	dd->verbs_dev.rdi.driver_f.check_ah = qib_check_ah;
+ 	dd->verbs_dev.rdi.driver_f.check_send_wqe = qib_check_send_wqe;
+ 	dd->verbs_dev.rdi.driver_f.notify_new_ah = qib_notify_new_ah;
+ 	dd->verbs_dev.rdi.driver_f.alloc_qpn = qib_alloc_qpn;
+ 	dd->verbs_dev.rdi.driver_f.qp_priv_alloc = qib_qp_priv_alloc;
+ 	dd->verbs_dev.rdi.driver_f.qp_priv_free = qib_qp_priv_free;
+ 	dd->verbs_dev.rdi.driver_f.free_all_qps = qib_free_all_qps;
+ 	dd->verbs_dev.rdi.driver_f.notify_qp_reset = qib_notify_qp_reset;
+ 	dd->verbs_dev.rdi.driver_f.do_send = qib_do_send;
+ 	dd->verbs_dev.rdi.driver_f.schedule_send = qib_schedule_send;
+ 	dd->verbs_dev.rdi.driver_f.quiesce_qp = qib_quiesce_qp;
+ 	dd->verbs_dev.rdi.driver_f.stop_send_queue = qib_stop_send_queue;
+ 	dd->verbs_dev.rdi.driver_f.flush_qp_waiters = qib_flush_qp_waiters;
+ 	dd->verbs_dev.rdi.driver_f.notify_error_qp = qib_notify_error_qp;
+ 	dd->verbs_dev.rdi.driver_f.mtu_to_path_mtu = qib_mtu_to_path_mtu;
+ 	dd->verbs_dev.rdi.driver_f.mtu_from_qp = qib_mtu_from_qp;
+ 	dd->verbs_dev.rdi.driver_f.get_pmtu_from_attr = qib_get_pmtu_from_attr;
+ 	dd->verbs_dev.rdi.driver_f.schedule_send_no_lock = _qib_schedule_send;
+ 	dd->verbs_dev.rdi.driver_f.query_port_state = qib_query_port;
+ 	dd->verbs_dev.rdi.driver_f.shut_down_port = qib_shut_down_port;
+ 	dd->verbs_dev.rdi.driver_f.cap_mask_chg = qib_cap_mask_chg;
+ 	dd->verbs_dev.rdi.driver_f.notify_create_mad_agent =
+ 						qib_notify_create_mad_agent;
+ 	dd->verbs_dev.rdi.driver_f.notify_free_mad_agent =
+ 						qib_notify_free_mad_agent;
++>>>>>>> 611ac0992897 (IB/qib: Setup notify free/create mad agent callbacks for rdmavt)
  
 -	dd->verbs_dev.rdi.dparms.max_rdma_atomic = QIB_MAX_RDMA_ATOMIC;
 -	dd->verbs_dev.rdi.driver_f.get_guid_be = qib_get_guid_be;
 -	dd->verbs_dev.rdi.dparms.lkey_table_size = qib_lkey_table_size;
 -	dd->verbs_dev.rdi.dparms.qp_table_size = ib_qib_qp_table_size;
 -	dd->verbs_dev.rdi.dparms.qpn_start = 1;
 -	dd->verbs_dev.rdi.dparms.qpn_res_start = QIB_KD_QP;
 -	dd->verbs_dev.rdi.dparms.qpn_res_end = QIB_KD_QP; /* Reserve one QP */
 -	dd->verbs_dev.rdi.dparms.qpn_inc = 1;
 -	dd->verbs_dev.rdi.dparms.qos_shift = 1;
 -	dd->verbs_dev.rdi.dparms.psn_mask = QIB_PSN_MASK;
 -	dd->verbs_dev.rdi.dparms.psn_shift = QIB_PSN_SHIFT;
 -	dd->verbs_dev.rdi.dparms.psn_modify_mask = QIB_PSN_MASK;
 -	dd->verbs_dev.rdi.dparms.nports = dd->num_pports;
 -	dd->verbs_dev.rdi.dparms.npkeys = qib_get_npkeys(dd);
 -	dd->verbs_dev.rdi.dparms.node = dd->assigned_node_id;
 -	dd->verbs_dev.rdi.dparms.core_cap_flags = RDMA_CORE_PORT_IBA_IB;
 -	dd->verbs_dev.rdi.dparms.max_mad_size = IB_MGMT_MAD_SIZE;
 -
 -	snprintf(dd->verbs_dev.rdi.dparms.cq_name,
 -		 sizeof(dd->verbs_dev.rdi.dparms.cq_name),
 -		 "qib_cq%d", dd->unit);
 -
 -	qib_fill_device_attr(dd);
 -
 -	ppd = dd->pport;
 -	for (i = 0; i < dd->num_pports; i++, ppd++) {
 -		ctxt = ppd->hw_pidx;
 -		rvt_init_port(&dd->verbs_dev.rdi,
 -			      &ppd->ibport_data.rvp,
 -			      i,
 -			      dd->rcd[ctxt]->pkeys);
 -	}
  
  	ret = rvt_register_device(&dd->verbs_dev.rdi);
  	if (ret)
* Unmerged path drivers/infiniband/hw/qib/qib_verbs.c
