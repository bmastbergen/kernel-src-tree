s390/sclp: introduce check for SIE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [s390] sclp: introduce check for SIE (Hendrik Brueckner) [1310710]
Rebuild_FUZZ: 92.06%
commit-author David Hildenbrand <dahi@linux.vnet.ibm.com>
commit 8dfd523f8523779210038264259546299a8398e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8dfd523f.failed

This patch adds a way to check if the SIE with zArchitecture support is
available.

	Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>
	Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
	Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
(cherry picked from commit 8dfd523f8523779210038264259546299a8398e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/sclp.h
#	drivers/s390/char/sclp_early.c
diff --cc arch/s390/include/asm/sclp.h
index bc08744384f2,dea883f85d66..000000000000
--- a/arch/s390/include/asm/sclp.h
+++ b/arch/s390/include/asm/sclp.h
@@@ -26,9 -27,17 +26,21 @@@ struct sclp_ipl_info 
  	char loadparm[LOADPARM_LEN];
  };
  
 -struct sclp_core_entry {
 +struct sclp_cpu_entry {
  	u8 core_id;
++<<<<<<< HEAD
 +	u8 reserved0[13];
++=======
+ 	u8 reserved0;
+ 	u8 : 4;
+ 	u8 sief2 : 1;
+ 	u8 : 3;
+ 	u8 : 3;
+ 	u8 siif : 1;
+ 	u8 sigpif : 1;
+ 	u8 : 3;
+ 	u8 reserved2[10];
++>>>>>>> 8dfd523f8523 (s390/sclp: introduce check for SIE)
  	u8 type;
  	u8 reserved1;
  } __attribute__((packed));
@@@ -37,19 -46,35 +49,48 @@@ struct sclp_cpu_info 
  	unsigned int configured;
  	unsigned int standby;
  	unsigned int combined;
 -	struct sclp_core_entry core[SCLP_MAX_CORES];
 +	int has_cpu_type;
 +	struct sclp_cpu_entry cpu[MAX_CPU_ADDRESS + 1];
  };
  
++<<<<<<< HEAD
 +int sclp_get_cpu_info(struct sclp_cpu_info *info);
 +int sclp_cpu_configure(u8 cpu);
 +int sclp_cpu_deconfigure(u8 cpu);
 +unsigned long long sclp_get_rnmax(void);
 +unsigned long long sclp_get_rzm(void);
 +unsigned int sclp_get_max_cpu(void);
 +unsigned int sclp_get_mtid(u8 cpu_type);
 +unsigned int sclp_get_mtid_max(void);
 +unsigned int sclp_get_mtid_prev(void);
++=======
+ struct sclp_info {
+ 	unsigned char has_linemode : 1;
+ 	unsigned char has_vt220 : 1;
+ 	unsigned char has_siif : 1;
+ 	unsigned char has_sigpif : 1;
+ 	unsigned char has_core_type : 1;
+ 	unsigned char has_sprp : 1;
+ 	unsigned char has_hvs : 1;
+ 	unsigned char has_esca : 1;
+ 	unsigned char has_sief2 : 1;
+ 	unsigned int ibc;
+ 	unsigned int mtid;
+ 	unsigned int mtid_cp;
+ 	unsigned int mtid_prev;
+ 	unsigned long long rzm;
+ 	unsigned long long rnmax;
+ 	unsigned long long hamax;
+ 	unsigned int max_cores;
+ 	unsigned long hsa_size;
+ 	unsigned long long facilities;
+ };
+ extern struct sclp_info sclp;
+ 
+ int sclp_get_core_info(struct sclp_core_info *info);
+ int sclp_core_configure(u8 core);
+ int sclp_core_deconfigure(u8 core);
++>>>>>>> 8dfd523f8523 (s390/sclp: introduce check for SIE)
  int sclp_sdias_blk_count(void);
  int sclp_sdias_copy(void *dest, int blk_num, int nr_blks);
  int sclp_chp_configure(struct chp_id chpid);
diff --cc drivers/s390/char/sclp_early.c
index a422ece95de1,e0a1f4eec370..000000000000
--- a/drivers/s390/char/sclp_early.c
+++ b/drivers/s390/char/sclp_early.c
@@@ -118,11 -122,22 +118,26 @@@ static void __init sclp_facilities_dete
  
  	if (!sccb->hcpua) {
  		if (MACHINE_IS_VM)
 -			sclp.max_cores = 64;
 +			sclp_max_cpu = 64;
  		else
 -			sclp.max_cores = sccb->ncpurl;
 +			sclp_max_cpu = sccb->ncpurl;
  	} else {
++<<<<<<< HEAD
 +		sclp_max_cpu = sccb->hcpua + 1;
++=======
+ 		sclp.max_cores = sccb->hcpua + 1;
+ 	}
+ 
+ 	boot_cpu_address = stap();
+ 	cpue = (void *)sccb + sccb->cpuoff;
+ 	for (cpu = 0; cpu < sccb->ncpurl; cpue++, cpu++) {
+ 		if (boot_cpu_address != cpue->core_id)
+ 			continue;
+ 		sclp.has_siif = cpue->siif;
+ 		sclp.has_sigpif = cpue->sigpif;
+ 		sclp.has_sief2 = cpue->sief2;
+ 		break;
++>>>>>>> 8dfd523f8523 (s390/sclp: introduce check for SIE)
  	}
  
  	/* Save IPL information */
* Unmerged path arch/s390/include/asm/sclp.h
* Unmerged path drivers/s390/char/sclp_early.c
