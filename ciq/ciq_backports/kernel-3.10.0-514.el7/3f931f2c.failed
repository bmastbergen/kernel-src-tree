perf hists: Make hpp setup function generic

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 3f931f2c4274565fd6c6a642b16387358cbe6266
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3f931f2c.failed

Now that we have the 'equal' method implemented for hpp format entries
we can ease up the logic in the following functions and make them
generic wrt comparing format entries:

  perf_hpp__setup_output_field
  perf_hpp__append_sort_keys

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1453109064-1026-8-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 3f931f2c4274565fd6c6a642b16387358cbe6266)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/hist.c
diff --cc tools/perf/ui/hist.c
index cf6fa58d2ee7,b0fcaecb7d1d..000000000000
--- a/tools/perf/ui/hist.c
+++ b/tools/perf/ui/hist.c
@@@ -546,21 -551,11 +546,26 @@@ void perf_hpp__setup_output_field(void
  
  	/* append sort keys to output field */
  	perf_hpp__for_each_sort_list(fmt) {
- 		if (!list_empty(&fmt->list))
- 			continue;
+ 		struct perf_hpp_fmt *pos;
  
++<<<<<<< HEAD
 +		/*
 +		 * sort entry fields are dynamically created,
 +		 * so they can share a same sort key even though
 +		 * the list is empty.
 +		 */
 +		if (perf_hpp__is_sort_entry(fmt)) {
 +			struct perf_hpp_fmt *pos;
 +
 +			perf_hpp__for_each_format(pos) {
 +				if (perf_hpp__same_sort_entry(pos, fmt))
 +					goto next;
 +			}
++=======
+ 		perf_hpp__for_each_format(pos) {
+ 			if (fmt_equal(fmt, pos))
+ 				goto next;
++>>>>>>> 3f931f2c4274 (perf hists: Make hpp setup function generic)
  		}
  
  		perf_hpp__column_register(fmt);
@@@ -575,21 -570,11 +580,26 @@@ void perf_hpp__append_sort_keys(void
  
  	/* append output fields to sort keys */
  	perf_hpp__for_each_format(fmt) {
- 		if (!list_empty(&fmt->sort_list))
- 			continue;
+ 		struct perf_hpp_fmt *pos;
  
++<<<<<<< HEAD
 +		/*
 +		 * sort entry fields are dynamically created,
 +		 * so they can share a same sort key even though
 +		 * the list is empty.
 +		 */
 +		if (perf_hpp__is_sort_entry(fmt)) {
 +			struct perf_hpp_fmt *pos;
 +
 +			perf_hpp__for_each_sort_list(pos) {
 +				if (perf_hpp__same_sort_entry(pos, fmt))
 +					goto next;
 +			}
++=======
+ 		perf_hpp__for_each_sort_list(pos) {
+ 			if (fmt_equal(fmt, pos))
+ 				goto next;
++>>>>>>> 3f931f2c4274 (perf hists: Make hpp setup function generic)
  		}
  
  		perf_hpp__register_sort_field(fmt);
* Unmerged path tools/perf/ui/hist.c
