btrfs: Update out-of-date "skip parity stripe" comment

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Zhao Lei <zhaolei@cn.fujitsu.com>
commit 7955323bdcab307bd8b1d5ef7a031e4a3d059da3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7955323b.failed

Because btrfs support scrub raid56 parity stripe now.

	Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit 7955323bdcab307bd8b1d5ef7a031e4a3d059da3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/scrub.c
diff --cc fs/btrfs/scrub.c
index 4db3bafb3b51,6f913604799d..000000000000
--- a/fs/btrfs/scrub.c
+++ b/fs/btrfs/scrub.c
@@@ -3318,6 -3280,24 +3318,27 @@@ static noinline_for_stack int scrub_str
  			scrub_blocked_if_needed(fs_info);
  		}
  
++<<<<<<< HEAD
++=======
+ 		if (map->type & BTRFS_BLOCK_GROUP_RAID56_MASK) {
+ 			ret = get_raid56_logic_offset(physical, num, map,
+ 						      &logical,
+ 						      &stripe_logical);
+ 			logical += base;
+ 			if (ret) {
+ 				/* it is parity strip */
+ 				stripe_logical += base;
+ 				stripe_end = stripe_logical + increment;
+ 				ret = scrub_raid56_parity(sctx, map, scrub_dev,
+ 							  ppath, stripe_logical,
+ 							  stripe_end);
+ 				if (ret)
+ 					goto out;
+ 				goto skip;
+ 			}
+ 		}
+ 
++>>>>>>> 7955323bdcab (btrfs: Update out-of-date "skip parity stripe" comment)
  		if (btrfs_fs_incompat(fs_info, SKINNY_METADATA))
  			key.type = BTRFS_METADATA_ITEM_KEY;
  		else
* Unmerged path fs/btrfs/scrub.c
