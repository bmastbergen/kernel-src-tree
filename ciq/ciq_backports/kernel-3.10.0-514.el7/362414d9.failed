ACPI / tables: test the correct variable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [acpi] tables: test the correct variable (Prarit Bhargava) [1242556]
Rebuild_FUZZ: 90.41%
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 362414d9d2824ee0f4910a73e880860a90e75c3c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/362414d9.failed

The intent was to test "proc[i].handler" instead of "proc->handler".

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 362414d9d2824ee0f4910a73e880860a90e75c3c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/tables.c
diff --cc drivers/acpi/tables.c
index 30a9b1b13b27,6c0f0794aa82..000000000000
--- a/drivers/acpi/tables.c
+++ b/drivers/acpi/tables.c
@@@ -238,13 -262,21 +238,27 @@@ acpi_table_parse_entries(char *id
  
  	while (((unsigned long)entry) + sizeof(struct acpi_subtable_header) <
  	       table_end) {
 -		if (max_entries && count >= max_entries)
 -			break;
 +		if (entry->type == entry_id
 +		    && (!max_entries || count < max_entries)) {
 +			if (handler(entry, table_end))
 +				goto err;
  
++<<<<<<< HEAD
++=======
+ 		for (i = 0; i < proc_num; i++) {
+ 			if (entry->type != proc[i].id)
+ 				continue;
+ 			if (!proc[i].handler ||
+ 			     proc[i].handler(entry, table_end))
+ 				return -EINVAL;
+ 
+ 			proc->count++;
+ 			break;
+ 		}
+ 		if (i != proc_num)
++>>>>>>> 362414d9d282 (ACPI / tables: test the correct variable)
  			count++;
 +		}
  
  		/*
  		 * If entry->length is 0, break from this loop to avoid
* Unmerged path drivers/acpi/tables.c
