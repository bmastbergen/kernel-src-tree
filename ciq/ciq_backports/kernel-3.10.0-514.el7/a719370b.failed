xfs: factor DIO write mapping from get_blocks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit a719370be52d1152a5f6e19c4af3b73280e25475
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a719370b.failed

Clarify and separate the buffer mapping logic so that the direct IO mapping is
not tangled up in propagating the extent status to teh mapping buffer. This
makes it easier to extend the direct IO mapping to use an ioend in future.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit a719370be52d1152a5f6e19c4af3b73280e25475)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_aops.c
diff --cc fs/xfs/xfs_aops.c
index bb6024910e57,489ed200bbbb..000000000000
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@@ -1358,19 -1347,19 +1374,32 @@@ __xfs_get_blocks
  		goto out_unlock;
  	}
  
+ 	/*
+ 	 * For unwritten extents do not report a disk address in the buffered
+ 	 * read case (treat as if we're reading into a hole).
+ 	 */
  	if (imap.br_startblock != HOLESTARTBLOCK &&
++<<<<<<< HEAD
 +	    imap.br_startblock != DELAYSTARTBLOCK) {
 +		/*
 +		 * For unwritten extents do not report a disk address on
 +		 * the read case (treat as if we're reading into a hole).
 +		 */
 +		if (create || !ISUNWRITTEN(&imap))
 +			xfs_map_buffer(inode, bh_result, &imap, offset);
 +		if (create && ISUNWRITTEN(&imap)) {
 +			if (direct)
 +				bh_result->b_private = inode;
++=======
+ 	    imap.br_startblock != DELAYSTARTBLOCK &&
+ 	    (create || !ISUNWRITTEN(&imap))) {
+ 		xfs_map_buffer(inode, bh_result, &imap, offset);
+ 		if (ISUNWRITTEN(&imap))
++>>>>>>> a719370be52d (xfs: factor DIO write mapping from get_blocks)
  			set_buffer_unwritten(bh_result);
- 		}
+ 		/* direct IO needs special help */
+ 		if (create && direct)
+ 			xfs_map_direct(inode, bh_result, &imap, offset);
  	}
  
  	/*
* Unmerged path fs/xfs/xfs_aops.c
