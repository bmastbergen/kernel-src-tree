xprtrdma: Fix additional uses of spin_lock_irqsave(rb_lock)

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 9b06688bc3b9f13f8de90f832c455fddec3d4e8a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9b06688b.failed

Clean up.

rb_lock critical sections added in rpcrdma_ep_post_extra_recv()
should have first been converted to use normal spin_lock now that
the reply handler is a work queue.

The backchannel set up code should use the appropriate helper
instead of open-coding a rb_recv_bufs list add.

Problem introduced by glib patch re-ordering on my part.

Fixes: f531a5dbc451 ('xprtrdma: Pre-allocate backward rpc_rqst')
	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Tested-by: Devesh Sharma <devesh.sharma@avagotech.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 9b06688bc3b9f13f8de90f832c455fddec3d4e8a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/backchannel.c
#	net/sunrpc/xprtrdma/verbs.c
diff --cc net/sunrpc/xprtrdma/verbs.c
index 6115ededb593,003630733ef3..000000000000
--- a/net/sunrpc/xprtrdma/verbs.c
+++ b/net/sunrpc/xprtrdma/verbs.c
@@@ -1643,6 -1324,46 +1643,49 @@@ rpcrdma_ep_post_recv(struct rpcrdma_ia 
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * rpcrdma_ep_post_extra_recv - Post buffers for incoming backchannel requests
+  * @r_xprt: transport associated with these backchannel resources
+  * @min_reqs: minimum number of incoming requests expected
+  *
+  * Returns zero if all requested buffers were posted, or a negative errno.
+  */
+ int
+ rpcrdma_ep_post_extra_recv(struct rpcrdma_xprt *r_xprt, unsigned int count)
+ {
+ 	struct rpcrdma_buffer *buffers = &r_xprt->rx_buf;
+ 	struct rpcrdma_ia *ia = &r_xprt->rx_ia;
+ 	struct rpcrdma_ep *ep = &r_xprt->rx_ep;
+ 	struct rpcrdma_rep *rep;
+ 	int rc;
+ 
+ 	while (count--) {
+ 		spin_lock(&buffers->rb_lock);
+ 		if (list_empty(&buffers->rb_recv_bufs))
+ 			goto out_reqbuf;
+ 		rep = rpcrdma_buffer_get_rep_locked(buffers);
+ 		spin_unlock(&buffers->rb_lock);
+ 
+ 		rc = rpcrdma_ep_post_recv(ia, ep, rep);
+ 		if (rc)
+ 			goto out_rc;
+ 	}
+ 
+ 	return 0;
+ 
+ out_reqbuf:
+ 	spin_unlock(&buffers->rb_lock);
+ 	pr_warn("%s: no extra receive buffers\n", __func__);
+ 	return -ENOMEM;
+ 
+ out_rc:
+ 	rpcrdma_recv_buffer_put(rep);
+ 	return rc;
+ }
+ 
++>>>>>>> 9b06688bc3b9 (xprtrdma: Fix additional uses of spin_lock_irqsave(rb_lock))
  /* How many chunk list items fit within our inline buffers?
   */
  unsigned int
* Unmerged path net/sunrpc/xprtrdma/backchannel.c
* Unmerged path net/sunrpc/xprtrdma/backchannel.c
* Unmerged path net/sunrpc/xprtrdma/verbs.c
