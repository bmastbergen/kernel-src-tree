IB/rdmavt: Fix send scheduling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jubin John <jubin.john@intel.com>
commit e6d2e0176e1f3c1e1534851b66c0b972f03ff069
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e6d2e017.failed

call_send is used to determine whether to send immediately or schedule
a send for later. The current logic in rdmavt is inverted and has a
negative impact on the latency of the hfi1 and qib drivers. Fix this
regression by correctly calling send immediately when call_send is set.

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e6d2e0176e1f3c1e1534851b66c0b972f03ff069)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rdmavt/qp.c
diff --cc drivers/infiniband/sw/rdmavt/qp.c
index cac394777841,a9e3bcc522c4..000000000000
--- a/drivers/infiniband/sw/rdmavt/qp.c
+++ b/drivers/infiniband/sw/rdmavt/qp.c
@@@ -1551,11 -1634,13 +1551,21 @@@ int rvt_post_send(struct ib_qp *ibqp, s
  		nreq++;
  	}
  bail:
++<<<<<<< HEAD
 +	if (nreq && !call_send)
 +		rdi->driver_f.schedule_send(qp);
 +	spin_unlock_irqrestore(&qp->s_lock, flags);
 +	if (nreq && call_send)
 +		rdi->driver_f.do_send(qp);
++=======
+ 	spin_unlock_irqrestore(&qp->s_hlock, flags);
+ 	if (nreq) {
+ 		if (call_send)
+ 			rdi->driver_f.do_send(qp);
+ 		else
+ 			rdi->driver_f.schedule_send_no_lock(qp);
+ 	}
++>>>>>>> e6d2e0176e1f (IB/rdmavt: Fix send scheduling)
  	return err;
  }
  
* Unmerged path drivers/infiniband/sw/rdmavt/qp.c
