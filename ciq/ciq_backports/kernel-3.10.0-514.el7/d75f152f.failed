iommu, x86: Avoid migrating VT-d posted interrupts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] x86: Avoid migrating VT-d posted interrupts (Paolo Bonzini) [1301888]
Rebuild_FUZZ: 92.47%
commit-author Feng Wu <feng.wu@intel.com>
commit d75f152fc389cdd73a6c17f1247fce9052fd579c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d75f152f.failed

When the interrupt is configured in posted mode, the destination of
the interrupt is set in the Posted-Interrupts Descriptor and the
migration of these interrupts happens during vCPU scheduling.

We still update the cached irte, which will be used when changing back
to remapping mode, but we avoid writing the table entry as this would
overwrite the posted mode entry.

	Signed-off-by: Feng Wu <feng.wu@intel.com>
	Reviewed-by: Jiang Liu <jiang.liu@linux.intel.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: David Woodhouse <David.Woodhouse@intel.com>
	Acked-by: Joerg Roedel <joro@8bytes.org>
	Cc: iommu@lists.linux-foundation.org
	Cc: dwmw2@infradead.org
Link: http://lkml.kernel.org/r/1433827237-3382-7-git-send-email-feng.wu@intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit d75f152fc389cdd73a6c17f1247fce9052fd579c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel_irq_remapping.c
diff --cc drivers/iommu/intel_irq_remapping.c
index 085a116a8b0a,3bcb459905c4..000000000000
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@@ -1086,7 -1001,12 +1086,16 @@@ intel_ioapic_set_affinity(struct irq_da
  	 * Atomically updates the IRTE with the new destination, vector
  	 * and flushes the interrupt entry cache.
  	 */
++<<<<<<< HEAD
 +	modify_irte(irq, &irte);
++=======
+ 	irte->vector = cfg->vector;
+ 	irte->dest_id = IRTE_DEST(cfg->dest_apicid);
+ 
+ 	/* Update the hardware only if the interrupt is in remapped mode. */
+ 	if (ir_data->irq_2_iommu.mode == IRQ_REMAPPING)
+ 		modify_irte(&ir_data->irq_2_iommu, irte);
++>>>>>>> d75f152fc389 (iommu, x86: Avoid migrating VT-d posted interrupts)
  
  	/*
  	 * After this point, all the interrupts will start arriving
* Unmerged path drivers/iommu/intel_irq_remapping.c
