iommu: Fix bus notifier breakage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] Fix bus notifier breakage (Myron Stowe) [1279620]
Rebuild_FUZZ: 87.72%
commit-author Mark Salter <msalter@redhat.com>
commit fb3e306515ba6a012364b698b8ca71c337424ed3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fb3e3065.failed

iommu_bus_init() registers a bus notifier on the given bus by using
a statically defined notifier block:

  static struct notifier_block iommu_bus_nb = {
          .notifier_call = iommu_bus_notifier,
  };

This same notifier block is used for all busses. This causes a
problem for notifiers registered after iommu has registered this
callback on multiple busses. The problem is that a subsequent
notifier being registered on a bus which has this iommu notifier
will also get linked in to the notifier list of all other busses
which have this iommu notifier.

This patch fixes this by allocating the notifier_block at runtime.
Some error checking is also added to catch any allocation failure
or notifier registration error.

	Signed-off-by: Mark Salter <msalter@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit fb3e306515ba6a012364b698b8ca71c337424ed3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/iommu.c
diff --cc drivers/iommu/iommu.c
index d46818e4f66f,ed8b04867b1f..000000000000
--- a/drivers/iommu/iommu.c
+++ b/drivers/iommu/iommu.c
@@@ -794,14 -799,26 +794,37 @@@ static int iommu_bus_notifier(struct no
  	return 0;
  }
  
++<<<<<<< HEAD
 +static struct notifier_block iommu_bus_nb = {
 +	.notifier_call = iommu_bus_notifier,
 +};
 +
 +static void iommu_bus_init(struct bus_type *bus, struct iommu_ops *ops)
 +{
 +	bus_register_notifier(bus, &iommu_bus_nb);
 +	bus_for_each_dev(bus, NULL, ops, add_iommu_group);
++=======
+ static int iommu_bus_init(struct bus_type *bus, const struct iommu_ops *ops)
+ {
+ 	int err;
+ 	struct notifier_block *nb;
+ 	struct iommu_callback_data cb = {
+ 		.ops = ops,
+ 	};
+ 
+ 	nb = kzalloc(sizeof(struct notifier_block), GFP_KERNEL);
+ 	if (!nb)
+ 		return -ENOMEM;
+ 
+ 	nb->notifier_call = iommu_bus_notifier;
+ 
+ 	err = bus_register_notifier(bus, nb);
+ 	if (err) {
+ 		kfree(nb);
+ 		return err;
+ 	}
+ 	return bus_for_each_dev(bus, NULL, &cb, add_iommu_group);
++>>>>>>> fb3e306515ba (iommu: Fix bus notifier breakage)
  }
  
  /**
* Unmerged path drivers/iommu/iommu.c
