cxgb4: Differentiates between TIDs being used in TCAM and HASH

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit 9a1bb9f64e31febbcf289809343bc7bbbac15519
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9a1bb9f6.failed

For the tid info, differentiate from which region the TID is allocated
from. It can be from TCAM region or HASH region.

	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9a1bb9f64e31febbcf289809343bc7bbbac15519)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
index 83c5d48c7f6b,365ebd5dfb46..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
@@@ -2520,7 -2719,28 +2520,16 @@@
  #define REV_V(x) ((x) << REV_S)
  #define REV_G(x) (((x) >> REV_S) & REV_M)
  
 -#define T6_UNKNOWNCMD_S    3
 -#define T6_UNKNOWNCMD_V(x) ((x) << T6_UNKNOWNCMD_S)
 -#define T6_UNKNOWNCMD_F    T6_UNKNOWNCMD_V(1U)
 -
 -#define T6_LIP0_S    2
 -#define T6_LIP0_V(x) ((x) << T6_LIP0_S)
 -#define T6_LIP0_F    T6_LIP0_V(1U)
 -
 -#define T6_LIPMISS_S    1
 -#define T6_LIPMISS_V(x) ((x) << T6_LIPMISS_S)
 -#define T6_LIPMISS_F    T6_LIPMISS_V(1U)
 -
 -#define LE_DB_CONFIG_A 0x19c04
 -#define LE_DB_HASH_TID_BASE_A 0x19c30
 -#define LE_DB_HASH_TBL_BASE_ADDR_A 0x19c30
  #define LE_DB_INT_CAUSE_A 0x19c3c
++<<<<<<< HEAD
++=======
+ #define LE_DB_TID_HASHBASE_A 0x19df8
+ #define T6_LE_DB_HASH_TID_BASE_A 0x19df8
+ 
+ #define HASHEN_S    20
+ #define HASHEN_V(x) ((x) << HASHEN_S)
+ #define HASHEN_F    HASHEN_V(1U)
++>>>>>>> 9a1bb9f64e31 (cxgb4: Differentiates between TIDs being used in TCAM and HASH)
  
  #define REQQPARERR_S    16
  #define REQQPARERR_V(x) ((x) << REQQPARERR_S)
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index ca7b3dbfb7cc..1448d0d884c7 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@ -1647,20 +1647,25 @@ static void process_tid_release_list(struct work_struct *work)
  */
 void cxgb4_remove_tid(struct tid_info *t, unsigned int chan, unsigned int tid)
 {
-	void *old;
 	struct sk_buff *skb;
 	struct adapter *adap = container_of(t, struct adapter, tids);
 
-	old = t->tid_tab[tid];
+	WARN_ON(tid >= t->ntids);
+
+	if (t->tid_tab[tid]) {
+		t->tid_tab[tid] = NULL;
+		if (t->hash_base && (tid >= t->hash_base))
+			atomic_dec(&t->hash_tids_in_use);
+		else
+			atomic_dec(&t->tids_in_use);
+	}
+
 	skb = alloc_skb(sizeof(struct cpl_tid_release), GFP_ATOMIC);
 	if (likely(skb)) {
-		t->tid_tab[tid] = NULL;
 		mk_tid_release(skb, chan, tid);
 		t4_ofld_send(adap, skb);
 	} else
 		cxgb4_queue_tid_release(t, chan, tid);
-	if (old)
-		atomic_dec(&t->tids_in_use);
 }
 EXPORT_SYMBOL(cxgb4_remove_tid);
 
@@ -1698,6 +1703,7 @@ static int tid_init(struct tid_info *t)
 	t->afree = NULL;
 	t->atids_in_use = 0;
 	atomic_set(&t->tids_in_use, 0);
+	atomic_set(&t->hash_tids_in_use, 0);
 
 	/* Setup the free list for atid_tab and clear the stid bitmap. */
 	if (natids) {
@@ -4748,6 +4754,22 @@ static int init_one(struct pci_dev *pdev, const struct pci_device_id *ent)
 		adapter->params.offload = 0;
 	}
 
+	if (is_offload(adapter)) {
+		if (t4_read_reg(adapter, LE_DB_CONFIG_A) & HASHEN_F) {
+			u32 hash_base, hash_reg;
+
+			if (chip <= CHELSIO_T5) {
+				hash_reg = LE_DB_TID_HASHBASE_A;
+				hash_base = t4_read_reg(adapter, hash_reg);
+				adapter->tids.hash_base = hash_base / 4;
+			} else {
+				hash_reg = T6_LE_DB_HASH_TID_BASE_A;
+				hash_base = t4_read_reg(adapter, hash_reg);
+				adapter->tids.hash_base = hash_base;
+			}
+		}
+	}
+
 	/* See what interrupts we'll be using */
 	if (msi > 1 && enable_msix(adapter) == 0)
 		adapter->flags |= USING_MSIX;
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h
index 14e8110b5dbb..388e80444d34 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_uld.h
@@ -96,6 +96,7 @@ struct tid_info {
 	unsigned long *stid_bmap;
 	unsigned int nstids;
 	unsigned int stid_base;
+	unsigned int hash_base;
 
 	union aopen_entry *atid_tab;
 	unsigned int natids;
@@ -117,7 +118,10 @@ struct tid_info {
 	spinlock_t stid_lock;
 	unsigned int stids_in_use;
 
+	/* TIDs in the TCAM */
 	atomic_t tids_in_use;
+	/* TIDs in the HASH */
+	atomic_t hash_tids_in_use;
 };
 
 static inline void *lookup_tid(const struct tid_info *t, unsigned int tid)
@@ -147,7 +151,10 @@ static inline void cxgb4_insert_tid(struct tid_info *t, void *data,
 				    unsigned int tid)
 {
 	t->tid_tab[tid] = data;
-	atomic_inc(&t->tids_in_use);
+	if (t->hash_base && (tid >= t->hash_base))
+		atomic_inc(&t->hash_tids_in_use);
+	else
+		atomic_inc(&t->tids_in_use);
 }
 
 int cxgb4_alloc_atid(struct tid_info *t, void *data);
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_regs.h
