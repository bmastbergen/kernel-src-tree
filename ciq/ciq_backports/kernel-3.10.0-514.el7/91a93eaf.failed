crypto: qat - remove to call get_sram_bar_id for qat_c3xxx

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [crypto] qat - remove to call get_sram_bar_id for qat_c3xxx (Neil Horman) [1274179]
Rebuild_FUZZ: 92.59%
commit-author Pingchao Yang <pingchao.yang@intel.com>
commit 91a93eafea3310e7e4ab482327d34b68ad7bfdaa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/91a93eaf.failed

	Reported-by : Struk, Tadeusz <tadeusz.struk@intel.com>
	Signed-off-by: Yang Pingchao <pingchao.yang@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 91a93eafea3310e7e4ab482327d34b68ad7bfdaa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/qat_hal.c
diff --cc drivers/crypto/qat/qat_common/qat_hal.c
index 1c6bd0783bb0,77045abb2f22..000000000000
--- a/drivers/crypto/qat/qat_common/qat_hal.c
+++ b/drivers/crypto/qat/qat_common/qat_hal.c
@@@ -688,15 -699,26 +687,38 @@@ int qat_hal_init(struct adf_accel_dev *
  	if (!handle)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	handle->hal_cap_g_ctl_csr_addr_v = misc_bar->virt_addr +
 +						ICP_DH895XCC_CAP_OFFSET;
 +	handle->hal_cap_ae_xfer_csr_addr_v = misc_bar->virt_addr +
 +						ICP_DH895XCC_AE_OFFSET;
 +	handle->hal_ep_csr_addr_v = misc_bar->virt_addr +
 +				    ICP_DH895XCC_EP_OFFSET;
 +	handle->hal_cap_ae_local_csr_addr_v =
 +		handle->hal_cap_ae_xfer_csr_addr_v + LOCAL_TO_XFER_REG_OFFSET;
 +	handle->hal_sram_addr_v = sram_bar->virt_addr;
++=======
+ 	handle->hal_cap_g_ctl_csr_addr_v =
+ 		(void __iomem *)((uintptr_t)misc_bar->virt_addr +
+ 				 ICP_QAT_CAP_OFFSET);
+ 	handle->hal_cap_ae_xfer_csr_addr_v =
+ 		(void __iomem *)((uintptr_t)misc_bar->virt_addr +
+ 				 ICP_QAT_AE_OFFSET);
+ 	handle->hal_ep_csr_addr_v =
+ 		(void __iomem *)((uintptr_t)misc_bar->virt_addr +
+ 				 ICP_QAT_EP_OFFSET);
+ 	handle->hal_cap_ae_local_csr_addr_v =
+ 		(void __iomem *)((uintptr_t)handle->hal_cap_ae_xfer_csr_addr_v +
+ 				 LOCAL_TO_XFER_REG_OFFSET);
+ 	handle->pci_dev = pci_info->pci_dev;
+ 	if (handle->pci_dev->device != ADF_C3XXX_PCI_DEVICE_ID) {
+ 		sram_bar =
+ 			&pci_info->pci_bars[hw_data->get_sram_bar_id(hw_data)];
+ 		handle->hal_sram_addr_v = sram_bar->virt_addr;
+ 	}
+ 	handle->fw_auth = (handle->pci_dev->device ==
+ 			   ADF_DH895XCC_PCI_DEVICE_ID) ? false : true;
++>>>>>>> 91a93eafea33 (crypto: qat - remove to call get_sram_bar_id for qat_c3xxx)
  	handle->hal_handle = kzalloc(sizeof(*handle->hal_handle), GFP_KERNEL);
  	if (!handle->hal_handle)
  		goto out_hal_handle;
* Unmerged path drivers/crypto/qat/qat_common/qat_hal.c
