HID: i2c-hid: Call device suspend callback before disabling irq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hid] i2c-hid: Call device suspend callback before disabling irq (David Arcari) [1361625]
Rebuild_FUZZ: 95.87%
commit-author Gabriele Mazzotta <gabriele.mzt@gmail.com>
commit af4739c281621017a8a84dd6ba3471bba2dd6c6a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/af4739c2.failed

i2c-hid takes care of requesting and handling IRQs for HID devices
which in turns might expect them to be always active when working
in normal conditions. Hence, disabling IRQs before calling the suspend
callbacks can potentially cause problems since device drivers might
try to perform operations needing them.

Fix this by disabling IRQs only after the suspend callbacks had been
executed.

	Signed-off-by: Gabriele Mazzotta <gabriele.mzt@gmail.com>
	Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.com>
(cherry picked from commit af4739c281621017a8a84dd6ba3471bba2dd6c6a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/i2c-hid/i2c-hid.c
diff --cc drivers/hid/i2c-hid/i2c-hid.c
index 9c64e1db9067,9ed69b5121f7..000000000000
--- a/drivers/hid/i2c-hid/i2c-hid.c
+++ b/drivers/hid/i2c-hid/i2c-hid.c
@@@ -1059,13 -1092,13 +1059,17 @@@ static int i2c_hid_suspend(struct devic
  	struct hid_device *hid = ihid->hid;
  	int ret = 0;
  
++<<<<<<< HEAD
 +	disable_irq(client->irq);
- 	if (device_may_wakeup(&client->dev))
- 		enable_irq_wake(client->irq);
- 
++=======
  	if (hid->driver && hid->driver->suspend)
  		ret = hid->driver->suspend(hid, PMSG_SUSPEND);
  
+ 	disable_irq(ihid->irq);
++>>>>>>> af4739c28162 (HID: i2c-hid: Call device suspend callback before disabling irq)
+ 	if (device_may_wakeup(&client->dev))
 -		enable_irq_wake(ihid->irq);
++		enable_irq_wake(client->irq);
+ 
  	/* Save some power */
  	i2c_hid_set_power(client, I2C_HID_PWR_SLEEP);
  
* Unmerged path drivers/hid/i2c-hid/i2c-hid.c
