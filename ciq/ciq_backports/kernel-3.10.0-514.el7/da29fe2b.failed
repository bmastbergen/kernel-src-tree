mmc: tmio: add actual clock support as option

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Shinobu Uehara <shinobu.uehara.xc@renesas.com>
commit da29fe2bf573f0ae56fdc2e790387cb73fc8c6f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/da29fe2b.failed

Some controller is supporting actual clock on SD_CLK_CTRL :: DIV[7:0].
Renesas SH-Mobile SDHI doesn't support,
but, Renesas R-Car SDHI supports it.
This patch adds new TMIO_MMC_CLK_ACTUAL flag for it.

[Kuninori Morimoto: tidyuped for upstreaming]

	Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
	Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
	Signed-off-by: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit da29fe2bf573f0ae56fdc2e790387cb73fc8c6f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mobile_sdhi.c
#	drivers/mmc/host/tmio_mmc_pio.c
#	include/linux/mfd/tmio.h
diff --cc drivers/mmc/host/sh_mobile_sdhi.c
index 79ee6f0c45bd,d5d493719491..000000000000
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@@ -43,6 -48,34 +43,37 @@@ static const struct sh_mobile_sdhi_of_d
  	},
  };
  
++<<<<<<< HEAD
++=======
+ static const struct sh_mobile_sdhi_of_data of_rcar_gen1_compatible = {
+ 	.tmio_flags	= TMIO_MMC_HAS_IDLE_WAIT | TMIO_MMC_WRPROTECT_DISABLE |
+ 			  TMIO_MMC_CLK_ACTUAL,
+ 	.capabilities	= MMC_CAP_SD_HIGHSPEED | MMC_CAP_SDIO_IRQ,
+ };
+ 
+ static const struct sh_mobile_sdhi_of_data of_rcar_gen2_compatible = {
+ 	.tmio_flags	= TMIO_MMC_HAS_IDLE_WAIT | TMIO_MMC_WRPROTECT_DISABLE |
+ 			  TMIO_MMC_CLK_ACTUAL,
+ 	.capabilities	= MMC_CAP_SD_HIGHSPEED | MMC_CAP_SDIO_IRQ,
+ 	.capabilities2	= MMC_CAP2_NO_MULTI_READ,
+ 	.dma_rx_offset	= 0x2000,
+ };
+ 
+ static const struct of_device_id sh_mobile_sdhi_of_match[] = {
+ 	{ .compatible = "renesas,sdhi-shmobile" },
+ 	{ .compatible = "renesas,sdhi-sh7372" },
+ 	{ .compatible = "renesas,sdhi-sh73a0", .data = &sh_mobile_sdhi_of_cfg[0], },
+ 	{ .compatible = "renesas,sdhi-r8a73a4", .data = &sh_mobile_sdhi_of_cfg[0], },
+ 	{ .compatible = "renesas,sdhi-r8a7740", .data = &sh_mobile_sdhi_of_cfg[0], },
+ 	{ .compatible = "renesas,sdhi-r8a7778", .data = &of_rcar_gen1_compatible, },
+ 	{ .compatible = "renesas,sdhi-r8a7779", .data = &of_rcar_gen1_compatible, },
+ 	{ .compatible = "renesas,sdhi-r8a7790", .data = &of_rcar_gen2_compatible, },
+ 	{ .compatible = "renesas,sdhi-r8a7791", .data = &of_rcar_gen2_compatible, },
+ 	{},
+ };
+ MODULE_DEVICE_TABLE(of, sh_mobile_sdhi_of_match);
+ 
++>>>>>>> da29fe2bf573 (mmc: tmio: add actual clock support as option)
  struct sh_mobile_sdhi {
  	struct clk *clk;
  	struct tmio_mmc_data mmc_data;
diff --cc drivers/mmc/host/tmio_mmc_pio.c
index ff722d753e2f,ba454131f9a8..000000000000
--- a/drivers/mmc/host/tmio_mmc_pio.c
+++ b/drivers/mmc/host/tmio_mmc_pio.c
@@@ -149,7 -159,11 +149,15 @@@ static void tmio_mmc_set_clock(struct t
  		for (clock = host->mmc->f_min, clk = 0x80000080;
  			new_clock >= (clock<<1); clk >>= 1)
  			clock <<= 1;
++<<<<<<< HEAD
 +		clk |= 0x100;
++=======
+ 
+ 		/* 1/1 clock is option */
+ 		if ((host->pdata->flags & TMIO_MMC_CLK_ACTUAL) &&
+ 		    ((clk >> 22) & 0x1))
+ 			clk |= 0xff;
++>>>>>>> da29fe2bf573 (mmc: tmio: add actual clock support as option)
  	}
  
  	if (host->set_clk_div)
diff --cc include/linux/mfd/tmio.h
index b22883d60500,90436d523e5e..000000000000
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@@ -76,6 -76,34 +76,37 @@@
   */
  #define TMIO_MMC_USE_GPIO_CD		(1 << 5)
  
++<<<<<<< HEAD
++=======
+ /*
+  * Some controllers doesn't have over 0x100 register.
+  * it is used to checking accessibility of
+  * CTL_SD_CARD_CLK_CTL / CTL_CLK_AND_WAIT_CTL
+  */
+ #define TMIO_MMC_HAVE_HIGH_REG		(1 << 6)
+ 
+ /*
+  * Some controllers have CMD12 automatically
+  * issue/non-issue register
+  */
+ #define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
+ 
+ /*
+  * Some controllers needs to set 1 on SDIO status reserved bits
+  */
+ #define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
+ 
+ /*
+  * Some controllers have DMA enable/disable register
+  */
+ #define TMIO_MMC_HAVE_CTL_DMA_REG	(1 << 9)
+ 
+ /*
+  * Some controllers allows to set SDx actual clock
+  */
+ #define TMIO_MMC_CLK_ACTUAL		(1 << 10)
+ 
++>>>>>>> da29fe2bf573 (mmc: tmio: add actual clock support as option)
  int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
  int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
  void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
* Unmerged path drivers/mmc/host/sh_mobile_sdhi.c
* Unmerged path drivers/mmc/host/tmio_mmc_pio.c
* Unmerged path include/linux/mfd/tmio.h
