IB/qib: Use rdmavt protection domain

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dennis Dalessandro <dennis.dalessandro@intel.com>
commit f44728d69a8ac8552fe3f0c8aa898014fa6f3b9c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f44728d6.failed

Remove protection domain datastructure from qib and use rdmavts version.

	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit f44728d69a8ac8552fe3f0c8aa898014fa6f3b9c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/qib/qib_keys.c
#	drivers/infiniband/hw/qib/qib_verbs.c
diff --cc drivers/infiniband/hw/qib/qib_keys.c
index eabe54738be6,04fa272c723d..000000000000
--- a/drivers/infiniband/hw/qib/qib_keys.c
+++ b/drivers/infiniband/hw/qib/qib_keys.c
@@@ -336,14 -336,15 +336,21 @@@ bail
  }
  
  /*
 - * Initialize the memory region specified by the work request.
 + * Initialize the memory region specified by the work reqeust.
   */
 -int qib_reg_mr(struct qib_qp *qp, struct ib_reg_wr *wr)
 +int qib_fast_reg_mr(struct qib_qp *qp, struct ib_send_wr *wr)
  {
  	struct qib_lkey_table *rkt = &to_idev(qp->ibqp.device)->lk_table;
++<<<<<<< HEAD
 +	struct qib_pd *pd = to_ipd(qp->ibqp.pd);
 +	struct qib_mregion *mr;
 +	u32 rkey = wr->wr.fast_reg.rkey;
++=======
+ 	struct rvt_pd *pd = ibpd_to_rvtpd(qp->ibqp.pd);
+ 	struct qib_mr *mr = to_imr(wr->mr);
+ 	struct qib_mregion *mrg;
+ 	u32 key = wr->key;
++>>>>>>> f44728d69a8a (IB/qib: Use rdmavt protection domain)
  	unsigned i, n, m;
  	int ret = -EINVAL;
  	unsigned long flags;
diff --cc drivers/infiniband/hw/qib/qib_verbs.c
index e20fab64f777,c742b0dc4782..000000000000
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@@ -346,7 -346,8 +346,12 @@@ static int qib_post_one_send(struct qib
  	int ret;
  	unsigned long flags;
  	struct qib_lkey_table *rkt;
++<<<<<<< HEAD
 +	struct qib_pd *pd;
++=======
+ 	struct rvt_pd *pd;
+ 	int avoid_schedule = 0;
++>>>>>>> f44728d69a8a (IB/qib: Use rdmavt protection domain)
  
  	spin_lock_irqsave(&qp->s_lock, flags);
  
@@@ -396,9 -397,25 +401,9 @@@
  	}
  
  	rkt = &to_idev(qp->ibqp.device)->lk_table;
- 	pd = to_ipd(qp->ibqp.pd);
+ 	pd = ibpd_to_rvtpd(qp->ibqp.pd);
  	wqe = get_swqe_ptr(qp, qp->s_head);
 -
 -	if (qp->ibqp.qp_type != IB_QPT_UC &&
 -	    qp->ibqp.qp_type != IB_QPT_RC)
 -		memcpy(&wqe->ud_wr, ud_wr(wr), sizeof(wqe->ud_wr));
 -	else if (wr->opcode == IB_WR_REG_MR)
 -		memcpy(&wqe->reg_wr, reg_wr(wr),
 -			sizeof(wqe->reg_wr));
 -	else if (wr->opcode == IB_WR_RDMA_WRITE_WITH_IMM ||
 -		 wr->opcode == IB_WR_RDMA_WRITE ||
 -		 wr->opcode == IB_WR_RDMA_READ)
 -		memcpy(&wqe->rdma_wr, rdma_wr(wr), sizeof(wqe->rdma_wr));
 -	else if (wr->opcode == IB_WR_ATOMIC_CMP_AND_SWP ||
 -		 wr->opcode == IB_WR_ATOMIC_FETCH_AND_ADD)
 -		memcpy(&wqe->atomic_wr, atomic_wr(wr), sizeof(wqe->atomic_wr));
 -	else
 -		memcpy(&wqe->wr, wr, sizeof(wqe->wr));
 -
 +	wqe->wr = *wr;
  	wqe->length = 0;
  	j = 0;
  	if (wr->num_sge) {
* Unmerged path drivers/infiniband/hw/qib/qib_keys.c
diff --git a/drivers/infiniband/hw/qib/qib_mr.c b/drivers/infiniband/hw/qib/qib_mr.c
index 19220dcb9a3b..fdb2ae45ea32 100644
--- a/drivers/infiniband/hw/qib/qib_mr.c
+++ b/drivers/infiniband/hw/qib/qib_mr.c
@@ -99,7 +99,7 @@ struct ib_mr *qib_get_dma_mr(struct ib_pd *pd, int acc)
 	struct ib_mr *ret;
 	int rval;
 
-	if (to_ipd(pd)->user) {
+	if (ibpd_to_rvtpd(pd)->user) {
 		ret = ERR_PTR(-EPERM);
 		goto bail;
 	}
diff --git a/drivers/infiniband/hw/qib/qib_ruc.c b/drivers/infiniband/hw/qib/qib_ruc.c
index 22e356ca8058..24f0d1ddffd6 100644
--- a/drivers/infiniband/hw/qib/qib_ruc.c
+++ b/drivers/infiniband/hw/qib/qib_ruc.c
@@ -84,11 +84,11 @@ static int qib_init_sge(struct qib_qp *qp, struct qib_rwqe *wqe)
 	int i, j, ret;
 	struct ib_wc wc;
 	struct qib_lkey_table *rkt;
-	struct qib_pd *pd;
+	struct rvt_pd *pd;
 	struct qib_sge_state *ss;
 
 	rkt = &to_idev(qp->ibqp.device)->lk_table;
-	pd = to_ipd(qp->ibqp.srq ? qp->ibqp.srq->pd : qp->ibqp.pd);
+	pd = ibpd_to_rvtpd(qp->ibqp.srq ? qp->ibqp.srq->pd : qp->ibqp.pd);
 	ss = &qp->r_sge;
 	ss->sg_list = qp->r_sg_list;
 	qp->r_len = 0;
* Unmerged path drivers/infiniband/hw/qib/qib_verbs.c
diff --git a/drivers/infiniband/hw/qib/qib_verbs.h b/drivers/infiniband/hw/qib/qib_verbs.h
index cac2c3f2734f..d7c3ba101a76 100644
--- a/drivers/infiniband/hw/qib/qib_verbs.h
+++ b/drivers/infiniband/hw/qib/qib_verbs.h
@@ -222,12 +222,6 @@ struct qib_mcast {
 	int n_attached;
 };
 
-/* Protection domain */
-struct qib_pd {
-	struct ib_pd ibpd;
-	int user;               /* non-zero if created from user space */
-};
-
 /* Address Handle */
 struct qib_ah {
 	struct ib_ah ibah;
@@ -811,11 +805,6 @@ static inline struct qib_mr *to_imr(struct ib_mr *ibmr)
 	return container_of(ibmr, struct qib_mr, ibmr);
 }
 
-static inline struct qib_pd *to_ipd(struct ib_pd *ibpd)
-{
-	return container_of(ibpd, struct qib_pd, ibpd);
-}
-
 static inline struct qib_ah *to_iah(struct ib_ah *ibah)
 {
 	return container_of(ibah, struct qib_ah, ibah);
@@ -986,7 +975,7 @@ int qib_alloc_lkey(struct qib_mregion *mr, int dma_region);
 
 void qib_free_lkey(struct qib_mregion *mr);
 
-int qib_lkey_ok(struct qib_lkey_table *rkt, struct qib_pd *pd,
+int qib_lkey_ok(struct qib_lkey_table *rkt, struct rvt_pd *pd,
 		struct qib_sge *isge, struct ib_sge *sge, int acc);
 
 int qib_rkey_ok(struct qib_qp *qp, struct qib_sge *sge,
