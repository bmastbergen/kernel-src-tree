i40e: Add VF promiscuous mode driver support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Anjali Singhai Jain <anjali.singhai@intel.com>
commit 5676a8b9cd9a1c9822cdb3d88109f449eb2126c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5676a8b9.failed

Add infrastructure for Network Function Virtualization VLAN tagged
packet steering feature.

Change-Id: I9b873d8fcc253858e6baba65ac68ec5b9363944e
	Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
	Signed-off-by: Greg Rose <gregory.v.rose@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 5676a8b9cd9a1c9822cdb3d88109f449eb2126c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
index d901afb6a12a,f47b0e8d02bb..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
@@@ -1738,10 -2037,22 +1857,25 @@@ static int i40e_vc_add_vlan_msg(struct 
  	for (i = 0; i < vfl->num_elements; i++) {
  		/* add new VLAN filter */
  		int ret = i40e_vsi_add_vlan(vsi, vfl->vlan_id[i]);
++<<<<<<< HEAD
++=======
+ 
+ 		if (test_bit(I40E_VF_STAT_UC_PROMISC, &vf->vf_states))
+ 			i40e_aq_set_vsi_uc_promisc_on_vlan(&pf->hw, vsi->seid,
+ 							   true,
+ 							   vfl->vlan_id[i],
+ 							   NULL);
+ 		if (test_bit(I40E_VF_STAT_MC_PROMISC, &vf->vf_states))
+ 			i40e_aq_set_vsi_mc_promisc_on_vlan(&pf->hw, vsi->seid,
+ 							   true,
+ 							   vfl->vlan_id[i],
+ 							   NULL);
+ 
++>>>>>>> 5676a8b9cd9a (i40e: Add VF promiscuous mode driver support)
  		if (ret)
  			dev_err(&pf->pdev->dev,
 -				"Unable to add VLAN filter %d for VF %d, error %d\n",
 -				vfl->vlan_id[i], vf->vf_id, ret);
 +				"Unable to add VF vlan filter %d, error %d\n",
 +				vfl->vlan_id[i], ret);
  	}
  
  error_param:
@@@ -1789,10 -2100,22 +1923,25 @@@ static int i40e_vc_remove_vlan_msg(stru
  
  	for (i = 0; i < vfl->num_elements; i++) {
  		int ret = i40e_vsi_kill_vlan(vsi, vfl->vlan_id[i]);
++<<<<<<< HEAD
++=======
+ 
+ 		if (test_bit(I40E_VF_STAT_UC_PROMISC, &vf->vf_states))
+ 			i40e_aq_set_vsi_uc_promisc_on_vlan(&pf->hw, vsi->seid,
+ 							   false,
+ 							   vfl->vlan_id[i],
+ 							   NULL);
+ 		if (test_bit(I40E_VF_STAT_MC_PROMISC, &vf->vf_states))
+ 			i40e_aq_set_vsi_mc_promisc_on_vlan(&pf->hw, vsi->seid,
+ 							   false,
+ 							   vfl->vlan_id[i],
+ 							   NULL);
+ 
++>>>>>>> 5676a8b9cd9a (i40e: Add VF promiscuous mode driver support)
  		if (ret)
  			dev_err(&pf->pdev->dev,
 -				"Unable to delete VLAN filter %d for VF %d, error %d\n",
 -				vfl->vlan_id[i], vf->vf_id, ret);
 +				"Unable to delete VF vlan filter %d, error %d\n",
 +				vfl->vlan_id[i], ret);
  	}
  
  error_param:
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
diff --git a/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.h b/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.h
index 0e0c46595393..4b653c4dfc51 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.h
@@ -60,6 +60,8 @@ enum i40e_vf_states {
 	I40E_VF_STAT_ACTIVE,
 	I40E_VF_STAT_FCOEENA,
 	I40E_VF_STAT_DISABLED,
+	I40E_VF_STAT_MC_PROMISC,
+	I40E_VF_STAT_UC_PROMISC,
 };
 
 /* VF capabilities */
