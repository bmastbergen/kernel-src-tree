SUNRPC: Fix a thinko in xs_connect()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 99b1a4c32ad22024ac6198a4337aaec5ea23168f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/99b1a4c3.failed

It is rather pointless to test the value of transport->inet after
calling xs_reset_transport(), since it will always be zero, and
so we will never see any exponential back off behaviour.
Also don't force early connections for SOFTCONN tasks. If the server
disconnects us, we should respect the exponential backoff.

	Cc: stable@vger.kernel.org # 4.0+
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 99b1a4c32ad22024ac6198a4337aaec5ea23168f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtsock.c
diff --cc net/sunrpc/xprtsock.c
index 02bf197066f8,86ed778bb18b..000000000000
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@@ -2373,7 -2279,7 +2373,11 @@@ static void xs_connect(struct rpc_xprt 
  
  	WARN_ON_ONCE(!xprt_lock_connect(xprt, task, transport));
  
++<<<<<<< HEAD
 +	if (transport->sock != NULL && !RPC_IS_SOFTCONN(task)) {
++=======
+ 	if (transport->sock != NULL) {
++>>>>>>> 99b1a4c32ad2 (SUNRPC: Fix a thinko in xs_connect())
  		dprintk("RPC:       xs_connect delayed xprt %p for %lu "
  				"seconds\n",
  				xprt, xprt->reestablish_timeout / HZ);
* Unmerged path net/sunrpc/xprtsock.c
