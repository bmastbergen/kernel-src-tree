ovl: xattr filter fix

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit b581755b1c565391c72d03b157ba2dd0b18e9d15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b581755b.failed

a) ovl_need_xattr_filter() is wrong, we can have multiple lower layers
overlaid, all of which (except the lowest one) honouring the
"trusted.overlay.opaque" xattr.  So need to filter everything except the
bottom and the pure-upper layer.

b) we no longer can assume that inode is attached to dentry in
get/setxattr.

This patch unconditionally filters private xattrs to fix both of the above.
Performance impact for get/removexattrs is likely in the noise.

For listxattrs it might be measurable in pathological cases, but I very
much hope nobody cares.  If they do, we'll fix it then.

	Reported-by: Vivek Goyal <vgoyal@redhat.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
Fixes: b96809173e94 ("security_d_instantiate(): move to the point prior to attaching dentry to inode")
(cherry picked from commit b581755b1c565391c72d03b157ba2dd0b18e9d15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/inode.c
diff --cc fs/overlayfs/inode.c
index fadb018e83fe,1dbeab6cf96e..000000000000
--- a/fs/overlayfs/inode.c
+++ b/fs/overlayfs/inode.c
@@@ -259,25 -238,15 +259,29 @@@ out
  	return err;
  }
  
++<<<<<<< HEAD
 +static bool ovl_need_xattr_filter(struct dentry *dentry,
 +				  enum ovl_path_type type)
 +{
 +	if ((type & (__OVL_PATH_PURE | __OVL_PATH_UPPER)) == __OVL_PATH_UPPER)
 +		return S_ISDIR(dentry->d_inode->i_mode);
 +	else
 +		return false;
 +}
 +
 +ssize_t ovl_getxattr(struct dentry *dentry, const char *name,
 +		     void *value, size_t size)
++=======
+ ssize_t ovl_getxattr(struct dentry *dentry, struct inode *inode,
+ 		     const char *name, void *value, size_t size)
++>>>>>>> b581755b1c56 (ovl: xattr filter fix)
  {
- 	struct path realpath;
- 	enum ovl_path_type type = ovl_path_real(dentry, &realpath);
+ 	struct dentry *realdentry = ovl_dentry_real(dentry);
  
- 	if (ovl_need_xattr_filter(dentry, type) && ovl_is_private_xattr(name))
+ 	if (ovl_is_private_xattr(name))
  		return -ENODATA;
  
- 	return vfs_getxattr(realpath.dentry, name, value, size);
+ 	return vfs_getxattr(realdentry, name, value, size);
  }
  
  ssize_t ovl_listxattr(struct dentry *dentry, char *list, size_t size)
* Unmerged path fs/overlayfs/inode.c
