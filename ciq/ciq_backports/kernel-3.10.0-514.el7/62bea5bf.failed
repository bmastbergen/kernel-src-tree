KVM: add halt_attempted_poll to VCPU stats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 62bea5bff486644ecf363fe8a1a2f6f32c614a49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/62bea5bf.failed

This new statistic can help diagnosing VCPUs that, for any reason,
trigger bad behavior of halt_poll_ns autotuning.

For example, say halt_poll_ns = 480000, and wakeups are spaced exactly
like 479us, 481us, 479us, 481us. Then KVM always fails polling and wastes
10+20+40+80+160+320+480 = 1110 microseconds out of every
479+481+479+481+479+481+479 = 3359 microseconds. The VCPU then
is consuming about 30% more CPU than it would use without
polling.  This would show as an abnormally high number of
attempted polling compared to the successful polls.

	Acked-by: Christian Borntraeger <borntraeger@de.ibm.com<
	Reviewed-by: David Matlack <dmatlack@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 62bea5bff486644ecf363fe8a1a2f6f32c614a49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/kvm_host.h
#	arch/mips/kvm/kvm_mips.c
#	arch/s390/include/asm/kvm_host.h
#	arch/s390/kvm/kvm-s390.c
diff --cc arch/mips/kvm/kvm_mips.c
index 7ff0f3faa905,49ff3bfc007e..000000000000
--- a/arch/mips/kvm/kvm_mips.c
+++ b/arch/mips/kvm/kvm_mips.c
@@@ -31,23 -34,29 +31,47 @@@
  #define VECTORSPACING 0x100	/* for EI/VI mode */
  #endif
  
 -#define VCPU_STAT(x) offsetof(struct kvm_vcpu, stat.x)
 +#define VCPU_STAT(x) offsetof(struct kvm_vcpu, stat.x), KVM_STAT_VCPU
  struct kvm_stats_debugfs_item debugfs_entries[] = {
++<<<<<<< HEAD:arch/mips/kvm/kvm_mips.c
 +	{ "wait", VCPU_STAT(wait_exits) },
 +	{ "cache", VCPU_STAT(cache_exits) },
 +	{ "signal", VCPU_STAT(signal_exits) },
 +	{ "interrupt", VCPU_STAT(int_exits) },
 +	{ "cop_unsuable", VCPU_STAT(cop_unusable_exits) },
 +	{ "tlbmod", VCPU_STAT(tlbmod_exits) },
 +	{ "tlbmiss_ld", VCPU_STAT(tlbmiss_ld_exits) },
 +	{ "tlbmiss_st", VCPU_STAT(tlbmiss_st_exits) },
 +	{ "addrerr_st", VCPU_STAT(addrerr_st_exits) },
 +	{ "addrerr_ld", VCPU_STAT(addrerr_ld_exits) },
 +	{ "syscall", VCPU_STAT(syscall_exits) },
 +	{ "resvd_inst", VCPU_STAT(resvd_inst_exits) },
 +	{ "break_inst", VCPU_STAT(break_inst_exits) },
 +	{ "flush_dcache", VCPU_STAT(flush_dcache_exits) },
 +	{ "halt_wakeup", VCPU_STAT(halt_wakeup) },
++=======
+ 	{ "wait",	  VCPU_STAT(wait_exits),	 KVM_STAT_VCPU },
+ 	{ "cache",	  VCPU_STAT(cache_exits),	 KVM_STAT_VCPU },
+ 	{ "signal",	  VCPU_STAT(signal_exits),	 KVM_STAT_VCPU },
+ 	{ "interrupt",	  VCPU_STAT(int_exits),		 KVM_STAT_VCPU },
+ 	{ "cop_unsuable", VCPU_STAT(cop_unusable_exits), KVM_STAT_VCPU },
+ 	{ "tlbmod",	  VCPU_STAT(tlbmod_exits),	 KVM_STAT_VCPU },
+ 	{ "tlbmiss_ld",	  VCPU_STAT(tlbmiss_ld_exits),	 KVM_STAT_VCPU },
+ 	{ "tlbmiss_st",	  VCPU_STAT(tlbmiss_st_exits),	 KVM_STAT_VCPU },
+ 	{ "addrerr_st",	  VCPU_STAT(addrerr_st_exits),	 KVM_STAT_VCPU },
+ 	{ "addrerr_ld",	  VCPU_STAT(addrerr_ld_exits),	 KVM_STAT_VCPU },
+ 	{ "syscall",	  VCPU_STAT(syscall_exits),	 KVM_STAT_VCPU },
+ 	{ "resvd_inst",	  VCPU_STAT(resvd_inst_exits),	 KVM_STAT_VCPU },
+ 	{ "break_inst",	  VCPU_STAT(break_inst_exits),	 KVM_STAT_VCPU },
+ 	{ "trap_inst",	  VCPU_STAT(trap_inst_exits),	 KVM_STAT_VCPU },
+ 	{ "msa_fpe",	  VCPU_STAT(msa_fpe_exits),	 KVM_STAT_VCPU },
+ 	{ "fpe",	  VCPU_STAT(fpe_exits),		 KVM_STAT_VCPU },
+ 	{ "msa_disabled", VCPU_STAT(msa_disabled_exits), KVM_STAT_VCPU },
+ 	{ "flush_dcache", VCPU_STAT(flush_dcache_exits), KVM_STAT_VCPU },
+ 	{ "halt_successful_poll", VCPU_STAT(halt_successful_poll), KVM_STAT_VCPU },
+ 	{ "halt_attempted_poll", VCPU_STAT(halt_attempted_poll), KVM_STAT_VCPU },
+ 	{ "halt_wakeup",  VCPU_STAT(halt_wakeup),	 KVM_STAT_VCPU },
++>>>>>>> 62bea5bff486 (KVM: add halt_attempted_poll to VCPU stats):arch/mips/kvm/mips.c
  	{NULL}
  };
  
diff --cc arch/s390/include/asm/kvm_host.h
index 1f251a3c6e3f,6ce4a0b7e8da..000000000000
--- a/arch/s390/include/asm/kvm_host.h
+++ b/arch/s390/include/asm/kvm_host.h
@@@ -128,8 -210,12 +128,13 @@@ struct kvm_vcpu_stat 
  	u32 exit_validity;
  	u32 exit_instruction;
  	u32 halt_successful_poll;
++<<<<<<< HEAD
++=======
+ 	u32 halt_attempted_poll;
+ 	u32 halt_wakeup;
++>>>>>>> 62bea5bff486 (KVM: add halt_attempted_poll to VCPU stats)
  	u32 instruction_lctl;
  	u32 instruction_lctlg;
 -	u32 instruction_stctl;
 -	u32 instruction_stctg;
  	u32 exit_program_interruption;
  	u32 exit_instr_and_program;
  	u32 deliver_external_call;
diff --cc arch/s390/kvm/kvm-s390.c
index 1e923bcabe93,2f807ab1725e..000000000000
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@@ -50,8 -63,12 +50,13 @@@ struct kvm_stats_debugfs_item debugfs_e
  	{ "exit_program_interruption", VCPU_STAT(exit_program_interruption) },
  	{ "exit_instr_and_program_int", VCPU_STAT(exit_instr_and_program) },
  	{ "halt_successful_poll", VCPU_STAT(halt_successful_poll) },
++<<<<<<< HEAD
++=======
+ 	{ "halt_attempted_poll", VCPU_STAT(halt_attempted_poll) },
+ 	{ "halt_wakeup", VCPU_STAT(halt_wakeup) },
++>>>>>>> 62bea5bff486 (KVM: add halt_attempted_poll to VCPU stats)
  	{ "instruction_lctlg", VCPU_STAT(instruction_lctlg) },
  	{ "instruction_lctl", VCPU_STAT(instruction_lctl) },
 -	{ "instruction_stctl", VCPU_STAT(instruction_stctl) },
 -	{ "instruction_stctg", VCPU_STAT(instruction_stctg) },
  	{ "deliver_emergency_signal", VCPU_STAT(deliver_emergency_signal) },
  	{ "deliver_external_call", VCPU_STAT(deliver_external_call) },
  	{ "deliver_service_signal", VCPU_STAT(deliver_service_signal) },
* Unmerged path arch/arm64/include/asm/kvm_host.h
diff --git a/arch/arm/include/asm/kvm_host.h b/arch/arm/include/asm/kvm_host.h
index 34d4cd7740ba..1467904f8fc2 100644
--- a/arch/arm/include/asm/kvm_host.h
+++ b/arch/arm/include/asm/kvm_host.h
@@ -145,6 +145,7 @@ struct kvm_vm_stat {
 
 struct kvm_vcpu_stat {
 	u32 halt_successful_poll;
+	u32 halt_attempted_poll;
 	u32 halt_wakeup;
 };
 
* Unmerged path arch/arm64/include/asm/kvm_host.h
diff --git a/arch/mips/include/asm/kvm_host.h b/arch/mips/include/asm/kvm_host.h
index 0767ce462fe8..adc6b1f227ce 100644
--- a/arch/mips/include/asm/kvm_host.h
+++ b/arch/mips/include/asm/kvm_host.h
@@ -96,6 +96,7 @@ struct kvm_vcpu_stat {
 	u32 break_inst_exits;
 	u32 flush_dcache_exits;
 	u32 halt_successful_poll;
+	u32 halt_attempted_poll;
 	u32 halt_wakeup;
 };
 
* Unmerged path arch/mips/kvm/kvm_mips.c
diff --git a/arch/powerpc/include/asm/kvm_host.h b/arch/powerpc/include/asm/kvm_host.h
index fd16de916754..1eb7b725d20c 100644
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@ -111,6 +111,7 @@ struct kvm_vcpu_stat {
 	u32 dec_exits;
 	u32 ext_intr_exits;
 	u32 halt_successful_poll;
+	u32 halt_attempted_poll;
 	u32 halt_wakeup;
 	u32 dbell_exits;
 	u32 gdbell_exits;
diff --git a/arch/powerpc/kvm/book3s.c b/arch/powerpc/kvm/book3s.c
index 7c36f668081a..f47b2cb01b73 100644
--- a/arch/powerpc/kvm/book3s.c
+++ b/arch/powerpc/kvm/book3s.c
@@ -53,6 +53,7 @@ struct kvm_stats_debugfs_item debugfs_entries[] = {
 	{ "ext_intr",    VCPU_STAT(ext_intr_exits) },
 	{ "queue_intr",  VCPU_STAT(queue_intr) },
 	{ "halt_successful_poll", VCPU_STAT(halt_successful_poll), },
+	{ "halt_attempted_poll", VCPU_STAT(halt_attempted_poll), },
 	{ "halt_wakeup", VCPU_STAT(halt_wakeup) },
 	{ "pf_storage",  VCPU_STAT(pf_storage) },
 	{ "sp_storage",  VCPU_STAT(sp_storage) },
diff --git a/arch/powerpc/kvm/booke.c b/arch/powerpc/kvm/booke.c
index 4b41bf571338..bc6220b0e68d 100644
--- a/arch/powerpc/kvm/booke.c
+++ b/arch/powerpc/kvm/booke.c
@@ -62,6 +62,7 @@ struct kvm_stats_debugfs_item debugfs_entries[] = {
 	{ "dec",        VCPU_STAT(dec_exits) },
 	{ "ext_intr",   VCPU_STAT(ext_intr_exits) },
 	{ "halt_successful_poll", VCPU_STAT(halt_successful_poll) },
+	{ "halt_attempted_poll", VCPU_STAT(halt_attempted_poll) },
 	{ "halt_wakeup", VCPU_STAT(halt_wakeup) },
 	{ "doorbell", VCPU_STAT(dbell_exits) },
 	{ "guest doorbell", VCPU_STAT(gdbell_exits) },
* Unmerged path arch/s390/include/asm/kvm_host.h
* Unmerged path arch/s390/kvm/kvm-s390.c
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index fed22cfb8566..f0f767ae8015 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -665,6 +665,7 @@ struct kvm_vcpu_stat {
 	u32 nmi_window_exits;
 	u32 halt_exits;
 	u32 halt_successful_poll;
+	u32 halt_attempted_poll;
 	u32 halt_wakeup;
 	u32 request_irq_exits;
 	u32 irq_exits;
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 12ab0fab2bc1..3237b81c7dcc 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -150,6 +150,7 @@ struct kvm_stats_debugfs_item debugfs_entries[] = {
 	{ "nmi_window", VCPU_STAT(nmi_window_exits) },
 	{ "halt_exits", VCPU_STAT(halt_exits) },
 	{ "halt_successful_poll", VCPU_STAT(halt_successful_poll) },
+	{ "halt_attempted_poll", VCPU_STAT(halt_attempted_poll) },
 	{ "halt_wakeup", VCPU_STAT(halt_wakeup) },
 	{ "hypercalls", VCPU_STAT(hypercalls) },
 	{ "request_irq", VCPU_STAT(request_irq_exits) },
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 770742100c0b..346b3b0f52a5 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -1970,6 +1970,7 @@ void kvm_vcpu_block(struct kvm_vcpu *vcpu)
 	if (vcpu->halt_poll_ns) {
 		ktime_t stop = ktime_add_ns(ktime_get(), vcpu->halt_poll_ns);
 
+		++vcpu->stat.halt_attempted_poll;
 		do {
 			/*
 			 * This sets KVM_REQ_UNHALT if an interrupt
