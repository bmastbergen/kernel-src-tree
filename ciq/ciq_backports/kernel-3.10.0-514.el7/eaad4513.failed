sched: Fix __sched_setscheduler() nice test

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit eaad45132c564ce377e6dce05e78e08e456d5315
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eaad4513.failed

With the introduction of sched_attr::sched_nice we need to check
if we've got permission to actually change the nice value.

Daniel found that can_nice() would always fail; and upon
inspection it turns out that can_nice() only tests to see if we
can lower the nice value, but it doesn't validate if we're
lowering or not.

Therefore amend the test to only call can_nice() when we lower
the nice value.

Reported-and-Tested-by: Daniel Lezcano <daniel.lezcano@linaro.org>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Cc: raistlin@linux.it
	Cc: juri.lelli@gmail.com
	Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
Fixes: d50dde5a10f3 ("sched: Add new scheduler syscalls to support an extended scheduling parameters ABI")
Link: http://lkml.kernel.org/r/20140116165425.GA9481@laptop.programming.kicks-ass.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit eaad45132c564ce377e6dce05e78e08e456d5315)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/core.c
diff --cc kernel/sched/core.c
index 8f3f375de9d1,36c951b7eef8..000000000000
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@@ -4157,6 -3295,12 +4157,15 @@@ recheck
  	 * Allow unprivileged RT tasks to decrease priority:
  	 */
  	if (user && !capable(CAP_SYS_NICE)) {
++<<<<<<< HEAD
++=======
+ 		if (fair_policy(policy)) {
+ 			if (attr->sched_nice < TASK_NICE(p) &&
+ 			    !can_nice(p, attr->sched_nice))
+ 				return -EPERM;
+ 		}
+ 
++>>>>>>> eaad45132c56 (sched: Fix __sched_setscheduler() nice test)
  		if (rt_policy(policy)) {
  			unsigned long rlim_rtprio =
  					task_rlimit(p, RLIMIT_RTPRIO);
* Unmerged path kernel/sched/core.c
