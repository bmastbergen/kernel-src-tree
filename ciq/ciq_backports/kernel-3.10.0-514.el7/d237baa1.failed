net/mlx4_core: Add basic elements for QCN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [include] mlx4_core: Add basic elements for QCN (kamal heib) [1275159 1296272 1296405 1298421 1298422 1298423 1298424 1298425]
Rebuild_FUZZ: 94.87%
commit-author Shani Michaeli <shanim@mellanox.com>
commit d237baa1cbb3a2335357484c1d63a810a01947e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d237baa1.failed

Add device capability, firmware command opcode and etc prior elements
needed for QCN suppprt. Disable SRIOV VF view/access for QCN is disabled.

While here, remove a redundant offset definition into the
QUERY_DEV_CAP mailbox.

	Signed-off-by: Shani Michaeli <shanim@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d237baa1cbb3a2335357484c1d63a810a01947e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/fw.c
#	include/linux/mlx4/device.h
diff --cc drivers/net/ethernet/mellanox/mlx4/fw.c
index 8fecfd08f0c1,242bcee5d774..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/fw.c
+++ b/drivers/net/ethernet/mellanox/mlx4/fw.c
@@@ -147,16 -144,7 +147,20 @@@ static void dump_dev_cap_flags2(struct 
  		[19] = "Performance optimized for limited rule configuration flow steering support",
  		[20] = "Recoverable error events support",
  		[21] = "Port Remap support",
++<<<<<<< HEAD
 +		[23] = "QP rate limiting support",
 +		[24] = "Ethernet Flow control statistics support",
 +		[25] = "Granular QoS per VF support",
 +		[26] = "Port ETS Scheduler support",
 +		[27] = "Port beacon support",
 +		[28] = "RX-ALL support",
 +		[29] = "802.1ad offload support",
 +		[31] = "Modifying loopback source checks using UPDATE_QP support",
 +		[32] = "Loopback source checks support",
 +		[33] = "RoCEv2 support"
++=======
+ 		[22] = "QCN support"
++>>>>>>> d237baa1cbb3 (net/mlx4_core: Add basic elements for QCN)
  	};
  	int i;
  
@@@ -1237,22 -1150,13 +1244,29 @@@ int mlx4_QUERY_DEV_CAP_wrapper(struct m
  	/* turn off host side virt features (VST, FSM, etc) for guests */
  	MLX4_GET(field32, outbox->buf, QUERY_DEV_CAP_EXT_2_FLAGS_OFFSET);
  	field32 &= ~(DEV_CAP_EXT_2_FLAG_VLAN_CONTROL | DEV_CAP_EXT_2_FLAG_80_VFS |
 -		     DEV_CAP_EXT_2_FLAG_FSM);
 +		     DEV_CAP_EXT_2_FLAG_FSM | DEV_CAP_EXT_2_FLAG_PFC_COUNTERS);
  	MLX4_PUT(outbox->buf, field32, QUERY_DEV_CAP_EXT_2_FLAGS_OFFSET);
  
++<<<<<<< HEAD
 +	/* turn off QP max-rate limiting for guests */
 +	field16 = 0;
 +	MLX4_PUT(outbox->buf, field16, QUERY_DEV_CAP_QP_RATE_LIMIT_NUM_OFFSET);
 +
 +	/* turn off QoS per VF support for guests */
 +	MLX4_GET(field, outbox->buf, QUERY_DEV_CAP_CQ_EQ_CACHE_LINE_STRIDE);
 +	field &= 0xef;
 +	MLX4_PUT(outbox->buf, field, QUERY_DEV_CAP_CQ_EQ_CACHE_LINE_STRIDE);
 +
 +	/* turn off ignore FCS feature for guests */
 +	MLX4_GET(field, outbox->buf, QUERY_DEV_CAP_CONFIG_DEV_OFFSET);
 +	field &= 0xfb;
 +	MLX4_PUT(outbox->buf, field, QUERY_DEV_CAP_CONFIG_DEV_OFFSET);
++=======
+ 	/* turn off QCN for guests */
+ 	MLX4_GET(field, outbox->buf, QUERY_DEV_CAP_ECN_QCN_VER_OFFSET);
+ 	field &= 0xfe;
+ 	MLX4_PUT(outbox->buf, field, QUERY_DEV_CAP_ECN_QCN_VER_OFFSET);
++>>>>>>> d237baa1cbb3 (net/mlx4_core: Add basic elements for QCN)
  
  	return 0;
  }
diff --cc include/linux/mlx4/device.h
index 0a14bb18ad6e,1cc54822b931..000000000000
--- a/include/linux/mlx4/device.h
+++ b/include/linux/mlx4/device.h
@@@ -207,17 -204,7 +207,21 @@@ enum 
  	MLX4_DEV_CAP_FLAG2_FS_A0		= 1LL <<  19,
  	MLX4_DEV_CAP_FLAG2_RECOVERABLE_ERROR_EVENT = 1LL << 20,
  	MLX4_DEV_CAP_FLAG2_PORT_REMAP		= 1LL <<  21,
++<<<<<<< HEAD
 +	MLX4_DEV_CAP_FLAG2_QP_RATE_LIMIT	= 1LL <<  23,
 +	MLX4_DEV_CAP_FLAG2_FLOWSTATS_EN         = 1LL <<  24,
 +	MLX4_DEV_CAP_FLAG2_QOS_VPP		= 1LL <<  25,
 +	MLX4_DEV_CAP_FLAG2_ETS_CFG		= 1LL <<  26,
 +	MLX4_DEV_CAP_FLAG2_PORT_BEACON		= 1LL <<  27,
 +	MLX4_DEV_CAP_FLAG2_IGNORE_FCS		= 1LL <<  28,
 +	MLX4_DEV_CAP_FLAG2_PHV_EN		= 1LL <<  29,
 +	MLX4_DEV_CAP_FLAG2_SKIP_OUTER_VLAN	= 1LL <<  30,
 +	MLX4_DEV_CAP_FLAG2_UPDATE_QP_SRC_CHECK_LB = 1ULL << 31,
 +	MLX4_DEV_CAP_FLAG2_LB_SRC_CHK           = 1ULL << 32,
 +	MLX4_DEV_CAP_FLAG2_ROCE_V1_V2		= 1ULL <<  33,
++=======
+ 	MLX4_DEV_CAP_FLAG2_QCN			= 1LL <<  22,
++>>>>>>> d237baa1cbb3 (net/mlx4_core: Add basic elements for QCN)
  };
  
  enum {
diff --git a/drivers/net/ethernet/mellanox/mlx4/cmd.c b/drivers/net/ethernet/mellanox/mlx4/cmd.c
index 92f5e2cf3878..144e766ec264 100644
--- a/drivers/net/ethernet/mellanox/mlx4/cmd.c
+++ b/drivers/net/ethernet/mellanox/mlx4/cmd.c
@@ -1554,6 +1554,15 @@ static struct mlx4_cmd_info cmd_info[] = {
 		.verify = NULL,
 		.wrapper = mlx4_ACCESS_REG_wrapper,
 	},
+	{
+		.opcode = MLX4_CMD_CONGESTION_CTRL_OPCODE,
+		.has_inbox = false,
+		.has_outbox = false,
+		.out_is_imm = false,
+		.encode_slave_id = false,
+		.verify = NULL,
+		.wrapper = mlx4_CMD_EPERM_wrapper,
+	},
 	/* Native multicast commands are not available for guests */
 	{
 		.opcode = MLX4_CMD_QP_ATTACH,
* Unmerged path drivers/net/ethernet/mellanox/mlx4/fw.c
diff --git a/include/linux/mlx4/cmd.h b/include/linux/mlx4/cmd.h
index dd0d18be7fd6..116b284bc4ce 100644
--- a/include/linux/mlx4/cmd.h
+++ b/include/linux/mlx4/cmd.h
@@ -167,6 +167,9 @@ enum {
 	MLX4_QP_FLOW_STEERING_ATTACH = 0x65,
 	MLX4_QP_FLOW_STEERING_DETACH = 0x66,
 	MLX4_FLOW_STEERING_IB_UC_QP_RANGE = 0x64,
+
+	/* Update and read QCN parameters */
+	MLX4_CMD_CONGESTION_CTRL_OPCODE = 0x68,
 };
 
 enum {
@@ -245,6 +248,16 @@ struct mlx4_config_dev_params {
 	u8	rx_csum_flags_port_2;
 };
 
+enum mlx4_en_congestion_control_algorithm {
+	MLX4_CTRL_ALGO_802_1_QAU_REACTION_POINT = 0,
+};
+
+enum mlx4_en_congestion_control_opmod {
+	MLX4_CONGESTION_CONTROL_GET_PARAMS,
+	MLX4_CONGESTION_CONTROL_GET_STATISTICS,
+	MLX4_CONGESTION_CONTROL_SET_PARAMS = 4,
+};
+
 struct mlx4_dev;
 
 struct mlx4_cmd_mailbox {
* Unmerged path include/linux/mlx4/device.h
