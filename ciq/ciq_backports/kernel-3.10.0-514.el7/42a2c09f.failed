libceph: open-code remove_{all,old}_osds()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ilya Dryomov <idryomov@gmail.com>
commit 42a2c09f2b0b95fa147bcdb56cdc02b980b9ac5e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/42a2c09f.failed

They are called only once, from ceph_osdc_stop() and
handle_osds_timeout() respectively.

	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 42a2c09f2b0b95fa147bcdb56cdc02b980b9ac5e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ceph/osd_client.c
diff --cc net/ceph/osd_client.c
index 5bba0957548d,c423e11d6857..000000000000
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@@ -1656,14 -1644,22 +1630,27 @@@ static void handle_osds_timeout(struct 
  	struct ceph_osd_client *osdc =
  		container_of(work, struct ceph_osd_client,
  			     osds_timeout_work.work);
++<<<<<<< HEAD
 +	unsigned long delay =
 +		osdc->client->options->osd_idle_ttl * HZ >> 2;
++=======
+ 	unsigned long delay = osdc->client->options->osd_idle_ttl / 4;
+ 	struct ceph_osd *osd, *nosd;
++>>>>>>> 42a2c09f2b0b (libceph: open-code remove_{all,old}_osds())
  
- 	dout("osds timeout\n");
+ 	dout("%s osdc %p\n", __func__, osdc);
  	down_read(&osdc->map_sem);
- 	remove_old_osds(osdc);
- 	up_read(&osdc->map_sem);
+ 	mutex_lock(&osdc->request_mutex);
+ 
+ 	list_for_each_entry_safe(osd, nosd, &osdc->osd_lru, o_osd_lru) {
+ 		if (time_before(jiffies, osd->lru_ttl))
+ 			break;
+ 
+ 		remove_osd(osdc, osd);
+ 	}
  
+ 	mutex_unlock(&osdc->request_mutex);
+ 	up_read(&osdc->map_sem);
  	schedule_delayed_work(&osdc->osds_timeout_work,
  			      round_jiffies_relative(delay));
  }
* Unmerged path net/ceph/osd_client.c
