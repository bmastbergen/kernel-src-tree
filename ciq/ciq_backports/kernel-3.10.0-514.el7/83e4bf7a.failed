openvswitch: properly refcount vport-vxlan module

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Paolo Abeni <pabeni@redhat.com>
commit 83e4bf7a7486532df2dc3db27e0e07a250990ed2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/83e4bf7a.failed

After 614732eaa12d, no refcount is maintained for the vport-vxlan module.
This allows the userspace to remove such module while vport-vxlan
devices still exist, which leads to later oops.

v1 -> v2:
 - move vport 'owner' initialization in ovs_vport_ops_register()
   and make such function a macro

Fixes: 614732eaa12d ("openvswitch: Use regular VXLAN net_device device")
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 83e4bf7a7486532df2dc3db27e0e07a250990ed2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/vport-geneve.c
#	net/openvswitch/vport-gre.c
#	net/openvswitch/vport.h
diff --cc net/openvswitch/vport-geneve.c
index 1da3a14d1010,e41cd12d9b2d..000000000000
--- a/net/openvswitch/vport-geneve.c
+++ b/net/openvswitch/vport-geneve.c
@@@ -241,13 -113,10 +241,17 @@@ static int geneve_get_egress_tun_info(s
  
  static struct vport_ops ovs_geneve_vport_ops = {
  	.type		= OVS_VPORT_TYPE_GENEVE,
 -	.create		= geneve_create,
 -	.destroy	= ovs_netdev_tunnel_destroy,
 +	.create		= geneve_tnl_create,
 +	.destroy	= geneve_tnl_destroy,
 +	.get_name	= geneve_get_name,
  	.get_options	= geneve_get_options,
++<<<<<<< HEAD
 +	.send		= geneve_tnl_send,
 +	.owner          = THIS_MODULE,
 +	.get_egress_tun_info	= geneve_get_egress_tun_info,
++=======
+ 	.send		= dev_queue_xmit,
++>>>>>>> 83e4bf7a7486 (openvswitch: properly refcount vport-vxlan module)
  };
  
  static int __init ovs_geneve_tnl_init(void)
diff --cc net/openvswitch/vport-gre.c
index b87656c66aaf,7f8897f33a67..000000000000
--- a/net/openvswitch/vport-gre.c
+++ b/net/openvswitch/vport-gre.c
@@@ -288,11 -87,8 +288,16 @@@ static int gre_get_egress_tun_info(stru
  static struct vport_ops ovs_gre_vport_ops = {
  	.type		= OVS_VPORT_TYPE_GRE,
  	.create		= gre_create,
++<<<<<<< HEAD
 +	.destroy	= gre_tnl_destroy,
 +	.get_name	= gre_get_name,
 +	.send		= gre_tnl_send,
 +	.get_egress_tun_info	= gre_get_egress_tun_info,
 +	.owner		= THIS_MODULE,
++=======
+ 	.send		= dev_queue_xmit,
+ 	.destroy	= ovs_netdev_tunnel_destroy,
++>>>>>>> 83e4bf7a7486 (openvswitch: properly refcount vport-vxlan module)
  };
  
  static int __init ovs_gre_tnl_init(void)
diff --cc net/openvswitch/vport.h
index 4750fb673a9f,8ea3a96980ac..000000000000
--- a/net/openvswitch/vport.h
+++ b/net/openvswitch/vport.h
@@@ -235,7 -191,18 +235,22 @@@ static inline void ovs_skb_postpush_rcs
  		skb->csum = csum_add(skb->csum, csum_partial(start, len, 0));
  }
  
++<<<<<<< HEAD
 +int ovs_vport_ops_register(struct vport_ops *ops);
++=======
+ static inline const char *ovs_vport_name(struct vport *vport)
+ {
+ 	return vport->dev->name;
+ }
+ 
+ int __ovs_vport_ops_register(struct vport_ops *ops);
+ #define ovs_vport_ops_register(ops)		\
+ 	({					\
+ 		(ops)->owner = THIS_MODULE;	\
+ 		__ovs_vport_ops_register(ops);	\
+ 	})
+ 
++>>>>>>> 83e4bf7a7486 (openvswitch: properly refcount vport-vxlan module)
  void ovs_vport_ops_unregister(struct vport_ops *ops);
  
  static inline struct rtable *ovs_tunnel_route_lookup(struct net *net,
* Unmerged path net/openvswitch/vport-geneve.c
* Unmerged path net/openvswitch/vport-gre.c
diff --git a/net/openvswitch/vport.c b/net/openvswitch/vport.c
index af23ba077836..40273b32e6b8 100644
--- a/net/openvswitch/vport.c
+++ b/net/openvswitch/vport.c
@@ -74,7 +74,7 @@ static struct hlist_head *hash_bucket(const struct net *net, const char *name)
 	return &dev_table[hash & (VPORT_HASH_BUCKETS - 1)];
 }
 
-int ovs_vport_ops_register(struct vport_ops *ops)
+int __ovs_vport_ops_register(struct vport_ops *ops)
 {
 	int err = -EEXIST;
 	struct vport_ops *o;
@@ -90,7 +90,7 @@ errout:
 	ovs_unlock();
 	return err;
 }
-EXPORT_SYMBOL_GPL(ovs_vport_ops_register);
+EXPORT_SYMBOL_GPL(__ovs_vport_ops_register);
 
 void ovs_vport_ops_unregister(struct vport_ops *ops)
 {
* Unmerged path net/openvswitch/vport.h
