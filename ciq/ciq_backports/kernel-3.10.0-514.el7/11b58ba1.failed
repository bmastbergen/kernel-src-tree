netlink: Use default rhashtable hashfn

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit 11b58ba146ccd7b105c4962c75f2e744053c85bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/11b58ba1.failed

This patch removes the explicit jhash value for the hashfn parameter
of rhashtable.  As the key length is a multiple of 4, this means that
we will actually end up using jhash2.

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 11b58ba146ccd7b105c4962c75f2e744053c85bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netlink/af_netlink.c
diff --cc net/netlink/af_netlink.c
index 9d53ffe3d114,e2f7f28148e0..000000000000
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@@ -3146,6 -3127,23 +3146,26 @@@ static struct pernet_operations __net_i
  	.exit = netlink_net_exit,
  };
  
++<<<<<<< HEAD
++=======
+ static inline u32 netlink_hash(const void *data, u32 seed)
+ {
+ 	const struct netlink_sock *nlk = data;
+ 	struct netlink_compare_arg arg;
+ 
+ 	netlink_compare_arg_init(&arg, sock_net(&nlk->sk), nlk->portid);
+ 	return jhash2((u32 *)&arg, netlink_compare_arg_len / sizeof(u32), seed);
+ }
+ 
+ static const struct rhashtable_params netlink_rhashtable_params = {
+ 	.head_offset = offsetof(struct netlink_sock, node),
+ 	.key_len = netlink_compare_arg_len,
+ 	.obj_hashfn = netlink_hash,
+ 	.obj_cmpfn = netlink_compare,
+ 	.max_size = 65536,
+ };
+ 
++>>>>>>> 11b58ba146cc (netlink: Use default rhashtable hashfn)
  static int __init netlink_proto_init(void)
  {
  	int i;
* Unmerged path net/netlink/af_netlink.c
