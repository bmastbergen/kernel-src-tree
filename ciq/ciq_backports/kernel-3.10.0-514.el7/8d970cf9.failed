IB/hfi1: Add ioctl() interface for user commands

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dennis Dalessandro <dennis.dalessandro@intel.com>
commit 8d970cf991a6c38a5566572979487b906d643740
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8d970cf9.failed

IOCTL is more suited to what user space commands need to do than the
write() interface. Add IOCTL definitions for all existing write commands
and the handling for those. The write() interface will be removed in a
follow on patch.

	Reviewed-by: Mitko Haralanov <mitko.haralanov@intel.com>
	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 8d970cf991a6c38a5566572979487b906d643740)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/file_ops.c
#	include/uapi/rdma/hfi/hfi1_user.h
diff --cc drivers/staging/hfi1/file_ops.c
index 89c4fc4847ca,a338238bef92..000000000000
--- a/drivers/staging/hfi1/file_ops.c
+++ b/drivers/staging/hfi1/file_ops.c
@@@ -106,16 -96,16 +106,22 @@@ static int user_event_ack(struct hfi1_c
  static int set_ctxt_pkey(struct hfi1_ctxtdata *, unsigned, u16);
  static int manage_rcvq(struct hfi1_ctxtdata *, unsigned, int);
  static int vma_fault(struct vm_area_struct *, struct vm_fault *);
++<<<<<<< HEAD:drivers/staging/hfi1/file_ops.c
 +static int exp_tid_setup(struct file *, struct hfi1_tid_info *);
 +static int exp_tid_free(struct file *, struct hfi1_tid_info *);
 +static void unlock_exp_tids(struct hfi1_ctxtdata *);
++=======
+ static long hfi1_file_ioctl(struct file *fp, unsigned int cmd,
+ 			    unsigned long arg);
++>>>>>>> 8d970cf991a6 (IB/hfi1: Add ioctl() interface for user commands):drivers/staging/rdma/hfi1/file_ops.c
  
  static const struct file_operations hfi1_file_ops = {
  	.owner = THIS_MODULE,
  	.write = hfi1_file_write,
 -	.write_iter = hfi1_write_iter,
 +	.aio_write = hfi1_aio_write,
  	.open = hfi1_file_open,
  	.release = hfi1_file_close,
+ 	.unlocked_ioctl = hfi1_file_ioctl,
  	.poll = hfi1_poll,
  	.mmap = hfi1_file_mmap,
  	.llseek = noop_llseek,
diff --cc include/uapi/rdma/hfi/hfi1_user.h
index ebb5bb6e47df,9784159c9d52..000000000000
--- a/include/uapi/rdma/hfi/hfi1_user.h
+++ b/include/uapi/rdma/hfi/hfi1_user.h
@@@ -121,13 -126,46 +126,56 @@@
  #define HFI1_CMD_SET_PKEY        11     /* set context's pkey */
  #define HFI1_CMD_CTXT_RESET      12     /* reset context's HW send context */
  #define HFI1_CMD_TID_INVAL_READ  13     /* read TID cache invalidations */
++<<<<<<< HEAD
 +/* separate EPROM commands from normal PSM commands */
 +#define HFI1_CMD_EP_INFO         64      /* read EPROM device ID */
 +#define HFI1_CMD_EP_ERASE_CHIP   65      /* erase whole EPROM */
 +/* range 66-74 no longer used */
 +#define HFI1_CMD_EP_ERASE_RANGE  75      /* erase EPROM range */
 +#define HFI1_CMD_EP_READ_RANGE   76      /* read EPROM range */
 +#define HFI1_CMD_EP_WRITE_RANGE  77      /* write EPROM range */
++=======
+ #define HFI1_CMD_GET_VERS	 14	/* get the version of the user cdev */
+ 
+ /*
+  * User IOCTLs can not go above 128 if they do then see common.h and change the
+  * base for the snoop ioctl
+  */
+ #define IB_IOCTL_MAGIC 0x1b /* See Documentation/ioctl/ioctl-number.txt */
+ 
+ /*
+  * Make the ioctls occupy the last 0xf0-0xff portion of the IB range
+  */
+ #define __NUM(cmd) (HFI1_CMD_##cmd + 0xe0)
+ 
+ struct hfi1_cmd;
+ #define HFI1_IOCTL_ASSIGN_CTXT \
+ 	_IOWR(IB_IOCTL_MAGIC, __NUM(ASSIGN_CTXT), struct hfi1_user_info)
+ #define HFI1_IOCTL_CTXT_INFO \
+ 	_IOW(IB_IOCTL_MAGIC, __NUM(CTXT_INFO), struct hfi1_ctxt_info)
+ #define HFI1_IOCTL_USER_INFO \
+ 	_IOW(IB_IOCTL_MAGIC, __NUM(USER_INFO), struct hfi1_base_info)
+ #define HFI1_IOCTL_TID_UPDATE \
+ 	_IOWR(IB_IOCTL_MAGIC, __NUM(TID_UPDATE), struct hfi1_tid_info)
+ #define HFI1_IOCTL_TID_FREE \
+ 	_IOWR(IB_IOCTL_MAGIC, __NUM(TID_FREE), struct hfi1_tid_info)
+ #define HFI1_IOCTL_CREDIT_UPD \
+ 	_IO(IB_IOCTL_MAGIC, __NUM(CREDIT_UPD))
+ #define HFI1_IOCTL_RECV_CTRL \
+ 	_IOW(IB_IOCTL_MAGIC, __NUM(RECV_CTRL), int)
+ #define HFI1_IOCTL_POLL_TYPE \
+ 	_IOW(IB_IOCTL_MAGIC, __NUM(POLL_TYPE), int)
+ #define HFI1_IOCTL_ACK_EVENT \
+ 	_IOW(IB_IOCTL_MAGIC, __NUM(ACK_EVENT), unsigned long)
+ #define HFI1_IOCTL_SET_PKEY \
+ 	_IOW(IB_IOCTL_MAGIC, __NUM(SET_PKEY), __u16)
+ #define HFI1_IOCTL_CTXT_RESET \
+ 	_IO(IB_IOCTL_MAGIC, __NUM(CTXT_RESET))
+ #define HFI1_IOCTL_TID_INVAL_READ \
+ 	_IOWR(IB_IOCTL_MAGIC, __NUM(TID_INVAL_READ), struct hfi1_tid_info)
+ #define HFI1_IOCTL_GET_VERS \
+ 	_IOR(IB_IOCTL_MAGIC, __NUM(GET_VERS), int)
++>>>>>>> 8d970cf991a6 (IB/hfi1: Add ioctl() interface for user commands)
  
  #define _HFI1_EVENT_FROZEN_BIT         0
  #define _HFI1_EVENT_LINKDOWN_BIT       1
diff --git a/drivers/staging/hfi1/common.h b/drivers/staging/hfi1/common.h
index 5dd92720faae..20e1004b5421 100644
--- a/drivers/staging/hfi1/common.h
+++ b/drivers/staging/hfi1/common.h
@@ -181,7 +181,8 @@
 		     HFI1_CAP_PKEY_CHECK |		\
 		     HFI1_CAP_NO_INTEGRITY)
 
-#define HFI1_USER_SWVERSION ((HFI1_USER_SWMAJOR << 16) | HFI1_USER_SWMINOR)
+#define HFI1_USER_SWVERSION ((HFI1_USER_SWMAJOR << HFI1_SWMAJOR_SHIFT) | \
+			     HFI1_USER_SWMINOR)
 
 #ifndef HFI1_KERN_TYPE
 #define HFI1_KERN_TYPE 0
@@ -355,6 +356,8 @@ struct hfi1_message_header {
 #define HFI1_BECN_SMASK (1 << HFI1_BECN_SHIFT)
 #define HFI1_MULTICAST_LID_BASE 0xC000
 
+#define HFI1_PSM_IOC_BASE_SEQ 0x0
+
 static inline __u64 rhf_to_cpu(const __le32 *rbuf)
 {
 	return __le64_to_cpu(*((__le64 *)rbuf));
* Unmerged path drivers/staging/hfi1/file_ops.c
* Unmerged path include/uapi/rdma/hfi/hfi1_user.h
