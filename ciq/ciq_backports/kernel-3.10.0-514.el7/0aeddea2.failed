IB/qib: Remove qib_query_device function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Harish Chegondi <harish.chegondi@intel.com>
commit 0aeddea29c78299e4b022aa0bb978ed87e33f678
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0aeddea2.failed

Removed qib_query_device function to use rdmavt rvt_query_device function
The device attributes still need to be filled in by the driver.

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Harish Chegondi <harish.chegondi@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 0aeddea29c78299e4b022aa0bb978ed87e33f678)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/qib/qib_verbs.c
diff --cc drivers/infiniband/hw/qib/qib_verbs.c
index c4417a1f33be,45f9582241d1..000000000000
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@@ -1568,55 -1576,6 +1568,58 @@@ full
  	}
  }
  
++<<<<<<< HEAD
 +static int qib_query_device(struct ib_device *ibdev, struct ib_device_attr *props,
 +			    struct ib_udata *uhw)
 +{
 +	struct qib_devdata *dd = dd_from_ibdev(ibdev);
 +	struct qib_ibdev *dev = to_idev(ibdev);
 +
 +	if (uhw->inlen || uhw->outlen)
 +		return -EINVAL;
 +	memset(props, 0, sizeof(*props));
 +
 +	props->device_cap_flags = IB_DEVICE_BAD_PKEY_CNTR |
 +		IB_DEVICE_BAD_QKEY_CNTR | IB_DEVICE_SHUTDOWN_PORT |
 +		IB_DEVICE_SYS_IMAGE_GUID | IB_DEVICE_RC_RNR_NAK_GEN |
 +		IB_DEVICE_PORT_ACTIVE_EVENT | IB_DEVICE_SRQ_RESIZE;
 +	props->page_size_cap = PAGE_SIZE;
 +	props->vendor_id =
 +		QIB_SRC_OUI_1 << 16 | QIB_SRC_OUI_2 << 8 | QIB_SRC_OUI_3;
 +	props->vendor_part_id = dd->deviceid;
 +	props->hw_ver = dd->minrev;
 +	props->sys_image_guid = ib_qib_sys_image_guid;
 +	props->max_mr_size = ~0ULL;
 +	props->max_qp = ib_qib_max_qps;
 +	props->max_qp_wr = ib_qib_max_qp_wrs;
 +	props->max_sge = ib_qib_max_sges;
 +	props->max_sge_rd = ib_qib_max_sges;
 +	props->max_cq = ib_qib_max_cqs;
 +	props->max_ah = ib_qib_max_ahs;
 +	props->max_cqe = ib_qib_max_cqes;
 +	props->max_mr = dev->lk_table.max;
 +	props->max_fmr = dev->lk_table.max;
 +	props->max_map_per_fmr = 32767;
 +	props->max_pd = ib_qib_max_pds;
 +	props->max_qp_rd_atom = QIB_MAX_RDMA_ATOMIC;
 +	props->max_qp_init_rd_atom = 255;
 +	/* props->max_res_rd_atom */
 +	props->max_srq = ib_qib_max_srqs;
 +	props->max_srq_wr = ib_qib_max_srq_wrs;
 +	props->max_srq_sge = ib_qib_max_srq_sges;
 +	/* props->local_ca_ack_delay */
 +	props->atomic_cap = IB_ATOMIC_GLOB;
 +	props->max_pkeys = qib_get_npkeys(dd);
 +	props->max_mcast_grp = ib_qib_max_mcast_grps;
 +	props->max_mcast_qp_attach = ib_qib_max_mcast_qp_attached;
 +	props->max_total_mcast_qp_attach = props->max_mcast_qp_attach *
 +		props->max_mcast_grp;
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> 0aeddea29c78 (IB/qib: Remove qib_query_device function)
  static int qib_query_port(struct ib_device *ibdev, u8 port,
  			  struct ib_port_attr *props)
  {
@@@ -2283,11 -2069,24 +2333,30 @@@ int qib_register_ib_device(struct qib_d
  	dd->verbs_dev.rdi.driver_f.port_callback = qib_create_port_files;
  	dd->verbs_dev.rdi.driver_f.get_card_name = qib_get_card_name;
  	dd->verbs_dev.rdi.driver_f.get_pci_dev = qib_get_pci_dev;
++<<<<<<< HEAD
 +	dd->verbs_dev.rdi.dparms.props.max_pd = ib_qib_max_pds;
 +	dd->verbs_dev.rdi.flags = (RVT_FLAG_MR_INIT_DRIVER |
 +				   RVT_FLAG_QP_INIT_DRIVER |
++=======
+ 	dd->verbs_dev.rdi.driver_f.check_ah = qib_check_ah;
+ 	dd->verbs_dev.rdi.driver_f.notify_new_ah = qib_notify_new_ah;
+ 	dd->verbs_dev.rdi.flags = (RVT_FLAG_QP_INIT_DRIVER |
++>>>>>>> 0aeddea29c78 (IB/qib: Remove qib_query_device function)
  				   RVT_FLAG_CQ_INIT_DRIVER);
 -	dd->verbs_dev.rdi.dparms.lkey_table_size = qib_lkey_table_size;
 -	dd->verbs_dev.rdi.dparms.nports = dd->num_pports;
 -	dd->verbs_dev.rdi.dparms.npkeys = qib_get_npkeys(dd);
  
++<<<<<<< HEAD
++=======
+ 	qib_fill_device_attr(dd);
+ 
+ 	ppd = dd->pport;
+ 	for (i = 0; i < dd->num_pports; i++, ppd++) {
+ 		ctxt = ppd->hw_pidx;
+ 		rvt_init_port(&dd->verbs_dev.rdi,
+ 			      &ppd->ibport_data.rvp,
+ 			      i,
+ 			      dd->rcd[ctxt]->pkeys);
+ 	}
++>>>>>>> 0aeddea29c78 (IB/qib: Remove qib_query_device function)
  
  	ret = rvt_register_device(&dd->verbs_dev.rdi);
  	if (ret)
* Unmerged path drivers/infiniband/hw/qib/qib_verbs.c
