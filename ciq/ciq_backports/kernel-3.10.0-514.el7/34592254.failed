hpsa: add discovery polling for PT RAID devices.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [scsi] hpsa: add discovery polling for PT RAID devices (Joseph Szczypek) [1274467]
Rebuild_FUZZ: 98.95%
commit-author Scott Teel <scott.teel@pmcs.com>
commit 34592254c13324add1972e6a7d5f6636d95ade33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/34592254.failed

There are problems with getting configuration change notification
in pass-through RAID environments.  So, activate flag
h->discovery_polling when one of these devices is detected in
update_scsi_devices.

After discovery_polling is set, execute a report luns from
rescan_controller_worker (every 30 seconds).

If the data from report_luns is different than last
time (binary compare), execute a full rescan via update_scsi_devices.

	Reviewed-by: Scott Teel <scott.teel@pmcs.com>
	Reviewed-by: Justin Lindley <justin.lindley@pmcs.com>
	Reviewed-by: Kevin Barnett <kevin.barnett@pmcs.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Reviewed-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Signed-off-by: Don Brace <don.brace@pmcs.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 34592254c13324add1972e6a7d5f6636d95ade33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/hpsa.c
diff --cc drivers/scsi/hpsa.c
index ef01b3ac8b79,acfbbb2a3e7a..000000000000
--- a/drivers/scsi/hpsa.c
+++ b/drivers/scsi/hpsa.c
@@@ -3792,33 -3899,29 +3793,51 @@@ static void hpsa_update_scsi_devices(st
  		hpsa_update_device_supports_aborts(h, tmpdevice, lunaddrbytes);
  		this_device = currentsd[ncurrent];
  
++<<<<<<< HEAD
++=======
+ 		/* Turn on discovery_polling if there are ext target devices.
+ 		 * Event-based change notification is unreliable for those.
+ 		 */
+ 		if (!h->discovery_polling) {
+ 			if (tmpdevice->external) {
+ 				h->discovery_polling = 1;
+ 				dev_info(&h->pdev->dev,
+ 					"External target, activate discovery polling.\n");
+ 			}
+ 		}
+ 
+ 
+ 		*this_device = *tmpdevice;
+ 		this_device->physical_device = physical_device;
+ 
++>>>>>>> 34592254c133 (hpsa: add discovery polling for PT RAID devices.)
  		/*
 -		 * Expose all devices except for physical devices that
 -		 * are masked.
 +		 * For external target devices, we have to insert a LUN 0 which
 +		 * doesn't show up in CCISS_REPORT_PHYSICAL data, but there
 +		 * is nonetheless an enclosure device there.  We have to
 +		 * present that otherwise linux won't find anything if
 +		 * there is no lun 0.
  		 */
 -		if (MASKED_DEVICE(lunaddrbytes) && this_device->physical_device)
 -			this_device->expose_device = 0;
 -		else
 -			this_device->expose_device = 1;
 +		if (add_ext_target_dev(h, tmpdevice, this_device,
 +				lunaddrbytes, lunzerobits,
 +				&n_ext_target_devs)) {
 +			ncurrent++;
 +			this_device = currentsd[ncurrent];
 +		}
 +
 +		*this_device = *tmpdevice;
 +
 +		/* do not expose masked devices */
 +		if (MASKED_DEVICE(lunaddrbytes) &&
 +			i < nphysicals + (raid_ctlr_position == 0)) {
 +			if (h->hba_mode_enabled)
 +				dev_warn(&h->pdev->dev,
 +					"Masked physical device detected\n");
 +			this_device->expose_state = HPSA_DO_NOT_EXPOSE;
 +		} else {
 +			this_device->expose_state =
 +					HPSA_SG_ATTACH | HPSA_ULD_ATTACH;
 +		}
  
  		switch (this_device->devtype) {
  		case TYPE_ROM:
* Unmerged path drivers/scsi/hpsa.c
diff --git a/drivers/scsi/hpsa.h b/drivers/scsi/hpsa.h
index 3e07d020f3bd..4bff61f29191 100644
--- a/drivers/scsi/hpsa.h
+++ b/drivers/scsi/hpsa.h
@@ -260,6 +260,8 @@ struct ctlr_info {
 	struct list_head offline_device_list;
 	int	acciopath_status;
 	int	raid_offload_debug;
+	int     discovery_polling;
+	struct  ReportLUNdata *lastlogicals;
 	int	needs_abort_tags_swizzled;
 	struct workqueue_struct *resubmit_wq;
 	struct workqueue_struct *rescan_ctlr_wq;
