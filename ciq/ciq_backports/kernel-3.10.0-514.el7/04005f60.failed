timekeeping: Fix CLOCK_TAI timer/nanosleep delays

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author John Stultz <john.stultz@linaro.org>
commit 04005f6011e3b504cd4d791d9769f7cb9a3b2eae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/04005f60.failed

A think-o in the calculation of the monotonic -> tai time offset
results in CLOCK_TAI timers and nanosleeps to expire late (the
latency is ~2x the tai offset).

Fix this by adding the tai offset from the realtime offset instead
of subtracting.

	Cc: Sasha Levin <sasha.levin@oracle.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Prarit Bhargava <prarit@redhat.com>
	Cc: Richard Cochran <richardcochran@gmail.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: stable <stable@vger.kernel.org> #3.10+
	Signed-off-by: John Stultz <john.stultz@linaro.org>
(cherry picked from commit 04005f6011e3b504cd4d791d9769f7cb9a3b2eae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/timekeeping.c
diff --cc kernel/time/timekeeping.c
index 7bb86335a3a9,3f6a827680fa..000000000000
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@@ -71,22 -71,22 +71,28 @@@ static void tk_set_wall_to_mono(struct 
  	 * Verify consistency of: offset_real = -wall_to_monotonic
  	 * before modifying anything
  	 */
 -	set_normalized_timespec(&tmp, -tk->wall_to_monotonic.tv_sec,
 +	set_normalized_timespec64(&tmp, -tk->wall_to_monotonic.tv_sec,
  					-tk->wall_to_monotonic.tv_nsec);
 -	WARN_ON_ONCE(tk->offs_real.tv64 != timespec_to_ktime(tmp).tv64);
 +	WARN_ON_ONCE(tk->offs_real.tv64 != timespec64_to_ktime(tmp).tv64);
  	tk->wall_to_monotonic = wtm;
++<<<<<<< HEAD
 +	set_normalized_timespec64(&tmp, -wtm.tv_sec, -wtm.tv_nsec);
 +	tk->offs_real = timespec64_to_ktime(tmp);
 +	tk->offs_tai = ktime_sub(tk->offs_real, ktime_set(tk->tai_offset, 0));
++=======
+ 	set_normalized_timespec(&tmp, -wtm.tv_sec, -wtm.tv_nsec);
+ 	tk->offs_real = timespec_to_ktime(tmp);
+ 	tk->offs_tai = ktime_add(tk->offs_real, ktime_set(tk->tai_offset, 0));
++>>>>>>> 04005f6011e3 (timekeeping: Fix CLOCK_TAI timer/nanosleep delays)
  }
  
 -static void tk_set_sleep_time(struct timekeeper *tk, struct timespec t)
 +static void tk_set_sleep_time(struct timekeeper *tk, struct timespec64 t)
  {
  	/* Verify consistency before modifying */
 -	WARN_ON_ONCE(tk->offs_boot.tv64 != timespec_to_ktime(tk->total_sleep_time).tv64);
 +	WARN_ON_ONCE(tk->offs_boot.tv64 != timespec64_to_ktime(tk->total_sleep_time).tv64);
  
  	tk->total_sleep_time	= t;
 -	tk->offs_boot		= timespec_to_ktime(t);
 +	tk->offs_boot		= timespec64_to_ktime(t);
  }
  
  /**
* Unmerged path kernel/time/timekeeping.c
