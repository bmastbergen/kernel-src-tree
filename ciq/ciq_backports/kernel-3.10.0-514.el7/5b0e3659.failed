drm/i915/gen9: Always apply WaForceContextSaveRestoreNonCoherent

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] i915/gen9: Always apply WaForceContextSaveRestoreNonCoherent (Rob Clark) [1348329 1349064]
Rebuild_FUZZ: 96.77%
commit-author Mika Kuoppala <mika.kuoppala@linux.intel.com>
commit 5b0e3659296cc4a1484e60640ef10780194a195b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5b0e3659.failed

The revision id range for this workaround has changed. So apply
it to all revids on all gen9.

References: HSD#2134449
	Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
	Reviewed-by: Matthew Auld <matthew.auld@intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/1465309159-30531-6-git-send-email-mika.kuoppala@intel.com
(cherry picked from commit 5b0e3659296cc4a1484e60640ef10780194a195b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ringbuffer.c
diff --cc drivers/gpu/drm/i915/intel_ringbuffer.c
index 005b5e04de4d,7954fe0478b9..000000000000
--- a/drivers/gpu/drm/i915/intel_ringbuffer.c
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.c
@@@ -904,16 -905,26 +904,21 @@@ static int chv_init_workarounds(struct 
  	return 0;
  }
  
 -static int gen9_init_workarounds(struct intel_engine_cs *engine)
 +static int gen9_init_workarounds(struct intel_engine_cs *ring)
  {
++<<<<<<< HEAD
 +	struct drm_device *dev = ring->dev;
 +	struct drm_i915_private *dev_priv = dev->dev_private;
++=======
+ 	struct drm_i915_private *dev_priv = engine->i915;
+ 	int ret;
++>>>>>>> 5b0e3659296c (drm/i915/gen9: Always apply WaForceContextSaveRestoreNonCoherent)
  
 -	/* WaEnableLbsSlaRetryTimerDecrement:skl,bxt,kbl */
 -	I915_WRITE(BDW_SCRATCH1, I915_READ(BDW_SCRATCH1) |
 -		   GEN9_LBS_SLA_RETRY_TIMER_DECREMENT_ENABLE);
 -
 -	/* WaDisableKillLogic:bxt,skl,kbl */
 -	I915_WRITE(GAM_ECOCHK, I915_READ(GAM_ECOCHK) |
 -		   ECOCHK_DIS_TLB);
 -
 -	/* WaClearFlowControlGpgpuContextSave:skl,bxt,kbl */
 -	/* WaDisablePartialInstShootdown:skl,bxt,kbl */
 +	/* WaDisablePartialInstShootdown:skl */
  	WA_SET_BIT_MASKED(GEN8_ROW_CHICKEN,
 -			  FLOW_CONTROL_ENABLE |
  			  PARTIAL_INSTRUCTION_SHOOTDOWN_DISABLE);
  
 -	/* Syncing dependencies between camera and graphics:skl,bxt,kbl */
 +	/* Syncing dependencies between camera and graphics */
  	WA_SET_BIT_MASKED(HALF_SLICE_CHICKEN3,
  			  GEN9_DISABLE_OCL_OOB_SUPPRESS_LOGIC);
  
@@@ -959,6 -961,46 +964,49 @@@
  	WA_CLR_BIT_MASKED(GEN9_HALF_SLICE_CHICKEN5,
  			  GEN9_CCS_TLB_PREFETCH_ENABLE);
  
++<<<<<<< HEAD
++=======
+ 	/* WaDisableMaskBasedCammingInRCC:skl,bxt */
+ 	if (IS_SKL_REVID(dev_priv, SKL_REVID_C0, SKL_REVID_C0) ||
+ 	    IS_BXT_REVID(dev_priv, 0, BXT_REVID_A1))
+ 		WA_SET_BIT_MASKED(SLICE_ECO_CHICKEN0,
+ 				  PIXEL_MASK_CAMMING_DISABLE);
+ 
+ 	/* WaForceContextSaveRestoreNonCoherent:skl,bxt,kbl */
+ 	WA_SET_BIT_MASKED(HDC_CHICKEN0,
+ 			  HDC_FORCE_CONTEXT_SAVE_RESTORE_NON_COHERENT |
+ 			  HDC_FORCE_CSR_NON_COHERENT_OVR_DISABLE);
+ 
+ 	/* WaDisableSamplerPowerBypassForSOPingPong:skl,bxt,kbl */
+ 	if (IS_SKYLAKE(dev_priv) ||
+ 	    IS_KABYLAKE(dev_priv) ||
+ 	    IS_BXT_REVID(dev_priv, 0, BXT_REVID_B0))
+ 		WA_SET_BIT_MASKED(HALF_SLICE_CHICKEN3,
+ 				  GEN8_SAMPLER_POWER_BYPASS_DIS);
+ 
+ 	/* WaDisableSTUnitPowerOptimization:skl,bxt,kbl */
+ 	WA_SET_BIT_MASKED(HALF_SLICE_CHICKEN2, GEN8_ST_PO_DISABLE);
+ 
+ 	/* WaOCLCoherentLineFlush:skl,bxt,kbl */
+ 	I915_WRITE(GEN8_L3SQCREG4, (I915_READ(GEN8_L3SQCREG4) |
+ 				    GEN8_LQSC_FLUSH_COHERENT_LINES));
+ 
+ 	/* WaVFEStateAfterPipeControlwithMediaStateClear:skl,bxt */
+ 	ret = wa_ring_whitelist_reg(engine, GEN9_CTX_PREEMPT_REG);
+ 	if (ret)
+ 		return ret;
+ 
+ 	/* WaEnablePreemptionGranularityControlByUMD:skl,bxt,kbl */
+ 	ret= wa_ring_whitelist_reg(engine, GEN8_CS_CHICKEN1);
+ 	if (ret)
+ 		return ret;
+ 
+ 	/* WaAllowUMDToModifyHDCChicken1:skl,bxt,kbl */
+ 	ret = wa_ring_whitelist_reg(engine, GEN8_HDC_CHICKEN1);
+ 	if (ret)
+ 		return ret;
+ 
++>>>>>>> 5b0e3659296c (drm/i915/gen9: Always apply WaForceContextSaveRestoreNonCoherent)
  	return 0;
  }
  
* Unmerged path drivers/gpu/drm/i915/intel_ringbuffer.c
