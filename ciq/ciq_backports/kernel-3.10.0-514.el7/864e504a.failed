iscsi-target: use conn_transport->transport_type in text rsp

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Varun Prakash <varun@chelsio.com>
commit 864e504ae2bbdd7efcd6923075047a7a6b5ade02
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/864e504a.failed

Use conn_transport->transport_type instead of
ISCSI_TCP to build text response.

	Signed-off-by: Varun Prakash <varun@chelsio.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 864e504ae2bbdd7efcd6923075047a7a6b5ade02)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/iscsi/iscsi_target.c
diff --cc drivers/target/iscsi/iscsi_target.c
index f6d914e3ba95,348337c539f0..000000000000
--- a/drivers/target/iscsi/iscsi_target.c
+++ b/drivers/target/iscsi/iscsi_target.c
@@@ -3580,53 -3511,16 +3580,60 @@@ static int iscsit_send_text_rsp
  	struct iscsi_conn *conn)
  {
  	struct iscsi_text_rsp *hdr = (struct iscsi_text_rsp *)cmd->pdu;
 -	int text_length;
 +	struct kvec *iov;
 +	u32 tx_size = 0;
 +	int text_length, iov_count = 0, rc;
  
++<<<<<<< HEAD
 +	rc = iscsit_build_text_rsp(cmd, conn, hdr, ISCSI_TCP);
 +	if (rc < 0)
 +		return rc;
++=======
+ 	text_length = iscsit_build_text_rsp(cmd, conn, hdr,
+ 				conn->conn_transport->transport_type);
+ 	if (text_length < 0)
+ 		return text_length;
++>>>>>>> 864e504ae2bb (iscsi-target: use conn_transport->transport_type in text rsp)
 +
 +	text_length = rc;
 +	iov = &cmd->iov_misc[0];
 +	iov[iov_count].iov_base = cmd->pdu;
 +	iov[iov_count++].iov_len = ISCSI_HDR_LEN;
 +	iov[iov_count].iov_base	= cmd->buf_ptr;
 +	iov[iov_count++].iov_len = text_length;
 +
 +	tx_size += (ISCSI_HDR_LEN + text_length);
 +
 +	if (conn->conn_ops->HeaderDigest) {
 +		u32 *header_digest = (u32 *)&cmd->pdu[ISCSI_HDR_LEN];
 +
 +		iscsit_do_crypto_hash_buf(&conn->conn_tx_hash, hdr,
 +				ISCSI_HDR_LEN, 0, NULL, (u8 *)header_digest);
 +
 +		iov[0].iov_len += ISCSI_CRC_LEN;
 +		tx_size += ISCSI_CRC_LEN;
 +		pr_debug("Attaching CRC32 HeaderDigest for"
 +			" Text Response PDU 0x%08x\n", *header_digest);
 +	}
 +
 +	if (conn->conn_ops->DataDigest) {
 +		iscsit_do_crypto_hash_buf(&conn->conn_tx_hash,
 +				cmd->buf_ptr, text_length,
 +				0, NULL, (u8 *)&cmd->data_crc);
 +
 +		iov[iov_count].iov_base	= &cmd->data_crc;
 +		iov[iov_count++].iov_len = ISCSI_CRC_LEN;
 +		tx_size	+= ISCSI_CRC_LEN;
 +
 +		pr_debug("Attaching DataDigest for %u bytes of text"
 +			" data, CRC 0x%08x\n", text_length,
 +			cmd->data_crc);
 +	}
 +
 +	cmd->iov_misc_count = iov_count;
 +	cmd->tx_size = tx_size;
  
 -	return conn->conn_transport->iscsit_xmit_pdu(conn, cmd, NULL,
 -						     cmd->buf_ptr,
 -						     text_length);
 +	return 0;
  }
  
  void
* Unmerged path drivers/target/iscsi/iscsi_target.c
