mmc: core: Add 'card' to drive strength selection callback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit f168359efbb99d6f8591bb666d6510bb78df2d07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f168359e.failed

In preparation for supporting also eMMC drive strength,
add the 'card' as a parameter so that the callback can
distinguish different types of cards if necessary.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit f168359efbb99d6f8591bb666d6510bb78df2d07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mmc/host.h
diff --cc include/linux/mmc/host.h
index 4d8d14da1237,1369e54faeb7..000000000000
--- a/include/linux/mmc/host.h
+++ b/include/linux/mmc/host.h
@@@ -132,7 -129,12 +132,16 @@@ struct mmc_host_ops 
  
  	/* The tuning command opcode value is different for SD and eMMC cards */
  	int	(*execute_tuning)(struct mmc_host *host, u32 opcode);
++<<<<<<< HEAD
 +	int	(*select_drive_strength)(unsigned int max_dtr, int host_drv, int card_drv);
++=======
+ 
+ 	/* Prepare HS400 target operating frequency depending host driver */
+ 	int	(*prepare_hs400_tuning)(struct mmc_host *host, struct mmc_ios *ios);
+ 	int	(*select_drive_strength)(struct mmc_card *card,
+ 					 unsigned int max_dtr, int host_drv,
+ 					 int card_drv, int *drv_type);
++>>>>>>> f168359efbb9 (mmc: core: Add 'card' to drive strength selection callback)
  	void	(*hw_reset)(struct mmc_host *host);
  	void	(*card_event)(struct mmc_host *host);
  
diff --git a/drivers/mmc/core/sd.c b/drivers/mmc/core/sd.c
index da5e61e128a5..1364def7ce2d 100644
--- a/drivers/mmc/core/sd.c
+++ b/drivers/mmc/core/sd.c
@@ -430,7 +430,7 @@ static int sd_select_driver_type(struct mmc_card *card, u8 *status)
 	 * return what is possible given the options
 	 */
 	mmc_host_clk_hold(card->host);
-	drive_strength = card->host->ops->select_drive_strength(
+	drive_strength = card->host->ops->select_drive_strength(card,
 		card->sw_caps.uhs_max_dtr,
 		host_drv_type, card_drv_type);
 	mmc_host_clk_release(card->host);
diff --git a/drivers/mmc/core/sdio.c b/drivers/mmc/core/sdio.c
index d2f16e27144d..9166c89f5912 100644
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@ -446,7 +446,7 @@ static void sdio_select_driver_type(struct mmc_card *card)
 	 * information and let the hardware specific code
 	 * return what is possible given the options
 	 */
-	drive_strength = card->host->ops->select_drive_strength(
+	drive_strength = card->host->ops->select_drive_strength(card,
 		card->sw_caps.uhs_max_dtr,
 		host_drv_type, card_drv_type);
 
* Unmerged path include/linux/mmc/host.h
