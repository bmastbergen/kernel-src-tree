sunrpc: require svc_create callers to pass in meaningful shutdown routine

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jeff Layton <jlayton@primarydata.com>
commit 0b5707e4524eb817b7b02863887820d27b56910a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0b5707e4.failed

Currently all svc_create callers pass in NULL for the shutdown parm,
which then gets fixed up to be svc_rpcb_cleanup if the service uses
rpcbind.

Simplify this by instead having the the only caller that requires it
(lockd) pass in svc_rpcb_cleanup and get rid of the special casing.

	Signed-off-by: Jeff Layton <jlayton@primarydata.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 0b5707e4524eb817b7b02863887820d27b56910a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/lockd/svc.c
diff --cc fs/lockd/svc.c
index 0288d339fa06,e94c887da2d7..000000000000
--- a/fs/lockd/svc.c
+++ b/fs/lockd/svc.c
@@@ -346,11 -350,7 +346,15 @@@ static struct svc_serv *lockd_create_sv
  		printk(KERN_WARNING
  			"lockd_up: no pid, %d users??\n", nlmsvc_users);
  
++<<<<<<< HEAD
 +	if (!nlm_timeout)
 +		nlm_timeout = LOCKD_DFLT_TIMEO;
 +	nlmsvc_timeout = nlm_timeout * HZ;
 +
 +	serv = svc_create(&nlmsvc_program, LOCKD_BUFSIZE, NULL);
++=======
+ 	serv = svc_create(&nlmsvc_program, LOCKD_BUFSIZE, svc_rpcb_cleanup);
++>>>>>>> 0b5707e4524e (sunrpc: require svc_create callers to pass in meaningful shutdown routine)
  	if (!serv) {
  		printk(KERN_WARNING "lockd_up: create service failed\n");
  		return ERR_PTR(-ENOMEM);
* Unmerged path fs/lockd/svc.c
diff --git a/net/sunrpc/svc.c b/net/sunrpc/svc.c
index 942c67131e18..8a5c2645bf29 100644
--- a/net/sunrpc/svc.c
+++ b/net/sunrpc/svc.c
@@ -482,9 +482,6 @@ __svc_create(struct svc_program *prog, unsigned int bufsize, int npools,
 		spin_lock_init(&pool->sp_lock);
 	}
 
-	if (svc_uses_rpcbind(serv) && (!serv->sv_shutdown))
-		serv->sv_shutdown = svc_rpcb_cleanup;
-
 	return serv;
 }
 
