drivers: usb: fsl: Modify phy clk valid bit checking

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [include] usb: fsl: Modify phy clk valid bit checking (Torez Smith) [1303955]
Rebuild_FUZZ: 90.53%
commit-author Nikhil Badola <nikhil.badola@freescale.com>
commit f4fdfaa280a284be8a056d6840cdbbf42c05bf95
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f4fdfaa2.failed

Phy_clk_valid bit is checked only when the boolean
property phy-clk-valid in present in usb node device tree.
This property is added to the usb node via device tree fixup.

	Signed-off-by: Nikhil Badola <nikhil.badola@freescale.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit f4fdfaa280a284be8a056d6840cdbbf42c05bf95)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/ehci-fsl.c
diff --cc drivers/usb/host/ehci-fsl.c
index 753ba1dfbea8,05ebe3dcd618..000000000000
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@@ -271,13 -230,14 +271,24 @@@ static int ehci_fsl_setup_phy(struct us
  		break;
  	}
  
++<<<<<<< HEAD
 +	if (pdata->have_sysif_regs &&
 +	    pdata->controller_ver > FSL_USB_VER_1_6 &&
 +	    (phy_mode == FSL_USB2_PHY_ULPI)) {
 +		/* check PHY_CLK_VALID to get phy clk valid */
 +		if (!spin_event_timeout(in_be32(non_ehci + FSL_SOC_USB_CTRL) &
 +				PHY_CLK_VALID, FSL_USB_PHY_CLK_TIMEOUT, 0)) {
 +			printk(KERN_WARNING "fsl-ehci: USB PHY clock invalid\n");
++=======
+ 	/*
+ 	 * check PHY_CLK_VALID to determine phy clock presence before writing
+ 	 * to portsc
+ 	 */
+ 	if (pdata->check_phy_clk_valid) {
+ 		if (!(in_be32(non_ehci + FSL_SOC_USB_CTRL) & PHY_CLK_VALID)) {
+ 			dev_warn(hcd->self.controller,
+ 				 "USB PHY clock invalid\n");
++>>>>>>> f4fdfaa280a2 (drivers: usb: fsl: Modify phy clk valid bit checking)
  			return -EINVAL;
  		}
  	}
* Unmerged path drivers/usb/host/ehci-fsl.c
diff --git a/drivers/usb/host/fsl-mph-dr-of.c b/drivers/usb/host/fsl-mph-dr-of.c
index 467bf6d6460d..d552cfd7ec80 100644
--- a/drivers/usb/host/fsl-mph-dr-of.c
+++ b/drivers/usb/host/fsl-mph-dr-of.c
@@ -214,6 +214,15 @@ static int fsl_usb2_mph_dr_of_probe(struct platform_device *ofdev)
 	else
 		pdata->has_fsl_erratum_a007792 = 0;
 
+	/*
+	 * Determine whether phy_clk_valid needs to be checked
+	 * by reading property in device tree
+	 */
+	if (of_get_property(np, "phy-clk-valid", NULL))
+		pdata->check_phy_clk_valid = 1;
+	else
+		pdata->check_phy_clk_valid = 0;
+
 	if (pdata->have_sysif_regs) {
 		if (pdata->controller_ver < 0) {
 			dev_warn(&ofdev->dev, "Could not get controller version\n");
diff --git a/include/linux/fsl_devices.h b/include/linux/fsl_devices.h
index 457232accf1a..e27046905578 100644
--- a/include/linux/fsl_devices.h
+++ b/include/linux/fsl_devices.h
@@ -94,6 +94,7 @@ struct fsl_usb2_platform_data {
 	unsigned	suspended:1;
 	unsigned	already_suspended:1;
 	unsigned        has_fsl_erratum_a007792:1;
+	unsigned        check_phy_clk_valid:1;
 
 	/* register save area for suspend/resume */
 	u32		pm_command;
