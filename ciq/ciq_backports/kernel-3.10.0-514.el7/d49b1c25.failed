mm/zram: correct ZRAM_ZERO flag bit position

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [block] zram: correct ZRAM_ZERO flag bit position (Seth Jennings) [1244276]
Rebuild_FUZZ: 96.47%
commit-author Mahendran Ganesh <opensource.ganesh@gmail.com>
commit d49b1c254c997195872a9e8913660a788298921e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d49b1c25.failed

In struct zram_table_entry, the element *value* contains obj size and obj
zram flags.  Bit 0 to bit (ZRAM_FLAG_SHIFT - 1) represent obj size, and
bit ZRAM_FLAG_SHIFT to the highest bit of unsigned long represent obj
zram_flags.  So the first zram flag(ZRAM_ZERO) should be from
ZRAM_FLAG_SHIFT instead of (ZRAM_FLAG_SHIFT + 1).

This patch fixes this cosmetic issue.

Also fix a typo, "page in now accessed" -> "page is now accessed"

	Signed-off-by: Mahendran Ganesh <opensource.ganesh@gmail.com>
	Acked-by: Minchan Kim <minchan@kernel.org>
	Acked-by: Weijie Yang <weijie.yang@samsung.com>
	Acked-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Cc: Nitin Gupta <ngupta@vflare.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit d49b1c254c997195872a9e8913660a788298921e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/zram/zram_drv.h
diff --cc drivers/block/zram/zram_drv.h
index 7d655c176e09,b05a816b09ac..000000000000
--- a/drivers/block/zram/zram_drv.h
+++ b/drivers/block/zram/zram_drv.h
@@@ -50,10 -50,24 +50,15 @@@ static const size_t max_zpage_size = PA
  #define ZRAM_SECTOR_PER_LOGICAL_BLOCK	\
  	(1 << (ZRAM_LOGICAL_BLOCK_SHIFT - SECTOR_SHIFT))
  
 -
 -/*
 - * The lower ZRAM_FLAG_SHIFT bits of table.value is for
 - * object size (excluding header), the higher bits is for
 - * zram_pageflags.
 - *
 - * zram is mainly used for memory efficiency so we want to keep memory
 - * footprint small so we can squeeze size and flags into a field.
 - * The lower ZRAM_FLAG_SHIFT bits is for object size (excluding header),
 - * the higher bits is for zram_pageflags.
 - */
 -#define ZRAM_FLAG_SHIFT 24
 -
 -/* Flags for zram pages (table[page_no].value) */
 +/* Flags for zram pages (table[page_no].flags) */
  enum zram_pageflags {
  	/* Page consists entirely of zeros */
++<<<<<<< HEAD
 +	ZRAM_ZERO,
++=======
+ 	ZRAM_ZERO = ZRAM_FLAG_SHIFT,
+ 	ZRAM_ACCESS,	/* page is now accessed */
++>>>>>>> d49b1c254c99 (mm/zram: correct ZRAM_ZERO flag bit position)
  
  	__NR_ZRAM_PAGEFLAGS,
  };
* Unmerged path drivers/block/zram/zram_drv.h
