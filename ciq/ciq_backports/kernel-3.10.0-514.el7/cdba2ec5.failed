time: Expose getrawmonotonic64 for in-kernel uses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author John Stultz <john.stultz@linaro.org>
commit cdba2ec538d9843c42cac15ff4ec54dc2ac53f8a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/cdba2ec5.failed

Adds a timespec64 based getrawmonotonic64() implementation
that can be used as we convert internal users of
getrawmonotonic away from using timespecs.

	Signed-off-by: John Stultz <john.stultz@linaro.org>
(cherry picked from commit cdba2ec538d9843c42cac15ff4ec54dc2ac53f8a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/timekeeping.h
#	kernel/time/timekeeping.c
diff --cc kernel/time/timekeeping.c
index f91dfde5f28b,2e5f63212269..000000000000
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@@ -714,29 -894,14 +714,34 @@@ int timekeeping_notify(struct clocksour
  }
  
  /**
++<<<<<<< HEAD
 + * ktime_get_real - get the real (wall-) time in ktime_t format
 + *
 + * returns the time in ktime_t format
 + */
 +ktime_t ktime_get_real(void)
 +{
 +	struct timespec64 now;
 +
 +	getnstimeofday64(&now);
 +
 +	return timespec64_to_ktime(now);
 +}
 +EXPORT_SYMBOL_GPL(ktime_get_real);
 +
 +/**
 + * getrawmonotonic - Returns the raw monotonic time in a timespec
 + * @ts:		pointer to the timespec to be set
++=======
+  * getrawmonotonic64 - Returns the raw monotonic time in a timespec
+  * @ts:		pointer to the timespec64 to be set
++>>>>>>> cdba2ec538d9 (time: Expose getrawmonotonic64 for in-kernel uses)
   *
   * Returns the raw monotonic time (completely un-modified by ntp)
   */
- void getrawmonotonic(struct timespec *ts)
+ void getrawmonotonic64(struct timespec64 *ts)
  {
 -	struct timekeeper *tk = &tk_core.timekeeper;
 +	struct timekeeper *tk = &timekeeper;
  	struct timespec64 ts64;
  	unsigned long seq;
  	s64 nsecs;
@@@ -746,12 -911,13 +751,13 @@@
  		nsecs = timekeeping_get_ns_raw(tk);
  		ts64 = tk->raw_time;
  
 -	} while (read_seqcount_retry(&tk_core.seq, seq));
 +	} while (read_seqcount_retry(&timekeeper_seq, seq));
  
  	timespec64_add_ns(&ts64, nsecs);
- 	*ts = timespec64_to_timespec(ts64);
+ 	*ts = ts64;
  }
- EXPORT_SYMBOL(getrawmonotonic);
+ EXPORT_SYMBOL(getrawmonotonic64);
+ 
  
  /**
   * timekeeping_valid_for_hres - Check if timekeeping is suitable for hres
* Unmerged path include/linux/timekeeping.h
* Unmerged path include/linux/timekeeping.h
* Unmerged path kernel/time/timekeeping.c
