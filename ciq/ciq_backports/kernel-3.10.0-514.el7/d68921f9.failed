x86/smp/boot: Add cmdline "cpu_init_udelay=N" to specify cpu_up() delay

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] smpboot: Add cmdline "cpu_init_udelay=N" to specify cpu_up() delay (Steve Best) [1365413]
Rebuild_FUZZ: 96.35%
commit-author Len Brown <len.brown@intel.com>
commit d68921f9bd148359e6d01c84aaa2e32bfbd82970
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d68921f9.failed

No change to default behavior.

Replace the hard-coded mdelay(10) in cpu_up() with a variable
udelay, that is set to a defined default -- rather than a magic
number.

Add a boot-time override, "cpu_init_udelay=N"

	Signed-off-by: Len Brown <len.brown@intel.com>
	Cc: Alan Cox <alan@linux.intel.com>
	Cc: Arjan van de Ven <arjan@linux.intel.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jan H. Sch√∂nherr <jschoenh@amazon.de>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/2fe8e6c798e8def271122f62df9bbf58dc283e2a.1431379433.git.len.brown@intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit d68921f9bd148359e6d01c84aaa2e32bfbd82970)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/smpboot.c
diff --cc arch/x86/kernel/smpboot.c
index 7dbc496614e0,0629a8e513af..000000000000
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@@ -549,22 -601,34 +570,26 @@@ wakeup_secondary_cpu_via_init(int phys_
  	apic_icr_write(APIC_INT_LEVELTRIG | APIC_INT_ASSERT | APIC_DM_INIT,
  		       phys_apicid);
  
 -	if (!cpu_has_x2apic) {
 -		pr_debug("Waiting for send to finish...\n");
 -		send_status = safe_apic_wait_icr_idle();
 +	pr_debug("Waiting for send to finish...\n");
 +	send_status = safe_apic_wait_icr_idle();
  
++<<<<<<< HEAD
 +	mdelay(10);
++=======
+ 		mdelay(init_udelay);
++>>>>>>> d68921f9bd14 (x86/smp/boot: Add cmdline "cpu_init_udelay=N" to specify cpu_up() delay)
  
 -		pr_debug("Deasserting INIT\n");
 +	pr_debug("Deasserting INIT\n");
  
 -		/* Target chip */
 -		/* Send IPI */
 -		apic_icr_write(APIC_INT_LEVELTRIG | APIC_DM_INIT, phys_apicid);
 +	/* Target chip */
 +	/* Send IPI */
 +	apic_icr_write(APIC_INT_LEVELTRIG | APIC_DM_INIT, phys_apicid);
  
 -		pr_debug("Waiting for send to finish...\n");
 -		send_status = safe_apic_wait_icr_idle();
 +	pr_debug("Waiting for send to finish...\n");
 +	send_status = safe_apic_wait_icr_idle();
  
 -		mb();
 -		atomic_set(&init_deasserted, 1);
 -	} else if (tboot_enabled()) {
 -		/*
 -		 * With tboot AP is actually spinning in a mini-guest before
 -		 * receiving INIT. Upon receiving INIT ipi, AP need time to
 -		 * VMExit, update VMCS to tracking SIPIs and VMResume.
 -		 *
 -		 * While AP is in root mode handling the INIT the CPU will drop
 -		 * any SIPIs
 -		 */
 -		udelay(10);
 -	}
 +	mb();
 +	atomic_set(&init_deasserted, 1);
  
  	/*
  	 * Should we send STARTUP IPIs ?
diff --git a/Documentation/kernel-parameters.txt b/Documentation/kernel-parameters.txt
index a4c9e836a731..0499ccab8b06 100644
--- a/Documentation/kernel-parameters.txt
+++ b/Documentation/kernel-parameters.txt
@@ -617,6 +617,12 @@ bytes respectively. Such letter suffixes can also be entirely omitted.
 	cpuidle.off=1	[CPU_IDLE]
 			disable the cpuidle sub-system
 
+	cpu_init_udelay=N
+			[X86] Delay for N microsec between assert and de-assert
+			of APIC INIT to start processors.  This delay occurs
+			on every CPU online, such as boot, and resume from suspend.
+			Default: 10000
+
 	cpcihp_generic=	[HW,PCI] Generic port I/O CompactPCI driver
 			Format:
 			<first_slot>,<last_slot>,<port>,<enum_bit>[,<debug>]
* Unmerged path arch/x86/kernel/smpboot.c
