thinkpad_acpi: Add support for HKEY version 0x200

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dennis Wassenberg <dennis.wassenberg@secunet.com>
commit 0118c2d3eac0545d4095877e5a015b5dc763b3c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0118c2d3.failed

Lenovo Thinkpad devices T460, T460s, T460p, T560, X260 use
HKEY version 0x200 without adaptive keyboard.

HKEY version 0x200 has method MHKA with one parameter value.
Passing parameter value 1 will get hotkey_all_mask (the same like
HKEY version 0x100 without parameter). Passing parameter value 2 to
MHKA method will retrieve hotkey_all_adaptive_mask. If 0 is returned in
that case there is no adaptive keyboard available.

	Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
	Signed-off-by: Lyude <cpaul@redhat.com>
	Tested-by: Lyude <cpaul@redhat.com>
	Tested-by: Marco Trevisan <marco@ubuntu.com>
	Acked-by: Henrique de Moraes Holschuh <hmh@hmh.eng.br>
[dvhart: Keep MHKA error string on one line in new and existing pr_err calls]
	Signed-off-by: Darren Hart <dvhart@linux.intel.com>
(cherry picked from commit 0118c2d3eac0545d4095877e5a015b5dc763b3c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/thinkpad_acpi.c
diff --cc drivers/platform/x86/thinkpad_acpi.c
index 7dbf5f0ce883,b65ce7519411..000000000000
--- a/drivers/platform/x86/thinkpad_acpi.c
+++ b/drivers/platform/x86/thinkpad_acpi.c
@@@ -2745,9 -2741,19 +2746,20 @@@ static ssize_t hotkey_all_mask_show(str
  				hotkey_all_mask | hotkey_source_mask);
  }
  
 -static DEVICE_ATTR_RO(hotkey_all_mask);
 +static struct device_attribute dev_attr_hotkey_all_mask =
 +	__ATTR(hotkey_all_mask, S_IRUGO, hotkey_all_mask_show, NULL);
  
+ /* sysfs hotkey all_mask ----------------------------------------------- */
+ static ssize_t hotkey_adaptive_all_mask_show(struct device *dev,
+ 			   struct device_attribute *attr,
+ 			   char *buf)
+ {
+ 	return snprintf(buf, PAGE_SIZE, "0x%08x\n",
+ 			hotkey_adaptive_all_mask | hotkey_source_mask);
+ }
+ 
+ static DEVICE_ATTR_RO(hotkey_adaptive_all_mask);
+ 
  /* sysfs hotkey recommended_mask --------------------------------------- */
  static ssize_t hotkey_recommended_mask_show(struct device *dev,
  					    struct device_attribute *attr,
@@@ -2958,11 -2993,11 +2970,12 @@@ static struct attribute *hotkey_attribu
  	&dev_attr_hotkey_enable.attr,
  	&dev_attr_hotkey_bios_enabled.attr,
  	&dev_attr_hotkey_bios_mask.attr,
 -	&dev_attr_wakeup_reason.attr,
 -	&dev_attr_wakeup_hotunplug_complete.attr,
 +	&dev_attr_hotkey_report_mode.attr,
 +	&dev_attr_hotkey_wakeup_reason.attr,
 +	&dev_attr_hotkey_wakeup_hotunplug_complete.attr,
  	&dev_attr_hotkey_mask.attr,
  	&dev_attr_hotkey_all_mask.attr,
+ 	&dev_attr_hotkey_adaptive_all_mask.attr,
  	&dev_attr_hotkey_recommended_mask.attr,
  #ifdef CONFIG_THINKPAD_ACPI_HOTKEY_POLL
  	&dev_attr_hotkey_source_mask.attr,
@@@ -3299,15 -3334,6 +3312,18 @@@ static int __init hotkey_init(struct ib
  	if (!tp_features.hotkey)
  		return 1;
  
++<<<<<<< HEAD
 +	/*
 +	 * Check if we have an adaptive keyboard, like on the
 +	 * Lenovo Carbon X1 2014 (2nd Gen).
 +	 */
 +	if (acpi_evalf(hkey_handle, &hkeyv, "MHKV", "qd")) {
 +		if ((hkeyv >> 8) == 2)
 +			tp_features.has_adaptive_kbd = true;
 +	}
 +
++=======
++>>>>>>> 0118c2d3eac0 (thinkpad_acpi: Add support for HKEY version 0x200)
  	quirks = tpacpi_check_quirks(tpacpi_hotkey_qtable,
  				     ARRAY_SIZE(tpacpi_hotkey_qtable));
  
* Unmerged path drivers/platform/x86/thinkpad_acpi.c
