PCI: Tolerate hierarchies with no Root Port

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [pci] Tolerate hierarchies with no Root Port (Myron Stowe) [1334107]
Rebuild_FUZZ: 93.83%
commit-author Yijing Wang <wangyijing@huawei.com>
commit b35b1df5e6c213b0b0322e6c231b7111efe4a390
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b35b1df5.failed

We should not assume any particular hardware topology.  Commit d0751b98dfa3
("PCI: Add dev->has_secondary_link to track downstream PCIe links") relied
on the assumption that every PCIe hierarchy is rooted at a Root Port.  But
we can't rely on any assumption about what hardware we will find; we just
have to deal with the world as it is.

On some platforms, PCIe devices (endpoints, switch upstream ports, etc.)
appear directly on the root bus, and there is no Root Port in the PCI bus
hierarchy.  For example, Meelis observed these top-level devices on a
Sparc V245:

  0000:02:00.0 PCI bridge to [bus 03-0d]    Switch Upstream Port
  0001:02:00.0 PCI bridge to [bus 03]       PCIe to PCI/PCI-X Bridge

These devices *look* like they have links going upstream, but there really
are no upstream devices.

In set_pcie_port_type(), we used the parent device to figure out which side
of a switch port has a link, so if the parent device did not exist, we
dereferenced a NULL parent pointer.

Check whether the parent device exists before dereferencing it.

Meelis observed this oops on Sparc V245 and T2000.  Ben Herrenschmidt says
this is also possible on IBM PowerVM guests on PowerPC.

[bhelgaas: changelog, comment]
Link: http://lkml.kernel.org/r/alpine.LRH.2.20.1508122118210.18637@math.ut.ee
	Reported-by: Meelis Roos <mroos@linux.ee>
	Tested-by: Meelis Roos <mroos@linux.ee>
	Signed-off-by: Yijing Wang <wangyijing@huawei.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b35b1df5e6c213b0b0322e6c231b7111efe4a390)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/probe.c
diff --cc drivers/pci/probe.c
index 0a823b6405fc,b978bbfe044c..000000000000
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@@ -1025,6 -984,27 +1025,30 @@@ void set_pcie_port_type(struct pci_dev 
  	pdev->pcie_flags_reg = reg16;
  	pci_read_config_word(pdev, pos + PCI_EXP_DEVCAP, &reg16);
  	pdev->pcie_mpss = reg16 & PCI_EXP_DEVCAP_PAYLOAD;
++<<<<<<< HEAD
++=======
+ 
+ 	/*
+ 	 * A Root Port is always the upstream end of a Link.  No PCIe
+ 	 * component has two Links.  Two Links are connected by a Switch
+ 	 * that has a Port on each Link and internal logic to connect the
+ 	 * two Ports.
+ 	 */
+ 	type = pci_pcie_type(pdev);
+ 	if (type == PCI_EXP_TYPE_ROOT_PORT)
+ 		pdev->has_secondary_link = 1;
+ 	else if (type == PCI_EXP_TYPE_UPSTREAM ||
+ 		 type == PCI_EXP_TYPE_DOWNSTREAM) {
+ 		parent = pci_upstream_bridge(pdev);
+ 
+ 		/*
+ 		 * Usually there's an upstream device (Root Port or Switch
+ 		 * Downstream Port), but we can't assume one exists.
+ 		 */
+ 		if (parent && !parent->has_secondary_link)
+ 			pdev->has_secondary_link = 1;
+ 	}
++>>>>>>> b35b1df5e6c2 (PCI: Tolerate hierarchies with no Root Port)
  }
  
  void set_pcie_hotplug_bridge(struct pci_dev *pdev)
* Unmerged path drivers/pci/probe.c
