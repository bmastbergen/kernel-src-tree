HID: multitouch: Add support for button type usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hid] multitouch: Add support for button type usage (Benjamin Tissoires) [1311883]
Rebuild_FUZZ: 94.74%
commit-author Seth Forshee <seth.forshee@canonical.com>
commit 2c6e0277e1eab3df5db81c59e408b7b1c14b1b72
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2c6e0277.failed

According to [1], Windows Precision Touchpad devices must supply
a button type usage in the device capabilities feature report. A
value of 0 indicates that the device contains a depressible
button (i.e. it's a click-pad) whereas a value of 1 indicates
a non-depressible button. Add support for this usage and set
INPUT_PROP_BUTTONPAD on the touchpad input device whenever a
depressible button is present.

[1] https://msdn.microsoft.com/en-us/library/windows/hardware/dn467314(v=vs.85).aspx

	Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
	Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 2c6e0277e1eab3df5db81c59e408b7b1c14b1b72)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/hid-multitouch.c
diff --cc drivers/hid/hid-multitouch.c
index cc1de6a24bc0,55e89b16b3da..000000000000
--- a/drivers/hid/hid-multitouch.c
+++ b/drivers/hid/hid-multitouch.c
@@@ -341,18 -338,15 +344,30 @@@ static void mt_feature_mapping(struct h
  			td->maxcontacts = td->mtclass.maxcontacts;
  
  		break;
++<<<<<<< HEAD
 +	case 0xff0000c5:
 +		if (field->report_count == 256 && field->report_size == 8) {
 +			/* Win 8 devices need special quirks */
 +			__s32 *quirks = &td->mtclass.quirks;
 +			*quirks |= MT_QUIRK_ALWAYS_VALID;
 +			*quirks |= MT_QUIRK_IGNORE_DUPLICATES;
 +			*quirks |= MT_QUIRK_HOVERING;
 +			*quirks |= MT_QUIRK_CONTACT_CNT_ACCURATE;
 +			*quirks &= ~MT_QUIRK_NOT_SEEN_MEANS_UP;
 +			*quirks &= ~MT_QUIRK_VALID_IS_INRANGE;
 +			*quirks &= ~MT_QUIRK_VALID_IS_CONFIDENCE;
 +		}
++=======
+ 	case HID_DG_BUTTONTYPE:
+ 		if (usage->usage_index >= field->report_count) {
+ 			dev_err(&hdev->dev, "HID_DG_BUTTONTYPE out of range\n");
+ 			break;
+ 		}
+ 
+ 		if (field->value[usage->usage_index] == MT_BUTTONTYPE_CLICKPAD)
+ 			td->is_buttonpad = true;
+ 
++>>>>>>> 2c6e0277e1ea (HID: multitouch: Add support for button type usage)
  		break;
  	}
  }
diff --git a/drivers/hid/hid-debug.c b/drivers/hid/hid-debug.c
index 1712aedb4c6b..ec387e438212 100644
--- a/drivers/hid/hid-debug.c
+++ b/drivers/hid/hid-debug.c
@@ -165,6 +165,7 @@ static const struct hid_usage_entry hid_usage_table[] = {
     {0, 0x53, "DeviceIndex"},
     {0, 0x54, "ContactCount"},
     {0, 0x55, "ContactMaximumNumber"},
+    {0, 0x59, "ButtonType"},
     {0, 0x5A, "SecondaryBarrelSwitch"},
     {0, 0x5B, "TransducerSerialNumber"},
   { 15, 0, "PhysicalInterfaceDevice" },
* Unmerged path drivers/hid/hid-multitouch.c
diff --git a/include/linux/hid.h b/include/linux/hid.h
index c1713140b070..d74dafd15dc4 100644
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -238,6 +238,7 @@ struct hid_item {
 #define HID_DG_DEVICEINDEX	0x000d0053
 #define HID_DG_CONTACTCOUNT	0x000d0054
 #define HID_DG_CONTACTMAX	0x000d0055
+#define HID_DG_BUTTONTYPE	0x000d0059
 #define HID_DG_BARRELSWITCH2	0x000d005a
 #define HID_DG_TOOLSERIALNUMBER	0x000d005b
 
