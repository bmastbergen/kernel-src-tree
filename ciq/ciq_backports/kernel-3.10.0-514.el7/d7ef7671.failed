intel_idle: Update support for Silvermont Core in Baytrail SOC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Len Brown <len.brown@intel.com>
commit d7ef76717322c8e2df7d4360b33faa9466cb1a0d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d7ef7671.failed

On some Silvermont-Core/Baytrail-SOC systems,
C1E latency is higher than original specifications.
Although C1E is still enumerated in CPUID.MWAIT.EDX,
we delete the state from intel_idle to avoid latency impact.

Under some conditions, the latency of the C6N-BYT and C6S-BYT states
may exceed the specified values of 40 and 140 usec, respectively.
Increase those values to 300 and 500 usec; to assure
that the hardware does not violate constraints that may be set
by the Linux PM_QOS sub-system.

Also increase the C7-BYT target residency to 4.0 ms from 1.5 ms.

	Signed-off-by: Len Brown <len.brown@intel.com>
	Cc: Kumar P Mahesh <mahesh.kumar.p@intel.com>
	Cc: Alan Cox <alan@linux.intel.com>
	Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
	Cc: <stable@vger.kernel.org>
(cherry picked from commit d7ef76717322c8e2df7d4360b33faa9466cb1a0d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/idle/intel_idle.c
diff --cc drivers/idle/intel_idle.c
index ebe5090f66aa,44d1d7920202..000000000000
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@@ -188,10 -199,56 +188,60 @@@ static struct cpuidle_state snb_cstates
  	{
  		.name = "C7-SNB",
  		.desc = "MWAIT 0x30",
 -		.flags = MWAIT2flg(0x30) | CPUIDLE_FLAG_TLB_FLUSHED,
 +		.flags = MWAIT2flg(0x30) | CPUIDLE_FLAG_TIME_VALID | CPUIDLE_FLAG_TLB_FLUSHED,
  		.exit_latency = 109,
  		.target_residency = 345,
++<<<<<<< HEAD
 +		.enter = &intel_idle },
++=======
+ 		.enter = &intel_idle,
+ 		.enter_freeze = intel_idle_freeze, },
+ 	{
+ 		.enter = NULL }
+ };
+ 
+ static struct cpuidle_state byt_cstates[] = {
+ 	{
+ 		.name = "C1-BYT",
+ 		.desc = "MWAIT 0x00",
+ 		.flags = MWAIT2flg(0x00),
+ 		.exit_latency = 1,
+ 		.target_residency = 1,
+ 		.enter = &intel_idle,
+ 		.enter_freeze = intel_idle_freeze, },
+ 	{
+ 		.name = "C6N-BYT",
+ 		.desc = "MWAIT 0x58",
+ 		.flags = MWAIT2flg(0x58) | CPUIDLE_FLAG_TLB_FLUSHED,
+ 		.exit_latency = 300,
+ 		.target_residency = 275,
+ 		.enter = &intel_idle,
+ 		.enter_freeze = intel_idle_freeze, },
+ 	{
+ 		.name = "C6S-BYT",
+ 		.desc = "MWAIT 0x52",
+ 		.flags = MWAIT2flg(0x52) | CPUIDLE_FLAG_TLB_FLUSHED,
+ 		.exit_latency = 500,
+ 		.target_residency = 560,
+ 		.enter = &intel_idle,
+ 		.enter_freeze = intel_idle_freeze, },
+ 	{
+ 		.name = "C7-BYT",
+ 		.desc = "MWAIT 0x60",
+ 		.flags = MWAIT2flg(0x60) | CPUIDLE_FLAG_TLB_FLUSHED,
+ 		.exit_latency = 1200,
+ 		.target_residency = 4000,
+ 		.enter = &intel_idle,
+ 		.enter_freeze = intel_idle_freeze, },
+ 	{
+ 		.name = "C7S-BYT",
+ 		.desc = "MWAIT 0x64",
+ 		.flags = MWAIT2flg(0x64) | CPUIDLE_FLAG_TLB_FLUSHED,
+ 		.exit_latency = 10000,
+ 		.target_residency = 20000,
+ 		.enter = &intel_idle,
+ 		.enter_freeze = intel_idle_freeze, },
++>>>>>>> d7ef76717322 (intel_idle: Update support for Silvermont Core in Baytrail SOC)
  	{
  		.enter = NULL }
  };
* Unmerged path drivers/idle/intel_idle.c
