nvme: delete dev from dev_list in nvme_reset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 201cf1ecdfe5ea2774cbb21d4214c98ec8b418de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/201cf1ec.failed

Device resets need to delete the device from the device list before
kicking of the reset an re-probe, otherwise we get the device added
to the list twice.  nvme_reset is the only side missing this deletion
at the moment, and this patch adds it.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 201cf1ecdfe5ea2774cbb21d4214c98ec8b418de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index f5099f908371,be35b1d18854..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2968,7 -3089,7 +2968,11 @@@ static int nvme_reset(struct nvme_dev *
  
  	spin_lock(&dev_list_lock);
  	if (!work_pending(&dev->reset_work)) {
++<<<<<<< HEAD
 +		PREPARE_WORK(&dev->reset_work, nvme_reset_failed_dev);
++=======
+ 		list_del_init(&dev->node);
++>>>>>>> 201cf1ecdfe5 (nvme: delete dev from dev_list in nvme_reset)
  		queue_work(nvme_workq, &dev->reset_work);
  		ret = 0;
  	}
* Unmerged path drivers/block/nvme-core.c
