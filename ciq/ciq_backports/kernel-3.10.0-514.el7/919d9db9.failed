netlink: Fix netlink_insert EADDRINUSE error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit 919d9db9521862d01712d9be25cd6ebfcc353eed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/919d9db9.failed

The patch c5adde9468b0714a051eac7f9666f23eb10b61f7 ("netlink:
eliminate nl_sk_hash_lock") introduced a bug where the EADDRINUSE
error has been replaced by ENOMEM.  This patch rectifies that
problem.

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
	Acked-by: Ying Xue <ying.xue@windriver.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 919d9db9521862d01712d9be25cd6ebfcc353eed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netlink/af_netlink.c
diff --cc net/netlink/af_netlink.c
index 0a1709dfa494,7a94185bde6b..000000000000
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@@ -1067,11 -1050,9 +1067,11 @@@ netlink_update_listeners(struct sock *s
  static int netlink_insert(struct sock *sk, struct net *net, u32 portid)
  {
  	struct netlink_table *table = &nl_table[sk->sk_protocol];
- 	int err = -EADDRINUSE;
+ 	int err;
  
 -	lock_sock(sk);
 +	mutex_lock(&nl_sk_hash_lock);
 +	if (__netlink_lookup(table, portid, net))
 +		goto err;
  
  	err = -EBUSY;
  	if (nlk_sk(sk)->portid)
@@@ -1083,10 -1065,15 +1083,20 @@@
  
  	nlk_sk(sk)->portid = portid;
  	sock_hold(sk);
++<<<<<<< HEAD
 +	rhashtable_insert(&table->hash, &nlk_sk(sk)->node);
 +	err = 0;
++=======
+ 
+ 	err = 0;
+ 	if (!__netlink_insert(table, sk, net)) {
+ 		err = -EADDRINUSE;
+ 		sock_put(sk);
+ 	}
+ 
++>>>>>>> 919d9db95218 (netlink: Fix netlink_insert EADDRINUSE error)
  err:
 -	release_sock(sk);
 +	mutex_unlock(&nl_sk_hash_lock);
  	return err;
  }
  
* Unmerged path net/netlink/af_netlink.c
