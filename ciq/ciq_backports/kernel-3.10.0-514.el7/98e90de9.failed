mmc: host: switch OF parser to use gpio descriptors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] host: switch OF parser to use gpio descriptors (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 94.85%
commit-author Linus Walleij <linus.walleij@linaro.org>
commit 98e90de99a0c43bd434da814c882c4332441871e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/98e90de9.failed

This switches the central MMC OF parser to use gpio descriptors
instead of grabbing GPIOs explicitly from the device tree.
This strips out an unecessary use of the integer-based GPIO
API that we want to get rid of, cuts down on code as the
gpio descriptor code will handle active low flags.

	Acked-by: Alexandre Courbot <acourbot@nvidia.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 98e90de99a0c43bd434da814c882c4332441871e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/host.c
diff --cc drivers/mmc/core/host.c
index 5e896e1f24c1,31969436d77c..000000000000
--- a/drivers/mmc/core/host.c
+++ b/drivers/mmc/core/host.c
@@@ -367,27 -364,17 +364,32 @@@ int mmc_of_parse(struct mmc_host *host
  		if (of_find_property(np, "broken-cd", &len))
  			host->caps |= MMC_CAP_NEEDS_POLL;
  
++<<<<<<< HEAD
 +		gpio = of_get_named_gpio_flags(np, "cd-gpios", 0, &flags);
 +		if (gpio == -EPROBE_DEFER)
 +			return gpio;
 +		if (gpio_is_valid(gpio)) {
 +			if (!(flags & OF_GPIO_ACTIVE_LOW))
 +				gpio_inv_cd = true;
 +
 +			ret = mmc_gpio_request_cd(host, gpio);
 +			if (ret < 0) {
 +				dev_err(host->parent,
 +					"Failed to request CD GPIO #%d: %d!\n",
 +					gpio, ret);
++=======
+ 		ret = mmc_gpiod_request_cd(host, "cd", 0, false, 0);
+ 		if (ret) {
+ 			if (ret == -EPROBE_DEFER)
++>>>>>>> 98e90de99a0c (mmc: host: switch OF parser to use gpio descriptors)
  				return ret;
- 			} else {
- 				dev_info(host->parent, "Got CD GPIO #%d.\n",
- 					 gpio);
+ 			if (ret != -ENOENT) {
+ 				dev_err(host->parent,
+ 					"Failed to request CD GPIO: %d\n",
+ 					ret);
  			}
- 		}
- 
- 		if (explicit_inv_cd ^ gpio_inv_cd)
- 			host->caps2 |= MMC_CAP2_CD_ACTIVE_HIGH;
+ 		} else
+ 			dev_info(host->parent, "Got CD GPIO\n");
  	}
  
  	/* Parse Write Protection */
* Unmerged path drivers/mmc/core/host.c
