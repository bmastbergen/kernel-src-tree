mm: migrate: hugetlb: putback destination hugepage to active list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] migrate: hugetlb: putback destination hugepage to active list (Tomoaki Nishimura) [1287322]
Rebuild_FUZZ: 96.83%
commit-author Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
commit 3aaa76e125c1dd58c9b599baa8c6021896874c12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3aaa76e1.failed

Since commit bcc54222309c ("mm: hugetlb: introduce page_huge_active")
each hugetlb page maintains its active flag to avoid a race condition
betwe= en multiple calls of isolate_huge_page(), but current kernel
doesn't set the f= lag on a hugepage allocated by migration because the
proper putback routine isn= 't called.  This means that users could
still encounter the race referred to by bcc54222309c in this special
case, so this patch fixes it.

Fixes: bcc54222309c ("mm: hugetlb: introduce page_huge_active")
	Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Cc: Michal Hocko <mhocko@suse.cz>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: <stable@vger.kernel.org>  [4.1.x]
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 3aaa76e125c1dd58c9b599baa8c6021896874c12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/migrate.c
diff --cc mm/migrate.c
index c1313d07c550,7452a00bbb50..000000000000
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@@ -1041,7 -1066,17 +1041,21 @@@ static int unmap_and_move_huge_page(new
  out:
  	if (rc != -EAGAIN)
  		putback_active_hugepage(hpage);
++<<<<<<< HEAD
 +	put_page(new_hpage);
++=======
+ 
+ 	/*
+ 	 * If migration was not successful and there's a freeing callback, use
+ 	 * it.  Otherwise, put_page() will drop the reference grabbed during
+ 	 * isolation.
+ 	 */
+ 	if (rc != MIGRATEPAGE_SUCCESS && put_new_page)
+ 		put_new_page(new_hpage, private);
+ 	else
+ 		putback_active_hugepage(new_hpage);
+ 
++>>>>>>> 3aaa76e125c1 (mm: migrate: hugetlb: putback destination hugepage to active list)
  	if (result) {
  		if (rc)
  			*result = rc;
* Unmerged path mm/migrate.c
