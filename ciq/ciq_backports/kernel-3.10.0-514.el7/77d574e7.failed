netfilter: bridge: rename br_parse_ip_options

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Bernhard Thaler <bernhard.thaler@wvnet.at>
commit 77d574e7283cfcbb2c134f4431f77dff1c54423e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/77d574e7.failed

br_parse_ip_options() does not parse any IP options, it validates IP
packets as a whole and the function name is misleading.

Rename br_parse_ip_options() to br_validate_ipv4() and remove unneeded
commments.

	Signed-off-by: Bernhard Thaler <bernhard.thaler@wvnet.at>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 77d574e7283cfcbb2c134f4431f77dff1c54423e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_netfilter.c
diff --cc net/bridge/br_netfilter.c
index bfa28cea8c79,962d5f867f62..000000000000
--- a/net/bridge/br_netfilter.c
+++ b/net/bridge/br_netfilter.c
@@@ -791,12 -802,9 +791,16 @@@ static unsigned int br_nf_forward_ip(co
  	}
  
  	if (pf == NFPROTO_IPV4) {
++<<<<<<< HEAD
 +		int frag_max = BR_INPUT_SKB_CB(skb)->frag_max_size;
 +
 +		if (br_parse_ip_options(skb))
++=======
+ 		if (br_validate_ipv4(skb))
++>>>>>>> 77d574e7283c (netfilter: bridge: rename br_parse_ip_options)
  			return NF_DROP;
 -		IPCB(skb)->frag_max_size = nf_bridge->frag_max_size;
 +
 +		IPCB(skb)->frag_max_size = frag_max;
  	}
  
  	nf_bridge->physoutdev = skb->dev;
@@@ -852,16 -897,41 +856,20 @@@ static unsigned int br_nf_forward_arp(c
  static int br_nf_dev_queue_xmit(struct sock *sk, struct sk_buff *skb)
  {
  	int ret;
 -	struct nf_bridge_info *nf_bridge;
 -	unsigned int mtu_reserved;
 -
 -	if (skb_is_gso(skb) || skb->protocol != htons(ETH_P_IP)) {
 -		nf_bridge_info_free(skb);
 -		return br_dev_queue_push_xmit(sk, skb);
 -	}
 -
 -	mtu_reserved = nf_bridge_mtu_reduction(skb);
 -	nf_bridge = nf_bridge_info_get(skb);
 -	/* This is wrong! We should preserve the original fragment
 -	 * boundaries by preserving frag_list rather than refragmenting.
 -	 */
 -	if (skb->len + mtu_reserved > skb->dev->mtu) {
 -		struct brnf_frag_data *data;
  
++<<<<<<< HEAD
 +	if (skb->nfct != NULL && skb->protocol == htons(ETH_P_IP) &&
 +	    skb->len + nf_bridge_mtu_reduction(skb) > skb->dev->mtu &&
 +	    !skb_is_gso(skb)) {
 +		if (br_parse_ip_options(skb))
 +			/* Drop invalid packet */
++=======
+ 		if (br_validate_ipv4(skb))
++>>>>>>> 77d574e7283c (netfilter: bridge: rename br_parse_ip_options)
  			return NF_DROP;
 -
 -		IPCB(skb)->frag_max_size = nf_bridge->frag_max_size;
 -
 -		nf_bridge_update_protocol(skb);
 -
 -		data = this_cpu_ptr(&brnf_frag_data_storage);
 -		data->encap_size = nf_bridge_encap_header_len(skb);
 -		data->size = ETH_HLEN + data->encap_size;
 -
 -		skb_copy_from_linear_data_offset(skb, -data->size, data->mac,
 -						 data->size);
 -
 -		ret = br_nf_ip_fragment(sk, skb, br_nf_push_frag_xmit);
 -	} else {
 -		nf_bridge_info_free(skb);
 +		ret = ip_fragment(sk, skb, br_dev_queue_push_xmit);
 +	} else
  		ret = br_dev_queue_push_xmit(sk, skb);
 -	}
  
  	return ret;
  }
* Unmerged path net/bridge/br_netfilter.c
