staging/rdma/hfi1: Cleanup comments and logs in PHY code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [infiniband] rdma/hfi1: Cleanup comments and logs in PHY code (Alex Estrin) [1272062 1273170]
Rebuild_FUZZ: 92.31%
commit-author Easwar Hariharan <easwar.hariharan@intel.com>
commit e8aa284ba0cd2a1b6bfb3181a5b3b7f0bdefbe1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e8aa284b.failed

This is a set of minor fixes including comment and log message cleanups
and improvements to the PHY layer code.

	Reviewed-by: Dean Luick <dean.luick@intel.com>
	Signed-off-by: Easwar Hariharan <easwar.hariharan@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e8aa284ba0cd2a1b6bfb3181a5b3b7f0bdefbe1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/chip.c
diff --cc drivers/staging/hfi1/chip.c
index baac6e22416b,483b37ae698e..000000000000
--- a/drivers/staging/hfi1/chip.c
+++ b/drivers/staging/hfi1/chip.c
@@@ -5935,11 -5946,10 +5935,17 @@@ static void handle_qsfp_int(struct hfi1
  	u64 qsfp_int_mgmt = (u64)(QSFP_HFI0_INT_N | QSFP_HFI0_MODPRST_N);
  
  	if (reg & QSFP_HFI0_MODPRST_N) {
++<<<<<<< HEAD:drivers/staging/hfi1/chip.c
 +
 +		dd_dev_info(dd, "%s: ModPresent triggered QSFP interrupt\n",
 +				__func__);
 +
++=======
++>>>>>>> e8aa284ba0cd (staging/rdma/hfi1: Cleanup comments and logs in PHY code):drivers/staging/rdma/hfi1/chip.c
  		if (!qsfp_mod_present(ppd)) {
+ 			dd_dev_info(dd, "%s: QSFP module removed\n",
+ 				    __func__);
+ 
  			ppd->driver_link_ready = 0;
  			/*
  			 * Cable removed, reset all our information about the
@@@ -5996,12 -6012,10 +6005,17 @@@
  	}
  
  	if (reg & QSFP_HFI0_INT_N) {
++<<<<<<< HEAD:drivers/staging/hfi1/chip.c
 +
 +		dd_dev_info(dd, "%s: IntN triggered QSFP interrupt\n",
 +				__func__);
++=======
+ 		dd_dev_info(dd, "%s: Interrupt received from QSFP module\n",
+ 			    __func__);
++>>>>>>> e8aa284ba0cd (staging/rdma/hfi1: Cleanup comments and logs in PHY code):drivers/staging/rdma/hfi1/chip.c
  		spin_lock_irqsave(&ppd->qsfp_info.qsfp_lock, flags);
  		ppd->qsfp_info.check_interrupt_flags = 1;
 +		ppd->qsfp_info.qsfp_interrupt_functional = 1;
  		spin_unlock_irqrestore(&ppd->qsfp_info.qsfp_lock, flags);
  	}
  
* Unmerged path drivers/staging/hfi1/chip.c
diff --git a/drivers/staging/hfi1/qsfp.c b/drivers/staging/hfi1/qsfp.c
index c9d1e64ef681..203df298fc1b 100644
--- a/drivers/staging/hfi1/qsfp.c
+++ b/drivers/staging/hfi1/qsfp.c
@@ -190,7 +190,7 @@ done:
 
 /*
  * Write page n, offset m of QSFP memory as defined by SFF 8636
- * in the cache by writing @addr = ((256 * n) + m)
+ * by writing @addr = ((256 * n) + m)
  */
 int qsfp_write(struct hfi1_pportdata *ppd, u32 target, int addr, void *bp,
 	       int len)
@@ -256,7 +256,7 @@ int qsfp_write(struct hfi1_pportdata *ppd, u32 target, int addr, void *bp,
 
 /*
  * Access page n, offset m of QSFP memory as defined by SFF 8636
- * in the cache by reading @addr = ((256 * n) + m)
+ * by reading @addr = ((256 * n) + m)
  */
 int qsfp_read(struct hfi1_pportdata *ppd, u32 target, int addr, void *bp,
 	      int len)
