netfilter: nft_lookup: use nft_validate_register_store() to validate types

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Patrick McHardy <kaber@trash.net>
commit 58f40ab6e2427532881a79e139a4aaae7fbe1826
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/58f40ab6.failed

In preparation of validating the length of a register store, use
nft_validate_register_store() in nft_lookup instead of open coding the
validation.

	Signed-off-by: Patrick McHardy <kaber@trash.net>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 58f40ab6e2427532881a79e139a4aaae7fbe1826)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index 399ca83793bb,c96070e237e7..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -3999,15 -4164,17 +3999,21 @@@ EXPORT_SYMBOL_GPL(nft_validate_output_r
   * 	@reg: the destination register number
   * 	@data: the data to load
   * 	@type: the data type
 - * 	@len: the length of the data
   *
   * 	Validate that a data load uses the appropriate data type for
++<<<<<<< HEAD
 + * 	the destination register. A value of NULL for the data means
 + * 	that its runtime gathered data, which is always of type
 + * 	NFT_DATA_VALUE.
++=======
+  * 	the destination register and the length is within the bounds.
+  * 	A value of NULL for the data means that its runtime gathered
+  * 	data.
++>>>>>>> 58f40ab6e242 (netfilter: nft_lookup: use nft_validate_register_store() to validate types)
   */
 -int nft_validate_register_store(const struct nft_ctx *ctx,
 -				enum nft_registers reg,
 -				const struct nft_data *data,
 -				enum nft_data_types type, unsigned int len)
 +int nft_validate_data_load(const struct nft_ctx *ctx, enum nft_registers reg,
 +			   const struct nft_data *data,
 +			   enum nft_data_types type)
  {
  	int err;
  
* Unmerged path net/netfilter/nf_tables_api.c
diff --git a/net/netfilter/nft_lookup.c b/net/netfilter/nft_lookup.c
index f8e400a6b239..00329e910f95 100644
--- a/net/netfilter/nft_lookup.c
+++ b/net/netfilter/nft_lookup.c
@@ -80,11 +80,10 @@ static int nft_lookup_init(const struct nft_ctx *ctx,
 		if (err < 0)
 			return err;
 
-		if (priv->dreg == NFT_REG_VERDICT) {
-			if (set->dtype != NFT_DATA_VERDICT)
-				return -EINVAL;
-		} else if (set->dtype == NFT_DATA_VERDICT)
-			return -EINVAL;
+		err = nft_validate_register_store(ctx, priv->dreg, NULL,
+						  set->dtype, set->dlen);
+		if (err < 0)
+			return err;
 	} else if (set->flags & NFT_SET_MAP)
 		return -EINVAL;
 
