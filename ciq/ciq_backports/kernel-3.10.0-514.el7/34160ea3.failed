inet_diag: add const to inet_diag_req_v2

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Eric Dumazet <edumazet@google.com>
commit 34160ea3f9c96b5ae71a11459f9b9f6c298b8930
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/34160ea3.failed

diag dumpers should not modify the request.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 34160ea3f9c96b5ae71a11459f9b9f6c298b8930)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/inet_diag.c
diff --cc net/ipv4/inet_diag.c
index f92539b6465e,ac3bfb458afd..000000000000
--- a/net/ipv4/inet_diag.c
+++ b/net/ipv4/inet_diag.c
@@@ -71,28 -70,15 +71,35 @@@ static inline void inet_diag_unlock_han
  	mutex_unlock(&inet_diag_table_mutex);
  }
  
 +static size_t inet_sk_attr_size(void)
 +{
 +	return	  nla_total_size(sizeof(struct tcp_info))
 +		+ nla_total_size(1) /* INET_DIAG_SHUTDOWN */
 +		+ nla_total_size(1) /* INET_DIAG_TOS */
 +		+ nla_total_size(1) /* INET_DIAG_TCLASS */
 +		+ nla_total_size(sizeof(struct inet_diag_meminfo))
 +		+ nla_total_size(sizeof(struct inet_diag_msg))
 +		+ nla_total_size(SK_MEMINFO_VARS * sizeof(u32))
 +		+ nla_total_size(TCP_CA_NAME_MAX)
 +		+ nla_total_size(sizeof(struct tcpvegas_info))
 +		+ 64;
 +}
 +
  int inet_sk_diag_fill(struct sock *sk, struct inet_connection_sock *icsk,
++<<<<<<< HEAD
 +			      struct sk_buff *skb, struct inet_diag_req_v2 *req,
 +			      struct user_namespace *user_ns,		      	
 +			      u32 portid, u32 seq, u16 nlmsg_flags,
 +			      const struct nlmsghdr *unlh)
++=======
+ 		      struct sk_buff *skb, const struct inet_diag_req_v2 *req,
+ 		      struct user_namespace *user_ns,
+ 		      u32 portid, u32 seq, u16 nlmsg_flags,
+ 		      const struct nlmsghdr *unlh)
++>>>>>>> 34160ea3f9c9 (inet_diag: add const to inet_diag_req_v2)
  {
  	const struct inet_sock *inet = inet_sk(sk);
 -	const struct inet_diag_handler *handler;
 -	int ext = req->idiag_ext;
 +	const struct tcp_congestion_ops *ca_ops;
  	struct inet_diag_msg *r;
  	struct nlmsghdr  *nlh;
  	struct nlattr *attr;
@@@ -246,7 -211,8 +253,12 @@@ errout
  EXPORT_SYMBOL_GPL(inet_sk_diag_fill);
  
  static int inet_csk_diag_fill(struct sock *sk,
++<<<<<<< HEAD
 +			      struct sk_buff *skb, struct inet_diag_req_v2 *req,
++=======
+ 			      struct sk_buff *skb,
+ 			      const struct inet_diag_req_v2 *req,
++>>>>>>> 34160ea3f9c9 (inet_diag: add const to inet_diag_req_v2)
  			      struct user_namespace *user_ns,
  			      u32 portid, u32 seq, u16 nlmsg_flags,
  			      const struct nlmsghdr *unlh)
@@@ -256,7 -222,8 +268,12 @@@
  }
  
  static int inet_twsk_diag_fill(struct inet_timewait_sock *tw,
++<<<<<<< HEAD
 +			       struct sk_buff *skb, struct inet_diag_req_v2 *req,
++=======
+ 			       struct sk_buff *skb,
+ 			       const struct inet_diag_req_v2 *req,
++>>>>>>> 34160ea3f9c9 (inet_diag: add const to inet_diag_req_v2)
  			       u32 portid, u32 seq, u16 nlmsg_flags,
  			       const struct nlmsghdr *unlh)
  {
@@@ -322,16 -290,18 +339,23 @@@ static int sk_diag_fill(struct sock *sk
  				  nlmsg_flags, unlh);
  }
  
++<<<<<<< HEAD
 +int inet_diag_dump_one_icsk(struct inet_hashinfo *hashinfo, struct sk_buff *in_skb,
 +		const struct nlmsghdr *nlh, struct inet_diag_req_v2 *req)
++=======
+ int inet_diag_dump_one_icsk(struct inet_hashinfo *hashinfo,
+ 			    struct sk_buff *in_skb,
+ 			    const struct nlmsghdr *nlh,
+ 			    const struct inet_diag_req_v2 *req)
++>>>>>>> 34160ea3f9c9 (inet_diag: add const to inet_diag_req_v2)
  {
 -	struct net *net = sock_net(in_skb->sk);
 -	struct sk_buff *rep;
 -	struct sock *sk;
  	int err;
 +	struct sock *sk;
 +	struct sk_buff *rep;
 +	struct net *net = sock_net(in_skb->sk);
  
  	err = -EINVAL;
 -	if (req->sdiag_family == AF_INET)
 +	if (req->sdiag_family == AF_INET) {
  		sk = inet_lookup(net, hashinfo, req->id.idiag_dst[0],
  				 req->id.idiag_dport, req->id.idiag_src[0],
  				 req->id.idiag_sport, req->id.idiag_if);
@@@ -802,15 -770,14 +826,15 @@@ static int inet_diag_fill_req(struct sk
  
  static int inet_diag_dump_reqs(struct sk_buff *skb, struct sock *sk,
  			       struct netlink_callback *cb,
- 			       struct inet_diag_req_v2 *r,
+ 			       const struct inet_diag_req_v2 *r,
  			       const struct nlattr *bc)
  {
 -	struct inet_connection_sock *icsk = inet_csk(sk);
 -	struct inet_sock *inet = inet_sk(sk);
  	struct inet_diag_entry entry;
 -	int j, s_j, reqnum, s_reqnum;
 +	struct inet_connection_sock *icsk = inet_csk(sk);
  	struct listen_sock *lopt;
 +	struct inet_sock *inet = inet_sk(sk);
 +	int j, s_j;
 +	int reqnum, s_reqnum;
  	int err = 0;
  
  	s_j = cb->args[3];
@@@ -874,11 -841,11 +898,16 @@@ out
  }
  
  void inet_diag_dump_icsk(struct inet_hashinfo *hashinfo, struct sk_buff *skb,
++<<<<<<< HEAD
 +		struct netlink_callback *cb, struct inet_diag_req_v2 *r, struct nlattr *bc)
++=======
+ 			 struct netlink_callback *cb,
+ 			 const struct inet_diag_req_v2 *r, struct nlattr *bc)
++>>>>>>> 34160ea3f9c9 (inet_diag: add const to inet_diag_req_v2)
  {
 +	int i, num;
 +	int s_i, s_num;
  	struct net *net = sock_net(skb->sk);
 -	int i, num, s_i, s_num;
  
  	s_i = cb->args[1];
  	s_num = num = cb->args[2];
@@@ -1012,7 -978,8 +1041,12 @@@ out
  EXPORT_SYMBOL_GPL(inet_diag_dump_icsk);
  
  static int __inet_diag_dump(struct sk_buff *skb, struct netlink_callback *cb,
++<<<<<<< HEAD
 +		struct inet_diag_req_v2 *r, struct nlattr *bc)
++=======
+ 			    const struct inet_diag_req_v2 *r,
+ 			    struct nlattr *bc)
++>>>>>>> 34160ea3f9c9 (inet_diag: add const to inet_diag_req_v2)
  {
  	const struct inet_diag_handler *handler;
  	int err = 0;
diff --git a/include/linux/inet_diag.h b/include/linux/inet_diag.h
index 46da02410a09..ac48b10c9395 100644
--- a/include/linux/inet_diag.h
+++ b/include/linux/inet_diag.h
@@ -11,33 +11,34 @@ struct sk_buff;
 struct netlink_callback;
 
 struct inet_diag_handler {
-	void			(*dump)(struct sk_buff *skb,
-					struct netlink_callback *cb,
-					struct inet_diag_req_v2 *r,
-					struct nlattr *bc);
-
-	int			(*dump_one)(struct sk_buff *in_skb,
-					const struct nlmsghdr *nlh,
-					struct inet_diag_req_v2 *req);
-
-	void			(*idiag_get_info)(struct sock *sk,
-						  struct inet_diag_msg *r,
-						  void *info);
-	__u16                   idiag_type;
+	void		(*dump)(struct sk_buff *skb,
+				struct netlink_callback *cb,
+				const struct inet_diag_req_v2 *r,
+				struct nlattr *bc);
+
+	int		(*dump_one)(struct sk_buff *in_skb,
+				    const struct nlmsghdr *nlh,
+				    const struct inet_diag_req_v2 *req);
+
+	void		(*idiag_get_info)(struct sock *sk,
+					  struct inet_diag_msg *r,
+					  void *info);
+	__u16		idiag_type;
 };
 
 struct inet_connection_sock;
 int inet_sk_diag_fill(struct sock *sk, struct inet_connection_sock *icsk,
-			      struct sk_buff *skb, struct inet_diag_req_v2 *req,
-			      struct user_namespace *user_ns,
-			      u32 pid, u32 seq, u16 nlmsg_flags,
-			      const struct nlmsghdr *unlh);
+		      struct sk_buff *skb, const struct inet_diag_req_v2 *req,
+		      struct user_namespace *user_ns,
+		      u32 pid, u32 seq, u16 nlmsg_flags,
+		      const struct nlmsghdr *unlh);
 void inet_diag_dump_icsk(struct inet_hashinfo *h, struct sk_buff *skb,
-		struct netlink_callback *cb, struct inet_diag_req_v2 *r,
-		struct nlattr *bc);
+			 struct netlink_callback *cb,
+			 const struct inet_diag_req_v2 *r,
+			 struct nlattr *bc);
 int inet_diag_dump_one_icsk(struct inet_hashinfo *hashinfo,
-		struct sk_buff *in_skb, const struct nlmsghdr *nlh,
-		struct inet_diag_req_v2 *req);
+			    struct sk_buff *in_skb, const struct nlmsghdr *nlh,
+			    const struct inet_diag_req_v2 *req);
 
 int inet_diag_bc_sk(const struct nlattr *_bc, struct sock *sk);
 
diff --git a/net/dccp/diag.c b/net/dccp/diag.c
index 028fc43aacbd..5a45f8de5d99 100644
--- a/net/dccp/diag.c
+++ b/net/dccp/diag.c
@@ -49,13 +49,14 @@ static void dccp_diag_get_info(struct sock *sk, struct inet_diag_msg *r,
 }
 
 static void dccp_diag_dump(struct sk_buff *skb, struct netlink_callback *cb,
-		struct inet_diag_req_v2 *r, struct nlattr *bc)
+			   const struct inet_diag_req_v2 *r, struct nlattr *bc)
 {
 	inet_diag_dump_icsk(&dccp_hashinfo, skb, cb, r, bc);
 }
 
-static int dccp_diag_dump_one(struct sk_buff *in_skb, const struct nlmsghdr *nlh,
-		struct inet_diag_req_v2 *req)
+static int dccp_diag_dump_one(struct sk_buff *in_skb,
+			      const struct nlmsghdr *nlh,
+			      const struct inet_diag_req_v2 *req)
 {
 	return inet_diag_dump_one_icsk(&dccp_hashinfo, in_skb, nlh, req);
 }
* Unmerged path net/ipv4/inet_diag.c
diff --git a/net/ipv4/tcp_diag.c b/net/ipv4/tcp_diag.c
index 0d73f9ddb55b..86dc119a3815 100644
--- a/net/ipv4/tcp_diag.c
+++ b/net/ipv4/tcp_diag.c
@@ -34,13 +34,13 @@ static void tcp_diag_get_info(struct sock *sk, struct inet_diag_msg *r,
 }
 
 static void tcp_diag_dump(struct sk_buff *skb, struct netlink_callback *cb,
-			  struct inet_diag_req_v2 *r, struct nlattr *bc)
+			  const struct inet_diag_req_v2 *r, struct nlattr *bc)
 {
 	inet_diag_dump_icsk(&tcp_hashinfo, skb, cb, r, bc);
 }
 
 static int tcp_diag_dump_one(struct sk_buff *in_skb, const struct nlmsghdr *nlh,
-			     struct inet_diag_req_v2 *req)
+			     const struct inet_diag_req_v2 *req)
 {
 	return inet_diag_dump_one_icsk(&tcp_hashinfo, in_skb, nlh, req);
 }
diff --git a/net/ipv4/udp_diag.c b/net/ipv4/udp_diag.c
index 4a000f1dd757..2dbfc1f1f7b3 100644
--- a/net/ipv4/udp_diag.c
+++ b/net/ipv4/udp_diag.c
@@ -18,8 +18,9 @@
 #include <linux/sock_diag.h>
 
 static int sk_diag_dump(struct sock *sk, struct sk_buff *skb,
-		struct netlink_callback *cb, struct inet_diag_req_v2 *req,
-		struct nlattr *bc)
+			struct netlink_callback *cb,
+			const struct inet_diag_req_v2 *req,
+			struct nlattr *bc)
 {
 	if (!inet_diag_bc_sk(bc, sk))
 		return 0;
@@ -31,7 +32,8 @@ static int sk_diag_dump(struct sock *sk, struct sk_buff *skb,
 }
 
 static int udp_dump_one(struct udp_table *tbl, struct sk_buff *in_skb,
-		const struct nlmsghdr *nlh, struct inet_diag_req_v2 *req)
+			const struct nlmsghdr *nlh,
+			const struct inet_diag_req_v2 *req)
 {
 	int err = -EINVAL;
 	struct sock *sk;
@@ -90,8 +92,9 @@ out_nosk:
 	return err;
 }
 
-static void udp_dump(struct udp_table *table, struct sk_buff *skb, struct netlink_callback *cb,
-		struct inet_diag_req_v2 *r, struct nlattr *bc)
+static void udp_dump(struct udp_table *table, struct sk_buff *skb,
+		     struct netlink_callback *cb,
+		     const struct inet_diag_req_v2 *r, struct nlattr *bc)
 {
 	int num, s_num, slot, s_slot;
 	struct net *net = sock_net(skb->sk);
@@ -144,13 +147,13 @@ done:
 }
 
 static void udp_diag_dump(struct sk_buff *skb, struct netlink_callback *cb,
-		struct inet_diag_req_v2 *r, struct nlattr *bc)
+			  const struct inet_diag_req_v2 *r, struct nlattr *bc)
 {
 	udp_dump(&udp_table, skb, cb, r, bc);
 }
 
 static int udp_diag_dump_one(struct sk_buff *in_skb, const struct nlmsghdr *nlh,
-		struct inet_diag_req_v2 *req)
+			     const struct inet_diag_req_v2 *req)
 {
 	return udp_dump_one(&udp_table, in_skb, nlh, req);
 }
@@ -170,13 +173,14 @@ static const struct inet_diag_handler udp_diag_handler = {
 };
 
 static void udplite_diag_dump(struct sk_buff *skb, struct netlink_callback *cb,
-		struct inet_diag_req_v2 *r, struct nlattr *bc)
+			      const struct inet_diag_req_v2 *r,
+			      struct nlattr *bc)
 {
 	udp_dump(&udplite_table, skb, cb, r, bc);
 }
 
 static int udplite_diag_dump_one(struct sk_buff *in_skb, const struct nlmsghdr *nlh,
-		struct inet_diag_req_v2 *req)
+				 const struct inet_diag_req_v2 *req)
 {
 	return udp_dump_one(&udplite_table, in_skb, nlh, req);
 }
