lwt: fix rx checksum setting for lwt devices tunneling over ipv6

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] lwtunnel: fix rx checksum setting for lwt devices tunneling over ipv6 (Lance Richardson) [1283886]
Rebuild_FUZZ: 96.24%
commit-author Paolo Abeni <pabeni@redhat.com>
commit c868ee7063bdb53f3ef9eac7bcec84960980b471
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c868ee70.failed

the commit 35e2d1152b22 ("tunnels: Allow IPv6 UDP checksums to be
correctly controlled.") changed the default xmit checksum setting
for lwt vxlan/geneve ipv6 tunnels, so that now the checksum is not
set into external UDP header.
This commit changes the rx checksum setting for both lwt vxlan/geneve
devices created by openvswitch accordingly, so that lwt over ipv6
tunnel pairs are again able to communicate with default values.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Acked-by: Jiri Benc <jbenc@redhat.com>
	Acked-by: Jesse Gross <jesse@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c868ee7063bdb53f3ef9eac7bcec84960980b471)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/geneve.c
#	net/openvswitch/vport-vxlan.c
diff --cc drivers/net/geneve.c
index d82906728571,0bf7edd99573..000000000000
--- a/drivers/net/geneve.c
+++ b/drivers/net/geneve.c
@@@ -1005,12 -1469,24 +1005,28 @@@ struct net_device *geneve_dev_create_fb
  	if (IS_ERR(dev))
  		return dev;
  
++<<<<<<< HEAD
 +	err = geneve_configure(net, dev, 0, 0, 0, 0, htons(dst_port), true);
 +	if (err) {
 +		free_netdev(dev);
 +		return ERR_PTR(err);
 +	}
++=======
+ 	err = geneve_configure(net, dev, &geneve_remote_unspec,
+ 			       0, 0, 0, htons(dst_port), true,
+ 			       GENEVE_F_UDP_ZERO_CSUM6_RX);
+ 	if (err)
+ 		goto err;
+ 
+ 	/* openvswitch users expect packet sizes to be unrestricted,
+ 	 * so set the largest MTU we can.
+ 	 */
+ 	err = __geneve_change_mtu(dev, IP_MAX_MTU, false);
+ 	if (err)
+ 		goto err;
+ 
++>>>>>>> c868ee7063bd (lwt: fix rx checksum setting for lwt devices tunneling over ipv6)
  	return dev;
 -
 - err:
 -	free_netdev(dev);
 -	return ERR_PTR(err);
  }
  EXPORT_SYMBOL_GPL(geneve_dev_create_fb);
  
diff --cc net/openvswitch/vport-vxlan.c
index 6f7986fabb70,5eb7694348b5..000000000000
--- a/net/openvswitch/vport-vxlan.c
+++ b/net/openvswitch/vport-vxlan.c
@@@ -152,12 -84,16 +152,21 @@@ static struct vport *vxlan_tnl_create(c
  {
  	struct net *net = ovs_dp_get_net(parms->dp);
  	struct nlattr *options = parms->options;
 -	struct net_device *dev;
 +	struct vxlan_port *vxlan_port;
 +	struct vxlan_sock *vs;
  	struct vport *vport;
  	struct nlattr *a;
 +	u16 dst_port;
  	int err;
++<<<<<<< HEAD
++=======
+ 	struct vxlan_config conf = {
+ 		.no_share = true,
+ 		.flags = VXLAN_F_COLLECT_METADATA | VXLAN_F_UDP_ZERO_CSUM6_RX,
+ 		/* Don't restrict the packets that can be sent by MTU */
+ 		.mtu = IP_MAX_MTU,
+ 	};
++>>>>>>> c868ee7063bd (lwt: fix rx checksum setting for lwt devices tunneling over ipv6)
  
  	if (!options) {
  		err = -EINVAL;
* Unmerged path drivers/net/geneve.c
* Unmerged path net/openvswitch/vport-vxlan.c
