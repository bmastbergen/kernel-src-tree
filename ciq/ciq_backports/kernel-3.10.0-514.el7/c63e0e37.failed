HID: Revert "Revert "HID: Fix logitech-dj: missing Unifying device issue""

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hid] revert "revert "hid: fix logitech-dj: missing Unifying device issue"" (Benjamin Tissoires) [1311883]
Rebuild_FUZZ: 96.50%
commit-author Nestor Lopez Casado <nlopezcasad@logitech.com>
commit c63e0e370028d7e4033bd40165f18499872b5183
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c63e0e37.failed

This reverts commit 8af6c08830b1ae114d1a8b548b1f8b056e068887.

This patch re-adds the workaround introduced by 596264082f10dd4
which was reverted by 8af6c08830b1ae114.

The original patch 596264 was needed to overcome a situation where
the hid-core would drop incoming reports while probe() was being
executed.

This issue was solved by c849a6143bec520af which added
hid_device_io_start() and hid_device_io_stop() that enable a specific
hid driver to opt-in for input reports while its probe() is being
executed.

Commit a9dd22b730857347 modified hid-logitech-dj so as to use the
functionality added to hid-core. Having done that, workaround 596264
was no longer necessary and was reverted by 8af6c08.

We now encounter a different problem that ends up 'again' thwarting
the Unifying receiver enumeration. The problem is time and usb controller
dependent. Ocasionally the reports sent to the usb receiver to start
the paired devices enumeration fail with -EPIPE and the receiver never
gets to enumerate the paired devices.

With dcd9006b1b053c7b1c the problem was "hidden" as the call to the usb
driver became asynchronous and none was catching the error from the
failing URB.

As the root cause for this failing SET_REPORT is not understood yet,
-possibly a race on the usb controller drivers or a problem with the
Unifying receiver- reintroducing this workaround solves the problem.

Overall what this workaround does is: If an input report from an
unknown device is received, then a (re)enumeration is performed.

related bug:
https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1194649

	Signed-off-by: Nestor Lopez Casado <nlopezcasad@logitech.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit c63e0e370028d7e4033bd40165f18499872b5183)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/hid-logitech-dj.c
diff --cc drivers/hid/hid-logitech-dj.c
index b3cb324824e0,cd33084c7860..000000000000
--- a/drivers/hid/hid-logitech-dj.c
+++ b/drivers/hid/hid-logitech-dj.c
@@@ -239,6 -237,19 +241,22 @@@ static void logi_dj_recv_add_djhid_devi
  		return;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if ((dj_report->device_index < DJ_DEVICE_INDEX_MIN) ||
+ 	    (dj_report->device_index > DJ_DEVICE_INDEX_MAX)) {
+ 		dev_err(&djrcv_hdev->dev, "%s: invalid device index:%d\n",
+ 			__func__, dj_report->device_index);
+ 		return;
+ 	}
+ 
+ 	if (djrcv_dev->paired_dj_devices[dj_report->device_index]) {
+ 		/* The device is already known. No need to reallocate it. */
+ 		dbg_hid("%s: device is already known\n", __func__);
+ 		return;
+ 	}
+ 
++>>>>>>> c63e0e370028 (HID: Revert "Revert "HID: Fix logitech-dj: missing Unifying device issue"")
  	dj_hiddev = hid_allocate_device();
  	if (IS_ERR(dj_hiddev)) {
  		dev_err(&djrcv_hdev->dev, "%s: hid_allocate_device failed\n",
* Unmerged path drivers/hid/hid-logitech-dj.c
diff --git a/drivers/hid/hid-logitech-dj.h b/drivers/hid/hid-logitech-dj.h
index fd28a5e0ca3b..4a4000340ce1 100644
--- a/drivers/hid/hid-logitech-dj.h
+++ b/drivers/hid/hid-logitech-dj.h
@@ -101,6 +101,7 @@ struct dj_receiver_dev {
 	struct work_struct work;
 	struct kfifo notif_fifo;
 	spinlock_t lock;
+	bool querying_devices;
 };
 
 struct dj_device {
