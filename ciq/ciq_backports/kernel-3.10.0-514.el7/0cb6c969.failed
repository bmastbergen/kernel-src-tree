net, lib: kill arch_fast_hash library bits

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [tools] revert "lib: kill arch_fast_hash library bits" (Josh Poimboeuf) [1347232]
Rebuild_FUZZ: 90.91%
commit-author Daniel Borkmann <dborkman@redhat.com>
commit 0cb6c969ed9de43687abdfc63714b6fe4385d2fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0cb6c969.failed

As there are now no remaining users of arch_fast_hash(), lets kill
it entirely.

This basically reverts commit 71ae8aac3e19 ("lib: introduce arch
optimized hash library") and follow-up work, that is f.e., commit
237217546d44 ("lib: hash: follow-up fixups for arch hash"),
commit e3fec2f74f7f ("lib: Add missing arch generic-y entries for
asm-generic/hash.h") and last but not least commit 6a02652df511
("perf tools: Fix include for non x86 architectures").

	Cc: Francesco Fusco <fusco@ntop.org>
	Cc: Thomas Graf <tgraf@suug.ch>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0cb6c969ed9de43687abdfc63714b6fe4385d2fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/alpha/include/asm/Kbuild
#	arch/avr32/include/asm/Kbuild
#	arch/cris/include/asm/Kbuild
#	arch/frv/include/asm/Kbuild
#	arch/ia64/include/asm/Kbuild
#	arch/m32r/include/asm/Kbuild
#	arch/microblaze/include/asm/Kbuild
#	arch/mips/include/asm/Kbuild
#	arch/mn10300/include/asm/Kbuild
#	arch/parisc/include/asm/Kbuild
#	arch/powerpc/include/asm/Kbuild
#	arch/s390/include/asm/Kbuild
#	arch/score/include/asm/Kbuild
#	arch/sparc/include/asm/Kbuild
#	arch/tile/include/asm/Kbuild
#	arch/um/include/asm/Kbuild
#	arch/x86/lib/hash.c
#	lib/Makefile
diff --cc arch/alpha/include/asm/Kbuild
index 7fda94c98345,76aeb8fa551a..000000000000
--- a/arch/alpha/include/asm/Kbuild
+++ b/arch/alpha/include/asm/Kbuild
@@@ -1,6 -1,11 +1,14 @@@
  
 -
  generic-y += clkdev.h
 -generic-y += cputime.h
 +
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += sections.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 +generic-y += hash.h
diff --cc arch/avr32/include/asm/Kbuild
index e51ee334b1b1,528d70d47a54..000000000000
--- a/arch/avr32/include/asm/Kbuild
+++ b/arch/avr32/include/asm/Kbuild
@@@ -1,6 -1,23 +1,31 @@@
  
++<<<<<<< HEAD
 +generic-y	+= clkdev.h
 +generic-y	+= exec.h
 +generic-y	+= trace_clock.h
 +generic-y	+= param.h
 +generic-y	+= hash.h
++=======
+ generic-y += clkdev.h
+ generic-y += cputime.h
+ generic-y += delay.h
+ generic-y += device.h
+ generic-y += div64.h
+ generic-y += emergency-restart.h
+ generic-y += exec.h
+ generic-y += futex.h
+ generic-y += irq_regs.h
+ generic-y += irq_work.h
+ generic-y += local.h
+ generic-y += local64.h
+ generic-y += mcs_spinlock.h
+ generic-y += param.h
+ generic-y += percpu.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += sections.h
+ generic-y += topology.h
+ generic-y += trace_clock.h
+ generic-y += vga.h
+ generic-y += xor.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
diff --cc arch/cris/include/asm/Kbuild
index 3a8f8a3f32d8,d5f124832fd1..000000000000
--- a/arch/cris/include/asm/Kbuild
+++ b/arch/cris/include/asm/Kbuild
@@@ -3,9 -3,18 +3,16 @@@ header-y += arch-v10
  header-y += arch-v32/
  
  
 -generic-y += barrier.h
  generic-y += clkdev.h
 -generic-y += cputime.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += kvm_para.h
+ generic-y += linkage.h
+ generic-y += mcs_spinlock.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += module.h
 -generic-y += preempt.h
 -generic-y += scatterlist.h
 -generic-y += sections.h
  generic-y += trace_clock.h
 -generic-y += vga.h
 -generic-y += xor.h
 +generic-y += hash.h
 +generic-y += barrier.h
diff --cc arch/frv/include/asm/Kbuild
index a76bafc39fac,e3f81b53578e..000000000000
--- a/arch/frv/include/asm/Kbuild
+++ b/arch/frv/include/asm/Kbuild
@@@ -1,5 -1,9 +1,12 @@@
  
  generic-y += clkdev.h
 -generic-y += cputime.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 +generic-y += hash.h
diff --cc arch/ia64/include/asm/Kbuild
index c6d81f469ba4,9b41b4bcc073..000000000000
--- a/arch/ia64/include/asm/Kbuild
+++ b/arch/ia64/include/asm/Kbuild
@@@ -1,6 -1,10 +1,10 @@@
  
  generic-y += clkdev.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += kvm_para.h
 -generic-y += mcs_spinlock.h
 -generic-y += preempt.h
 -generic-y += scatterlist.h
  generic-y += trace_clock.h
 -generic-y += vtime.h
 +generic-y += hash.h
diff --cc arch/m32r/include/asm/Kbuild
index b55ed90103d4,2edc793372fc..000000000000
--- a/arch/m32r/include/asm/Kbuild
+++ b/arch/m32r/include/asm/Kbuild
@@@ -1,6 -1,11 +1,11 @@@
  
  generic-y += clkdev.h
 -generic-y += cputime.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += module.h
 -generic-y += preempt.h
 -generic-y += scatterlist.h
 -generic-y += sections.h
  generic-y += trace_clock.h
 +generic-y += hash.h
diff --cc arch/microblaze/include/asm/Kbuild
index a22a2389c8f2,ab564a6db5c3..000000000000
--- a/arch/microblaze/include/asm/Kbuild
+++ b/arch/microblaze/include/asm/Kbuild
@@@ -1,7 -1,12 +1,15 @@@
  
 -generic-y += barrier.h
  generic-y += clkdev.h
 -generic-y += cputime.h
 -generic-y += device.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += syscalls.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 +generic-y += syscalls.h
 +generic-y += hash.h
 +generic-y += barrier.h
diff --cc arch/mips/include/asm/Kbuild
index cea0442fb63e,200efeac4181..000000000000
--- a/arch/mips/include/asm/Kbuild
+++ b/arch/mips/include/asm/Kbuild
@@@ -1,3 -1,20 +1,21 @@@
  # MIPS headers
++<<<<<<< HEAD
++=======
+ generic-y += cputime.h
+ generic-y += current.h
+ generic-y += dma-contiguous.h
+ generic-y += emergency-restart.h
+ generic-y += irq_work.h
+ generic-y += local64.h
+ generic-y += mcs_spinlock.h
+ generic-y += mutex.h
+ generic-y += parport.h
+ generic-y += percpu.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += sections.h
+ generic-y += segment.h
+ generic-y += serial.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 -generic-y += ucontext.h
 -generic-y += user.h
 -generic-y += xor.h
 +generic-y += hash.h
diff --cc arch/mn10300/include/asm/Kbuild
index 0cef039d50d8,f892d9de47d9..000000000000
--- a/arch/mn10300/include/asm/Kbuild
+++ b/arch/mn10300/include/asm/Kbuild
@@@ -1,6 -1,11 +1,14 @@@
  
 -generic-y += barrier.h
  generic-y += clkdev.h
 -generic-y += cputime.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += sections.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 +generic-y += hash.h
 +generic-y += barrier.h
diff --cc arch/parisc/include/asm/Kbuild
index 76a3275bc3ae,8686237a3c3c..000000000000
--- a/arch/parisc/include/asm/Kbuild
+++ b/arch/parisc/include/asm/Kbuild
@@@ -1,8 -1,29 +1,34 @@@
  
++<<<<<<< HEAD
 +generic-y += word-at-a-time.h auxvec.h user.h cputime.h emergency-restart.h \
 +	  segment.h topology.h vga.h device.h percpu.h hw_irq.h mutex.h \
 +	  div64.h irq_regs.h kdebug.h kvm_para.h local64.h local.h param.h \
 +	  poll.h xor.h clkdev.h exec.h
++=======
+ generic-y += auxvec.h
+ generic-y += barrier.h
+ generic-y += clkdev.h
+ generic-y += cputime.h
+ generic-y += device.h
+ generic-y += div64.h
+ generic-y += emergency-restart.h
+ generic-y += exec.h
+ generic-y += hw_irq.h
+ generic-y += irq_regs.h
+ generic-y += irq_work.h
+ generic-y += kdebug.h
+ generic-y += kvm_para.h
+ generic-y += local.h
+ generic-y += local64.h
+ generic-y += mcs_spinlock.h
+ generic-y += mutex.h
+ generic-y += param.h
+ generic-y += percpu.h
+ generic-y += poll.h
+ generic-y += preempt.h
+ generic-y += segment.h
+ generic-y += topology.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 -generic-y += user.h
 -generic-y += vga.h
 -generic-y += word-at-a-time.h
 -generic-y += xor.h
 +generic-y += hash.h
 +generic-y += barrier.h
diff --cc arch/powerpc/include/asm/Kbuild
index 44ab69679d8a,382b28e364dc..000000000000
--- a/arch/powerpc/include/asm/Kbuild
+++ b/arch/powerpc/include/asm/Kbuild
@@@ -1,7 -1,9 +1,13 @@@
  
  generic-y += clkdev.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
+ generic-y += preempt.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += rwsem.h
 -generic-y += scatterlist.h
  generic-y += trace_clock.h
  generic-y += vtime.h
 +generic-y += hash.h
 +generic-y += irq_work.h
diff --cc arch/s390/include/asm/Kbuild
index 07bcebcbb39e,c631f98fd524..000000000000
--- a/arch/s390/include/asm/Kbuild
+++ b/arch/s390/include/asm/Kbuild
@@@ -1,6 -1,8 +1,9 @@@
  
  
  generic-y += clkdev.h
 -generic-y += irq_work.h
 -generic-y += mcs_spinlock.h
 -generic-y += preempt.h
 -generic-y += scatterlist.h
++<<<<<<< HEAD
  generic-y += trace_clock.h
 +generic-y += hash.h
++=======
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
 +generic-y += irq_work.h
diff --cc arch/score/include/asm/Kbuild
index bead671c4d2c,83ed116d414c..000000000000
--- a/arch/score/include/asm/Kbuild
+++ b/arch/score/include/asm/Kbuild
@@@ -1,7 -1,15 +1,16 @@@
  
  header-y +=
  
 -
 -generic-y += barrier.h
  generic-y += clkdev.h
++<<<<<<< HEAD
++=======
+ generic-y += cputime.h
+ generic-y += irq_work.h
+ generic-y += mcs_spinlock.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += sections.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 -generic-y += xor.h
 -generic-y += serial.h
 +generic-y += hash.h
 +generic-y += barrier.h
diff --cc arch/sparc/include/asm/Kbuild
index 4fd8c9f6c973,94f36e7086a7..000000000000
--- a/arch/sparc/include/asm/Kbuild
+++ b/arch/sparc/include/asm/Kbuild
@@@ -6,12 -6,16 +6,17 @@@ generic-y += cputime.
  generic-y += div64.h
  generic-y += emergency-restart.h
  generic-y += exec.h
++<<<<<<< HEAD
++=======
+ generic-y += irq_regs.h
+ generic-y += irq_work.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += linkage.h
 -generic-y += local.h
  generic-y += local64.h
 -generic-y += mcs_spinlock.h
 -generic-y += module.h
  generic-y += mutex.h
 -generic-y += preempt.h
 -generic-y += scatterlist.h
 +generic-y += irq_regs.h
 +generic-y += local.h
 +generic-y += module.h
  generic-y += serial.h
  generic-y += trace_clock.h
  generic-y += types.h
diff --cc arch/tile/include/asm/Kbuild
index 21beade3f584,b4c488b65745..000000000000
--- a/arch/tile/include/asm/Kbuild
+++ b/arch/tile/include/asm/Kbuild
@@@ -11,6 -11,7 +11,10 @@@ generic-y += errno.
  generic-y += exec.h
  generic-y += fb.h
  generic-y += fcntl.h
++<<<<<<< HEAD
++=======
+ generic-y += hw_irq.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += ioctl.h
  generic-y += ioctls.h
  generic-y += ipcbuf.h
diff --cc arch/um/include/asm/Kbuild
index b3a361a31487,9176fa11d49b..000000000000
--- a/arch/um/include/asm/Kbuild
+++ b/arch/um/include/asm/Kbuild
@@@ -1,6 -1,29 +1,36 @@@
++<<<<<<< HEAD
 +generic-y += bug.h cputime.h device.h emergency-restart.h futex.h hardirq.h
 +generic-y += hw_irq.h irq_regs.h kdebug.h percpu.h sections.h topology.h xor.h
 +generic-y += ftrace.h pci.h io.h param.h delay.h mutex.h current.h exec.h
 +generic-y += switch_to.h clkdev.h
++=======
+ generic-y += barrier.h
+ generic-y += bug.h
+ generic-y += clkdev.h
+ generic-y += cputime.h
+ generic-y += current.h
+ generic-y += delay.h
+ generic-y += device.h
+ generic-y += emergency-restart.h
+ generic-y += exec.h
+ generic-y += ftrace.h
+ generic-y += futex.h
+ generic-y += hardirq.h
+ generic-y += hw_irq.h
+ generic-y += io.h
+ generic-y += irq_regs.h
+ generic-y += irq_work.h
+ generic-y += kdebug.h
+ generic-y += mcs_spinlock.h
+ generic-y += mutex.h
+ generic-y += param.h
+ generic-y += pci.h
+ generic-y += percpu.h
+ generic-y += preempt.h
+ generic-y += scatterlist.h
+ generic-y += sections.h
+ generic-y += switch_to.h
+ generic-y += topology.h
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  generic-y += trace_clock.h
 -generic-y += xor.h
 +generic-y += hash.h
diff --cc lib/Makefile
index d25b4f7d5137,4b9baa45a4d9..000000000000
--- a/lib/Makefile
+++ b/lib/Makefile
@@@ -24,9 -24,9 +24,13 @@@ obj-y	+= lockref.
  
  obj-y += bcd.o div64.o sort.o parser.o halfmd4.o debug_locks.o random32.o \
  	 bust_spinlocks.o hexdump.o kasprintf.o bitmap.o scatterlist.o \
 -	 gcd.o lcm.o list_sort.o uuid.o flex_array.o iovec.o clz_ctz.o \
 +	 gcd.o lcm.o list_sort.o uuid.o flex_array.o iovec.o \
  	 bsearch.o find_last_bit.o find_next_bit.o llist.o memweight.o kfifo.o \
++<<<<<<< HEAD
 +	 percpu_ida.o hash.o rhashtable.o
++=======
+ 	 percpu-refcount.o percpu_ida.o rhashtable.o reciprocal_div.o
++>>>>>>> 0cb6c969ed9d (net, lib: kill arch_fast_hash library bits)
  obj-y += string_helpers.o
  obj-$(CONFIG_TEST_STRING_HELPERS) += test-string_helpers.o
  obj-y += kstrtox.o
* Unmerged path arch/x86/lib/hash.c
* Unmerged path arch/alpha/include/asm/Kbuild
* Unmerged path arch/avr32/include/asm/Kbuild
* Unmerged path arch/cris/include/asm/Kbuild
* Unmerged path arch/frv/include/asm/Kbuild
* Unmerged path arch/ia64/include/asm/Kbuild
* Unmerged path arch/m32r/include/asm/Kbuild
* Unmerged path arch/microblaze/include/asm/Kbuild
* Unmerged path arch/mips/include/asm/Kbuild
* Unmerged path arch/mn10300/include/asm/Kbuild
* Unmerged path arch/parisc/include/asm/Kbuild
* Unmerged path arch/powerpc/include/asm/Kbuild
* Unmerged path arch/s390/include/asm/Kbuild
* Unmerged path arch/score/include/asm/Kbuild
* Unmerged path arch/sparc/include/asm/Kbuild
* Unmerged path arch/tile/include/asm/Kbuild
* Unmerged path arch/um/include/asm/Kbuild
diff --git a/arch/x86/include/asm/hash.h b/arch/x86/include/asm/hash.h
deleted file mode 100644
index e8c58f88b1d4..000000000000
--- a/arch/x86/include/asm/hash.h
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef _ASM_X86_HASH_H
-#define _ASM_X86_HASH_H
-
-struct fast_hash_ops;
-extern void setup_arch_fast_hash(struct fast_hash_ops *ops);
-
-#endif /* _ASM_X86_HASH_H */
diff --git a/arch/x86/lib/Makefile b/arch/x86/lib/Makefile
index 99c2d8870270..43304a85723f 100644
--- a/arch/x86/lib/Makefile
+++ b/arch/x86/lib/Makefile
@@ -25,7 +25,7 @@ lib-$(CONFIG_SMP) += rwlock.o
 lib-$(CONFIG_RWSEM_XCHGADD_ALGORITHM) += rwsem.o
 lib-$(CONFIG_INSTRUCTION_DECODER) += insn.o inat.o
 
-obj-y += msr.o msr-reg.o msr-reg-export.o hash.o
+obj-y += msr.o msr-reg.o msr-reg-export.o
 
 ifeq ($(CONFIG_X86_32),y)
         obj-y += atomic64_32.o
* Unmerged path arch/x86/lib/hash.c
diff --git a/include/asm-generic/hash.h b/include/asm-generic/hash.h
deleted file mode 100644
index b6312843dbd9..000000000000
--- a/include/asm-generic/hash.h
+++ /dev/null
@@ -1,9 +0,0 @@
-#ifndef __ASM_GENERIC_HASH_H
-#define __ASM_GENERIC_HASH_H
-
-struct fast_hash_ops;
-static inline void setup_arch_fast_hash(struct fast_hash_ops *ops)
-{
-}
-
-#endif /* __ASM_GENERIC_HASH_H */
diff --git a/include/linux/hash.h b/include/linux/hash.h
index bd1754c7ecef..66cfe20ebe85 100644
--- a/include/linux/hash.h
+++ b/include/linux/hash.h
@@ -15,7 +15,6 @@
  */
 
 #include <asm/types.h>
-#include <asm/hash.h>
 #include <linux/compiler.h>
 
 /* 2^31 + 2^29 - 2^25 + 2^22 - 2^19 - 2^16 + 1 */
@@ -80,38 +79,4 @@ static inline u32 hash32_ptr(const void *ptr)
 	return (u32)val;
 }
 
-struct fast_hash_ops {
-	u32 (*hash)(const void *data, u32 len, u32 seed);
-	u32 (*hash2)(const u32 *data, u32 len, u32 seed);
-};
-
-/**
- *	arch_fast_hash - Caclulates a hash over a given buffer that can have
- *			 arbitrary size. This function will eventually use an
- *			 architecture-optimized hashing implementation if
- *			 available, and trades off distribution for speed.
- *
- *	@data: buffer to hash
- *	@len: length of buffer in bytes
- *	@seed: start seed
- *
- *	Returns 32bit hash.
- */
-extern u32 arch_fast_hash(const void *data, u32 len, u32 seed);
-
-/**
- *	arch_fast_hash2 - Caclulates a hash over a given buffer that has a
- *			  size that is of a multiple of 32bit words. This
- *			  function will eventually use an architecture-
- *			  optimized hashing implementation if available,
- *			  and trades off distribution for speed.
- *
- *	@data: buffer to hash (must be 32bit padded)
- *	@len: number of 32bit words
- *	@seed: start seed
- *
- *	Returns 32bit hash.
- */
-extern u32 arch_fast_hash2(const u32 *data, u32 len, u32 seed);
-
 #endif /* _LINUX_HASH_H */
* Unmerged path lib/Makefile
diff --git a/lib/hash.c b/lib/hash.c
deleted file mode 100644
index fea973f4bd57..000000000000
--- a/lib/hash.c
+++ /dev/null
@@ -1,39 +0,0 @@
-/* General purpose hashing library
- *
- * That's a start of a kernel hashing library, which can be extended
- * with further algorithms in future. arch_fast_hash{2,}() will
- * eventually resolve to an architecture optimized implementation.
- *
- * Copyright 2013 Francesco Fusco <ffusco@redhat.com>
- * Copyright 2013 Daniel Borkmann <dborkman@redhat.com>
- * Copyright 2013 Thomas Graf <tgraf@redhat.com>
- * Licensed under the GNU General Public License, version 2.0 (GPLv2)
- */
-
-#include <linux/jhash.h>
-#include <linux/hash.h>
-#include <linux/cache.h>
-
-static struct fast_hash_ops arch_hash_ops __read_mostly = {
-	.hash  = jhash,
-	.hash2 = jhash2,
-};
-
-u32 arch_fast_hash(const void *data, u32 len, u32 seed)
-{
-	return arch_hash_ops.hash(data, len, seed);
-}
-EXPORT_SYMBOL_GPL(arch_fast_hash);
-
-u32 arch_fast_hash2(const u32 *data, u32 len, u32 seed)
-{
-	return arch_hash_ops.hash2(data, len, seed);
-}
-EXPORT_SYMBOL_GPL(arch_fast_hash2);
-
-static int __init hashlib_init(void)
-{
-	setup_arch_fast_hash(&arch_hash_ops);
-	return 0;
-}
-early_initcall(hashlib_init);
diff --git a/tools/perf/util/include/asm/hash.h b/tools/perf/util/include/asm/hash.h
deleted file mode 100644
index d82b170bb216..000000000000
--- a/tools/perf/util/include/asm/hash.h
+++ /dev/null
@@ -1,6 +0,0 @@
-#ifndef __ASM_GENERIC_HASH_H
-#define __ASM_GENERIC_HASH_H
-
-/* Stub */
-
-#endif /* __ASM_GENERIC_HASH_H */
