IB/core: Add netdev to path record

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Matan Barak <matanb@mellanox.com>
commit ba36e37fd3ca3dc8f215b14bcfdccf9f41b65767
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ba36e37f.failed

In order to find the sgid_index, one could just query the IB cache
with the correct GID and netdevice. Therefore, instead of storing
the L2 attributes directly in the path, we only store the
ifindex and net and use them later to get the sgid_index.
The vlan_id and smac L2 attributes are removed in a later patch.

	Signed-off-by: Matan Barak <matanb@mellanox.com>
Reviewed-By: Devesh Sharma <devesh.sharma@avagotech.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit ba36e37fd3ca3dc8f215b14bcfdccf9f41b65767)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/sa_query.c
diff --cc drivers/infiniband/core/sa_query.c
index 8c014b33d8e0,c9d9d7afcdb4..000000000000
--- a/drivers/infiniband/core/sa_query.c
+++ b/drivers/infiniband/core/sa_query.c
@@@ -1010,10 -1012,13 +1012,17 @@@ int ib_init_ah_from_path(struct ib_devi
  		ah_attr->ah_flags = IB_AH_GRH;
  		ah_attr->grh.dgid = rec->dgid;
  
++<<<<<<< HEAD
 +		ret = ib_find_cached_gid(device, &rec->sgid, &port_num,
++=======
+ 		ret = ib_find_cached_gid(device, &rec->sgid, ndev, &port_num,
++>>>>>>> ba36e37fd3ca (IB/core: Add netdev to path record)
  					 &gid_index);
- 		if (ret)
+ 		if (ret) {
+ 			if (ndev)
+ 				dev_put(ndev);
  			return ret;
+ 		}
  
  		ah_attr->grh.sgid_index    = gid_index;
  		ah_attr->grh.flow_label    = be32_to_cpu(rec->flow_label);
* Unmerged path drivers/infiniband/core/sa_query.c
diff --git a/drivers/infiniband/core/uverbs_marshall.c b/drivers/infiniband/core/uverbs_marshall.c
index abd97247443e..484698c94d7f 100644
--- a/drivers/infiniband/core/uverbs_marshall.c
+++ b/drivers/infiniband/core/uverbs_marshall.c
@@ -144,5 +144,7 @@ void ib_copy_path_rec_from_user(struct ib_sa_path_rec *dst,
 	memset(dst->smac, 0, sizeof(dst->smac));
 	memset(dst->dmac, 0, sizeof(dst->dmac));
 	dst->vlan_id = 0xffff;
+	dst->net = NULL;
+	dst->ifindex = 0;
 }
 EXPORT_SYMBOL(ib_copy_path_rec_from_user);
diff --git a/include/rdma/ib_sa.h b/include/rdma/ib_sa.h
index 7e071a6abb34..406ecf177f21 100644
--- a/include/rdma/ib_sa.h
+++ b/include/rdma/ib_sa.h
@@ -39,6 +39,7 @@
 #include <linux/compiler.h>
 
 #include <linux/atomic.h>
+#include <linux/netdevice.h>
 
 #include <rdma/ib_verbs.h>
 #include <rdma/ib_mad.h>
@@ -157,8 +158,17 @@ struct ib_sa_path_rec {
 	u8           smac[ETH_ALEN];
 	u8           dmac[ETH_ALEN];
 	u16	     vlan_id;
+	/* ignored in IB */
+	int	     ifindex;
+	/* ignored in IB */
+	struct net  *net;
 };
 
+static inline struct net_device *ib_get_ndev_from_path(struct ib_sa_path_rec *rec)
+{
+	return rec->net ? dev_get_by_index(rec->net, rec->ifindex) : NULL;
+}
+
 #define IB_SA_MCMEMBER_REC_MGID				IB_SA_COMP_MASK( 0)
 #define IB_SA_MCMEMBER_REC_PORT_GID			IB_SA_COMP_MASK( 1)
 #define IB_SA_MCMEMBER_REC_QKEY				IB_SA_COMP_MASK( 2)
