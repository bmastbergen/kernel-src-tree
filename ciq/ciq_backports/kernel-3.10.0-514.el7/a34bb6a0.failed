perf tools: Add 'trace' sort key

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit a34bb6a08d6020bde0475bc901793771858a1112
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a34bb6a0.failed

The 'trace' sort key is to show tracepoint event output using either
print fmt or plugin.  For example sched_switch event (using plugin) will
show output like below:

  # perf record -e sched:sched_switch -a usleep 10
  [ perf record: Woken up 1 times to write data ]
  [ perf record: Captured and wrote 0.197 MB perf.data (69 samples) ]
  #

  $ perf report -s trace --stdio
  ...
  # Overhead  Trace output
  # ........  ...................................................
  #
       9.48%  swapper/0:0 [120] R ==> transmission-gt:17773 [120]
       9.48%  transmission-gt:17773 [120] S ==> swapper/0:0 [120]
       9.04%  swapper/2:0 [120] R ==> transmission-gt:17773 [120]
       8.92%  transmission-gt:17773 [120] S ==> swapper/2:0 [120]
       5.25%  swapper/0:0 [120] R ==> kworker/0:1H:109 [100]
       5.21%  kworker/0:1H:109 [100] S ==> swapper/0:0 [120]
       1.78%  swapper/3:0 [120] R ==> transmission-gt:17773 [120]
       1.78%  transmission-gt:17773 [120] S ==> swapper/3:0 [120]
       1.53%  Xephyr:6524 [120] S ==> swapper/0:0 [120]
       1.53%  swapper/0:0 [120] R ==> Xephyr:6524 [120]
       1.17%  swapper/2:0 [120] R ==> irq/33-iwlwifi:233 [49]
       1.13%  irq/33-iwlwifi:233 [49] S ==> swapper/2:0 [120]

Note that the 'trace' sort key works only for tracepoint events.  If
it's used to other type of events, just "N/A" will be printed.

Suggested-and-acked-by: Jiri Olsa <jolsa@redhat.com>
	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1450804030-29193-8-git-send-email-namhyung@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit a34bb6a08d6020bde0475bc901793771858a1112)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/sort.c
diff --cc tools/perf/util/sort.c
index 7a0efdc373c2,db8476a9b103..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -423,6 -424,86 +423,89 @@@ struct sort_entry sort_cpu = 
  	.se_width_idx	= HISTC_CPU,
  };
  
++<<<<<<< HEAD
++=======
+ /* --sort socket */
+ 
+ static int64_t
+ sort__socket_cmp(struct hist_entry *left, struct hist_entry *right)
+ {
+ 	return right->socket - left->socket;
+ }
+ 
+ static int hist_entry__socket_snprintf(struct hist_entry *he, char *bf,
+ 				    size_t size, unsigned int width)
+ {
+ 	return repsep_snprintf(bf, size, "%*.*d", width, width-3, he->socket);
+ }
+ 
+ struct sort_entry sort_socket = {
+ 	.se_header      = "Socket",
+ 	.se_cmp	        = sort__socket_cmp,
+ 	.se_snprintf    = hist_entry__socket_snprintf,
+ 	.se_width_idx	= HISTC_SOCKET,
+ };
+ 
+ /* --sort trace */
+ 
+ static char *get_trace_output(struct hist_entry *he)
+ {
+ 	struct trace_seq seq;
+ 	struct perf_evsel *evsel;
+ 	struct pevent_record rec = {
+ 		.data = he->raw_data,
+ 		.size = he->raw_size,
+ 	};
+ 
+ 	evsel = hists_to_evsel(he->hists);
+ 
+ 	trace_seq_init(&seq);
+ 	pevent_event_info(&seq, evsel->tp_format, &rec);
+ 	return seq.buffer;
+ }
+ 
+ static int64_t
+ sort__trace_cmp(struct hist_entry *left, struct hist_entry *right)
+ {
+ 	struct perf_evsel *evsel;
+ 
+ 	evsel = hists_to_evsel(left->hists);
+ 	if (evsel->attr.type != PERF_TYPE_TRACEPOINT)
+ 		return 0;
+ 
+ 	if (left->trace_output == NULL)
+ 		left->trace_output = get_trace_output(left);
+ 	if (right->trace_output == NULL)
+ 		right->trace_output = get_trace_output(right);
+ 
+ 	hists__new_col_len(left->hists, HISTC_TRACE, strlen(left->trace_output));
+ 	hists__new_col_len(right->hists, HISTC_TRACE, strlen(right->trace_output));
+ 
+ 	return strcmp(right->trace_output, left->trace_output);
+ }
+ 
+ static int hist_entry__trace_snprintf(struct hist_entry *he, char *bf,
+ 				    size_t size, unsigned int width)
+ {
+ 	struct perf_evsel *evsel;
+ 
+ 	evsel = hists_to_evsel(he->hists);
+ 	if (evsel->attr.type != PERF_TYPE_TRACEPOINT)
+ 		return scnprintf(bf, size, "%-*.*s", width, width, "N/A");
+ 
+ 	if (he->trace_output == NULL)
+ 		he->trace_output = get_trace_output(he);
+ 	return repsep_snprintf(bf, size, "%-*.*s", width, width, he->trace_output);
+ }
+ 
+ struct sort_entry sort_trace = {
+ 	.se_header      = "Trace output",
+ 	.se_cmp	        = sort__trace_cmp,
+ 	.se_snprintf    = hist_entry__trace_snprintf,
+ 	.se_width_idx	= HISTC_TRACE,
+ };
+ 
++>>>>>>> a34bb6a08d60 (perf tools: Add 'trace' sort key)
  /* sort keys for branch stacks */
  
  static int64_t
diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h
index 67a8e672324d..0de0b431353c 100644
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@ -50,6 +50,7 @@ enum hist_column {
 	HISTC_MEM_IADDR_SYMBOL,
 	HISTC_TRANSACTION,
 	HISTC_CYCLES,
+	HISTC_TRACE,
 	HISTC_NR_COLS, /* Last entry */
 };
 
* Unmerged path tools/perf/util/sort.c
diff --git a/tools/perf/util/sort.h b/tools/perf/util/sort.h
index 9e6dae267b96..07f2a0935d25 100644
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@ -181,6 +181,7 @@ enum sort_type {
 	SORT_LOCAL_WEIGHT,
 	SORT_GLOBAL_WEIGHT,
 	SORT_TRANSACTION,
+	SORT_TRACE,
 
 	/* branch stack specific sort keys */
 	__SORT_BRANCH_STACK,
