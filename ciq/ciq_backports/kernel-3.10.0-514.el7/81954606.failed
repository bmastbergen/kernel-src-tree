printk: disable preemption for printk_sched

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author John Stultz <john.stultz@linaro.org>
commit 81954606265ab8f04b41154bd00576013affcf5b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/81954606.failed

An earlier change in -mm (printk: remove separate printk_sched
buffers...), removed the printk_sched irqsave/restore lines since it was
safe for current users.  Since we may be expanding usage of
printk_sched(), disable preepmtion for this function to make it more
generally safe to call.

	Signed-off-by: John Stultz <john.stultz@linaro.org>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Jiri Bohac <jbohac@suse.cz>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 81954606265ab8f04b41154bd00576013affcf5b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/printk.c
diff --cc kernel/printk.c
index 6881a4f0352d,dc2b8bd9bc1e..000000000000
--- a/kernel/printk.c
+++ b/kernel/printk.c
@@@ -2506,21 -2587,17 +2506,29 @@@ void wake_up_klogd(void
  
  int printk_sched(const char *fmt, ...)
  {
 +	unsigned long flags;
  	va_list args;
 +	char *buf;
  	int r;
  
++<<<<<<< HEAD:kernel/printk.c
 +	local_irq_save(flags);
 +	buf = __get_cpu_var(printk_sched_buf);
 +
++=======
+ 	preempt_disable();
++>>>>>>> 81954606265a (printk: disable preemption for printk_sched):kernel/printk/printk.c
  	va_start(args, fmt);
 -	r = vprintk_emit(0, SCHED_MESSAGE_LOGLEVEL, NULL, 0, fmt, args);
 +	r = vsnprintf(buf, PRINTK_BUF_SIZE, fmt, args);
  	va_end(args);
  
 -	__this_cpu_or(printk_pending, PRINTK_PENDING_OUTPUT);
 +	__this_cpu_or(printk_pending, PRINTK_PENDING_SCHED);
  	irq_work_queue(&__get_cpu_var(wake_up_klogd_work));
++<<<<<<< HEAD:kernel/printk.c
 +	local_irq_restore(flags);
++=======
+ 	preempt_enable();
++>>>>>>> 81954606265a (printk: disable preemption for printk_sched):kernel/printk/printk.c
  
  	return r;
  }
* Unmerged path kernel/printk.c
