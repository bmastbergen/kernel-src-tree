vlan: pull on __vlan_insert_tag error path and fix csum correction

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 9241e2df4fbc648a92ea0752918e05c26255649e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9241e2df.failed

When __vlan_insert_tag() fails from skb_vlan_push() path due to the
skb_cow_head(), we need to undo the __skb_push() in the error path
as well that was done earlier to move skb->data pointer to mac header.

Moreover, I noticed that when in the non-error path the __skb_pull()
is done and the original offset to mac header was non-zero, we fixup
from a wrong skb->data offset in the checksum complete processing.

So the skb_postpush_rcsum() really needs to be done before __skb_pull()
where skb->data still points to the mac header start and thus operates
under the same conditions as in __vlan_insert_tag().

Fixes: 93515d53b133 ("net: move vlan pop/push functions into common code")
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Reviewed-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9241e2df4fbc648a92ea0752918e05c26255649e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index fc02ef9734c7,e561f9f07d6d..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -4016,15 -4502,16 +4016,22 @@@ int skb_vlan_push(struct sk_buff *skb, 
  		__skb_push(skb, offset);
  		err = __vlan_insert_tag(skb, skb->vlan_proto,
  					skb_vlan_tag_get(skb));
- 		if (err)
+ 		if (err) {
+ 			__skb_pull(skb, offset);
  			return err;
+ 		}
+ 
  		skb->protocol = skb->vlan_proto;
  		skb->mac_len += VLAN_HLEN;
- 		__skb_pull(skb, offset);
  
++<<<<<<< HEAD
 +		if (skb->ip_summed == CHECKSUM_COMPLETE)
 +			skb->csum = csum_add(skb->csum, csum_partial(skb->data
 +					+ (2 * ETH_ALEN), VLAN_HLEN, 0));
++=======
+ 		skb_postpush_rcsum(skb, skb->data + (2 * ETH_ALEN), VLAN_HLEN);
+ 		__skb_pull(skb, offset);
++>>>>>>> 9241e2df4fbc (vlan: pull on __vlan_insert_tag error path and fix csum correction)
  	}
  	__vlan_hwaccel_put_tag(skb, vlan_proto, vlan_tci);
  	return 0;
* Unmerged path net/core/skbuff.c
