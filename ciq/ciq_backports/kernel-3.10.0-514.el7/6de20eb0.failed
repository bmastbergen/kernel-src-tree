GFS2: Set s_mode before parsing mount options

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andrew Price <anprice@redhat.com>
commit 6de20eb0dee4c802d9d228d6c08d00386e172e52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6de20eb0.failed

In the generic mount_bdev() function, deactivate_locked_super() is
called after the fill_super() call fails, at which point s_mode has been
set. kill_block_super() expects this and dumps a warning when
FMODE_EXCL is not set in s_mode.

In gfs2_mount() we call deactivate_locked_super() on failure of
gfs2_mount_args(), at which point s_mode has not yet been set. This
causes kill_block_super() to dump a stack trace when gfs2 fails to mount
with invalid options. Set s_mode earlier in gfs2_mount() to avoid that.

	Signed-off-by: Andrew Price <anprice@redhat.com>
	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit 6de20eb0dee4c802d9d228d6c08d00386e172e52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/ops_fstype.c
diff --cc fs/gfs2/ops_fstype.c
index 902da6b6e2b5,baab99b69d8a..000000000000
--- a/fs/gfs2/ops_fstype.c
+++ b/fs/gfs2/ops_fstype.c
@@@ -1330,8 -1280,21 +1330,16 @@@ static struct dentry *gfs2_mount(struc
  	if (IS_ERR(s))
  		goto error_bdev;
  
 -	if (s->s_root) {
 -		/*
 -		 * s_umount nests inside bd_mutex during
 -		 * __invalidate_device().  blkdev_put() acquires
 -		 * bd_mutex and can't be called under s_umount.  Drop
 -		 * s_umount temporarily.  This is safe as we're
 -		 * holding an active reference.
 -		 */
 -		up_write(&s->s_umount);
 +	if (s->s_root)
  		blkdev_put(bdev, mode);
++<<<<<<< HEAD
++=======
+ 		down_write(&s->s_umount);
+ 	} else {
+ 		/* s_mode must be set before deactivate_locked_super calls */
+ 		s->s_mode = mode;
+ 	}
++>>>>>>> 6de20eb0dee4 (GFS2: Set s_mode before parsing mount options)
  
  	memset(&args, 0, sizeof(args));
  	args.ar_quota = GFS2_QUOTA_DEFAULT;
* Unmerged path fs/gfs2/ops_fstype.c
