net/mlx5e: Relax ndo_setup_tc handle restriction

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Relax ndo_setup_tc handle restriction (kamal heib) [1275159 1296272 1296405 1298421 1298422 1298423 1298424 1298425]
Rebuild_FUZZ: 95.65%
commit-author Amir Vadai <amir@vadai.me>
commit 67ba422e95edfbd42f1d9782868880b364eea173
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/67ba422e.failed

Restricting handle to TC_H_ROOT breaks the old instantiation of mqprio
to setup a hardware qdisc. This patch relaxes the test, to only check the
type.

Fixes: 08fb1da ("net/mlx5e: Support DCBNL IEEE ETS")
	Signed-off-by: Amir Vadai <amir@vadai.me>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 67ba422e95edfbd42f1d9782868880b364eea173)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 437f092a4bfe,f1ebe065de0d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -1821,6 -1855,40 +1821,43 @@@ static void mlx5e_destroy_tirs(struct m
  		mlx5e_destroy_tir(priv, i);
  }
  
++<<<<<<< HEAD
++=======
+ static int mlx5e_setup_tc(struct net_device *netdev, u8 tc)
+ {
+ 	struct mlx5e_priv *priv = netdev_priv(netdev);
+ 	bool was_opened;
+ 	int err = 0;
+ 
+ 	if (tc && tc != MLX5E_MAX_NUM_TC)
+ 		return -EINVAL;
+ 
+ 	mutex_lock(&priv->state_lock);
+ 
+ 	was_opened = test_bit(MLX5E_STATE_OPENED, &priv->state);
+ 	if (was_opened)
+ 		mlx5e_close_locked(priv->netdev);
+ 
+ 	priv->params.num_tc = tc ? tc : 1;
+ 
+ 	if (was_opened)
+ 		err = mlx5e_open_locked(priv->netdev);
+ 
+ 	mutex_unlock(&priv->state_lock);
+ 
+ 	return err;
+ }
+ 
+ static int mlx5e_ndo_setup_tc(struct net_device *dev, u32 handle,
+ 			      __be16 proto, struct tc_to_netdev *tc)
+ {
+ 	if (tc->type != TC_SETUP_MQPRIO)
+ 		return -EINVAL;
+ 
+ 	return mlx5e_setup_tc(dev, tc->tc);
+ }
+ 
++>>>>>>> 67ba422e95ed (net/mlx5e: Relax ndo_setup_tc handle restriction)
  static struct rtnl_link_stats64 *
  mlx5e_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats)
  {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
