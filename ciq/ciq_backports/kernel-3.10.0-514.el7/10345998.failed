IB/hfi1: Add evict operation to the mmu rb handler

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dean Luick <dean.luick@intel.com>
commit 1034599805009394cc42e6c538575d12d8dc57fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/10345998.failed

Allow users to clear nodes from the rb tree based on their evict callback.

	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Dean Luick <dean.luick@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 1034599805009394cc42e6c538575d12d8dc57fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/hfi1/mmu_rb.c
#	drivers/staging/hfi1/debugfs.h
diff --cc drivers/staging/hfi1/debugfs.h
index 92d6fe146714,09e5888c0818..000000000000
--- a/drivers/staging/hfi1/debugfs.h
+++ b/drivers/staging/hfi1/debugfs.h
@@@ -49,30 -44,40 +49,63 @@@
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *
   */
 -#ifndef _HFI1_MMU_RB_H
 -#define _HFI1_MMU_RB_H
  
 -#include "hfi.h"
 +struct hfi1_ibdev;
 +#ifdef CONFIG_DEBUG_FS
 +void hfi1_dbg_ibdev_init(struct hfi1_ibdev *ibd);
 +void hfi1_dbg_ibdev_exit(struct hfi1_ibdev *ibd);
 +void hfi1_dbg_init(void);
 +void hfi1_dbg_exit(void);
 +#else
 +static inline void hfi1_dbg_ibdev_init(struct hfi1_ibdev *ibd)
 +{
 +}
 +
++<<<<<<< HEAD:drivers/staging/hfi1/debugfs.h
 +void hfi1_dbg_ibdev_exit(struct hfi1_ibdev *ibd)
 +{
 +}
  
 +void hfi1_dbg_init(void)
 +{
 +}
 +
 +void hfi1_dbg_exit(void)
 +{
 +}
++=======
+ struct mmu_rb_node {
+ 	unsigned long addr;
+ 	unsigned long len;
+ 	unsigned long __last;
+ 	struct rb_node node;
+ 	struct list_head list;
+ };
+ 
+ struct mmu_rb_ops {
+ 	bool (*filter)(struct mmu_rb_node *node, unsigned long addr,
+ 		       unsigned long len);
+ 	int (*insert)(void *ops_arg, struct mmu_rb_node *mnode);
+ 	void (*remove)(void *ops_arg, struct mmu_rb_node *mnode,
+ 		       struct mm_struct *mm);
+ 	int (*invalidate)(void *ops_arg, struct mmu_rb_node *node);
+ 	int (*evict)(void *ops_arg, struct mmu_rb_node *mnode,
+ 		     void *evict_arg, bool *stop);
+ };
+ 
+ int hfi1_mmu_rb_register(void *ops_arg, struct mm_struct *mm,
+ 			 struct mmu_rb_ops *ops,
+ 			 struct mmu_rb_handler **handler);
+ void hfi1_mmu_rb_unregister(struct mmu_rb_handler *handler);
+ int hfi1_mmu_rb_insert(struct mmu_rb_handler *handler,
+ 		       struct mmu_rb_node *mnode);
+ void hfi1_mmu_rb_evict(struct mmu_rb_handler *handler, void *evict_arg);
+ void hfi1_mmu_rb_remove(struct mmu_rb_handler *handler,
+ 			struct mmu_rb_node *mnode);
+ struct mmu_rb_node *hfi1_mmu_rb_extract(struct mmu_rb_handler *handler,
+ 					unsigned long addr, unsigned long len);
++>>>>>>> 103459980500 (IB/hfi1: Add evict operation to the mmu rb handler):drivers/infiniband/hw/hfi1/mmu_rb.h
 +
 +#endif
  
 -#endif /* _HFI1_MMU_RB_H */
 +#endif                          /* _HFI1_DEBUGFS_H */
* Unmerged path drivers/infiniband/hw/hfi1/mmu_rb.c
* Unmerged path drivers/infiniband/hw/hfi1/mmu_rb.c
* Unmerged path drivers/staging/hfi1/debugfs.h
