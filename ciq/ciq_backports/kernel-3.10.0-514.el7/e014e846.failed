ovs: internal_set_rx_headroom() can be static

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] openvswitch: internal_set_rx_headroom() can be static (Jakub Sitnicki) [1322337]
Rebuild_FUZZ: 91.84%
commit-author Wu Fengguang <fengguang.wu@intel.com>
commit e014e8468552236f0f0cb64c7c341c1dce506070
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e014e846.failed

	Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e014e8468552236f0f0cb64c7c341c1dce506070)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/vport-internal_dev.c
diff --cc net/openvswitch/vport-internal_dev.c
index d6aef25cd7bb,7c8b90bf0e54..000000000000
--- a/net/openvswitch/vport-internal_dev.c
+++ b/net/openvswitch/vport-internal_dev.c
@@@ -115,6 -106,43 +115,46 @@@ static void internal_dev_destructor(str
  	free_netdev(dev);
  }
  
++<<<<<<< HEAD
++=======
+ static struct rtnl_link_stats64 *
+ internal_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats)
+ {
+ 	int i;
+ 
+ 	memset(stats, 0, sizeof(*stats));
+ 	stats->rx_errors  = dev->stats.rx_errors;
+ 	stats->tx_errors  = dev->stats.tx_errors;
+ 	stats->tx_dropped = dev->stats.tx_dropped;
+ 	stats->rx_dropped = dev->stats.rx_dropped;
+ 
+ 	for_each_possible_cpu(i) {
+ 		const struct pcpu_sw_netstats *percpu_stats;
+ 		struct pcpu_sw_netstats local_stats;
+ 		unsigned int start;
+ 
+ 		percpu_stats = per_cpu_ptr(dev->tstats, i);
+ 
+ 		do {
+ 			start = u64_stats_fetch_begin_irq(&percpu_stats->syncp);
+ 			local_stats = *percpu_stats;
+ 		} while (u64_stats_fetch_retry_irq(&percpu_stats->syncp, start));
+ 
+ 		stats->rx_bytes         += local_stats.rx_bytes;
+ 		stats->rx_packets       += local_stats.rx_packets;
+ 		stats->tx_bytes         += local_stats.tx_bytes;
+ 		stats->tx_packets       += local_stats.tx_packets;
+ 	}
+ 
+ 	return stats;
+ }
+ 
+ static void internal_set_rx_headroom(struct net_device *dev, int new_hr)
+ {
+ 	dev->needed_headroom = new_hr;
+ }
+ 
++>>>>>>> e014e8468552 (ovs: internal_set_rx_headroom() can be static)
  static const struct net_device_ops internal_dev_netdev_ops = {
  	.ndo_open = internal_dev_open,
  	.ndo_stop = internal_dev_stop,
* Unmerged path net/openvswitch/vport-internal_dev.c
