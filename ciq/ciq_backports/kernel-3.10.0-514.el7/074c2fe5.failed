hv_netvsc: Eliminate send_completion_ctx from struct hv_netvsc_packet

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author KY Srinivasan <kys@microsoft.com>
commit 074c2fe5ef3d09e9a1008d307a22ab5086e22728
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/074c2fe5.failed

Eliminate send_completion_ctx from struct hv_netvsc_packet.

	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 074c2fe5ef3d09e9a1008d307a22ab5086e22728)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/hyperv_net.h
#	drivers/net/hyperv/netvsc.c
#	drivers/net/hyperv/netvsc_drv.c
diff --cc drivers/net/hyperv/hyperv_net.h
index cf498664d989,fc6d0c6de741..000000000000
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@@ -128,28 -127,26 +128,32 @@@ struct ndis_tcp_ip_checksum_info
   */
  struct hv_netvsc_packet {
  	/* Bookkeeping stuff */
 -	u8 status;
 -	u8 is_data_pkt;
 -	u8 xmit_more; /* from skb */
 -	u8 cp_partial; /* partial copy into send buffer */
 -
 -	u8 rmsg_size; /* RNDIS header and PPI size */
 -	u8 rmsg_pgcnt; /* page count of RNDIS header and PPI */
 -	u8 page_buf_cnt;
 -	u8 completion_func;
 +	u32 status;
  
 +	bool is_data_pkt;
  	u16 vlan_tci;
 +
  	u16 q_idx;
 -	u32 send_buf_index;
 +	struct vmbus_channel *channel;
  
 -	u32 total_data_buflen;
 -	u32 pad1;
 +	u64 send_completion_tid;
++<<<<<<< HEAD
 +	void *send_completion_ctx;
 +	void (*send_completion)(void *context);
  
 +	u32 send_buf_index;
  
 -	u64 send_completion_tid;
 +	/* This points to the memory after page_buf */
 +	struct rndis_message *rndis_msg;
 +
 +	u32 total_data_buflen;
 +	/* Points to the send/receive buffer where the ethernet frame is */
 +	void *data;
 +	u32 page_buf_cnt;
 +	struct hv_page_buffer page_buf[0];
++=======
+ 	struct hv_page_buffer *page_buf;
++>>>>>>> 074c2fe5ef3d (hv_netvsc: Eliminate send_completion_ctx from struct hv_netvsc_packet)
  };
  
  struct netvsc_device_info {
diff --cc drivers/net/hyperv/netvsc.c
index 74ee1b57e623,0e0b723df1ac..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -642,9 -652,8 +642,14 @@@ static void netvsc_send_completion(stru
  			if (send_index != NETVSC_INVALID_INDEX)
  				netvsc_free_send_slot(net_device, send_index);
  			q_idx = nvsc_packet->q_idx;
++<<<<<<< HEAD
 +			channel = nvsc_packet->channel;
 +			nvsc_packet->send_completion(nvsc_packet->
 +						     send_completion_ctx);
++=======
+ 			channel = incoming_channel;
+ 			netvsc_xmit_completion(nvsc_packet);
++>>>>>>> 074c2fe5ef3d (hv_netvsc: Eliminate send_completion_ctx from struct hv_netvsc_packet)
  		}
  
  		num_outstanding_sends =
diff --cc drivers/net/hyperv/netvsc_drv.c
index 56b76b7b9a27,7e356a11c1d7..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -461,13 -483,13 +461,17 @@@ static int netvsc_start_xmit(struct sk_
  	packet->is_data_pkt = true;
  	packet->total_data_buflen = skb->len;
  
 -	rndis_msg = (struct rndis_message *)((unsigned long)packet +
 -				sizeof(struct hv_netvsc_packet));
 -
 -	memset(rndis_msg, 0, RNDIS_AND_PPI_SIZE);
 +	packet->rndis_msg = (struct rndis_message *)((unsigned long)packet +
 +				sizeof(struct hv_netvsc_packet) +
 +				(num_data_pgs * sizeof(struct hv_page_buffer)));
  
  	/* Set the completion routine */
++<<<<<<< HEAD
 +	packet->send_completion = netvsc_xmit_completion;
 +	packet->send_completion_ctx = packet;
++=======
+ 	packet->completion_func = 1;
++>>>>>>> 074c2fe5ef3d (hv_netvsc: Eliminate send_completion_ctx from struct hv_netvsc_packet)
  	packet->send_completion_tid = (unsigned long)skb;
  
  	isvlan = packet->vlan_tci & VLAN_TAG_PRESENT;
* Unmerged path drivers/net/hyperv/hyperv_net.h
* Unmerged path drivers/net/hyperv/netvsc.c
* Unmerged path drivers/net/hyperv/netvsc_drv.c
