libnvdimm, btt: add support for blk integrity

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Vishal Verma <vishal.l.verma@intel.com>
commit 41cd8b70c37ace40077c8d6ec0b74b983178c192
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/41cd8b70.failed

Support multiple block sizes (sector + metadata) using the blk integrity
framework. This registers a new integrity template that defines the
protection information tuple size based on the configured metadata size,
and simply acts as a passthrough for protection information generated by
another layer. The metadata is written to the storage as-is, and read back
with each sector.

	Signed-off-by: Vishal Verma <vishal.l.verma@linux.intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 41cd8b70c37ace40077c8d6ec0b74b983178c192)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/btt.c
#	drivers/nvdimm/btt.h
#	drivers/nvdimm/btt_devs.c
#	drivers/nvdimm/core.c
#	drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/btt.c
* Unmerged path drivers/nvdimm/btt.h
* Unmerged path drivers/nvdimm/btt_devs.c
* Unmerged path drivers/nvdimm/core.c
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/btt.c
* Unmerged path drivers/nvdimm/btt.h
* Unmerged path drivers/nvdimm/btt_devs.c
* Unmerged path drivers/nvdimm/core.c
* Unmerged path drivers/nvdimm/nd.h
