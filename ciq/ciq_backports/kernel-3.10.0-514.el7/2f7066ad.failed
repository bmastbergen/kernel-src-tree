openvswitch: fix struct geneve_port member name

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jean Sacren <sakiwit@gmail.com>
commit 2f7066ada15c865eeab5a3f6c69dcf58d196e349
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2f7066ad.failed

commit 6b001e682e90 ("openvswitch: Use Geneve device.")

The commit above introduced 'port_no' as the name for the member of
struct geneve_port. The correct name should be 'dst_port' as described
in the kernel doc. Let's fix that member name and all the pertinent
instances so that both doc and code would be consistent.

	Signed-off-by: Jean Sacren <sakiwit@gmail.com>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2f7066ada15c865eeab5a3f6c69dcf58d196e349)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/vport-geneve.c
diff --cc net/openvswitch/vport-geneve.c
index 1da3a14d1010,30ab8e127288..000000000000
--- a/net/openvswitch/vport-geneve.c
+++ b/net/openvswitch/vport-geneve.c
@@@ -26,21 -26,17 +26,25 @@@
  
  #include "datapath.h"
  #include "vport.h"
 -#include "vport-netdev.h"
  
  static struct vport_ops ovs_geneve_vport_ops;
 +
  /**
   * struct geneve_port - Keeps track of open UDP ports
 - * @dst_port: destination port.
 + * @gs: The socket created for this port number.
 + * @name: vport name.
   */
  struct geneve_port {
++<<<<<<< HEAD
 +	struct geneve_sock *gs;
 +	char name[IFNAMSIZ];
++=======
+ 	u16 dst_port;
++>>>>>>> 2f7066ada15c (openvswitch: fix struct geneve_port member name)
  };
  
 +static LIST_HEAD(geneve_ports);
 +
  static inline struct geneve_port *geneve_vport(const struct vport *vport)
  {
  	return vport_priv(vport);
@@@ -101,9 -46,8 +105,13 @@@ static int geneve_get_options(const str
  			      struct sk_buff *skb)
  {
  	struct geneve_port *geneve_port = geneve_vport(vport);
 +	struct inet_sock *sk = inet_sk(geneve_port->gs->sock->sk);
  
++<<<<<<< HEAD
 +	if (nla_put_u16(skb, OVS_TUNNEL_ATTR_DST_PORT, ntohs(sk->inet_sport)))
++=======
+ 	if (nla_put_u16(skb, OVS_TUNNEL_ATTR_DST_PORT, geneve_port->dst_port))
++>>>>>>> 2f7066ada15c (openvswitch: fix struct geneve_port member name)
  		return -EMSGSIZE;
  	return 0;
  }
@@@ -148,15 -83,18 +156,19 @@@ static struct vport *geneve_tnl_create(
  		return vport;
  
  	geneve_port = geneve_vport(vport);
++<<<<<<< HEAD
 +	strncpy(geneve_port->name, parms->name, IFNAMSIZ);
++=======
+ 	geneve_port->dst_port = dst_port;
++>>>>>>> 2f7066ada15c (openvswitch: fix struct geneve_port member name)
  
 -	rtnl_lock();
 -	dev = geneve_dev_create_fb(net, parms->name, NET_NAME_USER, dst_port);
 -	if (IS_ERR(dev)) {
 -		rtnl_unlock();
 +	gs = geneve_sock_add(net, htons(dst_port), geneve_rcv, vport, true, 0);
 +	if (IS_ERR(gs)) {
  		ovs_vport_free(vport);
 -		return ERR_CAST(dev);
 +		return (void *)gs;
  	}
 +	geneve_port->gs = gs;
  
 -	dev_change_flags(dev, dev->flags | IFF_UP);
 -	rtnl_unlock();
  	return vport;
  error:
  	return ERR_PTR(err);
* Unmerged path net/openvswitch/vport-geneve.c
