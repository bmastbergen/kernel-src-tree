openvswitch: Fix mask generation for nested attributes.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] openvswitch: Fix mask generation for nested attributes (Lance Richardson) [1283886]
Rebuild_FUZZ: 99.08%
commit-author Jesse Gross <jesse@nicira.com>
commit 982b527004826b40de1e821b123c70f05b41496c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/982b5270.failed

Masks were added to OVS flows in a way that was backwards compatible
with userspace programs that did not generate masks. As a result, it is
possible that we may receive flows that do not have a mask and we need
to synthesize one.

Generating a mask requires iterating over attributes and descending into
nested attributes. For each level we need to know the size to generate the
correct mask. We do this with a linked table of attribute types.

Although the logic to handle these nested attributes was there in concept,
there are a number of bugs in practice. Examples include incomplete links
between tables, variable length attributes being treated as nested and
missing sanity checks.

	Signed-off-by: Jesse Gross <jesse@nicira.com>
	Acked-by: Pravin B Shelar <pshelar@nicira.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 982b527004826b40de1e821b123c70f05b41496c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/flow_netlink.c
diff --cc net/openvswitch/flow_netlink.c
index 7f4707e70b38,5c030a4d7338..000000000000
--- a/net/openvswitch/flow_netlink.c
+++ b/net/openvswitch/flow_netlink.c
@@@ -339,8 -349,19 +345,15 @@@ static const struct ovs_len_tbl ovs_key
  	[OVS_KEY_ATTR_TUNNEL]	 = { .len = OVS_ATTR_NESTED,
  				     .next = ovs_tunnel_key_lens, },
  	[OVS_KEY_ATTR_MPLS]	 = { .len = sizeof(struct ovs_key_mpls) },
 -	[OVS_KEY_ATTR_CT_STATE]	 = { .len = sizeof(u8) },
 -	[OVS_KEY_ATTR_CT_ZONE]	 = { .len = sizeof(u16) },
 -	[OVS_KEY_ATTR_CT_MARK]	 = { .len = sizeof(u32) },
 -	[OVS_KEY_ATTR_CT_LABEL]	 = { .len = sizeof(struct ovs_key_ct_label) },
  };
  
+ static bool check_attr_len(unsigned int attr_len, unsigned int expected_len)
+ {
+ 	return expected_len == attr_len ||
+ 	       expected_len == OVS_ATTR_NESTED ||
+ 	       expected_len == OVS_ATTR_VARIABLE;
+ }
+ 
  static bool is_all_zero(const u8 *fp, size_t size)
  {
  	int i;
@@@ -473,10 -490,10 +482,15 @@@ static int vxlan_tun_opt_from_nlattr(co
  				     struct sw_flow_match *match, bool is_mask,
  				     bool log)
  {
- 	struct nlattr *tb[OVS_VXLAN_EXT_MAX+1];
+ 	struct nlattr *a;
+ 	int rem;
  	unsigned long opt_key_offset;
++<<<<<<< HEAD
 +	struct ovs_vxlan_opts opts;
 +	int err;
++=======
+ 	struct vxlan_metadata opts;
++>>>>>>> 982b52700482 (openvswitch: Fix mask generation for nested attributes.)
  
  	BUILD_BUG_ON(sizeof(opts) > sizeof(match->key->tun_opts));
  
* Unmerged path net/openvswitch/flow_netlink.c
