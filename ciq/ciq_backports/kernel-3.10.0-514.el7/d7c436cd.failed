gfs2: Update file times after grabbing glock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit d7c436cd605eb203ecf64c40f9b18aa610ac0248
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d7c436cd.failed

In gfs2_page_mkwrite, grab the inode glock in EX mode before calling
file_update_time: grabbing the lock may result in a call to
gfs2_dinode_in, which will reset the file times to their on-disk state.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit d7c436cd605eb203ecf64c40f9b18aa610ac0248)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/file.c
diff --cc fs/gfs2/file.c
index 1c8355288e7e,360188f162bd..000000000000
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@@ -402,10 -395,7 +402,14 @@@ static int gfs2_page_mkwrite(struct vm_
  
  	sb_start_pagefault(inode->i_sb);
  
++<<<<<<< HEAD
 +	/* Update file times before taking page lock */
 +	file_update_time(vma->vm_file);
 +
 +	ret = get_write_access(inode);
++=======
+ 	ret = gfs2_rsqa_alloc(ip);
++>>>>>>> d7c436cd605e (gfs2: Update file times after grabbing glock)
  	if (ret)
  		goto out;
  
* Unmerged path fs/gfs2/file.c
