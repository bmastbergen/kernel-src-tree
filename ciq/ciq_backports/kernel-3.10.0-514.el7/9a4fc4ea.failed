powerpc/kvm: Create proper names for the kvm_host_state PMU fields

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] kvm: Create proper names for the kvm_host_state PMU fields (Thomas Huth) [1287474]
Rebuild_FUZZ: 93.55%
commit-author Michael Ellerman <mpe@ellerman.id.au>
commit 9a4fc4eaf111ca960c9f524b850598e9dbc9697f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9a4fc4ea.failed

We have two arrays in kvm_host_state that contain register values for
the PMU. Currently we only create an asm-offsets symbol for the base of
the arrays, and do the array offset in the assembly code.

Creating an asm-offsets symbol for each field individually makes the
code much nicer to read, particularly for the MMCRx/SIxR/SDAR fields, and
might have helped us notice the recent double restore bug we had in this
code.

	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
	Acked-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit 9a4fc4eaf111ca960c9f524b850598e9dbc9697f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv_interrupts.S
#	arch/powerpc/kvm/book3s_hv_rmhandlers.S
diff --cc arch/powerpc/kvm/book3s_hv_interrupts.S
index 731be7478b27,0fdc4a28970b..000000000000
--- a/arch/powerpc/kvm/book3s_hv_interrupts.S
+++ b/arch/powerpc/kvm/book3s_hv_interrupts.S
@@@ -113,20 -109,12 +113,29 @@@ END_FTR_SECTION_IFSET(CPU_FTR_ARCH_207S
  	mfspr	r7, SPRN_PMC4
  	mfspr	r8, SPRN_PMC5
  	mfspr	r9, SPRN_PMC6
++<<<<<<< HEAD
 +BEGIN_FTR_SECTION
 +	mfspr	r10, SPRN_PMC7
 +	mfspr	r11, SPRN_PMC8
 +END_FTR_SECTION_IFSET(CPU_FTR_ARCH_201)
 +	stw	r3, HSTATE_PMC(r13)
 +	stw	r5, HSTATE_PMC + 4(r13)
 +	stw	r6, HSTATE_PMC + 8(r13)
 +	stw	r7, HSTATE_PMC + 12(r13)
 +	stw	r8, HSTATE_PMC + 16(r13)
 +	stw	r9, HSTATE_PMC + 20(r13)
 +BEGIN_FTR_SECTION
 +	stw	r10, HSTATE_PMC + 24(r13)
 +	stw	r11, HSTATE_PMC + 28(r13)
 +END_FTR_SECTION_IFSET(CPU_FTR_ARCH_201)
++=======
+ 	stw	r3, HSTATE_PMC1(r13)
+ 	stw	r5, HSTATE_PMC2(r13)
+ 	stw	r6, HSTATE_PMC3(r13)
+ 	stw	r7, HSTATE_PMC4(r13)
+ 	stw	r8, HSTATE_PMC5(r13)
+ 	stw	r9, HSTATE_PMC6(r13)
++>>>>>>> 9a4fc4eaf111 (powerpc/kvm: Create proper names for the kvm_host_state PMU fields)
  31:
  
  	/*
diff --cc arch/powerpc/kvm/book3s_hv_rmhandlers.S
index 80d8d3b3232d,bb94e6f20c81..000000000000
--- a/arch/powerpc/kvm/book3s_hv_rmhandlers.S
+++ b/arch/powerpc/kvm/book3s_hv_rmhandlers.S
@@@ -88,31 -88,23 +88,48 @@@ BEGIN_FTR_SECTIO
  	cmpwi	r4, MMCR0_PMAO
  	beql	kvmppc_fix_pmao
  END_FTR_SECTION_IFSET(CPU_FTR_PMAO_BUG)
++<<<<<<< HEAD
 +	lwz	r3, HSTATE_PMC(r13)
 +	lwz	r4, HSTATE_PMC + 4(r13)
 +	lwz	r5, HSTATE_PMC + 8(r13)
 +	lwz	r6, HSTATE_PMC + 12(r13)
 +	lwz	r8, HSTATE_PMC + 16(r13)
 +	lwz	r9, HSTATE_PMC + 20(r13)
 +BEGIN_FTR_SECTION
 +	lwz	r10, HSTATE_PMC + 24(r13)
 +	lwz	r11, HSTATE_PMC + 28(r13)
 +END_FTR_SECTION_IFSET(CPU_FTR_ARCH_201)
++=======
+ 	lwz	r3, HSTATE_PMC1(r13)
+ 	lwz	r4, HSTATE_PMC2(r13)
+ 	lwz	r5, HSTATE_PMC3(r13)
+ 	lwz	r6, HSTATE_PMC4(r13)
+ 	lwz	r8, HSTATE_PMC5(r13)
+ 	lwz	r9, HSTATE_PMC6(r13)
++>>>>>>> 9a4fc4eaf111 (powerpc/kvm: Create proper names for the kvm_host_state PMU fields)
  	mtspr	SPRN_PMC1, r3
  	mtspr	SPRN_PMC2, r4
  	mtspr	SPRN_PMC3, r5
  	mtspr	SPRN_PMC4, r6
  	mtspr	SPRN_PMC5, r8
  	mtspr	SPRN_PMC6, r9
++<<<<<<< HEAD
 +BEGIN_FTR_SECTION
 +	mtspr	SPRN_PMC7, r10
 +	mtspr	SPRN_PMC8, r11
 +END_FTR_SECTION_IFSET(CPU_FTR_ARCH_201)
 +	ld	r3, HSTATE_MMCR(r13)
 +	ld	r4, HSTATE_MMCR + 8(r13)
 +	ld	r5, HSTATE_MMCR + 16(r13)
 +	ld	r6, HSTATE_MMCR + 24(r13)
 +	ld	r7, HSTATE_MMCR + 32(r13)
++=======
+ 	ld	r3, HSTATE_MMCR0(r13)
+ 	ld	r4, HSTATE_MMCR1(r13)
+ 	ld	r5, HSTATE_MMCRA(r13)
+ 	ld	r6, HSTATE_SIAR(r13)
+ 	ld	r7, HSTATE_SDAR(r13)
++>>>>>>> 9a4fc4eaf111 (powerpc/kvm: Create proper names for the kvm_host_state PMU fields)
  	mtspr	SPRN_MMCR1, r4
  	mtspr	SPRN_MMCRA, r5
  	mtspr	SPRN_SIAR, r6
diff --git a/arch/powerpc/kernel/asm-offsets.c b/arch/powerpc/kernel/asm-offsets.c
index c65560f9a64f..88a760251e9e 100644
--- a/arch/powerpc/kernel/asm-offsets.c
+++ b/arch/powerpc/kernel/asm-offsets.c
@@ -640,8 +640,19 @@ int main(void)
 	HSTATE_FIELD(HSTATE_SAVED_XIRR, saved_xirr);
 	HSTATE_FIELD(HSTATE_HOST_IPI, host_ipi);
 	HSTATE_FIELD(HSTATE_PTID, ptid);
-	HSTATE_FIELD(HSTATE_MMCR, host_mmcr);
-	HSTATE_FIELD(HSTATE_PMC, host_pmc);
+	HSTATE_FIELD(HSTATE_MMCR0, host_mmcr[0]);
+	HSTATE_FIELD(HSTATE_MMCR1, host_mmcr[1]);
+	HSTATE_FIELD(HSTATE_MMCRA, host_mmcr[2]);
+	HSTATE_FIELD(HSTATE_SIAR, host_mmcr[3]);
+	HSTATE_FIELD(HSTATE_SDAR, host_mmcr[4]);
+	HSTATE_FIELD(HSTATE_MMCR2, host_mmcr[5]);
+	HSTATE_FIELD(HSTATE_SIER, host_mmcr[6]);
+	HSTATE_FIELD(HSTATE_PMC1, host_pmc[0]);
+	HSTATE_FIELD(HSTATE_PMC2, host_pmc[1]);
+	HSTATE_FIELD(HSTATE_PMC3, host_pmc[2]);
+	HSTATE_FIELD(HSTATE_PMC4, host_pmc[3]);
+	HSTATE_FIELD(HSTATE_PMC5, host_pmc[4]);
+	HSTATE_FIELD(HSTATE_PMC6, host_pmc[5]);
 	HSTATE_FIELD(HSTATE_PURR, host_purr);
 	HSTATE_FIELD(HSTATE_SPURR, host_spurr);
 	HSTATE_FIELD(HSTATE_DSCR, host_dscr);
* Unmerged path arch/powerpc/kvm/book3s_hv_interrupts.S
* Unmerged path arch/powerpc/kvm/book3s_hv_rmhandlers.S
