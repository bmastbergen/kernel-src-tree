crypto: qat - Fix random config build issue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [crypto] qat - Fix random config build issue (Neil Horman) [1274179]
Rebuild_FUZZ: 89.74%
commit-author Tadeusz Struk <tadeusz.struk@intel.com>
commit 1fa844e2ff914370a1c7f14bb854f220bfe87c73
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1fa844e2.failed

	Reported-by: kbuild test robot <fengguang.wu@intel.com>
	Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 1fa844e2ff914370a1c7f14bb854f220bfe87c73)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/adf_common_drv.h
diff --cc drivers/crypto/qat/qat_common/adf_common_drv.h
index 3695dfa679f6,0e82ce3c383e..000000000000
--- a/drivers/crypto/qat/qat_common/adf_common_drv.h
+++ b/drivers/crypto/qat/qat_common/adf_common_drv.h
@@@ -95,6 -106,13 +95,16 @@@ int adf_dev_start(struct adf_accel_dev 
  int adf_dev_stop(struct adf_accel_dev *accel_dev);
  void adf_dev_shutdown(struct adf_accel_dev *accel_dev);
  
++<<<<<<< HEAD
++=======
+ int adf_iov_putmsg(struct adf_accel_dev *accel_dev, u32 msg, u8 vf_nr);
+ void adf_pf2vf_notify_restarting(struct adf_accel_dev *accel_dev);
+ int adf_enable_vf2pf_comms(struct adf_accel_dev *accel_dev);
+ void adf_vf2pf_req_hndl(struct adf_accel_vf_info *vf_info);
+ void adf_devmgr_update_class_index(struct adf_hw_device_data *hw_data);
+ void adf_clean_vf_map(bool);
+ 
++>>>>>>> 1fa844e2ff91 (crypto: qat - Fix random config build issue)
  int adf_ctl_dev_register(void);
  void adf_ctl_dev_unregister(void);
  int adf_processes_dev_register(void);
@@@ -187,8 -223,35 +197,42 @@@ int qat_hal_wr_lm(struct icp_qat_fw_loa
  		  unsigned char ae, unsigned short lm_addr, unsigned int value);
  int qat_uclo_wr_all_uimage(struct icp_qat_fw_loader_handle *handle);
  void qat_uclo_del_uof_obj(struct icp_qat_fw_loader_handle *handle);
++<<<<<<< HEAD
 +int qat_uclo_map_uof_obj(struct icp_qat_fw_loader_handle *handle,
 +			 void *addr_ptr, int mem_size);
 +void qat_uclo_wr_mimage(struct icp_qat_fw_loader_handle *handle,
 +			void *addr_ptr, int mem_size);
++=======
+ int qat_uclo_wr_mimage(struct icp_qat_fw_loader_handle *handle, void *addr_ptr,
+ 		       int mem_size);
+ int qat_uclo_map_obj(struct icp_qat_fw_loader_handle *handle,
+ 		     void *addr_ptr, int mem_size);
+ #if defined(CONFIG_PCI_IOV)
+ int adf_sriov_configure(struct pci_dev *pdev, int numvfs);
+ void adf_disable_sriov(struct adf_accel_dev *accel_dev);
+ void adf_disable_vf2pf_interrupts(struct adf_accel_dev *accel_dev,
+ 				  uint32_t vf_mask);
+ void adf_enable_vf2pf_interrupts(struct adf_accel_dev *accel_dev,
+ 				 uint32_t vf_mask);
+ void adf_enable_pf2vf_interrupts(struct adf_accel_dev *accel_dev);
+ void adf_disable_pf2vf_interrupts(struct adf_accel_dev *accel_dev);
+ #else
+ static inline int adf_sriov_configure(struct pci_dev *pdev, int numvfs)
+ {
+ 	return 0;
+ }
+ 
+ static inline void adf_disable_sriov(struct adf_accel_dev *accel_dev)
+ {
+ }
+ 
+ static inline void adf_enable_pf2vf_interrupts(struct adf_accel_dev *accel_dev)
+ {
+ }
+ 
+ static inline void adf_disable_pf2vf_interrupts(struct adf_accel_dev *accel_dev)
+ {
+ }
+ #endif
++>>>>>>> 1fa844e2ff91 (crypto: qat - Fix random config build issue)
  #endif
* Unmerged path drivers/crypto/qat/qat_common/adf_common_drv.h
