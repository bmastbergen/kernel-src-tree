ethtool: add support for 25G/50G/100G speed modes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Vidya Sagar Ravipati <vidya@cumulusnetworks.com>
commit 3851112e4737cd52aaeda0ce8d084be9ee128106
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3851112e.failed

This patch enhances ethtool link mode bitmap to include
25G/50G/100G speed along with interface modes

	Signed-off-by: Vidya Sagar Ravipati <vidya@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3851112e4737cd52aaeda0ce8d084be9ee128106)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/ethtool.h
diff --cc include/uapi/linux/ethtool.h
index ab64b71b9520,5f030b46cff4..000000000000
--- a/include/uapi/linux/ethtool.h
+++ b/include/uapi/linux/ethtool.h
@@@ -1264,69 -1320,140 +1264,206 @@@ enum ethtool_sfeatures_retval_bits 
  #define SPARC_ETH_GSET		ETHTOOL_GSET
  #define SPARC_ETH_SSET		ETHTOOL_SSET
  
++<<<<<<< HEAD
 +#define SUPPORTED_10baseT_Half		(1 << 0)
 +#define SUPPORTED_10baseT_Full		(1 << 1)
 +#define SUPPORTED_100baseT_Half		(1 << 2)
 +#define SUPPORTED_100baseT_Full		(1 << 3)
 +#define SUPPORTED_1000baseT_Half	(1 << 4)
 +#define SUPPORTED_1000baseT_Full	(1 << 5)
 +#define SUPPORTED_Autoneg		(1 << 6)
 +#define SUPPORTED_TP			(1 << 7)
 +#define SUPPORTED_AUI			(1 << 8)
 +#define SUPPORTED_MII			(1 << 9)
 +#define SUPPORTED_FIBRE			(1 << 10)
 +#define SUPPORTED_BNC			(1 << 11)
 +#define SUPPORTED_10000baseT_Full	(1 << 12)
 +#define SUPPORTED_Pause			(1 << 13)
 +#define SUPPORTED_Asym_Pause		(1 << 14)
 +#define SUPPORTED_2500baseX_Full	(1 << 15)
 +#define SUPPORTED_Backplane		(1 << 16)
 +#define SUPPORTED_1000baseKX_Full	(1 << 17)
 +#define SUPPORTED_10000baseKX4_Full	(1 << 18)
 +#define SUPPORTED_10000baseKR_Full	(1 << 19)
 +#define SUPPORTED_10000baseR_FEC	(1 << 20)
 +#define SUPPORTED_20000baseMLD2_Full	(1 << 21)
 +#define SUPPORTED_20000baseKR2_Full	(1 << 22)
 +#define SUPPORTED_40000baseKR4_Full	(1 << 23)
 +#define SUPPORTED_40000baseCR4_Full	(1 << 24)
 +#define SUPPORTED_40000baseSR4_Full	(1 << 25)
 +#define SUPPORTED_40000baseLR4_Full	(1 << 26)
 +#define SUPPORTED_56000baseKR4_Full	(1 << 27)
 +#define SUPPORTED_56000baseCR4_Full	(1 << 28)
 +#define SUPPORTED_56000baseSR4_Full	(1 << 29)
 +#define SUPPORTED_56000baseLR4_Full	(1 << 30)
 +
 +#define ADVERTISED_10baseT_Half		(1 << 0)
 +#define ADVERTISED_10baseT_Full		(1 << 1)
 +#define ADVERTISED_100baseT_Half	(1 << 2)
 +#define ADVERTISED_100baseT_Full	(1 << 3)
 +#define ADVERTISED_1000baseT_Half	(1 << 4)
 +#define ADVERTISED_1000baseT_Full	(1 << 5)
 +#define ADVERTISED_Autoneg		(1 << 6)
 +#define ADVERTISED_TP			(1 << 7)
 +#define ADVERTISED_AUI			(1 << 8)
 +#define ADVERTISED_MII			(1 << 9)
 +#define ADVERTISED_FIBRE		(1 << 10)
 +#define ADVERTISED_BNC			(1 << 11)
 +#define ADVERTISED_10000baseT_Full	(1 << 12)
 +#define ADVERTISED_Pause		(1 << 13)
 +#define ADVERTISED_Asym_Pause		(1 << 14)
 +#define ADVERTISED_2500baseX_Full	(1 << 15)
 +#define ADVERTISED_Backplane		(1 << 16)
 +#define ADVERTISED_1000baseKX_Full	(1 << 17)
 +#define ADVERTISED_10000baseKX4_Full	(1 << 18)
 +#define ADVERTISED_10000baseKR_Full	(1 << 19)
 +#define ADVERTISED_10000baseR_FEC	(1 << 20)
 +#define ADVERTISED_20000baseMLD2_Full	(1 << 21)
 +#define ADVERTISED_20000baseKR2_Full	(1 << 22)
 +#define ADVERTISED_40000baseKR4_Full	(1 << 23)
 +#define ADVERTISED_40000baseCR4_Full	(1 << 24)
 +#define ADVERTISED_40000baseSR4_Full	(1 << 25)
 +#define ADVERTISED_40000baseLR4_Full	(1 << 26)
 +#define ADVERTISED_56000baseKR4_Full	(1 << 27)
 +#define ADVERTISED_56000baseCR4_Full	(1 << 28)
 +#define ADVERTISED_56000baseSR4_Full	(1 << 29)
 +#define ADVERTISED_56000baseLR4_Full	(1 << 30)
++=======
+ /* Link mode bit indices */
+ enum ethtool_link_mode_bit_indices {
+ 	ETHTOOL_LINK_MODE_10baseT_Half_BIT	= 0,
+ 	ETHTOOL_LINK_MODE_10baseT_Full_BIT	= 1,
+ 	ETHTOOL_LINK_MODE_100baseT_Half_BIT	= 2,
+ 	ETHTOOL_LINK_MODE_100baseT_Full_BIT	= 3,
+ 	ETHTOOL_LINK_MODE_1000baseT_Half_BIT	= 4,
+ 	ETHTOOL_LINK_MODE_1000baseT_Full_BIT	= 5,
+ 	ETHTOOL_LINK_MODE_Autoneg_BIT		= 6,
+ 	ETHTOOL_LINK_MODE_TP_BIT		= 7,
+ 	ETHTOOL_LINK_MODE_AUI_BIT		= 8,
+ 	ETHTOOL_LINK_MODE_MII_BIT		= 9,
+ 	ETHTOOL_LINK_MODE_FIBRE_BIT		= 10,
+ 	ETHTOOL_LINK_MODE_BNC_BIT		= 11,
+ 	ETHTOOL_LINK_MODE_10000baseT_Full_BIT	= 12,
+ 	ETHTOOL_LINK_MODE_Pause_BIT		= 13,
+ 	ETHTOOL_LINK_MODE_Asym_Pause_BIT	= 14,
+ 	ETHTOOL_LINK_MODE_2500baseX_Full_BIT	= 15,
+ 	ETHTOOL_LINK_MODE_Backplane_BIT		= 16,
+ 	ETHTOOL_LINK_MODE_1000baseKX_Full_BIT	= 17,
+ 	ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT	= 18,
+ 	ETHTOOL_LINK_MODE_10000baseKR_Full_BIT	= 19,
+ 	ETHTOOL_LINK_MODE_10000baseR_FEC_BIT	= 20,
+ 	ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT = 21,
+ 	ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT	= 22,
+ 	ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT	= 23,
+ 	ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT	= 24,
+ 	ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT	= 25,
+ 	ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT	= 26,
+ 	ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT	= 27,
+ 	ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT	= 28,
+ 	ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT	= 29,
+ 	ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT	= 30,
+ 	ETHTOOL_LINK_MODE_25000baseCR_Full_BIT	= 31,
+ 	ETHTOOL_LINK_MODE_25000baseKR_Full_BIT	= 32,
+ 	ETHTOOL_LINK_MODE_25000baseSR_Full_BIT	= 33,
+ 	ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT	= 34,
+ 	ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT	= 35,
+ 	ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT	= 36,
+ 	ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT	= 37,
+ 	ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT	= 38,
+ 	ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT	= 39,
+ 
+ 	/* Last allowed bit for __ETHTOOL_LINK_MODE_LEGACY_MASK is bit
+ 	 * 31. Please do NOT define any SUPPORTED_* or ADVERTISED_*
+ 	 * macro for bits > 31. The only way to use indices > 31 is to
+ 	 * use the new ETHTOOL_GLINKSETTINGS/ETHTOOL_SLINKSETTINGS API.
+ 	 */
+ 
+ 	__ETHTOOL_LINK_MODE_LAST
+ 	  = ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT,
+ };
+ 
+ #define __ETHTOOL_LINK_MODE_LEGACY_MASK(base_name)	\
+ 	(1UL << (ETHTOOL_LINK_MODE_ ## base_name ## _BIT))
+ 
+ /* DEPRECATED macros. Please migrate to
+  * ETHTOOL_GLINKSETTINGS/ETHTOOL_SLINKSETTINGS API. Please do NOT
+  * define any new SUPPORTED_* macro for bits > 31.
+  */
+ #define SUPPORTED_10baseT_Half		__ETHTOOL_LINK_MODE_LEGACY_MASK(10baseT_Half)
+ #define SUPPORTED_10baseT_Full		__ETHTOOL_LINK_MODE_LEGACY_MASK(10baseT_Full)
+ #define SUPPORTED_100baseT_Half		__ETHTOOL_LINK_MODE_LEGACY_MASK(100baseT_Half)
+ #define SUPPORTED_100baseT_Full		__ETHTOOL_LINK_MODE_LEGACY_MASK(100baseT_Full)
+ #define SUPPORTED_1000baseT_Half	__ETHTOOL_LINK_MODE_LEGACY_MASK(1000baseT_Half)
+ #define SUPPORTED_1000baseT_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(1000baseT_Full)
+ #define SUPPORTED_Autoneg		__ETHTOOL_LINK_MODE_LEGACY_MASK(Autoneg)
+ #define SUPPORTED_TP			__ETHTOOL_LINK_MODE_LEGACY_MASK(TP)
+ #define SUPPORTED_AUI			__ETHTOOL_LINK_MODE_LEGACY_MASK(AUI)
+ #define SUPPORTED_MII			__ETHTOOL_LINK_MODE_LEGACY_MASK(MII)
+ #define SUPPORTED_FIBRE			__ETHTOOL_LINK_MODE_LEGACY_MASK(FIBRE)
+ #define SUPPORTED_BNC			__ETHTOOL_LINK_MODE_LEGACY_MASK(BNC)
+ #define SUPPORTED_10000baseT_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseT_Full)
+ #define SUPPORTED_Pause			__ETHTOOL_LINK_MODE_LEGACY_MASK(Pause)
+ #define SUPPORTED_Asym_Pause		__ETHTOOL_LINK_MODE_LEGACY_MASK(Asym_Pause)
+ #define SUPPORTED_2500baseX_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(2500baseX_Full)
+ #define SUPPORTED_Backplane		__ETHTOOL_LINK_MODE_LEGACY_MASK(Backplane)
+ #define SUPPORTED_1000baseKX_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(1000baseKX_Full)
+ #define SUPPORTED_10000baseKX4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseKX4_Full)
+ #define SUPPORTED_10000baseKR_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseKR_Full)
+ #define SUPPORTED_10000baseR_FEC	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseR_FEC)
+ #define SUPPORTED_20000baseMLD2_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(20000baseMLD2_Full)
+ #define SUPPORTED_20000baseKR2_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(20000baseKR2_Full)
+ #define SUPPORTED_40000baseKR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseKR4_Full)
+ #define SUPPORTED_40000baseCR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseCR4_Full)
+ #define SUPPORTED_40000baseSR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseSR4_Full)
+ #define SUPPORTED_40000baseLR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseLR4_Full)
+ #define SUPPORTED_56000baseKR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseKR4_Full)
+ #define SUPPORTED_56000baseCR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseCR4_Full)
+ #define SUPPORTED_56000baseSR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseSR4_Full)
+ #define SUPPORTED_56000baseLR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseLR4_Full)
+ /* Please do not define any new SUPPORTED_* macro for bits > 31, see
+  * notice above.
+  */
+ 
+ /*
+  * DEPRECATED macros. Please migrate to
+  * ETHTOOL_GLINKSETTINGS/ETHTOOL_SLINKSETTINGS API. Please do NOT
+  * define any new ADERTISE_* macro for bits > 31.
+  */
+ #define ADVERTISED_10baseT_Half		__ETHTOOL_LINK_MODE_LEGACY_MASK(10baseT_Half)
+ #define ADVERTISED_10baseT_Full		__ETHTOOL_LINK_MODE_LEGACY_MASK(10baseT_Full)
+ #define ADVERTISED_100baseT_Half	__ETHTOOL_LINK_MODE_LEGACY_MASK(100baseT_Half)
+ #define ADVERTISED_100baseT_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(100baseT_Full)
+ #define ADVERTISED_1000baseT_Half	__ETHTOOL_LINK_MODE_LEGACY_MASK(1000baseT_Half)
+ #define ADVERTISED_1000baseT_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(1000baseT_Full)
+ #define ADVERTISED_Autoneg		__ETHTOOL_LINK_MODE_LEGACY_MASK(Autoneg)
+ #define ADVERTISED_TP			__ETHTOOL_LINK_MODE_LEGACY_MASK(TP)
+ #define ADVERTISED_AUI			__ETHTOOL_LINK_MODE_LEGACY_MASK(AUI)
+ #define ADVERTISED_MII			__ETHTOOL_LINK_MODE_LEGACY_MASK(MII)
+ #define ADVERTISED_FIBRE		__ETHTOOL_LINK_MODE_LEGACY_MASK(FIBRE)
+ #define ADVERTISED_BNC			__ETHTOOL_LINK_MODE_LEGACY_MASK(BNC)
+ #define ADVERTISED_10000baseT_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseT_Full)
+ #define ADVERTISED_Pause		__ETHTOOL_LINK_MODE_LEGACY_MASK(Pause)
+ #define ADVERTISED_Asym_Pause		__ETHTOOL_LINK_MODE_LEGACY_MASK(Asym_Pause)
+ #define ADVERTISED_2500baseX_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(2500baseX_Full)
+ #define ADVERTISED_Backplane		__ETHTOOL_LINK_MODE_LEGACY_MASK(Backplane)
+ #define ADVERTISED_1000baseKX_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(1000baseKX_Full)
+ #define ADVERTISED_10000baseKX4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseKX4_Full)
+ #define ADVERTISED_10000baseKR_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseKR_Full)
+ #define ADVERTISED_10000baseR_FEC	__ETHTOOL_LINK_MODE_LEGACY_MASK(10000baseR_FEC)
+ #define ADVERTISED_20000baseMLD2_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(20000baseMLD2_Full)
+ #define ADVERTISED_20000baseKR2_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(20000baseKR2_Full)
+ #define ADVERTISED_40000baseKR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseKR4_Full)
+ #define ADVERTISED_40000baseCR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseCR4_Full)
+ #define ADVERTISED_40000baseSR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseSR4_Full)
+ #define ADVERTISED_40000baseLR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(40000baseLR4_Full)
+ #define ADVERTISED_56000baseKR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseKR4_Full)
+ #define ADVERTISED_56000baseCR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseCR4_Full)
+ #define ADVERTISED_56000baseSR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseSR4_Full)
+ #define ADVERTISED_56000baseLR4_Full	__ETHTOOL_LINK_MODE_LEGACY_MASK(56000baseLR4_Full)
+ /* Please do not define any new ADVERTISED_* macro for bits > 31, see
+  * notice above.
+  */
++>>>>>>> 3851112e4737 (ethtool: add support for 25G/50G/100G speed modes)
  
  /* The following are all involved in forcing a particular link
   * mode for the device for setting things.  When getting the
* Unmerged path include/uapi/linux/ethtool.h
