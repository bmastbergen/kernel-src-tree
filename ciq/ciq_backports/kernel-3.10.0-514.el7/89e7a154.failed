cxgb4: Fixes static checker warning in mps_tcam_show()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit 89e7a154e01cffa325874e90cbb124057416de02
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/89e7a154.failed

The commit 115b56af88b5 ("cxgb4: Update mps_tcam output to include T6
fields") from Dec 23, 2015, leads to the following static checker
warning:

        drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c:1735
mps_tcam_show()
        warn: we tested 'lookup_type' before and it was 'true'

Fixing it.

	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 89e7a154e01cffa325874e90cbb124057416de02)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
index ebdc323e11e2,e6a4072b494b..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
@@@ -1314,22 -1720,84 +1314,98 @@@ static int mps_tcam_show(struct seq_fil
  		}
  
  		tcamxy2valmask(tcamx, tcamy, addr, &mask);
++<<<<<<< HEAD
 +		seq_printf(seq, "%3u %02x:%02x:%02x:%02x:%02x:%02x %012llx"
 +			   "%3c   %#x%4u%4d",
 +			   idx, addr[0], addr[1], addr[2], addr[3], addr[4],
 +			   addr[5], (unsigned long long)mask,
 +			   (cls_lo & SRAM_VLD_F) ? 'Y' : 'N', PORTMAP_G(cls_hi),
 +			   PF_G(cls_lo),
 +			   (cls_lo & VF_VALID_F) ? VF_G(cls_lo) : -1);
 +		if (cls_lo & REPLICATE_F)
 +			seq_printf(seq, " %08x %08x %08x %08x",
 +				   rplc[3], rplc[2], rplc[1], rplc[0]);
++=======
+ 		if (chip_ver > CHELSIO_T5) {
+ 			/* Inner header lookup */
+ 			if (lookup_type && (lookup_type != DATALKPTYPE_M)) {
+ 				seq_printf(seq,
+ 					   "%3u %02x:%02x:%02x:%02x:%02x:%02x "
+ 					   "%012llx %06x %06x    -    -   %3c"
+ 					   "      'I'  %4x   "
+ 					   "%3c   %#x%4u%4d", idx, addr[0],
+ 					   addr[1], addr[2], addr[3],
+ 					   addr[4], addr[5],
+ 					   (unsigned long long)mask,
+ 					   vniy, vnix, dip_hit ? 'Y' : 'N',
+ 					   port_num,
+ 					   (cls_lo & T6_SRAM_VLD_F) ? 'Y' : 'N',
+ 					   PORTMAP_G(cls_hi),
+ 					   T6_PF_G(cls_lo),
+ 					   (cls_lo & T6_VF_VALID_F) ?
+ 					   T6_VF_G(cls_lo) : -1);
+ 			} else {
+ 				seq_printf(seq,
+ 					   "%3u %02x:%02x:%02x:%02x:%02x:%02x "
+ 					   "%012llx    -       -   ",
+ 					   idx, addr[0], addr[1], addr[2],
+ 					   addr[3], addr[4], addr[5],
+ 					   (unsigned long long)mask);
+ 
+ 				if (vlan_vld)
+ 					seq_printf(seq, "%4u   Y     ", ivlan);
+ 				else
+ 					seq_puts(seq, "  -    N     ");
+ 
+ 				seq_printf(seq,
+ 					   "-      %3c  %4x   %3c   %#x%4u%4d",
+ 					   lookup_type ? 'I' : 'O', port_num,
+ 					   (cls_lo & T6_SRAM_VLD_F) ? 'Y' : 'N',
+ 					   PORTMAP_G(cls_hi),
+ 					   T6_PF_G(cls_lo),
+ 					   (cls_lo & T6_VF_VALID_F) ?
+ 					   T6_VF_G(cls_lo) : -1);
+ 			}
+ 		} else
+ 			seq_printf(seq, "%3u %02x:%02x:%02x:%02x:%02x:%02x "
+ 				   "%012llx%3c   %#x%4u%4d",
+ 				   idx, addr[0], addr[1], addr[2], addr[3],
+ 				   addr[4], addr[5], (unsigned long long)mask,
+ 				   (cls_lo & SRAM_VLD_F) ? 'Y' : 'N',
+ 				   PORTMAP_G(cls_hi),
+ 				   PF_G(cls_lo),
+ 				   (cls_lo & VF_VALID_F) ? VF_G(cls_lo) : -1);
+ 
+ 		if (replicate) {
+ 			if (adap->params.arch.mps_rplc_size > 128)
+ 				seq_printf(seq, " %08x %08x %08x %08x "
+ 					   "%08x %08x %08x %08x",
+ 					   rplc[7], rplc[6], rplc[5], rplc[4],
+ 					   rplc[3], rplc[2], rplc[1], rplc[0]);
+ 			else
+ 				seq_printf(seq, " %08x %08x %08x %08x",
+ 					   rplc[3], rplc[2], rplc[1], rplc[0]);
+ 		} else {
+ 			if (adap->params.arch.mps_rplc_size > 128)
+ 				seq_printf(seq, "%72c", ' ');
+ 			else
+ 				seq_printf(seq, "%36c", ' ');
+ 		}
+ 
+ 		if (chip_ver > CHELSIO_T5)
+ 			seq_printf(seq, "%4u%3u%3u%3u %#x\n",
+ 				   T6_SRAM_PRIO0_G(cls_lo),
+ 				   T6_SRAM_PRIO1_G(cls_lo),
+ 				   T6_SRAM_PRIO2_G(cls_lo),
+ 				   T6_SRAM_PRIO3_G(cls_lo),
+ 				   (cls_lo >> T6_MULTILISTEN0_S) & 0xf);
++>>>>>>> 89e7a154e01c (cxgb4: Fixes static checker warning in mps_tcam_show())
  		else
 -			seq_printf(seq, "%4u%3u%3u%3u %#x\n",
 -				   SRAM_PRIO0_G(cls_lo), SRAM_PRIO1_G(cls_lo),
 -				   SRAM_PRIO2_G(cls_lo), SRAM_PRIO3_G(cls_lo),
 -				   (cls_lo >> MULTILISTEN0_S) & 0xf);
 +			seq_printf(seq, "%36c", ' ');
 +		seq_printf(seq, "%4u%3u%3u%3u %#x\n",
 +			   SRAM_PRIO0_G(cls_lo), SRAM_PRIO1_G(cls_lo),
 +			   SRAM_PRIO2_G(cls_lo), SRAM_PRIO3_G(cls_lo),
 +			   (cls_lo >> MULTILISTEN0_S) & 0xf);
  	}
  out:	return 0;
  }
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_debugfs.c
