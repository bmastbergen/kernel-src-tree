drm/nouveau/ltc/gm107-: fix typo in the address of NV_PLTCG_LTC0_LTS0_INTR

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] nouveau/ltc/gm107-: fix typo in the address of NV_PLTCG_LTC0_LTS0_INTR (Rob Clark) [1348329 1349064]
Rebuild_FUZZ: 97.22%
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 9057c8d75018f05bbc769d7b4602de3b8b20f8aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9057c8d7.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 9057c8d75018f05bbc769d7b4602de3b8b20f8aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/engine/gr/gm206.c
#	drivers/gpu/drm/nouveau/nvkm/subdev/ltc/gm107.c
diff --cc drivers/gpu/drm/nouveau/nvkm/engine/gr/gm206.c
index 04b9733d146a,e18e0dc19ec8..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm206.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/gr/gm206.c
@@@ -21,20 -21,43 +21,61 @@@
   *
   * Authors: Ben Skeggs <bskeggs@redhat.com>
   */
 -#include "priv.h"
 +#include "gf100.h"
 +#include "ctxgf100.h"
  
++<<<<<<< HEAD:drivers/gpu/drm/nouveau/nvkm/engine/gr/gm206.c
 +struct nvkm_oclass *
 +gm206_gr_oclass = &(struct gf100_gr_oclass) {
 +	.base.handle = NV_ENGINE(GR, 0x26),
 +	.base.ofuncs = &(struct nvkm_ofuncs) {
 +		.ctor = gf100_gr_ctor,
 +		.dtor = gf100_gr_dtor,
 +		.init = gm204_gr_init,
 +		.fini = _nvkm_gr_fini,
 +	},
 +	.cclass = &gm206_grctx_oclass,
 +	.sclass =  gm204_gr_sclass,
 +	.mmio = gm204_gr_pack_mmio,
 +	.ppc_nr = 2,
 +}.base;
++=======
+ #include <subdev/fb.h>
+ #include <subdev/timer.h>
+ 
+ static int
+ gm200_ltc_oneinit(struct nvkm_ltc *ltc)
+ {
+ 	struct nvkm_device *device = ltc->subdev.device;
+ 
+ 	ltc->ltc_nr = nvkm_rd32(device, 0x12006c);
+ 	ltc->lts_nr = nvkm_rd32(device, 0x17e280) >> 28;
+ 
+ 	return gf100_ltc_oneinit_tag_ram(ltc);
+ }
+ static void
+ gm200_ltc_init(struct nvkm_ltc *ltc)
+ {
+ 	nvkm_wr32(ltc->subdev.device, 0x17e278, ltc->tag_base);
+ }
+ 
+ static const struct nvkm_ltc_func
+ gm200_ltc = {
+ 	.oneinit = gm200_ltc_oneinit,
+ 	.init = gm200_ltc_init,
+ 	.intr = gm107_ltc_intr,
+ 	.cbc_clear = gm107_ltc_cbc_clear,
+ 	.cbc_wait = gm107_ltc_cbc_wait,
+ 	.zbc = 16,
+ 	.zbc_clear_color = gm107_ltc_zbc_clear_color,
+ 	.zbc_clear_depth = gm107_ltc_zbc_clear_depth,
+ 	.invalidate = gf100_ltc_invalidate,
+ 	.flush = gf100_ltc_flush,
+ };
+ 
+ int
+ gm200_ltc_new(struct nvkm_device *device, int index, struct nvkm_ltc **pltc)
+ {
+ 	return nvkm_ltc_new_(&gm200_ltc, device, index, pltc);
+ }
++>>>>>>> 9057c8d75018 (drm/nouveau/ltc/gm107-: fix typo in the address of NV_PLTCG_LTC0_LTS0_INTR):drivers/gpu/drm/nouveau/nvkm/subdev/ltc/gm200.c
diff --cc drivers/gpu/drm/nouveau/nvkm/subdev/ltc/gm107.c
index 6b3f6f4ce107,389fb13a1998..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/gm107.c
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/ltc/gm107.c
@@@ -26,21 -26,26 +26,34 @@@
  #include <subdev/fb.h>
  #include <subdev/timer.h>
  
 -void
 -gm107_ltc_cbc_clear(struct nvkm_ltc *ltc, u32 start, u32 limit)
 +static void
 +gm107_ltc_cbc_clear(struct nvkm_ltc_priv *priv, u32 start, u32 limit)
  {
 -	struct nvkm_device *device = ltc->subdev.device;
 -	nvkm_wr32(device, 0x17e270, start);
 -	nvkm_wr32(device, 0x17e274, limit);
 -	nvkm_mask(device, 0x17e26c, 0x00000000, 0x00000004);
 +	nv_wr32(priv, 0x17e270, start);
 +	nv_wr32(priv, 0x17e274, limit);
 +	nv_wr32(priv, 0x17e26c, 0x00000004);
  }
  
 -void
 -gm107_ltc_cbc_wait(struct nvkm_ltc *ltc)
 +static void
++<<<<<<< HEAD
 +gm107_ltc_cbc_wait(struct nvkm_ltc_priv *priv)
  {
 -	struct nvkm_device *device = ltc->subdev.device;
  	int c, s;
 -	for (c = 0; c < ltc->ltc_nr; c++) {
 -		for (s = 0; s < ltc->lts_nr; s++) {
 -			const u32 addr = 0x14046c + (c * 0x2000) + (s * 0x200);
 -			nvkm_wait_msec(device, 2000, addr,
 -				       0x00000004, 0x00000000);
 -		}
 +	for (c = 0; c < priv->ltc_nr; c++) {
 +		for (s = 0; s < priv->lts_nr; s++)
 +			nv_wait(priv, 0x14046c + c * 0x2000 + s * 0x200, ~0, 0);
++=======
++gm107_ltc_intr_lts(struct nvkm_ltc *ltc, int c, int s)
++{
++	struct nvkm_subdev *subdev = &ltc->subdev;
++	struct nvkm_device *device = subdev->device;
++	u32 base = 0x140400 + (c * 0x2000) + (s * 0x200);
++	u32 stat = nvkm_rd32(device, base + 0x00c);
++
++	if (stat) {
++		nvkm_error(subdev, "LTC%d_LTS%d: %08x\n", c, s, stat);
++		nvkm_wr32(device, base + 0x00c, stat);
++>>>>>>> 9057c8d75018 (drm/nouveau/ltc/gm107-: fix typo in the address of NV_PLTCG_LTC0_LTS0_INTR)
  	}
  }
  
@@@ -73,18 -82,18 +86,25 @@@ gm107_ltc_lts_isr(struct nvkm_ltc_priv 
  	}
  }
  
 -void
 -gm107_ltc_intr(struct nvkm_ltc *ltc)
 +static void
 +gm107_ltc_intr(struct nvkm_subdev *subdev)
  {
 -	struct nvkm_device *device = ltc->subdev.device;
 +	struct nvkm_ltc_priv *priv = (void *)subdev;
  	u32 mask;
  
 -	mask = nvkm_rd32(device, 0x00017c);
 +	mask = nv_rd32(priv, 0x00017c);
  	while (mask) {
++<<<<<<< HEAD
 +		u32 lts, ltc = __ffs(mask);
 +		for (lts = 0; lts < priv->lts_nr; lts++)
 +			gm107_ltc_lts_isr(priv, ltc, lts);
 +		mask &= ~(1 << ltc);
++=======
+ 		u32 s, c = __ffs(mask);
+ 		for (s = 0; s < ltc->lts_nr; s++)
+ 			gm107_ltc_intr_lts(ltc, c, s);
+ 		mask &= ~(1 << c);
++>>>>>>> 9057c8d75018 (drm/nouveau/ltc/gm107-: fix typo in the address of NV_PLTCG_LTC0_LTS0_INTR)
  	}
  }
  
* Unmerged path drivers/gpu/drm/nouveau/nvkm/engine/gr/gm206.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/subdev/ltc/gm107.c
