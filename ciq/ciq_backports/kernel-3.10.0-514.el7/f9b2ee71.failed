SUNRPC: Move UDP receive data path into a workqueue context

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit f9b2ee714c5c945cda27e9cbca5f60d5199fb93f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f9b2ee71.failed

Now that we've done it for TCP, let's convert UDP as well.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit f9b2ee714c5c945cda27e9cbca5f60d5199fb93f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtsock.c
diff --cc net/sunrpc/xprtsock.c
index 8f47abde4939,df8bdcc10640..000000000000
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@@ -1015,17 -972,19 +1015,23 @@@ static void xs_local_data_ready(struct 
  }
  
  /**
-  * xs_udp_data_ready - "data ready" callback for UDP sockets
-  * @sk: socket with data to read
+  * xs_udp_data_read_skb - receive callback for UDP sockets
+  * @xprt: transport
+  * @sk: socket
+  * @skb: skbuff
   *
   */
++<<<<<<< HEAD
 +static void xs_udp_data_ready(struct sock *sk, int len)
++=======
+ static void xs_udp_data_read_skb(struct rpc_xprt *xprt,
+ 		struct sock *sk,
+ 		struct sk_buff *skb)
++>>>>>>> f9b2ee714c5c (SUNRPC: Move UDP receive data path into a workqueue context)
  {
  	struct rpc_task *task;
- 	struct rpc_xprt *xprt;
  	struct rpc_rqst *rovr;
- 	struct sk_buff *skb;
- 	int err, repsize, copied;
+ 	int repsize, copied;
  	u32 _xid;
  	__be32 *xp;
  
@@@ -2106,9 -2132,9 +2148,9 @@@ static void xs_udp_finish_connecting(st
  		xs_save_old_callbacks(transport, sk);
  
  		sk->sk_user_data = xprt;
- 		sk->sk_data_ready = xs_udp_data_ready;
+ 		sk->sk_data_ready = xs_data_ready;
  		sk->sk_write_space = xs_udp_write_space;
 -		sk->sk_allocation = GFP_NOIO;
 +		sk->sk_allocation = GFP_ATOMIC;
  
  		xprt_set_connected(xprt);
  
@@@ -2789,6 -2849,9 +2831,12 @@@ static struct rpc_xprt *xs_setup_udp(st
  
  	xprt->timeout = &xs_udp_default_timeout;
  
++<<<<<<< HEAD
++=======
+ 	INIT_WORK(&transport->recv_worker, xs_udp_data_receive_workfn);
+ 	INIT_DELAYED_WORK(&transport->connect_worker, xs_udp_setup_socket);
+ 
++>>>>>>> f9b2ee714c5c (SUNRPC: Move UDP receive data path into a workqueue context)
  	switch (addr->sa_family) {
  	case AF_INET:
  		if (((struct sockaddr_in *)addr)->sin_port != htons(0))
* Unmerged path net/sunrpc/xprtsock.c
