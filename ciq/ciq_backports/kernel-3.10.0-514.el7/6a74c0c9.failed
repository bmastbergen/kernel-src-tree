pnfs/blocklayout: fix end calculation in pnfs_num_cont_bytes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 6a74c0c9402b85647793da70edc9d6b097d54472
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6a74c0c9.failed

Use the number of pages in the pagecache mapping instead of the
number of pnfs requests which is only slightly related.

	Reported-by: Weston Andros Adamson <dros@primarydata.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 6a74c0c9402b85647793da70edc9d6b097d54472)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/blocklayout/blocklayout.c
diff --cc fs/nfs/blocklayout/blocklayout.c
index 73d932f25c6a,77fec6a55f57..000000000000
--- a/fs/nfs/blocklayout/blocklayout.c
+++ b/fs/nfs/blocklayout/blocklayout.c
@@@ -812,7 -812,7 +812,11 @@@ static u64 pnfs_num_cont_bytes(struct i
  
  	/* Optimize common case that writes from 0 to end of file */
  	end = DIV_ROUND_UP(i_size_read(inode), PAGE_CACHE_SIZE);
++<<<<<<< HEAD
 +	if (end != NFS_I(inode)->nrequests) {
++=======
+ 	if (end != inode->i_mapping->nrpages) {
++>>>>>>> 6a74c0c9402b (pnfs/blocklayout: fix end calculation in pnfs_num_cont_bytes)
  		rcu_read_lock();
  		end = page_cache_next_hole(mapping, idx + 1, ULONG_MAX);
  		rcu_read_unlock();
* Unmerged path fs/nfs/blocklayout/blocklayout.c
