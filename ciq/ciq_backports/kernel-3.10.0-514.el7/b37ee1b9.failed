libceph: move schedule_delayed_work() in ceph_osdc_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ilya Dryomov <idryomov@gmail.com>
commit b37ee1b9b840a6da63e78865f97a9a78b7534477
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b37ee1b9.failed

ceph_osdc_stop() isn't called if ceph_osdc_init() fails, so we end up
with handle_osds_timeout() running on invalid memory if any one of the
allocations fails.  Call schedule_delayed_work() after everything is
setup, just before returning.

	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit b37ee1b9b840a6da63e78865f97a9a78b7534477)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ceph/osd_client.c
diff --cc net/ceph/osd_client.c
index 4e649b707367,4c7231e55cb7..000000000000
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@@ -2592,9 -2729,6 +2592,12 @@@ int ceph_osdc_init(struct ceph_osd_clie
  	osdc->event_tree = RB_ROOT;
  	osdc->event_count = 0;
  
++<<<<<<< HEAD
 +	schedule_delayed_work(&osdc->osds_timeout_work,
 +	   round_jiffies_relative(osdc->client->options->osd_idle_ttl * HZ));
 +
++=======
++>>>>>>> b37ee1b9b840 (libceph: move schedule_delayed_work() in ceph_osdc_init())
  	err = -ENOMEM;
  	osdc->req_mempool = mempool_create_slab_pool(10,
  						     ceph_osd_request_cache);
* Unmerged path net/ceph/osd_client.c
