mm/mempolicy.c: fix mempolicy printing in numa_maps

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] mempolicy.c: fix mempolicy printing in numa_maps ("Herton R. Krzesinski") [1336863]
Rebuild_FUZZ: 96.97%
commit-author David Rientjes <rientjes@google.com>
commit 8790c71a18e5d2d93532ae250bcf5eddbba729cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8790c71a.failed

As a result of commit 5606e3877ad8 ("mm: numa: Migrate on reference
policy"), /proc/<pid>/numa_maps prints the mempolicy for any <pid> as
"prefer:N" for the local node, N, of the process reading the file.

This should only be printed when the mempolicy of <pid> is
MPOL_PREFERRED for node N.

If the process is actually only using the default mempolicy for local
node allocation, make sure "default" is printed as expected.

	Signed-off-by: David Rientjes <rientjes@google.com>
	Reported-by: Robert Lippert <rlippert@google.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Acked-by: Mel Gorman <mgorman@suse.de>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: <stable@vger.kernel.org>	[3.7+]
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 8790c71a18e5d2d93532ae250bcf5eddbba729cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/mempolicy.c
diff --cc mm/mempolicy.c
index 28e8babf3f0c,ae3c8f3595d4..000000000000
--- a/mm/mempolicy.c
+++ b/mm/mempolicy.c
@@@ -2837,27 -2919,21 +2837,31 @@@ out
   * @maxlen:  length of @buffer
   * @pol:  pointer to mempolicy to be formatted
   *
 - * Convert @pol into a string.  If @buffer is too short, truncate the string.
 - * Recommend a @maxlen of at least 32 for the longest mode, "interleave", the
 - * longest flag, "relative", and to display at least a few node ids.
 + * Convert a mempolicy into a string.
 + * Returns the number of characters in buffer (if positive)
 + * or an error (negative)
   */
 -void mpol_to_str(char *buffer, int maxlen, struct mempolicy *pol)
 +int mpol_to_str(char *buffer, int maxlen, struct mempolicy *pol)
  {
  	char *p = buffer;
 -	nodemask_t nodes = NODE_MASK_NONE;
 -	unsigned short mode = MPOL_DEFAULT;
 -	unsigned short flags = 0;
 +	int l;
 +	nodemask_t nodes;
 +	unsigned short mode;
 +	unsigned short flags = pol ? pol->flags : 0;
  
++<<<<<<< HEAD
 +	/*
 +	 * Sanity check:  room for longest mode, flag and some nodes
 +	 */
 +	VM_BUG_ON(maxlen < strlen("interleave") + strlen("relative") + 16);
 +
 +	if (!pol || pol == &default_policy)
 +		mode = MPOL_DEFAULT;
 +	else
++=======
+ 	if (pol && pol != &default_policy && !(pol->flags & MPOL_F_MORON)) {
++>>>>>>> 8790c71a18e5 (mm/mempolicy.c: fix mempolicy printing in numa_maps)
  		mode = pol->mode;
 -		flags = pol->flags;
 -	}
  
  	switch (mode) {
  	case MPOL_DEFAULT:
* Unmerged path mm/mempolicy.c
