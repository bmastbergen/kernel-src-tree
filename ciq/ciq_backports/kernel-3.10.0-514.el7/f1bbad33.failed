i40e: Make the DCB firmware checks for X710/XL710 only

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Neerav Parikh <neerav.parikh@intel.com>
commit f1bbad339cdd74cea945e33d758200d42310be17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f1bbad33.failed

Make the DCB firmware version related checks specific to
X710 and XL710 only. These checks are not required for
X722 family of devices.

Introduced an inline routine to help determine if the
MAC type is X710/XL710 or not.

Moved the firmware version related checks in i40e_sw_init()
and defined flags for different cases

Fix the version check to allow using "Set LLDP MIB" AQ
for beyond FVL4 FW releases.

Change-ID: Ib78288343de983aa0354fc28aa36e99b073662c0
	Signed-off-by: Neerav Parikh <neerav.parikh@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit f1bbad339cdd74cea945e33d758200d42310be17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e.h
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e.h
index 3969c6d6998f,7bfd062fbadc..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@@ -341,6 -353,11 +354,14 @@@ struct i40e_pf 
  #define I40E_FLAG_VEB_MODE_ENABLED		BIT_ULL(40)
  #define I40E_FLAG_GENEVE_OFFLOAD_CAPABLE	BIT_ULL(41)
  #define I40E_FLAG_NO_PCI_LINK_CHECK		BIT_ULL(42)
++<<<<<<< HEAD
++=======
+ #define I40E_FLAG_100M_SGMII_CAPABLE		BIT_ULL(43)
+ #define I40E_FLAG_RESTART_AUTONEG		BIT_ULL(44)
+ #define I40E_FLAG_NO_DCB_SUPPORT		BIT_ULL(45)
+ #define I40E_FLAG_USE_SET_LLDP_MIB		BIT_ULL(46)
+ #define I40E_FLAG_STOP_FW_LLDP			BIT_ULL(47)
++>>>>>>> f1bbad339cdd (i40e: Make the DCB firmware checks for X710/XL710 only)
  #define I40E_FLAG_PF_MAC			BIT_ULL(50)
  
  	/* tracks features that get auto disabled by errors */
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 94c3277e2ada,81b789587037..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -8396,6 -8424,26 +8395,29 @@@ static int i40e_sw_init(struct i40e_pf 
  				 pf->hw.func_caps.fd_filters_best_effort;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (i40e_is_mac_710(&pf->hw) &&
+ 	    (((pf->hw.aq.fw_maj_ver == 4) && (pf->hw.aq.fw_min_ver < 33)) ||
+ 	    (pf->hw.aq.fw_maj_ver < 4))) {
+ 		pf->flags |= I40E_FLAG_RESTART_AUTONEG;
+ 		/* No DCB support  for FW < v4.33 */
+ 		pf->flags |= I40E_FLAG_NO_DCB_SUPPORT;
+ 	}
+ 
+ 	/* Disable FW LLDP if FW < v4.3 */
+ 	if (i40e_is_mac_710(&pf->hw) &&
+ 	    (((pf->hw.aq.fw_maj_ver == 4) && (pf->hw.aq.fw_min_ver < 3)) ||
+ 	    (pf->hw.aq.fw_maj_ver < 4)))
+ 		pf->flags |= I40E_FLAG_STOP_FW_LLDP;
+ 
+ 	/* Use the FW Set LLDP MIB API if FW > v4.40 */
+ 	if (i40e_is_mac_710(&pf->hw) &&
+ 	    (((pf->hw.aq.fw_maj_ver == 4) && (pf->hw.aq.fw_min_ver >= 40)) ||
+ 	    (pf->hw.aq.fw_maj_ver >= 5)))
+ 		pf->flags |= I40E_FLAG_USE_SET_LLDP_MIB;
+ 
++>>>>>>> f1bbad339cdd (i40e: Make the DCB firmware checks for X710/XL710 only)
  	if (pf->hw.func_caps.vmdq) {
  		pf->num_vmdq_vsis = I40E_DEFAULT_NUM_VMDQ_VSI;
  		pf->flags |= I40E_FLAG_VMDQ_ENABLED;
@@@ -8422,8 -8470,19 +8444,13 @@@
  			     I40E_FLAG_OUTER_UDP_CSUM_CAPABLE |
  			     I40E_FLAG_WB_ON_ITR_CAPABLE |
  			     I40E_FLAG_MULTIPLE_TCP_UDP_RSS_PCTYPE |
++<<<<<<< HEAD
++=======
+ 			     I40E_FLAG_100M_SGMII_CAPABLE |
+ 			     I40E_FLAG_USE_SET_LLDP_MIB |
++>>>>>>> f1bbad339cdd (i40e: Make the DCB firmware checks for X710/XL710 only)
  			     I40E_FLAG_GENEVE_OFFLOAD_CAPABLE;
 -	} else if ((pf->hw.aq.api_maj_ver > 1) ||
 -		   ((pf->hw.aq.api_maj_ver == 1) &&
 -		    (pf->hw.aq.api_min_ver > 4))) {
 -		/* Supported in FW API version higher than 1.4 */
 -		pf->flags |= I40E_FLAG_GENEVE_OFFLOAD_CAPABLE;
 -		pf->auto_disable_flags = I40E_FLAG_HW_ATR_EVICT_CAPABLE;
 -	} else {
 -		pf->auto_disable_flags = I40E_FLAG_HW_ATR_EVICT_CAPABLE;
  	}
 -
  	pf->eeprom_version = 0xDEAD;
  	pf->lan_veb = I40E_NO_VEB;
  	pf->lan_vsi = I40E_NO_VSI;
* Unmerged path drivers/net/ethernet/intel/i40e/i40e.h
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
