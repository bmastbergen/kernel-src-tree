sfc: Disable VLAN filtering by default if not strictly required

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andrew Rybchenko <Andrew.Rybchenko@oktetlabs.ru>
commit eb7cfd8c9b6e28edf339b89bf19322c11514d286
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eb7cfd8c.failed

If should be done after net_dev->hw_features initialization, to keep the
feature there to be able to enable it later using ethtool.

VLAN filtering is enforced and fixed if vPort requires usage of VLAN
filters to receive tagged traffic.

	Signed-off-by: Edward Cree <ecree@solarflare.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eb7cfd8c9b6e28edf339b89bf19322c11514d286)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/sfc/efx.c
diff --cc drivers/net/ethernet/sfc/efx.c
index 53cef44eb6ce,14b821b1c880..000000000000
--- a/drivers/net/ethernet/sfc/efx.c
+++ b/drivers/net/ethernet/sfc/efx.c
@@@ -3162,17 -3193,25 +3162,30 @@@ static int efx_pci_probe(struct pci_de
  		return -ENOMEM;
  	efx = netdev_priv(net_dev);
  	efx->type = (const struct efx_nic_type *) entry->driver_data;
 -	efx->fixed_features |= NETIF_F_HIGHDMA;
  	net_dev->features |= (efx->type->offload_features | NETIF_F_SG |
 -			      NETIF_F_TSO | NETIF_F_RXCSUM);
 -	if (efx->type->offload_features & (NETIF_F_IPV6_CSUM | NETIF_F_HW_CSUM))
 +			      NETIF_F_HIGHDMA | NETIF_F_TSO |
 +			      NETIF_F_RXCSUM);
 +	if (efx->type->offload_features & NETIF_F_V6_CSUM)
  		net_dev->features |= NETIF_F_TSO6;
  	/* Mask for features that also apply to VLAN devices */
 -	net_dev->vlan_features |= (NETIF_F_HW_CSUM | NETIF_F_SG |
 +	net_dev->vlan_features |= (NETIF_F_ALL_CSUM | NETIF_F_SG |
  				   NETIF_F_HIGHDMA | NETIF_F_ALL_TSO |
  				   NETIF_F_RXCSUM);
++<<<<<<< HEAD
 +	/* All offloads can be toggled */
 +	net_dev->hw_features = net_dev->features & ~NETIF_F_HIGHDMA;
++=======
+ 
+ 	net_dev->hw_features = net_dev->features & ~efx->fixed_features;
+ 
+ 	/* Disable VLAN filtering by default.  It may be enforced if
+ 	 * the feature is fixed (i.e. VLAN filters are required to
+ 	 * receive VLAN tagged packets due to vPort restrictions).
+ 	 */
+ 	net_dev->features &= ~NETIF_F_HW_VLAN_CTAG_FILTER;
+ 	net_dev->features |= efx->fixed_features;
+ 
++>>>>>>> eb7cfd8c9b6e (sfc: Disable VLAN filtering by default if not strictly required)
  	pci_set_drvdata(pci_dev, efx);
  	SET_NETDEV_DEV(net_dev, &pci_dev->dev);
  	rc = efx_init_struct(efx, pci_dev, net_dev);
* Unmerged path drivers/net/ethernet/sfc/efx.c
