r8152: remove clearing bp

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author hayeswang <hayeswang@realtek.com>
commit 204c8704128943bf3f8b605f4b40bdc2b6bd89dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/204c8704.failed

The xxx_clear_bp() is used to halt the firmware. It only necessary
for updating the new firmware. Besides, depend on the version of
the current firmware, it may have problem to halt the firmware
directly. Finally, halt the firmware would let the firmware code
useless, and the bugs which are fixed by the firmware would occur.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 204c8704128943bf3f8b605f4b40bdc2b6bd89dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index e7e0123b82cc,18b9e0d7d6bb..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -23,13 -22,11 +23,13 @@@
  #include <linux/ip.h>
  #include <linux/ipv6.h>
  #include <net/ip6_checksum.h>
 +#include <uapi/linux/mdio.h>
 +#include <linux/mdio.h>
  
  /* Version Information */
- #define DRIVER_VERSION "v1.06.0 (2014/03/03)"
+ #define DRIVER_VERSION "v1.06.1 (2014/10/01)"
  #define DRIVER_AUTHOR "Realtek linux nic maintainers <nic_swsd@realtek.com>"
 -#define DRIVER_DESC "Realtek RTL8152/RTL8153 Based USB Ethernet Adapters"
 +#define DRIVER_DESC "Realtek RTL8152 Based USB 2.0 Ethernet Adapters"
  #define MODULENAME "r8152"
  
  #define R8152_PHY_ID		32
@@@ -2210,28 -2201,6 +2210,31 @@@ static void rtl_phy_reset(struct r8152 
  	}
  }
  
++<<<<<<< HEAD
 +static void rtl_clear_bp(struct r8152 *tp)
 +{
 +	ocp_write_dword(tp, MCU_TYPE_PLA, PLA_BP_0, 0);
 +	ocp_write_dword(tp, MCU_TYPE_PLA, PLA_BP_2, 0);
 +	ocp_write_dword(tp, MCU_TYPE_PLA, PLA_BP_4, 0);
 +	ocp_write_dword(tp, MCU_TYPE_PLA, PLA_BP_6, 0);
 +	ocp_write_dword(tp, MCU_TYPE_USB, USB_BP_0, 0);
 +	ocp_write_dword(tp, MCU_TYPE_USB, USB_BP_2, 0);
 +	ocp_write_dword(tp, MCU_TYPE_USB, USB_BP_4, 0);
 +	ocp_write_dword(tp, MCU_TYPE_USB, USB_BP_6, 0);
 +	usleep_range(3000, 6000);
 +	ocp_write_word(tp, MCU_TYPE_PLA, PLA_BP_BA, 0);
 +	ocp_write_word(tp, MCU_TYPE_USB, USB_BP_BA, 0);
 +}
 +
 +static void r8153_clear_bp(struct r8152 *tp)
 +{
 +	ocp_write_byte(tp, MCU_TYPE_PLA, PLA_BP_EN, 0);
 +	ocp_write_byte(tp, MCU_TYPE_USB, USB_BP_EN, 0);
 +	rtl_clear_bp(tp);
 +}
 +
++=======
++>>>>>>> 204c87041289 (r8152: remove clearing bp)
  static void r8153_teredo_off(struct r8152 *tp)
  {
  	u32 ocp_data;
* Unmerged path drivers/net/usb/r8152.c
