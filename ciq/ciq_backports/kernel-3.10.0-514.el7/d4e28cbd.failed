net/mlx5e: Use the right DMA free function on TX path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Achiad Shochat <achiad@mellanox.com>
commit d4e28cbd24c8cb004960ddb8b22124953f6c220c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d4e28cbd.failed

On xmit path we use skb_frag_dma_map() which is using dma_map_page(),
while upon completion we dma-unmap the skb fragments using
dma_unmap_single() rather than dma_unmap_page().

To fix this, we now save the dma map type on xmit path and use this
info to call the right dma unmap method upon TX completion.

	Signed-off-by: Achiad Shochat <achiad@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d4e28cbd24c8cb004960ddb8b22124953f6c220c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
index 3168033e9691,1341b1d3c421..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
@@@ -81,25 -104,11 +104,30 @@@ static void mlx5e_dma_unmap_wqe_err(str
  	}
  }
  
++<<<<<<< HEAD
 +static inline void mlx5e_dma_push(struct mlx5e_sq *sq, dma_addr_t addr,
 +				  u32 size)
 +{
 +	sq->dma_fifo[sq->dma_fifo_pc & sq->dma_fifo_mask].addr = addr;
 +	sq->dma_fifo[sq->dma_fifo_pc & sq->dma_fifo_mask].size = size;
 +	sq->dma_fifo_pc++;
 +}
 +
 +static inline void mlx5e_dma_get(struct mlx5e_sq *sq, u32 i, dma_addr_t *addr,
 +				 u32 *size)
 +{
 +	*addr = sq->dma_fifo[i & sq->dma_fifo_mask].addr;
 +	*size = sq->dma_fifo[i & sq->dma_fifo_mask].size;
 +}
 +
 +u16 mlx5e_select_queue(struct net_device *dev, struct sk_buff *skb)
++=======
+ u16 mlx5e_select_queue(struct net_device *dev, struct sk_buff *skb,
+ 		       void *accel_priv, select_queue_fallback_t fallback)
++>>>>>>> d4e28cbd24c8 (net/mlx5e: Use the right DMA free function on TX path)
  {
  	struct mlx5e_priv *priv = netdev_priv(dev);
 -	int channel_ix = fallback(dev, skb);
 +	int channel_ix = __netdev_pick_tx(dev, skb);
  	int up = skb_vlan_tag_present(skb)        ?
  		 skb->vlan_tci >> VLAN_PRIO_SHIFT :
  		 priv->default_vlan_prio;
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index e757ef00ad14..df6917b0e64b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -334,9 +334,15 @@ struct mlx5e_tx_skb_cb {
 
 #define MLX5E_TX_SKB_CB(__skb) ((struct mlx5e_tx_skb_cb *)__skb->cb)
 
+enum mlx5e_dma_map_type {
+	MLX5E_DMA_MAP_SINGLE,
+	MLX5E_DMA_MAP_PAGE
+};
+
 struct mlx5e_sq_dma {
-	dma_addr_t addr;
-	u32        size;
+	dma_addr_t              addr;
+	u32                     size;
+	enum mlx5e_dma_map_type type;
 };
 
 enum {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
