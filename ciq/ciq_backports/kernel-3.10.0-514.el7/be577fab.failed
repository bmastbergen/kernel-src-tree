nvme: Use pci_enable_msi_range() and pci_enable_msix_range()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Gordeev <agordeev@redhat.com>
commit be577fabf3ec2c9593f4d3c044283be783b88c3b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/be577fab.failed

As result of deprecation of MSI-X/MSI enablement functions
pci_enable_msix() and pci_enable_msi_block() all drivers
using these two interfaces need to be updated to use the
new pci_enable_msi_range()  or pci_enable_msi_exact()
and pci_enable_msix_range() or pci_enable_msix_exact()
interfaces.

	Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
	Cc: Keith Busch <keith.busch@intel.com>
	Cc: Matthew Wilcox <willy@linux.intel.com>
	Cc: Jens Axboe <axboe@kernel.dk>
	Cc: linux-nvme@lists.infradead.org
	Cc: linux-pci@vger.kernel.org
	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit be577fabf3ec2c9593f4d3c044283be783b88c3b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index c00f9063655c,eca2b3ed8475..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2137,38 -1837,16 +2137,28 @@@ static int nvme_setup_io_queues(struct 
  	/* Deregister the admin queue's interrupt */
  	free_irq(dev->entry[0].vector, adminq);
  
++<<<<<<< HEAD
 +	/*
 +	 * If we enable msix early due to not intx, disable it again before
 +	 * setting up the full range we need.
 +	 */
 +	if (!pdev->irq)
 +		pci_disable_msix(pdev);
 +
 +	vecs = nr_io_queues;
 +	for (i = 0; i < vecs; i++)
++=======
+ 	for (i = 0; i < nr_io_queues; i++)
++>>>>>>> be577fabf3ec (nvme: Use pci_enable_msi_range() and pci_enable_msix_range())
  		dev->entry[i].entry = i;
- 	for (;;) {
- 		result = pci_enable_msix(pdev, dev->entry, vecs);
- 		if (result <= 0)
- 			break;
- 		vecs = result;
- 	}
- 
- 	if (result < 0) {
- 		vecs = nr_io_queues;
- 		if (vecs > 32)
- 			vecs = 32;
- 		for (;;) {
- 			result = pci_enable_msi_block(pdev, vecs);
- 			if (result == 0) {
- 				for (i = 0; i < vecs; i++)
- 					dev->entry[i].vector = i + pdev->irq;
- 				break;
- 			} else if (result < 0) {
- 				vecs = 1;
- 				break;
- 			}
- 			vecs = result;
+ 	vecs = pci_enable_msix_range(pdev, dev->entry, 1, nr_io_queues);
+ 	if (vecs < 0) {
+ 		vecs = pci_enable_msi_range(pdev, 1, min(nr_io_queues, 32));
+ 		if (vecs < 0) {
+ 			vecs = 1;
+ 		} else {
+ 			for (i = 0; i < vecs; i++)
+ 				dev->entry[i].vector = i + pdev->irq;
  		}
  	}
  
* Unmerged path drivers/block/nvme-core.c
