perf hists: Fix min callchain hits calculation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 744070e0e4ac691bb43608f7bf46a9641a9cf342
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/744070e0.failed

The total period should be get using hists__total_period() since it
takes filtered entries into account.  In addition, if callchain mode is
'fractal', the total period should be the entry's period.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1453909257-26015-2-git-send-email-namhyung@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 744070e0e4ac691bb43608f7bf46a9641a9cf342)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.c
diff --cc tools/perf/util/hist.c
index 8a0f162d404d,b96194676c91..000000000000
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@@ -1158,9 -1163,18 +1158,22 @@@ static void __hists__insert_output_entr
  	struct rb_node *parent = NULL;
  	struct hist_entry *iter;
  
++<<<<<<< HEAD
 +	if (symbol_conf.use_callchain)
++=======
+ 	if (use_callchain) {
+ 		if (callchain_param.mode == CHAIN_GRAPH_REL) {
+ 			u64 total = he->stat.period;
+ 
+ 			if (symbol_conf.cumulate_callchain)
+ 				total = he->stat_acc->period;
+ 
+ 			min_callchain_hits = total * (callchain_param.min_percent / 100);
+ 		}
++>>>>>>> 744070e0e4ac (perf hists: Fix min callchain hits calculation)
  		callchain_param.sort(&he->sorted_chain, he->callchain,
  				      min_callchain_hits, &callchain_param);
+ 	}
  
  	while (*p != NULL) {
  		parent = *p;
@@@ -1182,8 -1196,15 +1195,8 @@@ void hists__output_resort(struct hists 
  	struct rb_node *next;
  	struct hist_entry *n;
  	u64 min_callchain_hits;
 -	struct perf_evsel *evsel = hists_to_evsel(hists);
 -	bool use_callchain;
 -
 -	if (evsel && symbol_conf.use_callchain && !symbol_conf.show_ref_callgraph)
 -		use_callchain = evsel->attr.sample_type & PERF_SAMPLE_CALLCHAIN;
 -	else
 -		use_callchain = symbol_conf.use_callchain;
  
- 	min_callchain_hits = hists->stats.total_period * (callchain_param.min_percent / 100);
+ 	min_callchain_hits = hists__total_period(hists) * (callchain_param.min_percent / 100);
  
  	if (sort__need_collapse)
  		root = &hists->entries_collapsed;
* Unmerged path tools/perf/util/hist.c
