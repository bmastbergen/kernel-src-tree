block: nvme-scsi: Catch kcalloc failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [block] nvme-scsi: Catch kcalloc failure (David Milburn) [1288601]
Rebuild_FUZZ: 90.14%
commit-author Axel Lin <axel.lin@ingics.com>
commit 51ef72bda70841fddd595142ed0e7e0fc571c500
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/51ef72bd.failed

res variable was initialized to -ENOMEM, but it's override by
nvme_trans_copy_from_user(). So current code returns 0 if kcalloc fails.
Fix it to return proper error code.

	Signed-off-by: Axel Lin <axel.lin@ingics.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 51ef72bda70841fddd595142ed0e7e0fc571c500)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-scsi.c
diff --cc drivers/block/nvme-scsi.c
index daa0d50b3bfd,ab6d1a0e5167..000000000000
--- a/drivers/block/nvme-scsi.c
+++ b/drivers/block/nvme-scsi.c
@@@ -2581,9 -2375,8 +2581,9 @@@ static int nvme_trans_unmap(struct nvme
  	struct scsi_unmap_parm_list *plist;
  	struct nvme_dsm_range *range;
  	struct nvme_command c;
- 	int i, nvme_sc, res = -ENOMEM;
+ 	int i, nvme_sc, res;
  	u16 ndesc, list_len;
 +	dma_addr_t dma_addr;
  
  	list_len = get_unaligned_be16(&cmd[7]);
  	if (!list_len)
@@@ -2603,10 -2396,11 +2603,17 @@@
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	range = dma_alloc_coherent(&dev->pci_dev->dev, ndesc * sizeof(*range),
 +							&dma_addr, GFP_KERNEL);
 +	if (!range)
++=======
+ 	range = kcalloc(ndesc, sizeof(*range), GFP_KERNEL);
+ 	if (!range) {
+ 		res = -ENOMEM;
++>>>>>>> 51ef72bda708 (block: nvme-scsi: Catch kcalloc failure)
  		goto out;
+ 	}
  
  	for (i = 0; i < ndesc; i++) {
  		range[i].nlb = cpu_to_le32(be32_to_cpu(plist->desc[i].nlb));
* Unmerged path drivers/block/nvme-scsi.c
