btrfs: delayed_ref: Add new function to record reserved space into delayed ref

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Qu Wenruo <quwenruo@cn.fujitsu.com>
commit f64d5ca868214f9beb60108c82fcb96940132bfb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f64d5ca8.failed

Add new function btrfs_add_delayed_qgroup_reserve() function to record
how much space is reserved for that extent.

As btrfs only accounts qgroup at run_delayed_refs() time, so newly
allocated extent should keep the reserved space until then.

So add needed function with related members to do it.

	Signed-off-by: Qu Wenruo <quwenruo@cn.fujitsu.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit f64d5ca868214f9beb60108c82fcb96940132bfb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/delayed-ref.c
diff --cc fs/btrfs/delayed-ref.c
index ababe33da508,bd9b63b1ddb2..000000000000
--- a/fs/btrfs/delayed-ref.c
+++ b/fs/btrfs/delayed-ref.c
@@@ -460,6 -475,9 +460,12 @@@ add_delayed_ref_head(struct btrfs_fs_in
  	head_ref->is_data = is_data;
  	INIT_LIST_HEAD(&head_ref->ref_list);
  	head_ref->processing = 0;
++<<<<<<< HEAD
++=======
+ 	head_ref->total_ref_mod = count_mod;
+ 	head_ref->qgroup_reserved = 0;
+ 	head_ref->qgroup_ref_root = 0;
++>>>>>>> f64d5ca86821 (btrfs: delayed_ref: Add new function to record reserved space into delayed ref)
  
  	/* Record qgroup extent info if provided */
  	if (qrecord) {
* Unmerged path fs/btrfs/delayed-ref.c
diff --git a/fs/btrfs/delayed-ref.h b/fs/btrfs/delayed-ref.h
index 07b701cffd0e..60999b97b56d 100644
--- a/fs/btrfs/delayed-ref.h
+++ b/fs/btrfs/delayed-ref.h
@@ -104,6 +104,17 @@ struct btrfs_delayed_ref_head {
 	struct rb_node href_node;
 
 	struct btrfs_delayed_extent_op *extent_op;
+	/*
+	 * For qgroup reserved space freeing.
+	 *
+	 * ref_root and reserved will be recorded after
+	 * BTRFS_ADD_DELAYED_EXTENT is called.
+	 * And will be used to free reserved qgroup space at
+	 * run_delayed_refs() time.
+	 */
+	u64 qgroup_ref_root;
+	u64 qgroup_reserved;
+
 	/*
 	 * when a new extent is allocated, it is just reserved in memory
 	 * The actual extent isn't inserted into the extent allocation tree
@@ -232,6 +243,9 @@ int btrfs_add_delayed_data_ref(struct btrfs_fs_info *fs_info,
 			       u64 owner, u64 offset, int action,
 			       struct btrfs_delayed_extent_op *extent_op,
 			       int no_quota);
+int btrfs_add_delayed_qgroup_reserve(struct btrfs_fs_info *fs_info,
+				     struct btrfs_trans_handle *trans,
+				     u64 ref_root, u64 bytenr, u64 num_bytes);
 int btrfs_add_delayed_extent_op(struct btrfs_fs_info *fs_info,
 				struct btrfs_trans_handle *trans,
 				u64 bytenr, u64 num_bytes,
