drm/i915/vlv: Disable HPD in valleyview_crt_detect_hotplug()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] i915/vlv: Disable HPD in valleyview_crt_detect_hotplug() (Lyude Paul) [1277863]
Rebuild_FUZZ: 96.55%
commit-author Lyude <cpaul@redhat.com>
commit b236d7c8421969ac0693fc571e47ee5c2a62fb90
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b236d7c8.failed

One of the things preventing us from using polling is the fact that
calling valleyview_crt_detect_hotplug() when there's a VGA cable
connected results in sending another hotplug. With polling enabled when
HPD is disabled, this results in a scenario like this:

- We enable power wells and reset the ADPA
- output_poll_exec does force probe on VGA, triggering a hpd
- HPD handler waits for poll to unlock dev->mode_config.mutex
- output_poll_exec shuts off the ADPA, unlocks dev->mode_config.mutex
- HPD handler runs, resets ADPA and brings us back to the start

This results in an endless irq storm getting sent from the ADPA
whenever a VGA connector gets detected in the middle of polling.

Somewhat based off of the "drm/i915: Disable CRT HPD around force
trigger" patch Ville Syrj채l채 sent a while back

	Cc: stable@vger.kernel.org
	Cc: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
	Signed-off-by: Lyude <cpaul@redhat.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit b236d7c8421969ac0693fc571e47ee5c2a62fb90)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/i915_drv.h
#	drivers/gpu/drm/i915/intel_crt.c
#	drivers/gpu/drm/i915/intel_hotplug.c
diff --cc drivers/gpu/drm/i915/i915_drv.h
index f691be6f9546,255293636e19..000000000000
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@@ -2502,12 -2949,38 +2502,18 @@@ extern unsigned long i915_mch_val(struc
  extern unsigned long i915_gfx_val(struct drm_i915_private *dev_priv);
  extern void i915_update_gfx_val(struct drm_i915_private *dev_priv);
  int vlv_force_gfx_clock(struct drm_i915_private *dev_priv, bool on);
 -
 -/* intel_hotplug.c */
 -void intel_hpd_irq_handler(struct drm_i915_private *dev_priv,
 -			   u32 pin_mask, u32 long_mask);
 -void intel_hpd_init(struct drm_i915_private *dev_priv);
 -void intel_hpd_init_work(struct drm_i915_private *dev_priv);
  void intel_hpd_cancel_work(struct drm_i915_private *dev_priv);
++<<<<<<< HEAD
++=======
+ bool intel_hpd_pin_to_port(enum hpd_pin pin, enum port *port);
+ bool intel_hpd_disable(struct drm_i915_private *dev_priv, enum hpd_pin pin);
+ void intel_hpd_enable(struct drm_i915_private *dev_priv, enum hpd_pin pin);
++>>>>>>> b236d7c84219 (drm/i915/vlv: Disable HPD in valleyview_crt_detect_hotplug())
  
  /* i915_irq.c */
 -static inline void i915_queue_hangcheck(struct drm_i915_private *dev_priv)
 -{
 -	unsigned long delay;
 -
 -	if (unlikely(!i915.enable_hangcheck))
 -		return;
 -
 -	/* Don't continually defer the hangcheck so that it is always run at
 -	 * least once after work has been scheduled on any ring. Otherwise,
 -	 * we will ignore a hung ring if a second ring is kept busy.
 -	 */
 -
 -	delay = round_jiffies_up_relative(DRM_I915_HANGCHECK_JIFFIES);
 -	queue_delayed_work(system_long_wq,
 -			   &dev_priv->gpu_error.hangcheck_work, delay);
 -}
 -
 +void i915_queue_hangcheck(struct drm_device *dev);
  __printf(3, 4)
 -void i915_handle_error(struct drm_i915_private *dev_priv,
 -		       u32 engine_mask,
 +void i915_handle_error(struct drm_device *dev, bool wedged,
  		       const char *fmt, ...);
  
  extern void intel_irq_init(struct drm_i915_private *dev_priv);
diff --cc drivers/gpu/drm/i915/intel_crt.c
index 515d7123785d,827b6ef4e9ae..000000000000
--- a/drivers/gpu/drm/i915/intel_crt.c
+++ b/drivers/gpu/drm/i915/intel_crt.c
@@@ -373,7 -328,8 +373,12 @@@ static bool valleyview_crt_detect_hotpl
  {
  	struct drm_device *dev = connector->dev;
  	struct intel_crt *crt = intel_attached_crt(connector);
++<<<<<<< HEAD
 +	struct drm_i915_private *dev_priv = dev->dev_private;
++=======
+ 	struct drm_i915_private *dev_priv = to_i915(dev);
+ 	bool reenable_hpd;
++>>>>>>> b236d7c84219 (drm/i915/vlv: Disable HPD in valleyview_crt_detect_hotplug())
  	u32 adpa;
  	bool ret;
  	u32 save_adpa;
* Unmerged path drivers/gpu/drm/i915/intel_hotplug.c
* Unmerged path drivers/gpu/drm/i915/i915_drv.h
* Unmerged path drivers/gpu/drm/i915/intel_crt.c
* Unmerged path drivers/gpu/drm/i915/intel_hotplug.c
