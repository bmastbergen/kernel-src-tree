nvme: fix max_segments integer truncation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 45686b6198bd824f083ff5293f191d78db9d708a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/45686b61.failed

The block layer uses an unsigned short for max_segments.  The way we
calculate the value for NVMe tends to generate very large 32-bit values,
which after integer truncation may lead to a zero value instead of
the desired outcome.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reported-by: Jeff Lien <Jeff.Lien@hgst.com>
	Tested-by: Jeff Lien <Jeff.Lien@hgst.com>
	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 45686b6198bd824f083ff5293f191d78db9d708a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
* Unmerged path drivers/nvme/host/core.c
* Unmerged path drivers/nvme/host/core.c
