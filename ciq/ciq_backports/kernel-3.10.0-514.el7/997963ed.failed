x86/asm: Clean up frame pointer macros

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] asm: Clean up frame pointer macros (Josh Poimboeuf) [1320250]
Rebuild_FUZZ: 94.44%
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit 997963edd912a6d77d68b2bbc19f40ce8facabd7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/997963ed.failed

The asm macros for setting up and restoring the frame pointer
aren't currently being used.  However, they will be needed soon
to help asm functions to comply with stacktool.

Rename FRAME/ENDFRAME to FRAME_BEGIN/FRAME_END for more
symmetry.  Also make the code more readable and improve the
comments.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
	Cc: Bernd Petrovitsch <bernd@petrovitsch.priv.at>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Chris J Arges <chris.j.arges@canonical.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jiri Slaby <jslaby@suse.cz>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Michal Marek <mmarek@suse.cz>
	Cc: Namhyung Kim <namhyung@gmail.com>
	Cc: Pedro Alves <palves@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/3f488a8e3bfc8ac7d4d3d350953e664e7182b044.1450442274.git.jpoimboe@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 997963edd912a6d77d68b2bbc19f40ce8facabd7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/frame.h
diff --cc arch/x86/include/asm/frame.h
index 3b629f47eb65,cec213bd6eba..000000000000
--- a/arch/x86/include/asm/frame.h
+++ b/arch/x86/include/asm/frame.h
@@@ -1,26 -4,31 +4,50 @@@
  #ifdef __ASSEMBLY__
  
  #include <asm/asm.h>
 +#include <asm/dwarf2.h>
  
- /* The annotation hides the frame from the unwinder and makes it look
-    like a ordinary ebp save/restore. This avoids some special cases for
-    frame pointer later */
+ /*
+  * These are stack frame creation macros.  They should be used by every
+  * callable non-leaf asm function to make kernel stack traces more reliable.
+  */
  #ifdef CONFIG_FRAME_POINTER
++<<<<<<< HEAD
 +	.macro FRAME
 +	__ASM_SIZE(push,_cfi)	%__ASM_REG(bp)
 +	CFI_REL_OFFSET		__ASM_REG(bp), 0
 +	__ASM_SIZE(mov)		%__ASM_REG(sp), %__ASM_REG(bp)
 +	.endm
 +	.macro ENDFRAME
 +	__ASM_SIZE(pop,_cfi)	%__ASM_REG(bp)
 +	CFI_RESTORE		__ASM_REG(bp)
 +	.endm
 +#else
 +	.macro FRAME
 +	.endm
 +	.macro ENDFRAME
 +	.endm
 +#endif
++=======
+ 
+ .macro FRAME_BEGIN
+ 	push %_ASM_BP
+ 	_ASM_MOV %_ASM_SP, %_ASM_BP
+ .endm
+ 
+ .macro FRAME_END
+ 	pop %_ASM_BP
+ .endm
+ 
+ #define FRAME_OFFSET __ASM_SEL(4, 8)
+ 
+ #else /* !CONFIG_FRAME_POINTER */
+ 
+ #define FRAME_BEGIN
+ #define FRAME_END
+ #define FRAME_OFFSET 0
+ 
+ #endif /* CONFIG_FRAME_POINTER */
++>>>>>>> 997963edd912 (x86/asm: Clean up frame pointer macros)
  
  #endif  /*  __ASSEMBLY__  */
+ #endif /* _ASM_X86_FRAME_H */
* Unmerged path arch/x86/include/asm/frame.h
