perf/x86/intel: Add support for PEBSv3 profiling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andi Kleen <ak@linux.intel.com>
commit 2f7ebf2ec2a7b311318aae10b8373b0bd93001a7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2f7ebf2e.failed

PEBSv3 is the same as the existing PEBSv2 used on Haswell,
but it adds a new TSC field. Add support to the generic
PEBS handler to handle the new format, and overwrite
the perf time stamp using the new native_sched_clock_from_tsc().

Right now the time stamp is just slightly more accurate,
as it is nearer the actual event trigger point. With
the PEBS threshold > 1 patchkit it will be much more accurate,
avoid the problems with MMAP mismatches earlier.
The accurate time stamping is only implemented for
the default trace clock for now.

v2: Use _skl prefix. Check for default clock_id.
	Signed-off-by: Andi Kleen <ak@linux.intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: eranian@google.com
Link: http://lkml.kernel.org/r/1431285767-27027-3-git-send-email-andi@firstfloor.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 2f7ebf2ec2a7b311318aae10b8373b0bd93001a7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_ds.c
diff --cc arch/x86/kernel/cpu/perf_event_intel_ds.c
index 923d9fc3cc3a,410270a9078f..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_ds.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_ds.c
@@@ -905,8 -930,8 +918,13 @@@ static void setup_pebs_sample_data(stru
  	 * We cast to the biggest pebs_record but are careful not to
  	 * unconditionally access the 'extra' entries.
  	 */
++<<<<<<< HEAD
 +	struct cpu_hw_events *cpuc = &__get_cpu_var(cpu_hw_events);
 +	struct pebs_record_hsw *pebs = __pebs;
++=======
+ 	struct cpu_hw_events *cpuc = this_cpu_ptr(&cpu_hw_events);
+ 	struct pebs_record_skl *pebs = __pebs;
++>>>>>>> 2f7ebf2ec2a7 (perf/x86/intel: Add support for PEBSv3 profiling)
  	u64 sample_type;
  	int fll, fst, dsrc;
  	int fl = event->hw.flags;
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_ds.c
