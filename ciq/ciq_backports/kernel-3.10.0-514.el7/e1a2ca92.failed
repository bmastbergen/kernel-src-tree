r8152: adjust rx_bottom

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author hayeswang <hayeswang@realtek.com>
commit e1a2ca92727500ea8d25326216d700bed6176117
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e1a2ca92.failed

If a error occurs when submitting rx, skip the remaining submissions
and try to submit them again next time.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e1a2ca92727500ea8d25326216d700bed6176117)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index 39cab4df57f7,41a1cbc6cc7f..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -1605,9 -1643,28 +1605,31 @@@ static void rx_bottom(struct r8152 *tp
  {
  	unsigned long flags;
  	struct list_head *cursor, *next, rx_queue;
++<<<<<<< HEAD
++=======
+ 	int ret = 0, work_done = 0;
+ 
+ 	if (!skb_queue_empty(&tp->rx_queue)) {
+ 		while (work_done < budget) {
+ 			struct sk_buff *skb = __skb_dequeue(&tp->rx_queue);
+ 			struct net_device *netdev = tp->netdev;
+ 			struct net_device_stats *stats = &netdev->stats;
+ 			unsigned int pkt_len;
+ 
+ 			if (!skb)
+ 				break;
+ 
+ 			pkt_len = skb->len;
+ 			napi_gro_receive(&tp->napi, skb);
+ 			work_done++;
+ 			stats->rx_packets++;
+ 			stats->rx_bytes += pkt_len;
+ 		}
+ 	}
++>>>>>>> e1a2ca927275 (r8152: adjust rx_bottom)
  
  	if (list_empty(&tp->rx_done))
 -		goto out1;
 +		return;
  
  	INIT_LIST_HEAD(&rx_queue);
  	spin_lock_irqsave(&tp->rx_lock, flags);
@@@ -1672,8 -1734,22 +1694,19 @@@ find_next_rx
  		}
  
  submit:
- 		r8152_submit_rx(tp, agg, GFP_ATOMIC);
+ 		if (!ret) {
+ 			ret = r8152_submit_rx(tp, agg, GFP_ATOMIC);
+ 		} else {
+ 			urb->actual_length = 0;
+ 			list_add_tail(&agg->list, next);
+ 		}
+ 	}
+ 
+ 	if (!list_empty(&rx_queue)) {
+ 		spin_lock_irqsave(&tp->rx_lock, flags);
+ 		list_splice_tail(&rx_queue, &tp->rx_done);
+ 		spin_unlock_irqrestore(&tp->rx_lock, flags);
  	}
 -
 -out1:
 -	return work_done;
  }
  
  static void tx_bottom(struct r8152 *tp)
* Unmerged path drivers/net/usb/r8152.c
