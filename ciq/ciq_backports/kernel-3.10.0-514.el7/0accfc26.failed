arp: Inherit metadata dst when creating ARP requests

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Thomas Graf <tgraf@suug.ch>
commit 0accfc268f4d3345693d3af3d5780aae3ad93d8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0accfc26.failed

If output device wants to see the dst, inherit the dst of the
original skb and pass it on to generate the ARP request.

	Signed-off-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0accfc268f4d3345693d3af3d5780aae3ad93d8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/arp.c
diff --cc net/ipv4/arp.c
index eb2b67ce4b84,1d59e50ce8b7..000000000000
--- a/net/ipv4/arp.c
+++ b/net/ipv4/arp.c
@@@ -689,32 -632,6 +724,35 @@@ void arp_xmit(struct sk_buff *skb
  EXPORT_SYMBOL(arp_xmit);
  
  /*
++<<<<<<< HEAD
 + *	Create and send an arp packet.
 + */
 +void arp_send(int type, int ptype, __be32 dest_ip,
 +	      struct net_device *dev, __be32 src_ip,
 +	      const unsigned char *dest_hw, const unsigned char *src_hw,
 +	      const unsigned char *target_hw)
 +{
 +	struct sk_buff *skb;
 +
 +	/*
 +	 *	No arp on this interface.
 +	 */
 +
 +	if (dev->flags&IFF_NOARP)
 +		return;
 +
 +	skb = arp_create(type, ptype, dest_ip, dev, src_ip,
 +			 dest_hw, src_hw, target_hw);
 +	if (skb == NULL)
 +		return;
 +
 +	arp_xmit(skb);
 +}
 +EXPORT_SYMBOL(arp_send);
 +
 +/*
++=======
++>>>>>>> 0accfc268f4d (arp: Inherit metadata dst when creating ARP requests)
   *	Process an arp request.
   */
  
* Unmerged path net/ipv4/arp.c
