dm raid: the sync_page_io() metadata_op argument is bool

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Heinz Mauelshagen <heinzm@redhat.com>
commit 0a7b818892e27f6a6ac728a525bd0d8a307fe2bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0a7b8188.failed

	Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 0a7b818892e27f6a6ac728a525bd0d8a307fe2bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-raid.c
diff --cc drivers/md/dm-raid.c
index da70fc941cd8,0eceee802571..000000000000
--- a/drivers/md/dm-raid.c
+++ b/drivers/md/dm-raid.c
@@@ -1784,7 -1784,7 +1784,11 @@@ static int read_disk_sb(struct md_rdev 
  	if (rdev->sb_loaded)
  		return 0;
  
++<<<<<<< HEAD
 +	if (!sync_page_io(rdev, 0, size, rdev->sb_page, READ, 1)) {
++=======
+ 	if (!sync_page_io(rdev, 0, size, rdev->sb_page, REQ_OP_READ, 0, true)) {
++>>>>>>> 0a7b818892e2 (dm raid: the sync_page_io() metadata_op argument is bool)
  		DMERR("Failed to read superblock of device at position %d",
  		      rdev->raid_disk);
  		md_error(rdev->mddev, rdev);
@@@ -3258,7 -3258,8 +3262,12 @@@ static void attempt_restore_of_faulty_d
  	for (i = 0; i < rs->md.raid_disks; i++) {
  		r = &rs->dev[i].rdev;
  		if (test_bit(Faulty, &r->flags) && r->sb_page &&
++<<<<<<< HEAD
 +		    sync_page_io(r, 0, r->sb_size, r->sb_page, READ, 1)) {
++=======
+ 		    sync_page_io(r, 0, r->sb_size, r->sb_page,
+ 				 REQ_OP_READ, 0, true)) {
++>>>>>>> 0a7b818892e2 (dm raid: the sync_page_io() metadata_op argument is bool)
  			DMINFO("Faulty %s device #%d has readable super block."
  			       "  Attempting to revive it.",
  			       rs->raid_type->name, i);
* Unmerged path drivers/md/dm-raid.c
