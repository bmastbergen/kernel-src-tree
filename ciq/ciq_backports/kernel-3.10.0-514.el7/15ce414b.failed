fixup: audit: implement audit by executable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Richard Guy Briggs <rgb@redhat.com>
commit 15ce414b82b07acb99afda6e4d9bd14f317b6011
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/15ce414b.failed

The Intel build-bot detected a sparse warning with with a patch I posted a
couple of days ago that was accepted in the audit/next tree:

Subject: [linux-next:master 6689/6751] kernel/audit_watch.c:543:36: sparse: dereference of noderef expression
Date: Friday, August 07, 2015, 06:57:55 PM
From: kbuild test robot <fengguang.wu@intel.com>
tree:   git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git master
head:   e6455bc5b91f41f842f30465c9193320f0568707
commit: 2e3a8aeb63e5335d4f837d453787c71bcb479796 [6689/6751] Merge remote- tracking branch 'audit/next'
sparse warnings: (new ones prefixed by >>)
>> kernel/audit_watch.c:543:36: sparse: dereference of noderef expression
   kernel/audit_watch.c:544:28: sparse: dereference of noderef expression

34d99af5 Richard Guy Briggs 2015-08-05  541  int audit_exe_compare(struct task_struct *tsk, struct audit_fsnotify_mark *mark)
34d99af5 Richard Guy Briggs 2015-08-05  542  {
34d99af5 Richard Guy Briggs 2015-08-05 @543     unsigned long ino = tsk->mm- >exe_file->f_inode->i_ino;
34d99af5 Richard Guy Briggs 2015-08-05  544     dev_t dev = tsk->mm->exe_file- >f_inode->i_sb->s_dev;

:::::: The code at line 543 was first introduced by commit
:::::: 34d99af52ad40bd498ba66970579a5bc1fb1a3bc audit: implement audit by executable

tsk->mm->exe_file requires RCU access.  The warning was reproduceable by adding
"C=1 CF=-D__CHECK_ENDIAN__" to the build command, and verified eliminated with
this patch.

	Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
	Signed-off-by: Paul Moore <pmoore@redhat.com>
(cherry picked from commit 15ce414b82b07acb99afda6e4d9bd14f317b6011)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/audit_watch.c
diff --cc kernel/audit_watch.c
index ad2f90d15b85,359035caac88..000000000000
--- a/kernel/audit_watch.c
+++ b/kernel/audit_watch.c
@@@ -526,3 -518,36 +526,39 @@@ static int __init audit_watch_init(void
  	return 0;
  }
  device_initcall(audit_watch_init);
++<<<<<<< HEAD
++=======
+ 
+ int audit_dupe_exe(struct audit_krule *new, struct audit_krule *old)
+ {
+ 	struct audit_fsnotify_mark *audit_mark;
+ 	char *pathname;
+ 
+ 	pathname = kstrdup(audit_mark_path(old->exe), GFP_KERNEL);
+ 	if (!pathname)
+ 		return -ENOMEM;
+ 
+ 	audit_mark = audit_alloc_mark(new, pathname, strlen(pathname));
+ 	if (IS_ERR(audit_mark)) {
+ 		kfree(pathname);
+ 		return PTR_ERR(audit_mark);
+ 	}
+ 	new->exe = audit_mark;
+ 
+ 	return 0;
+ }
+ 
+ int audit_exe_compare(struct task_struct *tsk, struct audit_fsnotify_mark *mark)
+ {
+ 	struct file *exe_file;
+ 	unsigned long ino;
+ 	dev_t dev;
+ 
+ 	rcu_read_lock();
+ 	exe_file = rcu_dereference(tsk->mm->exe_file);
+ 	ino = exe_file->f_inode->i_ino;
+ 	dev = exe_file->f_inode->i_sb->s_dev;
+ 	rcu_read_unlock();
+ 	return audit_mark_compare(mark, ino, dev);
+ }
++>>>>>>> 15ce414b82b0 (fixup: audit: implement audit by executable)
* Unmerged path kernel/audit_watch.c
