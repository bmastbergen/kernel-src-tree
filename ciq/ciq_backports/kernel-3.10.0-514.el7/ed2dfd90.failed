tcp/dccp: warn user for preferred ip_local_port_range

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] tcp, dccp: warn user for preferred ip_local_port_range (Florian Westphal) [1305525]
Rebuild_FUZZ: 97.20%
commit-author Eric Dumazet <edumazet@google.com>
commit ed2dfd900992aa7b6b3d0abd8ec9a7e9d2c7f827
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ed2dfd90.failed

After commit 07f4c90062f8f ("tcp/dccp: try to not exhaust
ip_local_port_range in connect()") it is advised to have an even number
of ports described in /proc/sys/net/ipv4/ip_local_port_range

This means start/end values should have a different parity.

Let's warn sysadmins of this, so that they can update their settings
if they want to.

	Suggested-by: David S. Miller <davem@davemloft.net>
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ed2dfd900992aa7b6b3d0abd8ec9a7e9d2c7f827)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/sysctl_net_ipv4.c
diff --cc net/ipv4/sysctl_net_ipv4.c
index eeb17b3922e6,0330ab2e2b63..000000000000
--- a/net/ipv4/sysctl_net_ipv4.c
+++ b/net/ipv4/sysctl_net_ipv4.c
@@@ -47,10 -45,16 +47,23 @@@ static int rhel_unused_sysctl __read_mo
  /* Update system visible IP port range */
  static void set_local_port_range(struct net *net, int range[2])
  {
++<<<<<<< HEAD
 +	write_seqlock(&net->ipv4_sysctl_local_ports.lock);
 +	net->ipv4_sysctl_local_ports.range[0] = range[0];
 +	net->ipv4_sysctl_local_ports.range[1] = range[1];
 +	write_sequnlock(&net->ipv4_sysctl_local_ports.lock);
++=======
+ 	bool same_parity = !((range[0] ^ range[1]) & 1);
+ 
+ 	write_seqlock(&net->ipv4.ip_local_ports.lock);
+ 	if (same_parity && !net->ipv4.ip_local_ports.warned) {
+ 		net->ipv4.ip_local_ports.warned = true;
+ 		pr_err_ratelimited("ip_local_port_range: prefer different parity for start/end values.\n");
+ 	}
+ 	net->ipv4.ip_local_ports.range[0] = range[0];
+ 	net->ipv4.ip_local_ports.range[1] = range[1];
+ 	write_sequnlock(&net->ipv4.ip_local_ports.lock);
++>>>>>>> ed2dfd900992 (tcp/dccp: warn user for preferred ip_local_port_range)
  }
  
  /* Validate changes from /proc interface. */
diff --git a/include/net/netns/ipv4.h b/include/net/netns/ipv4.h
index c79aa00fb6ec..687e578996b8 100644
--- a/include/net/netns/ipv4.h
+++ b/include/net/netns/ipv4.h
@@ -20,6 +20,7 @@ struct sock;
 struct local_ports {
 	seqlock_t	lock;
 	int		range[2];
+	bool		warned;
 };
 
 struct netns_ipv4 {
* Unmerged path net/ipv4/sysctl_net_ipv4.c
