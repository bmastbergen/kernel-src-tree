md: skip resync for raid array with journal

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [md] skip resync for raid array with journal (Jes Sorensen) [1250578 1265947 1273343 1299140 1307091 1312828 1320563 1340839]
Rebuild_FUZZ: 95.12%
commit-author Shaohua Li <shli@fb.com>
commit bd18f6462f3d167a9b3ec27851c98f82694b2adf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bd18f646.failed

If a raid array has journal, the journal can guarantee the consistency,
we can skip resync after a unclean shutdown. The exception is raid
creation or user initiated resync, which we still do a raid resync.

	Signed-off-by: Shaohua Li <shli@fb.com>
	Signed-off-by: NeilBrown <neilb@suse.com>
(cherry picked from commit bd18f6462f3d167a9b3ec27851c98f82694b2adf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 21cf65561dc0,89149acd8a5e..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -1656,6 -1638,18 +1656,21 @@@ static int super_1_validate(struct mdde
  		case MD_DISK_ROLE_FAULTY: /* faulty */
  			set_bit(Faulty, &rdev->flags);
  			break;
++<<<<<<< HEAD
++=======
+ 		case MD_DISK_ROLE_JOURNAL: /* journal device */
+ 			if (!(le32_to_cpu(sb->feature_map) & MD_FEATURE_JOURNAL)) {
+ 				/* journal device without journal feature */
+ 				printk(KERN_WARNING
+ 				  "md: journal device provided without journal feature, ignoring the device\n");
+ 				return -EINVAL;
+ 			}
+ 			set_bit(Journal, &rdev->flags);
+ 			rdev->journal_tail = le64_to_cpu(sb->journal_tail);
+ 			if (mddev->recovery_cp == MaxSector)
+ 				set_bit(MD_JOURNAL_CLEAN, &mddev->flags);
+ 			break;
++>>>>>>> bd18f6462f3d (md: skip resync for raid array with journal)
  		default:
  			rdev->saved_raid_disk = role;
  			if ((le32_to_cpu(sb->feature_map) &
* Unmerged path drivers/md/md.c
diff --git a/drivers/md/md.h b/drivers/md/md.h
index f8d82442ce8b..d72d30a1c246 100644
--- a/drivers/md/md.h
+++ b/drivers/md/md.h
@@ -217,6 +217,7 @@ struct mddev {
 #define MD_STILL_CLOSED	4	/* If set, then array has not been opened since
 				 * md_ioctl checked on it.
 				 */
+#define MD_JOURNAL_CLEAN 5	/* A raid with journal is already clean */
 
 	int				suspended;
 	atomic_t			active_io;
