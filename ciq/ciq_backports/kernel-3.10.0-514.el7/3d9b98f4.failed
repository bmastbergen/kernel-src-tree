iommu, x86: Setup Posted-Interrupts capability for Intel iommu

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] x86: Setup Posted-Interrupts capability for Intel iommu (Paolo Bonzini) [1301888]
Rebuild_FUZZ: 94.02%
commit-author Feng Wu <feng.wu@intel.com>
commit 3d9b98f4ec17ba8d555f1972a3870035a87574a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3d9b98f4.failed

Set Posted-Interrupts capability for Intel iommu when Interrupt
Remapping is enabled, clear it when disabled.

	Signed-off-by: Feng Wu <feng.wu@intel.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Joerg Roedel <joro@8bytes.org>
	Cc: jiang.liu@linux.intel.com
	Cc: iommu@lists.linux-foundation.org
	Cc: dwmw2@infradead.org
Link: http://lkml.kernel.org/r/1433827237-3382-9-git-send-email-feng.wu@intel.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit 3d9b98f4ec17ba8d555f1972a3870035a87574a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel_irq_remapping.c
diff --cc drivers/iommu/intel_irq_remapping.c
index 085a116a8b0a,0f57af72d8f8..000000000000
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@@ -702,12 -676,7 +722,16 @@@ static int __init intel_enable_irq_rema
  
  	irq_remapping_enabled = 1;
  
++<<<<<<< HEAD
 +	/*
 +	 * VT-d has a different layout for IO-APIC entries when
 +	 * interrupt remapping is enabled. So it needs a special routine
 +	 * to print IO-APIC entries for debugging purposes too.
 +	 */
 +	x86_io_apic_ops.print_entries = intel_ir_io_apic_print_entries;
++=======
+ 	set_irq_posting_cap();
++>>>>>>> 3d9b98f4ec17 (iommu, x86: Setup Posted-Interrupts capability for Intel iommu)
  
  	pr_info("Enabled IRQ remapping in %s mode\n", eim ? "x2apic" : "xapic");
  
* Unmerged path drivers/iommu/intel_irq_remapping.c
diff --git a/drivers/iommu/irq_remapping.c b/drivers/iommu/irq_remapping.c
index 3f7e28dd7a64..b6bad642b2e8 100644
--- a/drivers/iommu/irq_remapping.c
+++ b/drivers/iommu/irq_remapping.c
@@ -21,6 +21,8 @@ int irq_remap_broken;
 int disable_sourceid_checking;
 int no_x2apic_optout;
 
+int disable_irq_post = 1;
+
 static int disable_irq_remap;
 static struct irq_remap_ops *remap_ops;
 
diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index c448eb48340a..0da45a9ba297 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -36,6 +36,8 @@ extern int disable_sourceid_checking;
 extern int no_x2apic_optout;
 extern int irq_remapping_enabled;
 
+extern int disable_irq_post;
+
 struct irq_remap_ops {
 	/* Initializes hardware and makes it ready for remapping interrupts */
 	int  (*prepare)(void);
@@ -86,6 +88,7 @@ extern struct irq_remap_ops amd_iommu_irq_ops;
 
 #define irq_remapping_enabled 0
 #define irq_remap_broken      0
+#define disable_irq_post      1
 
 #endif /* CONFIG_IRQ_REMAP */
 
