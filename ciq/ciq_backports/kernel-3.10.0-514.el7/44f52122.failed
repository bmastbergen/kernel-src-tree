GFS2: Check rs_free with rd_rsspin protection

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit 44f52122a22004de9c3bae288bbc6dff3624fe9c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/44f52122.failed

For the last process to close a file opened for write, function
gfs2_rsqa_delete was deleting the file's inode's block reservation
out of the rgrp reservations tree. Then it was checking to make sure
rs_free was 0, but it was performing the check outside the protection
of rd_rsspin spin_lock. The rd_rsspin spin_lock protection is needed
to prevent a race between the process freeing the reservation and
another who is allocating a new set of blocks inside the same rgrp
for the same inode, thus changing its value.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
(cherry picked from commit 44f52122a22004de9c3bae288bbc6dff3624fe9c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/rgrp.c
diff --cc fs/gfs2/rgrp.c
index 28da34fba03d,86ccc0159393..000000000000
--- a/fs/gfs2/rgrp.c
+++ b/fs/gfs2/rgrp.c
@@@ -650,22 -664,18 +651,27 @@@ void gfs2_rs_deltree(struct gfs2_blkres
  }
  
  /**
 - * gfs2_rsqa_delete - delete a multi-block reservation and quota allocation
 + * gfs2_rs_delete - delete a multi-block reservation
   * @ip: The inode for this reservation
 - * @wcount: The inode's write count, or NULL
   *
   */
 -void gfs2_rsqa_delete(struct gfs2_inode *ip, atomic_t *wcount)
 +void gfs2_rs_delete(struct gfs2_inode *ip)
  {
 +	struct inode *inode = &ip->i_inode;
 +
  	down_write(&ip->i_rw_mutex);
++<<<<<<< HEAD
 +	if (ip->i_res && atomic_read(&inode->i_writecount) <= 1) {
 +		gfs2_rs_deltree(ip->i_res);
 +		BUG_ON(ip->i_res->rs_free);
 +		kmem_cache_free(gfs2_rsrv_cachep, ip->i_res);
 +		ip->i_res = NULL;
 +	}
++=======
+ 	if ((wcount == NULL) || (atomic_read(wcount) <= 1))
+ 		gfs2_rs_deltree(&ip->i_res);
++>>>>>>> 44f52122a220 (GFS2: Check rs_free with rd_rsspin protection)
  	up_write(&ip->i_rw_mutex);
 -	gfs2_qa_delete(ip, wcount);
  }
  
  /**
* Unmerged path fs/gfs2/rgrp.c
