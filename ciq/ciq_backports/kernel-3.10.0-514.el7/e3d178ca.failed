megaraid_sas: Introduce module parameter for SCSI command timeout

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sumit Saxena <sumit.saxena@avagotech.com>
commit e3d178ca773ff997c6c94989d0b14a2c0eae761c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e3d178ca.failed

This patch will introduce module-parameter for SCSI command timeout
value and fix setting of resetwaittime beyond a value.

	Signed-off-by: Kashyap Desai <kashyap.desai@avagotech.com>
	Signed-off-by: Sumit Saxena <sumit.saxena@avagotech.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit e3d178ca773ff997c6c94989d0b14a2c0eae761c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_base.c
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
diff --cc drivers/scsi/megaraid/megaraid_sas_base.c
index b60f8ef53c66,54922e5f4faa..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@@ -92,6 -92,18 +92,21 @@@ int smp_affinity_enable = 1
  module_param(smp_affinity_enable, int, S_IRUGO);
  MODULE_PARM_DESC(smp_affinity_enable, "SMP affinity feature enable/disbale Default: enable(1)");
  
++<<<<<<< HEAD
++=======
+ int rdpq_enable = 1;
+ module_param(rdpq_enable, int, S_IRUGO);
+ MODULE_PARM_DESC(rdpq_enable, " Allocate reply queue in chunks for large queue depth enable/disable Default: disable(0)");
+ 
+ unsigned int dual_qdepth_disable;
+ module_param(dual_qdepth_disable, int, S_IRUGO);
+ MODULE_PARM_DESC(dual_qdepth_disable, "Disable dual queue depth feature. Default: 0");
+ 
+ unsigned int scmd_timeout = MEGASAS_DEFAULT_CMD_TIMEOUT;
+ module_param(scmd_timeout, int, S_IRUGO);
+ MODULE_PARM_DESC(scmd_timeout, "scsi command timeout (10-90s), default 90s. See megasas_reset_timer.");
+ 
++>>>>>>> e3d178ca773f (megaraid_sas: Introduce module parameter for SCSI command timeout)
  MODULE_LICENSE("GPL");
  MODULE_VERSION(MEGASAS_VERSION);
  MODULE_AUTHOR("megaraidlinux.pdl@avagotech.com");
@@@ -1747,14 -1830,31 +1762,14 @@@ static void megasas_set_dma_alignment(s
  	}
  }
  
 -
  static int megasas_slave_configure(struct scsi_device *sdev)
  {
 -	u16 pd_index = 0;
 -	struct megasas_instance *instance;
 -
 -	instance = megasas_lookup_instance(sdev->host->host_no);
 -	if (instance->allow_fw_scan) {
 -		if (sdev->channel < MEGASAS_MAX_PD_CHANNELS &&
 -			sdev->type == TYPE_DISK) {
 -			pd_index = (sdev->channel * MEGASAS_MAX_DEV_PER_CHANNEL) +
 -				sdev->id;
 -			if (instance->pd_list[pd_index].driveState !=
 -				MR_PD_STATE_SYSTEM)
 -				return -ENXIO;
 -		}
 -	}
 -	megasas_set_device_queue_depth(sdev);
 -	megasas_update_sdev_properties(sdev);
 -
 +	megasas_set_dma_alignment(sdev);
  	/*
 -	 * The RAID firmware may require extended timeouts.
 -	 */
 +	* The RAID firmware may require extended timeouts.
 +	*/
  	blk_queue_rq_timeout(sdev->request_queue,
- 		MEGASAS_DEFAULT_CMD_TIMEOUT * HZ);
+ 		scmd_timeout * HZ);
  
  	return 0;
  }
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index a09ae37a613c,e740e2608a37..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -91,7 -91,10 +91,14 @@@ void megasas_start_timer(struct megasas
  			struct timer_list *timer,
  			 void *fn, unsigned long interval);
  extern struct megasas_mgmt_info megasas_mgmt_info;
++<<<<<<< HEAD
 +extern int resetwaittime;
++=======
+ extern unsigned int resetwaittime;
+ extern unsigned int dual_qdepth_disable;
+ static void megasas_free_rdpq_fusion(struct megasas_instance *instance);
+ static void megasas_free_reply_fusion(struct megasas_instance *instance);
++>>>>>>> e3d178ca773f (megaraid_sas: Introduce module parameter for SCSI command timeout)
  
  
  
* Unmerged path drivers/scsi/megaraid/megaraid_sas_base.c
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
