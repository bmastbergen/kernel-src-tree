mmc: sdhci-pci: Change AMD SDHCI quirk application scope

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] sdhci-pci: Change AMD SDHCI quirk application scope (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 95.33%
commit-author Vincent Wan <vincent.wan@amd.com>
commit b5e97d6e58617b9d6a3838ede6ccd3883035dbf3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b5e97d6e.failed

Change this quirk to apply to AMD Carrizo platform.

	Signed-off-by: Wan ZongShun <Vincent.Wan@amd.com>
	Tested-by: Nath, Arindam <Arindam.Nath@amd.com>
	Tested-by: Ramesh, Ramya <Ramya.Ramesh@amd.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit b5e97d6e58617b9d6a3838ede6ccd3883035dbf3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci-pci.c
diff --cc drivers/mmc/host/sdhci-pci.c
index a627aad5414a,94f54d2772e8..000000000000
--- a/drivers/mmc/host/sdhci-pci.c
+++ b/drivers/mmc/host/sdhci-pci.c
@@@ -581,6 -711,61 +581,64 @@@ static const struct sdhci_pci_fixes sdh
  	.probe		= via_probe,
  };
  
++<<<<<<< HEAD
++=======
+ static int rtsx_probe_slot(struct sdhci_pci_slot *slot)
+ {
+ 	slot->host->mmc->caps2 |= MMC_CAP2_HS200;
+ 	return 0;
+ }
+ 
+ static const struct sdhci_pci_fixes sdhci_rtsx = {
+ 	.quirks2	= SDHCI_QUIRK2_PRESET_VALUE_BROKEN |
+ 			SDHCI_QUIRK2_BROKEN_64_BIT_DMA |
+ 			SDHCI_QUIRK2_BROKEN_DDR50,
+ 	.probe_slot	= rtsx_probe_slot,
+ };
+ 
+ /*AMD chipset generation*/
+ enum amd_chipset_gen {
+ 	AMD_CHIPSET_BEFORE_ML,
+ 	AMD_CHIPSET_CZ,
+ 	AMD_CHIPSET_NL,
+ 	AMD_CHIPSET_UNKNOWN,
+ };
+ 
+ static int amd_probe(struct sdhci_pci_chip *chip)
+ {
+ 	struct pci_dev	*smbus_dev;
+ 	enum amd_chipset_gen gen;
+ 
+ 	smbus_dev = pci_get_device(PCI_VENDOR_ID_AMD,
+ 			PCI_DEVICE_ID_AMD_HUDSON2_SMBUS, NULL);
+ 	if (smbus_dev) {
+ 		gen = AMD_CHIPSET_BEFORE_ML;
+ 	} else {
+ 		smbus_dev = pci_get_device(PCI_VENDOR_ID_AMD,
+ 				PCI_DEVICE_ID_AMD_KERNCZ_SMBUS, NULL);
+ 		if (smbus_dev) {
+ 			if (smbus_dev->revision < 0x51)
+ 				gen = AMD_CHIPSET_CZ;
+ 			else
+ 				gen = AMD_CHIPSET_NL;
+ 		} else {
+ 			gen = AMD_CHIPSET_UNKNOWN;
+ 		}
+ 	}
+ 
+ 	if ((gen == AMD_CHIPSET_BEFORE_ML) || (gen == AMD_CHIPSET_CZ)) {
+ 		chip->quirks2 |= SDHCI_QUIRK2_CLEAR_TRANSFERMODE_REG_BEFORE_CMD;
+ 		chip->quirks2 |= SDHCI_QUIRK2_BROKEN_HS200;
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ static const struct sdhci_pci_fixes sdhci_amd = {
+ 	.probe		= amd_probe,
+ };
+ 
++>>>>>>> b5e97d6e5861 (mmc: sdhci-pci: Change AMD SDHCI quirk application scope)
  static const struct pci_device_id pci_ids[] = {
  	{
  		.vendor		= PCI_VENDOR_ID_RICOH,
* Unmerged path drivers/mmc/host/sdhci-pci.c
