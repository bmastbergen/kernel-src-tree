mmc: sdhci: add a quirk for tuning work around

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Vincent Yang <vincent.yang.fujitsu@gmail.com>
commit 67d0d04a762db4bd610fd628ad683b5d7dc905e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/67d0d04a.failed

This patch defines a quirk for tuning work
around for some sdhci host controller. It sets
both SDHCI_CTRL_EXEC_TUNING and SDHCI_CTRL_TUNED_CLK
for tuning.
It is a preparation and will be used by Fujitsu
SDHCI controller f_sdh30 driver.

	Signed-off-by: Vincent Yang <Vincent.Yang@tw.fujitsu.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 67d0d04a762db4bd610fd628ad683b5d7dc905e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci.c
#	include/linux/mmc/sdhci.h
diff --cc drivers/mmc/host/sdhci.c
index b714bf3bdaa4,a3ecd20e5510..000000000000
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@@ -1914,6 -1959,10 +1914,13 @@@ static int sdhci_execute_tuning(struct 
  		return err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	ctrl = sdhci_readw(host, SDHCI_HOST_CONTROL2);
+ 	ctrl |= SDHCI_CTRL_EXEC_TUNING;
+ 	if (host->quirks2 & SDHCI_QUIRK2_TUNING_WORK_AROUND)
+ 		ctrl |= SDHCI_CTRL_TUNED_CLK;
++>>>>>>> 67d0d04a762d (mmc: sdhci: add a quirk for tuning work around)
  	sdhci_writew(host, ctrl, SDHCI_HOST_CONTROL2);
  
  	/*
diff --cc include/linux/mmc/sdhci.h
index 0c0735630f68,933b897ca095..000000000000
--- a/include/linux/mmc/sdhci.h
+++ b/include/linux/mmc/sdhci.h
@@@ -101,6 -97,22 +101,25 @@@ struct sdhci_host 
  #define SDHCI_QUIRK2_NO_1_8_V				(1<<2)
  #define SDHCI_QUIRK2_PRESET_VALUE_BROKEN		(1<<3)
  #define SDHCI_QUIRK2_CARD_ON_NEEDS_BUS_ON		(1<<4)
++<<<<<<< HEAD
++=======
+ /* Controller has a non-standard host control register */
+ #define SDHCI_QUIRK2_BROKEN_HOST_CONTROL		(1<<5)
+ /* Controller does not support HS200 */
+ #define SDHCI_QUIRK2_BROKEN_HS200			(1<<6)
+ /* Controller does not support DDR50 */
+ #define SDHCI_QUIRK2_BROKEN_DDR50			(1<<7)
+ /* Stop command (CMD12) can set Transfer Complete when not using MMC_RSP_BUSY */
+ #define SDHCI_QUIRK2_STOP_WITH_TC			(1<<8)
+ /* Controller does not support 64-bit DMA */
+ #define SDHCI_QUIRK2_BROKEN_64_BIT_DMA			(1<<9)
+ /* need clear transfer mode register before send cmd */
+ #define SDHCI_QUIRK2_CLEAR_TRANSFERMODE_REG_BEFORE_CMD	(1<<10)
+ /* Capability register bit-63 indicates HS400 support */
+ #define SDHCI_QUIRK2_CAPS_BIT63_FOR_HS400		(1<<11)
+ /* forced tuned clock */
+ #define SDHCI_QUIRK2_TUNING_WORK_AROUND			(1<<12)
++>>>>>>> 67d0d04a762d (mmc: sdhci: add a quirk for tuning work around)
  
  	int irq;		/* Device IRQ */
  	void __iomem *ioaddr;	/* Mapped address */
* Unmerged path drivers/mmc/host/sdhci.c
* Unmerged path include/linux/mmc/sdhci.h
