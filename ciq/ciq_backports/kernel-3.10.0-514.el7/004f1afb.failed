libnvdimm, pmem: direct map legacy pmem by default

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 004f1afbe199e6ab20805b95aefd83ccd24bc5c7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/004f1afb.failed

The expectation is that the legacy / non-standard pmem discovery method
(e820 type-12) will only ever be used to describe small quantities of
persistent memory.  Larger capacities will be described via the ACPI
NFIT.  When "allocate struct page from pmem" support is added this default
policy can be overridden by assigning a legacy pmem namespace to a pfn
device, however this would be only be necessary if a platform used the
legacy mechanism to define a very large range.

	Cc: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 004f1afbe199e6ab20805b95aefd83ccd24bc5c7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/e820.c
#	drivers/nvdimm/namespace_devs.c
#	drivers/nvdimm/nd.h
#	drivers/nvdimm/pmem.c
#	drivers/nvdimm/region_devs.c
#	include/linux/libnvdimm.h
* Unmerged path drivers/nvdimm/e820.c
* Unmerged path drivers/nvdimm/namespace_devs.c
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/pmem.c
* Unmerged path drivers/nvdimm/region_devs.c
* Unmerged path include/linux/libnvdimm.h
* Unmerged path drivers/nvdimm/e820.c
* Unmerged path drivers/nvdimm/namespace_devs.c
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/pmem.c
* Unmerged path drivers/nvdimm/region_devs.c
* Unmerged path include/linux/libnvdimm.h
