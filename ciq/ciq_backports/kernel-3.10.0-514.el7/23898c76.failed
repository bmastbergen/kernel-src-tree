net/mlx5: E-Switch, Modify node guid on vf set MAC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [netdrv] mlx5: E-Switch, Modify node guid on vf set MAC (kamal heib) [1350475]
Rebuild_FUZZ: 95.83%
commit-author Noa Osherovich <noaos@mellanox.com>
commit 23898c763f4af6f5c80b0230b1ea788a0ce3cf73
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/23898c76.failed

In RoCE, the RDMA-CM needs the node guid to establish connection
between nodes.
Today, the node guid exposed to mlx5 Ethernet VFs is zero, therefore
RDMA-CM on the VF is broken.

Whenever the administrator sets a MAC for a VF, derive the node guid
from it and set it as well in the following way:
MAC: e4:1d:2d:b3:f4:01 -> node_guid: e4:1d:2d:ff:fe:b3:f4:01

Fixes: 77256579c6b43 ('net/mlx5: E-Switch, Introduce Vport...')
	Signed-off-by: Noa Osherovich <noaos@mellanox.com>
	Signed-off-by: Majd Dibbiny <majd@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 23898c763f4af6f5c80b0230b1ea788a0ce3cf73)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
#	drivers/net/ethernet/mellanox/mlx5/core/vport.c
#	include/linux/mlx5/mlx5_ifc.h
#	include/linux/mlx5/vport.h
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
index bc3d9f8a75c1,9b1855b199a1..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
@@@ -956,6 -1740,8 +968,11 @@@ static void node_guid_gen_from_mac(u64 
  int mlx5_eswitch_set_vport_mac(struct mlx5_eswitch *esw,
  			       int vport, u8 mac[ETH_ALEN])
  {
++<<<<<<< HEAD
++=======
+ 	struct mlx5_vport *evport;
+ 	u64 node_guid;
++>>>>>>> 23898c763f4a (net/mlx5: E-Switch, Modify node guid on vf set MAC)
  	int err = 0;
  
  	if (!ESW_ALLOWED(esw))
@@@ -971,6 -1766,17 +988,20 @@@
  		return err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	node_guid_gen_from_mac(&node_guid, mac);
+ 	err = mlx5_modify_nic_vport_node_guid(esw->dev, vport, node_guid);
+ 	if (err)
+ 		mlx5_core_warn(esw->dev,
+ 			       "Failed to set vport %d node guid, err = %d. RDMA_CM will not function properly for this VF.\n",
+ 			       vport, err);
+ 
+ 	mutex_lock(&esw->state_lock);
+ 	if (evport->enabled)
+ 		err = esw_vport_ingress_config(esw, evport);
+ 	mutex_unlock(&esw->state_lock);
++>>>>>>> 23898c763f4a (net/mlx5: E-Switch, Modify node guid on vf set MAC)
  	return err;
  }
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/vport.c
index 076197efea9b,daf44cd4c566..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/vport.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/vport.c
@@@ -430,6 -467,106 +430,109 @@@ int mlx5_modify_nic_vport_vlans(struct 
  }
  EXPORT_SYMBOL_GPL(mlx5_modify_nic_vport_vlans);
  
++<<<<<<< HEAD
++=======
+ int mlx5_query_nic_vport_system_image_guid(struct mlx5_core_dev *mdev,
+ 					   u64 *system_image_guid)
+ {
+ 	u32 *out;
+ 	int outlen = MLX5_ST_SZ_BYTES(query_nic_vport_context_out);
+ 
+ 	out = mlx5_vzalloc(outlen);
+ 	if (!out)
+ 		return -ENOMEM;
+ 
+ 	mlx5_query_nic_vport_context(mdev, 0, out, outlen);
+ 
+ 	*system_image_guid = MLX5_GET64(query_nic_vport_context_out, out,
+ 					nic_vport_context.system_image_guid);
+ 
+ 	kfree(out);
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(mlx5_query_nic_vport_system_image_guid);
+ 
+ int mlx5_query_nic_vport_node_guid(struct mlx5_core_dev *mdev, u64 *node_guid)
+ {
+ 	u32 *out;
+ 	int outlen = MLX5_ST_SZ_BYTES(query_nic_vport_context_out);
+ 
+ 	out = mlx5_vzalloc(outlen);
+ 	if (!out)
+ 		return -ENOMEM;
+ 
+ 	mlx5_query_nic_vport_context(mdev, 0, out, outlen);
+ 
+ 	*node_guid = MLX5_GET64(query_nic_vport_context_out, out,
+ 				nic_vport_context.node_guid);
+ 
+ 	kfree(out);
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(mlx5_query_nic_vport_node_guid);
+ 
+ int mlx5_modify_nic_vport_node_guid(struct mlx5_core_dev *mdev,
+ 				    u32 vport, u64 node_guid)
+ {
+ 	int inlen = MLX5_ST_SZ_BYTES(modify_nic_vport_context_in);
+ 	void *nic_vport_context;
+ 	u8 *guid;
+ 	void *in;
+ 	int err;
+ 
+ 	if (!vport)
+ 		return -EINVAL;
+ 	if (!MLX5_CAP_GEN(mdev, vport_group_manager))
+ 		return -EACCES;
+ 	if (!MLX5_CAP_ESW(mdev, nic_vport_node_guid_modify))
+ 		return -ENOTSUPP;
+ 
+ 	in = mlx5_vzalloc(inlen);
+ 	if (!in)
+ 		return -ENOMEM;
+ 
+ 	MLX5_SET(modify_nic_vport_context_in, in,
+ 		 field_select.node_guid, 1);
+ 	MLX5_SET(modify_nic_vport_context_in, in, vport_number, vport);
+ 	MLX5_SET(modify_nic_vport_context_in, in, other_vport, !!vport);
+ 
+ 	nic_vport_context = MLX5_ADDR_OF(modify_nic_vport_context_in,
+ 					 in, nic_vport_context);
+ 	guid = MLX5_ADDR_OF(nic_vport_context, nic_vport_context,
+ 			    node_guid);
+ 	MLX5_SET64(nic_vport_context, nic_vport_context, node_guid, node_guid);
+ 
+ 	err = mlx5_modify_nic_vport_context(mdev, in, inlen);
+ 
+ 	kvfree(in);
+ 
+ 	return err;
+ }
+ 
+ int mlx5_query_nic_vport_qkey_viol_cntr(struct mlx5_core_dev *mdev,
+ 					u16 *qkey_viol_cntr)
+ {
+ 	u32 *out;
+ 	int outlen = MLX5_ST_SZ_BYTES(query_nic_vport_context_out);
+ 
+ 	out = mlx5_vzalloc(outlen);
+ 	if (!out)
+ 		return -ENOMEM;
+ 
+ 	mlx5_query_nic_vport_context(mdev, 0, out, outlen);
+ 
+ 	*qkey_viol_cntr = MLX5_GET(query_nic_vport_context_out, out,
+ 				   nic_vport_context.qkey_violation_counter);
+ 
+ 	kfree(out);
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(mlx5_query_nic_vport_qkey_viol_cntr);
+ 
++>>>>>>> 23898c763f4a (net/mlx5: E-Switch, Modify node guid on vf set MAC)
  int mlx5_query_hca_vport_gid(struct mlx5_core_dev *dev, u8 other_vport,
  			     u8 port_num, u16  vf_num, u16 gid_index,
  			     union ib_gid *gid)
diff --cc include/linux/mlx5/mlx5_ifc.h
index 08e2b9ad01d1,e955a2859009..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -493,9 -501,11 +493,15 @@@ struct mlx5_ifc_e_switch_cap_bits 
  	u8         vport_svlan_insert[0x1];
  	u8         vport_cvlan_insert_if_not_exist[0x1];
  	u8         vport_cvlan_insert_overwrite[0x1];
++<<<<<<< HEAD
 +	u8         reserved_0[0x1b];
++=======
+ 	u8         reserved_at_5[0x19];
+ 	u8         nic_vport_node_guid_modify[0x1];
+ 	u8         nic_vport_port_guid_modify[0x1];
++>>>>>>> 23898c763f4a (net/mlx5: E-Switch, Modify node guid on vf set MAC)
  
 -	u8         reserved_at_20[0x7e0];
 +	u8         reserved_1[0x7e0];
  };
  
  struct mlx5_ifc_per_protocol_networking_offload_caps_bits {
@@@ -4440,7 -4586,10 +4446,14 @@@ struct mlx5_ifc_modify_nic_vport_contex
  };
  
  struct mlx5_ifc_modify_nic_vport_field_select_bits {
++<<<<<<< HEAD
 +	u8         reserved_0[0x19];
++=======
+ 	u8         reserved_at_0[0x16];
+ 	u8         node_guid[0x1];
+ 	u8         port_guid[0x1];
+ 	u8         reserved_at_18[0x1];
++>>>>>>> 23898c763f4a (net/mlx5: E-Switch, Modify node guid on vf set MAC)
  	u8         mtu[0x1];
  	u8         change_event[0x1];
  	u8         promisc[0x1];
diff --cc include/linux/mlx5/vport.h
index 638f2ca7a527,6c16c198f680..000000000000
--- a/include/linux/mlx5/vport.h
+++ b/include/linux/mlx5/vport.h
@@@ -45,6 -45,15 +45,18 @@@ int mlx5_query_nic_vport_mac_address(st
  				     u16 vport, u8 *addr);
  int mlx5_modify_nic_vport_mac_address(struct mlx5_core_dev *dev,
  				      u16 vport, u8 *addr);
++<<<<<<< HEAD
++=======
+ int mlx5_query_nic_vport_mtu(struct mlx5_core_dev *mdev, u16 *mtu);
+ int mlx5_modify_nic_vport_mtu(struct mlx5_core_dev *mdev, u16 mtu);
+ int mlx5_query_nic_vport_system_image_guid(struct mlx5_core_dev *mdev,
+ 					   u64 *system_image_guid);
+ int mlx5_query_nic_vport_node_guid(struct mlx5_core_dev *mdev, u64 *node_guid);
+ int mlx5_modify_nic_vport_node_guid(struct mlx5_core_dev *mdev,
+ 				    u32 vport, u64 node_guid);
+ int mlx5_query_nic_vport_qkey_viol_cntr(struct mlx5_core_dev *mdev,
+ 					u16 *qkey_viol_cntr);
++>>>>>>> 23898c763f4a (net/mlx5: E-Switch, Modify node guid on vf set MAC)
  int mlx5_query_hca_vport_gid(struct mlx5_core_dev *dev, u8 other_vport,
  			     u8 port_num, u16  vf_num, u16 gid_index,
  			     union ib_gid *gid);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/vport.c
* Unmerged path include/linux/mlx5/mlx5_ifc.h
* Unmerged path include/linux/mlx5/vport.h
