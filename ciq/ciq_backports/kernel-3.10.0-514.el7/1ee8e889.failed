scsi: add support for multiple hardware queues in scsi_(host_)find_tag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [scsi] add support for multiple hardware queues in scsi_(host_)find_tag (Ewan Milne) [1320306]
Rebuild_FUZZ: 95.52%
commit-author Bart Van Assche <bvanassche@acm.org>
commit 1ee8e889d946b3b1c2cc8b99e29eac47d1581dfd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1ee8e889.failed

Modify scsi_find_tag() and scsi_host_find_tag() such that these
functions can translate a tag generated by blk_mq_unique_tag().

	Signed-off-by: Bart Van Assche <bvanassche@acm.org>
	Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 1ee8e889d946b3b1c2cc8b99e29eac47d1581dfd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/scsi/scsi_tcq.h
diff --cc include/scsi/scsi_tcq.h
index 6c017b8e848a,7529c6acc231..000000000000
--- a/include/scsi/scsi_tcq.h
+++ b/include/scsi/scsi_tcq.h
@@@ -111,11 -111,14 +111,18 @@@ static inline int scsi_populate_tag_msg
  }
  
  static inline struct scsi_cmnd *scsi_mq_find_tag(struct Scsi_Host *shost,
- 		unsigned int hw_ctx, int tag)
+ 						 int unique_tag)
  {
- 	struct request *req;
+ 	u16 hwq = blk_mq_unique_tag_to_hwq(unique_tag);
+ 	struct request *req = NULL;
  
++<<<<<<< HEAD
 +	req = blk_mq_tag_to_rq(shost->tag_set->tags[hw_ctx], tag);
++=======
+ 	if (hwq < shost->tag_set.nr_hw_queues)
+ 		req = blk_mq_tag_to_rq(shost->tag_set.tags[hwq],
+ 				       blk_mq_unique_tag_to_tag(unique_tag));
++>>>>>>> 1ee8e889d946 (scsi: add support for multiple hardware queues in scsi_(host_)find_tag)
  	return req ? (struct scsi_cmnd *)req->special : NULL;
  }
  
* Unmerged path include/scsi/scsi_tcq.h
