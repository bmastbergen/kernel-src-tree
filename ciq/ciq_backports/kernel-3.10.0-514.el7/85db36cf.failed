Btrfs: fix inode cache writeout

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Chris Mason <clm@fb.com>
commit 85db36cfb3de1422aeafb4e2ce83396333b744bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/85db36cf.failed

The code to fix stalls during free spache cache IO wasn't using
the correct root when waiting on the IO for inode caches.  This
is only a problem when the inode cache is enabled with

mount -o inode_cache

This fixes the inode cache writeout to preserve any error values and
makes sure not to override the root when inode cache writeout is done.

	Reported-by: Filipe Manana <fdmanana@suse.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit 85db36cfb3de1422aeafb4e2ce83396333b744bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/free-space-cache.c
diff --cc fs/btrfs/free-space-cache.c
index 39da6626f574,d773f229d14d..000000000000
--- a/fs/btrfs/free-space-cache.c
+++ b/fs/btrfs/free-space-cache.c
@@@ -1101,7 -1146,11 +1101,15 @@@ int btrfs_wait_cache_io(struct btrfs_ro
  	int ret;
  	struct inode *inode = io_ctl->inode;
  
++<<<<<<< HEAD
 +	root = root->fs_info->tree_root;
++=======
+ 	if (!inode)
+ 		return 0;
+ 
+ 	if (block_group)
+ 		root = root->fs_info->tree_root;
++>>>>>>> 85db36cfb3de (Btrfs: fix inode cache writeout)
  
  	/* Flush the dirty pages in the cache file. */
  	ret = flush_dirty_cache(inode);
* Unmerged path fs/btrfs/free-space-cache.c
