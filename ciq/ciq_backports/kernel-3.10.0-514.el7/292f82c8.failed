mei: debug prints with client info in read

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit 292f82c86c94c3d419c799e5e3e94e8cf34c69de
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/292f82c8.failed

Add client info to debug prints in the read function to
ease on debugging efforts.

	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 292f82c86c94c3d419c799e5e3e94e8cf34c69de)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/main.c
diff --cc drivers/misc/mei/main.c
index b23f9eba9e3a,8eb0a9500a90..000000000000
--- a/drivers/misc/mei/main.c
+++ b/drivers/misc/mei/main.c
@@@ -232,10 -181,9 +232,14 @@@ static ssize_t mei_read(struct file *fi
  		*offset = 0;
  	}
  
 -	err = mei_cl_read_start(cl, length, file);
 +	err = mei_cl_read_start(cl, length);
  	if (err && err != -EBUSY) {
++<<<<<<< HEAD
 +		dev_dbg(&dev->pdev->dev,
 +			"mei start read failure with status = %d\n", err);
++=======
+ 		cl_dbg(dev, cl, "mei start read failure status = %d\n", err);
++>>>>>>> 292f82c86c94 (mei: debug prints with client info in read)
  		rets = err;
  		goto out;
  	}
@@@ -275,10 -222,17 +279,21 @@@
  		rets = 0;
  		goto out;
  	}
 -
 -copy_buffer:
  	/* now copy the data to user space */
++<<<<<<< HEAD
 +copy_buffer:
 +	dev_dbg(&dev->pdev->dev, "buf.size = %d buf.idx= %ld\n",
 +	    cb->response_buffer.size, cb->buf_idx);
++=======
+ 	if (cb->status) {
+ 		rets = cb->status;
+ 		cl_dbg(dev, cl, "read operation failed %d\n", rets);
+ 		goto free;
+ 	}
+ 
+ 	cl_dbg(dev, cl, "buf.size = %d buf.idx = %ld\n",
+ 	    cb->buf.size, cb->buf_idx);
++>>>>>>> 292f82c86c94 (mei: debug prints with client info in read)
  	if (length == 0 || ubuf == NULL || *offset > cb->buf_idx) {
  		rets = -EMSGSIZE;
  		goto free;
@@@ -300,15 -254,10 +315,19 @@@
  		goto out;
  
  free:
 +	cb_pos = mei_cl_find_read_cb(cl);
 +	/* Remove entry from read list */
 +	if (cb_pos)
 +		list_del(&cb_pos->list);
  	mei_io_cb_free(cb);
 -
 +	cl->reading_state = MEI_IDLE;
 +	cl->read_cb = NULL;
  out:
++<<<<<<< HEAD
 +	dev_dbg(&dev->pdev->dev, "end mei read rets= %d\n", rets);
++=======
+ 	cl_dbg(dev, cl, "end mei read rets = %d\n", rets);
++>>>>>>> 292f82c86c94 (mei: debug prints with client info in read)
  	mutex_unlock(&dev->device_lock);
  	return rets;
  }
* Unmerged path drivers/misc/mei/main.c
