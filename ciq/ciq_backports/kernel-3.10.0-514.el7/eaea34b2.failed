net/tun: implement ndo_set_rx_headroom

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] tun: implement ndo_set_rx_headroom (Jakub Sitnicki) [1322337]
Rebuild_FUZZ: 94.44%
commit-author Paolo Abeni <pabeni@redhat.com>
commit eaea34b23c46bf17b4a5638be69ab3561854f34b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eaea34b2.failed

ndo_set_rx_headroom controls the align value used by tun devices to
allocate skbs on frame reception.
When the xmit device adds a large encapsulation, this avoids an skb
head reallocation on forwarding.

The measured improvement when forwarding towards a vxlan dev with
frame size below the egress device MTU is as follow:

vxlan over ipv6, bridged: +6%
vxlan over ipv6, ovs: +7%

In case of ipv4 tunnels there is no improvement, since the tun
device default alignment provides enough headroom to avoid the skb
head reallocation.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit eaea34b23c46bf17b4a5638be69ab3561854f34b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/tun.c
diff --cc drivers/net/tun.c
index 877daee1a855,afdf950617c3..000000000000
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@@ -920,9 -974,11 +933,14 @@@ static const struct net_device_ops tap_
  #ifdef CONFIG_NET_POLL_CONTROLLER
  	.ndo_poll_controller	= tun_poll_controller,
  #endif
++<<<<<<< HEAD
++=======
+ 	.ndo_features_check	= passthru_features_check,
+ 	.ndo_set_rx_headroom	= tun_set_headroom,
++>>>>>>> eaea34b23c46 (net/tun: implement ndo_set_rx_headroom)
  };
  
 -static void tun_flow_init(struct tun_struct *tun)
 +static int tun_flow_init(struct tun_struct *tun)
  {
  	int i;
  
@@@ -1146,10 -1099,10 +1164,15 @@@ static ssize_t tun_get_user(struct tun_
  {
  	struct tun_pi pi = { 0, cpu_to_be16(ETH_P_IP) };
  	struct sk_buff *skb;
++<<<<<<< HEAD
 +	size_t len = total_len, align = NET_SKB_PAD, linear;
++=======
+ 	size_t total_len = iov_iter_count(from);
+ 	size_t len = total_len, align = tun->align, linear;
++>>>>>>> eaea34b23c46 (net/tun: implement ndo_set_rx_headroom)
  	struct virtio_net_hdr gso = { 0 };
  	int good_linear;
 +	int offset = 0;
  	int copylen;
  	bool zerocopy = false;
  	int err;
* Unmerged path drivers/net/tun.c
