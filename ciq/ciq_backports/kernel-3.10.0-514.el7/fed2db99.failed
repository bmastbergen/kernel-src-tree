i40e: Specify AQ event opcode to wait for

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Shannon Nelson <shannon.nelson@intel.com>
commit fed2db99824334b3a7219da6b45d70f448449d7d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fed2db99.failed

To add a little flexibility to the nvmupdate facility, this code adds the
ability to specify an AQ event opcode to wait on after the Exec_AQ request.

Change-ID: Iddbfd63c3de8df3edb9d3e90678b08989bc4946e
	Signed-off-by: Shannon Nelson <shannon.nelson@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit fed2db99824334b3a7219da6b45d70f448449d7d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_nvm.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_nvm.c
index 1ae29ac8c310,954efe3118db..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_nvm.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_nvm.c
@@@ -1030,6 -1059,37 +1059,40 @@@ retry
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * i40e_nvmupd_check_wait_event - handle NVM update operation events
+  * @hw: pointer to the hardware structure
+  * @opcode: the event that just happened
+  **/
+ void i40e_nvmupd_check_wait_event(struct i40e_hw *hw, u16 opcode)
+ {
+ 	if (opcode == hw->nvm_wait_opcode) {
+ 		i40e_debug(hw, I40E_DEBUG_NVM,
+ 			   "NVMUPD: clearing wait on opcode 0x%04x\n", opcode);
+ 		if (hw->nvm_release_on_done) {
+ 			i40e_release_nvm(hw);
+ 			hw->nvm_release_on_done = false;
+ 		}
+ 		hw->nvm_wait_opcode = 0;
+ 
+ 		switch (hw->nvmupd_state) {
+ 		case I40E_NVMUPD_STATE_INIT_WAIT:
+ 			hw->nvmupd_state = I40E_NVMUPD_STATE_INIT;
+ 			break;
+ 
+ 		case I40E_NVMUPD_STATE_WRITE_WAIT:
+ 			hw->nvmupd_state = I40E_NVMUPD_STATE_WRITING;
+ 			break;
+ 
+ 		default:
+ 			break;
+ 		}
+ 	}
+ }
+ 
+ /**
++>>>>>>> fed2db998243 (i40e: Specify AQ event opcode to wait for)
   * i40e_nvmupd_validate_command - Validate given command
   * @hw: pointer to hardware structure
   * @cmd: pointer to nvm update command buffer
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_nvm.c
diff --git a/drivers/net/ethernet/intel/i40e/i40e_type.h b/drivers/net/ethernet/intel/i40e/i40e_type.h
index 5030c69c337d..66a570e00f56 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_type.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_type.h
@@ -531,6 +531,7 @@ struct i40e_hw {
 	struct i40e_aq_desc nvm_wb_desc;
 	struct i40e_virt_mem nvm_buff;
 	bool nvm_release_on_done;
+	u16 nvm_wait_opcode;
 
 	/* HMC info */
 	struct i40e_hmc_info hmc; /* HMC info struct */
diff --git a/drivers/net/ethernet/intel/i40evf/i40e_type.h b/drivers/net/ethernet/intel/i40evf/i40e_type.h
index e5981d68981a..db458274dcc6 100644
--- a/drivers/net/ethernet/intel/i40evf/i40e_type.h
+++ b/drivers/net/ethernet/intel/i40evf/i40e_type.h
@@ -505,6 +505,7 @@ struct i40e_hw {
 	struct i40e_aq_desc nvm_wb_desc;
 	struct i40e_virt_mem nvm_buff;
 	bool nvm_release_on_done;
+	u16 nvm_wait_opcode;
 
 	/* HMC info */
 	struct i40e_hmc_info hmc; /* HMC info struct */
