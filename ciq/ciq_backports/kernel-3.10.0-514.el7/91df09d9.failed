drm/i915: Revert DisplayPort fast link training feature

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] i915: Revert DisplayPort fast link training feature (Rob Clark) [1348329 1349064]
Rebuild_FUZZ: 96.23%
commit-author Mika Kahola <mika.kahola@intel.com>
commit 91df09d92ad82c8778ca218097bf827f154292ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/91df09d9.failed

It has been found out that in some HW combination the DisplayPort
fast link training feature caused screen flickering. Let's revert
this feature for now until we can ensure that the feature works for
all platforms.

This is a manual revert of commits 5fa836a9d859 ("drm/i915: DP link
training optimization") and 4e96c97742f4 ("drm/i915: eDP link training
optimization").

Fixes: 5fa836a9d859 ("drm/i915: DP link training optimization")
Fixes: 4e96c97742f4 ("drm/i915: eDP link training optimization")
	Cc: <stable@vger.kernel.org> # v4.2+

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=91393
	Reviewed-by: Jani Nikula <jani.nikula@intel.com>
	Signed-off-by: Mika Kahola <mika.kahola@intel.com>
	Signed-off-by: Jani Nikula <jani.nikula@intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/1466410226-19543-1-git-send-email-mika.kahola@intel.com
(cherry picked from commit 91df09d92ad82c8778ca218097bf827f154292ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_dp.c
#	drivers/gpu/drm/i915/intel_dp_link_training.c
#	drivers/gpu/drm/i915/intel_drv.h
diff --cc drivers/gpu/drm/i915/intel_dp.c
index 821d8153170e,3cdea4d7a917..000000000000
--- a/drivers/gpu/drm/i915/intel_dp.c
+++ b/drivers/gpu/drm/i915/intel_dp.c
@@@ -4663,23 -4621,10 +4663,30 @@@ intel_dp_hpd_pulse(struct intel_digital
  	intel_display_power_get(dev_priv, power_domain);
  
  	if (long_hpd) {
++<<<<<<< HEAD
 +
 +		if (HAS_PCH_SPLIT(dev)) {
 +			if (!ibx_digital_port_connected(dev_priv, intel_dig_port))
 +				goto mst_fail;
 +		} else {
 +			if (g4x_digital_port_connected(dev, intel_dig_port) != 1)
 +				goto mst_fail;
 +		}
 +
 +		if (!intel_dp_get_dpcd(intel_dp)) {
 +			goto mst_fail;
 +		}
 +
 +		intel_dp_probe_oui(intel_dp);
 +
 +		if (!intel_dp_probe_mst(intel_dp))
 +			goto mst_fail;
++=======
+ 		intel_dp_long_pulse(intel_dp->attached_connector);
+ 		if (intel_dp->is_mst)
+ 			ret = IRQ_HANDLED;
+ 		goto put_power;
++>>>>>>> 91df09d92ad8 (drm/i915: Revert DisplayPort fast link training feature)
  
  	} else {
  		if (intel_dp->is_mst) {
diff --cc drivers/gpu/drm/i915/intel_drv.h
index 640e923ced09,9257f08aa677..000000000000
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@@ -670,6 -890,14 +670,17 @@@ struct intel_dp 
  				     bool has_aux_irq,
  				     int send_bytes,
  				     uint32_t aux_clock_divider);
++<<<<<<< HEAD
++=======
+ 
+ 	/* This is called before a link training is starterd */
+ 	void (*prepare_link_retrain)(struct intel_dp *intel_dp);
+ 
+ 	/* Displayport compliance testing */
+ 	unsigned long compliance_test_type;
+ 	unsigned long compliance_test_data;
+ 	bool compliance_test_active;
++>>>>>>> 91df09d92ad8 (drm/i915: Revert DisplayPort fast link training feature)
  };
  
  struct intel_digital_port {
* Unmerged path drivers/gpu/drm/i915/intel_dp_link_training.c
* Unmerged path drivers/gpu/drm/i915/intel_dp.c
* Unmerged path drivers/gpu/drm/i915/intel_dp_link_training.c
* Unmerged path drivers/gpu/drm/i915/intel_drv.h
