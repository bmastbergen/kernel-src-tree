rhashtable: ensure cache line alignment on bucket_table

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Eric Dumazet <edumazet@google.com>
commit b9ebafbe8cfeeddec881504c446cccd0d87a51b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b9ebafbe.failed

struct bucket_table contains mostly read fields :

size, locks_mask, locks.

Make sure these are not sharing a cache line with buckets[]

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Acked-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b9ebafbe8cfeeddec881504c446cccd0d87a51b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/rhashtable.h
diff --cc include/linux/rhashtable.h
index 0839d7b8cd60,cb2104be2135..000000000000
--- a/include/linux/rhashtable.h
+++ b/include/linux/rhashtable.h
@@@ -24,11 -46,19 +24,19 @@@ struct rhash_head 
  	struct rhash_head __rcu		*next;
  };
  
 -/**
 - * struct bucket_table - Table of hash buckets
 - * @size: Number of hash buckets
 - * @locks_mask: Mask to apply before accessing locks[]
 - * @locks: Array of spinlocks protecting individual buckets
 - * @buckets: size * hash buckets
 - */
 +#define INIT_HASH_HEAD(ptr) ((ptr)->next = NULL)
 +
  struct bucket_table {
++<<<<<<< HEAD
 +	size_t				size;
 +	struct rhash_head __rcu		*buckets[];
++=======
+ 	size_t			size;
+ 	unsigned int		locks_mask;
+ 	spinlock_t		*locks;
+ 
+ 	struct rhash_head __rcu	*buckets[] ____cacheline_aligned_in_smp;
++>>>>>>> b9ebafbe8cfe (rhashtable: ensure cache line alignment on bucket_table)
  };
  
  typedef u32 (*rht_hashfn_t)(const void *data, u32 len, u32 seed);
* Unmerged path include/linux/rhashtable.h
