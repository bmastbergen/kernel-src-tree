libceph: Avoid holding the zero page on ceph_msgr_slab_init errors

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Benoît Canet <benoit.canet@nodalink.com>
commit d920ff6fc7c1ec3d7bd80432bff5575c0ebe426c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d920ff6f.failed

ceph_msgr_slab_init may fail due to a temporary ENOMEM.

Delay a bit the initialization of zero_page in ceph_msgr_init and
reorder its cleanup in _ceph_msgr_exit so it's done in reverse
order of setup.

BUG_ON() will not suffer to be postponed in case it is triggered.

	Signed-off-by: Benoît Canet <benoit.canet@nodalink.com>
	Reviewed-by: Alex Elder <elder@linaro.org>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit d920ff6fc7c1ec3d7bd80432bff5575c0ebe426c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ceph/messenger.c
diff --cc net/ceph/messenger.c
index 20ef4b9f1b39,0f9ea60a8971..000000000000
--- a/net/ceph/messenger.c
+++ b/net/ceph/messenger.c
@@@ -288,11 -292,11 +291,19 @@@ int ceph_msgr_init(void
  	zero_page = ZERO_PAGE(0);
  	page_cache_get(zero_page);
  
++<<<<<<< HEAD
 +	if (ceph_msgr_slab_init())
 +		return -ENOMEM;
 +
 +	ceph_msgr_wq = alloc_workqueue("ceph-msgr",
 +				       WQ_NON_REENTRANT | WQ_MEM_RECLAIM, 0);
++=======
+ 	/*
+ 	 * The number of active work items is limited by the number of
+ 	 * connections, so leave @max_active at default.
+ 	 */
+ 	ceph_msgr_wq = alloc_workqueue("ceph-msgr", WQ_MEM_RECLAIM, 0);
++>>>>>>> d920ff6fc7c1 (libceph: Avoid holding the zero page on ceph_msgr_slab_init errors)
  	if (ceph_msgr_wq)
  		return 0;
  
* Unmerged path net/ceph/messenger.c
