IB/srp: Fix a debug kernel crash

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Bart Van Assche <bart.vanassche@sandisk.com>
commit 54f5c9c52d69afa55abf2b034df8d45f588466c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/54f5c9c5.failed

Avoid that the following BUG() is triggered against a debug
kernel:

kernel BUG at include/linux/scatterlist.h:92!
RIP: 0010:[<ffffffffa0467199>]  [<ffffffffa0467199>] srp_map_idb+0x199/0x1a0 [ib_srp]
Call Trace:
 [<ffffffffa04685fa>] srp_map_data+0x84a/0x890 [ib_srp]
 [<ffffffffa0469674>] srp_queuecommand+0x1e4/0x610 [ib_srp]
 [<ffffffff813f5a5e>] scsi_dispatch_cmd+0x9e/0x180
 [<ffffffff813f8b07>] scsi_request_fn+0x477/0x610
 [<ffffffff81298ffe>] __blk_run_queue+0x2e/0x40
 [<ffffffff81299070>] blk_delay_work+0x20/0x30
 [<ffffffff81071f07>] process_one_work+0x197/0x480
 [<ffffffff81072239>] worker_thread+0x49/0x490
 [<ffffffff810787ea>] kthread+0xea/0x100
 [<ffffffff8159b632>] ret_from_fork+0x22/0x40

Fixes: f7f7aab1a5c0 ("IB/srp: Convert to new registration API")
	Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Cc: Sagi Grimberg <sagi@grimberg.me>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: <stable@vger.kernel.org> # v4.4+
	Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 54f5c9c52d69afa55abf2b034df8d45f588466c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srp/ib_srp.c
diff --cc drivers/infiniband/ulp/srp/ib_srp.c
index eb57f69536ed,7f08cb15900f..000000000000
--- a/drivers/infiniband/ulp/srp/ib_srp.c
+++ b/drivers/infiniband/ulp/srp/ib_srp.c
@@@ -1487,15 -1496,30 +1487,40 @@@ static int srp_map_idb(struct srp_rdma_
  	state.gen.next = next_mr;
  	state.gen.end = end_mr;
  	state.desc = &idb_desc;
 +	state.pages = idb_pages;
 +	state.pages[0] = (req->indirect_dma_addr &
 +			  dev->mr_page_mask);
 +	state.npages = 1;
  	state.base_dma_addr = req->indirect_dma_addr;
  	state.dma_len = idb_len;
++<<<<<<< HEAD
 +	ret = srp_finish_mapping(&state, ch);
 +	if (ret < 0)
 +		goto out;
++=======
+ 
+ 	if (dev->use_fast_reg) {
+ 		state.sg = idb_sg;
+ 		sg_init_one(idb_sg, req->indirect_desc, idb_len);
+ 		idb_sg->dma_address = req->indirect_dma_addr; /* hack! */
+ #ifdef CONFIG_NEED_SG_DMA_LENGTH
+ 		idb_sg->dma_length = idb_sg->length;	      /* hack^2 */
+ #endif
+ 		ret = srp_map_finish_fr(&state, req, ch, 1);
+ 		if (ret < 0)
+ 			return ret;
+ 	} else if (dev->use_fmr) {
+ 		state.pages = idb_pages;
+ 		state.pages[0] = (req->indirect_dma_addr &
+ 				  dev->mr_page_mask);
+ 		state.npages = 1;
+ 		ret = srp_map_finish_fmr(&state, ch);
+ 		if (ret < 0)
+ 			return ret;
+ 	} else {
+ 		return -EINVAL;
+ 	}
++>>>>>>> 54f5c9c52d69 (IB/srp: Fix a debug kernel crash)
  
  	*idb_rkey = idb_desc.key;
  
* Unmerged path drivers/infiniband/ulp/srp/ib_srp.c
