GFS2: Fix direct IO write rounding error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Bob Peterson <rpeterso@redhat.com>
commit 2df6f47150b6afbb258ed1d5c9ed78c23df05053
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2df6f471.failed

The fsx test in xfstests was failing because it was using direct IO
writes which were using a bad calculation. It was using
loff_t lstart = offset & (PAGE_CACHE_SIZE - 1); when it should be
loff_t lstart = offset & ~(PAGE_CACHE_SIZE - 1);
Thus, the write at offset 0x67e00 was calculating lstart to be
0xe00, the address of our corruption. Instead, it should have been
0x67000. This patch fixes the calculation.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Acked-by: Steven Whitehouse <swhiteho@redhat.com>
(cherry picked from commit 2df6f47150b6afbb258ed1d5c9ed78c23df05053)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/aops.c
diff --cc fs/gfs2/aops.c
index fda3e9513f0b,aa016e4b8bec..000000000000
--- a/fs/gfs2/aops.c
+++ b/fs/gfs2/aops.c
@@@ -1102,8 -1082,8 +1102,13 @@@ static ssize_t gfs2_direct_IO(int rw, s
  	 * the first place, mapping->nr_pages will always be zero.
  	 */
  	if (mapping->nrpages) {
++<<<<<<< HEAD
 +		loff_t lstart = offset & (PAGE_CACHE_SIZE - 1);
 +		loff_t len = iov_length(iov, nr_segs);
++=======
+ 		loff_t lstart = offset & ~(PAGE_CACHE_SIZE - 1);
+ 		loff_t len = iov_iter_count(iter);
++>>>>>>> 2df6f47150b6 (GFS2: Fix direct IO write rounding error)
  		loff_t end = PAGE_ALIGN(offset + len) - 1;
  
  		rv = 0;
* Unmerged path fs/gfs2/aops.c
