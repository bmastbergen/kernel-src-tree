mmc: block: Use dev_set|get_drvdata()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit fc95e30ba33b9f4faa8630d0762af2548031dc00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fc95e30b.failed

In most of the cases mmc_get|set_drvdata() didn't simplify code, which
should be the primary reason for such macros.

Let's remove them and convert to the common device_driver macros,
dev_set|get_drvdata() instead.

	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit fc95e30ba33b9f4faa8630d0762af2548031dc00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/card/block.c
diff --cc drivers/mmc/card/block.c
index 8a79ddddf163,f45f7e3870be..000000000000
--- a/drivers/mmc/card/block.c
+++ b/drivers/mmc/card/block.c
@@@ -2481,9 -2483,10 +2482,14 @@@ static int mmc_blk_probe(struct mmc_car
  	return 0;
  }
  
 -static int mmc_blk_remove(struct device *dev)
 +static void mmc_blk_remove(struct mmc_card *card)
  {
++<<<<<<< HEAD
 +	struct mmc_blk_data *md = mmc_get_drvdata(card);
++=======
+ 	struct mmc_card *card = mmc_dev_to_card(dev);
+ 	struct mmc_blk_data *md = dev_get_drvdata(dev);
++>>>>>>> fc95e30ba33b (mmc: block: Use dev_set|get_drvdata())
  
  	mmc_blk_remove_parts(card, md);
  	pm_runtime_get_sync(&card->dev);
@@@ -2494,13 -2497,15 +2500,23 @@@
  		pm_runtime_disable(&card->dev);
  	pm_runtime_put_noidle(&card->dev);
  	mmc_blk_remove_req(md);
++<<<<<<< HEAD
 +	mmc_set_drvdata(card, NULL);
++=======
+ 	dev_set_drvdata(dev, NULL);
+ 
+ 	return 0;
++>>>>>>> fc95e30ba33b (mmc: block: Use dev_set|get_drvdata())
  }
  
 -static int _mmc_blk_suspend(struct device *dev)
 +static int _mmc_blk_suspend(struct mmc_card *card)
  {
  	struct mmc_blk_data *part_md;
++<<<<<<< HEAD
 +	struct mmc_blk_data *md = mmc_get_drvdata(card);
++=======
+ 	struct mmc_blk_data *md = dev_get_drvdata(dev);
++>>>>>>> fc95e30ba33b (mmc: block: Use dev_set|get_drvdata())
  
  	if (md) {
  		mmc_queue_suspend(&md->queue);
* Unmerged path drivers/mmc/card/block.c
diff --git a/include/linux/mmc/card.h b/include/linux/mmc/card.h
index b951fb4258a9..ef95a81b5b9e 100644
--- a/include/linux/mmc/card.h
+++ b/include/linux/mmc/card.h
@@ -519,8 +519,6 @@ static inline int mmc_card_broken_irq_polling(const struct mmc_card *c)
 #define mmc_dev_to_card(d)	container_of(d, struct mmc_card, dev)
 
 #define mmc_list_to_card(l)	container_of(l, struct mmc_card, node)
-#define mmc_get_drvdata(c)	dev_get_drvdata(&(c)->dev)
-#define mmc_set_drvdata(c,d)	dev_set_drvdata(&(c)->dev, d)
 
 /*
  * MMC device driver (e.g., Flash card, I/O card...)
