i40e/ethtool: support coalesce setting by queue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kan Liang <kan.liang@intel.com>
commit f3757a4d9e823c43ccfe4db02b6cda77414e25f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f3757a4d.failed

This patch implements set_per_queue_coalesce for i40e driver.

	Signed-off-by: Kan Liang <kan.liang@intel.com>
	Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f3757a4d9e823c43ccfe4db02b6cda77414e25f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_ethtool.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_ethtool.c
index d917fccb5422,784b1659457a..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
@@@ -1864,28 -2026,21 +1864,34 @@@ static int i40e_set_coalesce(struct net
  		return -EINVAL;
  	}
  
 -	return 0;
 -}
 +	if (ec->use_adaptive_rx_coalesce)
 +		vsi->rx_itr_setting |= I40E_ITR_DYNAMIC;
 +	else
 +		vsi->rx_itr_setting &= ~I40E_ITR_DYNAMIC;
  
 -static int i40e_set_coalesce(struct net_device *netdev,
 -			     struct ethtool_coalesce *ec)
 -{
 -	return __i40e_set_coalesce(netdev, ec, -1);
 +	if (ec->use_adaptive_tx_coalesce)
 +		vsi->tx_itr_setting |= I40E_ITR_DYNAMIC;
 +	else
 +		vsi->tx_itr_setting &= ~I40E_ITR_DYNAMIC;
 +
 +	for (i = 0; i < vsi->num_q_vectors; i++, vector++) {
 +		q_vector = vsi->q_vectors[i];
 +		q_vector->rx.itr = ITR_TO_REG(vsi->rx_itr_setting);
 +		wr32(hw, I40E_PFINT_ITRN(0, vector - 1), q_vector->rx.itr);
 +		q_vector->tx.itr = ITR_TO_REG(vsi->tx_itr_setting);
 +		wr32(hw, I40E_PFINT_ITRN(1, vector - 1), q_vector->tx.itr);
 +		i40e_flush(hw);
 +	}
 +
 +	return 0;
  }
  
+ static int i40e_set_per_queue_coalesce(struct net_device *netdev, u32 queue,
+ 				       struct ethtool_coalesce *ec)
+ {
+ 	return __i40e_set_coalesce(netdev, ec, queue);
+ }
+ 
  /**
   * i40e_get_rss_hash_opts - Get RSS hash Input Set for each flow type
   * @pf: pointer to the physical function struct
@@@ -2751,6 -2926,8 +2757,11 @@@ static const struct ethtool_ops i40e_et
  	.get_ts_info		= i40e_get_ts_info,
  	.get_priv_flags		= i40e_get_priv_flags,
  	.set_priv_flags		= i40e_set_priv_flags,
++<<<<<<< HEAD
++=======
+ 	.get_per_queue_coalesce	= i40e_get_per_queue_coalesce,
+ 	.set_per_queue_coalesce	= i40e_set_per_queue_coalesce,
++>>>>>>> f3757a4d9e82 (i40e/ethtool: support coalesce setting by queue)
  };
  
  void i40e_set_ethtool_ops(struct net_device *netdev)
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_ethtool.c
