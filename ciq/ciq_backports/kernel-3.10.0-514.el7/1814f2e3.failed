dm mpath: add locking to multipath_resume and must_push_back

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mike Snitzer <snitzer@redhat.com>
commit 1814f2e3fb95b58490e56a38fefe462ffe8fb9ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1814f2e3.failed

Multiple flags were being tested without locking.  Protect against
non-atomic bit changes in m->flags by holding m->lock (while testing or
setting the queue_if_no_path related flags).

	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 1814f2e3fb95b58490e56a38fefe462ffe8fb9ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-mpath.c
diff --cc drivers/md/dm-mpath.c
index e077a28bdb3f,d7107d23b897..000000000000
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@@ -389,11 -498,36 +389,42 @@@ failed
   * and multipath_resume() calls and we have no need to check
   * for the DMF_NOFLUSH_SUSPENDING flag.
   */
 -static bool __must_push_back(struct multipath *m)
 +static int __must_push_back(struct multipath *m)
  {
++<<<<<<< HEAD
 +	return (m->queue_if_no_path ||
 +		(m->queue_if_no_path != m->saved_queue_if_no_path &&
 +		 dm_noflush_suspending(m->ti)));
++=======
+ 	return ((test_bit(MPATHF_QUEUE_IF_NO_PATH, &m->flags) !=
+ 		 test_bit(MPATHF_SAVED_QUEUE_IF_NO_PATH, &m->flags)) &&
+ 		dm_noflush_suspending(m->ti));
+ }
+ 
+ static bool must_push_back_rq(struct multipath *m)
+ {
+ 	bool r;
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(&m->lock, flags);
+ 	r = (test_bit(MPATHF_QUEUE_IF_NO_PATH, &m->flags) ||
+ 	     __must_push_back(m));
+ 	spin_unlock_irqrestore(&m->lock, flags);
+ 
+ 	return r;
+ }
+ 
+ static bool must_push_back_bio(struct multipath *m)
+ {
+ 	bool r;
+ 	unsigned long flags;
+ 
+ 	spin_lock_irqsave(&m->lock, flags);
+ 	r = __must_push_back(m);
+ 	spin_unlock_irqrestore(&m->lock, flags);
+ 
+ 	return r;
++>>>>>>> 1814f2e3fb95 (dm mpath: add locking to multipath_resume and must_push_back)
  }
  
  /*
@@@ -1374,7 -1697,10 +1405,14 @@@ static void multipath_resume(struct dm_
  	unsigned long flags;
  
  	spin_lock_irqsave(&m->lock, flags);
++<<<<<<< HEAD
 +	m->queue_if_no_path = m->saved_queue_if_no_path;
++=======
+ 	if (test_bit(MPATHF_SAVED_QUEUE_IF_NO_PATH, &m->flags))
+ 		set_bit(MPATHF_QUEUE_IF_NO_PATH, &m->flags);
+ 	else
+ 		clear_bit(MPATHF_QUEUE_IF_NO_PATH, &m->flags);
++>>>>>>> 1814f2e3fb95 (dm mpath: add locking to multipath_resume and must_push_back)
  	spin_unlock_irqrestore(&m->lock, flags);
  }
  
* Unmerged path drivers/md/dm-mpath.c
