perf tools: Add event_update user level event

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit ffe777254cce24fb5fde3f0aa91fc755cfb1b812
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ffe77725.failed

It'll serve as a base event for additional event attributes details,
that are not part of the attr event.

At the moment this event is just a dummy one without any specific
functionality. The type value will distinguish the update event details.
It'll come in the following patches.

The idea for this event is to be extensible for any update that the
event might need in the future.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Kan Liang <kan.liang@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1445784728-21732-21-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit ffe777254cce24fb5fde3f0aa91fc755cfb1b812)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/event.c
#	tools/perf/util/event.h
#	tools/perf/util/session.c
diff --cc tools/perf/util/event.c
index 763fbcde76fc,cd61bb1f3917..000000000000
--- a/tools/perf/util/event.c
+++ b/tools/perf/util/event.c
@@@ -35,6 -39,12 +35,15 @@@ static const char *perf_event__names[] 
  	[PERF_RECORD_AUXTRACE_INFO]		= "AUXTRACE_INFO",
  	[PERF_RECORD_AUXTRACE]			= "AUXTRACE",
  	[PERF_RECORD_AUXTRACE_ERROR]		= "AUXTRACE_ERROR",
++<<<<<<< HEAD
++=======
+ 	[PERF_RECORD_THREAD_MAP]		= "THREAD_MAP",
+ 	[PERF_RECORD_CPU_MAP]			= "CPU_MAP",
+ 	[PERF_RECORD_STAT_CONFIG]		= "STAT_CONFIG",
+ 	[PERF_RECORD_STAT]			= "STAT",
+ 	[PERF_RECORD_STAT_ROUND]		= "STAT_ROUND",
+ 	[PERF_RECORD_EVENT_UPDATE]		= "EVENT_UPDATE",
++>>>>>>> ffe777254cce (perf tools: Add event_update user level event)
  };
  
  const char *perf_event__name(unsigned int id)
diff --cc tools/perf/util/event.h
index 9400ef1c1335,6966a4b7c0f0..000000000000
--- a/tools/perf/util/event.h
+++ b/tools/perf/util/event.h
@@@ -226,6 -226,12 +226,15 @@@ enum perf_user_event_type { /* above an
  	PERF_RECORD_AUXTRACE_INFO		= 70,
  	PERF_RECORD_AUXTRACE			= 71,
  	PERF_RECORD_AUXTRACE_ERROR		= 72,
++<<<<<<< HEAD
++=======
+ 	PERF_RECORD_THREAD_MAP			= 73,
+ 	PERF_RECORD_CPU_MAP			= 74,
+ 	PERF_RECORD_STAT_CONFIG			= 75,
+ 	PERF_RECORD_STAT			= 76,
+ 	PERF_RECORD_STAT_ROUND			= 77,
+ 	PERF_RECORD_EVENT_UPDATE		= 78,
++>>>>>>> ffe777254cce (perf tools: Add event_update user level event)
  	PERF_RECORD_HEADER_MAX
  };
  
diff --cc tools/perf/util/session.c
index 5c19125e63db,49e5cdc4cc5a..000000000000
--- a/tools/perf/util/session.c
+++ b/tools/perf/util/session.c
@@@ -626,6 -792,12 +644,15 @@@ static perf_event__swap_op perf_event__
  	[PERF_RECORD_AUXTRACE_INFO]	  = perf_event__auxtrace_info_swap,
  	[PERF_RECORD_AUXTRACE]		  = perf_event__auxtrace_swap,
  	[PERF_RECORD_AUXTRACE_ERROR]	  = perf_event__auxtrace_error_swap,
++<<<<<<< HEAD
++=======
+ 	[PERF_RECORD_THREAD_MAP]	  = perf_event__thread_map_swap,
+ 	[PERF_RECORD_CPU_MAP]		  = perf_event__cpu_map_swap,
+ 	[PERF_RECORD_STAT_CONFIG]	  = perf_event__stat_config_swap,
+ 	[PERF_RECORD_STAT]		  = perf_event__stat_swap,
+ 	[PERF_RECORD_STAT_ROUND]	  = perf_event__stat_round_swap,
+ 	[PERF_RECORD_EVENT_UPDATE]	  = perf_event__event_update_swap,
++>>>>>>> ffe777254cce (perf tools: Add event_update user level event)
  	[PERF_RECORD_HEADER_MAX]	  = NULL,
  };
  
* Unmerged path tools/perf/util/event.c
* Unmerged path tools/perf/util/event.h
diff --git a/tools/perf/util/header.c b/tools/perf/util/header.c
index 5ac7bdb0dff7..6b4e00220a5a 100644
--- a/tools/perf/util/header.c
+++ b/tools/perf/util/header.c
@@ -2745,6 +2745,26 @@ int perf_event__process_attr(struct perf_tool *tool __maybe_unused,
 	return 0;
 }
 
+int perf_event__process_event_update(struct perf_tool *tool __maybe_unused,
+				     union perf_event *event,
+				     struct perf_evlist **pevlist)
+{
+	struct event_update_event *ev = &event->event_update;
+	struct perf_evlist *evlist;
+	struct perf_evsel *evsel;
+
+	if (!pevlist || *pevlist == NULL)
+		return -EINVAL;
+
+	evlist = *pevlist;
+
+	evsel = perf_evlist__id2evsel(evlist, ev->id);
+	if (evsel == NULL)
+		return -EINVAL;
+
+	return 0;
+}
+
 int perf_event__synthesize_tracing_data(struct perf_tool *tool, int fd,
 					struct perf_evlist *evlist,
 					perf_event__handler_t process)
diff --git a/tools/perf/util/header.h b/tools/perf/util/header.h
index 05f27cb6b7e3..1e843c67a4ff 100644
--- a/tools/perf/util/header.h
+++ b/tools/perf/util/header.h
@@ -107,6 +107,9 @@ int perf_event__synthesize_attrs(struct perf_tool *tool,
 				 perf_event__handler_t process);
 int perf_event__process_attr(struct perf_tool *tool, union perf_event *event,
 			     struct perf_evlist **pevlist);
+int perf_event__process_event_update(struct perf_tool *tool __maybe_unused,
+				     union perf_event *event,
+				     struct perf_evlist **pevlist);
 
 int perf_event__synthesize_tracing_data(struct perf_tool *tool,
 					int fd, struct perf_evlist *evlist,
* Unmerged path tools/perf/util/session.c
diff --git a/tools/perf/util/tool.h b/tools/perf/util/tool.h
index c307dd438286..8f001322a41b 100644
--- a/tools/perf/util/tool.h
+++ b/tools/perf/util/tool.h
@@ -49,6 +49,7 @@ struct perf_tool {
 			throttle,
 			unthrottle;
 	event_attr_op	attr;
+	event_attr_op	event_update;
 	event_op2	tracing_data;
 	event_oe	finished_round;
 	event_op2	build_id,
