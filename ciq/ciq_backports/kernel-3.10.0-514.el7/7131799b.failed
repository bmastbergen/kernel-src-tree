mei: deprecate the mei_wd_state_independence_msg

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Tomas Winkler <tomas.winkler@intel.com>
commit 7131799b145aa67984cc57e52d6379862c78afa3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7131799b.failed

wd independence is deprecated, remove it.

	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 7131799b145aa67984cc57e52d6379862c78afa3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/main.c
diff --cc drivers/misc/mei/main.c
index 642d6224c309,b9ad5106f5e1..000000000000
--- a/drivers/misc/mei/main.c
+++ b/drivers/misc/mei/main.c
@@@ -191,25 -209,6 +190,28 @@@ static ssize_t mei_read(struct file *fi
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	if (length == 0) {
 +		rets = 0;
 +		goto out;
 +	}
 +
 +	if ((cl->sm_state & MEI_WD_STATE_INDEPENDENCE_MSG_SENT) == 0) {
 +		/* Do not allow to read watchdog client */
 +		i = mei_me_cl_by_uuid(dev, &mei_wd_guid);
 +		if (i >= 0) {
 +			struct mei_me_client *me_client = &dev->me_clients[i];
 +			if (cl->me_client_id == me_client->client_id) {
 +				rets = -EBADF;
 +				goto out;
 +			}
 +		}
 +	} else {
 +		cl->sm_state &= ~MEI_WD_STATE_INDEPENDENCE_MSG_SENT;
 +	}
 +
++=======
++>>>>>>> 7131799b145a (mei: deprecate the mei_wd_state_independence_msg)
  	if (cl == &dev->iamthif_cl) {
  		rets = mei_amthif_read(dev, file, ubuf, length, offset);
  		goto out;
@@@ -407,22 -402,9 +409,12 @@@ static ssize_t mei_write(struct file *f
  		goto out;
  
  	rets = copy_from_user(write_cb->request_buffer.data, ubuf, length);
 -	if (rets)
 +	if (rets) {
 +		dev_dbg(&dev->pdev->dev, "failed to copy data from userland\n");
 +		rets = -EFAULT;
  		goto out;
 +	}
  
- 	cl->sm_state = 0;
- 	if (length == 4 &&
- 	    ((memcmp(mei_wd_state_independence_msg[0],
- 				 write_cb->request_buffer.data, 4) == 0) ||
- 	     (memcmp(mei_wd_state_independence_msg[1],
- 				 write_cb->request_buffer.data, 4) == 0) ||
- 	     (memcmp(mei_wd_state_independence_msg[2],
- 				 write_cb->request_buffer.data, 4) == 0)))
- 		cl->sm_state |= MEI_WD_STATE_INDEPENDENCE_MSG_SENT;
- 
  	if (cl == &dev->iamthif_cl) {
  		rets = mei_amthif_write(dev, write_cb);
  
* Unmerged path drivers/misc/mei/main.c
diff --git a/drivers/misc/mei/mei_dev.h b/drivers/misc/mei/mei_dev.h
index 108f96d6c245..94a516716d22 100644
--- a/drivers/misc/mei/mei_dev.h
+++ b/drivers/misc/mei/mei_dev.h
@@ -54,11 +54,6 @@ extern const uuid_le mei_amthif_guid;
  */
 extern const uuid_le mei_wd_guid;
 
-/*
- * Watchdog independence state message
- */
-extern const u8 mei_wd_state_independence_msg[3][4];
-
 /*
  * Number of Maximum MEI Clients
  */
@@ -208,7 +203,6 @@ struct mei_cl {
 	u8 timer_count;
 	enum mei_file_transaction_states reading_state;
 	enum mei_file_transaction_states writing_state;
-	int sm_state;
 	struct mei_cl_cb *read_cb;
 
 	/* MEI CL bus data */
diff --git a/drivers/misc/mei/wd.c b/drivers/misc/mei/wd.c
index e32d95c9690c..a9e357e75614 100644
--- a/drivers/misc/mei/wd.c
+++ b/drivers/misc/mei/wd.c
@@ -30,12 +30,6 @@
 static const u8 mei_start_wd_params[] = { 0x02, 0x12, 0x13, 0x10 };
 static const u8 mei_stop_wd_params[] = { 0x02, 0x02, 0x14, 0x10 };
 
-const u8 mei_wd_state_independence_msg[3][4] = {
-	{0x05, 0x02, 0x51, 0x10},
-	{0x05, 0x02, 0x52, 0x10},
-	{0x07, 0x02, 0x01, 0x10}
-};
-
 /*
  * AMT Watchdog Device
  */
