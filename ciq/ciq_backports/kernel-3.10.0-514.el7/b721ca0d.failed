thermal/powerclamp: remove cpu whitelist

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [thermal] powerclamp: remove cpu whitelist (Steve Best) [1273740]
Rebuild_FUZZ: 88.89%
commit-author Jacob Pan <jacob.jun.pan@linux.intel.com>
commit b721ca0d192754deccb89fb01c77e41e6fd91ad9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b721ca0d.failed

Powerclamp works by aligning idle time to achieve package level
idle states, aka cstates. As long as one of the package cstates
is available, synchronized idle injection is meaningful.

This patch replaces the CPU whitelist with CPU feature and
package cstate counter check such that we don't have to modify
this whitelist for every new CPU.

	Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Signed-off-by: Zhang Rui <rui.zhang@intel.com>
(cherry picked from commit b721ca0d192754deccb89fb01c77e41e6fd91ad9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/thermal/intel_powerclamp.c
diff --cc drivers/thermal/intel_powerclamp.c
index fcd5313e35bd,015ce2eb6eb7..000000000000
--- a/drivers/thermal/intel_powerclamp.c
+++ b/drivers/thermal/intel_powerclamp.c
@@@ -672,34 -666,11 +666,40 @@@ static struct thermal_cooling_device_op
  	.set_cur_state = powerclamp_set_cur_state,
  };
  
- /* runs on Nehalem and later */
  static const struct x86_cpu_id intel_powerclamp_ids[] __initconst = {
++<<<<<<< HEAD
 +	{ X86_VENDOR_INTEL, 6, 0x1a},
 +	{ X86_VENDOR_INTEL, 6, 0x1c},
 +	{ X86_VENDOR_INTEL, 6, 0x1e},
 +	{ X86_VENDOR_INTEL, 6, 0x1f},
 +	{ X86_VENDOR_INTEL, 6, 0x25},
 +	{ X86_VENDOR_INTEL, 6, 0x26},
 +	{ X86_VENDOR_INTEL, 6, 0x2a},
 +	{ X86_VENDOR_INTEL, 6, 0x2c},
 +	{ X86_VENDOR_INTEL, 6, 0x2d},
 +	{ X86_VENDOR_INTEL, 6, 0x2e},
 +	{ X86_VENDOR_INTEL, 6, 0x2f},
 +	{ X86_VENDOR_INTEL, 6, 0x37},
 +	{ X86_VENDOR_INTEL, 6, 0x3a},
 +	{ X86_VENDOR_INTEL, 6, 0x3c},
 +	{ X86_VENDOR_INTEL, 6, 0x3d},
 +	{ X86_VENDOR_INTEL, 6, 0x3e},
 +	{ X86_VENDOR_INTEL, 6, 0x3f},
 +	{ X86_VENDOR_INTEL, 6, 0x45},
 +	{ X86_VENDOR_INTEL, 6, 0x46},
 +	{ X86_VENDOR_INTEL, 6, 0x47},
 +	{ X86_VENDOR_INTEL, 6, 0x4d},
 +	{ X86_VENDOR_INTEL, 6, 0x4e},
 +	{ X86_VENDOR_INTEL, 6, 0x4f},
 +	{ X86_VENDOR_INTEL, 6, 0x56},
 +	{ X86_VENDOR_INTEL, 6, 0x57},
 +	{ X86_VENDOR_INTEL, 6, 0x5e},
++=======
+ 	{ X86_VENDOR_INTEL, X86_FAMILY_ANY, X86_MODEL_ANY, X86_FEATURE_MWAIT },
+ 	{ X86_VENDOR_INTEL, X86_FAMILY_ANY, X86_MODEL_ANY, X86_FEATURE_ARAT },
+ 	{ X86_VENDOR_INTEL, X86_FAMILY_ANY, X86_MODEL_ANY, X86_FEATURE_NONSTOP_TSC },
+ 	{ X86_VENDOR_INTEL, X86_FAMILY_ANY, X86_MODEL_ANY, X86_FEATURE_CONSTANT_TSC},
++>>>>>>> b721ca0d1927 (thermal/powerclamp: remove cpu whitelist)
  	{}
  };
  MODULE_DEVICE_TABLE(x86cpu, intel_powerclamp_ids);
* Unmerged path drivers/thermal/intel_powerclamp.c
