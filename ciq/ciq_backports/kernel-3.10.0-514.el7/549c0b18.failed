mmc: sdhci: Clear also HS400 1.2V capability if 1.2V is not supported

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit 549c0b18485d10bb419a81b24efe719df75089bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/549c0b18.failed

1.2V HS200 mode capability is cleared if there is not a voltage
regulator that supports 1.2V.  Do the same for 1.2V HS400 mode.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 549c0b18485d10bb419a81b24efe719df75089bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci.c
#	include/linux/mmc/host.h
diff --cc drivers/mmc/host/sdhci.c
index ed12fc286f94,5589563761f8..000000000000
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@@ -3052,11 -3115,19 +3052,27 @@@ int sdhci_add_host(struct sdhci_host *h
  		/* SD3.0: SDR104 is supported so (for eMMC) the caps2
  		 * field can be promoted to support HS200.
  		 */
++<<<<<<< HEAD
 +		mmc->caps2 |= MMC_CAP2_HS200;
 +	} else if (caps[1] & SDHCI_SUPPORT_SDR50)
 +		mmc->caps |= MMC_CAP_UHS_SDR50;
 +
 +	if (caps[1] & SDHCI_SUPPORT_DDR50)
++=======
+ 		if (!(host->quirks2 & SDHCI_QUIRK2_BROKEN_HS200))
+ 			mmc->caps2 |= MMC_CAP2_HS200;
+ 	} else if (caps[1] & SDHCI_SUPPORT_SDR50)
+ 		mmc->caps |= MMC_CAP_UHS_SDR50;
+ 
+ 	if ((mmc->caps2 & MMC_CAP2_HSX00_1_2V) &&
+ 	    (IS_ERR(mmc->supply.vqmmc) ||
+ 	     !regulator_is_supported_voltage(mmc->supply.vqmmc, 1100000,
+ 					     1300000)))
+ 		mmc->caps2 &= ~MMC_CAP2_HSX00_1_2V;
+ 
+ 	if ((caps[1] & SDHCI_SUPPORT_DDR50) &&
+ 		!(host->quirks2 & SDHCI_QUIRK2_BROKEN_DDR50))
++>>>>>>> 549c0b18485d (mmc: sdhci: Clear also HS400 1.2V capability if 1.2V is not supported)
  		mmc->caps |= MMC_CAP_UHS_DDR50;
  
  	/* Does the host need tuning for SDR50? */
diff --cc include/linux/mmc/host.h
index ad78fb0c2da7,9f322706f7cb..000000000000
--- a/include/linux/mmc/host.h
+++ b/include/linux/mmc/host.h
@@@ -286,6 -285,12 +286,15 @@@ struct mmc_host 
  #define MMC_CAP2_PACKED_CMD	(MMC_CAP2_PACKED_RD | \
  				 MMC_CAP2_PACKED_WR)
  #define MMC_CAP2_NO_PRESCAN_POWERUP (1 << 14)	/* Don't power up before scan */
++<<<<<<< HEAD
++=======
+ #define MMC_CAP2_HS400_1_8V	(1 << 15)	/* Can support HS400 1.8V */
+ #define MMC_CAP2_HS400_1_2V	(1 << 16)	/* Can support HS400 1.2V */
+ #define MMC_CAP2_HS400		(MMC_CAP2_HS400_1_8V | \
+ 				 MMC_CAP2_HS400_1_2V)
+ #define MMC_CAP2_HSX00_1_2V	(MMC_CAP2_HS200_1_2V_SDR | MMC_CAP2_HS400_1_2V)
+ #define MMC_CAP2_SDIO_IRQ_NOTHREAD (1 << 17)
++>>>>>>> 549c0b18485d (mmc: sdhci: Clear also HS400 1.2V capability if 1.2V is not supported)
  
  	mmc_pm_flag_t		pm_caps;	/* supported pm features */
  
* Unmerged path drivers/mmc/host/sdhci.c
* Unmerged path include/linux/mmc/host.h
