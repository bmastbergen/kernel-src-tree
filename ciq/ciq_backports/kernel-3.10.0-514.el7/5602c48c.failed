vxlan: change vxlan to use UDP socket GRO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Tom Herbert <tom@herbertland.com>
commit 5602c48cf87562c2f95b831d690631935e834295
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5602c48c.failed

Adapt vxlan_gro_receive, vxlan_gro_complete to take a socket argument.
Set these functions in tunnel_config.  Don't set udp_offloads any more.

	Signed-off-by: Tom Herbert <tom@herbertland.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5602c48cf87562c2f95b831d690631935e834295)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 9215c93ac7ca,9f3634064c92..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -580,9 -559,8 +580,14 @@@ static struct sk_buff **vxlan_gro_recei
  	struct vxlanhdr *vh, *vh2;
  	unsigned int hlen, off_vx;
  	int flush = 1;
++<<<<<<< HEAD
 +	struct vxlan_sock *vs = container_of(uoff, struct vxlan_sock,
 +					     udp_offloads);
 +	u32 flags;
++=======
+ 	struct vxlan_sock *vs = rcu_dereference_sk_user_data(sk);
+ 	__be32 flags;
++>>>>>>> 5602c48cf875 (vxlan: change vxlan to use UDP socket GRO)
  	struct gro_remcsum grc;
  
  	skb_gro_remcsum_init(&grc);
@@@ -2533,25 -2738,21 +2527,23 @@@ static struct vxlan_sock *vxlan_socket_
  
  	vs->sock = sock;
  	atomic_set(&vs->refcnt, 1);
 +	vs->rcv = rcv;
 +	vs->data = data;
  	vs->flags = (flags & VXLAN_F_RCV_FLAGS);
  
- 	/* Initialize the vxlan udp offloads structure */
- 	vs->udp_offloads.port = port;
- 	vs->udp_offloads.callbacks.gro_receive  = vxlan_gro_receive;
- 	vs->udp_offloads.callbacks.gro_complete = vxlan_gro_complete;
- 
  	spin_lock(&vn->sock_lock);
  	hlist_add_head_rcu(&vs->hlist, vs_head(net, port));
  	vxlan_notify_add_rx_port(vs);
  	spin_unlock(&vn->sock_lock);
  
  	/* Mark socket as an encapsulation socket. */
+ 	memset(&tunnel_cfg, 0, sizeof(tunnel_cfg));
  	tunnel_cfg.sk_user_data = vs;
  	tunnel_cfg.encap_type = 1;
 -	tunnel_cfg.encap_rcv = vxlan_rcv;
 +	tunnel_cfg.encap_rcv = vxlan_udp_encap_recv;
  	tunnel_cfg.encap_destroy = NULL;
+ 	tunnel_cfg.gro_receive = vxlan_gro_receive;
+ 	tunnel_cfg.gro_complete = vxlan_gro_complete;
  
  	setup_udp_tunnel_sock(net, sock, &tunnel_cfg);
  
* Unmerged path drivers/net/vxlan.c
diff --git a/include/net/vxlan.h b/include/net/vxlan.h
index b3828bd87f8a..0f57d9f06c1a 100644
--- a/include/net/vxlan.h
+++ b/include/net/vxlan.h
@@ -110,7 +110,6 @@ struct vxlan_sock {
 	struct rcu_head	  rcu;
 	struct hlist_head vni_list[VNI_HASH_SIZE];
 	atomic_t	  refcnt;
-	struct udp_offload udp_offloads;
 	u32		  flags;
 };
 
