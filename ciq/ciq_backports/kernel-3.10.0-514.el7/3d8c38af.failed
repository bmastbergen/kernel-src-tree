net/mlx5e: Add PTP Hardware Clock (PHC) support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Eran Ben Elisha <eranbe@mellanox.com>
commit 3d8c38af149309feb2541b995b3a45df170d6da3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3d8c38af.failed

Add a PHC support to the mlx5_en driver. Use reader/writer spinlocks to
protect the timecounter since every packet received needs to call
timecounter_cycle2time() when timestamping is enabled.  This can become
a performance bottleneck with RSS and multiple receive queues if normal
spinlocks are used.

The driver has been tested with both Documentation/ptp/testptp and the
linuxptp project (http://linuxptp.sourceforge.net/) on a Mellanox
ConnectX-4 card.

	Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
	Cc: Richard Cochran <richardcochran@gmail.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Acked-by: Richard Cochran <richardcochran@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3d8c38af149309feb2541b995b3a45df170d6da3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index c248aa35f3d5,9ea49a893323..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -32,6 -32,9 +32,12 @@@
  
  #include <linux/if_vlan.h>
  #include <linux/etherdevice.h>
++<<<<<<< HEAD
++=======
+ #include <linux/timecounter.h>
+ #include <linux/net_tstamp.h>
+ #include <linux/ptp_clock_kernel.h>
++>>>>>>> 3d8c38af1493 (net/mlx5e: Add PTP Hardware Clock (PHC) support)
  #include <linux/mlx5/driver.h>
  #include <linux/mlx5/qp.h>
  #include <linux/mlx5/cq.h>
@@@ -284,6 -287,19 +290,22 @@@ struct mlx5e_params 
  	u32 indirection_rqt[MLX5E_INDIR_RQT_SIZE];
  };
  
++<<<<<<< HEAD
++=======
+ struct mlx5e_tstamp {
+ 	rwlock_t                   lock;
+ 	struct cyclecounter        cycles;
+ 	struct timecounter         clock;
+ 	struct hwtstamp_config     hwtstamp_config;
+ 	u32                        nominal_c_mult;
+ 	unsigned long              overflow_period;
+ 	struct delayed_work        overflow_work;
+ 	struct mlx5_core_dev      *mdev;
+ 	struct ptp_clock          *ptp;
+ 	struct ptp_clock_info      ptp_info;
+ };
+ 
++>>>>>>> 3d8c38af1493 (net/mlx5e: Add PTP Hardware Clock (PHC) support)
  enum {
  	MLX5E_RQ_STATE_POST_WQES_ENABLE,
  };
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 2e022e900939,65624ac65b4c..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@@ -855,6 -855,35 +855,38 @@@ static int mlx5e_set_pauseparam(struct 
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static int mlx5e_get_ts_info(struct net_device *dev,
+ 			     struct ethtool_ts_info *info)
+ {
+ 	struct mlx5e_priv *priv = netdev_priv(dev);
+ 	int ret;
+ 
+ 	ret = ethtool_op_get_ts_info(dev, info);
+ 	if (ret)
+ 		return ret;
+ 
+ 	info->phc_index = priv->tstamp.ptp ?
+ 			  ptp_clock_index(priv->tstamp.ptp) : -1;
+ 
+ 	if (!MLX5_CAP_GEN(priv->mdev, device_frequency_khz))
+ 		return 0;
+ 
+ 	info->so_timestamping |= SOF_TIMESTAMPING_TX_HARDWARE |
+ 				 SOF_TIMESTAMPING_RX_HARDWARE |
+ 				 SOF_TIMESTAMPING_RAW_HARDWARE;
+ 
+ 	info->tx_types = (BIT(1) << HWTSTAMP_TX_OFF) |
+ 			 (BIT(1) << HWTSTAMP_TX_ON);
+ 
+ 	info->rx_filters = (BIT(1) << HWTSTAMP_FILTER_NONE) |
+ 			   (BIT(1) << HWTSTAMP_FILTER_ALL);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 3d8c38af1493 (net/mlx5e: Add PTP Hardware Clock (PHC) support)
  const struct ethtool_ops mlx5e_ethtool_ops = {
  	.get_drvinfo       = mlx5e_get_drvinfo,
  	.get_link          = ethtool_op_get_link,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/Kconfig b/drivers/net/ethernet/mellanox/mlx5/core/Kconfig
index 158c88c69ef9..c503ea05e742 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/Kconfig
+++ b/drivers/net/ethernet/mellanox/mlx5/core/Kconfig
@@ -13,6 +13,7 @@ config MLX5_CORE
 config MLX5_CORE_EN
 	bool "Mellanox Technologies ConnectX-4 Ethernet support"
 	depends on NETDEVICES && ETHERNET && PCI && MLX5_CORE
+	select PTP_1588_CLOCK
 	default n
 	---help---
 	  Ethernet support in Mellanox Technologies ConnectX-4 NIC.
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_clock.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
