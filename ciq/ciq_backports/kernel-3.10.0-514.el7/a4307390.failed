cxl: Make vPHB device node match adapter's

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Frederic Barrat <fbarrat@linux.vnet.ibm.com>
commit a430739009384ba2c4804f3a427334ff395433cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a4307390.failed

On bare-metal, when a device is attached to the cxl card, lsvpd shows
a location code such as (with cxlflash):
     # lsvpd -l sg22
     ...
     *YL U78CB.001.WZS0073-P1-C33-B0-T0-L0
which makes it hard to easily identify the cxl adapter owning the
flash device, since in this example C33 refers to a P8 processor.

lsvpd looks in the parent devices until it finds a location code, so the
device node for the vPHB ends up being used.

By reusing the device node of the adapter for the vPHB, lsvpd shows:
     # lsvpd -l sg16
     ...
     *YL U78C9.001.WZS09XA-P1-C7-B1-T0-L3
where C7 is the PCI slot of the cxl adapter.

On powerVM, the vPHB was already using the adapter device node, so
there's no change there.

Tested by cxlflash on bare-metal and powerVM.

	Signed-off-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
	Reviewed-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Acked-by: Ian Munsie <imunsie@au1.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit a430739009384ba2c4804f3a427334ff395433cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/cxl/vphb.c
diff --cc drivers/misc/cxl/vphb.c
index cbd4331fb45c,012b6aa9fb3e..000000000000
--- a/drivers/misc/cxl/vphb.c
+++ b/drivers/misc/cxl/vphb.c
@@@ -231,15 -208,22 +231,31 @@@ static struct pci_controller_ops cxl_pc
  
  int cxl_pci_vphb_add(struct cxl_afu *afu)
  {
++<<<<<<< HEAD
 +	struct pci_dev *phys_dev;
 +	struct pci_controller *phb, *phys_phb;
 +
 +	phys_dev = to_pci_dev(afu->adapter->dev.parent);
 +	phys_phb = pci_bus_to_host(phys_dev->bus);
++=======
+ 	struct pci_controller *phb;
+ 	struct device_node *vphb_dn;
+ 	struct device *parent;
+ 
+ 	/* The parent device is the adapter. Reuse the device node of
+ 	 * the adapter.
+ 	 * We don't seem to care what device node is used for the vPHB,
+ 	 * but tools such as lsvpd walk up the device parents looking
+ 	 * for a valid location code, so we might as well show devices
+ 	 * attached to the adapter as being located on that adapter.
+ 	 */
+ 	parent = afu->adapter->dev.parent;
+ 	vphb_dn = parent->of_node;
++>>>>>>> a43073900938 (cxl: Make vPHB device node match adapter's)
  
  	/* Alloc and setup PHB data structure */
 -	phb = pcibios_alloc_controller(vphb_dn);
 +	phb = pcibios_alloc_controller(phys_phb->dn);
 +
  	if (!phb)
  		return -ENODEV;
  
* Unmerged path drivers/misc/cxl/vphb.c
