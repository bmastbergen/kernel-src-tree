mmc: core: Convert to use kzalloc() for CXD register buffers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] core: Convert to use kzalloc() for CXD register buffers (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 95.65%
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit 22b787007faed44456414f7ed88331e39f0df387
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/22b78700.failed

While allocating buffers for CXD data, let's use kzalloc() to make sure
those are zeroed.

	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 22b787007faed44456414f7ed88331e39f0df387)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/mmc_ops.c
diff --cc drivers/mmc/core/mmc_ops.c
index 7d8324d583f4,23aa3a380f27..000000000000
--- a/drivers/mmc/core/mmc_ops.c
+++ b/drivers/mmc/core/mmc_ops.c
@@@ -359,12 -359,35 +359,40 @@@ err
  	return ret;
  }
  
 -int mmc_get_ext_csd(struct mmc_card *card, u8 **new_ext_csd)
 +int mmc_send_ext_csd(struct mmc_card *card, u8 *ext_csd)
  {
++<<<<<<< HEAD
 +	return mmc_send_cxd_data(card, card->host, MMC_SEND_EXT_CSD,
 +			ext_csd, 512);
++=======
+ 	int err;
+ 	u8 *ext_csd;
+ 
+ 	if (!card || !new_ext_csd)
+ 		return -EINVAL;
+ 
+ 	if (!mmc_can_ext_csd(card))
+ 		return -EOPNOTSUPP;
+ 
+ 	/*
+ 	 * As the ext_csd is so large and mostly unused, we don't store the
+ 	 * raw block in mmc_card.
+ 	 */
+ 	ext_csd = kzalloc(512, GFP_KERNEL);
+ 	if (!ext_csd)
+ 		return -ENOMEM;
+ 
+ 	err = mmc_send_cxd_data(card, card->host, MMC_SEND_EXT_CSD, ext_csd,
+ 				512);
+ 	if (err)
+ 		kfree(ext_csd);
+ 	else
+ 		*new_ext_csd = ext_csd;
+ 
+ 	return err;
++>>>>>>> 22b787007fae (mmc: core: Convert to use kzalloc() for CXD register buffers)
  }
 -EXPORT_SYMBOL_GPL(mmc_get_ext_csd);
 +EXPORT_SYMBOL_GPL(mmc_send_ext_csd);
  
  int mmc_spi_read_ocr(struct mmc_host *host, int highcap, u32 *ocrp)
  {
* Unmerged path drivers/mmc/core/mmc_ops.c
