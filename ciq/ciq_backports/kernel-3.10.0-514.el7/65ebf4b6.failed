powerpc/powernv: Move controller ops from ppc_md to controller_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] powernv: Move controller ops from ppc_md to controller_ops (Gustavo Duarte) [1275657]
Rebuild_FUZZ: 93.55%
commit-author Daniel Axtens <dja@axtens.net>
commit 65ebf4b6370e8eabbf31076de022e49926dd4573
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/65ebf4b6.failed

This moves the PowerNV platform to use the pci_controller_ops
structure rather than ppc_md for PCI controller operations.

	Signed-off-by: Daniel Axtens <dja@axtens.net>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 65ebf4b6370e8eabbf31076de022e49926dd4573)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/pci-ioda.c
#	arch/powerpc/platforms/powernv/pci.c
diff --cc arch/powerpc/platforms/powernv/pci-ioda.c
index fe5c4ee44e89,5e917753c672..000000000000
--- a/arch/powerpc/platforms/powernv/pci-ioda.c
+++ b/arch/powerpc/platforms/powernv/pci-ioda.c
@@@ -3045,12 -2103,9 +3046,18 @@@ void __init pnv_pci_init_ioda_phb(struc
  	 * the child P2P bridges) can form individual PE.
  	 */
  	ppc_md.pcibios_fixup = pnv_pci_ioda_fixup;
++<<<<<<< HEAD
 +	ppc_md.pcibios_enable_device_hook = pnv_pci_enable_device_hook;
 +	ppc_md.pcibios_window_alignment = pnv_pci_window_alignment;
 +	ppc_md.pcibios_reset_secondary_bus = pnv_pci_reset_secondary_bus;
 +#ifdef CONFIG_PCI_IOV
 +	ppc_md.pcibios_fixup_sriov = pnv_pci_ioda_fixup_iov_resources;
 +#endif /* CONFIG_PCI_IOV */
++=======
+ 	pnv_pci_controller_ops.enable_device_hook = pnv_pci_enable_device_hook;
+ 	pnv_pci_controller_ops.window_alignment = pnv_pci_window_alignment;
+ 	pnv_pci_controller_ops.reset_secondary_bus = pnv_pci_reset_secondary_bus;
++>>>>>>> 65ebf4b6370e (powerpc/powernv: Move controller ops from ppc_md to controller_ops)
  	pci_add_flags(PCI_REASSIGN_ALL_RSRC);
  
  	/* Reset IODA tables to a clean state */
diff --cc arch/powerpc/platforms/powernv/pci.c
index 3a74d719e520,fa96aa8aa1e2..000000000000
--- a/arch/powerpc/platforms/powernv/pci.c
+++ b/arch/powerpc/platforms/powernv/pci.c
@@@ -873,8 -744,11 +873,16 @@@ void __init pnv_pci_init(void
  	pci_devs_phb_init();
  
  	/* Configure IOMMU DMA hooks */
++<<<<<<< HEAD
 +	ppc_md.pci_dma_dev_setup = pnv_pci_dma_dev_setup;
 +	ppc_md.pci_probe_mode = pnv_pci_probe_mode;
++=======
+ 	ppc_md.tce_build = pnv_tce_build_vm;
+ 	ppc_md.tce_free = pnv_tce_free_vm;
+ 	ppc_md.tce_build_rm = pnv_tce_build_rm;
+ 	ppc_md.tce_free_rm = pnv_tce_free_rm;
+ 	ppc_md.tce_get = pnv_tce_get;
++>>>>>>> 65ebf4b6370e (powerpc/powernv: Move controller ops from ppc_md to controller_ops)
  	set_pci_dma_ops(&dma_iommu_ops);
  
  	/* Configure MSIs */
* Unmerged path arch/powerpc/platforms/powernv/pci-ioda.c
diff --git a/arch/powerpc/platforms/powernv/pci-p5ioc2.c b/arch/powerpc/platforms/powernv/pci-p5ioc2.c
index 419fa2c9fb78..2396f55e6353 100644
--- a/arch/powerpc/platforms/powernv/pci-p5ioc2.c
+++ b/arch/powerpc/platforms/powernv/pci-p5ioc2.c
@@ -154,6 +154,7 @@ static void __init pnv_pci_init_p5ioc2_phb(struct device_node *np, u64 hub_id,
 	phb->hose->first_busno = 0;
 	phb->hose->last_busno = 0xff;
 	phb->hose->private_data = phb;
+	phb->hose->controller_ops = pnv_pci_controller_ops;
 	phb->hub_id = hub_id;
 	phb->opal_id = phb_id;
 	phb->type = PNV_PHB_P5IOC2;
* Unmerged path arch/powerpc/platforms/powernv/pci.c
diff --git a/arch/powerpc/platforms/powernv/powernv.h b/arch/powerpc/platforms/powernv/powernv.h
index 604c48e7879a..826d2c9bea56 100644
--- a/arch/powerpc/platforms/powernv/powernv.h
+++ b/arch/powerpc/platforms/powernv/powernv.h
@@ -29,6 +29,8 @@ static inline u64 pnv_pci_dma_get_required_mask(struct pci_dev *pdev)
 }
 #endif
 
+extern struct pci_controller_ops pnv_pci_controller_ops;
+
 extern u32 pnv_get_supported_cpuidle_states(void);
 
 extern void pnv_lpc_init(void);
