nfsd/sunrpc: abstract out svc_set_num_threads to sv_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jeff Layton <jlayton@primarydata.com>
commit 598e2359090d393b01a8e10386dc3056ccfa47ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/598e2359.failed

Add an operation that will do setup of the service. In the case of a
classic thread-based service that means starting up threads. In the case
of a workqueue-based service, the setup will do something different.

	Signed-off-by: Shirley Ma <shirley.ma@oracle.com>
	Acked-by: Jeff Layton <jlayton@primarydata.com>
	Tested-by: Shirley Ma <shirliey.ma@oracle.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 598e2359090d393b01a8e10386dc3056ccfa47ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfssvc.c
#	include/linux/sunrpc/svc.h
diff --cc fs/nfsd/nfssvc.c
index 5ba2659eb9e1,ad4e2377dd63..000000000000
--- a/fs/nfsd/nfssvc.c
+++ b/fs/nfsd/nfssvc.c
@@@ -391,6 -391,14 +391,17 @@@ static int nfsd_get_default_max_blksize
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static struct svc_serv_ops nfsd_thread_sv_ops = {
+ 	.svo_shutdown		= nfsd_last_thread,
+ 	.svo_function		= nfsd,
+ 	.svo_enqueue_xprt	= svc_xprt_do_enqueue,
+ 	.svo_setup		= svc_set_num_threads,
+ 	.svo_module		= THIS_MODULE,
+ };
+ 
++>>>>>>> 598e2359090d (nfsd/sunrpc: abstract out svc_set_num_threads to sv_ops)
  int nfsd_create_serv(struct net *net)
  {
  	int error;
diff --cc include/linux/sunrpc/svc.h
index 960832d76aed,fd5bb9922545..000000000000
--- a/include/linux/sunrpc/svc.h
+++ b/include/linux/sunrpc/svc.h
@@@ -55,6 -49,25 +55,28 @@@ struct svc_pool 
  	unsigned long		sp_flags;
  } ____cacheline_aligned_in_smp;
  
++<<<<<<< HEAD
++=======
+ struct svc_serv;
+ 
+ struct svc_serv_ops {
+ 	/* Callback to use when last thread exits. */
+ 	void		(*svo_shutdown)(struct svc_serv *, struct net *);
+ 
+ 	/* function for service threads to run */
+ 	int		(*svo_function)(void *);
+ 
+ 	/* queue up a transport for servicing */
+ 	void		(*svo_enqueue_xprt)(struct svc_xprt *);
+ 
+ 	/* set up thread (or whatever) execution context */
+ 	int		(*svo_setup)(struct svc_serv *, struct svc_pool *, int);
+ 
+ 	/* optional module to count when adding threads (pooled svcs only) */
+ 	struct module	*svo_module;
+ };
+ 
++>>>>>>> 598e2359090d (nfsd/sunrpc: abstract out svc_set_num_threads to sv_ops)
  /*
   * RPC service.
   *
* Unmerged path fs/nfsd/nfssvc.c
* Unmerged path include/linux/sunrpc/svc.h
