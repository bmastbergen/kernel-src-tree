Btrfs: Simplify scrub_setup_recheck_block()'s argument

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Zhao Lei <zhaolei@cn.fujitsu.com>
commit be50a8ddaae1d07135fd7e1c7017c1611075a560
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/be50a8dd.failed

scrub_setup_recheck_block() have many arguments but most of them
can be get from one of them, we can remove them to make code clean.
Some other cleanup for that function also included in this patch.

	Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>
	Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit be50a8ddaae1d07135fd7e1c7017c1611075a560)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/scrub.c
diff --cc fs/btrfs/scrub.c
index 37f347301744,c3a98931980f..000000000000
--- a/fs/btrfs/scrub.c
+++ b/fs/btrfs/scrub.c
@@@ -1303,15 -1297,15 +1299,16 @@@ static inline void scrub_stripe_index_a
  	}
  }
  
- static int scrub_setup_recheck_block(struct scrub_ctx *sctx,
- 				     struct btrfs_fs_info *fs_info,
- 				     struct scrub_block *original_sblock,
- 				     u64 length, u64 logical,
+ static int scrub_setup_recheck_block(struct scrub_block *original_sblock,
  				     struct scrub_block *sblocks_for_recheck)
  {
+ 	struct scrub_ctx *sctx = original_sblock->sctx;
+ 	struct btrfs_fs_info *fs_info = sctx->dev_root->fs_info;
+ 	u64 length = original_sblock->page_count * PAGE_SIZE;
+ 	u64 logical = original_sblock->pagev[0]->logical;
  	struct scrub_recover *recover;
  	struct btrfs_bio *bbio;
 +	u64 *raid_map;
  	u64 sublen;
  	u64 mapped_length;
  	u64 stripe_offset;
@@@ -1360,7 -1349,7 +1356,11 @@@
  
  		BUG_ON(page_index >= SCRUB_PAGES_PER_RD_BIO);
  
++<<<<<<< HEAD
 +		nmirrors = scrub_nr_raid_mirrors(bbio, raid_map);
++=======
+ 		nmirrors = min(scrub_nr_raid_mirrors(bbio), BTRFS_MAX_MIRRORS);
++>>>>>>> be50a8ddaae1 (Btrfs: Simplify scrub_setup_recheck_block()'s argument)
  		for (mirror_index = 0; mirror_index < nmirrors;
  		     mirror_index++) {
  			struct scrub_block *sblock;
* Unmerged path fs/btrfs/scrub.c
