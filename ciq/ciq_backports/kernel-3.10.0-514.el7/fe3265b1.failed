dm: don't save and restore bi_private

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit fe3265b180d6282648f03bc6ac3958c733df01c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fe3265b1.failed

Device mapper used the field bi_private to point to dm_target_io. However,
since kernel 3.15, the bi_private field is unused, and so the targets do
not need to save and restore this field.

This patch removes code that saves and restores bi_private from dm-cache,
dm-snapshot and dm-verity.

	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit fe3265b180d6282648f03bc6ac3958c733df01c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-verity.c
diff --cc drivers/md/dm-verity.c
index b15d88861f1c,9e8891507c1c..000000000000
--- a/drivers/md/dm-verity.c
+++ b/drivers/md/dm-verity.c
@@@ -469,12 -452,9 +468,16 @@@ static void verity_finish_io(struct dm_
  	struct bio *bio = dm_bio_from_per_bio_data(io, v->ti->per_bio_data_size);
  
  	bio->bi_end_io = io->orig_bi_end_io;
++<<<<<<< HEAD
 +	bio->bi_private = io->orig_bi_private;
++=======
+ 	bio->bi_error = error;
++>>>>>>> fe3265b180d6 (dm: don't save and restore bi_private)
  
 -	bio_endio(bio);
 +	if (io->io_vec != io->io_vec_inline)
 +		mempool_free(io->io_vec, v->vec_mempool);
 +
 +	bio_endio(bio, error);
  }
  
  static void verity_work(struct work_struct *w)
@@@ -584,9 -564,8 +587,14 @@@ static int verity_map(struct dm_target 
  	io = dm_per_bio_data(bio, ti->per_bio_data_size);
  	io->v = v;
  	io->orig_bi_end_io = bio->bi_end_io;
++<<<<<<< HEAD
 +	io->orig_bi_private = bio->bi_private;
 +	io->block = bio->bi_sector >> (v->data_dev_block_bits - SECTOR_SHIFT);
 +	io->n_blocks = bio->bi_size >> v->data_dev_block_bits;
++=======
+ 	io->block = bio->bi_iter.bi_sector >> (v->data_dev_block_bits - SECTOR_SHIFT);
+ 	io->n_blocks = bio->bi_iter.bi_size >> v->data_dev_block_bits;
++>>>>>>> fe3265b180d6 (dm: don't save and restore bi_private)
  
  	bio->bi_end_io = verity_end_io;
  	bio->bi_private = io;
diff --git a/drivers/md/dm-cache-target.c b/drivers/md/dm-cache-target.c
index fac969af4bbe..6a4fcc67d6b0 100644
--- a/drivers/md/dm-cache-target.c
+++ b/drivers/md/dm-cache-target.c
@@ -118,14 +118,12 @@ static void iot_io_end(struct io_tracker *iot, sector_t len)
  */
 struct dm_hook_info {
 	bio_end_io_t *bi_end_io;
-	void *bi_private;
 };
 
 static void dm_hook_bio(struct dm_hook_info *h, struct bio *bio,
 			bio_end_io_t *bi_end_io, void *bi_private)
 {
 	h->bi_end_io = bio->bi_end_io;
-	h->bi_private = bio->bi_private;
 
 	bio->bi_end_io = bi_end_io;
 	bio->bi_private = bi_private;
@@ -134,7 +132,6 @@ static void dm_hook_bio(struct dm_hook_info *h, struct bio *bio,
 static void dm_unhook_bio(struct dm_hook_info *h, struct bio *bio)
 {
 	bio->bi_end_io = h->bi_end_io;
-	bio->bi_private = h->bi_private;
 }
 
 /*----------------------------------------------------------------*/
diff --git a/drivers/md/dm-snap.c b/drivers/md/dm-snap.c
index a79bb6cad01f..2b720a11ab4f 100644
--- a/drivers/md/dm-snap.c
+++ b/drivers/md/dm-snap.c
@@ -207,7 +207,6 @@ struct dm_snap_pending_exception {
 	 */
 	struct bio *full_bio;
 	bio_end_io_t *full_bio_end_io;
-	void *full_bio_private;
 };
 
 /*
@@ -1492,10 +1491,8 @@ out:
 	snapshot_bios = bio_list_get(&pe->snapshot_bios);
 	origin_bios = bio_list_get(&pe->origin_bios);
 	full_bio = pe->full_bio;
-	if (full_bio) {
+	if (full_bio)
 		full_bio->bi_end_io = pe->full_bio_end_io;
-		full_bio->bi_private = pe->full_bio_private;
-	}
 	increment_pending_exceptions_done_count();
 
 	up_write(&s->lock);
@@ -1612,7 +1609,6 @@ static void start_full_bio(struct dm_snap_pending_exception *pe,
 
 	pe->full_bio = bio;
 	pe->full_bio_end_io = bio->bi_end_io;
-	pe->full_bio_private = bio->bi_private;
 
 	callback_data = dm_kcopyd_prepare_callback(s->kcopyd_client,
 						   copy_callback, pe);
* Unmerged path drivers/md/dm-verity.c
