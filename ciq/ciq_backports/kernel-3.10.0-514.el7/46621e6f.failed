crypto: qat - fix CTX_ENABLES bits shift direction issue

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [crypto] qat - fix CTX_ENABLES bits shift direction issue (Neil Horman) [1274179]
Rebuild_FUZZ: 92.31%
commit-author Pingchao Yang <pingchao.yang@intel.com>
commit 46621e6f84908bb9df494d5fc2bcd145041810d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/46621e6f.failed

AE CTX bits should be 8-15 in CTX_ENABLES, so the mask
value 0xff should be left shifted 0x8.

	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Yang Pingchao <pingchao.yang@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 46621e6f84908bb9df494d5fc2bcd145041810d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/qat_hal.c
diff --cc drivers/crypto/qat/qat_common/qat_hal.c
index 06fbf8f99c01,81bd1fed4eee..000000000000
--- a/drivers/crypto/qat/qat_common/qat_hal.c
+++ b/drivers/crypto/qat/qat_common/qat_hal.c
@@@ -413,6 -411,20 +413,23 @@@ static int qat_hal_check_ae_alive(struc
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ int qat_hal_check_ae_active(struct icp_qat_fw_loader_handle *handle,
+ 			    unsigned int ae)
+ {
+ 	unsigned int enable = 0, active = 0;
+ 
+ 	qat_hal_rd_ae_csr(handle, ae, CTX_ENABLES, &enable);
+ 	qat_hal_rd_ae_csr(handle, ae, ACTIVE_CTX_STATUS, &active);
+ 	if ((enable & (0xff << CE_ENABLE_BITPOS)) ||
+ 	    (active & (1 << ACS_ABO_BITPOS)))
+ 		return 1;
+ 	else
+ 		return 0;
+ }
+ 
++>>>>>>> 46621e6f8490 (crypto: qat - fix CTX_ENABLES bits shift direction issue)
  static void qat_hal_reset_timestamp(struct icp_qat_fw_loader_handle *handle)
  {
  	unsigned int misc_ctl;
* Unmerged path drivers/crypto/qat/qat_common/qat_hal.c
