iommu/amd: Make use of domain_alloc and domain_free

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] amd: Make use of domain_alloc and domain_free (Myron Stowe) [1299039]
Rebuild_FUZZ: 93.75%
commit-author Joerg Roedel <jroedel@suse.de>
commit 3f4b87b959eab362b89fce6ceb9d1badd102e5ea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3f4b87b9.failed

Implement the new iommu-ops function pointers and remove the
obsolete domain_init and domain_destroy functions.

	Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 3f4b87b959eab362b89fce6ceb9d1badd102e5ea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd_iommu.c
diff --cc drivers/iommu/amd_iommu.c
index b1bc607bb0c0,e8c412dcac21..000000000000
--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@@ -3409,17 -3414,20 +3415,24 @@@ static int amd_iommu_domain_has_cap(str
  {
  	switch (cap) {
  	case IOMMU_CAP_CACHE_COHERENCY:
 -		return true;
 +		return 1;
  	case IOMMU_CAP_INTR_REMAP:
 -		return (irq_remapping_enabled == 1);
 -	case IOMMU_CAP_NOEXEC:
 -		return false;
 +		return irq_remapping_enabled;
  	}
  
 -	return false;
 +	return 0;
  }
  
++<<<<<<< HEAD
 +static struct iommu_ops amd_iommu_ops = {
 +	.domain_init = amd_iommu_domain_init,
 +	.domain_destroy = amd_iommu_domain_destroy,
++=======
+ static const struct iommu_ops amd_iommu_ops = {
+ 	.capable = amd_iommu_capable,
+ 	.domain_alloc = amd_iommu_domain_alloc,
+ 	.domain_free  = amd_iommu_domain_free,
++>>>>>>> 3f4b87b959ea (iommu/amd: Make use of domain_alloc and domain_free)
  	.attach_dev = amd_iommu_attach_device,
  	.detach_dev = amd_iommu_detach_device,
  	.map = amd_iommu_map,
* Unmerged path drivers/iommu/amd_iommu.c
diff --git a/drivers/iommu/amd_iommu_types.h b/drivers/iommu/amd_iommu_types.h
index 33725d60dfff..af4b25c869cf 100644
--- a/drivers/iommu/amd_iommu_types.h
+++ b/drivers/iommu/amd_iommu_types.h
@@ -399,6 +399,8 @@ struct iommu_domain;
 struct protection_domain {
 	struct list_head list;  /* for list of all protection domains */
 	struct list_head dev_list; /* List of all devices in this domain */
+	struct iommu_domain domain; /* generic domain handle used by
+				       iommu core code */
 	spinlock_t lock;	/* mostly used to lock the page table*/
 	struct mutex api_lock;	/* protect page tables in the iommu-api path */
 	u16 id;			/* the domain id written to the device table */
@@ -410,10 +412,7 @@ struct protection_domain {
 	bool updated;		/* complete domain flush required */
 	unsigned dev_cnt;	/* devices assigned to this domain */
 	unsigned dev_iommu[MAX_IOMMUS]; /* per-IOMMU reference count */
-	void *priv;		/* private data */
-	struct iommu_domain *iommu_domain; /* Pointer to generic
-					      domain structure */
-
+	void *priv;             /* private data */
 };
 
 /*
