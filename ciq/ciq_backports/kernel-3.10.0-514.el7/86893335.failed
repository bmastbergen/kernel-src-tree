sched: Fix hrtick_start() on UP

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Wanpeng Li <wanpeng.li@linux.intel.com>
commit 868933359a3bdda25b562e9d41bce7071edc1b08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/86893335.failed

The commit 177ef2a6315e ("sched/deadline: Fix a precision problem in
the microseconds range") forgot to change the UP version of
hrtick_start(), do so now.

	Signed-off-by: Wanpeng Li <wanpeng.li@linux.intel.com>
Fixes: 177ef2a6315e ("sched/deadline: Fix a precision problem in the microseconds range")
[ Fixed the changelog. ]
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Juri Lelli <juri.lelli@arm.com>
	Cc: Kirill Tkhai <ktkhai@parallels.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: http://lkml.kernel.org/r/1416962647-76792-7-git-send-email-wanpeng.li@linux.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 868933359a3bdda25b562e9d41bce7071edc1b08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/core.c
diff --cc kernel/sched/core.c
index f8654b1100de,5091fd4feed8..000000000000
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@@ -478,8 -492,13 +478,18 @@@ static __init void init_hrtick(void
   */
  void hrtick_start(struct rq *rq, u64 delay)
  {
++<<<<<<< HEAD
 +	hrtimer_start(&rq->hrtick_timer, ns_to_ktime(delay),
 +		      HRTIMER_MODE_REL_PINNED);
++=======
+ 	/*
+ 	 * Don't schedule slices shorter than 10000ns, that just
+ 	 * doesn't make sense. Rely on vruntime for fairness.
+ 	 */
+ 	delay = max_t(u64, delay, 10000LL);
+ 	__hrtimer_start_range_ns(&rq->hrtick_timer, ns_to_ktime(delay), 0,
+ 			HRTIMER_MODE_REL_PINNED, 0);
++>>>>>>> 868933359a3b (sched: Fix hrtick_start() on UP)
  }
  
  static inline void init_hrtick(void)
* Unmerged path kernel/sched/core.c
