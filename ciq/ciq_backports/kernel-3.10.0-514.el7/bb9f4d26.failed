mei: me: d0i3: add flag to indicate D0i3 support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit bb9f4d26dda7d2a875cadc0f7eedee3d65d3d1f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bb9f4d26.failed

Detect d0i3 low power state during hw configuration,
the value is set in HFS_1 pci config reigister.

	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit bb9f4d26dda7d2a875cadc0f7eedee3d65d3d1f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/hw-me.c
#	drivers/misc/mei/hw-me.h
diff --cc drivers/misc/mei/hw-me.c
index 1707fa5ea02a,17d6894b0fd2..000000000000
--- a/drivers/misc/mei/hw-me.c
+++ b/drivers/misc/mei/hw-me.c
@@@ -109,9 -176,12 +109,16 @@@ static inline void mei_hcsr_set(struct 
   */
  static void mei_me_hw_config(struct mei_device *dev)
  {
+ 	struct pci_dev *pdev = to_pci_dev(dev->dev);
  	struct mei_me_hw *hw = to_me_hw(dev);
++<<<<<<< HEAD
 +	u32 hcsr = mei_hcsr_read(to_me_hw(dev));
++=======
+ 	u32 hcsr, reg;
+ 
++>>>>>>> bb9f4d26dda7 (mei: me: d0i3: add flag to indicate D0i3 support)
  	/* Doesn't change in runtime */
+ 	hcsr = mei_hcsr_read(dev);
  	dev->hbuf_depth = (hcsr & H_CBD) >> 24;
  
  	hw->pg_state = MEI_PG_OFF;
diff --cc drivers/misc/mei/hw-me.h
index 98ceac2cee68,cf64847a35b9..000000000000
--- a/drivers/misc/mei/hw-me.h
+++ b/drivers/misc/mei/hw-me.h
@@@ -24,14 -26,39 +24,46 @@@
  #include "mei_dev.h"
  #include "client.h"
  
++<<<<<<< HEAD
++=======
+ /*
+  * mei_cfg - mei device configuration
+  *
+  * @fw_status: FW status
+  * @quirk_probe: device exclusion quirk
+  */
+ struct mei_cfg {
+ 	const struct mei_fw_status fw_status;
+ 	bool (*quirk_probe)(struct pci_dev *pdev);
+ };
+ 
+ 
+ #define MEI_PCI_DEVICE(dev, cfg) \
+ 	.vendor = PCI_VENDOR_ID_INTEL, .device = (dev), \
+ 	.subvendor = PCI_ANY_ID, .subdevice = PCI_ANY_ID, \
+ 	.driver_data = (kernel_ulong_t)&(cfg)
+ 
+ 
+ #define MEI_ME_RPM_TIMEOUT    500 /* ms */
+ 
+ /**
+  * struct mei_me_hw - me hw specific data
+  *
+  * @cfg: per device generation config and ops
+  * @mem_addr: io memory address
+  * @pg_state: power gating state
+  * @d0i3_supported: di03 support
+  */
++>>>>>>> bb9f4d26dda7 (mei: me: d0i3: add flag to indicate D0i3 support)
  struct mei_me_hw {
 -	const struct mei_cfg *cfg;
  	void __iomem *mem_addr;
 +	/*
 +	 * hw states of host and fw(ME)
 +	 */
 +	u32 host_hw_state;
 +	u32 me_hw_state;
  	enum mei_pg_state pg_state;
+ 	bool d0i3_supported;
  };
  
  #define to_me_hw(dev) (struct mei_me_hw *)((dev)->hw)
diff --git a/drivers/misc/mei/hw-me-regs.h b/drivers/misc/mei/hw-me-regs.h
index 2adc2ee3edc5..9f9a1cf3e3a9 100644
--- a/drivers/misc/mei/hw-me-regs.h
+++ b/drivers/misc/mei/hw-me-regs.h
@@ -119,6 +119,7 @@
 
 /* Host Firmware Status Registers in PCI Config Space */
 #define PCI_CFG_HFS_1         0x40
+#  define PCI_CFG_HFS_1_D0I3_MSK     0x80000000
 #define PCI_CFG_HFS_2         0x48
 
 /*
* Unmerged path drivers/misc/mei/hw-me.c
* Unmerged path drivers/misc/mei/hw-me.h
