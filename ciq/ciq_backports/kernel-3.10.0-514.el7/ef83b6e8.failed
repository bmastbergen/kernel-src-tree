ext2, ext4: warn when mounting with dax enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit ef83b6e8f40bb24b92ad73b5889732346e54a793
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ef83b6e8.failed

Similar to XFS warn when mounting DAX while it is still considered under
development.  Also, aspects of the DAX implementation, for example
synchronization against multiple faults and faults causing block
allocation, depend on the correct implementation in the filesystem.  The
maturity of a given DAX implementation is filesystem specific.

	Cc: <stable@vger.kernel.org>
	Cc: "Theodore Ts'o" <tytso@mit.edu>
	Cc: Matthew Wilcox <willy@linux.intel.com>
	Cc: linux-ext4@vger.kernel.org
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Reported-by: Dave Chinner <david@fromorbit.com>
	Acked-by: Jan Kara <jack@suse.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit ef83b6e8f40bb24b92ad73b5889732346e54a793)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext2/super.c
#	fs/ext4/super.c
diff --cc fs/ext2/super.c
index a47e9381bae0,748d35afc902..000000000000
--- a/fs/ext2/super.c
+++ b/fs/ext2/super.c
@@@ -550,10 -564,16 +550,21 @@@ static int parse_options(char *options
  			break;
  #endif
  		case Opt_xip:
++<<<<<<< HEAD
 +#ifdef CONFIG_EXT2_FS_XIP
 +			set_opt (sbi->s_mount_opt, XIP);
++=======
+ 			ext2_msg(sb, KERN_INFO, "use dax instead of xip");
+ 			set_opt(sbi->s_mount_opt, XIP);
+ 			/* Fall through */
+ 		case Opt_dax:
+ #ifdef CONFIG_FS_DAX
+ 			ext2_msg(sb, KERN_WARNING,
+ 		"DAX enabled. Warning: EXPERIMENTAL, use at your own risk");
+ 			set_opt(sbi->s_mount_opt, DAX);
++>>>>>>> ef83b6e8f40b (ext2, ext4: warn when mounting with dax enabled)
  #else
 -			ext2_msg(sb, KERN_INFO, "dax option not supported");
 +			ext2_msg(sb, KERN_INFO, "xip option not supported");
  #endif
  			break;
  
diff --cc fs/ext4/super.c
index 31618f12ab5f,c9ab67da6e5a..000000000000
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@@ -1642,6 -1664,15 +1642,18 @@@ static int handle_mount_opt(struct supe
  		}
  		sbi->s_jquota_fmt = m->mount_opt;
  #endif
++<<<<<<< HEAD
++=======
+ 	} else if (token == Opt_dax) {
+ #ifdef CONFIG_FS_DAX
+ 		ext4_msg(sb, KERN_WARNING,
+ 		"DAX enabled. Warning: EXPERIMENTAL, use at your own risk");
+ 			sbi->s_mount_opt |= m->mount_opt;
+ #else
+ 		ext4_msg(sb, KERN_INFO, "dax option not supported");
+ 		return -1;
+ #endif
++>>>>>>> ef83b6e8f40b (ext2, ext4: warn when mounting with dax enabled)
  	} else {
  		if (!args->from)
  			arg = 1;
* Unmerged path fs/ext2/super.c
* Unmerged path fs/ext4/super.c
