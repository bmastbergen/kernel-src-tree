procfs: fix error handling of proc_register()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Debabrata Banerjee <dbanerje@akamai.com>
commit b208d54b75399b276b05f9e70cce8d3a59a42547
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b208d54b.failed

proc_register() error paths are leaking inodes and directory refcounts.

	Signed-off-by: Debabrata Banerjee <dbanerje@akamai.com>
	Cc: Alexander Viro <viro@zeniv.linux.org.uk>
	Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit b208d54b75399b276b05f9e70cce8d3a59a42547)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/generic.c
diff --cc fs/proc/generic.c
index a2596afffae6,be39c6feb3e5..000000000000
--- a/fs/proc/generic.c
+++ b/fs/proc/generic.c
@@@ -349,17 -374,16 +350,29 @@@ static int proc_register(struct proc_di
  	}
  
  	spin_lock(&proc_subdir_lock);
 +
 +	for (tmp = dir->subdir; tmp; tmp = tmp->next)
 +		if (strcmp(tmp->name, dp->name) == 0) {
 +			WARN(1, "proc_dir_entry '%s/%s' already registered\n",
 +				dir->name, dp->name);
 +			break;
 +		}
 +
 +	dp->next = dir->subdir;
  	dp->parent = dir;
++<<<<<<< HEAD
 +	dir->subdir = dp;
++=======
+ 	if (pde_subdir_insert(dir, dp) == false) {
+ 		WARN(1, "proc_dir_entry '%s/%s' already registered\n",
+ 		     dir->name, dp->name);
+ 		spin_unlock(&proc_subdir_lock);
+ 		if (S_ISDIR(dp->mode))
+ 			dir->nlink--;
+ 		proc_free_inum(dp->low_ino);
+ 		return -EEXIST;
+ 	}
++>>>>>>> b208d54b7539 (procfs: fix error handling of proc_register())
  	spin_unlock(&proc_subdir_lock);
  
  	return 0;
* Unmerged path fs/proc/generic.c
