x86/mce: Reenable CMCI banks when swiching back to interrupt mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] mce: Reenable CMCI banks when swiching back to interrupt mode (Prarit Bhargava) [1301710]
Rebuild_FUZZ: 96.83%
commit-author Xie XiuQi <xiexiuqi@huawei.com>
commit 1b48465500611a2dc5e75800c61ac352e22d41c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1b484655.failed

Zhang Liguang reported the following issue:

1) System detects a CMCI storm on the current CPU.

2) Kernel disables the CMCI interrupt on banks owned by the
   current CPU and switches to poll mode

3) After the CMCI storm subsides, kernel switches back to
   interrupt mode

4) We expect the system to reenable the CMCI interrupt on banks
   owned by the current CPU

   mce_intel_adjust_timer
   |-> cmci_reenable
       |-> cmci_discover     # owned banks are ignored here

  static void cmci_discover(int banks)
	...
	for (i = 0; i < banks; i++) {
		...
		if (test_bit(i, owned))	# ownd banks is ignore here
			continue;

So convert cmci_storm_disable_banks() to
cmci_toggle_interrupt_mode() which controls whether to enable or
disable CMCI interrupts with its argument.

NB: We cannot clear the owned bit because the banks won't be
polled, otherwise. See:

  27f6c573e0f7 ("x86, CMCI: Add proper detection of end of CMCI storms")

for more info.

	Reported-by: Zhang Liguang <zhangliguang@huawei.com>
	Signed-off-by: Xie XiuQi <xiexiuqi@huawei.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Cc: <stable@vger.kernel.org> # v3.15+
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Tony Luck <tony.luck@intel.com>
	Cc: huawei.libin@huawei.com
	Cc: linux-edac <linux-edac@vger.kernel.org>
	Cc: rui.xiang@huawei.com
Link: http://lkml.kernel.org/r/1439396985-12812-10-git-send-email-bp@alien8.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 1b48465500611a2dc5e75800c61ac352e22d41c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_intel.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_intel.c
index 22cb89b9b3b6,1e8bb6c94f14..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_intel.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_intel.c
@@@ -186,22 -207,6 +207,25 @@@ unsigned long cmci_intel_adjust_timer(u
  	}
  }
  
++<<<<<<< HEAD
 +static void cmci_storm_disable_banks(void)
 +{
 +	unsigned long flags, *owned;
 +	int bank;
 +	u64 val;
 +
 +	raw_spin_lock_irqsave(&cmci_discover_lock, flags);
 +	owned = __get_cpu_var(mce_banks_owned);
 +	for_each_set_bit(bank, owned, MAX_NR_BANKS) {
 +		rdmsrl(MSR_IA32_MCx_CTL2(bank), val);
 +		val &= ~MCI_CTL2_CMCI_EN;
 +		wrmsrl(MSR_IA32_MCx_CTL2(bank), val);
 +	}
 +	raw_spin_unlock_irqrestore(&cmci_discover_lock, flags);
 +}
 +
++=======
++>>>>>>> 1b4846550061 (x86/mce: Reenable CMCI banks when swiching back to interrupt mode)
  static bool cmci_storm_detect(void)
  {
  	unsigned int cnt = __this_cpu_read(cmci_storm_cnt);
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_intel.c
