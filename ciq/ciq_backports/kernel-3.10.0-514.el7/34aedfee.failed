macsec: fix error codes when a SA is created

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Davide Caratti <dcaratti@redhat.com>
commit 34aedfee22967236adc3d9147c8b47b7f5bad26c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/34aedfee.failed

preserve the return value of AEAD functions that are called when a SA is
created, to avoid inappropriate display of "RTNETLINK answers: Cannot
allocate memory" message.

	Signed-off-by: Davide Caratti <dcaratti@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 34aedfee22967236adc3d9147c8b47b7f5bad26c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macsec.c
diff --cc drivers/net/macsec.c
index df799bcd9f3b,0045108d7159..000000000000
--- a/drivers/net/macsec.c
+++ b/drivers/net/macsec.c
@@@ -1805,7 -1826,15 +1811,19 @@@ static int macsec_add_txsa(struct sk_bu
  		return -ENOMEM;
  	}
  
++<<<<<<< HEAD
 +	tx_sa->key.id = nla_get_u64(tb_sa[MACSEC_SA_ATTR_KEYID]);
++=======
+ 	err = init_tx_sa(tx_sa, nla_data(tb_sa[MACSEC_SA_ATTR_KEY]),
+ 			 secy->key_len, secy->icv_len);
+ 	if (err < 0) {
+ 		kfree(tx_sa);
+ 		rtnl_unlock();
+ 		return err;
+ 	}
+ 
+ 	nla_memcpy(tx_sa->key.id, tb_sa[MACSEC_SA_ATTR_KEYID], MACSEC_KEYID_LEN);
++>>>>>>> 34aedfee2296 (macsec: fix error codes when a SA is created)
  
  	spin_lock_bh(&tx_sa->lock);
  	tx_sa->next_pn = nla_get_u32(tb_sa[MACSEC_SA_ATTR_PN]);
* Unmerged path drivers/net/macsec.c
