mm: export various functions for the benefit of DAX

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] export various functions for the benefit of DAX (Jeff Moyer) [1345801 1348502 1348836 1350149 1350156]
Rebuild_FUZZ: 95.92%
commit-author Matthew Wilcox <willy@linux.intel.com>
commit fc43704437ebe40f642ac53f7ee73661fe74e6b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fc437044.failed

To use the huge zero page in DAX, we need these functions exported.

	Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
	Cc: Hillf Danton <dhillf@gmail.com>
	Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
	Cc: Theodore Ts'o <tytso@mit.edu>
	Cc: Jan Kara <jack@suse.cz>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit fc43704437ebe40f642ac53f7ee73661fe74e6b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/huge_mm.h
diff --cc include/linux/huge_mm.h
index d503e8bef557,70587ea079c3..000000000000
--- a/include/linux/huge_mm.h
+++ b/include/linux/huge_mm.h
@@@ -152,6 -148,23 +152,26 @@@ static inline int hpage_nr_pages(struc
  extern int do_huge_pmd_numa_page(struct mm_struct *mm, struct vm_area_struct *vma,
  				unsigned long addr, pmd_t pmd, pmd_t *pmdp);
  
++<<<<<<< HEAD
++=======
+ extern struct page *huge_zero_page;
+ 
+ static inline bool is_huge_zero_page(struct page *page)
+ {
+ 	return ACCESS_ONCE(huge_zero_page) == page;
+ }
+ 
+ static inline bool is_huge_zero_pmd(pmd_t pmd)
+ {
+ 	return is_huge_zero_page(pmd_page(pmd));
+ }
+ 
+ struct page *get_huge_zero_page(void);
+ bool set_huge_zero_page(pgtable_t pgtable, struct mm_struct *mm,
+ 		struct vm_area_struct *vma, unsigned long haddr,
+ 		pmd_t *pmd, struct page *zero_page);
+ 
++>>>>>>> fc43704437eb (mm: export various functions for the benefit of DAX)
  #else /* CONFIG_TRANSPARENT_HUGEPAGE */
  #define HPAGE_PMD_SHIFT ({ BUILD_BUG(); 0; })
  #define HPAGE_PMD_MASK ({ BUILD_BUG(); 0; })
* Unmerged path include/linux/huge_mm.h
diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index 353174380d0d..63fdb95bcde8 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -171,12 +171,7 @@ static inline bool is_huge_zero_page(struct page *page)
 	return ACCESS_ONCE(huge_zero_page) == page;
 }
 
-static inline bool is_huge_zero_pmd(pmd_t pmd)
-{
-	return is_huge_zero_page(pmd_page(pmd));
-}
-
-static struct page *get_huge_zero_page(void)
+struct page *get_huge_zero_page(void)
 {
 	struct page *zero_page;
 retry:
