SUNRPC: TCP/UDP always close the old socket before reconnecting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit de84d89030fa4efa44c02c96c8b4a8176042c4ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/de84d890.failed

It is not safe to call xs_reset_transport() from inside xs_udp_setup_socket()
or xs_tcp_setup_socket(), since they do not own the correct locks. Instead,
do it in xs_connect().

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit de84d89030fa4efa44c02c96c8b4a8176042c4ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtsock.c
diff --cc net/sunrpc/xprtsock.c
index 4d8de5e70bd4,e53a5ca03daf..000000000000
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@@ -2138,10 -2081,6 +2138,13 @@@ static void xs_udp_setup_socket(struct 
  	struct socket *sock = transport->sock;
  	int status = -EIO;
  
++<<<<<<< HEAD
 +	current->flags |= PF_FSTRANS;
 +
 +	/* Start by resetting any existing state */
 +	xs_reset_transport(transport);
++=======
++>>>>>>> de84d89030fa (SUNRPC: TCP/UDP always close the old socket before reconnecting)
  	sock = xs_create_sock(xprt, transport,
  			xs_addr(xprt)->sa_family, SOCK_DGRAM,
  			IPPROTO_UDP, false);
* Unmerged path net/sunrpc/xprtsock.c
