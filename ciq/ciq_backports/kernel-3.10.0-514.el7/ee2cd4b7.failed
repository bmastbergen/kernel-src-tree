KVM: x86: rename process_smi to enter_smm, process_smi_request to process_smi

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit ee2cd4b7555e3a629f399c3ef228ceb42067e7af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ee2cd4b7.failed

Make the function names more similar between KVM_REQ_NMI and KVM_REQ_SMI.

	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit ee2cd4b7555e3a629f399c3ef228ceb42067e7af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 28851e7c9b6f,1785415ebff3..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -91,6 -91,7 +91,10 @@@ static u64 __read_mostly efer_reserved_
  
  static void update_cr8_intercept(struct kvm_vcpu *vcpu);
  static void process_nmi(struct kvm_vcpu *vcpu);
++<<<<<<< HEAD
++=======
+ static void enter_smm(struct kvm_vcpu *vcpu);
++>>>>>>> ee2cd4b7555e (KVM: x86: rename process_smi to enter_smm, process_smi_request to process_smi)
  static void __kvm_set_rflags(struct kvm_vcpu *vcpu, unsigned long rflags);
  
  struct kvm_x86_ops *kvm_x86_ops __read_mostly;
@@@ -6341,7 -6104,10 +6345,14 @@@ static int inject_pending_event(struct 
  	}
  
  	/* try to inject new event if pending */
++<<<<<<< HEAD
 +	if (vcpu->arch.nmi_pending && kvm_x86_ops->nmi_allowed(vcpu)) {
++=======
+ 	if (vcpu->arch.smi_pending && !is_smm(vcpu)) {
+ 		vcpu->arch.smi_pending = false;
+ 		enter_smm(vcpu);
+ 	} else if (vcpu->arch.nmi_pending && kvm_x86_ops->nmi_allowed(vcpu)) {
++>>>>>>> ee2cd4b7555e (KVM: x86: rename process_smi to enter_smm, process_smi_request to process_smi)
  		--vcpu->arch.nmi_pending;
  		vcpu->arch.nmi_injected = true;
  		kvm_x86_ops->set_nmi(vcpu);
@@@ -6619,6 -6380,17 +6631,20 @@@ static void enter_smm(struct kvm_vcpu *
  	kvm_mmu_reset_context(vcpu);
  }
  
++<<<<<<< HEAD
++=======
+ static void process_smi(struct kvm_vcpu *vcpu)
+ {
+ 	vcpu->arch.smi_pending = true;
+ 	kvm_make_request(KVM_REQ_EVENT, vcpu);
+ }
+ 
+ void kvm_make_scan_ioapic_request(struct kvm *kvm)
+ {
+ 	kvm_make_all_cpus_request(kvm, KVM_REQ_SCAN_IOAPIC);
+ }
+ 
++>>>>>>> ee2cd4b7555e (KVM: x86: rename process_smi to enter_smm, process_smi_request to process_smi)
  static void vcpu_scan_ioapic(struct kvm_vcpu *vcpu)
  {
  	u64 eoi_exit_bitmap[4];
* Unmerged path arch/x86/kvm/x86.c
