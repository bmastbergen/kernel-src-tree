perf hists browser: Fix percentage update on key press

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 467ef10c68b90b940412390dcd14bbfe8cc40e73
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/467ef10c.failed

Currently 'perf top --tui' decrements percentage of all entries on any
key press.  This is because it adds total period as new samples are
added to hists.  As perf-top does it currently but added samples are not
passed to the display thread, the percentages are decresing
continuously.

So separate total period stat into a different variable so that it
cannot affect the output total period.  This new total period stats are
used only for calcualating callchain percent limit.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Wang Nan <wangnan0@huawei.com>
Fixes: 0f58474ec835 ("perf hists: Update hists' total period when adding entries")
Link: http://lkml.kernel.org/r/1455631723-17345-2-git-send-email-namhyung@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 467ef10c68b90b940412390dcd14bbfe8cc40e73)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.c
diff --cc tools/perf/util/hist.c
index d3cfa15c7e2e,a856617be744..000000000000
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@@ -1188,9 -1234,14 +1195,18 @@@ void hists__output_resort(struct hists 
  	struct rb_root *root;
  	struct rb_node *next;
  	struct hist_entry *n;
+ 	u64 callchain_total;
  	u64 min_callchain_hits;
  
++<<<<<<< HEAD
 +	min_callchain_hits = hists->stats.total_period * (callchain_param.min_percent / 100);
++=======
+ 	callchain_total = hists->callchain_period;
+ 	if (symbol_conf.filter_relative)
+ 		callchain_total = hists->callchain_non_filtered_period;
+ 
+ 	min_callchain_hits = callchain_total * (callchain_param.min_percent / 100);
++>>>>>>> 467ef10c68b9 (perf hists browser: Fix percentage update on key press)
  
  	if (sort__need_collapse)
  		root = &hists->entries_collapsed;
* Unmerged path tools/perf/util/hist.c
diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h
index 9ddf2f915eef..6adf7beea273 100644
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@ -63,6 +63,8 @@ struct hists {
 	struct rb_root		entries_collapsed;
 	u64			nr_entries;
 	u64			nr_non_filtered_entries;
+	u64			callchain_period;
+	u64			callchain_non_filtered_period;
 	struct thread		*thread_filter;
 	const struct dso	*dso_filter;
 	const char		*uid_filter_str;
