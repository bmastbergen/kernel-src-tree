crypto: vmx - IV size failing on skcipher API

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [crypto] vmx - IV size failing on skcipher API (Gustavo Duarte) [1274481]
Rebuild_FUZZ: 90.24%
commit-author Leonidas Da Silva Barbosa <leosilva@linux.vnet.ibm.com>
commit 0d3d054b43719ef33232677ba27ba6097afdafbc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0d3d054b.failed

IV size was zero on CBC and CTR modes,
causing a bug triggered by skcipher.

Fixing this  adding a correct size.

	Signed-off-by: Leonidas Da Silva Barbosa <leosilva@linux.vnet.ibm.com>
	Signed-off-by: Paulo Smorigo <pfsmorigo@linux.vnet.ibm.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 0d3d054b43719ef33232677ba27ba6097afdafbc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/vmx/aes_cbc.c
#	drivers/crypto/vmx/aes_ctr.c
diff --cc drivers/crypto/vmx/aes_cbc.c
index 477284abdd11,78a978613ca8..000000000000
--- a/drivers/crypto/vmx/aes_cbc.c
+++ b/drivers/crypto/vmx/aes_cbc.c
@@@ -167,24 -179,23 +167,46 @@@ static int p8_aes_cbc_decrypt(struct bl
  
  
  struct crypto_alg p8_aes_cbc_alg = {
++<<<<<<< HEAD
 +    .cra_name = "cbc(aes)",
 +    .cra_driver_name = "p8_aes_cbc",
 +    .cra_module = THIS_MODULE,
 +    .cra_priority = 1000,
 +    .cra_type = &crypto_blkcipher_type,
 +    .cra_flags = CRYPTO_ALG_TYPE_BLKCIPHER | CRYPTO_ALG_NEED_FALLBACK,
 +    .cra_alignmask = 0,
 +    .cra_blocksize = AES_BLOCK_SIZE,
 +    .cra_ctxsize = sizeof(struct p8_aes_cbc_ctx),
 +    .cra_init = p8_aes_cbc_init,
 +    .cra_exit = p8_aes_cbc_exit,
 +    .cra_blkcipher = {
 +        .ivsize = 0,
 +        .min_keysize = AES_MIN_KEY_SIZE,
 +        .max_keysize = AES_MAX_KEY_SIZE,
 +        .setkey = p8_aes_cbc_setkey,
 +        .encrypt = p8_aes_cbc_encrypt,
 +        .decrypt = p8_aes_cbc_decrypt,
 +    },
++=======
+ 	.cra_name = "cbc(aes)",
+ 	.cra_driver_name = "p8_aes_cbc",
+ 	.cra_module = THIS_MODULE,
+ 	.cra_priority = 1000,
+ 	.cra_type = &crypto_blkcipher_type,
+ 	.cra_flags = CRYPTO_ALG_TYPE_BLKCIPHER | CRYPTO_ALG_NEED_FALLBACK,
+ 	.cra_alignmask = 0,
+ 	.cra_blocksize = AES_BLOCK_SIZE,
+ 	.cra_ctxsize = sizeof(struct p8_aes_cbc_ctx),
+ 	.cra_init = p8_aes_cbc_init,
+ 	.cra_exit = p8_aes_cbc_exit,
+ 	.cra_blkcipher = {
+ 			  .ivsize = AES_BLOCK_SIZE,
+ 			  .min_keysize = AES_MIN_KEY_SIZE,
+ 			  .max_keysize = AES_MAX_KEY_SIZE,
+ 			  .setkey = p8_aes_cbc_setkey,
+ 			  .encrypt = p8_aes_cbc_encrypt,
+ 			  .decrypt = p8_aes_cbc_decrypt,
+ 	},
++>>>>>>> 0d3d054b4371 (crypto: vmx - IV size failing on skcipher API)
  };
 +
diff --cc drivers/crypto/vmx/aes_ctr.c
index 96dbee4bf4a6,1febc4f1d9af..000000000000
--- a/drivers/crypto/vmx/aes_ctr.c
+++ b/drivers/crypto/vmx/aes_ctr.c
@@@ -145,23 -163,23 +145,45 @@@ static int p8_aes_ctr_crypt(struct blkc
  }
  
  struct crypto_alg p8_aes_ctr_alg = {
++<<<<<<< HEAD
 +    .cra_name = "ctr(aes)",
 +    .cra_driver_name = "p8_aes_ctr",
 +    .cra_module = THIS_MODULE,
 +    .cra_priority = 1000,
 +    .cra_type = &crypto_blkcipher_type,
 +    .cra_flags = CRYPTO_ALG_TYPE_BLKCIPHER | CRYPTO_ALG_NEED_FALLBACK,
 +    .cra_alignmask = 0,
 +    .cra_blocksize = 1,
 +    .cra_ctxsize = sizeof(struct p8_aes_ctr_ctx),
 +    .cra_init = p8_aes_ctr_init,
 +    .cra_exit = p8_aes_ctr_exit,
 +    .cra_blkcipher = {
 +        .ivsize = 0,
 +        .min_keysize = AES_MIN_KEY_SIZE,
 +        .max_keysize = AES_MAX_KEY_SIZE,
 +        .setkey = p8_aes_ctr_setkey,
 +        .encrypt = p8_aes_ctr_crypt,
 +        .decrypt = p8_aes_ctr_crypt,
 +    },
++=======
+ 	.cra_name = "ctr(aes)",
+ 	.cra_driver_name = "p8_aes_ctr",
+ 	.cra_module = THIS_MODULE,
+ 	.cra_priority = 1000,
+ 	.cra_type = &crypto_blkcipher_type,
+ 	.cra_flags = CRYPTO_ALG_TYPE_BLKCIPHER | CRYPTO_ALG_NEED_FALLBACK,
+ 	.cra_alignmask = 0,
+ 	.cra_blocksize = 1,
+ 	.cra_ctxsize = sizeof(struct p8_aes_ctr_ctx),
+ 	.cra_init = p8_aes_ctr_init,
+ 	.cra_exit = p8_aes_ctr_exit,
+ 	.cra_blkcipher = {
+ 			  .ivsize = AES_BLOCK_SIZE,
+ 			  .min_keysize = AES_MIN_KEY_SIZE,
+ 			  .max_keysize = AES_MAX_KEY_SIZE,
+ 			  .setkey = p8_aes_ctr_setkey,
+ 			  .encrypt = p8_aes_ctr_crypt,
+ 			  .decrypt = p8_aes_ctr_crypt,
+ 	},
++>>>>>>> 0d3d054b4371 (crypto: vmx - IV size failing on skcipher API)
  };
* Unmerged path drivers/crypto/vmx/aes_cbc.c
* Unmerged path drivers/crypto/vmx/aes_ctr.c
