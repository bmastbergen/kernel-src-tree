megaraid_sas: Fastpath region lock bypass

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sumit Saxena <sumit.saxena@avagotech.com>
commit 8f05024cd3dbd3ec85923f3e8da05bf6db187d57
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8f05024c.failed

Firmware will fill out per-LD data to tell driver whether a particular
LD supports region lock bypass. If yes, then driver will send non-FP
LDIO to region lock bypass FIFO. With this change in driver, firmware
will optimize certain code to improve performance.

	Signed-off-by: Kashyap Desai <kashyap.desai@avagotech.com>
	Signed-off-by: Sumit Saxena <sumit.saxena@avagotech.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 8f05024cd3dbd3ec85923f3e8da05bf6db187d57)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
#	drivers/scsi/megaraid/megaraid_sas_fusion.h
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index a09ae37a613c,518b48838cb4..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -1715,10 -1711,9 +1717,16 @@@ megasas_build_ldio_fusion(struct megasa
  		cmd->request_desc->SCSIIO.RequestFlags =
  			(MEGASAS_REQ_DESCRIPT_FLAGS_LD_IO
  			 << MEGASAS_REQ_DESCRIPT_FLAGS_TYPE_SHIFT);
++<<<<<<< HEAD
 +		if ((instance->pdev->device == PCI_DEVICE_ID_LSI_INVADER) ||
 +			(instance->pdev->device == PCI_DEVICE_ID_LSI_FURY)) {
 +			if (io_request->RaidContext.regLockFlags ==
 +			    REGION_TYPE_UNUSED)
++=======
+ 		if (fusion->adapter_type == INVADER_SERIES) {
+ 			if (io_info.do_fp_rlbypass ||
+ 				(io_request->RaidContext.regLockFlags == REGION_TYPE_UNUSED))
++>>>>>>> 8f05024cd3db (megaraid_sas: Fastpath region lock bypass)
  				cmd->request_desc->SCSIIO.RequestFlags =
  					(MEGASAS_REQ_DESCRIPT_FLAGS_NO_LOCK <<
  					MEGASAS_REQ_DESCRIPT_FLAGS_TYPE_SHIFT);
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.h
index fc524460a8c3,db0978d0fc88..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.h
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.h
@@@ -543,7 -643,9 +543,13 @@@ struct MR_SPAN_BLOCK_INFO 
  struct MR_LD_RAID {
  	struct {
  #if   defined(__BIG_ENDIAN_BITFIELD)
++<<<<<<< HEAD
 +		u32     reserved4:7;
++=======
+ 		u32     reserved4:5;
+ 		u32     fpBypassRegionLock:1;
+ 		u32     tmCapable:1;
++>>>>>>> 8f05024cd3db (megaraid_sas: Fastpath region lock bypass)
  		u32	fpNonRWCapable:1;
  		u32     fpReadAcrossStripe:1;
  		u32     fpWriteAcrossStripe:1;
@@@ -565,7 -667,9 +571,13 @@@
  		u32     fpWriteAcrossStripe:1;
  		u32     fpReadAcrossStripe:1;
  		u32	fpNonRWCapable:1;
++<<<<<<< HEAD
 +		u32     reserved4:7;
++=======
+ 		u32     tmCapable:1;
+ 		u32     fpBypassRegionLock:1;
+ 		u32     reserved4:5;
++>>>>>>> 8f05024cd3db (megaraid_sas: Fastpath region lock bypass)
  #endif
  	} capability;
  	__le32     reserved6;
diff --git a/drivers/scsi/megaraid/megaraid_sas.h b/drivers/scsi/megaraid/megaraid_sas.h
index d4c399b43165..081b2102063f 100644
--- a/drivers/scsi/megaraid/megaraid_sas.h
+++ b/drivers/scsi/megaraid/megaraid_sas.h
@@ -1266,7 +1266,9 @@ union megasas_sgl_frame {
 typedef union _MFI_CAPABILITIES {
 	struct {
 #if   defined(__BIG_ENDIAN_BITFIELD)
-		u32     reserved:23;
+		u32     reserved:21;
+		u32     support_fp_rlbypass:1;
+		u32     support_vfid_in_ioframe:1;
 		u32     support_ext_io_size:1;
 		u32	support_ext_queue_depth:1;
 		u32     security_protocol_cmds_fw:1;
@@ -1286,7 +1288,9 @@ typedef union _MFI_CAPABILITIES {
 		u32     security_protocol_cmds_fw:1;
 		u32	support_ext_queue_depth:1;
 		u32     support_ext_io_size:1;
-		u32     reserved:23;
+		u32     support_vfid_in_ioframe:1;
+		u32     support_fp_rlbypass:1;
+		u32     reserved:21;
 #endif
 	} mfi_capabilities;
 	__le32		reg;
diff --git a/drivers/scsi/megaraid/megaraid_sas_fp.c b/drivers/scsi/megaraid/megaraid_sas_fp.c
index 4f8dabecd5e1..56bccbd86ad6 100644
--- a/drivers/scsi/megaraid/megaraid_sas_fp.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fp.c
@@ -1019,6 +1019,8 @@ MR_BuildRaidContext(struct megasas_instance *instance,
 	/* assume this IO needs the full row - we'll adjust if not true */
 	regSize             = stripSize;
 
+	io_info->do_fp_rlbypass = raid->capability.fpBypassRegionLock;
+
 	/* Check if we can send this I/O via FastPath */
 	if (raid->capability.fpCapable) {
 		if (isRead)
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.h
