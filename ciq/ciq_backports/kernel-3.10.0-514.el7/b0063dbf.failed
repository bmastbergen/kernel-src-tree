tools build: Add test for presence of __get_cpuid() gcc builtin

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [tools] build: Add test for presence of __get_cpuid() gcc builtin (Jiri Olsa) [1306834]
Rebuild_FUZZ: 95.00%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit b0063dbfb031a7c728ed0d9533257e8329292cf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b0063dbf.failed

The auxtrace code needed by Intel PT uses the __get_cpuid() gcc builtin,
that is not present in old systems, breaking the build.

Add a test to check for that builtin and disable AUXTRACE in those
systems.

  [acme@rhel5 linux]$  make NO_LIBPERL=1 -C tools/perf O=/tmp/build/perf install-bin
  make: Entering directory `/home/acme/git/linux/tools/perf'
    BUILD:   Doing 'make -j2' parallel build

  Auto-detecting system features:
  <SNIP>
  ...                          lzma: [ on  ]
  ...                     get_cpuid: [ OFF ]
  <SNIP>
  config/Makefile:630: Your gcc lacks the __get_cpuid() builtin, disables support for auxtrace/Intel PT, please install a newer gcc
    MKDIR    /tmp/build/perf/util/
  <SNIP>

This fixes the build on old systems such as RHEL/CentOS 5.11.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: "Naveen N. Rao" <naveen.n.rao@linux.vnet.ibm.com>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Victor Kamensky <victor.kamensky@linaro.org>
	Cc: Vinson Lee <vlee@twopensource.com>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-d4puslul0jltoodzpx9r4sje@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit b0063dbfb031a7c728ed0d9533257e8329292cf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/feature/Makefile
diff --cc tools/build/feature/Makefile
index 22a08bef79de,e43a2971bf56..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -34,7 -34,9 +34,13 @@@ FILES=					
  	test-compile-32.bin		\
  	test-compile-x32.bin		\
  	test-zlib.bin			\
++<<<<<<< HEAD
 +	test-lzma.bin
++=======
+ 	test-lzma.bin			\
+ 	test-bpf.bin			\
+ 	test-get_cpuid.bin
++>>>>>>> b0063dbfb031 (tools build: Add test for presence of __get_cpuid() gcc builtin)
  
  CC := $(CROSS_COMPILE)gcc -MD
  PKG_CONFIG := $(CROSS_COMPILE)pkg-config
@@@ -165,6 -167,12 +171,15 @@@ test-zlib.bin
  test-lzma.bin:
  	$(BUILD) -llzma
  
++<<<<<<< HEAD
++=======
+ test-get_cpuid.bin:
+ 	$(BUILD)
+ 
+ test-bpf.bin:
+ 	$(BUILD)
+ 
++>>>>>>> b0063dbfb031 (tools build: Add test for presence of __get_cpuid() gcc builtin)
  -include *.d
  
  ###############################
diff --git a/tools/build/Makefile.feature b/tools/build/Makefile.feature
index 970242098a7c..c8fe6d177119 100644
--- a/tools/build/Makefile.feature
+++ b/tools/build/Makefile.feature
@@ -52,7 +52,8 @@ FEATURE_TESTS ?=			\
 	timerfd				\
 	libdw-dwarf-unwind		\
 	zlib				\
-	lzma
+	lzma				\
+	get_cpuid
 
 FEATURE_DISPLAY ?=			\
 	dwarf				\
@@ -69,7 +70,8 @@ FEATURE_DISPLAY ?=			\
 	libunwind			\
 	libdw-dwarf-unwind		\
 	zlib				\
-	lzma
+	lzma				\
+	get_cpuid
 
 # Set FEATURE_CHECK_(C|LD)FLAGS-all for all FEATURE_TESTS features.
 # If in the future we need per-feature checks/flags for features not
* Unmerged path tools/build/feature/Makefile
diff --git a/tools/build/feature/test-all.c b/tools/build/feature/test-all.c
index 272f5e2920d4..5030da4a2fa8 100644
--- a/tools/build/feature/test-all.c
+++ b/tools/build/feature/test-all.c
@@ -125,6 +125,10 @@
 # include "test-lzma.c"
 #undef main
 
+#define main main_test_get_cpuid
+# include "test-get_cpuid.c"
+#undef main
+
 int main(int argc, char *argv[])
 {
 	main_test_libpython();
@@ -152,6 +156,7 @@ int main(int argc, char *argv[])
 	main_test_zlib();
 	main_test_pthread_attr_setaffinity_np();
 	main_test_lzma();
+	main_test_get_cpuid();
 
 	return 0;
 }
diff --git a/tools/build/feature/test-get_cpuid.c b/tools/build/feature/test-get_cpuid.c
new file mode 100644
index 000000000000..d7a2c407130d
--- /dev/null
+++ b/tools/build/feature/test-get_cpuid.c
@@ -0,0 +1,7 @@
+#include <cpuid.h>
+
+int main(void)
+{
+	unsigned int eax = 0, ebx = 0, ecx = 0, edx = 0;
+	return __get_cpuid(0x15, &eax, &ebx, &ecx, &edx);
+}
diff --git a/tools/perf/config/Makefile b/tools/perf/config/Makefile
index 053e65b04dc3..38a08539f4bf 100644
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@ -626,8 +626,13 @@ ifdef LIBBABELTRACE
 endif
 
 ifndef NO_AUXTRACE
-  $(call detected,CONFIG_AUXTRACE)
-  CFLAGS += -DHAVE_AUXTRACE_SUPPORT
+  ifeq ($(feature-get_cpuid), 0)
+    msg := $(warning Your gcc lacks the __get_cpuid() builtin, disables support for auxtrace/Intel PT, please install a newer gcc);
+    NO_AUXTRACE := 1
+  else
+    $(call detected,CONFIG_AUXTRACE)
+    CFLAGS += -DHAVE_AUXTRACE_SUPPORT
+  endif
 endif
 
 # Among the variables below, these:
