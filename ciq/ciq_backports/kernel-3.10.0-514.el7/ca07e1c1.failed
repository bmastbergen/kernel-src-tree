drivers:usb:fsl:Make fsl ehci drv an independent driver module

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [usb] fsl: Make fsl ehci drv an independent driver module (Torez Smith) [1303955]
Rebuild_FUZZ: 88.50%
commit-author Ramneek Mehresh <ramneek.mehresh@freescale.com>
commit ca07e1c1e4a6aed2b2576256b1fdc53a9f87bb40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ca07e1c1.failed

Make Freescale EHCI driver an independent entity from ehci-hcd.c.
This involves
	- using module_init/module_exit functions
	- using overrides structure
	- some necessary code cleanup

	Signed-off-by: Ramneek Mehresh <ramneek.mehresh@freescale.com>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ca07e1c1e4a6aed2b2576256b1fdc53a9f87bb40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/Makefile
#	drivers/usb/host/ehci-fsl.c
diff --cc drivers/usb/host/Makefile
index 9ce82ecaec76,754efaa8ccf8..000000000000
--- a/drivers/usb/host/Makefile
+++ b/drivers/usb/host/Makefile
@@@ -58,7 -72,7 +58,11 @@@ obj-$(CONFIG_USB_ISP1760_HCD)	+= isp176
  obj-$(CONFIG_USB_HWA_HCD)	+= hwa-hc.o
  obj-$(CONFIG_USB_IMX21_HCD)	+= imx21-hcd.o
  obj-$(CONFIG_USB_FSL_MPH_DR_OF)	+= fsl-mph-dr-of.o
++<<<<<<< HEAD
 +obj-$(CONFIG_USB_OCTEON2_COMMON) += octeon2-common.o
++=======
+ obj-$(CONFIG_USB_EHCI_FSL)	+= ehci-fsl.o
++>>>>>>> ca07e1c1e4a6 (drivers:usb:fsl:Make fsl ehci drv an independent driver module)
  obj-$(CONFIG_USB_HCD_BCMA)	+= bcma-hcd.o
  obj-$(CONFIG_USB_HCD_SSB)	+= ssb-hcd.o
  obj-$(CONFIG_USB_FUSBH200_HCD)	+= fusbh200-hcd.o
diff --cc drivers/usb/host/ehci-fsl.c
index 1d866120aa2e,5352e74b92e2..000000000000
--- a/drivers/usb/host/ehci-fsl.c
+++ b/drivers/usb/host/ehci-fsl.c
@@@ -176,40 -169,6 +186,43 @@@ static int fsl_ehci_drv_probe(struct pl
  	return retval;
  }
  
++<<<<<<< HEAD
 +/* may be called without controller electrically present */
 +/* may be called with controller, bus, and devices active */
 +
 +/**
 + * usb_hcd_fsl_remove - shutdown processing for FSL-based HCDs
 + * @dev: USB Host Controller being removed
 + * Context: !in_interrupt()
 + *
 + * Reverses the effect of usb_hcd_fsl_probe().
 + *
 + */
 +static void usb_hcd_fsl_remove(struct usb_hcd *hcd,
 +			       struct platform_device *pdev)
 +{
 +	struct fsl_usb2_platform_data *pdata = pdev->dev.platform_data;
 +
 +	if (!IS_ERR_OR_NULL(hcd->phy)) {
 +		otg_set_host(hcd->phy->otg, NULL);
 +		usb_put_phy(hcd->phy);
 +	}
 +
 +	usb_remove_hcd(hcd);
 +
 +	/*
 +	 * do platform specific un-initialization:
 +	 * release iomux pins, disable clock, etc.
 +	 */
 +	if (pdata->exit)
 +		pdata->exit(pdev);
 +	iounmap(hcd->regs);
 +	release_mem_region(hcd->rsrc_start, hcd->rsrc_len);
 +	usb_put_hcd(hcd);
 +}
 +
++=======
++>>>>>>> ca07e1c1e4a6 (drivers:usb:fsl:Make fsl ehci drv an independent driver module)
  static int ehci_fsl_setup_phy(struct usb_hcd *hcd,
  			       enum fsl_usb2_phy_modes phy_mode,
  			       unsigned int port_offset)
diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index 1b2aea4f0a97..483d5f7bb365 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -121,7 +121,7 @@ config XPS_USB_HCD_XILINX
 		devices only.
 
 config USB_EHCI_FSL
-	bool "Support for Freescale PPC on-chip EHCI USB controller"
+	tristate "Support for Freescale PPC on-chip EHCI USB controller"
 	depends on FSL_SOC
 	select USB_EHCI_ROOT_HUB_TT
 	select USB_FSL_MPH_DR_OF if OF
* Unmerged path drivers/usb/host/Makefile
* Unmerged path drivers/usb/host/ehci-fsl.c
diff --git a/drivers/usb/host/ehci-hcd.c b/drivers/usb/host/ehci-hcd.c
index e18f0a4a08c4..ed8f3b5342c0 100644
--- a/drivers/usb/host/ehci-hcd.c
+++ b/drivers/usb/host/ehci-hcd.c
@@ -1250,11 +1250,6 @@ MODULE_DESCRIPTION(DRIVER_DESC);
 MODULE_AUTHOR (DRIVER_AUTHOR);
 MODULE_LICENSE ("GPL");
 
-#ifdef CONFIG_USB_EHCI_FSL
-#include "ehci-fsl.c"
-#define	PLATFORM_DRIVER		ehci_fsl_driver
-#endif
-
 #ifdef CONFIG_USB_EHCI_SH
 #include "ehci-sh.c"
 #define PLATFORM_DRIVER		ehci_hcd_sh_driver
