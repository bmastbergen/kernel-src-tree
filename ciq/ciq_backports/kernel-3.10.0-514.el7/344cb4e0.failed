iommu/vt-d: Use cmpxchg16b to update posted format IRTE atomically

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] vt-d: Use cmpxchg16b to update posted format IRTE atomically (Paolo Bonzini) [1301888]
Rebuild_FUZZ: 95.24%
commit-author Feng Wu <feng.wu@intel.com>
commit 344cb4e0b6f3a0dbef0643eacb4946338eb228c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/344cb4e0.failed

If IRTE is in posted format, the 'pda' field goes across the 64-bit
boundary, we need use cmpxchg16b to atomically update it. We only
expose posted-interrupt when X86_FEATURE_CX16 is supported and use
to update it atomically.

	Signed-off-by: Feng Wu <feng.wu@intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 344cb4e0b6f3a0dbef0643eacb4946338eb228c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel_irq_remapping.c
diff --cc drivers/iommu/intel_irq_remapping.c
index 085a116a8b0a,a50468e7d8c2..000000000000
--- a/drivers/iommu/intel_irq_remapping.c
+++ b/drivers/iommu/intel_irq_remapping.c
@@@ -627,6 -736,35 +645,38 @@@ error
  	return -ENODEV;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * Set Posted-Interrupts capability.
+  */
+ static inline void set_irq_posting_cap(void)
+ {
+ 	struct dmar_drhd_unit *drhd;
+ 	struct intel_iommu *iommu;
+ 
+ 	if (!disable_irq_post) {
+ 		/*
+ 		 * If IRTE is in posted format, the 'pda' field goes across the
+ 		 * 64-bit boundary, we need use cmpxchg16b to atomically update
+ 		 * it. We only expose posted-interrupt when X86_FEATURE_CX16
+ 		 * is supported. Actually, hardware platforms supporting PI
+ 		 * should have X86_FEATURE_CX16 support, this has been confirmed
+ 		 * with Intel hardware guys.
+ 		 */
+ 		if ( cpu_has_cx16 )
+ 			intel_irq_remap_ops.capability |= 1 << IRQ_POSTING_CAP;
+ 
+ 		for_each_iommu(iommu, drhd)
+ 			if (!cap_pi_support(iommu->cap)) {
+ 				intel_irq_remap_ops.capability &=
+ 						~(1 << IRQ_POSTING_CAP);
+ 				break;
+ 			}
+ 	}
+ }
+ 
++>>>>>>> 344cb4e0b6f3 (iommu/vt-d: Use cmpxchg16b to update posted format IRTE atomically)
  static int __init intel_enable_irq_remapping(void)
  {
  	struct dmar_drhd_unit *drhd;
* Unmerged path drivers/iommu/intel_irq_remapping.c
