crypto: api - Add instance free function to crypto_type

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit 319382a6970899f02f18da4b0083a6e55942456d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/319382a6.failed

Currently the task of freeing an instance is given to the crypto
template.  However, it has no type information on the instance so
we have to resort to checking type information at runtime.

This patch introduces a free function to crypto_type that will be
used to free an instance.  This can then be used to free an instance
in a type-safe manner.

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 319382a6970899f02f18da4b0083a6e55942456d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/crypto/algapi.h
diff --cc include/crypto/algapi.h
index 418d270e1806,c9fe145f7dd3..000000000000
--- a/include/crypto/algapi.h
+++ b/include/crypto/algapi.h
@@@ -17,6 -17,8 +17,11 @@@
  #include <linux/kernel.h>
  #include <linux/skbuff.h>
  
++<<<<<<< HEAD
++=======
+ struct crypto_aead;
+ struct crypto_instance;
++>>>>>>> 319382a69708 (crypto: api - Add instance free function to crypto_type)
  struct module;
  struct rtattr;
  struct seq_file;
diff --git a/crypto/algapi.c b/crypto/algapi.c
index 481d1a48b29b..e514aa040e5b 100644
--- a/crypto/algapi.c
+++ b/crypto/algapi.c
@@ -67,12 +67,22 @@ static int crypto_check_alg(struct crypto_alg *alg)
 	return crypto_set_driver_name(alg);
 }
 
+static void crypto_free_instance(struct crypto_instance *inst)
+{
+	if (!inst->alg.cra_type->free) {
+		inst->tmpl->free(inst);
+		return;
+	}
+
+	inst->alg.cra_type->free(inst);
+}
+
 static void crypto_destroy_instance(struct crypto_alg *alg)
 {
 	struct crypto_instance *inst = (void *)alg;
 	struct crypto_template *tmpl = inst->tmpl;
 
-	tmpl->free(inst);
+	crypto_free_instance(inst);
 	crypto_tmpl_put(tmpl);
 }
 
@@ -482,7 +492,7 @@ void crypto_unregister_template(struct crypto_template *tmpl)
 
 	hlist_for_each_entry_safe(inst, n, list, list) {
 		BUG_ON(atomic_read(&inst->alg.cra_refcnt) != 1);
-		tmpl->free(inst);
+		crypto_free_instance(inst);
 	}
 	crypto_remove_final(&users);
 }
* Unmerged path include/crypto/algapi.h
