crypto: qat - Add load balancing across devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [crypto] qat - Add load balancing across devices (Neil Horman) [1274179]
Rebuild_FUZZ: 90.70%
commit-author Tadeusz Struk <tadeusz.struk@intel.com>
commit 3cc43a0a5cea4fe2a2107e77500d6032b9bcafde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3cc43a0a.failed

Load balancing of crypto instances only used a single device.
There was no problem with that on PF, but since there is only
one or two instance per VF we need to loadbalance across devices.

	Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 3cc43a0a5cea4fe2a2107e77500d6032b9bcafde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/qat_crypto.c
diff --cc drivers/crypto/qat/qat_common/qat_crypto.c
index 3bd705ca5973,25db27c7bebb..000000000000
--- a/drivers/crypto/qat/qat_common/qat_crypto.c
+++ b/drivers/crypto/qat/qat_common/qat_crypto.c
@@@ -108,12 -102,21 +108,30 @@@ struct qat_crypto_instance *qat_crypto_
  	unsigned long best = ~0;
  
  	list_for_each(itr, adf_devmgr_get_head()) {
++<<<<<<< HEAD
 +		accel_dev = list_entry(itr, struct adf_accel_dev, list);
 +		if ((node == dev_to_node(&GET_DEV(accel_dev)) ||
 +		     dev_to_node(&GET_DEV(accel_dev)) < 0) &&
 +		    adf_dev_started(accel_dev))
 +			break;
 +		accel_dev = NULL;
++=======
+ 		struct adf_accel_dev *tmp_dev;
+ 		unsigned long ctr;
+ 
+ 		tmp_dev = list_entry(itr, struct adf_accel_dev, list);
+ 
+ 		if ((node == dev_to_node(&GET_DEV(tmp_dev)) ||
+ 		     dev_to_node(&GET_DEV(tmp_dev)) < 0) &&
+ 		    adf_dev_started(tmp_dev) &&
+ 		    !list_empty(&tmp_dev->crypto_list)) {
+ 			ctr = atomic_read(&tmp_dev->ref_count);
+ 			if (best > ctr) {
+ 				accel_dev = tmp_dev;
+ 				best = ctr;
+ 			}
+ 		}
++>>>>>>> 3cc43a0a5cea (crypto: qat - Add load balancing across devices)
  	}
  	if (!accel_dev) {
  		pr_err("QAT: Could not find a device on node %d\n", node);
* Unmerged path drivers/crypto/qat/qat_common/qat_crypto.c
