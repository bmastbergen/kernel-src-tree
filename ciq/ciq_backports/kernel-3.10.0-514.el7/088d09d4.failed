qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode (Chad Dupuis) [1361279]
Rebuild_FUZZ: 99.33%
commit-author Giridhar Malavali <giridhar.malavali@qlogic.com>
commit 088d09d465a1a31929b98f3363965c91e8ab4c65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/088d09d4.failed

When VP decoupling enabled, there could be a window where, FLOGI from initiators
can be dropped before VP0 is enabled, causing link level recovery.
Retry FLOGI to avoid link level recovery.

	Signed-off-by: Giridhar Malavali <giridhar.malavali@qlogic.com>
	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 088d09d465a1a31929b98f3363965c91e8ab4c65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_dbg.c
#	drivers/scsi/qla2xxx/qla_init.c
diff --cc drivers/scsi/qla2xxx/qla_dbg.c
index a623e74ec209,907a7acb1639..000000000000
--- a/drivers/scsi/qla2xxx/qla_dbg.c
+++ b/drivers/scsi/qla2xxx/qla_dbg.c
@@@ -11,15 -11,15 +11,22 @@@
   * ----------------------------------------------------------------------
   * |             Level            |   Last Value Used  |     Holes	|
   * ----------------------------------------------------------------------
 - * | Module Init and Probe        |       0x018f       | 0x0146         |
 + * | Module Init and Probe        |       0x017f       | 0x0146,	|
   * |                              |                    | 0x015b-0x0160	|
++<<<<<<< HEAD
 + * |                              |                    | 0x016e-0x0170	|
 + * | Mailbox commands             |       0x118d       | 0x1115-0x1116	|
 + * |                              |                    | 0x111a-0x111b  |
 + * | Device Discovery             |       0x2016       | 0x2020-0x2022, |
++=======
+  * |                              |                    | 0x016e-0x0170  |
+  * | Mailbox commands             |       0x1192       |		|
+  * |                              |                    |		|
+  * | Device Discovery             |       0x2003       | 0x2016		|
++>>>>>>> 088d09d465a1 (qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode.)
   * |                              |                    | 0x2011-0x2012, |
   * |                              |                    | 0x2099-0x20a4  |
 - * | Queue Command and IO tracing |       0x3074       | 0x300b         |
 + * | Queue Command and IO tracing |       0x3075       | 0x300b         |
   * |                              |                    | 0x3027-0x3028  |
   * |                              |                    | 0x303d-0x3041  |
   * |                              |                    | 0x302d,0x3033  |
diff --cc drivers/scsi/qla2xxx/qla_init.c
index 9f9a0e1a0ecf,a3685b683688..000000000000
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@@ -2049,6 -2074,18 +2057,21 @@@ qla24xx_update_fw_options(scsi_qla_host
  	if (IS_P3P_TYPE(ha))
  		return;
  
++<<<<<<< HEAD
++=======
+ 	/*  Hold status IOCBs until ABTS response received. */
+ 	if (ql2xfwholdabts)
+ 		ha->fw_options[3] |= BIT_12;
+ 
+ 	/* Set Retry FLOGI in case of P2P connection */
+ 	if (ha->operating_mode == P2P) {
+ 		ha->fw_options[2] |= BIT_3;
+ 		ql_dbg(ql_dbg_disc, vha, 0x2101,
+ 		    "(%s): Setting FLOGI retry BIT in fw_options[2]: 0x%x\n",
+ 			__func__, ha->fw_options[2]);
+ 	}
+ 
++>>>>>>> 088d09d465a1 (qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode.)
  	/* Update Serial Link options. */
  	if ((le16_to_cpu(ha->fw_seriallink_options24[0]) & BIT_0) == 0)
  		return;
@@@ -6287,8 -6525,20 +6310,23 @@@ qla81xx_update_fw_options(scsi_qla_host
  {
  	struct qla_hw_data *ha = vha->hw;
  
++<<<<<<< HEAD
++=======
+ 	/*  Hold status IOCBs until ABTS response received. */
+ 	if (ql2xfwholdabts)
+ 		ha->fw_options[3] |= BIT_12;
+ 
+ 	/* Set Retry FLOGI in case of P2P connection */
+ 	if (ha->operating_mode == P2P) {
+ 		ha->fw_options[2] |= BIT_3;
+ 		ql_dbg(ql_dbg_disc, vha, 0x2103,
+ 		    "(%s): Setting FLOGI retry BIT in fw_options[2]: 0x%x\n",
+ 			__func__, ha->fw_options[2]);
+ 	}
+ 
++>>>>>>> 088d09d465a1 (qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode.)
  	if (!ql2xetsenable)
 -		goto out;
 +		return;
  
  	/* Enable ETS Burst. */
  	memset(ha->fw_options, 0, sizeof(ha->fw_options));
* Unmerged path drivers/scsi/qla2xxx/qla_dbg.c
* Unmerged path drivers/scsi/qla2xxx/qla_init.c
