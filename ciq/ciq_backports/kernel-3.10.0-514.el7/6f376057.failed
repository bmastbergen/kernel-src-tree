x86/setup/crash: Check memblock_reserve() retval

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] setup/crash: Check memblock_reserve() retval (Baoquan He) [1241236]
Rebuild_FUZZ: 95.65%
commit-author Borislav Petkov <bp@suse.de>
commit 6f3760570e26eefc214e641b6daeddb7106240bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6f376057.failed

memblock_reserve() can fail but the crashkernel reservation code
doesn't check that and this can lead the user into believing
that the crashkernel region was actually reserved. Make sure we
check that return value and we exit early with a failure message
in the error case.

	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Dave Young <dyoung@redhat.com>
	Reviewed-by: Joerg Roedel <jroedel@suse.de>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jiri Kosina <jkosina@suse.cz>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mark Salter <msalter@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: WANG Chao <chaowang@redhat.com>
	Cc: jerry_hoemann@hp.com
Link: http://lkml.kernel.org/r/1445246268-26285-7-git-send-email-bp@alien8.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 6f3760570e26eefc214e641b6daeddb7106240bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/setup.c
diff --cc arch/x86/kernel/setup.c
index 41f53963b5ef,3f75297d5fd0..000000000000
--- a/arch/x86/kernel/setup.c
+++ b/arch/x86/kernel/setup.c
@@@ -569,11 -531,17 +569,20 @@@ static int __init reserve_crashkernel_l
  		return -ENOMEM;
  	}
  
++<<<<<<< HEAD
 +	memblock_reserve(low_base, low_size);
++=======
+ 	ret = memblock_reserve(low_base, low_size);
+ 	if (ret) {
+ 		pr_err("%s: Error reserving crashkernel low memblock.\n", __func__);
+ 		return ret;
+ 	}
+ 
++>>>>>>> 6f3760570e26 (x86/setup/crash: Check memblock_reserve() retval)
  	pr_info("Reserving %ldMB of low memory at %ldMB for crashkernel (System low RAM: %ldMB)\n",
 -		(unsigned long)(low_size >> 20),
 -		(unsigned long)(low_base >> 20),
 -		(unsigned long)(total_low_mem >> 20));
 -
 +			(unsigned long)(low_size >> 20),
 +			(unsigned long)(low_base >> 20),
 +			(unsigned long)(total_low_mem >> 20));
  	crashk_low_res.start = low_base;
  	crashk_low_res.end   = low_base + low_size - 1;
  	insert_resource(&iomem_resource, &crashk_low_res);
* Unmerged path arch/x86/kernel/setup.c
