btrfs: Bypass unrelated items before accessing its contents in scrub

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Zhao Lei <zhaolei@cn.fujitsu.com>
commit d7cad2389560f3249435ac928bc13e9408ae467e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d7cad238.failed

When we access extent_root in scrub_stripe() and
scrub_raid56_parity(), we need bypass unrelated tree item firstly
before using its contents to do other condition.

It is not a bug fix, only making code sequence in logic.

	Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit d7cad2389560f3249435ac928bc13e9408ae467e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/scrub.c
diff --cc fs/btrfs/scrub.c
index b277fba331b6,fadf5fcd9306..000000000000
--- a/fs/btrfs/scrub.c
+++ b/fs/btrfs/scrub.c
@@@ -2882,11 -2868,7 +2886,15 @@@ static noinline_for_stack int scrub_rai
  			if (key.objectid + bytes <= logic_start)
  				goto next;
  
++<<<<<<< HEAD
 +			if (key.type != BTRFS_EXTENT_ITEM_KEY &&
 +			    key.type != BTRFS_METADATA_ITEM_KEY)
 +				goto next;
 +
 +			if (key.objectid > logic_end) {
++=======
+ 			if (key.objectid >= logic_end) {
++>>>>>>> d7cad2389560 (btrfs: Bypass unrelated items before accessing its contents in scrub)
  				stop_loop = 1;
  				break;
  			}
* Unmerged path fs/btrfs/scrub.c
