staging/rdma/hfi1: Remove hfi1_query_qp function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [infiniband] rdma/hfi1: Remove hfi1_query_qp function (Alex Estrin) [1272062 1273170]
Rebuild_FUZZ: 90.91%
commit-author Harish Chegondi <harish.chegondi@intel.com>
commit 07336db4003fd911681e37b0523529fbd04fa604
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/07336db4.failed

Rely on rvt_query_qp function defined in rdmavt

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Harish Chegondi <harish.chegondi@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 07336db4003fd911681e37b0523529fbd04fa604)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/qp.h
#	drivers/staging/hfi1/verbs.c
#	drivers/staging/rdma/hfi1/qp.c
diff --cc drivers/staging/hfi1/qp.h
index 1144470a6bc0,36be54771205..000000000000
--- a/drivers/staging/hfi1/qp.h
+++ b/drivers/staging/hfi1/qp.h
@@@ -132,33 -71,6 +132,36 @@@ static inline void clear_ahg(struct hfi
  	qp->s_ahgidx = -1;
  }
  
++<<<<<<< HEAD:drivers/staging/hfi1/qp.h
 +/**
 + * hfi1_error_qp - put a QP into the error state
 + * @qp: the QP to put into the error state
 + * @err: the receive completion error to signal if a RWQE is active
 + *
 + * Flushes both send and receive work queues.
 + * Returns true if last WQE event should be generated.
 + * The QP r_lock and s_lock should be held and interrupts disabled.
 + * If we are already in error state, just return.
 + */
 +int hfi1_error_qp(struct hfi1_qp *qp, enum ib_wc_status err);
 +
 +/**
 + * hfi1_modify_qp - modify the attributes of a queue pair
 + * @ibqp: the queue pair who's attributes we're modifying
 + * @attr: the new attributes
 + * @attr_mask: the mask of attributes to modify
 + * @udata: user data for libibverbs.so
 + *
 + * Returns 0 on success, otherwise returns an errno.
 + */
 +int hfi1_modify_qp(struct ib_qp *ibqp, struct ib_qp_attr *attr,
 +		   int attr_mask, struct ib_udata *udata);
 +
 +int hfi1_query_qp(struct ib_qp *ibqp, struct ib_qp_attr *attr,
 +		  int attr_mask, struct ib_qp_init_attr *init_attr);
 +
++=======
++>>>>>>> 07336db4003f (staging/rdma/hfi1: Remove hfi1_query_qp function):drivers/staging/rdma/hfi1/qp.h
  /**
   * hfi1_compute_aeth - compute the AETH (syndrome + MSN)
   * @qp: the queue pair to compute the AETH for
diff --cc drivers/staging/hfi1/verbs.c
index d228eb7fc4f0,f5cc0b996966..000000000000
--- a/drivers/staging/hfi1/verbs.c
+++ b/drivers/staging/hfi1/verbs.c
@@@ -1967,34 -1517,10 +1967,37 @@@ int hfi1_register_ib_device(struct hfi1
  	ibdev->modify_srq = hfi1_modify_srq;
  	ibdev->query_srq = hfi1_query_srq;
  	ibdev->destroy_srq = hfi1_destroy_srq;
++<<<<<<< HEAD:drivers/staging/hfi1/verbs.c
 +	ibdev->create_qp = hfi1_create_qp;
 +	ibdev->modify_qp = hfi1_modify_qp;
 +	ibdev->query_qp = hfi1_query_qp;
 +	ibdev->destroy_qp = hfi1_destroy_qp;
 +	ibdev->post_send = post_send;
 +	ibdev->post_recv = post_receive;
++=======
++>>>>>>> 07336db4003f (staging/rdma/hfi1: Remove hfi1_query_qp function):drivers/staging/rdma/hfi1/verbs.c
  	ibdev->post_srq_recv = hfi1_post_srq_receive;
 -
 -	/* keep process mad in the driver */
 +	ibdev->create_cq = hfi1_create_cq;
 +	ibdev->destroy_cq = hfi1_destroy_cq;
 +	ibdev->resize_cq = hfi1_resize_cq;
 +	ibdev->poll_cq = hfi1_poll_cq;
 +	ibdev->req_notify_cq = hfi1_req_notify_cq;
 +	ibdev->get_dma_mr = hfi1_get_dma_mr;
 +	ibdev->reg_phys_mr = hfi1_reg_phys_mr;
 +	ibdev->reg_user_mr = hfi1_reg_user_mr;
 +	ibdev->dereg_mr = hfi1_dereg_mr;
 +	ibdev->alloc_mr = hfi1_alloc_mr;
 +	ibdev->alloc_fast_reg_page_list = hfi1_alloc_fast_reg_page_list;
 +	ibdev->free_fast_reg_page_list = hfi1_free_fast_reg_page_list;
 +	ibdev->alloc_fmr = hfi1_alloc_fmr;
 +	ibdev->map_phys_fmr = hfi1_map_phys_fmr;
 +	ibdev->unmap_fmr = hfi1_unmap_fmr;
 +	ibdev->dealloc_fmr = hfi1_dealloc_fmr;
 +	ibdev->attach_mcast = hfi1_multicast_attach;
 +	ibdev->detach_mcast = hfi1_multicast_detach;
  	ibdev->process_mad = hfi1_process_mad;
 +	ibdev->mmap = hfi1_mmap;
 +	ibdev->dma_ops = &hfi1_dma_mapping_ops;
  	ibdev->get_port_immutable = port_immutable;
  
  	strncpy(ibdev->node_desc, init_utsname()->nodename,
* Unmerged path drivers/staging/rdma/hfi1/qp.c
* Unmerged path drivers/staging/hfi1/qp.h
* Unmerged path drivers/staging/hfi1/verbs.c
* Unmerged path drivers/staging/rdma/hfi1/qp.c
