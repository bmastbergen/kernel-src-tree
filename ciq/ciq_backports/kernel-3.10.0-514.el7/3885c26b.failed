megaraid_sas: SPERC OCR changes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sumit Saxena <sumit.saxena@avagotech.com>
commit 3885c26b773750bf2e7e071a5b0b72f079196d60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3885c26b.failed

This patch fixes online controller resets on SRIOV-enabled series of
Avago controllers.

1) Remove late detection heartbeat.

2) Change in the behavior if the FW found in READY/OPERATIONAL state.

	Signed-off-by: Uday Lingala <uday.lingala@avagotech.com>
	Signed-off-by: Sumit Saxena <sumit.saxena@avagotech.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 3885c26b773750bf2e7e071a5b0b72f079196d60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index a09ae37a613c,be9c3f1b9def..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -2858,55 -3460,9 +2858,59 @@@ int megasas_reset_fusion(struct Scsi_Ho
  		}
  
  		/* Let SR-IOV VF & PF sync up if there was a HB failure */
 -		if (instance->requestorId && !reason) {
 +		if (instance->requestorId && !iotimeout) {
  			msleep(MEGASAS_OCR_SETTLE_TIME_VF);
++<<<<<<< HEAD
 +			/* Look for a late HB update after VF settle time */
 +			if (abs_state == MFI_STATE_OPERATIONAL &&
 +			    (instance->hb_host_mem->HB.fwCounter !=
 +			     instance->hb_host_mem->HB.driverCounter)) {
 +					instance->hb_host_mem->HB.driverCounter =
 +						instance->hb_host_mem->HB.fwCounter;
 +					printk(KERN_WARNING "megasas: SR-IOV:"
 +					       "Late FW heartbeat update for "
 +					       "scsi%d.\n",
 +					       instance->host->host_no);
 +			} else {
 +				/* In VF mode, first poll for FW ready */
 +				for (i = 0;
 +				     i < (MEGASAS_RESET_WAIT_TIME * 1000);
 +				     i += 20) {
 +					status_reg =
 +						instance->instancet->
 +						read_fw_status_reg(
 +							instance->reg_set);
 +					abs_state = status_reg &
 +						MFI_STATE_MASK;
 +					if (abs_state == MFI_STATE_READY) {
 +						printk(KERN_WARNING "megasas"
 +						       ": SR-IOV: FW was found"
 +						       "to be in ready state "
 +						       "for scsi%d.\n",
 +						       instance->host->host_no);
 +						break;
 +					}
 +					msleep(20);
 +				}
 +				if (abs_state != MFI_STATE_READY) {
 +					printk(KERN_WARNING "megasas: SR-IOV: "
 +					       "FW not in ready state after %d"
 +					       " seconds for scsi%d, status_reg = "
 +					       "0x%x.\n",
 +					       MEGASAS_RESET_WAIT_TIME,
 +					       instance->host->host_no,
 +					       status_reg);
 +					megaraid_sas_kill_hba(instance);
 +					instance->skip_heartbeat_timer_del = 1;
 +					instance->adprecovery =
 +						MEGASAS_HW_CRITICAL_ERROR;
 +					retval = FAILED;
 +					goto out;
 +				}
 +			}
++=======
+ 			goto transition_to_ready;
++>>>>>>> 3885c26b7737 (megaraid_sas: SPERC OCR changes)
  		}
  
  		/* Now try to reset the chip */
@@@ -2915,23 -3471,28 +2919,42 @@@
  			if (instance->instancet->adp_reset
  				(instance, instance->reg_set))
  				continue;
- 
+ transition_to_ready:
  			/* Wait for FW to become ready */
  			if (megasas_transition_to_ready(instance, 1)) {
++<<<<<<< HEAD
 +				printk(KERN_WARNING "megaraid_sas: Failed to "
 +				       "transition controller to ready "
 +				       "for scsi%d.\n",
 +				       instance->host->host_no);
 +				continue;
++=======
+ 				dev_warn(&instance->pdev->dev,
+ 					"Failed to transition controller to ready for "
+ 					"scsi%d.\n", instance->host->host_no);
+ 				if (instance->requestorId && !reason)
+ 					goto fail_kill_adapter;
+ 				else
+ 					continue;
++>>>>>>> 3885c26b7737 (megaraid_sas: SPERC OCR changes)
  			}
- 
  			megasas_reset_reply_desc(instance);
 -			megasas_fusion_update_can_queue(instance, OCR_CONTEXT);
 -
  			if (megasas_ioc_init_fusion(instance)) {
++<<<<<<< HEAD
 +				printk(KERN_WARNING "megaraid_sas: "
 +				       "megasas_ioc_init_fusion() failed!"
 +				       " for scsi%d\n",
 +				       instance->host->host_no);
 +				continue;
++=======
+ 				dev_warn(&instance->pdev->dev,
+ 				       "megasas_ioc_init_fusion() failed! for "
+ 				       "scsi%d\n", instance->host->host_no);
+ 				if (instance->requestorId && !reason)
+ 					goto fail_kill_adapter;
+ 				else
+ 					continue;
++>>>>>>> 3885c26b7737 (megaraid_sas: SPERC OCR changes)
  			}
  
  			megasas_refire_mgmt_cmd(instance);
@@@ -2985,8 -3549,9 +3008,9 @@@
  			retval = SUCCESS;
  			goto out;
  		}
+ fail_kill_adapter:
  		/* Reset failed, kill the adapter */
 -		dev_warn(&instance->pdev->dev, "Reset failed, killing "
 +		printk(KERN_WARNING "megaraid_sas: Reset failed, killing "
  		       "adapter scsi%d.\n", instance->host->host_no);
  		megaraid_sas_kill_hba(instance);
  		instance->skip_heartbeat_timer_del = 1;
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
