perf report: Use hierarchy hpp list on gtk

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 58ecd33be90647724a78ce5e0b42f5bc482771fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/58ecd33b.failed

Now hpp formats are linked using perf_hpp_list_node when hierarchy is
enabled.  Like in stdio, use this info to print entries with multiple
sort keys in a single hierarchy properly.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1457361308-514-8-git-send-email-namhyung@kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 58ecd33be90647724a78ce5e0b42f5bc482771fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/gtk/hists.c
diff --cc tools/perf/ui/gtk/hists.c
index d0c6b87e8015,bd9bf7e343b1..000000000000
--- a/tools/perf/ui/gtk/hists.c
+++ b/tools/perf/ui/gtk/hists.c
@@@ -437,15 -440,26 +439,36 @@@ static void perf_gtk__add_hierarchy_ent
  			gtk_tree_store_set(store, &iter, col_idx++, hpp->buf, -1);
  		}
  
++<<<<<<< HEAD
 +		fmt = he->fmt;
 +		if (fmt->color)
 +			fmt->color(fmt, hpp, he);
 +		else
 +			fmt->entry(fmt, hpp, he);
 +
 +		gtk_tree_store_set(store, &iter, col_idx, rtrim(hpp->buf), -1);
++=======
+ 		bf = hpp->buf;
+ 		size = hpp->size;
+ 		perf_hpp_list__for_each_format(he->hpp_list, fmt) {
+ 			int ret;
+ 
+ 			if (fmt->color)
+ 				ret = fmt->color(fmt, hpp, he);
+ 			else
+ 				ret = fmt->entry(fmt, hpp, he);
+ 
+ 			snprintf(hpp->buf + ret, hpp->size - ret, "  ");
+ 			advance_hpp(hpp, ret + 2);
+ 		}
+ 
+ 		gtk_tree_store_set(store, &iter, col_idx, ltrim(rtrim(bf)), -1);
++>>>>>>> 58ecd33be906 (perf report: Use hierarchy hpp list on gtk)
  
  		if (!he->leaf) {
+ 			hpp->buf = bf;
+ 			hpp->size = size;
+ 
  			perf_gtk__add_hierarchy_entries(hists, &he->hroot_out,
  							store, &iter, hpp,
  							min_pcnt);
* Unmerged path tools/perf/ui/gtk/hists.c
