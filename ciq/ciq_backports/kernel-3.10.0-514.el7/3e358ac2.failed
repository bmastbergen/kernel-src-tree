firmware: Be a bit more verbose about direct firmware loading failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [firmware] Be a bit more verbose about direct firmware loading failure (Prarit Bhargava) [1340431]
Rebuild_FUZZ: 92.19%
commit-author Neil Horman <nhorman@tuxdriver.com>
commit 3e358ac2bb5bb9c9f4842145ca0da2384d13fd98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3e358ac2.failed

The direct firmware loading interface is a bit quiet about failures.  Failures
that occur during loading are masked if firmware exists in multiple locations,
and may be masked entirely in the event that we fall back to the user mode
helper code.  It would be nice to see some of the more unexpected errors get
logged, so in the event that you expect the direct firmware loader to work (like
if CONFIG_FW_LOADER_USER_HELPER is enabled), and something goes wrong, you can
figure out what happened.

	Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
	Acked-by: Ming Lei <ming.lei@canonical.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 3e358ac2bb5bb9c9f4842145ca0da2384d13fd98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/firmware_class.c
diff --cc drivers/base/firmware_class.c
index 01e21037d8fe,eb8fb94ae2c5..000000000000
--- a/drivers/base/firmware_class.c
+++ b/drivers/base/firmware_class.c
@@@ -1044,11 -1093,18 +1051,21 @@@ _request_firmware(const struct firmwar
  		}
  	}
  
- 	if (!fw_get_filesystem_firmware(device, fw->priv))
+ 	ret = fw_get_filesystem_firmware(device, fw->priv);
+ 	if (ret) {
+ 		dev_warn(device, "Direct firmware load failed with error %d\n",
+ 			 ret);
+ 		dev_warn(device, "Falling back to user helper\n");
  		ret = fw_load_from_user_helper(fw, name, device,
  					       uevent, nowait, timeout);
++<<<<<<< HEAD
++=======
+ 	}
+ 
+ 	/* don't cache firmware handled without uevent */
++>>>>>>> 3e358ac2bb5b (firmware: Be a bit more verbose about direct firmware loading failure)
  	if (!ret)
 -		ret = assign_firmware_buf(fw, device, !uevent);
 +		ret = assign_firmware_buf(fw, device);
  
  	usermodehelper_read_unlock();
  
* Unmerged path drivers/base/firmware_class.c
