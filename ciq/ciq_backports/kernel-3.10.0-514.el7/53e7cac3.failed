gpiolib: use dedicated flags for GPIO properties

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexandre Courbot <acourbot@nvidia.com>
commit 53e7cac35db5941f42221314c33693e71ffa496b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/53e7cac3.failed

GPIO mapping properties were defined using the GPIOF_* flags, which are
declared in linux/gpio.h. This file is not included when using the
GPIO descriptor interface.

This patch declares the flags that can be used as GPIO mappings
properties in linux/gpio/driver.h, and uses them in gpiolib, so that no
deprecated declarations are used by the GPIO descriptor interface.

This patch also allows GPIO_OPEN_DRAIN and GPIO_OPEN_SOURCE to be
specified as GPIO mapping properties.

	Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 53e7cac35db5941f42221314c33693e71ffa496b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpio/gpiolib.c
diff --cc drivers/gpio/gpiolib.c
index 38841a4ac36e,490198365ce4..000000000000
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@@ -2305,9 -2307,20 +2307,24 @@@ static struct gpio_desc *of_find_gpio(s
  #endif
  
  static struct gpio_desc *acpi_find_gpio(struct device *dev, const char *con_id,
- 					unsigned int idx, unsigned long *flags)
+ 					unsigned int idx,
+ 					enum gpio_lookup_flags *flags)
  {
++<<<<<<< HEAD
 +	return acpi_get_gpiod_by_index(dev, idx, NULL);
++=======
+ 	struct acpi_gpio_info info;
+ 	struct gpio_desc *desc;
+ 
+ 	desc = acpi_get_gpiod_by_index(dev, idx, &info);
+ 	if (IS_ERR(desc))
+ 		return desc;
+ 
+ 	if (info.gpioint && info.active_low)
+ 		*flags |= GPIO_ACTIVE_LOW;
+ 
+ 	return desc;
++>>>>>>> 53e7cac35db5 (gpiolib: use dedicated flags for GPIO properties)
  }
  
  static struct gpio_desc *gpiod_find(struct device *dev, const char *con_id,
* Unmerged path drivers/gpio/gpiolib.c
diff --git a/include/linux/gpio/driver.h b/include/linux/gpio/driver.h
index 656a27efb2c8..82eac610ce1a 100644
--- a/include/linux/gpio/driver.h
+++ b/include/linux/gpio/driver.h
@@ -125,6 +125,13 @@ extern struct gpio_chip *gpiochip_find(void *data,
 int gpiod_lock_as_irq(struct gpio_desc *desc);
 void gpiod_unlock_as_irq(struct gpio_desc *desc);
 
+enum gpio_lookup_flags {
+	GPIO_ACTIVE_HIGH = (0 << 0),
+	GPIO_ACTIVE_LOW = (1 << 0),
+	GPIO_OPEN_DRAIN = (1 << 1),
+	GPIO_OPEN_SOURCE = (1 << 2),
+};
+
 /**
  * Lookup table for associating GPIOs to specific devices and functions using
  * platform data.
@@ -152,9 +159,9 @@ struct gpiod_lookup {
 	 */
 	unsigned int idx;
 	/*
-	 * mask of GPIOF_* values
+	 * mask of GPIO_* values
 	 */
-	unsigned long flags;
+	enum gpio_lookup_flags flags;
 };
 
 /*
