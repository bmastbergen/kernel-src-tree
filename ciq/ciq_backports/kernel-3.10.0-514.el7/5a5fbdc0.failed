KVM: x86: remove eager_fpu field of struct kvm_vcpu_arch

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 5a5fbdc0e3f1159a734f1890da60fce70e98271d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5a5fbdc0.failed

It is now equal to use_eager_fpu(), which simply tests a cpufeature bit.

	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5a5fbdc0e3f1159a734f1890da60fce70e98271d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/cpuid.c
diff --cc arch/x86/kvm/cpuid.c
index 76b72da25d9c,0029644bf09c..000000000000
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@@ -98,8 -104,7 +98,12 @@@ int kvm_update_cpuid(struct kvm_vcpu *v
  	if (best && (best->eax & (F(XSAVES) | F(XSAVEC))))
  		best->ebx = xstate_required_size(vcpu->arch.xcr0, true);
  
++<<<<<<< HEAD
 +	vcpu->arch.eager_fpu = use_eager_fpu() || guest_cpuid_has_mpx(vcpu);
 +	if (vcpu->arch.eager_fpu)
++=======
+ 	if (use_eager_fpu())
++>>>>>>> 5a5fbdc0e3f1 (KVM: x86: remove eager_fpu field of struct kvm_vcpu_arch)
  		kvm_x86_ops->fpu_activate(vcpu);
  
  	/*
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 5d383a89c9d4..c8337c7682e4 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -419,7 +419,6 @@ struct kvm_vcpu_arch {
 	struct kvm_mmu_memory_cache mmu_page_header_cache;
 
 	struct fpu guest_fpu;
-	bool eager_fpu;
 	u64 xcr0;
 	u64 guest_supported_xcr0;
 	u32 guest_xstate_size;
* Unmerged path arch/x86/kvm/cpuid.c
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 733894b44f8d..460a616feff5 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7538,7 +7538,7 @@ void kvm_put_guest_fpu(struct kvm_vcpu *vcpu)
 	 * Every 255 times fpu_counter rolls over to 0; a guest that uses
 	 * the FPU in bursts will revert to loading it on demand.
 	 */
-	if (!vcpu->arch.eager_fpu) {
+	if (!use_eager_fpu()) {
 		if (++vcpu->fpu_counter < 5)
 			kvm_make_request(KVM_REQ_DEACTIVATE_FPU, vcpu);
 	}
