perf tools: Enable config and setting names for legacy cache events

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 43d0b97817a41b274aaec0476e912dae3ae1f93d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/43d0b978.failed

This patch allows setting config terms for legacy cache events.
For example:

  # perf stat -e L1-icache-misses/name=valA/ -e branches/name=valB/ ls
  ...
   Performance counter stats for 'ls':

              11299      valA
             451605      valB

        0.000779091 seconds time elapsed

  # perf record -e cache-misses/name=inh/ -e cache-misses/name=noinh,no-inherit/ bash
  # ls
  # exit
  [ perf record: Woken up 1 times to write data ]
  [ perf record: Captured and wrote 0.023 MB perf.data (131 samples) ]
  # perf report --stdio | grep -B 1 'Event count'
  # Samples: 105  of event 'inh'
  # Event count (approx.): 109118
  --
  # Samples: 26  of event 'noinh'
  # Event count (approx.): 48302

A test case is introduced to test this feature.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
	Cc: Brendan Gregg <brendan.d.gregg@gmail.com>
	Cc: Cody P Schafer <dev@codyps.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jeremie Galarneau <jeremie.galarneau@efficios.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Kirill Smelkov <kirr@nexedi.com>
	Cc: Li Zefan <lizefan@huawei.com>
	Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1455882283-79592-14-git-send-email-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 43d0b97817a41b274aaec0476e912dae3ae1f93d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/tests/parse-events.c
#	tools/perf/util/parse-events.c
diff --cc tools/perf/tests/parse-events.c
index 8932cd7e4725,7865f68dc0d8..000000000000
--- a/tools/perf/tests/parse-events.c
+++ b/tools/perf/tests/parse-events.c
@@@ -1263,6 -1271,38 +1263,41 @@@ static int test__checkevent_precise_max
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static int test__checkevent_config_symbol(struct perf_evlist *evlist)
+ {
+ 	struct perf_evsel *evsel = perf_evlist__first(evlist);
+ 
+ 	TEST_ASSERT_VAL("wrong name setting", strcmp(evsel->name, "insn") == 0);
+ 	return 0;
+ }
+ 
+ static int test__checkevent_config_raw(struct perf_evlist *evlist)
+ {
+ 	struct perf_evsel *evsel = perf_evlist__first(evlist);
+ 
+ 	TEST_ASSERT_VAL("wrong name setting", strcmp(evsel->name, "rawpmu") == 0);
+ 	return 0;
+ }
+ 
+ static int test__checkevent_config_num(struct perf_evlist *evlist)
+ {
+ 	struct perf_evsel *evsel = perf_evlist__first(evlist);
+ 
+ 	TEST_ASSERT_VAL("wrong name setting", strcmp(evsel->name, "numpmu") == 0);
+ 	return 0;
+ }
+ 
+ static int test__checkevent_config_cache(struct perf_evlist *evlist)
+ {
+ 	struct perf_evsel *evsel = perf_evlist__first(evlist);
+ 
+ 	TEST_ASSERT_VAL("wrong name setting", strcmp(evsel->name, "cachepmu") == 0);
+ 	return 0;
+ }
+ 
++>>>>>>> 43d0b97817a4 (perf tools: Enable config and setting names for legacy cache events)
  static int count_tracepoints(void)
  {
  	struct dirent *events_ent;
@@@ -1571,6 -1611,26 +1606,29 @@@ static struct evlist_test test__events[
  		.check = test__checkevent_precise_max_modifier,
  		.id    = 47,
  	},
++<<<<<<< HEAD
++=======
+ 	{
+ 		.name  = "instructions/name=insn/",
+ 		.check = test__checkevent_config_symbol,
+ 		.id    = 48,
+ 	},
+ 	{
+ 		.name  = "r1234/name=rawpmu/",
+ 		.check = test__checkevent_config_raw,
+ 		.id    = 49,
+ 	},
+ 	{
+ 		.name  = "4:0x6530160/name=numpmu/",
+ 		.check = test__checkevent_config_num,
+ 		.id    = 50,
+ 	},
+ 	{
+ 		.name  = "L1-dcache-misses/name=cachepmu/",
+ 		.check = test__checkevent_config_cache,
+ 		.id    = 51,
+ 	},
++>>>>>>> 43d0b97817a4 (perf tools: Enable config and setting names for legacy cache events)
  };
  
  static struct evlist_test test__events_pmu[] = {
diff --cc tools/perf/util/parse-events.c
index ee3541614df9,2996aa4207bd..000000000000
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@@ -378,10 -423,19 +393,23 @@@ int parse_events_add_cache(struct list_
  	memset(&attr, 0, sizeof(attr));
  	attr.config = cache_type | (cache_op << 8) | (cache_result << 16);
  	attr.type = PERF_TYPE_HW_CACHE;
++<<<<<<< HEAD
 +	return add_event(list, idx, &attr, name);
++=======
+ 
+ 	if (head_config) {
+ 		if (config_attr(&attr, head_config, error,
+ 				config_term_common))
+ 			return -EINVAL;
+ 
+ 		if (get_config_terms(head_config, &config_terms))
+ 			return -ENOMEM;
+ 	}
+ 	return add_event(list, idx, &attr, config_name ? : name, &config_terms);
++>>>>>>> 43d0b97817a4 (perf tools: Enable config and setting names for legacy cache events)
  }
  
 -static void tracepoint_error(struct parse_events_error *e, int err,
 +static void tracepoint_error(struct parse_events_error *error, int err,
  			     char *sys, char *name)
  {
  	char help[BUFSIZ];
* Unmerged path tools/perf/tests/parse-events.c
* Unmerged path tools/perf/util/parse-events.c
diff --git a/tools/perf/util/parse-events.h b/tools/perf/util/parse-events.h
index 8417467c7342..1746b5271931 100644
--- a/tools/perf/util/parse-events.h
+++ b/tools/perf/util/parse-events.h
@@ -122,7 +122,9 @@ int parse_events_add_numeric(struct parse_events_evlist *data,
 			     u32 type, u64 config,
 			     struct list_head *head_config);
 int parse_events_add_cache(struct list_head *list, int *idx,
-			   char *type, char *op_result1, char *op_result2);
+			   char *type, char *op_result1, char *op_result2,
+			   struct parse_events_error *error,
+			   struct list_head *head_config);
 int parse_events_add_breakpoint(struct list_head *list, int *idx,
 				void *ptr, char *type, u64 len);
 int parse_events_add_pmu(struct parse_events_evlist *data,
diff --git a/tools/perf/util/parse-events.y b/tools/perf/util/parse-events.y
index 4a0cf2aee9da..bc3c2484775b 100644
--- a/tools/perf/util/parse-events.y
+++ b/tools/perf/util/parse-events.y
@@ -297,33 +297,39 @@ value_sym sep_slash_dc
 }
 
 event_legacy_cache:
-PE_NAME_CACHE_TYPE '-' PE_NAME_CACHE_OP_RESULT '-' PE_NAME_CACHE_OP_RESULT
+PE_NAME_CACHE_TYPE '-' PE_NAME_CACHE_OP_RESULT '-' PE_NAME_CACHE_OP_RESULT opt_event_config
 {
 	struct parse_events_evlist *data = _data;
+	struct parse_events_error *error = data->error;
 	struct list_head *list;
 
 	ALLOC_LIST(list);
-	ABORT_ON(parse_events_add_cache(list, &data->idx, $1, $3, $5));
+	ABORT_ON(parse_events_add_cache(list, &data->idx, $1, $3, $5, error, $6));
+	parse_events_terms__delete($6);
 	$$ = list;
 }
 |
-PE_NAME_CACHE_TYPE '-' PE_NAME_CACHE_OP_RESULT
+PE_NAME_CACHE_TYPE '-' PE_NAME_CACHE_OP_RESULT opt_event_config
 {
 	struct parse_events_evlist *data = _data;
+	struct parse_events_error *error = data->error;
 	struct list_head *list;
 
 	ALLOC_LIST(list);
-	ABORT_ON(parse_events_add_cache(list, &data->idx, $1, $3, NULL));
+	ABORT_ON(parse_events_add_cache(list, &data->idx, $1, $3, NULL, error, $4));
+	parse_events_terms__delete($4);
 	$$ = list;
 }
 |
-PE_NAME_CACHE_TYPE
+PE_NAME_CACHE_TYPE opt_event_config
 {
 	struct parse_events_evlist *data = _data;
+	struct parse_events_error *error = data->error;
 	struct list_head *list;
 
 	ALLOC_LIST(list);
-	ABORT_ON(parse_events_add_cache(list, &data->idx, $1, NULL, NULL));
+	ABORT_ON(parse_events_add_cache(list, &data->idx, $1, NULL, NULL, error, $2));
+	parse_events_terms__delete($2);
 	$$ = list;
 }
 
