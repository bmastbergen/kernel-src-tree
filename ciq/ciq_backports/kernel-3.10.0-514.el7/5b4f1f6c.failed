mmc: sdhci: plug hole in disabling card detection interrupts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] sdhci: plug hole in disabling card detection interrupts (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 95.65%
commit-author Russell King <rmk+kernel@arm.linux.org.uk>
commit 5b4f1f6c496aa3a90b617d1319274bf2017e639d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5b4f1f6c.failed

When we disable card detection interrupts, we should disable both the
insert and remove interrupts irrespective of the current state - this
avoids races between the hardware card detect changing state before
we've read that updated state and altered the interrupt mask.

	Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
	Tested-by: Markus Pargmann <mpa@pengutronix.de>
	Tested-by: Stephen Warren <swarren@nvidia.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
	Signed-off-by: Chris Ball <chris@printf.net>
(cherry picked from commit 5b4f1f6c496aa3a90b617d1319274bf2017e639d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci.c
diff --cc drivers/mmc/host/sdhci.c
index 9a66ab1fa866,8cd20ef0a9cb..000000000000
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@@ -131,43 -131,26 +131,54 @@@ static void sdhci_dumpregs(struct sdhci
   *                                                                           *
  \*****************************************************************************/
  
 +static void sdhci_clear_set_irqs(struct sdhci_host *host, u32 clear, u32 set)
 +{
 +	u32 ier;
 +
 +	ier = sdhci_readl(host, SDHCI_INT_ENABLE);
 +	ier &= ~clear;
 +	ier |= set;
 +	sdhci_writel(host, ier, SDHCI_INT_ENABLE);
 +	sdhci_writel(host, ier, SDHCI_SIGNAL_ENABLE);
 +}
 +
 +static void sdhci_unmask_irqs(struct sdhci_host *host, u32 irqs)
 +{
 +	sdhci_clear_set_irqs(host, 0, irqs);
 +}
 +
 +static void sdhci_mask_irqs(struct sdhci_host *host, u32 irqs)
 +{
 +	sdhci_clear_set_irqs(host, irqs, 0);
 +}
 +
  static void sdhci_set_card_detection(struct sdhci_host *host, bool enable)
  {
- 	u32 present, irqs;
+ 	u32 present;
  
  	if ((host->quirks & SDHCI_QUIRK_BROKEN_CARD_DETECTION) ||
  	    (host->mmc->caps & MMC_CAP_NONREMOVABLE))
  		return;
  
- 	present = sdhci_readl(host, SDHCI_PRESENT_STATE) &
- 			      SDHCI_CARD_PRESENT;
- 	irqs = present ? SDHCI_INT_CARD_REMOVE : SDHCI_INT_CARD_INSERT;
+ 	if (enable) {
+ 		present = sdhci_readl(host, SDHCI_PRESENT_STATE) &
+ 				      SDHCI_CARD_PRESENT;
  
++<<<<<<< HEAD
 +	if (enable)
 +		sdhci_unmask_irqs(host, irqs);
 +	else
 +		sdhci_mask_irqs(host, irqs);
++=======
+ 		host->ier |= present ? SDHCI_INT_CARD_REMOVE :
+ 				       SDHCI_INT_CARD_INSERT;
+ 	} else {
+ 		host->ier &= ~(SDHCI_INT_CARD_REMOVE | SDHCI_INT_CARD_INSERT);
+ 	}
+ 
+ 	sdhci_writel(host, host->ier, SDHCI_INT_ENABLE);
+ 	sdhci_writel(host, host->ier, SDHCI_SIGNAL_ENABLE);
++>>>>>>> 5b4f1f6c496a (mmc: sdhci: plug hole in disabling card detection interrupts)
  }
  
  static void sdhci_enable_card_detection(struct sdhci_host *host)
* Unmerged path drivers/mmc/host/sdhci.c
