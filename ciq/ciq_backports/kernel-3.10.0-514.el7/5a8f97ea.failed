Revert "drm/i915: start adding dp mst audio"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Lyude <cpaul@redhat.com>
commit 5a8f97ea04c98201deeb973c3f711c3c156115e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5a8f97ea.failed

Right now MST audio is causing too many kernel panics to really keep
around in the kernel. On top of that, even after fixing said panics it's
still basically non-functional (at least on all the setups I've tested
it on). Revert until we have a proper solution for this.

This reverts commit 3d52ccf52f2c51f613e42e65be0f06e4e6788093.

	Signed-off-by: Lyude <cpaul@redhat.com>
Fixes: 3d52ccf52f2c ("drm/i915: start adding dp mst audio")
	Cc: stable@vger.kernel.org
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Link: http://patchwork.freedesktop.org/patch/msgid/1462287692-28570-1-git-send-email-cpaul@redhat.com
(cherry picked from commit 5a8f97ea04c98201deeb973c3f711c3c156115e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ddi.c
#	drivers/gpu/drm/i915/intel_dp_mst.c
diff --cc drivers/gpu/drm/i915/intel_ddi.c
index 486f6fa68db1,de5fb8cf9df4..000000000000
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@@ -1947,40 -2105,32 +1947,43 @@@ void intel_ddi_fdi_disable(struct drm_c
  	struct intel_encoder *intel_encoder = intel_ddi_get_crtc_encoder(crtc);
  	uint32_t val;
  
 -	/*
 -	 * Bspec lists this as both step 13 (before DDI_BUF_CTL disable)
 -	 * and step 18 (after clearing PORT_CLK_SEL). Based on a BUN,
 -	 * step 13 is the correct place for it. Step 18 is where it was
 -	 * originally before the BUN.
 -	 */
 -	val = I915_READ(FDI_RX_CTL(PIPE_A));
 -	val &= ~FDI_RX_ENABLE;
 -	I915_WRITE(FDI_RX_CTL(PIPE_A), val);
 -
  	intel_ddi_post_disable(intel_encoder);
  
 -	val = I915_READ(FDI_RX_MISC(PIPE_A));
 +	val = I915_READ(_FDI_RXA_CTL);
 +	val &= ~FDI_RX_ENABLE;
 +	I915_WRITE(_FDI_RXA_CTL, val);
 +
 +	val = I915_READ(_FDI_RXA_MISC);
  	val &= ~(FDI_RX_PWRDN_LANE1_MASK | FDI_RX_PWRDN_LANE0_MASK);
  	val |= FDI_RX_PWRDN_LANE1_VAL(2) | FDI_RX_PWRDN_LANE0_VAL(2);
 -	I915_WRITE(FDI_RX_MISC(PIPE_A), val);
 +	I915_WRITE(_FDI_RXA_MISC, val);
  
 -	val = I915_READ(FDI_RX_CTL(PIPE_A));
 +	val = I915_READ(_FDI_RXA_CTL);
  	val &= ~FDI_PCDCLK;
 -	I915_WRITE(FDI_RX_CTL(PIPE_A), val);
 +	I915_WRITE(_FDI_RXA_CTL, val);
  
 -	val = I915_READ(FDI_RX_CTL(PIPE_A));
 +	val = I915_READ(_FDI_RXA_CTL);
  	val &= ~FDI_RX_PLL_ENABLE;
 -	I915_WRITE(FDI_RX_CTL(PIPE_A), val);
 +	I915_WRITE(_FDI_RXA_CTL, val);
 +}
 +
++<<<<<<< HEAD
 +static void intel_ddi_hot_plug(struct intel_encoder *intel_encoder)
 +{
 +	struct intel_digital_port *intel_dig_port = enc_to_dig_port(&intel_encoder->base);
 +	int type = intel_dig_port->base.type;
 +
 +	if (type != INTEL_OUTPUT_DISPLAYPORT &&
 +	    type != INTEL_OUTPUT_EDP &&
 +	    type != INTEL_OUTPUT_UNKNOWN) {
 +		return;
 +	}
 +
 +	intel_dp_hot_plug(intel_encoder);
  }
  
++=======
++>>>>>>> 5a8f97ea04c9 (Revert "drm/i915: start adding dp mst audio")
  void intel_ddi_get_config(struct intel_encoder *encoder,
  			  struct intel_crtc_state *pipe_config)
  {
diff --cc drivers/gpu/drm/i915/intel_dp_mst.c
index a2fce431e596,55d0543fdf2a..000000000000
--- a/drivers/gpu/drm/i915/intel_dp_mst.c
+++ b/drivers/gpu/drm/i915/intel_dp_mst.c
@@@ -85,7 -77,7 +85,11 @@@ static bool intel_dp_mst_compute_config
  		return false;
  	}
  
++<<<<<<< HEAD
 +	mst_pbn = drm_dp_calc_pbn_mode(adjusted_mode->clock, bpp);
++=======
+ 	mst_pbn = drm_dp_calc_pbn_mode(adjusted_mode->crtc_clock, bpp);
++>>>>>>> 5a8f97ea04c9 (Revert "drm/i915: start adding dp mst audio")
  
  	pipe_config->pbn = mst_pbn;
  	slots = drm_dp_find_vcpi_slots(&intel_dp->mst_mgr, mst_pbn);
* Unmerged path drivers/gpu/drm/i915/intel_ddi.c
* Unmerged path drivers/gpu/drm/i915/intel_dp_mst.c
