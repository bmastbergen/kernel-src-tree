MMC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 162d6f98005fce408efc5af73956c434ae08ef73
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/162d6f98.failed

After commit b2b49ccbdd54 (PM: Kconfig: Set PM_RUNTIME if PM_SLEEP is
selected) PM_RUNTIME is always set if PM is set, so #ifdef blocks
depending on CONFIG_PM_RUNTIME may now be changed to depend on
CONFIG_PM.

Replace CONFIG_PM_RUNTIME with CONFIG_PM everywhere under
drivers/mmc/.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Acked-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 162d6f98005fce408efc5af73956c434ae08ef73)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci-esdhc-imx.c
#	drivers/mmc/host/sdhci-s3c.c
diff --cc drivers/mmc/host/sdhci-esdhc-imx.c
index 98f46704baa6,cafa10c10893..000000000000
--- a/drivers/mmc/host/sdhci-esdhc-imx.c
+++ b/drivers/mmc/host/sdhci-esdhc-imx.c
@@@ -650,15 -1169,61 +650,70 @@@ static int sdhci_esdhc_imx_remove(struc
  
  	sdhci_remove_host(host, dead);
  
++<<<<<<< HEAD
 +	clk_disable_unprepare(imx_data->clk_per);
 +	clk_disable_unprepare(imx_data->clk_ipg);
 +	clk_disable_unprepare(imx_data->clk_ahb);
++=======
+ 	pm_runtime_dont_use_autosuspend(&pdev->dev);
+ 	pm_runtime_disable(&pdev->dev);
+ 
+ 	if (!IS_ENABLED(CONFIG_PM)) {
+ 		clk_disable_unprepare(imx_data->clk_per);
+ 		clk_disable_unprepare(imx_data->clk_ipg);
+ 		clk_disable_unprepare(imx_data->clk_ahb);
+ 	}
++>>>>>>> 162d6f98005f (MMC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM)
  
  	sdhci_pltfm_free(pdev);
  
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_PM
+ static int sdhci_esdhc_runtime_suspend(struct device *dev)
+ {
+ 	struct sdhci_host *host = dev_get_drvdata(dev);
+ 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
+ 	struct pltfm_imx_data *imx_data = pltfm_host->priv;
+ 	int ret;
+ 
+ 	ret = sdhci_runtime_suspend_host(host);
+ 
+ 	if (!sdhci_sdio_irq_enabled(host)) {
+ 		clk_disable_unprepare(imx_data->clk_per);
+ 		clk_disable_unprepare(imx_data->clk_ipg);
+ 	}
+ 	clk_disable_unprepare(imx_data->clk_ahb);
+ 
+ 	return ret;
+ }
+ 
+ static int sdhci_esdhc_runtime_resume(struct device *dev)
+ {
+ 	struct sdhci_host *host = dev_get_drvdata(dev);
+ 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
+ 	struct pltfm_imx_data *imx_data = pltfm_host->priv;
+ 
+ 	if (!sdhci_sdio_irq_enabled(host)) {
+ 		clk_prepare_enable(imx_data->clk_per);
+ 		clk_prepare_enable(imx_data->clk_ipg);
+ 	}
+ 	clk_prepare_enable(imx_data->clk_ahb);
+ 
+ 	return sdhci_runtime_resume_host(host);
+ }
+ #endif
+ 
+ static const struct dev_pm_ops sdhci_esdhc_pmops = {
+ 	SET_SYSTEM_SLEEP_PM_OPS(sdhci_pltfm_suspend, sdhci_pltfm_resume)
+ 	SET_RUNTIME_PM_OPS(sdhci_esdhc_runtime_suspend,
+ 				sdhci_esdhc_runtime_resume, NULL)
+ };
+ 
++>>>>>>> 162d6f98005f (MMC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM)
  static struct platform_driver sdhci_esdhc_imx_driver = {
  	.driver		= {
  		.name	= "sdhci-esdhc-imx",
diff --cc drivers/mmc/host/sdhci-s3c.c
index 926aaf6acc67,fbf50efe6288..000000000000
--- a/drivers/mmc/host/sdhci-s3c.c
+++ b/drivers/mmc/host/sdhci-s3c.c
@@@ -689,16 -609,7 +689,20 @@@ static int sdhci_s3c_probe(struct platf
  		goto err_req_regs;
  	}
  
++<<<<<<< HEAD
 +	/* The following two methods of card detection might call
 +	   sdhci_s3c_notify_change() immediately, so they can be called
 +	   only after sdhci_add_host(). Setup errors are ignored. */
 +	if (pdata->cd_type == S3C_SDHCI_CD_EXTERNAL && pdata->ext_cd_init)
 +		pdata->ext_cd_init(&sdhci_s3c_notify_change);
 +	if (pdata->cd_type == S3C_SDHCI_CD_GPIO &&
 +	    gpio_is_valid(pdata->ext_cd_gpio))
 +		sdhci_s3c_setup_card_detect_gpio(sc);
 +
 +#ifdef CONFIG_PM_RUNTIME
++=======
+ #ifdef CONFIG_PM
++>>>>>>> 162d6f98005f (MMC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM)
  	if (pdata->cd_type != S3C_SDHCI_CD_INTERNAL)
  		clk_disable_unprepare(sc->clk_io);
  #endif
@@@ -730,8 -635,8 +734,13 @@@ static int sdhci_s3c_remove(struct plat
  	if (sc->ext_cd_irq)
  		free_irq(sc->ext_cd_irq, sc);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_PM_RUNTIME
 +	if (pdata->cd_type != S3C_SDHCI_CD_INTERNAL)
++=======
+ #ifdef CONFIG_PM
+ 	if (sc->pdata->cd_type != S3C_SDHCI_CD_INTERNAL)
++>>>>>>> 162d6f98005f (MMC / PM: Replace CONFIG_PM_RUNTIME with CONFIG_PM)
  		clk_prepare_enable(sc->clk_io);
  #endif
  	sdhci_remove_host(host, 1);
diff --git a/drivers/mmc/core/bus.c b/drivers/mmc/core/bus.c
index f7afd7d4f277..941514b705be 100644
--- a/drivers/mmc/core/bus.c
+++ b/drivers/mmc/core/bus.c
@@ -171,7 +171,7 @@ static int mmc_bus_resume(struct device *dev)
 }
 #endif
 
-#ifdef CONFIG_PM_RUNTIME
+#ifdef CONFIG_PM
 static int mmc_runtime_suspend(struct device *dev)
 {
 	struct mmc_card *card = mmc_dev_to_card(dev);
@@ -187,7 +187,7 @@ static int mmc_runtime_resume(struct device *dev)
 
 	return host->bus_ops->runtime_resume(host);
 }
-#endif /* !CONFIG_PM_RUNTIME */
+#endif /* !CONFIG_PM */
 
 static const struct dev_pm_ops mmc_bus_pm_ops = {
 	SET_RUNTIME_PM_OPS(mmc_runtime_suspend, mmc_runtime_resume, NULL)
diff --git a/drivers/mmc/host/sdhci-acpi.c b/drivers/mmc/host/sdhci-acpi.c
index 74e9c85fd9b6..0300e9962453 100644
--- a/drivers/mmc/host/sdhci-acpi.c
+++ b/drivers/mmc/host/sdhci-acpi.c
@@ -418,7 +418,7 @@ static int sdhci_acpi_resume(struct device *dev)
 
 #endif
 
-#ifdef CONFIG_PM_RUNTIME
+#ifdef CONFIG_PM
 
 static int sdhci_acpi_runtime_suspend(struct device *dev)
 {
* Unmerged path drivers/mmc/host/sdhci-esdhc-imx.c
diff --git a/drivers/mmc/host/sdhci-pci.c b/drivers/mmc/host/sdhci-pci.c
index a627aad5414a..9239e4e46aeb 100644
--- a/drivers/mmc/host/sdhci-pci.c
+++ b/drivers/mmc/host/sdhci-pci.c
@@ -130,7 +130,7 @@ static int pch_hc_probe_slot(struct sdhci_pci_slot *slot)
 	return 0;
 }
 
-#ifdef CONFIG_PM_RUNTIME
+#ifdef CONFIG_PM
 
 static irqreturn_t sdhci_pci_sd_cd(int irq, void *dev_id)
 {
@@ -1072,15 +1072,6 @@ static int sdhci_pci_resume(struct device *dev)
 	return 0;
 }
 
-#else /* CONFIG_PM */
-
-#define sdhci_pci_suspend NULL
-#define sdhci_pci_resume NULL
-
-#endif /* CONFIG_PM */
-
-#ifdef CONFIG_PM_RUNTIME
-
 static int sdhci_pci_runtime_suspend(struct device *dev)
 {
 	struct pci_dev *pdev = container_of(dev, struct pci_dev, dev);
@@ -1152,7 +1143,12 @@ static int sdhci_pci_runtime_idle(struct device *dev)
 	return 0;
 }
 
-#endif
+#else /* CONFIG_PM */
+
+#define sdhci_pci_suspend NULL
+#define sdhci_pci_resume NULL
+
+#endif /* CONFIG_PM */
 
 static const struct dev_pm_ops sdhci_pci_pm_ops = {
 	.suspend = sdhci_pci_suspend,
diff --git a/drivers/mmc/host/sdhci-pxav3.c b/drivers/mmc/host/sdhci-pxav3.c
index 56d9bee93d8f..f8df396076ce 100644
--- a/drivers/mmc/host/sdhci-pxav3.c
+++ b/drivers/mmc/host/sdhci-pxav3.c
@@ -370,7 +370,7 @@ static int sdhci_pxav3_resume(struct device *dev)
 }
 #endif
 
-#ifdef CONFIG_PM_RUNTIME
+#ifdef CONFIG_PM
 static int sdhci_pxav3_runtime_suspend(struct device *dev)
 {
 	struct sdhci_host *host = dev_get_drvdata(dev);
* Unmerged path drivers/mmc/host/sdhci-s3c.c
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index ed12fc286f94..03a5ec149898 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -62,7 +62,7 @@ static int sdhci_execute_tuning(struct mmc_host *mmc, u32 opcode);
 static void sdhci_tuning_timer(unsigned long data);
 static void sdhci_enable_preset_value(struct sdhci_host *host, bool enable);
 
-#ifdef CONFIG_PM_RUNTIME
+#ifdef CONFIG_PM
 static int sdhci_runtime_pm_get(struct sdhci_host *host);
 static int sdhci_runtime_pm_put(struct sdhci_host *host);
 static void sdhci_runtime_pm_bus_on(struct sdhci_host *host);
@@ -2667,9 +2667,6 @@ int sdhci_resume_host(struct sdhci_host *host)
 }
 
 EXPORT_SYMBOL_GPL(sdhci_resume_host);
-#endif /* CONFIG_PM */
-
-#ifdef CONFIG_PM_RUNTIME
 
 static int sdhci_runtime_pm_get(struct sdhci_host *host)
 {
@@ -2768,7 +2765,7 @@ int sdhci_runtime_resume_host(struct sdhci_host *host)
 }
 EXPORT_SYMBOL_GPL(sdhci_runtime_resume_host);
 
-#endif
+#endif /* CONFIG_PM */
 
 /*****************************************************************************\
  *                                                                           *
diff --git a/drivers/mmc/host/sdhci.h b/drivers/mmc/host/sdhci.h
index 193d73594c5d..e633e9d2b73a 100644
--- a/drivers/mmc/host/sdhci.h
+++ b/drivers/mmc/host/sdhci.h
@@ -399,9 +399,6 @@ extern void sdhci_send_command(struct sdhci_host *host,
 extern int sdhci_suspend_host(struct sdhci_host *host);
 extern int sdhci_resume_host(struct sdhci_host *host);
 extern void sdhci_enable_irq_wakeups(struct sdhci_host *host);
-#endif
-
-#ifdef CONFIG_PM_RUNTIME
 extern int sdhci_runtime_suspend_host(struct sdhci_host *host);
 extern int sdhci_runtime_resume_host(struct sdhci_host *host);
 #endif
