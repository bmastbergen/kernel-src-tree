IB/hfi1: Switch to using the pin query function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mitko Haralanov <mitko.haralanov@intel.com>
commit a7922f7ddf023c93b0c409d7a3557fdf0b5ce343
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a7922f7d.failed

Use the new function to query whether the expected receive
user buffer can be pinned successfully. This requires that
a new variable be added to the hfi1_filedata structure used
to hold the number of pages pinned by the expected receive
code.

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Reviewed-by: Dean Luick <dean.luick@intel.com>
	Signed-off-by: Mitko Haralanov <mitko.haralanov@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit a7922f7ddf023c93b0c409d7a3557fdf0b5ce343)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/hfi.h
#	drivers/staging/rdma/hfi1/user_exp_rcv.c
diff --cc drivers/staging/hfi1/hfi.h
index 6438dccf5749,16cbdc4073e0..000000000000
--- a/drivers/staging/hfi1/hfi.h
+++ b/drivers/staging/hfi1/hfi.h
@@@ -1154,8 -1190,9 +1154,12 @@@ struct hfi1_filedata 
  	struct hfi1_user_sdma_pkt_q *pq;
  	/* for cpu affinity; -1 if none */
  	int rec_cpu_num;
++<<<<<<< HEAD:drivers/staging/hfi1/hfi.h
 +	struct mmu_notifier mn;
++=======
+ 	u32 tid_n_pinned;
++>>>>>>> a7922f7ddf02 (IB/hfi1: Switch to using the pin query function):drivers/staging/rdma/hfi1/hfi.h
  	struct rb_root tid_rb_root;
 -	struct tid_rb_node **entry_to_rb;
  	spinlock_t tid_lock; /* protect tid_[limit,used] counters */
  	u32 tid_limit;
  	u32 tid_used;
* Unmerged path drivers/staging/rdma/hfi1/user_exp_rcv.c
* Unmerged path drivers/staging/hfi1/hfi.h
* Unmerged path drivers/staging/rdma/hfi1/user_exp_rcv.c
