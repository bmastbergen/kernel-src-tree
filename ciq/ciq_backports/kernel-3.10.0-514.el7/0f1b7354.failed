vxlan: Refactor vxlan_udp_encap_recv() to kill compiler warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Geert Uytterhoeven <geert@linux-m68k.org>
commit 0f1b7354e0d65ad528b820a8a46c15d70954f699
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0f1b7354.failed

drivers/net/vxlan.c: In function ‘vxlan_udp_encap_recv’:
drivers/net/vxlan.c:1226: warning: ‘info’ may be used uninitialized in this function

While this warning is a false positive, it can be killed easily by
getting rid of the pointer intermediary and referring directly to the
ip_tunnel_info structure.

	Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
	Reviewed-by: Jiri Benc <jbenc@redhat.com>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0f1b7354e0d65ad528b820a8a46c15d70954f699)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 9d79e4f0a7b6,cf8b7f0473b3..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1157,6 -1126,103 +1157,10 @@@ static struct vxlanhdr *vxlan_remcsum(s
  /* Callback from net/ipv4/udp.c to receive packets */
  static int vxlan_udp_encap_recv(struct sock *sk, struct sk_buff *skb)
  {
++<<<<<<< HEAD
++=======
+ 	struct metadata_dst *tun_dst = NULL;
++>>>>>>> 0f1b7354e0d6 (vxlan: Refactor vxlan_udp_encap_recv() to kill compiler warning)
  	struct vxlan_sock *vs;
  	struct vxlanhdr *vxh;
  	u32 flags, vni;
@@@ -1195,6 -1262,18 +1199,21 @@@
  		vni &= VXLAN_VNI_MASK;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (vxlan_collect_metadata(vs)) {
+ 		tun_dst = udp_tun_rx_dst(skb, vxlan_get_sk_family(vs), TUNNEL_KEY,
+ 					 cpu_to_be64(vni >> 8), sizeof(*md));
+ 
+ 		if (!tun_dst)
+ 			goto drop;
+ 
+ 		md = ip_tunnel_info_opts(&tun_dst->u.tun_info);
+ 	} else {
+ 		memset(md, 0, sizeof(*md));
+ 	}
+ 
++>>>>>>> 0f1b7354e0d6 (vxlan: Refactor vxlan_udp_encap_recv() to kill compiler warning)
  	/* For backwards compatibility, only allow reserved fields to be
  	 * used by VXLAN extensions if explicitly requested.
  	 */
@@@ -1202,13 -1281,16 +1221,20 @@@
  		struct vxlanhdr_gbp *gbp;
  
  		gbp = (struct vxlanhdr_gbp *)vxh;
++<<<<<<< HEAD
 +		md.gbp = ntohs(gbp->policy_id);
++=======
+ 		md->gbp = ntohs(gbp->policy_id);
+ 
+ 		if (tun_dst)
+ 			tun_dst->u.tun_info.key.tun_flags |= TUNNEL_VXLAN_OPT;
++>>>>>>> 0f1b7354e0d6 (vxlan: Refactor vxlan_udp_encap_recv() to kill compiler warning)
  
  		if (gbp->dont_learn)
 -			md->gbp |= VXLAN_GBP_DONT_LEARN;
 +			md.gbp |= VXLAN_GBP_DONT_LEARN;
  
  		if (gbp->policy_applied)
 -			md->gbp |= VXLAN_GBP_POLICY_APPLIED;
 +			md.gbp |= VXLAN_GBP_POLICY_APPLIED;
  
  		flags &= ~VXLAN_GBP_USED_BITS;
  	}
* Unmerged path drivers/net/vxlan.c
