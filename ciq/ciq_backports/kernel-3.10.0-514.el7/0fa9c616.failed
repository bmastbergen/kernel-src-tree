HID: multitouch: remove registered devices with default behavior

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hid] multitouch: remove registered devices with default behavior (Benjamin Tissoires) [1311883]
Rebuild_FUZZ: 95.93%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit 0fa9c61618fe996c153d186e4087a61ca4e7b2ed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0fa9c616.failed

The default multitouch protocol class in use since the kernel v3.9 is
working quite well. Since its inclusion, the only devices we had to tweak
were those who really need quirks (GeneralTouch, FocalTech and Wistron,
the 3 of them are Win 7 certified ones).
The flow of new unhandled devices has stopped, which is great and I think
it's time to reduce the list of registered device.

This commit removes only the registration in the kernel of devices that
use the class MT_CLS_DEFAULT, or that can use it. By that, I mean that I
checked all the recordings I have, and the produced input device and
events are the same before and after applying the patch.

This gives two benefits:
- remove a bunch of lines of codes
- prevent bad handling of existing registered devices which are using a
different protocol while using the same VID/PID (I got the case of a
Quanta 3008 recently).

I also removed the associated classes (MT_CLS*). I kept their #define in
case people use the new_id sysfs node with a non standard class (their
should be really few people now, but we never now). This is why there
are /* reserved .... */.

Last, I add a comment on top of mt_devices[] definition to remember people
(and myself) not to include devices for the beauty of it.

To people still trying to add devices with the default class:
"""
Guys, try out your device under a kernel greater or equal to v3.9. If it
works, you are all set. Adding your VID/PID to the kernel only brings us
overload and you won't get anything from it _because_ even a backport of
this shiny patch will _not_ make the device work under 3.0, 3.2, 3.4 or
even 3.8.
So if it works, it works.
If it does not work, then yes, submit a patch or call for help.
In any cases, if you want me to do regression tests, I'd be happy to
get some traces of your device. But I won't patch the kernel if it works.
"""

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 0fa9c61618fe996c153d186e4087a61ca4e7b2ed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/hid-multitouch.c
diff --cc drivers/hid/hid-multitouch.c
index 275883fd84d6,3e81f4e1c7c1..000000000000
--- a/drivers/hid/hid-multitouch.c
+++ b/drivers/hid/hid-multitouch.c
@@@ -128,11 -128,12 +128,17 @@@ static void mt_post_parse(struct mt_dev
  #define MT_CLS_CONFIDENCE_MINUS_ONE		0x0005
  #define MT_CLS_DUAL_INRANGE_CONTACTID		0x0006
  #define MT_CLS_DUAL_INRANGE_CONTACTNUMBER	0x0007
- #define MT_CLS_DUAL_NSMU_CONTACTID		0x0008
+ /* reserved					0x0008 */
  #define MT_CLS_INRANGE_CONTACTNUMBER		0x0009
  #define MT_CLS_NSMU				0x000a
++<<<<<<< HEAD
 +#define MT_CLS_DUAL_CONTACT_NUMBER		0x0010
 +#define MT_CLS_DUAL_CONTACT_ID			0x0011
++=======
+ /* reserved					0x0010 */
+ /* reserved					0x0011 */
+ #define MT_CLS_WIN_8				0x0012
++>>>>>>> 0fa9c61618fe (HID: multitouch: remove registered devices with default behavior)
  
  /* vendor specific classes */
  #define MT_CLS_3M				0x0101
@@@ -191,20 -192,11 +197,24 @@@ static struct mt_class mt_classes[] = 
  	{ .name = MT_CLS_INRANGE_CONTACTNUMBER,
  		.quirks = MT_QUIRK_VALID_IS_INRANGE |
  			MT_QUIRK_SLOT_IS_CONTACTNUMBER },
++<<<<<<< HEAD
 +	{ .name = MT_CLS_DUAL_CONTACT_NUMBER,
 +		.quirks = MT_QUIRK_ALWAYS_VALID |
 +			MT_QUIRK_CONTACT_CNT_ACCURATE |
 +			MT_QUIRK_SLOT_IS_CONTACTNUMBER,
 +		.maxcontacts = 2 },
 +	{ .name = MT_CLS_DUAL_CONTACT_ID,
 +		.quirks = MT_QUIRK_ALWAYS_VALID |
 +			MT_QUIRK_CONTACT_CNT_ACCURATE |
 +			MT_QUIRK_SLOT_IS_CONTACTID,
 +		.maxcontacts = 2 },
++=======
+ 	{ .name = MT_CLS_WIN_8,
+ 		.quirks = MT_QUIRK_ALWAYS_VALID |
+ 			MT_QUIRK_IGNORE_DUPLICATES |
+ 			MT_QUIRK_HOVERING |
+ 			MT_QUIRK_CONTACT_CNT_ACCURATE },
++>>>>>>> 0fa9c61618fe (HID: multitouch: remove registered devices with default behavior)
  
  	/*
  	 * vendor specific classes
@@@ -1378,13 -1276,13 +1300,8 @@@ static const struct hid_device_id mt_de
  		MT_USB_DEVICE(USB_VENDOR_ID_XIROKU,
  			USB_DEVICE_ID_XIROKU_CSR2) },
  
- 	/* Zytronic panels */
- 	{ .driver_data = MT_CLS_SERIAL,
- 		MT_USB_DEVICE(USB_VENDOR_ID_ZYTRONIC,
- 			USB_DEVICE_ID_ZYTRONIC_ZXY100) },
- 
  	/* Generic MT device */
  	{ HID_DEVICE(HID_BUS_ANY, HID_GROUP_MULTITOUCH, HID_ANY_ID, HID_ANY_ID) },
 -
 -	/* Generic Win 8 certified MT device */
 -	{  .driver_data = MT_CLS_WIN_8,
 -		HID_DEVICE(HID_BUS_ANY, HID_GROUP_MULTITOUCH_WIN_8,
 -			HID_ANY_ID, HID_ANY_ID) },
  	{ }
  };
  MODULE_DEVICE_TABLE(hid, mt_devices);
* Unmerged path drivers/hid/hid-multitouch.c
