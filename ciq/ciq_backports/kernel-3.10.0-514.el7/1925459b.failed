tools build: Fix feature Makefile issues with 'O='

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [tools] build: Fix feature Makefile issues with 'O=' (Jiri Olsa) [1323852]
Rebuild_FUZZ: 93.62%
commit-author Josh Poimboeuf <jpoimboe@redhat.com>
commit 1925459b4d92d92e62d67ddc763cda650d2aa79c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1925459b.failed

When building perf binaries outside the source tree with 'make O=<dir>',
the auto-detected features get re-tested for every build, which is
unnecessary and inconsistent with the behavior seen when building
directly in the source tree.

Another issue is that 'make O=<dir> clean' doesn't remove the feature
files from the object tree.

Fix these problems by looking for the binaries in the $(OUTPUT)
directory.

	Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/113bd01530e9761778c60a75a96c65fc59860f68.1450193761.git.jpoimboe@redhat.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 1925459b4d92d92e62d67ddc763cda650d2aa79c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/feature/Makefile
diff --cc tools/build/feature/Makefile
index a389efb207e0,bf8f0352264d..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -34,8 -33,12 +33,10 @@@ FILES=					
  	test-compile-32.bin		\
  	test-compile-x32.bin		\
  	test-zlib.bin			\
 -	test-lzma.bin			\
 -	test-bpf.bin			\
 -	test-get_cpuid.bin
 +	test-lzma.bin
  
+ FILES := $(addprefix $(OUTPUT),$(FILES))
+ 
  CC := $(CROSS_COMPILE)gcc -MD
  PKG_CONFIG := $(CROSS_COMPILE)pkg-config
  
@@@ -117,55 -120,61 +118,65 @@@ PERL_EMBED_LIBADD = $(call grep-libs,$(
  PERL_EMBED_CCOPTS = `perl -MExtUtils::Embed -e ccopts 2>/dev/null`
  FLAGS_PERL_EMBED=$(PERL_EMBED_CCOPTS) $(PERL_EMBED_LDOPTS)
  
- test-libperl.bin:
+ $(OUTPUT)test-libperl.bin:
  	$(BUILD) $(FLAGS_PERL_EMBED)
  
- test-libpython.bin:
+ $(OUTPUT)test-libpython.bin:
  	$(BUILD)
  
- test-libpython-version.bin:
+ $(OUTPUT)test-libpython-version.bin:
  	$(BUILD)
  
- test-libbfd.bin:
+ $(OUTPUT)test-libbfd.bin:
  	$(BUILD) -DPACKAGE='"perf"' -lbfd -lz -liberty -ldl
  
- test-liberty.bin:
- 	$(CC) $(CFLAGS) -Wall -Werror -o $(OUTPUT)$@ test-libbfd.c -DPACKAGE='"perf"' $(LDFLAGS) -lbfd -ldl -liberty
+ $(OUTPUT)test-liberty.bin:
+ 	$(CC) $(CFLAGS) -Wall -Werror -o $@ test-libbfd.c -DPACKAGE='"perf"' $(LDFLAGS) -lbfd -ldl -liberty
  
- test-liberty-z.bin:
- 	$(CC) $(CFLAGS) -Wall -Werror -o $(OUTPUT)$@ test-libbfd.c -DPACKAGE='"perf"' $(LDFLAGS) -lbfd -ldl -liberty -lz
+ $(OUTPUT)test-liberty-z.bin:
+ 	$(CC) $(CFLAGS) -Wall -Werror -o $@ test-libbfd.c -DPACKAGE='"perf"' $(LDFLAGS) -lbfd -ldl -liberty -lz
  
- test-cplus-demangle.bin:
+ $(OUTPUT)test-cplus-demangle.bin:
  	$(BUILD) -liberty
  
- test-backtrace.bin:
+ $(OUTPUT)test-backtrace.bin:
  	$(BUILD)
  
- test-timerfd.bin:
+ $(OUTPUT)test-timerfd.bin:
  	$(BUILD)
  
- test-libdw-dwarf-unwind.bin:
+ $(OUTPUT)test-libdw-dwarf-unwind.bin:
  	$(BUILD) # -ldw provided by $(FEATURE_CHECK_LDFLAGS-libdw-dwarf-unwind)
  
- test-libbabeltrace.bin:
+ $(OUTPUT)test-libbabeltrace.bin:
  	$(BUILD) # -lbabeltrace provided by $(FEATURE_CHECK_LDFLAGS-libbabeltrace)
  
- test-sync-compare-and-swap.bin:
+ $(OUTPUT)test-sync-compare-and-swap.bin:
  	$(BUILD)
  
- test-compile-32.bin:
- 	$(CC) -m32 -o $(OUTPUT)$@ test-compile.c
+ $(OUTPUT)test-compile-32.bin:
+ 	$(CC) -m32 -o $@ test-compile.c
  
- test-compile-x32.bin:
- 	$(CC) -mx32 -o $(OUTPUT)$@ test-compile.c
+ $(OUTPUT)test-compile-x32.bin:
+ 	$(CC) -mx32 -o $@ test-compile.c
  
- test-zlib.bin:
+ $(OUTPUT)test-zlib.bin:
  	$(BUILD) -lz
  
- test-lzma.bin:
+ $(OUTPUT)test-lzma.bin:
  	$(BUILD) -llzma
  
++<<<<<<< HEAD
 +-include *.d
++=======
+ $(OUTPUT)test-get_cpuid.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-bpf.bin:
+ 	$(BUILD)
+ 
+ -include $(OUTPUT)*.d
++>>>>>>> 1925459b4d92 (tools build: Fix feature Makefile issues with 'O=')
  
  ###############################
  
diff --git a/tools/build/Makefile.feature b/tools/build/Makefile.feature
index 7e9e66ab0d09..19adc87157f9 100644
--- a/tools/build/Makefile.feature
+++ b/tools/build/Makefile.feature
@@ -7,7 +7,7 @@ endif
 
 feature_check = $(eval $(feature_check_code))
 define feature_check_code
-  feature-$(1) := $(shell $(MAKE) OUTPUT=$(OUTPUT_FEATURES) CFLAGS="$(EXTRA_CFLAGS) $(FEATURE_CHECK_CFLAGS-$(1))" LDFLAGS="$(LDFLAGS) $(FEATURE_CHECK_LDFLAGS-$(1))" -C $(feature_dir) test-$1.bin >/dev/null 2>/dev/null && echo 1 || echo 0)
+  feature-$(1) := $(shell $(MAKE) OUTPUT=$(OUTPUT_FEATURES) CFLAGS="$(EXTRA_CFLAGS) $(FEATURE_CHECK_CFLAGS-$(1))" LDFLAGS="$(LDFLAGS) $(FEATURE_CHECK_LDFLAGS-$(1))" -C $(feature_dir) $(OUTPUT_FEATURES)test-$1.bin >/dev/null 2>/dev/null && echo 1 || echo 0)
 endef
 
 feature_set = $(eval $(feature_set_code))
* Unmerged path tools/build/feature/Makefile
