mmc: tmio: remove TMIO_MMC_HAVE_CTL_DMA_REG flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit de122cb1745313f331dc7c7923b484343d455e64
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/de122cb1.failed

tmio_mmc_host has .enable_dma callback now.
We don't need TMIO_MMC_HAVE_CTL_DMA_REG anymore.
Let's remove it

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Acked-by: Lee Jones <lee.jones@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit de122cb1745313f331dc7c7923b484343d455e64)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mobile_sdhi.c
#	drivers/mmc/host/tmio_mmc_dma.c
#	include/linux/mfd/tmio.h
diff --cc drivers/mmc/host/sh_mobile_sdhi.c
index 79ee6f0c45bd,6906a905cd54..000000000000
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@@ -196,6 -281,16 +196,19 @@@ static int sh_mobile_sdhi_probe(struct 
  	 */
  	mmc_data->flags |= TMIO_MMC_SDIO_IRQ;
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * All SDHI have CMD12 controll bit
+ 	 */
+ 	mmc_data->flags |= TMIO_MMC_HAVE_CMD12_CTRL;
+ 
+ 	/*
+ 	 * All SDHI need SDIO_INFO1 reserved bit
+ 	 */
+ 	mmc_data->flags |= TMIO_MMC_SDIO_STATUS_QUIRK;
+ 
++>>>>>>> de122cb17453 (mmc: tmio: remove TMIO_MMC_HAVE_CTL_DMA_REG flag)
  	if (of_id && of_id->data) {
  		const struct sh_mobile_sdhi_of_data *of_data = of_id->data;
  		mmc_data->flags |= of_data->tmio_flags;
diff --cc drivers/mmc/host/tmio_mmc_dma.c
index a8aaa7871c0d,331bb618e398..000000000000
--- a/drivers/mmc/host/tmio_mmc_dma.c
+++ b/drivers/mmc/host/tmio_mmc_dma.c
@@@ -28,10 -28,8 +28,15 @@@ void tmio_mmc_enable_dma(struct tmio_mm
  	if (!host->chan_tx || !host->chan_rx)
  		return;
  
++<<<<<<< HEAD
 +#if defined(CONFIG_SUPERH) || defined(CONFIG_ARCH_SHMOBILE)
 +	/* Switch DMA mode on or off - SuperH specific? */
 +	sd_ctrl_write16(host, CTL_DMA_ENABLE, enable ? 2 : 0);
 +#endif
++=======
+ 	if (host->dma->enable)
+ 		host->dma->enable(host, enable);
++>>>>>>> de122cb17453 (mmc: tmio: remove TMIO_MMC_HAVE_CTL_DMA_REG flag)
  }
  
  void tmio_mmc_abort_dma(struct tmio_mmc_host *host)
diff --cc include/linux/mfd/tmio.h
index 38409958f913,605812820e48..000000000000
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@@ -77,6 -77,29 +77,32 @@@
   */
  #define TMIO_MMC_USE_GPIO_CD		(1 << 5)
  
++<<<<<<< HEAD
++=======
+ /*
+  * Some controllers doesn't have over 0x100 register.
+  * it is used to checking accessibility of
+  * CTL_SD_CARD_CLK_CTL / CTL_CLK_AND_WAIT_CTL
+  */
+ #define TMIO_MMC_HAVE_HIGH_REG		(1 << 6)
+ 
+ /*
+  * Some controllers have CMD12 automatically
+  * issue/non-issue register
+  */
+ #define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
+ 
+ /*
+  * Some controllers needs to set 1 on SDIO status reserved bits
+  */
+ #define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
+ 
+ /*
+  * Some controllers allows to set SDx actual clock
+  */
+ #define TMIO_MMC_CLK_ACTUAL		(1 << 10)
+ 
++>>>>>>> de122cb17453 (mmc: tmio: remove TMIO_MMC_HAVE_CTL_DMA_REG flag)
  int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
  int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
  void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
* Unmerged path drivers/mmc/host/sh_mobile_sdhi.c
* Unmerged path drivers/mmc/host/tmio_mmc_dma.c
* Unmerged path include/linux/mfd/tmio.h
