mei: cancel driver workers only after client devices were removed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Tomas Winkler <tomas.winkler@intel.com>
commit 97ccf63f42721e758bb3cd1aa8967a89d26ed0bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/97ccf63f.failed

In process of client devices removal from the bus there still
might be communication between a driver and the mei device
hence we need to cancel supporting workers only after all
the client devices were removed.

	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 97ccf63f42721e758bb3cd1aa8967a89d26ed0bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/init.c
diff --cc drivers/misc/mei/init.c
index 08331e745faf,3edafc8d3ad4..000000000000
--- a/drivers/misc/mei/init.c
+++ b/drivers/misc/mei/init.c
@@@ -298,14 -327,12 +298,19 @@@ static void mei_reset_work(struct work_
  
  void mei_stop(struct mei_device *dev)
  {
 -	dev_dbg(dev->dev, "stopping the device.\n");
 +	dev_dbg(&dev->pdev->dev, "stopping the device.\n");
  
++<<<<<<< HEAD
 +	mei_cancel_work(dev);
 +
 +	mei_nfc_host_exit(dev);
 +
++=======
++>>>>>>> 97ccf63f4272 (mei: cancel driver workers only after client devices were removed)
  	mei_cl_bus_remove_devices(dev);
  
+ 	mei_cancel_work(dev);
+ 
  	mutex_lock(&dev->device_lock);
  
  	mei_wd_stop(dev);
* Unmerged path drivers/misc/mei/init.c
