s390/cpumf: Fix lpp detection

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [s390] cpumf: Fix lpp detection (Hendrik Brueckner) [1339534]
Rebuild_FUZZ: 90.57%
commit-author Christian Borntraeger <borntraeger@de.ibm.com>
commit 7a76aa95f6f6682db5629449d763251d1c9f8c4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7a76aa95.failed

we have to check bit 40 of the facility list before issuing LPP
and not bit 48. Otherwise a guest running on a system with
"The decimal-floating-point zoned-conversion facility" and without
the "The set-program-parameters facility" might crash on an lpp
instruction.

	Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: stable@vger.kernel.org # v4.4+
Fixes: e22cf8ca6f75 ("s390/cpumf: rework program parameter setting to detect guest samples")
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 7a76aa95f6f6682db5629449d763251d1c9f8c4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/head64.S
diff --cc arch/s390/kernel/head64.S
index d7c00507568a,03c2b469c472..000000000000
--- a/arch/s390/kernel/head64.S
+++ b/arch/s390/kernel/head64.S
@@@ -16,7 -16,12 +16,16 @@@
  
  __HEAD
  ENTRY(startup_continue)
++<<<<<<< HEAD
 +	larl	%r1,sched_clock_base_cc
++=======
+ 	tm	__LC_STFLE_FAC_LIST+5,0x80	# LPP available ?
+ 	jz	0f
+ 	xc	__LC_LPP+1(7,0),__LC_LPP+1	# clear lpp and current_pid
+ 	mvi	__LC_LPP,0x80			#   and set LPP_MAGIC
+ 	.insn	s,0xb2800000,__LC_LPP		# load program parameter
+ 0:	larl	%r1,sched_clock_base_cc
++>>>>>>> 7a76aa95f6f6 (s390/cpumf: Fix lpp detection)
  	mvc	0(8,%r1),__LC_LAST_UPDATE_CLOCK
  	larl	%r13,.LPG1		# get base
  	lctlg	%c0,%c15,.Lctl-.LPG1(%r13)	# load control registers
* Unmerged path arch/s390/kernel/head64.S
