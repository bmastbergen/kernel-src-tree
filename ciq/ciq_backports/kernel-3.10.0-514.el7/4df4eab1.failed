iommu/vt-d: Really use upper context table when necessary

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [iommu] vt-d: Really use upper context table when necessary (Myron Stowe) [1299039]
Rebuild_FUZZ: 94.44%
commit-author Joerg Roedel <jroedel@suse.de>
commit 4df4eab168c1c4058603be55a3169d4a45779cc0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4df4eab1.failed

There is a bug in iommu_context_addr() which will always use
the lower context table, even when the upper context table
needs to be used. Fix this issue.

Fixes: 03ecc32c5274 ("iommu/vt-d: support extended root and context entries")
	Reported-by: Xiao, Nan <nan.xiao@hp.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 4df4eab168c1c4058603be55a3169d4a45779cc0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel-iommu.c
diff --cc drivers/iommu/intel-iommu.c
index 04026fd77657,63daf1ba04b7..000000000000
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@@ -659,7 -803,8 +659,12 @@@ static inline struct context_entry *iom
  	struct context_entry *context;
  	u64 *entry;
  
++<<<<<<< HEAD
 +	if (ecap_ecs(iommu->ecap)) {
++=======
+ 	entry = &root->lo;
+ 	if (ecs_enabled(iommu)) {
++>>>>>>> 4df4eab168c1 (iommu/vt-d: Really use upper context table when necessary)
  		if (devfn >= 0x80) {
  			devfn -= 0x80;
  			entry = &root->hi;
* Unmerged path drivers/iommu/intel-iommu.c
