perf hists: Introduce hists__for_each_format macro

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit f0786af536bb0ba54cb516eee493af03cefdbaa3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f0786af5.failed

With the hist object having the perf_hpp_list we can now iterate output
format entries based in the hists object. Adding hists__for_each_format
macro to do that.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1453109064-1026-26-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit f0786af536bb0ba54cb516eee493af03cefdbaa3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/hists.c
#	tools/perf/ui/gtk/hists.c
#	tools/perf/ui/hist.c
#	tools/perf/ui/stdio/hist.c
diff --cc tools/perf/ui/browsers/hists.c
index 29794dff01f7,3a1e0965a8fd..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -1095,8 -1095,9 +1095,14 @@@ static int hist_browser__show_entry(str
  
  		hist_browser__gotorc(browser, row, 0);
  
++<<<<<<< HEAD
 +		perf_hpp__for_each_format(fmt) {
 +			if (perf_hpp__should_skip(fmt) || column++ < browser->b.horiz_scroll)
++=======
+ 		hists__for_each_format(browser->hists, fmt) {
+ 			if (perf_hpp__should_skip(fmt, entry->hists) ||
+ 			    column++ < browser->b.horiz_scroll)
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  				continue;
  
  			if (current_entry && browser->b.navkeypressed) {
@@@ -1174,8 -1175,8 +1180,13 @@@ static int hists_browser__scnprintf_hea
  			return ret;
  	}
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
 +		if (perf_hpp__should_skip(fmt)  || column++ < browser->b.horiz_scroll)
++=======
+ 	hists__for_each_format(browser->hists, fmt) {
+ 		if (perf_hpp__should_skip(fmt, hists)  || column++ < browser->b.horiz_scroll)
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  			continue;
  
  		ret = fmt->header(fmt, &dummy_hpp, hists_to_evsel(hists));
@@@ -1440,8 -1441,8 +1451,13 @@@ static int hist_browser__fprintf_entry(
  	if (symbol_conf.use_callchain)
  		printed += fprintf(fp, "%c ", folded_sign);
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
 +		if (perf_hpp__should_skip(fmt))
++=======
+ 	hists__for_each_format(browser->hists, fmt) {
+ 		if (perf_hpp__should_skip(fmt, he->hists))
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  			continue;
  
  		if (!first) {
@@@ -2057,7 -2104,7 +2073,11 @@@ static int perf_evsel__hists_browse(str
  	memset(options, 0, sizeof(options));
  	memset(actions, 0, sizeof(actions));
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
++=======
+ 	hists__for_each_format(browser->hists, fmt) {
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  		perf_hpp__reset_width(fmt, hists);
  		/*
  		 * This is done just once, and activates the horizontal scrolling
diff --cc tools/perf/ui/gtk/hists.c
index 467717276ab6,32cc38a5b57f..000000000000
--- a/tools/perf/ui/gtk/hists.c
+++ b/tools/perf/ui/gtk/hists.c
@@@ -306,7 -306,7 +306,11 @@@ static void perf_gtk__show_hists(GtkWid
  
  	nr_cols = 0;
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt)
++=======
+ 	hists__for_each_format(hists, fmt)
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  		col_types[nr_cols++] = G_TYPE_STRING;
  
  	store = gtk_tree_store_newv(nr_cols, col_types);
@@@ -317,8 -317,8 +321,13 @@@
  
  	col_idx = 0;
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
 +		if (perf_hpp__should_skip(fmt))
++=======
+ 	hists__for_each_format(hists, fmt) {
+ 		if (perf_hpp__should_skip(fmt, hists))
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  			continue;
  
  		/*
@@@ -367,8 -367,8 +376,13 @@@
  
  		col_idx = 0;
  
++<<<<<<< HEAD
 +		perf_hpp__for_each_format(fmt) {
 +			if (perf_hpp__should_skip(fmt))
++=======
+ 		hists__for_each_format(hists, fmt) {
+ 			if (perf_hpp__should_skip(fmt, h->hists))
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  				continue;
  
  			if (fmt->color)
diff --cc tools/perf/ui/hist.c
index f3d12f9f2181,1ba4117d9c2d..000000000000
--- a/tools/perf/ui/hist.c
+++ b/tools/perf/ui/hist.c
@@@ -616,8 -622,8 +616,13 @@@ unsigned int hists__sort_list_width(str
  	bool first = true;
  	struct perf_hpp dummy_hpp;
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
 +		if (perf_hpp__should_skip(fmt))
++=======
+ 	hists__for_each_format(hists, fmt) {
+ 		if (perf_hpp__should_skip(fmt, hists))
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  			continue;
  
  		if (first)
diff --cc tools/perf/ui/stdio/hist.c
index 28fcb1ee0342,1a6e8f7f38c4..000000000000
--- a/tools/perf/ui/stdio/hist.c
+++ b/tools/perf/ui/stdio/hist.c
@@@ -384,8 -384,8 +384,13 @@@ static int hist_entry__snprintf(struct 
  	if (symbol_conf.exclude_other && !he->parent)
  		return 0;
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
 +		if (perf_hpp__should_skip(fmt))
++=======
+ 	hists__for_each_format(he->hists, fmt) {
+ 		if (perf_hpp__should_skip(fmt, he->hists))
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  			continue;
  
  		/*
@@@ -453,7 -453,7 +458,11 @@@ size_t hists__fprintf(struct hists *his
  
  	init_rem_hits();
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt)
++=======
+ 	hists__for_each_format(hists, fmt)
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  		perf_hpp__reset_width(fmt, hists);
  
  	if (symbol_conf.col_width_list_str)
@@@ -464,8 -464,8 +473,13 @@@
  
  	fprintf(fp, "# ");
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
 +		if (perf_hpp__should_skip(fmt))
++=======
+ 	hists__for_each_format(hists, fmt) {
+ 		if (perf_hpp__should_skip(fmt, hists))
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  			continue;
  
  		if (!first)
@@@ -488,10 -488,10 +502,14 @@@
  
  	fprintf(fp, "# ");
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_format(fmt) {
++=======
+ 	hists__for_each_format(hists, fmt) {
++>>>>>>> f0786af536bb (perf hists: Introduce hists__for_each_format macro)
  		unsigned int i;
  
 -		if (perf_hpp__should_skip(fmt, hists))
 +		if (perf_hpp__should_skip(fmt))
  			continue;
  
  		if (!first)
* Unmerged path tools/perf/ui/browsers/hists.c
* Unmerged path tools/perf/ui/gtk/hists.c
* Unmerged path tools/perf/ui/hist.c
* Unmerged path tools/perf/ui/stdio/hist.c
diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h
index 9ddf2f915eef..4080caf59439 100644
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@ -252,6 +252,9 @@ static inline void perf_hpp__register_sort_field(struct perf_hpp_fmt *format)
 #define perf_hpp_list__for_each_sort_list_safe(_list, format, tmp)	\
 	list_for_each_entry_safe(format, tmp, &(_list)->sorts, sort_list)
 
+#define hists__for_each_format(hists, format) \
+	perf_hpp_list__for_each_format((hists)->hpp_list, fmt)
+
 extern struct perf_hpp_fmt perf_hpp__format[];
 
 enum {
