perf tools: Fix build on older systems

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 2c97b0d4a757eec7b83acfe3895d94ad4db13827
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2c97b0d4.failed

In RHEL 6.7:

  CC       /tmp/build/perf/util/parse-events.o
  cc1: warnings being treated as errors
  util/parse-events.c: In function ‘parse_events_add_cache’:
  util/parse-events.c:366: error: declaration of ‘error’ shadows a global declaration
  util/util.h:136: error: shadowed declaration is here

Rename it to 'err'.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Fixes: 43d0b97817a4 ("perf tools: Enable config and setting names for legacy cache events")
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 2c97b0d4a757eec7b83acfe3895d94ad4db13827)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/parse-events.c
diff --cc tools/perf/util/parse-events.c
index ee3541614df9,2b8770821365..000000000000
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@@ -320,11 -350,25 +320,17 @@@ static int parse_aliases(char *str, con
  	return -1;
  }
  
 -typedef int config_term_func_t(struct perf_event_attr *attr,
 -			       struct parse_events_term *term,
 -			       struct parse_events_error *err);
 -static int config_term_common(struct perf_event_attr *attr,
 -			      struct parse_events_term *term,
 -			      struct parse_events_error *err);
 -static int config_attr(struct perf_event_attr *attr,
 -		       struct list_head *head,
 -		       struct parse_events_error *err,
 -		       config_term_func_t config_term);
 -
  int parse_events_add_cache(struct list_head *list, int *idx,
++<<<<<<< HEAD
 +			   char *type, char *op_result1, char *op_result2)
++=======
+ 			   char *type, char *op_result1, char *op_result2,
+ 			   struct parse_events_error *err,
+ 			   struct list_head *head_config)
++>>>>>>> 2c97b0d4a757 (perf tools: Fix build on older systems)
  {
  	struct perf_event_attr attr;
 -	LIST_HEAD(config_terms);
 -	char name[MAX_NAME_LEN], *config_name;
 +	char name[MAX_NAME_LEN];
  	int cache_type = -1, cache_op = -1, cache_result = -1;
  	char *op_result[2] = { op_result1, op_result2 };
  	int i, n;
@@@ -378,10 -423,19 +384,23 @@@
  	memset(&attr, 0, sizeof(attr));
  	attr.config = cache_type | (cache_op << 8) | (cache_result << 16);
  	attr.type = PERF_TYPE_HW_CACHE;
++<<<<<<< HEAD
 +	return add_event(list, idx, &attr, name);
++=======
+ 
+ 	if (head_config) {
+ 		if (config_attr(&attr, head_config, err,
+ 				config_term_common))
+ 			return -EINVAL;
+ 
+ 		if (get_config_terms(head_config, &config_terms))
+ 			return -ENOMEM;
+ 	}
+ 	return add_event(list, idx, &attr, config_name ? : name, &config_terms);
++>>>>>>> 2c97b0d4a757 (perf tools: Fix build on older systems)
  }
  
 -static void tracepoint_error(struct parse_events_error *e, int err,
 +static void tracepoint_error(struct parse_events_error *error, int err,
  			     char *sys, char *name)
  {
  	char help[BUFSIZ];
* Unmerged path tools/perf/util/parse-events.c
