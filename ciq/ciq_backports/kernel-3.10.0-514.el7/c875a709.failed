nvme: Avoid reset work on watchdog timer function during error recovery

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [nvme] Avoid reset work on watchdog timer function during error recovery (David Milburn) [1353264]
Rebuild_FUZZ: 95.59%
commit-author Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
commit c875a7093f0479215cf9bf51356d7638f2ec5746
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c875a709.failed

This patch adds a check on nvme_watchdog_timer() function to avoid the
call to reset_work() when an error recovery process is ongoing on
controller. The check is made by looking at pci_channel_offline()
result.

If we don't check for this on nvme_watchdog_timer(), error recovery
mechanism can't recover well, because reset_work() won't be able to
do its job (since we're in the middle of an error) and so the
controller is removed from the system before error recovery mechanism
can perform slot reset (which would allow the adapter to recover).

In this patch we also have split the huge condition expression on
nvme_watchdog_timer() by introducing an auxiliary function to help
make the code more readable.

	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit c875a7093f0479215cf9bf51356d7638f2ec5746)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
* Unmerged path drivers/nvme/host/pci.c
* Unmerged path drivers/nvme/host/pci.c
