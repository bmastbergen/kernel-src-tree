IB/mlx5: Add support for hca_core_clock and timestamp_mask

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Matan Barak <matanb@mellanox.com>
commit 7c60bcbb68122b39fe3e92143abce01be75f3fa6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7c60bcbb.failed

Reporting the hca_core_clock (in kHZ) and the timestamp_mask in
query_device extended verb. timestamp_mask is used by users in order
to know what is the valid range of the raw timestamps, while
hca_core_clock reports the clock frequency that is used for
timestamps.

	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Reviewed-by: Moshe Lazer <moshel@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 7c60bcbb68122b39fe3e92143abce01be75f3fa6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 131a2737cfa3,091d8343d594..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -814,36 -787,30 +814,49 @@@ struct mlx5_ifc_cmd_hca_cap_bits 
  	u8         reserved_60[0x1b];
  	u8         log_max_wq_sz[0x5];
  
 -	u8         reserved_61[0xa0];
 -
 +	u8         nic_vport_change_event[0x1];
 +	u8         reserved_61[0xa];
 +	u8         log_max_vlan_list[0x5];
  	u8         reserved_62[0x3];
 +	u8         log_max_current_mc_list[0x5];
 +	u8         reserved_63[0x3];
 +	u8         log_max_current_uc_list[0x5];
 +
 +	u8         reserved_64[0x80];
 +
 +	u8         reserved_65[0x3];
  	u8         log_max_l2_table[0x5];
 -	u8         reserved_63[0x8];
 +	u8         reserved_66[0x8];
  	u8         log_uar_page_sz[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_67[0xe0];
 +
 +	u8         reserved_68[0x1f];
++=======
+ 	u8	   reserved_64[0x20];
+ 	u8	   device_frequency_mhz[0x20];
+ 	u8	   device_frequency_khz[0x20];
+ 	u8         reserved_65[0xa0];
+ 
+ 	u8         reserved_66[0x1f];
++>>>>>>> 7c60bcbb6812 (IB/mlx5: Add support for hca_core_clock and timestamp_mask)
  	u8         cqe_zip[0x1];
  
  	u8         cqe_zip_timeout[0x10];
  	u8         cqe_zip_max_num[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_69[0x220];
++=======
+ 	u8         reserved_67[0x220];
++>>>>>>> 7c60bcbb6812 (IB/mlx5: Add support for hca_core_clock and timestamp_mask)
  };
  
 -enum {
 -	MLX5_DEST_FORMAT_STRUCT_DESTINATION_TYPE_FLOW_TABLE_  = 0x1,
 -	MLX5_DEST_FORMAT_STRUCT_DESTINATION_TYPE_TIR          = 0x2,
 +enum mlx5_flow_destination_type {
 +	MLX5_FLOW_DESTINATION_TYPE_VPORT        = 0x0,
 +	MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE   = 0x1,
 +	MLX5_FLOW_DESTINATION_TYPE_TIR          = 0x2,
  };
  
  struct mlx5_ifc_dest_format_struct_bits {
diff --git a/drivers/infiniband/hw/mlx5/main.c b/drivers/infiniband/hw/mlx5/main.c
index 61492f566ac3..316adbaf6c7c 100644
--- a/drivers/infiniband/hw/mlx5/main.c
+++ b/drivers/infiniband/hw/mlx5/main.c
@@ -503,6 +503,8 @@ static int mlx5_ib_query_device(struct ib_device *ibdev,
 	props->max_total_mcast_qp_attach = props->max_mcast_qp_attach *
 					   props->max_mcast_grp;
 	props->max_map_per_fmr = INT_MAX; /* no limit in ConnectIB */
+	props->hca_core_clock = MLX5_CAP_GEN(mdev, device_frequency_khz);
+	props->timestamp_mask = 0x7FFFFFFFFFFFFFFFULL;
 
 #ifdef CONFIG_INFINIBAND_ON_DEMAND_PAGING
 	if (MLX5_CAP_GEN(mdev, pg))
* Unmerged path include/linux/mlx5/mlx5_ifc.h
