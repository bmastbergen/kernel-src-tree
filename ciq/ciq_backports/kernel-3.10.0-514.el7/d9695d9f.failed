perf hists browser: Be a bit more strict about presenting CPU socket zoom

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit d9695d9f93649ecc00877ec2c847739c54a4cbb3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d9695d9f.failed

For consistency with the other sort order checks.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>,
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1452960197-5323-9-git-send-email-namhyung@kernel.org
[ Carved out from a  larger patch, moved check to add_socket_opt() ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d9695d9f93649ecc00877ec2c847739c54a4cbb3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/hists.c
diff --cc tools/perf/ui/browsers/hists.c
index ebdb1edfae96,b919582add0f..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -1939,6 -1949,41 +1939,44 @@@ add_exit_opt(struct hist_browser *brows
  	return 1;
  }
  
++<<<<<<< HEAD
++=======
+ static int
+ do_zoom_socket(struct hist_browser *browser, struct popup_action *act)
+ {
+ 	if (browser->hists->socket_filter > -1) {
+ 		pstack__remove(browser->pstack, &browser->hists->socket_filter);
+ 		browser->hists->socket_filter = -1;
+ 		perf_hpp__set_elide(HISTC_SOCKET, false);
+ 	} else {
+ 		browser->hists->socket_filter = act->socket;
+ 		perf_hpp__set_elide(HISTC_SOCKET, true);
+ 		pstack__push(browser->pstack, &browser->hists->socket_filter);
+ 	}
+ 
+ 	hists__filter_by_socket(browser->hists);
+ 	hist_browser__reset(browser);
+ 	return 0;
+ }
+ 
+ static int
+ add_socket_opt(struct hist_browser *browser, struct popup_action *act,
+ 	       char **optstr, int socket_id)
+ {
+ 	if (!sort__has_socket || socket_id < 0)
+ 		return 0;
+ 
+ 	if (asprintf(optstr, "Zoom %s Processor Socket %d",
+ 		     (browser->hists->socket_filter > -1) ? "out of" : "into",
+ 		     socket_id) < 0)
+ 		return 0;
+ 
+ 	act->socket = socket_id;
+ 	act->fn = do_zoom_socket;
+ 	return 1;
+ }
+ 
++>>>>>>> d9695d9f9364 (perf hists browser: Be a bit more strict about presenting CPU socket zoom)
  static void hist_browser__update_nr_entries(struct hist_browser *hb)
  {
  	u64 nr_entries = 0;
* Unmerged path tools/perf/ui/browsers/hists.c
