vxlan: treat vni in metadata based tunnels consistently

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Benc <jbenc@redhat.com>
commit b9167b2e775999d267874b5a1a3a79020f54753a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b9167b2e.failed

For metadata based tunnels, VNI is ignored when doing vxlan device lookups
(because such tunnel receives all VNIs). However, this was not honored by
vxlan_xmit_one when doing encapsulation bypass. Move the check for metadata
based tunnel to the common place where it belongs.

	Signed-off-by: Jiri Benc <jbenc@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b9167b2e775999d267874b5a1a3a79020f54753a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index a2751f4f523c,3a84680b5117..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -280,8 -246,12 +280,17 @@@ static struct vxlan_dev *vxlan_vs_find_
  {
  	struct vxlan_dev *vxlan;
  
++<<<<<<< HEAD
 +	hlist_for_each_entry_rcu(vxlan, vni_head(vs, id), hlist) {
 +		if (vxlan->default_dst.remote_vni == id)
++=======
+ 	/* For flow based devices, map all packets to VNI 0 */
+ 	if (vs->flags & VXLAN_F_COLLECT_METADATA)
+ 		vni = 0;
+ 
+ 	hlist_for_each_entry_rcu(vxlan, vni_head(vs, vni), hlist) {
+ 		if (vxlan->default_dst.remote_vni == vni)
++>>>>>>> b9167b2e7759 (vxlan: treat vni in metadata based tunnels consistently)
  			return vxlan;
  	}
  
@@@ -1252,11 -1196,8 +1261,14 @@@ static void vxlan_rcv(struct vxlan_soc
  	struct vxlan_dev *vxlan;
  	struct pcpu_sw_netstats *stats;
  	union vxlan_addr saddr;
 +	__u32 vni;
  	int err = 0;
 +	union vxlan_addr *remote_ip;
  
++<<<<<<< HEAD
 +	vni = ntohl(md->vni) >> 8;
++=======
++>>>>>>> b9167b2e7759 (vxlan: treat vni in metadata based tunnels consistently)
  	/* Is this VNI defined? */
  	vxlan = vxlan_vs_find_vni(vs, vni);
  	if (!vxlan)
* Unmerged path drivers/net/vxlan.c
