USB: OHCI: make ohci-pxa27x a separate driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [usb] ohci: make ohci-pxa27x a separate driver (Don Zickus) [1303209]
Rebuild_FUZZ: 94.12%
commit-author Manjunath Goudar <manjunath.goudar@linaro.org>
commit b8ad5c370640886792487be7835810f204388c95
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b8ad5c37.failed

Separate the  OHCI pxa27x/pxa3xx host controller driver from
ohci-hcd host code so that it can be built as a separate driver
module. This work is part of enabling multi-platform kernels on
ARM.

	Signed-off-by: Manjunath Goudar <manjunath.goudar@linaro.org>
	Signed-off-by: Deepak Saxena <dsaxena@linaro.org>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit b8ad5c370640886792487be7835810f204388c95)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/Kconfig
#	drivers/usb/host/Makefile
#	drivers/usb/host/ohci-hcd.c
#	drivers/usb/host/ohci-pxa27x.c
diff --cc drivers/usb/host/Kconfig
index 14e3c49416bf,70cb1a94beff..000000000000
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@@ -379,8 -373,56 +379,59 @@@ config USB_OHCI_HCD_OMAP
  	---help---
  	  Enables support for the OHCI controller on OMAP1/2 chips.
  
++<<<<<<< HEAD
++=======
+ config USB_OHCI_HCD_SPEAR
+         tristate "Support for ST SPEAr on-chip OHCI USB controller"
+         depends on USB_OHCI_HCD && PLAT_SPEAR
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           ST SPEAr chips.
+ 
+ config USB_OHCI_HCD_S3C2410
+         tristate "OHCI support for Samsung S3C24xx/S3C64xx SoC series"
+         depends on USB_OHCI_HCD && (ARCH_S3C24XX || ARCH_S3C64XX)
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           S3C24xx/S3C64xx chips.
+ 
+ config USB_OHCI_HCD_LPC32XX
+ 	tristate "Support for LPC on-chip OHCI USB controller"
+ 	depends on USB_OHCI_HCD && ARCH_LPC32XX
+ 	default y
+ 	---help---
+           Enables support for the on-chip OHCI controller on
+           NXP chips.
+ 
+ config USB_OHCI_HCD_EP93XX
+ 	tristate "Support for EP93XX on-chip OHCI USB controller"
+ 	depends on USB_OHCI_HCD && ARCH_EP93XX
+ 	default y
+ 	---help---
+ 	  Enables support for the on-chip OHCI controller on
+ 	  EP93XX chips.
+ 
+ config USB_OHCI_HCD_PXA27X
+ 	tristate "Support for PXA27X/PXA3XX on-chip OHCI USB controller"
+ 	depends on USB_OHCI_HCD && (PXA27x || PXA3xx)
+ 	default y
+ 	---help---
+ 	  Enables support for the on-chip OHCI controller on
+ 	  PXA27x/PXA3xx chips.
+ 
+ config USB_OHCI_HCD_AT91
+         tristate "Support for Atmel on-chip OHCI USB controller"
+         depends on USB_OHCI_HCD && ARCH_AT91
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           Atmel chips.
+ 
++>>>>>>> b8ad5c370640 (USB: OHCI: make ohci-pxa27x a separate driver)
  config USB_OHCI_HCD_OMAP3
 -	tristate "OHCI support for OMAP3 and later chips"
 +	bool "OHCI support for OMAP3 and later chips"
  	depends on (ARCH_OMAP3 || ARCH_OMAP4)
  	default y
  	---help---
diff --cc drivers/usb/host/Makefile
index 602b80e40777,0b9fdeecf683..000000000000
--- a/drivers/usb/host/Makefile
+++ b/drivers/usb/host/Makefile
@@@ -44,6 -48,14 +44,17 @@@ obj-$(CONFIG_USB_OHCI_HCD)	+= ohci-hcd.
  obj-$(CONFIG_USB_OHCI_HCD_PCI)	+= ohci-pci.o
  obj-$(CONFIG_USB_OHCI_HCD_PLATFORM)	+= ohci-platform.o
  obj-$(CONFIG_USB_OHCI_EXYNOS)	+= ohci-exynos.o
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_USB_OHCI_HCD_OMAP1)	+= ohci-omap.o
+ obj-$(CONFIG_USB_OHCI_HCD_OMAP3)	+= ohci-omap3.o
+ obj-$(CONFIG_USB_OHCI_HCD_SPEAR)	+= ohci-spear.o
+ obj-$(CONFIG_USB_OHCI_HCD_AT91)	+= ohci-at91.o
+ obj-$(CONFIG_USB_OHCI_HCD_S3C2410)	+= ohci-s3c2410.o
+ obj-$(CONFIG_USB_OHCI_HCD_LPC32XX)	+= ohci-nxp.o
+ obj-$(CONFIG_USB_OHCI_HCD_EP93XX)	+= ohci-ep93xx.o
+ obj-$(CONFIG_USB_OHCI_HCD_PXA27X)	+= ohci-pxa27x.o
++>>>>>>> b8ad5c370640 (USB: OHCI: make ohci-pxa27x a separate driver)
  
  obj-$(CONFIG_USB_UHCI_HCD)	+= uhci-hcd.o
  obj-$(CONFIG_USB_FHCI_HCD)	+= fhci.o
diff --cc drivers/usb/host/ohci-hcd.c
index 31d50d19b73d,c6fff6e68213..000000000000
--- a/drivers/usb/host/ohci-hcd.c
+++ b/drivers/usb/host/ohci-hcd.c
@@@ -1212,41 -1177,6 +1212,44 @@@ MODULE_LICENSE ("GPL")
  #define SA1111_DRIVER		ohci_hcd_sa1111_driver
  #endif
  
++<<<<<<< HEAD
 +#if defined(CONFIG_ARCH_S3C24XX) || defined(CONFIG_ARCH_S3C64XX)
 +#include "ohci-s3c2410.c"
 +#define S3C2410_PLATFORM_DRIVER	ohci_hcd_s3c2410_driver
 +#endif
 +
 +#ifdef CONFIG_USB_OHCI_HCD_OMAP1
 +#include "ohci-omap.c"
 +#define OMAP1_PLATFORM_DRIVER	ohci_hcd_omap_driver
 +#endif
 +
 +#ifdef CONFIG_USB_OHCI_HCD_OMAP3
 +#include "ohci-omap3.c"
 +#define OMAP3_PLATFORM_DRIVER	ohci_hcd_omap3_driver
 +#endif
 +
 +#if defined(CONFIG_PXA27x) || defined(CONFIG_PXA3xx)
 +#include "ohci-pxa27x.c"
 +#define PLATFORM_DRIVER		ohci_hcd_pxa27x_driver
 +#endif
 +
 +#ifdef CONFIG_ARCH_EP93XX
 +#include "ohci-ep93xx.c"
 +#define EP93XX_PLATFORM_DRIVER	ohci_hcd_ep93xx_driver
 +#endif
 +
 +#ifdef CONFIG_ARCH_AT91
 +#include "ohci-at91.c"
 +#define AT91_PLATFORM_DRIVER	ohci_hcd_at91_driver
 +#endif
 +
 +#ifdef CONFIG_ARCH_LPC32XX
 +#include "ohci-nxp.c"
 +#define NXP_PLATFORM_DRIVER	usb_hcd_nxp_driver
 +#endif
 +
++=======
++>>>>>>> b8ad5c370640 (USB: OHCI: make ohci-pxa27x a separate driver)
  #ifdef CONFIG_ARCH_DAVINCI_DA8XX
  #include "ohci-da8xx.c"
  #define DAVINCI_PLATFORM_DRIVER	ohci_hcd_da8xx_driver
diff --cc drivers/usb/host/ohci-pxa27x.c
index 279b2ef17411,c1b1fa3047be..000000000000
--- a/drivers/usb/host/ohci-pxa27x.c
+++ b/drivers/usb/host/ohci-pxa27x.c
@@@ -218,20 -227,21 +227,21 @@@ static int pxa27x_start_hc(struct pxa27
  	int retval = 0;
  	struct pxaohci_platform_data *inf;
  	uint32_t uhchr;
+ 	struct usb_hcd *hcd = dev_get_drvdata(dev);
  
 -	inf = dev_get_platdata(dev);
 +	inf = dev->platform_data;
  
- 	clk_prepare_enable(ohci->clk);
+ 	clk_prepare_enable(pxa_ohci->clk);
  
- 	pxa27x_reset_hc(ohci);
+ 	pxa27x_reset_hc(pxa_ohci);
  
- 	uhchr = __raw_readl(ohci->mmio_base + UHCHR) | UHCHR_FSBIR;
- 	__raw_writel(uhchr, ohci->mmio_base + UHCHR);
+ 	uhchr = __raw_readl(pxa_ohci->mmio_base + UHCHR) | UHCHR_FSBIR;
+ 	__raw_writel(uhchr, pxa_ohci->mmio_base + UHCHR);
  
- 	while (__raw_readl(ohci->mmio_base + UHCHR) & UHCHR_FSBIR)
+ 	while (__raw_readl(pxa_ohci->mmio_base + UHCHR) & UHCHR_FSBIR)
  		cpu_relax();
  
- 	pxa27x_setup_hc(ohci, inf);
+ 	pxa27x_setup_hc(pxa_ohci, inf);
  
  	if (inf->init)
  		retval = inf->init(dev);
@@@ -251,15 -261,16 +261,16 @@@
  	return 0;
  }
  
- static void pxa27x_stop_hc(struct pxa27x_ohci *ohci, struct device *dev)
+ static void pxa27x_stop_hc(struct pxa27x_ohci *pxa_ohci, struct device *dev)
  {
  	struct pxaohci_platform_data *inf;
+ 	struct usb_hcd *hcd = dev_get_drvdata(dev);
  	uint32_t uhccoms;
  
 -	inf = dev_get_platdata(dev);
 +	inf = dev->platform_data;
  
  	if (cpu_is_pxa3xx())
- 		pxa3xx_u2d_stop_hc(&ohci_to_hcd(&ohci->ohci)->self);
+ 		pxa3xx_u2d_stop_hc(&hcd->self);
  
  	if (inf->exit)
  		inf->exit(dev);
@@@ -577,15 -521,17 +522,22 @@@ static int ohci_hcd_pxa27x_drv_suspend(
  static int ohci_hcd_pxa27x_drv_resume(struct device *dev)
  {
  	struct usb_hcd *hcd = dev_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct pxa27x_ohci *ohci = to_pxa27x_ohci(hcd);
 +	struct pxaohci_platform_data *inf = dev->platform_data;
++=======
+ 	struct pxa27x_ohci *pxa_ohci = to_pxa27x_ohci(hcd);
+ 	struct pxaohci_platform_data *inf = dev_get_platdata(dev);
+ 	struct ohci_hcd *ohci = hcd_to_ohci(hcd);
++>>>>>>> b8ad5c370640 (USB: OHCI: make ohci-pxa27x a separate driver)
  	int status;
  
- 	if (time_before(jiffies, ohci->ohci.next_statechange))
+ 	if (time_before(jiffies, ohci->next_statechange))
  		msleep(5);
- 	ohci->ohci.next_statechange = jiffies;
+ 	ohci->next_statechange = jiffies;
  
- 	if ((status = pxa27x_start_hc(ohci, dev)) < 0)
+ 	status = pxa27x_start_hc(pxa_ohci, dev);
+ 	if (status < 0)
  		return status;
  
  	/* Select Power Management Mode */
* Unmerged path drivers/usb/host/Kconfig
* Unmerged path drivers/usb/host/Makefile
* Unmerged path drivers/usb/host/ohci-hcd.c
* Unmerged path drivers/usb/host/ohci-pxa27x.c
