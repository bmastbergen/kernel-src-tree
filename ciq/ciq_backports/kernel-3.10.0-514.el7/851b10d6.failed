net/mlx4_en: do batched put_page using atomic_sub

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [netdrv] mlx4_en: do batched put_page using atomic_sub (kamal heib) [1275159 1296272 1296405 1298421 1298422 1298423 1298424 1298425]
Rebuild_FUZZ: 95.74%
commit-author Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
commit 851b10d60879539bec8acecb35ed361393399282
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/851b10d6.failed

This patch fixes couple error paths after allocation failures.
Atomic set of page reference counter is safe only if it is zero,
otherwise set can race with any speculative get_page_unless_zero.

	Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 851b10d60879539bec8acecb35ed361393399282)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx4/en_rx.c
index 50f799ac9890,7d25bc9c1b22..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_rx.c
@@@ -127,7 -126,9 +127,13 @@@ out
  			dma_unmap_page(priv->ddev, page_alloc[i].dma,
  				page_alloc[i].page_size, PCI_DMA_FROMDEVICE);
  			page = page_alloc[i].page;
++<<<<<<< HEAD
 +			atomic_set(&page->_count, 1);
++=======
+ 			/* Revert changes done by mlx4_alloc_pages */
+ 			page_ref_sub(page, page_alloc[i].page_size /
+ 					   priv->frag_info[i].frag_stride - 1);
++>>>>>>> 851b10d60879 (net/mlx4_en: do batched put_page using atomic_sub)
  			put_page(page);
  		}
  	}
@@@ -176,7 -178,9 +182,13 @@@ out
  		dma_unmap_page(priv->ddev, page_alloc->dma,
  			       page_alloc->page_size, PCI_DMA_FROMDEVICE);
  		page = page_alloc->page;
++<<<<<<< HEAD
 +		atomic_set(&page->_count, 1);
++=======
+ 		/* Revert changes done by mlx4_alloc_pages */
+ 		page_ref_sub(page, page_alloc->page_size /
+ 				   priv->frag_info[i].frag_stride - 1);
++>>>>>>> 851b10d60879 (net/mlx4_en: do batched put_page using atomic_sub)
  		put_page(page);
  		page_alloc->page = NULL;
  	}
* Unmerged path drivers/net/ethernet/mellanox/mlx4/en_rx.c
