staging/hfi1: Add function stubs for TID caching

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [infiniband] hfi1: Add function stubs for TID caching (Alex Estrin) [1272062 1273170]
Rebuild_FUZZ: 90.91%
commit-author Mitko Haralanov <mitko.haralanov@intel.com>
commit f727a0c324ce2c7e7cbe478d22895bf7bc8ed0a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f727a0c3.failed

Add mmu notify helper functions and TID caching function
stubs in preparation for the TID caching implementation.

TID caching makes use of the MMU notifier to allow the driver
to respond to the user freeing memory which is allocated to
the HFI.

This patch implements the basic MMU notifier functions to insert,
find and remove buffer pages from memory based on the mmu_notifier
being invoked.

In addition it places stubs in place for the main entry points by
follow on code.

Follow up patches will complete the implementation of the interaction
with user space and makes use of these functions.

	Signed-off-by: Mitko Haralanov <mitko.haralanov@intel.com>
	Signed-off-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit f727a0c324ce2c7e7cbe478d22895bf7bc8ed0a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
#	drivers/staging/hfi1/Kconfig
#	drivers/staging/hfi1/user_exp_rcv.c
diff --cc drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
index a6d3bdf82cdd,28ef98a45a1e..000000000000
--- a/drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
+++ b/drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
@@@ -58,13 -47,36 +58,36 @@@
   * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 - *
 - */
 + *****************************************************************************/
  
++<<<<<<< HEAD:drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
 +#ifndef __iwl_eeprom_h__
 +#define __iwl_eeprom_h__
++=======
+ #include "hfi.h"
+ 
+ #define EXP_TID_TIDLEN_MASK   0x7FFULL
+ #define EXP_TID_TIDLEN_SHIFT  0
+ #define EXP_TID_TIDCTRL_MASK  0x3ULL
+ #define EXP_TID_TIDCTRL_SHIFT 20
+ #define EXP_TID_TIDIDX_MASK   0x3FFULL
+ #define EXP_TID_TIDIDX_SHIFT  22
+ #define EXP_TID_GET(tid, field)	\
+ 	(((tid) >> EXP_TID_TID##field##_SHIFT) & EXP_TID_TID##field##_MASK)
++>>>>>>> f727a0c324ce (staging/hfi1: Add function stubs for TID caching):drivers/staging/rdma/hfi1/user_exp_rcv.h
 +
 +#include "iwl-trans.h"
  
 -#define EXP_TID_SET(field, value)			\
 -	(((value) & EXP_TID_TID##field##_MASK) <<	\
 -	 EXP_TID_TID##field##_SHIFT)
 -#define EXP_TID_CLEAR(tid, field) ({					\
 -		(tid) &= ~(EXP_TID_TID##field##_MASK <<			\
 -			   EXP_TID_TID##field##_SHIFT);			\
 -		})
 -#define EXP_TID_RESET(tid, field, value) do {				\
 -		EXP_TID_CLEAR(tid, field);				\
 -		(tid) |= EXP_TID_SET(field, (value));			\
 -	} while (0)
++<<<<<<< HEAD:drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
 +int iwl_read_eeprom(struct iwl_trans *trans, u8 **eeprom, size_t *eeprom_size);
  
 +#endif  /* __iwl_eeprom_h__ */
++=======
+ int hfi1_user_exp_rcv_init(struct file *);
+ int hfi1_user_exp_rcv_free(struct hfi1_filedata *);
+ int hfi1_user_exp_rcv_setup(struct file *, struct hfi1_tid_info *);
+ int hfi1_user_exp_rcv_clear(struct file *, struct hfi1_tid_info *);
+ int hfi1_user_exp_rcv_invalid(struct file *, struct hfi1_tid_info *);
+ 
+ #endif /* _HFI1_USER_EXP_RCV_H */
++>>>>>>> f727a0c324ce (staging/hfi1: Add function stubs for TID caching):drivers/staging/rdma/hfi1/user_exp_rcv.h
diff --cc drivers/staging/hfi1/Kconfig
index 78bc89ef28cc,bd0249bcf199..000000000000
--- a/drivers/staging/hfi1/Kconfig
+++ b/drivers/staging/hfi1/Kconfig
@@@ -1,6 -1,7 +1,11 @@@
  config INFINIBAND_HFI1
  	tristate "Intel OPA Gen1 support"
++<<<<<<< HEAD:drivers/staging/hfi1/Kconfig
 +	depends on X86_64 && INFINIBAND
++=======
+ 	depends on X86_64
+ 	select MMU_NOTIFIER
++>>>>>>> f727a0c324ce (staging/hfi1: Add function stubs for TID caching):drivers/staging/rdma/hfi1/Kconfig
  	default m
  	---help---
  	This is a low-level driver for Intel OPA Gen1 adapter.
* Unmerged path drivers/staging/hfi1/user_exp_rcv.c
* Unmerged path drivers/net/wireless/iwlwifi/iwl-eeprom-read.h
* Unmerged path drivers/staging/hfi1/Kconfig
diff --git a/drivers/staging/hfi1/Makefile b/drivers/staging/hfi1/Makefile
index 2e5daa6cdcc2..00c47b788666 100644
--- a/drivers/staging/hfi1/Makefile
+++ b/drivers/staging/hfi1/Makefile
@@ -10,7 +10,7 @@ obj-$(CONFIG_INFINIBAND_HFI1) += hfi1.o
 hfi1-y := chip.o cq.o device.o diag.o dma.o driver.o eprom.o file_ops.o firmware.o \
 	init.o intr.o keys.o mad.o mmap.o mr.o pcie.o pio.o pio_copy.o \
 	qp.o qsfp.o rc.o ruc.o sdma.o srq.o sysfs.o trace.o twsi.o \
-	uc.o ud.o user_pages.o user_sdma.o verbs_mcast.o verbs.o
+	uc.o ud.o user_exp_rcv.o user_pages.o user_sdma.o verbs_mcast.o verbs.o
 hfi1-$(CONFIG_DEBUG_FS) += debugfs.o
 
 CFLAGS_trace.o = -I$(src)
diff --git a/drivers/staging/hfi1/hfi.h b/drivers/staging/hfi1/hfi.h
index 2611bb2e764d..ddb21f0fffe7 100644
--- a/drivers/staging/hfi1/hfi.h
+++ b/drivers/staging/hfi1/hfi.h
@@ -65,6 +65,8 @@
 #include <linux/cdev.h>
 #include <linux/delay.h>
 #include <linux/kthread.h>
+#include <linux/mmu_notifier.h>
+#include <linux/rbtree.h>
 
 #include "chip_registers.h"
 #include "common.h"
@@ -1125,6 +1127,8 @@ struct hfi1_devdata {
 #define PT_EAGER    1
 #define PT_INVALID  2
 
+struct mmu_rb_node;
+
 /* Private data for file operations */
 struct hfi1_filedata {
 	struct hfi1_ctxtdata *uctxt;
* Unmerged path drivers/staging/hfi1/user_exp_rcv.c
