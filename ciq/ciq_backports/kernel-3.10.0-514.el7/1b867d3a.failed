xfs: relocate sparse inode mount warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Brian Foster <bfoster@redhat.com>
commit 1b867d3ab562b6b03e46113fad3e87b05fbfbb85
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1b867d3a.failed

The sparse inodes feature is currently considered experimental. We warn
at mount time from xfs_mount_validate_sb(). This function is part of the
superblock verifier codepath, however, which means it could be invoked
repeatedly on superblock reads or writes. This is currently only
noticeable from userspace, where mkfs produces multiple warnings at
format time.

As mkfs warnings were not the intent of this change, relocate the mount
time warning to xfs_fs_fill_super(), which is only invoked once and only
in kernel space.

	Signed-off-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit 1b867d3ab562b6b03e46113fad3e87b05fbfbb85)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_super.c
diff --cc fs/xfs/xfs_super.c
index f38622b94f21,f98ce83b7bc4..000000000000
--- a/fs/xfs/xfs_super.c
+++ b/fs/xfs/xfs_super.c
@@@ -1534,6 -1514,24 +1534,27 @@@ xfs_fs_fill_super
  	if (XFS_SB_VERSION_NUM(&mp->m_sb) == XFS_SB_VERSION_5)
  		sb->s_flags |= MS_I_VERSION;
  
++<<<<<<< HEAD
++=======
+ 	if (mp->m_flags & XFS_MOUNT_DAX) {
+ 		xfs_warn(mp,
+ 	"DAX enabled. Warning: EXPERIMENTAL, use at your own risk");
+ 		if (sb->s_blocksize != PAGE_SIZE) {
+ 			xfs_alert(mp,
+ 		"Filesystem block size invalid for DAX Turning DAX off.");
+ 			mp->m_flags &= ~XFS_MOUNT_DAX;
+ 		} else if (!sb->s_bdev->bd_disk->fops->direct_access) {
+ 			xfs_alert(mp,
+ 		"Block device does not support DAX Turning DAX off.");
+ 			mp->m_flags &= ~XFS_MOUNT_DAX;
+ 		}
+ 	}
+ 
+ 	if (xfs_sb_version_hassparseinodes(&mp->m_sb))
+ 		xfs_alert(mp,
+ 	"EXPERIMENTAL sparse inode feature enabled. Use at your own risk!");
+ 
++>>>>>>> 1b867d3ab562 (xfs: relocate sparse inode mount warning)
  	error = xfs_mountfs(mp);
  	if (error)
  		goto out_filestream_unmount;
diff --git a/fs/xfs/libxfs/xfs_sb.c b/fs/xfs/libxfs/xfs_sb.c
index dfbf11b0d6f5..0a7ddd35cec5 100644
--- a/fs/xfs/libxfs/xfs_sb.c
+++ b/fs/xfs/libxfs/xfs_sb.c
@@ -182,9 +182,6 @@ xfs_mount_validate_sb(
 	if (xfs_sb_version_hassparseinodes(sbp)) {
 		uint32_t	align;
 
-		xfs_alert(mp,
-	"EXPERIMENTAL sparse inode feature enabled. Use at your own risk!");
-
 		align = XFS_INODES_PER_CHUNK * sbp->sb_inodesize
 				>> sbp->sb_blocklog;
 		if (sbp->sb_inoalignmt != align) {
* Unmerged path fs/xfs/xfs_super.c
