pty: Always return -EIO if slave BSD pty opened first

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Peter Hurley <peter@hurleysoftware.com>
commit 55199ea3bd2e53007715d544fb9094cbbdda1597
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/55199ea3.failed

Opening the slave BSD pty first already returns -EIO from the slave
pty_open(), which in turn causes the newly installed tty pair to be
released before returning from tty_open(). However, this can also
cause a parallel master BSD pty open to fail because the pty pair
destruction may already been taking place in tty_release().

Failing at driver->install() if the slave pty is opened first ensures
that a pty master open cannot fail, because the driver tables will
not have been updated so tty_driver_lookup_tty() won't find the
master pty (and attempt to "re-open" it).

In turn, this guarantees that any tty with a tty->count == 0 is
in final close (rather than never opened).

	Reviewed-by: Alan Cox <alan@linux.intel.com>
	Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 55199ea3bd2e53007715d544fb9094cbbdda1597)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/pty.c
diff --cc drivers/tty/pty.c
index c672158d4566,bdb8fd1a2026..000000000000
--- a/drivers/tty/pty.c
+++ b/drivers/tty/pty.c
@@@ -337,9 -383,10 +337,16 @@@ static int pty_common_install(struct tt
  	int idx = tty->index;
  	int retval = -ENOMEM;
  
++<<<<<<< HEAD
 +	o_tty = alloc_tty_struct();
 +	if (!o_tty)
 +		goto err;
++=======
+ 	/* Opening the slave first has always returned -EIO */
+ 	if (driver->subtype != PTY_TYPE_MASTER)
+ 		return -EIO;
+ 
++>>>>>>> 55199ea3bd2e (pty: Always return -EIO if slave BSD pty opened first)
  	ports[0] = kmalloc(sizeof **ports, GFP_KERNEL);
  	ports[1] = kmalloc(sizeof **ports, GFP_KERNEL);
  	if (!ports[0] || !ports[1])
* Unmerged path drivers/tty/pty.c
