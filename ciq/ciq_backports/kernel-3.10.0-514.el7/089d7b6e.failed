KVM: nVMX: expose VPID capability to L1

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Wanpeng Li <wanpeng.li@hotmail.com>
commit 089d7b6ec5151ad06a2cd524bc0580d311b641ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/089d7b6e.failed

Expose VPID capability to L1. For nested guests, we don't do anything
specific for single context invalidation. Hence, only advertise support
for global context invalidation. The major benefit of nested VPID comes
from having separate vpids when switching between L1 and L2, and also
when L2's vCPUs not sched in/out on L1.

	Reviewed-by: Wincy Van <fanwenyi0529@gmail.com>
	Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 089d7b6ec5151ad06a2cd524bc0580d311b641ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index dd100a1ff95e,15bff51d492a..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -2451,12 -2618,18 +2451,22 @@@ static __init void nested_vmx_setup_ctl
  		 * for single context invalidation. Hence, only advertise
  		 * support for global context invalidation.
  		 */
 -		vmx->nested.nested_vmx_ept_caps |= VMX_EPT_EXTENT_GLOBAL_BIT;
 +		nested_vmx_ept_caps |= VMX_EPT_EXTENT_GLOBAL_BIT;
  	} else
++<<<<<<< HEAD
 +		nested_vmx_ept_caps = 0;
++=======
+ 		vmx->nested.nested_vmx_ept_caps = 0;
+ 
+ 	if (enable_vpid)
+ 		vmx->nested.nested_vmx_vpid_caps = VMX_VPID_INVVPID_BIT |
+ 				VMX_VPID_EXTENT_GLOBAL_CONTEXT_BIT;
+ 	else
+ 		vmx->nested.nested_vmx_vpid_caps = 0;
++>>>>>>> 089d7b6ec515 (KVM: nVMX: expose VPID capability to L1)
  
  	if (enable_unrestricted_guest)
 -		vmx->nested.nested_vmx_secondary_ctls_high |=
 +		nested_vmx_secondary_ctls_high |=
  			SECONDARY_EXEC_UNRESTRICTED_GUEST;
  
  	/* miscellaneous data */
@@@ -2556,7 -2743,8 +2566,12 @@@ static int vmx_get_vmx_msr(struct kvm_v
  		break;
  	case MSR_IA32_VMX_EPT_VPID_CAP:
  		/* Currently, no nested vpid support */
++<<<<<<< HEAD
 +		*pdata = nested_vmx_ept_caps;
++=======
+ 		*pdata = vmx->nested.nested_vmx_ept_caps |
+ 			((u64)vmx->nested.nested_vmx_vpid_caps << 32);
++>>>>>>> 089d7b6ec515 (KVM: nVMX: expose VPID capability to L1)
  		break;
  	default:
  		return 1;
* Unmerged path arch/x86/kvm/vmx.c
