mmc: tmio: tmio_mmc_host has .write16_hook

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit dfe9a229e0a66b6a00439cea2885ad3b5d3e0840
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/dfe9a229.failed

Current .write16_hook is implemented under tmio_mmc_data.
It goes to tmio_mmc_host by this patch.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Acked-by: Lee Jones <lee.jones@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit dfe9a229e0a66b6a00439cea2885ad3b5d3e0840)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mobile_sdhi.c
#	drivers/mmc/host/tmio_mmc.h
#	include/linux/mfd/tmio.h
diff --cc drivers/mmc/host/sh_mobile_sdhi.c
index 79ee6f0c45bd,77ff0620912e..000000000000
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@@ -154,10 -207,19 +154,26 @@@ static int sh_mobile_sdhi_probe(struct 
  		goto eclkget;
  	}
  
++<<<<<<< HEAD
 +	mmc_data->clk_enable = sh_mobile_sdhi_clk_enable;
 +	mmc_data->clk_disable = sh_mobile_sdhi_clk_disable;
 +	mmc_data->capabilities = MMC_CAP_MMC_HIGHSPEED;
 +	mmc_data->write16_hook = sh_mobile_sdhi_write16_hook;
++=======
+ 	host = tmio_mmc_host_alloc(pdev);
+ 	if (!host) {
+ 		ret = -ENOMEM;
+ 		goto eprobe;
+ 	}
+ 
+ 	host->dma		= dma_priv;
+ 	host->write16_hook	= sh_mobile_sdhi_write16_hook;
+ 
+ 	mmc_data->clk_enable = sh_mobile_sdhi_clk_enable;
+ 	mmc_data->clk_disable = sh_mobile_sdhi_clk_disable;
+ 	mmc_data->capabilities = MMC_CAP_MMC_HIGHSPEED;
+ 	mmc_data->multi_io_quirk = sh_mobile_sdhi_multi_io_quirk;
++>>>>>>> dfe9a229e0a6 (mmc: tmio: tmio_mmc_host has .write16_hook)
  	if (p) {
  		mmc_data->flags = p->tmio_flags;
  		mmc_data->ocr_mask = p->tmio_ocr_mask;
diff --cc drivers/mmc/host/tmio_mmc.h
index d857f5c6e7d9,3fa96b11f76c..000000000000
--- a/drivers/mmc/host/tmio_mmc.h
+++ b/drivers/mmc/host/tmio_mmc.h
@@@ -85,10 -93,14 +85,16 @@@ struct tmio_mmc_host 
  	unsigned long		last_req_ts;
  	struct mutex		ios_lock;	/* protect set_ios() context */
  	bool			native_hotplug;
++<<<<<<< HEAD
++=======
+ 	bool			sdio_irq_enabled;
+ 
+ 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
++>>>>>>> dfe9a229e0a6 (mmc: tmio: tmio_mmc_host has .write16_hook)
  };
  
 -struct tmio_mmc_host *tmio_mmc_host_alloc(struct platform_device *pdev);
 -void tmio_mmc_host_free(struct tmio_mmc_host *host);
 -int tmio_mmc_host_probe(struct tmio_mmc_host *host,
 +int tmio_mmc_host_probe(struct tmio_mmc_host **host,
 +			struct platform_device *pdev,
  			struct tmio_mmc_data *pdata);
  void tmio_mmc_host_remove(struct tmio_mmc_host *host);
  void tmio_mmc_do_data_irq(struct tmio_mmc_host *host);
@@@ -179,9 -185,9 +185,9 @@@ static inline void sd_ctrl_write16(stru
  	/* If there is a hook and it returns non-zero then there
  	 * is an error and the write should be skipped
  	 */
- 	if (host->pdata->write16_hook && host->pdata->write16_hook(host, addr))
+ 	if (host->write16_hook && host->write16_hook(host, addr))
  		return;
 -	writew(val, host->ctl + (addr << host->pdata->bus_shift));
 +	writew(val, host->ctl + (addr << host->bus_shift));
  }
  
  static inline void sd_ctrl_write16_rep(struct tmio_mmc_host *host, int addr,
diff --cc include/linux/mfd/tmio.h
index 38409958f913,0872ca1e5dc2..000000000000
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@@ -84,17 -112,6 +84,20 @@@ void tmio_core_mmc_clk_div(void __iome
  
  struct dma_chan;
  
++<<<<<<< HEAD
 +struct tmio_mmc_dma {
 +	void *chan_priv_tx;
 +	void *chan_priv_rx;
 +	int slave_id_tx;
 +	int slave_id_rx;
 +	int alignment_shift;
 +	bool (*filter)(struct dma_chan *chan, void *arg);
 +};
 +
 +struct tmio_mmc_host;
 +
++=======
++>>>>>>> dfe9a229e0a6 (mmc: tmio: tmio_mmc_host has .write16_hook)
  /*
   * data for the MMC controller
   */
* Unmerged path drivers/mmc/host/sh_mobile_sdhi.c
* Unmerged path drivers/mmc/host/tmio_mmc.h
diff --git a/drivers/mmc/host/tmio_mmc_pio.c b/drivers/mmc/host/tmio_mmc_pio.c
index d5da81365223..c8b844874164 100644
--- a/drivers/mmc/host/tmio_mmc_pio.c
+++ b/drivers/mmc/host/tmio_mmc_pio.c
@@ -977,7 +977,7 @@ int tmio_mmc_host_probe(struct tmio_mmc_host **host,
 	tmio_mmc_of_parse(pdev, pdata);
 
 	if (!(pdata->flags & TMIO_MMC_HAS_IDLE_WAIT))
-		pdata->write16_hook = NULL;
+		_host->write16_hook = NULL;
 
 	res_ctl = platform_get_resource(pdev, IORESOURCE_MEM, 0);
 	if (!res_ctl)
* Unmerged path include/linux/mfd/tmio.h
