KVM: PPC: Use READ_ONCE when dereferencing pte_t pointer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] kvm: Use READ_ONCE when dereferencing pte_t pointer (Thomas Huth) [1287474]
Rebuild_FUZZ: 95.33%
commit-author Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
commit 5e1d44aef1673b504dde475aa714b1bdb9b875c4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5e1d44ae.failed

pte can get updated from other CPUs as part of multiple activities
like THP split, huge page collapse, unmap. We need to make sure we
don't reload the pte value again and again for different checks.

	Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 5e1d44aef1673b504dde475aa714b1bdb9b875c4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/e500_mmu_host.c
diff --cc arch/powerpc/kvm/e500_mmu_host.c
index 82aafd61162a,5840d546aa03..000000000000
--- a/arch/powerpc/kvm/e500_mmu_host.c
+++ b/arch/powerpc/kvm/e500_mmu_host.c
@@@ -449,7 -460,29 +449,33 @@@ static inline int kvmppc_e500_shadow_ma
  		gvaddr &= ~((tsize_pages << PAGE_SHIFT) - 1);
  	}
  
++<<<<<<< HEAD
 +	kvmppc_e500_ref_setup(ref, gtlbe, pfn);
++=======
+ 	spin_lock(&kvm->mmu_lock);
+ 	if (mmu_notifier_retry(kvm, mmu_seq)) {
+ 		ret = -EAGAIN;
+ 		goto out;
+ 	}
+ 
+ 
+ 	pgdir = vcpu_e500->vcpu.arch.pgdir;
+ 	ptep = lookup_linux_ptep(pgdir, hva, &tsize_pages);
+ 	if (ptep) {
+ 		pte_t pte = READ_ONCE(*ptep);
+ 
+ 		if (pte_present(pte))
+ 			wimg = (pte_val(pte) >> PTE_WIMGE_SHIFT) &
+ 				MAS2_WIMGE_MASK;
+ 		else {
+ 			pr_err_ratelimited("%s: pte not present: gfn %lx,pfn %lx\n",
+ 					   __func__, (long)gfn, pfn);
+ 			ret = -EINVAL;
+ 			goto out;
+ 		}
+ 	}
+ 	kvmppc_e500_ref_setup(ref, gtlbe, pfn, wimg);
++>>>>>>> 5e1d44aef167 (KVM: PPC: Use READ_ONCE when dereferencing pte_t pointer)
  
  	kvmppc_e500_setup_stlbe(&vcpu_e500->vcpu, gtlbe, tsize,
  				ref, gvaddr, stlbe);
diff --git a/arch/powerpc/include/asm/kvm_book3s_64.h b/arch/powerpc/include/asm/kvm_book3s_64.h
index f8158f1f5d5a..74ba71ba3730 100644
--- a/arch/powerpc/include/asm/kvm_book3s_64.h
+++ b/arch/powerpc/include/asm/kvm_book3s_64.h
@@ -289,7 +289,10 @@ static inline pte_t kvmppc_read_update_linux_pte(pte_t *ptep, int writing)
 	pte_t old_pte, new_pte = __pte(0);
 
 	while (1) {
-		old_pte = *ptep;
+		/*
+		 * Make sure we don't reload from ptep
+		 */
+		old_pte = READ_ONCE(*ptep);
 		/*
 		 * wait until _PAGE_BUSY is clear then set it atomically
 		 */
* Unmerged path arch/powerpc/kvm/e500_mmu_host.c
