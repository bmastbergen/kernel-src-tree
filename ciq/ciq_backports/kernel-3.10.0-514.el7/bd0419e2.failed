perf probe: Check if dwarf_getlocations() is available

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit bd0419e2a5a9fd9396cb7dc69044f961f52e19f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bd0419e2.failed

If not, tell the user that:

  config/Makefile:273: Old libdw.h, finding variables at given 'perf probe' point will not work, install elfutils-devel/libdw-dev >= 0.157

And return -ENOTSUPP in die_get_var_range(), failing features that
need it, like the one pointed out above.

This fixes the build on older systems, such as Ubuntu 12.04.5.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Vinson Lee <vlee@freedesktop.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-9l7luqkq4gfnx7vrklkq4obs@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit bd0419e2a5a9fd9396cb7dc69044f961f52e19f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/feature/Makefile
diff --cc tools/build/feature/Makefile
index a389efb207e0,4ae94dbfdab9..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -75,37 -80,43 +76,44 @@@ ifeq ($(findstring -static,${LDFLAGS}),
  DWARFLIBS += -lelf -lebl -lz -llzma -lbz2
  endif
  
 -$(OUTPUT)test-dwarf.bin:
 +test-dwarf.bin:
  	$(BUILD) $(DWARFLIBS)
  
++<<<<<<< HEAD
 +test-libelf-mmap.bin:
++=======
+ $(OUTPUT)test-dwarf_getlocations.bin:
+ 	$(BUILD) $(DWARFLIBS)
+ 
+ $(OUTPUT)test-libelf-mmap.bin:
++>>>>>>> bd0419e2a5a9 (perf probe: Check if dwarf_getlocations() is available)
  	$(BUILD) -lelf
  
 -$(OUTPUT)test-libelf-getphdrnum.bin:
 +test-libelf-getphdrnum.bin:
  	$(BUILD) -lelf
  
 -$(OUTPUT)test-libnuma.bin:
 +test-libnuma.bin:
  	$(BUILD) -lnuma
  
 -$(OUTPUT)test-numa_num_possible_cpus.bin:
 +test-numa_num_possible_cpus.bin:
  	$(BUILD) -lnuma
  
 -$(OUTPUT)test-libunwind.bin:
 +test-libunwind.bin:
  	$(BUILD) -lelf
  
 -$(OUTPUT)test-libunwind-debug-frame.bin:
 +test-libunwind-debug-frame.bin:
  	$(BUILD) -lelf
  
 -$(OUTPUT)test-libaudit.bin:
 +test-libaudit.bin:
  	$(BUILD) -laudit
  
 -$(OUTPUT)test-libslang.bin:
 +test-libslang.bin:
  	$(BUILD) -I/usr/include/slang -lslang
  
 -$(OUTPUT)test-libcrypto.bin:
 -	$(BUILD) -lcrypto
 -
 -$(OUTPUT)test-gtk2.bin:
 +test-gtk2.bin:
  	$(BUILD) $(shell $(PKG_CONFIG) --libs --cflags gtk+-2.0 2>/dev/null)
  
 -$(OUTPUT)test-gtk2-infobar.bin:
 +test-gtk2-infobar.bin:
  	$(BUILD) $(shell $(PKG_CONFIG) --libs --cflags gtk+-2.0 2>/dev/null)
  
  grep-libs  = $(filter -l%,$(1))
diff --git a/tools/build/Makefile.feature b/tools/build/Makefile.feature
index 1b4ff2f58f17..86aa4edd70ce 100644
--- a/tools/build/Makefile.feature
+++ b/tools/build/Makefile.feature
@@ -30,6 +30,7 @@ endef
 FEATURE_TESTS_BASIC :=			\
 	backtrace			\
 	dwarf				\
+	dwarf_getlocations		\
 	fortify-source			\
 	sync-compare-and-swap		\
 	glibc				\
@@ -75,6 +76,7 @@ endif
 
 FEATURE_DISPLAY ?=			\
 	dwarf				\
+	dwarf_getlocations		\
 	glibc				\
 	gtk2				\
 	libaudit			\
* Unmerged path tools/build/feature/Makefile
diff --git a/tools/build/feature/test-all.c b/tools/build/feature/test-all.c
index 272f5e2920d4..a87d58b956ce 100644
--- a/tools/build/feature/test-all.c
+++ b/tools/build/feature/test-all.c
@@ -41,6 +41,10 @@
 # include "test-dwarf.c"
 #undef main
 
+#define main main_test_dwarf_getlocations
+# include "test-dwarf_getlocations.c"
+#undef main
+
 #define main main_test_libelf_getphdrnum
 # include "test-libelf-getphdrnum.c"
 #undef main
@@ -135,6 +139,7 @@ int main(int argc, char *argv[])
 	main_test_libelf_mmap();
 	main_test_glibc();
 	main_test_dwarf();
+	main_test_dwarf_getlocations();
 	main_test_libelf_getphdrnum();
 	main_test_libunwind();
 	main_test_libaudit();
diff --git a/tools/build/feature/test-dwarf_getlocations.c b/tools/build/feature/test-dwarf_getlocations.c
new file mode 100644
index 000000000000..70162699dd43
--- /dev/null
+++ b/tools/build/feature/test-dwarf_getlocations.c
@@ -0,0 +1,12 @@
+#include <stdlib.h>
+#include <elfutils/libdw.h>
+
+int main(void)
+{
+	Dwarf_Addr base, start, end;
+	Dwarf_Attribute attr;
+	Dwarf_Op *op;
+        size_t nops;
+	ptrdiff_t offset = 0;
+        return (int)dwarf_getlocations(&attr, offset, &base, &start, &end, &op, &nops);
+}
diff --git a/tools/perf/config/Makefile b/tools/perf/config/Makefile
index f4664e512a9e..0a24c334493c 100644
--- a/tools/perf/config/Makefile
+++ b/tools/perf/config/Makefile
@@ -261,6 +261,12 @@ else
     ifneq ($(feature-dwarf), 1)
       msg := $(warning No libdw.h found or old libdw.h found or elfutils is older than 0.138, disables dwarf support. Please install new elfutils-devel/libdw-dev);
       NO_DWARF := 1
+    else
+      ifneq ($(feature-dwarf_getlocations), 1)
+        msg := $(warning Old libdw.h, finding variables at given 'perf probe' point will not work, install elfutils-devel/libdw-dev >= 0.157);
+      else
+        CFLAGS += -DHAVE_DWARF_GETLOCATIONS
+      endif # dwarf_getlocations
     endif # Dwarf support
   endif # libelf support
 endif # NO_LIBELF
diff --git a/tools/perf/util/dwarf-aux.c b/tools/perf/util/dwarf-aux.c
index 577e600c8eb1..aea189b41cc8 100644
--- a/tools/perf/util/dwarf-aux.c
+++ b/tools/perf/util/dwarf-aux.c
@@ -959,6 +959,7 @@ int die_get_varname(Dwarf_Die *vr_die, struct strbuf *buf)
 	return 0;
 }
 
+#ifdef HAVE_DWARF_GETLOCATIONS
 /**
  * die_get_var_innermost_scope - Get innermost scope range of given variable DIE
  * @sp_die: a subprogram DIE
@@ -1080,3 +1081,11 @@ int die_get_var_range(Dwarf_Die *sp_die, Dwarf_Die *vr_die, struct strbuf *buf)
 
 	return ret;
 }
+#else
+int die_get_var_range(Dwarf_Die *sp_die __maybe_unused,
+		      Dwarf_Die *vr_die __maybe_unused,
+		      struct strbuf *buf __maybe_unused)
+{
+	return -ENOTSUP;
+}
+#endif
