drm/i915/kbl: Add WaForGAMHang

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] i915/kbl: Add WaForGAMHang (Rob Clark) [1348329 1349064]
Rebuild_FUZZ: 92.86%
commit-author Mika Kuoppala <mika.kuoppala@linux.intel.com>
commit 0b2d0934edceff9905b1202d0e7e91f1b6228485
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0b2d0934.failed

Add this workaround for A0 and B0 revisions

References: HSD#2226935
	Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
	Reviewed-by: Matthew Auld <matthew.auld@intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/1465309159-30531-19-git-send-email-mika.kuoppala@intel.com
(cherry picked from commit 0b2d0934edceff9905b1202d0e7e91f1b6228485)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_lrc.c
diff --cc drivers/gpu/drm/i915/intel_lrc.c
index 424e62197787,6342b5a1c14e..000000000000
--- a/drivers/gpu/drm/i915/intel_lrc.c
+++ b/drivers/gpu/drm/i915/intel_lrc.c
@@@ -1286,10 -1649,13 +1286,18 @@@ static int gen8_emit_flush_render(struc
  				  u32 invalidate_domains,
  				  u32 flush_domains)
  {
++<<<<<<< HEAD
 +	struct intel_engine_cs *ring = ringbuf->ring;
 +	u32 scratch_addr = ring->scratch.gtt_offset + 2 * CACHELINE_BYTES;
++=======
+ 	struct intel_ringbuffer *ringbuf = request->ringbuf;
+ 	struct intel_engine_cs *engine = ringbuf->engine;
+ 	u32 scratch_addr = engine->scratch.gtt_offset + 2 * CACHELINE_BYTES;
+ 	bool vf_flush_wa = false, dc_flush_wa = false;
++>>>>>>> 0b2d0934edce (drm/i915/kbl: Add WaForGAMHang)
  	u32 flags = 0;
  	int ret;
+ 	int len;
  
  	flags |= PIPE_CONTROL_CS_STALL;
  
@@@ -1307,12 -1675,49 +1315,58 @@@
  		flags |= PIPE_CONTROL_STATE_CACHE_INVALIDATE;
  		flags |= PIPE_CONTROL_QW_WRITE;
  		flags |= PIPE_CONTROL_GLOBAL_GTT_IVB;
++<<<<<<< HEAD
 +	}
 +
 +	ret = intel_logical_ring_begin(ringbuf, ctx, 6);
 +	if (ret)
 +		return ret;
 +
++=======
+ 
+ 		/*
+ 		 * On GEN9: before VF_CACHE_INVALIDATE we need to emit a NULL
+ 		 * pipe control.
+ 		 */
+ 		if (IS_GEN9(request->i915))
+ 			vf_flush_wa = true;
+ 
+ 		/* WaForGAMHang:kbl */
+ 		if (IS_KBL_REVID(request->i915, 0, KBL_REVID_B0))
+ 			dc_flush_wa = true;
+ 	}
+ 
+ 	len = 6;
+ 
+ 	if (vf_flush_wa)
+ 		len += 6;
+ 
+ 	if (dc_flush_wa)
+ 		len += 12;
+ 
+ 	ret = intel_ring_begin(request, len);
+ 	if (ret)
+ 		return ret;
+ 
+ 	if (vf_flush_wa) {
+ 		intel_logical_ring_emit(ringbuf, GFX_OP_PIPE_CONTROL(6));
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 	}
+ 
+ 	if (dc_flush_wa) {
+ 		intel_logical_ring_emit(ringbuf, GFX_OP_PIPE_CONTROL(6));
+ 		intel_logical_ring_emit(ringbuf, PIPE_CONTROL_DC_FLUSH_ENABLE);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 		intel_logical_ring_emit(ringbuf, 0);
+ 	}
+ 
++>>>>>>> 0b2d0934edce (drm/i915/kbl: Add WaForGAMHang)
  	intel_logical_ring_emit(ringbuf, GFX_OP_PIPE_CONTROL(6));
  	intel_logical_ring_emit(ringbuf, flags);
  	intel_logical_ring_emit(ringbuf, scratch_addr);
* Unmerged path drivers/gpu/drm/i915/intel_lrc.c
