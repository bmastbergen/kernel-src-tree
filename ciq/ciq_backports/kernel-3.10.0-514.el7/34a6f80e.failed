md/raid5: use bio_list for the list of bios to return.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [md] raid5: use bio_list for the list of bios to return (Jes Sorensen) [1250578 1265947 1273343 1299140 1307091 1312828 1320563 1340839]
Rebuild_FUZZ: 96.15%
commit-author NeilBrown <neilb@suse.com>
commit 34a6f80e1639b124f24b5fadc1d45d69417cbace
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/34a6f80e.failed

This will make it easier to splice two lists together which will
be needed in future patch.

	Signed-off-by: NeilBrown <neilb@suse.com>
(cherry picked from commit 34a6f80e1639b124f24b5fadc1d45d69417cbace)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5.c
diff --cc drivers/md/raid5.c
index 5e75c2e2a98e,214dcca0d7f8..000000000000
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@@ -223,14 -223,11 +223,20 @@@ static int raid6_idx_to_slot(int idx, s
  	return slot;
  }
  
- static void return_io(struct bio *return_bi)
+ static void return_io(struct bio_list *return_bi)
  {
++<<<<<<< HEAD
 +	struct bio *bi = return_bi;
 +	while (bi) {
 +
 +		return_bi = bi->bi_next;
 +		bi->bi_next = NULL;
 +		bi->bi_size = 0;
++=======
+ 	struct bio *bi;
+ 	while ((bi = bio_list_pop(return_bi)) != NULL) {
+ 		bi->bi_iter.bi_size = 0;
++>>>>>>> 34a6f80e1639 (md/raid5: use bio_list for the list of bios to return.)
  		trace_block_bio_complete(bdev_get_queue(bi->bi_bdev),
  					 bi, 0);
  		bio_endio(bi, 0);
@@@ -1193,13 -1194,11 +1198,11 @@@ static void ops_complete_biofill(void *
  			BUG_ON(!dev->read);
  			rbi = dev->read;
  			dev->read = NULL;
 -			while (rbi && rbi->bi_iter.bi_sector <
 +			while (rbi && rbi->bi_sector <
  				dev->sector + STRIPE_SECTORS) {
  				rbi2 = r5_next_bio(rbi, dev->sector);
- 				if (!raid5_dec_bi_active_stripes(rbi)) {
- 					rbi->bi_next = return_bi;
- 					return_bi = rbi;
- 				}
+ 				if (!raid5_dec_bi_active_stripes(rbi))
+ 					bio_list_add(&return_bi, rbi);
  				rbi = rbi2;
  			}
  		}
* Unmerged path drivers/md/raid5.c
diff --git a/drivers/md/raid5.h b/drivers/md/raid5.h
index 8a15d8a6b4e3..f28b9f23b440 100644
--- a/drivers/md/raid5.h
+++ b/drivers/md/raid5.h
@@ -265,7 +265,7 @@ struct stripe_head_state {
 	int dec_preread_active;
 	unsigned long ops_request;
 
-	struct bio *return_bi;
+	struct bio_list return_bi;
 	struct md_rdev *blocked_rdev;
 	int handle_bad_blocks;
 };
