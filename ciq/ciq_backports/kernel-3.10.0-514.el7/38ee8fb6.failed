sctp: convert sack_needed and sack_generation to bits

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
commit 38ee8fb67c3457f36f5137073c4b8ac2436d2393
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/38ee8fb6.failed

They don't need to be any bigger than that and with this we start a new
bitfield for tracking association runtime stuff, like zero window
situation.

	Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Acked-by: Vlad Yasevich <vyasevich@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 38ee8fb67c3457f36f5137073c4b8ac2436d2393)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/sctp/structs.h
diff --cc include/net/sctp/structs.h
index 7a7c7cb8b173,7bbb71081aeb..000000000000
--- a/include/net/sctp/structs.h
+++ b/include/net/sctp/structs.h
@@@ -785,10 -775,11 +785,16 @@@ struct sctp_transport 
  		hb_sent:1,
  
  		/* Is the Path MTU update pending on this tranport */
- 		pmtu_pending:1;
+ 		pmtu_pending:1,
  
++<<<<<<< HEAD
 +	/* Has this transport moved the ctsn since we last sacked */
 +	__u32 sack_generation;
++=======
+ 		/* Has this transport moved the ctsn since we last sacked */
+ 		sack_generation:1;
+ 	u32 dst_cookie;
++>>>>>>> 38ee8fb67c34 (sctp: convert sack_needed and sack_generation to bits)
  
  	struct flowi fl;
  
@@@ -1481,39 -1468,39 +1487,57 @@@ struct sctp_association 
  		 */
  		struct sctp_tsnmap tsn_map;
  
++<<<<<<< HEAD
 +		/* Ack State   : This flag indicates if the next received
++=======
+ 		/* This mask is used to disable sending the ASCONF chunk
+ 		 * with specified parameter to peer.
+ 		 */
+ 		__be16 addip_disabled_mask;
+ 
+ 		/* These are capabilities which our peer advertised.  */
+ 		__u8	ecn_capable:1,      /* Can peer do ECN? */
+ 			ipv4_address:1,     /* Peer understands IPv4 addresses? */
+ 			ipv6_address:1,     /* Peer understands IPv6 addresses? */
+ 			hostname_address:1, /* Peer understands DNS addresses? */
+ 			asconf_capable:1,   /* Does peer support ADDIP? */
+ 			prsctp_capable:1,   /* Can peer do PR-SCTP? */
+ 			auth_capable:1;     /* Is peer doing SCTP-AUTH? */
+ 
+ 		/* sack_needed : This flag indicates if the next received
++>>>>>>> 38ee8fb67c34 (sctp: convert sack_needed and sack_generation to bits)
  		 *             : packet is to be responded to with a
- 		 *             : SACK. This is initializedto 0.  When a packet
- 		 *             : is received it is incremented. If this value
+ 		 *             : SACK. This is initialized to 0.  When a packet
+ 		 *             : is received sack_cnt is incremented. If this value
  		 *             : reaches 2 or more, a SACK is sent and the
  		 *             : value is reset to 0. Note: This is used only
  		 *             : when no DATA chunks are received out of
  		 *             : order.  When DATA chunks are out of order,
  		 *             : SACK's are not delayed (see Section 6).
  		 */
- 		__u8    sack_needed;     /* Do we need to sack the peer? */
+ 		__u8    sack_needed:1,     /* Do we need to sack the peer? */
+ 			sack_generation:1;
  		__u32	sack_cnt;
- 		__u32	sack_generation;
  
 +		/* These are capabilities which our peer advertised.  */
 +		__u8	ecn_capable:1,	    /* Can peer do ECN? */
 +			ipv4_address:1,	    /* Peer understands IPv4 addresses? */
 +			ipv6_address:1,	    /* Peer understands IPv6 addresses? */
 +			hostname_address:1, /* Peer understands DNS addresses? */
 +			asconf_capable:1,   /* Does peer support ADDIP? */
 +			prsctp_capable:1,   /* Can peer do PR-SCTP? */
 +			auth_capable:1;	    /* Is peer doing SCTP-AUTH? */
 +
  		__u32   adaptation_ind;	 /* Adaptation Code point. */
  
 +		/* This mask is used to disable sending the ASCONF chunk
 +		 * with specified parameter to peer.
 +		 */
 +		__be16 addip_disabled_mask;
 +
  		struct sctp_inithdr_host i;
 -		void *cookie;
  		int cookie_len;
 +		void *cookie;
  
  		/* ADDIP Section 4.2 Upon reception of an ASCONF Chunk.
  		 * C1) ... "Peer-Serial-Number'. This value MUST be initialized to the
* Unmerged path include/net/sctp/structs.h
