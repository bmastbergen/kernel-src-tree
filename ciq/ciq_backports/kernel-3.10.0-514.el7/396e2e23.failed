r8152: change rx early size when the mtu is changed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author hayeswang <hayeswang@realtek.com>
commit 396e2e235af79b39d605ad6259f366e502e21959
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/396e2e23.failed

The rx early size is calculated with the mtu, so it has to be
re-calculated when the mtu is changed.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 396e2e235af79b39d605ad6259f366e502e21959)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index e3d600def538,5a3a689b3a60..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -3402,6 -3774,40 +3402,43 @@@ out
  	return res;
  }
  
++<<<<<<< HEAD
++=======
+ static int rtl8152_change_mtu(struct net_device *dev, int new_mtu)
+ {
+ 	struct r8152 *tp = netdev_priv(dev);
+ 	int ret;
+ 
+ 	switch (tp->version) {
+ 	case RTL_VER_01:
+ 	case RTL_VER_02:
+ 		return eth_change_mtu(dev, new_mtu);
+ 	default:
+ 		break;
+ 	}
+ 
+ 	if (new_mtu < 68 || new_mtu > RTL8153_MAX_MTU)
+ 		return -EINVAL;
+ 
+ 	ret = usb_autopm_get_interface(tp->intf);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	mutex_lock(&tp->control);
+ 
+ 	dev->mtu = new_mtu;
+ 
+ 	if (netif_running(dev) && netif_carrier_ok(dev))
+ 		r8153_set_rx_early_size(tp);
+ 
+ 	mutex_unlock(&tp->control);
+ 
+ 	usb_autopm_put_interface(tp->intf);
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> 396e2e235af7 (r8152: change rx early size when the mtu is changed)
  static const struct net_device_ops rtl8152_netdev_ops = {
  	.ndo_open		= rtl8152_open,
  	.ndo_stop		= rtl8152_close,
* Unmerged path drivers/net/usb/r8152.c
