perf hists browser: The dso can be obtained from popup_action->ms.map->dso

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit b7f294b58adb02d928dccb04bd39cb789db09e1f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b7f294b5.failed

So no need to have a 'dso' member in 'popup_action', remove it as no
code is using it, already.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-76a6s0007slug0op0wkl6o8b@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit b7f294b58adb02d928dccb04bd39cb789db09e1f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/browsers/hists.c
diff --cc tools/perf/ui/browsers/hists.c
index 6d5247caf146,fa9eb92c9e24..000000000000
--- a/tools/perf/ui/browsers/hists.c
+++ b/tools/perf/ui/browsers/hists.c
@@@ -1421,8 -1430,8 +1421,7 @@@ close_file_and_continue
  
  struct popup_action {
  	struct thread 		*thread;
- 	struct dso		*dso;
  	struct map_symbol 	ms;
 -	int			socket;
  
  	int (*fn)(struct hist_browser *browser, struct popup_action *act);
  };
@@@ -1551,10 -1560,10 +1550,14 @@@ add_dso_opt(struct hist_browser *browse
  
  	if (asprintf(optstr, "Zoom %s %s DSO",
  		     browser->hists->dso_filter ? "out of" : "into",
 -		     __map__is_kernel(map) ? "the Kernel" : map->dso->short_name) < 0)
 +		     dso->kernel ? "the Kernel" : dso->short_name) < 0)
  		return 0;
  
++<<<<<<< HEAD
 +	act->dso = dso;
++=======
+ 	act->ms.map = map;
++>>>>>>> b7f294b58adb (perf hists browser: The dso can be obtained from popup_action->ms.map->dso)
  	act->fn = do_zoom_dso;
  	return 1;
  }
@@@ -1779,8 -1825,9 +1782,12 @@@ static int perf_evsel__hists_browse(str
  
  	while (1) {
  		struct thread *thread = NULL;
++<<<<<<< HEAD
 +		struct dso *dso = NULL;
++=======
+ 		struct map *map = NULL;
++>>>>>>> b7f294b58adb (perf hists browser: The dso can be obtained from popup_action->ms.map->dso)
  		int choice = 0;
 -		int socked_id = -1;
  
  		nr_options = 0;
  
@@@ -1788,7 -1835,8 +1795,12 @@@
  
  		if (browser->he_selection != NULL) {
  			thread = hist_browser__selected_thread(browser);
++<<<<<<< HEAD
 +			dso = browser->selection->map ? browser->selection->map->dso : NULL;
++=======
+ 			map = browser->selection->map;
+ 			socked_id = browser->he_selection->socket;
++>>>>>>> b7f294b58adb (perf hists browser: The dso can be obtained from popup_action->ms.map->dso)
  		}
  		switch (key) {
  		case K_TAB:
* Unmerged path tools/perf/ui/browsers/hists.c
