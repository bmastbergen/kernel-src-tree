drm/i915/skl: Add WaDisableGafsUnitClkGating

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] i915/skl: Add WaDisableGafsUnitClkGating (Rob Clark) [1348329 1349064]
Rebuild_FUZZ: 95.24%
commit-author Mika Kuoppala <mika.kuoppala@linux.intel.com>
commit eee8efb02a0f9284d85e6b3688f944ca765d7ad3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eee8efb0.failed

We need to disable clock gating in this unit to work around
hardware issue causing possible corruption/hang.

v2: name the bit (Ville)
v3: leave the fix enabled for 2227050 and set correct bit (Matthew)

References: HSD#2227156, HSD#2227050
	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Cc: Matthew Auld <matthew.william.auld@gmail.com>
	Reviewed-by: Matthew Auld <matthew.auld@intel.com>
	Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
Link: http://patchwork.freedesktop.org/patch/msgid/1465309159-30531-2-git-send-email-mika.kuoppala@intel.com
(cherry picked from commit eee8efb02a0f9284d85e6b3688f944ca765d7ad3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_ringbuffer.c
diff --cc drivers/gpu/drm/i915/intel_ringbuffer.c
index 005b5e04de4d,16e87a828643..000000000000
--- a/drivers/gpu/drm/i915/intel_ringbuffer.c
+++ b/drivers/gpu/drm/i915/intel_ringbuffer.c
@@@ -1024,28 -1112,96 +1024,46 @@@ static int skl_init_workarounds(struct 
  				  HDC_FENCE_DEST_SLM_DISABLE |
  				  HDC_BARRIER_PERFORMANCE_DISABLE);
  
++<<<<<<< HEAD
 +	return skl_tune_iz_hashing(ring);
++=======
+ 	/* WaDisableSbeCacheDispatchPortSharing:skl */
+ 	if (IS_SKL_REVID(dev_priv, 0, SKL_REVID_F0))
+ 		WA_SET_BIT_MASKED(
+ 			GEN7_HALF_SLICE_CHICKEN1,
+ 			GEN7_SBE_SS_CACHE_DISPATCH_PORT_SHARING_DISABLE);
+ 
+ 	/* WaDisableGafsUnitClkGating:skl */
+ 	WA_SET_BIT(GEN7_UCGCTL4, GEN8_EU_GAUNIT_CLOCK_GATE_DISABLE);
+ 
+ 	/* WaDisableLSQCROPERFforOCL:skl */
+ 	ret = wa_ring_whitelist_reg(engine, GEN8_L3SQCREG4);
+ 	if (ret)
+ 		return ret;
+ 
+ 	return skl_tune_iz_hashing(engine);
++>>>>>>> eee8efb02a0f (drm/i915/skl: Add WaDisableGafsUnitClkGating)
  }
  
 -static int bxt_init_workarounds(struct intel_engine_cs *engine)
 +int init_workarounds_ring(struct intel_engine_cs *ring)
  {
 -	struct drm_i915_private *dev_priv = engine->i915;
 -	int ret;
 -
 -	ret = gen9_init_workarounds(engine);
 -	if (ret)
 -		return ret;
 -
 -	/* WaStoreMultiplePTEenable:bxt */
 -	/* This is a requirement according to Hardware specification */
 -	if (IS_BXT_REVID(dev_priv, 0, BXT_REVID_A1))
 -		I915_WRITE(TILECTL, I915_READ(TILECTL) | TILECTL_TLBPF);
 -
 -	/* WaSetClckGatingDisableMedia:bxt */
 -	if (IS_BXT_REVID(dev_priv, 0, BXT_REVID_A1)) {
 -		I915_WRITE(GEN7_MISCCPCTL, (I915_READ(GEN7_MISCCPCTL) &
 -					    ~GEN8_DOP_CLOCK_GATE_MEDIA_ENABLE));
 -	}
 -
 -	/* WaDisableThreadStallDopClockGating:bxt */
 -	WA_SET_BIT_MASKED(GEN8_ROW_CHICKEN,
 -			  STALL_DOP_GATING_DISABLE);
 -
 -	/* WaDisableSbeCacheDispatchPortSharing:bxt */
 -	if (IS_BXT_REVID(dev_priv, 0, BXT_REVID_B0)) {
 -		WA_SET_BIT_MASKED(
 -			GEN7_HALF_SLICE_CHICKEN1,
 -			GEN7_SBE_SS_CACHE_DISPATCH_PORT_SHARING_DISABLE);
 -	}
 -
 -	/* WaDisableObjectLevelPreemptionForTrifanOrPolygon:bxt */
 -	/* WaDisableObjectLevelPreemptionForInstancedDraw:bxt */
 -	/* WaDisableObjectLevelPreemtionForInstanceId:bxt */
 -	/* WaDisableLSQCROPERFforOCL:bxt */
 -	if (IS_BXT_REVID(dev_priv, 0, BXT_REVID_A1)) {
 -		ret = wa_ring_whitelist_reg(engine, GEN9_CS_DEBUG_MODE1);
 -		if (ret)
 -			return ret;
 -
 -		ret = wa_ring_whitelist_reg(engine, GEN8_L3SQCREG4);
 -		if (ret)
 -			return ret;
 -	}
 -
 -	/* WaProgramL3SqcReg1DefaultForPerf:bxt */
 -	if (IS_BXT_REVID(dev_priv, BXT_REVID_B0, REVID_FOREVER))
 -		I915_WRITE(GEN8_L3SQCREG1, L3_GENERAL_PRIO_CREDITS(62) |
 -					   L3_HIGH_PRIO_CREDITS(2));
 -
 -	return 0;
 -}
 -
 -int init_workarounds_ring(struct intel_engine_cs *engine)
 -{
 -	struct drm_i915_private *dev_priv = engine->i915;
 +	struct drm_device *dev = ring->dev;
 +	struct drm_i915_private *dev_priv = dev->dev_private;
  
 -	WARN_ON(engine->id != RCS);
 +	WARN_ON(ring->id != RCS);
  
  	dev_priv->workarounds.count = 0;
 -	dev_priv->workarounds.hw_whitelist_count[RCS] = 0;
 -
 -	if (IS_BROADWELL(dev_priv))
 -		return bdw_init_workarounds(engine);
  
 -	if (IS_CHERRYVIEW(dev_priv))
 -		return chv_init_workarounds(engine);
 +	if (IS_BROADWELL(dev))
 +		return bdw_init_workarounds(ring);
  
 -	if (IS_SKYLAKE(dev_priv))
 -		return skl_init_workarounds(engine);
 +	if (IS_CHERRYVIEW(dev))
 +		return chv_init_workarounds(ring);
  
 -	if (IS_BROXTON(dev_priv))
 -		return bxt_init_workarounds(engine);
 +	if (IS_SKYLAKE(dev))
 +		return skl_init_workarounds(ring);
 +	else if (IS_GEN9(dev))
 +		return gen9_init_workarounds(ring);
  
  	return 0;
  }
diff --git a/drivers/gpu/drm/i915/i915_reg.h b/drivers/gpu/drm/i915/i915_reg.h
index bcce9fc478ee..59261ea63286 100644
--- a/drivers/gpu/drm/i915/i915_reg.h
+++ b/drivers/gpu/drm/i915/i915_reg.h
@@ -6099,6 +6099,7 @@ enum skl_disp_power_wells {
 
 #define GEN7_UCGCTL4				0x940c
 #define  GEN7_L3BANK2X_CLOCK_GATE_DISABLE	(1<<25)
+#define  GEN8_EU_GAUNIT_CLOCK_GATE_DISABLE	(1<<14)
 
 #define GEN6_RCGCTL1				0x9410
 #define GEN6_RCGCTL2				0x9414
* Unmerged path drivers/gpu/drm/i915/intel_ringbuffer.c
