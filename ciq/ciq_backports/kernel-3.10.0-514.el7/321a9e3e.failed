IB/mlx5: Fix port counter ID association to QP offset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alex Vesker <valex@mellanox.com>
commit 321a9e3ebccb5e6b61bd4efbb98ae259c6b8609b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/321a9e3e.failed

The q-counter-id is given in modify-QP command associates
the QP with the counter. The offset to which the counter
ID was set is incorrect, causing IB port counters not to
count on QP.

Fixes: 0837e86a7a34 ('IB/mlx5: Add per port counters')
	Signed-off-by: Alex Vesker <valex@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
	Tested-by: Mark Bloch <markb@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 321a9e3ebccb5e6b61bd4efbb98ae259c6b8609b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/qp.c
diff --cc drivers/infiniband/hw/mlx5/qp.c
index 9e23867af191,40b204551e57..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -1811,6 -2651,15 +1811,18 @@@ static int __mlx5_ib_modify_qp(struct i
  	else
  		sqd_event = 0;
  
++<<<<<<< HEAD
++=======
+ 	if (cur_state == IB_QPS_RESET && new_state == IB_QPS_INIT) {
+ 		u8 port_num = (attr_mask & IB_QP_PORT ? attr->port_num :
+ 			       qp->port) - 1;
+ 		struct mlx5_ib_port *mibport = &dev->port[port_num];
+ 
+ 		context->qp_counter_set_usr_page |=
+ 			cpu_to_be32((u32)(mibport->q_cnt_id) << 24);
+ 	}
+ 
++>>>>>>> 321a9e3ebccb (IB/mlx5: Fix port counter ID association to QP offset)
  	if (!ibqp->uobject && cur_state == IB_QPS_RESET && new_state == IB_QPS_INIT)
  		context->sq_crq_size |= cpu_to_be16(1 << 4);
  
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
