nfs: clean up nfs_direct_IO

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Peng Tao <tao.peng@primarydata.com>
commit 2854475f6c612d59901d51c358abd05643278b53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2854475f.failed

This follows up "nfs: fix dio deadlock when O_DIRECT flag is flipped"
and removes the unnecessary CONFIG_NFS_SWAP switch.

	Signed-off-by: Peng Tao <tao.peng@primarydata.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 2854475f6c612d59901d51c358abd05643278b53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/direct.c
diff --cc fs/nfs/direct.c
index 3b9c565ffd43,51f617e45fd1..000000000000
--- a/fs/nfs/direct.c
+++ b/fs/nfs/direct.c
@@@ -262,21 -259,11 +262,29 @@@ ssize_t nfs_direct_IO(int rw, struct ki
  	if (!IS_SWAPFILE(inode))
  		return 0;
  
++<<<<<<< HEAD
 +#ifndef CONFIG_NFS_SWAP
 +	dprintk("NFS: nfs_direct_IO (%pD) off/no(%Ld/%lu) EINVAL\n",
 +			iocb->ki_filp, (long long) pos, nr_segs);
 +
 +	return -EINVAL;
 +#else
 +	VM_BUG_ON(iocb->ki_left != PAGE_SIZE);
 +	VM_BUG_ON(iocb->ki_nbytes != PAGE_SIZE);
 +
 +	if (rw == READ || rw == KERNEL_READ)
 +		return nfs_file_direct_read(iocb, iov, nr_segs, pos,
 +				rw == READ ? true : false);
 +	return nfs_file_direct_write(iocb, iov, nr_segs, pos,
 +				rw == WRITE ? true : false);
 +#endif /* CONFIG_NFS_SWAP */
++=======
+ 	VM_BUG_ON(iocb->ki_nbytes != PAGE_SIZE);
+ 
+ 	if (rw == READ)
+ 		return nfs_file_direct_read(iocb, iter, pos);
+ 	return nfs_file_direct_write(iocb, iter, pos);
++>>>>>>> 2854475f6c61 (nfs: clean up nfs_direct_IO)
  }
  
  static void nfs_direct_release_pages(struct page **pages, unsigned int npages)
* Unmerged path fs/nfs/direct.c
