KVM: x86: request interrupt window when IRQ chip is split

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Matt Gingell <gingell@google.com>
commit 62a193edaf90df38356e292f47a17f28e0cee3f1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/62a193ed.failed

Before this patch, we incorrectly enter the guest without requesting an
interrupt window if the IRQ chip is split between user space and the
kernel.

Because lapic_in_kernel no longer implies the PIC is in the kernel, this
patch tests pic_in_kernel to determining whether an interrupt window
should be requested when entering the guest.

If the APIC is in the kernel and we request an interrupt window the
guest will return immediately. If the APIC is masked the guest will not
not make forward progress and unmask it, leading to a loop when KVM
reenters and requests again. This patch adds a check to ensure the APIC
is ready to accept an interrupt before requesting a window.

	Reviewed-by: Steve Rutherford <srutherford@google.com>
	Signed-off-by: Matt Gingell <gingell@google.com>
[Use the other newly introduced functions. - Paolo]
Fixes: 1c1a9ce973a7863dd46767226bce2a5f12d48bc6
	Cc: stable@vger.kernel.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 62a193edaf90df38356e292f47a17f28e0cee3f1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 733894b44f8d,eed32283d22c..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -6687,8 -6360,10 +6687,15 @@@ static void kvm_vcpu_flush_tlb(struct k
  static int vcpu_enter_guest(struct kvm_vcpu *vcpu)
  {
  	int r;
++<<<<<<< HEAD
 +	bool req_int_win = !irqchip_in_kernel(vcpu->kvm) &&
 +		vcpu->run->request_interrupt_window;
++=======
+ 	bool req_int_win =
+ 		dm_request_for_irq_injection(vcpu) &&
+ 		kvm_cpu_accept_dm_intr(vcpu);
+ 
++>>>>>>> 62a193edaf90 (KVM: x86: request interrupt window when IRQ chip is split)
  	bool req_immediate_exit = false;
  
  	if (vcpu->requests) {
* Unmerged path arch/x86/kvm/x86.c
