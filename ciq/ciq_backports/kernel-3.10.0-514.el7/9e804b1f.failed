IB/qib: Clean up register_ib_device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dennis Dalessandro <dennis.dalessandro@intel.com>
commit 9e804b1f2d9790ba69d7e27a44500bd4448215dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9e804b1f.failed

Remove some of the unnecessary code from qib_register_ib_device.

	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Reviewed-by: Harish Chegondi <harish.chegondi@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 9e804b1f2d9790ba69d7e27a44500bd4448215dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/qib/qib_verbs.c
diff --cc drivers/infiniband/hw/qib/qib_verbs.c
index c4417a1f33be,0116f5814b9f..000000000000
--- a/drivers/infiniband/hw/qib/qib_verbs.c
+++ b/drivers/infiniband/hw/qib/qib_verbs.c
@@@ -2190,88 -1703,15 +2190,64 @@@ int qib_register_ib_device(struct qib_d
  	strlcpy(ibdev->name, "qib%d", IB_DEVICE_NAME_MAX);
  	ibdev->owner = THIS_MODULE;
  	ibdev->node_guid = ppd->guid;
- 	ibdev->uverbs_abi_ver = QIB_UVERBS_ABI_VERSION;
- 	ibdev->uverbs_cmd_mask =
- 		(1ull << IB_USER_VERBS_CMD_GET_CONTEXT)         |
- 		(1ull << IB_USER_VERBS_CMD_QUERY_DEVICE)        |
- 		(1ull << IB_USER_VERBS_CMD_QUERY_PORT)          |
- 		(1ull << IB_USER_VERBS_CMD_ALLOC_PD)            |
- 		(1ull << IB_USER_VERBS_CMD_DEALLOC_PD)          |
- 		(1ull << IB_USER_VERBS_CMD_CREATE_AH)           |
- 		(1ull << IB_USER_VERBS_CMD_MODIFY_AH)           |
- 		(1ull << IB_USER_VERBS_CMD_QUERY_AH)            |
- 		(1ull << IB_USER_VERBS_CMD_DESTROY_AH)          |
- 		(1ull << IB_USER_VERBS_CMD_REG_MR)              |
- 		(1ull << IB_USER_VERBS_CMD_DEREG_MR)            |
- 		(1ull << IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL) |
- 		(1ull << IB_USER_VERBS_CMD_CREATE_CQ)           |
- 		(1ull << IB_USER_VERBS_CMD_RESIZE_CQ)           |
- 		(1ull << IB_USER_VERBS_CMD_DESTROY_CQ)          |
- 		(1ull << IB_USER_VERBS_CMD_POLL_CQ)             |
- 		(1ull << IB_USER_VERBS_CMD_REQ_NOTIFY_CQ)       |
- 		(1ull << IB_USER_VERBS_CMD_CREATE_QP)           |
- 		(1ull << IB_USER_VERBS_CMD_QUERY_QP)            |
- 		(1ull << IB_USER_VERBS_CMD_MODIFY_QP)           |
- 		(1ull << IB_USER_VERBS_CMD_DESTROY_QP)          |
- 		(1ull << IB_USER_VERBS_CMD_POST_SEND)           |
- 		(1ull << IB_USER_VERBS_CMD_POST_RECV)           |
- 		(1ull << IB_USER_VERBS_CMD_ATTACH_MCAST)        |
- 		(1ull << IB_USER_VERBS_CMD_DETACH_MCAST)        |
- 		(1ull << IB_USER_VERBS_CMD_CREATE_SRQ)          |
- 		(1ull << IB_USER_VERBS_CMD_MODIFY_SRQ)          |
- 		(1ull << IB_USER_VERBS_CMD_QUERY_SRQ)           |
- 		(1ull << IB_USER_VERBS_CMD_DESTROY_SRQ)         |
- 		(1ull << IB_USER_VERBS_CMD_POST_SRQ_RECV);
- 	ibdev->node_type = RDMA_NODE_IB_CA;
  	ibdev->phys_port_cnt = dd->num_pports;
- 	ibdev->num_comp_vectors = 1;
  	ibdev->dma_device = &dd->pcidev->dev;
++<<<<<<< HEAD
 +	ibdev->query_device = qib_query_device;
  	ibdev->modify_device = qib_modify_device;
  	ibdev->query_port = qib_query_port;
  	ibdev->modify_port = qib_modify_port;
 +	ibdev->query_pkey = qib_query_pkey;
  	ibdev->query_gid = qib_query_gid;
 +	ibdev->alloc_ucontext = qib_alloc_ucontext;
 +	ibdev->dealloc_ucontext = qib_dealloc_ucontext;
 +	ibdev->alloc_pd = qib_alloc_pd;
 +	ibdev->dealloc_pd = qib_dealloc_pd;
 +	ibdev->create_ah = qib_create_ah;
 +	ibdev->destroy_ah = qib_destroy_ah;
 +	ibdev->modify_ah = qib_modify_ah;
 +	ibdev->query_ah = qib_query_ah;
 +	ibdev->create_srq = qib_create_srq;
 +	ibdev->modify_srq = qib_modify_srq;
 +	ibdev->query_srq = qib_query_srq;
 +	ibdev->destroy_srq = qib_destroy_srq;
 +	ibdev->create_qp = qib_create_qp;
  	ibdev->modify_qp = qib_modify_qp;
 +	ibdev->query_qp = qib_query_qp;
  	ibdev->destroy_qp = qib_destroy_qp;
 +	ibdev->post_send = qib_post_send;
 +	ibdev->post_recv = qib_post_receive;
 +	ibdev->post_srq_recv = qib_post_srq_receive;
 +	ibdev->create_cq = qib_create_cq;
 +	ibdev->destroy_cq = qib_destroy_cq;
 +	ibdev->resize_cq = qib_resize_cq;
 +	ibdev->poll_cq = qib_poll_cq;
 +	ibdev->req_notify_cq = qib_req_notify_cq;
 +	ibdev->get_dma_mr = qib_get_dma_mr;
 +	ibdev->reg_phys_mr = qib_reg_phys_mr;
 +	ibdev->reg_user_mr = qib_reg_user_mr;
 +	ibdev->dereg_mr = qib_dereg_mr;
 +	ibdev->alloc_mr = qib_alloc_mr;
 +	ibdev->alloc_fast_reg_page_list = qib_alloc_fast_reg_page_list;
 +	ibdev->free_fast_reg_page_list = qib_free_fast_reg_page_list;
 +	ibdev->alloc_fmr = qib_alloc_fmr;
 +	ibdev->map_phys_fmr = qib_map_phys_fmr;
 +	ibdev->unmap_fmr = qib_unmap_fmr;
 +	ibdev->dealloc_fmr = qib_dealloc_fmr;
 +	ibdev->attach_mcast = qib_multicast_attach;
 +	ibdev->detach_mcast = qib_multicast_detach;
  	ibdev->process_mad = qib_process_mad;
 +	ibdev->mmap = qib_mmap;
 +	ibdev->dma_ops = NULL;
++=======
++	ibdev->modify_device = qib_modify_device;
++	ibdev->query_port = qib_query_port;
++	ibdev->modify_port = qib_modify_port;
++	ibdev->query_gid = qib_query_gid;
++	ibdev->modify_qp = qib_modify_qp;
++	ibdev->destroy_qp = qib_destroy_qp;
++	ibdev->process_mad = qib_process_mad;
++>>>>>>> 9e804b1f2d97 (IB/qib: Clean up register_ib_device)
  	ibdev->get_port_immutable = qib_port_immutable;
  
  	snprintf(ibdev->node_desc, sizeof(ibdev->node_desc),
@@@ -2283,11 -1723,41 +2259,39 @@@
  	dd->verbs_dev.rdi.driver_f.port_callback = qib_create_port_files;
  	dd->verbs_dev.rdi.driver_f.get_card_name = qib_get_card_name;
  	dd->verbs_dev.rdi.driver_f.get_pci_dev = qib_get_pci_dev;
 -	dd->verbs_dev.rdi.driver_f.check_ah = qib_check_ah;
 -	dd->verbs_dev.rdi.driver_f.notify_new_ah = qib_notify_new_ah;
 -	dd->verbs_dev.rdi.driver_f.alloc_qpn = alloc_qpn;
 -	dd->verbs_dev.rdi.driver_f.qp_priv_alloc = qp_priv_alloc;
 -	dd->verbs_dev.rdi.driver_f.qp_priv_free = qp_priv_free;
 -	dd->verbs_dev.rdi.driver_f.free_all_qps = qib_free_all_qps;
 -	dd->verbs_dev.rdi.driver_f.notify_qp_reset = notify_qp_reset;
 -	dd->verbs_dev.rdi.driver_f.do_send = qib_do_send;
 -	dd->verbs_dev.rdi.driver_f.schedule_send = qib_schedule_send;
 +	dd->verbs_dev.rdi.dparms.props.max_pd = ib_qib_max_pds;
 +	dd->verbs_dev.rdi.flags = (RVT_FLAG_MR_INIT_DRIVER |
 +				   RVT_FLAG_QP_INIT_DRIVER |
 +				   RVT_FLAG_CQ_INIT_DRIVER);
  
++<<<<<<< HEAD
++=======
+ 	dd->verbs_dev.rdi.dparms.lkey_table_size = qib_lkey_table_size;
+ 	dd->verbs_dev.rdi.dparms.qp_table_size = ib_qib_qp_table_size;
+ 	dd->verbs_dev.rdi.dparms.qpn_start = 1;
+ 	dd->verbs_dev.rdi.dparms.qpn_res_start = QIB_KD_QP;
+ 	dd->verbs_dev.rdi.dparms.qpn_res_end = QIB_KD_QP; /* Reserve one QP */
+ 	dd->verbs_dev.rdi.dparms.qpn_inc = 1;
+ 	dd->verbs_dev.rdi.dparms.qos_shift = 1;
+ 	dd->verbs_dev.rdi.dparms.psn_mask = QIB_PSN_MASK;
+ 	dd->verbs_dev.rdi.dparms.nports = dd->num_pports;
+ 	dd->verbs_dev.rdi.dparms.npkeys = qib_get_npkeys(dd);
+ 	dd->verbs_dev.rdi.dparms.node = dd->assigned_node_id;
+ 	snprintf(dd->verbs_dev.rdi.dparms.cq_name,
+ 		 sizeof(dd->verbs_dev.rdi.dparms.cq_name),
+ 		 "qib_cq%d", dd->unit);
+ 
+ 	qib_fill_device_attr(dd);
+ 
+ 	ppd = dd->pport;
+ 	for (i = 0; i < dd->num_pports; i++, ppd++) {
+ 		ctxt = ppd->hw_pidx;
+ 		rvt_init_port(&dd->verbs_dev.rdi,
+ 			      &ppd->ibport_data.rvp,
+ 			      i,
+ 			      dd->rcd[ctxt]->pkeys);
+ 	}
++>>>>>>> 9e804b1f2d97 (IB/qib: Clean up register_ib_device)
  
  	ret = rvt_register_device(&dd->verbs_dev.rdi);
  	if (ret)
* Unmerged path drivers/infiniband/hw/qib/qib_verbs.c
