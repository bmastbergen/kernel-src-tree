usb: core: notify disconnection when core detects disconnect

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [usb] core: notify disconnection when core detects disconnect (Don Zickus) [1303209]
Rebuild_FUZZ: 95.65%
commit-author Peter Chen <peter.chen@freescale.com>
commit b2108f1e519e983e5dd5712b3a44f7366ab509e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b2108f1e.failed

It is safe to call notify disconnect when the usb core
thinks the device is disconnected.

This commit also fixes one bug found at below situation:
we have not enabled usb wakeup, we do system suspend when
there is an usb device at the port, after suspend, we plug out
the usb device, then plug in device again. At that time,
the nofity disconnect was not called at current code, as
the controller doesn't know the usb device was disconnected
during the suspend, but USB core knows the port has changed
during that periods.

So to fix this problem, and let the usb core call notify disconnect.

	Cc: 3.17+ <stable@vger.kernel.org>
	Signed-off-by: Peter Chen <peter.chen@freescale.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit b2108f1e519e983e5dd5712b3a44f7366ab509e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/core/hub.c
diff --cc drivers/usb/core/hub.c
index 820ddf2f8ff4,b649fef2e35d..000000000000
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@@ -4632,9 -4624,8 +4632,14 @@@ static void hub_port_connect(struct usb
  
  	/* Disconnect any existing devices under this port */
  	if (udev) {
++<<<<<<< HEAD
 +		if (hcd->phy && !hdev->parent &&
 +				!(portstatus & USB_PORT_STAT_CONNECTION))
 +			usb_phy_notify_disconnect(hcd->phy, udev->speed);
++=======
+ 		if (hcd->usb_phy && !hdev->parent)
+ 			usb_phy_notify_disconnect(hcd->usb_phy, udev->speed);
++>>>>>>> b2108f1e519e (usb: core: notify disconnection when core detects disconnect)
  		usb_disconnect(&port_dev->child);
  	}
  
* Unmerged path drivers/usb/core/hub.c
