scsi_scan: fix queue depth initialisation problem

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author James Bottomley <JBottomley@Odin.com>
commit ef10b16948bc0db51a0140be5109ad73b170a011
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ef10b169.failed

Currently we blindly use the value of cmd_per_lun as the initial setting for
queue_depth.  This fails miserably (hangs the system) if it is zero, which is
the default value for anything uninitialised in the template.  The net result
is that every host template has to set a value for cmd_per_lun.  Instead, use
a default value of 1 if the actual value is unset.  This should pave the way
for removing cmd_per_lun from all the templates and eventually from SCSI
itself.

	Signed-off-by: James Bottomley <JBottomley@Odin.com>
(cherry picked from commit ef10b16948bc0db51a0140be5109ad73b170a011)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_scan.c
diff --cc drivers/scsi/scsi_scan.c
index a1f7936113ec,53a2e3391454..000000000000
--- a/drivers/scsi/scsi_scan.c
+++ b/drivers/scsi/scsi_scan.c
@@@ -293,7 -273,15 +293,19 @@@ static struct scsi_device *scsi_alloc_s
  	}
  	WARN_ON_ONCE(!blk_get_queue(sdev->request_queue));
  	sdev->request_queue->queuedata = sdev;
++<<<<<<< HEAD
 +	scsi_adjust_queue_depth(sdev, 0, sdev->host->cmd_per_lun);
++=======
+ 
+ 	if (!shost_use_blk_mq(sdev->host) &&
+ 	    (shost->bqt || shost->hostt->use_blk_tags)) {
+ 		blk_queue_init_tags(sdev->request_queue,
+ 				    sdev->host->cmd_per_lun, shost->bqt,
+ 				    shost->hostt->tag_alloc_policy);
+ 	}
+ 	scsi_change_queue_depth(sdev, sdev->host->cmd_per_lun ?
+ 					sdev->host->cmd_per_lun : 1);
++>>>>>>> ef10b16948bc (scsi_scan: fix queue depth initialisation problem)
  
  	scsi_sysfs_device_initialize(sdev);
  
* Unmerged path drivers/scsi/scsi_scan.c
