perf tools: Introduce opt_event_config nonterminal

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 1d55e8ef340dad1ccd5aaf53071de41fc3d8dba4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1d55e8ef.failed

To remove duplicated code that differs only in using the matching
'/a,b,c/' part or NULL if no event configuration is done ('//' or no
pair of slashes at all).

Will be used by some new targets allowing the configuration of hardware
events, etc.

Lifted part of the 'opt_event_config' nonterminal from a patch by Wang
Nan.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
	Cc: Brendan Gregg <brendan.d.gregg@gmail.com>
	Cc: Cody P Schafer <dev@codyps.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jeremie Galarneau <jeremie.galarneau@efficios.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Kirill Smelkov <kirr@nexedi.com>
	Cc: Li Zefan <lizefan@huawei.com>
	Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/n/tip-e3xzpx9cqsmwnaguaxyw6r42@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 1d55e8ef340dad1ccd5aaf53071de41fc3d8dba4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/parse-events.y
diff --cc tools/perf/util/parse-events.y
index 4a0cf2aee9da,ce68746bdc89..000000000000
--- a/tools/perf/util/parse-events.y
+++ b/tools/perf/util/parse-events.y
@@@ -380,12 -376,13 +371,18 @@@ tracepoint_name opt_event_confi
  	struct list_head *list;
  
  	ALLOC_LIST(list);
 -	if (error)
 -		error->idx = @1.first_column;
 -
  	if (parse_events_add_tracepoint(list, &data->idx, $1.sys, $1.event,
++<<<<<<< HEAD
 +					error)) {
 +		if (error)
 +			error->idx = @1.first_column;
 +		return -1;
 +	}
++=======
+ 					error, $2))
+ 		return -1;
+ 
++>>>>>>> 1d55e8ef340d (perf tools: Introduce opt_event_config nonterminal)
  	$$ = list;
  }
  
@@@ -431,6 -428,43 +428,46 @@@ PE_RA
  	$$ = list;
  }
  
++<<<<<<< HEAD
++=======
+ event_bpf_file:
+ PE_BPF_OBJECT
+ {
+ 	struct parse_events_evlist *data = _data;
+ 	struct parse_events_error *error = data->error;
+ 	struct list_head *list;
+ 
+ 	ALLOC_LIST(list);
+ 	ABORT_ON(parse_events_load_bpf(data, list, $1, false));
+ 	$$ = list;
+ }
+ |
+ PE_BPF_SOURCE
+ {
+ 	struct parse_events_evlist *data = _data;
+ 	struct list_head *list;
+ 
+ 	ALLOC_LIST(list);
+ 	ABORT_ON(parse_events_load_bpf(data, list, $1, true));
+ 	$$ = list;
+ }
+ 
+ opt_event_config:
+ '/' event_config '/'
+ {
+ 	$$ = $2;
+ }
+ |
+ '/' '/'
+ {
+ 	$$ = NULL;
+ }
+ |
+ {
+ 	$$ = NULL;
+ }
+ 
++>>>>>>> 1d55e8ef340d (perf tools: Introduce opt_event_config nonterminal)
  start_terms: event_config
  {
  	struct parse_events_terms *data = _data;
* Unmerged path tools/perf/util/parse-events.y
