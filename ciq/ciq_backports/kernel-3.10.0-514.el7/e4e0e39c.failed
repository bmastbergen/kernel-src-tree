IB/hfi1: Fix double QSFP resource acquire on cache refresh

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dean Luick <dean.luick@intel.com>
commit e4e0e39c8d41d5f6cb664a34ac7b2c6388b1b523
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e4e0e39c.failed

The function refresh_qsfp_cache() acquires the i2c chain resource,
but one caller already holds the resource.  Change the acquire so
all calls to refresh_qsfp_cache() are covered by the acquire and
remove the acquire within refresh_qsfp_cache().

	Reviewed-by: Easwar Hariharan <easwar.hariharan@intel.com>
	Signed-off-by: Dean Luick <dean.luick@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit e4e0e39c8d41d5f6cb664a34ac7b2c6388b1b523)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/qsfp.c
#	drivers/staging/rdma/hfi1/platform.c
diff --cc drivers/staging/hfi1/qsfp.c
index b16ff11927bd,2441669f0817..000000000000
--- a/drivers/staging/hfi1/qsfp.c
+++ b/drivers/staging/hfi1/qsfp.c
@@@ -419,7 -446,7 +421,11 @@@ int refresh_qsfp_cache(struct hfi1_ppor
  	return 0;
  
  bail:
++<<<<<<< HEAD:drivers/staging/hfi1/qsfp.c
 +	memset(cache, 0, (QSFP_MAX_NUM_PAGES*128));
++=======
+ 	memset(cache, 0, (QSFP_MAX_NUM_PAGES * 128));
++>>>>>>> e4e0e39c8d41 (IB/hfi1: Fix double QSFP resource acquire on cache refresh):drivers/staging/rdma/hfi1/qsfp.c
  	return ret;
  }
  
* Unmerged path drivers/staging/rdma/hfi1/platform.c
* Unmerged path drivers/staging/hfi1/qsfp.c
* Unmerged path drivers/staging/rdma/hfi1/platform.c
