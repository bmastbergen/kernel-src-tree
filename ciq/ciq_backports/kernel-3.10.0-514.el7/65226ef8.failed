vxlan: fix initialization with custom link parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Benc <jbenc@redhat.com>
commit 65226ef8ea167c773de4c5b31a0fd3cb3a08f5b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/65226ef8.failed

Commit 0c867c9bf84c ("vxlan: move Ethernet initialization to a separate
function") changed initialization order and as an unintended result, when the
user specifies additional link parameters (such as IFLA_ADDRESS) while
creating vxlan interface, those are overwritten by vxlan_ether_setup later.

It's necessary to call ether_setup from withing the ->setup callback. That
way, the correct parameters are set by rtnl_create_link later. This is done
also for VXLAN-GPE, as we don't know the interface type yet at that point,
and changed to the correct interface type later.

Fixes: 0c867c9bf84c ("vxlan: move Ethernet initialization to a separate function")
	Reported-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: Jiri Benc <jbenc@redhat.com>
	Tested-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 65226ef8ea167c773de4c5b31a0fd3cb3a08f5b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 9215c93ac7ca,2668e528dee4..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -2359,7 -2560,6 +2359,10 @@@ static void vxlan_setup(struct net_devi
  	eth_hw_addr_random(dev);
  	ether_setup(dev);
  
++<<<<<<< HEAD
 +	dev->netdev_ops = &vxlan_netdev_ops;
++=======
++>>>>>>> 65226ef8ea16 (vxlan: fix initialization with custom link parameters)
  	dev->destructor = free_netdev;
  	SET_NETDEV_DEVTYPE(dev, &vxlan_type);
  
@@@ -2392,6 -2593,23 +2395,26 @@@
  		INIT_HLIST_HEAD(&vxlan->fdb_head[h]);
  }
  
++<<<<<<< HEAD
++=======
+ static void vxlan_ether_setup(struct net_device *dev)
+ {
+ 	dev->priv_flags &= ~IFF_TX_SKB_SHARING;
+ 	dev->priv_flags |= IFF_LIVE_ADDR_CHANGE;
+ 	dev->netdev_ops = &vxlan_netdev_ether_ops;
+ }
+ 
+ static void vxlan_raw_setup(struct net_device *dev)
+ {
+ 	dev->header_ops = NULL;
+ 	dev->type = ARPHRD_NONE;
+ 	dev->hard_header_len = 0;
+ 	dev->addr_len = 0;
+ 	dev->flags = IFF_POINTOPOINT | IFF_NOARP | IFF_MULTICAST;
+ 	dev->netdev_ops = &vxlan_netdev_raw_ops;
+ }
+ 
++>>>>>>> 65226ef8ea16 (vxlan: fix initialization with custom link parameters)
  static const struct nla_policy vxlan_policy[IFLA_VXLAN_MAX + 1] = {
  	[IFLA_VXLAN_ID]		= { .type = NLA_U32 },
  	[IFLA_VXLAN_GROUP]	= { .len = FIELD_SIZEOF(struct iphdr, daddr) },
* Unmerged path drivers/net/vxlan.c
