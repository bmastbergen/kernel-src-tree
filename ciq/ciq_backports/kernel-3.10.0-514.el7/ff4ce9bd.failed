IB/hfi1: Make iovec loop index easy to understand

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dean Luick <dean.luick@intel.com>
commit ff4ce9bde9b2a88984c3ee359b952e35fe49c474
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ff4ce9bd.failed

	Reviewed-by: Ira Weiny <ira.weiny@intel.com>
	Signed-off-by: Dean Luick <dean.luick@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit ff4ce9bde9b2a88984c3ee359b952e35fe49c474)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/user_sdma.c
diff --cc drivers/staging/hfi1/user_sdma.c
index 1bbea48cb011,586f07807b27..000000000000
--- a/drivers/staging/hfi1/user_sdma.c
+++ b/drivers/staging/hfi1/user_sdma.c
@@@ -604,11 -657,15 +604,20 @@@ int hfi1_user_sdma_process_request(stru
  	idx++;
  
  	/* Save all the IO vector structures */
- 	while (i < req->data_iovs) {
+ 	for (i = 0; i < req->data_iovs; i++) {
  		INIT_LIST_HEAD(&req->iovs[i].list);
  		memcpy(&req->iovs[i].iov, iovec + idx++, sizeof(struct iovec));
++<<<<<<< HEAD:drivers/staging/hfi1/user_sdma.c
 +		req->iovs[i].offset = 0;
 +		req->data_len += req->iovs[i++].iov.iov_len;
++=======
+ 		ret = pin_vector_pages(req, &req->iovs[i]);
+ 		if (ret) {
+ 			req->status = ret;
+ 			goto free_req;
+ 		}
+ 		req->data_len += req->iovs[i].iov.iov_len;
++>>>>>>> ff4ce9bde9b2 (IB/hfi1: Make iovec loop index easy to understand):drivers/infiniband/hw/hfi1/user_sdma.c
  	}
  	SDMA_DBG(req, "total data length %u", req->data_len);
  
* Unmerged path drivers/staging/hfi1/user_sdma.c
