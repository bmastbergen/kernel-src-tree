mm: remove duplicated call of get_pfn_range_for_nid

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] remove duplicated call of get_pfn_range_for_nid (Yasuaki Ishimatsu) [1270209]
Rebuild_FUZZ: 95.92%
commit-author Zhang Yanfei <zhangyanfei@cn.fujitsu.com>
commit 7960aedde8cfa72e4caf488806ea7ea7d2fa8dba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7960aedd.failed

When calculating pages in a node, for each zone in that node, we will
have

  zone_spanned_pages_in_node
    --> get_pfn_range_for_nid
  zone_absent_pages_in_node
    --> get_pfn_range_for_nid

That is to say, we call the get_pfn_range_for_nid to get start_pfn and
end_pfn of the node for MAX_NR_ZONES * 2 times.  And this is totally
unnecessary if we call the get_pfn_range_for_nid before
zone_*_pages_in_node add two extra arguments node_start_pfn and
node_end_pfn for zone_*_pages_in_node, then we can remove the
get_pfn_range_in_node in zone_*_pages_in_node.

[akpm@linux-foundation.org: make definitions more readable]
	Signed-off-by: Zhang Yanfei <zhangyanfei@cn.fujitsu.com>
	Cc: Michal Hocko <mhocko@suse.cz>
	Cc: Wu Fengguang <fengguang.wu@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7960aedde8cfa72e4caf488806ea7ea7d2fa8dba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/page_alloc.c
diff --cc mm/page_alloc.c
index b86b8fe9815b,7d5e40fe0c29..000000000000
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@@ -4829,7 -4801,12 +4845,16 @@@ void __paginginit free_area_init_node(i
  
  	pgdat->node_id = nid;
  	pgdat->node_start_pfn = node_start_pfn;
++<<<<<<< HEAD
 +	calculate_node_totalpages(pgdat, zones_size, zholes_size);
++=======
+ 	init_zone_allows_reclaim(nid);
+ #ifdef CONFIG_HAVE_MEMBLOCK_NODE_MAP
+ 	get_pfn_range_for_nid(nid, &start_pfn, &end_pfn);
+ #endif
+ 	calculate_node_totalpages(pgdat, start_pfn, end_pfn,
+ 				  zones_size, zholes_size);
++>>>>>>> 7960aedde8cf (mm: remove duplicated call of get_pfn_range_for_nid)
  
  	alloc_node_mem_map(pgdat);
  #ifdef CONFIG_FLAT_NODE_MEM_MAP
* Unmerged path mm/page_alloc.c
