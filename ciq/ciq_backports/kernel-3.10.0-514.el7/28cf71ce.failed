drm/i915/vlv: Make intel_crt_reset() per-encoder

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [drm] i915/vlv: Make intel_crt_reset() per-encoder (Lyude Paul) [1277863]
Rebuild_FUZZ: 95.65%
commit-author Lyude <cpaul@redhat.com>
commit 28cf71ce3e206db1c3f30b3da31e7b48b2269e4c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/28cf71ce.failed

This lets call intel_crt_reset() in contexts where IRQs are disabled and
as such, can't hold the locks required to work with the connectors.

	Cc: stable@vger.kernel.org
	Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
	Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Signed-off-by: Lyude <cpaul@redhat.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit 28cf71ce3e206db1c3f30b3da31e7b48b2269e4c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_crt.c
diff --cc drivers/gpu/drm/i915/intel_crt.c
index 515d7123785d,9cd88293c960..000000000000
--- a/drivers/gpu/drm/i915/intel_crt.c
+++ b/drivers/gpu/drm/i915/intel_crt.c
@@@ -763,11 -717,11 +763,17 @@@ static int intel_crt_set_property(struc
  	return 0;
  }
  
- static void intel_crt_reset(struct drm_connector *connector)
+ static void intel_crt_reset(struct drm_encoder *encoder)
  {
++<<<<<<< HEAD
 +	struct drm_device *dev = connector->dev;
 +	struct drm_i915_private *dev_priv = dev->dev_private;
 +	struct intel_crt *crt = intel_attached_crt(connector);
++=======
+ 	struct drm_device *dev = encoder->dev;
+ 	struct drm_i915_private *dev_priv = to_i915(dev);
+ 	struct intel_crt *crt = intel_encoder_to_crt(to_intel_encoder(encoder));
++>>>>>>> 28cf71ce3e20 (drm/i915/vlv: Make intel_crt_reset() per-encoder)
  
  	if (INTEL_INFO(dev)->gen >= 5) {
  		u32 adpa;
@@@ -789,10 -743,11 +795,14 @@@
   */
  
  static const struct drm_connector_funcs intel_crt_connector_funcs = {
++<<<<<<< HEAD
 +	.reset = intel_crt_reset,
 +	.dpms = intel_crt_dpms,
++=======
+ 	.dpms = drm_atomic_helper_connector_dpms,
++>>>>>>> 28cf71ce3e20 (drm/i915/vlv: Make intel_crt_reset() per-encoder)
  	.detect = intel_crt_detect,
  	.fill_modes = drm_helper_probe_single_connector_modes,
 -	.late_register = intel_connector_register,
 -	.early_unregister = intel_connector_unregister,
  	.destroy = intel_crt_destroy,
  	.set_property = intel_crt_set_property,
  	.atomic_destroy_state = drm_atomic_helper_connector_destroy_state,
@@@ -925,8 -901,8 +936,8 @@@ void intel_crt_init(struct drm_device *
  		u32 fdi_config = FDI_RX_POLARITY_REVERSED_LPT |
  				 FDI_RX_LINK_REVERSAL_OVERRIDE;
  
 -		dev_priv->fdi_rx_config = I915_READ(FDI_RX_CTL(PIPE_A)) & fdi_config;
 +		dev_priv->fdi_rx_config = I915_READ(_FDI_RXA_CTL) & fdi_config;
  	}
  
- 	intel_crt_reset(connector);
+ 	intel_crt_reset(&crt->base.base);
  }
* Unmerged path drivers/gpu/drm/i915/intel_crt.c
