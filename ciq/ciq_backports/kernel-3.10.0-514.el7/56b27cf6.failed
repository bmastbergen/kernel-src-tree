fsnotify: remove pointless NULL initializers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jan Kara <jack@suse.cz>
commit 56b27cf6030dd36c56a5542ab8bfa406d337f083
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/56b27cf6.failed

We usually rely on the fact that struct members not specified in the
initializer are set to NULL.  So do that with fsnotify function pointers
as well.

	Signed-off-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Cc: Eric Paris <eparis@parisplace.org>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 56b27cf6030dd36c56a5542ab8bfa406d337f083)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/notify/dnotify/dnotify.c
#	fs/notify/fanotify/fanotify.c
#	kernel/audit_tree.c
#	kernel/audit_watch.c
diff --cc fs/notify/dnotify/dnotify.c
index 2bfe6dc413a0,0b9ff4395e6a..000000000000
--- a/fs/notify/dnotify/dnotify.c
+++ b/fs/notify/dnotify/dnotify.c
@@@ -153,10 -138,6 +153,13 @@@ static void dnotify_free_mark(struct fs
  
  static struct fsnotify_ops dnotify_fsnotify_ops = {
  	.handle_event = dnotify_handle_event,
++<<<<<<< HEAD
 +	.should_send_event = dnotify_should_send_event,
 +	.free_group_priv = NULL,
 +	.freeing_mark = NULL,
 +	.free_event_priv = NULL,
++=======
++>>>>>>> 56b27cf6030d (fsnotify: remove pointless NULL initializers)
  };
  
  /*
diff --cc fs/notify/fanotify/fanotify.c
index 0c2f9122b262,58772623f02a..000000000000
--- a/fs/notify/fanotify/fanotify.c
+++ b/fs/notify/fanotify/fanotify.c
@@@ -226,10 -216,18 +226,14 @@@ static void fanotify_free_group_priv(st
  	free_uid(user);
  }
  
 -static void fanotify_free_event(struct fsnotify_event *fsn_event)
 -{
 -	struct fanotify_event_info *event;
 -
 -	event = FANOTIFY_E(fsn_event);
 -	path_put(&event->path);
 -	put_pid(event->tgid);
 -	kmem_cache_free(fanotify_event_cachep, event);
 -}
 -
  const struct fsnotify_ops fanotify_fsnotify_ops = {
  	.handle_event = fanotify_handle_event,
 +	.should_send_event = fanotify_should_send_event,
  	.free_group_priv = fanotify_free_group_priv,
++<<<<<<< HEAD
 +	.free_event_priv = NULL,
 +	.freeing_mark = NULL,
++=======
+ 	.free_event = fanotify_free_event,
++>>>>>>> 56b27cf6030d (fsnotify: remove pointless NULL initializers)
  };
diff --cc kernel/audit_tree.c
index ea4c1d0e95c8,67ccf0e7cca9..000000000000
--- a/kernel/audit_tree.c
+++ b/kernel/audit_tree.c
@@@ -934,19 -934,8 +934,22 @@@ static void audit_tree_freeing_mark(str
  	BUG_ON(atomic_read(&entry->refcnt) < 1);
  }
  
 +static bool audit_tree_send_event(struct fsnotify_group *group, struct inode *inode,
 +				  struct fsnotify_mark *inode_mark,
 +				  struct fsnotify_mark *vfsmount_mark,
 +				  __u32 mask, void *data, int data_type)
 +{
 +	return false;
 +}
 +
  static const struct fsnotify_ops audit_tree_ops = {
  	.handle_event = audit_tree_handle_event,
++<<<<<<< HEAD
 +	.should_send_event = audit_tree_send_event,
 +	.free_group_priv = NULL,
 +	.free_event_priv = NULL,
++=======
++>>>>>>> 56b27cf6030d (fsnotify: remove pointless NULL initializers)
  	.freeing_mark = audit_tree_freeing_mark,
  };
  
diff --cc kernel/audit_watch.c
index c7d454ea3ffd,2596fac5dcb4..000000000000
--- a/kernel/audit_watch.c
+++ b/kernel/audit_watch.c
@@@ -512,11 -504,7 +512,14 @@@ static int audit_watch_handle_event(str
  }
  
  static const struct fsnotify_ops audit_watch_fsnotify_ops = {
 +	.should_send_event = 	audit_watch_should_send_event,
  	.handle_event = 	audit_watch_handle_event,
++<<<<<<< HEAD
 +	.free_group_priv = 	NULL,
 +	.freeing_mark = 	NULL,
 +	.free_event_priv = 	NULL,
++=======
++>>>>>>> 56b27cf6030d (fsnotify: remove pointless NULL initializers)
  };
  
  static int __init audit_watch_init(void)
* Unmerged path fs/notify/dnotify/dnotify.c
* Unmerged path fs/notify/fanotify/fanotify.c
* Unmerged path kernel/audit_tree.c
* Unmerged path kernel/audit_watch.c
