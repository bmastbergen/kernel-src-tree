perf hists: Fix comparing of dynamic entries

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 84b6ee8ea36ff797afa13c297a86ed0144482bee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/84b6ee8e.failed

When hist_entry__cmp() and hist_entry__collapse() are called, they
should check if the dynamic entry is comparing matching hists only.

Otherwise it might access different hists resulting in incorrect output.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1456512767-1164-1-git-send-email-namhyung@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 84b6ee8ea36ff797afa13c297a86ed0144482bee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/hist.c
diff --cc tools/perf/util/hist.c
index 9a525a5b649f,cc849d326211..000000000000
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@@ -984,7 -1000,12 +984,15 @@@ hist_entry__cmp(struct hist_entry *left
  	struct perf_hpp_fmt *fmt;
  	int64_t cmp = 0;
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_sort_list(fmt) {
++=======
+ 	hists__for_each_sort_list(hists, fmt) {
+ 		if (perf_hpp__is_dynamic_entry(fmt) &&
+ 		    !perf_hpp__defined_dynamic_entry(fmt, hists))
+ 			continue;
+ 
++>>>>>>> 84b6ee8ea36f (perf hists: Fix comparing of dynamic entries)
  		cmp = fmt->cmp(fmt, left, right);
  		if (cmp)
  			break;
@@@ -999,7 -1020,12 +1007,15 @@@ hist_entry__collapse(struct hist_entry 
  	struct perf_hpp_fmt *fmt;
  	int64_t cmp = 0;
  
++<<<<<<< HEAD
 +	perf_hpp__for_each_sort_list(fmt) {
++=======
+ 	hists__for_each_sort_list(hists, fmt) {
+ 		if (perf_hpp__is_dynamic_entry(fmt) &&
+ 		    !perf_hpp__defined_dynamic_entry(fmt, hists))
+ 			continue;
+ 
++>>>>>>> 84b6ee8ea36f (perf hists: Fix comparing of dynamic entries)
  		cmp = fmt->collapse(fmt, left, right);
  		if (cmp)
  			break;
* Unmerged path tools/perf/util/hist.c
