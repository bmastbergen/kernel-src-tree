mei: validate request value in client notify request ioctl

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit 7326fffb712f09a315bc73cc1ee63843f59b8bd4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7326fffb.failed

This patch address a possible security issue:

The request field in client notify request ioctl comes from user space
as u32 and is downcasted to u8 with out validation.
Check request field to have approved values
MEI_HBM_NOTIFICATION_STAR/STOP

	Cc: <stable@vger.kernel.org> #4.3+
	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 7326fffb712f09a315bc73cc1ee63843f59b8bd4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/main.c
diff --cc drivers/misc/mei/main.c
index b23f9eba9e3a,80f9afcb1382..000000000000
--- a/drivers/misc/mei/main.c
+++ b/drivers/misc/mei/main.c
@@@ -537,6 -446,49 +537,52 @@@ end
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * mei_ioctl_client_notify_request -
+  *     propagate event notification request to client
+  *
+  * @file: pointer to file structure
+  * @request: 0 - disable, 1 - enable
+  *
+  * Return: 0 on success , <0 on error
+  */
+ static int mei_ioctl_client_notify_request(struct file *file, u32 request)
+ {
+ 	struct mei_cl *cl = file->private_data;
+ 
+ 	if (request != MEI_HBM_NOTIFICATION_START &&
+ 	    request != MEI_HBM_NOTIFICATION_STOP)
+ 		return -EINVAL;
+ 
+ 	return mei_cl_notify_request(cl, file, (u8)request);
+ }
+ 
+ /**
+  * mei_ioctl_client_notify_get -  wait for notification request
+  *
+  * @file: pointer to file structure
+  * @notify_get: 0 - disable, 1 - enable
+  *
+  * Return: 0 on success , <0 on error
+  */
+ static int mei_ioctl_client_notify_get(struct file *file, u32 *notify_get)
+ {
+ 	struct mei_cl *cl = file->private_data;
+ 	bool notify_ev;
+ 	bool block = (file->f_flags & O_NONBLOCK) == 0;
+ 	int rets;
+ 
+ 	rets = mei_cl_notify_get(cl, block, &notify_ev);
+ 	if (rets)
+ 		return rets;
+ 
+ 	*notify_get = notify_ev ? 1 : 0;
+ 	return 0;
+ }
+ 
+ /**
++>>>>>>> 7326fffb712f (mei: validate request value in client notify request ioctl)
   * mei_ioctl - the IOCTL function
   *
   * @file: pointer to file structure
* Unmerged path drivers/misc/mei/main.c
