powerpc/powernv: Remove pnv_pci_probe_mode()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] powernv: Remove pnv_pci_probe_mode() (Gustavo Duarte) [1275657]
Rebuild_FUZZ: 90.00%
commit-author Gavin Shan <gwshan@linux.vnet.ibm.com>
commit a113de373bcb7651196e29a49483c8e24e1e6aa9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a113de37.failed

The callback (ppc_md.pci_probe_mode()) is used to determine if the
child PCI devices of the indicated PCI bus should be probed from
device-tree or hardware. On PowerNV platform, we always expect
probing PCI devices from hardware, which is PowerPC PCI core's
default behaviour. Also, the callback had some delay implemented
based on PHB's device node property "reset-clear-timestamp", which
wasn't exported from skiboot. So we don't need this function and
it's safe to remove it.

	Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit a113de373bcb7651196e29a49483c8e24e1e6aa9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/pci.c
diff --cc arch/powerpc/platforms/powernv/pci.c
index 3a74d719e520,e69142f4af08..000000000000
--- a/arch/powerpc/platforms/powernv/pci.c
+++ b/arch/powerpc/platforms/powernv/pci.c
@@@ -874,7 -822,11 +845,15 @@@ void __init pnv_pci_init(void
  
  	/* Configure IOMMU DMA hooks */
  	ppc_md.pci_dma_dev_setup = pnv_pci_dma_dev_setup;
++<<<<<<< HEAD
 +	ppc_md.pci_probe_mode = pnv_pci_probe_mode;
++=======
+ 	ppc_md.tce_build = pnv_tce_build_vm;
+ 	ppc_md.tce_free = pnv_tce_free_vm;
+ 	ppc_md.tce_build_rm = pnv_tce_build_rm;
+ 	ppc_md.tce_free_rm = pnv_tce_free_rm;
+ 	ppc_md.tce_get = pnv_tce_get;
++>>>>>>> a113de373bcb (powerpc/powernv: Remove pnv_pci_probe_mode())
  	set_pci_dma_ops(&dma_iommu_ops);
  
  	/* Configure MSIs */
* Unmerged path arch/powerpc/platforms/powernv/pci.c
