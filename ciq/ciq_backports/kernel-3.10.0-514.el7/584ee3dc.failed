intel_pstate: Fix "performance" mode behavior with HWP enabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexandra Yates <alexandra.yates@linux.intel.com>
commit 584ee3dcb1d6232857c1e38bb28d9f6bf0ec89f5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/584ee3dc.failed

If hardware-driven P-state selection (HWP) is enabled, the
"performance" mode of intel_pstate should only allow the processor
to use the highest-performance P-state available.  That is not
the case currently, so make it actually happen.

	Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Signed-off-by: Alexandra Yates <alexandra.yates@linux.intel.com>
[ rjw: Subject and changelog ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 584ee3dcb1d6232857c1e38bb28d9f6bf0ec89f5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 07d88cb77cb6,4d07cbd2b23c..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -986,12 -1099,10 +986,19 @@@ static int intel_pstate_set_policy(stru
  
  	if (policy->policy == CPUFREQ_POLICY_PERFORMANCE &&
  	    policy->max >= policy->cpuinfo.max_freq) {
++<<<<<<< HEAD
 +		limits.min_perf_pct = 100;
 +		limits.min_perf = int_tofp(1);
 +		limits.max_policy_pct = 100;
 +		limits.max_perf_pct = 100;
 +		limits.max_perf = int_tofp(1);
 +		limits.no_turbo = 0;
++=======
+ 		pr_debug("intel_pstate: set performance\n");
+ 		limits = &performance_limits;
+ 		if (hwp_active)
+ 			intel_pstate_hwp_set();
++>>>>>>> 584ee3dcb1d6 (intel_pstate: Fix "performance" mode behavior with HWP enabled)
  		return 0;
  	}
  
* Unmerged path drivers/cpufreq/intel_pstate.c
