lib/bitmap.c: conversion routines to/from u32 array

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [lib] bitmap: conversion routines to/from u32 array (Ivan Vecera) [1268334]
Rebuild_FUZZ: 93.75%
commit-author David Decotigny <decot@googlers.com>
commit e52bc7c28ac9f54db6f86b19ed65c599def18c98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e52bc7c2.failed

Aimed at transferring bitmaps to/from user-space in a 32/64-bit agnostic
way.

Tested:
  unit tests (next patch) on qemu i386, x86_64, ppc, ppc64 BE and LE,
  ARM.

	Signed-off-by: David Decotigny <decot@googlers.com>
	Reviewed-by: Ben Hutchings <ben@decadent.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e52bc7c28ac9f54db6f86b19ed65c599def18c98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/bitmap.h
#	lib/bitmap.c
diff --cc include/linux/bitmap.h
index 7ad634501e48,e9b0b9ab07e5..000000000000
--- a/include/linux/bitmap.h
+++ b/include/linux/bitmap.h
@@@ -137,21 -159,31 +139,44 @@@ extern void bitmap_remap(unsigned long 
  extern int bitmap_bitremap(int oldbit,
  		const unsigned long *old, const unsigned long *new, int bits);
  extern void bitmap_onto(unsigned long *dst, const unsigned long *orig,
 -		const unsigned long *relmap, unsigned int bits);
 +		const unsigned long *relmap, int bits);
  extern void bitmap_fold(unsigned long *dst, const unsigned long *orig,
++<<<<<<< HEAD
 +		int sz, int bits);
 +extern int bitmap_find_free_region(unsigned long *bitmap, int bits, int order);
 +extern void bitmap_release_region(unsigned long *bitmap, int pos, int order);
 +extern int bitmap_allocate_region(unsigned long *bitmap, int pos, int order);
 +extern void bitmap_copy_le(void *dst, const unsigned long *src, int nbits);
 +extern int bitmap_ord_to_pos(const unsigned long *bitmap, int n, int bits);
++=======
+ 		unsigned int sz, unsigned int nbits);
+ extern int bitmap_find_free_region(unsigned long *bitmap, unsigned int bits, int order);
+ extern void bitmap_release_region(unsigned long *bitmap, unsigned int pos, int order);
+ extern int bitmap_allocate_region(unsigned long *bitmap, unsigned int pos, int order);
+ extern unsigned int bitmap_from_u32array(unsigned long *bitmap,
+ 					 unsigned int nbits,
+ 					 const u32 *buf,
+ 					 unsigned int nwords);
+ extern unsigned int bitmap_to_u32array(u32 *buf,
+ 				       unsigned int nwords,
+ 				       const unsigned long *bitmap,
+ 				       unsigned int nbits);
+ #ifdef __BIG_ENDIAN
+ extern void bitmap_copy_le(unsigned long *dst, const unsigned long *src, unsigned int nbits);
+ #else
+ #define bitmap_copy_le bitmap_copy
+ #endif
+ extern unsigned int bitmap_ord_to_pos(const unsigned long *bitmap, unsigned int ord, unsigned int nbits);
+ extern int bitmap_print_to_pagebuf(bool list, char *buf,
+ 				   const unsigned long *maskp, int nmaskbits);
++>>>>>>> e52bc7c28ac9 (lib/bitmap.c: conversion routines to/from u32 array)
  
 -#define BITMAP_FIRST_WORD_MASK(start) (~0UL << ((start) & (BITS_PER_LONG - 1)))
 -#define BITMAP_LAST_WORD_MASK(nbits) (~0UL >> (-(nbits) & (BITS_PER_LONG - 1)))
 +#define BITMAP_FIRST_WORD_MASK(start) (~0UL << ((start) % BITS_PER_LONG))
 +#define BITMAP_LAST_WORD_MASK(nbits)					\
 +(									\
 +	((nbits) % BITS_PER_LONG) ?					\
 +		(1UL<<((nbits) % BITS_PER_LONG))-1 : ~0UL		\
 +)
  
  #define small_const_nbits(nbits) \
  	(__builtin_constant_p(nbits) && (nbits) <= BITS_PER_LONG)
diff --cc lib/bitmap.c
index 1bf476b49887,c66da508cbf7..000000000000
--- a/lib/bitmap.c
+++ b/lib/bitmap.c
@@@ -12,6 -12,10 +12,13 @@@
  #include <linux/bitmap.h>
  #include <linux/bitops.h>
  #include <linux/bug.h>
++<<<<<<< HEAD
++=======
+ #include <linux/kernel.h>
+ #include <linux/string.h>
+ 
+ #include <asm/page.h>
++>>>>>>> e52bc7c28ac9 (lib/bitmap.c: conversion routines to/from u32 array)
  #include <asm/uaccess.h>
  
  /*
* Unmerged path include/linux/bitmap.h
* Unmerged path lib/bitmap.c
