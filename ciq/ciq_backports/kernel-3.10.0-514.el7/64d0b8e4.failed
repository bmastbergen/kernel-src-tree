megaraid_sas: call ISR function to clean up pending replies in OCR path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sumit Saxena <sumit.saxena@broadcom.com>
commit 64d0b8e4a6f7e9a3c366c2df93ec1f003d180ca3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/64d0b8e4.failed

In OCR path, before calling chip reset calls function
megasas_wait_for_outstanding_fusion to check reason for OCR. In case of
firmware FAULT initiated OCR and DCMD timeout initiated timeout, driver
will clear any outstanding reply (yet to be processed by driver) in
reply queues before going for chip reset. This code is added to handle a
scenario when IO timeout initiated adapter reset and management
application initiated adapter reset (by sending command to FAULT
firmware) happens simultaneously since adapter reset function is
safe-guarded by reset_mutex so only thread will be doing controller
reset. Consider IO timeout thread gets mutex and proceeds with adapter
reset process after disabling interrupts and by the time management
application has fired command to firmware to do adapter reset and the
same command is completed by firmware but since interrupts are disabled,
driver will not get completion and the same command will be in
outstanding/pending commands list of driver and refires same command
from IO timeout thread after chip reset which will again FAULT firmware
and eventually causes kill adapter.

	Signed-off-by: Sumit Saxena <sumit.saxena@broadcom.com>
	Reviewed-by: Hannes Reinicke <hare@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 64d0b8e4a6f7e9a3c366c2df93ec1f003d180ca3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index c3d8c908e26e,e2dc20566ab7..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -2615,14 -2759,24 +2615,27 @@@ int megasas_wait_for_outstanding_fusion
  		fw_state = instance->instancet->read_fw_status_reg(
  			instance->reg_set) & MFI_STATE_MASK;
  		if (fw_state == MFI_STATE_FAULT) {
 -			dev_warn(&instance->pdev->dev, "Found FW in FAULT state,"
 +			printk(KERN_WARNING "megasas: Found FW in FAULT state,"
  			       " will reset adapter scsi%d.\n",
  				instance->host->host_no);
+ 			megasas_complete_cmd_dpc_fusion((unsigned long)instance);
  			retval = 1;
  			goto out;
  		}
++<<<<<<< HEAD
++=======
+ 
+ 		if (reason == MFI_IO_TIMEOUT_OCR) {
+ 			dev_info(&instance->pdev->dev,
+ 				"MFI IO is timed out, initiating OCR\n");
+ 			megasas_complete_cmd_dpc_fusion((unsigned long)instance);
+ 			retval = 1;
+ 			goto out;
+ 		}
+ 
++>>>>>>> 64d0b8e4a6f7 (megaraid_sas: call ISR function to clean up pending replies in OCR path)
  		/* If SR-IOV VF mode & heartbeat timeout, don't wait */
 -		if (instance->requestorId && !reason) {
 +		if (instance->requestorId && !iotimeout) {
  			retval = 1;
  			goto out;
  		}
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
