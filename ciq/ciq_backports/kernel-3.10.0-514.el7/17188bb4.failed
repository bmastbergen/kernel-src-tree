NVMe: Don't use fake status on cancelled command

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Keith Busch <keith.busch@intel.com>
commit 17188bb403e9098a815dd850aedb6c150d2a3a6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/17188bb4.failed

Synchronized commands do different things for timed out commands
vs. controller returned errors.

	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 17188bb403e9098a815dd850aedb6c150d2a3a6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index a4231ed33c18,2cbe1b4daef2..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -531,12 -612,23 +531,23 @@@ static void req_completion(struct nvme_
  			spin_unlock_irqrestore(req->q->queue_lock, flags);
  			return;
  		}
++<<<<<<< HEAD
 +		req->errors = nvme_error_status(status);
++=======
+ 		if (req->cmd_type == REQ_TYPE_DRV_PRIV) {
+ 			if (cmd_rq->ctx == CMD_CTX_CANCELLED)
+ 				req->errors = -EINTR;
+ 			else
+ 				req->errors = status;
+ 		} else {
+ 			req->errors = nvme_error_status(status);
+ 		}
++>>>>>>> 17188bb403e9 (NVMe: Don't use fake status on cancelled command)
  	} else
  		req->errors = 0;
 -	if (req->cmd_type == REQ_TYPE_DRV_PRIV) {
 -		u32 result = le32_to_cpup(&cqe->result);
 -		req->special = (void *)(uintptr_t)result;
 -	}
  
  	if (cmd_rq->aborted)
 -		dev_warn(nvmeq->dev->dev,
 +		dev_warn(&nvmeq->dev->pci_dev->dev,
  			"completing aborted command with status:%04x\n",
  			status);
  
* Unmerged path drivers/block/nvme-core.c
