rhashtable: key_hashfn() must return full hash value

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Thomas Graf <tgraf@suug.ch>
commit c88455ce50ae4224d84960ce2baa53e61580df27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c88455ce.failed

The value computed by key_hashfn() is used by rhashtable_lookup_compare()
to traverse both tables during a resize. key_hashfn() must therefore
return the hash value without the buckets mask applied so it can be
masked to the size of each individual table.

Fixes: 97defe1ecf86 ("rhashtable: Per bucket locks & deferred expansion/shrinking")
	Signed-off-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c88455ce50ae4224d84960ce2baa53e61580df27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/rhashtable.c
diff --cc lib/rhashtable.c
index be20e9720492,71fd0dd45ce3..000000000000
--- a/lib/rhashtable.c
+++ b/lib/rhashtable.c
@@@ -63,17 -89,12 +63,21 @@@ static u32 obj_raw_hashfn(const struct 
  		hash = ht->p.hashfn(ptr + ht->p.key_offset, ht->p.key_len,
  				    ht->p.hash_rnd);
  
 -	return hash >> HASH_RESERVED_SPACE;
 +	return hash;
  }
  
 -static u32 key_hashfn(struct rhashtable *ht, const void *key, u32 len)
 +static u32 key_hashfn(const struct rhashtable *ht, const void *key, u32 len)
  {
++<<<<<<< HEAD
 +	struct bucket_table *tbl = rht_dereference_rcu(ht->tbl, ht);
 +	u32 hash;
 +
 +	hash = ht->p.hashfn(key, len, ht->p.hash_rnd);
 +
 +	return rht_bucket_index(tbl, hash);
++=======
+ 	return ht->p.hashfn(key, len, ht->p.hash_rnd) >> HASH_RESERVED_SPACE;
++>>>>>>> c88455ce50ae (rhashtable: key_hashfn() must return full hash value)
  }
  
  static u32 head_hashfn(const struct rhashtable *ht,
* Unmerged path lib/rhashtable.c
