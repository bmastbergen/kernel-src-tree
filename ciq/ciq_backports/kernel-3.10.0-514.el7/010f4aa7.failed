mmc: sh_mobile_sdhi: remove .init/.cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit 010f4aa758f437647799b1fd677a5e2cf31714e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/010f4aa7.failed

No one is using .init/.cleanup callback function.
Let's remove these.
sdhi_ops and .cd_wakeup are also removed

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 010f4aa758f437647799b1fd677a5e2cf31714e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mobile_sdhi.c
diff --cc drivers/mmc/host/sh_mobile_sdhi.c
index 79ee6f0c45bd,48a3be804cc0..000000000000
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@@ -103,23 -138,24 +103,44 @@@ static int sh_mobile_sdhi_write16_hook(
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void sh_mobile_sdhi_cd_wakeup(const struct platform_device *pdev)
 +{
 +	mmc_detect_change(platform_get_drvdata(pdev), msecs_to_jiffies(100));
 +}
 +
 +static const struct sh_mobile_sdhi_ops sdhi_ops = {
 +	.cd_wakeup = sh_mobile_sdhi_cd_wakeup,
 +};
 +
 +static const struct of_device_id sh_mobile_sdhi_of_match[] = {
 +	{ .compatible = "renesas,shmobile-sdhi" },
 +	{ .compatible = "renesas,sh7372-sdhi" },
 +	{ .compatible = "renesas,r8a7740-sdhi", .data = &sh_mobile_sdhi_of_cfg[0], },
 +	{},
 +};
 +MODULE_DEVICE_TABLE(of, sh_mobile_sdhi_of_match);
 +
++=======
+ static int sh_mobile_sdhi_multi_io_quirk(struct mmc_card *card,
+ 					 unsigned int direction, int blk_size)
+ {
+ 	/*
+ 	 * In Renesas controllers, when performing a
+ 	 * multiple block read of one or two blocks,
+ 	 * depending on the timing with which the
+ 	 * response register is read, the response
+ 	 * value may not be read properly.
+ 	 * Use single block read for this HW bug
+ 	 */
+ 	if ((direction == MMC_DATA_READ) &&
+ 	    blk_size == 2)
+ 		return 1;
+ 
+ 	return blk_size;
+ }
+ 
++>>>>>>> 010f4aa758f4 (mmc: sh_mobile_sdhi: remove .init/.cleanup)
  static int sh_mobile_sdhi_probe(struct platform_device *pdev)
  {
  	const struct of_device_id *of_id =
@@@ -138,26 -181,30 +159,18 @@@
  	}
  
  	mmc_data = &priv->mmc_data;
 -	dma_priv = &priv->dma_priv;
  
- 	if (p) {
- 		if (p->init) {
- 			ret = p->init(pdev, &sdhi_ops);
- 			if (ret)
- 				return ret;
- 		}
- 	}
- 
  	priv->clk = devm_clk_get(&pdev->dev, NULL);
  	if (IS_ERR(priv->clk)) {
  		ret = PTR_ERR(priv->clk);
  		dev_err(&pdev->dev, "cannot get clock: %d\n", ret);
- 		goto eclkget;
+ 		goto eprobe;
  	}
  
 -	host = tmio_mmc_host_alloc(pdev);
 -	if (!host) {
 -		ret = -ENOMEM;
 -		goto eprobe;
 -	}
 -
 -	host->dma		= dma_priv;
 -	host->write16_hook	= sh_mobile_sdhi_write16_hook;
 -	host->clk_enable	= sh_mobile_sdhi_clk_enable;
 -	host->clk_disable	= sh_mobile_sdhi_clk_disable;
 -	host->multi_io_quirk	= sh_mobile_sdhi_multi_io_quirk;
 -	/* SD control register space size is 0x100, 0x200 for bus_shift=1 */
 -	host->bus_shift		= resource_size(res) >> 9;
 -
 +	mmc_data->clk_enable = sh_mobile_sdhi_clk_enable;
 +	mmc_data->clk_disable = sh_mobile_sdhi_clk_disable;
  	mmc_data->capabilities = MMC_CAP_MMC_HIGHSPEED;
 +	mmc_data->write16_hook = sh_mobile_sdhi_write16_hook;
  	if (p) {
  		mmc_data->flags = p->tmio_flags;
  		mmc_data->ocr_mask = p->tmio_ocr_mask;
@@@ -268,10 -339,9 +281,7 @@@
  
  eirq:
  	tmio_mmc_host_remove(host);
 -efree:
 -	tmio_mmc_host_free(host);
  eprobe:
- eclkget:
- 	if (p && p->cleanup)
- 		p->cleanup(pdev);
  	return ret;
  }
  
* Unmerged path drivers/mmc/host/sh_mobile_sdhi.c
diff --git a/include/linux/mmc/sh_mobile_sdhi.h b/include/linux/mmc/sh_mobile_sdhi.h
index 68927ae50845..da77e5e2041d 100644
--- a/include/linux/mmc/sh_mobile_sdhi.h
+++ b/include/linux/mmc/sh_mobile_sdhi.h
@@ -3,20 +3,10 @@
 
 #include <linux/types.h>
 
-struct platform_device;
-
 #define SH_MOBILE_SDHI_IRQ_CARD_DETECT	"card_detect"
 #define SH_MOBILE_SDHI_IRQ_SDCARD	"sdcard"
 #define SH_MOBILE_SDHI_IRQ_SDIO		"sdio"
 
-/**
- * struct sh_mobile_sdhi_ops - SDHI driver callbacks
- * @cd_wakeup:		trigger a card-detection run
- */
-struct sh_mobile_sdhi_ops {
-	void (*cd_wakeup)(const struct platform_device *pdev);
-};
-
 struct sh_mobile_sdhi_info {
 	int dma_slave_tx;
 	int dma_slave_rx;
@@ -25,11 +15,6 @@ struct sh_mobile_sdhi_info {
 	unsigned long tmio_caps2;
 	u32 tmio_ocr_mask;	/* available MMC voltages */
 	unsigned int cd_gpio;
-
-	/* callbacks for board specific setup code */
-	int (*init)(struct platform_device *pdev,
-		    const struct sh_mobile_sdhi_ops *ops);
-	void (*cleanup)(struct platform_device *pdev);
 };
 
 #endif /* LINUX_MMC_SH_MOBILE_SDHI_H */
