x86/mm/pat: Add comments to cachemode translation tables

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] mm/pat: Add comments to cachemode translation tables (Jeff Moyer) [1345801 1348502 1348836 1350149 1350156]
Rebuild_FUZZ: 96.30%
commit-author Toshi Kani <toshi.kani@hp.com>
commit d5dc861bd601b546ae6b36af54485142cca36a5e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d5dc861b.failed

Add comments to the cachemode translation tables to clarify that
the default values are set as minimal supported mode, which are
necessary to handle WC and WT fallback to UC- when they are not
enabled.

	Signed-off-by: Toshi Kani <toshi.kani@hp.com>
	Cc: Jan Beulich <jbeulich@suse.com>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1437588371-28223-1-git-send-email-toshi.kani@hp.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit d5dc861bd601b546ae6b36af54485142cca36a5e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/init.c
diff --cc arch/x86/mm/init.c
index c2ee6059653d,1d8a83df153a..000000000000
--- a/arch/x86/mm/init.c
+++ b/arch/x86/mm/init.c
@@@ -22,32 -29,39 +22,46 @@@
  
  /*
   * Tables translating between page_cache_type_t and pte encoding.
++<<<<<<< HEAD
 + * Minimal supported modes are defined statically, modified if more supported
 + * cache modes are available.
 + * Index into __cachemode2pte_tbl is the cachemode.
 + * Index into __pte2cachemode_tbl are the caching attribute bits of the pte
 + * (_PAGE_PWT, _PAGE_PCD, _PAGE_PAT) at index bit positions 0, 1, 2.
++=======
+  *
+  * The default values are defined statically as minimal supported mode;
+  * WC and WT fall back to UC-.  pat_init() updates these values to support
+  * more cache modes, WC and WT, when it is safe to do so.  See pat_init()
+  * for the details.  Note, __early_ioremap() used during early boot-time
+  * takes pgprot_t (pte encoding) and does not use these tables.
+  *
+  *   Index into __cachemode2pte_tbl[] is the cachemode.
+  *
+  *   Index into __pte2cachemode_tbl[] are the caching attribute bits of the pte
+  *   (_PAGE_PWT, _PAGE_PCD, _PAGE_PAT) at index bit positions 0, 1, 2.
++>>>>>>> d5dc861bd601 (x86/mm/pat: Add comments to cachemode translation tables)
   */
  uint16_t __cachemode2pte_tbl[_PAGE_CACHE_MODE_NUM] = {
 -	[_PAGE_CACHE_MODE_WB      ]	= 0         | 0        ,
 -	[_PAGE_CACHE_MODE_WC      ]	= 0         | _PAGE_PCD,
 -	[_PAGE_CACHE_MODE_UC_MINUS]	= 0         | _PAGE_PCD,
 -	[_PAGE_CACHE_MODE_UC      ]	= _PAGE_PWT | _PAGE_PCD,
 -	[_PAGE_CACHE_MODE_WT      ]	= 0         | _PAGE_PCD,
 -	[_PAGE_CACHE_MODE_WP      ]	= 0         | _PAGE_PCD,
 +	[_PAGE_CACHE_MODE_WB]		= 0,
 +	[_PAGE_CACHE_MODE_WC]		= _PAGE_PWT,
 +	[_PAGE_CACHE_MODE_UC_MINUS]	= _PAGE_PCD,
 +	[_PAGE_CACHE_MODE_UC]		= _PAGE_PCD | _PAGE_PWT,
 +	[_PAGE_CACHE_MODE_WT]		= _PAGE_PCD,
 +	[_PAGE_CACHE_MODE_WP]		= _PAGE_PCD,
  };
 -EXPORT_SYMBOL(__cachemode2pte_tbl);
 -
 +EXPORT_SYMBOL_GPL(__cachemode2pte_tbl);
  uint8_t __pte2cachemode_tbl[8] = {
 -	[__pte2cm_idx( 0        | 0         | 0        )] = _PAGE_CACHE_MODE_WB,
 -	[__pte2cm_idx(_PAGE_PWT | 0         | 0        )] = _PAGE_CACHE_MODE_UC_MINUS,
 -	[__pte2cm_idx( 0        | _PAGE_PCD | 0        )] = _PAGE_CACHE_MODE_UC_MINUS,
 -	[__pte2cm_idx(_PAGE_PWT | _PAGE_PCD | 0        )] = _PAGE_CACHE_MODE_UC,
 -	[__pte2cm_idx( 0        | 0         | _PAGE_PAT)] = _PAGE_CACHE_MODE_WB,
 -	[__pte2cm_idx(_PAGE_PWT | 0         | _PAGE_PAT)] = _PAGE_CACHE_MODE_UC_MINUS,
 -	[__pte2cm_idx(0         | _PAGE_PCD | _PAGE_PAT)] = _PAGE_CACHE_MODE_UC_MINUS,
 +	[__pte2cm_idx(0)] = _PAGE_CACHE_MODE_WB,
 +	[__pte2cm_idx(_PAGE_PWT)] = _PAGE_CACHE_MODE_WC,
 +	[__pte2cm_idx(_PAGE_PCD)] = _PAGE_CACHE_MODE_UC_MINUS,
 +	[__pte2cm_idx(_PAGE_PWT | _PAGE_PCD)] = _PAGE_CACHE_MODE_UC,
 +	[__pte2cm_idx(_PAGE_PAT)] = _PAGE_CACHE_MODE_WB,
 +	[__pte2cm_idx(_PAGE_PWT | _PAGE_PAT)] = _PAGE_CACHE_MODE_WC,
 +	[__pte2cm_idx(_PAGE_PCD | _PAGE_PAT)] = _PAGE_CACHE_MODE_UC_MINUS,
  	[__pte2cm_idx(_PAGE_PWT | _PAGE_PCD | _PAGE_PAT)] = _PAGE_CACHE_MODE_UC,
  };
 -EXPORT_SYMBOL(__pte2cachemode_tbl);
 +EXPORT_SYMBOL_GPL(__pte2cachemode_tbl);
  
  static unsigned long __initdata pgt_buf_start;
  static unsigned long __initdata pgt_buf_end;
* Unmerged path arch/x86/mm/init.c
