i40e: Fix uninitialized variable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Catherine Sullivan <catherine.sullivan@intel.com>
commit 3ed439c56e0d82fd08275fff2c21278f92ed8ec5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3ed439c5.failed

We have an uninitialized variable warning for valid_len for one case in
validate_vf_mesg. To fix this, just initialize it to 0 at the top of the
function and remove all of the now redundant assignments to 0 in the
individual cases.

Change-Id: Iacbd97f4c521ed8d662eef803a598d8707708cfd
	Signed-off-by: Catherine Sullivan <catherine.sullivan@intel.com>
	Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 3ed439c56e0d82fd08275fff2c21278f92ed8ec5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
index d901afb6a12a,a534fe67251a..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
@@@ -1895,6 -2435,61 +1892,64 @@@ static int i40e_vc_validate_vf_msg(stru
  	case I40E_VIRTCHNL_OP_GET_STATS:
  		valid_len = sizeof(struct i40e_virtchnl_queue_select);
  		break;
++<<<<<<< HEAD
++=======
+ 	case I40E_VIRTCHNL_OP_IWARP:
+ 		/* These messages are opaque to us and will be validated in
+ 		 * the RDMA client code. We just need to check for nonzero
+ 		 * length. The firmware will enforce max length restrictions.
+ 		 */
+ 		if (msglen)
+ 			valid_len = msglen;
+ 		else
+ 			err_msg_format = true;
+ 		break;
+ 	case I40E_VIRTCHNL_OP_RELEASE_IWARP_IRQ_MAP:
+ 		valid_len = 0;
+ 		break;
+ 	case I40E_VIRTCHNL_OP_CONFIG_IWARP_IRQ_MAP:
+ 		valid_len = sizeof(struct i40e_virtchnl_iwarp_qvlist_info);
+ 		if (msglen >= valid_len) {
+ 			struct i40e_virtchnl_iwarp_qvlist_info *qv =
+ 				(struct i40e_virtchnl_iwarp_qvlist_info *)msg;
+ 			if (qv->num_vectors == 0) {
+ 				err_msg_format = true;
+ 				break;
+ 			}
+ 			valid_len += ((qv->num_vectors - 1) *
+ 				sizeof(struct i40e_virtchnl_iwarp_qv_info));
+ 		}
+ 		break;
+ 	case I40E_VIRTCHNL_OP_CONFIG_RSS_KEY:
+ 		valid_len = sizeof(struct i40e_virtchnl_rss_key);
+ 		if (msglen >= valid_len) {
+ 			struct i40e_virtchnl_rss_key *vrk =
+ 				(struct i40e_virtchnl_rss_key *)msg;
+ 			if (vrk->key_len != I40E_HKEY_ARRAY_SIZE) {
+ 				err_msg_format = true;
+ 				break;
+ 			}
+ 			valid_len += vrk->key_len - 1;
+ 		}
+ 		break;
+ 	case I40E_VIRTCHNL_OP_CONFIG_RSS_LUT:
+ 		valid_len = sizeof(struct i40e_virtchnl_rss_lut);
+ 		if (msglen >= valid_len) {
+ 			struct i40e_virtchnl_rss_lut *vrl =
+ 				(struct i40e_virtchnl_rss_lut *)msg;
+ 			if (vrl->lut_entries != I40E_VF_HLUT_ARRAY_SIZE) {
+ 				err_msg_format = true;
+ 				break;
+ 			}
+ 			valid_len += vrl->lut_entries - 1;
+ 		}
+ 		break;
+ 	case I40E_VIRTCHNL_OP_GET_RSS_HENA_CAPS:
+ 		break;
+ 	case I40E_VIRTCHNL_OP_SET_RSS_HENA:
+ 		valid_len = sizeof(struct i40e_virtchnl_rss_hena);
+ 		break;
++>>>>>>> 3ed439c56e0d (i40e: Fix uninitialized variable)
  	/* These are always errors coming from the VF. */
  	case I40E_VIRTCHNL_OP_EVENT:
  	case I40E_VIRTCHNL_OP_UNKNOWN:
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c
