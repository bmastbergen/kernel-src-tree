md/raid5: switch to use conf->chunk_sectors in place of mddev->chunk_sectors where possible

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [md] raid5: switch to use conf->chunk_sectors in place of mddev->chunk_sectors where possible (Jes Sorensen) [1250578 1265947 1273343 1299140 1307091 1312828 1320563 1340839]
Rebuild_FUZZ: 98.32%
commit-author NeilBrown <neilb@suse.com>
commit 3cb5edf45457948347b5ae8cc9650c000cef4391
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3cb5edf4.failed

The chunk_sectors and new_chunk_sectors fields of mddev can be changed
any time (via sysfs) that the reconfig mutex can be taken.  So raid5
keeps internal copies in 'conf' which are stable except for a short
locked moment when reshape stops/starts.

So any access that does not hold reconfig_mutex should use the 'conf'
values, not the 'mddev' values.
Several don't.

This could result in corruption if new values were written at awkward
times.

Also use min() or max() rather than open-coding.

	Signed-off-by: NeilBrown <neilb@suse.com>
(cherry picked from commit 3cb5edf45457948347b5ae8cc9650c000cef4391)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5.c
diff --cc drivers/md/raid5.c
index 5bb5150e6dae,a98162f5d97f..000000000000
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@@ -4690,12 -4700,12 +4690,17 @@@ static int raid5_mergeable_bvec(struct 
  
  static int in_chunk_boundary(struct mddev *mddev, struct bio *bio)
  {
++<<<<<<< HEAD
 +	sector_t sector = bio->bi_sector + get_start_sect(bio->bi_bdev);
 +	unsigned int chunk_sectors = mddev->chunk_sectors;
++=======
+ 	struct r5conf *conf = mddev->private;
+ 	sector_t sector = bio->bi_iter.bi_sector + get_start_sect(bio->bi_bdev);
+ 	unsigned int chunk_sectors;
++>>>>>>> 3cb5edf45457 (md/raid5: switch to use conf->chunk_sectors in place of mddev->chunk_sectors where possible)
  	unsigned int bio_sectors = bio_sectors(bio);
  
- 	if (mddev->new_chunk_sectors < mddev->chunk_sectors)
- 		chunk_sectors = mddev->new_chunk_sectors;
+ 	chunk_sectors = min(conf->chunk_sectors, conf->prev_chunk_sectors);
  	return  chunk_sectors >=
  		((sector & (chunk_sectors - 1)) + bio_sectors);
  }
* Unmerged path drivers/md/raid5.c
