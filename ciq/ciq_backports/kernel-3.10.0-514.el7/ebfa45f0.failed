ipv6: Move common init code for rt6_info to a new function rt6_info_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Martin KaFai Lau <kafai@fb.com>
commit ebfa45f0d952e5e7bb30a7f9daaad681de138728
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ebfa45f0.failed

Introduce rt6_info_init() to do the common init work for
'struct rt6_info' (after calling dst_alloc).

It is a prep work to fix the rt6_info init logic in the
ip6_blackhole_route().

	Signed-off-by: Martin KaFai Lau <kafai@fb.com>
	Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Cc: Julian Anastasov <ja@ssi.bg>
	Cc: Phil Sutter <phil@nwl.cc>
	Cc: Steffen Klassert <steffen.klassert@secunet.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ebfa45f0d952e5e7bb30a7f9daaad681de138728)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/route.c
diff --cc net/ipv6/route.c
index d52d1361c9f9,4198017a5aa7..000000000000
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@@ -270,21 -319,53 +270,33 @@@ static const struct rt6_info ip6_blk_ho
  
  #endif
  
+ static void rt6_info_init(struct rt6_info *rt)
+ {
+ 	struct dst_entry *dst = &rt->dst;
+ 
+ 	memset(dst + 1, 0, sizeof(*rt) - sizeof(*dst));
+ 	INIT_LIST_HEAD(&rt->rt6i_siblings);
+ 	INIT_LIST_HEAD(&rt->rt6i_uncached);
+ }
+ 
  /* allocate dst with ip6_dst_ops */
 -static struct rt6_info *__ip6_dst_alloc(struct net *net,
 -					struct net_device *dev,
 -					int flags)
 +static inline struct rt6_info *ip6_dst_alloc(struct net *net,
 +					     struct net_device *dev,
 +					     int flags,
 +					     struct fib6_table *table)
  {
  	struct rt6_info *rt = dst_alloc(&net->ipv6.ip6_dst_ops, dev,
  					0, DST_OBSOLETE_FORCE_CHK, flags);
  
- 	if (rt) {
- 		struct dst_entry *dst = &rt->dst;
+ 	if (rt)
+ 		rt6_info_init(rt);
  
 -	return rt;
 -}
 -
 -static struct rt6_info *ip6_dst_alloc(struct net *net,
 -				      struct net_device *dev,
 -				      int flags)
 -{
 -	struct rt6_info *rt = __ip6_dst_alloc(net, dev, flags);
 -
 -	if (rt) {
 -		rt->rt6i_pcpu = alloc_percpu_gfp(struct rt6_info *, GFP_ATOMIC);
 -		if (rt->rt6i_pcpu) {
 -			int cpu;
 -
 -			for_each_possible_cpu(cpu) {
 -				struct rt6_info **p;
 -
 -				p = per_cpu_ptr(rt->rt6i_pcpu, cpu);
 -				/* no one shares rt */
 -				*p =  NULL;
 -			}
 -		} else {
 -			dst_destroy((struct dst_entry *)rt);
 -			return NULL;
 -		}
++<<<<<<< HEAD
 +		memset(dst + 1, 0, sizeof(*rt) - sizeof(*dst));
 +		INIT_LIST_HEAD(&rt->rt6i_siblings);
  	}
 -
++=======
++>>>>>>> ebfa45f0d952 (ipv6: Move common init code for rt6_info to a new function rt6_info_init())
  	return rt;
  }
  
* Unmerged path net/ipv6/route.c
