ext4: only call ext4_truncate when size <= isize

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Josef Bacik <jbacik@fb.com>
commit 3da40c7b089810ac9cf2bb1e59633f619f3a7312
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3da40c7b.failed

At LSF we decided that if we truncate up from isize we shouldn't trim
fallocated blocks that were fallocated with KEEP_SIZE and are past the
new i_size.  This patch fixes ext4 to do this.

[ Completely reworked patch so that i_disksize would actually get set
  when truncating up.  Also reworked the code for handling truncate so
  that it's easier to handle. -- tytso ]

	Signed-off-by: Josef Bacik <jbacik@fb.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Reviewed-by: Lukas Czerner <lczerner@redhat.com>
(cherry picked from commit 3da40c7b089810ac9cf2bb1e59633f619f3a7312)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/inode.c
diff --cc fs/ext4/inode.c
index 7e00e3fcc247,e057c6fcc227..000000000000
--- a/fs/ext4/inode.c
+++ b/fs/ext4/inode.c
@@@ -4531,14 -4692,20 +4533,24 @@@ int ext4_setattr(struct dentry *dentry
  			if (attr->ia_size > sbi->s_bitmap_maxbytes)
  				return -EFBIG;
  		}
++<<<<<<< HEAD
 +		if (S_ISREG(inode->i_mode) &&
++=======
+ 		if (!S_ISREG(inode->i_mode))
+ 			return -EINVAL;
+ 
+ 		if (IS_I_VERSION(inode) && attr->ia_size != inode->i_size)
+ 			inode_inc_iversion(inode);
+ 
+ 		if (ext4_should_order_data(inode) &&
++>>>>>>> 3da40c7b0898 (ext4: only call ext4_truncate when size <= isize)
  		    (attr->ia_size < inode->i_size)) {
- 			if (ext4_should_order_data(inode)) {
- 				error = ext4_begin_ordered_truncate(inode,
+ 			error = ext4_begin_ordered_truncate(inode,
  							    attr->ia_size);
- 				if (error)
- 					goto err_out;
- 			}
+ 			if (error)
+ 				goto err_out;
+ 		}
+ 		if (attr->ia_size != inode->i_size) {
  			handle = ext4_journal_start(inode, EXT4_HT_INODE, 3);
  			if (IS_ERR(handle)) {
  				error = PTR_ERR(handle);
@@@ -4590,14 -4755,10 +4600,14 @@@
  		 * Truncate pagecache after we've waited for commit
  		 * in data=journal mode to make pages freeable.
  		 */
++<<<<<<< HEAD
 +			truncate_pagecache(inode, inode->i_size);
++=======
+ 		truncate_pagecache(inode, inode->i_size);
+ 		if (shrink)
+ 			ext4_truncate(inode);
++>>>>>>> 3da40c7b0898 (ext4: only call ext4_truncate when size <= isize)
  	}
- 	/*
- 	 * We want to call ext4_truncate() even if attr->ia_size ==
- 	 * inode->i_size for cases like truncation of fallocated space
- 	 */
- 	if (attr->ia_valid & ATTR_SIZE)
- 		ext4_truncate(inode);
  
  	if (!rc) {
  		setattr_copy(inode, attr);
* Unmerged path fs/ext4/inode.c
