nvme: add missing unmaps in nvme_queue_rq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit bf508e910b02a6107a5aa054e03c6fc8a65dae1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bf508e91.failed

When we fail various metadata related operations in nvme_queue_rq we
need to unmap the data SGL.

	Cc: stable@vger.kernel.org
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit bf508e910b02a6107a5aa054e03c6fc8a65dae1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index 2a6eb55ad96c,f3b53af789ef..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -782,11 -904,20 +785,24 @@@ static int nvme_queue_rq(struct blk_mq_
  
  			sg_init_table(iod->meta_sg, 1);
  			if (blk_rq_map_integrity_sg(
- 					req->q, req->bio, iod->meta_sg) != 1)
+ 					req->q, req->bio, iod->meta_sg) != 1) {
+ 				dma_unmap_sg(dev->dev, iod->sg, iod->nents,
+ 						dma_dir);
  				goto error_cmd;
+ 			}
  
++<<<<<<< HEAD:drivers/block/nvme-core.c
 +			if (!dma_map_sg(nvmeq->q_dmadev, iod->meta_sg, 1, dma_dir))
++=======
+ 			if (rq_data_dir(req))
+ 				nvme_dif_remap(req, nvme_dif_prep);
+ 
+ 			if (!dma_map_sg(nvmeq->q_dmadev, iod->meta_sg, 1, dma_dir)) {
+ 				dma_unmap_sg(dev->dev, iod->sg, iod->nents,
+ 						dma_dir);
++>>>>>>> bf508e910b02 (nvme: add missing unmaps in nvme_queue_rq):drivers/nvme/host/pci.c
  				goto error_cmd;
+ 			}
  		}
  	}
  
* Unmerged path drivers/block/nvme-core.c
