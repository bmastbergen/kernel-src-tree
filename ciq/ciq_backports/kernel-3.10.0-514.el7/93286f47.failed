ACPI: Add field offset to struct resource_list_entry

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit 93286f4798590e711aa395503401f8632fb74f9a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/93286f47.failed

Add field offset to struct resource_list_entry to host address space
translation offset so it could be used to represent bridge resources.

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 93286f4798590e711aa395503401f8632fb74f9a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/resource.c
diff --cc drivers/acpi/resource.c
index 75d12a1b01ad,1c3abae6f2fa..000000000000
--- a/drivers/acpi/resource.c
+++ b/drivers/acpi/resource.c
@@@ -433,7 -471,8 +433,12 @@@ static acpi_status acpi_dev_new_resourc
  		c->error = -ENOMEM;
  		return AE_NO_MEMORY;
  	}
++<<<<<<< HEAD
 +	rentry->res = *r;
++=======
+ 	rentry->res = win->res;
+ 	rentry->offset = win->offset;
++>>>>>>> 93286f479859 (ACPI: Add field offset to struct resource_list_entry)
  	list_add_tail(&rentry->node, c->list);
  	c->count++;
  	return AE_OK;
* Unmerged path drivers/acpi/resource.c
diff --git a/include/linux/acpi.h b/include/linux/acpi.h
index b96328fc524b..63c17c3bf77f 100644
--- a/include/linux/acpi.h
+++ b/include/linux/acpi.h
@@ -281,6 +281,7 @@ bool acpi_dev_resource_interrupt(struct acpi_resource *ares, int index,
 struct resource_list_entry {
 	struct list_head node;
 	struct resource res;
+	resource_size_t offset;
 };
 
 void acpi_dev_free_resource_list(struct list_head *list);
