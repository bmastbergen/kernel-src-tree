x86/xen: resume timer irqs early

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] xen: resume timer irqs early (Vitaly Kuznetsov) [1141249 1339592]
Rebuild_FUZZ: 93.33%
commit-author David Vrabel <david.vrabel@citrix.com>
commit 8d5999df35314607c38fbd6bdd709e25c3a4eeab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/8d5999df.failed

If the timer irqs are resumed during device resume it is possible in
certain circumstances for the resume to hang early on, before device
interrupts are resumed.  For an Ubuntu 14.04 PVHVM guest this would
occur in ~0.5% of resume attempts.

It is not entirely clear what is occuring the point of the hang but I
think a task necessary for the resume calls schedule_timeout(),
waiting for a timer interrupt (which never arrives).  This failure may
require specific tasks to be running on the other VCPUs to trigger
(processes are not frozen during a suspend/resume if PREEMPT is
disabled).

Add IRQF_EARLY_RESUME to the timer interrupts so they are resumed in
syscore_resume().

	Signed-off-by: David Vrabel <david.vrabel@citrix.com>
	Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 8d5999df35314607c38fbd6bdd709e25c3a4eeab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/xen/time.c
diff --cc arch/x86/xen/time.c
index ee365895b06b,5718b0b58b60..000000000000
--- a/arch/x86/xen/time.c
+++ b/arch/x86/xen/time.c
@@@ -443,10 -443,10 +443,15 @@@ void xen_setup_timer(int cpu
  		name = "<timer kasprintf failed>";
  
  	irq = bind_virq_to_irqhandler(VIRQ_TIMER, cpu, xen_timer_interrupt,
++<<<<<<< HEAD
 +				      IRQF_DISABLED|IRQF_PERCPU|
 +				      IRQF_NOBALANCING|IRQF_TIMER|
 +				      IRQF_FORCE_RESUME,
++=======
+ 				      IRQF_PERCPU|IRQF_NOBALANCING|IRQF_TIMER|
+ 				      IRQF_FORCE_RESUME|IRQF_EARLY_RESUME,
++>>>>>>> 8d5999df3531 (x86/xen: resume timer irqs early)
  				      name, NULL);
 -	(void)xen_set_irq_priority(irq, XEN_IRQ_PRIORITY_MAX);
  
  	memcpy(evt, xen_clockevent, sizeof(*evt));
  
* Unmerged path arch/x86/xen/time.c
