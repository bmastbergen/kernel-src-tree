netdev_features: Fold NETIF_F_ALL_TSO into NETIF_F_GSO_SOFTWARE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Duyck <aduyck@mirantis.com>
commit b1c20f0b97b4e565fa50cde1e6b44c2fd327a1e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b1c20f0b.failed

This patch folds NETIF_F_ALL_TSO into the bitmask for NETIF_F_GSO_SOFTWARE.
The idea is to avoid duplication of defines since the only difference
between the two was the GSO_UDP bit.

	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b1c20f0b97b4e565fa50cde1e6b44c2fd327a1e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdev_features.h
diff --cc include/linux/netdev_features.h
index 83724df4f707,bc8736266749..000000000000
--- a/include/linux/netdev_features.h
+++ b/include/linux/netdev_features.h
@@@ -144,26 -149,18 +144,35 @@@ enum 
  		~NETIF_F_NEVER_CHANGE)
  
  /* Segmentation offload feature mask */
 -#define NETIF_F_GSO_MASK	(__NETIF_F_BIT(NETIF_F_GSO_LAST + 1) - \
 -		__NETIF_F_BIT(NETIF_F_GSO_SHIFT))
 +#define NETIF_F_GSO2_MASK (NETIF_F_GSO_GRE_CSUM|NETIF_F_GSO_UDP_TUNNEL_CSUM|\
 +			   NETIF_F_GSO_TUNNEL_REMCSUM)
 +#define NETIF_F_GSO_MASK	((__NETIF_F_BIT(NETIF_F_GSO_LAST + 1) - \
 +				 __NETIF_F_BIT(NETIF_F_GSO_SHIFT)) | \
 +				NETIF_F_GSO2_MASK)
  
 +#define NETIF_F_GSO2_SHIFT (NETIF_F_GSO_GRE_CSUM_BIT - \
 +		(NETIF_F_GSO_LAST + 1 - NETIF_F_GSO_SHIFT))
 +
 +
++<<<<<<< HEAD
 +/* List of features with software fallbacks. */
 +#define NETIF_F_GSO_SOFTWARE	(NETIF_F_TSO | NETIF_F_TSO_ECN | \
 +				 NETIF_F_TSO6 | NETIF_F_UFO)
 +
 +#define NETIF_F_GEN_CSUM	NETIF_F_HW_CSUM
 +#define NETIF_F_V4_CSUM		(NETIF_F_GEN_CSUM | NETIF_F_IP_CSUM)
 +#define NETIF_F_V6_CSUM		(NETIF_F_GEN_CSUM | NETIF_F_IPV6_CSUM)
 +#define NETIF_F_ALL_CSUM	(NETIF_F_V4_CSUM | NETIF_F_V6_CSUM)
++=======
+ /* List of IP checksum features. Note that NETIF_F_ HW_CSUM should not be
+  * set in features when NETIF_F_IP_CSUM or NETIF_F_IPV6_CSUM are set--
+  * this would be contradictory
+  */
+ #define NETIF_F_CSUM_MASK	(NETIF_F_IP_CSUM | NETIF_F_IPV6_CSUM | \
+ 				 NETIF_F_HW_CSUM)
++>>>>>>> b1c20f0b97b4 (netdev_features: Fold NETIF_F_ALL_TSO into NETIF_F_GSO_SOFTWARE)
  
 -#define NETIF_F_ALL_TSO 	(NETIF_F_TSO | NETIF_F_TSO6 | \
 -				 NETIF_F_TSO_ECN | NETIF_F_TSO_MANGLEID)
 +#define NETIF_F_ALL_TSO 	(NETIF_F_TSO | NETIF_F_TSO6 | NETIF_F_TSO_ECN)
  
  #define NETIF_F_ALL_FCOE	(NETIF_F_FCOE_CRC | NETIF_F_FCOE_MTU | \
  				 NETIF_F_FSO)
* Unmerged path include/linux/netdev_features.h
