tty: Remove warning in tty_lock_slave()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [tty] Remove warning in tty_lock_slave() ("Herton R. Krzesinski") [1327403]
Rebuild_FUZZ: 93.15%
commit-author Peter Hurley <peter@hurleysoftware.com>
commit eef15e2a54fad4c2ce3f0a81485dc591ce678f4f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/eef15e2a.failed

Commit 2aff5e2bc62db43e05c814461a08aff0fc2b7fe5 ('tty: Change
tty lock order to master->slave') added a warning which is broken
and unnecessary now that the tty lock has fixed lock subclasses,
added in commit 2febdb632bb96235b94b8fccaf882a78f8f4b2bb
('tty: Preset lock subclass for nested tty locks').

	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit eef15e2a54fad4c2ce3f0a81485dc591ce678f4f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/tty_mutex.c
diff --cc drivers/tty/tty_mutex.c
index 2e41abebbcba,a872389dc0bc..000000000000
--- a/drivers/tty/tty_mutex.c
+++ b/drivers/tty/tty_mutex.c
@@@ -45,29 -44,19 +45,34 @@@ void __lockfunc tty_unlock(struct tty_s
  }
  EXPORT_SYMBOL(tty_unlock);
  
 -void __lockfunc tty_lock_slave(struct tty_struct *tty)
 +/*
 + * Getting the big tty mutex for a pair of ttys with lock ordering
 + * On a non pty/tty pair tty2 can be NULL which is just fine.
 + */
 +void __lockfunc tty_lock_pair(struct tty_struct *tty,
 +					struct tty_struct *tty2)
  {
 -	if (tty && tty != tty->link)
++<<<<<<< HEAD
 +	if (tty < tty2) {
  		tty_lock(tty);
 -}
 -
 -void __lockfunc tty_unlock_slave(struct tty_struct *tty)
 -{
 +		tty_lock_nested(tty2, TTY_MUTEX_NESTED);
 +	} else {
 +		if (tty2 && tty2 != tty)
 +			tty_lock(tty2);
 +		tty_lock_nested(tty, TTY_MUTEX_NESTED);
 +	}
++=======
+ 	if (tty && tty != tty->link)
 -		tty_unlock(tty);
++		tty_lock(tty);
++>>>>>>> eef15e2a54fa (tty: Remove warning in tty_lock_slave())
  }
 +EXPORT_SYMBOL(tty_lock_pair);
  
 -void tty_set_lock_subclass(struct tty_struct *tty)
 +void __lockfunc tty_unlock_pair(struct tty_struct *tty,
 +						struct tty_struct *tty2)
  {
 -	lockdep_set_subclass(&tty->legacy_mutex, TTY_MUTEX_SLAVE);
 +	tty_unlock(tty);
 +	if (tty2 && tty2 != tty)
 +		tty_unlock(tty2);
  }
 +EXPORT_SYMBOL(tty_unlock_pair);
* Unmerged path drivers/tty/tty_mutex.c
