sock_diag: specify info_size per inet protocol

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Craig Gallek <kraig@google.com>
commit 3fd22af808f4d7455ba91596d334438c7ee0f889
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/3fd22af8.failed

Previously, there was no clear distinction between the inet protocols
that used struct tcp_info to report information and those that didn't.
This change adds a specific size attribute to the inet_diag_handler
struct which defines these interfaces.  This will make dispatching
sock_diag get_info requests identical for all inet protocols in a
following patch.

Tested: ss -au
Tested: ss -at
	Signed-off-by: Craig Gallek <kraig@google.com>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3fd22af808f4d7455ba91596d334438c7ee0f889)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/inet_diag.h
diff --cc include/linux/inet_diag.h
index 46da02410a09,0e707f0c1a3e..000000000000
--- a/include/linux/inet_diag.h
+++ b/include/linux/inet_diag.h
@@@ -11,19 -11,20 +11,27 @@@ struct sk_buff
  struct netlink_callback;
  
  struct inet_diag_handler {
 -	void		(*dump)(struct sk_buff *skb,
 -				struct netlink_callback *cb,
 -				const struct inet_diag_req_v2 *r,
 -				struct nlattr *bc);
 -
 -	int		(*dump_one)(struct sk_buff *in_skb,
 -				    const struct nlmsghdr *nlh,
 -				    const struct inet_diag_req_v2 *req);
 -
 +	void			(*dump)(struct sk_buff *skb,
 +					struct netlink_callback *cb,
 +					struct inet_diag_req_v2 *r,
 +					struct nlattr *bc);
 +
 +	int			(*dump_one)(struct sk_buff *in_skb,
 +					const struct nlmsghdr *nlh,
 +					struct inet_diag_req_v2 *req);
 +
++<<<<<<< HEAD
 +	void			(*idiag_get_info)(struct sock *sk,
 +						  struct inet_diag_msg *r,
 +						  void *info);
 +	__u16                   idiag_type;
++=======
+ 	void		(*idiag_get_info)(struct sock *sk,
+ 					  struct inet_diag_msg *r,
+ 					  void *info);
+ 	__u16		idiag_type;
+ 	__u16		idiag_info_size;
++>>>>>>> 3fd22af808f4 (sock_diag: specify info_size per inet protocol)
  };
  
  struct inet_connection_sock;
* Unmerged path include/linux/inet_diag.h
diff --git a/net/dccp/diag.c b/net/dccp/diag.c
index 028fc43aacbd..4a4914b894a0 100644
--- a/net/dccp/diag.c
+++ b/net/dccp/diag.c
@@ -65,6 +65,7 @@ static const struct inet_diag_handler dccp_diag_handler = {
 	.dump_one	 = dccp_diag_dump_one,
 	.idiag_get_info	 = dccp_diag_get_info,
 	.idiag_type	 = IPPROTO_DCCP,
+	.idiag_info_size = sizeof(struct tcp_info),
 };
 
 static int __init dccp_diag_init(void)
diff --git a/net/ipv4/inet_diag.c b/net/ipv4/inet_diag.c
index f92539b6465e..e5516ec77180 100644
--- a/net/ipv4/inet_diag.c
+++ b/net/ipv4/inet_diag.c
@@ -201,9 +201,9 @@ int inet_sk_diag_fill(struct sock *sk, struct inet_connection_sock *icsk,
 	}
 #undef EXPIRES_IN_MS
 
-	if (ext & (1 << (INET_DIAG_INFO - 1))) {
+	if ((ext & (1 << (INET_DIAG_INFO - 1))) && handler->idiag_info_size) {
 		attr = nla_reserve(skb, INET_DIAG_INFO,
-				   sizeof(struct tcp_info));
+				   handler->idiag_info_size);
 		if (!attr)
 			goto errout;
 
diff --git a/net/ipv4/tcp_diag.c b/net/ipv4/tcp_diag.c
index 0d73f9ddb55b..3caddcf298fb 100644
--- a/net/ipv4/tcp_diag.c
+++ b/net/ipv4/tcp_diag.c
@@ -50,6 +50,7 @@ static const struct inet_diag_handler tcp_diag_handler = {
 	.dump_one	 = tcp_diag_dump_one,
 	.idiag_get_info	 = tcp_diag_get_info,
 	.idiag_type	 = IPPROTO_TCP,
+	.idiag_info_size = sizeof(struct tcp_info),
 };
 
 static int __init tcp_diag_init(void)
diff --git a/net/ipv4/udp_diag.c b/net/ipv4/udp_diag.c
index 4a000f1dd757..ed4dfda6cc08 100644
--- a/net/ipv4/udp_diag.c
+++ b/net/ipv4/udp_diag.c
@@ -167,6 +167,7 @@ static const struct inet_diag_handler udp_diag_handler = {
 	.dump_one	 = udp_diag_dump_one,
 	.idiag_get_info  = udp_diag_get_info,
 	.idiag_type	 = IPPROTO_UDP,
+	.idiag_info_size = 0,
 };
 
 static void udplite_diag_dump(struct sk_buff *skb, struct netlink_callback *cb,
@@ -186,6 +187,7 @@ static const struct inet_diag_handler udplite_diag_handler = {
 	.dump_one	 = udplite_diag_dump_one,
 	.idiag_get_info  = udp_diag_get_info,
 	.idiag_type	 = IPPROTO_UDPLITE,
+	.idiag_info_size = 0,
 };
 
 static int __init udp_diag_init(void)
