perf tools: Remove duplicate typedef config_term_func_t definition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 58de6ed0a9a32e4b1cf22cc0c46ca16056763f19
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/58de6ed0.failed

Older compilers don't like this, for instance, on RHEL6.7:

    CC       /tmp/build/perf/util/parse-events.o
  util/parse-events.c:844: error: redefinition of typedef ‘config_term_func_t’
  util/parse-events.c:353: note: previous declaration of ‘config_term_func_t’ was here

So remove the second definition, that should've been just moved in 43d0b97817a4
("perf tools: Enable config and setting names for legacy cache events"), not copied.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Fixes: 43d0b97817a4 ("perf tools: Enable config and setting names for legacy cache events")
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 58de6ed0a9a32e4b1cf22cc0c46ca16056763f19)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/parse-events.c
diff --cc tools/perf/util/parse-events.c
index ee3541614df9,b0b329539db5..000000000000
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@@ -596,9 -787,63 +596,69 @@@ static int check_type_val(struct parse_
  	return -EINVAL;
  }
  
++<<<<<<< HEAD
 +static int config_term(struct perf_event_attr *attr,
 +		       struct parse_events_term *term,
 +		       struct parse_events_error *err)
++=======
+ /*
+  * Update according to parse-events.l
+  */
+ static const char *config_term_names[__PARSE_EVENTS__TERM_TYPE_NR] = {
+ 	[PARSE_EVENTS__TERM_TYPE_USER]			= "<sysfs term>",
+ 	[PARSE_EVENTS__TERM_TYPE_CONFIG]		= "config",
+ 	[PARSE_EVENTS__TERM_TYPE_CONFIG1]		= "config1",
+ 	[PARSE_EVENTS__TERM_TYPE_CONFIG2]		= "config2",
+ 	[PARSE_EVENTS__TERM_TYPE_NAME]			= "name",
+ 	[PARSE_EVENTS__TERM_TYPE_SAMPLE_PERIOD]		= "period",
+ 	[PARSE_EVENTS__TERM_TYPE_SAMPLE_FREQ]		= "freq",
+ 	[PARSE_EVENTS__TERM_TYPE_BRANCH_SAMPLE_TYPE]	= "branch_type",
+ 	[PARSE_EVENTS__TERM_TYPE_TIME]			= "time",
+ 	[PARSE_EVENTS__TERM_TYPE_CALLGRAPH]		= "call-graph",
+ 	[PARSE_EVENTS__TERM_TYPE_STACKSIZE]		= "stack-size",
+ 	[PARSE_EVENTS__TERM_TYPE_NOINHERIT]		= "no-inherit",
+ 	[PARSE_EVENTS__TERM_TYPE_INHERIT]		= "inherit",
+ };
+ 
+ static bool config_term_shrinked;
+ 
+ static bool
+ config_term_avail(int term_type, struct parse_events_error *err)
+ {
+ 	if (term_type < 0 || term_type >= __PARSE_EVENTS__TERM_TYPE_NR) {
+ 		err->str = strdup("Invalid term_type");
+ 		return false;
+ 	}
+ 	if (!config_term_shrinked)
+ 		return true;
+ 
+ 	switch (term_type) {
+ 	case PARSE_EVENTS__TERM_TYPE_CONFIG:
+ 	case PARSE_EVENTS__TERM_TYPE_CONFIG1:
+ 	case PARSE_EVENTS__TERM_TYPE_CONFIG2:
+ 	case PARSE_EVENTS__TERM_TYPE_NAME:
+ 		return true;
+ 	default:
+ 		if (!err)
+ 			return false;
+ 
+ 		/* term_type is validated so indexing is safe */
+ 		if (asprintf(&err->str, "'%s' is not usable in 'perf stat'",
+ 			     config_term_names[term_type]) < 0)
+ 			err->str = NULL;
+ 		return false;
+ 	}
+ }
+ 
+ void parse_events__shrink_config_terms(void)
+ {
+ 	config_term_shrinked = true;
+ }
+ 
+ static int config_term_common(struct perf_event_attr *attr,
+ 			      struct parse_events_term *term,
+ 			      struct parse_events_error *err)
++>>>>>>> 58de6ed0a9a3 (perf tools: Remove duplicate typedef config_term_func_t definition)
  {
  #define CHECK_TYPE_VAL(type)						   \
  do {									   \
* Unmerged path tools/perf/util/parse-events.c
