vxlan: fix missing options_len update on RX with collect metadata

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 4024fcf70556311521e7b6cf79fa50e16f31013a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4024fcf7.failed

When signalling to metadata consumers that the metadata_dst entry
carries additional GBP extension data for vxlan (TUNNEL_VXLAN_OPT),
the dst's vxlan_metadata information is populated, but options_len
is left to zero. F.e. in ovs, ovs_flow_key_extract() checks for
options_len before extracting the data through ip_tunnel_info_opts_get().

Geneve uses ip_tunnel_info_opts_set() helper in receive path, which
sets options_len internally, vxlan however uses ip_tunnel_info_opts(),
so when filling vxlan_metadata, we do need to update options_len.

Fixes: 4c22279848c5 ("ip-tunnel: Use API to access tunnel metadata options.")
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4024fcf70556311521e7b6cf79fa50e16f31013a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 000e4c57a81e,1c32bd104797..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1202,13 -1306,18 +1202,22 @@@ static int vxlan_udp_encap_recv(struct 
  		struct vxlanhdr_gbp *gbp;
  
  		gbp = (struct vxlanhdr_gbp *)vxh;
++<<<<<<< HEAD
 +		md.gbp = ntohs(gbp->policy_id);
++=======
+ 		md->gbp = ntohs(gbp->policy_id);
+ 
+ 		if (tun_dst) {
+ 			tun_dst->u.tun_info.key.tun_flags |= TUNNEL_VXLAN_OPT;
+ 			tun_dst->u.tun_info.options_len = sizeof(*md);
+ 		}
++>>>>>>> 4024fcf70556 (vxlan: fix missing options_len update on RX with collect metadata)
  
  		if (gbp->dont_learn)
 -			md->gbp |= VXLAN_GBP_DONT_LEARN;
 +			md.gbp |= VXLAN_GBP_DONT_LEARN;
  
  		if (gbp->policy_applied)
 -			md->gbp |= VXLAN_GBP_POLICY_APPLIED;
 +			md.gbp |= VXLAN_GBP_POLICY_APPLIED;
  
  		flags &= ~VXLAN_GBP_USED_BITS;
  	}
* Unmerged path drivers/net/vxlan.c
