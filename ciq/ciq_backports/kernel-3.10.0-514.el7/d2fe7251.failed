ACPI / scan: Drop unnecessary label from acpi_create_platform_device()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit d2fe7251a36012bc552a4c95246d486a8e284043
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d2fe7251.failed

The create_dev label in acpi_create_platform_device() is not
necessary, because the if statement causing the jump to it to
happen may be rearranged to avoid that jump.

Rework the code accordingly (no functional changes should result
drom that).

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit d2fe7251a36012bc552a4c95246d486a8e284043)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpi_platform.c
diff --cc drivers/acpi/acpi_platform.c
index 4a7dc6c4e2de,1bde12708f9e..000000000000
--- a/drivers/acpi/acpi_platform.c
+++ b/drivers/acpi/acpi_platform.c
@@@ -59,21 -61,23 +59,39 @@@ struct platform_device *acpi_create_pla
  
  	INIT_LIST_HEAD(&resource_list);
  	count = acpi_dev_get_resources(adev, &resource_list, NULL, NULL);
++<<<<<<< HEAD
 +	if (count <= 0)
 +		return NULL;
 +
 +	resources = kmalloc(count * sizeof(struct resource), GFP_KERNEL);
 +	if (!resources) {
 +		dev_err(&adev->dev, "No memory for resources\n");
 +		acpi_dev_free_resource_list(&resource_list);
 +		return ERR_PTR(-ENOMEM);
++=======
+ 	if (count < 0) {
+ 		return 0;
+ 	} else if (count > 0) {
+ 		resources = kmalloc(count * sizeof(struct resource),
+ 				    GFP_KERNEL);
+ 		if (!resources) {
+ 			dev_err(&adev->dev, "No memory for resources\n");
+ 			acpi_dev_free_resource_list(&resource_list);
+ 			return -ENOMEM;
+ 		}
+ 		count = 0;
+ 		list_for_each_entry(rentry, &resource_list, node)
+ 			resources[count++] = rentry->res;
+ 
+ 		acpi_dev_free_resource_list(&resource_list);
++>>>>>>> d2fe7251a360 (ACPI / scan: Drop unnecessary label from acpi_create_platform_device())
  	}
- 	count = 0;
- 	list_for_each_entry(rentry, &resource_list, node)
- 		resources[count++] = rentry->res;
  
++<<<<<<< HEAD
 +	acpi_dev_free_resource_list(&resource_list);
 +
++=======
++>>>>>>> d2fe7251a360 (ACPI / scan: Drop unnecessary label from acpi_create_platform_device())
  	memset(&pdevinfo, 0, sizeof(pdevinfo));
  	/*
  	 * If the ACPI node has a parent and that parent has a physical device
* Unmerged path drivers/acpi/acpi_platform.c
