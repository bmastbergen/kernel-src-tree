libnvdimm, pmem: clarify the write+clear_poison+write flow

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Williams <dan.j.williams@intel.com>
commit 0a370d261c805286cbdfa1f96661322a28cce860
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0a370d26.failed

The ACPI specification does not specify the state of data after a clear
poison operation.  Potential future libnvdimm bus implementations for
other architectures also might not specify or disagree on the state of
data after clear poison.  Clarify why we write twice.

	Reported-by: Jeff Moyer <jmoyer@redhat.com>
	Reported-by: Vishal Verma <vishal.l.verma@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
	Reviewed-by: Vishal Verma <vishal.l.verma@intel.com>
(cherry picked from commit 0a370d261c805286cbdfa1f96661322a28cce860)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/pmem.c
* Unmerged path drivers/nvdimm/pmem.c
* Unmerged path drivers/nvdimm/pmem.c
