mmc: core: Remove redundant ->power_restore() callback for MMC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] core: Remove redundant ->power_restore() callback for MMC (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 95.80%
commit-author Ulf Hansson <ulf.hansson@linaro.org>
commit 364549ddc29dd5490e81039cb85fbf0123365754
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/364549dd.failed

Since the ->reset() callback is implemented for MMC, the ->power_restore()
callback has become redundant, let's remove it.

	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 364549ddc29dd5490e81039cb85fbf0123365754)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/mmc.c
diff --cc drivers/mmc/core/mmc.c
index 33983b7d000a,e726903170a8..000000000000
--- a/drivers/mmc/core/mmc.c
+++ b/drivers/mmc/core/mmc.c
@@@ -1684,16 -1910,44 +1684,57 @@@ static int mmc_runtime_resume(struct mm
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int mmc_power_restore(struct mmc_host *host)
 +{
 +	int ret;
 +
 +	host->card->state &= ~(MMC_STATE_HIGHSPEED | MMC_STATE_HIGHSPEED_200);
 +	mmc_claim_host(host);
 +	ret = mmc_init_card(host, host->card->ocr, host->card);
 +	mmc_release_host(host);
 +
 +	return ret;
++=======
+ int mmc_can_reset(struct mmc_card *card)
+ {
+ 	u8 rst_n_function;
+ 
+ 	rst_n_function = card->ext_csd.rst_n_function;
+ 	if ((rst_n_function & EXT_CSD_RST_N_EN_MASK) != EXT_CSD_RST_N_ENABLED)
+ 		return 0;
+ 	return 1;
+ }
+ EXPORT_SYMBOL(mmc_can_reset);
+ 
+ static int mmc_reset(struct mmc_host *host)
+ {
+ 	struct mmc_card *card = host->card;
+ 	u32 status;
+ 
+ 	if (!(host->caps & MMC_CAP_HW_RESET) || !host->ops->hw_reset)
+ 		return -EOPNOTSUPP;
+ 
+ 	if (!mmc_can_reset(card))
+ 		return -EOPNOTSUPP;
+ 
+ 	mmc_host_clk_hold(host);
+ 	mmc_set_clock(host, host->f_init);
+ 
+ 	host->ops->hw_reset(host);
+ 
+ 	/* If the reset has happened, then a status command will fail */
+ 	if (!mmc_send_status(card, &status)) {
+ 		mmc_host_clk_release(host);
+ 		return -ENOSYS;
+ 	}
+ 
+ 	/* Set initial state and call mmc_set_ios */
+ 	mmc_set_initial_state(host);
+ 	mmc_host_clk_release(host);
+ 
+ 	return mmc_init_card(host, card->ocr, card);
++>>>>>>> 364549ddc29d (mmc: core: Remove redundant ->power_restore() callback for MMC)
  }
  
  static const struct mmc_bus_ops mmc_ops = {
@@@ -1703,9 -1957,9 +1744,8 @@@
  	.resume = mmc_resume,
  	.runtime_suspend = mmc_runtime_suspend,
  	.runtime_resume = mmc_runtime_resume,
- 	.power_restore = mmc_power_restore,
  	.alive = mmc_alive,
  	.shutdown = mmc_shutdown,
 -	.reset = mmc_reset,
  };
  
  /*
* Unmerged path drivers/mmc/core/mmc.c
