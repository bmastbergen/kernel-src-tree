md: set MD_HAS_JOURNAL in correct places

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [md] set MD_HAS_JOURNAL in correct places (Jes Sorensen) [1250578 1265947 1273343 1299140 1307091 1312828 1320563 1340839]
Rebuild_FUZZ: 94.74%
commit-author Shaohua Li <shli@fb.com>
commit a62ab49eb502a07814f9942770893118c6281223
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a62ab49e.failed

Set MD_HAS_JOURNAL when a array is loaded or journal is initialized.
This is to avoid the flags set too early in journal disk hotadd.

	Signed-off-by: Shaohua Li <shli@fb.com>
	Signed-off-by: NeilBrown <neilb@suse.com>
(cherry picked from commit a62ab49eb502a07814f9942770893118c6281223)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
#	drivers/md/raid5-cache.c
diff --cc drivers/md/md.c
index 9c04fa50cc7f,29a4bbf62be5..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -1650,6 -1639,17 +1655,20 @@@ static int super_1_validate(struct mdde
  		case MD_DISK_ROLE_FAULTY: /* faulty */
  			set_bit(Faulty, &rdev->flags);
  			break;
++<<<<<<< HEAD
++=======
+ 		case MD_DISK_ROLE_JOURNAL: /* journal device */
+ 			if (!(le32_to_cpu(sb->feature_map) & MD_FEATURE_JOURNAL)) {
+ 				/* journal device without journal feature */
+ 				printk(KERN_WARNING
+ 				  "md: journal device provided without journal feature, ignoring the device\n");
+ 				return -EINVAL;
+ 			}
+ 			set_bit(Journal, &rdev->flags);
+ 			rdev->journal_tail = le64_to_cpu(sb->journal_tail);
+ 			rdev->raid_disk = 0;
+ 			break;
++>>>>>>> a62ab49eb502 (md: set MD_HAS_JOURNAL in correct places)
  		default:
  			rdev->saved_raid_disk = role;
  			if ((le32_to_cpu(sb->feature_map) &
diff --cc drivers/md/raid5-cache.c
index 32663089824b,7ac035a73281..000000000000
--- a/drivers/md/raid5-cache.c
+++ b/drivers/md/raid5-cache.c
@@@ -1187,8 -1234,10 +1187,13 @@@ int r5l_init_log(struct r5conf *conf, s
  	if (r5l_load_log(log))
  		goto error;
  
++<<<<<<< HEAD
 +	conf->log = log;
++=======
+ 	rcu_assign_pointer(conf->log, log);
+ 	set_bit(MD_HAS_JOURNAL, &conf->mddev->flags);
++>>>>>>> a62ab49eb502 (md: set MD_HAS_JOURNAL in correct places)
  	return 0;
 -
  error:
  	md_unregister_thread(&log->reclaim_thread);
  reclaim_thread:
* Unmerged path drivers/md/md.c
* Unmerged path drivers/md/raid5-cache.c
