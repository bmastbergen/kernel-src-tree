hv_netvsc: Eliminate completion_func from struct hv_netvsc_packet

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author KY Srinivasan <kys@microsoft.com>
commit a429bda374a640b05a8f949fed080af7512be49a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a429bda3.failed

Eliminate completion_func from struct hv_netvsc_packet.

	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a429bda374a640b05a8f949fed080af7512be49a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/hyperv_net.h
#	drivers/net/hyperv/netvsc_drv.c
#	drivers/net/hyperv/rndis_filter.c
diff --cc drivers/net/hyperv/hyperv_net.h
index cf498664d989,a613e723d8f7..000000000000
--- a/drivers/net/hyperv/hyperv_net.h
+++ b/drivers/net/hyperv/hyperv_net.h
@@@ -128,28 -127,22 +128,38 @@@ struct ndis_tcp_ip_checksum_info
   */
  struct hv_netvsc_packet {
  	/* Bookkeeping stuff */
++<<<<<<< HEAD
 +	u32 status;
++=======
+ 	u8 status;
+ 	u8 xmit_more; /* from skb */
+ 	u8 cp_partial; /* partial copy into send buffer */
+ 
+ 	u8 rmsg_size; /* RNDIS header and PPI size */
+ 	u8 rmsg_pgcnt; /* page count of RNDIS header and PPI */
+ 	u8 page_buf_cnt;
++>>>>>>> a429bda374a6 (hv_netvsc: Eliminate completion_func from struct hv_netvsc_packet)
  
 +	bool is_data_pkt;
  	u16 vlan_tci;
 +
  	u16 q_idx;
 +	struct vmbus_channel *channel;
 +
 +	u64 send_completion_tid;
 +	void *send_completion_ctx;
 +	void (*send_completion)(void *context);
 +
  	u32 send_buf_index;
  
 +	/* This points to the memory after page_buf */
 +	struct rndis_message *rndis_msg;
 +
  	u32 total_data_buflen;
 +	/* Points to the send/receive buffer where the ethernet frame is */
 +	void *data;
 +	u32 page_buf_cnt;
 +	struct hv_page_buffer page_buf[0];
  };
  
  struct netvsc_device_info {
diff --cc drivers/net/hyperv/netvsc_drv.c
index 56b76b7b9a27,7f4f6c318071..000000000000
--- a/drivers/net/hyperv/netvsc_drv.c
+++ b/drivers/net/hyperv/netvsc_drv.c
@@@ -458,18 -478,12 +458,21 @@@ static int netvsc_start_xmit(struct sk_
  
  	packet->q_idx = skb_get_queue_mapping(skb);
  
 +	packet->is_data_pkt = true;
  	packet->total_data_buflen = skb->len;
  
 -	rndis_msg = (struct rndis_message *)skb->head;
 +	packet->rndis_msg = (struct rndis_message *)((unsigned long)packet +
 +				sizeof(struct hv_netvsc_packet) +
 +				(num_data_pgs * sizeof(struct hv_page_buffer)));
  
 -	memset(rndis_msg, 0, RNDIS_AND_PPI_SIZE);
++<<<<<<< HEAD
 +	/* Set the completion routine */
 +	packet->send_completion = netvsc_xmit_completion;
 +	packet->send_completion_ctx = packet;
 +	packet->send_completion_tid = (unsigned long)skb;
  
++=======
++>>>>>>> a429bda374a6 (hv_netvsc: Eliminate completion_func from struct hv_netvsc_packet)
  	isvlan = packet->vlan_tci & VLAN_TAG_PRESENT;
  
  	/* Add the rndis header */
diff --cc drivers/net/hyperv/rndis_filter.c
index 4f78abd49222,6ba5adfe93b6..000000000000
--- a/drivers/net/hyperv/rndis_filter.c
+++ b/drivers/net/hyperv/rndis_filter.c
@@@ -224,20 -225,20 +224,24 @@@ static int rndis_filter_send_request(st
  		(unsigned long)&req->request_msg & (PAGE_SIZE - 1);
  
  	/* Add one page_buf when request_msg crossing page boundary */
 -	if (pb[0].offset + pb[0].len > PAGE_SIZE) {
 +	if (packet->page_buf[0].offset + packet->page_buf[0].len > PAGE_SIZE) {
  		packet->page_buf_cnt++;
 -		pb[0].len = PAGE_SIZE -
 -			pb[0].offset;
 -		pb[1].pfn = virt_to_phys((void *)&req->request_msg
 -			+ pb[0].len) >> PAGE_SHIFT;
 -		pb[1].offset = 0;
 -		pb[1].len = req->request_msg.msg_len -
 -			pb[0].len;
 +		packet->page_buf[0].len = PAGE_SIZE -
 +			packet->page_buf[0].offset;
 +		packet->page_buf[1].pfn = virt_to_phys((void *)&req->request_msg
 +			+ packet->page_buf[0].len) >> PAGE_SHIFT;
 +		packet->page_buf[1].offset = 0;
 +		packet->page_buf[1].len = req->request_msg.msg_len -
 +			packet->page_buf[0].len;
  	}
  
++<<<<<<< HEAD
 +	packet->send_completion = NULL;
++=======
+ 	packet->xmit_more = false;
++>>>>>>> a429bda374a6 (hv_netvsc: Eliminate completion_func from struct hv_netvsc_packet)
  
 -	ret = netvsc_send(dev->net_dev->dev, packet, NULL, &pb, NULL);
 +	ret = netvsc_send(dev->net_dev->dev, packet);
  	return ret;
  }
  
* Unmerged path drivers/net/hyperv/hyperv_net.h
* Unmerged path drivers/net/hyperv/netvsc_drv.c
* Unmerged path drivers/net/hyperv/rndis_filter.c
