rhashtable: fix rht_for_each_entry_safe() endless loop

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Patrick McHardy <kaber@trash.net>
commit 607954b084d4ad5e6a2e0f795de7803d9c6ae37f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/607954b0.failed

"next" is not updated, causing an endless loop for buckets with more than
one element.

Fixes: 88d6ed15acff ("rhashtable: Convert bucket iterators to take table and index")
	Signed-off-by: Patrick McHardy <kaber@trash.net>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 607954b084d4ad5e6a2e0f795de7803d9c6ae37f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/rhashtable.h
diff --cc include/linux/rhashtable.h
index 0839d7b8cd60,e0337844358e..000000000000
--- a/include/linux/rhashtable.h
+++ b/include/linux/rhashtable.h
@@@ -191,10 -257,12 +191,19 @@@ void rhashtable_destroy(const struct rh
   */
  #define rht_for_each_entry_safe(tpos, pos, next, tbl, hash, member)	    \
  	for (pos = rht_dereference_bucket((tbl)->buckets[hash], tbl, hash), \
++<<<<<<< HEAD
 +	     next = pos ? rht_dereference_bucket(pos->next, tbl, hash)      \
 +			: NULL;						    \
 +	     pos && rht_entry(tpos, pos, member);			    \
 +	     pos = next)
++=======
+ 	     next = !rht_is_a_nulls(pos) ?				    \
+ 		       rht_dereference_bucket(pos->next, tbl, hash) : NULL; \
+ 	     (!rht_is_a_nulls(pos)) && rht_entry(tpos, pos, member);	    \
+ 	     pos = next,						    \
+ 	     next = !rht_is_a_nulls(pos) ?				    \
+ 		       rht_dereference_bucket(pos->next, tbl, hash) : NULL)
++>>>>>>> 607954b084d4 (rhashtable: fix rht_for_each_entry_safe() endless loop)
  
  /**
   * rht_for_each_rcu_continue - continue iterating over rcu hash chain
* Unmerged path include/linux/rhashtable.h
