net: sctp: get rid of SCTP_DBG_TSNS entirely

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] sctp: get rid of SCTP_DBG_TSNS entirely (Marcelo Leitner) [1337639]
Rebuild_FUZZ: 93.98%
commit-author Daniel Borkmann <dborkman@redhat.com>
commit e02010adeeb21ef56d6b9b68c785ed1ecc832aee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e02010ad.failed

After having reworked the debugging framework, Neil and Vlad agreed to
get rid of the leftover SCTP_DBG_TSNS code for a couple of reasons:

We can use systemtap scripts to investigate these things, we now have
pr_debug() helpers that make life easier, and if we really need anything
else besides those tools, we will be forced to come up with something
better than we have there. Therefore, get rid of this ifdef debugging
code entirely for now.

	Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
CC: Vlad Yasevich <vyasevich@gmail.com>
CC: Neil Horman <nhorman@tuxdriver.com>
	Acked-by: Neil Horman <nhorman@tuxdriver.com>
	Acked-by: Vlad Yasevich <vyasevich@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e02010adeeb21ef56d6b9b68c785ed1ecc832aee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sctp/Kconfig
#	net/sctp/outqueue.c
diff --cc net/sctp/Kconfig
index 31ae23990e24,71c1a598d9bc..000000000000
--- a/net/sctp/Kconfig
+++ b/net/sctp/Kconfig
@@@ -48,14 -49,6 +48,17 @@@ config NET_SCTPPROB
          To compile this code as a module, choose M here: the
          module will be called sctp_probe.
  
++<<<<<<< HEAD
 +config SCTP_DBG_MSG
 +	bool "SCTP: Debug messages"
 +	help
 +	  If you say Y, this will enable verbose debugging messages. 
 +
 +	  If unsure, say N.  However, if you are running into problems, use 
 +	  this option to gather detailed trace information
 +
++=======
++>>>>>>> e02010adeeb2 (net: sctp: get rid of SCTP_DBG_TSNS entirely)
  config SCTP_DBG_OBJCNT
  	bool "SCTP: Debug object counts"
  	depends on PROC_FS
diff --cc net/sctp/outqueue.c
index cb1123e96285,cb80a8e060b7..000000000000
--- a/net/sctp/outqueue.c
+++ b/net/sctp/outqueue.c
@@@ -1347,23 -1334,7 +1347,26 @@@ static void sctp_check_transmitted(stru
  	__u8 restart_timer = 0;
  	int bytes_acked = 0;
  	int migrate_bytes = 0;
 +	bool forward_progress = false;
 +
++<<<<<<< HEAD
 +	/* These state variables are for coherent debug output. --xguo */
 +
 +#if SCTP_DEBUG
 +	__u32 dbg_ack_tsn = 0;	/* An ACKed TSN range starts here... */
 +	__u32 dbg_last_ack_tsn = 0;  /* ...and finishes here.	     */
 +	__u32 dbg_kept_tsn = 0;	/* An un-ACKed range starts here...  */
 +	__u32 dbg_last_kept_tsn = 0; /* ...and finishes here.	     */
  
 +	/* 0 : The last TSN was ACKed.
 +	 * 1 : The last TSN was NOT ACKed (i.e. KEPT).
 +	 * -1: We need to initialize.
 +	 */
 +	int dbg_prt_state = -1;
 +#endif /* SCTP_DEBUG */
 +
++=======
++>>>>>>> e02010adeeb2 (net: sctp: get rid of SCTP_DBG_TSNS entirely)
  	sack_ctsn = ntohl(sack->cum_tsn_ack);
  
  	INIT_LIST_HEAD(&tlist);
@@@ -1488,57 -1456,11 +1491,60 @@@
  				 */
  				list_add_tail(lchunk, &tlist);
  			}
++<<<<<<< HEAD
 +
 +#if SCTP_DEBUG
 +			switch (dbg_prt_state) {
 +			case 0:	/* last TSN was ACKed */
 +				if (dbg_last_ack_tsn + 1 == tsn) {
 +					/* This TSN belongs to the
 +					 * current ACK range.
 +					 */
 +					break;
 +				}
 +
 +				if (dbg_last_ack_tsn != dbg_ack_tsn) {
 +					/* Display the end of the
 +					 * current range.
 +					 */
 +					SCTP_DEBUG_PRINTK_CONT("-%08x",
 +							       dbg_last_ack_tsn);
 +				}
 +
 +				/* Start a new range.  */
 +				SCTP_DEBUG_PRINTK_CONT(",%08x", tsn);
 +				dbg_ack_tsn = tsn;
 +				break;
 +
 +			case 1:	/* The last TSN was NOT ACKed. */
 +				if (dbg_last_kept_tsn != dbg_kept_tsn) {
 +					/* Display the end of current range. */
 +					SCTP_DEBUG_PRINTK_CONT("-%08x",
 +							       dbg_last_kept_tsn);
 +				}
 +
 +				SCTP_DEBUG_PRINTK_CONT("\n");
 +
 +				/* FALL THROUGH... */
 +			default:
 +				/* This is the first-ever TSN we examined.  */
 +				/* Start a new range of ACK-ed TSNs.  */
 +				SCTP_DEBUG_PRINTK("ACKed: %08x", tsn);
 +				dbg_prt_state = 0;
 +				dbg_ack_tsn = tsn;
 +			}
 +
 +			dbg_last_ack_tsn = tsn;
 +#endif /* SCTP_DEBUG */
 +
++=======
++>>>>>>> e02010adeeb2 (net: sctp: get rid of SCTP_DBG_TSNS entirely)
  		} else {
  			if (tchunk->tsn_gap_acked) {
 -				pr_debug("%s: receiver reneged on data TSN:0x%x\n",
 -					 __func__, tsn);
 -
 +				SCTP_DEBUG_PRINTK("%s: Receiver reneged on "
 +						  "data TSN: 0x%x\n",
 +						  __func__,
 +						  tsn);
  				tchunk->tsn_gap_acked = 0;
  
  				if (tchunk->transport)
@@@ -1557,59 -1479,9 +1563,65 @@@
  			}
  
  			list_add_tail(lchunk, &tlist);
++<<<<<<< HEAD
 +
 +#if SCTP_DEBUG
 +			/* See the above comments on ACK-ed TSNs. */
 +			switch (dbg_prt_state) {
 +			case 1:
 +				if (dbg_last_kept_tsn + 1 == tsn)
 +					break;
 +
 +				if (dbg_last_kept_tsn != dbg_kept_tsn)
 +					SCTP_DEBUG_PRINTK_CONT("-%08x",
 +							       dbg_last_kept_tsn);
 +
 +				SCTP_DEBUG_PRINTK_CONT(",%08x", tsn);
 +				dbg_kept_tsn = tsn;
 +				break;
 +
 +			case 0:
 +				if (dbg_last_ack_tsn != dbg_ack_tsn)
 +					SCTP_DEBUG_PRINTK_CONT("-%08x",
 +							       dbg_last_ack_tsn);
 +				SCTP_DEBUG_PRINTK_CONT("\n");
 +
 +				/* FALL THROUGH... */
 +			default:
 +				SCTP_DEBUG_PRINTK("KEPT: %08x",tsn);
 +				dbg_prt_state = 1;
 +				dbg_kept_tsn = tsn;
 +			}
 +
 +			dbg_last_kept_tsn = tsn;
 +#endif /* SCTP_DEBUG */
 +		}
 +	}
 +
 +#if SCTP_DEBUG
 +	/* Finish off the last range, displaying its ending TSN.  */
 +	switch (dbg_prt_state) {
 +	case 0:
 +		if (dbg_last_ack_tsn != dbg_ack_tsn) {
 +			SCTP_DEBUG_PRINTK_CONT("-%08x\n", dbg_last_ack_tsn);
 +		} else {
 +			SCTP_DEBUG_PRINTK_CONT("\n");
 +		}
 +	break;
 +
 +	case 1:
 +		if (dbg_last_kept_tsn != dbg_kept_tsn) {
 +			SCTP_DEBUG_PRINTK_CONT("-%08x\n", dbg_last_kept_tsn);
 +		} else {
 +			SCTP_DEBUG_PRINTK_CONT("\n");
 +		}
 +	}
 +#endif /* SCTP_DEBUG */
++=======
+ 		}
+ 	}
+ 
++>>>>>>> e02010adeeb2 (net: sctp: get rid of SCTP_DBG_TSNS entirely)
  	if (transport) {
  		if (bytes_acked) {
  			struct sctp_association *asoc = transport->asoc;
* Unmerged path net/sctp/Kconfig
* Unmerged path net/sctp/outqueue.c
