ACPI / battery: Accelerate battery resume callback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [acpi] battery: Accelerate battery resume callback (Jeremy McNicoll) [1270522]
Rebuild_FUZZ: 92.47%
commit-author Lan Tianyu <tianyu.lan@intel.com>
commit 9e50bc14a7f58b5d8a55973b2d69355852ae2dae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9e50bc14.failed

Most time of battery resume callback is spent on executing AML code
_BTP, _BIF and _BIF to get battery info, status and set alarm. These
AML methods may access EC operation regions several times and consumes
time.

These operations are not necessary during devices resume and can run
during POST_SUSPEND/HIBERNATION event when all processes are thawed.

This also can avoid removing and adding battery sysfs nodes every system
resume even if the battery unit is not actually changed. The original code
updates sysfs nodes without check and this seems not reasonable.

	Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 9e50bc14a7f58b5d8a55973b2d69355852ae2dae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/battery.c
diff --cc drivers/acpi/battery.c
index da9fcaac1e85,3b4921e4dc4e..000000000000
--- a/drivers/acpi/battery.c
+++ b/drivers/acpi/battery.c
@@@ -1027,9 -1034,7 +1031,13 @@@ static void acpi_battery_notify(struct 
  	old = battery->bat.dev;
  	if (event == ACPI_BATTERY_NOTIFY_INFO)
  		acpi_battery_refresh(battery);
++<<<<<<< HEAD
 +	acpi_battery_update(battery);
 +	acpi_bus_generate_proc_event(device, event,
 +				     acpi_battery_present(battery));
++=======
+ 	acpi_battery_update(battery, false);
++>>>>>>> 9e50bc14a7f5 (ACPI / battery: Accelerate battery resume callback)
  	acpi_bus_generate_netlink_event(device->pnp.device_class,
  					dev_name(&device->dev), event,
  					acpi_battery_present(battery));
@@@ -1136,9 -1167,11 +1158,9 @@@ static int acpi_battery_resume(struct d
  		return -EINVAL;
  
  	battery->update_time = 0;
- 	acpi_battery_update(battery);
+ 	acpi_battery_update(battery, true);
  	return 0;
  }
 -#else
 -#define acpi_battery_resume NULL
  #endif
  
  static SIMPLE_DEV_PM_OPS(acpi_battery_pm, NULL, acpi_battery_resume);
* Unmerged path drivers/acpi/battery.c
