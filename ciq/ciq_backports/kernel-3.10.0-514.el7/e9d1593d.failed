cifs: fold cifs_iovec_write() into the only caller

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit e9d1593d4e9311bca040ecf6ec7599e6f235140c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e9d1593d.failed

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit e9d1593d4e9311bca040ecf6ec7599e6f235140c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/file.c
diff --cc fs/cifs/file.c
index d8c52b4862c1,3cb04129ddb1..000000000000
--- a/fs/cifs/file.c
+++ b/fs/cifs/file.c
@@@ -2655,37 -2656,13 +2661,43 @@@ restart_loop
  		kref_put(&wdata->refcount, cifs_uncached_writedata_release);
  	}
  
- 	if (total_written > 0)
- 		*poffset += total_written;
+ 	if (unlikely(!total_written))
+ 		return rc;
  
+ 	iocb->ki_pos += total_written;
+ 	set_bit(CIFS_INO_INVALID_MAPPING, &CIFS_I(file_inode(file))->flags);
  	cifs_stats_bytes_written(tcon, total_written);
++<<<<<<< HEAD
 +	return total_written ? total_written : (ssize_t)rc;
 +}
 +
 +ssize_t cifs_user_writev(struct kiocb *iocb, const struct iovec *iov,
 +				unsigned long nr_segs, loff_t pos)
 +{
 +	ssize_t written;
 +	struct inode *inode;
 +	struct iov_iter from;
 +
 +        iov_iter_init(&from, iov, nr_segs, iov_length(iov, nr_segs), 0);
 +
 +	inode = file_inode(iocb->ki_filp);
 +
 +	/*
 +	 * BB - optimize the way when signing is disabled. We can drop this
 +	 * extra memory-to-memory copying and use iovec buffers for constructing
 +	 * write request.
 +	 */
 +
 +	written = cifs_iovec_write(iocb->ki_filp, &from, &pos);
 +	if (written > 0) {
 +		set_bit(CIFS_INO_INVALID_MAPPING, &CIFS_I(inode)->flags);
 +		iocb->ki_pos = pos;
 +	}
 +
 +	return written;
++=======
+ 	return total_written;
++>>>>>>> e9d1593d4e93 (cifs: fold cifs_iovec_write() into the only caller)
  }
  
  static ssize_t
* Unmerged path fs/cifs/file.c
