intel_pstate: decrease number of "HWP enabled" messages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Prarit Bhargava <prarit@redhat.com>
commit 539342f60b93c9f98c47f75b63fe5b8b13c1d226
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/539342f6.failed

When booting an HWP enabled system the kernel displays one "HWP enabled"
message for each cpu.  The messages are superfluous since HWP is globally
enabled across all CPUs. This patch also adds an informational message
when HWP is disabled via intel_pstate=no_hwp.

	Signed-off-by: Prarit Bhargava <prarit@redhat.com>
	Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 539342f60b93c9f98c47f75b63fe5b8b13c1d226)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 9d42010c6969,2e31d097def6..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -481,12 -682,9 +481,16 @@@ static void __init intel_pstate_sysfs_e
  }
  /************************** sysfs end ************************/
  
 -static void intel_pstate_hwp_enable(struct cpudata *cpudata)
 +static void intel_pstate_hwp_enable(void)
  {
++<<<<<<< HEAD
 +	hwp_active++;
 +	pr_info("intel_pstate HWP enabled\n");
 +
 +	wrmsrl( MSR_PM_ENABLE, 0x1);
++=======
+ 	wrmsrl_on_cpu(cpudata->cpu, MSR_PM_ENABLE, 0x1);
++>>>>>>> 539342f60b93 (intel_pstate: decrease number of "HWP enabled" messages)
  }
  
  static int byt_get_min_pstate(void)
@@@ -1237,18 -1555,10 +1241,25 @@@ static int __init intel_pstate_init(voi
  	if (!all_cpu_data)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	/*
 +	 * RHEL7: We are having issues with the Skylake-S hanging
 +	 * when HWP is enabled so check for Skylake-S and
 +	 * disable HWP if found
 +	 */
 +	if (x86_match_cpu(hwp_quirk_cpu_ids)) {
 +		pr_info("intel_pstate Skylake-S detected. disabling HWP\n");
 +		no_hwp = 1;
 +	}
 +
 +	if (cpu_has(c,X86_FEATURE_HWP) && !no_hwp)
 +		intel_pstate_hwp_enable();
++=======
+ 	if (static_cpu_has_safe(X86_FEATURE_HWP) && !no_hwp) {
+ 		pr_info("intel_pstate: HWP enabled\n");
+ 		hwp_active++;
+ 	}
++>>>>>>> 539342f60b93 (intel_pstate: decrease number of "HWP enabled" messages)
  
  	if (!hwp_active && hwp_only)
  		goto out;
* Unmerged path drivers/cpufreq/intel_pstate.c
