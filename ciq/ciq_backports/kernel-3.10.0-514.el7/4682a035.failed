netlink: Always copy on mmap TX.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] netlink: Always copy on mmap TX (Paolo Abeni) [1263708]
Rebuild_FUZZ: 98.41%
commit-author David Miller <davem@davemloft.net>
commit 4682a0358639b29cf69437ed909c6221f8c89847
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4682a035.failed

Checking the file f_count and the nlk->mapped count is not completely
sufficient to prevent the mmap'd area contents from changing from
under us during netlink mmap sendmsg() operations.

Be careful to sample the header's length field only once, because this
could change from under us as well.

Fixes: 5fd96123ee19 ("netlink: implement memory mapped sendmsg()")
	Signed-off-by: David S. Miller <davem@davemloft.net>
	Acked-by: Daniel Borkmann <dborkman@redhat.com>
	Acked-by: Thomas Graf <tgraf@suug.ch>
(cherry picked from commit 4682a0358639b29cf69437ed909c6221f8c89847)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netlink/af_netlink.c
diff --cc net/netlink/af_netlink.c
index 71a0efe7b318,a64680a3e782..000000000000
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@@ -711,18 -714,8 +711,20 @@@ static int netlink_mmap_sendmsg(struct 
  	struct nl_mmap_hdr *hdr;
  	struct sk_buff *skb;
  	unsigned int maxlen;
- 	bool excl = true;
  	int err = 0, len = 0;
  
++<<<<<<< HEAD
 +	/* Netlink messages are validated by the receiver before processing.
 +	 * In order to avoid userspace changing the contents of the message
 +	 * after validation, the socket and the ring may only be used by a
 +	 * single process, otherwise we fall back to copying.
 +	 */
 +	if (atomic_long_read(&sk->sk_socket->file->f_count) > 2 ||
 +	    atomic_read(&nlk->mapped) > 1)
 +		excl = false;
 +
++=======
++>>>>>>> 4682a0358639 (netlink: Always copy on mmap TX.)
  	mutex_lock(&nlk->pg_vec_lock);
  
  	ring   = &nlk->tx_ring;
* Unmerged path net/netlink/af_netlink.c
