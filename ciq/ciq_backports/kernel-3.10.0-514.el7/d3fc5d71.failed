mmc: sdhci: add a quirk for single block transactions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Vincent Yang <vincent.yang.fujitsu@gmail.com>
commit d3fc5d71ac4dfd28a66689cfd1eea84c4dba8bde
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d3fc5d71.failed

This patch defines a quirk to disable the block count
for single block transactions.
It is a preparation and will be used by Fujitsu
SDHCI controller f_sdh30 driver.

	Signed-off-by: Vincent Yang <Vincent.Yang@tw.fujitsu.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit d3fc5d71ac4dfd28a66689cfd1eea84c4dba8bde)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mmc/sdhci.h
diff --cc include/linux/mmc/sdhci.h
index 0c0735630f68,c3e3db196738..000000000000
--- a/include/linux/mmc/sdhci.h
+++ b/include/linux/mmc/sdhci.h
@@@ -101,6 -97,24 +101,27 @@@ struct sdhci_host 
  #define SDHCI_QUIRK2_NO_1_8_V				(1<<2)
  #define SDHCI_QUIRK2_PRESET_VALUE_BROKEN		(1<<3)
  #define SDHCI_QUIRK2_CARD_ON_NEEDS_BUS_ON		(1<<4)
++<<<<<<< HEAD
++=======
+ /* Controller has a non-standard host control register */
+ #define SDHCI_QUIRK2_BROKEN_HOST_CONTROL		(1<<5)
+ /* Controller does not support HS200 */
+ #define SDHCI_QUIRK2_BROKEN_HS200			(1<<6)
+ /* Controller does not support DDR50 */
+ #define SDHCI_QUIRK2_BROKEN_DDR50			(1<<7)
+ /* Stop command (CMD12) can set Transfer Complete when not using MMC_RSP_BUSY */
+ #define SDHCI_QUIRK2_STOP_WITH_TC			(1<<8)
+ /* Controller does not support 64-bit DMA */
+ #define SDHCI_QUIRK2_BROKEN_64_BIT_DMA			(1<<9)
+ /* need clear transfer mode register before send cmd */
+ #define SDHCI_QUIRK2_CLEAR_TRANSFERMODE_REG_BEFORE_CMD	(1<<10)
+ /* Capability register bit-63 indicates HS400 support */
+ #define SDHCI_QUIRK2_CAPS_BIT63_FOR_HS400		(1<<11)
+ /* forced tuned clock */
+ #define SDHCI_QUIRK2_TUNING_WORK_AROUND			(1<<12)
+ /* disable the block count for single block transactions */
+ #define SDHCI_QUIRK2_SUPPORT_SINGLE			(1<<13)
++>>>>>>> d3fc5d71ac4d (mmc: sdhci: add a quirk for single block transactions)
  
  	int irq;		/* Device IRQ */
  	void __iomem *ioaddr;	/* Mapped address */
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index b714bf3bdaa4..7399990f3d05 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -902,7 +902,7 @@ static void sdhci_prepare_data(struct sdhci_host *host, struct mmc_command *cmd)
 static void sdhci_set_transfer_mode(struct sdhci_host *host,
 	struct mmc_command *cmd)
 {
-	u16 mode;
+	u16 mode = 0;
 	struct mmc_data *data = cmd->data;
 
 	if (data == NULL) {
@@ -915,9 +915,11 @@ static void sdhci_set_transfer_mode(struct sdhci_host *host,
 
 	WARN_ON(!host->data);
 
-	mode = SDHCI_TRNS_BLK_CNT_EN;
+	if (!(host->quirks2 & SDHCI_QUIRK2_SUPPORT_SINGLE))
+		mode = SDHCI_TRNS_BLK_CNT_EN;
+
 	if (mmc_op_multi(cmd->opcode) || data->blocks > 1) {
-		mode |= SDHCI_TRNS_MULTI;
+		mode = SDHCI_TRNS_BLK_CNT_EN | SDHCI_TRNS_MULTI;
 		/*
 		 * If we are sending CMD23, CMD12 never gets sent
 		 * on successful completion (so no Auto-CMD12).
* Unmerged path include/linux/mmc/sdhci.h
