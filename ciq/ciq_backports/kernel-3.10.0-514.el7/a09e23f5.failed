usb: gadget: net2280: check interrupts for all endpoints

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mian Yousaf Kaukab <yousaf.kaukab@intel.com>
commit a09e23f53e2c14a65a3b14a00060fea163081e1f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a09e23f5.failed

USB3380 in enhanced mode has 4 IN and 4 OUT endpoints. Check
interrupts for all of them.

	Tested-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
	Signed-off-by: Mian Yousaf Kaukab <yousaf.kaukab@intel.com>
	Signed-off-by: Felipe Balbi <balbi@ti.com>
(cherry picked from commit a09e23f53e2c14a65a3b14a00060fea163081e1f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/gadget/net2280.c
diff --cc drivers/usb/gadget/net2280.c
index 8a49a999fea4,a78a9c048b87..000000000000
--- a/drivers/usb/gadget/net2280.c
+++ b/drivers/usb/gadget/net2280.c
@@@ -3064,7 -2883,27 +3064,31 @@@ next_endpoints3
  	return;
  }
  
++<<<<<<< HEAD:drivers/usb/gadget/net2280.c
 +static void handle_stat0_irqs (struct net2280 *dev, u32 stat)
++=======
+ static void usb338x_handle_ep_intr(struct net2280 *dev, u32 stat0)
+ {
+ 	u32 index;
+ 	u32 bit;
+ 
+ 	for (index = 0; index < ARRAY_SIZE(ep_bit); index++) {
+ 		bit = BIT(ep_bit[index]);
+ 
+ 		if (!stat0)
+ 			break;
+ 
+ 		if (!(stat0 & bit))
+ 			continue;
+ 
+ 		stat0 &= ~bit;
+ 
+ 		handle_ep_small(&dev->ep[index]);
+ 	}
+ }
+ 
+ static void handle_stat0_irqs(struct net2280 *dev, u32 stat)
++>>>>>>> a09e23f53e2c (usb: gadget: net2280: check interrupts for all endpoints):drivers/usb/gadget/udc/net2280.c
  {
  	struct net2280_ep	*ep;
  	u32			num, scratch;
@@@ -3290,20 -3127,31 +3314,42 @@@ do_stall
  #undef	w_length
  
  next_endpoints:
- 	/* endpoint data irq ? */
- 	scratch = stat & 0x7f;
- 	stat &= ~0x7f;
- 	for (num = 0; scratch; num++) {
- 		u32		t;
+ 	if ((dev->quirks & PLX_SUPERSPEED) && dev->enhanced_mode) {
+ 		u32 mask = (BIT(ENDPOINT_0_INTERRUPT) |
+ 			USB3380_IRQSTAT0_EP_INTR_MASK_IN |
+ 			USB3380_IRQSTAT0_EP_INTR_MASK_OUT);
  
++<<<<<<< HEAD:drivers/usb/gadget/net2280.c
 +		/* do this endpoint's FIFO and queue need tending? */
 +		t = 1 << num;
 +		if ((scratch & t) == 0)
 +			continue;
 +		scratch ^= t;
 +
 +		ep = &dev->ep [num];
 +		handle_ep_small (ep);
++=======
+ 		if (stat & mask) {
+ 			usb338x_handle_ep_intr(dev, stat & mask);
+ 			stat &= ~mask;
+ 		}
+ 	} else {
+ 		/* endpoint data irq ? */
+ 		scratch = stat & 0x7f;
+ 		stat &= ~0x7f;
+ 		for (num = 0; scratch; num++) {
+ 			u32		t;
+ 
+ 			/* do this endpoint's FIFO and queue need tending? */
+ 			t = BIT(num);
+ 			if ((scratch & t) == 0)
+ 				continue;
+ 			scratch ^= t;
+ 
+ 			ep = &dev->ep[num];
+ 			handle_ep_small(ep);
+ 		}
++>>>>>>> a09e23f53e2c (usb: gadget: net2280: check interrupts for all endpoints):drivers/usb/gadget/udc/net2280.c
  	}
  
  	if (stat)
* Unmerged path drivers/usb/gadget/net2280.c
diff --git a/include/linux/usb/net2280.h b/include/linux/usb/net2280.h
index 148b8fa5b1a2..725120224472 100644
--- a/include/linux/usb/net2280.h
+++ b/include/linux/usb/net2280.h
@@ -168,6 +168,9 @@ struct net2280_regs {
 #define     ENDPOINT_B_INTERRUPT                                2
 #define     ENDPOINT_A_INTERRUPT                                1
 #define     ENDPOINT_0_INTERRUPT                                0
+#define     USB3380_IRQSTAT0_EP_INTR_MASK_IN (0xF << 17)
+#define     USB3380_IRQSTAT0_EP_INTR_MASK_OUT (0xF << 1)
+
 	u32		irqstat1;
 #define     POWER_STATE_CHANGE_INTERRUPT                        27
 #define     PCI_ARBITER_TIMEOUT_INTERRUPT                       26
