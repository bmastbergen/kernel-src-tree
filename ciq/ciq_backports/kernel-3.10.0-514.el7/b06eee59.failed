netlink: Use rhashtable max_size instead of max_shift

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Herbert Xu <herbert@gondor.apana.org.au>
commit b06eee59b1e547f0f401820388ca68c624298a64
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b06eee59.failed

This patch converts netlink to use rhashtable max_size instead
of the obsolete max_shift.

	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b06eee59b1e547f0f401820388ca68c624298a64)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netlink/af_netlink.c
diff --cc net/netlink/af_netlink.c
index 9d53ffe3d114,d97aed628bda..000000000000
--- a/net/netlink/af_netlink.c
+++ b/net/netlink/af_netlink.c
@@@ -3155,10 -3123,7 +3155,14 @@@ static int __init netlink_proto_init(vo
  		.key_offset = offsetof(struct netlink_sock, portid),
  		.key_len = sizeof(u32), /* portid */
  		.hashfn = jhash,
++<<<<<<< HEAD
 +		.max_shift = 16, /* 64K */
 +		.grow_decision = rht_grow_above_75,
 +		.shrink_decision = rht_shrink_below_30,
 +		.mutex_is_held = lockdep_nl_sk_hash_is_held,
++=======
+ 		.max_size = 65536,
++>>>>>>> b06eee59b1e5 (netlink: Use rhashtable max_size instead of max_shift)
  	};
  
  	if (err != 0)
* Unmerged path net/netlink/af_netlink.c
