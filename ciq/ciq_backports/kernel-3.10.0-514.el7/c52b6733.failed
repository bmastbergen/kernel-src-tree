crypto: qat - remove superfluous check from adf_probe

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [crypto] qat - remove superfluous check from adf_probe (Neil Horman) [1274179]
Rebuild_FUZZ: 91.84%
commit-author Salvatore Benedetto <salvatore.benedetto@intel.com>
commit c52b67338937ffee7a4d7225d9cb334ace4279dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c52b6733.failed

- ent->device is already checked at the beginning of the function
   against the same value. This check is a duplicate.

	Signed-off-by: Salvatore Benedetto <salvatore.benedetto@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit c52b67338937ffee7a4d7225d9cb334ace4279dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_dh895xcc/adf_drv.c
diff --cc drivers/crypto/qat/qat_dh895xcc/adf_drv.c
index c1b3f0b342e2,f933f7da3cdb..000000000000
--- a/drivers/crypto/qat/qat_dh895xcc/adf_drv.c
+++ b/drivers/crypto/qat/qat_dh895xcc/adf_drv.c
@@@ -260,14 -253,7 +260,18 @@@ static int adf_probe(struct pci_dev *pd
  	}
  
  	accel_dev->hw_device = hw_data;
++<<<<<<< HEAD
 +	switch (ent->device) {
 +	case ADF_DH895XCC_PCI_DEVICE_ID:
 +		adf_init_hw_data_dh895xcc(accel_dev->hw_device);
 +		break;
 +	default:
 +		return -ENODEV;
 +	}
 +	accel_pci_dev = &accel_dev->accel_pci_dev;
++=======
+ 	adf_init_hw_data_dh895xcc(accel_dev->hw_device);
++>>>>>>> c52b67338937 (crypto: qat - remove superfluous check from adf_probe)
  	pci_read_config_byte(pdev, PCI_REVISION_ID, &accel_pci_dev->revid);
  	pci_read_config_dword(pdev, ADF_DH895XCC_FUSECTL_OFFSET,
  			      &hw_data->fuses);
* Unmerged path drivers/crypto/qat/qat_dh895xcc/adf_drv.c
diff --git a/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c b/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c
index 789426f21882..7bec249afdb9 100644
--- a/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c
+++ b/drivers/crypto/qat/qat_dh895xccvf/adf_drv.c
@@ -243,14 +243,7 @@ static int adf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 		goto out_err;
 	}
 	accel_dev->hw_device = hw_data;
-	switch (ent->device) {
-	case ADF_DH895XCCIOV_PCI_DEVICE_ID:
-		adf_init_hw_data_dh895xcciov(accel_dev->hw_device);
-		break;
-	default:
-		ret = -ENODEV;
-		goto out_err;
-	}
+	adf_init_hw_data_dh895xcciov(accel_dev->hw_device);
 
 	/* Get Accelerators and Accelerators Engines masks */
 	hw_data->accel_mask = hw_data->get_accel_mask(hw_data->fuses);
