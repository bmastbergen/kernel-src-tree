dm mpath: use blk_mq_alloc_request() and blk_mq_free_request() directly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mike Snitzer <snitzer@redhat.com>
commit 78ce23b51802f5e917d89e8fc9a56dec6cc2fd5b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/78ce23b5.failed

There isn't any need to support both old .request_fn and blk-mq paths
in the blk-mq specific portion of __multipath_map().  Call
blk_mq_alloc_request() directly rather than use blk_get_request().

Similarly, call blk_mq_free_request(), rather than blk_put_request(), in
multipath_release_clone().

	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit 78ce23b51802f5e917d89e8fc9a56dec6cc2fd5b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-mpath.c
diff --cc drivers/md/dm-mpath.c
index 75268d0af7fb,d31fce508f8f..000000000000
--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@@ -447,9 -448,13 +448,19 @@@ static int __multipath_map(struct dm_ta
  		clone->rq_disk = bdev->bd_disk;
  		clone->cmd_flags |= REQ_FAILFAST_TRANSPORT;
  	} else {
++<<<<<<< HEAD
 +		/* blk-mq request-based interface */
 +		*__clone = blk_get_request(bdev_get_queue(bdev),
 +					   rq_data_dir(rq), GFP_ATOMIC);
++=======
+ 		/*
+ 		 * blk-mq request-based interface; used by both:
+ 		 * .request_fn stacked on blk-mq path(s) and
+ 		 * blk-mq stacked on blk-mq path(s).
+ 		 */
+ 		*__clone = blk_mq_alloc_request(bdev_get_queue(bdev),
+ 						rq_data_dir(rq), BLK_MQ_REQ_NOWAIT);
++>>>>>>> 78ce23b51802 (dm mpath: use blk_mq_alloc_request() and blk_mq_free_request() directly)
  		if (IS_ERR(*__clone)) {
  			/* ENOMEM, requeue */
  			clear_request_fn_mpio(m, map_context);
* Unmerged path drivers/md/dm-mpath.c
