pinctrl: baytrail: Fix compilation warnings when !CONFIG_PM

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mika Westerberg <mika.westerberg@linux.intel.com>
commit ec879f1272283c040bc70e1a1fff5edbb547be59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ec879f12.failed

When CONFIG_PM is not set we get following compilation warnings:

 warning: â€˜byt_gpio_runtime_suspendâ€™ defined but not used [-Wunused-function]
 warning: â€˜byt_gpio_runtime_resumeâ€™ defined but not used [-Wunused-function]

Fix this by guarding byt_gpio_runtime_suspend()/byt_gpio_runtime_resume()
with #ifdef CONFIG_PM.

	Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit ec879f1272283c040bc70e1a1fff5edbb547be59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/pinctrl-baytrail.c
diff --cc drivers/pinctrl/pinctrl-baytrail.c
index ad68bcc7f9f9,b59ce75b1947..000000000000
--- a/drivers/pinctrl/pinctrl-baytrail.c
+++ b/drivers/pinctrl/pinctrl-baytrail.c
@@@ -643,6 -633,70 +643,73 @@@ static int byt_gpio_probe(struct platfo
  	return 0;
  }
  
++<<<<<<< HEAD:drivers/pinctrl/pinctrl-baytrail.c
++=======
+ #ifdef CONFIG_PM_SLEEP
+ static int byt_gpio_suspend(struct device *dev)
+ {
+ 	struct platform_device *pdev = to_platform_device(dev);
+ 	struct byt_gpio *vg = platform_get_drvdata(pdev);
+ 	int i;
+ 
+ 	for (i = 0; i < vg->chip.ngpio; i++) {
+ 		void __iomem *reg;
+ 		u32 value;
+ 
+ 		reg = byt_gpio_reg(&vg->chip, i, BYT_CONF0_REG);
+ 		value = readl(reg) & BYT_CONF0_RESTORE_MASK;
+ 		vg->saved_context[i].conf0 = value;
+ 
+ 		reg = byt_gpio_reg(&vg->chip, i, BYT_VAL_REG);
+ 		value = readl(reg) & BYT_VAL_RESTORE_MASK;
+ 		vg->saved_context[i].val = value;
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ static int byt_gpio_resume(struct device *dev)
+ {
+ 	struct platform_device *pdev = to_platform_device(dev);
+ 	struct byt_gpio *vg = platform_get_drvdata(pdev);
+ 	int i;
+ 
+ 	for (i = 0; i < vg->chip.ngpio; i++) {
+ 		void __iomem *reg;
+ 		u32 value;
+ 
+ 		reg = byt_gpio_reg(&vg->chip, i, BYT_CONF0_REG);
+ 		value = readl(reg);
+ 		if ((value & BYT_CONF0_RESTORE_MASK) !=
+ 		     vg->saved_context[i].conf0) {
+ 			value &= ~BYT_CONF0_RESTORE_MASK;
+ 			value |= vg->saved_context[i].conf0;
+ 			writel(value, reg);
+ 			dev_info(dev, "restored pin %d conf0 %#08x", i, value);
+ 		}
+ 
+ 		reg = byt_gpio_reg(&vg->chip, i, BYT_VAL_REG);
+ 		value = readl(reg);
+ 		if ((value & BYT_VAL_RESTORE_MASK) !=
+ 		     vg->saved_context[i].val) {
+ 			u32 v;
+ 
+ 			v = value & ~BYT_VAL_RESTORE_MASK;
+ 			v |= vg->saved_context[i].val;
+ 			if (v != value) {
+ 				writel(v, reg);
+ 				dev_dbg(dev, "restored pin %d val %#08x\n",
+ 					i, v);
+ 			}
+ 		}
+ 	}
+ 
+ 	return 0;
+ }
+ #endif
+ 
+ #ifdef CONFIG_PM
++>>>>>>> ec879f127228 (pinctrl: baytrail: Fix compilation warnings when !CONFIG_PM):drivers/pinctrl/intel/pinctrl-baytrail.c
  static int byt_gpio_runtime_suspend(struct device *dev)
  {
  	return 0;
@@@ -652,10 -706,12 +719,11 @@@ static int byt_gpio_runtime_resume(stru
  {
  	return 0;
  }
+ #endif
  
  static const struct dev_pm_ops byt_gpio_pm_ops = {
 -	SET_LATE_SYSTEM_SLEEP_PM_OPS(byt_gpio_suspend, byt_gpio_resume)
 -	SET_RUNTIME_PM_OPS(byt_gpio_runtime_suspend, byt_gpio_runtime_resume,
 -			   NULL)
 +	.runtime_suspend = byt_gpio_runtime_suspend,
 +	.runtime_resume = byt_gpio_runtime_resume,
  };
  
  static const struct acpi_device_id byt_gpio_acpi_match[] = {
* Unmerged path drivers/pinctrl/pinctrl-baytrail.c
