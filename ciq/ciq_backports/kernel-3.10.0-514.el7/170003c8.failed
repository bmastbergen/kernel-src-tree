iw_cxgb4: remove port mapper related code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Steve Wise <swise@opengridcomputing.com>
commit 170003c894d93332e1b4162aa06864ad83eb302d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/170003c8.failed

Now that most of the port mapper code been moved to iwcm, we can remove
it from iw_cxgb4.

	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 170003c894d93332e1b4162aa06864ad83eb302d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/cxgb4/cm.c
diff --cc drivers/infiniband/hw/cxgb4/cm.c
index 59084dc17b06,61518830ba11..000000000000
--- a/drivers/infiniband/hw/cxgb4/cm.c
+++ b/drivers/infiniband/hw/cxgb4/cm.c
@@@ -315,19 -299,21 +315,26 @@@ void _c4iw_free_ep(struct kref *kref
  	if (test_bit(QP_REFERENCED, &ep->com.flags))
  		deref_qp(ep);
  	if (test_bit(RELEASE_RESOURCES, &ep->com.flags)) {
++<<<<<<< HEAD
++=======
+ 		if (ep->com.remote_addr.ss_family == AF_INET6) {
+ 			struct sockaddr_in6 *sin6 =
+ 					(struct sockaddr_in6 *)
+ 					&ep->com.local_addr;
+ 
+ 			cxgb4_clip_release(
+ 					ep->com.dev->rdev.lldi.ports[0],
+ 					(const u32 *)&sin6->sin6_addr.s6_addr,
+ 					1);
+ 		}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  		remove_handle(ep->com.dev, &ep->com.dev->hwtid_idr, ep->hwtid);
  		cxgb4_remove_tid(ep->com.dev->rdev.lldi.tids, 0, ep->hwtid);
  		dst_release(ep->dst);
  		cxgb4_l2t_release(ep->l2t);
 +		if (ep->mpa_skb)
 +			kfree_skb(ep->mpa_skb);
  	}
- 	if (test_bit(RELEASE_MAPINFO, &ep->com.flags)) {
- 		print_addr(&ep->com, __func__, "remove_mapinfo/mapping");
- 		iwpm_remove_mapinfo(&ep->com.local_addr,
- 				    &ep->com.mapped_local_addr);
- 		iwpm_remove_mapping(&ep->com.local_addr, RDMA_NL_C4IW);
- 	}
  	kfree(ep);
  }
  
@@@ -461,6 -447,12 +468,15 @@@ static void act_open_req_arp_failure(vo
  	kfree_skb(skb);
  	connect_reply_upcall(ep, -EHOSTUNREACH);
  	state_set(&ep->com, DEAD);
++<<<<<<< HEAD
++=======
+ 	if (ep->com.remote_addr.ss_family == AF_INET6) {
+ 		struct sockaddr_in6 *sin6 =
+ 			(struct sockaddr_in6 *)&ep->com.local_addr;
+ 		cxgb4_clip_release(ep->com.dev->rdev.lldi.ports[0],
+ 				   (const u32 *)&sin6->sin6_addr.s6_addr, 1);
+ 	}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  	remove_handle(ep->com.dev, &ep->com.dev->atid_idr, ep->atid);
  	cxgb4_free_atid(ep->com.dev->rdev.lldi.tids, ep->atid);
  	dst_release(ep->dst);
@@@ -649,22 -589,37 +617,48 @@@ static int send_connect(struct c4iw_ep 
  	u32 opt2;
  	unsigned int mtu_idx;
  	int wscale;
 -	int win, sizev4, sizev6, wrlen;
 +	int wrlen;
 +	int sizev4 = is_t4(ep->com.dev->rdev.lldi.adapter_type) ?
 +				sizeof(struct cpl_act_open_req) :
 +				sizeof(struct cpl_t5_act_open_req);
 +	int sizev6 = is_t4(ep->com.dev->rdev.lldi.adapter_type) ?
 +				sizeof(struct cpl_act_open_req6) :
 +				sizeof(struct cpl_t5_act_open_req6);
  	struct sockaddr_in *la = (struct sockaddr_in *)
- 				 &ep->com.mapped_local_addr;
+ 				 &ep->com.local_addr;
  	struct sockaddr_in *ra = (struct sockaddr_in *)
- 				 &ep->com.mapped_remote_addr;
+ 				 &ep->com.remote_addr;
  	struct sockaddr_in6 *la6 = (struct sockaddr_in6 *)
- 				   &ep->com.mapped_local_addr;
+ 				   &ep->com.local_addr;
  	struct sockaddr_in6 *ra6 = (struct sockaddr_in6 *)
++<<<<<<< HEAD
 +				   &ep->com.mapped_remote_addr;
 +	int win;
++=======
+ 				   &ep->com.remote_addr;
+ 	int ret;
+ 	enum chip_type adapter_type = ep->com.dev->rdev.lldi.adapter_type;
+ 	u32 isn = (prandom_u32() & ~7UL) - 1;
+ 
+ 	switch (CHELSIO_CHIP_VERSION(adapter_type)) {
+ 	case CHELSIO_T4:
+ 		sizev4 = sizeof(struct cpl_act_open_req);
+ 		sizev6 = sizeof(struct cpl_act_open_req6);
+ 		break;
+ 	case CHELSIO_T5:
+ 		sizev4 = sizeof(struct cpl_t5_act_open_req);
+ 		sizev6 = sizeof(struct cpl_t5_act_open_req6);
+ 		break;
+ 	case CHELSIO_T6:
+ 		sizev4 = sizeof(struct cpl_t6_act_open_req);
+ 		sizev6 = sizeof(struct cpl_t6_act_open_req6);
+ 		break;
+ 	default:
+ 		pr_err("T%d Chip is not supported\n",
+ 		       CHELSIO_CHIP_VERSION(adapter_type));
+ 		return -EINVAL;
+ 	}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  
  	wrlen = (ep->com.remote_addr.ss_family == AF_INET) ?
  			roundup(sizev4, 16) :
@@@ -2093,13 -2053,12 +2087,13 @@@ static int act_open_rpl(struct c4iw_de
  	struct sockaddr_in *ra;
  	struct sockaddr_in6 *la6;
  	struct sockaddr_in6 *ra6;
 +	int ret = 0;
  
  	ep = lookup_atid(t, atid);
- 	la = (struct sockaddr_in *)&ep->com.mapped_local_addr;
- 	ra = (struct sockaddr_in *)&ep->com.mapped_remote_addr;
- 	la6 = (struct sockaddr_in6 *)&ep->com.mapped_local_addr;
- 	ra6 = (struct sockaddr_in6 *)&ep->com.mapped_remote_addr;
+ 	la = (struct sockaddr_in *)&ep->com.local_addr;
+ 	ra = (struct sockaddr_in *)&ep->com.remote_addr;
+ 	la6 = (struct sockaddr_in6 *)&ep->com.local_addr;
+ 	ra6 = (struct sockaddr_in6 *)&ep->com.remote_addr;
  
  	PDBG("%s ep %p atid %u status %u errno %d\n", __func__, ep, atid,
  	     status, status2errno(status));
@@@ -2139,6 -2097,15 +2133,18 @@@
  	case CPL_ERR_CONN_EXIST:
  		if (ep->retry_count++ < ACT_OPEN_RETRY_COUNT) {
  			set_bit(ACT_RETRY_INUSE, &ep->com.history);
++<<<<<<< HEAD
++=======
+ 			if (ep->com.remote_addr.ss_family == AF_INET6) {
+ 				struct sockaddr_in6 *sin6 =
+ 						(struct sockaddr_in6 *)
+ 						&ep->com.local_addr;
+ 				cxgb4_clip_release(
+ 						ep->com.dev->rdev.lldi.ports[0],
+ 						(const u32 *)
+ 						&sin6->sin6_addr.s6_addr, 1);
+ 			}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  			remove_handle(ep->com.dev, &ep->com.dev->atid_idr,
  					atid);
  			cxgb4_free_atid(t, atid);
@@@ -2167,6 -2133,12 +2173,15 @@@ fail
  	connect_reply_upcall(ep, status2errno(status));
  	state_set(&ep->com, DEAD);
  
++<<<<<<< HEAD
++=======
+ 	if (ep->com.remote_addr.ss_family == AF_INET6) {
+ 		struct sockaddr_in6 *sin6 =
+ 			(struct sockaddr_in6 *)&ep->com.local_addr;
+ 		cxgb4_clip_release(ep->com.dev->rdev.lldi.ports[0],
+ 				   (const u32 *)&sin6->sin6_addr.s6_addr, 1);
+ 	}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  	if (status && act_open_has_tid(status))
  		cxgb4_remove_tid(ep->com.dev->rdev.lldi.tids, 0, GET_TID(rpl));
  
@@@ -2448,9 -2424,7 +2454,13 @@@ static int pass_accept_req(struct c4iw_
  		sin->sin_port = peer_port;
  		sin->sin_addr.s_addr = *(__be32 *)peer_ip;
  	} else {
++<<<<<<< HEAD
 +		struct sockaddr_in6 *sin6 = (struct sockaddr_in6 *)
 +			&child_ep->com.mapped_local_addr;
 +
++=======
+ 		sin6 = (struct sockaddr_in6 *)&child_ep->com.local_addr;
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  		sin6->sin6_family = PF_INET6;
  		sin6->sin6_port = local_port;
  		memcpy(sin6->sin6_addr.s6_addr, local_ip, 16);
@@@ -2484,6 -2455,11 +2491,14 @@@
  	insert_handle(dev, &dev->hwtid_idr, child_ep, child_ep->hwtid);
  	accept_cr(child_ep, skb, req);
  	set_bit(PASS_ACCEPT_REQ, &child_ep->com.history);
++<<<<<<< HEAD
++=======
+ 	if (iptype == 6) {
+ 		sin6 = (struct sockaddr_in6 *)&child_ep->com.local_addr;
+ 		cxgb4_clip_get(child_ep->com.dev->rdev.lldi.ports[0],
+ 			       (const u32 *)&sin6->sin6_addr.s6_addr, 1);
+ 	}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  	goto out;
  reject:
  	reject_cr(dev, hwtid, skb);
@@@ -2725,6 -2696,15 +2740,18 @@@ out
  	if (release)
  		release_ep_resources(ep);
  	else if (ep->retry_with_mpa_v1) {
++<<<<<<< HEAD
++=======
+ 		if (ep->com.remote_addr.ss_family == AF_INET6) {
+ 			struct sockaddr_in6 *sin6 =
+ 					(struct sockaddr_in6 *)
+ 					&ep->com.local_addr;
+ 			cxgb4_clip_release(
+ 					ep->com.dev->rdev.lldi.ports[0],
+ 					(const u32 *)&sin6->sin6_addr.s6_addr,
+ 					1);
+ 		}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  		remove_handle(ep->com.dev, &ep->com.dev->hwtid_idr, ep->hwtid);
  		cxgb4_remove_tid(ep->com.dev->rdev.lldi.tids, 0, ep->hwtid);
  		dst_release(ep->dst);
@@@ -3221,8 -3170,14 +3215,8 @@@ static int create_server6(struct c4iw_d
  {
  	int err;
  	struct sockaddr_in6 *sin6 = (struct sockaddr_in6 *)
- 				    &ep->com.mapped_local_addr;
+ 				    &ep->com.local_addr;
  
 -	if (ipv6_addr_type(&sin6->sin6_addr) != IPV6_ADDR_ANY) {
 -		err = cxgb4_clip_get(ep->com.dev->rdev.lldi.ports[0],
 -				     (const u32 *)&sin6->sin6_addr.s6_addr, 1);
 -		if (err)
 -			return err;
 -	}
  	c4iw_init_wr_wait(&ep->com.wr_wait);
  	err = cxgb4_create_server6(ep->com.dev->rdev.lldi.ports[0],
  				   ep->stid, &sin6->sin6_addr,
@@@ -3295,11 -3254,11 +3286,11 @@@ int c4iw_create_listen(struct iw_cm_id 
  		goto fail1;
  	}
  	PDBG("%s ep %p\n", __func__, ep);
 -	cm_id->add_ref(cm_id);
  	ep->com.cm_id = cm_id;
 +	ref_cm_id(&ep->com);
  	ep->com.dev = dev;
  	ep->backlog = backlog;
- 	memcpy(&ep->com.local_addr, &cm_id->local_addr,
+ 	memcpy(&ep->com.local_addr, &cm_id->m_local_addr,
  	       sizeof(ep->com.local_addr));
  
  	/*
@@@ -3394,6 -3326,9 +3357,12 @@@ int c4iw_destroy_listen(struct iw_cm_i
  			goto done;
  		err = c4iw_wait_for_reply(&ep->com.dev->rdev, &ep->com.wr_wait,
  					  0, 0, __func__);
++<<<<<<< HEAD
++=======
+ 		sin6 = (struct sockaddr_in6 *)&ep->com.local_addr;
+ 		cxgb4_clip_release(ep->com.dev->rdev.lldi.ports[0],
+ 				   (const u32 *)&sin6->sin6_addr.s6_addr, 1);
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  	}
  	remove_handle(ep->com.dev, &ep->com.dev->stid_idr, ep->stid);
  	cxgb4_free_stid(ep->com.dev->rdev.lldi.tids, ep->stid,
@@@ -3539,6 -3448,12 +3508,15 @@@ static void active_ofld_conn_reply(stru
  	mutex_unlock(&dev->rdev.stats.lock);
  	connect_reply_upcall(ep, status2errno(req->retval));
  	state_set(&ep->com, DEAD);
++<<<<<<< HEAD
++=======
+ 	if (ep->com.remote_addr.ss_family == AF_INET6) {
+ 		struct sockaddr_in6 *sin6 =
+ 			(struct sockaddr_in6 *)&ep->com.local_addr;
+ 		cxgb4_clip_release(ep->com.dev->rdev.lldi.ports[0],
+ 				   (const u32 *)&sin6->sin6_addr.s6_addr, 1);
+ 	}
++>>>>>>> 170003c894d9 (iw_cxgb4: remove port mapper related code)
  	remove_handle(dev, &dev->atid_idr, atid);
  	cxgb4_free_atid(dev->rdev.lldi.tids, atid);
  	dst_release(ep->dst);
* Unmerged path drivers/infiniband/hw/cxgb4/cm.c
diff --git a/drivers/infiniband/hw/cxgb4/device.c b/drivers/infiniband/hw/cxgb4/device.c
index b6d8b75ac86a..3a22d43279e5 100644
--- a/drivers/infiniband/hw/cxgb4/device.c
+++ b/drivers/infiniband/hw/cxgb4/device.c
@@ -87,17 +87,6 @@ struct c4iw_debugfs_data {
 	int pos;
 };
 
-/* registered cxgb4 netlink callbacks */
-static struct ibnl_client_cbs c4iw_nl_cb_table[] = {
-	[RDMA_NL_IWPM_REG_PID] = {.dump = iwpm_register_pid_cb},
-	[RDMA_NL_IWPM_ADD_MAPPING] = {.dump = iwpm_add_mapping_cb},
-	[RDMA_NL_IWPM_QUERY_MAPPING] = {.dump = iwpm_add_and_query_mapping_cb},
-	[RDMA_NL_IWPM_HANDLE_ERR] = {.dump = iwpm_mapping_error_cb},
-	[RDMA_NL_IWPM_REMOTE_INFO] = {.dump = iwpm_remote_info_cb},
-	[RDMA_NL_IWPM_MAPINFO] = {.dump = iwpm_mapping_info_cb},
-	[RDMA_NL_IWPM_MAPINFO_NUM] = {.dump = iwpm_ack_mapping_info_cb}
-};
-
 static int count_idrs(int id, void *p, void *data)
 {
 	int *countp = data;
@@ -242,13 +231,13 @@ static int dump_qp(int id, void *p, void *data)
 	if (qp->ep) {
 		if (qp->ep->com.local_addr.ss_family == AF_INET) {
 			struct sockaddr_in *lsin = (struct sockaddr_in *)
-				&qp->ep->com.local_addr;
+				&qp->ep->com.cm_id->local_addr;
 			struct sockaddr_in *rsin = (struct sockaddr_in *)
-				&qp->ep->com.remote_addr;
+				&qp->ep->com.cm_id->remote_addr;
 			struct sockaddr_in *mapped_lsin = (struct sockaddr_in *)
-				&qp->ep->com.mapped_local_addr;
+				&qp->ep->com.cm_id->m_local_addr;
 			struct sockaddr_in *mapped_rsin = (struct sockaddr_in *)
-				&qp->ep->com.mapped_remote_addr;
+				&qp->ep->com.cm_id->m_remote_addr;
 
 			cc = snprintf(qpd->buf + qpd->pos, space,
 				      "rc qp sq id %u rq id %u state %u "
@@ -264,15 +253,15 @@ static int dump_qp(int id, void *p, void *data)
 				      ntohs(mapped_rsin->sin_port));
 		} else {
 			struct sockaddr_in6 *lsin6 = (struct sockaddr_in6 *)
-				&qp->ep->com.local_addr;
+				&qp->ep->com.cm_id->local_addr;
 			struct sockaddr_in6 *rsin6 = (struct sockaddr_in6 *)
-				&qp->ep->com.remote_addr;
+				&qp->ep->com.cm_id->remote_addr;
 			struct sockaddr_in6 *mapped_lsin6 =
 				(struct sockaddr_in6 *)
-				&qp->ep->com.mapped_local_addr;
+				&qp->ep->com.cm_id->m_local_addr;
 			struct sockaddr_in6 *mapped_rsin6 =
 				(struct sockaddr_in6 *)
-				&qp->ep->com.mapped_remote_addr;
+				&qp->ep->com.cm_id->m_remote_addr;
 
 			cc = snprintf(qpd->buf + qpd->pos, space,
 				      "rc qp sq id %u rq id %u state %u "
@@ -551,13 +540,13 @@ static int dump_ep(int id, void *p, void *data)
 
 	if (ep->com.local_addr.ss_family == AF_INET) {
 		struct sockaddr_in *lsin = (struct sockaddr_in *)
-			&ep->com.local_addr;
+			&ep->com.cm_id->local_addr;
 		struct sockaddr_in *rsin = (struct sockaddr_in *)
-			&ep->com.remote_addr;
+			&ep->com.cm_id->remote_addr;
 		struct sockaddr_in *mapped_lsin = (struct sockaddr_in *)
-			&ep->com.mapped_local_addr;
+			&ep->com.cm_id->m_local_addr;
 		struct sockaddr_in *mapped_rsin = (struct sockaddr_in *)
-			&ep->com.mapped_remote_addr;
+			&ep->com.cm_id->m_remote_addr;
 
 		cc = snprintf(epd->buf + epd->pos, space,
 			      "ep %p cm_id %p qp %p state %d flags 0x%lx "
@@ -575,13 +564,13 @@ static int dump_ep(int id, void *p, void *data)
 			      ntohs(mapped_rsin->sin_port));
 	} else {
 		struct sockaddr_in6 *lsin6 = (struct sockaddr_in6 *)
-			&ep->com.local_addr;
+			&ep->com.cm_id->local_addr;
 		struct sockaddr_in6 *rsin6 = (struct sockaddr_in6 *)
-			&ep->com.remote_addr;
+			&ep->com.cm_id->remote_addr;
 		struct sockaddr_in6 *mapped_lsin6 = (struct sockaddr_in6 *)
-			&ep->com.mapped_local_addr;
+			&ep->com.cm_id->m_local_addr;
 		struct sockaddr_in6 *mapped_rsin6 = (struct sockaddr_in6 *)
-			&ep->com.mapped_remote_addr;
+			&ep->com.cm_id->m_remote_addr;
 
 		cc = snprintf(epd->buf + epd->pos, space,
 			      "ep %p cm_id %p qp %p state %d flags 0x%lx "
@@ -616,9 +605,9 @@ static int dump_listen_ep(int id, void *p, void *data)
 
 	if (ep->com.local_addr.ss_family == AF_INET) {
 		struct sockaddr_in *lsin = (struct sockaddr_in *)
-			&ep->com.local_addr;
+			&ep->com.cm_id->local_addr;
 		struct sockaddr_in *mapped_lsin = (struct sockaddr_in *)
-			&ep->com.mapped_local_addr;
+			&ep->com.cm_id->m_local_addr;
 
 		cc = snprintf(epd->buf + epd->pos, space,
 			      "ep %p cm_id %p state %d flags 0x%lx stid %d "
@@ -629,9 +618,9 @@ static int dump_listen_ep(int id, void *p, void *data)
 			      ntohs(mapped_lsin->sin_port));
 	} else {
 		struct sockaddr_in6 *lsin6 = (struct sockaddr_in6 *)
-			&ep->com.local_addr;
+			&ep->com.cm_id->local_addr;
 		struct sockaddr_in6 *mapped_lsin6 = (struct sockaddr_in6 *)
-			&ep->com.mapped_local_addr;
+			&ep->com.cm_id->m_local_addr;
 
 		cc = snprintf(epd->buf + epd->pos, space,
 			      "ep %p cm_id %p state %d flags 0x%lx stid %d "
@@ -1528,20 +1517,6 @@ static int __init c4iw_init_module(void)
 		printk(KERN_WARNING MOD
 		       "could not create debugfs entry, continuing\n");
 
-	if (ibnl_add_client(RDMA_NL_C4IW, RDMA_NL_IWPM_NUM_OPS,
-			    c4iw_nl_cb_table))
-		pr_err("%s[%u]: Failed to add netlink callback\n"
-		       , __func__, __LINE__);
-
-	err = iwpm_init(RDMA_NL_C4IW);
-	if (err) {
-		pr_err("port mapper initialization failed with %d\n", err);
-		ibnl_remove_client(RDMA_NL_C4IW);
-		c4iw_cm_term();
-		debugfs_remove_recursive(c4iw_debugfs_root);
-		return err;
-	}
-
 	cxgb4_register_uld(CXGB4_ULD_RDMA, &c4iw_uld_info);
 
 	return 0;
@@ -1559,8 +1534,6 @@ static void __exit c4iw_exit_module(void)
 	}
 	mutex_unlock(&dev_mutex);
 	cxgb4_unregister_uld(CXGB4_ULD_RDMA);
-	iwpm_exit(RDMA_NL_C4IW);
-	ibnl_remove_client(RDMA_NL_C4IW);
 	c4iw_cm_term();
 	debugfs_remove_recursive(c4iw_debugfs_root);
 }
diff --git a/drivers/infiniband/hw/cxgb4/iw_cxgb4.h b/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
index 0b7096947a75..732eee8880eb 100644
--- a/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
+++ b/drivers/infiniband/hw/cxgb4/iw_cxgb4.h
@@ -765,7 +765,6 @@ enum c4iw_ep_flags {
 	CLOSE_SENT		= 3,
 	TIMEOUT                 = 4,
 	QP_REFERENCED           = 5,
-	RELEASE_MAPINFO		= 6,
 };
 
 enum c4iw_ep_history {
@@ -808,8 +807,6 @@ struct c4iw_ep_common {
 	struct mutex mutex;
 	struct sockaddr_storage local_addr;
 	struct sockaddr_storage remote_addr;
-	struct sockaddr_storage mapped_local_addr;
-	struct sockaddr_storage mapped_remote_addr;
 	struct c4iw_wr_wait wr_wait;
 	unsigned long flags;
 	unsigned long history;
@@ -861,45 +858,6 @@ struct c4iw_ep {
 	struct c4iw_ep_stats stats;
 };
 
-static inline void print_addr(struct c4iw_ep_common *epc, const char *func,
-			      const char *msg)
-{
-
-#define SINA(a) (&(((struct sockaddr_in *)(a))->sin_addr.s_addr))
-#define SINP(a) ntohs(((struct sockaddr_in *)(a))->sin_port)
-#define SIN6A(a) (&(((struct sockaddr_in6 *)(a))->sin6_addr))
-#define SIN6P(a) ntohs(((struct sockaddr_in6 *)(a))->sin6_port)
-
-	if (c4iw_debug) {
-		switch (epc->local_addr.ss_family) {
-		case AF_INET:
-			PDBG("%s %s %pI4:%u/%u <-> %pI4:%u/%u\n",
-			     func, msg, SINA(&epc->local_addr),
-			     SINP(&epc->local_addr),
-			     SINP(&epc->mapped_local_addr),
-			     SINA(&epc->remote_addr),
-			     SINP(&epc->remote_addr),
-			     SINP(&epc->mapped_remote_addr));
-			break;
-		case AF_INET6:
-			PDBG("%s %s %pI6:%u/%u <-> %pI6:%u/%u\n",
-			     func, msg, SIN6A(&epc->local_addr),
-			     SIN6P(&epc->local_addr),
-			     SIN6P(&epc->mapped_local_addr),
-			     SIN6A(&epc->remote_addr),
-			     SIN6P(&epc->remote_addr),
-			     SIN6P(&epc->mapped_remote_addr));
-			break;
-		default:
-			break;
-		}
-	}
-#undef SINA
-#undef SINP
-#undef SIN6A
-#undef SIN6P
-}
-
 static inline struct c4iw_ep *to_ep(struct iw_cm_id *cm_id)
 {
 	return cm_id->provider_data;
