net: rename sysfs symlinks on device name change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] rename sysfs symlinks on device name change (Ivan Vecera) [1333228]
Rebuild_FUZZ: 94.51%
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 5bb025fae53889cc99a21058c5dd369bf8cce820
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5bb025fa.failed

Currently, we don't rename the upper/lower_ifc symlinks in
/sys/class/net/*/ , which might result stale/duplicate links/names.

Fix this by adding netdev_adjacent_rename_links(dev, oldname) which renames
all the upper/lower interface's links to dev from the upper/lower_oldname
to the new name.

We don't need a rollback because only we control these symlinks and if we
fail to rename them - sysfs will anyway complain.

	Reported-by: Ding Tianhong <dingtianhong@huawei.com>
CC: Ding Tianhong <dingtianhong@huawei.com>
CC: "David S. Miller" <davem@davemloft.net>
CC: Eric Dumazet <edumazet@google.com>
CC: Nicolas Dichtel <nicolas.dichtel@6wind.com>
CC: Cong Wang <amwang@redhat.com>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5bb025fae53889cc99a21058c5dd369bf8cce820)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdevice.h
#	net/core/dev.c
diff --cc include/linux/netdevice.h
index eb7e9fa3e472,30f6513f3b4d..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -3272,18 -2936,14 +3272,22 @@@ struct net_device *netdev_master_upper_
  int netdev_upper_dev_link(struct net_device *dev, struct net_device *upper_dev);
  int netdev_master_upper_dev_link(struct net_device *dev,
  				 struct net_device *upper_dev);
 -int netdev_master_upper_dev_link_private(struct net_device *dev,
 -					 struct net_device *upper_dev,
 -					 void *private);
  void netdev_upper_dev_unlink(struct net_device *dev,
  			     struct net_device *upper_dev);
++<<<<<<< HEAD
 +void *netdev_lower_dev_get_private_rcu(struct net_device *dev,
 +				       struct net_device *lower_dev);
++=======
+ void netdev_adjacent_rename_links(struct net_device *dev, char *oldname);
++>>>>>>> 5bb025fae538 (net: rename sysfs symlinks on device name change)
  void *netdev_lower_dev_get_private(struct net_device *dev,
  				   struct net_device *lower_dev);
 +
 +/* RSS keys are 40 or 52 bytes long */
 +#define NETDEV_RSS_KEY_LEN 52
 +extern u8 netdev_rss_key[NETDEV_RSS_KEY_LEN] __read_mostly;
 +void netdev_rss_key_fill(void *buffer, size_t len);
 +
  int skb_checksum_help(struct sk_buff *skb);
  struct sk_buff *__skb_gso_segment(struct sk_buff *skb,
  				  netdev_features_t features, bool tx_path);
diff --cc net/core/dev.c
index ce5758e98847,995755733997..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -4808,6 -5002,40 +4811,43 @@@ void netdev_upper_dev_unlink(struct net
  }
  EXPORT_SYMBOL(netdev_upper_dev_unlink);
  
++<<<<<<< HEAD
++=======
+ void netdev_adjacent_rename_links(struct net_device *dev, char *oldname)
+ {
+ 	struct netdev_adjacent *iter;
+ 
+ 	list_for_each_entry(iter, &dev->adj_list.upper, list) {
+ 		netdev_adjacent_sysfs_del(iter->dev, oldname,
+ 					  &iter->dev->adj_list.lower);
+ 		netdev_adjacent_sysfs_add(iter->dev, dev,
+ 					  &iter->dev->adj_list.lower);
+ 	}
+ 
+ 	list_for_each_entry(iter, &dev->adj_list.lower, list) {
+ 		netdev_adjacent_sysfs_del(iter->dev, oldname,
+ 					  &iter->dev->adj_list.upper);
+ 		netdev_adjacent_sysfs_add(iter->dev, dev,
+ 					  &iter->dev->adj_list.upper);
+ 	}
+ }
+ 
+ void *netdev_lower_dev_get_private(struct net_device *dev,
+ 				   struct net_device *lower_dev)
+ {
+ 	struct netdev_adjacent *lower;
+ 
+ 	if (!lower_dev)
+ 		return NULL;
+ 	lower = __netdev_find_adj(dev, lower_dev, &dev->adj_list.lower);
+ 	if (!lower)
+ 		return NULL;
+ 
+ 	return lower->private;
+ }
+ EXPORT_SYMBOL(netdev_lower_dev_get_private);
+ 
++>>>>>>> 5bb025fae538 (net: rename sysfs symlinks on device name change)
  static void dev_change_rx_flags(struct net_device *dev, int flags)
  {
  	const struct net_device_ops *ops = dev->netdev_ops;
* Unmerged path include/linux/netdevice.h
* Unmerged path net/core/dev.c
