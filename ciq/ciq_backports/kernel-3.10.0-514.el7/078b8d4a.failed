perf tools: Add sort__has_comm variable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 078b8d4a406fa8ce4a3c9d5145c27be1ed2b1dfd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/078b8d4a.failed

The sort__has_comm variable is to check whether the comm sort key is
given.  This is necessary to support thread filtering in the TUI hists
browser later.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1457533253-21419-1-git-send-email-namhyung@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 078b8d4a406fa8ce4a3c9d5145c27be1ed2b1dfd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/sort.c
#	tools/perf/util/sort.h
diff --cc tools/perf/util/sort.c
index 8f36c1d6fd38,93fa136b0025..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -24,6 -25,9 +24,12 @@@ int		sort__need_collapse = 0
  int		sort__has_parent = 0;
  int		sort__has_sym = 0;
  int		sort__has_dso = 0;
++<<<<<<< HEAD
++=======
+ int		sort__has_socket = 0;
+ int		sort__has_thread = 0;
+ int		sort__has_comm = 0;
++>>>>>>> 078b8d4a406f (perf tools: Add sort__has_comm variable)
  enum sort_mode	sort__mode = SORT_MODE__NORMAL;
  
  /*
@@@ -1899,9 -2259,15 +1905,18 @@@ static int sort_dimension__add(const ch
  
  		} else if (sd->entry == &sort_dso) {
  			sort__has_dso = 1;
++<<<<<<< HEAD
++=======
+ 		} else if (sd->entry == &sort_socket) {
+ 			sort__has_socket = 1;
+ 		} else if (sd->entry == &sort_thread) {
+ 			sort__has_thread = 1;
+ 		} else if (sd->entry == &sort_comm) {
+ 			sort__has_comm = 1;
++>>>>>>> 078b8d4a406f (perf tools: Add sort__has_comm variable)
  		}
  
 -		return __sort_dimension__add(sd, list, level);
 +		return __sort_dimension__add(sd);
  	}
  
  	for (i = 0; i < ARRAY_SIZE(hpp_sort_dimensions); i++) {
diff --cc tools/perf/util/sort.h
index cb167fb3da85,3f4e35998119..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -32,8 -32,12 +32,14 @@@ extern const char default_sort_order[]
  extern regex_t ignore_callees_regex;
  extern int have_ignore_callees;
  extern int sort__need_collapse;
 -extern int sort__has_dso;
  extern int sort__has_parent;
  extern int sort__has_sym;
++<<<<<<< HEAD
++=======
+ extern int sort__has_socket;
+ extern int sort__has_thread;
+ extern int sort__has_comm;
++>>>>>>> 078b8d4a406f (perf tools: Add sort__has_comm variable)
  extern enum sort_mode sort__mode;
  extern struct sort_entry sort_comm;
  extern struct sort_entry sort_dso;
* Unmerged path tools/perf/util/sort.c
* Unmerged path tools/perf/util/sort.h
