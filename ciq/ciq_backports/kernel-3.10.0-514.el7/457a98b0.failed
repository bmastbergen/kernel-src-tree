mm, x86: fix pte_page() crash in gup_pte_range()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hugh Dickins <hughd@google.com>
commit 457a98b0809fa6cde7aab8c314a59d99772b445e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/457a98b0.failed

Commit 3565fce3a659 ("mm, x86: get_user_pages() for dax mappings") has
moved up the pte_page(pte) in x86's fast gup_pte_range(), for no
discernible reason: put it back where it belongs, after the pte_flags
check and the pfn_valid cross-check.

That may be the cause of the NULL pointer dereference in
gup_pte_range(), seen when vfio called vaddr_get_pfn() when starting a
qemu-kvm based VM.

	Signed-off-by: Hugh Dickins <hughd@google.com>
	Reported-by: Michael Long <Harn-Solo@gmx.de>
	Tested-by: Michael Long <Harn-Solo@gmx.de>
	Acked-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 457a98b0809fa6cde7aab8c314a59d99772b445e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/mm/gup.c
diff --cc arch/x86/mm/gup.c
index 2ab183bfc9f4,d8a798d8bf50..000000000000
--- a/arch/x86/mm/gup.c
+++ b/arch/x86/mm/gup.c
@@@ -89,7 -102,14 +89,18 @@@ static noinline int gup_pte_range(pmd_
  			return 0;
  		}
  
++<<<<<<< HEAD
 +		if ((pte_flags(pte) & (mask | _PAGE_SPECIAL)) != mask) {
++=======
+ 		if (pte_devmap(pte)) {
+ 			pgmap = get_dev_pagemap(pte_pfn(pte), pgmap);
+ 			if (unlikely(!pgmap)) {
+ 				undo_dev_pagemap(nr, nr_start, pages);
+ 				pte_unmap(ptep);
+ 				return 0;
+ 			}
+ 		} else if ((pte_flags(pte) & (mask | _PAGE_SPECIAL)) != mask) {
++>>>>>>> 457a98b0809f (mm, x86: fix pte_page() crash in gup_pte_range())
  			pte_unmap(ptep);
  			return 0;
  		}
* Unmerged path arch/x86/mm/gup.c
