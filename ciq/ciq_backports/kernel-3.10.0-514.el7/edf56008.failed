mei: amthif: Do not compare bool to 0/1

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit edf5600870121f83a20157d102ad12211c226ee0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/edf56008.failed

Spotted by coccicheck:
drivers/misc/mei/amthif.c:479:5-26: WARNING: Comparison of bool to 0/1

	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit edf5600870121f83a20157d102ad12211c226ee0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/amthif.c
diff --cc drivers/misc/mei/amthif.c
index a11128c1997f,cd0403f09267..000000000000
--- a/drivers/misc/mei/amthif.c
+++ b/drivers/misc/mei/amthif.c
@@@ -600,17 -442,30 +600,37 @@@ int mei_amthif_irq_read(struct mei_devi
   */
  void mei_amthif_complete(struct mei_device *dev, struct mei_cl_cb *cb)
  {
++<<<<<<< HEAD
 +	if (dev->iamthif_canceled != 1) {
++=======
+ 
+ 	if (cb->fop_type == MEI_FOP_WRITE) {
+ 		if (!cb->status) {
+ 			dev->iamthif_stall_timer = MEI_IAMTHIF_STALL_TIMER;
+ 			mei_io_cb_free(cb);
+ 			return;
+ 		}
+ 		/*
+ 		 * in case of error enqueue the write cb to complete read list
+ 		 * so it can be propagated to the reader
+ 		 */
+ 		list_add_tail(&cb->list, &dev->amthif_rd_complete_list.list);
+ 		wake_up_interruptible(&dev->iamthif_cl.wait);
+ 		return;
+ 	}
+ 
+ 	if (!dev->iamthif_canceled) {
++>>>>>>> edf560087012 (mei: amthif: Do not compare bool to 0/1)
  		dev->iamthif_state = MEI_IAMTHIF_READ_COMPLETE;
  		dev->iamthif_stall_timer = 0;
 +		memcpy(cb->response_buffer.data,
 +				dev->iamthif_msg_buf,
 +				dev->iamthif_msg_buf_index);
  		list_add_tail(&cb->list, &dev->amthif_rd_complete_list.list);
 -		dev_dbg(dev->dev, "amthif read completed\n");
 +		dev_dbg(&dev->pdev->dev, "amthif read completed\n");
  		dev->iamthif_timer = jiffies;
 -		dev_dbg(dev->dev, "dev->iamthif_timer = %ld\n",
 -			dev->iamthif_timer);
 +		dev_dbg(&dev->pdev->dev, "dev->iamthif_timer = %ld\n",
 +				dev->iamthif_timer);
  	} else {
  		mei_amthif_run_next_cmd(dev);
  	}
* Unmerged path drivers/misc/mei/amthif.c
