IB/core: Fix dereference before check

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Matan Barak <matanb@mellanox.com>
commit 9506902b7be2d8ccc235c14ccaec7f07b2c7d520
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9506902b.failed

Sparse complains about dereference before check. Fixing this by
moving the check before the dereference.

Fixes: 200298326b27 ('IB/core: Validate route when we init ah')
	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 9506902b7be2d8ccc235c14ccaec7f07b2c7d520)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/addr.c
diff --cc drivers/infiniband/core/addr.c
index 746cdf56bc76,791cc98475bb..000000000000
--- a/drivers/infiniband/core/addr.c
+++ b/drivers/infiniband/core/addr.c
@@@ -426,6 -490,26 +426,29 @@@ err
  }
  EXPORT_SYMBOL(rdma_resolve_ip);
  
++<<<<<<< HEAD
++=======
+ int rdma_resolve_ip_route(struct sockaddr *src_addr,
+ 			  const struct sockaddr *dst_addr,
+ 			  struct rdma_dev_addr *addr)
+ {
+ 	struct sockaddr_storage ssrc_addr = {};
+ 	struct sockaddr *src_in = (struct sockaddr *)&ssrc_addr;
+ 
+ 	if (src_addr) {
+ 		if (src_addr->sa_family != dst_addr->sa_family)
+ 			return -EINVAL;
+ 
+ 		memcpy(src_in, src_addr, rdma_addr_size(src_addr));
+ 	} else {
+ 		src_in->sa_family = dst_addr->sa_family;
+ 	}
+ 
+ 	return addr_resolve(src_in, dst_addr, addr, false);
+ }
+ EXPORT_SYMBOL(rdma_resolve_ip_route);
+ 
++>>>>>>> 9506902b7be2 (IB/core: Fix dereference before check)
  void rdma_addr_cancel(struct rdma_dev_addr *addr)
  {
  	struct addr_req *req, *temp_req;
* Unmerged path drivers/infiniband/core/addr.c
