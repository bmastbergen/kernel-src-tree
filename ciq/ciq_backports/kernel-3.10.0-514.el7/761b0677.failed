mm: completely remove dumping per-cpu lists from show_mem()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] completely remove dumping per-cpu lists from show_mem() (Larry Woodman) [1285530]
Rebuild_FUZZ: 96.49%
commit-author Konstantin Khlebnikov <koct9i@gmail.com>
commit 761b06771adeeb734e9eebc6f70f916cb9e2f643
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/761b0677.failed

It seems nobody needs this.

	Signed-off-by: Konstantin Khlebnikov <koct9i@gmail.com>
	Cc: Michal Hocko <mhocko@suse.cz>
	Cc: David Rientjes <rientjes@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 761b06771adeeb734e9eebc6f70f916cb9e2f643)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mm.h
#	mm/page_alloc.c
diff --cc include/linux/mm.h
index c7c33f7729de,6571dd78e984..000000000000
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@@ -1042,7 -1126,6 +1042,10 @@@ extern void pagefault_out_of_memory(voi
   * various contexts.
   */
  #define SHOW_MEM_FILTER_NODES		(0x0001u)	/* disallowed nodes */
++<<<<<<< HEAD
 +#define SHOW_MEM_FILTER_PAGE_COUNT	(0x0002u)	/* page type count */
++=======
++>>>>>>> 761b06771ade (mm: completely remove dumping per-cpu lists from show_mem())
  
  extern void show_free_areas(unsigned int flags);
  extern bool skip_free_areas_node(unsigned int flags, int nid);
diff --cc mm/page_alloc.c
index 20d353397e7d,84466a4b1b36..000000000000
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@@ -3056,8 -3251,10 +3056,15 @@@ static void show_migration_types(unsign
   * Show free area list (used inside shift_scroll-lock stuff)
   * We also calculate the percentage fragmentation. We do this by counting the
   * memory on each free list with the exception of the first item on the list.
++<<<<<<< HEAD
 + * Suppresses nodes that are not allowed by current's cpuset if
 + * SHOW_MEM_FILTER_NODES is passed.
++=======
+  *
+  * Bits in @filter:
+  * SHOW_MEM_FILTER_NODES: suppress nodes that are not allowed by current's
+  *   cpuset.
++>>>>>>> 761b06771ade (mm: completely remove dumping per-cpu lists from show_mem())
   */
  void show_free_areas(unsigned int filter)
  {
@@@ -3067,18 -3265,9 +3074,24 @@@
  	for_each_populated_zone(zone) {
  		if (skip_free_areas_node(filter, zone_to_nid(zone)))
  			continue;
++<<<<<<< HEAD
 +		show_node(zone);
 +		printk("%s per-cpu:\n", zone->name);
 +
 +		for_each_online_cpu(cpu) {
 +			struct per_cpu_pageset *pageset;
 +
 +			pageset = per_cpu_ptr(zone->pageset, cpu);
 +
 +			printk("CPU %4d: hi:%5d, btch:%4d usd:%4d\n",
 +			       cpu, pageset->pcp.high,
 +			       pageset->pcp.batch, pageset->pcp.count);
 +		}
++=======
+ 
+ 		for_each_online_cpu(cpu)
+ 			free_pcp += per_cpu_ptr(zone->pageset, cpu)->pcp.count;
++>>>>>>> 761b06771ade (mm: completely remove dumping per-cpu lists from show_mem())
  	}
  
  	printk("active_anon:%lu inactive_anon:%lu isolated_anon:%lu\n"
* Unmerged path include/linux/mm.h
* Unmerged path mm/page_alloc.c
