drivers: replace dev->trans_start accesses with dev_trans_start

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [netdrv] ixgbe: replace dev->trans_start accesses with dev_trans_start (Ken Cox) [1274174]
Rebuild_FUZZ: 93.55%
commit-author Florian Westphal <fw@strlen.de>
commit 4d0e965732db6f7cce78e6b8f5d3073249004c3a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4d0e9657.failed

a trans_start struct member exists twice:
- in struct net_device (legacy)
- in struct netdev_queue

Instead of open-coding dev->trans_start usage to obtain the current
trans_start value, use dev_trans_start() instead.

This is not exactly the same, as dev_trans_start also considers
the trans_start values of the netdev queues owned by the device
and provides the most recent one.

For legacy devices this doesn't matter as dev_trans_start can cope
with netdev trans_start values of 0 (they are ignored).

This is a prerequisite to eventual removal of dev->trans_start.

	Cc: linux-rdma@vger.kernel.org
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4d0e965732db6f7cce78e6b8f5d3073249004c3a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/microchip/encx24j600.c
#	drivers/net/ethernet/qualcomm/qca_spi.c
#	drivers/staging/rtl8192e/rtllib_softmac.c
#	drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.c
diff --cc drivers/staging/rtl8192e/rtllib_softmac.c
index 4feecec8609c,62154e3f4463..000000000000
--- a/drivers/staging/rtl8192e/rtllib_softmac.c
+++ b/drivers/staging/rtl8192e/rtllib_softmac.c
@@@ -1995,9 -1990,11 +1995,14 @@@ static short rtllib_sta_ps_sleep(struc
  	if (dtim & (RTLLIB_DTIM_UCAST & ieee->ps))
  		return 2;
  
++<<<<<<< HEAD
 +	if (!time_after(jiffies, ieee->dev->trans_start + MSECS(timeout)))
++=======
+ 	if (!time_after(jiffies,
+ 			dev_trans_start(ieee->dev) + msecs_to_jiffies(timeout)))
++>>>>>>> 4d0e965732db (drivers: replace dev->trans_start accesses with dev_trans_start)
  		return 0;
 -	if (!time_after(jiffies,
 -			ieee->last_rx_ps_time + msecs_to_jiffies(timeout)))
 +	if (!time_after(jiffies, ieee->last_rx_ps_time + MSECS(timeout)))
  		return 0;
  	if ((ieee->softmac_features & IEEE_SOFTMAC_SINGLE_QUEUE) &&
  	    (ieee->mgmt_queue_tail != ieee->mgmt_queue_head))
diff --cc drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.c
index 454f8895d211,de714501c996..000000000000
--- a/drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.c
+++ b/drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.c
@@@ -1744,10 -1736,12 +1744,15 @@@ short ieee80211_sta_ps_sleep(struct iee
  	if(dtim & ((IEEE80211_DTIM_UCAST | IEEE80211_DTIM_MBCAST)& ieee->ps))
  		return 2;
  
++<<<<<<< HEAD
 +	if(!time_after(jiffies, ieee->dev->trans_start + MSECS(timeout)))
++=======
+ 	if(!time_after(jiffies,
+ 		       dev_trans_start(ieee->dev) + msecs_to_jiffies(timeout)))
++>>>>>>> 4d0e965732db (drivers: replace dev->trans_start accesses with dev_trans_start)
  		return 0;
  
 -	if(!time_after(jiffies,
 -		       ieee->last_rx_ps_time + msecs_to_jiffies(timeout)))
 +	if(!time_after(jiffies, ieee->last_rx_ps_time + MSECS(timeout)))
  		return 0;
  
  	if((ieee->softmac_features & IEEE_SOFTMAC_SINGLE_QUEUE ) &&
* Unmerged path drivers/net/ethernet/microchip/encx24j600.c
* Unmerged path drivers/net/ethernet/qualcomm/qca_spi.c
diff --git a/drivers/infiniband/ulp/ipoib/ipoib_main.c b/drivers/infiniband/ulp/ipoib/ipoib_main.c
index 08ade102cd23..0d76b39303f3 100644
--- a/drivers/infiniband/ulp/ipoib/ipoib_main.c
+++ b/drivers/infiniband/ulp/ipoib/ipoib_main.c
@@ -808,7 +808,7 @@ static void ipoib_timeout(struct net_device *dev)
 	struct ipoib_dev_priv *priv = netdev_priv(dev);
 
 	ipoib_warn(priv, "transmit timeout: latency %d msecs\n",
-		   jiffies_to_msecs(jiffies - dev->trans_start));
+		   jiffies_to_msecs(jiffies - dev_trans_start(dev)));
 	ipoib_warn(priv, "queue stopped %d, tx_head %u, tx_tail %u\n",
 		   netif_queue_stopped(dev),
 		   priv->tx_head, priv->tx_tail);
diff --git a/drivers/net/ethernet/intel/e1000e/netdev.c b/drivers/net/ethernet/intel/e1000e/netdev.c
index 8215e57bfeaf..3788d2b9166a 100644
--- a/drivers/net/ethernet/intel/e1000e/netdev.c
+++ b/drivers/net/ethernet/intel/e1000e/netdev.c
@@ -242,7 +242,7 @@ static void e1000e_dump(struct e1000_adapter *adapter)
 		dev_info(&adapter->pdev->dev, "Net device Info\n");
 		pr_info("Device Name     state            trans_start      last_rx\n");
 		pr_info("%-15s %016lX %016lX %016lX\n", netdev->name,
-			netdev->state, netdev->trans_start, netdev->last_rx);
+			netdev->state, dev_trans_start(netdev), netdev->last_rx);
 	}
 
 	/* Print Registers */
diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 8e35a37c7917..13eb9aeeaa09 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -382,7 +382,7 @@ static void igb_dump(struct igb_adapter *adapter)
 		dev_info(&adapter->pdev->dev, "Net device Info\n");
 		pr_info("Device Name     state            trans_start      last_rx\n");
 		pr_info("%-15s %016lX %016lX %016lX\n", netdev->name,
-			netdev->state, netdev->trans_start, netdev->last_rx);
+			netdev->state, dev_trans_start(netdev), netdev->last_rx);
 	}
 
 	/* Print Registers */
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index 7c13b8822850..7f02b5fd208f 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -607,7 +607,7 @@ static void ixgbe_dump(struct ixgbe_adapter *adapter)
 		pr_info("%-15s %016lX %016lX %016lX\n",
 			netdev->name,
 			netdev->state,
-			netdev->trans_start,
+			dev_trans_start(netdev),
 			netdev->last_rx);
 	}
 
* Unmerged path drivers/net/ethernet/microchip/encx24j600.c
* Unmerged path drivers/net/ethernet/qualcomm/qca_spi.c
diff --git a/drivers/net/fjes/fjes_main.c b/drivers/net/fjes/fjes_main.c
index 785ed235c173..9867fc2ded3c 100644
--- a/drivers/net/fjes/fjes_main.c
+++ b/drivers/net/fjes/fjes_main.c
@@ -471,7 +471,7 @@ static void fjes_tx_stall_task(struct work_struct *work)
 	int i;
 
 	if (((long)jiffies -
-		(long)(netdev->trans_start)) > FJES_TX_TX_STALL_TIMEOUT) {
+		dev_trans_start(netdev)) > FJES_TX_TX_STALL_TIMEOUT) {
 		netif_wake_queue(netdev);
 		return;
 	}
diff --git a/drivers/net/hamradio/mkiss.c b/drivers/net/hamradio/mkiss.c
index 8e01c457015b..f1782f58bef5 100644
--- a/drivers/net/hamradio/mkiss.c
+++ b/drivers/net/hamradio/mkiss.c
@@ -540,7 +540,7 @@ static netdev_tx_t ax_xmit(struct sk_buff *skb, struct net_device *dev)
 		 * May be we must check transmitter timeout here ?
 		 *      14 Oct 1994 Dmitry Gorodchanin.
 		 */
-		if (time_before(jiffies, dev->trans_start + 20 * HZ)) {
+		if (time_before(jiffies, dev_trans_start(dev) + 20 * HZ)) {
 			/* 20 sec timeout not reached */
 			return NETDEV_TX_BUSY;
 		}
* Unmerged path drivers/staging/rtl8192e/rtllib_softmac.c
* Unmerged path drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.c
