x86/jump-label: Use best default nops for inital jump label calls

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] revert "jump-label: Use best default nops for inital jump label calls" (Josh Poimboeuf) [1347232]
Rebuild_FUZZ: 90.37%
commit-author Steven Rostedt <srostedt@redhat.com>
commit c3c7f14a116c24d6fba185c95cd7454f3764f8a9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c3c7f14a.failed

As specified by H. Peter Anvin, the best nops for x86 without knowing
the running computer is:

32bit:
  0x3e, 0x8d, 0x74, 0x26, 0x00 also known as GENERIC_NOP5_ATOMIC

64bit:
  0x0f, 0x1f, 0x44, 0x00, 0x00  also known as P6_NOP5_ATOMIC

Currently the default nop that is used by jump label is:

 0xe9 0x00 0x00 0x00 0x00

Which is really a 5byte jump to the next position.

It's better to use a real nop than a jmp.

	Cc: H. Peter Anvin <hpa@linux.intel.com>
	Cc: Jason Baron <jbaron@redhat.com>
	Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
(cherry picked from commit c3c7f14a116c24d6fba185c95cd7454f3764f8a9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/jump_label.h
diff --cc arch/x86/include/asm/jump_label.h
index 029766958e69,64507f35800c..000000000000
--- a/arch/x86/include/asm/jump_label.h
+++ b/arch/x86/include/asm/jump_label.h
@@@ -13,8 -18,8 +18,13 @@@
  
  static __always_inline bool arch_static_branch(struct static_key *key)
  {
++<<<<<<< HEAD
 +	asm_volatile_goto("1:"
 +		STATIC_KEY_INITIAL_NOP
++=======
+ 	asm goto("1:"
+ 		".byte " __stringify(STATIC_KEY_INIT_NOP) "\n\t"
++>>>>>>> c3c7f14a116c (x86/jump-label: Use best default nops for inital jump label calls)
  		".pushsection __jump_table,  \"aw\" \n\t"
  		_ASM_ALIGN "\n\t"
  		_ASM_PTR "1b, %l[l_yes], %c0 \n\t"
* Unmerged path arch/x86/include/asm/jump_label.h
