ceph: don't invalidate page cache when inode is no longer used

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 5e804ac4824302efc3038e086cb21f2e93ab8900
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/5e804ac4.failed

ceph_check_caps() invalidate page cache when inode is not used
by any open file. This behaviour is not friendly for workload
that repeatly read files.

	Signed-off-by: Yan, Zheng <zyan@redhat.com>
(cherry picked from commit 5e804ac4824302efc3038e086cb21f2e93ab8900)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/caps.c
diff --cc fs/ceph/caps.c
index f05879a2377f,349315332040..000000000000
--- a/fs/ceph/caps.c
+++ b/fs/ceph/caps.c
@@@ -1633,11 -1652,11 +1633,19 @@@ retry_locked
  	 * If we fail, it's because pages are locked.... try again later.
  	 */
  	if ((!is_delayed || mdsc->stopping) &&
++<<<<<<< HEAD
 +	    ci->i_wrbuffer_ref == 0 &&               /* no dirty pages... */
 +	    inode->i_data.nrpages &&                 /* have cached pages */
 +	    (file_wanted == 0 ||                     /* no open files */
 +	     (revoking & (CEPH_CAP_FILE_CACHE|
 +			  CEPH_CAP_FILE_LAZYIO))) && /*  or revoking cache */
++=======
+ 	    !S_ISDIR(inode->i_mode) &&		/* ignore readdir cache */
+ 	    ci->i_wrbuffer_ref == 0 &&		/* no dirty pages... */
+ 	    inode->i_data.nrpages &&		/* have cached pages */
+ 	    (revoking & (CEPH_CAP_FILE_CACHE|
+ 			 CEPH_CAP_FILE_LAZYIO)) && /*  or revoking cache */
++>>>>>>> 5e804ac48243 (ceph: don't invalidate page cache when inode is no longer used)
  	    !tried_invalidate) {
  		dout("check_caps trying to invalidate on %p\n", inode);
  		if (try_nonblocking_invalidate(inode) < 0) {
* Unmerged path fs/ceph/caps.c
diff --git a/fs/ceph/mds_client.c b/fs/ceph/mds_client.c
index 7f21b9ae9c31..358ee0e81615 100644
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@ -1426,6 +1426,13 @@ static int trim_caps_cb(struct inode *inode, struct ceph_cap *cap, void *arg)
 		if ((used | wanted) & CEPH_CAP_ANY_WR)
 			goto out;
 	}
+	/* The inode has cached pages, but it's no longer used.
+	 * we can safely drop it */
+	if (wanted == 0 && used == CEPH_CAP_FILE_CACHE &&
+	    !(oissued & CEPH_CAP_FILE_CACHE)) {
+	  used = 0;
+	  oissued = 0;
+	}
 	if ((used | wanted) & ~oissued & mine)
 		goto out;   /* we need these caps */
 
@@ -1434,7 +1441,7 @@ static int trim_caps_cb(struct inode *inode, struct ceph_cap *cap, void *arg)
 		/* we aren't the only cap.. just remove us */
 		__ceph_remove_cap(cap, true);
 	} else {
-		/* try to drop referring dentries */
+		/* try dropping referring dentries */
 		spin_unlock(&ci->i_ceph_lock);
 		d_prune_aliases(inode);
 		dout("trim_caps_cb %p cap %p  pruned, count now %d\n",
