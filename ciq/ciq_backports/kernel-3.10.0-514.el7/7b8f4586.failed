nfsd: Add macro NFS_ACL_MASK for ACL

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kinglong Mee <kinglongmee@gmail.com>
commit 7b8f4586532f36c5541a15d072576e7e89a5df75
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7b8f4586.failed

	Signed-off-by: Kinglong Mee <kinglongmee@gmail.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 7b8f4586532f36c5541a15d072576e7e89a5df75)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs2acl.c
#	fs/nfsd/nfs3acl.c
diff --cc fs/nfsd/nfs2acl.c
index 233c3ddbe528,1580ea6fd64d..000000000000
--- a/fs/nfsd/nfs2acl.c
+++ b/fs/nfsd/nfs2acl.c
@@@ -41,32 -42,26 +41,38 @@@ static __be32 nfsacld_proc_getacl(struc
  	if (nfserr)
  		RETURN_STATUS(nfserr);
  
++<<<<<<< HEAD
 +	if (argp->mask & ~(NFS_ACL|NFS_ACLCNT|NFS_DFACL|NFS_DFACLCNT))
++=======
+ 	inode = d_inode(fh->fh_dentry);
+ 
+ 	if (argp->mask & ~NFS_ACL_MASK)
++>>>>>>> 7b8f4586532f (nfsd: Add macro NFS_ACL_MASK for ACL)
  		RETURN_STATUS(nfserr_inval);
  	resp->mask = argp->mask;
  
  	nfserr = fh_getattr(fh, &resp->stat);
  	if (nfserr)
- 		goto fail;
+ 		RETURN_STATUS(nfserr);
  
  	if (resp->mask & (NFS_ACL|NFS_ACLCNT)) {
 -		acl = get_acl(inode, ACL_TYPE_ACCESS);
 +		acl = nfsd_get_posix_acl(fh, ACL_TYPE_ACCESS);
 +		if (IS_ERR(acl)) {
 +			int err = PTR_ERR(acl);
 +
 +			if (err == -ENODATA || err == -EOPNOTSUPP)
 +				acl = NULL;
 +			else {
 +				nfserr = nfserrno(err);
 +				goto fail;
 +			}
 +		}
  		if (acl == NULL) {
  			/* Solaris returns the inode's minimum ACL. */
 +
 +			struct inode *inode = fh->fh_dentry->d_inode;
  			acl = posix_acl_from_mode(inode->i_mode, GFP_KERNEL);
  		}
 -		if (IS_ERR(acl)) {
 -			nfserr = nfserrno(PTR_ERR(acl));
 -			goto fail;
 -		}
  		resp->acl_access = acl;
  	}
  	if (resp->mask & (NFS_DFACL|NFS_DFACLCNT)) {
diff --cc fs/nfsd/nfs3acl.c
index 1e15ff187776,01df4cd7c753..000000000000
--- a/fs/nfsd/nfs3acl.c
+++ b/fs/nfsd/nfs3acl.c
@@@ -38,7 -39,9 +38,13 @@@ static __be32 nfsd3_proc_getacl(struct 
  	if (nfserr)
  		RETURN_STATUS(nfserr);
  
++<<<<<<< HEAD
 +	if (argp->mask & ~(NFS_ACL|NFS_ACLCNT|NFS_DFACL|NFS_DFACLCNT))
++=======
+ 	inode = d_inode(fh->fh_dentry);
+ 
+ 	if (argp->mask & ~NFS_ACL_MASK)
++>>>>>>> 7b8f4586532f (nfsd: Add macro NFS_ACL_MASK for ACL)
  		RETURN_STATUS(nfserr_inval);
  	resp->mask = argp->mask;
  
* Unmerged path fs/nfsd/nfs2acl.c
* Unmerged path fs/nfsd/nfs3acl.c
diff --git a/include/uapi/linux/nfsacl.h b/include/uapi/linux/nfsacl.h
index 9bb9771a107f..552726631162 100644
--- a/include/uapi/linux/nfsacl.h
+++ b/include/uapi/linux/nfsacl.h
@@ -22,6 +22,7 @@
 #define NFS_ACLCNT		0x0002
 #define NFS_DFACL		0x0004
 #define NFS_DFACLCNT		0x0008
+#define NFS_ACL_MASK		0x000f
 
 /* Flag for Default ACL entries */
 #define NFS_ACL_DEFAULT		0x1000
