net/mlx5: Introduce physical port TC/prio access functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [include] mlx5: Introduce physical port TC/prio access functions (kamal heib) [1275159 1296272 1296405 1298421 1298422 1298423 1298424 1298425]
Rebuild_FUZZ: 96.43%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 4f3961eeafe0aca8f6b0933899ef0d91f561352d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4f3961ee.failed

Add access functions to set and query a physical port TC groups
and prio parameters.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4f3961eeafe0aca8f6b0933899ef0d91f561352d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 3446b357315b,ec957e059de8..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -727,12 -727,14 +727,18 @@@ struct mlx5_ifc_cmd_hca_cap_bits 
  	u8         port_type[0x2];
  	u8         num_ports[0x8];
  
 -	u8         reserved_at_1bf[0x3];
 +	u8         reserved_20[0x3];
  	u8         log_max_msg[0x5];
++<<<<<<< HEAD
 +	u8         reserved_21[0x18];
++=======
+ 	u8         reserved_at_1c7[0x4];
+ 	u8         max_tc[0x4];
+ 	u8         reserved_at_1cf[0x10];
++>>>>>>> 4f3961eeafe0 (net/mlx5: Introduce physical port TC/prio access functions)
  
  	u8         stat_rate_support[0x10];
 -	u8         reserved_at_1ef[0xc];
 +	u8         reserved_22[0xc];
  	u8         cqe_version[0x4];
  
  	u8         compact_address_vector[0x1];
@@@ -7039,19 -7048,64 +7045,64 @@@ struct mlx5_ifc_modify_flow_table_in_bi
  	u8         modify_field_select[0x10];
  
  	u8         table_type[0x8];
 -	u8         reserved_at_88[0x18];
 +	u8         reserved_4[0x18];
  
 -	u8         reserved_at_a0[0x8];
 +	u8         reserved_5[0x8];
  	u8         table_id[0x18];
  
 -	u8         reserved_at_c0[0x4];
 +	u8         reserved_6[0x4];
  	u8         table_miss_mode[0x4];
 -	u8         reserved_at_c8[0x18];
 +	u8         reserved_7[0x18];
  
 -	u8         reserved_at_e0[0x8];
 +	u8         reserved_8[0x8];
  	u8         table_miss_id[0x18];
  
 -	u8         reserved_at_100[0x100];
 +	u8         reserved_9[0x100];
  };
  
+ struct mlx5_ifc_ets_tcn_config_reg_bits {
+ 	u8         g[0x1];
+ 	u8         b[0x1];
+ 	u8         r[0x1];
+ 	u8         reserved_at_3[0x9];
+ 	u8         group[0x4];
+ 	u8         reserved_at_10[0x9];
+ 	u8         bw_allocation[0x7];
+ 
+ 	u8         reserved_at_20[0xc];
+ 	u8         max_bw_units[0x4];
+ 	u8         reserved_at_30[0x8];
+ 	u8         max_bw_value[0x8];
+ };
+ 
+ struct mlx5_ifc_ets_global_config_reg_bits {
+ 	u8         reserved_at_0[0x2];
+ 	u8         r[0x1];
+ 	u8         reserved_at_3[0x1d];
+ 
+ 	u8         reserved_at_20[0xc];
+ 	u8         max_bw_units[0x4];
+ 	u8         reserved_at_30[0x8];
+ 	u8         max_bw_value[0x8];
+ };
+ 
+ struct mlx5_ifc_qetc_reg_bits {
+ 	u8                                         reserved_at_0[0x8];
+ 	u8                                         port_number[0x8];
+ 	u8                                         reserved_at_10[0x30];
+ 
+ 	struct mlx5_ifc_ets_tcn_config_reg_bits    tc_configuration[0x8];
+ 	struct mlx5_ifc_ets_global_config_reg_bits global_configuration;
+ };
+ 
+ struct mlx5_ifc_qtct_reg_bits {
+ 	u8         reserved_at_0[0x8];
+ 	u8         port_number[0x8];
+ 	u8         reserved_at_10[0xd];
+ 	u8         prio[0x3];
+ 
+ 	u8         reserved_at_20[0x1d];
+ 	u8         tclass[0x3];
+ };
+ 
  #endif /* MLX5_IFC_H */
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/port.c b/drivers/net/ethernet/mellanox/mlx5/core/port.c
index dae70500b6a9..569100d3f57b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/port.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/port.c
@@ -405,3 +405,79 @@ int mlx5_query_port_pfc(struct mlx5_core_dev *dev, u8 *pfc_en_tx, u8 *pfc_en_rx)
 	return 0;
 }
 EXPORT_SYMBOL_GPL(mlx5_query_port_pfc);
+
+int mlx5_max_tc(struct mlx5_core_dev *mdev)
+{
+	u8 num_tc = MLX5_CAP_GEN(mdev, max_tc) ? : 8;
+
+	return num_tc - 1;
+}
+
+int mlx5_set_port_prio_tc(struct mlx5_core_dev *mdev, u8 *prio_tc)
+{
+	u32 in[MLX5_ST_SZ_DW(qtct_reg)];
+	u32 out[MLX5_ST_SZ_DW(qtct_reg)];
+	int err;
+	int i;
+
+	memset(in, 0, sizeof(in));
+	for (i = 0; i < 8; i++) {
+		if (prio_tc[i] > mlx5_max_tc(mdev))
+			return -EINVAL;
+
+		MLX5_SET(qtct_reg, in, prio, i);
+		MLX5_SET(qtct_reg, in, tclass, prio_tc[i]);
+
+		err = mlx5_core_access_reg(mdev, in, sizeof(in), out,
+					   sizeof(out), MLX5_REG_QTCT, 0, 1);
+		if (err)
+			return err;
+	}
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(mlx5_set_port_prio_tc);
+
+static int mlx5_set_port_qetcr_reg(struct mlx5_core_dev *mdev, u32 *in,
+				   int inlen)
+{
+	u32 out[MLX5_ST_SZ_DW(qtct_reg)];
+
+	if (!MLX5_CAP_GEN(mdev, ets))
+		return -ENOTSUPP;
+
+	return mlx5_core_access_reg(mdev, in, inlen, out, sizeof(out),
+				    MLX5_REG_QETCR, 0, 1);
+}
+
+int mlx5_set_port_tc_group(struct mlx5_core_dev *mdev, u8 *tc_group)
+{
+	u32 in[MLX5_ST_SZ_DW(qetc_reg)];
+	int i;
+
+	memset(in, 0, sizeof(in));
+
+	for (i = 0; i <= mlx5_max_tc(mdev); i++) {
+		MLX5_SET(qetc_reg, in, tc_configuration[i].g, 1);
+		MLX5_SET(qetc_reg, in, tc_configuration[i].group, tc_group[i]);
+	}
+
+	return mlx5_set_port_qetcr_reg(mdev, in, sizeof(in));
+}
+EXPORT_SYMBOL_GPL(mlx5_set_port_tc_group);
+
+int mlx5_set_port_tc_bw_alloc(struct mlx5_core_dev *mdev, u8 *tc_bw)
+{
+	u32 in[MLX5_ST_SZ_DW(qetc_reg)];
+	int i;
+
+	memset(in, 0, sizeof(in));
+
+	for (i = 0; i <= mlx5_max_tc(mdev); i++) {
+		MLX5_SET(qetc_reg, in, tc_configuration[i].b, 1);
+		MLX5_SET(qetc_reg, in, tc_configuration[i].bw_allocation, tc_bw[i]);
+	}
+
+	return mlx5_set_port_qetcr_reg(mdev, in, sizeof(in));
+}
+EXPORT_SYMBOL_GPL(mlx5_set_port_tc_bw_alloc);
diff --git a/include/linux/mlx5/driver.h b/include/linux/mlx5/driver.h
index e9237412b2aa..7e2393e3c96b 100644
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@ -99,6 +99,8 @@ enum {
 };
 
 enum {
+	MLX5_REG_QETCR		 = 0x4005,
+	MLX5_REG_QTCT		 = 0x400a,
 	MLX5_REG_PCAP		 = 0x5001,
 	MLX5_REG_PMTU		 = 0x5003,
 	MLX5_REG_PTYS		 = 0x5004,
* Unmerged path include/linux/mlx5/mlx5_ifc.h
diff --git a/include/linux/mlx5/port.h b/include/linux/mlx5/port.h
index 4b3644caa936..0c67e699d017 100644
--- a/include/linux/mlx5/port.h
+++ b/include/linux/mlx5/port.h
@@ -70,4 +70,10 @@ int mlx5_set_port_pfc(struct mlx5_core_dev *dev, u8 pfc_en_tx, u8 pfc_en_rx);
 int mlx5_query_port_pfc(struct mlx5_core_dev *dev, u8 *pfc_en_tx,
 			u8 *pfc_en_rx);
 
+int mlx5_max_tc(struct mlx5_core_dev *mdev);
+
+int mlx5_set_port_prio_tc(struct mlx5_core_dev *mdev, u8 *prio_tc);
+int mlx5_set_port_tc_group(struct mlx5_core_dev *mdev, u8 *tc_group);
+int mlx5_set_port_tc_bw_alloc(struct mlx5_core_dev *mdev, u8 *tc_bw);
+
 #endif /* __MLX5_PORT_H__ */
