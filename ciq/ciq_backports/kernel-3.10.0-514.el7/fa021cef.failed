mmc: core: Simplify card drive strength mask

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] core: Simplify card drive strength mask (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 93.98%
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit fa021cef1af64cb4ba11c3c0910ef45085c58016
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fa021cef.failed

Card drive strength selection uses a callback to
which a mask of supported drive strengths is passed.
Currently, the bits are checked against the values
in the SD specifications. That is not necessary
because the callback will anyway match the mask
against a valid value. Simplify by taking the mask
as is but still ensuring that the default mandatory
value (type B) is always supported.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit fa021cef1af64cb4ba11c3c0910ef45085c58016)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/core/sd.c
#	drivers/mmc/core/sdio.c
diff --cc drivers/mmc/core/sd.c
index da5e61e128a5,9b72ea6b3177..000000000000
--- a/drivers/mmc/core/sd.c
+++ b/drivers/mmc/core/sd.c
@@@ -389,19 -387,9 +389,23 @@@ out
  static int sd_select_driver_type(struct mmc_card *card, u8 *status)
  {
  	int host_drv_type = SD_DRIVER_TYPE_B;
++<<<<<<< HEAD
 +	int card_drv_type = SD_DRIVER_TYPE_B;
 +	int drive_strength;
++=======
+ 	int card_drv_type, drive_strength, drv_type;
++>>>>>>> fa021cef1af6 (mmc: core: Simplify card drive strength mask)
  	int err;
  
 +	/*
 +	 * If the host doesn't support any of the Driver Types A,C or D,
 +	 * or there is no board specific handler then default Driver
 +	 * Type B is used.
 +	 */
 +	if (!(card->host->caps & (MMC_CAP_DRIVER_TYPE_A | MMC_CAP_DRIVER_TYPE_C
 +	    | MMC_CAP_DRIVER_TYPE_D)))
 +		return 0;
 +
  	if (!card->host->ops->select_drive_strength)
  		return 0;
  
diff --cc drivers/mmc/core/sdio.c
index d2f16e27144d,ef82f3d029e8..000000000000
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@@ -403,8 -403,7 +403,12 @@@ static unsigned char host_drive_to_sdio
  static void sdio_select_driver_type(struct mmc_card *card)
  {
  	int host_drv_type = SD_DRIVER_TYPE_B;
++<<<<<<< HEAD
 +	int card_drv_type = SD_DRIVER_TYPE_B;
 +	int drive_strength;
++=======
+ 	int card_drv_type, drive_strength, drv_type;
++>>>>>>> fa021cef1af6 (mmc: core: Simplify card drive strength mask)
  	unsigned char card_strength;
  	int err;
  
* Unmerged path drivers/mmc/core/sd.c
* Unmerged path drivers/mmc/core/sdio.c
