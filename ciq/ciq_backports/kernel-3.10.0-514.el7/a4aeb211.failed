ehci-platform: Add support for clks and phy passed through devicetree

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hans de Goede <hdegoede@redhat.com>
commit a4aeb2117571292f4e002c54b3f91e138722bf7a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a4aeb211.failed

Currently ehci-platform is only used in combination with devicetree when used
with some Via socs. By extending it to (optionally) get clks and a phy from
devicetree, and enabling / disabling those on power_on / off, it can be used
more generically. Specifically after this commit it can be used for the
ehci controller on Allwinner sunxi SoCs.

Since ehci-platform is intended to handle any generic enough non pci ehci
device, add a "usb-ehci" compatibility string.

There already is a usb-ehci device-tree bindings document, update this
with clks and phy bindings info.

Although actually quite generic so far the via,vt8500 compatibilty string
had its own bindings document. Somehow we even ended up with 2 of them. Since
these provide no extra information over the generic usb-ehci documentation,
this patch removes them.

The ehci-ppc-of.c driver also claims the usb-ehci compatibility string,
even though it mostly is ibm,usb-ehci-440epx specific. ehci-platform.c is
not needed on ppc platforms, so add a !PPC_OF dependency to it to avoid
2 drivers claiming the same compatibility string getting build on ppc.

	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a4aeb2117571292f4e002c54b3f91e138722bf7a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/ehci-platform.c
diff --cc drivers/usb/host/ehci-platform.c
index 79f7e9051be3,5ebd0b75b58e..000000000000
--- a/drivers/usb/host/ehci-platform.c
+++ b/drivers/usb/host/ehci-platform.c
@@@ -76,25 -140,23 +140,40 @@@ static int ehci_platform_probe(struct p
  {
  	struct usb_hcd *hcd;
  	struct resource *res_mem;
++<<<<<<< HEAD
 +	struct usb_ehci_pdata *pdata;
 +	int irq;
 +	int err = -ENOMEM;
++=======
+ 	struct usb_ehci_pdata *pdata = dev_get_platdata(&dev->dev);
+ 	struct ehci_platform_priv *priv;
+ 	int err, irq, clk = 0;
++>>>>>>> a4aeb2117571 (ehci-platform: Add support for clks and phy passed through devicetree)
  
  	if (usb_disabled())
  		return -ENODEV;
  
  	/*
- 	 * use reasonable defaults so platforms don't have to provide these.
- 	 * with DT probing on ARM, none of these are set.
+ 	 * Use reasonable defaults so platforms don't have to provide these
+ 	 * with DT probing on ARM.
  	 */
++<<<<<<< HEAD
 +	if (!dev->dev.platform_data)
 +		dev->dev.platform_data = &ehci_platform_defaults;
 +	if (!dev->dev.dma_mask)
 +		dev->dev.dma_mask = &dev->dev.coherent_dma_mask;
 +	if (!dev->dev.coherent_dma_mask)
 +		dev->dev.coherent_dma_mask = DMA_BIT_MASK(32);
 +
 +	pdata = dev->dev.platform_data;
++=======
+ 	if (!pdata)
+ 		pdata = &ehci_platform_defaults;
+ 
+ 	err = dma_coerce_mask_and_coherent(&dev->dev, DMA_BIT_MASK(32));
+ 	if (err)
+ 		return err;
++>>>>>>> a4aeb2117571 (ehci-platform: Add support for clks and phy passed through devicetree)
  
  	irq = platform_get_irq(dev, 0);
  	if (irq < 0) {
@@@ -130,8 -215,9 +232,8 @@@
  	}
  	err = usb_add_hcd(hcd, irq, IRQF_SHARED);
  	if (err)
- 		goto err_put_hcd;
+ 		goto err_power;
  
 -	device_wakeup_enable(hcd->self.controller);
  	platform_set_drvdata(dev, hcd);
  
  	return err;
@@@ -148,11 -240,11 +256,19 @@@ err_put_hcd
  static int ehci_platform_remove(struct platform_device *dev)
  {
  	struct usb_hcd *hcd = platform_get_drvdata(dev);
++<<<<<<< HEAD
 +	struct usb_ehci_pdata *pdata = dev->dev.platform_data;
 +
 +	usb_remove_hcd(hcd);
 +	usb_put_hcd(hcd);
 +	platform_set_drvdata(dev, NULL);
++=======
+ 	struct usb_ehci_pdata *pdata = dev_get_platdata(&dev->dev);
+ 	struct ehci_platform_priv *priv = hcd_to_ehci_priv(hcd);
+ 	int clk;
+ 
+ 	usb_remove_hcd(hcd);
++>>>>>>> a4aeb2117571 (ehci-platform: Add support for clks and phy passed through devicetree)
  
  	if (pdata->power_off)
  		pdata->power_off(dev);
diff --git a/Documentation/devicetree/bindings/usb/usb-ehci.txt b/Documentation/devicetree/bindings/usb/usb-ehci.txt
index fa18612f757b..2c1aeebe12b7 100644
--- a/Documentation/devicetree/bindings/usb/usb-ehci.txt
+++ b/Documentation/devicetree/bindings/usb/usb-ehci.txt
@@ -7,13 +7,14 @@ Required properties:
     (debug-port or other) can be also specified here, but only after
     definition of standard EHCI registers.
   - interrupts : one EHCI interrupt should be described here.
-If device registers are implemented in big endian mode, the device
-node should have "big-endian-regs" property.
-If controller implementation operates with big endian descriptors,
-"big-endian-desc" property should be specified.
-If both big endian registers and descriptors are used by the controller
-implementation, "big-endian" property can be specified instead of having
-both "big-endian-regs" and "big-endian-desc".
+
+Optional properties:
+ - big-endian-regs : boolean, set this for hcds with big-endian registers
+ - big-endian-desc : boolean, set this for hcds with big-endian descriptors
+ - big-endian : boolean, for hcds with big-endian-regs + big-endian-desc
+ - clocks : a list of phandle + clock specifier pairs
+ - phys : phandle + phy specifier pair
+ - phy-names : "usb"
 
 Example (Sequoia 440EPx):
     ehci@e0000300 {
@@ -23,3 +24,13 @@ Example (Sequoia 440EPx):
 	   reg = <0 e0000300 90 0 e0000390 70>;
 	   big-endian;
    };
+
+Example (Allwinner sun4i A10 SoC):
+   ehci0: usb@01c14000 {
+	   compatible = "allwinner,sun4i-a10-ehci", "usb-ehci";
+	   reg = <0x01c14000 0x100>;
+	   interrupts = <39>;
+	   clocks = <&ahb_gates 1>;
+	   phys = <&usbphy 1>;
+	   phy-names = "usb";
+   };
diff --git a/Documentation/devicetree/bindings/usb/via,vt8500-ehci.txt b/Documentation/devicetree/bindings/usb/via,vt8500-ehci.txt
deleted file mode 100644
index 17b3ad1d97e7..000000000000
--- a/Documentation/devicetree/bindings/usb/via,vt8500-ehci.txt
+++ /dev/null
@@ -1,15 +0,0 @@
-VIA/Wondermedia VT8500 EHCI Controller
------------------------------------------------------
-
-Required properties:
-- compatible : "via,vt8500-ehci"
-- reg : Should contain 1 register ranges(address and length)
-- interrupts : ehci controller interrupt
-
-Example:
-
-	ehci@d8007900 {
-		compatible = "via,vt8500-ehci";
-		reg = <0xd8007900 0x200>;
-		interrupts = <43>;
-	};
diff --git a/Documentation/devicetree/bindings/usb/vt8500-ehci.txt b/Documentation/devicetree/bindings/usb/vt8500-ehci.txt
deleted file mode 100644
index 5fb8fd6e250c..000000000000
--- a/Documentation/devicetree/bindings/usb/vt8500-ehci.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-VIA VT8500 and Wondermedia WM8xxx SoC USB controllers.
-
-Required properties:
- - compatible: Should be "via,vt8500-ehci" or "wm,prizm-ehci".
- - reg: Address range of the ehci registers. size should be 0x200
- - interrupts: Should contain the ehci interrupt.
-
-usb: ehci@D8007100 {
-	compatible = "wm,prizm-ehci", "usb-ehci";
-	reg = <0xD8007100 0x200>;
-	interrupts = <1>;
-};
diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index 14e3c49416bf..7559dda037f2 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -261,6 +261,7 @@ config USB_EHCI_ATH79
 
 config USB_EHCI_HCD_PLATFORM
 	tristate "Generic EHCI driver for a platform device"
+	depends on !PPC_OF
 	default n
 	---help---
 	  Adds an EHCI host driver for a generic platform device, which
* Unmerged path drivers/usb/host/ehci-platform.c
