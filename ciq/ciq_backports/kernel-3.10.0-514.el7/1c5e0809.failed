IB/core: Set correct payload length for RoCEv2 over IPv6

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Moni Shoua <monis@mellanox.com>
commit 1c5e08099022942cd530c99f5f292c735acc288f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/1c5e0809.failed

For GSI QP traffic, the count of the udp header bytes was missing from
the IPv6 header, fix that.

Fixes: 25f40220e56b ('IB/core: Initialize UD header structure with IP
                     and UDP headers')
	Signed-off-by: Moni Shoua <monis@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 1c5e08099022942cd530c99f5f292c735acc288f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/ud_header.c
diff --cc drivers/infiniband/core/ud_header.c
index 72feee620ebf,2116132568e7..000000000000
--- a/drivers/infiniband/core/ud_header.c
+++ b/drivers/infiniband/core/ud_header.c
@@@ -223,16 -312,27 +223,22 @@@ static const struct ib_field deth_table
   * @immediate_present: specify if immediate data is present
   * @header:Structure to initialize
   */
 -int ib_ud_header_init(int     payload_bytes,
 -		      int    lrh_present,
 -		      int    eth_present,
 -		      int    vlan_present,
 -		      int    grh_present,
 -		      int    ip_version,
 -		      int    udp_present,
 -		      int    immediate_present,
 -		      struct ib_ud_header *header)
 +void ib_ud_header_init(int     		    payload_bytes,
 +		       int		    lrh_present,
 +		       int		    eth_present,
 +		       int		    vlan_present,
 +		       int    		    grh_present,
 +		       int		    immediate_present,
 +		       struct ib_ud_header *header)
  {
++<<<<<<< HEAD
++=======
+ 	size_t udp_bytes = udp_present ? IB_UDP_BYTES : 0;
+ 
+ 	grh_present = grh_present && !ip_version;
++>>>>>>> 1c5e08099022 (IB/core: Set correct payload length for RoCEv2 over IPv6)
  	memset(header, 0, sizeof *header);
  
 -	/*
 -	 * UDP header without IP header doesn't make sense
 -	 */
 -	if (udp_present && ip_version != 4 && ip_version != 6)
 -		return -EINVAL;
 -
  	if (lrh_present) {
  		u16 packet_length;
  
@@@ -252,17 -352,38 +258,41 @@@
  	if (vlan_present)
  		header->eth.type = cpu_to_be16(ETH_P_8021Q);
  
 -	if (ip_version == 6 || grh_present) {
 +	if (grh_present) {
  		header->grh.ip_version      = 6;
  		header->grh.payload_length  =
- 			cpu_to_be16((IB_BTH_BYTES     +
+ 			cpu_to_be16((udp_bytes        +
+ 				     IB_BTH_BYTES     +
  				     IB_DETH_BYTES    +
  				     payload_bytes    +
  				     4                + /* ICRC     */
  				     3) & ~3);          /* round up */
 -		header->grh.next_header     = udp_present ? IPPROTO_UDP : 0x1b;
 +		header->grh.next_header     = 0x1b;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (ip_version == 4) {
+ 		header->ip4.ver = 4; /* version 4 */
+ 		header->ip4.hdr_len = 5; /* 5 words */
+ 		header->ip4.tot_len =
+ 			cpu_to_be16(IB_IP4_BYTES   +
+ 				     udp_bytes     +
+ 				     IB_BTH_BYTES  +
+ 				     IB_DETH_BYTES +
+ 				     payload_bytes +
+ 				     4);     /* ICRC     */
+ 		header->ip4.protocol = IPPROTO_UDP;
+ 	}
+ 	if (udp_present && ip_version)
+ 		header->udp.length =
+ 			cpu_to_be16(IB_UDP_BYTES   +
+ 				     IB_BTH_BYTES  +
+ 				     IB_DETH_BYTES +
+ 				     payload_bytes +
+ 				     4);     /* ICRC     */
+ 
++>>>>>>> 1c5e08099022 (IB/core: Set correct payload length for RoCEv2 over IPv6)
  	if (immediate_present)
  		header->bth.opcode           = IB_OPCODE_UD_SEND_ONLY_WITH_IMMEDIATE;
  	else
* Unmerged path drivers/infiniband/core/ud_header.c
