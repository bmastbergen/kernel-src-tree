RDS: IB: add Fastreg MR (FRMR) detection support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author santosh.shilimkar@oracle.com <santosh.shilimkar@oracle.com>
commit 2cb2912d65633e751d3f8397377174501412aa47
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2cb2912d.failed

Discovere Fast Memmory Registration support using IB device
IB_DEVICE_MEM_MGT_EXTENSIONS. Certain HCA might support just FRMR
or FMR or both FMR and FRWR. In case both mr type are supported,
default FMR is used.

Default MR is still kept as FMR against what everyone else
is following. Default will be changed to FRMR once the
RDS performance with FRMR is comparable with FMR. The
work is in progress for the same.

	Signed-off-by: Santosh Shilimkar <ssantosh@kernel.org>
	Signed-off-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2cb2912d65633e751d3f8397377174501412aa47)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/rds/ib.h
#	net/rds/ib_mr.h
diff --cc net/rds/ib.h
index 1c9525b4fdbb,c5eddc2086ff..000000000000
--- a/net/rds/ib.h
+++ b/net/rds/ib.h
@@@ -181,7 -200,11 +181,15 @@@ struct rds_ib_device 
  	struct list_head	conn_list;
  	struct ib_device	*dev;
  	struct ib_pd		*pd;
++<<<<<<< HEAD
 +	unsigned int		max_fmrs;
++=======
+ 	bool                    has_fmr;
+ 	bool                    has_fr;
+ 	bool                    use_fastreg;
+ 
+ 	unsigned int		max_mrs;
++>>>>>>> 2cb2912d6563 (RDS: IB: add Fastreg MR (FRMR) detection support)
  	struct rds_ib_mr_pool	*mr_1m_pool;
  	struct rds_ib_mr_pool   *mr_8k_pool;
  	unsigned int		fmr_max_remaps;
* Unmerged path net/rds/ib_mr.h
diff --git a/net/rds/ib.c b/net/rds/ib.c
index 6584971a158e..7c354c793534 100644
--- a/net/rds/ib.c
+++ b/net/rds/ib.c
@@ -139,6 +139,12 @@ static void rds_ib_add_one(struct ib_device *device)
 	rds_ibdev->max_wrs = device->attrs.max_qp_wr;
 	rds_ibdev->max_sge = min(device->attrs.max_sge, RDS_IB_MAX_SGE);
 
+	rds_ibdev->has_fr = (device->attrs.device_cap_flags &
+				  IB_DEVICE_MEM_MGT_EXTENSIONS);
+	rds_ibdev->has_fmr = (device->alloc_fmr && device->dealloc_fmr &&
+			    device->map_phys_fmr && device->unmap_fmr);
+	rds_ibdev->use_fastreg = (rds_ibdev->has_fr && !rds_ibdev->has_fmr);
+
 	rds_ibdev->fmr_max_remaps = device->attrs.max_map_per_fmr?: 32;
 	rds_ibdev->max_1m_fmrs = device->attrs.max_mr ?
 		min_t(unsigned int, (device->attrs.max_mr / 2),
@@ -177,6 +183,10 @@ static void rds_ib_add_one(struct ib_device *device)
 		 rds_ibdev->fmr_max_remaps, rds_ibdev->max_1m_fmrs,
 		 rds_ibdev->max_8k_fmrs);
 
+	pr_info("RDS/IB: %s: %s supported and preferred\n",
+		device->name,
+		rds_ibdev->use_fastreg ? "FRMR" : "FMR");
+
 	INIT_LIST_HEAD(&rds_ibdev->ipaddr_list);
 	INIT_LIST_HEAD(&rds_ibdev->conn_list);
 
* Unmerged path net/rds/ib.h
* Unmerged path net/rds/ib_mr.h
