IB/hfi1: Notify remove MMU/RB callback of calling context

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mitko Haralanov <mitko.haralanov@intel.com>
commit 909e2cd004b639276678c195760efeea6c173626
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/909e2cd0.failed

Tell the remove MMU/RB callback if it's being called as
part of a memory invalidation or not. This can be important
in preventing a deadlock if the remove callback attempts to
take the map_sem semaphore because the kernel's MMU
invalidation functions have already taken it.

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Reviewed-by: Dean Luick <dean.luick@intel.com>
	Signed-off-by: Mitko Haralanov <mitko.haralanov@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 909e2cd004b639276678c195760efeea6c173626)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/debugfs.h
#	drivers/staging/rdma/hfi1/mmu_rb.c
#	drivers/staging/rdma/hfi1/user_exp_rcv.c
diff --cc drivers/staging/hfi1/debugfs.h
index 92d6fe146714,fdd978757b90..000000000000
--- a/drivers/staging/hfi1/debugfs.h
+++ b/drivers/staging/hfi1/debugfs.h
@@@ -49,30 -44,30 +49,40 @@@
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *
   */
 -#ifndef _HFI1_MMU_RB_H
 -#define _HFI1_MMU_RB_H
  
 -#include "hfi.h"
 +struct hfi1_ibdev;
 +#ifdef CONFIG_DEBUG_FS
 +void hfi1_dbg_ibdev_init(struct hfi1_ibdev *ibd);
 +void hfi1_dbg_ibdev_exit(struct hfi1_ibdev *ibd);
 +void hfi1_dbg_init(void);
 +void hfi1_dbg_exit(void);
 +#else
 +static inline void hfi1_dbg_ibdev_init(struct hfi1_ibdev *ibd)
 +{
 +}
  
 -struct mmu_rb_node {
 -	struct rb_node node;
 -	unsigned long addr;
 -	unsigned long len;
 -};
 +void hfi1_dbg_ibdev_exit(struct hfi1_ibdev *ibd)
 +{
 +}
  
++<<<<<<< HEAD:drivers/staging/hfi1/debugfs.h
 +void hfi1_dbg_init(void)
 +{
 +}
++=======
+ struct mmu_rb_ops {
+ 	int (*compare)(struct mmu_rb_node *, unsigned long,
+ 		       unsigned long);
+ 	int (*insert)(struct rb_root *, struct mmu_rb_node *);
+ 	void (*remove)(struct rb_root *, struct mmu_rb_node *, bool);
+ 	int (*invalidate)(struct rb_root *, struct mmu_rb_node *);
+ };
++>>>>>>> 909e2cd004b6 (IB/hfi1: Notify remove MMU/RB callback of calling context):drivers/staging/rdma/hfi1/mmu_rb.h
 +
 +void hfi1_dbg_exit(void)
 +{
 +}
  
 -int hfi1_mmu_rb_register(struct rb_root *root, struct mmu_rb_ops *ops);
 -void hfi1_mmu_rb_unregister(struct rb_root *);
 -int hfi1_mmu_rb_insert(struct rb_root *, struct mmu_rb_node *);
 -void hfi1_mmu_rb_remove(struct rb_root *, struct mmu_rb_node *);
 -struct mmu_rb_node *hfi1_mmu_rb_search(struct rb_root *, unsigned long,
 -				       unsigned long);
 +#endif
  
 -#endif /* _HFI1_MMU_RB_H */
 +#endif                          /* _HFI1_DEBUGFS_H */
* Unmerged path drivers/staging/rdma/hfi1/mmu_rb.c
* Unmerged path drivers/staging/rdma/hfi1/user_exp_rcv.c
* Unmerged path drivers/staging/hfi1/debugfs.h
* Unmerged path drivers/staging/rdma/hfi1/mmu_rb.c
* Unmerged path drivers/staging/rdma/hfi1/user_exp_rcv.c
