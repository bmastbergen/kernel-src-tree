serial: 8250_dw: add ability to handle the peripheral clock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Heiko St√ºbner <heiko@sntech.de>
commit 7d78cbefaa465bbf36e2b4b90d3c196a00f54008
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7d78cbef.failed

First try to find the named clock variants then fall back to the already
existing handling of a nameless declared baudclk.

This also adds the missing documentation for this already existing variant.

	Signed-off-by: Heiko Stuebner <heiko@sntech.de>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 7d78cbefaa465bbf36e2b4b90d3c196a00f54008)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/serial/8250/8250_dw.c
diff --cc drivers/tty/serial/8250/8250_dw.c
index 19f1fa08014f,c531fa42f838..000000000000
--- a/drivers/tty/serial/8250/8250_dw.c
+++ b/drivers/tty/serial/8250/8250_dw.c
@@@ -54,12 -55,20 +54,21 @@@
  
  
  struct dw8250_data {
++<<<<<<< HEAD
 +	int		last_lcr;
 +	int		last_mcr;
 +	int		line;
 +	struct clk	*clk;
++=======
+ 	u8			usr_reg;
+ 	int			last_mcr;
+ 	int			line;
+ 	struct clk		*clk;
+ 	struct clk		*pclk;
+ 	struct uart_8250_dma	dma;
++>>>>>>> 7d78cbefaa46 (serial: 8250_dw: add ability to handle the peripheral clock)
  };
  
 -#define BYT_PRV_CLK			0x800
 -#define BYT_PRV_CLK_EN			(1 << 0)
 -#define BYT_PRV_CLK_M_VAL_SHIFT		1
 -#define BYT_PRV_CLK_N_VAL_SHIFT		16
 -#define BYT_PRV_CLK_UPDATE		(1 << 31)
 -
  static inline int dw8250_modify_msr(struct uart_port *p, int offset, int value)
  {
  	struct dw8250_data *d = p->private_data;
@@@ -277,12 -359,34 +286,32 @@@ static int dw8250_probe(struct platform
  	if (!data)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	data->clk = devm_clk_get(&pdev->dev, NULL);
++=======
+ 	data->usr_reg = DW_UART_USR;
+ 	data->clk = devm_clk_get(&pdev->dev, "baudclk");
+ 	if (IS_ERR(data->clk))
+ 		data->clk = devm_clk_get(&pdev->dev, NULL);
++>>>>>>> 7d78cbefaa46 (serial: 8250_dw: add ability to handle the peripheral clock)
  	if (!IS_ERR(data->clk)) {
- 		clk_prepare_enable(data->clk);
- 		uart.port.uartclk = clk_get_rate(data->clk);
+ 		err = clk_prepare_enable(data->clk);
+ 		if (err)
+ 			dev_warn(&pdev->dev, "could not enable optional baudclk: %d\n",
+ 				 err);
+ 		else
+ 			uart.port.uartclk = clk_get_rate(data->clk);
+ 	}
+ 
+ 	data->pclk = devm_clk_get(&pdev->dev, "apb_pclk");
+ 	if (!IS_ERR(data->pclk)) {
+ 		err = clk_prepare_enable(data->pclk);
+ 		if (err) {
+ 			dev_err(&pdev->dev, "could not enable apb_pclk\n");
+ 			return err;
+ 		}
  	}
  
 -	data->dma.rx_chan_id = -1;
 -	data->dma.tx_chan_id = -1;
 -	data->dma.rx_param = data;
 -	data->dma.tx_param = data;
 -	data->dma.fn = dw8250_dma_filter;
 -
  	uart.port.iotype = UPIO_MEM;
  	uart.port.serial_in = dw8250_serial_in;
  	uart.port.serial_out = dw8250_serial_out;
diff --git a/Documentation/devicetree/bindings/tty/serial/snps-dw-apb-uart.txt b/Documentation/devicetree/bindings/tty/serial/snps-dw-apb-uart.txt
index f13f1c5be91c..095ac7172ffe 100644
--- a/Documentation/devicetree/bindings/tty/serial/snps-dw-apb-uart.txt
+++ b/Documentation/devicetree/bindings/tty/serial/snps-dw-apb-uart.txt
@@ -4,7 +4,15 @@ Required properties:
 - compatible : "snps,dw-apb-uart"
 - reg : offset and length of the register set for the device.
 - interrupts : should contain uart interrupt.
+
+Clock handling:
+The clock rate of the input clock needs to be supplied by one of
 - clock-frequency : the input clock frequency for the UART.
+- clocks : phandle to the input clock
+
+The supplying peripheral clock can also be handled, needing a second property
+- clock-names: tuple listing input clock names.
+	Required elements: "baudclk", "apb_pclk"
 
 Optional properties:
 - reg-shift : quantity to shift the register offsets by.  If this property is
@@ -23,3 +31,26 @@ Example:
 		reg-shift = <2>;
 		reg-io-width = <4>;
 	};
+
+Example with one clock:
+
+	uart@80230000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x80230000 0x100>;
+		clocks = <&baudclk>;
+		interrupts = <10>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+	};
+
+Example with two clocks:
+
+	uart@80230000 {
+		compatible = "snps,dw-apb-uart";
+		reg = <0x80230000 0x100>;
+		clocks = <&baudclk>, <&apb_pclk>;
+		clock-names = "baudclk", "apb_pclk";
+		interrupts = <10>;
+		reg-shift = <2>;
+		reg-io-width = <4>;
+	};
* Unmerged path drivers/tty/serial/8250/8250_dw.c
