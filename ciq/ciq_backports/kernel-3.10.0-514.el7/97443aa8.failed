ext2: remove ext2_aops_xip

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Matthew Wilcox <matthew.r.wilcox@intel.com>
commit 97443aa809a142b1e6db2ccfb046c3a962907204
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/97443aa8.failed

We shouldn't need a special address_space_operations any more

	Signed-off-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
	Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
	Cc: Andreas Dilger <andreas.dilger@intel.com>
	Cc: Boaz Harrosh <boaz@plexistor.com>
	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Dave Chinner <david@fromorbit.com>
	Cc: Jan Kara <jack@suse.cz>
	Cc: Jens Axboe <axboe@kernel.dk>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
	Cc: Theodore Ts'o <tytso@mit.edu>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 97443aa809a142b1e6db2ccfb046c3a962907204)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext2/inode.c
#	fs/ext2/namei.c
diff --cc fs/ext2/inode.c
index 115fa58bb9ae,034fd42eade0..000000000000
--- a/fs/ext2/inode.c
+++ b/fs/ext2/inode.c
@@@ -883,11 -891,6 +883,14 @@@ const struct address_space_operations e
  	.error_remove_page	= generic_error_remove_page,
  };
  
++<<<<<<< HEAD
 +const struct address_space_operations ext2_aops_xip = {
 +	.bmap			= ext2_bmap,
 +	.get_xip_mem		= ext2_get_xip_mem,
 +};
 +
++=======
++>>>>>>> 97443aa809a1 (ext2: remove ext2_aops_xip)
  const struct address_space_operations ext2_nobh_aops = {
  	.readpage		= ext2_readpage,
  	.readpages		= ext2_readpages,
@@@ -1382,8 -1388,8 +1385,13 @@@ struct inode *ext2_iget (struct super_b
  
  	if (S_ISREG(inode->i_mode)) {
  		inode->i_op = &ext2_file_inode_operations;
++<<<<<<< HEAD
 +		if (ext2_use_xip(inode->i_sb)) {
 +			inode->i_mapping->a_ops = &ext2_aops_xip;
++=======
+ 		if (test_opt(inode->i_sb, XIP)) {
+ 			inode->i_mapping->a_ops = &ext2_aops;
++>>>>>>> 97443aa809a1 (ext2: remove ext2_aops_xip)
  			inode->i_fop = &ext2_xip_file_operations;
  		} else if (test_opt(inode->i_sb, NOBH)) {
  			inode->i_mapping->a_ops = &ext2_nobh_aops;
diff --cc fs/ext2/namei.c
index 73b0d9519836,0db888c91bec..000000000000
--- a/fs/ext2/namei.c
+++ b/fs/ext2/namei.c
@@@ -105,8 -104,8 +105,13 @@@ static int ext2_create (struct inode * 
  		return PTR_ERR(inode);
  
  	inode->i_op = &ext2_file_inode_operations;
++<<<<<<< HEAD
 +	if (ext2_use_xip(inode->i_sb)) {
 +		inode->i_mapping->a_ops = &ext2_aops_xip;
++=======
+ 	if (test_opt(inode->i_sb, XIP)) {
+ 		inode->i_mapping->a_ops = &ext2_aops;
++>>>>>>> 97443aa809a1 (ext2: remove ext2_aops_xip)
  		inode->i_fop = &ext2_xip_file_operations;
  	} else if (test_opt(inode->i_sb, NOBH)) {
  		inode->i_mapping->a_ops = &ext2_nobh_aops;
@@@ -119,6 -118,29 +124,32 @@@
  	return ext2_add_nondir(dentry, inode);
  }
  
++<<<<<<< HEAD
++=======
+ static int ext2_tmpfile(struct inode *dir, struct dentry *dentry, umode_t mode)
+ {
+ 	struct inode *inode = ext2_new_inode(dir, mode, NULL);
+ 	if (IS_ERR(inode))
+ 		return PTR_ERR(inode);
+ 
+ 	inode->i_op = &ext2_file_inode_operations;
+ 	if (test_opt(inode->i_sb, XIP)) {
+ 		inode->i_mapping->a_ops = &ext2_aops;
+ 		inode->i_fop = &ext2_xip_file_operations;
+ 	} else if (test_opt(inode->i_sb, NOBH)) {
+ 		inode->i_mapping->a_ops = &ext2_nobh_aops;
+ 		inode->i_fop = &ext2_file_operations;
+ 	} else {
+ 		inode->i_mapping->a_ops = &ext2_aops;
+ 		inode->i_fop = &ext2_file_operations;
+ 	}
+ 	mark_inode_dirty(inode);
+ 	d_tmpfile(dentry, inode);
+ 	unlock_new_inode(inode);
+ 	return 0;
+ }
+ 
++>>>>>>> 97443aa809a1 (ext2: remove ext2_aops_xip)
  static int ext2_mknod (struct inode * dir, struct dentry *dentry, umode_t mode, dev_t rdev)
  {
  	struct inode * inode;
diff --git a/fs/ext2/ext2.h b/fs/ext2/ext2.h
index d9a17d0b124d..f39599e11bb6 100644
--- a/fs/ext2/ext2.h
+++ b/fs/ext2/ext2.h
@@ -789,7 +789,6 @@ extern const struct file_operations ext2_xip_file_operations;
 
 /* inode.c */
 extern const struct address_space_operations ext2_aops;
-extern const struct address_space_operations ext2_aops_xip;
 extern const struct address_space_operations ext2_nobh_aops;
 
 /* namei.c */
* Unmerged path fs/ext2/inode.c
* Unmerged path fs/ext2/namei.c
