HID: remove hid_output_raw_report transport implementations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hid] remove hid_output_raw_report transport implementations (Benjamin Tissoires) [1311883]
Rebuild_FUZZ: 95.58%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit 6fd182028c43baf1c7d017d52b0134ecadbdc447
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6fd18202.failed

Nobody calls hid_output_raw_report anymore, and nobody should.
We can now remove the various implementation in the different
transport drivers and the declarations.

	Reviewed-by: David Herrmann <dh.herrmann@gmail.com>
	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 6fd182028c43baf1c7d017d52b0134ecadbdc447)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/i2c-hid/i2c-hid.c
#	drivers/hid/uhid.c
#	drivers/hid/usbhid/hid-core.c
#	include/linux/hid.h
#	net/bluetooth/hidp/core.c
diff --cc drivers/hid/i2c-hid/i2c-hid.c
index 73c15796e449,2de2b8e22462..000000000000
--- a/drivers/hid/i2c-hid/i2c-hid.c
+++ b/drivers/hid/i2c-hid/i2c-hid.c
@@@ -580,34 -587,27 +580,48 @@@ static int i2c_hid_output_raw_report(st
  	return ret;
  }
  
++<<<<<<< HEAD
 +static void i2c_hid_request(struct hid_device *hid, struct hid_report *rep,
 +		int reqtype)
 +{
 +	struct i2c_client *client = hid->driver_data;
 +	char *buf;
 +	int ret;
 +	int len = i2c_hid_get_report_length(rep) - 2;
 +
 +	buf = hid_alloc_report_buf(rep, GFP_KERNEL);
 +	if (!buf)
 +		return;
 +
++=======
+ static int i2c_hid_output_report(struct hid_device *hid, __u8 *buf,
+ 		size_t count)
+ {
+ 	return i2c_hid_output_raw_report(hid, buf, count, HID_OUTPUT_REPORT,
+ 			false);
+ }
+ 
+ static int i2c_hid_raw_request(struct hid_device *hid, unsigned char reportnum,
+ 			       __u8 *buf, size_t len, unsigned char rtype,
+ 			       int reqtype)
+ {
++>>>>>>> 6fd182028c43 (HID: remove hid_output_raw_report transport implementations)
  	switch (reqtype) {
  	case HID_REQ_GET_REPORT:
 -		return i2c_hid_get_raw_report(hid, reportnum, buf, len, rtype);
 +		ret = i2c_hid_get_raw_report(hid, rep->id, buf, len, rep->type);
 +		if (ret < 0)
 +			dev_err(&client->dev, "%s: unable to get report: %d\n",
 +				__func__, ret);
 +		else
 +			hid_input_report(hid, rep->type, buf, ret, 0);
 +		break;
  	case HID_REQ_SET_REPORT:
 -		if (buf[0] != reportnum)
 -			return -EINVAL;
 -		return i2c_hid_output_raw_report(hid, buf, len, rtype, true);
 -	default:
 -		return -EIO;
 +		hid_output_report(rep, buf);
 +		i2c_hid_output_raw_report(hid, buf, len, rep->type);
 +		break;
  	}
 +
 +	kfree(buf);
  }
  
  static int i2c_hid_parse(struct hid_device *hid)
@@@ -978,8 -1012,6 +992,11 @@@ static int i2c_hid_probe(struct i2c_cli
  
  	hid->driver_data = client;
  	hid->ll_driver = &i2c_hid_ll_driver;
++<<<<<<< HEAD
 +	hid->hid_get_raw_report = i2c_hid_get_raw_report;
 +	hid->hid_output_raw_report = i2c_hid_output_raw_report;
++=======
++>>>>>>> 6fd182028c43 (HID: remove hid_output_raw_report transport implementations)
  	hid->dev.parent = &client->dev;
  	ACPI_COMPANION_SET(&hid->dev, ACPI_COMPANION(&client->dev));
  	hid->bus = BUS_I2C;
diff --cc drivers/hid/uhid.c
index 7e449c46e75d,7ed79be2686a..000000000000
--- a/drivers/hid/uhid.c
+++ b/drivers/hid/uhid.c
@@@ -400,8 -400,6 +400,11 @@@ static int uhid_dev_create(struct uhid_
  	hid->uniq[63] = 0;
  
  	hid->ll_driver = &uhid_hid_driver;
++<<<<<<< HEAD
 +	hid->hid_get_raw_report = uhid_hid_get_raw;
 +	hid->hid_output_raw_report = uhid_hid_output_raw;
++=======
++>>>>>>> 6fd182028c43 (HID: remove hid_output_raw_report transport implementations)
  	hid->bus = ev->u.create.bus;
  	hid->vendor = ev->u.create.vendor;
  	hid->product = ev->u.create.product;
diff --cc drivers/hid/usbhid/hid-core.c
index 83a1539455b9,7b88f4cb9902..000000000000
--- a/drivers/hid/usbhid/hid-core.c
+++ b/drivers/hid/usbhid/hid-core.c
@@@ -1300,8 -1283,6 +1289,11 @@@ static int usbhid_probe(struct usb_inte
  
  	usb_set_intfdata(intf, hid);
  	hid->ll_driver = &usb_hid_driver;
++<<<<<<< HEAD
 +	hid->hid_get_raw_report = usbhid_get_raw_report;
 +	hid->hid_output_raw_report = usbhid_output_raw_report;
++=======
++>>>>>>> 6fd182028c43 (HID: remove hid_output_raw_report transport implementations)
  	hid->ff_init = hid_pidff_init;
  #ifdef CONFIG_USB_HIDDEV
  	hid->hiddev_connect = hiddev_connect;
diff --cc include/linux/hid.h
index 537af3092265,01a90b8d53bb..000000000000
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@@ -512,12 -510,6 +512,15 @@@ struct hid_device {							/* device rep
  				  struct hid_usage *, __s32);
  	void (*hiddev_report_event) (struct hid_device *, struct hid_report *);
  
++<<<<<<< HEAD
 +	/* handler for raw input (Get_Report) data, used by hidraw */
 +	int (*hid_get_raw_report) (struct hid_device *, unsigned char, __u8 *, size_t, unsigned char);
 +
 +	/* handler for raw output data, used by hidraw */
 +	int (*hid_output_raw_report) (struct hid_device *, __u8 *, size_t, unsigned char);
 +
++=======
++>>>>>>> 6fd182028c43 (HID: remove hid_output_raw_report transport implementations)
  	/* debugging support via debugfs */
  	unsigned short debug;
  	struct dentry *debug_dir;
diff --cc net/bluetooth/hidp/core.c
index 75f6405352e2,514ddb5aef96..000000000000
--- a/net/bluetooth/hidp/core.c
+++ b/net/bluetooth/hidp/core.c
@@@ -793,9 -764,6 +781,12 @@@ static int hidp_setup_hid(struct hidp_s
  	hid->dev.parent = &session->conn->hcon->dev;
  	hid->ll_driver = &hidp_hid_driver;
  
++<<<<<<< HEAD
 +	hid->hid_get_raw_report = hidp_get_raw_report;
 +	hid->hid_output_raw_report = hidp_output_raw_report;
 +
++=======
++>>>>>>> 6fd182028c43 (HID: remove hid_output_raw_report transport implementations)
  	/* True if device is blacklisted in drivers/hid/hid-core.c */
  	if (hid_ignore(hid)) {
  		hid_destroy_device(session->hid);
* Unmerged path drivers/hid/i2c-hid/i2c-hid.c
* Unmerged path drivers/hid/uhid.c
* Unmerged path drivers/hid/usbhid/hid-core.c
* Unmerged path include/linux/hid.h
* Unmerged path net/bluetooth/hidp/core.c
