libnvdimm: Add a poison list and export badblocks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Vishal Verma <vishal.l.verma@intel.com>
commit 0caeef63e6d2f866d85bb507bf63e0ce8ec91cef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0caeef63.failed

During region creation, perform Address Range Scrubs (ARS) for the SPA
(System Physical Address) ranges to retrieve known poison locations from
firmware. Add a new data structure 'nd_poison' which is used as a list
in nvdimm_bus to store these poison locations.

When creating a pmem namespace, if there is any known poison associated
with its physical address space, convert the poison ranges to bad sectors
that are exposed using the badblocks interface.

	Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 0caeef63e6d2f866d85bb507bf63e0ce8ec91cef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/nfit.c
#	drivers/nvdimm/core.c
#	drivers/nvdimm/nd-core.h
#	drivers/nvdimm/nd.h
#	drivers/nvdimm/pmem.c
#	include/linux/libnvdimm.h
* Unmerged path drivers/acpi/nfit.c
* Unmerged path drivers/nvdimm/core.c
* Unmerged path drivers/nvdimm/nd-core.h
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/pmem.c
* Unmerged path include/linux/libnvdimm.h
* Unmerged path drivers/acpi/nfit.c
* Unmerged path drivers/nvdimm/core.c
* Unmerged path drivers/nvdimm/nd-core.h
* Unmerged path drivers/nvdimm/nd.h
* Unmerged path drivers/nvdimm/pmem.c
* Unmerged path include/linux/libnvdimm.h
