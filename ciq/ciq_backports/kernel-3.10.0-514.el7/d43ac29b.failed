xfs: return committed status from xfs_trans_roll()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Brian Foster <bfoster@redhat.com>
commit d43ac29be7a174f93a3d26cc1e68668fe86b782f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d43ac29b.failed

Some callers need to make error handling decisions based on whether
the current transaction successfully committed or not. Rename
xfs_trans_roll(), add a new parameter and provide a wrapper to
preserve existing callers.

	Signed-off-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit d43ac29be7a174f93a3d26cc1e68668fe86b782f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_trans.h
diff --cc fs/xfs/xfs_trans.h
index cb916e269926,ba1660b502a5..000000000000
--- a/fs/xfs/xfs_trans.h
+++ b/fs/xfs/xfs_trans.h
@@@ -224,9 -224,10 +224,14 @@@ void		xfs_trans_log_efd_extent(xfs_tran
  					 struct xfs_efd_log_item *,
  					 xfs_fsblock_t,
  					 xfs_extlen_t);
++<<<<<<< HEAD
 +int		xfs_trans_commit(xfs_trans_t *, uint flags);
++=======
+ int		xfs_trans_commit(struct xfs_trans *);
+ int		__xfs_trans_roll(struct xfs_trans **, struct xfs_inode *, int *);
++>>>>>>> d43ac29be7a1 (xfs: return committed status from xfs_trans_roll())
  int		xfs_trans_roll(struct xfs_trans **, struct xfs_inode *);
 -void		xfs_trans_cancel(xfs_trans_t *);
 +void		xfs_trans_cancel(xfs_trans_t *, int);
  int		xfs_trans_ail_init(struct xfs_mount *);
  void		xfs_trans_ail_destroy(struct xfs_mount *);
  
diff --git a/fs/xfs/xfs_trans.c b/fs/xfs/xfs_trans.c
index 42a1adf81dad..9dd02885bf6d 100644
--- a/fs/xfs/xfs_trans.c
+++ b/fs/xfs/xfs_trans.c
@@ -1043,9 +1043,10 @@ xfs_trans_cancel(
  * chunk we've been working on and get a new transaction to continue.
  */
 int
-xfs_trans_roll(
+__xfs_trans_roll(
 	struct xfs_trans	**tpp,
-	struct xfs_inode	*dp)
+	struct xfs_inode	*dp,
+	int			*committed)
 {
 	struct xfs_trans	*trans;
 	struct xfs_trans_res	tres;
@@ -1076,6 +1077,7 @@ xfs_trans_roll(
 	if (error)
 		return error;
 
+	*committed = 1;
 	trans = *tpp;
 
 	/*
@@ -1105,3 +1107,12 @@ xfs_trans_roll(
 		xfs_trans_ijoin(trans, dp, 0);
 	return 0;
 }
+
+int
+xfs_trans_roll(
+	struct xfs_trans	**tpp,
+	struct xfs_inode	*dp)
+{
+	int			committed = 0;
+	return __xfs_trans_roll(tpp, dp, &committed);
+}
* Unmerged path fs/xfs/xfs_trans.h
