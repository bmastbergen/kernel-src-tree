ixgbe: Correct handling of any outer UDP checksum setting

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Mark Rustad <mark.d.rustad@intel.com>
commit d469251bfd06d15289c9dd5dd60b8ebf65785b03
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d469251b.failed

If an outer UDP checksum is set, pass the skb up with CHECKSUM_NONE
so that the stack will check the checksum. Do not increment an
error counter, because we don't know that there is an actual error.

	Signed-off-by: Mark Rustad <mark.d.rustad@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit d469251bfd06d15289c9dd5dd60b8ebf65785b03)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
diff --cc drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index 890010da516e,a12f93dd8602..000000000000
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@@ -1453,6 -1478,17 +1453,20 @@@ static inline void ixgbe_rx_checksum(st
  
  	/* It must be a TCP or UDP packet with a valid checksum */
  	skb->ip_summed = CHECKSUM_UNNECESSARY;
++<<<<<<< HEAD
++=======
+ 	if (encap_pkt) {
+ 		if (!ixgbe_test_staterr(rx_desc, IXGBE_RXD_STAT_OUTERIPCS))
+ 			return;
+ 
+ 		if (ixgbe_test_staterr(rx_desc, IXGBE_RXDADV_ERR_OUTERIPER)) {
+ 			skb->ip_summed = CHECKSUM_NONE;
+ 			return;
+ 		}
+ 		/* If we checked the outer header let the stack know */
+ 		skb->csum_level = 1;
+ 	}
++>>>>>>> d469251bfd06 (ixgbe: Correct handling of any outer UDP checksum setting)
  }
  
  static bool ixgbe_alloc_mapped_page(struct ixgbe_ring *rx_ring,
* Unmerged path drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
