mm: softdirty: make freshly remapped file pages being softdirty unconditionally

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] softdirty: make freshly remapped file pages being softdirty unconditionally (Oleg Nesterov) [1269561]
Rebuild_FUZZ: 97.40%
commit-author Cyrill Gorcunov <gorcunov@openvz.org>
commit 0bf073315cb29d2e9e68b6c5da97862a519e3320
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0bf07331.failed

Hugh reported:

 | I noticed your soft_dirty work in install_file_pte(): which looked
 | good at first, until I realized that it's propagating the soft_dirty
 | of a pte it's about to zap completely, to the unrelated entry it's
 | about to insert in its place.  Which seems very odd to me.

Indeed this code ends up being nop in result -- pte_file_mksoft_dirty()
operates with pte_t argument and returns new pte_t which were never used
after.  After looking more I think what we need is to soft-dirtify all
newely remapped file pages because it should look like a new mapping for
memory tracker.

	Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>
	Reported-by: Hugh Dickins <hughd@google.com>
	Cc: Pavel Emelyanov <xemul@parallels.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0bf073315cb29d2e9e68b6c5da97862a519e3320)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/fremap.c
diff --cc mm/fremap.c
index 8d04ba431b82,2c5646f11f41..000000000000
--- a/mm/fremap.c
+++ b/mm/fremap.c
@@@ -64,10 -80,12 +64,19 @@@ static int install_file_pte(struct mm_s
  	if (!pte)
  		goto out;
  
++<<<<<<< HEAD
 +	if (!pte_none(*pte))
 +		zap_pte(mm, vma, addr, pte);
 +
 +	set_pte_at(mm, addr, pte, pgoff_to_pte(pgoff));
++=======
+ 	ptfile = pgoff_to_pte(pgoff);
+ 
+ 	if (!pte_none(*pte))
+ 		zap_pte(mm, vma, addr, pte);
+ 
+ 	set_pte_at(mm, addr, pte, pte_file_mksoft_dirty(ptfile));
++>>>>>>> 0bf073315cb2 (mm: softdirty: make freshly remapped file pages being softdirty unconditionally)
  	/*
  	 * We don't need to run update_mmu_cache() here because the "file pte"
  	 * being installed by install_file_pte() is not a real pte - it's a
* Unmerged path mm/fremap.c
