net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [include] mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets (kamal heib) [1275159 1296272 1296405 1298421 1298422 1298423 1298424 1298425]
Rebuild_FUZZ: 95.45%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit e1c9c62b9a3a761b56359a7437215ae2e9253821
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e1c9c62b.failed

All reserved fields after early_vf_enable are off by 1, since
early_vf_enable was not explicitly declared as array of size 1.

Reserved field before cqe_zip had a wrong size, it should
be 0x80 + 0x3f.

Fixes: b0844444590e ("net/mlx5_core: Introduce access function to read internal timer ")
Fixes: b4ff3a36d3e4 ("net/mlx5: Use offset based reserved field names in the IFC header file")
	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Matan Barak <matanb@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e1c9c62b9a3a761b56359a7437215ae2e9253821)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/mlx5_ifc.h
diff --cc include/linux/mlx5/mlx5_ifc.h
index 08e2b9ad01d1,c300e7491d80..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -720,153 -750,175 +720,313 @@@ struct mlx5_ifc_cmd_hca_cap_bits 
  	u8         ets[0x1];
  	u8         nic_flow_table[0x1];
  	u8         eswitch_flow_table[0x1];
++<<<<<<< HEAD
 +	u8	   early_vf_enable;
 +	u8         reserved_18[0x2];
++=======
+ 	u8	   early_vf_enable[0x1];
+ 	u8         reserved_at_1a9[0x2];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  	u8         local_ca_ack_delay[0x5];
 -	u8         reserved_at_1af[0x6];
 +	u8         reserved_19[0x6];
  	u8         port_type[0x2];
  	u8         num_ports[0x8];
  
++<<<<<<< HEAD
 +	u8         reserved_20[0x3];
 +	u8         log_max_msg[0x5];
 +	u8         reserved_21[0x18];
 +
 +	u8         stat_rate_support[0x10];
 +	u8         reserved_22[0xc];
 +	u8         cqe_version[0x4];
 +
 +	u8         compact_address_vector[0x1];
 +	u8         reserved_23[0xe];
 +	u8         drain_sigerr[0x1];
 +	u8         cmdif_checksum[0x2];
 +	u8         sigerr_cqe[0x1];
 +	u8         reserved_24[0x1];
 +	u8         wq_signature[0x1];
 +	u8         sctr_data_cqe[0x1];
 +	u8         reserved_25[0x1];
++=======
+ 	u8         reserved_at_1c0[0x3];
+ 	u8         log_max_msg[0x5];
+ 	u8         reserved_at_1c8[0x4];
+ 	u8         max_tc[0x4];
+ 	u8         reserved_at_1d0[0x6];
+ 	u8         rol_s[0x1];
+ 	u8         rol_g[0x1];
+ 	u8         reserved_at_1d8[0x1];
+ 	u8         wol_s[0x1];
+ 	u8         wol_g[0x1];
+ 	u8         wol_a[0x1];
+ 	u8         wol_b[0x1];
+ 	u8         wol_m[0x1];
+ 	u8         wol_u[0x1];
+ 	u8         wol_p[0x1];
+ 
+ 	u8         stat_rate_support[0x10];
+ 	u8         reserved_at_1f0[0xc];
+ 	u8         cqe_version[0x4];
+ 
+ 	u8         compact_address_vector[0x1];
+ 	u8         reserved_at_200[0x3];
+ 	u8         ipoib_basic_offloads[0x1];
+ 	u8         reserved_at_205[0xa];
+ 	u8         drain_sigerr[0x1];
+ 	u8         cmdif_checksum[0x2];
+ 	u8         sigerr_cqe[0x1];
+ 	u8         reserved_at_213[0x1];
+ 	u8         wq_signature[0x1];
+ 	u8         sctr_data_cqe[0x1];
+ 	u8         reserved_at_216[0x1];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  	u8         sho[0x1];
  	u8         tph[0x1];
  	u8         rf[0x1];
  	u8         dct[0x1];
++<<<<<<< HEAD
 +	u8         reserved_26[0x1];
 +	u8         eth_net_offloads[0x1];
 +	u8         roce[0x1];
 +	u8         atomic[0x1];
 +	u8         reserved_27[0x1];
++=======
+ 	u8         reserved_at_21b[0x1];
+ 	u8         eth_net_offloads[0x1];
+ 	u8         roce[0x1];
+ 	u8         atomic[0x1];
+ 	u8         reserved_at_21f[0x1];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  
  	u8         cq_oi[0x1];
  	u8         cq_resize[0x1];
  	u8         cq_moderation[0x1];
++<<<<<<< HEAD
 +	u8         reserved_28[0x3];
 +	u8         cq_eq_remap[0x1];
 +	u8         pg[0x1];
 +	u8         block_lb_mc[0x1];
 +	u8         reserved_29[0x1];
++=======
+ 	u8         reserved_at_223[0x3];
+ 	u8         cq_eq_remap[0x1];
+ 	u8         pg[0x1];
+ 	u8         block_lb_mc[0x1];
+ 	u8         reserved_at_229[0x1];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  	u8         scqe_break_moderation[0x1];
 -	u8         reserved_at_22a[0x1];
 +	u8         reserved_30[0x1];
  	u8         cd[0x1];
++<<<<<<< HEAD
 +	u8         reserved_31[0x1];
 +	u8         apm[0x1];
 +	u8         reserved_32[0x7];
++=======
+ 	u8         reserved_at_22d[0x1];
+ 	u8         apm[0x1];
+ 	u8         vector_calc[0x1];
+ 	u8         reserved_at_22f[0x1];
+ 	u8	   imaicl[0x1];
+ 	u8         reserved_at_232[0x4];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  	u8         qkv[0x1];
  	u8         pkv[0x1];
 -	u8         set_deth_sqpn[0x1];
 -	u8         reserved_at_239[0x3];
 +	u8         reserved_33[0x4];
  	u8         xrc[0x1];
  	u8         ud[0x1];
  	u8         uc[0x1];
  	u8         rc[0x1];
  
++<<<<<<< HEAD
 +	u8         reserved_34[0xa];
 +	u8         uar_sz[0x6];
 +	u8         reserved_35[0x8];
 +	u8         log_pg_sz[0x8];
 +
 +	u8         bf[0x1];
 +	u8         reserved_36[0x1];
 +	u8         pad_tx_eth_packet[0x1];
 +	u8         reserved_37[0x8];
 +	u8         log_bf_reg_size[0x5];
 +	u8         reserved_38[0x10];
 +
 +	u8         reserved_39[0x10];
 +	u8         max_wqe_sz_sq[0x10];
 +
 +	u8         reserved_40[0x10];
 +	u8         max_wqe_sz_rq[0x10];
 +
 +	u8         reserved_41[0x10];
 +	u8         max_wqe_sz_sq_dc[0x10];
 +
 +	u8         reserved_42[0x7];
 +	u8         max_qp_mcg[0x19];
 +
 +	u8         reserved_43[0x18];
 +	u8         log_max_mcg[0x8];
 +
 +	u8         reserved_44[0x3];
 +	u8         log_max_transport_domain[0x5];
 +	u8         reserved_45[0x3];
 +	u8         log_max_pd[0x5];
 +	u8         reserved_46[0xb];
 +	u8         log_max_xrcd[0x5];
 +
 +	u8         reserved_47[0x20];
 +
 +	u8         reserved_48[0x3];
 +	u8         log_max_rq[0x5];
 +	u8         reserved_49[0x3];
 +	u8         log_max_sq[0x5];
 +	u8         reserved_50[0x3];
 +	u8         log_max_tir[0x5];
 +	u8         reserved_51[0x3];
 +	u8         log_max_tis[0x5];
 +
 +	u8         basic_cyclic_rcv_wqe[0x1];
 +	u8         reserved_52[0x2];
 +	u8         log_max_rmp[0x5];
 +	u8         reserved_53[0x3];
 +	u8         log_max_rqt[0x5];
 +	u8         reserved_54[0x3];
 +	u8         log_max_rqt_size[0x5];
 +	u8         reserved_55[0x3];
 +	u8         log_max_tis_per_sq[0x5];
 +
 +	u8         reserved_56[0x3];
 +	u8         log_max_stride_sz_rq[0x5];
 +	u8         reserved_57[0x3];
 +	u8         log_min_stride_sz_rq[0x5];
 +	u8         reserved_58[0x3];
 +	u8         log_max_stride_sz_sq[0x5];
 +	u8         reserved_59[0x3];
 +	u8         log_min_stride_sz_sq[0x5];
 +
 +	u8         reserved_60[0x1b];
 +	u8         log_max_wq_sz[0x5];
 +
 +	u8         nic_vport_change_event[0x1];
 +	u8         reserved_61[0xa];
 +	u8         log_max_vlan_list[0x5];
 +	u8         reserved_62[0x3];
 +	u8         log_max_current_mc_list[0x5];
 +	u8         reserved_63[0x3];
 +	u8         log_max_current_uc_list[0x5];
 +
 +	u8         reserved_64[0x80];
 +
 +	u8         reserved_65[0x3];
 +	u8         log_max_l2_table[0x5];
 +	u8         reserved_66[0x8];
 +	u8         log_uar_page_sz[0x10];
 +
 +	u8         reserved_67[0xe0];
 +
 +	u8         reserved_68[0x1f];
++=======
+ 	u8         reserved_at_240[0xa];
+ 	u8         uar_sz[0x6];
+ 	u8         reserved_at_250[0x8];
+ 	u8         log_pg_sz[0x8];
+ 
+ 	u8         bf[0x1];
+ 	u8         reserved_at_261[0x1];
+ 	u8         pad_tx_eth_packet[0x1];
+ 	u8         reserved_at_263[0x8];
+ 	u8         log_bf_reg_size[0x5];
+ 	u8         reserved_at_270[0x10];
+ 
+ 	u8         reserved_at_280[0x10];
+ 	u8         max_wqe_sz_sq[0x10];
+ 
+ 	u8         reserved_at_2a0[0x10];
+ 	u8         max_wqe_sz_rq[0x10];
+ 
+ 	u8         reserved_at_2c0[0x10];
+ 	u8         max_wqe_sz_sq_dc[0x10];
+ 
+ 	u8         reserved_at_2e0[0x7];
+ 	u8         max_qp_mcg[0x19];
+ 
+ 	u8         reserved_at_300[0x18];
+ 	u8         log_max_mcg[0x8];
+ 
+ 	u8         reserved_at_320[0x3];
+ 	u8         log_max_transport_domain[0x5];
+ 	u8         reserved_at_328[0x3];
+ 	u8         log_max_pd[0x5];
+ 	u8         reserved_at_330[0xb];
+ 	u8         log_max_xrcd[0x5];
+ 
+ 	u8         reserved_at_340[0x20];
+ 
+ 	u8         reserved_at_360[0x3];
+ 	u8         log_max_rq[0x5];
+ 	u8         reserved_at_368[0x3];
+ 	u8         log_max_sq[0x5];
+ 	u8         reserved_at_370[0x3];
+ 	u8         log_max_tir[0x5];
+ 	u8         reserved_at_378[0x3];
+ 	u8         log_max_tis[0x5];
+ 
+ 	u8         basic_cyclic_rcv_wqe[0x1];
+ 	u8         reserved_at_381[0x2];
+ 	u8         log_max_rmp[0x5];
+ 	u8         reserved_at_388[0x3];
+ 	u8         log_max_rqt[0x5];
+ 	u8         reserved_at_390[0x3];
+ 	u8         log_max_rqt_size[0x5];
+ 	u8         reserved_at_398[0x3];
+ 	u8         log_max_tis_per_sq[0x5];
+ 
+ 	u8         reserved_at_3a0[0x3];
+ 	u8         log_max_stride_sz_rq[0x5];
+ 	u8         reserved_at_3a8[0x3];
+ 	u8         log_min_stride_sz_rq[0x5];
+ 	u8         reserved_at_3b0[0x3];
+ 	u8         log_max_stride_sz_sq[0x5];
+ 	u8         reserved_at_3b8[0x3];
+ 	u8         log_min_stride_sz_sq[0x5];
+ 
+ 	u8         reserved_at_3c0[0x1b];
+ 	u8         log_max_wq_sz[0x5];
+ 
+ 	u8         nic_vport_change_event[0x1];
+ 	u8         reserved_at_3e1[0xa];
+ 	u8         log_max_vlan_list[0x5];
+ 	u8         reserved_at_3f0[0x3];
+ 	u8         log_max_current_mc_list[0x5];
+ 	u8         reserved_at_3f8[0x3];
+ 	u8         log_max_current_uc_list[0x5];
+ 
+ 	u8         reserved_at_400[0x80];
+ 
+ 	u8         reserved_at_480[0x3];
+ 	u8         log_max_l2_table[0x5];
+ 	u8         reserved_at_488[0x8];
+ 	u8         log_uar_page_sz[0x10];
+ 
+ 	u8         reserved_at_4a0[0x20];
+ 	u8         device_frequency_mhz[0x20];
+ 	u8         device_frequency_khz[0x20];
+ 
+ 	u8         reserved_at_500[0x80];
+ 
+ 	u8         reserved_at_580[0x3f];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  	u8         cqe_zip[0x1];
  
  	u8         cqe_zip_timeout[0x10];
  	u8         cqe_zip_max_num[0x10];
  
++<<<<<<< HEAD
 +	u8         reserved_69[0x220];
++=======
+ 	u8         reserved_at_5e0[0x220];
++>>>>>>> e1c9c62b9a3a (net/mlx5: Fix mlx5 ifc cmd_hca_cap bad offsets)
  };
  
  enum mlx5_flow_destination_type {
* Unmerged path include/linux/mlx5/mlx5_ifc.h
