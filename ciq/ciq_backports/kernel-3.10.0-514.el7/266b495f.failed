bonding: don't use stale speed and duplex information

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jay Vosburgh <jay.vosburgh@canonical.com>
commit 266b495f11d6706018f66250cb02a788ff2490d7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/266b495f.failed

There is presently a race condition between the bonding periodic
link monitor and the updating of a slave's speed and duplex.  The former
occurs on a periodic basis, and the latter in response to a driver's
calling of netif_carrier_on.

	It is possible for the periodic monitor to run between the
driver call of netif_carrier_on and the receipt of the NETDEV_CHANGE
event that causes bonding to update the slave's speed and duplex.  This
manifests most notably as a report that a slave is up and "0 Mbps full
duplex" after enslavement, but in principle could report an incorrect
speed and duplex after any link up event if the device comes up with a
different speed or duplex.  This affects the 802.3ad aggregator
selection, as the speed and duplex are selection criteria.

	This is fixed by updating the speed and duplex in the periodic
monitor, prior to using that information.

	This was done historically in bonding, but the call to
bond_update_speed_duplex was removed in commit 876254ae2758 ("bonding:
don't call update_speed_duplex() under spinlocks"), as it might sleep
under lock.  Later, the locking was changed to only hold RTNL, and so
after commit 876254ae2758 ("bonding: don't call update_speed_duplex()
under spinlocks") this call is again safe.

	Tested-by: "Tantilov, Emil S" <emil.s.tantilov@intel.com>
	Cc: Veaceslav Falico <vfalico@gmail.com>
	Cc: dingtianhong <dingtianhong@huawei.com>
Fixes: 876254ae2758 ("bonding: don't call update_speed_duplex() under spinlocks")
	Signed-off-by: Jay Vosburgh <jay.vosburgh@canonical.com>
	Acked-by: Ding Tianhong <dingtianhong@huawei.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 266b495f11d6706018f66250cb02a788ff2490d7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index cb66d5eb2fbb,b7f1a9919033..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2092,7 -2129,9 +2092,13 @@@ static void bond_miimon_commit(struct b
  			continue;
  
  		case BOND_LINK_UP:
++<<<<<<< HEAD
 +			bond_set_slave_link_state(slave, BOND_LINK_UP);
++=======
+ 			bond_update_speed_duplex(slave);
+ 			bond_set_slave_link_state(slave, BOND_LINK_UP,
+ 						  BOND_SLAVE_NOTIFY_NOW);
++>>>>>>> 266b495f11d6 (bonding: don't use stale speed and duplex information)
  			slave->last_link_up = jiffies;
  
  			primary = rtnl_dereference(bond->primary_slave);
* Unmerged path drivers/net/bonding/bond_main.c
