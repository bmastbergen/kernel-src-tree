mm: softdirty: don't forget to save file map softdiry bit on unmap

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] softdirty: don't forget to save file map softdiry bit on unmap (Oleg Nesterov) [1269561]
Rebuild_FUZZ: 96.88%
commit-author Cyrill Gorcunov <gorcunov@openvz.org>
commit b43790eedd31e9535b89bbfa45793919e9504c34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b43790ee.failed

pte_file_mksoft_dirty operates with argument passed by a value and
returns modified result thus we need to assign @ptfile here, otherwise
itis a no-op which may lead to loss of the softdirty bit.

	Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org>
	Cc: Pavel Emelyanov <xemul@parallels.com>
	Cc: Hugh Dickins <hughd@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit b43790eedd31e9535b89bbfa45793919e9504c34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/rmap.c
diff --cc mm/rmap.c
index 8a1f7d7fc267,7da400d5d98e..000000000000
--- a/mm/rmap.c
+++ b/mm/rmap.c
@@@ -1406,11 -1355,15 +1406,20 @@@ static int try_to_unmap_cluster(unsigne
  
  		/* Nuke the page table entry. */
  		flush_cache_page(vma, address, pte_pfn(*pte));
 -		pteval = ptep_clear_flush(vma, address, pte);
 +		pteval = ptep_clear_flush_notify(vma, address, pte);
  
  		/* If nonlinear, store the file page offset in the pte. */
++<<<<<<< HEAD
 +		if (page->index != linear_page_index(vma, address))
 +			set_pte_at(mm, address, pte, pgoff_to_pte(page->index));
++=======
+ 		if (page->index != linear_page_index(vma, address)) {
+ 			pte_t ptfile = pgoff_to_pte(page->index);
+ 			if (pte_soft_dirty(pteval))
+ 				ptfile = pte_file_mksoft_dirty(ptfile);
+ 			set_pte_at(mm, address, pte, ptfile);
+ 		}
++>>>>>>> b43790eedd31 (mm: softdirty: don't forget to save file map softdiry bit on unmap)
  
  		/* Move the dirty bit to the physical page now the pte is gone. */
  		if (pte_dirty(pteval))
* Unmerged path mm/rmap.c
