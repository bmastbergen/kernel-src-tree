SUNRPC: Ensure xs_reset_transport() resets the close connection flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 6cc7e908362a9dfec3c821f77ec98b6758592060
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6cc7e908.failed

Otherwise, we may end up looping.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 6cc7e908362a9dfec3c821f77ec98b6758592060)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtsock.c
diff --cc net/sunrpc/xprtsock.c
index 4b1b78ba78c1,0fa7ed93dc20..000000000000
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@@ -904,11 -857,6 +916,14 @@@ static void xs_close(struct rpc_xprt *x
  	xs_reset_transport(transport);
  	xprt->reestablish_timeout = 0;
  
++<<<<<<< HEAD
 +	smp_mb__before_clear_bit();
 +	clear_bit(XPRT_CONNECTION_ABORT, &xprt->state);
 +	clear_bit(XPRT_CLOSE_WAIT, &xprt->state);
 +	clear_bit(XPRT_CLOSING, &xprt->state);
 +	smp_mb__after_clear_bit();
++=======
++>>>>>>> 6cc7e908362a (SUNRPC: Ensure xs_reset_transport() resets the close connection flags)
  	xprt_disconnect_done(xprt);
  }
  
@@@ -1506,16 -1462,6 +1521,19 @@@ static void xs_tcp_cancel_linger_timeou
  	xprt_clear_connecting(xprt);
  }
  
++<<<<<<< HEAD
 +static void xs_sock_reset_connection_flags(struct rpc_xprt *xprt)
 +{
 +	smp_mb__before_clear_bit();
 +	clear_bit(XPRT_CONNECTION_ABORT, &xprt->state);
 +	clear_bit(XPRT_CONNECTION_CLOSE, &xprt->state);
 +	clear_bit(XPRT_CLOSE_WAIT, &xprt->state);
 +	clear_bit(XPRT_CLOSING, &xprt->state);
 +	smp_mb__after_clear_bit();
 +}
 +
++=======
++>>>>>>> 6cc7e908362a (SUNRPC: Ensure xs_reset_transport() resets the close connection flags)
  static void xs_sock_mark_closed(struct rpc_xprt *xprt)
  {
  	xs_sock_reset_connection_flags(xprt);
* Unmerged path net/sunrpc/xprtsock.c
