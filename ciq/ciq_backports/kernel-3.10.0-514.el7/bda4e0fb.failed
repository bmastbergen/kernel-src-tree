NVMe: Set affinity after allocating request queues

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Keith Busch <keith.busch@intel.com>
commit bda4e0fb3126aca15586d165b5a15a37edc0a984
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/bda4e0fb.failed

The asynchronous namespace scanning caused affinity hints to be set before
its tagset initialized, so there was no cpu mask to set the hint. This
patch moves the affinity hint setting to after namespaces are scanned.

	Reported-by: 김경산 <ks0204.kim@samsung.com>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit bda4e0fb3126aca15586d165b5a15a37edc0a984)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index db4198bd70b4,30758bdf69ea..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -2296,17 -2462,11 +2312,22 @@@ static void nvme_dev_scan(struct work_s
  
  	if (!dev->tagset.tags)
  		return;
 -	if (nvme_identify_ctrl(dev, &ctrl))
 +
 +	mem = dma_alloc_coherent(&dev->pci_dev->dev, 4096, &dma_addr, GFP_KERNEL);
 +	if (!mem)
 +		return;
 +	if (nvme_identify(dev, 0, 1, dma_addr)) {
 +		dma_free_coherent(&dev->pci_dev->dev, 4096, mem, dma_addr);
  		return;
 +	}
 +	ctrl = mem;
  	nvme_scan_namespaces(dev, le32_to_cpup(&ctrl->nn));
++<<<<<<< HEAD
 +	dma_free_coherent(&dev->pci_dev->dev, 4096, mem, dma_addr);
++=======
+ 	kfree(ctrl);
+ 	nvme_set_irq_hints(dev);
++>>>>>>> bda4e0fb3126 (NVMe: Set affinity after allocating request queues)
  }
  
  /*
* Unmerged path drivers/block/nvme-core.c
