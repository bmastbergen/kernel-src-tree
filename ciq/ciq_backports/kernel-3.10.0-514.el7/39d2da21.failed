kernel/watchdog.c: fix race between proc_watchdog_thresh() and watchdog_timer_fn()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [kernel] watchdog: fix race between proc_watchdog_thresh() and watchdog_timer_fn() (David Arcari) [1290573]
Rebuild_FUZZ: 94.19%
commit-author Ulrich Obergfell <uobergfe@redhat.com>
commit 39d2da2161d35de301ec5397ce9103c68b883054
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/39d2da21.failed

Theoretically it is possible that the watchdog timer expires right at the
time when a user sets 'watchdog_thresh' to zero (note: this disables the
lockup detectors).  In this scenario, the is_softlockup() function - which
is called by the timer - could produce a false positive.

Fix this by checking the current value of 'watchdog_thresh'.

	Signed-off-by: Ulrich Obergfell <uobergfe@redhat.com>
	Acked-by: Don Zickus <dzickus@redhat.com>
	Reviewed-by: Aaron Tomlin <atomlin@redhat.com>
	Cc: Ulrich Obergfell <uobergfe@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 39d2da2161d35de301ec5397ce9103c68b883054)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/watchdog.c
diff --cc kernel/watchdog.c
index edde5b1f4a45,18f34cf75f74..000000000000
--- a/kernel/watchdog.c
+++ b/kernel/watchdog.c
@@@ -263,10 -289,11 +263,18 @@@ static int is_softlockup(unsigned long 
  {
  	unsigned long now = get_timestamp();
  
++<<<<<<< HEAD
 +	/* Warn about unreasonable delays: */
 +	if (time_after(now, touch_ts + get_softlockup_thresh()))
 +		return now - touch_ts;
 +
++=======
+ 	if ((watchdog_enabled & SOFT_WATCHDOG_ENABLED) && watchdog_thresh){
+ 		/* Warn about unreasonable delays. */
+ 		if (time_after(now, touch_ts + get_softlockup_thresh()))
+ 			return now - touch_ts;
+ 	}
++>>>>>>> 39d2da2161d3 (kernel/watchdog.c: fix race between proc_watchdog_thresh() and watchdog_timer_fn())
  	return 0;
  }
  
* Unmerged path kernel/watchdog.c
