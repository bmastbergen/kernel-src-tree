ceph: fix queuing inode to mdsdir's snaprealm

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Yan, Zheng <zyan@redhat.com>
commit 23078637e05460428f803be7d0f46908df8a970a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/23078637.failed

During MDS failovers, MClientSnap message may cause kclient to move
some inodes from root directory's snaprealm to mdsdir's snaprealm
and queue snapshots for these inodes. For a FS has never created any
snapshot, both root directory's snaprealm and mdsdir's snaprealm
share the same snapshot contexts (both are ceph_empty_snapc). This
confuses ceph_put_wrbuffer_cap_refs(), make it unable to distinguish
snapshot buffers from head buffers.

The fix is do not use ceph_empty_snapc as snaprealm's cached context.

	Signed-off-by: Yan, Zheng <zyan@redhat.com>
(cherry picked from commit 23078637e05460428f803be7d0f46908df8a970a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/snap.c
diff --cc fs/ceph/snap.c
index 1a61764cd591,4aa7122a8d38..000000000000
--- a/fs/ceph/snap.c
+++ b/fs/ceph/snap.c
@@@ -338,12 -338,6 +338,15 @@@ static int build_snap_context(struct ce
  		return 0;
  	}
  
++<<<<<<< HEAD
 +	if (num == 0 && realm->seq == empty_snapc->seq) {
 +		ceph_get_snap_context(empty_snapc);
 +		snapc = empty_snapc;
 +		goto done;
 +	}
 +
++=======
++>>>>>>> 23078637e054 (ceph: fix queuing inode to mdsdir's snaprealm)
  	/* alloc new snap context */
  	err = -ENOMEM;
  	if (num > (SIZE_MAX - sizeof(*snapc)) / sizeof(u64))
* Unmerged path fs/ceph/snap.c
