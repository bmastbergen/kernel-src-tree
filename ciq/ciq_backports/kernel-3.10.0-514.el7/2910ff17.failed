md: remove_and_add_spares() to activate specific rdev

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [md] remove_and_add_spares() to activate specific rdev (Jes Sorensen) [1250578 1265947 1273343 1299140 1307091 1312828 1320563 1340839]
Rebuild_FUZZ: 96.08%
commit-author Goldwyn Rodrigues <rgoldwyn@suse.com>
commit 2910ff17d154baa5eb50e362a91104e831eb2bb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2910ff17.failed

remove_and_add_spares() checks for all devices to activate spare.
Change it to activate a specific device if a non-null rdev
argument is passed.

remove_and_add_spares() can be used to activate spares in
slot_store() as well.

For hot_remove_disk(), check if rdev->raid_disk == -1 before
calling remove_and_add_spares()

	Signed-off-by: Goldwyn Rodrigues <rgoldwyn@suse.com>
(cherry picked from commit 2910ff17d154baa5eb50e362a91104e831eb2bb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 6e3ac85f2952,e21a2feed826..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -5944,18 -5995,34 +5938,41 @@@ static int hot_remove_disk(struct mdde
  	if (!rdev)
  		return -ENXIO;
  
++<<<<<<< HEAD
++=======
+ 	if (mddev_is_clustered(mddev))
+ 		md_cluster_ops->metadata_update_start(mddev);
+ 
+ 	if (rdev->raid_disk < 0)
+ 		goto kick_rdev;
+ 
++>>>>>>> 2910ff17d154 (md: remove_and_add_spares() to activate specific rdev)
  	clear_bit(Blocked, &rdev->flags);
  	remove_and_add_spares(mddev, rdev);
  
  	if (rdev->raid_disk >= 0)
  		goto busy;
  
++<<<<<<< HEAD
 +	kick_rdev_from_array(rdev);
++=======
+ kick_rdev:
+ 	if (mddev_is_clustered(mddev))
+ 		md_cluster_ops->remove_disk(mddev, rdev);
+ 
+ 	md_kick_rdev_from_array(rdev);
++>>>>>>> 2910ff17d154 (md: remove_and_add_spares() to activate specific rdev)
  	md_update_sb(mddev, 1);
  	md_new_event(mddev);
  
 -	if (mddev_is_clustered(mddev))
 -		md_cluster_ops->metadata_update_finish(mddev);
 -
  	return 0;
  busy:
++<<<<<<< HEAD
++=======
+ 	if (mddev_is_clustered(mddev))
+ 		md_cluster_ops->metadata_update_cancel(mddev);
+ 
++>>>>>>> 2910ff17d154 (md: remove_and_add_spares() to activate specific rdev)
  	printk(KERN_WARNING "md: cannot remove active disk %s from %s ...\n",
  		bdevname(rdev->bdev,b), mdname(mddev));
  	return -EBUSY;
* Unmerged path drivers/md/md.c
