perf/x86/intel/rapl: Clean up the printk output

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 512089d98457b7913d2e4762a44af52fbcd87470
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/512089d9.failed

The output is inconsistent. Use a proper pr_fmt prefix and split out the
advertisement into a seperate function.

Remove the WARN_ON() in the failure case. It's pointless as we already know
where it failed.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Andi Kleen <andi.kleen@intel.com>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Harish Chegondi <harish.chegondi@intel.com>
	Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Kan Liang <kan.liang@intel.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Cc: linux-kernel@vger.kernel.org
Link: http://lkml.kernel.org/r/20160222221012.504551295@linutronix.de
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 512089d98457b7913d2e4762a44af52fbcd87470)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/perf_event_intel_rapl.c
diff --cc arch/x86/kernel/cpu/perf_event_intel_rapl.c
index c019c57572a7,f31e4b417adf..000000000000
--- a/arch/x86/kernel/cpu/perf_event_intel_rapl.c
+++ b/arch/x86/kernel/cpu/perf_event_intel_rapl.c
@@@ -696,6 -667,45 +699,32 @@@ static int rapl_check_hw_unit(void
  	return 0;
  }
  
++<<<<<<< HEAD:arch/x86/kernel/cpu/perf_event_intel_rapl.c
++=======
+ static void __init rapl_advertise(void)
+ {
+ 	int i;
+ 
+ 	pr_info("API unit is 2^-32 Joules, %d fixed counters, %llu ms ovfl timer\n",
+ 		hweight32(rapl_cntr_mask), rapl_timer_ms);
+ 
+ 	for (i = 0; i < NR_RAPL_DOMAINS; i++) {
+ 		if (rapl_cntr_mask & (1 << i)) {
+ 			pr_info("hw unit of domain %s 2^-%d Joules\n",
+ 				rapl_domain_names[i], rapl_hw_unit[i]);
+ 		}
+ 	}
+ }
+ 
+ static void __init cleanup_rapl_pmus(void)
+ {
+ 	int cpu;
+ 
+ 	for_each_online_cpu(cpu)
+ 		kfree(per_cpu(rapl_pmu, cpu));
+ }
+ 
++>>>>>>> 512089d98457 (perf/x86/intel/rapl: Clean up the printk output):arch/x86/events/intel/rapl.c
  static const struct x86_cpu_id rapl_cpu_match[] = {
  	[0] = { .vendor = X86_VENDOR_INTEL, .family = 6 },
  	[1] = {},
@@@ -703,10 -713,8 +732,15 @@@
  
  static int __init rapl_pmu_init(void)
  {
++<<<<<<< HEAD:arch/x86/kernel/cpu/perf_event_intel_rapl.c
 +	struct rapl_pmu *pmu;
 +	int cpu, ret;
 +	struct x86_pmu_quirk *quirk;
 +	int i;
++=======
+ 	void (*quirk)(void) = NULL;
+ 	int cpu, ret;
++>>>>>>> 512089d98457 (perf/x86/intel/rapl: Clean up the printk output):arch/x86/events/intel/rapl.c
  
  	/*
  	 * check for Intel processor family 6
@@@ -762,32 -768,19 +796,48 @@@
  		rapl_cpu_init(cpu);
  	}
  
 +	__perf_cpu_notifier(rapl_cpu_notifier);
 +
  	ret = perf_pmu_register(&rapl_pmu_class, "power", -1);
++<<<<<<< HEAD:arch/x86/kernel/cpu/perf_event_intel_rapl.c
 +	if (WARN_ON(ret)) {
 +		pr_info("RAPL PMU detected, registration failed (%d), RAPL PMU disabled\n", ret);
 +		cpu_notifier_register_done();
 +		return -1;
 +	}
 +
 +	pmu = __get_cpu_var(rapl_pmu);
 +
 +	pr_info("RAPL PMU detected,"
 +		" API unit is 2^-32 Joules,"
 +		" %d fixed counters"
 +		" %llu ms ovfl timer\n",
 +		hweight32(rapl_cntr_mask),
 +		ktime_to_ms(pmu->timer_interval));
 +	for (i = 0; i < NR_RAPL_DOMAINS; i++) {
 +		if (rapl_cntr_mask & (1 << i)) {
 +			pr_info("hw unit of domain %s 2^-%d Joules\n",
 +				rapl_domain_names[i], rapl_hw_unit[i]);
 +		}
 +	}
 +out:
 +	cpu_notifier_register_done();
 +
 +	return 0;
++=======
+ 	if (ret)
+ 		goto out;
+ 
+ 	__perf_cpu_notifier(rapl_cpu_notifier);
+ 	cpu_notifier_register_done();
+ 	rapl_advertise();
+ 	return 0;
+ 
+ out:
+ 	pr_warn("Initialization failed (%d), disabled\n", ret);
+ 	cleanup_rapl_pmus();
+ 	cpu_notifier_register_done();
+ 	return ret;
++>>>>>>> 512089d98457 (perf/x86/intel/rapl: Clean up the printk output):arch/x86/events/intel/rapl.c
  }
  device_initcall(rapl_pmu_init);
* Unmerged path arch/x86/kernel/cpu/perf_event_intel_rapl.c
