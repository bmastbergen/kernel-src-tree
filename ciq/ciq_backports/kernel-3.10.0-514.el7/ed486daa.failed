cxlflash: Correct behavior in device reset handler following EEH

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
commit ed486daad27afdcb24cee4ea0b1c9f44281e74fc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ed486daa.failed

When the device reset handler is entered while a reset operation
is taking place, the handler exits without actually sending a
reset (TMF) to the targeted device. This behavior is incorrect
as the device is not reset. Further complicating matters is the
fact that a success is returned even when the TMF was not sent.

To fix, the state is rechecked after coming out of the reset
state. When the state is normal, a TMF will be sent out.

	Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
	Signed-off-by: Manoj N. Kumar <manoj@linux.vnet.ibm.com>
	Reviewed-by: Brian King <brking@linux.vnet.ibm.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: James Bottomley <JBottomley@Odin.com>
(cherry picked from commit ed486daad27afdcb24cee4ea0b1c9f44281e74fc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/cxlflash/main.c
* Unmerged path drivers/scsi/cxlflash/main.c
* Unmerged path drivers/scsi/cxlflash/main.c
