kvm: x86: Update tsc multiplier on change.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] kvm: x86: Update tsc multiplier on change (Paolo Bonzini) [1301888]
Rebuild_FUZZ: 98.80%
commit-author Owen Hofmann <osh@google.com>
commit 2680d6da455b636dd006636780c0f235c6561d70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2680d6da.failed

vmx.c writes the TSC_MULTIPLIER field in vmx_vcpu_load, but only when a
vcpu has migrated physical cpus. Record the last value written and
update in vmx_vcpu_load on any change, otherwise a cpu migration must
occur for TSC frequency scaling to take effect.

	Cc: stable@vger.kernel.org
Fixes: ff2c3a1803775cc72dc6f624b59554956396b0ee
	Signed-off-by: Owen Hofmann <osh@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 2680d6da455b636dd006636780c0f235c6561d70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index 7895c6014c3f,0ff453749a90..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -1920,13 -2129,30 +1922,33 @@@ static void vmx_vcpu_load(struct kvm_vc
  		rdmsrl(MSR_IA32_SYSENTER_ESP, sysenter_esp);
  		vmcs_writel(HOST_IA32_SYSENTER_ESP, sysenter_esp); /* 22.2.3 */
  
- 		/* Setup TSC multiplier */
- 		if (cpu_has_vmx_tsc_scaling())
- 			vmcs_write64(TSC_MULTIPLIER,
- 				     vcpu->arch.tsc_scaling_ratio);
- 
  		vmx->loaded_vmcs->cpu = cpu;
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	/* Setup TSC multiplier */
+ 	if (kvm_has_tsc_control &&
+ 	    vmx->current_tsc_ratio != vcpu->arch.tsc_scaling_ratio) {
+ 		vmx->current_tsc_ratio = vcpu->arch.tsc_scaling_ratio;
+ 		vmcs_write64(TSC_MULTIPLIER, vmx->current_tsc_ratio);
+ 	}
+ 
+ 	vmx_vcpu_pi_load(vcpu, cpu);
+ }
+ 
+ static void vmx_vcpu_pi_put(struct kvm_vcpu *vcpu)
+ {
+ 	struct pi_desc *pi_desc = vcpu_to_pi_desc(vcpu);
+ 
+ 	if (!kvm_arch_has_assigned_device(vcpu->kvm) ||
+ 		!irq_remapping_cap(IRQ_POSTING_CAP))
+ 		return;
+ 
+ 	/* Set SN when the vCPU is preempted */
+ 	if (vcpu->preempted)
+ 		pi_set_sn(pi_desc);
++>>>>>>> 2680d6da455b (kvm: x86: Update tsc multiplier on change.)
  }
  
  static void vmx_vcpu_put(struct kvm_vcpu *vcpu)
* Unmerged path arch/x86/kvm/vmx.c
