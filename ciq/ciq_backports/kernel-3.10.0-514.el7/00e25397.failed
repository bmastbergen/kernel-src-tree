powerpc/fsl_msi: Move MSI-related ops to pci_controller_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] fsl_msi: Move MSI-related ops to pci_controller_ops (Gustavo Duarte) [1275657]
Rebuild_FUZZ: 92.73%
commit-author Daniel Axtens <dja@axtens.net>
commit 00e25397032f590d0a4d0ee89e236a4d1f8c0580
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/00e25397.failed

Move the fsl_msi subsystem to use the pci_controller_ops structure
rather than ppc_md for MSI related PCI controller operations.

Previously, MSI ops were added to ppc_md at the subsys level. However,
in fsl_pci.c, PCI controllers are created at the at arch level. So,
unlike in e.g. PowerNV/pSeries/Cell, we can't simply populate a
platform-level controller ops structure and have it copied into the
controllers when they are created.

Instead, walk every phb, and attempt to populate it with the MSI ops.

	Signed-off-by: Daniel Axtens <dja@axtens.net>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 00e25397032f590d0a4d0ee89e236a4d1f8c0580)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/sysdev/fsl_msi.c
diff --cc arch/powerpc/sysdev/fsl_msi.c
index ab02db3d02d8,5236e5427c38..000000000000
--- a/arch/powerpc/sysdev/fsl_msi.c
+++ b/arch/powerpc/sysdev/fsl_msi.c
@@@ -375,7 -405,7 +375,11 @@@ static int fsl_of_msi_probe(struct plat
  	const struct fsl_msi_feature *features;
  	int len;
  	u32 offset;
++<<<<<<< HEAD
 +	static const u32 all_avail[] = { 0, NR_MSI_IRQS };
++=======
+ 	struct pci_controller *phb;
++>>>>>>> 00e25397032f (powerpc/fsl_msi: Move MSI-related ops to pci_controller_ops)
  
  	match = of_match_device(fsl_of_msi_ids, &dev->dev);
  	if (!match)
@@@ -472,15 -542,20 +476,32 @@@
  
  	list_add_tail(&msi->list, &msi_head);
  
++<<<<<<< HEAD
 +	/* The multiple setting ppc_md.setup_msi_irqs will not harm things */
 +	if (!ppc_md.setup_msi_irqs) {
 +		ppc_md.setup_msi_irqs = fsl_setup_msi_irqs;
 +		ppc_md.teardown_msi_irqs = fsl_teardown_msi_irqs;
 +		ppc_md.msi_check_device = fsl_msi_check_device;
 +	} else if (ppc_md.setup_msi_irqs != fsl_setup_msi_irqs) {
 +		dev_err(&dev->dev, "Different MSI driver already installed!\n");
 +		err = -ENODEV;
 +		goto error_out;
++=======
+ 	/*
+ 	 * Apply the MSI ops to all the controllers.
+ 	 * It doesn't hurt to reassign the same ops,
+ 	 * but bail out if we find another MSI driver.
+ 	 */
+ 	list_for_each_entry(phb, &hose_list, list_node) {
+ 		if (!phb->controller_ops.setup_msi_irqs) {
+ 			phb->controller_ops.setup_msi_irqs = fsl_setup_msi_irqs;
+ 			phb->controller_ops.teardown_msi_irqs = fsl_teardown_msi_irqs;
+ 		} else if (phb->controller_ops.setup_msi_irqs != fsl_setup_msi_irqs) {
+ 			dev_err(&dev->dev, "Different MSI driver already installed!\n");
+ 			err = -ENODEV;
+ 			goto error_out;
+ 		}
++>>>>>>> 00e25397032f (powerpc/fsl_msi: Move MSI-related ops to pci_controller_ops)
  	}
  	return 0;
  error_out:
* Unmerged path arch/powerpc/sysdev/fsl_msi.c
