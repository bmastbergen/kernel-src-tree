sched/fair: Clean up update_sg_lb_stats() a bit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [kernel] sched: Clean up update_sg_lb_stats() a bit (Jiri Olsa) [1211784]
Rebuild_FUZZ: 94.38%
commit-author Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
commit 380c9077b38df2962a22f00f21f6cd0db62d3390
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/380c9077.failed

Add rq->nr_running to sgs->sum_nr_running directly instead of
assigning it through an intermediate variable nr_running.

	Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/1384508212-25032-1-git-send-email-kamalesh@linux.vnet.ibm.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 380c9077b38df2962a22f00f21f6cd0db62d3390)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/fair.c
diff --cc kernel/sched/fair.c
index cc3e37c91e45,a566c0739f77..000000000000
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@@ -5654,10 -5498,8 +5654,9 @@@ static inline int sg_capacity(struct lb
   */
  static inline void update_sg_lb_stats(struct lb_env *env,
  			struct sched_group *group, int load_idx,
 -			int local_group, struct sg_lb_stats *sgs)
 +			int local_group, struct sg_lb_stats *sgs,
 +			bool *overload)
  {
- 	unsigned long nr_running;
  	unsigned long load;
  	int i;
  
@@@ -5673,11 -5515,7 +5670,15 @@@
  			load = source_load(i, load_idx);
  
  		sgs->group_load += load;
++<<<<<<< HEAD
 +		sgs->sum_nr_running += nr_running;
 +
 +		if (rq->nr_running > 1)
 +			*overload = true;
 +
++=======
+ 		sgs->sum_nr_running += rq->nr_running;
++>>>>>>> 380c9077b38d (sched/fair: Clean up update_sg_lb_stats() a bit)
  #ifdef CONFIG_NUMA_BALANCING
  		sgs->nr_numa_running += rq->nr_numa_running;
  		sgs->nr_preferred_running += rq->nr_preferred_running;
* Unmerged path kernel/sched/fair.c
