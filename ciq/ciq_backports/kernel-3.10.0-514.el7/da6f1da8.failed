ovs/gre: fix rtnl notifications on iface deletion

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] openvswitch: gre: fix rtnl notifications on iface deletion (Eric Garver) [1297476]
Rebuild_FUZZ: 89.72%
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit da6f1da819d4b9c081a477dec74dc468a0b44290
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/da6f1da8.failed

The function gretap_fb_dev_create() (only used by ovs) never calls
rtnl_configure_link(). The consequence is that dev->rtnl_link_state is
never set to RTNL_LINK_INITIALIZED.
During the deletion phase, the function rollback_registered_many() sends
a RTM_DELLINK only if dev->rtnl_link_state is set to RTNL_LINK_INITIALIZED.

Fixes: b2acd1dc3949 ("openvswitch: Use regular GRE net_device instead of vport")
CC: Thomas Graf <tgraf@suug.ch>
CC: Pravin B Shelar <pshelar@nicira.com>
	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit da6f1da819d4b9c081a477dec74dc468a0b44290)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ip_gre.c
diff --cc net/ipv4/ip_gre.c
index 3ae6be751377,07c5cf1838d8..000000000000
--- a/net/ipv4/ip_gre.c
+++ b/net/ipv4/ip_gre.c
@@@ -853,9 -1116,54 +853,57 @@@ static struct rtnl_link_ops ipgre_tap_o
  	.get_link_net	= ip_tunnel_get_link_net,
  };
  
++<<<<<<< HEAD
++=======
+ struct net_device *gretap_fb_dev_create(struct net *net, const char *name,
+ 					u8 name_assign_type)
+ {
+ 	struct nlattr *tb[IFLA_MAX + 1];
+ 	struct net_device *dev;
+ 	LIST_HEAD(list_kill);
+ 	struct ip_tunnel *t;
+ 	int err;
+ 
+ 	memset(&tb, 0, sizeof(tb));
+ 
+ 	dev = rtnl_create_link(net, name, name_assign_type,
+ 			       &ipgre_tap_ops, tb);
+ 	if (IS_ERR(dev))
+ 		return dev;
+ 
+ 	/* Configure flow based GRE device. */
+ 	t = netdev_priv(dev);
+ 	t->collect_md = true;
+ 
+ 	err = ipgre_newlink(net, dev, tb, NULL);
+ 	if (err < 0) {
+ 		free_netdev(dev);
+ 		return ERR_PTR(err);
+ 	}
+ 
+ 	/* openvswitch users expect packet sizes to be unrestricted,
+ 	 * so set the largest MTU we can.
+ 	 */
+ 	err = __ip_tunnel_change_mtu(dev, IP_MAX_MTU, false);
+ 	if (err)
+ 		goto out;
+ 
+ 	err = rtnl_configure_link(dev, NULL);
+ 	if (err < 0)
+ 		goto out;
+ 
+ 	return dev;
+ out:
+ 	ip_tunnel_dellink(dev, &list_kill);
+ 	unregister_netdevice_many(&list_kill);
+ 	return ERR_PTR(err);
+ }
+ EXPORT_SYMBOL_GPL(gretap_fb_dev_create);
+ 
++>>>>>>> da6f1da819d4 (ovs/gre: fix rtnl notifications on iface deletion)
  static int __net_init ipgre_tap_init_net(struct net *net)
  {
 -	return ip_tunnel_init_net(net, gre_tap_net_id, &ipgre_tap_ops, "gretap0");
 +	return ip_tunnel_init_net(net, gre_tap_net_id, &ipgre_tap_ops, NULL);
  }
  
  static void __net_exit ipgre_tap_exit_net(struct net *net)
* Unmerged path net/ipv4/ip_gre.c
