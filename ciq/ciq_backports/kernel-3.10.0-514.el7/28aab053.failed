mmc: sdhci: calculate timeout_clk conditionally in sdhci_add_host

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] sdhci: calculate timeout_clk conditionally in sdhci_add_host (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 96.00%
commit-author Aisheng Dong <b29396@freescale.com>
commit 28aab053396125c8e191537ec2b9781ec0174b04
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/28aab053.failed

The timeout_clk calculation code in sdhci_add_host is meaningless for
SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK.
So only execute them with no SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK set.

	Signed-off-by: Dong Aisheng <b29396@freescale.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 28aab053396125c8e191537ec2b9781ec0174b04)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci.c
diff --cc drivers/mmc/host/sdhci.c
index 083c3f4ebb88,1e50880d57de..000000000000
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@@ -2932,25 -2931,27 +2932,31 @@@ int sdhci_add_host(struct sdhci_host *h
  	} else
  		mmc->f_min = host->max_clk / SDHCI_MAX_DIV_SPEC_200;
  
- 	host->timeout_clk =
- 		(caps[0] & SDHCI_TIMEOUT_CLK_MASK) >> SDHCI_TIMEOUT_CLK_SHIFT;
- 	if (host->timeout_clk == 0) {
- 		if (host->ops->get_timeout_clock) {
- 			host->timeout_clk = host->ops->get_timeout_clock(host);
- 		} else if (!(host->quirks &
- 				SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK)) {
- 			pr_err("%s: Hardware doesn't specify timeout clock "
- 			       "frequency.\n", mmc_hostname(mmc));
- 			return -ENODEV;
+ 	if (!(host->quirks & SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK)) {
+ 		host->timeout_clk = (caps[0] & SDHCI_TIMEOUT_CLK_MASK) >>
+ 					SDHCI_TIMEOUT_CLK_SHIFT;
+ 		if (host->timeout_clk == 0) {
+ 			if (host->ops->get_timeout_clock) {
+ 				host->timeout_clk =
+ 					host->ops->get_timeout_clock(host);
+ 			} else {
+ 				pr_err("%s: Hardware doesn't specify timeout clock frequency.\n",
+ 					mmc_hostname(mmc));
+ 				return -ENODEV;
+ 			}
  		}
- 	}
- 	if (caps[0] & SDHCI_TIMEOUT_CLK_UNIT)
- 		host->timeout_clk *= 1000;
  
- 	if (host->quirks & SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK)
- 		host->timeout_clk = mmc->f_max / 1000;
+ 		if (caps[0] & SDHCI_TIMEOUT_CLK_UNIT)
+ 			host->timeout_clk *= 1000;
  
++<<<<<<< HEAD
 +	mmc->max_busy_timeout = (1 << 27) / host->timeout_clk;
++=======
+ 		mmc->max_busy_timeout = host->ops->get_max_timeout_count ?
+ 			host->ops->get_max_timeout_count(host) : 1 << 27;
+ 		mmc->max_busy_timeout /= host->timeout_clk;
+ 	}
++>>>>>>> 28aab0533961 (mmc: sdhci: calculate timeout_clk conditionally in sdhci_add_host)
  
  	mmc->caps |= MMC_CAP_SDIO_IRQ | MMC_CAP_ERASE | MMC_CAP_CMD23;
  	mmc->caps2 |= MMC_CAP2_SDIO_IRQ_NOTHREAD;
* Unmerged path drivers/mmc/host/sdhci.c
