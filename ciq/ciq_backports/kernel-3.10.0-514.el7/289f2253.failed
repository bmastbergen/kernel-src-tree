openvswitch: Find existing conntrack entry after upcall.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [net] openvswitch: Find existing conntrack entry after upcall (Lance Richardson) [1297465]
Rebuild_FUZZ: 99.10%
commit-author Jarno Rajahalme <jarno@ovn.org>
commit 289f225349cb2a97448fd14599ab34b741f706f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/289f2253.failed

Add a new function ovs_ct_find_existing() to find an existing
conntrack entry for which this packet was already applied to.  This is
only to be called when there is evidence that the packet was already
tracked and committed, but we lost the ct reference due to an
userspace upcall.

ovs_ct_find_existing() is called from skb_nfct_cached(), which can now
hide the fact that the ct reference may have been lost due to an
upcall.  This allows ovs_ct_commit() to be simplified.

This patch is needed by later "openvswitch: Interface with NAT" patch,
as we need to be able to pass the packet through NAT using the
original ct reference also after the reference is lost after an
upcall.

	Signed-off-by: Jarno Rajahalme <jarno@ovn.org>
	Acked-by: Joe Stringer <joe@ovn.org>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 289f225349cb2a97448fd14599ab34b741f706f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/conntrack.c
* Unmerged path net/openvswitch/conntrack.c
* Unmerged path net/openvswitch/conntrack.c
