IB/hfi1: Don't call cond_resched in atomic mode when sending packets

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kaike Wan <kaike.wan@intel.com>
commit 831464ce4b74eaec723bad51ea48fe3879732f66
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/831464ce.failed

This patch fixed the problem where the driver might reschedule in atomic
mode when sending packets. This is due to the fact that the call to
cond_resched() in hfi1_do_send() might occur in atomic mode and a check is
required to avoid the warning message:
    "kernel: BUG: scheduling while atomic: swapper/2/0/0x10000100."

	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Signed-off-by: Kaike Wan <kaike.wan@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 831464ce4b74eaec723bad51ea48fe3879732f66)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/ruc.c
diff --cc drivers/staging/hfi1/ruc.c
index c4280b6f47d4,08813cdbd475..000000000000
--- a/drivers/staging/hfi1/ruc.c
+++ b/drivers/staging/hfi1/ruc.c
@@@ -859,18 -890,34 +859,42 @@@ void hfi1_do_send(struct work_struct *w
  			 * the send tasklet will be woken up later.
  			 */
  			if (hfi1_verbs_send(qp, &ps))
 -				return;
 +				break;
  			/* Record that s_hdr is empty. */
  			qp->s_hdrwords = 0;
++<<<<<<< HEAD:drivers/staging/hfi1/ruc.c
++=======
+ 			/* allow other tasks to run */
+ 			if (unlikely(time_after(jiffies, timeout))) {
+ 				if (workqueue_congested(cpu,
+ 							ps.ppd->hfi1_wq)) {
+ 					spin_lock_irqsave(&qp->s_lock, flags);
+ 					qp->s_flags &= ~RVT_S_BUSY;
+ 					hfi1_schedule_send(qp);
+ 					spin_unlock_irqrestore(&qp->s_lock,
+ 							       flags);
+ 					this_cpu_inc(
+ 						*ps.ppd->dd->send_schedule);
+ 					return;
+ 				}
+ 				if (!irqs_disabled()) {
+ 					cond_resched();
+ 					this_cpu_inc(
+ 					   *ps.ppd->dd->send_schedule);
+ 				}
+ 				timeout = jiffies + (timeout_int) / 8;
+ 			}
+ 			spin_lock_irqsave(&qp->s_lock, flags);
++>>>>>>> 831464ce4b74 (IB/hfi1: Don't call cond_resched in atomic mode when sending packets):drivers/staging/rdma/hfi1/ruc.c
  		}
 -	} while (make_req(qp, &ps));
  
 -	spin_unlock_irqrestore(&qp->s_lock, flags);
 +		/* allow other tasks to run */
 +		if (unlikely(time_after(jiffies, timeout))) {
 +			cond_resched();
 +			ps.ppd->dd->verbs_dev.n_send_schedule++;
 +			timeout = jiffies + SEND_RESCHED_TIMEOUT;
 +		}
 +	} while (make_req(qp));
  }
  
  /*
* Unmerged path drivers/staging/hfi1/ruc.c
