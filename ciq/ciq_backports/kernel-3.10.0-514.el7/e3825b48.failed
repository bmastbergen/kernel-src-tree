USB: OHCI: make ohci-at91 a separate driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [usb] ohci: make ohci-at91 a separate driver (Don Zickus) [1303209]
Rebuild_FUZZ: 93.83%
commit-author Manjunath Goudar <manjunath.goudar@linaro.org>
commit e3825b48e2cc8014b3088f8bff1c5f35652f298d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e3825b48.failed

Separate the  TI OHCI Atmel host controller driver from ohci-hcd
host code so that it can be built as a separate driver module.
This work is part of enabling multi-platform kernels on ARM.

	Signed-off-by: Manjunath Goudar <manjunath.goudar@linaro.org>
	Signed-off-by: Deepak Saxena <dsaxena@linaro.org>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit e3825b48e2cc8014b3088f8bff1c5f35652f298d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/Kconfig
#	drivers/usb/host/Makefile
#	drivers/usb/host/ohci-at91.c
diff --cc drivers/usb/host/Kconfig
index 14e3c49416bf,152c68090cd9..000000000000
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@@ -379,8 -373,24 +379,27 @@@ config USB_OHCI_HCD_OMAP
  	---help---
  	  Enables support for the OHCI controller on OMAP1/2 chips.
  
++<<<<<<< HEAD
++=======
+ config USB_OHCI_HCD_SPEAR
+         tristate "Support for ST SPEAr on-chip OHCI USB controller"
+         depends on USB_OHCI_HCD && PLAT_SPEAR
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           ST SPEAr chips.
+ 
+ config USB_OHCI_HCD_AT91
+         tristate "Support for Atmel on-chip OHCI USB controller"
+         depends on USB_OHCI_HCD && ARCH_AT91
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           Atmel chips.
+ 
++>>>>>>> e3825b48e2cc (USB: OHCI: make ohci-at91 a separate driver)
  config USB_OHCI_HCD_OMAP3
 -	tristate "OHCI support for OMAP3 and later chips"
 +	bool "OHCI support for OMAP3 and later chips"
  	depends on (ARCH_OMAP3 || ARCH_OMAP4)
  	default y
  	---help---
diff --cc drivers/usb/host/Makefile
index 602b80e40777,15dc677e7889..000000000000
--- a/drivers/usb/host/Makefile
+++ b/drivers/usb/host/Makefile
@@@ -44,6 -48,10 +44,13 @@@ obj-$(CONFIG_USB_OHCI_HCD)	+= ohci-hcd.
  obj-$(CONFIG_USB_OHCI_HCD_PCI)	+= ohci-pci.o
  obj-$(CONFIG_USB_OHCI_HCD_PLATFORM)	+= ohci-platform.o
  obj-$(CONFIG_USB_OHCI_EXYNOS)	+= ohci-exynos.o
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_USB_OHCI_HCD_OMAP1)	+= ohci-omap.o
+ obj-$(CONFIG_USB_OHCI_HCD_OMAP3)	+= ohci-omap3.o
+ obj-$(CONFIG_USB_OHCI_HCD_SPEAR)	+= ohci-spear.o
+ obj-$(CONFIG_USB_OHCI_HCD_AT91)	+= ohci-at91.o
++>>>>>>> e3825b48e2cc (USB: OHCI: make ohci-at91 a separate driver)
  
  obj-$(CONFIG_USB_UHCI_HCD)	+= uhci-hcd.o
  obj-$(CONFIG_USB_FHCI_HCD)	+= fhci.o
diff --cc drivers/usb/host/ohci-at91.c
index 2ee1496dbc1d,476b5a5baf25..000000000000
--- a/drivers/usb/host/ohci-at91.c
+++ b/drivers/usb/host/ohci-at91.c
@@@ -31,9 -36,19 +36,24 @@@
  #define at91_for_each_port(index)	\
  		for ((index) = 0; (index) < AT91_MAX_USBH_PORTS; (index)++)
  
++<<<<<<< HEAD
 +/* interface and function clocks; sometimes also an AHB clock */
 +static struct clk *iclk, *fclk, *hclk;
++=======
+ /* interface, function and usb clocks; sometimes also an AHB clock */
+ static struct clk *iclk, *fclk, *uclk, *hclk;
+ /* interface and function clocks; sometimes also an AHB clock */
+ 
+ #define DRIVER_DESC "OHCI Atmel driver"
+ 
+ static const char hcd_name[] = "ohci-atmel";
+ 
+ static struct hc_driver __read_mostly ohci_at91_hc_driver;
++>>>>>>> e3825b48e2cc (USB: OHCI: make ohci-at91 a separate driver)
  static int clocked;
+ static int (*orig_ohci_hub_control)(struct usb_hcd  *hcd, u16 typeReq,
+ 			u16 wValue, u16 wIndex, char *buf, u16 wLength);
+ static int (*orig_ohci_hub_status_data)(struct usb_hcd *hcd, char *buf);
  
  extern int usb_disabled(void);
  
@@@ -162,9 -185,19 +184,11 @@@ static int usb_hcd_at91_probe(const str
  		retval = PTR_ERR(hclk);
  		goto err5;
  	}
 -	if (IS_ENABLED(CONFIG_COMMON_CLK)) {
 -		uclk = clk_get(&pdev->dev, "usb_clk");
 -		if (IS_ERR(uclk)) {
 -			dev_err(&pdev->dev, "failed to get uclk\n");
 -			retval = PTR_ERR(uclk);
 -			goto err6;
 -		}
 -	}
  
+ 	board = hcd->self.controller->platform_data;
+ 	ohci = hcd_to_ohci(hcd);
+ 	ohci->num_ports = board->ports;
  	at91_start_hc(pdev);
- 	ohci_hcd_init(hcd_to_ohci(hcd));
  
  	retval = usb_add_hcd(hcd, pdev->resource[1].start, IRQF_SHARED);
  	if (retval == 0)
@@@ -221,36 -257,6 +245,39 @@@ static void usb_hcd_at91_remove(struct 
  }
  
  /*-------------------------------------------------------------------------*/
++<<<<<<< HEAD
 +
 +static int
 +ohci_at91_reset (struct usb_hcd *hcd)
 +{
 +	struct at91_usbh_data	*board = hcd->self.controller->platform_data;
 +	struct ohci_hcd		*ohci = hcd_to_ohci (hcd);
 +	int			ret;
 +
 +	if ((ret = ohci_init(ohci)) < 0)
 +		return ret;
 +
 +	ohci->num_ports = board->ports;
 +	return 0;
 +}
 +
 +static int
 +ohci_at91_start (struct usb_hcd *hcd)
 +{
 +	struct ohci_hcd		*ohci = hcd_to_ohci (hcd);
 +	int			ret;
 +
 +	if ((ret = ohci_run(ohci)) < 0) {
 +		dev_err(hcd->self.controller, "can't start %s\n",
 +			hcd->self.bus_name);
 +		ohci_stop(hcd);
 +		return ret;
 +	}
 +	return 0;
 +}
 +
++=======
++>>>>>>> e3825b48e2cc (USB: OHCI: make ohci-at91 a separate driver)
  static void ohci_at91_usb_set_power(struct at91_usbh_data *pdata, int port, int enable)
  {
  	if (!valid_port(port))
@@@ -281,7 -287,7 +308,11 @@@ static int ohci_at91_usb_get_power(stru
  static int ohci_at91_hub_status_data(struct usb_hcd *hcd, char *buf)
  {
  	struct at91_usbh_data *pdata = hcd->self.controller->platform_data;
++<<<<<<< HEAD
 +	int length = ohci_hub_status_data(hcd, buf);
++=======
+ 	int length = orig_ohci_hub_status_data(hcd, buf);
++>>>>>>> e3825b48e2cc (USB: OHCI: make ohci-at91 a separate driver)
  	int port;
  
  	at91_for_each_port(port) {
* Unmerged path drivers/usb/host/Kconfig
* Unmerged path drivers/usb/host/Makefile
* Unmerged path drivers/usb/host/ohci-at91.c
diff --git a/drivers/usb/host/ohci-hcd.c b/drivers/usb/host/ohci-hcd.c
index 31d50d19b73d..576516a12f04 100644
--- a/drivers/usb/host/ohci-hcd.c
+++ b/drivers/usb/host/ohci-hcd.c
@@ -1237,11 +1237,6 @@ MODULE_LICENSE ("GPL");
 #define EP93XX_PLATFORM_DRIVER	ohci_hcd_ep93xx_driver
 #endif
 
-#ifdef CONFIG_ARCH_AT91
-#include "ohci-at91.c"
-#define AT91_PLATFORM_DRIVER	ohci_hcd_at91_driver
-#endif
-
 #ifdef CONFIG_ARCH_LPC32XX
 #include "ohci-nxp.c"
 #define NXP_PLATFORM_DRIVER	usb_hcd_nxp_driver
@@ -1370,12 +1365,6 @@ static int __init ohci_hcd_mod_init(void)
 		goto error_ep93xx;
 #endif
 
-#ifdef AT91_PLATFORM_DRIVER
-	retval = platform_driver_register(&AT91_PLATFORM_DRIVER);
-	if (retval < 0)
-		goto error_at91;
-#endif
-
 #ifdef NXP_PLATFORM_DRIVER
 	retval = platform_driver_register(&NXP_PLATFORM_DRIVER);
 	if (retval < 0)
@@ -1409,10 +1398,6 @@ static int __init ohci_hcd_mod_init(void)
 	platform_driver_unregister(&NXP_PLATFORM_DRIVER);
  error_nxp:
 #endif
-#ifdef AT91_PLATFORM_DRIVER
-	platform_driver_unregister(&AT91_PLATFORM_DRIVER);
- error_at91:
-#endif
 #ifdef EP93XX_PLATFORM_DRIVER
 	platform_driver_unregister(&EP93XX_PLATFORM_DRIVER);
  error_ep93xx:
@@ -1473,9 +1458,6 @@ static void __exit ohci_hcd_mod_exit(void)
 #ifdef NXP_PLATFORM_DRIVER
 	platform_driver_unregister(&NXP_PLATFORM_DRIVER);
 #endif
-#ifdef AT91_PLATFORM_DRIVER
-	platform_driver_unregister(&AT91_PLATFORM_DRIVER);
-#endif
 #ifdef EP93XX_PLATFORM_DRIVER
 	platform_driver_unregister(&EP93XX_PLATFORM_DRIVER);
 #endif
