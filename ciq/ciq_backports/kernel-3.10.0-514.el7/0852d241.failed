IB/hfi1: Change default number of user contexts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jubin John <jubin.john@intel.com>
commit 0852d241f48463d80764f841f2e06c0f3c4da923
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0852d241.failed

Change the default number of user contexts to the number of real
(non-HT) cpu cores in order to reduce the division of hfi1 hardware
contexts in the case of high core counts with hyper-threading enabled.

	Reviewed-by: Dean Luick <dean.luick@intel.com>
	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Reviewed-by: Mitko Haralanov <mitko.haralanov@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 0852d241f48463d80764f841f2e06c0f3c4da923)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/chip.c
#	drivers/staging/hfi1/twsi.h
#	drivers/staging/rdma/hfi1/affinity.c
diff --cc drivers/staging/hfi1/chip.c
index 689fb76865d1,1984454ff116..000000000000
--- a/drivers/staging/hfi1/chip.c
+++ b/drivers/staging/hfi1/chip.c
@@@ -14134,6 -14116,8 +14148,11 @@@ struct hfi1_devdata *hfi1_init_dd(struc
  	/* set up KDETH QP prefix in both RX and TX CSRs */
  	init_kdeth_qp(dd);
  
++<<<<<<< HEAD:drivers/staging/hfi1/chip.c
++=======
+ 	hfi1_dev_affinity_init(dd);
+ 
++>>>>>>> 0852d241f484 (IB/hfi1: Change default number of user contexts):drivers/staging/rdma/hfi1/chip.c
  	/* send contexts must be set up before receive contexts */
  	ret = init_send_contexts(dd);
  	if (ret)
diff --cc drivers/staging/hfi1/twsi.h
index 6cb30e59b00f,20f52fe74091..000000000000
--- a/drivers/staging/hfi1/twsi.h
+++ b/drivers/staging/hfi1/twsi.h
@@@ -49,21 -44,65 +49,64 @@@
   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *
   */
 -#ifndef _HFI1_AFFINITY_H
 -#define _HFI1_AFFINITY_H
  
 -#include "hfi.h"
 +#define HFI1_TWSI_NO_DEV 0xFF
  
 -enum irq_type {
 -	IRQ_SDMA,
 -	IRQ_RCVCTXT,
 -	IRQ_GENERAL,
 -	IRQ_OTHER
 -};
 +struct hfi1_devdata;
  
 -/* Can be used for both memory and cpu */
 -enum affinity_flags {
 -	AFF_AUTO,
 -	AFF_NUMA_LOCAL,
 -	AFF_DEV_LOCAL,
 -	AFF_IRQ_LOCAL
 -};
 +/* Bit position of SDA/SCL pins in ASIC_QSFP* registers  */
 +#define  GPIO_SDA_NUM 1
 +#define  GPIO_SCL_NUM 0
 +
++<<<<<<< HEAD:drivers/staging/hfi1/twsi.h
 +/* these functions must be called with qsfp_lock held */
 +int hfi1_twsi_reset(struct hfi1_devdata *dd, u32 target);
 +int hfi1_twsi_blk_rd(struct hfi1_devdata *dd, u32 target, int dev, int addr,
 +		     void *buffer, int len);
 +int hfi1_twsi_blk_wr(struct hfi1_devdata *dd, u32 target, int dev, int addr,
 +		     const void *buffer, int len);
  
++=======
+ struct cpu_mask_set {
+ 	struct cpumask mask;
+ 	struct cpumask used;
+ 	uint gen;
+ };
+ 
+ struct hfi1_affinity {
+ 	struct cpu_mask_set def_intr;
+ 	struct cpu_mask_set rcv_intr;
+ 	struct cpu_mask_set proc;
+ 	struct cpumask real_cpu_mask;
+ 	/* spin lock to protect affinity struct */
+ 	spinlock_t lock;
+ };
+ 
+ struct hfi1_msix_entry;
+ 
+ /* Initialize non-HT cpu cores mask */
+ int init_real_cpu_mask(struct hfi1_devdata *);
+ /* Initialize driver affinity data */
+ void hfi1_dev_affinity_init(struct hfi1_devdata *);
+ /* Free driver affinity data */
+ void hfi1_dev_affinity_free(struct hfi1_devdata *);
+ /*
+  * Set IRQ affinity to a CPU. The function will determine the
+  * CPU and set the affinity to it.
+  */
+ int hfi1_get_irq_affinity(struct hfi1_devdata *, struct hfi1_msix_entry *);
+ /*
+  * Remove the IRQ's CPU affinity. This function also updates
+  * any internal CPU tracking data
+  */
+ void hfi1_put_irq_affinity(struct hfi1_devdata *, struct hfi1_msix_entry *);
+ /*
+  * Determine a CPU affinity for a user process, if the process does not
+  * have an affinity set yet.
+  */
+ int hfi1_get_proc_affinity(struct hfi1_devdata *, int);
+ /* Release a CPU used by a user process. */
+ void hfi1_put_proc_affinity(struct hfi1_devdata *, int);
++>>>>>>> 0852d241f484 (IB/hfi1: Change default number of user contexts):drivers/staging/rdma/hfi1/affinity.h
  
 -#endif /* _HFI1_AFFINITY_H */
 +#endif /* _TWSI_H */
* Unmerged path drivers/staging/rdma/hfi1/affinity.c
* Unmerged path drivers/staging/hfi1/chip.c
* Unmerged path drivers/staging/hfi1/twsi.h
* Unmerged path drivers/staging/rdma/hfi1/affinity.c
