mmc: tmio: tmio_mmc_host has .clk_disable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
commit 00452c11ea0e4e5822edf0ac46853933860d0f53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/00452c11.failed

Current .clk_disable is implemented under tmio_mmc_data.
It goes to tmio_mmc_host by this patch.

	Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
	Acked-by: Lee Jones <lee.jones@linaro.org>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit 00452c11ea0e4e5822edf0ac46853933860d0f53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mobile_sdhi.c
#	drivers/mmc/host/tmio_mmc.h
#	drivers/mmc/host/tmio_mmc_pio.c
#	include/linux/mfd/tmio.h
diff --cc drivers/mmc/host/sh_mobile_sdhi.c
index 79ee6f0c45bd,5e02a6a302e7..000000000000
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@@ -154,10 -207,19 +154,24 @@@ static int sh_mobile_sdhi_probe(struct 
  		goto eclkget;
  	}
  
++<<<<<<< HEAD
 +	mmc_data->clk_enable = sh_mobile_sdhi_clk_enable;
 +	mmc_data->clk_disable = sh_mobile_sdhi_clk_disable;
++=======
+ 	host = tmio_mmc_host_alloc(pdev);
+ 	if (!host) {
+ 		ret = -ENOMEM;
+ 		goto eprobe;
+ 	}
+ 
+ 	host->dma		= dma_priv;
+ 	host->write16_hook	= sh_mobile_sdhi_write16_hook;
+ 	host->clk_enable	= sh_mobile_sdhi_clk_enable;
+ 	host->clk_disable	= sh_mobile_sdhi_clk_disable;
+ 
++>>>>>>> 00452c11ea0e (mmc: tmio: tmio_mmc_host has .clk_disable)
  	mmc_data->capabilities = MMC_CAP_MMC_HIGHSPEED;
 -	mmc_data->multi_io_quirk = sh_mobile_sdhi_multi_io_quirk;
 +	mmc_data->write16_hook = sh_mobile_sdhi_write16_hook;
  	if (p) {
  		mmc_data->flags = p->tmio_flags;
  		mmc_data->ocr_mask = p->tmio_ocr_mask;
diff --cc drivers/mmc/host/tmio_mmc.h
index d857f5c6e7d9,28234ec5caa3..000000000000
--- a/drivers/mmc/host/tmio_mmc.h
+++ b/drivers/mmc/host/tmio_mmc.h
@@@ -85,10 -93,16 +85,18 @@@ struct tmio_mmc_host 
  	unsigned long		last_req_ts;
  	struct mutex		ios_lock;	/* protect set_ios() context */
  	bool			native_hotplug;
++<<<<<<< HEAD
++=======
+ 	bool			sdio_irq_enabled;
+ 
+ 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
+ 	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
+ 	void (*clk_disable)(struct platform_device *pdev);
++>>>>>>> 00452c11ea0e (mmc: tmio: tmio_mmc_host has .clk_disable)
  };
  
 -struct tmio_mmc_host *tmio_mmc_host_alloc(struct platform_device *pdev);
 -void tmio_mmc_host_free(struct tmio_mmc_host *host);
 -int tmio_mmc_host_probe(struct tmio_mmc_host *host,
 +int tmio_mmc_host_probe(struct tmio_mmc_host **host,
 +			struct platform_device *pdev,
  			struct tmio_mmc_data *pdata);
  void tmio_mmc_host_remove(struct tmio_mmc_host *host);
  void tmio_mmc_do_data_irq(struct tmio_mmc_host *host);
diff --cc drivers/mmc/host/tmio_mmc_pio.c
index d5da81365223,e33eb8ee5eb5..000000000000
--- a/drivers/mmc/host/tmio_mmc_pio.c
+++ b/drivers/mmc/host/tmio_mmc_pio.c
@@@ -1139,32 -1243,15 +1139,37 @@@ int tmio_mmc_host_suspend(struct devic
  {
  	struct mmc_host *mmc = dev_get_drvdata(dev);
  	struct tmio_mmc_host *host = mmc_priv(mmc);
 +	int ret = mmc_suspend_host(mmc);
  
 -	tmio_mmc_disable_mmc_irqs(host, TMIO_MASK_ALL);
 +	if (!ret)
 +		tmio_mmc_disable_mmc_irqs(host, TMIO_MASK_ALL);
  
 -	if (host->clk_cache)
 -		tmio_mmc_clk_stop(host);
 +	return ret;
 +}
 +EXPORT_SYMBOL(tmio_mmc_host_suspend);
  
 +int tmio_mmc_host_resume(struct device *dev)
 +{
 +	struct mmc_host *mmc = dev_get_drvdata(dev);
 +	struct tmio_mmc_host *host = mmc_priv(mmc);
 +
 +	tmio_mmc_reset(host);
 +	tmio_mmc_enable_dma(host, true);
 +
 +	/* The MMC core will perform the complete set up */
 +	return mmc_resume_host(mmc);
 +}
 +EXPORT_SYMBOL(tmio_mmc_host_resume);
 +
++<<<<<<< HEAD
 +#endif	/* CONFIG_PM */
++=======
+ 	if (host->clk_disable)
+ 		host->clk_disable(host->pdev);
++>>>>>>> 00452c11ea0e (mmc: tmio: tmio_mmc_host has .clk_disable)
  
 +int tmio_mmc_host_runtime_suspend(struct device *dev)
 +{
  	return 0;
  }
  EXPORT_SYMBOL(tmio_mmc_host_runtime_suspend);
diff --cc include/linux/mfd/tmio.h
index 38409958f913,a3f78da70af7..000000000000
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@@ -109,10 -125,7 +109,14 @@@ struct tmio_mmc_data 
  	unsigned int			cd_gpio;
  	void (*set_pwr)(struct platform_device *host, int state);
  	void (*set_clk_div)(struct platform_device *host, int state);
 -
++<<<<<<< HEAD
 +	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 +	/* clock management callbacks */
 +	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
 +	void (*clk_disable)(struct platform_device *pdev);
++=======
++
++>>>>>>> 00452c11ea0e (mmc: tmio: tmio_mmc_host has .clk_disable)
  	int (*multi_io_quirk)(struct mmc_card *card,
  			      unsigned int direction, int blk_size);
  };
* Unmerged path drivers/mmc/host/sh_mobile_sdhi.c
* Unmerged path drivers/mmc/host/tmio_mmc.h
* Unmerged path drivers/mmc/host/tmio_mmc_pio.c
* Unmerged path include/linux/mfd/tmio.h
