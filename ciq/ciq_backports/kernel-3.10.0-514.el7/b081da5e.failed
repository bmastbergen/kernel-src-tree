net/mlx5e: Add rx/tx bytes software counters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Gal Pressman <galp@mellanox.com>
commit b081da5ee1860d1874381a413a1b71d8f9f67e83
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b081da5e.failed

Sum up rx/tx bytes in software as we do for rx/tx packets, to be reported
in upcoming statistics fix.

	Signed-off-by: Gal Pressman <galp@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b081da5ee1860d1874381a413a1b71d8f9f67e83)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
index 3723f0407c45,bb4eeeb007de..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
@@@ -156,8 -175,11 +156,9 @@@ static netdev_tx_t mlx5e_sq_xmit(struc
  	struct mlx5_wqe_eth_seg  *eseg = &wqe->eth;
  	struct mlx5_wqe_data_seg *dseg;
  
 -	unsigned char *skb_data = skb->data;
 -	unsigned int skb_len = skb->len;
  	u8  opcode = MLX5_OPCODE_SEND;
  	dma_addr_t dma_addr = 0;
+ 	unsigned int num_bytes;
  	bool bf = false;
  	u16 headlen;
  	u16 ds_cnt;
@@@ -183,8 -205,7 +184,12 @@@
  		opcode       = MLX5_OPCODE_LSO;
  		ihs          = skb_transport_offset(skb) + tcp_hdrlen(skb);
  		payload_len  = skb->len - ihs;
++<<<<<<< HEAD
 +		MLX5E_TX_SKB_CB(skb)->num_bytes = skb->len +
 +					(skb_shinfo(skb)->gso_segs - 1) * ihs;
++=======
+ 		num_bytes = skb->len + (skb_shinfo(skb)->gso_segs - 1) * ihs;
++>>>>>>> b081da5ee186 (net/mlx5e: Add rx/tx bytes software counters)
  		sq->stats.tso_packets++;
  		sq->stats.tso_bytes += payload_len;
  	} else {
@@@ -192,16 -213,18 +197,22 @@@
  		     !skb->xmit_more &&
  		     !skb_shinfo(skb)->nr_frags;
  		ihs = mlx5e_get_inline_hdr_size(sq, skb, bf);
++<<<<<<< HEAD
 +		MLX5E_TX_SKB_CB(skb)->num_bytes = max_t(unsigned int, skb->len,
 +							ETH_ZLEN);
++=======
+ 		num_bytes = max_t(unsigned int, skb->len, ETH_ZLEN);
++>>>>>>> b081da5ee186 (net/mlx5e: Add rx/tx bytes software counters)
  	}
  
+ 	wi->num_bytes = num_bytes;
+ 
  	if (skb_vlan_tag_present(skb)) {
 -		mlx5e_insert_vlan(eseg->inline_hdr_start, skb, ihs, &skb_data,
 -				  &skb_len);
 +		mlx5e_insert_vlan(eseg->inline_hdr_start, skb, ihs);
  		ihs += VLAN_HLEN;
  	} else {
 -		memcpy(eseg->inline_hdr_start, skb_data, ihs);
 -		mlx5e_tx_skb_pull_inline(&skb_data, &skb_len, ihs);
 +		skb_copy_from_linear_data(skb, eseg->inline_hdr_start, ihs);
 +		skb_pull_inline(skb, ihs);
  	}
  
  	eseg->inline_hdr_sz = cpu_to_be16(ihs);
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index 897ad5870bf0..9579d78ae417 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -220,6 +220,7 @@ struct mlx5e_pport_stats {
 
 static const char rq_stats_strings[][ETH_GSTRING_LEN] = {
 	"packets",
+	"bytes",
 	"csum_none",
 	"csum_sw",
 	"lro_packets",
@@ -229,16 +230,18 @@ static const char rq_stats_strings[][ETH_GSTRING_LEN] = {
 
 struct mlx5e_rq_stats {
 	u64 packets;
+	u64 bytes;
 	u64 csum_none;
 	u64 csum_sw;
 	u64 lro_packets;
 	u64 lro_bytes;
 	u64 wqe_err;
-#define NUM_RQ_STATS 6
+#define NUM_RQ_STATS 7
 };
 
 static const char sq_stats_strings[][ETH_GSTRING_LEN] = {
 	"packets",
+	"bytes",
 	"tso_packets",
 	"tso_bytes",
 	"csum_offload_none",
@@ -250,6 +253,7 @@ static const char sq_stats_strings[][ETH_GSTRING_LEN] = {
 
 struct mlx5e_sq_stats {
 	u64 packets;
+	u64 bytes;
 	u64 tso_packets;
 	u64 tso_bytes;
 	u64 csum_offload_none;
@@ -257,7 +261,7 @@ struct mlx5e_sq_stats {
 	u64 wake;
 	u64 dropped;
 	u64 nop;
-#define NUM_SQ_STATS 8
+#define NUM_SQ_STATS 9
 };
 
 struct mlx5e_stats {
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index 2dc1f9b26b65..3292bf8fb2b2 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@ -256,6 +256,7 @@ int mlx5e_poll_rx_cq(struct mlx5e_cq *cq, int budget)
 
 		mlx5e_build_rx_skb(cqe, rq, skb);
 		rq->stats.packets++;
+		rq->stats.bytes += be32_to_cpu(cqe->byte_cnt);
 		napi_gro_receive(cq->napi, skb);
 
 wq_ll_pop:
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tx.c
