zram: export new 'mm_stat' sysfs attrs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
commit 4f2109f60881585dc04fa0b5657a60556576625c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4f2109f6.failed

Per-device `zram<id>/mm_stat' file provides mm statistics of a particular
zram device in a format similar to block layer statistics.  The file
consists of a single line and represents the following stats (separated by
whitespace):

        orig_data_size
        compr_data_size
        mem_used_total
        mem_limit
        mem_used_max
        zero_pages
        num_migrated

	Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Acked-by: Minchan Kim <minchan@kernel.org>
	Cc: Nitin Gupta <ngupta@vflare.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 4f2109f60881585dc04fa0b5657a60556576625c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/ABI/testing/sysfs-block-zram
#	drivers/block/zram/zram_drv.c
diff --cc Documentation/ABI/testing/sysfs-block-zram
index b13dc993291f,2e69e83bf510..000000000000
--- a/Documentation/ABI/testing/sysfs-block-zram
+++ b/Documentation/ABI/testing/sysfs-block-zram
@@@ -138,3 -141,28 +138,31 @@@ Description
  		amount of memory ZRAM can use to store the compressed data.  The
  		limit could be changed in run time and "0" means disable the
  		limit.  No limit is the initial state.  Unit: bytes
++<<<<<<< HEAD
++=======
+ 
+ What:		/sys/block/zram<id>/compact
+ Date:		August 2015
+ Contact:	Minchan Kim <minchan@kernel.org>
+ Description:
+ 		The compact file is write-only and trigger compaction for
+ 		allocator zrm uses. The allocator moves some objects so that
+ 		it could free fragment space.
+ 
+ What:		/sys/block/zram<id>/io_stat
+ Date:		August 2015
+ Contact:	Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
+ Description:
+ 		The io_stat file is read-only and accumulates device's I/O
+ 		statistics not accounted by block layer. For example,
+ 		failed_reads, failed_writes, etc. File format is similar to
+ 		block layer statistics file format.
+ 
+ What:		/sys/block/zram<id>/mm_stat
+ Date:		August 2015
+ Contact:	Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
+ Description:
+ 		The mm_stat file is read-only and represents device's mm
+ 		statistics (orig_data_size, compr_data_size, etc.) in a format
+ 		similar to block layer statistics file format.
++>>>>>>> 4f2109f60881 (zram: export new 'mm_stat' sysfs attrs)
diff --cc drivers/block/zram/zram_drv.c
index b06bd0b2bf3d,c94a1a98e301..000000000000
--- a/drivers/block/zram/zram_drv.c
+++ b/drivers/block/zram/zram_drv.c
@@@ -896,6 -1033,55 +896,58 @@@ static DEVICE_ATTR_RW(mem_used_max)
  static DEVICE_ATTR_RW(max_comp_streams);
  static DEVICE_ATTR_RW(comp_algorithm);
  
++<<<<<<< HEAD
++=======
+ static ssize_t io_stat_show(struct device *dev,
+ 		struct device_attribute *attr, char *buf)
+ {
+ 	struct zram *zram = dev_to_zram(dev);
+ 	ssize_t ret;
+ 
+ 	down_read(&zram->init_lock);
+ 	ret = scnprintf(buf, PAGE_SIZE,
+ 			"%8llu %8llu %8llu %8llu\n",
+ 			(u64)atomic64_read(&zram->stats.failed_reads),
+ 			(u64)atomic64_read(&zram->stats.failed_writes),
+ 			(u64)atomic64_read(&zram->stats.invalid_io),
+ 			(u64)atomic64_read(&zram->stats.notify_free));
+ 	up_read(&zram->init_lock);
+ 
+ 	return ret;
+ }
+ 
+ static ssize_t mm_stat_show(struct device *dev,
+ 		struct device_attribute *attr, char *buf)
+ {
+ 	struct zram *zram = dev_to_zram(dev);
+ 	u64 orig_size, mem_used = 0;
+ 	long max_used;
+ 	ssize_t ret;
+ 
+ 	down_read(&zram->init_lock);
+ 	if (init_done(zram))
+ 		mem_used = zs_get_total_pages(zram->meta->mem_pool);
+ 
+ 	orig_size = atomic64_read(&zram->stats.pages_stored);
+ 	max_used = atomic_long_read(&zram->stats.max_used_pages);
+ 
+ 	ret = scnprintf(buf, PAGE_SIZE,
+ 			"%8llu %8llu %8llu %8lu %8ld %8llu %8llu\n",
+ 			orig_size << PAGE_SHIFT,
+ 			(u64)atomic64_read(&zram->stats.compr_data_size),
+ 			mem_used << PAGE_SHIFT,
+ 			zram->limit_pages << PAGE_SHIFT,
+ 			max_used << PAGE_SHIFT,
+ 			(u64)atomic64_read(&zram->stats.zero_pages),
+ 			(u64)atomic64_read(&zram->stats.num_migrated));
+ 	up_read(&zram->init_lock);
+ 
+ 	return ret;
+ }
+ 
+ static DEVICE_ATTR_RO(io_stat);
+ static DEVICE_ATTR_RO(mm_stat);
++>>>>>>> 4f2109f60881 (zram: export new 'mm_stat' sysfs attrs)
  ZRAM_ATTR_RO(num_reads);
  ZRAM_ATTR_RO(num_writes);
  ZRAM_ATTR_RO(failed_reads);
@@@ -923,6 -1109,8 +975,11 @@@ static struct attribute *zram_disk_attr
  	&dev_attr_mem_used_max.attr,
  	&dev_attr_max_comp_streams.attr,
  	&dev_attr_comp_algorithm.attr,
++<<<<<<< HEAD
++=======
+ 	&dev_attr_io_stat.attr,
+ 	&dev_attr_mm_stat.attr,
++>>>>>>> 4f2109f60881 (zram: export new 'mm_stat' sysfs attrs)
  	NULL,
  };
  
* Unmerged path Documentation/ABI/testing/sysfs-block-zram
diff --git a/Documentation/blockdev/zram.txt b/Documentation/blockdev/zram.txt
index 7fcf9c6592ec..85570341c6c0 100644
--- a/Documentation/blockdev/zram.txt
+++ b/Documentation/blockdev/zram.txt
@@ -113,6 +113,18 @@ size of the disk when not in use so a huge zram is wasteful.
 		mem_used_total
 		mem_used_max
 
+File /sys/block/zram<id>/mm_stat
+
+The stat file represents device's mm statistics. It consists of a single
+line of text and contains the following stats separated by whitespace:
+	orig_data_size
+	compr_data_size
+	mem_used_total
+	mem_limit
+	mem_used_max
+	zero_pages
+	num_migrated
+
 8) Deactivate:
 	swapoff /dev/zram0
 	umount /dev/zram1
* Unmerged path drivers/block/zram/zram_drv.c
