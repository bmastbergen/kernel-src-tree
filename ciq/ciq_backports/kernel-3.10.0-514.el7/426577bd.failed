gpio: sysfs: rename gpiochip registration functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [gpio] sysfs: rename gpiochip registration functions (Prarit Bhargava) [1358979]
Rebuild_FUZZ: 93.75%
commit-author Johan Hovold <johan@kernel.org>
commit 426577bd8846d67b735b3a4e8926ef00abb15297
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/426577bd.failed

Rename the gpio-chip export/unexport functions to the more descriptive
names gpiochip_sysfs_register and gpiochip_sysfs_unregister.

	Signed-off-by: Johan Hovold <johan@kernel.org>
	Reviewed-by: Alexandre Courbot <acourbot@nvidia.com>
	Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
(cherry picked from commit 426577bd8846d67b735b3a4e8926ef00abb15297)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpio/gpiolib-sysfs.c
#	drivers/gpio/gpiolib.c
#	drivers/gpio/gpiolib.h
diff --cc drivers/gpio/gpiolib.c
index 9b50ed619d38,2ce3df3504e6..000000000000
--- a/drivers/gpio/gpiolib.c
+++ b/drivers/gpio/gpiolib.c
@@@ -1225,13 -283,11 +1225,13 @@@ int gpiochip_add(struct gpio_chip *chip
  #endif
  
  	of_gpiochip_add(chip);
 -	acpi_gpiochip_add(chip);
 +
 +	if (status)
 +		goto fail;
  
- 	status = gpiochip_export(chip);
+ 	status = gpiochip_sysfs_register(chip);
  	if (status)
 -		goto err_remove_chip;
 +		goto fail;
  
  	pr_debug("%s: registered GPIOs %d to %d on device: %s\n", __func__,
  		chip->base, chip->base + chip->ngpio - 1,
@@@ -1256,36 -323,37 +1256,49 @@@ EXPORT_SYMBOL_GPL(gpiochip_add)
   *
   * A gpio_chip with any GPIOs still requested may not be removed.
   */
 -void gpiochip_remove(struct gpio_chip *chip)
 +int gpiochip_remove(struct gpio_chip *chip)
  {
 -	struct gpio_desc *desc;
  	unsigned long	flags;
 +	int		status = 0;
  	unsigned	id;
++<<<<<<< HEAD
++=======
+ 	bool		requested = false;
+ 
+ 	gpiochip_sysfs_unregister(chip);
+ 
+ 	gpiochip_irqchip_remove(chip);
+ 
+ 	acpi_gpiochip_remove(chip);
+ 	gpiochip_remove_pin_ranges(chip);
+ 	gpiochip_free_hogs(chip);
+ 	of_gpiochip_remove(chip);
++>>>>>>> 426577bd8846 (gpio: sysfs: rename gpiochip registration functions)
  
  	spin_lock_irqsave(&gpio_lock, flags);
 +
 +	gpiochip_remove_pin_ranges(chip);
 +	of_gpiochip_remove(chip);
 +
  	for (id = 0; id < chip->ngpio; id++) {
 -		desc = &chip->desc[id];
 -		desc->chip = NULL;
 -		if (test_bit(FLAG_REQUESTED, &desc->flags))
 -			requested = true;
 +		if (test_bit(FLAG_REQUESTED, &chip->desc[id].flags)) {
 +			status = -EBUSY;
 +			break;
 +		}
 +	}
 +	if (status == 0) {
 +		for (id = 0; id < chip->ngpio; id++)
 +			chip->desc[id].chip = NULL;
 +
 +		list_del(&chip->list);
  	}
 -	list_del(&chip->list);
 +
  	spin_unlock_irqrestore(&gpio_lock, flags);
  
 -	if (requested)
 -		dev_crit(chip->dev, "REMOVING GPIOCHIP WITH GPIOS STILL REQUESTED\n");
 +	if (status == 0)
 +		gpiochip_unexport(chip);
  
 -	kfree(chip->desc);
 -	chip->desc = NULL;
 +	return status;
  }
  EXPORT_SYMBOL_GPL(gpiochip_remove);
  
* Unmerged path drivers/gpio/gpiolib-sysfs.c
* Unmerged path drivers/gpio/gpiolib.h
* Unmerged path drivers/gpio/gpiolib-sysfs.c
* Unmerged path drivers/gpio/gpiolib.c
* Unmerged path drivers/gpio/gpiolib.h
