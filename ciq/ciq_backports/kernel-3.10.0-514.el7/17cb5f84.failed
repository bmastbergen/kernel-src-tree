perf tools: Create config_term_names array

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 17cb5f84b89fd39a143f1c899836f40420a6b799
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/17cb5f84.failed

config_term_names[] is introduced for future commits which will be able
to retrieve the config name through the config term.

Utilize this array in parse_events_formats_error_string() so the missing
'{,no-}inherit' terms are added.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
	Cc: Brendan Gregg <brendan.d.gregg@gmail.com>
	Cc: Cody P Schafer <dev@codyps.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jeremie Galarneau <jeremie.galarneau@efficios.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Kirill Smelkov <kirr@nexedi.com>
	Cc: Li Zefan <lizefan@huawei.com>
	Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1455882283-79592-10-git-send-email-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 17cb5f84b89fd39a143f1c899836f40420a6b799)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/parse-events.c
#	tools/perf/util/parse-events.h
#	tools/perf/util/parse-events.l
diff --cc tools/perf/util/parse-events.c
index ee3541614df9,fd085d5f5c79..000000000000
--- a/tools/perf/util/parse-events.c
+++ b/tools/perf/util/parse-events.c
@@@ -596,9 -746,32 +596,38 @@@ static int check_type_val(struct parse_
  	return -EINVAL;
  }
  
++<<<<<<< HEAD
 +static int config_term(struct perf_event_attr *attr,
 +		       struct parse_events_term *term,
 +		       struct parse_events_error *err)
++=======
+ /*
+  * Update according to parse-events.l
+  */
+ static const char *config_term_names[__PARSE_EVENTS__TERM_TYPE_NR] = {
+ 	[PARSE_EVENTS__TERM_TYPE_USER]			= "<sysfs term>",
+ 	[PARSE_EVENTS__TERM_TYPE_CONFIG]		= "config",
+ 	[PARSE_EVENTS__TERM_TYPE_CONFIG1]		= "config1",
+ 	[PARSE_EVENTS__TERM_TYPE_CONFIG2]		= "config2",
+ 	[PARSE_EVENTS__TERM_TYPE_NAME]			= "name",
+ 	[PARSE_EVENTS__TERM_TYPE_SAMPLE_PERIOD]		= "period",
+ 	[PARSE_EVENTS__TERM_TYPE_SAMPLE_FREQ]		= "freq",
+ 	[PARSE_EVENTS__TERM_TYPE_BRANCH_SAMPLE_TYPE]	= "branch_type",
+ 	[PARSE_EVENTS__TERM_TYPE_TIME]			= "time",
+ 	[PARSE_EVENTS__TERM_TYPE_CALLGRAPH]		= "call-graph",
+ 	[PARSE_EVENTS__TERM_TYPE_STACKSIZE]		= "stack-size",
+ 	[PARSE_EVENTS__TERM_TYPE_NOINHERIT]		= "no-inherit",
+ 	[PARSE_EVENTS__TERM_TYPE_INHERIT]		= "inherit",
+ };
+ 
+ typedef int config_term_func_t(struct perf_event_attr *attr,
+ 			       struct parse_events_term *term,
+ 			       struct parse_events_error *err);
+ 
+ static int config_term_common(struct perf_event_attr *attr,
+ 			      struct parse_events_term *term,
+ 			      struct parse_events_error *err)
++>>>>>>> 17cb5f84b89f (perf tools: Create config_term_names array)
  {
  #define CHECK_TYPE_VAL(type)						   \
  do {									   \
@@@ -1798,3 -2115,55 +1827,58 @@@ void parse_events_evlist_error(struct p
  	err->str = strdup(str);
  	WARN_ONCE(!err->str, "WARNING: failed to allocate error string");
  }
++<<<<<<< HEAD
++=======
+ 
+ static void config_terms_list(char *buf, size_t buf_sz)
+ {
+ 	int i;
+ 	bool first = true;
+ 
+ 	buf[0] = '\0';
+ 	for (i = 0; i < __PARSE_EVENTS__TERM_TYPE_NR; i++) {
+ 		const char *name = config_term_names[i];
+ 
+ 		if (!name)
+ 			continue;
+ 		if (name[0] == '<')
+ 			continue;
+ 
+ 		if (strlen(buf) + strlen(name) + 2 >= buf_sz)
+ 			return;
+ 
+ 		if (!first)
+ 			strcat(buf, ",");
+ 		else
+ 			first = false;
+ 		strcat(buf, name);
+ 	}
+ }
+ 
+ /*
+  * Return string contains valid config terms of an event.
+  * @additional_terms: For terms such as PMU sysfs terms.
+  */
+ char *parse_events_formats_error_string(char *additional_terms)
+ {
+ 	char *str;
+ 	/* "branch_type" is the longest name */
+ 	char static_terms[__PARSE_EVENTS__TERM_TYPE_NR *
+ 			  (sizeof("branch_type") - 1)];
+ 
+ 	config_terms_list(static_terms, sizeof(static_terms));
+ 	/* valid terms */
+ 	if (additional_terms) {
+ 		if (asprintf(&str, "valid terms: %s,%s",
+ 			     additional_terms, static_terms) < 0)
+ 			goto fail;
+ 	} else {
+ 		if (asprintf(&str, "valid terms: %s", static_terms) < 0)
+ 			goto fail;
+ 	}
+ 	return str;
+ 
+ fail:
+ 	return NULL;
+ }
++>>>>>>> 17cb5f84b89f (perf tools: Create config_term_names array)
diff --cc tools/perf/util/parse-events.h
index 8417467c7342,b50d50b96f95..000000000000
--- a/tools/perf/util/parse-events.h
+++ b/tools/perf/util/parse-events.h
@@@ -62,7 -62,14 +62,16 @@@ enum 
  	PARSE_EVENTS__TERM_TYPE_CONFIG2,
  	PARSE_EVENTS__TERM_TYPE_NAME,
  	PARSE_EVENTS__TERM_TYPE_SAMPLE_PERIOD,
 -	PARSE_EVENTS__TERM_TYPE_SAMPLE_FREQ,
  	PARSE_EVENTS__TERM_TYPE_BRANCH_SAMPLE_TYPE,
++<<<<<<< HEAD
++=======
+ 	PARSE_EVENTS__TERM_TYPE_TIME,
+ 	PARSE_EVENTS__TERM_TYPE_CALLGRAPH,
+ 	PARSE_EVENTS__TERM_TYPE_STACKSIZE,
+ 	PARSE_EVENTS__TERM_TYPE_NOINHERIT,
+ 	PARSE_EVENTS__TERM_TYPE_INHERIT,
+ 	__PARSE_EVENTS__TERM_TYPE_NR,
++>>>>>>> 17cb5f84b89f (perf tools: Create config_term_names array)
  };
  
  struct parse_events_term {
diff --cc tools/perf/util/parse-events.l
index 13cef3c65565,99486e6a8b97..000000000000
--- a/tools/perf/util/parse-events.l
+++ b/tools/perf/util/parse-events.l
@@@ -174,8 -178,7 +174,12 @@@ modifier_bp	[rwx]{1,3
  
  <config>{
  	/*
++<<<<<<< HEAD
 +	 * Please update formats_error_string any time
 +	 * new static term is added.
++=======
+ 	 * Please update config_term_names when new static term is added.
++>>>>>>> 17cb5f84b89f (perf tools: Create config_term_names array)
  	 */
  config			{ return term(yyscanner, PARSE_EVENTS__TERM_TYPE_CONFIG); }
  config1			{ return term(yyscanner, PARSE_EVENTS__TERM_TYPE_CONFIG1); }
* Unmerged path tools/perf/util/parse-events.c
* Unmerged path tools/perf/util/parse-events.h
* Unmerged path tools/perf/util/parse-events.l
