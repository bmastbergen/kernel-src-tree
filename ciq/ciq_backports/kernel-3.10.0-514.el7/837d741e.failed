PCI: hv: Handle all pending messages in hv_pci_onchannelcallback()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [pci] hv: Handle all pending messages in hv_pci_onchannelcallback() (Vitaly Kuznetsov) [1341657]
Rebuild_FUZZ: 96.06%
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit 837d741ea2e6bb23da9cad1667776fc6f0cb67dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/837d741e.failed

When we have an interrupt from the host we have a bit set in event page
indicating there are messages for the particular channel.  We need to read
them all as we won't get signaled for what was on the queue before we
cleared the bit in vmbus_on_event().  This applies to all Hyper-V drivers
and the pass-through driver should do the same.

I did not meet any bugs; the issue was found by code inspection.  We don't
have many events going through hv_pci_onchannelcallback(), which explains
why nobody reported the issue before.

While on it, fix handling non-zero vmbus_recvpacket_raw() return values by
dropping out.  If the return value is not zero, it is wrong to inspect
buffer or bytes_recvd as these may contain invalid data.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: Jake Oshins <jakeo@microsoft.com>
(cherry picked from commit 837d741ea2e6bb23da9cad1667776fc6f0cb67dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/host/pci-hyperv.c
* Unmerged path drivers/pci/host/pci-hyperv.c
* Unmerged path drivers/pci/host/pci-hyperv.c
