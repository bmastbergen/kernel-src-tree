lan78xx: handle statistics counter rollover

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Woojung Huh <woojung.huh@microchip.com>
commit 20ff55655a93554611fb7790c8a2d29ee4598d24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/20ff5565.failed

Update to handle statistics counter rollover.
Check statistics counter periodically and compensate it when
counter value rolls over at max (20 or 32bits).

Simple mechanism adjusts monitoring timer to allow USB auto suspend.

	Signed-off-by: Woojung Huh <woojung.huh@microchip.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 20ff55655a93554611fb7790c8a2d29ee4598d24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/lan78xx.c
diff --cc drivers/net/usb/lan78xx.c
index 1aed9b7a065d,f20890ee03f3..000000000000
--- a/drivers/net/usb/lan78xx.c
+++ b/drivers/net/usb/lan78xx.c
@@@ -36,7 -36,7 +36,11 @@@
  #define DRIVER_AUTHOR	"WOOJUNG HUH <woojung.huh@microchip.com>"
  #define DRIVER_DESC	"LAN78XX USB 3.0 Gigabit Ethernet Devices"
  #define DRIVER_NAME	"lan78xx"
++<<<<<<< HEAD
 +#define DRIVER_VERSION	"1.0.1"
++=======
+ #define DRIVER_VERSION	"1.0.4"
++>>>>>>> 20ff55655a93 (lan78xx: handle statistics counter rollover)
  
  #define TX_TIMEOUT_JIFFIES		(5 * HZ)
  #define THROTTLE_JIFFIES		(HZ / 8)
@@@ -279,8 -341,15 +346,17 @@@ struct lan78xx_net 
  	int			link_on;
  	u8			mdix_ctrl;
  
 -	u32			chipid;
 -	u32			chiprev;
 +	u32			devid;
  	struct mii_bus		*mdiobus;
++<<<<<<< HEAD
++=======
+ 
+ 	int			fc_autoneg;
+ 	u8			fc_request_control;
+ 
+ 	int			delta;
+ 	struct statstage	stats;
++>>>>>>> 20ff55655a93 (lan78xx: handle statistics counter rollover)
  };
  
  /* use ethtool to change the level for any given device */
@@@ -959,6 -1118,10 +1122,13 @@@ static int lan78xx_link_reset(struct la
  		ret = lan78xx_write_reg(dev, MAC_CR, buf);
  		if (unlikely(ret < 0))
  			return -EIO;
++<<<<<<< HEAD
++=======
+ 
+ 		phy_mac_interrupt(phydev, 0);
+ 
+ 		del_timer(&dev->stat_monitor);
++>>>>>>> 20ff55655a93 (lan78xx: handle statistics counter rollover)
  	} else if (phydev->link && !dev->link_on) {
  		dev->link_on = true;
  
@@@ -998,7 -1161,13 +1168,17 @@@
  			  ethtool_cmd_speed(&ecmd), ecmd.duplex, ladv, radv);
  
  		ret = lan78xx_update_flowcontrol(dev, ecmd.duplex, ladv, radv);
++<<<<<<< HEAD
 +		netif_carrier_on(dev->net);
++=======
+ 		phy_mac_interrupt(phydev, 1);
+ 
+ 		if (!timer_pending(&dev->stat_monitor)) {
+ 			dev->delta = 1;
+ 			mod_timer(&dev->stat_monitor,
+ 				  jiffies + STAT_UPDATE_TIMER);
+ 		}
++>>>>>>> 20ff55655a93 (lan78xx: handle statistics counter rollover)
  	}
  
  	return ret;
* Unmerged path drivers/net/usb/lan78xx.c
