ovl: ignore permissions on underlying lookup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 38b78a5f18584db6fa7441e0f4531b283b0e6725
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/38b78a5f.failed

Generally permission checking is not necessary when overlayfs looks up a
dentry on one of the underlying layers, since search permission on base
directory was already checked in ovl_permission().

More specifically using lookup_one_len() causes a problem when the lower
directory lacks search permission for a specific user while the upper
directory does have search permission.  Since lookups are cached, this
causes inconsistency in behavior: success depends on who did the first
lookup.

So instead use lookup_hash() which doesn't do the permission check.

	Reported-by: Ignacy GawÄ™dzki <ignacy.gawedzki@green-communications.fr>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 38b78a5f18584db6fa7441e0f4531b283b0e6725)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/super.c
diff --cc fs/overlayfs/super.c
index 88cca64231b1,791235e03d17..000000000000
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@@ -375,9 -411,7 +375,13 @@@ static inline struct dentry *ovl_lookup
  {
  	struct dentry *dentry;
  
++<<<<<<< HEAD
 +	mutex_lock(&dir->d_inode->i_mutex);
 +	dentry = lookup_one_len(name->name, dir, name->len);
 +	mutex_unlock(&dir->d_inode->i_mutex);
++=======
+ 	dentry = lookup_hash(name, dir);
++>>>>>>> 38b78a5f1858 (ovl: ignore permissions on underlying lookup)
  
  	if (IS_ERR(dentry)) {
  		if (PTR_ERR(dentry) == -ENOENT)
* Unmerged path fs/overlayfs/super.c
