qla2xxx: Allow fw to hold status before sending ABTS response.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [scsi] qla2xxx: Allow fw to hold status before sending ABTS response (Chad Dupuis) [1273080]
Rebuild_FUZZ: 99.19%
commit-author Himanshu Madhani <himanshu.madhani@qlogic.com>
commit f198cafaa41a23274b88dbed7cd909fa5e91b1ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f198cafa.failed

Set bit 12 of additional firmware options 3 to let firmware
hold status IOCB until ABTS response is received from Target.

	Signed-off-by: Himanshu Madhani <himanshu.madhani@qlogic.com>
	Signed-off-by: Giridhar Malavali <giridhar.malavali@qlogic.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit f198cafaa41a23274b88dbed7cd909fa5e91b1ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_gbl.h
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_gbl.h
index 4a34762f8a9c,1bfdcdf39678..000000000000
--- a/drivers/scsi/qla2xxx/qla_gbl.h
+++ b/drivers/scsi/qla2xxx/qla_gbl.h
@@@ -113,9 -116,12 +113,15 @@@ extern int ql2xenabledif
  extern int ql2xenablehba_err_chk;
  extern int ql2xtargetreset;
  extern int ql2xdontresethba;
 -extern uint64_t ql2xmaxlun;
 +extern unsigned int ql2xmaxlun;
  extern int ql2xmdcapmask;
  extern int ql2xmdenable;
++<<<<<<< HEAD
++=======
+ extern int ql2xexlogins;
+ extern int ql2xexchoffld;
+ extern int ql2xfwholdabts;
++>>>>>>> f198cafaa41a (qla2xxx: Allow fw to hold status before sending ABTS response.)
  
  extern int qla2x00_loop_reset(scsi_qla_host_t *);
  extern void qla2x00_abort_all_cmds(scsi_qla_host_t *, int);
diff --cc drivers/scsi/qla2xxx/qla_os.c
index b3339283ef7b,8bcf3f84f935..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -221,6 -221,25 +221,28 @@@ MODULE_PARM_DESC(ql2xmdenable
  		"0 - MiniDump disabled. "
  		"1 (Default) - MiniDump enabled.");
  
++<<<<<<< HEAD
++=======
+ int ql2xexlogins = 0;
+ module_param(ql2xexlogins, uint, S_IRUGO|S_IWUSR);
+ MODULE_PARM_DESC(ql2xexlogins,
+ 		 "Number of extended Logins. "
+ 		 "0 (Default)- Disabled.");
+ 
+ int ql2xexchoffld = 0;
+ module_param(ql2xexchoffld, uint, S_IRUGO|S_IWUSR);
+ MODULE_PARM_DESC(ql2xexchoffld,
+ 		 "Number of exchanges to offload. "
+ 		 "0 (Default)- Disabled.");
+ 
+ int ql2xfwholdabts = 0;
+ module_param(ql2xfwholdabts, int, S_IRUGO);
+ MODULE_PARM_DESC(ql2xfwholdabts,
+ 		"Allow FW to hold status IOCB until ABTS rsp received. "
+ 		"0 (Default) Do not set fw option. "
+ 		"1 - Set fw option to hold ABTS.");
+ 
++>>>>>>> f198cafaa41a (qla2xxx: Allow fw to hold status before sending ABTS response.)
  /*
   * SCSI host template entry points
   */
* Unmerged path drivers/scsi/qla2xxx/qla_gbl.h
diff --git a/drivers/scsi/qla2xxx/qla_init.c b/drivers/scsi/qla2xxx/qla_init.c
index db58db867d9e..f567362a02bd 100644
--- a/drivers/scsi/qla2xxx/qla_init.c
+++ b/drivers/scsi/qla2xxx/qla_init.c
@@ -2045,6 +2045,10 @@ qla24xx_update_fw_options(scsi_qla_host_t *vha)
 	if (IS_P3P_TYPE(ha))
 		return;
 
+	/*  Hold status IOCBs until ABTS response received. */
+	if (ql2xfwholdabts)
+		ha->fw_options[3] |= BIT_12;
+
 	/* Update Serial Link options. */
 	if ((le16_to_cpu(ha->fw_seriallink_options24[0]) & BIT_0) == 0)
 		return;
@@ -6283,12 +6287,17 @@ qla81xx_update_fw_options(scsi_qla_host_t *vha)
 {
 	struct qla_hw_data *ha = vha->hw;
 
+	/*  Hold status IOCBs until ABTS response received. */
+	if (ql2xfwholdabts)
+		ha->fw_options[3] |= BIT_12;
+
 	if (!ql2xetsenable)
-		return;
+		goto out;
 
 	/* Enable ETS Burst. */
 	memset(ha->fw_options, 0, sizeof(ha->fw_options));
 	ha->fw_options[2] |= BIT_9;
+out:
 	qla2x00_set_fw_options(vha, ha->fw_options);
 }
 
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
