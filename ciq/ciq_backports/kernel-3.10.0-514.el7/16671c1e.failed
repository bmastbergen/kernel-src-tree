tools build: Fix Makefile(s) to properly invoke tools build

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 16671c1e1cac2dbb995feb4bc55082fd939b5c2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/16671c1e.failed

Several fixes were needed to allow following builds:
  $ make tools/tmon
  $ make -C <kernelsrc> tools/perf
  $ make -C <kernelsrc>/tools perf

 - some of the tools (perf) use same make variables as in
   kernel build, unsetting srctree and objtree
 - using original $(O) for O variable
 - perf build does not follow the descend function setup
   invoking it via it's own make rule

I tried the rest of the tools/Makefile targets and they
seem to work now.

	Reported-by: Brian Norris <computersforpeace@gmail.com>
	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: Brian Norris <computersforpeace@gmail.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: David Howells <dhowells@redhat.com>
	Cc: Michal Marek <mmarek@suse.cz>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
	Cc: Sam Ravnborg <sam@ravnborg.org>
	Cc: linux-kbuild@vger.kernel.org
Link: http://lkml.kernel.org/r/1429389280-18720-3-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 16671c1e1cac2dbb995feb4bc55082fd939b5c2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/Makefile
diff --cc tools/Makefile
index 927cd46d36dc,b35102721cbb..000000000000
--- a/tools/Makefile
+++ b/tools/Makefile
@@@ -36,14 -43,25 +41,24 @@@ help
  cpupower: FORCE
  	$(call descend,power/$@)
  
 -cgroup firewire hv guest usb virtio vm net: FORCE
 +cgroup firewire guest usb virtio vm net: FORCE
  	$(call descend,$@)
  
 -liblockdep: FORCE
 -	$(call descend,lib/lockdep)
 -
 -libapi: FORCE
 +libapikfs: FORCE
  	$(call descend,lib/api)
  
++<<<<<<< HEAD
 +perf: libapikfs FORCE
 +	$(call descend,$@)
++=======
+ # The perf build does not follow the descend function setup,
+ # invoking it via it's own make rule.
+ PERF_O   = $(if $(O),$(O)/tools/perf,)
+ 
+ perf: FORCE
+ 	$(Q)mkdir -p $(PERF_O) .
+ 	$(Q)$(MAKE) --no-print-directory -C perf O=$(PERF_O) subdir=
++>>>>>>> 16671c1e1cac (tools build: Fix Makefile(s) to properly invoke tools build)
  
  selftests: FORCE
  	$(call descend,testing/$@)
diff --git a/Makefile b/Makefile
index 9bf0ea111cf7..146f12bbf31f 100644
--- a/Makefile
+++ b/Makefile
@@ -174,7 +174,6 @@ VPATH		:= $(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))
 
 export srctree objtree VPATH
 
-
 # SUBARCH tells the usermode build what the underlying arch is.  That is set
 # first, and if a usermode build is happening, the "ARCH=um" on the command
 # line overrides the setting of ARCH below.  If a native build is happening,
@@ -1389,11 +1388,11 @@ kernelversion:
 # Clear a bunch of variables before executing the submake
 tools/: FORCE
 	$(Q)mkdir -p $(objtree)/tools
-	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(filter --j% -j,$(MAKEFLAGS))" O=$(objtree) subdir=tools -C $(src)/tools/
+	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(filter --j% -j,$(MAKEFLAGS))" O=$(O) subdir=tools -C $(src)/tools/
 
 tools/%: FORCE
 	$(Q)mkdir -p $(objtree)/tools
-	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(filter --j% -j,$(MAKEFLAGS))" O=$(objtree) subdir=tools -C $(src)/tools/ $*
+	$(Q)$(MAKE) LDFLAGS= MAKEFLAGS="$(filter --j% -j,$(MAKEFLAGS))" O=$(O) subdir=tools -C $(src)/tools/ $*
 
 # Single targets
 # ---------------------------------------------------------------------------
* Unmerged path tools/Makefile
