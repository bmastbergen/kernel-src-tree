igb: Add support for generic Tx checksums

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Alexander Duyck <aduyck@mirantis.com>
commit 6e033700887bf29d4e59f6978a02d989787be620
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6e033700.failed

This patch adds support for generic Tx checksums to the igb driver.  It
turns out this is actually pretty easy after going over the datasheet as we
were doing a number of steps we didn't need to.

In order to perform a Tx checksum for an L4 header we need to fill in the
following fields in the Tx descriptor:
  MACLEN (maximum of 127), retrieved from:
		skb_network_offset()
  IPLEN  (maximum of 511), retrieved from:
		skb_checksum_start_offset() - skb_network_offset()
  TUCMD.L4T indicates offset and if checksum or crc32c, based on:
		skb->csum_offset

The added advantage to doing this is that we can support inner checksum
offloads for tunnels and MPLS while still being able to transparently
insert VLAN tags.

I also took the opportunity to clean-up many of the feature flag
configuration bits to make them a bit more consistent between drivers.

	Signed-off-by: Alexander Duyck <aduyck@mirantis.com>
	Tested-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 6e033700887bf29d4e59f6978a02d989787be620)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/igb/igb_main.c
diff --cc drivers/net/ethernet/intel/igb/igb_main.c
index 8c10cafcf0f1,d90dcd16f57c..000000000000
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@@ -2401,11 -2409,6 +2409,14 @@@ static int igb_probe(struct pci_dev *pd
  		netdev->vlan_features |= NETIF_F_HIGHDMA;
  	}
  
++<<<<<<< HEAD
 +	if (hw->mac.type >= e1000_82576) {
 +		netdev->hw_features |= NETIF_F_SCTP_CSUM;
 +		netdev->features |= NETIF_F_SCTP_CSUM;
 +	}
 +
++=======
++>>>>>>> 6e033700887b (igb: Add support for generic Tx checksums)
  	netdev->priv_flags |= IFF_UNICAST_FLT;
  
  	adapter->en_mng_pt = igb_enable_mng_pass_thru(hw);
* Unmerged path drivers/net/ethernet/intel/igb/igb_main.c
