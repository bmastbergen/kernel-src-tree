KVM: PPC: Book3S HV: Move virtual mode ICP functions to real-mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [powerpc] kvm: book3s: Move virtual mode ICP functions to real-mode (Thomas Huth) [1287474]
Rebuild_FUZZ: 93.44%
commit-author Suresh Warrier <warrier@linux.vnet.ibm.com>
commit b0221556dbd3c31c47f37703f856aeeffc78abd3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b0221556.failed

Interrupt-based hypercalls return H_TOO_HARD to inform KVM that it needs
to switch to the host to complete the rest of hypercall function in
virtual mode. This patch ports the virtual mode ICS/ICP reject and resend
functions to be runnable in hypervisor real mode, thus avoiding the need
to switch to the host to execute these functions in virtual mode. However,
the hypercalls continue to return H_TOO_HARD for vcpu_wakeup and notify
events - these events cannot be done in real mode and they will still need
a switch to host virtual mode.

There are sufficient differences between the real mode code and the
virtual mode code for the ICS/ICP resend and reject functions that
for now the code has been duplicated instead of sharing common code.
In the future, we can look at creating common functions.

	Signed-off-by: Suresh Warrier <warrier@linux.vnet.ibm.com>
	Signed-off-by: Paul Mackerras <paulus@samba.org>
	Signed-off-by: Alexander Graf <agraf@suse.de>
(cherry picked from commit b0221556dbd3c31c47f37703f856aeeffc78abd3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv_rm_xics.c
diff --cc arch/powerpc/kvm/book3s_hv_rm_xics.c
index c41307ecf6cf,73bbe9246512..000000000000
--- a/arch/powerpc/kvm/book3s_hv_rm_xics.c
+++ b/arch/powerpc/kvm/book3s_hv_rm_xics.c
@@@ -23,6 -23,39 +23,42 @@@
  
  #define DEBUG_PASSUP
  
++<<<<<<< HEAD
++=======
+ static void icp_rm_deliver_irq(struct kvmppc_xics *xics, struct kvmppc_icp *icp,
+ 			    u32 new_irq);
+ 
+ static inline void rm_writeb(unsigned long paddr, u8 val)
+ {
+ 	__asm__ __volatile__("sync; stbcix %0,0,%1"
+ 		: : "r" (val), "r" (paddr) : "memory");
+ }
+ 
+ /* -- ICS routines -- */
+ static void ics_rm_check_resend(struct kvmppc_xics *xics,
+ 				struct kvmppc_ics *ics, struct kvmppc_icp *icp)
+ {
+ 	int i;
+ 
+ 	arch_spin_lock(&ics->lock);
+ 
+ 	for (i = 0; i < KVMPPC_XICS_IRQ_PER_ICS; i++) {
+ 		struct ics_irq_state *state = &ics->irq_state[i];
+ 
+ 		if (!state->resend)
+ 			continue;
+ 
+ 		arch_spin_unlock(&ics->lock);
+ 		icp_rm_deliver_irq(xics, icp, state->number);
+ 		arch_spin_lock(&ics->lock);
+ 	}
+ 
+ 	arch_spin_unlock(&ics->lock);
+ }
+ 
+ /* -- ICP routines -- */
+ 
++>>>>>>> b0221556dbd3 (KVM: PPC: Book3S HV: Move virtual mode ICP functions to real-mode)
  static void icp_rm_set_vcpu_irq(struct kvm_vcpu *vcpu,
  				struct kvm_vcpu *this_vcpu)
  {
* Unmerged path arch/powerpc/kvm/book3s_hv_rm_xics.c
