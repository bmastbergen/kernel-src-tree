cxgb4: Use FW LDST cmd to access TP_PIO_{ADDR, DATA} register first

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Hariprasad Shenai <hariprasad@chelsio.com>
commit c1e9af0ca1f8adb7f3badfc027fa42ecfcb34956
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c1e9af0c.failed

The TP_PIO_{ADDR,DATA} registers are are in conflict with the firmware's
use of these registers. Added a routine to access it through FW LDST
cmd.
Access all TP_PIO_{ADDR,DATA} register access through new routine if FW
is alive. If firmware is dead, than fall back to indirect access.

	Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c1e9af0ca1f8adb7f3badfc027fa42ecfcb34956)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index 071824dc5762,b4110988536d..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@@ -3685,11 -3694,32 +3722,40 @@@ void t4_read_rss_key(struct adapter *ad
   */
  void t4_write_rss_key(struct adapter *adap, const u32 *key, int idx)
  {
++<<<<<<< HEAD
 +	t4_write_indirect(adap, TP_PIO_ADDR_A, TP_PIO_DATA_A, key, 10,
 +			  TP_RSS_SECRET_KEY0_A);
 +	if (idx >= 0 && idx < 16)
 +		t4_write_reg(adap, TP_RSS_CONFIG_VRT_A,
 +			     KEYWRADDR_V(idx) | KEYWREN_F);
++=======
+ 	u8 rss_key_addr_cnt = 16;
+ 	u32 vrt = t4_read_reg(adap, TP_RSS_CONFIG_VRT_A);
+ 
+ 	/* T6 and later: for KeyMode 3 (per-vf and per-vf scramble),
+ 	 * allows access to key addresses 16-63 by using KeyWrAddrX
+ 	 * as index[5:4](upper 2) into key table
+ 	 */
+ 	if ((CHELSIO_CHIP_VERSION(adap->params.chip) > CHELSIO_T5) &&
+ 	    (vrt & KEYEXTEND_F) && (KEYMODE_G(vrt) == 3))
+ 		rss_key_addr_cnt = 32;
+ 
+ 	if (adap->flags & FW_OK)
+ 		t4_fw_tp_pio_rw(adap, (void *)key, 10, TP_RSS_SECRET_KEY0_A, 0);
+ 	else
+ 		t4_write_indirect(adap, TP_PIO_ADDR_A, TP_PIO_DATA_A, key, 10,
+ 				  TP_RSS_SECRET_KEY0_A);
+ 
+ 	if (idx >= 0 && idx < rss_key_addr_cnt) {
+ 		if (rss_key_addr_cnt > 16)
+ 			t4_write_reg(adap, TP_RSS_CONFIG_VRT_A,
+ 				     KEYWRADDRX_V(idx >> 4) |
+ 				     T6_VFWRADDR_V(idx) | KEYWREN_F);
+ 		else
+ 			t4_write_reg(adap, TP_RSS_CONFIG_VRT_A,
+ 				     KEYWRADDR_V(idx) | KEYWREN_F);
+ 	}
++>>>>>>> c1e9af0ca1f8 (cxgb4: Use FW LDST cmd to access TP_PIO_{ADDR, DATA} register first)
  }
  
  /**
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 2ba9901fe2ac..e5edc9de2609 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@ -4036,8 +4036,8 @@ static int adap_init0(struct adapter *adap)
 			     adap->params.b_wnd);
 	}
 	t4_init_sge_params(adap);
-	t4_init_tp_params(adap);
 	adap->flags |= FW_OK;
+	t4_init_tp_params(adap);
 	return 0;
 
 	/*
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
