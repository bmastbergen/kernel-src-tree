nfsd: wrap too long lines in nfsd4_encode_read

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 68e8bb0334dbad55285573682c38d8f6664fce68
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/68e8bb03.failed

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 68e8bb0334dbad55285573682c38d8f6664fce68)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4xdr.c
diff --cc fs/nfsd/nfs4xdr.c
index 1be91163d0ce,54633858733a..000000000000
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@@ -3428,41 -3427,42 +3428,56 @@@ nfsd4_encode_read(struct nfsd4_compound
  
  	p = xdr_reserve_space(xdr, 8); /* eof flag and byte count */
  	if (!p) {
 -		WARN_ON_ONCE(test_bit(RQ_SPLICE_OK, &resp->rqstp->rq_flags));
 -		nfserr = nfserr_resource;
 -		goto out;
 +		WARN_ON_ONCE(resp->rqstp->rq_splice_ok);
 +		return nfserr_resource;
  	}
++<<<<<<< HEAD
 +	if (resp->xdr.buf->page_len && resp->rqstp->rq_splice_ok) {
++=======
+ 	if (resp->xdr.buf->page_len &&
+ 	    test_bit(RQ_SPLICE_OK, &resp->rqstp->rq_flags)) {
++>>>>>>> 68e8bb0334db (nfsd: wrap too long lines in nfsd4_encode_read)
  		WARN_ON_ONCE(1);
 -		nfserr = nfserr_resource;
 -		goto out;
 +		return nfserr_resource;
  	}
  	xdr_commit_encode(xdr);
  
  	maxcount = svc_max_payload(resp->rqstp);
- 	maxcount = min_t(unsigned long, maxcount, (xdr->buf->buflen - xdr->buf->len));
+ 	maxcount = min_t(unsigned long, maxcount,
+ 			 (xdr->buf->buflen - xdr->buf->len));
  	maxcount = min_t(unsigned long, maxcount, read->rd_length);
  
++<<<<<<< HEAD
 +	if (read->rd_filp)
 +		err = nfsd_permission(resp->rqstp, fhp->fh_export,
 +				fhp->fh_dentry,
 +				NFSD_MAY_READ|NFSD_MAY_OWNER_OVERRIDE);
++=======
+ 	if (read->rd_tmp_file)
+ 		ra = nfsd_init_raparms(file);
+ 
+ 	if (file->f_op->splice_read &&
+ 	    test_bit(RQ_SPLICE_OK, &resp->rqstp->rq_flags))
+ 		nfserr = nfsd4_encode_splice_read(resp, read, file, maxcount);
++>>>>>>> 68e8bb0334db (nfsd: wrap too long lines in nfsd4_encode_read)
  	else
 -		nfserr = nfsd4_encode_readv(resp, read, file, maxcount);
 +		err = nfsd_get_tmp_read_open(resp->rqstp, read->rd_fhp,
 +						&file, &ra);
 +	if (err)
 +		goto err_truncate;
  
 -	if (ra)
 -		nfsd_put_raparams(file, ra);
 +	if (file->f_op->splice_read && resp->rqstp->rq_splice_ok)
 +		err = nfsd4_encode_splice_read(resp, read, file, maxcount);
 +	else
 +		err = nfsd4_encode_readv(resp, read, file, maxcount);
  
 -	if (nfserr)
 -		xdr_truncate_encode(xdr, starting_len);
 +	if (!read->rd_filp)
 +		nfsd_put_tmp_read_open(file, ra);
  
 -out:
 -	if (file)
 -		fput(file);
 -	return nfserr;
 +err_truncate:
 +	if (err)
 +		xdr_truncate_encode(xdr, starting_len);
 +	return err;
  }
  
  static __be32
* Unmerged path fs/nfsd/nfs4xdr.c
