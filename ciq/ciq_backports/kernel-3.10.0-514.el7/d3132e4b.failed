mm: compaction: reset cached scanner pfn's before reading them

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] compaction: reset cached scanner pfn's before reading them ("Herton R. Krzesinski") [1344770]
Rebuild_FUZZ: 95.87%
commit-author Vlastimil Babka <vbabka@suse.cz>
commit d3132e4b83e6bd383c74d716f7281d7c3136089c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d3132e4b.failed

Compaction caches pfn's for its migrate and free scanners to avoid
scanning the whole zone each time.  In compact_zone(), the cached values
are read to set up initial values for the scanners.  There are several
situations when these cached pfn's are reset to the first and last pfn
of the zone, respectively.  One of these situations is when a compaction
has been deferred for a zone and is now being restarted during a direct
compaction, which is also done in compact_zone().

However, compact_zone() currently reads the cached pfn's *before*
resetting them.  This means the reset doesn't affect the compaction that
performs it, and with good chance also subsequent compactions, as
update_pageblock_skip() is likely to be called and update the cached
pfn's to those being processed.  Another chance for a successful reset
is when a direct compaction detects that migration and free scanners
meet (which has its own problems addressed by another patch) and sets
update_pageblock_skip flag which kswapd uses to do the reset because it
goes to sleep.

This is clearly a bug that results in non-deterministic behavior, so
this patch moves the cached pfn reset to be performed *before* the
values are read.

	Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
	Acked-by: Mel Gorman <mgorman@suse.de>
	Acked-by: Rik van Riel <riel@redhat.com>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit d3132e4b83e6bd383c74d716f7281d7c3136089c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/compaction.c
diff --cc mm/compaction.c
index 79d75be1d87c,f4e2c166880b..000000000000
--- a/mm/compaction.c
+++ b/mm/compaction.c
@@@ -962,13 -970,7 +970,17 @@@ static int compact_zone(struct zone *zo
  		zone->compact_cached_migrate_pfn = cc->migrate_pfn;
  	}
  
++<<<<<<< HEAD
 +	/*
 +	 * Clear pageblock skip if there were failures recently and compaction
 +	 * is about to be retried after being deferred. kswapd does not do
 +	 * this reset as it'll reset the cached information when going to sleep.
 +	 */
 +	if (compaction_restarting(zone, cc->order) && !current_is_kswapd())
 +		__reset_isolation_suitable(zone);
++=======
+ 	trace_mm_compaction_begin(start_pfn, cc->migrate_pfn, cc->free_pfn, end_pfn);
++>>>>>>> d3132e4b83e6 (mm: compaction: reset cached scanner pfn's before reading them)
  
  	migrate_prep_local();
  
* Unmerged path mm/compaction.c
