locks: use file_inode()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 6343a2120862f7023006c8091ad95c1f16a32077
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/6343a212.failed

(Another one for the f_path debacle.)

ltp fcntl33 testcase caused an Oops in selinux_file_send_sigiotask.

The reason is that generic_add_lease() used filp->f_path.dentry->inode
while all the others use file_inode().  This makes a difference for files
opened on overlayfs since the former will point to the overlay inode the
latter to the underlying inode.

So generic_add_lease() added the lease to the overlay inode and
generic_delete_lease() removed it from the underlying inode.  When the file
was released the lease remained on the overlay inode's lock list, resulting
in use after free.

	Reported-by: Eryu Guan <eguan@redhat.com>
Fixes: 4bacc9c9234c ("overlayfs: Make f_path always point to the overlay and f_inode to the underlay")
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
	Reviewed-by: Jeff Layton <jlayton@redhat.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 6343a2120862f7023006c8091ad95c1f16a32077)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/locks.c
diff --cc fs/locks.c
index 4da168d46db3,ee1b15f6fc13..000000000000
--- a/fs/locks.c
+++ b/fs/locks.c
@@@ -1525,11 -1626,13 +1525,16 @@@ check_conflicting_open(const struct den
  static int
  generic_add_lease(struct file *filp, long arg, struct file_lock **flp, void **priv)
  {
 -	struct file_lock *fl, *my_fl = NULL, *lease;
 +	struct file_lock *fl, **before, **my_before = NULL, *lease;
  	struct dentry *dentry = filp->f_path.dentry;
++<<<<<<< HEAD
 +	struct inode *inode = dentry->d_inode;
++=======
+ 	struct inode *inode = file_inode(filp);
+ 	struct file_lock_context *ctx;
++>>>>>>> 6343a2120862 (locks: use file_inode())
  	bool is_deleg = (*flp)->fl_flags & FL_DELEG;
  	int error;
 -	LIST_HEAD(dispose);
  
  	lease = *flp;
  	trace_generic_add_lease(inode, lease);
* Unmerged path fs/locks.c
