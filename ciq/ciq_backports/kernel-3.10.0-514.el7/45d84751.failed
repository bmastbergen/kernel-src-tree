netfilter: nft_hash: indent rhashtable parameters

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Patrick McHardy <kaber@trash.net>
commit 45d84751fb310fe0063cf005ffd6593b4c2321a8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/45d84751.failed

Improve readability by indenting the parameter initialization.

	Signed-off-by: Patrick McHardy <kaber@trash.net>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 45d84751fb310fe0063cf005ffd6593b4c2321a8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nft_hash.c
diff --cc net/netfilter/nft_hash.c
index f14a5e14123a,e35f0b2d8e65..000000000000
--- a/net/netfilter/nft_hash.c
+++ b/net/netfilter/nft_hash.c
@@@ -159,31 -169,32 +159,52 @@@ cont
  
  static unsigned int nft_hash_privsize(const struct nlattr * const nla[])
  {
 -	return sizeof(struct nft_hash);
 +	return sizeof(struct rhashtable);
  }
  
++<<<<<<< HEAD
 +static int lockdep_nfnl_lock_is_held(void)
 +{
 +	return lockdep_nfnl_is_held(NFNL_SUBSYS_NFTABLES);
 +}
++=======
+ static const struct rhashtable_params nft_hash_params = {
+ 	.head_offset		= offsetof(struct nft_hash_elem, node),
+ 	.key_offset		= offsetof(struct nft_hash_elem, key),
+ 	.hashfn			= jhash,
+ 	.automatic_shrinking	= true,
+ };
++>>>>>>> 45d84751fb31 (netfilter: nft_hash: indent rhashtable parameters)
  
  static int nft_hash_init(const struct nft_set *set,
  			 const struct nft_set_desc *desc,
  			 const struct nlattr * const tb[])
  {
 -	struct nft_hash *priv = nft_set_priv(set);
 -	struct rhashtable_params params = nft_hash_params;
 -
 +	struct rhashtable *priv = nft_set_priv(set);
 +	struct rhashtable_params params = {
 +		.nelem_hint = desc->size ? : NFT_HASH_ELEMENT_HINT,
 +		.head_offset = offsetof(struct nft_hash_elem, node),
 +		.key_offset = offsetof(struct nft_hash_elem, key),
 +		.key_len = set->klen,
 +		.hashfn = jhash,
 +		.grow_decision = rht_grow_above_75,
 +		.shrink_decision = rht_shrink_below_30,
 +		.mutex_is_held = lockdep_nfnl_lock_is_held,
 +	};
 +
++<<<<<<< HEAD
 +	return rhashtable_init(priv, &params);
++=======
+ 	params.nelem_hint = desc->size ?: NFT_HASH_ELEMENT_HINT;
+ 	params.key_len	  = set->klen;
+ 
+ 	return rhashtable_init(&priv->ht, &params);
+ }
+ 
+ static void nft_free_element(void *ptr, void *arg)
+ {
+ 	nft_hash_elem_destroy((const struct nft_set *)arg, ptr);
++>>>>>>> 45d84751fb31 (netfilter: nft_hash: indent rhashtable parameters)
  }
  
  static void nft_hash_destroy(const struct nft_set *set)
* Unmerged path net/netfilter/nft_hash.c
