staging/rdma/hfi1: Add s_sendcontext priv field

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [infiniband] rdma/hfi1: Add s_sendcontext priv field (Alex Estrin) [1272062 1273170]
Rebuild_FUZZ: 90.70%
commit-author Jubin John <jubin.john@intel.com>
commit 721d04273a8265847612a420174bb6e9a13d8d4f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/721d0427.failed

s_sendcontext will be used to map the QPs to the send contexts
for PIO.

	Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
	Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 721d04273a8265847612a420174bb6e9a13d8d4f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/staging/hfi1/ud.c
#	drivers/staging/rdma/hfi1/qp.c
#	drivers/staging/rdma/hfi1/verbs.h
diff --cc drivers/staging/hfi1/ud.c
index a7f67b0111da,1b4b191ced99..000000000000
--- a/drivers/staging/hfi1/ud.c
+++ b/drivers/staging/hfi1/ud.c
@@@ -384,13 -394,14 +384,20 @@@ int hfi1_make_ud_req(struct hfi1_qp *qp
  		priv->s_sc = sc5;
  	}
  	priv->s_sde = qp_to_sdma_engine(qp, priv->s_sc);
++<<<<<<< HEAD:drivers/staging/hfi1/ud.c
 +	priv->s_hdr->ibh.lrh[0] = cpu_to_be16(lrh0);
 +	priv->s_hdr->ibh.lrh[1] = cpu_to_be16(ah_attr->dlid);  /* DEST LID */
 +	priv->s_hdr->ibh.lrh[2] =
++=======
+ 	priv->s_sendcontext = qp_to_send_context(qp, priv->s_sc);
+ 	ps->s_txreq->phdr.hdr.lrh[0] = cpu_to_be16(lrh0);
+ 	ps->s_txreq->phdr.hdr.lrh[1] = cpu_to_be16(ah_attr->dlid);
+ 	ps->s_txreq->phdr.hdr.lrh[2] =
++>>>>>>> 721d04273a82 (staging/rdma/hfi1: Add s_sendcontext priv field):drivers/staging/rdma/hfi1/ud.c
  		cpu_to_be16(qp->s_hdrwords + nwords + SIZE_OF_CRC);
 -	if (ah_attr->dlid == be16_to_cpu(IB_LID_PERMISSIVE)) {
 -		ps->s_txreq->phdr.hdr.lrh[3] = IB_LID_PERMISSIVE;
 -	} else {
 +	if (ah_attr->dlid == be16_to_cpu(IB_LID_PERMISSIVE))
 +		priv->s_hdr->ibh.lrh[3] = IB_LID_PERMISSIVE;
 +	else {
  		lid = ppd->lid;
  		if (lid) {
  			lid |= ah_attr->src_path_bits & ((1 << ppd->lmc) - 1);
* Unmerged path drivers/staging/rdma/hfi1/qp.c
* Unmerged path drivers/staging/rdma/hfi1/verbs.h
* Unmerged path drivers/staging/hfi1/ud.c
* Unmerged path drivers/staging/rdma/hfi1/qp.c
* Unmerged path drivers/staging/rdma/hfi1/verbs.h
