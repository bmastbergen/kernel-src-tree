sched, tracing: Stop/start critical timings around the idle=poll idle loop

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [kernel] sched: tracing: Stop/start critical timings around the idle=poll idle loop (Daniel Bristot de Oliveira) [1280434]
Rebuild_FUZZ: 98.65%
commit-author Daniel Bristot de Oliveira <bristot@redhat.com>
commit 9babcd7929bc8967ae3bb6093f603b93c2f9958f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9babcd79.failed

When using idle=poll, the preemptoff tracer is always showing
the idle task as the culprit for long latencies. That happens
because critical timings are not stopped before idle loop. This
patch stops critical timings before entering the idle loop,
starting it again after the idle loop.

This problem does not affect the irqsoff tracer because
interruptions are enabled before entering the idle loop.

	Signed-off-by: Daniel Bristot de Oliveira <bristot@redhat.com>
	Reviewed-by: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
	Acked-by: Steven Rostedt <rostedt@goodmis.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/10fc3705874aef11dbe152a068b591a7be1899b4.1444314899.git.bristot@redhat.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 9babcd7929bc8967ae3bb6093f603b93c2f9958f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/idle.c
* Unmerged path kernel/sched/idle.c
* Unmerged path kernel/sched/idle.c
