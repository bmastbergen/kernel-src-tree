iscsi-target: add void (*iscsit_release_cmd)()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Varun Prakash <varun@chelsio.com>
commit 7ec811a8e9c3b8289a863d0dac717e08a5093403
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7ec811a8.failed

Add void (*iscsit_release_cmd)() to
struct iscsit_transport, iscsi-target
uses this callback to release transport
driver resources associated with an iSCSI cmd.

cxgbit.ko needs this callback to release DDP
resource and sg page in case of
PASSTHROUGH_SG_TO_MEM_NOALLOC.

	Signed-off-by: Varun Prakash <varun@chelsio.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 7ec811a8e9c3b8289a863d0dac717e08a5093403)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/target/iscsi/iscsi_transport.h
diff --cc include/target/iscsi/iscsi_transport.h
index e6bb166f12c2,3b0053efdfba..000000000000
--- a/include/target/iscsi/iscsi_transport.h
+++ b/include/target/iscsi/iscsi_transport.h
@@@ -22,6 -22,9 +22,12 @@@ struct iscsit_transport 
  	int (*iscsit_queue_data_in)(struct iscsi_conn *, struct iscsi_cmd *);
  	int (*iscsit_queue_status)(struct iscsi_conn *, struct iscsi_cmd *);
  	void (*iscsit_aborted_task)(struct iscsi_conn *, struct iscsi_cmd *);
++<<<<<<< HEAD
++=======
+ 	int (*iscsit_xmit_pdu)(struct iscsi_conn *, struct iscsi_cmd *,
+ 			       struct iscsi_datain_req *, const void *, u32);
+ 	void (*iscsit_release_cmd)(struct iscsi_conn *, struct iscsi_cmd *);
++>>>>>>> 7ec811a8e9c3 (iscsi-target: add void (*iscsit_release_cmd)())
  	enum target_prot_op (*iscsit_get_sup_prot_ops)(struct iscsi_conn *);
  };
  
diff --git a/drivers/target/iscsi/iscsi_target_util.c b/drivers/target/iscsi/iscsi_target_util.c
index d56e38a96f25..7d2ef1f4c2c3 100644
--- a/drivers/target/iscsi/iscsi_target_util.c
+++ b/drivers/target/iscsi/iscsi_target_util.c
@@ -726,6 +726,9 @@ void __iscsit_free_cmd(struct iscsi_cmd *cmd, bool scsi_cmd,
 		iscsit_remove_cmd_from_immediate_queue(cmd, conn);
 		iscsit_remove_cmd_from_response_queue(cmd, conn);
 	}
+
+	if (conn && conn->conn_transport->iscsit_release_cmd)
+		conn->conn_transport->iscsit_release_cmd(conn, cmd);
 }
 
 void iscsit_free_cmd(struct iscsi_cmd *cmd, bool shutdown)
* Unmerged path include/target/iscsi/iscsi_transport.h
