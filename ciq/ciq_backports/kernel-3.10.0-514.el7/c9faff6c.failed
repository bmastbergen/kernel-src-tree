mmc: sdhci-pci: add support for eMMC hardware reset for BYT eMMC.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] sdhci-pci: add support for eMMC hardware reset for BYT eMMC (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 95.16%
commit-author Adrian Hunter <adrian.hunter@intel.com>
commit c9faff6cbb3d2b37b3aa356ce455848f91685b24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c9faff6c.failed

Add support for eMMC hardware reset for BYT eMMC.

	Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
	Signed-off-by: Chris Ball <cjb@laptop.org>
(cherry picked from commit c9faff6cbb3d2b37b3aa356ce455848f91685b24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci-pci.c
diff --cc drivers/mmc/host/sdhci-pci.c
index 2ea490da47ee,e082fac6bc96..000000000000
--- a/drivers/mmc/host/sdhci-pci.c
+++ b/drivers/mmc/host/sdhci-pci.c
@@@ -27,8 -27,72 +27,77 @@@
  #include <linux/mmc/sdhci-pci-data.h>
  
  #include "sdhci.h"
++<<<<<<< HEAD
 +#include "sdhci-pci.h"
 +#include "sdhci-pci-o2micro.h"
++=======
+ 
+ /*
+  * PCI device IDs
+  */
+ #define PCI_DEVICE_ID_INTEL_PCH_SDIO0	0x8809
+ #define PCI_DEVICE_ID_INTEL_PCH_SDIO1	0x880a
+ #define PCI_DEVICE_ID_INTEL_BYT_EMMC	0x0f14
+ #define PCI_DEVICE_ID_INTEL_BYT_SDIO	0x0f15
+ #define PCI_DEVICE_ID_INTEL_BYT_SD	0x0f16
+ 
+ /*
+  * PCI registers
+  */
+ 
+ #define PCI_SDHCI_IFPIO			0x00
+ #define PCI_SDHCI_IFDMA			0x01
+ #define PCI_SDHCI_IFVENDOR		0x02
+ 
+ #define PCI_SLOT_INFO			0x40	/* 8 bits */
+ #define  PCI_SLOT_INFO_SLOTS(x)		((x >> 4) & 7)
+ #define  PCI_SLOT_INFO_FIRST_BAR_MASK	0x07
+ 
+ #define MAX_SLOTS			8
+ 
+ struct sdhci_pci_chip;
+ struct sdhci_pci_slot;
+ 
+ struct sdhci_pci_fixes {
+ 	unsigned int		quirks;
+ 	unsigned int		quirks2;
+ 	bool			allow_runtime_pm;
+ 
+ 	int			(*probe) (struct sdhci_pci_chip *);
+ 
+ 	int			(*probe_slot) (struct sdhci_pci_slot *);
+ 	void			(*remove_slot) (struct sdhci_pci_slot *, int);
+ 
+ 	int			(*suspend) (struct sdhci_pci_chip *);
+ 	int			(*resume) (struct sdhci_pci_chip *);
+ };
+ 
+ struct sdhci_pci_slot {
+ 	struct sdhci_pci_chip	*chip;
+ 	struct sdhci_host	*host;
+ 	struct sdhci_pci_data	*data;
+ 
+ 	int			pci_bar;
+ 	int			rst_n_gpio;
+ 	int			cd_gpio;
+ 	int			cd_irq;
+ 
+ 	void (*hw_reset)(struct sdhci_host *host);
+ };
+ 
+ struct sdhci_pci_chip {
+ 	struct pci_dev		*pdev;
+ 
+ 	unsigned int		quirks;
+ 	unsigned int		quirks2;
+ 	bool			allow_runtime_pm;
+ 	const struct sdhci_pci_fixes *fixes;
+ 
+ 	int			num_slots;	/* Slots on controller */
+ 	struct sdhci_pci_slot	*slots[MAX_SLOTS]; /* Pointers to host slots */
+ };
+ 
++>>>>>>> c9faff6cbb3d (mmc: sdhci-pci: add support for eMMC hardware reset for BYT eMMC.)
  
  /*****************************************************************************\
   *                                                                           *
* Unmerged path drivers/mmc/host/sdhci-pci.c
