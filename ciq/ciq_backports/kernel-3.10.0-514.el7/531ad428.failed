qmi_wwan: Set random MAC on devices with buggy fw

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kristian Evensen <kristian.evensen@gmail.com>
commit 531ad4282e5105db984f1706e1a21799157655a3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/531ad428.failed

Some buggy firmwares export an incorrect MAC address (00:a0:c6:00:00:00). This
makes for example checking devices for random MAC addresses tricky, and you
might end up with multiple network interfaces with the same address.

This patch tries to fix, or at least improve, the situation by setting the MAC
address of devices with this firmware bug to a random address. I tested the
patch with two devices that has this firmware bug (Huawei E398 and E392), and
network traffic worked fine after changing the address.

	Signed-off-by: Kristian Evensen <kristian.evensen@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 531ad4282e5105db984f1706e1a21799157655a3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/qmi_wwan.c
diff --cc drivers/net/usb/qmi_wwan.c
index 0808715ed803,602dc6668c3a..000000000000
--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@@ -332,10 -334,12 +334,16 @@@ next_desc
  		usb_driver_release_interface(driver, info->data);
  	}
  
- 	/* Never use the same address on both ends of the link, even
- 	 * if the buggy firmware told us to.
+ 	/* Never use the same address on both ends of the link, even if the
+ 	 * buggy firmware told us to. Or, if device is assigned the well-known
+ 	 * buggy firmware MAC address, replace it with a random address,
  	 */
++<<<<<<< HEAD
 +	if (!compare_ether_addr(dev->net->dev_addr, default_modem_addr))
++=======
+ 	if (ether_addr_equal(dev->net->dev_addr, default_modem_addr) ||
+ 	    ether_addr_equal(dev->net->dev_addr, buggy_fw_addr))
++>>>>>>> 531ad4282e51 (qmi_wwan: Set random MAC on devices with buggy fw)
  		eth_hw_addr_random(dev->net);
  
  	/* make MAC addr easily distinguishable from an IP header */
* Unmerged path drivers/net/usb/qmi_wwan.c
