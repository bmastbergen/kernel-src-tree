scsi: serialize ->rescan against ->remove

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Christoph Hellwig <hch@lst.de>
commit e27829dc92e549486b8248cdfa53e108abb6acfb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/e27829dc.failed

Lock the device embedded in the scsi_device to protect against
concurrent calls to ->remove.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit e27829dc92e549486b8248cdfa53e108abb6acfb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_scan.c
diff --cc drivers/scsi/scsi_scan.c
index 5ba632d8b16a,60aae01caa89..000000000000
--- a/drivers/scsi/scsi_scan.c
+++ b/drivers/scsi/scsi_scan.c
@@@ -1588,17 -1570,15 +1588,25 @@@ EXPORT_SYMBOL(scsi_add_device)
  
  void scsi_rescan_device(struct device *dev)
  {
++<<<<<<< HEAD
 +	struct scsi_driver *drv;
 +	
 +	if (!dev->driver)
 +		return;
 +
 +	drv = to_scsi_driver(dev->driver);
 +	if (try_module_get(drv->owner)) {
++=======
+ 	device_lock(dev);
+ 	if (dev->driver && try_module_get(dev->driver->owner)) {
+ 		struct scsi_driver *drv = to_scsi_driver(dev->driver);
+ 
++>>>>>>> e27829dc92e5 (scsi: serialize ->rescan against ->remove)
  		if (drv->rescan)
  			drv->rescan(dev);
 -		module_put(dev->driver->owner);
 +		module_put(drv->owner);
  	}
+ 	device_unlock(dev);
  }
  EXPORT_SYMBOL(scsi_rescan_device);
  
* Unmerged path drivers/scsi/scsi_scan.c
