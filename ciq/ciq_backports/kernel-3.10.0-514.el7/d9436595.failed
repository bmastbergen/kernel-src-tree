ipv6: copy lwtstate in ip6_rt_copy_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit d943659508a4fb883507fdd3f998329e70a8f922
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d9436595.failed

We need to copy this field (ip6_rt_cache_alloc() and ip6_rt_pcpu_alloc()
use ip6_rt_copy_init() to build a dst).

CC: Thomas Graf <tgraf@suug.ch>
CC: Roopa Prabhu <roopa@cumulusnetworks.com>
Fixes: 19e42e451506 ("ipv6: support for fib route lwtunnel encap attributes")
	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Acked-by: Thomas Graf <tgraf@suug.ch>
	Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d943659508a4fb883507fdd3f998329e70a8f922)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/route.c
diff --cc net/ipv6/route.c
index 1b3524b3978c,fbe27fb6bd3f..000000000000
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@@ -1961,42 -2132,39 +1961,51 @@@ out
   *	Misc support functions
   */
  
 -static void rt6_set_from(struct rt6_info *rt, struct rt6_info *from)
 +static struct rt6_info *ip6_rt_copy(struct rt6_info *ort,
 +				    const struct in6_addr *dest)
  {
 -	BUG_ON(from->dst.from);
 +	struct net *net = dev_net(ort->dst.dev);
 +	struct rt6_info *rt = ip6_dst_alloc(net, ort->dst.dev, 0,
 +					    ort->rt6i_table);
  
 -	rt->rt6i_flags &= ~RTF_EXPIRES;
 -	dst_hold(&from->dst);
 -	rt->dst.from = &from->dst;
 -	dst_init_metrics(&rt->dst, dst_metrics_ptr(&from->dst), true);
 -}
 +	if (rt) {
 +		rt->dst.input = ort->dst.input;
 +		rt->dst.output = ort->dst.output;
 +		rt->dst.flags |= DST_HOST;
 +
 +		rt->rt6i_dst.addr = *dest;
 +		rt->rt6i_dst.plen = 128;
 +		dst_copy_metrics(&rt->dst, &ort->dst);
 +		rt->dst.error = ort->dst.error;
 +		rt->rt6i_idev = ort->rt6i_idev;
 +		if (rt->rt6i_idev)
 +			in6_dev_hold(rt->rt6i_idev);
 +		rt->dst.lastuse = jiffies;
 +
 +		if (ort->rt6i_flags & RTF_GATEWAY)
 +			rt->rt6i_gateway = ort->rt6i_gateway;
 +		else
 +			rt->rt6i_gateway = *dest;
 +		rt->rt6i_flags = ort->rt6i_flags;
 +		rt6_set_from(rt, ort);
 +		rt->rt6i_metric = 0;
  
 -static void ip6_rt_copy_init(struct rt6_info *rt, struct rt6_info *ort)
 -{
 -	rt->dst.input = ort->dst.input;
 -	rt->dst.output = ort->dst.output;
 -	rt->rt6i_dst = ort->rt6i_dst;
 -	rt->dst.error = ort->dst.error;
 -	rt->rt6i_idev = ort->rt6i_idev;
 -	if (rt->rt6i_idev)
 -		in6_dev_hold(rt->rt6i_idev);
 -	rt->dst.lastuse = jiffies;
 -	rt->rt6i_gateway = ort->rt6i_gateway;
 -	rt->rt6i_flags = ort->rt6i_flags;
 -	rt6_set_from(rt, ort);
 -	rt->rt6i_metric = ort->rt6i_metric;
  #ifdef CONFIG_IPV6_SUBTREES
 -	rt->rt6i_src = ort->rt6i_src;
 +		memcpy(&rt->rt6i_src, &ort->rt6i_src, sizeof(struct rt6key));
  #endif
++<<<<<<< HEAD
 +		memcpy(&rt->rt6i_prefsrc, &ort->rt6i_prefsrc, sizeof(struct rt6key));
 +		rt->rt6i_table = ort->rt6i_table;
 +	}
 +	return rt;
++=======
+ 	rt->rt6i_prefsrc = ort->rt6i_prefsrc;
+ 	rt->rt6i_table = ort->rt6i_table;
+ 	if (ort->rt6i_lwtstate) {
+ 		lwtunnel_state_get(ort->rt6i_lwtstate);
+ 		rt->rt6i_lwtstate = ort->rt6i_lwtstate;
+ 	}
++>>>>>>> d943659508a4 (ipv6: copy lwtstate in ip6_rt_copy_init())
  }
  
  #ifdef CONFIG_IPV6_ROUTE_INFO
* Unmerged path net/ipv6/route.c
