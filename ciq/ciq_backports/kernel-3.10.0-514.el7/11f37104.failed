ovl: verify upper dentry before unlink and rename

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 11f3710417d026ea2f4fcf362d866342c5274185
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/11f37104.failed

Unlink and rename in overlayfs checked the upper dentry for staleness by
verifying upper->d_parent against upperdir.  However the dentry can go
stale also by being unhashed, for example.

Expand the verification to actually look up the name again (under parent
lock) and check if it matches the upper dentry.  This matches what the VFS
does before passing the dentry to filesytem's unlink/rename methods, which
excludes any inconsistency caused by overlayfs.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 11f3710417d026ea2f4fcf362d866342c5274185)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/dir.c
diff --cc fs/overlayfs/dir.c
index f36099264ab2,bc1758a160f6..000000000000
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@@ -596,14 -596,18 +596,22 @@@ static int ovl_remove_upper(struct dent
  {
  	struct dentry *upperdir = ovl_dentry_upper(dentry->d_parent);
  	struct inode *dir = upperdir->d_inode;
- 	struct dentry *upper = ovl_dentry_upper(dentry);
+ 	struct dentry *upper;
  	int err;
  
++<<<<<<< HEAD
 +	mutex_lock_nested(&dir->i_mutex, I_MUTEX_PARENT);
++=======
+ 	inode_lock_nested(dir, I_MUTEX_PARENT);
+ 	upper = lookup_one_len(dentry->d_name.name, upperdir,
+ 			       dentry->d_name.len);
+ 	err = PTR_ERR(upper);
+ 	if (IS_ERR(upper))
+ 		goto out_unlock;
+ 
++>>>>>>> 11f3710417d0 (ovl: verify upper dentry before unlink and rename)
  	err = -ESTALE;
- 	if (upper->d_parent == upperdir) {
- 		/* Don't let d_delete() think it can reset d_inode */
- 		dget(upper);
+ 	if (upper == ovl_dentry_upper(dentry)) {
  		if (is_dir)
  			err = vfs_rmdir(dir, upper);
  		else
@@@ -618,8 -622,10 +626,15 @@@
  	 * sole user of this dentry.  Too tricky...  Just unhash for
  	 * now.
  	 */
++<<<<<<< HEAD
 +	d_drop(dentry);
 +	mutex_unlock(&dir->i_mutex);
++=======
+ 	if (!err)
+ 		d_drop(dentry);
+ out_unlock:
+ 	inode_unlock(dir);
++>>>>>>> 11f3710417d0 (ovl: verify upper dentry before unlink and rename)
  
  	return err;
  }
* Unmerged path fs/overlayfs/dir.c
