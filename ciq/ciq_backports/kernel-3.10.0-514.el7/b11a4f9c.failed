IB/mlx5: Add support for setting source QP number

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Haggai Eran <haggaie@mellanox.com>
commit b11a4f9cde1c06e0073662882b60c1fb95a1d597
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/b11a4f9c.failed

In order to create multiple GSI QPs, we need to set the source QP number to
one on all these QPs. Add the necessary definitions and infrastructure to
do that.

	Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
	Signed-off-by: Haggai Eran <haggaie@mellanox.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit b11a4f9cde1c06e0073662882b60c1fb95a1d597)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/qp.c
#	include/linux/mlx5/mlx5_ifc.h
diff --cc drivers/infiniband/hw/mlx5/qp.c
index 8dcc02749eab,794e760a17a0..000000000000
--- a/drivers/infiniband/hw/mlx5/qp.c
+++ b/drivers/infiniband/hw/mlx5/qp.c
@@@ -966,7 -1295,13 +972,17 @@@ static int create_qp_common(struct mlx5
  					    ucmd.sq_wqe_count, max_wqes);
  				return -EINVAL;
  			}
++<<<<<<< HEAD
 +			err = create_user_qp(dev, pd, qp, udata, &in, &resp, &inlen);
++=======
+ 			if (init_attr->create_flags &
+ 			    mlx5_ib_create_qp_sqpn_qp1()) {
+ 				mlx5_ib_dbg(dev, "user-space is not allowed to create UD QPs spoofing as QP1\n");
+ 				return -EINVAL;
+ 			}
+ 			err = create_user_qp(dev, pd, qp, udata, init_attr, &in,
+ 					     &resp, &inlen, base);
++>>>>>>> b11a4f9cde1c (IB/mlx5: Add support for setting source QP number)
  			if (err)
  				mlx5_ib_dbg(dev, "err %d\n", err);
  		} else {
diff --cc include/linux/mlx5/mlx5_ifc.h
index 08e2b9ad01d1,72bba5261766..000000000000
--- a/include/linux/mlx5/mlx5_ifc.h
+++ b/include/linux/mlx5/mlx5_ifc.h
@@@ -761,16 -763,17 +761,21 @@@ struct mlx5_ifc_cmd_hca_cap_bits 
  	u8         cq_eq_remap[0x1];
  	u8         pg[0x1];
  	u8         block_lb_mc[0x1];
 -	u8         reserved_at_228[0x1];
 +	u8         reserved_29[0x1];
  	u8         scqe_break_moderation[0x1];
 -	u8         reserved_at_22a[0x1];
 +	u8         reserved_30[0x1];
  	u8         cd[0x1];
 -	u8         reserved_at_22c[0x1];
 +	u8         reserved_31[0x1];
  	u8         apm[0x1];
 -	u8         reserved_at_22e[0x7];
 +	u8         reserved_32[0x7];
  	u8         qkv[0x1];
  	u8         pkv[0x1];
++<<<<<<< HEAD
 +	u8         reserved_33[0x4];
++=======
+ 	u8         set_deth_sqpn[0x1];
+ 	u8         reserved_at_239[0x3];
++>>>>>>> b11a4f9cde1c (IB/mlx5: Add support for setting source QP number)
  	u8         xrc[0x1];
  	u8         ud[0x1];
  	u8         uc[0x1];
diff --git a/drivers/infiniband/hw/mlx5/mlx5_ib.h b/drivers/infiniband/hw/mlx5/mlx5_ib.h
index 34dc68c37d1b..cbd78103a6ce 100644
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@ -165,6 +165,18 @@ struct mlx5_ib_flow_db {
 #define MLX5_IB_QPT_REG_UMR	IB_QPT_RESERVED1
 #define MLX5_IB_WR_UMR		IB_WR_RESERVED1
 
+/* Private QP creation flags to be passed in ib_qp_init_attr.create_flags.
+ *
+ * These flags are intended for internal use by the mlx5_ib driver, and they
+ * rely on the range reserved for that use in the ib_qp_create_flags enum.
+ */
+
+/* Create a UD QP whose source QP number is 1 */
+static inline enum ib_qp_create_flags mlx5_ib_create_qp_sqpn_qp1(void)
+{
+	return IB_QP_CREATE_RESERVED_START;
+}
+
 struct wr_list {
 	u16	opcode;
 	u16	next;
@@ -308,6 +320,8 @@ enum mlx5_ib_qp_flags {
 	MLX5_IB_QP_MANAGED_SEND             = IB_QP_CREATE_MANAGED_SEND,
 	MLX5_IB_QP_MANAGED_RECV             = IB_QP_CREATE_MANAGED_RECV,
 	MLX5_IB_QP_SIGNATURE_HANDLING           = 1 << 5,
+	/* QP uses 1 as its source QP number */
+	MLX5_IB_QP_SQPN_QP1			= 1 << 6,
 };
 
 struct mlx5_umr_wr {
* Unmerged path drivers/infiniband/hw/mlx5/qp.c
* Unmerged path include/linux/mlx5/mlx5_ifc.h
diff --git a/include/linux/mlx5/qp.h b/include/linux/mlx5/qp.h
index f033c7a1490c..f656a8526ace 100644
--- a/include/linux/mlx5/qp.h
+++ b/include/linux/mlx5/qp.h
@@ -499,7 +499,8 @@ struct mlx5_qp_context {
 	u8			reserved2[4];
 	__be32			next_send_psn;
 	__be32			cqn_send;
-	u8			reserved3[8];
+	__be32			deth_sqpn;
+	u8			reserved3[4];
 	__be32			last_acked_psn;
 	__be32			ssn;
 	__be32			params2;
