x86/nmi/64: Switch stacks on userspace NMI entry

jira LE-1907
cve CVE-2015-5157
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] nmi: Switch stacks on userspace NMI entry (Mateusz Guzik) [1259583] {CVE-2015-5157}
Rebuild_FUZZ: 92.13%
commit-author Andy Lutomirski <luto@kernel.org>
commit 9b6e6a8334d56354853f9c255d1395c2ba570e0a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9b6e6a83.failed

Returning to userspace is tricky: IRET can fail, and ESPFIX can
rearrange the stack prior to IRET.

The NMI nesting fixup relies on a precise stack layout and
atomic IRET.  Rather than trying to teach the NMI nesting fixup
to handle ESPFIX and failed IRET, punt: run NMIs that came from
user mode on the normal kernel stack.

This will make some nested NMIs visible to C code, but the C
code is okay with that.

As a side effect, this should speed up perf: it eliminates an
RDMSR when NMIs come from user mode.

	Signed-off-by: Andy Lutomirski <luto@kernel.org>
	Reviewed-by: Steven Rostedt <rostedt@goodmis.org>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: stable@vger.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 9b6e6a8334d56354853f9c255d1395c2ba570e0a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/entry/entry_64.S
* Unmerged path arch/x86/entry/entry_64.S
* Unmerged path arch/x86/entry/entry_64.S
