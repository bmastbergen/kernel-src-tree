nfsd: eliminate sending duplicate and repeated delegations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Andrew Elble <aweits@rit.edu>
commit 34ed9872e745fa56f10e9bef2cf3d2336c6c8816
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/34ed9872.failed

We've observed the nfsd server in a state where there are
multiple delegations on the same nfs4_file for the same client.
The nfs client does attempt to DELEGRETURN these when they are presented to
it - but apparently under some (unknown) circumstances the client does not
manage to return all of them. This leads to the eventual
attempt to CB_RECALL more than one delegation with the same nfs
filehandle to the same client. The first recall will succeed, but the
next recall will fail with NFS4ERR_BADHANDLE. This leads to the server
having delegations on cl_revoked that the client has no way to FREE
or DELEGRETURN, with resulting inability to recover. The state manager
on the server will continually assert SEQ4_STATUS_RECALLABLE_STATE_REVOKED,
and the state manager on the client will be looping unable to satisfy
the server.

List discussion also reports a race between OPEN and DELEGRETURN that
will be avoided by only sending the delegation once to the
client. This is also logically in accordance with RFC5561 9.1.1 and 10.2.

So, let's:

1.) Not hand out duplicate delegations.
2.) Only send them to the client once.

RFC 5561:

9.1.1:
"Delegations and layouts, on the other hand, are not associated with a
specific owner but are associated with the client as a whole
(identified by a client ID)."

10.2:
"...the stateid for a delegation is associated with a client ID and may be
used on behalf of all the open-owners for the given client.  A
delegation is made to the client as a whole and not to any specific
process or thread of control within it."

	Reported-by: Eric Meddaugh <etmsys@rit.edu>
	Cc: Trond Myklebust <trond.myklebust@primarydata.com>
	Cc: Olga Kornievskaia <aglo@umich.edu>
	Signed-off-by: Andrew Elble <aweits@rit.edu>
	Cc: stable@vger.kernel.org
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 34ed9872e745fa56f10e9bef2cf3d2336c6c8816)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4state.c
diff --cc fs/nfsd/nfs4state.c
index 3d8207e252c8,6411c3421870..000000000000
--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@@ -3930,7 -4096,16 +3997,20 @@@ nfs4_set_delegation(struct nfs4_client 
  	if (fp->fi_had_conflict)
  		return ERR_PTR(-EAGAIN);
  
++<<<<<<< HEAD
 +	dp = alloc_init_deleg(clp, fh);
++=======
+ 	spin_lock(&state_lock);
+ 	spin_lock(&fp->fi_lock);
+ 	status = nfs4_get_existing_delegation(clp, fp);
+ 	spin_unlock(&fp->fi_lock);
+ 	spin_unlock(&state_lock);
+ 
+ 	if (status)
+ 		return ERR_PTR(status);
+ 
+ 	dp = alloc_init_deleg(clp, fh, odstate);
++>>>>>>> 34ed9872e745 (nfsd: eliminate sending duplicate and repeated delegations)
  	if (!dp)
  		return ERR_PTR(-ENOMEM);
  
* Unmerged path fs/nfsd/nfs4state.c
