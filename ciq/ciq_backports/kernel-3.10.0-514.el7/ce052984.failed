PCI: Add device flag helper functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ethan Zhao <ethan.zhao@oracle.com>
commit ce0529843a505d09f5809a7db6288d2f038f64c4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ce052984.failed

Add helper functions to hide direct device flag operations:

    void pci_set_dev_assigned(struct pci_dev *dev);
    void pci_clear_dev_assigned(struct pci_dev *dev);
    bool pci_is_dev_assigned(struct pci_dev *dev);

	Signed-off-by: Ethan Zhao <ethan.zhao@oracle.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit ce0529843a505d09f5809a7db6288d2f038f64c4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pci.h
diff --cc include/linux/pci.h
index 137673c13695,92c131efec1c..000000000000
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@@ -1871,14 -1839,17 +1871,29 @@@ int pci_for_each_dma_alias(struct pci_d
   */
  struct pci_dev *pci_find_upstream_pcie_bridge(struct pci_dev *pdev);
  
++<<<<<<< HEAD
 +/**
 + * pci_ari_enabled - query ARI forwarding status
 + * @bus: the PCI bus
 + *
 + * Returns true if ARI forwarding is enabled.
 + */
 +static inline bool pci_ari_enabled(struct pci_bus *bus)
 +{
 +	return bus->self && bus->self->ari_enabled;
++=======
+ /* helper functions for operation of device flag */
+ static inline void pci_set_dev_assigned(struct pci_dev *pdev)
+ {
+ 	pdev->dev_flags |= PCI_DEV_FLAGS_ASSIGNED;
+ }
+ static inline void pci_clear_dev_assigned(struct pci_dev *pdev)
+ {
+ 	pdev->dev_flags &= ~PCI_DEV_FLAGS_ASSIGNED;
+ }
+ static inline bool pci_is_dev_assigned(struct pci_dev *pdev)
+ {
+ 	return (pdev->dev_flags & PCI_DEV_FLAGS_ASSIGNED) == PCI_DEV_FLAGS_ASSIGNED;
++>>>>>>> ce0529843a50 (PCI: Add device flag helper functions)
  }
  #endif /* LINUX_PCI_H */
* Unmerged path include/linux/pci.h
