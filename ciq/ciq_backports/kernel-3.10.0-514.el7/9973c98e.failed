dax: add support for fsync/sync

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Ross Zwisler <ross.zwisler@linux.intel.com>
commit 9973c98ecfda3a1dfcab981665b5f1e39bcde64a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/9973c98e.failed

To properly handle fsync/msync in an efficient way DAX needs to track
dirty pages so it is able to flush them durably to media on demand.

The tracking of dirty pages is done via the radix tree in struct
address_space.  This radix tree is already used by the page writeback
infrastructure for tracking dirty pages associated with an open file,
and it already has support for exceptional (non struct page*) entries.
We build upon these features to add exceptional entries to the radix
tree for DAX dirty PMD or PTE pages at fault time.

[dan.j.williams@intel.com: fix dax_pmd_dbg build warning]
	Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
	Cc: "H. Peter Anvin" <hpa@zytor.com>
	Cc: "J. Bruce Fields" <bfields@fieldses.org>
	Cc: "Theodore Ts'o" <tytso@mit.edu>
	Cc: Alexander Viro <viro@zeniv.linux.org.uk>
	Cc: Andreas Dilger <adilger.kernel@dilger.ca>
	Cc: Dave Chinner <david@fromorbit.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Jan Kara <jack@suse.com>
	Cc: Jeff Layton <jlayton@poochiereds.net>
	Cc: Matthew Wilcox <willy@linux.intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Matthew Wilcox <matthew.r.wilcox@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 9973c98ecfda3a1dfcab981665b5f1e39bcde64a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/dax.c
#	include/linux/dax.h
* Unmerged path fs/dax.c
* Unmerged path include/linux/dax.h
* Unmerged path fs/dax.c
* Unmerged path include/linux/dax.h
diff --git a/mm/filemap.c b/mm/filemap.c
index 813fbe54f73b..1c2fa403f7ff 100644
--- a/mm/filemap.c
+++ b/mm/filemap.c
@@ -437,6 +437,12 @@ int filemap_write_and_wait_range(struct address_space *mapping,
 {
 	int err = 0;
 
+	if (dax_mapping(mapping) && mapping->nrexceptional) {
+		err = dax_writeback_mapping_range(mapping, lstart, lend);
+		if (err)
+			return err;
+	}
+
 	if (mapping->nrpages) {
 		err = __filemap_fdatawrite_range(mapping, lstart, lend,
 						 WB_SYNC_ALL);
