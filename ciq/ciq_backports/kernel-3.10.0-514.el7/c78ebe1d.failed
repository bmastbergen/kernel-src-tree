macsec: fix reference counting on RXSC in macsec_handle_frame

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sabrina Dubroca <sd@queasysnail.net>
commit c78ebe1df01f4ef3fb07be1359bc34df6708d99c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c78ebe1d.failed

Currently, we lookup the RXSC without taking a reference on it.  The
RXSA holds a reference on the RXSC, but the SA and SC could still both
disappear before we take a reference on the SA.

Take a reference on the RXSC in macsec_handle_frame.

Fixes: c09440f7dcb3 ("macsec: introduce IEEE 802.1AE driver")
	Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c78ebe1df01f4ef3fb07be1359bc34df6708d99c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macsec.c
diff --cc drivers/net/macsec.c
index dbce7934a270,718cf98023ff..000000000000
--- a/drivers/net/macsec.c
+++ b/drivers/net/macsec.c
@@@ -1193,7 -1202,13 +1198,17 @@@ deliver
  
  	if (rx_sa)
  		macsec_rxsa_put(rx_sa);
++<<<<<<< HEAD
 +	count_rx(dev, skb->len);
++=======
+ 	macsec_rxsc_put(rx_sc);
+ 
+ 	ret = gro_cells_receive(&macsec->gro_cells, skb);
+ 	if (ret == NET_RX_SUCCESS)
+ 		count_rx(dev, skb->len);
+ 	else
+ 		macsec->secy.netdev->stats.rx_dropped++;
++>>>>>>> c78ebe1df01f (macsec: fix reference counting on RXSC in macsec_handle_frame)
  
  	rcu_read_unlock();
  
* Unmerged path drivers/net/macsec.c
