mmc: sdhci: add platform get_max_timeout_count hook

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mmc] sdhci: add platform get_max_timeout_count hook (Don Zickus) [1127975 1277866 1280133 1286932 1297039]
Rebuild_FUZZ: 94.85%
commit-author Aisheng Dong <b29396@freescale.com>
commit a6ff5aeb9b31f7b71a8566f8e130ad66bd103d20
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a6ff5aeb.failed

Currently the max timeout count is hardcode to 1 << 27 for calcuate
the max_busy_timeout, however, for some platforms the max timeout
count may not be 1 << 27, e.g. i.MX uSDHC is 1 << 28.
Thus 1 << 27 is not correct for such platform.

It is also possible that other platforms may have different values.
To be flexible, we add a get_max_timeout_count hook to get the correct
maximum timeout value for these platforms.

	Reviewed-by: Shawn Guo <shawn.guo@linaro.org>
	Signed-off-by: Dong Aisheng <b29396@freescale.com>
	Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
(cherry picked from commit a6ff5aeb9b31f7b71a8566f8e130ad66bd103d20)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sdhci.h
diff --cc drivers/mmc/host/sdhci.h
index 704d0c2abf12,b13050968946..000000000000
--- a/drivers/mmc/host/sdhci.h
+++ b/drivers/mmc/host/sdhci.h
@@@ -281,8 -281,8 +281,13 @@@ struct sdhci_ops 
  	unsigned int	(*get_max_clock)(struct sdhci_host *host);
  	unsigned int	(*get_min_clock)(struct sdhci_host *host);
  	unsigned int	(*get_timeout_clock)(struct sdhci_host *host);
++<<<<<<< HEAD
 +	int		(*platform_bus_width)(struct sdhci_host *host,
 +					       int width);
++=======
+ 	unsigned int	(*get_max_timeout_count)(struct sdhci_host *host);
+ 	void		(*set_bus_width)(struct sdhci_host *host, int width);
++>>>>>>> a6ff5aeb9b31 (mmc: sdhci: add platform get_max_timeout_count hook)
  	void (*platform_send_init_74_clocks)(struct sdhci_host *host,
  					     u8 power_mode);
  	unsigned int    (*get_ro)(struct sdhci_host *host);
diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c
index 083c3f4ebb88..c0f7ee279555 100644
--- a/drivers/mmc/host/sdhci.c
+++ b/drivers/mmc/host/sdhci.c
@@ -1222,7 +1222,10 @@ clock_set:
 		if (host->quirks & SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK) {
 			host->timeout_clk = host->mmc->actual_clock / 1000;
 			host->mmc->max_busy_timeout =
-				(1 << 27) / host->timeout_clk;
+					host->ops->get_max_timeout_count ?
+					host->ops->get_max_timeout_count(host) :
+					1 << 27;
+			host->mmc->max_busy_timeout /= host->timeout_clk;
 		}
 	}
 
@@ -2950,7 +2953,9 @@ int sdhci_add_host(struct sdhci_host *host)
 	if (host->quirks & SDHCI_QUIRK_DATA_TIMEOUT_USES_SDCLK)
 		host->timeout_clk = mmc->f_max / 1000;
 
-	mmc->max_busy_timeout = (1 << 27) / host->timeout_clk;
+	mmc->max_busy_timeout = host->ops->get_max_timeout_count ?
+			host->ops->get_max_timeout_count(host) : 1 << 27;
+	mmc->max_busy_timeout /= host->timeout_clk;
 
 	mmc->caps |= MMC_CAP_SDIO_IRQ | MMC_CAP_ERASE | MMC_CAP_CMD23;
 	mmc->caps2 |= MMC_CAP2_SDIO_IRQ_NOTHREAD;
* Unmerged path drivers/mmc/host/sdhci.h
