nfsd/sunrpc: move sv_module parm into sv_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jeff Layton <jlayton@primarydata.com>
commit 758f62fff9ad630f05866a1dd6ae9453a7730c2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/758f62ff.failed

...not technically an operation, but it's more convenient and cleaner
to pass the module pointer in this struct.

	Signed-off-by: Shirley Ma <shirley.ma@oracle.com>
	Acked-by: Jeff Layton <jlayton@primarydata.com>
	Tested-by: Shirley Ma <shirley.ma@oracle.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 758f62fff9ad630f05866a1dd6ae9453a7730c2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfssvc.c
#	include/linux/sunrpc/svc.h
#	net/sunrpc/svc.c
diff --cc fs/nfsd/nfssvc.c
index 5ba2659eb9e1,17ceaad5f80a..000000000000
--- a/fs/nfsd/nfssvc.c
+++ b/fs/nfsd/nfssvc.c
@@@ -391,6 -391,12 +391,15 @@@ static int nfsd_get_default_max_blksize
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static struct svc_serv_ops nfsd_sv_ops = {
+ 	.svo_shutdown = nfsd_last_thread,
+ 	.svo_function = nfsd,
+ 	.svo_module = THIS_MODULE,
+ };
+ 
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  int nfsd_create_serv(struct net *net)
  {
  	int error;
@@@ -405,7 -411,7 +414,11 @@@
  		nfsd_max_blksize = nfsd_get_default_max_blksize();
  	nfsd_reset_versions();
  	nn->nfsd_serv = svc_create_pooled(&nfsd_program, nfsd_max_blksize,
++<<<<<<< HEAD
 +				      nfsd_last_thread, nfsd, THIS_MODULE);
++=======
+ 						&nfsd_sv_ops);
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  	if (nn->nfsd_serv == NULL)
  		return -ENOMEM;
  
diff --cc include/linux/sunrpc/svc.h
index 960832d76aed,0150003d584b..000000000000
--- a/include/linux/sunrpc/svc.h
+++ b/include/linux/sunrpc/svc.h
@@@ -55,6 -49,19 +55,22 @@@ struct svc_pool 
  	unsigned long		sp_flags;
  } ____cacheline_aligned_in_smp;
  
++<<<<<<< HEAD
++=======
+ struct svc_serv;
+ 
+ struct svc_serv_ops {
+ 	/* Callback to use when last thread exits. */
+ 	void		(*svo_shutdown)(struct svc_serv *, struct net *);
+ 
+ 	/* function for service threads to run */
+ 	int		(*svo_function)(void *);
+ 
+ 	/* optional module to count when adding threads (pooled svcs only) */
+ 	struct module	*svo_module;
+ };
+ 
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  /*
   * RPC service.
   *
@@@ -86,16 -93,7 +102,20 @@@ struct svc_serv 
  
  	unsigned int		sv_nrpools;	/* number of thread pools */
  	struct svc_pool *	sv_pools;	/* array of thread pools */
++<<<<<<< HEAD
 +
 +	void			(*sv_shutdown)(struct svc_serv *serv,
 +					       struct net *net);
 +						/* Callback to use when last thread
 +						 * exits.
 +						 */
 +
 +	struct module *		sv_module;	/* optional module to count when
 +						 * adding threads */
 +	svc_thread_fn		sv_function;	/* main function for threads */
++=======
+ 	struct svc_serv_ops	*sv_ops;	/* server operations */
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  #if defined(CONFIG_SUNRPC_BACKCHANNEL)
  	struct list_head	sv_cb_list;	/* queue for callback requests
  						 * that arrive over the same
@@@ -432,8 -433,7 +452,12 @@@ struct svc_rqst *svc_prepare_thread(str
  					struct svc_pool *pool, int node);
  void		   svc_exit_thread(struct svc_rqst *);
  struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,
++<<<<<<< HEAD
 +			void (*shutdown)(struct svc_serv *, struct net *net),
 +			svc_thread_fn, struct module *);
++=======
+ 			struct svc_serv_ops *);
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  int		   svc_set_num_threads(struct svc_serv *, struct svc_pool *, int);
  int		   svc_pool_stats_open(struct svc_serv *serv, struct file *file);
  void		   svc_destroy(struct svc_serv *);
diff --cc net/sunrpc/svc.c
index 49bb1604043e,5a6be22a7904..000000000000
--- a/net/sunrpc/svc.c
+++ b/net/sunrpc/svc.c
@@@ -498,18 -494,14 +498,25 @@@ EXPORT_SYMBOL_GPL(svc_create)
  
  struct svc_serv *
  svc_create_pooled(struct svc_program *prog, unsigned int bufsize,
++<<<<<<< HEAD
 +		  void (*shutdown)(struct svc_serv *serv, struct net *net),
 +		  svc_thread_fn func, struct module *mod)
++=======
+ 		  struct svc_serv_ops *ops)
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  {
  	struct svc_serv *serv;
  	unsigned int npools = svc_pool_map_get();
  
 -	serv = __svc_create(prog, bufsize, npools, ops);
 +	serv = __svc_create(prog, bufsize, npools, shutdown);
  	if (!serv)
  		goto out_err;
++<<<<<<< HEAD
 +
 +	serv->sv_function = func;
 +	serv->sv_module = mod;
++=======
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  	return serv;
  out_err:
  	svc_pool_map_put();
@@@ -740,12 -735,12 +747,18 @@@ svc_set_num_threads(struct svc_serv *se
  			break;
  		}
  
++<<<<<<< HEAD
 +		__module_get(serv->sv_module);
 +		task = kthread_create_on_node(serv->sv_function, rqstp,
 +					      node, serv->sv_name);
++=======
+ 		__module_get(serv->sv_ops->svo_module);
+ 		task = kthread_create_on_node(serv->sv_ops->svo_function, rqstp,
+ 					      node, "%s", serv->sv_name);
++>>>>>>> 758f62fff9ad (nfsd/sunrpc: move sv_module parm into sv_ops)
  		if (IS_ERR(task)) {
  			error = PTR_ERR(task);
- 			module_put(serv->sv_module);
+ 			module_put(serv->sv_ops->svo_module);
  			svc_exit_thread(rqstp);
  			break;
  		}
* Unmerged path fs/nfsd/nfssvc.c
* Unmerged path include/linux/sunrpc/svc.h
* Unmerged path net/sunrpc/svc.c
