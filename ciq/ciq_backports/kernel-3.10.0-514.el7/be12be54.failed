USB: host: ohci-at91: depend on OF

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [usb] host: ohci-at91: depend on OF (Torez Smith) [1303955]
Rebuild_FUZZ: 92.06%
commit-author Alexandre Belloni <alexandre.belloni@free-electrons.com>
commit be12be546baa26a1eeb59b78e2a616cd946e850a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/be12be54.failed

Make the driver depend on CONFIG_OF and remove the now useless #ifdef

Also, fix the Kconfig indentation.

	Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit be12be546baa26a1eeb59b78e2a616cd946e850a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/Kconfig
#	drivers/usb/host/ohci-at91.c
diff --cc drivers/usb/host/Kconfig
index e2b167288da2,079991e283e9..000000000000
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@@ -397,8 -405,58 +397,61 @@@ config USB_OHCI_HCD_OMAP
  	---help---
  	  Enables support for the OHCI controller on OMAP1/2 chips.
  
++<<<<<<< HEAD
++=======
+ config USB_OHCI_HCD_SPEAR
+         tristate "Support for ST SPEAr on-chip OHCI USB controller"
+         depends on USB_OHCI_HCD && PLAT_SPEAR
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           ST SPEAr chips.
+ 
+ config USB_OHCI_HCD_STI
+ 	tristate "Support for ST STiHxxx on-chip OHCI USB controller"
+ 	depends on ARCH_STI && OF
+ 	select GENERIC_PHY
+ 	select USB_OHCI_HCD_PLATFORM
+ 	help
+ 	  Enable support for the on-chip OHCI controller found on
+ 	  STMicroelectronics consumer electronics SoC's.
+ 
+ config USB_OHCI_HCD_S3C2410
+         tristate "OHCI support for Samsung S3C24xx/S3C64xx SoC series"
+         depends on USB_OHCI_HCD && (ARCH_S3C24XX || ARCH_S3C64XX)
+         default y
+         ---help---
+           Enables support for the on-chip OHCI controller on
+           S3C24xx/S3C64xx chips.
+ 
+ config USB_OHCI_HCD_LPC32XX
+ 	tristate "Support for LPC on-chip OHCI USB controller"
+ 	depends on USB_OHCI_HCD && ARCH_LPC32XX
+ 	depends on USB_ISP1301
+ 	default y
+ 	---help---
+           Enables support for the on-chip OHCI controller on
+           NXP chips.
+ 
+ config USB_OHCI_HCD_PXA27X
+ 	tristate "Support for PXA27X/PXA3XX on-chip OHCI USB controller"
+ 	depends on USB_OHCI_HCD && (PXA27x || PXA3xx)
+ 	default y
+ 	---help---
+ 	  Enables support for the on-chip OHCI controller on
+ 	  PXA27x/PXA3xx chips.
+ 
+ config USB_OHCI_HCD_AT91
+ 	tristate "Support for Atmel on-chip OHCI USB controller"
+ 	depends on USB_OHCI_HCD && ARCH_AT91 && OF
+ 	default y
+ 	---help---
+           Enables support for the on-chip OHCI controller on
+           Atmel chips.
+ 
++>>>>>>> be12be546baa (USB: host: ohci-at91: depend on OF)
  config USB_OHCI_HCD_OMAP3
 -	tristate "OHCI support for OMAP3 and later chips"
 +	bool "OHCI support for OMAP3 and later chips"
  	depends on (ARCH_OMAP3 || ARCH_OMAP4)
  	default y
  	---help---
diff --cc drivers/usb/host/ohci-at91.c
index 2ee1496dbc1d,8e17d5ba26c6..000000000000
--- a/drivers/usb/host/ohci-at91.c
+++ b/drivers/usb/host/ohci-at91.c
@@@ -719,11 -674,43 +712,16 @@@ static struct platform_driver ohci_hcd_
  	.probe		= ohci_hcd_at91_drv_probe,
  	.remove		= ohci_hcd_at91_drv_remove,
  	.shutdown	= usb_hcd_platform_shutdown,
 +	.suspend	= ohci_hcd_at91_drv_suspend,
 +	.resume		= ohci_hcd_at91_drv_resume,
  	.driver		= {
  		.name	= "at91_ohci",
++<<<<<<< HEAD
 +		.owner	= THIS_MODULE,
 +		.of_match_table	= of_match_ptr(at91_ohci_dt_ids),
++=======
+ 		.pm	= &ohci_hcd_at91_pm_ops,
+ 		.of_match_table	= at91_ohci_dt_ids,
++>>>>>>> be12be546baa (USB: host: ohci-at91: depend on OF)
  	},
  };
 -
 -static int __init ohci_at91_init(void)
 -{
 -	if (usb_disabled())
 -		return -ENODEV;
 -
 -	pr_info("%s: " DRIVER_DESC "\n", hcd_name);
 -	ohci_init_driver(&ohci_at91_hc_driver, &ohci_at91_drv_overrides);
 -
 -	/*
 -	 * The Atmel HW has some unusual quirks, which require Atmel-specific
 -	 * workarounds. We override certain hc_driver functions here to
 -	 * achieve that. We explicitly do not enhance ohci_driver_overrides to
 -	 * allow this more easily, since this is an unusual case, and we don't
 -	 * want to encourage others to override these functions by making it
 -	 * too easy.
 -	 */
 -
 -	ohci_at91_hc_driver.hub_status_data	= ohci_at91_hub_status_data;
 -	ohci_at91_hc_driver.hub_control		= ohci_at91_hub_control;
 -
 -	return platform_driver_register(&ohci_hcd_at91_driver);
 -}
 -module_init(ohci_at91_init);
 -
 -static void __exit ohci_at91_cleanup(void)
 -{
 -	platform_driver_unregister(&ohci_hcd_at91_driver);
 -}
 -module_exit(ohci_at91_cleanup);
 -
 -MODULE_DESCRIPTION(DRIVER_DESC);
 -MODULE_LICENSE("GPL");
 -MODULE_ALIAS("platform:at91_ohci");
* Unmerged path drivers/usb/host/Kconfig
* Unmerged path drivers/usb/host/ohci-at91.c
