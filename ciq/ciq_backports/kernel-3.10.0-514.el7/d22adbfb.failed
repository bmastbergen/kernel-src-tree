net: cdc_ncm: fix typo in test for supported formats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit d22adbfb39d190adb43c954ed308f2865f5e481f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d22adbfb.failed

There is a typo here where we test for USB_CDC_NCM_NTH32_SIGN instead
of USB_CDC_NCM_NTB32_SUPPORTED.  The test probably still works as
written because 0x686D636E has (1 << 1) set and doesn't have (1 << 0)
set.

Fixes: f8afb73da375 ('net: cdc_ncm: factor out one-time device initialization')
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d22adbfb39d190adb43c954ed308f2865f5e481f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/cdc_ncm.c
diff --cc drivers/net/usb/cdc_ncm.c
index 3e949af8a290,93c9ca9924eb..000000000000
--- a/drivers/net/usb/cdc_ncm.c
+++ b/drivers/net/usb/cdc_ncm.c
@@@ -104,7 -340,36 +104,40 @@@ static u8 cdc_ncm_setup(struct usbnet *
  		return err; /* GET_NTB_PARAMETERS is required */
  	}
  
++<<<<<<< HEAD
 +	/* read correct set of parameters according to device mode */
++=======
+ 	/* set CRC Mode */
+ 	if (cdc_ncm_flags(dev) & USB_CDC_NCM_NCAP_CRC_MODE) {
+ 		dev_dbg(&dev->intf->dev, "Setting CRC mode off\n");
+ 		err = usbnet_write_cmd(dev, USB_CDC_SET_CRC_MODE,
+ 				       USB_TYPE_CLASS | USB_DIR_OUT
+ 				       | USB_RECIP_INTERFACE,
+ 				       USB_CDC_NCM_CRC_NOT_APPENDED,
+ 				       iface_no, NULL, 0);
+ 		if (err < 0)
+ 			dev_err(&dev->intf->dev, "SET_CRC_MODE failed\n");
+ 	}
+ 
+ 	/* set NTB format, if both formats are supported.
+ 	 *
+ 	 * "The host shall only send this command while the NCM Data
+ 	 *  Interface is in alternate setting 0."
+ 	 */
+ 	if (le16_to_cpu(ctx->ncm_parm.bmNtbFormatsSupported) &
+ 						USB_CDC_NCM_NTB32_SUPPORTED) {
+ 		dev_dbg(&dev->intf->dev, "Setting NTB format to 16-bit\n");
+ 		err = usbnet_write_cmd(dev, USB_CDC_SET_NTB_FORMAT,
+ 				       USB_TYPE_CLASS | USB_DIR_OUT
+ 				       | USB_RECIP_INTERFACE,
+ 				       USB_CDC_NCM_NTB16_FORMAT,
+ 				       iface_no, NULL, 0);
+ 		if (err < 0)
+ 			dev_err(&dev->intf->dev, "SET_NTB_FORMAT failed\n");
+ 	}
+ 
+ 	/* set initial device values */
++>>>>>>> d22adbfb39d1 (net: cdc_ncm: fix typo in test for supported formats)
  	ctx->rx_max = le32_to_cpu(ctx->ncm_parm.dwNtbInMaxSize);
  	ctx->tx_max = le32_to_cpu(ctx->ncm_parm.dwNtbOutMaxSize);
  	ctx->tx_remainder = le16_to_cpu(ctx->ncm_parm.wNdpOutPayloadRemainder);
* Unmerged path drivers/net/usb/cdc_ncm.c
