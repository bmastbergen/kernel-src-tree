mm: take i_mmap_lock in unmap_mapping_range() for DAX

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] take i_mmap_lock in unmap_mapping_range() for DAX (Jeff Moyer) [1345801 1348502 1348836 1350149 1350156]
Rebuild_FUZZ: 96.08%
commit-author Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
commit 46c043ede4711e8d598b9d63c5616c1fedb0605e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/46c043ed.failed

DAX is not so special: we need i_mmap_lock to protect mapping->i_mmap.

__dax_pmd_fault() uses unmap_mapping_range() shoot out zero page from
all mappings.  We need to drop i_mmap_lock there to avoid lock deadlock.

Re-aquiring the lock should be fine since we check i_size after the
point.

	Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Matthew Wilcox <willy@linux.intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 46c043ede4711e8d598b9d63c5616c1fedb0605e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/dax.c
#	mm/memory.c
diff --cc mm/memory.c
index 66d68efad529,ce8e983f3c4d..000000000000
--- a/mm/memory.c
+++ b/mm/memory.c
@@@ -3194,13 -2426,10 +3194,20 @@@ void unmap_mapping_range(struct address
  	if (details.last_index < details.first_index)
  		details.last_index = ULONG_MAX;
  
++<<<<<<< HEAD
 +
 +	mutex_lock(&mapping->i_mmap_mutex);
 +	if (unlikely(!RB_EMPTY_ROOT(&mapping->i_mmap)))
 +		unmap_mapping_range_tree(&mapping->i_mmap, &details);
 +	if (unlikely(!list_empty(&mapping->i_mmap_nonlinear)))
 +		unmap_mapping_range_list(&mapping->i_mmap_nonlinear, &details);
 +	mutex_unlock(&mapping->i_mmap_mutex);
++=======
+ 	i_mmap_lock_write(mapping);
+ 	if (unlikely(!RB_EMPTY_ROOT(&mapping->i_mmap)))
+ 		unmap_mapping_range_tree(&mapping->i_mmap, &details);
+ 	i_mmap_unlock_write(mapping);
++>>>>>>> 46c043ede471 (mm: take i_mmap_lock in unmap_mapping_range() for DAX)
  }
  EXPORT_SYMBOL(unmap_mapping_range);
  
* Unmerged path fs/dax.c
* Unmerged path fs/dax.c
* Unmerged path mm/memory.c
