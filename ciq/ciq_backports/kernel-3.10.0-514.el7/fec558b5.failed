NVMe: fix type warning on 32-bit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Arnd Bergmann <arnd@arndb.de>
commit fec558b5f178d9eb35d2ed76f15489c60e3590bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/fec558b5.failed

A recent change to the ioctl handling caused a new harmless
warning in the NVMe driver on all 32-bit machines:

drivers/block/nvme-core.c: In function 'nvme_submit_io':
drivers/block/nvme-core.c:1794:29: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

In order to shup up that warning, this introduces a new
temporary variable that uses a double cast to extract
the pointer from an __u64 structure member.

	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
Fixes: a67a95134ff ("NVMe: Meta data handling through submit io ioctl")
	Acked-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit fec558b5f178d9eb35d2ed76f15489c60e3590bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/nvme-core.c
diff --cc drivers/block/nvme-core.c
index a8d9055d2103,683dff272562..000000000000
--- a/drivers/block/nvme-core.c
+++ b/drivers/block/nvme-core.c
@@@ -1661,14 -1788,14 +1664,23 @@@ static int nvme_submit_io(struct nvme_n
  	}
  	if (meta_len) {
  		meta = dma_alloc_coherent(&dev->pci_dev->dev, meta_len,
++<<<<<<< HEAD
 +					  &meta_dma, GFP_KERNEL);
++=======
+ 						&meta_dma, GFP_KERNEL);
+ 
++>>>>>>> fec558b5f178 (NVMe: fix type warning on 32-bit)
  		if (!meta) {
  			status = -ENOMEM;
  			goto unmap;
  		}
  		if (write) {
++<<<<<<< HEAD
 +			if (copy_from_user(meta, (void __user *)io.metadata,
 +					   meta_len)) {
++=======
+ 			if (copy_from_user(meta, metadata, meta_len)) {
++>>>>>>> fec558b5f178 (NVMe: fix type warning on 32-bit)
  				status = -EFAULT;
  				goto unmap;
  			}
@@@ -1693,11 -1820,9 +1705,15 @@@
   unmap:
  	nvme_unmap_user_pages(dev, write, iod);
  	nvme_free_iod(dev, iod);
 +
  	if (meta) {
  		if (status == NVME_SC_SUCCESS && !write) {
++<<<<<<< HEAD
 +			if (copy_to_user((void __user *)io.metadata, meta,
 +					 meta_len))
++=======
+ 			if (copy_to_user(metadata, meta, meta_len))
++>>>>>>> fec558b5f178 (NVMe: fix type warning on 32-bit)
  				status = -EFAULT;
  		}
  		dma_free_coherent(&dev->pci_dev->dev, meta_len, meta, meta_dma);
* Unmerged path drivers/block/nvme-core.c
