perf sort: Provide a way to find out if per-thread bucketing is in place

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit cfd92dadc5e830268036efb25ff41618f29c3306
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/cfd92dad.failed

Now the UI browsers will be able to offer thread related operations only
if the thread is part of the sort order in use, i.e. if hist_entry stats
are all for a single thread.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>,
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1452960197-5323-9-git-send-email-namhyung@kernel.org
[ Carved out from a  larger patch ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit cfd92dadc5e830268036efb25ff41618f29c3306)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/sort.c
#	tools/perf/util/sort.h
diff --cc tools/perf/util/sort.c
index cb6856b79208,898e4b0724bf..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -24,6 -24,8 +24,11 @@@ int		sort__need_collapse = 0
  int		sort__has_parent = 0;
  int		sort__has_sym = 0;
  int		sort__has_dso = 0;
++<<<<<<< HEAD
++=======
+ int		sort__has_socket = 0;
+ int		sort__has_thread = 0;
++>>>>>>> cfd92dadc5e8 (perf sort: Provide a way to find out if per-thread bucketing is in place)
  enum sort_mode	sort__mode = SORT_MODE__NORMAL;
  
  
@@@ -1902,6 -2135,10 +1907,13 @@@ static int sort_dimension__add(const ch
  
  		} else if (sd->entry == &sort_dso) {
  			sort__has_dso = 1;
++<<<<<<< HEAD
++=======
+ 		} else if (sd->entry == &sort_socket) {
+ 			sort__has_socket = 1;
+ 		} else if (sd->entry == &sort_thread) {
+ 			sort__has_thread = 1;
++>>>>>>> cfd92dadc5e8 (perf sort: Provide a way to find out if per-thread bucketing is in place)
  		}
  
  		return __sort_dimension__add(sd);
diff --cc tools/perf/util/sort.h
index 79a3c9516c6c,09616f03d412..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -34,6 -34,8 +34,11 @@@ extern int have_ignore_callees
  extern int sort__need_collapse;
  extern int sort__has_parent;
  extern int sort__has_sym;
++<<<<<<< HEAD
++=======
+ extern int sort__has_socket;
+ extern int sort__has_thread;
++>>>>>>> cfd92dadc5e8 (perf sort: Provide a way to find out if per-thread bucketing is in place)
  extern enum sort_mode sort__mode;
  extern struct sort_entry sort_comm;
  extern struct sort_entry sort_dso;
* Unmerged path tools/perf/util/sort.c
* Unmerged path tools/perf/util/sort.h
