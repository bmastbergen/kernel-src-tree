x86/microcode/intel: Check scan_microcode()'s retval

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [x86] microcode/intel: Check scan_microcode()'s retval (Prarit Bhargava) [1253762]
Rebuild_FUZZ: 96.00%
commit-author Borislav Petkov <bp@suse.de>
commit 4f1f605cfe3046c4c9f07920c47d3f801d31c0ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4f1f605c.failed

... and do not attempt to load anything in case of error.

	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 4f1f605cfe3046c4c9f07920c47d3f801d31c0ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/microcode/intel_early.c
diff --cc arch/x86/kernel/cpu/microcode/intel_early.c
index 42db0096a713,88a0348f455c..000000000000
--- a/arch/x86/kernel/cpu/microcode/intel_early.c
+++ b/arch/x86/kernel/cpu/microcode/intel_early.c
@@@ -543,12 -514,10 +543,18 @@@ EXPORT_SYMBOL_GPL(save_mc_for_early)
  
  static __initdata char ucode_name[] = "kernel/x86/microcode/GenuineIntel.bin";
  static __init enum ucode_state
++<<<<<<< HEAD
 +scan_microcode(unsigned long start, unsigned long end,
 +		struct mc_saved_data *mc_saved_data,
 +		unsigned long *mc_saved_in_initrd,
 +		struct ucode_cpu_info *uci)
++=======
+ scan_microcode(struct mc_saved_data *mc_saved_data, unsigned long *initrd,
+ 	       unsigned long start, unsigned long size,
+ 	       struct ucode_cpu_info *uci)
++>>>>>>> 4f1f605cfe30 (x86/microcode/intel: Check scan_microcode()'s retval)
  {
 +	unsigned int size = end - start + 1;
  	struct cpio_data cd;
  	long offset = 0;
  #ifdef CONFIG_X86_32
@@@ -564,10 -533,8 +570,9 @@@
  	if (!cd.data)
  		return UCODE_ERROR;
  
 +
  	return get_matching_model_microcode(0, start, cd.data, cd.size,
- 					    mc_saved_data, mc_saved_in_initrd,
- 					    uci);
+ 					    mc_saved_data, initrd, uci);
  }
  
  /*
@@@ -708,46 -678,44 +713,66 @@@ int __init save_microcode_in_initrd_int
  
  static void __init
  _load_ucode_intel_bsp(struct mc_saved_data *mc_saved_data,
++<<<<<<< HEAD
 +		      unsigned long *mc_saved_in_initrd,
 +		      unsigned long initrd_start_early,
 +		      unsigned long initrd_end_early,
 +		      struct ucode_cpu_info *uci)
 +{
 +	collect_cpu_info_early(uci);
 +	scan_microcode(initrd_start_early, initrd_end_early, mc_saved_data,
 +		       mc_saved_in_initrd, uci);
 +	load_microcode(mc_saved_data, mc_saved_in_initrd,
 +		       initrd_start_early, uci);
 +	apply_microcode_early(uci);
++=======
+ 		      unsigned long *initrd,
+ 		      unsigned long start, unsigned long size)
+ {
+ 	struct ucode_cpu_info uci;
+ 	enum ucode_state ret;
+ 
+ 	collect_cpu_info_early(&uci);
+ 
+ 	ret = scan_microcode(mc_saved_data, initrd, start, size, &uci);
+ 	if (ret != UCODE_OK)
+ 		return;
+ 
+ 	ret = load_microcode(mc_saved_data, initrd, start, &uci);
+ 	if (ret != UCODE_OK)
+ 		return;
+ 
+ 	apply_microcode_early(&uci, true);
++>>>>>>> 4f1f605cfe30 (x86/microcode/intel: Check scan_microcode()'s retval)
  }
  
 -void __init load_ucode_intel_bsp(void)
 +void __init
 +load_ucode_intel_bsp(void)
  {
 -	u64 start, size;
 +	u64 ramdisk_image, ramdisk_size;
 +	unsigned long initrd_start_early, initrd_end_early;
 +	struct ucode_cpu_info uci;
  #ifdef CONFIG_X86_32
 -	struct boot_params *p;
 +	struct boot_params *boot_params_p;
  
 -	p	= (struct boot_params *)__pa_nodebug(&boot_params);
 -	start	= p->hdr.ramdisk_image;
 -	size	= p->hdr.ramdisk_size;
 +	boot_params_p = (struct boot_params *)__pa_nodebug(&boot_params);
 +	ramdisk_image = boot_params_p->hdr.ramdisk_image;
 +	ramdisk_size  = boot_params_p->hdr.ramdisk_size;
 +	initrd_start_early = ramdisk_image;
 +	initrd_end_early = initrd_start_early + ramdisk_size;
  
  	_load_ucode_intel_bsp(
 -			(struct mc_saved_data *)__pa_nodebug(&mc_saved_data),
 -			(unsigned long *)__pa_nodebug(&mc_saved_in_initrd),
 -			start, size);
 +		(struct mc_saved_data *)__pa_nodebug(&mc_saved_data),
 +		(unsigned long *)__pa_nodebug(&mc_saved_in_initrd),
 +		initrd_start_early, initrd_end_early, &uci);
  #else
 -	start	= boot_params.hdr.ramdisk_image + PAGE_OFFSET;
 -	size	= boot_params.hdr.ramdisk_size;
 +	ramdisk_image = boot_params.hdr.ramdisk_image;
 +	ramdisk_size  = boot_params.hdr.ramdisk_size;
 +	initrd_start_early = ramdisk_image + PAGE_OFFSET;
 +	initrd_end_early = initrd_start_early + ramdisk_size;
  
 -	_load_ucode_intel_bsp(&mc_saved_data, mc_saved_in_initrd, start, size);
 +	_load_ucode_intel_bsp(&mc_saved_data, mc_saved_in_initrd,
 +			      initrd_start_early, initrd_end_early, &uci);
  #endif
  }
  
* Unmerged path arch/x86/kernel/cpu/microcode/intel_early.c
