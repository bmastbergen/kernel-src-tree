r8152: wake up the device before dumping the hw counter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author hayeswang <hayeswang@realtek.com>
commit 0b0302449110ca5ca4350458ed57b971fcb78ec1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/0b030244.failed

The device should be waked up from runtime suspend before dumping
the hw counter.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0b0302449110ca5ca4350458ed57b971fcb78ec1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index ffe3b814ce67,a795ecf8d5b6..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -3140,6 -3172,69 +3140,72 @@@ out
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ static const char rtl8152_gstrings[][ETH_GSTRING_LEN] = {
+ 	"tx_packets",
+ 	"rx_packets",
+ 	"tx_errors",
+ 	"rx_errors",
+ 	"rx_missed",
+ 	"align_errors",
+ 	"tx_single_collisions",
+ 	"tx_multi_collisions",
+ 	"rx_unicast",
+ 	"rx_broadcast",
+ 	"rx_multicast",
+ 	"tx_aborted",
+ 	"tx_underrun",
+ };
+ 
+ static int rtl8152_get_sset_count(struct net_device *dev, int sset)
+ {
+ 	switch (sset) {
+ 	case ETH_SS_STATS:
+ 		return ARRAY_SIZE(rtl8152_gstrings);
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
+ }
+ 
+ static void rtl8152_get_ethtool_stats(struct net_device *dev,
+ 				      struct ethtool_stats *stats, u64 *data)
+ {
+ 	struct r8152 *tp = netdev_priv(dev);
+ 	struct tally_counter tally;
+ 
+ 	if (usb_autopm_get_interface(tp->intf) < 0)
+ 		return;
+ 
+ 	generic_ocp_read(tp, PLA_TALLYCNT, sizeof(tally), &tally, MCU_TYPE_PLA);
+ 
+ 	usb_autopm_put_interface(tp->intf);
+ 
+ 	data[0] = le64_to_cpu(tally.tx_packets);
+ 	data[1] = le64_to_cpu(tally.rx_packets);
+ 	data[2] = le64_to_cpu(tally.tx_errors);
+ 	data[3] = le32_to_cpu(tally.rx_errors);
+ 	data[4] = le16_to_cpu(tally.rx_missed);
+ 	data[5] = le16_to_cpu(tally.align_errors);
+ 	data[6] = le32_to_cpu(tally.tx_one_collision);
+ 	data[7] = le32_to_cpu(tally.tx_multi_collision);
+ 	data[8] = le64_to_cpu(tally.rx_unicast);
+ 	data[9] = le64_to_cpu(tally.rx_broadcast);
+ 	data[10] = le32_to_cpu(tally.rx_multicast);
+ 	data[11] = le16_to_cpu(tally.tx_aborted);
+ 	data[12] = le16_to_cpu(tally.tx_underun);
+ }
+ 
+ static void rtl8152_get_strings(struct net_device *dev, u32 stringset, u8 *data)
+ {
+ 	switch (stringset) {
+ 	case ETH_SS_STATS:
+ 		memcpy(data, *rtl8152_gstrings, sizeof(rtl8152_gstrings));
+ 		break;
+ 	}
+ }
+ 
++>>>>>>> 0b0302449110 (r8152: wake up the device before dumping the hw counter)
  static struct ethtool_ops ops = {
  	.get_drvinfo = rtl8152_get_drvinfo,
  	.get_settings = rtl8152_get_settings,
* Unmerged path drivers/net/usb/r8152.c
