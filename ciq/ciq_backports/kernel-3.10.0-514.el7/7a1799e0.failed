perf hists: Introduce perf_hpp_list__for_each_format_safe macro

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 7a1799e0a276069d8b903ba17179b4983b98c04b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7a1799e0.failed

Introducing perf_hpp_list__for_each_format_safe macro to iterate
perf_hpp_list object's output entries safely.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1453109064-1026-21-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 7a1799e0a276069d8b903ba17179b4983b98c04b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/ui/hist.c
diff --cc tools/perf/ui/hist.c
index 2b9ea4c7e3a2,348706a908f9..000000000000
--- a/tools/perf/ui/hist.c
+++ b/tools/perf/ui/hist.c
@@@ -527,8 -527,25 +527,28 @@@ void perf_hpp__cancel_cumulate(void
  	if (is_strict_order(field_order))
  		return;
  
++<<<<<<< HEAD
 +	perf_hpp__column_disable(PERF_HPP__OVERHEAD_ACC);
 +	perf_hpp__format[PERF_HPP__OVERHEAD].name = "Overhead";
++=======
+ 	ovh = &perf_hpp__format[PERF_HPP__OVERHEAD];
+ 	acc = &perf_hpp__format[PERF_HPP__OVERHEAD_ACC];
+ 
+ 	perf_hpp_list__for_each_format_safe(&perf_hpp_list, fmt, tmp) {
+ 		if (acc->equal(acc, fmt)) {
+ 			perf_hpp__column_unregister(fmt);
+ 			continue;
+ 		}
+ 
+ 		if (ovh->equal(ovh, fmt))
+ 			fmt->name = "Overhead";
+ 	}
+ }
+ 
+ static bool fmt_equal(struct perf_hpp_fmt *a, struct perf_hpp_fmt *b)
+ {
+ 	return a->equal && a->equal(a, b);
++>>>>>>> 7a1799e0a276 (perf hists: Introduce perf_hpp_list__for_each_format_safe macro)
  }
  
  void perf_hpp__setup_output_field(void)
@@@ -594,9 -597,10 +614,9 @@@ void perf_hpp__reset_output_field(void
  	struct perf_hpp_fmt *fmt, *tmp;
  
  	/* reset output fields */
- 	perf_hpp__for_each_format_safe(fmt, tmp) {
+ 	perf_hpp_list__for_each_format_safe(&perf_hpp_list, fmt, tmp) {
  		list_del_init(&fmt->list);
  		list_del_init(&fmt->sort_list);
 -		fmt_free(fmt);
  	}
  
  	/* reset sort keys */
* Unmerged path tools/perf/ui/hist.c
diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h
index bd572df18d95..f102032f1df9 100644
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@ -243,8 +243,8 @@ static inline void perf_hpp__register_sort_field(struct perf_hpp_fmt *format)
 #define perf_hpp__for_each_format(format) \
 	list_for_each_entry(format, &perf_hpp_list.fields, list)
 
-#define perf_hpp__for_each_format_safe(format, tmp)	\
-	list_for_each_entry_safe(format, tmp, &perf_hpp_list.fields, list)
+#define perf_hpp_list__for_each_format_safe(_list, format, tmp)	\
+	list_for_each_entry_safe(format, tmp, &(_list)->fields, list)
 
 #define perf_hpp__for_each_sort_list(format) \
 	list_for_each_entry(format, &perf_hpp_list.sorts, sort_list)
