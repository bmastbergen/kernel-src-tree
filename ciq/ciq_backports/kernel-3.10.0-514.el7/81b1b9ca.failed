KVM: VMX: Fix host initiated access to guest MSR_TSC_AUX

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Haozhong Zhang <haozhong.zhang@intel.com>
commit 81b1b9ca6d5ca5f3ce91c0095402def657cf5db3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/81b1b9ca.failed

The current handling of accesses to guest MSR_TSC_AUX returns error if
vcpu does not support rdtscp, though those accesses are initiated by
host. This can result in the reboot failure of some versions of
QEMU. This patch fixes this issue by passing those host initiated
accesses for further handling instead.

	Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 81b1b9ca6d5ca5f3ce91c0095402def657cf5db3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx.c
diff --cc arch/x86/kvm/vmx.c
index 5076c6cc9e1b,44976a596fa6..000000000000
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@@ -2573,8 -2797,13 +2573,12 @@@ static int vmx_get_msr(struct kvm_vcpu 
  		if (!nested_vmx_allowed(vcpu))
  			return 1;
  		return vmx_get_vmx_msr(vcpu, msr_info->index, &msr_info->data);
 -	case MSR_IA32_XSS:
 -		if (!vmx_xsaves_supported())
 -			return 1;
 -		msr_info->data = vcpu->arch.ia32_xss;
 -		break;
  	case MSR_TSC_AUX:
++<<<<<<< HEAD
 +		if (!to_vmx(vcpu)->rdtscp_enabled)
++=======
+ 		if (!guest_cpuid_has_rdtscp(vcpu) && !msr_info->host_initiated)
++>>>>>>> 81b1b9ca6d5c (KVM: VMX: Fix host initiated access to guest MSR_TSC_AUX)
  			return 1;
  		/* Otherwise falls through */
  	default:
@@@ -2664,8 -2892,24 +2668,12 @@@ static int vmx_set_msr(struct kvm_vcpu 
  		break;
  	case MSR_IA32_VMX_BASIC ... MSR_IA32_VMX_VMFUNC:
  		return 1; /* they are read-only */
 -	case MSR_IA32_XSS:
 -		if (!vmx_xsaves_supported())
 -			return 1;
 -		/*
 -		 * The only supported bit as of Skylake is bit 8, but
 -		 * it is not supported on KVM.
 -		 */
 -		if (data != 0)
 -			return 1;
 -		vcpu->arch.ia32_xss = data;
 -		if (vcpu->arch.ia32_xss != host_xss)
 -			add_atomic_switch_msr(vmx, MSR_IA32_XSS,
 -				vcpu->arch.ia32_xss, host_xss);
 -		else
 -			clear_atomic_switch_msr(vmx, MSR_IA32_XSS);
 -		break;
  	case MSR_TSC_AUX:
++<<<<<<< HEAD
 +		if (!vmx->rdtscp_enabled)
++=======
+ 		if (!guest_cpuid_has_rdtscp(vcpu) && !msr_info->host_initiated)
++>>>>>>> 81b1b9ca6d5c (KVM: VMX: Fix host initiated access to guest MSR_TSC_AUX)
  			return 1;
  		/* Check reserved bit, higher 32 bits should be zero */
  		if ((data >> 32) != 0)
* Unmerged path arch/x86/kvm/vmx.c
