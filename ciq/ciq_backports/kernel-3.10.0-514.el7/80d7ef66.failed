mm: rename __do_fault() -> do_fault()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [mm] rename __do_fault() -> do_fault() (Eric Sandeen) [1274459]
Rebuild_FUZZ: 94.29%
commit-author Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
commit 80d7ef66142b0b4358223790e7a4cb153b48a05c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/80d7ef66.failed

Current __do_fault() is awful and unmaintainable.  These patches try to
sort it out by split __do_fault() into three destinct codepaths:

 - to handle read page fault;
 - to handle write page fault to private mappings;
 - to handle write page fault to shared mappings;

I also found page refcount leak in PageHWPoison() path of __do_fault().

This patch (of 7):

do_fault() is unused: no reason for underscores.

	Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Mel Gorman <mgorman@suse.de>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Matthew Wilcox <matthew.r.wilcox@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 80d7ef66142b0b4358223790e7a4cb153b48a05c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memory.c
diff --cc mm/memory.c
index fce51319197b,144e8cd07805..000000000000
--- a/mm/memory.c
+++ b/mm/memory.c
@@@ -3715,10 -3496,7 +3715,14 @@@ static int do_linear_fault(struct mm_st
  			- vma->vm_start) >> PAGE_SHIFT) + vma->vm_pgoff;
  
  	pte_unmap(page_table);
++<<<<<<< HEAD
 +	/* The VMA was not fully populated on mmap() or missing VM_DONTEXPAND */
 +	if (!vma->vm_ops->fault)
 +		return VM_FAULT_SIGBUS;
 +	return __do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
++=======
+ 	return do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
++>>>>>>> 80d7ef66142b (mm: rename __do_fault() -> do_fault())
  }
  
  /*
@@@ -3750,10 -3528,10 +3754,10 @@@ static int do_nonlinear_fault(struct mm
  	}
  
  	pgoff = pte_to_pgoff(orig_pte);
- 	return __do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
+ 	return do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
  }
  
 -static int numa_migrate_prep(struct page *page, struct vm_area_struct *vma,
 +int numa_migrate_prep(struct page *page, struct vm_area_struct *vma,
  				unsigned long addr, int page_nid,
  				int *flags)
  {
* Unmerged path mm/memory.c
