r8152: adjust ALDPS function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author hayeswang <hayeswang@realtek.com>
commit cda9fb01dc3cafd718b2865b447e869bf6624ddd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/cda9fb01.failed

Replace disable_aldps() and enable_aldps() with aldps_en().

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cda9fb01dc3cafd718b2865b447e869bf6624ddd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index caccdf613161,230c73c0727a..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -2667,9 -2797,10 +2663,14 @@@ static void r8153_aldps_en(struct r815
  
  static void rtl8153_disable(struct r8152 *tp)
  {
- 	r8153_disable_aldps(tp);
+ 	r8153_aldps_en(tp, false);
  	rtl_disable(tp);
++<<<<<<< HEAD
 +	r8153_enable_aldps(tp);
++=======
+ 	r8153_aldps_en(tp, true);
+ 	usb_enable_lpm(tp->udev);
++>>>>>>> cda9fb01dc3c (r8152: adjust ALDPS function)
  }
  
  static int rtl8152_set_speed(struct r8152 *tp, u8 autoneg, u16 speed, u8 duplex)
@@@ -2790,9 -2919,13 +2791,19 @@@ static void rtl8153_up(struct r8152 *tp
  	if (test_bit(RTL8152_UNPLUG, &tp->flags))
  		return;
  
++<<<<<<< HEAD
 +	r8153_disable_aldps(tp);
 +	r8153_first_init(tp);
 +	r8153_enable_aldps(tp);
++=======
+ 	r8153_u1u2en(tp, false);
+ 	r8153_aldps_en(tp, false);
+ 	r8153_first_init(tp);
+ 	r8153_aldps_en(tp, true);
+ 	r8153_u2p3en(tp, true);
+ 	r8153_u1u2en(tp, true);
+ 	usb_enable_lpm(tp->udev);
++>>>>>>> cda9fb01dc3c (r8152: adjust ALDPS function)
  }
  
  static void rtl8153_down(struct r8152 *tp)
@@@ -2803,12 -2936,39 +2814,12 @@@
  	}
  
  	r8153_u1u2en(tp, false);
 -	r8153_u2p3en(tp, false);
  	r8153_power_cut_en(tp, false);
- 	r8153_disable_aldps(tp);
+ 	r8153_aldps_en(tp, false);
  	r8153_enter_oob(tp);
- 	r8153_enable_aldps(tp);
+ 	r8153_aldps_en(tp, true);
  }
  
 -static bool rtl8152_in_nway(struct r8152 *tp)
 -{
 -	u16 nway_state;
 -
 -	ocp_write_word(tp, MCU_TYPE_PLA, PLA_OCP_GPHY_BASE, 0x2000);
 -	tp->ocp_base = 0x2000;
 -	ocp_write_byte(tp, MCU_TYPE_PLA, 0xb014, 0x4c);		/* phy state */
 -	nway_state = ocp_read_word(tp, MCU_TYPE_PLA, 0xb01a);
 -
 -	/* bit 15: TXDIS_STATE, bit 14: ABD_STATE */
 -	if (nway_state & 0xc000)
 -		return false;
 -	else
 -		return true;
 -}
 -
 -static bool rtl8153_in_nway(struct r8152 *tp)
 -{
 -	u16 phy_state = ocp_reg_read(tp, OCP_PHY_STATE) & 0xff;
 -
 -	if (phy_state == TXDIS_STATE || phy_state == ABD_STATE)
 -		return false;
 -	else
 -		return true;
 -}
 -
  static void set_carrier(struct r8152 *tp)
  {
  	struct net_device *netdev = tp->netdev;
@@@ -3077,8 -3248,9 +3088,8 @@@ static void r8152b_init(struct r8152 *t
  	ocp_write_word(tp, MCU_TYPE_PLA, PLA_GPHY_INTR_IMR, ocp_data);
  
  	r8152b_enable_eee(tp);
- 	r8152b_enable_aldps(tp);
+ 	r8152_aldps_en(tp, true);
  	r8152b_enable_fc(tp);
 -	rtl_tally_reset(tp);
  
  	/* enable rx aggregation */
  	ocp_data = ocp_read_word(tp, MCU_TYPE_USB, USB_USB_CTRL);
@@@ -3175,8 -3355,10 +3186,8 @@@ static void r8153_init(struct r8152 *tp
  		       EEE_SPDWN_EN);
  
  	r8153_enable_eee(tp);
- 	r8153_enable_aldps(tp);
+ 	r8153_aldps_en(tp, true);
  	r8152b_enable_fc(tp);
 -	rtl_tally_reset(tp);
 -	r8153_u2p3en(tp, true);
  }
  
  static int rtl8152_pre_reset(struct usb_interface *intf)
* Unmerged path drivers/net/usb/r8152.c
