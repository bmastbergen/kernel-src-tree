intel_pstate: enable HWP per CPU

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Kristen Carlson Accardi <kristen@linux.intel.com>
commit ba88d4338f226766f510e207911dde8c1875e072
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/ba88d433.failed

HWP previously was only enabled at driver load time, on the boot
CPU, however, HWP must be enabled per package. Move the code to
enable HWP to the cpufreq driver init path so that it will be
called per CPU.

	Signed-off-by: Kristen Carlson Accardi <kristen@linux.intel.com>
	Tested-by: David Zhuang <david.zhuang@oracle.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit ba88d4338f226766f510e207911dde8c1875e072)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 9d42010c6969,763d8f34ab49..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -481,12 -484,11 +481,16 @@@ static void __init intel_pstate_sysfs_e
  }
  /************************** sysfs end ************************/
  
- static void intel_pstate_hwp_enable(void)
+ static void intel_pstate_hwp_enable(struct cpudata *cpudata)
  {
++<<<<<<< HEAD
 +	hwp_active++;
 +	pr_info("intel_pstate HWP enabled\n");
++=======
+ 	pr_info("intel_pstate: HWP enabled\n");
++>>>>>>> ba88d4338f22 (intel_pstate: enable HWP per CPU)
  
- 	wrmsrl( MSR_PM_ENABLE, 0x1);
+ 	wrmsrl_on_cpu(cpudata->cpu, MSR_PM_ENABLE, 0x1);
  }
  
  static int byt_get_min_pstate(void)
@@@ -1237,18 -1247,8 +1245,23 @@@ static int __init intel_pstate_init(voi
  	if (!all_cpu_data)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	/*
 +	 * RHEL7: We are having issues with the Skylake-S hanging
 +	 * when HWP is enabled so check for Skylake-S and
 +	 * disable HWP if found
 +	 */
 +	if (x86_match_cpu(hwp_quirk_cpu_ids)) {
 +		pr_info("intel_pstate Skylake-S detected. disabling HWP\n");
 +		no_hwp = 1;
 +	}
 +
 +	if (cpu_has(c,X86_FEATURE_HWP) && !no_hwp)
 +		intel_pstate_hwp_enable();
++=======
+ 	if (static_cpu_has_safe(X86_FEATURE_HWP) && !no_hwp)
+ 		hwp_active++;
++>>>>>>> ba88d4338f22 (intel_pstate: enable HWP per CPU)
  
  	if (!hwp_active && hwp_only)
  		goto out;
* Unmerged path drivers/cpufreq/intel_pstate.c
