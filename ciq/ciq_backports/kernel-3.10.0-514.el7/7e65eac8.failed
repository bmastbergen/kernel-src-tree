6lowpan: nuke net_ieee802154_lowpan() accessor when 6lowpan is disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Luis R. Rodriguez <mcgrof@suse.com>
commit 7e65eac8e36f3f4e2553e83249e3d9bdf055456d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/7e65eac8.failed

Johannes noted this is not needed, all of the fragment
accessors don't need CONFIG_NET_NS. This goes test compiled with
CONFIG_BT_6LOWPAN=y and a disabled CONFIG_NET_NS.

CC: Alexander Smirnov <alex.bluesman.smirnov@gmail.com>
	Cc: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>
	Cc: linux-zigbee-devel@lists.sourceforge.net
	Cc: David S. Miller" <davem@davemloft.net>
	Cc: netdev@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Cc: Johannes Berg <johannes@sipsolutions.net>
	Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7e65eac8e36f3f4e2553e83249e3d9bdf055456d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/net_namespace.h
diff --cc include/net/net_namespace.h
index 57a40c03e6d1,361d26077196..000000000000
--- a/include/net/net_namespace.h
+++ b/include/net/net_namespace.h
@@@ -348,15 -349,37 +348,36 @@@ static inline int rt_genid_ipv4(struct 
  
  static inline void rt_genid_bump_ipv4(struct net *net)
  {
 -	atomic_inc(&net->ipv4.rt_genid);
 -}
 -
 -#if IS_ENABLED(CONFIG_IPV6)
 -static inline int rt_genid_ipv6(struct net *net)
 -{
 -	return atomic_read(&net->ipv6.rt_genid);
 +	atomic_inc(&net->rt_genid);
  }
  
 +extern void (*__fib6_flush_trees)(struct net *net);
  static inline void rt_genid_bump_ipv6(struct net *net)
  {
 -	atomic_inc(&net->ipv6.rt_genid);
 +	if (__fib6_flush_trees)
 +		__fib6_flush_trees(net);
  }
++<<<<<<< HEAD
++=======
+ #else
+ static inline int rt_genid_ipv6(struct net *net)
+ {
+ 	return 0;
+ }
+ 
+ static inline void rt_genid_bump_ipv6(struct net *net)
+ {
+ }
+ #endif
+ 
+ #if IS_ENABLED(CONFIG_IEEE802154_6LOWPAN)
+ static inline struct netns_ieee802154_lowpan *
+ net_ieee802154_lowpan(struct net *net)
+ {
+ 	return &net->ieee802154_lowpan;
+ }
+ #endif
++>>>>>>> 7e65eac8e36f (6lowpan: nuke net_ieee802154_lowpan() accessor when 6lowpan is disabled)
  
  /* For callers who don't really care about whether it's IPv4 or IPv6 */
  static inline void rt_genid_bump_all(struct net *net)
* Unmerged path include/net/net_namespace.h
