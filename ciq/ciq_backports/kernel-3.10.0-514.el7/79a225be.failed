IB/rdmavt: Remove unnecessary exported functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dennis Dalessandro <dennis.dalessandro@intel.com>
commit 79a225be38932b17707009767e85d6edf450e7cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/79a225be.failed

Remove exported functions which are no longer required as the
functionality has moved into rdmavt. This also requires re-ordering some
of the functions since their prototype no longer appears in a header
file. Rather than add forward declarations it is just cleaner to
re-order some of the functions.

	Reviewed-by: Jubin John <jubin.john@intel.com>
	Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 79a225be38932b17707009767e85d6edf450e7cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rdmavt/qp.c
diff --cc drivers/infiniband/sw/rdmavt/qp.c
index 9fff76d7554d,dbf124db1fd1..000000000000
--- a/drivers/infiniband/sw/rdmavt/qp.c
+++ b/drivers/infiniband/sw/rdmavt/qp.c
@@@ -746,59 -865,6 +849,62 @@@ bail_swq
  }
  
  /**
++<<<<<<< HEAD
 + * rvt_clear_mr_refs - Drop help mr refs
 + * @qp: rvt qp data structure
 + * @clr_sends: If shoudl clear send side or not
 + */
 +void rvt_clear_mr_refs(struct rvt_qp *qp, int clr_sends)
 +{
 +	unsigned n;
 +
 +	if (test_and_clear_bit(RVT_R_REWIND_SGE, &qp->r_aflags))
 +		rvt_put_ss(&qp->s_rdma_read_sge);
 +
 +	rvt_put_ss(&qp->r_sge);
 +
 +	if (clr_sends) {
 +		while (qp->s_last != qp->s_head) {
 +			struct rvt_swqe *wqe = rvt_get_swqe_ptr(qp, qp->s_last);
 +			unsigned i;
 +
 +			for (i = 0; i < wqe->wr.num_sge; i++) {
 +				struct rvt_sge *sge = &wqe->sg_list[i];
 +
 +				rvt_put_mr(sge->mr);
 +			}
 +			if (qp->ibqp.qp_type == IB_QPT_UD ||
 +			    qp->ibqp.qp_type == IB_QPT_SMI ||
 +			    qp->ibqp.qp_type == IB_QPT_GSI)
 +				atomic_dec(&ibah_to_rvtah(
 +						wqe->ud_wr.ah)->refcount);
 +			if (++qp->s_last >= qp->s_size)
 +				qp->s_last = 0;
 +		}
 +		if (qp->s_rdma_mr) {
 +			rvt_put_mr(qp->s_rdma_mr);
 +			qp->s_rdma_mr = NULL;
 +		}
 +	}
 +
 +	if (qp->ibqp.qp_type != IB_QPT_RC)
 +		return;
 +
 +	for (n = 0; n < ARRAY_SIZE(qp->s_ack_queue); n++) {
 +		struct rvt_ack_entry *e = &qp->s_ack_queue[n];
 +
 +		if (e->opcode == IB_OPCODE_RC_RDMA_READ_REQUEST &&
 +		    e->rdma_sge.mr) {
 +			rvt_put_mr(e->rdma_sge.mr);
 +			e->rdma_sge.mr = NULL;
 +		}
 +	}
 +}
 +EXPORT_SYMBOL(rvt_clear_mr_refs);
 +
 +/**
++=======
++>>>>>>> 79a225be3893 (IB/rdmavt: Remove unnecessary exported functions)
   * rvt_error_qp - put a QP into the error state
   * @qp: the QP to put into the error state
   * @err: the receive completion error to signal if a RWQE is active
diff --git a/drivers/infiniband/sw/rdmavt/mmap.c b/drivers/infiniband/sw/rdmavt/mmap.c
index 273974fb7d1f..e202b8142759 100644
--- a/drivers/infiniband/sw/rdmavt/mmap.c
+++ b/drivers/infiniband/sw/rdmavt/mmap.c
@@ -80,7 +80,6 @@ void rvt_release_mmap_info(struct kref *ref)
 	vfree(ip->obj);
 	kfree(ip);
 }
-EXPORT_SYMBOL(rvt_release_mmap_info);
 
 static void rvt_vma_open(struct vm_area_struct *vma)
 {
@@ -146,7 +145,6 @@ int rvt_mmap(struct ib_ucontext *context, struct vm_area_struct *vma)
 done:
 	return ret;
 }
-EXPORT_SYMBOL(rvt_mmap);
 
 /**
  * rvt_create_mmap_info - allocate information for hfi1_mmap
@@ -185,7 +183,6 @@ struct rvt_mmap_info *rvt_create_mmap_info(struct rvt_dev_info *rdi,
 
 	return ip;
 }
-EXPORT_SYMBOL(rvt_create_mmap_info);
 
 /**
  * rvt_update_mmap_info - update a mem map
@@ -209,4 +206,3 @@ void rvt_update_mmap_info(struct rvt_dev_info *rdi, struct rvt_mmap_info *ip,
 	ip->size = size;
 	ip->obj = obj;
 }
-EXPORT_SYMBOL(rvt_update_mmap_info);
diff --git a/drivers/infiniband/sw/rdmavt/mmap.h b/drivers/infiniband/sw/rdmavt/mmap.h
index e8067471c722..fab0e7b1daf9 100644
--- a/drivers/infiniband/sw/rdmavt/mmap.h
+++ b/drivers/infiniband/sw/rdmavt/mmap.h
@@ -51,5 +51,13 @@
 #include <rdma/rdma_vt.h>
 
 void rvt_mmap_init(struct rvt_dev_info *rdi);
+void rvt_release_mmap_info(struct kref *ref);
+int rvt_mmap(struct ib_ucontext *context, struct vm_area_struct *vma);
+struct rvt_mmap_info *rvt_create_mmap_info(struct rvt_dev_info *rdi,
+					   u32 size,
+					   struct ib_ucontext *context,
+					   void *obj);
+void rvt_update_mmap_info(struct rvt_dev_info *rdi, struct rvt_mmap_info *ip,
+			  u32 size, void *obj);
 
 #endif          /* DEF_RDMAVTMMAP_H */
* Unmerged path drivers/infiniband/sw/rdmavt/qp.c
diff --git a/drivers/infiniband/sw/rdmavt/srq.c b/drivers/infiniband/sw/rdmavt/srq.c
index 98c492797c53..f7c48e9023de 100644
--- a/drivers/infiniband/sw/rdmavt/srq.c
+++ b/drivers/infiniband/sw/rdmavt/srq.c
@@ -50,6 +50,7 @@
 #include <linux/vmalloc.h>
 
 #include "srq.h"
+#include "vt.h"
 
 /**
  * rvt_driver_srq_init - init srq resources on a per driver basis
diff --git a/drivers/infiniband/sw/rdmavt/vt.h b/drivers/infiniband/sw/rdmavt/vt.h
index e26f9e94d1ea..6b01eaa4461b 100644
--- a/drivers/infiniband/sw/rdmavt/vt.h
+++ b/drivers/infiniband/sw/rdmavt/vt.h
@@ -60,6 +60,7 @@
 #include "mmap.h"
 #include "cq.h"
 #include "mad.h"
+#include "mmap.h"
 
 #define rvt_pr_info(rdi, fmt, ...) \
 	__rvt_pr_info(rdi->driver_f.get_pci_dev(rdi), \
diff --git a/include/rdma/rdma_vt.h b/include/rdma/rdma_vt.h
index 5e630eec7292..892059ae4898 100644
--- a/include/rdma/rdma_vt.h
+++ b/include/rdma/rdma_vt.h
@@ -378,19 +378,6 @@ int rvt_rkey_ok(struct rvt_qp *qp, struct rvt_sge *sge,
 		u32 len, u64 vaddr, u32 rkey, int acc);
 int rvt_lkey_ok(struct rvt_lkey_table *rkt, struct rvt_pd *pd,
 		struct rvt_sge *isge, struct ib_sge *sge, int acc);
-int rvt_mmap(struct ib_ucontext *context, struct vm_area_struct *vma);
-void rvt_release_mmap_info(struct kref *ref);
-struct rvt_mmap_info *rvt_create_mmap_info(struct rvt_dev_info *rdi,
-					   u32 size,
-					   struct ib_ucontext *context,
-					   void *obj);
-void rvt_update_mmap_info(struct rvt_dev_info *rdi, struct rvt_mmap_info *ip,
-			  u32 size, void *obj);
-int rvt_reg_mr(struct rvt_qp *qp, struct ib_reg_wr *wr);
 struct rvt_mcast *rvt_mcast_find(struct rvt_ibport *ibp, union ib_gid *mgid);
 
-/* Temporary export */
-void rvt_reset_qp(struct rvt_dev_info *rdi, struct rvt_qp *qp,
-		  enum ib_qp_type type);
-
 #endif          /* DEF_RDMA_VT_H */
diff --git a/include/rdma/rdmavt_qp.h b/include/rdma/rdmavt_qp.h
index aed13e13591c..1945bb29f759 100644
--- a/include/rdma/rdmavt_qp.h
+++ b/include/rdma/rdmavt_qp.h
@@ -431,10 +431,6 @@ static inline struct rvt_rwqe *rvt_get_rwqe_ptr(struct rvt_rq *rq, unsigned n)
 extern const int  ib_rvt_state_ops[];
 
 struct rvt_dev_info;
-void rvt_remove_qp(struct rvt_dev_info *rdi, struct rvt_qp *qp);
-void rvt_clear_mr_refs(struct rvt_qp *qp, int clr_sends);
 int rvt_error_qp(struct rvt_qp *qp, enum ib_wc_status err);
-void rvt_free_qpn(struct rvt_qpn_table *qpt, u32 qpn);
-void rvt_dec_qp_cnt(struct rvt_dev_info *rdi);
 
 #endif          /* DEF_RDMAVT_INCQP_H */
