sched/deadline: Avoid double-accounting in case of missed deadlines

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Luca Abeni <luca.abeni@unitn.it>
commit 269ad8015a6b2bb1cf9e684da4921eb6fa0a0c88
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/269ad801.failed

The dl_runtime_exceeded() function is supposed to ckeck if
a SCHED_DEADLINE task must be throttled, by checking if its
current runtime is <= 0. However, it also checks if the
scheduling deadline has been missed (the current time is
larger than the current scheduling deadline), further
decreasing the runtime if this happens.
This "double accounting" is wrong:

- In case of partitioned scheduling (or single CPU), this
  happens if task_tick_dl() has been called later than expected
  (due to small HZ values). In this case, the current runtime is
  also negative, and replenish_dl_entity() can take care of the
  deadline miss by recharging the current runtime to a value smaller
  than dl_runtime

- In case of global scheduling on multiple CPUs, scheduling
  deadlines can be missed even if the task did not consume more
  runtime than expected, hence penalizing the task is wrong

This patch fix this problem by throttling a SCHED_DEADLINE task
only when its runtime becomes negative, and not modifying the runtime

	Signed-off-by: Luca Abeni <luca.abeni@unitn.it>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Juri Lelli <juri.lelli@gmail.com>
	Cc: <stable@vger.kernel.org>
	Cc: Dario Faggioli <raistlin@linux.it>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: http://lkml.kernel.org/r/1418813432-20797-3-git-send-email-luca.abeni@unitn.it
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 269ad8015a6b2bb1cf9e684da4921eb6fa0a0c88)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/deadline.c
* Unmerged path kernel/sched/deadline.c
* Unmerged path kernel/sched/deadline.c
