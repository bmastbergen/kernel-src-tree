mmc: sh_mmcif: revision-specific Command Completion Signal handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Guennadi Liakhovetski <g.liakhovetski@gmx.de>
commit 967bcb77177cda1a426fdb2350e6ec61bcf5b5eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/967bcb77.failed

Some earlier MMCIF IP revisions contained Command Completion Signal
support, which has been dropped again in modern versions. Sopport for
this feature is added in a way to preserve the current behaviour by
default, i.e. when it is not enabled in platform data. Patch is based
on work by Nobuyuki HIRAI.

	Signed-off-by: Guennadi Liakhovetski <g.liakhovetski+renesas@gmail.com>
	Signed-off-by: Chris Ball <cjb@laptop.org>
(cherry picked from commit 967bcb77177cda1a426fdb2350e6ec61bcf5b5eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mmc/host/sh_mmcif.c
diff --cc drivers/mmc/host/sh_mmcif.c
index 779946234bcd,6fa6868d1030..000000000000
--- a/drivers/mmc/host/sh_mmcif.c
+++ b/drivers/mmc/host/sh_mmcif.c
@@@ -1239,10 -1256,14 +1250,18 @@@ static irqreturn_t sh_mmcif_irqt(int ir
  static irqreturn_t sh_mmcif_intr(int irq, void *dev_id)
  {
  	struct sh_mmcif_host *host = dev_id;
- 	u32 state;
+ 	u32 state, mask;
  
  	state = sh_mmcif_readl(host->addr, MMCIF_CE_INT);
++<<<<<<< HEAD
 +	sh_mmcif_writel(host->addr, MMCIF_CE_INT, ~state);
++=======
+ 	mask = sh_mmcif_readl(host->addr, MMCIF_CE_INT_MASK);
+ 	if (host->ccs_enable)
+ 		sh_mmcif_writel(host->addr, MMCIF_CE_INT, ~(state & mask));
+ 	else
+ 		sh_mmcif_writel(host->addr, MMCIF_CE_INT, INT_CCS | ~(state & mask));
++>>>>>>> 967bcb77177c (mmc: sh_mmcif: revision-specific Command Completion Signal handling)
  	sh_mmcif_bitclr(host, MMCIF_CE_INT_MASK, state & MASK_CLEAN);
  
  	if (state & ~MASK_CLEAN)
* Unmerged path drivers/mmc/host/sh_mmcif.c
diff --git a/include/linux/mmc/sh_mmcif.h b/include/linux/mmc/sh_mmcif.h
index c4880ffb6cce..197ed91f6a0c 100644
--- a/include/linux/mmc/sh_mmcif.h
+++ b/include/linux/mmc/sh_mmcif.h
@@ -36,6 +36,7 @@ struct sh_mmcif_plat_data {
 	unsigned int		slave_id_tx;	/* embedded slave_id_[tr]x */
 	unsigned int		slave_id_rx;
 	bool			use_cd_gpio : 1;
+	bool			ccs_unsupported : 1;
 	unsigned int		cd_gpio;
 	u8			sup_pclk;	/* 1 :SH7757, 0: SH7724/SH7372 */
 	unsigned long		caps;
