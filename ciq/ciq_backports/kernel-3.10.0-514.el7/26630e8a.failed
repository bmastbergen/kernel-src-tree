IB/srp: Split srp_map_sg

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sagi Grimberg <sagig@mellanox.com>
commit 26630e8a09b72e8783e8963781d39e7edb2a60b9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/26630e8a.failed

This is a preparation patch for the new registration API
conversion. It splits srp_map_sg per registration strategy
(srp_map_sg[fmr|fr|dma]. On its own it adds some code duplication,
but it makes the API switch easier to comprehend.

	Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
	Tested-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 26630e8a09b72e8783e8963781d39e7edb2a60b9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srp/ib_srp.c
diff --cc drivers/infiniband/ulp/srp/ib_srp.c
index feb0c8ea0788,ef1575d11a4b..000000000000
--- a/drivers/infiniband/ulp/srp/ib_srp.c
+++ b/drivers/infiniband/ulp/srp/ib_srp.c
@@@ -1305,9 -1321,10 +1320,10 @@@ static int srp_map_finish_fr(struct srp
  	struct srp_target_port *target = ch->target;
  	struct srp_device *dev = target->srp_host->srp_dev;
  	struct ib_send_wr *bad_wr;
 -	struct ib_fast_reg_wr wr;
 +	struct ib_send_wr wr;
  	struct srp_fr_desc *desc;
  	u32 rkey;
+ 	int err;
  
  	if (state->fr.next >= state->fr.end)
  		return -ENOMEM;
@@@ -1341,7 -1369,15 +1368,19 @@@
  	srp_map_desc(state, state->base_dma_addr, state->dma_len,
  		     desc->mr->rkey);
  
++<<<<<<< HEAD
 +	return ib_post_send(ch->qp, &wr, &bad_wr);
++=======
+ 	err = ib_post_send(ch->qp, &wr.wr, &bad_wr);
+ 	if (err)
+ 		return err;
+ 
+ reset_state:
+ 	state->npages = 0;
+ 	state->dma_len = 0;
+ 
+ 	return 0;
++>>>>>>> 26630e8a09b7 (IB/srp: Split srp_map_sg)
  }
  
  static int srp_finish_mapping(struct srp_map_state *state,
* Unmerged path drivers/infiniband/ulp/srp/ib_srp.c
