packet: Fixed TPACKET V3 to signal poll when block is closed rather than every packet

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Dan Collins <dan@dcollins.co.nz>
commit da413eec729dae5dcb150e2eb34c5e7e5e4e1b49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/da413eec.failed

Make TPACKET_V3 signal poll when block is closed rather than for every
packet. Side effect is that poll will be signaled when block retire
timer expires which didn't previously happen. Issue was visible when
sending packets at a very low frequency such that all blocks are retired
before packets are received by TPACKET_V3. This caused avoidable packet
loss. The fix ensures that the signal is sent when blocks are closed
which covers the normal path where the block is filled as well as the
path where the timer expires. The case where a block is filled without
moving to the next block (ie. all blocks are full) will still cause poll
to be signaled.

	Signed-off-by: Dan Collins <dan@dcollins.co.nz>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit da413eec729dae5dcb150e2eb34c5e7e5e4e1b49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/packet/af_packet.c
diff --cc net/packet/af_packet.c
index 8fa79e4b0909,6880f34a529a..000000000000
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@@ -1953,25 -2041,26 +1956,35 @@@ static int tpacket_rcv(struct sk_buff *
  		sll->sll_ifindex = dev->ifindex;
  
  	smp_mb();
 -
  #if ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE == 1
 -	if (po->tp_version <= TPACKET_V2) {
 +	{
  		u8 *start, *end;
  
 -		end = (u8 *) PAGE_ALIGN((unsigned long) h.raw +
 -					macoff + snaplen);
 -
 -		for (start = h.raw; start < end; start += PAGE_SIZE)
 -			flush_dcache_page(pgv_to_page(start));
 +		if (po->tp_version <= TPACKET_V2) {
 +			end = (u8 *)PAGE_ALIGN((unsigned long)h.raw
 +				+ macoff + snaplen);
 +			for (start = h.raw; start < end; start += PAGE_SIZE)
 +				flush_dcache_page(pgv_to_page(start));
 +		}
 +		smp_wmb();
  	}
 -	smp_wmb();
  #endif
++<<<<<<< HEAD
 +	if (po->tp_version <= TPACKET_V2)
++=======
+ 
+ 	if (po->tp_version <= TPACKET_V2) {
++>>>>>>> da413eec729d (packet: Fixed TPACKET V3 to signal poll when block is closed rather than every packet)
  		__packet_set_status(po, h.raw, status);
- 	else
+ 		sk->sk_data_ready(sk);
+ 	} else {
  		prb_clear_blk_fill_status(&po->rx_ring);
++<<<<<<< HEAD
 +
 +	sk->sk_data_ready(sk, 0);
++=======
+ 	}
++>>>>>>> da413eec729d (packet: Fixed TPACKET V3 to signal poll when block is closed rather than every packet)
  
  drop_n_restore:
  	if (skb_head != skb->data && skb_shared(skb)) {
* Unmerged path net/packet/af_packet.c
