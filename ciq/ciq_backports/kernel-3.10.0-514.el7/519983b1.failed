net: usb: Use eth_<foo>_addr instead of memset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Joe Perches <joe@perches.com>
commit 519983b129477cb8e0bbea334c72ecd4486b2d21
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/519983b1.failed

Use the built-in function instead of memset.

	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 519983b129477cb8e0bbea334c72ecd4486b2d21)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/catc.c
diff --cc drivers/net/usb/catc.c
index 2caa933ab76c,4e2b26a88b15..000000000000
--- a/drivers/net/usb/catc.c
+++ b/drivers/net/usb/catc.c
@@@ -639,10 -638,10 +639,14 @@@ static void catc_set_multicast_list(str
  {
  	struct catc *catc = netdev_priv(netdev);
  	struct netdev_hw_addr *ha;
 -	u8 broadcast[ETH_ALEN];
 +	u8 broadcast[6];
  	u8 rx = RxEnable | RxPolarity | RxMultiCast;
  
++<<<<<<< HEAD
 +	memset(broadcast, 0xff, 6);
++=======
+ 	eth_broadcast_addr(broadcast);
++>>>>>>> 519983b12947 (net: usb: Use eth_<foo>_addr instead of memset)
  	memset(catc->multicast, 0, 64);
  
  	catc_multicast(broadcast, catc->multicast);
@@@ -881,7 -880,7 +885,11 @@@ static int catc_probe(struct usb_interf
  		
  		dev_dbg(dev, "Filling the multicast list.\n");
  	  
++<<<<<<< HEAD
 +		memset(broadcast, 0xff, 6);
++=======
+ 		eth_broadcast_addr(broadcast);
++>>>>>>> 519983b12947 (net: usb: Use eth_<foo>_addr instead of memset)
  		catc_multicast(broadcast, catc->multicast);
  		catc_multicast(netdev->dev_addr, catc->multicast);
  		catc_write_mem(catc, 0xfa80, catc->multicast, 64);
* Unmerged path drivers/net/usb/catc.c
diff --git a/drivers/net/usb/cdc_mbim.c b/drivers/net/usb/cdc_mbim.c
index a164dab06678..441a6a53888a 100644
--- a/drivers/net/usb/cdc_mbim.c
+++ b/drivers/net/usb/cdc_mbim.c
@@ -394,7 +394,7 @@ static struct sk_buff *cdc_mbim_process_dgram(struct usbnet *dev, u8 *buf, size_
 	skb_put(skb, ETH_HLEN);
 	skb_reset_mac_header(skb);
 	eth_hdr(skb)->h_proto = proto;
-	memset(eth_hdr(skb)->h_source, 0, ETH_ALEN);
+	eth_zero_addr(eth_hdr(skb)->h_source);
 	memcpy(eth_hdr(skb)->h_dest, dev->net->dev_addr, ETH_ALEN);
 
 	/* add datagram */
diff --git a/drivers/net/usb/lg-vl600.c b/drivers/net/usb/lg-vl600.c
index 8f37efd2d2fb..5714107533bb 100644
--- a/drivers/net/usb/lg-vl600.c
+++ b/drivers/net/usb/lg-vl600.c
@@ -201,7 +201,7 @@ static int vl600_rx_fixup(struct usbnet *dev, struct sk_buff *skb)
 					&buf->data[sizeof(*ethhdr) + 0x12],
 					ETH_ALEN);
 		} else {
-			memset(ethhdr->h_source, 0, ETH_ALEN);
+			eth_zero_addr(ethhdr->h_source);
 			memcpy(ethhdr->h_dest, dev->net->dev_addr, ETH_ALEN);
 
 			/* Inbound IPv6 packets have an IPv4 ethertype (0x800)
diff --git a/drivers/net/usb/qmi_wwan.c b/drivers/net/usb/qmi_wwan.c
index 0808715ed803..28be4cc63ddf 100644
--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@ -106,7 +106,7 @@ static int qmi_wwan_rx_fixup(struct usbnet *dev, struct sk_buff *skb)
 	skb_push(skb, ETH_HLEN);
 	skb_reset_mac_header(skb);
 	eth_hdr(skb)->h_proto = proto;
-	memset(eth_hdr(skb)->h_source, 0, ETH_ALEN);
+	eth_zero_addr(eth_hdr(skb)->h_source);
 fix_dest:
 	memcpy(eth_hdr(skb)->h_dest, dev->net->dev_addr, ETH_ALEN);
 	return 1;
