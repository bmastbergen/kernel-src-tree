Drivers: hv: vmbus: move init_vp_index() call to vmbus_process_offer()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [hv] vmbus: move init_vp_index() call to vmbus_process_offer() (Vitaly Kuznetsov) [1321073]
Rebuild_FUZZ: 89.76%
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit f38e7dd72337d83cced910cfbf6016475ef85bf7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/f38e7dd7.failed

We need to call init_vp_index() after we added the channel to the appropriate
list (global or subchannel) to be able to use this information when assigning
the channel to the particular vcpu. To do so we need to move a couple of
functions around. The only real change is the init_vp_index() call. This is a
small refactoring without a functional change.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit f38e7dd72337d83cced910cfbf6016475ef85bf7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel_mgmt.c
diff --cc drivers/hv/channel_mgmt.c
index 226cd8906e67,655c0a09c902..000000000000
--- a/drivers/hv/channel_mgmt.c
+++ b/drivers/hv/channel_mgmt.c
@@@ -274,26 -269,22 +277,39 @@@ static void vmbus_process_offer(struct 
  			newchannel->primary_channel = channel;
  			spin_lock_irqsave(&channel->lock, flags);
  			list_add_tail(&newchannel->sc_list, &channel->sc_list);
 -			channel->num_sc++;
  			spin_unlock_irqrestore(&channel->lock, flags);
 -		} else
 -			goto err_free_chan;
 -	}
  
++<<<<<<< HEAD
 +			if (newchannel->target_cpu != get_cpu()) {
 +				put_cpu();
 +				smp_call_function_single(newchannel->target_cpu,
 +							 percpu_channel_enq,
 +							 newchannel, true);
 +			} else {
 +				percpu_channel_enq(newchannel);
 +				put_cpu();
 +			}
 +
 +			newchannel->state = CHANNEL_OPEN_STATE;
 +			if (channel->sc_creation_callback != NULL)
 +				channel->sc_creation_callback(newchannel);
 +
 +			return;
 +		}
 +
 +		goto err_free_chan;
++=======
+ 	init_vp_index(newchannel, &newchannel->offermsg.offer.if_type);
+ 
+ 	if (newchannel->target_cpu != get_cpu()) {
+ 		put_cpu();
+ 		smp_call_function_single(newchannel->target_cpu,
+ 					 percpu_channel_enq,
+ 					 newchannel, true);
+ 	} else {
+ 		percpu_channel_enq(newchannel);
+ 		put_cpu();
++>>>>>>> f38e7dd72337 (Drivers: hv: vmbus: move init_vp_index() call to vmbus_process_offer())
  	}
  
  	/*
* Unmerged path drivers/hv/channel_mgmt.c
