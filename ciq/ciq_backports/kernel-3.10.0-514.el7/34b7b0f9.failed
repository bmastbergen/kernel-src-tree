perf tools: Fallback to srcdir/Documentation/tips.txt

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 34b7b0f95d41d2351a080e774d71085171db90e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/34b7b0f9.failed

Some people don't install perf, but just use compiled version in the
source.  Fallback to lookup the source directory for those poor guys. :)

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/r/1452334589-8782-4-git-send-email-namhyung@kernel.org
[ Make perf_tip() return NULL for ENOENT, making the fallback to really take place ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 34b7b0f95d41d2351a080e774d71085171db90e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-report.c
#	tools/perf/util/util.c
diff --cc tools/perf/builtin-report.c
index 909df888e8a7,2bf537f190a0..000000000000
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@@ -27,7 -27,8 +27,12 @@@
  #include "util/session.h"
  #include "util/tool.h"
  
++<<<<<<< HEAD
 +#include "util/parse-options.h"
++=======
+ #include <subcmd/parse-options.h>
+ #include <subcmd/exec-cmd.h>
++>>>>>>> 34b7b0f95d41 (perf tools: Fallback to srcdir/Documentation/tips.txt)
  #include "util/parse-events.h"
  
  #include "util/thread.h"
@@@ -423,7 -434,14 +428,18 @@@ static int report__browse_hists(struct 
  	int ret;
  	struct perf_session *session = rep->session;
  	struct perf_evlist *evlist = session->evlist;
++<<<<<<< HEAD
 +	const char *help = "For a higher level overview, try: perf report --sort comm,dso";
++=======
+ 	const char *help = perf_tip(system_path(TIPDIR));
+ 
+ 	if (help == NULL) {
+ 		/* fallback for people who don't install perf ;-) */
+ 		help = perf_tip(DOCDIR);
+ 		if (help == NULL)
+ 			help = "Cannot load tips.txt file, please install perf!";
+ 	}
++>>>>>>> 34b7b0f95d41 (perf tools: Fallback to srcdir/Documentation/tips.txt)
  
  	switch (use_browser) {
  	case 1:
diff --cc tools/perf/util/util.c
index 8228f4f63f42,ead9509835d2..000000000000
--- a/tools/perf/util/util.c
+++ b/tools/perf/util/util.c
@@@ -15,6 -16,7 +15,10 @@@
  #include <linux/kernel.h>
  #include <unistd.h>
  #include "callchain.h"
++<<<<<<< HEAD
++=======
+ #include "strlist.h"
++>>>>>>> 34b7b0f95d41 (perf tools: Fallback to srcdir/Documentation/tips.txt)
  
  struct callchain_param	callchain_param = {
  	.mode	= CHAIN_GRAPH_ABS,
@@@ -633,3 -635,59 +637,62 @@@ bool find_process(const char *name
  	closedir(dir);
  	return ret ? false : true;
  }
++<<<<<<< HEAD
++=======
+ 
+ int
+ fetch_kernel_version(unsigned int *puint, char *str,
+ 		     size_t str_size)
+ {
+ 	struct utsname utsname;
+ 	int version, patchlevel, sublevel, err;
+ 
+ 	if (uname(&utsname))
+ 		return -1;
+ 
+ 	if (str && str_size) {
+ 		strncpy(str, utsname.release, str_size);
+ 		str[str_size - 1] = '\0';
+ 	}
+ 
+ 	err = sscanf(utsname.release, "%d.%d.%d",
+ 		     &version, &patchlevel, &sublevel);
+ 
+ 	if (err != 3) {
+ 		pr_debug("Unablt to get kernel version from uname '%s'\n",
+ 			 utsname.release);
+ 		return -1;
+ 	}
+ 
+ 	if (puint)
+ 		*puint = (version << 16) + (patchlevel << 8) + sublevel;
+ 	return 0;
+ }
+ 
+ const char *perf_tip(const char *dirpath)
+ {
+ 	struct strlist *tips;
+ 	struct str_node *node;
+ 	char *tip = NULL;
+ 	struct strlist_config conf = {
+ 		.dirname = dirpath,
+ 		.file_only = true,
+ 	};
+ 
+ 	tips = strlist__new("tips.txt", &conf);
+ 	if (tips == NULL)
+ 		return errno == ENOENT ? NULL : "Tip: get more memory! ;-p";
+ 
+ 	if (strlist__nr_entries(tips) == 0)
+ 		goto out;
+ 
+ 	node = strlist__entry(tips, random() % strlist__nr_entries(tips));
+ 	if (asprintf(&tip, "Tip: %s", node->s) < 0)
+ 		tip = (char *)"Tip: get more memory! ;-)";
+ 
+ out:
+ 	strlist__delete(tips);
+ 
+ 	return tip;
+ }
++>>>>>>> 34b7b0f95d41 (perf tools: Fallback to srcdir/Documentation/tips.txt)
* Unmerged path tools/perf/builtin-report.c
* Unmerged path tools/perf/util/util.c
