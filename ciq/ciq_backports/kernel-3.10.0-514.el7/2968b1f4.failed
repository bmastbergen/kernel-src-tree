Btrfs: don't continue setting up space cache when enospc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Josef Bacik <jbacik@fb.com>
commit 2968b1f48bd7366dd7310acde1ee6d1bf7791142
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/2968b1f4.failed

If we hit ENOSPC when setting up a space cache don't bother setting up any of
the other space cache's in this transaction, it'll just induce unnecessary
latency.  Thanks,

	Signed-off-by: Josef Bacik <jbacik@fb.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit 2968b1f48bd7366dd7310acde1ee6d1bf7791142)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent-tree.c
#	fs/btrfs/transaction.h
diff --cc fs/btrfs/extent-tree.c
index b4ee3d4ea629,3185c457f025..000000000000
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@@ -3397,9 -3431,19 +3406,23 @@@ again
  	ret = btrfs_prealloc_file_range_trans(inode, trans, 0, 0, num_pages,
  					      num_pages, num_pages,
  					      &alloc_hint);
+ 	/*
+ 	 * Our cache requires contiguous chunks so that we don't modify a bunch
+ 	 * of metadata or split extents when writing the cache out, which means
+ 	 * we can enospc if we are heavily fragmented in addition to just normal
+ 	 * out of space conditions.  So if we hit this just skip setting up any
+ 	 * other block groups for this transaction, maybe we'll unpin enough
+ 	 * space the next time around.
+ 	 */
  	if (!ret)
  		dcs = BTRFS_DC_SETUP;
++<<<<<<< HEAD
 +	btrfs_free_reserved_data_space(inode, 0, num_pages);
++=======
+ 	else if (ret == -ENOSPC)
+ 		set_bit(BTRFS_TRANS_CACHE_ENOSPC, &trans->transaction->flags);
+ 	btrfs_free_reserved_data_space(inode, num_pages);
++>>>>>>> 2968b1f48bd7 (Btrfs: don't continue setting up space cache when enospc)
  
  out_put:
  	iput(inode);
diff --cc fs/btrfs/transaction.h
index 4083b77d49ae,30ae75074ca4..000000000000
--- a/fs/btrfs/transaction.h
+++ b/fs/btrfs/transaction.h
@@@ -32,6 -32,10 +32,13 @@@ enum btrfs_trans_state 
  	TRANS_STATE_MAX			= 6,
  };
  
++<<<<<<< HEAD
++=======
+ #define BTRFS_TRANS_HAVE_FREE_BGS	0
+ #define BTRFS_TRANS_DIRTY_BG_RUN	1
+ #define BTRFS_TRANS_CACHE_ENOSPC	2
+ 
++>>>>>>> 2968b1f48bd7 (Btrfs: don't continue setting up space cache when enospc)
  struct btrfs_transaction {
  	u64 transid;
  	/*
* Unmerged path fs/btrfs/extent-tree.c
* Unmerged path fs/btrfs/transaction.h
