openvswitch: Abstract vport name through ovs_vport_name()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Thomas Graf <tgraf@suug.ch>
commit c9db965c524ea27451e60d5ddcd242f6c33a70fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/c9db965c.failed

This allows to get rid of the get_name() vport ops later on.

	Signed-off-by: Thomas Graf <tgraf@suug.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c9db965c524ea27451e60d5ddcd242f6c33a70fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/openvswitch/vport-netdev.c
#	net/openvswitch/vport-netdev.h
diff --cc net/openvswitch/vport-netdev.c
index 33e6d6e2908f,e682bdc34a5c..000000000000
--- a/net/openvswitch/vport-netdev.c
+++ b/net/openvswitch/vport-netdev.c
@@@ -174,15 -168,9 +174,18 @@@ static void netdev_destroy(struct vpor
  		ovs_netdev_detach_dev(vport);
  	rtnl_unlock();
  
 -	call_rcu(&vport->rcu, free_port_rcu);
 +	call_rcu(&netdev_vport->rcu, free_port_rcu);
 +}
 +
++<<<<<<< HEAD
 +const char *ovs_netdev_get_name(const struct vport *vport)
 +{
 +	const struct netdev_vport *netdev_vport = netdev_vport_priv(vport);
 +	return netdev_vport->dev->name;
  }
  
++=======
++>>>>>>> c9db965c524e (openvswitch: Abstract vport name through ovs_vport_name())
  static unsigned int packet_length(const struct sk_buff *skb)
  {
  	unsigned int length = skb->len - ETH_HLEN;
diff --cc net/openvswitch/vport-netdev.h
index 6f7038e79c52,684fb88723a4..000000000000
--- a/net/openvswitch/vport-netdev.h
+++ b/net/openvswitch/vport-netdev.h
@@@ -26,19 -26,6 +26,22 @@@
  
  struct vport *ovs_netdev_get_vport(struct net_device *dev);
  
++<<<<<<< HEAD
 +struct netdev_vport {
 +	struct rcu_head rcu;
 +
 +	struct net_device *dev;
 +};
 +
 +static inline struct netdev_vport *
 +netdev_vport_priv(const struct vport *vport)
 +{
 +	return vport_priv(vport);
 +}
 +
 +const char *ovs_netdev_get_name(const struct vport *);
++=======
++>>>>>>> c9db965c524e (openvswitch: Abstract vport name through ovs_vport_name())
  void ovs_netdev_detach_dev(struct vport *);
  
  int __init ovs_netdev_init(void);
diff --git a/net/openvswitch/datapath.c b/net/openvswitch/datapath.c
index b447e1242e90..83bfc290f2ad 100644
--- a/net/openvswitch/datapath.c
+++ b/net/openvswitch/datapath.c
@@ -176,7 +176,7 @@ static inline struct datapath *get_dp(struct net *net, int dp_ifindex)
 const char *ovs_dp_name(const struct datapath *dp)
 {
 	struct vport *vport = ovs_vport_ovsl_rcu(dp, OVSP_LOCAL);
-	return vport->ops->get_name(vport);
+	return ovs_vport_name(vport);
 }
 
 static int get_dpifindex(const struct datapath *dp)
@@ -1797,7 +1797,7 @@ static int ovs_vport_cmd_fill_info(struct vport *vport, struct sk_buff *skb,
 	if (nla_put_u32(skb, OVS_VPORT_ATTR_PORT_NO, vport->port_no) ||
 	    nla_put_u32(skb, OVS_VPORT_ATTR_TYPE, vport->ops->type) ||
 	    nla_put_string(skb, OVS_VPORT_ATTR_NAME,
-			   vport->ops->get_name(vport)))
+			   ovs_vport_name(vport)))
 		goto nla_put_failure;
 
 	ovs_vport_get_stats(vport, &vport_stats);
diff --git a/net/openvswitch/vport-internal_dev.c b/net/openvswitch/vport-internal_dev.c
index d6aef25cd7bb..fede2289a276 100644
--- a/net/openvswitch/vport-internal_dev.c
+++ b/net/openvswitch/vport-internal_dev.c
@@ -248,7 +248,6 @@ static struct vport_ops ovs_internal_vport_ops = {
 	.type		= OVS_VPORT_TYPE_INTERNAL,
 	.create		= internal_dev_create,
 	.destroy	= internal_dev_destroy,
-	.get_name	= ovs_netdev_get_name,
 	.send		= internal_dev_recv,
 };
 
* Unmerged path net/openvswitch/vport-netdev.c
* Unmerged path net/openvswitch/vport-netdev.h
diff --git a/net/openvswitch/vport.c b/net/openvswitch/vport.c
index af23ba077836..d14f59403c5e 100644
--- a/net/openvswitch/vport.c
+++ b/net/openvswitch/vport.c
@@ -113,7 +113,7 @@ struct vport *ovs_vport_locate(const struct net *net, const char *name)
 	struct vport *vport;
 
 	hlist_for_each_entry_rcu(vport, bucket, hash_node)
-		if (!strcmp(name, vport->ops->get_name(vport)) &&
+		if (!strcmp(name, ovs_vport_name(vport)) &&
 		    net_eq(ovs_dp_get_net(vport->dp), net))
 			return vport;
 
@@ -226,7 +226,7 @@ struct vport *ovs_vport_add(const struct vport_parms *parms)
 		}
 
 		bucket = hash_bucket(ovs_dp_get_net(vport->dp),
-				     vport->ops->get_name(vport));
+				     ovs_vport_name(vport));
 		hlist_add_head_rcu(&vport->hash_node, bucket);
 		return vport;
 	}
diff --git a/net/openvswitch/vport.h b/net/openvswitch/vport.h
index 4750fb673a9f..b36deb05ab3a 100644
--- a/net/openvswitch/vport.h
+++ b/net/openvswitch/vport.h
@@ -235,6 +235,11 @@ static inline void ovs_skb_postpush_rcsum(struct sk_buff *skb,
 		skb->csum = csum_add(skb->csum, csum_partial(start, len, 0));
 }
 
+static inline const char *ovs_vport_name(struct vport *vport)
+{
+	return vport->dev ? vport->dev->name : vport->ops->get_name(vport);
+}
+
 int ovs_vport_ops_register(struct vport_ops *ops);
 void ovs_vport_ops_unregister(struct vport_ops *ops);
 
