tick-common: Fix wrong check in tick_check_replacement()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Viresh Kumar <viresh.kumar@linaro.org>
commit 521c42990e9d561ed5ed9f501f07639d0512b3c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/521c4299.failed

tick_check_replacement() returns if a replacement of clock_event_device is
possible or not. It does this as the first check:

	if (tick_check_percpu(curdev, newdev, smp_processor_id()))
		return false;

Thats wrong. tick_check_percpu() returns true when the device is
useable. Check for false instead.

[ tglx: Massaged changelog ]

	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
	Cc: <stable@vger.kernel.org> # v3.11+
	Cc: linaro-kernel@lists.linaro.org
	Cc: fweisbec@gmail.com
	Cc: Arvind.Chauhan@arm.com
	Cc: linaro-networking@linaro.org
Link: http://lkml.kernel.org/r/486a02efe0246635aaba786e24b42d316438bf3b.1397537987.git.viresh.kumar@linaro.org
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
(cherry picked from commit 521c42990e9d561ed5ed9f501f07639d0512b3c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/tick-common.c
diff --cc kernel/time/tick-common.c
index b2f41b05d9e4,0a0608edeb26..000000000000
--- a/kernel/time/tick-common.c
+++ b/kernel/time/tick-common.c
@@@ -255,7 -270,21 +255,25 @@@ static bool tick_check_preferred(struc
  }
  
  /*
++<<<<<<< HEAD
 + * Check, if the new registered device should be used.
++=======
+  * Check whether the new device is a better fit than curdev. curdev
+  * can be NULL !
+  */
+ bool tick_check_replacement(struct clock_event_device *curdev,
+ 			    struct clock_event_device *newdev)
+ {
+ 	if (!tick_check_percpu(curdev, newdev, smp_processor_id()))
+ 		return false;
+ 
+ 	return tick_check_preferred(curdev, newdev);
+ }
+ 
+ /*
+  * Check, if the new registered device should be used. Called with
+  * clockevents_lock held and interrupts disabled.
++>>>>>>> 521c42990e9d (tick-common: Fix wrong check in tick_check_replacement())
   */
  void tick_check_new_device(struct clock_event_device *newdev)
  {
* Unmerged path kernel/time/tick-common.c
