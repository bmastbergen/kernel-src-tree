KVM: svm: unconditionally intercept #DB

jira LE-1907
cve CVE-2015-8104
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit cbdb967af3d54993f5814f1cee0ed311a055377d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/cbdb967a.failed

This is needed to avoid the possibility that the guest triggers
an infinite stream of #DB exceptions (CVE-2015-8104).

VMX is not affected: because it does not save DR6 in the VMCS,
it already intercepts #DB unconditionally.

	Reported-by: Jan Beulich <jbeulich@suse.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit cbdb967af3d54993f5814f1cee0ed311a055377d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm.c
diff --cc arch/x86/kvm/svm.c
index da9e425354fb,1cc1ffca0d8c..000000000000
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@@ -1106,6 -1019,8 +1106,11 @@@ static void init_vmcb(struct vcpu_svm *
  	set_exception_intercept(svm, PF_VECTOR);
  	set_exception_intercept(svm, UD_VECTOR);
  	set_exception_intercept(svm, MC_VECTOR);
++<<<<<<< HEAD
++=======
+ 	set_exception_intercept(svm, AC_VECTOR);
+ 	set_exception_intercept(svm, DB_VECTOR);
++>>>>>>> cbdb967af3d5 (KVM: svm: unconditionally intercept #DB)
  
  	set_intercept(svm, INTERCEPT_INTR);
  	set_intercept(svm, INTERCEPT_NMI);
* Unmerged path arch/x86/kvm/svm.c
