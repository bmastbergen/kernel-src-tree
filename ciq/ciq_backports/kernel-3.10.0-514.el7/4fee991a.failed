bonding: remove slave lists

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Veaceslav Falico <vfalico@redhat.com>
commit 4fee991a4689ca64abea90814e0b3c6d30a3c62f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/4fee991a.failed

And all the initialization.

CC: Jay Vosburgh <fubar@us.ibm.com>
CC: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: Veaceslav Falico <vfalico@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4fee991a4689ca64abea90814e0b3c6d30a3c62f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
#	include/net/bonding.h
diff --cc drivers/net/bonding/bond_main.c
index dd9219794eca,d49404509814..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -920,7 -972,7 +920,11 @@@ void bond_select_active_slave(struct bo
   */
  static void bond_attach_slave(struct bonding *bond, struct slave *new_slave)
  {
++<<<<<<< HEAD
 +	list_add_tail_rcu(&new_slave->list, &bond->slave_list);
++=======
+ 	bond->slave_cnt++;
++>>>>>>> 4fee991a4689 (bonding: remove slave lists)
  }
  
  /*
@@@ -935,7 -987,7 +939,11 @@@
   */
  static void bond_detach_slave(struct bonding *bond, struct slave *slave)
  {
++<<<<<<< HEAD
 +	list_del_rcu(&slave->list);
++=======
+ 	bond->slave_cnt--;
++>>>>>>> 4fee991a4689 (bonding: remove slave lists)
  }
  
  #ifdef CONFIG_NET_POLL_CONTROLLER
@@@ -1399,10 -1372,8 +1407,15 @@@ int bond_enslave(struct net_device *bon
  		res = -ENOMEM;
  		goto err_undo_flags;
  	}
++<<<<<<< HEAD
 +
 +	new_slave->bond = bond;
 +	new_slave->dev = slave_dev;
 +	/* Set the new_slave's queue_id to be zero.  Queue ID mapping
++=======
+ 	/*
+ 	 * Set the new_slave's queue_id to be zero.  Queue ID mapping
++>>>>>>> 4fee991a4689 (bonding: remove slave lists)
  	 * is set via sysfs or module option if desired.
  	 */
  	new_slave->queue_id = 0;
@@@ -4057,8 -4016,9 +4070,14 @@@ void bond_setup(struct net_device *bond
  {
  	struct bonding *bond = netdev_priv(bond_dev);
  
++<<<<<<< HEAD
 +	spin_lock_init(&bond->mode_lock);
 +	INIT_LIST_HEAD(&bond->slave_list);
++=======
+ 	/* initialize rwlocks */
+ 	rwlock_init(&bond->lock);
+ 	rwlock_init(&bond->curr_slave_lock);
++>>>>>>> 4fee991a4689 (bonding: remove slave lists)
  	bond->params = bonding_defaults;
  
  	/* Initialize pointers */
diff --cc include/net/bonding.h
index 8c9030b1a51e,e5c32a61dacc..000000000000
--- a/include/net/bonding.h
+++ b/include/net/bonding.h
@@@ -147,14 -161,14 +147,13 @@@ struct bond_parm_tbl 
  	int mode;
  };
  
 -#define BOND_MAX_MODENAME_LEN 20
 -
  struct slave {
  	struct net_device *dev; /* first - useful for panic debug */
- 	struct list_head list;
  	struct bonding *bond; /* our master */
  	int    delay;
 -	unsigned long jiffies;
 -	unsigned long last_arp_rx;
 +	/* all three in jiffies */
 +	unsigned long last_link_up;
 +	unsigned long last_rx;
  	unsigned long target_last_arp_rx[BOND_MAX_ARP_TARGETS];
  	s8     link;    /* one of BOND_LINK_XXXX */
  	s8     new_link;
@@@ -194,11 -204,9 +193,17 @@@ struct bond_up_slave 
   */
  struct bonding {
  	struct   net_device *dev; /* first - useful for panic debug */
++<<<<<<< HEAD:include/net/bonding.h
 +	struct   list_head slave_list;
 +	struct   slave __rcu *curr_active_slave;
 +	struct   slave __rcu *current_arp_slave;
 +	struct   slave __rcu *primary_slave;
 +	struct   bond_up_slave __rcu *slave_arr; /* Array of usable slaves */
++=======
+ 	struct   slave *curr_active_slave;
+ 	struct   slave *current_arp_slave;
+ 	struct   slave *primary_slave;
++>>>>>>> 4fee991a4689 (bonding: remove slave lists):drivers/net/bonding/bonding.h
  	bool     force_primary;
  	s32      slave_cnt; /* never change this value outside the attach/detach wrappers */
  	int     (*recv_probe)(const struct sk_buff *, struct bonding *,
* Unmerged path drivers/net/bonding/bond_main.c
* Unmerged path include/net/bonding.h
