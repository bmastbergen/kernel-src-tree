ceph: add acl, noacl options for cephfs mount

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Sage Weil <sage@inktank.com>
commit 45195e42c78ea91135108207dbcaf75e5556a309
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/45195e42.failed

Make the 'acl' option dependent on having ACL support compiled in.  Make
the 'noacl' option work even without it so that one can always ask it to
be off and not error out on mount when it is not supported.

	Signed-off-by: Guangliang Zhao <lucienchao@gmail.com>
	Signed-off-by: Sage Weil <sage@inktank.com>
(cherry picked from commit 45195e42c78ea91135108207dbcaf75e5556a309)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/super.c
diff --cc fs/ceph/super.c
index 5877616577af,10a4ccbf38da..000000000000
--- a/fs/ceph/super.c
+++ b/fs/ceph/super.c
@@@ -142,6 -143,12 +142,15 @@@ enum 
  	Opt_nodcache,
  	Opt_ino32,
  	Opt_noino32,
++<<<<<<< HEAD
++=======
+ 	Opt_fscache,
+ 	Opt_nofscache,
+ #ifdef CONFIG_CEPH_FS_POSIX_ACL
+ 	Opt_acl,
+ #endif
+ 	Opt_noacl
++>>>>>>> 45195e42c78e (ceph: add acl, noacl options for cephfs mount)
  };
  
  static match_table_t fsopt_tokens = {
@@@ -167,6 -174,12 +176,15 @@@
  	{Opt_nodcache, "nodcache"},
  	{Opt_ino32, "ino32"},
  	{Opt_noino32, "noino32"},
++<<<<<<< HEAD
++=======
+ 	{Opt_fscache, "fsc"},
+ 	{Opt_nofscache, "nofsc"},
+ #ifdef CONFIG_CEPH_FS_POSIX_ACL
+ 	{Opt_acl, "acl"},
+ #endif
+ 	{Opt_noacl, "noacl"},
++>>>>>>> 45195e42c78e (ceph: add acl, noacl options for cephfs mount)
  	{-1, NULL}
  };
  
@@@ -260,6 -273,20 +278,23 @@@ static int parse_fsopt_token(char *c, v
  	case Opt_noino32:
  		fsopt->flags &= ~CEPH_MOUNT_OPT_INO32;
  		break;
++<<<<<<< HEAD
++=======
+ 	case Opt_fscache:
+ 		fsopt->flags |= CEPH_MOUNT_OPT_FSCACHE;
+ 		break;
+ 	case Opt_nofscache:
+ 		fsopt->flags &= ~CEPH_MOUNT_OPT_FSCACHE;
+ 		break;
+ #ifdef CONFIG_CEPH_FS_POSIX_ACL
+ 	case Opt_acl:
+ 		fsopt->sb_flags |= MS_POSIXACL;
+ 		break;
+ #endif
+ 	case Opt_noacl:
+ 		fsopt->sb_flags &= ~MS_POSIXACL;
+ 		break;
++>>>>>>> 45195e42c78e (ceph: add acl, noacl options for cephfs mount)
  	default:
  		BUG_ON(token);
  	}
@@@ -412,13 -441,26 +447,20 @@@ static int ceph_show_options(struct seq
  
  	if (fsopt->flags & CEPH_MOUNT_OPT_DIRSTAT)
  		seq_puts(m, ",dirstat");
 -	if ((fsopt->flags & CEPH_MOUNT_OPT_RBYTES) == 0)
 -		seq_puts(m, ",norbytes");
 +	if ((fsopt->flags & CEPH_MOUNT_OPT_RBYTES))
 +		seq_puts(m, ",rbytes");
  	if (fsopt->flags & CEPH_MOUNT_OPT_NOASYNCREADDIR)
  		seq_puts(m, ",noasyncreaddir");
 -	if (fsopt->flags & CEPH_MOUNT_OPT_DCACHE)
 -		seq_puts(m, ",dcache");
 -	else
 +	if ((fsopt->flags & CEPH_MOUNT_OPT_DCACHE) == 0)
  		seq_puts(m, ",nodcache");
 -	if (fsopt->flags & CEPH_MOUNT_OPT_FSCACHE)
 -		seq_puts(m, ",fsc");
 -	else
 -		seq_puts(m, ",nofsc");
  
+ #ifdef CONFIG_CEPH_FS_POSIX_ACL
+ 	if (fsopt->sb_flags & MS_POSIXACL)
+ 		seq_puts(m, ",acl");
+ 	else
+ 		seq_puts(m, ",noacl");
+ #endif
+ 
  	if (fsopt->wsize)
  		seq_printf(m, ",wsize=%d", fsopt->wsize);
  	if (fsopt->rsize != CEPH_RSIZE_DEFAULT)
* Unmerged path fs/ceph/super.c
