cpufreq: intel_pstate: Replace BYT with ATOM

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
Rebuild_CHGLOG: - [cpufreq] intel_pstate: Replace BYT with ATOM (Prarit Bhargava) [1283337]
Rebuild_FUZZ: 88.61%
commit-author Philippe Longepe <philippe.longepe@linux.intel.com>
commit 938d21a2a6370241c86d515ca574aaaa9e8812f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/938d21a2.failed

Rename symbol and function names starting with "BYT" or "byt" to
start with "ATOM" or "atom", respectively, so as to make it clear
that they may apply to Atom in general and not just to Baytrail
(the goal is to support several Atoms architectures eventually).

This should not lead to any functional changes.

	Signed-off-by: Philippe Longepe <philippe.longepe@linux.intel.com>
	Signed-off-by: Stephane Gasparini <stephane.gasparini@linux.intel.com>
	Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
[ rjw : Changelog ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 938d21a2a6370241c86d515ca574aaaa9e8812f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index 07d88cb77cb6,5f124e98f439..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -31,11 -32,12 +31,11 @@@
  #include <asm/div64.h>
  #include <asm/msr.h>
  #include <asm/cpu_device_id.h>
 -#include <asm/cpufeature.h>
  
- #define BYT_RATIOS		0x66a
- #define BYT_VIDS		0x66b
- #define BYT_TURBO_RATIOS	0x66c
- #define BYT_TURBO_VIDS		0x66d
+ #define ATOM_RATIOS		0x66a
+ #define ATOM_VIDS		0x66b
+ #define ATOM_TURBO_RATIOS	0x66c
+ #define ATOM_TURBO_VIDS		0x66d
  
  #define FRAC_BITS 8
  #define int_tofp(X) ((int64_t)(X) << FRAC_BITS)
@@@ -485,15 -523,12 +485,15 @@@ static void __init intel_pstate_sysfs_e
  }
  /************************** sysfs end ************************/
  
 -static void intel_pstate_hwp_enable(struct cpudata *cpudata)
 +static void intel_pstate_hwp_enable(void)
  {
 -	wrmsrl_on_cpu(cpudata->cpu, MSR_PM_ENABLE, 0x1);
 +	hwp_active++;
 +	pr_info("intel_pstate HWP enabled\n");
 +
 +	wrmsrl( MSR_PM_ENABLE, 0x1);
  }
  
- static int byt_get_min_pstate(void)
+ static int atom_get_min_pstate(void)
  {
  	u64 value;
  
@@@ -539,13 -574,13 +539,13 @@@ static void atom_set_pstate(struct cpud
  
  	val |= vid;
  
 -	wrmsrl_on_cpu(cpudata->cpu, MSR_IA32_PERF_CTL, val);
 +	wrmsrl(MSR_IA32_PERF_CTL, val);
  }
  
- #define BYT_BCLK_FREQS 5
- static int byt_freq_table[BYT_BCLK_FREQS] = { 833, 1000, 1333, 1167, 800};
+ #define ATOM_BCLK_FREQS 5
+ static int atom_freq_table[ATOM_BCLK_FREQS] = { 833, 1000, 1333, 1167, 800};
  
- static int byt_get_scaling(void)
+ static int atom_get_scaling(void)
  {
  	u64 value;
  	int i;
@@@ -919,9 -992,10 +919,14 @@@ static const struct x86_cpu_id intel_ps
  	ICPU(0x45, core_params),
  	ICPU(0x46, core_params),
  	ICPU(0x47, core_params),
++<<<<<<< HEAD
 +	/* ICPU(0x4e, core_params), */
++=======
+ 	ICPU(0x4c, atom_params),
+ 	ICPU(0x4e, core_params),
++>>>>>>> 938d21a2a637 (cpufreq: intel_pstate: Replace BYT with ATOM)
  	ICPU(0x4f, core_params),
 -	ICPU(0x5e, core_params),
 +	/* ICPU(0x5e, core_params), */
  	ICPU(0x56, core_params),
  	ICPU(0x57, knl_params),
  	{}
* Unmerged path drivers/cpufreq/intel_pstate.c
