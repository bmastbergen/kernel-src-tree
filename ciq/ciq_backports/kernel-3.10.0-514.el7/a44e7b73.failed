cxgb4 : Only pass app selector of 0 or 3 to firmware

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Anish Bhatt <anish@chelsio.com>
commit a44e7b73118b21176bdf6376c620d778a0ff0ee2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/a44e7b73.failed

This keeps app format passed to firmware the same irrespective
of DCBx version in use.

	Signed-off-by: Anish Bhatt <anish@chelsio.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a44e7b73118b21176bdf6376c620d778a0ff0ee2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
diff --cc drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
index 77b222451055,7f7c4ba0d4f4..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
@@@ -790,26 -790,19 +790,32 @@@ static int __cxgb4_getapp(struct net_de
  }
  
  /* Return the Application User Priority Map associated with the specified
 - * Application ID.
 + * Application ID.  Since this routine is prototyped to return "u8" we can't
 + * return errors ...
   */
 -static int cxgb4_getapp(struct net_device *dev, u8 app_idtype, u16 app_id)
 +static u8 cxgb4_getapp(struct net_device *dev, u8 app_idtype, u16 app_id)
  {
++<<<<<<< HEAD
 +	int result = __cxgb4_getapp(dev, app_idtype, app_id, 0);
 +
 +	if (result < 0)
 +		result = 0;
 +
 +	return result;
++=======
+ 	/* Convert app_idtype to firmware format before querying */
+ 	return __cxgb4_getapp(dev, app_idtype == DCB_APP_IDTYPE_ETHTYPE ?
+ 			      app_idtype : 3, app_id, 0);
++>>>>>>> a44e7b73118b (cxgb4 : Only pass app selector of 0 or 3 to firmware)
  }
  
 -/* Write a new Application User Priority Map for the specified Application ID
 +/* Write a new Application User Priority Map for the specified Application ID.
 + * This routine is prototyped to return "u8" but other instantiations of the
 + * DCB NetLink Operations "setapp" routines return negative errnos for errors.
 + * We follow their lead.
   */
 -static int __cxgb4_setapp(struct net_device *dev, u8 app_idtype, u16 app_id,
 -			  u8 app_prio)
 +static u8 __cxgb4_setapp(struct net_device *dev, u8 app_idtype, u16 app_id,
 +		       u8 app_prio)
  {
  	struct fw_port_cmd pcmd;
  	struct port_info *pi = netdev2pinfo(dev);
* Unmerged path drivers/net/ethernet/chelsio/cxgb4/cxgb4_dcb.c
