IB/core: add a need_inval flag to struct ib_mr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-514.el7
commit-author Steve Wise <swise@chelsio.com>
commit d4a85c309b33f93cb211f2fa9d26fa77d0bb7b5e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-514.el7/d4a85c30.failed

This is the first step toward moving MR invalidation decisions
to the core.  It will be needed by the upcoming RW API.

	Signed-off-by: Steve Wise <swise@opengridcomputing.com>
	Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit d4a85c309b33f93cb211f2fa9d26fa77d0bb7b5e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/verbs.c
#	include/rdma/ib_verbs.h
diff --cc drivers/infiniband/core/verbs.c
index b3474557c499,76c9c3faac20..000000000000
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@@ -1187,7 -1353,7 +1187,11 @@@ struct ib_mr *ib_get_dma_mr(struct ib_p
  		mr->pd      = pd;
  		mr->uobject = NULL;
  		atomic_inc(&pd->usecnt);
++<<<<<<< HEAD
 +		atomic_set(&mr->usecnt, 0);
++=======
+ 		mr->need_inval = false;
++>>>>>>> d4a85c309b33 (IB/core: add a need_inval flag to struct ib_mr)
  	}
  
  	return mr;
@@@ -1238,7 -1400,7 +1242,11 @@@ struct ib_mr *ib_alloc_mr(struct ib_pd 
  		mr->pd      = pd;
  		mr->uobject = NULL;
  		atomic_inc(&pd->usecnt);
++<<<<<<< HEAD
 +		atomic_set(&mr->usecnt, 0);
++=======
+ 		mr->need_inval = false;
++>>>>>>> d4a85c309b33 (IB/core: add a need_inval flag to struct ib_mr)
  	}
  
  	return mr;
diff --cc include/rdma/ib_verbs.h
index b3a28d2dd6e1,3f66647749ca..000000000000
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@@ -1384,10 -1441,16 +1384,21 @@@ struct ib_qp 
  struct ib_mr {
  	struct ib_device  *device;
  	struct ib_pd	  *pd;
 +	struct ib_uobject *uobject;
  	u32		   lkey;
  	u32		   rkey;
++<<<<<<< HEAD
 +	atomic_t	   usecnt; /* count number of MWs */
++=======
+ 	u64		   iova;
+ 	u32		   length;
+ 	unsigned int	   page_size;
+ 	bool		   need_inval;
+ 	union {
+ 		struct ib_uobject	*uobject;	/* user */
+ 		struct list_head	qp_entry;	/* FR */
+ 	};
++>>>>>>> d4a85c309b33 (IB/core: add a need_inval flag to struct ib_mr)
  };
  
  struct ib_mw {
* Unmerged path drivers/infiniband/core/verbs.c
* Unmerged path include/rdma/ib_verbs.h
