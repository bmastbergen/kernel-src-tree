fuse: readdirplus: sanity checks

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [fs] fuse: readdirplus sanity checks (Niels de Vos) [988312]
Rebuild_FUZZ: 98.41%
commit-author Miklos Szeredi <mszeredi@suse.cz>
commit a28ef45cbb1e7fadd5159deb17b02de15c6e4aaf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/a28ef45c.failed

Add sanity checks before adding or updating an entry with data received
from readdirplus.

	Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
CC: stable@vger.kernel.org
(cherry picked from commit a28ef45cbb1e7fadd5159deb17b02de15c6e4aaf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/dir.c
diff --cc fs/fuse/dir.c
index f3f783dc4f75,bb6829720dd6..000000000000
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@@ -1229,9 -1233,19 +1235,23 @@@ static int fuse_direntplus_link(struct 
  
  	name.hash = full_name_hash(name.name, name.len);
  	dentry = d_lookup(parent, &name);
 -	if (dentry) {
 +	if (dentry && dentry->d_inode) {
  		inode = dentry->d_inode;
++<<<<<<< HEAD
 +		if (get_node_id(inode) == o->nodeid) {
++=======
+ 		if (!inode) {
+ 			d_drop(dentry);
+ 		} else if (get_node_id(inode) != o->nodeid ||
+ 			   ((o->attr.mode ^ inode->i_mode) & S_IFMT)) {
+ 			err = d_invalidate(dentry);
+ 			if (err)
+ 				goto out;
+ 		} else if (is_bad_inode(inode)) {
+ 			err = -EIO;
+ 			goto out;
+ 		} else {
++>>>>>>> a28ef45cbb1e (fuse: readdirplus: sanity checks)
  			struct fuse_inode *fi;
  			fi = get_fuse_inode(inode);
  			spin_lock(&fc->lock);
* Unmerged path fs/fuse/dir.c
