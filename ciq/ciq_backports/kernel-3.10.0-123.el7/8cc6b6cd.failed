powerpc/eeh: Drop taken reference to driver on eeh_rmv_device

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [powerpc] eeh: Drop taken reference to driver on eeh_rmv_device (Steve Best) [1059851]
Rebuild_FUZZ: 92.98%
commit-author Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
commit 8cc6b6cd8713457be80202fc4264f05d20bc5e1b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/8cc6b6cd.failed

Commit f5c57710dd62dd06f176934a8b4b8accbf00f9f8 ("powerpc/eeh: Use
partial hotplug for EEH unaware drivers") introduces eeh_rmv_device,
which may grab a reference to a driver, but not release it.

That prevents a driver from being removed after it has gone through EEH
recovery.

This patch drops the reference if it was taken.

	Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
	Acked-by: Gavin Shan <shangw@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit 8cc6b6cd8713457be80202fc4264f05d20bc5e1b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kernel/eeh_driver.c
diff --cc arch/powerpc/kernel/eeh_driver.c
index 9a6ea174a294,fdc679d309ec..000000000000
--- a/arch/powerpc/kernel/eeh_driver.c
+++ b/arch/powerpc/kernel/eeh_driver.c
@@@ -342,6 -346,60 +342,63 @@@ static void *eeh_report_failure(void *d
  	return NULL;
  }
  
++<<<<<<< HEAD
++=======
+ static void *eeh_rmv_device(void *data, void *userdata)
+ {
+ 	struct pci_driver *driver;
+ 	struct eeh_dev *edev = (struct eeh_dev *)data;
+ 	struct pci_dev *dev = eeh_dev_to_pci_dev(edev);
+ 	int *removed = (int *)userdata;
+ 
+ 	/*
+ 	 * Actually, we should remove the PCI bridges as well.
+ 	 * However, that's lots of complexity to do that,
+ 	 * particularly some of devices under the bridge might
+ 	 * support EEH. So we just care about PCI devices for
+ 	 * simplicity here.
+ 	 */
+ 	if (!dev || (dev->hdr_type & PCI_HEADER_TYPE_BRIDGE))
+ 		return NULL;
+ 
+ 	driver = eeh_pcid_get(dev);
+ 	if (driver) {
+ 		eeh_pcid_put(dev);
+ 		if (driver->err_handler)
+ 			return NULL;
+ 	}
+ 
+ 	/* Remove it from PCI subsystem */
+ 	pr_debug("EEH: Removing %s without EEH sensitive driver\n",
+ 		 pci_name(dev));
+ 	edev->bus = dev->bus;
+ 	edev->mode |= EEH_DEV_DISCONNECTED;
+ 	(*removed)++;
+ 
+ 	pci_lock_rescan_remove();
+ 	pci_stop_and_remove_bus_device(dev);
+ 	pci_unlock_rescan_remove();
+ 
+ 	return NULL;
+ }
+ 
+ static void *eeh_pe_detach_dev(void *data, void *userdata)
+ {
+ 	struct eeh_pe *pe = (struct eeh_pe *)data;
+ 	struct eeh_dev *edev, *tmp;
+ 
+ 	eeh_pe_for_each_dev(pe, edev, tmp) {
+ 		if (!(edev->mode & EEH_DEV_DISCONNECTED))
+ 			continue;
+ 
+ 		edev->mode &= ~(EEH_DEV_DISCONNECTED | EEH_DEV_IRQ_DISABLED);
+ 		eeh_rmv_from_parent_pe(edev);
+ 	}
+ 
+ 	return NULL;
+ }
+ 
++>>>>>>> 8cc6b6cd8713 (powerpc/eeh: Drop taken reference to driver on eeh_rmv_device)
  /**
   * eeh_reset_device - Perform actual reset of a pci slot
   * @pe: EEH PE
* Unmerged path arch/powerpc/kernel/eeh_driver.c
