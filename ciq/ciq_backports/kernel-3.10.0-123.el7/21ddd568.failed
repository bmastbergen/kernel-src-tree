ext4: translate flag bits to strings in tracepoints

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Theodore Ts'o <tytso@mit.edu>
commit 21ddd568c133024196d394c43923f55cad1e7bd0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/21ddd568.failed

Translate the bitfields used in various flags argument to strings to
make the tracepoint output more human-readable.

	Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
(cherry picked from commit 21ddd568c133024196d394c43923f55cad1e7bd0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/trace/events/ext4.h
diff --cc include/trace/events/ext4.h
index 8ee15b97cd38,2068db241f22..000000000000
--- a/include/trace/events/ext4.h
+++ b/include/trace/events/ext4.h
@@@ -343,27 -391,46 +394,58 @@@ TRACE_EVENT(ext4_da_write_pages
  	TP_fast_assign(
  		__entry->dev		= inode->i_sb->s_dev;
  		__entry->ino		= inode->i_ino;
 -		__entry->first_page	= first_page;
 -		__entry->nr_to_write	= wbc->nr_to_write;
 -		__entry->sync_mode	= wbc->sync_mode;
 +		__entry->b_blocknr	= mpd->b_blocknr;
 +		__entry->b_size		= mpd->b_size;
 +		__entry->b_state	= mpd->b_state;
 +		__entry->first_page	= mpd->first_page;
 +		__entry->io_done	= mpd->io_done;
 +		__entry->pages_written	= mpd->pages_written;
 +		__entry->sync_mode	= mpd->wbc->sync_mode;
  	),
  
 -	TP_printk("dev %d,%d ino %lu first_page %lu nr_to_write %ld "
 -		  "sync_mode %d",
 +	TP_printk("dev %d,%d ino %lu b_blocknr %llu b_size %u b_state 0x%04x "
 +		  "first_page %lu io_done %d pages_written %d sync_mode %d",
  		  MAJOR(__entry->dev), MINOR(__entry->dev),
 -		  (unsigned long) __entry->ino, __entry->first_page,
 -		  __entry->nr_to_write, __entry->sync_mode)
 +		  (unsigned long) __entry->ino,
 +		  __entry->b_blocknr, __entry->b_size,
 +		  __entry->b_state, __entry->first_page,
 +		  __entry->io_done, __entry->pages_written,
 +		  __entry->sync_mode
 +                  )
  );
  
++<<<<<<< HEAD
 +TRACE_EVENT(ext4_da_writepages_result,
++=======
+ TRACE_EVENT(ext4_da_write_pages_extent,
+ 	TP_PROTO(struct inode *inode, struct ext4_map_blocks *map),
+ 
+ 	TP_ARGS(inode, map),
+ 
+ 	TP_STRUCT__entry(
+ 		__field(	dev_t,	dev			)
+ 		__field(	ino_t,	ino			)
+ 		__field(	__u64,	lblk			)
+ 		__field(	__u32,	len			)
+ 		__field(	__u32,	flags			)
+ 	),
+ 
+ 	TP_fast_assign(
+ 		__entry->dev		= inode->i_sb->s_dev;
+ 		__entry->ino		= inode->i_ino;
+ 		__entry->lblk		= map->m_lblk;
+ 		__entry->len		= map->m_len;
+ 		__entry->flags		= map->m_flags;
+ 	),
+ 
+ 	TP_printk("dev %d,%d ino %lu lblk %llu len %u flags %s",
+ 		  MAJOR(__entry->dev), MINOR(__entry->dev),
+ 		  (unsigned long) __entry->ino, __entry->lblk, __entry->len,
+ 		  show_mflags(__entry->flags))
+ );
+ 
+ TRACE_EVENT(ext4_writepages_result,
++>>>>>>> 21ddd568c133 (ext4: translate flag bits to strings in tracepoints)
  	TP_PROTO(struct inode *inode, struct writeback_control *wbc,
  			int ret, int pages_written),
  
diff --git a/fs/ext4/extents.c b/fs/ext4/extents.c
index a26f7fb6e69b..7f2d3a2a88e6 100644
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@ -4367,7 +4367,7 @@ out2:
 	}
 
 out3:
-	trace_ext4_ext_map_blocks_exit(inode, map, err ? err : allocated);
+	trace_ext4_ext_map_blocks_exit(inode, flags, map, err ? err : allocated);
 
 	return err ? err : allocated;
 }
diff --git a/fs/ext4/indirect.c b/fs/ext4/indirect.c
index b8d5d351e24f..f69085837a4e 100644
--- a/fs/ext4/indirect.c
+++ b/fs/ext4/indirect.c
@@ -624,7 +624,7 @@ cleanup:
 		partial--;
 	}
 out:
-	trace_ext4_ind_map_blocks_exit(inode, map, err);
+	trace_ext4_ind_map_blocks_exit(inode, flags, map, err);
 	return err;
 }
 
* Unmerged path include/trace/events/ext4.h
