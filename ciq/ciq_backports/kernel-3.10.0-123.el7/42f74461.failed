audit: change decimal constant to macro for invalid uid

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Richard Guy Briggs <rgb@redhat.com>
commit 42f74461a5b60cf6b42887e6d2ff5b7be4abf1ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/42f74461.failed

SFR reported this 2013-05-15:

> After merging the final tree, today's linux-next build (i386 defconfig)
> produced this warning:
>
> kernel/auditfilter.c: In function 'audit_data_to_entry':
> kernel/auditfilter.c:426:3: warning: this decimal constant is unsigned only
> in ISO C90 [enabled by default]
>
> Introduced by commit 780a7654cee8 ("audit: Make testing for a valid
> loginuid explicit") from Linus' tree.

Replace this decimal constant in the code with a macro to make it more readable
(add to the unsigned cast to quiet the warning).

	Cc: Stephen Rothwell <sfr@canb.auug.org.au>
	Cc: "Eric W. Biederman" <ebiederm@xmission.com>
	Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
	Signed-off-by: Eric Paris <eparis@redhat.com>
(cherry picked from commit 42f74461a5b60cf6b42887e6d2ff5b7be4abf1ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/auditfilter.c
diff --cc kernel/auditfilter.c
index e928fd9b4298,8a344cebd8bf..000000000000
--- a/kernel/auditfilter.c
+++ b/kernel/auditfilter.c
@@@ -424,7 -423,7 +424,11 @@@ static struct audit_entry *audit_data_t
  		f->lsm_rule = NULL;
  
  		/* Support legacy tests for a valid loginuid */
++<<<<<<< HEAD
 +		if ((f->type == AUDIT_LOGINUID) && (f->val == 4294967295)) {
++=======
+ 		if ((f->type == AUDIT_LOGINUID) && (f->val == AUDIT_UID_UNSET)) {
++>>>>>>> 42f74461a5b6 (audit: change decimal constant to macro for invalid uid)
  			f->type = AUDIT_LOGINUID_SET;
  			f->val = 0;
  		}
diff --git a/include/uapi/linux/audit.h b/include/uapi/linux/audit.h
index a28e65488032..9eddf2ca614f 100644
--- a/include/uapi/linux/audit.h
+++ b/include/uapi/linux/audit.h
@@ -396,6 +396,8 @@ struct audit_tty_status {
 	__u32		log_passwd;	/* 1 = enabled, 0 = disabled */
 };
 
+#define AUDIT_UID_UNSET (unsigned int)-1
+
 /* audit_rule_data supports filter rules with both integer and string
  * fields.  It corresponds with AUDIT_ADD_RULE, AUDIT_DEL_RULE and
  * AUDIT_LIST_RULES requests.
* Unmerged path kernel/auditfilter.c
