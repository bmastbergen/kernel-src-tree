mm: remove bogus warning in copy_huge_pmd()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [mm] remove bogus warning in copy_huge_pmd() (Rik van Riel) [1067326]
Rebuild_FUZZ: 95.12%
commit-author Mel Gorman <mgorman@suse.de>
commit d0319bd52e373c661f9bc0c04dec85d6f87ac517
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/d0319bd5.failed

Sasha Levin reported the following warning being triggered

  WARNING: CPU: 28 PID: 35287 at mm/huge_memory.c:887 copy_huge_pmd+0x145/ 0x3a0()
  Call Trace:
    copy_huge_pmd+0x145/0x3a0
    copy_page_range+0x3f2/0x560
    dup_mmap+0x2c9/0x3d0
    dup_mm+0xad/0x150
    copy_process+0xa68/0x12e0
    do_fork+0x96/0x270
    SyS_clone+0x16/0x20
    stub_clone+0x69/0x90

This warning was introduced by "mm: numa: Avoid unnecessary disruption
of NUMA hinting during migration" for paranoia reasons but the warning
is bogus.  I was thinking of parallel races between NUMA hinting faults
and forks but this warning would also be triggered by a parallel reclaim
splitting a THP during a fork.  Remote the bogus warning.

	Signed-off-by: Mel Gorman <mgorman@suse.de>
	Reported-by: Sasha Levin <sasha.levin@oracle.com>
	Cc: Alex Thorlton <athorlton@sgi.com>
	Cc: Rik van Riel <riel@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit d0319bd52e373c661f9bc0c04dec85d6f87ac517)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/huge_memory.c
diff --cc mm/huge_memory.c
index 2b345c81f273,9c0b17295ba0..000000000000
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@@ -899,10 -882,11 +899,14 @@@ int copy_huge_pmd(struct mm_struct *dst
  		ret = 0;
  		goto out_unlock;
  	}
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> d0319bd52e37 (mm: remove bogus warning in copy_huge_pmd())
  	if (unlikely(pmd_trans_splitting(pmd))) {
  		/* split huge page running from under us */
 -		spin_unlock(src_ptl);
 -		spin_unlock(dst_ptl);
 +		spin_unlock(&src_mm->page_table_lock);
 +		spin_unlock(&dst_mm->page_table_lock);
  		pte_free(dst_mm, pgtable);
  
  		wait_split_huge_page(vma->anon_vma, src_pmd); /* src_vma */
* Unmerged path mm/huge_memory.c
