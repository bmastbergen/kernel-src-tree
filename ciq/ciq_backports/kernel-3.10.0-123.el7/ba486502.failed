ipv6: remove the unnecessary statement in find_match()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Duan Jiong <duanj.fnst@cn.fujitsu.com>
commit ba4865027c11d7ac8e5a33e0624dd415caab2027
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/ba486502.failed

After reading the function rt6_check_neigh(), we can
know that the RT6_NUD_FAIL_SOFT can be returned only
when the IS_ENABLE(CONFIG_IPV6_ROUTER_PREF) is false.
so in function find_match(), there is no need to execute
the statement !IS_ENABLED(CONFIG_IPV6_ROUTER_PREF).

	Signed-off-by: Duan Jiong <duanj.fnst@cn.fujitsu.com>
	Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ba4865027c11d7ac8e5a33e0624dd415caab2027)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/route.c
diff --cc net/ipv6/route.c
index 27feaa9e6ca7,1ac0b6e17d95..000000000000
--- a/net/ipv6/route.c
+++ b/net/ipv6/route.c
@@@ -578,18 -619,21 +578,25 @@@ static struct rt6_info *find_match(stru
  		goto out;
  
  	m = rt6_score_route(rt, oif, strict);
++<<<<<<< HEAD
 +	if (m < 0)
++=======
+ 	if (m == RT6_NUD_FAIL_SOFT) {
+ 		match_do_rr = true;
+ 		m = 0; /* lowest valid score */
+ 	} else if (m < 0) {
++>>>>>>> ba4865027c11 (ipv6: remove the unnecessary statement in find_match())
  		goto out;
 -	}
 -
 -	if (strict & RT6_LOOKUP_F_REACHABLE)
 -		rt6_probe(rt);
  
  	if (m > *mpri) {
 -		*do_rr = match_do_rr;
 +		if (strict & RT6_LOOKUP_F_REACHABLE)
 +			rt6_probe(match);
  		*mpri = m;
  		match = rt;
 +	} else if (strict & RT6_LOOKUP_F_REACHABLE) {
 +		rt6_probe(rt);
  	}
 +
  out:
  	return match;
  }
* Unmerged path net/ipv6/route.c
