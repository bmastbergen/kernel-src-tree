gre_offload: statically build GRE offloading support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Eric Dumazet <edumazet@google.com>
commit 438e38fadca2f6e57eeecc08326c8a95758594d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/438e38fa.failed

GRO/GSO layers can be enabled on a node, even if said
node is only forwarding packets.

This patch permits GSO (and upcoming GRO) support for GRE
encapsulated packets, even if the host has no GRE tunnel setup.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: H.K. Jerry Chu <hkchu@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 438e38fadca2f6e57eeecc08326c8a95758594d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/gre.h
#	net/ipv4/Makefile
#	net/ipv4/gre.c
#	net/ipv4/gre_offload.c
diff --cc include/net/gre.h
index a5a6c3d0a9eb,70046a0b0b89..000000000000
--- a/include/net/gre.h
+++ b/include/net/gre.h
@@@ -32,6 -32,7 +32,10 @@@ struct gre_cisco_protocol 
  
  int gre_cisco_register(struct gre_cisco_protocol *proto);
  int gre_cisco_unregister(struct gre_cisco_protocol *proto);
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> 438e38fadca2 (gre_offload: statically build GRE offloading support)
  void gre_build_header(struct sk_buff *skb, const struct tnl_ptk_info *tpi,
  		      int hdr_len);
  
diff --cc net/ipv4/Makefile
index 86ded0bac9c7,f8c49ce5b283..000000000000
--- a/net/ipv4/Makefile
+++ b/net/ipv4/Makefile
@@@ -19,6 -19,7 +19,10 @@@ obj-$(CONFIG_PROC_FS) += proc.
  obj-$(CONFIG_IP_MULTIPLE_TABLES) += fib_rules.o
  obj-$(CONFIG_IP_MROUTE) += ipmr.o
  obj-$(CONFIG_NET_IPIP) += ipip.o
++<<<<<<< HEAD
++=======
+ gre-y := gre_demux.o
++>>>>>>> 438e38fadca2 (gre_offload: statically build GRE offloading support)
  obj-$(CONFIG_NET_IPGRE_DEMUX) += gre.o
  obj-$(CONFIG_NET_IPGRE) += ip_gre.o
  obj-$(CONFIG_NET_IPVTI) += ip_vti.o
diff --cc net/ipv4/gre.c
index 6a3eea70ea37,1863422fb7d5..000000000000
--- a/net/ipv4/gre.c
+++ b/net/ipv4/gre.c
@@@ -456,14 -355,7 +456,15 @@@ static int __init gre_init(void
  		goto err_gre;
  	}
  
++<<<<<<< HEAD:net/ipv4/gre.c
 +	if (inet_add_offload(&gre_offload, IPPROTO_GRE)) {
 +		pr_err("can't add protocol offload\n");
 +		goto err_gso;
 +	}
 +
++=======
++>>>>>>> 438e38fadca2 (gre_offload: statically build GRE offloading support):net/ipv4/gre_demux.c
  	return 0;
- err_gso:
- 	gre_del_protocol(&ipgre_protocol, GREPROTO_CISCO);
  err_gre:
  	inet_del_protocol(&net_gre_protocol, IPPROTO_GRE);
  err:
@@@ -472,7 -364,6 +473,10 @@@
  
  static void __exit gre_exit(void)
  {
++<<<<<<< HEAD:net/ipv4/gre.c
 +	inet_del_offload(&gre_offload, IPPROTO_GRE);
++=======
++>>>>>>> 438e38fadca2 (gre_offload: statically build GRE offloading support):net/ipv4/gre_demux.c
  	gre_del_protocol(&ipgre_protocol, GREPROTO_CISCO);
  	inet_del_protocol(&net_gre_protocol, IPPROTO_GRE);
  }
* Unmerged path net/ipv4/gre_offload.c
* Unmerged path include/net/gre.h
* Unmerged path net/ipv4/Makefile
* Unmerged path net/ipv4/gre.c
* Unmerged path net/ipv4/gre_offload.c
