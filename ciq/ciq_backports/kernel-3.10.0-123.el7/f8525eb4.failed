[SCSI] libiscsi: Exporting new attrs for iscsi session and connection in sysfs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [scsi] libiscsi: Exporting new attrs for iscsi session and connection in sysfs (Amir Vadai) [862498 868244 920465 978058 998202]
Rebuild_FUZZ: 95.30%
commit-author Adheer Chandravanshi <adheer.chandravanshi@qlogic.com>
commit f8525eb4cff0c5df5b513a5f30ffebcda43460bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/f8525eb4.failed

	Signed-off-by: Adheer Chandravanshi <adheer.chandravanshi@qlogic.com>
	Signed-off-by: Vikas Chaudhary <vikas.chaudhary@qlogic.com>
	Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
	Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit f8525eb4cff0c5df5b513a5f30ffebcda43460bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/libiscsi.c
#	include/scsi/libiscsi.h
diff --cc drivers/scsi/libiscsi.c
index 5de946984500,86153e087e81..000000000000
--- a/drivers/scsi/libiscsi.c
+++ b/drivers/scsi/libiscsi.c
@@@ -2808,7 -2808,12 +2808,9 @@@ void iscsi_session_teardown(struct iscs
  	kfree(session->targetname);
  	kfree(session->targetalias);
  	kfree(session->initiatorname);
 -	kfree(session->boot_root);
 -	kfree(session->boot_nic);
 -	kfree(session->boot_target);
  	kfree(session->ifacename);
+ 	kfree(session->portal_type);
+ 	kfree(session->discovery_parent_type);
  
  	iscsi_destroy_session(cls_session);
  	iscsi_host_dec_session_cnt(shost);
@@@ -3248,6 -3253,17 +3250,20 @@@ int iscsi_set_param(struct iscsi_cls_co
  		return iscsi_switch_str_param(&session->ifacename, buf);
  	case ISCSI_PARAM_INITIATOR_NAME:
  		return iscsi_switch_str_param(&session->initiatorname, buf);
++<<<<<<< HEAD
++=======
+ 	case ISCSI_PARAM_BOOT_ROOT:
+ 		return iscsi_switch_str_param(&session->boot_root, buf);
+ 	case ISCSI_PARAM_BOOT_NIC:
+ 		return iscsi_switch_str_param(&session->boot_nic, buf);
+ 	case ISCSI_PARAM_BOOT_TARGET:
+ 		return iscsi_switch_str_param(&session->boot_target, buf);
+ 	case ISCSI_PARAM_PORTAL_TYPE:
+ 		return iscsi_switch_str_param(&session->portal_type, buf);
+ 	case ISCSI_PARAM_DISCOVERY_PARENT_TYPE:
+ 		return iscsi_switch_str_param(&session->discovery_parent_type,
+ 					      buf);
++>>>>>>> f8525eb4cff0 ([SCSI] libiscsi: Exporting new attrs for iscsi session and connection in sysfs)
  	default:
  		return -ENOSYS;
  	}
@@@ -3326,6 -3342,60 +3342,63 @@@ int iscsi_session_get_param(struct iscs
  	case ISCSI_PARAM_INITIATOR_NAME:
  		len = sprintf(buf, "%s\n", session->initiatorname);
  		break;
++<<<<<<< HEAD
++=======
+ 	case ISCSI_PARAM_BOOT_ROOT:
+ 		len = sprintf(buf, "%s\n", session->boot_root);
+ 		break;
+ 	case ISCSI_PARAM_BOOT_NIC:
+ 		len = sprintf(buf, "%s\n", session->boot_nic);
+ 		break;
+ 	case ISCSI_PARAM_BOOT_TARGET:
+ 		len = sprintf(buf, "%s\n", session->boot_target);
+ 	case ISCSI_PARAM_AUTO_SND_TGT_DISABLE:
+ 		len = sprintf(buf, "%u\n", session->auto_snd_tgt_disable);
+ 		break;
+ 	case ISCSI_PARAM_DISCOVERY_SESS:
+ 		len = sprintf(buf, "%u\n", session->discovery_sess);
+ 		break;
+ 	case ISCSI_PARAM_PORTAL_TYPE:
+ 		len = sprintf(buf, "%s\n", session->portal_type);
+ 		break;
+ 	case ISCSI_PARAM_CHAP_AUTH_EN:
+ 		len = sprintf(buf, "%u\n", session->chap_auth_en);
+ 		break;
+ 	case ISCSI_PARAM_DISCOVERY_LOGOUT_EN:
+ 		len = sprintf(buf, "%u\n", session->discovery_logout_en);
+ 		break;
+ 	case ISCSI_PARAM_BIDI_CHAP_EN:
+ 		len = sprintf(buf, "%u\n", session->bidi_chap_en);
+ 		break;
+ 	case ISCSI_PARAM_DISCOVERY_AUTH_OPTIONAL:
+ 		len = sprintf(buf, "%u\n", session->discovery_auth_optional);
+ 		break;
+ 	case ISCSI_PARAM_DEF_TIME2WAIT:
+ 		len = sprintf(buf, "%d\n", session->time2wait);
+ 		break;
+ 	case ISCSI_PARAM_DEF_TIME2RETAIN:
+ 		len = sprintf(buf, "%d\n", session->time2retain);
+ 		break;
+ 	case ISCSI_PARAM_TSID:
+ 		len = sprintf(buf, "%u\n", session->tsid);
+ 		break;
+ 	case ISCSI_PARAM_ISID:
+ 		len = sprintf(buf, "%02x%02x%02x%02x%02x%02x\n",
+ 			      session->isid[0], session->isid[1],
+ 			      session->isid[2], session->isid[3],
+ 			      session->isid[4], session->isid[5]);
+ 		break;
+ 	case ISCSI_PARAM_DISCOVERY_PARENT_IDX:
+ 		len = sprintf(buf, "%u\n", session->discovery_parent_idx);
+ 		break;
+ 	case ISCSI_PARAM_DISCOVERY_PARENT_TYPE:
+ 		if (session->discovery_parent_type)
+ 			len = sprintf(buf, "%s\n",
+ 				      session->discovery_parent_type);
+ 		else
+ 			len = sprintf(buf, "\n");
+ 		break;
++>>>>>>> f8525eb4cff0 ([SCSI] libiscsi: Exporting new attrs for iscsi session and connection in sysfs)
  	default:
  		return -ENOSYS;
  	}
diff --cc include/scsi/libiscsi.h
index 09c041e6c35f,6ac9e17acdc4..000000000000
--- a/include/scsi/libiscsi.h
+++ b/include/scsi/libiscsi.h
@@@ -287,6 -306,22 +306,25 @@@ struct iscsi_session 
  	char			*targetalias;
  	char			*ifacename;
  	char			*initiatorname;
++<<<<<<< HEAD
++=======
+ 	char			*boot_root;
+ 	char			*boot_nic;
+ 	char			*boot_target;
+ 	char			*portal_type;
+ 	char			*discovery_parent_type;
+ 	uint16_t		discovery_parent_idx;
+ 	uint16_t		def_taskmgmt_tmo;
+ 	uint16_t		tsid;
+ 	uint8_t			auto_snd_tgt_disable;
+ 	uint8_t			discovery_sess;
+ 	uint8_t			chap_auth_en;
+ 	uint8_t			discovery_logout_en;
+ 	uint8_t			bidi_chap_en;
+ 	uint8_t			discovery_auth_optional;
+ 	uint8_t			isid[ISID_SIZE];
+ 
++>>>>>>> f8525eb4cff0 ([SCSI] libiscsi: Exporting new attrs for iscsi session and connection in sysfs)
  	/* control data */
  	struct iscsi_transport	*tt;
  	struct Scsi_Host	*host;
* Unmerged path drivers/scsi/libiscsi.c
* Unmerged path include/scsi/libiscsi.h
