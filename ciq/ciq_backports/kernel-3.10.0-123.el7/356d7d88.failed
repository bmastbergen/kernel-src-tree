netfilter: nf_conntrack: fix tcp_in_window for Fast Open

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Yuchung Cheng <ycheng@google.com>
commit 356d7d88e088687b6578ca64601b0a2c9d145296
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/356d7d88.failed

Currently the conntrack checks if the ending sequence of a packet
falls within the observed receive window. However it does so even
if it has not observe any packet from the remote yet and uses an
uninitialized receive window (td_maxwin).

If a connection uses Fast Open to send a SYN-data packet which is
dropped afterward in the network. The subsequent SYNs retransmits
will all fail this check and be discarded, leading to a connection
timeout. This is because the SYN retransmit does not contain data
payload so

end == initial sequence number (isn) + 1
sender->td_end == isn + syn_data_len
receiver->td_maxwin == 0

The fix is to only apply this check after td_maxwin is initialized.

	Reported-by: Michael Chan <mcfchan@stanford.edu>
	Signed-off-by: Yuchung Cheng <ycheng@google.com>
	Acked-by: Eric Dumazet <edumazet@google.com>
	Acked-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 356d7d88e088687b6578ca64601b0a2c9d145296)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_conntrack_proto_tcp.c
diff --cc net/netfilter/nf_conntrack_proto_tcp.c
index 8f308d896324,2f8010707d01..000000000000
--- a/net/netfilter/nf_conntrack_proto_tcp.c
+++ b/net/netfilter/nf_conntrack_proto_tcp.c
@@@ -525,8 -525,8 +525,13 @@@ static bool tcp_in_window(const struct 
  	struct ip_ct_tcp_state *receiver = &state->seen[!dir];
  	const struct nf_conntrack_tuple *tuple = &ct->tuplehash[dir].tuple;
  	__u32 seq, ack, sack, end, win, swin;
++<<<<<<< HEAD
 +	s32 receiver_offset;
 +	bool res;
++=======
+ 	s16 receiver_offset;
+ 	bool res, in_recv_win;
++>>>>>>> 356d7d88e088 (netfilter: nf_conntrack: fix tcp_in_window for Fast Open)
  
  	/*
  	 * Get the required data from the packet.
* Unmerged path net/netfilter/nf_conntrack_proto_tcp.c
