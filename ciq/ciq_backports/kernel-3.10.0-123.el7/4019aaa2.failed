drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [drm] nouveau/devinit: prevent use of engines marked as disabled by hw/vbios (Rob Clark) [1054409]
Rebuild_FUZZ: 91.55%
commit-author Ilia Mirkin <imirkin@alum.mit.edu>
commit 4019aaa2b314a5be9886ae1db64ff8c6d3c060ed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/4019aaa2.failed

	Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 4019aaa2b314a5be9886ae1db64ff8c6d3c060ed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/Makefile
#	drivers/gpu/drm/nouveau/core/engine/device/nv50.c
#	drivers/gpu/drm/nouveau/core/include/subdev/devinit.h
#	drivers/gpu/drm/nouveau/core/subdev/devinit/base.c
#	drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.c
#	drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.h
#	drivers/gpu/drm/nouveau/core/subdev/devinit/nva3.c
#	drivers/gpu/drm/nouveau/core/subdev/devinit/nvc0.c
#	drivers/gpu/drm/nouveau/core/subdev/devinit/priv.h
diff --cc drivers/gpu/drm/nouveau/Makefile
index 998e8b4444f3,e88145ba1bf5..000000000000
--- a/drivers/gpu/drm/nouveau/Makefile
+++ b/drivers/gpu/drm/nouveau/Makefile
@@@ -60,6 -72,11 +60,14 @@@ nouveau-y += core/subdev/devinit/nv10.
  nouveau-y += core/subdev/devinit/nv1a.o
  nouveau-y += core/subdev/devinit/nv20.o
  nouveau-y += core/subdev/devinit/nv50.o
++<<<<<<< HEAD
++=======
+ nouveau-y += core/subdev/devinit/nv84.o
+ nouveau-y += core/subdev/devinit/nv98.o
+ nouveau-y += core/subdev/devinit/nva3.o
+ nouveau-y += core/subdev/devinit/nvaf.o
+ nouveau-y += core/subdev/devinit/nvc0.o
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  nouveau-y += core/subdev/fb/base.o
  nouveau-y += core/subdev/fb/nv04.o
  nouveau-y += core/subdev/fb/nv10.o
diff --cc drivers/gpu/drm/nouveau/core/engine/device/nv50.c
index 5e8c3de75593,81d5c26643d5..000000000000
--- a/drivers/gpu/drm/nouveau/core/engine/device/nv50.c
+++ b/drivers/gpu/drm/nouveau/core/engine/device/nv50.c
@@@ -82,20 -87,21 +82,26 @@@ nv50_identify(struct nouveau_device *de
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv50_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv50_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv84_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv50_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv50_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
  		device->oclass[NVDEV_ENGINE_MPEG   ] = &nv84_mpeg_oclass;
  		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
@@@ -108,20 -115,21 +114,26 @@@
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv50_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv50_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv84_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv50_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv50_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
  		device->oclass[NVDEV_ENGINE_MPEG   ] = &nv84_mpeg_oclass;
  		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
@@@ -134,20 -143,21 +146,26 @@@
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv50_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv50_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv84_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv50_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv50_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
  		device->oclass[NVDEV_ENGINE_MPEG   ] = &nv84_mpeg_oclass;
  		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
@@@ -160,20 -171,21 +178,26 @@@
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv94_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv50_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv84_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv94_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
  		device->oclass[NVDEV_ENGINE_MPEG   ] = &nv84_mpeg_oclass;
  		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
@@@ -186,20 -199,21 +210,26 @@@
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv94_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv50_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv84_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv94_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
  		device->oclass[NVDEV_ENGINE_MPEG   ] = &nv84_mpeg_oclass;
  		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
@@@ -212,46 -227,49 +242,58 @@@
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv94_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv98_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv98_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv98_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
 -		device->oclass[NVDEV_ENGINE_VP     ] = &nv98_vp_oclass;
 +		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
  		device->oclass[NVDEV_ENGINE_CRYPT  ] = &nv98_crypt_oclass;
 -		device->oclass[NVDEV_ENGINE_BSP    ] = &nv98_bsp_oclass;
 +		device->oclass[NVDEV_ENGINE_BSP    ] = &nv84_bsp_oclass;
  		device->oclass[NVDEV_ENGINE_PPP    ] = &nv98_ppp_oclass;
  		device->oclass[NVDEV_ENGINE_DISP   ] = &nv94_disp_oclass;
 -		device->oclass[NVDEV_ENGINE_PERFMON] =  nv84_perfmon_oclass;
  		break;
  	case 0xa0:
  		device->cname = "G200";
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv50_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nv84_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv98_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv84_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv98_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nv84_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
  		device->oclass[NVDEV_ENGINE_MPEG   ] = &nv84_mpeg_oclass;
  		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
@@@ -264,52 -283,56 +306,64 @@@
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv94_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nvaa_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv98_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv98_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv98_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nvaa_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
 -		device->oclass[NVDEV_ENGINE_VP     ] = &nv98_vp_oclass;
 +		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
  		device->oclass[NVDEV_ENGINE_CRYPT  ] = &nv98_crypt_oclass;
 -		device->oclass[NVDEV_ENGINE_BSP    ] = &nv98_bsp_oclass;
 +		device->oclass[NVDEV_ENGINE_BSP    ] = &nv84_bsp_oclass;
  		device->oclass[NVDEV_ENGINE_PPP    ] = &nv98_ppp_oclass;
  		device->oclass[NVDEV_ENGINE_DISP   ] = &nv94_disp_oclass;
 -		device->oclass[NVDEV_ENGINE_PERFMON] =  nv84_perfmon_oclass;
  		break;
  	case 0xac:
  		device->cname = "MCP79/MCP7A";
  		device->oclass[NVDEV_SUBDEV_VBIOS  ] = &nouveau_bios_oclass;
  		device->oclass[NVDEV_SUBDEV_GPIO   ] = &nv50_gpio_oclass;
  		device->oclass[NVDEV_SUBDEV_I2C    ] = &nv94_i2c_oclass;
 -		device->oclass[NVDEV_SUBDEV_CLOCK  ] =  nvaa_clock_oclass;
 +		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nv50_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nv84_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv98_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nv98_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv98_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nvaa_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
 -		device->oclass[NVDEV_ENGINE_VP     ] = &nv98_vp_oclass;
 +		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
  		device->oclass[NVDEV_ENGINE_CRYPT  ] = &nv98_crypt_oclass;
 -		device->oclass[NVDEV_ENGINE_BSP    ] = &nv98_bsp_oclass;
 +		device->oclass[NVDEV_ENGINE_BSP    ] = &nv84_bsp_oclass;
  		device->oclass[NVDEV_ENGINE_PPP    ] = &nv98_ppp_oclass;
  		device->oclass[NVDEV_ENGINE_DISP   ] = &nv94_disp_oclass;
 -		device->oclass[NVDEV_ENGINE_PERFMON] =  nv84_perfmon_oclass;
  		break;
  	case 0xa3:
  		device->cname = "GT215";
@@@ -398,20 -430,22 +452,26 @@@
  		device->oclass[NVDEV_SUBDEV_CLOCK  ] = &nva3_clock_oclass;
  		device->oclass[NVDEV_SUBDEV_THERM  ] = &nva3_therm_oclass;
  		device->oclass[NVDEV_SUBDEV_MXM    ] = &nv50_mxm_oclass;
++<<<<<<< HEAD
 +		device->oclass[NVDEV_SUBDEV_DEVINIT] = &nv50_devinit_oclass;
 +		device->oclass[NVDEV_SUBDEV_MC     ] = &nv98_mc_oclass;
 +		device->oclass[NVDEV_SUBDEV_BUS    ] = &nv50_bus_oclass;
++=======
+ 		device->oclass[NVDEV_SUBDEV_DEVINIT] =  nvaf_devinit_oclass;
+ 		device->oclass[NVDEV_SUBDEV_MC     ] =  nv98_mc_oclass;
+ 		device->oclass[NVDEV_SUBDEV_BUS    ] =  nv94_bus_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  		device->oclass[NVDEV_SUBDEV_TIMER  ] = &nv04_timer_oclass;
 -		device->oclass[NVDEV_SUBDEV_FB     ] =  nvaf_fb_oclass;
 -		device->oclass[NVDEV_SUBDEV_INSTMEM] =  nv50_instmem_oclass;
 +		device->oclass[NVDEV_SUBDEV_FB     ] = &nv50_fb_oclass;
 +		device->oclass[NVDEV_SUBDEV_INSTMEM] = &nv50_instmem_oclass;
  		device->oclass[NVDEV_SUBDEV_VM     ] = &nv50_vmmgr_oclass;
  		device->oclass[NVDEV_SUBDEV_BAR    ] = &nv50_bar_oclass;
 -		device->oclass[NVDEV_SUBDEV_PWR    ] = &nva3_pwr_oclass;
 -		device->oclass[NVDEV_SUBDEV_VOLT   ] = &nv40_volt_oclass;
  		device->oclass[NVDEV_ENGINE_DMAOBJ ] = &nv50_dmaeng_oclass;
 -		device->oclass[NVDEV_ENGINE_FIFO   ] =  nv84_fifo_oclass;
 -		device->oclass[NVDEV_ENGINE_SW     ] =  nv50_software_oclass;
 +		device->oclass[NVDEV_ENGINE_FIFO   ] = &nv84_fifo_oclass;
 +		device->oclass[NVDEV_ENGINE_SW     ] = &nv50_software_oclass;
  		device->oclass[NVDEV_ENGINE_GR     ] = &nv50_graph_oclass;
 -		device->oclass[NVDEV_ENGINE_VP     ] = &nv98_vp_oclass;
 -		device->oclass[NVDEV_ENGINE_BSP    ] = &nv98_bsp_oclass;
 +		device->oclass[NVDEV_ENGINE_VP     ] = &nv84_vp_oclass;
 +		device->oclass[NVDEV_ENGINE_BSP    ] = &nv84_bsp_oclass;
  		device->oclass[NVDEV_ENGINE_PPP    ] = &nv98_ppp_oclass;
  		device->oclass[NVDEV_ENGINE_COPY0  ] = &nva3_copy_oclass;
  		device->oclass[NVDEV_ENGINE_DISP   ] = &nva3_disp_oclass;
diff --cc drivers/gpu/drm/nouveau/core/include/subdev/devinit.h
index 29e4cc1f6cc0,ed1ac68c38b3..000000000000
--- a/drivers/gpu/drm/nouveau/core/include/subdev/devinit.h
+++ b/drivers/gpu/drm/nouveau/core/include/subdev/devinit.h
@@@ -16,25 -17,16 +16,39 @@@ nouveau_devinit(void *obj
  	return (void *)nv_device(obj)->subdev[NVDEV_SUBDEV_DEVINIT];
  }
  
++<<<<<<< HEAD
 +#define nouveau_devinit_create(p,e,o,d)                                        \
 +	nouveau_devinit_create_((p), (e), (o), sizeof(**d), (void **)d)
 +#define nouveau_devinit_destroy(p)                                             \
 +	nouveau_subdev_destroy(&(p)->base)
 +
 +int nouveau_devinit_create_(struct nouveau_object *, struct nouveau_object *,
 +			    struct nouveau_oclass *, int, void **);
 +int nouveau_devinit_init(struct nouveau_devinit *);
 +int nouveau_devinit_fini(struct nouveau_devinit *, bool suspend);
 +
 +extern struct nouveau_oclass nv04_devinit_oclass;
 +extern struct nouveau_oclass nv05_devinit_oclass;
 +extern struct nouveau_oclass nv10_devinit_oclass;
 +extern struct nouveau_oclass nv1a_devinit_oclass;
 +extern struct nouveau_oclass nv20_devinit_oclass;
 +extern struct nouveau_oclass nv50_devinit_oclass;
 +
 +void nv04_devinit_dtor(struct nouveau_object *);
 +int  nv04_devinit_init(struct nouveau_object *);
 +int  nv04_devinit_fini(struct nouveau_object *, bool);
++=======
+ extern struct nouveau_oclass *nv04_devinit_oclass;
+ extern struct nouveau_oclass *nv05_devinit_oclass;
+ extern struct nouveau_oclass *nv10_devinit_oclass;
+ extern struct nouveau_oclass *nv1a_devinit_oclass;
+ extern struct nouveau_oclass *nv20_devinit_oclass;
+ extern struct nouveau_oclass *nv50_devinit_oclass;
+ extern struct nouveau_oclass *nv84_devinit_oclass;
+ extern struct nouveau_oclass *nv98_devinit_oclass;
+ extern struct nouveau_oclass *nva3_devinit_oclass;
+ extern struct nouveau_oclass *nvaf_devinit_oclass;
+ extern struct nouveau_oclass *nvc0_devinit_oclass;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  
  #endif
diff --cc drivers/gpu/drm/nouveau/core/subdev/devinit/base.c
index 5a07a39c1735,6b23d9a0b953..000000000000
--- a/drivers/gpu/drm/nouveau/core/subdev/devinit/base.c
+++ b/drivers/gpu/drm/nouveau/core/subdev/devinit/base.c
@@@ -28,26 -27,40 +28,52 @@@
  #include <subdev/bios.h>
  #include <subdev/bios/init.h>
  
 -#include "priv.h"
 -
  int
 -_nouveau_devinit_fini(struct nouveau_object *object, bool suspend)
 +nouveau_devinit_init(struct nouveau_devinit *devinit)
  {
++<<<<<<< HEAD
 +	int ret = nouveau_subdev_init(&devinit->base);
++=======
+ 	struct nouveau_devinit *devinit = (void *)object;
+ 
+ 	/* force full reinit on resume */
+ 	if (suspend)
+ 		devinit->post = true;
+ 
+ 	return nouveau_subdev_fini(&devinit->base, suspend);
+ }
+ 
+ int
+ _nouveau_devinit_init(struct nouveau_object *object)
+ {
+ 	struct nouveau_devinit_impl *impl = (void *)object->oclass;
+ 	struct nouveau_devinit *devinit = (void *)object;
+ 	int ret;
+ 
+ 	ret = nouveau_subdev_init(&devinit->base);
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  	if (ret)
  		return ret;
  
- 	return nvbios_init(&devinit->base, devinit->post);
+ 	ret = nvbios_init(&devinit->base, devinit->post);
+ 	if (ret)
+ 		return ret;
+ 
+ 	if (impl->disable)
+ 		nv_device(devinit)->disable_mask |= impl->disable(devinit);
+ 	return 0;
  }
  
 +int
 +nouveau_devinit_fini(struct nouveau_devinit *devinit, bool suspend)
 +{
 +	/* force full reinit on resume */
 +	if (suspend)
 +		devinit->post = true;
 +
 +	return nouveau_subdev_fini(&devinit->base, suspend);
 +}
 +
  int
  nouveau_devinit_create_(struct nouveau_object *parent,
  			struct nouveau_object *engine,
diff --cc drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.c
index 4a8577838417,b46c62a1d5d8..000000000000
--- a/drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.c
+++ b/drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.c
@@@ -26,37 -26,68 +26,59 @@@
  #include <subdev/bios/dcb.h>
  #include <subdev/bios/disp.h>
  #include <subdev/bios/init.h>
 +#include <subdev/devinit.h>
  #include <subdev/vga.h>
  
 -#include "nv50.h"
 +struct nv50_devinit_priv {
 +	struct nouveau_devinit base;
 +};
  
++<<<<<<< HEAD
 +static int
 +nv50_devinit_ctor(struct nouveau_object *parent, struct nouveau_object *engine,
 +		  struct nouveau_oclass *oclass, void *data, u32 size,
 +		  struct nouveau_object **pobject)
++=======
+ int
+ nv50_devinit_pll_set(struct nouveau_devinit *devinit, u32 type, u32 freq)
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  {
 -	struct nv50_devinit_priv *priv = (void *)devinit;
 -	struct nouveau_bios *bios = nouveau_bios(priv);
 -	struct nvbios_pll info;
 -	int N1, M1, N2, M2, P;
 +	struct nv50_devinit_priv *priv;
  	int ret;
  
 -	ret = nvbios_pll_parse(bios, type, &info);
 -	if (ret) {
 -		nv_error(devinit, "failed to retrieve pll data, %d\n", ret);
 -		return ret;
 -	}
 -
 -	ret = nv04_pll_calc(nv_subdev(devinit), &info, freq, &N1, &M1, &N2, &M2, &P);
 -	if (!ret) {
 -		nv_error(devinit, "failed pll calculation\n");
 +	ret = nouveau_devinit_create(parent, engine, oclass, &priv);
 +	*pobject = nv_object(priv);
 +	if (ret)
  		return ret;
 -	}
 -
 -	switch (info.type) {
 -	case PLL_VPLL0:
 -	case PLL_VPLL1:
 -		nv_wr32(priv, info.reg + 0, 0x10000611);
 -		nv_mask(priv, info.reg + 4, 0x00ff00ff, (M1 << 16) | N1);
 -		nv_mask(priv, info.reg + 8, 0x7fff00ff, (P  << 28) |
 -							(M2 << 16) | N2);
 -		break;
 -	case PLL_MEMORY:
 -		nv_mask(priv, info.reg + 0, 0x01ff0000, (P << 22) |
 -						        (info.bias_p << 19) |
 -							(P << 16));
 -		nv_wr32(priv, info.reg + 4, (N1 << 8) | M1);
 -		break;
 -	default:
 -		nv_mask(priv, info.reg + 0, 0x00070000, (P << 16));
 -		nv_wr32(priv, info.reg + 4, (N1 << 8) | M1);
 -		break;
 -	}
  
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void
 +nv50_devinit_dtor(struct nouveau_object *object)
 +{
 +	struct nv50_devinit_priv *priv = (void *)object;
 +	nouveau_devinit_destroy(&priv->base);
 +}
 +
 +static int
++=======
+ static u64
+ nv50_devinit_disable(struct nouveau_devinit *devinit)
+ {
+ 	struct nv50_devinit_priv *priv = (void *)devinit;
+ 	u32 r001540 = nv_rd32(priv, 0x001540);
+ 	u64 disable = 0ULL;
+ 
+ 	if (!(r001540 & 0x40000000))
+ 		disable |= (1ULL << NVDEV_ENGINE_MPEG);
+ 
+ 	return disable;
+ }
+ 
+ int
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
  nv50_devinit_init(struct nouveau_object *object)
  {
  	struct nouveau_bios *bios = nouveau_bios(object);
@@@ -102,20 -133,31 +124,26 @@@
  	return 0;
  }
  
 -int
 -nv50_devinit_ctor(struct nouveau_object *parent, struct nouveau_object *engine,
 -		  struct nouveau_oclass *oclass, void *data, u32 size,
 -		  struct nouveau_object **pobject)
 +static int
 +nv50_devinit_fini(struct nouveau_object *object, bool suspend)
  {
 -	struct nv50_devinit_priv *priv;
 -	int ret;
 -
 -	ret = nouveau_devinit_create(parent, engine, oclass, &priv);
 -	*pobject = nv_object(priv);
 -	if (ret)
 -		return ret;
 -
 -	return 0;
 +	struct nv50_devinit_priv *priv = (void *)object;
 +	return nouveau_devinit_fini(&priv->base, suspend);
  }
  
 -struct nouveau_oclass *
 -nv50_devinit_oclass = &(struct nouveau_devinit_impl) {
 -	.base.handle = NV_SUBDEV(DEVINIT, 0x50),
 -	.base.ofuncs = &(struct nouveau_ofuncs) {
 +struct nouveau_oclass
 +nv50_devinit_oclass = {
 +	.handle = NV_SUBDEV(DEVINIT, 0x50),
 +	.ofuncs = &(struct nouveau_ofuncs) {
  		.ctor = nv50_devinit_ctor,
 -		.dtor = _nouveau_devinit_dtor,
 +		.dtor = nv50_devinit_dtor,
  		.init = nv50_devinit_init,
 -		.fini = _nouveau_devinit_fini,
 +		.fini = nv50_devinit_fini,
  	},
++<<<<<<< HEAD
 +};
++=======
+ 	.pll_set = nv50_devinit_pll_set,
+ 	.disable = nv50_devinit_disable,
+ }.base;
++>>>>>>> 4019aaa2b314 (drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios)
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.h
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nva3.c
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nvc0.c
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/priv.h
* Unmerged path drivers/gpu/drm/nouveau/Makefile
diff --git a/drivers/gpu/drm/nouveau/core/engine/copy/nvc0.c b/drivers/gpu/drm/nouveau/core/engine/copy/nvc0.c
index b3ed2737e21f..e4c4c65b3b08 100644
--- a/drivers/gpu/drm/nouveau/core/engine/copy/nvc0.c
+++ b/drivers/gpu/drm/nouveau/core/engine/copy/nvc0.c
@@ -103,9 +103,6 @@ nvc0_copy0_ctor(struct nouveau_object *parent, struct nouveau_object *engine,
 	struct nvc0_copy_priv *priv;
 	int ret;
 
-	if (nv_rd32(parent, 0x022500) & 0x00000100)
-		return -ENODEV;
-
 	ret = nouveau_falcon_create(parent, engine, oclass, 0x104000, true,
 				    "PCE0", "copy0", &priv);
 	*pobject = nv_object(priv);
@@ -131,9 +128,6 @@ nvc0_copy1_ctor(struct nouveau_object *parent, struct nouveau_object *engine,
 	struct nvc0_copy_priv *priv;
 	int ret;
 
-	if (nv_rd32(parent, 0x022500) & 0x00000200)
-		return -ENODEV;
-
 	ret = nouveau_falcon_create(parent, engine, oclass, 0x105000, true,
 				    "PCE1", "copy1", &priv);
 	*pobject = nv_object(priv);
diff --git a/drivers/gpu/drm/nouveau/core/engine/copy/nve0.c b/drivers/gpu/drm/nouveau/core/engine/copy/nve0.c
index dbbe9e8998fe..16bc968b7b76 100644
--- a/drivers/gpu/drm/nouveau/core/engine/copy/nve0.c
+++ b/drivers/gpu/drm/nouveau/core/engine/copy/nve0.c
@@ -75,9 +75,6 @@ nve0_copy0_ctor(struct nouveau_object *parent, struct nouveau_object *engine,
 	struct nve0_copy_priv *priv;
 	int ret;
 
-	if (nv_rd32(parent, 0x022500) & 0x00000100)
-		return -ENODEV;
-
 	ret = nouveau_engine_create(parent, engine, oclass, true,
 				    "PCE0", "copy0", &priv);
 	*pobject = nv_object(priv);
@@ -98,9 +95,6 @@ nve0_copy1_ctor(struct nouveau_object *parent, struct nouveau_object *engine,
 	struct nve0_copy_priv *priv;
 	int ret;
 
-	if (nv_rd32(parent, 0x022500) & 0x00000200)
-		return -ENODEV;
-
 	ret = nouveau_engine_create(parent, engine, oclass, true,
 				    "PCE1", "copy1", &priv);
 	*pobject = nv_object(priv);
* Unmerged path drivers/gpu/drm/nouveau/core/engine/device/nv50.c
* Unmerged path drivers/gpu/drm/nouveau/core/include/subdev/devinit.h
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/base.c
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.c
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.h
diff --git a/drivers/gpu/drm/nouveau/core/subdev/devinit/nv84.c b/drivers/gpu/drm/nouveau/core/subdev/devinit/nv84.c
new file mode 100644
index 000000000000..787422505d87
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/core/subdev/devinit/nv84.c
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2013 Red Hat Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: Ben Skeggs
+ */
+
+#include "nv50.h"
+
+static u64
+nv84_devinit_disable(struct nouveau_devinit *devinit)
+{
+	struct nv50_devinit_priv *priv = (void *)devinit;
+	u32 r001540 = nv_rd32(priv, 0x001540);
+	u32 r00154c = nv_rd32(priv, 0x00154c);
+	u64 disable = 0ULL;
+
+	if (!(r001540 & 0x40000000)) {
+		disable |= (1ULL << NVDEV_ENGINE_MPEG);
+		disable |= (1ULL << NVDEV_ENGINE_VP);
+		disable |= (1ULL << NVDEV_ENGINE_BSP);
+		disable |= (1ULL << NVDEV_ENGINE_CRYPT);
+	}
+
+	if (!(r00154c & 0x00000004))
+		disable |= (1ULL << NVDEV_ENGINE_DISP);
+	if (!(r00154c & 0x00000020))
+		disable |= (1ULL << NVDEV_ENGINE_BSP);
+	if (!(r00154c & 0x00000040))
+		disable |= (1ULL << NVDEV_ENGINE_CRYPT);
+
+	return disable;
+}
+
+struct nouveau_oclass *
+nv84_devinit_oclass = &(struct nouveau_devinit_impl) {
+	.base.handle = NV_SUBDEV(DEVINIT, 0x84),
+	.base.ofuncs = &(struct nouveau_ofuncs) {
+		.ctor = nv50_devinit_ctor,
+		.dtor = _nouveau_devinit_dtor,
+		.init = nv50_devinit_init,
+		.fini = _nouveau_devinit_fini,
+	},
+	.pll_set = nv50_devinit_pll_set,
+	.disable = nv84_devinit_disable,
+}.base;
diff --git a/drivers/gpu/drm/nouveau/core/subdev/devinit/nv98.c b/drivers/gpu/drm/nouveau/core/subdev/devinit/nv98.c
new file mode 100644
index 000000000000..2b0e963fc6f0
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/core/subdev/devinit/nv98.c
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2013 Red Hat Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: Ben Skeggs
+ */
+
+#include "nv50.h"
+
+static u64
+nv98_devinit_disable(struct nouveau_devinit *devinit)
+{
+	struct nv50_devinit_priv *priv = (void *)devinit;
+	u32 r001540 = nv_rd32(priv, 0x001540);
+	u32 r00154c = nv_rd32(priv, 0x00154c);
+	u64 disable = 0ULL;
+
+	if (!(r001540 & 0x40000000)) {
+		disable |= (1ULL << NVDEV_ENGINE_VP);
+		disable |= (1ULL << NVDEV_ENGINE_BSP);
+		disable |= (1ULL << NVDEV_ENGINE_PPP);
+	}
+
+	if (!(r00154c & 0x00000004))
+		disable |= (1ULL << NVDEV_ENGINE_DISP);
+	if (!(r00154c & 0x00000020))
+		disable |= (1ULL << NVDEV_ENGINE_BSP);
+	if (!(r00154c & 0x00000040))
+		disable |= (1ULL << NVDEV_ENGINE_CRYPT);
+
+	return disable;
+}
+
+struct nouveau_oclass *
+nv98_devinit_oclass = &(struct nouveau_devinit_impl) {
+	.base.handle = NV_SUBDEV(DEVINIT, 0x98),
+	.base.ofuncs = &(struct nouveau_ofuncs) {
+		.ctor = nv50_devinit_ctor,
+		.dtor = _nouveau_devinit_dtor,
+		.init = nv50_devinit_init,
+		.fini = _nouveau_devinit_fini,
+	},
+	.pll_set = nv50_devinit_pll_set,
+	.disable = nv98_devinit_disable,
+}.base;
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nva3.c
diff --git a/drivers/gpu/drm/nouveau/core/subdev/devinit/nvaf.c b/drivers/gpu/drm/nouveau/core/subdev/devinit/nvaf.c
new file mode 100644
index 000000000000..4fc68d27eff3
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/core/subdev/devinit/nvaf.c
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2013 Red Hat Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: Ben Skeggs
+ */
+
+#include "nv50.h"
+
+static u64
+nvaf_devinit_disable(struct nouveau_devinit *devinit)
+{
+	struct nv50_devinit_priv *priv = (void *)devinit;
+	u32 r001540 = nv_rd32(priv, 0x001540);
+	u32 r00154c = nv_rd32(priv, 0x00154c);
+	u64 disable = 0;
+
+	if (!(r001540 & 0x40000000)) {
+		disable |= (1ULL << NVDEV_ENGINE_VP);
+		disable |= (1ULL << NVDEV_ENGINE_PPP);
+	}
+
+	if (!(r00154c & 0x00000004))
+		disable |= (1ULL << NVDEV_ENGINE_DISP);
+	if (!(r00154c & 0x00000020))
+		disable |= (1ULL << NVDEV_ENGINE_BSP);
+	if (!(r00154c & 0x00000040))
+		disable |= (1ULL << NVDEV_ENGINE_VIC);
+	if (!(r00154c & 0x00000200))
+		disable |= (1ULL << NVDEV_ENGINE_COPY0);
+
+	return disable;
+}
+
+struct nouveau_oclass *
+nvaf_devinit_oclass = &(struct nouveau_devinit_impl) {
+	.base.handle = NV_SUBDEV(DEVINIT, 0xaf),
+	.base.ofuncs = &(struct nouveau_ofuncs) {
+		.ctor = nv50_devinit_ctor,
+		.dtor = _nouveau_devinit_dtor,
+		.init = nv50_devinit_init,
+		.fini = _nouveau_devinit_fini,
+	},
+	.pll_set = nva3_devinit_pll_set,
+	.disable = nvaf_devinit_disable,
+}.base;
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/nvc0.c
* Unmerged path drivers/gpu/drm/nouveau/core/subdev/devinit/priv.h
