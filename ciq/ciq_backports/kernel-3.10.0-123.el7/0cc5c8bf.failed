net/mlx4_en: Fix a race between napi poll function and RX ring cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [netdrv] mlx4: Fix a race between napi poll function and RX ring cleanup (Amir Vadai) [862498 868244 920465 978058 998202]
Rebuild_FUZZ: 94.74%
commit-author Eugenia Emantayev <eugenia@mellanox.com>
commit 0cc5c8bf11852dec3225fda2f53a599243095d23
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/0cc5c8bf.failed

The RX rings were cleaned while there was still possible RX traffic completion
handling.
Change the sequance of events so that the port is closed and the QPs are being
stopped before RX cleanup.

	Signed-off-by: Eugenia Emantayev <eugenia@mellanox.com>
	Signed-off-by: Amir Vadai <amirv@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0cc5c8bf11852dec3225fda2f53a599243095d23)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/en_netdev.c
diff --cc drivers/net/ethernet/mellanox/mlx4/en_netdev.c
index ea8818d49701,f1dcddcb8050..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_netdev.c
@@@ -1695,14 -1729,20 +1698,27 @@@ void mlx4_en_stop_port(struct net_devic
  
  	/* Free RX Rings */
  	for (i = 0; i < priv->rx_ring_num; i++) {
++<<<<<<< HEAD
 +		mlx4_en_deactivate_rx_ring(priv, &priv->rx_ring[i]);
 +		while (test_bit(NAPI_STATE_SCHED, &priv->rx_cq[i].napi.state))
 +			msleep(1);
 +		mlx4_en_deactivate_cq(priv, &priv->rx_cq[i]);
- 	}
++=======
+ 		struct mlx4_en_cq *cq = &priv->rx_cq[i];
  
- 	/* close port*/
- 	mlx4_CLOSE_PORT(mdev->dev, priv->port);
+ 		local_bh_disable();
+ 		while (!mlx4_en_cq_lock_napi(cq)) {
+ 			pr_info("CQ %d locked\n", i);
+ 			mdelay(1);
+ 		}
+ 		local_bh_enable();
+ 
+ 		while (test_bit(NAPI_STATE_SCHED, &cq->napi.state))
+ 			msleep(1);
+ 		mlx4_en_deactivate_rx_ring(priv, &priv->rx_ring[i]);
+ 		mlx4_en_deactivate_cq(priv, cq);
++>>>>>>> 0cc5c8bf1185 (net/mlx4_en: Fix a race between napi poll function and RX ring cleanup)
+ 	}
  }
  
  static void mlx4_en_restart(struct work_struct *work)
* Unmerged path drivers/net/ethernet/mellanox/mlx4/en_netdev.c
