be2net: Log the profile-id used by FW during driver initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Vasundhara Volam <vasundhara.volam@emulex.com>
commit 542963b7d7e9acadde5e2f3ce85f4919e7c4a24a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/542963b7.failed

	Signed-off-by: Vasundhara Volam <vasundhara.volam@emulex.com>
	Signed-off-by: Sathya Perla <sathya.perla@emulex.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 542963b7d7e9acadde5e2f3ce85f4919e7c4a24a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/emulex/benet/be_cmds.h
diff --cc drivers/net/ethernet/emulex/benet/be_cmds.h
index b7bfef713606,8054b84d9bf3..000000000000
--- a/drivers/net/ethernet/emulex/benet/be_cmds.h
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.h
@@@ -2077,9 -2074,9 +2089,18 @@@ int be_cmd_get_func_config(struct be_ad
  			   struct be_resources *res);
  int be_cmd_get_profile_config(struct be_adapter *adapter,
  			      struct be_resources *res, u8 domain);
++<<<<<<< HEAD
 +extern int be_cmd_set_profile_config(struct be_adapter *adapter, u32 bps,
 +				     u8 domain);
 +extern int be_cmd_get_if_id(struct be_adapter *adapter,
 +			    struct be_vf_cfg *vf_cfg, int vf_num);
 +extern int be_cmd_enable_vf(struct be_adapter *adapter, u8 domain);
 +extern int be_cmd_intr_set(struct be_adapter *adapter, bool intr_enable);
++=======
+ int be_cmd_set_profile_config(struct be_adapter *adapter, u32 bps, u8 domain);
+ int be_cmd_get_active_profile(struct be_adapter *adapter, u16 *profile);
+ int be_cmd_get_if_id(struct be_adapter *adapter, struct be_vf_cfg *vf_cfg,
+ 		     int vf_num);
+ int be_cmd_enable_vf(struct be_adapter *adapter, u8 domain);
+ int be_cmd_intr_set(struct be_adapter *adapter, bool intr_enable);
++>>>>>>> 542963b7d7e9 (be2net: Log the profile-id used by FW during driver initialization)
diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.c b/drivers/net/ethernet/emulex/benet/be_cmds.c
index 37416551ad4f..432739c69a0c 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@ -3593,6 +3593,40 @@ int be_cmd_intr_set(struct be_adapter *adapter, bool intr_enable)
 	return status;
 }
 
+/* Uses MBOX */
+int be_cmd_get_active_profile(struct be_adapter *adapter, u16 *profile_id)
+{
+	struct be_cmd_req_get_active_profile *req;
+	struct be_mcc_wrb *wrb;
+	int status;
+
+	if (mutex_lock_interruptible(&adapter->mbox_lock))
+		return -1;
+
+	wrb = wrb_from_mbox(adapter);
+	if (!wrb) {
+		status = -EBUSY;
+		goto err;
+	}
+
+	req = embedded_payload(wrb);
+
+	be_wrb_cmd_hdr_prepare(&req->hdr, CMD_SUBSYSTEM_COMMON,
+			       OPCODE_COMMON_GET_ACTIVE_PROFILE, sizeof(*req),
+			       wrb, NULL);
+
+	status = be_mbox_notify_wait(adapter);
+	if (!status) {
+		struct be_cmd_resp_get_active_profile *resp =
+							embedded_payload(wrb);
+		*profile_id = le16_to_cpu(resp->active_profile_id);
+	}
+
+err:
+	mutex_unlock(&adapter->mbox_lock);
+	return status;
+}
+
 int be_roce_mcc_cmd(void *netdev_handle, void *wrb_payload,
 			int wrb_payload_size, u16 *cmd_status, u16 *ext_status)
 {
* Unmerged path drivers/net/ethernet/emulex/benet/be_cmds.h
diff --git a/drivers/net/ethernet/emulex/benet/be_main.c b/drivers/net/ethernet/emulex/benet/be_main.c
index eca2ad55d42f..a2dbed5af0b7 100644
--- a/drivers/net/ethernet/emulex/benet/be_main.c
+++ b/drivers/net/ethernet/emulex/benet/be_main.c
@@ -3158,6 +3158,7 @@ static int be_get_resources(struct be_adapter *adapter)
 /* Routine to query per function resource limits */
 static int be_get_config(struct be_adapter *adapter)
 {
+	u16 profile_id;
 	int status;
 
 	status = be_cmd_query_fw_cfg(adapter, &adapter->port_num,
@@ -3167,6 +3168,13 @@ static int be_get_config(struct be_adapter *adapter)
 	if (status)
 		return status;
 
+	 if (be_physfn(adapter)) {
+		status = be_cmd_get_active_profile(adapter, &profile_id);
+		if (!status)
+			dev_info(&adapter->pdev->dev,
+				 "Using profile 0x%x\n", profile_id);
+	}
+
 	status = be_get_resources(adapter);
 	if (status)
 		return status;
