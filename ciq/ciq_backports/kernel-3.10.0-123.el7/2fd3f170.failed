ALSA: hda - Enable mute/mic-mute LEDs for more Thinkpads with Conexant codec

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [alsa] hda: Enable mute/mic-mute LEDs for more Thinkpads with Conexant codec (Jaroslav Kysela) [1044022]
Rebuild_FUZZ: 93.79%
commit-author Hui Wang <jason77.wang@gmail.com>
commit 2fd3f170e5ba04acc60ee94b2c76ee166727c734
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/2fd3f170.failed

Most Thinkpad Edge series laptops use conexant codec, so far although
the codecs have different minor Vendor Id and minor Subsystem Id,
they all belong to the cxt5066 family, this change can make the
mute/mic-mute LEDs support more generic among cxt_5066 family.

This design refers to the similar solution for the realtek codec
ALC269 family in the patch_realtek.c.

	Cc: Alex Hung <alex.hung@canonical.com>
	Signed-off-by: Hui Wang <hui.wang@canonical.com>
	Acked-by: David Henningsson <david.henningsson@canonical.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 2fd3f170e5ba04acc60ee94b2c76ee166727c734)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_conexant.c
diff --cc sound/pci/hda/patch_conexant.c
index 4edd2d0f9a3c,1f2717f817a0..000000000000
--- a/sound/pci/hda/patch_conexant.c
+++ b/sound/pci/hda/patch_conexant.c
@@@ -3231,8 -3237,107 +3231,108 @@@ enum 
  	CXT_FIXUP_INC_MIC_BOOST,
  	CXT_FIXUP_HEADPHONE_MIC_PIN,
  	CXT_FIXUP_HEADPHONE_MIC,
 -	CXT_FIXUP_GPIO1,
 -	CXT_FIXUP_THINKPAD_ACPI,
  };
  
++<<<<<<< HEAD
++=======
+ #if IS_ENABLED(CONFIG_THINKPAD_ACPI)
+ 
+ #include <linux/thinkpad_acpi.h>
+ #include <acpi/acpi.h>
+ 
+ static int (*led_set_func)(int, bool);
+ 
+ static acpi_status acpi_check_cb(acpi_handle handle, u32 lvl, void *context,
+ 				 void **rv)
+ {
+ 	bool *found = context;
+ 	*found = true;
+ 	return AE_OK;
+ }
+ 
+ static bool is_thinkpad(struct hda_codec *codec)
+ {
+ 	bool found = false;
+ 	if (codec->subsystem_id >> 16 != 0x17aa)
+ 		return false;
+ 	if (ACPI_SUCCESS(acpi_get_devices("LEN0068", acpi_check_cb, &found, NULL)) && found)
+ 		return true;
+ 	found = false;
+ 	return ACPI_SUCCESS(acpi_get_devices("IBM0068", acpi_check_cb, &found, NULL)) && found;
+ }
+ 
+ static void update_tpacpi_mute_led(void *private_data, int enabled)
+ {
+ 	struct hda_codec *codec = private_data;
+ 	struct conexant_spec *spec = codec->spec;
+ 
+ 	if (spec->dynamic_eapd)
+ 		cx_auto_vmaster_hook(private_data, enabled);
+ 
+ 	if (led_set_func)
+ 		led_set_func(TPACPI_LED_MUTE, !enabled);
+ }
+ 
+ static void update_tpacpi_micmute_led(struct hda_codec *codec,
+ 				      struct snd_ctl_elem_value *ucontrol)
+ {
+ 	if (!ucontrol || !led_set_func)
+ 		return;
+ 	if (strcmp("Capture Switch", ucontrol->id.name) == 0 && ucontrol->id.index == 0) {
+ 		/* TODO: How do I verify if it's a mono or stereo here? */
+ 		bool val = ucontrol->value.integer.value[0] || ucontrol->value.integer.value[1];
+ 		led_set_func(TPACPI_LED_MICMUTE, !val);
+ 	}
+ }
+ 
+ static void cxt_fixup_thinkpad_acpi(struct hda_codec *codec,
+ 				  const struct hda_fixup *fix, int action)
+ {
+ 	struct conexant_spec *spec = codec->spec;
+ 
+ 	bool removefunc = false;
+ 
+ 	if (action == HDA_FIXUP_ACT_PROBE) {
+ 		if (!is_thinkpad(codec))
+ 			return;
+ 		if (!led_set_func)
+ 			led_set_func = symbol_request(tpacpi_led_set);
+ 		if (!led_set_func) {
+ 			snd_printk(KERN_WARNING "Failed to find thinkpad-acpi symbol tpacpi_led_set\n");
+ 			return;
+ 		}
+ 
+ 		removefunc = true;
+ 		if (led_set_func(TPACPI_LED_MUTE, false) >= 0) {
+ 			spec->gen.vmaster_mute.hook = update_tpacpi_mute_led;
+ 			removefunc = false;
+ 		}
+ 		if (led_set_func(TPACPI_LED_MICMUTE, false) >= 0) {
+ 			if (spec->gen.num_adc_nids > 1)
+ 				snd_printdd("Skipping micmute LED control due to several ADCs");
+ 			else {
+ 				spec->gen.cap_sync_hook = update_tpacpi_micmute_led;
+ 				removefunc = false;
+ 			}
+ 		}
+ 	}
+ 
+ 	if (led_set_func && (action == HDA_FIXUP_ACT_FREE || removefunc)) {
+ 		symbol_put(tpacpi_led_set);
+ 		led_set_func = NULL;
+ 	}
+ }
+ 
+ #else
+ 
+ static void cxt_fixup_thinkpad_acpi(struct hda_codec *codec,
+ 				  const struct hda_fixup *fix, int action)
+ {
+ }
+ 
+ #endif
+ 
++>>>>>>> 2fd3f170e5ba (ALSA: hda - Enable mute/mic-mute LEDs for more Thinkpads with Conexant codec)
  static void cxt_fixup_stereo_dmic(struct hda_codec *codec,
  				  const struct hda_fixup *fix, int action)
  {
* Unmerged path sound/pci/hda/patch_conexant.c
