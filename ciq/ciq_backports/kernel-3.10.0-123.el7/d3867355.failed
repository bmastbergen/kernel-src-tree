drm/ttm: Fix accesses through vmas with only partial coverage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [drm] ttm: Fix accesses through vmas with only partial coverage (Rob Clark) [1054409]
Rebuild_FUZZ: 96.61%
commit-author Thomas Hellstrom <thellstrom@vmware.com>
commit d386735588c3e22129c2bc6eb64fc1d37a8f805c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/d3867355.failed

VMAs covering a bo but that didn't start at the same address space offset as
the bo they were mapping were incorrectly generating SEGFAULT errors in
the fault handler.

	Reported-by: Joseph Dolinak <kanilo2@yahoo.com>
	Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
	Reviewed-by: Jakob Bornecrantz <jakob@vmware.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit d386735588c3e22129c2bc6eb64fc1d37a8f805c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/ttm/ttm_bo_vm.c
diff --cc drivers/gpu/drm/ttm/ttm_bo_vm.c
index 3df9f16b041c,6440eeac22d2..000000000000
--- a/drivers/gpu/drm/ttm/ttm_bo_vm.c
+++ b/drivers/gpu/drm/ttm/ttm_bo_vm.c
@@@ -146,9 -169,9 +146,15 @@@ static int ttm_bo_vm_fault(struct vm_ar
  	}
  
  	page_offset = ((address - vma->vm_start) >> PAGE_SHIFT) +
++<<<<<<< HEAD
 +	    bo->vm_node->start - vma->vm_pgoff;
 +	page_last = vma_pages(vma) +
 +	    bo->vm_node->start - vma->vm_pgoff;
++=======
+ 		vma->vm_pgoff - drm_vma_node_start(&bo->vma_node);
+ 	page_last = vma_pages(vma) + vma->vm_pgoff -
+ 		drm_vma_node_start(&bo->vma_node);
++>>>>>>> d386735588c3 (drm/ttm: Fix accesses through vmas with only partial coverage)
  
  	if (unlikely(page_offset >= bo->num_pages)) {
  		retval = VM_FAULT_SIGBUS;
* Unmerged path drivers/gpu/drm/ttm/ttm_bo_vm.c
