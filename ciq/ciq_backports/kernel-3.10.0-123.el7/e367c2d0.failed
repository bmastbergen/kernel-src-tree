ipv6: ip6_append_data_mtu do not handle the mtu of the second fragment properly

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author lucien <lucien.xin@gmail.com>
commit e367c2d03dba4c9bcafad24688fadb79dd95b218
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/e367c2d0.failed

In ip6_append_data_mtu(), when the xfrm mode is not tunnel(such as
transport),the ipsec header need to be added in the first fragment, so the mtu
will decrease to reserve space for it, then the second fragment come, the mtu
should be turn back, as the commit 0c1833797a5a6ec23ea9261d979aa18078720b74
said.  however, in the commit a493e60ac4bbe2e977e7129d6d8cbb0dd236be, it use
*mtu = min(*mtu, ...) to change the mtu, which lead to the new mtu is alway
equal with the first fragment's. and cannot turn back.

when I test through  ping6 -c1 -s5000 $ip (mtu=1280):
...frag (0|1232) ESP(spi=0x00002000,seq=0xb), length 1232
...frag (1232|1216)
...frag (2448|1216)
...frag (3664|1216)
...frag (4880|164)

which should be:
...frag (0|1232) ESP(spi=0x00001000,seq=0x1), length 1232
...frag (1232|1232)
...frag (2464|1232)
...frag (3696|1232)
...frag (4928|116)

so delete the min() when change back the mtu.

	Signed-off-by: Xin Long <lucien.xin@gmail.com>
Fixes: 75a493e60ac4bb ("ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size")
	Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e367c2d03dba4c9bcafad24688fadb79dd95b218)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_output.c
diff --cc net/ipv6/ip6_output.c
index 1f471eecb984,64d6073731d3..000000000000
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@@ -1262,8 -1310,7 +1261,12 @@@ alloc_new_skb
  			if (skb == NULL || skb_prev == NULL)
  				ip6_append_data_mtu(&mtu, &maxfraglen,
  						    fragheaderlen, skb, rt,
++<<<<<<< HEAD
 +						    np->pmtudisc ==
 +						    IPV6_PMTUDISC_PROBE);
++=======
+ 						    orig_mtu);
++>>>>>>> e367c2d03dba (ipv6: ip6_append_data_mtu do not handle the mtu of the second fragment properly)
  
  			skb_prev = skb;
  
* Unmerged path net/ipv6/ip6_output.c
