xfs: use xfs_icluster_size_fsb in xfs_imap

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Jie Liu <jeff.liu@oracle.com>
commit f9e5abcfc5b299a988cf8f9d0ad11e03da14806b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/f9e5abcf.failed

Use xfs_icluster_size_fsb() in xfs_imap().

	Signed-off-by: Jie Liu <jeff.liu@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>
(cherry picked from commit f9e5abcfc5b299a988cf8f9d0ad11e03da14806b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_ialloc.c
diff --cc fs/xfs/xfs_ialloc.c
index d1401a0cf9be,5d7f105a1c82..000000000000
--- a/fs/xfs/xfs_ialloc.c
+++ b/fs/xfs/xfs_ialloc.c
@@@ -1384,7 -1377,7 +1384,11 @@@ xfs_imap
  		return XFS_ERROR(EINVAL);
  	}
  
++<<<<<<< HEAD
 +	blks_per_cluster = XFS_INODE_CLUSTER_SIZE(mp) >> mp->m_sb.sb_blocklog;
++=======
+ 	blks_per_cluster = xfs_icluster_size_fsb(mp);
++>>>>>>> f9e5abcfc5b2 (xfs: use xfs_icluster_size_fsb in xfs_imap)
  
  	/*
  	 * For bulkstat and handle lookups, we have an untrusted inode number
@@@ -1405,7 -1398,7 +1409,11 @@@
  	 * If the inode cluster size is the same as the blocksize or
  	 * smaller we get to the buffer by simple arithmetics.
  	 */
++<<<<<<< HEAD
 +	if (XFS_INODE_CLUSTER_SIZE(mp) <= mp->m_sb.sb_blocksize) {
++=======
+ 	if (blks_per_cluster == 1) {
++>>>>>>> f9e5abcfc5b2 (xfs: use xfs_icluster_size_fsb in xfs_imap)
  		offset = XFS_INO_TO_OFFSET(mp, ino);
  		ASSERT(offset < mp->m_sb.sb_inopblock);
  
* Unmerged path fs/xfs/xfs_ialloc.c
