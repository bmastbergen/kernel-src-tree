ALSA: hda - unmute pin amplifier in infoframe setup for Haswell

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [alsa] hda: unmute pin amplifier in infoframe setup for Haswell (Jaroslav Kysela) [1044022]
Rebuild_FUZZ: 92.44%
commit-author Mengdong Lin <mengdong.lin@intel.com>
commit 58f7d28da6994e4292ade2ac9eabebb723a9bbe6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/58f7d28d.failed

When Gfx driver reconnects a port and transcoder, the pin amplifier will
be muted. To enable sound, the pin amp need to be unmuted.

This patch
- moves pin amp unmuting from stream preparing to hdmi_setup_audio_infoframe().
  So if port:transcoder reconnection happens during stream playback, the ELDV
  unsol event can stil trigger pin's amp unmuting when re-setting up audio
  info frame.

- remove reading pin amp status before unmuting for speed-up, since pin amp
  should always be unmuted.

- rename haswell_verify_pin_D0() to haswell_verify_D0(), since the convertor
  power state is also fixed here.

This patch is mostly based on suggestion of David Henningsson.

	Cc: David Henningsson <david.henningsson@canonical.com>
	Signed-off-by: Mengdong Lin <mengdong.lin@intel.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 58f7d28da6994e4292ade2ac9eabebb723a9bbe6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/patch_hdmi.c
diff --cc sound/pci/hda/patch_hdmi.c
index 0540f8983942,3a15225d6982..000000000000
--- a/sound/pci/hda/patch_hdmi.c
+++ b/sound/pci/hda/patch_hdmi.c
@@@ -880,6 -893,14 +880,17 @@@ static void hdmi_setup_audio_infoframe(
  	int ca;
  	union audio_infoframe ai;
  
++<<<<<<< HEAD
++=======
+ 	if (!channels)
+ 		return;
+ 
+ 	if (is_haswell(codec))
+ 		snd_hda_codec_write(codec, pin_nid, 0,
+ 					    AC_VERB_SET_AMP_GAIN_MUTE,
+ 					    AMP_OUT_UNMUTE);
+ 
++>>>>>>> 58f7d28da699 (ALSA: hda - unmute pin amplifier in infoframe setup for Haswell)
  	eld = &per_pin->sink_eld;
  	if (!eld->monitor_present)
  		return;
@@@ -1073,8 -1075,8 +1065,13 @@@ static int hdmi_setup_stream(struct hda
  	int pinctl;
  	int new_pinctl = 0;
  
++<<<<<<< HEAD
 +	if (codec->vendor_id == 0x80862807)
 +		haswell_verify_pin_D0(codec, cvt_nid, pin_nid);
++=======
+ 	if (is_haswell(codec))
+ 		haswell_verify_D0(codec, cvt_nid, pin_nid);
++>>>>>>> 58f7d28da699 (ALSA: hda - unmute pin amplifier in infoframe setup for Haswell)
  
  	if (snd_hda_query_pin_caps(codec, pin_nid) & AC_PINCAP_HBR) {
  		pinctl = snd_hda_codec_read(codec, pin_nid, 0,
@@@ -1339,6 -1342,14 +1336,17 @@@ static void hdmi_present_sense(struct h
  			       eld->eld_size);
  		pin_eld->eld_size = eld->eld_size;
  		pin_eld->info = eld->info;
++<<<<<<< HEAD
++=======
+ 
+ 		/* Haswell-specific workaround: re-setup when the transcoder is
+ 		 * changed during the stream playback
+ 		 */
+ 		if (is_haswell(codec) &&
+ 		    eld->eld_valid && !old_eld_valid && per_pin->setup)
+ 			hdmi_setup_audio_infoframe(codec, per_pin,
+ 						   per_pin->non_pcm);
++>>>>>>> 58f7d28da699 (ALSA: hda - unmute pin amplifier in infoframe setup for Haswell)
  	}
  	mutex_unlock(&pin_eld->lock);
  
* Unmerged path sound/pci/hda/patch_hdmi.c
