KVM: ioapic: extract body of kvm_ioapic_set_irq

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [virt] kvm/ioapic: extract body of kvm_ioapic_set_irq (Paolo Bonzini) [1036478]
Rebuild_FUZZ: 96.77%
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 44847dea79751e95665a439f8c63a65e51da8e1f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/44847dea.failed

We will reuse it to process a nonzero IRR that is passed to KVM_SET_IRQCHIP.

	Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 44847dea79751e95665a439f8c63a65e51da8e1f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	virt/kvm/ioapic.c
diff --cc virt/kvm/ioapic.c
index 28f38c197b52,270f7fe73f39..000000000000
--- a/virt/kvm/ioapic.c
+++ b/virt/kvm/ioapic.c
@@@ -316,31 -362,10 +362,20 @@@ int kvm_ioapic_set_irq(struct kvm_ioapi
  	BUG_ON(irq < 0 || irq >= IOAPIC_NUM_PINS);
  
  	spin_lock(&ioapic->lock);
- 	old_irr = ioapic->irr;
  	irq_level = __kvm_irq_line_state(&ioapic->irq_states[irq],
  					 irq_source_id, level);
++<<<<<<< HEAD
 +	entry = ioapic->redirtbl[irq];
 +	irq_level ^= entry.fields.polarity;
 +	if (!irq_level) {
 +		ioapic->irr &= ~mask;
 +		ret = 1;
 +	} else {
 +		int edge = (entry.fields.trig_mode == IOAPIC_EDGE_TRIG);
++=======
+ 	ret = ioapic_set_irq(ioapic, irq, irq_level, line_status);
++>>>>>>> 44847dea7975 (KVM: ioapic: extract body of kvm_ioapic_set_irq)
  
- 		if (irq == RTC_GSI && line_status &&
- 			rtc_irq_check_coalesced(ioapic)) {
- 			ret = 0; /* coalesced */
- 			goto out;
- 		}
- 		ioapic->irr |= mask;
- 		if ((edge && old_irr != ioapic->irr) ||
- 		    (!edge && !entry.fields.remote_irr))
- 			ret = ioapic_service(ioapic, irq, line_status);
- 		else
- 			ret = 0; /* report coalesced interrupt */
- 	}
- out:
- 	trace_kvm_ioapic_set_irq(entry.bits, irq, ret == 0);
  	spin_unlock(&ioapic->lock);
  
  	return ret;
* Unmerged path virt/kvm/ioapic.c
