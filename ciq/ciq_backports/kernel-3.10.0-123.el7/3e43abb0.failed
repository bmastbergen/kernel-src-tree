PCI/ACPI: Move _OSC stuff from acpi_pci_root_add() to negotiate_os_control()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [acpi] Move _OSC stuff from acpi_pci_root_add() to negotiate_os_control() (Myron Stowe) [1033834]
Rebuild_FUZZ: 92.96%
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 3e43abb012d45dc284ef9a0fb0cea0fb004b5607
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/3e43abb0.failed

This doesn't change any of the _OSC code; it just moves it out into
a new function so it doesn't clutter acpi_pci_root_add() so much.  This
also enables future simplifications.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 3e43abb012d45dc284ef9a0fb0cea0fb004b5607)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/pci_root.c
diff --cc drivers/acpi/pci_root.c
index ed36e22817d8,3e57f104e09a..000000000000
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@@ -367,8 -451,8 +451,11 @@@ static int acpi_pci_root_add(struct acp
  	acpi_status status;
  	int result;
  	struct acpi_pci_root *root;
- 	u32 flags, base_flags;
  	acpi_handle handle = device->handle;
++<<<<<<< HEAD
++=======
+ 	int no_aspm = 0, clear_aspm = 0;
++>>>>>>> 3e43abb012d4 (PCI/ACPI: Move _OSC stuff from acpi_pci_root_add() to negotiate_os_control())
  
  	root = kzalloc(sizeof(struct acpi_pci_root), GFP_KERNEL);
  	if (!root)
@@@ -421,12 -505,7 +508,13 @@@
  
  	root->mcfg_addr = acpi_pci_root_get_mcfg_addr(handle);
  
 -	negotiate_os_control(root, &no_aspm, &clear_aspm);
++<<<<<<< HEAD
 +	/*
 +	 * All supported architectures that use ACPI have support for
 +	 * PCI domains, so we indicate this in _OSC support capabilities.
 +	 */
 +	flags = base_flags = OSC_PCI_SEGMENT_GROUPS_SUPPORT;
 +	acpi_pci_osc_support(root, flags);
  
  	/*
  	 * TBD: Need PCI interface for enumeration/configuration of roots.
@@@ -448,67 -527,12 +536,70 @@@
  		goto end;
  	}
  
 -	if (clear_aspm) {
 -		dev_info(&device->dev, "Disabling ASPM (FADT indicates it is unsupported)\n");
 -		pcie_clear_aspm(root->bus);
 +	/* Indicate support for various _OSC capabilities. */
 +	if (pci_ext_cfg_avail())
 +		flags |= OSC_PCI_EXT_CONFIG_SUPPORT;
 +	if (pcie_aspm_support_enabled()) {
 +		flags |= OSC_PCI_ASPM_SUPPORT | OSC_PCI_CLOCK_PM_SUPPORT;
 +	}
 +	if (pci_msi_enabled())
 +		flags |= OSC_PCI_MSI_SUPPORT;
 +	if (flags != base_flags) {
 +		status = acpi_pci_osc_support(root, flags);
 +		if (ACPI_FAILURE(status)) {
 +			dev_info(&device->dev, "ACPI _OSC support "
 +				"notification failed, disabling PCIe ASPM\n");
 +			pcie_no_aspm();
 +			flags = base_flags;
 +		}
 +	}
 +
 +	if (!pcie_ports_disabled
 +	    && (flags & ACPI_PCIE_REQ_SUPPORT) == ACPI_PCIE_REQ_SUPPORT) {
 +		flags = OSC_PCI_EXPRESS_CAPABILITY_CONTROL
 +			| OSC_PCI_EXPRESS_NATIVE_HP_CONTROL
 +			| OSC_PCI_EXPRESS_PME_CONTROL;
 +
 +		if (pci_aer_available()) {
 +			if (aer_acpi_firmware_first())
 +				dev_dbg(&device->dev,
 +					"PCIe errors handled by BIOS.\n");
 +			else
 +				flags |= OSC_PCI_EXPRESS_AER_CONTROL;
 +		}
 +
 +		dev_info(&device->dev,
 +			"Requesting ACPI _OSC control (0x%02x)\n", flags);
 +
 +		status = acpi_pci_osc_control_set(handle, &flags,
 +				       OSC_PCI_EXPRESS_CAPABILITY_CONTROL);
 +		if (ACPI_SUCCESS(status)) {
 +			dev_info(&device->dev,
 +				"ACPI _OSC control (0x%02x) granted\n", flags);
 +			if (acpi_gbl_FADT.boot_flags & ACPI_FADT_NO_ASPM) {
 +				/*
 +				 * We have ASPM control, but the FADT indicates
 +				 * that it's unsupported. Clear it.
 +				 */
 +				pcie_clear_aspm(root->bus);
 +			}
 +		} else {
 +			dev_info(&device->dev,
 +				"ACPI _OSC request failed (%s), "
 +				"returned control mask: 0x%02x\n",
 +				acpi_format_exception(status), flags);
 +			pr_info("ACPI _OSC control for PCIe not granted, "
 +				"disabling ASPM\n");
 +			pcie_no_aspm();
 +		}
 +	} else {
 +		dev_info(&device->dev,
 +			 "Unable to request _OSC control "
 +			 "(_OSC support mask: 0x%02x)\n", flags);
  	}
 -	if (no_aspm)
 -		pcie_no_aspm();
++=======
++	negotiate_os_control(root, &no_aspm, &clear_aspm);
++>>>>>>> 3e43abb012d4 (PCI/ACPI: Move _OSC stuff from acpi_pci_root_add() to negotiate_os_control())
  
  	pci_acpi_add_bus_pm_notifier(device, root->bus);
  	if (device->wakeup.flags.run_wake)
* Unmerged path drivers/acpi/pci_root.c
