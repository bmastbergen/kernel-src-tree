SUNRPC: Fix buffer overflow checking in gss_encode_v0_msg/gss_encode_v1_msg

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Trond Myklebust <Trond.Myklebust@netapp.com>
commit 9d3a2260f0f4bd6379b0a0f131c743fff25b0029
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/9d3a2260.failed

In gss_encode_v1_msg, it is pointless to BUG() after the overflow has
happened. Replace the existing sprintf()-based code with scnprintf(),
and warn if an overflow is ever triggered.

In gss_encode_v0_msg, replace the runtime BUG_ON() with an appropriate
compile-time BUILD_BUG_ON.

	Reported-by: Bruce Fields <bfields@fieldses.org>
	Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
(cherry picked from commit 9d3a2260f0f4bd6379b0a0f131c743fff25b0029)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/auth_gss/auth_gss.c
diff --cc net/sunrpc/auth_gss/auth_gss.c
index b8b4f64ef43e,97912b40c254..000000000000
--- a/net/sunrpc/auth_gss/auth_gss.c
+++ b/net/sunrpc/auth_gss/auth_gss.c
@@@ -452,13 -479,12 +465,22 @@@ gss_alloc_msg(struct gss_auth *gss_auth
  
  	gss_msg = kzalloc(sizeof(*gss_msg), GFP_NOFS);
  	if (gss_msg == NULL)
++<<<<<<< HEAD
 +		return ERR_PTR(-ENOMEM);
 +	vers = get_pipe_version(rpc_net_ns(clnt));
 +	if (vers < 0) {
 +		kfree(gss_msg);
 +		return ERR_PTR(vers);
 +	}
 +	gss_msg->pipe = gss_auth->pipe[vers];
++=======
+ 		goto err;
+ 	vers = get_pipe_version(gss_auth->net);
+ 	err = vers;
+ 	if (err < 0)
+ 		goto err_free_msg;
+ 	gss_msg->pipe = gss_auth->gss_pipe[vers]->pipe;
++>>>>>>> 9d3a2260f0f4 (SUNRPC: Fix buffer overflow checking in gss_encode_v0_msg/gss_encode_v1_msg)
  	INIT_LIST_HEAD(&gss_msg->list);
  	rpc_init_wait_queue(&gss_msg->rpc_waitqueue, "RPCSEC_GSS upcall waitq");
  	init_waitqueue_head(&gss_msg->waitqueue);
* Unmerged path net/sunrpc/auth_gss/auth_gss.c
