netfilter: don't panic on error while walking through the init path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 6d11cfdba52af08b889fd6d3ee4212930493eb38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/6d11cfdb.failed

Don't panic if we hit an error while adding the nf_log or pernet
netfilter support, just bail out.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
	Acked-by: Gao feng <gaofeng@cn.fujitsu.com>
(cherry picked from commit 6d11cfdba52af08b889fd6d3ee4212930493eb38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_log.c
diff --cc net/netfilter/nf_log.c
index 3b18dd1be7d9,bd5474adcabc..000000000000
--- a/net/netfilter/nf_log.c
+++ b/net/netfilter/nf_log.c
@@@ -368,11 -368,7 +368,15 @@@ static int __net_init nf_log_net_init(s
  	return 0;
  
  out_sysctl:
++<<<<<<< HEAD
 +#ifdef CONFIG_PROC_FS
 +	/* For init_net: errors will trigger panic, don't unroll on error. */
 +	if (!net_eq(net, &init_net))
 +		remove_proc_entry("nf_log", net->nf.proc_netfilter);
 +#endif
++=======
+ 	remove_proc_entry("nf_log", net->nf.proc_netfilter);
++>>>>>>> 6d11cfdba52a (netfilter: don't panic on error while walking through the init path)
  	return ret;
  }
  
diff --git a/include/linux/netfilter.h b/include/linux/netfilter.h
index 0060fde3160e..de70f7b45b68 100644
--- a/include/linux/netfilter.h
+++ b/include/linux/netfilter.h
@@ -35,7 +35,7 @@ static inline void nf_inet_addr_mask(const union nf_inet_addr *a1,
 	result->all[3] = a1->all[3] & mask->all[3];
 }
 
-extern void netfilter_init(void);
+extern int netfilter_init(void);
 
 /* Largest hook number + 1 */
 #define NF_MAX_HOOKS 8
diff --git a/net/netfilter/core.c b/net/netfilter/core.c
index 857ca9f35177..2217363ab422 100644
--- a/net/netfilter/core.c
+++ b/net/netfilter/core.c
@@ -304,17 +304,26 @@ static struct pernet_operations netfilter_net_ops = {
 	.exit = netfilter_net_exit,
 };
 
-void __init netfilter_init(void)
+int __init netfilter_init(void)
 {
-	int i, h;
+	int i, h, ret;
+
 	for (i = 0; i < ARRAY_SIZE(nf_hooks); i++) {
 		for (h = 0; h < NF_MAX_HOOKS; h++)
 			INIT_LIST_HEAD(&nf_hooks[i][h]);
 	}
 
-	if (register_pernet_subsys(&netfilter_net_ops) < 0)
-		panic("cannot create netfilter proc entry");
+	ret = register_pernet_subsys(&netfilter_net_ops);
+	if (ret < 0)
+		goto err;
+
+	ret = netfilter_log_init();
+	if (ret < 0)
+		goto err_pernet;
 
-	if (netfilter_log_init() < 0)
-		panic("cannot initialize nf_log");
+	return 0;
+err_pernet:
+	unregister_pernet_subsys(&netfilter_net_ops);
+err:
+	return ret;
 }
* Unmerged path net/netfilter/nf_log.c
diff --git a/net/socket.c b/net/socket.c
index 4ca1526db756..3ebdcb805c51 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -2635,7 +2635,9 @@ static int __init sock_init(void)
 	 */
 
 #ifdef CONFIG_NETFILTER
-	netfilter_init();
+	err = netfilter_init();
+	if (err)
+		goto out;
 #endif
 
 #ifdef CONFIG_NETWORK_PHY_TIMESTAMPING
