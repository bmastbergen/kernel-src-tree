mlx5: remove health handler plugin

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Eli Cohen <eli@dev.mellanox.co.il>
commit 7d46daba8dd5df1aa45724518a041ef7163d3ad5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/7d46daba.failed

Remove this code, per Dave Miller's request, since it is not being used
anywhere in the kernel.

	Signed-off-by: Eli Cohen <eli@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7d46daba8dd5df1aa45724518a041ef7163d3ad5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mlx5/driver.h
diff --cc include/linux/mlx5/driver.h
index 66f691353124,611e65e76b00..000000000000
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@@ -731,9 -731,6 +731,12 @@@ void mlx5_cq_debugfs_cleanup(struct mlx
  int mlx5_db_alloc(struct mlx5_core_dev *dev, struct mlx5_db *db);
  void mlx5_db_free(struct mlx5_core_dev *dev, struct mlx5_db *db);
  
++<<<<<<< HEAD
 +typedef void (*health_handler_t)(struct pci_dev *pdev, void *buf, int size);
 +int mlx5_register_health_report_handler(health_handler_t handler);
 +void mlx5_unregister_health_report_handler(void);
++=======
++>>>>>>> 7d46daba8dd5 (mlx5: remove health handler plugin)
  const char *mlx5_command_str(int command);
  int mlx5_cmdif_debugfs_init(struct mlx5_core_dev *dev);
  void mlx5_cmdif_debugfs_cleanup(struct mlx5_core_dev *dev);
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/health.c b/drivers/net/ethernet/mellanox/mlx5/core/health.c
index 748f10a155c4..3e6670c4a7cd 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/health.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/health.c
@@ -55,33 +55,9 @@ enum {
 };
 
 static DEFINE_SPINLOCK(health_lock);
-
 static LIST_HEAD(health_list);
 static struct work_struct health_work;
 
-static health_handler_t reg_handler;
-int mlx5_register_health_report_handler(health_handler_t handler)
-{
-	spin_lock_irq(&health_lock);
-	if (reg_handler) {
-		spin_unlock_irq(&health_lock);
-		return -EEXIST;
-	}
-	reg_handler = handler;
-	spin_unlock_irq(&health_lock);
-
-	return 0;
-}
-EXPORT_SYMBOL(mlx5_register_health_report_handler);
-
-void mlx5_unregister_health_report_handler(void)
-{
-	spin_lock_irq(&health_lock);
-	reg_handler = NULL;
-	spin_unlock_irq(&health_lock);
-}
-EXPORT_SYMBOL(mlx5_unregister_health_report_handler);
-
 static void health_care(struct work_struct *work)
 {
 	struct mlx5_core_health *health, *n;
@@ -98,11 +74,8 @@ static void health_care(struct work_struct *work)
 		priv = container_of(health, struct mlx5_priv, health);
 		dev = container_of(priv, struct mlx5_core_dev, priv);
 		mlx5_core_warn(dev, "handling bad device here\n");
+		/* nothing yet */
 		spin_lock_irq(&health_lock);
-		if (reg_handler)
-			reg_handler(dev->pdev, health->health,
-				    sizeof(health->health));
-
 		list_del_init(&health->list);
 		spin_unlock_irq(&health_lock);
 	}
* Unmerged path include/linux/mlx5/driver.h
