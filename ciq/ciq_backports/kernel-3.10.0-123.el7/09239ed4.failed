sysfs: group.c: fix up kerneldoc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [fs] sysfs/group: fix up kerneldoc (Myron Stowe) [1034491]
Rebuild_FUZZ: 91.80%
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 09239ed4aa99b2d2fd9b1a51b264661a4a6d469e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/09239ed4.failed

Fix up the wording of sysfs_create/remove_groups() a bit.

	Reported-by: Anthony Foiani <tkil@scrye.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 09239ed4aa99b2d2fd9b1a51b264661a4a6d469e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/sysfs/group.c
diff --cc fs/sysfs/group.c
index c78ef866be83,5f92cd2f61c1..000000000000
--- a/fs/sysfs/group.c
+++ b/fs/sysfs/group.c
@@@ -134,6 -134,40 +134,43 @@@ int sysfs_create_group(struct kobject *
  EXPORT_SYMBOL_GPL(sysfs_create_group);
  
  /**
++<<<<<<< HEAD
++=======
+  * sysfs_create_groups - given a directory kobject, create a bunch of attribute groups
+  * @kobj:	The kobject to create the group on
+  * @groups:	The attribute groups to create, NULL terminated
+  *
+  * This function creates a bunch of attribute groups.  If an error occurs when
+  * creating a group, all previously created groups will be removed, unwinding
+  * everything back to the original state when this function was called.
+  * It will explicitly warn and error if any of the attribute files being
+  * created already exist.
+  *
+  * Returns 0 on success or error code from sysfs_create_group on error.
+  */
+ int sysfs_create_groups(struct kobject *kobj,
+ 			const struct attribute_group **groups)
+ {
+ 	int error = 0;
+ 	int i;
+ 
+ 	if (!groups)
+ 		return 0;
+ 
+ 	for (i = 0; groups[i]; i++) {
+ 		error = sysfs_create_group(kobj, groups[i]);
+ 		if (error) {
+ 			while (--i >= 0)
+ 				sysfs_remove_group(kobj, groups[i]);
+ 			break;
+ 		}
+ 	}
+ 	return error;
+ }
+ EXPORT_SYMBOL_GPL(sysfs_create_groups);
+ 
+ /**
++>>>>>>> 09239ed4aa99 (sysfs: group.c: fix up kerneldoc)
   * sysfs_update_group - given a directory kobject, update an attribute group
   * @kobj:	The kobject to update the group on
   * @grp:	The attribute group to update
@@@ -183,6 -225,26 +220,29 @@@ void sysfs_remove_group(struct kobject 
  EXPORT_SYMBOL_GPL(sysfs_remove_group);
  
  /**
++<<<<<<< HEAD
++=======
+  * sysfs_remove_groups - remove a list of groups
+  *
+  * @kobj:	The kobject for the groups to be removed from
+  * @groups:	NULL terminated list of groups to be removed
+  *
+  * If groups is not NULL, remove the specified groups from the kobject.
+  */
+ void sysfs_remove_groups(struct kobject *kobj,
+ 			 const struct attribute_group **groups)
+ {
+ 	int i;
+ 
+ 	if (!groups)
+ 		return;
+ 	for (i = 0; groups[i]; i++)
+ 		sysfs_remove_group(kobj, groups[i]);
+ }
+ EXPORT_SYMBOL_GPL(sysfs_remove_groups);
+ 
+ /**
++>>>>>>> 09239ed4aa99 (sysfs: group.c: fix up kerneldoc)
   * sysfs_merge_group - merge files into a pre-existing attribute group.
   * @kobj:	The kobject containing the group.
   * @grp:	The files to create and the attribute group they belong to.
* Unmerged path fs/sysfs/group.c
