PCI: Rename PCI_VC_PORT_REG1/2 to PCI_VC_PORT_CAP1/2

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [pci] Rename PCI_VC_PORT_REG1/2 to PCI_VC_PORT_CAP1/2 (Alex Williamson) [1053168]
Rebuild_FUZZ: 94.95%
commit-author Alex Williamson <alex.williamson@redhat.com>
commit 274127a1fdbad3c0d64e813521f4a0ef96cfc70e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/274127a1.failed

These are set of two capability registers, it's pretty much given that
they're registers, so reflect their purpose in the name.

	Suggested-by: Bjorn Helgaas <bhelgaas@google.com>
	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 274127a1fdbad3c0d64e813521f4a0ef96cfc70e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/vc.c
#	include/uapi/linux/pci_regs.h
diff --cc include/uapi/linux/pci_regs.h
index 0890556f779e,d0160cc83fcf..000000000000
--- a/include/uapi/linux/pci_regs.h
+++ b/include/uapi/linux/pci_regs.h
@@@ -677,17 -677,34 +677,29 @@@
  #define PCI_ERR_ROOT_ERR_SRC	52	/* Error Source Identification */
  
  /* Virtual Channel */
++<<<<<<< HEAD
 +#define PCI_VC_PORT_REG1	4
 +#define  PCI_VC_REG1_EVCC	0x7	/* extended vc count */
 +#define PCI_VC_PORT_REG2	8
 +#define  PCI_VC_REG2_32_PHASE	0x2
 +#define  PCI_VC_REG2_64_PHASE	0x4
 +#define  PCI_VC_REG2_128_PHASE	0x8
++=======
+ #define PCI_VC_PORT_CAP1	4
+ #define  PCI_VC_CAP1_EVCC	0x00000007	/* extended VC count */
+ #define  PCI_VC_CAP1_LPEVCC	0x00000070	/* low prio extended VC count */
+ #define  PCI_VC_CAP1_ARB_SIZE	0x00000c00
+ #define PCI_VC_PORT_CAP2	8
+ #define  PCI_VC_CAP2_32_PHASE		0x00000002
+ #define  PCI_VC_CAP2_64_PHASE		0x00000004
+ #define  PCI_VC_CAP2_128_PHASE		0x00000008
+ #define  PCI_VC_CAP2_ARB_OFF		0xff000000
++>>>>>>> 274127a1fdba (PCI: Rename PCI_VC_PORT_REG1/2 to PCI_VC_PORT_CAP1/2)
  #define PCI_VC_PORT_CTRL	12
 -#define  PCI_VC_PORT_CTRL_LOAD_TABLE	0x00000001
  #define PCI_VC_PORT_STATUS	14
 -#define  PCI_VC_PORT_STATUS_TABLE	0x00000001
  #define PCI_VC_RES_CAP		16
 -#define  PCI_VC_RES_CAP_32_PHASE	0x00000002
 -#define  PCI_VC_RES_CAP_64_PHASE	0x00000004
 -#define  PCI_VC_RES_CAP_128_PHASE	0x00000008
 -#define  PCI_VC_RES_CAP_128_PHASE_TB	0x00000010
 -#define  PCI_VC_RES_CAP_256_PHASE	0x00000020
 -#define  PCI_VC_RES_CAP_ARB_OFF		0xff000000
  #define PCI_VC_RES_CTRL		20
 -#define  PCI_VC_RES_CTRL_LOAD_TABLE	0x00010000
 -#define  PCI_VC_RES_CTRL_ARB_SELECT	0x000e0000
 -#define  PCI_VC_RES_CTRL_ID		0x07000000
 -#define  PCI_VC_RES_CTRL_ENABLE		0x80000000
  #define PCI_VC_RES_STATUS	26
 -#define  PCI_VC_RES_STATUS_TABLE	0x00000001
 -#define  PCI_VC_RES_STATUS_NEGO		0x00000002
  #define PCI_CAP_VC_BASE_SIZEOF		0x10
  #define PCI_CAP_VC_PER_VC_SIZEOF	0x0C
  
* Unmerged path drivers/pci/vc.c
* Unmerged path drivers/pci/vc.c
diff --git a/drivers/vfio/pci/vfio_pci_config.c b/drivers/vfio/pci/vfio_pci_config.c
index ffd0632c3cbc..83cd1574c810 100644
--- a/drivers/vfio/pci/vfio_pci_config.c
+++ b/drivers/vfio/pci/vfio_pci_config.c
@@ -975,20 +975,20 @@ static int vfio_vc_cap_len(struct vfio_pci_device *vdev, u16 pos)
 	int ret, evcc, phases, vc_arb;
 	int len = PCI_CAP_VC_BASE_SIZEOF;
 
-	ret = pci_read_config_dword(pdev, pos + PCI_VC_PORT_REG1, &tmp);
+	ret = pci_read_config_dword(pdev, pos + PCI_VC_PORT_CAP1, &tmp);
 	if (ret)
 		return pcibios_err_to_errno(ret);
 
-	evcc = tmp & PCI_VC_REG1_EVCC; /* extended vc count */
-	ret = pci_read_config_dword(pdev, pos + PCI_VC_PORT_REG2, &tmp);
+	evcc = tmp & PCI_VC_CAP1_EVCC; /* extended vc count */
+	ret = pci_read_config_dword(pdev, pos + PCI_VC_PORT_CAP2, &tmp);
 	if (ret)
 		return pcibios_err_to_errno(ret);
 
-	if (tmp & PCI_VC_REG2_128_PHASE)
+	if (tmp & PCI_VC_CAP2_128_PHASE)
 		phases = 128;
-	else if (tmp & PCI_VC_REG2_64_PHASE)
+	else if (tmp & PCI_VC_CAP2_64_PHASE)
 		phases = 64;
-	else if (tmp & PCI_VC_REG2_32_PHASE)
+	else if (tmp & PCI_VC_CAP2_32_PHASE)
 		phases = 32;
 	else
 		phases = 0;
* Unmerged path include/uapi/linux/pci_regs.h
