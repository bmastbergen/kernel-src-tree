KEYS: Make BIG_KEYS boolean

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Josh Boyer <jwboyer@redhat.com>
commit 2eaf6b5dcafda2b8c22930eff7f48a364fce1741
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/2eaf6b5d.failed

Having the big_keys functionality as a module is very marginally useful.
The userspace code that would use this functionality will get odd error
messages from the keys layer if the module isn't loaded.  The code itself
is fairly small, so just have this as a boolean option and not a tristate.

	Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org>
	Signed-off-by: David Howells <dhowells@redhat.com>
(cherry picked from commit 2eaf6b5dcafda2b8c22930eff7f48a364fce1741)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/keys/Kconfig
diff --cc security/keys/Kconfig
index a90d6d300dbd,a4f3f8c48d6e..000000000000
--- a/security/keys/Kconfig
+++ b/security/keys/Kconfig
@@@ -19,6 -20,34 +19,37 @@@ config KEY
  
  	  If you are unsure as to whether this is required, answer N.
  
++<<<<<<< HEAD
++=======
+ config PERSISTENT_KEYRINGS
+ 	bool "Enable register of persistent per-UID keyrings"
+ 	depends on KEYS
+ 	help
+ 	  This option provides a register of persistent per-UID keyrings,
+ 	  primarily aimed at Kerberos key storage.  The keyrings are persistent
+ 	  in the sense that they stay around after all processes of that UID
+ 	  have exited, not that they survive the machine being rebooted.
+ 
+ 	  A particular keyring may be accessed by either the user whose keyring
+ 	  it is or by a process with administrative privileges.  The active
+ 	  LSMs gets to rule on which admin-level processes get to access the
+ 	  cache.
+ 
+ 	  Keyrings are created and added into the register upon demand and get
+ 	  removed if they expire (a default timeout is set upon creation).
+ 
+ config BIG_KEYS
+ 	bool "Large payload keys"
+ 	depends on KEYS
+ 	depends on TMPFS
+ 	help
+ 	  This option provides support for holding large keys within the kernel
+ 	  (for example Kerberos ticket caches).  The data may be stored out to
+ 	  swapspace by tmpfs.
+ 
+ 	  If you are unsure as to whether this is required, answer N.
+ 
++>>>>>>> 2eaf6b5dcafd (KEYS: Make BIG_KEYS boolean)
  config TRUSTED_KEYS
  	tristate "TRUSTED KEYS"
  	depends on KEYS && TCG_TPM
* Unmerged path security/keys/Kconfig
