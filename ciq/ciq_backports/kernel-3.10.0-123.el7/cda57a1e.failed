nfs: set verifier on existing dentries in nfs_prime_dcache

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Jeff Layton <jlayton@redhat.com>
commit cda57a1ef6f0da7e24f392ffdf00538ec0480310
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/cda57a1e.failed

nfs_prime_dcache currently only sets the verifier when it doesn't
initially a matching dentry in the dcache. Set the verifier in the case
where we do find a dentry in the dcache. This ensures that we don't
have to look up the dentry again if we want to use it after a readdir.

	Cc: Scott Mayhew <smayhew@redhat.com>
	Signed-off-by: Jeff Layton <jlayton@redhat.com>
	Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
(cherry picked from commit cda57a1ef6f0da7e24f392ffdf00538ec0480310)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/dir.c
diff --cc fs/nfs/dir.c
index c662ff6befd6,bd7e1cc53b90..000000000000
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@@ -447,7 -450,10 +447,14 @@@ void nfs_prime_dcache(struct dentry *pa
  	dentry = d_lookup(parent, &filename);
  	if (dentry != NULL) {
  		if (nfs_same_file(dentry, entry)) {
++<<<<<<< HEAD
 +			nfs_refresh_inode(dentry->d_inode, entry->fattr);
++=======
+ 			nfs_set_verifier(dentry, nfs_save_change_attribute(dir));
+ 			status = nfs_refresh_inode(dentry->d_inode, entry->fattr);
+ 			if (!status)
+ 				nfs_setsecurity(dentry->d_inode, entry->fattr, entry->label);
++>>>>>>> cda57a1ef6f0 (nfs: set verifier on existing dentries in nfs_prime_dcache)
  			goto out;
  		} else {
  			if (d_invalidate(dentry) != 0)
* Unmerged path fs/nfs/dir.c
