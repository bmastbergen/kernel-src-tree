xfs: reinstate the ilock in xfs_readdir

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Ben Myers <bpm@sgi.com>
commit 40194ecc6d78327d98e66de3213db96ca0a31e6f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/40194ecc.failed

Although it was removed in commit 051e7cd44ab8, ilock needs to be taken in
xfs_readdir because we might have to read the extent list in from disk.  This
keeps other threads from reading from or writing to the extent list while it is
being read in and is still in a transitional state.

This has been associated with "Access to block zero" messages on directories
with large numbers of extents resulting from excessive filesytem fragmentation,
as well as extent list corruption.  Unfortunately no test case at this point.

	Signed-off-by: Ben Myers <bpm@sgi.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>

(cherry picked from commit 40194ecc6d78327d98e66de3213db96ca0a31e6f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_dir2_readdir.c
* Unmerged path fs/xfs/xfs_dir2_readdir.c
* Unmerged path fs/xfs/xfs_dir2_readdir.c
