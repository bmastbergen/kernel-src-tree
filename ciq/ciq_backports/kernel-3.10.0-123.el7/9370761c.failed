netfilter: nf_tables: convert built-in tables/chains to chain types

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 9370761c56b66aa5c65e069a7b010111a025018d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/9370761c.failed

This patch converts built-in tables/chains to chain types that
allows you to deploy customized table and chain configurations from
userspace.

After this patch, you have to specify the chain type when
creating a new chain:

 add chain ip filter output { type filter hook input priority 0; }
                              ^^^^ ------

The existing chain types after this patch are: filter, route and
nat. Note that tables are just containers of chains with no specific
semantics, which is a significant change with regards to iptables.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 9370761c56b66aa5c65e069a7b010111a025018d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/netfilter/nf_tables.h
#	include/uapi/linux/netfilter/nf_tables.h
#	net/ipv4/netfilter/Kconfig
#	net/ipv4/netfilter/Makefile
#	net/ipv4/netfilter/nf_tables_ipv4.c
#	net/ipv4/netfilter/nft_chain_nat_ipv4.c
#	net/ipv4/netfilter/nft_chain_route_ipv4.c
#	net/ipv6/netfilter/Kconfig
#	net/ipv6/netfilter/Makefile
#	net/ipv6/netfilter/nf_tables_ipv6.c
#	net/ipv6/netfilter/nft_chain_route_ipv6.c
#	net/netfilter/nf_tables_api.c
diff --cc net/ipv4/netfilter/Kconfig
index e7916c193932,ae65fe98bfbe..000000000000
--- a/net/ipv4/netfilter/Kconfig
+++ b/net/ipv4/netfilter/Kconfig
@@@ -36,6 -36,22 +36,25 @@@ config NF_CONNTRACK_PROC_COMPA
  
  	  If unsure, say Y.
  
++<<<<<<< HEAD
++=======
+ config NF_TABLES_IPV4
+ 	depends on NF_TABLES
+ 	tristate "IPv4 nf_tables support"
+ 
+ config NFT_REJECT_IPV4
+ 	depends on NF_TABLES_IPV4
+ 	tristate "nf_tables IPv4 reject support"
+ 
+ config NFT_CHAIN_ROUTE_IPV4
+ 	depends on NF_TABLES_IPV4
+ 	tristate "IPv4 nf_tables route chain support"
+ 
+ config NFT_CHAIN_NAT_IPV4
+ 	depends on NF_TABLES_IPV4
+ 	tristate "IPv4 nf_tables nat chain support"
+ 
++>>>>>>> 9370761c56b6 (netfilter: nf_tables: convert built-in tables/chains to chain types)
  config IP_NF_IPTABLES
  	tristate "IP tables support (required for filtering/masq/NAT)"
  	default m if NETFILTER_ADVANCED=n
diff --cc net/ipv4/netfilter/Makefile
index 007b128eecc9,91e0bd71a6d3..000000000000
--- a/net/ipv4/netfilter/Makefile
+++ b/net/ipv4/netfilter/Makefile
@@@ -27,6 -27,11 +27,14 @@@ obj-$(CONFIG_NF_NAT_SNMP_BASIC) += nf_n
  # NAT protocols (nf_nat)
  obj-$(CONFIG_NF_NAT_PROTO_GRE) += nf_nat_proto_gre.o
  
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_NF_TABLES_IPV4) += nf_tables_ipv4.o
+ obj-$(CONFIG_NFT_REJECT_IPV4) += nft_reject_ipv4.o
+ obj-$(CONFIG_NFT_CHAIN_ROUTE_IPV4) += nft_chain_route_ipv4.o
+ obj-$(CONFIG_NFT_CHAIN_NAT_IPV4) += nft_chain_nat_ipv4.o
+ 
++>>>>>>> 9370761c56b6 (netfilter: nf_tables: convert built-in tables/chains to chain types)
  # generic IP tables 
  obj-$(CONFIG_IP_NF_IPTABLES) += ip_tables.o
  
diff --cc net/ipv6/netfilter/Kconfig
index a7f842b29b67,23833064b7b5..000000000000
--- a/net/ipv6/netfilter/Kconfig
+++ b/net/ipv6/netfilter/Kconfig
@@@ -25,6 -25,14 +25,17 @@@ config NF_CONNTRACK_IPV
  
  	  To compile it as a module, choose M here.  If unsure, say N.
  
++<<<<<<< HEAD
++=======
+ config NF_TABLES_IPV6
+ 	depends on NF_TABLES
+ 	tristate "IPv6 nf_tables support"
+ 
+ config NFT_CHAIN_ROUTE_IPV6
+ 	depends on NF_TABLES_IPV6
+ 	tristate "IPv6 nf_tables route chain support"
+ 
++>>>>>>> 9370761c56b6 (netfilter: nf_tables: convert built-in tables/chains to chain types)
  config IP6_NF_IPTABLES
  	tristate "IP6 tables support (required for filtering)"
  	depends on INET && IPV6
diff --cc net/ipv6/netfilter/Makefile
index 2b53738f798c,be4913aa524d..000000000000
--- a/net/ipv6/netfilter/Makefile
+++ b/net/ipv6/netfilter/Makefile
@@@ -23,6 -23,10 +23,13 @@@ obj-$(CONFIG_NF_NAT_IPV6) += nf_nat_ipv
  nf_defrag_ipv6-y := nf_defrag_ipv6_hooks.o nf_conntrack_reasm.o
  obj-$(CONFIG_NF_DEFRAG_IPV6) += nf_defrag_ipv6.o
  
++<<<<<<< HEAD
++=======
+ # nf_tables
+ obj-$(CONFIG_NF_TABLES_IPV6) += nf_tables_ipv6.o
+ obj-$(CONFIG_NFT_CHAIN_ROUTE_IPV6) += nft_chain_route_ipv6.o
+ 
++>>>>>>> 9370761c56b6 (netfilter: nf_tables: convert built-in tables/chains to chain types)
  # matches
  obj-$(CONFIG_IP6_NF_MATCH_AH) += ip6t_ah.o
  obj-$(CONFIG_IP6_NF_MATCH_EUI64) += ip6t_eui64.o
* Unmerged path include/net/netfilter/nf_tables.h
* Unmerged path include/uapi/linux/netfilter/nf_tables.h
* Unmerged path net/ipv4/netfilter/nf_tables_ipv4.c
* Unmerged path net/ipv4/netfilter/nft_chain_nat_ipv4.c
* Unmerged path net/ipv4/netfilter/nft_chain_route_ipv4.c
* Unmerged path net/ipv6/netfilter/nf_tables_ipv6.c
* Unmerged path net/ipv6/netfilter/nft_chain_route_ipv6.c
* Unmerged path net/netfilter/nf_tables_api.c
* Unmerged path include/net/netfilter/nf_tables.h
* Unmerged path include/uapi/linux/netfilter/nf_tables.h
* Unmerged path net/ipv4/netfilter/Kconfig
* Unmerged path net/ipv4/netfilter/Makefile
* Unmerged path net/ipv4/netfilter/nf_tables_ipv4.c
* Unmerged path net/ipv4/netfilter/nft_chain_nat_ipv4.c
* Unmerged path net/ipv4/netfilter/nft_chain_route_ipv4.c
* Unmerged path net/ipv6/netfilter/Kconfig
* Unmerged path net/ipv6/netfilter/Makefile
* Unmerged path net/ipv6/netfilter/nf_tables_ipv6.c
* Unmerged path net/ipv6/netfilter/nft_chain_route_ipv6.c
* Unmerged path net/netfilter/nf_tables_api.c
