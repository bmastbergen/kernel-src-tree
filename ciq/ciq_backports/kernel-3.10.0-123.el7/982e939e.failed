xfs: use xfs_icluster_size_fsb in xfs_ifree_cluster

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Jie Liu <jeff.liu@oracle.com>
commit 982e939e4ddc8c00cb478fb4d725d0e3d18971cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/982e939e.failed

Use xfs_icluster_size_fsb() in xfs_ifree_cluster(), rename variable
ninodes to inodes_per_cluster, the latter is more meaningful.

	Signed-off-by: Jie Liu <jeff.liu@oracle.com>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>
(cherry picked from commit 982e939e4ddc8c00cb478fb4d725d0e3d18971cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_inode.c
diff --cc fs/xfs/xfs_inode.c
index a18b684cea27,833028cf205f..000000000000
--- a/fs/xfs/xfs_inode.c
+++ b/fs/xfs/xfs_inode.c
@@@ -1051,18 -2152,11 +1051,24 @@@ xfs_ifree_cluster
  	struct xfs_perag	*pag;
  
  	pag = xfs_perag_get(mp, XFS_INO_TO_AGNO(mp, inum));
++<<<<<<< HEAD
 +	if (mp->m_sb.sb_blocksize >= XFS_INODE_CLUSTER_SIZE(mp)) {
 +		blks_per_cluster = 1;
 +		ninodes = mp->m_sb.sb_inopblock;
 +		nbufs = XFS_IALLOC_BLOCKS(mp);
 +	} else {
 +		blks_per_cluster = XFS_INODE_CLUSTER_SIZE(mp) /
 +					mp->m_sb.sb_blocksize;
 +		ninodes = blks_per_cluster * mp->m_sb.sb_inopblock;
 +		nbufs = XFS_IALLOC_BLOCKS(mp) / blks_per_cluster;
 +	}
++=======
+ 	blks_per_cluster = xfs_icluster_size_fsb(mp);
+ 	inodes_per_cluster = blks_per_cluster << mp->m_sb.sb_inopblog;
+ 	nbufs = mp->m_ialloc_blks / blks_per_cluster;
++>>>>>>> 982e939e4ddc (xfs: use xfs_icluster_size_fsb in xfs_ifree_cluster)
  
- 	for (j = 0; j < nbufs; j++, inum += ninodes) {
+ 	for (j = 0; j < nbufs; j++, inum += inodes_per_cluster) {
  		blkno = XFS_AGB_TO_DADDR(mp, XFS_INO_TO_AGNO(mp, inum),
  					 XFS_INO_TO_AGBNO(mp, inum));
  
* Unmerged path fs/xfs/xfs_inode.c
