powerpc/powernv: Replace variables with flags

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [powerpc] powernv: Replace variables with flags (Steve Best) [1033086]
Rebuild_FUZZ: 90.24%
commit-author Gavin Shan <shangw@linux.vnet.ibm.com>
commit 0b9e267d71d2e74d1108785928fd8c8c9dbf441e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/0b9e267d.failed

We have 2 fields in "struct pnv_phb" to trace the states. The patch
replace the fields with one and introduces flags for that. The patch
doesn't impact the logic.

	Signed-off-by: Gavin Shan <shangw@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit 0b9e267d71d2e74d1108785928fd8c8c9dbf441e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/eeh-ioda.c
#	arch/powerpc/platforms/powernv/pci.h
diff --cc arch/powerpc/platforms/powernv/pci.h
index 25d76c4df50b,40bdf0219b96..000000000000
--- a/arch/powerpc/platforms/powernv/pci.h
+++ b/arch/powerpc/platforms/powernv/pci.h
@@@ -66,6 -66,24 +66,27 @@@ struct pnv_ioda_pe 
  	struct list_head	list;
  };
  
++<<<<<<< HEAD
++=======
+ /* IOC dependent EEH operations */
+ #ifdef CONFIG_EEH
+ struct pnv_eeh_ops {
+ 	int (*post_init)(struct pci_controller *hose);
+ 	int (*set_option)(struct eeh_pe *pe, int option);
+ 	int (*get_state)(struct eeh_pe *pe);
+ 	int (*reset)(struct eeh_pe *pe, int option);
+ 	int (*get_log)(struct eeh_pe *pe, int severity,
+ 		       char *drv_log, unsigned long len);
+ 	int (*configure_bridge)(struct eeh_pe *pe);
+ 	int (*next_error)(struct eeh_pe **pe);
+ };
+ 
+ #define PNV_EEH_STATE_ENABLED	(1 << 0)	/* EEH enabled	*/
+ #define PNV_EEH_STATE_REMOVED	(1 << 1)	/* PHB removed	*/
+ 
+ #endif /* CONFIG_EEH */
+ 
++>>>>>>> 0b9e267d71d2 (powerpc/powernv: Replace variables with flags)
  struct pnv_phb {
  	struct pci_controller	*hose;
  	enum pnv_phb_type	type;
@@@ -75,6 -94,15 +96,18 @@@
  	int			initialized;
  	spinlock_t		lock;
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_EEH
+ 	struct pnv_eeh_ops	*eeh_ops;
+ 	int			eeh_state;
+ #endif
+ 
+ #ifdef CONFIG_DEBUG_FS
+ 	struct dentry		*dbgfs;
+ #endif
+ 
++>>>>>>> 0b9e267d71d2 (powerpc/powernv: Replace variables with flags)
  #ifdef CONFIG_PCI_MSI
  	unsigned int		msi_base;
  	unsigned int		msi32_support;
* Unmerged path arch/powerpc/platforms/powernv/eeh-ioda.c
* Unmerged path arch/powerpc/platforms/powernv/eeh-ioda.c
diff --git a/arch/powerpc/platforms/powernv/pci.c b/arch/powerpc/platforms/powernv/pci.c
index 6d9a506b541a..1f3182646a21 100644
--- a/arch/powerpc/platforms/powernv/pci.c
+++ b/arch/powerpc/platforms/powernv/pci.c
@@ -308,7 +308,7 @@ static int pnv_pci_read_config(struct pci_bus *bus,
 	if (phb_pe && (phb_pe->state & EEH_PE_ISOLATED))
 		return PCIBIOS_SUCCESSFUL;
 
-	if (phb->eeh_enabled) {
+	if (phb->eeh_state & PNV_EEH_STATE_ENABLED) {
 		if (*val == EEH_IO_ERROR_VALUE(size)) {
 			busdn = pci_bus_to_OF_node(bus);
 			for (dn = busdn->child; dn; dn = dn->sibling) {
@@ -358,7 +358,7 @@ static int pnv_pci_write_config(struct pci_bus *bus,
 
 	/* Check if the PHB got frozen due to an error (no response) */
 #ifdef CONFIG_EEH
-	if (!phb->eeh_enabled)
+	if (!(phb->eeh_state & PNV_EEH_STATE_ENABLED))
 		pnv_pci_config_check_eeh(phb, bus, bdfn);
 #else
 	pnv_pci_config_check_eeh(phb, bus, bdfn);
* Unmerged path arch/powerpc/platforms/powernv/pci.h
