cxgb3: Correct comparisons and calculations using skb->tail and skb-transport_header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Simon Horman <horms@verge.net.au>
commit be8b678c6c63010cd2b0f4f602bd3066f7827fb2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/be8b678c.failed

This corrects an regression introduced by "net: Use 16bits for *_headers
fields of struct skbuff" when NET_SKBUFF_DATA_USES_OFFSET is not set. In
that case skb->tail will be a pointer whereas skb->transport_header
will be an offset from head. This is corrected by using wrappers that
ensure that comparisons and calculations are always made using pointers.

	Signed-off-by: Simon Horman <horms@verge.net.au>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit be8b678c6c63010cd2b0f4f602bd3066f7827fb2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/chelsio/cxgb3/sge.c
diff --cc drivers/net/ethernet/chelsio/cxgb3/sge.c
index f12e6b85a653,46d1efc17527..000000000000
--- a/drivers/net/ethernet/chelsio/cxgb3/sge.c
+++ b/drivers/net/ethernet/chelsio/cxgb3/sge.c
@@@ -1599,9 -1645,9 +1598,15 @@@ static void write_ofld_wr(struct adapte
  
  	flits = skb_transport_offset(skb) / 8;
  	sgp = ndesc == 1 ? (struct sg_ent *)&d->flit[flits] : sgl;
++<<<<<<< HEAD
 +	sgl_flits = make_sgl(skb, sgp, skb_transport_header(skb),
 +			     skb->tail - skb->transport_header,
 +			     adap->pdev);
++=======
+ 	sgl_flits = write_sgl(skb, sgp, skb_transport_header(skb),
+ 			     skb_tail_pointer(skb) -
+ 			     skb_transport_header(skb), addr);
++>>>>>>> be8b678c6c63 (cxgb3: Correct comparisons and calculations using skb->tail and skb-transport_header)
  	if (need_skb_unmap()) {
  		setup_deferred_unmapping(skb, adap->pdev, sgp, sgl_flits);
  		skb->destructor = deferred_unmap_destructor;
* Unmerged path drivers/net/ethernet/chelsio/cxgb3/sge.c
