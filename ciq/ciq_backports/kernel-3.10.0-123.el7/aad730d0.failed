ALSA: hda - Always do delayed probes for HD-audio devices

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [alsa] hda: Always do delayed probes for HD-audio devices (Jaroslav Kysela) [1044022]
Rebuild_FUZZ: 91.59%
commit-author Takashi Iwai <tiwai@suse.de>
commit aad730d0704545ad97654bd929b0aba05adb1436
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/aad730d0.failed

HD-audio devices tend to take long time for finishing the whole
probing procedure.  In this patch, the time-consuming part of the
probing procedure, the codec probe and the rest initializations, are
moved in the work, so that they can be done asynchronously in parallel
with probes of other devices.

Since we already have this mechanism in the driver code for the
firmware and i915 request_symbol() stuff, we just need to enable it
always; the resultant patch even reduces more lines, which is an
additional bonus.

Credit goes to David Henningsson, who suggested this workaround.

	Reported-by: Mengdong Lin <mengdong.lin@intel.com>
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit aad730d0704545ad97654bd929b0aba05adb1436)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/pci/hda/hda_intel.c
diff --cc sound/pci/hda/hda_intel.c
index c89d856fb07f,80c5f14e8ecd..000000000000
--- a/sound/pci/hda/hda_intel.c
+++ b/sound/pci/hda/hda_intel.c
@@@ -542,6 -543,8 +542,11 @@@ struct azx 
  	/* for pending irqs */
  	struct work_struct irq_pending_work;
  
++<<<<<<< HEAD
++=======
+ 	struct work_struct probe_work;
+ 
++>>>>>>> aad730d07045 (ALSA: hda - Always do delayed probes for HD-audio devices)
  	/* reboot notifier (for mysterious hangup problem at power-down) */
  	struct notifier_block reboot_notifier;
  
@@@ -3417,6 -3498,11 +3422,14 @@@ static void azx_check_snoop_available(s
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void azx_probe_work(struct work_struct *work)
+ {
+ 	azx_probe_continue(container_of(work, struct azx, probe_work));
+ }
+ 
++>>>>>>> aad730d07045 (ALSA: hda - Always do delayed probes for HD-audio devices)
  /*
   * constructor
   */
@@@ -3492,7 -3578,11 +3505,13 @@@ static int azx_create(struct snd_card *
  		return err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	/* continue probing in work context as may trigger request module */
+ 	INIT_WORK(&chip->probe_work, azx_probe_work);
+ 
++>>>>>>> aad730d07045 (ALSA: hda - Always do delayed probes for HD-audio devices)
  	*rchip = chip;
 -
  	return 0;
  }
  
@@@ -3763,14 -3853,13 +3782,24 @@@ static int azx_probe(struct pci_dev *pc
  	}
  #endif /* CONFIG_SND_HDA_PATCH_LOADER */
  
++<<<<<<< HEAD
 +	if (probe_now) {
 +		err = azx_probe_continue(chip);
 +		if (err < 0)
 +			goto out_free;
 +	}
++=======
+ #ifndef CONFIG_SND_HDA_I915
+ 	if (chip->driver_caps & AZX_DCAPS_I915_POWERWELL)
+ 		snd_printk(KERN_ERR SFX "Haswell must build in CONFIG_SND_HDA_I915\n");
+ #endif
+ 
+ 	if (schedule_probe)
+ 		schedule_work(&chip->probe_work);
++>>>>>>> aad730d07045 (ALSA: hda - Always do delayed probes for HD-audio devices)
 +
 +	if (pci_dev_run_wake(pci))
 +		pm_runtime_put_noidle(&pci->dev);
  
  	dev++;
  	if (chip->disabled)
* Unmerged path sound/pci/hda/hda_intel.c
