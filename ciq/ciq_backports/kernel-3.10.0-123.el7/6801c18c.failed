drm/i915: Add HSW CRT output readout support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [drm] i915: Add HSW CRT output readout support (Rob Clark) [1054409]
Rebuild_FUZZ: 95.24%
commit-author Ville Syrj채l채 <ville.syrjala@linux.intel.com>
commit 6801c18c0a43386bb44712cbc028a7e05adb9f0d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/6801c18c.failed

Call intel_ddi_get_config() to get the pipe_bpp settings from
DDI.

The sync polarity settings from DDI are irrelevant for CRT
output, so override them with data from the ADPA register.

v2: Extract intel_crt_get_flags()

Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=69691
	Tested-by: Qingshuai Tian <qingshuai.tian@intel.com>
	Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
(cherry picked from commit 6801c18c0a43386bb44712cbc028a7e05adb9f0d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/intel_crt.c
#	drivers/gpu/drm/i915/intel_ddi.c
#	drivers/gpu/drm/i915/intel_drv.h
diff --cc drivers/gpu/drm/i915/intel_crt.c
index 58b4a53715cd,019c4cea7bb0..000000000000
--- a/drivers/gpu/drm/i915/intel_crt.c
+++ b/drivers/gpu/drm/i915/intel_crt.c
@@@ -84,6 -83,55 +84,58 @@@ static bool intel_crt_get_hw_state(stru
  	return true;
  }
  
++<<<<<<< HEAD
++=======
+ static unsigned int intel_crt_get_flags(struct intel_encoder *encoder)
+ {
+ 	struct drm_i915_private *dev_priv = encoder->base.dev->dev_private;
+ 	struct intel_crt *crt = intel_encoder_to_crt(encoder);
+ 	u32 tmp, flags = 0;
+ 
+ 	tmp = I915_READ(crt->adpa_reg);
+ 
+ 	if (tmp & ADPA_HSYNC_ACTIVE_HIGH)
+ 		flags |= DRM_MODE_FLAG_PHSYNC;
+ 	else
+ 		flags |= DRM_MODE_FLAG_NHSYNC;
+ 
+ 	if (tmp & ADPA_VSYNC_ACTIVE_HIGH)
+ 		flags |= DRM_MODE_FLAG_PVSYNC;
+ 	else
+ 		flags |= DRM_MODE_FLAG_NVSYNC;
+ 
+ 	return flags;
+ }
+ 
+ static void intel_crt_get_config(struct intel_encoder *encoder,
+ 				 struct intel_crtc_config *pipe_config)
+ {
+ 	struct drm_device *dev = encoder->base.dev;
+ 	int dotclock;
+ 
+ 	pipe_config->adjusted_mode.flags |= intel_crt_get_flags(encoder);
+ 
+ 	dotclock = pipe_config->port_clock;
+ 
+ 	if (HAS_PCH_SPLIT(dev))
+ 		ironlake_check_encoder_dotclock(pipe_config, dotclock);
+ 
+ 	pipe_config->adjusted_mode.clock = dotclock;
+ }
+ 
+ static void hsw_crt_get_config(struct intel_encoder *encoder,
+ 			       struct intel_crtc_config *pipe_config)
+ {
+ 	intel_ddi_get_config(encoder, pipe_config);
+ 
+ 	pipe_config->adjusted_mode.flags &= ~(DRM_MODE_FLAG_PHSYNC |
+ 					      DRM_MODE_FLAG_NHSYNC |
+ 					      DRM_MODE_FLAG_PVSYNC |
+ 					      DRM_MODE_FLAG_NVSYNC);
+ 	pipe_config->adjusted_mode.flags |= intel_crt_get_flags(encoder);
+ }
+ 
++>>>>>>> 6801c18c0a43 (drm/i915: Add HSW CRT output readout support)
  /* Note: The caller is required to filter out dpms modes not supported by the
   * platform. */
  static void intel_crt_set_dpms(struct intel_encoder *encoder, int mode)
@@@ -772,8 -820,13 +824,15 @@@ void intel_crt_init(struct drm_device *
  		crt->adpa_reg = ADPA;
  
  	crt->base.compute_config = intel_crt_compute_config;
 -	crt->base.mode_set = intel_crt_mode_set;
  	crt->base.disable = intel_disable_crt;
  	crt->base.enable = intel_enable_crt;
++<<<<<<< HEAD
++=======
+ 	if (IS_HASWELL(dev))
+ 		crt->base.get_config = hsw_crt_get_config;
+ 	else
+ 		crt->base.get_config = intel_crt_get_config;
++>>>>>>> 6801c18c0a43 (drm/i915: Add HSW CRT output readout support)
  	if (I915_HAS_HOTPLUG(dev))
  		crt->base.hpd_pin = HPD_CRT;
  	if (HAS_DDI(dev))
diff --cc drivers/gpu/drm/i915/intel_ddi.c
index fb961bb81903,a43ac3a17bdc..000000000000
--- a/drivers/gpu/drm/i915/intel_ddi.c
+++ b/drivers/gpu/drm/i915/intel_ddi.c
@@@ -1472,6 -1269,58 +1472,61 @@@ static void intel_ddi_hot_plug(struct i
  		intel_dp_check_link_status(intel_dp);
  }
  
++<<<<<<< HEAD
++=======
+ void intel_ddi_get_config(struct intel_encoder *encoder,
+ 			  struct intel_crtc_config *pipe_config)
+ {
+ 	struct drm_i915_private *dev_priv = encoder->base.dev->dev_private;
+ 	struct intel_crtc *intel_crtc = to_intel_crtc(encoder->base.crtc);
+ 	enum transcoder cpu_transcoder = intel_crtc->config.cpu_transcoder;
+ 	u32 temp, flags = 0;
+ 
+ 	temp = I915_READ(TRANS_DDI_FUNC_CTL(cpu_transcoder));
+ 	if (temp & TRANS_DDI_PHSYNC)
+ 		flags |= DRM_MODE_FLAG_PHSYNC;
+ 	else
+ 		flags |= DRM_MODE_FLAG_NHSYNC;
+ 	if (temp & TRANS_DDI_PVSYNC)
+ 		flags |= DRM_MODE_FLAG_PVSYNC;
+ 	else
+ 		flags |= DRM_MODE_FLAG_NVSYNC;
+ 
+ 	pipe_config->adjusted_mode.flags |= flags;
+ 
+ 	switch (temp & TRANS_DDI_BPC_MASK) {
+ 	case TRANS_DDI_BPC_6:
+ 		pipe_config->pipe_bpp = 18;
+ 		break;
+ 	case TRANS_DDI_BPC_8:
+ 		pipe_config->pipe_bpp = 24;
+ 		break;
+ 	case TRANS_DDI_BPC_10:
+ 		pipe_config->pipe_bpp = 30;
+ 		break;
+ 	case TRANS_DDI_BPC_12:
+ 		pipe_config->pipe_bpp = 36;
+ 		break;
+ 	default:
+ 		break;
+ 	}
+ 
+ 	switch (temp & TRANS_DDI_MODE_SELECT_MASK) {
+ 	case TRANS_DDI_MODE_SELECT_HDMI:
+ 	case TRANS_DDI_MODE_SELECT_DVI:
+ 	case TRANS_DDI_MODE_SELECT_FDI:
+ 		break;
+ 	case TRANS_DDI_MODE_SELECT_DP_SST:
+ 	case TRANS_DDI_MODE_SELECT_DP_MST:
+ 		pipe_config->has_dp_encoder = true;
+ 		intel_dp_get_m_n(intel_crtc, pipe_config);
+ 		break;
+ 	default:
+ 		break;
+ 	}
+ }
+ 
++>>>>>>> 6801c18c0a43 (drm/i915: Add HSW CRT output readout support)
  static void intel_ddi_destroy(struct drm_encoder *encoder)
  {
  	/* HDMI has nothing special to destroy, so we can go with this. */
diff --cc drivers/gpu/drm/i915/intel_drv.h
index 624a9e6b8d71,e7fe5f1f72df..000000000000
--- a/drivers/gpu/drm/i915/intel_drv.h
+++ b/drivers/gpu/drm/i915/intel_drv.h
@@@ -728,5 -793,42 +728,45 @@@ intel_ddi_connector_get_hw_state(struc
  extern void intel_ddi_fdi_disable(struct drm_crtc *crtc);
  
  extern void intel_display_handle_reset(struct drm_device *dev);
++<<<<<<< HEAD
++=======
+ extern bool intel_set_cpu_fifo_underrun_reporting(struct drm_device *dev,
+ 						  enum pipe pipe,
+ 						  bool enable);
+ extern bool intel_set_pch_fifo_underrun_reporting(struct drm_device *dev,
+ 						 enum transcoder pch_transcoder,
+ 						 bool enable);
+ 
+ extern void intel_edp_psr_enable(struct intel_dp *intel_dp);
+ extern void intel_edp_psr_disable(struct intel_dp *intel_dp);
+ extern void intel_edp_psr_update(struct drm_device *dev);
+ extern void hsw_disable_lcpll(struct drm_i915_private *dev_priv,
+ 			      bool switch_to_fclk, bool allow_power_down);
+ extern void hsw_restore_lcpll(struct drm_i915_private *dev_priv);
+ extern void ilk_enable_gt_irq(struct drm_i915_private *dev_priv, uint32_t mask);
+ extern void ilk_disable_gt_irq(struct drm_i915_private *dev_priv,
+ 			       uint32_t mask);
+ extern void snb_enable_pm_irq(struct drm_i915_private *dev_priv, uint32_t mask);
+ extern void snb_disable_pm_irq(struct drm_i915_private *dev_priv,
+ 			       uint32_t mask);
+ extern void hsw_enable_pc8_work(struct work_struct *__work);
+ extern void hsw_enable_package_c8(struct drm_i915_private *dev_priv);
+ extern void hsw_disable_package_c8(struct drm_i915_private *dev_priv);
+ extern void hsw_pc8_disable_interrupts(struct drm_device *dev);
+ extern void hsw_pc8_restore_interrupts(struct drm_device *dev);
+ extern void intel_aux_display_runtime_get(struct drm_i915_private *dev_priv);
+ extern void intel_aux_display_runtime_put(struct drm_i915_private *dev_priv);
+ extern void intel_dp_get_m_n(struct intel_crtc *crtc,
+ 			     struct intel_crtc_config *pipe_config);
+ extern int intel_dotclock_calculate(int link_freq,
+ 				    const struct intel_link_m_n *m_n);
+ extern void ironlake_check_encoder_dotclock(const struct intel_crtc_config *pipe_config,
+ 					    int dotclock);
+ 
+ extern bool intel_crtc_active(struct drm_crtc *crtc);
+ extern void i915_disable_vga_mem(struct drm_device *dev);
+ extern void intel_ddi_get_config(struct intel_encoder *encoder,
+ 				 struct intel_crtc_config *pipe_config);
++>>>>>>> 6801c18c0a43 (drm/i915: Add HSW CRT output readout support)
  
  #endif /* __INTEL_DRV_H__ */
* Unmerged path drivers/gpu/drm/i915/intel_crt.c
* Unmerged path drivers/gpu/drm/i915/intel_ddi.c
* Unmerged path drivers/gpu/drm/i915/intel_drv.h
