i40e: update firmware api to 1.1

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Shannon Nelson <shannon.nelson@intel.com>
commit 981b75455203a2a3b738deef133f097489243bc0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/981b7545.failed

The firmware's AdminQ interface has matured a little, so update the
code to use the new fields and values.

Change-Id: I8fcd7b443f268dcf9346bd6a9e940fe9c2958891
	Signed-off-by: Shannon Nelson <shannon.nelson@intel.com>
	Tested-by: Kavindya Deegala <kavindya.s.deegala@intel.com>
	Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
(cherry picked from commit 981b75455203a2a3b738deef133f097489243bc0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e_adminq_cmd.h
#	drivers/net/ethernet/intel/i40e/i40e_common.c
diff --cc drivers/net/ethernet/intel/i40e/i40e_adminq_cmd.h
index e61ebdd5a5f9,007508772cf0..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_adminq_cmd.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_adminq_cmd.h
@@@ -1915,10 -1949,18 +1949,25 @@@ I40E_CHECK_CMD_LENGTH(i40e_aqc_lldp_sta
  struct i40e_aqc_add_udp_tunnel {
  	__le16 udp_port;
  	u8     header_len; /* in DWords, 1 to 15 */
++<<<<<<< HEAD
 +	u8     protocol_index;
 +#define I40E_AQC_TUNNEL_TYPE_MAC    0x0
 +#define I40E_AQC_TUNNEL_TYPE_UDP    0x1
 +	u8     reserved[12];
++=======
+ 	u8     protocol_type;
+ #define I40E_AQC_TUNNEL_TYPE_TEREDO	0x0
+ #define I40E_AQC_TUNNEL_TYPE_VXLAN	0x2
+ #define I40E_AQC_TUNNEL_TYPE_NGE	0x3
+ 	u8     variable_udp_length;
+ #define I40E_AQC_TUNNEL_FIXED_UDP_LENGTH	0x0
+ #define I40E_AQC_TUNNEL_VARIABLE_UDP_LENGTH	0x1
+ 	u8     udp_key_index;
+ #define I40E_AQC_TUNNEL_KEY_INDEX_VXLAN			0x0
+ #define I40E_AQC_TUNNEL_KEY_INDEX_NGE			0x1
+ #define I40E_AQC_TUNNEL_KEY_INDEX_PROPRIETARY_UDP	0x2
+ 	u8     reserved[10];
++>>>>>>> 981b75455203 (i40e: update firmware api to 1.1)
  };
  
  I40E_CHECK_CMD_LENGTH(i40e_aqc_add_udp_tunnel);
diff --cc drivers/net/ethernet/intel/i40e/i40e_common.c
index 4e970b00ea1e,96c8f150009e..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_common.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_common.c
@@@ -1715,6 -1715,63 +1715,66 @@@ i40e_status i40e_aq_start_lldp(struct i
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * i40e_aq_add_udp_tunnel
+  * @hw: pointer to the hw struct
+  * @udp_port: the UDP port to add
+  * @header_len: length of the tunneling header length in DWords
+  * @protocol_index: protocol index type
+  * @cmd_details: pointer to command details structure or NULL
+  **/
+ i40e_status i40e_aq_add_udp_tunnel(struct i40e_hw *hw,
+ 				u16 udp_port, u8 header_len,
+ 				u8 protocol_index, u8 *filter_index,
+ 				struct i40e_asq_cmd_details *cmd_details)
+ {
+ 	struct i40e_aq_desc desc;
+ 	struct i40e_aqc_add_udp_tunnel *cmd =
+ 		(struct i40e_aqc_add_udp_tunnel *)&desc.params.raw;
+ 	struct i40e_aqc_del_udp_tunnel_completion *resp =
+ 		(struct i40e_aqc_del_udp_tunnel_completion *)&desc.params.raw;
+ 	i40e_status status;
+ 
+ 	i40e_fill_default_direct_cmd_desc(&desc, i40e_aqc_opc_add_udp_tunnel);
+ 
+ 	cmd->udp_port = cpu_to_le16(udp_port);
+ 	cmd->header_len = header_len;
+ 	cmd->protocol_type = protocol_index;
+ 
+ 	status = i40e_asq_send_command(hw, &desc, NULL, 0, cmd_details);
+ 
+ 	if (!status)
+ 		*filter_index = resp->index;
+ 
+ 	return status;
+ }
+ 
+ /**
+  * i40e_aq_del_udp_tunnel
+  * @hw: pointer to the hw struct
+  * @index: filter index
+  * @cmd_details: pointer to command details structure or NULL
+  **/
+ i40e_status i40e_aq_del_udp_tunnel(struct i40e_hw *hw, u8 index,
+ 				struct i40e_asq_cmd_details *cmd_details)
+ {
+ 	struct i40e_aq_desc desc;
+ 	struct i40e_aqc_remove_udp_tunnel *cmd =
+ 		(struct i40e_aqc_remove_udp_tunnel *)&desc.params.raw;
+ 	i40e_status status;
+ 
+ 	i40e_fill_default_direct_cmd_desc(&desc, i40e_aqc_opc_del_udp_tunnel);
+ 
+ 	cmd->index = index;
+ 
+ 	status = i40e_asq_send_command(hw, &desc, NULL, 0, cmd_details);
+ 
+ 	return status;
+ }
+ 
+ /**
++>>>>>>> 981b75455203 (i40e: update firmware api to 1.1)
   * i40e_aq_delete_element - Delete switch element
   * @hw: pointer to the hw struct
   * @seid: the SEID to delete from the switch
diff --git a/drivers/net/ethernet/intel/i40e/i40e_adminq.c b/drivers/net/ethernet/intel/i40e/i40e_adminq.c
index f75b5733f34c..3ee5323922b4 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_adminq.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_adminq.c
@@ -572,16 +572,18 @@ i40e_status i40e_init_adminq(struct i40e_hw *hw)
 	if (ret_code != I40E_SUCCESS)
 		goto init_adminq_free_arq;
 
-	if (hw->aq.api_maj_ver != I40E_FW_API_VERSION_MAJOR ||
-	    hw->aq.api_min_ver != I40E_FW_API_VERSION_MINOR) {
-		ret_code = I40E_ERR_FIRMWARE_API_VERSION;
-		goto init_adminq_free_arq;
-	}
+	/* get the NVM version info */
 	i40e_read_nvm_word(hw, I40E_SR_NVM_IMAGE_VERSION, &hw->nvm.version);
 	i40e_read_nvm_word(hw, I40E_SR_NVM_EETRACK_LO, &eetrack_lo);
 	i40e_read_nvm_word(hw, I40E_SR_NVM_EETRACK_HI, &eetrack_hi);
 	hw->nvm.eetrack = (eetrack_hi << 16) | eetrack_lo;
 
+	if (hw->aq.api_maj_ver != I40E_FW_API_VERSION_MAJOR ||
+	    hw->aq.api_min_ver > I40E_FW_API_VERSION_MINOR) {
+		ret_code = I40E_ERR_FIRMWARE_API_VERSION;
+		goto init_adminq_free_arq;
+	}
+
 	ret_code = i40e_aq_set_hmc_resource_profile(hw,
 						    I40E_HMC_PROFILE_DEFAULT,
 						    0,
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_adminq_cmd.h
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_common.c
diff --git a/drivers/net/ethernet/intel/i40e/i40e_type.h b/drivers/net/ethernet/intel/i40e/i40e_type.h
index 2a2fb41d23d9..853f495d2411 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_type.h
+++ b/drivers/net/ethernet/intel/i40e/i40e_type.h
@@ -53,9 +53,6 @@
 					 (d) == I40E_QSFP_B_DEVICE_ID  || \
 					 (d) == I40E_QSFP_C_DEVICE_ID)
 
-#define I40E_FW_API_VERSION_MAJOR  0x0001
-#define I40E_FW_API_VERSION_MINOR  0x0000
-
 #define I40E_MAX_VSI_QP			16
 #define I40E_MAX_VF_VSI			3
 #define I40E_MAX_CHAINED_RX_BUFFERS	5
