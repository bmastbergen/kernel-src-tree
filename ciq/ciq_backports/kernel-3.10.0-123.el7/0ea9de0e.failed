sunrpc: turn warn_gssd() log message into a dprintk()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Jeff Layton <jlayton@redhat.com>
commit 0ea9de0ea6a4e4a1d343130b2a159b4f986e288e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/0ea9de0e.failed

The original printk() made sense when the GSSAPI codepaths were called
only when sec=krb5* was explicitly requested. Now however, in many cases
the nfs client will try to acquire GSSAPI credentials by default, even
when it's not requested.

Since we don't have a great mechanism to distinguish between the two
cases, just turn the pr_warn into a dprintk instead. With this change we
can also get rid of the ratelimiting.

We do need to keep the EXPORT_SYMBOL(gssd_running) in place since
auth_gss.ko needs it and sunrpc.ko provides it. We can however,
eliminate the gssd_running call in the nfs code since that's a bit of a
layering violation.

	Signed-off-by: Jeff Layton <jlayton@redhat.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 0ea9de0ea6a4e4a1d343130b2a159b4f986e288e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4client.c
#	net/sunrpc/auth_gss/auth_gss.c
diff --cc fs/nfs/nfs4client.c
index 2b9bfbaab504,dbb3e1f30c68..000000000000
--- a/fs/nfs/nfs4client.c
+++ b/fs/nfs/nfs4client.c
@@@ -370,6 -371,7 +370,10 @@@ struct nfs_client *nfs4_init_client(str
  		__set_bit(NFS_CS_INFINITE_SLOTS, &clp->cl_flags);
  	__set_bit(NFS_CS_DISCRTRY, &clp->cl_flags);
  	__set_bit(NFS_CS_NO_RETRANS_TIMEOUT, &clp->cl_flags);
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> 0ea9de0ea6a4 (sunrpc: turn warn_gssd() log message into a dprintk())
  	error = nfs_create_rpc_client(clp, timeparms, RPC_AUTH_GSS_KRB5I);
  	if (error == -EINVAL)
  		error = nfs_create_rpc_client(clp, timeparms, RPC_AUTH_UNIX);
diff --cc net/sunrpc/auth_gss/auth_gss.c
index f4ce22581ce4,6c0513a7f992..000000000000
--- a/net/sunrpc/auth_gss/auth_gss.c
+++ b/net/sunrpc/auth_gss/auth_gss.c
@@@ -500,14 -532,7 +500,18 @@@ gss_setup_upcall(struct rpc_clnt *clnt
  
  static void warn_gssd(void)
  {
++<<<<<<< HEAD
 +	static unsigned long ratelimit;
 +	unsigned long now = jiffies;
 +
 +	if (time_after(now, ratelimit)) {
 +		printk(KERN_WARNING "RPC: AUTH_GSS upcall timed out.\n"
 +				"Please check user daemon is running.\n");
 +		ratelimit = now + 15*HZ;
 +	}
++=======
+ 	dprintk("AUTH_GSS upcall failed. Please check user daemon is running.\n");
++>>>>>>> 0ea9de0ea6a4 (sunrpc: turn warn_gssd() log message into a dprintk())
  }
  
  static inline int
* Unmerged path fs/nfs/nfs4client.c
* Unmerged path net/sunrpc/auth_gss/auth_gss.c
