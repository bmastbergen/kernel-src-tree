USB: serial: increase the number of devices we support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [usb] serial: increase the number of devices we support (Don Zickus) [895641]
Rebuild_FUZZ: 95.15%
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 455b4f7e18e741c0603f9030f9a1897f4c5150c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/455b4f7e.failed

We had the limit of 255 USB to serial devices on one system for almost
15 years, with no complaints.  But now it's time to move on from these
tiny "baby" systems, and bump the number up to 512, which should last
us a few more years:
	"512 is a nice number" -- Tobias Winter

Note, this is still a static value, and uses up tty core memory with
this many tty devices allocated.  Converting the driver to use
TTY_DRIVER_DYNAMIC_DEV is the next thing to do in order to remove this
limitation.

	Reported-by: Tobias Winter <tobias@linuxdingsda.de>
	Tested-by: Tobias Winter <tobias@linuxdingsda.de>
	Reviewed-by: Johan Hovold <jhovold@gmail.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 455b4f7e18e741c0603f9030f9a1897f4c5150c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/serial/usb-serial.c
#	include/linux/usb/serial.h
diff --cc drivers/usb/serial/usb-serial.c
index 5f6b1ff9d29e,cb27fcb2fc90..000000000000
--- a/drivers/usb/serial/usb-serial.c
+++ b/drivers/usb/serial/usb-serial.c
@@@ -456,10 -452,11 +459,16 @@@ static int serial_proc_show(struct seq_
  	char tmp[40];
  
  	seq_puts(m, "usbserinfo:1.0 driver:2.0\n");
++<<<<<<< HEAD
 +	for (i = 0; i < SERIAL_TTY_MINORS; ++i) {
 +		serial = usb_serial_get_by_index(i);
 +		if (serial == NULL)
++=======
+ 	for (i = 0; i < USB_SERIAL_TTY_MINORS; ++i) {
+ 		port = usb_serial_port_get_by_minor(i);
+ 		if (port == NULL)
++>>>>>>> 455b4f7e18e7 (USB: serial: increase the number of devices we support)
  			continue;
 -		serial = port->serial;
  
  		seq_printf(m, "%d:", i);
  		if (serial->type->driver.owner)
@@@ -1223,10 -1218,9 +1232,10 @@@ static struct usb_driver usb_serial_dri
  
  static int __init usb_serial_init(void)
  {
 +	int i;
  	int result;
  
- 	usb_serial_tty_driver = alloc_tty_driver(SERIAL_TTY_MINORS);
+ 	usb_serial_tty_driver = alloc_tty_driver(USB_SERIAL_TTY_MINORS);
  	if (!usb_serial_tty_driver)
  		return -ENOMEM;
  
diff --cc include/linux/usb/serial.h
index 302ddf55d2da,d528b8045150..000000000000
--- a/include/linux/usb/serial.h
+++ b/include/linux/usb/serial.h
@@@ -19,10 -19,6 +19,13 @@@
  #include <linux/sysrq.h>
  #include <linux/kfifo.h>
  
++<<<<<<< HEAD
 +#define SERIAL_TTY_MAJOR	188	/* Nice legal number now */
 +#define SERIAL_TTY_MINORS	254	/* loads of devices :) */
 +#define SERIAL_TTY_NO_MINOR	255	/* No minor was assigned */
 +
++=======
++>>>>>>> 455b4f7e18e7 (USB: serial: increase the number of devices we support)
  /* The maximum number of ports one device can grab at once */
  #define MAX_NUM_PORTS		8
  
* Unmerged path drivers/usb/serial/usb-serial.c
* Unmerged path include/linux/usb/serial.h
