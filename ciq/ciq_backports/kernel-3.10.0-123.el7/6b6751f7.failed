autofs: fix lockref lookup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Ian Kent <raven@themaw.net>
commit 6b6751f7feba68d8f5c72b72cc69a1c5a625529c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/6b6751f7.failed

autofs needs to be able to see private data dentry flags for its dentrys
that are being created but not yet hashed and for its dentrys that have
been rmdir()ed but not yet freed.  It needs to do this so it can block
processes in these states until a status has been returned to indicate
the given operation is complete.

It does this by keeping two lists, active and expring, of dentrys in
this state and uses ->d_release() to keep them stable while it checks
the reference count to determine if they should be used.

But with the recent lockref changes dentrys being freed sometimes don't
transition to a reference count of 0 before being freed so autofs can
occassionally use a dentry that is invalid which can lead to a panic.

	Signed-off-by: Ian Kent <raven@themaw.net>
	Cc: Al Viro <viro@zeniv.linux.org.uk>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 6b6751f7feba68d8f5c72b72cc69a1c5a625529c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/autofs4/root.c
diff --cc fs/autofs4/root.c
index 085da86e07c2,cc87c1abac97..000000000000
--- a/fs/autofs4/root.c
+++ b/fs/autofs4/root.c
@@@ -179,7 -179,7 +179,11 @@@ static struct dentry *autofs4_lookup_ac
  		spin_lock(&active->d_lock);
  
  		/* Already gone? */
++<<<<<<< HEAD
 +		if (active->d_count == 0)
++=======
+ 		if ((int) d_count(active) <= 0)
++>>>>>>> 6b6751f7feba (autofs: fix lockref lookup)
  			goto next;
  
  		qstr = &active->d_name;
* Unmerged path fs/autofs4/root.c
