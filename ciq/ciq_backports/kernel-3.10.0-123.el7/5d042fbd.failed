vfio: Add O_CLOEXEC flag to vfio device fd

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [vfio] Add O_CLOEXEC flag to vfio device fd (Alex Williamson) [1025468]
Rebuild_FUZZ: 92.31%
commit-author Alex Williamson <alex.williamson@redhat.com>
commit 5d042fbdbb2df46c9185942a0c6fe280906ba70c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/5d042fbd.failed

Add the default O_CLOEXEC flag for device file descriptors.  This is
generally considered a safer option as it allows the user a race free
option to decide whether file descriptors are inherited across exec,
with the default avoiding file descriptor leaks.

	Reported-by: Yann Droneaud <ydroneaud@opteya.com>
	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
(cherry picked from commit 5d042fbdbb2df46c9185942a0c6fe280906ba70c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vfio/vfio.c
diff --cc drivers/vfio/vfio.c
index 73875891d89b,1eab4ace0671..000000000000
--- a/drivers/vfio/vfio.c
+++ b/drivers/vfio/vfio.c
@@@ -1107,7 -1109,7 +1107,11 @@@ static int vfio_group_get_device_fd(str
  		 * We can't use anon_inode_getfd() because we need to modify
  		 * the f_mode flags directly to allow more than just ioctls
  		 */
++<<<<<<< HEAD
 +		ret = get_unused_fd();
++=======
+ 		ret = get_unused_fd_flags(O_CLOEXEC);
++>>>>>>> 5d042fbdbb2d (vfio: Add O_CLOEXEC flag to vfio device fd)
  		if (ret < 0) {
  			device->ops->release(device->device_data);
  			break;
* Unmerged path drivers/vfio/vfio.c
