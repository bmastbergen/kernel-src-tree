net/vxlan: Share RX skb de-marking and checksum checks with ovs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [net] vxlan: Share RX skb de-marking and checksum checks with ovs (Thomas Graf) [1051111]
Rebuild_FUZZ: 96.72%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit d0bc65557ad09a57b4db176e9e3ccddb26971453
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/d0bc6555.failed

Make sure the practice set by commit 0afb166 "vxlan: Add capability
of Rx checksum offload for inner packet" is applied when the skb
goes through the portion of the RX code which is shared between
vxlan netdevices and ovs vxlan port instances.

	Cc: Joseph Gasparakis <joseph.gasparakis@intel.com>
	Cc: Pravin B Shelar <pshelar@nicira.com>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d0bc65557ad09a57b4db176e9e3ccddb26971453)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/vxlan.c
diff --cc drivers/net/vxlan.c
index 289b0b02e612,026a313c2d2d..000000000000
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@@ -1111,17 -1227,6 +1121,20 @@@ static void vxlan_rcv(struct vxlan_soc
  
  	skb_reset_network_header(skb);
  
++<<<<<<< HEAD
 +	/* If the NIC driver gave us an encapsulated packet with
 +	 * CHECKSUM_UNNECESSARY and Rx checksum feature is enabled,
 +	 * leave the CHECKSUM_UNNECESSARY, the device checksummed it
 +	 * for us. Otherwise force the upper layers to verify it.
 +	 */
 +	if (skb->ip_summed != CHECKSUM_UNNECESSARY || !skb->encapsulation ||
 +	    !(vxlan->dev->features & NETIF_F_RXCSUM))
 +		skb->ip_summed = CHECKSUM_NONE;
 +
 +	skb->encapsulation = 0;
 +
++=======
++>>>>>>> d0bc65557ad0 (net/vxlan: Share RX skb de-marking and checksum checks with ovs)
  	if (oip6)
  		err = IP6_ECN_decapsulate(oip6, skb);
  	if (oip)
* Unmerged path drivers/net/vxlan.c
