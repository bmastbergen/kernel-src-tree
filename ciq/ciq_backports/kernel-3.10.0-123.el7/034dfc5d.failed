ipv6: export in6addr_loopback to modules

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Cong Wang <amwang@redhat.com>
commit 034dfc5df99eb8d263211524983b1a737b25c06b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/034dfc5d.failed

It is needed by vxlan module. Noticed by Mike.

	Cc: Mike Rapoport <mike.rapoport@ravellosystems.com>
	Signed-off-by: Cong Wang <amwang@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 034dfc5df99eb8d263211524983b1a737b25c06b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/addrconf_core.c
diff --cc net/ipv6/addrconf_core.c
index 72104562c864,a864033d9e78..000000000000
--- a/net/ipv6/addrconf_core.c
+++ b/net/ipv6/addrconf_core.c
@@@ -97,3 -98,22 +97,25 @@@ int inet6addr_notifier_call_chain(unsig
  	return atomic_notifier_call_chain(&inet6addr_chain, val, v);
  }
  EXPORT_SYMBOL(inet6addr_notifier_call_chain);
++<<<<<<< HEAD
++=======
+ 
+ const struct ipv6_stub *ipv6_stub __read_mostly;
+ EXPORT_SYMBOL_GPL(ipv6_stub);
+ 
+ /* IPv6 Wildcard Address and Loopback Address defined by RFC2553 */
+ const struct in6_addr in6addr_loopback = IN6ADDR_LOOPBACK_INIT;
+ EXPORT_SYMBOL(in6addr_loopback);
+ const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;
+ EXPORT_SYMBOL(in6addr_any);
+ const struct in6_addr in6addr_linklocal_allnodes = IN6ADDR_LINKLOCAL_ALLNODES_INIT;
+ EXPORT_SYMBOL(in6addr_linklocal_allnodes);
+ const struct in6_addr in6addr_linklocal_allrouters = IN6ADDR_LINKLOCAL_ALLROUTERS_INIT;
+ EXPORT_SYMBOL(in6addr_linklocal_allrouters);
+ const struct in6_addr in6addr_interfacelocal_allnodes = IN6ADDR_INTERFACELOCAL_ALLNODES_INIT;
+ EXPORT_SYMBOL(in6addr_interfacelocal_allnodes);
+ const struct in6_addr in6addr_interfacelocal_allrouters = IN6ADDR_INTERFACELOCAL_ALLROUTERS_INIT;
+ EXPORT_SYMBOL(in6addr_interfacelocal_allrouters);
+ const struct in6_addr in6addr_sitelocal_allrouters = IN6ADDR_SITELOCAL_ALLROUTERS_INIT;
+ EXPORT_SYMBOL(in6addr_sitelocal_allrouters);
++>>>>>>> 034dfc5df99e (ipv6: export in6addr_loopback to modules)
diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c
index 4c8394c6a309..3cff86055172 100644
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@ -238,15 +238,6 @@ static struct ipv6_devconf ipv6_devconf_dflt __read_mostly = {
 	.accept_dad		= 1,
 };
 
-/* IPv6 Wildcard Address and Loopback Address defined by RFC2553 */
-const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;
-const struct in6_addr in6addr_loopback = IN6ADDR_LOOPBACK_INIT;
-const struct in6_addr in6addr_linklocal_allnodes = IN6ADDR_LINKLOCAL_ALLNODES_INIT;
-const struct in6_addr in6addr_linklocal_allrouters = IN6ADDR_LINKLOCAL_ALLROUTERS_INIT;
-const struct in6_addr in6addr_interfacelocal_allnodes = IN6ADDR_INTERFACELOCAL_ALLNODES_INIT;
-const struct in6_addr in6addr_interfacelocal_allrouters = IN6ADDR_INTERFACELOCAL_ALLROUTERS_INIT;
-const struct in6_addr in6addr_sitelocal_allrouters = IN6ADDR_SITELOCAL_ALLROUTERS_INIT;
-
 /* Check if a valid qdisc is available */
 static inline bool addrconf_qdisc_ok(const struct net_device *dev)
 {
* Unmerged path net/ipv6/addrconf_core.c
