ipv6: move in6_dev_finish_destroy() into core kernel

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Cong Wang <amwang@redhat.com>
commit f39dc1023d6b9933528638a0c2dd618b4fdf664e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/f39dc102.failed

in6_dev_put() will be needed by vxlan module, so is
in6_dev_finish_destroy().

	Cc: David S. Miller <davem@davemloft.net>
	Signed-off-by: Cong Wang <amwang@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f39dc1023d6b9933528638a0c2dd618b4fdf664e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/addrconf_core.c
diff --cc net/ipv6/addrconf_core.c
index d2f87427244b,4c11cbcf8308..000000000000
--- a/net/ipv6/addrconf_core.c
+++ b/net/ipv6/addrconf_core.c
@@@ -98,3 -99,52 +99,55 @@@ int inet6addr_notifier_call_chain(unsig
  	return atomic_notifier_call_chain(&inet6addr_chain, val, v);
  }
  EXPORT_SYMBOL(inet6addr_notifier_call_chain);
++<<<<<<< HEAD
++=======
+ 
+ const struct ipv6_stub *ipv6_stub __read_mostly;
+ EXPORT_SYMBOL_GPL(ipv6_stub);
+ 
+ /* IPv6 Wildcard Address and Loopback Address defined by RFC2553 */
+ const struct in6_addr in6addr_loopback = IN6ADDR_LOOPBACK_INIT;
+ EXPORT_SYMBOL(in6addr_loopback);
+ const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;
+ EXPORT_SYMBOL(in6addr_any);
+ const struct in6_addr in6addr_linklocal_allnodes = IN6ADDR_LINKLOCAL_ALLNODES_INIT;
+ EXPORT_SYMBOL(in6addr_linklocal_allnodes);
+ const struct in6_addr in6addr_linklocal_allrouters = IN6ADDR_LINKLOCAL_ALLROUTERS_INIT;
+ EXPORT_SYMBOL(in6addr_linklocal_allrouters);
+ const struct in6_addr in6addr_interfacelocal_allnodes = IN6ADDR_INTERFACELOCAL_ALLNODES_INIT;
+ EXPORT_SYMBOL(in6addr_interfacelocal_allnodes);
+ const struct in6_addr in6addr_interfacelocal_allrouters = IN6ADDR_INTERFACELOCAL_ALLROUTERS_INIT;
+ EXPORT_SYMBOL(in6addr_interfacelocal_allrouters);
+ const struct in6_addr in6addr_sitelocal_allrouters = IN6ADDR_SITELOCAL_ALLROUTERS_INIT;
+ EXPORT_SYMBOL(in6addr_sitelocal_allrouters);
+ 
+ static void snmp6_free_dev(struct inet6_dev *idev)
+ {
+ 	kfree(idev->stats.icmpv6msgdev);
+ 	kfree(idev->stats.icmpv6dev);
+ 	snmp_mib_free((void __percpu **)idev->stats.ipv6);
+ }
+ 
+ /* Nobody refers to this device, we may destroy it. */
+ 
+ void in6_dev_finish_destroy(struct inet6_dev *idev)
+ {
+ 	struct net_device *dev = idev->dev;
+ 
+ 	WARN_ON(!list_empty(&idev->addr_list));
+ 	WARN_ON(idev->mc_list != NULL);
+ 	WARN_ON(timer_pending(&idev->rs_timer));
+ 
+ #ifdef NET_REFCNT_DEBUG
+ 	pr_debug("%s: %s\n", __func__, dev ? dev->name : "NIL");
+ #endif
+ 	dev_put(dev);
+ 	if (!idev->dead) {
+ 		pr_warn("Freeing alive inet6 device %p\n", idev);
+ 		return;
+ 	}
+ 	snmp6_free_dev(idev);
+ 	kfree_rcu(idev, rcu);
+ }
+ EXPORT_SYMBOL(in6_dev_finish_destroy);
++>>>>>>> f39dc1023d6b (ipv6: move in6_dev_finish_destroy() into core kernel)
diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c
index 524be58c18f4..71bc1d304142 100644
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@ -306,36 +306,6 @@ err_ip:
 	return -ENOMEM;
 }
 
-static void snmp6_free_dev(struct inet6_dev *idev)
-{
-	kfree(idev->stats.icmpv6msgdev);
-	kfree(idev->stats.icmpv6dev);
-	snmp_mib_free((void __percpu **)idev->stats.ipv6);
-}
-
-/* Nobody refers to this device, we may destroy it. */
-
-void in6_dev_finish_destroy(struct inet6_dev *idev)
-{
-	struct net_device *dev = idev->dev;
-
-	WARN_ON(!list_empty(&idev->addr_list));
-	WARN_ON(idev->mc_list != NULL);
-	WARN_ON(timer_pending(&idev->rs_timer));
-
-#ifdef NET_REFCNT_DEBUG
-	pr_debug("%s: %s\n", __func__, dev ? dev->name : "NIL");
-#endif
-	dev_put(dev);
-	if (!idev->dead) {
-		pr_warn("Freeing alive inet6 device %p\n", idev);
-		return;
-	}
-	snmp6_free_dev(idev);
-	kfree_rcu(idev, rcu);
-}
-EXPORT_SYMBOL(in6_dev_finish_destroy);
-
 static struct inet6_dev *ipv6_add_dev(struct net_device *dev)
 {
 	struct inet6_dev *ndev;
* Unmerged path net/ipv6/addrconf_core.c
