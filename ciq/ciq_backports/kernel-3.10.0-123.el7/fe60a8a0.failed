xfs: ensure correct timestamp updates from truncate

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Christoph Hellwig <hch@infradead.org>
commit fe60a8a0919eeee862054137fed49f00b710d9cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/fe60a8a0.failed

The VFS doesn't set the proper ATTR_CTIME and ATTR_MTIME values for
truncate, so filesystems have to manually add them.  The
introduction of xfs_setattr_time accidentally broke this special
case an caused a regression in generic/313.  Fix this by removing
the local mask variable in xfs_setattr_size so that we only have a
single place to keep the attribute information.

cc: <stable@vger.kernel.org>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reported-by: Fengguang Wu <fengguang.wu@intel.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Jie Liu <jeff.liu@oracle.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit fe60a8a0919eeee862054137fed49f00b710d9cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_iops.c
diff --cc fs/xfs/xfs_iops.c
index 35efc1c468ae,9ddfb8190ca1..000000000000
--- a/fs/xfs/xfs_iops.c
+++ b/fs/xfs/xfs_iops.c
@@@ -733,15 -723,11 +732,15 @@@ xfs_setattr_size
  	if (error)
  		return XFS_ERROR(error);
  
 -	ASSERT(xfs_isilocked(ip, XFS_IOLOCK_EXCL));
  	ASSERT(S_ISREG(ip->i_d.di_mode));
- 	ASSERT((mask & (ATTR_UID|ATTR_GID|ATTR_ATIME|ATTR_ATIME_SET|
- 			ATTR_MTIME_SET|ATTR_KILL_PRIV|ATTR_TIMES_SET)) == 0);
+ 	ASSERT((iattr->ia_valid & (ATTR_UID|ATTR_GID|ATTR_ATIME|ATTR_ATIME_SET|
+ 		ATTR_MTIME_SET|ATTR_KILL_PRIV|ATTR_TIMES_SET)) == 0);
  
 +	if (!(flags & XFS_ATTR_NOLOCK)) {
 +		lock_flags |= XFS_IOLOCK_EXCL;
 +		xfs_ilock(ip, lock_flags);
 +	}
 +
  	oldsize = inode->i_size;
  	newsize = iattr->ia_size;
  
@@@ -749,8 -735,8 +748,13 @@@
  	 * Short circuit the truncate case for zero length files.
  	 */
  	if (newsize == 0 && oldsize == 0 && ip->i_d.di_nextents == 0) {
++<<<<<<< HEAD
 +		if (!(mask & (ATTR_CTIME|ATTR_MTIME)))
 +			goto out_unlock;
++=======
+ 		if (!(iattr->ia_valid & (ATTR_CTIME|ATTR_MTIME)))
+ 			return 0;
++>>>>>>> fe60a8a0919e (xfs: ensure correct timestamp updates from truncate)
  
  		/*
  		 * Use the regular setattr path to update the timestamps.
* Unmerged path fs/xfs/xfs_iops.c
