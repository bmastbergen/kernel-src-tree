net: make neigh_priv_len in struct net_device 16bit instead of 8bit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [net] make neigh_priv_len in struct net_device 16bit instead of 8bit (Jiri Benc) [1062308]
Rebuild_FUZZ: 96.12%
commit-author Sebastian Siewior <bigeasy@linutronix.de>
commit a0a9663dd2146d54339237764e1bfc60e8a39328
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/a0a9663d.failed

neigh_priv_len is defined as u8. With all debug enabled struct
ipoib_neigh has 200 bytes. The largest part is sk_buff_head with 96
bytes and here the spinlock with 72 bytes.
The size value still fits in this u8 leaving some room for more.

On -RT struct ipoib_neigh put on weight and has 392 bytes. The main
reason is sk_buff_head with 288 and the fatty here is spinlock with 192
bytes. This does no longer fit into into neigh_priv_len and gcc
complains.

This patch changes neigh_priv_len from being 8bit to 16bit. Since the
following element (dev_id) is 16bit followed by a spinlock which is
aligned, the struct remains with a total size of 3200 (allmodconfig) /
2048 (with as much debug off as possible) bytes on x86-64.
On x86-32 the struct is 1856 (allmodconfig) / 1216 (with as much debug
off as possible) bytes long. The numbers were gained with and without
the patch to prove that this change does not increase the size of the
struct.

	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a0a9663dd2146d54339237764e1bfc60e8a39328)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdevice.h
diff --cc include/linux/netdevice.h
index 8c357c3b8198,d9a550bf3e8e..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -1210,9 -1255,11 +1210,17 @@@ struct net_device 
  	unsigned char		perm_addr[MAX_ADDR_LEN]; /* permanent hw address */
  	unsigned char		addr_assign_type; /* hw address assignment type */
  	unsigned char		addr_len;	/* hardware address length	*/
++<<<<<<< HEAD
 +	unsigned char		neigh_priv_len;
 +	unsigned short          dev_id;		/* for shared network cards */
 +
++=======
+ 	unsigned short		neigh_priv_len;
+ 	unsigned short          dev_id;		/* Used to differentiate devices
+ 						 * that share the same link
+ 						 * layer address
+ 						 */
++>>>>>>> a0a9663dd214 (net: make neigh_priv_len in struct net_device 16bit instead of 8bit)
  	spinlock_t		addr_list_lock;
  	struct netdev_hw_addr_list	uc;	/* Unicast mac addresses */
  	struct netdev_hw_addr_list	mc;	/* Multicast mac addresses */
* Unmerged path include/linux/netdevice.h
