xfs: decouple inode and bmap btree header files

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Dave Chinner <dchinner@redhat.com>
commit a4fbe6ab1e7abecf42b75e9c73701ed33b4ab03b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/a4fbe6ab.failed

Currently the xfs_inode.h header has a dependency on the definition
of the BMAP btree records as the inode fork includes an array of
xfs_bmbt_rec_host_t objects in it's definition.

Move all the btree format definitions from xfs_btree.h,
xfs_bmap_btree.h, xfs_alloc_btree.h and xfs_ialloc_btree.h to
xfs_format.h to continue the process of centralising the on-disk
format definitions. With this done, the xfs inode definitions are no
longer dependent on btree header files.

The enables a massive culling of unnecessary includes, with close to
200 #include directives removed from the XFS kernel code base.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Ben Myers <bpm@sgi.com>
	Signed-off-by: Ben Myers <bpm@sgi.com>

(cherry picked from commit a4fbe6ab1e7abecf42b75e9c73701ed33b4ab03b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_acl.c
#	fs/xfs/xfs_alloc_btree.c
#	fs/xfs/xfs_attr_inactive.c
#	fs/xfs/xfs_attr_leaf.c
#	fs/xfs/xfs_attr_list.c
#	fs/xfs/xfs_attr_remote.c
#	fs/xfs/xfs_bmap.c
#	fs/xfs/xfs_bmap_util.c
#	fs/xfs/xfs_btree.c
#	fs/xfs/xfs_dir2.c
#	fs/xfs/xfs_dir2_block.c
#	fs/xfs/xfs_dir2_data.c
#	fs/xfs/xfs_dir2_leaf.c
#	fs/xfs/xfs_dir2_node.c
#	fs/xfs/xfs_dir2_readdir.c
#	fs/xfs/xfs_dir2_sf.c
#	fs/xfs/xfs_dquot.c
#	fs/xfs/xfs_dquot_buf.c
#	fs/xfs/xfs_dquot_item.c
#	fs/xfs/xfs_error.c
#	fs/xfs/xfs_export.c
#	fs/xfs/xfs_file.c
#	fs/xfs/xfs_filestream.c
#	fs/xfs/xfs_fsops.c
#	fs/xfs/xfs_ialloc_btree.c
#	fs/xfs/xfs_icache.c
#	fs/xfs/xfs_inode.c
#	fs/xfs/xfs_inode_buf.c
#	fs/xfs/xfs_inode_fork.c
#	fs/xfs/xfs_inode_item.c
#	fs/xfs/xfs_ioctl.c
#	fs/xfs/xfs_ioctl32.c
#	fs/xfs/xfs_iomap.c
#	fs/xfs/xfs_iops.c
#	fs/xfs/xfs_itable.c
#	fs/xfs/xfs_log.c
#	fs/xfs/xfs_log_recover.c
#	fs/xfs/xfs_log_rlimit.c
#	fs/xfs/xfs_mount.c
#	fs/xfs/xfs_qm.c
#	fs/xfs/xfs_qm_bhv.c
#	fs/xfs/xfs_qm_syscalls.c
#	fs/xfs/xfs_rtalloc.c
#	fs/xfs/xfs_sb.c
#	fs/xfs/xfs_super.c
#	fs/xfs/xfs_symlink.c
#	fs/xfs/xfs_trace.c
#	fs/xfs/xfs_trans.c
#	fs/xfs/xfs_trans_buf.c
#	fs/xfs/xfs_trans_dquot.c
#	fs/xfs/xfs_trans_inode.c
#	fs/xfs/xfs_trans_resv.c
#	fs/xfs/xfs_xattr.c
diff --cc fs/xfs/xfs_acl.c
index ac4bb60a48b1,370eb3e121d1..000000000000
--- a/fs/xfs/xfs_acl.c
+++ b/fs/xfs/xfs_acl.c
@@@ -16,15 -16,15 +16,23 @@@
   * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
   */
  #include "xfs.h"
+ #include "xfs_format.h"
  #include "xfs_log_format.h"
  #include "xfs_trans_resv.h"
++<<<<<<< HEAD
 +#include "xfs_acl.h"
 +#include "xfs_attr.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_inode.h"
 +#include "xfs_vnodeops.h"
++=======
+ #include "xfs_ag.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_mount.h"
+ #include "xfs_inode.h"
+ #include "xfs_acl.h"
+ #include "xfs_attr.h"
  #include "xfs_trace.h"
  #include <linux/slab.h>
  #include <linux/xattr.h>
diff --cc fs/xfs/xfs_alloc_btree.c
index cafc90251d19,698587f6c60a..000000000000
--- a/fs/xfs/xfs_alloc_btree.c
+++ b/fs/xfs/xfs_alloc_btree.c
@@@ -17,9 -17,9 +17,15 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
diff --cc fs/xfs/xfs_attr_inactive.c
index 9a4e42599cd7,f33fb62b7f17..000000000000
--- a/fs/xfs/xfs_attr_inactive.c
+++ b/fs/xfs/xfs_attr_inactive.c
@@@ -26,15 -26,12 +26,14 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
+ #include "xfs_inode.h"
++<<<<<<< HEAD
++=======
  #include "xfs_alloc.h"
- #include "xfs_btree.h"
  #include "xfs_attr_remote.h"
- #include "xfs_dinode.h"
- #include "xfs_inode.h"
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode_item.h"
  #include "xfs_bmap.h"
  #include "xfs_attr.h"
@@@ -42,7 -39,7 +41,11 @@@
  #include "xfs_error.h"
  #include "xfs_quota.h"
  #include "xfs_trace.h"
++<<<<<<< HEAD
 +#include "xfs_trans_priv.h"
++=======
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  /*
   * Look at all the extents for this logical region,
diff --cc fs/xfs/xfs_attr_leaf.c
index 86db20a9cc02,a0f90193a247..000000000000
--- a/fs/xfs/xfs_attr_leaf.c
+++ b/fs/xfs/xfs_attr_leaf.c
@@@ -18,26 -18,22 +18,27 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
 +#include "xfs_trans_priv.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_alloc.h"
- #include "xfs_btree.h"
- #include "xfs_attr_sf.h"
- #include "xfs_attr_remote.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
+ #include "xfs_bmap_btree.h"
  #include "xfs_bmap.h"
+ #include "xfs_attr_sf.h"
+ #include "xfs_attr_remote.h"
  #include "xfs_attr.h"
  #include "xfs_attr_leaf.h"
  #include "xfs_error.h"
diff --cc fs/xfs/xfs_attr_list.c
index cbc80d485177,46c4ce148a43..000000000000
--- a/fs/xfs/xfs_attr_list.c
+++ b/fs/xfs/xfs_attr_list.c
@@@ -18,23 -18,17 +18,21 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_alloc.h"
- #include "xfs_btree.h"
- #include "xfs_attr_sf.h"
- #include "xfs_attr_remote.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_bmap.h"
  #include "xfs_attr.h"
diff --cc fs/xfs/xfs_attr_remote.c
index 712a502de619,2e5530467f2d..000000000000
--- a/fs/xfs/xfs_attr_remote.c
+++ b/fs/xfs/xfs_attr_remote.c
@@@ -18,20 -18,18 +18,28 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
 +#include "xfs_trans_priv.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_error.h"
++=======
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
  #include "xfs_alloc.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
diff --cc fs/xfs/xfs_bmap.c
index 55a5051c2985,1c02da8bb7df..000000000000
--- a/fs/xfs/xfs_bmap.c
+++ b/fs/xfs/xfs_bmap.c
@@@ -17,25 -17,21 +17,31 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
  #include "xfs_bit.h"
 +#include "xfs_log.h"
  #include "xfs_inum.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_dir2.h"
++<<<<<<< HEAD
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
 -#include "xfs_dir2.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
 +#include "xfs_inode.h"
 +#include "xfs_btree.h"
 +#include "xfs_mount.h"
 +#include "xfs_itable.h"
++=======
+ #include "xfs_inode.h"
+ #include "xfs_btree.h"
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode_item.h"
  #include "xfs_extfree_item.h"
  #include "xfs_alloc.h"
@@@ -46,11 -43,11 +53,16 @@@
  #include "xfs_quota.h"
  #include "xfs_trans_space.h"
  #include "xfs_buf_item.h"
++<<<<<<< HEAD
 +#include "xfs_filestream.h"
 +#include "xfs_vnodeops.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trace.h"
  #include "xfs_symlink.h"
+ #include "xfs_attr_leaf.h"
+ #include "xfs_dinode.h"
+ #include "xfs_filestream.h"
  
  
  kmem_zone_t		*xfs_bmap_free_item_zone;
diff --cc fs/xfs/xfs_bmap_util.c
index e877b47203d1,5887e41c0323..000000000000
--- a/fs/xfs/xfs_bmap_util.c
+++ b/fs/xfs/xfs_bmap_util.c
@@@ -26,13 -26,10 +26,17 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_da_btree.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
  #include "xfs_btree.h"
 -#include "xfs_trans.h"
  #include "xfs_extfree_item.h"
  #include "xfs_alloc.h"
  #include "xfs_bmap.h"
@@@ -42,6 -40,9 +47,12 @@@
  #include "xfs_quota.h"
  #include "xfs_trans_space.h"
  #include "xfs_trace.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_icache.h"
+ #include "xfs_log.h"
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  /* Kernel only BMAP related definitions and functions */
  
diff --cc fs/xfs/xfs_btree.c
index b8650d168a26,9adaae4f3e2f..000000000000
--- a/fs/xfs/xfs_btree.c
+++ b/fs/xfs/xfs_btree.c
@@@ -18,17 -18,15 +18,19 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_buf_item.h"
  #include "xfs_btree.h"
diff --cc fs/xfs/xfs_dir2.c
index ade24b4a3e65,38bf9324302c..000000000000
--- a/fs/xfs/xfs_dir2.c
+++ b/fs/xfs/xfs_dir2.c
@@@ -17,28 -17,27 +17,32 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inum.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_bmap.h"
  #include "xfs_dir2.h"
 +#include "xfs_dir2_format.h"
  #include "xfs_dir2_priv.h"
  #include "xfs_error.h"
 +#include "xfs_vnodeops.h"
  #include "xfs_trace.h"
+ #include "xfs_dinode.h"
  
 -struct xfs_name xfs_name_dotdot = { (unsigned char *)"..", 2, XFS_DIR3_FT_DIR };
 -
 +struct xfs_name xfs_name_dotdot = { (unsigned char *)"..", 2};
  
  /*
   * ASCII case-insensitive (ie. A-Z) support for directories that was
diff --cc fs/xfs/xfs_dir2_block.c
index 53b9aa26d567,9f3f83a5e2da..000000000000
--- a/fs/xfs/xfs_dir2_block.c
+++ b/fs/xfs/xfs_dir2_block.c
@@@ -18,16 -18,16 +18,20 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_bmap.h"
  #include "xfs_buf_item.h"
diff --cc fs/xfs/xfs_dir2_data.c
index e4ce4801d4ae,ccfeb4d8376a..000000000000
--- a/fs/xfs/xfs_dir2_data.c
+++ b/fs/xfs/xfs_dir2_data.c
@@@ -18,19 -18,19 +18,23 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_dir2.h"
 +#include "xfs_dir2_format.h"
  #include "xfs_dir2_priv.h"
  #include "xfs_error.h"
 -#include "xfs_trans.h"
  #include "xfs_buf_item.h"
  #include "xfs_cksum.h"
  
diff --cc fs/xfs/xfs_dir2_leaf.c
index 2dedee56777d,51fdc11a1e2c..000000000000
--- a/fs/xfs/xfs_dir2_leaf.c
+++ b/fs/xfs/xfs_dir2_leaf.c
@@@ -18,19 -18,17 +18,23 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
  #include "xfs_bmap.h"
 -#include "xfs_dir2.h"
 +#include "xfs_dir2_format.h"
  #include "xfs_dir2_priv.h"
  #include "xfs_error.h"
  #include "xfs_trace.h"
diff --cc fs/xfs/xfs_dir2_node.c
index cae73a62bfcc,b8381646b8af..000000000000
--- a/fs/xfs/xfs_dir2_node.c
+++ b/fs/xfs/xfs_dir2_node.c
@@@ -18,18 -18,17 +18,22 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
  #include "xfs_bmap.h"
 -#include "xfs_dir2.h"
 +#include "xfs_dir2_format.h"
  #include "xfs_dir2_priv.h"
  #include "xfs_error.h"
  #include "xfs_trace.h"
diff --cc fs/xfs/xfs_dir2_sf.c
index 6157424dbf8f,8811ee5eaec6..000000000000
--- a/fs/xfs/xfs_dir2_sf.c
+++ b/fs/xfs/xfs_dir2_sf.c
@@@ -17,22 -17,22 +17,27 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_da_btree.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_error.h"
  #include "xfs_dir2.h"
 +#include "xfs_dir2_format.h"
  #include "xfs_dir2_priv.h"
  #include "xfs_trace.h"
+ #include "xfs_dinode.h"
  
  /*
   * Prototypes for internal functions.
diff --cc fs/xfs/xfs_dquot.c
index 2c903070b1cf,6b1e695caf0e..000000000000
--- a/fs/xfs/xfs_dquot.c
+++ b/fs/xfs/xfs_dquot.c
@@@ -18,29 -18,28 +18,40 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
  #include "xfs_shared.h"
 -#include "xfs_trans_resv.h"
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_alloc.h"
 +#include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
++<<<<<<< HEAD
 +#include "xfs_rtalloc.h"
 +#include "xfs_error.h"
 +#include "xfs_itable.h"
 +#include "xfs_attr.h"
++=======
+ #include "xfs_alloc.h"
+ #include "xfs_quota.h"
+ #include "xfs_error.h"
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_buf_item.h"
  #include "xfs_trans_space.h"
  #include "xfs_trans_priv.h"
  #include "xfs_qm.h"
  #include "xfs_cksum.h"
  #include "xfs_trace.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_log.h"
+ #include "xfs_bmap_btree.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  /*
   * Lock order:
diff --cc fs/xfs/xfs_dquot_item.c
index e838d84b4e85,92e5f62eefc6..000000000000
--- a/fs/xfs/xfs_dquot_item.c
+++ b/fs/xfs/xfs_dquot_item.c
@@@ -18,20 -18,15 +18,20 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
- #include "xfs_alloc.h"
- #include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
- #include "xfs_bmap.h"
- #include "xfs_rtalloc.h"
+ #include "xfs_quota.h"
  #include "xfs_error.h"
++<<<<<<< HEAD
 +#include "xfs_itable.h"
 +#include "xfs_attr.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_buf_item.h"
  #include "xfs_trans_priv.h"
  #include "xfs_qm.h"
diff --cc fs/xfs/xfs_error.c
index beafe6bffb0d,9995b807d627..000000000000
--- a/fs/xfs/xfs_error.c
+++ b/fs/xfs/xfs_error.c
@@@ -16,17 -16,13 +16,21 @@@
   * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
   */
  #include "xfs.h"
+ #include "xfs_format.h"
  #include "xfs_fs.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_bmap_btree.h"
 +#include "xfs_dinode.h"
 +#include "xfs_inode.h"
 +#include "xfs_utils.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_error.h"
  
  #ifdef DEBUG
diff --cc fs/xfs/xfs_export.c
index c585bc646395,1399e187d425..000000000000
--- a/fs/xfs/xfs_export.c
+++ b/fs/xfs/xfs_export.c
@@@ -16,17 -16,17 +16,26 @@@
   * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
   */
  #include "xfs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 -#include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_dir2.h"
 +#include "xfs_mount.h"
  #include "xfs_export.h"
++<<<<<<< HEAD
 +#include "xfs_vnodeops.h"
 +#include "xfs_bmap_btree.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
diff --cc fs/xfs/xfs_file.c
index 3be477a9f116,52c91e143725..000000000000
--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@@ -18,24 -18,26 +18,40 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_trans.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_da_format.h"
+ #include "xfs_da_btree.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_bmap.h"
 -#include "xfs_bmap_util.h"
  #include "xfs_error.h"
 -#include "xfs_dir2.h"
 +#include "xfs_vnodeops.h"
 +#include "xfs_da_btree.h"
 +#include "xfs_dir2_format.h"
  #include "xfs_dir2_priv.h"
  #include "xfs_ioctl.h"
  #include "xfs_trace.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_log.h"
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  #include <linux/aio.h>
  #include <linux/dcache.h>
diff --cc fs/xfs/xfs_filestream.c
index d0e8890dac86,12b6e7701985..000000000000
--- a/fs/xfs/xfs_filestream.c
+++ b/fs/xfs/xfs_filestream.c
@@@ -16,20 -16,19 +16,29 @@@
   * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
   */
  #include "xfs.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_bmap_btree.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
+ #include "xfs_ag.h"
+ #include "xfs_sb.h"
+ #include "xfs_mount.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inum.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 +#include "xfs_ag.h"
 +#include "xfs_trans.h"
 +#include "xfs_sb.h"
 +#include "xfs_mount.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
  #include "xfs_alloc.h"
 +#include "xfs_utils.h"
  #include "xfs_mru_cache.h"
+ #include "xfs_dinode.h"
  #include "xfs_filestream.h"
  #include "xfs_trace.h"
  
diff --cc fs/xfs/xfs_fsops.c
index 2cb5a9dc6ea6,a6e54b3319bd..000000000000
--- a/fs/xfs/xfs_fsops.c
+++ b/fs/xfs/xfs_fsops.c
@@@ -17,30 -17,29 +17,39 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_format.h"
 +#include "xfs_shared.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_shared.h"
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
- #include "xfs_btree.h"
  #include "xfs_error.h"
+ #include "xfs_btree.h"
+ #include "xfs_alloc_btree.h"
  #include "xfs_alloc.h"
  #include "xfs_ialloc.h"
  #include "xfs_fsops.h"
  #include "xfs_itable.h"
  #include "xfs_trans_space.h"
  #include "xfs_rtalloc.h"
- #include "xfs_filestream.h"
  #include "xfs_trace.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_log.h"
+ #include "xfs_dinode.h"
+ #include "xfs_filestream.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  /*
   * File system operations
diff --cc fs/xfs/xfs_ialloc_btree.c
index 5448eb6b8c12,1fa142dc86cb..000000000000
--- a/fs/xfs/xfs_ialloc_btree.c
+++ b/fs/xfs/xfs_ialloc_btree.c
@@@ -17,10 -17,10 +17,16 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
diff --cc fs/xfs/xfs_icache.c
index 5a3fffd694ac,98d35244eecc..000000000000
--- a/fs/xfs/xfs_icache.c
+++ b/fs/xfs/xfs_icache.c
@@@ -27,17 -24,15 +27,19 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
- #include "xfs_dinode.h"
  #include "xfs_error.h"
++<<<<<<< HEAD
 +#include "xfs_filestream.h"
 +#include "xfs_vnodeops.h"
++=======
+ #include "xfs_trans.h"
+ #include "xfs_trans_priv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode_item.h"
  #include "xfs_quota.h"
  #include "xfs_trace.h"
- #include "xfs_fsops.h"
  #include "xfs_icache.h"
 -#include "xfs_bmap_util.h"
  
  #include <linux/kthread.h>
  #include <linux/freezer.h>
diff --cc fs/xfs/xfs_inode.c
index a18b684cea27,326b94dbe159..000000000000
--- a/fs/xfs/xfs_inode.c
+++ b/fs/xfs/xfs_inode.c
@@@ -28,27 -27,30 +28,44 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_attr_sf.h"
 +#include "xfs_dinode.h"
 +#include "xfs_inode.h"
++=======
+ #include "xfs_inode.h"
+ #include "xfs_da_format.h"
+ #include "xfs_da_btree.h"
+ #include "xfs_dir2.h"
+ #include "xfs_attr_sf.h"
+ #include "xfs_attr.h"
+ #include "xfs_trans_space.h"
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_buf_item.h"
  #include "xfs_inode_item.h"
- #include "xfs_btree.h"
- #include "xfs_alloc.h"
  #include "xfs_ialloc.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
  #include "xfs_error.h"
 +#include "xfs_utils.h"
  #include "xfs_quota.h"
+ #include "xfs_dinode.h"
  #include "xfs_filestream.h"
 +#include "xfs_vnodeops.h"
  #include "xfs_cksum.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_symlink.h"
+ #include "xfs_trans_priv.h"
+ #include "xfs_log.h"
+ #include "xfs_bmap_btree.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  kmem_zone_t *xfs_inode_zone;
  
diff --cc fs/xfs/xfs_inode_buf.c
index 440bc725a88e,4fc9f39dd89e..000000000000
--- a/fs/xfs/xfs_inode_buf.c
+++ b/fs/xfs/xfs_inode_buf.c
@@@ -31,7 -28,9 +28,13 @@@
  #include "xfs_error.h"
  #include "xfs_cksum.h"
  #include "xfs_icache.h"
++<<<<<<< HEAD
++#include "xfs_ialloc.h"
++=======
+ #include "xfs_trans.h"
  #include "xfs_ialloc.h"
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  /*
   * Check that none of the inode's in the buffer have a next
diff --cc fs/xfs/xfs_inode_fork.c
index 30cba30b60e5,22c9837c5d4b..000000000000
--- a/fs/xfs/xfs_inode_fork.c
+++ b/fs/xfs/xfs_inode_fork.c
@@@ -27,26 -26,15 +27,27 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_attr_sf.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
++<<<<<<< HEAD
 +#include "xfs_buf_item.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode_item.h"
- #include "xfs_btree.h"
- #include "xfs_alloc.h"
- #include "xfs_ialloc.h"
+ #include "xfs_bmap_btree.h"
  #include "xfs_bmap.h"
  #include "xfs_error.h"
++<<<<<<< HEAD
 +#include "xfs_utils.h"
 +#include "xfs_quota.h"
 +#include "xfs_filestream.h"
 +#include "xfs_vnodeops.h"
 +#include "xfs_cksum.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trace.h"
- #include "xfs_icache.h"
+ #include "xfs_attr_sf.h"
+ #include "xfs_dinode.h"
  
  kmem_zone_t *xfs_ifork_zone;
  
diff --cc fs/xfs/xfs_inode_item.c
index 378081109844,7c0d391f9a6e..000000000000
--- a/fs/xfs/xfs_inode_item.c
+++ b/fs/xfs/xfs_inode_item.c
@@@ -17,19 -17,19 +17,33 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_types.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
 +#include "xfs_sb.h"
 +#include "xfs_ag.h"
 +#include "xfs_mount.h"
 +#include "xfs_trans_priv.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
+ #include "xfs_sb.h"
+ #include "xfs_ag.h"
+ #include "xfs_mount.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_inode_item.h"
  #include "xfs_error.h"
  #include "xfs_trace.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_trans_priv.h"
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  
  kmem_zone_t	*xfs_ili_zone;		/* inode log item zone */
diff --cc fs/xfs/xfs_ioctl.c
index 66ccb6ba3e2f,4d613401a5e0..000000000000
--- a/fs/xfs/xfs_ioctl.c
+++ b/fs/xfs/xfs_ioctl.c
@@@ -17,35 -17,31 +17,41 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
- #include "xfs_alloc.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
  #include "xfs_ioctl.h"
+ #include "xfs_alloc.h"
  #include "xfs_rtalloc.h"
  #include "xfs_itable.h"
  #include "xfs_error.h"
  #include "xfs_attr.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
++<<<<<<< HEAD
 +#include "xfs_buf_item.h"
 +#include "xfs_utils.h"
 +#include "xfs_dfrag.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_fsops.h"
 +#include "xfs_vnodeops.h"
  #include "xfs_discard.h"
  #include "xfs_quota.h"
- #include "xfs_inode_item.h"
  #include "xfs_export.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_symlink.h"
+ #include "xfs_dinode.h"
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  #include <linux/capability.h>
  #include <linux/dcache.h>
diff --cc fs/xfs/xfs_ioctl32.c
index 082c59ac2733,e8fb1231db81..000000000000
--- a/fs/xfs/xfs_ioctl32.c
+++ b/fs/xfs/xfs_ioctl32.c
@@@ -22,8 -22,9 +22,14 @@@
  #include <asm/uaccess.h>
  #include "xfs.h"
  #include "xfs_fs.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
diff --cc fs/xfs/xfs_iomap.c
index 1a5cd62f9014,22d1cbea283d..000000000000
--- a/fs/xfs/xfs_iomap.c
+++ b/fs/xfs/xfs_iomap.c
@@@ -17,31 -17,21 +17,28 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_alloc.h"
 +#include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
++<<<<<<< HEAD
 +#include "xfs_inode_item.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_btree.h"
+ #include "xfs_bmap_btree.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
- #include "xfs_rtalloc.h"
  #include "xfs_error.h"
- #include "xfs_itable.h"
- #include "xfs_attr.h"
- #include "xfs_buf_item.h"
+ #include "xfs_trans.h"
  #include "xfs_trans_space.h"
 +#include "xfs_utils.h"
  #include "xfs_iomap.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
diff --cc fs/xfs/xfs_iops.c
index 39cd46efea14,718b62b0fe05..000000000000
--- a/fs/xfs/xfs_iops.c
+++ b/fs/xfs/xfs_iops.c
@@@ -17,31 -17,28 +17,49 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
 +#include "xfs_acl.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_alloc.h"
 +#include "xfs_quota.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_bmap_btree.h"
 +#include "xfs_dinode.h"
 +#include "xfs_inode.h"
 +#include "xfs_bmap.h"
 +#include "xfs_bmap_util.h"
 +#include "xfs_rtalloc.h"
++=======
+ #include "xfs_da_format.h"
+ #include "xfs_inode.h"
+ #include "xfs_bmap.h"
+ #include "xfs_bmap_util.h"
+ #include "xfs_acl.h"
+ #include "xfs_quota.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_error.h"
- #include "xfs_itable.h"
  #include "xfs_attr.h"
++<<<<<<< HEAD
 +#include "xfs_buf_item.h"
 +#include "xfs_utils.h"
 +#include "xfs_vnodeops.h"
 +#include "xfs_inode_item.h"
 +#include "xfs_trace.h"
 +#include "xfs_icache.h"
++=======
+ #include "xfs_trans.h"
+ #include "xfs_trace.h"
+ #include "xfs_icache.h"
+ #include "xfs_symlink.h"
+ #include "xfs_da_btree.h"
+ #include "xfs_dir2_priv.h"
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  #include <linux/capability.h>
  #include <linux/xattr.h>
diff --cc fs/xfs/xfs_itable.c
index 4f50e637f33b,c237ad15d500..000000000000
--- a/fs/xfs/xfs_itable.c
+++ b/fs/xfs/xfs_itable.c
@@@ -18,9 -18,10 +18,15 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inum.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
diff --cc fs/xfs/xfs_log.c
index fbaf70af3d61,e523396753c5..000000000000
--- a/fs/xfs/xfs_log.c
+++ b/fs/xfs/xfs_log.c
@@@ -18,20 -18,18 +18,25 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
  #include "xfs_error.h"
 -#include "xfs_trans.h"
 -#include "xfs_trans_priv.h"
 -#include "xfs_log.h"
  #include "xfs_log_priv.h"
- #include "xfs_buf_item.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
  #include "xfs_log_recover.h"
++<<<<<<< HEAD
 +#include "xfs_trans_priv.h"
 +#include "xfs_dinode.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
  #include "xfs_trace.h"
  #include "xfs_fsops.h"
diff --cc fs/xfs/xfs_log_recover.c
index 79ee02296781,b6b669df40f3..000000000000
--- a/fs/xfs/xfs_log_recover.c
+++ b/fs/xfs/xfs_log_recover.c
@@@ -26,35 -26,25 +26,52 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_error.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_btree.h"
 +#include "xfs_dinode.h"
 +#include "xfs_inode.h"
 +#include "xfs_inode_item.h"
 +#include "xfs_alloc.h"
 +#include "xfs_ialloc.h"
++=======
+ #include "xfs_da_format.h"
+ #include "xfs_inode.h"
+ #include "xfs_trans.h"
+ #include "xfs_log.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_log_priv.h"
 +#include "xfs_buf_item.h"
  #include "xfs_log_recover.h"
+ #include "xfs_inode_item.h"
  #include "xfs_extfree_item.h"
  #include "xfs_trans_priv.h"
+ #include "xfs_alloc.h"
+ #include "xfs_ialloc.h"
  #include "xfs_quota.h"
 +#include "xfs_utils.h"
  #include "xfs_cksum.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
++<<<<<<< HEAD
 +#include "xfs_icreate_item.h"
 +
 +/* Need all the magic numbers and buffer ops structures from these headers */
 +#include "xfs_symlink.h"
 +#include "xfs_da_btree.h"
 +#include "xfs_dir2_format.h"
 +#include "xfs_dir2_priv.h"
 +#include "xfs_attr_leaf.h"
 +#include "xfs_attr_remote.h"
++=======
+ #include "xfs_bmap_btree.h"
+ #include "xfs_dinode.h"
+ #include "xfs_error.h"
+ #include "xfs_dir2.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  #define BLK_AVG(blk1, blk2)	((blk1+blk2) >> 1)
  
diff --cc fs/xfs/xfs_log_rlimit.c
index 0961310abe46,2af1a0a4d0f1..000000000000
--- a/fs/xfs/xfs_log_rlimit.c
+++ b/fs/xfs/xfs_log_rlimit.c
@@@ -18,13 -18,14 +18,18 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_ag.h"
  #include "xfs_sb.h"
  #include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_trans_space.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
  #include "xfs_da_btree.h"
  #include "xfs_attr_leaf.h"
diff --cc fs/xfs/xfs_mount.c
index 9d69bf0d2d6d,da88f167af78..000000000000
--- a/fs/xfs/xfs_mount.c
+++ b/fs/xfs/xfs_mount.c
@@@ -17,23 -17,18 +17,30 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
  #include "xfs_bit.h"
 +#include "xfs_log.h"
  #include "xfs_inum.h"
++<<<<<<< HEAD
 +#include "xfs_trans.h"
 +#include "xfs_trans_priv.h"
 +#include "xfs_sb.h"
 +#include "xfs_ag.h"
 +#include "xfs_dir2.h"
 +#include "xfs_mount.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_sb.h"
+ #include "xfs_ag.h"
+ #include "xfs_mount.h"
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
- #include "xfs_btree.h"
+ #include "xfs_dir2.h"
  #include "xfs_ialloc.h"
  #include "xfs_alloc.h"
  #include "xfs_rtalloc.h"
@@@ -41,11 -39,8 +51,9 @@@
  #include "xfs_error.h"
  #include "xfs_quota.h"
  #include "xfs_fsops.h"
 +#include "xfs_utils.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
- #include "xfs_cksum.h"
- #include "xfs_buf_item.h"
  
  
  #ifdef HAVE_PERCPU_SB
diff --cc fs/xfs/xfs_qm.c
index 751ca74f1dd4,14a4996cfec6..000000000000
--- a/fs/xfs/xfs_qm.c
+++ b/fs/xfs/xfs_qm.c
@@@ -17,29 -17,23 +17,40 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
+ #include "xfs_shared.h"
  #include "xfs_format.h"
++<<<<<<< HEAD
 +#include "xfs_shared.h"
++=======
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_alloc.h"
 +#include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
  #include "xfs_ialloc.h"
  #include "xfs_itable.h"
++<<<<<<< HEAD
 +#include "xfs_rtalloc.h"
 +#include "xfs_error.h"
 +#include "xfs_bmap.h"
 +#include "xfs_attr.h"
 +#include "xfs_buf_item.h"
++=======
+ #include "xfs_quota.h"
+ #include "xfs_error.h"
+ #include "xfs_bmap.h"
+ #include "xfs_bmap_btree.h"
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trans_space.h"
 +#include "xfs_utils.h"
  #include "xfs_qm.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
diff --cc fs/xfs/xfs_qm_bhv.c
index 3af50ccdfac1,e9be63abd8d2..000000000000
--- a/fs/xfs/xfs_qm_bhv.c
+++ b/fs/xfs/xfs_qm_bhv.c
@@@ -18,21 -18,15 +18,20 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
- #include "xfs_alloc.h"
  #include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
- #include "xfs_itable.h"
- #include "xfs_bmap.h"
- #include "xfs_rtalloc.h"
  #include "xfs_error.h"
++<<<<<<< HEAD
 +#include "xfs_attr.h"
 +#include "xfs_buf_item.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_qm.h"
  
  
diff --cc fs/xfs/xfs_qm_syscalls.c
index 815f3b644c71,437c9198031a..000000000000
--- a/fs/xfs/xfs_qm_syscalls.c
+++ b/fs/xfs/xfs_qm_syscalls.c
@@@ -20,26 -20,18 +20,29 @@@
  
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
- #include "xfs_alloc.h"
- #include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
++<<<<<<< HEAD
 +#include "xfs_inode_item.h"
 +#include "xfs_itable.h"
 +#include "xfs_bmap.h"
 +#include "xfs_rtalloc.h"
 +#include "xfs_error.h"
 +#include "xfs_attr.h"
 +#include "xfs_buf_item.h"
 +#include "xfs_utils.h"
++=======
+ #include "xfs_trans.h"
+ #include "xfs_error.h"
+ #include "xfs_quota.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_qm.h"
  #include "xfs_trace.h"
  #include "xfs_icache.h"
diff --cc fs/xfs/xfs_rtalloc.c
index b56167118fa2,d5da15578185..000000000000
--- a/fs/xfs/xfs_rtalloc.c
+++ b/fs/xfs/xfs_rtalloc.c
@@@ -17,27 -17,22 +17,28 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 +#include "xfs_dir2.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
- #include "xfs_alloc.h"
  #include "xfs_bmap.h"
  #include "xfs_bmap_util.h"
- #include "xfs_rtalloc.h"
- #include "xfs_fsops.h"
+ #include "xfs_bmap_btree.h"
+ #include "xfs_alloc.h"
  #include "xfs_error.h"
++<<<<<<< HEAD
 +#include "xfs_inode_item.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trans_space.h"
 +#include "xfs_utils.h"
  #include "xfs_trace.h"
  #include "xfs_buf.h"
  #include "xfs_icache.h"
diff --cc fs/xfs/xfs_sb.c
index b4762279bb78,05b5493d2baa..000000000000
--- a/fs/xfs/xfs_sb.c
+++ b/fs/xfs/xfs_sb.c
@@@ -18,33 -18,24 +18,42 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
  #include "xfs_bit.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_inum.h"
 +#include "xfs_trans.h"
 +#include "xfs_trans_priv.h"
 +#include "xfs_sb.h"
 +#include "xfs_ag.h"
 +#include "xfs_mount.h"
 +#include "xfs_da_btree.h"
 +#include "xfs_dir2_format.h"
 +#include "xfs_dir2.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_sb.h"
+ #include "xfs_ag.h"
+ #include "xfs_mount.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
- #include "xfs_btree.h"
  #include "xfs_ialloc.h"
  #include "xfs_alloc.h"
- #include "xfs_rtalloc.h"
- #include "xfs_bmap.h"
  #include "xfs_error.h"
- #include "xfs_quota.h"
- #include "xfs_fsops.h"
  #include "xfs_trace.h"
  #include "xfs_cksum.h"
++<<<<<<< HEAD
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_buf_item.h"
+ #include "xfs_dinode.h"
+ #include "xfs_bmap_btree.h"
+ #include "xfs_alloc_btree.h"
+ #include "xfs_ialloc_btree.h"
  
  /*
   * Physical superblock buffer manipulations. Shared with libxfs in userspace.
diff --cc fs/xfs/xfs_super.c
index 54773aabb88d,4eb63ad87d7d..000000000000
--- a/fs/xfs/xfs_super.c
+++ b/fs/xfs/xfs_super.c
@@@ -17,37 -17,27 +17,42 @@@
   */
  
  #include "xfs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
 +#include "xfs_log.h"
  #include "xfs_inum.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
++<<<<<<< HEAD
 +#include "xfs_dir2.h"
 +#include "xfs_alloc.h"
 +#include "xfs_quota.h"
 +#include "xfs_mount.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_mount.h"
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
  #include "xfs_btree.h"
- #include "xfs_ialloc.h"
  #include "xfs_bmap.h"
- #include "xfs_rtalloc.h"
+ #include "xfs_alloc.h"
  #include "xfs_error.h"
- #include "xfs_itable.h"
  #include "xfs_fsops.h"
++<<<<<<< HEAD
 +#include "xfs_attr.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_buf_item.h"
 -#include "xfs_log.h"
 +#include "xfs_utils.h"
 +#include "xfs_vnodeops.h"
  #include "xfs_log_priv.h"
- #include "xfs_trans_priv.h"
- #include "xfs_filestream.h"
  #include "xfs_da_btree.h"
 -#include "xfs_dir2.h"
  #include "xfs_extfree_item.h"
  #include "xfs_mru_cache.h"
  #include "xfs_inode_item.h"
diff --cc fs/xfs/xfs_symlink.c
index 5c34f55946d7,14e58f2c96bd..000000000000
--- a/fs/xfs/xfs_symlink.c
+++ b/fs/xfs/xfs_symlink.c
@@@ -17,20 -17,17 +17,23 @@@
   * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
   */
  #include "xfs.h"
 -#include "xfs_shared.h"
  #include "xfs_fs.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
  #include "xfs_bit.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
 -#include "xfs_mount.h"
 -#include "xfs_da_format.h"
  #include "xfs_dir2.h"
++<<<<<<< HEAD
 +#include "xfs_mount.h"
 +#include "xfs_da_btree.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
  #include "xfs_ialloc.h"
  #include "xfs_alloc.h"
@@@ -42,7 -39,9 +46,13 @@@
  #include "xfs_trans_space.h"
  #include "xfs_trace.h"
  #include "xfs_symlink.h"
++<<<<<<< HEAD
 +#include "xfs_buf_item.h"
++=======
+ #include "xfs_trans.h"
+ #include "xfs_log.h"
+ #include "xfs_dinode.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  
  /* ----- Kernel only functions below ----- */
  STATIC int
diff --cc fs/xfs/xfs_trace.c
index 29705391c896,dee3279c095e..000000000000
--- a/fs/xfs/xfs_trace.c
+++ b/fs/xfs/xfs_trace.c
@@@ -17,19 -17,16 +17,24 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
++<<<<<<< HEAD
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_mount.h"
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
  #include "xfs_btree.h"
 +#include "xfs_mount.h"
  #include "xfs_da_btree.h"
  #include "xfs_ialloc.h"
  #include "xfs_itable.h"
diff --cc fs/xfs/xfs_trans.c
index 8de69c5e24f2,c812c5c060de..000000000000
--- a/fs/xfs/xfs_trans.c
+++ b/fs/xfs/xfs_trans.c
@@@ -25,26 -25,14 +25,30 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_error.h"
 +#include "xfs_da_btree.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
- #include "xfs_btree.h"
- #include "xfs_ialloc.h"
- #include "xfs_alloc.h"
  #include "xfs_extent_busy.h"
- #include "xfs_bmap.h"
  #include "xfs_quota.h"
 -#include "xfs_trans.h"
 +#include "xfs_qm.h"
  #include "xfs_trans_priv.h"
++<<<<<<< HEAD
 +#include "xfs_trans_space.h"
 +#include "xfs_inode_item.h"
 +#include "xfs_log_priv.h"
 +#include "xfs_buf_item.h"
++=======
+ #include "xfs_log.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trace.h"
+ #include "xfs_error.h"
  
  kmem_zone_t	*xfs_trans_zone;
  kmem_zone_t	*xfs_log_item_desc_zone;
diff --cc fs/xfs/xfs_trans_buf.c
index 0167a65ec851,c035d11b7734..000000000000
--- a/fs/xfs/xfs_trans_buf.c
+++ b/fs/xfs/xfs_trans_buf.c
@@@ -18,16 -18,14 +18,18 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
 -#include "xfs_trans.h"
  #include "xfs_buf_item.h"
  #include "xfs_trans_priv.h"
  #include "xfs_error.h"
diff --cc fs/xfs/xfs_trans_dquot.c
index 4d630d2c2804,cd2a10e15d3a..000000000000
--- a/fs/xfs/xfs_trans_dquot.c
+++ b/fs/xfs/xfs_trans_dquot.c
@@@ -17,24 -17,18 +17,23 @@@
   */
  #include "xfs.h"
  #include "xfs_fs.h"
 -#include "xfs_shared.h"
  #include "xfs_format.h"
 -#include "xfs_log_format.h"
 -#include "xfs_trans_resv.h"
 +#include "xfs_shared.h"
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
  #include "xfs_sb.h"
  #include "xfs_ag.h"
- #include "xfs_alloc.h"
- #include "xfs_quota.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
  #include "xfs_inode.h"
- #include "xfs_itable.h"
- #include "xfs_bmap.h"
- #include "xfs_rtalloc.h"
  #include "xfs_error.h"
++<<<<<<< HEAD
 +#include "xfs_attr.h"
 +#include "xfs_buf_item.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trans_priv.h"
+ #include "xfs_quota.h"
  #include "xfs_qm.h"
  
  STATIC void	xfs_trans_alloc_dqinfo(xfs_trans_t *);
diff --cc fs/xfs/xfs_trans_inode.c
index dcab52ec9cb6,1bba7f60d94c..000000000000
--- a/fs/xfs/xfs_trans_inode.c
+++ b/fs/xfs/xfs_trans_inode.c
@@@ -18,17 -18,14 +18,23 @@@
  #include "xfs.h"
  #include "xfs_fs.h"
  #include "xfs_shared.h"
++<<<<<<< HEAD
 +#include "xfs_log.h"
 +#include "xfs_trans.h"
++=======
+ #include "xfs_format.h"
+ #include "xfs_log_format.h"
+ #include "xfs_trans_resv.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
- #include "xfs_bmap_btree.h"
- #include "xfs_alloc_btree.h"
- #include "xfs_ialloc_btree.h"
- #include "xfs_dinode.h"
  #include "xfs_inode.h"
++<<<<<<< HEAD
 +#include "xfs_btree.h"
++=======
+ #include "xfs_trans.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_trans_priv.h"
  #include "xfs_inode_item.h"
  #include "xfs_trace.h"
diff --cc fs/xfs/xfs_trans_resv.c
index a90fe66930d0,d53d9f0627a7..000000000000
--- a/fs/xfs/xfs_trans_resv.c
+++ b/fs/xfs/xfs_trans_resv.c
@@@ -26,20 -25,12 +26,20 @@@
  #include "xfs_sb.h"
  #include "xfs_ag.h"
  #include "xfs_mount.h"
++<<<<<<< HEAD
 +#include "xfs_error.h"
 +#include "xfs_da_btree.h"
 +#include "xfs_bmap_btree.h"
 +#include "xfs_alloc_btree.h"
 +#include "xfs_ialloc_btree.h"
 +#include "xfs_dinode.h"
++=======
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
- #include "xfs_btree.h"
+ #include "xfs_bmap_btree.h"
  #include "xfs_ialloc.h"
- #include "xfs_alloc.h"
- #include "xfs_extent_busy.h"
- #include "xfs_bmap.h"
- #include "xfs_bmap_util.h"
  #include "xfs_quota.h"
 -#include "xfs_trans.h"
  #include "xfs_qm.h"
  #include "xfs_trans_space.h"
  #include "xfs_trace.h"
diff --cc fs/xfs/xfs_xattr.c
index b7311aaa5f0e,9d479073ba41..000000000000
--- a/fs/xfs/xfs_xattr.c
+++ b/fs/xfs/xfs_xattr.c
@@@ -17,9 -17,13 +17,18 @@@
   */
  
  #include "xfs.h"
+ #include "xfs_format.h"
  #include "xfs_log_format.h"
++<<<<<<< HEAD
 +#include "xfs_da_btree.h"
 +#include "xfs_bmap_btree.h"
++=======
+ #include "xfs_trans_resv.h"
+ #include "xfs_sb.h"
+ #include "xfs_ag.h"
+ #include "xfs_mount.h"
+ #include "xfs_da_format.h"
++>>>>>>> a4fbe6ab1e7a (xfs: decouple inode and bmap btree header files)
  #include "xfs_inode.h"
  #include "xfs_attr.h"
  #include "xfs_attr_leaf.h"
* Unmerged path fs/xfs/xfs_dir2_readdir.c
* Unmerged path fs/xfs/xfs_dquot_buf.c
* Unmerged path fs/xfs/xfs_acl.c
diff --git a/fs/xfs/xfs_alloc.c b/fs/xfs/xfs_alloc.c
index 2bfca06e0ee7..980b624aa453 100644
--- a/fs/xfs/xfs_alloc.c
+++ b/fs/xfs/xfs_alloc.c
@@ -25,12 +25,9 @@
 #include "xfs_sb.h"
 #include "xfs_ag.h"
 #include "xfs_mount.h"
-#include "xfs_bmap_btree.h"
-#include "xfs_alloc_btree.h"
-#include "xfs_ialloc_btree.h"
-#include "xfs_dinode.h"
 #include "xfs_inode.h"
 #include "xfs_btree.h"
+#include "xfs_alloc_btree.h"
 #include "xfs_alloc.h"
 #include "xfs_extent_busy.h"
 #include "xfs_error.h"
* Unmerged path fs/xfs/xfs_alloc_btree.c
diff --git a/fs/xfs/xfs_alloc_btree.h b/fs/xfs/xfs_alloc_btree.h
index 72676c36b1bb..45e189e7e81c 100644
--- a/fs/xfs/xfs_alloc_btree.h
+++ b/fs/xfs/xfs_alloc_btree.h
@@ -26,39 +26,6 @@ struct xfs_buf;
 struct xfs_btree_cur;
 struct xfs_mount;
 
-/*
- * There are two on-disk btrees, one sorted by blockno and one sorted
- * by blockcount and blockno.  All blocks look the same to make the code
- * simpler; if we have time later, we'll make the optimizations.
- */
-#define	XFS_ABTB_MAGIC		0x41425442	/* 'ABTB' for bno tree */
-#define	XFS_ABTB_CRC_MAGIC	0x41423342	/* 'AB3B' */
-#define	XFS_ABTC_MAGIC		0x41425443	/* 'ABTC' for cnt tree */
-#define	XFS_ABTC_CRC_MAGIC	0x41423343	/* 'AB3C' */
-
-/*
- * Data record/key structure
- */
-typedef struct xfs_alloc_rec {
-	__be32		ar_startblock;	/* starting block number */
-	__be32		ar_blockcount;	/* count of free blocks */
-} xfs_alloc_rec_t, xfs_alloc_key_t;
-
-typedef struct xfs_alloc_rec_incore {
-	xfs_agblock_t	ar_startblock;	/* starting block number */
-	xfs_extlen_t	ar_blockcount;	/* count of free blocks */
-} xfs_alloc_rec_incore_t;
-
-/* btree pointer type */
-typedef __be32 xfs_alloc_ptr_t;
-
-/*
- * Block numbers in the AG:
- * SB is sector 0, AGF is sector 1, AGI is sector 2, AGFL is sector 3.
- */
-#define	XFS_BNO_BLOCK(mp)	((xfs_agblock_t)(XFS_AGFL_BLOCK(mp) + 1))
-#define	XFS_CNT_BLOCK(mp)	((xfs_agblock_t)(XFS_BNO_BLOCK(mp) + 1))
-
 /*
  * Btree block header size depends on a superblock flag.
  */
diff --git a/fs/xfs/xfs_aops.c b/fs/xfs/xfs_aops.c
index b67a64249b4e..b6ba0a536860 100644
--- a/fs/xfs/xfs_aops.c
+++ b/fs/xfs/xfs_aops.c
@@ -23,8 +23,6 @@
 #include "xfs_log.h"
 #include "xfs_trans.h"
 #include "xfs_mount.h"
-#include "xfs_bmap_btree.h"
-#include "xfs_dinode.h"
 #include "xfs_inode.h"
 #include "xfs_inode_item.h"
 #include "xfs_alloc.h"
@@ -34,6 +32,8 @@
 #include "xfs_trace.h"
 #include "xfs_bmap.h"
 #include "xfs_bmap_util.h"
+#include "xfs_bmap_btree.h"
+#include "xfs_dinode.h"
 #include <linux/aio.h>
 #include <linux/gfp.h>
 #include <linux/mpage.h>
diff --git a/fs/xfs/xfs_attr.c b/fs/xfs/xfs_attr.c
index 7a29b9d160d9..6493701a5345 100644
--- a/fs/xfs/xfs_attr.c
+++ b/fs/xfs/xfs_attr.c
@@ -27,14 +27,13 @@
 #include "xfs_ag.h"
 #include "xfs_mount.h"
 #include "xfs_da_btree.h"
-#include "xfs_bmap_btree.h"
 #include "xfs_attr_sf.h"
-#include "xfs_dinode.h"
 #include "xfs_inode.h"
 #include "xfs_alloc.h"
 #include "xfs_inode_item.h"
 #include "xfs_bmap.h"
 #include "xfs_bmap_util.h"
+#include "xfs_bmap_btree.h"
 #include "xfs_attr.h"
 #include "xfs_attr_leaf.h"
 #include "xfs_attr_remote.h"
@@ -43,6 +42,7 @@
 #include "xfs_trans_space.h"
 #include "xfs_vnodeops.h"
 #include "xfs_trace.h"
+#include "xfs_dinode.h"
 
 /*
  * xfs_attr.c
* Unmerged path fs/xfs/xfs_attr_inactive.c
* Unmerged path fs/xfs/xfs_attr_leaf.c
* Unmerged path fs/xfs/xfs_attr_list.c
* Unmerged path fs/xfs/xfs_attr_remote.c
* Unmerged path fs/xfs/xfs_bmap.c
diff --git a/fs/xfs/xfs_bmap_btree.c b/fs/xfs/xfs_bmap_btree.c
index cf3bc76710c3..80bd04ff94ca 100644
--- a/fs/xfs/xfs_bmap_btree.c
+++ b/fs/xfs/xfs_bmap_btree.c
@@ -24,20 +24,17 @@
 #include "xfs_sb.h"
 #include "xfs_ag.h"
 #include "xfs_mount.h"
-#include "xfs_bmap_btree.h"
-#include "xfs_alloc_btree.h"
-#include "xfs_ialloc_btree.h"
-#include "xfs_dinode.h"
 #include "xfs_inode.h"
 #include "xfs_inode_item.h"
 #include "xfs_alloc.h"
 #include "xfs_btree.h"
-#include "xfs_itable.h"
+#include "xfs_bmap_btree.h"
 #include "xfs_bmap.h"
 #include "xfs_error.h"
 #include "xfs_quota.h"
 #include "xfs_trace.h"
 #include "xfs_cksum.h"
+#include "xfs_dinode.h"
 
 /*
  * Determine the extent state.
diff --git a/fs/xfs/xfs_bmap_btree.h b/fs/xfs/xfs_bmap_btree.h
index e307978ff41b..2379d334712b 100644
--- a/fs/xfs/xfs_bmap_btree.h
+++ b/fs/xfs/xfs_bmap_btree.h
@@ -18,94 +18,12 @@
 #ifndef __XFS_BMAP_BTREE_H__
 #define __XFS_BMAP_BTREE_H__
 
-#define XFS_BMAP_MAGIC		0x424d4150	/* 'BMAP' */
-#define XFS_BMAP_CRC_MAGIC	0x424d4133	/* 'BMA3' */
-
 struct xfs_btree_cur;
 struct xfs_btree_block;
 struct xfs_mount;
 struct xfs_inode;
 struct xfs_trans;
 
-/*
- * Bmap root header, on-disk form only.
- */
-typedef struct xfs_bmdr_block {
-	__be16		bb_level;	/* 0 is a leaf */
-	__be16		bb_numrecs;	/* current # of data records */
-} xfs_bmdr_block_t;
-
-/*
- * Bmap btree record and extent descriptor.
- *  l0:63 is an extent flag (value 1 indicates non-normal).
- *  l0:9-62 are startoff.
- *  l0:0-8 and l1:21-63 are startblock.
- *  l1:0-20 are blockcount.
- */
-#define BMBT_EXNTFLAG_BITLEN	1
-#define BMBT_STARTOFF_BITLEN	54
-#define BMBT_STARTBLOCK_BITLEN	52
-#define BMBT_BLOCKCOUNT_BITLEN	21
-
-typedef struct xfs_bmbt_rec {
-	__be64			l0, l1;
-} xfs_bmbt_rec_t;
-
-typedef __uint64_t	xfs_bmbt_rec_base_t;	/* use this for casts */
-typedef xfs_bmbt_rec_t xfs_bmdr_rec_t;
-
-typedef struct xfs_bmbt_rec_host {
-	__uint64_t		l0, l1;
-} xfs_bmbt_rec_host_t;
-
-/*
- * Values and macros for delayed-allocation startblock fields.
- */
-#define STARTBLOCKVALBITS	17
-#define STARTBLOCKMASKBITS	(15 + XFS_BIG_BLKNOS * 20)
-#define DSTARTBLOCKMASKBITS	(15 + 20)
-#define STARTBLOCKMASK		\
-	(((((xfs_fsblock_t)1) << STARTBLOCKMASKBITS) - 1) << STARTBLOCKVALBITS)
-#define DSTARTBLOCKMASK		\
-	(((((xfs_dfsbno_t)1) << DSTARTBLOCKMASKBITS) - 1) << STARTBLOCKVALBITS)
-
-static inline int isnullstartblock(xfs_fsblock_t x)
-{
-	return ((x) & STARTBLOCKMASK) == STARTBLOCKMASK;
-}
-
-static inline int isnulldstartblock(xfs_dfsbno_t x)
-{
-	return ((x) & DSTARTBLOCKMASK) == DSTARTBLOCKMASK;
-}
-
-static inline xfs_fsblock_t nullstartblock(int k)
-{
-	ASSERT(k < (1 << STARTBLOCKVALBITS));
-	return STARTBLOCKMASK | (k);
-}
-
-static inline xfs_filblks_t startblockval(xfs_fsblock_t x)
-{
-	return (xfs_filblks_t)((x) & ~STARTBLOCKMASK);
-}
-
-/*
- * Possible extent formats.
- */
-typedef enum {
-	XFS_EXTFMT_NOSTATE = 0,
-	XFS_EXTFMT_HASSTATE
-} xfs_exntfmt_t;
-
-/*
- * Possible extent states.
- */
-typedef enum {
-	XFS_EXT_NORM, XFS_EXT_UNWRITTEN,
-	XFS_EXT_DMAPI_OFFLINE, XFS_EXT_INVALID
-} xfs_exntst_t;
-
 /*
  * Extent state and extent format macros.
  */
@@ -114,27 +32,6 @@ typedef enum {
 		XFS_EXTFMT_HASSTATE : XFS_EXTFMT_NOSTATE)
 #define ISUNWRITTEN(x)	((x)->br_state == XFS_EXT_UNWRITTEN)
 
-/*
- * Incore version of above.
- */
-typedef struct xfs_bmbt_irec
-{
-	xfs_fileoff_t	br_startoff;	/* starting file offset */
-	xfs_fsblock_t	br_startblock;	/* starting block number */
-	xfs_filblks_t	br_blockcount;	/* number of blocks */
-	xfs_exntst_t	br_state;	/* extent state */
-} xfs_bmbt_irec_t;
-
-/*
- * Key structure for non-leaf levels of the tree.
- */
-typedef struct xfs_bmbt_key {
-	__be64		br_startoff;	/* starting file offset */
-} xfs_bmbt_key_t, xfs_bmdr_key_t;
-
-/* btree pointer type */
-typedef __be64 xfs_bmbt_ptr_t, xfs_bmdr_ptr_t;
-
 /*
  * Btree block header size depends on a superblock flag.
  */
* Unmerged path fs/xfs/xfs_bmap_util.c
* Unmerged path fs/xfs/xfs_btree.c
diff --git a/fs/xfs/xfs_btree.h b/fs/xfs/xfs_btree.h
index c8473c7ef45e..3245b7060a04 100644
--- a/fs/xfs/xfs_btree.h
+++ b/fs/xfs/xfs_btree.h
@@ -26,73 +26,6 @@ struct xfs_trans;
 
 extern kmem_zone_t	*xfs_btree_cur_zone;
 
-/*
- * This nonsense is to make -wlint happy.
- */
-#define	XFS_LOOKUP_EQ	((xfs_lookup_t)XFS_LOOKUP_EQi)
-#define	XFS_LOOKUP_LE	((xfs_lookup_t)XFS_LOOKUP_LEi)
-#define	XFS_LOOKUP_GE	((xfs_lookup_t)XFS_LOOKUP_GEi)
-
-#define	XFS_BTNUM_BNO	((xfs_btnum_t)XFS_BTNUM_BNOi)
-#define	XFS_BTNUM_CNT	((xfs_btnum_t)XFS_BTNUM_CNTi)
-#define	XFS_BTNUM_BMAP	((xfs_btnum_t)XFS_BTNUM_BMAPi)
-#define	XFS_BTNUM_INO	((xfs_btnum_t)XFS_BTNUM_INOi)
-
-/*
- * Generic btree header.
- *
- * This is a combination of the actual format used on disk for short and long
- * format btrees.  The first three fields are shared by both format, but the
- * pointers are different and should be used with care.
- *
- * To get the size of the actual short or long form headers please use the size
- * macros below.  Never use sizeof(xfs_btree_block).
- *
- * The blkno, crc, lsn, owner and uuid fields are only available in filesystems
- * with the crc feature bit, and all accesses to them must be conditional on
- * that flag.
- */
-struct xfs_btree_block {
-	__be32		bb_magic;	/* magic number for block type */
-	__be16		bb_level;	/* 0 is a leaf */
-	__be16		bb_numrecs;	/* current # of data records */
-	union {
-		struct {
-			__be32		bb_leftsib;
-			__be32		bb_rightsib;
-
-			__be64		bb_blkno;
-			__be64		bb_lsn;
-			uuid_t		bb_uuid;
-			__be32		bb_owner;
-			__le32		bb_crc;
-		} s;			/* short form pointers */
-		struct	{
-			__be64		bb_leftsib;
-			__be64		bb_rightsib;
-
-			__be64		bb_blkno;
-			__be64		bb_lsn;
-			uuid_t		bb_uuid;
-			__be64		bb_owner;
-			__le32		bb_crc;
-			__be32		bb_pad; /* padding for alignment */
-		} l;			/* long form pointers */
-	} bb_u;				/* rest */
-};
-
-#define XFS_BTREE_SBLOCK_LEN	16	/* size of a short form block */
-#define XFS_BTREE_LBLOCK_LEN	24	/* size of a long form block */
-
-/* sizes of CRC enabled btree blocks */
-#define XFS_BTREE_SBLOCK_CRC_LEN	(XFS_BTREE_SBLOCK_LEN + 40)
-#define XFS_BTREE_LBLOCK_CRC_LEN	(XFS_BTREE_LBLOCK_LEN + 48)
-
-#define XFS_BTREE_SBLOCK_CRC_OFF \
-	offsetof(struct xfs_btree_block, bb_u.s.bb_crc)
-#define XFS_BTREE_LBLOCK_CRC_OFF \
-	offsetof(struct xfs_btree_block, bb_u.l.bb_crc)
-
 /*
  * Generic key, ptr and record wrapper structures.
  *
@@ -118,6 +51,18 @@ union xfs_btree_rec {
 	xfs_inobt_rec_t		inobt;
 };
 
+/*
+ * This nonsense is to make -wlint happy.
+ */
+#define	XFS_LOOKUP_EQ	((xfs_lookup_t)XFS_LOOKUP_EQi)
+#define	XFS_LOOKUP_LE	((xfs_lookup_t)XFS_LOOKUP_LEi)
+#define	XFS_LOOKUP_GE	((xfs_lookup_t)XFS_LOOKUP_GEi)
+
+#define	XFS_BTNUM_BNO	((xfs_btnum_t)XFS_BTNUM_BNOi)
+#define	XFS_BTNUM_CNT	((xfs_btnum_t)XFS_BTNUM_CNTi)
+#define	XFS_BTNUM_BMAP	((xfs_btnum_t)XFS_BTNUM_BMAPi)
+#define	XFS_BTNUM_INO	((xfs_btnum_t)XFS_BTNUM_INOi)
+
 /*
  * For logging record fields.
  */
diff --git a/fs/xfs/xfs_buf_item.h b/fs/xfs/xfs_buf_item.h
index db6371087fe8..3f3455a41510 100644
--- a/fs/xfs/xfs_buf_item.h
+++ b/fs/xfs/xfs_buf_item.h
@@ -71,10 +71,6 @@ void	xfs_buf_attach_iodone(struct xfs_buf *,
 void	xfs_buf_iodone_callbacks(struct xfs_buf *);
 void	xfs_buf_iodone(struct xfs_buf *, struct xfs_log_item *);
 
-void	xfs_trans_buf_set_type(struct xfs_trans *, struct xfs_buf *,
-			       enum xfs_blft);
-void	xfs_trans_buf_copy_type(struct xfs_buf *dst_bp, struct xfs_buf *src_bp);
-
 extern kmem_zone_t	*xfs_buf_item_zone;
 
 #endif	/* __XFS_BUF_ITEM_H__ */
diff --git a/fs/xfs/xfs_da_btree.c b/fs/xfs/xfs_da_btree.c
index 6a2a7bb089e3..673d4e7373a1 100644
--- a/fs/xfs/xfs_da_btree.c
+++ b/fs/xfs/xfs_da_btree.c
@@ -27,11 +27,9 @@
 #include "xfs_ag.h"
 #include "xfs_mount.h"
 #include "xfs_da_btree.h"
-#include "xfs_bmap_btree.h"
 #include "xfs_dir2.h"
 #include "xfs_dir2_format.h"
 #include "xfs_dir2_priv.h"
-#include "xfs_dinode.h"
 #include "xfs_inode.h"
 #include "xfs_inode_item.h"
 #include "xfs_alloc.h"
* Unmerged path fs/xfs/xfs_dir2.c
* Unmerged path fs/xfs/xfs_dir2_block.c
* Unmerged path fs/xfs/xfs_dir2_data.c
* Unmerged path fs/xfs/xfs_dir2_leaf.c
* Unmerged path fs/xfs/xfs_dir2_node.c
* Unmerged path fs/xfs/xfs_dir2_readdir.c
* Unmerged path fs/xfs/xfs_dir2_sf.c
diff --git a/fs/xfs/xfs_discard.c b/fs/xfs/xfs_discard.c
index 45560ee1a4ba..0f47014fa1cb 100644
--- a/fs/xfs/xfs_discard.c
+++ b/fs/xfs/xfs_discard.c
@@ -23,11 +23,9 @@
 #include "xfs_ag.h"
 #include "xfs_mount.h"
 #include "xfs_quota.h"
-#include "xfs_alloc_btree.h"
-#include "xfs_bmap_btree.h"
-#include "xfs_ialloc_btree.h"
-#include "xfs_btree.h"
 #include "xfs_inode.h"
+#include "xfs_btree.h"
+#include "xfs_alloc_btree.h"
 #include "xfs_alloc.h"
 #include "xfs_error.h"
 #include "xfs_extent_busy.h"
* Unmerged path fs/xfs/xfs_dquot.c
* Unmerged path fs/xfs/xfs_dquot_buf.c
* Unmerged path fs/xfs/xfs_dquot_item.c
* Unmerged path fs/xfs/xfs_error.c
* Unmerged path fs/xfs/xfs_export.c
diff --git a/fs/xfs/xfs_extent_busy.c b/fs/xfs/xfs_extent_busy.c
index 74828a7895eb..d6868be9131a 100644
--- a/fs/xfs/xfs_extent_busy.c
+++ b/fs/xfs/xfs_extent_busy.c
@@ -26,9 +26,7 @@
 #include "xfs_sb.h"
 #include "xfs_ag.h"
 #include "xfs_mount.h"
-#include "xfs_bmap_btree.h"
 #include "xfs_alloc.h"
-#include "xfs_inode.h"
 #include "xfs_extent_busy.h"
 #include "xfs_trace.h"
 
diff --git a/fs/xfs/xfs_extent_busy.h b/fs/xfs/xfs_extent_busy.h
index 985412d65ba5..bfff284d2dcc 100644
--- a/fs/xfs/xfs_extent_busy.h
+++ b/fs/xfs/xfs_extent_busy.h
@@ -20,6 +20,10 @@
 #ifndef __XFS_EXTENT_BUSY_H__
 #define	__XFS_EXTENT_BUSY_H__
 
+struct xfs_mount;
+struct xfs_trans;
+struct xfs_alloc_arg;
+
 /*
  * Busy block/extent entry.  Indexed by a rbtree in perag to mark blocks that
  * have been freed but whose transactions aren't committed to disk yet.
* Unmerged path fs/xfs/xfs_file.c
* Unmerged path fs/xfs/xfs_filestream.c
diff --git a/fs/xfs/xfs_format.h b/fs/xfs/xfs_format.h
index a790428f3bf4..b6ab5a3cfa12 100644
--- a/fs/xfs/xfs_format.h
+++ b/fs/xfs/xfs_format.h
@@ -156,4 +156,259 @@ struct xfs_dsymlink_hdr {
 	((bufsize) - (xfs_sb_version_hascrc(&(mp)->m_sb) ? \
 			sizeof(struct xfs_dsymlink_hdr) : 0))
 
+
+/*
+ * Allocation Btree format definitions
+ *
+ * There are two on-disk btrees, one sorted by blockno and one sorted
+ * by blockcount and blockno.  All blocks look the same to make the code
+ * simpler; if we have time later, we'll make the optimizations.
+ */
+#define	XFS_ABTB_MAGIC		0x41425442	/* 'ABTB' for bno tree */
+#define	XFS_ABTB_CRC_MAGIC	0x41423342	/* 'AB3B' */
+#define	XFS_ABTC_MAGIC		0x41425443	/* 'ABTC' for cnt tree */
+#define	XFS_ABTC_CRC_MAGIC	0x41423343	/* 'AB3C' */
+
+/*
+ * Data record/key structure
+ */
+typedef struct xfs_alloc_rec {
+	__be32		ar_startblock;	/* starting block number */
+	__be32		ar_blockcount;	/* count of free blocks */
+} xfs_alloc_rec_t, xfs_alloc_key_t;
+
+typedef struct xfs_alloc_rec_incore {
+	xfs_agblock_t	ar_startblock;	/* starting block number */
+	xfs_extlen_t	ar_blockcount;	/* count of free blocks */
+} xfs_alloc_rec_incore_t;
+
+/* btree pointer type */
+typedef __be32 xfs_alloc_ptr_t;
+
+/*
+ * Block numbers in the AG:
+ * SB is sector 0, AGF is sector 1, AGI is sector 2, AGFL is sector 3.
+ */
+#define	XFS_BNO_BLOCK(mp)	((xfs_agblock_t)(XFS_AGFL_BLOCK(mp) + 1))
+#define	XFS_CNT_BLOCK(mp)	((xfs_agblock_t)(XFS_BNO_BLOCK(mp) + 1))
+
+
+/*
+ * Inode Allocation Btree format definitions
+ *
+ * There is a btree for the inode map per allocation group.
+ */
+#define	XFS_IBT_MAGIC		0x49414254	/* 'IABT' */
+#define	XFS_IBT_CRC_MAGIC	0x49414233	/* 'IAB3' */
+
+typedef	__uint64_t	xfs_inofree_t;
+#define	XFS_INODES_PER_CHUNK		(NBBY * sizeof(xfs_inofree_t))
+#define	XFS_INODES_PER_CHUNK_LOG	(XFS_NBBYLOG + 3)
+#define	XFS_INOBT_ALL_FREE		((xfs_inofree_t)-1)
+#define	XFS_INOBT_MASK(i)		((xfs_inofree_t)1 << (i))
+
+static inline xfs_inofree_t xfs_inobt_maskn(int i, int n)
+{
+	return ((n >= XFS_INODES_PER_CHUNK ? 0 : XFS_INOBT_MASK(n)) - 1) << i;
+}
+
+/*
+ * Data record structure
+ */
+typedef struct xfs_inobt_rec {
+	__be32		ir_startino;	/* starting inode number */
+	__be32		ir_freecount;	/* count of free inodes (set bits) */
+	__be64		ir_free;	/* free inode mask */
+} xfs_inobt_rec_t;
+
+typedef struct xfs_inobt_rec_incore {
+	xfs_agino_t	ir_startino;	/* starting inode number */
+	__int32_t	ir_freecount;	/* count of free inodes (set bits) */
+	xfs_inofree_t	ir_free;	/* free inode mask */
+} xfs_inobt_rec_incore_t;
+
+
+/*
+ * Key structure
+ */
+typedef struct xfs_inobt_key {
+	__be32		ir_startino;	/* starting inode number */
+} xfs_inobt_key_t;
+
+/* btree pointer type */
+typedef __be32 xfs_inobt_ptr_t;
+
+/*
+ * block numbers in the AG.
+ */
+#define	XFS_IBT_BLOCK(mp)		((xfs_agblock_t)(XFS_CNT_BLOCK(mp) + 1))
+#define	XFS_PREALLOC_BLOCKS(mp)		((xfs_agblock_t)(XFS_IBT_BLOCK(mp) + 1))
+
+
+
+/*
+ * BMAP Btree format definitions
+ *
+ * This includes both the root block definition that sits inside an inode fork
+ * and the record/pointer formats for the leaf/node in the blocks.
+ */
+#define XFS_BMAP_MAGIC		0x424d4150	/* 'BMAP' */
+#define XFS_BMAP_CRC_MAGIC	0x424d4133	/* 'BMA3' */
+
+/*
+ * Bmap root header, on-disk form only.
+ */
+typedef struct xfs_bmdr_block {
+	__be16		bb_level;	/* 0 is a leaf */
+	__be16		bb_numrecs;	/* current # of data records */
+} xfs_bmdr_block_t;
+
+/*
+ * Bmap btree record and extent descriptor.
+ *  l0:63 is an extent flag (value 1 indicates non-normal).
+ *  l0:9-62 are startoff.
+ *  l0:0-8 and l1:21-63 are startblock.
+ *  l1:0-20 are blockcount.
+ */
+#define BMBT_EXNTFLAG_BITLEN	1
+#define BMBT_STARTOFF_BITLEN	54
+#define BMBT_STARTBLOCK_BITLEN	52
+#define BMBT_BLOCKCOUNT_BITLEN	21
+
+typedef struct xfs_bmbt_rec {
+	__be64			l0, l1;
+} xfs_bmbt_rec_t;
+
+typedef __uint64_t	xfs_bmbt_rec_base_t;	/* use this for casts */
+typedef xfs_bmbt_rec_t xfs_bmdr_rec_t;
+
+typedef struct xfs_bmbt_rec_host {
+	__uint64_t		l0, l1;
+} xfs_bmbt_rec_host_t;
+
+/*
+ * Values and macros for delayed-allocation startblock fields.
+ */
+#define STARTBLOCKVALBITS	17
+#define STARTBLOCKMASKBITS	(15 + XFS_BIG_BLKNOS * 20)
+#define DSTARTBLOCKMASKBITS	(15 + 20)
+#define STARTBLOCKMASK		\
+	(((((xfs_fsblock_t)1) << STARTBLOCKMASKBITS) - 1) << STARTBLOCKVALBITS)
+#define DSTARTBLOCKMASK		\
+	(((((xfs_dfsbno_t)1) << DSTARTBLOCKMASKBITS) - 1) << STARTBLOCKVALBITS)
+
+static inline int isnullstartblock(xfs_fsblock_t x)
+{
+	return ((x) & STARTBLOCKMASK) == STARTBLOCKMASK;
+}
+
+static inline int isnulldstartblock(xfs_dfsbno_t x)
+{
+	return ((x) & DSTARTBLOCKMASK) == DSTARTBLOCKMASK;
+}
+
+static inline xfs_fsblock_t nullstartblock(int k)
+{
+	ASSERT(k < (1 << STARTBLOCKVALBITS));
+	return STARTBLOCKMASK | (k);
+}
+
+static inline xfs_filblks_t startblockval(xfs_fsblock_t x)
+{
+	return (xfs_filblks_t)((x) & ~STARTBLOCKMASK);
+}
+
+/*
+ * Possible extent formats.
+ */
+typedef enum {
+	XFS_EXTFMT_NOSTATE = 0,
+	XFS_EXTFMT_HASSTATE
+} xfs_exntfmt_t;
+
+/*
+ * Possible extent states.
+ */
+typedef enum {
+	XFS_EXT_NORM, XFS_EXT_UNWRITTEN,
+	XFS_EXT_DMAPI_OFFLINE, XFS_EXT_INVALID
+} xfs_exntst_t;
+
+/*
+ * Incore version of above.
+ */
+typedef struct xfs_bmbt_irec
+{
+	xfs_fileoff_t	br_startoff;	/* starting file offset */
+	xfs_fsblock_t	br_startblock;	/* starting block number */
+	xfs_filblks_t	br_blockcount;	/* number of blocks */
+	xfs_exntst_t	br_state;	/* extent state */
+} xfs_bmbt_irec_t;
+
+/*
+ * Key structure for non-leaf levels of the tree.
+ */
+typedef struct xfs_bmbt_key {
+	__be64		br_startoff;	/* starting file offset */
+} xfs_bmbt_key_t, xfs_bmdr_key_t;
+
+/* btree pointer type */
+typedef __be64 xfs_bmbt_ptr_t, xfs_bmdr_ptr_t;
+
+
+/*
+ * Generic Btree block format definitions
+ *
+ * This is a combination of the actual format used on disk for short and long
+ * format btrees.  The first three fields are shared by both format, but the
+ * pointers are different and should be used with care.
+ *
+ * To get the size of the actual short or long form headers please use the size
+ * macros below.  Never use sizeof(xfs_btree_block).
+ *
+ * The blkno, crc, lsn, owner and uuid fields are only available in filesystems
+ * with the crc feature bit, and all accesses to them must be conditional on
+ * that flag.
+ */
+struct xfs_btree_block {
+	__be32		bb_magic;	/* magic number for block type */
+	__be16		bb_level;	/* 0 is a leaf */
+	__be16		bb_numrecs;	/* current # of data records */
+	union {
+		struct {
+			__be32		bb_leftsib;
+			__be32		bb_rightsib;
+
+			__be64		bb_blkno;
+			__be64		bb_lsn;
+			uuid_t		bb_uuid;
+			__be32		bb_owner;
+			__le32		bb_crc;
+		} s;			/* short form pointers */
+		struct	{
+			__be64		bb_leftsib;
+			__be64		bb_rightsib;
+
+			__be64		bb_blkno;
+			__be64		bb_lsn;
+			uuid_t		bb_uuid;
+			__be64		bb_owner;
+			__le32		bb_crc;
+			__be32		bb_pad; /* padding for alignment */
+		} l;			/* long form pointers */
+	} bb_u;				/* rest */
+};
+
+#define XFS_BTREE_SBLOCK_LEN	16	/* size of a short form block */
+#define XFS_BTREE_LBLOCK_LEN	24	/* size of a long form block */
+
+/* sizes of CRC enabled btree blocks */
+#define XFS_BTREE_SBLOCK_CRC_LEN	(XFS_BTREE_SBLOCK_LEN + 40)
+#define XFS_BTREE_LBLOCK_CRC_LEN	(XFS_BTREE_LBLOCK_LEN + 48)
+
+#define XFS_BTREE_SBLOCK_CRC_OFF \
+	offsetof(struct xfs_btree_block, bb_u.s.bb_crc)
+#define XFS_BTREE_LBLOCK_CRC_OFF \
+	offsetof(struct xfs_btree_block, bb_u.l.bb_crc)
+
 #endif /* __XFS_FORMAT_H__ */
* Unmerged path fs/xfs/xfs_fsops.c
diff --git a/fs/xfs/xfs_ialloc.c b/fs/xfs/xfs_ialloc.c
index 8530cabf128d..8334ee817f13 100644
--- a/fs/xfs/xfs_ialloc.c
+++ b/fs/xfs/xfs_ialloc.c
@@ -26,13 +26,10 @@
 #include "xfs_sb.h"
 #include "xfs_ag.h"
 #include "xfs_mount.h"
-#include "xfs_bmap_btree.h"
-#include "xfs_alloc_btree.h"
-#include "xfs_ialloc_btree.h"
-#include "xfs_dinode.h"
 #include "xfs_inode.h"
 #include "xfs_btree.h"
 #include "xfs_ialloc.h"
+#include "xfs_ialloc_btree.h"
 #include "xfs_alloc.h"
 #include "xfs_rtalloc.h"
 #include "xfs_error.h"
@@ -41,6 +38,7 @@
 #include "xfs_buf_item.h"
 #include "xfs_icreate_item.h"
 #include "xfs_icache.h"
+#include "xfs_dinode.h"
 
 
 /*
diff --git a/fs/xfs/xfs_ialloc.h b/fs/xfs/xfs_ialloc.h
index 155779803d67..a8f76a5ff418 100644
--- a/fs/xfs/xfs_ialloc.h
+++ b/fs/xfs/xfs_ialloc.h
@@ -23,6 +23,7 @@ struct xfs_dinode;
 struct xfs_imap;
 struct xfs_mount;
 struct xfs_trans;
+struct xfs_btree_cur;
 
 /*
  * Allocation parameters for inode allocation.
@@ -42,7 +43,7 @@ struct xfs_trans;
 static inline struct xfs_dinode *
 xfs_make_iptr(struct xfs_mount *mp, struct xfs_buf *b, int o)
 {
-	return (xfs_dinode_t *)
+	return (struct xfs_dinode *)
 		(xfs_buf_offset(b, o << (mp)->m_sb.sb_inodelog));
 }
 
* Unmerged path fs/xfs/xfs_ialloc_btree.c
diff --git a/fs/xfs/xfs_ialloc_btree.h b/fs/xfs/xfs_ialloc_btree.h
index cfbfe461abbc..f38b22011c4e 100644
--- a/fs/xfs/xfs_ialloc_btree.h
+++ b/fs/xfs/xfs_ialloc_btree.h
@@ -26,55 +26,6 @@ struct xfs_buf;
 struct xfs_btree_cur;
 struct xfs_mount;
 
-/*
- * There is a btree for the inode map per allocation group.
- */
-#define	XFS_IBT_MAGIC		0x49414254	/* 'IABT' */
-#define	XFS_IBT_CRC_MAGIC	0x49414233	/* 'IAB3' */
-
-typedef	__uint64_t	xfs_inofree_t;
-#define	XFS_INODES_PER_CHUNK		(NBBY * sizeof(xfs_inofree_t))
-#define	XFS_INODES_PER_CHUNK_LOG	(XFS_NBBYLOG + 3)
-#define	XFS_INOBT_ALL_FREE		((xfs_inofree_t)-1)
-#define	XFS_INOBT_MASK(i)		((xfs_inofree_t)1 << (i))
-
-static inline xfs_inofree_t xfs_inobt_maskn(int i, int n)
-{
-	return ((n >= XFS_INODES_PER_CHUNK ? 0 : XFS_INOBT_MASK(n)) - 1) << i;
-}
-
-/*
- * Data record structure
- */
-typedef struct xfs_inobt_rec {
-	__be32		ir_startino;	/* starting inode number */
-	__be32		ir_freecount;	/* count of free inodes (set bits) */
-	__be64		ir_free;	/* free inode mask */
-} xfs_inobt_rec_t;
-
-typedef struct xfs_inobt_rec_incore {
-	xfs_agino_t	ir_startino;	/* starting inode number */
-	__int32_t	ir_freecount;	/* count of free inodes (set bits) */
-	xfs_inofree_t	ir_free;	/* free inode mask */
-} xfs_inobt_rec_incore_t;
-
-
-/*
- * Key structure
- */
-typedef struct xfs_inobt_key {
-	__be32		ir_startino;	/* starting inode number */
-} xfs_inobt_key_t;
-
-/* btree pointer type */
-typedef __be32 xfs_inobt_ptr_t;
-
-/*
- * block numbers in the AG.
- */
-#define	XFS_IBT_BLOCK(mp)		((xfs_agblock_t)(XFS_CNT_BLOCK(mp) + 1))
-#define	XFS_PREALLOC_BLOCKS(mp)		((xfs_agblock_t)(XFS_IBT_BLOCK(mp) + 1))
-
 /*
  * Btree block header size depends on a superblock flag.
  */
* Unmerged path fs/xfs/xfs_icache.c
* Unmerged path fs/xfs/xfs_inode.c
diff --git a/fs/xfs/xfs_inode.h b/fs/xfs/xfs_inode.h
index 8f775ed722a9..848a566f4d39 100644
--- a/fs/xfs/xfs_inode.h
+++ b/fs/xfs/xfs_inode.h
@@ -24,7 +24,6 @@
 /*
  * Kernel only inode definitions
  */
-
 struct xfs_dinode;
 struct xfs_inode;
 struct xfs_buf;
* Unmerged path fs/xfs/xfs_inode_buf.c
* Unmerged path fs/xfs/xfs_inode_fork.c
diff --git a/fs/xfs/xfs_inode_fork.h b/fs/xfs/xfs_inode_fork.h
index 28661a0d9058..eb329a1ea888 100644
--- a/fs/xfs/xfs_inode_fork.h
+++ b/fs/xfs/xfs_inode_fork.h
@@ -19,6 +19,7 @@
 #define	__XFS_INODE_FORK_H__
 
 struct xfs_inode_log_item;
+struct xfs_dinode;
 
 /*
  * The following xfs_ext_irec_t struct introduces a second (top) level
* Unmerged path fs/xfs/xfs_inode_item.c
* Unmerged path fs/xfs/xfs_ioctl.c
* Unmerged path fs/xfs/xfs_ioctl32.c
* Unmerged path fs/xfs/xfs_iomap.c
* Unmerged path fs/xfs/xfs_iops.c
* Unmerged path fs/xfs/xfs_itable.c
* Unmerged path fs/xfs/xfs_log.c
* Unmerged path fs/xfs/xfs_log_recover.c
* Unmerged path fs/xfs/xfs_log_rlimit.c
* Unmerged path fs/xfs/xfs_mount.c
* Unmerged path fs/xfs/xfs_qm.c
* Unmerged path fs/xfs/xfs_qm_bhv.c
* Unmerged path fs/xfs/xfs_qm_syscalls.c
diff --git a/fs/xfs/xfs_quotaops.c b/fs/xfs/xfs_quotaops.c
index 1326d81596c2..6394518b4f00 100644
--- a/fs/xfs/xfs_quotaops.c
+++ b/fs/xfs/xfs_quotaops.c
@@ -22,10 +22,9 @@
 #include "xfs_sb.h"
 #include "xfs_ag.h"
 #include "xfs_mount.h"
+#include "xfs_inode.h"
 #include "xfs_quota.h"
 #include "xfs_trans.h"
-#include "xfs_bmap_btree.h"
-#include "xfs_inode.h"
 #include "xfs_qm.h"
 #include <linux/quota.h>
 
* Unmerged path fs/xfs/xfs_rtalloc.c
* Unmerged path fs/xfs/xfs_sb.c
* Unmerged path fs/xfs/xfs_super.c
* Unmerged path fs/xfs/xfs_symlink.c
* Unmerged path fs/xfs/xfs_trace.c
* Unmerged path fs/xfs/xfs_trans.c
diff --git a/fs/xfs/xfs_trans.h b/fs/xfs/xfs_trans.h
index 58c870e38e9e..0c58fb19525a 100644
--- a/fs/xfs/xfs_trans.h
+++ b/fs/xfs/xfs_trans.h
@@ -233,6 +233,11 @@ void		xfs_trans_cancel(xfs_trans_t *, int);
 int		xfs_trans_ail_init(struct xfs_mount *);
 void		xfs_trans_ail_destroy(struct xfs_mount *);
 
+void		xfs_trans_buf_set_type(struct xfs_trans *, struct xfs_buf *,
+				       enum xfs_blft);
+void		xfs_trans_buf_copy_type(struct xfs_buf *dst_bp,
+					struct xfs_buf *src_bp);
+
 extern kmem_zone_t	*xfs_trans_zone;
 extern kmem_zone_t	*xfs_log_item_desc_zone;
 
* Unmerged path fs/xfs/xfs_trans_buf.c
* Unmerged path fs/xfs/xfs_trans_dquot.c
* Unmerged path fs/xfs/xfs_trans_inode.c
* Unmerged path fs/xfs/xfs_trans_resv.c
* Unmerged path fs/xfs/xfs_xattr.c
