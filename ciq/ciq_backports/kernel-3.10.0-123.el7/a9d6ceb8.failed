[SCSI] return ENOSPC on thin provisioning failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [scsi] return ENOSPC on thin provisioning failure (Mike Snitzer) [1010437]
Rebuild_FUZZ: 92.31%
commit-author Hannes Reinecke <hare@suse.de>
commit a9d6ceb838755c24dde8a0ca02c3378926fc63db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/a9d6ceb8.failed

When the thin provisioning hard threshold is reached we
should return ENOSPC to inform upper layers about this fact.

	Signed-off-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: James Bottomley <JBottomley@Parallels.com>
(cherry picked from commit a9d6ceb838755c24dde8a0ca02c3378926fc63db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-core.c
diff --cc block/blk-core.c
index cdcac988987e,68ce4d53a528..000000000000
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@@ -2337,6 -2315,12 +2337,15 @@@ bool blk_update_request(struct request 
  		case -EBADE:
  			error_type = "critical nexus";
  			break;
++<<<<<<< HEAD
++=======
+ 		case -ETIMEDOUT:
+ 			error_type = "timeout";
+ 			break;
+ 		case -ENOSPC:
+ 			error_type = "critical space allocation";
+ 			break;
++>>>>>>> a9d6ceb83875 ([SCSI] return ENOSPC on thin provisioning failure)
  		case -EIO:
  		default:
  			error_type = "I/O";
* Unmerged path block/blk-core.c
diff --git a/drivers/scsi/scsi_error.c b/drivers/scsi/scsi_error.c
index a3cba193ecd4..5d2c6acd992c 100644
--- a/drivers/scsi/scsi_error.c
+++ b/drivers/scsi/scsi_error.c
@@ -414,11 +414,16 @@ static int scsi_check_sense(struct scsi_cmnd *scmd)
 		return SUCCESS;
 
 		/* these are not supported */
+	case DATA_PROTECT:
+		if (sshdr.asc == 0x27 && sshdr.ascq == 0x07) {
+			/* Thin provisioning hard threshold reached */
+			set_host_byte(scmd, DID_ALLOC_FAILURE);
+			return SUCCESS;
+		}
 	case COPY_ABORTED:
 	case VOLUME_OVERFLOW:
 	case MISCOMPARE:
 	case BLANK_CHECK:
-	case DATA_PROTECT:
 		set_host_byte(scmd, DID_TARGET_FAILURE);
 		return SUCCESS;
 
diff --git a/drivers/scsi/scsi_lib.c b/drivers/scsi/scsi_lib.c
index 01b09c33ca40..f621c658defd 100644
--- a/drivers/scsi/scsi_lib.c
+++ b/drivers/scsi/scsi_lib.c
@@ -726,6 +726,7 @@ EXPORT_SYMBOL(scsi_release_buffers);
  * -ENOLINK	temporary transport failure
  * -EREMOTEIO	permanent target failure, do not retry
  * -EBADE	permanent nexus failure, retry on other path
+ * -ENOSPC	No write space available
  * -EIO		unspecified I/O error
  */
 static int __scsi_error_from_host_byte(struct scsi_cmnd *cmd, int result)
@@ -744,6 +745,10 @@ static int __scsi_error_from_host_byte(struct scsi_cmnd *cmd, int result)
 		set_host_byte(cmd, DID_OK);
 		error = -EBADE;
 		break;
+	case DID_ALLOC_FAILURE:
+		set_host_byte(cmd, DID_OK);
+		error = -ENOSPC;
+		break;
 	default:
 		error = -EIO;
 		break;
diff --git a/include/scsi/scsi.h b/include/scsi/scsi.h
index 07d4bd916526..7d5b8e279f73 100644
--- a/include/scsi/scsi.h
+++ b/include/scsi/scsi.h
@@ -452,6 +452,7 @@ static inline int scsi_is_wlun(unsigned int lun)
 				 * other paths */
 #define DID_NEXUS_FAILURE 0x11  /* Permanent nexus failure, retry on other
 				 * paths might yield different results */
+#define DID_ALLOC_FAILURE 0x12  /* Space allocation on the device failed */
 #define DRIVER_OK       0x00	/* Driver status                           */
 
 /*
