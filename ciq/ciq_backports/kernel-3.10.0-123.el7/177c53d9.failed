stop_machine: Fix^2 race between stop_two_cpus() and stop_cpus()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Peter Zijlstra <peterz@infradead.org>
commit 177c53d943368fc97644ebc0a250dc8e2d124250
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/177c53d9.failed

We must use smp_call_function_single(.wait=1) for the
irq_cpu_stop_queue_work() to ensure the queueing is actually done under
stop_cpus_lock. Without this we could have dropped the lock by the time
we do the queueing and get the race we tried to fix.

Fixes: 7053ea1a34fa ("stop_machine: Fix race between stop_two_cpus() and stop_cpus()")

	Signed-off-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Prarit Bhargava <prarit@redhat.com>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Mel Gorman <mgorman@suse.de>
	Cc: Christoph Hellwig <hch@infradead.org>
	Cc: Andrew Morton <akpm@linux-foundation.org>
Link: http://lkml.kernel.org/r/20140228123905.GK3104@twins.programming.kicks-ass.net
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 177c53d943368fc97644ebc0a250dc8e2d124250)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/stop_machine.c
diff --cc kernel/stop_machine.c
index 32a6c44d8f78,01fbae5b97b7..000000000000
--- a/kernel/stop_machine.c
+++ b/kernel/stop_machine.c
@@@ -266,12 -291,14 +266,20 @@@ int stop_two_cpus(unsigned int cpu1, un
  	 * that works are always queued in the same order on every CPU.
  	 * This prevents deadlocks.
  	 */
++<<<<<<< HEAD
 +	call_cpu = min(cpu1, cpu2);
 +
 +	smp_call_function_single(call_cpu, &irq_cpu_stop_queue_work,
 +				 &call_args, 0);
++=======
+ 	smp_call_function_single(min(cpu1, cpu2),
+ 				 &irq_cpu_stop_queue_work,
+ 				 &call_args, 1);
+ 	lg_local_unlock(&stop_cpus_lock);
+ 	preempt_enable();
++>>>>>>> 177c53d94336 (stop_machine: Fix^2 race between stop_two_cpus() and stop_cpus())
  
  	wait_for_completion(&done.completion);
 -
  	return done.executed ? done.ret : -ENOENT;
  }
  
* Unmerged path kernel/stop_machine.c
