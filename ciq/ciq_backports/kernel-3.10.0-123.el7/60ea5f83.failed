i40e: rename defines

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Jesse Brandeburg <jesse.brandeburg@intel.com>
commit 60ea5f83cddf538a4509f2214ffd50d8d69952a5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/60ea5f83.failed

The FLAG_FDIR_* defines can be renamed to be more descriptive.
This patch is in preparation for the following where the fdir
code is refactored.

	Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
	Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
	Tested-by: Kavindya Deegala <kavindya.s.deegala@intel.com>
	Signed-off-by: Aaron Brown <aaron.f.brown@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 60ea5f83cddf538a4509f2214ffd50d8d69952a5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/i40e/i40e.h
#	drivers/net/ethernet/intel/i40e/i40e_main.c
diff --cc drivers/net/ethernet/intel/i40e/i40e.h
index 403b14dadabf,a47f3106ef6d..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e.h
+++ b/drivers/net/ethernet/intel/i40e/i40e.h
@@@ -223,21 -229,24 +223,42 @@@ struct i40e_pf 
  #define I40E_FLAG_RX_1BUF_ENABLED              (u64)(1 << 4)
  #define I40E_FLAG_RX_PS_ENABLED                (u64)(1 << 5)
  #define I40E_FLAG_RSS_ENABLED                  (u64)(1 << 6)
++<<<<<<< HEAD
 +#define I40E_FLAG_MQ_ENABLED                   (u64)(1 << 7)
 +#define I40E_FLAG_VMDQ_ENABLED                 (u64)(1 << 8)
 +#define I40E_FLAG_FDIR_REQUIRES_REINIT         (u64)(1 << 9)
 +#define I40E_FLAG_NEED_LINK_UPDATE             (u64)(1 << 10)
 +#define I40E_FLAG_IN_NETPOLL                   (u64)(1 << 13)
 +#define I40E_FLAG_16BYTE_RX_DESC_ENABLED       (u64)(1 << 14)
 +#define I40E_FLAG_CLEAN_ADMINQ                 (u64)(1 << 15)
 +#define I40E_FLAG_FILTER_SYNC                  (u64)(1 << 16)
 +#define I40E_FLAG_PROCESS_MDD_EVENT            (u64)(1 << 18)
 +#define I40E_FLAG_PROCESS_VFLR_EVENT           (u64)(1 << 19)
 +#define I40E_FLAG_SRIOV_ENABLED                (u64)(1 << 20)
 +#define I40E_FLAG_DCB_ENABLED                  (u64)(1 << 21)
 +#define I40E_FLAG_FDIR_ENABLED                 (u64)(1 << 22)
 +#define I40E_FLAG_FDIR_ATR_ENABLED             (u64)(1 << 23)
 +#define I40E_FLAG_MFP_ENABLED                  (u64)(1 << 27)
++=======
+ #define I40E_FLAG_VMDQ_ENABLED                 (u64)(1 << 7)
+ #define I40E_FLAG_FDIR_REQUIRES_REINIT         (u64)(1 << 8)
+ #define I40E_FLAG_NEED_LINK_UPDATE             (u64)(1 << 9)
+ #define I40E_FLAG_IN_NETPOLL                   (u64)(1 << 12)
+ #define I40E_FLAG_16BYTE_RX_DESC_ENABLED       (u64)(1 << 13)
+ #define I40E_FLAG_CLEAN_ADMINQ                 (u64)(1 << 14)
+ #define I40E_FLAG_FILTER_SYNC                  (u64)(1 << 15)
+ #define I40E_FLAG_PROCESS_MDD_EVENT            (u64)(1 << 17)
+ #define I40E_FLAG_PROCESS_VFLR_EVENT           (u64)(1 << 18)
+ #define I40E_FLAG_SRIOV_ENABLED                (u64)(1 << 19)
+ #define I40E_FLAG_DCB_ENABLED                  (u64)(1 << 20)
+ #define I40E_FLAG_FD_SB_ENABLED                (u64)(1 << 21)
+ #define I40E_FLAG_FD_ATR_ENABLED               (u64)(1 << 22)
+ #define I40E_FLAG_PTP                          (u64)(1 << 25)
+ #define I40E_FLAG_MFP_ENABLED                  (u64)(1 << 26)
+ #ifdef CONFIG_I40E_VXLAN
+ #define I40E_FLAG_VXLAN_FILTER_SYNC            (u64)(1 << 27)
+ #endif
++>>>>>>> 60ea5f83cddf (i40e: rename defines)
  
  	bool stat_offsets_loaded;
  	struct i40e_hw_port_stats stats;
diff --cc drivers/net/ethernet/intel/i40e/i40e_main.c
index 20705fef15bc,0ca98777c1a1..000000000000
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@@ -2138,8 -2172,9 +2138,14 @@@ static int i40e_configure_tx_ring(struc
  	tx_ctx.new_context = 1;
  	tx_ctx.base = (ring->dma / 128);
  	tx_ctx.qlen = ring->count;
++<<<<<<< HEAD
 +	tx_ctx.fd_ena = !!(vsi->back->flags & (I40E_FLAG_FDIR_ENABLED |
 +			I40E_FLAG_FDIR_ATR_ENABLED));
++=======
+ 	tx_ctx.fd_ena = !!(vsi->back->flags & (I40E_FLAG_FD_SB_ENABLED |
+ 					       I40E_FLAG_FD_ATR_ENABLED));
+ 	tx_ctx.timesync_ena = !!(vsi->back->flags & I40E_FLAG_PTP);
++>>>>>>> 60ea5f83cddf (i40e: rename defines)
  
  	/* As part of VSI creation/update, FW allocates certain
  	 * Tx arbitration queue sets for each TC enabled for
@@@ -5574,14 -5679,13 +5580,24 @@@ static void i40e_init_interrupt_scheme(
  	if (pf->flags & I40E_FLAG_MSIX_ENABLED) {
  		err = i40e_init_msix(pf);
  		if (err) {
++<<<<<<< HEAD
 +			pf->flags &= ~(I40E_FLAG_MSIX_ENABLED	   |
 +					I40E_FLAG_RSS_ENABLED	   |
 +					I40E_FLAG_MQ_ENABLED	   |
 +					I40E_FLAG_DCB_ENABLED	   |
 +					I40E_FLAG_SRIOV_ENABLED	   |
 +					I40E_FLAG_FDIR_ENABLED	   |
 +					I40E_FLAG_FDIR_ATR_ENABLED |
 +					I40E_FLAG_VMDQ_ENABLED);
++=======
+ 			pf->flags &= ~(I40E_FLAG_MSIX_ENABLED	|
+ 				       I40E_FLAG_RSS_ENABLED	|
+ 				       I40E_FLAG_DCB_ENABLED	|
+ 				       I40E_FLAG_SRIOV_ENABLED	|
+ 				       I40E_FLAG_FD_SB_ENABLED	|
+ 				       I40E_FLAG_FD_ATR_ENABLED	|
+ 				       I40E_FLAG_VMDQ_ENABLED);
++>>>>>>> 60ea5f83cddf (i40e: rename defines)
  
  			/* rework the queue expectations without MSIX */
  			i40e_determine_queue_usage(pf);
@@@ -7106,10 -7381,9 +7122,10 @@@ static void i40e_determine_queue_usage(
  	 */
  	queues_left = pf->hw.func_caps.num_tx_qp;
  
 -	if   (!(pf->flags & I40E_FLAG_MSIX_ENABLED) ||
 +	if   (!((pf->flags & I40E_FLAG_MSIX_ENABLED)		 &&
 +		(pf->flags & I40E_FLAG_MQ_ENABLED))		 ||
  		!(pf->flags & (I40E_FLAG_RSS_ENABLED |
- 		I40E_FLAG_FDIR_ENABLED | I40E_FLAG_DCB_ENABLED)) ||
+ 		I40E_FLAG_FD_SB_ENABLED | I40E_FLAG_DCB_ENABLED)) ||
  		(queues_left == 1)) {
  
  		/* one qp for PF, no queues for anything else */
@@@ -7117,16 -7391,9 +7133,19 @@@
  		pf->rss_size = pf->num_lan_qps = 1;
  
  		/* make sure all the fancies are disabled */
++<<<<<<< HEAD
 +		pf->flags &= ~(I40E_FLAG_RSS_ENABLED       |
 +				I40E_FLAG_MQ_ENABLED	   |
 +				I40E_FLAG_FDIR_ENABLED	   |
 +				I40E_FLAG_FDIR_ATR_ENABLED |
 +				I40E_FLAG_DCB_ENABLED	   |
 +				I40E_FLAG_SRIOV_ENABLED	   |
 +				I40E_FLAG_VMDQ_ENABLED);
++=======
++>>>>>>> 60ea5f83cddf (i40e: rename defines)
  
  	} else if (pf->flags & I40E_FLAG_RSS_ENABLED	  &&
- 		   !(pf->flags & I40E_FLAG_FDIR_ENABLED)  &&
+ 		   !(pf->flags & I40E_FLAG_FD_SB_ENABLED)  &&
  		   !(pf->flags & I40E_FLAG_DCB_ENABLED)) {
  
  		pf->rss_size = i40e_set_rss_size(pf, queues_left);
* Unmerged path drivers/net/ethernet/intel/i40e/i40e.h
diff --git a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
index 342a6e13ac8b..ef6f591e5b9e 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
@@ -1583,7 +1583,7 @@ static void i40e_get_channels(struct net_device *dev,
 	ch->max_combined = i40e_max_channels(vsi);
 
 	/* report info for other vector */
-	ch->other_count = (pf->flags & I40E_FLAG_FDIR_ENABLED) ? 1 : 0;
+	ch->other_count = (pf->flags & I40E_FLAG_FD_SB_ENABLED) ? 1 : 0;
 	ch->max_other = ch->other_count;
 
 	/* Note: This code assumes DCB is disabled for now. */
@@ -1616,7 +1616,7 @@ static int i40e_set_channels(struct net_device *dev,
 		return -EINVAL;
 
 	/* verify other_count has not changed */
-	if (ch->other_count != ((pf->flags & I40E_FLAG_FDIR_ENABLED) ? 1 : 0))
+	if (ch->other_count != ((pf->flags & I40E_FLAG_FD_SB_ENABLED) ? 1 : 0))
 		return -EINVAL;
 
 	/* verify the number of channels does not exceed hardware limits */
* Unmerged path drivers/net/ethernet/intel/i40e/i40e_main.c
diff --git a/drivers/net/ethernet/intel/i40e/i40e_txrx.c b/drivers/net/ethernet/intel/i40e/i40e_txrx.c
index 946d8b1d9a4d..50b44a1a7df1 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_txrx.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_txrx.c
@@ -1232,7 +1232,7 @@ static void i40e_atr(struct i40e_ring *tx_ring, struct sk_buff *skb,
 	u16 i;
 
 	/* make sure ATR is enabled */
-	if (!(pf->flags & I40E_FLAG_FDIR_ATR_ENABLED))
+	if (!(pf->flags & I40E_FLAG_FD_ATR_ENABLED))
 		return;
 
 	/* if sampling is disabled do nothing */
