tcp: do not export tcp_gso_segment() and tcp_gro_receive()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Eric Dumazet <edumazet@google.com>
commit b53c7336007784e435fee830063d3262ae98cd31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/b53c7336.failed

tcp_gso_segment() and tcp_gro_receive() no longer need to be
exported. IPv4 and IPv6 offloads are statically linked.

Note that tcp_gro_complete() is still used by bnx2x, unfortunately.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b53c7336007784e435fee830063d3262ae98cd31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp_offload.c
diff --cc net/ipv4/tcp_offload.c
index 910ab81bc0dd,b92b81718ca4..000000000000
--- a/net/ipv4/tcp_offload.c
+++ b/net/ipv4/tcp_offload.c
@@@ -136,7 -138,6 +136,10 @@@ struct sk_buff *tcp_tso_segment(struct 
  out:
  	return segs;
  }
++<<<<<<< HEAD
 +EXPORT_SYMBOL(tcp_tso_segment);
++=======
++>>>>>>> b53c73360077 (tcp: do not export tcp_gso_segment() and tcp_gro_receive())
  
  struct sk_buff **tcp_gro_receive(struct sk_buff **head, struct sk_buff *skb)
  {
* Unmerged path net/ipv4/tcp_offload.c
