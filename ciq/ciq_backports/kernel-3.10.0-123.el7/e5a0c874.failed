usb: misc: usb3503: Default to hub mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [usb] misc/usb3503: Default to hub mode (Don Zickus) [895641]
Rebuild_FUZZ: 88.89%
commit-author Mark Brown <broonie@linaro.org>
commit e5a0c874ec7babc1931a67489b292de152d2a641
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/e5a0c874.failed

Since there is no runtime interface for changing modes this is probably
the most sensible default.

	Signed-off-by: Mark Brown <broonie@linaro.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit e5a0c874ec7babc1931a67489b292de152d2a641)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/misc/usb3503.c
diff --cc drivers/usb/misc/usb3503.c
index 085255aa5f13,8f5dff20dcb4..000000000000
--- a/drivers/usb/misc/usb3503.c
+++ b/drivers/usb/misc/usb3503.c
@@@ -156,13 -156,13 +156,21 @@@ static const struct regmap_config usb35
  	.max_register = USB3503_RESET,
  };
  
 -static int usb3503_probe(struct usb3503 *hub)
 +static int usb3503_probe(struct i2c_client *i2c, const struct i2c_device_id *id)
  {
++<<<<<<< HEAD
 +	struct usb3503_platform_data *pdata = i2c->dev.platform_data;
 +	struct device_node *np = i2c->dev.of_node;
 +	struct usb3503 *hub;
 +	int err = -ENOMEM;
 +	u32 mode = USB3503_MODE_UNKNOWN;
++=======
+ 	struct device *dev = hub->dev;
+ 	struct usb3503_platform_data *pdata = dev_get_platdata(dev);
+ 	struct device_node *np = dev->of_node;
+ 	int err;
+ 	u32 mode = USB3503_MODE_HUB;
++>>>>>>> e5a0c874ec7b (usb: misc: usb3503: Default to hub mode)
  	const u32 *property;
  	int len;
  
* Unmerged path drivers/usb/misc/usb3503.c
