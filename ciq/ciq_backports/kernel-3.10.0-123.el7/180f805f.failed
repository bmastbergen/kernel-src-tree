drm/radeon: fix typo in fetching mpll params

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
Rebuild_CHGLOG: - [drm] radeon: fix typo in fetching mpll params (Rob Clark) [1054409]
Rebuild_FUZZ: 95.24%
commit-author Alex Deucher <alexander.deucher@amd.com>
commit 180f805f4f03b2894701f9831b4e96a308330b22
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/180f805f.failed

Copy-paste typo.  Value should be 0-2, not 0-1.

Noticed-by: Sylvain BERTRAND <sylware@legeek.net>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 180f805f4f03b2894701f9831b4e96a308330b22)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/radeon/radeon_atombios.c
diff --cc drivers/gpu/drm/radeon/radeon_atombios.c
index dea6f63c9724,5c39bf7c3d88..000000000000
--- a/drivers/gpu/drm/radeon/radeon_atombios.c
+++ b/drivers/gpu/drm/radeon/radeon_atombios.c
@@@ -2757,9 -2860,76 +2757,79 @@@ int radeon_atom_get_clock_dividers(stru
  
  		atom_execute_table(rdev->mode_info.atom_context, index, (uint32_t *)&args);
  
 -		dividers->post_divider = dividers->post_div = args.v4.ucPostDiv;
 +		dividers->post_div = args.v4.ucPostDiv;
  		dividers->real_clock = le32_to_cpu(args.v4.ulClock);
  		break;
++<<<<<<< HEAD
++=======
+ 	case 6:
+ 		/* CI */
+ 		/* COMPUTE_GPUCLK_INPUT_FLAG_DEFAULT_GPUCLK, COMPUTE_GPUCLK_INPUT_FLAG_SCLK */
+ 		args.v6_in.ulClock.ulComputeClockFlag = clock_type;
+ 		args.v6_in.ulClock.ulClockFreq = cpu_to_le32(clock);	/* 10 khz */
+ 
+ 		atom_execute_table(rdev->mode_info.atom_context, index, (uint32_t *)&args);
+ 
+ 		dividers->whole_fb_div = le16_to_cpu(args.v6_out.ulFbDiv.usFbDiv);
+ 		dividers->frac_fb_div = le16_to_cpu(args.v6_out.ulFbDiv.usFbDivFrac);
+ 		dividers->ref_div = args.v6_out.ucPllRefDiv;
+ 		dividers->post_div = args.v6_out.ucPllPostDiv;
+ 		dividers->flags = args.v6_out.ucPllCntlFlag;
+ 		dividers->real_clock = le32_to_cpu(args.v6_out.ulClock.ulClock);
+ 		dividers->post_divider = args.v6_out.ulClock.ucPostDiv;
+ 		break;
+ 	default:
+ 		return -EINVAL;
+ 	}
+ 	return 0;
+ }
+ 
+ int radeon_atom_get_memory_pll_dividers(struct radeon_device *rdev,
+ 					u32 clock,
+ 					bool strobe_mode,
+ 					struct atom_mpll_param *mpll_param)
+ {
+ 	COMPUTE_MEMORY_CLOCK_PARAM_PARAMETERS_V2_1 args;
+ 	int index = GetIndexIntoMasterTable(COMMAND, ComputeMemoryClockParam);
+ 	u8 frev, crev;
+ 
+ 	memset(&args, 0, sizeof(args));
+ 	memset(mpll_param, 0, sizeof(struct atom_mpll_param));
+ 
+ 	if (!atom_parse_cmd_header(rdev->mode_info.atom_context, index, &frev, &crev))
+ 		return -EINVAL;
+ 
+ 	switch (frev) {
+ 	case 2:
+ 		switch (crev) {
+ 		case 1:
+ 			/* SI */
+ 			args.ulClock = cpu_to_le32(clock);	/* 10 khz */
+ 			args.ucInputFlag = 0;
+ 			if (strobe_mode)
+ 				args.ucInputFlag |= MPLL_INPUT_FLAG_STROBE_MODE_EN;
+ 
+ 			atom_execute_table(rdev->mode_info.atom_context, index, (uint32_t *)&args);
+ 
+ 			mpll_param->clkfrac = le16_to_cpu(args.ulFbDiv.usFbDivFrac);
+ 			mpll_param->clkf = le16_to_cpu(args.ulFbDiv.usFbDiv);
+ 			mpll_param->post_div = args.ucPostDiv;
+ 			mpll_param->dll_speed = args.ucDllSpeed;
+ 			mpll_param->bwcntl = args.ucBWCntl;
+ 			mpll_param->vco_mode =
+ 				(args.ucPllCntlFlag & MPLL_CNTL_FLAG_VCO_MODE_MASK);
+ 			mpll_param->yclk_sel =
+ 				(args.ucPllCntlFlag & MPLL_CNTL_FLAG_BYPASS_DQ_PLL) ? 1 : 0;
+ 			mpll_param->qdr =
+ 				(args.ucPllCntlFlag & MPLL_CNTL_FLAG_QDR_ENABLE) ? 1 : 0;
+ 			mpll_param->half_rate =
+ 				(args.ucPllCntlFlag & MPLL_CNTL_FLAG_AD_HALF_RATE) ? 1 : 0;
+ 			break;
+ 		default:
+ 			return -EINVAL;
+ 		}
+ 		break;
++>>>>>>> 180f805f4f03 (drm/radeon: fix typo in fetching mpll params)
  	default:
  		return -EINVAL;
  	}
* Unmerged path drivers/gpu/drm/radeon/radeon_atombios.c
