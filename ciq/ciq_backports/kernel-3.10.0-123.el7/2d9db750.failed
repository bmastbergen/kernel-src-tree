NFS: Fix up two use-after-free issues with the new tracing code

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Trond Myklebust <Trond.Myklebust@netapp.com>
commit 2d9db75005effd6d4e0c8be4f74922e4f413fbe5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/2d9db750.failed

We don't want to pass the context argument to trace_nfs_atomic_open_exit()
after it has been released.

	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
(cherry picked from commit 2d9db75005effd6d4e0c8be4f74922e4f413fbe5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/dir.c
diff --cc fs/nfs/dir.c
index 5b465aec0f11,d8149e916dd7..000000000000
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@@ -1425,8 -1459,9 +1424,12 @@@ int nfs_atomic_open(struct inode *dir, 
  	inode = NFS_PROTO(dir)->open_context(dir, ctx, open_flags, &attr);
  	nfs_unblock_sillyrename(dentry->d_parent);
  	if (IS_ERR(inode)) {
- 		put_nfs_open_context(ctx);
  		err = PTR_ERR(inode);
++<<<<<<< HEAD
++=======
+ 		trace_nfs_atomic_open_exit(dir, ctx, open_flags, err);
+ 		put_nfs_open_context(ctx);
++>>>>>>> 2d9db75005ef (NFS: Fix up two use-after-free issues with the new tracing code)
  		switch (err) {
  		case -ENOENT:
  			d_drop(dentry);
@@@ -1447,6 -1482,8 +1450,11 @@@
  	}
  
  	err = nfs_finish_open(ctx, ctx->dentry, file, open_flags, opened);
++<<<<<<< HEAD
++=======
+ 	trace_nfs_atomic_open_exit(dir, ctx, open_flags, err);
+ 	put_nfs_open_context(ctx);
++>>>>>>> 2d9db75005ef (NFS: Fix up two use-after-free issues with the new tracing code)
  out:
  	return err;
  
* Unmerged path fs/nfs/dir.c
