context_tracking: Optimize context switch off case with static keys

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-123.el7
commit-author Frederic Weisbecker <fweisbec@gmail.com>
commit 73d424f9af7b571276e6284617cb59726d47bf12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-123.el7/73d424f9.failed

No need for syscall slowpath if no CPU is full dynticks,
rather nop this in this case.

	Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Li Zhong <zhong@linux.vnet.ibm.com>
	Cc: Mike Galbraith <efault@gmx.de>
	Cc: Kevin Hilman <khilman@linaro.org>
(cherry picked from commit 73d424f9af7b571276e6284617cb59726d47bf12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/context_tracking.h
diff --cc include/linux/context_tracking.h
index da2a20a1e54f,e070ea5dadac..000000000000
--- a/include/linux/context_tracking.h
+++ b/include/linux/context_tracking.h
@@@ -84,9 -92,33 +90,30 @@@ static inline void context_tracking_tas
  						struct task_struct *next) { }
  #endif /* !CONFIG_CONTEXT_TRACKING */
  
 -
 -#ifdef CONFIG_CONTEXT_TRACKING_FORCE
 -extern void context_tracking_init(void);
 -#else
 -static inline void context_tracking_init(void) { }
 -#endif /* CONFIG_CONTEXT_TRACKING_FORCE */
 -
 -
  #ifdef CONFIG_VIRT_CPU_ACCOUNTING_GEN
++<<<<<<< HEAD
 +extern void guest_enter(void);
 +extern void guest_exit(void);
++=======
+ static inline void guest_enter(void)
+ {
+ 	if (static_key_false(&context_tracking_enabled) &&
+ 	    vtime_accounting_enabled())
+ 		vtime_guest_enter(current);
+ 	else
+ 		current->flags |= PF_VCPU;
+ }
+ 
+ static inline void guest_exit(void)
+ {
+ 	if (static_key_false(&context_tracking_enabled) &&
+ 	    vtime_accounting_enabled())
+ 		vtime_guest_exit(current);
+ 	else
+ 		current->flags &= ~PF_VCPU;
+ }
+ 
++>>>>>>> 73d424f9af7b (context_tracking: Optimize context switch off case with static keys)
  #else
  static inline void guest_enter(void)
  {
* Unmerged path include/linux/context_tracking.h
diff --git a/kernel/context_tracking.c b/kernel/context_tracking.c
index 93939ff36b59..071098286765 100644
--- a/kernel/context_tracking.c
+++ b/kernel/context_tracking.c
@@ -184,7 +184,7 @@ EXPORT_SYMBOL_GPL(guest_exit);
 
 
 /**
- * context_tracking_task_switch - context switch the syscall callbacks
+ * __context_tracking_task_switch - context switch the syscall callbacks
  * @prev: the task that is being switched out
  * @next: the task that is being switched in
  *
@@ -196,8 +196,8 @@ EXPORT_SYMBOL_GPL(guest_exit);
  * migrate to some CPU that doesn't do the context tracking. As such the TIF
  * flag may not be desired there.
  */
-void context_tracking_task_switch(struct task_struct *prev,
-			     struct task_struct *next)
+void __context_tracking_task_switch(struct task_struct *prev,
+				    struct task_struct *next)
 {
 	clear_tsk_thread_flag(prev, TIF_NOHZ);
 	set_tsk_thread_flag(next, TIF_NOHZ);
