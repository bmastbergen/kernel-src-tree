radix tree: Remove multiorder support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-305.el8
commit-author Matthew Wilcox <willy@infradead.org>
commit 3a08cd52c37c793ffc199f6fc2ecfc368e284b2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-305.el8/3a08cd52.failed

All users have now been converted to the XArray.  Removing the support
reduces code size and ensures new users will use the XArray instead.

	Signed-off-by: Matthew Wilcox <willy@infradead.org>
(cherry picked from commit 3a08cd52c37c793ffc199f6fc2ecfc368e284b2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/radix-tree.h
#	lib/radix-tree.c
diff --cc include/linux/radix-tree.h
index 1ef0ded1f9a3,06c4c7a6c09c..000000000000
--- a/include/linux/radix-tree.h
+++ b/include/linux/radix-tree.h
@@@ -132,21 -109,8 +131,15 @@@ struct radix_tree_iter 
  	unsigned long	next_index;
  	unsigned long	tags;
  	struct radix_tree_node *node;
++<<<<<<< HEAD
 +#ifdef CONFIG_RADIX_TREE_MULTIORDER
 +	unsigned int	shift;
 +#endif
 +	RH_KABI_AUX_EMBED(radix_tree_iter);
++=======
++>>>>>>> 3a08cd52c37c (radix tree: Remove multiorder support)
  };
  
- static inline unsigned int iter_shift(const struct radix_tree_iter *iter)
- {
- #ifdef CONFIG_RADIX_TREE_MULTIORDER
- 	return iter->shift;
- #else
- 	return 0;
- #endif
- }
- 
  /**
   * Radix-tree synchronization
   *
diff --cc lib/radix-tree.c
index 0a9adc3c78a9,1106bb6aa01e..000000000000
--- a/lib/radix-tree.c
+++ b/lib/radix-tree.c
@@@ -821,9 -722,8 +746,14 @@@ static inline int insert_entries(struc
   *
   *	Insert an item into the radix tree at position @index.
   */
++<<<<<<< HEAD
 +RH_KABI_FORCE_CHANGE(1)
 +int __radix_tree_insert(struct radix_tree_root *root, unsigned long index,
 +			unsigned order, void *item)
++=======
+ int radix_tree_insert(struct radix_tree_root *root, unsigned long index,
+ 			void *item)
++>>>>>>> 3a08cd52c37c (radix tree: Remove multiorder support)
  {
  	struct radix_tree_node *node;
  	void __rcu **slot;
* Unmerged path include/linux/radix-tree.h
diff --git a/lib/Kconfig b/lib/Kconfig
index 7f32c53395e6..257c2297d46e 100644
--- a/lib/Kconfig
+++ b/lib/Kconfig
@@ -413,10 +413,6 @@ config XARRAY_MULTI
 	  Support entries which occupy multiple consecutive indices in the
 	  XArray.
 
-config RADIX_TREE_MULTIORDER
-	bool
-	select XARRAY_MULTI
-
 config ASSOCIATIVE_ARRAY
 	bool
 	help
* Unmerged path lib/radix-tree.c
diff --git a/mm/Kconfig b/mm/Kconfig
index 32aa1eb74166..45be9c472848 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -383,7 +383,7 @@ config TRANSPARENT_HUGEPAGE
 	bool "Transparent Hugepage Support"
 	depends on HAVE_ARCH_TRANSPARENT_HUGEPAGE
 	select COMPACTION
-	select RADIX_TREE_MULTIORDER
+	select XARRAY_MULTI
 	help
 	  Transparent Hugepages allows the kernel to use huge pages and
 	  huge tlb transparently to the applications whenever possible.
@@ -674,7 +674,7 @@ config ZONE_DEVICE
 	depends on MEMORY_HOTREMOVE
 	depends on SPARSEMEM_VMEMMAP
 	depends on ARCH_HAS_ZONE_DEVICE
-	select RADIX_TREE_MULTIORDER
+	select XARRAY_MULTI
 
 	help
 	  Device memory hotplug support allows for establishing pmem,
diff --git a/tools/testing/radix-tree/generated/autoconf.h b/tools/testing/radix-tree/generated/autoconf.h
index ca8e03ad19ac..2218b3cc184e 100644
--- a/tools/testing/radix-tree/generated/autoconf.h
+++ b/tools/testing/radix-tree/generated/autoconf.h
@@ -1,2 +1 @@
-#define CONFIG_RADIX_TREE_MULTIORDER 1
 #define CONFIG_XARRAY_MULTI 1
