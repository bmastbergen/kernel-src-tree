docs/arm64: elf_hwcaps: sort the HWCAP{, 2} documentation by ascending value

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-348.el8
commit-author Julien Grall <julien.grall@arm.com>
commit 3a25e46c99e9c8b294b89df7a13a4638bf722af8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-348.el8/3a25e46c.failed

Part of the hardware capabilities documented in elf_hwcap.rst are
ordered following the definition in the header
arch/arm64/include/uapi/asm/hwcap.h but others seems to be documented
in random order.

To make easier to match against the definition in the header, they are
now sorted in the same order as they are defined in header. I.e.,
HWCAP first by ascending value, and then HWCAP2 in the similar fashion.

	Acked-by: Will Deacon <will@kernel.org>
	Signed-off-by: Julien Grall <julien.grall@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 3a25e46c99e9c8b294b89df7a13a4638bf722af8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/arm64/elf_hwcaps.txt
diff --cc Documentation/arm64/elf_hwcaps.txt
index 13d6691b37be,9ee7f8ff1fae..000000000000
--- a/Documentation/arm64/elf_hwcaps.txt
+++ b/Documentation/arm64/elf_hwcaps.txt
@@@ -160,37 -138,72 +160,109 @@@ HWCAP_SV
      Functionality implied by ID_AA64PFR0_EL1.SVE == 0b0001.
  
  HWCAP_ASIMDFHM
++<<<<<<< HEAD:Documentation/arm64/elf_hwcaps.txt
 +
 +   Functionality implied by ID_AA64ISAR0_EL1.FHM == 0b0001.
 +
 +HWCAP_DIT
 +
 +    Functionality implied by ID_AA64PFR0_EL1.DIT == 0b0001.
 +
 +HWCAP_USCAT
 +
 +    Functionality implied by ID_AA64MMFR2_EL1.AT == 0b0001.
 +
 +HWCAP_ILRCPC
 +
 +    Functionality implied by ID_AA64ISAR1_EL1.LRCPC == 0b0010.
 +
 +HWCAP_FLAGM
 +
 +    Functionality implied by ID_AA64ISAR0_EL1.TS == 0b0001.
 +
 +HWCAP_SSBS
 +
 +    Functionality implied by ID_AA64PFR1_EL1.SSBS == 0b0010.
 +
 +HWCAP_PACA
 +
 +    Functionality implied by ID_AA64ISAR1_EL1.APA == 0b0001 or
 +    ID_AA64ISAR1_EL1.API == 0b0001, as described by
 +    Documentation/arm64/pointer-authentication.txt.
 +
 +HWCAP_PACG
 +
 +    Functionality implied by ID_AA64ISAR1_EL1.GPA == 0b0001 or
 +    ID_AA64ISAR1_EL1.GPI == 0b0001, as described by
 +    Documentation/arm64/pointer-authentication.txt.
++=======
+    Functionality implied by ID_AA64ISAR0_EL1.FHM == 0b0001.
+ 
+ HWCAP_DIT
+     Functionality implied by ID_AA64PFR0_EL1.DIT == 0b0001.
+ 
+ HWCAP_USCAT
+     Functionality implied by ID_AA64MMFR2_EL1.AT == 0b0001.
+ 
+ HWCAP_ILRCPC
+     Functionality implied by ID_AA64ISAR1_EL1.LRCPC == 0b0010.
+ 
+ HWCAP_FLAGM
+     Functionality implied by ID_AA64ISAR0_EL1.TS == 0b0001.
+ 
+ HWCAP_SSBS
+     Functionality implied by ID_AA64PFR1_EL1.SSBS == 0b0010.
+ 
+ HWCAP_PACA
+     Functionality implied by ID_AA64ISAR1_EL1.APA == 0b0001 or
+     ID_AA64ISAR1_EL1.API == 0b0001, as described by
+     Documentation/arm64/pointer-authentication.rst.
+ 
+ HWCAP_PACG
+     Functionality implied by ID_AA64ISAR1_EL1.GPA == 0b0001 or
+     ID_AA64ISAR1_EL1.GPI == 0b0001, as described by
+     Documentation/arm64/pointer-authentication.rst.
+ 
+ HWCAP2_DCPODP
+ 
+     Functionality implied by ID_AA64ISAR1_EL1.DPB == 0b0010.
+ 
+ HWCAP2_SVE2
+ 
+     Functionality implied by ID_AA64ZFR0_EL1.SVEVer == 0b0001.
+ 
+ HWCAP2_SVEAES
+ 
+     Functionality implied by ID_AA64ZFR0_EL1.AES == 0b0001.
+ 
+ HWCAP2_SVEPMULL
+ 
+     Functionality implied by ID_AA64ZFR0_EL1.AES == 0b0010.
+ 
+ HWCAP2_SVEBITPERM
+ 
+     Functionality implied by ID_AA64ZFR0_EL1.BitPerm == 0b0001.
+ 
+ HWCAP2_SVESHA3
+ 
+     Functionality implied by ID_AA64ZFR0_EL1.SHA3 == 0b0001.
+ 
+ HWCAP2_SVESM4
+ 
+     Functionality implied by ID_AA64ZFR0_EL1.SM4 == 0b0001.
+ 
+ HWCAP2_FLAGM2
+ 
+     Functionality implied by ID_AA64ISAR0_EL1.TS == 0b0010.
+ 
+ HWCAP2_FRINT
+ 
+     Functionality implied by ID_AA64ISAR1_EL1.FRINTTS == 0b0001.
+ 
+ 
+ 4. Unused AT_HWCAP bits
+ -----------------------
+ 
+ For interoperation with userspace, the kernel guarantees that bits 62
+ and 63 of AT_HWCAP will always be returned as 0.
++>>>>>>> 3a25e46c99e9 (docs/arm64: elf_hwcaps: sort the HWCAP{, 2} documentation by ascending value):Documentation/arm64/elf_hwcaps.rst
* Unmerged path Documentation/arm64/elf_hwcaps.txt
