treewide: prefix header search paths with $(srctree)/

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-348.el8
commit-author Masahiro Yamada <yamada.masahiro@socionext.com>
commit 9cc342f6c4a06ea613ddef1bcaa25409260aec63
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-348.el8/9cc342f6.failed

Currently, the Kbuild core manipulates header search paths in a crazy
way [1].

To fix this mess, I want all Makefiles to add explicit $(srctree)/ to
the search paths in the srctree. Some Makefiles are already written in
that way, but not all. The goal of this work is to make the notation
consistent, and finally get rid of the gross hacks.

Having whitespaces after -I does not matter since commit 48f6e3cf5bc6
("kbuild: do not drop -I without parameter").

[1]: https://patchwork.kernel.org/patch/9632347/

	Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
(cherry picked from commit 9cc342f6c4a06ea613ddef1bcaa25409260aec63)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/Makefile
#	arch/x86/kernel/Makefile
#	fs/ocfs2/dlm/Makefile
#	fs/ocfs2/dlmfs/Makefile
#	net/bpfilter/Makefile
#	scripts/kconfig/Makefile
diff --cc arch/powerpc/Makefile
index c8021c7899e4,c345b79414a9..000000000000
--- a/arch/powerpc/Makefile
+++ b/arch/powerpc/Makefile
@@@ -198,10 -211,10 +198,15 @@@ endi
  
  asinstr := $(call as-instr,lis 9$(comma)foo@high,-DHAVE_AS_ATHIGH=1)
  
++<<<<<<< HEAD
 +KBUILD_CPPFLAGS	+= -Iarch/$(ARCH) $(asinstr)
 +KBUILD_AFLAGS	+= -Iarch/$(ARCH) $(AFLAGS-y)
++=======
+ KBUILD_CPPFLAGS	+= -I $(srctree)/arch/$(ARCH) $(asinstr)
+ KBUILD_AFLAGS	+= $(AFLAGS-y)
++>>>>>>> 9cc342f6c4a0 (treewide: prefix header search paths with $(srctree)/)
  KBUILD_CFLAGS	+= $(call cc-option,-msoft-float)
 -KBUILD_CFLAGS	+= -pipe $(CFLAGS-y)
 +KBUILD_CFLAGS	+= -pipe -Iarch/$(ARCH) $(CFLAGS-y)
  CPP		= $(CC) -E $(KBUILD_CFLAGS)
  
  CHECKFLAGS	+= -m$(BITS) -D__powerpc__ -D__powerpc$(BITS)__
diff --cc arch/x86/kernel/Makefile
index 94646e3b13c4,ce1b5cc360a2..000000000000
--- a/arch/x86/kernel/Makefile
+++ b/arch/x86/kernel/Makefile
@@@ -48,9 -42,7 +48,13 @@@ endi
  # non-deterministic coverage.
  KCOV_INSTRUMENT		:= n
  
++<<<<<<< HEAD
 +CFLAGS_head$(BITS).o	+= -fno-stack-protector
 +
 +CFLAGS_irq.o := -I$(src)/../include/asm/trace
++=======
+ CFLAGS_irq.o := -I $(srctree)/$(src)/../include/asm/trace
++>>>>>>> 9cc342f6c4a0 (treewide: prefix header search paths with $(srctree)/)
  
  obj-y			:= process_$(BITS).o signal.o
  obj-$(CONFIG_COMPAT)	+= signal_compat.o
diff --cc fs/ocfs2/dlm/Makefile
index bd1aab1f49a4,3d4041f0431e..000000000000
--- a/fs/ocfs2/dlm/Makefile
+++ b/fs/ocfs2/dlm/Makefile
@@@ -1,4 -1,4 +1,8 @@@
++<<<<<<< HEAD
 +ccflags-y := -Ifs/ocfs2
++=======
+ ccflags-y := -I $(srctree)/$(src)/..
++>>>>>>> 9cc342f6c4a0 (treewide: prefix header search paths with $(srctree)/)
  
  obj-$(CONFIG_OCFS2_FS_O2CB) += ocfs2_dlm.o
  
diff --cc fs/ocfs2/dlmfs/Makefile
index eed3db8c5b49,0a0b93d940fe..000000000000
--- a/fs/ocfs2/dlmfs/Makefile
+++ b/fs/ocfs2/dlmfs/Makefile
@@@ -1,4 -1,4 +1,8 @@@
++<<<<<<< HEAD
 +ccflags-y := -Ifs/ocfs2
++=======
+ ccflags-y := -I $(srctree)/$(src)/..
++>>>>>>> 9cc342f6c4a0 (treewide: prefix header search paths with $(srctree)/)
  
  obj-$(CONFIG_OCFS2_FS) += ocfs2_dlmfs.o
  
diff --cc net/bpfilter/Makefile
index 05930c2fafd5,aa945ab5b655..000000000000
--- a/net/bpfilter/Makefile
+++ b/net/bpfilter/Makefile
@@@ -5,8 -5,7 +5,12 @@@
  
  hostprogs-y := bpfilter_umh
  bpfilter_umh-objs := main.o
++<<<<<<< HEAD
 +KBUILD_HOSTCFLAGS += -I $(srctree)/tools/include/ -I $(srctree)/tools/include/uapi \
 +			$(filter -m32 -m64, $(KBUILD_CFLAGS))
++=======
+ KBUILD_HOSTCFLAGS += -I $(srctree)/tools/include/ -I $(srctree)/tools/include/uapi
++>>>>>>> 9cc342f6c4a0 (treewide: prefix header search paths with $(srctree)/)
  HOSTCC := $(CC)
  
  ifeq ($(CONFIG_BPFILTER_UMH), y)
diff --cc scripts/kconfig/Makefile
index 98ecd354526b,5e0cd86cb4a7..000000000000
--- a/scripts/kconfig/Makefile
+++ b/scripts/kconfig/Makefile
@@@ -151,19 -142,17 +151,25 @@@ help
  	@echo  '  testconfig	  - Run Kconfig unit tests (requires python3 and pytest)'
  
  # ===========================================================================
 +# Shared Makefile for the various kconfig executables:
 +# conf:	  Used for defconfig, oldconfig and related targets
  # object files used by all kconfig flavours
 -common-objs	:= confdata.o expr.o lexer.lex.o parser.tab.o preprocess.o \
 -		   symbol.o
  
++<<<<<<< HEAD
 +conf-objs	:= conf.o  zconf.tab.o
++=======
+ $(obj)/lexer.lex.o: $(obj)/parser.tab.h
+ HOSTCFLAGS_lexer.lex.o	:= -I $(srctree)/$(src)
+ HOSTCFLAGS_parser.tab.o	:= -I $(srctree)/$(src)
++>>>>>>> 9cc342f6c4a0 (treewide: prefix header search paths with $(srctree)/)
 +
 +hostprogs-y := conf
  
 -# conf: Used for defconfig, oldconfig and related targets
 -hostprogs-y	+= conf
 -conf-objs	:= conf.o $(common-objs)
 +targets		+= zconf.lex.c
 +
 +# generated files seem to need this to find local include files
 +HOSTCFLAGS_zconf.lex.o	:= -I$(src)
 +HOSTCFLAGS_zconf.tab.o	:= -I$(src)
  
  # nconf: Used for the nconfig target based on ncurses
  hostprogs-y	+= nconf
diff --git a/arch/mips/pnx833x/Platform b/arch/mips/pnx833x/Platform
index 794526caab12..6b1a847d593f 100644
--- a/arch/mips/pnx833x/Platform
+++ b/arch/mips/pnx833x/Platform
@@ -1,5 +1,5 @@
 # NXP STB225
 platform-$(CONFIG_SOC_PNX833X)	+= pnx833x/
-cflags-$(CONFIG_SOC_PNX833X)	+= -Iarch/mips/include/asm/mach-pnx833x
+cflags-$(CONFIG_SOC_PNX833X)	+= -I $(srctree)/arch/mips/include/asm/mach-pnx833x
 load-$(CONFIG_NXP_STB220)	+= 0xffffffff80001000
 load-$(CONFIG_NXP_STB225)	+= 0xffffffff80001000
* Unmerged path arch/powerpc/Makefile
diff --git a/arch/sh/Makefile b/arch/sh/Makefile
index 65300193b99f..7da2368d2c1d 100644
--- a/arch/sh/Makefile
+++ b/arch/sh/Makefile
@@ -191,8 +191,8 @@ cpuincdir-y			+= cpu-common	# Must be last
 drivers-y			+= arch/sh/drivers/
 drivers-$(CONFIG_OPROFILE)	+= arch/sh/oprofile/
 
-cflags-y	+= $(foreach d, $(cpuincdir-y), -Iarch/sh/include/$(d)) \
-		   $(foreach d, $(machdir-y), -Iarch/sh/include/$(d))
+cflags-y	+= $(foreach d, $(cpuincdir-y), -I $(srctree)/arch/sh/include/$(d)) \
+		   $(foreach d, $(machdir-y), -I $(srctree)/arch/sh/include/$(d))
 
 KBUILD_CFLAGS		+= -pipe $(cflags-y)
 KBUILD_CPPFLAGS		+= $(cflags-y)
* Unmerged path arch/x86/kernel/Makefile
diff --git a/arch/x86/mm/Makefile b/arch/x86/mm/Makefile
index 6a0331de7f7b..2cda0a031ce8 100644
--- a/arch/x86/mm/Makefile
+++ b/arch/x86/mm/Makefile
@@ -27,7 +27,7 @@ CFLAGS_physaddr.o		:= $(nostackp)
 CFLAGS_setup_nx.o		:= $(nostackp)
 CFLAGS_mem_encrypt_identity.o	:= $(nostackp)
 
-CFLAGS_fault.o := -I$(src)/../include/asm/trace
+CFLAGS_fault.o := -I $(srctree)/$(src)/../include/asm/trace
 
 obj-$(CONFIG_X86_32)		+= pgtable_32.o iomap_32.o
 
diff --git a/arch/xtensa/boot/lib/Makefile b/arch/xtensa/boot/lib/Makefile
index 355127faade1..e3d717c7bfa1 100644
--- a/arch/xtensa/boot/lib/Makefile
+++ b/arch/xtensa/boot/lib/Makefile
@@ -7,7 +7,7 @@ zlib	:= inffast.c inflate.c inftrees.c
 
 lib-y	+= $(zlib:.c=.o) zmem.o
 
-ccflags-y	:= -Ilib/zlib_inflate
+ccflags-y	:= -I $(srctree)/lib/zlib_inflate
 ifdef CONFIG_FUNCTION_TRACER
 CFLAGS_REMOVE_inflate.o = -pg
 CFLAGS_REMOVE_zmem.o = -pg
diff --git a/drivers/net/ethernet/chelsio/libcxgb/Makefile b/drivers/net/ethernet/chelsio/libcxgb/Makefile
index 2534e30a1560..441913b5221e 100644
--- a/drivers/net/ethernet/chelsio/libcxgb/Makefile
+++ b/drivers/net/ethernet/chelsio/libcxgb/Makefile
@@ -1,4 +1,4 @@
-ccflags-y := -Idrivers/net/ethernet/chelsio/cxgb4
+ccflags-y := -I $(srctree)/$(src)/../cxgb4
 
 obj-$(CONFIG_CHELSIO_LIB) += libcxgb.o
 
diff --git a/drivers/target/iscsi/cxgbit/Makefile b/drivers/target/iscsi/cxgbit/Makefile
index d16aaae7ba2a..0dcaf2006f78 100644
--- a/drivers/target/iscsi/cxgbit/Makefile
+++ b/drivers/target/iscsi/cxgbit/Makefile
@@ -1,7 +1,7 @@
 # SPDX-License-Identifier: GPL-2.0
-ccflags-y := -Idrivers/net/ethernet/chelsio/cxgb4
-ccflags-y += -Idrivers/net/ethernet/chelsio/libcxgb
-ccflags-y += -Idrivers/target/iscsi
+ccflags-y := -I $(srctree)/drivers/net/ethernet/chelsio/cxgb4
+ccflags-y += -I $(srctree)/drivers/net/ethernet/chelsio/libcxgb
+ccflags-y += -I $(srctree)/drivers/target/iscsi
 
 obj-$(CONFIG_ISCSI_TARGET_CXGB4)  += cxgbit.o
 
diff --git a/drivers/usb/storage/Makefile b/drivers/usb/storage/Makefile
index c5126a4cd954..a67ddcbb4e24 100644
--- a/drivers/usb/storage/Makefile
+++ b/drivers/usb/storage/Makefile
@@ -6,7 +6,7 @@
 # Rewritten to use lists instead of if-statements.
 #
 
-ccflags-y := -Idrivers/scsi
+ccflags-y := -I $(srctree)/drivers/scsi
 
 obj-$(CONFIG_USB_UAS)		+= uas.o
 obj-$(CONFIG_USB_STORAGE)	+= usb-storage.o
* Unmerged path fs/ocfs2/dlm/Makefile
* Unmerged path fs/ocfs2/dlmfs/Makefile
diff --git a/fs/xfs/Makefile b/fs/xfs/Makefile
index cc94add81a49..04611a1068b4 100644
--- a/fs/xfs/Makefile
+++ b/fs/xfs/Makefile
@@ -4,8 +4,8 @@
 # All Rights Reserved.
 #
 
-ccflags-y += -I$(src)			# needed for trace events
-ccflags-y += -I$(src)/libxfs
+ccflags-y += -I $(srctree)/$(src)		# needed for trace events
+ccflags-y += -I $(srctree)/$(src)/libxfs
 
 obj-$(CONFIG_XFS_FS)		+= xfs.o
 
* Unmerged path net/bpfilter/Makefile
diff --git a/scripts/dtc/Makefile b/scripts/dtc/Makefile
index 81c6f5132f12..a6434e6e2b2f 100644
--- a/scripts/dtc/Makefile
+++ b/scripts/dtc/Makefile
@@ -9,7 +9,7 @@ dtc-objs	:= dtc.o flattree.o fstree.o data.o livetree.o treesource.o \
 dtc-objs	+= dtc-lexer.lex.o dtc-parser.tab.o
 
 # Source files need to get at the userspace version of libfdt_env.h to compile
-HOST_EXTRACFLAGS := -I$(src)/libfdt
+HOST_EXTRACFLAGS := -I $(srctree)/$(src)/libfdt
 
 ifeq ($(wildcard /usr/include/yaml.h),)
 HOST_EXTRACFLAGS += -DNO_YAML
@@ -19,8 +19,8 @@ HOSTLDLIBS_dtc	:= -lyaml
 endif
 
 # Generated files need one more search path to include headers in source tree
-HOSTCFLAGS_dtc-lexer.lex.o := -I$(src)
-HOSTCFLAGS_dtc-parser.tab.o := -I$(src)
+HOSTCFLAGS_dtc-lexer.lex.o := -I $(srctree)/$(src)
+HOSTCFLAGS_dtc-parser.tab.o := -I $(srctree)/$(src)
 
 # dependencies on generated files need to be listed explicitly
 $(obj)/dtc-lexer.lex.o: $(obj)/dtc-parser.tab.h
diff --git a/scripts/genksyms/Makefile b/scripts/genksyms/Makefile
index 03b7ce97de14..66c314bc5933 100644
--- a/scripts/genksyms/Makefile
+++ b/scripts/genksyms/Makefile
@@ -31,8 +31,8 @@ $(obj)/parse.tab.h: $(src)/parse.y FORCE
 endif
 
 # -I needed for generated C source (shipped source)
-HOSTCFLAGS_parse.tab.o := -I$(src)
-HOSTCFLAGS_lex.lex.o := -I$(src)
+HOSTCFLAGS_parse.tab.o := -I $(srctree)/$(src)
+HOSTCFLAGS_lex.lex.o := -I $(srctree)/$(src)
 
 # dependencies on generated files need to be listed explicitly
 $(obj)/lex.lex.o: $(obj)/parse.tab.h
* Unmerged path scripts/kconfig/Makefile
