net/mlx5: E-Switch, always set mc_promisc for allmulti vports

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5: E-Switch, always set mc_promisc for allmulti vports (Don Dutile) [1385330 1417284]
Rebuild_FUZZ: 96.61%
commit-author Mohamad Haj Yahia <mohamad@mellanox.com>
commit 62e3c24ac4f0ee307c41a3652636f88a3f8d165c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/62e3c24a.failed

Set the mc_promisc flag also in the case of adding new mc address to
existing allmulti vport.

Fixes: a35f71f27a61 ('net/mlx5: E-Switch, Implement promiscuous rx modes vf request handling')
	Signed-off-by: Mohamad Haj Yahia <mohamad@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 62e3c24ac4f0ee307c41a3652636f88a3f8d165c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
index b153747c6dc3,aebbd6ccb9fe..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
@@@ -574,6 -616,53 +574,56 @@@ static int esw_del_uc_addr(struct mlx5_
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static void update_allmulti_vports(struct mlx5_eswitch *esw,
+ 				   struct vport_addr *vaddr,
+ 				   struct esw_mc_addr *esw_mc)
+ {
+ 	u8 *mac = vaddr->node.addr;
+ 	u32 vport_idx = 0;
+ 
+ 	for (vport_idx = 0; vport_idx < esw->total_vports; vport_idx++) {
+ 		struct mlx5_vport *vport = &esw->vports[vport_idx];
+ 		struct hlist_head *vport_hash = vport->mc_list;
+ 		struct vport_addr *iter_vaddr =
+ 					l2addr_hash_find(vport_hash,
+ 							 mac,
+ 							 struct vport_addr);
+ 		if (IS_ERR_OR_NULL(vport->allmulti_rule) ||
+ 		    vaddr->vport == vport_idx)
+ 			continue;
+ 		switch (vaddr->action) {
+ 		case MLX5_ACTION_ADD:
+ 			if (iter_vaddr)
+ 				continue;
+ 			iter_vaddr = l2addr_hash_add(vport_hash, mac,
+ 						     struct vport_addr,
+ 						     GFP_KERNEL);
+ 			if (!iter_vaddr) {
+ 				esw_warn(esw->dev,
+ 					 "ALL-MULTI: Failed to add MAC(%pM) to vport[%d] DB\n",
+ 					 mac, vport_idx);
+ 				continue;
+ 			}
+ 			iter_vaddr->vport = vport_idx;
+ 			iter_vaddr->flow_rule =
+ 					esw_fdb_set_vport_rule(esw,
+ 							       mac,
+ 							       vport_idx);
+ 			iter_vaddr->mc_promisc = true;
+ 			break;
+ 		case MLX5_ACTION_DEL:
+ 			if (!iter_vaddr)
+ 				continue;
+ 			mlx5_del_flow_rule(iter_vaddr->flow_rule);
+ 			l2addr_hash_del(iter_vaddr);
+ 			break;
+ 		}
+ 	}
+ }
+ 
++>>>>>>> 62e3c24ac4f0 (net/mlx5: E-Switch, always set mc_promisc for allmulti vports)
  static int esw_add_mc_addr(struct mlx5_eswitch *esw, struct vport_addr *vaddr)
  {
  	struct hlist_head *hash = esw->mc_table;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
