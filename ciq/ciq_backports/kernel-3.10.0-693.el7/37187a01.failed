alx: fix fallback to msi or legacy interrupts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Tobias Regnery <tobias.regnery@gmail.com>
commit 37187a016c37d7e550544544dba25399ce4589c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/37187a01.failed

If requesting msi-x interrupts fails we should fall back to msi or
legacy interrupts. However alx_realloc_ressources don't call
alx_init_intr, so we fail to set the right number of tx queues.
This results in watchdog timeouts and a nonfunctional adapter.

Fixes: d768319cd427 ("alx: enable multiple tx queues")
	Signed-off-by: Tobias Regnery <tobias.regnery@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 37187a016c37d7e550544544dba25399ce4589c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/atheros/alx/main.c
diff --cc drivers/net/ethernet/atheros/alx/main.c
index b165b9e58ad3,75cbd46e429d..000000000000
--- a/drivers/net/ethernet/atheros/alx/main.c
+++ b/drivers/net/ethernet/atheros/alx/main.c
@@@ -830,6 -977,26 +830,29 @@@ static void alx_irq_disable(struct alx_
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static int alx_realloc_resources(struct alx_priv *alx)
+ {
+ 	int err;
+ 
+ 	alx_free_rings(alx);
+ 	alx_free_napis(alx);
+ 	alx_disable_advanced_intr(alx);
+ 	alx_init_intr(alx, false);
+ 
+ 	err = alx_alloc_napis(alx);
+ 	if (err)
+ 		return err;
+ 
+ 	err = alx_alloc_rings(alx);
+ 	if (err)
+ 		return err;
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 37187a016c37 (alx: fix fallback to msi or legacy interrupts)
  static int alx_request_irq(struct alx_priv *alx)
  {
  	struct pci_dev *pdev = alx->hw.pdev;
* Unmerged path drivers/net/ethernet/atheros/alx/main.c
