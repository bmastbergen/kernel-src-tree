bonding: fix active-backup transition

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Mahesh Bandewar <maheshb@google.com>
commit 3f3c278c94dd994fe0d9f21679ae19b9c0a55292
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3f3c278c.failed

Earlier patch c4adfc822bf5 ("bonding: make speed, duplex setting
consistent with link state") made an attempt to keep slave state
consistent with speed and duplex settings. Unfortunately link-state
transition is used to change the active link especially when used
in conjunction with mii-mon. The above mentioned patch broke that
logic. Also when speed and duplex settings for a link are updated
during a link-event, the link-status should not be changed to
invoke correct transition logic.

This patch fixes this issue by moving the link-state update outside
of the bond_update_speed_duplex() fn and to the places where this fn
is called and update link-state selectively.

Fixes: c4adfc822bf5 ("bonding: make speed, duplex setting consistent
with link state")
	Signed-off-by: Mahesh Bandewar <maheshb@google.com>
	Reviewed-by: Andy Gospodarek <andy@greyhouse.net>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3f3c278c94dd994fe0d9f21679ae19b9c0a55292)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_main.c
diff --cc drivers/net/bonding/bond_main.c
index 1949ed719b27,535388b15cde..000000000000
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@@ -2096,8 -2121,15 +2092,20 @@@ static void bond_miimon_commit(struct b
  			continue;
  
  		case BOND_LINK_UP:
++<<<<<<< HEAD
 +			bond_update_speed_duplex(slave);
 +			bond_set_slave_link_state(slave, BOND_LINK_UP);
++=======
+ 			if (bond_update_speed_duplex(slave)) {
+ 				slave->link = BOND_LINK_DOWN;
+ 				netdev_warn(bond->dev,
+ 					    "failed to get link speed/duplex for %s\n",
+ 					    slave->dev->name);
+ 				continue;
+ 			}
+ 			bond_set_slave_link_state(slave, BOND_LINK_UP,
+ 						  BOND_SLAVE_NOTIFY_NOW);
++>>>>>>> 3f3c278c94dd (bonding: fix active-backup transition)
  			slave->last_link_up = jiffies;
  
  			primary = rtnl_dereference(bond->primary_slave);
* Unmerged path drivers/net/bonding/bond_main.c
