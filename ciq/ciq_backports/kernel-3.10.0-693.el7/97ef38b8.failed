tty: Replace TTY_THROTTLED bit tests with tty_throttled()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Peter Hurley <peter@hurleysoftware.com>
commit 97ef38b8210d7459d4cb51668cdf3983772ac6b7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/97ef38b8.failed

Abstract TTY_THROTTLED bit tests with tty_throttled().

	Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 97ef38b8210d7459d4cb51668cdf3983772ac6b7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/pcmcia/synclink_cs.c
#	drivers/staging/fwserial/fwserial.c
#	drivers/staging/speakup/selection.c
#	drivers/tty/amiserial.c
#	drivers/tty/serial/serial_core.c
#	drivers/tty/synclink.c
#	drivers/tty/synclink_gt.c
#	drivers/tty/synclinkmp.c
#	drivers/tty/tty_ioctl.c
#	drivers/usb/serial/digi_acceleport.c
#	include/linux/tty.h
#	net/irda/ircomm/ircomm_tty_ioctl.c
diff --cc drivers/char/pcmcia/synclink_cs.c
index 6aded3c816e5,bcae5bb15751..000000000000
--- a/drivers/char/pcmcia/synclink_cs.c
+++ b/drivers/char/pcmcia/synclink_cs.c
@@@ -2315,13 -2314,10 +2315,17 @@@ static void mgslpc_set_termios(struct t
  	}
  
  	/* Handle transition away from B0 status */
 -	if (!(old_termios->c_cflag & CBAUD) && C_BAUD(tty)) {
 +	if (!(old_termios->c_cflag & CBAUD) &&
 +	    tty->termios.c_cflag & CBAUD) {
  		info->serial_signals |= SerialSignal_DTR;
++<<<<<<< HEAD
 +		if (!(tty->termios.c_cflag & CRTSCTS) ||
 +		    !test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 		if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			info->serial_signals |= SerialSignal_RTS;
 +		}
  		spin_lock_irqsave(&info->lock, flags);
  		set_signals(info);
  		spin_unlock_irqrestore(&info->lock, flags);
diff --cc drivers/staging/fwserial/fwserial.c
index e5818a1c2262,1f9389d8c152..000000000000
--- a/drivers/staging/fwserial/fwserial.c
+++ b/drivers/staging/fwserial/fwserial.c
@@@ -1373,10 -1302,10 +1373,15 @@@ static void fwtty_set_termios(struct tt
  	spin_lock_bh(&port->lock);
  	baud = set_termios(port, tty);
  
 -	if ((baud == 0) && (old->c_cflag & CBAUD)) {
 +	if ((baud == 0) && (old->c_cflag & CBAUD))
  		port->mctrl &= ~(TIOCM_DTR | TIOCM_RTS);
++<<<<<<< HEAD
 +	else if ((baud != 0) && !(old->c_cflag & CBAUD)) {
 +		if (C_CRTSCTS(tty) || !test_bit(TTY_THROTTLED, &tty->flags))
++=======
+ 	} else if ((baud != 0) && !(old->c_cflag & CBAUD)) {
+ 		if (C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			port->mctrl |= TIOCM_DTR | TIOCM_RTS;
  		else
  			port->mctrl |= TIOCM_DTR;
diff --cc drivers/staging/speakup/selection.c
index f0fb00392d6b,0149edc1e0ae..000000000000
--- a/drivers/staging/speakup/selection.c
+++ b/drivers/staging/speakup/selection.c
@@@ -131,10 -144,13 +131,14 @@@ int speakup_paste_selection(struct tty_
  	add_wait_queue(&vc->paste_wait, &wait);
  	while (sel_buffer && sel_buffer_lth > pasted) {
  		set_current_state(TASK_INTERRUPTIBLE);
++<<<<<<< HEAD
 +		if (test_bit(TTY_THROTTLED, &tty->flags)) {
 +			if (in_atomic())
 +				/* if we are in an interrupt handler, abort */
 +				break;
++=======
+ 		if (tty_throttled(tty)) {
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			schedule();
  			continue;
  		}
diff --cc drivers/tty/amiserial.c
index 083710e02367,e68208eac322..000000000000
--- a/drivers/tty/amiserial.c
+++ b/drivers/tty/amiserial.c
@@@ -1338,13 -1340,10 +1338,17 @@@ static void rs_set_termios(struct tty_s
  	}
  
  	/* Handle transition away from B0 status */
 -	if (!(old_termios->c_cflag & CBAUD) && (cflag & CBAUD)) {
 +	if (!(old_termios->c_cflag & CBAUD) &&
 +	    (cflag & CBAUD)) {
  		info->MCR |= SER_DTR;
++<<<<<<< HEAD
 +		if (!(tty->termios.c_cflag & CRTSCTS) || 
 +		    !test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 		if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			info->MCR |= SER_RTS;
 +		}
  		local_irq_save(flags);
  		rtsdtr_ctrl(info->MCR);
  		local_irq_restore(flags);
diff --cc drivers/tty/serial/serial_core.c
index e57d71f6695c,64a5c00d7468..000000000000
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@@ -1284,8 -1350,7 +1284,12 @@@ static void uart_set_termios(struct tty
  	/* Handle transition away from B0 status */
  	else if (!(old_termios->c_cflag & CBAUD) && (cflag & CBAUD)) {
  		unsigned int mask = TIOCM_DTR;
++<<<<<<< HEAD
 +		if (!(cflag & CRTSCTS) ||
 +		    !test_bit(TTY_THROTTLED, &tty->flags))
++=======
+ 		if (!(cflag & CRTSCTS) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			mask |= TIOCM_RTS;
  		uart_set_mctrl(uport, mask);
  	}
diff --cc drivers/tty/synclink.c
index 0895bdbf61af,3768e5c71c0b..000000000000
--- a/drivers/tty/synclink.c
+++ b/drivers/tty/synclink.c
@@@ -3046,15 -3045,12 +3046,19 @@@ static void mgsl_set_termios(struct tty
  	 	usc_set_serial_signals(info);
  		spin_unlock_irqrestore(&info->irq_spinlock,flags);
  	}
 -
 +	
  	/* Handle transition away from B0 status */
 -	if (!(old_termios->c_cflag & CBAUD) && C_BAUD(tty)) {
 +	if (!(old_termios->c_cflag & CBAUD) &&
 +	    tty->termios.c_cflag & CBAUD) {
  		info->serial_signals |= SerialSignal_DTR;
++<<<<<<< HEAD
 + 		if (!(tty->termios.c_cflag & CRTSCTS) || 
 + 		    !test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 		if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			info->serial_signals |= SerialSignal_RTS;
 + 		}
  		spin_lock_irqsave(&info->irq_spinlock,flags);
  	 	usc_set_serial_signals(info);
  		spin_unlock_irqrestore(&info->irq_spinlock,flags);
diff --cc drivers/tty/synclink_gt.c
index e591e78a286a,ceeaeb703f51..000000000000
--- a/drivers/tty/synclink_gt.c
+++ b/drivers/tty/synclink_gt.c
@@@ -783,13 -782,10 +783,17 @@@ static void set_termios(struct tty_stru
  	}
  
  	/* Handle transition away from B0 status */
 -	if (!(old_termios->c_cflag & CBAUD) && C_BAUD(tty)) {
 +	if (!(old_termios->c_cflag & CBAUD) &&
 +	    tty->termios.c_cflag & CBAUD) {
  		info->signals |= SerialSignal_DTR;
++<<<<<<< HEAD
 + 		if (!(tty->termios.c_cflag & CRTSCTS) ||
 + 		    !test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 		if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			info->signals |= SerialSignal_RTS;
 + 		}
  		spin_lock_irqsave(&info->lock,flags);
  	 	set_signals(info);
  		spin_unlock_irqrestore(&info->lock,flags);
diff --cc drivers/tty/synclinkmp.c
index f04909ba5f4d,b0cce4b24e51..000000000000
--- a/drivers/tty/synclinkmp.c
+++ b/drivers/tty/synclinkmp.c
@@@ -880,13 -879,10 +880,17 @@@ static void set_termios(struct tty_stru
  	}
  
  	/* Handle transition away from B0 status */
 -	if (!(old_termios->c_cflag & CBAUD) && C_BAUD(tty)) {
 +	if (!(old_termios->c_cflag & CBAUD) &&
 +	    tty->termios.c_cflag & CBAUD) {
  		info->serial_signals |= SerialSignal_DTR;
++<<<<<<< HEAD
 + 		if (!(tty->termios.c_cflag & CRTSCTS) ||
 + 		    !test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 		if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			info->serial_signals |= SerialSignal_RTS;
 + 		}
  		spin_lock_irqsave(&info->lock,flags);
  	 	set_signals(info);
  		spin_unlock_irqrestore(&info->lock,flags);
diff --cc drivers/tty/tty_ioctl.c
index 088b4ca7d805,bf36ac9aee41..000000000000
--- a/drivers/tty/tty_ioctl.c
+++ b/drivers/tty/tty_ioctl.c
@@@ -151,8 -157,8 +151,13 @@@ int tty_throttle_safe(struct tty_struc
  {
  	int ret = 0;
  
++<<<<<<< HEAD
 +	mutex_lock(&tty->termios_mutex);
 +	if (!test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 	mutex_lock(&tty->throttle_mutex);
+ 	if (!tty_throttled(tty)) {
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  		if (tty->flow_change != TTY_THROTTLE_SAFE)
  			ret = 1;
  		else {
@@@ -182,8 -188,8 +187,13 @@@ int tty_unthrottle_safe(struct tty_stru
  {
  	int ret = 0;
  
++<<<<<<< HEAD
 +	mutex_lock(&tty->termios_mutex);
 +	if (test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 	mutex_lock(&tty->throttle_mutex);
+ 	if (tty_throttled(tty)) {
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  		if (tty->flow_change != TTY_UNTHROTTLE_SAFE)
  			ret = 1;
  		else {
diff --cc drivers/usb/serial/digi_acceleport.c
index 3df7b7ec178e,6a1df9e824ca..000000000000
--- a/drivers/usb/serial/digi_acceleport.c
+++ b/drivers/usb/serial/digi_acceleport.c
@@@ -699,8 -699,7 +699,12 @@@ static void digi_set_termios(struct tty
  			/* don't set RTS if using hardware flow control */
  			/* and throttling input */
  			modem_signals = TIOCM_DTR;
++<<<<<<< HEAD
 +			if (!(tty->termios.c_cflag & CRTSCTS) ||
 +			    !test_bit(TTY_THROTTLED, &tty->flags))
++=======
+ 			if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  				modem_signals |= TIOCM_RTS;
  			digi_set_modem_signals(port, modem_signals, 1);
  		}
diff --cc include/linux/tty.h
index 89db31420368,89f9c91b40f5..000000000000
--- a/include/linux/tty.h
+++ b/include/linux/tty.h
@@@ -331,6 -360,16 +331,19 @@@ static inline void tty_set_flow_change(
  	smp_mb();
  }
  
++<<<<<<< HEAD
++=======
+ static inline bool tty_io_error(struct tty_struct *tty)
+ {
+ 	return test_bit(TTY_IO_ERROR, &tty->flags);
+ }
+ 
+ static inline bool tty_throttled(struct tty_struct *tty)
+ {
+ 	return test_bit(TTY_THROTTLED, &tty->flags);
+ }
+ 
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  #ifdef CONFIG_TTY
  extern void console_init(void);
  extern void tty_kref_put(struct tty_struct *tty);
diff --cc net/irda/ircomm/ircomm_tty_ioctl.c
index b343f50dc8d7,8d8fd28ff4d9..000000000000
--- a/net/irda/ircomm/ircomm_tty_ioctl.c
+++ b/net/irda/ircomm/ircomm_tty_ioctl.c
@@@ -170,13 -164,10 +170,17 @@@ void ircomm_tty_set_termios(struct tty_
  	}
  
  	/* Handle transition away from B0 status */
 -	if (!(old_termios->c_cflag & CBAUD) && (cflag & CBAUD)) {
 +	if (!(old_termios->c_cflag & CBAUD) &&
 +	    (cflag & CBAUD)) {
  		self->settings.dte |= IRCOMM_DTR;
++<<<<<<< HEAD
 +		if (!(tty->termios.c_cflag & CRTSCTS) ||
 +		    !test_bit(TTY_THROTTLED, &tty->flags)) {
++=======
+ 		if (!C_CRTSCTS(tty) || !tty_throttled(tty))
++>>>>>>> 97ef38b8210d (tty: Replace TTY_THROTTLED bit tests with tty_throttled())
  			self->settings.dte |= IRCOMM_RTS;
 +		}
  		ircomm_param_request(self, IRCOMM_DTE, TRUE);
  	}
  
* Unmerged path drivers/char/pcmcia/synclink_cs.c
diff --git a/drivers/mmc/card/sdio_uart.c b/drivers/mmc/card/sdio_uart.c
index d86f4002a178..0c13c53b9956 100644
--- a/drivers/mmc/card/sdio_uart.c
+++ b/drivers/mmc/card/sdio_uart.c
@@ -893,7 +893,7 @@ static void sdio_uart_set_termios(struct tty_struct *tty,
 	/* Handle transition away from B0 status */
 	if (!(old_termios->c_cflag & CBAUD) && (cflag & CBAUD)) {
 		unsigned int mask = TIOCM_DTR;
-		if (!(cflag & CRTSCTS) || !test_bit(TTY_THROTTLED, &tty->flags))
+		if (!(cflag & CRTSCTS) || !tty_throttled(tty))
 			mask |= TIOCM_RTS;
 		sdio_uart_set_mctrl(port, mask);
 	}
diff --git a/drivers/net/usb/hso.c b/drivers/net/usb/hso.c
index 36a648e4c858..63e2e8ab9428 100644
--- a/drivers/net/usb/hso.c
+++ b/drivers/net/usb/hso.c
@@ -2029,7 +2029,7 @@ static int put_rxbuf_data(struct urb *urb, struct hso_serial *serial)
 
 	tty = tty_port_tty_get(&serial->port);
 
-	if (tty && test_bit(TTY_THROTTLED, &tty->flags)) {
+	if (tty && tty_throttled(tty)) {
 		tty_kref_put(tty);
 		return -1;
 	}
* Unmerged path drivers/staging/fwserial/fwserial.c
* Unmerged path drivers/staging/speakup/selection.c
* Unmerged path drivers/tty/amiserial.c
diff --git a/drivers/tty/hvc/hvc_console.c b/drivers/tty/hvc/hvc_console.c
index 994a13d778aa..d1998ea53ca4 100644
--- a/drivers/tty/hvc/hvc_console.c
+++ b/drivers/tty/hvc/hvc_console.c
@@ -627,7 +627,7 @@ int hvc_poll(struct hvc_struct *hp)
 		goto bail;
 
 	/* Now check if we can get data (are we throttled ?) */
-	if (test_bit(TTY_THROTTLED, &tty->flags))
+	if (tty_throttled(tty))
 		goto throttled;
 
 	/* If we aren't notifier driven and aren't throttled, we always
diff --git a/drivers/tty/hvc/hvcs.c b/drivers/tty/hvc/hvcs.c
index 236302d55cdf..950f5744cf2d 100644
--- a/drivers/tty/hvc/hvcs.c
+++ b/drivers/tty/hvc/hvcs.c
@@ -600,7 +600,7 @@ static int hvcs_io(struct hvcs_struct *hvcsd)
 
 	hvcs_try_write(hvcsd);
 
-	if (!tty || test_bit(TTY_THROTTLED, &tty->flags)) {
+	if (!tty || tty_throttled(tty)) {
 		hvcsd->todo_mask &= ~(HVCS_READ_MASK);
 		goto bail;
 	} else if (!(hvcsd->todo_mask & (HVCS_READ_MASK)))
diff --git a/drivers/tty/hvc/hvsi.c b/drivers/tty/hvc/hvsi.c
index 41901997c0d6..1d1d922180b9 100644
--- a/drivers/tty/hvc/hvsi.c
+++ b/drivers/tty/hvc/hvsi.c
@@ -507,7 +507,7 @@ static irqreturn_t hvsi_interrupt(int irq, void *arg)
 	}
 
 	spin_lock_irqsave(&hp->lock, flags);
-	if (tty && hp->n_throttle && !test_bit(TTY_THROTTLED, &tty->flags)) {
+	if (tty && hp->n_throttle && !tty_throttled(tty)) {
 		/* we weren't hung up and we weren't throttled, so we can
 		 * deliver the rest now */
 		hvsi_send_overflow(hp);
diff --git a/drivers/tty/moxa.c b/drivers/tty/moxa.c
index 1deaca4674e4..5082aa1593c2 100644
--- a/drivers/tty/moxa.c
+++ b/drivers/tty/moxa.c
@@ -1395,7 +1395,7 @@ static int moxa_poll_port(struct moxa_port *p, unsigned int handle,
 			tty_wakeup(tty);
 		}
 
-		if (inited && !test_bit(TTY_THROTTLED, &tty->flags) &&
+		if (inited && !tty_throttled(tty) &&
 				MoxaPortRxQueue(p) > 0) { /* RX */
 			MoxaPortReadData(p);
 			tty_schedule_flip(&p->port);
diff --git a/drivers/tty/nozomi.c b/drivers/tty/nozomi.c
index d6080c3831ef..36fcdbc60be6 100644
--- a/drivers/tty/nozomi.c
+++ b/drivers/tty/nozomi.c
@@ -826,7 +826,7 @@ static int receive_data(enum port_type index, struct nozomi *dc)
 	read_mem32((u32 *) &size, addr, 4);
 	/*  DBG1( "%d bytes port: %d", size, index); */
 
-	if (tty && test_bit(TTY_THROTTLED, &tty->flags)) {
+	if (tty && tty_throttled(tty)) {
 		DBG1("No room in tty, don't read data, don't ack interrupt, "
 			"disable interrupt");
 
* Unmerged path drivers/tty/serial/serial_core.c
* Unmerged path drivers/tty/synclink.c
* Unmerged path drivers/tty/synclink_gt.c
* Unmerged path drivers/tty/synclinkmp.c
* Unmerged path drivers/tty/tty_ioctl.c
diff --git a/drivers/tty/vt/selection.c b/drivers/tty/vt/selection.c
index 60b7b6926059..d158346bb561 100644
--- a/drivers/tty/vt/selection.c
+++ b/drivers/tty/vt/selection.c
@@ -351,7 +351,7 @@ int paste_selection(struct tty_struct *tty)
 	add_wait_queue(&vc->paste_wait, &wait);
 	while (sel_buffer && sel_buffer_lth > pasted) {
 		set_current_state(TASK_INTERRUPTIBLE);
-		if (test_bit(TTY_THROTTLED, &tty->flags)) {
+		if (tty_throttled(tty)) {
 			schedule();
 			continue;
 		}
diff --git a/drivers/usb/gadget/u_serial.c b/drivers/usb/gadget/u_serial.c
index 7da7af1d4dbe..3e103a63165e 100644
--- a/drivers/usb/gadget/u_serial.c
+++ b/drivers/usb/gadget/u_serial.c
@@ -501,7 +501,7 @@ static void gs_rx_push(unsigned long _port)
 		req = list_first_entry(queue, struct usb_request, list);
 
 		/* leave data queued if tty was rx throttled */
-		if (tty && test_bit(TTY_THROTTLED, &tty->flags))
+		if (tty && tty_throttled(tty))
 			break;
 
 		switch (req->status) {
@@ -569,7 +569,7 @@ static void gs_rx_push(unsigned long _port)
 	 * from starving ... but it's not clear that case ever happens.
 	 */
 	if (!list_empty(queue) && tty) {
-		if (!test_bit(TTY_THROTTLED, &tty->flags)) {
+		if (!tty_throttled(tty)) {
 			if (do_push)
 				tasklet_schedule(&port->push);
 			else
* Unmerged path drivers/usb/serial/digi_acceleport.c
* Unmerged path include/linux/tty.h
* Unmerged path net/irda/ircomm/ircomm_tty_ioctl.c
