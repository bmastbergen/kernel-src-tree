s390: redefine randomize_et_dyn for ELF_ET_DYN_BASE

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [s390] redefine randomize_et_dyn for ELF_ET_DYN_BASE (Bhupesh Sharma) [1415893]
Rebuild_FUZZ: 93.75%
commit-author Kees Cook <keescook@chromium.org>
commit c6f5b001e65cdac592b65a08c5d2dd179cfba568
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c6f5b001.failed

In preparation for moving ET_DYN randomization into the ELF loader (which
requires a static ELF_ET_DYN_BASE), this redefines s390's existing ET_DYN
randomization in a call to arch_mmap_rnd(). This refactoring results in
the same ET_DYN randomization on s390.

	Signed-off-by: Kees Cook <keescook@chromium.org>
	Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
	Reviewed-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit c6f5b001e65cdac592b65a08c5d2dd179cfba568)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/mm/mmap.c
diff --cc arch/s390/mm/mmap.c
index 26158ac9a689,8c11536f972d..000000000000
--- a/arch/s390/mm/mmap.c
+++ b/arch/s390/mm/mmap.c
@@@ -181,13 -179,10 +181,20 @@@ arch_get_unmapped_area_topdown(struct f
  
  unsigned long randomize_et_dyn(void)
  {
++<<<<<<< HEAD
 +	unsigned long base;
 +
 +	base = STACK_TOP / 3 * 2;
 +	if (!is_32bit_task())
 +		/* Align to 4GB */
 +		base &= ~((1UL << 32) - 1);
 +	return base + mmap_rnd();
++=======
+ 	if (current->flags & PF_RANDOMIZE)
+ 		return arch_mmap_rnd();
+ 
+ 	return 0UL;
++>>>>>>> c6f5b001e65c (s390: redefine randomize_et_dyn for ELF_ET_DYN_BASE)
  }
  
  #ifndef CONFIG_64BIT
diff --git a/arch/s390/include/asm/elf.h b/arch/s390/include/asm/elf.h
index 0745df3fe60b..8b1c62ef793f 100644
--- a/arch/s390/include/asm/elf.h
+++ b/arch/s390/include/asm/elf.h
@@ -164,10 +164,12 @@ extern unsigned int vdso_enabled;
 /* This is the location that an ET_DYN program is loaded if exec'ed.  Typical
    use of this is to invoke "./ld.so someprog" to test out a new version of
    the loader.  We need to make sure that it is out of the way of the program
-   that it will "exec", and that there is sufficient room for the brk.  */
-
+   that it will "exec", and that there is sufficient room for the brk. 64-bit
+   tasks are aligned to 4GB. */
 extern unsigned long randomize_et_dyn(void);
-#define ELF_ET_DYN_BASE		randomize_et_dyn()
+#define ELF_ET_DYN_BASE (randomize_et_dyn() + (is_32bit_task() ? \
+				(STACK_TOP / 3 * 2) : \
+				(STACK_TOP / 3 * 2) & ~((1UL << 32) - 1)))
 
 /* This yields a mask that user programs can use to figure out what
    instruction set this CPU supports. */
* Unmerged path arch/s390/mm/mmap.c
