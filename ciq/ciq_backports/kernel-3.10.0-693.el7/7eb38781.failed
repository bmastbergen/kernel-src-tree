NTB: Print driver name and version in module init

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [ntb] Print driver name and version in module init (Suravee Suthikulpanit) [1303727]
Rebuild_FUZZ: 94.62%
commit-author Dave Jiang <dave.jiang@intel.com>
commit 7eb387813db6730a5793cd53077b4039d948d17f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7eb38781.failed

Printouts driver name and version to indicate what is being loaded.

	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
	Signed-off-by: Jon Mason <jdmason@kudzu.us>
(cherry picked from commit 7eb387813db6730a5793cd53077b4039d948d17f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/hw/intel/ntb_hw_intel.c
#	drivers/ntb/ntb_transport.c
diff --cc drivers/ntb/ntb_transport.c
index 3458260f41b6,efe3ad4122f2..000000000000
--- a/drivers/ntb/ntb_transport.c
+++ b/drivers/ntb/ntb_transport.c
@@@ -1783,3 -1921,71 +1783,74 @@@ unsigned int ntb_transport_max_size(str
  	return max;
  }
  EXPORT_SYMBOL_GPL(ntb_transport_max_size);
++<<<<<<< HEAD
++=======
+ 
+ static void ntb_transport_doorbell_callback(void *data, int vector)
+ {
+ 	struct ntb_transport_ctx *nt = data;
+ 	struct ntb_transport_qp *qp;
+ 	u64 db_bits;
+ 	unsigned int qp_num;
+ 
+ 	db_bits = (nt->qp_bitmap & ~nt->qp_bitmap_free &
+ 		   ntb_db_vector_mask(nt->ndev, vector));
+ 
+ 	while (db_bits) {
+ 		qp_num = __ffs(db_bits);
+ 		qp = &nt->qp_vec[qp_num];
+ 
+ 		tasklet_schedule(&qp->rxc_db_work);
+ 
+ 		db_bits &= ~BIT_ULL(qp_num);
+ 	}
+ }
+ 
+ static const struct ntb_ctx_ops ntb_transport_ops = {
+ 	.link_event = ntb_transport_event_callback,
+ 	.db_event = ntb_transport_doorbell_callback,
+ };
+ 
+ static struct ntb_client ntb_transport_client = {
+ 	.ops = {
+ 		.probe = ntb_transport_probe,
+ 		.remove = ntb_transport_free,
+ 	},
+ };
+ 
+ static int __init ntb_transport_init(void)
+ {
+ 	int rc;
+ 
+ 	pr_info("%s, version %s\n", NTB_TRANSPORT_DESC, NTB_TRANSPORT_VER);
+ 
+ 	if (debugfs_initialized())
+ 		nt_debugfs_dir = debugfs_create_dir(KBUILD_MODNAME, NULL);
+ 
+ 	rc = bus_register(&ntb_transport_bus);
+ 	if (rc)
+ 		goto err_bus;
+ 
+ 	rc = ntb_register_client(&ntb_transport_client);
+ 	if (rc)
+ 		goto err_client;
+ 
+ 	return 0;
+ 
+ err_client:
+ 	bus_unregister(&ntb_transport_bus);
+ err_bus:
+ 	debugfs_remove_recursive(nt_debugfs_dir);
+ 	return rc;
+ }
+ module_init(ntb_transport_init);
+ 
+ static void __exit ntb_transport_exit(void)
+ {
+ 	debugfs_remove_recursive(nt_debugfs_dir);
+ 
+ 	ntb_unregister_client(&ntb_transport_client);
+ 	bus_unregister(&ntb_transport_bus);
+ }
+ module_exit(ntb_transport_exit);
++>>>>>>> 7eb387813db6 (NTB: Print driver name and version in module init)
* Unmerged path drivers/ntb/hw/intel/ntb_hw_intel.c
* Unmerged path drivers/ntb/hw/intel/ntb_hw_intel.c
* Unmerged path drivers/ntb/ntb_transport.c
