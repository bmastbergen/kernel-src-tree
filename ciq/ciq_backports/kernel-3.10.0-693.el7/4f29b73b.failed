x86/mce/AMD: Extract the error address on SMCA systems

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] mce/amd: Extract the error address on SMCA systems (David Arcari) [1389383]
Rebuild_FUZZ: 96.15%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 4f29b73bae158e3635b8f289f77376b054904ef5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4f29b73b.failed

The MCA_ADDR registers on Scalable MCA systems contain the ErrorAddr
in bits [55:0] and the least significant bit of the address in bits
[61:56]. We should extract the valid ErrorAddr bits from the MCA_ADDR
register rather than saving the raw value to struct mce.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: http://lkml.kernel.org/r/1473275643-1721-1-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

(cherry picked from commit 4f29b73bae158e3635b8f289f77376b054904ef5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mcheck/mce_amd.c
diff --cc arch/x86/kernel/cpu/mcheck/mce_amd.c
index 95ca733e89ae,9b5403462936..000000000000
--- a/arch/x86/kernel/cpu/mcheck/mce_amd.c
+++ b/arch/x86/kernel/cpu/mcheck/mce_amd.c
@@@ -412,11 -561,30 +412,34 @@@ static void __log_error(unsigned int ba
  	if (threshold_err)
  		m.misc = misc;
  
++<<<<<<< HEAD
 +	if (m.status & MCI_STATUS_ADDRV)
 +		rdmsrl(MSR_IA32_MCx_ADDR(bank), m.addr);
++=======
+ 	if (m.status & MCI_STATUS_ADDRV) {
+ 		rdmsrl(msr_addr, m.addr);
+ 
+ 		/*
+ 		 * Extract [55:<lsb>] where lsb is the least significant
+ 		 * *valid* bit of the address bits.
+ 		 */
+ 		if (mce_flags.smca) {
+ 			u8 lsb = (m.addr >> 56) & 0x3f;
+ 
+ 			m.addr &= GENMASK_ULL(55, lsb);
+ 		}
+ 	}
+ 
+ 	if (mce_flags.smca) {
+ 		rdmsrl(MSR_AMD64_SMCA_MCx_IPID(bank), m.ipid);
+ 
+ 		if (m.status & MCI_STATUS_SYNDV)
+ 			rdmsrl(MSR_AMD64_SMCA_MCx_SYND(bank), m.synd);
+ 	}
++>>>>>>> 4f29b73bae15 (x86/mce/AMD: Extract the error address on SMCA systems)
  
  	mce_log(&m);
 -
 -	wrmsrl(msr_status, 0);
 +	wrmsrl(MSR_IA32_MCx_STATUS(bank), 0);
  }
  
  static inline void __smp_deferred_error_interrupt(void)
diff --git a/arch/x86/kernel/cpu/mcheck/mce.c b/arch/x86/kernel/cpu/mcheck/mce.c
index 1bfa973429e1..972e9fad3656 100644
--- a/arch/x86/kernel/cpu/mcheck/mce.c
+++ b/arch/x86/kernel/cpu/mcheck/mce.c
@@ -533,6 +533,16 @@ static void mce_read_aux(struct mce *m, int i)
 			m->addr >>= shift;
 			m->addr <<= shift;
 		}
+
+		/*
+		 * Extract [55:<lsb>] where lsb is the least significant
+		 * *valid* bit of the address bits.
+		 */
+		if (mce_flags.smca) {
+			u8 lsb = (m->addr >> 56) & 0x3f;
+
+			m->addr &= GENMASK_ULL(55, lsb);
+		}
 	}
 }
 
* Unmerged path arch/x86/kernel/cpu/mcheck/mce_amd.c
