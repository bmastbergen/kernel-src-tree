NFSv4.1: Close callback races for OPEN, LAYOUTGET and LAYOUTRETURN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 2e80dbe7ac51a911e8a828407b1a48c5ba938cd2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2e80dbe7.failed

Defer freeing the slot until after we have processed the results from
OPEN and LAYOUTGET. This means that the server can rely on the
mechanism in RFC5661 Section 2.10.6.3 to ensure that replies to an
OPEN or LAYOUTGET/RETURN RPC call don't race with the callbacks that
apply to them.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 2e80dbe7ac51a911e8a828407b1a48c5ba938cd2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/nfs4proc.c
index ce337e513a1e,f5aecaabcb7c..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -8023,6 -7918,16 +8072,19 @@@ nfs4_layoutget_prepare(struct rpc_task 
  static void nfs4_layoutget_done(struct rpc_task *task, void *calldata)
  {
  	struct nfs4_layoutget *lgp = calldata;
++<<<<<<< HEAD
++=======
+ 
+ 	dprintk("--> %s\n", __func__);
+ 	nfs41_sequence_process(task, &lgp->res.seq_res);
+ 	dprintk("<-- %s\n", __func__);
+ }
+ 
+ static int
+ nfs4_layoutget_handle_exception(struct rpc_task *task,
+ 		struct nfs4_layoutget *lgp, struct nfs4_exception *exception)
+ {
++>>>>>>> 2e80dbe7ac51 (NFSv4.1: Close callback races for OPEN, LAYOUTGET and LAYOUTRETURN)
  	struct inode *inode = lgp->args.inode;
  	struct nfs_server *server = NFS_SERVER(inode);
  	struct pnfs_layout_hdr *lo;
* Unmerged path fs/nfs/nfs4proc.c
