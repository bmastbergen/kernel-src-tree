drm/i915/gvt: replace the gvt_err with gvt_vgpu_err

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] i915/gvt: replace the gvt_err with gvt_vgpu_err (Rob Clark) [1380115]
Rebuild_FUZZ: 95.92%
commit-author Tina Zhang <tina.zhang@intel.com>
commit 695fbc08d80f93ecca18a1abd8f52c2ab77fdc8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/695fbc08.failed

gvt_err should be used only for the very few critical error message
during host i915 drvier initialization. This patch
1. removes the redundant gvt_err;
2. creates a new gvt_vgpu_err to show errors caused by vgpu;
3. replaces the most gvt_err with gvt_vgpu_err;
4. leaves very few gvt_err for dumping gvt error during host gvt
   initialization.

v2. change name to gvt_vgpu_err and add vgpu id to the message. (Kevin)
    add gpu id to gvt_vgpu_err. (Zhi)
v3. remove gpu id from gvt_vgpu_err caller. (Zhi)
v4. add vgpu check to the gvt_vgpu_err macro. (Zhiyuan)
v5. add comments for v3 and v4.
v6. split the big patch into two, with this patch only for checking
    gvt_vgpu_err. (Zhenyu)
v7. rebase to staging branch
v8. rebase to fix branch

	Signed-off-by: Tina Zhang <tina.zhang@intel.com>
	Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
(cherry picked from commit 695fbc08d80f93ecca18a1abd8f52c2ab77fdc8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gvt/aperture_gm.c
#	drivers/gpu/drm/i915/gvt/cmd_parser.c
#	drivers/gpu/drm/i915/gvt/edid.c
#	drivers/gpu/drm/i915/gvt/execlist.c
#	drivers/gpu/drm/i915/gvt/gtt.c
#	drivers/gpu/drm/i915/gvt/handlers.c
#	drivers/gpu/drm/i915/gvt/kvmgt.c
#	drivers/gpu/drm/i915/gvt/mmio.c
#	drivers/gpu/drm/i915/gvt/opregion.c
#	drivers/gpu/drm/i915/gvt/render.c
#	drivers/gpu/drm/i915/gvt/scheduler.c
#	include/drm/drm_dp_aux_dev.h
diff --cc include/drm/drm_dp_aux_dev.h
index 1b76d990d8ab,b0cff4dc2684..000000000000
--- a/include/drm/drm_dp_aux_dev.h
+++ b/include/drm/drm_dp_aux_dev.h
@@@ -16,47 -16,50 +16,60 @@@
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
   * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 - * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 - * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 - * SOFTWARE.
 + * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 + * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 + * IN THE SOFTWARE.
 + *
 + * Authors:
 + *    Rafael Antognolli <rafael.antognolli@intel.com>
 + *
   */
  
 -#ifndef __GVT_DEBUG_H__
 -#define __GVT_DEBUG_H__
 +#ifndef DRM_DP_AUX_DEV
 +#define DRM_DP_AUX_DEV
  
 -#define gvt_err(fmt, args...) \
 -	DRM_ERROR("gvt: "fmt, ##args)
 +#include <drm/drm_dp_helper.h>
  
++<<<<<<< HEAD:include/drm/drm_dp_aux_dev.h
 +#ifdef CONFIG_DRM_DP_AUX_CHARDEV
++=======
+ #define gvt_vgpu_err(fmt, args...)					\
+ do {									\
+ 	if (IS_ERR_OR_NULL(vgpu))					\
+ 		DRM_DEBUG_DRIVER("gvt: "fmt, ##args);			\
+ 	else								\
+ 		DRM_DEBUG_DRIVER("gvt: vgpu %d: "fmt, vgpu->id, ##args);\
+ } while (0)
+ 
+ #define gvt_dbg_core(fmt, args...) \
+ 	DRM_DEBUG_DRIVER("gvt: core: "fmt, ##args)
++>>>>>>> 695fbc08d80f (drm/i915/gvt: replace the gvt_err with gvt_vgpu_err):drivers/gpu/drm/i915/gvt/debug.h
  
 -#define gvt_dbg_irq(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: irq: "fmt, ##args)
 +int drm_dp_aux_dev_init(void);
 +void drm_dp_aux_dev_exit(void);
 +int drm_dp_aux_register_devnode(struct drm_dp_aux *aux);
 +void drm_dp_aux_unregister_devnode(struct drm_dp_aux *aux);
  
 -#define gvt_dbg_mm(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: mm: "fmt, ##args)
 +#else
  
 -#define gvt_dbg_mmio(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: mmio: "fmt, ##args)
 +static inline int drm_dp_aux_dev_init(void)
 +{
 +	return 0;
 +}
  
 -#define gvt_dbg_dpy(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: dpy: "fmt, ##args)
 +static inline void drm_dp_aux_dev_exit(void)
 +{
 +}
  
 -#define gvt_dbg_el(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: el: "fmt, ##args)
 +static inline int drm_dp_aux_register_devnode(struct drm_dp_aux *aux)
 +{
 +	return 0;
 +}
  
 -#define gvt_dbg_sched(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: sched: "fmt, ##args)
 +static inline void drm_dp_aux_unregister_devnode(struct drm_dp_aux *aux)
 +{
 +}
  
 -#define gvt_dbg_render(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: render: "fmt, ##args)
 -
 -#define gvt_dbg_cmd(fmt, args...) \
 -	DRM_DEBUG_DRIVER("gvt: cmd: "fmt, ##args)
 +#endif
  
  #endif
* Unmerged path drivers/gpu/drm/i915/gvt/aperture_gm.c
* Unmerged path drivers/gpu/drm/i915/gvt/cmd_parser.c
* Unmerged path drivers/gpu/drm/i915/gvt/edid.c
* Unmerged path drivers/gpu/drm/i915/gvt/execlist.c
* Unmerged path drivers/gpu/drm/i915/gvt/gtt.c
* Unmerged path drivers/gpu/drm/i915/gvt/handlers.c
* Unmerged path drivers/gpu/drm/i915/gvt/kvmgt.c
* Unmerged path drivers/gpu/drm/i915/gvt/mmio.c
* Unmerged path drivers/gpu/drm/i915/gvt/opregion.c
* Unmerged path drivers/gpu/drm/i915/gvt/render.c
* Unmerged path drivers/gpu/drm/i915/gvt/scheduler.c
* Unmerged path drivers/gpu/drm/i915/gvt/aperture_gm.c
* Unmerged path drivers/gpu/drm/i915/gvt/cmd_parser.c
* Unmerged path drivers/gpu/drm/i915/gvt/edid.c
* Unmerged path drivers/gpu/drm/i915/gvt/execlist.c
* Unmerged path drivers/gpu/drm/i915/gvt/gtt.c
* Unmerged path drivers/gpu/drm/i915/gvt/handlers.c
* Unmerged path drivers/gpu/drm/i915/gvt/kvmgt.c
* Unmerged path drivers/gpu/drm/i915/gvt/mmio.c
* Unmerged path drivers/gpu/drm/i915/gvt/opregion.c
* Unmerged path drivers/gpu/drm/i915/gvt/render.c
* Unmerged path drivers/gpu/drm/i915/gvt/scheduler.c
* Unmerged path include/drm/drm_dp_aux_dev.h
