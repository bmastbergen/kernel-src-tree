net: skb_segment() should preserve backpressure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] skb_segment() should preserve backpressure (Ivan Vecera) [1382040]
Rebuild_FUZZ: 94.38%
commit-author Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
commit 432c856fcf45c468fffe2e5029cb3f95c7dc9475
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/432c856f.failed

This patch generalizes commit d6a4a1041176 ("tcp: GSO should be TSQ
friendly") to protocols using skb_set_owner_w()

TCP uses its own destructor (tcp_wfree) and needs a more complex scheme
as explained in commit 6ff50cd55545 ("tcp: gso: do not generate out of
order packets")

This allows UDP sockets using UFO to get proper backpressure,
thus avoiding qdisc drops and excessive cpu usage.

Here are performance test results (macvlan on vlan):

- Before
# netperf -t UDP_STREAM ...
Socket  Message  Elapsed      Messages
Size    Size     Time         Okay Errors   Throughput
bytes   bytes    secs            #      #   10^6bits/sec

212992   65507   60.00      144096 1224195    1258.56
212992           60.00          51              0.45

Average:        CPU     %user     %nice   %system   %iowait    %steal     %idle
Average:        all      0.23      0.00     25.26      0.08      0.00     74.43

- After
# netperf -t UDP_STREAM ...
Socket  Message  Elapsed      Messages
Size    Size     Time         Okay Errors   Throughput
bytes   bytes    secs            #      #   10^6bits/sec

212992   65507   60.00      109593      0     957.20
212992           60.00      109593            957.20

Average:        CPU     %user     %nice   %system   %iowait    %steal     %idle
Average:        all      0.18      0.00      8.38      0.02      0.00     91.43

[edumazet] Rewrote patch and changelog.

	Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 432c856fcf45c468fffe2e5029cb3f95c7dc9475)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/skbuff.c
diff --cc net/core/skbuff.c
index c7043c783fdb,e48e5c02e877..000000000000
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@@ -3299,6 -3094,21 +3299,24 @@@ perform_csum_check
  		}
  	} while ((offset += len) < head_skb->len);
  
++<<<<<<< HEAD
++=======
+ 	/* Some callers want to get the end of the list.
+ 	 * Put it in segs->prev to avoid walking the list.
+ 	 * (see validate_xmit_skb_list() for example)
+ 	 */
+ 	segs->prev = tail;
+ 
+ 	/* Following permits correct backpressure, for protocols
+ 	 * using skb_set_owner_w().
+ 	 * Idea is to tranfert ownership from head_skb to last segment.
+ 	 */
+ 	if (head_skb->destructor == sock_wfree) {
+ 		swap(tail->truesize, head_skb->truesize);
+ 		swap(tail->destructor, head_skb->destructor);
+ 		swap(tail->sk, head_skb->sk);
+ 	}
++>>>>>>> 432c856fcf45 (net: skb_segment() should preserve backpressure)
  	return segs;
  
  err:
* Unmerged path net/core/skbuff.c
