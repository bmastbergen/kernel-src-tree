net: rtnl: avoid uninitialized data in IFLA_VF_VLAN_LIST handling

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] rtnl: avoid uninitialized data in IFLA_VF_VLAN_LIST handling (Ivan Vecera) [1382040]
Rebuild_FUZZ: 96.00%
commit-author Arnd Bergmann <arnd@arndb.de>
commit fa34cd94fb01fcb8d79d91e009451b37692e94e5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/fa34cd94.failed

With the newly added support for IFLA_VF_VLAN_LIST netlink messages,
we get a warning about potential uninitialized variable use in
the parsing of the user input when enabling the -Wmaybe-uninitialized
warning:

net/core/rtnetlink.c: In function 'do_setvfinfo':
net/core/rtnetlink.c:1756:9: error: 'ivvl$' may be used uninitialized in this function [-Werror=maybe-uninitialized]

I have not been able to prove whether it is possible to arrive in
this code with an empty IFLA_VF_VLAN_LIST block, but if we do,
then ndo_set_vf_vlan gets called with uninitialized arguments.

This adds an explicit check for an empty list, making it obvious
to the reader and the compiler that this cannot happen.

Fixes: 79aab093a0b5 ("net: Update API for VF vlan protocol 802.1ad support")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Reviewed-by: Moshe Shemesh <moshe@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fa34cd94fb01fcb8d79d91e009451b37692e94e5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index 8209decfe5a9,b06d2f46b83e..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -1514,7 -1727,37 +1514,41 @@@ static int do_setvfinfo(struct net_devi
  		err = -EOPNOTSUPP;
  		if (ops->ndo_set_vf_vlan)
  			err = ops->ndo_set_vf_vlan(dev, ivv->vf, ivv->vlan,
++<<<<<<< HEAD
 +						   ivv->qos);
++=======
+ 						   ivv->qos,
+ 						   htons(ETH_P_8021Q));
+ 		if (err < 0)
+ 			return err;
+ 	}
+ 
+ 	if (tb[IFLA_VF_VLAN_LIST]) {
+ 		struct ifla_vf_vlan_info *ivvl[MAX_VLAN_LIST_LEN];
+ 		struct nlattr *attr;
+ 		int rem, len = 0;
+ 
+ 		err = -EOPNOTSUPP;
+ 		if (!ops->ndo_set_vf_vlan)
+ 			return err;
+ 
+ 		nla_for_each_nested(attr, tb[IFLA_VF_VLAN_LIST], rem) {
+ 			if (nla_type(attr) != IFLA_VF_VLAN_INFO ||
+ 			    nla_len(attr) < NLA_HDRLEN) {
+ 				return -EINVAL;
+ 			}
+ 			if (len >= MAX_VLAN_LIST_LEN)
+ 				return -EOPNOTSUPP;
+ 			ivvl[len] = nla_data(attr);
+ 
+ 			len++;
+ 		}
+ 		if (len == 0)
+ 			return -EINVAL;
+ 
+ 		err = ops->ndo_set_vf_vlan(dev, ivvl[0]->vf, ivvl[0]->vlan,
+ 					   ivvl[0]->qos, ivvl[0]->vlan_proto);
++>>>>>>> fa34cd94fb01 (net: rtnl: avoid uninitialized data in IFLA_VF_VLAN_LIST handling)
  		if (err < 0)
  			return err;
  	}
* Unmerged path net/core/rtnetlink.c
