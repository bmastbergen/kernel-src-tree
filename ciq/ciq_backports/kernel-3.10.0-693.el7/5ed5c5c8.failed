KVM: x86: MMU: Simplify force_pt_level calculation code in FNAME(page_fault)()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>
commit 5ed5c5c8fdbab889837c9223fc6f4bdaa830879c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5ed5c5c8.failed

As a bonus, an extra memory slot search can be eliminated when
is_self_change_mapping is true.

	Signed-off-by: Takuya Yoshikawa <yoshikawa_takuya_b1@lab.ntt.co.jp>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 5ed5c5c8fdbab889837c9223fc6f4bdaa830879c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/paging_tmpl.h
diff --cc arch/x86/kvm/paging_tmpl.h
index 18c2dec509fd,8ebc3a5560ce..000000000000
--- a/arch/x86/kvm/paging_tmpl.h
+++ b/arch/x86/kvm/paging_tmpl.h
@@@ -745,15 -743,14 +745,26 @@@ static int FNAME(page_fault)(struct kvm
  	is_self_change_mapping = FNAME(is_self_change_mapping)(vcpu,
  	      &walker, user_fault, &vcpu->arch.write_fault_to_shadow_pgtable);
  
++<<<<<<< HEAD
 +	if (walker.level >= PT_DIRECTORY_LEVEL)
 +		force_pt_level = mapping_level_dirty_bitmap(vcpu, walker.gfn)
 +		   || is_self_change_mapping;
 +	else
 +		force_pt_level = 1;
 +	if (!force_pt_level) {
 +		level = min(walker.level, mapping_level(vcpu, walker.gfn));
 +		walker.gfn = walker.gfn & ~(KVM_PAGES_PER_HPAGE(level) - 1);
 +	}
++=======
+ 	if (walker.level >= PT_DIRECTORY_LEVEL && !is_self_change_mapping) {
+ 		force_pt_level = mapping_level_dirty_bitmap(vcpu, walker.gfn);
+ 		if (!force_pt_level) {
+ 			level = min(walker.level, mapping_level(vcpu, walker.gfn));
+ 			walker.gfn = walker.gfn & ~(KVM_PAGES_PER_HPAGE(level) - 1);
+ 		}
+ 	} else
+ 		force_pt_level = true;
++>>>>>>> 5ed5c5c8fdba (KVM: x86: MMU: Simplify force_pt_level calculation code in FNAME(page_fault)())
  
  	mmu_seq = vcpu->kvm->mmu_notifier_seq;
  	smp_rmb();
* Unmerged path arch/x86/kvm/paging_tmpl.h
