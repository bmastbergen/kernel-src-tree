btrfs: cleanup, remove stray return statements

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author David Sterba <dsterba@suse.com>
commit 7928d672ffb06085d06fe3c27a93549d37e53ab3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7928d672.failed

	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit 7928d672ffb06085d06fe3c27a93549d37e53ab3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/raid56.c
diff --cc fs/btrfs/raid56.c
index addd0df53624,6d707545f775..000000000000
--- a/fs/btrfs/raid56.c
+++ b/fs/btrfs/raid56.c
@@@ -905,8 -904,7 +904,12 @@@ static void raid_write_end_io(struct bi
  	if (atomic_read(&rbio->error) > rbio->bbio->max_errors)
  		err = -EIO;
  
++<<<<<<< HEAD
 +	rbio_orig_end_io(rbio, err, 0);
 +	return;
++=======
+ 	rbio_orig_end_io(rbio, err);
++>>>>>>> 7928d672ffb0 (btrfs: cleanup, remove stray return statements)
  }
  
  /*
diff --git a/fs/btrfs/disk-io.c b/fs/btrfs/disk-io.c
index bd7a1d01f11d..b6c140d0f7ad 100644
--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@ -3991,7 +3991,6 @@ static void __btrfs_btree_balance_dirty(struct btrfs_root *root,
 		balance_dirty_pages_ratelimited(
 				   root->fs_info->btree_inode->i_mapping);
 	}
-	return;
 }
 
 void btrfs_btree_balance_dirty(struct btrfs_root *root)
diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 3baed0909ae3..924e7df5823e 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -5298,7 +5298,6 @@ void btrfs_evict_inode(struct inode *inode)
 no_delete:
 	btrfs_remove_delayed_node(inode);
 	clear_inode(inode);
-	return;
 }
 
 /*
diff --git a/fs/btrfs/locking.c b/fs/btrfs/locking.c
index 8077461fc56a..d13128c70ddd 100644
--- a/fs/btrfs/locking.c
+++ b/fs/btrfs/locking.c
@@ -56,7 +56,6 @@ void btrfs_set_lock_blocking_rw(struct extent_buffer *eb, int rw)
 		atomic_dec(&eb->spinning_readers);
 		read_unlock(&eb->lock);
 	}
-	return;
 }
 
 /*
@@ -96,7 +95,6 @@ void btrfs_clear_lock_blocking_rw(struct extent_buffer *eb, int rw)
 		    waitqueue_active(&eb->read_lock_wq))
 			wake_up(&eb->read_lock_wq);
 	}
-	return;
 }
 
 /*
* Unmerged path fs/btrfs/raid56.c
diff --git a/fs/btrfs/scrub.c b/fs/btrfs/scrub.c
index 9252f85564b2..c915c9f07913 100644
--- a/fs/btrfs/scrub.c
+++ b/fs/btrfs/scrub.c
@@ -1527,8 +1527,6 @@ static void scrub_recheck_block(struct btrfs_fs_info *fs_info,
 
 	if (sblock->no_io_error_seen)
 		scrub_recheck_block_checksum(sblock);
-
-	return;
 }
 
 static inline int scrub_check_fsid(u8 fsid[],
diff --git a/fs/btrfs/volumes.c b/fs/btrfs/volumes.c
index 46f3171e7834..48c430308819 100644
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@ -1644,7 +1644,6 @@ static void update_dev_time(char *path_name)
 		return;
 	file_update_time(filp);
 	filp_close(filp, NULL);
-	return;
 }
 
 static int btrfs_rm_dev_item(struct btrfs_root *root,
