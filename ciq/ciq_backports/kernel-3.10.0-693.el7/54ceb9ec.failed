amd-xgbe: IRQ names require allocated memory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lendacky, Thomas <Thomas.Lendacky@amd.com>
commit 54ceb9ec6fe8e64067b164e6b161dd63905c059f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/54ceb9ec.failed

When requesting an irq, the name passed in must be (part of) allocated
memory. The irq name was a local variable and resulted in random
characters when listing /proc/interrupts. Add a character field to the
xgbe_channel structure to hold the irq name and use that.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 54ceb9ec6fe8e64067b164e6b161dd63905c059f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-drv.c
#	drivers/net/ethernet/amd/xgbe/xgbe.h
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index f42678309ce8,bedfdb1c430d..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@@ -756,6 -1284,8 +756,11 @@@ static int xgbe_open(struct net_device 
  	struct xgbe_prv_data *pdata = netdev_priv(netdev);
  	struct xgbe_hw_if *hw_if = &pdata->hw_if;
  	struct xgbe_desc_if *desc_if = &pdata->desc_if;
++<<<<<<< HEAD
++=======
+ 	struct xgbe_channel *channel = NULL;
+ 	unsigned int i = 0;
++>>>>>>> 54ceb9ec6fe8 (amd-xgbe: IRQ names require allocated memory)
  	int ret;
  
  	DBGPR("-->xgbe_open\n");
@@@ -786,10 -1333,29 +791,35 @@@
  			       netdev->name, pdata);
  	if (ret) {
  		netdev_alert(netdev, "error requesting irq %d\n",
++<<<<<<< HEAD
 +			     pdata->irq_number);
 +		goto err_irq;
++=======
+ 			     pdata->dev_irq);
+ 		goto err_rings;
+ 	}
+ 
+ 	if (pdata->per_channel_irq) {
+ 		channel = pdata->channel;
+ 		for (i = 0; i < pdata->channel_count; i++, channel++) {
+ 			snprintf(channel->dma_irq_name,
+ 				 sizeof(channel->dma_irq_name) - 1,
+ 				 "%s-TxRx-%u", netdev_name(netdev),
+ 				 channel->queue_index);
+ 
+ 			ret = devm_request_irq(pdata->dev, channel->dma_irq,
+ 					       xgbe_dma_isr, 0,
+ 					       channel->dma_irq_name, channel);
+ 			if (ret) {
+ 				netdev_alert(netdev,
+ 					     "error requesting irq %d\n",
+ 					     channel->dma_irq);
+ 				goto err_irq;
+ 			}
+ 		}
++>>>>>>> 54ceb9ec6fe8 (amd-xgbe: IRQ names require allocated memory)
  	}
 +	pdata->irq_number = netdev->irq;
  
  	ret = xgbe_start(pdata);
  	if (ret)
diff --cc drivers/net/ethernet/amd/xgbe/xgbe.h
index 1d8899bca25d,f9ec762ac3f0..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe.h
+++ b/drivers/net/ethernet/amd/xgbe/xgbe.h
@@@ -298,6 -398,13 +298,16 @@@ struct xgbe_channel 
  	unsigned int queue_index;
  	void __iomem *dma_regs;
  
++<<<<<<< HEAD
++=======
+ 	/* Per channel interrupt irq number */
+ 	int dma_irq;
+ 	char dma_irq_name[IFNAMSIZ + 32];
+ 
+ 	/* Netdev related settings */
+ 	struct napi_struct napi;
+ 
++>>>>>>> 54ceb9ec6fe8 (amd-xgbe: IRQ names require allocated memory)
  	unsigned int saved_ier;
  
  	unsigned int tx_timer_active;
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-drv.c
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe.h
