xfs: add missing break in xfs_parseargs()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eryu Guan <guaneryu@gmail.com>
commit ce5c767db079649db88a9f189798839f9c544981
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ce5c767d.failed

Commit 2e74af0e1189 ("xfs: convert mount option parsing to tokens")
missed a 'break;' in xfs_parseargs() which causes mount to fail with
"-o pqnoenforce" option when mounting a v4 filesystem. xfs/050
catches this failure:

XFS (vda6): Super block does not support project and group quota together

Fixes: 2e74af0e1189 ("xfs: convert mount option parsing to tokens")
	Signed-off-by: Eryu Guan <guaneryu@gmail.com>
	Reviewed-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Eric Sandeen <sandeen@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>

(cherry picked from commit ce5c767db079649db88a9f189798839f9c544981)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_super.c
diff --cc fs/xfs/xfs_super.c
index addf8e0edd3b,a9ea12d46b74..000000000000
--- a/fs/xfs/xfs_super.c
+++ b/fs/xfs/xfs_super.c
@@@ -333,57 -330,49 +333,63 @@@ xfs_parseargs
  			mp->m_qflags &= ~XFS_ALL_QUOTA_ACCT;
  			mp->m_qflags &= ~XFS_ALL_QUOTA_ENFD;
  			mp->m_qflags &= ~XFS_ALL_QUOTA_ACTIVE;
 -			break;
 -		case Opt_quota:
 -		case Opt_uquota:
 -		case Opt_usrquota:
 +		} else if (!strcmp(this_char, MNTOPT_QUOTA) ||
 +			   !strcmp(this_char, MNTOPT_UQUOTA) ||
 +			   !strcmp(this_char, MNTOPT_USRQUOTA)) {
  			mp->m_qflags |= (XFS_UQUOTA_ACCT | XFS_UQUOTA_ACTIVE |
  					 XFS_UQUOTA_ENFD);
 -			break;
 -		case Opt_qnoenforce:
 -		case Opt_uqnoenforce:
 +		} else if (!strcmp(this_char, MNTOPT_QUOTANOENF) ||
 +			   !strcmp(this_char, MNTOPT_UQUOTANOENF)) {
  			mp->m_qflags |= (XFS_UQUOTA_ACCT | XFS_UQUOTA_ACTIVE);
  			mp->m_qflags &= ~XFS_UQUOTA_ENFD;
 -			break;
 -		case Opt_pquota:
 -		case Opt_prjquota:
 +		} else if (!strcmp(this_char, MNTOPT_PQUOTA) ||
 +			   !strcmp(this_char, MNTOPT_PRJQUOTA)) {
  			mp->m_qflags |= (XFS_PQUOTA_ACCT | XFS_PQUOTA_ACTIVE |
  					 XFS_PQUOTA_ENFD);
 -			break;
 -		case Opt_pqnoenforce:
 +		} else if (!strcmp(this_char, MNTOPT_PQUOTANOENF)) {
  			mp->m_qflags |= (XFS_PQUOTA_ACCT | XFS_PQUOTA_ACTIVE);
  			mp->m_qflags &= ~XFS_PQUOTA_ENFD;
++<<<<<<< HEAD
 +		} else if (!strcmp(this_char, MNTOPT_GQUOTA) ||
 +			   !strcmp(this_char, MNTOPT_GRPQUOTA)) {
++=======
+ 			break;
+ 		case Opt_gquota:
+ 		case Opt_grpquota:
++>>>>>>> ce5c767db079 (xfs: add missing break in xfs_parseargs())
  			mp->m_qflags |= (XFS_GQUOTA_ACCT | XFS_GQUOTA_ACTIVE |
  					 XFS_GQUOTA_ENFD);
 -			break;
 -		case Opt_gqnoenforce:
 +		} else if (!strcmp(this_char, MNTOPT_GQUOTANOENF)) {
  			mp->m_qflags |= (XFS_GQUOTA_ACCT | XFS_GQUOTA_ACTIVE);
  			mp->m_qflags &= ~XFS_GQUOTA_ENFD;
 -			break;
 -		case Opt_discard:
 +		} else if (!strcmp(this_char, MNTOPT_DELAYLOG)) {
 +			xfs_warn(mp,
 +	"delaylog is the default now, option is deprecated.");
 +		} else if (!strcmp(this_char, MNTOPT_NODELAYLOG)) {
 +			xfs_warn(mp,
 +	"nodelaylog support has been removed, option is deprecated.");
 +		} else if (!strcmp(this_char, MNTOPT_DISCARD)) {
  			mp->m_flags |= XFS_MOUNT_DISCARD;
 -			break;
 -		case Opt_nodiscard:
 +		} else if (!strcmp(this_char, MNTOPT_NODISCARD)) {
  			mp->m_flags &= ~XFS_MOUNT_DISCARD;
 -			break;
  #ifdef CONFIG_FS_DAX
 -		case Opt_dax:
 +		} else if (!strcmp(this_char, MNTOPT_DAX)) {
  			mp->m_flags |= XFS_MOUNT_DAX;
 -			break;
  #endif
 -		default:
 -			xfs_warn(mp, "unknown mount option [%s].", p);
 +		} else if (!strcmp(this_char, "ihashsize")) {
 +			xfs_warn(mp,
 +	"ihashsize no longer used, option is deprecated.");
 +		} else if (!strcmp(this_char, "osyncisdsync")) {
 +			xfs_warn(mp,
 +	"osyncisdsync has no effect, option is deprecated.");
 +		} else if (!strcmp(this_char, "osyncisosync")) {
 +			xfs_warn(mp,
 +	"osyncisosync has no effect, option is deprecated.");
 +		} else if (!strcmp(this_char, "irixsgid")) {
 +			xfs_warn(mp,
 +	"irixsgid is now a sysctl(2) variable, option is deprecated.");
 +		} else {
 +			xfs_warn(mp, "unknown mount option [%s].", this_char);
  			return -EINVAL;
  		}
  	}
* Unmerged path fs/xfs/xfs_super.c
