bridge: simplify the stp_state_store by calling store_bridge_parm

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit 4436156b6fbec746108d45431a9f1885de810ec1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4436156b.failed

There are some repetitive codes in stp_state_store, we can remove
them by calling store_bridge_parm.

	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Reviewed-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4436156b6fbec746108d45431a9f1885de810ec1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_sysfs_br.c
diff --cc net/bridge/br_sysfs_br.c
index 1051708c10d4,f9d484ecae07..000000000000
--- a/net/bridge/br_sysfs_br.c
+++ b/net/bridge/br_sysfs_br.c
@@@ -125,33 -128,27 +125,33 @@@ static ssize_t show_stp_state(struct de
  }
  
  
++<<<<<<< HEAD
 +static ssize_t store_stp_state(struct device *d,
 +			       struct device_attribute *attr, const char *buf,
 +			       size_t len)
++=======
+ static int set_stp_state(struct net_bridge *br, unsigned long val)
++>>>>>>> 4436156b6fbe (bridge: simplify the stp_state_store by calling store_bridge_parm)
  {
- 	struct net_bridge *br = to_bridge(d);
- 	char *endp;
- 	unsigned long val;
- 
- 	if (!ns_capable(dev_net(br->dev)->user_ns, CAP_NET_ADMIN))
- 		return -EPERM;
- 
- 	val = simple_strtoul(buf, &endp, 0);
- 	if (endp == buf)
- 		return -EINVAL;
- 
  	if (!rtnl_trylock())
  		return restart_syscall();
  	br_stp_set_enabled(br, val);
  	rtnl_unlock();
  
- 	return len;
+ 	return 0;
+ }
+ 
+ static ssize_t stp_state_store(struct device *d,
+ 			       struct device_attribute *attr, const char *buf,
+ 			       size_t len)
+ {
+ 	return store_bridge_parm(d, buf, len, set_stp_state);
  }
 -static DEVICE_ATTR_RW(stp_state);
 +static DEVICE_ATTR(stp_state, S_IRUGO | S_IWUSR, show_stp_state,
 +		   store_stp_state);
  
 -static ssize_t group_fwd_mask_show(struct device *d,
 -				   struct device_attribute *attr,
 -				   char *buf)
 +static ssize_t show_group_fwd_mask(struct device *d,
 +			      struct device_attribute *attr, char *buf)
  {
  	struct net_bridge *br = to_bridge(d);
  	return sprintf(buf, "%#x\n", br->group_fwd_mask);
* Unmerged path net/bridge/br_sysfs_br.c
