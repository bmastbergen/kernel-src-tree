drm/nouveau: replace multiple open-coded runpm support checks with function

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] nouveau: replace multiple open-coded runpm support checks with function (Ben Skeggs) [1450742]
Rebuild_FUZZ: 97.26%
commit-author Ben Skeggs <bskeggs@redhat.com>
commit 321f5c5f2c494f3c94cec2289c8add678657ba2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/321f5c5f.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit 321f5c5f2c494f3c94cec2289c8add678657ba2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nouveau_vga.c
diff --cc drivers/gpu/drm/nouveau/nouveau_vga.c
index af89c3665b2a,02fe0efb9e16..000000000000
--- a/drivers/gpu/drm/nouveau/nouveau_vga.c
+++ b/drivers/gpu/drm/nouveau/nouveau_vga.c
@@@ -95,10 -95,10 +95,17 @@@ nouveau_vga_init(struct nouveau_drm *dr
  
  	vga_client_register(dev->pdev, dev, NULL, nouveau_vga_set_decode);
  
++<<<<<<< HEAD
 +	if (nouveau_runtime_pm == 1)
 +		runtime = true;
 +	if ((nouveau_runtime_pm == -1) && (nouveau_is_optimus() || nouveau_is_v1_dsm()))
 +		runtime = true;
++=======
+ 	/* don't register Thunderbolt eGPU with vga_switcheroo */
+ 	if (pci_is_thunderbolt_attached(dev->pdev))
+ 		return;
+ 
++>>>>>>> 321f5c5f2c49 (drm/nouveau: replace multiple open-coded runpm support checks with function)
  	vga_switcheroo_register_client(dev->pdev, &nouveau_switcheroo_ops, runtime);
  
  	if (runtime && nouveau_is_v1_dsm() && !nouveau_is_optimus())
@@@ -109,12 -109,12 +116,19 @@@ voi
  nouveau_vga_fini(struct nouveau_drm *drm)
  {
  	struct drm_device *dev = drm->dev;
- 	bool runtime = false;
+ 	bool runtime = nouveau_pmops_runtime();
  
++<<<<<<< HEAD
 +	if (nouveau_runtime_pm == 1)
 +		runtime = true;
 +	if ((nouveau_runtime_pm == -1) && (nouveau_is_optimus() || nouveau_is_v1_dsm()))
 +		runtime = true;
++=======
+ 	vga_client_register(dev->pdev, NULL, NULL, NULL);
+ 
+ 	if (pci_is_thunderbolt_attached(dev->pdev))
+ 		return;
++>>>>>>> 321f5c5f2c49 (drm/nouveau: replace multiple open-coded runpm support checks with function)
  
  	vga_switcheroo_unregister_client(dev->pdev);
  	if (runtime && nouveau_is_v1_dsm() && !nouveau_is_optimus())
diff --git a/drivers/gpu/drm/nouveau/nouveau_drm.c b/drivers/gpu/drm/nouveau/nouveau_drm.c
index d87a3f1f44f3..e5aeb3502514 100644
--- a/drivers/gpu/drm/nouveau/nouveau_drm.c
+++ b/drivers/gpu/drm/nouveau/nouveau_drm.c
@@ -78,7 +78,7 @@ int nouveau_modeset = -1;
 module_param_named(modeset, nouveau_modeset, int, 0400);
 
 MODULE_PARM_DESC(runpm, "disable (0), force enable (1), optimus only default (-1)");
-int nouveau_runtime_pm = -1;
+static int nouveau_runtime_pm = -1;
 module_param_named(runpm, nouveau_runtime_pm, int, 0400);
 
 static struct drm_driver driver_stub;
@@ -699,6 +699,14 @@ nouveau_pmops_thaw(struct device *dev)
 	return nouveau_do_resume(drm_dev, false);
 }
 
+bool
+nouveau_pmops_runtime()
+{
+	if (nouveau_runtime_pm == -1)
+		return nouveau_is_optimus() || nouveau_is_v1_dsm();
+	return nouveau_runtime_pm == 1;
+}
+
 static int
 nouveau_pmops_runtime_suspend(struct device *dev)
 {
@@ -706,14 +714,7 @@ nouveau_pmops_runtime_suspend(struct device *dev)
 	struct drm_device *drm_dev = pci_get_drvdata(pdev);
 	int ret;
 
-	if (nouveau_runtime_pm == 0) {
-		pm_runtime_forbid(dev);
-		return -EBUSY;
-	}
-
-	/* are we optimus enabled? */
-	if (nouveau_runtime_pm == -1 && !nouveau_is_optimus() && !nouveau_is_v1_dsm()) {
-		DRM_DEBUG_DRIVER("failing to power off - not optimus\n");
+	if (!nouveau_pmops_runtime()) {
 		pm_runtime_forbid(dev);
 		return -EBUSY;
 	}
@@ -738,8 +739,10 @@ nouveau_pmops_runtime_resume(struct device *dev)
 	struct nvif_device *device = &nouveau_drm(drm_dev)->device;
 	int ret;
 
-	if (nouveau_runtime_pm == 0)
-		return -EINVAL;
+	if (!nouveau_pmops_runtime()) {
+		pm_runtime_forbid(dev);
+		return -EBUSY;
+	}
 
 	pci_set_power_state(pdev, PCI_D0);
 	pci_restore_state(pdev);
@@ -765,14 +768,7 @@ nouveau_pmops_runtime_idle(struct device *dev)
 	struct nouveau_drm *drm = nouveau_drm(drm_dev);
 	struct drm_crtc *crtc;
 
-	if (nouveau_runtime_pm == 0) {
-		pm_runtime_forbid(dev);
-		return -EBUSY;
-	}
-
-	/* are we optimus enabled? */
-	if (nouveau_runtime_pm == -1 && !nouveau_is_optimus() && !nouveau_is_v1_dsm()) {
-		DRM_DEBUG_DRIVER("failing to power off - not optimus\n");
+	if (!nouveau_pmops_runtime()) {
 		pm_runtime_forbid(dev);
 		return -EBUSY;
 	}
diff --git a/drivers/gpu/drm/nouveau/nouveau_drm.h b/drivers/gpu/drm/nouveau/nouveau_drm.h
index 5c363ed1c842..044bed4d3477 100644
--- a/drivers/gpu/drm/nouveau/nouveau_drm.h
+++ b/drivers/gpu/drm/nouveau/nouveau_drm.h
@@ -103,8 +103,6 @@ nouveau_cli(struct drm_file *fpriv)
 #include <nvif/object.h>
 #include <nvif/device.h>
 
-extern int nouveau_runtime_pm;
-
 struct nouveau_drm {
 	struct nouveau_cli client;
 	struct drm_device *dev;
@@ -181,6 +179,7 @@ nouveau_drm(struct drm_device *dev)
 
 int nouveau_pmops_suspend(struct device *);
 int nouveau_pmops_resume(struct device *);
+bool nouveau_pmops_runtime(void);
 
 #include <nvkm/core/tegra.h>
 
* Unmerged path drivers/gpu/drm/nouveau/nouveau_vga.c
