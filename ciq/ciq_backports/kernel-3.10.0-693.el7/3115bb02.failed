pmem: report error on clear poison failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Toshi Kani <toshi.kani@hpe.com>
commit 3115bb02b5c23d960df5f1bf551ec394a9bb10ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3115bb02.failed

ACPI Clear Uncorrectable Error DSM function may fail or may be
unsupported on a platform.  pmem_clear_poison() returns without clearing
badblocks in such cases.  This failure is detected at the next read
(-EIO).

This behavior can lead to an issue when user keeps writing but does not
read immediately.  For instance, flight recorder file may be only read
when it is necessary for troubleshooting.

Change pmem_do_bvec() and pmem_clear_poison() to return -EIO so that
filesystem can log an error message on a write error.

	Cc: Vishal Verma <vishal.l.verma@intel.com>
	Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit 3115bb02b5c23d960df5f1bf551ec394a9bb10ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/pmem.c
diff --cc drivers/nvdimm/pmem.c
index c66d94ebde57,24618431a14b..000000000000
--- a/drivers/nvdimm/pmem.c
+++ b/drivers/nvdimm/pmem.c
@@@ -62,12 -62,36 +62,16 @@@ static int pmem_clear_poison(struct pme
  				__func__, (unsigned long long) sector,
  				cleared / 512, cleared / 512 > 1 ? "s" : "");
  		badblocks_clear(&pmem->bb, sector, cleared / 512);
+ 	} else {
+ 		return -EIO;
  	}
+ 
  	invalidate_pmem(pmem->virt_addr + offset, len);
+ 	return 0;
  }
  
 -static void write_pmem(void *pmem_addr, struct page *page,
 -		unsigned int off, unsigned int len)
 -{
 -	void *mem = kmap_atomic(page);
 -
 -	memcpy_to_pmem(pmem_addr, mem + off, len);
 -	kunmap_atomic(mem);
 -}
 -
 -static int read_pmem(struct page *page, unsigned int off,
 -		void *pmem_addr, unsigned int len)
 -{
 -	int rc;
 -	void *mem = kmap_atomic(page);
 -
 -	rc = memcpy_from_pmem(mem + off, pmem_addr, len);
 -	kunmap_atomic(mem);
 -	return rc;
 -}
 -
  static int pmem_do_bvec(struct pmem_device *pmem, struct page *page,
 -			unsigned int len, unsigned int off, bool is_write,
 +			unsigned int len, unsigned int off, int rw,
  			sector_t sector)
  {
  	int rc = 0;
@@@ -102,10 -125,10 +106,15 @@@
  		 * after clear poison.
  		 */
  		flush_dcache_page(page);
 -		write_pmem(pmem_addr, page, off, len);
 +		memcpy_to_pmem(pmem_addr, mem + off, len);
  		if (unlikely(bad_pmem)) {
++<<<<<<< HEAD
 +			pmem_clear_poison(pmem, pmem_off, len);
 +			memcpy_to_pmem(pmem_addr, mem + off, len);
++=======
+ 			rc = pmem_clear_poison(pmem, pmem_off, len);
+ 			write_pmem(pmem_addr, page, off, len);
++>>>>>>> 3115bb02b5c2 (pmem: report error on clear poison failure)
  		}
  	}
  
* Unmerged path drivers/nvdimm/pmem.c
