nfs: eliminate pointless and confusing do_vfs_lock wrappers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jeff Layton <jlayton@redhat.com>
commit 75575ddf29cbbf8e3c96fb02ae80a33f22054aad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/75575ddf.failed

	Signed-off-by: Jeff Layton <jlayton@redhat.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 75575ddf29cbbf8e3c96fb02ae80a33f22054aad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/file.c
#	fs/nfs/nfs4proc.c
diff --cc fs/nfs/file.c
index c497ac465f2a,3f1c623eee39..000000000000
--- a/fs/nfs/file.c
+++ b/fs/nfs/file.c
@@@ -765,22 -710,6 +765,25 @@@ out_noconflict
  	goto out;
  }
  
++<<<<<<< HEAD
 +static int do_vfs_lock(struct file *file, struct file_lock *fl)
 +{
 +	int res = 0;
 +	switch (fl->fl_flags & (FL_POSIX|FL_FLOCK)) {
 +		case FL_POSIX:
 +			res = posix_lock_file_wait(file, fl);
 +			break;
 +		case FL_FLOCK:
 +			res = flock_lock_file_wait(file, fl);
 +			break;
 +		default:
 +			BUG();
 +	}
 +	return res;
 +}
 +
++=======
++>>>>>>> 75575ddf29cb (nfs: eliminate pointless and confusing do_vfs_lock wrappers)
  static int
  do_unlk(struct file *filp, int cmd, struct file_lock *fl, int is_local)
  {
diff --cc fs/nfs/nfs4proc.c
index 2f4df4d62ee1,a84612e5979e..000000000000
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@@ -5690,22 -5600,6 +5690,25 @@@ static int nfs4_proc_getlk(struct nfs4_
  	return err;
  }
  
++<<<<<<< HEAD
 +static int do_vfs_lock(struct inode *inode, struct file_lock *fl)
 +{
 +	int res = 0;
 +	switch (fl->fl_flags & (FL_POSIX|FL_FLOCK)) {
 +		case FL_POSIX:
 +			res = posix_lock_inode_wait(inode, fl);
 +			break;
 +		case FL_FLOCK:
 +			res = flock_lock_inode_wait(inode, fl);
 +			break;
 +		default:
 +			BUG();
 +	}
 +	return res;
 +}
 +
++=======
++>>>>>>> 75575ddf29cb (nfs: eliminate pointless and confusing do_vfs_lock wrappers)
  struct nfs4_unlockdata {
  	struct nfs_locku_args arg;
  	struct nfs_locku_res res;
* Unmerged path fs/nfs/file.c
* Unmerged path fs/nfs/nfs4proc.c
