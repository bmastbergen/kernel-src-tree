mei: fill file pointer in read cb for fixed address client

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit 06ee536bcb15ca12868289467762130fa0a426f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/06ee536b.failed

The read callback created from a flow control request for
a fixed address client have NULL in the file pointer.
Fill the file pointer using a data from a write callback.

This allows us to drop workaround introduced in:
commit eeabfcf5a92a ("mei: connection to fixed address clients from user-space")

	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 06ee536bcb15ca12868289467762130fa0a426f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/client.c
#	drivers/misc/mei/wd.c
diff --cc drivers/misc/mei/client.c
index d470ad099cb1,a27ae2deecb4..000000000000
--- a/drivers/misc/mei/client.c
+++ b/drivers/misc/mei/client.c
@@@ -1183,7 -1178,7 +1184,11 @@@ err
   *
   * Return: 1 if mei_flow_ctrl_creds >0, 0 - otherwise.
   */
++<<<<<<< HEAD
 +int mei_cl_flow_ctrl_creds(struct mei_cl *cl)
++=======
+ static int mei_cl_flow_ctrl_creds(struct mei_cl *cl, const struct file *fp)
++>>>>>>> 06ee536bcb15 (mei: fill file pointer in read cb for fixed address client)
  {
  	int rets;
  
diff --cc drivers/misc/mei/wd.c
index 86085ec351fe,7d9b4ee42f65..000000000000
--- a/drivers/misc/mei/wd.c
+++ b/drivers/misc/mei/wd.c
@@@ -157,7 -157,7 +157,11 @@@ int mei_wd_stop(struct mei_device *dev
  
  	dev->wd_state = MEI_WD_STOPPING;
  
++<<<<<<< HEAD
 +	ret = mei_cl_flow_ctrl_creds(cl);
++=======
+ 	ret = mei_cl_flow_ctrl_creds(cl, NULL);
++>>>>>>> 06ee536bcb15 (mei: fill file pointer in read cb for fixed address client)
  	if (ret < 0)
  		goto err;
  
@@@ -280,7 -280,7 +284,11 @@@ static int mei_wd_ops_ping(struct watch
  
  	dev->wd_state = MEI_WD_RUNNING;
  
++<<<<<<< HEAD
 +	ret = mei_cl_flow_ctrl_creds(cl);
++=======
+ 	ret = mei_cl_flow_ctrl_creds(cl, NULL);
++>>>>>>> 06ee536bcb15 (mei: fill file pointer in read cb for fixed address client)
  	if (ret < 0)
  		goto end;
  
@@@ -361,6 -361,7 +369,10 @@@ static struct watchdog_device amt_wd_de
  
  int mei_watchdog_register(struct mei_device *dev)
  {
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> 06ee536bcb15 (mei: fill file pointer in read cb for fixed address client)
  	int ret;
  
  	amt_wd_dev.parent = dev->dev;
* Unmerged path drivers/misc/mei/client.c
diff --git a/drivers/misc/mei/main.c b/drivers/misc/mei/main.c
index c5bad0b852a4..ba50275c5d2f 100644
--- a/drivers/misc/mei/main.c
+++ b/drivers/misc/mei/main.c
@@ -211,11 +211,6 @@ static ssize_t mei_read(struct file *file, char __user *ubuf,
 
 	cb = mei_cl_read_cb(cl, file);
 	if (!cb) {
-		if (mei_cl_is_fixed_address(cl) && dev->allow_fixed_address) {
-			cb = mei_cl_read_cb(cl, NULL);
-			if (cb)
-				goto copy_buffer;
-		}
 		rets = 0;
 		goto out;
 	}
* Unmerged path drivers/misc/mei/wd.c
