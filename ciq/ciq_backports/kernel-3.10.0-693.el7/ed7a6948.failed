btrfs: do not decrease bytes_may_use when replaying extents

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Xiaoguang <wangxg.fnst@cn.fujitsu.com>
commit ed7a6948394305b810d0c6203268648715e5006f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ed7a6948.failed

When replaying extents, there is no need to update bytes_may_use
in btrfs_alloc_logged_file_extent(), otherwise it'll trigger a
WARN_ON about bytes_may_use.

Fixes: ("btrfs: update btrfs_space_info's bytes_may_use timely")
	Signed-off-by: Wang Xiaoguang <wangxg.fnst@cn.fujitsu.com>
	Reviewed-by: Josef Bacik <jbacik@fb.com>
	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit ed7a6948394305b810d0c6203268648715e5006f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent-tree.c
diff --cc fs/btrfs/extent-tree.c
index b627133218e7,4483487ef021..000000000000
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@@ -7874,9 -8232,14 +7875,20 @@@ int btrfs_alloc_logged_file_extent(stru
  	if (!block_group)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	ret = btrfs_add_reserved_bytes(block_group, ins->offset,
 +			RESERVE_ALLOC_NO_ACCOUNT, 0);
 +	BUG_ON(ret); /* logic error */
++=======
+ 	space_info = block_group->space_info;
+ 	spin_lock(&space_info->lock);
+ 	spin_lock(&block_group->lock);
+ 	space_info->bytes_reserved += ins->offset;
+ 	block_group->reserved += ins->offset;
+ 	spin_unlock(&block_group->lock);
+ 	spin_unlock(&space_info->lock);
+ 
++>>>>>>> ed7a69483943 (btrfs: do not decrease bytes_may_use when replaying extents)
  	ret = alloc_reserved_file_extent(trans, root, 0, root_objectid,
  					 0, owner, offset, ins, 1);
  	btrfs_put_block_group(block_group);
* Unmerged path fs/btrfs/extent-tree.c
