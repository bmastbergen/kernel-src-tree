Btrfs: self-tests: Support testing all possible sectorsizes and nodesizes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Feifei Xu <xufeifei@linux.vnet.ibm.com>
commit d94f43b4c6b88b9393422868d8dfde14c5923858
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d94f43b4.failed

To test all possible sectorsizes, this commit adds a sectorsize
array. This commit executes the tests for all possible sectorsizes and
nodesizes.

	Reviewed-by: Josef Bacik <jbacik@fb.com>
	Signed-off-by: Chandan Rajendra <chandan@linux.vnet.ibm.com>
	Signed-off-by: Feifei Xu <xufeifei@linux.vnet.ibm.com>
	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit d94f43b4c6b88b9393422868d8dfde14c5923858)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/super.c
diff --cc fs/btrfs/super.c
index 6ea3cfc124d6,c49d7ae69617..000000000000
--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@@ -2258,25 -2318,42 +2258,64 @@@ static void btrfs_print_mod_info(void
  
  static int btrfs_run_sanity_tests(void)
  {
++<<<<<<< HEAD
 +	int ret;
 +
 +	ret = btrfs_init_test_fs();
 +	if (ret)
 +		return ret;
 +
 +	ret = btrfs_test_free_space_cache();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_extent_buffer_operations();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_extent_io();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_inodes();
 +	if (ret)
 +		goto out;
 +	ret = btrfs_test_qgroups();
++=======
+ 	int ret, i;
+ 	u32 sectorsize, nodesize;
+ 	u32 test_sectorsize[] = {
+ 		PAGE_SIZE,
+ 	};
+ 	ret = btrfs_init_test_fs();
+ 	if (ret)
+ 		return ret;
+ 	for (i = 0; i < ARRAY_SIZE(test_sectorsize); i++) {
+ 		sectorsize = test_sectorsize[i];
+ 		for (nodesize = sectorsize;
+ 		     nodesize <= BTRFS_MAX_METADATA_BLOCKSIZE;
+ 		     nodesize <<= 1) {
+ 			pr_info("BTRFS: selftest: sectorsize: %u  nodesize: %u\n",
+ 				sectorsize, nodesize);
+ 			ret = btrfs_test_free_space_cache(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_extent_buffer_operations(sectorsize,
+ 				nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_extent_io(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_inodes(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_qgroups(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 			ret = btrfs_test_free_space_tree(sectorsize, nodesize);
+ 			if (ret)
+ 				goto out;
+ 		}
+ 	}
++>>>>>>> d94f43b4c6b8 (Btrfs: self-tests: Support testing all possible sectorsizes and nodesizes)
  out:
  	btrfs_destroy_test_fs();
  	return ret;
* Unmerged path fs/btrfs/super.c
