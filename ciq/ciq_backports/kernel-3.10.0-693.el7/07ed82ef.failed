EDAC, amd64: Add Fam17h debug output

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [edac] amd64: Add Fam17h debug output (Suravee Suthikulpanit) [1303712]
Rebuild_FUZZ: 90.91%
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 07ed82ef93d6c70dcd1f31429a8fd12fbdeb21fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/07ed82ef.failed

Read a few more UMC registers and provide debug output in order to be as
similar as possible to older AMD systems.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: Aravind Gopalakrishnan <aravindksg.lkml@gmail.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
	Cc: x86-ml <x86@kernel.org>
Link: http://lkml.kernel.org/r/1480344621-14966-1-git-send-email-Yazen.Ghannam@amd.com
[ Remove unneeded K8 check and comments, fixup others. ]
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 07ed82ef93d6c70dcd1f31429a8fd12fbdeb21fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/amd64_edac.c
#	drivers/edac/amd64_edac.h
diff --cc drivers/edac/amd64_edac.c
index ee19b0d392b7,fdd963794cdb..000000000000
--- a/drivers/edac/amd64_edac.c
+++ b/drivers/edac/amd64_edac.c
@@@ -2284,8 -2484,69 +2362,74 @@@ static int reserve_mc_sibling_devs(stru
  
  static void free_mc_sibling_devs(struct amd64_pvt *pvt)
  {
++<<<<<<< HEAD
 +	pci_dev_put(pvt->F1);
 +	pci_dev_put(pvt->F3);
++=======
+ 	if (pvt->umc) {
+ 		pci_dev_put(pvt->F0);
+ 		pci_dev_put(pvt->F6);
+ 	} else {
+ 		pci_dev_put(pvt->F1);
+ 		pci_dev_put(pvt->F2);
+ 	}
+ }
+ 
+ static void determine_ecc_sym_sz(struct amd64_pvt *pvt)
+ {
+ 	pvt->ecc_sym_sz = 4;
+ 
+ 	if (pvt->umc) {
+ 		u8 i;
+ 
+ 		for (i = 0; i < NUM_UMCS; i++) {
+ 			/* Check enabled channels only: */
+ 			if ((pvt->umc[i].sdp_ctrl & UMC_SDP_INIT) &&
+ 			    (pvt->umc[i].ecc_ctrl & BIT(7))) {
+ 				pvt->ecc_sym_sz = 8;
+ 				break;
+ 			}
+ 		}
+ 
+ 		return;
+ 	}
+ 
+ 	if (pvt->fam >= 0x10) {
+ 		u32 tmp;
+ 
+ 		amd64_read_pci_cfg(pvt->F3, EXT_NB_MCA_CFG, &tmp);
+ 		/* F16h has only DCT0, so no need to read dbam1. */
+ 		if (pvt->fam != 0x16)
+ 			amd64_read_dct_pci_cfg(pvt, 1, DBAM0, &pvt->dbam1);
+ 
+ 		/* F10h, revD and later can do x8 ECC too. */
+ 		if ((pvt->fam > 0x10 || pvt->model > 7) && tmp & BIT(25))
+ 			pvt->ecc_sym_sz = 8;
+ 	}
+ }
+ 
+ /*
+  * Retrieve the hardware registers of the memory controller.
+  */
+ static void __read_mc_regs_df(struct amd64_pvt *pvt)
+ {
+ 	u8 nid = pvt->mc_node_id;
+ 	struct amd64_umc *umc;
+ 	u32 i, umc_base;
+ 
+ 	/* Read registers from each UMC */
+ 	for (i = 0; i < NUM_UMCS; i++) {
+ 
+ 		umc_base = get_umc_base(i);
+ 		umc = &pvt->umc[i];
+ 
+ 		amd_smn_read(nid, umc_base + UMCCH_DIMM_CFG, &umc->dimm_cfg);
+ 		amd_smn_read(nid, umc_base + UMCCH_UMC_CFG, &umc->umc_cfg);
+ 		amd_smn_read(nid, umc_base + UMCCH_SDP_CTRL, &umc->sdp_ctrl);
+ 		amd_smn_read(nid, umc_base + UMCCH_ECC_CTRL, &umc->ecc_ctrl);
+ 		amd_smn_read(nid, umc_base + UMCCH_UMC_CAP_HI, &umc->umc_cap_hi);
+ 	}
++>>>>>>> 07ed82ef93d6 (EDAC, amd64: Add Fam17h debug output)
  }
  
  /*
diff --cc drivers/edac/amd64_edac.h
index 839d59711c41,cb91d0b06d23..000000000000
--- a/drivers/edac/amd64_edac.h
+++ b/drivers/edac/amd64_edac.h
@@@ -302,8 -252,21 +302,20 @@@
  /* MSRs */
  #define MSR_MCGCTL_NBE			BIT(4)
  
 -/* F17h */
 -
 -/* F0: */
 -#define DF_DHAR				0x104
 -
  /* UMC CH register offsets */
++<<<<<<< HEAD
 +#define UMCCH_SDP_CTRL			0x104
++=======
+ #define UMCCH_BASE_ADDR			0x0
+ #define UMCCH_ADDR_MASK			0x20
+ #define UMCCH_ADDR_CFG			0x30
+ #define UMCCH_DIMM_CFG			0x80
+ #define UMCCH_UMC_CFG			0x100
+ #define UMCCH_SDP_CTRL			0x104
+ #define UMCCH_ECC_CTRL			0x14C
+ #define UMCCH_ECC_BAD_SYMBOL		0xD90
+ #define UMCCH_UMC_CAP			0xDF0
++>>>>>>> 07ed82ef93d6 (EDAC, amd64: Add Fam17h debug output)
  #define UMCCH_UMC_CAP_HI		0xDF4
  
  /* UMC CH bitfields */
@@@ -351,6 -318,14 +363,17 @@@ struct chip_select 
  	u8 m_cnt;
  };
  
++<<<<<<< HEAD
++=======
+ struct amd64_umc {
+ 	u32 dimm_cfg;		/* DIMM Configuration reg */
+ 	u32 umc_cfg;		/* Configuration reg */
+ 	u32 sdp_ctrl;		/* SDP Control reg */
+ 	u32 ecc_ctrl;		/* DRAM ECC Control reg */
+ 	u32 umc_cap_hi;		/* Capabilities High reg */
+ };
+ 
++>>>>>>> 07ed82ef93d6 (EDAC, amd64: Add Fam17h debug output)
  struct amd64_pvt {
  	struct low_ops *ops;
  
* Unmerged path drivers/edac/amd64_edac.c
* Unmerged path drivers/edac/amd64_edac.h
