s390/ipl: cleanup bin attr usage

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [s390] ipl: cleanup bin attr usage (Hendrik Brueckner) [1381848]
Rebuild_FUZZ: 91.53%
commit-author Sebastian Ott <sebott@linux.vnet.ibm.com>
commit 22d557abf75ce39f8b2264c86058b4bcc7a8f9f0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/22d557ab.failed

Use macros wherever applicable and put bin_attributes inside attribute_groups
to simplify/remove some code.

	Reviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
	Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 22d557abf75ce39f8b2264c86058b4bcc7a8f9f0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/ipl.c
diff --cc arch/s390/kernel/ipl.c
index d43f21ee6f60,31625912cff8..000000000000
--- a/arch/s390/kernel/ipl.c
+++ b/arch/s390/kernel/ipl.c
@@@ -487,6 -464,24 +480,27 @@@ static ssize_t ipl_ccw_loadparm_show(st
  static struct kobj_attribute sys_ipl_ccw_loadparm_attr =
  	__ATTR(loadparm, 0444, ipl_ccw_loadparm_show, NULL);
  
++<<<<<<< HEAD
++=======
+ static struct attribute *ipl_fcp_attrs[] = {
+ 	&sys_ipl_type_attr.attr,
+ 	&sys_ipl_device_attr.attr,
+ 	&sys_ipl_fcp_wwpn_attr.attr,
+ 	&sys_ipl_fcp_lun_attr.attr,
+ 	&sys_ipl_fcp_bootprog_attr.attr,
+ 	&sys_ipl_fcp_br_lba_attr.attr,
+ 	&sys_ipl_ccw_loadparm_attr.attr,
+ 	NULL,
+ };
+ 
+ static struct attribute_group ipl_fcp_attr_group = {
+ 	.attrs = ipl_fcp_attrs,
+ 	.bin_attrs = ipl_fcp_bin_attrs,
+ };
+ 
+ /* CCW ipl device attributes */
+ 
++>>>>>>> 22d557abf75c (s390/ipl: cleanup bin attr usage)
  static struct attribute *ipl_ccw_attrs_vm[] = {
  	&sys_ipl_type_attr.attr,
  	&sys_ipl_device_attr.attr,
@@@ -828,6 -781,44 +818,47 @@@ static ssize_t reipl_generic_loadparm_s
  	return len;
  }
  
++<<<<<<< HEAD
++=======
+ /* FCP wrapper */
+ static ssize_t reipl_fcp_loadparm_show(struct kobject *kobj,
+ 				       struct kobj_attribute *attr, char *page)
+ {
+ 	return reipl_generic_loadparm_show(reipl_block_fcp, page);
+ }
+ 
+ static ssize_t reipl_fcp_loadparm_store(struct kobject *kobj,
+ 					struct kobj_attribute *attr,
+ 					const char *buf, size_t len)
+ {
+ 	return reipl_generic_loadparm_store(reipl_block_fcp, buf, len);
+ }
+ 
+ static struct kobj_attribute sys_reipl_fcp_loadparm_attr =
+ 	__ATTR(loadparm, S_IRUGO | S_IWUSR, reipl_fcp_loadparm_show,
+ 					    reipl_fcp_loadparm_store);
+ 
+ static struct attribute *reipl_fcp_attrs[] = {
+ 	&sys_reipl_fcp_device_attr.attr,
+ 	&sys_reipl_fcp_wwpn_attr.attr,
+ 	&sys_reipl_fcp_lun_attr.attr,
+ 	&sys_reipl_fcp_bootprog_attr.attr,
+ 	&sys_reipl_fcp_br_lba_attr.attr,
+ 	&sys_reipl_fcp_loadparm_attr.attr,
+ 	NULL,
+ };
+ 
+ static struct attribute_group reipl_fcp_attr_group = {
+ 	.attrs = reipl_fcp_attrs,
+ 	.bin_attrs = reipl_fcp_bin_attrs,
+ };
+ 
+ /* CCW reipl device attributes */
+ 
+ DEFINE_IPL_ATTR_RW(reipl_ccw, device, "0.0.%04llx\n", "0.0.%llx\n",
+ 	reipl_block_ccw->ipl_info.ccw.devno);
+ 
++>>>>>>> 22d557abf75c (s390/ipl: cleanup bin attr usage)
  /* NSS wrapper */
  static ssize_t reipl_nss_loadparm_show(struct kobject *kobj,
  				       struct kobj_attribute *attr, char *page)
@@@ -1242,18 -1232,16 +1273,22 @@@ static int __init reipl_fcp_init(void
  		return rc;
  	}
  
++<<<<<<< HEAD
 +	rc = sysfs_create_bin_file(&reipl_fcp_kset->kobj,
 +				   &sys_reipl_fcp_scp_data_attr);
 +	if (rc) {
 +		sysfs_remove_group(&reipl_fcp_kset->kobj, &reipl_fcp_attr_group);
 +		kset_unregister(reipl_fcp_kset);
 +		free_page((unsigned long) reipl_block_fcp);
 +		return rc;
 +	}
 +
 +	if (ipl_info.type == IPL_TYPE_FCP)
++=======
+ 	if (ipl_info.type == IPL_TYPE_FCP) {
++>>>>>>> 22d557abf75c (s390/ipl: cleanup bin attr usage)
  		memcpy(reipl_block_fcp, IPL_PARMBLOCK_START, PAGE_SIZE);
 -		/*
 -		 * Fix loadparm: There are systems where the (SCSI) LOADPARM
 -		 * is invalid in the SCSI IPL parameter block, so take it
 -		 * always from sclp_ipl_info.
 -		 */
 -		memcpy(reipl_block_fcp->hdr.loadparm, sclp_ipl_info.loadparm,
 -		       LOADPARM_LEN);
 -	} else {
 +	else {
  		reipl_block_fcp->hdr.len = IPL_PARM_BLK_FCP_LEN;
  		reipl_block_fcp->hdr.version = IPL_PARM_BLOCK_VERSION;
  		reipl_block_fcp->hdr.blk0_len = IPL_PARM_BLK0_FCP_LEN;
* Unmerged path arch/s390/kernel/ipl.c
