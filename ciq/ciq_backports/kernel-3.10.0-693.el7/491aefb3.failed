amd-xgbe: Change from napi_complete to napi_complete_done

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lendacky, Thomas <Thomas.Lendacky@amd.com>
commit 491aefb38a31bb163e1e4393ba42abf68ce4c6eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/491aefb3.failed

Change from using napi_complete to napi_complete_done to allow for the
use of gro_flush_timeout in tuning network processing.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 491aefb38a31bb163e1e4393ba42abf68ce4c6eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-drv.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-drv.c
index d58e85811bc9,5a4d9ca369d7..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-drv.c
@@@ -1269,18 -2015,71 +1269,50 @@@ read_again
  		skb->dev = netdev;
  		skb->protocol = eth_type_trans(skb, netdev);
  		skb_record_rx_queue(skb, channel->queue_index);
 +		skb_mark_napi_id(skb, &pdata->napi);
  
 -		napi_gro_receive(napi, skb);
 -
 -next_packet:
 -		packet_count++;
 +		netdev->last_rx = jiffies;
 +		napi_gro_receive(&pdata->napi, skb);
  	}
  
 -	/* Check if we need to save state before leaving */
 -	if (received && (incomplete || context_next)) {
 -		rdata = XGBE_GET_DESC_DATA(ring, ring->cur);
 -		rdata->state_saved = 1;
 -		rdata->state.skb = skb;
 -		rdata->state.len = len;
 -		rdata->state.error = error;
 -	}
 -
 -	DBGPR("<--xgbe_rx_poll: packet_count = %d\n", packet_count);
 +	DBGPR("<--xgbe_rx_poll: received = %d\n", received);
  
 -	return packet_count;
 +	return received;
  }
  
++<<<<<<< HEAD
 +static int xgbe_poll(struct napi_struct *napi, int budget)
++=======
+ static int xgbe_one_poll(struct napi_struct *napi, int budget)
+ {
+ 	struct xgbe_channel *channel = container_of(napi, struct xgbe_channel,
+ 						    napi);
+ 	int processed = 0;
+ 
+ 	DBGPR("-->xgbe_one_poll: budget=%d\n", budget);
+ 
+ 	/* Cleanup Tx ring first */
+ 	xgbe_tx_poll(channel);
+ 
+ 	/* Process Rx ring next */
+ 	processed = xgbe_rx_poll(channel, budget);
+ 
+ 	/* If we processed everything, we are done */
+ 	if (processed < budget) {
+ 		/* Turn off polling */
+ 		napi_complete_done(napi, processed);
+ 
+ 		/* Enable Tx and Rx interrupts */
+ 		enable_irq(channel->dma_irq);
+ 	}
+ 
+ 	DBGPR("<--xgbe_one_poll: received = %d\n", processed);
+ 
+ 	return processed;
+ }
+ 
+ static int xgbe_all_poll(struct napi_struct *napi, int budget)
++>>>>>>> 491aefb38a31 (amd-xgbe: Change from napi_complete to napi_complete_done)
  {
  	struct xgbe_prv_data *pdata = container_of(napi, struct xgbe_prv_data,
  						   napi);
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-drv.c
