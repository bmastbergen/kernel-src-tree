powerpc/pseries: Implement indexed-count hotplug memory remove

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] pseries: Implement indexed-count hotplug memory remove (Thomas Huth) [1323417]
Rebuild_FUZZ: 93.10%
commit-author Sahil Mehta <sahilmehta17@gmail.com>
commit 753843471cbbaeca25a5cab51981ee721ad272f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/75384347.failed

Indexed-count remove for memory hotplug guarantees that a contiguous block
of <count> lmbs beginning at a specified <index> will be unassigned (NOT
that <count> lmbs will be removed). Because of Qemu's per-DIMM memory
management, the removal of a contiguous block of memory currently
requires a series of individual calls. Indexed-count remove reduces
this series into a single call.

	Signed-off-by: Sahil Mehta <sahilmehta17@gmail.com>
	Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 753843471cbbaeca25a5cab51981ee721ad272f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/pseries/hotplug-memory.c
diff --cc arch/powerpc/platforms/pseries/hotplug-memory.c
index 1e5732c56541,e28abfa013e5..000000000000
--- a/arch/powerpc/platforms/pseries/hotplug-memory.c
+++ b/arch/powerpc/platforms/pseries/hotplug-memory.c
@@@ -646,11 -720,16 +734,17 @@@ static int dlpar_memory_readd_by_index(
  {
  	return -EOPNOTSUPP;
  }
+ 
+ static int dlpar_memory_remove_by_ic(u32 lmbs_to_remove, u32 drc_index,
+ 				     struct property *prop)
+ {
+ 	return -EOPNOTSUPP;
+ }
  #endif /* CONFIG_MEMORY_HOTREMOVE */
  
 -static int dlpar_add_lmb(struct of_drconf_cell *lmb)
 +static int dlpar_add_lmb_memory(struct of_drconf_cell *lmb)
  {
 +	struct memory_block *mem_block;
  	unsigned long block_sz;
  	int nid, rc;
  
@@@ -842,22 -987,39 +936,30 @@@ int dlpar_memory(struct pseries_hp_erro
  
  	switch (hp_elog->action) {
  	case PSERIES_HP_ELOG_ACTION_ADD:
 -		if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_COUNT) {
 -			count = hp_elog->_drc_u.drc_count;
 +		if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_COUNT)
  			rc = dlpar_memory_add_by_count(count, prop);
 -		} else if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_INDEX) {
 -			drc_index = hp_elog->_drc_u.drc_index;
 +		else if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_INDEX)
  			rc = dlpar_memory_add_by_index(drc_index, prop);
 -		} else if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_IC) {
 -			count = hp_elog->_drc_u.ic.count;
 -			drc_index = hp_elog->_drc_u.ic.index;
 -			rc = dlpar_memory_add_by_ic(count, drc_index, prop);
 -		} else {
 +		else
  			rc = -EINVAL;
 -		}
 -
  		break;
  	case PSERIES_HP_ELOG_ACTION_REMOVE:
 -		if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_COUNT) {
 -			count = hp_elog->_drc_u.drc_count;
 +		if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_COUNT)
  			rc = dlpar_memory_remove_by_count(count, prop);
 -		} else if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_INDEX) {
 -			drc_index = hp_elog->_drc_u.drc_index;
 +		else if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_INDEX)
  			rc = dlpar_memory_remove_by_index(drc_index, prop);
++<<<<<<< HEAD
 +		else
++=======
+ 		} else if (hp_elog->id_type == PSERIES_HP_ELOG_ID_DRC_IC) {
+ 			count = hp_elog->_drc_u.ic.count;
+ 			drc_index = hp_elog->_drc_u.ic.index;
+ 			rc = dlpar_memory_remove_by_ic(count, drc_index, prop);
+ 		} else {
++>>>>>>> 753843471cbb (powerpc/pseries: Implement indexed-count hotplug memory remove)
  			rc = -EINVAL;
 -		}
 -
  		break;
  	case PSERIES_HP_ELOG_ACTION_READD:
 -		drc_index = hp_elog->_drc_u.drc_index;
  		rc = dlpar_memory_readd_by_index(drc_index, prop);
  		break;
  	default:
* Unmerged path arch/powerpc/platforms/pseries/hotplug-memory.c
