net/mlx5e: Add devlink based SRIOV mode changes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Add devlink based SRIOV mode changes (Don Dutile) [1383792 1417284]
Rebuild_FUZZ: 95.56%
commit-author Or Gerlitz <ogerlitz@mellanox.com>
commit c930a3ad7453615b6707509e23afa5969095b5b7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c930a3ad.failed

Implement handlers for the devlink commands to get and set the SRIOV
E-Switch mode.

When turning to the switchdev/offloads mode, we disable the e-switch
and enable it again in the new mode, create the NIC offloads table
and create VF reps.

When turning to legacy mode, we remove the VF reps and the offloads
table, and re-initiate the e-switch in it's legacy mode.

The actual creation/removal of the VF reps is done in downstream patches.

	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c930a3ad7453615b6707509e23afa5969095b5b7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
index b153747c6dc3,12f509c8d65d..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
@@@ -86,7 -78,11 +86,15 @@@ enum 
  
  /* Vport context events */
  #define SRIOV_VPORT_EVENTS (UC_ADDR_CHANGE | \
++<<<<<<< HEAD
 +			    MC_ADDR_CHANGE)
++=======
+ 			    MC_ADDR_CHANGE | \
+ 			    PROMISC_CHANGE)
+ 
+ int esw_offloads_init(struct mlx5_eswitch *esw, int nvports);
+ void esw_offloads_cleanup(struct mlx5_eswitch *esw, int nvports);
++>>>>>>> c930a3ad7453 (net/mlx5e: Add devlink based SRIOV mode changes)
  
  static int arm_vport_context_events_cmd(struct mlx5_core_dev *dev, u16 vport,
  					u32 events_mask)
@@@ -1261,11 -1554,14 +1269,18 @@@ int mlx5_eswitch_enable_sriov(struct ml
  	if (!MLX5_CAP_ESW_EGRESS_ACL(esw->dev, ft_support))
  		esw_warn(esw->dev, "E-Switch engress ACL is not supported by FW\n");
  
 -	esw_info(esw->dev, "E-Switch enable SRIOV: nvfs(%d) mode (%d)\n", nvfs, mode);
 -	esw->mode = mode;
 +	esw_info(esw->dev, "E-Switch enable SRIOV: nvfs(%d)\n", nvfs);
 +
  	esw_disable_vport(esw, 0);
  
++<<<<<<< HEAD
 +	err = esw_create_fdb_table(esw, nvfs + 1);
++=======
+ 	if (mode == SRIOV_LEGACY)
+ 		err = esw_create_legacy_fdb_table(esw, nvfs + 1);
+ 	else
+ 		err = esw_offloads_init(esw, nvfs + 1);
++>>>>>>> c930a3ad7453 (net/mlx5e: Add devlink based SRIOV mode changes)
  	if (err)
  		goto abort;
  
@@@ -1283,20 -1580,32 +1298,42 @@@ abort
  
  void mlx5_eswitch_disable_sriov(struct mlx5_eswitch *esw)
  {
++<<<<<<< HEAD
++=======
+ 	struct esw_mc_addr *mc_promisc;
+ 	int nvports;
++>>>>>>> c930a3ad7453 (net/mlx5e: Add devlink based SRIOV mode changes)
  	int i;
  
  	if (!esw || !MLX5_CAP_GEN(esw->dev, vport_group_manager) ||
  	    MLX5_CAP_GEN(esw->dev, port_type) != MLX5_CAP_PORT_TYPE_ETH)
  		return;
  
++<<<<<<< HEAD
 +	esw_info(esw->dev, "disable SRIOV: active vports(%d)\n",
 +		 esw->enabled_vports);
++=======
+ 	esw_info(esw->dev, "disable SRIOV: active vports(%d) mode(%d)\n",
+ 		 esw->enabled_vports, esw->mode);
+ 
+ 	mc_promisc = esw->mc_promisc;
+ 	nvports = esw->enabled_vports;
++>>>>>>> c930a3ad7453 (net/mlx5e: Add devlink based SRIOV mode changes)
  
  	for (i = 0; i < esw->total_vports; i++)
  		esw_disable_vport(esw, i);
  
 -	if (mc_promisc && mc_promisc->uplink_rule)
 -		mlx5_del_flow_rule(mc_promisc->uplink_rule);
 +	esw_destroy_fdb_table(esw);
  
++<<<<<<< HEAD
++=======
+ 	if (esw->mode == SRIOV_LEGACY)
+ 		esw_destroy_legacy_fdb_table(esw);
+ 	else if (esw->mode == SRIOV_OFFLOADS)
+ 		esw_offloads_cleanup(esw, nvports);
+ 
+ 	esw->mode = SRIOV_NONE;
++>>>>>>> c930a3ad7453 (net/mlx5e: Add devlink based SRIOV mode changes)
  	/* VPORT 0 (PF) must be enabled back with non-sriov configuration */
  	esw_enable_vport(esw, 0, UC_ADDR_CHANGE);
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
