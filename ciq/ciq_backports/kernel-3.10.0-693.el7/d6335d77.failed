security: Make inode argument of inode_getsecid non-const

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [security] Make inode argument of inode_getsecid non-const (Andreas Grunbacher) [437984]
Rebuild_FUZZ: 90.38%
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit d6335d77a7622a88380f3f207cc1f727f878dd21
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d6335d77.failed

Make the inode argument of the inode_getsecid hook non-const so that we
can use it to revalidate invalid security labels.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Acked-by:  Stephen Smalley <sds@tycho.nsa.gov>
	Signed-off-by: Paul Moore <pmoore@redhat.com>
(cherry picked from commit d6335d77a7622a88380f3f207cc1f727f878dd21)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/audit.h
#	include/linux/lsm_hooks.h
#	kernel/auditsc.c
diff --cc include/linux/audit.h
index 7547fbd8104a,8a2d046e9f6b..000000000000
--- a/include/linux/audit.h
+++ b/include/linux/audit.h
@@@ -118,7 -136,8 +118,12 @@@ extern void __audit_getname(struct file
  #define AUDIT_INODE_HIDDEN	2	/* audit record should be hidden */
  extern void __audit_inode(struct filename *name, const struct dentry *dentry,
  				unsigned int flags);
++<<<<<<< HEAD
 +extern void __audit_inode_child(const struct inode *parent,
++=======
+ extern void __audit_file(const struct file *);
+ extern void __audit_inode_child(struct inode *parent,
++>>>>>>> d6335d77a762 (security: Make inode argument of inode_getsecid non-const)
  				const struct dentry *dentry,
  				const unsigned char type);
  extern void __audit_seccomp(unsigned long syscall, long signr, int code);
diff --cc kernel/auditsc.c
index 51548ccd2dda,195ffaee50b9..000000000000
--- a/kernel/auditsc.c
+++ b/kernel/auditsc.c
@@@ -1688,7 -1754,7 +1688,11 @@@ void __audit_inode(struct filename *nam
  		   unsigned int flags)
  {
  	struct audit_context *context = current->audit_context;
++<<<<<<< HEAD
 +	const struct inode *inode = dentry->d_inode;
++=======
+ 	struct inode *inode = d_backing_inode(dentry);
++>>>>>>> d6335d77a762 (security: Make inode argument of inode_getsecid non-const)
  	struct audit_names *n;
  	bool parent = flags & AUDIT_INODE_PARENT;
  
@@@ -1784,7 -1853,7 +1788,11 @@@ void __audit_inode_child(struct inode *
  			 const unsigned char type)
  {
  	struct audit_context *context = current->audit_context;
++<<<<<<< HEAD
 +	const struct inode *inode = dentry->d_inode;
++=======
+ 	struct inode *inode = d_backing_inode(dentry);
++>>>>>>> d6335d77a762 (security: Make inode argument of inode_getsecid non-const)
  	const char *dname = dentry->d_name.name;
  	struct audit_names *n, *found_parent = NULL, *found_child = NULL;
  
* Unmerged path include/linux/lsm_hooks.h
* Unmerged path include/linux/audit.h
* Unmerged path include/linux/lsm_hooks.h
diff --git a/include/linux/security.h b/include/linux/security.h
index 0dea8b51ab59..e6cae6ff2872 100644
--- a/include/linux/security.h
+++ b/include/linux/security.h
@@ -1801,7 +1801,7 @@ int security_inode_killpriv(struct dentry *dentry);
 int security_inode_getsecurity(const struct inode *inode, const char *name, void **buffer, bool alloc);
 int security_inode_setsecurity(struct inode *inode, const char *name, const void *value, size_t size, int flags);
 int security_inode_listsecurity(struct inode *inode, char *buffer, size_t buffer_size);
-void security_inode_getsecid(const struct inode *inode, u32 *secid);
+void security_inode_getsecid(struct inode *inode, u32 *secid);
 int security_file_permission(struct file *file, int mask);
 int security_file_alloc(struct file *file);
 void security_file_free(struct file *file);
@@ -2237,7 +2237,7 @@ static inline int security_inode_listsecurity(struct inode *inode, char *buffer,
 	return 0;
 }
 
-static inline void security_inode_getsecid(const struct inode *inode, u32 *secid)
+static inline void security_inode_getsecid(struct inode *inode, u32 *secid)
 {
 	*secid = 0;
 }
diff --git a/kernel/audit.c b/kernel/audit.c
index d5475ca24dcc..38d8d7dedcd1 100644
--- a/kernel/audit.c
+++ b/kernel/audit.c
@@ -1631,7 +1631,7 @@ static inline int audit_copy_fcaps(struct audit_names *name,
 
 /* Copy inode data into an audit_names. */
 void audit_copy_inode(struct audit_names *name, const struct dentry *dentry,
-		      const struct inode *inode)
+		      struct inode *inode)
 {
 	name->ino   = inode->i_ino;
 	name->dev   = inode->i_sb->s_dev;
diff --git a/kernel/audit.h b/kernel/audit.h
index 18a56271aa9d..65d0c72c41e5 100644
--- a/kernel/audit.h
+++ b/kernel/audit.h
@@ -215,7 +215,7 @@ extern int audit_ever_enabled;
 
 extern void audit_copy_inode(struct audit_names *name,
 			     const struct dentry *dentry,
-			     const struct inode *inode);
+			     struct inode *inode);
 extern void audit_log_cap(struct audit_buffer *ab, char *prefix,
 			  kernel_cap_t *cap);
 extern void audit_log_fcaps(struct audit_buffer *ab, struct audit_names *name);
* Unmerged path kernel/auditsc.c
diff --git a/security/security.c b/security/security.c
index 2031746a708e..02491db162ea 100644
--- a/security/security.c
+++ b/security/security.c
@@ -680,7 +680,7 @@ int security_inode_listsecurity(struct inode *inode, char *buffer, size_t buffer
 }
 EXPORT_SYMBOL(security_inode_listsecurity);
 
-void security_inode_getsecid(const struct inode *inode, u32 *secid)
+void security_inode_getsecid(struct inode *inode, u32 *secid)
 {
 	security_ops->inode_getsecid(inode, secid);
 }
diff --git a/security/selinux/hooks.c b/security/selinux/hooks.c
index 47406b6a55bb..7eb820683c2a 100644
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@ -3102,7 +3102,7 @@ static int selinux_inode_listsecurity(struct inode *inode, char *buffer, size_t
 	return len;
 }
 
-static void selinux_inode_getsecid(const struct inode *inode, u32 *secid)
+static void selinux_inode_getsecid(struct inode *inode, u32 *secid)
 {
 	struct inode_security_struct *isec = inode->i_security;
 	*secid = isec->sid;
diff --git a/security/smack/smack_lsm.c b/security/smack/smack_lsm.c
index 3af62fbedea0..eee9df0819a0 100644
--- a/security/smack/smack_lsm.c
+++ b/security/smack/smack_lsm.c
@@ -1029,7 +1029,7 @@ static int smack_inode_listsecurity(struct inode *inode, char *buffer,
  * @inode: inode to extract the info from
  * @secid: where result will be saved
  */
-static void smack_inode_getsecid(const struct inode *inode, u32 *secid)
+static void smack_inode_getsecid(struct inode *inode, u32 *secid)
 {
 	struct inode_smack *isp = inode->i_security;
 
