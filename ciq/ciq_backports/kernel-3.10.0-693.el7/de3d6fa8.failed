net/mlx4_en: Add branch prediction hints in RX data-path

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx4_en: Add branch prediction hints in RX data-path (Don Dutile) [1385329 1417285]
Rebuild_FUZZ: 96.30%
commit-author Tariq Toukan <tariqt@mellanox.com>
commit de3d6fa81e684af5817dc379ffc394235a9666cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/de3d6fa8.failed

Add likely/unlikely hints to improve branch predictions
in the RX data-path.

	Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit de3d6fa81e684af5817dc379ffc394235a9666cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx4/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx4/en_rx.c
index f3f26c698f6a,6e474af3fb1f..000000000000
--- a/drivers/net/ethernet/mellanox/mlx4/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_rx.c
@@@ -70,8 -71,8 +70,13 @@@ static int mlx4_alloc_pages(struct mlx4
  			return -ENOMEM;
  	}
  	dma = dma_map_page(priv->ddev, page, 0, PAGE_SIZE << order,
++<<<<<<< HEAD
 +			   PCI_DMA_FROMDEVICE);
 +	if (dma_mapping_error(priv->ddev, dma)) {
++=======
+ 			   frag_info->dma_dir);
+ 	if (unlikely(dma_mapping_error(priv->ddev, dma))) {
++>>>>>>> de3d6fa81e68 (net/mlx4_en: Add branch prediction hints in RX data-path)
  		put_page(page);
  		return -ENOMEM;
  	}
@@@ -749,12 -798,18 +756,12 @@@ int mlx4_en_process_rx_cq(struct net_de
  	u64 timestamp;
  	bool l2_tunnel;
  
- 	if (!priv->port_up)
+ 	if (unlikely(!priv->port_up))
  		return 0;
  
- 	if (budget <= 0)
+ 	if (unlikely(budget <= 0))
  		return polled;
  
 -	/* Protect accesses to: ring->xdp_prog, priv->mac_hash list */
 -	rcu_read_lock();
 -	xdp_prog = rcu_dereference(ring->xdp_prog);
 -	doorbell_pending = 0;
 -	tx_index = (priv->tx_ring_num - priv->xdp_ring_num) + cq->ring;
 -
  	/* We assume a 1:1 mapping between CQEs and Rx descriptors, so Rx
  	 * descriptor offset can be deduced from the CQE index instead of
  	 * reading 'cqe->index' */
@@@ -831,6 -882,44 +838,47 @@@
  		l2_tunnel = (dev->hw_enc_features & NETIF_F_RXCSUM) &&
  			(cqe->vlan_my_qpn & cpu_to_be32(MLX4_CQE_L2_TUNNEL));
  
++<<<<<<< HEAD
++=======
+ 		/* A bpf program gets first chance to drop the packet. It may
+ 		 * read bytes but not past the end of the frag.
+ 		 */
+ 		if (xdp_prog) {
+ 			struct xdp_buff xdp;
+ 			dma_addr_t dma;
+ 			u32 act;
+ 
+ 			dma = be64_to_cpu(rx_desc->data[0].addr);
+ 			dma_sync_single_for_cpu(priv->ddev, dma,
+ 						priv->frag_info[0].frag_size,
+ 						DMA_FROM_DEVICE);
+ 
+ 			xdp.data = page_address(frags[0].page) +
+ 							frags[0].page_offset;
+ 			xdp.data_end = xdp.data + length;
+ 
+ 			act = bpf_prog_run_xdp(xdp_prog, &xdp);
+ 			switch (act) {
+ 			case XDP_PASS:
+ 				break;
+ 			case XDP_TX:
+ 				if (likely(!mlx4_en_xmit_frame(frags, dev,
+ 							length, tx_index,
+ 							&doorbell_pending)))
+ 					goto consumed;
+ 				goto xdp_drop; /* Drop on xmit failure */
+ 			default:
+ 				bpf_warn_invalid_xdp_action(act);
+ 			case XDP_ABORTED:
+ 			case XDP_DROP:
+ xdp_drop:
+ 				if (likely(mlx4_en_rx_recycle(ring, frags)))
+ 					goto consumed;
+ 				goto next;
+ 			}
+ 		}
+ 
++>>>>>>> de3d6fa81e68 (net/mlx4_en: Add branch prediction hints in RX data-path)
  		if (likely(dev->features & NETIF_F_RXCSUM)) {
  			if (cqe->status & cpu_to_be16(MLX4_CQE_STATUS_TCP |
  						      MLX4_CQE_STATUS_UDP)) {
* Unmerged path drivers/net/ethernet/mellanox/mlx4/en_rx.c
