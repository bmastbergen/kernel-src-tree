VSOCK: add loopback to virtio_transport

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Stefan Hajnoczi <stefanha@redhat.com>
commit b9116823189e85ccf3843c7d3ee3a361af0c3eb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b9116823.failed

The VMware VMCI transport supports loopback inside virtual machines.
This patch implements loopback for virtio-vsock.

Flow control is handled by the virtio-vsock protocol as usual.  The
sending process stops transmitting on a connection when the peer's
receive buffer space is exhausted.

Cathy Avery <cavery@redhat.com> noticed this difference between VMCI and
virtio-vsock when a test case using loopback failed.  Although loopback
isn't the main point of AF_VSOCK, it is useful for testing and
virtio-vsock must match VMCI semantics so that userspace programs run
regardless of the underlying transport.

My understanding is that loopback is not supported on the host side with
VMCI.  Follow that by implementing it only in the guest driver, not the
vhost host driver.

	Cc: Jorgen Hansen <jhansen@vmware.com>
	Reported-by: Cathy Avery <cavery@redhat.com>
	Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b9116823189e85ccf3843c7d3ee3a361af0c3eb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/vmw_vsock/virtio_transport.c
* Unmerged path net/vmw_vsock/virtio_transport.c
* Unmerged path net/vmw_vsock/virtio_transport.c
