libnl: nla_put_msecs(): align on a 64-bit area

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit 2175d87cc3561c02e605bc8ac81ee5d875a51b9e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2175d87c.failed

nla_data() is now aligned on a 64-bit area.

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2175d87cc3561c02e605bc8ac81ee5d875a51b9e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/neighbour.h
#	net/core/neighbour.c
diff --cc include/uapi/linux/neighbour.h
index 97971601773b,bd99a8d80f36..000000000000
--- a/include/uapi/linux/neighbour.h
+++ b/include/uapi/linux/neighbour.h
@@@ -125,6 -127,8 +125,11 @@@ enum 
  	NDTPA_PROXY_QLEN,		/* u32 */
  	NDTPA_LOCKTIME,			/* u64, msecs */
  	NDTPA_QUEUE_LENBYTES,		/* u32 */
++<<<<<<< HEAD
++=======
+ 	NDTPA_MCAST_REPROBES,		/* u32 */
+ 	NDTPA_PAD,
++>>>>>>> 2175d87cc356 (libnl: nla_put_msecs(): align on a 64-bit area)
  	__NDTPA_MAX
  };
  #define NDTPA_MAX (__NDTPA_MAX - 1)
diff --cc net/core/neighbour.c
index 0f475018ae83,6a395d440228..000000000000
--- a/net/core/neighbour.c
+++ b/net/core/neighbour.c
@@@ -1814,21 -1761,24 +1814,28 @@@ static int neightbl_fill_parms(struct s
  			NEIGH_VAR(parms, UCAST_PROBES)) ||
  	    nla_put_u32(skb, NDTPA_MCAST_PROBES,
  			NEIGH_VAR(parms, MCAST_PROBES)) ||
++<<<<<<< HEAD
 +	    nla_put_msecs(skb, NDTPA_REACHABLE_TIME, parms->reachable_time) ||
++=======
+ 	    nla_put_u32(skb, NDTPA_MCAST_REPROBES,
+ 			NEIGH_VAR(parms, MCAST_REPROBES)) ||
+ 	    nla_put_msecs(skb, NDTPA_REACHABLE_TIME, parms->reachable_time,
+ 			  NDTPA_PAD) ||
++>>>>>>> 2175d87cc356 (libnl: nla_put_msecs(): align on a 64-bit area)
  	    nla_put_msecs(skb, NDTPA_BASE_REACHABLE_TIME,
- 			  NEIGH_VAR(parms, BASE_REACHABLE_TIME)) ||
+ 			  NEIGH_VAR(parms, BASE_REACHABLE_TIME), NDTPA_PAD) ||
  	    nla_put_msecs(skb, NDTPA_GC_STALETIME,
- 			  NEIGH_VAR(parms, GC_STALETIME)) ||
+ 			  NEIGH_VAR(parms, GC_STALETIME), NDTPA_PAD) ||
  	    nla_put_msecs(skb, NDTPA_DELAY_PROBE_TIME,
- 			  NEIGH_VAR(parms, DELAY_PROBE_TIME)) ||
+ 			  NEIGH_VAR(parms, DELAY_PROBE_TIME), NDTPA_PAD) ||
  	    nla_put_msecs(skb, NDTPA_RETRANS_TIME,
- 			  NEIGH_VAR(parms, RETRANS_TIME)) ||
+ 			  NEIGH_VAR(parms, RETRANS_TIME), NDTPA_PAD) ||
  	    nla_put_msecs(skb, NDTPA_ANYCAST_DELAY,
- 			  NEIGH_VAR(parms, ANYCAST_DELAY)) ||
+ 			  NEIGH_VAR(parms, ANYCAST_DELAY), NDTPA_PAD) ||
  	    nla_put_msecs(skb, NDTPA_PROXY_DELAY,
- 			  NEIGH_VAR(parms, PROXY_DELAY)) ||
+ 			  NEIGH_VAR(parms, PROXY_DELAY), NDTPA_PAD) ||
  	    nla_put_msecs(skb, NDTPA_LOCKTIME,
- 			  NEIGH_VAR(parms, LOCKTIME)))
+ 			  NEIGH_VAR(parms, LOCKTIME), NDTPA_PAD))
  		goto nla_put_failure;
  	return nla_nest_end(skb, nest);
  
diff --git a/include/net/netlink.h b/include/net/netlink.h
index 983e9721f6f7..f05a47159999 100644
--- a/include/net/netlink.h
+++ b/include/net/netlink.h
@@ -106,7 +106,8 @@
  *               padattr)		add s64 attribute to skb
  *   nla_put_string(skb, type, str)	add string attribute to skb
  *   nla_put_flag(skb, type)		add flag attribute to skb
- *   nla_put_msecs(skb, type, jiffies)	add msecs attribute to skb
+ *   nla_put_msecs(skb, type, jiffies,
+ *                 padattr)		add msecs attribute to skb
  *   nla_put_in_addr(skb, type, addr)	add IPv4 address attribute to skb
  *   nla_put_in6_addr(skb, type, addr)	add IPv6 address attribute to skb
  *
@@ -950,16 +951,18 @@ static inline int nla_put_flag(struct sk_buff *skb, int attrtype)
 }
 
 /**
- * nla_put_msecs - Add a msecs netlink attribute to a socket buffer
+ * nla_put_msecs - Add a msecs netlink attribute to a skb and align it
  * @skb: socket buffer to add attribute to
  * @attrtype: attribute type
  * @njiffies: number of jiffies to convert to msecs
+ * @padattr: attribute type for the padding
  */
 static inline int nla_put_msecs(struct sk_buff *skb, int attrtype,
-				unsigned long njiffies)
+				unsigned long njiffies, int padattr)
 {
 	u64 tmp = jiffies_to_msecs(njiffies);
-	return nla_put(skb, attrtype, sizeof(u64), &tmp);
+
+	return nla_put_64bit(skb, attrtype, sizeof(u64), &tmp, padattr);
 }
 
 /**
diff --git a/include/uapi/linux/l2tp.h b/include/uapi/linux/l2tp.h
index 21caa2631c20..9dd3da50d569 100644
--- a/include/uapi/linux/l2tp.h
+++ b/include/uapi/linux/l2tp.h
@@ -126,6 +126,7 @@ enum {
 	L2TP_ATTR_IP6_DADDR,		/* struct in6_addr */
 	L2TP_ATTR_UDP_ZERO_CSUM6_TX,	/* u8 */
 	L2TP_ATTR_UDP_ZERO_CSUM6_RX,	/* u8 */
+	L2TP_ATTR_PAD,
 	__L2TP_ATTR_MAX,
 };
 
* Unmerged path include/uapi/linux/neighbour.h
diff --git a/include/uapi/linux/tcp_metrics.h b/include/uapi/linux/tcp_metrics.h
index 93533926035c..80ad90d0cfc2 100644
--- a/include/uapi/linux/tcp_metrics.h
+++ b/include/uapi/linux/tcp_metrics.h
@@ -40,6 +40,7 @@ enum {
 	TCP_METRICS_ATTR_FOPEN_COOKIE,		/* binary */
 	TCP_METRICS_ATTR_SADDR_IPV4,		/* u32 */
 	TCP_METRICS_ATTR_SADDR_IPV6,		/* binary */
+	TCP_METRICS_ATTR_PAD,
 
 	__TCP_METRICS_ATTR_MAX,
 };
* Unmerged path net/core/neighbour.c
diff --git a/net/ipv4/tcp_metrics.c b/net/ipv4/tcp_metrics.c
index 02307e286e43..981b2f426d06 100644
--- a/net/ipv4/tcp_metrics.c
+++ b/net/ipv4/tcp_metrics.c
@@ -796,7 +796,8 @@ static int tcp_metrics_fill_info(struct sk_buff *msg,
 	}
 
 	if (nla_put_msecs(msg, TCP_METRICS_ATTR_AGE,
-			  jiffies - tm->tcpm_stamp) < 0)
+			  jiffies - tm->tcpm_stamp,
+			  TCP_METRICS_ATTR_PAD) < 0)
 		goto nla_put_failure;
 	if (tm->tcpm_ts_stamp) {
 		if (nla_put_s32(msg, TCP_METRICS_ATTR_TW_TS_STAMP,
@@ -860,7 +861,8 @@ static int tcp_metrics_fill_info(struct sk_buff *msg,
 		    (nla_put_u16(msg, TCP_METRICS_ATTR_FOPEN_SYN_DROPS,
 				tfom->syn_loss) < 0 ||
 		     nla_put_msecs(msg, TCP_METRICS_ATTR_FOPEN_SYN_DROP_TS,
-				jiffies - tfom->last_syn_loss) < 0))
+				jiffies - tfom->last_syn_loss,
+				TCP_METRICS_ATTR_PAD) < 0))
 			goto nla_put_failure;
 		if (tfom->cookie.len > 0 &&
 		    nla_put(msg, TCP_METRICS_ATTR_FOPEN_COOKIE,
diff --git a/net/l2tp/l2tp_netlink.c b/net/l2tp/l2tp_netlink.c
index a61fcb0e73c4..0231a6d4d64d 100644
--- a/net/l2tp/l2tp_netlink.c
+++ b/net/l2tp/l2tp_netlink.c
@@ -648,7 +648,8 @@ static int l2tp_nl_session_send(struct sk_buff *skb, u32 portid, u32 seq, int fl
 	     nla_put_u8(skb, L2TP_ATTR_USING_IPSEC, 1)) ||
 #endif
 	    (session->reorder_timeout &&
-	     nla_put_msecs(skb, L2TP_ATTR_RECV_TIMEOUT, session->reorder_timeout)))
+	     nla_put_msecs(skb, L2TP_ATTR_RECV_TIMEOUT,
+			   session->reorder_timeout, L2TP_ATTR_PAD)))
 		goto nla_put_failure;
 
 	nest = nla_nest_start(skb, L2TP_ATTR_STATS);
