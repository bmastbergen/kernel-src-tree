net/mlx5e: Implement ndo_tx_timeout callback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Implement ndo_tx_timeout callback (Don Dutile) [1417284]
Rebuild_FUZZ: 95.24%
commit-author Daniel Jurgens <danielj@mellanox.com>
commit 3947ca1859999ac00698c0da0d233813a93d288a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3947ca18.failed

Add callback to handle TX timeouts.

Fixes: f62b8bb8f2d3 ('net/mlx5: Extend mlx5_core to support ConnectX-4 Ethernet functionality')
	Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3947ca1859999ac00698c0da0d233813a93d288a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index d0904277e642,38c1286abb4e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2540,8 -2628,30 +2560,31 @@@ static netdev_features_t mlx5e_features
  
  	return features;
  }
 +#endif
  
+ static void mlx5e_tx_timeout(struct net_device *dev)
+ {
+ 	struct mlx5e_priv *priv = netdev_priv(dev);
+ 	bool sched_work = false;
+ 	int i;
+ 
+ 	netdev_err(dev, "TX timeout detected\n");
+ 
+ 	for (i = 0; i < priv->params.num_channels * priv->params.num_tc; i++) {
+ 		struct mlx5e_sq *sq = priv->txq_to_sq_map[i];
+ 
+ 		if (!netif_tx_queue_stopped(netdev_get_tx_queue(dev, i)))
+ 			continue;
+ 		sched_work = true;
+ 		set_bit(MLX5E_SQ_STATE_TX_TIMEOUT, &sq->state);
+ 		netdev_err(dev, "TX timeout on queue: %d, SQ: 0x%x, CQ: 0x%x, SQ Cons: 0x%x SQ Prod: 0x%x\n",
+ 			   i, sq->sqn, sq->cq.mcq.cqn, sq->cc, sq->pc);
+ 	}
+ 
+ 	if (sched_work && test_bit(MLX5E_STATE_OPENED, &priv->state))
+ 		schedule_work(&priv->tx_timeout_work);
+ }
+ 
  static const struct net_device_ops mlx5e_netdev_ops_basic = {
  	.ndo_open                = mlx5e_open,
  	.ndo_stop                = mlx5e_close,
@@@ -2556,6 -2666,10 +2599,13 @@@
  	.ndo_set_features        = mlx5e_set_features,
  	.ndo_change_mtu          = mlx5e_change_mtu,
  	.ndo_do_ioctl            = mlx5e_ioctl,
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_RFS_ACCEL
+ 	.ndo_rx_flow_steer	 = mlx5e_rx_flow_steer,
+ #endif
+ 	.ndo_tx_timeout          = mlx5e_tx_timeout,
++>>>>>>> 3947ca185999 (net/mlx5e: Implement ndo_tx_timeout callback)
  };
  
  static const struct net_device_ops mlx5e_netdev_ops_sriov = {
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en.h b/drivers/net/ethernet/mellanox/mlx5/core/en.h
index 0ca156ac37a3..85aa1fd14a2c 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@ -485,6 +485,7 @@ struct mlx5e_priv {
 	struct workqueue_struct    *wq;
 	struct work_struct         update_carrier_work;
 	struct work_struct         set_rx_mode_work;
+	struct work_struct         tx_timeout_work;
 	struct delayed_work        update_stats_work;
 
 	struct mlx5_core_dev      *mdev;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
