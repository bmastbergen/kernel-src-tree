tools build: Move tabs to spaces where suitable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit 2fedf79b69cf05b7e8e82a42d749c621155dd812
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2fedf79b.failed

We've been hit several times by a Makefile bug where line indented by
tab was falsely considered as target command.

We prevent this by always using space indentation for everything except
for the target commands.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1480884178-8072-3-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 2fedf79b69cf05b7e8e82a42d749c621155dd812)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/Makefile.feature
#	tools/build/feature/Makefile
diff --cc tools/build/Makefile.feature
index ceee323e4d27,e3fb5ecbdcb6..000000000000
--- a/tools/build/Makefile.feature
+++ b/tools/build/Makefile.feature
@@@ -27,41 -27,43 +27,81 @@@ ende
  #   the rule that uses them - an example for that is the 'bionic'
  #   feature check. ]
  #
++<<<<<<< HEAD
 +FEATURE_TESTS_BASIC :=			\
 +	backtrace			\
 +	dwarf				\
 +	dwarf_getlocations		\
 +	fortify-source			\
 +	sync-compare-and-swap		\
 +	glibc				\
 +	gtk2				\
 +	gtk2-infobar			\
 +	libaudit			\
 +	libbfd				\
 +	libelf				\
 +	libelf-getphdrnum		\
 +	libelf-gelf_getnote		\
 +	libelf-getshdrstrndx		\
 +	libelf-mmap			\
 +	libnuma				\
 +	numa_num_possible_cpus		\
 +	libperl				\
 +	libpython			\
 +	libpython-version		\
 +	libslang			\
 +	libcrypto			\
 +	libunwind			\
 +	libunwind-x86			\
 +	libunwind-x86_64		\
 +	libunwind-arm			\
 +	libunwind-aarch64		\
 +	pthread-attr-setaffinity-np	\
 +	stackprotector-all		\
 +	timerfd				\
 +	libdw-dwarf-unwind		\
 +	zlib				\
 +	lzma				\
 +	get_cpuid
++=======
+ FEATURE_TESTS_BASIC :=                  \
+         backtrace                       \
+         dwarf                           \
+         dwarf_getlocations              \
+         fortify-source                  \
+         sync-compare-and-swap           \
+         glibc                           \
+         gtk2                            \
+         gtk2-infobar                    \
+         libaudit                        \
+         libbfd                          \
+         libelf                          \
+         libelf-getphdrnum               \
+         libelf-gelf_getnote             \
+         libelf-getshdrstrndx            \
+         libelf-mmap                     \
+         libnuma                         \
+         numa_num_possible_cpus          \
+         libperl                         \
+         libpython                       \
+         libpython-version               \
+         libslang                        \
+         libcrypto                       \
+         libunwind                       \
+         libunwind-x86                   \
+         libunwind-x86_64                \
+         libunwind-arm                   \
+         libunwind-aarch64               \
+         pthread-attr-setaffinity-np     \
+         stackprotector-all              \
+         timerfd                         \
+         libdw-dwarf-unwind              \
+         zlib                            \
+         lzma                            \
+         get_cpuid                       \
+         bpf                             \
+         sdt
++>>>>>>> 2fedf79b69cf (tools build: Move tabs to spaces where suitable)
  
  # FEATURE_TESTS_BASIC + FEATURE_TESTS_EXTRA is the complete list
  # of all feature tests
@@@ -84,25 -86,26 +124,48 @@@ ifeq ($(FEATURE_TESTS),all
    FEATURE_TESTS := $(FEATURE_TESTS_BASIC) $(FEATURE_TESTS_EXTRA)
  endif
  
++<<<<<<< HEAD
 +FEATURE_DISPLAY ?=			\
 +	dwarf				\
 +	dwarf_getlocations		\
 +	glibc				\
 +	gtk2				\
 +	libaudit			\
 +	libbfd				\
 +	libelf				\
 +	libnuma				\
 +	numa_num_possible_cpus		\
 +	libperl				\
 +	libpython			\
 +	libslang			\
 +	libcrypto			\
 +	libunwind			\
 +	libdw-dwarf-unwind		\
 +	zlib				\
 +	lzma				\
 +	get_cpuid
++=======
+ FEATURE_DISPLAY ?=              \
+          dwarf                  \
+          dwarf_getlocations     \
+          glibc                  \
+          gtk2                   \
+          libaudit               \
+          libbfd                 \
+          libelf                 \
+          libnuma                \
+          numa_num_possible_cpus \
+          libperl                \
+          libpython              \
+          libslang               \
+          libcrypto              \
+          libunwind              \
+          libdw-dwarf-unwind     \
+          zlib                   \
+          lzma                   \
+          get_cpuid              \
+          bpf
++>>>>>>> 2fedf79b69cf (tools build: Move tabs to spaces where suitable)
  
  # Set FEATURE_CHECK_(C|LD)FLAGS-all for all FEATURE_TESTS features.
  # If in the future we need per-feature checks/flags for features not
diff --cc tools/build/feature/Makefile
index 017397a4639a,303196c16019..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -1,50 -1,54 +1,104 @@@
++<<<<<<< HEAD
 +FILES=					\
 +	test-all.bin			\
 +	test-backtrace.bin		\
 +	test-bionic.bin			\
 +	test-dwarf.bin			\
 +	test-dwarf_getlocations.bin	\
 +	test-fortify-source.bin		\
 +	test-sync-compare-and-swap.bin	\
 +	test-glibc.bin			\
 +	test-gtk2.bin			\
 +	test-gtk2-infobar.bin		\
 +	test-hello.bin			\
 +	test-libaudit.bin		\
 +	test-libbfd.bin			\
 +	test-liberty.bin		\
 +	test-liberty-z.bin		\
 +	test-cplus-demangle.bin		\
 +	test-libelf.bin			\
 +	test-libelf-getphdrnum.bin	\
 +	test-libelf-gelf_getnote.bin	\
 +	test-libelf-getshdrstrndx.bin	\
 +	test-libelf-mmap.bin		\
 +	test-libnuma.bin		\
 +	test-numa_num_possible_cpus.bin	\
 +	test-libperl.bin		\
 +	test-libpython.bin		\
 +	test-libpython-version.bin	\
 +	test-libslang.bin		\
 +	test-libcrypto.bin		\
 +	test-libunwind.bin		\
 +	test-libunwind-debug-frame.bin	\
 +	test-libunwind-x86.bin		\
 +	test-libunwind-x86_64.bin	\
 +	test-libunwind-arm.bin		\
 +	test-libunwind-aarch64.bin	\
 +	test-libunwind-debug-frame-arm.bin	\
 +	test-libunwind-debug-frame-aarch64.bin	\
 +	test-pthread-attr-setaffinity-np.bin	\
 +	test-stackprotector-all.bin	\
 +	test-timerfd.bin		\
 +	test-libdw-dwarf-unwind.bin	\
 +	test-libbabeltrace.bin		\
 +	test-compile-32.bin		\
 +	test-compile-x32.bin		\
 +	test-zlib.bin			\
 +	test-lzma.bin			\
 +	test-get_cpuid.bin
++=======
+ FILES=                                          \
+          test-all.bin                           \
+          test-backtrace.bin                     \
+          test-bionic.bin                        \
+          test-dwarf.bin                         \
+          test-dwarf_getlocations.bin            \
+          test-fortify-source.bin                \
+          test-sync-compare-and-swap.bin         \
+          test-glibc.bin                         \
+          test-gtk2.bin                          \
+          test-gtk2-infobar.bin                  \
+          test-hello.bin                         \
+          test-libaudit.bin                      \
+          test-libbfd.bin                        \
+          test-liberty.bin                       \
+          test-liberty-z.bin                     \
+          test-cplus-demangle.bin                \
+          test-libelf.bin                        \
+          test-libelf-getphdrnum.bin             \
+          test-libelf-gelf_getnote.bin           \
+          test-libelf-getshdrstrndx.bin          \
+          test-libelf-mmap.bin                   \
+          test-libnuma.bin                       \
+          test-numa_num_possible_cpus.bin        \
+          test-libperl.bin                       \
+          test-libpython.bin                     \
+          test-libpython-version.bin             \
+          test-libslang.bin                      \
+          test-libcrypto.bin                     \
+          test-libunwind.bin                     \
+          test-libunwind-debug-frame.bin         \
+          test-libunwind-x86.bin                 \
+          test-libunwind-x86_64.bin              \
+          test-libunwind-arm.bin                 \
+          test-libunwind-aarch64.bin             \
+          test-libunwind-debug-frame-arm.bin     \
+          test-libunwind-debug-frame-aarch64.bin \
+          test-pthread-attr-setaffinity-np.bin   \
+          test-stackprotector-all.bin            \
+          test-timerfd.bin                       \
+          test-libdw-dwarf-unwind.bin            \
+          test-libbabeltrace.bin                 \
+          test-compile-32.bin                    \
+          test-compile-x32.bin                   \
+          test-zlib.bin                          \
+          test-lzma.bin                          \
+          test-bpf.bin                           \
+          test-get_cpuid.bin                     \
+          test-sdt.bin                           \
+          test-cxx.bin                           \
+          test-jvmti.bin
++>>>>>>> 2fedf79b69cf (tools build: Move tabs to spaces where suitable)
  
  FILES := $(addprefix $(OUTPUT),$(FILES))
  
diff --git a/tools/build/Build.include b/tools/build/Build.include
index 475152c52871..418871d02ebf 100644
--- a/tools/build/Build.include
+++ b/tools/build/Build.include
@@ -72,15 +72,15 @@ dep-cmd = $(if $(wildcard $(fixdep)),
 #                   target, or command line has changed and update
 #                   dependencies in the cmd file
 if_changed_dep = $(if $(strip $(any-prereq) $(arg-check)),         \
-	@set -e;                                                   \
-	$(echo-cmd) $(cmd_$(1)) && $(dep-cmd))
+                  @set -e;                                         \
+                  $(echo-cmd) $(cmd_$(1)) && $(dep-cmd))
 
 # if_changed      - execute command if any prerequisite is newer than
 #                   target, or command line has changed
-if_changed = $(if $(strip $(any-prereq) $(arg-check)),             \
-	@set -e;                                                   \
-	$(echo-cmd) $(cmd_$(1));                                   \
-	printf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-target).cmd)
+if_changed = $(if $(strip $(any-prereq) $(arg-check)),                   \
+              @set -e;                                                   \
+              $(echo-cmd) $(cmd_$(1));                                   \
+              printf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-target).cmd)
 
 ###
 # C flags to be used in rule definitions, includes:
* Unmerged path tools/build/Makefile.feature
* Unmerged path tools/build/feature/Makefile
