scsi: lpfc: Rename LPFC_MAX_EQ_DELAY to LPFC_MAX_EQ_DELAY_EQID_CNT

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] revert "lpfc: Rename LPFC_MAX_EQ_DELAY to LPFC_MAX_EQ_DELAY_EQID_CNT" (Ewan Milne) [1444045]
Rebuild_FUZZ: 90.37%
commit-author James Smart <jsmart2021@gmail.com>
commit 43140ca68d1a071ddbe92f10a3256e01701ae390
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/43140ca6.failed

Without apriori understanding of what the define is, the name gives
a very different impression of what it is (a max delay value
for an EQ).  Rename the define so it reflects what it is: the number
of EQ IDs that can be set in one instance of the MODIFY_EQ_DELAY
mbx command.

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 43140ca68d1a071ddbe92f10a3256e01701ae390)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_attr.c
#	drivers/scsi/lpfc/lpfc_init.c
diff --cc drivers/scsi/lpfc/lpfc_attr.c
index c5f7d60f9dff,fbd3a563be53..000000000000
--- a/drivers/scsi/lpfc/lpfc_attr.c
+++ b/drivers/scsi/lpfc/lpfc_attr.c
@@@ -4228,8 -4457,9 +4228,14 @@@ lpfc_fcp_imax_store(struct device *dev
  		return -EINVAL;
  
  	phba->cfg_fcp_imax = (uint32_t)val;
++<<<<<<< HEAD
 +	for (i = 0; i < phba->cfg_fcp_io_channel; i += LPFC_MAX_EQ_DELAY)
 +		lpfc_modify_fcp_eq_delay(phba, i);
++=======
+ 
+ 	for (i = 0; i < phba->io_channel_irqs; i += LPFC_MAX_EQ_DELAY_EQID_CNT)
+ 		lpfc_modify_hba_eq_delay(phba, i);
++>>>>>>> 43140ca68d1a (scsi: lpfc: Rename LPFC_MAX_EQ_DELAY to LPFC_MAX_EQ_DELAY_EQID_CNT)
  
  	return strlen(buf);
  }
diff --cc drivers/scsi/lpfc/lpfc_init.c
index bbd4080d8122,c883110178ea..000000000000
--- a/drivers/scsi/lpfc/lpfc_init.c
+++ b/drivers/scsi/lpfc/lpfc_init.c
@@@ -7910,34 -8756,13 +7910,40 @@@ lpfc_sli4_queue_setup(struct lpfc_hba *
  		}
  	}
  
++<<<<<<< HEAD
 +	/*
 +	 * Configure EQ delay multipier for interrupt coalescing using
 +	 * MODIFY_EQ_DELAY for all EQs created, LPFC_MAX_EQ_DELAY at a time.
 +	 */
 +	for (fcp_eqidx = 0; fcp_eqidx < phba->cfg_fcp_io_channel;
 +			fcp_eqidx += LPFC_MAX_EQ_DELAY)
 +		lpfc_modify_fcp_eq_delay(phba, fcp_eqidx);
++=======
+ 	for (qidx = 0; qidx < io_channel; qidx += LPFC_MAX_EQ_DELAY_EQID_CNT)
+ 		lpfc_modify_hba_eq_delay(phba, qidx);
+ 
++>>>>>>> 43140ca68d1a (scsi: lpfc: Rename LPFC_MAX_EQ_DELAY to LPFC_MAX_EQ_DELAY_EQID_CNT)
  	return 0;
  
 -out_destroy:
 -	lpfc_sli4_queue_unset(phba);
 +out_destroy_els_rq:
 +	lpfc_rq_destroy(phba, phba->sli4_hba.hdr_rq, phba->sli4_hba.dat_rq);
 +out_destroy_els_wq:
 +	lpfc_wq_destroy(phba, phba->sli4_hba.els_wq);
 +out_destroy_mbx_wq:
 +	lpfc_mq_destroy(phba, phba->sli4_hba.mbx_wq);
 +out_destroy_els_cq:
 +	lpfc_cq_destroy(phba, phba->sli4_hba.els_cq);
 +out_destroy_mbx_cq:
 +	lpfc_cq_destroy(phba, phba->sli4_hba.mbx_cq);
 +out_destroy_fcp_wq:
 +	for (--fcp_wqidx; fcp_wqidx >= 0; fcp_wqidx--)
 +		lpfc_wq_destroy(phba, phba->sli4_hba.fcp_wq[fcp_wqidx]);
 +out_destroy_fcp_cq:
 +	for (--fcp_cqidx; fcp_cqidx >= 0; fcp_cqidx--)
 +		lpfc_cq_destroy(phba, phba->sli4_hba.fcp_cq[fcp_cqidx]);
 +out_destroy_hba_eq:
 +	for (--fcp_eqidx; fcp_eqidx >= 0; fcp_eqidx--)
 +		lpfc_eq_destroy(phba, phba->sli4_hba.hba_eq[fcp_eqidx]);
  out_error:
  	return rc;
  }
* Unmerged path drivers/scsi/lpfc/lpfc_attr.c
diff --git a/drivers/scsi/lpfc/lpfc_hw4.h b/drivers/scsi/lpfc/lpfc_hw4.h
index 554ba749ed19..19cb0909637e 100644
--- a/drivers/scsi/lpfc/lpfc_hw4.h
+++ b/drivers/scsi/lpfc/lpfc_hw4.h
@@ -990,7 +990,7 @@ struct eq_delay_info {
 	uint32_t phase;
 	uint32_t delay_multi;
 };
-#define	LPFC_MAX_EQ_DELAY	8
+#define	LPFC_MAX_EQ_DELAY_EQID_CNT	8
 
 struct sgl_page_pairs {
 	uint32_t sgl_pg0_addr_lo;
@@ -1059,7 +1059,7 @@ struct lpfc_mbx_modify_eq_delay {
 	union {
 		struct {
 			uint32_t num_eq;
-			struct eq_delay_info eq[LPFC_MAX_EQ_DELAY];
+			struct eq_delay_info eq[LPFC_MAX_EQ_DELAY_EQID_CNT];
 		} request;
 		struct {
 			uint32_t word0;
* Unmerged path drivers/scsi/lpfc/lpfc_init.c
diff --git a/drivers/scsi/lpfc/lpfc_sli.c b/drivers/scsi/lpfc/lpfc_sli.c
index c1522c6b2e42..cb93a492c2c0 100644
--- a/drivers/scsi/lpfc/lpfc_sli.c
+++ b/drivers/scsi/lpfc/lpfc_sli.c
@@ -1,3 +1,4 @@
+
 /*******************************************************************
  * This file is part of the Emulex Linux Device Driver for         *
  * Fibre Channel Host Bus Adapters.                                *
@@ -12937,6 +12938,8 @@ lpfc_dual_chute_pci_bar_map(struct lpfc_hba *phba, uint16_t pci_barset)
  * @startq: The starting FCP EQ to modify
  *
  * This function sends an MODIFY_EQ_DELAY mailbox command to the HBA.
+ * The command allows up to LPFC_MAX_EQ_DELAY_EQID_CNT EQ ID's to be
+ * updated in one mailbox command.
  *
  * The @phba struct is used to send mailbox command to HBA. The @startq
  * is used to get the starting FCP EQ to change.
@@ -12990,7 +12993,7 @@ lpfc_modify_fcp_eq_delay(struct lpfc_hba *phba, uint32_t startq)
 		eq_delay->u.request.eq[cnt].phase = 0;
 		eq_delay->u.request.eq[cnt].delay_multi = dmult;
 		cnt++;
-		if (cnt >= LPFC_MAX_EQ_DELAY)
+		if (cnt >= LPFC_MAX_EQ_DELAY_EQID_CNT)
 			break;
 	}
 	eq_delay->u.request.num_eq = cnt;
