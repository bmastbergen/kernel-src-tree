btrfs: sink gfp parameter to convert_extent_bit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author David Sterba <dsterba@suse.com>
commit 210aa27768bec4297a9d6ad0e5cab45935c775e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/210aa277.failed

Single caller passes GFP_NOFS. We can get rid of the
gfpflags_allow_blocking checks as NOFS can block but does not recurse to
filesystem through reclaim.

	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit 210aa27768bec4297a9d6ad0e5cab45935c775e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent_io.c
diff --cc fs/btrfs/extent_io.c
index 4153678ab6b8,c1139bcf8870..000000000000
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@@ -1098,7 -1104,7 +1099,11 @@@ int convert_extent_bit(struct extent_io
  	btrfs_debug_check_extent_io_range(tree, start, end);
  
  again:
++<<<<<<< HEAD
 +	if (!prealloc && (mask & __GFP_WAIT)) {
++=======
+ 	if (!prealloc) {
++>>>>>>> 210aa27768be (btrfs: sink gfp parameter to convert_extent_bit)
  		/*
  		 * Best effort, don't worry if extent state allocation fails
  		 * here for the first iteration. We might have a cached state
@@@ -1267,8 -1273,7 +1272,12 @@@ search_again
  	if (start > end)
  		goto out;
  	spin_unlock(&tree->lock);
++<<<<<<< HEAD
 +	if (mask & __GFP_WAIT)
 +		cond_resched();
++=======
+ 	cond_resched();
++>>>>>>> 210aa27768be (btrfs: sink gfp parameter to convert_extent_bit)
  	first_iteration = false;
  	goto again;
  
* Unmerged path fs/btrfs/extent_io.c
diff --git a/fs/btrfs/extent_io.h b/fs/btrfs/extent_io.h
index c7b1fc085048..bc66e4788d1f 100644
--- a/fs/btrfs/extent_io.h
+++ b/fs/btrfs/extent_io.h
@@ -286,7 +286,7 @@ static inline int clear_extent_dirty(struct extent_io_tree *tree, u64 start,
 
 int convert_extent_bit(struct extent_io_tree *tree, u64 start, u64 end,
 		       unsigned bits, unsigned clear_bits,
-		       struct extent_state **cached_state, gfp_t mask);
+		       struct extent_state **cached_state);
 
 static inline int set_extent_delalloc(struct extent_io_tree *tree, u64 start,
 		u64 end, struct extent_state **cached_state, gfp_t mask)
diff --git a/fs/btrfs/transaction.c b/fs/btrfs/transaction.c
index 7fb3e68c34d6..aaa2aa4d4982 100644
--- a/fs/btrfs/transaction.c
+++ b/fs/btrfs/transaction.c
@@ -943,7 +943,7 @@ int btrfs_write_marked_extents(struct btrfs_root *root,
 
 		err = convert_extent_bit(dirty_pages, start, end,
 					 EXTENT_NEED_WAIT,
-					 mark, &cached_state, GFP_NOFS);
+					 mark, &cached_state);
 		/*
 		 * convert_extent_bit can return -ENOMEM, which is most of the
 		 * time a temporary error. So when it happens, ignore the error
