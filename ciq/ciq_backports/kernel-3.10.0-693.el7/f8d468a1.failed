Btrfs: fix mount -o clear_cache,space_cache=v2

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [fs] btrfs: fix mount -o clear_cache, space_cache=v2 (Bill O'Donnell) [1399590]
Rebuild_FUZZ: 98.92%
commit-author Omar Sandoval <osandov@fb.com>
commit f8d468a15c22b954b379aa0c74914d5068448fb1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f8d468a1.failed

We moved the code for creating the free space tree the first time that
it's enabled, but didn't move the clearing code along with it. This
breaks my (undocumented) intention that `mount -o
clear_cache,space_cache=v2` would clear the free space tree and then
recreate it.

Fixes: 511711af91f2 ("btrfs: don't run delayed references while we are creating the free space tree")
	Cc: stable@vger.kernel.org # 4.5+
	Tested-by: Holger Hoffst√§tte <holger@applied-asynchrony.com>
	Tested-by: Chandan Rajendra <chandan@linux.vnet.ibm.com>
	Signed-off-by: Omar Sandoval <osandov@fb.com>
	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit f8d468a15c22b954b379aa0c74914d5068448fb1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/disk-io.c
diff --cc fs/btrfs/disk-io.c
index e91f5fae0f68,c0bfc6ce5f06..000000000000
--- a/fs/btrfs/disk-io.c
+++ b/fs/btrfs/disk-io.c
@@@ -3124,6 -3129,30 +3124,33 @@@ retry_root_backup
  	if (sb->s_flags & MS_RDONLY)
  		return 0;
  
++<<<<<<< HEAD
++=======
+ 	if (btrfs_test_opt(fs_info, CLEAR_CACHE) &&
+ 	    btrfs_fs_compat_ro(fs_info, FREE_SPACE_TREE)) {
+ 		btrfs_info(fs_info, "clearing free space tree");
+ 		ret = btrfs_clear_free_space_tree(fs_info);
+ 		if (ret) {
+ 			btrfs_warn(fs_info,
+ 				   "failed to clear free space tree: %d", ret);
+ 			close_ctree(tree_root);
+ 			return ret;
+ 		}
+ 	}
+ 
+ 	if (btrfs_test_opt(tree_root->fs_info, FREE_SPACE_TREE) &&
+ 	    !btrfs_fs_compat_ro(fs_info, FREE_SPACE_TREE)) {
+ 		btrfs_info(fs_info, "creating free space tree");
+ 		ret = btrfs_create_free_space_tree(fs_info);
+ 		if (ret) {
+ 			btrfs_warn(fs_info,
+ 				"failed to create free space tree: %d", ret);
+ 			close_ctree(tree_root);
+ 			return ret;
+ 		}
+ 	}
+ 
++>>>>>>> f8d468a15c22 (Btrfs: fix mount -o clear_cache,space_cache=v2)
  	down_read(&fs_info->cleanup_work_sem);
  	if ((ret = btrfs_orphan_cleanup(fs_info->fs_root)) ||
  	    (ret = btrfs_orphan_cleanup(fs_info->tree_root))) {
* Unmerged path fs/btrfs/disk-io.c
