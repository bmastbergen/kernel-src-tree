efi/esrt: Use memremap not ioremap to access ESRT table in memory

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Ard Biesheuvel <ard.biesheuvel@linaro.org>
commit f58a37b2e01f91c23af457a7662f6b5a1e9f41e0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f58a37b2.failed

On ARM and arm64, ioremap() and memremap() are not interchangeable like
on x86, and the use of ioremap() on ordinary RAM is typically flagged
as an error if the memory region being mapped is also covered by the
linear mapping, since that would lead to aliases with conflicting
cacheability attributes.

Since what we are dealing with is not an I/O region with side effects,
using ioremap() here is arguably incorrect anyway, so let's replace
it with memremap() instead.

	Acked-by: Peter Jones <pjones@redhat.com>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Leif Lindholm <leif.lindholm@linaro.org>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
(cherry picked from commit f58a37b2e01f91c23af457a7662f6b5a1e9f41e0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/efi/esrt.c
* Unmerged path drivers/firmware/efi/esrt.c
* Unmerged path drivers/firmware/efi/esrt.c
