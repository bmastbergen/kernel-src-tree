ntb_transport: Remove unnecessary call to ntb_peer_spad_read

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Steve Wahl <Steve.Wahl@dell.com>
commit dfb7d24c5ad5c986f2417f52784738b67cfedd4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/dfb7d24c.failed

The results were previously ignored, anyway.

	Signed-off-by: Steve Wahl <Steve.Wahl@dell.com>
Fixes: e26a5843f7f5014ae4460030ca4de029a3ac35d3
	Acked-by: Allen Hubbe <Allen.Hubbe@dell.com>
	Signed-off-by: Jon Mason <jdmason@kudzu.us>
(cherry picked from commit dfb7d24c5ad5c986f2417f52784738b67cfedd4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/ntb_transport.c
diff --cc drivers/ntb/ntb_transport.c
index cc39efa77597,f81aa4b18d9f..000000000000
--- a/drivers/ntb/ntb_transport.c
+++ b/drivers/ntb/ntb_transport.c
@@@ -818,38 -948,31 +818,42 @@@ static void ntb_qp_link_work(struct wor
  	struct ntb_transport_qp *qp = container_of(work,
  						   struct ntb_transport_qp,
  						   link_work.work);
 -	struct pci_dev *pdev = qp->ndev->pdev;
 -	struct ntb_transport_ctx *nt = qp->transport;
 -	int val;
 +	struct pci_dev *pdev = ntb_query_pdev(qp->ndev);
 +	struct ntb_transport *nt = qp->transport;
 +	int rc, val;
  
 -	WARN_ON(!nt->link_is_up);
 +	WARN_ON(nt->transport_link != NTB_LINK_UP);
  
 -	val = ntb_spad_read(nt->ndev, QP_LINKS);
 +	rc = ntb_read_local_spad(nt->ndev, QP_LINKS, &val);
 +	if (rc) {
 +		dev_err(&pdev->dev, "Error reading spad %d\n", QP_LINKS);
 +		return;
 +	}
  
 -	ntb_peer_spad_write(nt->ndev, QP_LINKS, val | BIT(qp->qp_num));
 +	rc = ntb_write_remote_spad(nt->ndev, QP_LINKS, val | 1 << qp->qp_num);
 +	if (rc)
 +		dev_err(&pdev->dev, "Error writing %x to remote spad %d\n",
 +			val | 1 << qp->qp_num, QP_LINKS);
  
  	/* query remote spad for qp ready bits */
++<<<<<<< HEAD
 +	rc = ntb_read_remote_spad(nt->ndev, QP_LINKS, &val);
 +	if (rc)
 +		dev_err(&pdev->dev, "Error reading remote spad %d\n", QP_LINKS);
 +
 +	dev_dbg(&pdev->dev, "Remote QP link status = %x\n", val);
++=======
+ 	dev_dbg_ratelimited(&pdev->dev, "Remote QP link status = %x\n", val);
++>>>>>>> dfb7d24c5ad5 (ntb_transport: Remove unnecessary call to ntb_peer_spad_read)
  
  	/* See if the remote side is up */
 -	if (val & BIT(qp->qp_num)) {
 -		dev_info(&pdev->dev, "qp %d: Link Up\n", qp->qp_num);
 -		qp->link_is_up = true;
 -		qp->active = true;
 +	if (1 << qp->qp_num & val) {
 +		qp->qp_link = NTB_LINK_UP;
  
 +		dev_info(&pdev->dev, "qp %d: Link Up\n", qp->qp_num);
  		if (qp->event_handler)
 -			qp->event_handler(qp->cb_data, qp->link_is_up);
 -
 -		if (qp->active)
 -			tasklet_schedule(&qp->rxc_db_work);
 -	} else if (nt->link_is_up)
 +			qp->event_handler(qp->cb_data, NTB_LINK_UP);
 +	} else if (nt->transport_link == NTB_LINK_UP)
  		schedule_delayed_work(&qp->link_work,
  				      msecs_to_jiffies(NTB_LINK_DOWN_TIMEOUT));
  }
* Unmerged path drivers/ntb/ntb_transport.c
