scsi: aacraid: Retrieve HBA host information ioctl

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] aacraid: Retrieve HBA host information ioctl (Scott Benesh) [1384213]
Rebuild_FUZZ: 93.62%
commit-author Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
commit c799d519bf088c0c5deb481b0190990417ace1bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c799d519.failed

Added a new ioctl interface to retrieve the host device information.

	Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
	Signed-off-by: Dave Carroll <David.Carroll@microsemi.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit c799d519bf088c0c5deb481b0190990417ace1bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/aacraid/aacraid.h
#	drivers/scsi/aacraid/commctrl.c
diff --cc drivers/scsi/aacraid/aacraid.h
index 2da9fa038912,40733967464b..000000000000
--- a/drivers/scsi/aacraid/aacraid.h
+++ b/drivers/scsi/aacraid/aacraid.h
@@@ -2135,6 -2333,15 +2135,18 @@@ struct revisio
  #define FSACTL_FORCE_DELETE_DISK		CTL_CODE(2120, METHOD_NEITHER)
  #define FSACTL_GET_CONTAINERS			2131
  #define FSACTL_SEND_LARGE_FIB			CTL_CODE(2138, METHOD_BUFFERED)
++<<<<<<< HEAD
++=======
+ #define FSACTL_RESET_IOP			CTL_CODE(2140, METHOD_BUFFERED)
+ #define FSACTL_GET_HBA_INFO			CTL_CODE(2150, METHOD_BUFFERED)
+ /* flags defined for IOP & HW SOFT RESET */
+ #define HW_IOP_RESET				0x01
+ #define HW_SOFT_RESET				0x02
+ #define IOP_HWSOFT_RESET			(HW_IOP_RESET | HW_SOFT_RESET)
+ /* HW Soft Reset register offset */
+ #define IBW_SWR_OFFSET				0x4000
+ #define SOFT_RESET_TIME			60
++>>>>>>> c799d519bf08 (scsi: aacraid: Retrieve HBA host information ioctl)
  
  
  struct aac_common
@@@ -2164,7 -2373,57 +2176,58 @@@
  
  extern struct aac_common aac_config;
  
 +
+ /*
+  * This is for management ioctl purpose only.
+  */
+ struct aac_hba_info {
+ 
+ 	u8	driver_name[50];
+ 	u8	adapter_number;
+ 	u8	system_io_bus_number;
+ 	u8	device_number;
+ 	u32	function_number;
+ 	u32	vendor_id;
+ 	u32	device_id;
+ 	u32	sub_vendor_id;
+ 	u32	sub_system_id;
+ 	u32	mapped_base_address_size;
+ 	u32	base_physical_address_high_part;
+ 	u32	base_physical_address_low_part;
+ 
+ 	u32	max_command_size;
+ 	u32	max_fib_size;
+ 	u32	max_scatter_gather_from_os;
+ 	u32	max_scatter_gather_to_fw;
+ 	u32	max_outstanding_fibs;
+ 
+ 	u32	queue_start_threshold;
+ 	u32	queue_dump_threshold;
+ 	u32	max_io_size_queued;
+ 	u32	outstanding_io;
+ 
+ 	u32	firmware_build_number;
+ 	u32	bios_build_number;
+ 	u32	driver_build_number;
+ 	u32	serial_number_high_part;
+ 	u32	serial_number_low_part;
+ 	u32	supported_options;
+ 	u32	feature_bits;
+ 	u32	currentnumber_ports;
+ 
+ 	u8	new_comm_interface:1;
+ 	u8	new_commands_supported:1;
+ 	u8	disable_passthrough:1;
+ 	u8	expose_non_dasd:1;
+ 	u8	queue_allowed:1;
+ 	u8	bled_check_enabled:1;
+ 	u8	reserved1:1;
+ 	u8	reserted2:1;
+ 
+ 	u32	reserved3[10];
+ 
+ };
+ 
  /*
   *	The following macro is used when sending and receiving FIBs. It is
   *	only used for debugging.
diff --cc drivers/scsi/aacraid/commctrl.c
index 5648b715fed9,033a054d6c6d..000000000000
--- a/drivers/scsi/aacraid/commctrl.c
+++ b/drivers/scsi/aacraid/commctrl.c
@@@ -857,7 -1011,45 +857,36 @@@ static int aac_get_pci_info(struct aac_
  	}
  	return 0;
  }
++<<<<<<< HEAD
++=======
+ 
+ static int aac_get_hba_info(struct aac_dev *dev, void __user *arg)
+ {
+ 	struct aac_hba_info hbainfo;
+ 
+ 	hbainfo.adapter_number		= (u8) dev->id;
+ 	hbainfo.system_io_bus_number	= dev->pdev->bus->number;
+ 	hbainfo.device_number		= (dev->pdev->devfn >> 3);
+ 	hbainfo.function_number		= (dev->pdev->devfn & 0x0007);
+ 
+ 	hbainfo.vendor_id		= dev->pdev->vendor;
+ 	hbainfo.device_id		= dev->pdev->device;
+ 	hbainfo.sub_vendor_id		= dev->pdev->subsystem_vendor;
+ 	hbainfo.sub_system_id		= dev->pdev->subsystem_device;
+ 
+ 	if (copy_to_user(arg, &hbainfo, sizeof(struct aac_hba_info))) {
+ 		dprintk((KERN_DEBUG "aacraid: Could not copy hba info\n"));
+ 		return -EFAULT;
+ 	}
+ 
+ 	return 0;
+ }
+ 
+ struct aac_reset_iop {
+ 	u8	reset_type;
+ };
++>>>>>>> c799d519bf08 (scsi: aacraid: Retrieve HBA host information ioctl)
  
 -static int aac_send_reset_adapter(struct aac_dev *dev, void __user *arg)
 -{
 -	struct aac_reset_iop reset;
 -	int retval;
 -
 -	if (copy_from_user((void *)&reset, arg, sizeof(struct aac_reset_iop)))
 -		return -EFAULT;
 -
 -	retval = aac_reset_adapter(dev, 0, reset.reset_type);
 -	return retval;
 -
 -}
  
  int aac_do_ioctl(struct aac_dev * dev, int cmd, void __user *arg)
  {
@@@ -901,6 -1093,13 +930,16 @@@
  	case FSACTL_GET_PCI_INFO:
  		status = aac_get_pci_info(dev,arg);
  		break;
++<<<<<<< HEAD
++=======
+ 	case FSACTL_GET_HBA_INFO:
+ 		status = aac_get_hba_info(dev, arg);
+ 		break;
+ 	case FSACTL_RESET_IOP:
+ 		status = aac_send_reset_adapter(dev, arg);
+ 		break;
+ 
++>>>>>>> c799d519bf08 (scsi: aacraid: Retrieve HBA host information ioctl)
  	default:
  		status = -ENOTTY;
  		break;
* Unmerged path drivers/scsi/aacraid/aacraid.h
* Unmerged path drivers/scsi/aacraid/commctrl.c
