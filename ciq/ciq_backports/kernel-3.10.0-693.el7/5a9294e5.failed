autofs: don't get stuck in a loop if vfs_write() returns an error

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Andrey Vagin <avagin@openvz.org>
commit 5a9294e5c535deab69831076af15cd35e1c95f8b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5a9294e5.failed

__vfs_write() returns a negative value in a error case.

Link: http://lkml.kernel.org/r/20160616083108.6278.65815.stgit@pluto.themaw.net
	Signed-off-by: Andrey Vagin <avagin@openvz.org>
	Signed-off-by: Ian Kent <raven@themaw.net>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 5a9294e5c535deab69831076af15cd35e1c95f8b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/autofs4/waitq.c
diff --cc fs/autofs4/waitq.c
index 71b3baf9aaca,631f1554c87b..000000000000
--- a/fs/autofs4/waitq.c
+++ b/fs/autofs4/waitq.c
@@@ -69,8 -66,10 +69,15 @@@ static int autofs4_write(struct autofs_
  	set_fs(KERNEL_DS);
  
  	mutex_lock(&sbi->pipe_mutex);
++<<<<<<< HEAD
 +	while (bytes &&
 +	       (wr = file->f_op->write(file,data,bytes,&file->f_pos)) > 0) {
++=======
+ 	while (bytes) {
+ 		wr = __vfs_write(file, data, bytes, &file->f_pos);
+ 		if (wr <= 0)
+ 			break;
++>>>>>>> 5a9294e5c535 (autofs: don't get stuck in a loop if vfs_write() returns an error)
  		data += wr;
  		bytes -= wr;
  	}
* Unmerged path fs/autofs4/waitq.c
