pNFS: Fix post-layoutget error handling in pnfs_update_layout()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 56b38a1f7c781519eef09c1668a3c97ea911f86b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/56b38a1f.failed

The non-retry error path is currently broken and ends up releasing the
reference to the layout twice. It also can end up clearing the
NFS_LAYOUT_FIRST_LAYOUTGET flag twice, causing a race.

In addition, the retry path will fail to decrement the plh_outstanding
counter.

Fixes: 183d9e7b112aa ("pnfs: rework LAYOUTGET retry handling")
	Cc: stable@vger.kernel.org # 4.7
	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
	Reviewed-by: Jeff Layton <jlayton@redhat.com>
(cherry picked from commit 56b38a1f7c781519eef09c1668a3c97ea911f86b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/pnfs.c
diff --cc fs/nfs/pnfs.c
index fe569dd6f6b9,563f131c9abe..000000000000
--- a/fs/nfs/pnfs.c
+++ b/fs/nfs/pnfs.c
@@@ -1631,12 -1640,39 +1631,48 @@@ lookup_again
  		arg.length += pg_offset;
  	}
  	if (arg.length != NFS4_MAX_UINT64)
++<<<<<<< HEAD
 +		arg.length = PAGE_CACHE_ALIGN(arg.length);
 +
 +	lseg = send_layoutget(lo, ctx, &arg, gfp_flags);
 +	atomic_dec(&lo->plh_outstanding);
 +	trace_pnfs_update_layout(ino, pos, count, iomode, lo,
 +				 PNFS_UPDATE_LAYOUT_SEND_LAYOUTGET);
++=======
+ 		arg.length = PAGE_ALIGN(arg.length);
+ 
+ 	lseg = send_layoutget(lo, ctx, &stateid, &arg, &timeout, gfp_flags);
+ 	trace_pnfs_update_layout(ino, pos, count, iomode, lo, lseg,
+ 				 PNFS_UPDATE_LAYOUT_SEND_LAYOUTGET);
+ 	atomic_dec(&lo->plh_outstanding);
+ 	if (IS_ERR(lseg)) {
+ 		switch(PTR_ERR(lseg)) {
+ 		case -ERECALLCONFLICT:
+ 			if (time_after(jiffies, giveup))
+ 				lseg = NULL;
+ 			/* Fallthrough */
+ 		case -EAGAIN:
+ 			break;
+ 		default:
+ 			if (!nfs_error_is_fatal(PTR_ERR(lseg))) {
+ 				pnfs_layout_clear_fail_bit(lo, pnfs_iomode_to_fail_bit(iomode));
+ 				lseg = NULL;
+ 			}
+ 			goto out_put_layout_hdr;
+ 		}
+ 		if (lseg) {
+ 			if (first)
+ 				pnfs_clear_first_layoutget(lo);
+ 			trace_pnfs_update_layout(ino, pos, count,
+ 				iomode, lo, lseg, PNFS_UPDATE_LAYOUT_RETRY);
+ 			pnfs_put_layout_hdr(lo);
+ 			goto lookup_again;
+ 		}
+ 	} else {
+ 		pnfs_layout_clear_fail_bit(lo, pnfs_iomode_to_fail_bit(iomode));
+ 	}
+ 
++>>>>>>> 56b38a1f7c78 (pNFS: Fix post-layoutget error handling in pnfs_update_layout())
  out_put_layout_hdr:
  	if (first)
  		pnfs_clear_first_layoutget(lo);
* Unmerged path fs/nfs/pnfs.c
