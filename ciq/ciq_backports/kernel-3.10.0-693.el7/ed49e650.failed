net: add description for len argument of dev_get_phys_port_name

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] add description for len argument of dev_get_phys_port_name (Ivan Vecera) [1275772 1297841 1331748]
Rebuild_FUZZ: 95.87%
commit-author Luis de Bethencourt <luisbg@osg.samsung.com>
commit ed49e650371008b0e00c8004cc2ca93055740f78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ed49e650.failed

When the function dev_get_phys_port_name was added it missed a description
for it's len argument. Adding it.

Fixes: db24a9044ee1 ("net: add support for phys_port_name")
	Signed-off-by: Luis de Bethencourt <luisbg@osg.samsung.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit ed49e650371008b0e00c8004cc2ca93055740f78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/dev.c
diff --cc net/core/dev.c
index e2ceb23207bd,b9bcbe77d913..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -6087,6 -6442,45 +6087,48 @@@ int dev_get_phys_port_id(struct net_dev
  EXPORT_SYMBOL(dev_get_phys_port_id);
  
  /**
++<<<<<<< HEAD
++=======
+  *	dev_get_phys_port_name - Get device physical port name
+  *	@dev: device
+  *	@name: port name
+  *	@len: limit of bytes to copy to name
+  *
+  *	Get device physical port name
+  */
+ int dev_get_phys_port_name(struct net_device *dev,
+ 			   char *name, size_t len)
+ {
+ 	const struct net_device_ops *ops = dev->netdev_ops;
+ 
+ 	if (!ops->ndo_get_phys_port_name)
+ 		return -EOPNOTSUPP;
+ 	return ops->ndo_get_phys_port_name(dev, name, len);
+ }
+ EXPORT_SYMBOL(dev_get_phys_port_name);
+ 
+ /**
+  *	dev_change_proto_down - update protocol port state information
+  *	@dev: device
+  *	@proto_down: new value
+  *
+  *	This info can be used by switch drivers to set the phys state of the
+  *	port.
+  */
+ int dev_change_proto_down(struct net_device *dev, bool proto_down)
+ {
+ 	const struct net_device_ops *ops = dev->netdev_ops;
+ 
+ 	if (!ops->ndo_change_proto_down)
+ 		return -EOPNOTSUPP;
+ 	if (!netif_device_present(dev))
+ 		return -ENODEV;
+ 	return ops->ndo_change_proto_down(dev, proto_down);
+ }
+ EXPORT_SYMBOL(dev_change_proto_down);
+ 
+ /**
++>>>>>>> ed49e6503710 (net: add description for len argument of dev_get_phys_port_name)
   *	dev_new_index	-	allocate an ifindex
   *	@net: the applicable net namespace
   *
* Unmerged path net/core/dev.c
