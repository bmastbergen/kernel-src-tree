tpm_crb: encapsulate crb_wait_for_reg_32

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
commit 38eb24ebb01f875f812aa869c4cd62959510111c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/38eb24eb.failed

Encapsulated crb_wait_for_reg32() so that state changes in other CRB
registers than TPM_CRB_CTRL_REQ_x can be waited.

	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
	Tested-by: Gang Wei <gang.wei@intel.com>
(cherry picked from commit 38eb24ebb01f875f812aa869c4cd62959510111c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/tpm/tpm_crb.c
diff --cc drivers/char/tpm/tpm_crb.c
index 37551c8e3739,324561845dc2..000000000000
--- a/drivers/char/tpm/tpm_crb.c
+++ b/drivers/char/tpm/tpm_crb.c
@@@ -127,25 -157,14 +146,36 @@@ static bool crb_wait_for_reg_32(u32 __i
  static int __maybe_unused crb_cmd_ready(struct device *dev,
  					struct crb_priv *priv)
  {
++<<<<<<< HEAD
 +	ktime_t stop, start;
 +
 +	if (priv->flags & CRB_FL_ACPI_START)
 +		return 0;
 +
 +	iowrite32(CRB_CTRL_REQ_CMD_READY, &priv->cca->req);
 +
 +	start = ktime_get();
 +	stop = ktime_add(start, ms_to_ktime(TPM2_TIMEOUT_C));
 +	do {
 +		if (!(ioread32(&priv->cca->req) & CRB_CTRL_REQ_CMD_READY)) {
 +			dev_dbg(dev, "cmdReady in %lld usecs\n",
 +				ktime_to_us(ktime_sub(ktime_get(), start)));
 +			return 0;
 +		}
 +		usleep_range(50, 100);
 +	} while (ktime_before(ktime_get(), stop));
 +
 +	if (ioread32(&priv->cca->req) & CRB_CTRL_REQ_CMD_READY) {
++=======
+ 	if (priv->flags & CRB_FL_ACPI_START)
+ 		return 0;
+ 
+ 	iowrite32(CRB_CTRL_REQ_CMD_READY, &priv->regs_t->ctrl_req);
+ 	if (!crb_wait_for_reg_32(&priv->regs_t->ctrl_req,
+ 				 CRB_CTRL_REQ_CMD_READY /* mask */,
+ 				 0, /* value */
+ 				 TPM2_TIMEOUT_C)) {
++>>>>>>> 38eb24ebb01f (tpm_crb: encapsulate crb_wait_for_reg_32)
  		dev_warn(dev, "cmdReady timed out\n");
  		return -ETIME;
  	}
* Unmerged path drivers/char/tpm/tpm_crb.c
