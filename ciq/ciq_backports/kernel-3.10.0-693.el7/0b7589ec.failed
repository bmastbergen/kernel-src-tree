s390/pci: query fmb length

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [s390] pci: query fmb length (Hendrik Brueckner) [1400157]
Rebuild_FUZZ: 89.36%
commit-author Sebastian Ott <sebott@linux.vnet.ibm.com>
commit 0b7589ecca2b6f962cf3314a3a5a675deeefb624
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0b7589ec.failed

Query the length of the fmb and abort fmb registration if the
size of the associated measurement block is too small.

	Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit 0b7589ecca2b6f962cf3314a3a5a675deeefb624)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/pci_clp.h
#	arch/s390/pci/pci_clp.c
diff --cc arch/s390/include/asm/pci_clp.h
index a5b4aa80370b,d6f1b1d94352..000000000000
--- a/arch/s390/include/asm/pci_clp.h
+++ b/arch/s390/include/asm/pci_clp.h
@@@ -97,10 -86,14 +97,17 @@@ struct clp_rsp_query_pci 
  	u8 bar_size[PCI_BAR_COUNT];
  	u16 pchid;
  	u32 bar[PCI_BAR_COUNT];
++<<<<<<< HEAD
 +	u64 reserved2;
++=======
+ 	u8 pfip[CLP_PFIP_NR_SEGMENTS];	/* pci function internal path */
+ 	u32			: 16;
+ 	u8 fmb_len;
+ 	u8 pft;				/* pci function type */
++>>>>>>> 0b7589ecca2b (s390/pci: query fmb length)
  	u64 sdma;			/* start dma as */
  	u64 edma;			/* end dma as */
 -	u32 reserved[11];
 -	u32 uid;			/* user defined id */
 +	u64 reserved3[6];
  	u8 util_str[CLP_UTIL_STR_LEN];	/* utility string */
  } __packed;
  
diff --cc arch/s390/pci/pci_clp.c
index c7aef4b4832a,1c3332ac1957..000000000000
--- a/arch/s390/pci/pci_clp.c
+++ b/arch/s390/pci/pci_clp.c
@@@ -116,6 -145,17 +116,20 @@@ static int clp_store_query_pci_fn(struc
  	zdev->end_dma = response->edma;
  	zdev->pchid = response->pchid;
  	zdev->pfgid = response->pfgid;
++<<<<<<< HEAD
++=======
+ 	zdev->pft = response->pft;
+ 	zdev->vfn = response->vfn;
+ 	zdev->uid = response->uid;
+ 	zdev->fmb_length = sizeof(u32) * response->fmb_len;
+ 
+ 	memcpy(zdev->pfip, response->pfip, sizeof(zdev->pfip));
+ 	if (response->util_str_avail) {
+ 		memcpy(zdev->util_str, response->util_str,
+ 		       sizeof(zdev->util_str));
+ 	}
+ 
++>>>>>>> 0b7589ecca2b (s390/pci: query fmb length)
  	return 0;
  }
  
diff --git a/arch/s390/include/asm/pci.h b/arch/s390/include/asm/pci.h
index d2add6bfdaee..2cde09ded0d6 100644
--- a/arch/s390/include/asm/pci.h
+++ b/arch/s390/include/asm/pci.h
@@ -133,6 +133,7 @@ struct zpci_dev {
 	/* Function measurement block */
 	struct zpci_fmb *fmb;
 	u16		fmb_update;	/* update interval */
+	u16		fmb_length;
 	/* software counters */
 	atomic64_t allocated_pages;
 	atomic64_t mapped_pages;
* Unmerged path arch/s390/include/asm/pci_clp.h
diff --git a/arch/s390/pci/pci.c b/arch/s390/pci/pci.c
index 7c8ddd900bec..c5f9a81f8457 100644
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@ -198,7 +198,7 @@ int zpci_fmb_enable_device(struct zpci_dev *zdev)
 {
 	struct mod_pci_args args = { 0, 0, 0, 0 };
 
-	if (zdev->fmb)
+	if (zdev->fmb || sizeof(*zdev->fmb) < zdev->fmb_length)
 		return -EINVAL;
 
 	zdev->fmb = kmem_cache_zalloc(zdev_fmb_cache, GFP_KERNEL);
* Unmerged path arch/s390/pci/pci_clp.c
