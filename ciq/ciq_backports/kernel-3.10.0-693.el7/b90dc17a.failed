perf evsel: Add overwrite attribute and check write_backward

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit b90dc17a5d14a881f9bb3b58edb3d71075d58afb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b90dc17a.failed

Add 'overwrite' attribute to evsel to mark whether this event is
overwritable. The following commits will support syntax like:

  # perf record -e cycles/overwrite/ ...

An overwritable evsel requires kernel support for the
perf_event_attr.write_backward ring buffer feature.

Add it to perf_missing_feature.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Masami Hiramatsu <mhiramat@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1463762315-155689-2-git-send-email-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit b90dc17a5d14a881f9bb3b58edb3d71075d58afb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
diff --cc tools/perf/util/evsel.c
index 2d8b1b33aee3,02c177d14c8d..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -34,9 -34,14 +34,10 @@@ static struct 
  	bool exclude_guest;
  	bool mmap2;
  	bool cloexec;
 -	bool clockid;
 -	bool clockid_wrong;
  	bool lbr_flags;
+ 	bool write_backward;
  } perf_missing_features;
  
 -static clockid_t clockid;
 -
  static int perf_evsel__no_extra_init(struct perf_evsel *evsel __maybe_unused)
  {
  	return 0;
@@@ -1385,7 -1413,40 +1388,27 @@@ retry_open
  					  err);
  				goto try_fallback;
  			}
 -
 -			if (evsel->bpf_fd >= 0) {
 -				int evt_fd = FD(evsel, cpu, thread);
 -				int bpf_fd = evsel->bpf_fd;
 -
 -				err = ioctl(evt_fd,
 -					    PERF_EVENT_IOC_SET_BPF,
 -					    bpf_fd);
 -				if (err && errno != EEXIST) {
 -					pr_err("failed to attach bpf fd %d: %s\n",
 -					       bpf_fd, strerror(errno));
 -					err = -EINVAL;
 -					goto out_close;
 -				}
 -			}
 -
  			set_rlimit = NO_CHANGE;
++<<<<<<< HEAD
++=======
+ 
+ 			/*
+ 			 * If we succeeded but had to kill clockid, fail and
+ 			 * have perf_evsel__open_strerror() print us a nice
+ 			 * error.
+ 			 */
+ 			if (perf_missing_features.clockid ||
+ 			    perf_missing_features.clockid_wrong) {
+ 				err = -EINVAL;
+ 				goto out_close;
+ 			}
+ 
+ 			if (evsel->overwrite &&
+ 			    perf_missing_features.write_backward) {
+ 				err = -EINVAL;
+ 				goto out_close;
+ 			}
++>>>>>>> b90dc17a5d14 (perf evsel: Add overwrite attribute and check write_backward)
  		}
  	}
  
* Unmerged path tools/perf/util/evsel.c
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h
index 8b108cb05d6f..d53ed6cc6e2f 100644
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@ -112,6 +112,7 @@ struct perf_evsel {
 	bool			tracking;
 	bool			per_pkg;
 	bool			precise_max;
+	bool			overwrite;
 	/* parse modifier helper */
 	int			exclude_GH;
 	int			nr_members;
