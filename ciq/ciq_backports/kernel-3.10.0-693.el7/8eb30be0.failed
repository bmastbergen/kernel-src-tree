ipv6: Create ip6_tnl_xmit

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Tom Herbert <tom@herbertland.com>
commit 8eb30be0352d09165e94a41fef1c7b994dca0714
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8eb30be0.failed

This patch renames ip6_tnl_xmit2 to ip6_tnl_xmit and exports it. Other
users like GRE will be able to call this. The original ip6_tnl_xmit
function is renamed to ip6_tnl_start_xmit (this is an ndo_start_xmit
function).

	Signed-off-by: Tom Herbert <tom@herbertland.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8eb30be0352d09165e94a41fef1c7b994dca0714)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_tunnel.c
diff --cc net/ipv6/ip6_tunnel.c
index 1f58811499c9,b1f31d2b17cd..000000000000
--- a/net/ipv6/ip6_tunnel.c
+++ b/net/ipv6/ip6_tunnel.c
@@@ -1093,8 -1172,7 +1106,12 @@@ ip4ip6_tnl_xmit(struct sk_buff *skb, st
  	if (!(t->parms.flags & IP6_TNL_F_IGN_ENCAP_LIMIT))
  		encap_limit = t->parms.encap_limit;
  
++<<<<<<< HEAD
 +	memcpy(&fl6, &t->fl.u.ip6, sizeof (fl6));
 +	fl6.flowi6_proto = IPPROTO_IPIP;
++=======
+ 	memcpy(&fl6, &t->fl.u.ip6, sizeof(fl6));
++>>>>>>> 8eb30be0352d (ipv6: Create ip6_tnl_xmit)
  
  	dsfield = ipv4_get_dsfield(iph);
  
@@@ -1147,8 -1226,7 +1165,12 @@@ ip6ip6_tnl_xmit(struct sk_buff *skb, st
  	} else if (!(t->parms.flags & IP6_TNL_F_IGN_ENCAP_LIMIT))
  		encap_limit = t->parms.encap_limit;
  
++<<<<<<< HEAD
 +	memcpy(&fl6, &t->fl.u.ip6, sizeof (fl6));
 +	fl6.flowi6_proto = IPPROTO_IPV6;
++=======
+ 	memcpy(&fl6, &t->fl.u.ip6, sizeof(fl6));
++>>>>>>> 8eb30be0352d (ipv6: Create ip6_tnl_xmit)
  
  	dsfield = ipv6_get_dsfield(ipv6h);
  	if (t->parms.flags & IP6_TNL_F_USE_ORIG_TCLASS)
diff --git a/include/net/ip6_tunnel.h b/include/net/ip6_tunnel.h
index a1b9a6553a41..475c2c909841 100644
--- a/include/net/ip6_tunnel.h
+++ b/include/net/ip6_tunnel.h
@@ -65,6 +65,8 @@ int ip6_tnl_rcv_ctl(struct ip6_tnl *t, const struct in6_addr *laddr,
 		const struct in6_addr *raddr);
 int ip6_tnl_xmit_ctl(struct ip6_tnl *t, const struct in6_addr *laddr,
 		     const struct in6_addr *raddr);
+int ip6_tnl_xmit(struct sk_buff *skb, struct net_device *dev, __u8 dsfield,
+		 struct flowi6 *fl6, int encap_limit, __u32 *pmtu, __u8 proto);
 __u16 ip6_tnl_parse_tlv_enc_lim(struct sk_buff *skb, __u8 *raw);
 __u32 ip6_tnl_get_cap(struct ip6_tnl *t, const struct in6_addr *laddr,
 			     const struct in6_addr *raddr);
* Unmerged path net/ipv6/ip6_tunnel.c
