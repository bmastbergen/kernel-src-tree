perf tools: Allow generating per-arch syscall table arrays

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 5af56fab2b11769e35ce96613d321bcc0f7b84c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5af56fab.failed

Tools should use a mechanism similar to arch/x86/entry/syscalls/ to
generate a header file with the definitions for two variables:

  static const char *syscalltbl_x86_64[] = {
	[0] = "read",
	[1] = "write",
  <SNIP>
	[324] = "membarrier",
	[325] = "mlock2",
	[326] = "copy_file_range",
  };
  static const int syscalltbl_x86_64_max_id = 326;

In a per arch file that should then be included in
tools/perf/util/syscalltbl.c.

First one will be for x86_64.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-02uuamkxgccczdth8komspgp@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 5af56fab2b11769e35ce96613d321bcc0f7b84c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/syscalltbl.c
#	tools/perf/util/syscalltbl.h
* Unmerged path tools/perf/util/syscalltbl.c
* Unmerged path tools/perf/util/syscalltbl.h
* Unmerged path tools/perf/util/syscalltbl.c
* Unmerged path tools/perf/util/syscalltbl.h
