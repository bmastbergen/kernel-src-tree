HID: wacom: Allow dynamic battery creation/destruction

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: Allow dynamic battery creation/destruction (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 95.15%
commit-author Jason Gerecke <killertofu@gmail.com>
commit fce9957d8f618346b76c63066e146fc76ed975ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/fce9957d.failed

Tablets like the Intuos, Intuos Pro, and Bamboo have a connector for an
optional wireless module that can be connected on the fly. The presence
(or absence) of this module is indicated in a status report recieved
from the tablet. This patch adds a workqueue function that will create
or destroy a power_supply object at runtime to match the current state
of the WACOM_QUIRK_BATTERY flag.

	Signed-off-by: Jason Gerecke <killertofu@gmail.com>
	Acked-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit fce9957d8f618346b76c63066e146fc76ed975ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom.h
#	drivers/hid/wacom_sys.c
diff --cc drivers/hid/wacom.h
index 87d2c48e3adc,ad7318db1dfe..000000000000
--- a/drivers/hid/wacom.h
+++ b/drivers/hid/wacom.h
@@@ -139,6 -133,14 +139,17 @@@ extern const struct usb_device_id wacom
  
  void wacom_wac_irq(struct wacom_wac *wacom_wac, size_t len);
  void wacom_setup_device_quirks(struct wacom_features *features);
 -int wacom_setup_pentouch_input_capabilities(struct input_dev *input_dev,
 +int wacom_setup_input_capabilities(struct input_dev *input_dev,
  				   struct wacom_wac *wacom_wac);
++<<<<<<< HEAD
++=======
+ int wacom_setup_pad_input_capabilities(struct input_dev *input_dev,
+ 				       struct wacom_wac *wacom_wac);
+ void wacom_wac_usage_mapping(struct hid_device *hdev,
+ 		struct hid_field *field, struct hid_usage *usage);
+ int wacom_wac_event(struct hid_device *hdev, struct hid_field *field,
+ 		struct hid_usage *usage, __s32 value);
+ void wacom_wac_report(struct hid_device *hdev, struct hid_report *report);
+ void wacom_battery_work(struct work_struct *work);
++>>>>>>> fce9957d8f61 (HID: wacom: Allow dynamic battery creation/destruction)
  #endif
diff --cc drivers/hid/wacom_sys.c
index 527bf559d1db,dfa4be7eac8c..000000000000
--- a/drivers/hid/wacom_sys.c
+++ b/drivers/hid/wacom_sys.c
@@@ -1120,10 -1057,11 +1120,14 @@@ static int wacom_initialize_battery(str
  
  static void wacom_destroy_battery(struct wacom *wacom)
  {
++<<<<<<< HEAD
 +	if (wacom->wacom_wac.features.quirks & WACOM_QUIRK_MONITOR &&
 +	    wacom->battery.dev) {
++=======
+ 	if (wacom->battery.dev) {
++>>>>>>> fce9957d8f61 (HID: wacom: Allow dynamic battery creation/destruction)
  		power_supply_unregister(&wacom->battery);
  		wacom->battery.dev = NULL;
 -		power_supply_unregister(&wacom->ac);
 -		wacom->ac.dev = NULL;
  	}
  }
  
* Unmerged path drivers/hid/wacom.h
* Unmerged path drivers/hid/wacom_sys.c
