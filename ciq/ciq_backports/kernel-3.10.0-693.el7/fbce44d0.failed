powerpc/powernv: Call opal_pci_poll() if needed

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] powernv: Call opal_pci_poll() if needed (Steve Best) [1398577]
Rebuild_FUZZ: 90.70%
commit-author Gavin Shan <gwshan@linux.vnet.ibm.com>
commit fbce44d0ed42e4653172376f4dfeaa5710f06a27
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/fbce44d0.failed

When issuing PHB reset, OPAL API opal_pci_poll() is called to drive
the state machine in OPAL forward. However, we needn't always call
the function under some circumstances like reset deassert.

This avoids calling opal_pci_poll() when OPAL_SUCCESS is returned
from opal_pci_reset(). Except the overhead introduced by additional
one unnecessary OPAL call, I didn't run into real issue because of
this.

	Reported-by: Pridhiviraj Paidipeddi <ppaiddipe@in.ibm.com>
	Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit fbce44d0ed42e4653172376f4dfeaa5710f06a27)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/eeh-powernv.c
diff --cc arch/powerpc/platforms/powernv/eeh-powernv.c
index 0b4ffc90f33a,995947d81989..000000000000
--- a/arch/powerpc/platforms/powernv/eeh-powernv.c
+++ b/arch/powerpc/platforms/powernv/eeh-powernv.c
@@@ -793,7 -763,8 +793,12 @@@ int pnv_eeh_phb_reset(struct pci_contro
  	 * reset followed by hot reset on root bus. So we also
  	 * need the PCI bus settlement delay.
  	 */
++<<<<<<< HEAD
 +	rc = pnv_eeh_phb_poll(phb);
++=======
+ 	if (rc > 0)
+ 		rc = pnv_eeh_poll(phb->opal_id);
++>>>>>>> fbce44d0ed42 (powerpc/powernv: Call opal_pci_poll() if needed)
  	if (option == EEH_RESET_DEACTIVATE) {
  		if (system_state < SYSTEM_RUNNING)
  			udelay(1000 * EEH_PE_RST_SETTLE_TIME);
@@@ -836,7 -807,8 +841,12 @@@ static int pnv_eeh_root_reset(struct pc
  		goto out;
  
  	/* Poll state of the PHB until the request is done */
++<<<<<<< HEAD
 +	rc = pnv_eeh_phb_poll(phb);
++=======
+ 	if (rc > 0)
+ 		rc = pnv_eeh_poll(phb->opal_id);
++>>>>>>> fbce44d0ed42 (powerpc/powernv: Call opal_pci_poll() if needed)
  	if (option == EEH_RESET_DEACTIVATE)
  		msleep(EEH_PE_RST_SETTLE_TIME);
  out:
* Unmerged path arch/powerpc/platforms/powernv/eeh-powernv.c
