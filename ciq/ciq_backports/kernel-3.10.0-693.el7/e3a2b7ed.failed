net/mlx5e: Support offload cls_flower with drop action

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Support offload cls_flower with drop action (Jonathan Toppins) [1383217]
Rebuild_FUZZ: 96.15%
commit-author Amir Vadai <amir@vadai.me>
commit e3a2b7ed018e885721a1b664ed7bf0f3fe29c81c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e3a2b7ed.failed

Parse tc_cls_flower_offload into device specific commands and program
the hardware to classify and act accordingly.

For example, to drop ICMP (ip_proto 1) packets from specific smac, dmac,
src_ip, src_ip, arriving to interface ens9:

 # tc qdisc add dev ens9 ingress

 # tc filter add dev ens9 protocol ip parent ffff: \
     flower ip_proto 1 \
     dst_mac 7c:fe:90:69:81:62 src_mac 7c:fe:90:69:81:56 \
     dst_ip 11.11.11.11 src_ip 11.11.11.12 indev ens9 \
     action drop

	Signed-off-by: Amir Vadai <amir@vadai.me>
	Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e3a2b7ed018e885721a1b664ed7bf0f3fe29c81c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
index 1d7bd82a1fb1,70642f4f78f0..000000000000
--- a/drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
+++ b/drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
@@@ -30,33 -30,20 +30,42 @@@
   * SOFTWARE.
   */
  
 -#ifndef __MLX5_EN_TC_H__
 -#define __MLX5_EN_TC_H__
 +/*
 + * This file is conditionally built on PowerPC only.  Otherwise weak symbol
 + * versions of the functions exported from here are used.
 + */
  
 -int mlx5e_tc_init(struct mlx5e_priv *priv);
 -void mlx5e_tc_cleanup(struct mlx5e_priv *priv);
 +#include "ipath_kernel.h"
  
++<<<<<<< HEAD:drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
 +/**
 + * ipath_enable_wc - enable write combining for MMIO writes to the device
 + * @dd: infinipath device
 + *
 + * Nothing to do on PowerPC, so just return without error.
 + */
 +int ipath_enable_wc(struct ipath_devdata *dd)
++=======
+ int mlx5e_configure_flower(struct mlx5e_priv *priv, __be16 protocol,
+ 			   struct tc_cls_flower_offload *f);
+ int mlx5e_delete_flower(struct mlx5e_priv *priv,
+ 			struct tc_cls_flower_offload *f);
+ 
+ static inline int mlx5e_tc_num_filters(struct mlx5e_priv *priv)
++>>>>>>> e3a2b7ed018e (net/mlx5e: Support offload cls_flower with drop action):drivers/net/ethernet/mellanox/mlx5/core/en_tc.h
  {
 -	return atomic_read(&priv->fts.tc.ht.nelems);
 +	return 0;
  }
  
 -#endif /* __MLX5_EN_TC_H__ */
 +/**
 + * ipath_unordered_wc - indicate whether write combining is unordered
 + *
 + * Because our performance depends on our ability to do write
 + * combining mmio writes in the most efficient way, we need to
 + * know if we are on a processor that may reorder stores when
 + * write combining.
 + */
 +int ipath_unordered_wc(void)
 +{
 +	return 1;
 +}
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index ae009c7fda21,ac5807803c84..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -2200,6 -1886,24 +2200,27 @@@ static int mlx5e_setup_tc(struct net_de
  static int mlx5e_ndo_setup_tc(struct net_device *dev, u32 handle,
  			      __be16 proto, struct tc_to_netdev *tc)
  {
++<<<<<<< HEAD
++=======
+ 	struct mlx5e_priv *priv = netdev_priv(dev);
+ 
+ 	if (TC_H_MAJ(handle) != TC_H_MAJ(TC_H_INGRESS))
+ 		goto mqprio;
+ 
+ 	switch (tc->type) {
+ 	case TC_SETUP_CLSFLOWER:
+ 		switch (tc->cls_flower->command) {
+ 		case TC_CLSFLOWER_REPLACE:
+ 			return mlx5e_configure_flower(priv, proto, tc->cls_flower);
+ 		case TC_CLSFLOWER_DESTROY:
+ 			return mlx5e_delete_flower(priv, tc->cls_flower);
+ 		}
+ 	default:
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ mqprio:
++>>>>>>> e3a2b7ed018e (net/mlx5e: Support offload cls_flower with drop action)
  	if (tc->type != TC_SETUP_MQPRIO)
  		return -EINVAL;
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
* Unmerged path drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
