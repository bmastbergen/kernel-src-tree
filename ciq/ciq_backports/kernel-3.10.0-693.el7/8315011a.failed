RDS: TCP: Simplify reconnect to avoid duelling reconnnect attempts

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Sowmini Varadhan <sowmini.varadhan@oracle.com>
commit 8315011ad67670691545ed394968435f0a0bb29e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8315011a.failed

When reconnecting, the peer with the smaller IP address will initiate
the reconnect, to avoid needless duelling SYN issues.

	Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
	Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8315011ad67670691545ed394968435f0a0bb29e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/rds/connection.c
#	net/rds/threads.c
diff --cc net/rds/connection.c
index 92b812312d9d,19a4fee5f4dd..000000000000
--- a/net/rds/connection.c
+++ b/net/rds/connection.c
@@@ -323,9 -355,7 +323,13 @@@ void rds_conn_shutdown(struct rds_conne
  	rcu_read_lock();
  	if (!hlist_unhashed(&conn->c_hash_node)) {
  		rcu_read_unlock();
++<<<<<<< HEAD
 +		if (conn->c_trans->t_type != RDS_TRANS_TCP ||
 +		    conn->c_outgoing == 1)
 +			rds_queue_reconnect(conn);
++=======
+ 		rds_queue_reconnect(cp);
++>>>>>>> 8315011ad676 (RDS: TCP: Simplify reconnect to avoid duelling reconnnect attempts)
  	} else {
  		rcu_read_unlock();
  	}
diff --cc net/rds/threads.c
index 55bb19ff40f2,bc97d67f29cc..000000000000
--- a/net/rds/threads.c
+++ b/net/rds/threads.c
@@@ -122,12 -122,18 +122,24 @@@ void rds_queue_reconnect(struct rds_con
  
  	rdsdebug("conn %p for %pI4 to %pI4 reconnect jiffies %lu\n",
  	  conn, &conn->c_laddr, &conn->c_faddr,
 -	  cp->cp_reconnect_jiffies);
 -
 +	  conn->c_reconnect_jiffies);
 +
++<<<<<<< HEAD
 +	set_bit(RDS_RECONNECT_PENDING, &conn->c_flags);
 +	if (conn->c_reconnect_jiffies == 0) {
 +		conn->c_reconnect_jiffies = rds_sysctl_reconnect_min_jiffies;
 +		queue_delayed_work(rds_wq, &conn->c_conn_w, 0);
++=======
+ 	/* let peer with smaller addr initiate reconnect, to avoid duels */
+ 	if (conn->c_trans->t_type == RDS_TRANS_TCP &&
+ 	    conn->c_laddr > conn->c_faddr)
+ 		return;
+ 
+ 	set_bit(RDS_RECONNECT_PENDING, &cp->cp_flags);
+ 	if (cp->cp_reconnect_jiffies == 0) {
+ 		cp->cp_reconnect_jiffies = rds_sysctl_reconnect_min_jiffies;
+ 		queue_delayed_work(rds_wq, &cp->cp_conn_w, 0);
++>>>>>>> 8315011ad676 (RDS: TCP: Simplify reconnect to avoid duelling reconnnect attempts)
  		return;
  	}
  
* Unmerged path net/rds/connection.c
* Unmerged path net/rds/threads.c
