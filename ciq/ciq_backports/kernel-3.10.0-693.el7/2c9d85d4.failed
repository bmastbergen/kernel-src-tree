netdevice: Add offload statistics ndo

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nogah Frankel <nogahf@mellanox.com>
commit 2c9d85d4d82d9e0a62aad08bf50650804e68ed30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2c9d85d4.failed

Add a new ndo to return statistics for offloaded operation.
Since there can be many different offloaded operation with many
stats types, the ndo gets an attribute id by which it knows which
stats are wanted. The ndo also gets a void pointer to be cast according
to the attribute id.

	Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Reviewed-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 2c9d85d4d82d9e0a62aad08bf50650804e68ed30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdevice.h
diff --cc include/linux/netdevice.h
index 2f7ec2ad350a,a10d8d18ce19..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -951,12 -924,20 +951,25 @@@ struct net_device_ops_extended 
   *	3. Update dev->stats asynchronously and atomically, and define
   *	   neither operation.
   *
++<<<<<<< HEAD
 + * int (*ndo_vlan_rx_add_vid)(struct net_device *dev, __be16 proto, u16t vid);
 + *	If device support VLAN filtering this function is called when a
++=======
+  * bool (*ndo_has_offload_stats)(int attr_id)
+  *	Return true if this device supports offload stats of this attr_id.
+  *
+  * int (*ndo_get_offload_stats)(int attr_id, const struct net_device *dev,
+  *	void *attr_data)
+  *	Get statistics for offload operations by attr_id. Write it into the
+  *	attr_data pointer.
+  *
+  * int (*ndo_vlan_rx_add_vid)(struct net_device *dev, __be16 proto, u16 vid);
+  *	If device supports VLAN filtering this function is called when a
++>>>>>>> 2c9d85d4d82d (netdevice: Add offload statistics ndo)
   *	VLAN id is registered.
   *
 - * int (*ndo_vlan_rx_kill_vid)(struct net_device *dev, __be16 proto, u16 vid);
 - *	If device supports VLAN filtering this function is called when a
 + * int (*ndo_vlan_rx_kill_vid)(struct net_device *dev, unsigned short vid);
 + *	If device support VLAN filtering this function is called when a
   *	VLAN id is unregistered.
   *
   * void (*ndo_poll_controller)(struct net_device *dev);
* Unmerged path include/linux/netdevice.h
