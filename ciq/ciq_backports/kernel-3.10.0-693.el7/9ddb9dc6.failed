crypto: ccp - clean up data structure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [crypto] ccp - clean up data structure (Suravee Suthikulpanit) [1390820]
Rebuild_FUZZ: 87.88%
commit-author Gary R Hook <gary.hook@amd.com>
commit 9ddb9dc6be095ebe393f7eb582df09cc4847c5e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9ddb9dc6.failed

Change names of data structure instances.  Add const
keyword where appropriate.  Add error handling path.

	Signed-off-by: Gary R Hook <gary.hook@amd.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 9ddb9dc6be095ebe393f7eb582df09cc4847c5e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/ccp/ccp-dev-v3.c
#	drivers/crypto/ccp/ccp-dev-v5.c
#	drivers/crypto/ccp/ccp-dev.h
#	drivers/crypto/ccp/ccp-pci.c
diff --cc drivers/crypto/ccp/ccp-dev.h
index 72bf1536b653,08f58b0d4271..000000000000
--- a/drivers/crypto/ccp/ccp-dev.h
+++ b/drivers/crypto/ccp/ccp-dev.h
@@@ -268,4 -608,39 +268,42 @@@ irqreturn_t ccp_irq_handler(int irq, vo
  
  int ccp_run_cmd(struct ccp_cmd_queue *cmd_q, struct ccp_cmd *cmd);
  
++<<<<<<< HEAD
++=======
+ int ccp_register_rng(struct ccp_device *ccp);
+ void ccp_unregister_rng(struct ccp_device *ccp);
+ int ccp_dmaengine_register(struct ccp_device *ccp);
+ void ccp_dmaengine_unregister(struct ccp_device *ccp);
+ 
+ /* Structure for computation functions that are device-specific */
+ struct ccp_actions {
+ 	int (*aes)(struct ccp_op *);
+ 	int (*xts_aes)(struct ccp_op *);
+ 	int (*sha)(struct ccp_op *);
+ 	int (*rsa)(struct ccp_op *);
+ 	int (*passthru)(struct ccp_op *);
+ 	int (*ecc)(struct ccp_op *);
+ 	u32 (*sballoc)(struct ccp_cmd_queue *, unsigned int);
+ 	void (*sbfree)(struct ccp_cmd_queue *, unsigned int,
+ 			       unsigned int);
+ 	unsigned int (*get_free_slots)(struct ccp_cmd_queue *);
+ 	int (*init)(struct ccp_device *);
+ 	void (*destroy)(struct ccp_device *);
+ 	irqreturn_t (*irqhandler)(int, void *);
+ };
+ 
+ /* Structure to hold CCP version-specific values */
+ struct ccp_vdata {
+ 	const unsigned int version;
+ 	void (*setup)(struct ccp_device *);
+ 	const struct ccp_actions *perform;
+ 	const unsigned int bar;
+ 	const unsigned int offset;
+ };
+ 
+ extern const struct ccp_vdata ccpv3;
+ extern const struct ccp_vdata ccpv5a;
+ extern const struct ccp_vdata ccpv5b;
+ 
++>>>>>>> 9ddb9dc6be09 (crypto: ccp - clean up data structure)
  #endif
diff --cc drivers/crypto/ccp/ccp-pci.c
index 15741de944bc,28a9996c1085..000000000000
--- a/drivers/crypto/ccp/ccp-pci.c
+++ b/drivers/crypto/ccp/ccp-pci.c
@@@ -323,8 -323,10 +323,15 @@@ static int ccp_pci_resume(struct pci_de
  }
  #endif
  
++<<<<<<< HEAD
 +static DEFINE_PCI_DEVICE_TABLE(ccp_pci_table) = {
 +	{ PCI_VDEVICE(AMD, 0x1537), },
++=======
+ static const struct pci_device_id ccp_pci_table[] = {
+ 	{ PCI_VDEVICE(AMD, 0x1537), (kernel_ulong_t)&ccpv3 },
+ 	{ PCI_VDEVICE(AMD, 0x1456), (kernel_ulong_t)&ccpv5a },
+ 	{ PCI_VDEVICE(AMD, 0x1468), (kernel_ulong_t)&ccpv5b },
++>>>>>>> 9ddb9dc6be09 (crypto: ccp - clean up data structure)
  	/* Last entry must be zero */
  	{ 0, }
  };
* Unmerged path drivers/crypto/ccp/ccp-dev-v3.c
* Unmerged path drivers/crypto/ccp/ccp-dev-v5.c
* Unmerged path drivers/crypto/ccp/ccp-dev-v3.c
* Unmerged path drivers/crypto/ccp/ccp-dev-v5.c
* Unmerged path drivers/crypto/ccp/ccp-dev.h
* Unmerged path drivers/crypto/ccp/ccp-pci.c
