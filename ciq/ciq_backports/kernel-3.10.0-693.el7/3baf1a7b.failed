SMB2: Separate Kerberos authentication from SMB2_sess_setup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Sachin Prabhu <sprabhu@redhat.com>
commit 3baf1a7b921500596b77487d5a34a27d656fc032
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3baf1a7b.failed

Add helper functions and split Kerberos authentication off
SMB2_sess_setup.

	Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
	Signed-off-by: Steve French <smfrench@gmail.com>
	Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
(cherry picked from commit 3baf1a7b921500596b77487d5a34a27d656fc032)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2pdu.c
diff --cc fs/cifs/smb2pdu.c
index 84b05266ec7b,386b512189b2..000000000000
--- a/fs/cifs/smb2pdu.c
+++ b/fs/cifs/smb2pdu.c
@@@ -673,47 -894,7 +897,51 @@@ ssetup_ntlmssp_authenticate
  	/* 4 for rfc1002 length field and 1 for pad */
  	iov[0].iov_len = get_rfc1002_length(req) + 4 - 1;
  
++<<<<<<< HEAD
 +	if (ses->sectype == Kerberos) {
 +#ifdef CONFIG_CIFS_UPCALL
 +		struct cifs_spnego_msg *msg;
 +
 +		spnego_key = cifs_get_spnego_key(ses);
 +		if (IS_ERR(spnego_key)) {
 +			rc = PTR_ERR(spnego_key);
 +			spnego_key = NULL;
 +			goto ssetup_exit;
 +		}
 +
 +		msg = spnego_key->payload.data;
 +		/*
 +		 * check version field to make sure that cifs.upcall is
 +		 * sending us a response in an expected form
 +		 */
 +		if (msg->version != CIFS_SPNEGO_UPCALL_VERSION) {
 +			cifs_dbg(VFS,
 +				  "bad cifs.upcall version. Expected %d got %d",
 +				  CIFS_SPNEGO_UPCALL_VERSION, msg->version);
 +			rc = -EKEYREJECTED;
 +			goto ssetup_exit;
 +		}
 +		ses->auth_key.response = kmemdup(msg->data, msg->sesskey_len,
 +						 GFP_KERNEL);
 +		if (!ses->auth_key.response) {
 +			cifs_dbg(VFS,
 +				"Kerberos can't allocate (%u bytes) memory",
 +				msg->sesskey_len);
 +			rc = -ENOMEM;
 +			goto ssetup_exit;
 +		}
 +		ses->auth_key.len = msg->sesskey_len;
 +		blob_length = msg->secblob_len;
 +		iov[1].iov_base = msg->data + msg->sesskey_len;
 +		iov[1].iov_len = blob_length;
 +#else
 +		rc = -EOPNOTSUPP;
 +		goto ssetup_exit;
 +#endif /* CONFIG_CIFS_UPCALL */
 +	} else if (phase == NtLmNegotiate) { /* if not krb5 must be ntlmssp */
++=======
+ 	if (phase == NtLmNegotiate) {
++>>>>>>> 3baf1a7b9215 (SMB2: Separate Kerberos authentication from SMB2_sess_setup)
  		ntlmssp_blob = kmalloc(sizeof(struct _NEGOTIATE_MESSAGE),
  				       GFP_KERNEL);
  		if (ntlmssp_blob == NULL) {
* Unmerged path fs/cifs/smb2pdu.c
