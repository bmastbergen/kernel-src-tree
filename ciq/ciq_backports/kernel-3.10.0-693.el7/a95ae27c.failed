x86/mm: Enable KASLR for vmalloc memory regions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] mm: Enable KASLR for vmalloc memory regions (Baoquan He) [1424943]
Rebuild_FUZZ: 95.56%
commit-author Thomas Garnier <thgarnie@google.com>
commit a95ae27c2ee1cba5f4f6b9dea43ffe88252e79b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a95ae27c.failed

Add vmalloc to the list of randomized memory regions.

The vmalloc memory region contains the allocation made through the vmalloc()
API. The allocations are done sequentially to prevent fragmentation and
each allocation address can easily be deduced especially from boot.

	Signed-off-by: Thomas Garnier <thgarnie@google.com>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
	Cc: Alexander Popov <alpopov@ptsecurity.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Borislav Petkov <bp@suse.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Dave Young <dyoung@redhat.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Jan Beulich <JBeulich@suse.com>
	Cc: Joerg Roedel <jroedel@suse.de>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Lv Zheng <lv.zheng@intel.com>
	Cc: Mark Salter <msalter@redhat.com>
	Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
	Cc: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephen Smalley <sds@tycho.nsa.gov>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Toshi Kani <toshi.kani@hpe.com>
	Cc: Xiao Guangrong <guangrong.xiao@linux.intel.com>
	Cc: Yinghai Lu <yinghai@kernel.org>
	Cc: kernel-hardening@lists.openwall.com
	Cc: linux-doc@vger.kernel.org
Link: http://lkml.kernel.org/r/1466556426-32664-8-git-send-email-keescook@chromium.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit a95ae27c2ee1cba5f4f6b9dea43ffe88252e79b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/kaslr.h
#	arch/x86/include/asm/pgtable_64_types.h
#	arch/x86/mm/kaslr.c
diff --cc arch/x86/include/asm/pgtable_64_types.h
index 2d883440cb9a,6fdef9eef2d5..000000000000
--- a/arch/x86/include/asm/pgtable_64_types.h
+++ b/arch/x86/include/asm/pgtable_64_types.h
@@@ -54,13 -54,23 +55,27 @@@ typedef struct { pteval_t pte; } pte_t
  #define PGDIR_MASK	(~(PGDIR_SIZE - 1))
  
  /* See Documentation/x86/x86_64/mm.txt for a description of the memory map. */
++<<<<<<< HEAD
 +#define MAXMEM		 _AC(__AC(1, UL) << MAX_PHYSMEM_BITS, UL)
 +#define VMALLOC_START    _AC(0xffffc90000000000, UL)
 +#define VMALLOC_END      _AC(0xffffe8ffffffffff, UL)
 +#define VMEMMAP_START	 _AC(0xffffea0000000000, UL)
 +#define MODULES_VADDR    _AC(0xffffffffa0000000, UL)
++=======
+ #define MAXMEM		_AC(__AC(1, UL) << MAX_PHYSMEM_BITS, UL)
+ #define VMALLOC_SIZE_TB	_AC(32, UL)
+ #define __VMALLOC_BASE	_AC(0xffffc90000000000, UL)
+ #define VMEMMAP_START	_AC(0xffffea0000000000, UL)
+ #ifdef CONFIG_RANDOMIZE_MEMORY
+ #define VMALLOC_START	vmalloc_base
+ #else
+ #define VMALLOC_START	__VMALLOC_BASE
+ #endif /* CONFIG_RANDOMIZE_MEMORY */
+ #define VMALLOC_END	(VMALLOC_START + _AC((VMALLOC_SIZE_TB << 40) - 1, UL))
+ #define MODULES_VADDR    (__START_KERNEL_map + KERNEL_IMAGE_SIZE)
++>>>>>>> a95ae27c2ee1 (x86/mm: Enable KASLR for vmalloc memory regions)
  #define MODULES_END      _AC(0xffffffffff000000, UL)
  #define MODULES_LEN   (MODULES_END - MODULES_VADDR)
 -#define ESPFIX_PGD_ENTRY _AC(-2, UL)
 -#define ESPFIX_BASE_ADDR (ESPFIX_PGD_ENTRY << PGDIR_SHIFT)
 -#define EFI_VA_START	 ( -4 * (_AC(1, UL) << 30))
 -#define EFI_VA_END	 (-68 * (_AC(1, UL) << 30))
  
  #define EARLY_DYNAMIC_PAGE_TABLES	64
  
* Unmerged path arch/x86/include/asm/kaslr.h
* Unmerged path arch/x86/mm/kaslr.c
* Unmerged path arch/x86/include/asm/kaslr.h
* Unmerged path arch/x86/include/asm/pgtable_64_types.h
* Unmerged path arch/x86/mm/kaslr.c
