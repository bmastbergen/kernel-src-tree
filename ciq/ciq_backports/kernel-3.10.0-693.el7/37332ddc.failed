Bluetooth: BCSP fails to ACK re-transmitted frames from the peer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [bluetooth] BCSP fails to ACK re-transmitted frames from the peer (David Arcari) [1415327]
Rebuild_FUZZ: 90.60%
commit-author Dean Jenkins <Dean_Jenkins@mentor.com>
commit 37332ddc1470b820bd9d1eb36a2ca6ce1efb209b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/37332ddc.failed

Send an ACK frame with the current txack value in response to
every received reliable frame unless a TX reliable frame is being
sent. This modification allows re-transmitted frames from the remote
peer to be acknowledged rather than ignored. It means that the remote
peer knows which frame number to start re-transmitting from.

Without this modification, the recovery time to a missing frame
from the remote peer was unnecessarily being extended because the
headers of the out of order reliable frames were being discarded rather
than being processed. The frame headers of received frames will
indicate whether the local peer's transmissions have been
acknowledged by the remote peer. Therefore, the local peer may
unnecessarily re-transmit despite the remote peer already indicating
that the frame had been acknowledged in out of order reliable frame.

	Signed-off-by: Dean Jenkins <Dean_Jenkins@mentor.com>
	Signed-off-by: Jiada Wang <jiada_wang@mentor.com>
	Signed-off-by: Rajeev Kumar <rajeev_kumar@mentor.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 37332ddc1470b820bd9d1eb36a2ca6ce1efb209b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/hci_bcsp.c
diff --cc drivers/bluetooth/hci_bcsp.c
index 064f2fefad62,a2c921faaa12..000000000000
--- a/drivers/bluetooth/hci_bcsp.c
+++ b/drivers/bluetooth/hci_bcsp.c
@@@ -496,26 -518,33 +511,53 @@@ static void bcsp_complete_rx_pkt(struc
  	bcsp->rxack = (bcsp->rx_skb->data[0] >> 3) & 0x07;
  	BT_DBG("Request for pkt %u from card", bcsp->rxack);
  
+ 	/* handle received ACK indications,
+ 	 * including those from out-of-order packets
+ 	 */
  	bcsp_pkt_cull(bcsp);
++<<<<<<< HEAD
 +	if ((bcsp->rx_skb->data[1] & 0x0f) == 6 &&
 +			bcsp->rx_skb->data[0] & 0x80) {
 +		hci_skb_pkt_type(bcsp->rx_skb) = HCI_ACLDATA_PKT;
 +		pass_up = 1;
 +	} else if ((bcsp->rx_skb->data[1] & 0x0f) == 5 &&
 +			bcsp->rx_skb->data[0] & 0x80) {
 +		hci_skb_pkt_type(bcsp->rx_skb) = HCI_EVENT_PKT;
 +		pass_up = 1;
 +	} else if ((bcsp->rx_skb->data[1] & 0x0f) == 7) {
 +		hci_skb_pkt_type(bcsp->rx_skb) = HCI_SCODATA_PKT;
 +		pass_up = 1;
 +	} else if ((bcsp->rx_skb->data[1] & 0x0f) == 1 &&
 +			!(bcsp->rx_skb->data[0] & 0x80)) {
 +		bcsp_handle_le_pkt(hu);
 +		pass_up = 0;
 +	} else
 +		pass_up = 0;
++=======
++>>>>>>> 37332ddc1470 (Bluetooth: BCSP fails to ACK re-transmitted frames from the peer)
+ 
+ 	if (pass_up != 2) {
+ 		if ((bcsp->rx_skb->data[1] & 0x0f) == 6 &&
+ 		    (bcsp->rx_skb->data[0] & 0x80)) {
+ 			hci_skb_pkt_type(bcsp->rx_skb) = HCI_ACLDATA_PKT;
+ 			pass_up = 1;
+ 		} else if ((bcsp->rx_skb->data[1] & 0x0f) == 5 &&
+ 			   (bcsp->rx_skb->data[0] & 0x80)) {
+ 			hci_skb_pkt_type(bcsp->rx_skb) = HCI_EVENT_PKT;
+ 			pass_up = 1;
+ 		} else if ((bcsp->rx_skb->data[1] & 0x0f) == 7) {
+ 			hci_skb_pkt_type(bcsp->rx_skb) = HCI_SCODATA_PKT;
+ 			pass_up = 1;
+ 		} else if ((bcsp->rx_skb->data[1] & 0x0f) == 1 &&
+ 			   !(bcsp->rx_skb->data[0] & 0x80)) {
+ 			bcsp_handle_le_pkt(hu);
+ 			pass_up = 0;
+ 		} else {
+ 			pass_up = 0;
+ 		}
+ 	}
  
- 	if (!pass_up) {
+ 	if (pass_up == 0) {
  		struct hci_event_hdr hdr;
  		u8 desc = (bcsp->rx_skb->data[1] & 0x0f);
  
@@@ -590,18 -624,8 +637,21 @@@ static int bcsp_recv(struct hci_uart *h
  				bcsp->rx_count = 0;
  				continue;
  			}
++<<<<<<< HEAD
 +			if (bcsp->rx_skb->data[0] & 0x80	/* reliable pkt */
 +			    		&& (bcsp->rx_skb->data[0] & 0x07) != bcsp->rxseq_txack) {
 +				BT_ERR("Out-of-order packet arrived, got %u expected %u",
 +					bcsp->rx_skb->data[0] & 0x07, bcsp->rxseq_txack);
 +
 +				kfree_skb(bcsp->rx_skb);
 +				bcsp->rx_state = BCSP_W4_PKT_DELIMITER;
 +				bcsp->rx_count = 0;
 +				continue;
 +			}
++=======
++>>>>>>> 37332ddc1470 (Bluetooth: BCSP fails to ACK re-transmitted frames from the peer)
  			bcsp->rx_state = BCSP_W4_DATA;
 -			bcsp->rx_count = (bcsp->rx_skb->data[1] >> 4) +
 +			bcsp->rx_count = (bcsp->rx_skb->data[1] >> 4) + 
  					(bcsp->rx_skb->data[2] << 4);	/* May be 0 */
  			continue;
  
* Unmerged path drivers/bluetooth/hci_bcsp.c
