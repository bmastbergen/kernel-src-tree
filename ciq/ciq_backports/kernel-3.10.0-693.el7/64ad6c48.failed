Btrfs: don't invalidate root dentry when subvolume deletion fails

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [fs] btrfs: don't invalidate root dentry when subvolume deletion fails ("Eric W. Biederman") [1247935]
Rebuild_FUZZ: 99.24%
commit-author Omar Sandoval <osandov@osandov.com>
commit 64ad6c488975d7516230cf7849190a991fd615ae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/64ad6c48.failed

Since commit bafc9b754f75 ("vfs: More precise tests in d_invalidate"),
mounted subvolumes can be deleted because d_invalidate() won't fail.
However, we run into problems when we attempt to delete the default
subvolume while it is mounted as the root filesystem:

	# btrfs subvol list /
	ID 257 gen 306 top level 5 path rootvol
	ID 267 gen 334 top level 5 path snap1
	# btrfs subvol get-default /
	ID 267 gen 334 top level 5 path snap1
	# btrfs inspect-internal rootid /
	267
	# mount -o subvol=/ /dev/vda1 /mnt
	# btrfs subvol del /mnt/snap1
	Delete subvolume (no-commit): '/mnt/snap1'
	ERROR: cannot delete '/mnt/snap1' - Operation not permitted
	# findmnt /
	findmnt: can't read /proc/mounts: No such file or directory
	# ls /proc
	#

Markus reported that this same scenario simply led to a kernel oops.

This happens because in btrfs_ioctl_snap_destroy(), we call
d_invalidate() before we check may_destroy_subvol(), which means that we
detach the submounts and drop the dentry before erroring out. Instead,
we should only invalidate the dentry once the deletion has succeeded.
Additionally, the shrink_dcache_sb() isn't necessary; d_invalidate()
will prune the dcache for the deleted subvolume.

	Cc: <stable@vger.kernel.org>
Fixes: bafc9b754f75 ("vfs: More precise tests in d_invalidate")
	Reported-by: Markus Schauler <mschauler@gmail.com>
	Signed-off-by: Omar Sandoval <osandov@osandov.com>
	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit 64ad6c488975d7516230cf7849190a991fd615ae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/ioctl.c
diff --cc fs/btrfs/ioctl.c
index 43c3786aca1d,6f790bcddfc1..000000000000
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@@ -2470,10 -2413,6 +2470,13 @@@ static noinline int btrfs_ioctl_snap_de
  		goto out_unlock_inode;
  	}
  
++<<<<<<< HEAD
 +	err = d_invalidate(dentry);
 +	if (err)
 +		goto out_unlock;
 +
++=======
++>>>>>>> 64ad6c488975 (Btrfs: don't invalidate root dentry when subvolume deletion fails)
  	down_write(&root->fs_info->subvol_sem);
  
  	err = may_destroy_subvol(dest);
* Unmerged path fs/btrfs/ioctl.c
