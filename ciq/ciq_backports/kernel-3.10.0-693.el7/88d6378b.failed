netlink: changes for setting and clearing protodown via netlink.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] netlink: changes for setting and clearing protodown via netlink (Ivan Vecera) [1275772 1297841 1331748]
Rebuild_FUZZ: 99.21%
commit-author Anuradha Karuppiah <anuradhak@cumulusnetworks.com>
commit 88d6378bd6c096cb8440face3ae3f33d55a2e6e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/88d6378b.failed

	Signed-off-by: Anuradha Karuppiah <anuradhak@cumulusnetworks.com>
	Signed-off-by: Andy Gospodarek <gospo@cumulusnetworks.com>
	Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>
	Signed-off-by: Wilson Kok <wkok@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 88d6378bd6c096cb8440face3ae3f33d55a2e6e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if_link.h
#	net/core/rtnetlink.c
diff --cc include/uapi/linux/if_link.h
index 1b43f8aab560,24d68b797c59..000000000000
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@@ -153,8 -145,10 +153,13 @@@ enum 
  	IFLA_CARRIER,
  	IFLA_PHYS_PORT_ID,
  	IFLA_CARRIER_CHANGES,
 -	IFLA_PHYS_SWITCH_ID,
 +	__RH_RESERVED_IFLA_PHYS_SWITCH_ID,
  	IFLA_LINK_NETNSID,
++<<<<<<< HEAD
++=======
+ 	IFLA_PHYS_PORT_NAME,
+ 	IFLA_PROTO_DOWN,
++>>>>>>> 88d6378bd6c0 (netlink: changes for setting and clearing protodown via netlink.)
  	__IFLA_MAX
  };
  
diff --cc net/core/rtnetlink.c
index 590c29aca2b6,03d61b54aac0..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -923,7 -895,10 +923,14 @@@ static noinline size_t if_nlmsg_size(co
  	       + rtnl_port_size(dev, ext_filter_mask) /* IFLA_VF_PORTS + IFLA_PORT_SELF */
  	       + rtnl_link_get_size(dev) /* IFLA_LINKINFO */
  	       + rtnl_link_get_af_size(dev) /* IFLA_AF_SPEC */
++<<<<<<< HEAD
 +	       + nla_total_size(MAX_PHYS_ITEM_ID_LEN); /* IFLA_PHYS_PORT_ID */
++=======
+ 	       + nla_total_size(MAX_PHYS_ITEM_ID_LEN) /* IFLA_PHYS_PORT_ID */
+ 	       + nla_total_size(MAX_PHYS_ITEM_ID_LEN) /* IFLA_PHYS_SWITCH_ID */
+ 	       + nla_total_size(1); /* IFLA_PROTO_DOWN */
+ 
++>>>>>>> 88d6378bd6c0 (netlink: changes for setting and clearing protodown via netlink.)
  }
  
  static int rtnl_vf_ports_fill(struct sk_buff *skb, struct net_device *dev)
@@@ -1304,7 -1320,9 +1312,8 @@@ static const struct nla_policy ifla_pol
  	[IFLA_NUM_RX_QUEUES]	= { .type = NLA_U32 },
  	[IFLA_PHYS_PORT_ID]	= { .type = NLA_BINARY, .len = MAX_PHYS_ITEM_ID_LEN },
  	[IFLA_CARRIER_CHANGES]	= { .type = NLA_U32 },  /* ignored */
 -	[IFLA_PHYS_SWITCH_ID]	= { .type = NLA_BINARY, .len = MAX_PHYS_ITEM_ID_LEN },
  	[IFLA_LINK_NETNSID]	= { .type = NLA_S32 },
+ 	[IFLA_PROTO_DOWN]	= { .type = NLA_U8 },
  };
  
  static const struct nla_policy ifla_info_policy[IFLA_INFO_MAX+1] = {
* Unmerged path include/uapi/linux/if_link.h
* Unmerged path net/core/rtnetlink.c
