tracing: Add __get_dynamic_array_len() macro for trace events

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Steven Rostedt (Red Hat) <rostedt@goodmis.org>
commit beba4bb096201ceec0e8cfb7ce3172a53015bdaf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/beba4bb0.failed

If a trace event uses a dynamic array for something other than a string
then there's currently no way the TP_printk() can figure out what size
it is. A __get_dynamic_array_len() is required to know the length.

This also simplifies the __get_bitmask() macro which required it as well,
but instead just hardcoded it.

	Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
(cherry picked from commit beba4bb096201ceec0e8cfb7ce3172a53015bdaf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/trace/ftrace.h
diff --cc include/trace/ftrace.h
index 8bca04ef14e2,0fd06fef9fac..000000000000
--- a/include/trace/ftrace.h
+++ b/include/trace/ftrace.h
@@@ -205,6 -210,15 +209,18 @@@
  #undef __get_str
  #define __get_str(field) (char *)__get_dynamic_array(field)
  
++<<<<<<< HEAD
++=======
+ #undef __get_bitmask
+ #define __get_bitmask(field)						\
+ 	({								\
+ 		void *__bitmask = __get_dynamic_array(field);		\
+ 		unsigned int __bitmask_size;				\
+ 		__bitmask_size = __get_dynamic_array_len(field);	\
+ 		ftrace_print_bitmask_seq(p, __bitmask, __bitmask_size);	\
+ 	})
+ 
++>>>>>>> beba4bb09620 (tracing: Add __get_dynamic_array_len() macro for trace events)
  #undef __print_flags
  #define __print_flags(flag, delim, flag_array...)			\
  	({								\
@@@ -606,7 -640,9 +622,8 @@@ static inline void ftrace_test_probe_##
  #undef __print_symbolic
  #undef __print_hex
  #undef __get_dynamic_array
+ #undef __get_dynamic_array_len
  #undef __get_str
 -#undef __get_bitmask
  
  #undef TP_printk
  #define TP_printk(fmt, args...) "\"" fmt "\", "  __stringify(args)
* Unmerged path include/trace/ftrace.h
