net: cls_u32: be more strict about skip-sw flag

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: cls_u32: be more strict about skip-sw flag (Ivan Vecera) [1390693]
Rebuild_FUZZ: 93.75%
commit-author Jakub Kicinski <jakub.kicinski@netronome.com>
commit d47a0f387fe907bdb0430a398850c1cb80eb7def
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d47a0f38.failed

Return an error if user requested skip-sw and the underlaying
hardware cannot handle tc offloads (or offloads are disabled).

	Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit d47a0f387fe907bdb0430a398850c1cb80eb7def)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_u32.c
diff --cc net/sched/cls_u32.c
index 9fba35eb571c,fe05449537a3..000000000000
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@@ -444,19 -455,25 +444,36 @@@ static void u32_replace_hw_hnode(struc
  	struct net_device *dev = tp->q->dev_queue->dev;
  	struct tc_cls_u32_offload u32_offload = {0};
  	struct tc_to_netdev offload;
 -	int err;
  
+ 	if (!tc_should_offload(dev, flags))
+ 		return tc_skip_sw(flags) ? -EINVAL : 0;
+ 
  	offload.type = TC_SETUP_CLSU32;
  	offload.cls_u32 = &u32_offload;
  
++<<<<<<< HEAD
 +	if (tc_should_offload(dev)) {
 +		offload.cls_u32->command = TC_CLSU32_NEW_HNODE;
 +		offload.cls_u32->hnode.divisor = h->divisor;
 +		offload.cls_u32->hnode.handle = h->handle;
 +		offload.cls_u32->hnode.prio = h->prio;
 +
 +		dev->netdev_ops->ndo_setup_tc(dev, tp->q->handle,
 +					      tp->protocol, &offload);
 +	}
++=======
+ 	offload.cls_u32->command = TC_CLSU32_NEW_HNODE;
+ 	offload.cls_u32->hnode.divisor = h->divisor;
+ 	offload.cls_u32->hnode.handle = h->handle;
+ 	offload.cls_u32->hnode.prio = h->prio;
+ 
+ 	err = dev->netdev_ops->ndo_setup_tc(dev, tp->q->handle,
+ 					    tp->protocol, &offload);
+ 	if (tc_skip_sw(flags))
+ 		return err;
+ 
+ 	return 0;
++>>>>>>> d47a0f387fe9 (net: cls_u32: be more strict about skip-sw flag)
  }
  
  static void u32_clear_hw_hnode(struct tcf_proto *tp, struct tc_u_hnode *h)
* Unmerged path net/sched/cls_u32.c
