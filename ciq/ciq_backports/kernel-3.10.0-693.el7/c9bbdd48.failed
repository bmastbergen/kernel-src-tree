perf/core: Don't pass PERF_EF_START to the PMU ->start callback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Will Deacon <will.deacon@arm.com>
commit c9bbdd4830ab06288bb1d8c00ed8c8c6e80e377a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c9bbdd48.failed

PERF_EF_START is a flag to indicate to the PMU ->add() callback that, as
well as claiming the PMU resources required by the event being added,
it should also start the PMU.

Passing this flag to the ->start() callback doesn't make sense, because
->start() always tries to start the PMU. Remove it.

	Signed-off-by: Will Deacon <will.deacon@arm.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
	Cc: Jiri Olsa <jolsa@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vince Weaver <vincent.weaver@maine.edu>
	Cc: mark.rutland@arm.com
Link: http://lkml.kernel.org/r/1471257765-29662-1-git-send-email-will.deacon@arm.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit c9bbdd4830ab06288bb1d8c00ed8c8c6e80e377a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/core.c
diff --cc kernel/events/core.c
index 0a9c22b63353,74f22a95eb63..000000000000
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@@ -2423,6 -2482,18 +2423,21 @@@ static int __perf_event_stop(void *info
  
  	event->pmu->stop(event, PERF_EF_UPDATE);
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * May race with the actual stop (through perf_pmu_output_stop()),
+ 	 * but it is only used for events with AUX ring buffer, and such
+ 	 * events will refuse to restart because of rb::aux_mmap_count==0,
+ 	 * see comments in perf_aux_output_begin().
+ 	 *
+ 	 * Since this is happening on a event-local CPU, no trace is lost
+ 	 * while restarting.
+ 	 */
+ 	if (sd->restart)
+ 		event->pmu->start(event, 0);
+ 
++>>>>>>> c9bbdd4830ab (perf/core: Don't pass PERF_EF_START to the PMU ->start callback)
  	return 0;
  }
  
* Unmerged path kernel/events/core.c
