perf sched timehist: Split is_idle_sample()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Namhyung Kim <namhyung@kernel.org>
commit 96039c7c52e03b7d6dd773664e74b79e3ae9856a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/96039c7c.failed

The is_idle_sample() function actually does more than determining
whether sample come from idle task.  Split the callchain part into
save_task_callchain() to make it clearer.

Also checking prev_pid from trace data looks preferred than just
checking sample->pid since it's possible, although rare, to have invalid
0 pid/tid on scheduling an exiting task.

	Signed-off-by: Namhyung Kim <namhyung@kernel.org>
	Acked-by: David Ahern <dsahern@gmail.com>
	Cc: Andi Kleen <andi@firstfloor.org>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Minchan Kim <minchan@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: http://lkml.kernel.org/r/20161208144755.16673-2-namhyung@kernel.org
[ Remove some needless () in some return statements ]
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 96039c7c52e03b7d6dd773664e74b79e3ae9856a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-sched.c
diff --cc tools/perf/builtin-sched.c
index ce42c7ce12fc,966eddce1609..000000000000
--- a/tools/perf/builtin-sched.c
+++ b/tools/perf/builtin-sched.c
@@@ -1966,10 -1972,29 +1967,32 @@@ static void save_task_callchain(struct 
  		if (verbose)
  			error("Failed to resolve callchain. Skipping\n");
  
- 		return false;
+ 		return;
  	}
 -
  	callchain_cursor_commit(cursor);
++<<<<<<< HEAD
 +	return false;
++=======
+ 
+ 	while (true) {
+ 		struct callchain_cursor_node *node;
+ 		struct symbol *sym;
+ 
+ 		node = callchain_cursor_current(cursor);
+ 		if (node == NULL)
+ 			break;
+ 
+ 		sym = node->sym;
+ 		if (sym && sym->name) {
+ 			if (!strcmp(sym->name, "schedule") ||
+ 			    !strcmp(sym->name, "__schedule") ||
+ 			    !strcmp(sym->name, "preempt_schedule"))
+ 				sym->ignore = 1;
+ 		}
+ 
+ 		callchain_cursor_advance(cursor);
+ 	}
++>>>>>>> 96039c7c52e0 (perf sched timehist: Split is_idle_sample())
  }
  
  /*
* Unmerged path tools/perf/builtin-sched.c
