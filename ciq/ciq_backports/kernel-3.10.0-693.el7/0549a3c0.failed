kdump, vmcoreinfo: report memory sections virtual addresses

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Thomas Garnier <thgarnie@google.com>
commit 0549a3c02efb350776bc869685a361045efd3a29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0549a3c0.failed

KASLR memory randomization can randomize the base of the physical memory
mapping (PAGE_OFFSET), vmalloc (VMALLOC_START) and vmemmap
(VMEMMAP_START).  Adding these variables on VMCOREINFO so tools can easily
identify the base of each memory section.

Link: http://lkml.kernel.org/r/1471531632-23003-1-git-send-email-thgarnie@google.com
	Signed-off-by: Thomas Garnier <thgarnie@google.com>
	Acked-by: Baoquan He <bhe@redhat.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: "H . Peter Anvin" <hpa@zytor.com>
	Cc: Eric Biederman <ebiederm@xmission.com>
	Cc: Xunlei Pang <xlpang@redhat.com>
	Cc: HATAYAMA Daisuke <d.hatayama@jp.fujitsu.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Eugene Surovegin <surovegin@google.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0549a3c02efb350776bc869685a361045efd3a29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/machine_kexec_64.c
diff --cc arch/x86/kernel/machine_kexec_64.c
index 485981059a40,8c1f218926d7..000000000000
--- a/arch/x86/kernel/machine_kexec_64.c
+++ b/arch/x86/kernel/machine_kexec_64.c
@@@ -333,7 -336,10 +333,14 @@@ void arch_crash_save_vmcoreinfo(void
  	VMCOREINFO_LENGTH(node_data, MAX_NUMNODES);
  #endif
  	vmcoreinfo_append_str("KERNELOFFSET=%lx\n",
++<<<<<<< HEAD
 +			      (unsigned long)&_text - __START_KERNEL);
++=======
+ 			      kaslr_offset());
+ 	VMCOREINFO_PAGE_OFFSET(PAGE_OFFSET);
+ 	VMCOREINFO_VMALLOC_START(VMALLOC_START);
+ 	VMCOREINFO_VMEMMAP_START(VMEMMAP_START);
++>>>>>>> 0549a3c02efb (kdump, vmcoreinfo: report memory sections virtual addresses)
  }
  
  /* arch-dependent functionality related to kexec file-based syscall */
* Unmerged path arch/x86/kernel/machine_kexec_64.c
diff --git a/include/linux/kexec.h b/include/linux/kexec.h
index 21b70826e398..0c5dd10d97ba 100644
--- a/include/linux/kexec.h
+++ b/include/linux/kexec.h
@@ -261,6 +261,12 @@ unsigned long paddr_vmcoreinfo_note(void);
 	vmcoreinfo_append_str("NUMBER(%s)=%ld\n", #name, (long)name)
 #define VMCOREINFO_CONFIG(name) \
 	vmcoreinfo_append_str("CONFIG_%s=y\n", #name)
+#define VMCOREINFO_PAGE_OFFSET(value) \
+	vmcoreinfo_append_str("PAGE_OFFSET=%lx\n", (unsigned long)value)
+#define VMCOREINFO_VMALLOC_START(value) \
+	vmcoreinfo_append_str("VMALLOC_START=%lx\n", (unsigned long)value)
+#define VMCOREINFO_VMEMMAP_START(value) \
+	vmcoreinfo_append_str("VMEMMAP_START=%lx\n", (unsigned long)value)
 
 extern struct kimage *kexec_image;
 extern struct kimage *kexec_crash_image;
