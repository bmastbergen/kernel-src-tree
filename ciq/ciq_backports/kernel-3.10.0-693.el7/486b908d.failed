HID: wacom: do not send pen events before touch is up/forced out

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: do not send pen events before touch is up/forced out (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 95.93%
commit-author Ping Cheng <pinglinux@gmail.com>
commit 486b908d4412510d66ee348ba765de8d93441345
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/486b908d.failed

If pen comes in proximity while touch is down, we force touch up
before sending pen events. Otherwise, there can be unfinished
touch events compete with pen events. This idea has been fully
implemented for Tablet PCs. But other tablets that support both
pen and touch are not fully considered.

	Signed-off-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 486b908d4412510d66ee348ba765de8d93441345)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom_wac.c
index d83376be6444,69827c928e50..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -446,8 -551,14 +446,19 @@@ static int wacom_intuos_inout(struct wa
  	   (features->type == CINTIQ && !(data[1] & 0x40)))
  		return 1;
  
++<<<<<<< HEAD
 +	/* Range Report */
 +	if ((data[1] & 0xfe) == 0x20) {
++=======
+ 	if (features->quirks & WACOM_QUIRK_MULTI_INPUT)
+ 		wacom->shared->stylus_in_proximity = true;
+ 
+ 	if (wacom->shared->touch_down)
+ 		return 1;
+ 
+ 	/* in Range while exiting */
+ 	if (((data[1] & 0xfe) == 0x20) && wacom->reporting_data) {
++>>>>>>> 486b908d4412 (HID: wacom: do not send pen events before touch is up/forced out)
  		input_report_key(input, BTN_TOUCH, 0);
  		input_report_abs(input, ABS_PRESSURE, 0);
  		input_report_abs(input, ABS_DISTANCE, wacom->features.distance_max);
@@@ -1239,9 -1748,23 +1250,26 @@@ static int wacom_bpt_pen(struct wacom_w
  	unsigned char *data = wacom->data;
  	int prox = 0, x = 0, y = 0, p = 0, d = 0, pen = 0, btn1 = 0, btn2 = 0;
  
 -	if (data[0] != WACOM_REPORT_PENABLED && data[0] != WACOM_REPORT_USB)
 +	if (data[0] != 0x02)
  	    return 0;
  
++<<<<<<< HEAD
++=======
+ 	if (data[0] == WACOM_REPORT_USB) {
+ 		if (features->type == INTUOSHT &&
+ 		    wacom->shared->touch_input &&
+ 		    features->touch_max) {
+ 			input_report_switch(wacom->shared->touch_input,
+ 					    SW_MUTE_DEVICE, data[8] & 0x40);
+ 			input_sync(wacom->shared->touch_input);
+ 		}
+ 		return 0;
+ 	}
+ 
+ 	if (wacom->shared->touch_down)
+ 		return 0;
+ 
++>>>>>>> 486b908d4412 (HID: wacom: do not send pen events before touch is up/forced out)
  	prox = (data[1] & 0x20) == 0x20;
  
  	/*
* Unmerged path drivers/hid/wacom_wac.c
