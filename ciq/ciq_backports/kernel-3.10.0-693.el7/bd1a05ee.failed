fixed_phy: pass 'irq' to fixed_phy_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] phy: fixed_phy: pass 'irq' to fixed_phy_add() (Ivan Vecera) [1382040]
Rebuild_FUZZ: 94.12%
commit-author Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
commit bd1a05ee98b06c9a20138c45f96ccfddf3163f93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/bd1a05ee.failed

I've noticed  that fixed_phy_register() ignores its 'irq' parameter instead of
passing it to fixed_phy_add(). Luckily, fixed_phy_register()  seems to  always
be  called with PHY_POLL  for 'irq'... :-)

Fixes: a75951217472 ("net: phy: extend fixed driver with fixed_phy_register()")
	Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
	Acked-by: Florian Fainelli <f.fainelli@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bd1a05ee98b06c9a20138c45f96ccfddf3163f93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/fixed_phy.c
diff --cc drivers/net/phy/fixed_phy.c
index 0b6b5e8ee74c,fb1299c6326e..000000000000
--- a/drivers/net/phy/fixed_phy.c
+++ b/drivers/net/phy/fixed_phy.c
@@@ -282,9 -325,9 +282,13 @@@ int fixed_phy_register(unsigned int irq
  	phy_addr = phy_fixed_addr++;
  	spin_unlock(&phy_fixed_addr_lock);
  
++<<<<<<< HEAD
 +	ret = fixed_phy_add(PHY_POLL, phy_addr, status);
++=======
+ 	ret = fixed_phy_add(irq, phy_addr, status, link_gpio);
++>>>>>>> bd1a05ee98b0 (fixed_phy: pass 'irq' to fixed_phy_add())
  	if (ret < 0)
 -		return ERR_PTR(ret);
 +		return ret;
  
  	phy = get_phy_device(fmb->mii_bus, phy_addr, false);
  	if (!phy || IS_ERR(phy)) {
* Unmerged path drivers/net/phy/fixed_phy.c
