x86/cpufreq: Use Intel family name macros for the intel_pstate cpufreq driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] cpufreq: Use Intel family name macros for the intel_pstate cpufreq driver (Steve Best) [1416559]
Rebuild_FUZZ: 97.33%
commit-author Dave Hansen <dave.hansen@linux.intel.com>
commit 5b20c944882ce35da0074b9eabe41a172aea030b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5b20c944.failed

Another straightforward replacement of magic numbers.

	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Acked-by: Rafael J. Wysocki <rjw@rjwysocki.net>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Dave Hansen <dave@sr71.net>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Len Brown <lenb@kernel.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Viresh Kumar <viresh.kumar@linaro.org>
	Cc: jacob.jun.pan@intel.com
	Cc: linux-pm@vger.kernel.org
Link: http://lkml.kernel.org/r/20160603001945.0F5D02AA@viggo.jf.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 5b20c944882ce35da0074b9eabe41a172aea030b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/intel_pstate.c
diff --cc drivers/cpufreq/intel_pstate.c
index f7f1d8d36a06,9b1f5d73d306..000000000000
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@@ -31,6 -34,8 +31,11 @@@
  #include <asm/div64.h>
  #include <asm/msr.h>
  #include <asm/cpu_device_id.h>
++<<<<<<< HEAD
++=======
+ #include <asm/cpufeature.h>
+ #include <asm/intel-family.h>
++>>>>>>> 5b20c944882c (x86/cpufreq: Use Intel family name macros for the intel_pstate cpufreq driver)
  
  #define ATOM_RATIOS		0x66a
  #define ATOM_VIDS		0x66b
@@@ -1002,22 -1353,23 +1007,42 @@@ static void intel_pstate_timer_func(uns
  			(unsigned long)&policy }
  
  static const struct x86_cpu_id intel_pstate_cpu_ids[] = {
++<<<<<<< HEAD
 +	ICPU(0x2a, core_params),
 +	ICPU(0x2d, core_params),
 +	ICPU(0x37, atom_params),
 +	ICPU(0x3a, core_params),
 +	ICPU(0x3c, core_params),
 +	ICPU(0x3d, core_params),
 +	ICPU(0x3e, core_params),
 +	ICPU(0x3f, core_params),
 +	ICPU(0x45, core_params),
 +	ICPU(0x46, core_params),
 +	ICPU(0x47, core_params),
 +	ICPU(0x4e, core_params),
 +	ICPU(0x4f, core_params),
 +	ICPU(0x5e, core_params),
 +	ICPU(0x56, core_params),
 +	ICPU(0x57, knl_params),
++=======
+ 	ICPU(INTEL_FAM6_SANDYBRIDGE, 		core_params),
+ 	ICPU(INTEL_FAM6_SANDYBRIDGE_X,		core_params),
+ 	ICPU(INTEL_FAM6_ATOM_SILVERMONT1,	silvermont_params),
+ 	ICPU(INTEL_FAM6_IVYBRIDGE,		core_params),
+ 	ICPU(INTEL_FAM6_HASWELL_CORE,		core_params),
+ 	ICPU(INTEL_FAM6_BROADWELL_CORE,		core_params),
+ 	ICPU(INTEL_FAM6_IVYBRIDGE_X,		core_params),
+ 	ICPU(INTEL_FAM6_HASWELL_X,		core_params),
+ 	ICPU(INTEL_FAM6_HASWELL_ULT,		core_params),
+ 	ICPU(INTEL_FAM6_HASWELL_GT3E,		core_params),
+ 	ICPU(INTEL_FAM6_BROADWELL_GT3E,		core_params),
+ 	ICPU(INTEL_FAM6_ATOM_AIRMONT,		airmont_params),
+ 	ICPU(INTEL_FAM6_SKYLAKE_MOBILE,		core_params),
+ 	ICPU(INTEL_FAM6_BROADWELL_X,		core_params),
+ 	ICPU(INTEL_FAM6_SKYLAKE_DESKTOP,	core_params),
+ 	ICPU(INTEL_FAM6_BROADWELL_XEON_D,	core_params),
+ 	ICPU(INTEL_FAM6_XEON_PHI_KNL,		knl_params),
++>>>>>>> 5b20c944882c (x86/cpufreq: Use Intel family name macros for the intel_pstate cpufreq driver)
  	{}
  };
  MODULE_DEVICE_TABLE(x86cpu, intel_pstate_cpu_ids);
* Unmerged path drivers/cpufreq/intel_pstate.c
