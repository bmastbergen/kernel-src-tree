vfs: make argument of d_real_inode() const

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 7b1742eb06ead6d02a6cf3c44587088e5392d1aa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7b1742eb.failed

d_op->d_real() leaves the dentry alone except if the third argument is
non-zero.  Unfortunately very difficult to explain to the compiler without
a cast.

	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
	Acked-by: Jeff Layton <jlayton@poochiereds.net>
(cherry picked from commit 7b1742eb06ead6d02a6cf3c44587088e5392d1aa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/dcache.h
diff --cc include/linux/dcache.h
index cb191dcd4eb7,5beed7b30561..000000000000
--- a/include/linux/dcache.h
+++ b/include/linux/dcache.h
@@@ -567,4 -556,39 +567,42 @@@ static inline struct dentry *d_backing_
  	return upper;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * d_real - Return the real dentry
+  * @dentry: the dentry to query
+  * @inode: inode to select the dentry from multiple layers (can be NULL)
+  * @flags: open flags to control copy-up behavior
+  *
+  * If dentry is on an union/overlay, then return the underlying, real dentry.
+  * Otherwise return the dentry itself.
+  *
+  * See also: Documentation/filesystems/vfs.txt
+  */
+ static inline struct dentry *d_real(struct dentry *dentry,
+ 				    const struct inode *inode,
+ 				    unsigned int flags)
+ {
+ 	if (unlikely(dentry->d_flags & DCACHE_OP_REAL))
+ 		return dentry->d_op->d_real(dentry, inode, flags);
+ 	else
+ 		return dentry;
+ }
+ 
+ /**
+  * d_real_inode - Return the real inode
+  * @dentry: The dentry to query
+  *
+  * If dentry is on an union/overlay, then return the underlying, real inode.
+  * Otherwise return d_inode().
+  */
+ static inline struct inode *d_real_inode(const struct dentry *dentry)
+ {
+ 	/* This usage of d_real() results in const dentry */
+ 	return d_backing_inode(d_real((struct dentry *) dentry, NULL, 0));
+ }
+ 
+ 
++>>>>>>> 7b1742eb06ea (vfs: make argument of d_real_inode() const)
  #endif	/* __LINUX_DCACHE_H */
* Unmerged path include/linux/dcache.h
