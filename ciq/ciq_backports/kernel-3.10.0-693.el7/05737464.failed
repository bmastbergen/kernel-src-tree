perf record: Read from overwritable ring buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 057374645bd42e8bcf22aa4529f99cf7c920a1c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/05737464.failed

Drive the evlist->bkw_mmap_state state machine during draining and when
SIGUSR2 is received. Read the backward ring buffer in record__mmap_read_all.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Cc: Masami Hiramatsu <mhiramat@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Nilay Vaish <nilayvaish@gmail.com>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1468485287-33422-12-git-send-email-wangnan0@huawei.com
	Signed-off-by: He Kuang <hekuang@huawei.com>
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 057374645bd42e8bcf22aa4529f99cf7c920a1c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-record.c
diff --cc tools/perf/builtin-record.c
index 5f9433ee7668,b87070b1f492..000000000000
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@@ -927,8 -953,20 +927,19 @@@ static int __cmd_record(struct record *
  	for (;;) {
  		unsigned long long hits = rec->samples;
  
+ 		/*
+ 		 * rec->evlist->bkw_mmap_state is possible to be
+ 		 * BKW_MMAP_EMPTY here: when done == true and
+ 		 * hits != rec->samples in previous round.
+ 		 *
+ 		 * perf_evlist__toggle_bkw_mmap ensure we never
+ 		 * convert BKW_MMAP_EMPTY to BKW_MMAP_DATA_PENDING.
+ 		 */
+ 		if (trigger_is_hit(&switch_output_trigger) || done || draining)
+ 			perf_evlist__toggle_bkw_mmap(rec->evlist, BKW_MMAP_DATA_PENDING);
+ 
  		if (record__mmap_read_all(rec) < 0) {
 -			trigger_error(&auxtrace_snapshot_trigger);
 -			trigger_error(&switch_output_trigger);
 +			auxtrace_snapshot_disable();
  			err = -1;
  			goto out_child;
  		}
@@@ -944,6 -982,40 +955,43 @@@
  			}
  		}
  
++<<<<<<< HEAD
++=======
+ 		if (trigger_is_hit(&switch_output_trigger)) {
+ 			/*
+ 			 * If switch_output_trigger is hit, the data in
+ 			 * overwritable ring buffer should have been collected,
+ 			 * so bkw_mmap_state should be set to BKW_MMAP_EMPTY.
+ 			 *
+ 			 * If SIGUSR2 raise after or during record__mmap_read_all(),
+ 			 * record__mmap_read_all() didn't collect data from
+ 			 * overwritable ring buffer. Read again.
+ 			 */
+ 			if (rec->evlist->bkw_mmap_state == BKW_MMAP_RUNNING)
+ 				continue;
+ 			trigger_ready(&switch_output_trigger);
+ 
+ 			/*
+ 			 * Reenable events in overwrite ring buffer after
+ 			 * record__mmap_read_all(): we should have collected
+ 			 * data from it.
+ 			 */
+ 			perf_evlist__toggle_bkw_mmap(rec->evlist, BKW_MMAP_RUNNING);
+ 
+ 			if (!quiet)
+ 				fprintf(stderr, "[ perf record: dump data: Woken up %ld times ]\n",
+ 					waking);
+ 			waking = 0;
+ 			fd = record__switch_output(rec, false);
+ 			if (fd < 0) {
+ 				pr_err("Failed to switch to new file\n");
+ 				trigger_error(&switch_output_trigger);
+ 				err = fd;
+ 				goto out_child;
+ 			}
+ 		}
+ 
++>>>>>>> 057374645bd4 (perf record: Read from overwritable ring buffer)
  		if (hits == rec->samples) {
  			if (done || draining)
  				break;
* Unmerged path tools/perf/builtin-record.c
