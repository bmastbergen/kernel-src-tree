md/raid1: fix: IO can block resync indefinitely

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [md] raid1: fix: IO can block resync indefinitely (Jes Sorensen) [1379764 1380016]
Rebuild_FUZZ: 96.70%
commit-author NeilBrown <neilb@suse.com>
commit f2c771a655046f21bb70d5813aa94979d2bd49c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f2c771a6.failed

While performing a resync/recovery, raid1 divides the
array space into three regions:
 - before the resync
 - at or shortly after the resync point
 - much further ahead of the resync point.

Write requests to the first or third do not need to wait.  Write
requests to the middle region do need to wait if resync requests are
pending.

If there are any active write requests in the middle region, resync
will wait for them.

Due to an accounting error, there is a small range of addresses,
between conf->next_resync and conf->start_next_window, where write
requests will *not* be blocked, but *will* be counted in the middle
region.  This can effectively block resync indefinitely if filesystem
writes happen repeatedly to this region.

As ->next_window_requests is incremented when the sector is after
  conf->start_next_window + NEXT_NORMALIO_DISTANCE
the same boundary should be used for determining when write requests
should wait.

	Signed-off-by: NeilBrown <neilb@suse.com>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit f2c771a655046f21bb70d5813aa94979d2bd49c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid1.c
diff --cc drivers/md/raid1.c
index 61555b115942,9ac61cd85e5c..000000000000
--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@@ -865,8 -834,8 +865,13 @@@ static bool need_to_wait_for_sync(struc
  	else if (conf->barrier && bio_data_dir(bio) == WRITE) {
  		if ((conf->mddev->curr_resync_completed
  		     >= bio_end_sector(bio)) ||
++<<<<<<< HEAD
 +		    (conf->next_resync + NEXT_NORMALIO_DISTANCE
 +		     <= bio->bi_sector))
++=======
+ 		    (conf->start_next_window + NEXT_NORMALIO_DISTANCE
+ 		     <= bio->bi_iter.bi_sector))
++>>>>>>> f2c771a65504 (md/raid1: fix: IO can block resync indefinitely)
  			wait = false;
  		else
  			wait = true;
* Unmerged path drivers/md/raid1.c
