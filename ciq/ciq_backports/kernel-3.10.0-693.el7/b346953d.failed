s390/pci: use macro for attribute creation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [s390] pci: use macro for attribute creation (Hendrik Brueckner) [1380776]
Rebuild_FUZZ: 93.67%
commit-author Sebastian Ott <sebott@linux.vnet.ibm.com>
commit b346953ddac0d57d4852ddc2b5cd9e16c84ddd59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b346953d.failed

Introduce the zpci_attr macro to create read only sysfs attributes
to avoid duplicate code.

	Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
	Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
	Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
(cherry picked from commit b346953ddac0d57d4852ddc2b5cd9e16c84ddd59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci_sysfs.c
diff --cc arch/s390/pci/pci_sysfs.c
index 9c2d96ab3de1,ebe2c1648fb5..000000000000
--- a/arch/s390/pci/pci_sysfs.c
+++ b/arch/s390/pci/pci_sysfs.c
@@@ -12,43 -12,23 +12,54 @@@
  #include <linux/stat.h>
  #include <linux/pci.h>
  
- static ssize_t show_fid(struct device *dev, struct device_attribute *attr,
- 			char *buf)
- {
- 	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
- 
- 	return sprintf(buf, "0x%08x\n", zdev->fid);
- }
- static DEVICE_ATTR(function_id, S_IRUGO, show_fid, NULL);
- 
+ #define zpci_attr(name, fmt, member)					\
+ static ssize_t name##_show(struct device *dev,				\
+ 			   struct device_attribute *attr, char *buf)	\
+ {									\
+ 	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));		\
+ 									\
+ 	return sprintf(buf, fmt, zdev->member);				\
+ }									\
+ static DEVICE_ATTR_RO(name)
+ 
+ zpci_attr(function_id, "0x%08x\n", fid);
+ zpci_attr(function_handle, "0x%08x\n", fh);
+ zpci_attr(pchid, "0x%04x\n", pchid);
+ zpci_attr(pfgid, "0x%02x\n", pfgid);
+ 
++<<<<<<< HEAD
 +static ssize_t show_fh(struct device *dev, struct device_attribute *attr,
 +		       char *buf)
 +{
 +	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 +
 +	return sprintf(buf, "0x%08x\n", zdev->fh);
 +}
 +static DEVICE_ATTR(function_handle, S_IRUGO, show_fh, NULL);
 +
 +static ssize_t show_pchid(struct device *dev, struct device_attribute *attr,
 +			  char *buf)
 +{
 +	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 +
 +	return sprintf(buf, "0x%04x\n", zdev->pchid);
 +}
 +static DEVICE_ATTR(pchid, S_IRUGO, show_pchid, NULL);
 +
 +static ssize_t show_pfgid(struct device *dev, struct device_attribute *attr,
 +			  char *buf)
 +{
 +	struct zpci_dev *zdev = get_zdev(to_pci_dev(dev));
 +
 +	return sprintf(buf, "0x%02x\n", zdev->pfgid);
 +}
 +static DEVICE_ATTR(pfgid, S_IRUGO, show_pfgid, NULL);
 +
 +static void recover_callback(struct device *dev)
++=======
+ static ssize_t recover_store(struct device *dev, struct device_attribute *attr,
+ 			     const char *buf, size_t count)
++>>>>>>> b346953ddac0 (s390/pci: use macro for attribute creation)
  {
  	struct pci_dev *pdev = to_pci_dev(dev);
  	struct zpci_dev *zdev = get_zdev(pdev);
@@@ -62,33 -44,43 +73,33 @@@
  
  	ret = zpci_enable_device(zdev);
  	if (ret)
 -		return ret;
 +		goto error;
  
  	pci_rescan_bus(zdev->bus);
 -	return count;
 -}
 -static DEVICE_ATTR_WO(recover);
 -
 -static struct device_attribute *zpci_dev_attrs[] = {
 -	&dev_attr_function_id,
 -	&dev_attr_function_handle,
 -	&dev_attr_pchid,
 -	&dev_attr_pfgid,
 -	&dev_attr_recover,
 -	NULL,
 -};
 -
 -int zpci_sysfs_add_device(struct device *dev)
 -{
 -	int i, rc = 0;
 -
 -	for (i = 0; zpci_dev_attrs[i]; i++) {
 -		rc = device_create_file(dev, zpci_dev_attrs[i]);
 -		if (rc)
 -			goto error;
 -	}
 -	return 0;
 -
  error:
 -	while (--i >= 0)
 -		device_remove_file(dev, zpci_dev_attrs[i]);
 -	return rc;
 +	pci_unlock_rescan_remove();
  }
  
 -void zpci_sysfs_remove_device(struct device *dev)
 +static ssize_t store_recover(struct device *dev, struct device_attribute *attr,
 +			     const char *buf, size_t count)
  {
 -	int i;
 -
 -	for (i = 0; zpci_dev_attrs[i]; i++)
 -		device_remove_file(dev, zpci_dev_attrs[i]);
 +	int rc = device_schedule_callback(dev, recover_callback);
 +	return rc ? rc : count;
  }
- static DEVICE_ATTR(recover, S_IWUSR, NULL, store_recover);
++static DEVICE_ATTR_WO(recover);
 +
 +static struct attribute *zpci_dev_attrs[] = {
 +	&dev_attr_function_id.attr,
 +	&dev_attr_function_handle.attr,
 +	&dev_attr_pchid.attr,
 +	&dev_attr_pfgid.attr,
 +	&dev_attr_recover.attr,
 +	NULL,
 +};
 +static struct attribute_group zpci_attr_group = {
 +	.attrs = zpci_dev_attrs,
 +};
 +const struct attribute_group *zpci_attr_groups[] = {
 +	&zpci_attr_group,
 +	NULL,
 +};
* Unmerged path arch/s390/pci/pci_sysfs.c
