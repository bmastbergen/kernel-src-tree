mm: silently skip readahead for DAX inodes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [mm] silently skip readahead for DAX inodes (Eric Sandeen) [1366943 1430424]
Rebuild_FUZZ: 95.00%
commit-author Ross Zwisler <ross.zwisler@linux.intel.com>
commit 11bd969fdefea3ac0cb9791224f1e09784e21e58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/11bd969f.failed

For DAX inodes we need to be careful to never have page cache pages in
the mapping->page_tree.  This radix tree should be composed only of DAX
exceptional entries and zero pages.

ltp's readahead02 test was triggering a warning because we were trying
to insert a DAX exceptional entry but found that a page cache page had
already been inserted into the tree.  This page was being inserted into
the radix tree in response to a readahead(2) call.

Readahead doesn't make sense for DAX inodes, but we don't want it to
report a failure either.  Instead, we just return success and don't do
any work.

Link: http://lkml.kernel.org/r/20160824221429.21158-1-ross.zwisler@linux.intel.com
	Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
	Reported-by: Jeff Moyer <jmoyer@redhat.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Dave Chinner <david@fromorbit.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Jan Kara <jack@suse.com>
	Cc: <stable@vger.kernel.org>	[4.5+]
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 11bd969fdefea3ac0cb9791224f1e09784e21e58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/readahead.c
diff --cc mm/readahead.c
index a386b06d832b,c8a955b1297e..000000000000
--- a/mm/readahead.c
+++ b/mm/readahead.c
@@@ -8,9 -8,8 +8,13 @@@
   */
  
  #include <linux/kernel.h>
++<<<<<<< HEAD
 +#include <linux/fs.h>
++=======
+ #include <linux/dax.h>
++>>>>>>> 11bd969fdefe (mm: silently skip readahead for DAX inodes)
  #include <linux/gfp.h>
 +#include <linux/mm.h>
  #include <linux/export.h>
  #include <linux/blkdev.h>
  #include <linux/backing-dev.h>
@@@ -566,11 -542,18 +570,23 @@@ static ssize_
  do_readahead(struct address_space *mapping, struct file *filp,
  	     pgoff_t index, unsigned long nr)
  {
 -	if (!mapping || !mapping->a_ops)
 +	if (!mapping || !mapping->a_ops || !mapping->a_ops->readpage)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	force_page_cache_readahead(mapping, filp, index, nr);
 +	return 0;
++=======
+ 	/*
+ 	 * Readahead doesn't make sense for DAX inodes, but we don't want it
+ 	 * to report a failure either.  Instead, we just return success and
+ 	 * don't do any work.
+ 	 */
+ 	if (dax_mapping(mapping))
+ 		return 0;
+ 
+ 	return force_page_cache_readahead(mapping, filp, index, nr);
++>>>>>>> 11bd969fdefe (mm: silently skip readahead for DAX inodes)
  }
  
  SYSCALL_DEFINE3(readahead, int, fd, loff_t, offset, size_t, count)
* Unmerged path mm/readahead.c
