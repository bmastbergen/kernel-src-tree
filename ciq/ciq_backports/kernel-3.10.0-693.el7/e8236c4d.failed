x86, kaslr: Add a circular multiply for better bit diffusion

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] kaslr: Add a circular multiply for better bit diffusion (Baoquan He) [1290840]
Rebuild_FUZZ: 95.65%
commit-author H. Peter Anvin <hpa@zytor.com>
commit e8236c4d9338d52d0f2fcecc0b792ac0542e4ee9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e8236c4d.failed

If we don't have RDRAND (in which case nothing else *should* matter),
most sources have a highly biased entropy distribution.  Use a
circular multiply to diffuse the entropic bits.  A circular multiply
is a good operation for this: it is cheap on standard hardware and
because it is symmetric (unlike an ordinary multiply) it doesn't
introduce its own bias.

	Cc: Kees Cook <keescook@chromium.org>
	Signed-off-by: H. Peter Anvin <hpa@zytor.com>
Link: http://lkml.kernel.org/r/20131111222839.GA28616@www.outflux.net
(cherry picked from commit e8236c4d9338d52d0f2fcecc0b792ac0542e4ee9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/aslr.c
* Unmerged path arch/x86/boot/compressed/aslr.c
* Unmerged path arch/x86/boot/compressed/aslr.c
