qeth: omit outbound queue 3 for unicast packets in Priority Queuing on HiperSockets

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Hans Wippel <hwippel@linux.vnet.ibm.com>
commit 70deb01662b130748f738525120ef4a68b59c398
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/70deb016.failed

On HiperSockets only outbound queues 0 to 2 are available for unicast
packets. Current Priority Queuing implementation in the qeth driver puts
outgoing packets in outbound queues 0 to 3.

This puts outgoing unicast packets into outbound queue 2 instead of
outbound queue 3 when using Priority Queuing on a HiperSocket.
Additionally, the default outbound queue cannot be set to outbound queue 3
on HiperSockets.

	Signed-off-by: Hans Wippel <hwippel@linux.vnet.ibm.com>
	Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 70deb01662b130748f738525120ef4a68b59c398)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/qeth_core_sys.c
diff --cc drivers/s390/net/qeth_core_sys.c
index 15523f0e4c03,75b29fd2fcf4..000000000000
--- a/drivers/s390/net/qeth_core_sys.c
+++ b/drivers/s390/net/qeth_core_sys.c
@@@ -270,19 -233,23 +270,27 @@@ static ssize_t qeth_dev_prioqing_store(
  		}
  		card->qdio.do_prio_queueing = QETH_PRIO_Q_ING_VLAN;
  		card->qdio.default_out_queue = QETH_DEFAULT_QUEUE;
 -	} else if (sysfs_streq(buf, "no_prio_queueing:0")) {
 +	} else if (!strcmp(tmp, "no_prio_queueing:0")) {
  		card->qdio.do_prio_queueing = QETH_NO_PRIO_QUEUEING;
  		card->qdio.default_out_queue = 0;
 -	} else if (sysfs_streq(buf, "no_prio_queueing:1")) {
 +	} else if (!strcmp(tmp, "no_prio_queueing:1")) {
  		card->qdio.do_prio_queueing = QETH_NO_PRIO_QUEUEING;
  		card->qdio.default_out_queue = 1;
 -	} else if (sysfs_streq(buf, "no_prio_queueing:2")) {
 +	} else if (!strcmp(tmp, "no_prio_queueing:2")) {
  		card->qdio.do_prio_queueing = QETH_NO_PRIO_QUEUEING;
  		card->qdio.default_out_queue = 2;
++<<<<<<< HEAD
 +	} else if (!strcmp(tmp, "no_prio_queueing:3")) {
++=======
+ 	} else if (sysfs_streq(buf, "no_prio_queueing:3")) {
+ 		if (card->info.type == QETH_CARD_TYPE_IQD) {
+ 			rc = -EPERM;
+ 			goto out;
+ 		}
++>>>>>>> 70deb01662b1 (qeth: omit outbound queue 3 for unicast packets in Priority Queuing on HiperSockets)
  		card->qdio.do_prio_queueing = QETH_NO_PRIO_QUEUEING;
  		card->qdio.default_out_queue = 3;
 -	} else if (sysfs_streq(buf, "no_prio_queueing")) {
 +	} else if (!strcmp(tmp, "no_prio_queueing")) {
  		card->qdio.do_prio_queueing = QETH_NO_PRIO_QUEUEING;
  		card->qdio.default_out_queue = QETH_DEFAULT_QUEUE;
  	} else
diff --git a/drivers/s390/net/qeth_core_main.c b/drivers/s390/net/qeth_core_main.c
index b4293f9ce2f3..cdefd59e0c65 100644
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -3703,6 +3703,14 @@ void qeth_qdio_output_handler(struct ccw_device *ccwdev,
 }
 EXPORT_SYMBOL_GPL(qeth_qdio_output_handler);
 
+/* We cannot use outbound queue 3 for unicast packets on HiperSockets */
+static inline int qeth_cut_iqd_prio(struct qeth_card *card, int queue_num)
+{
+	if ((card->info.type == QETH_CARD_TYPE_IQD) && (queue_num == 3))
+		return 2;
+	return queue_num;
+}
+
 /**
  * Note: Function assumes that we have 4 outbound queues.
  */
@@ -3730,9 +3738,9 @@ int qeth_get_priority_queue(struct qeth_card *card, struct sk_buff *skb,
 			return card->qdio.default_out_queue;
 		}
 		if (card->qdio.do_prio_queueing == QETH_PRIO_Q_ING_PREC)
-			return ~tos >> 6 & 3;
+			return qeth_cut_iqd_prio(card, ~tos >> 6 & 3);
 		if (tos & IPTOS_MINCOST)
-			return 3;
+			return qeth_cut_iqd_prio(card, 3);
 		if (tos & IPTOS_RELIABILITY)
 			return 2;
 		if (tos & IPTOS_THROUGHPUT)
@@ -3743,11 +3751,12 @@ int qeth_get_priority_queue(struct qeth_card *card, struct sk_buff *skb,
 	case QETH_PRIO_Q_ING_SKB:
 		if (skb->priority > 5)
 			return 0;
-		return ~skb->priority >> 1 & 3;
+		return qeth_cut_iqd_prio(card, ~skb->priority >> 1 & 3);
 	case QETH_PRIO_Q_ING_VLAN:
 		tci = &((struct ethhdr *)skb->data)->h_proto;
 		if (*tci == ETH_P_8021Q)
-			return ~*(tci + 1) >> (VLAN_PRIO_SHIFT + 1) & 3;
+			return qeth_cut_iqd_prio(card, ~*(tci + 1) >>
+			(VLAN_PRIO_SHIFT + 1) & 3);
 		break;
 	default:
 		break;
* Unmerged path drivers/s390/net/qeth_core_sys.c
