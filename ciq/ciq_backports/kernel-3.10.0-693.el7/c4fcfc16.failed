ovl: fix d_real() for stacked fs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit c4fcfc1619ea43a8a89ad2f83ff23905eee088bd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c4fcfc16.failed

Handling of recursion in d_real() is completely broken.  Recursion is only
done in the 'inode != NULL' case.  But when opening the file we have
'inode == NULL' hence d_real() will return an overlay dentry.  This won't
work since overlayfs doesn't define its own file operations, so all file
ops will fail.

Fix by doing the recursion first and the check against the inode second.

Bash script to reproduce the issue written by Quentin:

 - 8< - - - - - 8< - - - - - 8< - - - - - 8< - - - -
tmpdir=$(mktemp -d)
pushd ${tmpdir}

mkdir -p {upper,lower,work}
echo -n 'rocks' > lower/ksplice
mount -t overlay level_zero upper -o lowerdir=lower,upperdir=upper,workdir=work
cat upper/ksplice

tmpdir2=$(mktemp -d)
pushd ${tmpdir2}

mkdir -p {upper,work}
mount -t overlay level_one upper -o lowerdir=${tmpdir}/upper,upperdir=upper,workdir=work
ls -l upper/ksplice
cat upper/ksplice
 - 8< - - - - - 8< - - - - - 8< - - - - - 8< - - - - 

	Reported-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
Fixes: 2d902671ce1c ("vfs: merge .d_select_inode() into .d_real()")
	Cc: <stable@vger.kernel.org> # v4.8+
(cherry picked from commit c4fcfc1619ea43a8a89ad2f83ff23905eee088bd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/super.c
diff --cc fs/overlayfs/super.c
index c3d8b1ec4002,0e100856c7b8..000000000000
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@@ -330,12 -328,11 +330,18 @@@ static struct dentry *ovl_d_real(struc
  	if (!real)
  		goto bug;
  
+ 	/* Handle recursion */
+ 	real = d_real(real, inode, open_flags);
+ 
  	if (!inode || inode == d_inode(real))
  		return real;
++<<<<<<< HEAD
 +
 +	/* Handle recursion */
 +	return d_real(real, inode, open_flags);
 +
++=======
++>>>>>>> c4fcfc1619ea (ovl: fix d_real() for stacked fs)
  bug:
  	WARN(1, "ovl_d_real(%pd4, %s:%lu): real dentry not found\n", dentry,
  	     inode ? inode->i_sb->s_id : "NULL", inode ? inode->i_ino : 0);
* Unmerged path fs/overlayfs/super.c
