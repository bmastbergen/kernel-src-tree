Input: wacom - check for bluetooth protocol while setting OLEDs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit 849e2f06781a0c73573024bdaea0babc0c4e31af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/849e2f06.failed

Bluetooth Intuos 4 use 1-bit definition while the USB ones use a 4-bits
definition. This changes the size of the raw image we receive, and thus
the kernel will only accept 1-bit images for Bluetooth and 4-bits for
USB.

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Przemo Firszt <przemo@firszt.eu>
	Reviewed-by: Ping Cheng <pingc@wacom.com>
	Tested-by: Przemo Firszt <przemo@firszt.eu>
	Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
(cherry picked from commit 849e2f06781a0c73573024bdaea0babc0c4e31af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_sys.c
diff --cc drivers/hid/wacom_sys.c
index 527bf559d1db,a12cd9c3a6ee..000000000000
--- a/drivers/hid/wacom_sys.c
+++ b/drivers/hid/wacom_sys.c
@@@ -58,12 -20,12 +58,13 @@@ struct hid_descriptor 
  #define WAC_CMD_LED_CONTROL	0x20
  #define WAC_CMD_ICON_START	0x21
  #define WAC_CMD_ICON_XFER	0x23
+ #define WAC_CMD_ICON_BT_XFER	0x26
  #define WAC_CMD_RETRIES		10
  
 -static int wacom_get_report(struct hid_device *hdev, u8 type, u8 id,
 +static int wacom_get_report(struct usb_interface *intf, u8 type, u8 id,
  			    void *buf, size_t size, unsigned int retries)
  {
 +	struct usb_device *dev = interface_to_usbdev(intf);
  	int retval;
  
  	do {
@@@ -799,10 -550,11 +802,16 @@@ static int wacom_led_putimage(struct wa
  	buf[1] = button_id & 0x07;
  	for (i = 0; i < 4; i++) {
  		buf[2] = i;
- 		memcpy(buf + 3, img + i * 256, 256);
+ 		memcpy(buf + 3, img + i * chunk_len, chunk_len);
  
++<<<<<<< HEAD
 +		retval = wacom_set_report(wacom->intf, 0x03, WAC_CMD_ICON_XFER,
 +					  buf, 259, WAC_CMD_RETRIES);
++=======
+ 		retval = wacom_set_report(wacom->hdev, HID_FEATURE_REPORT,
+ 					  xfer_id, buf, chunk_len + 3,
+ 					  WAC_CMD_RETRIES);
++>>>>>>> 849e2f06781a (Input: wacom - check for bluetooth protocol while setting OLEDs)
  		if (retval < 0)
  			break;
  	}
@@@ -897,10 -652,21 +906,20 @@@ DEVICE_LUMINANCE_ATTR(buttons, img_lum)
  static ssize_t wacom_button_image_store(struct device *dev, int button_id,
  					const char *buf, size_t count)
  {
 -	struct hid_device *hdev = container_of(dev, struct hid_device, dev);
 -	struct wacom *wacom = hid_get_drvdata(hdev);
 +	struct wacom *wacom = dev_get_drvdata(dev);
  	int err;
+ 	unsigned len;
+ 	u8 xfer_id;
  
- 	if (count != 1024)
+ 	if (hdev->bus == BUS_BLUETOOTH) {
+ 		len = 256;
+ 		xfer_id = WAC_CMD_ICON_BT_XFER;
+ 	} else {
+ 		len = 1024;
+ 		xfer_id = WAC_CMD_ICON_XFER;
+ 	}
+ 
+ 	if (count != len)
  		return -EINVAL;
  
  	mutex_lock(&wacom->lock);
* Unmerged path drivers/hid/wacom_sys.c
