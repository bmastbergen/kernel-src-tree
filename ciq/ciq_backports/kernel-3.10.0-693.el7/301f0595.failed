random: printk notifications for urandom pool initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Theodore Ts'o <tytso@mit.edu>
commit 301f0595c0e788edacc3521c4caa90b4e56ffee1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/301f0595.failed

Print a notification to the console when the nonblocking pool is
initialized.  Also printk a warning when a process tries reading from
/dev/urandom before it is fully initialized.

	Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
(cherry picked from commit 301f0595c0e788edacc3521c4caa90b4e56ffee1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/random.c
diff --cc drivers/char/random.c
index d734fecb0f95,a19a7a63ec35..000000000000
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@@ -658,12 -652,14 +658,15 @@@ retry
  	if (cmpxchg(&r->entropy_count, orig, entropy_count) != orig)
  		goto retry;
  
 -	r->entropy_total += nbits;
  	if (!r->initialized && nbits > 0) {
 +		r->entropy_total += nbits;
  		if (r->entropy_total > 128) {
+ 			if (r == &nonblocking_pool)
+ 				pr_notice("random: %s pool is initialized\n",
+ 					  r->name);
  			r->initialized = 1;
 -			r->entropy_total = 0;
 +			if (r == &nonblocking_pool)
 +				prandom_reseed_late();
  		}
  	}
  
@@@ -1291,7 -1330,18 +1294,22 @@@ random_read(struct file *file, char __u
  static ssize_t
  urandom_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos)
  {
++<<<<<<< HEAD
 +	return extract_entropy_user(&nonblocking_pool, buf, nbytes);
++=======
+ 	int ret;
+ 
+ 	if (unlikely(nonblocking_pool.initialized == 0))
+ 		printk_once(KERN_NOTICE "random: %s urandom read "
+ 			    "with %d bits of entropy available\n",
+ 			    current->comm, nonblocking_pool.entropy_total);
+ 
+ 	ret = extract_entropy_user(&nonblocking_pool, buf, nbytes);
+ 
+ 	trace_urandom_read(8 * nbytes, ENTROPY_BITS(&nonblocking_pool),
+ 			   ENTROPY_BITS(&input_pool));
+ 	return ret;
++>>>>>>> 301f0595c0e7 (random: printk notifications for urandom pool initialization)
  }
  
  static unsigned int
* Unmerged path drivers/char/random.c
