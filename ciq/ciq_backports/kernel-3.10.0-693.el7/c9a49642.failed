amd-xgbe: Unify coherency checking logic with device_dma_is_coherent()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Suthikulpanit, Suravee <Suravee.Suthikulpanit@amd.com>
commit c9a49642aef95d5adb6b7a4bd6a6f5df852cdb98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c9a49642.failed

Currently, amd-xgbe driver has separate logic to determine device
coherency for DT vs. ACPI. This patch simplifies the code with
a call to device_dma_is_coherent().

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: Suravee Suthikulpanit <Suravee.Suthikulpanit@amd.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit c9a49642aef95d5adb6b7a4bd6a6f5df852cdb98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-main.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-main.c
index 51cdca78ec38,6d2c702c8e4a..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-main.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-main.c
@@@ -217,6 -165,70 +217,73 @@@ static void xgbe_init_all_fptrs(struct 
  	xgbe_init_function_ptrs_desc(&pdata->desc_if);
  }
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_ACPI
+ static int xgbe_acpi_support(struct xgbe_prv_data *pdata)
+ {
+ 	struct device *dev = pdata->dev;
+ 	u32 property;
+ 	int ret;
+ 
+ 	/* Obtain the system clock setting */
+ 	ret = device_property_read_u32(dev, XGBE_ACPI_DMA_FREQ, &property);
+ 	if (ret) {
+ 		dev_err(dev, "unable to obtain %s property\n",
+ 			XGBE_ACPI_DMA_FREQ);
+ 		return ret;
+ 	}
+ 	pdata->sysclk_rate = property;
+ 
+ 	/* Obtain the PTP clock setting */
+ 	ret = device_property_read_u32(dev, XGBE_ACPI_PTP_FREQ, &property);
+ 	if (ret) {
+ 		dev_err(dev, "unable to obtain %s property\n",
+ 			XGBE_ACPI_PTP_FREQ);
+ 		return ret;
+ 	}
+ 	pdata->ptpclk_rate = property;
+ 
+ 	return 0;
+ }
+ #else   /* CONFIG_ACPI */
+ static int xgbe_acpi_support(struct xgbe_prv_data *pdata)
+ {
+ 	return -EINVAL;
+ }
+ #endif  /* CONFIG_ACPI */
+ 
+ #ifdef CONFIG_OF
+ static int xgbe_of_support(struct xgbe_prv_data *pdata)
+ {
+ 	struct device *dev = pdata->dev;
+ 
+ 	/* Obtain the system clock setting */
+ 	pdata->sysclk = devm_clk_get(dev, XGBE_DMA_CLOCK);
+ 	if (IS_ERR(pdata->sysclk)) {
+ 		dev_err(dev, "dma devm_clk_get failed\n");
+ 		return PTR_ERR(pdata->sysclk);
+ 	}
+ 	pdata->sysclk_rate = clk_get_rate(pdata->sysclk);
+ 
+ 	/* Obtain the PTP clock setting */
+ 	pdata->ptpclk = devm_clk_get(dev, XGBE_PTP_CLOCK);
+ 	if (IS_ERR(pdata->ptpclk)) {
+ 		dev_err(dev, "ptp devm_clk_get failed\n");
+ 		return PTR_ERR(pdata->ptpclk);
+ 	}
+ 	pdata->ptpclk_rate = clk_get_rate(pdata->ptpclk);
+ 
+ 	return 0;
+ }
+ #else   /* CONFIG_OF */
+ static int xgbe_of_support(struct xgbe_prv_data *pdata)
+ {
+ 	return -EINVAL;
+ }
+ #endif  /*CONFIG_OF */
+ 
++>>>>>>> c9a49642aef9 (amd-xgbe: Unify coherency checking logic with device_dma_is_coherent())
  static int xgbe_probe(struct platform_device *pdev)
  {
  	struct xgbe_prv_data *pdata;
@@@ -301,7 -314,32 +368,36 @@@
  		goto err_io;
  	}
  
++<<<<<<< HEAD
 +	if (of_property_read_bool(dev->of_node, "dma-coherent")) {
++=======
+ 	/* Retrieve the PHY mode - it must be "xgmii" */
+ 	ret = device_property_read_string(dev, XGBE_PHY_MODE_PROPERTY,
+ 					  &phy_mode);
+ 	if (ret || strcmp(phy_mode, phy_modes(PHY_INTERFACE_MODE_XGMII))) {
+ 		dev_err(dev, "invalid %s property\n", XGBE_PHY_MODE_PROPERTY);
+ 		if (!ret)
+ 			ret = -EINVAL;
+ 		goto err_io;
+ 	}
+ 	pdata->phy_mode = PHY_INTERFACE_MODE_XGMII;
+ 
+ 	/* Check for per channel interrupt support */
+ 	if (device_property_present(dev, XGBE_DMA_IRQS_PROPERTY))
+ 		pdata->per_channel_irq = 1;
+ 
+ 	/* Obtain device settings unique to ACPI/OF */
+ 	if (pdata->use_acpi)
+ 		ret = xgbe_acpi_support(pdata);
+ 	else
+ 		ret = xgbe_of_support(pdata);
+ 	if (ret)
+ 		goto err_io;
+ 
+ 	/* Set the DMA coherency values */
+ 	pdata->coherent = device_dma_is_coherent(pdata->dev);
+ 	if (pdata->coherent) {
++>>>>>>> c9a49642aef9 (amd-xgbe: Unify coherency checking logic with device_dma_is_coherent())
  		pdata->axdomain = XGBE_DMA_OS_AXDOMAIN;
  		pdata->arcache = XGBE_DMA_OS_ARCACHE;
  		pdata->awcache = XGBE_DMA_OS_AWCACHE;
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-main.c
