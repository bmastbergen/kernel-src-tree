powerpc/pseries: Add hypercall wrappers for hash page table resizing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] pseries: Add hypercall wrappers for hash page table resizing (David Gibson) [1305399]
Rebuild_FUZZ: 93.75%
commit-author David Gibson <david@gibson.dropbear.id.au>
commit 64b40ffbc83029f035571cad9727e34e69dbf6d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/64b40ffb.failed

This adds the hypercall numbers and wrapper functions for the hash page
table resizing hypercalls.

These hypercall numbers are defined in the PAPR ACR "HPT resizing
option".

It also adds a new firmware feature flag to track the presence of the
HPT resizing calls.

	Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
	Reviewed-by: Paul Mackerras <paulus@samba.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
(cherry picked from commit 64b40ffbc83029f035571cad9727e34e69dbf6d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/firmware.h
#	arch/powerpc/include/asm/hvcall.h
diff --cc arch/powerpc/include/asm/firmware.h
index 681bc0314b6b,8645897472b1..000000000000
--- a/arch/powerpc/include/asm/firmware.h
+++ b/arch/powerpc/include/asm/firmware.h
@@@ -42,7 -42,7 +42,11 @@@
  #define FW_FEATURE_SPLPAR	ASM_CONST(0x0000000000100000)
  #define FW_FEATURE_LPAR		ASM_CONST(0x0000000000400000)
  #define FW_FEATURE_PS3_LV1	ASM_CONST(0x0000000000800000)
++<<<<<<< HEAD
 +#define FW_FEATURE_BEAT		ASM_CONST(0x0000000001000000)
++=======
+ #define FW_FEATURE_HPT_RESIZE	ASM_CONST(0x0000000001000000)
++>>>>>>> 64b40ffbc830 (powerpc/pseries: Add hypercall wrappers for hash page table resizing)
  #define FW_FEATURE_CMO		ASM_CONST(0x0000000002000000)
  #define FW_FEATURE_VPHN		ASM_CONST(0x0000000004000000)
  #define FW_FEATURE_XCMO		ASM_CONST(0x0000000008000000)
@@@ -68,10 -66,10 +72,11 @@@ enum 
  		FW_FEATURE_MULTITCE | FW_FEATURE_SPLPAR | FW_FEATURE_LPAR |
  		FW_FEATURE_CMO | FW_FEATURE_VPHN | FW_FEATURE_XCMO |
  		FW_FEATURE_SET_MODE | FW_FEATURE_BEST_ENERGY |
- 		FW_FEATURE_TYPE1_AFFINITY | FW_FEATURE_PRRN,
+ 		FW_FEATURE_TYPE1_AFFINITY | FW_FEATURE_PRRN |
+ 		FW_FEATURE_HPT_RESIZE,
  	FW_FEATURE_PSERIES_ALWAYS = 0,
 -	FW_FEATURE_POWERNV_POSSIBLE = FW_FEATURE_OPAL,
 +	FW_FEATURE_POWERNV_POSSIBLE = FW_FEATURE_OPAL | FW_FEATURE_OPALv2 |
 +		FW_FEATURE_OPALv3,
  	FW_FEATURE_POWERNV_ALWAYS = 0,
  	FW_FEATURE_PS3_POSSIBLE = FW_FEATURE_LPAR | FW_FEATURE_PS3_LV1,
  	FW_FEATURE_PS3_ALWAYS = FW_FEATURE_LPAR | FW_FEATURE_PS3_LV1,
diff --cc arch/powerpc/include/asm/hvcall.h
index 0bc9c284aa10,490c4b9f4e3a..000000000000
--- a/arch/powerpc/include/asm/hvcall.h
+++ b/arch/powerpc/include/asm/hvcall.h
@@@ -275,7 -275,11 +275,15 @@@
  #define H_COP			0x304
  #define H_GET_MPP_X		0x314
  #define H_SET_MODE		0x31C
++<<<<<<< HEAD
 +#define MAX_HCALL_OPCODE	H_SET_MODE
++=======
+ #define H_CLEAR_HPT		0x358
+ #define H_RESIZE_HPT_PREPARE	0x36C
+ #define H_RESIZE_HPT_COMMIT	0x370
+ #define H_SIGNAL_SYS_RESET	0x380
+ #define MAX_HCALL_OPCODE	H_SIGNAL_SYS_RESET
++>>>>>>> 64b40ffbc830 (powerpc/pseries: Add hypercall wrappers for hash page table resizing)
  
  /* H_VIOCTL functions */
  #define H_GET_VIOA_DUMP_SIZE	0x01
* Unmerged path arch/powerpc/include/asm/firmware.h
* Unmerged path arch/powerpc/include/asm/hvcall.h
diff --git a/arch/powerpc/include/asm/plpar_wrappers.h b/arch/powerpc/include/asm/plpar_wrappers.h
index 12c32c5f533d..7f97f721aefc 100644
--- a/arch/powerpc/include/asm/plpar_wrappers.h
+++ b/arch/powerpc/include/asm/plpar_wrappers.h
@@ -225,6 +225,18 @@ static inline long plpar_pte_protect(unsigned long flags, unsigned long ptex,
 	return plpar_hcall_norets(H_PROTECT, flags, ptex, avpn);
 }
 
+static inline long plpar_resize_hpt_prepare(unsigned long flags,
+					    unsigned long shift)
+{
+	return plpar_hcall_norets(H_RESIZE_HPT_PREPARE, flags, shift);
+}
+
+static inline long plpar_resize_hpt_commit(unsigned long flags,
+					   unsigned long shift)
+{
+	return plpar_hcall_norets(H_RESIZE_HPT_COMMIT, flags, shift);
+}
+
 static inline long plpar_tce_get(unsigned long liobn, unsigned long ioba,
 		unsigned long *tce_ret)
 {
diff --git a/arch/powerpc/platforms/pseries/firmware.c b/arch/powerpc/platforms/pseries/firmware.c
index 8c80588abacc..7b287be49331 100644
--- a/arch/powerpc/platforms/pseries/firmware.c
+++ b/arch/powerpc/platforms/pseries/firmware.c
@@ -63,6 +63,7 @@ hypertas_fw_features_table[] = {
 	{FW_FEATURE_VPHN,		"hcall-vphn"},
 	{FW_FEATURE_SET_MODE,		"hcall-set-mode"},
 	{FW_FEATURE_BEST_ENERGY,	"hcall-best-energy-1*"},
+	{FW_FEATURE_HPT_RESIZE,		"hcall-hpt-resize"},
 };
 
 /* Build up the firmware features bitmask using the contents of
