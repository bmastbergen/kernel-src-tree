sctp: sctp_transport_dst_check should check if transport pmtu is dst mtu

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Xin Long <lucien.xin@gmail.com>
commit a4d69a4c3ca6be699ed8cdc4683381ce44b85c90
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a4d69a4c.failed

Now when sending a packet, sctp_transport_dst_check will check if dst
is obsolete by calling ipv4/ip6_dst_check. But they return obsolete
only when adding a new cache, after that when the cache's pmtu is
updated again, it will not trigger transport->dst/pmtu's update.

It can be reproduced by reducing route's pmtu twice. At the 1st time
client will add a new cache, and transport->pathmtu gets updated as
sctp_transport_dst_check finds it's obsolete. But at the 2nd time,
cache's mtu is updated, sctp client will never send out any packet,
because transport->pmtu has no chance to update.

This patch is to fix this by also checking if transport pmtu is dst
mtu in sctp_transport_dst_check, so that transport->pmtu can be
updated on time.

	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a4d69a4c3ca6be699ed8cdc4683381ce44b85c90)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/net/sctp/sctp.h
diff --cc include/net/sctp/sctp.h
index 5e1b0dc26470,1f71ee5ab518..000000000000
--- a/include/net/sctp/sctp.h
+++ b/include/net/sctp/sctp.h
@@@ -593,10 -596,10 +593,17 @@@ static inline void sctp_v4_map_v6(unio
   */
  static inline struct dst_entry *sctp_transport_dst_check(struct sctp_transport *t)
  {
++<<<<<<< HEAD
 +	if (t->dst && !dst_check(t->dst, t->dst_cookie)) {
 +		dst_release(t->dst);
 +		t->dst = NULL;
 +	}
++=======
+ 	if (t->dst && (!dst_check(t->dst, t->dst_cookie) ||
+ 		       t->pathmtu != max_t(size_t, SCTP_TRUNC4(dst_mtu(t->dst)),
+ 					   SCTP_DEFAULT_MINSEGMENT)))
+ 		sctp_transport_dst_release(t);
++>>>>>>> a4d69a4c3ca6 (sctp: sctp_transport_dst_check should check if transport pmtu is dst mtu)
  
  	return t->dst;
  }
* Unmerged path include/net/sctp/sctp.h
