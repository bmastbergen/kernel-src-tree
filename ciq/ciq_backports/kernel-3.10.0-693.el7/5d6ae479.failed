bridge: netlink: add support for port's multicast_router attribute

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit 5d6ae479ab7ddf77bb22bdf739268581453ff886
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5d6ae479.failed

Add IFLA_BRPORT_MULTICAST_ROUTER to allow setting/getting port's
multicast_router via netlink.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 5d6ae479ab7ddf77bb22bdf739268581453ff886)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if_link.h
#	net/bridge/br_netlink.c
diff --cc include/uapi/linux/if_link.h
index 1b43f8aab560,e3b6217f34f1..000000000000
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@@ -253,9 -289,22 +253,26 @@@ enum 
  	IFLA_BRPORT_FAST_LEAVE,	/* multicast fast leave    */
  	IFLA_BRPORT_LEARNING,	/* mac learning */
  	IFLA_BRPORT_UNICAST_FLOOD, /* flood unicast traffic */
 -	IFLA_BRPORT_PROXYARP,	/* proxy ARP */
 +	/* RHEL: IFLA_BRPORT_PROXYARP not fully supported yet */
 +	RESERVED_IFLA_BRPORT_PROXYARP,	/* proxy ARP */
  	IFLA_BRPORT_LEARNING_SYNC, /* mac learning sync from device */
++<<<<<<< HEAD
++=======
+ 	IFLA_BRPORT_PROXYARP_WIFI, /* proxy ARP for Wi-Fi */
+ 	IFLA_BRPORT_ROOT_ID,	/* designated root */
+ 	IFLA_BRPORT_BRIDGE_ID,	/* designated bridge */
+ 	IFLA_BRPORT_DESIGNATED_PORT,
+ 	IFLA_BRPORT_DESIGNATED_COST,
+ 	IFLA_BRPORT_ID,
+ 	IFLA_BRPORT_NO,
+ 	IFLA_BRPORT_TOPOLOGY_CHANGE_ACK,
+ 	IFLA_BRPORT_CONFIG_PENDING,
+ 	IFLA_BRPORT_MESSAGE_AGE_TIMER,
+ 	IFLA_BRPORT_FORWARD_DELAY_TIMER,
+ 	IFLA_BRPORT_HOLD_TIMER,
+ 	IFLA_BRPORT_FLUSH,
+ 	IFLA_BRPORT_MULTICAST_ROUTER,
++>>>>>>> 5d6ae479ab7d (bridge: netlink: add support for port's multicast_router attribute)
  	__IFLA_BRPORT_MAX
  };
  #define IFLA_BRPORT_MAX (__IFLA_BRPORT_MAX - 1)
diff --cc net/bridge/br_netlink.c
index 858d309f4e1a,d78b4429505a..000000000000
--- a/net/bridge/br_netlink.c
+++ b/net/bridge/br_netlink.c
@@@ -32,6 -125,22 +32,25 @@@ static inline size_t br_port_info_size(
  		+ nla_total_size(1)	/* IFLA_BRPORT_FAST_LEAVE */
  		+ nla_total_size(1)	/* IFLA_BRPORT_LEARNING */
  		+ nla_total_size(1)	/* IFLA_BRPORT_UNICAST_FLOOD */
++<<<<<<< HEAD
++=======
+ 		+ nla_total_size(1)	/* IFLA_BRPORT_PROXYARP */
+ 		+ nla_total_size(1)	/* IFLA_BRPORT_PROXYARP_WIFI */
+ 		+ nla_total_size(sizeof(struct ifla_bridge_id))	/* IFLA_BRPORT_ROOT_ID */
+ 		+ nla_total_size(sizeof(struct ifla_bridge_id))	/* IFLA_BRPORT_BRIDGE_ID */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_DESIGNATED_PORT */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_DESIGNATED_COST */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_ID */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_NO */
+ 		+ nla_total_size(sizeof(u8))	/* IFLA_BRPORT_TOPOLOGY_CHANGE_ACK */
+ 		+ nla_total_size(sizeof(u8))	/* IFLA_BRPORT_CONFIG_PENDING */
+ 		+ nla_total_size(sizeof(u64))	/* IFLA_BRPORT_MESSAGE_AGE_TIMER */
+ 		+ nla_total_size(sizeof(u64))	/* IFLA_BRPORT_FORWARD_DELAY_TIMER */
+ 		+ nla_total_size(sizeof(u64))	/* IFLA_BRPORT_HOLD_TIMER */
+ #ifdef CONFIG_BRIDGE_IGMP_SNOOPING
+ 		+ nla_total_size(sizeof(u8))	/* IFLA_BRPORT_MULTICAST_ROUTER */
+ #endif
++>>>>>>> 5d6ae479ab7d (bridge: netlink: add support for port's multicast_router attribute)
  		+ 0;
  }
  
@@@ -60,9 -172,39 +79,15 @@@ static int br_port_fill_attrs(struct sk
  	    nla_put_u8(skb, IFLA_BRPORT_PROTECT, !!(p->flags & BR_ROOT_BLOCK)) ||
  	    nla_put_u8(skb, IFLA_BRPORT_FAST_LEAVE, !!(p->flags & BR_MULTICAST_FAST_LEAVE)) ||
  	    nla_put_u8(skb, IFLA_BRPORT_LEARNING, !!(p->flags & BR_LEARNING)) ||
 -	    nla_put_u8(skb, IFLA_BRPORT_UNICAST_FLOOD, !!(p->flags & BR_FLOOD)) ||
 -	    nla_put_u8(skb, IFLA_BRPORT_PROXYARP, !!(p->flags & BR_PROXYARP)) ||
 -	    nla_put_u8(skb, IFLA_BRPORT_PROXYARP_WIFI,
 -		       !!(p->flags & BR_PROXYARP_WIFI)) ||
 -	    nla_put(skb, IFLA_BRPORT_ROOT_ID, sizeof(struct ifla_bridge_id),
 -		    &p->designated_root) ||
 -	    nla_put(skb, IFLA_BRPORT_BRIDGE_ID, sizeof(struct ifla_bridge_id),
 -		    &p->designated_bridge) ||
 -	    nla_put_u16(skb, IFLA_BRPORT_DESIGNATED_PORT, p->designated_port) ||
 -	    nla_put_u16(skb, IFLA_BRPORT_DESIGNATED_COST, p->designated_cost) ||
 -	    nla_put_u16(skb, IFLA_BRPORT_ID, p->port_id) ||
 -	    nla_put_u16(skb, IFLA_BRPORT_NO, p->port_no) ||
 -	    nla_put_u8(skb, IFLA_BRPORT_TOPOLOGY_CHANGE_ACK,
 -		       p->topology_change_ack) ||
 -	    nla_put_u8(skb, IFLA_BRPORT_CONFIG_PENDING, p->config_pending))
 -		return -EMSGSIZE;
 -
 -	timerval = br_timer_value(&p->message_age_timer);
 -	if (nla_put_u64(skb, IFLA_BRPORT_MESSAGE_AGE_TIMER, timerval))
 -		return -EMSGSIZE;
 -	timerval = br_timer_value(&p->forward_delay_timer);
 -	if (nla_put_u64(skb, IFLA_BRPORT_FORWARD_DELAY_TIMER, timerval))
 -		return -EMSGSIZE;
 -	timerval = br_timer_value(&p->hold_timer);
 -	if (nla_put_u64(skb, IFLA_BRPORT_HOLD_TIMER, timerval))
 +	    nla_put_u8(skb, IFLA_BRPORT_UNICAST_FLOOD, !!(p->flags & BR_FLOOD)))
  		return -EMSGSIZE;
  
+ #ifdef CONFIG_BRIDGE_IGMP_SNOOPING
+ 	if (nla_put_u8(skb, IFLA_BRPORT_MULTICAST_ROUTER,
+ 		       p->multicast_router))
+ 		return -EMSGSIZE;
+ #endif
+ 
  	return 0;
  }
  
@@@ -418,8 -564,12 +443,14 @@@ static const struct nla_policy ifla_brp
  	[IFLA_BRPORT_MODE]	= { .type = NLA_U8 },
  	[IFLA_BRPORT_GUARD]	= { .type = NLA_U8 },
  	[IFLA_BRPORT_PROTECT]	= { .type = NLA_U8 },
 -	[IFLA_BRPORT_FAST_LEAVE]= { .type = NLA_U8 },
  	[IFLA_BRPORT_LEARNING]	= { .type = NLA_U8 },
  	[IFLA_BRPORT_UNICAST_FLOOD] = { .type = NLA_U8 },
++<<<<<<< HEAD
++=======
+ 	[IFLA_BRPORT_PROXYARP]	= { .type = NLA_U8 },
+ 	[IFLA_BRPORT_PROXYARP_WIFI] = { .type = NLA_U8 },
+ 	[IFLA_BRPORT_MULTICAST_ROUTER] = { .type = NLA_U8 },
++>>>>>>> 5d6ae479ab7d (bridge: netlink: add support for port's multicast_router attribute)
  };
  
  /* Change the state of the port and notify spanning tree */
@@@ -489,6 -641,18 +520,21 @@@ static int br_setport(struct net_bridge
  			return err;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (tb[IFLA_BRPORT_FLUSH])
+ 		br_fdb_delete_by_port(p->br, p, 0, 0);
+ 
+ #ifdef CONFIG_BRIDGE_IGMP_SNOOPING
+ 	if (tb[IFLA_BRPORT_MULTICAST_ROUTER]) {
+ 		u8 mcast_router = nla_get_u8(tb[IFLA_BRPORT_MULTICAST_ROUTER]);
+ 
+ 		err = br_multicast_set_port_router(p, mcast_router);
+ 		if (err)
+ 			return err;
+ 	}
+ #endif
++>>>>>>> 5d6ae479ab7d (bridge: netlink: add support for port's multicast_router attribute)
  	br_port_flags_change(p, old_flags ^ p->flags);
  	return 0;
  }
* Unmerged path include/uapi/linux/if_link.h
* Unmerged path net/bridge/br_netlink.c
