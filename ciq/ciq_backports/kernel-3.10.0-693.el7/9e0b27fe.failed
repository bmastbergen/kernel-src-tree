net: bridge: br_set_ageing_time takes a clock_t

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] bridge: br_set_ageing_time takes a clock_t (Ivan Vecera) [1352289]
Rebuild_FUZZ: 94.38%
commit-author Vivien Didelot <vivien.didelot@savoirfairelinux.com>
commit 9e0b27fe5ada7752577f3e1260eec44e79476142
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9e0b27fe.failed

Change the ageing_time type in br_set_ageing_time() from u32 to what it
is expected to be, i.e. a clock_t.

	Signed-off-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9e0b27fe5ada7752577f3e1260eec44e79476142)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_private.h
#	net/bridge/br_stp.c
diff --cc net/bridge/br_private.h
index 1e1daa30e106,aac2a6e6b008..000000000000
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@@ -792,6 -975,7 +792,10 @@@ void __br_set_forward_delay(struct net_
  int br_set_forward_delay(struct net_bridge *br, unsigned long x);
  int br_set_hello_time(struct net_bridge *br, unsigned long x);
  int br_set_max_age(struct net_bridge *br, unsigned long x);
++<<<<<<< HEAD
++=======
+ int br_set_ageing_time(struct net_bridge *br, clock_t ageing_time);
++>>>>>>> 9e0b27fe5ada (net: bridge: br_set_ageing_time takes a clock_t)
  
  
  /* br_stp_if.c */
diff --cc net/bridge/br_stp.c
index 1a0efb99cf87,9258b8ef14ff..000000000000
--- a/net/bridge/br_stp.c
+++ b/net/bridge/br_stp.c
@@@ -555,6 -562,35 +555,38 @@@ int br_set_max_age(struct net_bridge *b
  
  }
  
++<<<<<<< HEAD
++=======
+ /* Set time interval that dynamic forwarding entries live
+  * For pure software bridge, allow values outside the 802.1
+  * standard specification for special cases:
+  *  0 - entry never ages (all permanant)
+  *  1 - entry disappears (no persistance)
+  *
+  * Offloaded switch entries maybe more restrictive
+  */
+ int br_set_ageing_time(struct net_bridge *br, clock_t ageing_time)
+ {
+ 	struct switchdev_attr attr = {
+ 		.orig_dev = br->dev,
+ 		.id = SWITCHDEV_ATTR_ID_BRIDGE_AGEING_TIME,
+ 		.flags = SWITCHDEV_F_SKIP_EOPNOTSUPP,
+ 		.u.ageing_time = ageing_time,
+ 	};
+ 	unsigned long t = clock_t_to_jiffies(ageing_time);
+ 	int err;
+ 
+ 	err = switchdev_port_attr_set(br->dev, &attr);
+ 	if (err && err != -EOPNOTSUPP)
+ 		return err;
+ 
+ 	br->ageing_time = t;
+ 	mod_timer(&br->gc_timer, jiffies);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 9e0b27fe5ada (net: bridge: br_set_ageing_time takes a clock_t)
  void __br_set_forward_delay(struct net_bridge *br, unsigned long t)
  {
  	br->bridge_forward_delay = t;
* Unmerged path net/bridge/br_private.h
* Unmerged path net/bridge/br_stp.c
