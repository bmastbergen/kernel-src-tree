libnvdimm: remove else after return in nsio_rw_bytes()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Fabian Frederick <fabf@skynet.be>
commit d37806dc37b42b05515849b0444f09f493cb4cba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d37806dc.failed

else after return is not needed.

	Signed-off-by: Fabian Frederick <fabf@skynet.be>
[djbw: removed some now unnecessary newlines]
	Signed-off-by: Dan Williams <dan.j.williams@intel.com>
(cherry picked from commit d37806dc37b42b05515849b0444f09f493cb4cba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvdimm/claim.c
diff --cc drivers/nvdimm/claim.c
index 849ab82d347e,3376da1fb263..000000000000
--- a/drivers/nvdimm/claim.c
+++ b/drivers/nvdimm/claim.c
@@@ -241,30 -241,27 +241,52 @@@ static int nsio_rw_bytes(struct nd_name
  	if (rw == READ) {
  		if (unlikely(is_bad_pmem(&nsio->bb, sector, sz_align)))
  			return -EIO;
++<<<<<<< HEAD
 +		memcpy_from_pmem(buf, nsio->addr + offset, size);
 +	} else {
 +
 +		if (unlikely(is_bad_pmem(&nsio->bb, sector, sz_align))) {
 +			if (IS_ALIGNED(offset, 512) && IS_ALIGNED(size, 512)) {
 +				long cleared;
 +
 +				cleared = nvdimm_clear_poison(&ndns->dev,
 +							      offset, size);
 +				if (cleared != size) {
 +					size = cleared;
 +					rc = -EIO;
 +				}
 +
 +				badblocks_clear(&nsio->bb, sector,
 +						cleared >> 9);
 +			} else
 +				rc = -EIO;
 +		}
 +
 +		memcpy_to_pmem(nsio->addr + offset, buf, size);
 +		nvdimm_flush(to_nd_region(ndns->dev.parent));
++=======
+ 		return memcpy_from_pmem(buf, nsio->addr + offset, size);
++>>>>>>> d37806dc37b4 (libnvdimm: remove else after return in nsio_rw_bytes())
  	}
  
+ 	if (unlikely(is_bad_pmem(&nsio->bb, sector, sz_align))) {
+ 		if (IS_ALIGNED(offset, 512) && IS_ALIGNED(size, 512)) {
+ 			long cleared;
+ 
+ 			cleared = nvdimm_clear_poison(&ndns->dev, offset, size);
+ 			if (cleared != size) {
+ 				size = cleared;
+ 				rc = -EIO;
+ 			}
+ 
+ 			badblocks_clear(&nsio->bb, sector, cleared >> 9);
+ 		} else
+ 			rc = -EIO;
+ 	}
+ 
+ 	memcpy_to_pmem(nsio->addr + offset, buf, size);
+ 	nvdimm_flush(to_nd_region(ndns->dev.parent));
+ 
  	return rc;
  }
  
* Unmerged path drivers/nvdimm/claim.c
