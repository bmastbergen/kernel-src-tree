timekeeping: Use timekeeping_update() instead of memcpy()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Thomas Gleixner <tglx@linutronix.de>
commit f111adfdd7ff7d9fe54b6efa440b80824984749c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f111adfd.failed

We already have a function which does the right thing, that also makes
sure that the coming ktime_t based cached values are getting updated.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: John Stultz <john.stultz@linaro.org>
(cherry picked from commit f111adfdd7ff7d9fe54b6efa440b80824984749c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/time/timekeeping.c
diff --cc kernel/time/timekeeping.c
index 1f122214a691,bfe3ea09afc9..000000000000
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@@ -1134,9 -883,9 +1134,13 @@@ void __init timekeeping_init(void
  	tmp.tv_nsec = 0;
  	tk_set_sleep_time(tk, tmp);
  
++<<<<<<< HEAD
 +	memcpy(&shadow_timekeeper, &timekeeper, sizeof(timekeeper));
++=======
+ 	timekeeping_update(tk, TK_MIRROR);
++>>>>>>> f111adfdd7ff (timekeeping: Use timekeeping_update() instead of memcpy())
  
 -	write_seqcount_end(&tk_core.seq);
 +	write_seqcount_end(&timekeeper_seq);
  	raw_spin_unlock_irqrestore(&timekeeper_lock, flags);
  }
  
* Unmerged path kernel/time/timekeeping.c
