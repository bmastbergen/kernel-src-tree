perf record: Add --dry-run option to check cmdline options

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit 0aab21363ffa66d6e7340bc50cc5bfae865fd1a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0aab2136.failed

With '--dry-run', 'perf record' doesn't do reall recording. Combine with
llvm.dump-obj option, --dry-run can be used to help compile BPF objects
for embedded platform.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Cc: Alexei Starovoitov <ast@kernel.org>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/1466064161-48553-3-git-send-email-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 0aab21363ffa66d6e7340bc50cc5bfae865fd1a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-record.txt
#	tools/perf/builtin-record.c
diff --cc tools/perf/Documentation/perf-record.txt
index 20052ecd742e,5b46b1d1a37c..000000000000
--- a/tools/perf/Documentation/perf-record.txt
+++ b/tools/perf/Documentation/perf-record.txt
@@@ -328,6 -347,26 +328,29 @@@ Configure all used events to run in ker
  --all-user::
  Configure all used events to run in user space.
  
++<<<<<<< HEAD
++=======
+ --timestamp-filename
+ Append timestamp to output file name.
+ 
+ --switch-output::
+ Generate multiple perf.data files, timestamp prefixed, switching to a new one
+ when receiving a SIGUSR2.
+ 
+ A possible use case is to, given an external event, slice the perf.data file
+ that gets then processed, possibly via a perf script, to decide if that
+ particular perf.data snapshot should be kept or not.
+ 
+ Implies --timestamp-filename, --no-buildid and --no-buildid-cache.
+ 
+ --dry-run::
+ Parse options then exit. --dry-run can be used to detect errors in cmdline
+ options.
+ 
+ 'perf record --dry-run -e' can act as a BPF script compiler if llvm.dump-obj
+ in config file is set to true.
+ 
++>>>>>>> 0aab21363ffa (perf record: Add --dry-run option to check cmdline options)
  SEE ALSO
  --------
  linkperf:perf-stat[1], linkperf:perf-list[1]
diff --cc tools/perf/builtin-record.c
index 7edf3a758d59,b1304ebc8779..000000000000
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@@ -1257,6 -1393,10 +1259,13 @@@ struct option __record_options[] = 
  		    "Record build-id of all DSOs regardless of hits"),
  	OPT_BOOLEAN(0, "timestamp-filename", &record.timestamp_filename,
  		    "append timestamp to output filename"),
++<<<<<<< HEAD
++=======
+ 	OPT_BOOLEAN(0, "switch-output", &record.switch_output,
+ 		    "Switch output when receive SIGUSR2"),
+ 	OPT_BOOLEAN(0, "dry-run", &dry_run,
+ 		    "Parse options then exit"),
++>>>>>>> 0aab21363ffa (perf record: Add --dry-run option to check cmdline options)
  	OPT_END()
  };
  
@@@ -1309,6 -1466,17 +1318,20 @@@ int cmd_record(int argc, const char **a
  	if (err)
  		return err;
  
++<<<<<<< HEAD
++=======
+ 	if (dry_run)
+ 		return 0;
+ 
+ 	err = bpf__setup_stdout(rec->evlist);
+ 	if (err) {
+ 		bpf__strerror_setup_stdout(rec->evlist, err, errbuf, sizeof(errbuf));
+ 		pr_err("ERROR: Setup BPF stdout failed: %s\n",
+ 			 errbuf);
+ 		return err;
+ 	}
+ 
++>>>>>>> 0aab21363ffa (perf record: Add --dry-run option to check cmdline options)
  	err = -ENOMEM;
  
  	symbol__init(NULL);
* Unmerged path tools/perf/Documentation/perf-record.txt
* Unmerged path tools/perf/builtin-record.c
