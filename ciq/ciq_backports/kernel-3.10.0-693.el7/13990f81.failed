net: sched: cls_cgroup tear down exts and ematch from rcu callback

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] sched: cls_cgroup tear down exts and ematch from rcu callback (Ivan Vecera) [1420506]
Rebuild_FUZZ: 96.06%
commit-author John Fastabend <john.fastabend@gmail.com>
commit 13990f8156862fe945a1a226850a6550c8988a33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/13990f81.failed

It is not RCU safe to destroy the action chain while there
is a possibility of readers accessing it. Move this code
into the rcu callback using the same rcu callback used in the
code patch to make a change to head.

	Signed-off-by: John Fastabend <john.r.fastabend@intel.com>
	Acked-by: Cong Wang <cwang@twopensource.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 13990f8156862fe945a1a226850a6550c8988a33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/cls_cgroup.c
diff --cc net/sched/cls_cgroup.c
index 7caff835351d,d61a801222c1..000000000000
--- a/net/sched/cls_cgroup.c
+++ b/net/sched/cls_cgroup.c
@@@ -249,10 -156,8 +249,13 @@@ static void cls_cgroup_destroy(struct t
  	struct cls_cgroup_head *head = rtnl_dereference(tp->root);
  
  	if (head) {
++<<<<<<< HEAD
 +		tcf_exts_destroy(tp, &head->exts);
 +		tcf_em_tree_destroy(tp, &head->ematches);
++=======
++>>>>>>> 13990f815686 (net: sched: cls_cgroup tear down exts and ematch from rcu callback)
  		RCU_INIT_POINTER(tp->root, NULL);
- 		kfree_rcu(head, rcu);
+ 		call_rcu(&head->rcu, cls_cgroup_destroy_rcu);
  	}
  }
  
* Unmerged path net/sched/cls_cgroup.c
