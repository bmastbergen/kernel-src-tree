HID: wacom: actually report the battery level for wireless connected

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: actually report the battery level for wireless connected (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 96.18%
commit-author Benjamin Tissoires <benjamin.tissoires@redhat.com>
commit d453b87612a0aba6ca6ec85447eeefa220cadec5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d453b876.failed

Since fd5f92b ("HID: wacom: reuse wacom_parse_and_register() in
wireless_work"), wacom->shared->type is not set.
Send the information of the battery if we have one.

	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Acked-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit d453b87612a0aba6ca6ec85447eeefa220cadec5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom_wac.c
index 98c7d65145c2,d6746caf71cb..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -1301,8 -2038,94 +1301,9 @@@ static int wacom_bpt_irq(struct wacom_w
  	return 0;
  }
  
 -static void wacom_bamboo_pad_pen_event(struct wacom_wac *wacom,
 -		unsigned char *data)
 -{
 -	unsigned char prefix;
 -
 -	/*
 -	 * We need to reroute the event from the debug interface to the
 -	 * pen interface.
 -	 * We need to add the report ID to the actual pen report, so we
 -	 * temporary overwrite the first byte to prevent having to kzalloc/kfree
 -	 * and memcpy the report.
 -	 */
 -	prefix = data[0];
 -	data[0] = WACOM_REPORT_BPAD_PEN;
 -
 -	/*
 -	 * actually reroute the event.
 -	 * No need to check if wacom->shared->pen is valid, hid_input_report()
 -	 * will check for us.
 -	 */
 -	hid_input_report(wacom->shared->pen, HID_INPUT_REPORT, data,
 -			 WACOM_PKGLEN_PENABLED, 1);
 -
 -	data[0] = prefix;
 -}
 -
 -static int wacom_bamboo_pad_touch_event(struct wacom_wac *wacom,
 -		unsigned char *data)
 -{
 -	struct input_dev *input = wacom->touch_input;
 -	unsigned char *finger_data, prefix;
 -	unsigned id;
 -	int x, y;
 -	bool valid;
 -
 -	prefix = data[0];
 -
 -	for (id = 0; id < wacom->features.touch_max; id++) {
 -		valid = !!(prefix & BIT(id)) &&
 -			!wacom->shared->stylus_in_proximity;
 -
 -		input_mt_slot(input, id);
 -		input_mt_report_slot_state(input, MT_TOOL_FINGER, valid);
 -
 -		if (!valid)
 -			continue;
 -
 -		finger_data = data + 1 + id * 3;
 -		x = finger_data[0] | ((finger_data[1] & 0x0f) << 8);
 -		y = (finger_data[2] << 4) | (finger_data[1] >> 4);
 -
 -		input_report_abs(input, ABS_MT_POSITION_X, x);
 -		input_report_abs(input, ABS_MT_POSITION_Y, y);
 -	}
 -
 -	input_mt_sync_frame(input);
 -
 -	input_report_key(input, BTN_LEFT, prefix & 0x40);
 -	input_report_key(input, BTN_RIGHT, prefix & 0x80);
 -
 -	/* keep touch state for pen event */
 -	wacom->shared->touch_down = !!prefix &&
 -				    !wacom->shared->stylus_in_proximity;
 -
 -	return 1;
 -}
 -
 -static int wacom_bamboo_pad_irq(struct wacom_wac *wacom, size_t len)
 -{
 -	unsigned char *data = wacom->data;
 -
 -	if (!((len == WACOM_PKGLEN_BPAD_TOUCH) ||
 -	      (len == WACOM_PKGLEN_BPAD_TOUCH_USB)) ||
 -	    (data[0] != WACOM_REPORT_BPAD_TOUCH))
 -		return 0;
 -
 -	if (data[1] & 0x01)
 -		wacom_bamboo_pad_pen_event(wacom, &data[1]);
 -
 -	if (data[1] & 0x02)
 -		return wacom_bamboo_pad_touch_event(wacom, &data[9]);
 -
 -	return 0;
 -}
 -
  static int wacom_wireless_irq(struct wacom_wac *wacom, size_t len)
  {
+ 	struct wacom *w = container_of(wacom, struct wacom, wacom_wac);
  	unsigned char *data = wacom->data;
  	int connected;
  
@@@ -1319,7 -2152,10 +1320,14 @@@
  			wacom->pid = pid;
  			wacom_schedule_work(wacom);
  		}
++<<<<<<< HEAD
 +		wacom->battery_capacity = battery;
++=======
+ 
+ 		if (w->battery)
+ 			wacom_notify_battery(wacom, battery, charging, 1, 0);
+ 
++>>>>>>> d453b87612a0 (HID: wacom: actually report the battery level for wireless connected)
  	} else if (wacom->pid != 0) {
  		/* disconnected while previously connected */
  		wacom->pid = 0;
* Unmerged path drivers/hid/wacom_wac.c
