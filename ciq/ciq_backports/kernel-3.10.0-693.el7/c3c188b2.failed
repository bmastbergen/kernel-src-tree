selinux: Create a common helper to determine an inode label [ver #3]

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [fs] selinux: Create a common helper to determine an inode label (Vivek Goyal) [1297929]
Rebuild_FUZZ: 92.91%
commit-author David Howells <dhowells@redhat.com>
commit c3c188b2c3ed29effe8693672ee1c84184103b4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c3c188b2.failed

Create a common helper function to determine the label for a new inode.
This is then used by:

	- may_create()
	- selinux_dentry_init_security()
	- selinux_inode_init_security()

This will change the behaviour of the functions slightly, bringing them
all into line.

	Suggested-by: Stephen Smalley <sds@tycho.nsa.gov>
	Signed-off-by: David Howells <dhowells@redhat.com>
	Acked-by: Stephen Smalley <sds@tycho.nsa.gov>
	Signed-off-by: Paul Moore <pmoore@redhat.com>
(cherry picked from commit c3c188b2c3ed29effe8693672ee1c84184103b4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/selinux/hooks.c
diff --cc security/selinux/hooks.c
index 8f679be12609,f4be0a110788..000000000000
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@@ -1680,12 -1761,10 +1705,19 @@@ static int may_create(struct inode *dir
  	if (rc)
  		return rc;
  
++<<<<<<< HEAD
 +	if (!newsid || !(sbsec->flags & SE_SBLABELSUPP)) {
 +		rc = security_transition_sid(sid, dsec->sid, tclass,
 +					     &dentry->d_name, &newsid);
 +		if (rc)
 +			return rc;
 +	}
++=======
+ 	rc = selinux_determine_inode_label(dir, &dentry->d_name, tclass,
+ 					   &newsid);
+ 	if (rc)
+ 		return rc;
++>>>>>>> c3c188b2c3ed (selinux: Create a common helper to determine an inode label [ver #3])
  
  	rc = avc_has_perm(sid, newsid, tclass, FILE__CREATE, &ad);
  	if (rc)
@@@ -2623,11 -2738,6 +2655,14 @@@ static int selinux_dentry_init_security
  					struct qstr *name, void **ctx,
  					u32 *ctxlen)
  {
++<<<<<<< HEAD
 +	const struct cred *cred = current_cred();
 +	struct task_security_struct *tsec;
 +	struct inode_security_struct *dsec;
 +	struct superblock_security_struct *sbsec;
 +	struct inode *dir = dentry->d_parent->d_inode;
++=======
++>>>>>>> c3c188b2c3ed (selinux: Create a common helper to determine an inode label [ver #3])
  	u32 newsid;
  	int rc;
  
@@@ -2670,22 -2768,12 +2692,31 @@@ static int selinux_inode_init_security(
  	sid = tsec->sid;
  	newsid = tsec->create_sid;
  
++<<<<<<< HEAD
 +	if ((sbsec->flags & SE_SBINITIALIZED) &&
 +	    (sbsec->behavior == SECURITY_FS_USE_MNTPOINT))
 +		newsid = sbsec->mntpoint_sid;
 +	else if (!newsid || !(sbsec->flags & SE_SBLABELSUPP)) {
 +		rc = security_transition_sid(sid, dsec->sid,
 +					     inode_mode_to_security_class(inode->i_mode),
 +					     qstr, &newsid);
 +		if (rc) {
 +			printk(KERN_WARNING "%s:  "
 +			       "security_transition_sid failed, rc=%d (dev=%s "
 +			       "ino=%ld)\n",
 +			       __func__,
 +			       -rc, inode->i_sb->s_id, inode->i_ino);
 +			return rc;
 +		}
 +	}
++=======
+ 	rc = selinux_determine_inode_label(
+ 		dir, qstr,
+ 		inode_mode_to_security_class(inode->i_mode),
+ 		&newsid);
+ 	if (rc)
+ 		return rc;
++>>>>>>> c3c188b2c3ed (selinux: Create a common helper to determine an inode label [ver #3])
  
  	/* Possibly defer initialization to selinux_complete_init. */
  	if (sbsec->flags & SE_SBINITIALIZED) {
* Unmerged path security/selinux/hooks.c
