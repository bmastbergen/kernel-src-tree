bridge: use DEVICE_ATTR_xx macros

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author sfeldma@cumulusnetworks.com <sfeldma@cumulusnetworks.com>
commit fbf2671bb8e9c3329c52dae34b06e975a061d0a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/fbf2671b.failed

Use DEVICE_ATTR_RO/RW macros to simplify bridge sysfs attribute definitions.

	Signed-off-by: Scott Feldman <sfeldma@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fbf2671bb8e9c3329c52dae34b06e975a061d0a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_sysfs_br.c
diff --cc net/bridge/br_sysfs_br.c
index a3eb35988a8a,8dac65552f19..000000000000
--- a/net/bridge/br_sysfs_br.c
+++ b/net/bridge/br_sysfs_br.c
@@@ -645,12 -618,10 +618,15 @@@ static ssize_t multicast_startup_query_
  {
  	return store_bridge_parm(d, buf, len, set_startup_query_interval);
  }
- static DEVICE_ATTR(multicast_startup_query_interval, S_IRUGO | S_IWUSR,
- 		   show_multicast_startup_query_interval,
- 		   store_multicast_startup_query_interval);
+ static DEVICE_ATTR_RW(multicast_startup_query_interval);
  #endif
++<<<<<<< HEAD
 +#if IS_ENABLED(CONFIG_BRIDGE_NETFILTER)
 +static ssize_t show_nf_call_iptables(
++=======
+ #ifdef CONFIG_BRIDGE_NETFILTER
+ static ssize_t nf_call_iptables_show(
++>>>>>>> fbf2671bb8e9 (bridge: use DEVICE_ATTR_xx macros)
  	struct device *d, struct device_attribute *attr, char *buf)
  {
  	struct net_bridge *br = to_bridge(d);
@@@ -731,24 -699,7 +704,28 @@@ static ssize_t vlan_filtering_store(str
  {
  	return store_bridge_parm(d, buf, len, br_vlan_filter_toggle);
  }
++<<<<<<< HEAD
 +static DEVICE_ATTR(vlan_filtering, S_IRUGO | S_IWUSR,
 +		   show_vlan_filtering, store_vlan_filtering);
 +
 +static ssize_t default_pvid_show(struct device *d,
 +				 struct device_attribute *attr,
 +				 char *buf)
 +{
 +	struct net_bridge *br = to_bridge(d);
 +	return sprintf(buf, "%d\n", br->default_pvid);
 +}
 +
 +static ssize_t default_pvid_store(struct device *d,
 +				  struct device_attribute *attr,
 +				  const char *buf, size_t len)
 +{
 +	return store_bridge_parm(d, buf, len, br_vlan_set_default_pvid);
 +}
 +static DEVICE_ATTR_RW(default_pvid);
++=======
+ static DEVICE_ATTR_RW(vlan_filtering);
++>>>>>>> fbf2671bb8e9 (bridge: use DEVICE_ATTR_xx macros)
  #endif
  
  static struct attribute *bridge_attrs[] = {
* Unmerged path net/bridge/br_sysfs_br.c
