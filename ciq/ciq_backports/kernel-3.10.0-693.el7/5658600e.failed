ib_srpt: fix a WARN_ON() message

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 5658600e7f67063e75b8fb8fa6c697183d305dd3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5658600e.failed

The first argument of WARN_ON() is a condition, so it means the warning
message here will just be the name without the ->qp_num information.

	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 5658600e7f67063e75b8fb8fa6c697183d305dd3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/srpt/ib_srpt.c
diff --cc drivers/infiniband/ulp/srpt/ib_srpt.c
index 316f3bbb1b05,578c3703421d..000000000000
--- a/drivers/infiniband/ulp/srpt/ib_srpt.c
+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c
@@@ -797,6 -811,39 +797,42 @@@ out
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * srpt_zerolength_write() - Perform a zero-length RDMA write.
+  *
+  * A quote from the InfiniBand specification: C9-88: For an HCA responder
+  * using Reliable Connection service, for each zero-length RDMA READ or WRITE
+  * request, the R_Key shall not be validated, even if the request includes
+  * Immediate data.
+  */
+ static int srpt_zerolength_write(struct srpt_rdma_ch *ch)
+ {
+ 	struct ib_send_wr wr, *bad_wr;
+ 
+ 	memset(&wr, 0, sizeof(wr));
+ 	wr.opcode = IB_WR_RDMA_WRITE;
+ 	wr.wr_cqe = &ch->zw_cqe;
+ 	wr.send_flags = IB_SEND_SIGNALED;
+ 	return ib_post_send(ch->qp, &wr, &bad_wr);
+ }
+ 
+ static void srpt_zerolength_write_done(struct ib_cq *cq, struct ib_wc *wc)
+ {
+ 	struct srpt_rdma_ch *ch = cq->cq_context;
+ 
+ 	if (wc->status == IB_WC_SUCCESS) {
+ 		srpt_process_wait_list(ch);
+ 	} else {
+ 		if (srpt_set_ch_state(ch, CH_DISCONNECTED))
+ 			schedule_work(&ch->release_work);
+ 		else
+ 			WARN_ONCE(1, "%s-%d\n", ch->sess_name, ch->qp->qp_num);
+ 	}
+ }
+ 
+ /**
++>>>>>>> 5658600e7f67 (ib_srpt: fix a WARN_ON() message)
   * srpt_get_desc_tbl() - Parse the data descriptors of an SRP_CMD request.
   * @ioctx: Pointer to the I/O context associated with the request.
   * @srp_cmd: Pointer to the SRP_CMD request data.
* Unmerged path drivers/infiniband/ulp/srpt/ib_srpt.c
