perf trace: Make --(min,max}-stack imply "--call-graph dwarf"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [tools] perf trace: Make --(min, max}-stack imply "--call-graph dwarf" (Jiri Olsa) [1373817]
Rebuild_FUZZ: 99.19%
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 056149932602ef905f1e26fc4fe242ef0533a597
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/05614993.failed

If one uses:

  # perf trace --min-stack 16

Then it implicitly means that callgraphs should be enabled, and the best
option in terms of widespread availability is "dwarf".

Further work needed to choose a better alternative, LBR, in capable
systems.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Milian Wolff <milian.wolff@kdab.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-xtjmnpkyk42npekxz3kynzmx@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 056149932602ef905f1e26fc4fe242ef0533a597)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-trace.txt
#	tools/perf/builtin-trace.c
diff --cc tools/perf/Documentation/perf-trace.txt
index 13293de8869f,146c6db21cbf..000000000000
--- a/tools/perf/Documentation/perf-trace.txt
+++ b/tools/perf/Documentation/perf-trace.txt
@@@ -120,6 -120,34 +120,28 @@@ the thread executes on the designated C
  --event::
  	Trace other events, see 'perf list' for a complete list.
  
++<<<<<<< HEAD
++=======
+ --max-stack::
+         Set the stack depth limit when parsing the callchain, anything
+         beyond the specified depth will be ignored. Note that at this point
+         this is just about the presentation part, i.e. the kernel is still
+         not limiting, the overhead of callchains needs to be set via the
+         knobs in --call-graph dwarf.
+ 
+         Implies '--call-graph dwarf' when --call-graph not present on the
+         command line, on systems where DWARF unwinding was built in.
+ 
+         Default: 127
+ 
+ --min-stack::
+         Set the stack depth limit when parsing the callchain, anything
+         below the specified depth will be ignored. Disabled by default.
+ 
+         Implies '--call-graph dwarf' when --call-graph not present on the
+         command line, on systems where DWARF unwinding was built in.
+ 
++>>>>>>> 056149932602 (perf trace: Make --(min,max}-stack imply "--call-graph dwarf")
  --proc-map-timeout::
  	When processing pre-existing threads /proc/XXX/mmap, it may take a long time,
  	because the file may be huge. A time out is needed in such cases.
diff --cc tools/perf/builtin-trace.c
index b18ec7559ff0,19f5100acc1d..000000000000
--- a/tools/perf/builtin-trace.c
+++ b/tools/perf/builtin-trace.c
@@@ -2923,6 -3046,8 +2923,11 @@@ int cmd_trace(int argc, const char **ar
  		.output = stderr,
  		.show_comm = true,
  		.trace_syscalls = true,
++<<<<<<< HEAD
++=======
+ 		.kernel_syscallchains = false,
+ 		.max_stack = UINT_MAX,
++>>>>>>> 056149932602 (perf trace: Make --(min,max}-stack imply "--call-graph dwarf")
  	};
  	const char *output_name = NULL;
  	const char *ev_qualifier_str = NULL;
@@@ -2995,6 -3143,19 +3001,22 @@@
  		trace.opts.sample_time = true;
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (trace.max_stack == UINT_MAX) {
+ 		trace.max_stack = PERF_MAX_STACK_DEPTH;
+ 		max_stack_user_set = false;
+ 	}
+ 
+ #ifdef HAVE_DWARF_UNWIND_SUPPORT
+ 	if ((trace.min_stack || max_stack_user_set) && !trace.opts.callgraph_set)
+ 		record_opts__parse_callchain(&trace.opts, &callchain_param, "dwarf", false);
+ #endif
+ 
+ 	if (trace.opts.callgraph_set)
+ 		symbol_conf.use_callchain = true;
+ 
++>>>>>>> 056149932602 (perf trace: Make --(min,max}-stack imply "--call-graph dwarf")
  	if (trace.evlist->nr_entries > 0)
  		evlist__set_evsel_handler(trace.evlist, trace__event_handler);
  
* Unmerged path tools/perf/Documentation/perf-trace.txt
* Unmerged path tools/perf/builtin-trace.c
