fsnotify: fix check in inotify fdinfo printing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jan Kara <jack@suse.cz>
commit 3c53e514212455db9923c203694a72007558b48f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3c53e514.failed

A check in inotify_fdinfo() checking whether mark is valid was always
true due to a bug.  Luckily we can never get to invalidated marks since
we hold mark_mutex and invalidated marks get removed from the group list
when they are invalidated under that mutex.

Anyway fix the check to make code more future proof.

	Signed-off-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 3c53e514212455db9923c203694a72007558b48f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/notify/fdinfo.c
diff --cc fs/notify/fdinfo.c
index 9d7e2b9659cb,6b6f0d472ae8..000000000000
--- a/fs/notify/fdinfo.c
+++ b/fs/notify/fdinfo.c
@@@ -79,30 -75,26 +79,36 @@@ static int inotify_fdinfo(struct seq_fi
  {
  	struct inotify_inode_mark *inode_mark;
  	struct inode *inode;
 +	int ret = 0;
  
++<<<<<<< HEAD
 +	if (!(mark->flags & (FSNOTIFY_MARK_FLAG_ALIVE | FSNOTIFY_MARK_FLAG_INODE)))
 +		return 0;
++=======
+ 	if (!(mark->flags & FSNOTIFY_MARK_FLAG_ALIVE) ||
+ 	    !(mark->flags & FSNOTIFY_MARK_FLAG_INODE))
+ 		return;
++>>>>>>> 3c53e5142124 (fsnotify: fix check in inotify fdinfo printing)
  
  	inode_mark = container_of(mark, struct inotify_inode_mark, fsn_mark);
 -	inode = igrab(mark->inode);
 +	inode = igrab(mark->i.inode);
  	if (inode) {
 -		seq_printf(m, "inotify wd:%x ino:%lx sdev:%x mask:%x ignored_mask:%x ",
 -			   inode_mark->wd, inode->i_ino, inode->i_sb->s_dev,
 -			   mark->mask, mark->ignored_mask);
 -		show_mark_fhandle(m, inode);
 -		seq_putc(m, '\n');
 +		ret = seq_printf(m, "inotify wd:%x ino:%lx sdev:%x "
 +				 "mask:%x ignored_mask:%x ",
 +				 inode_mark->wd, inode->i_ino,
 +				 inode->i_sb->s_dev,
 +				 mark->mask, mark->ignored_mask);
 +		ret |= show_mark_fhandle(m, inode);
 +		ret |= seq_putc(m, '\n');
  		iput(inode);
  	}
 +
 +	return ret;
  }
  
 -void inotify_show_fdinfo(struct seq_file *m, struct file *f)
 +int inotify_show_fdinfo(struct seq_file *m, struct file *f)
  {
 -	show_fdinfo(m, f, inotify_fdinfo);
 +	return show_fdinfo(m, f, inotify_fdinfo);
  }
  
  #endif /* CONFIG_INOTIFY_USER */
* Unmerged path fs/notify/fdinfo.c
