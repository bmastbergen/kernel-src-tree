RDS: TCP: Refactor connection destruction to handle multiple paths

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Sowmini Varadhan <sowmini.varadhan@oracle.com>
commit afb4164d91c7486a1d4ab098a1b88e27b5e25772
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/afb4164d.failed

A single rds_connection may have multiple rds_conn_paths that have
to be carefully and correctly destroyed, for both rmmod and
netns-delete cases.

For both cases, we extract a single rds_tcp_connection for
each conn into a temporary list, and then invoke rds_conn_destroy()
which iteratively dismantles every path in the rds_connection.

For the netns deletion case, we additionally have to make sure
that we do not leave a socket in TIME_WAIT state, as this will
hold up the netns deletion. Thus we call rds_tcp_conn_paths_destroy()
to reset state quickly.

	Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
	Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit afb4164d91c7486a1d4ab098a1b88e27b5e25772)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/rds/tcp.c
diff --cc net/rds/tcp.c
index 5ea4c0469433,b32772759c9d..000000000000
--- a/net/rds/tcp.c
+++ b/net/rds/tcp.c
@@@ -505,10 -545,8 +539,15 @@@ static void rds_tcp_kill_sock(struct ne
  	}
  	spin_unlock_irq(&rds_tcp_conn_lock);
  	list_for_each_entry_safe(tc, _tc, &tmp_list, t_tcp_node) {
++<<<<<<< HEAD
 +		sk = tc->t_sock->sk;
 +		sk->sk_prot->disconnect(sk, 0);
 +		tcp_done(sk);
 +		rds_conn_destroy(tc->conn);
++=======
+ 		rds_tcp_conn_paths_destroy(tc->t_cpath->cp_conn);
+ 		rds_conn_destroy(tc->t_cpath->cp_conn);
++>>>>>>> afb4164d91c7 (RDS: TCP: Refactor connection destruction to handle multiple paths)
  	}
  }
  
* Unmerged path net/rds/tcp.c
