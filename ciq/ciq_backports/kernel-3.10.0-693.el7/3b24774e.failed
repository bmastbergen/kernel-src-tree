NVMe: Fix check_flush_dependency warning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [nvme] Fix check_flush_dependency warning (David Milburn) [1384066]
Rebuild_FUZZ: 91.89%
commit-author Keith Busch <keith.busch@intel.com>
commit 3b24774e1fb90a40836e96e39a851a774679efff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3b24774e.failed

If the controller fails and is degraded after a reset, we need to kill
off all requests queues before removing the inaccessble namespaces. This
will prevent del_gendisk from syncing dirty data, which we can't due
from a WQ_MEM_RECLAIM work queue.

	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 3b24774e1fb90a40836e96e39a851a774679efff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index 7029a03e05b6,cc46fdf17b16..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -1840,7 -1886,8 +1840,12 @@@ static void nvme_reset_work(struct work
  	 * any working I/O queue.
  	 */
  	if (dev->online_queues < 2) {
++<<<<<<< HEAD
 +		dev_warn(dev->dev, "IO queues not created\n");
++=======
+ 		dev_warn(dev->ctrl.device, "IO queues not created\n");
+ 		nvme_kill_queues(&dev->ctrl);
++>>>>>>> 3b24774e1fb9 (NVMe: Fix check_flush_dependency warning)
  		nvme_remove_namespaces(&dev->ctrl);
  	} else {
  		nvme_start_queues(&dev->ctrl);
* Unmerged path drivers/nvme/host/pci.c
