perf hists: Move sort__has_parent into struct perf_hpp_list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Olsa <jolsa@kernel.org>
commit de7e6a7c8bf9ee46dcbee749bc3cdd0d9c21998a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/de7e6a7c.failed

Now we have sort dimensions private for struct hists, we need to make
dimension booleans hists specific as well.

Moving sort__has_parent into struct perf_hpp_list.

	Signed-off-by: Jiri Olsa <jolsa@kernel.org>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
Link: http://lkml.kernel.org/r/1462276488-26683-3-git-send-email-jolsa@kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit de7e6a7c8bf9ee46dcbee749bc3cdd0d9c21998a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/callchain.c
diff --cc tools/perf/util/callchain.c
index d09b6b8ea90c,07fd30bc2f81..000000000000
--- a/tools/perf/util/callchain.c
+++ b/tools/perf/util/callchain.c
@@@ -798,8 -799,8 +798,13 @@@ int sample__resolve_callchain(struct pe
  		return 0;
  
  	if (symbol_conf.use_callchain || symbol_conf.cumulate_callchain ||
++<<<<<<< HEAD
 +	    sort__has_parent) {
 +		return thread__resolve_callchain(al->thread, evsel, sample,
++=======
+ 	    perf_hpp_list.parent) {
+ 		return thread__resolve_callchain(al->thread, cursor, evsel, sample,
++>>>>>>> de7e6a7c8bf9 (perf hists: Move sort__has_parent into struct perf_hpp_list)
  						 parent, al, max_stack);
  	}
  	return 0;
diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c
index ea3c5a44e17f..2e34cba87dff 100644
--- a/tools/perf/builtin-report.c
+++ b/tools/perf/builtin-report.c
@@ -234,7 +234,7 @@ static int report__setup_sample_type(struct report *rep)
 		sample_type |= PERF_SAMPLE_BRANCH_STACK;
 
 	if (!is_pipe && !(sample_type & PERF_SAMPLE_CALLCHAIN)) {
-		if (sort__has_parent) {
+		if (perf_hpp_list.parent) {
 			ui__error("Selected --sort parent, but no "
 				    "callchain data. Did you call "
 				    "'perf record' without -g?\n");
* Unmerged path tools/perf/util/callchain.c
diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h
index ec76e6bef916..57b09791c339 100644
--- a/tools/perf/util/hist.h
+++ b/tools/perf/util/hist.h
@@ -242,6 +242,7 @@ struct perf_hpp_list {
 	struct list_head sorts;
 
 	int need_collapse;
+	int parent;
 };
 
 extern struct perf_hpp_list perf_hpp_list;
diff --git a/tools/perf/util/machine.c b/tools/perf/util/machine.c
index 45792d2161ac..67306d36e3df 100644
--- a/tools/perf/util/machine.c
+++ b/tools/perf/util/machine.c
@@ -1651,7 +1651,7 @@ static int add_callchain_ip(struct thread *thread,
 	}
 
 	if (al.sym != NULL) {
-		if (sort__has_parent && !*parent &&
+		if (perf_hpp_list.parent && !*parent &&
 		    symbol__match_regex(al.sym, &parent_regex))
 			*parent = al.sym;
 		else if (have_ignore_callees && root_al &&
diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c
index 331b7cc8c0d0..3087fce46de6 100644
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@ -21,7 +21,6 @@ const char	*sort_order;
 const char	*field_order;
 regex_t		ignore_callees_regex;
 int		have_ignore_callees = 0;
-int		sort__has_parent = 0;
 int		sort__has_sym = 0;
 int		sort__has_dso = 0;
 int		sort__has_socket = 0;
@@ -2244,7 +2243,7 @@ static int sort_dimension__add(struct perf_hpp_list *list, const char *tok,
 				pr_err("Invalid regex: %s\n%s", parent_pattern, err);
 				return -EINVAL;
 			}
-			sort__has_parent = 1;
+			list->parent = 1;
 		} else if (sd->entry == &sort_sym) {
 			sort__has_sym = 1;
 			/*
@@ -2749,7 +2748,7 @@ int setup_sorting(struct perf_evlist *evlist)
 void reset_output_field(void)
 {
 	perf_hpp_list.need_collapse = 0;
-	sort__has_parent = 0;
+	perf_hpp_list.parent = 0;
 	sort__has_sym = 0;
 	sort__has_dso = 0;
 
diff --git a/tools/perf/util/sort.h b/tools/perf/util/sort.h
index 2e1d27326954..0e44aea86800 100644
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@ -32,7 +32,6 @@ extern const char default_sort_order[];
 extern regex_t ignore_callees_regex;
 extern int have_ignore_callees;
 extern int sort__has_dso;
-extern int sort__has_parent;
 extern int sort__has_sym;
 extern int sort__has_socket;
 extern int sort__has_thread;
