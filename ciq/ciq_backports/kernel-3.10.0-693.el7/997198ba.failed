fs/block_dev.c: return the right error in thaw_bdev()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [fs] block_dev.c: return the right error in thaw_bdev() (Mateusz Guzik) [1375033]
Rebuild_FUZZ: 97.09%
commit-author Pierre Morel <pmorel@linux.vnet.ibm.com>
commit 997198ba1ed691c09457120576c27dbd953d0557
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/997198ba.failed

When triggering thaw-filesystems via magic sysrq, the system enters a
loop in do_thaw_one(), as thaw_bdev() still returns success if
bd_fsfreeze_count == 0. To fix this, let thaw_bdev() always return
error (and simplify the code a bit at the same time).

	Reviewed-by: Eric Farman <farman@linux.vnet.ibm.com>
	Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
	Signed-off-by: Pierre Morel <pmorel@linux.vnet.ibm.com>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 997198ba1ed691c09457120576c27dbd953d0557)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/block_dev.c
diff --cc fs/block_dev.c
index 7d6ea6f10f58,376e4e426324..000000000000
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@@ -302,15 -295,15 +302,20 @@@ int thaw_bdev(struct block_device *bdev
  	if (!sb)
  		goto out;
  
++<<<<<<< HEAD
 +	error = thaw_super(sb);
 +	if (error) {
++=======
+ 	if (sb->s_op->thaw_super)
+ 		error = sb->s_op->thaw_super(sb);
+ 	else
+ 		error = thaw_super(sb);
+ 	if (error)
++>>>>>>> 997198ba1ed6 (fs/block_dev.c: return the right error in thaw_bdev())
  		bdev->bd_fsfreeze_count++;
- 		mutex_unlock(&bdev->bd_fsfreeze_mutex);
- 		return error;
- 	}
  out:
  	mutex_unlock(&bdev->bd_fsfreeze_mutex);
- 	return 0;
+ 	return error;
  }
  EXPORT_SYMBOL(thaw_bdev);
  
* Unmerged path fs/block_dev.c
