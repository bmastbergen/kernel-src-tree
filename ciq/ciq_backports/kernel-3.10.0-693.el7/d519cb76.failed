drm: virtio: add virtio_gpu_translate_format

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] virtio: add virtio_gpu_translate_format (Laurent Vivier) [1436960]
Rebuild_FUZZ: 93.98%
commit-author Gerd Hoffmann <kraxel@redhat.com>
commit d519cb76181efc78ba67e87b38286fa04d46dfa3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d519cb76.failed

Factors out code, no functional change.

	Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
	Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Tested-by: Laurent Vivier <lvivier@redhat.com>
Link: http://patchwork.freedesktop.org/patch/msgid/20170403070845.10793-2-kraxel@redhat.com
(cherry picked from commit d519cb76181efc78ba67e87b38286fa04d46dfa3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/virtio/virtgpu_plane.c
diff --cc drivers/gpu/drm/virtio/virtgpu_plane.c
index 70b44a2345ab,372c91cc8533..000000000000
--- a/drivers/gpu/drm/virtio/virtgpu_plane.c
+++ b/drivers/gpu/drm/virtio/virtgpu_plane.c
@@@ -38,8 -38,81 +38,83 @@@ static const uint32_t virtio_gpu_format
  	DRM_FORMAT_ABGR8888,
  };
  
++<<<<<<< HEAD
++=======
+ static const uint32_t virtio_gpu_cursor_formats[] = {
+ 	DRM_FORMAT_ARGB8888,
+ };
+ 
+ uint32_t virtio_gpu_translate_format(uint32_t drm_fourcc)
+ {
+ 	uint32_t format;
+ 
+ 	switch (drm_fourcc) {
+ #ifdef __BIG_ENDIAN
+ 	case DRM_FORMAT_XRGB8888:
+ 		format = VIRTIO_GPU_FORMAT_X8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ARGB8888:
+ 		format = VIRTIO_GPU_FORMAT_A8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRX8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRA8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8A8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBX8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBA8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8A8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_XBGR8888:
+ 		format = VIRTIO_GPU_FORMAT_X8B8G8R8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ABGR8888:
+ 		format = VIRTIO_GPU_FORMAT_A8B8G8R8_UNORM;
+ 		break;
+ #else
+ 	case DRM_FORMAT_XRGB8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ARGB8888:
+ 		format = VIRTIO_GPU_FORMAT_B8G8R8A8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRX8888:
+ 		format = VIRTIO_GPU_FORMAT_X8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_BGRA8888:
+ 		format = VIRTIO_GPU_FORMAT_A8R8G8B8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBX8888:
+ 		format = VIRTIO_GPU_FORMAT_X8B8G8R8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_RGBA8888:
+ 		format = VIRTIO_GPU_FORMAT_A8B8G8R8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_XBGR8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8X8_UNORM;
+ 		break;
+ 	case DRM_FORMAT_ABGR8888:
+ 		format = VIRTIO_GPU_FORMAT_R8G8B8A8_UNORM;
+ 		break;
+ #endif
+ 	default:
+ 		/*
+ 		 * This should not happen, we handle everything listed
+ 		 * in virtio_gpu_formats[].
+ 		 */
+ 		format = 0;
+ 		break;
+ 	}
+ 	WARN_ON(format == 0);
+ 	return format;
+ }
+ 
++>>>>>>> d519cb76181e (drm: virtio: add virtio_gpu_translate_format)
  static void virtio_gpu_plane_destroy(struct drm_plane *plane)
  {
 -	drm_plane_cleanup(plane);
  	kfree(plane);
  }
  
diff --git a/drivers/gpu/drm/virtio/virtgpu_drv.h b/drivers/gpu/drm/virtio/virtgpu_drv.h
index 8f486f4c7023..a5ea0e121ada 100644
--- a/drivers/gpu/drm/virtio/virtgpu_drv.h
+++ b/drivers/gpu/drm/virtio/virtgpu_drv.h
@@ -334,6 +334,7 @@ int virtio_gpu_modeset_init(struct virtio_gpu_device *vgdev);
 void virtio_gpu_modeset_fini(struct virtio_gpu_device *vgdev);
 
 /* virtio_gpu_plane.c */
+uint32_t virtio_gpu_translate_format(uint32_t drm_fourcc);
 struct drm_plane *virtio_gpu_plane_init(struct virtio_gpu_device *vgdev,
 					int index);
 
diff --git a/drivers/gpu/drm/virtio/virtgpu_fb.c b/drivers/gpu/drm/virtio/virtgpu_fb.c
index 2242a80866a9..d3e4213ca35c 100644
--- a/drivers/gpu/drm/virtio/virtgpu_fb.c
+++ b/drivers/gpu/drm/virtio/virtgpu_fb.c
@@ -237,63 +237,9 @@ static int virtio_gpufb_create(struct drm_fb_helper *helper,
 	mode_cmd.pitches[0] = mode_cmd.width * 4;
 	mode_cmd.pixel_format = drm_mode_legacy_fb_format(32, 24);
 
-	switch (mode_cmd.pixel_format) {
-#ifdef __BIG_ENDIAN
-	case DRM_FORMAT_XRGB8888:
-		format = VIRTIO_GPU_FORMAT_X8R8G8B8_UNORM;
-		break;
-	case DRM_FORMAT_ARGB8888:
-		format = VIRTIO_GPU_FORMAT_A8R8G8B8_UNORM;
-		break;
-	case DRM_FORMAT_BGRX8888:
-		format = VIRTIO_GPU_FORMAT_B8G8R8X8_UNORM;
-		break;
-	case DRM_FORMAT_BGRA8888:
-		format = VIRTIO_GPU_FORMAT_B8G8R8A8_UNORM;
-		break;
-	case DRM_FORMAT_RGBX8888:
-		format = VIRTIO_GPU_FORMAT_R8G8B8X8_UNORM;
-		break;
-	case DRM_FORMAT_RGBA8888:
-		format = VIRTIO_GPU_FORMAT_R8G8B8A8_UNORM;
-		break;
-	case DRM_FORMAT_XBGR8888:
-		format = VIRTIO_GPU_FORMAT_X8B8G8R8_UNORM;
-		break;
-	case DRM_FORMAT_ABGR8888:
-		format = VIRTIO_GPU_FORMAT_A8B8G8R8_UNORM;
-		break;
-#else
-	case DRM_FORMAT_XRGB8888:
-		format = VIRTIO_GPU_FORMAT_B8G8R8X8_UNORM;
-		break;
-	case DRM_FORMAT_ARGB8888:
-		format = VIRTIO_GPU_FORMAT_B8G8R8A8_UNORM;
-		break;
-	case DRM_FORMAT_BGRX8888:
-		format = VIRTIO_GPU_FORMAT_X8R8G8B8_UNORM;
-		break;
-	case DRM_FORMAT_BGRA8888:
-		format = VIRTIO_GPU_FORMAT_A8R8G8B8_UNORM;
-		break;
-	case DRM_FORMAT_RGBX8888:
-		format = VIRTIO_GPU_FORMAT_X8B8G8R8_UNORM;
-		break;
-	case DRM_FORMAT_RGBA8888:
-		format = VIRTIO_GPU_FORMAT_A8B8G8R8_UNORM;
-		break;
-	case DRM_FORMAT_XBGR8888:
-		format = VIRTIO_GPU_FORMAT_R8G8B8X8_UNORM;
-		break;
-	case DRM_FORMAT_ABGR8888:
-		format = VIRTIO_GPU_FORMAT_R8G8B8A8_UNORM;
-		break;
-#endif
-	default:
-		DRM_ERROR("failed to find virtio gpu format for %d\n",
-			  mode_cmd.pixel_format);
+	format = virtio_gpu_translate_format(mode_cmd.pixel_format);
+	if (format == 0)
 		return -EINVAL;
-	}
 
 	size = mode_cmd.pitches[0] * mode_cmd.height;
 	obj = virtio_gpu_alloc_object(dev, size, false, true);
* Unmerged path drivers/gpu/drm/virtio/virtgpu_plane.c
