IB/iser: use IB_PD_UNSAFE_GLOBAL_RKEY

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 8e61212d05963a3beecb8bf124b88a0b13a9600d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8e61212d.failed

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 8e61212d05963a3beecb8bf124b88a0b13a9600d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/iser/iser_verbs.c
diff --cc drivers/infiniband/ulp/iser/iser_verbs.c
index 6eb257b2057d,a4b791dfaa1d..000000000000
--- a/drivers/infiniband/ulp/iser/iser_verbs.c
+++ b/drivers/infiniband/ulp/iser/iser_verbs.c
@@@ -88,7 -88,8 +88,12 @@@ static int iser_create_device_ib_res(st
  		  device->comps_used, ib_dev->name,
  		  ib_dev->num_comp_vectors, max_cqe);
  
++<<<<<<< HEAD
 +	device->pd = ib_alloc_pd(ib_dev);
++=======
+ 	device->pd = ib_alloc_pd(ib_dev,
+ 		iser_always_reg ? 0 : IB_PD_UNSAFE_GLOBAL_RKEY);
++>>>>>>> 8e61212d0596 (IB/iser: use IB_PD_UNSAFE_GLOBAL_RKEY)
  	if (IS_ERR(device->pd))
  		goto pd_err;
  
@@@ -103,20 -104,10 +108,25 @@@
  		}
  	}
  
++<<<<<<< HEAD
 +	if (!iser_always_reg) {
 +		int access = IB_ACCESS_LOCAL_WRITE |
 +			     IB_ACCESS_REMOTE_WRITE |
 +			     IB_ACCESS_REMOTE_READ;
 +
 +		device->mr = ib_get_dma_mr(device->pd, access);
 +		if (IS_ERR(device->mr))
 +			goto cq_err;
 +	}
 +
 +	INIT_IB_EVENT_HANDLER(&device->event_handler, device->ib_device,
 +				iser_event_handler);
++=======
+ 	INIT_IB_EVENT_HANDLER(&device->event_handler, ib_dev,
+ 			      iser_event_handler);
++>>>>>>> 8e61212d0596 (IB/iser: use IB_PD_UNSAFE_GLOBAL_RKEY)
  	if (ib_register_event_handler(&device->event_handler))
- 		goto handler_err;
+ 		goto cq_err;
  
  	return 0;
  
diff --git a/drivers/infiniband/ulp/iser/iscsi_iser.h b/drivers/infiniband/ulp/iser/iscsi_iser.h
index 0351059783b1..0be6a7c5ddb5 100644
--- a/drivers/infiniband/ulp/iser/iscsi_iser.h
+++ b/drivers/infiniband/ulp/iser/iscsi_iser.h
@@ -374,7 +374,6 @@ struct iser_reg_ops {
 struct iser_device {
 	struct ib_device             *ib_device;
 	struct ib_pd	             *pd;
-	struct ib_mr	             *mr;
 	struct ib_event_handler      event_handler;
 	struct list_head             ig_list;
 	int                          refcount;
diff --git a/drivers/infiniband/ulp/iser/iser_memory.c b/drivers/infiniband/ulp/iser/iser_memory.c
index 69c73708942a..19d9358d5a53 100644
--- a/drivers/infiniband/ulp/iser/iser_memory.c
+++ b/drivers/infiniband/ulp/iser/iser_memory.c
@@ -199,7 +199,11 @@ iser_reg_dma(struct iser_device *device, struct iser_data_buf *mem,
 	 * FIXME: rework the registration code path to differentiate
 	 * rkey/lkey use cases
 	 */
-	reg->rkey = device->mr ? device->mr->rkey : 0;
+
+	if (device->pd->flags & IB_PD_UNSAFE_GLOBAL_RKEY)
+		reg->rkey = device->pd->unsafe_global_rkey;
+	else
+		reg->rkey = 0;
 	reg->sge.addr = ib_sg_dma_address(device->ib_device, &sg[0]);
 	reg->sge.length = ib_sg_dma_len(device->ib_device, &sg[0]);
 
* Unmerged path drivers/infiniband/ulp/iser/iser_verbs.c
