bnxt_en: Improve ntuple filters by checking destination MAC address.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] bnxt_en: Improve ntuple filters by checking destination MAC address (Jonathan Toppins) [1382378]
Rebuild_FUZZ: 99.26%
commit-author Michael Chan <michael.chan@broadcom.com>
commit a54c4d74989b769014b359e5b66f3e571d903d25
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a54c4d74.failed

Include the destination MAC address in the ntuple filter structure.  The
current code assumes that the destination MAC address is always the MAC
address of the NIC.  This may not be true if there are macvlans, for
example.  Add destination MAC address checking and configure the filter
correctly using the correct index for the destination MAC address.

	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a54c4d74989b769014b359e5b66f3e571d903d25)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index 7ecbc99574ab,7de7d7ac7c3a..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -6301,12 -6294,13 +6301,22 @@@ static bool bnxt_fltr_match(struct bnxt
  	struct flow_keys *keys1 = &f1->fkeys;
  	struct flow_keys *keys2 = &f2->fkeys;
  
++<<<<<<< HEAD
 +	if (keys1->src == keys2->src &&
 +	    keys1->dst == keys2->dst &&
 +	    keys1->ports == keys2->ports &&
 +	    keys1->ip_proto == keys2->ip_proto &&
 +	    keys1->n_proto == keys2->n_proto &&
 +	    ether_addr_equal(f1->src_mac_addr, f2->src_mac_addr))
++=======
+ 	if (keys1->addrs.v4addrs.src == keys2->addrs.v4addrs.src &&
+ 	    keys1->addrs.v4addrs.dst == keys2->addrs.v4addrs.dst &&
+ 	    keys1->ports.ports == keys2->ports.ports &&
+ 	    keys1->basic.ip_proto == keys2->basic.ip_proto &&
+ 	    keys1->basic.n_proto == keys2->basic.n_proto &&
+ 	    ether_addr_equal(f1->src_mac_addr, f2->src_mac_addr) &&
+ 	    ether_addr_equal(f1->dst_mac_addr, f2->dst_mac_addr))
++>>>>>>> a54c4d74989b (bnxt_en: Improve ntuple filters by checking destination MAC address.)
  		return true;
  
  	return false;
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt.h b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
index 5307a2ee6a05..23e04a6142fb 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
@@ -785,10 +785,12 @@ struct bnxt_pf_info {
 
 struct bnxt_ntuple_filter {
 	struct hlist_node	hash;
+	u8			dst_mac_addr[ETH_ALEN];
 	u8			src_mac_addr[ETH_ALEN];
 	struct flow_keys	fkeys;
 	__le64			filter_id;
 	u16			sw_id;
+	u8			l2_fltr_idx;
 	u16			rxq;
 	u32			flow_id;
 	unsigned long		state;
