efi: Work around ia64 build problem with ESRT driver

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Peter Jones <pjones@redhat.com>
commit 3846c15820a1841225d0245afda4875af23dfbbe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3846c158.failed

So, I'm told this problem exists in the world:

 > Subject: Build error in -next due to 'efi: Add esrt support'
 >
 > Building ia64:defconfig ... failed
 > --------------
 > Error log:
 >
 > drivers/firmware/efi/esrt.c:28:31: fatal error: asm/early_ioremap.h: No such file or directory
 >

I'm not really sure how it's okay that we have things in asm-generic on
some platforms but not others - is having it the same everywhere not the
whole point of asm-generic?

That said, ia64 doesn't have early_ioremap.h .  So instead, since it's
difficult to imagine new IA64 machines with UEFI 2.5, just don't build
this code there.

To me this looks like a workaround - doing something like:

generic-y += early_ioremap.h

in arch/ia64/include/asm/Kbuild would appear to be more correct, but
ia64 has its own early_memremap() decl in arch/ia64/include/asm/io.h ,
and it's a macro.  So adding the above /and/ requiring that asm/io.h be
included /after/ asm/early_ioremap.h in all cases would fix it, but
that's pretty ugly as well.  Since I'm not going to spend the rest of my
life rectifying ia64 headers vs "generic" headers that aren't generic,
it's much simpler to just not build there.

Note that I've only actually tried to build this patch on x86_64, but
esrt.o still gets built there, and that would seem to demonstrate that
the conditional building is working correctly at all the places the code
built before.  I no longer have any ia64 machines handy to test that the
exclusion actually works there.

	Signed-off-by: Peter Jones <pjones@redhat.com>
	Acked-by: Tony Luck <tony.luck@intel.com>
	Reviewed-by: Guenter Roeck <linux@roeck-us.net>
(Compile-)Tested-by: Guenter Roeck <linux@roeck-us.net>
	Signed-off-by: Matt Fleming <matt.fleming@intel.com>
(cherry picked from commit 3846c15820a1841225d0245afda4875af23dfbbe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/efi/Makefile
#	include/linux/efi.h
diff --cc drivers/firmware/efi/Makefile
index fd3d5bc4a212,6fd3da938717..000000000000
--- a/drivers/firmware/efi/Makefile
+++ b/drivers/firmware/efi/Makefile
@@@ -1,8 -1,11 +1,13 @@@
  #
  # Makefile for linux kernel
  #
++<<<<<<< HEAD
 +obj-y					+= efi.o vars.o
++=======
+ obj-$(CONFIG_EFI)			+= efi.o vars.o reboot.o
++>>>>>>> 3846c15820a1 (efi: Work around ia64 build problem with ESRT driver)
  obj-$(CONFIG_EFI_VARS)			+= efivars.o
+ obj-$(CONFIG_EFI_ESRT)			+= esrt.o
  obj-$(CONFIG_EFI_VARS_PSTORE)		+= efi-pstore.o
 -obj-$(CONFIG_UEFI_CPER)			+= cper.o
  obj-$(CONFIG_EFI_RUNTIME_MAP)		+= runtime-map.o
 -obj-$(CONFIG_EFI_RUNTIME_WRAPPERS)	+= runtime-wrappers.o
 -obj-$(CONFIG_EFI_STUB)			+= libstub/
 +obj-$(CONFIG_UEFI_CPER)			+= cper.o
diff --cc include/linux/efi.h
index ca17b7b1411d,2092965afca3..000000000000
--- a/include/linux/efi.h
+++ b/include/linux/efi.h
@@@ -885,6 -879,13 +885,16 @@@ static inline efi_status_t efi_query_va
  #endif
  extern void __iomem *efi_lookup_mapped_addr(u64 phys_addr);
  extern int efi_config_init(efi_config_table_type_t *arch_tables);
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_EFI_ESRT
+ extern void __init efi_esrt_init(void);
+ #else
+ static inline void efi_esrt_init(void) { }
+ #endif
+ extern int efi_config_parse_tables(void *config_tables, int count, int sz,
+ 				   efi_config_table_type_t *arch_tables);
++>>>>>>> 3846c15820a1 (efi: Work around ia64 build problem with ESRT driver)
  extern u64 efi_get_iobase (void);
  extern u32 efi_mem_type (unsigned long phys_addr);
  extern u64 efi_mem_attributes (unsigned long phys_addr);
diff --git a/drivers/firmware/efi/Kconfig b/drivers/firmware/efi/Kconfig
index 31560c466462..8af199fe9dea 100644
--- a/drivers/firmware/efi/Kconfig
+++ b/drivers/firmware/efi/Kconfig
@@ -18,6 +18,11 @@ config EFI_VARS
 	  Subsequent efibootmgr releases may be found at:
 	  <http://linux.dell.com/efibootmgr>
 
+config EFI_ESRT
+	bool
+	depends on EFI && !IA64
+	default y
+
 config EFI_VARS_PSTORE
 	tristate "Register efivars backend for pstore"
 	depends on EFI_VARS && PSTORE
* Unmerged path drivers/firmware/efi/Makefile
* Unmerged path include/linux/efi.h
