amd-xgbe: Disable VLAN filtering when in promiscuous mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lendacky, Thomas <Thomas.Lendacky@amd.com>
commit b4eee84fcd8ecae88a7d6ab437f88284f9693d9c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b4eee84f.failed

When the hardware is placed in promiscuous mode it will still perform
VLAN filtering and therefore may not pass all packets to the driver.

Disable all VLAN filtering when entering promiscuous mode and restore
VLAN filtering upon exit from promiscuous mode. In order to avoid adding
forward declarations, move the VLAN related functions earlier in the
file.

	Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b4eee84fcd8ecae88a7d6ab437f88284f9693d9c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/amd/xgbe/xgbe-dev.c
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-dev.c
index a748fd8a1c58,931e3745c451..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-dev.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-dev.c
@@@ -537,9 -817,18 +644,17 @@@ static int xgbe_set_promiscuous_mode(st
  	if (XGMAC_IOREAD_BITS(pdata, MAC_PFR, PR) == val)
  		return 0;
  
 -	netif_dbg(pdata, drv, pdata->netdev, "%s promiscuous mode\n",
 -		  enable ? "entering" : "leaving");
 +	DBGPR("  %s promiscuous mode\n", enable ? "entering" : "leaving");
  	XGMAC_IOWRITE_BITS(pdata, MAC_PFR, PR, val);
  
+ 	/* Hardware will still perform VLAN filtering in promiscuous mode */
+ 	if (enable) {
+ 		xgbe_disable_rx_vlan_filtering(pdata);
+ 	} else {
+ 		if (pdata->netdev->features & NETIF_F_HW_VLAN_CTAG_FILTER)
+ 			xgbe_enable_rx_vlan_filtering(pdata);
+ 	}
+ 
  	return 0;
  }
  
@@@ -738,33 -1059,6 +853,36 @@@ static int xgbe_enable_rx_csum(struct x
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int xgbe_enable_rx_vlan_stripping(struct xgbe_prv_data *pdata)
 +{
 +	/* Put the VLAN tag in the Rx descriptor */
 +	XGMAC_IOWRITE_BITS(pdata, MAC_VLANTR, EVLRXS, 1);
 +
 +	/* Don't check the VLAN type */
 +	XGMAC_IOWRITE_BITS(pdata, MAC_VLANTR, DOVLTC, 1);
 +
 +	/* Check only C-TAG (0x8100) packets */
 +	XGMAC_IOWRITE_BITS(pdata, MAC_VLANTR, ERSVLM, 0);
 +
 +	/* Don't consider an S-TAG (0x88A8) packet as a VLAN packet */
 +	XGMAC_IOWRITE_BITS(pdata, MAC_VLANTR, ESVL, 0);
 +
 +	/* Enable VLAN tag stripping */
 +	XGMAC_IOWRITE_BITS(pdata, MAC_VLANTR, EVLS, 0x3);
 +
 +	return 0;
 +}
 +
 +static int xgbe_disable_rx_vlan_stripping(struct xgbe_prv_data *pdata)
 +{
 +	XGMAC_IOWRITE_BITS(pdata, MAC_VLANTR, EVLS, 0);
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> b4eee84fcd8e (amd-xgbe: Disable VLAN filtering when in promiscuous mode)
  static void xgbe_tx_desc_reset(struct xgbe_ring_data *rdata)
  {
  	struct xgbe_ring_desc *rdesc = rdata->rdesc;
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-dev.c
