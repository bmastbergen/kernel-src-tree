drm/i915/kvmgt: Hold struct kvm reference

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] i915/kvmgt: Hold struct kvm reference (Rob Clark) [1422186]
Rebuild_FUZZ: 94.87%
commit-author Alex Williamson <alex.williamson@redhat.com>
commit 93a15b58cfb8a24e666ffca432f19fe65c1cd7d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/93a15b58.failed

The kvmgt code keeps a pointer to the struct kvm associated with the
device, but doesn't actually hold a reference to it.  If we do unclean
shutdown testing (ie. killing the user process), then we can see the
kvm association to the device unset, which causes kvmgt to trigger a
device release via a work queue.  Naturally we cannot guarantee that
the cached struct kvm pointer is still valid at this point without
holding a reference.  The observed failure in this case is a stuck
cpu trying to acquire the spinlock from the invalid reference, but
other failure modes are clearly possible.  Hold a reference to avoid
this.

	Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
	Cc: stable@vger.kernel.org #v4.10
	Cc: Jike Song <jike.song@intel.com>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Zhenyu Wang <zhenyuw@linux.intel.com>
	Cc: Zhi Wang <zhi.a.wang@intel.com>
	Reviewed-by: Jike Song <jike.song@intel.com>
	Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
(cherry picked from commit 93a15b58cfb8a24e666ffca432f19fe65c1cd7d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gvt/kvmgt.c
* Unmerged path drivers/gpu/drm/i915/gvt/kvmgt.c
* Unmerged path drivers/gpu/drm/i915/gvt/kvmgt.c
