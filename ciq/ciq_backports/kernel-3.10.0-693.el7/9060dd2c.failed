ext4: fix mmp use after free during unmount

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eric Sandeen <sandeen@redhat.com>
commit 9060dd2c5036b12132f9b97e3486ca6422d5bdfc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9060dd2c.failed

In ext4_put_super, we call brelse on the buffer head containing
the ext4 superblock, but then try to use it when we stop the
mmp thread, because when the thread shuts down it does:

write_mmp_block
  ext4_mmp_csum_set
    ext4_has_metadata_csum
      WARN_ON_ONCE(ext4_has_feature_metadata_csum(sb)...)

which reaches into sb->s_fs_info->s_es->s_feature_ro_compat,
which lives in the superblock buffer s_sbh which we just released.

Fix this by moving the brelse down to a point where we are no
longer using it.

	Reported-by: Wang Shu <shuwang@redhat.com>
	Signed-off-by: Eric Sandeen <sandeen@redhat.com>
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
	Reviewed-by: Andreas Dilger <adilger@dilger.ca>
(cherry picked from commit 9060dd2c5036b12132f9b97e3486ca6422d5bdfc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/super.c
diff --cc fs/ext4/super.c
index 8a6f058f1768,a526956e49e7..000000000000
--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@@ -825,10 -862,9 +825,14 @@@ static void ext4_put_super(struct super
  	percpu_counter_destroy(&sbi->s_freeinodes_counter);
  	percpu_counter_destroy(&sbi->s_dirs_counter);
  	percpu_counter_destroy(&sbi->s_dirtyclusters_counter);
++<<<<<<< HEAD
 +	percpu_counter_destroy(&sbi->s_extent_cache_cnt);
 +	brelse(sbi->s_sbh);
++=======
+ 	percpu_free_rwsem(&sbi->s_journal_flag_rwsem);
++>>>>>>> 9060dd2c5036 (ext4: fix mmp use after free during unmount)
  #ifdef CONFIG_QUOTA
 -	for (i = 0; i < EXT4_MAXQUOTAS; i++)
 +	for (i = 0; i < MAXQUOTAS; i++)
  		kfree(sbi->s_qf_names[i]);
  #endif
  
@@@ -852,8 -888,13 +856,9 @@@
  		invalidate_bdev(sbi->journal_bdev);
  		ext4_blkdev_remove(sbi);
  	}
 -	if (sbi->s_mb_cache) {
 -		ext4_xattr_destroy_cache(sbi->s_mb_cache);
 -		sbi->s_mb_cache = NULL;
 -	}
  	if (sbi->s_mmp_tsk)
  		kthread_stop(sbi->s_mmp_tsk);
+ 	brelse(sbi->s_sbh);
  	sb->s_fs_info = NULL;
  	/*
  	 * Now that we are completely done shutting down the
* Unmerged path fs/ext4/super.c
