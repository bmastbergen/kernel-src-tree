tpm_crb: map locality registers

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
commit 13b1f4a571cc1ffe9c7d5bb894318cabdd81fcc2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/13b1f4a5.failed

In order to provide access to locality registers, this commits adds
mapping of the head of the CRB registers, which are located right
before the control area.

	Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
	Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
	Tested-by: Gang Wei <gang.wei@intel.com>
(cherry picked from commit 13b1f4a571cc1ffe9c7d5bb894318cabdd81fcc2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/tpm/tpm_crb.c
diff --cc drivers/char/tpm/tpm_crb.c
index 37551c8e3739,60c2b726e685..000000000000
--- a/drivers/char/tpm/tpm_crb.c
+++ b/drivers/char/tpm/tpm_crb.c
@@@ -137,11 -149,9 +149,16 @@@ static int __maybe_unused crb_cmd_ready
  	start = ktime_get();
  	stop = ktime_add(start, ms_to_ktime(TPM2_TIMEOUT_C));
  	do {
++<<<<<<< HEAD
 +		if (!(ioread32(&priv->cca->req) & CRB_CTRL_REQ_CMD_READY)) {
 +			dev_dbg(dev, "cmdReady in %lld usecs\n",
 +				ktime_to_us(ktime_sub(ktime_get(), start)));
++=======
+ 		req = ioread32(&priv->regs_t->ctrl_req);
+ 		if (!(req & CRB_CTRL_REQ_CMD_READY))
++>>>>>>> 13b1f4a571cc (tpm_crb: map locality registers)
  			return 0;
 +		}
  		usleep_range(50, 100);
  	} while (ktime_before(ktime_get(), stop));
  
* Unmerged path drivers/char/tpm/tpm_crb.c
