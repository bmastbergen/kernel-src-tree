powerpc/powernv : Drop reference added by kset_find_obj()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] powernv: Drop reference added by kset_find_obj() (Steve Best) [1394164]
Rebuild_FUZZ: 91.43%
commit-author Mukesh Ojha <mukesh02@linux.vnet.ibm.com>
commit a9cbf0b2195b695cbeeeecaa4e2770948c212e9a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a9cbf0b2.failed

In a situation, where Linux kernel gets notified about duplicate error log
from OPAL, it is been observed that kernel fails to remove sysfs entries
(/sys/firmware/opal/elog/0xXXXXXXXX) of such error logs. This is because,
we currently search the error log/dump kobject in the kset list via
'kset_find_obj()' routine. Which eventually increment the reference count
by one, once it founds the kobject.

So, unless we decrement the reference count by one after it found the kobject,
we would not be able to release the kobject properly later.

This patch adds the 'kobject_put()' which was missing earlier.

	Signed-off-by: Mukesh Ojha <mukesh02@linux.vnet.ibm.com>
	Cc: stable@vger.kernel.org
	Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
	Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
(cherry picked from commit a9cbf0b2195b695cbeeeecaa4e2770948c212e9a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/powernv/opal-elog.c
diff --cc arch/powerpc/platforms/powernv/opal-elog.c
index 55b7814bfd6d,f2344cbd2f46..000000000000
--- a/arch/powerpc/platforms/powernv/opal-elog.c
+++ b/arch/powerpc/platforms/powernv/opal-elog.c
@@@ -273,32 -270,21 +274,41 @@@ static void elog_work_fn(struct work_st
  	 * that gracefully and not create two conflicting
  	 * entries.
  	 */
++<<<<<<< HEAD
 +	if (kset_find_obj(elog_kset, name))
 +		return;
++=======
+ 	kobj = kset_find_obj(elog_kset, name);
+ 	if (kobj) {
+ 		/* Drop reference added by kset_find_obj() */
+ 		kobject_put(kobj);
+ 		return IRQ_HANDLED;
+ 	}
++>>>>>>> a9cbf0b2195b (powerpc/powernv : Drop reference added by kset_find_obj())
  
  	create_elog_obj(log_id, elog_size, elog_type);
 +}
 +
 +static DECLARE_WORK(elog_work, elog_work_fn);
  
 -	return IRQ_HANDLED;
 +static int elog_event(struct notifier_block *nb,
 +				unsigned long events, void *change)
 +{
 +	/* check for error log event */
 +	if (events & OPAL_EVENT_ERROR_LOG_AVAIL)
 +		schedule_work(&elog_work);
 +	return 0;
  }
  
 +static struct notifier_block elog_nb = {
 +	.notifier_call  = elog_event,
 +	.next           = NULL,
 +	.priority       = 0
 +};
 +
  int __init opal_elog_init(void)
  {
 -	int rc = 0, irq;
 +	int rc = 0;
  
  	/* ELOG not supported by firmware */
  	if (!opal_check_token(OPAL_ELOG_READ))
diff --git a/arch/powerpc/platforms/powernv/opal-dump.c b/arch/powerpc/platforms/powernv/opal-dump.c
index a42a7f642554..9e9d1466c4b6 100644
--- a/arch/powerpc/platforms/powernv/opal-dump.c
+++ b/arch/powerpc/platforms/powernv/opal-dump.c
@@ -374,6 +374,7 @@ static int process_dump(void)
 	uint32_t dump_id, dump_size, dump_type;
 	struct dump_obj *dump;
 	char name[22];
+	struct kobject *kobj;
 
 	rc = dump_read_info(&dump_id, &dump_size, &dump_type);
 	if (rc != OPAL_SUCCESS)
@@ -385,8 +386,12 @@ static int process_dump(void)
 	 * that gracefully and not create two conflicting
 	 * entries.
 	 */
-	if (kset_find_obj(dump_kset, name))
+	kobj = kset_find_obj(dump_kset, name);
+	if (kobj) {
+		/* Drop reference added by kset_find_obj() */
+		kobject_put(kobj);
 		return 0;
+	}
 
 	dump = create_dump_obj(dump_id, dump_size, dump_type);
 	if (!dump)
* Unmerged path arch/powerpc/platforms/powernv/opal-elog.c
