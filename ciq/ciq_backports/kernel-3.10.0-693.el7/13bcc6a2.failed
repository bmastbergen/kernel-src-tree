sysctl: Stop implicitly passing current into sysctl_table_root.lookup

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 13bcc6a2853435bb5dad368bcbaa9d2a5b9c0ac4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/13bcc6a2.failed

Passing nsproxy into sysctl_table_root.lookup was a premature
optimization in attempt to avoid depending on current.  The
directory /proc/self/sys has not appeared and if and when
it does this code will need to be reviewed closely and reworked
anyway.  So remove the premature optimization.

	Acked-by: Kees Cook <keescook@chromium.org>
	Acked-by: Serge Hallyn <serge@hallyn.com>
	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit 13bcc6a2853435bb5dad368bcbaa9d2a5b9c0ac4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/proc_sysctl.c
diff --cc fs/proc/proc_sysctl.c
index 890d5a094d69,a80acdfbe180..000000000000
--- a/fs/proc/proc_sysctl.c
+++ b/fs/proc/proc_sysctl.c
@@@ -621,7 -659,7 +621,11 @@@ static int proc_sys_link_fill_cache(str
  
  	if (S_ISLNK(table->mode)) {
  		/* It is not an error if we can not follow the link ignore it */
++<<<<<<< HEAD
 +		err = sysctl_follow_link(&head, &table, current->nsproxy);
++=======
+ 		int err = sysctl_follow_link(&head, &table);
++>>>>>>> 13bcc6a28534 (sysctl: Stop implicitly passing current into sysctl_table_root.lookup)
  		if (err)
  			goto out;
  	}
* Unmerged path fs/proc/proc_sysctl.c
diff --git a/include/linux/sysctl.h b/include/linux/sysctl.h
index 14a8ff2de11e..7ed9317883b9 100644
--- a/include/linux/sysctl.h
+++ b/include/linux/sysctl.h
@@ -156,8 +156,7 @@ struct ctl_table_set {
 
 struct ctl_table_root {
 	struct ctl_table_set default_set;
-	struct ctl_table_set *(*lookup)(struct ctl_table_root *root,
-					   struct nsproxy *namespaces);
+	struct ctl_table_set *(*lookup)(struct ctl_table_root *root);
 	int (*permissions)(struct ctl_table_header *head, struct ctl_table *table);
 };
 
diff --git a/net/sysctl_net.c b/net/sysctl_net.c
index e7000be321b0..b52ff226ac99 100644
--- a/net/sysctl_net.c
+++ b/net/sysctl_net.c
@@ -27,9 +27,9 @@
 #endif
 
 static struct ctl_table_set *
-net_ctl_header_lookup(struct ctl_table_root *root, struct nsproxy *namespaces)
+net_ctl_header_lookup(struct ctl_table_root *root)
 {
-	return &namespaces->net_ns->sysctls;
+	return &current->nsproxy->net_ns->sysctls;
 }
 
 static int is_seen(struct ctl_table_set *set)
