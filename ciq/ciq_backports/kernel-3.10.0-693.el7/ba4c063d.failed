drm/nouveau/fb/gm200: split ram implementation from gm107

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [drm] nouveau/fb/gm200: split ram implementation from gm107 (Ben Skeggs) [1371629]
Rebuild_FUZZ: 96.36%
commit-author Ben Skeggs <bskeggs@redhat.com>
commit ba4c063d47562d28aed3d440959fb6b13802e921
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ba4c063d.failed

	Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
(cherry picked from commit ba4c063d47562d28aed3d440959fb6b13802e921)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/nouveau/nvkm/subdev/fb/Kbuild
#	drivers/gpu/drm/nouveau/nvkm/subdev/fb/gm200.c
#	drivers/gpu/drm/nouveau/nvkm/subdev/fb/ram.h
diff --cc drivers/gpu/drm/nouveau/nvkm/subdev/fb/Kbuild
index ddb7c7610392,1c5e5ba487a8..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/subdev/fb/Kbuild
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/fb/Kbuild
@@@ -42,6 -46,8 +42,11 @@@ nvkm-y += nvkm/subdev/fb/ramgf100.
  nvkm-y += nvkm/subdev/fb/ramgf108.o
  nvkm-y += nvkm/subdev/fb/ramgk104.o
  nvkm-y += nvkm/subdev/fb/ramgm107.o
++<<<<<<< HEAD
++=======
+ nvkm-y += nvkm/subdev/fb/ramgm200.o
+ nvkm-y += nvkm/subdev/fb/ramgp100.o
++>>>>>>> ba4c063d4756 (drm/nouveau/fb/gm200: split ram implementation from gm107)
  nvkm-y += nvkm/subdev/fb/sddr2.o
  nvkm-y += nvkm/subdev/fb/sddr3.o
  nvkm-y += nvkm/subdev/fb/gddr3.o
diff --cc drivers/gpu/drm/nouveau/nvkm/subdev/fb/ram.h
index ee0cfe09def5,893fbb957181..000000000000
--- a/drivers/gpu/drm/nouveau/nvkm/subdev/fb/ram.h
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/fb/ram.h
@@@ -48,4 -60,6 +48,9 @@@ int gf100_ram_new(struct nvkm_fb *, str
  int gf108_ram_new(struct nvkm_fb *, struct nvkm_ram **);
  int gk104_ram_new(struct nvkm_fb *, struct nvkm_ram **);
  int gm107_ram_new(struct nvkm_fb *, struct nvkm_ram **);
++<<<<<<< HEAD
++=======
+ int gm200_ram_new(struct nvkm_fb *, struct nvkm_ram **);
+ int gp100_ram_new(struct nvkm_fb *, struct nvkm_ram **);
++>>>>>>> ba4c063d4756 (drm/nouveau/fb/gm200: split ram implementation from gm107)
  #endif
* Unmerged path drivers/gpu/drm/nouveau/nvkm/subdev/fb/gm200.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/subdev/fb/Kbuild
* Unmerged path drivers/gpu/drm/nouveau/nvkm/subdev/fb/gm200.c
* Unmerged path drivers/gpu/drm/nouveau/nvkm/subdev/fb/ram.h
diff --git a/drivers/gpu/drm/nouveau/nvkm/subdev/fb/ramgm200.c b/drivers/gpu/drm/nouveau/nvkm/subdev/fb/ramgm200.c
new file mode 100644
index 000000000000..04ae81f0db10
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/fb/ramgm200.c
@@ -0,0 +1,41 @@
+/*
+ * Copyright 2017 Red Hat Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: Ben Skeggs <bskeggs@redhat.com>
+ */
+#include "ram.h"
+
+static const struct nvkm_ram_func
+gm200_ram = {
+	.dtor = gk104_ram_dtor,
+	.init = gk104_ram_init,
+	.get = gf100_ram_get,
+	.put = gf100_ram_put,
+	.calc = gk104_ram_calc,
+	.prog = gk104_ram_prog,
+	.tidy = gk104_ram_tidy,
+};
+
+int
+gm200_ram_new(struct nvkm_fb *fb, struct nvkm_ram **pram)
+{
+	return gk104_ram_new_(&gm200_ram, fb, pram, 0x021c14);
+}
