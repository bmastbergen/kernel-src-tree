nvme: Correct NVMF enum values to match NVMe-oF rev 1.0

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [nvme] Correct NVMF enum values to match NVMe-oF rev 1.0 (David Milburn) [1455784]
Rebuild_FUZZ: 94.23%
commit-author Roland Dreier <roland@purestorage.com>
commit bf17aa36c0f199f5b254262e77eaefda7da0f50b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/bf17aa36.failed

The enum values for QPTYPE, PRTYPE and CMS are off by 1 from the
values defined in figure 42 of the NVM Express over Fabrics 1.0:

    http://www.nvmexpress.org/wp-content/uploads/NVMe_over_Fabrics_1_0_Gold_20160605-1.pdf

Fix our enums to match the final spec.

	Signed-off-by: Roland Dreier <roland@purestorage.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
(cherry picked from commit bf17aa36c0f199f5b254262e77eaefda7da0f50b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/nvme.h
diff --cc include/linux/nvme.h
index 054f510fd0d0,9061780b141f..000000000000
--- a/include/linux/nvme.h
+++ b/include/linux/nvme.h
@@@ -17,6 -17,77 +17,80 @@@
  
  #include <linux/types.h>
  
++<<<<<<< HEAD
++=======
+ /* NQN names in commands fields specified one size */
+ #define NVMF_NQN_FIELD_LEN	256
+ 
+ /* However the max length of a qualified name is another size */
+ #define NVMF_NQN_SIZE		223
+ 
+ #define NVMF_TRSVCID_SIZE	32
+ #define NVMF_TRADDR_SIZE	256
+ #define NVMF_TSAS_SIZE		256
+ 
+ #define NVME_DISC_SUBSYS_NAME	"nqn.2014-08.org.nvmexpress.discovery"
+ 
+ #define NVME_RDMA_IP_PORT	4420
+ 
+ enum nvme_subsys_type {
+ 	NVME_NQN_DISC	= 1,		/* Discovery type target subsystem */
+ 	NVME_NQN_NVME	= 2,		/* NVME type target subsystem */
+ };
+ 
+ /* Address Family codes for Discovery Log Page entry ADRFAM field */
+ enum {
+ 	NVMF_ADDR_FAMILY_PCI	= 0,	/* PCIe */
+ 	NVMF_ADDR_FAMILY_IP4	= 1,	/* IP4 */
+ 	NVMF_ADDR_FAMILY_IP6	= 2,	/* IP6 */
+ 	NVMF_ADDR_FAMILY_IB	= 3,	/* InfiniBand */
+ 	NVMF_ADDR_FAMILY_FC	= 4,	/* Fibre Channel */
+ };
+ 
+ /* Transport Type codes for Discovery Log Page entry TRTYPE field */
+ enum {
+ 	NVMF_TRTYPE_RDMA	= 1,	/* RDMA */
+ 	NVMF_TRTYPE_FC		= 2,	/* Fibre Channel */
+ 	NVMF_TRTYPE_LOOP	= 254,	/* Reserved for host usage */
+ 	NVMF_TRTYPE_MAX,
+ };
+ 
+ /* Transport Requirements codes for Discovery Log Page entry TREQ field */
+ enum {
+ 	NVMF_TREQ_NOT_SPECIFIED	= 0,	/* Not specified */
+ 	NVMF_TREQ_REQUIRED	= 1,	/* Required */
+ 	NVMF_TREQ_NOT_REQUIRED	= 2,	/* Not Required */
+ };
+ 
+ /* RDMA QP Service Type codes for Discovery Log Page entry TSAS
+  * RDMA_QPTYPE field
+  */
+ enum {
+ 	NVMF_RDMA_QPTYPE_CONNECTED	= 1, /* Reliable Connected */
+ 	NVMF_RDMA_QPTYPE_DATAGRAM	= 2, /* Reliable Datagram */
+ };
+ 
+ /* RDMA QP Service Type codes for Discovery Log Page entry TSAS
+  * RDMA_QPTYPE field
+  */
+ enum {
+ 	NVMF_RDMA_PRTYPE_NOT_SPECIFIED	= 1, /* No Provider Specified */
+ 	NVMF_RDMA_PRTYPE_IB		= 2, /* InfiniBand */
+ 	NVMF_RDMA_PRTYPE_ROCE		= 3, /* InfiniBand RoCE */
+ 	NVMF_RDMA_PRTYPE_ROCEV2		= 4, /* InfiniBand RoCEV2 */
+ 	NVMF_RDMA_PRTYPE_IWARP		= 5, /* IWARP */
+ };
+ 
+ /* RDMA Connection Management Service Type codes for Discovery Log Page
+  * entry TSAS RDMA_CMS field
+  */
+ enum {
+ 	NVMF_RDMA_CMS_RDMA_CM	= 1, /* Sockets based endpoint addressing */
+ };
+ 
+ #define NVMF_AQ_DEPTH		32
+ 
++>>>>>>> bf17aa36c0f1 (nvme: Correct NVMF enum values to match NVMe-oF rev 1.0)
  enum {
  	NVME_REG_CAP	= 0x0000,	/* Controller Capabilities */
  	NVME_REG_VS	= 0x0008,	/* Version */
* Unmerged path include/linux/nvme.h
