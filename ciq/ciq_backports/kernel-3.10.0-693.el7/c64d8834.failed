HID: wacom - remove report_id from wacom_get_report interface

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom - remove report_id from wacom_get_report interface (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 95.73%
commit-author Ping Cheng <pinglinux@gmail.com>
commit c64d883476812783e0400d37028756151d103e5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c64d8834.failed

It is assigned in buf[0] anyway.

	Signed-off-by: Ping Cheng <pingc@wacom.com>
	Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit c64d883476812783e0400d37028756151d103e5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_sys.c
diff --cc drivers/hid/wacom_sys.c
index 527bf559d1db,c6970e6283b4..000000000000
--- a/drivers/hid/wacom_sys.c
+++ b/drivers/hid/wacom_sys.c
@@@ -58,22 -20,20 +58,35 @@@ struct hid_descriptor 
  #define WAC_CMD_LED_CONTROL	0x20
  #define WAC_CMD_ICON_START	0x21
  #define WAC_CMD_ICON_XFER	0x23
 -#define WAC_CMD_ICON_BT_XFER	0x26
  #define WAC_CMD_RETRIES		10
  
++<<<<<<< HEAD
 +static int wacom_get_report(struct usb_interface *intf, u8 type, u8 id,
 +			    void *buf, size_t size, unsigned int retries)
++=======
+ #define DEV_ATTR_RW_PERM (S_IRUGO | S_IWUSR | S_IWGRP)
+ #define DEV_ATTR_WO_PERM (S_IWUSR | S_IWGRP)
+ 
+ static int wacom_get_report(struct hid_device *hdev, u8 type, u8 *buf,
+ 			    size_t size, unsigned int retries)
++>>>>>>> c64d88347681 (HID: wacom - remove report_id from wacom_get_report interface)
  {
 +	struct usb_device *dev = interface_to_usbdev(intf);
  	int retval;
  
  	do {
++<<<<<<< HEAD
 +		retval = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
 +				USB_REQ_GET_REPORT,
 +				USB_DIR_IN | USB_TYPE_CLASS |
 +				USB_RECIP_INTERFACE,
 +				(type << 8) + id,
 +				intf->altsetting[0].desc.bInterfaceNumber,
 +				buf, size, 100);
++=======
+ 		retval = hid_hw_raw_request(hdev, buf[0], buf, size, type,
+ 				HID_REQ_GET_REPORT);
++>>>>>>> c64d88347681 (HID: wacom - remove report_id from wacom_get_report interface)
  	} while ((retval == -ETIMEDOUT || retval == -EPIPE) && --retries);
  
  	return retval;
@@@ -544,11 -254,11 +557,16 @@@ static int wacom_set_device_mode(struc
  		rep_data[0] = report_id;
  		rep_data[1] = mode;
  
 -		error = wacom_set_report(hdev, HID_FEATURE_REPORT, rep_data,
 -					 length, 1);
 +		error = wacom_set_report(intf, WAC_HID_FEATURE_REPORT,
 +		                         report_id, rep_data, length, 1);
  		if (error >= 0)
++<<<<<<< HEAD
 +			error = wacom_get_report(intf, WAC_HID_FEATURE_REPORT,
 +			                         report_id, rep_data, length, 1);
++=======
+ 			error = wacom_get_report(hdev, HID_FEATURE_REPORT,
+ 			                         rep_data, length, 1);
++>>>>>>> c64d88347681 (HID: wacom - remove report_id from wacom_get_report interface)
  	} while ((error < 0 || rep_data[1] != mode) && limit++ < WAC_MSG_RETRIES);
  
  	kfree(rep_data);
* Unmerged path drivers/hid/wacom_sys.c
