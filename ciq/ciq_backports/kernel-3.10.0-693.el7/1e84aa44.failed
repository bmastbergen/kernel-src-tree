mfd: Use irq_desc_get_xxx() to avoid redundant lookup of irq_desc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [pinctrl] Use irq_desc_get_xxx() to avoid redundant lookup of irq_desc (Suravee Suthikulpanit) [1329005]
Rebuild_FUZZ: 96.00%
commit-author Jiang Liu <jiang.liu@linux.intel.com>
commit 1e84aa445893a608445af2fda5d8a03c0a86af84
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/1e84aa44.failed

Use irq_desc_get_xxx() to avoid redundant lookup of irq_desc while we
already have a pointer to corresponding irq_desc.

Do the same change to avoid the pattern "irq_get_chip_data(data->irq)".

	Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Lee Jones <lee.jones@linaro.org>
(cherry picked from commit 1e84aa445893a608445af2fda5d8a03c0a86af84)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/mfd/mt6397-core.c
#	drivers/mfd/twl6030-irq.c
diff --cc drivers/mfd/twl6030-irq.c
index 277a8dba42d5,53574508a613..000000000000
--- a/drivers/mfd/twl6030-irq.c
+++ b/drivers/mfd/twl6030-irq.c
@@@ -225,25 -229,14 +225,30 @@@ static irqreturn_t handle_twl6030_pih(i
  
  /*----------------------------------------------------------------------*/
  
 +static inline void activate_irq(int irq)
 +{
 +#ifdef CONFIG_ARM
 +	/* ARM requires an extra step to clear IRQ_NOREQUEST, which it
 +	 * sets on behalf of every irq_chip.  Also sets IRQ_NOPROBE.
 +	 */
 +	set_irq_flags(irq, IRQF_VALID);
 +#else
 +	/* same effect on other architectures */
 +	irq_set_noprobe(irq);
 +#endif
 +}
 +
  static int twl6030_irq_set_wake(struct irq_data *d, unsigned int on)
  {
++<<<<<<< HEAD
++=======
+ 	struct twl6030_irq *pdata = irq_data_get_irq_chip_data(d);
+ 
++>>>>>>> 1e84aa445893 (mfd: Use irq_desc_get_xxx() to avoid redundant lookup of irq_desc)
  	if (on)
 -		atomic_inc(&pdata->wakeirqs);
 +		atomic_inc(&twl6030_wakeirqs);
  	else
 -		atomic_dec(&pdata->wakeirqs);
 +		atomic_dec(&twl6030_wakeirqs);
  
  	return 0;
  }
* Unmerged path drivers/mfd/mt6397-core.c
diff --git a/drivers/mfd/ezx-pcap.c b/drivers/mfd/ezx-pcap.c
index 5502106ad515..4e3f8a8a3982 100644
--- a/drivers/mfd/ezx-pcap.c
+++ b/drivers/mfd/ezx-pcap.c
@@ -207,7 +207,7 @@ static void pcap_isr_work(struct work_struct *work)
 
 static void pcap_irq_handler(unsigned int irq, struct irq_desc *desc)
 {
-	struct pcap_chip *pcap = irq_get_handler_data(irq);
+	struct pcap_chip *pcap = irq_desc_get_handler_data(desc);
 
 	desc->irq_data.chip->irq_ack(&desc->irq_data);
 	queue_work(pcap->workqueue, &pcap->isr_work);
diff --git a/drivers/mfd/max8997-irq.c b/drivers/mfd/max8997-irq.c
index 43fa61413e93..381738b477f8 100644
--- a/drivers/mfd/max8997-irq.c
+++ b/drivers/mfd/max8997-irq.c
@@ -113,14 +113,14 @@ static const struct max8997_irq_data max8997_irqs[] = {
 
 static void max8997_irq_lock(struct irq_data *data)
 {
-	struct max8997_dev *max8997 = irq_get_chip_data(data->irq);
+	struct max8997_dev *max8997 = irq_data_get_irq_chip_data(data);
 
 	mutex_lock(&max8997->irqlock);
 }
 
 static void max8997_irq_sync_unlock(struct irq_data *data)
 {
-	struct max8997_dev *max8997 = irq_get_chip_data(data->irq);
+	struct max8997_dev *max8997 = irq_data_get_irq_chip_data(data);
 	int i;
 
 	for (i = 0; i < MAX8997_IRQ_GROUP_NR; i++) {
@@ -148,7 +148,7 @@ irq_to_max8997_irq(struct max8997_dev *max8997, int irq)
 
 static void max8997_irq_mask(struct irq_data *data)
 {
-	struct max8997_dev *max8997 = irq_get_chip_data(data->irq);
+	struct max8997_dev *max8997 = irq_data_get_irq_chip_data(data);
 	const struct max8997_irq_data *irq_data = irq_to_max8997_irq(max8997,
 								data->irq);
 
@@ -157,7 +157,7 @@ static void max8997_irq_mask(struct irq_data *data)
 
 static void max8997_irq_unmask(struct irq_data *data)
 {
-	struct max8997_dev *max8997 = irq_get_chip_data(data->irq);
+	struct max8997_dev *max8997 = irq_data_get_irq_chip_data(data);
 	const struct max8997_irq_data *irq_data = irq_to_max8997_irq(max8997,
 								data->irq);
 
* Unmerged path drivers/mfd/mt6397-core.c
diff --git a/drivers/mfd/t7l66xb.c b/drivers/mfd/t7l66xb.c
index b32940ec9034..02a58bf7d33d 100644
--- a/drivers/mfd/t7l66xb.c
+++ b/drivers/mfd/t7l66xb.c
@@ -187,7 +187,7 @@ static struct mfd_cell t7l66xb_cells[] = {
 /* Handle the T7L66XB interrupt mux */
 static void t7l66xb_irq(unsigned int irq, struct irq_desc *desc)
 {
-	struct t7l66xb *t7l66xb = irq_get_handler_data(irq);
+	struct t7l66xb *t7l66xb = irq_desc_get_handler_data(desc);
 	unsigned int isr;
 	unsigned int i, irq_base;
 
diff --git a/drivers/mfd/tc6393xb.c b/drivers/mfd/tc6393xb.c
index 15e1463e5e13..76e88147ac14 100644
--- a/drivers/mfd/tc6393xb.c
+++ b/drivers/mfd/tc6393xb.c
@@ -514,7 +514,7 @@ static int tc6393xb_register_gpio(struct tc6393xb *tc6393xb, int gpio_base)
 static void
 tc6393xb_irq(unsigned int irq, struct irq_desc *desc)
 {
-	struct tc6393xb *tc6393xb = irq_get_handler_data(irq);
+	struct tc6393xb *tc6393xb = irq_desc_get_handler_data(desc);
 	unsigned int isr;
 	unsigned int i, irq_base;
 
* Unmerged path drivers/mfd/twl6030-irq.c
