bridge: netlink: export port's topology_change_ack and config_pending

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
commit e08e838ac5707cb1f1294e0d53b31997a0367b99
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e08e838a.failed

Add IFLA_BRPORT_TOPOLOGY_CHANGE_ACK and IFLA_BRPORT_CONFIG_PENDING to
allow getting port's topology_change_ack and config_pending respectively
via netlink.

	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e08e838ac5707cb1f1294e0d53b31997a0367b99)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if_link.h
#	net/bridge/br_netlink.c
diff --cc include/uapi/linux/if_link.h
index 1b43f8aab560,1d6aeb1bbe95..000000000000
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@@ -253,9 -289,17 +253,21 @@@ enum 
  	IFLA_BRPORT_FAST_LEAVE,	/* multicast fast leave    */
  	IFLA_BRPORT_LEARNING,	/* mac learning */
  	IFLA_BRPORT_UNICAST_FLOOD, /* flood unicast traffic */
 -	IFLA_BRPORT_PROXYARP,	/* proxy ARP */
 +	/* RHEL: IFLA_BRPORT_PROXYARP not fully supported yet */
 +	RESERVED_IFLA_BRPORT_PROXYARP,	/* proxy ARP */
  	IFLA_BRPORT_LEARNING_SYNC, /* mac learning sync from device */
++<<<<<<< HEAD
++=======
+ 	IFLA_BRPORT_PROXYARP_WIFI, /* proxy ARP for Wi-Fi */
+ 	IFLA_BRPORT_ROOT_ID,	/* designated root */
+ 	IFLA_BRPORT_BRIDGE_ID,	/* designated bridge */
+ 	IFLA_BRPORT_DESIGNATED_PORT,
+ 	IFLA_BRPORT_DESIGNATED_COST,
+ 	IFLA_BRPORT_ID,
+ 	IFLA_BRPORT_NO,
+ 	IFLA_BRPORT_TOPOLOGY_CHANGE_ACK,
+ 	IFLA_BRPORT_CONFIG_PENDING,
++>>>>>>> e08e838ac570 (bridge: netlink: export port's topology_change_ack and config_pending)
  	__IFLA_BRPORT_MAX
  };
  #define IFLA_BRPORT_MAX (__IFLA_BRPORT_MAX - 1)
diff --cc net/bridge/br_netlink.c
index 858d309f4e1a,433d632ad7d0..000000000000
--- a/net/bridge/br_netlink.c
+++ b/net/bridge/br_netlink.c
@@@ -32,6 -125,16 +32,19 @@@ static inline size_t br_port_info_size(
  		+ nla_total_size(1)	/* IFLA_BRPORT_FAST_LEAVE */
  		+ nla_total_size(1)	/* IFLA_BRPORT_LEARNING */
  		+ nla_total_size(1)	/* IFLA_BRPORT_UNICAST_FLOOD */
++<<<<<<< HEAD
++=======
+ 		+ nla_total_size(1)	/* IFLA_BRPORT_PROXYARP */
+ 		+ nla_total_size(1)	/* IFLA_BRPORT_PROXYARP_WIFI */
+ 		+ nla_total_size(sizeof(struct ifla_bridge_id))	/* IFLA_BRPORT_ROOT_ID */
+ 		+ nla_total_size(sizeof(struct ifla_bridge_id))	/* IFLA_BRPORT_BRIDGE_ID */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_DESIGNATED_PORT */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_DESIGNATED_COST */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_ID */
+ 		+ nla_total_size(sizeof(u16))	/* IFLA_BRPORT_NO */
+ 		+ nla_total_size(sizeof(u8))	/* IFLA_BRPORT_TOPOLOGY_CHANGE_ACK */
+ 		+ nla_total_size(sizeof(u8))	/* IFLA_BRPORT_CONFIG_PENDING */
++>>>>>>> e08e838ac570 (bridge: netlink: export port's topology_change_ack and config_pending)
  		+ 0;
  }
  
@@@ -60,7 -165,21 +73,25 @@@ static int br_port_fill_attrs(struct sk
  	    nla_put_u8(skb, IFLA_BRPORT_PROTECT, !!(p->flags & BR_ROOT_BLOCK)) ||
  	    nla_put_u8(skb, IFLA_BRPORT_FAST_LEAVE, !!(p->flags & BR_MULTICAST_FAST_LEAVE)) ||
  	    nla_put_u8(skb, IFLA_BRPORT_LEARNING, !!(p->flags & BR_LEARNING)) ||
++<<<<<<< HEAD
 +	    nla_put_u8(skb, IFLA_BRPORT_UNICAST_FLOOD, !!(p->flags & BR_FLOOD)))
++=======
+ 	    nla_put_u8(skb, IFLA_BRPORT_UNICAST_FLOOD, !!(p->flags & BR_FLOOD)) ||
+ 	    nla_put_u8(skb, IFLA_BRPORT_PROXYARP, !!(p->flags & BR_PROXYARP)) ||
+ 	    nla_put_u8(skb, IFLA_BRPORT_PROXYARP_WIFI,
+ 		       !!(p->flags & BR_PROXYARP_WIFI)) ||
+ 	    nla_put(skb, IFLA_BRPORT_ROOT_ID, sizeof(struct ifla_bridge_id),
+ 		    &p->designated_root) ||
+ 	    nla_put(skb, IFLA_BRPORT_BRIDGE_ID, sizeof(struct ifla_bridge_id),
+ 		    &p->designated_bridge) ||
+ 	    nla_put_u16(skb, IFLA_BRPORT_DESIGNATED_PORT, p->designated_port) ||
+ 	    nla_put_u16(skb, IFLA_BRPORT_DESIGNATED_COST, p->designated_cost) ||
+ 	    nla_put_u16(skb, IFLA_BRPORT_ID, p->port_id) ||
+ 	    nla_put_u16(skb, IFLA_BRPORT_NO, p->port_no) ||
+ 	    nla_put_u8(skb, IFLA_BRPORT_TOPOLOGY_CHANGE_ACK,
+ 		       p->topology_change_ack) ||
+ 	    nla_put_u8(skb, IFLA_BRPORT_CONFIG_PENDING, p->config_pending))
++>>>>>>> e08e838ac570 (bridge: netlink: export port's topology_change_ack and config_pending)
  		return -EMSGSIZE;
  
  	return 0;
* Unmerged path include/uapi/linux/if_link.h
* Unmerged path net/bridge/br_netlink.c
