qedr: Add support for QP verbs

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Ram Amrani <Ram.Amrani@cavium.com>
commit cecbcddf6461a11ce229e80bb3981415220c9763
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/cecbcddf.failed

Add support for Queue Pair verbs which adds, deletes,
modifies and queries Queue Pairs.

	Signed-off-by: Rajesh Borundia <rajesh.borundia@cavium.com>
	Signed-off-by: Ram Amrani <Ram.Amrani@cavium.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit cecbcddf6461a11ce229e80bb3981415220c9763)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
#	drivers/infiniband/hw/ipath/qedr_cm.h
#	drivers/infiniband/hw/qedr/main.c
#	drivers/infiniband/hw/qedr/qedr.h
#	drivers/infiniband/hw/qedr/qedr_hsi_rdma.h
#	drivers/infiniband/hw/qedr/verbs.c
#	drivers/infiniband/hw/qedr/verbs.h
diff --cc drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
index 1d7bd82a1fb1,75c270d839c8..000000000000
--- a/drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
+++ b/drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
@@@ -29,34 -29,78 +29,103 @@@
   * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   */
 -#ifndef __QEDR_USER_H__
 -#define __QEDR_USER_H__
  
 -#include <linux/types.h>
 -
 -#define QEDR_ABI_VERSION		(8)
 +/*
 + * This file is conditionally built on PowerPC only.  Otherwise weak symbol
 + * versions of the functions exported from here are used.
 + */
  
 -/* user kernel communication data structures. */
 +#include "ipath_kernel.h"
  
 +/**
 + * ipath_enable_wc - enable write combining for MMIO writes to the device
 + * @dd: infinipath device
 + *
 + * Nothing to do on PowerPC, so just return without error.
 + */
 +int ipath_enable_wc(struct ipath_devdata *dd)
 +{
 +	return 0;
 +}
 +
++<<<<<<< HEAD:drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
 +/**
 + * ipath_unordered_wc - indicate whether write combining is unordered
 + *
 + * Because our performance depends on our ability to do write
 + * combining mmio writes in the most efficient way, we need to
 + * know if we are on a processor that may reorder stores when
 + * write combining.
 + */
 +int ipath_unordered_wc(void)
 +{
 +	return 1;
 +}
++=======
+ struct qedr_alloc_ucontext_resp {
+ 	__u64 db_pa;
+ 	__u32 db_size;
+ 
+ 	__u32 max_send_wr;
+ 	__u32 max_recv_wr;
+ 	__u32 max_srq_wr;
+ 	__u32 sges_per_send_wr;
+ 	__u32 sges_per_recv_wr;
+ 	__u32 sges_per_srq_wr;
+ 	__u32 max_cqes;
+ };
+ 
+ struct qedr_alloc_pd_ureq {
+ 	__u64 rsvd1;
+ };
+ 
+ struct qedr_alloc_pd_uresp {
+ 	__u32 pd_id;
+ };
+ 
+ struct qedr_create_cq_ureq {
+ 	__u64 addr;
+ 	__u64 len;
+ };
+ 
+ struct qedr_create_cq_uresp {
+ 	__u32 db_offset;
+ 	__u16 icid;
+ };
+ 
+ struct qedr_create_qp_ureq {
+ 	__u32 qp_handle_hi;
+ 	__u32 qp_handle_lo;
+ 
+ 	/* SQ */
+ 	/* user space virtual address of SQ buffer */
+ 	__u64 sq_addr;
+ 
+ 	/* length of SQ buffer */
+ 	__u64 sq_len;
+ 
+ 	/* RQ */
+ 	/* user space virtual address of RQ buffer */
+ 	__u64 rq_addr;
+ 
+ 	/* length of RQ buffer */
+ 	__u64 rq_len;
+ };
+ 
+ struct qedr_create_qp_uresp {
+ 	__u32 qp_id;
+ 	__u32 atomic_supported;
+ 
+ 	/* SQ */
+ 	__u32 sq_db_offset;
+ 	__u16 sq_icid;
+ 
+ 	/* RQ */
+ 	__u32 rq_db_offset;
+ 	__u16 rq_icid;
+ 
+ 	__u32 rq_db2_offset;
+ };
+ 
+ #endif /* __QEDR_USER_H__ */
++>>>>>>> cecbcddf6461 (qedr: Add support for QP verbs):include/uapi/rdma/qedr-abi.h
* Unmerged path drivers/infiniband/hw/ipath/qedr_cm.h
* Unmerged path drivers/infiniband/hw/qedr/main.c
* Unmerged path drivers/infiniband/hw/qedr/qedr.h
* Unmerged path drivers/infiniband/hw/qedr/qedr_hsi_rdma.h
* Unmerged path drivers/infiniband/hw/qedr/verbs.c
* Unmerged path drivers/infiniband/hw/qedr/verbs.h
* Unmerged path drivers/infiniband/hw/ipath/ipath_wc_ppc64.c
* Unmerged path drivers/infiniband/hw/ipath/qedr_cm.h
* Unmerged path drivers/infiniband/hw/qedr/main.c
* Unmerged path drivers/infiniband/hw/qedr/qedr.h
* Unmerged path drivers/infiniband/hw/qedr/qedr_hsi_rdma.h
* Unmerged path drivers/infiniband/hw/qedr/verbs.c
* Unmerged path drivers/infiniband/hw/qedr/verbs.h
