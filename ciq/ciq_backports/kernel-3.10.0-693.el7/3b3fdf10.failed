locking/pvqspinlock: Order pv_unhash() after cmpxchg() on unlock slowpath

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Will Deacon <will.deacon@arm.com>
commit 3b3fdf10a8add87ef0050138d51bfee9ab4983df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3b3fdf10.failed

When we unlock in __pv_queued_spin_unlock(), a failed cmpxchg() on the lock
value indicates that we need to take the slow-path and unhash the
corresponding node blocked on the lock.

Since a failed cmpxchg() does not provide any memory-ordering guarantees,
it is possible that the node data could be read before the cmpxchg() on
weakly-ordered architectures and therefore return a stale value, leading
to hash corruption and/or a BUG().

This patch adds an smb_rmb() following the failed cmpxchg operation, so
that the unhashing is ordered after the lock has been checked.

	Reported-by: Peter Zijlstra <peterz@infradead.org>
	Signed-off-by: Will Deacon <will.deacon@arm.com>
[ Added more comments]
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by:  Waiman Long <Waiman.Long@hp.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
	Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
	Cc: Steve Capper <Steve.Capper@arm.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/20150713155830.GL2632@arm.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 3b3fdf10a8add87ef0050138d51bfee9ab4983df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/locking/qspinlock_paravirt.h
* Unmerged path kernel/locking/qspinlock_paravirt.h
* Unmerged path kernel/locking/qspinlock_paravirt.h
