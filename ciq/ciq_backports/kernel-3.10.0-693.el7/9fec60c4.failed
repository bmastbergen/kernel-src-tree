NTB: Fix NTB-RP Link Up

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [ntb] Fix NTB-RP Link Up (Suravee Suthikulpanit) [1303727]
Rebuild_FUZZ: 87.80%
commit-author Jon Mason <jon.mason@intel.com>
commit 9fec60c41416c9c40ec520bb79064345d2396632
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9fec60c4.failed

The Xeon NTB-RP setup, the transparent side does not get a link up/down
interrupt.  Since the presence of a NTB device on the transparent side
means that we have a NTB link up, we can work around the lack of an
interrupt by simply calling the link up function to notify the upper
layers.

	Signed-off-by: Jon Mason <jon.mason@intel.com>
(cherry picked from commit 9fec60c41416c9c40ec520bb79064345d2396632)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/ntb/ntb_hw.c
diff --cc drivers/ntb/ntb_hw.c
index 5f15f9fc44b5,a9b065f3973a..000000000000
--- a/drivers/ntb/ntb_hw.c
+++ b/drivers/ntb/ntb_hw.c
@@@ -1230,12 -1440,8 +1254,15 @@@ static void ntb_pci_remove(struct pci_d
  {
  	struct ntb_device *ndev = pci_get_drvdata(pdev);
  	int i;
- 	u32 ntb_cntl;
  
++<<<<<<< HEAD
 +	/* Bring NTB link down */
 +	ntb_cntl = readl(ndev->reg_ofs.lnk_cntl);
 +	ntb_cntl |= NTB_LINK_DISABLE;
 +	writel(ntb_cntl, ndev->reg_ofs.lnk_cntl);
++=======
+ 	ntb_hw_link_down(ndev);
++>>>>>>> 9fec60c41416 (NTB: Fix NTB-RP Link Up)
  
  	ntb_transport_free(ndev->ntb_transport);
  
* Unmerged path drivers/ntb/ntb_hw.c
