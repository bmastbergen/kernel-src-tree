x86/PCI: VMD: Fix infinite loop executing irq's

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] pci: vmd: Fix infinite loop executing irq's (Myron Stowe) [1388664]
Rebuild_FUZZ: 95.56%
commit-author Keith Busch <keith.busch@intel.com>
commit 21c80c9fefc3db10b530a96eb0478c29eb28bf77
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/21c80c9f.failed

We can't initialize the list head on deletion as this causes the node to
point to itself, which causes an infinite loop if vmd_irq() happens to be
servicing that node.

The list initialization was trying to fix a bug from multiple calls to
disable the same IRQ.  Fix this instead by having the VMD driver track if
the interrupt is enabled.

[bhelgaas: changelog, add "Fixes"]
Fixes: 97e923063575 ("x86/PCI: VMD: Initialize list item in IRQ disable")
	Reported-by: Grzegorz Koczot <grzegorz.koczot@intel.com>
	Tested-by: Miroslaw Drost <miroslaw.drost@intel.com>
	Signed-off-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by Jon Derrick: <jonathan.derrick@intel.com>
(cherry picked from commit 21c80c9fefc3db10b530a96eb0478c29eb28bf77)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/pci/vmd.c
diff --cc arch/x86/pci/vmd.c
index c06f45a0a147,7948be342ee9..000000000000
--- a/arch/x86/pci/vmd.c
+++ b/arch/x86/pci/vmd.c
@@@ -117,7 -140,10 +121,14 @@@ static void vmd_irq_disable(struct irq_
  	data->chip->irq_mask(data);
  
  	raw_spin_lock_irqsave(&list_lock, flags);
++<<<<<<< HEAD
 +	list_del_rcu(&vmdirq->node);
++=======
+ 	if (vmdirq->enabled) {
+ 		list_del_rcu(&vmdirq->node);
+ 		vmdirq->enabled = false;
+ 	}
++>>>>>>> 21c80c9fefc3 (x86/PCI: VMD: Fix infinite loop executing irq's)
  	raw_spin_unlock_irqrestore(&list_lock, flags);
  }
  
* Unmerged path arch/x86/pci/vmd.c
