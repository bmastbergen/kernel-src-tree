ASoC: Intel: Skylake: Fix memory leak in nhlt init

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: intel: skylake: Fix memory leak in nhlt init (Jaroslav Kysela) [1399503]
Rebuild_FUZZ: 94.34%
commit-author Jeeja KP <jeeja.kp@intel.com>
commit c286b3f9600b2ddc573208792d947e1a251c6b15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c286b3f9.failed

During skl_nhlt_init(), acpi obj pointer is allocated and never
freed and remap address is not unmapped.

To fix this we should release the ACPI obj and also unmap the
nhlt address during cleanup of driver.

	Signed-off-by: Jeeja KP <jeeja.kp@intel.com>
	Signed-off-by: Vinod Koul <vinod.koul@intel.com>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit c286b3f9600b2ddc573208792d947e1a251c6b15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/skylake/skl-nhlt.c
#	sound/soc/intel/skylake/skl.h
diff --cc sound/soc/intel/skylake/skl-nhlt.c
index 58e911517126,7d73648e5f9a..000000000000
--- a/sound/soc/intel/skylake/skl-nhlt.c
+++ b/sound/soc/intel/skylake/skl-nhlt.c
@@@ -25,7 -25,7 +25,11 @@@ static u8 OSC_UUID[16] = {0x6E, 0x88, 0
  
  #define DSDT_NHLT_PATH "\\_SB.PCI0.HDAS"
  
++<<<<<<< HEAD
 +void __iomem *skl_nhlt_init(struct device *dev)
++=======
+ struct nhlt_acpi_table *skl_nhlt_init(struct device *dev)
++>>>>>>> c286b3f9600b (ASoC: Intel: Skylake: Fix memory leak in nhlt init)
  {
  	acpi_handle handle;
  	union acpi_object *obj;
@@@ -39,18 -40,20 +44,32 @@@
  	obj = acpi_evaluate_dsm(handle, OSC_UUID, 1, 1, NULL);
  	if (obj && obj->type == ACPI_TYPE_BUFFER) {
  		nhlt_ptr = (struct nhlt_resource_desc  *)obj->buffer.pointer;
++<<<<<<< HEAD
 +
 +		return ioremap_cache(nhlt_ptr->min_addr, nhlt_ptr->length);
++=======
+ 		nhlt_table = (struct nhlt_acpi_table *)
+ 				memremap(nhlt_ptr->min_addr, nhlt_ptr->length,
+ 				MEMREMAP_WB);
+ 		ACPI_FREE(obj);
+ 		return nhlt_table;
++>>>>>>> c286b3f9600b (ASoC: Intel: Skylake: Fix memory leak in nhlt init)
  	}
  
  	dev_err(dev, "device specific method to extract NHLT blob failed\n");
  	return NULL;
  }
  
++<<<<<<< HEAD
 +void skl_nhlt_free(void __iomem *addr)
 +{
 +	iounmap(addr);
 +	addr = NULL;
++=======
+ void skl_nhlt_free(struct nhlt_acpi_table *nhlt)
+ {
+ 	memunmap((void *) nhlt);
++>>>>>>> c286b3f9600b (ASoC: Intel: Skylake: Fix memory leak in nhlt init)
  }
  
  static struct nhlt_specific_cfg *skl_get_specific_cfg(
diff --cc sound/soc/intel/skylake/skl.h
index a6b4273cb16c,4b4b3876aea9..000000000000
--- a/sound/soc/intel/skylake/skl.h
+++ b/sound/soc/intel/skylake/skl.h
@@@ -66,7 -66,7 +66,11 @@@ struct skl 
  	struct platform_device *dmic_dev;
  	struct platform_device *i2s_dev;
  
++<<<<<<< HEAD
 +	void __iomem *nhlt; /* nhlt ptr */
++=======
+ 	struct nhlt_acpi_table *nhlt; /* nhlt ptr */
++>>>>>>> c286b3f9600b (ASoC: Intel: Skylake: Fix memory leak in nhlt init)
  	struct skl_sst *skl_sst; /* sst skl ctx */
  
  	struct skl_dsp_resource resource;
@@@ -103,8 -103,8 +107,13 @@@ struct skl_dsp_ops 
  int skl_platform_unregister(struct device *dev);
  int skl_platform_register(struct device *dev);
  
++<<<<<<< HEAD
 +void __iomem *skl_nhlt_init(struct device *dev);
 +void skl_nhlt_free(void __iomem *addr);
++=======
+ struct nhlt_acpi_table *skl_nhlt_init(struct device *dev);
+ void skl_nhlt_free(struct nhlt_acpi_table *addr);
++>>>>>>> c286b3f9600b (ASoC: Intel: Skylake: Fix memory leak in nhlt init)
  struct nhlt_specific_cfg *skl_get_ep_blob(struct skl *skl, u32 instance,
  			u8 link_type, u8 s_fmt, u8 no_ch, u32 s_rate, u8 dirn);
  
* Unmerged path sound/soc/intel/skylake/skl-nhlt.c
diff --git a/sound/soc/intel/skylake/skl.c b/sound/soc/intel/skylake/skl.c
index 3982f5536f2d..83e985c0c0c9 100644
--- a/sound/soc/intel/skylake/skl.c
+++ b/sound/soc/intel/skylake/skl.c
@@ -643,7 +643,7 @@ static int skl_probe(struct pci_dev *pci,
 		err = skl_machine_device_register(skl,
 				  (void *)pci_id->driver_data);
 		if (err < 0)
-			goto out_free;
+			goto out_nhlt_free;
 
 		err = skl_init_dsp(skl);
 		if (err < 0) {
@@ -693,6 +693,8 @@ out_dsp_free:
 	skl_free_dsp(skl);
 out_mach_free:
 	skl_machine_device_unregister(skl);
+out_nhlt_free:
+	skl_nhlt_free(skl->nhlt);
 out_free:
 	skl->init_failed = 1;
 	skl_free(ebus);
@@ -743,6 +745,7 @@ static void skl_remove(struct pci_dev *pci)
 	skl_free_dsp(skl);
 	skl_machine_device_unregister(skl);
 	skl_dmic_device_unregister(skl);
+	skl_nhlt_free(skl->nhlt);
 	skl_free(ebus);
 	dev_set_drvdata(&pci->dev, NULL);
 }
* Unmerged path sound/soc/intel/skylake/skl.h
