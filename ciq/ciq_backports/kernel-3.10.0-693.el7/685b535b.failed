tools/power turbostat: bugfix: TDP MSRs print bits fixing

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [tools] power turbostat: bugfix: TDP MSRs print bits fixing (Prarit Bhargava) [1422076]
Rebuild_FUZZ: 94.44%
commit-author Chen Yu <yu.c.chen@intel.com>
commit 685b535b2cdb9cdf354321f8af9ed17dcf19d19f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/685b535b.failed

MSR_CONFIG_TDP_NOMINAL:
should print all 8 bits of base_ratio (bit 0:7) 0xFF

MSR_CONFIG_TDP_LEVEL_1:
should print all 15 bits of PKG_MIN_PWR_LVL1 (bit 48:62) 0x7FFF
should print all 15 bits of PKG_MAX_PWR_LVL1 (bit 32:46) 0x7FFF
should print all 8 bits of LVL1_RATIO (bit 16:23) 0xFF
should print all 15 bits of PKG_TDP_LVL1 (bit 0:14) 0x7FFF

And the same modification to MSR_CONFIG_TDP_LEVEL_2.

MSR_TURBO_ACTIVATION_RATIO:
should print all 8 bits of MAX_NON_TURBO_RATIO (bit 0:7) 0xFF

	Signed-off-by: Chen Yu <yu.c.chen@intel.com>
	Signed-off-by: Len Brown <len.brown@intel.com>
(cherry picked from commit 685b535b2cdb9cdf354321f8af9ed17dcf19d19f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/x86/turbostat/turbostat.c
diff --cc tools/power/x86/turbostat/turbostat.c
index 12f3b97f602a,ee1551b6fa01..000000000000
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@@ -1404,41 -1543,52 +1404,78 @@@ dump_config_tdp(void
  	unsigned long long msr;
  
  	get_msr(base_cpu, MSR_CONFIG_TDP_NOMINAL, &msr);
++<<<<<<< HEAD
 +	fprintf(stderr, "cpu%d: MSR_CONFIG_TDP_NOMINAL: 0x%08llx", base_cpu, msr);
 +	fprintf(stderr, " (base_ratio=%d)\n", (unsigned int)msr & 0xEF);
++=======
+ 	fprintf(outf, "cpu%d: MSR_CONFIG_TDP_NOMINAL: 0x%08llx", base_cpu, msr);
+ 	fprintf(outf, " (base_ratio=%d)\n", (unsigned int)msr & 0xFF);
++>>>>>>> 685b535b2cdb (tools/power turbostat: bugfix: TDP MSRs print bits fixing)
  
  	get_msr(base_cpu, MSR_CONFIG_TDP_LEVEL_1, &msr);
 -	fprintf(outf, "cpu%d: MSR_CONFIG_TDP_LEVEL_1: 0x%08llx (", base_cpu, msr);
 +	fprintf(stderr, "cpu%d: MSR_CONFIG_TDP_LEVEL_1: 0x%08llx (", base_cpu, msr);
  	if (msr) {
++<<<<<<< HEAD
 +		fprintf(stderr, "PKG_MIN_PWR_LVL1=%d ", (unsigned int)(msr >> 48) & 0xEFFF);
 +		fprintf(stderr, "PKG_MAX_PWR_LVL1=%d ", (unsigned int)(msr >> 32) & 0xEFFF);
 +		fprintf(stderr, "LVL1_RATIO=%d ", (unsigned int)(msr >> 16) & 0xEF);
 +		fprintf(stderr, "PKG_TDP_LVL1=%d", (unsigned int)(msr) & 0xEFFF);
++=======
+ 		fprintf(outf, "PKG_MIN_PWR_LVL1=%d ", (unsigned int)(msr >> 48) & 0x7FFF);
+ 		fprintf(outf, "PKG_MAX_PWR_LVL1=%d ", (unsigned int)(msr >> 32) & 0x7FFF);
+ 		fprintf(outf, "LVL1_RATIO=%d ", (unsigned int)(msr >> 16) & 0xFF);
+ 		fprintf(outf, "PKG_TDP_LVL1=%d", (unsigned int)(msr) & 0x7FFF);
++>>>>>>> 685b535b2cdb (tools/power turbostat: bugfix: TDP MSRs print bits fixing)
  	}
 -	fprintf(outf, ")\n");
 +	fprintf(stderr, ")\n");
  
  	get_msr(base_cpu, MSR_CONFIG_TDP_LEVEL_2, &msr);
 -	fprintf(outf, "cpu%d: MSR_CONFIG_TDP_LEVEL_2: 0x%08llx (", base_cpu, msr);
 +	fprintf(stderr, "cpu%d: MSR_CONFIG_TDP_LEVEL_2: 0x%08llx (", base_cpu, msr);
  	if (msr) {
++<<<<<<< HEAD
 +		fprintf(stderr, "PKG_MIN_PWR_LVL2=%d ", (unsigned int)(msr >> 48) & 0xEFFF);
 +		fprintf(stderr, "PKG_MAX_PWR_LVL2=%d ", (unsigned int)(msr >> 32) & 0xEFFF);
 +		fprintf(stderr, "LVL2_RATIO=%d ", (unsigned int)(msr >> 16) & 0xEF);
 +		fprintf(stderr, "PKG_TDP_LVL2=%d", (unsigned int)(msr) & 0xEFFF);
++=======
+ 		fprintf(outf, "PKG_MIN_PWR_LVL2=%d ", (unsigned int)(msr >> 48) & 0x7FFF);
+ 		fprintf(outf, "PKG_MAX_PWR_LVL2=%d ", (unsigned int)(msr >> 32) & 0x7FFF);
+ 		fprintf(outf, "LVL2_RATIO=%d ", (unsigned int)(msr >> 16) & 0xFF);
+ 		fprintf(outf, "PKG_TDP_LVL2=%d", (unsigned int)(msr) & 0x7FFF);
++>>>>>>> 685b535b2cdb (tools/power turbostat: bugfix: TDP MSRs print bits fixing)
  	}
 -	fprintf(outf, ")\n");
 +	fprintf(stderr, ")\n");
  
  	get_msr(base_cpu, MSR_CONFIG_TDP_CONTROL, &msr);
 -	fprintf(outf, "cpu%d: MSR_CONFIG_TDP_CONTROL: 0x%08llx (", base_cpu, msr);
 +	fprintf(stderr, "cpu%d: MSR_CONFIG_TDP_CONTROL: 0x%08llx (", base_cpu, msr);
  	if ((msr) & 0x3)
 -		fprintf(outf, "TDP_LEVEL=%d ", (unsigned int)(msr) & 0x3);
 -	fprintf(outf, " lock=%d", (unsigned int)(msr >> 31) & 1);
 -	fprintf(outf, ")\n");
 -
 +		fprintf(stderr, "TDP_LEVEL=%d ", (unsigned int)(msr) & 0x3);
 +	fprintf(stderr, " lock=%d", (unsigned int)(msr >> 31) & 1);
 +	fprintf(stderr, ")\n");
 +	
  	get_msr(base_cpu, MSR_TURBO_ACTIVATION_RATIO, &msr);
++<<<<<<< HEAD
 +	fprintf(stderr, "cpu%d: MSR_TURBO_ACTIVATION_RATIO: 0x%08llx (", base_cpu, msr);
 +	fprintf(stderr, "MAX_NON_TURBO_RATIO=%d", (unsigned int)(msr) & 0x7F);
 +	fprintf(stderr, " lock=%d", (unsigned int)(msr >> 31) & 1);
 +	fprintf(stderr, ")\n");
++=======
+ 	fprintf(outf, "cpu%d: MSR_TURBO_ACTIVATION_RATIO: 0x%08llx (", base_cpu, msr);
+ 	fprintf(outf, "MAX_NON_TURBO_RATIO=%d", (unsigned int)(msr) & 0xFF);
+ 	fprintf(outf, " lock=%d", (unsigned int)(msr >> 31) & 1);
+ 	fprintf(outf, ")\n");
+ }
+ void free_fd_percpu(void)
+ {
+ 	int i;
+ 
+ 	for (i = 0; i < topo.max_cpu_num; ++i) {
+ 		if (fd_percpu[i] != 0)
+ 			close(fd_percpu[i]);
+ 	}
+ 
+ 	free(fd_percpu);
++>>>>>>> 685b535b2cdb (tools/power turbostat: bugfix: TDP MSRs print bits fixing)
  }
  
  void free_all_buffers(void)
* Unmerged path tools/power/x86/turbostat/turbostat.c
