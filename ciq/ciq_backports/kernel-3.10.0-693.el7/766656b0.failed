xprtrdma: Move fr_xprt and fr_worker to struct rpcrdma_mw

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 766656b022a629201b6e183c7837160cd0919286
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/766656b0.failed

In a subsequent patch, the fr_xprt and fr_worker fields will be
needed by another memory registration mode. Move them into the
generic rpcrdma_mw structure that wraps struct rpcrdma_frmr.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Tested-by: Steve Wise <swise@opengridcomputing.com>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 766656b022a629201b6e183c7837160cd0919286)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/frwr_ops.c
diff --cc net/sunrpc/xprtrdma/frwr_ops.c
index ee5e390519e0,1251a1d4d92f..000000000000
--- a/net/sunrpc/xprtrdma/frwr_ops.c
+++ b/net/sunrpc/xprtrdma/frwr_ops.c
@@@ -109,26 -150,10 +109,32 @@@ static voi
  __frwr_recovery_worker(struct work_struct *work)
  {
  	struct rpcrdma_mw *r = container_of(work, struct rpcrdma_mw,
++<<<<<<< HEAD
 +					    frmr.fr_work);
 +	struct rpcrdma_xprt *r_xprt = r->frmr.fr_xprt;
 +	unsigned int depth = r_xprt->rx_ia.ri_max_frmr_depth;
 +	struct ib_pd *pd = r_xprt->rx_ia.ri_pd;
 +
 +	if (ib_dereg_mr(r->frmr.fr_mr))
 +		goto out_fail;
 +
 +	r->frmr.fr_mr = ib_alloc_mr(pd, IB_MR_TYPE_MEM_REG, depth);
 +	if (IS_ERR(r->frmr.fr_mr))
 +		goto out_fail;
 +
 +	dprintk("RPC:       %s: recovered FRMR %p\n", __func__, r);
 +	r->frmr.fr_state = FRMR_IS_INVALID;
 +	rpcrdma_put_mw(r_xprt, r);
++=======
+ 					    mw_work);
+ 
+ 	__frwr_reset_and_unmap(r->mw_xprt, r);
++>>>>>>> 766656b022a6 (xprtrdma: Move fr_xprt and fr_worker to struct rpcrdma_mw)
  	return;
 +
 +out_fail:
 +	pr_warn("RPC:       %s: FRMR %p unrecovered\n",
 +		__func__, r);
  }
  
  /* A broken MR was discovered in a context that can't sleep.
* Unmerged path net/sunrpc/xprtrdma/frwr_ops.c
diff --git a/net/sunrpc/xprtrdma/xprt_rdma.h b/net/sunrpc/xprtrdma/xprt_rdma.h
index 61999b694a15..8f1fdd949c0a 100644
--- a/net/sunrpc/xprtrdma/xprt_rdma.h
+++ b/net/sunrpc/xprtrdma/xprt_rdma.h
@@ -228,8 +228,6 @@ struct rpcrdma_frmr {
 	struct ib_cqe			fr_cqe;
 	enum rpcrdma_frmr_state		fr_state;
 	struct completion		fr_linv_done;
-	struct work_struct		fr_work;
-	struct rpcrdma_xprt		*fr_xprt;
 	union {
 		struct ib_reg_wr	fr_regwr;
 		struct ib_send_wr	fr_invwr;
@@ -246,6 +244,8 @@ struct rpcrdma_mw {
 		struct rpcrdma_fmr	fmr;
 		struct rpcrdma_frmr	frmr;
 	};
+	struct work_struct	mw_work;
+	struct rpcrdma_xprt	*mw_xprt;
 	struct list_head	mw_list;
 	struct list_head	mw_all;
 };
