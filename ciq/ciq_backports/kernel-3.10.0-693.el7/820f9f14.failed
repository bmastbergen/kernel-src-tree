fs_pin: Allow for the possibility that m_list or s_list go unused.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [fs] fs_pin: Allow for the possibility that m_list or s_list go unused ("Eric W. Biederman") [1247935]
Rebuild_FUZZ: 99.24%
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 820f9f147dcce2602eefd9b575bbbd9ea14f0953
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/820f9f14.failed

This is needed to support lazily umounting locked mounts.  Because the
entire unmounted subtree needs to stay together until there are no
users with references to any part of the subtree.

To support this guarantee that the fs_pin m_list and s_list nodes
are initialized by initializing them in init_fs_pin allowing
for the possibility that pin_insert_group does not touch them.

Further use hlist_del_init in pin_remove so that there is
a hlist_unhashed test before the list we attempt to update
the previous list item.

	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
(cherry picked from commit 820f9f147dcce2602eefd9b575bbbd9ea14f0953)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fs_pin.c
#	include/linux/fs_pin.h
* Unmerged path fs/fs_pin.c
* Unmerged path include/linux/fs_pin.h
* Unmerged path fs/fs_pin.c
* Unmerged path include/linux/fs_pin.h
