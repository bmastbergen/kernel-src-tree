mei: drop redundant krealloc and checks in irq read

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Alexander Usyskin <alexander.usyskin@intel.com>
commit dfe5f753d06a4eaf362872a7f30aabe5f5fc968c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/dfe5f753.failed

The read callback is always prepared with MTU-sized buffer and the FW
can't send more than the MTU in one message.
Checking for buffer existence and krealloc to increase receive buffer
size are redundant and may be safely discarded.

	Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
	Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit dfe5f753d06a4eaf362872a7f30aabe5f5fc968c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/misc/mei/interrupt.c
diff --cc drivers/misc/mei/interrupt.c
index 298ef580e3c9,36382d782e20..000000000000
--- a/drivers/misc/mei/interrupt.c
+++ b/drivers/misc/mei/interrupt.c
@@@ -107,8 -106,14 +106,19 @@@ int mei_cl_irq_read_msg(struct mei_cl *
  
  	cb = list_first_entry_or_null(&cl->rd_pending, struct mei_cl_cb, list);
  	if (!cb) {
++<<<<<<< HEAD
 +		cl_err(dev, cl, "pending read cb not found\n");
 +		goto out;
++=======
+ 		if (!mei_cl_is_fixed_address(cl)) {
+ 			cl_err(dev, cl, "pending read cb not found\n");
+ 			goto discard;
+ 		}
+ 		cb = mei_cl_alloc_cb(cl, mei_cl_mtu(cl), MEI_FOP_READ, cl->fp);
+ 		if (!cb)
+ 			goto discard;
+ 		list_add_tail(&cb->list, &cl->rd_pending);
++>>>>>>> dfe5f753d06a (mei: drop redundant krealloc and checks in irq read)
  	}
  
  	if (!mei_cl_is_connected(cl)) {
* Unmerged path drivers/misc/mei/interrupt.c
