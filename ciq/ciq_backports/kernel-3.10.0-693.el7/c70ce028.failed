net/rtnetlink: add IFLA_GSO_MAX_SEGS and IFLA_GSO_MAX_SIZE attributes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] rtnetlink: add IFLA_GSO_MAX_SEGS and IFLA_GSO_MAX_SIZE attributes (Eric Garver) [1326353]
Rebuild_FUZZ: 97.01%
commit-author Eric Dumazet <edumazet@google.com>
commit c70ce028e834f8e51306217dbdbd441d851c64d3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c70ce028.failed

It can be useful to report dev->gso_max_segs and dev->gso_max_size
so that "ip -d link" can display them to help debugging.

For the moment, these attributes are read-only.

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Cc: Petri Gynther <pgynther@google.com>
	Cc: Stephen Hemminger <stephen@networkplumber.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c70ce028e834f8e51306217dbdbd441d851c64d3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/if_link.h
diff --cc include/uapi/linux/if_link.h
index 1b43f8aab560,76d315ca597d..000000000000
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@@ -153,8 -149,12 +153,15 @@@ enum 
  	IFLA_CARRIER,
  	IFLA_PHYS_PORT_ID,
  	IFLA_CARRIER_CHANGES,
 -	IFLA_PHYS_SWITCH_ID,
 +	__RH_RESERVED_IFLA_PHYS_SWITCH_ID,
  	IFLA_LINK_NETNSID,
++<<<<<<< HEAD
++=======
+ 	IFLA_PHYS_PORT_NAME,
+ 	IFLA_PROTO_DOWN,
+ 	IFLA_GSO_MAX_SEGS,
+ 	IFLA_GSO_MAX_SIZE,
++>>>>>>> c70ce028e834 (net/rtnetlink: add IFLA_GSO_MAX_SEGS and IFLA_GSO_MAX_SIZE attributes)
  	__IFLA_MAX
  };
  
* Unmerged path include/uapi/linux/if_link.h
diff --git a/net/core/rtnetlink.c b/net/core/rtnetlink.c
index 8209decfe5a9..96123ccdf11f 100644
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@ -915,6 +915,8 @@ static noinline size_t if_nlmsg_size(const struct net_device *dev,
 	       + nla_total_size(4) /* IFLA_PROMISCUITY */
 	       + nla_total_size(4) /* IFLA_NUM_TX_QUEUES */
 	       + nla_total_size(4) /* IFLA_NUM_RX_QUEUES */
+	       + nla_total_size(4) /* IFLA_MAX_GSO_SEGS */
+	       + nla_total_size(4) /* IFLA_MAX_GSO_SIZE */
 	       + nla_total_size(1) /* IFLA_OPERSTATE */
 	       + nla_total_size(1) /* IFLA_LINKMODE */
 	       + nla_total_size(4) /* IFLA_CARRIER_CHANGES */
@@ -1058,6 +1060,8 @@ static int rtnl_fill_ifinfo(struct sk_buff *skb, struct net_device *dev,
 	    nla_put_u32(skb, IFLA_GROUP, dev->group) ||
 	    nla_put_u32(skb, IFLA_PROMISCUITY, dev->promiscuity) ||
 	    nla_put_u32(skb, IFLA_NUM_TX_QUEUES, dev->num_tx_queues) ||
+	    nla_put_u32(skb, IFLA_GSO_MAX_SEGS, dev->gso_max_segs) ||
+	    nla_put_u32(skb, IFLA_GSO_MAX_SIZE, dev->gso_max_size) ||
 #ifdef CONFIG_RPS
 	    nla_put_u32(skb, IFLA_NUM_RX_QUEUES, dev->num_rx_queues) ||
 #endif
