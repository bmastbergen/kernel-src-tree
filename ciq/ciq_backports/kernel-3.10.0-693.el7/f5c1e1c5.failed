ACPICA: Divergence: remove unwanted spaces for typedef

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lv Zheng <lv.zheng@intel.com>
commit f5c1e1c5a652e4b43eb9b571577ef72731f3fa8b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f5c1e1c5.failed

ACPICA commit b2294cae776f5a66a7697414b21949d307e6856f

This patch removes unwanted spaces for typedef. This solution doesn't cover
function types.

Note that the linuxize result of this commit is very giant and should have
many conflicts against the current Linux upstream. Thus it is required to
modify the linuxize result of this commit and the commits around it
manually in order to have them merged to the Linux upstream. Since this is
very costy, we should do this only once, and if we can't ensure to do this
only once, we need to revert the Linux code to the wrong indentation result
before merging the linuxize result of this commit. Lv Zheng.

Link: https://github.com/acpica/acpica/commit/b2294cae
	Signed-off-by: Lv Zheng <lv.zheng@intel.com>
	Signed-off-by: Bob Moore <robert.moore@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit f5c1e1c5a652e4b43eb9b571577ef72731f3fa8b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpica/acevents.h
#	drivers/acpi/acpica/aclocal.h
#	drivers/acpi/acpica/acresrc.h
#	drivers/acpi/acpica/dbcmds.c
#	drivers/acpi/acpica/dbconvert.c
#	drivers/acpi/acpica/dbexec.c
#	drivers/acpi/acpica/dbinput.c
#	drivers/acpi/acpica/dbnames.c
#	drivers/acpi/acpica/dbxface.c
#	drivers/acpi/acpica/dsutils.c
#	drivers/acpi/acpica/evgpe.c
#	drivers/acpi/acpica/evgpeutil.c
#	drivers/acpi/acpica/exconcat.c
#	drivers/acpi/acpica/exfield.c
#	drivers/acpi/acpica/exoparg3.c
#	drivers/acpi/acpica/exstorob.c
#	drivers/acpi/acpica/hwgpe.c
#	drivers/acpi/acpica/hwxface.c
#	drivers/acpi/acpica/nsconvert.c
#	drivers/acpi/acpica/nsnames.c
#	drivers/acpi/acpica/rscalc.c
#	drivers/acpi/acpica/rscreate.c
#	drivers/acpi/acpica/tbdata.c
#	drivers/acpi/acpica/tbfadt.c
#	drivers/acpi/acpica/tbutils.c
#	drivers/acpi/acpica/tbxface.c
#	drivers/acpi/acpica/tbxfroot.c
#	drivers/acpi/acpica/utbuffer.c
#	drivers/acpi/acpica/utcopy.c
#	drivers/acpi/acpica/utids.c
#	drivers/acpi/acpica/utobject.c
#	drivers/acpi/acpica/utprint.c
#	include/acpi/acpiosxf.h
#	include/acpi/acpixf.h
#	tools/power/acpi/os_specific/service_layers/oslinuxtbl.c
#	tools/power/acpi/os_specific/service_layers/osunixxf.c
#	tools/power/acpi/tools/acpidump/apdump.c
diff --cc drivers/acpi/acpica/acevents.h
index ab0e97710381,77af91cf46d4..000000000000
--- a/drivers/acpi/acpica/acevents.h
+++ b/drivers/acpi/acpica/acevents.h
@@@ -71,8 -71,9 +71,14 @@@ acpi_status acpi_ev_init_global_lock_ha
  
  ACPI_HW_DEPENDENT_RETURN_OK(acpi_status
  			    acpi_ev_acquire_global_lock(u16 timeout))
++<<<<<<< HEAD
 + ACPI_HW_DEPENDENT_RETURN_OK(acpi_status acpi_ev_release_global_lock(void))
 + acpi_status acpi_ev_remove_global_lock_handler(void);
++=======
+ ACPI_HW_DEPENDENT_RETURN_OK(acpi_status acpi_ev_release_global_lock(void))
+ 
+ acpi_status acpi_ev_remove_global_lock_handler(void);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  /*
   * evgpe - Low-level GPE support
diff --cc drivers/acpi/acpica/aclocal.h
index f507c39c719c,166a67fb271d..000000000000
--- a/drivers/acpi/acpica/aclocal.h
+++ b/drivers/acpi/acpica/aclocal.h
@@@ -364,10 -395,12 +364,19 @@@ union acpi_predefined_info 
  
  /* Return object auto-repair info */
  
++<<<<<<< HEAD
 +typedef acpi_status(*acpi_object_converter) (union acpi_operand_object
 +					     *original_object,
 +					     union acpi_operand_object
 +					     **converted_object);
++=======
+ typedef acpi_status (*acpi_object_converter) (struct acpi_namespace_node *
+ 					      scope,
+ 					      union acpi_operand_object *
+ 					      original_object,
+ 					      union acpi_operand_object **
+ 					      converted_object);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  struct acpi_simple_repair_info {
  	char name[ACPI_NAME_SIZE];
diff --cc drivers/acpi/acpica/acresrc.h
index f691d0e4d9fa,63da1e37caba..000000000000
--- a/drivers/acpi/acpica/acresrc.h
+++ b/drivers/acpi/acpica/acresrc.h
@@@ -223,12 -223,12 +223,17 @@@ acpi_rs_get_aei_method_data(struct acpi
   * rscalc
   */
  acpi_status
- acpi_rs_get_list_length(u8 * aml_buffer,
- 			u32 aml_buffer_length, acpi_size * size_needed);
+ acpi_rs_get_list_length(u8 *aml_buffer,
+ 			u32 aml_buffer_length, acpi_size *size_needed);
  
  acpi_status
++<<<<<<< HEAD
 +acpi_rs_get_aml_length(struct acpi_resource *linked_list_buffer,
 +		       acpi_size * size_needed);
++=======
+ acpi_rs_get_aml_length(struct acpi_resource *resource_list,
+ 		       acpi_size resource_list_size, acpi_size *size_needed);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  acpi_status
  acpi_rs_get_pci_routing_table_length(union acpi_operand_object *package_object,
diff --cc drivers/acpi/acpica/dsutils.c
index c666fc014987,f393de9f5887..000000000000
--- a/drivers/acpi/acpica/dsutils.c
+++ b/drivers/acpi/acpica/dsutils.c
@@@ -564,6 -563,17 +564,20 @@@ acpi_ds_create_operand(struct acpi_walk
  								 acpi_operand_object,
  								 acpi_gbl_root_node);
  					status = AE_OK;
++<<<<<<< HEAD
++=======
+ 				} else if (parent_op->common.aml_opcode ==
+ 					   AML_EXTERNAL_OP) {
+ 
+ 					/* TBD: May only be temporary */
+ 
+ 					obj_desc =
+ 					    acpi_ut_create_string_object((acpi_size)name_length);
+ 
+ 					strncpy(obj_desc->string.pointer,
+ 						name_string, name_length);
+ 					status = AE_OK;
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  				} else {
  					/*
  					 * We just plain didn't find it -- which is a
diff --cc drivers/acpi/acpica/evgpe.c
index c8a1f7d5931f,4b4949ce05bc..000000000000
--- a/drivers/acpi/acpica/evgpe.c
+++ b/drivers/acpi/acpica/evgpe.c
@@@ -441,16 -438,68 +441,26 @@@ u32 acpi_ev_gpe_detect(struct acpi_gpe_
  
  				/* Examine one GPE bit */
  
++<<<<<<< HEAD
++=======
+ 				gpe_event_info =
+ 				    &gpe_block->
+ 				    event_info[((acpi_size)i *
+ 						ACPI_GPE_REGISTER_WIDTH) + j];
+ 				gpe_number =
+ 				    j + gpe_register_info->base_gpe_number;
+ 
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  				if (enabled_status_byte & (1 << j)) {
 -
 -					/* Invoke global event handler if present */
 -
 -					acpi_gpe_count++;
 -					if (acpi_gbl_global_event_handler) {
 -						acpi_gbl_global_event_handler
 -						    (ACPI_EVENT_TYPE_GPE,
 -						     gpe_device, gpe_number,
 -						     acpi_gbl_global_event_handler_context);
 -					}
 -
 -					/* Found an active GPE */
 -
 -					if (ACPI_GPE_DISPATCH_TYPE
 -					    (gpe_event_info->flags) ==
 -					    ACPI_GPE_DISPATCH_RAW_HANDLER) {
 -
 -						/* Dispatch the event to a raw handler */
 -
 -						gpe_handler_info =
 -						    gpe_event_info->dispatch.
 -						    handler;
 -
 -						/*
 -						 * There is no protection around the namespace node
 -						 * and the GPE handler to ensure a safe destruction
 -						 * because:
 -						 * 1. The namespace node is expected to always
 -						 *    exist after loading a table.
 -						 * 2. The GPE handler is expected to be flushed by
 -						 *    acpi_os_wait_events_complete() before the
 -						 *    destruction.
 -						 */
 -						acpi_os_release_lock
 -						    (acpi_gbl_gpe_lock, flags);
 -						int_status |=
 -						    gpe_handler_info->
 -						    address(gpe_device,
 -							    gpe_number,
 -							    gpe_handler_info->
 -							    context);
 -						flags =
 -						    acpi_os_acquire_lock
 -						    (acpi_gbl_gpe_lock);
 -					} else {
 -						/*
 -						 * Dispatch the event to a standard handler or
 -						 * method.
 -						 */
 -						int_status |=
 -						    acpi_ev_gpe_dispatch
 -						    (gpe_device, gpe_event_info,
 -						     gpe_number);
 -					}
 +					/*
 +					 * Found an active GPE. Dispatch the event to a handler
 +					 * or method.
 +					 */
 +					int_status |=
 +					    acpi_ev_gpe_dispatch(gpe_block->
 +								 node,
 +								 &gpe_block->
 +						event_info[((acpi_size) i * ACPI_GPE_REGISTER_WIDTH) + j], j + gpe_register_info->base_gpe_number);
  				}
  			}
  		}
diff --cc drivers/acpi/acpica/evgpeutil.c
index b24dbb80fab8,3f150d567e64..000000000000
--- a/drivers/acpi/acpica/evgpeutil.c
+++ b/drivers/acpi/acpica/evgpeutil.c
@@@ -207,7 -161,9 +207,13 @@@ acpi_ev_get_gpe_device(struct acpi_gpe_
   *
   ******************************************************************************/
  
++<<<<<<< HEAD
 +struct acpi_gpe_xrupt_info *acpi_ev_get_gpe_xrupt_block(u32 interrupt_number)
++=======
+ acpi_status
+ acpi_ev_get_gpe_xrupt_block(u32 interrupt_number,
+ 			    struct acpi_gpe_xrupt_info **gpe_xrupt_block)
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  {
  	struct acpi_gpe_xrupt_info *next_gpe_xrupt;
  	struct acpi_gpe_xrupt_info *gpe_xrupt;
diff --cc drivers/acpi/acpica/exfield.c
index c251b0cce123,d7d3ee36338b..000000000000
--- a/drivers/acpi/acpica/exfield.c
+++ b/drivers/acpi/acpica/exfield.c
@@@ -232,7 -233,8 +232,12 @@@ acpi_ex_read_data_from_field(struct acp
  	 * Note: Field.length is in bits.
  	 */
  	length =
++<<<<<<< HEAD
 +	    (acpi_size) ACPI_ROUND_BITS_UP_TO_BYTES(obj_desc->field.bit_length);
++=======
+ 	    (acpi_size)ACPI_ROUND_BITS_UP_TO_BYTES(obj_desc->field.bit_length);
+ 
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  	if (length > acpi_gbl_integer_byte_width) {
  
  		/* Field is too large for an Integer, create a Buffer instead */
diff --cc drivers/acpi/acpica/exoparg3.c
index 37656f12f204,69e4e269ad2f..000000000000
--- a/drivers/acpi/acpica/exoparg3.c
+++ b/drivers/acpi/acpica/exoparg3.c
@@@ -182,8 -197,9 +182,14 @@@ acpi_status acpi_ex_opcode_3A_1T_1R(str
  		/* Truncate request if larger than the actual String/Buffer */
  
  		else if ((index + length) > operand[0]->string.length) {
++<<<<<<< HEAD
 +			length = (acpi_size) operand[0]->string.length -
 +			    (acpi_size) index;
++=======
+ 			length =
+ 			    (acpi_size)operand[0]->string.length -
+ 			    (acpi_size)index;
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  		}
  
  		/* Strings always have a sub-pointer, not so for buffers */
diff --cc drivers/acpi/acpica/exstorob.c
index 26e371073b1a,1dab82746d06..000000000000
--- a/drivers/acpi/acpica/exstorob.c
+++ b/drivers/acpi/acpica/exstorob.c
@@@ -187,9 -187,9 +187,15 @@@ acpi_ex_store_string_to_string(union ac
  		 * String will fit in existing non-static buffer.
  		 * Clear old string and copy in the new one
  		 */
++<<<<<<< HEAD
 +		ACPI_MEMSET(target_desc->string.pointer, 0,
 +			    (acpi_size) target_desc->string.length + 1);
 +		ACPI_MEMCPY(target_desc->string.pointer, buffer, length);
++=======
+ 		memset(target_desc->string.pointer, 0,
+ 		       (acpi_size)target_desc->string.length + 1);
+ 		memcpy(target_desc->string.pointer, buffer, length);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  	} else {
  		/*
  		 * Free the current buffer, then allocate a new buffer
@@@ -203,8 -203,9 +209,14 @@@
  			ACPI_FREE(target_desc->string.pointer);
  		}
  
++<<<<<<< HEAD
 +		target_desc->string.pointer = ACPI_ALLOCATE_ZEROED((acpi_size)
 +								   length + 1);
++=======
+ 		target_desc->string.pointer =
+ 		    ACPI_ALLOCATE_ZEROED((acpi_size)length + 1);
+ 
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  		if (!target_desc->string.pointer) {
  			return_ACPI_STATUS(AE_NO_MEMORY);
  		}
diff --cc drivers/acpi/acpica/hwgpe.c
index 96540506058f,bdecd5e76e87..000000000000
--- a/drivers/acpi/acpica/hwgpe.c
+++ b/drivers/acpi/acpica/hwgpe.c
@@@ -201,8 -206,8 +201,13 @@@ acpi_status acpi_hw_clear_gpe(struct ac
   ******************************************************************************/
  
  acpi_status
++<<<<<<< HEAD
 +acpi_hw_get_gpe_status(struct acpi_gpe_event_info * gpe_event_info,
 +		       acpi_event_status * event_status)
++=======
+ acpi_hw_get_gpe_status(struct acpi_gpe_event_info *gpe_event_info,
+ 		       acpi_event_status *event_status)
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  {
  	u32 in_byte;
  	u32 register_bit;
diff --cc drivers/acpi/acpica/hwxface.c
index f15bfe096edf,98c26ff39409..000000000000
--- a/drivers/acpi/acpica/hwxface.c
+++ b/drivers/acpi/acpica/hwxface.c
@@@ -84,11 -84,16 +84,17 @@@ acpi_status acpi_reset(void
  		 * For I/O space, write directly to the OSL. This bypasses the port
  		 * validation mechanism, which may block a valid write to the reset
  		 * register.
 -		 *
 -		 * NOTE:
 -		 * The ACPI spec requires the reset register width to be 8, so we
 -		 * hardcode it here and ignore the FADT value. This maintains
 -		 * compatibility with other ACPI implementations that have allowed
 -		 * BIOS code with bad register width values to go unnoticed.
 +		 * Spec section 4.7.3.6 requires register width to be 8.
  		 */
++<<<<<<< HEAD
 +		status =
 +		    acpi_os_write_port((acpi_io_address) reset_reg->address,
 +				       acpi_gbl_FADT.reset_value, 8);
++=======
+ 		status = acpi_os_write_port((acpi_io_address)reset_reg->address,
+ 					    acpi_gbl_FADT.reset_value,
+ 					    ACPI_RESET_REGISTER_WIDTH);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  	} else {
  		/* Write the reset value to the reset register */
  
diff --cc drivers/acpi/acpica/nsconvert.c
index acd2964c2690,c803bda7915c..000000000000
--- a/drivers/acpi/acpica/nsconvert.c
+++ b/drivers/acpi/acpica/nsconvert.c
@@@ -318,7 -318,8 +318,12 @@@ acpi_ns_convert_to_buffer(union acpi_op
   ******************************************************************************/
  
  acpi_status
++<<<<<<< HEAD
 +acpi_ns_convert_to_unicode(union acpi_operand_object *original_object,
++=======
+ acpi_ns_convert_to_unicode(struct acpi_namespace_node *scope,
+ 			   union acpi_operand_object *original_object,
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			   union acpi_operand_object **return_object)
  {
  	union acpi_operand_object *new_object;
@@@ -383,7 -385,8 +388,12 @@@
   ******************************************************************************/
  
  acpi_status
++<<<<<<< HEAD
 +acpi_ns_convert_to_resource(union acpi_operand_object *original_object,
++=======
+ acpi_ns_convert_to_resource(struct acpi_namespace_node *scope,
+ 			    union acpi_operand_object *original_object,
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			    union acpi_operand_object **return_object)
  {
  	union acpi_operand_object *new_object;
@@@ -444,3 -447,78 +454,81 @@@
  	*return_object = new_object;
  	return (AE_OK);
  }
++<<<<<<< HEAD
++=======
+ 
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_ns_convert_to_reference
+  *
+  * PARAMETERS:  scope               - Namespace node for the method/object
+  *              original_object     - Object to be converted
+  *              return_object       - Where the new converted object is returned
+  *
+  * RETURN:      Status. AE_OK if conversion was successful
+  *
+  * DESCRIPTION: Attempt to convert a Integer object to a object_reference.
+  *              Buffer.
+  *
+  ******************************************************************************/
+ 
+ acpi_status
+ acpi_ns_convert_to_reference(struct acpi_namespace_node *scope,
+ 			     union acpi_operand_object *original_object,
+ 			     union acpi_operand_object **return_object)
+ {
+ 	union acpi_operand_object *new_object = NULL;
+ 	acpi_status status;
+ 	struct acpi_namespace_node *node;
+ 	union acpi_generic_state scope_info;
+ 	char *name;
+ 
+ 	ACPI_FUNCTION_NAME(ns_convert_to_reference);
+ 
+ 	/* Convert path into internal presentation */
+ 
+ 	status =
+ 	    acpi_ns_internalize_name(original_object->string.pointer, &name);
+ 	if (ACPI_FAILURE(status)) {
+ 		return_ACPI_STATUS(status);
+ 	}
+ 
+ 	/* Find the namespace node */
+ 
+ 	scope_info.scope.node =
+ 	    ACPI_CAST_PTR(struct acpi_namespace_node, scope);
+ 	status =
+ 	    acpi_ns_lookup(&scope_info, name, ACPI_TYPE_ANY, ACPI_IMODE_EXECUTE,
+ 			   ACPI_NS_SEARCH_PARENT | ACPI_NS_DONT_OPEN_SCOPE,
+ 			   NULL, &node);
+ 	if (ACPI_FAILURE(status)) {
+ 
+ 		/* Check if we are resolving a named reference within a package */
+ 
+ 		ACPI_ERROR_NAMESPACE(original_object->string.pointer, status);
+ 		goto error_exit;
+ 	}
+ 
+ 	/* Create and init a new internal ACPI object */
+ 
+ 	new_object = acpi_ut_create_internal_object(ACPI_TYPE_LOCAL_REFERENCE);
+ 	if (!new_object) {
+ 		status = AE_NO_MEMORY;
+ 		goto error_exit;
+ 	}
+ 	new_object->reference.node = node;
+ 	new_object->reference.object = node->object;
+ 	new_object->reference.class = ACPI_REFCLASS_NAME;
+ 
+ 	/*
+ 	 * Increase reference of the object if needed (the object is likely a
+ 	 * null for device nodes).
+ 	 */
+ 	acpi_ut_add_reference(node->object);
+ 
+ error_exit:
+ 	ACPI_FREE(name);
+ 	*return_object = new_object;
+ 	return (AE_OK);
+ }
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
diff --cc drivers/acpi/acpica/nsnames.c
index 90a0380fb8a0,f03dd41e86d0..000000000000
--- a/drivers/acpi/acpica/nsnames.c
+++ b/drivers/acpi/acpica/nsnames.c
@@@ -225,7 -113,7 +225,11 @@@ acpi_size acpi_ns_get_pathname_length(s
  
  acpi_status
  acpi_ns_handle_to_pathname(acpi_handle target_handle,
++<<<<<<< HEAD
 +			   struct acpi_buffer * buffer)
++=======
+ 			   struct acpi_buffer *buffer, u8 no_trailing)
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  {
  	acpi_status status;
  	struct acpi_namespace_node *node;
diff --cc drivers/acpi/acpica/rscalc.c
index b62a0f4f4f9b,f1e83addd5b4..000000000000
--- a/drivers/acpi/acpica/rscalc.c
+++ b/drivers/acpi/acpica/rscalc.c
@@@ -185,9 -187,11 +185,14 @@@ acpi_rs_stream_option_length(u32 resour
   ******************************************************************************/
  
  acpi_status
++<<<<<<< HEAD
 +acpi_rs_get_aml_length(struct acpi_resource * resource, acpi_size * size_needed)
++=======
+ acpi_rs_get_aml_length(struct acpi_resource *resource,
+ 		       acpi_size resource_list_size, acpi_size *size_needed)
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  {
  	acpi_size aml_size_needed = 0;
 -	struct acpi_resource *resource_end;
  	acpi_rs_length total_size;
  
  	ACPI_FUNCTION_TRACE(rs_get_aml_length);
@@@ -272,11 -278,11 +277,19 @@@
  			 * 16-Bit Address Resource:
  			 * Add the size of the optional resource_source info
  			 */
++<<<<<<< HEAD
 +			total_size = (acpi_rs_length)
 +			    (total_size +
 +			     acpi_rs_struct_option_length(&resource->data.
 +							  address16.
 +							  resource_source));
++=======
+ 			total_size = (acpi_rs_length)(total_size +
+ 						      acpi_rs_struct_option_length
+ 						      (&resource->data.
+ 						       address16.
+ 						       resource_source));
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			break;
  
  		case ACPI_RESOURCE_TYPE_ADDRESS32:
@@@ -284,11 -290,11 +297,19 @@@
  			 * 32-Bit Address Resource:
  			 * Add the size of the optional resource_source info
  			 */
++<<<<<<< HEAD
 +			total_size = (acpi_rs_length)
 +			    (total_size +
 +			     acpi_rs_struct_option_length(&resource->data.
 +							  address32.
 +							  resource_source));
++=======
+ 			total_size = (acpi_rs_length)(total_size +
+ 						      acpi_rs_struct_option_length
+ 						      (&resource->data.
+ 						       address32.
+ 						       resource_source));
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			break;
  
  		case ACPI_RESOURCE_TYPE_ADDRESS64:
@@@ -296,11 -302,11 +317,19 @@@
  			 * 64-Bit Address Resource:
  			 * Add the size of the optional resource_source info
  			 */
++<<<<<<< HEAD
 +			total_size = (acpi_rs_length)
 +			    (total_size +
 +			     acpi_rs_struct_option_length(&resource->data.
 +							  address64.
 +							  resource_source));
++=======
+ 			total_size = (acpi_rs_length)(total_size +
+ 						      acpi_rs_struct_option_length
+ 						      (&resource->data.
+ 						       address64.
+ 						       resource_source));
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			break;
  
  		case ACPI_RESOURCE_TYPE_EXTENDED_IRQ:
@@@ -309,26 -315,28 +338,50 @@@
  			 * Add the size of each additional optional interrupt beyond the
  			 * required 1 (4 bytes for each u32 interrupt number)
  			 */
++<<<<<<< HEAD
 +			total_size = (acpi_rs_length)
 +			    (total_size +
 +			     ((resource->data.extended_irq.interrupt_count -
 +			       1) * 4) +
 +			     /* Add the size of the optional resource_source info */
 +			     acpi_rs_struct_option_length(&resource->data.
 +							  extended_irq.
 +							  resource_source));
++=======
+ 			total_size = (acpi_rs_length)(total_size +
+ 						      ((resource->data.
+ 							extended_irq.
+ 							interrupt_count -
+ 							1) * 4) +
+ 						      /* Add the size of the optional resource_source info */
+ 						      acpi_rs_struct_option_length
+ 						      (&resource->data.
+ 						       extended_irq.
+ 						       resource_source));
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			break;
  
  		case ACPI_RESOURCE_TYPE_GPIO:
  
++<<<<<<< HEAD
 +			total_size =
 +			    (acpi_rs_length) (total_size +
 +					      (resource->data.gpio.
 +					       pin_table_length * 2) +
 +					      resource->data.gpio.
 +					      resource_source.string_length +
 +					      resource->data.gpio.
 +					      vendor_length);
++=======
+ 			total_size = (acpi_rs_length)(total_size +
+ 						      (resource->data.gpio.
+ 						       pin_table_length * 2) +
+ 						      resource->data.gpio.
+ 						      resource_source.
+ 						      string_length +
+ 						      resource->data.gpio.
+ 						      vendor_length);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  			break;
  
diff --cc drivers/acpi/acpica/rscreate.c
index 65f3e1c5b598,809b61c114fe..000000000000
--- a/drivers/acpi/acpica/rscreate.c
+++ b/drivers/acpi/acpica/rscreate.c
@@@ -342,10 -347,7 +342,14 @@@ acpi_rs_create_pci_routing_table(union 
  					   (u8 *) output_buffer->pointer);
  				path_buffer.pointer = user_prt->source;
  
++<<<<<<< HEAD
 +				status =
 +				    acpi_ns_handle_to_pathname((acpi_handle)
 +							       node,
 +							       &path_buffer);
++=======
+ 				status = acpi_ns_handle_to_pathname((acpi_handle)node, &path_buffer, FALSE);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  				/* +1 to include null terminator */
  
diff --cc drivers/acpi/acpica/tbfadt.c
index 31aba1a86a45,620806965243..000000000000
--- a/drivers/acpi/acpica/tbfadt.c
+++ b/drivers/acpi/acpica/tbfadt.c
@@@ -280,8 -344,8 +280,13 @@@ void acpi_tb_parse_fadt(u32 table_index
  
  	/* Obtain the DSDT and FACS tables via their addresses within the FADT */
  
++<<<<<<< HEAD
 +	acpi_tb_install_table((acpi_physical_address) acpi_gbl_FADT.Xdsdt,
 +			      ACPI_SIG_DSDT, ACPI_TABLE_INDEX_DSDT);
++=======
+ 	acpi_tb_install_fixed_table((acpi_physical_address)acpi_gbl_FADT.Xdsdt,
+ 				    ACPI_SIG_DSDT, &acpi_gbl_dsdt_index);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  	/* If Hardware Reduced flag is set, there is no FACS */
  
diff --cc drivers/acpi/acpica/tbutils.c
index 61ffb069ecd5,a962a85b1d02..000000000000
--- a/drivers/acpi/acpica/tbutils.c
+++ b/drivers/acpi/acpica/tbutils.c
@@@ -459,24 -278,22 +459,34 @@@ acpi_tb_parse_root_table(acpi_physical_
  				   ACPI_CAST_PTR(struct acpi_table_header,
  						 rsdp));
  
 -	/* Use XSDT if present and not overridden. Otherwise, use RSDT */
 +	/* Differentiate between RSDT and XSDT root tables */
  
 -	if ((rsdp->revision > 1) &&
 -	    rsdp->xsdt_physical_address && !acpi_gbl_do_not_use_xsdt) {
 +	if (rsdp->revision > 1 && rsdp->xsdt_physical_address
 +			&& !acpi_rsdt_forced) {
  		/*
 -		 * RSDP contains an XSDT (64-bit physical addresses). We must use
 -		 * the XSDT if the revision is > 1 and the XSDT pointer is present,
 -		 * as per the ACPI specification.
 +		 * Root table is an XSDT (64-bit physical addresses). We must use the
 +		 * XSDT if the revision is > 1 and the XSDT pointer is present, as per
 +		 * the ACPI specification.
  		 */
++<<<<<<< HEAD
 +		address = (acpi_physical_address) rsdp->xsdt_physical_address;
 +		table_entry_size = sizeof(u64);
 +		rsdt_address = (acpi_physical_address)
 +					rsdp->rsdt_physical_address;
 +	} else {
 +		/* Root table is an RSDT (32-bit physical addresses) */
 +
 +		address = (acpi_physical_address) rsdp->rsdt_physical_address;
 +		table_entry_size = sizeof(u32);
++=======
+ 		address = (acpi_physical_address)rsdp->xsdt_physical_address;
+ 		table_entry_size = ACPI_XSDT_ENTRY_SIZE;
+ 	} else {
+ 		/* Root table is an RSDT (32-bit physical addresses) */
+ 
+ 		address = (acpi_physical_address)rsdp->rsdt_physical_address;
+ 		table_entry_size = ACPI_RSDT_ENTRY_SIZE;
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  	}
  
  	/*
diff --cc drivers/acpi/acpica/tbxface.c
index ba6e31d96bc1,3ecec937e8c9..000000000000
--- a/drivers/acpi/acpica/tbxface.c
+++ b/drivers/acpi/acpica/tbxface.c
@@@ -119,9 -119,9 +119,15 @@@ acpi_initialize_tables(struct acpi_tabl
  	} else {
  		/* Root Table Array has been statically allocated by the host */
  
++<<<<<<< HEAD
 +		ACPI_MEMSET(initial_table_array, 0,
 +			    (acpi_size) initial_table_count *
 +			    sizeof(struct acpi_table_desc));
++=======
+ 		memset(initial_table_array, 0,
+ 		       (acpi_size)initial_table_count *
+ 		       sizeof(struct acpi_table_desc));
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  		acpi_gbl_root_table_list.tables = initial_table_array;
  		acpi_gbl_root_table_list.max_table_count = initial_table_count;
diff --cc drivers/acpi/acpica/tbxfroot.c
index e76ed0f07826,adb6cfc54661..000000000000
--- a/drivers/acpi/acpica/tbxfroot.c
+++ b/drivers/acpi/acpica/tbxfroot.c
@@@ -63,7 -90,7 +63,11 @@@ static acpi_status acpi_tb_validate_rsd
   *
   ******************************************************************************/
  
++<<<<<<< HEAD
 +static acpi_status acpi_tb_validate_rsdp(struct acpi_table_rsdp *rsdp)
++=======
+ acpi_status acpi_tb_validate_rsdp(struct acpi_table_rsdp *rsdp)
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  {
  
  	/*
@@@ -116,7 -142,7 +120,11 @@@
   *
   ******************************************************************************/
  
++<<<<<<< HEAD
 +acpi_status acpi_find_root_pointer(acpi_size *table_address)
++=======
+ acpi_status __init acpi_find_root_pointer(acpi_physical_address *table_address)
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  {
  	u8 *table_ptr;
  	u8 *mem_rover;
@@@ -174,7 -200,8 +182,12 @@@
  			physical_address +=
  			    (u32) ACPI_PTR_DIFF(mem_rover, table_ptr);
  
++<<<<<<< HEAD
 +			*table_address = physical_address;
++=======
+ 			*table_address =
+ 			    (acpi_physical_address)physical_address;
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  			return_ACPI_STATUS(AE_OK);
  		}
  	}
@@@ -207,7 -234,7 +220,11 @@@
  		    (ACPI_HI_RSDP_WINDOW_BASE +
  		     ACPI_PTR_DIFF(mem_rover, table_ptr));
  
++<<<<<<< HEAD
 +		*table_address = physical_address;
++=======
+ 		*table_address = (acpi_physical_address)physical_address;
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  		return_ACPI_STATUS(AE_OK);
  	}
  
diff --cc drivers/acpi/acpica/utbuffer.c
index 11fde93be120,bd31faf5da7c..000000000000
--- a/drivers/acpi/acpica/utbuffer.c
+++ b/drivers/acpi/acpica/utbuffer.c
@@@ -150,8 -150,16 +150,21 @@@ void acpi_ut_dump_buffer(u8 *buffer, u3
  				return;
  			}
  
++<<<<<<< HEAD
 +			buf_char = buffer[(acpi_size) i + j];
 +			if (ACPI_IS_PRINT(buf_char)) {
++=======
+ 			/*
+ 			 * Add comment characters so rest of line is ignored when
+ 			 * compiled
+ 			 */
+ 			if (j == 0) {
+ 				acpi_os_printf("// ");
+ 			}
+ 
+ 			buf_char = buffer[(acpi_size)i + j];
+ 			if (isprint(buf_char)) {
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  				acpi_os_printf("%c", buf_char);
  			} else {
  				acpi_os_printf(".");
@@@ -199,3 -207,131 +212,134 @@@ acpi_ut_debug_dump_buffer(u8 *buffer, u
  
  	acpi_ut_dump_buffer(buffer, count, display, 0);
  }
++<<<<<<< HEAD
++=======
+ 
+ #ifdef ACPI_APPLICATION
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_ut_dump_buffer_to_file
+  *
+  * PARAMETERS:  file                - File descriptor
+  *              buffer              - Buffer to dump
+  *              count               - Amount to dump, in bytes
+  *              display             - BYTE, WORD, DWORD, or QWORD display:
+  *                                      DB_BYTE_DISPLAY
+  *                                      DB_WORD_DISPLAY
+  *                                      DB_DWORD_DISPLAY
+  *                                      DB_QWORD_DISPLAY
+  *              base_offset         - Beginning buffer offset (display only)
+  *
+  * RETURN:      None
+  *
+  * DESCRIPTION: Generic dump buffer in both hex and ascii to a file.
+  *
+  ******************************************************************************/
+ 
+ void
+ acpi_ut_dump_buffer_to_file(ACPI_FILE file,
+ 			    u8 *buffer, u32 count, u32 display, u32 base_offset)
+ {
+ 	u32 i = 0;
+ 	u32 j;
+ 	u32 temp32;
+ 	u8 buf_char;
+ 
+ 	if (!buffer) {
+ 		acpi_ut_file_printf(file,
+ 				    "Null Buffer Pointer in DumpBuffer!\n");
+ 		return;
+ 	}
+ 
+ 	if ((count < 4) || (count & 0x01)) {
+ 		display = DB_BYTE_DISPLAY;
+ 	}
+ 
+ 	/* Nasty little dump buffer routine! */
+ 
+ 	while (i < count) {
+ 
+ 		/* Print current offset */
+ 
+ 		acpi_ut_file_printf(file, "%6.4X: ", (base_offset + i));
+ 
+ 		/* Print 16 hex chars */
+ 
+ 		for (j = 0; j < 16;) {
+ 			if (i + j >= count) {
+ 
+ 				/* Dump fill spaces */
+ 
+ 				acpi_ut_file_printf(file, "%*s",
+ 						    ((display * 2) + 1), " ");
+ 				j += display;
+ 				continue;
+ 			}
+ 
+ 			switch (display) {
+ 			case DB_BYTE_DISPLAY:
+ 			default:	/* Default is BYTE display */
+ 
+ 				acpi_ut_file_printf(file, "%02X ",
+ 						    buffer[(acpi_size)i + j]);
+ 				break;
+ 
+ 			case DB_WORD_DISPLAY:
+ 
+ 				ACPI_MOVE_16_TO_32(&temp32,
+ 						   &buffer[(acpi_size)i + j]);
+ 				acpi_ut_file_printf(file, "%04X ", temp32);
+ 				break;
+ 
+ 			case DB_DWORD_DISPLAY:
+ 
+ 				ACPI_MOVE_32_TO_32(&temp32,
+ 						   &buffer[(acpi_size)i + j]);
+ 				acpi_ut_file_printf(file, "%08X ", temp32);
+ 				break;
+ 
+ 			case DB_QWORD_DISPLAY:
+ 
+ 				ACPI_MOVE_32_TO_32(&temp32,
+ 						   &buffer[(acpi_size)i + j]);
+ 				acpi_ut_file_printf(file, "%08X", temp32);
+ 
+ 				ACPI_MOVE_32_TO_32(&temp32,
+ 						   &buffer[(acpi_size)i + j +
+ 							   4]);
+ 				acpi_ut_file_printf(file, "%08X ", temp32);
+ 				break;
+ 			}
+ 
+ 			j += display;
+ 		}
+ 
+ 		/*
+ 		 * Print the ASCII equivalent characters but watch out for the bad
+ 		 * unprintable ones (printable chars are 0x20 through 0x7E)
+ 		 */
+ 		acpi_ut_file_printf(file, " ");
+ 		for (j = 0; j < 16; j++) {
+ 			if (i + j >= count) {
+ 				acpi_ut_file_printf(file, "\n");
+ 				return;
+ 			}
+ 
+ 			buf_char = buffer[(acpi_size)i + j];
+ 			if (isprint(buf_char)) {
+ 				acpi_ut_file_printf(file, "%c", buf_char);
+ 			} else {
+ 				acpi_ut_file_printf(file, ".");
+ 			}
+ 		}
+ 
+ 		/* Done with that line. */
+ 
+ 		acpi_ut_file_printf(file, "\n");
+ 		i += 16;
+ 	}
+ 
+ 	return;
+ }
+ #endif
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
diff --cc drivers/acpi/acpica/utcopy.c
index 1731c27c36a6,82f971402d85..000000000000
--- a/drivers/acpi/acpica/utcopy.c
+++ b/drivers/acpi/acpica/utcopy.c
@@@ -149,9 -149,9 +149,15 @@@ acpi_ut_copy_isimple_to_esimple(union a
  								  string.
  								  length + 1);
  
++<<<<<<< HEAD
 +		ACPI_MEMCPY((void *)data_space,
 +			    (void *)internal_object->string.pointer,
 +			    (acpi_size) internal_object->string.length + 1);
++=======
+ 		memcpy((void *)data_space,
+ 		       (void *)internal_object->string.pointer,
+ 		       (acpi_size)internal_object->string.length + 1);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  		break;
  
  	case ACPI_TYPE_BUFFER:
@@@ -747,9 -746,9 +753,15 @@@ acpi_ut_copy_simple_object(union acpi_o
  
  			/* Copy the actual string data */
  
++<<<<<<< HEAD
 +			ACPI_MEMCPY(dest_desc->string.pointer,
 +				    source_desc->string.pointer,
 +				    (acpi_size) source_desc->string.length + 1);
++=======
+ 			memcpy(dest_desc->string.pointer,
+ 			       source_desc->string.pointer,
+ 			       (acpi_size)source_desc->string.length + 1);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  		}
  		break;
  
diff --cc drivers/acpi/acpica/utids.c
index fa69071db418,f7cd2d52643b..000000000000
--- a/drivers/acpi/acpica/utids.c
+++ b/drivers/acpi/acpica/utids.c
@@@ -416,3 -348,92 +416,95 @@@ cleanup
  	acpi_ut_remove_reference(obj_desc);
  	return_ACPI_STATUS(status);
  }
++<<<<<<< HEAD
++=======
+ 
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_ut_execute_CLS
+  *
+  * PARAMETERS:  device_node         - Node for the device
+  *              return_id           - Where the _CLS is returned
+  *
+  * RETURN:      Status
+  *
+  * DESCRIPTION: Executes the _CLS control method that returns PCI-defined
+  *              class code of the device. The _CLS value is always a package
+  *              containing PCI class information as a list of integers.
+  *              The returned string has format "BBSSPP", where:
+  *                BB = Base-class code
+  *                SS = Sub-class code
+  *                PP = Programming Interface code
+  *
+  ******************************************************************************/
+ 
+ acpi_status
+ acpi_ut_execute_CLS(struct acpi_namespace_node *device_node,
+ 		    struct acpi_pnp_device_id **return_id)
+ {
+ 	union acpi_operand_object *obj_desc;
+ 	union acpi_operand_object **cls_objects;
+ 	u32 count;
+ 	struct acpi_pnp_device_id *cls;
+ 	u32 length;
+ 	acpi_status status;
+ 	u8 class_code[3] = { 0, 0, 0 };
+ 
+ 	ACPI_FUNCTION_TRACE(ut_execute_CLS);
+ 
+ 	status = acpi_ut_evaluate_object(device_node, METHOD_NAME__CLS,
+ 					 ACPI_BTYPE_PACKAGE, &obj_desc);
+ 	if (ACPI_FAILURE(status)) {
+ 		return_ACPI_STATUS(status);
+ 	}
+ 
+ 	/* Get the size of the String to be returned, includes null terminator */
+ 
+ 	length = ACPI_PCICLS_STRING_SIZE;
+ 	cls_objects = obj_desc->package.elements;
+ 	count = obj_desc->package.count;
+ 
+ 	if (obj_desc->common.type == ACPI_TYPE_PACKAGE) {
+ 		if (count > 0
+ 		    && cls_objects[0]->common.type == ACPI_TYPE_INTEGER) {
+ 			class_code[0] = (u8)cls_objects[0]->integer.value;
+ 		}
+ 		if (count > 1
+ 		    && cls_objects[1]->common.type == ACPI_TYPE_INTEGER) {
+ 			class_code[1] = (u8)cls_objects[1]->integer.value;
+ 		}
+ 		if (count > 2
+ 		    && cls_objects[2]->common.type == ACPI_TYPE_INTEGER) {
+ 			class_code[2] = (u8)cls_objects[2]->integer.value;
+ 		}
+ 	}
+ 
+ 	/* Allocate a buffer for the CLS */
+ 
+ 	cls =
+ 	    ACPI_ALLOCATE_ZEROED(sizeof(struct acpi_pnp_device_id) +
+ 				 (acpi_size)length);
+ 	if (!cls) {
+ 		status = AE_NO_MEMORY;
+ 		goto cleanup;
+ 	}
+ 
+ 	/* Area for the string starts after PNP_DEVICE_ID struct */
+ 
+ 	cls->string =
+ 	    ACPI_ADD_PTR(char, cls, sizeof(struct acpi_pnp_device_id));
+ 
+ 	/* Simply copy existing string */
+ 
+ 	acpi_ex_pci_cls_to_string(cls->string, class_code);
+ 	cls->length = length;
+ 	*return_id = cls;
+ 
+ cleanup:
+ 
+ 	/* On exit, we must delete the return object */
+ 
+ 	acpi_ut_remove_reference(obj_desc);
+ 	return_ACPI_STATUS(status);
+ }
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
diff --cc drivers/acpi/acpica/utobject.c
index aa61f66ee861,72b9a062bbab..000000000000
--- a/drivers/acpi/acpica/utobject.c
+++ b/drivers/acpi/acpica/utobject.c
@@@ -177,10 -177,10 +177,10 @@@ union acpi_operand_object *acpi_ut_crea
  	 * Create the element array. Count+1 allows the array to be null
  	 * terminated.
  	 */
- 	package_elements = ACPI_ALLOCATE_ZEROED(((acpi_size) count +
+ 	package_elements = ACPI_ALLOCATE_ZEROED(((acpi_size)count +
  						 1) * sizeof(void *));
  	if (!package_elements) {
 -		ACPI_FREE(package_desc);
 +		acpi_ut_remove_reference(package_desc);
  		return_PTR(NULL);
  	}
  
@@@ -658,8 -663,9 +658,14 @@@ acpi_ut_get_package_object_size(union a
  	 * just add the length of the package objects themselves.
  	 * Round up to the next machine word.
  	 */
++<<<<<<< HEAD
 +	info.length += ACPI_ROUND_UP_TO_NATIVE_WORD(sizeof(union acpi_object)) *
 +	    (acpi_size) info.num_packages;
++=======
+ 	info.length +=
+ 	    ACPI_ROUND_UP_TO_NATIVE_WORD(sizeof(union acpi_object)) *
+ 	    (acpi_size)info.num_packages;
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  	/* Return the total package length */
  
diff --cc include/acpi/acpiosxf.h
index 96eeb3c4b600,562603d7aabe..000000000000
--- a/include/acpi/acpiosxf.h
+++ b/include/acpi/acpiosxf.h
@@@ -93,11 -102,15 +93,11 @@@ acpi_os_predefined_override(const struc
  acpi_status
  acpi_os_table_override(struct acpi_table_header *existing_table,
  		       struct acpi_table_header **new_table);
 -#endif
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_physical_table_override
  acpi_status
  acpi_os_physical_table_override(struct acpi_table_header *existing_table,
- 				acpi_physical_address * new_address,
+ 				acpi_physical_address *new_address,
  				u32 *new_table_length);
 -#endif
  
  /*
   * Spinlock primitives
@@@ -144,22 -178,32 +144,22 @@@ void acpi_os_release_mutex(acpi_mutex h
  /*
   * Memory allocation and mapping
   */
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_allocate
  void *acpi_os_allocate(acpi_size size);
 -#endif
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_allocate_zeroed
  void *acpi_os_allocate_zeroed(acpi_size size);
 -#endif
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_free
  void acpi_os_free(void *memory);
 -#endif
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_map_memory
 -void *acpi_os_map_memory(acpi_physical_address where, acpi_size length);
 -#endif
 +void __iomem *acpi_os_map_memory(acpi_physical_address where,
 +				acpi_size length);
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_unmap_memory
 -void acpi_os_unmap_memory(void *logical_address, acpi_size size);
 -#endif
 +void acpi_os_unmap_memory(void __iomem * logical_address, acpi_size size);
 +void early_acpi_os_unmap_memory(void __iomem * virt, acpi_size size);
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_get_physical_address
 +#ifdef ACPI_FUTURE_USAGE
  acpi_status
  acpi_os_get_physical_address(void *logical_address,
- 			     acpi_physical_address * physical_address);
+ 			     acpi_physical_address *physical_address);
  #endif
  
  /*
@@@ -247,17 -336,63 +247,62 @@@ acpi_status acpi_os_signal(u32 function
  /*
   * Debug print routines
   */
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_printf
  void ACPI_INTERNAL_VAR_XFACE acpi_os_printf(const char *format, ...);
 -#endif
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_vprintf
  void acpi_os_vprintf(const char *format, va_list args);
 -#endif
  
 -#ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_redirect_output
  void acpi_os_redirect_output(void *destination);
 -#endif
  
 +#ifdef ACPI_FUTURE_USAGE
  /*
 - * Debug IO
 + * Debug input
   */
++<<<<<<< HEAD
 +u32 acpi_os_get_line(char *buffer);
++=======
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_get_line
+ acpi_status acpi_os_get_line(char *buffer, u32 buffer_length, u32 *bytes_read);
+ #endif
+ 
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_initialize_command_signals
+ acpi_status acpi_os_initialize_command_signals(void);
+ #endif
+ 
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_terminate_command_signals
+ void acpi_os_terminate_command_signals(void);
+ #endif
+ 
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_wait_command_ready
+ acpi_status acpi_os_wait_command_ready(void);
+ #endif
+ 
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_notify_command_complete
+ acpi_status acpi_os_notify_command_complete(void);
+ #endif
+ 
+ /*
+  * Obtain ACPI table(s)
+  */
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_get_table_by_name
+ acpi_status
+ acpi_os_get_table_by_name(char *signature,
+ 			  u32 instance,
+ 			  struct acpi_table_header **table,
+ 			  acpi_physical_address *address);
+ #endif
+ 
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_get_table_by_index
+ acpi_status
+ acpi_os_get_table_by_index(u32 index,
+ 			   struct acpi_table_header **table,
+ 			   u32 *instance, acpi_physical_address *address);
+ #endif
+ 
+ #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_get_table_by_address
+ acpi_status
+ acpi_os_get_table_by_address(acpi_physical_address address,
+ 			     struct acpi_table_header **table);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  #endif
  
  /*
diff --cc include/acpi/acpixf.h
index 4f88d18b72e7,fcd8119547bc..000000000000
--- a/include/acpi/acpixf.h
+++ b/include/acpi/acpixf.h
@@@ -110,161 -333,257 +110,241 @@@ extern u8 acpi_gbl_disable_ssdt_table_l
  
  #endif				/* !ACPI_REDUCED_HARDWARE */
  
 +extern u32 acpi_rsdt_forced;
  /*
 - * Error message prototypes (default: error messages enabled).
 - *
 - * All interfaces related to error and warning messages
 - * will be configured out of the ACPICA build if the
 - * ACPI_NO_ERROR_MESSAGE flag is defined.
 + * Initialization
   */
 -#ifndef ACPI_NO_ERROR_MESSAGES
 -#define ACPI_MSG_DEPENDENT_RETURN_VOID(prototype) \
 -	prototype;
 +acpi_status
 +acpi_initialize_tables(struct acpi_table_desc *initial_storage,
 +		       u32 initial_table_count, u8 allow_resize);
  
 -#else
 -#define ACPI_MSG_DEPENDENT_RETURN_VOID(prototype) \
 -	static ACPI_INLINE prototype {return;}
 +acpi_status __init acpi_initialize_subsystem(void);
  
 -#endif				/* ACPI_NO_ERROR_MESSAGES */
 +acpi_status acpi_enable_subsystem(u32 flags);
  
 -/*
 - * Debugging output prototypes (default: no debug output).
 - *
 - * All interfaces related to debug output messages
 - * will be configured out of the ACPICA build unless the
 - * ACPI_DEBUG_OUTPUT flag is defined.
 - */
 -#ifdef ACPI_DEBUG_OUTPUT
 -#define ACPI_DBG_DEPENDENT_RETURN_VOID(prototype) \
 -	prototype;
 -
 -#else
 -#define ACPI_DBG_DEPENDENT_RETURN_VOID(prototype) \
 -	static ACPI_INLINE prototype {return;}
 +acpi_status acpi_initialize_objects(u32 flags);
  
 -#endif				/* ACPI_DEBUG_OUTPUT */
 +acpi_status acpi_terminate(void);
  
  /*
 - * Application prototypes
 - *
 - * All interfaces used by application will be configured
 - * out of the ACPICA build unless the ACPI_APPLICATION
 - * flag is defined.
 + * Miscellaneous global interfaces
   */
 -#ifdef ACPI_APPLICATION
 -#define ACPI_APP_DEPENDENT_RETURN_VOID(prototype) \
 -	prototype;
 +ACPI_HW_DEPENDENT_RETURN_STATUS(acpi_status acpi_enable(void))
 +ACPI_HW_DEPENDENT_RETURN_STATUS(acpi_status acpi_disable(void))
 +#ifdef ACPI_FUTURE_USAGE
 +acpi_status acpi_subsystem_status(void);
 +#endif
  
 -#else
 -#define ACPI_APP_DEPENDENT_RETURN_VOID(prototype) \
 -	static ACPI_INLINE prototype {return;}
 +#ifdef ACPI_FUTURE_USAGE
 +acpi_status acpi_get_system_info(struct acpi_buffer *ret_buffer);
 +#endif
  
 -#endif				/* ACPI_APPLICATION */
 +const char *acpi_format_exception(acpi_status exception);
  
 -/*
 - * Debugger prototypes
 - *
 - * All interfaces used by debugger will be configured
 - * out of the ACPICA build unless the ACPI_DEBUGGER
 - * flag is defined.
 - */
 -#ifdef ACPI_DEBUGGER
 -#define ACPI_DBR_DEPENDENT_RETURN_OK(prototype) \
 -	ACPI_EXTERNAL_RETURN_OK(prototype)
 +acpi_status acpi_purge_cached_objects(void);
  
 -#define ACPI_DBR_DEPENDENT_RETURN_VOID(prototype) \
 -	ACPI_EXTERNAL_RETURN_VOID(prototype)
 +acpi_status acpi_install_interface(acpi_string interface_name);
  
 -#else
 -#define ACPI_DBR_DEPENDENT_RETURN_OK(prototype) \
 -	static ACPI_INLINE prototype {return(AE_OK);}
 -
 -#define ACPI_DBR_DEPENDENT_RETURN_VOID(prototype) \
 -	static ACPI_INLINE prototype {return;}
 +acpi_status acpi_remove_interface(acpi_string interface_name);
  
 -#endif				/* ACPI_DEBUGGER */
 +u32
 +acpi_check_address_range(acpi_adr_space_type space_id,
 +			 acpi_physical_address address,
 +			 acpi_size length, u8 warn);
  
 -/*****************************************************************************
 - *
 - * ACPICA public interface prototypes
 - *
 - ****************************************************************************/
 +acpi_status
 +acpi_decode_pld_buffer(u8 *in_buffer,
 +		       acpi_size length, struct acpi_pld_info **return_buffer);
  
  /*
 - * Initialization
 + * ACPI table load/unload interfaces
   */
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init
 -			    acpi_initialize_tables(struct acpi_table_desc
 -						   *initial_storage,
 -						   u32 initial_table_count,
 -						   u8 allow_resize))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init acpi_initialize_subsystem(void))
 +acpi_status acpi_load_table(struct acpi_table_header *table);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init acpi_enable_subsystem(u32 flags))
 +acpi_status acpi_unload_parent_table(acpi_handle object);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init
 -			    acpi_initialize_objects(u32 flags))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init acpi_terminate(void))
 +acpi_status acpi_load_tables(void);
  
  /*
 - * Miscellaneous global interfaces
 + * ACPI table manipulation interfaces
   */
 -ACPI_HW_DEPENDENT_RETURN_STATUS(acpi_status acpi_enable(void))
 -ACPI_HW_DEPENDENT_RETURN_STATUS(acpi_status acpi_disable(void))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status acpi_subsystem_status(void))
 +acpi_status acpi_reallocate_root_table(void);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_get_system_info(struct acpi_buffer
 -						 *ret_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_get_statistics(struct acpi_statistics *stats))
 -ACPI_EXTERNAL_RETURN_PTR(const char
 -			  *acpi_format_exception(acpi_status exception))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status acpi_purge_cached_objects(void))
 -
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_install_interface(acpi_string interface_name))
++<<<<<<< HEAD
 +acpi_status acpi_find_root_pointer(acpi_size *rsdp_address);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_remove_interface(acpi_string interface_name))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status acpi_update_interfaces(u8 action))
 -
 -ACPI_EXTERNAL_RETURN_UINT32(u32
 -			    acpi_check_address_range(acpi_adr_space_type
 -						     space_id,
 -						     acpi_physical_address
 -						     address, acpi_size length,
 -						     u8 warn))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_decode_pld_buffer(u8 *in_buffer,
 -						    acpi_size length,
 -						    struct acpi_pld_info
 -						    **return_buffer))
 +acpi_status acpi_unload_table_id(acpi_owner_id id);
  
 -/*
 - * ACPI table load/unload interfaces
 - */
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init
 -			    acpi_install_table(acpi_physical_address address,
 -					       u8 physical))
 +acpi_status
 +acpi_get_table_header(acpi_string signature,
 +		      u32 instance, struct acpi_table_header *out_table_header);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_load_table(struct acpi_table_header *table))
 +acpi_status
 +acpi_get_table_with_size(acpi_string signature,
 +	       u32 instance, struct acpi_table_header **out_table,
 +	       acpi_size *tbl_size);
 +acpi_status
 +acpi_get_table(acpi_string signature,
 +	       u32 instance, struct acpi_table_header **out_table);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_unload_parent_table(acpi_handle object))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init acpi_load_tables(void))
 +acpi_status
 +acpi_get_table_by_index(u32 table_index, struct acpi_table_header **out_table);
  
 -/*
 - * ACPI table manipulation interfaces
 - */
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init acpi_reallocate_root_table(void))
 +acpi_status
 +acpi_install_table_handler(acpi_table_handler handler, void *context);
  
 +acpi_status acpi_remove_table_handler(acpi_table_handler handler);
++=======
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status __init
+ 			    acpi_find_root_pointer(acpi_physical_address
+ 						   *rsdp_address))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_table_header(acpi_string signature,
+ 						   u32 instance,
+ 						   struct acpi_table_header
+ 						   *out_table_header))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_table(acpi_string signature, u32 instance,
+ 					    struct acpi_table_header
+ 					    **out_table))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_table_by_index(u32 table_index,
+ 						     struct acpi_table_header
+ 						     **out_table))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_install_table_handler(acpi_table_handler
+ 							handler, void *context))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_remove_table_handler(acpi_table_handler
+ 						       handler))
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  /*
   * Namespace and name interfaces
   */
++<<<<<<< HEAD
 +acpi_status
 +acpi_walk_namespace(acpi_object_type type,
 +		    acpi_handle start_object,
 +		    u32 max_depth,
 +		    acpi_walk_callback pre_order_visit,
 +		    acpi_walk_callback post_order_visit,
 +		    void *context, void **return_value);
 +
 +acpi_status
 +acpi_get_devices(const char *HID,
 +		 acpi_walk_callback user_function,
 +		 void *context, void **return_value);
 +
 +acpi_status
 +acpi_get_name(acpi_handle object,
 +	      u32 name_type, struct acpi_buffer *ret_path_ptr);
 +
 +acpi_status
 +acpi_get_handle(acpi_handle parent,
 +		acpi_string pathname, acpi_handle * ret_handle);
 +
 +acpi_status
 +acpi_attach_data(acpi_handle object, acpi_object_handler handler, void *data);
 +
 +acpi_status acpi_detach_data(acpi_handle object, acpi_object_handler handler);
 +
 +acpi_status
 +acpi_get_data_full(acpi_handle object, acpi_object_handler handler, void **data,
 +		   void (*callback)(void *));
 +
 +acpi_status
 +acpi_get_data(acpi_handle object, acpi_object_handler handler, void **data);
 +
 +acpi_status
 +acpi_debug_trace(char *name, u32 debug_level, u32 debug_layer, u32 flags);
++=======
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			    acpi_walk_namespace(acpi_object_type type,
+ 						acpi_handle start_object,
+ 						u32 max_depth,
+ 						acpi_walk_callback
+ 						descending_callback,
+ 						acpi_walk_callback
+ 						ascending_callback,
+ 						void *context,
+ 						void **return_value))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_devices(const char *HID,
+ 					      acpi_walk_callback user_function,
+ 					      void *context,
+ 					      void **return_value))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_name(acpi_handle object, u32 name_type,
+ 					   struct acpi_buffer *ret_path_ptr))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_handle(acpi_handle parent,
+ 					     acpi_string pathname,
+ 					     acpi_handle *ret_handle))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_attach_data(acpi_handle object,
+ 					      acpi_object_handler handler,
+ 					      void *data))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_detach_data(acpi_handle object,
+ 					      acpi_object_handler handler))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_get_data(acpi_handle object,
+ 					   acpi_object_handler handler,
+ 					   void **data))
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			     acpi_debug_trace(const char *name, u32 debug_level,
+ 					      u32 debug_layer, u32 flags))
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  /*
   * Object manipulation and enumeration
   */
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_evaluate_object(acpi_handle object,
 -						 acpi_string pathname,
 -						 struct acpi_object_list
 -						 *parameter_objects,
 -						 struct acpi_buffer
 -						 *return_object_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_evaluate_object_typed(acpi_handle object,
 -							acpi_string pathname,
 -							struct acpi_object_list
 -							*external_params,
 -							struct acpi_buffer
 -							*return_buffer,
 -							acpi_object_type
 -							return_type))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_get_object_info(acpi_handle object,
 -						  struct acpi_device_info
 -						  **return_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status acpi_install_method(u8 *buffer))
 +acpi_status
 +acpi_evaluate_object(acpi_handle object,
 +		     acpi_string pathname,
 +		     struct acpi_object_list *parameter_objects,
 +		     struct acpi_buffer *return_object_buffer);
 +
++<<<<<<< HEAD
 +acpi_status
 +acpi_evaluate_object_typed(acpi_handle object,
 +			   acpi_string pathname,
 +			   struct acpi_object_list *external_params,
 +			   struct acpi_buffer *return_buffer,
 +			   acpi_object_type return_type);
 +
 +acpi_status
 +acpi_get_object_info(acpi_handle object,
 +		     struct acpi_device_info **return_buffer);
  
 +acpi_status acpi_install_method(u8 *buffer);
 +
 +acpi_status
 +acpi_get_next_object(acpi_object_type type,
 +		     acpi_handle parent,
 +		     acpi_handle child, acpi_handle * out_handle);
 +
 +acpi_status acpi_get_type(acpi_handle object, acpi_object_type * out_type);
 +
 +acpi_status acpi_get_id(acpi_handle object, acpi_owner_id * out_type);
 +
 +acpi_status acpi_get_parent(acpi_handle object, acpi_handle * out_handle);
++=======
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			    acpi_get_next_object(acpi_object_type type,
+ 						 acpi_handle parent,
+ 						 acpi_handle child,
+ 						 acpi_handle *out_handle))
+ 
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			    acpi_get_type(acpi_handle object,
+ 					  acpi_object_type *out_type))
+ 
+ ACPI_EXTERNAL_RETURN_STATUS(acpi_status
+ 			    acpi_get_parent(acpi_handle object,
+ 					    acpi_handle *out_handle))
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
  
  /*
   * Handler interfaces
@@@ -419,51 -771,57 +499,51 @@@ ACPI_HW_DEPENDENT_RETURN_STATUS(acpi_st
   * Resource interfaces
   */
  typedef
- acpi_status(*acpi_walk_resource_callback) (struct acpi_resource * resource,
- 					   void *context);
+ acpi_status (*acpi_walk_resource_callback) (struct acpi_resource * resource,
+ 					    void *context);
  
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_get_vendor_resource(acpi_handle device,
 -						     char *name,
 -						     struct acpi_vendor_uuid
 -						     *uuid,
 -						     struct acpi_buffer
 -						     *ret_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_get_current_resources(acpi_handle device,
 -							struct acpi_buffer
 -							*ret_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_get_possible_resources(acpi_handle device,
 -							 struct acpi_buffer
 -							 *ret_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_get_event_resources(acpi_handle device_handle,
 -						      struct acpi_buffer
 -						      *ret_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_walk_resource_buffer(struct acpi_buffer
 -						       *buffer,
 -						       acpi_walk_resource_callback
 -						       user_function,
 -						       void *context))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_walk_resources(acpi_handle device, char *name,
 -						 acpi_walk_resource_callback
 -						 user_function, void *context))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_set_current_resources(acpi_handle device,
 -							struct acpi_buffer
 -							*in_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_get_irq_routing_table(acpi_handle device,
 -							struct acpi_buffer
 -							*ret_buffer))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_resource_to_address64(struct acpi_resource
 -							*resource,
 -							struct
 -							acpi_resource_address64
 -							*out))
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			     acpi_buffer_to_resource(u8 *aml_buffer,
 -						     u16 aml_buffer_length,
 -						     struct acpi_resource
 -						     **resource_ptr))
 +acpi_status
 +acpi_get_vendor_resource(acpi_handle device,
 +			 char *name,
 +			 struct acpi_vendor_uuid *uuid,
 +			 struct acpi_buffer *ret_buffer);
 +
 +acpi_status
 +acpi_get_current_resources(acpi_handle device, struct acpi_buffer *ret_buffer);
 +
 +#ifdef ACPI_FUTURE_USAGE
 +acpi_status
 +acpi_get_possible_resources(acpi_handle device, struct acpi_buffer *ret_buffer);
 +#endif
 +
 +acpi_status
 +acpi_get_event_resources(acpi_handle device_handle,
 +			 struct acpi_buffer *ret_buffer);
 +
 +acpi_status
 +acpi_walk_resource_buffer(struct acpi_buffer *buffer,
 +			  acpi_walk_resource_callback user_function,
 +			  void *context);
 +
 +acpi_status
 +acpi_walk_resources(acpi_handle device,
 +		    char *name,
 +		    acpi_walk_resource_callback user_function, void *context);
 +
 +acpi_status
 +acpi_set_current_resources(acpi_handle device, struct acpi_buffer *in_buffer);
 +
 +acpi_status
 +acpi_get_irq_routing_table(acpi_handle device, struct acpi_buffer *ret_buffer);
 +
 +acpi_status
 +acpi_resource_to_address64(struct acpi_resource *resource,
 +			   struct acpi_resource_address64 *out);
 +
 +acpi_status
 +acpi_buffer_to_resource(u8 *aml_buffer,
 +			u16 aml_buffer_length,
 +			struct acpi_resource **resource_ptr);
  
  /*
   * Hardware (ACPI device) interfaces
@@@ -553,22 -914,55 +633,34 @@@ acpi_bios_warning(const char *module_na
  /*
   * Debug output
   */
 -ACPI_DBG_DEPENDENT_RETURN_VOID(ACPI_PRINTF_LIKE(6)
 -			       void ACPI_INTERNAL_VAR_XFACE
 -			       acpi_debug_print(u32 requested_debug_level,
 -						u32 line_number,
 -						const char *function_name,
 -						const char *module_name,
 -						u32 component_id,
 -						const char *format, ...))
 -ACPI_DBG_DEPENDENT_RETURN_VOID(ACPI_PRINTF_LIKE(6)
 -				void ACPI_INTERNAL_VAR_XFACE
 -				acpi_debug_print_raw(u32 requested_debug_level,
 -						     u32 line_number,
 -						     const char *function_name,
 -						     const char *module_name,
 -						     u32 component_id,
 -						     const char *format, ...))
 +#ifdef ACPI_DEBUG_OUTPUT
  
++<<<<<<< HEAD
 +void ACPI_INTERNAL_VAR_XFACE
 +acpi_debug_print(u32 requested_debug_level,
 +		 u32 line_number,
 +		 const char *function_name,
 +		 const char *module_name,
 +		 u32 component_id, const char *format, ...) ACPI_PRINTF_LIKE(6);
++=======
+ ACPI_DBG_DEPENDENT_RETURN_VOID(void
+ 			       acpi_trace_point(acpi_trace_event_type type,
+ 						u8 begin,
+ 						u8 *aml, char *pathname))
+ ACPI_APP_DEPENDENT_RETURN_VOID(ACPI_PRINTF_LIKE(1)
+ 				void ACPI_INTERNAL_VAR_XFACE
+ 				acpi_log_error(const char *format, ...))
+ 
+ acpi_status acpi_initialize_debugger(void);
 -
 -void acpi_terminate_debugger(void);
 -
 -/*
 - * Divergences
 - */
 -ACPI_GLOBAL(u8, acpi_gbl_permanent_mmap);
 -
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_get_table_with_size(acpi_string signature,
 -						     u32 instance,
 -						     struct acpi_table_header
 -						     **out_table,
 -						     acpi_size *tbl_size))
 -
 -ACPI_EXTERNAL_RETURN_STATUS(acpi_status
 -			    acpi_get_data_full(acpi_handle object,
 -					       acpi_object_handler handler,
 -					       void **data,
 -					       void (*callback)(void *)))
 -
 -void acpi_run_debugger(char *batch_buffer);
 -
 -void acpi_set_debugger_thread_id(acpi_thread_id thread_id);
++>>>>>>> f5c1e1c5a652 (ACPICA: Divergence: remove unwanted spaces for typedef)
 +
 +void ACPI_INTERNAL_VAR_XFACE
 +acpi_debug_print_raw(u32 requested_debug_level,
 +		     u32 line_number,
 +		     const char *function_name,
 +		     const char *module_name,
 +		     u32 component_id,
 +		     const char *format, ...) ACPI_PRINTF_LIKE(6);
 +#endif
  
  #endif				/* __ACXFACE_H__ */
* Unmerged path drivers/acpi/acpica/dbcmds.c
* Unmerged path drivers/acpi/acpica/dbconvert.c
* Unmerged path drivers/acpi/acpica/dbexec.c
* Unmerged path drivers/acpi/acpica/dbinput.c
* Unmerged path drivers/acpi/acpica/dbnames.c
* Unmerged path drivers/acpi/acpica/dbxface.c
* Unmerged path drivers/acpi/acpica/exconcat.c
* Unmerged path drivers/acpi/acpica/tbdata.c
* Unmerged path drivers/acpi/acpica/utprint.c
* Unmerged path tools/power/acpi/os_specific/service_layers/oslinuxtbl.c
* Unmerged path tools/power/acpi/os_specific/service_layers/osunixxf.c
* Unmerged path tools/power/acpi/tools/acpidump/apdump.c
diff --git a/drivers/acpi/acpica/acdebug.h b/drivers/acpi/acpica/acdebug.h
index 9feba08c29fe..ae828c456b56 100644
--- a/drivers/acpi/acpica/acdebug.h
+++ b/drivers/acpi/acpica/acdebug.h
@@ -200,7 +200,7 @@ acpi_db_display_argument_object(union acpi_operand_object *obj_desc,
  * dbexec - debugger control method execution
  */
 void
-acpi_db_execute(char *name, char **args, acpi_object_type * types, u32 flags);
+acpi_db_execute(char *name, char **args, acpi_object_type *types, u32 flags);
 
 void
 acpi_db_create_execution_threads(char *num_threads_arg,
@@ -253,7 +253,7 @@ void ACPI_SYSTEM_XFACE acpi_db_execute_thread(void *context);
 acpi_status acpi_db_user_commands(char prompt, union acpi_parse_object *op);
 
 char *acpi_db_get_next_token(char *string,
-			     char **next, acpi_object_type * return_type);
+			     char **next, acpi_object_type *return_type);
 
 /*
  * dbstats - Generation and display of ACPI table statistics
* Unmerged path drivers/acpi/acpica/acevents.h
diff --git a/drivers/acpi/acpica/acinterp.h b/drivers/acpi/acpica/acinterp.h
index 8af8c9bdeb35..d9060da317ce 100644
--- a/drivers/acpi/acpica/acinterp.h
+++ b/drivers/acpi/acpica/acinterp.h
@@ -344,7 +344,7 @@ acpi_ex_resolve_to_value(union acpi_operand_object **stack_ptr,
 acpi_status
 acpi_ex_resolve_multiple(struct acpi_walk_state *walk_state,
 			 union acpi_operand_object *operand,
-			 acpi_object_type * return_type,
+			 acpi_object_type *return_type,
 			 union acpi_operand_object **return_desc);
 
 /*
* Unmerged path drivers/acpi/acpica/aclocal.h
* Unmerged path drivers/acpi/acpica/acresrc.h
diff --git a/drivers/acpi/acpica/acutils.h b/drivers/acpi/acpica/acutils.h
index 7125ee1826be..c4b11834e836 100644
--- a/drivers/acpi/acpica/acutils.h
+++ b/drivers/acpi/acpica/acutils.h
@@ -137,16 +137,16 @@ extern FILE *acpi_gbl_output_file;
 #define ACPI_SMALL_VARIABLE_LENGTH      3
 
 typedef
-acpi_status(*acpi_walk_aml_callback) (u8 *aml,
-				      u32 length,
-				      u32 offset,
-				      u8 resource_index, void **context);
+acpi_status (*acpi_walk_aml_callback) (u8 *aml,
+				       u32 length,
+				       u32 offset,
+				       u8 resource_index, void **context);
 
 typedef
-acpi_status(*acpi_pkg_callback) (u8 object_type,
-				 union acpi_operand_object *source_object,
-				 union acpi_generic_state * state,
-				 void *context);
+acpi_status (*acpi_pkg_callback) (u8 object_type,
+				  union acpi_operand_object * source_object,
+				  union acpi_generic_state * state,
+				  void *context);
 
 struct acpi_pkg_info {
 	u8 *free_space;
@@ -456,7 +456,7 @@ union acpi_operand_object *acpi_ut_create_buffer_object(acpi_size buffer_size);
 union acpi_operand_object *acpi_ut_create_string_object(acpi_size string_size);
 
 acpi_status
-acpi_ut_get_object_size(union acpi_operand_object *obj, acpi_size * obj_length);
+acpi_ut_get_object_size(union acpi_operand_object *obj, acpi_size *obj_length);
 
 /*
  * utosi - Support for the _OSI predefined control method
@@ -575,9 +575,9 @@ acpi_ut_display_init_pathname(u8 type,
 /*
  * utownerid - Support for Table/Method Owner IDs
  */
-acpi_status acpi_ut_allocate_owner_id(acpi_owner_id * owner_id);
+acpi_status acpi_ut_allocate_owner_id(acpi_owner_id *owner_id);
 
-void acpi_ut_release_owner_id(acpi_owner_id * owner_id);
+void acpi_ut_release_owner_id(acpi_owner_id *owner_id);
 
 /*
  * utresrc
* Unmerged path drivers/acpi/acpica/dbcmds.c
* Unmerged path drivers/acpi/acpica/dbconvert.c
* Unmerged path drivers/acpi/acpica/dbexec.c
* Unmerged path drivers/acpi/acpica/dbinput.c
* Unmerged path drivers/acpi/acpica/dbnames.c
* Unmerged path drivers/acpi/acpica/dbxface.c
diff --git a/drivers/acpi/acpica/dscontrol.c b/drivers/acpi/acpica/dscontrol.c
index eb56b66444b5..7fdb65b08553 100644
--- a/drivers/acpi/acpica/dscontrol.c
+++ b/drivers/acpi/acpica/dscontrol.c
@@ -162,8 +162,8 @@ acpi_ds_exec_begin_control_op(struct acpi_walk_state *walk_state,
  ******************************************************************************/
 
 acpi_status
-acpi_ds_exec_end_control_op(struct acpi_walk_state * walk_state,
-			    union acpi_parse_object * op)
+acpi_ds_exec_end_control_op(struct acpi_walk_state *walk_state,
+			    union acpi_parse_object *op)
 {
 	acpi_status status = AE_OK;
 	union acpi_generic_state *control_state;
diff --git a/drivers/acpi/acpica/dsinit.c b/drivers/acpi/acpica/dsinit.c
index 14424200d246..d934262d5837 100644
--- a/drivers/acpi/acpica/dsinit.c
+++ b/drivers/acpi/acpica/dsinit.c
@@ -154,7 +154,7 @@ acpi_ds_init_one_object(acpi_handle obj_handle,
 
 acpi_status
 acpi_ds_initialize_objects(u32 table_index,
-			   struct acpi_namespace_node * start_node)
+			   struct acpi_namespace_node *start_node)
 {
 	acpi_status status;
 	struct acpi_init_walk_info info;
* Unmerged path drivers/acpi/acpica/dsutils.c
diff --git a/drivers/acpi/acpica/dswload.c b/drivers/acpi/acpica/dswload.c
index 95e681a36f9c..6f9290a17758 100644
--- a/drivers/acpi/acpica/dswload.c
+++ b/drivers/acpi/acpica/dswload.c
@@ -121,8 +121,8 @@ acpi_ds_init_callbacks(struct acpi_walk_state *walk_state, u32 pass_number)
  ******************************************************************************/
 
 acpi_status
-acpi_ds_load1_begin_op(struct acpi_walk_state * walk_state,
-		       union acpi_parse_object ** out_op)
+acpi_ds_load1_begin_op(struct acpi_walk_state *walk_state,
+		       union acpi_parse_object **out_op)
 {
 	union acpi_parse_object *op;
 	struct acpi_namespace_node *node;
diff --git a/drivers/acpi/acpica/dswload2.c b/drivers/acpi/acpica/dswload2.c
index b1f8f4725c23..64859c97b958 100644
--- a/drivers/acpi/acpica/dswload2.c
+++ b/drivers/acpi/acpica/dswload2.c
@@ -490,8 +490,8 @@ acpi_status acpi_ds_load2_end_op(struct acpi_walk_state *walk_state)
 
 			status =
 			    acpi_ds_create_index_field(op,
-						       (acpi_handle) arg->
-						       common.node, walk_state);
+						       (acpi_handle)arg->common.
+						       node, walk_state);
 			break;
 
 		case AML_BANK_FIELD_OP:
diff --git a/drivers/acpi/acpica/dswstate.c b/drivers/acpi/acpica/dswstate.c
index ecb12e2137ff..1b66eee3db5d 100644
--- a/drivers/acpi/acpica/dswstate.c
+++ b/drivers/acpi/acpica/dswstate.c
@@ -143,8 +143,8 @@ acpi_ds_result_pop(union acpi_operand_object **object,
  ******************************************************************************/
 
 acpi_status
-acpi_ds_result_push(union acpi_operand_object * object,
-		    struct acpi_walk_state * walk_state)
+acpi_ds_result_push(union acpi_operand_object *object,
+		    struct acpi_walk_state *walk_state)
 {
 	union acpi_generic_state *state;
 	acpi_status status;
@@ -307,7 +307,7 @@ static acpi_status acpi_ds_result_stack_pop(struct acpi_walk_state *walk_state)
  ******************************************************************************/
 
 acpi_status
-acpi_ds_obj_stack_push(void *object, struct acpi_walk_state * walk_state)
+acpi_ds_obj_stack_push(void *object, struct acpi_walk_state *walk_state)
 {
 	ACPI_FUNCTION_NAME(ds_obj_stack_push);
 
@@ -354,7 +354,7 @@ acpi_ds_obj_stack_push(void *object, struct acpi_walk_state * walk_state)
  ******************************************************************************/
 
 acpi_status
-acpi_ds_obj_stack_pop(u32 pop_count, struct acpi_walk_state * walk_state)
+acpi_ds_obj_stack_pop(u32 pop_count, struct acpi_walk_state *walk_state)
 {
 	u32 i;
 
@@ -411,7 +411,7 @@ acpi_ds_obj_stack_pop_and_delete(u32 pop_count,
 		return;
 	}
 
-	for (i = (s32) pop_count - 1; i >= 0; i--) {
+	for (i = (s32)pop_count - 1; i >= 0; i--) {
 		if (walk_state->num_operands == 0) {
 			return;
 		}
* Unmerged path drivers/acpi/acpica/evgpe.c
diff --git a/drivers/acpi/acpica/evgpeblk.c b/drivers/acpi/acpica/evgpeblk.c
index c1aa1eda26c3..12f1c3ea939d 100644
--- a/drivers/acpi/acpica/evgpeblk.c
+++ b/drivers/acpi/acpica/evgpeblk.c
@@ -210,7 +210,7 @@ acpi_ev_create_gpe_info_blocks(struct acpi_gpe_block_info *gpe_block)
 
 	/* Allocate the GPE register information block */
 
-	gpe_register_info = ACPI_ALLOCATE_ZEROED((acpi_size) gpe_block->
+	gpe_register_info = ACPI_ALLOCATE_ZEROED((acpi_size)gpe_block->
 						 register_count *
 						 sizeof(struct
 							acpi_gpe_register_info));
@@ -224,7 +224,7 @@ acpi_ev_create_gpe_info_blocks(struct acpi_gpe_block_info *gpe_block)
 	 * Allocate the GPE event_info block. There are eight distinct GPEs
 	 * per register. Initialization to zeros is sufficient.
 	 */
-	gpe_event_info = ACPI_ALLOCATE_ZEROED((acpi_size) gpe_block->gpe_count *
+	gpe_event_info = ACPI_ALLOCATE_ZEROED((acpi_size)gpe_block->gpe_count *
 					      sizeof(struct
 						     acpi_gpe_event_info));
 	if (!gpe_event_info) {
* Unmerged path drivers/acpi/acpica/evgpeutil.c
diff --git a/drivers/acpi/acpica/evhandler.c b/drivers/acpi/acpica/evhandler.c
index 068af96134b8..d743a2870b9c 100644
--- a/drivers/acpi/acpica/evhandler.c
+++ b/drivers/acpi/acpica/evhandler.c
@@ -325,7 +325,7 @@ acpi_ev_install_handler(acpi_handle obj_handle,
  ******************************************************************************/
 
 acpi_status
-acpi_ev_install_space_handler(struct acpi_namespace_node * node,
+acpi_ev_install_space_handler(struct acpi_namespace_node *node,
 			      acpi_adr_space_type space_id,
 			      acpi_adr_space_handler handler,
 			      acpi_adr_space_setup setup, void *context)
diff --git a/drivers/acpi/acpica/evmisc.c b/drivers/acpi/acpica/evmisc.c
index a9e7b62fc800..21a8ddf0aa51 100644
--- a/drivers/acpi/acpica/evmisc.c
+++ b/drivers/acpi/acpica/evmisc.c
@@ -98,8 +98,7 @@ u8 acpi_ev_is_notify_object(struct acpi_namespace_node *node)
  ******************************************************************************/
 
 acpi_status
-acpi_ev_queue_notify_request(struct acpi_namespace_node * node,
-			     u32 notify_value)
+acpi_ev_queue_notify_request(struct acpi_namespace_node *node, u32 notify_value)
 {
 	union acpi_operand_object *obj_desc;
 	union acpi_operand_object *handler_list_head = NULL;
diff --git a/drivers/acpi/acpica/evrgnini.c b/drivers/acpi/acpica/evrgnini.c
index 8354c4f7f10c..44dbaf5aa758 100644
--- a/drivers/acpi/acpica/evrgnini.c
+++ b/drivers/acpi/acpica/evrgnini.c
@@ -227,7 +227,7 @@ acpi_ev_pci_config_region_setup(acpi_handle handle,
 
 				/* Install a handler for this PCI root bridge */
 
-				status = acpi_install_address_space_handler((acpi_handle) pci_root_node, ACPI_ADR_SPACE_PCI_CONFIG, ACPI_DEFAULT_HANDLER, NULL, NULL);
+				status = acpi_install_address_space_handler((acpi_handle)pci_root_node, ACPI_ADR_SPACE_PCI_CONFIG, ACPI_DEFAULT_HANDLER, NULL, NULL);
 				if (ACPI_FAILURE(status)) {
 					if (status == AE_SAME_HANDLER) {
 						/*
diff --git a/drivers/acpi/acpica/evxfgpe.c b/drivers/acpi/acpica/evxfgpe.c
index fab40d9b3bd6..05c6e23c3c82 100644
--- a/drivers/acpi/acpica/evxfgpe.c
+++ b/drivers/acpi/acpica/evxfgpe.c
@@ -701,7 +701,7 @@ ACPI_EXPORT_SYMBOL(acpi_remove_gpe_block)
  *              the FADT-defined gpe blocks. Otherwise, the GPE block device.
  *
  ******************************************************************************/
-acpi_status acpi_get_gpe_device(u32 index, acpi_handle * gpe_device)
+acpi_status acpi_get_gpe_device(u32 index, acpi_handle *gpe_device)
 {
 	struct acpi_gpe_device_info info;
 	acpi_status status;
* Unmerged path drivers/acpi/acpica/exconcat.c
diff --git a/drivers/acpi/acpica/exconvrt.c b/drivers/acpi/acpica/exconvrt.c
index 69e4a8cc9b71..c1b02c616dbf 100644
--- a/drivers/acpi/acpica/exconvrt.c
+++ b/drivers/acpi/acpica/exconvrt.c
@@ -441,7 +441,7 @@ acpi_ex_convert_to_string(union acpi_operand_object * obj_desc,
 		 * Need enough space for one ASCII integer (plus null terminator)
 		 */
 		return_desc =
-		    acpi_ut_create_string_object((acpi_size) string_length);
+		    acpi_ut_create_string_object((acpi_size)string_length);
 		if (!return_desc) {
 			return_ACPI_STATUS(AE_NO_MEMORY);
 		}
@@ -520,7 +520,7 @@ acpi_ex_convert_to_string(union acpi_operand_object * obj_desc,
 		}
 
 		return_desc =
-		    acpi_ut_create_string_object((acpi_size) string_length);
+		    acpi_ut_create_string_object((acpi_size)string_length);
 		if (!return_desc) {
 			return_ACPI_STATUS(AE_NO_MEMORY);
 		}
diff --git a/drivers/acpi/acpica/excreate.c b/drivers/acpi/acpica/excreate.c
index 269e81d86ef4..4376f6ba0020 100644
--- a/drivers/acpi/acpica/excreate.c
+++ b/drivers/acpi/acpica/excreate.c
@@ -389,7 +389,7 @@ acpi_status acpi_ex_create_processor(struct acpi_walk_state *walk_state)
 	obj_desc->processor.proc_id = (u8) operand[1]->integer.value;
 	obj_desc->processor.length = (u8) operand[3]->integer.value;
 	obj_desc->processor.address =
-	    (acpi_io_address) operand[2]->integer.value;
+	    (acpi_io_address)operand[2]->integer.value;
 
 	/* Install the processor object in the parent Node */
 
* Unmerged path drivers/acpi/acpica/exfield.c
diff --git a/drivers/acpi/acpica/exfldio.c b/drivers/acpi/acpica/exfldio.c
index 7e0afe72487e..56e85155ecd9 100644
--- a/drivers/acpi/acpica/exfldio.c
+++ b/drivers/acpi/acpica/exfldio.c
@@ -170,7 +170,7 @@ acpi_ex_setup_region(union acpi_operand_object *obj_desc,
 			if (ACPI_ROUND_UP(rgn_desc->region.length,
 					  obj_desc->common_field.
 					  access_byte_width) >=
-			    ((acpi_size) obj_desc->common_field.
+			    ((acpi_size)obj_desc->common_field.
 			     base_byte_offset +
 			     obj_desc->common_field.access_byte_width +
 			     field_datum_byte_offset)) {
* Unmerged path drivers/acpi/acpica/exoparg3.c
diff --git a/drivers/acpi/acpica/exoparg6.c b/drivers/acpi/acpica/exoparg6.c
index 879b6cd8319c..3e4bf99bf4ce 100644
--- a/drivers/acpi/acpica/exoparg6.c
+++ b/drivers/acpi/acpica/exoparg6.c
@@ -207,7 +207,7 @@ acpi_ex_do_match(u32 match_op,
  *
  ******************************************************************************/
 
-acpi_status acpi_ex_opcode_6A_0T_1R(struct acpi_walk_state * walk_state)
+acpi_status acpi_ex_opcode_6A_0T_1R(struct acpi_walk_state *walk_state)
 {
 	union acpi_operand_object **operand = &walk_state->operands[0];
 	union acpi_operand_object *return_desc = NULL;
diff --git a/drivers/acpi/acpica/exregion.c b/drivers/acpi/acpica/exregion.c
index 303429bb4d5d..4177e592a23b 100644
--- a/drivers/acpi/acpica/exregion.c
+++ b/drivers/acpi/acpica/exregion.c
@@ -326,15 +326,15 @@ acpi_ex_system_io_space_handler(u32 function,
 	switch (function) {
 	case ACPI_READ:
 
-		status = acpi_hw_read_port((acpi_io_address) address,
+		status = acpi_hw_read_port((acpi_io_address)address,
 					   &value32, bit_width);
 		*value = value32;
 		break;
 
 	case ACPI_WRITE:
 
-		status = acpi_hw_write_port((acpi_io_address) address,
-					    (u32) * value, bit_width);
+		status = acpi_hw_write_port((acpi_io_address)address,
+					    (u32)*value, bit_width);
 		break;
 
 	default:
diff --git a/drivers/acpi/acpica/exresnte.c b/drivers/acpi/acpica/exresnte.c
index acd34f599313..979f80b6e285 100644
--- a/drivers/acpi/acpica/exresnte.c
+++ b/drivers/acpi/acpica/exresnte.c
@@ -93,7 +93,7 @@ acpi_ex_resolve_node_to_value(struct acpi_namespace_node **object_ptr,
 	 */
 	node = *object_ptr;
 	source_desc = acpi_ns_get_attached_object(node);
-	entry_type = acpi_ns_get_type((acpi_handle) node);
+	entry_type = acpi_ns_get_type((acpi_handle)node);
 
 	ACPI_DEBUG_PRINT((ACPI_DB_EXEC, "Entry=%p SourceDesc=%p [%s]\n",
 			  node, source_desc,
@@ -106,7 +106,7 @@ acpi_ex_resolve_node_to_value(struct acpi_namespace_node **object_ptr,
 
 		node = ACPI_CAST_PTR(struct acpi_namespace_node, node->object);
 		source_desc = acpi_ns_get_attached_object(node);
-		entry_type = acpi_ns_get_type((acpi_handle) node);
+		entry_type = acpi_ns_get_type((acpi_handle)node);
 		*object_ptr = node;
 	}
 
diff --git a/drivers/acpi/acpica/exresolv.c b/drivers/acpi/acpica/exresolv.c
index ac04278ad28f..873617944977 100644
--- a/drivers/acpi/acpica/exresolv.c
+++ b/drivers/acpi/acpica/exresolv.c
@@ -334,7 +334,7 @@ acpi_ex_resolve_object_to_value(union acpi_operand_object **stack_ptr,
 acpi_status
 acpi_ex_resolve_multiple(struct acpi_walk_state *walk_state,
 			 union acpi_operand_object *operand,
-			 acpi_object_type * return_type,
+			 acpi_object_type *return_type,
 			 union acpi_operand_object **return_desc)
 {
 	union acpi_operand_object *obj_desc = (void *)operand;
diff --git a/drivers/acpi/acpica/exresop.c b/drivers/acpi/acpica/exresop.c
index 00e5af7129c1..00a3481fcba6 100644
--- a/drivers/acpi/acpica/exresop.c
+++ b/drivers/acpi/acpica/exresop.c
@@ -131,8 +131,8 @@ acpi_ex_check_object_type(acpi_object_type type_needed,
 
 acpi_status
 acpi_ex_resolve_operands(u16 opcode,
-			 union acpi_operand_object ** stack_ptr,
-			 struct acpi_walk_state * walk_state)
+			 union acpi_operand_object **stack_ptr,
+			 struct acpi_walk_state *walk_state)
 {
 	union acpi_operand_object *obj_desc;
 	acpi_status status = AE_OK;
* Unmerged path drivers/acpi/acpica/exstorob.c
* Unmerged path drivers/acpi/acpica/hwgpe.c
* Unmerged path drivers/acpi/acpica/hwxface.c
* Unmerged path drivers/acpi/acpica/nsconvert.c
* Unmerged path drivers/acpi/acpica/nsnames.c
diff --git a/drivers/acpi/acpica/nsobject.c b/drivers/acpi/acpica/nsobject.c
index 7a736f4d1fd8..93bf07c22eab 100644
--- a/drivers/acpi/acpica/nsobject.c
+++ b/drivers/acpi/acpica/nsobject.c
@@ -383,7 +383,7 @@ acpi_ns_attach_data(struct acpi_namespace_node *node,
  ******************************************************************************/
 
 acpi_status
-acpi_ns_detach_data(struct acpi_namespace_node * node,
+acpi_ns_detach_data(struct acpi_namespace_node *node,
 		    acpi_object_handler handler)
 {
 	union acpi_operand_object *obj_desc;
@@ -428,7 +428,7 @@ acpi_ns_detach_data(struct acpi_namespace_node * node,
  ******************************************************************************/
 
 acpi_status
-acpi_ns_get_attached_data(struct acpi_namespace_node * node,
+acpi_ns_get_attached_data(struct acpi_namespace_node *node,
 			  acpi_object_handler handler, void **data)
 {
 	union acpi_operand_object *obj_desc;
diff --git a/drivers/acpi/acpica/nsrepair.c b/drivers/acpi/acpica/nsrepair.c
index f8e71ea60319..ea00c3bfce8f 100644
--- a/drivers/acpi/acpica/nsrepair.c
+++ b/drivers/acpi/acpica/nsrepair.c
@@ -374,7 +374,7 @@ static const struct acpi_simple_repair_info *acpi_ns_match_simple_repair(struct
  ******************************************************************************/
 
 acpi_status
-acpi_ns_repair_null_element(struct acpi_evaluate_info * info,
+acpi_ns_repair_null_element(struct acpi_evaluate_info *info,
 			    u32 expected_btypes,
 			    u32 package_index,
 			    union acpi_operand_object **return_object_ptr)
diff --git a/drivers/acpi/acpica/nsrepair2.c b/drivers/acpi/acpica/nsrepair2.c
index c84603ee83ae..d4780d555fd4 100644
--- a/drivers/acpi/acpica/nsrepair2.c
+++ b/drivers/acpi/acpica/nsrepair2.c
@@ -54,9 +54,9 @@ ACPI_MODULE_NAME("nsrepair2")
  * be repaired on a per-name basis.
  */
 typedef
-acpi_status(*acpi_repair_function) (struct acpi_evaluate_info * info,
-				    union acpi_operand_object
-				    **return_object_ptr);
+acpi_status (*acpi_repair_function) (struct acpi_evaluate_info * info,
+				     union acpi_operand_object **
+				     return_object_ptr);
 
 typedef struct acpi_repair_info {
 	char name[ACPI_NAME_SIZE];
diff --git a/drivers/acpi/acpica/nsutils.c b/drivers/acpi/acpica/nsutils.c
index 08c0b5beec88..a083d3aee16f 100644
--- a/drivers/acpi/acpica/nsutils.c
+++ b/drivers/acpi/acpica/nsutils.c
@@ -271,11 +271,11 @@ acpi_status acpi_ns_build_internal_name(struct acpi_namestring_info *info)
 			result = &internal_name[i];
 		} else if (num_segments == 2) {
 			internal_name[i] = AML_DUAL_NAME_PREFIX;
-			result = &internal_name[(acpi_size) i + 1];
+			result = &internal_name[(acpi_size)i + 1];
 		} else {
 			internal_name[i] = AML_MULTI_NAME_PREFIX_OP;
-			internal_name[(acpi_size) i + 1] = (char)num_segments;
-			result = &internal_name[(acpi_size) i + 2];
+			internal_name[(acpi_size)i + 1] = (char)num_segments;
+			result = &internal_name[(acpi_size)i + 2];
 		}
 	}
 
@@ -456,7 +456,7 @@ acpi_ns_externalize_name(u32 internal_name_length,
 
 			names_index = prefix_length + 2;
 			num_segments = (u8)
-			    internal_name[(acpi_size) prefix_length + 1];
+			    internal_name[(acpi_size)prefix_length + 1];
 			break;
 
 		case AML_DUAL_NAME_PREFIX:
diff --git a/drivers/acpi/acpica/nsxfeval.c b/drivers/acpi/acpica/nsxfeval.c
index 3a5bd348ba8d..296b24bfe5cc 100644
--- a/drivers/acpi/acpica/nsxfeval.c
+++ b/drivers/acpi/acpica/nsxfeval.c
@@ -253,7 +253,7 @@ acpi_evaluate_object(acpi_handle handle,
 		 * Allocate a new parameter block for the internal objects
 		 * Add 1 to count to allow for null terminated internal list
 		 */
-		info->parameters = ACPI_ALLOCATE_ZEROED(((acpi_size) info->
+		info->parameters = ACPI_ALLOCATE_ZEROED(((acpi_size)info->
 							 param_count +
 							 1) * sizeof(void *));
 		if (!info->parameters) {
diff --git a/drivers/acpi/acpica/nsxfname.c b/drivers/acpi/acpica/nsxfname.c
index c86094fcab7b..f059c2663dfb 100644
--- a/drivers/acpi/acpica/nsxfname.c
+++ b/drivers/acpi/acpica/nsxfname.c
@@ -78,7 +78,7 @@ static char *acpi_ns_copy_device_id(struct acpi_pnp_device_id *dest,
 
 acpi_status
 acpi_get_handle(acpi_handle parent,
-		acpi_string pathname, acpi_handle * ret_handle)
+		acpi_string pathname, acpi_handle *ret_handle)
 {
 	acpi_status status;
 	struct acpi_namespace_node *node = NULL;
@@ -155,7 +155,7 @@ ACPI_EXPORT_SYMBOL(acpi_get_handle)
  *
  ******************************************************************************/
 acpi_status
-acpi_get_name(acpi_handle handle, u32 name_type, struct acpi_buffer * buffer)
+acpi_get_name(acpi_handle handle, u32 name_type, struct acpi_buffer *buffer)
 {
 	acpi_status status;
 	struct acpi_namespace_node *node;
@@ -431,7 +431,7 @@ acpi_get_object_info(acpi_handle handle,
 		/* Point past the CID PNP_DEVICE_ID array */
 
 		next_id_string +=
-		    ((acpi_size) cid_list->count *
+		    ((acpi_size)cid_list->count *
 		     sizeof(struct acpi_pnp_device_id));
 	}
 
diff --git a/drivers/acpi/acpica/nsxfobj.c b/drivers/acpi/acpica/nsxfobj.c
index 94e961cf6294..dfd75e439b5d 100644
--- a/drivers/acpi/acpica/nsxfobj.c
+++ b/drivers/acpi/acpica/nsxfobj.c
@@ -107,7 +107,7 @@ ACPI_EXPORT_SYMBOL(acpi_get_id)
  * DESCRIPTION: This routine returns the type associatd with a particular handle
  *
  ******************************************************************************/
-acpi_status acpi_get_type(acpi_handle handle, acpi_object_type * ret_type)
+acpi_status acpi_get_type(acpi_handle handle, acpi_object_type *ret_type)
 {
 	struct acpi_namespace_node *node;
 	acpi_status status;
@@ -161,7 +161,7 @@ ACPI_EXPORT_SYMBOL(acpi_get_type)
  *              Handle.
  *
  ******************************************************************************/
-acpi_status acpi_get_parent(acpi_handle handle, acpi_handle * ret_handle)
+acpi_status acpi_get_parent(acpi_handle handle, acpi_handle *ret_handle)
 {
 	struct acpi_namespace_node *node;
 	struct acpi_namespace_node *parent_node;
@@ -229,7 +229,7 @@ ACPI_EXPORT_SYMBOL(acpi_get_parent)
 acpi_status
 acpi_get_next_object(acpi_object_type type,
 		     acpi_handle parent,
-		     acpi_handle child, acpi_handle * ret_handle)
+		     acpi_handle child, acpi_handle *ret_handle)
 {
 	acpi_status status;
 	struct acpi_namespace_node *node;
diff --git a/drivers/acpi/acpica/psargs.c b/drivers/acpi/acpica/psargs.c
index 91a5a69db80c..56f153338715 100644
--- a/drivers/acpi/acpica/psargs.c
+++ b/drivers/acpi/acpica/psargs.c
@@ -87,7 +87,7 @@ acpi_ps_get_next_package_length(struct acpi_parse_state *parser_state)
 	 * used to encode the package length, either 0,1,2, or 3
 	 */
 	byte_count = (aml[0] >> 6);
-	parser_state->aml += ((acpi_size) byte_count + 1);
+	parser_state->aml += ((acpi_size)byte_count + 1);
 
 	/* Get bytes 3, 2, 1 as needed */
 
diff --git a/drivers/acpi/acpica/psparse.c b/drivers/acpi/acpica/psparse.c
index 86198a9139b5..04c1aabbdfa0 100644
--- a/drivers/acpi/acpica/psparse.c
+++ b/drivers/acpi/acpica/psparse.c
@@ -130,8 +130,8 @@ u16 acpi_ps_peek_opcode(struct acpi_parse_state * parser_state)
  ******************************************************************************/
 
 acpi_status
-acpi_ps_complete_this_op(struct acpi_walk_state * walk_state,
-			 union acpi_parse_object * op)
+acpi_ps_complete_this_op(struct acpi_walk_state *walk_state,
+			 union acpi_parse_object *op)
 {
 	union acpi_parse_object *prev;
 	union acpi_parse_object *next;
* Unmerged path drivers/acpi/acpica/rscalc.c
* Unmerged path drivers/acpi/acpica/rscreate.c
diff --git a/drivers/acpi/acpica/rsmisc.c b/drivers/acpi/acpica/rsmisc.c
index 80d12994e0d0..95561738dab0 100644
--- a/drivers/acpi/acpica/rsmisc.c
+++ b/drivers/acpi/acpica/rsmisc.c
@@ -87,7 +87,7 @@ acpi_rs_convert_aml_to_resource(struct acpi_resource *resource,
 		return_ACPI_STATUS(AE_BAD_PARAMETER);
 	}
 
-	if (((acpi_size) resource) & 0x3) {
+	if (((acpi_size)resource) & 0x3) {
 
 		/* Each internal resource struct is expected to be 32-bit aligned */
 
diff --git a/drivers/acpi/acpica/rsutils.c b/drivers/acpi/acpica/rsutils.c
index 480b6b40c5ea..305e318cc4df 100644
--- a/drivers/acpi/acpica/rsutils.c
+++ b/drivers/acpi/acpica/rsutils.c
@@ -339,7 +339,7 @@ acpi_rs_get_resource_source(acpi_rs_length resource_length,
 	 * Note: Some resource descriptors will have an additional null, so
 	 * we add 1 to the minimum length.
 	 */
-	if (total_length > (acpi_rsdesc_size) (minimum_length + 1)) {
+	if (total_length > (acpi_rsdesc_size)(minimum_length + 1)) {
 
 		/* Get the resource_source_index */
 
@@ -378,7 +378,7 @@ acpi_rs_get_resource_source(acpi_rs_length resource_length,
 				   ACPI_CAST_PTR(char,
 						 &aml_resource_source[1]));
 
-		return ((acpi_rs_length) total_length);
+		return ((acpi_rs_length)total_length);
 	}
 
 	/* resource_source is not present */
@@ -407,9 +407,9 @@ acpi_rs_get_resource_source(acpi_rs_length resource_length,
  ******************************************************************************/
 
 acpi_rsdesc_size
-acpi_rs_set_resource_source(union aml_resource * aml,
+acpi_rs_set_resource_source(union aml_resource *aml,
 			    acpi_rs_length minimum_length,
-			    struct acpi_resource_source * resource_source)
+			    struct acpi_resource_source *resource_source)
 {
 	u8 *aml_resource_source;
 	acpi_rsdesc_size descriptor_length;
@@ -467,8 +467,8 @@ acpi_rs_set_resource_source(union aml_resource * aml,
  ******************************************************************************/
 
 acpi_status
-acpi_rs_get_prt_method_data(struct acpi_namespace_node * node,
-			    struct acpi_buffer * ret_buffer)
+acpi_rs_get_prt_method_data(struct acpi_namespace_node *node,
+			    struct acpi_buffer *ret_buffer)
 {
 	union acpi_operand_object *obj_desc;
 	acpi_status status;
diff --git a/drivers/acpi/acpica/rsxface.c b/drivers/acpi/acpica/rsxface.c
index f4dfbbe9af94..66cbb2c420b2 100644
--- a/drivers/acpi/acpica/rsxface.c
+++ b/drivers/acpi/acpica/rsxface.c
@@ -433,8 +433,8 @@ ACPI_EXPORT_SYMBOL(acpi_resource_to_address64)
 acpi_status
 acpi_get_vendor_resource(acpi_handle device_handle,
 			 char *name,
-			 struct acpi_vendor_uuid * uuid,
-			 struct acpi_buffer * ret_buffer)
+			 struct acpi_vendor_uuid *uuid,
+			 struct acpi_buffer *ret_buffer)
 {
 	struct acpi_vendor_walk_info info;
 	acpi_status status;
@@ -539,7 +539,7 @@ acpi_rs_match_vendor_resource(struct acpi_resource *resource, void *context)
  ******************************************************************************/
 
 acpi_status
-acpi_walk_resource_buffer(struct acpi_buffer * buffer,
+acpi_walk_resource_buffer(struct acpi_buffer *buffer,
 			  acpi_walk_resource_callback user_function,
 			  void *context)
 {
* Unmerged path drivers/acpi/acpica/tbdata.c
* Unmerged path drivers/acpi/acpica/tbfadt.c
* Unmerged path drivers/acpi/acpica/tbutils.c
* Unmerged path drivers/acpi/acpica/tbxface.c
* Unmerged path drivers/acpi/acpica/tbxfroot.c
diff --git a/drivers/acpi/acpica/utalloc.c b/drivers/acpi/acpica/utalloc.c
index d84479610971..f8057be3dcfb 100644
--- a/drivers/acpi/acpica/utalloc.c
+++ b/drivers/acpi/acpica/utalloc.c
@@ -231,7 +231,7 @@ acpi_status acpi_ut_delete_caches(void)
  *
  ******************************************************************************/
 
-acpi_status acpi_ut_validate_buffer(struct acpi_buffer * buffer)
+acpi_status acpi_ut_validate_buffer(struct acpi_buffer *buffer)
 {
 
 	/* Obviously, the structure pointer must be valid */
@@ -272,8 +272,7 @@ acpi_status acpi_ut_validate_buffer(struct acpi_buffer * buffer)
  ******************************************************************************/
 
 acpi_status
-acpi_ut_initialize_buffer(struct acpi_buffer * buffer,
-			  acpi_size required_length)
+acpi_ut_initialize_buffer(struct acpi_buffer *buffer, acpi_size required_length)
 {
 	acpi_size input_buffer_length;
 
* Unmerged path drivers/acpi/acpica/utbuffer.c
diff --git a/drivers/acpi/acpica/utcache.c b/drivers/acpi/acpica/utcache.c
index a877a9647fd9..58d6e448c497 100644
--- a/drivers/acpi/acpica/utcache.c
+++ b/drivers/acpi/acpica/utcache.c
@@ -105,7 +105,7 @@ acpi_os_create_cache(char *cache_name,
  *
  ******************************************************************************/
 
-acpi_status acpi_os_purge_cache(struct acpi_memory_list * cache)
+acpi_status acpi_os_purge_cache(struct acpi_memory_list *cache)
 {
 	void *next;
 	acpi_status status;
@@ -151,7 +151,7 @@ acpi_status acpi_os_purge_cache(struct acpi_memory_list * cache)
  *
  ******************************************************************************/
 
-acpi_status acpi_os_delete_cache(struct acpi_memory_list * cache)
+acpi_status acpi_os_delete_cache(struct acpi_memory_list *cache)
 {
 	acpi_status status;
 
@@ -184,8 +184,7 @@ acpi_status acpi_os_delete_cache(struct acpi_memory_list * cache)
  *
  ******************************************************************************/
 
-acpi_status
-acpi_os_release_object(struct acpi_memory_list * cache, void *object)
+acpi_status acpi_os_release_object(struct acpi_memory_list *cache, void *object)
 {
 	acpi_status status;
 
* Unmerged path drivers/acpi/acpica/utcopy.c
* Unmerged path drivers/acpi/acpica/utids.c
diff --git a/drivers/acpi/acpica/utmath.c b/drivers/acpi/acpica/utmath.c
index 909fe66e1934..089acccae6e0 100644
--- a/drivers/acpi/acpica/utmath.c
+++ b/drivers/acpi/acpica/utmath.c
@@ -234,8 +234,8 @@ acpi_ut_divide(u64 in_dividend,
 			}
 
 			remainder.full = remainder.full - dividend.full;
-			remainder.part.hi = (u32) - ((s32) remainder.part.hi);
-			remainder.part.lo = (u32) - ((s32) remainder.part.lo);
+			remainder.part.hi = (u32)-((s32)remainder.part.hi);
+			remainder.part.lo = (u32)-((s32)remainder.part.lo);
 
 			if (remainder.part.lo) {
 				remainder.part.hi--;
* Unmerged path drivers/acpi/acpica/utobject.c
diff --git a/drivers/acpi/acpica/utosi.c b/drivers/acpi/acpica/utosi.c
index bc8f5a2af0d4..08934ff41441 100644
--- a/drivers/acpi/acpica/utosi.c
+++ b/drivers/acpi/acpica/utosi.c
@@ -126,7 +126,7 @@ acpi_status acpi_ut_initialize_interfaces(void)
 	     i < (ACPI_ARRAY_LENGTH(acpi_default_supported_interfaces) - 1);
 	     i++) {
 		acpi_default_supported_interfaces[i].next =
-		    &acpi_default_supported_interfaces[(acpi_size) i + 1];
+		    &acpi_default_supported_interfaces[(acpi_size)i + 1];
 	}
 
 	acpi_os_release_mutex(acpi_gbl_osi_mutex);
@@ -321,7 +321,7 @@ struct acpi_interface_info *acpi_ut_get_interface(acpi_string interface_name)
  *
  ******************************************************************************/
 
-acpi_status acpi_ut_osi_implementation(struct acpi_walk_state * walk_state)
+acpi_status acpi_ut_osi_implementation(struct acpi_walk_state *walk_state)
 {
 	union acpi_operand_object *string_desc;
 	union acpi_operand_object *return_desc;
diff --git a/drivers/acpi/acpica/utownerid.c b/drivers/acpi/acpica/utownerid.c
index 835340b26d37..0f7071611497 100644
--- a/drivers/acpi/acpica/utownerid.c
+++ b/drivers/acpi/acpica/utownerid.c
@@ -61,7 +61,7 @@ ACPI_MODULE_NAME("utownerid")
  *              when the method exits or the table is unloaded.
  *
  ******************************************************************************/
-acpi_status acpi_ut_allocate_owner_id(acpi_owner_id * owner_id)
+acpi_status acpi_ut_allocate_owner_id(acpi_owner_id *owner_id)
 {
 	u32 i;
 	u32 j;
@@ -122,7 +122,7 @@ acpi_status acpi_ut_allocate_owner_id(acpi_owner_id * owner_id)
 				 * permanently allocated (prevents +1 overflow)
 				 */
 				*owner_id =
-				    (acpi_owner_id) ((k + 1) + ACPI_MUL_32(j));
+				    (acpi_owner_id)((k + 1) + ACPI_MUL_32(j));
 
 				ACPI_DEBUG_PRINT((ACPI_DB_VALUES,
 						  "Allocated OwnerId: %2.2X\n",
@@ -167,7 +167,7 @@ acpi_status acpi_ut_allocate_owner_id(acpi_owner_id * owner_id)
  *
  ******************************************************************************/
 
-void acpi_ut_release_owner_id(acpi_owner_id * owner_id_ptr)
+void acpi_ut_release_owner_id(acpi_owner_id *owner_id_ptr)
 {
 	acpi_owner_id owner_id = *owner_id_ptr;
 	acpi_status status;
* Unmerged path drivers/acpi/acpica/utprint.c
diff --git a/drivers/acpi/acpica/utstring.c b/drivers/acpi/acpica/utstring.c
index 9edb65f516a6..9fd82baaf9e4 100644
--- a/drivers/acpi/acpica/utstring.c
+++ b/drivers/acpi/acpica/utstring.c
@@ -410,7 +410,7 @@ void acpi_ut_print_string(char *string, u8 max_length)
 			} else {
 				/* All others will be Hex escapes */
 
-				acpi_os_printf("\\x%2.2X", (s32) string[i]);
+				acpi_os_printf("\\x%2.2X", (s32)string[i]);
 			}
 			break;
 		}
diff --git a/drivers/acpi/acpica/utxface.c b/drivers/acpi/acpica/utxface.c
index 71911d7853df..85b0d9bb7e60 100644
--- a/drivers/acpi/acpica/utxface.c
+++ b/drivers/acpi/acpica/utxface.c
@@ -151,7 +151,7 @@ ACPI_EXPORT_SYMBOL(acpi_subsystem_status)
  *              and the value of out_buffer is undefined.
  *
  ******************************************************************************/
-acpi_status acpi_get_system_info(struct acpi_buffer * out_buffer)
+acpi_status acpi_get_system_info(struct acpi_buffer *out_buffer)
 {
 	struct acpi_system_info *info_ptr;
 	acpi_status status;
@@ -442,7 +442,7 @@ ACPI_EXPORT_SYMBOL(acpi_check_address_range)
  ******************************************************************************/
 acpi_status
 acpi_decode_pld_buffer(u8 *in_buffer,
-		       acpi_size length, struct acpi_pld_info ** return_buffer)
+		       acpi_size length, struct acpi_pld_info **return_buffer)
 {
 	struct acpi_pld_info *pld_info;
 	u32 *buffer = ACPI_CAST_PTR(u32, in_buffer);
* Unmerged path include/acpi/acpiosxf.h
* Unmerged path include/acpi/acpixf.h
diff --git a/include/acpi/actypes.h b/include/acpi/actypes.h
index 90953bd39053..d18bb2ab46c7 100644
--- a/include/acpi/actypes.h
+++ b/include/acpi/actypes.h
@@ -848,7 +848,7 @@ typedef u8 acpi_adr_space_type;
 
 /* Sleep function dispatch */
 
-typedef acpi_status(*acpi_sleep_function) (u8 sleep_state);
+typedef acpi_status (*acpi_sleep_function) (u8 sleep_state);
 
 struct acpi_sleep_functions {
 	acpi_sleep_function legacy_function;
@@ -1007,20 +1007,21 @@ void (*acpi_notify_handler) (acpi_handle device, u32 value, void *context);
 typedef
 void (*acpi_object_handler) (acpi_handle object, void *data);
 
-typedef acpi_status(*acpi_init_handler) (acpi_handle object, u32 function);
+typedef
+acpi_status (*acpi_init_handler) (acpi_handle object, u32 function);
 
 #define ACPI_INIT_DEVICE_INI        1
 
 typedef
-acpi_status(*acpi_exception_handler) (acpi_status aml_status,
-				      acpi_name name,
-				      u16 opcode,
-				      u32 aml_offset, void *context);
+acpi_status (*acpi_exception_handler) (acpi_status aml_status,
+				       acpi_name name,
+				       u16 opcode,
+				       u32 aml_offset, void *context);
 
 /* Table Event handler (Load, load_table, etc.) and types */
 
 typedef
-acpi_status(*acpi_table_handler) (u32 event, void *table, void *context);
+acpi_status (*acpi_table_handler) (u32 event, void *table, void *context);
 
 #define ACPI_TABLE_LOAD             0x0
 #define ACPI_TABLE_UNLOAD           0x1
@@ -1029,12 +1030,12 @@ acpi_status(*acpi_table_handler) (u32 event, void *table, void *context);
 /* Address Spaces (For Operation Regions) */
 
 typedef
-acpi_status(*acpi_adr_space_handler) (u32 function,
-				      acpi_physical_address address,
-				      u32 bit_width,
-				      u64 *value,
-				      void *handler_context,
-				      void *region_context);
+acpi_status (*acpi_adr_space_handler) (u32 function,
+				       acpi_physical_address address,
+				       u32 bit_width,
+				       u64 *value,
+				       void *handler_context,
+				       void *region_context);
 
 #define ACPI_DEFAULT_HANDLER            NULL
 
@@ -1047,18 +1048,18 @@ struct acpi_connection_info {
 };
 
 typedef
-acpi_status(*acpi_adr_space_setup) (acpi_handle region_handle,
-				    u32 function,
-				    void *handler_context,
-				    void **region_context);
+acpi_status (*acpi_adr_space_setup) (acpi_handle region_handle,
+				     u32 function,
+				     void *handler_context,
+				     void **region_context);
 
 #define ACPI_REGION_ACTIVATE    0
 #define ACPI_REGION_DEACTIVATE  1
 
 typedef
-acpi_status(*acpi_walk_callback) (acpi_handle object,
-				  u32 nesting_level,
-				  void *context, void **return_value);
+acpi_status (*acpi_walk_callback) (acpi_handle object,
+				   u32 nesting_level,
+				   void *context, void **return_value);
 
 typedef
 u32 (*acpi_interface_handler) (acpi_string interface_name, u32 supported);
* Unmerged path tools/power/acpi/os_specific/service_layers/oslinuxtbl.c
* Unmerged path tools/power/acpi/os_specific/service_layers/osunixxf.c
* Unmerged path tools/power/acpi/tools/acpidump/apdump.c
