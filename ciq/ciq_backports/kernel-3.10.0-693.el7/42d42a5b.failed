SUNRPC: Small optimisation of client receive

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Trond Myklebust <trond.myklebust@primarydata.com>
commit 42d42a5b0cd263757f8e519debbc744fdaefdaf7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/42d42a5b.failed

Do not queue the client receive work if we're still processing.

	Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
(cherry picked from commit 42d42a5b0cd263757f8e519debbc744fdaefdaf7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtsock.c
diff --cc net/sunrpc/xprtsock.c
index 90ddaee8ee0a,2f2178027761..000000000000
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@@ -1055,10 -1054,13 +1066,18 @@@ static void xs_udp_data_receive(struct 
  		goto out;
  	for (;;) {
  		skb = skb_recv_datagram(sk, 0, 1, &err);
- 		if (skb == NULL)
+ 		if (skb != NULL) {
+ 			xs_udp_data_read_skb(&transport->xprt, sk, skb);
+ 			skb_free_datagram(sk, skb);
+ 			continue;
+ 		}
+ 		if (!test_and_clear_bit(XPRT_SOCK_DATA_READY, &transport->sock_state))
  			break;
++<<<<<<< HEAD
 +		xs_udp_data_read_skb(&transport->xprt, sk, skb);
 +		skb_free_datagram_locked(sk, skb);
++=======
++>>>>>>> 42d42a5b0cd2 (SUNRPC: Small optimisation of client receive)
  	}
  out:
  	mutex_unlock(&transport->recv_mutex);
diff --git a/include/linux/sunrpc/xprtsock.h b/include/linux/sunrpc/xprtsock.h
index 7f5230dde7d0..facbda48af62 100644
--- a/include/linux/sunrpc/xprtsock.h
+++ b/include/linux/sunrpc/xprtsock.h
@@ -80,6 +80,7 @@ struct sock_xprt {
 #define TCP_RPC_REPLY		(1UL << 6)
 
 #define XPRT_SOCK_CONNECTING	1U
+#define XPRT_SOCK_DATA_READY	(2)
 
 #endif /* __KERNEL__ */
 
* Unmerged path net/sunrpc/xprtsock.c
