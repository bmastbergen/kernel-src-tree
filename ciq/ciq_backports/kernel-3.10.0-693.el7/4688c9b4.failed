EDAC, amd64: Don't treat ECC disabled as failure

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit 4688c9b42dd2040673a1c2208a1008822b07ee4a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4688c9b4.failed

Having ECC disabled on a node doesn't necessarily mean that it's
disabled for the entire system. So let's return a non-failing code when
ECC is disabled on a node. This way we can skip initialization for the
node but still continue with the remaining nodes.

After probing all instances, make sure we have at least one MC device
allocated.

This issue is seen and fix tested on Fam15h and Fam17h MCM systems.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/1485537863-2707-8-git-send-email-Yazen.Ghannam@amd.com
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 4688c9b42dd2040673a1c2208a1008822b07ee4a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/amd64_edac.c
diff --cc drivers/edac/amd64_edac.c
index d316481f3bd6,565dc52dbb6f..000000000000
--- a/drivers/edac/amd64_edac.c
+++ b/drivers/edac/amd64_edac.c
@@@ -3129,20 -3454,41 +3129,40 @@@ static int __init amd64_edac_init(void
  	if (!msrs)
  		goto err_free;
  
 -	for (i = 0; i < amd_nb_num(); i++) {
 -		err = probe_one_instance(i);
 -		if (err) {
 -			/* unwind properly */
 -			while (--i >= 0)
 -				remove_one_instance(i);
 +	err = pci_register_driver(&amd64_pci_driver);
 +	if (err)
 +		goto err_pci;
  
++<<<<<<< HEAD
 +	err = -ENODEV;
 +	if (!atomic_read(&drv_instances))
 +		goto err_no_instances;
++=======
+ 			goto err_pci;
+ 		}
+ 	}
+ 
+ 	if (!edac_has_mcs()) {
+ 		err = -ENODEV;
+ 		goto err_pci;
+ 	}
+ 
+ 	/* register stuff with EDAC MCE */
+ 	if (report_gart_errors)
+ 		amd_report_gart_errors(true);
+ 
+ 	if (boot_cpu_data.x86 >= 0x17)
+ 		amd_register_ecc_decoder(decode_umc_error);
+ 	else
+ 		amd_register_ecc_decoder(decode_bus_error);
++>>>>>>> 4688c9b42dd2 (EDAC, amd64: Don't treat ECC disabled as failure)
  
  	setup_pci_device();
 -
 -#ifdef CONFIG_X86_32
 -	amd64_err("%s on 32-bit is unsupported. USE AT YOUR OWN RISK!\n", EDAC_MOD_STR);
 -#endif
 -
 -	printk(KERN_INFO "AMD64 EDAC driver v%s\n", EDAC_AMD64_VERSION);
 -
  	return 0;
  
 +err_no_instances:
 +	pci_unregister_driver(&amd64_pci_driver);
 +
  err_pci:
  	msrs_free(msrs);
  	msrs = NULL;
* Unmerged path drivers/edac/amd64_edac.c
