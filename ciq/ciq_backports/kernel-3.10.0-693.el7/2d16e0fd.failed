mm/slab.h: fix argument order in cache_from_obj's error message

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [mm] slab.h: fix argument order in cache_from_obj's error message (Aristeu Rozanski) [1437645]
Rebuild_FUZZ: 97.56%
commit-author Daniel Borkmann <daniel@iogearbox.net>
commit 2d16e0fd3265b42648d267b7adb837db9798edaf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2d16e0fd.failed

While debugging a networking issue, I hit a condition that triggered an
object to be freed into the wrong kmem cache, and thus triggered the
warning in cache_from_obj().

The arguments in the error message are in wrong order: the location
of the object's kmem cache is in cachep, not s.

	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Cc: Christoph Lameter <cl@linux.com>
	Cc: Pekka Enberg <penberg@kernel.org>
	Cc: David Rientjes <rientjes@google.com>
	Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 2d16e0fd3265b42648d267b7adb837db9798edaf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slab.h
diff --cc mm/slab.h
index 3818f75d1e69,a3a967d7d7c2..000000000000
--- a/mm/slab.h
+++ b/mm/slab.h
@@@ -245,7 -330,7 +245,11 @@@ static inline struct kmem_cache *cache_
  		return cachep;
  
  	pr_err("%s: Wrong slab cache. %s but object is from %s\n",
++<<<<<<< HEAD
 +		__FUNCTION__, cachep->name, s->name);
++=======
+ 	       __func__, s->name, cachep->name);
++>>>>>>> 2d16e0fd3265 (mm/slab.h: fix argument order in cache_from_obj's error message)
  	WARN_ON_ONCE(1);
  	return s;
  }
* Unmerged path mm/slab.h
