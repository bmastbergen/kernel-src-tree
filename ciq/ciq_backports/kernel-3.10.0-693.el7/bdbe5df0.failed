ACPICA: Tables: Add new table events indicating table installation/uninstallation

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Lv Zheng <lv.zheng@intel.com>
commit bdbe5df025b712220ba8d807662d4449b2092e54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/bdbe5df0.failed

ACPICA commit ed6a5fbc694f3a27d93014391aa9a6f6fe490461

This patch adds 2 new table events to indicate table
installation/uninstallation.

Currently, as ACPICA never uninstalls tables, this patch thus only adds
table handler invocation for the table installation event. Lv Zheng.

The 2 events are to be used to fix a sysfs table handling issue related to
LoadTable opcode (see Link # [1] below). The actual sysfs fixing code is
not included, the sysfs fixes will be sent as separate patches.

Link: https://bugzilla.kernel.org/show_bug.cgi?id=150841 # [1]
Link: https://github.com/acpica/acpica/commit/ed6a5fbc
	Reported-by: Jason Voelz <jason.voelz@intel.com>
	Reported-by: Francisco Leoner <francisco.j.lenoer.soto@intel.com>
	Signed-off-by: Lv Zheng <lv.zheng@intel.com>
	Signed-off-by: Bob Moore <robert.moore@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit bdbe5df025b712220ba8d807662d4449b2092e54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpica/tbinstal.c
#	include/acpi/actypes.h
diff --cc drivers/acpi/acpica/tbinstal.c
index 4024bfc5fa21,5fdf251a9f97..000000000000
--- a/drivers/acpi/acpica/tbinstal.c
+++ b/drivers/acpi/acpica/tbinstal.c
@@@ -49,66 -48,9 +49,78 @@@
  #define _COMPONENT          ACPI_TABLES
  ACPI_MODULE_NAME("tbinstal")
  
 -/* Local prototypes */
 -static u8
 -acpi_tb_compare_tables(struct acpi_table_desc *table_desc, u32 table_index);
 +/******************************************************************************
 + *
 + * FUNCTION:    acpi_tb_verify_table
 + *
 + * PARAMETERS:  table_desc          - table
 + *
 + * RETURN:      Status
 + *
 + * DESCRIPTION: this function is called to verify and map table
 + *
 + *****************************************************************************/
 +acpi_status acpi_tb_verify_table(struct acpi_table_desc *table_desc)
 +{
 +	acpi_status status = AE_OK;
 +
 +	ACPI_FUNCTION_TRACE(tb_verify_table);
 +
 +	/* Map the table if necessary */
 +
 +	if (!table_desc->pointer) {
 +		switch (table_desc->flags & ACPI_TABLE_ORIGIN_MASK) {
 +		case ACPI_TABLE_ORIGIN_MAPPED:
 +
 +			table_desc->pointer =
 +			    acpi_os_map_memory(table_desc->address,
 +					       table_desc->length);
 +			break;
 +
 +		case ACPI_TABLE_ORIGIN_ALLOCATED:
 +		case ACPI_TABLE_ORIGIN_UNKNOWN:
 +		case ACPI_TABLE_ORIGIN_OVERRIDE:
 +
 +			table_desc->pointer =
 +			    ACPI_CAST_PTR(struct acpi_table_header,
 +					  table_desc->address);
 +			break;
 +
 +		default:
 +
 +			break;
 +		}
 +
 +		if (!table_desc->pointer) {
 +			return_ACPI_STATUS(AE_NO_MEMORY);
 +		}
 +	}
 +
 +	/* FACS is the odd table, has no standard ACPI header and no checksum */
 +
 +	if (!ACPI_COMPARE_NAME(&table_desc->signature, ACPI_SIG_FACS)) {
 +
++<<<<<<< HEAD
 +		/* Always calculate checksum, ignore bad checksum if requested */
++=======
++	/* Invoke table handler if present */
++
++	if (acpi_gbl_table_handler) {
++		(void)acpi_gbl_table_handler(ACPI_TABLE_EVENT_INSTALL,
++					     new_table_desc.pointer,
++					     acpi_gbl_table_handler_context);
++	}
++
++release_and_exit:
++>>>>>>> bdbe5df025b7 (ACPICA: Tables: Add new table events indicating table installation/uninstallation)
 +
 +		status =
 +		    acpi_tb_verify_checksum(table_desc->pointer,
 +					    table_desc->length);
 +	}
 +
 +	return_ACPI_STATUS(status);
 +}
  
  /*******************************************************************************
   *
diff --cc include/acpi/actypes.h
index 90953bd39053,1d798abae710..000000000000
--- a/include/acpi/actypes.h
+++ b/include/acpi/actypes.h
@@@ -1020,11 -1083,15 +1020,21 @@@ acpi_status(*acpi_exception_handler) (a
  /* Table Event handler (Load, load_table, etc.) and types */
  
  typedef
 -acpi_status (*acpi_table_handler) (u32 event, void *table, void *context);
 +acpi_status(*acpi_table_handler) (u32 event, void *table, void *context);
  
++<<<<<<< HEAD
 +#define ACPI_TABLE_LOAD             0x0
 +#define ACPI_TABLE_UNLOAD           0x1
 +#define ACPI_NUM_TABLE_EVENTS       2
++=======
+ /* Table Event Types */
+ 
+ #define ACPI_TABLE_EVENT_LOAD           0x0
+ #define ACPI_TABLE_EVENT_UNLOAD         0x1
+ #define ACPI_TABLE_EVENT_INSTALL        0x2
+ #define ACPI_TABLE_EVENT_UNINSTALL      0x3
+ #define ACPI_NUM_TABLE_EVENTS           4
++>>>>>>> bdbe5df025b7 (ACPICA: Tables: Add new table events indicating table installation/uninstallation)
  
  /* Address Spaces (For Operation Regions) */
  
* Unmerged path drivers/acpi/acpica/tbinstal.c
* Unmerged path include/acpi/actypes.h
