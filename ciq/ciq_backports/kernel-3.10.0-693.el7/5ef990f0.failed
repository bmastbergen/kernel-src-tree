IB/core: remove ib_get_dma_mr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 5ef990f06bd7e3cf521b5705d898d8e43d04ea90
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/5ef990f0.failed

We now only use it from ib_alloc_pd to create a local DMA lkey if the
device doesn't provide one, or a global rkey if the ULP requests it.

This patch removes ib_get_dma_mr and open codes the functionality in
ib_alloc_pd so that we can simplify the code and prevent abuse of the
functionality.  As a side effect we can also simplify things by removing
the valid access bit check, and the PD refcounting.

In the future I hope to also remove the per-PD global MR entirely by
shifting this work into the HW drivers, as one step towards avoiding
the struct ib_mr overload for various different use cases.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
	Reviewed-by: Steve Wise <swise@opengridcomputing.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit 5ef990f06bd7e3cf521b5705d898d8e43d04ea90)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/core/verbs.c
diff --cc drivers/infiniband/core/verbs.c
index 5539f54bd841,d4ef3b1a695a..000000000000
--- a/drivers/infiniband/core/verbs.c
+++ b/drivers/infiniband/core/verbs.c
@@@ -242,21 -244,41 +242,30 @@@ struct ib_pd *ib_alloc_pd(struct ib_dev
  
  	if (device->attrs.device_cap_flags & IB_DEVICE_LOCAL_DMA_LKEY)
  		pd->local_dma_lkey = device->local_dma_lkey;
 -	else
 -		mr_access_flags |= IB_ACCESS_LOCAL_WRITE;
 -
 -	if (flags & IB_PD_UNSAFE_GLOBAL_RKEY) {
 -		pr_warn("%s: enabling unsafe global rkey\n", caller);
 -		mr_access_flags |= IB_ACCESS_REMOTE_READ | IB_ACCESS_REMOTE_WRITE;
 -	}
 -
 -	if (mr_access_flags) {
 +	else {
  		struct ib_mr *mr;
  
++<<<<<<< HEAD
 +		mr = ib_get_dma_mr(pd, IB_ACCESS_LOCAL_WRITE);
++=======
+ 		mr = pd->device->get_dma_mr(pd, mr_access_flags);
++>>>>>>> 5ef990f06bd7 (IB/core: remove ib_get_dma_mr)
  		if (IS_ERR(mr)) {
  			ib_dealloc_pd(pd);
- 			return (struct ib_pd *)mr;
+ 			return ERR_CAST(mr);
  		}
  
+ 		mr->device	= pd->device;
+ 		mr->pd		= pd;
+ 		mr->uobject	= NULL;
+ 		mr->need_inval	= false;
+ 
  		pd->__internal_mr = mr;
 -
 -		if (!(device->attrs.device_cap_flags & IB_DEVICE_LOCAL_DMA_LKEY))
 -			pd->local_dma_lkey = pd->__internal_mr->lkey;
 -
 -		if (flags & IB_PD_UNSAFE_GLOBAL_RKEY)
 -			pd->unsafe_global_rkey = pd->__internal_mr->rkey;
 +		pd->local_dma_lkey = pd->__internal_mr->lkey;
  	}
 -
  	return pd;
  }
 -EXPORT_SYMBOL(__ib_alloc_pd);
 +EXPORT_SYMBOL(ib_alloc_pd);
  
  /**
   * ib_dealloc_pd - Deallocates a protection domain.
* Unmerged path drivers/infiniband/core/verbs.c
diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index 78cb6674d269..b54748fcb56e 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -2787,18 +2787,6 @@ static inline int ib_req_ncomp_notif(struct ib_cq *cq, int wc_cnt)
 		-ENOSYS;
 }
 
-/**
- * ib_get_dma_mr - Returns a memory region for system memory that is
- *   usable for DMA.
- * @pd: The protection domain associated with the memory region.
- * @mr_access_flags: Specifies the memory access rights.
- *
- * Note that the ib_dma_*() functions defined below must be used
- * to create/destroy addresses used with the Lkey or Rkey returned
- * by ib_get_dma_mr().
- */
-struct ib_mr *ib_get_dma_mr(struct ib_pd *pd, int mr_access_flags);
-
 /**
  * ib_dma_mapping_error - check a DMA addr for error
  * @dev: The device for which the dma_addr was created
