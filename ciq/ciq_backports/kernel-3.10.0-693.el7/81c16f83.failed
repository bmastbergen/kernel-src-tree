scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices (Tomas Henzl) [1306453]
Rebuild_FUZZ: 95.81%
commit-author Suganath Prabu Subramani <suganath-prabu.subramani@broadcom.com>
commit 81c16f83231a92eca246cb91649c4726899a704d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/81c16f83.failed

Support Atomic Request Descriptors for Ventura/SAS35 devices.

	Signed-off-by: Chaitra P B <chaitra.basappa@broadcom.com>
	Signed-off-by: Sathya Prakash <sathya.prakash@broadcom.com>
	Signed-off-by: Suganath Prabu S <suganath-prabu.subramani@broadcom.com>
	Reviewed-by: Hannes Reinecke <hare@suse.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 81c16f83231a92eca246cb91649c4726899a704d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/mpt3sas/mpt3sas_base.c
#	drivers/scsi/mpt3sas/mpt3sas_base.h
#	drivers/scsi/mpt3sas/mpt3sas_config.c
#	drivers/scsi/mpt3sas/mpt3sas_ctl.c
#	drivers/scsi/mpt3sas/mpt3sas_scsih.c
#	drivers/scsi/mpt3sas/mpt3sas_transport.c
diff --cc drivers/scsi/mpt3sas/mpt3sas_base.c
index 4df666db79f3,f00ef88a378a..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_base.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.c
@@@ -4074,8 -4161,8 +4163,13 @@@ mpt3sas_base_sas_iounit_control(struct 
  	    mpi_request->Operation == MPI2_SAS_OP_PHY_LINK_RESET)
  		ioc->ioc_link_reset_in_progress = 1;
  	init_completion(&ioc->base_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->base_cmds.done,
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->base_cmds.done,
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	    msecs_to_jiffies(10000));
  	if ((mpi_request->Operation == MPI2_SAS_OP_PHY_HARD_RESET ||
  	    mpi_request->Operation == MPI2_SAS_OP_PHY_LINK_RESET) &&
@@@ -4175,8 -4261,8 +4269,13 @@@ mpt3sas_base_scsi_enclosure_processor(s
  	ioc->base_cmds.smid = smid;
  	memcpy(request, mpi_request, sizeof(Mpi2SepReply_t));
  	init_completion(&ioc->base_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->base_cmds.done,
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->base_cmds.done,
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	    msecs_to_jiffies(10000));
  	if (!(ioc->base_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
@@@ -4588,9 -4675,8 +4689,14 @@@ _base_send_port_enable(struct MPT3SAS_A
  	mpi_request->Function = MPI2_FUNCTION_PORT_ENABLE;
  
  	init_completion(&ioc->port_enable_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->port_enable_cmds.done,
 +	    300*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->port_enable_cmds.done, 300*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	if (!(ioc->port_enable_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
  		    ioc->name, __func__);
@@@ -4772,8 -4857,8 +4878,13 @@@ _base_event_notification(struct MPT3SAS
  		mpi_request->EventMasks[i] =
  		    cpu_to_le32(ioc->event_masks[i]);
  	init_completion(&ioc->base_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->base_cmds.done, 30*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->base_cmds.done, 30*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	if (!(ioc->base_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
  		    ioc->name, __func__);
diff --cc drivers/scsi/mpt3sas/mpt3sas_base.h
index 00a0f837320d,5d9ae15cddd4..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_base.h
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.h
@@@ -1193,6 -1196,13 +1196,16 @@@ struct MPT3SAS_ADAPTER 
  	struct SL_WH_MPI_TRIGGERS_T diag_trigger_mpi;
  	void		*device_remove_in_progress;
  	u16		device_remove_in_progress_sz;
++<<<<<<< HEAD
++=======
+ 	u8		is_gen35_ioc;
+ 	u8		atomic_desc_capable;
+ 	PUT_SMID_IO_FP_HIP put_smid_scsi_io;
+ 	PUT_SMID_IO_FP_HIP put_smid_fast_path;
+ 	PUT_SMID_IO_FP_HIP put_smid_hi_priority;
+ 	PUT_SMID_DEFAULT put_smid_default;
+ 
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  };
  
  typedef u8 (*MPT_CALLBACK)(struct MPT3SAS_ADAPTER *ioc, u16 smid, u8 msix_index,
diff --cc drivers/scsi/mpt3sas/mpt3sas_config.c
index 022f27f3ef6e,dd6270125614..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_config.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_config.c
@@@ -385,9 -384,8 +385,14 @@@ _config_request(struct MPT3SAS_ADAPTER 
  	memcpy(config_request, mpi_request, sizeof(Mpi2ConfigRequest_t));
  	_config_display_some_debug(ioc, smid, "config_request", NULL);
  	init_completion(&ioc->config_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->config_cmds.done,
 +	    timeout*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->config_cmds.done, timeout*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	if (!(ioc->config_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
  		    ioc->name, __func__);
diff --cc drivers/scsi/mpt3sas/mpt3sas_ctl.c
index 959330b996fe,050bd788ad02..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_ctl.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_ctl.c
@@@ -1527,8 -1526,8 +1527,13 @@@ _ctl_diag_register_2(struct MPT3SAS_ADA
  			cpu_to_le32(ioc->product_specific[buffer_type][i]);
  
  	init_completion(&ioc->ctl_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->ctl_cmds.done,
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->ctl_cmds.done,
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	    MPT3_IOCTL_DEFAULT_TIMEOUT*HZ);
  
  	if (!(ioc->ctl_cmds.status & MPT3_CMD_COMPLETE)) {
@@@ -1875,8 -1873,8 +1880,13 @@@ mpt3sas_send_diag_release(struct MPT3SA
  	mpi_request->VP_ID = 0;
  
  	init_completion(&ioc->ctl_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->ctl_cmds.done,
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->ctl_cmds.done,
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	    MPT3_IOCTL_DEFAULT_TIMEOUT*HZ);
  
  	if (!(ioc->ctl_cmds.status & MPT3_CMD_COMPLETE)) {
@@@ -2142,8 -2140,8 +2152,13 @@@ _ctl_diag_read_buffer(struct MPT3SAS_AD
  	mpi_request->VP_ID = 0;
  
  	init_completion(&ioc->ctl_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->ctl_cmds.done,
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->ctl_cmds.done,
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	    MPT3_IOCTL_DEFAULT_TIMEOUT*HZ);
  
  	if (!(ioc->ctl_cmds.status & MPT3_CMD_COMPLETE)) {
diff --cc drivers/scsi/mpt3sas/mpt3sas_scsih.c
index f3878759e8a6,6d17f6635251..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_scsih.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_scsih.c
@@@ -2330,8 -2285,8 +2330,13 @@@ mpt3sas_scsih_issue_tm(struct MPT3SAS_A
  		msix_task = scsi_lookup->msix_io;
  	else
  		msix_task = 0;
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_hi_priority(ioc, smid, msix_task);
 +	timeleft = wait_for_completion_timeout(&ioc->tm_cmds.done, timeout*HZ);
++=======
+ 	ioc->put_smid_hi_priority(ioc, smid, msix_task);
+ 	wait_for_completion_timeout(&ioc->tm_cmds.done, timeout*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  	if (!(ioc->tm_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
  		    ioc->name, __func__);
diff --cc drivers/scsi/mpt3sas/mpt3sas_transport.c
index 4d7e4a52239f,7f1d5785bc30..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_transport.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_transport.c
@@@ -393,9 -392,8 +393,14 @@@ _transport_expander_report_manufacture(
  		"report_manufacture - send to sas_addr(0x%016llx)\n",
  		ioc->name, (unsigned long long)sas_address));
  	init_completion(&ioc->transport_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->transport_cmds.done,
 +	    10*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->transport_cmds.done, 10*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  
  	if (!(ioc->transport_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
@@@ -1201,9 -1198,8 +1206,14 @@@ _transport_get_expander_phy_error_log(s
  		ioc->name, (unsigned long long)phy->identify.sas_address,
  		phy->number));
  	init_completion(&ioc->transport_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->transport_cmds.done,
 +	    10*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->transport_cmds.done, 10*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  
  	if (!(ioc->transport_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
@@@ -1519,9 -1514,8 +1529,14 @@@ _transport_expander_phy_control(struct 
  		ioc->name, (unsigned long long)phy->identify.sas_address,
  		phy->number, phy_operation));
  	init_completion(&ioc->transport_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->transport_cmds.done,
 +	    10*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->transport_cmds.done, 10*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  
  	if (!(ioc->transport_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s: timeout\n",
@@@ -2038,9 -2032,8 +2053,14 @@@ _transport_smp_handler(struct Scsi_Hos
  		"%s - sending smp request\n", ioc->name, __func__));
  
  	init_completion(&ioc->transport_cmds.done);
++<<<<<<< HEAD
 +	mpt3sas_base_put_smid_default(ioc, smid);
 +	timeleft = wait_for_completion_timeout(&ioc->transport_cmds.done,
 +	    10*HZ);
++=======
+ 	ioc->put_smid_default(ioc, smid);
+ 	wait_for_completion_timeout(&ioc->transport_cmds.done, 10*HZ);
++>>>>>>> 81c16f83231a (scsi: mpt3sas: Use the new MPI 2.6 32-bit Atomic Request Descriptors for SAS35 devices.)
  
  	if (!(ioc->transport_cmds.status & MPT3_CMD_COMPLETE)) {
  		pr_err(MPT3SAS_FMT "%s : timeout\n",
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_base.c
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_base.h
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_config.c
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_ctl.c
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_scsih.c
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_transport.c
