xprtrdma: Fix Read chunk padding

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 24abdf1be15c478e2821d6fc903a4a4440beff02
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/24abdf1b.failed

When pad optimization is disabled, rpcrdma_convert_iovs still
does not add explicit XDR round-up padding to a Read chunk.

Commit 677eb17e94ed ("xprtrdma: Fix XDR tail buffer marshalling")
incorrectly short-circuited the test for whether round-up padding
is needed that appears later in rpcrdma_convert_iovs.

However, if this is indeed a regular Read chunk (and not a
Position-Zero Read chunk), the tail iovec _always_ contains the
chunk's padding, and never anything else.

So, it's easy to just skip the tail when padding optimization is
enabled, and add the tail in a subsequent Read chunk segment, if
disabled.

Fixes: 677eb17e94ed ("xprtrdma: Fix XDR tail buffer marshalling")
	Cc: stable@vger.kernel.org # v4.9+
	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
(cherry picked from commit 24abdf1be15c478e2821d6fc903a4a4440beff02)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtrdma/rpc_rdma.c
diff --cc net/sunrpc/xprtrdma/rpc_rdma.c
index 83e624c2ef04,a524d3c2e8ac..000000000000
--- a/net/sunrpc/xprtrdma/rpc_rdma.c
+++ b/net/sunrpc/xprtrdma/rpc_rdma.c
@@@ -267,21 -223,26 +267,29 @@@ rpcrdma_convert_iovs(struct xdr_buf *xd
  	}
  
  	/* Message overflows the seg array */
 -	if (len && n == RPCRDMA_MAX_SEGS)
 -		goto out_overflow;
 +	if (len && n == nsegs)
 +		return -EIO;
  
- 	/* When encoding the read list, the tail is always sent inline */
- 	if (type == rpcrdma_readch)
+ 	/* When encoding a Read chunk, the tail iovec contains an
+ 	 * XDR pad and may be omitted.
+ 	 */
+ 	if (type == rpcrdma_readch && xprt_rdma_pad_optimize)
  		return n;
  
 -	/* When encoding the Write list, some servers need to see an extra
 -	 * segment for odd-length Write chunks. The upper layer provides
 -	 * space in the tail iovec for this purpose.
 -	 */
 -	if (type == rpcrdma_writech && reminv_expected)
 -		return n;
 -
  	if (xdrbuf->tail[0].iov_len) {
++<<<<<<< HEAD
 +		/* the rpcrdma protocol allows us to omit any trailing
 +		 * xdr pad bytes, saving the server an RDMA operation. */
 +		if (xdrbuf->tail[0].iov_len < 4 && xprt_rdma_pad_optimize)
 +			return n;
 +		n = rpcrdma_convert_kvec(&xdrbuf->tail[0], seg, n, nsegs);
 +		if (n == nsegs)
 +			return -EIO;
++=======
+ 		n = rpcrdma_convert_kvec(&xdrbuf->tail[0], seg, n);
+ 		if (n == RPCRDMA_MAX_SEGS)
+ 			goto out_overflow;
++>>>>>>> 24abdf1be15c (xprtrdma: Fix Read chunk padding)
  	}
  
  	return n;
* Unmerged path net/sunrpc/xprtrdma/rpc_rdma.c
