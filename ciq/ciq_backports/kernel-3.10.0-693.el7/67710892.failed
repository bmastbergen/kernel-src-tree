Btrfs: be more precise on errors when getting an inode from disk

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Filipe Manana <fdmanana@suse.com>
commit 67710892ec983aa79ad1e2a2642fe8e3a4a194ea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/67710892.failed

When we attempt to read an inode from disk, we end up always returning an
-ESTALE error to the caller regardless of the actual failure reason, which
can be an out of memory problem (when allocating a path), some error found
when reading from the fs/subvolume btree (like a genuine IO error) or the
inode does not exists. So lets start returning the real error code to the
callers so that they don't treat all -ESTALE errors as meaning that the
inode does not exists (such as during orphan cleanup). This will also be
needed for a subsequent patch in the same series dealing with a special
fsync case.

	Signed-off-by: Filipe Manana <fdmanana@suse.com>
(cherry picked from commit 67710892ec983aa79ad1e2a2642fe8e3a4a194ea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/inode.c
diff --cc fs/btrfs/inode.c
index e6496b484d20,f9686541997b..000000000000
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@@ -3418,11 -3427,11 +3418,16 @@@ int btrfs_orphan_cleanup(struct btrfs_r
  		found_key.type = BTRFS_INODE_ITEM_KEY;
  		found_key.offset = 0;
  		inode = btrfs_iget(root->fs_info->sb, &found_key, root, NULL);
++<<<<<<< HEAD
 +		ret = PTR_RET(inode);
 +		if (ret && ret != -ESTALE)
++=======
+ 		ret = PTR_ERR_OR_ZERO(inode);
+ 		if (ret && ret != -ENOENT)
++>>>>>>> 67710892ec98 (Btrfs: be more precise on errors when getting an inode from disk)
  			goto out;
  
- 		if (ret == -ESTALE && root == root->fs_info->tree_root) {
+ 		if (ret == -ENOENT && root == root->fs_info->tree_root) {
  			struct btrfs_root *dead_root;
  			struct btrfs_fs_info *fs_info = root->fs_info;
  			int is_dead_root = 0;
* Unmerged path fs/btrfs/inode.c
