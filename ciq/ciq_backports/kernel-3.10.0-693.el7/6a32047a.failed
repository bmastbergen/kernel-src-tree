net/mlx5: Get RoCE netdev

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [kernel] mlx5: Get RoCE netdev (Don Dutile) [1385219 1385330 1417285]
Rebuild_FUZZ: 91.30%
commit-author Aviv Heller <avivh@mellanox.com>
commit 6a32047a441b870dd2570fe0831dada5e9ce40f6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6a32047a.failed

Used by IB driver for determining the IB bond
device's netdev, when LAG is active.

Returns PF0's netdev if mode is not active-backup,
or the PF netdev of the active slave when mode is
active-backup.

	Signed-off-by: Aviv Heller <avivh@mellanox.com>
	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
(cherry picked from commit 6a32047a441b870dd2570fe0831dada5e9ce40f6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/lag.c
#	include/linux/mlx5/driver.h
diff --cc include/linux/mlx5/driver.h
index f24904979fc5,c568dd927330..000000000000
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@@ -891,6 -944,9 +891,12 @@@ int mlx5_register_interface(struct mlx5
  void mlx5_unregister_interface(struct mlx5_interface *intf);
  int mlx5_core_query_vendor_id(struct mlx5_core_dev *mdev, u32 *vendor_id);
  
++<<<<<<< HEAD
++=======
+ bool mlx5_lag_is_active(struct mlx5_core_dev *dev);
+ struct net_device *mlx5_lag_get_roce_netdev(struct mlx5_core_dev *dev);
+ 
++>>>>>>> 6a32047a441b (net/mlx5: Get RoCE netdev)
  struct mlx5_profile {
  	u64	mask;
  	u8	log_max_qp;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lag.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/lag.c
* Unmerged path include/linux/mlx5/driver.h
