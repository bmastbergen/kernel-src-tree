powerpc/mm: Add support for runtime configuration of ASLR limits

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [powerpc] mm: Add support for runtime configuration of ASLR limits (Bhupesh Sharma) [1412802]
Rebuild_FUZZ: 93.33%
commit-author Michael Ellerman <mpe@ellerman.id.au>
commit 9fea59bd7ca541e5d0851f0b6dbca83c60ea90cd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9fea59bd.failed

Add powerpc support for mmap_rnd_bits and mmap_rnd_compat_bits, which are two
sysctls that allow a user to configure the number of bits of randomness used for
ASLR.

Because of the way the Kconfig for ARCH_MMAP_RND_BITS is defined, we have to
construct at least the MIN value in Kconfig, vs in a header which would be more
natural. Given that we just go ahead and do it all in Kconfig.

At least according to the code (the documentation makes no mention of it), the
value is defined as the number of bits of randomisation *of the page*, not the
address. This makes some sense, with larger page sizes more of the low bits are
forced to zero, which would reduce the randomisation if we didn't take the
PAGE_SIZE into account. However it does mean the min/max values have to change
depending on the PAGE_SIZE in order to actually limit the amount of address
space consumed by the randomisation.

The result of that is that we have to define the default values based on both
32-bit vs 64-bit, but also the configured PAGE_SIZE. Furthermore now that we
have 128TB address space support on Book3S, we also have to take that into
account.

Finally we can wire up the value in arch_mmap_rnd().

	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
	Signed-off-by: Bhupesh Sharma <bhsharma@redhat.com>
	Tested-by: Bhupesh Sharma <bhsharma@redhat.com>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
(cherry picked from commit 9fea59bd7ca541e5d0851f0b6dbca83c60ea90cd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/Kconfig
#	arch/powerpc/mm/mmap.c
diff --cc arch/powerpc/Kconfig
index e42024f8779d,276a624ec355..000000000000
--- a/arch/powerpc/Kconfig
+++ b/arch/powerpc/Kconfig
@@@ -88,70 -122,104 +130,137 @@@ config ARCH_HAS_DMA_SET_COHERENT_MAS
  config PPC
  	bool
  	default y
 -	#
 -	# Please keep this list sorted alphabetically.
 -	#
 -	select ARCH_HAS_DEVMEM_IS_ALLOWED
 -	select ARCH_HAS_DMA_SET_COHERENT_MASK
 -	select ARCH_HAS_ELF_RANDOMIZE
 -	select ARCH_HAS_GCOV_PROFILE_ALL
 -	select ARCH_HAS_SCALED_CPUTIME		if VIRT_CPU_ACCOUNTING_NATIVE
 -	select ARCH_HAS_SG_CHAIN
 -	select ARCH_HAS_TICK_BROADCAST		if GENERIC_CLOCKEVENTS_BROADCAST
 -	select ARCH_HAS_UBSAN_SANITIZE_ALL
 -	select ARCH_HAVE_NMI_SAFE_CMPXCHG
  	select ARCH_MIGHT_HAVE_PC_PARPORT
 -	select ARCH_MIGHT_HAVE_PC_SERIO
 -	select ARCH_SUPPORTS_ATOMIC_RMW
 -	select ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT
 -	select ARCH_USE_BUILTIN_BSWAP
 -	select ARCH_USE_CMPXCHG_LOCKREF		if PPC64
 -	select ARCH_WANT_IPC_PARSE_VERSION
  	select BINFMT_ELF
++<<<<<<< HEAD
++=======
+ 	select BUILDTIME_EXTABLE_SORT
+ 	select CLONE_BACKWARDS
+ 	select DCACHE_WORD_ACCESS		if PPC64 && CPU_LITTLE_ENDIAN
+ 	select EDAC_ATOMIC_SCRUB
+ 	select EDAC_SUPPORT
+ 	select GENERIC_ATOMIC64			if PPC32
+ 	select GENERIC_CLOCKEVENTS
+ 	select GENERIC_CLOCKEVENTS_BROADCAST	if SMP
+ 	select GENERIC_CMOS_UPDATE
+ 	select GENERIC_CPU_AUTOPROBE
+ 	select GENERIC_IRQ_SHOW
+ 	select GENERIC_IRQ_SHOW_LEVEL
+ 	select GENERIC_SMP_IDLE_THREAD
+ 	select GENERIC_STRNCPY_FROM_USER
+ 	select GENERIC_STRNLEN_USER
+ 	select GENERIC_TIME_VSYSCALL_OLD
+ 	select HAVE_ARCH_AUDITSYSCALL
+ 	select HAVE_ARCH_HARDENED_USERCOPY
+ 	select HAVE_ARCH_JUMP_LABEL
+ 	select HAVE_ARCH_KGDB
+ 	select HAVE_ARCH_MMAP_RND_BITS
+ 	select HAVE_ARCH_MMAP_RND_COMPAT_BITS	if COMPAT
+ 	select HAVE_ARCH_SECCOMP_FILTER
+ 	select HAVE_ARCH_TRACEHOOK
+ 	select HAVE_CBPF_JIT			if !PPC64
+ 	select HAVE_CONTEXT_TRACKING		if PPC64
+ 	select HAVE_DEBUG_KMEMLEAK
+ 	select HAVE_DEBUG_STACKOVERFLOW
+ 	select HAVE_DMA_API_DEBUG
+ 	select HAVE_DYNAMIC_FTRACE
+ 	select HAVE_DYNAMIC_FTRACE_WITH_REGS	if MPROFILE_KERNEL
+ 	select HAVE_EBPF_JIT			if PPC64
+ 	select HAVE_EFFICIENT_UNALIGNED_ACCESS	if !(CPU_LITTLE_ENDIAN && POWER7_CPU)
+ 	select HAVE_FTRACE_MCOUNT_RECORD
+ 	select HAVE_FUNCTION_GRAPH_TRACER
+ 	select HAVE_FUNCTION_TRACER
+ 	select HAVE_GCC_PLUGINS
+ 	select HAVE_GENERIC_RCU_GUP
+ 	select HAVE_HW_BREAKPOINT		if PERF_EVENTS && (PPC_BOOK3S || PPC_8xx)
+ 	select HAVE_IDE
+ 	select HAVE_IOREMAP_PROT
+ 	select HAVE_IRQ_EXIT_ON_IRQ_STACK
+ 	select HAVE_KERNEL_GZIP
+ 	select HAVE_KPROBES
+ 	select HAVE_KRETPROBES
+ 	select HAVE_LIVEPATCH			if HAVE_DYNAMIC_FTRACE_WITH_REGS
+ 	select HAVE_MEMBLOCK
+ 	select HAVE_MEMBLOCK_NODE_MAP
+ 	select HAVE_MOD_ARCH_SPECIFIC
+ 	select HAVE_NMI				if PERF_EVENTS
+ 	select HAVE_OPROFILE
+ 	select HAVE_OPTPROBES			if PPC64
+ 	select HAVE_PERF_EVENTS
+ 	select HAVE_PERF_EVENTS_NMI		if PPC64
+ 	select HAVE_PERF_REGS
+ 	select HAVE_PERF_USER_STACK_DUMP
+ 	select HAVE_RCU_TABLE_FREE		if SMP
+ 	select HAVE_REGS_AND_STACK_ACCESS_API
+ 	select HAVE_SYSCALL_TRACEPOINTS
+ 	select HAVE_VIRT_CPU_ACCOUNTING
+ 	select IRQ_DOMAIN
+ 	select IRQ_FORCED_THREADING
+ 	select MODULES_USE_ELF_RELA
+ 	select NO_BOOTMEM
++>>>>>>> 9fea59bd7ca5 (powerpc/mm: Add support for runtime configuration of ASLR limits)
  	select OF
  	select OF_EARLY_FLATTREE
 -	select OF_RESERVED_MEM
 -	select OLD_SIGACTION			if PPC32
 -	select OLD_SIGSUSPEND
 -	select SPARSE_IRQ
 +	select HAVE_FTRACE_MCOUNT_RECORD
 +	select HAVE_DYNAMIC_FTRACE
 +	select HAVE_FUNCTION_TRACER
 +	select HAVE_FUNCTION_GRAPH_TRACER
  	select SYSCTL_EXCEPTION_TRACE
 -	select VIRT_TO_BUS			if !PPC64
 -	#
 -	# Please keep this list sorted alphabetically.
 -	#
 +	select ARCH_WANT_OPTIONAL_GPIOLIB
 +	select VIRT_TO_BUS if !PPC64
 +	select HAVE_IDE
 +	select HAVE_IOREMAP_PROT
 +	select HAVE_EFFICIENT_UNALIGNED_ACCESS if !CPU_LITTLE_ENDIAN
 +	select HAVE_KPROBES
 +	select HAVE_ARCH_KGDB
 +	select HAVE_KRETPROBES
 +	select HAVE_ARCH_TRACEHOOK
 +	select HAVE_MEMBLOCK
 +	select HAVE_MEMBLOCK_NODE_MAP
 +	select HAVE_DMA_ATTRS
 +	select HAVE_DMA_API_DEBUG
 +	select USE_GENERIC_SMP_HELPERS if SMP
 +	select HAVE_OPROFILE
 +	select HAVE_DEBUG_KMEMLEAK
 +	select GENERIC_ATOMIC64 if PPC32
 +	select ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
 +	select HAVE_PERF_EVENTS
 +	select HAVE_PERF_REGS
 +	select HAVE_REGS_AND_STACK_ACCESS_API
 +	select HAVE_HW_BREAKPOINT if PERF_EVENTS && PPC_BOOK3S_64
 +	select HAVE_GENERIC_HARDIRQS
 +	select ARCH_WANT_IPC_PARSE_VERSION
 +	select SPARSE_IRQ
 +	select IRQ_DOMAIN
 +	select GENERIC_IRQ_SHOW
 +	select GENERIC_IRQ_SHOW_LEVEL
 +	select IRQ_FORCED_THREADING
 +	select HAVE_RCU_TABLE_FREE if SMP
 +	select HAVE_SYSCALL_TRACEPOINTS
 +	select HAVE_BPF_JIT if (PPC64 && CPU_BIG_ENDIAN)
 +	select HAVE_ARCH_JUMP_LABEL
 +	select ARCH_HAVE_NMI_SAFE_CMPXCHG
 +	select GENERIC_SMP_IDLE_THREAD
 +	select GENERIC_CMOS_UPDATE
 +	select GENERIC_TIME_VSYSCALL_OLD
 +	select GENERIC_CLOCKEVENTS
 +	select GENERIC_CLOCKEVENTS_BROADCAST if SMP
 +	select ARCH_HAS_TICK_BROADCAST if GENERIC_CLOCKEVENTS_BROADCAST
 +	select GENERIC_STRNCPY_FROM_USER
 +	select GENERIC_STRNLEN_USER
 +	select HAVE_MOD_ARCH_SPECIFIC
 +	select MODULES_USE_ELF_RELA
 +	select CLONE_BACKWARDS
 +	select ARCH_USE_BUILTIN_BSWAP
 +	select OLD_SIGSUSPEND
 +	select OLD_SIGACTION if PPC32
 +	select HAVE_IRQ_EXIT_ON_IRQ_STACK
 +	select ARCH_USE_CMPXCHG_LOCKREF if PPC64
 +	select ARCH_HAS_DMA_SET_COHERENT_MASK
 +	select HAVE_ARCH_SECCOMP_FILTER
  
  config GENERIC_CSUM
 -	def_bool n
 +	def_bool CPU_LITTLE_ENDIAN
  
  config EARLY_PRINTK
  	bool
* Unmerged path arch/powerpc/mm/mmap.c
* Unmerged path arch/powerpc/Kconfig
* Unmerged path arch/powerpc/mm/mmap.c
