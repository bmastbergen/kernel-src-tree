HID: wacom: Fix ABS_MISC reporting for Cintiq Companion 2

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hid] wacom: Fix ABS_MISC reporting for Cintiq Companion 2 (Aristeu Rozanski) [1346348 1388646 1385026]
Rebuild_FUZZ: 95.41%
commit-author Jason Gerecke <killertofu@gmail.com>
commit 8253d42be8ae8c81cabcf678448c09a69d4f3b8c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8253d42b.failed

The pad handling code introduced for the Cintiq Companion 2 (f7acb55)
looks at the wrong bytes in the report when deciding whether ABS_MISC
should be sent. This does not cause any issues with the X driver now
that the pen and pad have been split to separate devices, but is
incorrect and has caused issues when backporting to distros with pre-
3.17 kernels.

	Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
	Reviewed-by: Ping Cheng <pingc@wacom.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit 8253d42be8ae8c81cabcf678448c09a69d4f3b8c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hid/wacom_wac.c
diff --cc drivers/hid/wacom_wac.c
index bdf17efa93aa,9db6a8b1150c..000000000000
--- a/drivers/hid/wacom_wac.c
+++ b/drivers/hid/wacom_wac.c
@@@ -658,6 -929,49 +658,52 @@@ static int wacom_intuos_irq(struct waco
  			} else {
  				input_report_abs(input, ABS_MISC, 0);
  			}
++<<<<<<< HEAD
++=======
+ 		} else if (features->type == CINTIQ_HYBRID) {
+ 			/*
+ 			 * Do not send hardware buttons under Android. They
+ 			 * are already sent to the system through GPIO (and
+ 			 * have different meaning).
+ 			 */
+ 			input_report_key(input, BTN_1, (data[4] & 0x01));
+ 			input_report_key(input, BTN_2, (data[4] & 0x02));
+ 			input_report_key(input, BTN_3, (data[4] & 0x04));
+ 			input_report_key(input, BTN_4, (data[4] & 0x08));
+ 
+ 			input_report_key(input, BTN_5, (data[4] & 0x10));  /* Right  */
+ 			input_report_key(input, BTN_6, (data[4] & 0x20));  /* Up     */
+ 			input_report_key(input, BTN_7, (data[4] & 0x40));  /* Left   */
+ 			input_report_key(input, BTN_8, (data[4] & 0x80));  /* Down   */
+ 			input_report_key(input, BTN_0, (data[3] & 0x01));  /* Center */
+ 
+ 			if (data[4] | (data[3] & 0x01)) {
+ 				input_report_abs(input, ABS_MISC, PAD_DEVICE_ID);
+ 			} else {
+ 				input_report_abs(input, ABS_MISC, 0);
+ 			}
+ 
+ 		} else if (features->type == CINTIQ_COMPANION_2) {
+ 			input_report_key(input, BTN_1, (data[1] & 0x02));
+ 			input_report_key(input, BTN_2, (data[2] & 0x01));
+ 			input_report_key(input, BTN_3, (data[2] & 0x02));
+ 			input_report_key(input, BTN_4, (data[2] & 0x04));
+ 			input_report_key(input, BTN_5, (data[2] & 0x08));
+ 			input_report_key(input, BTN_6, (data[1] & 0x04));
+ 
+ 			input_report_key(input, BTN_7, (data[2] & 0x10));  /* Right  */
+ 			input_report_key(input, BTN_8, (data[2] & 0x20));  /* Up	 */
+ 			input_report_key(input, BTN_9, (data[2] & 0x40));  /* Left   */
+ 			input_report_key(input, BTN_A, (data[2] & 0x80));  /* Down   */
+ 			input_report_key(input, BTN_0, (data[1] & 0x01));  /* Center */
+ 
+ 			if (data[2] | (data[1] & 0x07)) {
+ 				input_report_abs(input, ABS_MISC, PAD_DEVICE_ID);
+ 			} else {
+ 				input_report_abs(input, ABS_MISC, 0);
+ 			}
+ 
++>>>>>>> 8253d42be8ae (HID: wacom: Fix ABS_MISC reporting for Cintiq Companion 2)
  		} else if (features->type >= INTUOS5S && features->type <= INTUOSPL) {
  			int i;
  
* Unmerged path drivers/hid/wacom_wac.c
