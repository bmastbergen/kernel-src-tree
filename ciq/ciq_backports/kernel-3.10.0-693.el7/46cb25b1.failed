perf tools: Add missing object file to the python binding linkage list

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 46cb25b1a0ee74bf4a79cfb3081ae3567b2f7135
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/46cb25b1.failed

In ac12f6764c50 ("perf tools: Implement branch_type event parameter") we
started using the parse_branch_str() function from one of the files used
in the python binding, which caused this entry in 'perf test' to fail:

  # perf test -v python
  16: Try 'import perf' in python, checking link problems      :
  --- start ---
  test child forked, pid 16667
  Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
  ImportError: /tmp/build/perf/python/perf.so: undefined symbol:
  parse_branch_str
  test child finished with -1
  ---- end ----
  Try 'import perf' in python, checking link problems: FAILED!
  #

I must've commited some mistake when running 'perf test' to send the
pull request for the perf-core-for-mingo-20161024 tag, to have let this
regression to pass, sigh.

Just add tools/perf/util/parse-branch-options.c and switch from using
ui__warning(), that is not available in the python binding, use
pr_warning() instead, which is good enough for this case.

Now:

  # perf test python
  16: Try 'import perf' in python, checking link problems      : Ok
  #

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
	Cc: Andi Kleen <ak@linux.intel.com>
Fixes: ac12f6764c50 ("perf tools: Implement branch_type event parameter")
Link: http://lkml.kernel.org/n/tip-9kn1ct1cx9ppwqlmzl6z0xhs@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 46cb25b1a0ee74bf4a79cfb3081ae3567b2f7135)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/parse-branch-options.c
diff --cc tools/perf/util/parse-branch-options.c
index afc088dd7d20,38fd11504015..000000000000
--- a/tools/perf/util/parse-branch-options.c
+++ b/tools/perf/util/parse-branch-options.c
@@@ -39,10 -38,58 +39,61 @@@ parse_branch_stack(const struct option 
  	 PERF_SAMPLE_BRANCH_KERNEL	|\
  	 PERF_SAMPLE_BRANCH_HV)
  
 -	int ret = 0;
 -	char *p, *s;
 -	char *os = NULL;
 +	uint64_t *mode = (uint64_t *)opt->value;
  	const struct branch_mode *br;
++<<<<<<< HEAD
 +	char *s, *os = NULL, *p;
 +	int ret = -1;
++=======
+ 
+ 	if (str == NULL) {
+ 		*mode = PERF_SAMPLE_BRANCH_ANY;
+ 		return 0;
+ 	}
+ 
+ 	/* because str is read-only */
+ 	s = os = strdup(str);
+ 	if (!s)
+ 		return -1;
+ 
+ 	for (;;) {
+ 		p = strchr(s, ',');
+ 		if (p)
+ 			*p = '\0';
+ 
+ 		for (br = branch_modes; br->name; br++) {
+ 			if (!strcasecmp(s, br->name))
+ 				break;
+ 		}
+ 		if (!br->name) {
+ 			ret = -1;
+ 			pr_warning("unknown branch filter %s,"
+ 				    " check man page\n", s);
+ 			goto error;
+ 		}
+ 
+ 		*mode |= br->mode;
+ 
+ 		if (!p)
+ 			break;
+ 
+ 		s = p + 1;
+ 	}
+ 
+ 	/* default to any branch */
+ 	if ((*mode & ~ONLY_PLM) == 0) {
+ 		*mode = PERF_SAMPLE_BRANCH_ANY;
+ 	}
+ error:
+ 	free(os);
+ 	return ret;
+ }
+ 
+ int
+ parse_branch_stack(const struct option *opt, const char *str, int unset)
+ {
+ 	__u64 *mode = (__u64 *)opt->value;
++>>>>>>> 46cb25b1a0ee (perf tools: Add missing object file to the python binding linkage list)
  
  	if (unset)
  		return 0;
* Unmerged path tools/perf/util/parse-branch-options.c
diff --git a/tools/perf/util/python-ext-sources b/tools/perf/util/python-ext-sources
index 8162ba0e2e57..ab54a9a6e0df 100644
--- a/tools/perf/util/python-ext-sources
+++ b/tools/perf/util/python-ext-sources
@@ -17,6 +17,7 @@ util/thread_map.c
 util/util.c
 util/xyarray.c
 util/cgroup.c
+util/parse-branch-options.c
 util/rblist.c
 util/counts.c
 util/strlist.c
