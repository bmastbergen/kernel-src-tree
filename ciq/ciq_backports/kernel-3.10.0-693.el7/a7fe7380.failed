IB/ocrdma: Move user vendor structures

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Leon Romanovsky <leon@kernel.org>
commit a7fe7380f6b234f207a599c9ffbaae6c1a574634
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a7fe7380.failed

This patch moves ocrdma vendor's specific structures to
common UAPI folder which will be visible to all consumers.

These structures are used by user-space library driver
(libmlx4) and currently manually copied to that library.

This move will allow cross-compile against these files and
simplify introduction of vendor specific data.

In addition, it changes types to be __uXX instead of uXX.

	Signed-off-by: Leon Romanovsky <leon@kernel.org>
Acked-By: Devesh Sharma <devesh.sharma@broadcom.com>
	Signed-off-by: Doug Ledford <dledford@redhat.com>
(cherry picked from commit a7fe7380f6b234f207a599c9ffbaae6c1a574634)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	MAINTAINERS
#	include/uapi/rdma/Kbuild
diff --cc MAINTAINERS
index 34330c037ee5,940c0ff03f3f..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -7519,9 -10593,20 +7519,22 @@@ W:	http://www.emulex.co
  S:	Supported
  F:	drivers/net/ethernet/emulex/benet/
  
++<<<<<<< HEAD
++=======
+ EMULEX ONECONNECT ROCE DRIVER
+ M:	Selvin Xavier <selvin.xavier@avagotech.com>
+ M:	Devesh Sharma <devesh.sharma@avagotech.com>
+ M:	Mitesh Ahuja <mitesh.ahuja@avagotech.com>
+ L:	linux-rdma@vger.kernel.org
+ W:	http://www.emulex.com
+ S:	Supported
+ F:	drivers/infiniband/hw/ocrdma/
+ F:	include/uapi/rdma/ocrdma-abi.h
+ 
++>>>>>>> a7fe7380f6b2 (IB/ocrdma: Move user vendor structures)
  SFC NETWORK DRIVER
  M:	Solarflare linux maintainers <linux-net-drivers@solarflare.com>
 -M:	Edward Cree <ecree@solarflare.com>
 -M:	Bert Kenward <bkenward@solarflare.com>
 +M:	Ben Hutchings <bhutchings@solarflare.com>
  L:	netdev@vger.kernel.org
  S:	Supported
  F:	drivers/net/ethernet/sfc/
diff --cc include/uapi/rdma/Kbuild
index 231901b08f6c,492e144ebe90..000000000000
--- a/include/uapi/rdma/Kbuild
+++ b/include/uapi/rdma/Kbuild
@@@ -6,3 -6,9 +6,12 @@@ header-y += ib_user_verbs.
  header-y += rdma_netlink.h
  header-y += rdma_user_cm.h
  header-y += hfi/
++<<<<<<< HEAD
++=======
+ header-y += rdma_user_rxe.h
+ header-y += cxgb3-abi.h
+ header-y += cxgb4-abi.h
+ header-y += mlx4-abi.h
+ header-y += mlx5-abi.h
+ header-y += ocrdma-abi.h
++>>>>>>> a7fe7380f6b2 (IB/ocrdma: Move user vendor structures)
* Unmerged path MAINTAINERS
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_main.c b/drivers/infiniband/hw/ocrdma/ocrdma_main.c
index e57726374ef6..cf8fdfaa07e7 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_main.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_main.c
@@ -56,7 +56,7 @@
 #include "be_roce.h"
 #include "ocrdma_hw.h"
 #include "ocrdma_stats.h"
-#include "ocrdma_abi.h"
+#include <rdma/ocrdma-abi.h>
 
 MODULE_VERSION(OCRDMA_ROCE_DRV_VERSION);
 MODULE_DESCRIPTION(OCRDMA_ROCE_DRV_DESC " " OCRDMA_ROCE_DRV_VERSION);
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c b/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c
index af41b6779ecd..2400608924cc 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c
+++ b/drivers/infiniband/hw/ocrdma/ocrdma_verbs.c
@@ -51,7 +51,7 @@
 #include "ocrdma.h"
 #include "ocrdma_hw.h"
 #include "ocrdma_verbs.h"
-#include "ocrdma_abi.h"
+#include <rdma/ocrdma-abi.h>
 
 int ocrdma_query_pkey(struct ib_device *ibdev, u8 port, u16 index, u16 *pkey)
 {
* Unmerged path include/uapi/rdma/Kbuild
diff --git a/drivers/infiniband/hw/ocrdma/ocrdma_abi.h b/include/uapi/rdma/ocrdma-abi.h
similarity index 64%
rename from drivers/infiniband/hw/ocrdma/ocrdma_abi.h
rename to include/uapi/rdma/ocrdma-abi.h
index 430b1350fe96..9f28191bef4d 100644
--- a/drivers/infiniband/hw/ocrdma/ocrdma_abi.h
+++ b/include/uapi/rdma/ocrdma-abi.h
@@ -40,110 +40,112 @@
  * Costa Mesa, CA 92626
  */
 
-#ifndef __OCRDMA_ABI_H__
-#define __OCRDMA_ABI_H__
+#ifndef OCRDMA_ABI_USER_H
+#define OCRDMA_ABI_USER_H
+
+#include <linux/types.h>
 
 #define OCRDMA_ABI_VERSION 2
 #define OCRDMA_BE_ROCE_ABI_VERSION 1
 /* user kernel communication data structures. */
 
 struct ocrdma_alloc_ucontext_resp {
-	u32 dev_id;
-	u32 wqe_size;
-	u32 max_inline_data;
-	u32 dpp_wqe_size;
-	u64 ah_tbl_page;
-	u32 ah_tbl_len;
-	u32 rqe_size;
-	u8 fw_ver[32];
+	__u32 dev_id;
+	__u32 wqe_size;
+	__u32 max_inline_data;
+	__u32 dpp_wqe_size;
+	__u64 ah_tbl_page;
+	__u32 ah_tbl_len;
+	__u32 rqe_size;
+	__u8 fw_ver[32];
 	/* for future use/new features in progress */
-	u64 rsvd1;
-	u64 rsvd2;
+	__u64 rsvd1;
+	__u64 rsvd2;
 };
 
 struct ocrdma_alloc_pd_ureq {
-	u64 rsvd1;
+	__u64 rsvd1;
 };
 
 struct ocrdma_alloc_pd_uresp {
-	u32 id;
-	u32 dpp_enabled;
-	u32 dpp_page_addr_hi;
-	u32 dpp_page_addr_lo;
-	u64 rsvd1;
+	__u32 id;
+	__u32 dpp_enabled;
+	__u32 dpp_page_addr_hi;
+	__u32 dpp_page_addr_lo;
+	__u64 rsvd1;
 };
 
 struct ocrdma_create_cq_ureq {
-	u32 dpp_cq;
-	u32 rsvd; /* pad */
+	__u32 dpp_cq;
+	__u32 rsvd; /* pad */
 };
 
 #define MAX_CQ_PAGES 8
 struct ocrdma_create_cq_uresp {
-	u32 cq_id;
-	u32 page_size;
-	u32 num_pages;
-	u32 max_hw_cqe;
-	u64 page_addr[MAX_CQ_PAGES];
-	u64 db_page_addr;
-	u32 db_page_size;
-	u32 phase_change;
+	__u32 cq_id;
+	__u32 page_size;
+	__u32 num_pages;
+	__u32 max_hw_cqe;
+	__u64 page_addr[MAX_CQ_PAGES];
+	__u64 db_page_addr;
+	__u32 db_page_size;
+	__u32 phase_change;
 	/* for future use/new features in progress */
-	u64 rsvd1;
-	u64 rsvd2;
+	__u64 rsvd1;
+	__u64 rsvd2;
 };
 
 #define MAX_QP_PAGES 8
 #define MAX_UD_AV_PAGES 8
 
 struct ocrdma_create_qp_ureq {
-	u8 enable_dpp_cq;
-	u8 rsvd;
-	u16 dpp_cq_id;
-	u32 rsvd1;	/* pad */
+	__u8 enable_dpp_cq;
+	__u8 rsvd;
+	__u16 dpp_cq_id;
+	__u32 rsvd1;	/* pad */
 };
 
 struct ocrdma_create_qp_uresp {
-	u16 qp_id;
-	u16 sq_dbid;
-	u16 rq_dbid;
-	u16 resv0;	/* pad */
-	u32 sq_page_size;
-	u32 rq_page_size;
-	u32 num_sq_pages;
-	u32 num_rq_pages;
-	u64 sq_page_addr[MAX_QP_PAGES];
-	u64 rq_page_addr[MAX_QP_PAGES];
-	u64 db_page_addr;
-	u32 db_page_size;
-	u32 dpp_credit;
-	u32 dpp_offset;
-	u32 num_wqe_allocated;
-	u32 num_rqe_allocated;
-	u32 db_sq_offset;
-	u32 db_rq_offset;
-	u32 db_shift;
-	u64 rsvd[11];
+	__u16 qp_id;
+	__u16 sq_dbid;
+	__u16 rq_dbid;
+	__u16 resv0;	/* pad */
+	__u32 sq_page_size;
+	__u32 rq_page_size;
+	__u32 num_sq_pages;
+	__u32 num_rq_pages;
+	__u64 sq_page_addr[MAX_QP_PAGES];
+	__u64 rq_page_addr[MAX_QP_PAGES];
+	__u64 db_page_addr;
+	__u32 db_page_size;
+	__u32 dpp_credit;
+	__u32 dpp_offset;
+	__u32 num_wqe_allocated;
+	__u32 num_rqe_allocated;
+	__u32 db_sq_offset;
+	__u32 db_rq_offset;
+	__u32 db_shift;
+	__u64 rsvd[11];
 } __packed;
 
 struct ocrdma_create_srq_uresp {
-	u16 rq_dbid;
-	u16 resv0;	/* pad */
-	u32 resv1;
+	__u16 rq_dbid;
+	__u16 resv0;	/* pad */
+	__u32 resv1;
 
-	u32 rq_page_size;
-	u32 num_rq_pages;
+	__u32 rq_page_size;
+	__u32 num_rq_pages;
 
-	u64 rq_page_addr[MAX_QP_PAGES];
-	u64 db_page_addr;
+	__u64 rq_page_addr[MAX_QP_PAGES];
+	__u64 db_page_addr;
 
-	u32 db_page_size;
-	u32 num_rqe_allocated;
-	u32 db_rq_offset;
-	u32 db_shift;
+	__u32 db_page_size;
+	__u32 num_rqe_allocated;
+	__u32 db_rq_offset;
+	__u32 db_shift;
 
-	u64 rsvd2;
-	u64 rsvd3;
+	__u64 rsvd2;
+	__u64 rsvd3;
 };
 
-#endif				/* __OCRDMA_ABI_H__ */
+#endif	/* OCRDMA_ABI_USER_H */
