target: allow userspace to set state to transitioning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [target] allow userspace to set state to transitioning (Mike Christie) [1429008 1407016]
Rebuild_FUZZ: 91.84%
commit-author Mike Christie <mchristi@redhat.com>
commit 1ca4d4fa3bfcbe8964f81e5818a9b90436466eb0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/1ca4d4fa.failed

Userspace target_core_user handlers like tcmu-runner may want to set the
ALUA state to transitioning while it does implicit transitions. This
patch allows that state when set from configfs.

	Signed-off-by: Mike Christie <mchristi@redhat.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit 1ca4d4fa3bfcbe8964f81e5818a9b90436466eb0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/target_core_alua.c
diff --cc drivers/target/target_core_alua.c
index 4483cd8d504a,252d4e4b7b33..000000000000
--- a/drivers/target/target_core_alua.c
+++ b/drivers/target/target_core_alua.c
@@@ -42,10 -43,9 +42,10 @@@
  #include "target_core_ua.h"
  
  static sense_reason_t core_alua_check_transition(int state, int valid,
- 						 int *primary);
+ 						 int *primary, int explicit);
  static int core_alua_set_tg_pt_secondary_state(
 -		struct se_lun *lun, int explicit, int offline);
 +		struct t10_alua_tg_pt_gp_member *tg_pt_gp_mem,
 +		struct se_port *port, int explicit, int offline);
  
  static char *core_alua_dump_state(int state);
  
@@@ -1109,6 -1100,15 +1108,18 @@@ static int core_alua_do_transition_tg_p
  				ALUA_STATUS_ALTERED_BY_EXPLICIT_STPG :
  				ALUA_STATUS_ALTERED_BY_IMPLICIT_ALUA;
  
++<<<<<<< HEAD
++=======
+ 	core_alua_queue_state_change_ua(tg_pt_gp);
+ 
+ 	if (new_state == ALUA_ACCESS_STATE_TRANSITION)
+ 		return 0;
+ 
+ 	tg_pt_gp->tg_pt_gp_alua_previous_state =
+ 		atomic_read(&tg_pt_gp->tg_pt_gp_alua_access_state);
+ 	tg_pt_gp->tg_pt_gp_alua_pending_state = new_state;
+ 
++>>>>>>> 1ca4d4fa3bfc (target: allow userspace to set state to transitioning)
  	/*
  	 * Check for the optional ALUA primary state transition delay
  	 */
* Unmerged path drivers/target/target_core_alua.c
