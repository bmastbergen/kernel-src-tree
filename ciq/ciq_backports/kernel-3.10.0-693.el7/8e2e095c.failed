tracing: Fix return value of ftrace_raw_output_prep()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Steven Rostedt (Red Hat) <rostedt@goodmis.org>
commit 8e2e095cbecad21078332cd83ae7e61ecfe12c59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8e2e095c.failed

If the trace_seq of ftrace_raw_output_prep() is full this function
returns TRACE_TYPE_PARTIAL_LINE, otherwise it returns zero.

The problem is that TRACE_TYPE_PARTIAL_LINE happens to be zero!

The thing is, the caller of ftrace_raw_output_prep() expects a
success to be zero. Change that to expect it to be
TRACE_TYPE_HANDLED.

Link: http://lkml.kernel.org/r/20141114112522.GA2988@dhcp128.suse.cz

Reminded-by: Petr Mladek <pmladek@suse.cz>
	Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
(cherry picked from commit 8e2e095cbecad21078332cd83ae7e61ecfe12c59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/trace_output.c
diff --cc kernel/trace/trace_output.c
index 9cf812c3bd25,723818bc83b4..000000000000
--- a/kernel/trace/trace_output.c
+++ b/kernel/trace/trace_output.c
@@@ -431,11 -194,9 +431,17 @@@ int ftrace_raw_output_prep(struct trace
  	}
  
  	trace_seq_init(p);
++<<<<<<< HEAD
 +	ret = trace_seq_printf(s, "%s: ", event->name);
 +	if (!ret)
 +		return TRACE_TYPE_PARTIAL_LINE;
 +
 +	return 0;
++=======
+ 	trace_seq_printf(s, "%s: ", ftrace_event_name(event));
+ 
+ 	return trace_handle_return(s);
++>>>>>>> 8e2e095cbeca (tracing: Fix return value of ftrace_raw_output_prep())
  }
  EXPORT_SYMBOL(ftrace_raw_output_prep);
  
diff --git a/include/trace/ftrace.h b/include/trace/ftrace.h
index 737e331757aa..fc1fef71d12b 100644
--- a/include/trace/ftrace.h
+++ b/include/trace/ftrace.h
@@ -251,7 +251,7 @@ ftrace_raw_output_##call(struct trace_iterator *iter, int flags,	\
 	field = (typeof(field))iter->ent;				\
 									\
 	ret = ftrace_raw_output_prep(iter, trace_event);		\
-	if (ret)							\
+	if (ret != TRACE_TYPE_HANDLED)					\
 		return ret;						\
 									\
 	ret = trace_seq_printf(s, print);				\
* Unmerged path kernel/trace/trace_output.c
