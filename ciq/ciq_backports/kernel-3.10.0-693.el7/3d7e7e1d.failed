md/r5cache: do r5c_update_log_state after log recovery

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [md] r5cache: do r5c_update_log_state after log recovery (Jes Sorensen) [1380016]
Rebuild_FUZZ: 97.14%
commit-author Zhengyuan Liu <liuzhengyuan@kylinos.cn>
commit 3d7e7e1d9db048bc6c1503bca9c82193450fc476
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3d7e7e1d.failed

We should update log state after we did a log recovery, current completion
may get wrong log state since log->log_start wasn't initalized until we
called r5l_recovery_log.

At log recovery stage, no lock needed as there is no race conditon.
next_checkpoint field will be initialized in r5l_recovery_log too.

	Signed-off-by: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit 3d7e7e1d9db048bc6c1503bca9c82193450fc476)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5-cache.c
diff --cc drivers/md/raid5-cache.c
index c6ed6dc6889f,c3b3124e033b..000000000000
--- a/drivers/md/raid5-cache.c
+++ b/drivers/md/raid5-cache.c
@@@ -1780,7 -2542,6 +1780,10 @@@ create
  	if (log->max_free_space > RECLAIM_MAX_FREE_SPACE)
  		log->max_free_space = RECLAIM_MAX_FREE_SPACE;
  	log->last_checkpoint = cp;
++<<<<<<< HEAD
 +	log->next_checkpoint = cp;
++=======
++>>>>>>> 3d7e7e1d9db0 (md/r5cache: do r5c_update_log_state after log recovery)
  
  	__free_page(page);
  
* Unmerged path drivers/md/raid5-cache.c
