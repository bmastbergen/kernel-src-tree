raid5-cache: restrict the use area of the log_offset variable

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author JackieLiu <liuyun01@kylinos.cn>
commit 3fd880af4174d724d209a890101962b00d5d33d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3fd880af.failed

We can calculate this offset by using ctx->meta_total_blocks,
without passing in from the function

	Signed-off-by: JackieLiu <liuyun01@kylinos.cn>
	Signed-off-by: Shaohua Li <shli@fb.com>
(cherry picked from commit 3fd880af4174d724d209a890101962b00d5d33d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5-cache.c
diff --cc drivers/md/raid5-cache.c
index 7b91632dc25e,2e270e69c550..000000000000
--- a/drivers/md/raid5-cache.c
+++ b/drivers/md/raid5-cache.c
@@@ -936,16 -913,17 +938,27 @@@ static int r5l_recovery_flush_one_strip
  					     le64_to_cpu(payload->location), 0,
  					     &disk_index, sh);
  
++<<<<<<< HEAD
 +			sync_page_io(log->rdev, *log_offset, PAGE_SIZE,
 +				     sh->dev[disk_index].page, READ, false);
++=======
+ 			sync_page_io(log->rdev, log_offset, PAGE_SIZE,
+ 				     sh->dev[disk_index].page, REQ_OP_READ, 0,
+ 				     false);
++>>>>>>> 3fd880af4174 (raid5-cache: restrict the use area of the log_offset variable)
  			sh->dev[disk_index].log_checksum =
  				le32_to_cpu(payload->checksum[0]);
  			set_bit(R5_Wantwrite, &sh->dev[disk_index].flags);
- 			ctx->meta_total_blocks += BLOCK_SECTORS;
  		} else {
  			disk_index = sh->pd_idx;
++<<<<<<< HEAD
 +			sync_page_io(log->rdev, *log_offset, PAGE_SIZE,
 +				     sh->dev[disk_index].page, READ, false);
++=======
+ 			sync_page_io(log->rdev, log_offset, PAGE_SIZE,
+ 				     sh->dev[disk_index].page, REQ_OP_READ, 0,
+ 				     false);
++>>>>>>> 3fd880af4174 (raid5-cache: restrict the use area of the log_offset variable)
  			sh->dev[disk_index].log_checksum =
  				le32_to_cpu(payload->checksum[0]);
  			set_bit(R5_Wantwrite, &sh->dev[disk_index].flags);
@@@ -953,9 -931,9 +966,9 @@@
  			if (sh->qd_idx >= 0) {
  				disk_index = sh->qd_idx;
  				sync_page_io(log->rdev,
- 					     r5l_ring_add(log, *log_offset, BLOCK_SECTORS),
+ 					     r5l_ring_add(log, log_offset, BLOCK_SECTORS),
  					     PAGE_SIZE, sh->dev[disk_index].page,
 -					     REQ_OP_READ, 0, false);
 +					     READ, false);
  				sh->dev[disk_index].log_checksum =
  					le32_to_cpu(payload->checksum[1]);
  				set_bit(R5_Wantwrite,
* Unmerged path drivers/md/raid5-cache.c
