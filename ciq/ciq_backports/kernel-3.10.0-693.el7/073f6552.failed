fanotify: use notification_lock instead of access_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jan Kara <jack@suse.cz>
commit 073f65522aeb23e46fc8a809d69513132d3acc81
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/073f6552.failed

Fanotify code has its own lock (access_lock) to protect a list of events
waiting for a response from userspace.

However this is somewhat awkward as the same list_head in the event is
protected by notification_lock if it is part of the notification queue
and by access_lock if it is part of the fanotify private queue which
makes it difficult for any reliable checks in the generic code.  So make
fanotify use the same lock - notification_lock - for protecting its
private event list.

Link: http://lkml.kernel.org/r/1473797711-14111-6-git-send-email-jack@suse.cz
	Signed-off-by: Jan Kara <jack@suse.cz>
	Reviewed-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
	Cc: Miklos Szeredi <mszeredi@redhat.com>
	Cc: Eric Paris <eparis@redhat.com>
	Cc: Al Viro <viro@ZenIV.linux.org.uk>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 073f65522aeb23e46fc8a809d69513132d3acc81)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/notify/fanotify/fanotify_user.c
diff --cc fs/notify/fanotify/fanotify_user.c
index 542be39911d4,189fab3ac4e6..000000000000
--- a/fs/notify/fanotify/fanotify_user.c
+++ b/fs/notify/fanotify/fanotify_user.c
@@@ -387,7 -387,6 +386,10 @@@ static int fanotify_release(struct inod
  	 * dequeue them and set the response. They will be freed once the
  	 * response is consumed and fanotify_get_response() returns.
  	 */
++<<<<<<< HEAD
 +	mutex_lock(&group->notification_mutex);
++=======
++>>>>>>> 073f65522aeb (fanotify: use notification_lock instead of access_lock)
  	while (!fsnotify_notify_queue_is_empty(group)) {
  		fsn_event = fsnotify_remove_first_event(group);
  		if (!(fsn_event->mask & FAN_ALL_PERM_EVENTS)) {
* Unmerged path fs/notify/fanotify/fanotify_user.c
diff --git a/include/linux/fsnotify_backend.h b/include/linux/fsnotify_backend.h
index 6b41e8a76df9..f5c12597fee5 100644
--- a/include/linux/fsnotify_backend.h
+++ b/include/linux/fsnotify_backend.h
@@ -176,7 +176,6 @@ struct fsnotify_group {
 		struct fanotify_group_private_data {
 #ifdef CONFIG_FANOTIFY_ACCESS_PERMISSIONS
 			/* allows a group to block waiting for a userspace response */
-			spinlock_t access_lock;
 			struct list_head access_list;
 			wait_queue_head_t access_waitq;
 #endif /* CONFIG_FANOTIFY_ACCESS_PERMISSIONS */
