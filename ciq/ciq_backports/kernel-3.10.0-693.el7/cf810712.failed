xfs: remove s_maxbytes enforcement in xfs_file_read_iter

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Christoph Hellwig <hch@lst.de>
commit cf810712cc82cbfab8f08a46ca6c0289d386a303
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/cf810712.failed

All the three low-level read implementations that we might call already
take care of not overflowing the maximum supported bytes, no need to
duplicate it here.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
	Signed-off-by: Dave Chinner <david@fromorbit.com>


(cherry picked from commit cf810712cc82cbfab8f08a46ca6c0289d386a303)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_file.c
diff --cc fs/xfs/xfs_file.c
index 815d8f3721f9,7ec8225b7fd2..000000000000
--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@@ -295,10 -290,9 +295,14 @@@ xfs_file_aio_read
  	struct inode		*inode = file->f_mapping->host;
  	struct xfs_inode	*ip = XFS_I(inode);
  	struct xfs_mount	*mp = ip->i_mount;
 -	size_t			size = iov_iter_count(to);
 +	size_t			size = 0;
  	ssize_t			ret = 0;
++<<<<<<< HEAD
 +	int			ioflags = 0;
 +	xfs_fsize_t		n;
++=======
+ 	loff_t			pos = iocb->ki_pos;
++>>>>>>> cf810712cc82 (xfs: remove s_maxbytes enforcement in xfs_file_read_iter)
  
  	XFS_STATS_INC(mp, xs_read_calls);
  
* Unmerged path fs/xfs/xfs_file.c
