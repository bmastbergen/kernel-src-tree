PCI: Shift PCI_CLASS_NOT_DEFINED consistently with other classes

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [pci] Shift PCI_CLASS_NOT_DEFINED consistently with other classes (Myron Stowe) [1403464]
Rebuild_FUZZ: 95.93%
commit-author Bjorn Helgaas <bhelgaas@google.com>
commit 2b4aed1d1f119634d80d8c701873c2be01480aa9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2b4aed1d.failed

The PCI class in dev->class is a three-byte value comprising a base class,
sub-class, and interface type.  PCI_CLASS_NOT_DEFINED includes the base
class and sub-class, but not the interface type, so it should be shifted to
make space for the interface.  It happens that PCI_CLASS_NOT_DEFINED is
zero, so it doesn't matter in the end, but we should still use it
consistently with other class definitions.

Treat PCI_CLASS_NOT_DEFINED as a base class/sub-class value that should
appear in bits 8-23 of dev->class.

	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
(cherry picked from commit 2b4aed1d1f119634d80d8c701873c2be01480aa9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/quirks.c
diff --cc drivers/pci/quirks.c
index 164e96c87104,32cc9c802b47..000000000000
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@@ -3627,19 -3649,26 +3627,30 @@@ DECLARE_PCI_FIXUP_HEADER(0x1283, 0x8892
  DECLARE_PCI_FIXUP_HEADER(0x8086, 0x244e, quirk_use_pcie_bridge_dma_alias);
  
  /*
 - * Intersil/Techwell TW686[4589]-based video capture cards have an empty (zero)
 - * class code.  Fix it.
 + * MIC x200 NTB forwards PCIe traffic using multiple alien RIDs. They have to
 + * be added as aliases to the DMA device in order to allow buffer access
 + * when IOMMU is enabled. Following devfns have to match RIT-LUT table
 + * programmed in the EEPROM.
   */
 -static void quirk_tw686x_class(struct pci_dev *pdev)
 +static void quirk_mic_x200_dma_alias(struct pci_dev *pdev)
  {
 -	u32 class = pdev->class;
 -
 -	/* Use "Multimedia controller" class */
 -	pdev->class = (PCI_CLASS_MULTIMEDIA_OTHER << 8) | 0x01;
 -	dev_info(&pdev->dev, "TW686x PCI class overridden (%#08x -> %#08x)\n",
 -		 class, pdev->class);
 +	pci_add_dma_alias(pdev, PCI_DEVFN(0x10, 0x0));
 +	pci_add_dma_alias(pdev, PCI_DEVFN(0x11, 0x0));
 +	pci_add_dma_alias(pdev, PCI_DEVFN(0x12, 0x3));
  }
++<<<<<<< HEAD
 +DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x2260, quirk_mic_x200_dma_alias);
 +DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x2264, quirk_mic_x200_dma_alias);
++=======
+ DECLARE_PCI_FIXUP_CLASS_EARLY(0x1797, 0x6864, PCI_CLASS_NOT_DEFINED, 8,
+ 			      quirk_tw686x_class);
+ DECLARE_PCI_FIXUP_CLASS_EARLY(0x1797, 0x6865, PCI_CLASS_NOT_DEFINED, 8,
+ 			      quirk_tw686x_class);
+ DECLARE_PCI_FIXUP_CLASS_EARLY(0x1797, 0x6868, PCI_CLASS_NOT_DEFINED, 8,
+ 			      quirk_tw686x_class);
+ DECLARE_PCI_FIXUP_CLASS_EARLY(0x1797, 0x6869, PCI_CLASS_NOT_DEFINED, 8,
+ 			      quirk_tw686x_class);
++>>>>>>> 2b4aed1d1f11 (PCI: Shift PCI_CLASS_NOT_DEFINED consistently with other classes)
  
  /*
   * AMD has indicated that the devices below do not support peer-to-peer
diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index a1d7cdb2361f..9ea0cec112f2 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -1331,7 +1331,7 @@ int pci_setup_device(struct pci_dev *dev)
 	bad:
 		dev_err(&dev->dev, "ignoring class %#08x (doesn't match header type %02x)\n",
 			dev->class, dev->hdr_type);
-		dev->class = PCI_CLASS_NOT_DEFINED;
+		dev->class = PCI_CLASS_NOT_DEFINED << 8;
 	}
 
 	/* We found a fine healthy device, go go go... */
* Unmerged path drivers/pci/quirks.c
