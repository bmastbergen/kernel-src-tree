net/mlx5e: Add support for loopback selftest

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] mlx5e: Add support for loopback selftest (Don Dutile) [1386660 1385330 1417286]
Rebuild_FUZZ: 95.24%
commit-author Saeed Mahameed <saeedm@mellanox.com>
commit 0952da791c97477da52fbdb2242477d781b9f37e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0952da79.failed

Extend the self diagnostic tests to support loopback test.

The loopback test doesn't require the offline flag, it will use the
generic dev_queue_xmit and a dedicated packet_type to capture and verify
mlx5e selftest loopback packets.

	Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
	Signed-off-by: Kamal Heib <kamalh@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0952da791c97477da52fbdb2242477d781b9f37e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_common.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index b01f5bb32ed7,9cf32d38fb55..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -646,5 -852,81 +646,16 @@@ int mlx5e_dcbnl_ieee_setets_core(struc
  #endif
  
  u16 mlx5e_get_max_inline_cap(struct mlx5_core_dev *mdev);
++<<<<<<< HEAD
++=======
+ int mlx5e_create_tir(struct mlx5_core_dev *mdev,
+ 		     struct mlx5e_tir *tir, u32 *in, int inlen);
+ void mlx5e_destroy_tir(struct mlx5_core_dev *mdev,
+ 		       struct mlx5e_tir *tir);
+ int mlx5e_create_mdev_resources(struct mlx5_core_dev *mdev);
+ void mlx5e_destroy_mdev_resources(struct mlx5_core_dev *mdev);
+ int mlx5e_refresh_tirs_self_loopback(struct mlx5_core_dev *mdev,
+ 				     bool enable_uc_lb);
++>>>>>>> 0952da791c97 (net/mlx5e: Add support for loopback selftest)
  
 -struct mlx5_eswitch_rep;
 -int mlx5e_vport_rep_load(struct mlx5_eswitch *esw,
 -			 struct mlx5_eswitch_rep *rep);
 -void mlx5e_vport_rep_unload(struct mlx5_eswitch *esw,
 -			    struct mlx5_eswitch_rep *rep);
 -int mlx5e_nic_rep_load(struct mlx5_eswitch *esw, struct mlx5_eswitch_rep *rep);
 -void mlx5e_nic_rep_unload(struct mlx5_eswitch *esw,
 -			  struct mlx5_eswitch_rep *rep);
 -int mlx5e_add_sqs_fwd_rules(struct mlx5e_priv *priv);
 -void mlx5e_remove_sqs_fwd_rules(struct mlx5e_priv *priv);
 -int mlx5e_attr_get(struct net_device *dev, struct switchdev_attr *attr);
 -void mlx5e_handle_rx_cqe_rep(struct mlx5e_rq *rq, struct mlx5_cqe64 *cqe);
 -void mlx5e_update_hw_rep_counters(struct mlx5e_priv *priv);
 -
 -int mlx5e_create_direct_rqts(struct mlx5e_priv *priv);
 -void mlx5e_destroy_rqt(struct mlx5e_priv *priv, struct mlx5e_rqt *rqt);
 -int mlx5e_create_direct_tirs(struct mlx5e_priv *priv);
 -void mlx5e_destroy_direct_tirs(struct mlx5e_priv *priv);
 -int mlx5e_create_tises(struct mlx5e_priv *priv);
 -void mlx5e_cleanup_nic_tx(struct mlx5e_priv *priv);
 -int mlx5e_close(struct net_device *netdev);
 -int mlx5e_open(struct net_device *netdev);
 -void mlx5e_update_stats_work(struct work_struct *work);
 -struct net_device *mlx5e_create_netdev(struct mlx5_core_dev *mdev,
 -				       const struct mlx5e_profile *profile,
 -				       void *ppriv);
 -void mlx5e_destroy_netdev(struct mlx5_core_dev *mdev, struct mlx5e_priv *priv);
 -int mlx5e_attach_netdev(struct mlx5_core_dev *mdev, struct net_device *netdev);
 -void mlx5e_detach_netdev(struct mlx5_core_dev *mdev, struct net_device *netdev);
 -u32 mlx5e_choose_lro_timeout(struct mlx5_core_dev *mdev, u32 wanted_timeout);
 -void mlx5e_add_vxlan_port(struct net_device *netdev,
 -			  struct udp_tunnel_info *ti);
 -void mlx5e_del_vxlan_port(struct net_device *netdev,
 -			  struct udp_tunnel_info *ti);
 -
 -int mlx5e_get_offload_stats(int attr_id, const struct net_device *dev,
 -			    void *sp);
 -bool mlx5e_has_offload_stats(const struct net_device *dev, int attr_id);
 -
 -bool mlx5e_is_uplink_rep(struct mlx5e_priv *priv);
 -bool mlx5e_is_vf_vport_rep(struct mlx5e_priv *priv);
  #endif /* __MLX5_EN_H__ */
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index cc20a22c48b8,89d5c65765d8..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -1730,7 -2136,7 +1730,11 @@@ int mlx5e_open_locked(struct net_devic
  		goto err_clear_state_opened_flag;
  	}
  
++<<<<<<< HEAD
 +	err = mlx5e_refresh_tirs_self_loopback_enable(priv);
++=======
+ 	err = mlx5e_refresh_tirs_self_loopback(priv->mdev, false);
++>>>>>>> 0952da791c97 (net/mlx5e: Add support for loopback selftest)
  	if (err) {
  		netdev_err(netdev, "%s: mlx5e_refresh_tirs_self_loopback_enable failed, %d\n",
  			   __func__, err);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_common.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_common.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_selftest.c
