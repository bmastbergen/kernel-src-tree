bridge: fix compile error when compiling without IPv6 support

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Linus Lüssing <linus.luessing@web.de>
commit 3993c4e159eba0e10c0628737736d6fcf97ab9ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/3993c4e1.failed

Some fields in "struct net_bridge" aren't available when compiling the
kernel without IPv6 support. Therefore adding a check/macro to skip the
complaining code sections in that case.

Introduced by 2cd4143192e8c60f66cb32c3a30c76d0470a372d
("bridge: memorize and export selected IGMP/MLD querier port")

	Reported-by: kbuild test robot <fengguang.wu@intel.com>
	Signed-off-by: Linus Lüssing <linus.luessing@web.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 3993c4e159eba0e10c0628737736d6fcf97ab9ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index 251bf0711bce,abfa0b65a111..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -2145,4 -2214,52 +2145,56 @@@ unlock
  	return count;
  }
  EXPORT_SYMBOL_GPL(br_multicast_list_adjacent);
++<<<<<<< HEAD
 +#endif
++=======
+ 
+ /**
+  * br_multicast_has_querier_adjacent - Checks for a querier behind a bridge port
+  * @dev: The bridge port adjacent to which to check for a querier
+  * @proto: The protocol family to check for: IGMP -> ETH_P_IP, MLD -> ETH_P_IPV6
+  *
+  * Checks whether the given interface has a bridge on top and if so returns
+  * true if a selected querier is behind one of the other ports of this
+  * bridge. Otherwise returns false.
+  */
+ bool br_multicast_has_querier_adjacent(struct net_device *dev, int proto)
+ {
+ 	struct net_bridge *br;
+ 	struct net_bridge_port *port;
+ 	bool ret = false;
+ 
+ 	rcu_read_lock();
+ 	if (!br_port_exists(dev))
+ 		goto unlock;
+ 
+ 	port = br_port_get_rcu(dev);
+ 	if (!port || !port->br)
+ 		goto unlock;
+ 
+ 	br = port->br;
+ 
+ 	switch (proto) {
+ 	case ETH_P_IP:
+ 		if (!timer_pending(&br->ip4_other_query.timer) ||
+ 		    rcu_dereference(br->ip4_querier.port) == port)
+ 			goto unlock;
+ 		break;
+ #if IS_ENABLED(CONFIG_IPV6)
+ 	case ETH_P_IPV6:
+ 		if (!timer_pending(&br->ip6_other_query.timer) ||
+ 		    rcu_dereference(br->ip6_querier.port) == port)
+ 			goto unlock;
+ 		break;
+ #endif
+ 	default:
+ 		goto unlock;
+ 	}
+ 
+ 	ret = true;
+ unlock:
+ 	rcu_read_unlock();
+ 	return ret;
+ }
+ EXPORT_SYMBOL_GPL(br_multicast_has_querier_adjacent);
++>>>>>>> 3993c4e159eb (bridge: fix compile error when compiling without IPv6 support)
* Unmerged path net/bridge/br_multicast.c
