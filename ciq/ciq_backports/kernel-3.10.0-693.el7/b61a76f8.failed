x86/efi: Map RAM into the identity page table for mixed mode

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] efi: Map RAM into the identity page table for mixed mode (Bhupesh Sharma) [1446102]
Rebuild_FUZZ: 96.55%
commit-author Matt Fleming <matt@codeblueprint.co.uk>
commit b61a76f8850d2979550abc42d7e09154ebb8d785
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b61a76f8.failed

We are relying on the pre-existing mappings in 'trampoline_pgd'
when accessing function arguments in the EFI mixed mode thunking
code.

Instead let's map memory explicitly so that things will continue
to work when we move to a separate page table in the future.

	Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Acked-by: Borislav Petkov <bp@suse.de>
	Cc: Andy Lutomirski <luto@amacapital.net>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Toshi Kani <toshi.kani@hp.com>
	Cc: linux-efi@vger.kernel.org
Link: http://lkml.kernel.org/r/1448658575-17029-4-git-send-email-matt@codeblueprint.co.uk
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit b61a76f8850d2979550abc42d7e09154ebb8d785)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/platform/efi/efi_64.c
diff --cc arch/x86/platform/efi/efi_64.c
index 319a8a40b098,102976dda8c4..000000000000
--- a/arch/x86/platform/efi/efi_64.c
+++ b/arch/x86/platform/efi/efi_64.c
@@@ -139,11 -141,12 +139,17 @@@ void efi_sync_low_kernel_mappings(void
  		sizeof(pgd_t) * num_pgds);
  }
  
 -int __init efi_setup_page_tables(unsigned long pa_memmap, unsigned num_pages)
 +int efi_setup_page_tables(unsigned long pa_memmap, unsigned num_pages)
  {
++<<<<<<< HEAD
 +	unsigned long text;
++=======
+ 	unsigned long pfn, text;
+ 	efi_memory_desc_t *md;
+ 	struct page *page;
++>>>>>>> b61a76f8850d (x86/efi: Map RAM into the identity page table for mixed mode)
  	unsigned npages;
 +	struct page *page;
  	pgd_t *pgd;
  
  	if (efi_enabled(EFI_OLD_MEMMAP))
* Unmerged path arch/x86/platform/efi/efi_64.c
