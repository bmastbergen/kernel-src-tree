x86/boot: Refuse to build with data relocations

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] boot: Refuse to build with data relocations (Baoquan He) [1290840]
Rebuild_FUZZ: 95.56%
commit-author Kees Cook <keescook@chromium.org>
commit 98f78525371b55ccd1c480207ce10296c72fa340
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/98f78525.failed

The compressed kernel is built with -fPIC/-fPIE so that it can run in any
location a bootloader happens to put it. However, since ELF relocation
processing is not happening (and all the relocation information has
already been stripped at link time), none of the code can use data
relocations (e.g. static assignments of pointers). This is already noted
in a warning comment at the top of misc.c, but this adds an explicit
check for the condition during the linking stage to block any such bugs
from appearing.

If this was in place with the earlier bug in pagetable.c, the build
would fail like this:

  ...
    CC      arch/x86/boot/compressed/pagetable.o
    DATAREL arch/x86/boot/compressed/vmlinux
  error: arch/x86/boot/compressed/pagetable.o has data relocations!
  make[2]: *** [arch/x86/boot/compressed/vmlinux] Error 1
  ...

A clean build shows:

  ...
    CC      arch/x86/boot/compressed/pagetable.o
    DATAREL arch/x86/boot/compressed/vmlinux
    LD      arch/x86/boot/compressed/vmlinux
  ...

	Suggested-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: H.J. Lu <hjl.tools@gmail.com>
	Cc: Josh Poimboeuf <jpoimboe@redhat.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Yinghai Lu <yinghai@kernel.org>
Link: http://lkml.kernel.org/r/1464216334-17200-2-git-send-email-keescook@chromium.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 98f78525371b55ccd1c480207ce10296c72fa340)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/Makefile
diff --cc arch/x86/boot/compressed/Makefile
index 1dc427850e11,536ccfcc01c6..000000000000
--- a/arch/x86/boot/compressed/Makefile
+++ b/arch/x86/boot/compressed/Makefile
@@@ -32,16 -81,30 +32,38 @@@ VMLINUX_OBJS = $(obj)/vmlinux.lds $(obj
  
  $(obj)/eboot.o: KBUILD_CFLAGS += -fshort-wchar -mno-red-zone
  
 -vmlinux-objs-$(CONFIG_EFI_STUB) += $(obj)/eboot.o $(obj)/efi_stub_$(BITS).o \
 -	$(objtree)/drivers/firmware/efi/libstub/lib.a
 -vmlinux-objs-$(CONFIG_EFI_MIXED) += $(obj)/efi_thunk_$(BITS).o
 +ifeq ($(CONFIG_EFI_STUB), y)
 +	VMLINUX_OBJS += $(obj)/eboot.o $(obj)/efi_stub_$(BITS).o
 +endif
 +ifeq ($(CONFIG_EFI_MIXED), y)
 +	VMLINUX_OBJS += $(obj)/efi_thunk_$(BITS).o
 +endif
  
++<<<<<<< HEAD
 +$(obj)/vmlinux: $(VMLINUX_OBJS) FORCE
++=======
+ # The compressed kernel is built with -fPIC/-fPIE so that a boot loader
+ # can place it anywhere in memory and it will still run. However, since
+ # it is executed as-is without any ELF relocation processing performed
+ # (and has already had all relocation sections stripped from the binary),
+ # none of the code can use data relocations (e.g. static assignments of
+ # pointer values), since they will be meaningless at runtime. This check
+ # will refuse to link the vmlinux if any of these relocations are found.
+ quiet_cmd_check_data_rel = DATAREL $@
+ define cmd_check_data_rel
+ 	for obj in $(filter %.o,$^); do \
+ 		readelf -S $$obj | grep -qF .rel.local && { \
+ 			echo "error: $$obj has data relocations!" >&2; \
+ 			exit 1; \
+ 		} || true; \
+ 	done
+ endef
+ 
+ $(obj)/vmlinux: $(vmlinux-objs-y) FORCE
+ 	$(call if_changed,check_data_rel)
++>>>>>>> 98f78525371b (x86/boot: Refuse to build with data relocations)
  	$(call if_changed,ld)
 +	@:
  
  OBJCOPYFLAGS_vmlinux.bin :=  -R .comment -S
  $(obj)/vmlinux.bin: vmlinux FORCE
* Unmerged path arch/x86/boot/compressed/Makefile
