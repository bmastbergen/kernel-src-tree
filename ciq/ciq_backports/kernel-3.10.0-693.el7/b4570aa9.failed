btrfs: fix compiling with CONFIG_BTRFS_DEBUG enabled.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [fs] btrfs: fix compiling with CONFIG_BTRFS_DEBUG enabled (Bill O'Donnell) [1399590]
Rebuild_FUZZ: 99.05%
commit-author Chris Mason <clm@fb.com>
commit b4570aa994b8fdb3a9c04ed80a6cac69072d4d42
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/b4570aa9.failed

Merging in the free space tree deleted a variable needed when
CONFIG_BTRFS_DEBUG=y

	Signed-off-by: Chris Mason <clm@fb.com>
(cherry picked from commit b4570aa994b8fdb3a9c04ed80a6cac69072d4d42)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent-tree.c
diff --cc fs/btrfs/extent-tree.c
index a71ed9b2925a,83fc61db0e45..000000000000
--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@@ -534,9 -531,37 +534,40 @@@ next
  	total_found += add_new_free_space(block_group, fs_info, last,
  					  block_group->key.objectid +
  					  block_group->key.offset);
++<<<<<<< HEAD
++=======
+ 	caching_ctl->progress = (u64)-1;
+ 
+ out:
+ 	btrfs_free_path(path);
+ 	return ret;
+ }
+ 
+ static noinline void caching_thread(struct btrfs_work *work)
+ {
+ 	struct btrfs_block_group_cache *block_group;
+ 	struct btrfs_fs_info *fs_info;
+ 	struct btrfs_caching_control *caching_ctl;
+ 	struct btrfs_root *extent_root;
+ 	int ret;
+ 
+ 	caching_ctl = container_of(work, struct btrfs_caching_control, work);
+ 	block_group = caching_ctl->block_group;
+ 	fs_info = block_group->fs_info;
+ 	extent_root = fs_info->extent_root;
+ 
+ 	mutex_lock(&caching_ctl->mutex);
+ 	down_read(&fs_info->commit_root_sem);
+ 
+ 	if (btrfs_fs_compat_ro(fs_info, FREE_SPACE_TREE))
+ 		ret = load_free_space_tree(caching_ctl);
+ 	else
+ 		ret = load_extent_tree_free(caching_ctl);
+ 
++>>>>>>> b4570aa994b8 (btrfs: fix compiling with CONFIG_BTRFS_DEBUG enabled.)
  	spin_lock(&block_group->lock);
  	block_group->caching_ctl = NULL;
 -	block_group->cached = ret ? BTRFS_CACHE_ERROR : BTRFS_CACHE_FINISHED;
 +	block_group->cached = BTRFS_CACHE_FINISHED;
  	spin_unlock(&block_group->lock);
  
  #ifdef CONFIG_BTRFS_DEBUG
* Unmerged path fs/btrfs/extent-tree.c
