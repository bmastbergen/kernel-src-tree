bridge: defer switchdev fdb del call in fdb_del_external_learn

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jiri Pirko <jiri@mellanox.com>
commit 56607386e80cc7ce923592e115a3492485b47c72
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/56607386.failed

Since spinlock is held here, defer the switchdev operation. Also, ensure
that defered switchdev ops are processed before port master device
is unlinked.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 56607386e80cc7ce923592e115a3492485b47c72)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_fdb.c
diff --cc net/bridge/br_fdb.c
index 46b89ee4408e,c88bd8e8937e..000000000000
--- a/net/bridge/br_fdb.c
+++ b/net/bridge/br_fdb.c
@@@ -130,6 -131,20 +130,23 @@@ static void fdb_del_hw_addr(struct net_
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void fdb_del_external_learn(struct net_bridge_fdb_entry *f)
+ {
+ 	struct switchdev_obj_port_fdb fdb = {
+ 		.obj = {
+ 			.id = SWITCHDEV_OBJ_ID_PORT_FDB,
+ 			.flags = SWITCHDEV_F_DEFER,
+ 		},
+ 		.vid = f->vlan_id,
+ 	};
+ 
+ 	ether_addr_copy(fdb.addr, f->addr.addr);
+ 	switchdev_port_obj_del(f->dst->dev, &fdb.obj);
+ }
+ 
++>>>>>>> 56607386e80c (bridge: defer switchdev fdb del call in fdb_del_external_learn)
  static void fdb_delete(struct net_bridge *br, struct net_bridge_fdb_entry *f)
  {
  	if (f->is_static)
* Unmerged path net/bridge/br_fdb.c
diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index c4107a488d8b..dc09f43bf1da 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -24,6 +24,7 @@
 #include <linux/slab.h>
 #include <net/sock.h>
 #include <linux/if_vlan.h>
+#include <net/switchdev.h>
 
 #include "br_private.h"
 
@@ -278,6 +279,8 @@ static void del_nbp(struct net_bridge_port *p)
 
 	nbp_vlan_flush(p);
 	br_fdb_delete_by_port(br, p, 0, 1);
+	switchdev_deferred_process();
+
 	nbp_update_port_count(br);
 
 	netdev_upper_dev_unlink(dev, br->dev);
