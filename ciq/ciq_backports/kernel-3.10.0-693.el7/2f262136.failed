dell-smbios: rename dell_send_request() to dell_smbios_send_request()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Michał Kępień <kernel@kempniu.pl>
commit 2f262136159fedceb45b42336ae53f20bc0ff714
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2f262136.failed

As dell_send_request() is exported from the module, its prefix should be
consistent with other exported symbols, so change function name to
dell_smbios_send_request().

	Signed-off-by: Michał Kępień <kernel@kempniu.pl>
	Reviewed-by: Pali Rohár <pali.rohar@gmail.com>
	Signed-off-by: Darren Hart <dvhart@linux.intel.com>
(cherry picked from commit 2f262136159fedceb45b42336ae53f20bc0ff714)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/dell-laptop.c
#	drivers/platform/x86/dell-smbios.c
#	drivers/platform/x86/dell-smbios.h
diff --cc drivers/platform/x86/dell-laptop.c
index 87688ae0318c,9210acf00d47..000000000000
--- a/drivers/platform/x86/dell-laptop.c
+++ b/drivers/platform/x86/dell-laptop.c
@@@ -555,19 -416,19 +555,19 @@@ static int dell_rfkill_set(void *data, 
  	int status;
  	int ret;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  	status = buffer->output[1];
  
  	if (ret != 0)
  		goto out;
  
 -	dell_smbios_clear_buffer();
 +	clear_buffer();
  
  	buffer->input[0] = 0x2;
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  	hwswitch = buffer->output[1];
  
@@@ -577,10 -438,10 +577,10 @@@
  	    (status & BIT(0)) && !(status & BIT(16)))
  		disable = 1;
  
 -	dell_smbios_clear_buffer();
 +	clear_buffer();
  
  	buffer->input[0] = (1 | (radio<<8) | (disable << 16));
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  
   out:
@@@ -595,9 -456,9 +595,9 @@@ static void dell_rfkill_update_sw_state
  	if (status & BIT(0)) {
  		/* Has hw-switch, sync sw_state to BIOS */
  		int block = rfkill_blocked(rfkill);
 -		dell_smbios_clear_buffer();
 +		clear_buffer();
  		buffer->input[0] = (1 | (radio << 8) | (block << 16));
- 		dell_send_request(buffer, 17, 11);
+ 		dell_smbios_send_request(buffer, 17, 11);
  	} else {
  		/* No hw-switch, sync BIOS state to sw_state */
  		rfkill_set_sw_state(rfkill, !!(status & BIT(radio + 16)));
@@@ -618,9 -479,9 +618,9 @@@ static void dell_rfkill_query(struct rf
  	int status;
  	int ret;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  	status = buffer->output[1];
  
@@@ -629,10 -490,10 +629,10 @@@
  		return;
  	}
  
 -	dell_smbios_clear_buffer();
 +	clear_buffer();
  
  	buffer->input[0] = 0x2;
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  	hwswitch = buffer->output[1];
  
@@@ -658,16 -519,16 +658,16 @@@ static int dell_debugfs_show(struct seq
  	int status;
  	int ret;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  	status = buffer->output[1];
  
 -	dell_smbios_clear_buffer();
 +	clear_buffer();
  
  	buffer->input[0] = 0x2;
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	hwswitch_ret = buffer->output[0];
  	hwswitch_state = buffer->output[1];
  
@@@ -756,19 -617,19 +756,19 @@@ static void dell_update_rfkill(struct w
  	int status;
  	int ret;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  	status = buffer->output[1];
  
  	if (ret != 0)
  		goto out;
  
 -	dell_smbios_clear_buffer();
 +	clear_buffer();
  
  	buffer->input[0] = 0x2;
- 	dell_send_request(buffer, 17, 11);
+ 	dell_smbios_send_request(buffer, 17, 11);
  	ret = buffer->output[0];
  
  	if (ret == 0 && (status & BIT(0)))
@@@ -848,11 -709,11 +848,16 @@@ static int __init dell_setup_rfkill(voi
  	if (!force_rfkill && !whitelisted)
  		return 0;
  
++<<<<<<< HEAD
 +	get_buffer();
 +	dell_send_request(buffer, 17, 11);
++=======
+ 	dell_smbios_get_buffer();
+ 	dell_smbios_send_request(buffer, 17, 11);
++>>>>>>> 2f262136159f (dell-smbios: rename dell_send_request() to dell_smbios_send_request())
  	ret = buffer->output[0];
  	status = buffer->output[1];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
  	/* dell wireless info smbios call is not supported */
  	if (ret != 0)
@@@ -1296,10 -1157,10 +1301,10 @@@ static int kbd_get_info(struct kbd_inf
  	u8 units;
  	int ret;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  
  	buffer->input[0] = 0x0;
- 	dell_send_request(buffer, 4, 11);
+ 	dell_smbios_send_request(buffer, 4, 11);
  	ret = buffer->output[0];
  
  	if (ret) {
@@@ -1384,10 -1245,10 +1389,10 @@@ static int kbd_get_state(struct kbd_sta
  {
  	int ret;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  
  	buffer->input[0] = 0x1;
- 	dell_send_request(buffer, 4, 11);
+ 	dell_smbios_send_request(buffer, 4, 11);
  	ret = buffer->output[0];
  
  	if (ret) {
@@@ -1423,9 -1284,9 +1428,9 @@@ static int kbd_set_state(struct kbd_sta
  	buffer->input[1] |= (state->timeout_unit & 0x3) << 30;
  	buffer->input[2] = state->als_setting & 0xFF;
  	buffer->input[2] |= (state->level & 0xFF) << 16;
- 	dell_send_request(buffer, 4, 11);
+ 	dell_smbios_send_request(buffer, 4, 11);
  	ret = buffer->output[0];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
  	return dell_smi_error(ret);
  }
@@@ -1462,12 -1323,12 +1467,12 @@@ static int kbd_set_token_bit(u8 bit
  	if (id == -1)
  		return -EINVAL;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  	buffer->input[0] = da_tokens[id].location;
  	buffer->input[1] = da_tokens[id].value;
- 	dell_send_request(buffer, 1, 0);
+ 	dell_smbios_send_request(buffer, 1, 0);
  	ret = buffer->output[0];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
  	return dell_smi_error(ret);
  }
@@@ -1485,12 -1346,12 +1490,12 @@@ static int kbd_get_token_bit(u8 bit
  	if (id == -1)
  		return -EINVAL;
  
 -	dell_smbios_get_buffer();
 +	get_buffer();
  	buffer->input[0] = da_tokens[id].location;
- 	dell_send_request(buffer, 0, 0);
+ 	dell_smbios_send_request(buffer, 0, 0);
  	ret = buffer->output[0];
  	val = buffer->output[1];
 -	dell_smbios_release_buffer();
 +	release_buffer();
  
  	if (ret)
  		return dell_smi_error(ret);
@@@ -2144,12 -2017,12 +2149,12 @@@ static int __init dell_init(void
  
  	token = find_token_location(BRIGHTNESS_TOKEN);
  	if (token != -1) {
 -		dell_smbios_get_buffer();
 +		get_buffer();
  		buffer->input[0] = token;
- 		dell_send_request(buffer, 0, 2);
+ 		dell_smbios_send_request(buffer, 0, 2);
  		if (buffer->output[0] == 0)
  			max_intensity = buffer->output[3];
 -		dell_smbios_release_buffer();
 +		release_buffer();
  	}
  
  	if (max_intensity) {
* Unmerged path drivers/platform/x86/dell-smbios.c
* Unmerged path drivers/platform/x86/dell-smbios.h
* Unmerged path drivers/platform/x86/dell-laptop.c
* Unmerged path drivers/platform/x86/dell-smbios.c
* Unmerged path drivers/platform/x86/dell-smbios.h
