EDAC: Add routine to check if MC devices list is empty

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Yazen Ghannam <Yazen.Ghannam@amd.com>
commit d7fc9d77acb8651e5fcb77df71dfd11fcf1f08ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d7fc9d77.failed

We need to know if any MC devices have been allocated.

	Signed-off-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
	Cc: linux-edac <linux-edac@vger.kernel.org>
Link: http://lkml.kernel.org/r/1485537863-2707-7-git-send-email-Yazen.Ghannam@amd.com
[ Prettify text. ]
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit d7fc9d77acb8651e5fcb77df71dfd11fcf1f08ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/edac/edac_mc.c
#	drivers/edac/edac_mc.h
diff --cc drivers/edac/edac_mc.c
index 48e59eae88d6,e5573c56b15e..000000000000
--- a/drivers/edac/edac_mc.c
+++ b/drivers/edac/edac_mc.c
@@@ -477,15 -453,22 +477,34 @@@ void edac_mc_free(struct mem_ctl_info *
  }
  EXPORT_SYMBOL_GPL(edac_mc_free);
  
++<<<<<<< HEAD
 +
 +/**
 + * find_mci_by_dev
 + *
 + *	scan list of controllers looking for the one that manages
 + *	the 'dev' device
 + * @dev: pointer to a struct device related with the MCI
 + */
 +struct mem_ctl_info *find_mci_by_dev(struct device *dev)
++=======
+ bool edac_has_mcs(void)
+ {
+ 	bool ret;
+ 
+ 	mutex_lock(&mem_ctls_mutex);
+ 
+ 	ret = list_empty(&mc_devices);
+ 
+ 	mutex_unlock(&mem_ctls_mutex);
+ 
+ 	return !ret;
+ }
+ EXPORT_SYMBOL_GPL(edac_has_mcs);
+ 
+ /* Caller must hold mem_ctls_mutex */
+ static struct mem_ctl_info *__find_mci_by_dev(struct device *dev)
++>>>>>>> d7fc9d77acb8 (EDAC: Add routine to check if MC devices list is empty)
  {
  	struct mem_ctl_info *mci;
  	struct list_head *item;
* Unmerged path drivers/edac/edac_mc.h
* Unmerged path drivers/edac/edac_mc.c
* Unmerged path drivers/edac/edac_mc.h
