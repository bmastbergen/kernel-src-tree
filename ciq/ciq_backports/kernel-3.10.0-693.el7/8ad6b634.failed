KVM: Add KVM_EXIT_SYSTEM_EVENT to user space API header

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Anup Patel <anup.patel@linaro.org>
commit 8ad6b634928a25971dc42dce101808b1491f87ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/8ad6b634.failed

Currently, we don't have an exit reason to notify user space about
a system-level event (for e.g. system reset or shutdown) triggered
by the VCPU. This patch adds exit reason KVM_EXIT_SYSTEM_EVENT for
this purpose. We can also inform user space about the 'type' and
architecture specific 'flags' of a system-level event using the
kvm_run structure.

This newly added KVM_EXIT_SYSTEM_EVENT will be used by KVM ARM/ARM64
in-kernel PSCI v0.2 support to reset/shutdown VMs.

	Signed-off-by: Anup Patel <anup.patel@linaro.org>
	Signed-off-by: Pranavkumar Sawargaonkar <pranavkumar@linaro.org>
	Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
	Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
	Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
(cherry picked from commit 8ad6b634928a25971dc42dce101808b1491f87ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/virtual/kvm/api.txt
#	include/uapi/linux/kvm.h
diff --cc Documentation/virtual/kvm/api.txt
index 7d0b79a97ed9,6a5de5643e0b..000000000000
--- a/Documentation/virtual/kvm/api.txt
+++ b/Documentation/virtual/kvm/api.txt
@@@ -2901,17 -2740,20 +2901,34 @@@ It gets triggered whenever both KVM_CAP
  external interrupt has just been delivered into the guest. User space
  should put the acknowledged interrupt vector into the 'epr' field.
  
++<<<<<<< HEAD
 +		/* KVM_EXIT_IOAPIC_EOI */
 +		struct {
 +			__u8 vector;
 +		} eoi;
 +
 +Indicates that the VCPU's in-kernel local APIC received an EOI for a
 +level-triggered IOAPIC interrupt.  This exit only triggers when the
 +IOAPIC is implemented in userspace (i.e. KVM_CAP_SPLIT_IRQCHIP is enabled);
 +the userspace IOAPIC should process the EOI and retrigger the interrupt if
 +it is still asserted.  Vector is the LAPIC interrupt vector for which the
 +EOI was received.
++=======
+ 		/* KVM_EXIT_SYSTEM_EVENT */
+ 		struct {
+ #define KVM_SYSTEM_EVENT_SHUTDOWN       1
+ #define KVM_SYSTEM_EVENT_RESET          2
+ 			__u32 type;
+ 			__u64 flags;
+ 		} system_event;
+ 
+ If exit_reason is KVM_EXIT_SYSTEM_EVENT then the vcpu has triggered
+ a system-level event using some architecture specific mechanism (hypercall
+ or some special instruction). In case of ARM/ARM64, this is triggered using
+ HVC instruction based PSCI call from the vcpu. The 'type' field describes
+ the system-level event type. The 'flags' field describes architecture
+ specific flags for the system-level event.
++>>>>>>> 8ad6b634928a (KVM: Add KVM_EXIT_SYSTEM_EVENT to user space API header)
  
  		/* Fix the size of the union. */
  		char padding[256];
diff --cc include/uapi/linux/kvm.h
index 9f7c8e1d99b2,16cb1a14993b..000000000000
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@@ -171,7 -171,7 +171,11 @@@ struct kvm_pit_config 
  #define KVM_EXIT_WATCHDOG         21
  #define KVM_EXIT_S390_TSCH        22
  #define KVM_EXIT_EPR              23
++<<<<<<< HEAD
 +#define KVM_EXIT_IOAPIC_EOI       26
++=======
+ #define KVM_EXIT_SYSTEM_EVENT     24
++>>>>>>> 8ad6b634928a (KVM: Add KVM_EXIT_SYSTEM_EVENT to user space API header)
  
  /* For KVM_EXIT_INTERNAL_ERROR */
  /* Emulate instruction failed. */
@@@ -302,10 -302,13 +306,20 @@@ struct kvm_run 
  		struct {
  			__u32 epr;
  		} epr;
++<<<<<<< HEAD
 +		/* KVM_EXIT_IOAPIC_EOI */
 +		struct {
 +			__u8 vector;
 +		} eoi;
++=======
+ 		/* KVM_EXIT_SYSTEM_EVENT */
+ 		struct {
+ #define KVM_SYSTEM_EVENT_SHUTDOWN       1
+ #define KVM_SYSTEM_EVENT_RESET          2
+ 			__u32 type;
+ 			__u64 flags;
+ 		} system_event;
++>>>>>>> 8ad6b634928a (KVM: Add KVM_EXIT_SYSTEM_EVENT to user space API header)
  		/* Fix the size of the union. */
  		char padding[256];
  	};
* Unmerged path Documentation/virtual/kvm/api.txt
* Unmerged path include/uapi/linux/kvm.h
