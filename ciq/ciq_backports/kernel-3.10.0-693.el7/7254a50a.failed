blk-mq: remove blk_mq_abort_requeue_list()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Ming Lei <ming.lei@redhat.com>
commit 7254a50a5db40ca6739ddf37e0a45e6912532b2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7254a50a.failed

No one uses it any more, so remove it.

	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 7254a50a5db40ca6739ddf37e0a45e6912532b2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
#	include/linux/blk-mq.h
diff --cc block/blk-mq.c
index 7fe295c51eb5,f2224ffd225d..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -533,25 -620,13 +533,35 @@@ void blk_mq_kick_requeue_list(struct re
  }
  EXPORT_SYMBOL(blk_mq_kick_requeue_list);
  
++<<<<<<< HEAD
 +void blk_mq_abort_requeue_list(struct request_queue *q)
 +{
 +	unsigned long flags;
 +	LIST_HEAD(rq_list);
 +
 +	spin_lock_irqsave(&q->requeue_lock, flags);
 +	list_splice_init(&q->requeue_list, &rq_list);
 +	spin_unlock_irqrestore(&q->requeue_lock, flags);
 +
 +	while (!list_empty(&rq_list)) {
 +		struct request *rq;
 +
 +		rq = list_first_entry(&rq_list, struct request, queuelist);
 +		list_del_init(&rq->queuelist);
 +		rq->errors = -EIO;
 +		blk_mq_end_request(rq, rq->errors);
 +	}
 +}
 +EXPORT_SYMBOL(blk_mq_abort_requeue_list);
++=======
+ void blk_mq_delay_kick_requeue_list(struct request_queue *q,
+ 				    unsigned long msecs)
+ {
+ 	kblockd_schedule_delayed_work(&q->requeue_work,
+ 				      msecs_to_jiffies(msecs));
+ }
+ EXPORT_SYMBOL(blk_mq_delay_kick_requeue_list);
++>>>>>>> 7254a50a5db4 (blk-mq: remove blk_mq_abort_requeue_list())
  
  struct request *blk_mq_tag_to_rq(struct blk_mq_tags *tags, unsigned int tag)
  {
diff --cc include/linux/blk-mq.h
index ff3334170322,fcd641032f8d..000000000000
--- a/include/linux/blk-mq.h
+++ b/include/linux/blk-mq.h
@@@ -252,12 -233,12 +252,17 @@@ void blk_mq_start_request(struct reques
  void blk_mq_end_request(struct request *rq, int error);
  void __blk_mq_end_request(struct request *rq, int error);
  
 -void blk_mq_requeue_request(struct request *rq, bool kick_requeue_list);
 -void blk_mq_add_to_requeue_list(struct request *rq, bool at_head,
 -				bool kick_requeue_list);
 +void blk_mq_requeue_request(struct request *rq);
 +void blk_mq_add_to_requeue_list(struct request *rq, bool at_head);
 +void blk_mq_cancel_requeue_work(struct request_queue *q);
  void blk_mq_kick_requeue_list(struct request_queue *q);
++<<<<<<< HEAD
 +void blk_mq_abort_requeue_list(struct request_queue *q);
 +void blk_mq_complete_request(struct request *rq, int error);
++=======
+ void blk_mq_delay_kick_requeue_list(struct request_queue *q, unsigned long msecs);
+ void blk_mq_complete_request(struct request *rq);
++>>>>>>> 7254a50a5db4 (blk-mq: remove blk_mq_abort_requeue_list())
  
  bool blk_mq_queue_stopped(struct request_queue *q);
  void blk_mq_stop_hw_queue(struct blk_mq_hw_ctx *hctx);
* Unmerged path block/blk-mq.c
* Unmerged path include/linux/blk-mq.h
