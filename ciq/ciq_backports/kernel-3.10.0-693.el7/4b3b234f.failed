x86/cpu: Rename "WESTMERE2" family to "NEHALEM_G"

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Dave Hansen <dave.hansen@linux.intel.com>
commit 4b3b234f434d440fcd749b9636131b76e2ce561e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4b3b234f.failed

Len Brown noticed something was amiss in our INTEL_FAM6_*
definitions.  It seems like model 0x1F was a Nehalem part,
marketed as "Intel Core i7 and i5 Processors" (according to the
SDM).  But, although it was a Nehalem 0x1F had some uncore events
which were shared with Westmere.

Len also mentioned he thought it was called "Havendale", which
Wikipedia says was graphics-oriented and canceled:

	https://en.wikipedia.org/wiki/Nehalem_(microarchitecture)

So either way, it's probably not imporant what we call it, but
call it Nehalem to be accurate, and add a "G" since it seems
graphics-related.  If it were canceled that would be a good reason
why it's so sparsely and inconsistently referred to in the code.

	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Dave Hansen <dave@sr71.net>
	Cc: Len Brown <lenb@kernel.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: http://lkml.kernel.org/r/20160629192737.949C41A8@viggo.jf.intel.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 4b3b234f434d440fcd749b9636131b76e2ce561e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/idle/intel_idle.c
diff --cc drivers/idle/intel_idle.c
index 2f3840328ea3,d103adc57778..000000000000
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@@ -849,40 -1020,42 +849,76 @@@ static const struct idle_cpu idle_cpu_d
  #define ICPU(model, cpu) \
  	{ X86_VENDOR_INTEL, 6, model, X86_FEATURE_MWAIT, (unsigned long)&cpu }
  
++<<<<<<< HEAD
 +static const struct x86_cpu_id intel_idle_ids[] = {
 +	ICPU(0x1a, idle_cpu_nehalem),
 +	ICPU(0x1e, idle_cpu_nehalem),
 +	ICPU(0x1f, idle_cpu_nehalem),
 +	ICPU(0x25, idle_cpu_nehalem),
 +	ICPU(0x2c, idle_cpu_nehalem),
 +	ICPU(0x2e, idle_cpu_nehalem),
 +	ICPU(0x1c, idle_cpu_atom),
 +	ICPU(0x26, idle_cpu_lincroft),
 +	ICPU(0x2f, idle_cpu_nehalem),
 +	ICPU(0x2a, idle_cpu_snb),
 +	ICPU(0x2d, idle_cpu_snb),
 +	ICPU(0x36, idle_cpu_atom),
 +	ICPU(0x37, idle_cpu_byt),
 +	ICPU(0x3a, idle_cpu_ivb),
 +	ICPU(0x3e, idle_cpu_ivt),
 +	ICPU(0x3c, idle_cpu_hsw),
 +	ICPU(0x3f, idle_cpu_hsw),
 +	ICPU(0x45, idle_cpu_hsw),
 +	ICPU(0x46, idle_cpu_hsw),
 +	ICPU(0x4d, idle_cpu_avn),
 +	ICPU(0x3d, idle_cpu_bdw),
 +	ICPU(0x47, idle_cpu_bdw),
 +	ICPU(0x4f, idle_cpu_bdw),
 +	ICPU(0x56, idle_cpu_bdw),
 +	ICPU(0x4e, idle_cpu_skl),
 +	ICPU(0x5e, idle_cpu_skl),
 +	ICPU(0x8e, idle_cpu_skl),
 +	ICPU(0x9e, idle_cpu_skl),
 +	ICPU(0x55, idle_cpu_skx),
 +	ICPU(0x57, idle_cpu_knl),
 +	ICPU(0x5f, idle_cpu_dnv),
++=======
+ static const struct x86_cpu_id intel_idle_ids[] __initconst = {
+ 	ICPU(INTEL_FAM6_NEHALEM_EP,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_NEHALEM,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_NEHALEM_G,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_WESTMERE,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_WESTMERE_EP,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_NEHALEM_EX,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_ATOM_PINEVIEW,		idle_cpu_atom),
+ 	ICPU(INTEL_FAM6_ATOM_LINCROFT,		idle_cpu_lincroft),
+ 	ICPU(INTEL_FAM6_WESTMERE_EX,		idle_cpu_nehalem),
+ 	ICPU(INTEL_FAM6_SANDYBRIDGE,		idle_cpu_snb),
+ 	ICPU(INTEL_FAM6_SANDYBRIDGE_X,		idle_cpu_snb),
+ 	ICPU(INTEL_FAM6_ATOM_CEDARVIEW,		idle_cpu_atom),
+ 	ICPU(INTEL_FAM6_ATOM_SILVERMONT1,	idle_cpu_byt),
+ 	ICPU(INTEL_FAM6_ATOM_AIRMONT,		idle_cpu_cht),
+ 	ICPU(INTEL_FAM6_IVYBRIDGE,		idle_cpu_ivb),
+ 	ICPU(INTEL_FAM6_IVYBRIDGE_X,		idle_cpu_ivt),
+ 	ICPU(INTEL_FAM6_HASWELL_CORE,		idle_cpu_hsw),
+ 	ICPU(INTEL_FAM6_HASWELL_X,		idle_cpu_hsw),
+ 	ICPU(INTEL_FAM6_HASWELL_ULT,		idle_cpu_hsw),
+ 	ICPU(INTEL_FAM6_HASWELL_GT3E,		idle_cpu_hsw),
+ 	ICPU(INTEL_FAM6_ATOM_SILVERMONT2,	idle_cpu_avn),
+ 	ICPU(INTEL_FAM6_BROADWELL_CORE,		idle_cpu_bdw),
+ 	ICPU(INTEL_FAM6_BROADWELL_GT3E,		idle_cpu_bdw),
+ 	ICPU(INTEL_FAM6_BROADWELL_X,		idle_cpu_bdw),
+ 	ICPU(INTEL_FAM6_BROADWELL_XEON_D,	idle_cpu_bdw),
+ 	ICPU(INTEL_FAM6_SKYLAKE_MOBILE,		idle_cpu_skl),
+ 	ICPU(INTEL_FAM6_SKYLAKE_DESKTOP,	idle_cpu_skl),
+ 	ICPU(INTEL_FAM6_KABYLAKE_MOBILE,	idle_cpu_skl),
+ 	ICPU(INTEL_FAM6_KABYLAKE_DESKTOP,	idle_cpu_skl),
+ 	ICPU(INTEL_FAM6_SKYLAKE_X,		idle_cpu_skx),
+ 	ICPU(INTEL_FAM6_XEON_PHI_KNL,		idle_cpu_knl),
+ 	ICPU(INTEL_FAM6_ATOM_GOLDMONT,		idle_cpu_bxt),
++>>>>>>> 4b3b234f434d (x86/cpu: Rename "WESTMERE2" family to "NEHALEM_G")
  	{}
  };
 -MODULE_DEVICE_TABLE(x86cpu, intel_idle_ids);
  
  /*
   * intel_idle_probe()
diff --git a/arch/x86/include/asm/intel-family.h b/arch/x86/include/asm/intel-family.h
index a7827c4e1514..29787b63f477 100644
--- a/arch/x86/include/asm/intel-family.h
+++ b/arch/x86/include/asm/intel-family.h
@@ -18,10 +18,10 @@
 #define INTEL_FAM6_CORE2_DUNNINGTON	0x1D
 
 #define INTEL_FAM6_NEHALEM		0x1E
+#define INTEL_FAM6_NEHALEM_G		0x1F /* Auburndale / Havendale */
 #define INTEL_FAM6_NEHALEM_EP		0x1A
 #define INTEL_FAM6_NEHALEM_EX		0x2E
 #define INTEL_FAM6_WESTMERE		0x25
-#define INTEL_FAM6_WESTMERE2		0x1F
 #define INTEL_FAM6_WESTMERE_EP		0x2C
 #define INTEL_FAM6_WESTMERE_EX		0x2F
 
* Unmerged path drivers/idle/intel_idle.c
