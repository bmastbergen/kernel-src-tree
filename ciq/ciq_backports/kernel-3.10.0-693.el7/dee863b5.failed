hv: export current Hyper-V clocksource

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [hv] export current Hyper-V clocksource (Vitaly Kuznetsov) [1388419]
Rebuild_FUZZ: 94.44%
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit dee863b571b0a76e9c549ee99e8782bb4bc6502b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/dee863b5.failed

As a preparation to implementing Hyper-V PTP device supporting
.getcrosststamp we need to export a reference to the current Hyper-V
clocksource in use (MSR or TSC page).

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit dee863b571b0a76e9c549ee99e8782bb4bc6502b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/hyperv/hv_init.c
#	arch/x86/include/asm/mshyperv.h
diff --cc arch/x86/include/asm/mshyperv.h
index aaf59b7da98a,7c9c895432a9..000000000000
--- a/arch/x86/include/asm/mshyperv.h
+++ b/arch/x86/include/asm/mshyperv.h
@@@ -3,8 -3,28 +3,9 @@@
  
  #include <linux/types.h>
  #include <linux/interrupt.h>
+ #include <linux/clocksource.h>
  #include <asm/hyperv.h>
  
 -/*
 - * The below CPUID leaves are present if VersionAndFeatures.HypervisorPresent
 - * is set by CPUID(HVCPUID_VERSION_FEATURES).
 - */
 -enum hv_cpuid_function {
 -	HVCPUID_VERSION_FEATURES		= 0x00000001,
 -	HVCPUID_VENDOR_MAXFUNCTION		= 0x40000000,
 -	HVCPUID_INTERFACE			= 0x40000001,
 -
 -	/*
 -	 * The remaining functions depend on the value of
 -	 * HVCPUID_INTERFACE
 -	 */
 -	HVCPUID_VERSION				= 0x40000002,
 -	HVCPUID_FEATURES			= 0x40000003,
 -	HVCPUID_ENLIGHTENMENT_INFO		= 0x40000004,
 -	HVCPUID_IMPLEMENTATION_LIMITS		= 0x40000005,
 -};
 -
  struct ms_hyperv_info {
  	u32 features;
  	u32 misc_features;
@@@ -25,4 -167,13 +26,16 @@@ void hv_setup_kexec_handler(void (*hand
  void hv_remove_kexec_handler(void);
  void hv_setup_crash_handler(void (*handler)(struct pt_regs *regs));
  void hv_remove_crash_handler(void);
++<<<<<<< HEAD
++=======
+ 
+ #if IS_ENABLED(CONFIG_HYPERV)
+ extern struct clocksource *hyperv_cs;
+ 
+ void hyperv_init(void);
+ void hyperv_report_panic(struct pt_regs *regs);
+ bool hv_is_hypercall_page_setup(void);
+ void hyperv_cleanup(void);
+ #endif
++>>>>>>> dee863b571b0 (hv: export current Hyper-V clocksource)
  #endif
* Unmerged path arch/x86/hyperv/hv_init.c
* Unmerged path arch/x86/hyperv/hv_init.c
* Unmerged path arch/x86/include/asm/mshyperv.h
