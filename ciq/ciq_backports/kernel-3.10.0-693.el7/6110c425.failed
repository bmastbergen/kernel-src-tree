usb: ohci-da8xx: Remove code that references mach

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [usb] ohci-da8xx: Remove code that references mach (Torez Smith) [1383823]
Rebuild_FUZZ: 94.62%
commit-author David Lechner <david@lechnology.com>
commit 6110c425d98b7ed036bba3670e635a9363dd072e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/6110c425.failed

Including mach/* is frowned upon in device drivers, so get rid of it.

This replaces usb20_clk and code that pokes CFGCHIP2 with a proper phy
driver.

	Signed-off-by: David Lechner <david@lechnology.com>
	Acked-by: Alan Stern <stern@rowland.harvard.edu>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 6110c425d98b7ed036bba3670e635a9363dd072e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/host/ohci-da8xx.c
diff --cc drivers/usb/host/ohci-da8xx.c
index 0b815a856811,3656d7cea58c..000000000000
--- a/drivers/usb/host/ohci-da8xx.c
+++ b/drivers/usb/host/ohci-da8xx.c
@@@ -300,26 -296,30 +296,50 @@@ static int usb_hcd_da8xx_probe(const st
  	if (hub == NULL)
  		return -ENODEV;
  
++<<<<<<< HEAD
 +	usb11_clk = clk_get(&pdev->dev, "usb11");
 +	if (IS_ERR(usb11_clk))
++=======
+ 	usb11_clk = devm_clk_get(&pdev->dev, "usb11");
+ 	if (IS_ERR(usb11_clk)) {
+ 		if (PTR_ERR(usb11_clk) != -EPROBE_DEFER)
+ 			dev_err(&pdev->dev, "Failed to get clock.\n");
++>>>>>>> 6110c425d98b (usb: ohci-da8xx: Remove code that references mach)
  		return PTR_ERR(usb11_clk);
+ 	}
  
++<<<<<<< HEAD
 +	usb20_clk = clk_get(&pdev->dev, "usb20");
 +	if (IS_ERR(usb20_clk)) {
 +		error = PTR_ERR(usb20_clk);
 +		goto err0;
++=======
+ 	usb11_phy = devm_phy_get(&pdev->dev, "usb-phy");
+ 	if (IS_ERR(usb11_phy)) {
+ 		if (PTR_ERR(usb11_phy) != -EPROBE_DEFER)
+ 			dev_err(&pdev->dev, "Failed to get phy.\n");
+ 		return PTR_ERR(usb11_phy);
++>>>>>>> 6110c425d98b (usb: ohci-da8xx: Remove code that references mach)
  	}
  
  	hcd = usb_create_hcd(driver, &pdev->dev, dev_name(&pdev->dev));
 -	if (!hcd)
 -		return -ENOMEM;
 +	if (!hcd) {
 +		error = -ENOMEM;
 +		goto err1;
 +	}
  
  	mem = platform_get_resource(pdev, IORESOURCE_MEM, 0);
++<<<<<<< HEAD
 +	if (!mem) {
 +		error = -ENODEV;
 +		goto err2;
++=======
+ 	hcd->regs = devm_ioremap_resource(&pdev->dev, mem);
+ 	if (IS_ERR(hcd->regs)) {
+ 		error = PTR_ERR(hcd->regs);
+ 		dev_err(&pdev->dev, "failed to map ohci.\n");
+ 		goto err;
++>>>>>>> 6110c425d98b (usb: ohci-da8xx: Remove code that references mach)
  	}
  	hcd->rsrc_start = mem->start;
  	hcd->rsrc_len = resource_size(mem);
@@@ -416,10 -396,14 +436,18 @@@ static int ohci_da8xx_suspend(struct pl
  		msleep(5);
  	ohci->next_statechange = jiffies;
  
++<<<<<<< HEAD
 +	ohci_da8xx_clock(0);
++=======
+ 	ret = ohci_suspend(hcd, do_wakeup);
+ 	if (ret)
+ 		return ret;
+ 
+ 	ohci_da8xx_disable();
++>>>>>>> 6110c425d98b (usb: ohci-da8xx: Remove code that references mach)
  	hcd->state = HC_STATE_SUSPENDED;
 -
 -	return ret;
 +	dev->dev.power.power_state = PMSG_SUSPEND;
 +	return 0;
  }
  
  static int ohci_da8xx_resume(struct platform_device *dev)
diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index 68681d8826ce..119485183e40 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -494,6 +494,7 @@ config USB_OHCI_HCD_DAVINCI
 	bool "OHCI support for TI DaVinci DA8xx"
 	depends on ARCH_DAVINCI_DA8XX
 	depends on USB_OHCI_HCD=y
+	select PHY_DA8XX_USB
 	default y
 	help
 	  Enables support for the DaVinci DA8xx integrated OHCI
* Unmerged path drivers/usb/host/ohci-da8xx.c
