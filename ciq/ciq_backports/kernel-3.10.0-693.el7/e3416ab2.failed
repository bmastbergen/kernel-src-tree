iser-target: Kill the ->isert_cmd back pointer in struct iser_tx_desc

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Christoph Hellwig <hch@lst.de>
commit e3416ab2d156ac0f0a3d9e55bcdff69d109ba403
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e3416ab2.failed

We only use the pointer when processing regular iSER commands, and it then
always points to the struct iser_cmd that contains the TX descriptor.

Remove it and rely on container_of to save a little space and avoid a
pointer that is updated multiple times per processed command.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
	Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
(cherry picked from commit e3416ab2d156ac0f0a3d9e55bcdff69d109ba403)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/ulp/isert/ib_isert.c
diff --cc drivers/infiniband/ulp/isert/ib_isert.c
index 20e1e6d137fb,60b30d338a81..000000000000
--- a/drivers/infiniband/ulp/isert/ib_isert.c
+++ b/drivers/infiniband/ulp/isert/ib_isert.c
@@@ -1888,8 -1881,7 +1887,12 @@@ isert_rdma_write_done(struct ib_cq *cq
  	struct isert_conn *isert_conn = wc->qp->qp_context;
  	struct isert_device *device = isert_conn->device;
  	struct iser_tx_desc *desc = cqe_to_tx_desc(wc->wr_cqe);
++<<<<<<< HEAD
 +	struct isert_cmd *isert_cmd = desc->isert_cmd;
 +	struct isert_rdma_wr *wr = &isert_cmd->rdma_wr;
++=======
+ 	struct isert_cmd *isert_cmd = tx_desc_to_cmd(desc);
++>>>>>>> e3416ab2d156 (iser-target: Kill the ->isert_cmd back pointer in struct iser_tx_desc)
  	struct se_cmd *cmd = &isert_cmd->iscsi_cmd->se_cmd;
  	int ret = 0;
  
@@@ -1922,8 -1915,7 +1925,12 @@@ isert_rdma_read_done(struct ib_cq *cq, 
  	struct isert_conn *isert_conn = wc->qp->qp_context;
  	struct isert_device *device = isert_conn->device;
  	struct iser_tx_desc *desc = cqe_to_tx_desc(wc->wr_cqe);
++<<<<<<< HEAD
 +	struct isert_cmd *isert_cmd = desc->isert_cmd;
 +	struct isert_rdma_wr *wr = &isert_cmd->rdma_wr;
++=======
+ 	struct isert_cmd *isert_cmd = tx_desc_to_cmd(desc);
++>>>>>>> e3416ab2d156 (iser-target: Kill the ->isert_cmd back pointer in struct iser_tx_desc)
  	struct iscsi_cmd *cmd = isert_cmd->iscsi_cmd;
  	struct se_cmd *se_cmd = &cmd->se_cmd;
  	int ret = 0;
@@@ -2347,12 -2338,12 +2354,17 @@@ isert_map_rdma(struct iscsi_conn *conn
  	u32 offset, data_len, data_left, rdma_write_max, va_offset = 0;
  	int ret = 0, i, ib_sge_cnt;
  
++<<<<<<< HEAD
 +	isert_cmd->tx_desc.isert_cmd = isert_cmd;
 +
 +	offset = wr->iser_ib_op == ISER_IB_RDMA_READ ? cmd->write_data_done : 0;
++=======
+ 	offset = isert_cmd->iser_ib_op == ISER_IB_RDMA_READ ?
+ 			cmd->write_data_done : 0;
++>>>>>>> e3416ab2d156 (iser-target: Kill the ->isert_cmd back pointer in struct iser_tx_desc)
  	ret = isert_map_data_buf(isert_conn, isert_cmd, se_cmd->t_data_sg,
  				 se_cmd->t_data_nents, se_cmd->data_length,
 -				 offset, isert_cmd->iser_ib_op,
 -				 &isert_cmd->data);
 +				 offset, wr->iser_ib_op, &wr->data);
  	if (ret)
  		return ret;
  
@@@ -2707,12 -2699,12 +2719,17 @@@ isert_reg_rdma(struct iscsi_conn *conn
  	int ret = 0;
  	unsigned long flags;
  
++<<<<<<< HEAD
 +	isert_cmd->tx_desc.isert_cmd = isert_cmd;
 +
 +	offset = wr->iser_ib_op == ISER_IB_RDMA_READ ? cmd->write_data_done : 0;
++=======
+ 	offset = isert_cmd->iser_ib_op == ISER_IB_RDMA_READ ?
+ 			cmd->write_data_done : 0;
++>>>>>>> e3416ab2d156 (iser-target: Kill the ->isert_cmd back pointer in struct iser_tx_desc)
  	ret = isert_map_data_buf(isert_conn, isert_cmd, se_cmd->t_data_sg,
  				 se_cmd->t_data_nents, se_cmd->data_length,
 -				 offset, isert_cmd->iser_ib_op,
 -				 &isert_cmd->data);
 +				 offset, wr->iser_ib_op, &wr->data);
  	if (ret)
  		return ret;
  
* Unmerged path drivers/infiniband/ulp/isert/ib_isert.c
diff --git a/drivers/infiniband/ulp/isert/ib_isert.h b/drivers/infiniband/ulp/isert/ib_isert.h
index 5a5becd86fb4..83f71a5670f3 100644
--- a/drivers/infiniband/ulp/isert/ib_isert.h
+++ b/drivers/infiniband/ulp/isert/ib_isert.h
@@ -110,7 +110,6 @@ struct iser_tx_desc {
 	struct ib_sge	tx_sg[2];
 	struct ib_cqe	tx_cqe;
 	int		num_sge;
-	struct isert_cmd *isert_cmd;
 	struct ib_send_wr send_wr;
 } __packed;
 
@@ -186,6 +185,11 @@ struct isert_cmd {
 	struct scatterlist	sg;
 };
 
+static inline struct isert_cmd *tx_desc_to_cmd(struct iser_tx_desc *desc)
+{
+	return container_of(desc, struct isert_cmd, tx_desc);
+}
+
 struct isert_device;
 
 struct isert_conn {
