ovl: Switch to generic_getxattr

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 0eb45fc3bb7a2cf9c9c93d9e95986a841e5f4625
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/0eb45fc3.failed

Now that overlayfs has xattr handlers for iop->{set,remove}xattr, use
those same handlers for iop->getxattr as well.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 0eb45fc3bb7a2cf9c9c93d9e95986a841e5f4625)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/overlayfs/inode.c
#	fs/overlayfs/overlayfs.h
#	fs/overlayfs/super.c
diff --cc fs/overlayfs/inode.c
index ea3f8465bfd6,1878591f6a2d..000000000000
--- a/fs/overlayfs/inode.c
+++ b/fs/overlayfs/inode.c
@@@ -273,8 -238,8 +273,13 @@@ out
  	return err;
  }
  
++<<<<<<< HEAD
 +ssize_t ovl_getxattr(struct dentry *dentry, const char *name,
 +		     void *value, size_t size)
++=======
+ int ovl_xattr_get(struct dentry *dentry, const char *name,
+ 		  void *value, size_t size)
++>>>>>>> 0eb45fc3bb7a (ovl: Switch to generic_getxattr)
  {
  	struct dentry *realdentry = ovl_dentry_real(dentry);
  	ssize_t res;
@@@ -395,9 -378,10 +397,9 @@@ static const struct inode_operations ov
  	.readlink	= ovl_readlink,
  	.getattr	= ovl_getattr,
  	.setxattr	= generic_setxattr,
- 	.getxattr	= ovl_getxattr,
+ 	.getxattr	= generic_getxattr,
  	.listxattr	= ovl_listxattr,
  	.removexattr	= generic_removexattr,
 -	.update_time	= ovl_update_time,
  };
  
  static void ovl_fill_inode(struct inode *inode, umode_t mode)
diff --cc fs/overlayfs/overlayfs.h
index f099216fbe31,5813ccff8cd9..000000000000
--- a/fs/overlayfs/overlayfs.h
+++ b/fs/overlayfs/overlayfs.h
@@@ -187,8 -187,8 +187,13 @@@ int ovl_setattr(struct dentry *dentry, 
  int ovl_permission(struct inode *inode, int mask);
  int ovl_xattr_set(struct dentry *dentry, const char *name, const void *value,
  		  size_t size, int flags);
++<<<<<<< HEAD
 +ssize_t ovl_getxattr(struct dentry *dentry, const char *name,
 +		     void *value, size_t size);
++=======
+ int ovl_xattr_get(struct dentry *dentry, const char *name,
+ 		  void *value, size_t size);
++>>>>>>> 0eb45fc3bb7a (ovl: Switch to generic_getxattr)
  ssize_t ovl_listxattr(struct dentry *dentry, char *list, size_t size);
  struct posix_acl *ovl_get_acl(struct inode *inode, int type);
  int ovl_open_maybe_copy_up(struct dentry *dentry, unsigned int file_flags);
diff --cc fs/overlayfs/super.c
index c142933efe1c,a4585f961bf9..000000000000
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@@ -1003,12 -987,21 +1003,25 @@@ static unsigned int ovl_split_lowerdirs
  }
  
  static int __maybe_unused
++<<<<<<< HEAD
 +ovl_posix_acl_xattr_set(struct dentry *dentry,
++=======
+ ovl_posix_acl_xattr_get(const struct xattr_handler *handler,
+ 			struct dentry *dentry, struct inode *inode,
+ 			const char *name, void *buffer, size_t size)
+ {
+ 	return ovl_xattr_get(dentry, handler->name, buffer, size);
+ }
+ 
+ static int __maybe_unused
+ ovl_posix_acl_xattr_set(const struct xattr_handler *handler,
+ 			struct dentry *dentry, struct inode *inode,
++>>>>>>> 0eb45fc3bb7a (ovl: Switch to generic_getxattr)
  			const char *name, const void *value,
 -			size_t size, int flags)
 +			size_t size, int flags, int handler_flags)
  {
  	struct dentry *workdir = ovl_workdir(dentry);
 -	struct inode *realinode = ovl_inode_real(inode, NULL);
 +	struct inode *inode = dentry->d_inode;
  	struct posix_acl *acl = NULL;
  	int err;
  
@@@ -1043,31 -1037,49 +1056,57 @@@ out_acl_release
  	return err;
  }
  
++<<<<<<< HEAD
 +static int ovl_own_xattr_set(struct dentry *dentry,
++=======
+ static int ovl_own_xattr_get(const struct xattr_handler *handler,
+ 			     struct dentry *dentry, struct inode *inode,
+ 			     const char *name, void *buffer, size_t size)
+ {
+ 	return -EPERM;
+ }
+ 
+ static int ovl_own_xattr_set(const struct xattr_handler *handler,
+ 			     struct dentry *dentry, struct inode *inode,
++>>>>>>> 0eb45fc3bb7a (ovl: Switch to generic_getxattr)
  			     const char *name, const void *value,
 -			     size_t size, int flags)
 +			     size_t size, int flags, int handler_flags)
  {
  	return -EPERM;
  }
  
++<<<<<<< HEAD
 +static int ovl_other_xattr_set(struct dentry *dentry,
++=======
+ static int ovl_other_xattr_get(const struct xattr_handler *handler,
+ 			       struct dentry *dentry, struct inode *inode,
+ 			       const char *name, void *buffer, size_t size)
+ {
+ 	return ovl_xattr_get(dentry, name, buffer, size);
+ }
+ 
+ static int ovl_other_xattr_set(const struct xattr_handler *handler,
+ 			       struct dentry *dentry, struct inode *inode,
++>>>>>>> 0eb45fc3bb7a (ovl: Switch to generic_getxattr)
  			       const char *name, const void *value,
 -			       size_t size, int flags)
 +			       size_t size, int flags, int handler_flags)
  {
  	return ovl_xattr_set(dentry, name, value, size, flags);
  }
  
  static const struct xattr_handler __maybe_unused
  ovl_posix_acl_access_xattr_handler = {
 -	.name = XATTR_NAME_POSIX_ACL_ACCESS,
 +	.prefix = XATTR_NAME_POSIX_ACL_ACCESS,
  	.flags = ACL_TYPE_ACCESS,
+ 	.get = ovl_posix_acl_xattr_get,
  	.set = ovl_posix_acl_xattr_set,
  };
  
  static const struct xattr_handler __maybe_unused
  ovl_posix_acl_default_xattr_handler = {
 -	.name = XATTR_NAME_POSIX_ACL_DEFAULT,
 +	.prefix = XATTR_NAME_POSIX_ACL_DEFAULT,
  	.flags = ACL_TYPE_DEFAULT,
+ 	.get = ovl_posix_acl_xattr_get,
  	.set = ovl_posix_acl_xattr_set,
  };
  
diff --git a/fs/overlayfs/dir.c b/fs/overlayfs/dir.c
index 846f5ea9e9a4..9abfa20c5164 100644
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@ -1055,7 +1055,7 @@ const struct inode_operations_wrapper ovl_dir_inode_operations = {
 	.permission	= ovl_permission,
 	.getattr	= ovl_dir_getattr,
 	.setxattr	= generic_setxattr,
-	.getxattr	= ovl_getxattr,
+	.getxattr	= generic_getxattr,
 	.listxattr	= ovl_listxattr,
 	.removexattr	= generic_removexattr,
 	.get_acl	= ovl_get_acl,
* Unmerged path fs/overlayfs/inode.c
* Unmerged path fs/overlayfs/overlayfs.h
* Unmerged path fs/overlayfs/super.c
