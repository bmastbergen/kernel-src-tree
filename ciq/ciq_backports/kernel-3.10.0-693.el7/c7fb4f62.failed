tools build: Add feature detection for clang

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Wang Nan <wangnan0@huawei.com>
commit c7fb4f62e2a97bd25d555263ef501fe053edcbb6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/c7fb4f62.failed

Check if basic clang compiling environment is ready.

Doesn't like 'llvm-config --libs' which can returns llvm libraries in right
order and duplicates some libraries if necessary, there's no correspondence for
clang libraries (-lclangxxx). to avoid extra complexity and to avoid new clang
breaking libraries ordering, use --start-group and --end-group.

In this test case, manually identify required clang libs and hope it to be
stable. Putting all clang libraries here is possible (use make's wildcard), but
then feature checking becomes very slow.

	Signed-off-by: Wang Nan <wangnan0@huawei.com>
	Cc: Alexei Starovoitov <ast@fb.com>
	Cc: He Kuang <hekuang@huawei.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Joe Stringer <joe@ovn.org>
	Cc: Zefan Li <lizefan@huawei.com>
	Cc: pi3orama@163.com
Link: http://lkml.kernel.org/r/20161126070354.141764-9-wangnan0@huawei.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit c7fb4f62e2a97bd25d555263ef501fe053edcbb6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/build/feature/Makefile
diff --cc tools/build/feature/Makefile
index 017397a4639a,871d5536951d..000000000000
--- a/tools/build/feature/Makefile
+++ b/tools/build/feature/Makefile
@@@ -209,6 -218,35 +209,38 @@@ $(OUTPUT)test-lzma.bin
  $(OUTPUT)test-get_cpuid.bin:
  	$(BUILD)
  
++<<<<<<< HEAD
++=======
+ $(OUTPUT)test-bpf.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-sdt.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-cxx.bin:
+ 	$(BUILDXX) -std=gnu++11
+ 
+ $(OUTPUT)test-jvmti.bin:
+ 	$(BUILD)
+ 
+ $(OUTPUT)test-llvm.bin:
+ 	$(BUILDXX) -std=gnu++11 					\
+ 		-I$(shell $(LLVM_CONFIG) --includedir) 		\
+ 		-L$(shell $(LLVM_CONFIG) --libdir)		\
+ 		$(shell $(LLVM_CONFIG) --libs Core BPF)		\
+ 		$(shell $(LLVM_CONFIG) --system-libs)
+ 
+ $(OUTPUT)test-clang.bin:
+ 	$(BUILDXX) -std=gnu++11 					\
+ 		-I$(shell $(LLVM_CONFIG) --includedir) 		\
+ 		-L$(shell $(LLVM_CONFIG) --libdir)		\
+ 		-Wl,--start-group -lclangBasic -lclangDriver	\
+ 		  -lclangFrontend -lclangEdit -lclangLex	\
+ 		  -lclangAST -Wl,--end-group 			\
+ 		$(shell $(LLVM_CONFIG) --libs Core option)	\
+ 		$(shell $(LLVM_CONFIG) --system-libs)
+ 
++>>>>>>> c7fb4f62e2a9 (tools build: Add feature detection for clang)
  -include $(OUTPUT)*.d
  
  ###############################
* Unmerged path tools/build/feature/Makefile
diff --git a/tools/build/feature/test-clang.cpp b/tools/build/feature/test-clang.cpp
new file mode 100644
index 000000000000..e23c1b1f1b91
--- /dev/null
+++ b/tools/build/feature/test-clang.cpp
@@ -0,0 +1,21 @@
+#include "clang/Basic/VirtualFileSystem.h"
+#include "clang/Driver/Driver.h"
+#include "clang/Frontend/TextDiagnosticPrinter.h"
+#include "llvm/ADT/IntrusiveRefCntPtr.h"
+#include "llvm/Support/ManagedStatic.h"
+#include "llvm/Support/raw_ostream.h"
+
+using namespace clang;
+using namespace clang::driver;
+
+int main()
+{
+	IntrusiveRefCntPtr<DiagnosticIDs> DiagID(new DiagnosticIDs());
+	IntrusiveRefCntPtr<DiagnosticOptions> DiagOpts = new DiagnosticOptions();
+
+	DiagnosticsEngine Diags(DiagID, &*DiagOpts);
+	Driver TheDriver("test", "bpf-pc-linux", Diags);
+
+	llvm::llvm_shutdown();
+	return 0;
+}
