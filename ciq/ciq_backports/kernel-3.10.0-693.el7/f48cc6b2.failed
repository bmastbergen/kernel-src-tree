tun: fix build warnings

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Jason Wang <jasowang@redhat.com>
commit f48cc6b2661ccb6e9d85a5cdd78c0150929a2821
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f48cc6b2.failed

Stephen Rothwell reports a build warnings(powerpc ppc64_defconfig)

drivers/net/tun.c: In function 'tun_do_read.part.5':
/home/sfr/next/next/drivers/net/tun.c:1491:6: warning: 'err' may be
used uninitialized in this function [-Wmaybe-uninitialized]
   int err;

This is because tun_ring_recv() may return an uninitialized err, fix this.

	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Signed-off-by: Jason Wang <jasowang@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f48cc6b2661ccb6e9d85a5cdd78c0150929a2821)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/tun.c
diff --cc drivers/net/tun.c
index 735ef7505ea1,5eadb7a1ad7b..000000000000
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@@ -1543,13 -1442,55 +1543,58 @@@ done
  	return total;
  }
  
 -static struct sk_buff *tun_ring_recv(struct tun_file *tfile, int noblock,
 -				     int *err)
 +static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 +			   struct kiocb *iocb, const struct iovec *iv,
 +			   ssize_t len, int noblock)
  {
  	DECLARE_WAITQUEUE(wait, current);
++<<<<<<< HEAD
++=======
+ 	struct sk_buff *skb = NULL;
+ 	int error = 0;
+ 
+ 	skb = skb_array_consume(&tfile->tx_array);
+ 	if (skb)
+ 		goto out;
+ 	if (noblock) {
+ 		error = -EAGAIN;
+ 		goto out;
+ 	}
+ 
+ 	add_wait_queue(&tfile->wq.wait, &wait);
+ 	current->state = TASK_INTERRUPTIBLE;
+ 
+ 	while (1) {
+ 		skb = skb_array_consume(&tfile->tx_array);
+ 		if (skb)
+ 			break;
+ 		if (signal_pending(current)) {
+ 			error = -ERESTARTSYS;
+ 			break;
+ 		}
+ 		if (tfile->socket.sk->sk_shutdown & RCV_SHUTDOWN) {
+ 			error = -EFAULT;
+ 			break;
+ 		}
+ 
+ 		schedule();
+ 	}
+ 
+ 	current->state = TASK_RUNNING;
+ 	remove_wait_queue(&tfile->wq.wait, &wait);
+ 
+ out:
+ 	*err = error;
+ 	return skb;
+ }
+ 
+ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
+ 			   struct iov_iter *to,
+ 			   int noblock)
+ {
++>>>>>>> f48cc6b2661c (tun: fix build warnings)
  	struct sk_buff *skb;
 -	ssize_t ret;
 -	int err;
 +	ssize_t ret = 0;
  
  	tun_debug(KERN_INFO, tun, "tun_do_read\n");
  
* Unmerged path drivers/net/tun.c
