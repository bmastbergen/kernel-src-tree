nvmet-rdma: Correctly handle RDMA device hot removal

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Sagi Grimberg <sagi@grimberg.me>
commit d8f7750a08968b105056328652d2c332bdfa062d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/d8f7750a.failed

When configuring a device attached listener, we may
see device removal events. In this case we return a
non-zero return code from the cm event handler which
implicitly destroys the cm_id. It is possible that in
the future the user will remove this listener and by
that trigger a second call to rdma_destroy_id on an
already destroyed cm_id -> BUG.

In addition, when a queue bound (active session) cm_id
generates a DEVICE_REMOVAL event we must guarantee all
resources are cleaned up by the time we return from the
event handler.

Introduce nvmet_rdma_device_removal which addresses
(or at least attempts to) both scenarios.

	Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit d8f7750a08968b105056328652d2c332bdfa062d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/target/rdma.c
* Unmerged path drivers/nvme/target/rdma.c
* Unmerged path drivers/nvme/target/rdma.c
