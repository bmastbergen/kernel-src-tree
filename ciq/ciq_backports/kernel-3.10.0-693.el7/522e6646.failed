x86/apic: Disable I/O APIC before shutdown of the local APIC

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [x86] apic: Disable I/O APIC before shutdown of the local APIC (Prarit Bhargava) [1384277]
Rebuild_FUZZ: 96.55%
commit-author Fenghua Yu <fenghua.yu@intel.com>
commit 522e66464467543c0d88d023336eec4df03ad40b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/522e6646.failed

In reboot and crash path, when we shut down the local APIC, the I/O APIC is
still active. This may cause issues because external interrupts
can still come in and disturb the local APIC during shutdown process.

To quiet external interrupts, disable I/O APIC before shutdown local APIC.

	Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
Link: http://lkml.kernel.org/r/1382578212-4677-1-git-send-email-fenghua.yu@intel.com
	Cc: <stable@kernel.org>
[ I suppose the 'issue' is a hang during shutdown. It's a fine change nevertheless. ]
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 522e66464467543c0d88d023336eec4df03ad40b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/crash.c
diff --cc arch/x86/kernel/crash.c
index 4bffbc06ec5c,18677a90d6a3..000000000000
--- a/arch/x86/kernel/crash.c
+++ b/arch/x86/kernel/crash.c
@@@ -178,12 -127,6 +178,15 @@@ void native_machine_crash_shutdown(stru
  	cpu_emergency_vmxoff();
  	cpu_emergency_svm_disable();
  
++<<<<<<< HEAD
 +	/*
 +	 * Disable Intel PT to stop its logging
 +	 */
 +	cpu_emergency_stop_pt();
 +
 +	lapic_shutdown();
++=======
++>>>>>>> 522e66464467 (x86/apic: Disable I/O APIC before shutdown of the local APIC)
  #ifdef CONFIG_X86_IO_APIC
  	/* Prevent crash_kexec() from deadlocking on ioapic_lock. */
  	ioapic_zap_locks();
* Unmerged path arch/x86/kernel/crash.c
diff --git a/arch/x86/kernel/reboot.c b/arch/x86/kernel/reboot.c
index ad3f233d74c1..e70f64edeeba 100644
--- a/arch/x86/kernel/reboot.c
+++ b/arch/x86/kernel/reboot.c
@@ -638,6 +638,10 @@ static void native_machine_emergency_restart(void)
 void native_machine_shutdown(void)
 {
 	/* Stop the cpus and apics */
+#ifdef CONFIG_X86_IO_APIC
+	disable_IO_APIC();
+#endif
+
 #ifdef CONFIG_SMP
 
 	/* The boot cpu is always logical cpu 0 */
@@ -666,10 +670,6 @@ void native_machine_shutdown(void)
 
 	lapic_shutdown();
 
-#ifdef CONFIG_X86_IO_APIC
-	disable_IO_APIC();
-#endif
-
 #ifdef CONFIG_HPET_TIMER
 	hpet_disable();
 #endif
