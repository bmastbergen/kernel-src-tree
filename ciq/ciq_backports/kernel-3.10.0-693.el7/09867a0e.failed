scsi: aacraid: Added ioctl to trigger IOP/IWBR reset

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] aacraid: Added ioctl to trigger IOP/IWBR reset (Scott Benesh) [1384213]
Rebuild_FUZZ: 93.88%
commit-author Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
commit 09867a0e34d20864c3b4b1e49f688470c3f8bdc2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/09867a0e.failed

Added a new ioctl interface to trigger an IOP or IWBR reset from ioctl.
Primary used by management utility to trigger resets.

	Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
	Signed-off-by: Dave Carroll <David.Carroll@microsemi.com>
	Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 09867a0e34d20864c3b4b1e49f688470c3f8bdc2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/aacraid/aacraid.h
diff --cc drivers/scsi/aacraid/aacraid.h
index 2da9fa038912,4814fba41193..000000000000
--- a/drivers/scsi/aacraid/aacraid.h
+++ b/drivers/scsi/aacraid/aacraid.h
@@@ -2135,6 -2333,14 +2135,17 @@@ struct revisio
  #define FSACTL_FORCE_DELETE_DISK		CTL_CODE(2120, METHOD_NEITHER)
  #define FSACTL_GET_CONTAINERS			2131
  #define FSACTL_SEND_LARGE_FIB			CTL_CODE(2138, METHOD_BUFFERED)
++<<<<<<< HEAD
++=======
+ #define FSACTL_RESET_IOP			CTL_CODE(2140, METHOD_BUFFERED)
+ /* flags defined for IOP & HW SOFT RESET */
+ #define HW_IOP_RESET				0x01
+ #define HW_SOFT_RESET				0x02
+ #define IOP_HWSOFT_RESET			(HW_IOP_RESET | HW_SOFT_RESET)
+ /* HW Soft Reset register offset */
+ #define IBW_SWR_OFFSET				0x4000
+ #define SOFT_RESET_TIME			60
++>>>>>>> 09867a0e34d2 (scsi: aacraid: Added ioctl to trigger IOP/IWBR reset)
  
  
  struct aac_common
* Unmerged path drivers/scsi/aacraid/aacraid.h
diff --git a/drivers/scsi/aacraid/commctrl.c b/drivers/scsi/aacraid/commctrl.c
index 5648b715fed9..f9567dd38e75 100644
--- a/drivers/scsi/aacraid/commctrl.c
+++ b/drivers/scsi/aacraid/commctrl.c
@@ -857,7 +857,22 @@ static int aac_get_pci_info(struct aac_dev* dev, void __user *arg)
 	}
 	return 0;
 }
+struct aac_reset_iop {
+	u8	reset_type;
+};
+
+static int aac_send_reset_adapter(struct aac_dev *dev, void __user *arg)
+{
+	struct aac_reset_iop reset;
+	int retval;
 
+	if (copy_from_user((void *)&reset, arg, sizeof(struct aac_reset_iop)))
+		return -EFAULT;
+
+	retval = aac_reset_adapter(dev, 0, reset.reset_type);
+	return retval;
+
+}
 
 int aac_do_ioctl(struct aac_dev * dev, int cmd, void __user *arg)
 {
@@ -901,6 +916,10 @@ int aac_do_ioctl(struct aac_dev * dev, int cmd, void __user *arg)
 	case FSACTL_GET_PCI_INFO:
 		status = aac_get_pci_info(dev,arg);
 		break;
+	case FSACTL_RESET_IOP:
+		status = aac_send_reset_adapter(dev, arg);
+		break;
+
 	default:
 		status = -ENOTTY;
 		break;
