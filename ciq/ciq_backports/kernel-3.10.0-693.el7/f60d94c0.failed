macsec: use nla_put_u64_64bit()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit f60d94c009685da0632d93297cae971c5898a04b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/f60d94c0.failed

	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f60d94c009685da0632d93297cae971c5898a04b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/macsec.c
diff --cc drivers/net/macsec.c
index 91e6618a6436,a172a1ffa151..000000000000
--- a/drivers/net/macsec.c
+++ b/drivers/net/macsec.c
@@@ -2320,9 -2271,11 +2365,17 @@@ static int nla_put_secy(struct macsec_s
  	if (!secy_nest)
  		return 1;
  
++<<<<<<< HEAD
 +	if (nla_put_sci(skb, MACSEC_SECY_ATTR_SCI, secy->sci) ||
 +	    nla_put_u64(skb, MACSEC_SECY_ATTR_CIPHER_SUITE,
 +			MACSEC_DEFAULT_CIPHER_ID) ||
++=======
+ 	if (nla_put_sci(skb, MACSEC_SECY_ATTR_SCI, secy->sci,
+ 			MACSEC_SECY_ATTR_PAD) ||
+ 	    nla_put_u64_64bit(skb, MACSEC_SECY_ATTR_CIPHER_SUITE,
+ 			      DEFAULT_CIPHER_ID,
+ 			      MACSEC_SECY_ATTR_PAD) ||
++>>>>>>> f60d94c00968 (macsec: use nla_put_u64_64bit())
  	    nla_put_u8(skb, MACSEC_SECY_ATTR_ICV_LEN, secy->icv_len) ||
  	    nla_put_u8(skb, MACSEC_SECY_ATTR_OPER, secy->operational) ||
  	    nla_put_u8(skb, MACSEC_SECY_ATTR_PROTECT, secy->protect_frames) ||
@@@ -2407,7 -2360,9 +2460,13 @@@ static int dump_secy(struct macsec_sec
  
  		if (nla_put_u8(skb, MACSEC_SA_ATTR_AN, i) ||
  		    nla_put_u32(skb, MACSEC_SA_ATTR_PN, tx_sa->next_pn) ||
++<<<<<<< HEAD
 +		    nla_put(skb, MACSEC_SA_ATTR_KEYID, MACSEC_KEYID_LEN, tx_sa->key.id) ||
++=======
+ 		    nla_put_u64_64bit(skb, MACSEC_SA_ATTR_KEYID,
+ 				      tx_sa->key.id,
+ 				      MACSEC_SA_ATTR_PAD) ||
++>>>>>>> f60d94c00968 (macsec: use nla_put_u64_64bit())
  		    nla_put_u8(skb, MACSEC_SA_ATTR_ACTIVE, tx_sa->active)) {
  			nla_nest_cancel(skb, txsa_nest);
  			nla_nest_cancel(skb, txsa_list);
@@@ -2508,7 -2464,9 +2568,13 @@@
  
  			if (nla_put_u8(skb, MACSEC_SA_ATTR_AN, i) ||
  			    nla_put_u32(skb, MACSEC_SA_ATTR_PN, rx_sa->next_pn) ||
++<<<<<<< HEAD
 +			    nla_put(skb, MACSEC_SA_ATTR_KEYID, MACSEC_KEYID_LEN, rx_sa->key.id) ||
++=======
+ 			    nla_put_u64_64bit(skb, MACSEC_SA_ATTR_KEYID,
+ 					      rx_sa->key.id,
+ 					      MACSEC_SA_ATTR_PAD) ||
++>>>>>>> f60d94c00968 (macsec: use nla_put_u64_64bit())
  			    nla_put_u8(skb, MACSEC_SA_ATTR_ACTIVE, rx_sa->active)) {
  				nla_nest_cancel(skb, rxsa_nest);
  				nla_nest_cancel(skb, rxsc_nest);
@@@ -3293,10 -3219,11 +3359,16 @@@ static int macsec_fill_info(struct sk_b
  	struct macsec_secy *secy = &macsec_priv(dev)->secy;
  	struct macsec_tx_sc *tx_sc = &secy->tx_sc;
  
- 	if (nla_put_sci(skb, IFLA_MACSEC_SCI, secy->sci) ||
+ 	if (nla_put_sci(skb, IFLA_MACSEC_SCI, secy->sci,
+ 			IFLA_MACSEC_PAD) ||
  	    nla_put_u8(skb, IFLA_MACSEC_ICV_LEN, secy->icv_len) ||
++<<<<<<< HEAD
 +	    nla_put_u64(skb, IFLA_MACSEC_CIPHER_SUITE,
 +			MACSEC_DEFAULT_CIPHER_ID) ||
++=======
+ 	    nla_put_u64_64bit(skb, IFLA_MACSEC_CIPHER_SUITE,
+ 			      DEFAULT_CIPHER_ID, IFLA_MACSEC_PAD) ||
++>>>>>>> f60d94c00968 (macsec: use nla_put_u64_64bit())
  	    nla_put_u8(skb, IFLA_MACSEC_ENCODING_SA, tx_sc->encoding_sa) ||
  	    nla_put_u8(skb, IFLA_MACSEC_ENCRYPT, tx_sc->encrypt) ||
  	    nla_put_u8(skb, IFLA_MACSEC_PROTECT, secy->protect_frames) ||
* Unmerged path drivers/net/macsec.c
diff --git a/include/uapi/linux/if_link.h b/include/uapi/linux/if_link.h
index 1b43f8aab560..0f849c118b12 100644
--- a/include/uapi/linux/if_link.h
+++ b/include/uapi/linux/if_link.h
@@ -346,6 +346,7 @@ enum {
 	IFLA_MACSEC_SCB,
 	IFLA_MACSEC_REPLAY_PROTECT,
 	IFLA_MACSEC_VALIDATION,
+	IFLA_MACSEC_PAD,
 	__IFLA_MACSEC_MAX,
 };
 
diff --git a/include/uapi/linux/if_macsec.h b/include/uapi/linux/if_macsec.h
index 52adb23f8132..02fc49cb72d8 100644
--- a/include/uapi/linux/if_macsec.h
+++ b/include/uapi/linux/if_macsec.h
@@ -59,6 +59,7 @@ enum macsec_secy_attrs {
 	MACSEC_SECY_ATTR_INC_SCI,
 	MACSEC_SECY_ATTR_ES,
 	MACSEC_SECY_ATTR_SCB,
+	MACSEC_SECY_ATTR_PAD,
 	__MACSEC_SECY_ATTR_END,
 	NUM_MACSEC_SECY_ATTR = __MACSEC_SECY_ATTR_END,
 	MACSEC_SECY_ATTR_MAX = __MACSEC_SECY_ATTR_END - 1,
@@ -70,6 +71,7 @@ enum macsec_rxsc_attrs {
 	MACSEC_RXSC_ATTR_ACTIVE,  /* config/dump, u8 0..1 */
 	MACSEC_RXSC_ATTR_SA_LIST, /* dump, nested */
 	MACSEC_RXSC_ATTR_STATS,   /* dump, nested, macsec_rxsc_stats_attr */
+	MACSEC_RXSC_ATTR_PAD,
 	__MACSEC_RXSC_ATTR_END,
 	NUM_MACSEC_RXSC_ATTR = __MACSEC_RXSC_ATTR_END,
 	MACSEC_RXSC_ATTR_MAX = __MACSEC_RXSC_ATTR_END - 1,
@@ -83,6 +85,7 @@ enum macsec_sa_attrs {
 	MACSEC_SA_ATTR_KEY,    /* config, data */
 	MACSEC_SA_ATTR_KEYID,  /* config/dump, 128-bit */
 	MACSEC_SA_ATTR_STATS,  /* dump, nested, macsec_sa_stats_attr */
+	MACSEC_SA_ATTR_PAD,
 	__MACSEC_SA_ATTR_END,
 	NUM_MACSEC_SA_ATTR = __MACSEC_SA_ATTR_END,
 	MACSEC_SA_ATTR_MAX = __MACSEC_SA_ATTR_END - 1,
@@ -114,6 +117,7 @@ enum macsec_rxsc_stats_attr {
 	MACSEC_RXSC_STATS_ATTR_IN_PKTS_NOT_VALID,
 	MACSEC_RXSC_STATS_ATTR_IN_PKTS_NOT_USING_SA,
 	MACSEC_RXSC_STATS_ATTR_IN_PKTS_UNUSED_SA,
+	MACSEC_RXSC_STATS_ATTR_PAD,
 	__MACSEC_RXSC_STATS_ATTR_END,
 	NUM_MACSEC_RXSC_STATS_ATTR = __MACSEC_RXSC_STATS_ATTR_END,
 	MACSEC_RXSC_STATS_ATTR_MAX = __MACSEC_RXSC_STATS_ATTR_END - 1,
@@ -141,6 +145,7 @@ enum macsec_txsc_stats_attr {
 	MACSEC_TXSC_STATS_ATTR_OUT_PKTS_ENCRYPTED,
 	MACSEC_TXSC_STATS_ATTR_OUT_OCTETS_PROTECTED,
 	MACSEC_TXSC_STATS_ATTR_OUT_OCTETS_ENCRYPTED,
+	MACSEC_TXSC_STATS_ATTR_PAD,
 	__MACSEC_TXSC_STATS_ATTR_END,
 	NUM_MACSEC_TXSC_STATS_ATTR = __MACSEC_TXSC_STATS_ATTR_END,
 	MACSEC_TXSC_STATS_ATTR_MAX = __MACSEC_TXSC_STATS_ATTR_END - 1,
@@ -157,6 +162,7 @@ enum macsec_secy_stats_attr {
 	MACSEC_SECY_STATS_ATTR_IN_PKTS_UNKNOWN_SCI,
 	MACSEC_SECY_STATS_ATTR_IN_PKTS_NO_SCI,
 	MACSEC_SECY_STATS_ATTR_IN_PKTS_OVERRUN,
+	MACSEC_SECY_STATS_ATTR_PAD,
 	__MACSEC_SECY_STATS_ATTR_END,
 	NUM_MACSEC_SECY_STATS_ATTR = __MACSEC_SECY_STATS_ATTR_END,
 	MACSEC_SECY_STATS_ATTR_MAX = __MACSEC_SECY_STATS_ATTR_END - 1,
