ASoC: dapm: Support second register for DAPM control updates

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [sound] alsa: asoc: dapm: Support second register for DAPM control updates (Jaroslav Kysela) [1399503]
Rebuild_FUZZ: 95.24%
commit-author Chen-Yu Tsai <wens@csie.org>
commit e411b0b5eb9b65257a050eac333d181d6e00e2c6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e411b0b5.failed

To support double channel shared controls split across 2 registers, one
for each channel, we must be able to update both registers together.

Add a second set of register fields to struct snd_soc_dapm_update, and
update the DAPM control writeback (put) callbacks to support this.

For codecs that use custom events which call into DAPM to do updates,
also clear struct snd_soc_dapm_update before using it, so the second
set of fields remains clean.

	Signed-off-by: Chen-Yu Tsai <wens@csie.org>
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit e411b0b5eb9b65257a050eac333d181d6e00e2c6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/adau17x1.c
#	sound/soc/codecs/tlv320aic3x.c
#	sound/soc/codecs/wm9712.c
#	sound/soc/codecs/wm9713.c
* Unmerged path sound/soc/codecs/adau17x1.c
* Unmerged path sound/soc/codecs/tlv320aic3x.c
* Unmerged path sound/soc/codecs/wm9712.c
* Unmerged path sound/soc/codecs/wm9713.c
diff --git a/include/sound/soc-dapm.h b/include/sound/soc-dapm.h
index 81ac4115c8f1..8560eb6ece6c 100644
--- a/include/sound/soc-dapm.h
+++ b/include/sound/soc-dapm.h
@@ -614,6 +614,10 @@ struct snd_soc_dapm_update {
 	int reg;
 	int mask;
 	int val;
+	int reg2;
+	int mask2;
+	int val2;
+	bool has_second_set;
 };
 
 struct snd_soc_dapm_wcache {
* Unmerged path sound/soc/codecs/adau17x1.c
* Unmerged path sound/soc/codecs/tlv320aic3x.c
* Unmerged path sound/soc/codecs/wm9712.c
* Unmerged path sound/soc/codecs/wm9713.c
diff --git a/sound/soc/soc-dapm.c b/sound/soc/soc-dapm.c
index 3bbe32ee4630..32e7af9b93d5 100644
--- a/sound/soc/soc-dapm.c
+++ b/sound/soc/soc-dapm.c
@@ -1626,6 +1626,15 @@ static void dapm_widget_update(struct snd_soc_card *card)
 		dev_err(w->dapm->dev, "ASoC: %s DAPM update failed: %d\n",
 			w->name, ret);
 
+	if (update->has_second_set) {
+		ret = soc_dapm_update_bits(w->dapm, update->reg2,
+					   update->mask2, update->val2);
+		if (ret < 0)
+			dev_err(w->dapm->dev,
+				"ASoC: %s DAPM update failed: %d\n",
+				w->name, ret);
+	}
+
 	for (wi = 0; wi < wlist->num_widgets; wi++) {
 		w = wlist->widgets[wi];
 
@@ -3084,7 +3093,7 @@ int snd_soc_dapm_put_volsw(struct snd_kcontrol *kcontrol,
 	unsigned int invert = mc->invert;
 	unsigned int val;
 	int connect, change, reg_change = 0;
-	struct snd_soc_dapm_update update;
+	struct snd_soc_dapm_update update = { NULL };
 	int ret = 0;
 
 	if (snd_soc_volsw_is_stereo(mc))
@@ -3192,7 +3201,7 @@ int snd_soc_dapm_put_enum_double(struct snd_kcontrol *kcontrol,
 	unsigned int *item = ucontrol->value.enumerated.item;
 	unsigned int val, change, reg_change = 0;
 	unsigned int mask;
-	struct snd_soc_dapm_update update;
+	struct snd_soc_dapm_update update = { NULL };
 	int ret = 0;
 
 	if (item[0] >= e->items)
