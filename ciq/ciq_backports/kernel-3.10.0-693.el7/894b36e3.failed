Btrfs: cleanup error handling in extent_write_cached_pages

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Liu Bo <bo.li.liu@oracle.com>
commit 894b36e35ae01186b77b083f3f67569a349062a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/894b36e3.failed

Now that we bail out immediately if ->writepage() returns an error,
we don't need an extra error to retain the error code.

	Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
	Signed-off-by: David Sterba <dsterba@suse.com>
(cherry picked from commit 894b36e35ae01186b77b083f3f67569a349062a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/btrfs/extent_io.c
diff --cc fs/btrfs/extent_io.c
index a056ffcb89c2,b67d6d24440b..000000000000
--- a/fs/btrfs/extent_io.c
+++ b/fs/btrfs/extent_io.c
@@@ -4015,8 -4008,20 +4014,25 @@@ retry
  				unlock_page(page);
  				ret = 0;
  			}
++<<<<<<< HEAD
 +			if (!err && ret < 0)
 +				err = ret;
++=======
+ 			if (ret < 0) {
+ 				/*
+ 				 * done_index is set past this page,
+ 				 * so media errors will not choke
+ 				 * background writeout for the entire
+ 				 * file. This has consequences for
+ 				 * range_cyclic semantics (ie. it may
+ 				 * not be suitable for data integrity
+ 				 * writeout).
+ 				 */
+ 				done_index = page->index + 1;
+ 				done = 1;
+ 				break;
+ 			}
++>>>>>>> 894b36e35ae0 (Btrfs: cleanup error handling in extent_write_cached_pages)
  
  			/*
  			 * the filesystem may choose to bump up nr_to_write.
@@@ -4037,8 -4042,12 +4053,8 @@@
  		index = 0;
  		goto retry;
  	}
 -
 -	if (wbc->range_cyclic || (wbc->nr_to_write > 0 && range_whole))
 -		mapping->writeback_index = done_index;
 -
  	btrfs_add_delayed_iput(inode);
- 	return err;
+ 	return ret;
  }
  
  static void flush_epd_write_bio(struct extent_page_data *epd)
* Unmerged path fs/btrfs/extent_io.c
