nvme: tighten up state check for namespace scanning

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [nvme] tighten up state check for namespace scanning (David Milburn) [1384066]
Rebuild_FUZZ: 93.75%
commit-author Christoph Hellwig <hch@lst.de>
commit 92911a55d42084cd285250c275d9f238783638c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/92911a55.failed

We only should be scanning namespaces if the controller is live.  Currently
we call the function just before setting it live, so fix the code up to
move the call to nvme_queue_scan to just below the state change.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Acked-by Jon Derrick: <jonathan.derrick@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 92911a55d42084cd285250c275d9f238783638c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/pci.c
diff --cc drivers/nvme/host/pci.c
index b6cb5e36606f,9b2deba0bc91..000000000000
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@@ -276,9 -272,8 +276,14 @@@ static void nvme_queue_scan(struct nvme
  	 * Do not queue new scan work when a controller is reset during
  	 * removal.
  	 */
++<<<<<<< HEAD
 +	if (test_bit(NVME_CTRL_REMOVING, &dev->flags))
 +		return;
 +	queue_work(nvme_workq, &dev->scan_work);
++=======
+ 	if (dev->ctrl.state == NVME_CTRL_LIVE)
+ 		queue_work(nvme_workq, &dev->scan_work);
++>>>>>>> 92911a55d420 (nvme: tighten up state check for namespace scanning)
  }
  
  static void nvme_complete_async_event(struct nvme_dev *dev,
@@@ -1847,7 -1888,13 +1851,17 @@@ static void nvme_reset_work(struct work
  		nvme_dev_add(dev);
  	}
  
++<<<<<<< HEAD
 +	clear_bit(NVME_CTRL_RESETTING, &dev->flags);
++=======
+ 	if (!nvme_change_ctrl_state(&dev->ctrl, NVME_CTRL_LIVE)) {
+ 		dev_warn(dev->ctrl.device, "failed to mark controller live\n");
+ 		goto out;
+ 	}
+ 
+ 	if (dev->online_queues > 1)
+ 		nvme_queue_scan(dev);
++>>>>>>> 92911a55d420 (nvme: tighten up state check for namespace scanning)
  	return;
  
   out:
* Unmerged path drivers/nvme/host/pci.c
