nvme: factor out a add nvme_is_write helper

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Christoph Hellwig <hch@lst.de>
commit 7a5abb4b48570c3552e33ff4c72ae1e8dac3ba15
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7a5abb4b.failed

Centralize the check if a given NVMe command reads or writes data.

	Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
	Reviewed-by: Jay Freyensee <james.p.freyensee@intel.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Keith Busch <keith.busch@intel.com>
	Signed-off-by: Jens Axboe <axboe@fb.com>
(cherry picked from commit 7a5abb4b48570c3552e33ff4c72ae1e8dac3ba15)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/nvme/host/core.c
diff --cc drivers/nvme/host/core.c
index 63f6b5f40b5c,45fd6cca4a27..000000000000
--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@@ -112,10 -193,9 +112,13 @@@ void nvme_requeue_req(struct request *r
  struct request *nvme_alloc_request(struct request_queue *q,
  		struct nvme_command *cmd, unsigned int flags)
  {
- 	bool write = cmd->common.opcode & 1;
  	struct request *req;
  
++<<<<<<< HEAD
 +	req = blk_mq_alloc_request(q, write, GFP_KERNEL, false);
++=======
+ 	req = blk_mq_alloc_request(q, nvme_is_write(cmd), flags);
++>>>>>>> 7a5abb4b4857 (nvme: factor out a add nvme_is_write helper)
  	if (IS_ERR(req))
  		return req;
  
@@@ -174,7 -360,8 +177,12 @@@ int __nvme_submit_user_cmd(struct reque
  		void __user *meta_buffer, unsigned meta_len, u32 meta_seed,
  		u32 *result, unsigned timeout)
  {
++<<<<<<< HEAD
 +	bool write = cmd->common.opcode & 1;
++=======
+ 	bool write = nvme_is_write(cmd);
+ 	struct nvme_completion cqe;
++>>>>>>> 7a5abb4b4857 (nvme: factor out a add nvme_is_write helper)
  	struct nvme_ns *ns = q->queuedata;
  	struct gendisk *disk = ns ? ns->disk : NULL;
  	struct request *req;
* Unmerged path drivers/nvme/host/core.c
diff --git a/include/linux/nvme.h b/include/linux/nvme.h
index 2b82f05fe4ec..dc815cc6718d 100644
--- a/include/linux/nvme.h
+++ b/include/linux/nvme.h
@@ -590,6 +590,11 @@ struct nvme_command {
 	};
 };
 
+static inline bool nvme_is_write(struct nvme_command *cmd)
+{
+	return cmd->common.opcode & 1;
+}
+
 enum {
 	NVME_SC_SUCCESS			= 0x0,
 	NVME_SC_INVALID_OPCODE		= 0x1,
