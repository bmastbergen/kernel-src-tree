ACPICA: De-macroize calls to standard C library functions

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Bob Moore <robert.moore@intel.com>
commit 4fa4616e279df89baeb36287bbee83ab272edaed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/4fa4616e.failed

ACPICA commit 3b1026e0bdd3c32eb6d5d313f3ba0b1fee7597b4
ACPICA commit 00f0dc83f5cfca53b27a3213ae0d7719b88c2d6b
ACPICA commit 47d22a738d0e19fd241ffe4e3e9d4e198e4afc69

Across all of ACPICA. Replace C library macros such as ACPI_STRLEN with the
standard names such as strlen. The original purpose for these macros is
long since obsolete.
Also cast various invocations as necessary. Bob Moore, Jung-uk Kim, Lv Zheng.

Link: https://github.com/acpica/acpica/commit/3b1026e0
Link: https://github.com/acpica/acpica/commit/00f0dc83
Link: https://github.com/acpica/acpica/commit/47d22a73
	Signed-off-by: Bob Moore <robert.moore@intel.com>
	Signed-off-by: Jung-uk Kim <jkim@FreeBSD.org>
	Signed-off-by: Lv Zheng <lv.zheng@intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 4fa4616e279df89baeb36287bbee83ab272edaed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/acpica/acutils.h
#	drivers/acpi/acpica/dsobject.c
#	drivers/acpi/acpica/dsutils.c
#	drivers/acpi/acpica/exconfig.c
#	drivers/acpi/acpica/rscreate.c
#	drivers/acpi/acpica/tbdata.c
#	drivers/acpi/acpica/tbinstal.c
#	drivers/acpi/acpica/tbutils.c
#	drivers/acpi/acpica/tbxface.c
#	drivers/acpi/acpica/utbuffer.c
#	drivers/acpi/acpica/utprint.c
#	drivers/acpi/acpica/utstring.c
#	drivers/acpi/acpica/utxface.c
#	include/acpi/actypes.h
#	include/acpi/platform/acenv.h
#	tools/power/acpi/common/getopt.c
#	tools/power/acpi/os_specific/service_layers/oslinuxtbl.c
#	tools/power/acpi/tools/acpidump/apdump.c
#	tools/power/acpi/tools/acpidump/apfiles.c
diff --cc drivers/acpi/acpica/acutils.h
index 7125ee1826be,ef1e51d0f038..000000000000
--- a/drivers/acpi/acpica/acutils.h
+++ b/drivers/acpi/acpica/acutils.h
@@@ -209,35 -210,35 +209,39 @@@ void acpi_ut_subsystem_shutdown(void)
   */
  #ifndef ACPI_USE_SYSTEM_CLIBRARY
  
- acpi_size acpi_ut_strlen(const char *string);
+ acpi_size strlen(const char *string);
  
++<<<<<<< HEAD
 +char *acpi_ut_strcpy(char *dst_string, const char *src_string);
++=======
+ char *strchr(const char *string, int ch);
  
- char *acpi_ut_strncpy(char *dst_string,
- 		      const char *src_string, acpi_size count);
+ char *strcpy(char *dst_string, const char *src_string);
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  
- int acpi_ut_memcmp(const char *buffer1, const char *buffer2, acpi_size count);
+ char *strncpy(char *dst_string, const char *src_string, acpi_size count);
  
- int acpi_ut_strncmp(const char *string1, const char *string2, acpi_size count);
+ int strncmp(const char *string1, const char *string2, acpi_size count);
  
- int acpi_ut_strcmp(const char *string1, const char *string2);
+ int strcmp(const char *string1, const char *string2);
  
- char *acpi_ut_strcat(char *dst_string, const char *src_string);
+ char *strcat(char *dst_string, const char *src_string);
  
- char *acpi_ut_strncat(char *dst_string,
- 		      const char *src_string, acpi_size count);
+ char *strncat(char *dst_string, const char *src_string, acpi_size count);
  
- u32 acpi_ut_strtoul(const char *string, char **terminator, u32 base);
+ u32 strtoul(const char *string, char **terminator, u32 base);
  
- char *acpi_ut_strstr(char *string1, char *string2);
+ char *strstr(char *string1, char *string2);
  
- void *acpi_ut_memcpy(void *dest, const void *src, acpi_size count);
+ int memcmp(void *buffer1, void *buffer2, acpi_size count);
  
- void *acpi_ut_memset(void *dest, u8 value, acpi_size count);
+ void *memcpy(void *dest, const void *src, acpi_size count);
  
- int acpi_ut_to_upper(int c);
+ void *memset(void *dest, int value, acpi_size count);
  
- int acpi_ut_to_lower(int c);
+ int toupper(int c);
+ 
+ int tolower(int c);
  
  extern const u8 _acpi_ctype[];
  
@@@ -252,13 -253,13 +256,23 @@@
  #define _ACPI_UP     0x01	/* 'A'-'Z' */
  #define _ACPI_XD     0x80	/* '0'-'9', 'A'-'F', 'a'-'f' */
  
++<<<<<<< HEAD
 +#define ACPI_IS_DIGIT(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_DI))
 +#define ACPI_IS_SPACE(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_SP))
 +#define ACPI_IS_XDIGIT(c) (_acpi_ctype[(unsigned char)(c)] & (_ACPI_XD))
 +#define ACPI_IS_UPPER(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_UP))
 +#define ACPI_IS_LOWER(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_LO))
 +#define ACPI_IS_PRINT(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_LO | _ACPI_UP | _ACPI_DI | _ACPI_SP | _ACPI_PU))
 +#define ACPI_IS_ALPHA(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_LO | _ACPI_UP))
++=======
+ #define isdigit(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_DI))
+ #define isspace(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_SP))
+ #define isxdigit(c) (_acpi_ctype[(unsigned char)(c)] & (_ACPI_XD))
+ #define isupper(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_UP))
+ #define islower(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_LO))
+ #define isprint(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_LO | _ACPI_UP | _ACPI_DI | _ACPI_XS | _ACPI_PU))
+ #define isalpha(c)  (_acpi_ctype[(unsigned char)(c)] & (_ACPI_LO | _ACPI_UP))
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  
  #endif				/* !ACPI_USE_SYSTEM_CLIBRARY */
  
diff --cc drivers/acpi/acpica/dsobject.c
index 63f0d220ca3d,2beb7fd674ae..000000000000
--- a/drivers/acpi/acpica/dsobject.c
+++ b/drivers/acpi/acpica/dsobject.c
@@@ -750,8 -750,7 +750,12 @@@ acpi_ds_init_object_from_op(struct acpi
  	case ACPI_TYPE_STRING:
  
  		obj_desc->string.pointer = op->common.value.string;
++<<<<<<< HEAD
 +		obj_desc->string.length =
 +		    (u32) ACPI_STRLEN(op->common.value.string);
++=======
+ 		obj_desc->string.length = (u32)strlen(op->common.value.string);
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  
  		/*
  		 * The string is contained in the ACPI table, don't ever try
diff --cc drivers/acpi/acpica/dsutils.c
index c666fc014987,ebc577baeaf9..000000000000
--- a/drivers/acpi/acpica/dsutils.c
+++ b/drivers/acpi/acpica/dsutils.c
@@@ -564,6 -564,17 +564,20 @@@ acpi_ds_create_operand(struct acpi_walk
  								 acpi_operand_object,
  								 acpi_gbl_root_node);
  					status = AE_OK;
++<<<<<<< HEAD
++=======
+ 				} else if (parent_op->common.aml_opcode ==
+ 					   AML_EXTERNAL_OP) {
+ 
+ 					/* TBD: May only be temporary */
+ 
+ 					obj_desc =
+ 					    acpi_ut_create_string_object((acpi_size) name_length);
+ 
+ 					strncpy(obj_desc->string.pointer,
+ 						name_string, name_length);
+ 					status = AE_OK;
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  				} else {
  					/*
  					 * We just plain didn't find it -- which is a
diff --cc drivers/acpi/acpica/exconfig.c
index 5bff332aa0f0,24a4c5c2b124..000000000000
--- a/drivers/acpi/acpica/exconfig.c
+++ b/drivers/acpi/acpica/exconfig.c
@@@ -475,8 -470,7 +475,12 @@@ acpi_ex_load_op(union acpi_operand_obje
  			return_ACPI_STATUS(AE_NO_MEMORY);
  		}
  
++<<<<<<< HEAD
 +		ACPI_MEMCPY(table_desc.pointer, table, length);
 +		table_desc.address = ACPI_PTR_TO_PHYSADDR(table_desc.pointer);
++=======
+ 		memcpy(table, table_header, length);
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  		break;
  
  	default:
diff --cc drivers/acpi/acpica/rscreate.c
index 65f3e1c5b598,3fa829e96c2a..000000000000
--- a/drivers/acpi/acpica/rscreate.c
+++ b/drivers/acpi/acpica/rscreate.c
@@@ -350,7 -353,7 +350,11 @@@ acpi_rs_create_pci_routing_table(union 
  				/* +1 to include null terminator */
  
  				user_prt->length +=
++<<<<<<< HEAD
 +				    (u32) ACPI_STRLEN(user_prt->source) + 1;
++=======
+ 				    (u32)strlen(user_prt->source) + 1;
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  				break;
  
  			case ACPI_TYPE_STRING:
diff --cc drivers/acpi/acpica/tbinstal.c
index 4024bfc5fa21,15ea98e0068d..000000000000
--- a/drivers/acpi/acpica/tbinstal.c
+++ b/drivers/acpi/acpica/tbinstal.c
@@@ -49,11 -48,116 +49,116 @@@
  #define _COMPONENT          ACPI_TABLES
  ACPI_MODULE_NAME("tbinstal")
  
 -/* Local prototypes */
 -static u8
 -acpi_tb_compare_tables(struct acpi_table_desc *table_desc, u32 table_index);
 -
 -/*******************************************************************************
 +/******************************************************************************
   *
 - * FUNCTION:    acpi_tb_compare_tables
 + * FUNCTION:    acpi_tb_verify_table
   *
++<<<<<<< HEAD
 + * PARAMETERS:  table_desc          - table
++=======
+  * PARAMETERS:  table_desc          - Table 1 descriptor to be compared
+  *              table_index         - Index of table 2 to be compared
+  *
+  * RETURN:      TRUE if both tables are identical.
+  *
+  * DESCRIPTION: This function compares a table with another table that has
+  *              already been installed in the root table list.
+  *
+  ******************************************************************************/
+ 
+ static u8
+ acpi_tb_compare_tables(struct acpi_table_desc *table_desc, u32 table_index)
+ {
+ 	acpi_status status = AE_OK;
+ 	u8 is_identical;
+ 	struct acpi_table_header *table;
+ 	u32 table_length;
+ 	u8 table_flags;
+ 
+ 	status =
+ 	    acpi_tb_acquire_table(&acpi_gbl_root_table_list.tables[table_index],
+ 				  &table, &table_length, &table_flags);
+ 	if (ACPI_FAILURE(status)) {
+ 		return (FALSE);
+ 	}
+ 
+ 	/*
+ 	 * Check for a table match on the entire table length,
+ 	 * not just the header.
+ 	 */
+ 	is_identical = (u8)((table_desc->length != table_length ||
+ 			     memcmp(table_desc->pointer, table, table_length)) ?
+ 			    FALSE : TRUE);
+ 
+ 	/* Release the acquired table */
+ 
+ 	acpi_tb_release_table(table, table_length, table_flags);
+ 	return (is_identical);
+ }
+ 
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_tb_install_table_with_override
+  *
+  * PARAMETERS:  table_index             - Index into root table array
+  *              new_table_desc          - New table descriptor to install
+  *              override                - Whether override should be performed
+  *
+  * RETURN:      None
+  *
+  * DESCRIPTION: Install an ACPI table into the global data structure. The
+  *              table override mechanism is called to allow the host
+  *              OS to replace any table before it is installed in the root
+  *              table array.
+  *
+  ******************************************************************************/
+ 
+ void
+ acpi_tb_install_table_with_override(u32 table_index,
+ 				    struct acpi_table_desc *new_table_desc,
+ 				    u8 override)
+ {
+ 
+ 	if (table_index >= acpi_gbl_root_table_list.current_table_count) {
+ 		return;
+ 	}
+ 
+ 	/*
+ 	 * ACPI Table Override:
+ 	 *
+ 	 * Before we install the table, let the host OS override it with a new
+ 	 * one if desired. Any table within the RSDT/XSDT can be replaced,
+ 	 * including the DSDT which is pointed to by the FADT.
+ 	 */
+ 	if (override) {
+ 		acpi_tb_override_table(new_table_desc);
+ 	}
+ 
+ 	acpi_tb_init_table_descriptor(&acpi_gbl_root_table_list.
+ 				      tables[table_index],
+ 				      new_table_desc->address,
+ 				      new_table_desc->flags,
+ 				      new_table_desc->pointer);
+ 
+ 	acpi_tb_print_table_header(new_table_desc->address,
+ 				   new_table_desc->pointer);
+ 
+ 	/* Set the global integer width (based upon revision of the DSDT) */
+ 
+ 	if (table_index == ACPI_TABLE_INDEX_DSDT) {
+ 		acpi_ut_set_integer_width(new_table_desc->pointer->revision);
+ 	}
+ }
+ 
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_tb_install_fixed_table
+  *
+  * PARAMETERS:  address                 - Physical address of DSDT or FACS
+  *              signature               - Table signature, NULL if no need to
+  *                                        match
+  *              table_index             - Index into root table array
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
   *
   * RETURN:      Status
   *
@@@ -142,93 -254,102 +247,135 @@@ acpi_tb_add_table(struct acpi_table_des
  	}
  
  	/*
 -	 * Optionally do not load any SSDTs from the RSDT/XSDT. This can
 -	 * be useful for debugging ACPI problems on some machines.
 +	 * Validate the incoming table signature.
 +	 *
 +	 * 1) Originally, we checked the table signature for "SSDT" or "PSDT".
 +	 * 2) We added support for OEMx tables, signature "OEM".
 +	 * 3) Valid tables were encountered with a null signature, so we just
 +	 *    gave up on validating the signature, (05/2008).
 +	 * 4) We encountered non-AML tables such as the MADT, which caused
 +	 *    interpreter errors and kernel faults. So now, we once again allow
 +	 *    only "SSDT", "OEMx", and now, also a null signature. (05/2011).
  	 */
 -	if (!reload &&
 -	    acpi_gbl_disable_ssdt_table_install &&
 -	    ACPI_COMPARE_NAME(&new_table_desc.signature, ACPI_SIG_SSDT)) {
 -		ACPI_INFO((AE_INFO,
 -			   "Ignoring installation of %4.4s at %8.8X%8.8X",
 -			   new_table_desc.signature.ascii,
 -			   ACPI_FORMAT_UINT64(address)));
 -		goto release_and_exit;
 +	if ((table_desc->pointer->signature[0] != 0x00) &&
 +	    (!ACPI_COMPARE_NAME(table_desc->pointer->signature, ACPI_SIG_SSDT))
 +	    && (ACPI_STRNCMP(table_desc->pointer->signature, "OEM", 3))) {
 +		ACPI_BIOS_ERROR((AE_INFO,
 +				 "Table has invalid signature [%4.4s] (0x%8.8X), "
 +				 "must be SSDT or OEMx",
 +				 acpi_ut_valid_acpi_name(table_desc->pointer->
 +							 signature) ?
 +				 table_desc->pointer->signature : "????",
 +				 *(u32 *)table_desc->pointer->signature));
 +
 +		return_ACPI_STATUS(AE_BAD_SIGNATURE);
  	}
  
 -	/* Validate and verify a table before installation */
 +	(void)acpi_ut_acquire_mutex(ACPI_MTX_TABLES);
  
 -	status = acpi_tb_verify_temp_table(&new_table_desc, NULL);
 -	if (ACPI_FAILURE(status)) {
 -		goto release_and_exit;
 -	}
 +	/* Check if table is already registered */
  
++<<<<<<< HEAD
 +	for (i = 0; i < acpi_gbl_root_table_list.current_table_count; ++i) {
 +		if (!acpi_gbl_root_table_list.tables[i].pointer) {
 +			status =
 +			    acpi_tb_verify_table(&acpi_gbl_root_table_list.
 +						 tables[i]);
 +			if (ACPI_FAILURE(status)
 +			    || !acpi_gbl_root_table_list.tables[i].pointer) {
++=======
+ 	if (reload) {
+ 		/*
+ 		 * Validate the incoming table signature.
+ 		 *
+ 		 * 1) Originally, we checked the table signature for "SSDT" or "PSDT".
+ 		 * 2) We added support for OEMx tables, signature "OEM".
+ 		 * 3) Valid tables were encountered with a null signature, so we just
+ 		 *    gave up on validating the signature, (05/2008).
+ 		 * 4) We encountered non-AML tables such as the MADT, which caused
+ 		 *    interpreter errors and kernel faults. So now, we once again allow
+ 		 *    only "SSDT", "OEMx", and now, also a null signature. (05/2011).
+ 		 */
+ 		if ((new_table_desc.signature.ascii[0] != 0x00) &&
+ 		    (!ACPI_COMPARE_NAME
+ 		     (&new_table_desc.signature, ACPI_SIG_SSDT))
+ 		    && (strncmp(new_table_desc.signature.ascii, "OEM", 3))) {
+ 			ACPI_BIOS_ERROR((AE_INFO,
+ 					 "Table has invalid signature [%4.4s] (0x%8.8X), "
+ 					 "must be SSDT or OEMx",
+ 					 acpi_ut_valid_acpi_name(new_table_desc.
+ 								 signature.
+ 								 ascii) ?
+ 					 new_table_desc.signature.
+ 					 ascii : "????",
+ 					 new_table_desc.signature.integer));
+ 
+ 			status = AE_BAD_SIGNATURE;
+ 			goto release_and_exit;
+ 		}
+ 
+ 		/* Check if table is already registered */
+ 
+ 		for (i = 0; i < acpi_gbl_root_table_list.current_table_count;
+ 		     ++i) {
+ 			/*
+ 			 * Check for a table match on the entire table length,
+ 			 * not just the header.
+ 			 */
+ 			if (!acpi_tb_compare_tables(&new_table_desc, i)) {
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  				continue;
  			}
 +		}
  
 -			/*
 -			 * Note: the current mechanism does not unregister a table if it is
 -			 * dynamically unloaded. The related namespace entries are deleted,
 -			 * but the table remains in the root table list.
 -			 *
 -			 * The assumption here is that the number of different tables that
 -			 * will be loaded is actually small, and there is minimal overhead
 -			 * in just keeping the table in case it is needed again.
 -			 *
 -			 * If this assumption changes in the future (perhaps on large
 -			 * machines with many table load/unload operations), tables will
 -			 * need to be unregistered when they are unloaded, and slots in the
 -			 * root table list should be reused when empty.
 -			 */
 -			if (acpi_gbl_root_table_list.tables[i].
 -			    flags & ACPI_TABLE_IS_LOADED) {
 -
 -				/* Table is still loaded, this is an error */
 -
 -				status = AE_ALREADY_EXISTS;
 -				goto release_and_exit;
 -			} else {
 -				/*
 -				 * Table was unloaded, allow it to be reloaded.
 -				 * As we are going to return AE_OK to the caller, we should
 -				 * take the responsibility of freeing the input descriptor.
 -				 * Refill the input descriptor to ensure
 -				 * acpi_tb_install_table_with_override() can be called again to
 -				 * indicate the re-installation.
 -				 */
 -				acpi_tb_uninstall_table(&new_table_desc);
 -				*table_index = i;
 -				return_ACPI_STATUS(AE_OK);
 -			}
 +		/*
 +		 * Check for a table match on the entire table length,
 +		 * not just the header.
 +		 */
 +		if (table_desc->length !=
 +		    acpi_gbl_root_table_list.tables[i].length) {
 +			continue;
 +		}
 +
 +		if (ACPI_MEMCMP(table_desc->pointer,
 +				acpi_gbl_root_table_list.tables[i].pointer,
 +				acpi_gbl_root_table_list.tables[i].length)) {
 +			continue;
 +		}
 +
 +		/*
 +		 * Note: the current mechanism does not unregister a table if it is
 +		 * dynamically unloaded. The related namespace entries are deleted,
 +		 * but the table remains in the root table list.
 +		 *
 +		 * The assumption here is that the number of different tables that
 +		 * will be loaded is actually small, and there is minimal overhead
 +		 * in just keeping the table in case it is needed again.
 +		 *
 +		 * If this assumption changes in the future (perhaps on large
 +		 * machines with many table load/unload operations), tables will
 +		 * need to be unregistered when they are unloaded, and slots in the
 +		 * root table list should be reused when empty.
 +		 */
 +		*table_index = i;
 +
 +		if (acpi_gbl_root_table_list.tables[i].
 +		    flags & ACPI_TABLE_IS_LOADED) {
 +
 +			/* Table is still loaded, this is an error */
 +
 +			status = AE_ALREADY_EXISTS;
 +			goto release;
 +		} else {
 +			/* Table was unloaded, allow it to be reloaded */
 +
 +			acpi_tb_delete_table(table_desc);
 +			table_desc->pointer =
 +			    acpi_gbl_root_table_list.tables[i].pointer;
 +			table_desc->address =
 +			    acpi_gbl_root_table_list.tables[i].address;
 +			status = AE_OK;
 +			goto print_header;
  		}
  	}
  
diff --cc drivers/acpi/acpica/tbutils.c
index 61ffb069ecd5,568ac0e4a3c6..000000000000
--- a/drivers/acpi/acpica/tbutils.c
+++ b/drivers/acpi/acpica/tbutils.c
@@@ -235,11 -188,14 +235,22 @@@ struct acpi_table_header *acpi_tb_copy_
  		return (NULL);
  	}
  
++<<<<<<< HEAD
 +	ACPI_MEMCPY(new_table, table_desc->pointer, table_desc->length);
 +	acpi_tb_delete_table(table_desc);
 +	table_desc->address = ACPI_PTR_TO_PHYSADDR(new_table);
 +	table_desc->pointer = new_table;
 +	table_desc->flags = ACPI_TABLE_ORIGIN_ALLOCATED;
++=======
+ 	memcpy(new_table, table_desc->pointer, table_desc->length);
+ 	acpi_tb_uninstall_table(table_desc);
+ 
+ 	acpi_tb_init_table_descriptor(&acpi_gbl_root_table_list.
+ 				      tables[ACPI_TABLE_INDEX_DSDT],
+ 				      ACPI_PTR_TO_PHYSADDR(new_table),
+ 				      ACPI_TABLE_ORIGIN_INTERNAL_VIRTUAL,
+ 				      new_table);
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  
  	ACPI_INFO((AE_INFO,
  		   "Forced DSDT copy: length 0x%05X copied locally, original unmapped",
diff --cc drivers/acpi/acpica/tbxface.c
index ba6e31d96bc1,5559e2c70b15..000000000000
--- a/drivers/acpi/acpica/tbxface.c
+++ b/drivers/acpi/acpica/tbxface.c
@@@ -238,8 -242,9 +238,14 @@@ acpi_get_table_header(char *signature
  				if (!header) {
  					return (AE_NO_MEMORY);
  				}
++<<<<<<< HEAD
 +				ACPI_MEMCPY(out_table_header, header,
 +					    sizeof(struct acpi_table_header));
++=======
+ 
+ 				memcpy(out_table_header, header,
+ 				       sizeof(struct acpi_table_header));
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  				acpi_os_unmap_memory(header,
  						     sizeof(struct
  							    acpi_table_header));
diff --cc drivers/acpi/acpica/utbuffer.c
index 11fde93be120,01c8709ca586..000000000000
--- a/drivers/acpi/acpica/utbuffer.c
+++ b/drivers/acpi/acpica/utbuffer.c
@@@ -150,8 -150,16 +150,8 @@@ void acpi_ut_dump_buffer(u8 *buffer, u3
  				return;
  			}
  
 -			/*
 -			 * Add comment characters so rest of line is ignored when
 -			 * compiled
 -			 */
 -			if (j == 0) {
 -				acpi_os_printf("// ");
 -			}
 -
  			buf_char = buffer[(acpi_size) i + j];
- 			if (ACPI_IS_PRINT(buf_char)) {
+ 			if (isprint(buf_char)) {
  				acpi_os_printf("%c", buf_char);
  			} else {
  				acpi_os_printf(".");
@@@ -199,3 -207,131 +199,134 @@@ acpi_ut_debug_dump_buffer(u8 *buffer, u
  
  	acpi_ut_dump_buffer(buffer, count, display, 0);
  }
++<<<<<<< HEAD
++=======
+ 
+ #ifdef ACPI_APPLICATION
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_ut_dump_buffer_to_file
+  *
+  * PARAMETERS:  file                - File descriptor
+  *              buffer              - Buffer to dump
+  *              count               - Amount to dump, in bytes
+  *              display             - BYTE, WORD, DWORD, or QWORD display:
+  *                                      DB_BYTE_DISPLAY
+  *                                      DB_WORD_DISPLAY
+  *                                      DB_DWORD_DISPLAY
+  *                                      DB_QWORD_DISPLAY
+  *              base_offset         - Beginning buffer offset (display only)
+  *
+  * RETURN:      None
+  *
+  * DESCRIPTION: Generic dump buffer in both hex and ascii to a file.
+  *
+  ******************************************************************************/
+ 
+ void
+ acpi_ut_dump_buffer_to_file(ACPI_FILE file,
+ 			    u8 *buffer, u32 count, u32 display, u32 base_offset)
+ {
+ 	u32 i = 0;
+ 	u32 j;
+ 	u32 temp32;
+ 	u8 buf_char;
+ 
+ 	if (!buffer) {
+ 		acpi_ut_file_printf(file,
+ 				    "Null Buffer Pointer in DumpBuffer!\n");
+ 		return;
+ 	}
+ 
+ 	if ((count < 4) || (count & 0x01)) {
+ 		display = DB_BYTE_DISPLAY;
+ 	}
+ 
+ 	/* Nasty little dump buffer routine! */
+ 
+ 	while (i < count) {
+ 
+ 		/* Print current offset */
+ 
+ 		acpi_ut_file_printf(file, "%6.4X: ", (base_offset + i));
+ 
+ 		/* Print 16 hex chars */
+ 
+ 		for (j = 0; j < 16;) {
+ 			if (i + j >= count) {
+ 
+ 				/* Dump fill spaces */
+ 
+ 				acpi_ut_file_printf(file, "%*s",
+ 						    ((display * 2) + 1), " ");
+ 				j += display;
+ 				continue;
+ 			}
+ 
+ 			switch (display) {
+ 			case DB_BYTE_DISPLAY:
+ 			default:	/* Default is BYTE display */
+ 
+ 				acpi_ut_file_printf(file, "%02X ",
+ 						    buffer[(acpi_size) i + j]);
+ 				break;
+ 
+ 			case DB_WORD_DISPLAY:
+ 
+ 				ACPI_MOVE_16_TO_32(&temp32,
+ 						   &buffer[(acpi_size) i + j]);
+ 				acpi_ut_file_printf(file, "%04X ", temp32);
+ 				break;
+ 
+ 			case DB_DWORD_DISPLAY:
+ 
+ 				ACPI_MOVE_32_TO_32(&temp32,
+ 						   &buffer[(acpi_size) i + j]);
+ 				acpi_ut_file_printf(file, "%08X ", temp32);
+ 				break;
+ 
+ 			case DB_QWORD_DISPLAY:
+ 
+ 				ACPI_MOVE_32_TO_32(&temp32,
+ 						   &buffer[(acpi_size) i + j]);
+ 				acpi_ut_file_printf(file, "%08X", temp32);
+ 
+ 				ACPI_MOVE_32_TO_32(&temp32,
+ 						   &buffer[(acpi_size) i + j +
+ 							   4]);
+ 				acpi_ut_file_printf(file, "%08X ", temp32);
+ 				break;
+ 			}
+ 
+ 			j += display;
+ 		}
+ 
+ 		/*
+ 		 * Print the ASCII equivalent characters but watch out for the bad
+ 		 * unprintable ones (printable chars are 0x20 through 0x7E)
+ 		 */
+ 		acpi_ut_file_printf(file, " ");
+ 		for (j = 0; j < 16; j++) {
+ 			if (i + j >= count) {
+ 				acpi_ut_file_printf(file, "\n");
+ 				return;
+ 			}
+ 
+ 			buf_char = buffer[(acpi_size) i + j];
+ 			if (isprint(buf_char)) {
+ 				acpi_ut_file_printf(file, "%c", buf_char);
+ 			} else {
+ 				acpi_ut_file_printf(file, ".");
+ 			}
+ 		}
+ 
+ 		/* Done with that line. */
+ 
+ 		acpi_ut_file_printf(file, "\n");
+ 		i += 16;
+ 	}
+ 
+ 	return;
+ }
+ #endif
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
diff --cc drivers/acpi/acpica/utstring.c
index 9edb65f516a6,8f3c883dfe0e..000000000000
--- a/drivers/acpi/acpica/utstring.c
+++ b/drivers/acpi/acpica/utstring.c
@@@ -583,3 -584,64 +583,67 @@@ void ut_convert_backslashes(char *pathn
  	}
  }
  #endif
++<<<<<<< HEAD
++=======
+ 
+ #if defined (ACPI_DEBUGGER) || defined (ACPI_APPLICATION)
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_ut_safe_strcpy, acpi_ut_safe_strcat, acpi_ut_safe_strncat
+  *
+  * PARAMETERS:  Adds a "DestSize" parameter to each of the standard string
+  *              functions. This is the size of the Destination buffer.
+  *
+  * RETURN:      TRUE if the operation would overflow the destination buffer.
+  *
+  * DESCRIPTION: Safe versions of standard Clib string functions. Ensure that
+  *              the result of the operation will not overflow the output string
+  *              buffer.
+  *
+  * NOTE:        These functions are typically only helpful for processing
+  *              user input and command lines. For most ACPICA code, the
+  *              required buffer length is precisely calculated before buffer
+  *              allocation, so the use of these functions is unnecessary.
+  *
+  ******************************************************************************/
+ 
+ u8 acpi_ut_safe_strcpy(char *dest, acpi_size dest_size, char *source)
+ {
+ 
+ 	if (strlen(source) >= dest_size) {
+ 		return (TRUE);
+ 	}
+ 
+ 	strcpy(dest, source);
+ 	return (FALSE);
+ }
+ 
+ u8 acpi_ut_safe_strcat(char *dest, acpi_size dest_size, char *source)
+ {
+ 
+ 	if ((strlen(dest) + strlen(source)) >= dest_size) {
+ 		return (TRUE);
+ 	}
+ 
+ 	strcat(dest, source);
+ 	return (FALSE);
+ }
+ 
+ u8
+ acpi_ut_safe_strncat(char *dest,
+ 		     acpi_size dest_size,
+ 		     char *source, acpi_size max_transfer_length)
+ {
+ 	acpi_size actual_transfer_length;
+ 
+ 	actual_transfer_length = ACPI_MIN(max_transfer_length, strlen(source));
+ 
+ 	if ((strlen(dest) + actual_transfer_length) >= dest_size) {
+ 		return (TRUE);
+ 	}
+ 
+ 	strncat(dest, source, max_transfer_length);
+ 	return (FALSE);
+ }
+ #endif
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
diff --cc drivers/acpi/acpica/utxface.c
index 71911d7853df,51cf52d52243..000000000000
--- a/drivers/acpi/acpica/utxface.c
+++ b/drivers/acpi/acpica/utxface.c
@@@ -208,6 -208,44 +208,47 @@@ acpi_status acpi_get_system_info(struc
  
  ACPI_EXPORT_SYMBOL(acpi_get_system_info)
  
++<<<<<<< HEAD
++=======
+ /*******************************************************************************
+  *
+  * FUNCTION:    acpi_get_statistics
+  *
+  * PARAMETERS:  stats           - Where the statistics are returned
+  *
+  * RETURN:      status          - the status of the call
+  *
+  * DESCRIPTION: Get the contents of the various system counters
+  *
+  ******************************************************************************/
+ acpi_status acpi_get_statistics(struct acpi_statistics *stats)
+ {
+ 	ACPI_FUNCTION_TRACE(acpi_get_statistics);
+ 
+ 	/* Parameter validation */
+ 
+ 	if (!stats) {
+ 		return_ACPI_STATUS(AE_BAD_PARAMETER);
+ 	}
+ 
+ 	/* Various interrupt-based event counters */
+ 
+ 	stats->sci_count = acpi_sci_count;
+ 	stats->gpe_count = acpi_gpe_count;
+ 
+ 	memcpy(stats->fixed_event_count, acpi_fixed_event_count,
+ 	       sizeof(acpi_fixed_event_count));
+ 
+ 	/* Other counters */
+ 
+ 	stats->method_count = acpi_method_count;
+ 
+ 	return_ACPI_STATUS(AE_OK);
+ }
+ 
+ ACPI_EXPORT_SYMBOL(acpi_get_statistics)
+ 
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  /*****************************************************************************
   *
   * FUNCTION:    acpi_install_initialization_handler
diff --cc include/acpi/actypes.h
index 90953bd39053,c2a41d223162..000000000000
--- a/include/acpi/actypes.h
+++ b/include/acpi/actypes.h
@@@ -505,10 -542,15 +505,18 @@@ typedef u64 acpi_integer
  #define ACPI_COMPARE_NAME(a,b)          (*ACPI_CAST_PTR (u32, (a)) == *ACPI_CAST_PTR (u32, (b)))
  #define ACPI_MOVE_NAME(dest,src)        (*ACPI_CAST_PTR (u32, (dest)) = *ACPI_CAST_PTR (u32, (src)))
  #else
- #define ACPI_COMPARE_NAME(a,b)          (!ACPI_STRNCMP (ACPI_CAST_PTR (char, (a)), ACPI_CAST_PTR (char, (b)), ACPI_NAME_SIZE))
- #define ACPI_MOVE_NAME(dest,src)        (ACPI_STRNCPY (ACPI_CAST_PTR (char, (dest)), ACPI_CAST_PTR (char, (src)), ACPI_NAME_SIZE))
+ #define ACPI_COMPARE_NAME(a,b)          (!strncmp (ACPI_CAST_PTR (char, (a)), ACPI_CAST_PTR (char, (b)), ACPI_NAME_SIZE))
+ #define ACPI_MOVE_NAME(dest,src)        (strncpy (ACPI_CAST_PTR (char, (dest)), ACPI_CAST_PTR (char, (src)), ACPI_NAME_SIZE))
  #endif
  
++<<<<<<< HEAD
++=======
+ /* Support for the special RSDP signature (8 characters) */
+ 
+ #define ACPI_VALIDATE_RSDP_SIG(a)       (!strncmp (ACPI_CAST_PTR (char, (a)), ACPI_SIG_RSDP, 8))
+ #define ACPI_MAKE_RSDP_SIG(dest)        (memcpy (ACPI_CAST_PTR (char, (dest)), ACPI_SIG_RSDP, 8))
+ 
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  /*******************************************************************************
   *
   * Miscellaneous constants
diff --cc include/acpi/platform/acenv.h
index 5211e9663d36,3cedd43943f4..000000000000
--- a/include/acpi/platform/acenv.h
+++ b/include/acpi/platform/acenv.h
@@@ -313,29 -346,6 +313,32 @@@
  
  /* We will be linking to the standard Clib functions */
  
++<<<<<<< HEAD
 +#define ACPI_STRSTR(s1,s2)      strstr((s1), (s2))
 +#define ACPI_STRCHR(s1,c)       strchr((s1), (c))
 +#define ACPI_STRLEN(s)          (acpi_size) strlen((s))
 +#define ACPI_STRCPY(d,s)        (void) strcpy((d), (s))
 +#define ACPI_STRNCPY(d,s,n)     (void) strncpy((d), (s), (acpi_size)(n))
 +#define ACPI_STRNCMP(d,s,n)     strncmp((d), (s), (acpi_size)(n))
 +#define ACPI_STRCMP(d,s)        strcmp((d), (s))
 +#define ACPI_STRCAT(d,s)        (void) strcat((d), (s))
 +#define ACPI_STRNCAT(d,s,n)     strncat((d), (s), (acpi_size)(n))
 +#define ACPI_STRTOUL(d,s,n)     strtoul((d), (s), (acpi_size)(n))
 +#define ACPI_MEMCMP(s1,s2,n)    memcmp((const char *)(s1), (const char *)(s2), (acpi_size)(n))
 +#define ACPI_MEMCPY(d,s,n)      (void) memcpy((d), (s), (acpi_size)(n))
 +#define ACPI_MEMSET(d,s,n)      (void) memset((d), (s), (acpi_size)(n))
 +
 +#define ACPI_TOUPPER(i)         toupper((int) (i))
 +#define ACPI_TOLOWER(i)         tolower((int) (i))
 +#define ACPI_IS_XDIGIT(i)       isxdigit((int) (i))
 +#define ACPI_IS_DIGIT(i)        isdigit((int) (i))
 +#define ACPI_IS_SPACE(i)        isspace((int) (i))
 +#define ACPI_IS_UPPER(i)        isupper((int) (i))
 +#define ACPI_IS_PRINT(i)        isprint((int) (i))
 +#define ACPI_IS_ALPHA(i)        isalpha((int) (i))
 +
++=======
++>>>>>>> 4fa4616e279d (ACPICA: De-macroize calls to standard C library functions)
  #else
  
  /******************************************************************************
* Unmerged path drivers/acpi/acpica/tbdata.c
* Unmerged path drivers/acpi/acpica/utprint.c
* Unmerged path tools/power/acpi/common/getopt.c
* Unmerged path tools/power/acpi/os_specific/service_layers/oslinuxtbl.c
* Unmerged path tools/power/acpi/tools/acpidump/apdump.c
* Unmerged path tools/power/acpi/tools/acpidump/apfiles.c
* Unmerged path drivers/acpi/acpica/acutils.h
diff --git a/drivers/acpi/acpica/dsfield.c b/drivers/acpi/acpica/dsfield.c
index d4bfe7b7f90a..0a56cda2db32 100644
--- a/drivers/acpi/acpica/dsfield.c
+++ b/drivers/acpi/acpica/dsfield.c
@@ -500,7 +500,7 @@ acpi_ds_create_field(union acpi_parse_object *op,
 		}
 	}
 
-	ACPI_MEMSET(&info, 0, sizeof(struct acpi_create_field_info));
+	memset(&info, 0, sizeof(struct acpi_create_field_info));
 
 	/* Second arg is the field flags */
 
diff --git a/drivers/acpi/acpica/dsinit.c b/drivers/acpi/acpica/dsinit.c
index 14424200d246..260888c7530e 100644
--- a/drivers/acpi/acpica/dsinit.c
+++ b/drivers/acpi/acpica/dsinit.c
@@ -174,7 +174,7 @@ acpi_ds_initialize_objects(u32 table_index,
 
 	/* Set all init info to zero */
 
-	ACPI_MEMSET(&info, 0, sizeof(struct acpi_init_walk_info));
+	memset(&info, 0, sizeof(struct acpi_init_walk_info));
 
 	info.owner_id = owner_id;
 	info.table_index = table_index;
* Unmerged path drivers/acpi/acpica/dsobject.c
* Unmerged path drivers/acpi/acpica/dsutils.c
diff --git a/drivers/acpi/acpica/evgpeinit.c b/drivers/acpi/acpica/evgpeinit.c
index 9037f17c9608..6e07775e33df 100644
--- a/drivers/acpi/acpica/evgpeinit.c
+++ b/drivers/acpi/acpica/evgpeinit.c
@@ -384,7 +384,7 @@ acpi_ev_match_gpe_method(acpi_handle obj_handle,
 
 	/* 4) The last two characters of the name are the hex GPE Number */
 
-	gpe_number = ACPI_STRTOUL(&name[2], NULL, 16);
+	gpe_number = strtoul(&name[2], NULL, 16);
 	if (gpe_number == ACPI_UINT32_MAX) {
 
 		/* Conversion failed; invalid method, just ignore it */
* Unmerged path drivers/acpi/acpica/exconfig.c
diff --git a/drivers/acpi/acpica/exconvrt.c b/drivers/acpi/acpica/exconvrt.c
index 69e4a8cc9b71..7a21d286282c 100644
--- a/drivers/acpi/acpica/exconvrt.c
+++ b/drivers/acpi/acpica/exconvrt.c
@@ -227,9 +227,8 @@ acpi_ex_convert_to_buffer(union acpi_operand_object *obj_desc,
 		/* Copy the integer to the buffer, LSB first */
 
 		new_buf = return_desc->buffer.pointer;
-		ACPI_MEMCPY(new_buf,
-			    &obj_desc->integer.value,
-			    acpi_gbl_integer_byte_width);
+		memcpy(new_buf,
+		       &obj_desc->integer.value, acpi_gbl_integer_byte_width);
 		break;
 
 	case ACPI_TYPE_STRING:
@@ -252,8 +251,8 @@ acpi_ex_convert_to_buffer(union acpi_operand_object *obj_desc,
 		/* Copy the string to the buffer */
 
 		new_buf = return_desc->buffer.pointer;
-		ACPI_STRNCPY((char *)new_buf, (char *)obj_desc->string.pointer,
-			     obj_desc->string.length);
+		strncpy((char *)new_buf, (char *)obj_desc->string.pointer,
+			obj_desc->string.length);
 		break;
 
 	default:
diff --git a/drivers/acpi/acpica/exfield.c b/drivers/acpi/acpica/exfield.c
index c251b0cce123..be4158011a09 100644
--- a/drivers/acpi/acpica/exfield.c
+++ b/drivers/acpi/acpica/exfield.c
@@ -399,7 +399,7 @@ acpi_ex_write_data_to_field(union acpi_operand_object *source_desc,
 		}
 
 		buffer = buffer_desc->buffer.pointer;
-		ACPI_MEMCPY(buffer, source_desc->buffer.pointer, length);
+		memcpy(buffer, source_desc->buffer.pointer, length);
 
 		/* Lock entire transaction if requested */
 
diff --git a/drivers/acpi/acpica/exfldio.c b/drivers/acpi/acpica/exfldio.c
index 7e0afe72487e..fec044a98ea1 100644
--- a/drivers/acpi/acpica/exfldio.c
+++ b/drivers/acpi/acpica/exfldio.c
@@ -424,22 +424,22 @@ acpi_ex_field_datum_io(union acpi_operand_object *obj_desc,
 			 * Copy the data from the source buffer.
 			 * Length is the field width in bytes.
 			 */
-			ACPI_MEMCPY(value,
-				    (obj_desc->buffer_field.buffer_obj)->buffer.
-				    pointer +
-				    obj_desc->buffer_field.base_byte_offset +
-				    field_datum_byte_offset,
-				    obj_desc->common_field.access_byte_width);
+			memcpy(value,
+			       (obj_desc->buffer_field.buffer_obj)->buffer.
+			       pointer +
+			       obj_desc->buffer_field.base_byte_offset +
+			       field_datum_byte_offset,
+			       obj_desc->common_field.access_byte_width);
 		} else {
 			/*
 			 * Copy the data to the target buffer.
 			 * Length is the field width in bytes.
 			 */
-			ACPI_MEMCPY((obj_desc->buffer_field.buffer_obj)->buffer.
-				    pointer +
-				    obj_desc->buffer_field.base_byte_offset +
-				    field_datum_byte_offset, value,
-				    obj_desc->common_field.access_byte_width);
+			memcpy((obj_desc->buffer_field.buffer_obj)->buffer.
+			       pointer +
+			       obj_desc->buffer_field.base_byte_offset +
+			       field_datum_byte_offset, value,
+			       obj_desc->common_field.access_byte_width);
 		}
 
 		status = AE_OK;
@@ -711,7 +711,7 @@ acpi_ex_extract_from_field(union acpi_operand_object *obj_desc,
 		return_ACPI_STATUS(AE_BUFFER_OVERFLOW);
 	}
 
-	ACPI_MEMSET(buffer, 0, buffer_length);
+	memset(buffer, 0, buffer_length);
 	access_bit_width = ACPI_MUL_8(obj_desc->common_field.access_byte_width);
 
 	/* Handle the simple case here */
@@ -728,7 +728,7 @@ acpi_ex_extract_from_field(union acpi_operand_object *obj_desc,
 			status =
 			    acpi_ex_field_datum_io(obj_desc, 0, &raw_datum,
 						   ACPI_READ);
-			ACPI_MEMCPY(buffer, &raw_datum, buffer_length);
+			memcpy(buffer, &raw_datum, buffer_length);
 		}
 
 		return_ACPI_STATUS(status);
@@ -801,9 +801,9 @@ acpi_ex_extract_from_field(union acpi_operand_object *obj_desc,
 
 		/* Write merged datum to target buffer */
 
-		ACPI_MEMCPY(((char *)buffer) + buffer_offset, &merged_datum,
-			    ACPI_MIN(obj_desc->common_field.access_byte_width,
-				     buffer_length - buffer_offset));
+		memcpy(((char *)buffer) + buffer_offset, &merged_datum,
+		       ACPI_MIN(obj_desc->common_field.access_byte_width,
+				buffer_length - buffer_offset));
 
 		buffer_offset += obj_desc->common_field.access_byte_width;
 		merged_datum =
@@ -819,9 +819,9 @@ acpi_ex_extract_from_field(union acpi_operand_object *obj_desc,
 
 	/* Write the last datum to the buffer */
 
-	ACPI_MEMCPY(((char *)buffer) + buffer_offset, &merged_datum,
-		    ACPI_MIN(obj_desc->common_field.access_byte_width,
-			     buffer_length - buffer_offset));
+	memcpy(((char *)buffer) + buffer_offset, &merged_datum,
+	       ACPI_MIN(obj_desc->common_field.access_byte_width,
+			buffer_length - buffer_offset));
 
 	return_ACPI_STATUS(AE_OK);
 }
@@ -886,7 +886,7 @@ acpi_ex_insert_into_field(union acpi_operand_object *obj_desc,
 		 * at Byte zero. All unused (upper) bytes of the
 		 * buffer will be 0.
 		 */
-		ACPI_MEMCPY((char *)new_buffer, (char *)buffer, buffer_length);
+		memcpy((char *)new_buffer, (char *)buffer, buffer_length);
 		buffer = new_buffer;
 		buffer_length = required_length;
 	}
@@ -926,9 +926,9 @@ acpi_ex_insert_into_field(union acpi_operand_object *obj_desc,
 
 	/* Get initial Datum from the input buffer */
 
-	ACPI_MEMCPY(&raw_datum, buffer,
-		    ACPI_MIN(obj_desc->common_field.access_byte_width,
-			     buffer_length - buffer_offset));
+	memcpy(&raw_datum, buffer,
+	       ACPI_MIN(obj_desc->common_field.access_byte_width,
+			buffer_length - buffer_offset));
 
 	merged_datum =
 	    raw_datum << obj_desc->common_field.start_field_bit_offset;
@@ -978,9 +978,9 @@ acpi_ex_insert_into_field(union acpi_operand_object *obj_desc,
 		/* Get the next input datum from the buffer */
 
 		buffer_offset += obj_desc->common_field.access_byte_width;
-		ACPI_MEMCPY(&raw_datum, ((char *)buffer) + buffer_offset,
-			    ACPI_MIN(obj_desc->common_field.access_byte_width,
-				     buffer_length - buffer_offset));
+		memcpy(&raw_datum, ((char *)buffer) + buffer_offset,
+		       ACPI_MIN(obj_desc->common_field.access_byte_width,
+				buffer_length - buffer_offset));
 
 		merged_datum |=
 		    raw_datum << obj_desc->common_field.start_field_bit_offset;
diff --git a/drivers/acpi/acpica/exmisc.c b/drivers/acpi/acpica/exmisc.c
index 00bf29877574..cec123968389 100644
--- a/drivers/acpi/acpica/exmisc.c
+++ b/drivers/acpi/acpica/exmisc.c
@@ -209,8 +209,8 @@ acpi_ex_concat_template(union acpi_operand_object *operand0,
 	 * end_tag descriptor is copied from Operand1.
 	 */
 	new_buf = return_desc->buffer.pointer;
-	ACPI_MEMCPY(new_buf, operand0->buffer.pointer, length0);
-	ACPI_MEMCPY(new_buf + length0, operand1->buffer.pointer, length1);
+	memcpy(new_buf, operand0->buffer.pointer, length0);
+	memcpy(new_buf + length0, operand1->buffer.pointer, length1);
 
 	/* Insert end_tag and set the checksum to zero, means "ignore checksum" */
 
@@ -318,14 +318,14 @@ acpi_ex_do_concatenate(union acpi_operand_object *operand0,
 
 		/* Copy the first integer, LSB first */
 
-		ACPI_MEMCPY(new_buf, &operand0->integer.value,
-			    acpi_gbl_integer_byte_width);
+		memcpy(new_buf, &operand0->integer.value,
+		       acpi_gbl_integer_byte_width);
 
 		/* Copy the second integer (LSB first) after the first */
 
-		ACPI_MEMCPY(new_buf + acpi_gbl_integer_byte_width,
-			    &local_operand1->integer.value,
-			    acpi_gbl_integer_byte_width);
+		memcpy(new_buf + acpi_gbl_integer_byte_width,
+		       &local_operand1->integer.value,
+		       acpi_gbl_integer_byte_width);
 		break;
 
 	case ACPI_TYPE_STRING:
@@ -346,9 +346,9 @@ acpi_ex_do_concatenate(union acpi_operand_object *operand0,
 
 		/* Concatenate the strings */
 
-		ACPI_STRCPY(new_buf, operand0->string.pointer);
-		ACPI_STRCPY(new_buf + operand0->string.length,
-			    local_operand1->string.pointer);
+		strcpy(new_buf, operand0->string.pointer);
+		strcpy(new_buf + operand0->string.length,
+		       local_operand1->string.pointer);
 		break;
 
 	case ACPI_TYPE_BUFFER:
@@ -369,11 +369,11 @@ acpi_ex_do_concatenate(union acpi_operand_object *operand0,
 
 		/* Concatenate the buffers */
 
-		ACPI_MEMCPY(new_buf, operand0->buffer.pointer,
-			    operand0->buffer.length);
-		ACPI_MEMCPY(new_buf + operand0->buffer.length,
-			    local_operand1->buffer.pointer,
-			    local_operand1->buffer.length);
+		memcpy(new_buf, operand0->buffer.pointer,
+		       operand0->buffer.length);
+		memcpy(new_buf + operand0->buffer.length,
+		       local_operand1->buffer.pointer,
+		       local_operand1->buffer.length);
 		break;
 
 	default:
@@ -660,9 +660,9 @@ acpi_ex_do_logical_op(u16 opcode,
 
 		/* Lexicographic compare: compare the data bytes */
 
-		compare = ACPI_MEMCMP(operand0->buffer.pointer,
-				      local_operand1->buffer.pointer,
-				      (length0 > length1) ? length1 : length0);
+		compare = memcmp(operand0->buffer.pointer,
+				 local_operand1->buffer.pointer,
+				 (length0 > length1) ? length1 : length0);
 
 		switch (opcode) {
 		case AML_LEQUAL_OP:	/* LEqual (Operand0, Operand1) */
diff --git a/drivers/acpi/acpica/exnames.c b/drivers/acpi/acpica/exnames.c
index 14689dec4960..02280680da96 100644
--- a/drivers/acpi/acpica/exnames.c
+++ b/drivers/acpi/acpica/exnames.c
@@ -192,7 +192,7 @@ static acpi_status acpi_ex_name_segment(u8 ** in_aml_address, char *name_string)
 		char_buf[4] = '\0';
 
 		if (name_string) {
-			ACPI_STRCAT(name_string, char_buf);
+			strcat(name_string, char_buf);
 			ACPI_DEBUG_PRINT((ACPI_DB_NAMES,
 					  "Appended to - %s\n", name_string));
 		} else {
diff --git a/drivers/acpi/acpica/exoparg2.c b/drivers/acpi/acpica/exoparg2.c
index d5088f7030c7..08311cb116c5 100644
--- a/drivers/acpi/acpica/exoparg2.c
+++ b/drivers/acpi/acpica/exoparg2.c
@@ -337,8 +337,8 @@ acpi_status acpi_ex_opcode_2A_1T_1R(struct acpi_walk_state *walk_state)
 		 * Copy the raw buffer data with no transform.
 		 * (NULL terminated already)
 		 */
-		ACPI_MEMCPY(return_desc->string.pointer,
-			    operand[0]->buffer.pointer, length);
+		memcpy(return_desc->string.pointer,
+		       operand[0]->buffer.pointer, length);
 		break;
 
 	case AML_CONCAT_RES_OP:
diff --git a/drivers/acpi/acpica/exoparg3.c b/drivers/acpi/acpica/exoparg3.c
index 37656f12f204..d0be2ba33154 100644
--- a/drivers/acpi/acpica/exoparg3.c
+++ b/drivers/acpi/acpica/exoparg3.c
@@ -226,8 +226,8 @@ acpi_status acpi_ex_opcode_3A_1T_1R(struct acpi_walk_state *walk_state)
 
 			/* We have a buffer, copy the portion requested */
 
-			ACPI_MEMCPY(buffer, operand[0]->string.pointer + index,
-				    length);
+			memcpy(buffer, operand[0]->string.pointer + index,
+			       length);
 		}
 
 		/* Set the length of the new String/Buffer */
diff --git a/drivers/acpi/acpica/exregion.c b/drivers/acpi/acpica/exregion.c
index 303429bb4d5d..4095b46b6039 100644
--- a/drivers/acpi/acpica/exregion.c
+++ b/drivers/acpi/acpica/exregion.c
@@ -517,15 +517,14 @@ acpi_ex_data_table_space_handler(u32 function,
 	switch (function) {
 	case ACPI_READ:
 
-		ACPI_MEMCPY(ACPI_CAST_PTR(char, value),
-			    ACPI_PHYSADDR_TO_PTR(address),
-			    ACPI_DIV_8(bit_width));
+		memcpy(ACPI_CAST_PTR(char, value),
+		       ACPI_PHYSADDR_TO_PTR(address), ACPI_DIV_8(bit_width));
 		break;
 
 	case ACPI_WRITE:
 
-		ACPI_MEMCPY(ACPI_PHYSADDR_TO_PTR(address),
-			    ACPI_CAST_PTR(char, value), ACPI_DIV_8(bit_width));
+		memcpy(ACPI_PHYSADDR_TO_PTR(address),
+		       ACPI_CAST_PTR(char, value), ACPI_DIV_8(bit_width));
 		break;
 
 	default:
diff --git a/drivers/acpi/acpica/exstorob.c b/drivers/acpi/acpica/exstorob.c
index 26e371073b1a..1cc83b9d4210 100644
--- a/drivers/acpi/acpica/exstorob.c
+++ b/drivers/acpi/acpica/exstorob.c
@@ -100,9 +100,9 @@ acpi_ex_store_buffer_to_buffer(union acpi_operand_object *source_desc,
 
 		/* Clear existing buffer and copy in the new one */
 
-		ACPI_MEMSET(target_desc->buffer.pointer, 0,
-			    target_desc->buffer.length);
-		ACPI_MEMCPY(target_desc->buffer.pointer, buffer, length);
+		memset(target_desc->buffer.pointer, 0,
+		       target_desc->buffer.length);
+		memcpy(target_desc->buffer.pointer, buffer, length);
 
 #ifdef ACPI_OBSOLETE_BEHAVIOR
 		/*
@@ -129,8 +129,8 @@ acpi_ex_store_buffer_to_buffer(union acpi_operand_object *source_desc,
 	} else {
 		/* Truncate the source, copy only what will fit */
 
-		ACPI_MEMCPY(target_desc->buffer.pointer, buffer,
-			    target_desc->buffer.length);
+		memcpy(target_desc->buffer.pointer, buffer,
+		       target_desc->buffer.length);
 
 		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
 				  "Truncating source buffer from %X to %X\n",
@@ -187,9 +187,9 @@ acpi_ex_store_string_to_string(union acpi_operand_object *source_desc,
 		 * String will fit in existing non-static buffer.
 		 * Clear old string and copy in the new one
 		 */
-		ACPI_MEMSET(target_desc->string.pointer, 0,
-			    (acpi_size) target_desc->string.length + 1);
-		ACPI_MEMCPY(target_desc->string.pointer, buffer, length);
+		memset(target_desc->string.pointer, 0,
+		       (acpi_size) target_desc->string.length + 1);
+		memcpy(target_desc->string.pointer, buffer, length);
 	} else {
 		/*
 		 * Free the current buffer, then allocate a new buffer
@@ -210,7 +210,7 @@ acpi_ex_store_string_to_string(union acpi_operand_object *source_desc,
 		}
 
 		target_desc->common.flags &= ~AOPOBJ_STATIC_POINTER;
-		ACPI_MEMCPY(target_desc->string.pointer, buffer, length);
+		memcpy(target_desc->string.pointer, buffer, length);
 	}
 
 	/* Set the new target length */
diff --git a/drivers/acpi/acpica/nsaccess.c b/drivers/acpi/acpica/nsaccess.c
index c5316e5bd4ab..d2432a13bd92 100644
--- a/drivers/acpi/acpica/nsaccess.c
+++ b/drivers/acpi/acpica/nsaccess.c
@@ -102,7 +102,7 @@ acpi_status acpi_ns_root_initialize(void)
 
 		/* _OSI is optional for now, will be permanent later */
 
-		if (!ACPI_STRCMP(init_val->name, "_OSI")
+		if (!strcmp(init_val->name, "_OSI")
 		    && !acpi_gbl_create_osi_method) {
 			continue;
 		}
@@ -180,7 +180,7 @@ acpi_status acpi_ns_root_initialize(void)
 
 				/* Build an object around the static string */
 
-				obj_desc->string.length = (u32)ACPI_STRLEN(val);
+				obj_desc->string.length = (u32)strlen(val);
 				obj_desc->string.pointer = val;
 				obj_desc->common.flags |= AOPOBJ_STATIC_POINTER;
 				break;
@@ -203,7 +203,7 @@ acpi_status acpi_ns_root_initialize(void)
 
 				/* Special case for ACPI Global Lock */
 
-				if (ACPI_STRCMP(init_val->name, "_GL_") == 0) {
+				if (strcmp(init_val->name, "_GL_") == 0) {
 					acpi_gbl_global_lock_mutex = obj_desc;
 
 					/* Create additional counting semaphore for global lock */
diff --git a/drivers/acpi/acpica/nsconvert.c b/drivers/acpi/acpica/nsconvert.c
index acd2964c2690..febb04c7bd8d 100644
--- a/drivers/acpi/acpica/nsconvert.c
+++ b/drivers/acpi/acpica/nsconvert.c
@@ -187,8 +187,8 @@ acpi_ns_convert_to_string(union acpi_operand_object *original_object,
 		 * Copy the raw buffer data with no transform. String is already NULL
 		 * terminated at Length+1.
 		 */
-		ACPI_MEMCPY(new_object->string.pointer,
-			    original_object->buffer.pointer, length);
+		memcpy(new_object->string.pointer,
+		       original_object->buffer.pointer, length);
 		break;
 
 	default:
@@ -251,9 +251,9 @@ acpi_ns_convert_to_buffer(union acpi_operand_object *original_object,
 			return (AE_NO_MEMORY);
 		}
 
-		ACPI_MEMCPY(new_object->buffer.pointer,
-			    original_object->string.pointer,
-			    original_object->string.length);
+		memcpy(new_object->buffer.pointer,
+		       original_object->string.pointer,
+		       original_object->string.length);
 		break;
 
 	case ACPI_TYPE_PACKAGE:
diff --git a/drivers/acpi/acpica/nsdump.c b/drivers/acpi/acpica/nsdump.c
index 7418c77fde8c..ed58dd2047b8 100644
--- a/drivers/acpi/acpica/nsdump.c
+++ b/drivers/acpi/acpica/nsdump.c
@@ -90,7 +90,7 @@ void acpi_ns_print_pathname(u32 num_segments, char *pathname)
 
 	while (num_segments) {
 		for (i = 0; i < 4; i++) {
-			ACPI_IS_PRINT(pathname[i]) ?
+			isprint((int)pathname[i]) ?
 			    acpi_os_printf("%c", pathname[i]) :
 			    acpi_os_printf("?");
 		}
diff --git a/drivers/acpi/acpica/nseval.c b/drivers/acpi/acpica/nseval.c
index 18108bc2e51c..15f6ebb88489 100644
--- a/drivers/acpi/acpica/nseval.c
+++ b/drivers/acpi/acpica/nseval.c
@@ -440,7 +440,7 @@ acpi_ns_exec_module_code(union acpi_operand_object *method_obj,
 
 	/* Initialize the evaluation information block */
 
-	ACPI_MEMSET(info, 0, sizeof(struct acpi_evaluate_info));
+	memset(info, 0, sizeof(struct acpi_evaluate_info));
 	info->prefix_node = parent_node;
 
 	/*
diff --git a/drivers/acpi/acpica/nsinit.c b/drivers/acpi/acpica/nsinit.c
index dd2ceae3f717..5c366025cb2a 100644
--- a/drivers/acpi/acpica/nsinit.c
+++ b/drivers/acpi/acpica/nsinit.c
@@ -90,7 +90,7 @@ acpi_status acpi_ns_initialize_objects(void)
 
 	/* Set all init info to zero */
 
-	ACPI_MEMSET(&info, 0, sizeof(struct acpi_init_walk_info));
+	memset(&info, 0, sizeof(struct acpi_init_walk_info));
 
 	/* Walk entire namespace from the supplied root */
 
@@ -567,7 +567,7 @@ acpi_ns_init_one_device(acpi_handle obj_handle,
 	ACPI_DEBUG_EXEC(acpi_ut_display_init_pathname
 			(ACPI_TYPE_METHOD, device_node, METHOD_NAME__INI));
 
-	ACPI_MEMSET(info, 0, sizeof(struct acpi_evaluate_info));
+	memset(info, 0, sizeof(struct acpi_evaluate_info));
 	info->prefix_node = device_node;
 	info->relative_pathname = METHOD_NAME__INI;
 	info->parameters = NULL;
diff --git a/drivers/acpi/acpica/nsrepair2.c b/drivers/acpi/acpica/nsrepair2.c
index c84603ee83ae..fa16c9465d36 100644
--- a/drivers/acpi/acpica/nsrepair2.c
+++ b/drivers/acpi/acpica/nsrepair2.c
@@ -580,7 +580,7 @@ acpi_ns_repair_HID(struct acpi_evaluate_info *info,
 	 * # is a hex digit.
 	 */
 	for (dest = new_string->string.pointer; *source; dest++, source++) {
-		*dest = (char)ACPI_TOUPPER(*source);
+		*dest = (char)toupper((int)*source);
 	}
 
 	acpi_ut_remove_reference(return_object);
diff --git a/drivers/acpi/acpica/nsutils.c b/drivers/acpi/acpica/nsutils.c
index 08c0b5beec88..cfafeb4880f6 100644
--- a/drivers/acpi/acpica/nsutils.c
+++ b/drivers/acpi/acpica/nsutils.c
@@ -292,8 +292,7 @@ acpi_status acpi_ns_build_internal_name(struct acpi_namestring_info *info)
 			} else {
 				/* Convert the character to uppercase and save it */
 
-				result[i] =
-				    (char)ACPI_TOUPPER((int)*external_name);
+				result[i] = (char)toupper((int)*external_name);
 				external_name++;
 			}
 		}
diff --git a/drivers/acpi/acpica/nsxfeval.c b/drivers/acpi/acpica/nsxfeval.c
index 3a5bd348ba8d..3013b3cad107 100644
--- a/drivers/acpi/acpica/nsxfeval.c
+++ b/drivers/acpi/acpica/nsxfeval.c
@@ -685,7 +685,7 @@ acpi_ns_get_device_callback(acpi_handle obj_handle,
 			return (AE_CTRL_DEPTH);
 		}
 
-		no_match = ACPI_STRCMP(hid->string, info->hid);
+		no_match = strcmp(hid->string, info->hid);
 		ACPI_FREE(hid);
 
 		if (no_match) {
@@ -704,8 +704,7 @@ acpi_ns_get_device_callback(acpi_handle obj_handle,
 
 			found = FALSE;
 			for (i = 0; i < cid->count; i++) {
-				if (ACPI_STRCMP(cid->ids[i].string, info->hid)
-				    == 0) {
+				if (strcmp(cid->ids[i].string, info->hid) == 0) {
 
 					/* Found a matching CID */
 
diff --git a/drivers/acpi/acpica/nsxfname.c b/drivers/acpi/acpica/nsxfname.c
index c86094fcab7b..fd81f4e511db 100644
--- a/drivers/acpi/acpica/nsxfname.c
+++ b/drivers/acpi/acpica/nsxfname.c
@@ -114,7 +114,7 @@ acpi_get_handle(acpi_handle parent,
 
 		/* Special case for root-only, since we can't search for it */
 
-		if (!ACPI_STRCMP(pathname, ACPI_NS_ROOT_PATH)) {
+		if (!strcmp(pathname, ACPI_NS_ROOT_PATH)) {
 			*ret_handle =
 			    ACPI_CAST_PTR(acpi_handle, acpi_gbl_root_node);
 			return (AE_OK);
@@ -240,7 +240,7 @@ static char *acpi_ns_copy_device_id(struct acpi_pnp_device_id *dest,
 
 	/* Copy actual string and return a pointer to the next string area */
 
-	ACPI_MEMCPY(string_area, source->string, source->length);
+	memcpy(string_area, source->string, source->length);
 	return (string_area + source->length);
 }
 
@@ -613,7 +613,7 @@ acpi_status acpi_install_method(u8 *buffer)
 
 	/* Copy the method AML to the local buffer */
 
-	ACPI_MEMCPY(aml_buffer, aml_start, aml_length);
+	memcpy(aml_buffer, aml_start, aml_length);
 
 	/* Initialize the method object with the new method's information */
 
diff --git a/drivers/acpi/acpica/psutils.c b/drivers/acpi/acpica/psutils.c
index 91fa73a6e55e..13cae3756e76 100644
--- a/drivers/acpi/acpica/psutils.c
+++ b/drivers/acpi/acpica/psutils.c
@@ -93,10 +93,9 @@ void acpi_ps_init_op(union acpi_parse_object *op, u16 opcode)
 	op->common.descriptor_type = ACPI_DESC_TYPE_PARSER;
 	op->common.aml_opcode = opcode;
 
-	ACPI_DISASM_ONLY_MEMBERS(ACPI_STRNCPY(op->common.aml_op_name,
-					      (acpi_ps_get_opcode_info
-					       (opcode))->name,
-					      sizeof(op->common.aml_op_name)));
+	ACPI_DISASM_ONLY_MEMBERS(strncpy(op->common.aml_op_name,
+					 (acpi_ps_get_opcode_info(opcode))->
+					 name, sizeof(op->common.aml_op_name)));
 }
 
 /*******************************************************************************
* Unmerged path drivers/acpi/acpica/rscreate.c
diff --git a/drivers/acpi/acpica/rsmisc.c b/drivers/acpi/acpica/rsmisc.c
index 80d12994e0d0..0cd559711e17 100644
--- a/drivers/acpi/acpica/rsmisc.c
+++ b/drivers/acpi/acpica/rsmisc.c
@@ -119,7 +119,7 @@ acpi_rs_convert_aml_to_resource(struct acpi_resource *resource,
 			/*
 			 * Get the resource type and the initial (minimum) length
 			 */
-			ACPI_MEMSET(resource, 0, INIT_RESOURCE_LENGTH(info));
+			memset(resource, 0, INIT_RESOURCE_LENGTH(info));
 			resource->type = INIT_RESOURCE_TYPE(info);
 			resource->length = INIT_RESOURCE_LENGTH(info);
 			break;
@@ -324,13 +324,13 @@ acpi_rs_convert_aml_to_resource(struct acpi_resource *resource,
 
 		case ACPI_RSC_SET8:
 
-			ACPI_MEMSET(destination, info->aml_offset, info->value);
+			memset(destination, info->aml_offset, info->value);
 			break;
 
 		case ACPI_RSC_DATA8:
 
 			target = ACPI_ADD_PTR(char, resource, info->value);
-			ACPI_MEMCPY(destination, source, ACPI_GET16(target));
+			memcpy(destination, source, ACPI_GET16(target));
 			break;
 
 		case ACPI_RSC_ADDRESS:
@@ -502,7 +502,7 @@ acpi_rs_convert_resource_to_aml(struct acpi_resource *resource,
 		switch (info->opcode) {
 		case ACPI_RSC_INITSET:
 
-			ACPI_MEMSET(aml, 0, INIT_RESOURCE_LENGTH(info));
+			memset(aml, 0, INIT_RESOURCE_LENGTH(info));
 			aml_length = INIT_RESOURCE_LENGTH(info);
 			acpi_rs_set_resource_header(INIT_RESOURCE_TYPE(info),
 						    aml_length, aml);
diff --git a/drivers/acpi/acpica/rsutils.c b/drivers/acpi/acpica/rsutils.c
index 480b6b40c5ea..8847dcc15879 100644
--- a/drivers/acpi/acpica/rsutils.c
+++ b/drivers/acpi/acpica/rsutils.c
@@ -148,7 +148,7 @@ acpi_rs_move_data(void *destination, void *source, u16 item_count, u8 move_type)
 		case ACPI_RSC_MOVE_SERIAL_VEN:
 		case ACPI_RSC_MOVE_SERIAL_RES:
 
-			ACPI_MEMCPY(destination, source, item_count);
+			memcpy(destination, source, item_count);
 			return;
 
 			/*
@@ -364,12 +364,11 @@ acpi_rs_get_resource_source(acpi_rs_length resource_length,
 		 * Zero the entire area of the buffer.
 		 */
 		total_length =
-		    (u32)
-		    ACPI_STRLEN(ACPI_CAST_PTR(char, &aml_resource_source[1])) +
+		    (u32)strlen(ACPI_CAST_PTR(char, &aml_resource_source[1])) +
 		    1;
 		total_length = (u32) ACPI_ROUND_UP_TO_NATIVE_WORD(total_length);
 
-		ACPI_MEMSET(resource_source->string_ptr, 0, total_length);
+		memset(resource_source->string_ptr, 0, total_length);
 
 		/* Copy the resource_source string to the destination */
 
@@ -432,8 +431,8 @@ acpi_rs_set_resource_source(union aml_resource * aml,
 
 		/* Copy the resource_source string */
 
-		ACPI_STRCPY(ACPI_CAST_PTR(char, &aml_resource_source[1]),
-			    resource_source->string_ptr);
+		strcpy(ACPI_CAST_PTR(char, &aml_resource_source[1]),
+		       resource_source->string_ptr);
 
 		/*
 		 * Add the length of the string (+ 1 for null terminator) to the
diff --git a/drivers/acpi/acpica/rsxface.c b/drivers/acpi/acpica/rsxface.c
index f4dfbbe9af94..c118c772b617 100644
--- a/drivers/acpi/acpica/rsxface.c
+++ b/drivers/acpi/acpica/rsxface.c
@@ -398,8 +398,8 @@ acpi_resource_to_address64(struct acpi_resource *resource,
 
 		/* Simple copy for 64 bit source */
 
-		ACPI_MEMCPY(out, &resource->data,
-			    sizeof(struct acpi_resource_address64));
+		memcpy(out, &resource->data,
+		       sizeof(struct acpi_resource_address64));
 		break;
 
 	default:
@@ -499,7 +499,7 @@ acpi_rs_match_vendor_resource(struct acpi_resource *resource, void *context)
 	 */
 	if ((vendor->byte_length < (ACPI_UUID_LENGTH + 1)) ||
 	    (vendor->uuid_subtype != info->uuid->subtype) ||
-	    (ACPI_MEMCMP(vendor->uuid, info->uuid->data, ACPI_UUID_LENGTH))) {
+	    (memcmp(vendor->uuid, info->uuid->data, ACPI_UUID_LENGTH))) {
 		return (AE_OK);
 	}
 
@@ -513,7 +513,7 @@ acpi_rs_match_vendor_resource(struct acpi_resource *resource, void *context)
 
 	/* Found the correct resource, copy and return it */
 
-	ACPI_MEMCPY(buffer->pointer, resource, resource->length);
+	memcpy(buffer->pointer, resource, resource->length);
 	buffer->length = resource->length;
 
 	/* Found the desired descriptor, terminate resource walk */
* Unmerged path drivers/acpi/acpica/tbdata.c
diff --git a/drivers/acpi/acpica/tbfadt.c b/drivers/acpi/acpica/tbfadt.c
index 31aba1a86a45..ef8b55d83553 100644
--- a/drivers/acpi/acpica/tbfadt.c
+++ b/drivers/acpi/acpica/tbfadt.c
@@ -325,12 +325,12 @@ void acpi_tb_create_local_fadt(struct acpi_table_header *table, u32 length)
 
 	/* Clear the entire local FADT */
 
-	ACPI_MEMSET(&acpi_gbl_FADT, 0, sizeof(struct acpi_table_fadt));
+	memset(&acpi_gbl_FADT, 0, sizeof(struct acpi_table_fadt));
 
 	/* Copy the original FADT, up to sizeof (struct acpi_table_fadt) */
 
-	ACPI_MEMCPY(&acpi_gbl_FADT, table,
-		    ACPI_MIN(length, sizeof(struct acpi_table_fadt)));
+	memcpy(&acpi_gbl_FADT, table,
+	       ACPI_MIN(length, sizeof(struct acpi_table_fadt)));
 
 	/* Take a copy of the Hardware Reduced flag */
 
diff --git a/drivers/acpi/acpica/tbfind.c b/drivers/acpi/acpica/tbfind.c
index e4f4f02d49e7..889e25600d89 100644
--- a/drivers/acpi/acpica/tbfind.c
+++ b/drivers/acpi/acpica/tbfind.c
@@ -76,16 +76,16 @@ acpi_tb_find_table(char *signature,
 
 	/* Normalize the input strings */
 
-	ACPI_MEMSET(&header, 0, sizeof(struct acpi_table_header));
+	memset(&header, 0, sizeof(struct acpi_table_header));
 	ACPI_MOVE_NAME(header.signature, signature);
-	ACPI_STRNCPY(header.oem_id, oem_id, ACPI_OEM_ID_SIZE);
-	ACPI_STRNCPY(header.oem_table_id, oem_table_id, ACPI_OEM_TABLE_ID_SIZE);
+	strncpy(header.oem_id, oem_id, ACPI_OEM_ID_SIZE);
+	strncpy(header.oem_table_id, oem_table_id, ACPI_OEM_TABLE_ID_SIZE);
 
 	/* Search for the table */
 
 	for (i = 0; i < acpi_gbl_root_table_list.current_table_count; ++i) {
-		if (ACPI_MEMCMP(&(acpi_gbl_root_table_list.tables[i].signature),
-				header.signature, ACPI_NAME_SIZE)) {
+		if (memcmp(&(acpi_gbl_root_table_list.tables[i].signature),
+			   header.signature, ACPI_NAME_SIZE)) {
 
 			/* Not the requested table */
 
@@ -112,21 +112,20 @@ acpi_tb_find_table(char *signature,
 
 		/* Check for table match on all IDs */
 
-		if (!ACPI_MEMCMP
+		if (!memcmp
 		    (acpi_gbl_root_table_list.tables[i].pointer->signature,
 		     header.signature, ACPI_NAME_SIZE) && (!oem_id[0]
 							   ||
-							   !ACPI_MEMCMP
+							   !memcmp
 							   (acpi_gbl_root_table_list.
 							    tables[i].pointer->
 							    oem_id,
 							    header.oem_id,
 							    ACPI_OEM_ID_SIZE))
 		    && (!oem_table_id[0]
-			|| !ACPI_MEMCMP(acpi_gbl_root_table_list.tables[i].
-					pointer->oem_table_id,
-					header.oem_table_id,
-					ACPI_OEM_TABLE_ID_SIZE))) {
+			|| !memcmp(acpi_gbl_root_table_list.tables[i].pointer->
+				   oem_table_id, header.oem_table_id,
+				   ACPI_OEM_TABLE_ID_SIZE))) {
 			*table_index = i;
 
 			ACPI_DEBUG_PRINT((ACPI_DB_TABLES,
* Unmerged path drivers/acpi/acpica/tbinstal.c
diff --git a/drivers/acpi/acpica/tbprint.c b/drivers/acpi/acpica/tbprint.c
index dc963f823d2c..1adcab9fdcc7 100644
--- a/drivers/acpi/acpica/tbprint.c
+++ b/drivers/acpi/acpica/tbprint.c
@@ -73,7 +73,7 @@ static void acpi_tb_fix_string(char *string, acpi_size length)
 {
 
 	while (length && *string) {
-		if (!ACPI_IS_PRINT(*string)) {
+		if (!isprint((int)*string)) {
 			*string = '?';
 		}
 		string++;
@@ -100,7 +100,7 @@ acpi_tb_cleanup_table_header(struct acpi_table_header *out_header,
 			     struct acpi_table_header *header)
 {
 
-	ACPI_MEMCPY(out_header, header, sizeof(struct acpi_table_header));
+	memcpy(out_header, header, sizeof(struct acpi_table_header));
 
 	acpi_tb_fix_string(out_header->signature, ACPI_NAME_SIZE);
 	acpi_tb_fix_string(out_header->oem_id, ACPI_OEM_ID_SIZE);
@@ -142,9 +142,9 @@ acpi_tb_print_table_header(acpi_physical_address address,
 
 		/* RSDP has no common fields */
 
-		ACPI_MEMCPY(local_header.oem_id,
-			    ACPI_CAST_PTR(struct acpi_table_rsdp,
-					  header)->oem_id, ACPI_OEM_ID_SIZE);
+		memcpy(local_header.oem_id,
+		       ACPI_CAST_PTR(struct acpi_table_rsdp, header)->oem_id,
+		       ACPI_OEM_ID_SIZE);
 		acpi_tb_fix_string(local_header.oem_id, ACPI_OEM_ID_SIZE);
 
 		ACPI_INFO((AE_INFO, "RSDP %p %05X (v%.2d %6.6s)",
* Unmerged path drivers/acpi/acpica/tbutils.c
* Unmerged path drivers/acpi/acpica/tbxface.c
diff --git a/drivers/acpi/acpica/tbxfload.c b/drivers/acpi/acpica/tbxfload.c
index 2620dbe96cfa..b9b2653b4e00 100644
--- a/drivers/acpi/acpica/tbxfload.c
+++ b/drivers/acpi/acpica/tbxfload.c
@@ -150,8 +150,8 @@ static acpi_status acpi_tb_load_namespace(void)
 	 * Save the original DSDT header for detection of table corruption
 	 * and/or replacement of the DSDT from outside the OS.
 	 */
-	ACPI_MEMCPY(&acpi_gbl_original_dsdt_header, acpi_gbl_DSDT,
-		    sizeof(struct acpi_table_header));
+	memcpy(&acpi_gbl_original_dsdt_header, acpi_gbl_DSDT,
+	       sizeof(struct acpi_table_header));
 
 	(void)acpi_ut_release_mutex(ACPI_MTX_TABLES);
 
diff --git a/drivers/acpi/acpica/utalloc.c b/drivers/acpi/acpica/utalloc.c
index d84479610971..e01e9ef555ad 100644
--- a/drivers/acpi/acpica/utalloc.c
+++ b/drivers/acpi/acpica/utalloc.c
@@ -73,7 +73,7 @@ void *acpi_os_allocate_zeroed(acpi_size size)
 
 		/* Clear the memory block */
 
-		ACPI_MEMSET(allocation, 0, size);
+		memset(allocation, 0, size);
 	}
 
 	return (allocation);
@@ -181,7 +181,7 @@ acpi_status acpi_ut_delete_caches(void)
 	char buffer[7];
 
 	if (acpi_gbl_display_final_mem_stats) {
-		ACPI_STRCPY(buffer, "MEMORY");
+		strcpy(buffer, "MEMORY");
 		(void)acpi_db_display_statistics(buffer);
 	}
 #endif
@@ -333,6 +333,6 @@ acpi_ut_initialize_buffer(struct acpi_buffer * buffer,
 
 	/* Have a valid buffer, clear it */
 
-	ACPI_MEMSET(buffer->pointer, 0, required_length);
+	memset(buffer->pointer, 0, required_length);
 	return (AE_OK);
 }
* Unmerged path drivers/acpi/acpica/utbuffer.c
diff --git a/drivers/acpi/acpica/utcache.c b/drivers/acpi/acpica/utcache.c
index a877a9647fd9..156082fc8581 100644
--- a/drivers/acpi/acpica/utcache.c
+++ b/drivers/acpi/acpica/utcache.c
@@ -84,7 +84,7 @@ acpi_os_create_cache(char *cache_name,
 
 	/* Populate the cache object and return it */
 
-	ACPI_MEMSET(cache, 0, sizeof(struct acpi_memory_list));
+	memset(cache, 0, sizeof(struct acpi_memory_list));
 	cache->list_name = cache_name;
 	cache->object_size = object_size;
 	cache->max_depth = max_depth;
@@ -212,7 +212,7 @@ acpi_os_release_object(struct acpi_memory_list * cache, void *object)
 
 		/* Mark the object as cached */
 
-		ACPI_MEMSET(object, 0xCA, cache->object_size);
+		memset(object, 0xCA, cache->object_size);
 		ACPI_SET_DESCRIPTOR_TYPE(object, ACPI_DESC_TYPE_CACHED);
 
 		/* Put the object at the head of the cache list */
@@ -281,7 +281,7 @@ void *acpi_os_acquire_object(struct acpi_memory_list *cache)
 
 		/* Clear (zero) the previously used Object */
 
-		ACPI_MEMSET(object, 0, cache->object_size);
+		memset(object, 0, cache->object_size);
 	} else {
 		/* The cache is empty, create a new object */
 
diff --git a/drivers/acpi/acpica/utcopy.c b/drivers/acpi/acpica/utcopy.c
index 1731c27c36a6..0f6809e9e7ff 100644
--- a/drivers/acpi/acpica/utcopy.c
+++ b/drivers/acpi/acpica/utcopy.c
@@ -129,7 +129,7 @@ acpi_ut_copy_isimple_to_esimple(union acpi_operand_object *internal_object,
 
 	/* Always clear the external object */
 
-	ACPI_MEMSET(external_object, 0, sizeof(union acpi_object));
+	memset(external_object, 0, sizeof(union acpi_object));
 
 	/*
 	 * In general, the external object will be the same type as
@@ -149,9 +149,9 @@ acpi_ut_copy_isimple_to_esimple(union acpi_operand_object *internal_object,
 								  string.
 								  length + 1);
 
-		ACPI_MEMCPY((void *)data_space,
-			    (void *)internal_object->string.pointer,
-			    (acpi_size) internal_object->string.length + 1);
+		memcpy((void *)data_space,
+		       (void *)internal_object->string.pointer,
+		       (acpi_size) internal_object->string.length + 1);
 		break;
 
 	case ACPI_TYPE_BUFFER:
@@ -162,9 +162,9 @@ acpi_ut_copy_isimple_to_esimple(union acpi_operand_object *internal_object,
 		    ACPI_ROUND_UP_TO_NATIVE_WORD(internal_object->string.
 						 length);
 
-		ACPI_MEMCPY((void *)data_space,
-			    (void *)internal_object->buffer.pointer,
-			    internal_object->buffer.length);
+		memcpy((void *)data_space,
+		       (void *)internal_object->buffer.pointer,
+		       internal_object->buffer.length);
 		break;
 
 	case ACPI_TYPE_INTEGER:
@@ -502,9 +502,9 @@ acpi_ut_copy_esimple_to_isimple(union acpi_object *external_object,
 			goto error_exit;
 		}
 
-		ACPI_MEMCPY(internal_object->string.pointer,
-			    external_object->string.pointer,
-			    external_object->string.length);
+		memcpy(internal_object->string.pointer,
+		       external_object->string.pointer,
+		       external_object->string.length);
 
 		internal_object->string.length = external_object->string.length;
 		break;
@@ -517,9 +517,9 @@ acpi_ut_copy_esimple_to_isimple(union acpi_object *external_object,
 			goto error_exit;
 		}
 
-		ACPI_MEMCPY(internal_object->buffer.pointer,
-			    external_object->buffer.pointer,
-			    external_object->buffer.length);
+		memcpy(internal_object->buffer.pointer,
+		       external_object->buffer.pointer,
+		       external_object->buffer.length);
 
 		internal_object->buffer.length = external_object->buffer.length;
 
@@ -694,8 +694,8 @@ acpi_ut_copy_simple_object(union acpi_operand_object *source_desc,
 		copy_size = sizeof(struct acpi_namespace_node);
 	}
 
-	ACPI_MEMCPY(ACPI_CAST_PTR(char, dest_desc),
-		    ACPI_CAST_PTR(char, source_desc), copy_size);
+	memcpy(ACPI_CAST_PTR(char, dest_desc),
+	       ACPI_CAST_PTR(char, source_desc), copy_size);
 
 	/* Restore the saved fields */
 
@@ -725,9 +725,9 @@ acpi_ut_copy_simple_object(union acpi_operand_object *source_desc,
 
 			/* Copy the actual buffer data */
 
-			ACPI_MEMCPY(dest_desc->buffer.pointer,
-				    source_desc->buffer.pointer,
-				    source_desc->buffer.length);
+			memcpy(dest_desc->buffer.pointer,
+			       source_desc->buffer.pointer,
+			       source_desc->buffer.length);
 		}
 		break;
 
@@ -747,9 +747,9 @@ acpi_ut_copy_simple_object(union acpi_operand_object *source_desc,
 
 			/* Copy the actual string data */
 
-			ACPI_MEMCPY(dest_desc->string.pointer,
-				    source_desc->string.pointer,
-				    (acpi_size) source_desc->string.length + 1);
+			memcpy(dest_desc->string.pointer,
+			       source_desc->string.pointer,
+			       (acpi_size) source_desc->string.length + 1);
 		}
 		break;
 
diff --git a/drivers/acpi/acpica/utids.c b/drivers/acpi/acpica/utids.c
index fa69071db418..7b2499037fe3 100644
--- a/drivers/acpi/acpica/utids.c
+++ b/drivers/acpi/acpica/utids.c
@@ -111,7 +111,7 @@ acpi_ut_execute_HID(struct acpi_namespace_node *device_node,
 	if (obj_desc->common.type == ACPI_TYPE_INTEGER) {
 		acpi_ex_eisa_id_to_string(hid->string, obj_desc->integer.value);
 	} else {
-		ACPI_STRCPY(hid->string, obj_desc->string.pointer);
+		strcpy(hid->string, obj_desc->string.pointer);
 	}
 
 	hid->length = length;
@@ -180,7 +180,7 @@ acpi_ut_execute_SUB(struct acpi_namespace_node *device_node,
 
 	/* Simply copy existing string */
 
-	ACPI_STRCPY(sub->string, obj_desc->string.pointer);
+	strcpy(sub->string, obj_desc->string.pointer);
 	sub->length = length;
 	*return_id = sub;
 
@@ -256,7 +256,7 @@ acpi_ut_execute_UID(struct acpi_namespace_node *device_node,
 	if (obj_desc->common.type == ACPI_TYPE_INTEGER) {
 		acpi_ex_integer_to_string(uid->string, obj_desc->integer.value);
 	} else {
-		ACPI_STRCPY(uid->string, obj_desc->string.pointer);
+		strcpy(uid->string, obj_desc->string.pointer);
 	}
 
 	uid->length = length;
@@ -393,8 +393,7 @@ acpi_ut_execute_CID(struct acpi_namespace_node *device_node,
 
 			/* Copy the String CID from the returned object */
 
-			ACPI_STRCPY(next_id_string,
-				    cid_objects[i]->string.pointer);
+			strcpy(next_id_string, cid_objects[i]->string.pointer);
 			length = cid_objects[i]->string.length + 1;
 		}
 
diff --git a/drivers/acpi/acpica/utmisc.c b/drivers/acpi/acpica/utmisc.c
index 02f9101b65e4..3f6c8c635054 100644
--- a/drivers/acpi/acpica/utmisc.c
+++ b/drivers/acpi/acpica/utmisc.c
@@ -66,9 +66,9 @@ u8 acpi_ut_is_pci_root_bridge(char *id)
 	 * Check if this is a PCI root bridge.
 	 * ACPI 3.0+: check for a PCI Express root also.
 	 */
-	if (!(ACPI_STRCMP(id,
-			  PCI_ROOT_HID_STRING)) ||
-	    !(ACPI_STRCMP(id, PCI_EXPRESS_ROOT_HID_STRING))) {
+	if (!(strcmp(id,
+		     PCI_ROOT_HID_STRING)) ||
+	    !(strcmp(id, PCI_EXPRESS_ROOT_HID_STRING))) {
 		return (TRUE);
 	}
 
diff --git a/drivers/acpi/acpica/utosi.c b/drivers/acpi/acpica/utosi.c
index bc8f5a2af0d4..0a7542c006cc 100644
--- a/drivers/acpi/acpica/utosi.c
+++ b/drivers/acpi/acpica/utosi.c
@@ -199,8 +199,7 @@ acpi_status acpi_ut_install_interface(acpi_string interface_name)
 		return (AE_NO_MEMORY);
 	}
 
-	interface_info->name =
-	    ACPI_ALLOCATE_ZEROED(ACPI_STRLEN(interface_name) + 1);
+	interface_info->name = ACPI_ALLOCATE_ZEROED(strlen(interface_name) + 1);
 	if (!interface_info->name) {
 		ACPI_FREE(interface_info);
 		return (AE_NO_MEMORY);
@@ -208,7 +207,7 @@ acpi_status acpi_ut_install_interface(acpi_string interface_name)
 
 	/* Initialize new info and insert at the head of the global list */
 
-	ACPI_STRCPY(interface_info->name, interface_name);
+	strcpy(interface_info->name, interface_name);
 	interface_info->flags = ACPI_OSI_DYNAMIC;
 	interface_info->next = acpi_gbl_supported_interfaces;
 
@@ -236,7 +235,7 @@ acpi_status acpi_ut_remove_interface(acpi_string interface_name)
 
 	previous_interface = next_interface = acpi_gbl_supported_interfaces;
 	while (next_interface) {
-		if (!ACPI_STRCMP(interface_name, next_interface->name)) {
+		if (!strcmp(interface_name, next_interface->name)) {
 
 			/* Found: name is in either the static list or was added at runtime */
 
@@ -297,7 +296,7 @@ struct acpi_interface_info *acpi_ut_get_interface(acpi_string interface_name)
 
 	next_interface = acpi_gbl_supported_interfaces;
 	while (next_interface) {
-		if (!ACPI_STRCMP(interface_name, next_interface->name)) {
+		if (!strcmp(interface_name, next_interface->name)) {
 			return (next_interface);
 		}
 
diff --git a/drivers/acpi/acpica/utpredef.c b/drivers/acpi/acpica/utpredef.c
index 2b1ce4cd3207..1c48cd13b7de 100644
--- a/drivers/acpi/acpica/utpredef.c
+++ b/drivers/acpi/acpica/utpredef.c
@@ -148,7 +148,7 @@ void acpi_ut_get_expected_return_types(char *buffer, u32 expected_btypes)
 	u32 j;
 
 	if (!expected_btypes) {
-		ACPI_STRCPY(buffer, "NONE");
+		strcpy(buffer, "NONE");
 		return;
 	}
 
@@ -161,7 +161,7 @@ void acpi_ut_get_expected_return_types(char *buffer, u32 expected_btypes)
 		/* If one of the expected types, concatenate the name of this type */
 
 		if (expected_btypes & this_rtype) {
-			ACPI_STRCAT(buffer, &ut_rtype_names[i][j]);
+			strcat(buffer, &ut_rtype_names[i][j]);
 			j = 0;	/* Use name separator from now on */
 		}
 
* Unmerged path drivers/acpi/acpica/utprint.c
* Unmerged path drivers/acpi/acpica/utstring.c
diff --git a/drivers/acpi/acpica/uttrack.c b/drivers/acpi/acpica/uttrack.c
index 77e3eb7d7c04..8ab5ad2ceaea 100644
--- a/drivers/acpi/acpica/uttrack.c
+++ b/drivers/acpi/acpica/uttrack.c
@@ -100,7 +100,7 @@ acpi_ut_create_list(char *list_name,
 		return (AE_NO_MEMORY);
 	}
 
-	ACPI_MEMSET(cache, 0, sizeof(struct acpi_memory_list));
+	memset(cache, 0, sizeof(struct acpi_memory_list));
 
 	cache->list_name = list_name;
 	cache->object_size = object_size;
@@ -401,7 +401,7 @@ acpi_ut_track_allocation(struct acpi_debug_mem_block *allocation,
 	allocation->component = component;
 	allocation->line = line;
 
-	ACPI_STRNCPY(allocation->module, module, ACPI_MAX_MODULE_NAME);
+	strncpy(allocation->module, module, ACPI_MAX_MODULE_NAME);
 	allocation->module[ACPI_MAX_MODULE_NAME - 1] = 0;
 
 	if (!element) {
@@ -496,7 +496,7 @@ acpi_ut_remove_allocation(struct acpi_debug_mem_block *allocation,
 
 	/* Mark the segment as deleted */
 
-	ACPI_MEMSET(&allocation->user_space, 0xEA, allocation->size);
+	memset(&allocation->user_space, 0xEA, allocation->size);
 
 	status = acpi_ut_release_mutex(ACPI_MTX_MEMORY);
 	return (status);
@@ -594,7 +594,7 @@ void acpi_ut_dump_allocations(u32 component, const char *module)
 	while (element) {
 		if ((element->component & component) &&
 		    ((module == NULL)
-		     || (0 == ACPI_STRCMP(module, element->module)))) {
+		     || (0 == strcmp(module, element->module)))) {
 			descriptor =
 			    ACPI_CAST_PTR(union acpi_descriptor,
 					  &element->user_space);
* Unmerged path drivers/acpi/acpica/utxface.c
* Unmerged path include/acpi/actypes.h
* Unmerged path include/acpi/platform/acenv.h
* Unmerged path tools/power/acpi/common/getopt.c
* Unmerged path tools/power/acpi/os_specific/service_layers/oslinuxtbl.c
* Unmerged path tools/power/acpi/tools/acpidump/apdump.c
* Unmerged path tools/power/acpi/tools/acpidump/apfiles.c
