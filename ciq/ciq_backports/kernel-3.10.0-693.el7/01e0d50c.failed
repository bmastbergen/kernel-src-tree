perf evsel: Rename config_callgraph() to config_callchain() and make it public

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Arnaldo Carvalho de Melo <acme@redhat.com>
commit 01e0d50c3f95cb1bae2dbfd83173bc2864d6d28c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/01e0d50c.failed

The rename is for consistency with the parameter name.

Make it public for fine grained control of which evsels should have
callchains enabled, like, for instance, will be done in the next
changesets in 'perf trace', to enable callchains just on the
"raw_syscalls:sys_exit" tracepoint.

	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: David Ahern <dsahern@gmail.com>
	Cc: Jiri Olsa <jolsa@kernel.org>
	Cc: Milian Wolff <milian.wolff@kdab.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Wang Nan <wangnan0@huawei.com>
Link: http://lkml.kernel.org/n/tip-og8vup111rn357g4yagus3ao@git.kernel.org
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 01e0d50c3f95cb1bae2dbfd83173bc2864d6d28c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/util/evsel.c
#	tools/perf/util/evsel.h
diff --cc tools/perf/util/evsel.c
index e0478f1149c9,d475a4ec8b57..000000000000
--- a/tools/perf/util/evsel.c
+++ b/tools/perf/util/evsel.c
@@@ -801,8 -812,8 +800,13 @@@ void perf_evsel__config(struct perf_evs
  	if (perf_evsel__is_function_event(evsel))
  		evsel->attr.exclude_callchain_user = 1;
  
++<<<<<<< HEAD
 +	if (callchain_param.enabled && !evsel->no_aux_samples)
 +		perf_evsel__config_callgraph(evsel, opts, &callchain_param);
++=======
+ 	if (callchain && callchain->enabled && !evsel->no_aux_samples)
+ 		perf_evsel__config_callchain(evsel, opts, callchain);
++>>>>>>> 01e0d50c3f95 (perf evsel: Rename config_callgraph() to config_callchain() and make it public)
  
  	if (opts->sample_intr_regs) {
  		attr->sample_regs_intr = opts->sample_intr_regs;
diff --cc tools/perf/util/evsel.h
index 8b108cb05d6f,1bd6c2e02dfa..000000000000
--- a/tools/perf/util/evsel.h
+++ b/tools/perf/util/evsel.h
@@@ -177,8 -178,14 +177,16 @@@ void perf_evsel__init(struct perf_evse
  void perf_evsel__exit(struct perf_evsel *evsel);
  void perf_evsel__delete(struct perf_evsel *evsel);
  
 -struct callchain_param;
 -
  void perf_evsel__config(struct perf_evsel *evsel,
++<<<<<<< HEAD
 +			struct record_opts *opts);
++=======
+ 			struct record_opts *opts,
+ 			struct callchain_param *callchain);
+ void perf_evsel__config_callchain(struct perf_evsel *evsel,
+ 				  struct record_opts *opts,
+ 				  struct callchain_param *callchain);
++>>>>>>> 01e0d50c3f95 (perf evsel: Rename config_callgraph() to config_callchain() and make it public)
  
  int __perf_evsel__sample_size(u64 sample_type);
  void perf_evsel__calc_id_pos(struct perf_evsel *evsel);
* Unmerged path tools/perf/util/evsel.c
* Unmerged path tools/perf/util/evsel.h
