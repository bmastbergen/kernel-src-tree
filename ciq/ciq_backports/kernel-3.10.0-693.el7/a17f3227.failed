kvm: x86: Expose Intel VPOPCNTDQ feature to guest

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Piotr Luc <piotr.luc@intel.com>
commit a17f32270af1e1054bbc8858b0f27226a2c859ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a17f3227.failed

Vector population count instructions for dwords and qwords are to be
used in future Intel Xeon & Xeon Phi processors. The bit 14 of
CPUID[level:0x07, ECX] indicates that the new instructions are
supported by a processor.

The spec can be found in the Intel Software Developer Manual (SDM)
or in the Instruction Set Extensions Programming Reference (ISE).

	Signed-off-by: Piotr Luc <piotr.luc@intel.com>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Radim Krčmář <rkrcmar@redhat.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: x86@kernel.org
	Cc: kvm@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
(cherry picked from commit a17f32270af1e1054bbc8858b0f27226a2c859ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/cpuid.c
diff --cc arch/x86/kvm/cpuid.c
index 7f642dfc1c1d,09c2ac741567..000000000000
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@@ -352,16 -370,24 +352,29 @@@ static inline int __do_cpuid_ent(struc
  		F(PMM) | F(PMM_EN);
  
  	/* cpuid 7.0.ebx */
 -	const u32 kvm_cpuid_7_0_ebx_x86_features =
 +	const u32 kvm_supported_word9_x86_features =
  		F(FSGSBASE) | F(BMI1) | F(HLE) | F(AVX2) | F(SMEP) |
  		F(BMI2) | F(ERMS) | f_invpcid | F(RTM) | f_mpx | F(RDSEED) |
 -		F(ADX) | F(SMAP) | F(AVX512IFMA) | F(AVX512F) | F(AVX512PF) |
 -		F(AVX512ER) | F(AVX512CD) | F(CLFLUSHOPT) | F(CLWB) | F(AVX512DQ) |
 -		F(SHA_NI) | F(AVX512BW) | F(AVX512VL);
 +		F(ADX) | F(SMAP) | F(AVX512F) | F(AVX512PF) | F(AVX512ER) |
 +		F(AVX512CD) | F(CLFLUSHOPT) | F(CLWB) | F(AVX512DQ) |
 +		F(AVX512BW) | F(AVX512VL);
  
  	/* cpuid 0xD.1.eax */
++<<<<<<< HEAD
 +	const u32 kvm_supported_word10_x86_features =
 +		F(XSAVEOPT) | F(XSAVEC) | F(XGETBV1);
++=======
+ 	const u32 kvm_cpuid_D_1_eax_x86_features =
+ 		F(XSAVEOPT) | F(XSAVEC) | F(XGETBV1) | f_xsaves;
+ 
+ 	/* cpuid 7.0.ecx*/
+ 	const u32 kvm_cpuid_7_0_ecx_x86_features =
+ 		F(AVX512VBMI) | F(PKU) | 0 /*OSPKE*/ | F(AVX512_VPOPCNTDQ);
+ 
+ 	/* cpuid 7.0.edx*/
+ 	const u32 kvm_cpuid_7_0_edx_x86_features =
+ 		KF(AVX512_4VNNIW) | KF(AVX512_4FMAPS);
++>>>>>>> a17f32270af1 (kvm: x86: Expose Intel VPOPCNTDQ feature to guest)
  
  	/* all calls to cpuid_count() should be made on the same cpu */
  	get_cpu();
* Unmerged path arch/x86/kvm/cpuid.c
