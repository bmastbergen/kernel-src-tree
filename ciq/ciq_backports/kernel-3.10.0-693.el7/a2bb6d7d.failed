ipv4: include NLM_F_APPEND flag in append route notifications

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Roopa Prabhu <roopa@cumulusnetworks.com>
commit a2bb6d7d6f4249691b6a554cde59969d55b0d9c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/a2bb6d7d.failed

This patch adds NLM_F_APPEND flag to struct nlmsg_hdr->nlmsg_flags
in newroute notifications if the route add was an append.
(This is similar to how NLM_F_REPLACE is already part of new
route replace notifications today)

This helps userspace determine if the route add operation was
an append.

	Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>
	Acked-by: Scott Feldman <sfeldma@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a2bb6d7d6f4249691b6a554cde59969d55b0d9c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/fib_trie.c
diff --cc net/ipv4/fib_trie.c
index a731822edc22,6c666a9f1bd5..000000000000
--- a/net/ipv4/fib_trie.c
+++ b/net/ipv4/fib_trie.c
@@@ -1200,8 -1240,8 +1203,13 @@@ int fib_table_insert(struct fib_table *
  		tb->tb_num_default++;
  
  	rt_cache_flush(cfg->fc_nlinfo.nl_net);
++<<<<<<< HEAD
 +	rtmsg_fib(RTM_NEWROUTE, htonl(key), new_fa, plen, tb->tb_id,
 +		  &cfg->fc_nlinfo, 0);
++=======
+ 	rtmsg_fib(RTM_NEWROUTE, htonl(key), new_fa, plen, new_fa->tb_id,
+ 		  &cfg->fc_nlinfo, nlflags);
++>>>>>>> a2bb6d7d6f42 (ipv4: include NLM_F_APPEND flag in append route notifications)
  succeeded:
  	return 0;
  
* Unmerged path net/ipv4/fib_trie.c
