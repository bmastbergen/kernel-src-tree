scsi: megaraid_sas: add correct return type check for ldio hint logic for raid1

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] megaraid_sas: add correct return type check for ldio hint logic for raid1 (Tomas Henzl) [1433861]
Rebuild_FUZZ: 96.05%
commit-author Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
commit 49524b3c6e12375627ddd870613fcc6b24909898
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/49524b3c.failed

Return value check of atomic_dec_if_positive is required as it returns
old value minus one.  Without this fix, driver will send small ios to
firmware path and that will be a performance issue.

Not critical, but good to have r1_ldio_hint as default value in sdev
private.

	Signed-off-by: Kashyap Desai <kashyap.desai@broadcom.com>
	Signed-off-by: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
	Reviewed-by: Tomas Henzl <thenzl@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 49524b3c6e12375627ddd870613fcc6b24909898)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/megaraid/megaraid_sas_base.c
#	drivers/scsi/megaraid/megaraid_sas_fusion.c
diff --cc drivers/scsi/megaraid/megaraid_sas_base.c
index c01cf34de1b9,0016f12cc563..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_base.c
+++ b/drivers/scsi/megaraid/megaraid_sas_base.c
@@@ -1887,8 -1964,8 +1887,13 @@@ scan_target
  		return -ENOMEM;
  	sdev->hostdata = mr_device_priv_data;
  
++<<<<<<< HEAD
 +	sdev->tagged_supported = 1;
 +	scsi_activate_tcq(sdev, sdev->queue_depth);
++=======
+ 	atomic_set(&mr_device_priv_data->r1_ldio_hint,
+ 		   instance->r1_ldio_hint_default);
++>>>>>>> 49524b3c6e12 (scsi: megaraid_sas: add correct return type check for ldio hint logic for raid1)
  	return 0;
  }
  
diff --cc drivers/scsi/megaraid/megaraid_sas_fusion.c
index 50ad36bc60c5,ebd746e2d97c..000000000000
--- a/drivers/scsi/megaraid/megaraid_sas_fusion.c
+++ b/drivers/scsi/megaraid/megaraid_sas_fusion.c
@@@ -1959,9 -2318,43 +1959,46 @@@ megasas_build_ldio_fusion(struct megasa
  		/* In ventura if stream detected for a read and it is read ahead
  		 *  capable make this IO as LDIO
  		 */
 -		if (is_stream_detected(&io_request->RaidContext.raid_context_g35) &&
 -		    io_info.isRead && io_info.ra_capable)
 +		if (io_request->RaidContext.raid_context_g35.stream_detected &&
 +				io_info.isRead && io_info.ra_capable)
  			fp_possible = false;
++<<<<<<< HEAD
++=======
+ 
+ 		/* FP for Optimal raid level 1.
+ 		 * All large RAID-1 writes (> 32 KiB, both WT and WB modes)
+ 		 * are built by the driver as LD I/Os.
+ 		 * All small RAID-1 WT writes (<= 32 KiB) are built as FP I/Os
+ 		 * (there is never a reason to process these as buffered writes)
+ 		 * All small RAID-1 WB writes (<= 32 KiB) are built as FP I/Os
+ 		 * with the SLD bit asserted.
+ 		 */
+ 		if (io_info.r1_alt_dev_handle != MR_DEVHANDLE_INVALID) {
+ 			mrdev_priv = scp->device->hostdata;
+ 
+ 			if (atomic_inc_return(&instance->fw_outstanding) >
+ 				(instance->host->can_queue)) {
+ 				fp_possible = false;
+ 				atomic_dec(&instance->fw_outstanding);
+ 			} else if ((scsi_buff_len > MR_LARGE_IO_MIN_SIZE) ||
+ 				   (atomic_dec_if_positive(&mrdev_priv->r1_ldio_hint) > 0)) {
+ 				fp_possible = false;
+ 				atomic_dec(&instance->fw_outstanding);
+ 				if (scsi_buff_len > MR_LARGE_IO_MIN_SIZE)
+ 					atomic_set(&mrdev_priv->r1_ldio_hint,
+ 						   instance->r1_ldio_hint_default);
+ 			}
+ 		}
+ 
+ 		/* If raid is NULL, set CPU affinity to default CPU0 */
+ 		if (raid)
+ 			megasas_set_raidflag_cpu_affinity(praid_context,
+ 				raid, fp_possible, io_info.isRead,
+ 				scsi_buff_len);
+ 		else
+ 			praid_context->raid_context_g35.routing_flags |=
+ 				(MR_RAID_CTX_CPUSEL_0 << MR_RAID_CTX_ROUTINGFLAGS_CPUSEL_SHIFT);
++>>>>>>> 49524b3c6e12 (scsi: megaraid_sas: add correct return type check for ldio hint logic for raid1)
  	}
  
  	if (fp_possible) {
* Unmerged path drivers/scsi/megaraid/megaraid_sas_base.c
* Unmerged path drivers/scsi/megaraid/megaraid_sas_fusion.c
