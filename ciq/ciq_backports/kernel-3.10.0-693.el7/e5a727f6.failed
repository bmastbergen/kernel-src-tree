bridge: Use ether_addr_copy and ETH_ALEN

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Joe Perches <joe@perches.com>
commit e5a727f6632654098fa4e87d8551a5873e8f658a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e5a727f6.failed

Convert the more obvious uses of memcpy to ether_addr_copy.

There are still uses of memcpy that could be converted but
these addresses are __aligned(2).

Convert a couple uses of 6 in gr_private.h to ETH_ALEN.

	Signed-off-by: Joe Perches <joe@perches.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e5a727f6632654098fa4e87d8551a5873e8f658a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_multicast.c
diff --cc net/bridge/br_multicast.c
index 251bf0711bce,c97c3c8ccdfb..000000000000
--- a/net/bridge/br_multicast.c
+++ b/net/bridge/br_multicast.c
@@@ -366,7 -363,7 +366,11 @@@ static struct sk_buff *br_ip4_multicast
  	skb_reset_mac_header(skb);
  	eth = eth_hdr(skb);
  
++<<<<<<< HEAD
 +	memcpy(eth->h_source, br->dev->dev_addr, 6);
++=======
+ 	ether_addr_copy(eth->h_source, br->dev->dev_addr);
++>>>>>>> e5a727f66326 (bridge: Use ether_addr_copy and ETH_ALEN)
  	eth->h_dest[0] = 1;
  	eth->h_dest[1] = 0;
  	eth->h_dest[2] = 0x5e;
@@@ -436,7 -433,7 +440,11 @@@ static struct sk_buff *br_ip6_multicast
  	skb_reset_mac_header(skb);
  	eth = eth_hdr(skb);
  
++<<<<<<< HEAD
 +	memcpy(eth->h_source, br->dev->dev_addr, 6);
++=======
+ 	ether_addr_copy(eth->h_source, br->dev->dev_addr);
++>>>>>>> e5a727f66326 (bridge: Use ether_addr_copy and ETH_ALEN)
  	eth->h_proto = htons(ETH_P_IPV6);
  	skb_put(skb, sizeof(*eth));
  
diff --git a/net/bridge/br_device.c b/net/bridge/br_device.c
index b21b978d905e..d4b01cc8c58b 100644
--- a/net/bridge/br_device.c
+++ b/net/bridge/br_device.c
@@ -390,7 +390,7 @@ void br_dev_setup(struct net_device *dev)
 	br->bridge_id.prio[0] = 0x80;
 	br->bridge_id.prio[1] = 0x00;
 
-	memcpy(br->group_addr, eth_reserved_addr_base, ETH_ALEN);
+	ether_addr_copy(br->group_addr, eth_reserved_addr_base);
 
 	br->stp_enabled = BR_NO_STP;
 	br->group_fwd_mask = BR_GROUPFWD_DEFAULT;
* Unmerged path net/bridge/br_multicast.c
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 4d51d7c12194..984d36f02159 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -49,12 +49,12 @@ typedef __u16 port_id;
 struct bridge_id
 {
 	unsigned char	prio[2];
-	unsigned char	addr[6];
+	unsigned char	addr[ETH_ALEN];
 };
 
 struct mac_addr
 {
-	unsigned char	addr[6];
+	unsigned char	addr[ETH_ALEN];
 };
 
 #ifdef CONFIG_BRIDGE_IGMP_SNOOPING
