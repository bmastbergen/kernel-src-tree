random: print a warning for the first ten uninitialized random users

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Theodore Ts'o <tytso@mit.edu>
commit 9b4d008787f864f17d008c9c15bbe8a0f7e2fc24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/9b4d0087.failed

Since systemd is consistently using /dev/urandom before it is
initialized, we can't see the other potentially dangerous users of
/dev/urandom immediately after boot.  So print the first ten such
complaints instead.

	Cc: stable@kernel.org
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit 9b4d008787f864f17d008c9c15bbe8a0f7e2fc24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/char/random.c
diff --cc drivers/char/random.c
index 8703daefb37b,d057438266bb..000000000000
--- a/drivers/char/random.c
+++ b/drivers/char/random.c
@@@ -1368,7 -1458,23 +1368,27 @@@ random_read(struct file *file, char __u
  static ssize_t
  urandom_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos)
  {
++<<<<<<< HEAD
 +	return extract_entropy_user(&nonblocking_pool, buf, nbytes);
++=======
+ 	static int maxwarn = 10;
+ 	int ret;
+ 
+ 	if (unlikely(nonblocking_pool.initialized == 0) &&
+ 	    maxwarn > 0) {
+ 		maxwarn--;
+ 		printk(KERN_NOTICE "random: %s: uninitialized urandom read "
+ 		       "(%zd bytes read, %d bits of entropy available)\n",
+ 		       current->comm, nbytes, nonblocking_pool.entropy_total);
+ 	}
+ 
+ 	nbytes = min_t(size_t, nbytes, INT_MAX >> (ENTROPY_SHIFT + 3));
+ 	ret = extract_entropy_user(&nonblocking_pool, buf, nbytes);
+ 
+ 	trace_urandom_read(8 * nbytes, ENTROPY_BITS(&nonblocking_pool),
+ 			   ENTROPY_BITS(&input_pool));
+ 	return ret;
++>>>>>>> 9b4d008787f8 (random: print a warning for the first ten uninitialized random users)
  }
  
  static unsigned int
* Unmerged path drivers/char/random.c
