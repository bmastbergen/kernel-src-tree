bridge: Add br_netif_receive_skb remove netif_receive_skb_sk

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Eric W. Biederman <ebiederm@xmission.com>
commit 04eb44890e5bb3cc855e5c0f18a05eb7311364b7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/04eb4489.failed

netif_receive_skb_sk is only called once in the bridge code, replace
it with a bridge specific function that calls netif_receive_skb.

	Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 04eb44890e5bb3cc855e5c0f18a05eb7311364b7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdevice.h
#	net/core/dev.c
diff --cc include/linux/netdevice.h
index f1dbb3a4ae20,97ab5c9a7069..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -3138,7 -2985,6 +3138,10 @@@ static inline void dev_consume_skb_any(
  
  int netif_rx(struct sk_buff *skb);
  int netif_rx_ni(struct sk_buff *skb);
++<<<<<<< HEAD
 +int netif_receive_skb_sk(struct sock *sk, struct sk_buff *skb);
++=======
++>>>>>>> 04eb44890e5b (bridge: Add br_netif_receive_skb remove netif_receive_skb_sk)
  int netif_receive_skb(struct sk_buff *skb);
  gro_result_t napi_gro_receive(struct napi_struct *napi, struct sk_buff *skb);
  void napi_gro_flush(struct napi_struct *napi, bool flush_old);
diff --cc net/core/dev.c
index 0198b4df7270,7db9b012dfb7..000000000000
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@@ -3924,12 -3989,6 +3924,15 @@@ int netif_receive_skb(struct sk_buff *s
  	return netif_receive_skb_internal(skb);
  }
  EXPORT_SYMBOL(netif_receive_skb);
++<<<<<<< HEAD
 +
 +int netif_receive_skb_sk(struct sock *sk, struct sk_buff *skb)
 +{
 +	return netif_receive_skb(skb);
 +}
 +EXPORT_SYMBOL(netif_receive_skb_sk);
++=======
++>>>>>>> 04eb44890e5b (bridge: Add br_netif_receive_skb remove netif_receive_skb_sk)
  
  /* Network device is going away, flush any packets still pending
   * Called with irqs disabled.
* Unmerged path include/linux/netdevice.h
diff --git a/net/bridge/br_input.c b/net/bridge/br_input.c
index ddc6cbe6269c..1dd4e28b078e 100644
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@ -24,6 +24,11 @@
 br_should_route_hook_t __rcu *br_should_route_hook __read_mostly;
 EXPORT_SYMBOL(br_should_route_hook);
 
+static int br_netif_receive_skb(struct sock *sk, struct sk_buff *skb)
+{
+	return netif_receive_skb(skb);
+}
+
 static int br_pass_frame_up(struct sk_buff *skb)
 {
 	struct net_device *indev, *brdev = BR_INPUT_SKB_CB(skb)->brdev;
@@ -55,7 +60,7 @@ static int br_pass_frame_up(struct sk_buff *skb)
 
 	return NF_HOOK(NFPROTO_BRIDGE, NF_BR_LOCAL_IN, NULL, skb,
 		       indev, NULL,
-		       netif_receive_skb_sk);
+		       br_netif_receive_skb);
 }
 
 /* note: already called with rcu_read_lock */
* Unmerged path net/core/dev.c
