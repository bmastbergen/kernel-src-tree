net: bridge: log port STP state on change

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [net] bridge: log port STP state on change (Ivan Vecera) [1275772 1297841 1331748]
Rebuild_FUZZ: 93.51%
commit-author Vivien Didelot <vivien.didelot@savoirfairelinux.com>
commit 7c25b16dbbcf37ce8019bacf634ee47d852225d9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/7c25b16d.failed

Remove the shared br_log_state function and print the info directly in
br_set_state, where the net_bridge_port state is actually changed.

	Signed-off-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
	Acked-by: Ido Schimmel <idosch@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7c25b16dbbcf37ce8019bacf634ee47d852225d9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/br_stp.c
diff --cc net/bridge/br_stp.c
index 48a6519f8bc7,c22816a0b1b1..000000000000
--- a/net/bridge/br_stp.c
+++ b/net/bridge/br_stp.c
@@@ -29,16 -30,25 +29,20 @@@ static const char *const br_port_state_
  	[BR_STATE_BLOCKING] = "blocking",
  };
  
- void br_log_state(const struct net_bridge_port *p)
- {
- 	br_info(p->br, "port %u(%s) entered %s state\n",
- 		(unsigned int) p->port_no, p->dev->name,
- 		br_port_state_names[p->state]);
- }
- 
  void br_set_state(struct net_bridge_port *p, unsigned int state)
  {
 -	struct switchdev_attr attr = {
 -		.orig_dev = p->dev,
 -		.id = SWITCHDEV_ATTR_ID_PORT_STP_STATE,
 -		.flags = SWITCHDEV_F_DEFER,
 -		.u.stp_state = state,
 -	};
 -	int err;
 -
  	p->state = state;
++<<<<<<< HEAD
++=======
+ 	err = switchdev_port_attr_set(p->dev, &attr);
+ 	if (err && err != -EOPNOTSUPP)
+ 		br_warn(p->br, "error setting offload STP state on port %u(%s)\n",
+ 				(unsigned int) p->port_no, p->dev->name);
+ 	else
+ 		br_info(p->br, "port %u(%s) entered %s state\n",
+ 				(unsigned int) p->port_no, p->dev->name,
+ 				br_port_state_names[p->state]);
++>>>>>>> 7c25b16dbbcf (net: bridge: log port STP state on change)
  }
  
  /* called under bridge lock */
diff --git a/net/bridge/br_netlink.c b/net/bridge/br_netlink.c
index 52cf83faf183..b7d8b2718d0a 100644
--- a/net/bridge/br_netlink.c
+++ b/net/bridge/br_netlink.c
@@ -443,7 +443,6 @@ static int br_set_port_state(struct net_bridge_port *p, u8 state)
 		return -ENETDOWN;
 
 	br_set_state(p, state);
-	br_log_state(p);
 	br_port_state_selection(p->br);
 	return 0;
 }
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index b75519ca3c51..00331f690e19 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -773,7 +773,6 @@ static inline void br_nf_core_fini(void) {}
 #endif
 
 /* br_stp.c */
-void br_log_state(const struct net_bridge_port *p);
 void br_set_state(struct net_bridge_port *p, unsigned int state);
 struct net_bridge_port *br_get_port(struct net_bridge *br, u16 port_no);
 void br_init_port(struct net_bridge_port *p);
* Unmerged path net/bridge/br_stp.c
diff --git a/net/bridge/br_stp_if.c b/net/bridge/br_stp_if.c
index a07f1912e46f..026127e634ce 100644
--- a/net/bridge/br_stp_if.c
+++ b/net/bridge/br_stp_if.c
@@ -100,7 +100,6 @@ void br_stp_enable_port(struct net_bridge_port *p)
 {
 	br_init_port(p);
 	br_port_state_selection(p->br);
-	br_log_state(p);
 	br_ifinfo_notify(RTM_NEWLINK, p);
 }
 
@@ -116,7 +115,6 @@ void br_stp_disable_port(struct net_bridge_port *p)
 	p->topology_change_ack = 0;
 	p->config_pending = 0;
 
-	br_log_state(p);
 	br_ifinfo_notify(RTM_NEWLINK, p);
 
 	del_timer(&p->message_age_timer);
diff --git a/net/bridge/br_stp_timer.c b/net/bridge/br_stp_timer.c
index 532686a1d875..81e532c41fd7 100644
--- a/net/bridge/br_stp_timer.c
+++ b/net/bridge/br_stp_timer.c
@@ -96,7 +96,6 @@ static void br_forward_delay_timer_expired(unsigned long arg)
 			br_topology_change_detection(br);
 		netif_carrier_on(br->dev);
 	}
-	br_log_state(p);
 	rcu_read_lock();
 	br_ifinfo_notify(RTM_NEWLINK, p);
 	rcu_read_unlock();
