sched/idle: Add missing checks to the exit condition of cpu_idle_poll()

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Preeti U Murthy <preeti@linux.vnet.ibm.com>
commit ff6f2d29bd31cdfa1ac494a8b26d2af8ba887d59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/ff6f2d29.failed

cpu_idle_poll() is entered into when either the cpu_idle_force_poll is set or
tick_check_broadcast_expired() returns true. The exit condition from
cpu_idle_poll() is tif_need_resched().

However this does not take into account scenarios where cpu_idle_force_poll
changes or tick_check_broadcast_expired() returns false, without setting
the resched flag. So a cpu will be caught in cpu_idle_poll() needlessly,
thereby wasting power. Add an explicit check on cpu_idle_force_poll and
tick_check_broadcast_expired() to the exit condition of cpu_idle_poll()
to avoid this.

	Signed-off-by: Preeti U Murthy <preeti@linux.vnet.ibm.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Cc: linuxppc-dev@lists.ozlabs.org
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
Link: http://lkml.kernel.org/r/20150121105655.15279.59626.stgit@preeti.in.ibm.com
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit ff6f2d29bd31cdfa1ac494a8b26d2af8ba887d59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cpu/idle.c
diff --cc kernel/cpu/idle.c
index 17cff35977d5,aaf1c1d5cf5d..000000000000
--- a/kernel/cpu/idle.c
+++ b/kernel/cpu/idle.c
@@@ -46,10 -47,9 +46,15 @@@ static inline int cpu_idle_poll(void
  	rcu_idle_enter();
  	trace_cpu_idle_rcuidle(0, smp_processor_id());
  	local_irq_enable();
++<<<<<<< HEAD:kernel/cpu/idle.c
 +	stop_critical_timings();
 +	while (!tif_need_resched())
++=======
+ 	while (!tif_need_resched() &&
+ 		(cpu_idle_force_poll || tick_check_broadcast_expired()))
++>>>>>>> ff6f2d29bd31 (sched/idle: Add missing checks to the exit condition of cpu_idle_poll()):kernel/sched/idle.c
  		cpu_relax();
 +	start_critical_timings();
  	trace_cpu_idle_rcuidle(PWR_EVENT_EXIT, smp_processor_id());
  	rcu_idle_exit();
  	return 1;
* Unmerged path kernel/cpu/idle.c
