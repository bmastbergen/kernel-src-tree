usb: ulpi: rename operations {read|write}_dev to simply {read|write}

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Tal Shorer <tal.shorer@gmail.com>
commit e6f74849784ccf275226d5d3ddfb96c71fa90383
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/e6f74849.failed

With the removal of the old {read|write} operations, we can now safely
rename the new api operations {read|write}_dev to use the shorter and
clearer names {read|write}, respectively.

	Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Signed-off-by: Tal Shorer <tal.shorer@gmail.com>
	Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
(cherry picked from commit e6f74849784ccf275226d5d3ddfb96c71fa90383)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/dwc3/ulpi.c
* Unmerged path drivers/usb/dwc3/ulpi.c
diff --git a/drivers/usb/common/ulpi.c b/drivers/usb/common/ulpi.c
index d682cf2e822e..da17a7442ce0 100644
--- a/drivers/usb/common/ulpi.c
+++ b/drivers/usb/common/ulpi.c
@@ -21,13 +21,13 @@
 
 int ulpi_read(struct ulpi *ulpi, u8 addr)
 {
-	return ulpi->ops->read_dev(ulpi->dev.parent, addr);
+	return ulpi->ops->read(ulpi->dev.parent, addr);
 }
 EXPORT_SYMBOL_GPL(ulpi_read);
 
 int ulpi_write(struct ulpi *ulpi, u8 addr, u8 val)
 {
-	return ulpi->ops->write_dev(ulpi->dev.parent, addr, val);
+	return ulpi->ops->write(ulpi->dev.parent, addr, val);
 }
 EXPORT_SYMBOL_GPL(ulpi_write);
 
* Unmerged path drivers/usb/dwc3/ulpi.c
diff --git a/include/linux/ulpi/interface.h b/include/linux/ulpi/interface.h
index 71f3c99771aa..ac3cd8058d9c 100644
--- a/include/linux/ulpi/interface.h
+++ b/include/linux/ulpi/interface.h
@@ -13,8 +13,8 @@ struct ulpi;
  */
 struct ulpi_ops {
 	struct device *dev;
-	int (*read_dev)(struct device *dev, u8 addr);
-	int (*write_dev)(struct device *dev, u8 addr, u8 val);
+	int (*read)(struct device *dev, u8 addr);
+	int (*write)(struct device *dev, u8 addr, u8 val);
 };
 
 struct ulpi *ulpi_register_interface(struct device *, struct ulpi_ops *);
