bnxt_en: Check if firmware LLDP agent is running.

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [netdrv] bnxt_en: Check if firmware LLDP agent is running (Jonathan Toppins) [1433476]
Rebuild_FUZZ: 98.97%
commit-author Michael Chan <michael.chan@broadcom.com>
commit bc39f885a9c3bdbff0a96ecaf07b162a78eff6e4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/bc39f885.failed

Set DCB_CAP_DCBX_HOST capability flag only if the firmware LLDP agent
is not running.

	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bc39f885a9c3bdbff0a96ecaf07b162a78eff6e4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.h
#	drivers/net/ethernet/broadcom/bnxt/bnxt_dcb.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.h
index 73ebeccc65f3,c7a5b84a5cb2..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
@@@ -969,6 -986,14 +969,17 @@@ struct bnxt 
  	#define BNXT_FLAG_PORT_STATS	0x400
  	#define BNXT_FLAG_UDP_RSS_CAP	0x800
  	#define BNXT_FLAG_EEE_CAP	0x1000
++<<<<<<< HEAD
++=======
+ 	#define BNXT_FLAG_NEW_RSS_CAP	0x2000
+ 	#define BNXT_FLAG_ROCEV1_CAP	0x8000
+ 	#define BNXT_FLAG_ROCEV2_CAP	0x10000
+ 	#define BNXT_FLAG_ROCE_CAP	(BNXT_FLAG_ROCEV1_CAP |	\
+ 					 BNXT_FLAG_ROCEV2_CAP)
+ 	#define BNXT_FLAG_NO_AGG_RINGS	0x20000
+ 	#define BNXT_FLAG_RX_PAGE_MODE	0x40000
+ 	#define BNXT_FLAG_FW_LLDP_AGENT	0x80000
++>>>>>>> bc39f885a9c3 (bnxt_en: Check if firmware LLDP agent is running.)
  	#define BNXT_FLAG_CHIP_NITRO_A0	0x1000000
  
  	#define BNXT_FLAG_ALL_CONFIG_FEATS (BNXT_FLAG_TPA |		\
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_dcb.c
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt.c b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
index 916c1c57ac05..fab494c034eb 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@ -4226,6 +4226,10 @@ static int bnxt_hwrm_func_qcfg(struct bnxt *bp)
 		vf->vlan = le16_to_cpu(resp->vlan) & VLAN_VID_MASK;
 	}
 #endif
+	if (BNXT_PF(bp) && (le16_to_cpu(resp->flags) &
+			    FUNC_QCFG_RESP_FLAGS_FW_DCBX_AGENT_ENABLED))
+		bp->flags |= BNXT_FLAG_FW_LLDP_AGENT;
+
 	switch (resp->port_partition_type) {
 	case FUNC_QCFG_RESP_PORT_PARTITION_TYPE_NPAR1_0:
 	case FUNC_QCFG_RESP_PORT_PARTITION_TYPE_NPAR1_5:
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.h
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_dcb.c
