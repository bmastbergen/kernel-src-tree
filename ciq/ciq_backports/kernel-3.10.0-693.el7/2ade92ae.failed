scsi: lpfc: code cleanups in NVME initiator base

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] lpfc: code cleanups in NVME initiator base (Ewan Milne) [1384922]
Rebuild_FUZZ: 93.33%
commit-author James Smart <jsmart2021@gmail.com>
commit 2ade92ae6d6572858acb2bde6d3664af3ad592e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/2ade92ae.failed

This patch addresses the smatch issues identified by Dan Carpenter
in http://www.spinics.net/lists/linux-scsi/msg105663.html

The issues are:

drivers/scsi/lpfc/lpfc_hbadisc.c:316 lpfc_dev_loss_tmo_handler()
warn: we tested 'vport->load_flag & 2' before and it was 'false'

Action: removed item from test

drivers/scsi/lpfc/lpfc_hbadisc.c:701 lpfc_work_done()
warn: test_bit() takes a bit number

Action: changed definition so bit number

drivers/scsi/lpfc/lpfc_hbadisc.c:2206 lpfc_mbx_cmpl_fcf_scan_read_fcf_rec()
error: uninitialized symbol 'vlan_id'.
drivers/scsi/lpfc/lpfc_hbadisc.c:2582 lpfc_mbx_cmpl_fcf_rr_read_fcf_rec()
error: uninitialized symbol 'vlan_id'.
drivers/scsi/lpfc/lpfc_hbadisc.c:2683 lpfc_mbx_cmpl_read_fcf_rec() error:
uninitialized symbol 'vlan_id'.

Action: initilized value

drivers/scsi/lpfc/lpfc_hbadisc.c:4025 lpfc_register_remote_port()
error: we previously assumed 'rdata' could be null (see line 4023)

Action: refactored check block

drivers/scsi/lpfc/lpfc_hbadisc.c:4613 lpfc_sli4_dequeue_nport_iocbs()
error: double unlock 'irq:'

Action: removed inner irq reference

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 2ade92ae6d6572858acb2bde6d3664af3ad592e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_hbadisc.c
diff --cc drivers/scsi/lpfc/lpfc_hbadisc.c
index 27f6a0bdf820,180b072beef6..000000000000
--- a/drivers/scsi/lpfc/lpfc_hbadisc.c
+++ b/drivers/scsi/lpfc/lpfc_hbadisc.c
@@@ -2147,8 -2174,7 +2146,12 @@@ lpfc_mbx_cmpl_fcf_scan_read_fcf_rec(str
  	uint32_t boot_flag, addr_mode;
  	uint16_t fcf_index, next_fcf_index;
  	struct lpfc_fcf_rec *fcf_rec = NULL;
++<<<<<<< HEAD
 +	uint16_t vlan_id;
 +	uint32_t seed;
++=======
+ 	uint16_t vlan_id = LPFC_FCOE_NULL_VID;
++>>>>>>> 2ade92ae6d65 (scsi: lpfc: code cleanups in NVME initiator base)
  	bool select_new_fcf;
  	int rc;
  
@@@ -4428,6 -4567,54 +4433,57 @@@ lpfc_check_sli_ndlp(struct lpfc_hba *ph
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static void
+ __lpfc_dequeue_nport_iocbs(struct lpfc_hba *phba,
+ 		struct lpfc_nodelist *ndlp, struct lpfc_sli_ring *pring,
+ 		struct list_head *dequeue_list)
+ {
+ 	struct lpfc_iocbq *iocb, *next_iocb;
+ 
+ 	list_for_each_entry_safe(iocb, next_iocb, &pring->txq, list) {
+ 		/* Check to see if iocb matches the nport */
+ 		if (lpfc_check_sli_ndlp(phba, pring, iocb, ndlp))
+ 			/* match, dequeue */
+ 			list_move_tail(&iocb->list, dequeue_list);
+ 	}
+ }
+ 
+ static void
+ lpfc_sli3_dequeue_nport_iocbs(struct lpfc_hba *phba,
+ 		struct lpfc_nodelist *ndlp, struct list_head *dequeue_list)
+ {
+ 	struct lpfc_sli *psli = &phba->sli;
+ 	uint32_t i;
+ 
+ 	spin_lock_irq(&phba->hbalock);
+ 	for (i = 0; i < psli->num_rings; i++)
+ 		__lpfc_dequeue_nport_iocbs(phba, ndlp, &psli->sli3_ring[i],
+ 						dequeue_list);
+ 	spin_unlock_irq(&phba->hbalock);
+ }
+ 
+ static void
+ lpfc_sli4_dequeue_nport_iocbs(struct lpfc_hba *phba,
+ 		struct lpfc_nodelist *ndlp, struct list_head *dequeue_list)
+ {
+ 	struct lpfc_sli_ring *pring;
+ 	struct lpfc_queue *qp = NULL;
+ 
+ 	spin_lock_irq(&phba->hbalock);
+ 	list_for_each_entry(qp, &phba->sli4_hba.lpfc_wq_list, wq_list) {
+ 		pring = qp->pring;
+ 		if (!pring)
+ 			continue;
+ 		spin_lock(&pring->ring_lock);
+ 		__lpfc_dequeue_nport_iocbs(phba, ndlp, pring, dequeue_list);
+ 		spin_unlock(&pring->ring_lock);
+ 	}
+ 	spin_unlock_irq(&phba->hbalock);
+ }
+ 
++>>>>>>> 2ade92ae6d65 (scsi: lpfc: code cleanups in NVME initiator base)
  /*
   * Free resources / clean up outstanding I/Os
   * associated with nlp_rpi in the LPFC_NODELIST entry.
diff --git a/drivers/scsi/lpfc/lpfc.h b/drivers/scsi/lpfc/lpfc.h
index 79f57d03022e..2aca50310ba1 100644
--- a/drivers/scsi/lpfc/lpfc.h
+++ b/drivers/scsi/lpfc/lpfc.h
@@ -100,7 +100,7 @@ struct lpfc_sli2_slim;
 #define LPFC_MSIX_VECTORS	2
 
 /* lpfc wait event data ready flag */
-#define LPFC_DATA_READY		(1<<0)
+#define LPFC_DATA_READY		0	/* bit 0 */
 
 /* queue dump line buffer size */
 #define LPFC_LBUF_SZ		128
* Unmerged path drivers/scsi/lpfc/lpfc_hbadisc.c
