KVM: PPC: Book3S HV: Counters for passthrough IRQ stats

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
commit-author Suresh Warrier <warrier@linux.vnet.ibm.com>
commit 65e7026a6c90484fbaa076d2c51e61baf7241960
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/65e7026a.failed

Add VCPU stat counters to track affinity for passthrough
interrupts.

pthru_all: Counts all passthrough interrupts whose IRQ mappings are
           in the kvmppc_passthru_irq_map structure.
pthru_host: Counts all cached passthrough interrupts that were injected
	    from the host through kvm_set_irq (i.e. not handled in
	    real mode).
pthru_bad_aff: Counts how many cached passthrough interrupts have
               bad affinity (receiving CPU is not running VCPU that is
	       the target of the virtual interrupt in the guest).

	Signed-off-by: Suresh Warrier <warrier@linux.vnet.ibm.com>
	Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
(cherry picked from commit 65e7026a6c90484fbaa076d2c51e61baf7241960)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/kvm/book3s_hv_rm_xics.c
diff --cc arch/powerpc/kvm/book3s_hv_rm_xics.c
index 37eb41dc50c9,82ff5de8b1e7..000000000000
--- a/arch/powerpc/kvm/book3s_hv_rm_xics.c
+++ b/arch/powerpc/kvm/book3s_hv_rm_xics.c
@@@ -622,6 -715,21 +622,24 @@@ int kvmppc_rm_h_eoi(struct kvm_vcpu *vc
  		icp->rm_action |= XICS_RM_NOTIFY_EOI;
  		icp->rm_eoied_irq = irq;
  	}
++<<<<<<< HEAD
++=======
+ 
+ 	if (state->host_irq) {
+ 		++vcpu->stat.pthru_all;
+ 		if (state->intr_cpu != -1) {
+ 			int pcpu = raw_smp_processor_id();
+ 
+ 			pcpu = cpu_first_thread_sibling(pcpu);
+ 			++vcpu->stat.pthru_host;
+ 			if (state->intr_cpu != pcpu) {
+ 				++vcpu->stat.pthru_bad_aff;
+ 				xics_opal_rm_set_server(state->host_irq, pcpu);
+ 			}
+ 			state->intr_cpu = -1;
+ 		}
+ 	}
++>>>>>>> 65e7026a6c90 (KVM: PPC: Book3S HV: Counters for passthrough IRQ stats)
   bail:
  	return check_too_hard(xics, icp);
  }
diff --git a/arch/powerpc/include/asm/kvm_host.h b/arch/powerpc/include/asm/kvm_host.h
index 8841a038084f..36bd09263310 100644
--- a/arch/powerpc/include/asm/kvm_host.h
+++ b/arch/powerpc/include/asm/kvm_host.h
@@ -128,6 +128,9 @@ struct kvm_vcpu_stat {
 	u32 ld_slow;
 	u32 st_slow;
 #endif
+	u64 pthru_all;
+	u64 pthru_host;
+	u64 pthru_bad_aff;
 };
 
 enum kvm_exit_types {
diff --git a/arch/powerpc/kvm/book3s.c b/arch/powerpc/kvm/book3s.c
index a2a3b2997330..1a9790323f14 100644
--- a/arch/powerpc/kvm/book3s.c
+++ b/arch/powerpc/kvm/book3s.c
@@ -63,6 +63,9 @@ struct kvm_stats_debugfs_item debugfs_entries[] = {
 	{ "ld_slow",     VCPU_STAT(ld_slow) },
 	{ "st",          VCPU_STAT(st) },
 	{ "st_slow",     VCPU_STAT(st_slow) },
+	{ "pthru_all",       VCPU_STAT(pthru_all) },
+	{ "pthru_host",      VCPU_STAT(pthru_host) },
+	{ "pthru_bad_aff",   VCPU_STAT(pthru_bad_aff) },
 	{ NULL }
 };
 
* Unmerged path arch/powerpc/kvm/book3s_hv_rm_xics.c
