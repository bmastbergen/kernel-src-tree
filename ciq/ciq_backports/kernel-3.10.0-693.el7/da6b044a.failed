scsi: lpfc: correct double print

jira LE-1907
Rebuild_History Non-Buildable kernel-3.10.0-693.el7
Rebuild_CHGLOG: - [scsi] lpfc: correct double print (Ewan Milne) [1384922]
Rebuild_FUZZ: 89.66%
commit-author James Smart <jsmart2021@gmail.com>
commit da6b044a28fe603fe2c3fd908cda8150aa0abe74
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-3.10.0-693.el7/da6b044a.failed

Correct a merge error that had debug data printed twice for the
same element

	Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
	Signed-off-by: James Smart <james.smart@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit da6b044a28fe603fe2c3fd908cda8150aa0abe74)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_debugfs.c
diff --cc drivers/scsi/lpfc/lpfc_debugfs.c
index 4dc8eba541b9,913eed822cb8..000000000000
--- a/drivers/scsi/lpfc/lpfc_debugfs.c
+++ b/drivers/scsi/lpfc/lpfc_debugfs.c
@@@ -2541,12 -3642,39 +2541,26 @@@ lpfc_idiag_queacc_write(struct file *fi
  			idiag.ptr_private = phba->sli4_hba.els_cq;
  			goto pass_check;
  		}
++<<<<<<< HEAD
++=======
+ 		/* NVME LS complete queue */
+ 		if (phba->sli4_hba.nvmels_cq &&
+ 		    phba->sli4_hba.nvmels_cq->queue_id == queid) {
+ 			/* Sanity check */
+ 			rc = lpfc_idiag_que_param_check(
+ 					phba->sli4_hba.nvmels_cq, index, count);
+ 			if (rc)
+ 				goto error_out;
+ 			idiag.ptr_private = phba->sli4_hba.nvmels_cq;
+ 			goto pass_check;
+ 		}
++>>>>>>> da6b044a28fe (scsi: lpfc: correct double print)
  		/* FCP complete queue */
  		if (phba->sli4_hba.fcp_cq) {
 -			for (qidx = 0; qidx < phba->cfg_fcp_io_channel;
 -								qidx++) {
 -				qp = phba->sli4_hba.fcp_cq[qidx];
 -				if (qp && qp->queue_id == queid) {
 -					/* Sanity check */
 -					rc = lpfc_idiag_que_param_check(
 -						qp, index, count);
 -					if (rc)
 -						goto error_out;
 -					idiag.ptr_private = qp;
 -					goto pass_check;
 -				}
 -			}
 -		}
 -		/* NVME complete queue */
 -		if (phba->sli4_hba.nvme_cq) {
  			qidx = 0;
  			do {
 -				if (phba->sli4_hba.nvme_cq[qidx] &&
 -				    phba->sli4_hba.nvme_cq[qidx]->queue_id ==
 +				if (phba->sli4_hba.fcp_cq[qidx] &&
 +				    phba->sli4_hba.fcp_cq[qidx]->queue_id ==
  				    queid) {
  					/* Sanity check */
  					rc = lpfc_idiag_que_param_check(
@@@ -2588,6 -3716,17 +2602,20 @@@
  			idiag.ptr_private = phba->sli4_hba.els_wq;
  			goto pass_check;
  		}
++<<<<<<< HEAD
++=======
+ 		/* NVME LS work queue */
+ 		if (phba->sli4_hba.nvmels_wq &&
+ 		    phba->sli4_hba.nvmels_wq->queue_id == queid) {
+ 			/* Sanity check */
+ 			rc = lpfc_idiag_que_param_check(
+ 					phba->sli4_hba.nvmels_wq, index, count);
+ 			if (rc)
+ 				goto error_out;
+ 			idiag.ptr_private = phba->sli4_hba.nvmels_wq;
+ 			goto pass_check;
+ 		}
++>>>>>>> da6b044a28fe (scsi: lpfc: correct double print)
  		/* FCP work queue */
  		if (phba->sli4_hba.fcp_wq) {
  			for (qidx = 0; qidx < phba->cfg_fcp_io_channel;
* Unmerged path drivers/scsi/lpfc/lpfc_debugfs.c
